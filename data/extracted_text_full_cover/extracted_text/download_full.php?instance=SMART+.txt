SMART 2019
The Eighth International Conference on Smart Cities, Systems, Devices and
Technologies
ISBN: 978-1-61208-730-6
July 28 – August 2, 2019
Nice, France
SMART 2019 Editors
Lasse Berntzen, University of South-Eastern Norway, Norway

SMART 2019
Forward
The Eighth International Conference on Smart Cities, Systems, Devices and Technologies (SMART
2019), held between July 28, 2019 and August 02, 2019 in Nice, France, continued a series of events
covering tendencies towards future smart cities, specialized technologies and devices, environmental
sensing, energy optimization, pollution control and socio-cultural aspects.
Digital societies take rapid developments toward smart environments. More and more social services
are digitally available to the citizens. The concept of ‘smart cities’ including all devices, services,
technologies and applications associated with the concept sees a large adoption. Ubiquity and mobility
added new dimensions to smart environments. Adoption of smartphones and digital finder maps, and
increasing budgets for technical support of services to citizens settled a new behavioral paradigm of city
inhabitants.
The conference included academic, research, and industrial contributions. It had the following
tracks:

Mobility monitoring and control in smart environments

Digital cities
We take here the opportunity to warmly thank all the members of the SMART 2019 technical
program committee, as well as all the reviewers. The creation of such a high quality conference program
would not have been possible without their involvement. We also kindly thank all the authors who
dedicated much of their time and effort to contribute to SMART 2019. We truly believe that, thanks to
all these efforts, the final conference program consisted of top quality contributions.
We also thank the members of the SMART 2019 organizing committee for their help in handling the
logistics and for their work that made this professional meeting a success.
We hope that SMART 2019 was a successful international forum for the exchange of ideas and
results between academia and industry and to promote further progress in the area of smart cities,
systems, devices and technologies. We also hope that Nice, France provided a pleasant environment
during the conference and everyone saved some time to enjoy the charm of the city.
SMART 2019 Chairs
SMART Steering Committee
Wolfgang Leister, Norsk Regnesentral, Norway
Christine Perakslis, Johnson & Wales University, USA
Brendan O'Flynn, Tyndall National Institute | University College Cork, Ireland
Sanja Lazarova-Molnar, University of Southern Denmark, Denmark
Lasse Berntzen, University of South-Eastern Norway, Norway
Markus Taumberger, VTT Technical Research Center of Finland Ltd., Finland
Jianguo Ding, University of Skövde, Sweden

SMART Industry/Research Advisory Committee
Steffen Fries, Siemens AG, Germany
Andrea Vinci, CNR - National Research Council of Italy | Institute for High Performance Computing and
Networking (ICAR), Italy

SMART 2019
Committee
SMART Steering Committee
Wolfgang Leister, Norsk Regnesentral, Norway
Christine Perakslis, Johnson & Wales University, USA
Brendan O'Flynn, Tyndall National Institute | University College Cork, Ireland
Sanja Lazarova-Molnar, University of Southern Denmark, Denmark
Lasse Berntzen, University of South-Eastern Norway, Norway
Markus Taumberger, VTT Technical Research Center of Finland Ltd., Finland
Jianguo Ding, University of Skövde, Sweden
SMART Industry/Research Advisory Committee
Steffen Fries, Siemens AG, Germany
Andrea Vinci, CNR - National Research Council of Italy | Institute for High Performance Computing and
Networking (ICAR), Italy
SMART 2019 Technical Program Committee
Lounis Adouane, Institut Pascal / Université Clermont Auvergne, France
Sukaina Al-Nasrawi, Beirut Arab University, Lebanon
Cristina Alcaraz, University of Malaga, Spain
Ryosuke Ando, TTRI (Toyota Transportation Research Institute), Japan
Georg Aumayr, Johanniter, Austria
Petko Bakalov, Environmental Systems Research Institute (ESRI), USA
Jie Bao, Microsoft Research, China
Karolina Baras, Madeira Interactive Technologies Institute (M-ITI) - University of Madeira, Portugal
Kashinath Basu, Oxford Brookes University, UK
Mohammed Bennamoun, The University of Western Australia, Australia
Lasse Berntzen, University of South-Eastern Norway, Norway
Chongguang Bi, Michigan State University, USA
Ramon F. Brena, Tecnologico de Monterrey, Mexico
David Brosset, Naval Academy Research Institute, France
Nélio Cacho, Federal University of Rio Grande do Norte, Brazil
Vicente Carabias-Hütter, ZHAW Zurich University of Applied Sciences, Switzerland
Juan-Carlos Cano, Universitat Politecnica de Valencia, Spain
Raffaele Carli, Politecnico di Bari, Italy
Rosa Cervera, Universidad de Alcalá, Spain
Dimitris Chatzopoulos, The Hong Kong University of Science and Technology, Hong Kong
Yuen Chau, Singapore University of Technology and Design, Singapore
DeJiu Chen, KTH Royal Institute of Technology, Sweden
Seyed Ali Cheraghi, Wichita State University, USA

Yao-Yi Chiang, University of Southern California, USA
Patrizio Dazzi, ISTI-CNR,
María del Mar Gómez Zamora, Universidad Rey Juan Carlos, Spain
Jianguo Ding, University of Skövde, Sweden
Karim Djemame, University of Leeds, UK
Mariagrazia Dotoli, Politecnico di Bari, Italy
Abdelali El Bouchti, Institute for Forecasting and Futuristics (I2F) - Bournemouth University, UK / Hassan
2nd University, Casablanca, Morocco
Markus Endler, PUC-Rio, Brazil
Ava Fatah gen Schieck, The Bartlett School of Architecture | University College London, UK
Adrian Florea, 'Lucian Blaga' University of Sibiu, Romania
Lidia Fotia, University Mediterranea of Reggio Calabria, Italy
Steffen Fries, Siemens AG, Germany
Angelo Furno, Université de Lyon, France
Ivan Ganchev, University of Limerick, Ireland / Plovdiv University "Paisii Hilendarski", Bulgaria
Mariusz Giergiel, AGH University of Science and Technology, Krakow, Poland
Yann Glouche, INRIA, Caen, France, France
Katie Goeman, KU Leuven - University of Leuven, Belgium
Jorge J. Gomez-Sanz, Universidad Complutense de Madrid, Spain
Carlos Guerrero, University of Balearic Islands, Spain
Marco Antonio Gutiérrez Giraldo, Universidad de Extremadura, Spain
Carlos Henggeler Antunes, University of Coimbra, Portugal
Pascal Hirmer, University of Stuttgart, Germany
Gerold Hölzl, University of Passau, Germany
Tzung-Pei Hong, National University of Kaohsiung, Taiwan
Javier Ibanez-Guzman, Renault, France
Maysoun Ibrahim, Higher Council for Innovation and Excellence, Palestine
Sergio Ilarri, University of Zaragoza, Spain
Shallari Irida, Mid Sweden University, Sweden
Ming Jin, UC Berkeley / LBNL, USA
Marius Rohde Johannessen, Universty of South-Eastern Norway, Norway
Eleni Kaplani, University of East Anglia-Norwich Research Park, UK
Bilal Kartal, University of Minnesota, USA
Md Abdullah Al Hafiz Khan, Philips Research North America, USA
Abdelmajid Khelil, Landshut University of Applied Sciences, Germany
Pinar Kirci, Istanbul University, Turkey
Francine Krief, Bordeaux INP, France
Kirill Krinkin, Saint-Petersburg Electrotechnical University, Russia
Sanja Lazarova-Molnar, University of Southern Denmark, Denmark
Wolfgang Leister, Norsk Regnesentral, Norway
Dan Lin, Missouri University of Science and Technology, USA
Giovanni Livraga, Università degli Studi di Milano, Italy
Gabriel Luque, University of Malaga, Spain
Tatiana K. Madsen, Aalborg University, Denmark
Giuseppe Mangioni, University of Catania, Italy
Francisco Martins, University of Lisbon, Portugal
Renato Martins, INRIA | Sophia Antipolis, France
Manuel Mastrofini, LAST Horizon / University of Rome Tor Vergata, Italy

Natarajan Meghanathan, Jackson State University, USA
Zahéra Mekkioui, University of Tlemcen, Algeria
Jolanta Mizera-Pietraszko, Institute of Mathematics and Informatics | Opole University, Poland
Young Moon, Syracuse University, USA
Matteo Mordacchini, IIT-CNR,
Helena Nadais, CESAM - Centre for Environmental and Marine Studies | University of Aveiro, Portugal
Dmitry Namiot, Lomonosov Moscow State University, Russia
Ulrich Norbisrath, University of Applied Sciences Upper Austria (FH UA) Linz, Austria / George Mason
University, USA
Carlo Alberto Nucci, University of Bologna, Italy
Brendan O'Flynn, Tyndall National Institute | University College Cork, Ireland
Edoardo Patti, Politecnico di Torino, Italy
Luis Paulo Reis, University of Minho, Portugal
Jun Peng, University of Texas - Rio Grande Valley, USA
Wilma Penzo, DISI - University of Bologna, Italy
Cathryn Peoples, The Open University, UK
Christine Perakslis, Johnson & Wales University, USA
Nuno Pereira, School of Engineering of the Polytechnic of Porto, Portugal
Jorge Luis Perez Medina, Universidad de Las Americas at Quito, Ecuador
Davide Pinzan, Cardiff University, UK
Marco Polignano, University of Bari Aldo Moro, Italy
Sherif S. Rashad, Morehead State University, USA
Daniele Riboni, University of Cagliari, Italy
Francesca Righetti, University of Pisa, Italy
Heng Qi, Dalian University of Technology, China
Jose M. Reyes Alamo, CUNY - New York City College of Technology, USA
Michele Risi, University of Salerno, Italy
Enrique Romero-Cadaval, University of Extremadura, Spain
Alessandra Russo, Imperial College London, UK
Demetrios Sampson, Curtin University, Australia
Saiph Savage, West Virginia University, USA
Claudio Savaglio, University of Calabria, Italy
Michael Sheng, Macquarie University, Australia
Rongye Shi, Carnegie Mellon University, USA
Farhan Siddiqui, Walden University, USA
Steffen Späthe, Friedrich Schiller University Jena, Germany
Georgios Stylianou, Accenture, Netherlands
Young-Joo Suh, POSTECH, Korea
Markus Taumberger, VTT Technical Research Center of Finland Ltd., Finland
Athanasios Tsanas, University of Edinburgh / University of Oxford, UK
Andrea Vinci, CNR - National Research Council of Italy | Institute for High Performance Computing and
Networking (ICAR), Italy
Konstantinos Votis, Information Technologies Institute | Centre for Research and Technology Hellas,
Thessaloniki, Greece
Michael Wittmann, Technical University of Munich, Germany
Ouri Wolfson, University of Illinois, USA
Pete Woznowski, University of Bristol, UK
Mudasser F. Wyne, National University, USA

Xinggang Yan, University of Kent, UK
Chia-Hung Yeh, National Sun Yat-sen University, Taiwan
Wuyi Yue, Konan University, Kobe, Japan
Sherali Zeadally, University of Kentucky, USA
Petros Zerfos, IBM T.J. Watson Research Center, USA
Bo Zhou, German Research Center for Artificial Intelligence, Kaiserslautern, Germany
Yanmin Zhu, Shanghai Jiao Tong University, China
Sotirios Ziavras, New Jersey Institute of Technology, USA

Copyright Information
For your reference, this is the text governing the copyright release for material published by IARIA.
The copyright release is a transfer of publication rights, which allows IARIA and its partners to drive the
dissemination of the published material. This allows IARIA to give articles increased visibility via
distribution, inclusion in libraries, and arrangements for submission to indexes.
I, the undersigned, declare that the article is original, and that I represent the authors of this article in
the copyright release matters. If this work has been done as work-for-hire, I have obtained all necessary
clearances to execute a copyright release. I hereby irrevocably transfer exclusive copyright for this
material to IARIA. I give IARIA permission or reproduce the work in any media format such as, but not
limited to, print, digital, or electronic. I give IARIA permission to distribute the materials without
restriction to any institutions or individuals. I give IARIA permission to submit the work for inclusion in
article repositories as IARIA sees fit.
I, the undersigned, declare that to the best of my knowledge, the article is does not contain libelous or
otherwise unlawful contents or invading the right of privacy or infringing on a proprietary right.
Following the copyright release, any circulated version of the article must bear the copyright notice and
any header and footer information that IARIA applies to the published article.
IARIA grants royalty-free permission to the authors to disseminate the work, under the above
provisions, for any academic, commercial, or industrial use. IARIA grants royalty-free permission to any
individuals or institutions to make the article available electronically, online, or in print.
IARIA acknowledges that rights to any algorithm, process, procedure, apparatus, or articles of
manufacture remain with the authors and their employers.
I, the undersigned, understand that IARIA will not be liable, in contract, tort (including, without
limitation, negligence), pre-contract or other representations (other than fraudulent
misrepresentations) or otherwise in connection with the publication of my work.
Exception to the above is made for work-for-hire performed while employed by the government. In that
case, copyright to the material remains with the said government. The rightful owners (authors and
government entity) grant unlimited and unrestricted permission to IARIA, IARIA's contractors, and
IARIA's partners to further distribute the work.

Table of Contents
Design of Non-Destructive Evaluation Robot Using Magnetic Flux Leakage for Main Water Pipe
Jaekyu An, Soeun Son, Jongho Bae, Yong Sub Kwon, Eui-Jung Jung, and Goobong Chung
1
Sequencing Intelligent Components Through Releases as a Risk Reduction Strategy: a Smart-city Example
Pablo Valenzuela-Toledo and Carlos Cares
6
A Strategy for Drone Traffic Planning - Dynamic Flight-paths for Drones in Smart Cities
Lasse Berntzen, Adrian Florea, Cristian Molder, and Noureddine Bouhmala
12
Citizen Participation Through Digital Platforms: the Challenging Question of Data Processing for Cities.
Noemie Lago, Marianne Durieux, Jean-Alexandre Pouleur, Chantal Scoubeau, Catherine Elsen, and Clementine
Schelings
19
WiFi and LoRa Energy Consumption Comparison in IoT ESP 32/ SX1278 Devices
Laura Garcia, Jose M. Jimenez, Jaime Lloret, and Pascal Lorenz
26
Predicting Incidents of Crime Through LSTM Neural Networks in Smart City Domain
Ulises M. Ramirez-Alcocer, Edgar Tello-Leal, and Jonathan A. Mata-Torres
32
Powered by TCPDF (www.tcpdf.org)

Design of Non-Destructive Evaluation Robot Using Magnetic Flux Leakage for
Main Water Pipe
Jaekyu An
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: jkan@kiro.re.kr
Soeun Son
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: smallsilver@kiro.re.kr
Jongho Bae
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: jongho.bae@kiro.re.kr
Yong Sub Kwon
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: ys.kwon@kiro.re.kr
Eui-Jung Jung
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: ejjung@kiro.re.kr
Goobong Chung
Manufacturing Robotics R&D Division
Korea Institute of Robot Convergence
Pohang, Republic of Korea
email: goobongc@kiro.re.kr
Abstract—Many infrastructures in the world include pipe
systems, e.g., gas, oil, water, electricity, air circulation, etc.
Using a pipe system for the delivery of such materials allows
for easy human control. However, if the pipe is broken or
contaminated, the process is disturbed and the risk cost for the
society can increase substantially. For instance, contaminations
in fluids like air and water may result in spreading of diseases.
Therefore, maintenance of the pipe is crucial. For a long period
of time, identification of a pipe requiring a repair only
depended on its installation time because its condition was not
exposed until the pipe was destructed or cut. Recently, non-
destructive evaluation technology and robotics are changing
the paradigm of the identification process. Maintenance
technicians can identify faulty pipes from reliable data,
collected directly from the pipes, instead of relying on the
pipe’s installation period. In this paper, we propose a robot
design with Non-Destructive Evaluation (NDE) for waterwork
pipes.
Keywords-main water pipe; waterworks; pipe; robot; NDE;
MFL.
I.
INTRODUCTION
A well-founded infrastructure plays a major role in city
development. The infrastructure is composed of systems
such as roads, electrical grids and water supply pipes. These
systems are the power sources running the society. If one of
the
systems
malfunctions,
the
society
suffers
from
inconvenience
and
the
productivity
drops.
Therefore,
monitoring
the
conditions
and
maintenance
of
the
infrastructure are directly correlated with the functionality of
the society.
This paper discusses a design of NDE in-pipe robot for
main water pipe. Many robots have already been used in
water pipes [1] with various inspection technologies [2].
Among the various attributes of such robots, this research
focuses on mobility using the Magnetic Flux Leakage (MFL)
method [3].
The majority of existing NDE systems attempt to cover
the whole pipe surface at the same time [4]. In order to cover
the entire inner surface of the pipe, the system often requires
a large number of attached sensors through the entire pipe.
Our proposed design decreases the complexity by moving
the sensors along the direction of the robot’s movement.
Also, to reduce the weight of the robot, our team considered
a moving sensor as in the Diakont robot [7], which uses
Electromagnetic Acoustic Transducer (EMAT). While this
type of sensor increases the difficulty of the signal
processing, our robot can still benefit in mobility by a
reduction in the number of sensors. The robot can also
smoothly carry the NDE modules at an inclined pipe, vertical
pipe, elbow, and miter type pipe.
Additionally, there are two advantages using the MFL
method. First, it is radiation free. Second, the method can be
used to sense the magnetic field without the medium. These
characteristics minimize possible water pollution that can
occur during the pipe inspection.
Through this paper, we complete a complete design of
the proposed robot. However, the future goal of the project is
to make a system with MFL modules moving in spiral
motion
(Figure
1)
when
facing
various
obstacles.
Consequently, the robot will be applied to real water main
pipes. The results show the possibility of overcoming
different obstacles present in pipes and a city will be able to
have integrated control for maintenance of the pipes.
1
Copyright (c) The Government of Korea, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Figure 1. Example of the spiral motion of MFL modules.
II.
DESIGN
A.
System Overview
The targeted performances of the robot in this paper are
stable spiral motion of the MFL modules and successful
climbing of a 22.5° slope. We chose spiral motion because
the spiral motion enables the robot to inspect the surface of
the pipe with the minimum number of the MFL modules,
resulting in a low system cost (weight, volume, power). The
22.5° slope is chosen because this is the value for the
majority of water pipes in Republic of Korea.
To fulfill the set goals, the robot requires rotation,
attachment and detachment actuators for the MFL module. A
linkage system with sufficient wheel grip force is also
required. Additionally, an odometer is required for locating
the defects. Electrically, for the locomotion of the robot and
visual inspection of the pipe condition, camera, Inertial
Measurement Unit (IMU), Light Detection and Ranging
(LiDAR),
Single
Board
Computer
(SBC),
and
Data
acquisition (DAQ) for the MFL are installed as in Figure 2.
Finally, the robot size is 1100 x 840~1100 x 300 (mm, L x H
x W; height is changeable to adapt to the ovality of the pipe).
The total weight is about 160 kg.
Figure 2. Components of the robot.
B.
Free Body Diagram
Using free body diagram of the concept design and
understanding about the system, the power of actuators
effected by the attraction force of MFL and weight of the
robot can be derived. MFL consists of magnet, hall sensor,
front-back shoe, and Polytetrafluoroethylene (PTFE) cover,
as shown in Figure 3. The hall sensor senses leakages of the
magnetic field caused by reduction in pipe wall thickness.
The PTFE cover is used to decrease the friction between the
pipe and the MFL module.
Figure 3. The MFL module section view: Shoes help to make closed
magnetic field.
As depicted in Figure 4, the external forces are traction,
drag force and weight. The traction force (Frt : required
traction force) is decided by the torque driving the wheel
and the wheel grip force. The grip force is caused by the
normal force on the wheel from the surface. The drag force
of the MFL (Fmd) is generated from the attraction force of
magnet (Fm). The Fm can be calculated by (1). The size of
the magnet is 150x56x10 (unit mm, L x W x H) and flux
density is about 0.4 T (Tesla). The friction coefficient for
PTFE and steel is about 0.2 [5]. Eventually, Fm and Fmd are
2400 N and 480 N, respectively, because of two MFL
modules. Additionally, on the slope, the weight of the robot
creates a drag force. Therefore, considering the target
acceleration motion, the required traction force can be
obtained by (3), (4):
Fm = (B2·A)/(2μ0)
(1)
B: flux density
μ0 : the permeability of space(4πx10-7)
A: the area of each surface
Fmd = μ·Fm
(2)
ΣF = ma = Frt –Fwx- Fmd
(3)
Frt = ma + Fwx + Fmd
(4)
The velocity and acceleration of the robot are 300 mm/s
and 150 mm/s2, respectively. The Frt is about 1100 N. To
generate the force, a torque of a wheel motor must be 33
Nm under the condition of eight wheels, 250 mm wheel
diameter, and friction coefficient μ≒ 0.6 between rubber
(wheel tire) and steel [6]. For a stable locomotion, the non-
slip condition of the wheel has to be considered. The
condition states that the traction force generated by the
2
Copyright (c) The Government of Korea, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

wheel torque should be smaller than the friction force of the
tire (Fnt) created by the weight (refer to (5)). The current Fnt
(680 N) is smaller than Frt from (6). For a non-slip motion,
Fwy can be increased by pushing on the pipe wall.
Fnt ≥ Frt
(5)
Fnt =μ· Fwy
(6)
Therefore, the minimum non-slip traction force is Frt,
which can be calculated from (7). Equations (8), (9)
represent the traction force of the bottom and upper wheel,
respectively.
Fnt =μ· (Fwy + F’p) + μ·Fp                      (7) 
Fbt =μ· (Fwy + F’p)                             (8) 
Fut = μ·Fp                                   (9) 
Fp = F’p
(10)
Fp ≥ (Frt - μ·Fwy) / (2·μ)                     (11) 
By using Fp (380 N), upper (6 Nm) and bottom (27 Nm),
the wheel torque is also calculated.
Figure 4. The free body diagram for understanding applied forces
C.
Simulation for Driving Wheel Torque
To verify the result from the Free Body Diagram (FBD),
we use a multibody dynamic analysis simulation tool:
DAFUL [8]. Conditions used in DAFUL are equal to the
values from the FBD, such as weight (1600 N), push force
(380 N), drag force by MFL (480 N), and slope (22.5°), as
in Figure 5. We are interested in the required torque in a
wheel. Under these conditions, by substituting the target
velocity of the wheel, DAFUL shows the resulting torque
about the wheel. The average values for upper and bottom
wheel are 20 Nm and 110 Nm, respectively. The robot
system has eight wheels in total, 4 at the top and 4 at the
bottom. Therefore, one top wheel needs about 5 Nm and one
bottom wheel needs about 27 Nm, see Figure 6. The
simulated values are shown to be very similar to our FBD
results.
Figure 5. Simple modeling at the DAFUL
Figure 6. Results of Time (s) – Torque (Nm): the average of blue chart is
about 27 Nm and red chart is about 5 Nm
D.
MFL Rotation and Attachment Mechanism
MFL sensor modules have spiral motion with attaching
condition on the pipe wall. It creates the friction force to be
in a distracting rotational direction, as shown in the free body
diagram section. The rotational torque can be found using
equation (12):
τ = d x Fmd
(12)
Fmd from the two MFL modules is about 480 N and the
torque is about 240 Nm. The pipe diameter is 1000 mm and
the axis of rotation of the MFL is at the center of the pipe.
To sustain the torque and rotational velocity (30 rpm), a
motor has to generate about 0.75 kW of power.
However, due to the large power source and motor
volume, we try to generate detachment force (Fd) rather than
turning to high power motors. The detachment force reduces
the total MFL drag force from (13).
Fmd = μ·(Fm - Fd)
(13)
3
Copyright (c) The Government of Korea, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

To generate the Fd, pneumatic linear actuators are applied
(Figure 7). Using calibrated pressure, the actuators are able
to fully detach the MFL from the pipe wall or reduce the Fmd.
The actuator is designed to generate a detachment force
up to 1600 N at 0.65 MPa. By using the actuator, Fmd
decreased to 400 N resulting in a total required torque of 80
Nm and a motor power of 0.25 kW.
Figure 7. Rotating module: the MFL module and DAQ for sensing,
Ethernet hub for transferring the sensing data to server, sol-valve for
controlling the actuators, damper for reducing the sudden motion made by
magnetic force
The MFL module can rotate infinitely which may twist
the power and communication cables and air hose. To avoid
the twist, a slip ring is applied and swivel manifold are
specially designed. The swivel type causes the friction on the
seal, which depends on the compressed volume of the O-ring.
In our design, the volume is kept at half of the maximum
recommended by the manufacturer, to decrease the friction,
as in Figure 8.
Due to the decrease in the Fmd, the required wheel torque
is also decreased to 1 Nm (upper) and 22 Nm (bottom),
allowing the choice of general hub motor.
E.
Driving Wheel Attachment Mechanism
For a stable locomotion, wheels require a mechanism that
creates a push force and conform to a rough pipe surface. A
scissors mechanism is designed to lift the robot and push
against the wall for stable attachment. The reaction force is
the sum of push force and weight (14). The force is about
2000 N, weight 1600 N and push 380 N.
Figure 8. MFL modules rotating hinge mechanism
Fl = Fw + Fp
(14)
To generate the force, the mechanism (Figure 9) uses a
ball screw which requires about 0.6 Nm of torque.
Because the ball screw cannot be driven backwards, the
feedback current of the motor cannot be used to conform to
the rough pipe surface and welding bead. In order to
overcome this issue, we apply the load cell to directly read
the external forces changed by pipe conditions.
Figure 9. Wheel attachment mechanism
III.
CONCLUSION
This project aims to design and verify robot mobility and
motion of the sensors needed for a large water pipe
inspection. As the result, we design a robot system that can
climb a 22.5° slope and generate spiral motion for the
sensors. The key design factor is the use of the pneumatic
actuator. Using the compressibility of the air, compliance,
control is made simple without additional force-torque
4
Copyright (c) The Government of Korea, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

sensor, complex system modeling and control strategies
compared to motor based systems. Additionally, because of
reduced magnetic attractive force, the system’s weight,
volume and power consumption can be decreased with a
low powered motor.
For the future work, we aim to overcome additional
obstacles, such as 45° and 22.5° miter type bend, water, and
spiral weld bead. Based on this research and development,
we will design another robot system that will be able to
overcome the additional obstacles marked in Figure 10. We
will also develop an algorithm to find defects from data
generated solely by the two MFL modules in spiral motion.
Figure 10. Final robot test bed: obstacles: 45°, 22.5° miter type elbow,
water section, about 30 m distance.
ACKNOWLEDGMENT
This
work
was
supported
by
Korea
Environment
Industry & Technology Institute (KEITI) through Advanced
Water Management Research Program, funded by Korea
Ministry of Environment (MOE) (RE201901020).
REFERENCES
[1]
J. M. Mirats Tur and W. Garthwaite, “Robotic Devices for
Water Main In-Pipe Inspection:A Survey,” in J. Field Robotics,
vol. 27, pp. 491-508, Apr. 2010, doi: 10.1002/rob.20347
[2]
Z. Liu and Y. Kleiner, “State of the art review of inspection
technologies for condition assessment of water pipes,” in
Measurement, vol. 46, pp. 1-15, Jan. 2013
[3]
Y. Shi, C. Zhang, R. Li, M. Cai, and G. Jia, “Theory and
Application of Magnetic Flux Leakage Pipeline Detection,”
in Sensors, vol. 15(12), pp. 31036-31055, Dec., 2015
[4]
H. Song, L. Yang, G. Liu, G. Tian, D. Ona, Y. Song, and S.
Li,” Comparative Analysis of In-line Inspection Equipments
and Technologies,” in IOP Conf. Ser.: Mate. Sci. Eng., vol.
382, pp. 032021, Jul. 2018
[5]
W. G. Sawyer, K. D. Freudenberg, P. Bhimaraj, and L. S.
Schadler, “A study on the friction and wear behavior of PTFE
filled with alumina nanoparticles,” in Wear, vol. 254, pp 573-
580, Mar. 2003.
[6]
M. A. Cruz Gómez, E. A. Gallardo-Hernández, M. Vite Torres,
and A. Peña Bautista, “Rubber steel friction in contaminated
contacts,” in Wear, vol. 302, pp. 1421-1425, Feb. 2013.
[7]
Diakont,
http://www.diakont.com/energy_services/robotic_inline_inspec
tion.html [accessed July 2019]
[8]
C. W. Rim, J. S. Bang, S. J. Moon, T. Y. Chung, H. J. Cho,
and D. S. Bae, “Development of Software for Coupled Aero-
Elastic Dynamic Analysis of Wind Turbine System,” in
International Society of Offshore and Polar Engineers, Jan.
2010.
5
Copyright (c) The Government of Korea, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Sequencing Intelligent Components through Releases as a Risk Reduction Strategy:
a Smart-city Example
Pablo Valenzuela-Toledo
Department of Computer Sciences and Informatics
University of La Frontera
Temuco - Chile 4811230
email: pablo.valenzuela@ufrontera.cl
Carlos Cares
Center of Studies in Software Engineering
University of La Frontera
Temuco - Chile 4811230
email: carlos.cares@ceisufro.cl
Abstract—In Component-Based Software Engineering, the pro-
cess of selecting software components is under several risk
factors. Traditionally, these have been identiﬁed or mitigated
with software project management techniques. However, the new
demand for intelligent systems has added complexity to the
process. Despite the success and technological advances of this
type of systems, their development in an environment ready for
production remains a challenge. There is a considerable number
of technical issues that limit their adoption, and their selection
determines the introduction of new risk factors, different from
traditional ones. In this paper, we present the following idea:
given a set of requirements for one component - intelligent
behaviour, for example - we propose to sequence and replace
different components through evolving releases as a risk reduction
technique, instead of choosing the option of only one “right”
component. Using a systematic mapping literature review, we
gather the main risks of intelligent components. Then, we present
a formalization of the risk-based component selection technique.
Finally, we offer an example to illustrate our approach using a
sequence of intelligent software components in the context of an
air pollution forecasting system.
Keywords–Intelligent
components;
Component
Selection;
Component-Based Software Engineering; Risk Management.
I.
INTRODUCTION
The Component-Based Software Engineering approach is
based on the idea that software systems can evolve by selecting
and aggregating appropriate software components [1]. Some of
the recognized advantages of this approach are: (1) faster de-
velopment, since assembling new applications through existing
components reduces development time; (2) easier to maintain,
since managing one component at a time makes maintenance
easier; (3) improved quality, since each component is tested
before releasing it; (4) easier to create applications variants
and upgrades, since changing or upgrading each component
separately is simpler; and (5) lower overall development cost,
since the development cost is reduced by handling or upgrading
information systems separately [2].
When a software-intensive system is evolving, the pro-
cess of deciding which component to use involves different
available sourcing options, such as internal development, out-
sourcing, buying a commercial component or adopting some
open source component [3]. Several factors have already been
identiﬁed, in order to select a speciﬁc component: size, cost,
maturity (years, versions), compatibility, and adherence to
standards, among many other nonfunctional requirements [3]–
[5].
Risk management is a classical area in Project Management
discipline covering not only projects but also programs and
portfolios [6]. Risk management implies to manage potential
events which would (negatively) impact long-term strategic
objectives and projects’ objectives, i.e., cost, time and scope.
In software engineering, risk management has been a topic
of growing relevance through time, and different risk fac-
tors have been identiﬁed, such as analysis, design, coding,
testing, planning, control, contracts, teams, clients, policies
and structure [7]. In relation to Component-Based Software
Engineering, the risk is moved from classical waterfall stages
and their management to component-based stages and their
management, i.e., to component seeking, selecting, and testing.
While the ﬁeld of Component-Based Software Engineering
has identiﬁed ways to help select a software component
using prioritization factors, there are new considerations and
challenges to overcome due to the intelligence software era
[8]. This intelligence software era brings systems that are
known as systems that can automatically improve through
experience [9]. The successes of the artiﬁcial intelligence ﬁeld
are visible, for example, in domains such as computer vision
(e.g., object recognition [10]), natural language processing
(e.g., information extraction [11]), and sound analysis (e.g.,
voice recognition [12]). Diverse applications became part of
products of big and famous companies, such as Facebook,
Google, and Apple, producing a closeness effect between
people and artiﬁcial intelligence which has brought a new set
of demands to software production.
Therefore, despite the success and technical advances in
intelligence systems, its development in a production-ready
setting still remains challenging. There is a lack of tools
and software engineering practices for building such systems,
especially if the company/organization does not have an expe-
rienced machine-learning research group and a data-oriented
supporting infrastructure [13]. For example, let us consider
the selection of a machine learning component to enable a
weather forecasting functionality. This component may include
speciﬁcations about hardware (e.g., Graphics Processing Unit
(GPU) models), platforms (e.g., machine learning, deep learn-
ing library dependencies), source code (e.g., prepossessing,
glue code), conﬁguration (e.g., model features conﬁguration),
training data (e.g., sample period), or model state (e.g., version
of training model) [14]. This set of attributes differs from
traditional prioritization factors, adding complexity to the
selection process, and therefore risks.
To address the challenges presented above, in this arti-
cle, we present an approach based on software components,
which allows managing the risk involved in selecting complex
software components, such as those that provide intelligent
6
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

behaviour. The contributions of this work are the following:
(1) we identify the intelligent component risks by conducting
a systematic mapping literature review; (2) we introduce a
formalization of the problem of risk in the process of software
components selection; (3) we present a selection sequence
technique, from low to high risk, with a growing scenario of
requirements; and (4) we illustrate the proposal by presenting
the case of a plan for implementing an air pollution forecasting
system as part of a Smart-city project.
The remainder of this paper is organized as follows. In Sec-
tion 2, we collect information for establishing the risky points
of intelligent components, by applying the systematic mapping
protocol. In Section 3, we present a general framework for
selecting a sequence of components in place of only one and
the constraints for this choice. In Section 4, we apply the
general proposal by showing a scenario of the selection of an
intelligent component that enables an air pollution forecasting
functionality. Finally, in Section 5, we conclude with beneﬁts
and limitations.
II.
OPEN ISSUES ON SELECTING AND ADAPTING
INTELLIGENT COMPONENTS
To investigate the risky points when developing, selecting
or adapting intelligent software components, we analyze the
state-of-the-art of related software engineering challenges. Our
goal was to understand what are the software engineering
challenges, how they have been addressed, as well as the
context where they occur. To achieve that, we perform a
systematic mapping review (following the guidelines of [15]
[16]).
Figure 1. Systematic mapping review process. Adapted from [16].
Figure 1 gives an overview of how we developed the study.
First, we formulated research questions keeping in mind the
problem of unknown challenges when developing intelligent
software components. Second, we searched for articles in
digital libraries. The search included the search keywords,
the temporal interval of papers and the type of bibliographic
source. Third, we deﬁned and applied the inclusion and
exclusion criteria to select articles. Fourth, we described the
classiﬁcation scheme built with the selected articles. Finally,
we ordered the selected articles and generated a systematic
map.
A. Research question deﬁnition
We deﬁned the following main research question (RQ):
what are the software engineering challenges when developing,
selecting or adapting intelligent software components? In our
research scope, we considered answering this question by
reviewing studies that present analysis, reviews or case studies
that overview software engineering challenges related to the
development of intelligent software components.
B. Executing the search
We executed the search by intersecting and joining key-
words in the following search string: (‘machine learning’ OR
‘artiﬁcial intelligence’ OR ‘autonomous’ OR ‘deep learning’)
AND (‘systems’ OR ‘applications’ OR ‘components’) AND
(‘software engineering challenges’). We utilized four library
sources: (1) Science Direct [17]; (2) IEEE Digital Library
[18]; (3) ACM Digital Library [19]; and (4) Springer Link
[20]. Complementary, we also looked for articles in Scopus
bibliographic database [21] as a form of veriﬁcation, and to
expand the search spectrum. In all cases, we looked for articles
between the years 2014 and 2019 (March). As a result, we
gathered a total of 615 articles.
C. Screening of articles
To screen and review the gathered articles, we deﬁned
and applied inclusion and exclusion criteria. Our inclusion
criteria considered primary and secondary studies published
in chapters of books, journals and scientiﬁc conferences.
As exclusion criteria, we did not consider articles with: (1)
research context out of our scope; (2) a language other than
English used; (3) speciﬁc application domain (e.g., telecommu-
nication; energy, medicine, etc.); (4) duplicates and conference
proceedings summaries; and (5) no full article text available.
After applying the inclusion criteria, we selected a total of 9
relevant articles. Also, the exclusion criteria allow us to select a
total of 4 articles. In this phase, we also included a snowballing
article selection technique (following the guidelines of [15]).
This technique gave us a total of 5 new relevant articles.
We also decided to add 8 articles manually. These articles
come from relevant conferences, like The First Symposium on
Software Engineering for Machine Learning Applications [13]
and domain experts from Google. Finally, we got a total of 17
selected articles.
TABLE I. SUMMARY OF GATHERED ARTICLES BY CRITERIA
AND STAGE PART I.
ScienceDirect
IEEE
ACM
Initial search
14
4
8
Inclusion criteria
0
2
1
Exclusion criteria
0
1
1
Snowballing selection
0
1
0
Total after criteria
0
2
1
Manually added
-
-
-
Final total
-
-
-
A summary of gathered articles by criteria is available in
Table I and Table II (The data was divided in two tables for
readability).
D. Grouping the articles
Once we ﬁnished the previous phases, we deﬁned a clas-
siﬁcation scheme based on three subjects related to software
engineering challenges: (1) Software Life Cycle Phase, which
concern the software life cycle phases involved. Here, we in-
cluded speciﬁcation, development, veriﬁcation and validation,
and evolution phases. Also, we included project management
as a way to categorized related project development issues;
(2) Proposals, to investigate how the challenges have been
7
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

addressed. That includes development approach, project man-
agement, adjustment, measurement strategy, tool development,
team diversity or no strategy; (3) Context, to investigate where
the challenges have happened. We considered the academy, big
industry (e.g., Google or Apple) or small industry (e.g., online
or startup companies).
TABLE II. SUMMARY OF GATHERED ARTICLES BY CRITERIA
AND STAGE PART II.
Springer
Scopus
Total
Initial search
45
544
615
Inclusion criteria
0
6
9
Exclusion criteria
0
2
4
Snowballing selection
0
4
5
Total after criteria
0
6
9
Manually added
-
-
8
Final total
-
-
17
E. Data extraction and mapping process
We completed the systematic mapping review by generat-
ing a summary study map (Figure 2). We were able to identify
three categories with associated papers: (1) development; (2)
evolution; and (3) project management. In each of these
categories, there exist software engineering challenges that we
summarize in Table III.
Figure 2. Summary study map.
The Development category includes the following software
engineering challenges (or open issues): (1) Experiment Man-
agement, to manage a large number of experiments performed
when identifying an optimal model. In this experimental pro-
cess, it is necessary to guarantee reproducible results [14] [22]
[23]; (2) Transparency of Machine Learning Models. Complex
models like large neural networks used in ﬁelds, for example,
computer vision or natural language processing are difﬁcult to
explain, and thus, transparency is traded for accuracy [13] [14];
(3) Difﬁculties in estimating the results of intelligent software
components before they have been trained and tested [24] [25];
(4) Resource Limitation, concerning speciﬁc requirements of
distributed systems to manage large volumes of data, the
computational needs for extracting and transforming data,
training and evaluating a model, and serving the model in
production [14] [24]; (5) Testing, related to the need for tools
which allow test static data and production data, machine learn-
ing models and production-ready components [22] [24] [26];
(6) Data Processing, when working with distributed systems,
adds complexity in several dimensions. It requires additional
knowledge, time to operate the systems, management and
resources associated with hardware and software [14] [24];
and (7) Development Team, concerning how diverse a software
development team must be. This list covers different aspects
of developing an intelligent component [23] [27] [28].
The Evolution category includes: (1) Issues with Depen-
dencies, that is data, hardware, machine learning frameworks
or models dependencies [28] [29] [30]; (2) Hidden Feed-
back Loops; this phenomenon happens when the data adapt
the model and not backward, especially in production-ready
systems [14]; (3) Monitoring Deployed Systems that refers
to the need to maintain a deployed machine learning system
over time. Usually, teams fail to recognize the effort needed
[14] [23]; and (4) Glue Code and Supporting Systems that
refers to systems with a small part of the code belonging
to the intelligent component. Here, the rest is “glue code”
that interacts with supporting systems, and thus, the system
becomes hard to test [14] [31] [32].
TABLE III. OPEN ISSUES/SOFTWARE ENGINEERING CHALLENGES
Category
Challenges / Open Issues
Development
Experiment Management
Transparency of Machine Learning Models
Difﬁculties to Estimate Results
Resource Limitation
Testing
Data Processing
Development Team
Evolution
Issues with Dependencies
Hidden Feedback Loops
Monitoring
Glue Code and Supporting Systems
Project Management
Effort Estimation
Privacy
Data Workﬂows
Finally, the Project Management category includes: (1)
Effort Estimation. When developing intelligent software com-
ponents, the goals might be unclear, and an expected-results
deﬁnition is challenging. Also, other properties like acceptable
performance deﬁnition are hard to set beforehand [28] [33]
[34]; (2) Privacy of the Knowledge of a System, that refers
to how to store the data across the weights of a machine
learning model. This information is hard to manage when
there is a lack of model understanding. It forces companiesto
have terms of service agreements and to use anonymized or
aggregated statistics of the user data [13] [14] [23]; and (3)
Data Workﬂows that required to handle the volume, variety,
and the velocity of a large amount of data [33] [35] [36].
The ﬁnal list of software engineering challenges involves
a risk every time that there is a lack of adequate associated
techniques. However, to present our proposal, we formulate a
formalization in the next section.
8
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

III.
SEQUENCING COMPONENTS AS RISK REDUCTION
STRATEGY
In this section, we present a theoretical point of view of
the problem of the selection of several components in place of
selecting only one. Regarding this topic, the main focus of the
literature is on how to select one component for a speciﬁc
set of requirements. Here, the methods and techniques for
decision making are qualitative approaches [5] [37] [38]. To the
best of our knowledge, there are no proposals considering the
redundancy of components for the same set of requirements,
and there are not proposals considering components’ risks.
In this context, we consider that most of the quality factors
are uncertain factors because the expected quality occurs in
the best case, once the component has been successfully
integrated. This perspective manages not only quality factors
but traditional uncertainties, such as total time and budget.
In this proposal, we keep one of the main assumptions
of other authors, that is, we decide what components to
select before the test and try cycle. Risk perspective accepts
that the uncertainty of a project is higher at the beginning
and diminishes as it progresses due to proactive planning
and pertinent decision-taking [6]. Therefore, the focus of the
proposal is on the worst high risks case scenario, i.e., at the
beginning of the project.
In the following, we present a set of deﬁnitions for building
a conceptual framework which enables the consideration of
risks as a manifestation of uncertainties associated with com-
ponents.
Deﬁnition 1: The nth-dimension Risk of Using a Compo-
nent c, as part of a software solution s, or simply RUC, is a
vector ⃗r c
s = (r1, r2, ..., rn) where ri ∈ [0, 1] ⊆ IR.
Deﬁnition 2: The nth-dimension risk-evaluation of a set of
components C = {c1, c2, ..., cm} for a software solution s is
denoted as the relationship RC
s ⊆ C × [0, 1]m:
RC
s = {(c1,⃗r c1
s ), (c2,⃗r c2
s ), ..., (cm,⃗r cm
s
)}
(1)
where the second element ⃗r ci
s
is the nth dimension RUC
corresponding to the component ci in the software solution s.
Deﬁnition 3: A risk-based prioritization function over a
set of components C = {c1, c2, ..., cm} is a function ρ :
[0, 1]n −→ [0, 1] ⊆ IR. The resulting value of ρ(⃗r ci
s ) will
be called the total risk of a the component ci under ρ.
Deﬁnition 4: The functionality of a software component
respecting the set of requirements Req = {r1, r2, ..., rF } is
a vector ⃗f c
Req = (f1, f2, ..., fk) where fi ∈ {0, 1}. It will be
said that the component c accomplishes the functionality fi iff
fi = 1. In contrast, it will be said that the component c does
not accomplish the functionality fi iff fi = 0.
Deﬁnition 5: The functionalities of two components c1 and
c2 respecting the set of requirements Req = {r1, r2, ..., rF }
are the same iff ⃗f c1
Req = ⃗f c2
Req and it will be said that c1 and
c2 have different functionality iff ⃗f c1
Req ̸= ⃗f c2
Req.
Deﬁnition 6: Given two components c1 and c2, the set of
requirements Req = {r1, r2, ..., rF }, the functionality of c1 as
⃗f c1
Req = (f1, f2, ..., fm) and the functionality of c2 as ⃗f c1
Req =
(g1, g2, ..., gm) , then it will be said that c1 has less or equal
functionality than c2, denoted as ⃗f c1
Req ⪯ ⃗f c2
Req iff fk ≤ gk∀k.
Lemma 1: Given a set of components C, the binary re-
lation ⪯ for functionalities of components imposes a partial
order on C. Therefore, C is posed under ⪯.
Deﬁnition 7: The functional impact of a RUC ⃗r c is a
function λ : [0, 1]n −→ {0, 1}k. The resulting value λ(⃗r c)
will be called the loss of functionality of ⃗r c. It will be said
that there is no loss of functionality iff: λ(⃗r c) = ⃗f c and it will
be said that there is a total loss of functionality iff λ(⃗r c) = ⃗0.
Deﬁnition 8: Given a component c, its RUC ⃗r c, its cor-
responding evaluation of its loss of functionality λ(⃗r c) and
ρ a risk-based prioritization function, then the probability of
occurrence of that loss of functionality will be ρ(⃗r c)λ(⃗r c).
Deﬁnition 9: A risk-appraised situation for a component
selection stage, as part of a component-based software pro-
cess for developing the software s, is a quintuple As =
<C, Req, Rsk, ρ, λ>, where, C is a non empty set of com-
ponents, Req is a non empty set of requirements, Rsk is a
particular nth-dimension risk-evaluation RC
s , ρ is a risk-based
prioritization function over C, and λ is a functional impact
function applicable to risks in RC
s .
Deﬁnition 10: A risk-appraised situation for a component
selection stage, as part of a component-based software process
As = <C, Req, Rsk, ρ, λ>, is called coherent iff
⃗f ci
Req ⪯ ⃗f cj
Req ⇒ ρ(⃗r ci
s ) ≤ ρ(⃗r cj
s ) ∀ci, cj ∈ C,
(2)
When this constraint is not satisﬁed, then it is called an
incoherent risk-appraised situation.
Lemma 2: Any
risk-appraised
situation
As
=<C, Req, Rsk, ρ, λ>, having just one element in
C, is coherent.
The proof is trivial because there is only one element in C
and ρ is a function. Therefore, the total risk of the component
ci is equal to itself.
Deﬁnition 11: A set of components D is called dis-
posable
by
risk
of
a
risk-appraised
situation
A′
s
=
<C ∪ D, Req, Rsk, ρ, λ> iff A′
s
is incoherent, As
=
<C, Req, Rsk, ρ, λ> is coherent and both situations accom-
plish the condition of equal functionality, i.e.,
[
ci∈C
⃗f ci
Req =
[
ck∈C∪D
⃗f ck
Req
(3)
Lemma 3: Given an incoherent risk-appraised situation
As =<C, Req, Rsk, ρ, λ> then, by deﬁnition
∃ci, cd ∈ C ⃗f cd
Req ≺ ⃗f ci
Req
(4)
and
ρ(⃗r cd) ≥ ρ(⃗r cd)
(5)
then {cd} is disposable-by-risk of As.
Lemma 4: Given
a
coherent
risk-appraised
situation
As =<C, Req, Rsk, ρ, λ> and ∃ci, cd ∈ C
⃗f cd
Req ≺ ⃗f ci
Req
(6)
and
ρ(⃗r cd) ≥ ρ(⃗r ci)
(7)
then {cd} is disposable-by-risk of As.
IV.
THE ARAUCAN´IA DIGITAL SMART-CITY EXAMPLE
In order to illustrate our proposal, we present an exam-
ple using the Araucan´ıa Digital Smart-city Project (ADSP)
context, that includes air pollution forecasting functionality.
The ADSP goal is to develop smart cities systems in the
region of La Araucana, Chile. The project is funded by the
Inter-American Development Bank (BID) and is executed by
industry and academy actors [39].
9
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

First, we deﬁne our risk vector, following Deﬁnition 1, that
considers the risk associated with intelligent components and
with traditional software development projects (we present a
scenario with already evaluated risks, and thus, we do not
review how the values were generated). The risks for the in-
telligent components are those already identiﬁed in Section II:
(1) Experiment Management (EM), p = 0.05; (2) Difﬁculties
to Estimate Results (DER), p = 0.1; (3) Development Team
(DT), p = 0.15; (4) Glue Code (GC), p = 0.15; and (5) Data
Workﬂows (DW), p = 0.05. We also include the following 2
risks related to traditional software development: (6) Budget
Limitations (BL), p = 0.15; and (7) Timeline Restriction (TR),
p = 0.15 [40].
Second, we deﬁne a set of software components that
provide air pollution forecasting functionality. Each component
considers an associated algorithm previously used in another
context for this purpose [41]. We name every component based
on the associated algorithm-name as follows: (1) Support Vec-
tor Machine (SVM); (2) Artiﬁcial Neural Networks (ANN);
(3) K-Means (KM); (4) K-Nearest Neighbors (KNN); and (5)
Regression Models (RM).
Third, we present a resume of the seven risks evaluation
related to the ﬁve intelligent software components (all men-
tioned above) (Table IV). Also, we set the values according to
the context that the software development team and the project
give us (we stand that we do not consider the methodology to
calculate the risk value, and thus, we assume that this example
does not represent a case study with appropriate empirical
rigour). Here, the team is one project manager, two senior
software developers, one junior data analyst, and one senior
software engineering scientist. It is crucial to notice that we
do not have a machine learning specialist in our team (this
context represents a particular case that may change with a
different team or a different project).
TABLE IV. RISK EVALUATION OF AN INTELLIGENT COMPONENTS SET
RC
s
EM
DER
DT
GC
DW
BL
TR
ρ
SVM
0.5
0.5
0.6
0.5
0.6
0.5
0.4
0.41
ANN
0.4
0.6
0.6
0.5
0.8
0.6
0.6
0.47
KM
0.3
0.4
0.4
0.5
0.6
0.4
0.3
0.47
KNN
0.3
0.4
0.4
0.6
0.6
0.4
0.3
0.34
RM
0.2
0.2
0.2
0.6
0.6
0.3
0.1
0.24
In order to evaluate how many software requirements
accomplish the functionalities of a set of software components,
we present a resume in Table V. The collection of software
requirements is deﬁned as follows [26]: (1) Air Pollution Index
Forecasting (APF), i.e., the prediction of the future value of
the polluting particle; (2) Interpolation of the Current Pollution
value (ICP), i.e., constructing new data points within some
geographical areas; (3) Automatic Fail Identiﬁcation (AFI),
i.e., automatic identiﬁcation of “not a number”(NaNs) values
or inﬁnities appearing in the model during the execution of
the system; (4) Editable Model (EM), that is, the compo-
nent supports hyper-parameters updating; and (5) Stale Model
Aware (SMA), that is, the model allows an automatic stale
identiﬁcation.
In Table VI, we present the loss of functionality of compo-
nents due to the risks mentioned above. To do this, we use the
λ function on each functionality deﬁned in the previous step.
Following the deﬁnitions, we have a risk-appraised situa-
tion as we describe in Deﬁnition 9. Additionally, there exists an
incoherent risk-appraised scenario because, for example, SVM
TABLE V. THE FUNCTIONALITY OF AN INTELLIGENT SOFTWARE
COMPONENT WITH RESPECT TO A SET OF REQUIREMENTS
⃗f c
Req
APF
CCD
AFI
EM
SMA
ρ
SVM
1
0
0
0
0
0.41
ANN
1
1
1
1
0
0.47
KM
0
1
0
1
0
0.47
KNN
1
1
0
1
0
0.34
RM
1
1
1
0
0
0.24
TABLE VI. LOSS OF FUNCTIONALITY OF COMPONENTS
λ
λ(AP F )
λ(CCD)
λ(AF I)
λ(EM)
λ(SMA)
ρ
SVM
1
0
0
0
0
0.41
ANN
1
1
1
1
1
0.47
KM
0
1
0
1
0
0.47
KNN
1
1
0
1
0
0.34
RM
1
1
0
0
0
0.24
provides less functionality than RM, and its risk is higher than
RM. Therefore, SVM is risk disposable. Similarly, KNN offers
better functionality than KM, and its risk is lower than the risk
of KM. Therefore, KM is risk disposable too. Removing the
disposable components, we have the following situation that
⪯ imposes to the component set:
⃗f RM
Req ⪯ ⃗f ANN
Req ; ⃗f KNN
Req
⪯ ⃗f ANN
Req
(8)
Finally, we selected these three components for the fore-
casting functionalities (RM, KNN, ANN). The potential loss of
functionality due to risks, by using the logic operator “AND”,
gives us additional security on functionality AFI. To select
a sequence, we ﬁrst select the less risky component to ensure
some functionality on early releases. But, due to the team size,
we may support only prototype development at the moment.
Therefore, we ﬁrst plan RM and KNN then ANN. Note that
risks are going down from 0.47 to 0.24*0.34*0.47.
V.
CONCLUSION
In this paper, we have presented a solution proposal to
the problem of intelligent software component selection. First,
we have conducted a systematic literature review that allows
us to identify a collection of risks that we classiﬁed into
three main categories: (1) Development; (2) Evolution; and
(3) Project Management. This review differs from previous
related ones because our goal has been found lack of software
engineering, instead of identifying a speciﬁc way to deploy
intelligent systems. Second, we have formalized our proposal
by presenting a conceptual framework and risk reduction strat-
egy to support the component selection process. To the best
of our knowledge, there is no work addressing the selection
problem in the way that we have been presenting it. Third,
we present the scenario of risks and how to select more than
one component instead of just the best one. In this way, the
advantage of this proposal is that it allows looking for not only
the optimal option but a set of available best ones. Fourth, we
have illustrated this scenario with a case of software planning
in the context of an air pollution forecasting functionality as
part of a Smart-city project. Fifth, as a limitation, while we
considered that our presented example illustrates our proposal,
under no circumstances we pretend to present this as a case
study or an empirical evaluation. Thus, our future work is:
(1) update our systematic literature review; (2) improve the
proposal by formulating the component selection problem as a
search based problem. With this approach, we expect to prove
the methodological framework supporting our idea; and (3)
10
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

conduct a study case, using the frame of The Araucan´ıa Digital
Smart-city Project.
ACKNOWLEDGMENT
The authors would like to thank to ATNME16393CH
SMART CITY IN A BOX project 2019, Temuco, Chile.
REFERENCES
[1]
G. Pour, “Component-based software development approach: new op-
portunities and challenges,” in Proceedings. Technology of Object-
Oriented Languages. TOOLS 26 (Cat. No. 98EX176).
IEEE, 1998,
pp. 376–383.
[2]
H.-I. Jeong, C.-S. Lee, C.-H. Kim, C. Park, and H.-C. Woo, “Design
of a software component bank for distribution,” Journal of systems
integration, vol. 10, no. 3, 2001, pp. 223–237.
[3]
P. Chatzipetrou et al., “Component selection in software engineering-
which attributes are the most important in the decision process?” in 2018
44th Euromicro Conference on Software Engineering and Advanced
Applications (SEAA).
IEEE, 2018, pp. 198–205.
[4]
M. Borg et al., “Selecting component sourcing options: A survey of
software engineerings broader make-or-buy decisions,” Information and
Software Technology, vol. 112, 2019, pp. 18–34.
[5]
C. Alves, X. Franch, J. P. Carvallo, and A. Finkelstein, “Using goals
and quality models to support the matching analysis during cots selec-
tion,” in International Conference on COTS-Based Software Systems.
Springer, 2005, pp. 146–156.
[6]
H. Sanchez, B. Robert, M. Bourgault, and R. Pellerin, “Risk manage-
ment applied to projects, programs, and portfolios,” International journal
of managing projects in Business, vol. 2, no. 1, 2009, pp. 14–35.
[7]
H. R. Costa, M. d. O. Barros, and G. H. Travassos, “Evaluating software
project portfolio risks,” Journal of Systems and Software, vol. 80, no. 1,
2007, pp. 16–31.
[8]
E. Woods, “Software architecture in a changing world,” IEEE Software,
vol. 33, no. 6, 2016, pp. 94–97.
[9]
M. Jordan and T. M. Mitchell, “Machine learning: Trends, perspectives,
and prospects,” Science, vol. 349, no. 6245, 2015, pp. 255–260.
[10]
B. Kehoe, A. Matsukawa, S. Candido, J. Kuffner, and K. Goldberg,
“Cloud-based robot grasping with the google object recognition engine,”
in 2013 IEEE International Conference on Robotics and Automation.
IEEE, 2013, pp. 4263–4270.
[11]
A. Conneau, H. Schwenk, L. Barrault, and Y. Lecun, “Very deep
convolutional networks for natural language processing,” arXiv preprint
arXiv:1606.01781, vol. 2, 2016, pp. 1107–116.
[12]
J. R. Bellegarda, “Spoken language understanding for natural interac-
tion: The siri experience,” in Natural Interaction with Robots, Knowbots
and Smartphones.
Springer, 2014, pp. 3–14.
[13]
F. Khomh, B. Adams, J. Cheng, M. Fokaefs, and G. Antoniol, “Software
engineering for machine-learning applications: The road ahead,” IEEE
Software, vol. 35, no. 5, 2018, pp. 81–84.
[14]
A. Arpteg, B. Brinne, L. Crnkovic-Friis, and J. Bosch, “Software
engineering challenges of deep learning,” in 2018 44th Euromicro Con-
ference on Software Engineering and Advanced Applications (SEAA).
IEEE, 2018, pp. 50–59.
[15]
C. Wohlin, “Guidelines for snowballing in systematic literature studies
and a replication in software engineering,” in Proceedings of the
18th international conference on evaluation and assessment in software
engineering, Citeseer.
ACM, 2014, p. 38.
[16]
K. Petersen, S. Vakkalanka, and L. Kuzniarz, “Guidelines for conduct-
ing systematic mapping studies in software engineering: An update,”
Information and Software Technology, vol. 64, 2015, pp. 1–18.
[17]
“Science direct,” 2019, (Accessed on 13/06/2019). [Online]. Available:
https://www.sciencedirect.com/
[18]
“Ieee digital library,” 2019, (Accessed on 13/06/2019). [Online].
Available: https://ieeexplore.ieee.org/Xplore/home.jsp
[19]
“Acm digital library,” 2019, (Accessed on 13/06/2019). [Online].
Available: https://dl.acm.org/
[20]
“Springer link,” 2019, (Accessed on 13/06/2019). [Online]. Available:
https://link.springer.com/
[21]
“Scopus,”
2019,
(Accessed
on
13/06/2019).
[Online].
Available:
https://www.scopus.com/home.uri
[22]
E. Breck, S. Cai, E. Nielsen, M. Salib, and D. Sculley, “The ml
test score: A rubric for ml production readiness and technical debt
reduction,” in 2017 IEEE International Conference on Big Data (Big
Data).
IEEE, 2017, pp. 1123–1132.
[23]
J. Bosch, H. H. Olsson, and I. Crnkovic, “It takes three to tango:
Requirement, outcome/data, and ai driven development,” in Proceedings
of the International Workshop on Software-intensive Business: Start-
ups, Ecosystems and Platforms, vol. 2018, 2018, pp. 177–192.
[24]
O. Hummel, H. Eichelberger, A. Giloj, D. Werle, and K. Schmid, “A
collection of software engineering challenges for big data system de-
velopment,” 2018 44th Euromicro Conference on Software Engineering
and Advanced Applications (SEAA), 2018, pp. 362–369.
[25]
M. Felderer, B. Russo, and F. Auer, “On testing of data-intensive
software systems,” CoRR, vol. abs/1903.09413, 2019, in press.
[26]
E. Breck, S. Cai, E. Nielsen, M. Salib, and D. Sculley, “Whats your
ml test score? a rubric for ml production systems.”
IEEE, 2016, pp.
19–26.
[27]
M. Kim, T. Zimmermann, R. DeLine, and A. Begel, “The emerging
role of data scientists on software development teams,” in Proceedings
of the 38th International Conference on Software Engineering.
ACM,
2016, pp. 96–107.
[28]
P. Bailis, K. Olukotun, C. R´e, and M. Zaharia, “Infrastructure for usable
machine learning: The stanford dawn project,” 2017.
[29]
T. Menzies, C. Bird, T. Zimmermann, W. Schulte, and E. Kocaganeli,
“The inductive software engineering manifesto: principles for industrial
data mining,” in MALETS ’11.
ACM, 2011, pp. 19–26.
[30]
E. Breck, N. Polyzotis, S. Roy, S. E. Whang, and M. Zinkevich, “Data
infrastructure for machine learning,” 2018, (Accessed on 13/06/2019).
[Online]. Available: http://www.sysml.cc/doc/9.pdf
[31]
D. Morgenthaler, M. Gridnev, R. Sauciuc, and S. Bhansali, “Searching
for build debt: Experiences managing technical debt at google,” in 2012
Third International Workshop on Managing Technical Debt (MTD).
IEEE, 2012, pp. 1–6.
[32]
K. M. Anderson, “Embrace the challenges: Software engineering in a
big data world,” 2015 IEEE/ACM 1st International Workshop on Big
Data Software Engineering, 2015, pp. 19–25.
[33]
T. Menzies, C. Bird, T. Zimmermann, W. Schulte, E. Kocaganeli,
and T. Zimmermann, “The inductive software engineering manifesto:
principles for industrial data mining,” 2011, pp. 19–26.
[34]
D. Sculley et al., “Machine learning: The high interest credit card of
technical debt,” in SE4ML: Software Engineering for Machine Learning
(NIPS 2014 Workshop), 2014.
[35]
H. H. Olsson and J. Bosch, “Towards data-driven product development:
A multiple case study on post-deployment data usage in software-
intensive embedded systems,” in International Conference on Lean
Enterprise Software and Systems.
Springer, 2013, pp. 152–164.
[36]
G. Yenni et al., “Developing a modern data workﬂow for regularly
updated data,” in PLoS biology.
Public Library of Science, 2019.
[37]
R. Land, L. Blankers, M. Chaudron, and I. Crnkovi´c, “Cots selection
best practices in literature and in industry,” in International Conference
on Software Reuse.
Springer, 2008, pp. 100–111.
[38]
A. Mohamed, G. Ruhe, and A. Eberlein, “Cots selection: past, present,
and future,” in 14th Annual IEEE International Conference and Work-
shops on the Engineering of Computer-Based Systems (ECBS’07).
IEEE, 2007, pp. 103–114.
[39]
“Ufro smart city,” 2019, (Accessed on 13/06/2019). [Online]. Available:
http://smartcity.ufro.cl/
[40]
L. Wallace, M. Keil, and A. Rai, “Understanding software project risk:
a cluster analysis,” Information & management, vol. 42, no. 1, 2004,
pp. 115–125.
[41]
C. Bellinger, M. S. M. Jabbar, O. R. Za¨ıane, and A. R. Osornio-Vargas,
“A systematic review of data mining and machine learning for air
pollution epidemiology,” in BMC public health.
BMC Public Health,
2017, p. 907.
11
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

A Strategy for Drone Traffic Planning 
Dynamic Flight-paths for Drones in Smart Cities 
 
Lasse Berntzen 
School of Business 
University of South-Eastern Norway 
Kongsberg, Norway 
email: lasse.berntzen@usn.no 
Adrian Florea 
Faculty of Engineering 
Lucian Blaga University of Sibiu 
Sibiu, Romania 
email: adrian.florea@ulbsibiu.ro
Cristian Molder 
Center of Excellence in Robotics and Autonomous Systems 
Military Technical Academy “Ferdinand I” 
Bucharest, Romania 
email: cristian.molder@mta.ro 
Noureddine Bouhmala 
Faculty of Engineering and Maritime Sciences 
University of South-Eastern Norway 
Kongsberg, Norway 
email: noureddine.bouhmala@usn.no
 
 
Abstract—This paper presents a solution for creating dynamic 
flight plans for drones. The number of drones is expected to 
increase dramatically, and there will be a demand for drone 
traffic planning solutions. The approach used here is based on 
a multidimensional grid with fixed top-level paths and lower-
level paths used for local traffic between the departure and 
arrival points and the top-level paths. Flight plans may change 
dynamically if disruptions happen. The proposed solution 
includes the establishment of temporary no-fly zones and 
priority traffic. 
Keywords-unmanned 
aerial 
vehicles; 
drones; 
flight 
planning; 
smart 
cities; 
routing 
algorithms; 
scheduling 
algorithms. 
I. 
 INTRODUCTION 
“Smart cities” is a concept that uses information and 
communication technology to improve the quality of life for 
its citizens by delivering better services, reducing 
environmental footprint and improving citizen participation. 
One aspect of smart cities is to make transport smarter [1]. 
This paper focuses on how to meet the challenges of drone 
traffic for delivery and other applications. 
Some of the leading information and communication 
technology companies (Google and Amazon) are currently 
exploring new delivery services using unmanned aerial 
vehicles (drones). Drone technology has also attracted the 
attention of traditional logistics companies like DHL, UPS 
and Deutsche Post AG, as well as big retailers like Walmart. 
Drones 
are 
becoming 
increasingly 
important 
in 
agriculture, medical sector, civil engineering, insurance, 
security, and energy. According to Goldman Sachs, the 
future drone market is predicted to be $100 billion by the 
year 2020 [2] where the defense sector remains the largest 
consumer with around 70%. However, Business Insider 
Intelligence researchers are less optimistic and expect sales 
of drones to surpass $12 billion in 2021 [3]. The lift capacity 
and operating distance are improving, mainly due to 
advances in battery technology. 
Drones are particularly of great interest for last mile 
delivery applications in smart cities. Last mile delivery is the 
end part of the delivery chain, which deals with the 
distribution of goods from long haul to the end user, being 
the most expensive part of the delivery chain. As part of the 
upcoming Industry 4.0 revolution, the autonomy of drones 
plays an essential role in the evolution of logistics. Drones 
are becoming commonly used in the early stages of logistics 
(commonly called first-mile) as well as in its last stages. 
Intralogistics operations deal with the optimization, 
integration, automatization, and management of data flow 
and goods inside a distribution center. Drones can be smartly 
used for transportation inside factories, spare parts delivery, 
goods storing and delivering. 
Use of drones for city infrastructures surveillance is of 
great interest as they can be used for building inspections and 
maintenance. 
In 2013, Amazon announced Prime Air [4], a service that 
utilizes multirotor drones to deliver packages from Amazon 
to customers. The German logistics company Deutsche Post 
DHL started its Parcelcopter project in 2014. One application 
of the Parcelcopter [5] has been to transport medicine to the 
German island of Juist in the North Sea. 
Google revealed Project Wing [6] in 2014 to produce 
drones that can deliver larger items than Prime Air and 
Parcelcopter. Recently, in April 2019, Project Wing has 
received regulatory approval to start making last-mile 
commercial drone deliveries in Australia, according to the 
American technology news channel - The Verge [7].  
In 2014, the US company PINC launched the PINC Air 
service, using its drones to follow goods in transports, 
vehicles and more. These drones are equipped with cameras, 
Radio-Frequency Identification (RFID) and barcode readers, 
and have software for real-time 3D mapping, navigation, 
goods identification and localization [8]. 
12
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

In 2014, the United Arab Emirates announced its plan to 
use drones to distribute official government documents such 
as permits and identification cards [9].  
A startup company, Matternet has partnered with Swiss 
Post to test a lightweight package delivery drone [10]. 
Recently, the UNICEF Innovation labs [11] explored the 
use of drones for search and rescue operations. The drones 
could be useful in emergency situations, such as rescuing 
victims of natural disasters (floods, extreme temperature 
events, earthquakes, mudslides, storms and wildfires) when 
roads are no longer usable. Drones may be used to transport 
life-saving materials in both humanitarian and development 
contexts [12]. Deliveries of emergency medical supplies and 
kits can reduce the response time in multiple humanitarian 
contexts 
that 
require 
the 
provision 
of 
life-saving 
immunization materials, biological samples, transfusion 
plasma or organs. UNICEF has used drones for such 
operation in African countries and Vanuatu isle in the Pacific 
Ocean [13]. 
A kidney scheduled for transplant was delivered by a 
drone for the first time on April 19th, 2019, in Baltimore, 
United States [14]. A specially tailored drone having the size 
of a washing machine carried a healthy human kidney to 
hospital. The doctors successfully transplanted the organ. 
The operation took place at night, and the drone traveled 4.5 
km in 10 minutes. The whole operation was the result of a 
three-year collaboration of a team of doctors, researchers, 
engineers and plane experts who worked together at the 
Maryland 
Medical 
Center 
and 
the 
Living 
Legacy 
Foundation. The transport of transplant organs using the 
drones reduces costs, reduces transport time and improves 
the quality of medical services. Conventional transport 
methods, including the use of cars, helicopters and planes, 
have significant drawbacks: airplanes are too expensive, 
commercial flights take too long, and small aircraft are 
dangerous to medical teams. 
The increase in drone traffic calls for a traffic 
management system to make sure that drones operate in a 
regulated environment to avoid collisions and improve the 
safety of drone operations. The aim of this paper is to present 
an idea for how drone flight management can be 
implemented in urban areas. 
The rest of the paper is organized as follows: The next 
section addresses some current challenges related to the 
commercial use of drones. Section III provides an overview 
of related work. Section IV discusses drone flight planning. 
Section V presents an idea for an algorithm. Section VI 
concludes and provides ideas for further research. 
II. 
CURRENT CHALLENGES 
The use of drones for professional purposes introduces a 
set of challenges that must be observed and addressed: 
• 
Most drones use electrical motors. The battery capacity 
is proportional to the weight of the battery. The capacity 
of the batteries becomes a limiting factor in how far a 
drone can travel before needing to be recharged. Battery 
technology is improving and will increase both travel 
distance and payload weight. 
• 
Flying distance and payload weight depends on battery 
capacity. A larger battery will increase flying distance, 
but also decrease the payload capacity. Balancing 
payload weight, battery weight, and flight time are 
important considerations when attempting to minimize 
the cost or the delivery time for drone deliveries [15]. 
• 
The flight planning for drones is a multi-objective 
optimization problem. The solution needs to take into 
account the existence of no-fly zones and dedicated 
paths for drones to follow. 
• 
Drones may be difficult to maneuver in tight spaces. 
• 
Scalability: How does a fleet of drivable drones might 
be organized so that they do not crash into one another 
implemented in the complex reality of real city streets 
and 
the 
surrounding 
airspace. 
This 
calls 
for 
implementation of traffic planning and collision 
avoidance systems as more and more drones enter the 
airspace. 
• 
Algorithmic path-planning taking into account of urban-
like landscape with buildings, roads, parking areas, 
landing pads and no-fly zones. 
• 
Since the law regarding the use of drones is still not 
fully developed, other challenges or restrictions are 
currently being regulated by the European Union [16], 
e.g., drone weight, maximum possible flying altitude, 
no-fly zones over "crowds", minimum safe distance, etc. 
III. 
RELATED WORK 
Mok [17] presents the prototypes of drones developed at 
MIT´s Computer Science and Artificial Intelligence 
Laboratory (CSAIL), located in Cambridge, Massachusetts, 
USA. These drones, equipped with wheels, represent a mix 
between a drone and a tiny car that can not only fly but are 
capable of driving on the ground, making a tradeoff related 
to energy consumption and speed (time of delivery). Their 
tests included eight drones deployed at the same time and 
following autonomously their own path revealed the 
machines could fly for 90 meters or drive for 252 meters 
before needing to recharge their batteries, a relatively short 
distance. 
Schermer et al. [18] used a heuristic algorithm to extend 
the original Vehicle Routing Problem (VRP) [18] to the 
Vehicle Routing Problem with Drones (VRPD), where a 
drone works in tandem with a vehicle to reduce delivery 
times. The authors emphasize qualitative differences 
between trucks and drones and highlight the usefulness of 
incorporating drones in last-mile logistics. 
The limitations of existing VRP solutions applied for 
planning drone deliveries are illustrated by Dorling, 
Heinrichs, Messier and Magierowski [15]: multiple trips to 
the depot are not permitted leading to solutions with excess 
drones, or the effect of battery and payload weight on energy 
consumption is not considered, leading to costly or infeasible 
routes. The authors solve drone delivery problems with a 
Multi-Trip VRP (MTVRP) that compensates for each 
drone’s limited carrying capacity by reusing drones when 
possible. The authors used a model based on the 
13
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

approximately 
linear 
relationship 
between 
power 
consumption and battery and payload weight. The main 
drawback of their solution is their local optimization 
algorithm based on simulated annealing and not a global 
optimization algorithm. Furthermore, the authors also admit 
that the simulated annealing algorithm does not take 
advantage of characteristics inherent to a VRP such as it does 
not use geographical information to reduce the likelihood of 
trying infeasible routes between two locations at opposite 
ends of the area of operations. 
The researchers from MIT [20], using extra hardware 
(video camera and processing power for image recognition) 
developed 
an 
obstacle-detection 
system 
that 
allows 
autonomous drones to zip through trees at 48 km/h in 
different delivery scenarios. 
The UTM (Unmanned Aircraft Systems Traffic 
Management) project [21] enters in the fourth stage where 
NASA will test drone traffic management systems in six 
field test sites of U.S. cities – Alaska, Nevada, Texas, North 
Dakota, Virginia, and New York. The project aims 
developing technologies, responsibilities and procedures for 
safely managing the airspace that includes autonomous 
aircraft operations in populated areas. Structured in four 
levels entitled technical capabilities, and focused first on 
agriculture, firefighting and infrastructure monitoring, the 
operators of drones are enabled to set flight plans reserving 
airspace for their operations and provide situational 
awareness about other operations planned in the area. The 
second stage explores the space beyond visual line of sight of 
the operator in sparsely populated areas and contingency 
management. The third involves tracking capabilities of 
drone operations over moderately populated areas. Perhaps 
the most complex, the fourth stage, aims to extend the 
operations defined in the third stage by sending 
correspondence and delivering packages in high populated 
areas. Also, testing the technologies that could be used to 
manage large-scale contingencies aims this last stage. 
Dukowitz [22] revealed other important Urban Aerial 
Mobility (UAM) projects supported by more than 500 
European stakeholders and by European Commission funds 
that intend to bring urban mobility to the third dimension 
bridging the Unmanned Traffic Management with Urban 
Traffic Management. The goal of such projects is to develop 
a cloud-based software platform to integrate low-flying 
unmanned aircraft systems into the airspace safely. 
Since scientific literature is mostly limited to the physical 
implementation of the flying devices and to the control 
methods, not to the integrated solutions, maybe the most 
useful and with open content related work from software 
point 
of 
view, 
about 
algorithms 
and 
information 
management systems focused on drone traffic management 
systems is represented by Plaza [21]. The author creates an 
elaborated model of the system of information for the traffic 
management of unmanned aircraft systems composed by 
Users (the human components clustered on 10 groups 
depending on their role), Functions (22 information 
management activities according to the temporality of the 
flight / mission), Datasets (managed data sorted into groups 
by the content and the temporal validity in order the 
conformability and the orderliness) and 2 Functional 
subsystems 
(Technical 
infrastructure 
elements 
and 
Operational support systems). The model is implemented 
like an information structural matrix, which systematically 
contains the managed data handled by the users connected to 
the execution of the functions. The activities described are 
related only to civil operations, not military, which must 
follow other rules. Besides collecting data covering UAV 
position and movement data, UAV status data, UAV type 
related data (static data), mission-related flight plan data, the 
author also considers environment-related data, which is 
relevant for the safe operations. Operation of the information 
structural model provides comprehensive data sharing 
among the industrial partners, deliverables companies, user 
communities, about the UAVs and their operations. Another 
merit of [23] is that it provides a clear separation of notions 
like UAV (Unmanned Aerial Vehicles), which is the flying 
object (technical parts), and the UAS (Unmanned Aircraft 
Systems), which is a greater technical solution, that includes 
the UAV plus the sum of the control infrastructure (the 
human operator). 
These related works do not handle the increasing number 
of drones and the need for traffic planning, including the 
dynamic establishment of no-fly zones and noise reduction. 
Our solution addresses these problems, but does not concern 
itself with battery time. We expect the development of 
battery technology to increase both distances traveled and lift 
capacity. 
The solution is based on two well-known areas from 
computer science: scheduling and routing. To allocate time 
slots, a scheduling algorithm is used. The scheduling 
algorithm makes sure that the drone gets operating space 
throughout the flight. The routing algorithm calculates an 
efficient route through the airspace. Scheduling algorithms 
are heavily used in operating systems. Routing algorithms 
are found in both computer networks and the design of 
printed circuit boards and integrated circuits. 
IV. 
DRONE FLIGHT PLANNING 
An increase in drone traffic will require a traffic 
management system to control the airspace.  
Land-based transport is basically handled by paths in a 
two-dimensional grid, but with possibilities to make 
intersections multi-level to avoid roundabouts or single-level 
intersections. The infrastructure for land-based transport is 
expensive and inflexible. A road or a train line normally has 
a life-span of hundreds of years. 
A. A layered model of the airspace 
The difference between land-based transport and air-
based transport is that paths may be established in three 
dimensions since it is possible to divide the airspace into 
several horizontal layers. This is already done for 
conventional air transport. Drones will use the airspace 
below that used by conventional air transport. Another 
advantage is that airspace is not fixed. The paths may be 
dynamically established and removed based on needs. 
14
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

 
 
Fixed high-level path 1 
 
 
Fixed high-level path 2 
 
 
Endpoint layer 1 
 
 
Endpoint layer 2 
 
 
Endpoint layer 3 
 
Figure 1.  Layer design 
The dynamic flight planning system presented here is 
using five levels (Figure 1), but the number of levels can be 
increased if necessary. On the upper levels, a number of 
fixed paths are established. These will be the “highways” for 
the drone traffic. When the drone needs to go from a location 
to the highway entry point or from the highway exit point to 
a specific location, separate paths will be established on 
endpoint layers 1, 2 or 3. The algorithm will start with 
endpoint level 1, and check for conflicts. If a conflict is 
detected, it will move on to endpoint layer 2, and so on. 
These paths are allocated dynamically. The algorithm 
proposed for channel routing is based on a multi-layer 
algorithm for printed circuit board design. The modification 
is to make it dynamic. A set of fixed channels is established. 
Then, from the nearest point in an existing channel, the 
dynamic path is established from the source to the 
destination. 
The rationale for using fixed upper levels (“drone 
highways”) is considerations about noise. This is important 
for urban areas, where the main corridors for drone traffic 
may be located away from noise sensitive areas.  
B. The algorithm 
Figure 2 shows the establishment of the flight path from 
the point of departure (S) to the point of arrival (E). The 
yellow path shows a part of fixed high-level path (“drone 
highway”). The orange paths show the path from the point of 
departure (S) to the entry point of the fixed path, and from 
the exit point of the fixed path to the point of arrival (E). The 
algorithm will include the following steps: 
1. Based on departure location, find the nearest entry point 
to the higher-level fixed path (“drone highway”) 
2. Based on arrival location, find the nearest exit point 
from the higher-level path (“drone highway”) 
3. Calculate distance and air time between departure point 
and entry point 
4. Calculate distance and air time between the exit point 
and the arrival point 
5. Search for next available slot time taking distance to the 
higher-level path into consideration 
6. Reserve slot time 
7. Check for collisions in the departure area, if collision 
move to next endpoint layer 
8. Check for collisions in the arrival area, if collision 
move to next endpoint layer 
9. Submit flight plan 
 
Figure 2.  Submitted flight plan 
A more formalized version of the algorithm using a single 
higher-level path (“drone highway”) is shown in Figure 3. 
 
 
Input:  
HWay_ID, DR_ID_, DR_ID_Velocity, 
Start_Loc, Arrival_loc;  Entry_SET, Exit_SET; 
Output: 
DR_ID_Flight_Plan ; 
Start: 
Chosen_HWay_Entrance :  
    If  ( ∀ HWay_Entrance  ∈ Entry_SET ) 
      Dist (Start_Loc, Chosen_HWay_Entrance)   ≤  
      Dist(Start_Loc, HWay_Entrance) ,  
Chosen_HWay_Exit  :  
    If ( ∀ HWay_Exit  ∈ Exit_SET ) 
      Dist (Arrival_Loc, Chosen_HWay-Exit)   ≤  
      Dist(Arrival_Loc, HWay_Exit) ,  
  Calculate Time (Start_Loc,  Chosen_HWay_Entrance); 
  Calculate Time ( Arrival_Loc,Chosen_HWay_Exit) ; 
  Assign Slot_Time;  
  Return( Drone_ID_Flight_Plan); 
End 
 
Figure 3.  Single-level path flight planning 
At the scheduled time, the drone will take off and follow 
the calculated path to its destination. Figure 4 shows how 
multiple fixed paths can coexist. In this case, the paths will 
be on different levels, with intersections where drones can 
shift from one fixed path to another. This increases the 
complexity of the algorithm, since slot times for each path 
must be taken care of.  The green fixed path is on one of the 
upper levels, the two blue paths are on another upper level. 
The drones will shift from one level to another at the 
interchanges (grey color). 
15
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

 
Figure 4.  Multiple fixed paths on the upper levels 
The enhanced algorithm is shown in Figure 5. 
 
 
Input: 
HWay_ID[I], DR_ID[J]_, DR_ID[J]_Velocity, 
I ∈ {1…….K} /* number of highways */ 
J ∈ {1……..M} /* number of drones */ 
Start_Loc[J], Arrival_loc[J];  Entry_SET[I], Exit_SET[I]; 
Departure_Collision[J] = False; 
Arrival _Collision[J] = False ; 
Output: 
Flight plan for all drones; 
Start: 
Stop = False; 
While (Not  Stop) { 
  For all drones: J: 1 to M: 
    Chosen_HWay_Entrance [J] :  
      If  ( ∀ HWay_Entrance [I] ∈ Entry_SET[I] ) 
        Dist(Start_Loc[J], Chosen_HWay_Entrance[J]) ≤    
        Dist(Start_Loc[J], HWay_Entrance[I]) ,  
    Chosen_HWay_Exit [J] :  
      If ( ∀ HWay_Exit [I] ∈ Exit_SET[I] ) 
        Dist (Arrival_Loc[J], Chosen_HWay-Exit[J])   ≤   
        Dist(Arrival_Loc[J], HWay_Exit[I]) ,  
    Calculate Time [J] (Start_Loc[J],  
Chosen_HWay_Entrance[J]); 
    Calculate Time [J] ( Arrival_Loc[J],Chosen_HWay_Exit[J]) ; 
    Assign Slot_Time[J]; 
  If ( ∀ x ∈ {1…..M} , Departure-Collision[x] = False and 
    Arrival_Collision[x] = False) 
    Stop = True; 
  Else 
    If ( ∀ x ∈ {1…..M} , Departure-Collision[x] = True OR 
      Arrival_Collision[x] = True) 
       Remove collision by moving to next endpoint layer ; 
       Stop = True; 
} 
Return( Drone_ID_Flight_Plan[J]); 
End; 
 
Figure 5.  Multiple level paths flight planning 
C. Disruptions 
Disruptions may happen.  In particular, disruptions may 
be caused by the establishment of temporary no-fly zones. 
This can be above areas that either represents a danger for 
people on the ground, like large gatherings, or accidents 
where drone traffic could disrupt emergency service 
operations. 
Disruptions may also be caused by priority traffic, e.g., 
for delivering a heart defibrillator. 
If drones have communication capabilities, it is possible 
to upload new flight instructions if something happens. 
Figure 6 shows the establishment of a no-fly zone marked in 
red. The top-level path needs to be reconfigured. 
In this case, it is possible to change the path to not 
conflict with the no-fly zone. The distance will be one grid 
unit larger, so original slots can be reused. 
 
 
Figure 6.  Temporary no-fly zone established 
 
Figure 7.  Dynamic rerouting 
16
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Figure 7 shows the reconfigured high-level path, and also 
introduces a no-fly zone close to the arrival point. The last 
stretch is recalculated to not interfere with the no-fly zone. 
Since drones always have a limitation on flying distance, 
it is necessary to plan for situations where the drone will run 
out of battery before accomplishing its mission, e.g., due to 
the establishment of no-fly zones or priority traffic. The 
problem can be solved by establishing some locations where 
drones can land and later be picked up by the operator. 
V. 
CONCLUSIONS AND FUTURE WORK 
As drone lift capacity is growing and travel distance 
increases, drones will be used for commercial purposes. 
Drone traffic, especially in cities, will increase dramatically. 
This calls for a drone traffic management solution to keep 
the air space safe. In this paper, we have shown one possible 
solution to drone traffic management using multiple layers 
where some layers contain fixed paths (“drone highways”) 
and other layers are used for traffic from departure points to 
the highways and from the highways to the arrival point. A 
flight plan is submitted before the flight, and the system will 
find the best possible schedule. 
However, an important issue regarding drones refers to 
governing laws of flying. According to [24], every country 
has specific laws. Thus, our algorithm would not be applied 
in regions like the State of Alabama, USA, where a city 
ordinance ban flight over city properties, parks and 
recreational areas or any other area specified by the police. 
Future research includes developing a simulator for the 
flight scheduling system. The simulator should allow for a 
large number of submitted flight plans in order to prove the 
concept. The simulator should have a visualization module to 
show drones moving in the airspace. 
Since, as far as we know, no fully functional and 
available UTM solution is known, the business model and 
operating methods of the system are not known at present. 
Future research should find answers to these questions and 
address the development of such measures. In this sense we 
will also include developing a business model for the flight 
planning system. 
Blockchain 
is 
an 
immutable 
distributed 
ledger. 
Cryptographic techniques make sure that it is not possible to 
change the content of an entry when it is put on the 
blockchain. All entries are recorded in blocks that are 
distributed to many computers. If one or more computers 
fail, the data is still obtainable from the network. If there 
should be an inconstancy, the majority will win. Essentially, 
blockchain makes it possible to do transactions without an 
intermediary. Since a traffic planning system will handle 
many different actors, the use of blockchain technology and 
smart contracts may be explored as a possible repository for 
flight plans.  
ACKNOWLEDGMENT 
The research presented here was partially financed by the 
Research Council of Norway (RCN) as part of the project 
AUTOSTRIP, project number 280865. The idea for this 
paper was discussed in a meeting with Indra Navia AS, a 
global company with more than 20 years’ experience in the 
field of air traffic control systems. The meeting inspired the 
authors to develop the ideas presented here. 
 
REFERENCES 
[1] U. Fiore, A. Florea, and L. G. Pérez, “An Interdisciplinary 
Review of Smart Vehicular Traffic and Its Applications and 
Challenges,” Journal of Sensor and Actuator Networks, vol. 
8(13), pp. 1-19, 2019. 
[2] Goldman Sachs Research, “Drones Reporting for Work,” 
[Online]. 
Available 
from: 
https://www.goldmansachs.com/insights/technology-driving-
innovation/drones/, 2019.06.10 
[3] A. Meola, “Drone market shows positive outlook with strong 
industry growth and trends,” Business Insider, 2017.07.13, 
[Online]. 
Available 
from: 
https://www.businessinsider.com/drone-industry-analysis-
market-trends-growth-forecasts-2017-7, 2019.06.10 
[4] Amazon, “Amazon Prime Air,” [Online]. Available from: 
https://www.amazon.com/b?node=8037720011, 2019.06.10 
[5] Aircargo 
News, 
“DHL 
Parcelcopter 
launches 
initial 
operations for research purposes,” 2015.02.27 [Online]. 
Available 
from: 
https://www.aircargonews.net/sectors/express/dhl-
parcelcopter-launches-initial-operations-for-research-purpose/ 
2019.06.10 
[6] J. Stewart, “Google tests drone deliveries in Project Wing 
trials,” 
BBC, 
2014.08.28, 
[Online]. 
Available 
from: 
http://www.bbc.com/news/technology-28964260, 2019.06.10 
[7] J. Porter, “Google’s Wing drones approved to make public 
deliveries in Australia,” The Verge, 2019.04.09, [Online]. 
Available 
from: 
https://www.theverge.com/2019/4/9/18301782/wing-drone-
delivery-google-alphabet-canberra-australia-public-launch 
2019.06.10 
[8] M. Williams, “PINC Solutions to launch aerial drones for 
inventory management,” Automotive Logistics, 2014.11.18 
[Online]. 
Available 
from: 
https://www.automotivelogistics.media/pinc-solutions-to-
launch-aerial-drones-for-inventory-management/11871.article 
2019.06.10 
[9] Aljazeera, “UAE to use drones for citizen services,” 
2014.02.12, 
[Online]. 
Available 
from: 
https://www.aljazeera.com/news/middleeast/2014/02/uae-use-
drones-government-services-20142121717319272.html 
2019.06.10 
[10] C. Dillow, “Meet Matternet, the drone delivery startup that´s 
actually delivering,” Fortune, 2015.05.01, [Online]. Available 
from: 
http://fortune.com/2015/05/01/matternet-drone-
delivery/ 2019.06.10 
[11] Unicef, “Unicef and the Government of Kazakhstan Begin 
Test Flights for Emergency Response. [Online] Available 
from: 
https://www.unicef.org/innovation/stories/unicef-and-
government-kazakhstan-begin-test-flights-emergency-
response 2019.06.10 
[12] Unicef, “Drones – Addressing transport, connectivity and 
better emergency preparedness,” 2019.01.23, [Online]. 
Available from: https://www.unicef.org/innovation/drones 
2019.06.10 
[13] Unicef, “Drones take to the Vanuatu sky to test ‘last mile’ 
vaccine delivery to children,” 2019.12.06, [Online]. Available 
from: https://www.unicef.org/eap/press-releases/drones-take-
vanuatu-sky-test-last-mile-vaccine-delivery-children 
2019.06.10 
[14] B. Molina, “A kidney for transplant was delivered by drone 
for the first time ever,” MSN News. 2019.04.29, [Online] 
Available 
from: 
https://www.msn.com/en-
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

za/news/techandscience/a-kidney-for-transplant-was-
delivered-by-drone-for-the-first-time-ever/ar-BBWp5iP 
2019.06.10 
[15] K. Dorling, J. Heinrichs, G. Messier, and S. Magierowski, 
“Vehicle routing problems for drone delivery,” IEEE 
Transactions on Systems, Man, and Cybernetics: Systems, 
47(1), pp. 70-85, 2017. 
[16] N. Nader and G. Reicher, “Drones in European Airspace, 
Initial regulatory steps by the EU,” cepInput, March 2016. 
[Online]. 
Available: 
https://www.cep.eu/fileadmin/user_upload/cep.eu/Studien/cep
Input_Drohnen/cepInput_Drones.pdf 
[17] K. Mok, “Drones That Fly and Drive Using Path Planning 
Algorithms,” The New Stack, 2017.07.16, [Online] Available 
from: 
https://thenewstack.io/drones-fly-drive-using-path-
planning-algorithms/ 2019.10.06 
[18] D. Schermer, M. Moeini, and O. Wendt, “Algorithms for 
solving the vehicle routing problem with drones,” 10th Asian 
Conference on Intelligent Information and Database Systems 
(ACIIDS), Lecture Notes in Computer Science 10751, pp. 
352-361, Springer, 2018. 
[19] B. Eksioglu, A. V. Vural and A. Reisman, “The vehicle 
routing problem: A taxonomic review,” Computers & 
Industrial Engineering, vol. 57, Issue 4, pp. 1472-1483, 2009. 
[20] A. Conner-Simons, “Self-flying drone dips, darts and dives 
through trees at 30 mph,” 2015.10.26, [Online]. Available 
from: https://www.csail.mit.edu/news/self-flying-drone-dips-
darts-and-dives-through-trees-30-mph 2019.06.10 
[21] Z. Dukowitz, “NASA Will Test Drone Traffic Management 
Systems in U.S. Cities as Final Phase of UTM Project,” UAV 
Coach, 
2019.02.22, 
[Online]. 
Available 
from: 
https://uavcoach.com/nasa-utm/  2019.06.10 
[22] J. Plaza, Unifly Set to Define the Future of Drone Traffic 
Management 
for 
Europe, 
Commercial 
UAV 
News, 
2019.01.28 
[Online]. 
Available 
from: 
https://www.expouav.com/news/latest/unifly-future-drone-
traffic-management-europe/  2019.06.10 
[23] S. Zsolt, “Model of the System of Information for the Traffic 
Management of Unmanned Aircraft Systems,” Journal of 
Unmanned Aerial Systems, 4(1), pp. 18-31, 2019. 
[24] UAV Coach, “Master List of Drone Laws” [Online] Available 
from: 
https://uavcoach.com/drone-laws/ 
 
2019.16.10
 
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Citizen Participation through Digital Platforms: the Challenging Question of
Data Processing for Cities
Noémie Lago, Marianne Durieux, Jean-Alexandre
Pouleur and Chantal Scoubeau
Research Center URBAInE, Research Institute HumanOrg
University of Mons
Mons, Belgium
e-mail: {noemie.lago; marianne.durieux; jean-
alexandre.pouleur; chantal.scoubeau}@umons.ac.be
Catherine Elsen and Clémentine Schelings
LUCID Lab for User Cognition and Innovative Design
University of Liège
Liège, Belgium
e-mail: {catherine.elsen; clementine.schelings}@uliege.be
Abstract—This paper focuses on digital platforms supporting
citizen participation in the era of Smart Cities. Our study
presents and analyses two examples of online participation
platforms, implemented by two Walloon cities: Mons and
Liège (Belgium). These two cases highlight the differences and
the similarities between both cities’ interpretation of digital
participation, as well as the difficulties they faced, especially
considering the data processing by city officials. In light of the
challenges observed through those two cases, we suggest that
digital platforms might potentially be misused, and somehow
bias the whole digital participatory process. We therefore issue
recommendations about how to design, launch and manage
such platforms and, moreover, suggest that platforms should
be supplemented by other digital or traditional participatory
processes in order to reach higher levels of participation.
Keywords-citizen
participation;
digital
platform;
data
processing; Smart City; Belgium.
I.
INTRODUCTION
Facing demographic and environmental issues [1], many
cities worldwide are looking for a new urban ideal and are
moving towards a development strategy based on the Smart
City concepts [2]. This “smart” phenomenon gives rise to
citizens’ participation, which is a crucial dimension to ensure
social sustainability of Smart Cities [3]. Cities consequently
face the challenge of organizing such participation as
efficiently as possible, which in turn leads to the proliferation
of digital platforms for citizen participation. This research
aims at studying those popular digital platforms, through the
analysis and the comparison of two platforms implemented
in two Belgian cities, namely Mons and Liège. How are such
digital platforms administered and exploited? What are the
assets and the limits of those platforms? How could such
digital participatory process be enhanced?
This paper is structured in four additional sections.
Section II provides a short literature review about the
emergence of citizen participation as a key aspect of the
Smart
City
and
summarizes
new
interpretations
of
participatory processes in the digital era, including digital
platforms. Section III then gives a global overview of both
Walloon platforms, while Section IV delves into the results
of the two initiatives. Our methodology is briefly mentioned
in Subsection A, followed by our analysis of both platforms
regarding the topics (Subsection B), the “likes” (Subsection
C) and the priority actions (Subsection D) as implemented by
one of the two cities. Finally, Section V focuses on the main
limits
of
both
digital
platforms
and
provides
recommendations to improve such participatory process.
II.
STATE OF THE ART
Citizen participation has always been an important part
of urban governance, this concept being inextricably and
intrinsically linked to the very essence of democracy [4].
Participation of the civic society is therefore much older than
would appear at first sight, considering that the appeal for
participatory action dates back to the events of May 1968
[5].
Since
then,
recurrent
limits
(regarding
“true”
participation) have been continuously reported in the state of
the art, and among them tokenism has been considered as
one of the main risks for participation, i.e., symbolically
hearing the citizens’ voice rather than concretely taking their
comments into account or giving them real decision power
[6]. Over the past 50 years, the public participation has
grown in popularity and citizens are nowadays more and
more empowered to take part in decision-making processes
in their city, especially regarding current issues, such as
environmental and technological developments [7]. Whilst
designers and architects integrate their users’ needs and ideas
through co-design processes [8], policy makers gradually
realize the importance of involving residents in participatory
processes in order to collect their citizen expertise, i.e., an
intertwined
body
of
knowledge
built
on
their
past
experiences, local perceptions and field understanding [9].
In the Smart City context, this collective intelligence is
now recognized as the main source of smartness, ex-aequo
with digital technologies [1]. Until recently, Smart Cities
lacked citizen perspective and were essentially focused on
the
introduction
of
new
technologies
[10][11].
This
technocentric approach has the disadvantage to impose
solutions to the city users, without knowing if those users
really want or need them, and thus without ensuring that they
will eventually use them [3]. Consequently, citizens have
recently been more and more considered as key stakeholders
regarding the overall success or failure of the Smart City,
since they can choose to accept or reject smart solutions and
technologies [10]. The sustainability of the global smart
model thus relies on the active involvement of the residents,
through citizen participation and co-design processes [3].
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Considering the current digital era, enthusiasm for
participation has been growing higher than ever and several
tools have been developed to collect citizens’ point of view.
Along
with
traditional
methods
(e.g.,
surveys,
panel
discussions, advisory boards, workshops, etc.), new forms of
digital participation have consequently emerged in the Smart
City context. Based on Arnstein’s eight-level ladder of
citizen participation [6], Douay proposes a classification of
those emerging digital participatory processes according to
citizens’ decision power (see Table 1 below) [12]. This
renewed ladder of participation shows that, according to this
author, the digital era has not changed the types and levels of
participation, but rather offers new and dematerialized tools
to achieve them. According to the literature, Douay’s model
could be complemented by several other examples of digital
participatory modes. For instance, sensors and wearables
collect
information
from
a
large
number
of
people,
sometimes unwittingly, and the aggregated data reveals
trends and patterns attesting to habits and lifestyles [13]. In
the same vein, big data can also be generated from
smartphone applications through which citizens can share
real-time, geolocated information with the community and
the municipality [14]. Additionally, one has to observe that
Douay’s ladder does not yet include digital platforms for
citizen participation. Often assimilated to online suggestion
boxes, those platforms become a place to submit ideas for
one’s city and to vote for the ideas that should take
precedence, according to the voters’ points of view, and
therefore be implemented through concrete projects or
policies [1]. In that regard, those platforms enable active,
bottom-up involvement of citizens.
TABLE I.
LADDER OF PARTICIPATION ADAPTED TO DIGITAL
PROCESSES [12]
Participation type
Activities
Platform examples
Co-decision
Deliberation
Debates and votes
DemocracyOS
Co-decision
Law or program
design
Consultation on the
bill for a digital
Republic
Contribution
Co-design
Collaborative
design of digitals
platforms
Hackathons
Partnership
Co-construction of
programs and
decision sharing
participatory budget
Civic dialogue
Consultation
Survey
Online votes
Communication
Dialogue by
message exchange
Chat, Hangout
Information
Information 2.0
Top-down
communication with
the possibility of
commenting or
reacting (like)
Social networks
Information 1.0
Top-down
information without
the possibility of
communication
Newsletter
In 2016, the French Digital Secretariat of State has
developed a classification of “Civic Technology”, based on
the Knight Foundation [15] and adjusted to the French
context. This classification is divided into “technology for
democracy” or “Gov Tech”, and “technology for civic
engagement” or “Civic Tech”. On the one hand, Gov Tech
are top-down tools which aim to improve public services
and democratic practices (e.g., public spaces reporting
tools). Civic Tech, on the other hand, are bottom-up tools,
aiming to improve civic engagement of citizens (e.g.,
participatory budgets). In this classification, platforms of
citizen participation are located at the intersection of the two
categories. They indeed meet cities’ interest in collecting
citizens’ opinions in a convenient way, while encouraging
citizens to get involved in the development of their city [16].
In the European context, these platforms seem to grow as
the most popular form of digital participation as many cities
use them to reach citizens’ views and local concerns
[17][18]. Wallonia is no exception: since 2017 cities such as
Mons and Liège (among others) launched their first digital
platforms for citizen participation. How were both processes
organized?
What
were
the
results?
Where
do
those
platforms
rank
in
the
renewed
ladder
of
citizen
participation? Are these platforms used as Gov Tech and/or
Civic Tech tools?
III.
PRESENTATION OF THE STUDIED PLATFORMS
Respectively called “Demain, Mons” and “Réinventons
Liège”, the two Walloon initiatives appear similar in many
ways, since both platforms are supplied by the same
company, CitizenLab. However, they have been customized
for each city, implemented independently, and several
discrepancies are observed between the two processes. Table
II presents a comparison of both platforms and emphasizes
their commonalities and differences, often stemming from
the choices of the municipality.
As far as the monitoring of the project is concerned, a
major difference exists between the two cases. The city of
Liège has published the results of the platform in November
2017, and it is not yet the case in Mons, since the project has
been put on hold around municipal elections in October
2018. One has to observe that CitizenLab, the provider of the
two platforms, did not offer data analysis services in 2017.
Both cities received the data in Excel format and had to
analyze it. This is a real challenge for cities not used to deal
with big data, and might partly explain why Mons at the
present time still experiences some difficulties in pursuing
with concrete proposals.
IV.
RESULTS
A.
Methodology
We collected the ideas and votes of both platforms in
Excel format. The city of Mons directly transmitted the data
to us, but in order to protect citizens' personal data, they only
sent us the content visible on the platform.
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

TABLE II.
COMPARISON OF “DEMAIN MONS” AND “RÉINVENTONS
LIÈGE”.
Context
City
Mons
95 000 inhabitants
Liège
196 000 inhabitants
Platform
name
“Demain, Mons” = “Mons
Tomorrow”
“Réinventons Liège” =
“Let’s reinvent Liège”
Timing
Process
One single phase: idea
submission and vote at
the same time
3 phases:
(1) Idea submission
(2) Vote
(3) Analysis by the city
and communication
of the results
Duration
9 months from May 2017
to January 2018
8.5 months from March
to November 2017
Information
Communi
-cation
- Municipal newspaper
- 21 meetings between
citizens and the
municipal council, in
different neighborhoods
- Municipal newspaper
- 2 info sessions for the
students of the
University of Liège
Inspiration
- weekly email with
newly submitted ideas
- 22 ideas submitted by
the city
- 5 thematic conferences
- 20 first ideas submitted
by the city
Updates
Reminder emails
Reminder emails,
promotional videos and
Facebook posts
Idea submission
Participa-
tory modes
- online platform
- paper form to send
- 5 thematic workshops
- online platform
- 5 workshops with
neighborhood
committees
Number
of topics
12 topics: multiple
choices are allowed
5 (then 7) topics: only
one topic per idea
Number
of ideas
909 ideas, including 113
via paper form put online
by the city for vote
983 ideas
Number
of ideas’
authors
286 online, unknown for
paper form
353
Idea
selection
Number
of votes
9,960 votes
8,336 likes
1,624 dislikes
94,688 votes
84,130 likes
10,558 dislikes
Results
No official analysis nor
communication of results
77 priority actions
In Liège, we manually collected the data directly from
the platform, but since November 2018 the city has made
them available on its open data platform [19]. In both cities,
we therefore received no access to the personal data of the
contributors (age, living place, number of votes, etc.) nor the
number or duration of citizens’ connections and so on. As a
result, our study focuses on the citizens' ideas and on the
cities’ data management and processing. More specifically,
our research is not intended to be an exhaustive analysis of
both
platforms,
but
rather focuses on
the challenges
encountered by both cities in terms of data processing. In
further research, our analysis should be complemented by a
study of participants: profiles, representativeness, digital
divide, pressure groups, etc.
In order to gain a better understanding of the challenges
encountered through data processing, we conducted 3 semi-
structured interviews: the first one with the Mons Smart
City
Manager,
the
second
one
with
the
Mons
Communication Manager, and the third with the CitizenLab
Director of Francophone Markets. In Liège, we were offered
no opportunity to meet any of the city representatives
despite our repeated solicitations. We also attended several
presentations by CitizenLab during 2018, when they were
developing a data analysis method with “Demain, Mons” as
an example.
Moreover, in order to be able to conduct critical review
of the data processing as managed by the cities, we made
our own qualitative and quantitative analysis of the data.
The first step of our data analysis consisted in reviewing the
whole set of ideas in order to check the number of
suggestions associated with each predefined topic. We also
checked the consistency between the detailed description of
those ideas and the topic chosen by the participants or the
city. Beyond the number of ideas, we also studied the
allocated number of likes and dislikes, as a supposed marker
of popularity for the ideas. However, those figures reveal to
be insufficient to get a global overview of the citizens’
proposals, which content and keywords are also important.
Therefore,
we
additionally
conducted
a
more
micro
perspective analysis and developed a tree-like structure of
the submitted ideas, which are organized by thematic
clusters.
B.
Analysis of the predefined topics
In Mons, when a citizen suggested an idea, he/she had to
link it to one or more topics among the 12 predefined ones,
namely: Mobility; Urbanism and heritage; Social cohesion;
Culture
and
tourism;
Sustainable
development;
Employment, economy and trade; Cleanliness; Security;
Education and training; Sport and associative life; Local
governance; Housing. In Liège, 5 topics were proposed to
citizens
during
the
ideas’
submission
phase:
Energy
transition;
Social
inclusion;
Citizen
participation;
Collaborative practices and creative approaches; Digital
revolution. We observe a difference between the two cities:
the topics in Mons are more precise and focused on citizens'
day-to-day lives whereas in Liège they are broader and more
theoretical. These choices of topics reflect local political
projects, and this way guide and may restrict citizens'
proposals. Our analysis of the data reveals some ideas off
topics but still relevant for the city. It shows that citizens use
the platforms to express themselves, even though their ideas
deviate from the topics chosen by the city.
In Mons, in order to process the collected data, the city
decided to associate a unique topic to each proposal. The
goal was, according to the interviewed city representatives,
to avoid duplicates and to be able to transmit each idea to
the aldermen and to the concerned technical services for an
expert opinion. The possibility for citizens to choose several
topics
made
this
selection
step
complex,
particularly
because many proposals pointed to several subjects (e.g.,
“redevelop a green space and create a parking relay”). As
we compare the multiple topics chosen by the citizens and
the unique ones later defined by the city agents (see Figure
1), we observe that several topics appear popular (for
instance “social cohesion” and “sustainable development”)
21
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

as they are retained for many proposals, but yet being the
main subject for only 30% of the original ideas.
Figure 1.
Topics comparison for “Demain, Mons”
We also compared these topics to those proposed by
CitizenLab, the platform provider, obtained through their
Natural
Language
Processing
(NLP)
algorithm.
This
algorithm analyses the content of the proposals, gathers
similar ideas and extracts keywords. The operating details
are a trade secret closely guarded by CitizenLab. Some of
the main keywords highlighted by the algorithm are
identical to the platform’s topics. But interestingly, the
algorithm did not keep three topics (i.e., Security, Urbanism
and heritage, Local governance) and created two (Public
spaces and Citizenship). Yet, “Citizenship” appears only
once in the 909 citizens’ text ideas, which are therefore
somehow
interpreted
by
the
algorithm.
Without
transparency on the method or open source software, how to
be sure that the results reflect citizen ideas? Moreover, the
“Public spaces” topic includes the largest number of
proposals according to the algorithm, ranking first in front
of the “Mobility” topic that was #1 in citizen and city
rankings. This is not surprising knowing that “Public
spaces” is an inclusive notion concerning every city. Indeed,
cycle paths, waste management or car parks can be linked to
public spaces. The negative aspect of such a broad topic is
its low operationality: it requires skills spread across many
technical city services to be realized and it is redundant with
topics such as mobility, security, cleanliness, etc. Thus, the
predefined topics should remain as precise as possible, or at
least correspond to the same level of detail in order to avoid
overlaps between topics.
In Liège, of the process the city, has modified some
predefined topics and reorganized the classification of
citizens’ proposals. These successive changes are shown in
Table 3. We observe that the topics were strongly modified
after the ideas deposit phase. Three out of five topics have
been
merged
(to
become
a
single
“Participative,
collaborative
and
digital
city”
concept),
while
five
completely new topics appeared, more focused on their
terminology and urban-planning oriented. Moreover, the
creation of the topic “unclassifiable” is a recognition of
citizens proposals that fall outside any predefined scopes.
However, none of these 57 “unclassifiable” ideas is part of
the 77 priority actions to be carried out. Thus, the topics’
reorganization after the ideas generation phase and before
the voting phase is a function of many parameters: citizen’
ideas of course, but also, and perhaps more surprisingly,
general city policy.
Moreover, after
the
voting
phase and
before the
presentation of the results, two topics were again modified
without any impact on the ideas distribution. “Green spaces,
greening, urban agriculture” has become “Greening and
urban agriculture” and “Equip, plan and embellish the city”
was modified into “Green, collective and peaceful areas”.
From a technical point of view, one could wonder: how did
“green spaces” change from one topic to another without
impacting the ideas classification? And, from a semantic
point of view: why choose to separate “green spaces” from
“greening”, but to associate them with “collective” and
“peaceful” spaces? Despite a greener coloration, the topic
“Green, collective and peaceful areas” grows closer to the
idea of “public space” put forward in Mons by CitizenLab’s
NLP algorithm. As for Mons, we observe that this large
topic lumps together a variety of sub-questions, which raises
again the challenge of low operationality. In that regard, one
would wonder why any city would want to bring out the
issue of public (green, collective and peaceful) spaces as the
main topic. We interpret this as a purely political choice.
To conclude, our study of the topics shows that the
choice of topic title can create big variations in the obtained
results. To promote objectivity in the presentation of the
results, an a priori scientific reflection on the naming of the
topics therefore seems essential. In addition, transparency
regarding the designation of topics and their modification
during the process can avoid accusations of civic washing.
TABLE III.
EVOLUTION OF THE TOPICS THROUGH EACH SUCCESSIVE
PHASE IN LIÈGE.
Phase 1
Ideas
Phase 2
Votes
Phase 3
Results
Submitted
ideas
Selected
ideas
Energy transition
30
11
Social inclusion
47
12
Citizen
participation
Participative, collaborative and
digital city
154
10
Collaborative
practices and
creative
approaches
Digital
revolution
Green spaces,
greening,
urban
agriculture
Greening and
urban
agriculture
110
14
Equip, plan
and embellish
the city
Green,
collective and
peaceful areas
287
11
Mobility
180
9
Art, culture, heritage, toursim
118
10
Unclassifiable
57
0
TOTAL
983
77
22
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

C.
Analysis of the “likes” and “dislikes”
The voters had the opportunity to “like” the ideas that
they wanted to see implemented, but also to “dislike” some
in
order
to
demonstrate
their
rejection
against
some
proposals. Analyzing the “likes” and “dislikes”, a large
discrepancy is observed between the two platforms: there are
almost 10 times fewer votes in Mons (around 10,000) than in
Liège (around 100,000), while it has been possible to vote
for 9 months in Mons and only for one month in Liège. In
Liège, the voting phase took place distinctively after the
submission phase, while these two phases were concomitant
in Mons. Thereby, Liège did two distinct communication
campaigns (about ideas submission then about votes), while
in Mons, communication was all along centered on ideas
submission. We suggest the discrepancy is a consequence of
the temporal organization of each process, but is also
probably linked to the potential number of voters (around
200,000 inhabitants in Liège; less than 100,000 in Mons).
In Mons, out of 910 proposals, only 360 received more
than 5 cumulative likes, and only 15 proposals (i.e., 1.6%)
got more than 50. The “cumulative likes” here corresponds
to the total number of votes, each “dislike” subtracting one
point from the total number of “likes”, each counting for one
point. In Liège, 882/983 proposals received more than 5
cumulative likes, and 514 ideas (i.e., 52%) obtained more
than 50. Therefore, the study of “likes” as a legitimization
marker of ideas has limited interest for "Demain, Mons" but
more meaning for "Réinventons Liège".
To deepen our analysis, we compared the likes to the
number of propositions on the same topic. For "Réinventons
Liège", as shown in Table 4 below, this radically changes the
ranking. In terms of the number of proposals, the category
"Green spaces, collective spaces, peaceful spaces" gathers
twice as many proposals as other topics. When we look at
the cumulative number of likes, yet, the mobility category
becomes the priority concern of citizens, with twice as much
likes as the second topic. Finally, when we look at the ratio
of likes to the number of proposals, it is the “Energy
transition” topic that becomes the main concern, with a ratio
40% higher than the second topic.
TABLE IV.
COMPARISON OF LIKES AND NUMBER OF IDEAS BY TOPICS
FOR “RÉINVENTONS LIÈGE”.
Liège/ topics
Number
of ideas
Cumulative
likes
Ratio
likes/ideas
Green, collective and peaceful areas
287
12664 (#3)
44 (#7)
Mobility
180
26446 (#1)
136 (#2)
Participative, collaborative and
digital city
154
7760 (#5)
57 (#6)
Art, culture, heritage, tourism
118
10073 (#4)
85 (#5)
Greening and urban agriculture
110
13497 (#2)
126 (#3)
Social inclusion
47
4781 (#7)
106 (#4)
Energy transition
30
6025 (#6)
194 (#1)
In that regard, one would wonder which ranking best
reflects the citizens’ expectations. Our hypothesis is that too
many similar proposals lead to the distribution of votes, and
as a consequence generate a bias effect in terms of (variety
of possible) ranking. To improve the process, it would be
interesting for a citizen to be informed of the existence of
proposals close to his/her own idea, in order to avoid
creating duplicates. Then, before the voting phase, the
platform could submit to the citizens an aggregated version
of similar ideas, in order to avoid scattering the votes. A
smaller number of proposals could also allow each citizen to
browse
through all the proposals, which
was
almost
impossible to proceed with considering the 1000 proposals
of “Demain, Mons” and “Réinventons Liège”.
D.
Analysis of the priority actions
The city of Liège was the only one to go through the
whole process and to identify 77 priority actions. Those
priority actions have been selected out from every topic,
except from the “unclassifiable” one. None of these 57 “out
of the box” ideas have indeed been kept as priority actions.
Considering the twenty-first ideas submitted by the city,
nineteen of them have become priority actions. This pseudo
success may reflect two phenomena. On the one hand, the
twenty ideas supposed to encourage and inspire participants
were projected actions that would probably have been
implemented even without the digital platform and the
citizen participation. Indeed, those ideas are not necessarily
the ones with the highest like-scores: only three of them are
in the top 77, but almost all of them will be realized.
Furthermore, there is even one proposal that got more
“dislikes” than “likes” but still remains a priority action. On
the other hand, those twenty ideas impacted the next
proposals, which are sometimes similar or even duplicates.
Therefore, the number of cumulative “likes” increased and
enabled some ideas submitted by the city to rank higher. In
addition, even if it was not intended, the first twenty
proposals might have put on blinders rather than opened the
discussion with the participants, which have certainly been
influenced by the twenty-first interpretations of the five
imposed topics. This snowball effect testifies either to the
importance and the interest related to those ideas apparently
reflecting actual citizens’ concerns, or to the potential misuse
of those digital platforms in a manipulative way.
Moreover, when comes time to determine the priority
actions, logic would dictate to select the ideas with the
highest number of votes and to transform them into concrete
projects. However, considering the dilution effect of the
votes between several similar or even identical ideas, this
obvious choice would not exactly reflect the citizens’ voice.
Therefore, in order to rank the submitted ideas (and their
associated votes) in a clearer way, we established our own
thematic clusters by gathering ideas in subtopics (sometimes
associating close, or identical ideas), then organizing them in
a tree-like structure and thickening the branches according to
the associated cumulative number of likes. At the end of
every branch, we also noted the identification code of each
related idea in order to ease going back to the full
descriptions when needed. Figure 2 is an example of a tree-
like structure for the Liège platform, which more precisely
structures the ideas generated in regard of the most popular
topic, i.e., “Green, collective and peaceful areas”. For
reasons of scale and readability, we simplify this tree by
indicating here the number of ideas for each subtopic rather
than the identification codes of all corresponding projects.
23
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Figure 2.
Tree of ideas for the Liège’s topic “Green, collective and peaceful areas”.
We suggest using the resulting visual map as a decision-
support tool, revealing the sub-thematic nodes with the
highest citizen interest, i.e., a relative huge number of
combined likes and/or proposals that are assimilable and
consistent with each other. This could help merging the
closest ideas and creating more precise subtopics, which
would in turn be useful to navigate on the platform.
V.
CONCLUSION
Our
analysis
of
the
data
generated
through
two
participative platforms, as well as the analysis of the data
processing conducted by both cities, highlight several
challenges and paths for future improvements. Our analysis
of the topics (subsection IV B) underlines the importance of
defining clear and distinct topics, as well as transparency
regarding their selection and modifications during the
process. Our analysis of the likes (subsection IV C) suggests
merging and co-managing similar ideas, in order to decrease
the risk of scattering the votes and to ease the global
visualization of the ongoing process. To achieve that goal,
each proposal must contain only one idea, and keywords can
be defined by the citizens in order to facilitate the search for
similar ideas and allow to summarize and clarify each idea.
Another possibility is to limit the number of characters, like
on Twitter, which would reduce the risk to receive ideas
spanning over multiple topics, but would also considerably
impoverish the qualitative understanding of each idea.
Concerning the voting phase, our analysis suggests that
citizens invest themselves more when this phase takes place
after the idea submission phase. Then, our analysis of the
priority actions (subsection IV D) shows the necessity of
making qualitative content analysis in addition to votes. If an
algorithm is used, open source software is a first step
towards transparency of the process. Thus, it is essential to
think about data processing before creating the platform.
For Mons and Liège, these first attempts of citizen
participation platforms served as “digital ideas boxes”. In
Liège, it seems that the tool has been oriented to legitimize
actions previously envisioned by the city. In Mons, it seems
it mainly helped to adapt the electoral program for the
municipal elections, the decision makers currently trying to
transform
the
consultation
into
concrete
actions.
We
therefore classify the two platforms as Gov Tech and Citizen
consultation
tools.
According
to
Arnstein’s
ladder,
consultation is part of symbolic participation because
citizens don’t get a decision power [6], although one might
argue that it depends on how the decision makers eventually
use the collected feedback. To achieve this goal in a more
participative way, it would be interesting to associate
platforms with a participatory budget for instance. The
proposals
receiving
the
most
votes
(considering
the
previously stated precautionary principles in terms of
objectifying the total number of votes) would share the
participatory budget and the citizens would realize their idea
with the help of city technical services. This would also be a
motivation for voting, and more votes would mean more
legitimacy for the selected projects.
In the same vein, going one step further, it would be
interesting to let citizen co-create the platform. Indeed, our
analysis demonstrates the impact of the framework and the
process on the results (in terms of topic selection, timing for
the voting phase, etc.). Leaving the citizens with the
24
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

opportunity to co-construct the framework would help to
orient the platform towards citizens’ concerns rather than
reflect political projects. Hackathons or Living Labs would
be appropriate ecosystems to conduct such co-creation.
Hackathons, as well as participatory budgets are classified by
Douay (see Table 1) as co-design tools and constitute forms
of
“contribution”
in
regard
of
the
ladder
of
citizen
participation. Involving citizens in every step would promote
empowerment and civic engagement, which would make
digital platforms a Civic Tech tool. Thus, digital platforms
for citizens participation could serve different levels in the
ladder of participation, depending on their framework, their
underlying process and the goal pursued by the project
managers.
Side-by-side with such digital platforms, we suggest that
face-to-face exchanges would foster additional debates and
offer complementary richness through dialogue. Given the
complexity of smart urban challenges, participants indeed
often need some support in order to extract and produce
concrete ideas from their citizen expertise, based on their
past experiences, actual needs and perceptions. We therefore
suggest
that
more
“traditional”
participatory
modes,
especially
co-design
workshops
with
lay
people
and
professional experts, offers additional added values in regard
of digital platforms and enable participants to move from
concerns to projects. Moreover, in-person participation gives
depth to an idea, does not limit to a one-shot online
submission and this way can be enhanced and justified
through the workshop
Eventually, we emphasize here that it is normal to
encounter difficulties when setting up a new tool, and that
our neutral, remote assessment should nurture a process of
continuous improvement. In that regard, we particularly
insist on the fact that technical and administrative support is
essential to ensure that the citizens understand the feasibility
criteria before making suggestions that would anyway be
automatically rejected by the city officials during the
analysis phase. Such technical and administrative support
could be administered through the various meetings, info
sessions and conferences organized prior and during the
whole idea generation process. Additionally, communicating
the results of this evaluation to the citizens would be a
recognition of their commitment and an encouragement to
pursue participation in the future.
In terms of future work, analysis should be conducted
about the participants (their age, gender, profession, socio-
economic
profile,
etc.)
in
order
to
reach
a
better
understanding of the citizens’ representativity, and possible
digital divide, and thus analyze the impact such digital
participation platforms might have on the representativity
issues.
ACKNOWLEDGMENT
This research is part of the “Wal-e-Cities” project, funded
by the FEDER and the Walloon region. We would like to
thank the funding authorities, as well as the interviewed city
representatives of Mons and the CitizenLab Director of
Francophone Markets.
REFERENCES
[1]
D.
Gooch,
A.
Wolff,
G.
Kortuem,
and
R.
Brown,
“Reimagining the role of citizens in smart city projects,”
Adjunct Proceedings of the 2015 ACM International Joint
Conference on Pervasive and Ubiquitous Computing and
Proceedings, New York, pp. 1587–1594, 2015.
[2]
M. Bulu, “Upgrading a city via technology,” Technological
Forecasting and Social Change, vol. 89, pp. 63–67, 2014.
[3]
T. Monfaredzadeh and R. Krueger, “Investigating social
factors
of
sustainability
in
a
smart
city,”
Procedia
Engineering, vol. 118, pp. 1112-1118, 2015.
[4]
J. le Maire, La grammaire participative. Architectural and
urban theories and pratices 1904-1968. University Paris I
Panthéon-Sorbonne, 2009.
[5]
M.-H. Bacqué and M. Gauthier, "Participation, urbanism and
urban studies. Four decades of debate and experience since S.
R. Arnstein's A ladder of citizen participation”, Participations,
vol. 1, no. 1, pp. 36–66, 2011.
[6]
S. R. Arnstein, “A Ladder Of Citizen Participation,” Journal
of the American Planning Association, vol. 35, no. 4, pp.
216–224, 1969.
[7]
G. Rowe and L. J. Frewer, “Public participation methods: a
framework for evaluation,” vol. 25, no. 1, pp. 3-29, 2000.
[8]
E. B.-N. Sanders and P. J. Stappers, “Co-creation and the new
landscapes of design,” CoDesign, vol. 4, pp. 1–16, 2008.
[9]
Y. Sintomer, “From the user knowledge to the citizen job ? ”,
Political Reasons, vol. 31, no. 3, pp. 115–133, 2008
[10] H. Chourabi et al., “Understanding smart cities: an integrative
framework,” 45th Hawaii International Conference on System
Sciences, HICSS, Maui, 2012, pp. 2289-2297.
[11] T. Guelzim, M. S. Obaidat, and B. Sadoun, “Introduction and
overview of key enabling technologies for smart cities and
homes,”
in
Smart
Cities
and
Homes:
Key
Enabling
Technologies, Elsevier, pp. 1–16, 2016.
[12] N. Douay. Urban Planning in the Digital Age [Online].
Available
from:
www.researchgate.net/publication/315782172_Planifier_a_l'h
eure_du_numerique [retrieved: 06, 2019]
[13] J. Bohn, M. Langheinrich, F. Mattern, and M. Rohs, “Living
in a world of smart everyday objects - Social, economic and
ethical
implications,”
Human
and
Ecological
Risk
Assessment, 2007.
[14] A. Vanolo, “Is there anybody out there? The place and role of
citizens in tomorrow’s smart cities,” Futures, vol. 82, pp. 26-
36, 2016.
[15] Knight Foundation. What does the civic tech landscape look
like?
[Online].
Available
from:
https://knightfoundation.org/features/civictech/ [retrieved: 06,
2019]
[16] C. Mabi, “Citizen hacker,” in Life of ideas [Online].
Available from: www.laviedesidees.fr/Citoyen-hackeur.html
[retrieved: 06, 2019]
[17] S. Niederer and R. Priester, “Smart citizens: exploring the
tools
of
the
urban
bottom-up
movement,”
Computer
Supported Cooperative Work, vol. 25, no. 2–3, pp. 137–152,
2016.
[18] J. Willems, J. Van den Bergh, and S. Viaene, “Smart city
projects and citizen participation: the case of London,” in
Public
sector
management
in
a
globalized
world,
R.
Andeßner, D. Greiling and R. Vogel, Eds. Wiesbaden:
NPOManagement, Springer Gabler, pp. 249-266, 2017.
[19] City of Liège, Open data platform [Online]. Available from:
opendata.liege.be [retrieved: 04, 2019]
25
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

WiFi and LoRa Energy Consumption Comparison in IoT ESP 32/ SX1278 Devices 
 
 
Laura García, Jose M. Jimenez, Jaime Lloret 
Integrated Management Coastal Research Institute 
Universitat Politècnica de València 
Valencia, Spain 
e-mail: laugarg2@teleco.upv.es, jojiher@dcom.upv.es, 
jlloret@dcom.upv.es 
Pascal Lorenz 
Network and Telecommunication Research Group 
University of Haute Alsace 
Colmar, France 
e-mail: lorenz@ieee.org
 
 
Abstract—The use of Internet of Things (IoT) devices has 
spread through many different fields. Transport, health, and 
energy management of farming are some of the areas where 
IoT systems are being utilized. The selection of the wireless 
communication technology for the IoT system is paramount for 
its optimal performance. However, factors such as desired 
coverage or energy consumption must be considered for this 
selection. In this paper, several tests to determine the battery 
life that can be obtained after performing WiFi and LoRa Low 
Power Wide Area Networks (LPWAN) transmissions with a 
low-cost IoT device has been performed. With a 5 second 
transmission interval and default settings, similar results were 
obtained for both WiFi and LoRa. Furthermore, WiFi 
outperformed LoRa with the default settings and a 30 second 
transmission interval. Lastly, LoRa did outperform WiFi when 
the settings where changed so as the transmission power of 
LoRa was that of 10 dBm. 
Keywords-Energy consumption; battery life; WiFi; LoRa; 
transmission power. 
I. 
 INTRODUCTION 
Currently, IoT devices are used in a wide variety of 
areas. According to IoT Analytics [1] the areas where IoT 
was most used in 2018 are Smart homes, Wearables, Smart 
Cities, Smart grids, Industrial internet, Connected cars, 
Connected 
Health 
(Digital 
health 
/ 
Telehealth 
/ 
Telemedicine), Smart retail, Smart Supply chain and Smart 
farming. In order to improve the performance of the 
implanted systems, it is necessary for the results observed by 
the sensors to be sent to other systems. The processing and 
storage capacities of IoT devices are generally very limited. 
Usually, in the case of wanting to correct an error or wanting 
to optimize the performance of the observed elements or 
environments, after processing the data, the appropriate 
corrective measures are taken to optimize the observed 
functions. To transmit the information, which is captured by 
the sensors connected to the nodes, both wired and wireless 
technology are used depending on the ease of installation of 
the physical infrastructure in the observed areas. 
In a large number of cases, the sensors used to monitor 
the IoT devices need to establish a wireless communication 
to transmit the observed data. Garcia et al. [2] presented a 
review of wireless technologies that were employed in Smart 
cities, their comparison and the problems that make their 
coexistence difficult. 
One of the areas in which the use of wireless technology 
becomes more evident is in Smart farming. Currently, it is 
very difficult to connect IoT devices that are located in large 
tracts of land through a wired network. In addition, when 
using agricultural machinery, which is often heavy vehicles, 
it is very difficult not to deteriorate or break the copper or 
fiber optic wires deployed in the fields. It is very easy for 
situations to appear where the tools attached to the vehicles 
can drag the cables. For this reason, Smart farming is one of 
the ideal areas where wireless technology should be used. 
Aspects such as foliage density, which can change according 
to the seasons or depending on the growth state of the plant, 
should be considered as they can affect the wireless 
transmission. These types of smart systems for agriculture 
monitor parameters such as irrigation, the humidity and 
temperature of the soil or the environmental conditions. 
There is a wide range of wireless technologies, among 
which we can highlight those that comply with the IEEE 
wireless standards such as IEEE 802.11 [3], IEEE 802.15 
[4], and IEEE 802.16 [5]; we also find mobile technologies 
such as 3G [6], 4G, 5G. In addition, we can find other 
proprietary technologies such as LoRa [8], NB-IoT [9], and 
Sigfox [10]. 
In some situations, it is necessary to use a large number 
of sensor nodes. Obviously, the cost of the nodes, if they are 
used in large numbers, can be prohibitive. In addition, if 
mobile technologies are used to establish transmissions, such 
as 4G or any other, the cost of the node is significantly 
increased, and maintenance is also expensive. Furthermore, it 
would be necessary to hire the services of a mobile operator 
that has coverage in the space that will be monitored. 
We have observed that inexpensive nodes that include 
wireless technologies are available on the market. Among 
the most currently employed we can find nodes that include 
IEEE 802.11n interfaces, Bluetooth Low Energy (BLE) and 
LoRaWan. 
One of the main problems that we found when 
implementing a solution is the energy consumption of the 
nodes. If the nodes remain active in real time, to know at any 
moment the parameters that are considered necessary, they 
will consume a large amount of energy. Assuming that the 
nodes are distributed in dispersed locations, where it is not 
26
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

possible to bring the energy at reasonable costs, the supply of 
electrical power can become a big problem. Depending on 
the needs of different crops, the observation time may vary, 
but if the difference in energy consumption of the nodes is 
based fundamentally on the employed wireless technology, 
our interest is focused on selecting the most appropriate 
technology, so that energy consumption is minimal. 
For all the reasons described previously, we have carried 
out some tests to identify which of the two wireless 
technologies considered in this paper can be used in such a 
way that it extends the transmission capacity as much as 
possible, provided that the transmitted data are identical. In 
our work we have studied WiFi and LoRaWan technologies, 
which are supported by our sensor nodes. 
The rest of the paper is organized as follows. Section 2 
presents the related work. A background in WiFi and LoRa 
technologies is presented in Section 3. The testbed is 
explained in Section 4. Section 5 depicts the obtained results. 
Lastly, the conclusion and future work are presented in 
Section 6. 
II. 
RELATED WORK 
In this section, the related work on energy consumption 
studies for WiFi and LoRa is going to be presented. 
When selecting the communication technology for an 
IoT deployment, the energy consumption is one of the most 
considered factors. Several papers focus on determining the 
energy consumption of LoRa and WiFi. 
Ayele et al. [11] performed a simulated comparison of 
the energy consumption of BLE and LoRa in a Wildlife 
Monitoring System. The authors proposed a dual radio 
network model. The nodes were deployed on the collars of 
the animals. The communication between the nodes was 
performed over BLE until it reached a cluster head. Then, the 
cluster head communicated through LoRa to a Lora gateway. 
The energy consumed by the LoRa star topology increased 
as the nodes increased, due to the overhead. However, the 
proposed solution eliminated the energy consumption caused 
by the overhead. The results showed a reduction of energy 
consumption of 97% compared to LoRaWAN. Bor et al. [12] 
presented an analysis of the parameters of LoRa 
transmissions. The authors focused on the effects of 
parameter 
selection 
in 
energy 
consumption 
and 
communication performance. The authors stated that an 
Spreading Factor (SF) of 8, a bandwidth of 500 MHz, 4/5 
coding rate and 8dBm of transmission power (tx power) 
consumed 2.31 mJ and the optimal settings were a SF of 7, a 
bandwidth of 500 MHz, a coding rate of 4/5 and a tx power 
of 11 dBm which had an energy consumption of 1.60 mJ. 
Furthermore, the authors proposed an algorithm that was 
able to probe different settings and selected the best option in 
order to balance the energy consumption. Several 
experiments on the Carrier Sense Multiple Access (CSMA) 
channel access mechanisms of LoRa were performed by 
Phan [13]. The author presented an adaptation of the 802.11 
CSMA protocol for LoRa and a new CSMA protocol. The 
energy consumption of the adaptation and the new proposal 
with different settings was compared as well. The results 
showed the new proposal had a lower energy consumption 
for all settings compared to the adaptation from 802.11. 
Moreover, Pötsch et al. [14] discussed the limitations of 
LoRa gateway deployment. The overhead caused by the 
LoRa gateways is analyzed as well. The energy consumption 
was compared for different spreading factors and bandwidths 
of 125MHz, 250 MHz and 500 MHz. The results showed 
less energy consumption as the spreading factor decreased 
and the bandwidth increased. Furthermore, the energy 
consumption increased as the tx power increased, being 50 
mA approximately for a tx power of 5 dBm and slightly 
above 120 dBm for a tx power of 19 dBm. 
The energy consumption of WiFi nodes has been studied 
as well. Mesquita et al. [15] performed a study on the 
performance of ESP8266 WiFi modules which are branded 
as ultra-low power. The authors performed several 
experiments to measure the energy consumption with sleep 
modes and different transmission configurations. The authors 
stated that the usual configuration of a Delivery Traffic 
Indication Message (DTIM) period of 3 and a 100 ms beacon 
interval had the lowest average current consumption, namely 
14.71 mA. They also stated that ESP8266 modules were able 
to operate for 2 to 4 days with a small battery of 1000mAh of 
capacity. Montori et al. [16] presented a performance study 
on WiFi for IoT systems. The authors utilized ESP-12 SoC 
modules to study their energy consumption under variations 
of the connectivity settings. Tests were performed with Lo-
Po, alkaline and NiMH batteries. The results showed similar 
performances for all batteries with the same configurations. 
Furthermore, the difference in energy consumption between 
awake and sleep mode was less than that stated on 
datasheets. Lastly, Putra et al. [17] performed an energy 
consumption comparison between BLE and WiFi with 
different settings for the beacons. Tests were performed for 
an iPhone device. The results showed BLE had a 30% more 
energy efficiency than WiFi. Furthermore, the battery life of 
the smartphone was of 14 hours and 46 minutes for WiFi and 
16 hours and 38 minutes for BLE. 
To the best of our knowledge, no comparison between 
the energy consumption of WiFi and LoRa in IoT devices 
has been performed before. Therefore, in this paper, we 
compare the effects of WiFi and LoRa transmissions on 
battery life. 
III. 
WIFI AND LORA TECHNOLOGIES 
The two wireless technologies on which we have done 
our work are IEEE 802.11 (also known as WiFi) and LoRa. 
Next, we will describe the main characteristics of both 
technologies. 
A. IEEE 802.11 technology 
In this subsection, a background on the IEEE 802.11 
standards is going to be provided. 
The 802.11 standards use the 2.4 GHz and 5 GHz bands. 
These bands are known as Industrial, Scientific and Medical 
(ISM) radio bands. They are defined in Article 5 of the Radio 
Regulations of the International Telecommunication Union 
(ITU) [18]. These bands do not need a license for their 
operation, but they differ according to the regulations of each 
country. The problem that can arise when using them is that 
27
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

other devices can create interference if they work in the same 
bands. 
The modulation techniques most used by the standard 
are: Binary Phase Shift Keying (BPSK), Quadrature Phase 
Shift Keying (QPSK), Quadrature Amplitude Modulation 
(QAM), Direct Sequence Spread Spectrum (DSSS), 
Complementary code keying (CKK) and Orthogonal 
Frequency Division Multiplexing (OFDM). 
There are three types of frames that are used by the 
standard: data frames, control frames and management 
frames. 
Data frames transport data between connected stations. 
The control frames next to the data frames are used to carry 
out area cleaning operations, channel acquisition and 
maintenance functions associated with the carrier and 
acknowledgments (ACK). The management frames are used 
to join or leave the wireless network and move associations 
of access points. All data frames that are transmitted must 
have an Acknowledgment of Receipt (ACK), otherwise the 
transmission will be considered failed. 
Figure 1 shows a generic 802.11 data frame. An 
important difference that can be appreciated, if we compare 
it with an Ethernet frame, is the larger size of the data field. 
While a standard Ethernet II frame has a size of 1500 bytes, 
the data field of an 802.11 frame reaches up to 2312 bytes. 
 
Frame 
Control
Duration
ID
Add 1
receiver
Add 2
sender
Add 3
filtering
Seq-ctl
Add 3
optional
FCS
Frame 
Body
2 Bytes
2 Bytes
6 Bytes
6 Bytes
6 Bytes
6 Bytes
0 – 2312 Bytes
2 Bytes
4 Bytes  
Figure 1.  802.11 generic data frame 
The ACK frames have a much shorter length, only 14 
bytes. Other frames that should be highlighted in the 
standard are the Request to Send (RTS) and Clear to Send 
(CTS) frames. RTS and CTS frames are used to avoid 
collisions. The size of the CTS frame is 14 bytes while the 
RTS frame has a length of 20 bytes. 
Within the IEEE 802.11 standard, our nodes have 
implemented the IEEE 802.11n, but working in the 2.4 GHz 
band. As defined in the standard, if 20 MHz channels are 
used, the theoretical maximum data transmission speed is of 
72.2 Mbps, and if 40 MHz channels are used, the maximum 
theoretical data transmission speed is of 150 Mbps, when a 
single stream of spatial data is transmitted. 
With regard to power management, the 802.11 standard 
has a defined system. It is a mechanism that allows energy 
savings and is called Power Saving. The stations that work in 
that mode are known as PS-STAs (Power Save Stations). In 
order for them to work properly, their control must be carried 
out by an Access Point (AP). The AP must have all the PS-
STAs registered. If a station is not active, the AP will store 
the packets that are directed to the station until it requires 
them. Periodically, the stations must be activated in order to 
listen if the AP has data for them. 
B. LoRa technology 
In this subsection, a background on LoRa and the 
structure of LoRa packets is going to be provided. 
LoRa stands for Long Range and is a patented spread 
spectrum technology developed by Semtech Corporation. 
LoRa operates in the lower ISM bands (EU: 868MHz and 
433 MHz, USA: 915MHz and 433 MHz). The transmission 
data rate can be from 0.3 kbps to 27 Kbps with a bandwidth 
of 125 KHz. It is widely used for Machine To Machine 
(M2M) applications from IoT. 
LoRa uses a modulation technique derived from Chirp 
Spread Spectrum (CSS). It applies an adaptive modulation 
technique with a multichannel multimode transceiver in the 
base station to receive a multiple number of messages from 
the channels. The relationship between the required data bit 
rate with the chirp rate and the symbol rate in the LoRa 
modulation technique [19] is defined as follows: 
 
Rb = SF · 1 / (2SF/BW)  bits/s 
(1) 
 
where Rb is the modulation bit rate for LoRa, SF is the 
scattering factor and BW is the modulation bandwidth in Hz. 
As seen in (1), the data rate Rb is directly proportional to the 
scattering factor SF. 
Figure 2 shows the structure of a LoRa packet. 
 
 
Figure 2.  Structure of a LoRa packet. 
SF is the ratio between the symbol rate and chip rate. The 
higher the dispersion factor, the higher the Signal to Noise 
Ratio (SNR). The number of chips per symbol is calculated 
as 2SF. For example, if the scattering factor SF is 12, 4096 
chips / symbol are used. Each time SF is increased, the 
transmission speed is halved. This causes the duration of the 
transmission to be doubled, which leads to an increase in 
energy consumption. 
The nodes are transmitted directly to a gateway that 
connects to the backbone network. Gateways are capable of 
receiving and decoding multiple simultaneous transmissions 
(up to 50). 
Three node classes [20] have been defined: 
1) Class A devices:  
The node transmits to the gateway when necessary. After 
transmission, the node opens a reception window to obtain 
messages from the gateway. 
2) Class B final devices with programmed reception 
spaces: 
The node behaves like a Class A node but opens 
additional reception windows at scheduled times. Beacons 
from the gateway are used for the timing of the end devices. 
3) Class C terminal devices with maximum reception 
spaces: 
These nodes are continuous listening, which makes them 
unsuitable for battery operations. 
To configure a LoRa interface, we must take into account 
the following four parameters: carrier frequency, spreading 
factor, bandwidth and coding rate. Depending on the 
parameters that are selected, the energy consumption, 
transmission range and resilience to noise will be 
determined. 
28
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

IV. 
TESTBED 
In this section, the node and the explanation of the test 
are going to be presented. 
In order to perform the tests on energy consumption, we 
utilized the Heltec WiFi LoRa 32 node which is presented in 
Figure 3. It is able to transmit with both WiFi and LoRa. 
This node has an ESP32 microprocessor and a LoRa SX1278 
node chip. It has an SH1.25-2 battery interface onboard as 
well and an integrated management system for lithium 
batteries so as to manage charge and discharge, switch 
automatically between USB and battery power, protect 
against overcharge and detect battery power. It also has an 
integrated OLED (Organic Light-Emitting Diode) display, a 
CP2102 USB to serial port chip and supports the Arduino 
IDE (Integrated Development Environment). It is comprised 
of 29 general GPIO (General Purpose Input7Output) ports. It 
has 
3 
UART 
(Universal 
Asynchronous 
Receiver-
Transmitter) ports, 2, SPI (Serial Peripheral Interface) ports, 
2 I2C (Inter-Integrated Circuit) ports and one I2S (Inter-IC 
Sound) port. It also has a 4 MB flash memory. Table 1 
shows the energy consumption provided by the manufacturer 
[21].  
In order to perform the tests, the Heltec WiFi LoRa 32 v2 
was programmed using the Arduino IDE. The WiFi.h and 
LoRa.h libraries were utilized to establish the connection 
between the two Heltec WiFi LoRa 32 v2 nodes. The default 
settings were utilized for both WiFi and LoRa. Table 1 
shows the default settings for LoRa. The forwarded data was 
the same for both WiFi and LoRa transmissions and it had a 
length of 80 bytes. 
Tests were performed forwarding a packet with a 5 
second interval and a 30 second interval. The utilized battery 
was a 4955 power bank with a capacity of 2000 mAh and an 
output of 5V DC and 1000 mAh.  
V. 
RESULTS 
In this section, the obtained results are going to be 
presented.  
The tests on the energy consumption of WiFi were 
performed for the two selected transmission time intervals. 
Figure 4 shows the average battery life for each transmission 
interval. As it can be seen, a difference of 1 hour was 
obtained between transmitting with each time interval. For 
the time interval of 5 seconds, the obtained battery life was 
10 hours and 10 minutes whereas 11 hours and 14 minutes of 
battery life was obtained for the 30 seconds time interval. 
Therefore, the transmission interval can severely affect the 
energy consumption of the devices that utilize WiFi for their 
communication. 
The tests performed with LoRa considered 5 seconds and 
30 seconds time intervals as well. However, no significant 
differences were obtained between both transmission 
intervals. In fact, the average battery life for the 30 seconds 
transmission interval was 26 minutes less than that of the 5 
seconds transmission interval. As it can be seen in Figure 5, 
the lifetime of the battery was approximately 10 hours. 
As the manufacturer stated, the power consumption for 
both WiFi and LoRa transmissions is practically the same 
with transmission powers of 17 dBm or 18 dBm. It is 
surprising as LoRa is branded as a low-power consumption 
communication protocol. Therefore, the transmission power 
of LoRa has to be decreased so as to improve its battery 
consumption, which leads to less coverage. 
 
 
 
Figure 3.  Utilized Heltec WiFi LoRa 32 node 
TABLE I.  
ENERGY CONSUMPTION OF THE NODE 
Mode 
Energy consumption 
LoRa 10 dB tx power 
50 mA 
LoRa 12 dB tx power 
60 mA 
LoRa 15 dB tx power 
110 mA 
LoRa 20 dB tx power 
130 mA 
WiFi AP mode 
135 mA 
WiFi scan mode 
115 mA 
 
TABLE II.  
ENERGY CONSUMPTION OF THE NODE 
 
Tx Power 
17 dB 
Frequency 
433 MHz 
SF 
7 
Signal Bandwidth 
125 KHz 
Coding rate 
4/5 
Preamble length 
8 Symbols 
 
 
 
 
Figure 4.  Battery life with WiFi communication 
29
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

 
 
 
Figure 5.  Battery life with LoRa communication 
 
Figure 6.  Battery life with LoRa communication and 10 dBm of tx power 
To assess if the battery life was increased when 
transmitting with less transmission power, another test was 
performed changing the tx power of the LoRa transmissions 
to 10 dBm. The time interval for this test was 30 seconds. 
The average battery life for this case is presented in Figure 6. 
As it can be seen, the battery life improved compared to that 
with a transmission power of 17 dB, obtaining more than one 
hour more of battery life. Furthermore, the battery life 
surpassed that of WiFi with a transmission interval of 30 
seconds in 20 minutes. The difference would be then more 
noticeable when utilizing batteries with more capacity. 
However, the overall difference between the power 
consumed by both technologies is not that great. Therefore, 
other factors, such as the range that can be reached with each 
technology or the data rate may be the factors to be 
considered when selecting the wireless technology to be 
utilized in an IoT system. 
VI. 
CONCLUSION AND FUTURE WORK 
When designing an IoT system, the selection of the 
communication technology is of great importance. LoRa is 
supposed to have less power consumption than WiFi but the 
difference is not that evident and LoRa settings have to be 
changed to lower transmission power values, lower SF and 
increase bandwidth for it to consume less power. In the case 
of the Heltec WiFi LoRa 32 device, similar results have been 
obtained for both LoRa and WiFi with the default settings 
and 5 seconds of transmission interval. However, WiFi 
outperformed LoRa with a 30 second transmission interval. 
A similar battery life was obtained when lowering LoRa 
transmission power to 10 dBm. 
As future work, we will implement WiFi and LoRa in an 
agriculture and irrigation monitoring system selecting the 
technology depending on the range that needs to be reached. 
 
ACKNOWLEDGMENT 
This work has been supported by European Union 
through the ERANETMED (Euromediterranean Cooperation 
through ERANET joint activities and beyond) project 
ERANETMED3-227 SMARTWATIR. 
REFERENCES 
 
[1] The 10 most popular Internet of Things applications right 
now. Available at: https://iot-analytics.com/10-internet-of-
things-applications/ [Last accessed on July 3, 2019] 
[2] L. García, J. M. Jimenez, M. Taha and J. Lloret, “Wireless 
Technologies for IoT in Smart Cities”, Network Protocols and 
Algorithms, 2018, Vol. 10, No. 1, pp. 23-64, ISSN 1943-3581 
[3] IEEE GET Program. GET 802(R) Standards. IEEE 802.11: 
Wireless 
LANs. 
Available 
at: 
https://ieeexplore.ieee.org/browse/standards/get-
program/page/series?id=68 [Last accessed on July 3, 2019] 
[4] IEEE GET Program. GET 802(R) Standards. IEEE 802.15: 
Wireless 
PANs. 
Available 
at: 
https://ieeexplore.ieee.org/browse/standards/get-
program/page/series?id=68 [Last accessed on July 3, 2019]  
[5] IEEE GET Program. GET 802(R) Standards. IEEE 802.16: 
Broadband 
Wireless 
MANs. 
Available 
at: 
https://ieeexplore.ieee.org/browse/standards/get-
program/page/series?id=68 [Last accessed on July 3, 2019] 
[6] The Mobile Broadband Standard. About 3GPP. Available at: 
https://www.3gpp.org/about-3gpp [Last accessed on July 3, 
2019] 
[7] 5G - Fifth generation of mobile technologies. Available at: 
https://www.itu.int/en/mediacentre/backgrounders/Pages/5G-
fifth-generation-of-mobile-technologies.aspx [Last accessed 
on July 3, 2019] 
[8] LoRa Alliance. Available at: https://lora-alliance.org/ [Last 
accessed on July 3, 2019] 
[9] Standardization of NB-IOT completed. 3GPP A Global 
Initiative. 
Available 
at: 
https://www.3gpp.org/news-
events/1785-nb_iot_complete [Last accessed on July 3, 2019] 
[10] Sigfox, 
a 
0G 
Network. 
Sigfox. 
Available 
at: 
https://www.sigfox.com/en [Last accessed on July 3, 2019] 
[11] E. D. Ayele, K. Das, N. Meratnia and P. J. M. Havinga, 
“Leveraging BLE and LoRa in IoT Network for Wildlife 
Monitoring System (WMS)”, IEEE 4th World Forum on 
Internet of Things, Singapore, Singapore, 5-8 February 2018, 
pp. 342-348. 
[12] M. Bor and U. Roedig, “LoRa Transmission Parameter 
Selection”, 13th International Conference on Distributed 
Computing in Sensor Systems, Ottawa, ON, Canada, 5-7 June 
2017, pp. 27-34. 
[13] C. Pham, “Investigating and Experimenting CSMA Channel 
Access Mechanisms for LoRa IoT Networks”, IEEE Wireless 
Communications and Networking Conference, Barcelona, 
Spain, 15-18 April 2018, pp. 1-6. 
30
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

[14] A. Pötsch and F. Haslhofer, “Practical Limitations for 
Deployment of LoRa Gateways”, IEEE International 
Workshop on Measurement and Networking, Naples, Italy, 
27-29 September 2017, pp. 1-6. 
[15] J. Mesquita, D. Guimaraes, C. Pereira, F. Santos and L. 
Almeida, “Assessing the ESP8266 WiFi module for the 
Internet of Things”, IEEE 23rd International Conference on 
Emerging Technologies and Factory Automation, Turin, Italy, 
4-7 September 2018, pp. 784-791. 
[16] F. Montori, R. Contigiani and L. Bedgoni, “Is WiFi suitable 
for energy efficient IoT deployments? A performance study”, 
IEEE 3rd International Forum on Research and Technologies 
for Society and Industry, Modena, Italy, 11-13 September 
2017, pp. 1-5. 
[17] G. D. Putra, A. R. Pratama, A. Lazovik and M. Aiello, 
“Comparison of Energy Consumption in WiFi and Bluetooth 
Communication in a Smart Building”, IEEE 7th Annual 
Computing and Communication Workshop and Conference, 
Las Vegas, NV, USA, 9-11 January 2017, pp. 1-6. 
[18] About 
International 
Telecommunication 
Union 
(ITU). 
Available at: https://www.itu.int/en/about/Pages/default.aspx. 
[Last accessed on July 3, 2019]  
[19] Semtech, AN 120022, LoRa Modulation Basics, May, 2015. 
Available: 
https://www.semtech.com/uploads/documents/an1200.22.pdf 
[Last accessed on July 3, 2019]  
[20] R. S. Sinha, Y. Wei and S. Hwang, “A survey on LPWA 
technology: LoRa and NB-IoT”, ICT Express, Vol. 3, No. 1, 
pp. 14-21, March 2017. 
[21] Specifications of the Heltec WiFi LoRa 32. Available at 
https://heltec.org/project/wifi-lora-32/ [Last accessed on July 
3, 2019] 
 
 
31
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

Predicting Incidents of Crime through LSTM Neural Networks in Smart City
Domain
Ulises M. Ramirez-Alcocer
Faculty of Engineering and Science
Autonomous University of Tamaulipas
Victoria, Tamaulipas, Mexico
email:
a2093010066@alumnos.uat.edu.mx
Edgar Tello-Leal
Faculty of Engineering and Science
Autonomous University of Tamaulipas
Victoria, Tamaulipas, Mexico
email: etello@uat.edu.mx
Jonathan A. Mata-Torres
Reynosa-Rodhe Multidisciplinary Unit
Autonomous University of Tamaulipas
Reynosa, Tamaulipas, Mexico
email:
a2093010058@alumnos.uat.edu.mx
Abstract—Crimes are common social problems that affect the
quality of life, economic growth and reputation of a country. In
smart cities, the aim is to reduce crime rates using Information
and Communication Technologies (ICT), specifically with the
use of Internet of Things (IoT) technology in combination with
legacy
information
systems,
in
order
to
obtain
data
automatically. In this paper, we propose an approach based on
deep learning for the classification of incidents of a crime of
public safety through predictive analysis. The predictive model
is based on a neural network Long Short-Term Memory
(LSTM), trained with a small group of attributes, enabling the
prediction of the class label in the validation stage, with a high
percentage of prediction accuracy. The proposed approach is
evaluated through a big data set (real data) of type open data,
which contains historical information about the crimes of a
smart city.
Keywords-LSTM;
Prediction;
Neural
Network;
Data
Classification; Smart City.
I.
INTRODUCTION
Nowadays, smart city approaches are developed in order
to improve the economy, mobility, environment, people life,
living standards, and governance of cities [1], supported by
the design, implementation, management, and monitoring of
projects
based
on
Information
and
Communication
Technologies (ICT). The main smart city characteristics
include
sustainability,
resilience,
governance,
enhanced
quality of life and intelligent management of natural
resources and city facilities [2]. In this way, for the
development of the services deployed in the complex
systems of intelligent cities, the Internet of Things (IoT)
technologies
have
emerged
as
a
new
computational
paradigm.
The IoT consists of a large number of objects (physical
and
virtual
things)
with
pervasive
sensing,
detection,
actuation, and computational capabilities, allowing these
devices to generate, exchange, and consume data with
minimal human intervention [3]. Contributions from the
implementation of IoT technologies can be found in smart
cities,
smart
homes,
e-health,
smart
grids,
intelligent
transportation
systems,
crime
prevention
systems,
and
intelligent use of water, among others. The extensive use of
information systems (smart type) in various domains of the
city, as well as the use of smart devices in people’s daily life,
have as a consequence the production of massive volumes of
data [4], known as big data. These data are generated by
human-to-human,
human-to-machine,
and
machine-to-
machine interactions. The big data volumes consist of a
mixture of complex data characterized by large and fast-
growing data sets [2], which exceed the analysis capabilities
of the current data management systems. Therefore, there are
requirements related to the acquisition and storage of data,
the processing of information, and the development of
algorithms for intelligent decision support systems. In
addition, the monitoring, understanding, and analysis of the
data generated by the information systems using algorithms
based on data mining and machine learning, can be used to
advance their contribution to the goals of sustainable
development in a smart city [5]. The public safety data set of
smart cities holds a large amount of crime data that could be
exploited to discover patterns and predict future crime trends
[6]. The predictive analysis aims to optimize the exploitation
of these data in order to use knowledge discovery to
anticipate criminal events [6] [7].
Deep
learning
techniques
have
demonstrated
their
capability of the discriminative power compared with other
machine
learning
methods.
Recurrent
Neural
Network
(RNN) architecture has become a model of the deep learning
techniques
most
successfully implemented
in different
domains, due to its natural ability to process sequential
entries and to know their long-term dependencies [8]. That
is, RNN is designed to utilize sequential information of input
data with cyclic connections among building blocks. In the
RNN, neurons are connected to each other in the same
hidden layer and a training function is applied to the hidden
states
repeatedly
[8].
The
Long
Short-Term
Memory
(LSTM) neural network is an extension of the RNN, which
has
achieved
excellent
performance
in
various
tasks,
especially
for
sequential
problems
[9]-[11].
The
implementation of LSTM neural networks for the prediction
of the class label (classification) from a set of instances
through predictive analysis can be considered an important
strategy as a technique in the context of supervised machine
learning and data mining.
32
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

In
this
paper,
we
propose
a
deep
learning-based
predictive analysis approach for the classification of crime
incidents. The predictive model is based on an LSTM neural
network that is trained with a small number of attributes of
the big data set, enabling the prediction of the class label in
the validation phase. In order to validate the approach and
show the applicability to the public safety domain, we
present preliminary results using a data set with 6.9 million
registers. The test carried out on the trained LSTM network
shows that it has the capacity to predict the class label of a
new instance. For the evaluation of the system model, we
present a case study with data collected by a real smart city
system in Chicago, USA. This system combines IoT devices
and legacy system in smart city domain. Our case study
addresses the challenges of data analytics of smart city
public safety. In addition, a methodology is proposed to
guide the preprocessing and categorization of the input data
to the neural network, as well as the design and training of
the network.
The rest of the paper is structured as follows. Section II
presents a background review on LSTM neural network.
Section III presents a methodology proposed to construct the
predictive model. Section IV discusses the findings, while
Section V we discusses the related work. Section VI
provides the conclusions and plans for future work.
II.
RESEARCH PROPOSAL
An LSTM neural network is considered a network with a
special structure consisting of memory blocks and memory
cells, together with the gate units (input, forget, and output)
that contain them [12]. This structure allows the LSTM
network
to
select
which
information
is
forgotten
or
remembered (see Figure 1). The multiplicative input gate
units are used to avoid the negative effects that unrelated
inputs can create.
Figure 1.
Structure of an LSTM cell.
In our proposed approach, the following is considered for
the definition of the neural network model: 1) the input gate
controls the input flow to the memory cell, 2) the output gate
controls the output sequence of the memory cell to other
LSTM blocks, and 3) the forget gate in the structure of the
memory block is controlled by a single-layer of the neural
network, as shown in Figure 1.
The operation of the LSTM network is based on
equations (1), (2), (3), (4), and (5) [10][13]. Then, the
components of the LSTM units, at a time t are updated by
(1), where xt is the input sequence, ht-1 is the previous block
output, Ct-1 is the previous LSTM block memory, and bf is
the polarization vector; W represents separate weight vectors
for each input, and  is the logistic sigmoid function.
ft = Wf xt,ht-1,Ct-1bf



it = Wi xt,ht-1,Ct-1bi



Ct = ft  Ct-1ittanh WC xt, ht-1,Ct-1bC


ot = Wo xt,ht-1,Ctbo



ht =  ottanh(Ct



On the other hand, the input gate is divided into two
networks and its function is to generate the new memory, as
shown in Figure 1. First, a single-layer neural network takes
the same inputs as the previous gate, which has a sigmoid
activation function. In this part of the network, it is decided
what percentage of the new memory will be influenced by
the memory of the previous block. Second, a single-layer
neural network, with an activation function tanh, generates a
new memory from the input vectors (xt) and the output from
the previous block (ht-1). Finally, a multiplication of vectors
is performed with the outputs of the two simple neural
networks, and the result is added to the output of the
forgetting gate. This process is performed by equations 2 and
3. Finally, the output gate is calculated by means of
equations 4 and 5, generating the probability value of the
current LSTM block. In summary, the input to the cells is
multiplied by the activation of the input gate, the output to
the network is multiplied by that of the output gate, and the
previous cell values are multiplied by the forget gate.
III.
METHODOLOGY
The prediction of the class label is done by implementing
a set of stages, which can be grouped into pre-processing,
categorization of the data, and predictive model, as shown in
Figure 2. The proposed methodology consists of three
phases: data pre-processing, categorization, and construction
of the predictive model. These phases allow the prediction of
the label of a class based on a model of an LSTM neural
network
A.
Phase 1: Data Pre-processing
The data pre-processing phase consists of the following
stages:
1)
Data Extraction: In the data extraction stage, several
activities are carried out sequentially. First, a set of
attributes are extracted from the original data set. This is
performed through the execution of a feature selection
algorithm proposed in “in press” [14], generating a new data
33
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

group that will be used for the training of the neural
network. Then, in the training data set, a normalization task
is performed on the attribute that represents the class.
Subsequently, a cleaning process is executed to detect and
remove the corrupt or inaccurate instances in the database.
Moreover, the attributes that contain values of a numeric
type are updated, adding the first character of the name of
the attribute to the value of the variable.
2)
Segmentation: The segmentation task is applied to
the data set generated in the previous stage. This task
consists of creating a list of all the features of an instance
and implementing a criterion of separation between features.
Each feature is represented as a unique integer, converting
the instances into a sequence of integers, thereby generating
two lists of the sequence of integers. The former consists of
input features (X), and the later of the output feature (Y),
i.e., the class. Then, the input feature (X) is transformed into
a two-dimensional matrix (the number of sequences and the
maximum length of sequences).
Figure 2.
Methodology implemented for class prediction.
B.
Phase 2: Categorization
The intermediate categorization phase consists of a
process to categorize the sequence of integers corresponding
to
the
output
activities
(Y),
in
a
one-hot
encoding
representation type, specifying that the number of classes
will be equal to the size of the vocabulary.
C.
Phase 3: Prediction Model
The prediction model phase based on LSTM network is
composed of the following stages:
1)
Network Design: In our approach, the design of the
neural network consists of generating a set of three layers.
The input layer is created based on a word embedding
method. The hidden layer contains the memory cells, where
each cell is an LSTM unit. This layer contains a set of
LSTM cells that are composed of the input, output and
forget gates, which allow their interconnection. In the output
layer, only one neuron will be available since there is a
unique output value corresponding to the prediction. This is
shown in Figure 1, where xt is the input vector and ht is the
output result to the memory cell at time t. Furthermore, ht is
the value of the memory cell. At time t, it, ft and ot are
values of the input gate, the forget gate and the output gate,
respectively. Finally, Ct are values of the candidate state of
the memory cell at time t.
2)
Network
Training:
The
training
of
the
LSTM
network is performed using as training data, the integer
sequence list represented by the features contained in the
two-dimensional matrix (X) and the vector that contain the
class (Y) through of a representation one-hot encoding. We
use the configuration parameters presented in Table I.
D.
Prediction Class Label
The prediction is the output generated by the LSTM
neural network, which, through a training phase, allows
predicting the class label for a new instance, from a set of
input features of an instance, which is explained in the
following section.
TABLE I.
CONFIGURATION PARAMETERS OF THE LSTM NETWORK.
Parameter
Value
epochs
500
batch size
32
optimizer
Adam
loss
categorical_crossentropy
LSTM
units 50
IV.
EXPERIMENTAL RESULTS
Crimes are common social problems that affect the
quality of life, economic growth and reputation of a country
[15]. In smart cities, the aim is to reduce crime rates using
ICT. Through different information systems, data is collected
automatically, with the intention of generating knowledge
that allows decisions to be made to reduce the criminal
index. In this sense, our proposal aims to predict the value of
a class, from a set of attributes. The class prediction
represents the probability that an individual will be arrested
after committing a crime.
The data set used is of type open data and contains
historical information about the crimes to evaluate the
performance of the proposed LSTM model. This data set of
the reported incidents of crime that occurred in the City of
Chicago from 2001 to 2018. The data set is composed of 22
attributes and 6.9 million records or instances. The complete
data set can be found in [16]. Some of these attributes were
34
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

generated
automatically
by
IoT
devices,
such
as
x-
coordinate, y-coordinate, latitude, longitude, location. The
attributes can be of data type: string, numeric, date, location
or Boolean. The data is extracted from the Chicago Police
Department’s CLEAR (Citizen Law Enforcement Analysis
and Reporting) system. The data set contains data from
arrests, including data on Illinois Uniform Crime Reporting
(IUCR), location description, domestic, date, ward, Federal
Bureau of Investigation (FBI) code and more data fields. An
extract from the data set is shown in Table II.
TABLE II.
EXCERPT OF THE INCIDENTS OF CRIME DATA.
ID
UICR
District
Ward
Com.
Area
FBI
Code
50
479
001d
4w
32c
04B
51
820
019d
44w
6c
6
52
820
008d
18w
70c
6
53
326
006d
6w
69c
3
54
031A
025d
31w
19c
3
55
041A
007d
20w
68c
04B
56
1752
010d
12w
30c
17
57
1750
003d
5w
43c
08B
58
630
019d
2w
7c
5
59
553
022d
19w
74c
04A
60
650
010d
24w
29c
5
61
1320
009d
15w
61c
14
62
550
004d
7w
43c
04A
63
1562
006d
21w
71c
17
64
041A
017d
35w
14c
04B
65
1130
018d
42w
8c
11
66
5001
022d
19w
72c
26
67
1195
025d
29w
25c
11
68
1154
008d
13w
62c
11
69
1153
018d
43w
7c
11
70
620
018d
42w
8c
5
The feature selected to predict the label class are: UICR
(Illinois Uniform Crime Reporting), District, Ward, Com.
Area, and FBI Code. Table III shows a complete description
of the attributes and the number of cases that were identified
within the data set. The class to predict is a Boolean type,
that is, arrest = false or arrest = true.
TABLE III.
DESCRIPTION OF THE FEATURES SELECTED OF THE DATA
SET.
Feature
Description
# cases
UICR
Illinois
Uniform
Crime
Reporting
(IUCR)
codes are four-digit codes that law enforcement
agencies use to classify criminal incidents.
350
District
Indicates the police district where the incident
occurred.
25
Ward
The ward (City Council district) where the
incident occurred.
50
Com.
Area
Indicates
the
community
area
where
the
incident occurred.
77
FBI
Code
Indicates the crime classification as outlined in
the FBI’s National Incident-Based Reporting
System (NIBRS).
26
Arrest
Binary
variable
that
indicates
whether
a
criminal was arrested.
2
In our experiment, training data sets with 80% of the
observations of the original data set are used to train our
model. Instances of the training data set were selected by a
random method, automatically. The remaining 20% of the
instances are used to test our model prediction accuracy.
Table IV presents an extract of the results obtained in the
prediction of the LSTM network using the crime data set
presented before. In the column “Input Features”, it is
mentioned the group of the features used as a new input in
the LSTM network for the prediction stage. The values of the
“Input Features” column are formed by the IUCR code,
district and ward id’s, as well as the identifier of the
community area and the FBI code. The “Target Class” is the
expected label for the corresponding input instance, that is,
the class label with the highest probability of prediction by
the neural network, based on the weights of each class label.
Each row in the table shows a case of prediction of the class
from the input one. The “Output Class” column presents the
label or value that the LSTM neural network predicted from
the input instance for the “arrest” class.
In the column “% of prediction” (see Table IV), the
probability of prediction for each instance is shown. It can be
observed that, in some cases, the neural network fails to
predict the class (for example 3, 7, and 18). However, in
most cases, the neural network has a correct prediction of the
value of the expected class. The global percentage of the
prediction accuracy of the LSTM network for the complete
data set is 0.87.
TABLE IV.
AN EXTRACT OF THE PREDICTION FROM THE LSTM.
#
Input Features
Target
Class
Output
Class
% of
prediction
1
0265, 011d, 28w, 29c, 02
false
false
0.82
2
0620, 025d, 31w, 22c, 05
false
false
0.97
3
0560, 005d, 34w, 53c, 08A
true
false
0.77
4
0430, 018d, 2w, 8c, 04B
false
false
0.90
5
0312, 010d, 28w, 31c, 03
false
false
0.99
6
1754, 008d, 18w, 66c, 02
true
true
0.50
7
0860, 018d, 27w, 8c, 06
true
false
0.53
8
0281, 018d, 2w, 8c, 02
false
false
0.99
9
1130, 012d, 11w, 28c, 11
false
false
0.99
10
2825, 006d, 8w, 44c, 26
false
false
0.99
11
0890, 001d, 3w, 35c, 06
false
false
0.99
12
1153, 006d, 21w, 71c, 11
false
false
0.99
13
0910, 011d, 28w, 27c, 07
false
false
0.91
14
1150, 008d, 23w, 56c, 11
false
false
0.99
15
1120, 001d, 42w, 32c, 10
false
false
0.99
16
0890, 018d, 2w, 8c, 06
false
false
0.99
17
1150, 001d, 4w, 32c, 11
false
false
0.97
18
1330, 005d, 9w, 53c, 26
false
true
0.79
19
0281, 003d, 20w, 69c, 02
false
false
0.99
20
1153, 025d, 37w, 23c, 11
false
false
0.99
21
0560, 010d, 24w, 29c, 08A
false
false
0.84
22
0820, 024d, 49w, 1c, 06
false
false
0.95
23
0110, 015d, 28w, 25c, 01A
false
false
0.88
24
1150, 019d, 32w, 6c, 11
false
false
0.99
25
1130, 020d, 48w, 77c, 11
false
false
0.99
26
0486, 011d, 28w, 26c, 08B
true
false
0.77
27
0454, 004d, 8w, 46c, 08B
false
false
0.55
28
1752, 009d, 15w, 61c, 17
false
false
0.99
29
0454, 004d, 7w, 51c, 08B
true
true
0.99
30
0454, 025d, 37w, 25c, 08B
true
true
0.97
31
0281, 008d, 22w, 56c, 02
true
false
0.65
32
0910, 012d, 25w, 28c, 07
false
false
0.82
35
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

33
1562, 003d, 7w, 43c, 17
true
true
0.97
34
1562, 025d, 36w, 19c, 17
true
false
0.86
35
0860, 001d, 25w, 28c, 06
false
false
0.61
36
0484, 012d, 27w, 28c, 08B
false
false
0.54
37
0430, 008d, 17w, 66c, 04B
false
false
0.94
38
1477, 014d, 26w, 24c, 15
true
true
0.77
39
1752, 007d, 16w, 67c, 17
false
false
0.54
40
0325, 025d, 36w, 19c, 03
false
false
0.99
41
0610, 025d, 31w, 19c, 05
true
false
0.82
42
0281, 008d, 17w, 66c, 02
false
false
0.98
43
1752, 006d, 17w, 44c, 17
false
false
0.76
44
0281, 018d, 42w, 8c, 02
false
false
0.99
45
1153, 018d, 42w, 8c, 11
false
false
0.95
46
0820, 016d, 41w, 9c, 06
false
false
0.98
47
1130, 012d, 28w, 28c, 11
false
false
0.99
48
1153, 008d, 14w, 63c, 11
false
false
0.99
49
1750, 022d, 34w, 75c, 08B
false
false
0.98
50
0820, 019d, 44w, 6c, 06
true
false
0.90
The LSTM network is trained using an optimization
process that requires a loss function to calculate the model
error. The loss function allows to faithfully summarize all
aspects of the model down into a single number in such a
way that improvements in that number depict a better model.
Figure 3 visualizes the loss function and Figure 4 presents
the accuracy of the training and validation data for the final
model. The final LSTM model achieves an average loss
function of 0.0376 on the validation data and a validation
predictive accuracy of 0.87. Figure 4 shows the learning
curves, exhibiting how the model learned and suitably fit the
training data set. These results align with the loss function
we obtained on the testing data, which means our final model
generalizes well on new data.
Figure 3.
Loss function in training and validation phases by epoch.
V.
RELATED WORK
Crime as a problem has both spatial and temporal
dimensions. The work by Catlett et al. [17] explores the use
of
spatial
analysis
and
auto-regressive
models
to
automatically detect high-risk crime regions in urban areas
and to reliably forecast crime trends in each region. The
algorithm result is a spatio-temporal crime forecasting
model, composed of a set of crime-dense regions with
associated
crime
predictors,
each
one
representing
a
predictive model for estimating the number of crimes likely
to occur in its associated region. Also, in [18], the authors
propose the use of deep learning for the prediction of hourly
crime rates. In particular, their model is used in spatio-
temporal problems, like crime forecasting. They detected
that future crime rates depend on the trend set in the
previous week, the time of day and the nearby events, both
in space and in time. For each one of these contributing
factors, they use a separate model that offers a prediction
based on indicators of a weekly period, a daily period and
an hourly period, respectively. The outputs of the 3 models
are combined to form a common prediction.
Figure 4.
Accuracy in training and validation phases by epoch.
In
[19],
a
system
for
the
visual
analysis
of
multidimensional data on the macroscopic and microscopic
levels to show trajectories of crime based on their spatial
and temporal characteristics is presented. The system
incorporates a novel algorithm for the crime trajectory
segmentation
and
uses
LSTM
network,
generating
trajectories from heterogeneous data sources, such as open
data and social media, with the aim to report incidents of
crime. In [20], a neural network structure for crime
prediction and the appropriate inputs for crime prediction
are performed through Gram-Schmidt orthogonalization for
the selection of network inputs and Virtual Leave-One-Out
test (VLOO) for the selection of the optimal number of
hidden neurons. Spatio-temporal distribution of the hot-
spots is conducted and a methodology is developed for
short-term crime forecasting using the LSTM.
In
[21],
a
context-aware
attention
framework
is
presented based on LSTM to accurately predict the amount
of unrest events news. The social event prediction model
consists of three parts: 1) the LSTM encoder, to get the
hidden representation of the input sequence, 2) the attention
layer, to automatically learn the weights of the hidden
representations, and 3) the context-aware fully connected
layer used to combine near historical target data and the
weighted representation vectors. In [22], a crime prediction
framework based on deep neural network that uncovers
dynamic crime patterns and carefully explores the evolving
inter-dependencies between crimes and other ubiquitous
data in urban space was developed. The model enables
predicting crime occurrences of different categories in each
36
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies

region of a city, embedding all spatial, temporal, and
categorical signals into hidden representation vectors.
VI.
CONCLUSION
The
advances
in Information
and
Communications
Technologies and the excessive use of smart devices have
produced a massive generation of data. This way, IoT
technologies and their implementation on the smart cities
have caused a growing need for data analysis and big data
analytics.
This paper investigated the effectiveness of LSTM neural
networks based deep learning approach for predicting the
future class labels of a crime incidents instance. To evaluate
the predictive performance of our method, we use a data set
that collects the historical information of crime indices in a
smart city. These data are generated, in most cases, by IoT
devices and managed by an information system of the police
department. Before applying the LSTM model, we used a
pre-processing and categorization of the data. Next, we
designed and trained a neural network model in order to
select the model that presents the best performance. This
process is described by the proposed methodology, which
guides the process of preparing input data for the LSTM
neural network and its implementation.
From the original data set, 80% of the instances were
used for the training stage of our model, and the remaining
20% for the validation stage of the model. The instances
used in the training stage were selected by a random method
automatically. Our deep learning approach achieves high
performance in the final model with 87.84% accuracy based
on the validation data. Furthermore, the final LSTM model
achieves an average loss function of 0.0376 on validation
data, using 20% of the data set for the testing stage.
The research objective was to examine the feasibility and
impact
of
applying
the
proposed
approach
to
class
prediction.
The
experimental
results
suggest
that
the
proposed method achieves good results on a big data set.
ACKNOWLEDGMENT
This work was supported by the National Council of
Science and Technology (CONACYT) and Basic Science
Research Project SEP-CONACYT of Mexico under Grant
256922.
REFERENCES
[1]
C. Lim, K.-J. Kim, and P. P. Maglio, “Smart cities with big data:
Reference models, challenges, and considerations,” Cities, vol. 82,
2018,
pp.
86
–
99.
[Online]
https://doi.org/10.1016/j.cities.2018.04.011 [retrieved: June, 2019].
[2]
E. Al Nuaimi, H. Al Neyadi, N. Mohamed, and J. Al-Jaroodi,
“Applications of big data to smart cities,” Journal of Internet Services
and Applications, vol. 6, no. 1, Dec 2015, p. 25. [Online]
https://doi.org/10.1186/s13174-015-0041-5 [retrieved: June, 2019].
[3]
C.
M.
Sosa-Reyna,
E.
Tello-Leal,
and
D.
Lara-Alabazares,
“Methodology for the model-driven development of service oriented
iot applications,” Journal of Systems Architecture, vol. 90, 2018, pp.
15 – 22.
[4]
I. A. T. Hashem et al., “The role of big data in smart city,”
International Journal of Information Management, vol. 36, no. 5,
2016, pp. 748 – 758.
[5]
S. E. Bibri and J. Krogstie, “The core enabling technologies of big
data analytics and context-aware computing for smart sustainable
cities: a review and synthesis,” Journal of Big Data, vol. 4, no. 1, Nov
2017, p. 38. [Online] https://doi.org/10.1186/s40537-017-0091-6
[retrieved: May, 2019].
[6]
A. Rummens, W. Hardyns, and L. Pauwels, “The use of predictive
analysis in spatiotemporal crime forecasting: Building and testing a
model in an urban context,” Applied Geography, vol. 86, 2017, pp.
255– 261.
[7]
L. Vomfell, W. K. Hrdle, and S. Lessmann, “Improving crime count
forecasts using twitter and taxi data,” Decision Support Systems, vol.
113, 2018, pp. 73 – 85.
[8]
W. Xia et al., “Novel architecture for long short-term memory used in
question classification,” Neurocomputing, vol. 299, 2018, pp. 20–31.
[9]
Y. Li and H. Cao, “Prediction for tourism flow based on lstm neural
network,” Procedia Computer Science, vol. 129, 2018, pp. 277–283.
[Online] https://doi.org/10.1016/j.procs.2018.03.076 [retrieved: May,
2019].
[10] B. Cortez, B. Carrera, Y.-J. Kim, and J.-Y. Jung, “An architecture for
emergency event prediction using lstm recurrent neural networks,”
Expert Systems with Applications, vol. 97, 2018, pp. 315 – 324.
[11] C. Badii, P. Nesi, and I. Paoli, “Predicting available parking slots on
critical and regular services by exploiting a range of open data,” IEEE
Access,
vol.
6,
2018,
pp.
44059–44071.
[Online]
https://doi.org/10.1109/ACCESS.2018.2864157
[retrieved:
May,
2019].
[12] S. Haim, S. Andrew, and B. Franoise, “Long short-term memory
recurrent neural network architectures for large scale acoustic
modeling,” in 15th Annual Conference of the International Speech
Communication Association, September 2014, pp. 338–342.
[13] S. Hochreiter and J. Schmidhuber, “Long short-term memory,”
Neural computation, vol. 9, no. 8, 1997, pp. 1735–1780.
[14] J.A. Mata-Torres, E. Tello-Leal, U.M. Ramirez-Alcocer, and G.
Romero-Galvan, “A novel feature selection method based on a
clustering algorithm,” Proc. 9th International Conference on Advances
in Information Mining and Management (IMMM 2019) , in press.
[15] C. Kadar and I. Pletikosa, “Mining large-scale human mobility data
for long-term crime prediction,” EPJ Data Science, vol. 7, no. 1, Jul
2018, p. 26.
[16] Chicago Police Department, “Reported Crime - Public Safety
dataset,”
[Online]
https://data.cityofchicago.org/Public-
Safety/Crimes-2001-topresent/ijzp-q8t2/data [retrieved: May, 2019].
[17] C. Catlett, E. Cesario, D. Talia, and A. Vinci, “Spatio-temporal crime
predictions in smart cities: A data-driven approach and experiments,”
Pervasive and Mobile Computing, vol. 53, 2019, pp. 62-74. [Online]
https://doi.org/10.1016/j.pmcj.2019.01.003 [retrieved: May, 2019].
[18] B. Wang et al., “Deep Learning for Real Time Crime Forecasting,”
arXiv Numerical Analysis, pp- 1-4, 2017. [Online] arXiv:1707.03340
[retrieved: May, 2019].
[19] A. Morshed et al., “VisCrimePredict: a system for crime trajectory
prediction and visualisation from heterogeneous data sources,” in
Proc. 34th
ACM/SIGAPP Symposium on
Applied Computing
(SAC19).
ACM,
2019,
pp.
1099-1106.
https://doi.org/10.1145/3297280.3297388
[20] Z. M. Wawrzyniak et al., “Data-driven models in machine learning
for crime prediction,” in Proc. 26th International Conference on
Systems
Engineering
(ICSEng),
2018,
pp.
1-8.
doi:
10.1109/ICSENG.2018.8638230
[21] W. Xiuling et al., “Unrest News Amount Prediction with Context-
Aware Attention LSTM”, in Proc. Trends in Artificial Intelligence
(PRICAI 2018), Springer, 2018", pp. 369-377.
[22] C. Huang, J. Zhang, Y. Zheng, and N. V. Chawla, “DeepCrime:
Attentive Hierarchical Recurrent Networks for Crime Prediction,” in
Proc. 27th ACM International Conference on Information and
Knowledge Management (CIKM '18). ACM, 2018, pp. 1423-1432.
https://doi.org/10.1145/3269206.327179
37
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-730-6
SMART 2019 : The Eighth International Conference on Smart Cities, Systems, Devices and Technologies
Powered by TCPDF (www.tcpdf.org)

