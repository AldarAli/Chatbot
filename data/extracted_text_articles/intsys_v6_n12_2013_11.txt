124
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Multidimensional Adaptiveness in Multi-Agent
Systems
Nadia Abchiche-Mimouni, Member, IBISC Laboratory, abchiche@ibisc.fr
Antonio Andriatrimoson, Partner member, IBISC Laboratory, tsiory.andriatrimoson@ibisc.univ-evry.fr
Etienne Colle, Member, IBISC Laboratory, etienne.colle@ibisc.univ-evry.fr
Simon Galerne, Member, IBISC Laboratory simongalerne@gmail.com
Abstract—The work presented in this paper is focused on the
design and the implementation of an adaptive framework for
ambient assisted living applications. The challenge is to design an
approach to deal with a dynamic environment in order to provide
an adequate service to an elderly or a sick person at home. It is
necessary to take into account constraints such as, the degree of
urgency of the service and the degree of intrusion of the system.
The evolution of the degree of intrusion based on the degree
of urgency and the availability of the different communication
devices that constitute the ambient environment are particularly
targeted. Through an adaptive approach based on coalitions
of agents, our multi-agents system ensures answers to various
and/or unforeseen situations. Our coalitions protocol formation
has been implemented in a real scenario. A more sophisticated
version of our system has been designed allowing an intelligent
and a declarative method for modeling the coalitions formation
process. Indeed, the system includes a rule-based system so that
the reasoning implementing the coalitions formation process can
be tuned in a declarative way. This new version of our system is
characterized by a multi-dimensional adaptiveness because four
levels of adaptiveness are observed. The computational dimension
is observed during the coalition formation process. The functional
and methodological dimension concerns the service modeling.
The ethical level deals with the intrusion level of the system. At
last, the control level allows the behaviors triggering and criteria
management. Application objective: A mobile robot interacts and
cooperates with a set of communicating objects in order to
provide a set of services and teleservices to an elderly or a
sick person at home. Research objective: Providing a multi-a gent
system that could be used for evaluating the relevance of the rules
that are used during the coalitions formation process. Results:
The proposed solutions have been implemented on a real system
and evaluated in real situations. Several protocols for coalitions
formation are being compared.
Keywords—Adaptive control, adaptiveness, rule-based system,
multi-agent system, ambient assistance.
I.
INTRODUCTION
A
DAPTIVITY is widely studied as a capability that makes
a system able to exhibit a cooperative and intelligent
behavior. Moreover, software increasingly has to deal with
ubiquity, so that it can apply a certain degree of intelligence.
Ambient assistive robotics can be deﬁned as an extension of
ambient intelligence which integrates a robot and its embed-
ded sensors. The interaction among the components in such
systems is fundamental. In a previous [1] work, we presented
Coalaa (Coalitions for ambient assistance), which concerns the
design and the implementation of an ambient assistive living
framework that takes advantage of an ambient environment: a
robot cooperating with a network of communicating objects
present in the person’s home. The aim was to provide a
service to an elderly or a sick person. A multi-agent system
(MAS) reiﬁes the sensors and the mobile and autonomous
robot, allowing the cooperation among the agents by means of
adaptation features. The agents form coalitions by adapting the
cardinality of the coalitions according to the availability of data
sensors so that the whole system can answer to a user request
(obtain a particular effect). In the present work, adaptiveness of
Coalaa has been improved by integrating a rule-based system
able to determine, in a dynamic way, a priority for the criteria
to consider during the coalition formation process. On the
other hand, new experimental results show the validity of
the approach implemented in Coalaa. Multiple dimensions of
the adaptiveness have been identiﬁed allowing Coalaa being
extendable with a meta model of the adaptiveness.
The next section details the context application and de-
scribes a particular usage scenario. Section III includes a
brief overview of existing ambient assistive living systems and
argues for a new one based on adaptive coalition-based MAS.
The designed system Coalaa is described in details in Section
IV. The Section V describes the rule-based module and the
adaptation behaviors of the agents. Evaluations and analysis
of Coalaa in the context of robotic localization are presented
in Section VI. Finally, Section VII draws some conclusions
and introduce future works.
II.
THE PROBLEM DESCRIPTION
Ambient Assisted Living (AAL) constitutes a fundamental
research domain. It refers to intelligent systems of assistance
for a better, healthier and safer life in the preferred living
environment and covers concepts, products and services that
interlink and improve new technologies and the social environ-
ment, with a focus on older people. A panorama of European
projects can be found in [2]. Our speciﬁc context is to assist
a person in loss of autonomy at home. It concerns either the
elderly or people with speciﬁc disabilities. Maintaining such
people at home is not only beneﬁcial to their psychological
conditions, but helps reduce the costs of hospitalizations.
House is equipped with a network of communicating objects
(CO) such as sensors or actuators for home automation. A
complete telecare application for remote monitoring of patients
at home, including a wireless monitoring portable device held

125
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
by the patient, is added for detecting alarming situations. A
mobile robot with embedded CO is also present in the house.
The context application is essential in this work. So, a usage
scenario is described in details so as to illustrate the different
application challenges and the scientiﬁc issues addressed in
this paper, which is implementing multidimensional adaptive-
ness.
A. A scenario description
The scenario consists of a variety of situations where an
alarm has occurred. The scenario and robot conﬁguration have
been determined in cooperation with the remote monitoring
center SAMU-92, which is attached to Public Paris Hospital
[3]. An alarm can be triggered by a device worn by the person
or the sensor network of the ambient environment. Thanks to
its capability to move, the robot helps to conﬁrm and evaluate
the severity of the alarm by cooperating with the CO. The
robot begins by searching the person and then provides an
audiovisual contact with a distant caregiver. That way, the
distant caregiver is able to remove the doubt of a false alarm, to
make clear the diagnosis and to choose the best answer to the
alarming situation. It is important to note that the embedded
device monitors the physiological parameters and the activity
of the person. The originality of the proposed approach is that
the robot tries to take advantage of ubiquity. The autonomy of
the robot is obtained by a close interaction between the robot
and the ambient environment (AE). So, the services the robot
can bring to the user are directly related to the effectiveness
of the robot mobility in the environment. Even if the AE is
installed in a static way for a period of time, the robot takes
advantage of ubiquity and it does not perceive always the same
data according to the degree of intrusion that is allowed. For
example, off camera inhibits the robot to use images. So, the
robot has to adapt its perception in order to locate itself and
try to help the person. Indeed, before providing a service to the
person, the robot has to locate itself by interacting with the AE.
In such scenarios, an ethical dimension, named level intrusion
of the system, has been introduced to preserve the privacy of
the person. The level of intrusion of the system is deﬁned
according to the degree of freedom of the CO regarding to the
actions. For instance: maximal distance allowed between the
robot and the person, activating a camera, switching on a light
and so on. The level of intrusion of the system is supposed to
be minimal except in a case of emergency.
B. Robot localization task
Using a robotic assistant for the task rather than a simple
set of ﬁx cameras in all rooms is an advantage in two cases:
i) the assistance is only needed for a limited period such as
convalescence period or ii) the residence has many rooms,
e.g., nursing homes. Moreover, the general quality of video
and audio sensors increases. The goal of the robot is reaching
the person and setting up an audiovisual communication with
the distant surveillance center.
Figure 1 shows a robot in the person’s home; the patient has
fallen. To move towards her/him and to guide its camera to
the remote caregiver, the robot has to be located ﬁrst. A visual
contact will help the remote caregiver to perform a correct
diagnosis of the situation.
If the robot is located at P1 position, then its mobile camera
can identify the visual marker Y. With further information
from a ﬁxed camera environment, the robot manages to locate
itself by a mean of an adequate localization algorithm. The
direction taken by its mobile camera that detected a visual
marker also allows the robot to know its orientation relative
to a ﬁxed reference in the environment. This information can
also be inferred from previous values using odometry on the
one hand and its linear and angular speeds on the other hand.
It is thus easy and straightforward to identify and understand
that the more information you have the better the accuracy of
the location of the robot is. If the robot is in P2 position, it has
no marker on its visual ﬁeld and has no element enabling it to
locate itself. It then uses two different strategies to ﬁnd a visual
marker. Either its moves randomly or turns its pan-tilt camera.
In two cases, it is necessary that the intrusion level of the
system permits it. It can also query the detectors of presence
to learn about the place in which it has been seen lately. In the
case of several conﬂicting reports, it will be decided according
to the data freshness criteria, or according to the consistency
with the data criteria already available thanks to the sensors of
the robot. This simple scenario shows that robot localization
is a complex task and there is no evidence for an approach
that could be able to choose the relevant interactions between
the robot and the AE. The difﬁculty lies in choosing the most
relevant criterion to be considered ﬁrst: is it the closest CO, the
most accurate and or the least intrusive? The problem analysis
suggests that depending on the context, the criterion to consider
is different. As the context itself is dynamic and difﬁcult to
predict, a centralized algorithmic solution is to be excluded.
What is required is an approach that can adapt the selection
and the use of criteria based on the context and the choice of
a level of intrusion aligned with the level of urgency.
III.
STATE OF THE ART
Adaptive systems [4] are known to meet the requirements
of the addressed scenario in our work. More precisely, adap-
tation features are inherent to MAS. So, the designed and
implemented approach exploits the MAS adaptiveness [5]
potential to design a distributed system to deal, in a dynamic
way, with scenarios such as the one described above. The
adaptiveness is also needed to deal with dynamic addition
and suppression of sensors. Furthermore, MAS are relevant to
our applications domain because they allow easy deployment
in new and temporary environments. While the purpose of
the paper is not to describe the localization algorithm but a
selection mechanism of the agents participating to this task,
it is not necessary to explain the robot localization. Before
addressing a state of the art in the MAS domain, a brief
overview of existing ambient assistive living approaches is
given.
A. Ambient assistive living existing approaches
In the context of ambient intelligence, the communicating
objects of the AE play a ”facilitator” role in helping the

126
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fig. 1.
A person falls scenario
robot in the Ambient assistive living. Conversely, sensors
and robots can be seen as communicating objects which are
used by services to the person in loss of autonomy. Several
projects have been interested in combining home automation,
pervasive sensors and robotics, for the safety of the patient at
home. The IDorm project [6] is designed to assess an ambient
environment composed of three categories of communicating
objects: static objects associated with the building, a robot
and mobile devices. IDorm architecture consists of a MAS
that manages the operations of all the environment sensors
and the robot. The sensors are controlled by an agent and the
robot by another one. The sensor agent receives the different
measures from sensors and controls actuators which are linked
to sensors like a pan-tilt camera. The robot agent acts as a
data server and coordinates exchanges of information between
the user and the robot. It controls the navigation of the
robot by combining different functions such as the obstacle
avoidance or the search for targets. The CARE ([4]) project
is a Research and Development activity running under the
Ambient Assisted Living Joint Program, which is co-funded by
several European countries. Its main objective is fall detection
and person monitoring at home by Smart camera. As part of
this project, algorithms essentially based on a biologically-
inspired neuromorphic vision sensor for fall detection have
been developed. The system aims to deﬁne a level of reliable
supervision by avoiding as much as possible interactions with
the person in her/his own home. ProAssist4Life ([5]) is a
German project of situation of helplessness detection System
for elderly. This project consists in developing an unobtrusive
system that provides permanent companionship to elderly
people living in single households or in retirement facilities.
Multisensory nodes mounted on the ceiling of a room register
an individual’s movements. One multisensory node contains
six motion sensors, one brightness sensor, and one oxygen
sensor. According to data provided by various physiological
sensors, the system is based on a predictive approach based on
ﬁnite state automata modeling the previous activities of the pa-
tient. Another project developed at the University of Camerino
is named ACTIVAge [7]. In order to keep people at home also,
this project aims to provide services and teleservices based
on the context. The system consists of an adaptive planning
solver based on webservices orchestration and choreography
with decision making algorithms. A knowledge base is used
to model persistent data of the ambient environment. In each
of these projects, the authors seek to design a system to avoid
interfering with the patient at home. Ethical dimension is still
much debated in the ﬁeld of ambient assisted living, this
constraint is managed by the projects mentioned above by

127
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
discrete sensor systems. Although the last described project
pretends dealing with adaptiveness, this concept remains a
major challenge in ambient assistive applications. The work
presented in this paper is focused on implementing adaptive-
ness while designing several application aspects. The evolution
of the inconvenience (intrusion level of the system) based
on the degree of urgency and the availability of different
communication devices that constitute the environment are
particularly targeted. The coalition-based MAS presented in
this paper reﬂects this constraint. The purpose of the paper is
to describe a selection mechanism of the agents participating to
the localization task, so localization algorithm is not presented
in details.
B. Coalition-based protocols
Multi-agent systems involve agents interacting, with each
other on one side and with their environment on the other side.
The agents work to achieve individual and/or group goals. The
achievement of group goals requires that agents work together
within teams. As it is argued in [8], there exist several ways for
the modeling the team behaviour. The principle of coalitions
aims at temporarily putting together several agents for reaching
a common goal. Several works have illustrated the relevance
of coalition-based approaches for adaptiveness [9], [10], [11],
[12]. The methods are various: either incremental or random
or centralized. But, all of them proceed in two stages: (1)
the formation of agent coalitions according to their ability
to be involved in achieving a goal and (2) the negotiation
stage between the coalitions in order to choose the one that
provides the closest solution to the goal. The interests of
the coalition-based formation protocols are the ﬂexibility with
which coalitions are formed and straightforwardness of the
coalition formation process itself. The coalitions can get rid of
dynamically reorganize with local and simple rules deﬁned in
the agents.
IV.
COALITIONS FOR AMBIENT ASSISTED LIVING
APPLICATIONS
Coalaa (Coalitions for Ambient Assisted living applications)
is a MAS [13], [14], [15] based on coalitions formation
protocol.
The particularity of our system reside in the fact that each
agent encapsulates one CO. The CO include not only those
which are installed in the home nor the ones which are
embedded on the person or on the robot. So, the agents
associated to the embedded CO act in the same way as the
others (that are embedded). They participate to the coalition
formation. Note that the robot is not agentiﬁed. The robot has a
particular role; it is able to move, it should need some services
(i.e. locate itself). Because the agents encapsulate CO, they are
called ambient agents. Each ambient agent decides in a local
and proactive way how to contribute to the required service to
the person. In fact, we have introduced a more general notion
than a service, which we have called an effect. An effect can
be a particular lighting at a precise place of the residence or the
localization of a robot. The MAS conﬁgures itself for providing
a solution according to the availability of the CO and the
respect of criteria. The adaptation to the context is inherent
to the multi-agent modeling, strengthened by coalitions and
negotiation mechanisms. Note that the goal is not to ﬁnd the
optimal solution but a solution close enough to the required
effect. In our coalition formation protocol, the obligation to
respect the result and an intrusion level depending on the
urgency of the situation, are the most important considered
criteria. These criteria are also used during the reorganization
of the agents while trying to achieve a desired effect. The
obligation result criteria is used in priority, while the level of
intrusion is modiﬁed only if needed, i.e., to acquire new data
and thus to activate the sensors (ex. tilt-camera) likely to cause
discomfort to the person.
As shown in the Figure 2, several kinds of components are
necessary to deal with the complexity of our ambient assistive
application. These components are described hereafter.
A. Knowledge modeling
An effect is modeled in the form of a triple σ = <t, c, f>
where t ∈ T, c ∈ C and f ∈ F and:
•
T is a set of tasks labels: localize a robot or a person,
enlighten, cognitive stimulation.
•
C is a set of criteria: accuracy, efﬁciency, time constraint,
neighborhood.
•
F is a list of inﬂuencing factors: intrusion level, urgency
degree.
The criteria are assigned by the designer (programer) of the
system in a static way, while the inﬂuencing factors are
dynamically ﬁne-tuned by the end-user. Since the criteria
concern the capabilities of the CO, they are stored in the
ontology in a static way for each CO. But the addition of CO
allows new capabilities to be dynamical stored in the system.
The inﬂuencing factors are directly related to the degree of
freedom that the end-user (person at home or the caregiver)
want to give to the system.
B. Agents environment
The ambient agents operate in an ambient environment
consisting of habitat model within which the patient and
the robot are together. They argue according to the different
measures and relevant information that smart objects provide.
1) Ontology: Information handled by the system is classiﬁed
into two types. This so-called persistent information, related to
the application domain, puts together data about the structure
of the residence and the features of the CO. The second type
concerns volatile data mainly the measures provided by the
sensors and the orders sent to actuators. The information types
are handled differently. The volatile data are distributed in each
agent, while persistent data are instances of an ontology named
AA (Ambient Assistance) [16], [17]. The AA ontology con-
tains four categories of information related to the application
domain: The Home category for deﬁning the structure of the
environment, the CO category for knowing their characteristics
and their operating mode, the User category for deﬁning the
user proﬁle and the Task category that puts together the
tasks and services that the system is able to achieve (see

128
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fig. 2.
Integral architecture of Coalaa
Figure 3). These categories deﬁne the four concepts of the
ontology that are implemented for the studied usage scenario.
But the ontology can easily be extended with new concepts
if new CO were installed in the environment allowing new
services to be offered. Our system needs to set up links
between members of the same concept such as a topological
relationship between two parts of the residence. Links are also
needed between members of different concepts. For example,
to process a measure provided by a sensor, the system has
to locate the sensor in the residence. These links are referred
to as ontological properties. We have deﬁned three types of
properties: relationship, use, and attribute. The ontological
property relationship deﬁnes a logical relationship, generally of
ownership, which links concept members between each other.
The ontological property use deﬁnes the function of an object.
The ontological property attribute refers to the features of a
concept or a concept of an individual member of the ontology.
It speciﬁes the operating mode of the object, for example, a
camera can be used to perform the localization task.
Ontology
Task
Communicating
object
Home
User
Fig. 3.
Ambient Assistance Ontology
In this ontology, a property named topological distance
is deﬁned as the number of hops between two instances.
The hops are relations as deﬁned above in the ontology.
If the structure of the ontology is deﬁned by a graph, the
topological distance is the number of nodes which separate
two individuals minus one. This topological distance is used
by agents of the MAS to determine their neighborhood during
the coalition formation. This knowledge base is complemented
by the dynamic information from the ambient environment
through the gateway.
2) Gateway: The gateway is a module for the standardiza-
tion of information exchanged between the ambient environ-
ment the MAS. Its role is to make the agents manipulating a
common information format. This standardization is necessary
because of the heterogeneity of the protocols from different
manufacturers. Thus, the MAS receives and acts on the ambi-
ent environment through the gateway without worrying about
the format of the collected data.
C. Agent internal architecture
Figure 4 represents the internal architecture of an ambient
agent. The decision making module takes in charge the agent
adaption and reactivity by using three main parameters that
are neighborhood, history, and ability. The neighborhood sets
the list of agents that are close to this agent at a given
time, according to the topological distance. The history stores
previous perceived information which comes from the sensors.
This is a simple succession of perceived data which helps
to consider the timescale during the process of coalitions
formation. At last, the ability identiﬁes the skills of the agent
which are directly related to the encapsulated CO.
D. Agent behaviors
In the process of the coalition formation, an agent may
be either initiator or candidate. Any agent whose ability can

129
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Decision making
Neighbourhood
Ability
Input
History
Message reception
Perception
Message emission
Action
Output
Fig. 4.
Agent internal architecture
partially meet the desired effect can be a coalition initiator.
The initiator exchanges messages with other agents, potential
members of the coalition, called candidate agents. The Protocol
is based on exchanges of messages between the initiator agent
and candidate agents. As soon as the overall ability of the
coalition is close to the desired effect, the initiator agent is
pending the negotiation phase. The measure of closeness to the
desired effect is performed according to an interval that is, in
the case of a localization task, the precision of the task. At the
end of the coalition formations, each initiator agent that is the
referent of a coalition is negotiating with other initiators agents
to choose the winning coalition. The coalition whose ability is
the closest to the desired effect is the winning coalition.
The concept of ability is generic. In the localization
application example, it is instantiated by the measures
precision. The principle is simple. Each initiator agent sends
a message that contains the ability obtained by its coalition.
On receipt of this message, each initiator agent compares
the ability of the coalition it received to its own one. If
its ability is lower than that received, the coalition will be
no more considered, otherwise, it is a winning coalition up
to receiving a new message. Apart from the desired effect,
the formation of coalitions uses other criteria such as the
topological neighborhood to reduce the response time or the
obsolescence of a measure when the desired effect depends
on sensor data. Thus, the ﬁrst step is the identiﬁcation of
candidate neighbors according to its own location in the
environment (deﬁned by the topological distance) and the
desired effect. The aim of this strategy is to respond in the
shortest time to the desired effect by forming coalitions.
For that purpose, the ﬁrst selection criteria considered is the
topological distance. Once all candidate agents are known,
each initiating agent continues the selection of candidates
based on the recent measures criteria. When no coalition is
able to meet the desired effect, a new search for a successful
coalition is restarted after having relaxed the constraints on
certain criteria. Indeed, it is possible to increase the level of
intrusion of the system despite of the tranquility of the person
at home. This authorization increases the level of intrusion
allowing, for example, to operate a pan-tilt camera of the
robot to acquire new measures. Then, the system is restarted
hoping that the chances of ﬁnding a winning coalition is
increased.
The MAS protocol is deﬁned as a set of rules that ambient
agents follow to ﬁnd out a solution. The protocol of coalition
formation is composed of two distinct steps. The ﬁrst step
consists in forming coalitions of agents according to their
ability. The second step is a negotiation and reﬁning phase
so that the best coalition, in satisfying the desired effect,
is chosen. In summary, after initialization, these exchanges
follow three main actions:
1)
Formation of all possible coalitions for each referent.
2)
Selection of the best coalition according to the coalition
precision.
3)
Deployment of the winning coalition.
To make decisions and follow the protocol, each agent
executes the appropriate behavior and starts in a state cor-
responding to the behavior adopted.
Fig. 5.
Behaviors of an agent
Figure 5 shows the state transition diagram of the behaviors
of an ambient agent. Each ambient agent includes six parallel
and cyclic behaviors. The Baseline behavior represents the
minimum treatment of an agent. Upon receipt of a frame
from the environment (by the mean of the gateway), the
agent must recover the sensor ID associated with it, therefore
it can access the ontology and updates the ability attribute.
InitCoal Behavior, AcceptCoal Behavior, ACKCoal Behavior
and InitNegociation Behavior include the process of coalition
formation and negotiation. For the formation of coalitions, the

130
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
ﬁrst behavior to be executed is sending InitCoal following
receipt of a InitEffect. Running an InitCoal behavior consists
in sending a message, containing the ability of the agent, to
the neighborhood agent. All agents that receive this message
accept or refuse to be part of the coalition. Agents that
accept must then execute the AcceptCoal Behavior and then
send an acceptance message or refusal message. Initiators that
receive an acceptance reply with a conﬁrmation. Finally, the
EndNegociation Behavior runs when a winning coalition has
emerged. This is a behavior that allows the deployment of the
coalition.
E. Interaction between agents
The interaction between the agents is performed by sending
messages. For the formation of the coalitions, two types
of messages are deﬁned: Request message and Response
messages. For the messages exchanging, we have deﬁned a
semantic that is based on speech act theory, introduced by
John Searle [18]. Such a semantic allows the agents to deﬁne
message subtype as outlined below.
Initialization: Initialization messages subtype is used in
two situations: by the Interface Agent (AI) to send an effect
to achieve (InitEffect) to the agents of the system and, the
initiator agents after all coalitions have been formed so that it
is possible to initiate the negotiation (InitNegociation).
Coalition: A Coalition message type is sent in response to
the reception of a desired effect.
Acknowledgement: A conﬁrmation message (ACKCoal)
or a refuse message (RefuseCoal) is an Acknowledgement
message subtype.
Reaction: This subtype includes two main messages that are
AcceptCoal and ArgNeg. AcceptCoal is a message Reaction
subtype that is sent by an agent when accepting an InitCoal
proposal. The second message Reaction subtype is ArgNeg that
is sent by an agent to respond to a request for negotiation. Each
message type contains the ability of the sending agent while
forming the coalitions, and the ability of the coalition during
the negotiation step.
F. Agent genesis
The initialization step of the MAS is performed by a partic-
ular initialization module. It is to trigger a behavior that scans
the environment of each agent and creates the agents. Each
created agent is initialized by loading locally, a data set from
the ontology and information from the physical environment
(the gate).
G. Robot localization scenario
In this scenario, three sensors of the environment are used: a
robot pan-tilt camera, a ﬁxed camera and a presence detection
sensor. These three communicating objects are encapsulated
by three respective ambient agents: a Presence Detector Agent
(APD), a Fixed Camera Agent (AFC) and a Pan-Tilt Camera
Agent (APTC). Visual markers like Datamatrix are associated
with each camera. Figure 4 shows a sequence diagram of
the different agents that are involved in the scenario already
described in Section II.A.
Following the fall of the patient, a request for a localization
effect is generated in the form of a triple σ = <t, c, f> (cf.
Section IV.A). t is the localization task which matches with
the localization effect, c matches with a singleton containing
the precision criterion needed for the localization task and
f matches with a set containing two inﬂuencing factors that
are: the intrusion level and level of urgency. In the considered
scenario, we have considered a precision equal to 0.1, a
level of urgency equals to 3 (three levels of urgency are
considered: low=1, medium=2, high=3) and an intrusion level
initialized to 0 (the lowest intrusion level). So, the triple
becomes: <Locate; f0:1g; f3; 0g>. The Interface agent (AI)
has received the desired effect and then broadcasts the request
InitCoal (<Locate; f0:1g; f3; 0g>) to all the agents of the
MAS. Each agent which received the desired effect checks
its ability. As all sensors in the environment have a precision
that is not better than the desired effect, each agent initiates
a coalition with immediate neighborhood. In this ﬁgure,
only interactions with APD agent are shown. Assuming
that all agents are topologically close, APD broadcast a
coalition formation request by sending an InitCoal message.
Each agent receiving the initialization message checks if its
ability is adequate with the request of coalition formation.
If yes, it sends an acceptance message labelled AcceptCoal
to be a candidate. Such a message contains the precision
of the agent. APD adds progressively answer acceptance,
and accumulates the abilities which are the precision in the
considered localization task. By this way, it calculates the
overall ability of the coalition until it reaches that of the
desired effect. Then, it sends ACKCoal acceptance to conﬁrm
the membership of the candidate to the formed coalition.
The next step is to activate the coalition. The robot moves
to the place designated by the coalition and guides its
pan-tilt-camera to the remote caregiver. First of all, the distant
user has to verify that the person is in his ﬁeld of vision, so
he can perform a correct diagnosis of the situation and adopt
an adequate action.
Conversely, if the person is not well located the system
restarts searching for a new result, after having increased
the intrusion level. This allows the cameras to be moved
randomly so that the chances of getting a visual marker are
increased. The consequence will be improving the precision
of result (coalition).
This simple scenario shows that the management of the
criteria is critical. Indeed, the result (a successful coalition)
depends on the order in which the criteria are considered. In the
above scenario, if the level of intrusion was considered before
the precision, the ﬁrst result would have been the correct one.
Then, the question could be the following: why can one not
have a management criteria step integrated in the coalitions
formation process?

131
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
AI
APD
AFC
APTC
initEffect(<Loc, 0.1, 3, 0>)
initEffect(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
initEffect(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
initCoal(<Loc, 0.1, 3, 0>)
AcceptCoal
AcceptCoal
ACKCoal
ACKCoal
Fig. 6.
Usage scenario example
V.
AGENT RULE-BASED MODULE
In order to introduce some degree of intelligence in the
coalitions formation process, the agent architecture has been
provided with a rule-based system able to reason to ﬁxe a
priority for the criterion. On the other hand, such a rule-based
system is used to interleave the execution of the behaviors
of the agents in a dynamic way. A rule-based system is
composed of a set of rules named knowledge rules, a set of
facts named knowledge facts and an inference engine. The
rules are given in the form of implications. The knowledge
facts describe the state of the world and the inference engine
is a special interpreter that controls when the rules are invoked
according to the knowledge facts. The syntax of a rule is:
IF <antecedent> THEN <consequent>
The <antecedent> is the condition that must be satisﬁed
to trigger the rule. The <consequent> is the action that
is performed when the rule is triggered. The antecedent is
satisﬁed if the condition matches the knowledge facts. Some
examples are given below.
A. Dynamic behaviors triggering
Instead of having a procedural control (such as described
in section IV D), each behavior is modeled in a production
rule whose activation condition is precisely the context of the
execution of the behavior. The behaviors of the agents are as-
sociated with trigger conditions. These conditions represent the
context that makes behaviors possible to be executed. Explicit
chaining between the behaviors is no more needed since the
rules are performed by the inference engine embedded in the
agents. For example, the AcceptCoal behavior is chained with
the InitCoal behavior. So the InitCoal behavior is executed
once the AcceptCoal behavior is terminated. Expressing this
assertion in a production rule will give the rule below:
IF (Message InitCoal Locate) and (Ability Locate) THEN
execute the core of the behavior AcceptCoal
This rule expresses the fact that if the agent has in its
working memory (knowledge facts) a message with certain
attributes and if the agent has the ability of locating an object
or a person, so the rule can be triggered. In this case, the core
of the behavior associated with the rule is executed.
Note that all behaviors are not controllable. Some of them,
such as the message reception behaviors are supposed to be
generic and are automatically executed to threat the reception

132
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Decision making
Input
Inference
Engine
Message reception
Perception
Message emission
Action
Output
KBF
KBR
Fig. 7.
Extended Agent Architecture
of the messages.
B. Flexible criteria management
In the ﬁrst version of Coalaa, the priority of the criterion and
the criterion themselves were ﬁxed. Two main criteria were
considered during the coalition formation process; the most
prior is the topological distance and the second is the precision.
When the result is not correct, a new search for a successful
coalition is restarted after having relaxed the constraints on
certain criteria. In the last case, the intrusion level is increased
so that this increases the likelihood of ﬁnding a new satisfying
coalition. In the version presented in this paper, the architecture
of the agents has been modiﬁed with an embedded RBR (rule-
based reasoning) module responsible of a declarative reasoning
process.
In the new agent architecture, as it is is shown in the
Figure 7, the inference engine replaces the procedural algo-
rithm which implemented the decision module. The knowledge
base facts (KBF) represents the knowledge extracted from
the ontology, the perceived data and the exchanged messages
between the agents.
For that purpose, a set of rules is deﬁned to determine,
depending on the context, the most relevant criteria to consider
ﬁrst at each step of the coalition formation process. On the
other hand, when the coalition proposed by the system is not
a correct one, the RBR is in charge of determining the most
relevant criteria to relax. The rules involved in this case are
some kinds of heuristics that guide the coalition process in
managing the criterion. For example, if a CO involved in the
coalition does not include a CO whose precision is sufﬁcient
(such as a camera), it is advisable to relax the intrusion
level. This increases the degree of freedom of the system
regarding to its actions allowing, for example, the cameras
to be activated or lights to be switched on. Another use of the
RBR for the management criteria concerns the addition of new
criterion such as the time or more precisely data freshness. It
is sometimes more relevant to consider not sufﬁciently precise
data if they are very recent. For example, a presence detector
can only inform that the person is situated in a particular
room. Suppose that a particular presence detector says that
the person is in the room R1 and a camera says that the
person is in the right corner of the room R2. Of course, the
information given by the camera is more accurate, but if it
is too old it should be obsolete and will not help correctly
locating the person. What is suggested here is to consider the
date of perceived information while determining the priority
of the criteria. So the system is able to deal with conﬂicting
information. Providing such a reasoning to the system is done
by adding a new rule to the set of criteria management rules,
without any other change in the system.
VI.
CONTRIBUTIONS AND RESULTS/OUTCOMES
The results are obtained in a real environment composed
of heterogeneous sensors and markers. The platform includes
several sensors obtained of the market and dedicated sensors
developed by the laboratory. The environment is composed of
a room equipped with a set of sensors and the robot with
its own sensors. The localization is based on goniometric
measurements provided by robot on-board sensors and envi-
ronment sensors. These can provide localization information
to obtain the localization of the robot in its environment
using real-time data either from the robot on-board sensors
or from the sensors in the environment. Coalaa has been
implemented using a multi-agents system platform: Jade ([16]).
Jade provides generic behaviors, which facilitates controlling
the execution of the agents. The RBR is implemented using a
Java Expert System Shell: Jess (see [19].
Thanks to the RBR, the adaptiveness of our system has been
broaden, so a fourth dimension is identiﬁed1:
1)
Computational level: during the coalition formation
process,
2)
Functional and methodological level: while service
modeling,
3)
Ethical level: intrusion level of the system which is
integrated in the behavior of the system,
4)
Control level: for behaviors triggering and criteria
management.
A. Computational adaptiveness
To validate the protocol used in Coalaa, a comparison to a
well known protocol which is the Contract Net Protocol (CNP)
has been performed. The CNP was the ﬁrst approach used in
MAS to solve the problem of tasks allocation. Proposed by
Smith in 1980 [20], it is based on an organizational metaphor.
The agents coordinate their work based on building contracts.
There are two types of agents, a manager agent and contracting
agents. The contractor agent must complete a task proposed by
the manager. The manager breaks down each task into several
subtasks, and then announces each subtask to a network of
agents by sending a proposal. Agents contractors that have
adequate resources respond by sending their submission. The
manager agent analyses all received bids and based on the
result of this analysis assigns the task to the best contractors.
The contractors commit with the manager to perform the
1Indeed, in the previous version of this work, only three dimensions of the
adaptiveness had been considered

133
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fig. 8.
Formed Coalitions
assigned subtask. From the methodological point of view, there
are two main differences between Coalaa the CNP. First, in
Coalaa there are no commitments between the agents, they
just do heir ”best” to achieve the desired effect. Second, an
agent can leave the coalition during the coalition formation
process. Second, there is no ﬁtness function that the coalition
must achieve.
The CNP and the Coalaa protocols have been tested with a
dozen scenario using in each scenario, different values for the
criteria. Each scenario has been executed with both protocols.
The showed results represent an average of the results of the
scenario. Evaluations have been performed on a MAS whose
cardinality varies. The results are broken down into three
categories:
1)
The number of coalitions for an initiator with cardinal-
ity greater than or equal to 2,
2)
Comparing the response time of each protocol,
3)
The
number
of
messages
exchanged
during
the
formation of coalitions.
Figure 8 shows the number of formed coalitions depending
on the number of agents present in the MAS. The preferred
strategy in our approach is to obtain a maximum number
of coalitions that meet the selection criteria. The goal is to
maximize the number of solutions to meet the request to
increase the chances of securing a result. The number of
coalitions is always equal to the number of initiators. In terms
of the number of formed coalitions, the Contract Net protocol
is less efﬁcient than Coalaa protocol.
The response times are compared (see Figure 9). This time
corresponds to the time spent in calculating the coalitions,
including the message exchanges.
The fact that the number of coalitions that the CNP can
form is lower than the number of initiators has a direct effect
on the response time. It also impacts the number of exchanged
messages represented by Figure 10. The curve representing the
number of exchanged messages follows the same rate for the
two protocols. However, Coalaa shows a higher number of
exchanged messages. Unlike the CNP, Coalaa avoids system
crashes, by a progressive coalition formation which in contrast
Fig. 9.
Response time
Fig. 10.
Exchanged messages
increases the number of exchanged messages. In terms of per-
formances (time response and number of exchanged messages)
measures, Coalaa and CNP are almost similar, CNP is slightly
better in terms of response time. But in terms of obtained
results Coalaa is better. Indeed, a failure can be catastrophic
and thus the few milliseconds delay in the response time may
be insigniﬁcant, if success to complete the task is assured. This
is explained by the fact that Coalaa continues to reorganize
itself until ﬁnding a solution (even with deteriorated criteria),
while with CNP, the system can fail and do not offer a solution.
B. Methodological and functional adaptiveness
The genesis of the MAS is done automatically. In spite of the
fact that this has not been detailed in this paper, this is a very
important feature of the system. In fact, modifying the ambient
environment, by adding or suppressing CO, automatically
updates the ontology Habitat and triggers automatic MAS
reconﬁguration. In case of such modiﬁcations, the user does
not need to do any speciﬁcation to make the system adapting
its architecture to AE dynamic updating. This ability of the
system is qualiﬁed by methodological adaptiveness. We refer
to functional adaptiveness when dealing with services that the

134
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
system can offer to the user. The description of the ability of
the CO used by the agents to construct services according to
the ”effect description” is included in the ”ask” ontology part.
This allows the agents to perform an automatic detection of
their ability to perform an effect.
C. Ethical adaptiveness
An original speciﬁcity of our system is its dealing with an
ethical dimension, which is the level of intrusion of the system.
In fact, the system is able to adapt the intrusion of the robot,
the CO and the embedded software according to the urgency
of the situation and be allowed to cause discomfort for the
person or its entourage only if needed.
D. Control adaptiveness
The fact that an inference engine has been employed instead
of a procedural algorithm has a direct effect on the intelligence
of the system. The behaviors of the agents are involved only
when their associated rules are triggered, which are themselves
triggered when some declarative conditions are met. Since the
conditions of the rules can be modiﬁed without any procedural
modiﬁcation, the control of the execution of the behaviors
is completely adaptive. The user can control and modify
the execution of the behaviors even during the execution of
the system itself. The system is also able to detect missing
information which can lead to the execution of a particular
behavior. So, if more generic rules are more the system
intelligence can be improved. If it is easy to convince that
adding new rules does not imply to modify the implementation
of the system, suppression of rules is not trivial. The process of
suppressing rules has to deal with consistency of the remaining
data because of the possible inference which are related to the
rule to be suppressed.
The convergence of the coalition formation process and the
MAS itself have not been adressed from the conceptual point
of view. A time out makes the system to stop if a coalition
has not been emerged. This well be held in a future version
of the system.
A last long term perspective concerns the construction of
our AA ontology. While the utility of the ontologies is now
well established, their construction, updating and using raise
several scientiﬁc challenges, especially in new domain such as
ambient intelligence.
VII.
CONCLUSION AND PERSPECTIVES
An adaptive approach has been presented for an assistive
ambient alarm detection by implementing the Coalaa system.
Coalaa is a coalition-based multi-agent system in which the
adaptiveness is considered from multiple dimension. The com-
putational, the methodological, the ethical and control points
of view of adaptation have been considered.
The advantages of Coalaa in comparison with a simple
system in which: a patient with alarm key and mounted on
the ceiling movable video camera with a zoom lens that is
controlled by a care provider, are various. One can mention:
•
Minimizing the number of zoom cameras that are more
expensive and more intrusive than simple ones.
•
Temporar or reversible installation of ambient environ-
ments.
•
The robot is intended to be able to offer different kinds
of services to the person.
The feasibility of this approach has been widely demon-
strated on a usage scenario to remove the doubt of a false
alarm. The ﬁrst results illustrated with the robot localization
application are promising. The validation of the system with
a great data size has been performed by the generation of
statistical distributions of data that provide more meaningful
results. Moreover, comparing our protocol to the contract-net
protocol has shown that even more time is spent with Coalaa,
the number and the diversity of the solutions is greater.
In spite of conclusive results, several improvements of
Coalaa are under consideration. The efﬁciency of Coalaa can
be improved by making the initiator agents revising the way of
choosing their partners during the coalitions formation process.
This can be based on past obtained results. The agents can infer
the capabilities of their potential partners through repeated
interactions such as done in [21].
Another perspective is to implement more ﬂexible way to
calculate the cardinality of the coalitions. This could be done
by the agents by evaluating their behavior and self-adapt for
improving the overall model of criteria evaluation [22].
At a short-term perspective, we plan to apply our approach
to other services such as cognitive stimulation and the detection
of the person activity. The rule-based reasoning implemented
in the second version of Coalaa can be used to infer infor-
mation about the activity of the person. This can be done by
making inferences based on the dating of information that are
available during the activity of the agents. For example, if at
ti the person is in her/his bathroom and at ti + n she/he is at
the kitchen and now (at ti + n + m) she/he is in the dining
room, one can infer that after having ﬁxed herself, the person
has prepared the meal and now she/he is feasting the meal
she/he prepared. Indeed, a rule-based reasoning can be easily
detect the rules that are linked and construct reasoning paths
that lead to the description of the activity of the person.
At a long-term perspective, we will propose to wrap an
agent in each communicating object, so that no time is spent
to acquire information from the gate.
An original application of Coalaa could be to calculate an
optimal deployment of the sensors in the houses so that to
improve the services that the system can provide to the person.
On the other hand, we are thinking about further development
of our approach so that it can be extended for everyday life. An
interesting challenge is to cope with large number of needed
sensors if everyday applications are considered. Despite the
inherent modularity of MAS, it will be necessary to improve
the localization algorithm in such cases.
Another challenge would be comparing the solution not only
with CNP but also with other coalition formation approaches
(i.e., learning based ones). This can lead to a computational
environment for experimenting coalition formation algorithms.

135
International Journal on Advances in Intelligent Systems, vol 6 no 1 & 2, year 2013, http://www.iariajournals.org/intelligent_systems/
2013, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
ACKNOWLEDGMENT
The authors would like to thank the ANR for accepting
the implementation of the QuoVADis project that spread from
2008 to 2011.
REFERENCES
[1]
A. Andriatrimoson, N. Abchiche-Mimouni, E. Colle, and S. Galerne,
“An adaptive multi-agent system for ambient assisted living,” in ADAP-
TIVE 2012, The Fourth International Conference on Adaptive and Self-
Adaptive Systems and Applications.
IARIA, ThinkMind, 2012, pp.
85–92.
[2]
M. Biddle, “Catalogue of projects 2012: Ambient assisted living”,”
2012.
[3]
A. Andriatrimoson, T. Simonnet, P. Nadrag, P. Hoppenot, and E. Colle,
“Quovadis project: Functionalities of the robot and data-processing
architecture,” AAATE, 2009.
[4]
A. Eduardo, D. Kudenko, and D. Kazakov, Adaptation and Multi-agent
Learning.
Springer-Verlag Heidelberg, 2003.
[5]
M. Sims, C. Goldman, and V. Lesser, “Self-Organization through
Bottom-up
Coalition
Formation,”
in
Proceedings
of
Second
International Joint Conference on Autonomous Agents and MultiAgent
Systems.
Melbourne, AUS: ACM Press, July 2003, pp. 867–874.
[Online]. Available: http://mas.cs.umass.edu/paper/238, accessed on
June 26th 2013
[6]
P. Remahnino, H. Hagras, N. Monekoss, and S. Velastin, Ambient
Intelligence a gentle introduction.
Paolo Remahnino, Gian Lucas
Foresti, Tim Ellis (Eds.), 2005, ch. 1, pp. 1–14, book title: Ambient
Intelligence: A Novel Paradigm.
[7]
F. Corradin, E. Merelli, D. R. Cacciagrano, R. Culmone, L. Tesei, and
L. Vito, “Activage: proactive and self-adaptive social sensor network
for ageing people,” ERCIM News, vol. 2011, no. 87, 2011.
[8]
B. Jarvis, D. Jarvis, and L. Jain, Teams in Multi-Agent Systems.
Springer US, 2007, vol. 228.
[9]
M. Sims, C. Goldman, and V. Lesser, “Selforganization through bottom-
up coalition formation,” in the 2nd AAMAS, 2003.
[10]
T. Scully, M. Madden, and G. Lyons, “Coalition calculation in a
dynamic agent environment,” in the 21st ICML, 2004.
[11]
L.-K. Soh and C. Tsatsoulis, “Reﬂective negotiating agents for real-time
multisensor target tracking,” in IJCAI’01, 2001.
[12]
L.
Soh
and
C.
Tsatsoulis,
“Allocation
algorithms
in
dynamic
negotiation-based coalition formation,” in AAMAS02 Workshop 7
”Teamwork and coalition formation”, 2002, pp. 16–23.
[13]
M. N. Huhns, Distributed Artiﬁcial Intelligence.
Pitman, 1987.
[14]
M. N. Huhns and M. P. Singh, Readings in Agents. Morgan Kaufmann,
1997.
[15]
M. Wooldridge and N. R. Jennings, “Agent theories, architectures, and
languages: a survey,” in Intelligent Agents, Wooldridge and J. Eds, Eds.,
Berlin: Springer-Verlag, 2009, pp. 1–22.
[16]
A. Kivela and E. Hyvonen, “Ontological theories for the semantic web,”
in Semantic Web Kick-Off in Finland, May 2002, pp. 111–136.
[17]
R. Arnand, E. M. Robert, H. C. Roy, and M. M. Dennis, “Use
of ontologies in a pervasive computing environment,” in Knowledge
Engineering Review, vol. 18, 2003, pp. 209–220.
[18]
J. Searle, Speech acts. an essay in the philosophy of language.
Cam-
bridge University Press, 1969.
[19]
E. F. Hill.
Manning Publications, 2003.
[20]
R. Smith, “The contract net protocol: high-level communication and
control in a distributed problem solver,” in IEEE Transactions on
Computers, 1980, pp. 1104–1113.
[21]
G. Chalkiadakis and C. Boutilier, “Sequentially optimal repeated coali-
tion formation under uncertainty,” Autonomous Agents and Multi-Agent
Systems archive, vol. 24, no. 3, pp. 441–484, May 2012.
[22]
F. Klugl and C. Bernon, “Self-adaptive agents for debugging multi-agent
simulations,” in ADAPTIVE 2011, The Third International Conference
on Adaptive and Self-Adaptive Systems and Applications.
IARIA,
ThinkMind, 2011, pp. 79–84.

