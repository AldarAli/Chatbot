Comparison of Educational Project Management Tools 
 
Rafael Queiroz Gonçalves, Christiane Gresse von Wangenheim 
Department of Informatics and Statistics, Graduate Program on Computer Science 
Federal University of Santa Catarina, UFSC 
Florianópolis, Brazil 
e-mail: rafael.queiroz@posgrad.ufsc.br, c.wangenheim@ufsc.br 
 
 
Abstract—Project management tools are mandatory to properly 
manage software projects. The teaching of the usage of these tools 
is carried out in higher education computer courses and, usually 
generic tools are adopted, such as MS-Project. However, their 
lack of educational features has motivated the development of 
several educational project management tools. This study aims at 
the analysis of such existing tools, carrying out a systematic 
comparison. Therefore, we selected the most relevant educational 
project management tools based on the results of a Systematic 
Literature Review. These results were updated, including newly 
available tools and excluding proprietary and no longer available 
ones. The selected tools are presented, highlighting their 
educational features, supported functionalities and content 
coverage considering the whole project management process. A 
systematic comparison is conducted, discussing each evaluation 
criteria, resulting in a guideline for choosing the proper 
educational 
project 
management 
tool 
according 
to 
the 
educational goal. The presented results may be useful for 
instructors of Project Management courses as well as for 
researchers, to guide further research based on the identified 
gaps in this area. 
Keywords-Project Management; Project Management Tool; 
PMBOK; Teaching; Education; Open-source. 
I. 
 INTRODUCTION 
Project Management (PM) is a critical area for many 
organizations in the software industry. A significant amount of 
projects still fail due to a lack of proper management, causing 
problems related to unaccomplished deadlines, budget overrun, 
or scope coverage [1]. In this context a project is considered a 
temporary endeavor to achieve a single result, and PM is the 
use of knowledge, abilities, tools, and techniques that enable a 
project to reach its goals [2]. 
Project problems occur mainly because of the absence of a 
PM process [3], resulting in a limited control over project 
restrictions and resources [1]. The adoption of a PM process 
may be facilitated by the usage of a PM tool [4]. A PM tool is a 
software that supports the PM process (either as a whole or 
partly), offering functionalities like: schedule development, 
resources allocation, cost planning, among others [7]. Despite 
the fact that many organizations still do not adopt any PM tool, 
the positive contributions that these tools may bring have 
increased the interest in their usage [5]. 
The responsibility for the usage of these tools lies with the 
project manager, who is accountable for the success of the 
project, having the authority to direct its resources in order to 
conduct the project by following a systematic PM process [2]. 
Given that the usage of PM tools is not yet common in 
organizations and that many projects still fail, a possible cause 
for this could be the lack of teaching the usage of these tools to 
project managers and team members [1][6][7]. 
The teaching of PM has to cover knowledge on PM, 
beyond 
general 
knowledge 
on 
administration, 
project 
environment, application area, and interpersonal abilities [2]. 
However, the teaching of PM should not just be focused on 
theoretical knowledge, as this is not enough for an effective 
PM application. And, as due to the complexity of contemporary 
software projects, PM is impracticable without the support of a 
PM tool, and the ability to use such tools is also among the 
project manager‟s  competencies [4][8]. 
In Section 2, we present the background Section, followed by 
Section 3 that presents the analysis of related studies that have 
compared PM tools. In Section 4 we present the process we 
have adopted to carry out the educational PM tools 
comparison. In Section 5 we present each of the selected PM 
tools, and a structured comparison is presented in Section 6, 
leading to a discussion about each evaluated criteria in Section 
7, resulting in a guideline for choosing the proper educational 
PM tool according to the educational goal. In Section 8 we 
present the conclusions of this study. These results may assist 
teachers in the teaching of this competence. They may also 
assist researchers in the improvement of support to the 
existing tools, or the development of new ones, covering the 
gaps that remain in this area. 
II. 
BACKGROUND 
Concepts that are relevant to this research are presented in 
this Section, namely: PM, PM tools, and teaching of PM tools. 
These concepts are used during the discussion of our findings, 
in terms of criteria for selection and evaluation of educational 
PM tools, or for analyzing their educational characteristics and 
general functionalities. 
A. Project Management 
PM conducts project activities and resources to meet its 
requirements, from its initiation to closure (Figure 1). 
184
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
 
Figure 1. PM processes groups [2]. 
Orthogonally to these process groups, the PM processes are 
organized in 10 knowledge areas (TABLE I). 
TABLE I. PM KNOWLEDGE AREAS [2]. 
Knowledge area 
Processes to: 
Integration 
Identify, define, combine, unify, and coordinate PM 
processes and PM activities. 
Scope 
Ensure that the project addresses the entire work 
and meets all its requirements. 
Time 
Plan, monitor and control the activities that will be 
carried out during the project so it concludes within 
the deadline. 
Cost 
Plan, estimate, and control project costs, so it 
concludes within the approved budget. 
Quality 
Define the responsibilities, goals, and quality 
policies so the project meets the needs that have 
initiated it. 
Human 
Resources 
Organize and manage the project team. 
Communication 
Ensure the generation, collection, distribution, 
storage, recovery, and final destination of project 
information. 
Risk 
Identify, monitor and control the project risks. 
Acquisition 
Buy or contract products, services or any resources 
that are not available as project internal resources. 
Stakeholder  
Identify and manage the stakeholders and its 
expectations. 
In the context of this study, the PM process refers to the 
one defined by PMBOK [3], which is the main reference in 
this area and widely accepted [9]. 
The application of a PM process is assisted by the usage of 
PM tools, which support the PM process, either as a whole, or 
a particular part of it. This support may semi-automatize some 
activities of PM process, such as writing status reports or 
providing online forms to record meeting minutes [6]. 
Furthermore, some PM process activities may be totally 
automated by PM tools, such as for instance, calculating the 
total project cost, the identification of the critical path, or the 
identification of over-allocated resources [5][10]. 
B. PM Tools 
Conducting the PM process may be very complex and 
demand considerable resources of an organization. To assist in 
its execution, many PM tools have been developed. Examples 
include: MS-Project, Primavera, DotProject, Project.net, etc. 
[4][11]. However, due to the wide variety of PM tools, their 
functionalities and characteristics are very heterogenic [5, 12]. 
Supported functionalities, for instance, may cover the whole 
PM process, or just one or a few PM knowledge areas, or, 
more specifically, just some activities, for example, the 
tracking of work hours [11, 12]. The scope of the offered 
functionalities influences the usage of these tools for teaching, 
as they may restrict the addressed content. 
Beyond its functionalities, other characteristics may also 
influence the choice of a PM tool to be adopted for teaching. 
According to its characteristics, such a tool may require some 
particularities in the computational environment besides the 
need for economic investments. Among these characteristics 
are: availability, platform, and usage propose. 
The availability of PM tools may be proprietary (the use of 
a license or acquisition is mandatory and it is maintained 
exclusively by a single organization) or open-source (free 
usage and maintained by users community). Consequently, 
proprietary PM tools may be adopted only by organizations 
that are prepared to acquire its licence, while others may 
prefer to adopt as more low-budget alternative open-source 
tools. 
In terms of platform, there are available stand-alone tools 
(mono-user and accessed via desktop) or web-based systems 
(multi-user and accessed via web browser). In practice, a web-
based PM tool has to be used in order to properly manage a 
software project, as they allow collaborative work and sharing 
of information [4][5]. Thus, the teaching of these tools 
prepares the student better for a professional career [5]. 
However, the adoption of a PM web-based tool for educational 
proposes requires that this tool is installed on a web server that 
complies with the tool specification, and the students must 
have internet access. 
Beyond the generic PM tools, such as MS-Project or 
DotProject that are focused on the professional daily routine, 
there also exist educational PM tools, which focus on student 
learning, such as ProMES and PpcProject [10]. These tools 
include didactic features, such as instructions about the usage 
of its functionalities, and simulations that create scenarios that 
propitiate the application of specific PM techniques. 
C. Teaching of PM Tools 
The usage of PM tools is part of the project manager 
responsibilities [2]. The need for teaching this competency is 
addressed by the ACM/IEEE reference curriculum for 
Computer Science [13]. It specifies that students have to 
develop knowledge in all PM knowledge areas, and have to 
learn the usage of a PM tool to develop a project schedule, 
allocate resources, monitor the project, etc. Often the teaching 
of PM tools usage includes the application of the following 
techniques [2][7][10]: the Critical Path Method (CPM) – that 
identifies the project activities that cannot be delayed without 
affecting the project deadline; the Program Evaluation and 
Review Technique (PERT) – that calculates the estimated 
effort to carry out an activity based on three other estimates 
(worst case, most common case, and best case); the 
Responsibility assignment matrix (RACI Matrix) – that 
describes the participation by various roles in completing 
project activities; Resources Leveling – technique in which 
start and finish dates are adjusted based on resource constraints, 
185
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
with the goal of balancing demand for resources with the 
available supply; amongst others. 
III. 
RELATED STUDIES 
Several studies have presented comparisons of PM tools 
using different criteria for tools selection and evaluation 
[5][11][14][15][16]. 
Mishra et al. [14] compared 20 popular PM tools, 
presenting a brief description of each one and comparing 
them, based on criteria like platform, availability, and 
functionalities 
(e.g., 
resources 
management, 
schedule 
development, and earned value analysis). However, no PM 
tools selection criteria were presented. 
Dippelreiter et al. [15] presents the comparison of 4 
popular open-source PM tools that are adopted in industry, but 
again do not present selection criteria. The evaluation criteria 
were based on a set of functional requirements obtained after 
conducting interviews with project managers. Among these 
functional requirements are: project maintenance, contacts, 
activities, costs, documents download/upload, etc. 
Margea et al. [16] compares 9 PM tools, including 
proprietary and open-source, and also stand-alone and web-
based PM tools. Selection criteria were not presented. This 
study presents a description of each tool, including its main 
features and functionalities. Then, these tools are compared 
based on their platform and supported functionalities (e.g., 
resource management, risk analysis, schedule development, 
etc.). 
Cicibas et al. [5] presents a comparison of 10 PM tools, 
including proprietary and open-source tools, and stand-alone 
and web-based. They included tools that were subject of 
previous scientific studies, as well as to be popular in the PM 
community (based on forums, blogs, and non-official web 
sites).Besides these characteristics, the PM tools were 
compared based on their functionalities, including: schedule 
development, resource management, time tracking, change 
management, 
document 
management, 
risk 
assessment, 
collaboration, amongst others. These evaluation criteria are 
explained, describing the expected functionalities 
that 
characterize its attendance.  
Pereira et al. [11] presents a comparison of open-source 
PM tools. These tools were selected based on a systematic 
search in Sourceforge, the most relevant repository of open-
source tools, and the comparison criteria were based on a 
unified best practice of PMBOK [2] and CMMI-DEV [12]. 
This study has compared 5 PM tools, which are claimed to be 
the most relevant based on the defined criteria. For each PM 
tool the supported PM best practices are identified. 
Analyzing these comparisons we may conclude that 
currently there exist a wide variety of PM tools, and although 
they share some common features, their functionalities vary 
significantly. Thus, the PM process is partially supported by 
most of these tools and the choice of a PM tool may differ 
according to organization demands. However, before choosing 
a PM tool, it is important to know how to use its functionalities 
to support the PM process, hence, performing a conscious 
choice. Aiming to assist in the teaching of PM tools 
functionalities, some educational PM tools were developed, but 
no comparison with this specific focus has been encountered. 
In this context, the contribution of the work presented here lies 
in the analysis and comparison of relevant open-source 
educational PM tools. 
IV. 
TOOL ASSESSMENT 
The goal of this work is to present relevant educational PM 
tools and to assess their characteristics, educational features 
and functionalities. To systematically carry out the tool 
assessment, we adopted the following research process: 
(1) Selection of educational PM tools, based on previous 
researches that present these tools. 
(2) Definition of evaluation criteria with respect to the PM 
tools characteristics, educational features, and general 
functionalities. 
(3) Execution of the PM tools evaluation. 
(4) Analysis and interpretation of the collected data. 
This process has been conducted by a PhD student of the 
Graduate Program in Computer Science (PPGCC) of the 
Federal University of Santa Catarina/Brazil, and revised by a 
senior researcher with expertise in Software Process 
Improvement and Project Management. 
A. Tools selection 
Aiming at the selection of relevant educational PM tools, 
we based our selection on a previous research carried out by 
the authors, which performed a Systematic Literature Review 
on the teaching of the usage of PM tools [17]. Among the 
results of this study is the identification of educational PM 
tools adopted for teaching. In the current study we performed 
a deeper exploration of each PM tool, identifying when each 
of them may be adopted and creating a guideline to 
instructors, so they can choose which educational PM tool 
may be adopted according to their educational goals. 
Moreover, for this study we have updated the results found on 
[17], including new educational PM tools. 
In this context, the inclusion criteria for tool selection are: 
 
PM tool must include educational features; 
 
PM tool must be open-source; and  
 
PM tool must be available for download. 
The exclusion criteria are:  
 
The software must be a PM tool (not games, simulators 
or e-learning platforms); and 
 
The tool must be focused on “traditional” PM (e.g., 
excluding any tool focused exclusively on agile PM). 
This search, conducted in June 2015, returned a total of 10 
educational PM tools. Applying the defined inclusion and 
exclusion criteria, only 5 educational PM tools have been 
considered relevant in the context of our study. We excluded 
tools such as EduSet [18], CBT Module [19], and POM-QM 
[20], which appear to be no longer available. Other tools such 
as PSG [21] and PTB [22] were excluded because they are 
proprietary tools. These tools were excluded, as we aim at 
presenting only PM tools that currently may be adopted by 
instructors or researchers to assist in their activities. The 
selected educational PM tools are presented in TABLE II. 
186
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
TABLE II. SELECTED EDUCATIONAL PM TOOL. 
PM Tool 
Available for download at: 
DrProject [23] 
www.drproject.org 
PpcProject [10] 
http://code.google.com/p/ppcproject/ 
ProMES [24] 
www.simor.mech.ntua.gr/Kirytopoulos/promes.asp 
DotProject+ [25] 
http://www.gqs.ufsc.br/evolution-of-dotproject 
RESCON [26] 
http://www.econ.kuleuven.be/rescon/ 
B. Evaluation criteria 
Considering that only open-source educational PM tools are 
being evaluated, the evaluation criteria include the platform 
(stand-alone or web-based), educational features (aggregating 
all variations of educational features presented by the evaluated 
tools), PM techniques (that contains some educational support), 
and PM process coverage (in terms of knowledge areas and 
processes groups). These criteria are presented in TABLE III. 
TABLE III. EVALUATION CRITERIA. 
Description 
Items to be evaluated 
Platform 
Stand-alone or web-based. 
Educational PM 
features 
 
Scenarios to assist the application of specific PM 
techniques. 
 
Feedback when students make some wrong usage of 
PM tool. 
 
Hints to guide the student in the usage of PM tool. 
 
Problems to be solved and definition of difficulty 
level. 
 
Instructional materials to assist in the learning of PM 
tool usage. 
 
Communication channels between students and 
teacher 
PM techniques 
CPM, PERT, Resources Leveling, RACI Matrix. 
PM process coverage 
Knowledge 
areas 
Integration, scope, time, cost, quality, communication, 
human resource, risk, acquisition, stakeholders. 
Process Groups 
Initiation, planning, execution, monitoring & controlling, 
closing. 
For the evaluation of these criteria, only the functionalities 
that were presented by the authors of the PM tools were 
considered, excluding any undocumented functionality or 
extensions that may have been developed after their 
publication. 
V. 
RESULTS EVALUATION 
In this Section, we analyze each selected tool. The 
information presented for each tool include: its objective (for 
what it was designed), platform, a screenshot, main 
functionalities and educational features. 
A. DrProject 
DrProject (Figure 2) is a web-based PM tool, which was 
designed to assist students to understand the concept of a 
project and its lifecycle. It includes functionalities that assist 
the students to carry out an entire software project with team 
work, from its initiation to closure. Its main functionalities 
include features to assist team work, such as wiki, tickets, 
documents repository and mailing list. In addition, it also 
contains functionalities for definition of project activities and 
milestones. 
 
Figure 2. DrProject. 
The educational feature of this tool provides the instructor 
with a view of how students are performing at intermediate 
milestones. The forms were optimized to contain a minimum 
set of fields needed for didactic purposes, making it easier for 
students to understand the tool usage. The tool also provides 
administrative features that make it easier for the teacher to 
setup new projects and create new groups every term, thus 
reducing the time the instructor has to spend with 
administrative duties. 
B. PpcProject 
PpcProject (Figure 3) is a stand-alone tool that was 
developed to assist in the teaching of a PM tool with respect to 
CPM, PERT, and resources leveling techniques. This tool also 
has the goal to be at least comparable by students with other 
generic and proprietary tools, such as MS-Project.  
 
Figure 3. PpcProject. 
The main functionality of this tool is focused on the 
schedule development, thus, supporting activity definition and 
sequencing, estimation of resources and durations, besides 
schedule development (Gantt chart). 
The educational features are organized in three main 
modules: CPM, PERT, and Resource Allocation, which are 
the PM techniques this tool aims at teaching. The use of the 
CPM module is intended for students to deepen their 
understanding 
on 
the 
concepts 
of 
project 
activity 
decomposition, to analyze precedence relationships and to 
learn how to identify activities that cannot be delayed to 
achieve the expected completion date of the project, as well as 
to correctly interpret the Gantt chart. Using the PERT module 
students are expected to be able to calculate the project 
completion date in a probabilistic context and analyze the 
paths and critical activities during the project implementation. 
The Resources Allocation module includes features such as 
resources allocation, and identification of over allocated 
resources to apply resources leveling methods. By using this 
module, the students should be able to understand the 
influence of resource limitations on the project scheduling and 
propose alternative scheduling to improve resource usage. 
187
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
C. ProMES 
ProMES (Figure 4) is a stand-alone tool that was 
developed exclusively for academic purposes and aims at 
students to understand how CPM, PERT, and RACI are used, 
besides enhancing conditions for the acquisition of the 
required knowledge based on pedagogical approaches. 
 
Figure 4. ProMES. 
General functionalities include activity definition and 
sequencing, record estimations for effort, duration, and 
resources. The tool also supports the configuration of human 
resource roles and their allocation. 
The educational features of ProMES, include CPM, PERT, 
and RACI matrix techniques. This tool offers the students 
feedback through interaction with the system. When the 
student begins to solve a scenario (exercise), the system 
checks and displays in message style all the errors. The 
student may revise his/her thoughts and try another solution. 
This procedure continues until no errors can be identified by 
the system. So, the student learns how to use the tool through 
feedback and tool interaction. Another very important 
educational aspect of ProMES is the help offered to the novice 
student. When the student first accesses the tool interface, a 
demonstration of how the tool works is displayed. In addition, 
the tool also gradually increases the difficulty of the proposed 
scenarios. 
D. DotProject+ 
DotProject+ (Figure 5) has been developed to support the 
PM process to all knowledge areas for the initiation and 
planning processes groups. The educational goal of this tool is 
to assist the student to learn how to create a project charter and 
the project plan, supported by a PM tool. This tool is web-
based and it is an enhancement of the generic PM tool – 
DotProject. 
 
Figure 5. DotProject+. 
Its functionalities include all standard functionalities of 
DotProject core modules, e.g., schedule development, 
calendar, contacts list, forum, tickets, etc. It also contains 
several add-on modules to include functionalities to cover all 
knowledge areas, for instance, registration of risk analysis, 
planned 
acquisitions, 
quality 
control 
plan, 
project 
stakeholders, etc. 
Among the educational features, this tool includes 
instructional material, which explains the PM process and how 
it is supported by the tool‟s functionalities. Thus, it assists the 
student to conduct the PM process through learning the usage 
of a PM tool to support its execution. 
E. RESCON: Educational Project Scheduling Software 
The RESCON (Figure 6) is a stand-alone tool that focuses 
on the scheduling part of the PM process. It presents to 
students instances of the Resource-Constrained Project 
Scheduling Problem (RCPSP), that have to be solved with one 
of the many types of scheduling algorithms that are embedded 
in the educational PM tool. 
 
Figure 6. RESCON. 
The general functionalities are related to the schedule 
development, and also with the human resource profiles 
configuration and allocation. 
The educational features of this tool include the execution 
of CPM and the results of its execution are plotted with 
colored rectangles, which assist in the understanding of the 
related concepts, such as earliest and late possible start date, 
activity slacks and resources over allocation. The main 
educational feature of this tool lies in providing 48 kinds of 
188
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
algorithms to schedule development that may be executed and 
their results compared. 
VI. 
COMPARISON 
As part of the evaluation, we compare the support provided 
by the PM tools in relation to each evaluation criteria as 
presented in TABLE III. For the criteria related to PM tools 
platform, PM techniques and educational feature we used a 
nominal rating scale, indicating whether the PM tool contains 
or not a certain feature. For the criteria related to the PM 
process coverage we used a 4-point ordinal rating scale, rating 
the support level for each knowledge area or processes group 
as presented in TABLE IV. 
The results of the comparison of the educational PM tools 
are presented in TABLE V, where each PM tool is evaluated 
over the defined criteria (TABLE III) using the evaluation 
scales (TABLE IV). 
 
TABLE IV. SCALES FOR RATING THE EVALUATION CRITERIA. 
Nominal rating scale 
- 
The tool does not contain the feature. 
X 
The tool contains the feature. 
4-Points ordinal rating scale 
- 
The tool does not support the knowledge area or process group. 
* 
The tool supports minimally the knowledge area or process group. 
** 
The tool has a wide support for the knowledge area or process group, 
but it is not complete. 
*** 
The tool offers complete support for the knowledge area or process 
group. 
 
TABLE V. COMPARISON OF EDUCATIONAL PROJECT MANAGEMENT TOOLS. 
Evaluation Criteria 
Educational PM Tools 
DrProject 
PpcProject 
ProMES 
DotProject+ 
RESCON 
Platform 
Stand-alone 
- 
X 
X 
- 
X 
Web-based 
X 
- 
- 
X 
- 
PM techniques (with educational support) 
CPM 
- 
X 
X 
- 
X 
PERT 
- 
X 
X 
- 
- 
Resource Leveling 
- 
X 
- 
- 
- 
RACI Matrix 
- 
- 
X 
- 
- 
Educational features 
Scenarios to assist the application of specific PM techniques. 
- 
X 
X 
- 
X 
Feedback when students make wrong usage of PM tool. 
- 
X 
X 
- 
- 
Hints to guide the student in the usage of PM tool. 
- 
X 
X 
X 
- 
Problems to be solved and definition of difficulty level. 
- 
X  
X  
- 
- 
Instructional materials to assist in the learning of PM tool usage. 
- 
- 
- 
X 
- 
Communication channels between students and teacher 
X 
- 
- 
- 
- 
PM process coverage 
Knowledge Areas 
Integration 
* 
- 
- 
*** 
- 
Scope 
* 
- 
- 
*** 
- 
Time 
* 
*** 
*** 
*** 
*** 
Cost 
- 
- 
- 
*** 
- 
Quality 
- 
- 
- 
** 
- 
Communication 
** 
- 
- 
** 
- 
Human resource 
* 
** 
** 
*** 
** 
Risk 
- 
- 
- 
*** 
- 
Acquisition 
- 
- 
- 
** 
- 
Stakeholder 
** 
- 
- 
*** 
- 
Processes Groups 
Initiation 
* 
- 
- 
*** 
- 
Planning 
** 
** 
** 
*** 
** 
Execution 
* 
- 
- 
** 
- 
Monitoring and Controlling 
* 
- 
- 
** 
- 
Closing 
* 
- 
- 
*** 
- 
 
189
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
VII. DISCUSSION 
Analyzing the educational PM tools it is observed that only 
a few tools were developed with that propose, when compared 
with the wide variety of existing generic PM tools. Overall, we 
can observe that each tool is able to assist in the teaching for 
the purpose it was designed. However, considering the 
complete PM process, most tools have targeted only a specific 
part of this process and have included some educational 
feature to assist the students to understand this part and how it 
may be supported by PM tools functionalities. 
Regarding the educational features presented by the 
analyzed tools, it was observed that these functionalities vary 
according to the educational goals. When the tool aims to 
teach the usage of a certain functionality, it presents 
instructions to demonstrate how to operate the software. Some 
tools present these instructions dynamically, depending on the 
student interaction with the tool. Some tools also present some 
usage guide to demonstrate how and when the PM tool 
functionalities may be utilized. When the goal is to teach the 
project 
life 
cycle, 
the 
PM 
tool 
typically 
includes 
functionalities for students to carry out a project from its 
initiation to closure, providing communication mechanisms 
between team members and the teacher. 
With respect to the adopted platform, it was observed that 
the tools, which focused on the teaching of PM process are 
web-based. This is due to the fact that such a platform is more 
suitable to the process application in organizations, supporting 
multi-user accesses and information sharing among project 
stakeholders. These educational PM tools are closer to the real 
environment the students are going to face on real life 
projects. Considering the stand-alone PM tools, we can 
observe that they give support to just a few PM techniques. 
The adoption of this kind of platform may be justified when 
demanding a more complex user interface, using many charts 
and dynamic interactions, which may be easier to be 
developed on such platform. 
The PM techniques that are usually taught through 
educational PM tools are CPM, PERT, RACI matrix, and 
resources leveling. The CPM technique is taught through 
different approaches. The ProMES tool requests the students 
to identify the critical activities analyzing the activity 
precedence diagram. The PpcProject tool requests the students 
to identify the critical activities by calculating its floats. The 
PERT method is taught in a similar way by most tools, 
requesting the student to enter her/his estimations for project 
execution and the three scenarios (best case, most common, 
and worst case), and then presenting the calculation for the 
PERT method. The RACI matrix is taught by ProMES only, 
allowing the students to assign responsibility, accountability, 
and consultancy, as well as to designate the representative who 
must be informed for each project activity. The Resources 
leveling technique is explicitly taught only by PpcProject, 
which imposes limits to the allocation of a certain resource, 
with the student having to find alternatives to develop the 
project schedule within the defined constraints. Both RACI 
matrix and resources leveling are also supported by 
DotProject+, but in this tool the student learns how to use it by 
instructions contained in the tool usage guide. 
In this context, it becomes evident that the part of the PM 
process mostly addressed includes the knowledge areas time 
and HR, especially for the planning process group. An 
exception is the PM tool DotProject+, in which the PM 
process support stands out from the others, being is an 
enhancement of one of most popular open-source generic tools 
for PM. Hence, its functionalities are inherited, and gaps were 
filled by the addition of add-on modules. Some other tools 
also present specific exceptions, for instance, DrProject has a 
wide support for project communication, including support for 
document repository, wiki, and mailing lists, and also presents 
at least a minimum support to all processes groups. 
Based on this analysis and comparison, we may identify 
when each of these PM tools may be more suitable for 
teaching. In situations when the educational goal is related to 
the teaching of specific PM techniques such as CPM, 
PpcProject, ProMES, or RESCON may be adopted. These 
tools provide scenarios that make it possible for the students to 
apply these techniques, and also evaluate the correctness of 
their answers, besides providing some feedback and 
explanations that make the teaching of these techniques easier. 
Specifically for teaching the PERT technique, both PpcProject 
and ProMES may be adopted. However, the resources 
allocation process is only partially supported by different 
tools. The PpcProject assists in the resource leveling 
technique, and ProMES assists in the creation of the RACI 
matrix. When intending to have support to all these techniques 
in a single tool, DotProject+ is an option. However, the 
instructor has to adopt some instructional method to teach 
these techniques, as even though DotProject+ supports all 
these functionalities, it does not contain many dedicated 
educational features to assist the students. 
Nevertheless, when the educational goal is to teach about 
the PM process, DrProject and DotProject+ should be adopted. 
DotProject+ gives a wider support to the PM process than 
DrProject, providing the students with the opportunity to learn 
how to use several functionalities dedicated to all knowledge 
areas, such as risks, acquisition, quality and others, which are 
not covered completely by DrProject. Thus, it is important to 
understand that each educational PM tool has its own purpose. 
But the complexity of the usage of a PM tool is still not 
completely covered by any of the analyzed tools. So, it is 
important to know which tool may be suitable for each 
situation, according to the educational goals. 
A. Threats to Validity 
Several potential threats may have reduced the validity of 
the results of our work. The first threat we have identified is 
the existence of educational PM tools, which were not found 
by this research. This may occur when some PM tool was 
developed, but not published. However, we minimized this 
risk by basing our search on earlier and related work and 
performing an broad search on this topic. 
Another threat to this research is the personal opinion of 
the authors by extracting the evaluated characteristics. To 
minimize this risk we considered only functionalities and 
190
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
educational features that were documented. Thus, it is possible 
that some PM tool contains some additional feature or 
functionality that is not documented, which thus was not 
included in our analysis. 
Our specific focus on open-source educational PM tools 
may also represent a threat. As a consequence we excluded 2 
proprietary tools, PSG and PTB, which claim to have many 
interesting educational features, such as simulations, that 
propitiate the student to have ideal scenarios to learn about 
project monitoring and controlling. However, these tools are 
not fully available to be adopted by instructors or researches 
without additional expenses. 
VIII. CONCLUSIONS 
This research aims at the comparison of educational PM 
tools that are openly available, identifying their characteristics, 
educational features, and supported functionalities. To reach 
this goal, educational PM tools were selected based on results 
derived from a Systematic Literature Review. Each selected 
PM tool was analyzed. The analysis describes each evaluated 
tool and presents a discussion of when each of these tools is 
more suitable to be adopted for teaching. 
Hence, despite the efforts, it is evidenced that there is no 
tool that is complete enough to attend all educational demands, 
and it still is necessary to adopt a set of tools, according to the 
part of the PM process it aims at teaching. Future work may 
suggest enhancements on some educational PM tool to include 
support to all knowledge areas and process groups, expanding 
the educational features and then covering the gaps still 
existing in the teaching of the usage of PM tools. 
ACKNOWLEDGMENT 
This work was supported by the CNPq (Conselho Nacional 
de Desenvolvimento Científico e Tecnológico – www.cnpq.br), 
an entity of the Brazilian government focused on scientific and 
technological development. 
REFERENCES 
[1] The Standish Group, Chaos Manifesto 2013, Boston, 2013. 
[2] PMI – Project Management Institute, A Guide to the Project 
Management Body of Knowledge, 5. ed., Newtown Square, 2013. 
[3] M. Keil, A. Rai, and J. Mann, “Why software projects escalate: The 
importance of project management constructs,” IEEE Transactions on 
Engineering Management, vol. 50, n.3, 2003, pp. 251–261. 
[4] R. Fabac, D. Radoševic, and I. Pihir, “Frequency of use and importance 
of software tools in project management practice in Croatia,” In: Proc. of 
32nd Int. Conf. on Information Technology Interfaces, Cavtat, 2010, pp. 
465 -470. 
[5] H. Cicibas, O. Unal, and K. Demir, “A comparison of project 
management software tools (PMST),” In: Proc. of the 9th Software 
Engineering Research and Practice, Las Vegas, 2010. 
[6] T. Lethbridge, J. Diaz-Herrera, R. Leblanc, and J. Thompson, 
“Improving software practice through education: Challenges and future 
trends,” In: Proc. of Future of Software Engineering, Minneapolis, 2007, 
pp. 12-28. 
[7] Ž. Car, H. Belani, and K. Pripužić, “Teaching Project Management in 
Academic ICT Environments,” In: Proc. of the Int. Conf. on computer as 
a tool, Warsaw, 2007, pp. 2403 - 2409. 
[8] L. Spencer, and S. Spencer, Competence at Work: Models for Superior 
Performance, 1st ed. John Wiley & Sons, 1993. 
[9] O. Ojeda, and P. Reusch, "Sustainable procurement - Extending project 
procurement concepts and processes based on PMBOK," In: Proc. of 7th 
International Conference on Intelligent Data Acquisition and Advanced 
Computing Systems, Berlin/Germany, 2013, pp. 530 – 536. 
[10] L. Salas-Morera, A. Arauzo-Azofra, and L. García-Hernández, 
“PpcProject: An educational tool for software project management,” 
Computers & Education, vol. 69, n. 1, 2013, pp. 181-188. 
[11] A. Pereira, R. Gonçalves, and C. Wangenheim, “Comparison of open 
source tools for project management,” International Journal of Software 
Engineering and Knowledge Engineering, vol. 23, n. 2, 2013, pp. 189-
209. 
[12] C. Wangenheim, J. Hauck, and A. Wangenheim, “Enhancing open 
source software in alignment with CMMI-DEV,” IEEE Software, vol. 
26, n. 2, 2009, pp. 59-67. 
[13] ACM, and IEEE Computer Society, Computer Science Curricula 2013, 
2013. 
[14]  A. Mishra, and D. Mishra, “Software Project Management Tools: A 
Brief Comparative View,” ACM SIGSOFT Software Engineering Notes, 
38 (3), 2013, pp. 1-4. 
[15] B. Dippelreiter. “A „state of the art‟ Evaluation of PM – Systems 
exploring their missing Functionalities,” In: Proc. of the 5th Int. Conf. 
on Project Management", Tokyo, 2010, pp. 90-101. 
[16] R. Margea and C. Margea. “Open Source Approach to Project 
Management Tools.Informatica Economică”, vol. 15, n. 1, 2011, pp. 
196-206. 
[17] R. Gonçalves, and C. Wangenheim. “How to Teach the Usage of Project 
Management Tools in Computer Courses: A Systematic Literature 
Review,” In: Proc. of the Int. Conf. on Software Engineering and 
Knowledge Engineering, Pittsburgh, 2015, pp. 36 - 41. 
[18] J. C. Spicer. “A spiral approach to software engineering project 
management education,” ACM Sigsoft Software Engineering Notes 
8(3), 1983, pp. 30–38. 
[19] D. Pfahl, M. Klemm, and G. Ruhe, “A CBT module with integrated 
simulation component for software project management education and 
training,” Journal of Systems and Software, vol. 59, n. 3, 2011, pp. 283–
298. 
[20] H. Ku, R. Fulcher, and W. Xiang, “Using computer software packages to 
enhance the teaching of engineering management science: Part 1 - 
Critical path networks,” Computer Applications in Engineering 
Education, vol. 19, n. 1, 2011, pp. 26-39. 
[21] M. Vanhoucke. “The Project Scheduling Game (PSG): Simulating 
Time/Cost Trade-Offs,” In Projects. Project Management Institute, vol. 
36, n. 1, 2005, pp.51-59. 
[22] A. Shtub. “Project management simulation with ptb project team 
builder,” Proceedings of the 2010 Winter Simulation Conference, 
Baltimore, 2010, pp. 242-253. 
[23] K. Reid, and G.Wilson. “DrProject: A Software Project Management 
Portal to Meet Educational Needs,” In: Proc. of the Special Interest 
Group on Computer Science Education, Covington, 2007, pp. 317-321. 
[24] G. Gregoriou, K.Kirytopoulos, and C. Kiriklidis, “Project Management 
Educational 
Software 
(ProMES),” 
Computer 
Applications 
in 
Engineering Education, vol. 21, n. 1, 2010, pp. 46–59. 
[25] R. Gonçalves,. E. Kühlkamp, and C. Wangenheim. “Enhancing 
dotProject to Support Risk Management Aligned with PMBOK in the 
Context of SMEs,” International Journal of Information Technology 
Project Management, vol. 6, n. 2, 2015, pp. 40-60. 
[26] F. Deblaere, E. Demeulemeester, and W. Herroelen. “RESCON: 
Educational project scheduling software,” Computer Applications in 
Engineering Education, vol. 19, n. 1, 2009, pp.327-336. 
191
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

