Teaching Networking: A Hands-on Approach that Relies on Emulation-based 
Projects
António Nogueira, Paulo Salvador 
DETI - University of Aveiro/Instituto de Telecomunicações 
Aveiro, Portugal 
e-mail: {nogueira,salvador}@ua.pt
 
 
Abstract—Computer networking is an inescapable reality of 
our days, being part of the curricula proposed by almost all 
universities. Effective learning and teaching of networking, 
however, require students to gain hands-on experiences in 
developing projects, which will help them to understand basic 
concepts as well as the strengths and limitations of the 
technology. At our university, we devised a new approach to 
teach networking concepts by requiring students to develop 
emulation-based 
projects 
in 
parallel 
with 
traditional 
theoretical classes and practical classes involving real 
networking equipment. The effectiveness of this teaching 
methodology was evaluated formally by the students’ opinions 
and classification marks, and informally, in discussions within 
the teaching team. This paper describes the global philosophy 
behind this new teaching methodology, as well as its 
implementation approach and obtained results. The evaluation 
results that were achieved, representing a clear improvement 
of past results, allow us to conclude that the proposed 
approach is very promising. In fact, the emulation-based 
hands-on approach is able to motivate students and smooth 
their learning curve since they are close to reality and, at the 
same time, have the freedom to work everywhere at anytime 
and are free from boring physical connectivity problems. 
Keywords-Practical teaching; networking project; emulation; 
GNS3. 
I. 
 INTRODUCTION  
Computer networking became an indispensable part of our 
daily life. Many books have been written on this topic, 
which is being taught in both undergraduate and graduate 
level courses. Although students learn a lot of concepts in 
traditional courses, they do not have enough hands-on 
experience with real networks or in-depth understanding of 
how things work in practice. In order to circumvent these 
shortcomings, many universities developed lab-based 
networking courses [1][2][3], which are very useful to teach 
concepts but are not able to cover as much material as 
traditional courses due to the lack of time and resources. 
Most of the times, these labs do not scale to hundreds of 
students. Besides, in the austerity days we are facing it is 
very difficult to buy expensive networking equipment in 
order to equip one or several functional laboratories.  
Therefore, we need to design new networking 
experiments that are focused on teaching essential 
networking topics, while taking availability of resources 
into account. Simulation and emulation seem to be good 
compromises between the need to use virtual environments 
and the connection to the real world that should not be 
broken. There are several networking software tools that can 
be used to analyze, emulate and simulate computer 
networks. Among the different possibilities, Graphical 
Network Simulator, version 3 (GNS3) was the chosen 
emulation environment [14]; it is basically a hardware 
emulator (called a hypervisor) that creates a virtual 
environment on a host computer (running Windows, Linux 
or Mac). By running Cisco Internetwork Operating System 
(IOS) software on the hypervisor, the student can create 
complex networking scenarios with the real look and feel of 
hardware devices because he is interacting with the real IOS 
that is running on virtualized routers. 
Based on this rationale, we devised a new approach to 
teach networking concepts by requiring students to develop 
emulation-based projects in parallel with traditional 
theoretical classes and practical classes involving real 
networking equipment. In this paper, we describe our 
experience of introducing an emulation-based project as a 
key pedagogical method for teaching advanced computer 
networks 
in 
a 
specific 
course, 
named 
Networks 
Architecture, which belongs to the third year of the 
undergraduate level. A three-threaded teaching approach 
was adopted for this course, comprising: (i) theoretical 
classes; (ii) practical classes, where real networking 
equipment is used and (iii) a network project that allows 
students to gain practical experience and a deeper 
understanding of the key concepts of network protocols and 
technologies.  
The lecture and practical threads use face-to-face 
teaching, group work and discussion, allowing a deep 
interaction between students and teachers. In the network 
project, students are typically organized in groups of two 
people and have several tasks to accomplish ”after hours”: 
after designing and dimensioning a medium to large size 
corporate network, they have to configure and test it in 
GNS3.  
The effectiveness of this teaching approach was 
extensively evaluated, formally by the students’ opinions 
and classification marks and informally in discussions 
within the teaching team. The quite good evaluation results 
that were achieved, particularly when compared to results 
from previous years, allowed us to conclude that this 
approach is very promising. The hands-on approach is very 
important to motivate students, because they can “feel” the 
network and, at the same time, have the freedom to work 
149
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

everywhere, anytime, and get rid of the cables and 
connectivity problems.  
The remaining part of the paper is organized as follows: 
Section II discusses some teaching issues that should be 
taken into account when planning a computer networking 
course; Section III briefly discusses some relevant network 
simulation and emulation tools; Section IV presents the 
network project that was designed, including its description, 
tasks and resolution strategy; Section V presents the most 
relevant outcomes; finally, Section VI presents the main 
conclusions. 
II. 
TEACHING ISSUES 
Besides the continuous changing nature of computer 
networking and the heterogeneity in students’ backgrounds, 
there are some other obstacles of teaching and learning this 
subject. First of all, the underlying principles are complex 
and very abstract to many students (they do not find an easy 
connection to reality).  
Besides, the layered approach that is frequently adopted 
is considered inadequate by most of them, since there is not a 
clear identification of the functionalities of the different 
layers, as well as a clear separation between them.  
Since most students lack practical experience, they have 
difficulties to understand common networking problems and 
overcome difficulties. Providing a hands-on practical 
experience to students is also problematic because some 
academic environments do not have the adequate resources. 
Networking labs are still quite expensive. 
The sequence of subjects’ coverage can also affect 
learning. Traditionally, top-down [4] and bottom-up [5] 
approaches have been intensively used, both on Computer 
Science and Engineering courses. However, a non-linear 
path on the coverage sequence seems to be the best choice in 
most situations. 
In order to address some of these concerns, we changed 
the pedagogical approach that was usually followed in the 
Networks Architecture course by introducing an emulation-
based project in parallel with traditional theoretical and 
practical classes. Besides the two hours/week theoretical 
classes and the three hours/week laboratorial classes (where 
students interact with real networking equipment), the 
network project adds two more hours/week to the course 
workload in order to allow students to gain a deeper 
understanding of the key concepts of network protocols and 
technologies. The project is developed by groups of two 
students and spans from the first to the last week of the 
course (usually, this period corresponds to 15 weeks). The 
project evaluation is based on a practical demonstration and 
an oral examination (so, group elements can get different 
marks) and the obtained mark has a weight of 40% in the 
global course mark (the weights of the theoretical exam and 
the lab activities are equal to 40% and 20%, respectively). 
III. 
NETWORK SIMULATION AND EMULATION TOOLS 
The deployment of real networks is not practical and can be 
really expensive depending on the size of the network and 
the number of computers, routers, switches or other network 
devices that have to be used. Nowadays, there are many 
software tools that can be used to perform network 
simulation and some of them can recreate exactly any detail 
of a real network. This allows an easy network deployment, 
with the benefits of saving space, money and time.  
A. Network Simulator 
Network Simulator (NS), developed by research laboratories 
and top research universities and funded by National Science 
Foundation (NSF), has been the major software simulation 
tool for network research for more than 20 years. Its most 
popular version, NS2, is a discrete-event simulator in which 
the routing algorithms are written in C++ as pre-built into the 
library, while events are configured using OTcl language [6]. 
Due to the unpopularity and the slow learning curve of OTcl, 
NS is seldom used in classroom teaching.  
The last version of NS, NS3 [7], is under the General 
Public License (GPL) and provides free download of its 
source codes. The core of NS3 is written in C++ and has a 
Python scripting interface. Protocol entities are designed to 
be closer to real computers and NS3 includes support for 
virtualization, using lightweight virtual machines [7]. 
B. OMNeT++ 
Similarly to NS2 and NS3, OMNeT++ is also a public-
source, component-based network simulator with Graphical 
User Interface (GUI) support [8]. Its primary application area 
is communication networks. OMNeT++ has generic and 
flexible architecture, which makes it successful also in other 
areas like Information Technology (IT) systems, queuing 
networks, 
hardware 
architectures, 
or 
even 
business 
processes. 
OMNeT++ components are called modules and are 
programmed in C++. The components are then assembled 
into larger components and models by using a high-level 
language. The simulation kernel can be embedded into all 
kinds of different users’ applications.  
C. OPNET 
OPNET is the commercial counterpart of NS [9]. It has a 
rich set of modelers that support the latest wireless and 
emerging network technologies. The user friendly interfaces 
are intuitive to use for creating network topologies, 
configuring and simulating network traffics, and collecting 
and visualizing data. The OPNET IT Guru academic version 
is free for teaching and research in academia. Many 
universities are adopting OPNET in teaching general 
networking courses because it has intuitive user interfaces 
and lab manuals for popular textbooks. 
Both NS and OPNET are excellent tools for conducting 
research or teaching general network concepts. However, 
their configuration process is very different from the real-
world networking or security devices that are dominated by 
Cisco appliances. 
150
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

D. Cisco Packet Tracer 
Cisco Packet Tracer is a network simulation software 
developed by Cisco to support its Networking Academy 
Program. This software provides visual network simulation 
and allows creating networks with an almost unlimited 
number of devices. The configuration of the network devices 
is made through a command-line interface, similarly to real 
equipment. It also provides tables, diagrams and other visual 
representation and offers a multiuser functionality that 
permits multiple users to work on the same project through 
the Internet [10].  
Packet Tracer has two operation modes: the real-time 
mode that shows how real devices behave and the immediate 
network response to any network change; the simulation 
mode, which is directed to background concepts and allows 
controlling time intervals, data transfer rates and bandwidth 
and manipulate the propagation of data packets through the 
network. This software supports the possibility of inserting 
interface cards into modular routers and switches, creating 
virtual networks over real ones.  
The most important limitations of Packet Tracer are 
related to its performance and to the lack of support for some 
important advanced networking mechanisms and protocols. 
E. NetSim 
Network Simulator (NetSim) is a Cisco network simulator 
developed by Boson, a company that provides material to 
prepare students for IT certification exams from Cisco, 
Microsoft CompTIA, and others [11]. It uses the Boson’s 
proprietary Network Simulator, Router Simulator and 
EROUTER software technologies to simulate a real network 
and is available on three different versions, each one with 
specific 
characteristics 
and 
directed 
to 
a 
different 
certification.  
NetSim supports up to 42 routers and 6 switches, on a 
total of 200 devices on the network. It simulates network 
traffic using virtual packet technology and provides Telnet or 
Console modes to interact with the network devices. This 
software is not open-source, which is a clear handicap for 
educational purposes. 
F. Graphical Network Simulator v3 
GNS3 [12] was introduced many years ago, when an open-
source hypervisor called Dynamips was written to emulate 
Cisco routers. Dynamips was intended to emulate Cisco IOS 
hardware and was fairly complicated to use. So, a GUI was 
added to manage the process of the hypervisor, which is 
exactly what is called GNS3. So, GNS3 is the front-end for 
multiple hypervisors, including Dynamips and Qemu, with 
the latter being used to emulate hardware used by the Cisco 
Adaptive Security Appliance (ASA) firewall. 
While Dynamips is responsible for the back-end 
operation of emulating routers with real IOS images, GNS3 
uses Dynagen as the text-based front-end to establish 
communication with Dynamips [12]. GNS3 also supports 
other machine emulators and virtualizers like Qemu [16], 
Virtualbox [17] or Pemu [18]. This allows a user to simulate 
networks with a wide diversity of devices, like Cisco ASA 
and Private Internet eXchange (PIX) firewalls, Cisco IPS, 
Juniper routers or hosts (based on different operating 
systems, like Linux, Windows, MacOS X).  
So, GNS3 affords anyone with a computer a way to 
practice network topologies. But it goes beyond that: users 
can quickly set up routers and firewalls, using simple drag-
and-drop actions on the screen. It is easy to add Ethernet 
connections between devices or add hardware modules to 
routers in the virtual GNS3 topology for more complex 
network designs. 
Another relevant advantage of GNS3 is the possibility of 
connecting the virtual network to the real world, with real 
devices, besides the ability to perform packet capture and 
analysis using Wireshark [13].  
Layer 2 Ethernet switching inside of a GNS3 topology is 
limited to the switchport modules that can be added to the 
virtual routers inside GNS3, which do not support the full 
layer 2 switching capabilities that a physical switch would 
provide.  
GNS3 also has some other limitations: its throughput is 
limited to 1000 packets per second in the virtual 
environment, it can consume a large amount of real and 
virtual memory and it can achieve high Central Processing 
Unit (CPU) usage levels [14]. Although GNS3 already 
includes some tools to prevent this memory and CPU usage 
levels, we should always take into account that the higher the 
number of routers and network devices, the higher will be 
the consume [15]. 
In summary, we can say that, in spite of these limitations, 
GNS3 is one of the most valuable tools for practicing, proof-
of-concept design, protocol analysis and verification.  
IV. 
NETWORK PROJECT 
In order to address the different topics of the Networks 
Architecture course, we devised a network project that could 
be solved incrementally and whose solution could be 
implemented in GNS3. In line with the course objectives, the 
most relevant topics that should be studied and implemented 
in this project are: definition of Virtual Local Area Networks 
(LANs), Internet Protocol, version 4 (IPv4) and IPv6 
addressing, 
internal 
routing based on 
the 
Routing 
Information Protocol (RIP), RIP next generation (RIPng), 
Open Shortest Path First, version 2 (OSPFv2) and OSPFv3 
routing protocols, multicast routing, Quality of Service 
(QoS) mechanisms, IPv4/IPv6 transitions mechanisms, 
Internet Protocol Security (IPSec), Access Control Lists 
(ACLs) and network management based on scripting. 
A. General Problem Description 
Let us suppose that we want to design, implement and test 
the communications infrastructure of a medium to large size 
company. We will start by presenting the problem 
enunciation that was proposed to students of the Networks 
Architecture course. 
Company Example, Inc. has a strong Research and 
Development (R&D) component and will expand its 
facilities in Aveiro (currently, they are composed by a single 
building), with two new three-floor (adjacent) buildings. The 
company will also create two new branches, one in Lisbon 
and another in San Jose, California. The old Aveiro network 
151
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

should not be changed, but its connectivity with the new 
buildings and with the Internet should be assured.  
The first floor of each building is reserved for the 
production zone; the second floor of the first building is 
reserved for sales and client support and the last floor of the 
first building is reserved for the administration offices; floors 
2 and 3 of the second building are reserved to R&D. 
Let us suppose that each production floor has: (i) 12 
production points (machines/robots), (ii) 3 technical 
verification 
zones 
(machines/terminals), 
(iii) 
a 
meeting/reception room and (iv) a videoconference room. 
The sales and client support floor has: (i) 50 sales rooms, (ii) 
2 meeting rooms to contact clients via videoconference and 
(iii) 50 workplaces for client support. Each R&D floor has: 
(i) 20 laboratories, each with at least 8 workplaces, (ii) 4 
rooms reserved to engineering development, (iii) a lounge 
top workers/visits. The administration floor should support 
20 persons and includes 2 videoconference rooms. 
At the Lisbon and San Jose branches, the company will 
have single 2 floor buildings, with the first floor being 
reserved for R&D laboratories (25 researchers per lab) and 
the second floor being reserved for local administrative 
services (15 persons).  
The company will have communication services (data, 
voice and video) implemented over IP, as well as a video-
surveillance system and 3 internal Internet Protocol 
Television (IPTV) channels.  
Finally, the company has two datacenters (services and 
storing) in Aveiro and San Jose that will support the different 
activities: administration/planning (management archive), 
R&D (scientific archive and data processing) and public 
services to employees and general community via Internet. 
B. Objectives 
For the three new networks of the Example, Inc. branches, 
students have to:  
• 
Present the Open Systems Interconnection (OSI) 
Layer 2 networks subdivision (VLANs design). 
• 
Define the public IPv4 addressing scheme (assuming 
that the company owns network 193.2.2.0/24 in 
Portugal and network 195.1.1.0/26 in the USA) and 
the private IPv4 scheme and the respective 
translation mechanisms.  
• 
Define the IPv6 addressing scheme (assuming that 
the company owns network 2002:C:C::/48 in 
Portugal and network 2001:F:F::/48 in the USA). 
• 
The company has two Internet access contracts with 
Portuguese ISPs PT1 and PT2 for the Aveiro and 
Lisbon sites, respectively.  
• 
All network sites should include a wireless network 
divided in two distinct VLANs, with distinct 
permissions. All network sites should also have 
internal IPTV channels. We can assume that each 
site has its own independent multicast video server.  
• 
ISP PT2 does not support IPv6 addressing/routing. 
Propose and implement a solution that allows full 
IPv6 connectivity between the Portuguese network 
sites of the company in case of a complete failure of 
ISP PT1 (the default IPv6 connectivity provider).  
• 
In order to guarantee the confidentiality of some 
communications, students should configure a Virtual 
Private Network (VPN) IPSec between the company 
sites and define the respective routing policies (i.e., 
which traffic should be transported by the VPN). 
Besides, they should configure a secure connection 
between the old and the new datacenters in the 
Aveiro site.  
• 
Based 
on 
the 
underlying 
structure 
and 
configurations, students should define and configure 
mechanisms of traffic differentiation that implement 
the QoS policies that are necessary for the network 
services in operation. 
• 
Students should also develop a scripting system that 
can be used to support network monitoring and 
management. In a first phase, the system should 
identify all network equipments (routers and 
switches), their interfaces and the corresponding link 
loads. 
C. Specific Tasks 
In order to achieve the above mentioned goals, students have 
to perform several specific tasks: 
• 
Design the logical network architecture and the 
corresponding physical mapping.  
• 
Define the characteristics/capabilities of the different 
network equipments.  
• 
Define the (virtual) local networks.  
• 
Define the IPv4 and IPv6 addressing schemes.  
• 
Make some extra definitions (like for example 
budget, non-network equipments, etc.).  
• 
Configure the access layer and define the 
interconnection/addressing 
of 
the 
terminal 
equipments.  
• 
Configure the IPv4 unicast routing. 
• 
Configure the IPv6 unicast routing. 
• 
Implement 
private 
addressing 
translation 
mechanisms.  
• 
Configure the multicast IPv4 and IPv6 routing.  
• 
Implement QoS policies.  
• 
Configure the IPv4/IPv6 transition mechanisms.  
• 
Configure internal secure connections and external 
secure connections between branches (as well as the 
corresponding routing mechanisms).  
• 
Write monitoring scripts (in bash language).  
• 
Perform some extra configurations (control access 
rules, 
Dynamic 
Host 
Configuration 
Protocol 
(DHCP) server, user VPN server, etc.).  
Although these tasks can be solved in a slightly different 
order, students should be aware that some of them are 
dependent on others. So, this list of tasks is given to students, 
in order to guide them in their starting efforts. 
D. Resolution Strategy 
As happens in most situations, the best strategy to solve 
this exercise is to split it into sub-exercises.  
 
152
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

 
Figure 1.  
Network topology for the Aveiro site. 
 
Actually, this approach has two main advantages: each sub-
problem is easier to address and the computational resources 
that it will require (using GNS3) are substantially lower than 
the resources that would be needed to solve the complete 
problem.  
So, the first step should be to look at each company site, 
designing, configuring and testing its own network. 
Following this approach, Figs. 1, 2 and 3 illustrate the 
topologies of the networks that could be designed for the 
Aveiro, Lisbon and San Jose sites, respectively. In this 
design phase, a correct definition and dimensioning of the 
access, distribution and core layers is crucial for the 
remaining phases of the project. In this phase, the students, 
usually, interact a lot with their teachers in order to find the 
best solution. After this effort, the definition of the different 
VLANs and the addressing issues are the most relevant 
topics that have to be addressed. 
These high-level networks (corresponding to the 
company sites) are implemented and tested separately in 
GNS3: obviously, a last experiment should be dedicated to 
the interconnection of these networks, where each one 
corresponds to the communications infrastructure of a 
different company site.  
On the other hand, the students must also specify the 
design and implementation details of the network 
corresponding to each floor, which were represented as 
generic clouds in the higher level network diagrams of Figs. 
1, 2 and 3. As an example, Fig. 4 presents the network 
topology for the Research floor infrastructure. Quite similar 
topologies should be designed for the other floors.  
Besides specifying the network equipments (type, model, 
characteristics, number of the interfaces, interfaces types, 
etc.), students have to present and discuss the network 
topology of these lower level networks. Obviously, this 
refinement process should be repeated until the desired level 
of detail is achieved. 
After completing the design and dimensioning phases, 
the project enters in the implementation phase: here, all 
network connections, equipments, configuration details, 
GNS3 performance mechanisms (like the Idle PC feature), 
should 
be 
conveniently 
addressed. 
Troubleshooting 
methodologies are crucial in this phase. Usually, this phase 
also implies a lot of interaction between students and 
teachers. 
Finally, the testing phase is used to validate the 
implemented network(s), eventually changing some of the 
decisions that were previously taken. So, this is a closed-loop 
process that can go through several iterations. 
153
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

V. 
EVALUATION 
The effectiveness of the three-thread teaching approach was 
evaluated in several ways: informally, in discussions within 
the teaching team, and formally by the students’ opinions 
and classification marks.  
Regarding the first evaluation criteria, the merits of this 
teaching methodology were consensual among the teaching 
team. Actually, everyone felt that students were more 
engaged with the course and spent a higher number of hours 
studying and working on these networking topics. So, the 
satisfaction degree of the teaching team was quite high. 
The students’ opinions were obtained through a written 
questionnaire that is part of the Quality Assurance Plan of 
our university. The most important results obtained are the 
following: the global satisfaction with the course was rated 
by students with 7.11 out of 8, while the appropriateness of 
the proposed activities to the course objectives was rated 
with 7.38 out of 8. These results are generally very good, and 
when compared to the results obtained for the same items in 
the previous Academic year of 2012 (6.68 and 7.02, 
respectively), allow us to conclude that a very positive 
evolution was achieved. 
 
 
Figure 2.  
Network topology for the Lisbon site. 
Finally, we should look at the course classification 
marks. Figures 5 and 6 show the marks obtained in 2012 
and 2013, respectively, for a total number of students equal 
to 54 in 2012 and 50 in 2013. The number of students that 
failed in this course decreased from 25.93% in 2012 to 
10.00% in 2013. This is a very relevant result, since we 
were able to substantially increase the success rate of this 
course. If we look at the average mark obtained by well-
succeeded students, we can see that it increased from 12.1 
(out of 20) in 2012 to 12.53 in 2013. Although only two 
students were able to achieve a classification of 17 (Very 
Good) in 2013, the most important slice of students was 
able to reach a quite satisfactory mark of 13 out of 20. 
 
Figure 3.  
Network topology for the San Jose site. 
 
Figure 4.  
Network topology for the Research floor 
of the Aveiro site. 
Regarding the marks that were obtained in the emulation- 
based project itself, we can say that they were quite high: 
with few exceptions, all students were able to obtain marks 
of 16 and higher (out of 20), marks that are typically higher 
than the ones they are able to obtain in the theoretical exam. 
This is clearly related to the practical nature of this 
component and to the interest that this type of work clearly 
induces in students. 
The quite good results that were achieved in the different 
evaluation criteria, particularly when compared to the results 
from the previous year (where no project was proposed to 
students), allow us to conclude that this multi-thread 
teaching approach is very promising. 
154
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

 
Figure 5.  
Classification results of the Networks 
Architecture course - 2012. 
 
Figure 6.  
Classification results of the Networks 
Architecture course – 2013 
The hands-on approach promoted by face-to-face lab 
classes and emulation-based networking projects is very 
important to motivate students, because they can “feel” the 
network and, at the same time, have the freedom to work 
anytime and everywhere and get rid of the cables and 
connectivity problems. 
VI. 
CONCLUSIONS 
This paper describes our experience of introducing an 
emulation-based project as a key pedagogical method for 
teaching advanced computer networks. A three-threaded 
teaching approach was adopted in a third-year undergraduate 
course, comprising theoretical classes, practical classes 
involving real networking equipment and a network project 
that allows students to gain practical experience and a deeper 
understanding of the key concepts of network protocols and 
technologies.  
The effectiveness of the used teaching approach was 
evaluated 
formally 
by 
the 
students’ 
opinions 
and 
classification marks and informally through discussions 
within the teaching team. The quite good evaluation results 
that were achieved, particularly when compared to results 
from previous years, allowed us to conclude that the 
proposed approach is very promising. In fact, the hands-on 
approach can motivate students because they are more 
engaged to reality but, at the same time, have the freedom to 
work everywhere and do not suffer from physical 
connectivity problems.  
ACKNOWLEDGMENT 
This work was supported by Fundação para a Ciência e a 
Tecnologia (FCT) of Portugal, under the auspices of project 
PEst-OE/EEI/LA0008/2013. 
REFERENCES 
[1] D. E. Comer, “Hands-On Networking with Internet 
Technologies”, Prentice Hall Inc., 2002. 
[2] W. J. Dewar and S. S. Sethi, “A Laboratory for Teaching 
Computer Networks”, IEEE Transactions on Education, vol. 
38, no. 2, 1995, pp. 145-149, doi: 10.1109/13.387216. 
[3] M. El-Kharashi, G. Darling, B. Marykuca, and G. C. Shoja, 
“Understanding and Implementing Computer Network 
Protocols Through a Lab Project”, IEEE Transactions on 
Education, vol. 45, no. 3, 2002, pp. 276-284, doi: 
10.1109/TE.2002.1024621.  
[4] J. Kurose and K. Ross, “Computer Networking: A Top-Down 
Approach Featuring the Internet”, Second Edition, Addison 
Wesley Longman, 2003. 
[5] A. Tanenbaum, “Computer Networks”, Fourth Edition, 
Prentice Hall PTR, 2003. 
[6] NS2, “NS2 official website”, [Online]. Available from: 
http://www.isi.edu/nsnam/ns/ [Retrieved: April 2014]. 
[7] NS3, “NS3 official website”, [Online]. Available from: 
http://www.nsnam.org/documents.html 
[Retrieved: 
April 
2014]. 
[8] OMNeT, “OMNeT++ official website”, [Online]. Available 
from: http://www.omnetpp.org/ [Retrieved: April 2014]. 
[9] OPNET, “OPNET Modeler”, [Online]. Available from: 
http://www.opnet.com/ [Retrieved: April 2014]. 
[10] Cisco Systems, “Cisco Networking Academy”, [Online]. 
Available 
from: 
http://www.cisco.com/web/learning/netacad/index.html. 
[Retrieved: April 2014]. 
[11] Boson, “Netsim – Network Simulator”, [Online]. Available 
from: http://www.boson.com/netsim-cisco-network-simulator 
[Retrieved: April 2014]. 
[12] J. Harry, “Using the GNS3 Network Simulator”, [Online]. 
Available from: http://www.trainsignal.com/blog/using-gns3-
network-simulator [Retrieved: April 2014]. 
[13] Wireshark, 
“Wireshark”, 
[Online]. 
Available 
from: 
http://www.wireshark.org/ [Retrieved: April 2014]. 
[14] GNS3, “Introduction to GNS3”, [Online]. Available from: 
http://www.gns3.net/documentation/gns3/introduction-to-
gns3/ [Retrieved: April 2014]. 
[15] GNS3, 
“Memory 
and 
CPU 
Usage”, 
http://www.gns3.net/documentation/gns3/memory-and-cpu-
usage/ [Retrieved: April 2014]. 
[16] QEMU, “QEMU – Open Source Processor Emulator”, 
[Online]. Available from: http://wiki.qemu.org/ [Retrieved: 
April 2014]. 
[17] VirtualBox, 
“VirtualBox”, 
[Online]. 
Available 
from: 
https://www.virtualbox.org/ [Retrieved: April 2014]. 
[18] PEMU, 
“PEMU 
– 
Free 
Cisco 
PIX 
Firewall 
Emulator/Simulator”, 
[Online]. 
Available 
from: 
https://www.fir3net.com/Cisco-PIX [Retrieved: April 2014]. 
155
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

