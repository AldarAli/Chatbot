 Ontology-based Architecture for Reusing and Learning Through Context-aware 
Annotations Memory 
 
Nadia Aloui/University of Sfax 
MIRACL Laboratory 
Sfax, Tunisia 
Aloui_nadia@gmail.com 
 
Faiez Gargouri/ University of Sfax 
MIRACL Laboratory 
Sfax, Tunisia 
faiez.gargouri@isimsf.rnu.tn 
 
 Abstract— This paper describes a conceptual model and an 
ontology-based framework for reusing and learning through 
context-aware annotations memory. This memory manages 
annotations and adapts actors (learner, tutor, teacher, and co-
author) behaviours with the various contexts of their activities. 
It offers a great reutilisability to share and have a better 
quality of learning. The annotation model that we propose is 
composed of three facets: cognitive, semantic and contextual. 
The architecture of our annotations memory contains many 
modules based on Web Services. This facilitates its integration 
with the other tools used by the actors of a computer 
environment for human learning like, for example, the e-
Learning platforms and annotations tools.   
 
Keywords - CEHL; context-aware; annotation; adaptation; 
learning. 
I. 
 INTRODUCTION 
Teachers, tutors or co-authors, during their activities of 
teaching, as well as learner, during its training, in a 
Computer Environment for Human Learning (CEHL), 
manage a significant number of learning objects to support 
their activities. These objects are most of the time in 
numerical format. In order to memorize the learning objects 
elements,, these actors create, on the objects, different type 
of annotations, in order to re-use them like a working 
memory. Each actor thus, constitutes an external memory for 
his learning and teaching activities. 
The external memory created, is composed of all learning 
objects and their annotations. It allows the teacher, for 
example, to memorize an idea to find it, thereafter, in a fast 
way, or to create an annotation in a context and to re-use it in 
another context. This external memory is useful and 
exploitable for all the actors of a computer environment for 
human learning; it must be well structured according to the 
semantics of the used annotations and to adapt them to the 
current context of the actor’s activity. Thus, it will make it 
possible, for each actor of a CEHL to exploit in a fluid way 
its annotations. 
In this work, we propose a new general architecture of 
the adaptive annotations memory with a detailed description 
of the functionalities offered by each module of the 
architecture of ontology-based framework for reusing and 
learning 
through 
context-aware 
annotations 
memory 
(OARLCAM). This architecture is based on a context meta-
model and an annotation meta-model. The first one 
represents the learning context of the various actors of the 
annotations memory. The annotation meta-model describes 
the semantics of the annotation to be able to re-use them, 
share them and learning from knowledge included in these 
annotations according to a pedagogic objective. 
This paper is organized as follows. The first section 
presents our research field. The second section exposes our 
research problematic by explaining the need for an adaptive 
memory of annotations for the different actors of a CEHL 
and by pointing out the basic concepts used. In the third 
section, we present the state of the art of the related 
approaches to our research by showing their advantages and 
their limits. In the fourth section, we propose and describe 
the architecture OARLCAM conceived to solve the whole of 
the released limits. 
II. 
BASIC CONCEPTS AND PROBLEMATIC 
The various actors of a CEHL find difficulties to create 
and consult the annotations associated to learning objects, 
during their learning activities. Generally, they use manual 
annotations which are very difficult to manage, to exploit, 
capitalize and share. These actors annotate in a different 
ways the learning objects according to their training 
activities and their learning goals. For this purpose, the 
existence of an annotations memory is necessary for these 
various actors. Indeed, it allows the automatic management 
of all these annotations making possible their capitalization 
and sharing. It is a learning based on annotations affixed by 
the various actors according to a particular learning context 
and a special learning objective. The numerical annotations 
constitute an added value for the learning objects. They add 
knowledge to the original contents of these objects. 
By re-using the annotations stored in the memory 
annotations, a teacher for example, can re-use these 
annotations and those of the co-authors with the knowledge 
witch contains to  improve his process of  teaching and to be 
able to teach in a best way a given learning object.          
He can also profit from all the critical, explanatory and 
prescriptive annotations posted by the tutors to improve the 
contents of the learning object and thus the quality of the 
training. He can even recover the learner’s annotations and 
take them into account to add explanations to the learning 
object. A learning object can be annotated several times, in 
different contexts, in different places and moments and by 
heterogeneous tools. Then, it quickly becomes illegible at the 
time of its consultation. On another side, the actor of a 
154
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

CEHL creates an annotation, in a given context, to re-use it 
in another context. 
As a result, of these two remarks, we think that an 
annotation meta-model is essential to unify the various 
annotations produced by the actors. Moreover, it must be 
able to adapt itself to the context which surrounds the 
activity of annotation. Before presenting our architecture, we 
briefly expose the basic concepts, around our research. 
A.  Annotation 
The state of the art relieves several definitions of the 
Annotation concept. The most adapted to our work was 
given by Mille [13], who considers an annotation as being “a 
trace of the activity of the reader, perceptible on a document 
as a mark, placed with a specific aim, and in a specific place 
of which it cannot be dissociated”. In fact, the annotation 
object belongs to the document. An annotation has an 
objective that is well defined, because the annotator does 
not annotate for nothing, but for an essential goal. 
According to this definition an annotation is regarded at 
the same time as an object and an activity [1]. An activity of 
creation of the annotation object aims to realise a user 
objective in the learning object. 
B. Context and Context-awareness 
According to the dictionary free on-line dictionary,Howe 
[8], the context is all that surrounds and gives a meaning to 
another thing. In this case, a definition of the context cannot 
be given in an isolated way without taking into account the 
element concerned with the context. This definition shows 
that the context must be external to the element concerned 
with this context. 
A formal definition for the context is given by Azouaou 
and Desmoulins [1] as follows: 
 
The context of an element X is the whole of properties P 
of any element of Y such as: 
Y is around X. 
Y gives meaning to X. 
P is relevant for X. 
 
In the literature, we find several definitions of context-
awareness (conscience of the context). Schilit and Theimer 
[15] define the conscience of the context as being all the 
applications adapted to the context. Another definition given 
by Dey [5] specified that a system is considered as context-
awareness, if it uses the context to give relevant information 
or a service to a user, knowing that the relevance depends on 
the activity of the user. 
In addition, Context-awareness emerged in the fields of 
mobile and pervasive computing like a technique to design 
applications with a conscience of the environment, to ensure 
high level autonomy and flexibility. The context-awareness 
or the conscience of the context is known under other 
synonyms like adaptive or reactivate [4]. 
C. Personalization and of Adaptation of the CEHL 
In order to be able to start the reflexion on the adaptation 
and personalization, we start by defining these two concepts. 
The personalization of information consists in providing 
to one learner a relevant information equivalent to its 
preferences and its needs [3].  
The adaptation is a transformation of an organization (or 
a genetic material…) in order to give it more adequacy with 
a new environment (a natural environment, a new political 
situation, a technology…) stimulating this adaptation. More 
particularly, in the context of adaptation of one system to the 
user, this generic term includes two specificities: adaptability 
and adaptivity. 
In this way, Moisuc [14] explains, “the adaptability is the 
capacity of the system to adapt to the personalizations 
explicitly requested by learner for example, while adaptivity 
indicates its capacity to meet the needs for learner without 
his explicit intervention”. 
 From this definition, we understand that the adaptation, 
whatever static (adaptability) or dynamic (adaptivity), 
requires a recognition of the learning context in order to be 
able to adapt the training according to the context and the 
learning objective. 
The following section presents researches related to our 
problematic. 
III. 
APPROACHES RELATED TO OUR RESEARCH TASKS 
During last years, several researches were carried out to 
delimit the needs of CEHL actors and to recense the main 
elements helping to develop e-learning systems better 
adapted to their trainings and their needs.  
Although they are diversified, those researches do not 
take into account the capitalization of the learning 
experiments which can be exploited later by other actors. In 
fact, we think that the major stake of e-learning is to 
integrate an approach to re-use the learning annotations 
within a CEHL 
A. Adaptation Approaches and personalized e-Learning 
systems 
In the last decades, the scientific researches were oriented 
to the adaptation and the personalization of the HMI, in 
particular in the CEHL field. Indeed, several researches 
support the personalization in this field to guarantee a better 
satisfaction of learning. 
One approach consists to allow teachers to make 
scenarios for all the learner’s uses possible of the system. A 
teaching scenario describes goals and learning situations 
while defining how the learning objects will be implemented 
in a precise context of training [10]. However, the teaching 
scenarios help the teachers to integrate the CEHL into their 
work practices, but do not allow creating sequences of 
activities adapted to each learner’s competences. 
A second approach of Duclosson, Daubias, and Riot [6] and 
Leroux [12] devotes a part of the e-learning system to be 
personalized by the teacher. Thus, teachers can parameterize 
the generation of the activities or select the activities which 
are appropriate for their learner. This personalization is done 
manually by the teacher, without bond with possible learner 
profiles, and can’t be considered as based on a generic or 
unified model. In fact, each teacher can use several e-
155
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

learning systems and must control several environments of 
personalization to succeed in defining in each case his 
teaching choices. Moreover, teacher himself needs to profit 
from its experiments and those of the other teachers, in 
addition to the tutor ones. We notice that this second 
approach is interested just in the training of learners and is 
not based on models. 
A third approach consists in personalizing the e-learning 
systems automatically so that their contents are adapted to 
knowledge of each learner. This personalization can 
progressively be made throw the learners’ answers (as a 
result to their behaviours) and uses the stereotypes associated 
to the learners [7] or using the learner model according to the 
e-learning systems. This automatic personalization is adapted 
to the system’s knowledge about learner but is not always 
adapted to the teacher’s learning goals. 
Each one of these approaches answers part of the 
problem, but does not provide a solution to the whole: the 
adaptation of CEHL to the activities of the teachers and the 
adaptation of their contents to each one of their learners [11]. 
We present, in the following, some examples of projects 
working on the adaptation and the personalization in the e-
learning systems. 
B. Approaches of annotations memories in e-learning 
The recent work on the annotations memories, Ouadah, 
Azouaou and Desmoulins [9] propose an annotation tool 
context-aware for an external annotations memory for the 
teacher. “We are based on two architectures to propose the 
general architecture of our adaptive annotations tool. This 
tool must be able to identify the current context of teacher’s 
activity in order to adapt to his behaviour and the changes of 
its situations of activity”. 
This approach supports the teacher at his annotation 
activity to re-use it in another context. However, it is not an 
annotations memory for a general learning. Indeed, it can be 
integrated into an annotation tool and not into a computer 
environment for human learning. In addition, it is dedicated 
to only one actor who is the teacher. 
In this way, we deduce the lack, in the literature, of an 
adaptable approach for the training of all CEHL actors based 
on annotations according to a given context. 
IV. 
GENERIC ARCHITECTURE BASED ON WEB SERVICES  
In our work, we propose an approach to mitigate the 
limits illustrated above by introducing a personalized 
learning architecture based on annotations (experience 
feedback). This ontology-based architecture OARLCAM 
makes possible to capitalize and re-use a collective 
annotations memory for training. Its main goal is to provide 
all actors with a best training relative to their learning 
objectives and the current context extracted from the 
annotations memory, the learning objects warehouse or both. 
Such a system can be used as an assistance for the original 
authors, co-authors, tutors and learners. 
Our contributions can be presented as follows: i) 
modelling the semantic of various annotations used in CEHL 
by a top level ontology, ii) modelling the various contexts of 
training by a context top level ontology and iii) proposing the 
approach 
OARLCAM 
to 
automatically 
exploit 
this 
knowledge to generate the learning objects with an added 
value of annotations adapted and personalized. 
The following figure presents our modular architecture.  
 
 
Figure 1.  Our approach OARLCAM 
 
This modular architecture is based on a context-aware 
approach 
coupled 
to 
some 
ontological 
engineering 
techniques in order to build a learning annotations memory, 
unified by an annotation top level ontology and a context top 
level ontology for an appropriate learning for all actors. It 
allows associating the adequate annotations with the 
appropriate learning object according to learning objective in 
a given context in order to improve the educational content 
and to activate the training process. 
This architecture OARLCAM assures the reuse, the 
adaptability and the interoperability between our framework 
and the various tools used by the various actors, whom can 
use it as an external memory. 
Our architecture includes three subsystems : i) the 
subsystem of contextualisation, containing the modules of 
context capture, context handling, context server, context 
156
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

presentation and a context top level ontology of training ii) 
and the learning subsystem, containing the modules of 
learning objects management, learning objects composer and 
follow-up of the training;  and iii) the annotation subsystem, 
containing the annotation module, the annotations’ manager, 
the annotations’ adapter, the annotation top level ontology, 
the annotations’ presentation module and the annotations 
warehouse, for later re-uses. The following sections describe 
the modules of the architecture. 
A.  Subsystem of contextualisation 
1)   The context capture module: The capture of the 
context is carried out using a whole of services which 
interact with sources of context (operating system, learning 
objects manager, organizer, etc…). This interaction can be 
made in a direct way if context information is accessible, or 
in an indirect way thanks to an export operation of context 
from the context source and an import of these data on the 
level of this module. 
2)    The context handling module: Context informations, 
provided by the context capture module, are treated 
according to our context top level ontology in order to be 
stored in the context server. This treatment consists in 
making a mapping between data types of the context source 
and our context model. 
3)   The context server module: The context informations 
are stored in XML format in order to facilitate their sharing 
and their use by the adaptive application and to keep the 
contexts history. 
4) The context presentation module: context information 
is presented using the Web services standards (the details of 
this presentation are not in this paper). Each Web service 
can be consumed by other applications to be adapted to their 
context. This module is a service which gives information 
about the current context to the annotations’ adapter module, 
knowing that those informations are extracted from the 
context server. 
5) The context top level ontology module. It is a generic 
and exhaustive context ontology which provides the 
proprieties of context related to learning provided by our 
annotations  memory. 
The context top level ontology is conceived to solve the 
limits and the insufficiencies of the existing context models.  
For a given learning objective and a given context, we must 
extract the adequate annotations from the annotations 
memory. We use then a mapping method for determining the 
similarities between a learning context (context top level 
ontology), annotation semantics (annotation top level 
ontology). The annotation top level ontology contains three 
facets: cognitive, semantic and contextual. On another side, 
the context top level ontology contains six facets. Four of 
these facets (user, activity, environnement, collaboration) 
where defined by [9]. We add two more facets composition 
and objective to have an exhaustif context model which take 
to account the context of reuse of learning and learning 
objective. 
6)   Algorithm of similarities between different contexts: This 
algorithm aims to determinate similarities between different 
contexts of reuse of learning annotations; we take into 
account both semantic and structured similiraties between 
the concepts of ontology concepts. For example, the 
concepts of context ontologies of learning : context 1 
ontology and context 2 ontology of learning. The algorithm 
below describes the process to find similarities between 
contexts : 
 
Algorithm: Similarities  
INPUT : 
1) CO1 and CO2: Context Ontology 1 and Context Ontology 2   
2) VSS:  Semantic vector of similarities  
3) VSSt  : structural  vector of  similarities 
4) SimSt  : Weight of structural similarities 
5) SimS  : Weight  of semantic similarities 
OUTPUT : VSG :  global (Semantic and structural) vector of  
similarities 
Begin 
 /*  go to each  concept of  context ontology 1 */ 
For   each ( CCO1 εCO1) do  
/*   go to each concept of  context ontology 2 */ 
For   each  (CCO2 εCO2) do 
 If  CCO1.type==CCO2..type  then 
/*Extract semantic similarities  between CCO1 and CCO2 of 
VSS*/ 
 SimS=EXTRACTSIM (VSS, CCO1, CCO2) 
 /*Extract  structural  simiraties de CCO1et CCO2 of VSSt */ 
SimSt=EXTRActSIM (VSSt, CCO1, CCO2) 
/*calculate global similarity*/ 
SimG = SimS + SimSt 
 /* Add CCO1, CCO2 and SimG  in VSG*/ 
Add ((CCO1, CCO2, SimG), VSG) 
Return (VSG) 
END 
 
The proposed algorithm of similarities has as input the 
two ontologies of context 1 and context 2, the two vectors of 
semantic and structural the similarities (VSS, and VSST), as 
well as the weights related to the semantic and structural 
similarities (SimS and SimSt). It produces in result a vector 
of global similarity, VSG. The function EXTRACTSIM 
extracts the value of the similarity corresponding to the two 
concepts (CCO1 and CCO2) from the vector of similarity 
(VSS or VSST). For each couple of concepts, CCO1 and 
CCO2, having  the same category of two context ontologies , 
CO1 and CO2, the global similarity is calculated as follows:  
 
SimG (CCO1; CCO2) = SimS (CCO1; CCO2) + SimSt (CCO1; 
CCO22) 
 
B. Subsystem of the learning objects management 
1) The learning objects management module: This 
module is used to create, to add, to remove, and to modify 
learning objects. 
2) The learning objects composer module: This module 
serves to compose the learning objects with existing 
annotations for a given learning objective and a given 
context. 
157
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

3)   The follow-up of the training module: This module 
serves to save the learning activities history of our 
architecture’s actors 
C. Subsystem of annotation 
1) The annotation module: This module allows actors to 
add an annotation according to our annotation top level 
ontology. 
2)  The annotations’ manager module: This module 
manages the annotations affixed according to our annotation 
tool, for example, to add, to modify or to remove an 
annotation. 
3)   The adapter annotations’ module:  This module 
adapts the annotations stored in the annotations warehouse 
according to the context of training (objective) provided by 
the service of context presentation. This service has also as a 
role to provide the result of the adaptation for the services of 
learning objects composer to combine them with these 
objects (annotations source) or to provide them directly to 
the annotations’ presentation module (the result of the 
request). For example, one learner during his revision wants 
to extract from a learning object all the explanatory 
annotations related to this object (in an explanatory context). 
He also wants that this annotation will be posted only during 
its next envisaged revision in a given day and a given hour. 
In this case, the service of annotation checks the properties 
of the context provided by the context services and posts the 
annotation only if the context is verified. 
4)   The annotation top level ontology module: It is a 
generic and exhaustive annotations ontology which provides 
the semantics of different learning annotations. We develop 
this ontology to mitigate the various insufficiencies in the 
state of the art. 
5)    The annotations’ presentation module: This module 
presents, for the architecture various actors, the annotations 
adapted to the learning context. These annotations are 
treated to be adequate to the actors’ requests and their 
learning objectives. 
D. Communication between the various modules with XML 
The use of the Web services to publish the context data 
facilitates the interoperability of our framework with any 
application sensitive to the context. On another side, XML 
is currently the standard language used for the data 
exchange on the Web. For this reasons we adopt it for the 
exchange of the data between all the modules composing 
our architecture. In the same way, the communication 
between the various services is done using the SOAP 
protocol which is based on XML. 
E. Illustrative scenario 
This section gives an illustrative example of our 
architecture’s use. One learner at the time of its revision for 
an examination of the first session, for example, wants to 
recover all the explanatory and analytical annotations 
relating to a given learning object. He then makes training 
from our system by specifying its learning objective and its 
learning activity (examination). This learning is located in a 
C1 
context 
(learning 
objective=revision, 
pedagogic 
activity=examination, date=d1, hour=h1, place=p1, learning 
domain= data bases) and this learning can be re-used by the 
same learner or another actor in a C2 context. For example, 
a preparation context of a part of learning object by one 
teacher (learning objective= course conception, pedagogic 
activity=course preparation, date=d2, hour=h2, place=p2, 
learning domain=data bases). 
Thus, the training provided to this learner through our 
framework must be adapted according to his context and his 
learning objective. 
Then we note that, the same learner can re-use the same 
context C1 another time for its next planned revision. For 
example, if the properties values of the learning contextual 
facet are (date=15/11/2010, learning objective =revision, 
pedagogic activity =examination), learner specifies also the 
context of re-use of these annotations, for example, for the 
final examination, by choosing directly the next context C2 
(date=15/01/2011, learning objective =revision, pedagogic 
activity =examination). Automatically, the 15/01/2010, 
during the nearest examination, the annotation is posted for 
learner, to remind him his second revision. 
 
 
Figure 2. Reuse of context 
 
In fact, our framework is able to provide a re-use on two 
levels. The first re-use (and sharing) is of annotations as 
well as the knowledge which is included there. The second 
re-use concerns the context. It means that a given context is 
reused in another context covering the same contextual 
properties and stored in the context server for a several re-
uses later by the same actor or others. 
158
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

Moreover, the annotations can be presented with or 
without their learning objects. In the first case they can be 
used to obtain an added value for the learning objects 
(learning objects composed with annotations). In the second 
case, they constitute an important knowledge to be 
capitalized.  
V. 
CONCLUSION AND FUTURE WORKS 
This paper represents a preliminary study to realize an 
adaptive annotation memory for context-aware training for 
the various actors in a CEHL. This memory can satisfy the 
need for training according to a given objective and a given 
context of all the actors in terms of utility, re-use, sharing 
and adaptability. 
The running mechanism of our framework articulates 
around a whole of modules. Each module allows a 
functional need well defined and is composed of Web 
services. This framework aims to facilitate its integration, its 
interoperability with other e-learning systems.  Moreover, it 
is based on three independent but communicating 
subsystems. The first is a subsystem for the training context 
capture, its treatment, its storage and its sharing by context 
sensitive applications. The second subsystem is devoted to 
the management and the adaptation a given annotation, from 
annotations memory, to the captured context. The third 
subsystem is planned for the management and the 
composition of the learning objects with the annotations 
extracted by the second subsystem. 
Several perspectives are possible for this work. In 
particular, we aim to use the techniques of data warehousing 
(wrapper, monitor, etc.) to extract annotations from the 
annotations data bases and warehouses relative to other e-
learning tools. Thesis extracted annotations will be total 
forwarded to our annotations memory according to our 
annotation top level ontology. 
Also, we think that adding an ontology for the automatic 
deduction of the context annotation reuse, deduced for each 
actor, would be an important enrichment to our architecture 
and its functionalities. 
REFERENCES 
 
[1] F. Azouaou and C. Desmoulins: Taking Teaching Context 
into Account for Semantic Annotation Patterns. EC-TEL 
2006,  pp. 543-548,  last access date 12.02.2011. 
[2] D. Mille, Modèles et outils logiciels pour l’annotation 
sémantique 
de 
documents 
pédagogiques. 
Thèse., 
in 
Département informatique. 2005, Université Joseph-Fourier : 
Grenoble. last access date 09.02.2011. 
[3] A. Anli, C. Kolski, and M. Abed, Principes et architecture 
pour la personnalisation d'information en interaction homme-
machine, Application à l'information transport, IHM, 
Toulouse, pp. 123-130, 2005, last access date 10.01.2011. 
[4] T. Chaari and F. Laforest LIRIS, L’adaptation dans les 
systèmes d’information sensibles au contexte d’utilisation: 
approche et modèles. Conference Genie Electrique en 
Informatique, Sousse, Tunisie ; 2005, pp. 56-61 last access 
date 02.02.2011., 
[5] A. Dey, Providing Architectural Support for Building 
Context-Aware Applications, in College of Computing. 2000, 
Georgia Institute of Technology, pp 23-35, last access date 
05.01.2011. 
[6] N. Duclosson, S. Jean-Daubias, and S. Riot, AMBRE-
enseignant : un module partenaire de l’enseignant pour créer 
des problèmes, EIAH'2005, Montpellier, 25-27 mai 2005, pp. 
353-358, last access date 04.02.2011. 
[7] S. Girard and H. Johnson, DividingQuest : opening the learner 
model to teachers, EIAH'2007, Lausanne, 27-29 juin 2007, 
pp. 329-334, last access date 05.02.2011. 
[8] D. Howe,  Free online dictionary of computing. London, UK, 
Imperial College Departement of Computing, last access date 
12.02.2011. .  
[9] A. Oouadah, F.  Azouaou, and C.  Desmoulins, Modèles et 
Architecture d’une Mémoire d’Annotation context-aware 
pour l’Enseignant. 2ème conférence internationale  sur 
l’informatique et ses applications, CIIA09, 03-04 Mai 2009, 
Saida, Algérie, last access date 10.02.2011. 
[10] A. Lejeune and J.-P. Pernin, A taxonomy for scenario-based 
engineering, CELDA 2004, Portugal, pp. 249-256, last access 
date  05.02.2011. 
[11] M. Lefevre, S. Jean-Daubias, and N. Guin. Personnaliser des 
séquences de travail à partir de profils d'apprenants, EIAH 
2009, Le Mans, 23-26 juin 2009, pp. 1136-1141, last access 
date 04.02.2011. 
[12] P. Leroux, Machines partenaires des apprenants et des 
enseignants – Étude dans le cadre d'environnements supports 
de projets pédagogiques. Habilitation à Diriger des 
Recherches, Université du Maine, 2002, last access date 
06.02.2011. 
[13] D. Mille, Modèles et outils logiciels pour l’annotation 
sémantique 
de 
documents 
pédagogiques. 
Thèse., 
in 
Département informatique. 2005, Université Joseph-Fourier : 
Grenoble, last access date 24.12.2010. 
[14] B. Moisuc, Adaptation dans les systèmes d’information 
spatio-temporelle 
interactifs, 
INFORSID, 
Hammamet, 
Tunisie, 2006, last access date 25.12.2010. 
[15] B.N. Schilit and M.N Theimer. Disseminating active map 
information to mobile hots, IEEE Network, 8(5), pp. 22-32, 
1994, last access date 28.12.2010.
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
159
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

