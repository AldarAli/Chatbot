Mining Interesting Contrast Sets
Mondelle Simeon
Robert J. Hilderman
Howard J. Hamilton
Department of Computer Science
University of Regina
Regina, SK Canada S4S 0A2
{simeon2m, hilder, hamilton}@cs.uregina.ca
Abstract—Contrast set mining has been developed as a
data mining task which aims at discerning differences across
groups. These groups can be patients, organizations, molecules,
and even time-lines. A valid contrast set is a conjunction of
attribute-value pairs that differ signiﬁcantly in their distri-
bution across groups. The search for valid contrast sets can
produce a prohibitively large number of results which must
be further ﬁltered in order to be examined by a domain
expert and have decisions enacted from them. In this paper, we
introduce the notion of the minimum support ratio threshold
to measure the ratio of maximum and minimum support across
groups. We propose a contrast set mining technique to discover
maximal valid contrast sets which meet a minimum support
ratio threshold. We also introduce ﬁve interestingness measures
and demonstrate how they can be used to rank contrast sets.
Our experiments on real datasets demonstrate the efﬁciency
and effectiveness of our approach, and the interestingness of
the contrast sets discovered.
Keywords-contrast set mining; group differences; data mining.
I. INTRODUCTION
Discovering the differences between groups is a funda-
mental problem in many disciplines. Groups are deﬁned by
a selected property that distinguish one group from the other.
The search for group differences can be applied to a wide
variety of objects such as patients, organizations, molecules,
and even time-lines. The group differences sought are novel,
implying that they are not obvious or intuitive, potentially
useful, implying that they can aid in decision-making, and
understandable, implying that they are presented in a format
easily understood by human beings. It has previously been
demonstrated that contrast set mining is an effective method
for mining group differences from observational multivariate
data [1] [2] [3] [4] [5].
Existing contrast set mining techniques can produce a pro-
hibitively large set of differences across groups with varying
levels of interestingness [2] [5]. For example, suppose we
want to ﬁnd out which demographic and socio-economic
characteristics differentiate between women who use short-
term, long-term, or no contraceptive methods. We could use
data, as shown in Table I, with ﬁve such characteristics: wife
currently working, husband currently working, has children,
has high standard of living, and has high media exposure,
where 1 indicates the characteristic is true, and 0 that it is
Table I
SAMPLE DATASET
wife
husband
has
has high
has high
currently
currently
children
standard
media
working
working
of living
exposure
TID
A
B
C
D
E
1
1
0
1
1
1
2
0
1
1
0
1
3
1
1
0
0
1
4
0
0
1
1
1
5
1
1
1
1
1
· · ·
· · ·
· · ·
· · ·
· · ·
· · ·
768
0
0
0
1
1
false. There are 30 possible combinations of characteristics
that differentiate between the women, however, they are not
all equally interesting. For instance, assume we found that all
the women who are working and have high media exposure
use either short-term or long-term methods whereas those
who are not working and do not have high media exposure,
are equally likely to use either a short-term, long-term or
no contraceptive method. Perhaps then, we could use the
former result in a media marketing campaign targeted to
that speciﬁc group of women, while the latter result which
is less conclusive, is considered “uninteresting”. We propose
using a measure, called the minimum support ratio threshold,
to discover “interesting” group differences during the search
process.
The remainder of this paper is organized as follows. In
Section II, we brieﬂy review related work. In Section III,
we describe the correlated contrast set mining problem. In
Section IV, we provide an overview of the search framework
for contrast set mining. In Section V, we introduce our
algorithm for mining contrast sets that meet our minimum
support ratio threshold. In Section VI, we present a summary
of experimental results from a series of mining tasks. In
Section VII, we conclude and suggest areas for future work.
II. RELATED WORK
The STUCCO (Search and Testing for Understandable
Consistent Contrasts) algorithm [1] is the original technique
for mining contrast sets. The objective of STUCCO is to ﬁnd
statistically signiﬁcant contrast sets from grouped categorical
data. It employs a modiﬁed Bonferroni statistic to limit Type
14
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

I errors resulting from multiple hypothesis tests. In other
work, STUCCO forms the basis for a method proposed to
discover negative contrast sets [6] that can include negation
of terms in the contrast set. The main difference is their use
of Holm’s sequential rejective method [7] for the indepen-
dence test.
The CIGAR (Contrasting Grouped Association Rules)
algorithm [2] is a contrast set mining technique that specif-
ically identiﬁes which pairs of groups are signiﬁcantly
different and whether the attributes in a contrast set are
correlated. CIGAR utilizes the same general approach as
STUCCO, however it focuses on controlling Type II errors
through increasing the signiﬁcance level for the signiﬁcance
tests, and by not correcting for multiple comparisons. Like
STUCCO, CIGAR is only applicable to discrete-valued data.
Contrast set mining has also been applied to continuous
data. Early work focussed on the formal notion of a time
series contrast set and an efﬁcient algorithm was proposed to
discover contrast sets in time series and multimedia data [8].
Another approach utilized a modiﬁed equal-width binning
interval, where the approximate width of the intervals is
provided as a parameter to the model [3]. The methodology
used is similar to STUCCO except that the discretization
step is added before enumerating the search space.
The COSINE (Contrast Set Exploration using Diffsets)
algorithm [4] is a contrast set mining technique that uses
a vertical data format, diffsets, a back tracking search algo-
rithm, and simple discretization in mining maximal contrast
sets from both discrete and continuous-valued attributes.
The results demonstrate that COSINE is more efﬁcient than
STUCCO and CIGAR, even at very low minimum support
difference thresholds. The GENCCS (Generate Correlated
Contrast Sets) algorithm [5] is a contrast set mining tech-
nique that extends COSINE by utilizing mutual information
and all-conﬁdence to select the attribute-value pairs that are
most highly correlated. The results show that GENCCS is
more efﬁcient and produced more interesting contrast sets
than STUCCO and CIGAR.
III. PROBLEM DEFINITION
Let A = {a1, a2, . . . , an} be a set of n distinct attributes.
We use Q and C to denote the set of quantitative attributes
and the set of categorical attributes respectively. Let V(ak)
be the domain of values for ak. An attribute-interval pair,
denoted as ak : [vkl, vkr], is an attribute ak associated with
an interval [vkl, vkr], where ak ∈ A and vkl, vkr ∈ V(ak).
Further, if ak ∈ C then vkl = vkr. Similarly, if ak ∈ Q,
then vkl ≤ vkr. Let T
= {x1, x2, . . . , xp} where xk ∈
V(ak), 1 ≤ k ≤ p, be a transaction. Let D be a set of
transactions, called the database. Let {i1, i2, . . . , im} be a
set of m distinct values from the set {1, 2, . . ., n}, m < n.
Let F = {ai1, ai2, . . . , aim}, aik ∈ A, be a set of m distinct
class attributes.
Let G = {a1 : [v1l, v1r], . . . , am : [vml, vmr]}, ak ∈
F, 1 ≤ k ≤ m, ai ̸= aj, ∀i, j, be a set of m distinct
class attribute-interval pairs, called a group. Let X = {a1 :
[v1l, v1r], . . . , aq
: [vql, vqr]},
ai, aj
∈ A − F,
1 ≤
k ≤ q ≤ n − m, ai ̸= aj, ∀i, j, be a set of distinct
attribute-interval pairs, called a quantitative contrast set.
Henceforth, we refer to a quantitative contrast set as simply
a contrast set. A contrast set, X, is called k-speciﬁc, if
|X| = k. The support of a contrast set, X, in a database, D,
denoted as supp(X), is the percentage of transactions in D
containing X. The support of a contrast set, X, in a group,
G, denoted as supp(X, G), is the percentage of transactions
in D containing X ∪ G.
A contrast set X associated with b mutually exclusive
groups. G1, G2, . . . , Gb is called a valid contrast set (CS)
if, and only if, the following four criteria are satisﬁed:
∃ijsupp(X, Gi) ̸= supp(X, Gj),
(1)
max
ij
|supp(X, Gi) − supp(X, Gj)| ≥ ǫ,
(2)
supp(X) ≥ σ,
(3)
and
n
max
i
 supp(Y, Gi)
supp(X, Gi)

≥ κ,
(4)
where ǫ is called the minimum support difference threshold,
σ is the minimum frequency threshold, κ called the minimum
subset support ratio threshold, and Y ⊂ X with |Y | =
|X| + 1. Criterion 1 ensures that the contrast set represents
a true difference between the groups. Contrast sets that meet
this criterion are called signiﬁcant. Criterion 2 ensures the
effect size. Contrast sets that meet this criterion are called
large. Criterion 3 ensures that the contrast set occurs in a
large enough number of transactions. Contrast sets that meet
this criterion are called frequent. Criterion 4 ensures that the
support of the contrast set in each group is different from
that of its superset. Contrast sets that meet this criterion are
called speciﬁc.
A valid contrast set is called maximal if it is not a subset
of any other valid contrast set. A valid contrast set is called
interesting if the ratio of maximum and minimum support
across the groups is sufﬁciently large. Formally, for a valid
contrast set, X, the ratio is given by
λ(X) =















∞,
if
n
min
i
{supp(X, Gi)}
= 0,
n
max
i
{supp(X, Gi)}
n
min
i
{supp(X, Gi)}
,
otherwise.
(5)
A large value for λ(X) implies that X occurs in signiﬁcantly
fewer transactions in one group Gi than in some other group
15
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

Gj. A value of ∞ indicates that X is absent from at least
one group Gi and present in at least one other group Gj.
A valid contrast set is called a λ contrast set (λ-CS) if,
and only if,
λ(X) ≥ ω,
(6)
where ω is a user-deﬁned minimum support ratio threshold.
This criterion ensures that the ratio of maximum and min-
imum support across all groups is sufﬁciently large. A λ
contrast set is called a ∞ contrast set (∞-CS) if, and only
if,
λ(X) = ∞.
(7)
Given a database D, a minimum support difference threshold
ǫ, a minimum frequency threshold σ, a minimum subset
support ratio threshold κ, and a minimum support ratio
threshold ω, our goal is to ﬁnd all the maximal λ contrast
sets (i.e., all maximal valid contrast sets that satisfy Equa-
tions 6 and 7).
IV. BACKGROUND
A. Search for Contrast Sets
Our algorithm uses a backtracking search paradigm in
order to enumerate all maximal group differences. Back-
tracking algorithms are useful because they allow us to
iterate through all the possible conﬁgurations of the search
space. Consider the partial search space tree shown in
Figure 1. The root of the tree corresponds to the combine
set {A : [0, 0], A : [1, 1], B : [0, 0], B : [1, 1], C : [0, 0], C :
[1, 1], D : [0, 0], D : [1, 1], E : 0, 0], E : [1, 1]}, which is
composed of the 1-speciﬁc contrast sets from the attributes
shown in Table I. Each attribute can take a value of 0 or 1.
All these contrast sets share the empty preﬁx in common.
Figure 1.
Search Tree: Box indicates a maximal contrast set
Formally, for a set of contrast sets with preﬁx P, [P] =
{X1, X2, · · · , Xn}, the intersection of PXi with all of PXj
with j > i is performed to obtain a new combine set [PXi]
where the contrast set PXiXj satisﬁes Equations 1, 2, 3, 4,
and 6. For example, from [A : [0, 0]] = {B : [0, 0], B :
[1, 1], C : [0, 0], C : [1, 1], D : [0, 0], D : [1, 1], E : [0, 0], E :
[1, 1]}, we obtain [A : [0, 0]B : [0, 0]] = {C : [0, 0], C :
[1, 1], D : [0, 0], D : [1, 1], E : [0, 0], E : [1, 1]} for the next
level of the search tree. A node with an empty combine set
such as [E : [0, 0] need not be explored further.
B. Data Format
Contrast set mining algorithms using the vertical format
have been shown to be very effective and usually outperform
horizontal approaches [5] [4]. Our algorithm also uses a
vertical data format in representing the data.
C. Ranking Methods
A contrast set mining task has the potential to return many
contrast sets. Consequently, measures are needed to rank the
relative interestingness of the contrast sets prior to presenting
them to the end-user. Much work has been done on various
measures of interestingness. For more on this, see [9] [10].
Ideally, a measure would be used to rank the contrast sets
as well as describe them, akin to the support, conﬁdence,
leverage and lift measures used in association rule mining.
In this section, we propose four measures and demonstrate
their use in ranking contrast sets.
Here we deﬁne the variables used in the ranking methods
described in this section. A contrast set, X, is represented by
a set of association rules, X → G1, X → G2, . . . , X → Gn,
where G1, G2, . . . , Gn are unique groups. Let n(X, Gi) be
the number of instances of X in Gi. Let n(X, ¬Gi) be the
number of instances of X in groups other than Gi (that is,
the number of times X occurs in G1, . . . , Gi−1, Gi+1, Gn).
Let (¬X, Gi) be the number of instances of contrast sets
other than X in Gi. Let n(¬X, ¬Gi) be the number of
instances of contrast sets other than X in groups other than
Gi. Let N be the total number of instances.
The
values
n(X, Gi), n(X, ¬Gi), n(¬X, Gi),
and
n(¬X, ¬Gi) actually correspond to the observed frequencies
at the intersection of the rows and columns in a 2 × 2
contingency table, such as the one shown in Table II for the
association rule X → Gi. Rows represent the occurrence
of the contrast set and the columns represent occurrence of
the groups.
Table II
CONTINGENCY TABLE FOR X → Gi
Gi
¬Gi
Σ Row
X
n(X, Gi)
N(X, ¬Gi)
n(X)
¬X
n(¬X, Gi)
n(¬X, ¬Gi)
n(¬X)
Σ Column
n(Gi)
n(¬Gi)
N
16
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

Distribution Difference: The distribution difference (DD)
of a contrast set measures how different the support for a
group in the contrast set is from the support for the group
in the entire dataset [3]. Formally, the distribution difference
for X, in Gi is given by
DD(X → Gi) =

n(X, Gi)
n(X)
×
N
n(Gi) − 1
 .
For example, assume that in the entire dataset 40% of
individuals are male and 60% are female. Now assume that
we have two contrast sets where 65% are male and 35% are
female in the ﬁrst, and 42% are male and 58% are female in
the second. In comparing these contrast sets, the ﬁrst is more
interesting because it deviates more from the distribution
in the entire dataset. The distribution difference captures
that. The distribution difference can have a minimum value
of zero, which indicates that the instances in the contrast
set occur in the same distribution across the groups in
comparison to the distribution in the entire dataset. A large
distribution difference indicates signiﬁcant variance in the
distribution across the groups.
The aggregate distribution difference of a contrast set is
the sum of the distribution difference values over all the
groups. Formally, the aggregate distribution difference for
X across G1, G2, . . . , Gn is given by
Aggregate DD(X) =
n
X
i
DD(X → Gi).
Unusualness: Unusualness is a measure of interestingness
used in subgroup discovery [11]. Given a set of instances
possessing some property of interest, a subgroup is a subset
of instances in which the statistical characteristics of the
property of interest are ”unusual”. Instances in the subgroup
can be described by an association rule, X → Y , where the
property of interest is represented by the consequent, Y , and
the antecedent, X, an itemset. Weighted relative accuracy
(WRAcc) is used to evaluate the quality (i.e., unusualness)
of the induced association rules.
Contrast set mining has been shown to be an extension of
subgroup discovery, where each group represents a different
property of interest [12]. Thus, we can use the weighted
relative accuracy to measure the unusualness (UN) of X in
Gi. Formally, unusualness is given by
UN(X, Gi)
=
p(X) × (p(Gi|X) − p(Gi))
≈
n(X)
N
×
n(X, Gi)
n(X)
− n(Gi)
N

.
Possible values for unusualness range from -1 to 1. The
unusualness of X, is determined by the group for which the
unusualness is largest. Thus, the unusualness of X, across
G1, G2, . . . , Gn is given by
Maximum UN(X) = max
i
UN(X, Gi).
Coverage: The coverage of an association rule, X → Gi
is the proportion of instances in the dataset where X is true
in Gi [10], and is given by
Coverage(X → Gi) = p(X) = n(X)
N
.
Possible values for coverage range from 0 to 1, inclusive,
where contrast sets that occur more frequently have a higher
coverage.
The coverage of a contrast set for all groups, called the
aggregate coverage, is the sum of the individual coverage
values for the contrast set in each group. The aggregate
coverage of a contrast set X in G1, G2, . . . , Gn is given
by
Aggregate Coverage(X) =
n
X
i=1
Coverage(X → Gi)
Lift: The lift of an association rule, X → Gi, measures
how many times X and Gi actually occur together compared
to the number of times X and Gi would be expected to occur
together if they where statistically independent [13] and is
given by
Lift(X → Gi)
=
p(X, Gi)
P(X)P(Gi) = N × n(X, Gi)
n(X) × n(Gi)
Possible values for lift range from 0 to inﬁnity, inclusive.
The lift for a contrast set across all groups called the
aggregate lift, is the sum of the lift for the contrast set in
each group. Formally,
Aggregate Lift(X) =
n
X
i=1
Lift(X → Gi).
Interestingness Factor: The four interestingness measures
described above can be used individually to rank discovered
contrast sets. However, they can can also be used in combi-
nation to determine the most interesting contrast sets based
on multiple measures. The Interestingness Factor (IF) of
a contrast set is the average of it’s rank over a set of the
selected interestingness measures, and is given by
IF(X) =
Pn
i=1 ri × wi
Pn
i=1 wi × mi
where n is the number of interestingness measures, ri is the
rank of the contrast set by a measure i, wi is the weight
of the ranking measure i (i.e., a user-deﬁned parameter
indicating the relative importance of measure i), and mi
is the maximum rank of measure i. Possible values for the
interestingness factor can range from 0 to 1, where values
close to 0 indicate contrast sets which are more interesting,
while values close to 1 indicate contrast sets which are less
interesting. An interestingness factor of 1 indicates that the
contrast set was ranked the lowest by each method.
17
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

V. MINING INTERESTING VALID CONTRAST SETS
GIVE (Generate Interesting Valid contrast sEts) presented
in Algorithm 1, ﬁnds all the maximal valid contrast sets
in a given dataset (i.e, all the contrast sets that satisfy
Equations 1, 2, 3, 4, and 6). It adapts several tenets of the
backtracking search technique proposed in [4] for contrast
set mining.
Algorithm 1 GIVE(D, F, ǫ, σ, κ, ω, m)
Input: A dataset, D, and ranking method, m
Output: The set of ranked interesting valid contrast sets W
1: for each i ∈ A, A ∈ D, i ̸∈ F do
2:
if i ∈ Q then
3:
V(i) = DISCRETIZE(i)
4:
end if
5:
B = B ∪ V(i)
6: end for
7: C0 =COMBINE({}, B, ǫ, σ, 0, ω, W)
8: Sort each C0 in increasing |Cx| then in increasing Fx
9: TRAVERSE({}, C0, W, ǫ, σ, κ, ω)
10: RANK(W, m)
11: return W
GIVE begins by ﬁrst determining all the 1-speciﬁc con-
trast sets from the domain V of each attribute in the dataset
not occurring in F, and storing them in B (lines 1 to 6).
Quantitative attributes are discretized (line 3) to determine
a V set from which 1-speciﬁc quantitative contrast sets can
be generated. We use the discretization algorithm previously
described in [4]. GIVE determines valid 1-speciﬁc contrast
sets by calling the subroutine COMBINE, with the empty
preﬁx {}, B, ǫ, σ, 0, ω, and W which will hold all the valid
contrast sets at the end (line 7). The set of valid 1-speciﬁc
contrast sets is re-ordered in increasing cardinality of the
combine set and frequency (line 8). Thus contrast sets with
a lower frequency at one level are less likely to produce
contrast sets that meet our frequency threshold on the next
level. GIVE then calls the subroutine, TRAVERSE, with the
empty preﬁx, {}, C0, W, ǫ, σ, κ, and ω (line 9). The valid
contrast sets are ranked by a method m (line 10).
A. COMBINE
Given a preﬁx P, a combine set H, a set of valid
contrast sets W, a minimum support difference threshold ǫ, a
minimum frequency threshold σ, a minimum subset support
ratio threshold κ, and a minimum support ratio ω, the
COMBINE Algorithm, shown in Algorithm 3, builds new
contrast sets from P and H that satisfy Equations 1, 2, 3, 4
and 6.
COMBINE begins by combining the preﬁx P with each
member y of the possible set of combine elements, H,
to create a new contrast set z (line 3). For each z, it
Algorithm 2 COMBINE(P, H, W, ǫ, σ, κ, ω)
1: C = ∅
2: for each y ∈ H do
3:
z = P ∪ {y}
4:
Determine Dz, Fz, Cz, αL
5:
if signiﬁcant(z, αL) & large(z, ǫ) & frequent(z, σ) &
speciﬁc(z, κ) then
6:
if λ(z) == ∞ then
7:
if Z ̸⊇ z ∪ H : Z ∈ W then
8:
W = W ∪ {z}
9:
end if
10:
else if λ(z) ≥ ω then
11:
C = C ∪ {z}
12:
end if
13:
end if
14: end for
15: return C
calculates its diffset, Dz, its potential combine set, Cz,
and its frequency, Fz (line 4). It then determines whether
z satisﬁes Equations 1, 2, 3, and 4 (line 5). COMBINE
also checks whether Equation 7 is satisﬁed (line 6). Any
z which meets this criteria is potentially maximal and no
further processing of the subset tree has to be done. z is
added to W if it has no superset already in W (lines 7
to 9). Otherwise, COMBINE checks whether Equation 6 is
satisﬁed. Any z which meets this criteria is added to the
combine set, C (lines 10 to 11). Finally C is returned.
B. TRAVERSE
Given a preﬁx Pl, a combine set Cl, a minimum support
difference threshold ǫ, a minimum frequency threshold σ, a
minimum subset support ratio threshold κ, and a minimum
support ratio threshold ω, the TRAVERSE Algorithm, shown
in Algorithm 3, traverses the search space for all, maximal
or λ contrast sets that satisfy Equations 1, 2, 3, 4, and 6.
TRAVERSE begins by determining the next preﬁx, Pl+1
(line 2). It then determines a new possible set of combine
elements, Hl+1, by ﬁrst stripping the preﬁx Pl+1 of the
previous preﬁx Pl, creating P
′
l+1 (line 4). It then determines
from the list of elements in Cl, those which are greater
than (appear after) Pl+1 (recall from above, that Pl+1 was
also chosen from Cl) (line 6). For any such element, y,
TRAVERSE strips it of the preﬁx Pl, creating y
′ (line 7).
It then checks whether P
′
l+1 is not equal to y
′ and whether
it is in the combine set of Pl (line 8). P
′
l+1 and y
′ are 1-
speciﬁc contrast sets and if they originate from the same
attribute, they cannot be part of a new contrast set, as we
require contrast sets to have unique attributes. If y
′ is in
the combine set of Pl then it will be in the combine set of
Pl+1. If both conditions are met, y is added to Hl+1 (line
9). TRAVERSE repeats this for every member of Cl.
18
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

Algorithm 3 TRAVERSE(Pl, Cl, Wl, ǫ, σ, κ, ω)
1: for each x ∈ Cl do
2:
Pl+1 = {x}
3:
Hl+1 = ∅
4:
Let P
′
l+1 = Pl+1 − Pl
5:
for each y ∈ Cl do
6:
if y > Pl+1 then
7:
Let y
′ = y − Pl
8:
if y
′ ̸= P
′
l+1 & y
′ ∈ CPl then
9:
Hl+1 = Hl+1 ∪ {y}
10:
end if
11:
end if
12:
end for
13:
if |Wl| > 0 then
14:
if Z ⊇ Pl+1 ∪ Hl+1 : Z ∈ Wl then
15:
return
16:
end if
17:
end if
18:
Cl+1 = COMBINE(Pl+1, Hl+1, Wl, ǫ, σ, κ, ω)
19:
Sort Cl+1 by increasing Fz, ∀z ∈ Cl+1
20:
if Cl+1 ̸= ∅ then
21:
if Z ̸⊇ Pl+1 : Z ∈ Wl then
22:
Wl = Wl ∪ Pl+1
23:
end if
24:
else
25:
Wl+1 = {W ∈ Wl : x ∈ W}
26:
end if
27:
if Cl+1 ̸= ∅ then
28:
TRAVERSE(Pl+1, Cl+1, Wl+1, ǫ, σ, κ, ω)
29:
end if
30:
Wl = Wl ∪ Wl+1
31: end for
The cardinality of the current set of contrast sets, is
determined and if it is greater than zero, TRAVERSE checks
if Pl+1∪Hl+1 is subsumed by an existing contrast set. If yes,
the current and subsequent contrast sets in Cl can be pruned
away (lines 13 to 17). If not, an extension is necessary.
TRAVERSE then creates a new combine set for the next
level of the search by using the subroutine COMBINE (line
18). The combine set, Cl+1, is sorted in increasing order of
the frequency of its members (line 19). Any contrast set not
in the combine set refers to a node pruned from the search
tree. TRAVERSE checks if Cl+1 is empty and if Pl+1 is not
a subset of any contrast set in Wl, Pl+1 is added to Wl (lines
20 to 23). Otherwise, a new set of local contrast sets, Wl+1,
is created based such that only the contrast sets in Wl that
contain all the contrast sets in Pl are added to Wl+1 (line
25). This allows the number of contrast sets of interest to be
narrowed down as recursive calls are made. If Cl+1 is not
empty, TRAVERSE is called again with Pl+1, Cl+1, and the
set of new local maximal contrast sets, Wl+1 (lines 27 to
Table III
DATASET DESCRIPTION
Data Set
# Transactions
# Attributes
# Groups
Census
32561
14
5
Mushroom
8124
22
2
Spambase
4601
58
2
Waveform
5000
41
3
28). After the recursion completes, the set of maximal valid
contrast sets or λ valid contrast sets, Wl, is updated with
the elements from Wl+1 (lines 30).
VI. EXPERIMENTAL RESULTS
In this section, we present the results of an experimental
evaluation of our approach. Our experiments were conducted
on an Intel dual core 2.40GHz processor with 4GB of
memory, running Windows 7 64-bit. Discovery tasks were
performed on four real datasets obtained from the UCI
Machine Learning Repository [14]. Table III lists the name,
number of transactions, number of attributes, and the number
of groups for each dataset. These datasets were chosen
because of their use with previous contrast set mining
techniques and the ability to mine valid contrast sets with
high speciﬁcity.
A. Performance of GIVE
We ﬁrst examine the efﬁciency of GIVE by measuring the
time taken to complete the contrast set mining task as the
minimum support ratio threshold (MSRT) varies. We set the
signiﬁcance level to 0.95, the minimum support difference
and minimum subset ratio to 0, respectively, and average
the results over 10 consecutive runs. Figure 2 shows the
number of valid contrast sets discovered and the run time
for each of the datasets as the MSRT is varied. Results are
only shown for MSRT values which produce substantial
changes in the time. The time taken by COSINE and
GENCCS for each dataset is also provided for comparison.
For GENCCS, we set use the mean mutual information,
and mean all conﬁdence value, as the mutual information
threshold, and all conﬁdence threshold, respectively, as these
were shown previously to be optimal [5]. Figures 2a, 2b, 2c,
and 2d, show that GIVE is as efﬁcient as COSINE when
the minimum support ratio threshold is 0 but less than that
of GENCCS. GIVE becomes more efﬁcient than GENCCS
when the MSRT is greater than 2.5, 0.75, 0.25, and 0.75 for
the Spambase, Mushroom, Waveform and Census datasets,
respectively. Since the MSRT serves as a constraint, as we
increase its value, fewer contrast sets satisfy this constraint
and GIVE becomes more efﬁcient.
B. Effectiveness of GIVE
We examine the effectiveness of GIVE by measuring the
average unusualness of the valid contrast sets discovered
19
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

 0
 1000
 2000
 3000
 4000
 5000
 0
 2
 4
 6
 8
 10
Time(s)
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(a) SpamBase Runtime
 0
 5
 10
 15
 20
 25
 30
 0
 0.5
 1
 1.5
 2
 2.5
 3
 3.5
Time(s)
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(b) Mushroom Runtime
 0
 20
 40
 60
 80
 100
 120
 0
 0.5
 1
 1.5
 2
 2.5
 3
 3.5
 4
Time(s)
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(c) Census Runtime
 0
 20
 40
 60
 80
 100
 120
 0
 1
 2
 3
 4
 5
Time(s)
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(d) Waveform Runtime
Figure 2.
Summary of runtime results
as the MSRT varies, as shown in Figure 3. The aver-
age unusualness of the valid contrast sets discovered by
COSINE and GENCCS for each dataset is also provided
for comparison. Figure 3a, 3b, 3c, and 3d shows that
 0.022
 0.024
 0.026
 0.028
 0.03
 0.032
 0.034
 0.036
 0
 2
 4
 6
 8
 10
Average Unusualness
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(a) Spambase Runtime
 0.018
 0.02
 0.022
 0.024
 0.026
 0.028
 0.03
 0
 0.5
 1
 1.5
 2
 2.5
 3
 3.5
Average Unusualness
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(b) Mushroom Runtime
 0.001
 0.0012
 0.0014
 0.0016
 0.0018
 0.002
 0.0022
 0.0024
 0
 0.5
 1
 1.5
 2
 2.5
 3
 3.5
 4
Average Unusualness
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(c) Census Runtime
 0.014
 0.015
 0.016
 0.017
 0.018
 0.019
 0.02
 0.021
 0
 1
 2
 3
 4
 5
Average Unusualness
Minimum Support Ratio Threshold
GIVE
COSINE
GENCCS
(d) Waveform Runtime
Figure 3.
Summary of interestingness results
the maximal contrast sets discovered by GIVE are more
interesting, when measured by the average unusualness,
than those discovered by either GENCCS or COSINE. The
magnitude of the difference is signiﬁcant even at lower
20
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

MSRT values where GENCCS outperforms GIVE as shown
in Figures 2a, 2c, 2b, and 2d, which implies that even
though GENCCS is less expensive, GIVE produces better
quality contrast sets. Similar results were observed for the
average distribution difference and lift, respectively, and are
not shown due to space considerations.
C. Effect of λ on the Search Process
We further explored how the quality of the contrast sets
discovered is affected by using λ in the search process by
comparing the average interestingness factor for contrast
sets that are found by COSINE and GENCCS that are also
found by GIVE with those that are not found by GIVE.
Table IV shows the average IF using all four measures
equally weighted for each of the four datasets. In Table IV,
Table IV
EFFECTIVENESS OF λ
Data Set
COSINE
COSINE
GENCCS
GENCCS
& GIVE
& ¬GIVE
& GIVE
& ¬GIVE
Census
0.45
0.54
0.34
0.42
Mushroom
0.38
0.49
0.32
0.39
Spambase
0.45
0.58
0.40
0.49
Waveform
0.66
0.69
0.57
0.65
each row shows the average IF of the contrast sets found by
COSINE and GIVE, COSINE and ¬GIVE, GENCCS and
GIVE, and, GENCCS and ¬GIVE, respectively for each
dataset. For example, for the Census dataset, the average
interestingness factor of the contrast sets found by COSINE
that are also found by GIVE is 0.45. For the Census, Mush-
room, and Spambase datasets, the average IF of the contrast
sets found by both COSINE and GIVE is signiﬁcantly lower
than those found by COSINE only. This shows that using
λ in the search process does not compromise the quality of
the contrast sets discovered. With the Waveform dataset, this
difference is smaller and not as signiﬁcant. For GENCCS,
a similar observation can be made, though the difference in
the average IF is signiﬁcantly different for all four datasets.
VII. CONCLUSION
In this paper, we introduced the notion of the minimum
support ratio threshold and proposed a contrast set mining
technique, GIVE, for mining maximal valid contrast sets that
meet a minimum support ratio threshold. We compared our
approach with two previous contrast set mining approaches,
COSINE and GENCCS, and found our approach to be
comparable in terms of efﬁciency but more effective in
generating interesting contrast sets. We also introduce ﬁve
interestingness measures and demonstrated how they can be
used to rank contrast sets. In addition, the results showed
that the contrast sets discovered by GIVE had an average
interestingness factor that was signiﬁcantly higher than
those produced only by COSINE or GENCCS. Future work
will incorporate space reduction techniques with additional
interestingness measures.
REFERENCES
[1] S. D. Bay and M. J. Pazzani, “Detecting group differences:
Mining contrast sets,” Data Min. Knowl. Discov., vol. 5, no. 3,
pp. 213–246, 2001.
[2] R. Hilderman and T. Peckham, “A statistically sound alter-
native approach to mining contrast sets,” Proceedings of the
4th Australasian Data Mining Conference (AusDM’05), pp.
157–172, Dec. 2005.
[3] M. Simeon and R. J. Hilderman, “Exploratory Quantitative
Contrast Set Mining: A Discretization Approach,” in ICTAI
(2), 2007, pp. 124–131.
[4] ——, “COSINE: A Vertical Group Difference Approach to
Contrast Set Mining,” in Canadian Conference on AI, 2011,
pp. 359–371.
[5] ——, “GENCCS: A Correlated Group Difference Approach
to Contrast Set Mining,” in MLDM, 2011, pp. 140–154.
[6] T.-T. Wong and K.-L. Tseng, “Mining negative contrast sets
from data with discrete attributes,” Expert Syst. Appl., vol. 29,
no. 2, pp. 401–407, 2005.
[7] S. Holm, “A simple sequentially rejective multiple test proce-
dure,” Scandinavian Journal of Statistics, vol. 6, pp. 65–70,
1979.
[8] J. Lin and E. J. Keogh, “Group sax: Extending the notion of
contrast sets to time series and multimedia data,” in PKDD,
2006, pp. 284–296.
[9] R. J. Hilderman and H. J. Hamilton, Knowledge Discovery
and Measures of Interest.
Norwell, MA, USA: Kluwer
Academic Publishers, 2001.
[10] L. Geng and H. J. Hamilton, “Interestingness measures for
data mining: A survey,” ACM Comput. Surv., vol. 38, no. 3,
p. 9, 2006.
[11] B. Kavsek and N. Lavrac, “Apriori-sd: Adapting association
rule learning to subgroup discovery,” Applied Artiﬁcial Intel-
ligence, vol. 20, no. 7, pp. 543–583, 2006.
[12] P. Kralj, N. Lavrac, D. Gamberger, and A. Krstacic, “Contrast
set mining for distinguishing between similar diseases,” in
AIME, 2007, pp. 109–118.
[13] S. Brin, R. Motwani, J. D. Ullman, and S. Tsur, “Dynamic
itemset counting and implication rules for market basket
data,” SIGMOD Rec., vol. 26, no. 2, pp. 255–264, 1997.
[14] A.
Asuncion
and
D.
Newman,
“UCI
ma-
chine
learning
repository,”
2007.
[Online].
Available:
http://www.ics.uci.edu/∼mlearn/MLRepository.html
21
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-188-5
INTENSIVE 2012 : The Fourth International Conference on Resource Intensive Applications and Services

