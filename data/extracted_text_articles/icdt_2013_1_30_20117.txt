Synthesis of MPEG-like Standard with Interval Multiset Estimates
Mark Sh. Levin
Institute for Information Transmission Problems
Russian Academy of Sciences
Moscow, Russia
Email: mslevin@acm.org
Abstract‚ÄîThe paper addresses modular modeling, design,
and improvement of MPEG-like standard for multimedia infor-
mation processing. Morphological (modular) system design and
improvement are considered as composition of the standard
elements (components) conÔ¨Åguration. The solving process is
based on Hierarchical Morphological Multicriteria Design
(HMMD) approach: (i) multicriteria selection of alternatives
for system components, (ii) synthesis of the selected alternatives
into a resultant combination. Assessment of design alternatives
is based on interval multiset estimates, assessment of com-
patibility between the design alternatives is based on ordinal
scale. Improvement of the obtained solutions is examined as
well (knapsack-like problem). Numerical examples illustrate
the design process.
Keywords-standard for multimedia information; combinato-
rial synthesis; combinatorial optimization; multiset.
I. INTRODUCTION
In recent decades, the signiÔ¨Åcance of multimedia infor-
mation processing is increased (e.g., [1], [2], [7], [8]). A
structural approach to modeling of MPEG-like standard
for multimedia information has been presented in [14].
Multicriteria analysis of algorithms for processing of image
sequences to reveal Pareto-efÔ¨Åcient methods for some typical
image sequences was studied in [4]. This work is a basis
for on-line selection of the best processing algorithms for an
input image sequence. In [12], an example for combinatorial
synthesis of MPEG-like standard was described. This paper
focuses on combinatorial synthesis of MPEG-like standard
and its improvement with using interval multiset estimates
of standard elements. The approach can be considered as a
basis for on-line design and modiÔ¨Åcation of the standards in
multimedia information processing.
Morphological (modular) system design and improvement
are considered as composition of elements of MPEG-like
standard (components, e.g., rules, algorithms). Hierarchical
Morphological Multicriteria Design (HMMD) approach is
used for modular design with interval multiset estimates
for assessment of design alternatives (DAs) for elements of
standard. This composition method (with interval multiset
estimates) has been suggested in [10] and was used in
some synthesis works (e.g., [11], [13]). HMMD implements
a multi-stage design framework and provides cascade-like
design framework:
(1) Decomposition/partitioning of system and system
requirements to obtain a hierarchical system model and
a hierarchy of system requirements, which correspond to
system parts/components,
(2) ‚ÄôBottom-Up‚Äô design process:
(i) multicriteria selection of design alternatives (DAs) for
system components,
(ii) synthesis of the selected alternatives into a resultant
combination.
The additional systems problem is examined: improve-
ment of the obtained solutions (multiple choice problem).
Fig. 1 depicts a simpliÔ¨Åed scheme of the approach.
The numerical design examples involve hierarchical sys-
tem structure of MPEG-like standard, DAs for system
parts/components, estimates of DAs and their compatibility,
Bottom-Up design process, analysis and improvement of the
obtained system solutions. Assessment of DAs and their
compatibility is based on expert judgment.
The structure of the paper is the following. Section II
presents description of combinatorial synthesis with interval
multiset estimates. In Section III, hierarchical modeling of
the MPEG-like standard (including design alternatives for
leaf nodes of the model) and combinatorial synthesis of
four Pareto-efÔ¨Åcient solutions (on the basis of HMMD) are
described. Section IV presents improvement of the obtained
solutions as selection of improvement actions (on the basis
of multiple choice problem).
Figure 1. SimpliÔ¨Åed design framework




External requirements
?
?
?
Modular synthesis of standards:
(hierarchical morphological design
based on clique problem)
(i) designing the structure of standard,
(ii) ‚ÄôBottom-Up‚Äô hierarchical design.
?
Analysis of results, improvement
(multiple choice problem)
14
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

II. SYNTHESIS WITH INTERVAL MULTISET ESTIMATES
This section presents a compressed description of com-
binatorial synthesis with interval multiset estimates, which
has been suggested in [10]. Close compressed materials are
contained in ([11], [12],[13]).
The
approach
consists
in
assignment
of
elements
(1, 2, 3, ...) into an ordinal scale [1, 2, ..., l]. As a result,
a multi-set based estimate is obtained, where a basis set
involves all levels of the ordinal scale: ‚Ñ¶ = {1, 2, ..., l}
(the levels are linear ordered: 1 ‚âª 2 ‚âª 3 ‚âª ...) and
the assessment problem (for each alternative) consists in
selection of a multiset over set ‚Ñ¶ while taking into account
two conditions:
1. Cardinality of the selected multiset equals a speciÔ¨Åed
number of elements Œ∑ = 1, 2, 3, ... (i.e., multisets of cardi-
nality Œ∑ are considered);
2. ‚ÄúConÔ¨Åguration‚Äù of the multiset is the following: the
selected elements of ‚Ñ¶ cover an interval over scale [1, l]
(i.e., ‚Äúinterval multiset estimate‚Äù).
Thus, an estimate e for an alternative A is (scale
[1, l], position-based form or position form): e(A)
=
(Œ∑1, ..., Œ∑Œπ, ..., Œ∑l), where Œ∑Œπ corresponds to the number
of elements at the level Œπ (Œπ
=
1, l), or e(A)
=
{
Œ∑1
z }| {
1, ..., 1,
Œ∑2
z }| {
2, ...2,
Œ∑3
z }| {
3, ..., 3, ...,
Œ∑l
z }| {
l, ..., l}. The number of multisets
of cardinality Œ∑, with elements taken from a Ô¨Ånite set of
cardinality l, is called the ‚Äúmultiset coefÔ¨Åcient‚Äù or ‚Äúmultiset
number‚Äù ([6],[15]):
¬µl,Œ∑
=
l(l+1)(l+2)...(l+Œ∑‚àí1)
Œ∑!
. This
number corresponds to possible estimates (without taking
into account interval condition 2). In the case of condition 2,
the number of estimates is decreased. Generally, assessment
problems based on interval multiset estimates can be denoted
as follows: P l,Œ∑. The assessment problem P 3,4 will be used
in numerical examples.
In addition, operations over multiset estimates are used
[10]: integration, vector-like proximity, aggregation.
Integration of estimates (mainly, for composite systems)
is based on summarization of the estimates by compo-
nents (i.e., positions). Let us consider n estimates (po-
sition form):
estimate e1 = (Œ∑1
1, ..., Œ∑1
Œπ , ..., Œ∑1
l ), . . .,
estimate eŒ∫ = (Œ∑Œ∫
1 , ..., Œ∑Œ∫
Œπ , ..., Œ∑Œ∫
l ), . . ., estimate en =
(Œ∑n
1 , ..., Œ∑n
Œπ , ..., Œ∑n
l ). Then, the integrated estimate is:
esti-
mate eI = (Œ∑I
1, ..., Œ∑I
Œπ , ..., Œ∑I
l ), where Œ∑I
Œπ = Pn
Œ∫=1 Œ∑Œ∫
Œπ
‚àÄŒπ =
1, l. In fact, the operation U is used for multiset estimates:
eI = e1 U ... U eŒ∫ U ... U en.
Vector-like proximity is considered as follows. Let A1
and A2 be two alternatives with corresponding inter-
val multiset estimates e(A1), e(A2). Vector-like proxim-
ity for the alternatives above is:
Œ¥(e(A1), e(A2)) =
(Œ¥‚àí(A1, A2), Œ¥+(A1, A2)), where vector components are: (i)
Œ¥‚àí is the number of one-step changes: element of quality
Œπ + 1 into element of quality Œπ (Œπ = 1, l ‚àí 1) (this corre-
sponds to ‚Äúimprovement‚Äù); (ii) Œ¥+ is the number of one-
step changes: element of quality Œπ into element of quality
Œπ + 1 (Œπ = 1, l ‚àí 1) (this corresponds to ‚Äúdegradation‚Äù). It is
assumed: |Œ¥(e(A1), e(A2))| = |Œ¥‚àí(A1, A2)|+|Œ¥+(A1, A2)|.
A median (aggregated) estimate (aggregation) for a
set of initial estimates is deÔ¨Åned as follows. Let E =
{e1, ..., eŒ∫, ..., en} be the set of initial estimates. let D be
the set of all possible estimates (E ‚äÜ D). Thus, the median
estimates (‚Äúgeneralized median‚Äù M g and ‚Äúset median‚Äù M s)
are:
M g = arg minM‚ààD
Pn
Œ∫=1 |Œ¥(M, eŒ∫)|;
M s =
arg minM‚ààE
Pn
Œ∫=1 |Œ¥(M, eŒ∫)|.
A brief description of combinatorial synthesis (HMMD)
with ordinal estimates of design alternatives is the following
([9], [10]). An examined composite (modular, decompos-
able) system consists of components and their interconnec-
tion or compatibility (IC). Basic assumptions of HMMD
are the following:
(a) a tree-like structure of the system;
(b) a composite estimate for system quality that integrates
components (subsystems, parts) qualities and qualities of
IC (compatibility) across subsystems;
(c) monotonic cri-
teria for the system and its components;
(d) quality of
system components and IC are evaluated on the basis of
coordinated ordinal scales. The designations are: (1) design
alternatives (DAs) for leaf nodes of the model; (2) priorities
of DAs (Œπ = 1, l; 1 corresponds to the best one);
(3)
ordinal compatibility for each pair of DAs (w = 1, ŒΩ; ŒΩ
corresponds to the best one). Let S be a system consisting
of m parts (components): R(1), ..., R(i), ..., R(m). A set of
design alternatives is generated for each system part above.
The problem is:
Find a composite design alternative
S = S(1)‚ãÜ...‚ãÜS(i)‚ãÜ
... ‚ãÜ S(m)
of DAs (one representative design alternative
S(i) for each system component/part R(i), i = 1, m ) with
non-zero compatibility between design alternatives.
A discrete ‚Äúspace‚Äù of the system excellence (a poset)
on the basis of the following vector is used:
N(S) =
(w(S); e(S)),
where w(S) is the minimum of pairwise
compatibility between DAs, which correspond to different
system components (i.e., ‚àÄ Rj1 and Rj2, 1 ‚â§ j1 Ã∏= j2 ‚â§ m)
in S, e(S) = (Œ∑1, ..., Œ∑Œπ, ..., Œ∑l), where Œ∑Œπ is the number of
DAs of the Œπth quality in S. Further, the problem is described
as follows:
max e(S),
max w(S),
s.t. w(S) ‚â• 1.
(1)
As a result, we search for composite solutions, which are
nondominated by N(S) (i.e., Pareto-efÔ¨Åcient). ‚ÄúMaximiza-
tion‚Äù of e(S) is based on the corresponding poset. The con-
sidered combinatorial problem is NP-hard and enumerative
solving schemes or heuristics are used.
In the article, combinatorial synthesis is based on usage of
multiset estimates of design alternatives for system parts. For
the resultant system S = S(1)‚ãÜ...‚ãÜS(i)‚ãÜ...‚ãÜS(m) the same
type of the multiset estimate is examined: an aggregated
estimate (‚Äúgeneralized median‚Äù) of corresponding multiset
estimates of its components (i.e., selected DAs). Thus,
15
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

N(S) = (w(S); e(S)), where e(S) is the ‚Äúgeneralized me-
dian‚Äù of estimates of the solution components. The modiÔ¨Åed
problem is:
max e(S) = M g = arg min
M‚ààD
m
X
i=1
|Œ¥(M, e(Si))|,
max w(S),
s.t.
w(S) ‚â• 1.
(2)
Here, enumeration methods or heuristics are used ([9], [10]).
The basic multiple choice problem is (e.g., [3], [5]):
max
m
X
i=1
qi
X
j=1
cijxij
s.t.
m
X
i=1
qi
X
j=1
aijxij ‚â§ b;
qi
X
j=1
xij ‚â§ 1, i = 1, m;
xij ‚àà {0, 1}.
(3)
In the case of multiset estimates of item ‚Äúutility‚Äù ei, i ‚àà
{1, ..., i, ..., m} (instead of ci), an aggregated multiset es-
timate as the ‚Äúgeneralized median‚Äù is used. The item set
is: A = Sm
i=1 Ai, Ai = {(i, 1), (i, 2), ..., (i, qi)}. Boolean
variable xi,j corresponds to selection of the item (i, j). The
solution is a subset of the initial item set: S = {(i, j)|xi,j =
1}. The problem is:
max e(S) = max M =
arg min
M‚ààD
X
(i,j)‚ààS={(i,j)|xi,j=1}
|Œ¥(M, ei,j)|,
s.t.
m
X
i=1
qi
X
j=1
aijxi,j ‚â§ b;
qi
X
j=1
xij = 1;
xij ‚àà {0, 1}.
(4)
In the paper, a greedy heuristic is used.
III. STRUCTURE OF STANDARD AND SYNTHESIS
Hierarchical modular structure of MPEG-like standard has
been examined in [14]. A simpliÔ¨Åed hierarchical model of
MPEG-like standard was analyzed in [14]. Here, a modiÔ¨Åca-
tion of the above-mentioned hierarchical model is considered
(Fig. 2):
0. MPEG-like standard S = A ‚ãÜ B.
1. General part A = C ‚ãÜ B ‚ãÜ D ‚ãÜ E ‚ãÜ F:
1.1. Applied layer (videotelephony, videoconferencing,
digital broadcast, digital storage media, etc.) C: bit rate
64 kbit/s ... 2 Mbit/s
C1(1, 3, 0); bit rate 4...80 Mbit/s
C2(2, 2, 0); bit rate 24...1024 Mbit/s, Web, security for
applications C3(0, 4, 0).
1.2. Time and picture quality mode D = X ‚ãÜ Y : 1.2.1.
Time mode X: delay X1(0, 2, 2), real time, low delay
X2(1, 3, 0); 1.2.2. Picture quality Y : low Y1(0, 3, 1), good
Y2(3, 1, 0), variable Y3(1, 3, 0).
1.3. Format E = U ‚ãÜ V :
1.3.1. Resolution U: low
U1,2,1(3), high U0,2,2; 1.3.2. Color decomposition V : basic
V1(1, 2, 1), high proÔ¨Åle V2(0, 2, 2).
1.4. Basic operations F = T ‚ãÜP ‚ãÜM: 1.4.1. Transforma-
tion T: basic mode T1(1, 3, 0), Dolby Digital T2(1, 2, 1);
1.4.2. Playback/features P: basic mode P1(1, 3, 0), with
scalability P2(1, 2, 1); 1.4.3. Streaming (video, audio, syn-
chronization, streaming data, testing, control) M: basic
mode M1(1, 3, 0), media objects M2(1, 2, 1), real-time
streaming M3(0, 3, 1).
Figure 2. Considered structure of MPEG-like standard
xS = A ‚ãÜ B ‚ãÜ I ‚ãÜ C ‚ãÜ R ‚ãÜ Y
S1 = A1 ‚ãÜ B1 ‚ãÜ I1 ‚ãÜ C1 ‚ãÜ R1 ‚ãÜ Y1
S2 = A1 ‚ãÜ B1 ‚ãÜ I1 ‚ãÜ C1 ‚ãÜ R2 ‚ãÜ Y1
S3 = A1 ‚ãÜ B1 ‚ãÜ I1 ‚ãÜ C2 ‚ãÜ R1 ‚ãÜ Y1
S4 = A1 ‚ãÜ B1 ‚ãÜ I1 ‚ãÜ C2 ‚ãÜ R2 ‚ãÜ Y1
rD = X ‚ãÜ Y
D1 = X2 ‚ãÜ Y2(2; 2, 2, 0)
D2 = X1 ‚ãÜ Y1(3; 0, 2, 2)
rX
X1(0, 2, 2)
X2(1, 3, 0)
rY
Y1(0, 3, 1)
Y2(3, 1, 0)
Y3(1, 3, 0)
rF = T ‚ãÜ P ‚ãÜ M
F1 = T1 ‚ãÜ P1 ‚ãÜ M1(3; 1, 3, 0)
rT
T1(1, 3, 0)
T2(1, 2, 1)
rP
P1(1, 3, 0)
P2(1, 2, 1)
rM
M1(1, 3, 0)
M2(1, 2, 1)
M3(0, 3, 1)
rE = U ‚ãÜ V
E1 = U1 ‚ãÜ V1(3; 1, 2, 1)
rU
U1(1, 2, 1)
U2(0, 2, 2)
r V
V1(1, 2, 1)
V2(0, 2, 2)
A = C ‚ãÜ D ‚ãÜ E ‚ãÜ F
A1 = C2 ‚ãÜ D1 ‚ãÜ E1 ‚ãÜ F1
A2 = C2 ‚ãÜ D2 ‚ãÜ E1 ‚ãÜ F1
u
rC
C1(1, 3, 0)
C2(2, 2, 0)
C3(0, 4, 0)
B = G ‚ãÜ I ‚ãÜ J
B1 = G1 ‚ãÜ I1 ‚ãÜ J1
B2 = G2 ‚ãÜ I1 ‚ãÜ J1
u
G = Q ‚ãÜ Z
G1 = Q2 ‚ãÜ Z1(3; 2, 2, 0)
G2 = Q1 ‚ãÜ Z1(2; 3, 1, 0)
r
rQ
Q1(3, 1, 0)
Q2(2, 2, 0)
Q3(1, 2, 1)
r Z
Z1(2, 2, 0)
Z2(0, 4, 0)
I = K ‚ãÜ L
I1 = K2 ‚ãÜ L1
r
rL
L1(0, 0, 4)
L2(1, 3, 0)
K = O ‚ãÜ H
K1 = O1 ‚ãÜ H1(3; 2, 2, 0)
r
rO
O1(2, 2, 0)
O2(1, 3, 0)
rH
H1(1, 3, 0)
H2(0, 4, 0)
rJ
J1(0, 0, 4)
J2(3, 1, 0)
16
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

2. Coding/compression B = G ‚ãÜ I ‚ãÜ J.
2.1. Basic components G = Q ‚ãÜ W ‚ãÜ Z: 2.1.1. Video
coding (methods for transformation into digital codes) Q:
variable word length coding of coefÔ¨Åcient structure Q1(1),
VLC tables for DCT (non-linear) Q2(2), Ô¨Çexibility of coding
for audio/videa Q3(2); 2.1.2. Motion estimation (vector, etc.)
Z: ‚àí1024...1023 pixel (for half) Z1(3), ‚àí2048...2047 pixel
(for full) Z2(1).
2.2. Principles and structure I = K ‚ãÜ L:
2.2.1. Principles K = O ‚ãÜ H: 2.2.1.1. Block decom-
position O: 16 times16 (macroblock) and 8 √ó 8 (block)
O1(2, 2, 0), object-based (VOB) O2(1, 3, 0); 2.2.1.2. Scan-
ning H: progressive scan (zigzag) H1(1, 3, 0), alternative
H2(0, 4, 0).
2.2.2. Structure (basic processing scheme, extended pro-
cessing scheme, ‚Äôopen structure‚Äô including transcoding) L:
basic mode L1(1), separation of motion and texture data
L2(2).
2.3. Algorithms J: simple J1(2) complicated J2(1).
Interval multiset estimates of DAs are presented in Fig. 2
(in parentheses, expert judgment, illustrative character).
The following abbreviations are used hereinafter: Dolbi
Digital (format Dolbi Digital), VLC (Variable-Length Cod-
ing), DCT (Discrete Cosine Transform),
Compatibility estimates are presented in Table 1 and Table
2 (expert judgment).
The obtained intermediate composite DAs for subsystems
are the following: (1) D1 = X2 ‚ãÜ Y2, N(D1) = (2; 2, 2, 0);
(2) D2 = X1 ‚ãÜ Y1, N(D2) = (3; 0, 2, 2); (3) E1 = U1 ‚ãÜ V1,
N(E1) = (3; 1, 2, 1); (4) F1 = T1 ‚ãÜ P1 ‚ãÜ M1,
N(F1) =
(3; 1, 3, 0); (5) G1 = Q2 ‚ãÜ Z1,
N(G1) = (3; 2, 2, 0); (6)
G2 = Q1 ‚ãÜ Z1, N(G1) = (2; 3, 1, 0); (7) K1 = O1 ‚ãÜ H1,
N(K1) = (3; 2, 2, 0). Fig. 3 illustrates quality of intermedi-
ate composite DAs for subsystems D, F, G, K.
TABLE I. COMPATIBILITY ESTIMATES
X1
X2
Y1 Y2 Y3
3
2
2
2
2
2
U1
U2
V1 V2
3
2
2
3
T1
T2
P1
P2
P1 P2 M1 M2
3
2
3
1
1
3
1
3
3
2
2
3
TABLE II. COMPATIBILITY ESTIMATES
Q1
Q2
Q3
Z1 Z2
2
1
3
2
1
1
O1
O2
H1 H2
3
2
2
3
Figure 3. Quality for D,F ,G,K





S
S
S
S
SS





S
S
S
S
SS





S
S
S
S
SS
N(G2) s
s
N(D1)
N(F1) s
s
N(E1)
s
N(G1), N(K1)
s
N(D2)
sf
The ideal
point
w = 1
w = 2
w = 3
The worst
point
qd
Further, combinations at the next higher level of the
hierarchical system model are as follows:
(a) A1 = C2 ‚ãÜ D1 ‚ãÜ E1 ‚ãÜ F1, (b) A2 = C2 ‚ãÜ D2 ‚ãÜ E1 ‚ãÜ F1,
(c) B1 = G1 ‚ãÜ I1 ‚ãÜ J1, (d) B2 = G2 ‚ãÜ I1 ‚ãÜ J1.
Finally, four alternative combinations for the designed
system are obtained:
(1) S1 = A1 ‚ãÜB1 = (C2 ‚ãÜD1 ‚ãÜE1 ‚ãÜF1)‚ãÜ(G1 ‚ãÜI1 ‚ãÜJ1) =
C2 ‚ãÜ (X2 ‚ãÜ Y2) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ (Q2 ‚ãÜ Z1) ‚ãÜ
(O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1;
(2) S2 = A2 ‚ãÜB1 = (C2 ‚ãÜD2 ‚ãÜE1 ‚ãÜF1)‚ãÜ(G1 ‚ãÜI1 ‚ãÜJ1) =
C2 ‚ãÜ (X1 ‚ãÜ Y1) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ (Q2 ‚ãÜ Z1) ‚ãÜ
(O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1;
(3) S3 = A1 ‚ãÜB2 = (C2 ‚ãÜD1 ‚ãÜE1 ‚ãÜF1)‚ãÜ(G2 ‚ãÜI1 ‚ãÜJ1) =
C2 ‚ãÜ (X2 ‚ãÜ Y2) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ (Q1 ‚ãÜ Z1) ‚ãÜ
(O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1;
(4) S4 = A2 ‚ãÜB2 = (C2 ‚ãÜD2 ‚ãÜE1 ‚ãÜF1)‚ãÜ(G2 ‚ãÜI1 ‚ãÜJ1) =
C2 ‚ãÜ (X1 ‚ãÜ Y1) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ (Q1 ‚ãÜ Z1) ‚ãÜ
(O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1.
Note, the initial set of possible solutions includes 82944
combinations.
IV. IMPROVEMENT/RECONFIGURATION
Generally, system improvement process can be based on
the following methods (e.g., [9]):
(i) improvement of a system component (element),
(ii) improvement of compatibility between system com-
ponents,
(iii) change a system structure, for example, extension of
the system by addition of system components/parts.
Here, the system improvement (or reconÔ¨Åguration) pro-
cess is brieÔ¨Çy presented as a combination of improvement
actions by elements and improvement actions by compati-
bility. The illustrative improvement actions are presented in
Table 3.
17
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

TABLE III. BOTTLENECKS AND IMPROVEMENTS
Composite DAs
Bottlenecks
DA
IC
Improvement
actions
D1 = X2 ‚ãÜ Y2
X2
(1, 3, 0) ‚áí (4, 0, 0)
D1 = X2 ‚ãÜ Y2
(X2, Y2)
2 ‚áí 3
D2 = X1 ‚ãÜ Y1
X1
(0, 2, 2) ‚áí (2, 2, 0)
D2 = X1 ‚ãÜ Y1
X1
(0, 2, 2) ‚áí (4, 0, 0)
D2 = X1 ‚ãÜ Y1
Y2
(3, 1, 0) ‚áí (4, 0, 0)
E1 = U1 ‚ãÜ V1
U1
(1, 2, 1) ‚áí (2, 2, 0)
E1 = U1 ‚ãÜ V1
U1
(1, 2, 1) ‚áí (4, 0, 0)
E1 = U1 ‚ãÜ V1
V1
(1, 2, 1) ‚áí (2, 2, 0)
E1 = U1 ‚ãÜ V1
V1
(1, 2, 1) ‚áí (4, 0, 0)
G1 = Q2 ‚ãÜ Z1
Q2
(2, 2, 0) ‚áí (4, 0, 0)
G2 = Q1 ‚ãÜ E2
(E3, Z1)
2 ‚áí 3
G2 = Q1 ‚ãÜ Z1
Q1
(3, 1, 0) ‚áí (4, 0, 0)
G2 = Q1 ‚ãÜ Z1
Z1
(2, 2, 0) ‚áí (4, 0, 0)
K1 = O1 ‚ãÜ H1
O1
(2, 2, 0) ‚áí (4, 0, 0)
K1 = O1 ‚ãÜ H1
H1
(1, 3, 0) ‚áí (4, 0, 0)
Further, the following improvement actions are examined
(binary variables {yi,j} are used):
(1) Two versions for X2: y1,1 (none), y1,2 ((1, 3, 0) ‚áí
(4, 0, 0));
(2) Two versions for (X2, Y2): y2,1 (none), y2,2 (2 ‚áí 3);
(3) Three versions for X1: y3,1 (none), y3,2 ((0, 2, 2) ‚áí
(2, 2, 0)); y3,3 ((0, 2, 2) ‚áí (4, 0, 0));
(4) Two versions for Y2: y4,1 (none), y4,2 ((3, 1, 0) ‚áí
(4, 0, 0));
(5) Three versions for U1: y5,1 (none), y5,2 ((1, 2, 1) ‚áí
(2, 2, 0)), y5,3 ((1, 2, 1) ‚áí (4, 0, 0));
(6) Three versions for V1: y6,1 (none), y6,2 ((1, 2, 1) ‚áí
(2, 2, 0)), y6,3 ((1, 2, 1) ‚áí (4, 0, 0));
(7) Two versions for Q2: y7,1 (none), y7,2 ((2, 2, 0) ‚áí
(4, 0, 0));
(8) Two versions for (Q1, Z1): y8,1 (none), y8,2 (2 ‚áí 3);
(9) Two versions for Q1: y7,1 (none), y7,2 ((3, 1, 0) ‚áí
(4, 0, 0));
(10) Two versions for Z1: y10,1 (none), y10,2 ((2, 2, 0) ‚áí
(4, 0, 0));
(11) Two versions for O1: y11,1 (none), y11,2 ((2, 2, 0) ‚áí
(4, 0, 0));
(12) Two versions for H1: y12,1 (none), y12,2 ((1, 3, 0) ‚áí
(4, 0, 0)).
Table 4 contains binary variables (yij), improvement
actions and their estimates (illustrative, expert judgment). As
a result, the improvement problem is (qj equals the number
of corresponding versions):
arg min
M‚ààD
X
(i,j)‚ààS={(i,j)|yij=1}
|Œ¥(M, eij)|,
s.t.
12
X
i=1
qi
X
j=1
aijyij ‚â§ b;
qj
X
j=1
yij = 1;
yij ‚àà {0, 1}.
(5)
Some examples of the improvement solutions are (im-
provement problem corresponds to certain solution, i.e., S1,
S2, S3, S4):
(1) S1, b = 41: y1,2 = 1 (X2, improvement 1), y4,2 = 1
(Y2, improvement 1), y8,2 = 1 ((Q1, Z1), improvement 1);
y9,2 = 1 (Q1, improvement 1);
S1 ‚áí f
S1 = C2 ‚ãÜ (f
X2 ‚ãÜ f
Y2) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ
(f
Q1 ‚ãÜ Z1) ‚ãÜ (O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1;
(2) S3, b = 28: y1,2 = 1 (X2, improvement 1), y4,2 = 1
(Y2, improvement 1), y8,2 = 1 ((Q1, Z1), improvement 1);
S3 ‚áí f
S3 = C2 ‚ãÜ (f
X2 ‚ãÜ f
Y2) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ
(Q1 ‚ãÜ Z1) ‚ãÜ (O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1;
(3) S4, b = 43: y3,2 = 1 (X1, improvement 1), y9,2 = 1
(Q1, improvement 1), y10,2 = 1, (Z1, improvement 1);
S4 ‚áí f
S4 = C2 ‚ãÜ (f
X1 ‚ãÜ Y1) ‚ãÜ (U1 ‚ãÜ V1) ‚ãÜ (T1 ‚ãÜ P1 ‚ãÜ M1) ‚ãÜ
(f
Q1 ‚ãÜ f
Z1) ‚ãÜ (O1 ‚ãÜ H1) ‚ãÜ L1 ‚ãÜ J1.
TABLE IV. ESTIMATES OF IMPROVEMENTS
Improvement
actions
Multiset
estimate
eij
Cost
(aij)
y1,1 (X2, None)
(0, 0, 4)
0
y1,2 (X2, Improvement 1)
(4, 0, 0)
10
y2,1 ((X2, Y2), None)
(0, 0, 4)
0
y2,2 ((X2, Y2), Improvement 1)
(4, 0, 0)
14
y3,1 (X1, None)
(0, 0, 4)
0
y3,2 (X1, Improvement 1)
(2, 2, 0)
10
y3,3 (X1, Improvement 2)
(4, 0, 0)
29
y4,1 (Y2, None)
(0, 0, 4)
0
y4,2 (Y2, Improvement 1)
(4, 0, 0)
9
y5,1 (U1, None)
(0, 0, 4)
0
y5,2 (U1, Improvement 1)
(2, 2, 0)
17
y5,3 (U1, Improvement 2)
(4, 0, 0)
30
y6,1 (V1, None)
(0, 0, 4)
0
y6,2 (V1, Improvement 1)
(2, 2, 0)
12
y6,3 (V1, Improvement 2)
(4, 0, 0)
24
y7,1 (Q2, None)
(0, 0, 4)
0
y7,2 (Q2, Improvement 1)
(4, 0, 0)
15
y8,1 ((Q1, Z1), None
(0, 0, 4)
0
y8,2 ((Q1, Z1), Improvement 1)
(3, 1, 0)
9
y9,1 (Q1, None)
(0, 0, 4)
0
y9,2 (Q1, Improvement 1)
(4, 0, 0)
13
y10,1(Z1, None)
(0, 0, 4)
0
y10,2(Z1, Improvement 1)
(4, 0, 0)
20
y11,1(O1, None)
(0, 0, 4)
0
y11,2(O1, Improvement 1)
(4, 0, 0)
18
y12,1(H1, None)
(0, 0, 4)
0
y12,2(H1, Improvement 1)
(4, 0, 0)
22
18
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

V. CONCLUSION AND FUTURE WORK
The paper describes a hierarchical approach to modular
design of MPEG-like standard. Note, this material is a
preliminary one and is based on illustrative estimates of
design alternatives for elements of the standard (and esti-
mates of compatibility between the design alternatives). The
described illustrative solving schemes can be considered as
prototype frameworks for real-world applications.
In the future, it may be prospective to consider the
following research directions:
1. Consideration of other design and improvement (adap-
tation) problems in analysis and generation of communica-
tion standards;
2. Special simulation research to analyze various versions
of communication standards;
3. Usage of AI techniques; and
4. Usage of the described application and design approach
in engineering/CS education.
ACKNOWLEDGMENT
The author would like to thank the partial support of the
work by grant of the Ministry of Education and Science
of Russian Federation ‚ÄúQoS provisioning methods for the
access to broadband multimedia services in wireless self-
organized networks‚Äù (application no. 2012-1.2.1.-12-000-
2006-009).
REFERENCES
[1] L. Chiariglione, ‚ÄúMPEG and multimedia communications,‚Äù
IEEE Trans. Circuits Syst. Video Technol., vol. 7, no. 2,
1997, pp. 5‚Äì18.
[2] C. E. Fogg, D. J. Le Gall, J. L. Mitchell, and W. B.
Pennebaker, Eds., MPEG Video. Compression Standard.
Boston: Kluwer Academic Publishers, 2002.
[3] M. R. Garey and D. S. Johnson, Computers and Intractabil-
ity. The Guide to the Theory of NP-Completeness. San
Francisco: W. H. Freeman and Company, 1979.
[4] E. Kamensky and O. Hadar, ‚ÄúMultiparameter Method for
Analysis and Selection of Motion Estimation Algorithms for
Video Compression,‚Äù Multimedia Tools and Applications,
vol. 38, no. 1, 2008, pp. 119‚Äì146.
[5] H. Kellerer, U. Pferschy, and D. Pisinger, Knapsack Prob-
lems. Berlin: Springer, 2004.
[6] D. E. Knuth, The Art of Computer Programming. Vol. 2,
Seminumerical Algorithms. Mass: Addison Wesley, Reading,
1998.
[7] P. Kuhn, Algorithms, Complexity Analysis and VLSI Archi-
tectures for MPEG-4 Motion Estimation. Boston: Kluwer
Academic Publishers, 1999.
[8] D. Le Gall, ‚ÄúMPEG: A Video Compression Standard for
Multimedia Applications,‚Äù Comm. of the ACM, vol. 34, no.
4, 1991, pp. 47‚Äì58.
[9] M. Sh. Levin, Composite Systems Decisions. New York:
Springer, 2006.
[10] M. Sh. Levin, ‚ÄúMultiset Estimates and Combinatorial
Synthesis,‚Äù Electronic preprint. 30 pp., May 9, 2012.
http://arxiv.org/abs/1205.2046 [cs.SY]
[11] M. Sh. Levin, ‚ÄúCombinatorial Synthesis of Communication
Protocol ZigBee with Interval Multiset Estimates,‚Äù Proc.
4nd Int. Congress on Ultra Modern Telecomm. & Control
Systems (ICUMT-2012), IEEE Press, Oct. 2012, pp. 29‚Äì34.
[12] M. Sh. Levin, ‚ÄúModular Approach to Communication Pro-
tocol and Standard for Multimedia Information (Survey),‚Äù
Information Processes, vol. 12, no. 4, 2012, pp. 389‚Äì399
(in Russian).
[13] M. Sh. Levin, ‚ÄúTowards Combinatorial Evolution of Com-
posite Systems,‚Äù Expert Systems with Applications, vol. 40,
no. 4, 2013, pp. 1342‚Äì1351.
[14] M. Sh. Levin, O. Kruchkov, O. Hadar, and E. Kaminsky,
‚ÄúCombinatorial Systems Evolution: Example of Standard for
Multimedia Information,‚Äù Informatica, vol. 20, no. 4, 2009,
pp. 519‚Äì538.
[15] R. R. Yager, ‚ÄúOn the Theory of Bags,‚Äù Int. J. of General
Systems, vol. 13, no. 1, 1986, pp. 23‚Äì37.
19
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

