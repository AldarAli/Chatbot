Measuring Success in Agile Software Development Projects: a GQM Approach 
 
Abdullah Aldahmash  
Electronics and Computer Science 
University of Southampton 
Southampton, UK 
e-mail: a.aldahmash@soton.ac.uk 
Andy Gravell 
Electronics and Computer Science 
University of Southampton 
Southampton, UK 
e-mail: amg@ecs.soton.ac.uk
 
 
Abstract— Agile software development has become one of the 
most commonly used methodologies for developing software. It 
promises to deliver many benefits, but nevertheless, the 
implementation of agile practices and techniques require many 
changes that might be a challenge for organizations attempting to 
succeed with agile software development projects. Claiming the 
success of agile software projects is difficult, and there is a need 
for more measurements with which agile success could be 
evaluated. This paper develops an instrument with which the 
success of an agile software development project could be 
measured. The criteria of the success are driven from the Critical 
Success Factors (CSFs) of agile development which have been 
identified prior developing this instrument. The proposed 
instrument will evaluate the success 
of agile software 
development projects in achieving these identified success factors. 
The instrument was developed following the Goal Question 
Metric (GQM) approach. This study conducted semi-structured 
interviews with 13 experts in the field of agile development. The 
aim of these interviews was to review and confirm the proposed 
instrument for measuring the success of agile projects. Following 
comments from the interviews, the instrument was revised. The 
developed instrument proposes measuring the agile success using 
6 goals, 30 questions, and 7 metrics. 
Keywords—Agile; Agile success; GQM; Software metrics; Agile 
project 
I. 
 INTRODUCTION  
Agile practices and techniques have been adopted by many 
organizations. These organizations face many challenges 
during the agile transformation. These challenges are related 
to a variety of aspects, such as people, culture, and 
technology. During a previous study [1] we identified the 
critical success factors of agile software development. Having 
identified the success factors of agile software development, 
now we will focus on studying how the success could be 
measured; claiming the success of agile software development 
is problematic. Therefore, there should be more metrics and 
systematic measurements that could evaluate the success of 
agile software development projects. There is also a need for 
more measurements with which the adoption of agile practices 
and techniques could be assessed. 
The nature of agile software development requires new 
metrics that address the agility. One study [2] concluded that 
not all the software traditional lifecycle metrics are suitable for 
agile software development. It was suggested that future work 
should focus on how the use of the traditional software 
measurement could be adapted to work with agile 
development or to develop new metrics for agile development. 
Recent research [3] reviewed a total of 22 software metrics 
and resulted with only 10 metrics that could be used in agile 
software development. Therefore, there is a need for more 
software metrics that could be used to measure the status of 
agile software development.  
This study selected the GQM approach to develop an 
instrument for measuring the success of agile software 
development. This selection was based on a suggestion from 
[4] findings, which revealed that the GQM approach is more 
relevant to the nature of agile software projects with short-
cyclic iterations. GQM will provide measurements with clear 
purposes and goals and will result in saving the time of 
developing the measurement which is one of the agile 
development objectives. In this paper, an instrument is 
developed using the GQM approach. This instrument aimed to 
measure the success of agile software development projects.  
This paper is organized as follows: Section I is an 
introduction. Following which, Section II is a background 
where the literature review is discussed. In Section III, the 
related work is presented. Section IV discusses the research 
methodology used in this study is presented. Section V is 
pertaining to the development of the proposed instrument. 
Following that, Section VI discusses the review of the 
instrument. Lastly, Section VII concludes the paper and puts 
forth the future work. 
II. 
BACKGROUND 
In this section, the relevant literature was reviewed. Section 
A reviews the literature of the agile software development. 
Section B discusses the introduction of the GQM approach 
and how it could be employed. 
A. Agile Software Development  
In 2001, a group of software engineers established the 
agile manifesto [5] during which, they introduced four values 
and twelve principles of agile software development.  Since 
then, agile practices and techniques have evolved. According 
to Agile Alliance network, agile software development 
defined as “an umbrella term for a set of methods and 
practices based on the values and principles expressed in the 
Agile Manifesto. Solutions evolve through collaboration 
between self-organizing, cross-functional teams utilizing the 
appropriate practices for their context” [6]. 
The main characteristics that the agile development 
include: 
communication 
and 
collaboration, 
support 
innovation/creativity, embrace changes, and the development 
should be iterative and indivisible [7]. Agile development 
advocates frequent delivery of working software. This ensures 
38
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

that feedback will be received early and so will be the changes 
in requirements. Agile development also embraces changes 
and conflicts during the development rather than rejecting 
them [8]. 
The latest State of Agile Survey 2018 [9] revealed that the 
top three reasons which drive the organizations to adopt agile 
were to accelerate product delivery, to manage changing 
requirements, and to increase productivity. According to a 
survey from Microsoft research, the top three paybacks from 
agile development are: improve the communication, enhance 
the delivery, and better respond to the changes. Conversely, 
the three top difficulties with agile development are: large-
scale projects, number of required meetings, and rigorous 
management culture [10]. 
B. Goal-Question-Metric Approach 
The instrument will be developed by using the GQM 
approach. GQM was proposed by Basili and Weiss [11] with 
the aim of introducing a systematic way of defining goals that 
could easily be refined into questions and linked to metrics. 
The GQM approach has three levels: conceptual level (Goal), 
operational level (Question), and quantitative level (Metric). 
The goals are usually defined for specific purposes from a 
certain perspective and for a given object. Therefore, the usage 
of GQM will help in ensuring that the defined measurements 
will be defined with the aim of achieving specific goals [12]. 
The questions are used to describe the approach to achieving 
the goals and how it is going to be achieved. The metrics are 
set of data linked to each question aiming to answer it and it 
could be objective or subjective. Defining goals is beneficial 
to focus on the important aspects. Writing questions will make 
the goals more specific and will suggest the relevant metrics 
[13]. An example of the structure of GQM is illustrated in 
Figure 1.  
 
 
 
Figure 1. An Example of GQM Structure. 
Using GQM approach to develop software measurements 
is associated with many benefits.  Some of these benefits are 
improving the software product quality, enhancing software 
processes, and increasing the team cooperation [14]. The 
GQM-based measurement approach will help in avoiding 
irrelevant measurements through the regular feedback and by 
involving the project team to define measurements that are 
linked to the agreed upon goals [15]. GQM is a systematic 
approach of representing and combining a set of high-level 
goals into measurements. The result of implementing GQM is 
the specification of a set of metrics addressing a particular set 
of goals and rules for interpreting these results [16]. It is 
hoped that by implementing the GQM approach it will be 
possible to define a list of metrics which could measure the 
success of an agile software development project in an 
organization. 
III. 
RELATED WORK 
A great deal of studies has investigated the status of 
measurements in agile software development. According to 
Javdani et. al [17], measurements in agile software 
development are unlike the measurements in traditional 
software development. It was suggested that there is a need for 
more agile measurements especially in the following areas: 
productivity and velocity, and the changing requirements in 
agile.  Furthermore, Ayed et. al [18] introduced a 
measurement-based framework for measuring the adoption 
and customization of agile methods. A set of metrics have 
been introduced and categorised into three categories: 
organisation level metrics, product level metrics, and process 
level metrics. However, the introduced metrics were not 
introduced in a practical way which the organizations are 
looking for. Agile measurements need to be confirmed and 
validated through empirical methodologies in order to gain an 
acceptance from the agile practitioners. This paper is planning 
to validate the proposed instrument by conducting experts’ 
interviews. Heidenberg et. al [19] introduced a metrics model 
following GQM to measure the impact of agile transformation 
in software development organizations. Their model focused 
on measuring the business value, lead-time, and efficiency of 
the agile software development transformation. It was 
indicated that more measurements are necessary to assess the 
agile software development status in organizations attempting 
for agile transformation. 
A recent study [20] has also attempted to provide a 
quantitative 
measurement 
of 
the 
impact 
of 
agile 
transformation in software development organizations. They 
proposed a model with quantitative metrics following the 
GQM approach. The proposed model consists of one goal, 
four questions, and eight metrics following the structure of the 
GQM approach. While they introduced quantitative metrics, 
they indicated that qualitative metrics are needed as well. It 
was suggested that future work might concentrate on 
providing qualitative metrics with which the status of agile 
software development could be evaluated and measured.  
Fontana et. al [21] conducted a systematic review on the 
agile development maturity models and they compared these 
models aiming to develop a model which could evaluate the 
adoption of agile practices and techniques in an organisation. 
They found and reviewed fourteen models which assess the 
agile maturity, of which six models were introduced in the last 
four years. Most of these available models are built on a 
combination between agile principles and Capability Maturity 
Model Integration (CMMI).  Fontana et. al [21] recommended 
that future works should focus on empirical validation of these 
 
Goal 1 
 
Goal 2 
Question  
Question 
Question 
Question 
Metric 
Metric 
Metric 
39
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

measurements which this research already achieved. While 
our instrument focused on measuring the success of 
implementing each success factor, these models were designed 
to measure the maturity of each agile practice independently. 
Both ways could be used to indicate the success in 
implementing agile software development projects.  
Chita [22] suggested that the activity theory, which is 
usually used in social science, could be used to assess the 
factors 
for 
successful 
agile 
software 
development 
implementation, since the agile success is built on 
organisational, cultural, and social factors. They developed a 
model following the activity theory for successful agile 
adoption and they indicated that their on-going research will 
validate this model by conducting a case study. 
Laanti [23] introduced a framework which could assess the 
agile 
transformation 
in 
large 
software 
development 
organisations. The framework classified the status of the 
organisations into five categories from beginner organisations 
to world-class organisations. While the framework assesses 
the agile adoption in the organisations, it lacks details on how 
organisations could evaluate their own adoption and how they 
could improve their agile transformation. 
The findings obtained as a result of this paper and of the 
abovementioned 
emerging 
related 
work 
focused 
on 
understanding how the organizations could succeed in 
implementing agile practices. Furthermore, how the success in 
implementing agile practices could be measured and assessed. 
This shows the needs for more research that could work to 
validate these measurements and to introduce them to be used 
by agile software development practitioners. 
In this paper, the proposed instrument used a mix of 
qualitative metrics and quantitative metrics to measure the 
success of agile software development projects. The proposed 
instrument will be reviewed by agile experts and it will be 
validated through conducting practical case studies. 
IV. 
RESEARCH METHODOLOGY 
The proposed instrument was developed using the GQM 
approach. This study followed a qualitative method which is 
semi-structured 
interviews 
with 
agile 
experts. 
These 
interviews were necessary to validate the proposed instrument. 
An invitation of participation was sent to a total of 28 experts. 
The criterion of selecting the experts which was used is that 
the expert should have at least 5 years of experience with agile 
software development. Out of the 28-reached experts, 13 
experts were willing to participate in this research. These 
participants came from various countries, including the USA, 
Saudi Arabia, the UK, and France. The industries which the 
interview participants represent include, but are not limited to: 
Education 
sector, 
Finance 
and 
Banking 
sector, 
and 
Information Technology & Software sector. The interviewed 
experts represent different types of organizations which ranges 
from small organizations with only 15-30 employees to big 
multi-nation organizations. The participants were shown the 
instrument, following which they had the chance to ask for 
clarifications if needed. Then, they were asked about each 
item and to propose new items to the instrument. The 
interviews last, on average, approximately from 35 to 60 
minutes. 
V. 
INSTRUMENT DEVELOPMENT 
As identified in the literature, more measurements are 
needed for agile projects. The proposed instrument was 
developed for the purpose of measuring the success of agile 
software development projects. The GQM approach was 
selected to build the instrument considering its effeteness in 
detecting a systematic way of linking the metrics to the 
organizational goals and needs.  
The first step of following the GQM approach is to identify 
the goal or the set of goals. The goal of this study was to 
measure the success of agile projects. Along with 6 sub goals 
selected as a result of a review of the success factors of agile 
software development [1], which identified the following 
factors as critical success factors of agile projects: 
Communication, Customer Involvement, Team Capability and 
Training, Top management Support, Organizational Culture, 
Delivery Strategy, Agile Software Development Practices and 
Techniques, and Project Management (PM) Process [1].  
As suggested by GQM, the eight identified CSFs will be 
rewritten to be a set of goals. The two success factors of agile 
practices and techniques, and project management approach 
merged into one goal. This is because these two factors are 
about a selection process of available agile techniques and PM 
approaches; also, this was done to avoid the replication of 
having two goals about a selection process. Thus, the goal will 
be to have an appropriate selection of these available agile 
practices and techniques and PM approaches.  
The organization culture is a soft factor which is hard to be 
measured and it contains many aspects which overlap with 
other success factors such as communication and top 
management support factors as per [24]. Thus, in the developed 
instrument, the organizational culture factor will not be an 
independent goal. Alternatively, organizational culture success 
factor will be included in the first, second, third, and fourth 
goal. The goals of the proposed instrument are listed as 
follows:  
1. 
Improve the communication throughout the 
agile project. 
2. 
Increase the customer involvement during 
the agile project. 
3. 
Improve the training of the agile project team 
members. 
4. 
Increase the support from top management in 
the agile project. 
5. 
Enhance the delivery strategy. 
6. 
Appropriate selection of agile techniques, 
practices, and PM approach. 
 
A. Experts Interviews Design 
This 
research 
applied 
semi-structured 
interviews 
encompassing 
open-ended 
questions 
and 
closed-ended 
questions to review the proposed instrument. The purposes of 
these interviews were: firstly, to review and confirm the 
proposed instrument’s goals, questions, and metrics, and 
secondly to suggest any other questions and metrics that need 
to be considered when measuring the success of an agile 
software development project. The experts’ interview process 
comprised many steps, which were as follows: 
40
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

•Emails were sent to experts briefing them on the research and 
the objectives of the instrument. In the email, the experts were 
also asked to identify their preferred date and time for the 
interview. 
•Depending on where the experts lived, some interviews were 
conducted online via Skype and Zoom, which are video 
calling applications. In contrast, other interviews were 
conducted on a face-to-face basis. 
•Prior to the start of the interviews, all participants were 
requested to read the participant information sheet, following 
which they were asked to sign the consent form and return it 
by email. 
•The participants were shown the instrument, and then had the 
opportunity to ask for further explanation if needed. This 
lasted approximately 5-10 minutes. 
•Following this, the experts were asked about each goal in the 
instrument, starting with the first goal and ending with the last 
one. The experts were also asked about each item in the 
instrument and whether they felt that any additional item(s) 
needed to be added to the instrument. 
•In the last part of the interview, the participants were asked to 
answer open-ended questions concerning how the instrument 
could be improved. This allowed the researcher to ensure that, 
according to the opinions of the interviewed experts, different 
aspects of agility were addressed in the proposed instrument. 
This also made it possible to confirm whether or not, 
according to the experts’ interviewee responses, additional 
items were needed. 
•The interviews were recorded and lasted, on average, 
approximately 35-60 minutes.  
•The interviews were voice-recorded and summarised by the 
researcher using a pen and notebook. However, one 
participant refused to have his voice recorded, and that 
interview was hence not recorded. 
VI. 
INSTRUMENT REVIEW 
This 
study 
applied 
semi-structured 
interviews 
encompassing 
open-ended 
questions 
and 
closed-ended 
questions to review the proposed instrument. The aims of 
these interviews were: firstly, to review and confirm the 
proposed instrument’s goals, questions, and metrics. Secondly, 
to suggest any other questions and metrics that need to be 
considered when measuring the success of an agile software 
development project. Therefore, interviews were conducted 
with 13 agile experts where the instrument was shown to them 
in order to review the proposed instrument. 
The experts’ interviews resulted with many modifications 
to the proposed instrument. Following the received feedback, 
the instrument was revised accordingly. These modifications 
ranged from some language and editing notes to additional 
questions and metrics to be added. There were number of 
amendments which were applied to the proposed instrument to 
address the received feedbacks. It is difficult to list all the 
discussions with the agile experts about the instrument in this 
paper. Alternatively, the final version of the instrument is 
provided. The focus will be shifted now on how the proposed 
instrument could be validated. The researchers intended to use 
the instrument in three case studies. The evaluation obtained as 
a result of these case studies will make it possible to validate 
the practical usage of the instrument. 
The final version of the proposed instrument after the 
review from the interviewed experts is shown in Tables I, II, 
and III. The separation of the instrument into three tables is 
only for presentational purposes. 
TABLE I.    THE PROPOSED INSTRUMENT (PART 1 OF 3) 
Measuring the Success of Agile Software Development Projects    
1st Goal: Improve the communication throughout the agile project 
Q1. Rate your use of the ready 
communication platforms across the 
team (e.g. Slack, etc.) or your own 
developed platform? 
Q2. Rate the team practice of daily 
meetings (physical or virtual) where 
the team sit together to discuss the 
project progress? 
Q3. Rate your use of centralized 
repositories to enable documents 
and knowledge sharing throughout 
the project? 
 
 
 
Q4. How often the project team is 
sharing and communicating 
development’s aspects? 
Q5. How often the team have access 
to task boards (or smart boards) to 
communicate with co-located 
members and video conferences 
capabilities to communicate with 
different-located members? 
Q6. How often do you communicate 
informally (face to face 
communication) during the project 
when it is possible? 
 
 
 
 
 
• Very Good 
• Good 
• Acceptable 
• Poor 
• Very Poor 
 
 
 
 
 
 
 
 
 
 
 
• Always 
• Often 
• Sometimes 
• Seldom 
• Never 
2nd Goal: Increase the customer involvement during the agile project 
Q1. Rate the customers’ 
participation in planning meetings, 
demos, retrospectives and how they 
contribute to the success of these 
events? 
Q2. Rate the response time (e.g. how 
fast they are) from the customers to 
development queries? 
Q3. Rate the commitment and the 
support of the customers in the 
project toward resolving 
development issues and difficulties? 
 
 
 
 
Q4. How often do the customers 
attend the meetings (planning 
meetings, demos, and retrospectives) 
when they are requested to do so by 
the project team? 
Q5. How often do the customers 
express their needs to the project 
team, or suggest improvement for 
enhancing the project to the team? 
 
 
 
 
• Very Good  
• Good 
• Acceptable  
• Poor  
• Very Poor 
 
 
 
 
 
 
 
 
 
• Always 
• Often 
• Sometimes 
• Seldom 
• Never 
41
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

TABLE II.    THE PROPOSED INSTRUMENT (PART 2 OF 3) 
Measuring the Success of Agile Software Development Projects    
3rd Goal: Improve the training of the agile project team members 
Q1. Rate the available training 
resources in covering all aspects 
needed by the project team 
members? 
Q2. Rate the appropriateness of the 
contents of the training received by 
the project team? 
Q3. Rate the participation (e.g. 
attending, supporting, and 
facilitating) of the project team 
members in the available training 
programs? 
 
 
 
Q4. How often did the project team 
members practice self-training (e.g. 
watching learning videos, attending 
webinar, etc.)? 
 
 
 
 
• Very Good 
• Good 
• Acceptable 
• Poor 
• Very Poor 
 
 
 
 
 
 
• Always 
• Often 
• Sometimes 
• Seldom 
• Never 
4th Goal: Increase the support from top management in the agile project 
 
Q1. Rate the role of top management 
support toward the success of the 
attended planning meetings, demos, 
and retrospectives during the project? 
Q2. Rate the role of top management 
support in facilitating development 
issues? 
Q3. Rate the role of top management 
support in expediting development 
issues? 
Q4. Rate the overall support (budget, 
time, resources, etc.) from top 
management in the project? 
 
 
Q5. How often are the top 
management involved in planning 
meetings, demos, and retrospectives 
when they are requested to be there? 
Q6. How often do the top 
management initiate or propose 
events (meetings, emails, requests, 
etc.) whenever it is necessarily to do 
so? 
 
 
 
 
• Very Good  
• Good 
• Acceptable  
• Poor  
• Very Poor 
 
 
 
 
 
 
 
 
• Always 
• Often 
• Sometimes 
• Seldom 
• Never 
 
In Tables I, II, and III each question is associated with the 
corresponding used metric. The developed instrument has 
been reviewed by 13 agile experts. These experts’ interviews 
allowed the researcher to refine and improve the instrument. It 
is intended that the proposed instrument will be validated by 
conducting case studies to use the instrument. Three 
organizations agreed to use the instrument to measure the 
success of their agile software development projects. The 
instrument will be validated by these case studies and the 
participants’ evaluations will make it possible for further 
improvement of the instrument. By conducting case studies, 
the researcher will be able to validate the proposed instrument. 
It is hoped that the evaluation from these case studies will 
generate further understanding about the concept of success in 
adopting agile software development practices.  
TABLE III.    THE PROPOSED INSTRUMENT (PART 3 OF 3) 
Measuring the Success of Agile Software Development Projects    
5th Goal: Enhance the delivery strategy 
Q1. How long it takes to deliver a 
story point? 
 
 
Q2. How much of the sprint’s (or 
iteration) planned story points 
actually delivered by the end of the 
current sprint? 
 
 
Q3. What is the percentage of 
planned to delivered story points in 
the current release? 
 
 
Q4. What is your schedule efficiency 
(how fast you are progressing against 
the rate of progress planned)? 
 
Story point cycle time 
 
 
 
Sprint Burndown 
 
 
 
 
 
Release Burndown 
 
 
 
 
Schedule 
Performance Index 
(SPI) 
6th Goal: Appropriate selection of agile techniques, practices, and 
project management PM approach 
Q1. Do the team use an existing agile 
method “off the shelf” without 
adjusting it to suit their needs? 
 
 
 
Q2. How often are the current 
knowledge and capabilities of the 
team are considered when selecting 
agile techniques, practices and PM 
approach? 
Q3. How often are the needs of the 
customers and top management 
considered when selecting agile 
techniques, practices and PM 
approach? 
Q4. How often do the team conduct 
retrospectives (sprint reviews) to 
discuss the improvement of the 
selection of agile techniques, 
practices and PM approach? 
Q5. How often do these 
retrospectives (sprint reviews) lead to 
a change in agile techniques, 
practices and PM approach? 
 
Yes/No. 
 
 
 
 
 
 
 
 
 
 
 
• Always 
• Often 
• Sometimes 
• Seldom 
• Never 
 
The proposed instrument followed a scoring scale with 
which the success of agile software development projects 
could be measurement. The scoring is set to be used as an 
indication of how the participants of the instrument are doing 
and how they could achieve the defined goals of the proposed 
instrument, and ultimately achieve success with agile software 
development projects. With regard to the scoring of the 
instrument, the final score will range from 0 to 6, whereby 6 is 
the highest score. The final score is a result of totalling the 
scores of the six goals, each goal’s score ranges from 0 to 1, 
whereby 1 is the highest score for each goal. The score of each 
goal is a result of summing of the scores for each question (0 
42
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

to 1) dividing by the number of questions in that specific goal. 
This means that each question has the same weight when 
calculating the goal’s score. Eventually, every goal of the six 
goals has the same weight when calculating the final score of 
the instrument. The scoring of the instrument will make it easy 
for the organizations to know their weaknesses and strengths. 
For instance, if the scoring of the instrument resulted in 0.90 
for communication goal and 0.50 for the delivery strategy 
goal, it will be obvious that the work should be shifted to 
improve the delivery strategy. 
VII. CONCLUSION AND FUTURE WORK 
In this paper, an instrument to measure the success of agile 
software development was proposed. The development of the 
instrument followed the GQM approach. Semi-structured 
interviews were conducted with agile software development 
experts. These experts came from different industries and from 
different countries. The criterion with which the experts were 
chosen is that each expert must have at least five years of 
experience with agile development. The instrument was 
shown to 13 agile experts. Following this, the instrument was 
revised and amended based on the feedback received from the 
experts. The final version of the instrument comprised of 6 
goals, 30 questions, and 7 metrics.  
With regard to the future work, it is intended that this 
instrument will be applied in three organizations. These 
organizations will be used as case studies to apply the 
instrument. In each case study, the data regarding the agile 
software development will be gathered and the instrument will 
be filled. The instrument’s score of the agile success will be 
provided to the organizations. During the case studies, there 
will be an evaluation of the use of the instrument and how the 
instrument could be improved. The three organization have 
been identified and contacted regarding this manner and they 
approved to host the case studies. By conducting these case 
studies, the instrument will be validated and further 
improvement might be added to the instrument. 
ACKNOWLEDGMENT  
We would like to thank all the 13 experts whom we 
interviewed during this study for their participation, 
experience, feedback, and knowledge without which this work 
could not be completed. 
REFERENCES 
 
[1] A. Aldahmash, A. Gravell, and Y. Howard, "A review on the 
critical success factors of agile software development," 
In European Conference on Software Process Improvement 
EUROSPI2017, pp. 504-512. Springer, Cham, 2017. 
[2] M. Kunz, R. Dumke, and N. Zenker. "Software metrics for agile 
software development," In Software Engineering, 2008. ASWEC 
2008. 19th Australian Conference on, pp. 673-678. IEEE, 2008. 
[3] K. J. Padmini, H. D. Bandara, and I. Perera, "Use of software 
metrics in agile software development process," In IEEE 
Moratuwa Engineering Research Conference (MERCon), pp. 
312-317, 2015. 
[4] R. Solingen, "Agile GQM: Why Goal/Question/Metric is more 
Relevant than Ever and Why It Helps Solving the Agility 
Challenges of Today's Organizations." In Software Measurement 
and the International Conference on Software Process and 
Product 
Measurement 
(IWSM-MENSURA), 
2014 
Joint 
Conference of the International Workshop on, pp. 271-271. 
IEEE, 2014. 
[5] Beck, Kent, et al. (2001). Manifesto for agile software 
development. 
[6] 
Agile 
101, 
Agile 
Alliance, 
retrieved: 
August, 
2018, 
https://www.agilealliance.org/agile101/. 
[7] T. Dyba, and T. Dingsoyr. "What do we know about agile 
software development?," IEEE software vol. 26, no. 5, pp. 6-9, 
2009. 
[8] J. Highsmith and A. Cockburn, "Agile software development: The 
business of innovation," Computer 34, no. 9, pp. 120-127, 2001. 
[9] Agile State Report. (2018). 12th Annual State of Agile Report, 
State of Agile Report 2018, retrieved: August, 2018, 
https://explore.versionone.com/state-of-agile/versionone-12th-
annual-state-of-agile-report-2. 
[10] A. Begel and N. Nagappan, "Usage and perceptions of agile 
software development in an industrial context: An exploratory 
study," In Empirical Software Engineering and Measurement 
ESEM 2007, pp. 255-264, 2007. 
[11] V. Basili, and V. Weiss, "A methodology for collecting valid 
software engineering data," IEEE Transactions on software 
engineering, vol. 6. pp. 728-738, 1984. 
[12] A. Gray, and S. MacDonell, "GQM++ A Full Life Cycle 
Framework for the Development and Implementation of 
Software Metric Programs." In Proceedings of ACOSM’97 
Fourth Austrailian Conference on Software Metrics, pp. 22-35. 
1997. 
[13] V. Basili, G. Caldiera, and D. Rombach, "Goal question metric 
paradigm," Encyclopedia of software engineering vol. 1, pp. 
528-532, 1994. 
[14] A. Birk, R. Solingen, and J. Jarvinen, "Business impact, benefit, 
and cost of applying GQM in industry: an in-depth, long-term 
investigation at Schlumberger RPS," In Software Metrics 
Symposium 1998, pp. 93-96, IEEE, 1998. 
[15] F. Latum, et al., "Adopting GQM based measurement in an 
industrial environment," IEEE software vol. 15, no. 1, pp. 78-86, 
1998. 
[16] R. Solingen, and E. Berghout, "Integrating goal-oriented 
measurement in industrial software engineering: industrial 
experiences with and additions to the Goal/Question/Metric 
method (GQM)," In Software Metrics Symposium 2001, pp. 246-
258. IEEE, 2001. 
[17] T. Javdani, H. Zulzalil, A. AbdGhani, A. Sultan, and R.Parizi, 
"On the current measurement practices in agile software 
development," arXiv preprint arXiv, pp. 1301-5964, 2013. 
[18] H. Ayed, N. Habra, and B. Vanderose. "Am-quick: a 
measurement-based 
framework 
for 
agile 
methods 
customisation," In Software Measurement and the 2013 Eighth 
International Conference on Software Process and Product 
Measurement (IWSM-MENSURA), pp. 71-80, IEEE, 2013. 
[19] J. Heidenberg, M. Weijola, K. Mikkonen, and I. Porres. "A 
metrics model to measure the impact of an agile transformation 
in large software development organizations," In International 
Conference on Agile Software Development, pp. 165-179. 
Springer, 2013. 
[20] M. Olszewska, J. Heidenberg, M. Weijola, K. Mikkonen, and I. 
Porres, 
"Quantitatively 
measuring 
a 
large-scale 
agile 
transformation," Journal of Systems and Software vol. 117, pp. 
258-273, 2016. 
[21] R.M Fontana, R. Albuquerque, R. Luz, A.C Moises, A. 
Malucelli, and S. Reinehr, “Maturity Models for Agile Software 
Development: What Are They?,” In European Conference on 
Software 
Process 
Improvement EUROSPI 
2018. 
Communications in Computer and Information Science, vol. 
896. Springer, Cham, pp. 3-14, 2018. 
[22] P. Chita, “Agile Software Development – Adoption and 
Maturity: An Activity Theory Perspective,” In Agile Processes 
in Software Engineering and Extreme Programming. XP 2018. 
43
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

Lecture Notes in Business Information Processing, vol. 314. 
Springer, Cham, pp. 160-176, 2018. 
[23] M. Laanti, “Agile transformation model for large software 
development organizations,” In Proceedings of the XP2017 
Scientific Workshops, ACM, pp.19, 2017. 
[24] D. Stankovic, V. Nikolic, M. Djordjevic, and D. Cao, "A survey 
study of critical success factors in agile software projects in 
former Yugoslavia IT companies," Journal of Systems and 
Software vol. 86, no.6, pp.1663-1678, 2013. 
 
44
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-668-2
ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances

