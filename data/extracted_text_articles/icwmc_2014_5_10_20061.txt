Enhancing the Vector-Based Forwarding Routing Protocol for Underwater Wireless 
Sensor Networks: A Clustering Approach 
 
Dina M. Ibrahim, Tarek E. Eltobely, Mahmoud M. Fahmy, and Elsayed A. Sallam  
Computers and Control Engineering Department 
Faculty of Engineering, Tanta University 
Tanta, Egypt 
emails: {dina.mahmoud@f-eng.tanta.edu.eg, tarekt@f-eng.tanta.edu.eg, mfn_288@hotmail.com, and sallam@f-
eng.tanta.edu.eg} 
 
 
 
Abstract— Underwater Wireless Sensor Networks (UWSNs) 
have an important role in different applications, such as 
offshore exploration and ocean monitoring. The networks 
consist of a considerably large number of sensor nodes 
deployed at different depths.  Many routing protocols have 
been proposed in order to discover an efficient route between 
the sources and the sink. In this paper, we propose an 
algorithm to improve the performance of the Vector-Based 
Forwarding (VBF) protocol which we call a Clustering Vector-
Based Forwarding algorithm (CVBF). In the proposed 
algorithm, the space volume of the network is divided into a 
number of clusters where one virtual sink is assigned to each 
cluster. Then, the nodes inside each cluster are allowed to 
communicate with themselves just to reach its virtual sink 
node, which in turn sends the packets to the main sink in the 
network. Simulation results demonstrate that the proposed 
algorithm reduces the energy consumption especially in dense 
networks, increases the packet delivery ratio especially in 
sparse networks, and decreases the average end-to-end delay in 
both sparse and dense networks. These advantages are 
emphasized when the algorithm is compared with four other 
powerful routing algorithms: VBF, Hop-by-Hop VBF (HH-
VBF), Vector-Based Void Avoidance (VBVA), and Energy-
Saving VBF (ES-VBF) routing protocols. 
Keywords-wireless networks; underwater sensor networks; 
multiple clusters;  routing protocols. 
I. 
 INTRODUCTION 
At the end of the twentieth century, wireless sensor 
networks became a hot research area. At the beginning, these 
networks covered only terrestrial applications. However, the 
earth is known to be a water planet, with 70 % of its surface 
being covered with water (principally oceans). With the 
increasing role of oceans in human life, discovering all of the 
ocean parts became of prime importance. On one side, 
traditional approaches formerly used for underwater 
monitoring missions have several drawbacks [ ] and on the 
other side, these harsh environments are not feasible for 
human presence as unpredictable underwater activities, high 
water pressure, predatory fish and vast areas are major 
reasons for un-manned exploration. Due to these reasons, 
Underwater Wireless Sensor Networks (UWSNs) attract the 
interest of many researchers lately, especially those working 
on terrestrial sensor networks [ ]. Over the last three 
decades, significant contribution has been made in the area 
of scientific, commercial, and military applications      In 
particular, highly precise real-time continuous-monitoring 
systems are essential for vital operations such as off-shore oil 
field monitoring, pollution detection, disaster prevention, 
assisted navigation, mine reconnaissance, and oceanographic 
data collection. All these significant applications call for 
building UWSNs. The work done by Akylidiz et al. [4] is 
considered as the pioneering effort towards the deployment 
of sensor nodes for underwater environments.  
Though there exist many network protocols for terrestrial 
wireless 
sensor 
networks, 
the 
underwater 
acoustic 
communication channel has its unique characteristics, such 
as limited bandwidth capacity and high delays, which require 
new efficient and reliable data communication protocols [5]. 
Major challenges in the design of underwater wireless sensor 
networks are: i) the limited bandwidth; ii) the underwater 
channel is severely impaired, especially due to multipath and 
fading problems; iii) high propagation delay in underwater 
which is five orders of magnitude higher than in Radio 
Frequency (RF) terrestrial channels; iv) high energy 
consumption due to longer distances; v) battery power is 
limited and usually batteries cannot be recharged, also 
because solar energy cannot be exploited underwater; vi) 
underwater sensor nodes are prone to failures due to fouling 
and corrosion. All the factors mentioned above, especially 
limited energy, would make designing a routing protocol for 
UWSN an enormous challenge. 
Routing is a fundamental issue for any network, and 
routing protocols are considered to be in charge of 
discovering and maintaining the routes [ ]. Most of the 
research works concerning UWSNs have been on the issues 
related to the physical layer, while issues related to the 
network layer such as routing techniques are a relatively new 
area. Thus, an efficient routing algorithm is to be provided. 
Although underwater acoustic networks have been studied 
for decades, underwater networking and routing protocols 
are still at the infant stage of research.  
A review of underwater network protocols till the year 
2000 can be found in [ ]. Several routing protocols have 
been proposed for underwater sensor networks. A good 
survey until year 2012 about underwater wireless sensor 
routing techniques is presented in [ ]. Here, Ayaz et al. 
introduced an overview of the state of the art of routing 
protocols in UWSNs and thoroughly highlighted the 
advantages, functionalities, weaknesses and performance 
98
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

issues for each technique. Based on network architecture, 
UWSNs routing protocols are classified into: location-based, 
flat, and hierarchical routing protocols. Vector-Based 
Forwarding (VBF) protocol has been suggested in order to 
solve the problem of high error probability in dense networks 
[ ]. It is a location-based routing protocol. Here an idea of a 
virtual routing pipe from the source to the destination is 
proposed, and all the flooding data packets are carried out 
through this pipe. An enhanced version of VBF called Hop-
by-Hop VBF (HH-VBF) has been proposed [7]. They use the 
same concept of virtual routing pipe as used by VBF, but 
instead of using a single pipe from source to destination, 
HH-VBF defines per hop virtual pipe for each forwarder    . 
Another extension of VBF protocol is introduced in [9] 
called Vector-Based Void Avoidance (VBVA) routing 
protocol which extends the VBF routing protocol. It 
addresses the routing void problem in underwater sensor 
networks. VBVA assumes two mechanisms, vector-shift and 
back-pressure, to handle voids. In [10], an energy-aware 
routing algorithm, called Energy-Saving Vector Based 
Protocol (ES-VBF), is proposed. In this protocol, Bo et al. 
put forward an energy-aware routing algorithm to save 
network energy. It takes both residual energy and location 
information into consideration, which shows a promising 
performance in balancing network energy consumption and 
packet reception ratio. 
Other UWSNs routing protocols, such as Dynamic 
Source Routing (DSR), Time division Multiple Access 
(TDMA), Focused beam Routing (FBR), Directional 
Flooding-Based (DFR), and Depth-Based Routing (DBR) 
are found in [ ][ ][  ][  ].  
The remainder of this paper is organized as follows. In 
Section II, the functionality and performance issues of VBF, 
HH-VBF, VBVA, and ES-VBF location-based routing 
protocols which will be used in a comparison with our 
algorithm are discussed. Section III presents the details of the 
proposed algorithm. In Section IV, we show the performance 
results of the proposed algorithm. Finally, we draw the main 
conclusions in Section V. 
II. 
REVIEW OF LOCATION-BASED ROUTING PROTOCOLS 
In this section, we discuss in brief four location-based 
routing protocols which we will choose to compare our 
algorithm with. These protocols are: 
A. Vector-Based Forwarding (VBF) Routing Protocol 
VBF is a location-based routing approach for UWSNs 
proposed by Xie et al. [ ]. In this protocol, state information 
of the sensor nodes is not required since only a small number 
of nodes are involved during packet forwarding. Data 
packets are forwarded along redundant and interleaved paths 
from the source to the sink, which helps handling the 
problem of packet losses and node failures. It is assumed that 
every node previously knows its location, and each packet 
carries the location of all the nodes involved including the 
source, forwarding nodes, and final destination. The 
forwarding path is specified by the routing vector from the 
sender to the target. As soon as a packet is received, the node 
computes its relative position with respect to the forwarder.  
Recursively, all the nodes receiving the packet compute their 
positions. If a node determines that it is close enough to the 
routing vector, it puts its own computed position in the 
packet and continues forwarding the packet; else, it simply 
discards the packet. In this way, all the packet forwarders in 
the sensor network form a “routing pipe”, the sensor nodes in 
this pipe are eligible for packet forwarding, and those which 
are not close to the routing vector do not forward. Fig. 1 
illustrates the basic idea of VBF. In this figure, node S  is the 
source, and node S  is the sink. The routing vector is 
specified by S S . Data packets are forwarded from S  to S . 
Forwarders along the routing vector form a routing pipe with 
a pre-controlled radius, W.   
 
Figure 1. VBF routing protocol for UWSNs. 
Additionally, a localized and distributed self-adaptation 
algorithm is developed to enhance the performance of VBF 
[ ]. The self-adaptation algorithm allows each node to 
estimate the density in its neighborhood and forward 
packets adaptively. This algorithm is based on the definition 
of a desirableness factor, α [ ]. This factor measures the 
suitability of a node to forward packets. Given a routing 
vector S S  and forwarder F, the desirableness factor of a 
node A is: 
 
  
 
  
        
 
                                                                                           
 
where P is the projection length of A onto the routing vector 
S S , d is the distance between node A and node F, θ is the 
angle between vector FS  and vector FA, R is the 
transmission range, and W is the radius of the routing pipe. 
Fig. 2 represents the different parameters used in the 
definition of the desirableness factor [ ]. From the definition, 
we see that for any node close enough to the routing vector, 
i.e., inside the pipe (  ≤ P ≤ W), the desirableness factor of 
this node is in the range of [0, 3] depending on position of 
node A.  
 
S1 
S0 
W 
Not close to 
the vector => 
no forward 
99
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

 
Figure 2. Desirableness factor in self-adaptation algorithm. 
In this algorithm, when a node receives a packet, it first 
determines if it is eligible for packet forwarding (i.e., close 
enough to the routing vector) [ ][  . If yes, the node then 
holds the packet for a time period, Tadaptation, related to its 
desirableness factor and other network parameters    . In 
other words, each qualified node delays forwarding the 
packet by a time interval calculated as follows: 
            √         
   
                                                                       
where Tdelay is a pre-defined maximum delay, v0 is the 
propagation speed of acoustic signals in water, i.e., 
1500m/s, and d is the distance between this node and the 
forwarder [7]. Principally, this self-adaptation algorithm 
gives higher priority to the desirable node to continue 
forwarding the packet. The theoretical analysis can be found 
in [ ]. 
VBF has many essential drawbacks. First, using a virtual 
routing pipe from source to destination can affect the routing 
efficiency of the network with different node densities. In 
some spaces, if node deployment is sparser or become sparse 
due to some node movement, then it is possible that very few 
or even no node will lie within that virtual pipe, which is 
responsible for the data forwarding; even it is possible that 
some paths may exist outside the pipe. Eventually, this will 
result in small data deliveries in sparse spaces. Second, VBF 
is very sensitive about the routing pipe radius threshold, and 
this 
threshold 
can 
affect 
the 
routing 
performance 
significantly; such feature may not be desirable in the real 
protocol developments. Furthermore, some nodes along the 
routing pipe are used again and again in order to forward the 
data packets from sources to the sink, which can exhaust 
their battery power. 
B. HH-VBF Routing Protocol 
The need to overcome two problems encountered by the 
VBF, i.e., small data delivery ratio in sparse networks, and 
sensitivity to the routing pipe’s radius, the HH-VBF (hop-by-
hop VBF) is proposed by Nicolaou et al. [7]. HH-VBF forms 
the routing pipe in a hop-by-hop method, enhancing the 
packet delivery ratio significantly. Although it is based on 
the same concept of routing vector as VBF, instead of using 
a single virtual pipe from the source to the sink, it defines a 
different virtual pipe around the per-hop vector from each 
forwarder to the sink. In this protocol, each node can 
adaptively make packet forwarding decisions based on its 
current location. This design can directly bring the following 
two benefits: First, since each node has its own routing pipe, 
the maximum pipe radius is the transmission range. Second, 
in sparse networks, HH-VBF can find a data delivery path 
even so the number of eligible nodes may be small, as long 
as there exists one in the network. 
In HH-VBF, the routing virtual pipe is redefined to be a 
per-hop virtual pipe, instead of a unique pipe from the source 
to the sink [7]. When some areas of the network are not 
occupied with nodes, for example there exist “voids” in the 
network, even a self-adaptation algorithm may not be able to 
route the packets. In such a case, a forwarder is unable to 
reach any node other than the previous hop. Although 
simulation results show that HH-VBF considerably produces 
better results for packet delivery ratio, but still it has an 
inherent problem of routing pipe radius threshold, which can 
affect its performance. Moreover, due to its hop-by-hop 
nature, HH-VBF is not able to add a feedback mechanism to 
detect and avoid voids in the network and energy efficiency 
is still low compared to VBF      
C. VBVA Routing Protocol 
Xie et al. [ ] introduce a Vector-Based Void Avoidance 
(VBVA) routing protocol, which extends the VBF routing 
protocol to handle the routing void problem in UWSNs. 
VBVA assumes two mechanisms, vector-shift and back-
pressure. The vector-shift mechanism is used to route data 
packets along the boundary of a void. The back-pressure 
mechanism routes data packets backward to bypass a 
concave void. VBVA handles the routing void problem on 
demand and thus does not need to know network topology 
and void information in advance. Hence, it is very robust to 
cope with mobile voids in mobile networks. Simulation 
results in [ ] show that VBVA can handle both concave and 
convex voids effectively and efficiently in mobile 
underwater sensor networks only when these voids are inside 
the forwarding pipe, while the voids outside the forwarding 
pipe is not solved by VBVA. 
D. ES-VBF Routing Protocol 
To solve the energy problem in UWSN, Bo et al.    ] put 
forward an energy-aware routing algorithm, called Energy-
Saving Vector-Based Protocol (ES-VBF). The main purpose 
of this routing protocol is saving energy. ES-VBF takes both 
residual energy and localization-based information into 
consideration while calculating the desirableness factor as in 
(3), which allows nodes to weigh the benefit for forwarding 
packets. The ES-VBF algorithm modifies the calculation of 
the desirableness factor of (1) for VBF protocol to be 
calculated if the node residual energy is smaller than 60% of 
initial energy as: 
      (  
      
             )  (  
 )  (        
 
)        
where energy is the residual energy of nodes and 
initialenergy is the initial energy of nodes. By simulation 
results in [1 ], it is shown that the performance is promising 
in balancing network energy consumption and packet 
 
 
W 
W 
Source (S1) 
Sink (S0) 
        A 
 
       d    θ 
                    P    
     R     F 
100
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

reception ratio. This means that the ES-VBF protocol saves 
energy in an efficient manner. At the same time, there is a 
small falling in packet reception ratio, which needs further 
research aiming at finding a better solution not only 
reducing energy consumption but also achieving high packet 
reception ratio. 
III. 
CLUSTERING VBF ROUTING ALGORITHM: THE 
PROPOSED ALGORITHM 
In this paper, we propose an algorithm for UWSNs which 
we call a Clustering Vector-Based Forwarding algorithm 
(CVBF). The objective of the proposed routing algorithm is 
to reduce energy consumption, increase the packet delivery 
ratio, and decrease the average end-to-end delay. This is 
emphasized through comparison with VBF, HH-VBF, 
VBVA, and ES-VBF routing protocols. 
According to our approach, the whole network is divided 
into a predefined number of clusters. All sensor nodes are 
assigned to the clusters on the basis of their geographic 
location, and then one node at the top of each cluster is 
selected as a virtual sink for that cluster. The rest of nodes in 
each cluster transmit the data packets to their respective 
cluster virtual sink. The routing inside each cluster follows 
the VBF routing protocol discussed in Section II. This 
implies that the concept of using one virtual routing pipe for 
all network nodes in VBF is replaced by defining one virtual 
routing pipe for each cluster to forward the packets from any 
node in the cluster to its virtual sink in that cluster. We 
assume that the routing pipe radius is equal to the 
transmission range of a node. Each intermediate node in any 
cluster selects the next hop to a node inside its cluster. In this 
way, the network will have many virtual routing pipes, one 
pipe per cluster, which guarantees forwarding the packets in 
the upward direction instead of forwarding the packets 
widely across the network nodes in the VBF algorithm. It is 
well expected that this will decrease the average end-to-end 
delay node and reduce the number of hops to reach the 
virtual sink node which will enhance the network 
performance. In addition, CVBF avoid voids in the network 
because each node belongs to a specific cluster. 
Also, if a small number of nodes are available in the 
neighborhood, CVBF can still find a data delivery path. 
After receiving the data packets from cluster sensor nodes, 
cluster virtual sinks perform an aggregation function on the 
received data, and transmit them towards the main sink node 
using single-hop routing. Cluster virtual sink nodes are 
responsible for coordinating their cluster members and 
communicating with the main sink node.  
The proposed algorithm is stated in the following steps: 
Step1: Clustering the Nodes 
This step involves dividing the network into groups of 
nodes according to their geographic location producing non-
overlapping clusters excluding the main network sink which 
is allocated on the water surface.  The following values are 
given: the network space X×Y×Z, node transmission range, 
routing pipe width, and the node speed. We divide the 
network space into equal space volumes; in the form of 
cuboids (each cuboid has four rectangular sides and two 
square ones). The division is based on the values of X and Y 
coordinates, and the cluster width, cw, as shown in Fig.   (a). 
 
Figure  . A CVBF network area: (a) Network area with 9 clusters, (b) 
One cluster and its virtual sink 
Choosing the best number of clusters is proposed as: 
 
  
    
                                                                                                                    
 
where X×Y is the total surface area of the network and (cw)  
is the area of the cluster surface. The cluster width is thus 
calculated as:  
          
   √(
   
 )                                                                                         
It is given that the surface area is square; therefore, we 
choose N as a number raised to the power of two: 2 ,   ,   , 
or 5 . Here, we choose N that gives the value of cw as near 
as possible to √ R in order to make sure that the virtual 
pipe of the cluster includes all the nodes inside that cluster, 
as shown in Fig.  .  
 
Figure  . A horizontal section of cluster virtual pipe. 
As an extreme case, if we choose one cluster (N=1) only, 
then our algorithm reduces to the VBF protocol. In other 
words, our algorithm is a good generalization to VBF 
protocol. 
 
(a) Network area with 9 clusters       (b) One cluster and its virtual sink 
 
Main sink 
Cluster virtual sink node 
Cluster members’ nodes 
Cluster source node 
(0,0,0)                                        X 
Y 
Z 
cw 
cw 
 
 
 
 
 
 
 
 
 
 
        cw 
(Xmin, Ymax ,0) 
 
 
(Xmin,Ymin,0)    cw   ( Xmax,Ymin,0) 
 
(Xc,Yc,0) 
Cuboids axis 
(Xc,Yc,Zmax) 
101
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

Step2: Selecting the Cluster Virtual Sink 
For each cluster (cuboid) which has a space volume 
cw×cw×Z, we choose the nearest node to the main sink to be 
a cluster virtual sink. As shown in Fig. 3 (b), the surface 
corner coordinates of the cluster are: (Xmin, Ymin, 0), 
(Xmax, Ymin, 0), (Xmin, Ymax, 0), and (Xmax, Ymax,      
All other nodes can send data to their corresponding 
virtual sink following the mechanism of VBF and depending 
on the value of its desirableness factor α  If more than one 
node have the same depth position, we choose the nearest 
node to the cuboid axis, in which its surface point 
coordinates is the point (Xc, Yc, 0). The source node of the 
cluster is fixed at the position (Xc, Yc, Zmax).  
Step3: Calculating the Cluster’s Maintenance Time 
This step takes into consideration the node mobility that 
affects network topology and performance, thus necessitating 
a cluster maintenance algorithm. For a correct network 
operation, the maintenance algorithm should be executed 
simultaneously in all clusters. In this step, we propose a 
suitable periodical time which we call maintenance time, Tm. 
This time is enough to move a node from its cluster to 
another cluster according to speed and maximum distance of 
the node. Each node in the cluster checks its belonging to 
that cluster after the periodical time Tm. If a node belonging 
to a cluster moves away from that cluster, it naturally has 
two choices. The first choice is to enter another neighboring 
cluster, and so we transfer this node from the old cluster to 
the new cluster. The second choice is that it exits from all the 
network space, and so we leave this node in the old cluster. 
To calculate Tm, we divide the known maximum distance of 
a node movement, dmax, by the current speed of the node, S: 
   
    
 
                                                                                                                                                           
In other words, all the nodes with positions near the cluster 
boundaries are prone to exit from their own cluster and enter 
to other clusters. To avoid exiting a node from the network 
space, we suggest to carefully choose the node positions to 
be far from the network space boundaries. 
The proposed algorithm is summarized in the Pseudocode of 
Fig. : 
 
Pseudocode 
Step 1: Clustering the nodes 
   Given network space X x Y x Z and node 
transmission range R. 
   Calculate cw=√        where N=  ,   ,   , or 
  , and cluster space = cw×cw×Z 
   For each cluster, i=1 to N with step 1 
     Given Xi takes values from Ximin to Ximax, 
and Yi takes values from Yimin to Yimax 
     Ki is the number of nodes in the space 
Xi×Yi×Z 
 
Step 2: Selecting the cluster virtual sink 
   Sort the nodes, Ki, according to the values of their 
Z coordinate to determine the minimum value of Z 
and call it Zmin. 
   Count the number of nodes, Kiz, in which their Z 
coordinate equal Zmin. 
   If (Kiz=1) 
Then 
         This node is the virtual sink of cluster i 
Else 
(a) Calculate Xc=[(Ximax-Ximin)/2], and 
Yc=[Yimax-Yimin)/2] to get the points of the 
cluster axis, (Xc,Yc,Zmin) and (Xc,Yc,Z) 
(b) Calculate the nearest node to point 
(Xc,Yc,Zmin) from the given Kiz to become 
virtual sink of cluster i  
 
Step 3: Calculating the cluster’s maintenance time 
   If a node is near to the cluster axis and its mobility 
does not cause exit this node from that cluster or If 
a node moves outside the whole network space 
Then 
   This node is still belongs to its original cluster 
Else  
   If a nodes exits from the cluster 
   Then 
                (a)Given the node speed, S, and the maximum 
distance of any node, dmax, 
             (b) Calculate Tm=dmax/S 
             (c) For J=0 to Simulation time with step Tm 
                   For each node in the cluster i and has 
coordinates (Xi,Yi,Z)  
                          If (Ximin>=Xi>=Ximax and 
                               Yimin>=Yi>=Yimax) 
                            Then 
                           This node is still in the cluster 
                       Else 
                           Remove this node from cluster i  
                           and enter it to the suitable               
                           neighboring cluster 
   All the nodes in cluster i forward the packets to 
its virtual sink following the mechanism of VBF 
routing algorithm 
   All the virtual sinks forward the packets to the 
main sink 
 
Figure  . Pseudocode of the proposed routing protocol CVBF. 
IV. 
PERFORMANCE EVALUATION 
Performance is quantified through measures of energy 
consumption, packet delivery ratio, and average end-to-end 
delay    ]. The success rate is the ratio of the number of 
packets successfully received by the sink to the number of 
packets generated by the source. The energy consumption is 
the total energy consumed by the sensor network nodes. The 
average delay is the average end-to-end delay for each 
packet received by the sink.  
   Simulation is performed by the underwater package Aqua-
Sim of ns-     ][  ]. In all our simulations, we set the 
parameters similar to UWM1000 LinkQuest Underwater 
Acoustic Modem [  ]. The bit rate is 10 kbps, and the 
transmission range R is 100 m. The energy consumption on 
102
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

the sending mode, receiving mode, and idle mode are 0.6J, 
0.3J, and 0.01J, respectively. The data packet size is 76 
bytes and control packet is 32 bytes. The pipe radius in each 
cluster is 100 m. In all simulation experiments, sensor nodes 
are randomly distributed in a space volume of     m ×    
m ×    m. They can move in a two-dimensional space, i.e., 
in the X-Y plane (the most common mobility pattern in 
underwater applications) with the medium node speed S in 
the range (2m/s-5m/s). The maximum distance of a node 
movement dmax is 5m. The number of clusters N used is 9 
clusters (it is found in our experiments that the number N=9 
give better performance than that for N=1, 4, 16, 25). The 
cluster width cw is √                m. We have 
one data source, one main sink, and 9 virtual sinks. For each 
setting, the results are averaged over  0 runs with a 
randomly generated topology. The total simulation time for 
each run is      s. The simulation results are plotted in 
Figures  ,  , and  . 
 Fig.   depicts the total energy consumption as the 
number of sensor nodes varies. The energy consumption 
increases with the number of nodes since more nodes are 
involved in packet forwarding. On the other hand, this figure 
shows that the energy consumption for the proposed 
algorithm is less than that in VBF and HH-VBF routing 
protocol only on dense networks, when the number of nodes 
is greater than     nodes, indicating that the CVBF 
algorithm can save more energy with high node density, as 
shown in Table I, extracted for Fig.  . 
 
Figure  . CVBF energy consumption vs. number of sensor nodes. 
TABLE I.  
REDUCTION IN TOTAL ENERGY CONSUMPTION 
No. of 
Nodes 
Total Energy Consumption(Joule) 
VBF 
HH-
VBF 
VBVA 
ES-VBF 
Proposed 
CVBF 
Reduction 
percentage 
   
       
       
       
       
  0    
-  % 
    
       
       
        
       
       
-  % 
    
        
        
     
        
 1 0    
   % 
    
        
       
       
       
  1     
  % 
    
        
       
       
        
   0 0  
  % 
Fig.   shows the packet delivery ratio with the number 
of sensor nodes. It is seen that the packet delivery ratio 
increases with the increase of the number of nodes. When 
more than     nodes are deployed in the space, the packet 
delivery ratio remains above 90% for both ES-VBF routing 
protocol and CVBF algorithm. Table II, extracted from Fig. 
 , shows that our algorithm gives better results in packet 
delivery ratio than VBF, HHVBF, VBVA, and ES-VBF 
protocols. 
 
Figure  . CVBF packet delivery ratio vs. number of sensor nodes. 
TABLE II.  
INCREASE IN PACKET DELIVERY RATIO 
No. of 
Nodes 
Packet Delivery Ratio (%) 
VBF 
HH-
VBF 
VBVA 
ES-VBF 
Proposed 
CVBF 
Increasing 
percentage 
   
   
   
   
   
   
  % 
    
   
   
   
   
   
  % 
    
   
   
   
   
   
   % 
    
   
   
   
   
   
   % 
    
   
   
   
   
     
    % 
Fig.   describes the average end-to-end delay with the 
number of sensor nodes. It is seen that the average end-to-
end delay decreases with the increase of node density in the 
network. When the number of sensor nodes increases, the 
paths from the source to the sink are closer to the optimal 
path  α=  ; therefore, the average end-to-end delay 
decreases, as shown in Table III, extracted from Fig.  . 
 
Figure  . CVBF average end-to-end delay vs. number of sensor nodes. 
0
1000
2000
3000
4000
5000
6000
7000
8000
Energy Consumption (Joule) 
Number of Sensor Nodes 
CVBF
ES-VBF
VBVA
HHVBF
0
10
20
30
40
50
60
70
80
90
100
Packet Delivery Ratio (%) 
Number of Sensor Nodes 
CVBF
ES-VBF
VBVA
HHVBF
VBF
0.62
0.64
0.66
0.68
0.7
0.72
0.74
0.76
Average End-to-End Delay (sec) 
Number of Sensor Nodes 
CVBF
ES-VBF
VBVA
HHVBF
VBF
103
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

TABLE III.  
REDUCTION IN AVERAGE END-TO-END DELAY 
No. of 
Nodes 
Average End-to-End Delay(sec) 
VBF 
HH-
VBF 
VBVA 
ES-VBF 
Proposed 
CVBF 
Reduction 
percentage 
   
      
      
     
      
0   1 
   % 
    
      
      
      
     
0  11 
     
    
      
      
    
      
0     
     
    
      
      
      
      
0     
     
    
      
      
      
      
0     
     
We evaluate the performance of CVBF under various 
network scenarios. The simulation results show that CVBF 
significantly exhibits a better performance than VBF, HH-
VBF, VBVA, and ES-VBF protocols since it has: lower 
energy consumption, higher packet delivery ratio, and lower 
average end-to-end delay. 
Calculating the cluster width cw depends on two 
parameters: the surface area of the network X×Y and 
choosing the number of clusters N. We choose a value of N 
for which the cluster width is nearest to the value of √ R. 
We conclude this after examining different values of N. This 
is because each node can transmit the data packets only to 
the neighbors allocated in its transmission range.  
V. 
CONCLUSIONS 
In this paper, we propose a clustering vector-based 
forwarding algorithm to improve the performance of the 
location-based routing protocol in underwater wireless 
sensor networks. In the proposed approach, the space area of 
the network is divided into clusters where one virtual sink is 
assigned to each cluster. Choosing the number of clusters 
depends on the value of the network surface area and the 
transmission range of the sensor node. The nodes inside each 
cluster are allowed to communicate with themselves 
following the concept of VBF protocol only to reach its 
virtual sink node, which sends the packets to the main sink 
node in the network. Due to node mobility, some nodes may 
move outside their cluster and enter another cluster. 
Therefore, we check the node position periodically as a 
maintenance step to allocate each node to its suitable cluster. 
Simulation results demonstrate that the proposed 
algorithm efficiently reduces energy consumption especially 
in dense networks, increases the packet delivery ratio 
especially in sparse networks, and decreases the average end-
to-end delay in both sparse and dense networks, in 
comparison with the four routing algorithms VBF, HH-VBF, 
VBVA, and ES-VBF. It is interesting to note that our 
multiple-cluster algorithm is a good generalization to the 
VBF protocol. The VBF results from our algorithm by 
adopting the special case of single-cluster manipulation. 
 
 
 
ACKNOWLEDGMENT 
We would like to thank the (anonymous) reviewers for their 
helpful comments. 
REFERENCES 
    E  M  Sozer, M  Stojanovic, and J  G  Proakis, “Underwater 
Acoustic Networks,” IEEE Journal of ocean engineering, vol. 
25, Jan. 2000, pp.   -  . 
    M. Ayaz, I. Baig, A. Abdullah, and I. Faye, “A Survey on 
Routing 
Techniques 
in 
Underwater 
Wireless 
Sensor 
Networks,” Journal of Network and Computer Applications, 
vol. 3, no. 4,     , pp.     -    ‏. 
    M  Ayaz and A  Abdullah, “Underwater Wireless Sensor 
Networks: Routing Issues and Future Challenges,” Proc. of 
the 7th international conference on advances in mobile 
computing and multimedia. ACM, Malaysia,     , pp. 370-
   . 
    I. F. Akyildiz, D. Pompili, and T  Melodia, “Underwater 
Acoustic Sensor Networks: Research Challenges,” Ad Hoc 
Networks (Elsevier), vol. 3, no. 3, March.     , pp. 257–   .  
    D  Pompili, T  Melodia, and I  F  Akyildiz, “Distributed 
Routing Algorithms for Underwater Acoustic Sensor 
Networks,” IEEE Trans  On wireless communications, vol. 9, 
no. 9, Sept.     , pp. 2934-    . 
    P. Xie, J.-H. Cui, and L  Lao, “VBF: Vector-based 
Forwarding Protocol for Underwater Sensor Networks,” 
International conference on networking (IFIP networking), 
    , pp. 1-  . 
    N. Nicolaou, A. See, P. Xie, J.-H. Cui, and D. Maggiorini, 
“Improving the Robustness of Location-based Routing for 
Underwater Sensor Networks,” Proc  Of the OCEANS’  ,  
Europe, June     , pp. 1- .  
    A. Sharma and H  A  Gaafar, “A Survey on Routing Protocols 
for Underwater Sensor Networks,” International Journal of 
Computer Science & Communication Networks,vol. 2, no. 1, 
    , pp.   -  . 
    P. Xie, Z. Zhou, Z. Peng, J.-H. Cui, and Z. Shi, “Void 
Avoidance in Three-dimentional Mobile Underwater Sensor 
Networks,” Proc  of the  th international conference of 
wireless algorithms, system, and applications (WASA 2009), 
USA, August     , pp. 305-   . 
     W. Bo, L. Yong-mei, and J. Zhigang, “ES-VBF: An Energy 
Saving Routing Protocol,” Proc. of the 2012 International 
Conference on Information Technology and Software 
Engineering, 2012, pp. 87-  . 
     E  A  Carlson, P P  Beaujean and E  An , “Location-aware 
Routing Protocol for Underwater Acoustic Networks,” Proc. 
of the OCEANS,     , pp. 1- . 
     R. Thumpi, R.B. Manjula, and S.M. Sunilkumar, “A Survey 
on Routing Protocols for Underwater Acoustic Sensor 
Networks,” International journal of recent technology and 
engineering (IJRTE), vol. 2, May     , pp. 170-   . 
     NS- : Network Simulator, http://www.isi.edu/nsnam/ns, 
last access:   th April       
     P  Xie, et al , “Aqua-sim: A Ns-2 based Simulator for 
Underwater 
Sensor 
Networks,” 
Proc  
of 
IEEE/MTS 
OCEANS, 2009, pp. 1- . 
     LinkQuest, http://www.link-quest.com, last access:   th 
April      
 
 
104
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

