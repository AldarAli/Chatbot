 A Model of a Source-Retrial Open Exponential Queuing Network with Finite 
Shared Buffers in Multi-Queue Nodes  
   
Miron Vinarskiy  
Institute of Control Sciences of Russian Academy of Science 
Moscow, Russia 
Corresponding address: 3709 Mariana Way, Santa Barbara, California, 93105 USA 
e-mail: mironvin@yahoo.com 
 
 
Abstract—  We  study  a  model of  an  open exponential queuing 
network  where  each  node  comprises  several   M/M/1 queues 
that  share  a  common   waiting   space   (a  buffer)  of   limited 
capacity.  A  customer  arriving  to a node with a fully occupied 
buffer  is blocked and   re-injected by  the source  after  a delay 
into  the  network.  The process  is repeated until  the customer 
completes his service in  the network  and exits it. Input flow to 
each node  is a  superposition of  the external  Poisson flow,  the 
flows   coming    from   other   nodes,    and   the    retrials.  The 
assumption  made  is  that   input  flow  to  a node  is  a Poisson 
process.     Under    this       assumption,      two     results      are 
presented:      an     analytical    evaluation    of    the     network 
throughput   and   a  method  of   an  approximate  analysis   of 
the   network   model.   The   approach  for  both  is   based   on 
iteratively   solving    a   system   of   non-linear  equations    for 
unknown   nodal    flow  rates.   Existence   and uniqueness    of 
the   solutions,    obtained    by   the   iterative  algorithms,   are 
rigorously   proven   in   both   cases.    Required  network  and 
node     performance     characteristics    are    presented.    The 
method        provides          low      bound         estimates         for  
a      moderately         loaded         (non-congested)         network.       
   
      
Keywords- queuing network; multi-queue node; finite buffer; 
retrial; delay. 
I. 
 INTRODUCTION 
     Limited waiting spaces (finite buffers) in real-life nodes 
(service centers) lead to a so-called “blocking” when a 
customer cannot get into a fully occupied buffer. In many 
applications, such as computer communications, telephone 
systems, and distributed data processing a blocked customer 
tries to re-enter a network after some random time. The 
framework of retrial queues and networks seems to be an 
adequate approach for these applications. Most of the work 
on retrial models has been done on single queues (see, e.g., 
[1], [2], [3]). Retrial queuing network models have mostly 
concentrated on tandem queues. An exact analysis of these 
network models does not seem to be feasible for the general 
case, and therefore almost all known retrial tandem models 
use approximate approaches (see, e.g., [4], [5]). 
     The works by Irland et al. [4] and Avrachenkov et al. [5] 
give some details for tandem queuing systems with retrials 
of blocked customers. Irland et al. [4] considered a single 
isolated source-destination path in a packet-switching 
network as a tandem of single-queue nodes with a limited 
waiting space in each node. They compared two retrial 
techniques for a blocked customer (packet): local retrials 
(switch-retransmission) 
and 
source 
retrials 
(host-
retransmission). The former retransmits a customer backup 
copy from the preceding switch, while the latter resends it 
from the network subscriber.  Assuming Poisson flows in 
each node, they used a decomposition of a tandem queue 
network into simple M/M/1/N node models to approximate 
the unknown node input rates. 
     Avrachenkov et al. [5] considered a tandem network of 
two M/M/1/1 queues with blocking and with an M/M/1/   
source-retrial (orbit) queue. The model formalized the 
interaction of data flow generated by a short TCP 
connection with a network of finite buffers. Authors 
explicitly solved the model and derived a stability condition. 
For more complex networks, it was suggested to use a fixed 
point approximation [6] with an assumption of a Poisson 
flow in each queue. It was shown in [7] that a fixed point 
approximation for a retrial queue with a Poisson assumption 
works well only when the nominal load is small. This fact 
was confirmed in [8] for a tandem network with an arbitrary 
number of M/G/K/K queues. 
     Lam [9] studied a model of a packet-switching network 
with local retrials and multi-queue nodes. A blocked 
customer (packet) is unlimitedly retransmitted from an 
adjacent node until the nodal buffer becomes open. Under 
the Poisson flow assumption, a system of non-linear 
equations was built for the unknown nodal blocking 
probabilities, and solved iteratively. No proof of iterations 
convergence was presented.  
     The network model under study in this paper is an 
extension of the single-class queuing network model with 
losses and multi-queue nodes [10] to the case of source-
retrials. The model description and solution methodology 
have a lot in common with the model in [10], but we focus 
specifically on the source-retrial. Adding retrials to the 
network model with losses makes flow balance equations 
more complex. In turn, it requires different approaches to 
17
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

prove the solution. The goal of the paper is to show that the 
model can be solved analytically by an approximate 
numerical method.  
     Blocked customers are dispatched back to the network 
after a random delay in the M/M/   retrial queue with 
infinite exponential servers. Thus, the model uses the classic 
retrial policy: each blocked customer generates a stream of 
repeated requests independently of the rest of the customers 
in the retrial group. 
     The model can be used for performance evaluation of 
distributed data processing systems with nodes implemented 
as shared-memory architecture multiprocessor service 
centers, 
telecommunication 
systems 
and 
computer 
communication networks with source-retransmission of 
undelivered packets. In a distributed data processing system 
a customer (data request) can travel between nodes in order 
to get access to a distributed database. Upon completing its 
service by a node processor, a customer can leave the 
system from the node, or continue service at either the next 
node, or at the same node by a different processor. 
   Our network model is based on multi-queue nodes with a 
finite common buffer in each node. Buffer sharing policy is 
Complete Sharing (CS), where no restrictions on buffer 
occupancy are imposed for any queue. Output queuing 
structures in shared-memory switches/routers are good 
examples of such nodes [11]. In this application, a packet 
memory pool is shared among output ports.  
     Retrial queues are very complex objects. Even for a 
single retrial M/M/C queue, a closed form solution is only 
available for the number of servers C  2. An approximate 
analysis for C>>2 is performed by replacing a retrial queue 
with a loss queue, under a Poisson input. The latter 
represents the mixture of a primary Poisson flow and 
retrials. This approximation works really well for not 
overloaded queue [1]. 
     To make our network model analytically tractable, we 
also use a Poisson process to represent a node input. The 
input flow is a superposition of an external Poisson stream, 
a traffic coming from other nodes, and a retrial flow. Under 
this assumption, two results are presented: - 1) an analytical 
evaluation of the network throughput, which determines a 
permissible network load; - 2) a method of an approximate 
analysis of the network model. In both cases, the result is 
achieved by decomposing the network into separate simple 
nodal models and combining the nodal results in a system of 
non-linear equations for the unknown nodal flow rates. It is 
shown that the systems can be solved iteratively, and a proof 
is provided that the iterations converge to a unique solution. 
The solution for the nodal flow rates in the network model 
is used to receive several all-network and node performance 
measures. 
     The approach provides reasonable low bound estimates 
for a moderately loaded (non-congested) network. We use 
the term “moderately loaded” to approximately define a 
network mode, where an internal traffic, including retrials, 
loads any server in a node under 80% of capacity, and node 
blocking probabilities lower than 0.05. 
     The remainder of this paper is organized as follows. In 
Section II, we provide a formal description of the network 
model, including notation and the node product-form state 
distribution. In Section III, we present equations and a 
computational procedure for the network throughput. In 
Section IV, we concentrate on the network flow balance 
equations. Direct substitution iterations are used to solve the 
equations. In Section V, we define the required network 
performance measures. In Section VI, we present some 
numerical results computed by our analytic method in 
comparison with simulation results. 
II. 
NETWORK MODEL 
     The network model under consideration here is a 
modification of the single-class queuing network model 
with losses [10]. Some model notation and description from 
[10] is included in this paper to provide a clear foundation 
for the model’s expansion.       
     Let us consider an open queuing network with W nodes.  
The retrial (orbit) queue Figure 1 formalizes the random 
delay associated with a retrial of a blocked customer. The 
queue has infinitely many exponential servers (M/M/  ) 
with service rate
0
 . 
     The node-i (i = 1, 2,.., W ) comprises 
i
Q  > 1 of 
M/M/1 queues sharing finite common buffer of size 
i
N  
units Figure 1. The buffer contains all 
i
Q queues, including 
customers in service. The queuing system q (q = 1,2,..,
i
Q ) 
is characterized by an exponentially distributed service time 
with mean
1
q
, and queuing discipline FCFS (first come 
first served). 
        A customer arriving at node-i when its buffer is fully 
occupied is blocked, and transferred to the orbit queue that 
dispatches the customer back to the network after some 
random time. Retrials are distributed between nodes with 
probabilities
0i
, i=1,2,.., W , 

W
i
i
1
0
= 1.  
     If there are free spots in the buffer of node-i, then an 
arriving customer joins the q -th queue system with 
 probability
iq
, q =1,2.., 
i
Q , 

i
Q
q
iq
1

= 1. Customers 
initially arrive to the network from an external source, 
which generates a Poisson flow with rate
0
 . This flow is 
distributed between nodes according to probabilities
i
p0 , 
 i = 1, 2,.., W , 

W
i
i
p
1
0 = 1. A customer, that has completed 
his service in node-i, is either transferred to node-j with 
18
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

routing probability
ij
p , i,j = 1, 2,.., W , 

W
j
ij
p
1
 1, or 
completes his service in the network and leaves with 
probability 
piE
 = (1 - 

W
j
ij
p
1
) > 0. 
     Figure 1 shows traffic in a node in the network. Node-i 
receives an “original” Poisson flow from an external source 
with the rate
0 p0i
. A secondary flow (dashed lines) is 
produced by other nodes in the network and possibly by 
node-i itself, as well as by the source-retrials. Superposition 
of the original and secondary flows forms the node-i input 
flow with rate
i . A part of this flow with the rate 
)
(
0
i R
is 
blocked, initiating the source-retrial. The rest goes through 
node-i and then splits into a secondary flow with probability  
1 - 
piE
= 

W
j
ij
p
1
and traffic with flow rate 
iE
 exiting the 
network after node-i. 
 
                                          
ij
p  
 
 
 
 
 
 
      
1
                1 - 
piE
  
   
0 p0i
            
1i
           
1iq  
                
i             
 
       
 
iE
 
i
R
0
( )
0 
                                                
Qi
           
                          
iQi
                                          
                       
)
(
0
i R
 
 
 
                        
 
 
 Figure1. Flows in the node-i of the network.  
 
     To determine traffic rates
i  (i = 1, 2, .., W ), we assume 
that the superposition of the original external Poisson flow 
and all secondary flows to the node-i is a Poisson process. 
This approach provides acceptable low bounds for 
moderately loaded networks (see Section VI). We have 
observed that the method works really well for networks 
where each node is connected to at least two nodes and 
traffic after a node splits according to a Markovian routing, 
merging with other flows as input arrivals. 
     It should be noted that the buffer overflow is a bursty 
stream. It can be efficiently approximated by Interrupted 
Poisson Process (IPP) [12] with a squared coefficient of 
variation
1
)
(var/
2
2


mean
c
. However, even an 
individual queue with limited waiting space and IPP input 
does not have a closed form solution. Analysis is performed 
numerically. For a multi-queue node, even this approach 
fails in general because the number of the Markov equations 
grows exponentially with the number of queues. 
 
A. Notation 
 
The multi-queue node-i state is given by  
i
Q - dimensional vector n i = (
1in , 
in 2
,..,
niQi
), where  
iq
n (0 
i
iq
 n  N
 , q = 1, 2, ..,
i
Q ) denotes the number of 
customers in the q -th queue system, including the customer 
in service. It is convenient to introduce the following 
notation: 
     
m
k
in ,  = (
1in , .., 
, 1
in k
, m , 
, 1
in k
, ..,
niQi
), 
     
in  = 

i
Q
q
iq
n
1
= total number of customers in node-i, 
     
)
(
ni Ni
 = mean number of customers in node-i. 
Let 
     
i
D  = the set of permissible states that determined by CS 
buffer sharing policy in the node-i 
     
i
D  = {n i :

i
Q
q
iq
n
1
 Ni
,  0
i
iq
 n  N
}.   
 For queue- q  we have 
     
i
iq



iq
 / 
q
 = offered traffic intensity for queue-
q  in node-i.  
The following is for the network, 
     Λ   = (
1 , 
2
 , …, 
W
 )` = column-vector of input flow 
rates in all W  nodes, (` denotes transposition). 
     
Λ
 = 

W
i
i
1
  = norm of the vector Λ .  
 
B. The node product-form state distribution 
 
The node-i model in Figure 1 can be considered as an 
open exponential queuing sub network under Poisson 
arrivals with input rate  
 
                      0  – if buffer is fully occupied 
 
)
(
i Ni
 =  
                     
i  - otherwise.    
   
The equilibrium state probability distribution for this type of 
queuing network is given by product form [13], [14] 
 
|||||||||||||||||||||| 
 
i
N   - size 
   Shared 
   Buffer  
     
|||||||||||||||||||||| 
 ORBIT QUEUE 
  
   
   
     
19
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

                    P (n i ) = G (
i
N )
1
   

i
iq
Q
q
n
iq
1

,                (1) 
where 
                           G (
i
N ) = 
 

i
iq
Q
q
n
iq
1

                     (2) 
                                             n i  
 Di
 
is the normalization constant. From (1, 2) the stationary 
probability that the node-i is available for a customer is 
                      
)
(
/)1
(
)
(
i
i
i
i
G N
G N




                  (3) 
The output flow rate from the node-i is 
                                 
)
(
i
i
i
out
i
 


                               (4) 
In the following statement, imported from [10, Proposition 
3.2], the index i is dropped to simplify the notation.  
     Proposition 1. The node output 
 ()
 is an increasing 
function of  > 0, and 
( )
lim




 = 
)1
(ˆ
G N 
)
(ˆ
/
G N
, 
where 
G(ˆ N)
 is the normalization constant of the closed 
queuing network that is a node model under a constantly full 
buffer. 
 
III. 
NETWORK THROUGHPUT 
     Let us consider the network output rate 
                  
O(Λ)
 = 
)
(
1
i
i
W
i
i
 


 
)
1(
1


W
j
pij
.            (5) 
In the network’s stationary mode,
O(Λ)
 is equal to the 
source flow rate
0
 . To determine the network’s permissible 
load
0
 , let us find the network throughput
Omax
, which has 
to satisfy the following inequality 
            
Omax
  
( )
lim
Λ
Λ
O

 = 
)
1(
1
1





W
j
ij
W
i
i
p
a
,         (6)            
where 
ia  = 
( )
lim
i
i
i
i
 



 = 
)
(ˆ
/)1
(ˆ
i
i
G N
G N

 (see 
Proposition 1). 
   To calculate 
Omax
 we assume the infinite network load 
0
 = . Under this assumption, a group of nodes will have 
constantly full buffers. Among them will be the nodes that 
receive initial arrivals from an external source according to 
positive probabilities 
i
p0 > 0. Also, the group will have 
nodes that receive retrials that are generated by all nodes, 
including those with always full buffers.  
   Let us assume that there will be v  (0  v  <W ) nodes 
with not always full buffers and (W -v ) nodes with 
 constantly full buffers. Let 
1I  = 
{ 2,1 ,.., }
v
and 
2I
 = 
}
2,...,
,1
{
W
v
v


. Then 
Omax
 can be expressed from (5 
and 6) as  
            
Omax
 = 
)
)](1
(
[
1
1
2








W
j
ij
i
i
I
i
i
I
i
i
p
a
 
.      (7) 
Unknown flow rates
i , 
i  1I
, are solutions of the 
following system of non-linear flow balance equations 
 
     
i  = 
ji
I
j
aj p
 2
 + 
ji
j
j
I
j
j
)p
(
1

 

 
i  1I
.        (8) 
   The structure of (8) is very similar to the flow balance 
equations in the single-class network model with losses [10, 
expression (2.6) for
R  1
]. Thus, a positive unique 
solution of (8) 
)
,..,
,
(
*
*
2
*
1
*

λ   
can be found by direct 
substitution iterations as in [10, expression (3.4)]. We omit 
here the proof of the iterations convergence. An interested 
reader is referred to [10, Theorem 3.1]. 
   With vector 
*
λ the network throughput 
Omax
 is fully 
determined by (7), that in turn defines the network 
permissible load 
0
  < 
Omax
. 
 
IV. 
NETWORK FLOW BALANCE EQUATIONS 
     The following system of non-linear equations establishes 
flow balance for nodes in the network 
j
  =  
0 p0 j
 + 
ij
i
i
W
i
i
)p
(
1
 


 +
0 j
))
(
1(
1
i
i
W
i
i
 




, 
 j  = 1, 2, ..,W .  
 
 
  
      (9) 
The flow rate into the orbit queue is determined by 
j
  
( j =1, 2, .., W ) as 
                
))
(
1(
1
1
)
(
0
( )
0
j
j
W
j
j
W
j
R
j
R












.          (10) 
It is convenient rewrite (9) in vector form 
                                     Λ  = 
Ψ(Λ)
,                              (11) 
where 
Ψ(Λ)
 = (
)
(
1 Λ

,…, 
W (Λ)
) `, 
j (Λ)
=
0 p0 j
+ 
ij
i
i
W
i
i
)p
(
1
 


+ 
                  
0 j
))
(
1(
1
i
i
W
i
i
 




,       j = 1, 2,..,W .   (12) 
Operator 
Ψ(Λ)
 is defined in   = {Λ : 
i  0
,  
i = 1,2,.., W  } and maps 
  
. 
 
 
20
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

     Proposition 2. Operator 
Ψ(Λ)
 is an increasing 
operator. 
     Proof. Proposition immediately follows from [10, 
expression (D.1) in Appendix D] for node- k   
k
k
k
k






))
(
(
 = 
)
(
k k
 [
)
(
)1
(
k
k
k
k
n N
n N


+ 1] > 0 
and   
k
i


)
(Λ = 
)1
(
)[
(
k 
k
k
ki k
n N
p


]1
)
(


nk Nk
 + 
0i
{ 1 - 
)1
(
)[
(
k 
k
k
k
n N


]1
)
(


nk Nk
}  = 
       
ki k
p   + 
0i
(1 - 
k
 ) > 0,                                        (13) 
 where k
i,
=1,2,..,W , and  
     0 < 
k
 = 
)1
(
)[
(
k 
k
k
k
n N


]1
)
(


nk Nk
 < 1. (14) 
 
     The system (11) can be solved iteratively by using the 
following relation 
             
1)
(
Λ m
 = 
)
(
Ψ Λ(m)
  
m  = 0, 1, 2, …,      (15) 
where vector 
)`
,...,
(
)
(
)
(
1
)
(
m
W
m
m

 
Λ
is a result of the m -
th iteration, and 
0,0 ,..,0)`
(
(0)

Λ
. Also, 
)
(
1)
(
m
m
Λ
Λ


 
if  
)
(
1)
(
m
i
im




,  and   
Λ(m)
 > 0   if   
i(m)
 > 0  for  
i = 1, 2, .., W .   
 
     Theorem. For network load 
0
< 
Omax
, the 
sequence{
0
( ),
Λ m m 
},defined by (15),converges to 
*
Λ ,  
a positive unique solution of system (11).  
     Proof. 
     Existence of 
*
Λ . Vector 
Λ(1)
 has a positive component 
for node-i if 
i
p0 > 0. Vector 
Λ(2)
can have more positive 
components if there are positive probabilities of transferring 
a customer from node-i to other nodes. From Proposition 2 
and 
Λ(1)
= 
)
(
Ψ Λ(0)
   
Λ(0)
 follows that the sequence 
{
Λ(m)
, m=0, 1, 2,...} is a non-decreasing sequence.  
     Let us show that the sequence (15) is limited in  . 
From Proposition 1 follows that 
O(Λ)
 (5) is an increasing 
function of Λ , and consequently for 
0
 < 
Omax
there is 
*
Λ    that for any Λ > 
*
Λ  ( Λ   ) 
                                    
O(Λ)
 >  
0
 .                              (16) 
By summing (12) over j = 1,2,…, W  we can get  
    
Ψ(Λ)
 = 
0
 -
)
(
1
i
i
W
i
i
 


 
)
1(
1


W
j
pij
+
Λ
. (17) 
Applying (5) and (16) to (17) we have  
            
Λ
 > 
Ψ(Λ)
  for Λ > 
*
Λ  (Λ   ).      (18) 
 Let us assume that the sequence {
Λ(m)
, m=0, 1, 2,...} is 
not limited in  . Then there will be a number m, such that  
Λ(m)
> 
*
Λ , and according to (18) 
Λ(m)
 >
)
(
Ψ Λ(m)
. 
Consequently, 
1)
(
Λ m
 = 
)
(
Ψ Λ(m)
 <  
Λ(m)
, 
that contradicts the fact that the sequence 
Λ(m)
 is a non-
decreasing 
sequence. 
Thus, 
a 
positive 
vector 
)
(
*
lim
m
m
Λ
Λ


<  is a solution of (11). 
     Uniqueness of the solution 
*
Λ . Let us assume that there 
are two different solutions
*
Λ >0 and 
Λ**
>0. Then, for the 
convex domain  , we have  
        
**
*
Λ  Λ
 = 
        
)
(
)
(
**
*
Ψ Λ
Ψ Λ

   
)
(
' Λ
Ψ
**
*
Λ  Λ
, (19) 
where 
,
,
**
*
Λ Λ 
)
(
*
**
*
Λ
Λ
Λ
Λ




,0 <   <1. 
From (13) we have 
)
(
Ψ ' Λ
= 




W
i
k
i
k
1
( )
max

Λ
= 




W
i
ki
k
k
p
1
)]
1(
max 1[

, where 0< 
k
 <1 (see 14). From 


W
i
ki
p
1
< 1 for 
W
k
2,1 ,...,

 follows that 
)
(
Ψ ' Λ
 < 1, 
and the inequality (19) can be valid only if  
**
*
Λ  Λ
. 
Q.E.D. Computational complexity of (15) is ~
)
(
O W 2
.      
 
V. 
NETWORK PERFORMANCE MEASURES 
A. Nodal measures 
     To simplify notation we drop index i for an arbitrary 
node in the network. Let us consider the following   
aggregate state  for a node 
A(u)
 = {n 
 D
: 


Q
q
q
u
n
1
}, which comprises all states 
with the total population ofu customers in the node. With 
this state we associate two functions: 
g(u ) = 

 n  A( u )


Q
q
n
q
q
1

  and 
g
k
)
(u  = 

)
(
0
A u
nk


Q
q
n
q
q
1

. 
 
21
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

The normalization constant    
G ( N ) = 

N
u 0
g(u ). 
Distribution of the total number of customers in the node is 
given by 
    
uP = 
0
P   g(u ) = g(u ) / 

N
z 0
g( z )     for 0  u  N.  
The mean number of customers in the node is 
n(N)
 = 

N
u
u
uP
0
. 
Using Little’s Law, the average time a customer spends in 
the node is 
                              
( )
/)
(
 
t  n N
                          (20) 
 
 
 
 
 
The marginal distribution of the number of customers in the 
queue- q  is  
(q)
nq
P
= 




q
q
n
N
u
q
n
q
u
g
0
( )

/ 

N
z 0
g( z ). 
The mean number of the queue-q  customers is 



N
n
q
n
q
q
q
n P q
n
1
( )
. 
The average delay (queue plus server) for a queue- q   
customer is given by Little’s Law 
q
q
q
n
d
  
( )
/

. 
 
B. All-network service measures 
     On the average, 
0
 customers arrive at the network 
during a unit interval. Therefore, in stationary mode, when  
0
 < 
Omax
, the network output rate  
O(Λ)
= 
0
 . 
   During this time interval 
)
(
1
k
k
W
k
k

 


 customers, on 
average, go through the service nodes. Thus, the average 
number of services received by a customer in the network is 
s = 
)
(
1
k
k
W
k
k

 


/ 
0
 . 
   The average sojourn time for a customer in the network, 
including a retrial delay, is 
           T = 
)
1( /
[
0
( )
0

 R
 + 
) ]
(
1
k
k
k
W
k
k
 t
 


 / 
0
 ,     (21) 
where kt is defined in (20) and
)
(
0
 R
 in (10).  
 
  
 
 
VI. 
COMPARISON OF ANALYTIC AND 
SIMULATION RESULTS 
     In this section, we present some numeric results 
computed by our analytic method in comparison with 
simulation. The simulation code is written in
C
, and 
simulates a network processing of 
~ 106
customers in one 
run. We experiment with two network topologies: a 
symmetric complete-graph network and a ring-type 
network. 
     The symmetric configuration includes five nodes; each 
has two identical single servers (two-queue node) and a 
buffer of size
N 10
. Traffic arriving to node-i  (i =1, 2, 
.., 5)  splits equally between two queues, i.e., 
iq
= 0.5,  q = 
1, 2. The orbit queue service rate is 
0
 = 0.1, while all other 
servers in the network have the same service rate  =1. The 
external input flow with rate
0
  is uniformly distributed 
between the nodes, i.e., 
i
p0 = 0.2 (i =1, 2, .., 5). A customer 
that has completed his service in the node- i is either 
transferred to the node- j ( j =1, 2, .., 5) with probability 0.1 
or leaves the network with probability 0.5. Retrials are 
distributed into the network with probability 
0i
= 0.2 (i =1, 
2, .., 5). 
     TABLE I presents results for 
0
 =2.0, 3.0, 3.6, and 4.0. 
Columns 3-5 have data for one separate node; column 2 
presents the average sojourn time in the network, including 
retrials. The upper figure in each box has been received by 
the analytic method. The lower was obtained by simulation. 
 
TABLE I. NETWORK CHARACTERISTICS OF THE 
SYMMETRIC 
5-NODE 
NETWORK. 
ANALYTIC 
RESULTS VERSUS SIMULATION. 
_______________________________________________ 
        (21)                (9)                  (4)                 (20)                  
       
0
          T                  
i                   
iout
               it  
       1              2                    3                     4                     5_ 
  2.0          3.335  
  0.8 
           0.799         1.663 
                   3.34  
  0.8 
           0.799         1.666 
  3.0          5.025 
  1.212            1.198  
 2.393   
                   5.226             1.214            1.199 
 2.5     
  3.6          7.142 
  1.512             1.437 
 3.06    
                    8.3 
  1.516            1.439 
 3.62    
  4.0            9.914 
  1.805            1.599 
 3.67     
                        13.487 
  1.842            1.612 
 5.24_     
     External arrival rates in the range 
0
= 2.0 – 3.6           
moderately load the network. We can observe that for these 
loads the node input rate is
i <1.6, and consequently
iq
< 
0.8. Average sojourn times in network, calculated 
analytically, are lower than in simulation by 0.15% - 13.9%. 
22
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

We can conclude that a Poisson assumption for a node input 
gives reasonable low bounds for this load range. Further 
increase of source arrival rate brings the network close to 
congestion, dramatically increasing the difference between 
analytical result and simulation one. 
   
     Another example is a 5-node ring-type network, where 
all five nodes are identical two-queue nodes, described 
above. The input flow with rate
0
  is uniformly distributed 
between the nodes, i.e., 
i
p0 = 0.2 ( i =1, 2, .., 5) . After 
completing his service in node- i , customer is either 
transferred to node-
(  )1
i
 with probability 0.2, or to node -
(  )1
i
 with probability 0.2, or exits the network with 
probability 0.6. Retrials are distributed between nodes with 
probability 
0i
= 0.2 (i =1, 2, .., 5). For node-1 the “left” 
neighbor is node-5. For node-5 the “right” neighbor is node-
1. We assume 
ii
p = 0, i.e., a node may not route traffic to 
itself. 
     The computational results for 
0
  = 3.0, 3.5, 4.0, and 4.5 
are shown in TABLE II, which has similar structure as 
TABLE I. For moderate network load 
0
 = 3.0 – 4.0, the 
node input rate 
i  < 1.6 and   
iq
< 0.8. Comparison of the 
analytic results (upper figures in each box) with simulation 
ones (lower figures) shows that in this load range the 
analytic method provides acceptable low bound estimates. 
For instance, the error of calculating the average sojourn 
times in the network is in the 1.18% - 9.2% range. The 
network becomes congested under 
0
 = 4.5 and the error is 
increased to 20.7%. This example demonstrates that our 
Poissonian hypothesis works even for a weakly connected 
not congested network. 
 
TABLE II. NETWORK MEASURES OBTAINED 
ANALYTICALLY AND BY SIMULATION FOR THE 
RING-TYPE 5-NODE NETWORK.  
______________________________________________ 
        (21)                (9)                  (4)                 (20)                  
       
0
          T                  
i                   
iout
               it  
       1              2                    3                     4                     5  _ 
  3.0          3.34 
  1.003            0.999          1.978 
   
         3.38 
  1.004            1.001          1.998 
  3.5          4.019 
  1.178            1.166  
 2.3  
   
         4.2                  1.179            1.168          2.43     
  4.0          5.02 
   1.369            1.332          2.739    
   
         5.531 
   1.372            1.334          3.03    
  4.5          6.643 
   1.607            1.499          3.272     
   
         8.38 
   1.631            1.52            4.16_     
  
VII. CONCLUSION 
     We have extended the model of an open exponential 
single-class queuing network with losses due to limited 
shared waiting spaces in multi-queue M/M/1 nodes [10] to 
the case of the source-retrials, experienced by blocked 
customers. The goal of the paper is to show that the model 
can be solved approximately by an analytical numerical 
approach. Using the methodology outlined in [10], we have 
established an approximate numerical method that makes it 
possible to solve the model analytically. An analytical 
procedure to evaluate the network throughput that 
determines a permissible network load was received as well. 
     The main result of the paper is a method of an 
approximate analysis of the network model under a 
moderate load. The core of the approach is solving 
iteratively a system of non-linear equations for the unknown 
nodal flow rates. We have rigorously proven that the 
iterative algorithm converges to a unique solution, which is 
used to obtain several network and node performance 
measures.  
     The model can be used for performance evaluation of 
computer communication networks with adaptive or 
alternative routing and source–retransmission of undelivered 
packets.  Also, the paper results can help to analyze 
different structures of distributed database systems with 
multiprocessor nodes. 
     Future work can consider a source-retrial multi-class 
queuing network with finite shared buffer in multi-queue 
nodes. The use of Interrupt Poisson Process as a node input 
might help to conduct an approximate analysis of an even 
congested network.  
ACKNOWLEDGMENT 
     The author would like to thank anonymous referees for a 
number of useful comments and suggestions given to the 
original manuscript. 
REFERENCES 
[1] G. I. Falin, and J.G.C. Templeton, Retrial queues. Boca 
Raton, FL: CRC Press, 1997. 
[2] J. R. Artalejo, and A. Gomez-Coral, Retrial queueing 
systems. A computational approach. Berlin: Springer Berlin 
Heidelberg, 2008. 
[3] M. Jain, A. Bhagat, and C. Sherkhar, “Double orbit finite 
retrial queues 
with 
priority 
customers 
and service 
interruptions,” Applied Mathematics and Computation, Vol. 
253, pp. 324-344, 2015. 
[4] M. Irland and G. Pujolle, “Comparison of two packet- 
retransmission 
techniques,” 
IEEE 
Transactions 
on 
Information Theory, Vol. IT-26, No. 1, pp. 92-97, 1980. 
[5] K. Avrachenkov and U. Yechiali, “Retrial networks with 
finite buffers and their application to Internet data traffic,” 
Probability in the Engineering and Informational Sciences, 
Vol. 22, pp. 519-536, 2008. 
[6] G. K. Takahara, “Fixed point approximation for retrial 
networks,” Probability in the Engineering and Informational 
Science, Vol. 10, Issue 2, pp. 243-259, 1996. 
23
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

[7] J. W. Cohen, “Basic problems of telephone traffic theory and 
the influence of repeated calls,” Philips Telecommunication 
Review, Vol. 18, pp. 49-100, 1957. 
[8] K. Avrachenkov and U. Yechiali, “On tandem blocking 
queues with a common retrial queue,” Computer & 
Operations Research, Vol. 37, pp. 1174-1180, 2010. 
[9] S. Lam, “Store-and-forward buffer requirements in a packet 
switching network,” IEEE Transactions on Communications, 
Vol. 24, No. 4, pp. 394-403, 1976. 
[10] M. Vinarskiy, “A method of approximate analysis of an 
open exponential queuing network with losses due to finite 
shared buffers in multi-queue nodes,” European Journal of 
Operational Research, Vol. 258, Issue 1, pp. 207-215, 2017. 
[11] W. Aello, A. Kesselman, and Y. Masour, “Competitive 
buffer management for shared-memory switches,” ACM 
Transactions on Algorithms, Vol. 5, No. 1, pp. 3.1-3.6, 2008. 
[12]  K. S. Meier-Hellstern, “The analysis of a queue arising in 
overflow models,” IEEE Transactions on Communications, 
Vol. 37, No. 4, pp. 367-372, 1989. 
[13] S. Lam, “Queueing networks with population size 
constrains,” IBM Journal of Research and Development, 
Vol. 21, No. 4, pp. 370-378, 1977. 
[14] P. G. Harrison, “Reversed processes, product form and some 
non-product forms,” Linear Algebra and Its Applications, 
Vol. 386, pp. 359-381, 2004.  
 
   
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
24
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-655-2
INFOCOMP 2018 : The Eighth International Conference on Advanced Communications and Computation

