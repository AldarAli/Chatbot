Multiagent Genetic Optimisation to Solve the Project Scheduling Problem under 
Uncertainty 
 
Konstantin Aksyonov and Anna Antonova  
Department of Information Technologies 
Ural Federal University, UrFU 
Yekaterinburg, Russia 
wiper99@mail.ru, antonovaannas@gmail.com
 
 
Abstract—This paper considers a project scheduling problem 
under uncertainty, which belongs to a class of multiobjective 
problems of complex systems control whose decision search 
time grows exponentially depending on the problem dimension. 
In this paper, we propose a multiagent genetic optimisation 
method based on evolutionary and multiagent modelling by 
implementing different decision searching strategies, including 
a simulation module and numerical methods application. The 
comparative analysis of the scheduling methods has shown that 
the proposed method supports all features that might be useful 
in effective decision searching of the stochastic scheduling 
problem. The proposed multiagent genetic optimisation 
method, the MS Project resource reallocation method, and a 
heuristic simulation method were compared whilst addressing 
a 
real-world 
deterministic 
scheduling 
problem. 
The 
comparison has shown: firstly, the unsuitability of the MS 
Project planning method for solving the formulated problem; 
and secondly, both the advantage of the multiagent genetic 
optimisation method in terms of economic effect and 
disadvantage in terms of performance. Experimental results in 
conditions of uncertainty demonstrate the eﬀectiveness of the 
proposed method. Some techniques to reduce the impact of the 
method’s disadvantage are proposed in the conclusion, as well 
as the aims of future work. 
Keywords-project 
scheduling; 
genetic 
algorithms; 
simulation; subcontract work optimisation; problem under 
uncertainty. 
I. 
INTRODUCTION 
This paper is an improved and expanded version of the 
ICCGI 
2013 
conference 
paper 
"Multiagent 
Genetic 
Optimisation to Solve the Project Scheduling Problem" [1]. 
The paper extends the scheduling method proposed in the 
original paper by taking into account environment 
uncertainty removal with the help of the integration of 
numerical methods, simulation, multiagent, and evolutionary 
modelling. A comparison of the new method and existing 
scheduling methods is conducted in this paper. An 
application of the new method to a real scheduling problem 
is described. 
The scheduling problem is one of the key problems in the 
management of organisational and technical systems. 
Inefficient scheduling can lead to financial losses, quality of 
service losses, and loss of competitiveness for the company. 
Companies with various different scopes are faced with the 
scheduling problem, for example, industrial and project 
companies, shopping centres, hospitals, and call centres. 
There are several types of scheduling problem depending 
on the application sphere: operations calendar planning [2]–
[6], assignment of limited resources to a set of tasks [7]–[9], 
and the travelling salesman problem [10]. 
Classical scheduling problem-solving methods have a 
number of disadvantages. Thus, the use of combinatorial 
methods and mathematical programming is associated with 
internal difficulties because the model of system processes is 
nonlinear, non-convex, and non-differentiable [11]. In 
addition, these methods are applied poorly to problems with 
dynamically changing constraints. Simulation takes into 
account the dynamic nature of the problem, but leads to a 
random search process, which does not guarantee optimal 
decision finding. The use of genetic optimisation allows the 
shortcomings of the previous methods to be overcome [10]. 
The application of genetic optimisation to the scheduling 
problem with defined constraints is widely considered in the 
literature [2]–[10]. 
In the real world, the scheduling problem is connected to 
the uncertainty of environment behaviour and is a stochastic 
version of the classical scheduling problem. It can involve 
many sources of uncertainty: activity duration, renewable 
resource availability, resource consumption, and cost of 
activity [11]–[16]. Mainly non-structural (parametric) 
uncertainty is introduced into the basic deterministic 
scheduling problem by researchers [17]. The design of the 
optimal (efficient) calendar work plan taking into account the 
structural uncertainty associated with the insertion of new 
projects is a topical task. 
This paper focuses on the project scheduling problem 
under conditions of structural uncertainty by using 
evolutionary computation [18], simulation, and numerical 
methods of uncertainty removal [19]. The remainder of the 
paper is organised as follows. Section II provides an 
overview of the related works in the field of deterministic 
and stochastic scheduling. Section III formulates the 
deterministic 
project 
scheduling 
problem 
with 
time 
constraint. Section IV introduces the genetic algorithm based 
on an annealing simulation and novelty search. Section V 
describes a dynamic model of multiagent resource 
conversion processes that has been selected as a system 
formalisation model. Section VI presents the algorithm for 
the multiagent genetic optimisation program based on the 
1
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

integration of evolutionary computation and multiagent 
simulation. Section VII introduces the multiagent genetic 
optimisation method under uncertainty. Section VIII presents 
the algorithm of the multiagent genetic optimisation program 
under uncertainty based on the integration of the 
evolutionary computation, multiagent simulation, and 
numerical optimisation methods. Section IX presents a 
comparative analysis of the existing methods and the 
proposed method of solving the deterministic and stochastic 
scheduling problem. Section X evaluates the practical 
implementation of the multiagent genetic optimisation 
program to solve a real-world scheduling problem, both 
deterministic and stochastic. Section XI concludes this paper 
and explores future work. 
II. 
RELATED WORK 
In general, the deterministic scheduling problem is 
connected to the problem of seeking an operations sequence 
that satisfies the constraints and optimises the objective 
functions. Renewable resources (such as staff or equipment) 
are usually considered when studying the scheduling 
problem. For certain tasks (for example, production 
planning) nonrenewable resources should be determined [2]. 
In the various scheduling problem studies different 
constraint sets are considered, depending on the specific task. 
Four constraint types were identified in [4]: resource, 
precedence, physical layout, and information constraints. 
The time constraint type should be added to the list of 
constraint types when analysing workflow inside a project 
development company. Time limitation is associated with 
having a time frame for the operations start date. 
All constraints, except precedence ones, have been 
studied by Brezuliani et al. [7]. Precedence and resource 
constraints were considered by Okada et al. [2], Klimek [3], 
Abdel-Khalek et al. [5], and Dhingra and Chandna [8]. 
Resource and information constraints were studied by Yang 
and Wu [9]. Resource, precedence, and time constraints were 
considered by Karova et al. [6]. A study of scheduling with a 
resource constraint to determine a public transport route was 
presented by Osaba et al. [10].  
The optimisation objects are different in the studies 
reviewed. The classical objective function of working time 
(makespan) minimization was considered by Sriprasert and 
Dawood [4], Osaba et al. [10], He and Wan [12], Zhang and 
Chen [13], Csebfalvi [14], and Artigues et al. [15]. The 
objective 
function 
of 
constraints 
violation 
penalty 
minimization has been considered by Karova et al. [6] and 
Yang and Wu [9]. Both mentioned objective functions were 
considered by Okada et al. [2], Brezuliani et al. [7], and 
Dhingra and Chandna [8]. The objective function of net 
present value of discounted cash flow maximization was 
considered by Chen and Zhang [16]. 
There are different ways of conducting an objective 
function evaluation: analytical methods, simulation, artificial 
neural networks, fuzzy systems, and component modelling. 
Analytical methods are the most widely used; the drawback 
of this approach is the lack of analysis of the dynamic 
behaviour of complex systems. This drawback is overcome 
by using the simulation model of Osaba et al. [10] to 
evaluate the objective function. The integration of 
evolutionary modelling and simulation can limit the random 
search space and enhance heuristic optimisation by taking 
into account the dynamically changing constraints of the 
scheduling problem. 
The reviewed studies do not consider subcontracted 
workforce optimisation, while this problem is very real to 
developers and even to mass production enterprises. The 
optimisation problem of the subcontracted workforce is 
connected to scheduling subcontractors in order to maximise 
the utilisation of the company’s own resources. In the 
literature, a problem regarding the appropriate selection of 
subcontractors using artificial intelligence methods was 
studied by Chen et al. [20]. A subcontract optimisation 
technique based on a simulation and heuristics has been 
suggested by Aksyonov and Antonova [21]. The current 
article considers new subcontract optimisation techniques for 
a deterministic scheduling problem with the use of a genetic 
algorithm. 
An unexpected external influence may result in 
deterministic schedules becoming more expensive and 
longer than expected, or even becoming unfeasible. Many 
researches in previous years have been dedicated to solving 
the stochastic scheduling problem. They have analysed 
different non-structural (parametric) sources of uncertainty, 
such as the examination of renewable resource availability 
and resource consumption by He and Wan [12] and the cost 
of activity by Chen and Zhang [16] and Xu and Feng [11]. A 
stochastic activity duration analysis was applied by all the 
authors [11]–[16]. 
There are three groups of methods for solving the 
stochastic scheduling problem: predictive, proactive, and 
reactive 
methods 
[17]. 
Predictive 
methods 
ignore 
uncertainty, so the predictive schedules can be late, over the 
budget, or even become infeasible. Proactive methods are 
intended to construct a predictive schedule that will perform 
well under a wide variety of external situations. Reactive 
methods are intended for online scheduling at the time of job 
execution, 
incorporating 
up-to-date 
information, 
and 
changing the schedule when disruptions take place [22]. 
Proactive methods are the most popular in researches on 
the stochastic scheduling problem. The main idea of 
proactive methods is to distinguish the two decision 
searching stages: the stage of the uncertainty removal and the 
stage of the deterministic problem solving. The direct order 
of the stages is used in most of the researches. The following 
techniques of uncertainty removal are considered by 
different authors: two-stage algorithm based on chance-
constrained programming by He and Wan [12], 99-methods 
by Zhang and Chen [13], heuristic algorithm with forbidden 
sets and forward-backward list scheduling by Csebfalvi [14], 
and Monte-Carlo simulation by Chen and Zhang [16]. The 
reverse order of the stages was used by Artigues et al. [15]. 
In this research, first, the initial schedule is found by solving 
the deterministic equivalent of the stochastic problem 
obtained by replacing the uncertain parameters with their 
average values. Second, the schedule is modified by inserting 
buﬀer times into the schedule to discourage the propagation 
of schedule disruptions. 
2
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The reviewed studies do not consider the structural 
uncertainty associated with the insertion of new projects into 
the schedule, while this problem is real in small and 
medium-sized enterprises. The current article considers a 
new 
proactive 
scheduling 
method 
under 
structural 
uncertainty with the use of a genetic algorithm, simulation, 
and numerical methods. 
III. 
DETERMINISTIC PROBLEM STATEMENT 
Let us consider the deterministic problem of project 
scheduling aimed at the calendar planning of operations. All 
project operations have to be carried out in combination with 
a set of time constraints. The set of time constraints is 
defined through negotiations with customers. In the case of 
the organisation’s own lack of resources, subcontracted 
resources have to be involved to meet the time constraints. 
The objective functions of the considered problem are: 1) 
subcontract cost minimization and 2) minimization of total 
downtime of own resources. The second objective function is 
associated with the fixed labour costs in the project 
companies. If the salaries are fixed then downtime is also 
paid, which is not profitable for the company. 
For the project scheduling problem considered in this 
study, the following assumptions have been made:  
1. A single project consists of a number of operations 
with a known processing time, early and late start dates, 
labour input, and labour cost. 
2. The operation requires the availability of renewable 
resources (own or subcontracted workforces). 
3. Nonrenewable resources are not considered. 
4. Operations cannot be interrupted. 
5. Subcontractors can be involved in performing part of 
the operation. 
6. Subcontractors can be interrupted and the operation 
can continue with the use of the company’s own resources in 
the event of the reappearance of its own available resources. 
7. Subcontractors are available every day on request in 
unlimited quantities. 
Let us describe the problem of project portfolio 
scheduling with the use of the following designations. 
Indices: 
 
i: 
project index, i = 1, 2, …, P. 
 
j: 
operation index, j = 1, 2, …, Opi. 
 
w: department index, w = 1, 2, …, V. 
 
t: 
time index, t = 0, 1, 2, …, T. 
Decision variables: 
TB(i,j): set of start dates of operations. 
Initial parameters: 
ES(i,j): 
early start date of the operation (i,j). 
LS(i,j): 
last start date of the operation (i,j). 
SLw: 
number of persons in the department w. 
SLO(i,j,w):amount of workforce (persons) needed in 
department w to fulfil the operation (i,j). 
SS(i,j): 
operation (i,j) subcontracting cost per day. 
Parameters obtained in the decision-making process: 
Active(i,j,t): a sign of the operation (i,j) execution at 
time t. 


= 
otherwise
,0
operation ( , ) is executed at the moment
if
,1
( , , )
t
i j
i j t
Active
 
RD(t,w): 
resources from department w demanded to 
fulfil the active operations at the time t.  
[
]
∑∑
=
=
⋅
=
P
i
Op
j
i
SLO i j w
Active i j t
t w
RD
1
1
( , , )
( , , )
( , )
  
VF(t,w): 
amount of free workforce of department w 
at the time t. 



≤
−
=
otherwise
,0
( , )
( , ), if
)
( ,
w
w
SL
RD t w
RD t w
SL
VF t w
 
 
VSC(i,j): 
volume of subcontracted workforces on 
operation (i,j). 
Problem description: 
∑∑
=
=
→
⋅
=
P
i
Opi
j
SC
i j
SS i j V
OF
1
1
1
min
( , ))
( , )
(
,            (1) 
min
)
,
(
0
1
2
→
⋅
= ∑∑
=
=
V
T
VF t w
OF
T
t
V
w
,                     (2) 
j
i
LS i j
ES i j
TB i j
∀ ∀
∈
,
( , )]
( , );
[
( , )
                (3) 
Objective function (1) minimises the total subcontracting 
cost. Objective function (2) minimises the total downtime of 
own resources. Constraint (3) maintains the time frame of the 
operations’ start. 
IV. 
GENETIC ALGORITHM BASED ON ANNEALING 
SIMULATION AND NOVELTY SEARCH 
The genetic algorithm (GA) is one of the evolutionary 
approaches that can be used to solve complex system 
management problems in a short time [18]. The technique of 
the GA application includes the following steps: 1) selecting 
the method of encoding the problem decision (phenotype) 
into a chromosome (genotype); 2) definition of the 
evaluation method of the chromosome fitness function (FF); 
3) the genetic operator’s description; and 4) the initial 
population generation and GA work. The modification of the 
GA on the basis of an annealing simulation and novelty 
search is considered in the article in order to enhance the 
quality of the decisions on the scheduling problem. 
A. Chromosome Encoding 
There are various techniques for decision encoding 
presented in the literature: operations sequence encoding 
[3][6][10], operations precedence encoding [2][4], operations 
start dates encoding [5][7], and encoding of resource 
assignment for the operation [7]–[9]. We used the encoding 
of the shifting of the operation start dates because this 
technique supports time constraints, is not redundant, and is 
simple to implement. 
The GA chromosome encodes the operations’ start dates, 
shifting from the initial work plan to the right or left on the 
3
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

time axis via binary code (0/1). The shift range is two weeks 
on either side of the initial operation start date. The 
chromosome size is 5r genes, where r is the number of 
analysed operations, 5 is the number of genes needed to 
encode a single operation shifting (4 genes to encode 24 = 16 
shifting days and 1 gene to encode the shifting direction). 
B. Genetic Algorithm Modification 
The concept of a novelty is a major GA concept. This 
concept is connected with the emergence of new elements 
and interactions in the environment during evolution. Two 
novelty types are distinguished in [23]: 1) combinatorial 
novelty, when the new species emerge by combining the 
existing species; and 2) creative novelty, when the new 
species are not reproducible by a combination of the species. 
The validity of the fundamental feasibility of the second 
novelty type is still open. 
Let us consider the case of a combinatorial novelty 
search as an adaptation mean in an open system. To 
implement this approach we modify a simple GA by 
introducing the concept of "decision originality" as a 
measure of the decision fitness to the environmental 
conditions [23]. The decision-chromosome’s originality in 
the 
population 
is 
determined 
via 
the 
numerical 
transformation of the Hamming distance matrix. 
Let us define the Hamming distance matrix as follows: 
( )
N
j
ijh i
H
1
,1
= =
=
, 
               (4) 
where hij is the Hamming distance between the i-th and j-th 
chromosomes (Chi and Chj), equal to the number of 
positions, at which the corresponding gene values are 
different in chromosomes Chi and Chj; N is the number of 
chromosomes.  
We associate the matrix H with the matrix of originality 
weights W defined as follows: 
(
)
N
j
wij i
W
= ,1 =1
=
,  
                  (5) 
where wij is the weight of the corresponding value of the 
Hamming distance determined as a quadratic function, 
increasing in the range from 1 to R as element hij is changed 
in the range of 0 to L: 
1
1
+
− ⋅
=
ij
ij
h
L
R
w
,                           (6) 
where L is the chromosome size, and R is the maximum 
weight of the chromosome in the pair, R > 0. 
The two strategies of chromosome crossing have been 
described using the concept of originality. The first strategy 
– the originality search strategy (OSS) [24] – focuses on the 
combinatorial search for the new decisions in the population 
by crossing chromosomes that have different encodings. The 
second strategy – the maximum search strategy (MSS) [18] – 
focuses on the targeted search for the best chromosomes by 
crossing chromosomes that are the most adapted to the 
environment. The fitness of the i-th chromosome to the 
environment is evaluated by the fitness function FFi, 
i=1…N. 
Let us define the chromosome crossing probability 
matrices on the basis of the proposed strategies as follows: 
(
)
N
j
i
OSS
ij
OSS
p
P
1
,1
= =
=
, 
∑
=
=
N
j
ij
ij
OSS
ij
w
w
p
1
,                (7) 
(
)
N
i
MSS
i
MSS
p
P
=1
=
, 
∑
=
=
N
i
i
i
iMSS
FF
FF
p
1
.                (8) 
In formulas (7) and (8) the matrices’ cells are filled by 
probability values in accordance with the roulette law [18]. 
In the case of the OSS strategy, the weight of the 
chromosome originality serves as a measure of chromosome 
importance. In the case of the MSS strategy, the 
chromosome FF serves as a measure of chromosome 
importance. 
An annealing simulation algorithm (ASA) [25] is 
intended to implement the proposed chromosome crossing 
strategies during the GA work. This algorithm is based on 
the analogy of the metal annealing process, which results in 
the appearance of new metal properties. The technique for 
ASA and GA integration is proposed below. 
Step 1. Set 
the 
annealing 
simulation 
algorithm 
parameters: the initial value of the parameter tZ; the value of 
the parameter α, which controls the rate of annealing 
temperature decrease, 0 ≤ α ≤ 1. 
Step 2. Set the GA parameters: the number of 
generations K; the chromosome size L; the likelihood of the 
genetic operators being applied. Set the number of the 
current population Z: Z = 1. Generate the initial population. 
Step 3. Apply the genetic operators to the current 
population Z with a probability that depends on the value of 
parameter tZ. Increase the number of the current population 
Z= Z + 1. Change the value of parameter tZ [25]: 
Z
Z
Z
t
t
t
⋅
+
+ =
α
1
. 
                  (9) 
Step 4. Check the condition: Z > K. If the condition is 
satisfied then go to Step 5, otherwise return to Step 3. 
Step 5. Stop. 
The probability of the genetic operator’s application is 
defined on the basis of the annealing simulation in order to 
reflect the operator’s dynamic nature. 
C. Crossover Operator 
The probability of selecting the first and second parents 
from the current population Z for the crossover operator 
(CO) is described below. The probability of selecting the 
first parent has to take into account both random selection 
and targeted selection based on the MSS strategy (8). The 
probability of random selection should be reduced in the 
4
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

population’s evolution, and the probability of the MSS 
strategy should be increased. This fact is reflected in the 
probability of selecting the first parent i  in the population Z: 





−
⋅
 +










−
−
⋅
=
Z
MSS
i
Z
iZ
t
p
t
N
CO
P
1
exp
1
exp
1
1
)
(
.      (10) 
The probability of selecting the second parent has to take 
into account the OSS and MSS strategies. The probability of 
the OSS applying (7) should be reduced during the 
population’s evolution, and the probability of the MSS 
applying (8) should be increased. This circumstance is 
reflected in the probability formula for selecting the second 
parent j for the first parent i in population Z: 





−
⋅
 +










−
−
⋅
=
Z
MSS
j
Z
OSS
ij
jZ
t
p
t
p
CO
P
1
exp
1
exp
1
)
(
.   (11) 
D. Mutation and Inversion Operators 
The applied probability of the mutation operator (MO) in 
population Z is described below. This formula has to take 
into account the probability reducing during evolution in 
order to save genetic material [24]: 











−
−
⋅
=
Z
Z
t
P MO
MO
P
1
exp
1
)
(
)
(
0
,            (12) 
where P0(MO) is the initial value of the mutation operator 
applied probability. 
The applied probability of the inversion operator in 
population Z is described by analogy with the mutation 
operator applied probability. 
E. Fitness Function 
The following fitness function considers both objective 
functions (1) and (2) described in Section III: 
max
)
(
)
(
2
2
2
1
1
1
→
⋅
+
⋅
=
OF
OF
OF
OF
FF
Init
Init
ω
ω
,    (13) 
where ω1, ω2 are weight coefficients, ω1+ω2=1; OF1
Init, 
OF2
Init are objective function initial values obtained by expert 
evaluation of the operation start date.  
Used FF is described with the use of the linear 
convolution of normalised heterogeneous criteria (1) and (2).  
V. 
THE DYNAMIC MODEL OF MULTIAGENT RESOURCE 
CONVERSION PROCESSES (MRCP) 
The processes of the project's work execution have to be 
formalised via a simulation model in order to evaluate the 
objective function values. The use of multiagent approach at 
the stage of business process model formalisation is caused 
by the presence of decision makers in the system; their 
behaviour is motivated, they cooperate with each other, and 
accumulate knowledge of the problem domain. The problem 
of the model selection for business process formalisation was 
addressed by the authors in [26]. The following models for 
supporting agent representation of business processes were 
considered: Gaia model, Bugaichenko’s model, Masloboev’s 
model, simulation model of intelligent agents interaction 
(SMIAI), resource-activity-operation model (RAO), and 
multiagent resource conversion processes model (MRCP). 
The comparison showed that the MRCP model has the fullest 
functionality in area of business process formalisation: it 
includes a hybrid agent model (intelligent and reactive), a 
model of a resource converter and a queue system, allowing 
the analyst to examine the dynamic features of processes 
[26]. 
Let us consider the basic principles of the MRCP model.  
The MRCP model [27] was developed on the basis of 
resource conversion process (RCP) model [28] and it targets 
the modelling of business processes and decision support for 
management and control processes. A key concept of the 
RCP model is a resource converter consisting of input, 
launch condition, conversion module, control block, and 
output.  
The launch condition, once it becomes true, enables the 
conversion process to take place based on the state of input 
resources, control commands, available conversion tools, and 
other external environment events. Conversion time becomes 
known right before the start of the conversion process as a 
function of the control commands and active resources 
limitation. 
The MRCP model may be considered as an extension of 
the basic RCP model, adding the functionality of agents. The 
main objects of the discrete multiagent RCP are: operations 
(Op), resources (Res), control commands (U), conversion 
devices (Mech), processes (PR), sources (Sender) and 
resource 
receivers 
(Receiver), 
junctions 
(Junction), 
parameters (P), agents (Agent), and coalitions (C). Process 
parameters are set by the object characteristics function. 
Relations between the resources and conversion device are 
set by the link object (Relation). The agents and coalitions’ 
existence assumes availability of the situations (Situation) 
and decisions (action plan) (Decision).  
The MRCP model has a hierarchical structure, defined by 
high-level integration system graphs. Agents control the 
RCP objects. Every agent includes a unique model of a 
decision maker. The agent (software or hardware entity) is 
defined as an autonomous artificial being with active and 
motivated behaviour, capable of interacting with other 
objects within a given virtual environment. With every 
system tick the agent performs the following operations [27]: 
environment (current system state) analysis, state diagnosis, 
knowledge base access (knowledge base [KB] and database 
[DB] interaction), and decision-making. Thus, the functions 
of analysis, situation structuring and abstraction, as well as 
the control commands generation of the resource conversion 
process are performed by agents. 
Consequently, coalition is generated after the union of 
several agents. Figure 1 shows an example of C1 coalition 
formation after the union of A2 and A3 agents.  
 
5
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
Figure 1.  Interaction and coalition formation. 
Agent coalition has the following structure: 
С = <Name, {A1,…,Am}, GС, KBС, M_In, M_Out, SPC, 
Control_O >, 
where Name is coalition name; {A1,…, Am} is a collection of 
agents forming a coalition; GС is coalition goal; KBС is 
coalition knowledge base; M_In is a collection of incoming 
messages; M_Out is a collection of outgoing messages; SPC 
is a collection of behaviour scenarios acceptable within 
coalition; Control_O is a collection of controlled objects of 
the resource conversion process. 
The simulation algorithm of the agent-containing model 
comprises the following main stages: system time 
determination, agent and coalition actions processing (state 
diagnosis, control commands generation), conversion rules 
queue generation, conversion rules execution, and operation 
memory state (i.e., resources and mechanism values) 
modification. The simulator makes use of the expert system 
unit for diagnosis of situations and generation of control 
commands. 
Each agent possesses its knowledge base, set of goals 
needed for the behaviour configuration setting, and priority 
that defines agent order in control gaining queue. 
The following agent behaviour rules structure was used 
in the resource conversion processes subject area: 
Name <Rule Name> 
If <Message Conditions, RCP Conditions, G_Ag 
Conditions> 
Then <G_Ag Changes, Message Actions, Private 
Actions>, 
where Message Conditions are message-related conditions; 
RCP Conditions are resource conversion process-related 
conditions; G_Ag Conditions are goal-related conditions; 
G_Ag Changes are agent current goals modifying actions; 
Message Actions are message generation actions; Private 
Actions are converters and resource-related actions (activity 
plan), targeting the achievement of set goals. 
The MRCP agent behaviour rules have been developed 
on the basis of the special-purpose object-oriented Reticular 
Agent Definition Language (RADL) in the form of When-
If-Then [29]. 
Generally, in the case of any situation corresponding to 
the agent’s activity, the agent tries to find a decision (action 
scenario) in the knowledge base or work it out itself 
according to the existing behaviour rules, makes a decision, 
controls goals' achievement, delegates the goals to its own or 
another agent's RCP objects, and exchanges messages with 
others. 
The MRCP model was chosen to evaluate the 
chromosome FF value (13). The decision variables and input 
parameters described in Section III are fed in the model 
input. The parameters obtained in the decision-making 
process are the model output. In the MRCP model, we use 
agents to implement the resource allocation algorithm and 
use simulation to perform the operation’s execution. The 
resource allocation algorithm is described in [23] and allows 
executors of operations to be appointed in accordance with 
the assumptions made in Section III. 
VI. 
MULTIAGENT GENETIC OPTIMISATION PROGRAM  
One of the software development problems when 
addressing the implementation of the proposed scheduling 
method is the choice of modelling tool. The modelling tool 
should support the RCP, multiagent, and expert models’ 
description and have built-in, object-oriented development 
tools in order the additional tool functions to be developed 
by the systems analyst (programmer). 
A. Comparative Analysis of Modelling Systems  
Let us consider the following modelling systems:  
simulation modelling tools PlantSimulation (P) [30] and 
Simio (S) [31], particularly real-time expert system G2 (G) 
[32], multiagent simulation systems AnyLogic (A) [33], 
RepastJ (R) [34], MagentA (M) [35], and BPsim (B) [26]. 
The results of the comparative analysis of these tools are 
presented in Table I.  
6
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE I.  
ANALYSIS OF THE MODELLING TOOLS 
Comparison criteria 
P 
S 
G 
A 
R 
M 
B 
RCP modelling availability 
Subject area conceptual model 
design 
○ 
○ 
○ 
○ 
○ 
● 
● 
RCP description language 
● 
● 
● 
● 
● 
● 
● 
Hierarchical process model 
● 
● 
● 
● 
○ 
○ 
● 
Use of natural language for 
model definition 
○ 
○ 
● 
○ 
○ 
○ 
○ 
Multiagent modelling availability 
“Agent” element 
○ 
● 
○ 
● 
● 
● 
● 
Agents behaviour models 
○ 
● 
○ 
● 
● 
● 
● 
Agent’s knowledge base 
support 
○ 
○ 
○ 
○ 
○ 
● 
● 
Message exchange language 
○ 
○ 
○ 
● 
● 
● 
● 
Other modelling techniques availability 
Simulation modelling 
○ 
○ 
● 
● 
○ 
○ 
● 
Expert modelling 
○ 
○ 
● 
○ 
○ 
○ 
● 
Situational modelling 
○ 
○ 
● 
○ 
○ 
○ 
● 
Evolution modelling 
○ 
○ 
○ 
○ 
○ 
○ 
○ 
Object-oriented approach 
Use of UML language 
○ 
○ 
○ 
○ 
● 
○ 
● 
Object-oriented programming 
● 
● 
● 
● 
● 
○ 
● 
Wizard technology for agent 
design 
○ 
○ 
○ 
○ 
○ 
○ 
● 
Object-oriented simulation 
○ 
○ 
● 
● 
○ 
○ 
● 
Subject area conceptual model 
and object-oriented simulation 
integration 
○ 
○ 
○ 
○ 
○ 
○ 
● 
 
As we can see, all the current systems lack the support of 
some features that might be useful for effective simulation. 
For example, the problem domain conceptual model design 
and agent-based implementation approach is limited. Also, 
some systems, e.g., AnyLogic and G2, require users to have 
several programming skills. So, for a non-programming user 
there is no system that can offer a convenient description of a 
multiagent resource conversion process. Again, AnyLogic 
and G2 make use of high-level programming language, 
which results in these products being highly functional. 
Not all of the systems support the evolutionary modelling 
methods. Only the BPsim system includes wizard technology 
for agent design and tools for the integration of the subject 
area conceptual model and object-oriented simulation. As a 
result of the comparison of modelling systems, the BPsim 
system was selected as the basis for the proposed scheduling 
method implementation because the system supports the 
development and integration of the intelligent agents 
(wizards) with the object-oriented simulation using a 
common database. 
B. BPsim Agent Architecture 
The BPsim system consists of the following subsystems: 
BPsim.MAS dynamic situations modelling system and 
BPsim.MSN technical and economic development system 
[26]. BPsim.MAS supports the MRCP model (including 
reactive agents) description via graphical notation of the 
resource conversion processes. BPsim.MSN ensures the 
development of the decision search information technology 
(intelligent agent) based on the UML sequence diagrams 
[36] and Transact-SQL database management language [37]. 
So, the BPsim agent may have a hybrid nature, and it 
contains two components: 
• 
Intelligent (agent is described via a decision search 
diagram defined on the UML sequence diagram). 
• 
Reactive (agent is described via production rules 
and/or frame-based expert system). 
Two main agent architecture classes are distinguished 
[38]: 
1. Deliberative agent architecture based on artificial 
intelligence principles and methods, i.e., knowledge-based 
systems. 
2. Reactive architecture based on a system reaction to 
external environment events.  
The currently existing architectures cannot be defined as 
purely behavioural or purely knowledge-based, and any 
designed architecture is hybrid, offering features of both 
types.  
Multiagent resource conversion process architecture, 
which is implemented in the BPsim, is based on the 
InteRRaP architecture [39], as the most appropriate for the 
problem domain.  
In accordance with InteRRaP architecture’s common 
concept, the BPsim agent model is represented in four levels 
(Figure 2). 
1. The subsystem of cooperation with other agents 
corresponds to the following MRCP elements: converters, 
resources, tools, parameters, and goals. The subsystem of 
cooperation performs the following actions: generates tasks, 
transfers messages between agents, processes agent 
commands (performs resource conversion), and alters the 
current state of the external environment (transfers situation 
Sn into state Sn+1).  
2. The external environment interface and reactive 
behaviour components are implemented in the form of an 
agent rules base and inference machine (simulation 
algorithm). 
3. The reactive subsystem performs the following 
actions: receives tasks from the external environment, places 
tasks in a goal stack, collates the goal stack in accordance 
with the adopted goal ranging strategy, selects a top goal 
from the stack, and searches in the knowledge base. If the 
appropriate rule is located, the subsystem transfers control to 
the corresponding resource converter from the external 
environment. Otherwise, the subsystem queries the local 
planning subsystem. 
 
 
Figure 2.  BPsim agent hybrid architecture. 
7
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

BPsim.MAS
Local planning 
component access
BPsim.MSN
Decision located?
Message
generation and sending
Decision search in
strategical knowledge base
Goals and action rules for
tactical knowledge base
generation
Begin
Environment 
analysis
Any messages from 
external environment?
Read messages
Select first goal
from stack
Access tactical
knowledge base
Transfer of control to 
external environment
Environment model 
generation
Performing actions
End
Diagnosed 
situations count
Message conversion into
goals and tactical 
knowledge base rules
Place goals into stack
Rearrange goals,
according to priorities
Any messages 
from planning 
component?
Tactical knowledge 
base update
Locate decision with
maximum estimation
Yes
No
No
No
Yes
Yes
>=1
=0
 
Figure 3.  Hybrid BPsim agent activity algorithm. 
 
4. The local planning subsystem’s purpose is to search 
effectively for decisions in complex situations (e.g., when 
goal achievement requires several steps or several ways of 
goal achievement are available). The local planning 
component is built on a frame-based expert system. The 
frame concept and conceptual graph-based approach are 
utilised for knowledge formalisation. 
5. The scheme presented on Figure 3 shows the 
interaction of separate units during agent activity within 
BPsim.MAS and BPsim.MSN. 
The problem domain conceptual model and agent 
knowledge base design are based on the UML class diagram 
extension. Semantically, this notion may be interpreted as the 
definition of the full decision search graph, containing all the 
available ways of goal achievement (pre-defined by experts). 
The current knowledge base inference machine is 
implemented in the decision search diagram, based on the 
UML sequence diagram. Each decision represents an agent 
activity plan. Each plan consists of a set of rules from a 
reactive knowledge base. Based on the located decision, the 
current agent plan is updated. Examination of all available 
options contained in the knowledge base generates an agent 
plans library. 
If an agent, when processing a task or message received 
from the external environment, is unable to locate the 
appropriate rule in its knowledge base (e.g., select an option 
from several ones), the reactive behaviour component 
queries the plans library, indicating goal (i.e., task to execute, 
or external environment state to bring into). The planning 
subsystem searches the plans library, selects an appropriate 
plan, and places the first rule of the selected plan into the 
reactive goals stack. 
The problem of the implementation of the BPsim.MAS 
and BPsim.MSN systems integration is solved by 
implementing the communication between BPsim agents 
using a single database. 
The 
communication 
between 
BPsim 
agents 
is 
implemented in different ways on the different levels: 
1. The message exchange between reactive agents within 
the dynamic model MRCP is implemented by the transacts' 
(messages) introduction into the process model and by the 
description of the message processing rules in the agent's 
model. 
2. The message exchange between reactive and 
intelligent agents within the dynamic model (MRCP) is 
implemented via applying the clipboard messages containing 
common variables used in BPsim.MAS and BPsim.MSN 
systems. 
3. The message exchange between BPsim agents and 
external systems (in cases when the interaction is necessary 
to transmit not only data but also knowledge) is implemented 
by applying the communication protocols. As an interaction 
standard, the Foundation for Intelligent Physical Agents 
(FIPA) standard has been selected because it has the 
following 
advantages: 
highest 
reliability, 
ontology 
description availability, problem area compliance, and easy 
implementation. The Agent Communication Language 
(ACL) message type, supported in the FIPA standard [40], is 
used in the message exchange between BPsim agents and the 
environment. 
8
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

C. Multiagent Genetic Optimisation Program 
Development 
The multiagent genetic optimisation (MGO) program has 
been developed on the basis of the BPsim.MAS and 
BPsim.MSN systems. The MGO program is intended to 
solve the problem of simulation and evolution modelling 
integration. The genetic optimisation information technology 
(IT) has been designed on the basis of BPsim.MSN, and is 
intended to aid GA setting and GA execution.  
The algorithm for the interaction between the decision 
maker and MGO program during the decision-making 
process is shown in Figure 4. The MRCP model is intended 
to conduct the chromosome’s FF evaluation by carrying out 
an experiment with the model. The decoded chromosome 
phenotype (operations calendar planning) is fed into the 
model input. The FF evaluation in accordance with (13) is 
obtained in the model output. Agents in the MRCP model are 
used to allocate the renewable resources (both own and 
subcontracted). The decision maker carries out the problem 
statement and solution choice among the solutions obtained 
by the use of the MGO program.  
The MGO program has a number of advantages (key 
strengths) compared to existing evolutionary scheduling 
optimisation software [3][5][9][10]: 
1. The integration of simulation, expert, multiagent, 
conceptual, and evolutionary approaches in order to decide 
the scheduling optimisation problem. 
 
Figure 4.  Interaction between the decision maker and MGO program. 
 
2. The availability of the hybrid multiagent system 
architecture, which allows complex scheduling models to be 
built consisting of two interacting elements: 1) the dynamic 
model MRCP and 2) the genetic optimisation model 
intended for control of model MRCP parameters. 
3. Description of the system models using MRCP and 
UML graphical notation. 
4. The evolutionary and simulation models' integration 
via wizard technology for users without programming skills. 
5. The modified genetic algorithm implementation in the 
genetic optimisation model. 
6. Support for the development of the user's own ways of 
solving the scheduling problem by the use of a modified GA 
through the decision's phenotype encoding description using 
Transact SQL query language and decision search diagrams 
based on the UML (only for user-programmers). 
The MGO program is intended to decide the scheduling 
problem under certainty. Let us consider the modification of 
the MGO method in order to solve the scheduling problem 
under uncertainty. 
VII. THE MGOU METHOD OF PROJECT SCHEDULING 
UNDER UNCERTAINTY 
The project scheduling process is a time-consuming task 
that is complicated by the incompleteness of the initial 
information, the reduction of decision-making time, and 
increased requirements for the experience and expertise of 
decision makers (DM). The incompleteness of initial 
information is related to the uncertainty of the situation in 
which the decision should operate. 
Two different types of uncertainty are allocated in [19]: 
the uncertainty of the environment state and the "active 
partner" uncertainty, reflecting the behaviour of the other 
decision makers. Accounting for the "active partner" 
uncertainty leads to the problem statement in conflict 
situations; methods for solving such problems are considered 
by the theory of games [19]. 
A. Problem Statement Under Uncertainty 
We considered the scheduling problem under the 
environment’s behaviour uncertainty. We associated the 
environment’s 
behaviour 
uncertainty 
in 
the 
project 
scheduling with the lack of information on the number and 
size of additional projects that may arise during the planning 
period. The statement of the problem given in Section III 
takes the following form: 
max
( ( , ))}
( ( , )),
{
2
1
→
=
x z
OF
x z
OF
y
ϕ
ϕ
,
Y
Z y
X z
x
∈
∈
∈
,
,
 (14) 
where X = {x1,…,xn} is a set of the alternative schedules; 
Z={z1,…,zS} is a set of the environment states; ϕ(x,z) is a 
transformation function of the alternative schedule x at the 
environment state z in some results; OF1,OF2 are objective 
functions of the problem considered; 
s
j
n
i
ijy
Y
1..
} 1..
{
=
=
=
 is a set 
of the decisions evaluation (matrix of decisions).  
9
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Each element of the matrix (14) yij is a collection of 2 
estimates of the alternative xi outcome for environmental 
condition zj. 
We denoted the set of the probabilities that the 
environment will be in the states Z as follows: P= {p1,…,pS}, 
Σpj = 1. The vector P can be unknown for the selected 
environmental states Z. 
The main difficulty in solving the problem (14) is the 
function ϕ definition, since this function should consider the 
cumulative system behaviour statistics, dynamic system 
processes, and DM behaviour scenario that it is not always 
possible to represent analytically for real management 
problems. The use of multiagent simulation allows the 
imposed requirements of the transformation function ϕ to be 
taken into account. The MRCP model is used for the system 
processes' formalisation and representation of the function 
ϕ(x,z). 
There are various methods of multi-criteria decision 
making that reduce the multi-criteria problem to the single-
criterion problem [19]. 
In the main criterion method, one of the functions is 
selected as the objective function. This function best reflects 
the purpose of the decision making from the user’s point of 
view. Such a transition is not always equivalent to the 
original problem. 
The linear convolution method allows the criterion vector 
to be replaced by a scalar via a linear combination of all the 
weighted criteria functions. It is a requirement that all the 
functions’ values should be presented on a numerical scale. 
The maximin convolution method is focused on the worst 
case and chooses the optimality criterion, which corresponds 
to the smallest value of all the criteria. The disadvantage of 
this method is its focus on the worst criteria. 
In the presence of knowledge about the decision maker 
preferences, the criteria coefficients can be determined using 
the Saaty method [41]. The main object of the Saaty method 
is a triangular matrix S of pairwise comparisons, each 
element of which is interpreted as the superiority ratio of the 
one criterion over the other. Coefficients of superiority can 
be selected by the user from a fixed Saaty scale. Further, the 
matrix S is transformed to the new matrix S’, for which the 
maximum eigenvalue is determined through a linear 
equations system. The weighted coefficients vector of the 
individual criteria significance is an eigenvector of the 
matrix S’ corresponding to the maximum eigenvalue of the 
matrix S’. The Saaty method's disadvantages are the need to 
solve linear systems of equations and the quadratic 
dependence of the pairwise comparison's number on the 
criteria and number of alternatives [41]. 
The linear convolution method was selected to reduce the 
considered multi-criteria scheduling problem to the single-
criterion problem using normalisation of the criteria with 
respect to the reference values (13). 
Reduction of the problem under uncertainty (14) to the 
deterministic problem implies the application of numerical 
criteria. These criteria reflect the optimistic/pessimistic 
perspective of the decision maker on the processes [19]. The 
optimistic criterion is the Hurwitz criterion with the 
coefficient equal to 1. The pessimistic criteria are: Wald 
criterion, Savage criterion, and Hurwitz criterion with 
coefficients equal to 0. The neutral criteria are: Bayes-
Laplace criterion, Bernoulli criterion, and Hurwitz criterion 
with coefficients equal to 0.5. 
All the mentioned criteria are used for uncertainty 
removal in the scheduling method described below. 
B. Multiagent Genetic Optimisation Method Under 
Uncertainty 
The multiagent genetic optimisation method under 
uncertainty (MGOU method) integrates simulation, genetic 
algorithms, and numerical methods. The MGOU method 
includes the following steps. 
Step 1. Definition of the input information: a) sets Z of 
the environment state and sets P of the probabilities that the 
environment is in the certain state; b) the function ϕ with the 
use of MRCP model. The alternative work schedule x and 
environment state z are fed into the model input. The OF1 
and OF2 evaluations are obtained in the model output. 
Step 2. Formation of a set of alternative schedules X, that 
include the efficient (optimal) solution of the problem (1–3) 
under conditions of certainty. At this step the MGO method 
is used to find the chromosome population (set of alternative 
work schedules) including the efficient (optimal) solution of 
the problem (1–3). 
Step 3. Formation of the matrix of decisions Y for the 
problem (14) via conducting n⋅s experiments with the MRCP 
model with n alternatives from the set X and s alternatives 
from the set Z. The matrix of decisions Y for the problem 
(14) is presented in Table II. 
Step 4. Replacement of the optimality criterion vector 
{OF1,OF2} of the problem (14) on the scalar value. The 
replacement can be performed using known numerical 
methods, such as the linear convolution as in formula (13). 
The statement of the problem (14) after the step's fulfilment 
takes the form: 
max
( , )
→
=
F x z
y
,
Z
X z
Y x
y
∈
∈
∈
,
,
,          (15) 
where F(x,z) is the function of implementing an alternative x 
in environment state z to decision evaluation y. 
Step 5. Reduction of the problem under uncertainty (15) 
to the deterministic problem using numerical functions J. 
There are several numerical functions, depending on the 
knowledge of probabilities vector P and the strategy used for 
the uncertainty removal: the Bayes-Laplace criterion 
(mathematical 
expectation 
criterion), 
Wald 
criterion 
(criterion of the guaranteed result, maximin criterion), 
Savage criterion (criterion of minimum regret), Bernoulli 
criterion (principle of insufficient grounds), and Hurwitz 
criterion (criterion of pessimism-optimism) [19].  
TABLE II.  
MATRIX OF DECISIONS FOR THE MULTI-CRITERIA 
PROBLEM UNDER UNCERTAINTY 
 
z1 
… 
zS 
x1 
OF1(ϕ(x1,z1)), OF2(ϕ(x1,z1)) 
… 
OF1(ϕ(x1,zs)), OF2(ϕ(x1,zS)) 
… 
… 
… 
… 
xn 
OF1(ϕ(xn,z1)), OF2(ϕ(xn,z1)) 
… 
OF1(ϕ(xn,zs)), OF2(ϕ(xn,zS)) 
10
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Let us consider the description of selected numerical 
functions of uncertainty removal. 
The Bayes-Laplace criterion is applied with knowledge 
of probabilities P and characterises the "average income" 
when making an alternative work schedule x [19]: 
∑
=
∈
→
⋅
=
=
S
i
x X
i
i
BL
F x z
p
F x z
x
J
1
max
)
( ,
( , )
( )
,        (16) 
where the line on top of the symbol denotes the mathematical 
expectation. The decision of the problem (16) will be an 
alternative work schedule xi*: i* = arg(maxJBL(xi)). 
The Wald criterion characterises the best solution for the 
most unfavourable situation [19]: 
x X
i
z Z
F x z
x
Jv
i
∈
∈
→
=
max
)
( ,
min
( )
.                 (17) 
This formula is valid if the function F(x,z) characterises 
the "income". Otherwise, the maximin criterion is 
transformed into a minimax criterion.  
The Savage criterion characterises the best solution when 
comparing the worst losses. The losses emerge when there is 
preference of others for one alternative x at a fixed 
environment state z [19]: 
x X
j
i
j
X
x
z Z
x
z
F x
x
Js
j
i
∈
∈
∈
→




−
=
min
)
,
(
max max
( )
.         (18) 
The Bernoulli criterion characterises decisions by 
considering equiprobable external environment events [19]: 
X
x
S
i
iz
F x
S
Jb x
∈
=
→
= ⋅
∑
max
)
( ,
1
)
(
1
.                    (19) 
The disadvantage of this criterion is that the unknown 
distribution law of the magnitude P is replaced by the 
uniform distribution law. 
The Hurwitz criterion characterises the solution for a 
given propensity DM to pessimism or optimism [19]: 
X
x
i
Z
z
i
z Z
F x z
F x z
x
Jh
i
i
∈
∈
∈
→
⋅
−
+
⋅
=
max
)
( ,
) min
1(
)
( ,
max
( )
α
α
,  (20) 
where α is the indicator of pessimism or optimism. If α = 0 
the case of extreme pessimism comes about, if α = 1 the case 
of extreme optimism comes about. 
VIII. MULTIAGENT GENETIC OPTIMISATION PROGRAM 
UNDER UNCERTAINTY 
The program for multiagent genetic optimisation under 
uncertainty (MGOU program) has been developed on the 
basis of an MGO program, BPsim.MAS dynamic situations 
modelling system and BPsim.MSN technical and economic 
development system. The information technology for 
uncertainty removal has been designed on the basis of 
BPsim.MSN.  
The algorithm for the interaction between the decision 
maker and MGOU program during the decision-making 
process under uncertainty is shown in Figure 5. The decision 
maker carries out the problem statement, definition of the 
different environment condition, and alternative work 
scheduling set formed with the help of the genetic 
optimisation IT. 
The uncertainty removing IT is intended to aid risk 
assessment under the uncertainty behaviour of the 
environment. The MRCP model is intended to conduct the 
experiments according to the plan for different values of 
work scheduling and project size (environment condition). 
The MGOU program has a number of advantages (key 
strengths) compared to existing scheduling optimisation 
under uncertainty software [11]–[13][15]–[17], as well as the 
advantages of the MGO program that have already been 
described in the Section VI: 
1. The integration of simulation and evolutionary 
approaches with numerical decision support methods to 
decide the optimisation problem of scheduling under 
uncertainty. 
2. Consideration and removal of parametric and 
structural environmental uncertainty. 
3. The availability of uncertainty removal via wizard 
technology for users without programming skills. 
 
Problem description
Optimisation start
Is the experiment 
last?
Replacement of the 
objective functions 
vector at scalar 
quantity
Uncertainty removing
Better decision choosing
Optimisation end
No
Yes
Conducting the current 
experiment
 Evaluation schedule 
 for state  via 
objective functions 
and 
Multiagent simulation 
model development
MGO method 
performing. Forming a 
set of alternative 
schedules 
Evaluation of the found 
decision sensitivity
Definition of the sets of 
the environment state S 
and sets of the 
probabilities P
Forming an experiments 
plan for sets  and 
Choosing the following 
experiment
 
Figure 5.  Interaction between the decision maker and MGOU program. 
11
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

IX. 
COMPARATIVE ANALYSIS OF THE PROJECT 
SCHEDULING METHODS 
Let us consider the following project scheduling 
methods: critical path method (CPM) and program 
evaluation and review technique (PERT), branch and bound 
method (B&B), genetic algorithms, Xu and Feng's method, 
Osaba's method, and the MGOU method. A comparison of 
the selected methods is presented in Table III.  
The CPM and PERT methods allow the reserves of time 
for the execution of certain works to be determined [17][42]. 
CPM assumes the deterministic duration of activities and 
PERT incorporates uncertainty into activity durations. 
The branch and bound method uses the evaluation of 
upper and lower bounds to cut a set of solutions via removal 
of the subsets containing no optimal solutions. The upper 
bound is obtained using heuristics, while the lower bound 
can be found using mathematical programming [17][42][43]. 
Genetic algorithms are used to find the optimal schedule 
via the evolution of populations of schedules with the help of 
genetic operators [2]–[10][18]. The optimal solution can be 
found in GA by considering not only the one improvement 
decision but many improvement decisions. 
Xu and Feng’s method is intended to optimise project 
scheduling with uncertain activity durations and activity 
costs [11]. First, fuzzy random parameters are transformed 
into fuzzy variables that are subsequently defuzzied using an 
expected value operator with an optimistic-pessimistic index. 
Second, the deterministic problem is solved with the use of a 
hybrid particle swarm optimisation algorithm. 
The Osaba’s method is intended to solve the dynamic 
travelling salesman problem with the use of integrated 
simulation and genetic algorithms [10]. Simulation is used to 
reflect the dynamic nature of the system processes and 
objective function. 
TABLE III.  
ANALYSIS OF THE SCHEDULING METHODS 
Comparison 
criteria 
CPM, 
PERT 
B&B 
GA 
Xu/Feng 
meth. 
Osaba 
meth. 
MGOU 
meth. 
Problem statement 
Scheduling 
● 
● 
● 
● 
● 
● 
Renewable 
resources 
● 
● 
● 
● 
● 
● 
Nonrenewable 
resources 
○ 
○ 
○ 
● 
○ 
● 
Subcontract 
optimisation  
● 
○ 
○ 
○ 
○ 
● 
Methods for solving the deterministic problem 
Simulation 
○ 
○ 
○ 
○ 
● 
● 
Multiagent 
modelling 
○ 
○ 
○ 
○ 
○ 
● 
Optimisation 
methods: 
exact/heuristic 
●/○ 
●/○ 
○/● 
○/● 
○/● 
○/● 
Uncertainty consideration 
Parametric 
uncertainty 
with: 
distribution 
law/fuzzy 
logic 
●/○ 
○/○ 
○/○ 
○/● 
○/○ 
●/○ 
Structural 
uncertainty 
○ 
○ 
○ 
○ 
○ 
● 
The 
MGOU 
method 
integrates 
the 
simulation, 
multiagent, and evolutionary modelling and numerical 
methods in order to solve the project scheduling problem 
under uncertainty. 
The following comparison criteria were distinguished: 
application of renewable and nonrenewable resources; 
optimisation of subcontracting volume in order to decrease 
the project costs; application of simulation in order to 
adequately formalise the nonlinear, non-convex, and non-
differentiable system processes model; application of 
multiagent model in order to reflect the decision makers 
model; application of exact and heuristic optimisation 
methods in order to conduct the optimisation experiment for 
optimal solution finding; consideration of the uncertainty 
with different description in order to reflect unexpected 
external influences on the schedule.  
As we can see from the table, all methods except the 
MGOU method lack the support of some features that might 
be useful in effective decision searching of the scheduling 
problem. For example, subcontract optimisation (except 
CPM and PERT), agent-based approach implementation, and 
structural uncertainty evaluation are limited. Another 
disadvantage of the four most popular scheduling methods 
(CPM, PERT, B&B, GA) are lack of nonrenewable resource 
consumption (including the resource life cycle description), 
lack of simulation that helps to analyse the dynamic system 
processes of the resources allocation, and lack of uncertainty 
consideration (except PERT). The Xu and Feng's method 
considers 
nonrenewable 
resource 
consumption 
and 
uncertainty with fuzzy logic, but does not use simulation and 
multiagent models to optimise subcontracted work. The 
Osaba's method includes simulation but does not consider 
uncertainty. 
The full potential of scheduling under uncertainty is 
implemented in the MGOU method. The disadvantage of the 
method is its lack of fuzzy uncertainty description. 
X. 
EXPERIMENTAL RESULTS 
The application of the MGO and MGOU programs to 
solve the project scheduling problem is presented in this 
section. Let us consider a company, Telesystems, which 
consists of project, manufacturing, and supply departments. 
The goal is the minimization of the company departments' 
total downtime and the total cost of the subcontract. In this 
section we consider the application of the MGO method to 
both the project scheduling problem without uncertainty and 
to the project scheduling problem under uncertainty. 
A. Experimental Results for the Deterministic Problem  
A detailed statement of the considered problem is given 
in [21]. The MRCP model has been developed to evaluate 
the chromosome FF (13). The MRCP model implements the 
resource allocation model, which satisfies the assumptions 
determined in Section III. The model adequacy has been 
proven in [21] through the evaluation of 5 projects. The 
following input information has been used in the model: 1) 
number of projects – 10 with 35 operations; 2) time interval 
– T = 430 days (1 year and 3 months); and 3) time limit – the 
early and late start of the operations is determined by the 
12
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

shift in the provisional operational start dates by 2 weeks to 
the right or left along the time axis.  
The following GA parameters have been determined in 
the course of the genetic optimisation IT work: the 
population size – 10 chromosomes; the chromosome size – 
175 genes (5 genes to encode the 35 project operations); the 
following genetic operators – reproduction based on roulette, 
five-point crossover with probabilities determined by (10) 
and (11), five-point mutation with an initial probability equal 
to 10% and dynamic probability determined by (12), 
inversion with initial probability equal to 5%; algorithm 
stopping criterion – a change of 10 populations; random 
initial population; and following the ASA parameters values 
of tZ0 = 1, α = 0.9, K = 10. 
A comparison of the application of simple GA and 
modified GA was performed. For a better comparison both 
algorithms proceeded from one initial population. The 
dependencies of the chromosome FF and the scheduling 
problem objective function values from the population 
number were obtained as a result of genetic optimisation 
using the developed MGO program. The change in the 
minimum value of the objective function (1) during genetic 
optimisation via simple and modified GA is shown in Figure 
6.a. The change in the maximum value of the fitness function 
(13) during genetic optimisation via simple and modified GA 
is shown in Figure 6.b. The problem solution involves the 
maximization of the GA fitness function and minimization of 
subcontract cost. 
At the initial stage of the modified GA (change of the 
generations 1–5) the search of the original decisions 
predominates and leads to the FF value variations, which 
does not always ensure the achievement of the best FF values 
compared with the simple GA. However, the search results 
are the basis of the targeted search for an extremum in the 
later stages of GA (change of the generations 6–10) that 
leads to the higher quality of the solution found. For the 
problem considered, the decision found with the use of the 
modified GA leads to the subcontract cost of 35189 rubles, 
which is 14% below the subcontract cost obtained by using 
simple GA (41050 rubles). The best decision is achieved in 
the ninth population. 
The project scheduling problem for the Telesystems 
company has also been solved by use of the MS Project 2007 
resources reallocation method and heuristic-simulation (HS) 
method described in [21]. MS Project 2007 provides the 
opportunity for resource reallocation (with smoothing) in 
order to avoid exceeding the own renewable resources 
availability. The percentage utilisation of the manufacturing 
department for the initial work plan for the Telesystems 
company is shown in Figure 7 by means of MS Project. 
 
a. 
 
 
 
 
 
 
b. 
Figure 6.  Dependencies of the fitness function and objective function values from the population number when applying simple GA (solid line) and 
modified GA (dotted line). 
13
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
Figure 7.  Percentage utilisation of the manufacturing department for 
initial work plan in MS Project. 
The initial work plan has been formed by a decision 
maker. In the figure, the x-axis shows the time intervals 
(each of which lasts 12 days); the y-axis shows percentage 
utilisation. The overallocated resource availability (time 
intervals where the use of subcontracting is necessary) is 
shown in the figure by the dark shading of the stripes above 
the horizontal line at the 100% utilisation level. The 
application of the MS Project resource reallocation method 
has allowed the total subcontract cost to be reduced to zero; 
that is, the objective functions (1) and (2) have reached their 
optimal values. But the time constraints (3) have not been 
satisfied by the use of this method. In this way, the MS 
Project resource reallocation method is not considered 
suitable for the scheduling problem. 
The HS method is based on the analysis of the MRCP 
model output parameters. In the HS method, the following 
steps are performed [21]: 1) modelling the results analysis of 
the subcontract cost and company resources utilisation; 2) 
search for bottlenecks associated with operations that require 
high costs of subcontracting; 3) shifting the start dates of 
operations to the period determined by HS information 
technology; and 4) transferring the adjusted model at the 
experiment stage and experiment results evaluation. 
Histograms of the objective functions (1) and (2) 
obtained by the MGO and HS methods are shown in Figures 
8.a and 8.b compared with the initial work plan. The total 
subcontract cost and total downtime of the manufacturing 
department has been consistently reduced by the use of HS 
and MGO methods. All time constraints have been satisfied. 
Based on the analysis of the results it was concluded that 
the MGO method is more effective than the HS method in 
addressing the project scheduling problem in terms of 
economic effect. The total subcontract cost of the project 
portfolio has been reduced by 30% and the total downtime of 
the manufacturing department has been reduced by 1.5% for 
a six month period using the MGO method compared to the 
HS method. The total subcontract cost has been reduced by 7 
times using the MGO method compared with the initial work 
plan. Applying the genetic optimisation based on the 
simulation and evolutionary modelling integration enhances 
the efficiency of the decision making by taking into account 
the dynamic resource allocation model in the simulation 
model and the fulfilment of the direct search in the decision 
space by the GA. The economic effect of applying the MGO 
program to solve the scheduling problem for the Telesystems 
company will be 430000 rubles per year, which is 9% higher 
than the economic effect of the use of the HS method to 
solve the same problem. 
Let us compare the HS and MGO methods in terms of 
performance by measuring CPU time. The CPU time for the 
HS method THSM consists of the sum of the HS IT runtime 
THSIT and the model MRCP runtime TMRCP. The sum is 
multiplied by the number of experiments XIterations conducted 
during the HS technology work. Thanks to the fact that 
THSIT<<TMRCP we can neglect the term THSIT and define THSM 
time as follows: THSM = XIterations⋅TMRCP. 
The CPU time for the MGO method TMGO consists of the 
sum of the genetic optimisation IT runtime TGOIT and model 
MRCP runtime TMRCP, which is multiplied by the 
chromosome number N. The sum is multiplied by the 
generation number K. Thanks to the fact that TGOIT<<TMRCP 
we can neglect the term TGOIT and define TMGO time as 
follows: TMGO = K⋅N⋅TMRCP. 
For the real-world scheduling problem the following 
parameter values were used: XIterations= 3, K = 10, N = 10. In 
this case, the HS method is more desirable in terms of 
performance and consumes 33 times less CPU time than the 
MGO method. This is connected to the use of the simulation 
model in the GA for fitness function evaluation, which is 
performed K⋅N times. The CPU time of the MGO method is 
equal to 30 minutes. 
 
 
 
 
a. 
 
 
 
 
 
 
b. 
Figure 8.  Dependencies of the objective function values on the decision-seeking method. 
14
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

B. Experimental Results for the Problem under 
Uncertainty 
Let us consider the uncertainty behaviour of the 
environment associated with the appearance of four 
additional projects in the spring, summer, autumn, and 
winter, respectively. We defined the sets Z and P through the 
different events occurring in the system  L = {l1,…,lr} and a 
set 
of 
probabilities 
of 
the 
events’ 
occurrence 
PL={pL(l1),…,pL(lr)}; and we considered the set L consisting 
of the following r = 8 events: appearance/absence of 
additional complex project in each of the seasons. 
The graph of the determined environment states Z by 
using events L is shown in Figure 9. 
Sixteen environment states {SA,...,SP} were allocated 
(s=16) as a result of the description of the graph of system 
states. Each state is characterised by the simultaneous 
execution 
of 
h 
events 
from 
the 
set 
L: 
h
i
i
i
i
i
i
l
l
l
L L
L
z
∧
∧
∧
=
⊆
⇔ ∃
...
:
2
1
*
*
, where 
li ∈ L
, 
zi ∈ Z
, 
s
i
=1..
, 
h ≤ r
.  
The probability pi of the system's being in the state zi 
according to the [19] is determined by 
∏
=
=
h
j
j
i
L
i
l
p
p
1
)
(
, 
*
i
ij
l ∈ L
, 
L
j
L i
P
l
p
)∈
(
, ∑
=
=
s
i
ip
1
1.     (20) 
For the problem considered r = 8, h = 4, s = 16; that is, 8 
events are considered that define the 16 states of the system, 
and each state is specified by the simultaneous performance 
of 4 events. The probabilities of the events' occurrence are 
specified in Table IV. 
The probabilities of the systems being in the environment 
states zi calculated for the selected initial conditions are 
shown in Table V. 
Let us calculate, for example, the probability of the 
systems being in the state z16 = SP: L16* = l1∧l3∧l5∧l7 
(according to Figure 9). We use the formula (20): 
.0 05
.0 25
5.0
5.0
.0 75
( )
( )
( )
)
(
7
5
3
1
16
=
⋅
⋅
⋅
=
⋅
⋅
⋅
=
l
p
l
p
l
p
l
p
p
L
L
L
L
. 
The model MRCP of the project work performance was 
used to evaluate the work schedules for 16 selected states of 
the environment. The MRCP model, which has been 
described for the MGO method, was supplemented with the 
following input parameters: marks of the systems being in 
one of the analysed states. 
 
Figure 9.  Graph of the system states. 
TABLE IV.  
EVENTS L AND PROBABILITIES PL OF EVENTS’ 
OCCURRENCE  
li 
Spring 
project l1 
Summer 
project l3 
Autumn 
project l5 
Winter 
project l7 
pL(li) 
0.75 
0.5 
0.5 
0.25 
 
As a result of the application of the MGO method, 10 
generations of chromosomes were obtained with information 
stored in the genes about the start dates of the projects' 
operations. Let us choose as a set of alternatives X the 
decoded chromosomes in the ninth population of GA, where 
the best solution to the problem considered was obtained 
according to Figure 6. Let us define the dimension of the set 
of alternatives n = 8. 
The matrix of decisions Y for the project scheduling 
problem under uncertainty is formed by assessing, with the 
use of MRCP model, the selected alternatives {x1,…,x8} via 
the set of criteria {OF1,OF2} for each system state 
{z1,…,z16}. Table II has been filled as a result of conducting 
the n⋅s = 128 experiments. The criterion vector {OF1,OF2} 
has replaced the scalar value with the use of the formula (13) 
and following the values of the formula coefficients: ω1=0.5; 
ω2=0.5. The removal of uncertainty has been carried out by 
applying the removing uncertainty IT that implements 
selected numerical criteria. 
We applied the Bayes-Laplace criteria (16) for 
replacement of the matrix of decisions Y on the vector of 
decisions JBL(x). After performing the transformation, the 
following vector was obtained: JBL(x) = {104.0; 95.8; 90.4; 
121.5; 120.7; 127.7; 143; 126.5}. It is easy to determine that 
the best solution is an alternative x7 with the criterion value 
JBL(x7) = 143. The data obtained agree with the results of the 
MGO method application. 
Let us investigate the stability of the solution x7 when 
changing the initial search conditions. By the term “stability 
of the solution” we mean the preservation of the solution’s 
advantages over alternative solutions when changing the 
decision-maker preferences in the evaluation of the 
importance of objective function (13) criteria and the 
probabilities of events if they are known. The stability of the 
found solution x7 can be evaluated by the application of the 
Bayes-Laplace criterion to remove the uncertainty of the 
alternative sets. A series of experiments were carried out in 
order to find a vector function for evaluating the alternatives 
X for different initial conditions. The initial conditions were 
obtained by varying the degree of importance of criteria in 
forming the implementation function (coefficients ω1 and ω2 
in formula (13)) and the probabilities of events pL (see Table 
IV). 
TABLE V.  
ENVIRONMENT STATES Z AND PROBABILITIES P 
zi 
SA 
SB 
SC 
SD 
SE 
SF 
SG 
SH 
SI 
SJ 
SK 
SL 
SM 
SN 
SO 
SP 
pi 
0.05 
0.14 
0.05 
0.14 
0.05 
0.01 
0.01 
0.14 
0.05 
0.05 
0.05 
0.01 
0.01 
0.14 
0.05 
0.05 
 
15
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The dependence of the Bayes-Laplace function on the 
changes in initial conditions is shown in Figure 10. Analysis 
of the behaviour of the function JBL(x) for different initial 
conditions has shown that the optimal value of the alternative 
x7 is preserved for all the analysed situations. Superiority of 
the calendar plan x7 is maximum in the case of the 
equiprobable occurrence of the four additional projects (with 
a probability of no more than 0.75) and when the objective 
function OF1 (which minimises the total subcontracting cost) 
is selected as the most important criterion of the problem 
considered. The superiority of the calendar plan x7 is 
minimum (right side of the upper chart on Figure 10) in the 
case of high probabilities of four additional projects. 
Let us apply the 4 remaining numerical criteria for 
removing uncertainty and let us evaluate the stability of the 
solution x7 relative to the alternatives set X by changing the 
coefficient values ω1 and ω2 in formula (13). For the Hurwitz 
criterion we define α = 0.5. The dependence of the function 
J(x) behaviour (for different numerical functions) on the 
significance of the individual components of the criterion 
function (13) is shown in Figure 10. 
 
 
 
 
 
Figure 10.  Values of the function J(x) for various numerical criteria when the coefficients of the objective function (13) are changed. 
16
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

As follows from the charts, the use of the Savage, 
Bernoulli, and Hurwitz criteria reveals the optimal solution 
x7 that maintains stability when changing the function (13) 
coefficients. The scatter of the function J(x) values is 
observed for experiments in which function OF1 is selected 
as the most important criterion of the problem considered. 
Function J(x) values approximation is observed for the 
experiments in which function OF1 becomes insignificant 
when compared with the remaining component (function 
OF2). In applying the Wald criterion, the correlation between 
function J(x) values is set for each experiment. This fact is 
connected only to the analysis of the worst situations in 
which all alternatives provide comparable outcomes for each 
experiment. 
The solution (calendar plan of the works) that provides 
the best outcome from the perspective of subcontract cost 
and the minimization of own resources downtime, and which 
provides resistance to external factors, was identified with 
the use of the MGOU method. Also, this solution is optimal 
for the scheduling problem under certainty. We concluded 
that the cost of subcontracting is the most important 
criterion, which greatly affects the objective function when 
changing environmental conditions. 
XI. 
CONCLUSION AND FUTURE WORK 
In this paper, a multiagent genetic optimisation method 
used to solve the deterministic and stochastic project 
scheduling problem has been described on the basis of the 
annealing simulation algorithm, novelty search algorithm, 
genetic algorithm, multiagent simulation, and numerical 
methods. In order to reflect the dynamic nature of the genetic 
operators applied, the method combines three different 
decision-seeking strategies: a random search strategy, 
originality search strategy, and maximum search strategy. 
The proposed integration of evolutionary modelling and 
simulation limits the search space and adequately evaluates 
the dynamic fitness functions of the chromosomes. The 
method described has been implemented in MGO and 
MGOU programs built on the basis of the BPsim.MAS 
multiagent modelling system and BPsim.MSN development 
system. 
The 
programs 
integrate 
simulation, 
expert, 
multiagent, conceptual, and evolutionary modelling with 
numerical methods of uncertainty removal. The comparative 
analysis of the scheduling methods has shown the 
disadvantages of the four the most popular scheduling 
methods (CPM, PERT, B&B, GA) with regard to the lack of 
nonrenewable resource consumption, 
simulation, 
and 
uncertainty consideration. Also, the analysis has shown the 
advantages of the MGOU method in the presence of 
subcontract 
optimisation, 
agent-based 
approach 
implementation, and structural uncertainty evaluation. The 
MGO method's application to a real-world deterministic 
project scheduling problem was compared with the MS 
Project and HS methods. The MS project resource 
reallocation method was found to be unsuitable for the 
scheduling problem under consideration because of the lack 
of constraints considered. As a result of the comparison 
between the MGO and HS methods, an improvement in 
decision quality under the constraints considered has been 
achieved using the MGO method. 
The disadvantage of the MGO method is the high CPU 
time, which is 33 times higher than that of the HS method. 
This fact imposes constraints on the GA generation size (no 
more than 10 chromosomes) and GA iteration number (no 
more than 10 generations). Different ways of enhancing the 
applied GA convergence should be considered in future 
work to meet the described constraints. 
The MGOU method of multi-criteria decision making 
under uncertainty has been applied to the project scheduling 
problem aimed at optimising the utilisation of subcontracted 
workforces and own resources. The decisions found by the 
MGO method have been analysed under the structural 
uncertainty of the four additional projects appearance. 
Inferences have been drawn about the optimal decision 
flexibility with the environmental condition changes. The 
results of the experiments have shown the coherence of the 
use of selected numerical criteria. 
The aim of future research is to improve the rate of 
convergence of the proposed genetic algorithm by applying 
elitism and taboo algorithms. The dependency between the 
decision search time and problem dimensions is assumed to 
be established for the MGOU method. Also, consideration of 
nonrenewable resource allocation and fuzzy description of 
uncertainty is planned. 
It is planned to extend and apply the developed method 
for the scheduling of technological logistics in the field of 
metallurgy. Similar problems have the following features: 
first, the presence of a plurality of industrial units and 
vehicles to be scheduled and, secondly, the presence of 
conflict situations when driving vehicles (cranes and steel 
teeming ladle cars in the shops). The technological logistics 
scheduling is complicated by consideration of the production 
plan for the units of output and the availability of additional 
technological support operations, which are strictly related to 
the number of the completed basic technological operations 
at the industrial unit. It is planned to develop a multiagent 
simulation model of the industrial unit’s work and vehicle 
movements and optimise the values of the controlled model 
variables – the route of vehicle movement and the industrial 
unit' s work plan – using a modified genetic algorithm. 
ACKNOWLEDGEMENT 
This 
work 
was 
performed 
under 
contract 
№ 
02.G25.31.0055 (project 2012-218-03-167). 
REFERENCES 
[1] K. Aksyonov and A. Antonova, “Multiagent genetic 
optimisation to solve the project scheduling problem,” Proc. 
ICCGI 2013: The Eighth International Multi-Conference on 
Computing in the Global Information Technology, Nice, 
France, pp. 237–242, July 2013. 
[2] I. Okada, X. F. Zhang, H. Y. Yang, and S. Fujimura, “A 
random key-based genetic algorithm approach for resource-
constrained project scheduling problem with multiple modes,” 
Proc. Int. MultiConf. Engineers and Computer Scientists, vol. 
1, Hong Kong, pp. 106–111, March 2010. 
17
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[3] M. Klimek, “A genetic algorithm for the project scheduling 
with the resource constraints,” Annals UMCS Informatica, 
vol. 10, issue 1, pp. 117–130, 2010. 
[4] E. Sriprasert and N. Dawood, “Genetic algorithms for multi-
constrained scheduling: an application for the construction 
industry,” Proc. CIB W78's 20th International Conf. 
Construction IT, Construction IT Bridging the Distance, CIB 
Report 284, Waiheke Island, New Zealand, pp. 341–353, 
April 2003. 
[5] H. Abdel-Khalek, M. H. Sherif, A. M. el-Lacany, and Y. 
Abdel-Magd, “Financing – scheduling optimization for 
construction projects by using genetic algorithms,” World 
Academy of Science, Engineering and Technology, vol. 5, pp. 
289–297, 2011. 
[6] M. Karova, J. Petkova, and V. Smarkov, “A genetic algorithm 
for project planning problem,” Proc. Int. Scientific Conf. 
Computer Science, Krakov, Poland, pp. 647–651, June 2008. 
[7] A. Brezuliani, L. Fira, and M. Fira, “A genetic algorithm 
approach for scheduling of resources in well-services 
companies,” International Journal of Advanced Research in 
Artificial Intelligence, vol. 1, no. 5, pp. 1–6, 2012. 
[8] A. Dhingra and P. Chandna, “A bi-criteria M-machine SDST 
flow shop scheduling using modified heuristic genetic 
algorithm,” International Journal of Engineering, Science and 
Technology, vol. 2, no. 5, pp. 216–225, 2010. 
[9] F.-C. Yang and W.-T. Wu, “A genetic algorithm based 
method for creating impartial work schedules for nurses,” 
International Journal of Electronic Business Management, 
vol. 10, no. 3, pp. 182–193, 2012. 
[10] E. Osaba, R. Carballedo, and F. Diaz, “Simulation tool based 
on a memetic algorithm to solve a real instance of a dynamic 
TSP,” Proc. IASTED Int. Conf. Applied Simulation and 
Modelling, Napoli, Italy, pp. 27–33, June 2012. 
[11] J. Xu and C. Feng, “Multimode resource-constrained multiple 
project scheduling problem under fuzzy random environment 
and its application to a large scale hydropower construction 
project,” The Scientiﬁc World Journal, vol. 2014, 2014. 
[Online]. 
Available 
from: 
http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3914335/pdf/
TSWJ2014-463692.pdf [Retrieved: May 2014] 
[12] J. He and Z.-P. Wan, “Construction project scheduling  
problem with uncertain resource constraints,” Journal of 
Construction Engineering and Management ASCE, vol. 15, 
no.1, pp. 324–326, 2002. 
[13] X. Zhang and X. Chen, “A new uncertain programming 
model for project scheduling  problem,” An International 
Interdisciplinary Journal, vol. 15, no. 10, pp. 1–10, 2012. 
[14] A. Csebfalvi, “A unified model for resource constrained 
project scheduling problem with uncertain activity durations,” 
International Journal of Optimization in Civil Engineering, 
vol. 2, no. 3, pp. 341–355, 2012. 
[15] C. Artigues, R. Leus, and F. T. Nobibon, “Robust 
optimization for resource-constrained project scheduling with 
uncertain 
activity 
durations,” 
Flexible 
Services 
and 
Manufacturing Journal, vol. 25, no. 1–2, pp. 175–205, 2013. 
[16] W.-N. Chen and J. Zhang, “Scheduling multi-mode projects 
under uncertainty to optimize cash ﬂows: a Monte Carlo ant 
colony system approach,” Journal of Computer Science and 
Technology, vol. 27, no. 5, pp. 950–965, 2012. 
[17] M. Brcic, D. Kalpik, and K.Fertalj, “Resource constrained 
project scheduling under uncertainty: a survey,” Proc. Central 
European Conference on Information and Intelligent Systems, 
Varazdin, Croatia, pp. 401–409, September 2012. 
[18] D. Goldberg, Genetic Algorithms. Addison Wesley, 1989. 
[19] I.G. Chernorutskii, Decision-making methods. St. Petersburg: 
BHV-Petersburg, 2005. 
[20] M.-Y. Chen, H.-C. Tsai, and E. Sudjono, “Evaluating 
subcontractor performance using evolutionary fuzzy hybrid 
neural 
network,” 
International 
Journal 
of 
Project 
Management, no. 29, pp. 349–356, 2011. 
[21] K. A. Aksyonov and A. S. Antonova, “Application of 
simulation and intelligent agents to solve project management 
problem,” International Journal of Computer Science 
Engineering and Information Technology Research, vol. 3, 
no. 1, pp. 321–330, 2013. [Online]. Available 
from: 
http://www.tjprc.org/view_archives.php?year=2013&id=14&j
type=2&page=3 [Retrieved: May 2014] 
[22] B. Keller and G. Bayraksan, “Scheduling jobs sharing 
multiple 
resources 
under 
uncertainty: 
a 
stochastic 
programming approach,” IE Transactions, vol. 42, no. 1, pp. 
16–30, 2009. 
[23] J. Lehman and K. Stanley, “Exploiting open-endedness to 
solve problems through the search for novelty,” Proc. 
Eleventh 
Intern. 
Conf. 
Artificial 
Life 
(ALIFE 
XI), 
Cambridge, MA, pp. 329–336, August 2008. 
[24] L. A. Zinchenko, V. M. Kureichik, and V. G. Redko (Eds.), 
Bionic Information Systems and their Practical Applications, 
Moscow, FIZMATLIT, 2011. 
[25] W. L. Goffe, G. D. Ferrier, and J. Rogers, “Global 
optimization 
of 
statistical 
functions 
with 
simulated 
annealing,” Journal of Econometrics 60, pp. 65–99, 1994. 
[26] K. Aksyonov et al., “Decision Support Systems Application 
to Business Processes at Enterprises in Russia,” in Efficient 
Decision Support Systems – Practice and Challenges in 
Multidisciplinary Domains, C. Jao, Ed. InTech, pp. 83–108, 
2011. ISBN: 978-953-307-441-2. [Online]. Available  from: 
http://www.intechopen.com/articles/show/title/decision-
support-systems-application-to-business-processes-at-
enterprises-in-russia. [Retrieved: May 2014] 
[27] K. A. Aksyonov and N. V. Goncharova, Multi-agent resource 
conversion processes dynamic simulation, Yekaterinburg: 
USTU, 2006. 
[28] K. A. Aksyonov, Research and development of tools for 
discrete resource conversion processes simulation, DPhil 
research 
paper, 
Ural 
State 
Technical 
University, 
Yekaterinburg, Russia, 2003. 
[29] A. V. Andreichikov and O. N. Andreichikova, Intelligent 
information systems. Moscow: Finance and statistics, 2004. 
[30] Modelling system Plant Simulation. The official web site. 
[Online]. Available from: 
http://www.plm.automation.siemens.com/en_us/products/tecn
omatix/plant_design/plant_simulation.shtml [Retrieved: May 
2014]  
[31] W. D. Kelton, J. S. Smith, D. T. Sturrock, and A. Verbraeck, 
Simio and Simulation: Modeling, Analysis, Applications. 
New York: McGraw-Hill, 2010. 
[32] Real-time expert system G2. The official web site. [Online]. 
Available 
from: 
http://www.gensym.com/en/product/G2 
[Retrieved: May 2014] 
[33] Mutiagent modelling system AnyLogic. The official web site. 
[Online]. 
Available 
from: 
http://www.anylogic.com 
[Retrieved: May 2014] 
[34] Mutiagent modelling system RepastJ. The official web site. 
[Online]. 
Available 
from: 
http://repast.sourceforge.net/index.html 
[Retrieved: 
May 
2014] 
[35] G. Rzevski, J. Himoff, and P. Skobelev, “MAGENTA 
technology: a family of multi-agent intelligent schedulers. 
International conference on multi-agent systems” Proceedings 
of Workshop on Software Agents in Information Systems and 
Industrial Applications 2 (SAISIA). Fraunhofer IITB, 
Germany, 
2006. 
[Online]. 
Available 
from: 
18
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

http://rzevski.net/06%20i-Scheduler%20Family.pdf 
[Retrieved: May 2014] 
[36] The official UML web site. [Online]. Available from: 
http://www.uml.org [Retrieved: May 2014] 
[37] SQL Server language reference. [Online]. Available from: 
http://msdn.microsoft.com/en-
us/library/ms166026(v=sql.90).aspx [Retrieved: May 2014] 
[38] M. Wooldridge, “Intelligent agent: theory and practice,” 
Knowledge Engineering Review, vol. 10 (2), 1995. 
[39] J.P. Muller and M. Pischel, The Agent Architecture InteRRap: 
Concept and Application. Sarbrücken: German Research 
Centre for Artificial Intelligence (DFKI), 1993. 
[40] FIPA ACL Message Structure Specification. [Online].  
Available 
from: 
http://www.fipa.org/specs/fipa00061/SC00061G.html 
[Retrieved: May 2014] 
[41] T. L. Saaty, Decision making with dependence and feedback: 
the analytic network process. University of Pittsburgh: RWS 
Publications, 1996. 
[42] F. S. Hillier and G. J. Lieberman, Introduction to stochastic 
models in operations research. New York: McGraw-Hill, 
1990. 
[43] A. Chaleshtari and S. Shadrokh, “A branch and bound 
algorithm for resource constrained project scheduling problem 
subject 
to 
cumulative 
resources,” 
Proc. 
International 
Conference 
on 
Information 
Management, 
Innovation 
Management and Industrial Engineering (ICIII), IEEE, vol. 1, 
Shenzhen, China, pp. 147–152, November 2011. 
19
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

