Construction of Optimal 4-bit S-boxes by Quasigroups of Order 4
Hristina Mihajloska
Faculty of Computer Science and Engineering
Ss Cyril and Methodius University
Skopje, Macedonia
email: hristina.mihajloska@ﬁnki.ukim.mk
Danilo Gligoroski
Department of Telematics
Norwegian University of Science and Technology
Trondheim, Norway
email: danilog@item.ntnu.no
Abstract—We present a new method for constructing crypto-
graphically strong 4×4-bit S-boxes with the help of quasigroups
of order 4. So far, cryptographers were constructing 4×4-bit S-
boxes used in cryptographic primitives suitable for lightweight
cryptography, only by exhaustive search of permutations of
order 16. Our construction of 4×4-bit Quasigroup-S-boxes (Q-
S-boxes) uses quasigroup string transformations. This method-
ology enables someone to work basically with several different
strong S-boxes iteratively reusing only one hardware circuit
and just changing a few parameters (called leaders in our
method).
Keywords-lightweight cryptography; quasigroups; quasigroup
string transformations; S-boxes.
I. INTRODUCTION
In this paper, we focus on the Symmetric Lightweight
Cryptography for cryptographic components that can be
efﬁciently implemented into block ciphers. Although the
Advanced Encryption Standard (AES) [1] block cipher is
the most used cryptographic component, it was mainly
designed to be efﬁcient in software. For many constrained
environments, using AES as a block cipher is either too
expensive or there is no need for such a high level of
security that it offers. Thus, it is not a surprise that in the
last several years we see a dynamic development in the area
of Lightweight Cryptography especially in the lightweight
block ciphers such as PRESENT [2][3].
The main point of security in symmetric cryptography in
almost all modern block ciphers is the substitution boxes
also known as S-boxes. S-boxes work with a small unit of
data, so they have to be distinguished with highly non-linear
properties if they want to confuse the input data into the
cipher.
PRESENT is an ultra-lightweight block cipher proposed
by Bogdanov et al. [2]. It has been designed for ex-
tremely resource-constrained environments such as RFID
tags. PRESENT is an SP-Network block cipher which
consists of 31 rounds and operates on 64-bit block sizes. It
supports two lengths of key, 80 or 128 bits, where 80-bit key
is recommended to be used. Each of the 31 rounds is applied
on three stages. The ﬁrst stage is AddRoundKey, the second
is SBoxLayer and the third stage is the bit permutation
pLayer. The most interesting for us, is the second stage
where the starring role belongs to the S-boxes.
The non-linear layer (SBoxLayer) uses a single 4-bit
input and 4-bit output (4 × 4-bit) S-box. Also the choice of
4 × 4-bit S-box is a direct consequence of authors’ pursuit
for hardware efﬁciency, where implementation of such an
S-box typically being much more compact and requires
less resources than that of an 8 × 8-bit S-box. A 4-bit
S-box requires less than a quarter of the hardware area
(expressed in GEs - gate equivalences) of an 8-bit S-box.
From cryptographic point of view, 4-bit S-boxes have to be
selected very carefully because they are weaker than 8-bit
S-boxes.
PRESENT S-boxes are derived as a result of an exhaustive
search of all 16! bijective 4-bit S-boxes. All S-boxes found
in this way that fulﬁlled additional criteria for optimality
have been analyzed in relation to linear equivalence. So,
there are only 16 different non-equivalent classes [4]. All
the S-box members in these classes are optimal S-boxes with
respect to linear and differential properties. Also the authors
notiﬁed that these S-boxes are also optimal with respect to
the algebraic degree or resistance against algebraic attacks.
A slightly more general classiﬁcation of all 4-bit S-boxes
was given by Saarinen in [5].
Instead of an exhaustive search of all 16! bijections of 16
elements as it was done for the design of PRESENT, in this
work we offer a compact, fast and elegant methodology for
construction of cryptographically strong S-boxes by using
quasigroups of order 4. Our goal is to give cryptographers an
iterative tool for designing cryptographically strong S-boxes
(in this paper, we denote them as Q-S-boxes since their
construction is done by quasigroups) for future designs in
the symmetric lightweight cryptography. Our methodology
enables someone to work basically with several different
strong S-boxes iteratively reusing only one hardware circuit
and just changing a few parameters.
The structure of the paper is the following. In Section II,
we give a brief mathematical description of the quasigroups
and quasigroup string transformations. In Section III, we
present the linear and differential characteristics of S-boxes,
and conditions of one S-box to be optimal. We give the
representation of quasigroups as vector valued Boolean
163
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-209-7
SECURWARE 2012 : The Sixth International Conference on Emerging Security Information, Systems and Technologies

functions in the Section IV. In Section V, we show a method
for construction of cryptographic 4 × 4-bit Q-S-boxes, and,
in Section VI, we give a conclusion and future work.
II. PRELIMINARIES - QUASIGROUPS AND QUASIGROUP
STRING TRANSFORMATIONS
In this section, we give a brief mathematical introduction
in the area of quasigroups and quasigroup string transforma-
tions. A more detailed explanation about quasigroups and
their applications can be found in [6][7][8][9][10].
Let (Q, ∗) be a ﬁnite binary groupoid, i.e., an algebra
with one binary operation ∗ on the non-empty set Q and
a, b ∈ Q.
Deﬁnition 1: A ﬁnite binary groupoid (Q, ∗) is called a
quasigroup if for all ordered pairs (a, b) ∈ Q2 there exist
unique solutions x, y ∈ Q to the equations x ∗ a = b and
a ∗ y = b.
This implies the cancelation laws for quasigroup i.e.,
x ∗ a = x′ ∗ a =⇒ x = x′ and a ∗ y = a ∗ y′ =⇒ y = y′.
Any quasigroup is possible to be presented as a multipli-
cation table known as Cayley table. Quasigroups are closely
related to Latin squares. Removing the topmost row and the
leftmost column of the Cayley table of a quasigroup, results
in a Latin square. A Latin square is an arrangement of n
symbols in a n × n matrix such that no row and no column
contains any of the symbols twice.
The order of a quasigroup (Q, ∗) is the cardinality |Q| of
the non-empty set Q. The set of all quasigroups of order n
is denoted by Qn.
In what follows, we will work with ﬁnite quasigroups of
order 4 only. That means that our design of S-boxes uses
|Q|2 = 42, 2-bit words of internal memory for storing the
quasigroup. We will need 4 bytes (4B) of internal memory
for storing the quasigroup, which is acceptable amount if
we want to implement it in some lightweight designs.
Example 1: Let Q = {0, 1, 2, 3}. A quasigroup (Q, ∗) of
order 4 has the following Cayley table:
∗
0
1
2
3
0
0
1
3
2
1
1
0
2
3
2
2
3
0
1
3
3
2
1
0
For our method for construction of optimal S-boxes
described in Section V we will use the notion of quasigroup
string transformation “e-transformation” as deﬁned in [11].
Let Q be a set of elements (|Q| ≥ 2) and let we denote
by Qr = {a0, a1, . . . , ar−1|ai ∈ Q, r ≥ 2} the set of all
ﬁnite strings with elements of Q.
Assuming that (Q, ∗) is a given quasigroup, for a ﬁxed
element l ∈ Q, called leader, the transformation el : Qr →
Qr is as follow:
el(a0, a1, . . . , ar−1) = (b0, b1, . . . , br−1) ⇔
{ b0
=
l ∗ a0
bi
=
bi−1 ∗ ai,
1 ≤ i ≤ r − 1
(1)
This e-transformation is called elementary quasigroup
string transformation [12]. It transforms bijectively a given
string with length r to other resulting string with the same
length r.
Graphical representation of the transformation is shown
in Figure 1.
a0
a1
. . .
ar−2
ar−1
l
b0
b1
. . .
br−2
br−1

The Walsh spectrum SW for this S-box is calculated by:
SW (u, v) =
X
x∈Fn
2
(−1)u·x+v·S(x)
(5)
Theoretically, it is proven that Lin(S) ≥
1
2n [14].
One of the most important properties for S-boxes is
so-called differential potential of an S-box. It is used in
measuring the resistance of the cryptographic primitives
that use that S-box against differential cryptanalysis. The
differential potential of an S-box S is deﬁned in [13] as:
Diff(S) = max{ 1
2n ∆S(u, v) | u ∈ Fn
2 , v ∈ Fq
2,
and
(u, v) ̸= 0} (6)
where
∆S(u, v) = |{x ∈ Fn
2 | S(x ⊕ u) = S(x) ⊕ v}|
(7)
Clearly, it holds for any S-box that Diff(S) ≥
1
2q .
A. Optimal 4-bit S-boxes in PRESENT
As we mentioned in the introduction, the used S-boxes
in the block cipher PRESENT have been obtained by an
exhaustive search of all 16! permutations by checking some
optimality criteria for their linearity and their differential po-
tentials. Namely, all generated S-boxes were ﬁrst presented
as a Boolean map S : F4
2 → F4
2. Then, using the above
formulations about Lin(S) and Diff(S), the optimal set
of PRESENT S-boxes was formed by S-boxes that have
Lin(S) = 1
4 and Diff(S) = 1
4 [4].
More formally, as it is given in [4], the deﬁnition of an
optimal S-box is the following:
Deﬁnition 2: Let S be an 4 × 4-bit S-box with 24 input
values. If S fulﬁlls the following conditions we call S an
optimal S-box:
1) S is a bijection;
2) Lin(S) = 1
4;
3) Diff(S) = 1
4.
IV. QUASIGROUPS AS VECTOR VALUED BOOLEAN
FUNCTIONS
We will use the representation of ﬁnite quasigroups
(Q, ∗), of order n, where n ≥ 2 and n = 2d as vector
valued Boolean functions. That means that the quasigroup
can be presented as a Boolean map: f : F2d
2 → Fd
2. For each
elements x, y, z ∈ Q the operation x ∗ y = z is represented
by
f(x0, x1, . . . , xd−1, y0, y1, . . . , yd−1) =
(f0(x0, . . . , xd−1, y0, . . . , yd−1), . . . , fd−1(x0, . . . , xd−1, y0, . . . , yd−1))
(8)
where (x0, x1, . . . , xd−1) and (y0, y1, . . . , yd−1) are the bi-
nary representations of x and y respectively, and fi : F2d
2 →
F2, 0 ≤ i ≤ d − 1 are the corresponding components of f
(binary representation of z).
Every Boolean function f : Fm
2 → F2, can be uniquely
written in its Algebraic Normal Form (ANF), as a polyno-
mial in m variables over the ﬁeld F2 that has degree ≤ 1 in
each single variable:
f(x0, x1, . . . , xm−1) =
X
I⊆{0,...,m−1}
aIxI,
(9)
where the monomial xI is the product
xI =
Y
i∈I
xi,
(10)
and aI ∈ {0, 1}.
The ANF has the advantage that we can immediately read
off the algebraic degree. Algebraic degree of a Boolean
function is a degree of a polynomial obtained with its
ANF presentation. Algebraic degree of a Boolean map is
a maximal algebraic degree of its component functions. So,
the ANFs of the Boolean functions fi give us information
about their algebraic degree and much better about algebraic
degree or complexity of the quasigroup (Q, ∗).
Example 2: Let us take the quasigroup given in Example
1. This quasigroup can be presented as a vector valued
Boolean function f : F4
2 → F2
2 by:
f(x0, x1, y0, y1) = (x0 + y0, x1 + y0 + x0 ∗ y0 + y1)
We see that the algebraic degree of this quasigroup is 2.
According to their algebraic degree quasigroups can be
divided in two classes, class of linear quasigroups and class
of non-linear quasigroups. The class of linear quasigroups
has a maximal algebraic degree 1, and all other quasigroups
(which maximal algebraic degree is bigger than 1) belong
to the class of non-linear.
Considering the class of quasigroups of order 4, it can
be checked that there are 144 linear and 432 non-linear
quasigroups, i.e., there are three times more non-linear
quasigroups of order 4 [15].
V. CONSTRUCTION OF OPTIMAL 4-BIT Q-S-BOXES
Our goal is to generate 4 × 4-bit cryptographically strong
S-boxes by using quasigroups of order 4. Quasigroups of
order 4 themselves are 4 × 2-bit S-boxes. It is theoretically
proven that any inversion mapping for even dimension n in
GF(2n) must has algebraic degree smaller than n − 1 [16].
It should be noted that criterion for good S-box is to have
highest possible algebraic degree. From this perspective, we
can conclude that we would search for 4×4-bit S-boxes that
have algebraic degree 3 for all output bits.
We will use quasigroup string transformations that trans-
form a given string with length 2 to a resulting string with
the same length 2, i.e., that maps 4 bits bijectively to 4 bits
(Figure 2).
As it is a case with any iterative application of non-
linear Boolean transformations, by consecutive application
165
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-209-7
SECURWARE 2012 : The Sixth International Conference on Emerging Security Information, Systems and Technologies

a0
a1
l
b0
b1

representative of them is given in Table III.
Table III
ONE OF THE 128 Q-S-BOXES GIVEN IN ITS HEXADECIMAL NOTATION
x
0
1
2
3
4
5
6
7
8
9
A
B
C
D
E
F
S(x)
C
1
2
E
F
9
3
4
8
0
A
B
7
D
6
5
Table IV
DISTRIBUTION OF THE Q-S-BOXES IN RELATION TO DC AND LC
WHERE THE ITERATIVE METHOD WITH 4 LEADERS IS USED
LC →
Lin(S)=1/4
Lin(S)=9/16
Lin(S)=1
DC ↓
n
%
n
%
n
%
Diff(S)=1/4
9,216
8.33
0
0.00
0
0.00
Diff(S)=3/8
3,072
2.78
12,288
11.11
6,144
5.56
Diff(S)=1/2
3,072
2.78
36,864
33.33
15,360
13.89
Diff(S)=5/8
0
0.00
0
0.00
0
0.00
Diff(S)=3/4
0
0.00
0
0.00
0
0.00
Diff(S)=1
0
0.00
0
0.00
24,576
22.22
We made experiments with 4 leaders and with the same
number of rounds (one leader in each round). We produced
110,592 different Q-S-boxes (28 possibilities for the leaders
∗ 432 non-linear quasigroups of order 4), from which 9,216
fulﬁlled the criteria for optimality. In Table IV, we give
the distribution of differential and linear properties among
the 110,592 examined Q-S-boxes. There 8.3% of all Q-S-
boxes have a differential bound 1/4 and linear bound 1/4
and belong to the class of optimal S-boxes. All of these Q-
S-boxes have maximal algebraic degree of all output bits
3, but some of them still have one output bit of degree
2. The number of Q-S-boxes that satisfy, all of the output
bits to have algebraic degree 3 in this case is 1,024. One
representative of them is given in Table V.
Table V
ONE OF THE 1,024 Q-S-BOXES GIVEN IN ITS HEXADECIMAL NOTATION
x
0
1
2
3
4
5
6
7
8
9
A
B
C
D
E
F
S(x)
D
9
F
C
B
5
7
6
3
8
E
2
0
1
4
A
Table VI
DISTRIBUTION OF THE Q-S-BOXES IN RELATION TO DC AND LC
WHERE THE ITERATIVE METHOD WITH 8 LEADERS IS USED
LC →
Lin(S)=1/4
Lin(S)=9/16
Lin(S)=1
DC ↓
n
%
n
%
n
%
Diff(S)=1/4
756,480
2.67
280,320
0.99
0
0.00
Diff(S)=3/8
1,084,416
3.83
9,273,666
32.75
121,278
0.43
Diff(S)=1/2
63,744
0.23
8,394,186
29.65
2,590,518
9.15
Diff(S)=5/8
0
0.00
468,480
1.65
254,208
0.90
Diff(S)=3/4
0
0.00
224,244
0.79
87,564
0.31
Diff(S)=1
0
0.00
0
0.00
4,712,448
16.65
We made also experiments with 8 leaders and 8 rounds.
In this case the number of generated Q-S-boxes signiﬁcantly
increased. We produced 28,311,552 different Q-S-boxes,
from which 756,480 fulﬁlled the criteria for optimality.
Distribution of these examined Q-S-boxes in relation to
Differential Cryptanalysis (rows) and Linear Cryptanalysis
(columns) is given in the Table VI.
The number of Q-S-boxes that satisfy, all of the output bits
to have algebraic degree 3 is 331,264. One representative of
them is given in Table VII.
Table VII
ONE OF THE 331,264 Q-S-BOXES GIVEN IN ITS HEXADECIMAL
NOTATION
x
0
1
2
3
4
5
6
7
8
9
A
B
C
D
E
F
S(x)
5
E
6
D
7
4
2
A
8
C
0
9
1
B
F
3
Apparently, by increasing the number of leaders and
rounds, the number of optimal Q-S-boxes also increases.
With this methodology we can generate all of the optimal S-
boxes, which are already found for PRESENT. The concrete
values for the leaders, the number of used leaders, and which
non-linear quasigroup of order 4 to be used, in order to
produce a PRESENT S-box, can be found by using some of
the modern symbolic algebra systems such as Magma [17]
or SAGE [18].
At the end of this section, we want to note that since we
use non-linear quasigroups of order 4, the iterative procedure
in Algorithm 1 has much bigger probability to produce S-
boxes with optimal criteria than a random search through
the set of all 16! permutations of order 16.
VI. CONCLUSION AND FUTURE WORK
In this paper, we gave a simple iterative method for
producing cryptographically optimal 4 × 4-bit S-boxes by
quasigroups of order 4, using the concept of quasigroup
string transformations. We have given also the summary of
our extensive experimental results. With this method and
right choice of input parameters, we can generate the same
optimal S-boxes like one in the lightweight block cipher
PRESENT.
As a future work we emphasize the generality of our
approach, and its extensibility to permutations of higher
order. Thus a natural extension of our work would be to
produce cryptographically strong 6×4-bit, 8×8-bit and other
types of S-boxes using again iteratively just quasigroups of
order 4. First of all, we should obtain how many rounds
and leaders are necessary to produce Q-S-boxes with the
same quality like known one, and then to see which of them
belong to the class of optimal ones regarding to linear and
differential characteristics of S-boxes.
REFERENCES
[1] J.
Daemen
and
V.
Rijmen.
AES
Proposal:
Ri-
jndael,
AES
Algorithm
Submission,
September
3,
1999.
[retrieved:
July,
2012].
[Online].
Available:
http://csrc.nist.gov/groups/ST/toolkit/index.html
[2] A. Bogdanov, L. R. Knudsen, G. Le, C. Paar, A. Poschmann,
M. J. B. Robshaw, Y. Seurin, and C. Vikkelsoe, “PRESENT:
An Ultra-Lightweight Block Cipher,” in The Proceedings of
CHES 2007.
Springer-Verlag, 2007, pp. 450–466.
167
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-209-7
SECURWARE 2012 : The Sixth International Conference on Emerging Security Information, Systems and Technologies

[3] T. Eisenbarth, S. Kumar, C. Paar, A. Poschmann, and L. Uh-
sadel, “A Survey of Lightweight-Cryptography Implemen-
tations,” in IEEE Design and Test, vol. 24, no. 6.
IEEE
Computer Society Press, November, 2007, pp. 522–533.
[4] G. Leander and A. Poschmann, “On the Classiﬁcation of 4 Bit
S-Boxes,” in Proceedings of the 1st International Workshop
on Arithmetic of Finite Fields.
Springer-Verlag, 2007, pp.
159–176.
[5] M.-J. O. Saarinen, “Cryptographic Analysis of all 4x4-bit S-
boxes,” in Proceedings of the 18th International Conference
on Selected Areas in Cryptography, ser. SAC’11.
Springer-
Verlag, 2012, pp. 118–133.
[6] V. D. Belousov, Osnovi teorii kvazigrupp i lupp.
Nauka,
Moskva, 1967.
[7] J. Denes and A. D. Keedwell, Latin squares: New devel-
opments in the theory and applications.
Elsevier science
publisher, 1991.
[8] ——, Latin squares and their applications.
Academic Press
Inc, December 1974.
[9] S. Markovski, D. Gligoroski, and L. Kocarev, “Unbiased Ran-
dom Sequences from Quasigroup String Transformations,”
in Lecture Notes in Computer Science, ser. FSE, vol. 3557.
Springer-Verlag, 2005, pp. 163–180.
[10] J. D. H. Smith, An Introduction to Quasigroups and Their
Representations.
Chapman and Hall/CRC, 2007.
[11] S. Markovski, “Quasigroup String Processing and Applica-
tions in Cryptography,” in The Proceedings of the 1st MII
Conference, 2003, pp. 278–290.
[12] A. Mileva, “Cryptographic Primitives with Quasigroup Trans-
formations,” Ph.D. dissertation, University Ss. Cyril and
Methodius, Skopje, Macedonia, 2010.
[13] K. Pommering, Fourier Analysis of Boolean Maps.
A
Tutorial, Mainz, 2005.
[14] F. Chabaud and S. Vaudenay, “Links Between Differential
and Linear Cryptanalysis,” in Advances in Cryptology - EU-
ROCRYPT’94, Workshop on the Theory and Application of
Cryptographic Techniques, vol. 950.
Springer-Verlag, 1995,
pp. 356–365.
[15] D. Gligoroski, V. Dimitrova, and S. Markovski, “Quasi-
groups as Boolean Functions, Their Equation Systems and
Gr¨obner Bases,” in Grobner Bases, Coding, and Cryptogra-
phy.
Springer-Verlag, 2009, pp. 415–420.
[16] K. Nyberg, “Differentially Uniform Mappings for Cryp-
tography,” in Advances in Cryptology - EUROCRYPT’93,
Workshop on the Theory and Application of Cryptographic
Techniques, vol. 765.
Springer-Verlag, 1994, pp. 55–64.
[17] W. Bosma, J. Cannon, and C. Playoust, “The Magma alge-
bra system. I. The user language,” in Journal of Symbolic
Computation, vol. 24, 1997, pp. 235–265.
[18] W. Stein, Sage Mathematics Software (Version 5.0.1), The
Sage Development Team, [retrieved: July, 2012][Online].
Available: http://www.sagemath.org.
168
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-209-7
SECURWARE 2012 : The Sixth International Conference on Emerging Security Information, Systems and Technologies

