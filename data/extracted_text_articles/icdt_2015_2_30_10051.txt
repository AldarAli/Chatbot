Indoor Positioning and Navigation System for Interior Design Augmented Reality
Fady Adel, Mina Makary, and Mohamed El-Nahas
Computer and Communications Dept.
Alexandria University
Alexandria, Egypt
e-mail: fady.adel@mena.vt.edu
mina.makary@mena.vt.edu
mohamed.elnahas@mena.vt.edu
Mustafa ElNainay
Computer and Systems Engineering Dept
Alexandria University
Alexandria, Egypt
e-mail: ymustafa@alexu.edu.eg
Abstract—The problem of indoor localization and navigation has
become increasingly important for a range of different appli-
cations. One of these applications is interior design augmented
reality. Due to the inability of the global positioning system (GPS)
to navigate indoors, and the lack of any global indoor localization
scheme, research has turned to develop several approaches and
solutions to indoor localization. Accuracy of these techniques
ranges from few centimeters to few meters depending on the
technology used. High accuracy is achieved through special
hardware equipment. For interior design applications, users are
interested in getting high accuracy in certain positions depending
on the design layout. It is also desirable to use market tablets and
mobile phones rather than special hardware for such applications.
In this paper, a hybrid WiFi ﬁngerprinting - sensor fusion scheme
is proposed to achieve accurate indoor positioning and navigation
using Android tablets. Moreover, an algorithm has been developed
to determine the WiFi Access Points (APs) positions given the
apartment layout. Results show high accuracy for both the
positioning and navigation parts.
Keywords–Indoor positioning; Indoor navigation; WiFi ﬁnger-
printing; Sensor fusion; Interior design augmented reality.
I.
INTRODUCTION
Indoor localization systems work to locate and track ob-
jects within a closed environment such as a building or an
ofﬁce. Sample applications in such systems include positioning
patients in hospitals, objects within a warehouse, employees
in an ofﬁce, customers in malls or locating people within a
burning building. Indoor localization systems can also be used
to enhance the clients experience in applications like Interior
Design Augmented Reality. Indoor localization systems typi-
cally require a carefully planned environment involving Access
Points (APs), sensors or other stationary or mobile equipment.
Furthermore, there has been an increased demand on these
systems to deliver high-accuracy with minimal cost and initial
set-up.
Previous researches concerning this topic have achieved
good results using WiFi ﬁngerprinting, dead reckoning,
camera-based techniques. Furthermore, integrated approaches
have been developed to combine two or more techniques
together. However, most of the proposed techniques do not
target speciﬁc application scenario and hence, the resulted
accuracy was not enough to be used in various applications
that require very high accuracy, e.g., augmented reality appli-
cations. As we are biased towards low cost and high accuracy
systems, we have been investigating the use of a hybrid system
that combines the WiFi ﬁngerprinting technique with the step
detection technique to achieve better accuracy for interior
design augmented reality applications.
This paper provides a number of contributions focusing
on Interior Design Augmented Reality applications. Firstly, an
algorithm is developed to determine the adequate number and
locations for the APs used for the WiFi-Fingerprinting in order
to differentiate easily between different Points of Interests
(positions users are likely to stop at to view the interior
design model). Secondly, to tackle the problem of different
signal strengths in different cardinal directions, a map for
each direction was used. Moreover, the orientation detection
module was enhanced using an algorithm that estimates the
step angle using the last ﬁve angles while excluding outlier
values. Finally, a hybrid WiFi ﬁngerprinting - sensor fusion
scheme is developed to achieve accurate indoor positioning
and navigation using Android tablets.
The remainder of this paper is organized as follows: In
Section II, related work of research of high-accuracy indoor
localization systems is surveyed. The problem assumptions
adopted in this work are listed in Section III. The proposed
solution for the automatic selection of the APs positions is
presented in Section IV. In Section V, the proposed indoor
positioning and navigation hybrid scheme for the interior
design augmented reality application is presented. Performance
evaluation details and results are discussed in Section VI. The
paper is concluded in Section VII.
II.
RELATED WORK
Related work in indoor localization systems have achieved
good results using WiFi ﬁngerprinting, dead reckoning,
camera-based techniques. Furthermore, integrated approaches
have been developed to combine two or more techniques
together. Various methods rely on multi-lateration of radio
waves and location ﬁngerprinting [1][2][3]. However, methods
relying solely on multi-lateration usually provide relatively
low accuracy (within 1-3 meter) as well as being depen-
dent on existing infrastructure and often involve calibration.
Methods relying on location ﬁngerprinting usually provide
slightly better accuracy than multi-lateration methods while
also providing better opportunity for integration with other
localization methods (e.g., dead reckoning) [4].
Shih et al. [5] attempt to deal with problems for ﬁngerprint
differences due to environment changes (weather changes,
28
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

doors opening and closing, etc.). The main idea in the work is
the clustering of reference points (RPs) based on the similarity
of the path-loss exponent values and then uses the path loss
propagation model to calculate RSS ﬁngerprints dynamically
in these RP clusters or regions. This calculation is achieved
via sensors that re-measure the RSS value for each cluster.
The work also contributes an algorithm to calculate accurate
placement of these sensors. The work maintains a higher
accuracy of 0-2 meters but incurs additional computational
cost for the initial k-means clustering which also adds cost
to the calibration phase.
The problem of noisy data (from sudden movements, band
interference, etc.) has been tackled by Zhao et al. [6]. The
system introduces three signal strength ﬁlters: the max ﬁlter,
the limit ﬁlter and the move average ﬁlter. It was found
that two of these ﬁlters (max ﬁlter and limit ﬁlter) provide
higher accuracy to the k-NN algorithm employed for location
estimation; increasing accuracy in 2.5 m range of error to 96%
and reaching 98% in an error range of 3 m. The work also in-
troduces a path tracking assistance that prunes the search space
for the forecasted location to a predetermined subspace. This
requires a stage whereby these subspaces are deﬁned before
real-time location determination but signiﬁcantly lessens the
localization execution time. Although the work by Zhao et al.
[6] provided interesting insights, it failed to tackle heightened
accuracy (less than 1 m) and also did not incorporate any
smartphone sensor data into its localization algorithm.
So et al. [7] discuss a novel method to compare the
run-time ﬁngerprint to the patterns in the ﬁngerprint data
set instead of the Euclidean and probabilistic approaches.
The authors propose two schemes to replace the Euclidean
distance approach. The ﬁrst scheme ﬁlters out large Received
Signal Strength Indicator (RSSI) differences and hence when a
difference increases beyond a certain threshold, the distance is
no longer increased. The second scheme reduces the distance
coefﬁcient to 1 (instead of 2 as in Euclidean distance). This
results in reducing the effect of large RSSI differences and
give higher value to the exact match. The proposed schemes
achieve a much better accuracy than the Euclidean distance
metric. However, they also introduce additional problems of
determining the proper threshold in the ﬁrst scheme. Another
problem is that it increases the sensitivity to small RSS
differences (which is likely occurring due to fading).
Another category depends on device sensors, called dead
reckoning, has shown promise in several approaches. Alzantot
and Youssef [8] recognize and solve some of the problems
of estimating motion based on accelerometer. The presented
approach uses Support Vector Machine (SVM) to detect gait
(walk, jog, etc.) and calculates displacement based on step
count and step length estimations (derived from the gait). One
of the work novel contributions is that its step detection (and
hence count) is done via a Finite State Machine (FSM) that
models the various states in an acceleration signal during a
step. This removes problems of the smartphone changing the
orientation as well as removes any need of preprocessing the
accelerometer signal. Accuracy of navigation is about 4 m
and 97% accuracy on the SVM classiﬁer. Yim [9] presents
a system designed to handle users walking around in large
exhibition spaces. Its main contributions are improvements
on the FSM proposed by Alzantot and Youssef in [8] as
well as periodically assessing if the user is standing to watch
a particular exhibit (via assessing the accelerometer y-axis
magnitudes standard deviation). The system however, depends
on the observation that users in exhibition spaces moved very
slowly; an assumption that is not safe to make for other
environments.
Integrated methods often utilize sensor fusion to combine
inputs from multiple sensors in the Inertial Navigation System
(INS) and RSSI for room-level navigation. The approach
proposed by Holˇc´ık [10] uses sensor fusion to combine heading
information from gyroscope and accelerometer sensors and
utilizes a state model to model transition from one state to
another based on three factors: the RSSI probability map,
step length and stride length. This achieves a relatively bad
accuracy of 2.3 meters. Chai et al. [11] combine inputs
from barometer, WiFi ﬁngerprinting and accelerometer. The
proposed approach uses an Adaptive Kalman Filter (AKF)
to incorporate measurement with the proposed state model.
Although it achieves a slightly better accuracy at 1.65 meters,
it also has the disadvantage of using individual sensors rather
than smartphone ones. Le [12] uses a probabilistic model to
combine RSSI and INS information. The model relies on a
combination of likelihoods, i.e., the likelihood that location is
accurate given RSS information and Previous location from
INS, is equivalent to the probability of WiFi positioning based
on RSS * probability of current location given the previous
location, calculated according to a likelihood function. This is
one of the best accuracies recorded for integrated systems and
achieves an accuracy of 0.7 m.
Aside from the popular approaches discussed so far, other
techniques have also been suggested in the literature for the
localization problem that do not involve location ﬁngerprinting
or an integration of location ﬁngerprinting and dead reckoning.
For example, Filonenko et al. [13] provide 0.1 meter accuracy
but changes the regular hardware used for localization to use
four ultrasound microphones to provide for ultrasound (and
inaudible) multi-lateration.
Previous work either uses special hardware to achieve high
accuracy or cannot achieve the required accuracy for intrior
design augmeneted reality applications. Our focus is to achieve
high accuracy using commercially available Android tablets
depending on the assumption that users of such applications
will likely stop at certain positions to view the design and
navigate between these positions. The next section presents
our system assumptions.
III.
SYSTEM ASSUMPTIONS
In our work, it is assumed that the location/apartment map
with dimensions and the positions where the user will like
to stop and view the interior design is known; we call these
positions the Points of Interests (PoIs). The positioning and
navigation module shall utilize this information to choose the
number and positions of the WiFi APs and then builds a
Radio Map of the signal strengths at each of the PoIs in an
ofﬂine phase. Using the WiFi ﬁngerprinting techniques, the
positioning and navigation will map the user position to the
nearest PoI when the module detects that the user has stopped,
otherwise the step detection and counting module along with
the orientation/heading direction are used to update the user
position while moving from one PoI towards another one. It
is also assumed that the user’s direction is the same as the
tablet’s heading direction which is compatible with interior
29
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

design applications needs. Finally, a subset of the corners will
be chosen as the positions of the APs based on the algorithm
described in Algorithm1 in the next section. Positioning the
APs in corners limits the search space to a ﬁnite number
of combinations. The following sections describe the system
architecture and its main building blocks in more details.
IV.
DETERMINATION OF NUMBER OF APS AND THEIR
LOCATIONS
The overall algorithm steps are described in Algorithm 1.
At the beginning, PoIs are manually placed on the location
map. The coordinates of these PoIs and the coordinates of
the corners of the location are the inputs of the algorithm
which determines the minimum number of APs and the best
locations for them. This algorithm will differentiate between
PoIs based on readings of the signals strength of the APs.
Algorithm 1 Determination of number of APs and their
locations
Data: n(initial number of APs) = area / coverage area
Result: optimal number of APs and their locations
while true do
c = get all combination of ’n’ corners;
for each combination do
for each PoI do
estimate the RSS from each AP;
end
if no more than 2 PoIs have the same RSSs range then
return this combination;
end
end
n++;
end
For a signiﬁcant reduction in the processing time and
resources, a mapping between signals strength and distance
is used. It takes into consideration, other factors that affect
the signal strength such as walls, doors, ceilings and ﬂoors.
Thus, what are processed through the algorithm are Euclidean
distances between each PoI and every corner, added to them
the effects of the previously mentioned factors. Then, a distinct
byte value is given for each range of distances. These values
are then used to ﬁll a 2D array where ﬁrst dimension is number
of PoIs and the second dimension is the number of corners
that can be nominated to be the APs locations. Each step is
explained in details, in the following sections.
A. Inputs and Combinations of corners
The inputs are the coordinates of the PoIs and the coordi-
nates of the corners of the location as mentioned earlier. After
this step, the corners will undergo enumeration process and
get stored in an array. An initial number of APs needed, is
calculated by dividing area of the location over the average
coverage distance of the APs used. Each AP can be located in
one of the corners. Thus, a combination module is developed
to output all the possible combinations of corners (possible
locations of the APs) to be used in the following step.
B. Calculating distances between PoIs and indexed Corners
Using the coordinates of the corners and the coordinates
of the PoIs, the distance between each PoI and each corner is
calculated and mapped to a byte value depending on its range
Figure 1. Overall System modules and interactions among them
from each AP location using the following ranges with gaps
([0m, 1m], [1.5m, 3.5m], [4.5m, 7.5m], > 8.5m) that have been
determined through evaluation of different types and different
brands of access points.
C. Bitwise pattern and the Output
The 2D array is then ﬁlled where the elements in each row
are the Byte-values resulting from the calculated distances that
have been mapped to Bytes. Thus, each row is the bitwise
pattern for the respective PoI. Each bitwise pattern of a PoI
is XORed with the rest of the bitwise patterns of the rest of
the PoIs. If any XOR operation resulted in a value equals zero
(There are two PoIs that couldn’t be differentiated from each
other), this means that another combination needs to be tested.
If all combinations failed for the current number of APs, the
number of APs will be incremented and the new combinations
that include the additional AP will be tested. Otherwise, if all
the XOR operations for a combination resulted in a non-zero
value this means that the corners in this combinations can be
selected as the locations for the APs and can be successfully
used to differentiate between all PoIs. Finally, the outputs are
the number of APs needed and their locations.
V.
PROPOSED INDOOR POSITIONING AND NAVIGATION
SCHEME
The proposed hybrid scheme is depicted in Figure 1. The
scheme consists of two main modules: Step detection and
counting using Mobile Inertial Sensors and Localization using
WiFi ﬁngerprinting. The WiFi ﬁngerprinting Localization is
responsible for determining the user’s location according to
30
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

the nearest PoI where the PoI are predeﬁned points provided
by the Interior Designer (based on the developed design).
The WiFi ﬁngerprinting module consists of two phases:
• Ofﬂine Phase: where the Radio Map is being built.
• Online Phase: where the user location is estimated.
On the other hand, the Step Detection and Counting module
using the Inertial Sensors is responsible for determining the
user’s location while moving between PoIs. It contains two
sub modules:
• The Step Detection Sub Module which determines the
step boundaries based on the raw sensor values.
• The Orientation Detection Sub Module that estimates the
user orientation/heading direction.
The two modules, the WiFi ﬁngerprinting and Step de-
tection and counting, will then be integrated to construct our
Localization System.
A. Localization using the Inertial Sensors
This module determines the user’s location while moving
between PoIs. It contains two sub modules. The Step Detection
Module which determines the step boundaries based on the
raw sensor values and the Orientation Detection Module which
estimates the user orientation/heading direction.
1) Step Detection Module: This module has three main
components: the step sensitivity algorithm that is developed
to estimate the user’s step shape, the stop detection algorithm
that is used to detect the stopping event of the user, and the
step detection algorithm that is used to detect the steps of the
user. The following subsections describe each component in
details.
a) Step Sensitivity Algorithm: The basic idea behind
this algorithm is to get estimation for the user’s step shape
(range of positive and negative accelerometer peaks). The
user starts walking 20 steps during which the accelerometer
values are being stored. Then, the positive and negative peaks
are calculated with the average accelerometer values and are
used to calculate a certain threshold that is used during the
user’s movement (in Section V-A1c) to estimate if the current
accelerometer values represent a step or not.
b) Detect Stop Algorithm: In order to use the step
detection algorithm in the hybrid system (in Section V-B2),
the user’s stopping event has to be detected. This algorithm
depends on a simple check that veriﬁes if the difference
between the current time and the last step time is higher than
a certain threshold (2 sec for example), which indicates that
the user must have stopped.
c) Step Detection Algorithm: This algorithm is used
to detect each step the user performs while he is moving.
It simply searches in the current accelerometer values for a
positive peak that is higher than the positive peak threshold
speciﬁed previously during the Step Sensitivity process (in
Section V-A1a), then the algorithm searches for a matching
negative peak that is less than the negative peak threshold
speciﬁed previously (in Section V-A1a). It then checks if the
difference between those two peaks is less than a certain
threshold and that the difference between the current time and
the last step time is higher than 0.5 s, then it is considered as
a step.
2) Orientation Detection Module: The aim of this module
is to get the most accurate direction of the user during each
step performed in order to determine the distance in the X
direction and the Y direction after each step. First, the direction
relative to the north is calculated using the magnetometer
and accelerometer values. Each time the magnetometer and
accelerometer values are renewed, a new direction is calculated
and added to the angle list. When a step is detected, the last
ﬁve angles in the angle list are retrieved and an algorithm is
used to exclude two outlier angles (out of 5 angles) and get
the average of the remaining 3 angles representing the step’s
angle.
3) Step Length: In our work, there different ways to
estimate the user’s step length have been investigated that range
from the simplest to the most accurate.
• Put an average step length for all users (around 0.7m).
• Let the user enter his height as an input and use the
Height-Step Length equation to get the corresponding step
length
step length = 0.42 × height
• Let the user walk a speciﬁed number of steps, then divide
the distance travelled by that number to get the average
step length for that speciﬁc user.
Finally, in order to determine the current user’s location,
ﬁrst, we calculate ∆x and ∆y, which represent the change in
location, and then add these values to the previous location.
∆x = Lsinθ and ∆y = Lcosθ where L represents the average
step length and (θ) is the orientation angle, which is deﬁned
from the Orientation Detection Module (in Section V-A2).
B. WiFi Localization
There are generally two phases for location ﬁngerprinting.
First one is the ofﬂine phase in which AP’ Received Signal
Strength (RSS) samples are collected at RPs to build the Radio
Map. Second one is the online phase in which the user location
is estimated based on the RSS from each AP and the Radio
Map prepared in the ofﬂine phase.
1) Ofﬂine Phase- Building the Radio Map: There are two
steps to build the Radio Map. First, identify the RPs, then
collect the RSS samples at each RP. In our system, we treat
the PoI as the RPs, at which we collect the RSS samples. To
build the Radio Map, ﬁngerprints are collected at each RP. For
each RP the user has to wait around 25 seconds for the system
to collect 5 RSS samples. These values are then averaged to
get one ﬁngerprint for each RP and save it in the Radio Map.
The user has to repeat this step for all the speciﬁed RPs. At
ﬁrst, all samples were collected in one direction. This results
in low accuracy if the user stops at any PoI with a direction
different than the one used in collecting RSS samples. To
solve this problem, the radio map is built with samples in 4
main directions (North, South, East, and West). Four maps are
generated from the radio map builder and used to locate the
user while stopping at one of the PoIs. This approach increases
the time needed to build the radio map(s) in the ofﬂine stage
but increases the accuracy of the localization system in the
online stage as well. The current orientation of the user when
stopping at one of the PoIs is mapped to the nearest map.
31
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

2) Online Phase- Estimating the user location: Finger-
printing algorithm works as follows; when the user stops,
three APs’ RSS readings are taken. After the ﬁrst reading, a
short list of the nearest PoIs (estimated by the Inertial Sensors
Localization module in Section V-A) is constructed. Euclidean
distances between the RSS and each ﬁngerprint of this short
list (stored in the Radio Map with the corresponding direction,
mentioned in Section V-B1) are calculated. If the Euclidean
distance of the Nearest Neighbor (NN) is less than a speciﬁc
threshold, the current estimated position is set to the NN’s
location. After the third reading, a short list of the PoIs locating
in speciﬁc covered range (calculated from the number of
estimated steps and the average error per step) is constructed.
Euclidean distances between RSS of each reading and each
ﬁngerprint of this short list are calculated to determine the
NN from each reading. Then, a voting method is used to
obtain the best candidate. If the Euclidean distance between the
winning candidate and the RSS is less than a speciﬁc threshold,
the current estimated position is modiﬁed by the candidate’s
location. The last PoI detected is not included in the short lists
if the user takes a few steps away from the PoI and doesn’t
return back to prevent the ﬁngerprinting from resetting the
current position to the last PoI. Therefore a condition is added
to check if the difference between the numbers of steps taken in
opposite directions is smaller than certain value before adding
the last PoI in the short list.
VI.
PERFORMANCE EVALUATION
The testing environment is a location of 91m2 in area. It
consists of 2 rooms and a hall. The ﬁrst room is 33.5m2,
the second is 22.5m2, while the hall is 35m2 in area. The
location has 12 corners in total. Six points in this location are
chosen to be the PoIs marked by symbol ”‘O”’ in Figure 2.
The coordinates of these corners and these PoIs are stored in
a ﬁle to be used in the following scenarios.
A. Determination of number of APs and their locations
The ﬁle is then used as the input to the algorithm that was
explained in Section IV. After testing the corner combinations,
2 APs can differentiate between all PoIs, and their locations
are the corners marked by symbol ”‘X”’ in Figure 2.
B. WiFi Localization
The WiFi ﬁngerprinting map is then created using the 2
APs determined in the previous step and the wiﬁ online phase
is tested by standing at a each PoI and verifying the correctness
of the detction. This experiment is repeated several times for all
the PoIs to get an estimated average of the WiFi ﬁngerprinting
module accuracy. These experiments resulted in an average
accuracy of 93%.
C. Step detection module
To evaluate the performance of the step detection module.
A certain number of steps are performed, then the actual num-
ber of steps is compared with the number of steps detected by
the developed navigation module. This experiment is repeated
several times to get an estimated average of the step detection
module accuracy. It can be stated that 90% of the steps are
correctly detected by the step detection algorithm.
Figure 2. Test results of Localization using the Inertial Sensors
D. Orientation detection module
Testing scenario: Angles from a real compass were com-
pared with angles provided by the sensors fusion. This experi-
ment was repeated several times in different cardinal directions
in order to calculate an approximate estimate of the Orientation
detection module accuracy. The maximum angle deviation was
in the range of -7 to +7 degrees with an average around 2
degrees.
E. Localization using the Inertial Sensors
The localization system using the inertial sensors is then
tested without the integration with the WiFi ﬁngerprinting. A
certain number of steps is performed to get from a starting po-
sition to ending position and the difference between the actual
ending position and the position given by the application is
calculated. This experiment is repeated several times to get an
estimated average of the step and orientation modules accuracy.
The red dots in Figure 2 represent the actual positions of the
user while the blue dots represent the estimated positions. The
accumulated step detection error was up to 2.6m, which is a
relatively low accuracy, as it can be seen in Figure 2.
F. Overall Hybrid Localization System
The previous testing scenario is repeated for the integrated
hybrid WiFi ﬁngerprinting and sensor fusion system. The
red dots in Figure 3 represent the actual positions of the
user while the blue dots represent the estimated positions.
Using the integrated system, the step detection error was
corrected constantly each time the user stopped (using the Wiﬁ
ﬁngerprinting module), which led to a less localization error
ranging from 0.5 m to 0.7 m.
The overall integrated system accuracy was acceptable to
the interior design augmented reality applications where the
user is likely need to view the design at the PoIs with high
accuracy and can accept slightly less accurate view while
moving among PoIs.
VII.
CONCLUSION AND FUTURE WORK
In this paper, a hybrid WiFi ﬁngerprinting - sensor fusion
scheme was presented to achieve accurate indoor positioning
and navigation using Android tablets. The target application for
our system is the interior design augmented reality applications
where users are interested in getting high accuracy in certain
positions depending on the design layout and can accept less
accuracy while moving among these positions. An algorithm
32
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

Figure 3. Test results of Localization using the Hybrid System
has been developed to determine the WiFi Access Points (APs)
positions given the apartment layout. The hybrid localization
system uses WiFi ﬁngerprinting to cancel the sensor fusion-
based navigation error at certain posistions. Results show high
accuracy of 90% for less than 0.7m for the hybrid integrated
system.
Future extensions of this work include the comparison with
other related techniques in the same environment and with the
same system assumptions. The replacement of the WiFi access
points with beacons is currently investigated as promising
cheaper alternative. Better integration with the augmented
reality part through the utilization of the tablet’s multiple cores
is also of interest.
ACKNOWLEDGMENT
This work has been supported by a grant from the Infor-
mation Technology Academia Collaboration (ITAC) program
of the Information Technology Industry Development Agency
(ITIDA).
REFERENCES
[1]
M. Youssef and A. Agrawala, “The horus wlan location determination
system,” in Proceedings of the 3rd International Conference on Mobile
Systems (MobiSys ’05), Applications, and Services, Seattle, Washing-
ton.
ACM, 2005, pp. 205–218.
[2]
L. F. M. de Moraes and B. A. A. Nunes, “Calibration-free wlan location
system based on dynamic mapping of signal strength,” in Proceedings
of the 4th ACM International Workshop on Mobility Management and
Wireless Access (MobiWac ’06), Terromolinos, Spain.
ACM, 2 Oct.
2006, pp. 92–99.
[3]
T. King, S. Kopf, T. Haenselmann, C. Lubberger, and W. Effels-
berg, “Compass: A probabilistic indoor positioning system based on
802.11 and digital compasses,” in Proceedings of the 1st International
Workshop on Wireless Network Testbeds, Experimental Evaluation &
Characterization (WiNTECH ’06), Los Angeles, CA, USA.
ACM,
2006, pp. 34–40.
[4]
H. Liu, H. Darabi, P. Banerjee, and J. Liu, “Survey of wireless indoor
positioning techniques and systems,” IEEE Transactions on Systems,
Man, and Cybernetics, Part C: Applications and Reviews, vol. 37, no. 6,
Nov. 2007, pp. 1067–1080.
[5]
C.-Y. Shih, L.-H. Chen, G.-H. Chen, E.-K. Wu, and M.-H. Jin, “In-
telligent radio map management for future wlan indoor location ﬁn-
gerprinting,” in 2012 IEEE Wireless Communications and Networking
Conference (WCNC), Paris, France, 1-4 Apr. 2012, pp. 2769–2773.
[6]
Y. Zhao, Q. Shen, and L. Zhang, “A novel high accuracy indoor po-
sitioning system based on wireless lans,” Progress in Electromagnetics
Research C, vol. 24, 2011, pp. 25–42.
[7]
J. So, J.-Y. Lee, C.-H. Yoon, and H. Park, “An improved location
estimation method for wi-ﬁ ﬁngerprint-based indoor localization,” In-
ternational Journal of Software Engineering and Its Applications, vol. 7,
no. 3, 2013, pp. 77–86.
[8]
M. Alzantot and M. Youssef, “Uptime: Ubiquitous pedestrian tracking
using mobile phones,” in 2012 IEEE Wireless Communications and
Networking Conference (WCNC), Paris, France, 1-4 Apr. 2012, pp.
3204–3209.
[9]
J. Yim, “A smartphone indoor positioning method,” International Jour-
nal of Smart Home, vol. 7, no. 5, 2013, pp. 9–18.
[10]
M. Holˇc´ık, “Indoor navigation for android,” Master’s thesis, Faculty of
Informatics, Masaryk University, Brno, Spring 2012.
[11]
W. Chai, C. Chen, E. Edwan, J. Zhang, and O. Loffeld, “2d/3d indoor
navigation based on multi-sensor assisted pedestrian navigation in wi-
ﬁ environments,” in Ubiquitous Positioning, Indoor Navigation, and
Location Based Service (UPINLBS), Helsinki, Finland, 3-4 Oct. 2012,
pp. 1–7.
[12]
M. H. V. Le, “Indoor navigation system for handheld devices,” Ph.D.
dissertation, Worcester Polytechnic Institute, 2009.
[13]
V. Filonenko, C. Cullen, and J. D. Carswell, “Indoor positioning
for smartphones using asynchronous ultrasound trilateration,” ISPRS
International Journal of Geo-Information, vol. 2, no. 3, 2013, pp. 598–
620.
33
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-396-4
ICDT 2015 : The Tenth International Conference on Digital Telecommunications

