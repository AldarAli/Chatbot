Schr¨odinger’s Register:
Foundational Issues and Physical Realization
Stephen Pink
School of Computing and Communication
Lancaster University
Lancaster, UK
pink@comp.lancs.ac.uk
Stanley Martens
School of Accountancy and Management Information Systems
DePaul University (retired)
Chicago, IL USA
smartens00@gmail.com
Abstract—This work-in-progress paper consists of four
points which relate to the foundations and physical realization
of quantum computing. The first point is that the qubit
cannot be taken as the basic unit for quantum computing,
because not every superposition of bit-strings of length n can
be factored into a string of n-qubits. The second point is
that the “No-cloning” theorem does not apply to the copying
of one quantum register into another register, because the
mathematical representation of this copying is the identity
operator, which is manifestly linear. The third point is that
quantum parallelism is not destroyed only by environmental
decoherence. There are two other forms of decoherence, which
we call measurement decoherence and internal decoherence, that
can also destroy quantum parallelism. The fourth point is that
processing the contents of a quantum register “one qubit at a
time” destroys entanglement.
Keywords-qubit; entanglement; decoherence; no-cloning the-
orem; quantum register.
I. INTRODUCTION
This paper will make four points. Points (A) and (B) are
foundational. Points (B), (C), and (D) relate to the physical
realization of quantum computing. We will state the points
and then elaborate on them.
A. The basic element of quantum computing is not the
qubit but the q-string. The qubit is not basic because
not every q-string can be factored into a string of
qubits.
B. A processing step in quantum computing is defined as
the application of a unitary linear operator on q-strings
[4]. For physical realization purposes, this definition
is incomplete. In a real quantum computer, q-strings
of length n “live” on n-bit registers in superposed
states. To specify a processing step, one must specify
the input and output registers. Let ψ be a q-string.
A “cloning” function f12 can be defined as f(ψ on
register 1) = ψ on register 2; the function copies ψ
from register 1 to register 2. The existence of such
a processing step does not violate the “No-cloning”
theorem.
C. The power of quantum computing depends on quan-
tum parallelism. Quantum parallelism is destroyed if
q-strings decohere during processing. Experimental
results indicate that the time to environmental deco-
herence is inversely related to the size of the physical
system considered. If this is so, then the longer the
q-string, the shorter the time to its environmental
decoherence. This rules out quantum parallelism for
q-strings of arbitrary length. Besides environmental
decoherence, two other kinds of decoherence are in-
troduced and discussed.
D. If a q-string is processed “one qubit at a time”, then
the resulting q-string is a string of qubits. So, any
entanglement in the original q-string is destroyed.
II. ELABORATIONS OF THE FOUR POINTS
A. Qubits and Q-Strings
A bit = bi is 0 or 1. A string of bits of length n =
| b1 . . . bn⟩. The number of all strings of bits of length n =
2n. A q-string of length n is a sum of the bit strings of
length n weighted by complex numbers. So, a q-string of
length n =
ψ =
m=2n
X
m=1
cmφm,
where the φm are the bit strings of length n and the complex
numbers cm satisfy the condition
X
m
| cm |2= 1. Some of
the cm may be 0, so it may be that not every bit string of
length n is a nonzero-weighted component of the q-string.
A qubit qi = a q-string of length 1. So, qi = αi | 0⟩+βi | 1⟩,
where | αi |2 + | βi |2= 1. A string of qubits is a product
of qubits = q1 ⊗ q2 ⊗ . . . qn.
Consider a string of two qubits:
q1
⊗
q2 = (α1 | 0⟩ + β1 | 1⟩) ⊗ (α2 | 0⟩ + β2 | 1⟩)
=
α1α2 | 00⟩ + α1β2 | 01⟩ + β1α2 | 10⟩ + β1β2 | 11⟩.
| α1 |2 + | β1 |2 = 1 and | α2 |2 + | β2 |2 = 1.
Now consider the q-string of length 2:
0 | 00⟩ +
1
√
2 | 01⟩ +
1
√
2 | 10⟩ + 0 | 11⟩
82
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

If this q-string = q1 ⊗ q2, then α1α2 = 0,
α1β2 =
1
√
2, β1α2 =
1
√
2, and β1β2 = 0. So, either α1 = 0 or
α2 = 0. But if α1 = 0, then α1β2 = 0 ̸=
1
√
2. If α2 = 0,
then β1α2 = 0 ̸=
1
√
2. So the above q-string of length 2 is
not a string of 2 qubits. This argument can be generalized.
So, not every q-string of length n is a string of n qubits. The
above q-string of length 2 is said to have “entangled qubits”,
because it cannot be factored into a string of 2 qubits.
B. Q-Strings and the No-cloning Theorem
The physical realization of a q-string of length n in a
real quantum computer will be the state of a register with
n bit positions. Suppose a real quantum computer contains
two n-bit registers. Suppose register 1 contains a q-string
of length n, i.e., suppose register 1 is in a superposition of
states where each of the states is a bit-string of length n.
Suppose register 2 contains a string of n zeroes. Nothing in
what has been described so far rules out that the computer
can execute the command: Store the content of register 1 in
register 2. The result of this processing will be two registers,
each containing the same q-string. Wouldn’t this violate the
“No-cloning theorem” [2]?
A processing step in quantum computing is defined as
the application of a unitary linear operator f on q-strings of
length n [4]. Suppose
ψ =
m=2n
X
m=1
cmφm,
a q-string of length n. Since f
is linear, f(ψ)
=
m=2n
X
m=1
cmf(φm). Since f is unitary, the action of f on a
bit string yields a bit string of the same length. So,
f(φm) = φm′ = φf(m).
Thus,
f(ψ) =
m=2n
X
m=1
cmφf(m).
As far as it goes, this definition of processing step is correct.
For physical realization purposes, however, it is incomplete.
In a real quantum computer, quantum strings live on n-bit
registers. So, the mathematical representation of a processing
step must specify the input and output registers. Thus,
the ”cloning” function C must be identified as C12. So,
C(ψ on register 1) = ψ on register 2, and C is simply the
Identity Transformation, Iψ = ψ, which is unitary and linear.
The “No-cloning theorem” does not apply here. What the
No-cloning theorem states is as follows: Let ψ be a q-string
of length n. Let 0 be a string of n zeroes. No-cloning result:
there is no unitary linear function g on q-strings of length
2n, such that g(ψ ⊗ 0) = g(ψ ⊗ ψ).
C. Quantum Parallelism and Decoherence
What is quantum parallelism? Suppose ψ is a q-string
and ψ has m different bit strings appearing as nonzero-
weighted components. Then, quantum parallelism is the idea
that one processing step on ψ is, in a sense, equivalent to m
processing steps on the bit string components of ψ [2]. Since
processing takes time, quantum parallelism is lost if the q-
string decoheres during processing. What is decoherence?
The only kind of decoherence discussed as such in quantum
computing is environmental decoherence. We believe that
there are two other forms of decoherence, measurement
decoherence and internal decoherence, and that these other
forms may pose obstacles for quantum parallelism as well.
Let us start with environmental decoherence. Let
ψ =
X
m
cmφm
be the state of a physical system where the φm are the base
states of the system and the cm are the complex numbers
satisfying the usual condition. Let E0 represent the initial
state of the environment. Environmental decoherence is the
idea that after a time (decoherence time) the physical system
interacts enough with the environment so that the state of
the system plus environment evolves to the following:
| ψ, E0⟩ −→
X
m
cm | φm, Em⟩,
where the Em are states of the environment that do not
mutually “interfere”. What the “non-interference” means
practically is that the evolved state immediately collapses:
X
m
cm | φm, Em⟩ −→
one of the | φm, Em⟩ states
with a probability of | cm |2. Q-strings live on the register
of the quantum computer. So, Ψ above is the state of the
register(s) of the computer, and E above is the state of the
environment of the register(s); i.e., the rest of the computer
plus the external world. So, if decoherence time is less
than processing time, a q-string will collapse into one of
its component bit strings, and quantum parallelism will be
destroyed. Erich Joos [1] states that experimental results
seem to indicate that decoherence time is related inversely
to size; he even says (p. 13): “..macroscopic objects are
extremely sensitive and immediately decohered.” If what
Joos says is true, then the longer the q-string, the shorter the
time to its decoherence. This rules out quantum parallelism
for q-strings of arbitrary length. Joos says (p. 14):
...(decoherence) represents a major obstacle for
people trying to construct a quantum computer.
Building a really big one may well turn out to be
as difficult as detecting other Everett worlds!
Many think that detecting other Everett worlds is impossible
[3]. Measurement decoherence can be explained as follows.
83
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

Let
ψ =
X
m
cmφm
be the state of a physical system, and suppose at t0 (the
initial time), ψ is coupled with a measuring device in state
M0. Let “measurement time” be the amount of time required
for the measuring device to measure the physical system, i.e.,
the amount of time for the measuring device to evolve from
M0 to a superposition of indicator states Mi. The picture
of the evolution is as follows:
X
m
cmφmM0
−→
X
m
cmφmMm.
If we make the assumption that the Mi(i ≥ 1) do not
mutually interfere, then ψ immediately collapses:
X
m
cmφmMm
−→
one of the φmMm with a probability of | cm |2 .
Measurement decoherence (called quantum measurement
by quantum computer scientists) is a resource of, and
not an obstacle to, quantum computing if it occurs after
processing is complete. Measuring the output q-string is
the way to read information contained in that q-string.
No one will intentionally apply a measuring device to a
register or registers before processing is complete. So, how
can measurement decoherence be an obstacle to quantum
computing? A physical quantum computer will contain a
register or registers, but will also contain other devices
(for processing, etc.) besides registers. If the “innards” of a
physical quantum computer exclusive of the registers act like
a measuring device during processing, then there will be an
unintentional measurement of a register or registers during
processing, and quantum parallelism will be lost. Thus, it
is a challenge not only to build registers that can exist in
superposed states, but also to build the rest of the quantum
computer so that it does not act like a measuring device on
registers during processing.
The third form of decoherence is internal decoherence.
Suppose we have a physical system in an initial state ψ0.
Suppose also that in some time interval (evolution time), the
physical system evolves to a superposition of base states:
ψ
−→
X
m
cmφm.
If we assume that the φm do not mutually interfere, we have
immediate collapse:
X
m
cmφm −→ one of the φmwith a probability of | cm |2 .
In the standard two-slit experiment, we have evolution to:
α | particle travels through slit 1⟩
+ β | particle travels through slit 2⟩,
but these two states mutually interfere, as is evidenced
by the interference pattern built up on the photographic
backstop as the experiment is repeated. So the standard two-
slit experiment is not an example of internal decoherence.
We can get internal decoherence if we modify the two-slit
experiment. Put a light source near slit 1, so that a particle
traveling through slit 1 produces a light flash because a
photon from the source bounces off the particle. Then we
have evolution to:
α | particle travels through slit 1 + flash of light⟩
+ β | particle travels through slit 2 + no flash of light⟩.
These two states do not mutually interfere, as is evidenced
by the lack of interference pattern on the photographic
backstop. (Remember that observation of the light flash is
not necessary to destroy interference; only existence of the
flash is necessary.
Another physical system that internally decoheres is
Schr¨odinger’s Cat Box, consisting of a box occupied by
a radioactive source, Geiger counter, trip hammer, vial of
cyanide, and live cat. The box evolves into:
α | dead cat, smashed vial, tripped hammer, etc.⟩
+ β | live cat, unsmashed vial, untripped hammer, etc.⟩
Based on all available observational evidence, these two
states do not mutually interfere. No one has ever observed
a superposition of α | dead cat⟩ + β | live cat⟩, let alone:
α | smashed vial⟩ + β | unsmashed vial⟩,
α | tripped hammer⟩ + β | untripped hammer⟩, etc.
So, the solution to Schr¨odinger’s Paradox is internal deco-
herence. We can talk of Schr¨odinger’s Register instead of
Schr¨odinger’s Cat, and mean by this an n-bit register that
can exist in a superposition of bit strings of length n such
that those bit strings do interfere. (We want the bit strings
to interfere, or else we would have a collapse to a single
bit string and no quantum parallelism.) So, the challenge
for quantum computer scientists is to build Schr¨odinger’s
Register. Good luck!
D. Qubits, Q-Strings, and Entanglement
Consider a q-string of length n, ψ. Suppose ψ is “entan-
gled.” Then it is not equal to a string of n qubits, but a string
of n qubits can be constructed from it in the following way:
Survey the bit string components of ψ. Let m be a position
from 1 to n in the bit string. Add the amplitudes for all
components with a 0 in position m. Call the sum αm. Add
the amplitudes for all components with a 1 in position m.
Call the sum βm. Construct the qubit (αm | 0⟩ + βm | 1⟩).
Take the product of such qubits for all positions. This is the
84
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

string of qubits to be constructed:
m=n
O
m=1
(αm | 0⟩ + βm | 1⟩) =
m=n
O
m=1
qm .
The result of processing ψ “one qubit at a time” = the
product of the results of applying a processing step f on
qubits to each qubit in the string constructed from (but not
identified with) ψ:
m=n
O
m=1
f(qm) =
m=n
O
m=1
q′
m .
A string of m qubits has no entanglement among qubits. So,
processing ψ “one qubit at a time” destroys entanglement.
III. CONCLUSION
We believe that the four points above will all be necessary
to progress in understanding how to realize a quantum
computer. Most fundamental would be the shift from qubit
to q-string as the basic entity of quantum computation. At
the same time it is important to see that ”No Cloning” is
not necessarily an obstacle to the moving of data between
one register and another in a quantum computer, a necessary
to realizing practical quantum computation. Also, we show
that there are a number of types of decoherence, and that
understanding the difference between these allows us to
build a quantum register whose processes are relatively
stable in the external environment of a real physical machine.
In our future research, we plan to explore more deeply
the properties of a q-string versus a string of qubits and to
present a more formal proof of the difference between these
two concepts. We shall study the notion of entanglement and
how it relates to quantum parallelism. In particular, since
decoherence is the major obstacle to achieving quantum
parallelism, we would like to understand better the relation-
ship between entanglement and decoherence. In addition, we
want to make clear how ”No Cloning” affects the design and
implementation of quantum memory and storage.
REFERENCES
[1] E. Joos, Elements of Environmental Decoherence, (1999), e-
print available at http://xxx.lanl.gov/abs/quant-ph/9908008v1.
[2] J. Gruska, Quantum Computing Challenges, In Mathematics
Unlimited, 2001 and Beyond, Vol. 1. Berlin-Heidelberg :
Springer-Verlag, 2000. ISBN 3-540-66913-2, pp. 529-563.
[3] D. Albert and B. Loewer Interpreting the Many Worlds Inter-
pretation. SYNTHESE, Volume 77, Number 2, 195-213, DOI:
10.1007/BF00869434.
[4] J. Stolze and D. Suter, Quantum Computing, Wiley-VCH
Verlag GMBH & Co., 2nd Edition, 2008, ISBN 978-3-527-
40787-3, pp.6-7.
85
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

