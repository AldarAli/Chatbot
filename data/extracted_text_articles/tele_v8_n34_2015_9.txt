215
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Design of a Flexible Over the Top Content Streaming System with Dual Adaptation
Eugen Borcoci, Radu Iorga, Cristian Cernat, Marius 
Vochin, Serban Obreja 
University POLITEHNICA of Bucharest 
Bucharest, Romania 
emails: eugen.borcoci@elcom.pub.ro  
radu.iorga@elcom.pub.ro 
cristian.cernat@elcom.pub.ro 
marius.vochin@elcom.pub.ro  
serban@radio.pub.ro 
 
 
 
Jordi Mongay Batalla 
 National Institute of Telecommunications 
Warsaw, Poland 
email:jordim@interfree.it 
Daniel Negru 
 LaBRI Lab, University of Bordeaux  
Bordeaux, France 
email:daniel.negru@labri.fr 
 
Abstract — Real-time content delivery services have 
recently achieved high popularity in Internet, both for 
professional communities and also for entertainment. In 
contrast with some complex architectures like Content 
Delivery Networks, or Content Oriented Networks, this paper 
considers a light architecture, working on top of the current 
networking IP multi-domain infrastructures. It enhances the 
real-time (video) content delivery, by exploiting the cases 
where the content object exists on several servers. The system 
performs an initial content server selection (based on multi-
criteria) considering the servers’ load status and network 
conditions. Then it performs in-session media dynamic flow 
rate adaptation. Additionally, if necessary, a server handover 
is triggered. All above functionalities are assembled in a 
unified solution. This paper is a preliminary work, to identify 
the main requirements and then to develop the design for a 
family of implementations. Different design decisions variants 
are analyzed and explored, proving the solution flexibility. 
Currently the proposed system is under implementation in the 
framework of a European project. 
Keywords — content delivery; multi-criteria decision 
algorithms; server and path selection; media adaptation, 
monitoring, Future Internet; content-aware networking. 
I. 
INTRODUCTION 
The content-related real-time services are more and more 
present in the current and Future Internet, leading to recent 
significant developments [1][2]. Dedicated infrastructure like 
Content Delivery Networks (CDNs) improve the services 
quality [3], by distributing the content replica to caching 
servers, located close to groups of users; they are largely 
used in the real world. Content/Information Oriented/Centric 
Networking (CON/ICN/CCN) approaches [4][5], decouple 
names from location and  introduce novel paradigms such as 
content-based routing, in-network (in routers) caching, etc.  
However, all the above solutions involve highly complex 
architectures, high CAPEX and significant modifications in 
Service/Content Providers and Network Providers/Operators 
systems. 
As an alternative, Service Providers (SP) might deliver 
services in over-the-top (OTT) style, over the current best 
effort Internet as a significantly cheaper solution. An OTT 
Service Provider (SP) could act as a separate entity from the 
traditional Internet Service Provider (ISP). Also, combined 
solutions could exist, with OTT-like SPs using the CDN 
Providers infrastructure to improve the quality of delivery. 
When transport problems appear in the network, the OTT 
approach to preserve or even improve the quality, are 
frequently based on adaptive solutions for media streams or 
servers. The overall goal is to maintain a good or at least an 
acceptable degree of the quality of experience (QoE) 
perceived at receiver side. 
A light architecture (OTT-like), for content streaming 
systems is proposed by the European DISEDAN Chist-Era 
project [1][6], (service and user-based DIstributed SElection 
of content streaming source and Dual AdaptatioN, 2014-
2015). The business actors involved are: Service Provider 
(an entity/actor which deliver content services and might 
own or not a transportation network); End Users (EU) which 
consumes the content; a Content Provider (CP) could exist, 
owning Content Servers (CS). DISEDAN does not deal with 
CP/SP contractual relationships; we may assume that the 
content servers are owned by the SP.  
This paper is an extension of a previous one [1] presented 
at CONNET 2015 Conference, dedicated to develop the 
design of a flexible system in the framework of DISEDAN 
project. 
An initial assumption is that a given content object is 
present on at least one, or several content servers, 
geographically distributed over one or several network 
domains. In such conditions, a novel concept is introduced 
by DISEDAN, based on: 
 (1) two-step server selection mechanism (initial at SP 
and then at EU sides) using algorithms that consider context- 
and content-awareness and  
(2) dual in-session adaptation mechanism, consisting in 
media flow adaptation (based on Dynamic Adapative 
Streaming over HTTP – DASH recent technology  [7][8][9]) 
and/or content source adaptation (by streaming server 
switching) if quality degradation is observed at the EU 
Terminal (EUT) during the media session.  
An effective solution is constructed in DISEDAN for the 
multi-criteria selection (hard problem) of the best content 
source (server), while considering user context, server 
availability and requested content. The DISEDAN OTT-like 
architecture is attractive since it avoids the complexity of 
CON/ICN or CDN. 

216
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
This work is mainly dedicated to identify the 
requirements, specify the architecture and then analyze 
several design decisions variants. Details on server/path 
selection, optimization algorithms and adaptation process 
combined with server switching are treated in other works 
[15][16][18].  
Also it should be mentioned that this paper does not have 
as objective to detail the internal procedures of the functional 
blocks. These elements (i.e., algorithms, active or passive 
monitoring procedures, QoS/QoE evaluation, DASH details, 
design details and low level description of interfaces, SP or 
EU policies, etc.) are (or will be) the targets of other works, 
during the project development.  
The DISEDAN system can be flexibly implemented in 
several  variants, depending on the complexity/constraints 
envisaged and the EUs and SPs requirements. We explore 
different design decisions and trade-offs, versus the cost and 
implementation complexity. This work is preliminary; 
currently, the system is under its implementation. 
Section II is a short overview of related work. Section III 
outlines the overall architecture, based on different sets of 
requirements. Section IV analyzes various design decisions 
and implementation-related implications. Section V is a new 
contribution of the extended paper; it considers the previous   
design decisions and develops the functional architectures of 
the three main entities: Service Provider, End User Terminal 
and Content Server. Section VI contains conclusions and 
future work outline. 
II. 
RELATED WORK  
Adaptation techniques enhance the quality of streaming 
media at the consumer side when the transfer conditions 
deteriorate. They also support efficient network resource 
utilization, device-independent universal media access and 
optimized Quality of Experience (QoE). Many Service 
Providers apply adaptation, to solve the network variations 
[7]. Adaptation may act on media flow [7][8][9], and/or on 
Content server. The latter means in-session new server 
selection and switching (handover), depending on the 
consumer device capabilities, consumer location and/or 
network state [10][11].  
Recent solutions for media adaptation use the HTTP 
protocol, while minimizing server processing power and 
being video codec agnostic [12]. Relevant examples are: 
Adobe Dynamic Streaming, Apple’s HTTP Adaptive Live 
Streaming and Microsoft’s IIS Smooth Streaming and open 
HTTP-based protocols like Dynamic Adaptive Streaming 
over HTTP (DASH) [9]. The DASH continuously selects, 
on-the-fly, the highest possible video representation quality 
that ensures smooth play-out in the current downloading 
conditions. The DISEDAN novelty [6] consists in “dual 
adaptation” by combining in a single solution the initial 
server selection (result of the initial cooperation between SP 
and EU) and in-session dual adaptation. 
The initial server selection is based on optimization 
algorithms like Multi-Criteria Decision Algorithms (MCDA) 
[13][14], modified to be applied to DISEDAN context 
[15]16], or Evolutionary Multi-objective Optimization 
algorithm (EMO) [17]. The decision variables considered for 
selections are related to servers’ load, network paths 
characteristics, SP and EUT policy related parameters. 
 In [15][16]  several scenarios are proposed, analyzed and 
evaluated. The initial content selection problem is a multi-
criteria one, given the different degree of availability of 
parameters of interest at SP, CS and respectively EUT levels. 
In particular, the availability of different static and/or 
dynamic input parameters for optimization algorithms is 
considered. Therefore, several designs are possible, different 
in terms of performance and complexity. It is the objective of 
this paper to analyze these variants, seen as design/ 
implementation decisions. 
The main advantages of the DISEDAN approach versus 
others solutions are: simple architecture, working in OTT 
style and  avoiding complex (as needed in ICN, CDN) 
management 
and 
control; 
multi-domain 
capabilities; 
embedding in a single solution the initial server selection, in-
session dynamic media flow adaptation and/or server 
switching; backward compatibility versus current content 
streaming systems; low cost for implementation. 
The principal limitation of the DISEDAN solution 
consists in its OTT-style of working; no strong QoS 
guarantees are offered to the end users.    
III. 
DISEDAN SYSTEM ARCHITECTURE AND DESIGN 
GUIDELINES 
While 
considering 
the 
above 
general 
concepts, 
assumptions and requirements should be identified, to 
provide inputs for the system design. 
A. General framework and  assumptions  
The main business entities / actors have been mentioned 
above: SP, EU, CS. The connectivity between CSs and EU 
Terminals (EUT) are assured by traditional Internet Services 
Providers (ISP) / Network Providers (NP) - operators. Due to 
its OTT-style, DISEDAN does not consider, in its 
management architecture 
the 
connectivity 
– related  
relationships between SP and ISP/NPs. Note that some 
Service Level Agreements (SLAs) might exist, related to 
connectivity services, but they are not directly visible at our 
system level. The DISEDAN solution is also applicable to 
other business models, e.g., involving CPs, CDN providers, 
etc. The relationships between SP and such entities could 
exist, but their realization is out of scope of this study. The 
system works on top of the current TCP/IP mono and/or 
multi-domain network environment.  
The EUTs might not have explicit knowledge about the 
managed/non-managed characteristics of the connectivity 
services. Network level resources reservation, or in-network 
connectivity services differentiation might exist, but they are 
not mandatory supposed. This approach shows the system 
flexibility: it can work in OTT low cost style, with no direct 
control of the connectivity services (from QoS point of view) 
or, in a more complex deployment, over a network having 
managed connectivity services. Therefore, in principle, the 

217
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
SP envisaged in DISEDAN cannot offer strong QoS 
guarantees to EUs. Consequently, DISEDAN does not 
manage (but it does not exclude) possible EUs/SPs SLA 
contracts/relationships. However, it is assumed that a Media 
Description Server exists, managed by SP, to which EUT 
will directly interact. 
The media streaming operations are independent from 
networking technology. The client-side streaming system, 
acts 
as 
a 
standalone 
application, 
(no 
mandatory 
modifications for SP are required); however, DISEDAN 
assumes that SP should provide some basic information to 
EUT, in order to help the initial server selection by the EUT. 
Then, the in-session decisions about dual adaptation are 
taken mainly locally at EUT, based on the real time delivery 
evaluation of the quality seen by the receiver. Based on the 
above approach, a complex EUT-SP signaling is avoided. 
 In a general case, several CSs exist (containing replicas 
of media objects), known by SP (geo-location, availability, 
access conditions for users), among which the SP and/or 
EUTs can operate server selection and/or switching. No 
restriction is imposed either on the geo-localization of EUTs 
or of CSs. Note that the proposed system does not consider 
how to solve network failures, except attempts to perform 
media flow DASH adaptation or CS switching. The terminal 
devices are supposed to have all the required subsystems and 
peripherals for video/ audio display and device control. 
Note that several assumptions and requirements are 
general ones – needed in a content delivery system and they 
are not specific to only DISEDAN system. 
B. End User Requirements 
These requirements are expressed as End User needs, and 
are derived from user scenarios - when selecting and 
consuming media content - related services. The EUT 
(basically) but also the rest of the system should be designed 
as to fulfill the requirements coming from EU. 
 The system must admit the usual user profiles. EU 
should be able to identify itself and login into the 
system through a controlled environment. 
 The EU must be able to select among several SPs and 
among content items, servers and classes of quality – 
in the limits offered by the selected SP.  
 The DISEDAN system must allow to EU: initial 
(optionally automatic or manual) server selection; in-
session dual adaptation will be automatically 
enforced, to maximize the Quality of Experience 
(QoE). 
 The EU should receive information from SP (on 
servers and possibly on network paths) to help him in 
selection. The EU should also have the possibility to 
finally decide on server selection/switching or amount 
of adaptation actions initiated and/or performed.  
 The EUT must be still able to work by using only 
minimal information on server and network (e.g., 
server capacity or download bandwidth from the 
server) delivered by the SP. The final content server 
selection decision is basically locally taken, while 
avoiding complex signaling between user and SP.  
 The EU should have the possibility to be informed 
about of QoE level delivered by the system. 
 The client SW installed on the EUT should have 
maximum independence from the operating system 
running on the terminal. 
C. Service Provider Requirements 
These requirements are expressed as SP business and 
technical needs. The DISEDAN system: 
 Should allow SP to develop multimedia content-based 
services, e.g., live - streamed IPTV services, Video 
on Demand (VoD) and its derivatives (e.g., streamed 
VoD, downloaded / pushed content). 
 Must allow SP to filter the control information 
delivered to the EUs, but should not impose major 
architectural modification in the common SP 
Management and Control (M&C) architecture. 
 May allow SP to apply different policies in its server 
selection (e.g., to maximize CS utilization and/or 
improve QoE)).  
 Should be able to use in a flexible way the SP 
static/dynamic (monitored) information on servers 
and (possibly) on network paths status and 
availability, in mono or multi-domain contexts. 
 Must not restrict the networking technologies (QoS 
capable or not) used by SP.   
 Must support the SP-EU cooperation for dual 
adaptation purposes. 
 Should offer to the SP the minimal capabilities to 
manage the Content Severs (if no distinct Content 
Provider business entity exists). 
D. General System Requirements 
These requirements are derived from the previous 
requirements for End User and Service Provider. They are 
related to the overall DISEDAN system, which: 
 Must work in the traditional TCP/IP mono and multi-
domain, in OTT style, on top of arbitrary network 
technology; the EUTs or CSs can be placed 
everywhere. 
 Should provide a simple management with minimal 
architectural modifications at SP side or at EUT side. 
 Must optimize multi-criteria content source selection, 
and then dynamic dual adaptation, considering user 
context, servers’ availability, network conditions and 
content distribution mode. It will apply: a. two-step 
server selection (at SP and then at EUT) based on 
context/content 
- 
aware 
algorithms; 
b. 
dual 
adaptation, 
(media 
adaptation 
and/or 
server 
switching).  
 At EU side, a standalone client application must exist. 
No mandatory modifications at SP M&C side are 
required; however, SP M&C should provide 
information to EUT, to help it in initial server 
selection. 
 Should provide flexible possibilities to assign/balance 
the decision power between SP/EU, regarding sever 
selection/switching and dynamic adaptation. 

218
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Other, more specific EUT, SP and CS system 
requirements have been derived from the general ones but 
they are not detailed here. 
E. General Architecture   
Fig. 1 shows the high level – described, general 
architecture. The Service Provider entity includes the 
following functional modules: 
 Media 
Description 
generator 
– 
dynamically 
generates Media Description (MD) XML file, 
containing media segments information (video 
resolution, bit rates etc.), ranked list of recommended 
CSs (for a given EU request) and possibly  - CSs 
current state information and even information on 
network state (if applicable). 
 CS Selection (step 1) algorithm - exploits MCDA or 
EMO, to rank the CSs and media representations, 
aiming to optimize servers’ load and to maximize the 
system utilization.  
 Monitoring module – collects information from 
Content Servers and estimates their current states.  
The End User Terminal entity includes the modules: 
 
DASH – parses the MD file received from SP and 
handles the download of media segments from 
Content Servers. 
 
Content Source Selection and Adaptation engine –
implements the dual adaptation mechanism. 
 
Selection (step 2) algorithm. - exploit MCDA, 
EMO, or other algorithms to select the best CS 
from the list recommended by SP. 
 
Monitoring module – monitors the local network 
conditions and – possibly - the server conditions. 
 
Media Player – playbacks the media segments.  
The Content Server entity includes the modules: 
 
Streaming module – sends media segments 
requested by End Users. 
 
Monitoring probe – monitors CS performance 
(CPU utilization, network interfaces utilization, 
etc.). In a complex implementation of the CS, the 
monitoring probe could be replaced by a more 
capable monitoring module, to supervise both the 
active 
sessions 
and 
some 
connectivity 
characteristics from this CS to different groups of 
users. 
The following (macro) procedural steps are:  
1. The EUT issues a media file request to SP. 
2. The SP analyzes the status of the CSs (involved in the 
request parameters) and runs the selection algorithm 
(optionally the SP could make first, a current probing of 
the CSs). Some SP policies could be enforced in this 
phase. 
3. The SP returns a candidate CS list to EUT. 
4. The EUT performs the final CS selection (by 
considering additional local information) and starts 
asking media segments from the selected CS. 
5. During media session, the EUT measures the quality 
and evaluates the context. It applies DASH adaptation or 
if necessary, CS switching is decided. 
 
When the user requests a Multimedia content, the SP 
sends an xml file containing Media Description (MD). This 
file is updated (from the static xml file) for each user request 
by considering the user profile, the SP policies for this user’s 
class and other information at the SP side (e.g., state of the 
servers and possibly network-related information). The list of 
candidate CSs and other information are written inside the 
xml file. Also caching server url addresses can be added. The 
list may be ordered, following some desired metrics.  
 
 
    
 
 
 
 
 
End User  Terminal 
Selection 
algorithm 
DASH 
Streaming 
module 
Content source selection  
and Adaptation engine 
Monitoring 
Monitoring 
 probe 
Media  
Description 
generator 
Content Server 1 
Service  
Provider 
Selection  
algorithm 
Monitoring 
Media 
Player 
MD file  
Request 
MD file 
Data Segment 
Request 
Data Segment 
 
Status 
Network 
 
Content Server k 
Content Server 
switching 
Media adaptation 
 
Figure 1.  DISEDAN general architecture; DASH - Dynamic Adaptive Streaming over HTTP 

219
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
When the user’s application receives the MD file, it 
performs the final CS selection and possibly the network 
path choice (note that this last choice is not always possible 
in the current Internet with regular routing and forwarding). 
This decision can be based on user context, i.e., a MCDA 
can be run or, the EUT can simply select the first CS in the 
ordered list returned by the SP. Generally the CS selection 
achieves the final step of multi-objective optimization.  
After final CS selection, the EUT starts to ask segments 
from the selected CS. During the receipt of consecutive 
chunks, the user’s application can automatically change the 
rate of the content stream (DASH actions) or, if still 
problems exist, it can switch the CS.  
The EUT performs measurements of the parameters of 
download process. If EUT detects deterioration of 
downloading rate, it can use SP information about alternate 
CSs and/or it can start probing CSs. After probing, the EUT 
decides on media or server adaptation. 
 
IV. 
DESIGN DECISION VARIANTS  
The DISEDAN architecture is intended to be flexible. 
Several variants/versions of designs can be considered, i.e., 
basic ones or more complex, essentially depending on the 
roles of the business entities and their capabilities, 
interactions and also on SP and EU policies.  
A. Monitoring procedures 
The types and amount of static and dynamic monitoring 
data collected by various entities have a significant impact 
on the solutions. Consequently, the MCDA/EMO algorithms 
will have different sets of input parameters. Apart from static 
information available at SP, three types of monitoring 
contexts and possible policies can be identified.  
An important component of the Control Plane is the 
Monitoring 
subsystem 
(MON@DISEDAN), 
whose 
components are distributed at SP, CS and EUT sides. 
Apart from DASH defined metrics (in-session observed), 
the MON subsystem may collect information though its 
respective components, at each DISEDAN entity, as 
described below: 
 MON@EUT: CS accessibility (probing); EUT local 
dynamic context; historical and prediction data on 
servers and paths utilization. 
 MON@SP: CS status (collected from CS); active 
Users (i.e., those who are in-session) status; current 
load on some paths (here the network monitoring of 
the 
NP 
should 
cooperate); 
other 
dynamic, 
characteristics of some paths (e.g., loss, jitter); 
historical and prediction data on servers and paths 
utilization.  
 MON@CS: CS status (load); CS environment data 
(network 
paths, 
dynamic 
characteristics 
of 
connectivity paths from CS to different groups of 
users - evaluated at overlay level; EUTs data, active 
user groups data. 
The overall MON design is flexible, since it can combine 
different features of the above components.  
Several types of monitoring activities can be performed. 
 Proactive monitoring: executed in continuous mode; 
the monitoring information becomes input for the CS 
selection algorithm (Phase 1), when some new 
content requests arrive from a given EU to SP. At SP, 
this means supervision of different servers, maybe 
networks, and user communities, depending on its 
policies. SP/CS cooperation on this purpose is 
envisaged. Such data can be also used to construct a 
history and updated status of the environment 
envisaged by the SP. The CSs could be involved in 
proactive monitoring, provided they are capable to 
probe their connectivity characteristics towards 
different groups of users (indicated by the SP). At EU 
side, proactive monitoring might be performed, 
depending on capabilities of the EUT and its 
software. In some more complex scenarios the EU 
can construct history, dedicated to its usual content 
connections (if they are estimated to be repeated in 
the future). The terminal context can be evaluated by 
such measurements, including its access network 
status. 
 In-session monitoring: monitoring is performed on a 
flow and data are collected in real time, to assess the 
level of QoS/QoE observed at EU side. These actions 
are basically performed by the EUT, in two ways:  
 
collected by the DASH mechanisms, to serve 
internally as real time inputs to adaptation 
decision engine at EU, 
 
collected by the MON@EUT, which can be 
consolidated with those produced by the 
DASH, thus offering a more complete view, 
not only about the reception of he media flow 
but also on general status and environment of 
the EUT. 
In more complex DISEDAN variants, the SP and/or CS 
can be involved in such monitoring, at least in being aware 
of  results (note that no SLA concerning mutual obligations 
of SP/EUs, related to QoE are established in DISEDAN 
system): for all active users or subsets; for all monitored data 
or summaries; full or summary monitored values. 
 
 Opportunity 
related 
monitoring: 
measurements 
essentially performed by the EUT to test the 
opportunity of switching the CS that delivers the 
content to EU. An example of such category is the 
Probing of some CS candidates if a CS switching 
action is prepared.  
B. Possible Roles of the Business Actors  
 
The DISEDAN project outlines a set of optional Provider 
side modifications (w.r.t. useful information and metrics 
provided by SP to the client) that can further optimize server 
selection. The design can be backwards-compatible, ensuring 
that each modified client or  SP can cooperate  with the other 

220
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
side, if the latter is using existing common content 
distribution solutions. Consequently, a range of solutions are 
proposed in this paper  for SP, CS and  EUT roles, i.e., 
several variants (named “use cases”), that  are  listed below.  
 
Tables I, II and III illustrate different design choices, 
listed in increasing order of complexity and, consequently, in 
increasing order of performances and costs, for SP, CS and 
EUT. Note that, although the Monitoring subsystems could 
be included generally in the architectural Management Plane, 
the Mon@SP, Mon@CS or Mon@EUT are specified in the 
tables in a distinct way, in order to emphasize the dynamic 
character of the data collected. Depending on the specific 
requirements and constraints, different variants can be 
selected as design/implementation choices of the DISEDAN 
system.  
Note also that the tables do not detail the monitoring 
capabilities embedded in the DASH adaptation subsystem. 
 
TABLE I.  
SERVICE PROVIDER - DESIGN VERSIONS  
 
Information known (by SP) 
about: 
Obtained 
from 
Type 
of  
information 
Is Monitoring system  
involved? 
(in collecting the 
Column 2 information) 
Remarks on SP role 
SP-V1 
CS list and their locations 
Mgmt@SP 
Quasi-static 
No 
SP solves the user requests. 
SP is involved in initial server selection, or 
during media session (to help switching 
decision at EUT), based only on ordered 
list of servers and  depending on their 
load. (minimum complexity) 
 
Content files (objects) mapping 
on different servers 
Mgmt@SP 
Quasi-Static  
or  dynamic 
No 
 
CS status (current load) 
CSs 
Dynamic 
Yes 
 
User groups 
Mgmt@SP 
Quasi-static 
No 
 
Active (in-session) users 
(information is based on EUT 
request accounting only) 
EUs 
Dynamic 
No  
SP-V2 
Idem as SP-V1, plus below 
items  
 
 
 
Idem as in SP-V1 but more qualified 
assistance in selection of the initial 
(server-path) pair. 
Problem: how can a given user invoke 
usage of a selected path if multiple paths 
are available? Usually the choice can 
address only the inter-domain paths. 
 
Potential user groups 
Mgmt@SP 
Quasi-static 
No 
 
Basic connectivity paths (from 
different CSs to different groups 
of users) static characteristics  -
obtained at overlay level   
Mgmt@SP/ 
CSs 
Quasi-static 
No 
SP-V3 
Idem as SP-V2, plus below 
items  
 
 
 
Idem as in SP-V2 but more assistance in 
selection of the initial (server-path) pair, 
given the paths current load information. 
This is a powerful but  expensive solution 
involving strong CS-SP interactions. 
 
Current loads of the paths  
(bandwidth availability) 
CSs 
Dynamic 
Yes 
SP-V4 
Idem as SP-V3, plus below 
items  
 
 
 
Idem as in SP-V3 but more assistance is 
available in the selection process of the 
initial (server-path) pair. 
 
Other dynamic  paths 
characteristics (delay, loss, jitter, 
etc.) 
CSs 
Dynamic 
Yes 
SP-V5 
Idem as SP-V4, plus below 
items  
 
 
 
Idem as in SP-V4, but more flexibility 
from business point of view. The SP 
offered services can be better customized. 
 
SP Policy Information 
Mgmt@SP 
Static 
No 
SP-V6 
Idem as SP-V5, plus below 
items  
 
 
 
Idem as in SP-V5, plus more powerful set 
of knowledge on system history. 
( maximum complexity) 
 
Historical and prediction data on 
servers and paths utilization 
Mgmt@SP 
+ Mon@SP 
Dynamic 
Yes 
 
TABLE II.  
CONTENT SERVER –DESIGN VERSIONS 
 
Information known (by CS) 
about: 
Obtained 
from 
Type of 
information 
Is Mon@CS 
involved? 
(in collecting the 
Column 2 nformation) 
Remarks on CS role 
CS-V1 
EU authorization data 
Mgmt@SP 
Quasi-static 
No 
The selected ( by the EUT) CS solves the 
user content requests. 
CS status info is delivered to SP. 
CS info on active users can be also 
delivered to SP. 
 
EU requests 
EUTs 
Dynamic 
Yes 
 
CS status (current load) 
Mgmt@CS 
Dynamic 
Yes 
 
Active (in session) users 
EUs 
Dynamic 
Yes 
CS-V2 
Idem as CS-V1, plus below 
items  
 
 
 
Idem as in CS-V1 but more assistance in 
offering (via SP) additional information 
for  selection of the initial (server-path) 
pair. 
 
 
Potential user groups 
SP 
Quasi-static 
No 
 
Static characteristics of 
Mon@CSs 
Quasi-static 
Yes 

221
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
connectivity paths  (evaluated at 
overlay level)  from different CSs 
to different groups of users 
CS-V3 
Idem as CS-V2, plus below 
items  
 
 
 
These data can be be sent to SP to help for 
more efficient management  of EU 
connections. 
If multiple paths are available,  the CSs 
should have some source routing 
capabilities in order to force the stream to 
follow a given path. 
 
Active User groups 
Mgmt@CS 
Dynamic 
Yes 
 
Connectivity paths dynamic 
characteristics  (evaluated at 
overlay level)  from different CSs 
to different groups of users 
Mon@CS 
Dynamic 
Yes 
 
 
TABLE III.  
END USER TERMINAL –  DESIGN VERSIONS 
 
 
Information known about: 
Obtained 
from 
Type of  
information 
Is Mon@EUT 
involved? 
(in collecting the 
Column 2 nformation) 
Remarks on EUT role 
EUT-V1 
EUT local static context 
  
Mgmt@EUT 
Quasi-static 
No 
EUT issues   content requests to SP.  
For server selection it uses the MD file 
sent by SP and its local static context 
information. 
For dual adaptation it uses the monitored 
data (including the DASH embedded one) 
and basic probing information. 
 
MD file 
SP 
Dynamic 
No 
 
QoE quality during session 
Mon@EUT 
Dynamic 
Yes 
 
CS accessibility (basic 
probing) 
Mon@EUT 
Dynamic 
Yes 
EUT-V2 
Idem as EUT-V1, plus items 
below 
 
 
 
EUT issues   content requests to SP.  
For server selection it uses the MD file 
sent by SP and its static context 
information. 
For dual adaptation it uses the monitored 
data and probing information. 
 
EUT local dynamic context 
 
Mon@EUT 
Dynamic  
Yes 
 
CS accessibility (advanced 
probing) 
Mon@EUT  
Dynamic  
Yes 
EUT-V3 
Idem as EUT-V2, plus items 
below 
 
 
 
 
 
Local Policy information 
Mgmt@EUT 
Static 
No 
Possible local policy data are used in 
server selection and dual adaptation. 
EUT-V4 
Idem as EUT-V3, plus items 
below 
 
 
 
 
 
Historical and prediction data 
on servers and paths utilization 
Mgmt@EUT 
Mon@EUT 
Dynamic 
Yes 
Possible history and prediction  data are 
used in server selection and dual 
adaptation. 
 
 
 
V. 
DESIGN DECISIONS DETAILS 
This section will refine the functional blocks introduced 
in the previous one, in order to prepare the software 
functionalities specifications. We recall that objective of this 
section is limited to refine the architecture and proceed to 
design of the functional blocks, in such a way as to respond 
to the flexibility features proposed initially.  The   validation 
and performances of the system will be treated in other 
complementary works during the project. 
The functional blocks inside each DISEDAN actor are 
presented in high level view, in the following subsections. 
Figures 2, 3 and 4 show the complete architecture 
(functional blocks and the relationship between them). 
However, in the basic version of the DISEDAN system, 
only the most important ones are actually implemented – 
i.e., those needed to prove the innovative concepts.  
Figures 2, 3 and 4, use three marking types for functional 
blocks: 
- the functions mandatory implemented in the basic 
DISEDAN version are depicted in dark gray color boxes; 
- the light gray colour boxes can be implemented as 
static versions in the basic DISEDAN system and extended 
with dynamic capabilities for advanced SP versions;  
- the white color boxes represent functionalities which 
could  exist in advanced versions of SP (i.e., complete real 
life system implementation, with advanced  functionality, in 
order to provide the best possible QoE). 
 
A. Service Provider Functional Blocks 
Figure 2 shows the SP functional blocks. 
The (lightweight) SP functional blocks implemented for 
DISEDAN basic version are: 
 
Comm Agent –used for communication with 
external entities (in particular EUT and CS). It can 
also be used by the monitoring system.  The Comm 
Agent will serve only the Management and Control 

222
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Plane communications between SP and EUTs and 
CSs. 
 
MPD File generator – dynamically generates 
Media Presentation Description (MPD) XML file, 
containing media segments information (video 
resolution, 
bit 
rates 
etc.), 
ranked 
list 
of 
recommended CSs and, optionally - current CSs 
state information and network state (if applicable). 
 
MCDA - performs the selection algorithm – i.e., 
runs Step 1 of the server selection process.  
 
Monitoring 
module 
– 
basically 
it 
collects 
monitoring information from CSs and performs the 
processing required to estimate the current state of 
each CS. If some EU-related information should go 
to SP, then this information are collected by the CS 
from EUT, and then aggregated and transited 
towards SP. 
 
Data Base - contains the static and dynamic 
information about CSs, EUT communities and 
profiles, etc. In the basic version these static 
information are filled offline into DB. In advanced 
SP implementations, the DB can be split in two 
modules Run-time DB and Quasi-static DB, 
containing respectively fast volatile data and 
respectively mid-long term data. 
 
CS Discovery - it has the role to discover the CSs 
locations, their main characteristics and content 
items available (mapping of the content objects - to 
- CS). In the basic version of SP these data can be 
statically introduced by the administrator.  
 
EUT Discovery- it has the role to discover the EUT 
groups locations and their main profiles. In the 
basic version of SP these data can be statically 
introduced by the administrator.  
In advanced versions of SP implementations, other 
blocks can be added and also some of the existing ones are 
enhanced to have dynamic capabilities: 
 CS Dynamic Discovery - it has the role to 
dynamically discover the CSs locations, their main 
characteristics and content items available (mapping 
of the content objects – to – CS). Periodical updates 
are necessary. This module should be existent in the 
SP-V2…SP-V6 versions of SP.  
 EUT Dynamic Discovery- it has the role to 
dynamically discover the EUT groups locations and 
their main profiles. Periodical updates are necessary. 
This module should be existent in the SP-V2…SP-
V6 versions of SP.  
 
 
  
 
Figure 2. The Service Provider software architecture 
EUT 
CS 
Comm 
Agent 
Monitoring Module 
CS Discovery 
EUT Discovery 
Content 
Mapping 
EU Groups 
CS 
Location 
MPD file 
generator 
MCDA  
algorithm 
DB 
Connectivity 
Module  
Paths 
QoS 
Forecast 
Module 
Service 
Provider 
(SP) 
Policy 
Manager 

223
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 Connectivity Module – is an optional functional 
block, collecting and maintaining updates about 
connectivity 
characteristics 
(paths, 
QoS 
parameters) between the CSs of interest (list of 
them is delivered by the CS discovery module) and 
different groups of EUTs. If this module exists, 
then the SP level selection decision of the content 
server can be more powerful. The reason is that in 
such case not only CSs are selected but also some 
lists of “good” pairs {CS, path} could be selected 
and proposed to the EUT, in response of its 
request. A scalable solution (given the multi-
domain characteristic of DISEDAN) for such a 
block implementation is to consider only overlay 
paths crossing one or several network domains. 
This module should be existent in the SP-V2…SP-
V6 versions of SP.  
 Policy Manager – is a module that can apply 
various policies at SP level (e.g., related to 
business and/or technical aspects). The effect will 
be the modification of the selection produced by 
MCDA, and, consequently, of the list returned to 
the EUT. This module should be existent in 
advanced SP-V5, SP-V6 versions of SP. Such 
policies can provide inputs to the MCDA process 
(see [15]), in two ways: 
o by assigning different weights to the existing 
decision 
variables 
– 
depending 
on 
policy 
considerations, 
o by defining new decision variables (derived from 
policies) to the MCDA matrix.  
 Forecast Module – A module that can make 
educated predictions based on various data like 
history, communication preferences with other 
similar modules in places, like SP and CS. This 
module should be existent in the SP-V5…SP-V6 
versions of SP. 
B. 
End User Terminal Functional Blocks 
The EUT high level architecture is presented in Fig. 3. 
The End User Terminal control logic contributes (by 
cooperating with SP) to the selection of the best available 
Content Server in order to provide the best possible 
experience to the user. On the request of the human End 
User, the EUT will send the request to the SP. The SP 
response contains an ordered list of preferred (after SP 
evaluation) Content Servers. The order of the CS in the list 
represents the preference of the servers from SP point of 
view. 
 
 
 
 
Figure 3. The End User Terminal software architecture 
(DASH and Player boxes represent libraries of already existing software) 
 
 
Comm 
Agent 
CS 
SP 
Monitoring 
Module 
QoE 
DASH 
DB 
Local 
Context 
Module  
Forecast Module 
End User 
Terminal 
(EUT) 
Source 
Selection  
CS 
 status 
MCDA 
Alg. 
Player 
Local Policy 
Module 

224
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
The functional blocks implemented in the DISEDAN basic 
version are: 
 
Comm Agent – used for communication with other 
external entities (in particular, SP and CS). It can 
also be used by the monitoring system.  
 
CS status – it can be seen as a monitoring system 
part, but here it is depicted as standalone, to 
emphasize its role in proof of concepts. This block 
finds out (considering the path from CSs to EUTs) 
the Round Trip Time (RTT) and Number_of_Hops 
towards each CS selected by the SP and reachable 
by the EUT. This information can be used later in 
the MCDA algorithm inside EUT (when making 
the final CS selection). 
 
MCDA alg – it runs the MCDA algorithm.   A sub-
block not represented in the figure does exist inside 
MCDA algorithm. This bloc creates the input data 
for the algorithm, ie., the matrix of values (see 
[15][16]), constructed from data like RTT, hop 
count and the priority as set by the SP.  The result 
provided by the MCDA is sent to the Source 
Selection block. 
 
Source Selection – based on the decision of the 
MCDA algorithm this block creates the URL 
request for the elected CS and calls the DASH 
player. 
 
Monitoring Module – it can monitor various local 
aspects of the network or of the terminal itself. 
Note that it can be a simple block fed with static 
information – for the basic implementation; 
however, it could perform real monitoring in 
advanced EUT versions. 
DB – A data base used to keep EUT staic and volatile 
data.Special blocks are coming form open source software 
that DISEDAN uses for the proof of concept: 
 
DASH – The Dynamic Adaptive Streaming over 
HTTP library. It is the DASH client that gets the 
movie from the CS where the DASH server is 
running.  
 
Player – the VLC media player is the ones that 
finally displays the movie content on the EUT 
screen.  
The following blocks can be implemented in 
DISEDAN advanced versions, e.g., for some complete 
commercial implementation: 
 
QoE – Quality of Experience block; it is part of 
monitoring but is depicted separately in Fig.3, 
given its importance (recall that the final goal is to 
contribute to achieve the highest possible QoE). 
Additionally, the DASH subsystem itself has 
various 
internal 
mechanisms 
to 
adapt 
to 
environment conditions.  
 
Local Module Policy – it is a module that can apply 
various policies at the EUT level (e.g., related to 
business aspects and/or some special policies like 
for example parental-child control-related policies). 
 
Local Context Module – it is an agent that can 
gather 
information 
about 
the 
terminal 
(by 
aggregating static EUT information and dynamic 
monitoring information.  
Forecast Module – makes based-on–learning predictions 
based on various data like history, preferences, 
communication with other similar modules in 
places like SP and CS.  
C.  
Content Server Functional Blocks 
 
The CS high level architecture is presented in Fig. 4. The 
functional blocks implemented for DISEDAN basic version 
are: 
 
 Comm Agent – used for communication with other 
external entities (in particular SP and EUT). It can 
also be used by the monitoring system.  
 
Data Plane - DASH Streaming module – sends 
media segments requested by End Users.  
 
Monitoring module – monitors the basic CS 
performance metrics (CPU utilization, network 
interfaces utilization, etc.). 
 
Current State module – contains the main 
parameters describing this CS status (EU served, 
number of sessions, load, etc.).   
 
Data Base – contains information produced by the 
monitoring and also the data about currently EUs 
served by this CS and maybe some potential ones. 
The following blocks can be implemented for advanced 
DISEDAN versions of the CS: 
 
Advanced Monitoring module - in a complex 
implementation of the CS, the monitoring can 
evolve from a simple probe to an advanced 
monitoring module, capable to supervise not only 
the active sessions but also some connectivity 
characteristics from this CS to different groups of 
users. 
 
EU Module – determines data about the EUs 
(status, groups) by using communication services 
offered by the communication agent. 
 
Connectivity Module – optional functional block, 
collecting 
and 
maintaining 
updates 
about 
connectivity 
characteristics 
(paths, 
QoS 
parameters) between the CS and different groups of 
EUTs. If existent, this module would provide 
additional information to the Connectivity Module 
of the SP.  
 
AAA 
Module 
– 
performs 
conventional 
Authentication, Authorization and Accounting 
functions. It is not essential for DISEDAN proof of 
concepts. 
 
Forecast Module – can make based-on–learning 
predictions based on various data like history, 

225
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
preferences, communication with other similar 
modules in places like SP and CS. 
VI. 
CONCLUSIONS AND FUTURE WORK 
This paper presented an analysis of design decisions for 
implementation variants of a novel and flexible light-
architecture content delivery system, working on top of the 
current Internet networks. The system involves a Service 
Provider, End Users and Content Servers owned by the SP.  
The novelty consists in including in a single solution of 
initial content server selection, (based on collaboration SP -
EU, and multi-criteria optimization algorithms like MCDA, 
EMO, etc.) and session-time DASH adaptation and/or 
intelligent server switching (if the quality of the flow is 
degraded at the End User).  
Several versions of designs are proposed, illustrating the 
architectural approach flexibility and comments are given on 
the associated complexity.  
The main DISEDAN advantage consists in avoiding to 
develop complex M&C planes and signaling, while still 
offering sufficient QoE (due to adaptation capabilities) to the 
end users, in a cheap and fast implementable OTT-style 
solution. Note that the price paid for this lower cost solution 
is paid by the fact that DISEDAN cannot provide contracted 
(via SLA) hard QoS/QoE guarantees for its users. 
However, the DISEDAN architecture is flexible, in the 
sense that it can benefit, if existent, of better managed 
connectivity services in the network; as well, it can benefit 
from information related to network static characteristics and 
dynamic monitoring data, possible to be collected by the 
Control Plane. In such cases the MCDA-based server 
selection algorithm can provide better solutions and 
consequently, higher QoE perceived by the End Users. 
Preliminary results assessing the validity of the solution 
and performance of the algorithms are already reported in 
[15][16][18].Ongoing work is currently performed, to 
implement the described system (in the DISEDAN project).  
In parallel with design and implementations, simulations 
have been performed (see extensive results in [18]), 
including large scale network environment, to prove the 
capabilities of the proposed architecture.  
Details on the implementation of the functional blocks 
will be reported in future papers. 
Complete results and performance evaluation of the 
implemented system, obtained for different use cases, will be 
also reported in some future papers. Comparisons with 
existing systems will be also provided. 
 
 
 
 
Figure 4. The Content Server software architecture 
 
 
 
 
 
 
 
 
Comm 
Agent 
EU 
SP 
Monitoring 
Module 
EU Module 
Groups 
Streaming 
Module 
DB 
Current State 
Module  
Forecast 
Module 
Content 
Server 
(CS) 
AAA Module 
State 
Conectivity 
Module 
Path
s 
QoS 

226
International Journal on Advances in Telecommunications, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/telecommunications/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 
ACKNOWLEDGMENTS 
This work has been partially supported by the Research 
Project DISEDAN, No.3-CHIST-ERA C3N, 2014- 2015. 
 
REFERENCES 
[1] E. Borcoci, C. Cernat, R. Iorga, J. M. Batalla, D. Negru,  
“Flexible Design of a Light-Architecture Content Streaming 
System with Dual Adaptation,” The International Symposium 
on Advances in Content-oriented Networks and Systems, pp 
114-119 
http://www.iaria.org/conferences2015/CONNET.html,  
[Accessed October 2015]. 
[2] J. Pan, S. Paul, and R. Jain, “A survey of the research on 
future 
internet 
architectures,” 
IEEE 
Communications 
Magazine, vol. 49, no. 7, pp. 26-36, July 2011. 
[3] P. A. Khan and B. Rajkumar. “A Taxonomy and Survey of 
Content Delivery Networks”. Department of Computer 
Science and Software Engineering, University of Melbourne. 
Australia : 
s.n., 
2008, 
www.cloudbus.org/reports/CDN-
Taxonomy.pdf, [Accessed October 2015]. 
[4] ***, “Information-Centric Networking-3”, Dagstuhl Seminar, 
July 13-16 2014, Available from: 
http://www.dagstuhl.de/en/program/calendar/semhp/?seminar
=14291, [Accessed October 2015]. 
[5] V. 
Jacobson 
et 
al., 
“Networking 
Named 
Content,” 
CoNEXT ’09, New York, NY, pp. 1–12, 2009, 
[6] http://wp2.tele.pw.edu.pl/disedan/publications, 
[Accessed 
October 2015].  
[7] T. Dreier, "Netﬂix sees cost savings in MPEG DASH 
adoption," 15 December 2011. [Online]. Available from: 
http://www.streamingmedia.com/Articles/ReadArticle.aspx?A
rticleID=79409, [Accessed October 2014]. 
[8] S. Wenger, Y. Wang, T. Schierl and A. Eleftheriadis, "RTP 
Payload Format for Scalable Video Coding," IETF RFC 6190, 
2011. 
[9] ISO/IEC 23009-1, "Information technology -- Dynamic 
adaptive streaming over HTTP (DASH) -- Part 1: Media 
presentation description and segment formats," ISO/IEC, 
Geneva, 2014.  
[10] M. Kawarasaki, K. Ooto, T. Nakanishi, and H. Suzuki, 
"Metadata driven seamless content handover in ubiquitous 
environment," in Proceedings of the 2004 International 
Symposium on Applications and the Internet SAINT'04, 
Tokyo, 2004.  
[11] S. Park and S. Jeong, "Mobile IPTV: Approaches, Challenges, 
Standards and QoS Support," IEEE Internet Computing, vol. 
13, no. 3, p. 23–31, 2009.  
[12] L. De Cicco, S. Mascolo, and V. Palmisano, "Feedback 
control for adaptive live video streaming," in MMSys '11 
Proceedings of the second annual ACM conference on 
Multimedia systems, San Jose, California, 2011.  
[13] J. Figueira, S. Greco, and M. Ehrgott, “Multiple Criteria 
Decision Analysis: state of the art surveys,” Kluwer 
Academic Publishers, 2005. 
[14] A. Beben, J. M. Batalla, W. Chai, and J. Sliwinski, “Multi-
criteria decision algorithms for efficient content delivery in 
content networks,” Annals of Telecommunications, vol. 68, 
Issue 3, pp. 153-165, Springer, 2013, 
[15] E. Borcoci, M. Vochin, M. Constantinescu, J. M. Batalla, D. 
Negru, “On Server and Path Selection Algorithms and 
Policies in a light Content-Aware Networking Architecture,” 
ICSNC 
2014 
Conference, 
Available 
from: 
http://www.iaria.org/conferences2015/ICSNC15.html, 
[Accessed October 2015].  
[16] O. Catrina, E. Borcoci, and P. Krawiec (WUT), “Two-Phase 
Multi-criteria Server Selection for Lightweight Video 
Distribution Systems,” 27th IFIP TC7 Conference 2015 on 
System 
Modeling 
and 
Optimization, 
Integration 
of 
Optimization, Modeling and Data Analysis for Solving Real 
World Problems. 
[17] E. Zitzler and L. Thiele, “Multiobjective evolutionary 
algorithms: A comparative case study and the strength pareto 
approach”. IEEE Transactions on Evolutionary Computation, 
No. 3(4), pp. 257-271, November 1999. 
[18] J. Mongay Batalla ed., A. Beben, P. Krawiec, P. Wisniewski, 
D. Negru, J. Bruneau-Queyreix,, E. Borcoci, R. Badea,  
DISEDAN D2.3 “Specification of the Dual adaptation 
mechanism,” http://wp2.tele.pw.edu.pl/disedan/publications, 
[Accessed October 2015]. 
 

