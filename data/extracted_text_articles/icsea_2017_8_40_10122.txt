Scope Management on Software Projects 
An updated approach to maturity levels and services in the Gaia Scope Framework  
 
Darlan Dalsasso 
Departamento de Computação, Universidade Estadual de 
Londrina - UEL 
Londrina, Brazil 
darlan_dalsasso@hotmail.com 
Rodolfo Miranda de Barros 
Departamento de Computação, Universidade Estadual de 
Londrina - UEL 
Londrina, Brazil 
rodolfomdebarros@gmail.com
 
 
Abstract— Software development is a complex activity and one 
of the most important activities to be developed in working 
with the requirements of each software project. This work 
addresses the development of the Gaia Scope Framework [3], 
as a tool and as a methodology to be followed by engineering 
and product scope management in software projects. The 
structure of the framework is composed of services. These 
services are the activities to be developed and are divided into 
different levels of maturity, where the goal is to get the 
company to reach the optimized level. Allied to that, the main 
work is the diagnostic evaluation questionnaire and the 
implementation process of the framework. This article presents 
an update of the maturity levels and services that had been 
initially defined, due to the need to make the framework easier 
to understand and take care of. The main objective of this 
study is the development of the Gaia Scope Framework, and 
that it guides and assists system and software engineers in the 
production of complete, correct and unequivocal requirements 
that meet the needs of users. 
Keywords - quality; software; framework; requirements; 
project management. 
I. 
 INTRODUCTION 
Software development is an activity that is constantly 
evolving. The search for new techniques that will help and 
improve the way to build software with higher quality and 
that mainly meets the needs of its users motivated the 
development of the Gaia Scope Framework. 
Studies are carried out and applied in the corporate and 
academic environment with the objective of developing 
better techniques and tools that assist in the development of 
software; the Gaia Scope Framework focuses on the scope of 
products in software projects because it has its focus on what 
'needs’ to be developed in software. 
Many of the difficulties that are encountered are often 
due to not knowing which activity needs to be developed 
first and what sequence of steps is needed later. There is also 
the situation of knowing what is the ultimate goal to be 
achieved, but not knowing how to achieve this goal.  
In this study, we are proposing the development of a 
framework for managing the product scope in software 
projects, known as the Gaia Scope Framework. 
The framework has undergone an update the levels of 
maturity. In the first version they were known as: undefined, 
known, managed, quantitatively managed, optimized. In the 
current version, the levels have been updated to: undefined, 
known, defined, managed, and optimized. In the same way, 
the services of the first version were: establishing the 
strategy, planning the scope management, collecting the 
requirements, defining the scope, creating the project 
analytical 
framework 
(EAP), 
validating 
the 
scope, 
controlling the scope, costs, the time, stakeholders, and the 
last service was in continuous improvement. In the current 
version, services are known as: establishing strategy, 
requirements and scope research and analysis, requirements / 
scope specification and negotiation, requirements / scope 
validation, requirements / scope management, maintenance 
and requirements / improvement (involves all areas and 
scope management services). This update was necessary due 
to the in-depth study and the need to make the framework 
more coherent and functional in relation to the purpose of the 
framework, which is to facilitate working with the elicitation, 
specification, approval, management and control of the 
product scope in the known projects as requirements. 
This framework can be treated as a tool to be used or a 
methodology to be followed because it expresses through 
services the activities that need to be developed and how 
they can be carried out to reach the final objective.  
The services are divided into levels of maturity so that 
the implementation of the framework is gradual and 
incremental. An example would be the following: in order 
for the company/institution to achieve the defined level of 
the framework, it must be able to develop the services that 
comprise this level, which are: requirements specification or 
scope negotiation and the requirements validation service. 
When reaching the objectives of each of the two services, it 
is understood that the defined level has been successfully 
achieved, which enables the company/institution to seek to 
develop the services of the above level that is managed. 
One of the ideas that surround the framework is that 
users can develop the activities necessary to successfully 
reach the services that make up each level of maturity in a 
gradual way, until reaching all services of the highest level, 
which is optimized, where it is possible to affirm that all 
services of the levels have been successfully achieved [3]. 
The structure is different from other works like [1][7], 
[8][12] because it not only suggests what needs to be 
developed but also the goal to be delivered. In the case of the 
185
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

Gaia Scope Framework, the services are responsible for 
presenting the information that needs to be elaborated.  
An example is that each service presents some templates 
that can be used by analysts to develop their work. Services 
are key items within the framework, as they facilitate the 
conduct of analysts in the work required to achieve the 
expected goal. 
The Gaia Scope Framework is formed by different 
services, which are the activities to be performed, which 
have a structure composed of different information, such as 
service description, document templates, questions related to 
the diagnostic questionnaire, among other information. 
Referring to the Gaia Scope Framework, the level of 
maturity refers to knowing how adequate, apt and matured 
the company is to carry out or develop the implementation of 
the necessary services for the management of the scope of 
software products. The maturity level also facilitates the 
institutionalization and application of services in a gradual 
way. 
The Gaia Scope framework includes the diagnostic 
assessment questionnaire and the framework implementation 
process. One of the main ideas is to make services simple 
and objective, easy to understand. The main idea for the 
development of this framework was the fact that we know 
that one of the main causes of the failure in software projects 
is the existence of difficult-to-interpret requirements, poorly 
defined, or sometimes due to poor management of 
requirements, among other factors. These difficulties can 
compromise all the work that will be developed in relation to 
activities related to software requirements. 
In the software industry is also known that activities 
related to engineering and requirements management need 
special attention, since it is a complex and fundamental 
activity that justifies the development of this framework; if 
the work related to the requirements is performed correctly, 
complete and unambiguous, the chance to develop and 
deliver software that meets the needs of end users is bigger. 
This article is divided as follows: in Section 2, the 
concepts of requirements engineering will be discussed. 
Section 3 refers to project scope management. Section 4 
discusses Information Technology (IT) services concepts and 
the idea of maturity levels. Section 5 presents a comparative 
study of engineering and requirements management. Section 
6 will address the Gaia Scope Framework and their 
advantages. Subsection A of Section 6 presents the maturity 
levels of the Framework Gaia Scope. Subsection B of 
Section 6 introduces the integration of maturity levels with 
their respective services. Section 7 presents the conclusions 
and future works about the study. 
II. 
REQUIREMENTS ENGINEERING 
As we approach the software development context, we 
need to keep in mind what we are going to build for, and to 
whom we are going to build it for. We can simply 
understand that a requirement can be a need that has to be 
satisfied or even a property of a product that already exists 
[11]. 
This reflects in the discovery of the minimum details of 
the product that will be implemented and in the 
understanding of all the stakeholders involved. In  general 
way, it is called requirements or requirements engineering. 
The task of obtaining the knowledge and understanding 
the requirements is a problem to be solved and presents itself 
one of the most complex challenges faced by analysts and 
software engineers [7]. This is due to the fact that often the 
customers themselves are in doubt of what they really expect 
the software to do. 
The requirements are the descriptions or specifications of 
the application to be developed, its operating restrictions, and 
the services they will offer [8]. These specifications serve as 
the basis for all the work that is going to be done ahead and 
are critical to the correct understanding of what is needed to 
be developed. 
The vast amount of tasks and techniques that make 
analysts aware of what is needed to be developed is called 
software engineering [7]. 
Requirements engineering can also be understood as a 
process that is used to identify, analyze, develop the 
documentation and verify the resources that the application 
must offer and the constraints that need to be considered in 
the development of the solution [8]. 
Analyzing the concepts presented above, it is possible to 
be aware of the complexity that such activity has in the 
software development process. 
Obviously, the greater the competence in performing the 
activity of identifying and documenting the requirements in a 
simple, clear and objective way, thus maintaining a good 
management of these activities, can cause the produced work 
product to have a greater chance and probability of success. 
So, the Gaia Scope Framework aims to assist analysts 
and software engineers in performing their daily work tasks 
in a standardized, simple and controllable way. 
III. 
PROJECT MANAGEMENT AND PROJECT SCOPE 
MANAGEMENT 
We can identify the existence of projects in practically 
everything around us. To find a new job, to open a company, 
to carry out a university, to write a scientific article, among 
others, involves understanding the needs that we intend to 
develop in order to reach the main objective, and also, its 
management in an efficient way to know where we are in the 
project. 
In company/institution, the idea of design becomes more 
practiced, according to the large number of projects that 
happen in the world at the same time. Many of these projects 
are about the development of software to meet the most 
varied demands of the market. 
A survey conducted by the Project Management Institute 
shows that company/institution, seeking to achieve a high 
degree of performance in their projects implement twice the 
number of strategic initiatives that are successfully carried 
out (76%) from the comparison to low performance 
company/institution, (38%) [10]. 
To understand how is possible to be able to evolve in our 
project, we need to seek continuous improvement, adopting 
strategies that make it possible to get the most out of the 
performance and quality of the product generated. 
186
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

In addition to that, high-performance company/institution 
lose twelve times less money when compared to non-high 
performing company/institution,, leaving $ 20 million lost to 
high-performing companies and $ 230 million lost to 
company/institution, that were non-high-performing. This 
amount is considered for each U $$ 1 billion spent in project 
expenditures [10]. 
So 
that, 
it 
is 
known 
the 
difference 
between 
company/institution, that are high performance and the ones 
that are not. 
The amount of losses is so bulky that makes us wonder 
how many projects could be developed with the resources 
that are lost. 
The development of software projects fits well in this 
need, which leads us to seek to develop them, thinking 
carefully about the format of projects, and consequently, 
giving emphasis to the area of project scope management, 
which is the basis of all work. 
A project is an enterprise that does not repeat itself, and 
which has a clear and logical sequence of events or activities 
to be developed which seeks to achieve a clear and specific 
objective, that is accomplished and led by people, 
considering parameters of time, cost, resources involved and 
quality [10]. 
By understanding that each project is unique and 
theoretically has an established beginning and end, we need 
to seek to develop the right requirements, primarily by 
lowering the time for survey and validation of requirements. 
According to the Project Management Institute (PMI), a 
project is a temporary effort, with the aim of creating a 
product or service considered unique. It is ended when the 
project objectives are: met, have not been successfully 
achieved, can not be achieved or the need for the project is 
over. It can still be ended if it is the client's will or sponsor 
[9]. 
Project quality can also be understood as the source of 
customer satisfaction and project success. When clients are 
satisfied, we can measure the project success [6]. 
Project scope management encompasses the activities 
necessary to ensure that the project includes only what is 
necessary for its development, nothing else [9]. 
It means that when we develop projects, we need to think 
only about what is necessary to be done and delivered, not 
worrying about activities and artifacts that are not part of the 
scope. 
The Gaia Scope Framework will serve as a tool to be 
used or a methodology to be followed that will address the 
key activities that need to be created to ensure that the 
development and management of the product scope is 
performed in a correct, complete, clear, modifiable, 
prioritized, verifiable and traceable. 
It will contribute to generating the effective, efficient, 
reliable and quality product that reach the needs of the 
product scope management area, but mainly, achieving the 
needs of the users. 
 
IV. 
IT SERVICES AND LEVELS OF MATURITY 
The Gaia Scope Framework is developed in the service 
format as discussed below, in section VI. These services are 
the activities to be built up or can be understood as the 
objectives to be achieved.  
The purpose of a service is to offer something value to 
customers, enabling them to accomplish their expected 
results in a measurable way [3].Obviously, each of these 
services aims some value for the project in a unitary way, 
and all of these services add high value and success in the 
activities of engineering and requirements management in a 
general way. 
The services strategy refers to IT skills in the generation 
of service assets [4]. Services are classified as intangible 
assets, not presenting physical characteristics, but can 
generate economic benefits for company/institution, [4]. 
The value consists of two main components that are 
utility and assurance, where utility is about what the 
customer receives, and it turns the guarantee on how this 
value is provided to customers [2]. 
Another characteristic of the services is due to the fact 
that clients do not have to bear certain costs and risks [2]. 
Finally, service management is a set of specialized 
organizational skills aimed at providing value to all of its 
customers in the form of services. 
The Gaia Scope Framework is developed using maturity 
levels, as discussed below, in section VI. 
Maturity levels are a combination of processes or 
activities and process empowerment [5]. 
It is possible to understand that maturity levels are 
composed of a set of processes that need to be satisfactorily 
achieved or contemplated, achieving the minimum expected 
favorable results to ensure that such process is considered 
satisfactory or unsatisfactory. 
Process capability refers to the set of skills to meet 
business objectives, both current and future, meeting what is 
required in each process [1]. 
Each process has its value within the maturity level. It is 
worth emphasizing that each process has a significant value, 
which, together with the other processes that make up the 
level, cause the level of maturity to be reached. 
The level of maturity of an company/institution, makes it 
possible to gain a better understanding of its future 
performance. This is due to the fact that by the logic, after 
the company/institution, reaches a certain level, it means that 
it has the minimum of excellence in the processes that 
develops from that level, being able to work to implement 
the processes of the upper levels, that is, trying always to 
reach improvement in their processes. 
It is worth mentioning that once an  reaches a level of 
maturity, it has to work to maintain it, because if it does not, 
it may not go through an eventual revaluation of the level in 
the future. 
V. 
COMPARATIVE STUDY ON ENGINEERING AND 
REQUIREMENTS MANAGEMENT 
In the opportunity to develop this research, and as a way 
to better understand the main initiatives regarding 
187
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

requirements 
engineering, a comparative 
study 
was 
developed between the main references of this area. 
In order to develop this study, the works of Ian 
Sommerville, Roger S. Pressmam, MPS-BR, CMMI, in their 
most current versions were analyzed. 
Through the analysis of the literature, it was possible to 
better understand the activities proposed by each author 
regarding requirements engineering, and an important asset 
was developed for the development of the Gaia Scope 
Framework, which is about updating services as also update 
the maturity levels that will make up the framework. 
This study made it possible to change the version of the 
services being proposed, as we are going to see later.  
A comparative study is presented. See Table I. 
TABLE 1. MAPPING AND RELATIONSHIP OF ENGINEERING ACTIVITIES AND 
REQUIREMENTS MANAGEMENT 
Mapping and relationship of engineering activities and requirements 
management 
Ian 
Sommervill
e [8] 
Viability Study 
Elicitation and Requirements Analysis 
Requirements Specification 
Requirements Validation 
Requirements Management 
Software Reuse: Does not specifically address the 
process  
 
 
 Roger 
S. 
Pressman 
[7] 
Conception 
Survey 
Elaboration 
Negotiation 
Specification 
Validation 
 
Management 
Reuse of Software: It is approached within the 
construction of the analysis model 
Historical database: Mentioned within the requirement 
survey activity and within the construction of the 
analysis model 
 
MPS-BR 
[1] 
The understanding of the requirements is obtained from 
the suppliers of requirements 
The requirements are evaluated on the basis of objective 
criteria and a commitment of the technical team to these 
requirements is obtained 
Bi-directional traceability between requirements and 
work products is established and maintained 
Revisions to project work plans and products are 
conducted to identify and correct inconsistencies with 
requirements 
Requirements changes are managed throughout the 
project 
Organizational Culture: It is mentioned in the process 
attribute that  
refers to whether project execution is managed. 
Historical database: Does not deal specifically with 
these terms but can be seen the use of historical data in 
the activity "Changes in requirements are managed 
throughout the project" 
Lessons learned: It does not deal specifically with these 
terms but you can see the use of historical data in the 
activitye "Changes in requirements are managed 
throughout the project," which can generate lessons 
learned. 
 
 
CMMI [12] 
1 - Develop customer requirements (Formed by the 
activities of eliciting needs and transforming the needs 
of those involved in customer requirements.) 
2 - Develop product requirements (Formed by the 
activities of establishing product and product component 
requirements, allocating product component 
requirements and identifying interface requirements.) 
3 - Analyze and validate requirements (Formed by the 
activities of establishing operational concepts and 
scenarios, establishing a definition of required 
functionality and quality attributes, analyzing the 
requirements and analyzing the requirements to achieve 
balance and validate requirements.) 
REQUIREMENT MANAGEMENT  
 
  
(Formed by the activities of understanding requirements, 
obtaining requirements commitment, managing 
requirements changes, maintaining bidirectional 
traceability of requirements, ensuring alignment 
between project work and requirements) 
Reuse of Software: Addresses the idea of reuse of 
software in the area of requirements development 
 
In requirements management, the needs passed by the 
organization are considered. This gives an idea of the 
consideration of organizational culture. 
Historical database: Addresses requirements database 
and history of requirements changes. This refers in some 
way to the historical database. 
Lessons learned: Does not directly mention lessons 
learned, but does mention the use of history of 
requirements changes.  
 
 
 
Gaia Scope 
Framework 
Establish strategy 
Requirements / scope survey and analysis 
Requirements specification / scope and negotiation 
Validation of requirements / scope 
Requirements / Scope Management (- Involves control 
of requirements / scope; - Involves control and change 
management; - Involves requirements / scope 
traceability)  
 
Maintenance and requirements / scope history (Involves 
reuse of requirements - Involves historical database - 
Involves lessons learned - Involves company/institution 
culture and company/institution process assets) 
Continuous improvement (Involves all areas and 
services of scope management) 
188
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

 
From this comparative study, we were able to extract the 
best practices applied in each of the references, where it was 
possible to design the services that will compose the Gaia 
Scope Framework. 
Soon we were able to create a framework that serves to 
manage product scope in software projects of any size. 
 
VI. 
GAIA SCOPE FRAMEWORK 
The Gaia Scope Framework is a tool to be used or a 
methodology to be followed to assist the engineering and 
management of the product scope in software projects. 
From this proposal, leaders and requirements engineers 
will have a greater ease to surveying, specifying, validating, 
and managing the product scope of their software projects, 
thus ensuring greater management, ensuring ease of handling 
during the work that must be developed and achieving 
greater assurance and integrity of information. 
The composition of the framework will be through 
services that will be divided into different levels of maturity, 
as will be analyzed next. 
The idea of working with services is due to the fact that 
we focus on delivering value to users, who will be clients of 
the framework. 
Each service consists of the following elements; service 
description, document templates, questions related to the 
diagnostic questionnaire, vocabulary, tools and techniques, 
performance indicators and workflow. 
The service description will provide an objective and 
direct context about the service. Document templates are 
basic standards that can be used. 
The questions related to the diagnostic questionnaire 
refer to verifying through this questionnaire whether the 
service in question is answered or not. 
The vocabulary refers to the terms used in the service. 
The tools and techniques represent what can be used to 
develop the service. The performance indicators are the 
parameters that are used to measure the progress and service. 
And finally, the workflow is the process of each service. 
Another point is that the implementation through 
maturity levels facilitates the deployment process, since it 
will happen gradually as the company/institution, is able to 
achieve the objectives of each service. 
The framework will also be composed of an 
implementation process that is adherent to the software 
development processes in general, and a diagnostic 
evaluation questionnaire that will be used to identify, in the 
first 
moment, 
which 
level 
of 
maturity 
the 
company/institution  is, and also in future revaluations, to 
know if the level will be maintained, lowered or raised. 
The image below, presents the process of gaia scope 
implementation, which is initiated by the application of the 
diagnostic evaluation questionnaire, to understand in which 
level of maturity the company/institution, is. 
Then, from the understanding of the maturity level, 
services are reviewed and optimized so that one can start 
working to reach the highest levels of the framework, or to 
maintain the level in which one is. 
From the moment the company/institution, understands 
that it is able to seek the next level of the framework or the 
time comes for a reassessment of the company/institution, at 
the level it is in, the diagnostic assessment questionnaire is 
applied again to identify the company/institution, situation in 
the activities that are part of the services of the desired level. 
In the sequence, the performance indicators in the 
historical database are registered and the maturity level is 
redefined, and in the sequence it is checked to see if it meets 
all the requirements of the level. 
In the event of a reassessment, if the requirements are 
met, the level is maintained, or it is passed to a higher level 
in case of evaluation for level change. 
The specified process is presented below, according to 
[4]. See Figure 1. 
 
 
Figure 1.  Implantation process of Gaia Scope Framework 
A. Gaia Scope Framework Maturity Levels 
The Gaia Scope Framework has been updated to become 
more adherent to its functional objective, which is product 
scope management in software projects. 
The levels that had been initially defined were: 
undefined, known, managed, quantitatively managed, and 
optimized [3]. 
The 
services 
that 
were 
initially 
planned 
were: 
establishing strategy, planning scope management, collecting 
requirements, defining scope, creating EAP, validating 
scope, controlling scope (integration, risks, costs, time, 
stakeholders) and improvement to be continued. 
However, as mentioned, there was a need of updating 
both the maturity levels and the services to compose the 
framework, and the comparative study between the different 
references was important for the more fruitful clarification of 
the ideas and the main objective of the Framework. 
Currently the maturity levels are as follows: 
 
 
Undefined; 
 
Known; 
 
Defined; 
 
Managed; 
 
Optimized; 
 
The maturity levels presented are those that are 
institutionalized in the Gaia Scope Framework currently. 
189
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

B. Integration of maturity levels with their respective 
upgraded services. 
The maturity levels presented are those that are 
institutionalized in the Gaia Scope Framework currently. 
 
 
Undefined 
o 
The company/institution, does not have 
defined and institutionalized processes and 
artifacts. 
 
Known 
o 
Establish strategy 
o 
Requirements and scope survey and 
analysis 
 
Defined 
o 
Requirements specification / scope and 
negotiation 
o 
Validation of requirements / scope 
 
Managed 
o 
Requirements / Scope Management 
 
Involves control of requirements / 
scope 
 
Involves change control and 
management 
 
Involves requirements / scope 
traceability 
o 
Maintenance and requirements / scope 
history 
 
Involves requirements reuse 
 
Involves historical database 
 
It involves lessons learned 
 
Involves 
company/institution, 
culture and company/institution 
process assets 
 
Optimized 
o 
Continuous improvement (Involves all 
areas and services of scope management) 
 
At the indefinite level, company/institution, do not have 
the knowledge about their scope of requirements, nor about 
their strategy. At the known level the company/institution, 
will establish a strategy and know the requirements 
analytically.  
At the defined level, the company/institution, already 
have important information about the scope, carrying out the 
specification, negotiation and validation of the scope of 
requirements. At the managed level, as its name implies, 
there is management of the requirements scope through 
requirements management activities, and maintenance of 
requirements and a historical database.  
The highest level is optimized, which suggests a 
continuous improvement of all the services that are 
implemented. 
This is the current model of the structure of maturity 
levels and services of the Gaia Scope Framework. To 
analyze the hierarchy of maturity levels, see Figure 2. 
 
 
Figure 2.  Hierarchy of maturity levels 
The Gaia Scope Framework has different advantages, 
where we can mention the following: A) Possibility of being 
used by any institution or company/institution, that develops 
software; B) It is a tool or methodology that does not have 
acquisition costs; C) Ease of application because it is divided 
into maturity levels and not bureaucratic; D) Designed to be 
constantly updated; E) It adds ideas of important references 
of the area like Roger Pressmam, Ian Sommerville, Mps-Br, 
CMMI, among other bibliographies; F) Simple and 
objective; G) The requirements for the development of 
software that supports the Gaia Scope framework are already 
being analyzed. 
VII. CONCLUSIONS AND FUTURE WORK 
The development of the Gaia Scope Framework is an 
initiative that comes to assist any agent that is directly or 
indirectly involved in the area of engineering and 
requirements management. 
The development of this tool, which can also be 
understood as a methodology, meets the need of many 
company/institution,, which is to identify and manage their 
requirements in the best possible way. 
Allied to the simplicity that the framework values, it is 
still possible to emphasize that it is free, which facilitates 
even more the use by them. 
It is important to clarify that the research work, as well as 
the necessary adjustments continue to guarantee continuous 
improvement in the framework, but the basis of the whole 
study is already structured by defining and updating the 
levels of maturity and services that the framework will 
Contemplated, which were presented in this article 
It is expected that, with the development of this 
framework, it will be possible to better identify and manage 
the requirements in software projects, aiming at a work that 
is carried out with ever more quality, guaranteeing the 
identification, analysis, development, documentation and 
requirements, which will be the basis for the development of 
all project needs. 
The work that will be carried out in the future deals with 
the detailed specification of each service and its elements, 
the development of the diagnostic evaluation questionnaire, 
the implementation of the framework in the Gaia company, 
the analysis of the results after the application in at least two 
projects, and if necessary, making the necessary adjustments, 
190
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

until the institutionalization of the final version of the 
framework.  
And then, the finalization of the software requirements 
specification to be developed that will support what the 
framework values. 
ACKNOWLEDGMENT 
I would like to thank Dr. Rodolfo Miranda de Barros for 
his help, advice and guidance for the development of this 
work. 
REFERENCES 
 
[1] Association for the Promotion of Excellence in Brazilian Software. 
General Software Guide. Brasilia: SOFTEX. January, 2016. 
[2] Bon, Jan Van., 2012. ITIL [recurso eletrônico] : guia de 
referência, edição 2011, Elsevier. Rio de Janeiro. 
[3] Dalsasso, Darlan., Barros, Rodolfo Miranda de, GAIA scope: 
Framework for the project scope management in software 
development proccess. In, 11th Iberian Conference on Information 
Systems and Technologies (CISTI), 2016, Gran Canaria, v.1. p. 1-6, 
2016. 
[4] Freitas, Marcos André dos Santos., 2013. Fundamentals of IT service 
management, Brasport. Rio de Janeiro, 2nd edition. 
[5] Koscianski, André., Soares, Michel dos Santos., 2007. Software 
quality: learn the most modern methodologies and techniques for 
software development, Novatec Editora. São Paulo, 2nd edition. 
[6] K. L. Madhuri and V. Suma, Influence of domain and technology 
upon scope creep in software projetcs. In. International Conference 
on Advances in Electronics, Computers and Communications, 
ICAECC 2014, pp. 1-6, 2014. 
[7] Pressman, Roger S., 2011. Software Engineering A Professional 
Approach, AMGH. Porto Alegre, 7nd edition. 
[8] Sommerville, Ian., 2011. Software Engineering, Pearson Prentice 
Hall. São Paulo, 9th edition. 
[9] A project management knowledge guide (PMBOK guide) / (text and 
translation) Project Management Institute. - 5 ed. - São Paulo: 
Saraiva, 2014. 
[10] Viana, Ricardo Vargas., 2014. Practical handbook of the project plan: 
using the PMBOK Guide, Brasport. Rio de Janeiro, 5th edition. 
[11] Vazquez, Carlos Eduardo. Simões, Guilherme Siqueira, 2016. 
Requirements engineering: software oriented to business, Brasport. 
Rio de Janeiro. 
[12] Software Engineering Institute. (2010). CMMI for Development, 
Version 1.3. Carnegie Mellon University, (November), 482. 
http://doi.org/CMU/SEI-2010-TR-033 ESC-TR-2010-033. 
 
 
 
 
 
191
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-590-6
ICSEA 2017 : The Twelfth International Conference on Software Engineering Advances

