Using GSPNs for Performance Evaluation of Networks with Repeated Calls and
Different Vacation Policies
Nawel Gharbi
Computer Science Department
University of Sciences and Technology, USTHB
Algiers, Algeria
Email: ngharbi@wissal.dz
Abstract—This paper deals with retrial systems where
servers are subject to random vacations. So far, these systems
were analyzed only by queueing theory and almost works
assuming that the service station consists of one server and the
customers source is inﬁnite. In this paper, we give a detailed
performance analysis of ﬁnite-source multiserver networks with
repeated calls of blocked customers and multiple or single
vacations of servers or all station, using Generalized Stochastic
Petri nets. We show how this high level stochastic model allows
us to cope with the complexity of such networks involving
the simultaneous presence of retrials and vacations, and how
stationary performance indices can be expressed as a function
of Petri net elements.
Keywords-Repeated calls; Finite-source; Vacation policies;
Generalized Stochastic Petri nets; Modeling and Performance
measures.
I. INTRODUCTION
Models with repeated calls describe operation of many
computer networks and telecommunication systems, e.g.,
call centers, cellular mobile networks [1][2][3][4] and wire-
less sensor networks [5]. Systems with repeated attempts are
characterized by the following feature: When an arriving
customer ﬁnds all servers (resources) busy or unavailable,
is not put in a queue, but joins a virtual pool of blocked
customers called orbit, and will repeat the request to try
again to reach the servers after a random delay. Signiﬁcant
references reveal the non-negligible impact of repeated calls,
which arise due to a blocking in a system with limited
capacity resources or due to impatience of users. There has
been a rapid growth in the literature on the queueing systems
with repeated attempts (also called retrial queues). For a
recent summary of the fundamental methods, results and
applications on this topic, the reader is referred to [6][7]
and [8].
In this paper, we consider multiserver retrial systems in
which each server sometimes takes a vacation, i.e., becomes
unavailable to the primary and repeated calls for a random
period of time. These vacation periods are usually introduced
in order to exploit the idle time of the servers for other
secondary jobs as: servicing customers of another system,
inspection tasks and preventive maintenance actions which
are mainly doing to prevent the risk of failure, to preserve
the sanity of the system, to provide a high reliability and
to improve the quality of service. Similarly, the servers
breakdowns which may occur randomly, and the repair
periods, may be regarded as servers vacations.
A wide class of policies for governing the vacation
mechanism, have been discussed in the literature, namely
the multiple vacation policy and the single vacation policy.
Other studies have considered synchronous vacations of
some servers or all the station servers (station vacation). On
the other hand, multi-server vacation models were mainly
studied in the past decade. Zhang et al. [9][10] studied the
multi-server models with either single vacation or multiple
vacations. Later, Lin et al. [11] analyzed the multi-server
model with working vacations. Ke et al. [12] studied the
optimal threshold policies in a ﬁnite buffer multi-server
vacation model with unreliable servers. Recently, Ke et al.
[13] consider a multi-server queueing system with multi-
threshold vacation policy and servers breakdowns. Excellent
surveys on the vacation models have been reported by Doshi
[14], Takagi [15], Tian et al. [16], and recently, by Ke et al.
[17].
The main reason for the growing interests in multiple-
server vacation models is because they can realistically
represent some service/manufacturing systems and com-
puter/telecommunication networks. However, all these works
on multi-server vacation queueing models, assume that the
customers source is inﬁnite and do not take into account the
repeated calls of blocked customers.
In retrial systems with vacations, customers who arrive
while all servers are busy or on vacation, have to join the
orbit to repeat their call after a random period. Thus, there
is a natural interest in the study of this class of models,
which has been used in concrete applications as digital
cellular mobile networks [18], local area networks with
nonpersistent CSMA/CD protocols [19], with star topology
[20] and so on. However, almost works combining retrial
and vacation phenomenon, assume that the service station
consists of one single server and the customers source is
inﬁnite [20][21][22]. On the other hand, in all the works
cited above, the retrial systems with vacations are analyzed
only by the queueing theory.
43
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

In this paper, we propose the applicability of Generalized
Stochastic Petri nets formalism (GSPNs) for modeling and
performance evaluation of networks with repeated calls of
blocked customers and servers vacations. To this end, we
consider different vacation policies, namely the single and
multiple vacations of servers or all the service station.
The paper is organized as follows: First, we describe the
systems under study. In Section 3, we present the GSPN
models describing multiserver retrial systems with station
and server vacations mechanisms and under multiple and
single vacation policy. Performance indices are given in
Section 4. Next, several numerical examples are presented
with some comments and discussions. Finally, we give a
conclusion.
II. DESCRIPTION OF RETRIAL NETWORKS WITH
DIFFERENT VACATION POLICIES
In the analysis of retrial systems with vacations, it is usu-
ally assumed that the customers source is inﬁnite. However,
in many practical situations, it is very important to take into
account the fact that the rate of generation of new primary
calls decreases as the number of customers in the system
increases. This can be done with the help of ﬁnite-source
retrial models where each customer generates its own ﬂow
of primary demands.
In this paper, we consider retrial systems with ﬁnite source
(population), that is, we assume that a ﬁnite number K
of potential customers generate the so called quasi-random
input of primary calls with rate λ. Each customer can be
in three states: generating a primary call (free), sending
repeated calls (in orbit) or under service by one of the
servers.
If a customer is free at time t, it can generate a primary
request for service in any interval (t, t+dt) with probability
(K − n)λdt + o(dt) as dt → 0, where n is the number of
customers in the system. Each customer requires to be served
by one and only one server.
The service station consists of c (c ≥ 1) homogeneous and
parallel servers. Each server can be idle, busy or on vacation.
If one of the servers is idle at the moment of the arrival
of a call, then the service starts. The requests are assigned
to the free servers randomly and without any priority order.
The service times are independent, identic and exponentially
distributed with rate µ. After service, the customer becomes
free, so it can generate a new primary call, and the server
becomes idle.
We consider the two vacation mechanisms: server va-
cation and station vacation. For the ﬁrst one, which is
encountered even more often in practice, each server is an
independent working unit, and it can take its own vacation
independently of other servers states. In the model with
station vacation mechanism, ALL the servers take vacations
simultaneously. That is, whenever the system is empty, all
the station leaves the system for a vacation, and returns
when the vacation is completed. So, station vacation is group
vacation for all servers. This occurs in practice, for example,
when a system consists of several interconnected machines
that are inseparable, or when all the machines are run by
a single operator. In such situations, the whole station has
to be treated as a single entity for vacation. Hence, if the
system (or the operator who runs the system) is used for
a secondary task when it becomes empty (or available), all
the servers (the operator) will then be utilized to perform a
secondary task. During this amount of time, the servers are
unavailable to serve any primary or repeated call and this is
equivalent to taking a station vacation.
The exhaustive service discipline is considered here. That
is, each free server (or all station) can take a vacation only
if the system is empty at either a service completion or at
the end of a vacation, and only at these epochs. On the
other hand, upon completing a vacation, the server returns
to the idle state and starts to serve customers, if any, till
the system becomes empty. Otherwise, if the server (or the
station) at the moment of returning from vacation, ﬁnds the
system empty, it takes one of the two actions:
• Under the multiple vacation policy, the server (station)
shall leave immediately for another vacation and con-
tinues in this manner until he ﬁnds at least one customer
(not being served) in the system upon returning from a
vacation.
• Under the single vacation policy, the server (station)
should wait until serving one call at least before com-
mencing another vacation.
The vacation times of all servers (or station) are assumed
to be independent and exponentially distributed with rate θ.
At the moment of the arrival of a call, if all the servers are
busy or on vacation, the customer joins the orbit to repeat
his demand after an exponential time with parameter ν.
As usual, we assume that the interarrival periods, service
times, vacation times and retrial times are mutually indepen-
dent.
III. GSPN MODELS OF MULTISERVER RETRIAL SYSTEMS
WITH VACATIONS
In this section, we present our approach for modeling
ﬁnite-source multiserver retrial systems with station and
server vacations, under multiple and single vacation policies
using the generalized stochastic Petri nets model.
A GSPN is a directed graph that consists of places (drawn
as circles), timed transitions (drawn as rectangles) which
describe the execution of time consuming activities and
immediate transitions (drawn as thin bars) that model actions
whose duration is negligible, with respect to the time scale of
the problem. This class of transitions has priority over timed
transitions and ﬁre in zero time once they are enabled.
Formally,
a
GSPN
[24]
is
an
eight-tuple
(P, T, W −, W +, W h, π, M0, θ) where :
• P = {P1, P2, ..., Pn} is the set of places;
44
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

                                                        
 
  Po 
                                      
tr             ν                               Y                                                           
      # 
 
 
                       Pa                  ta    #                   Pe                             Pd  
                             K                                                                       C                      
                                              λ                                                                        
 
        
                                                                                Z                            X 
 
 
                                                                                               Ps 
        Pv  
 
 
             #     ts     
       µ 
 
            
            #     tv 
                  θ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. GSPN model of retrial systems with multiple vacations of servers
• T = {t1, t2, ..., tm} is the set of timed and immediate
transitions;
• W −, W +, W h : P ∗T → IN are the input, output and
inhibitor functions respectively;
• π : T → IN is the priority function;
• M0 : P → IN is the initial marking which describes
the initial state of the system;
• θ : T → IR+ is a function that associates rates of
negative exponential distribution to timed transitions
and weights to immediate transitions.
A. Retrial systems with multiple vacations of servers
This model is used for describing many practical prob-
lems where servers take individual vacations. This means,
whenever a server completes servicing and there are no more
requests in the system, it takes a vacation independently of
other servers states. On the other hand, multiple vacations
policy means that at the end of a vacation period, if the
orbit is empty and there is no primary or repeated arrival,
the server takes immediately another vacation. The process
continues until the server upon returning ﬁnds any customer
in the system.
Fig. 1 shows the GSPN model describing the above
system.
• The place Pa contains the free customers;
• The place Pe contains the primary or repeated (return-
ing) calls ready for service;
• The place Pd contains the free (available) servers;
• The place Po represents the orbit;
• The place Ps contains customers in service (or busy
servers);
• The place Pv contains the servers that are on vacation.
The initial marking of the net is:
M0 = {M(Pa), M(Pe), M(Pd), M(Po), M(Ps), M(Pv)} =
{K, 0, c, 0, 0, 0}, which represents the fact that all customers
are initially free, the c servers are available, no server is
on vacation and the orbit is empty. Hence, at time t = 0,
all servers take a vacation simultaneously. So, this initial
state is vanishing and equivalent to the tangible state
(K, 0, 0, 0, 0, c).
• The ﬁring of transition ta indicates the arrival of a
primary request generated by a free customer. It has
an inﬁnite servers semantics, which is represented by
the symbol # placed next to transition. This means
that the ﬁring rate of ta is marking dependent and
equals λ.ED(ta, m) where ED(ta, m) is the enabling
degree of the transition ta in the marking m. Hence,
all potential customers are able to generate requests for
service.
• At the arrival of a primary or repeated request to
the place Pe, if Pd contains at least one available
server, the immediate transition X ﬁres and one token
is deposited in Ps, which represents the begin of the
service. Otherwise, if all servers are busy or on vacation
(ie. no token in Pd), the immediate transition Y ﬁres
and a token will be deposited in the place Po. So, the
customer joins the orbit.
• When the transition tr ﬁres, the customer in orbit tries
again for service, so the system receives a repeated
request.
• The ﬁring of the immediate transition Z represents the
event that an idle server is commencing a vacation since
there is no call left to be served. This represents the
exhaustive service discipline.
• The ﬁring of transition tv represents the end of the
vacation time. Hence, the server is returned to the
available state.
• When the timed transition ts ﬁres, the customer under
service returns to the idle state and the server becomes
ready to serve another customer.
• The service semantics of the timed transitions ts and
tv are inﬁnite servers semantics, because the c servers
are parallel. So, several servers can be in service or
on vacation at the same time. Similarly, the transition
tr is marking dependent because the customers in
orbit are independent and can generate repeated calls
simultaneously.
B. Retrial systems with multiple vacations of the station
In this model, as soon as the system is empty, all the
servers become idle, and consequently the station takes a
vacation. As one may expect, this situation appears to be
more complicated that the previous one. In fact, it is more
simple, because all servers take a vacation simultaneously
and return to the system at the same time also. Hence, the
GSPN modeling this system with multiple vacations of the
station, is the same model as the one given in Fig. 1, in
which the multiplicity of the arc connecting the place Pd to
45
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

                                                        
 
  Po 
                                      
tr             ν                               Y                                                           
      # 
 
 
                       Pa                  ta    #                   Pe                             Pd  
                             K                                                                       C                      
                                              λ                                                                        
 
        
                                                                                Z                             X 
 
 
                                                                                               Ps                  W                   Pr 
        Pv  
 
     # 
        ts              µ     
           
 
            
           #      tv 
                   θ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 2.
GSPN model of retrial systems with single vacations of servers
transition Z and transition tv to place Pd equals c (rather
than 1), because the c servers of the station take a vacation
together. So, if the place Pd contains c idle servers, the orbit
(Po) is empty and there is no arrival to the place Pe, the
immediate transition Z ﬁres, which represents the begin of
the station vacation time. At the end of this period (after
a mean delay equals 1/θ), c tokens corresponding to the c
servers of the station will be deposited in Pd.
C. Retrial systems with single vacations of servers
This model corresponds to systems where each server
is an independent working unit. The single vacation policy
means that at the end of a vacation period, even if the system
is empty, the server is obliged to wait until serving one call
at least, before commencing another vacation.
Fig. 2 shows the GSPN model describing the above
system.
In the previous models with multiple vacations, the place
Pd contains all the free servers. Hence, at the end of a
service or vacation period, the server returns to the idle state
represented by the place Pd. However, in the model with
single vacations given in Fig. 2, at a service completion, the
server joins the place Pd which contains the servers having
served at least one call since the last vacation period. So,
they can serve other calls if any (ﬁring of transition X).
Otherwise, they can take a vacation after the ﬁring of the
immediate transition Z. However, at the end of a vacation
period, the server joins the place Pr which represents the
servers having just ﬁnished a vacation. Hence, the servers
of Pr are obliged to serve at least one call after the ﬁring
of the immediate transition W to join the place Pd, where
they can commence another single vacation.
Initially, all customers are free, the orbit is empty and the
c servers are available to serve the calls or to take a vacation.
At the arrival of a primary or repeated request to the place
Pe, several alternatives are possible:
• If the place Pr of servers just returning from vacation,
contains at least one server, the immediate transition
W ﬁres and the service of the arriving call starts.
• If the place Pr is empty and the place Pd contains at
least one free server, the immediate transition X ﬁres
and the service period starts.
• If the two places Pd and Pr are empty which represents
the fact that all the servers are busy or on vacation,
the immediate transition Y ﬁres and a token will be
deposited in the place Po. So, the customer joins the
orbit.
D. Retrial systems with single vacations of the station
The GSPN modeling systems with single vacations of the
station is the same as the model given in Fig. 2, in which the
multiplicity of the arc connecting the place Pd to transition
Z and transition tv to place Pr equals c (rather than 1),
because the c servers of the station take a vacation together.
At the end of this period, c tokens corresponding to the c
servers of the station will be deposited in Pr. Hence, the
station can’t take another vacation until each server serves
at least one call.
IV. PERFORMANCE MEASURES
The aim of this section is to derive the formulas of the
most important stationary performance indices. As, all the
proposed models are bounded and the initial marking is a
home state, the underlying continuous time Markov chains
are ergodic for the different vacation policies. Hence, the
steady-state probability distribution vector π exists and can
be obtained as the solution of the linear system of equations
π.Q = 0 with the normalization condition ∑
i πi = 1, where
πi denotes the steady-state probability that the process is in
state Mi and Q is the transition rates matrix. Having the
probabilities vector π, several stationary performance indices
of small cell wireless networks with different vacation
policies can be derived as follows. In these formulas, Mi(p)
denotes the number of tokens in place p in marking Mi, A
the set of reachable tangible markings, and A(t) is the set
of tangible markings reachable by transition t and E(t) is
the set of markings where the transition t is enabled.
• The mean number of customers in orbit
(no):
no =
∑
i:Mi∈RS
Mi(Po).πi
(1)
• The mean number of busy servers (ns):
ns =
∑
i:Mi∈RS
Mi(Ps).πi
(2)
• The mean number of customers in the
system (n):
n = ns + no
(3)
46
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

• The mean number of servers on
vacation (nv):
nv =
∑
i:Mi∈RS
Mi(Pv).πi
(4)
• The mean number of idle servers (nf):
nf
=
c − (ns + nv)
(5)
=











∑
i:Mi∈RS Mi(Pd).πi,
in multiple vacations,
∑
i:Mi∈RS [Mi(Pd) + Mi(Pr)].πi,
in single vacations.
(6)
• The mean rate of generation of
primary calls (λ):
λ =
∑
i:Mi∈E(ta)
Mi(Pa).λ.πi
(7)
• The mean rate of generation of
repeated calls (ν):
ν =
∑
i:Mi∈E(tr)
Mi(Po).ν.πi
(8)
• The mean rate of service (µ):
µ =
∑
i:Mi∈E(ts)
Mi(Ps).µ.πi
(9)
• The mean rate of vacation (τ):
τ =
∑
i:Mi∈E(tv)
Mi(Pv).θ.πi
(10)
• The blocking probability of a primary
call (Bp):
Bp =













∑
i:Mi∈RS
∑K
j=1 j.λ.P rob[Mi(Pa)=j&Mi(Pd)=0]
λ
,
in multiple vacations,
∑
i:Mi∈RS
∑K
j=1 j.λ.P(i,j)
λ
,
in single vacations.
(11)
where:
P(i,j) = Prob[Mi(Pa) = j&Mi(Pd) = 0&Mi(Pr) = 0].
• The blocking probability of a
repeated call (Br):
Br =











∑
i:Mi∈A
∑K
j=1 j.ν.P rob[Mi(Po)=j&Mi(Pd)=0]
ν
,
in multiple vacations,
∑
i:Mi∈A
∑K
j=1 j.ν.P(i,j)
ν
,
in single vacations.
(12)
where:
P(i,j) = Prob[Mi(Po) = j&Mi(Pd) = 0&Mi(Pr) = 0].
• The blocking probability (B):
B = Bp + Br
(13)
• The admission probability (A):
A = 1 − B
(14)
• Utilization of s servers (Us): (1 ≤ s ≤
c)
Us =
∑
i:Mi(Ps)≥s
πi
(15)
• Vacation of s servers (Vs): (1 ≤ s ≤ c)
Vs =
∑
i:Mi(Pv)≥s
πi
(16)
• Availability of s servers (As): (1
≤
s ≤ c)
As = 1 −
∑
i:Mi(Ps)+Mi(Pv)≥s
πi
(17)
• The mean waiting time (W):
W = no/λ
(18)
• The mean response time (R):
R = (no + ns)/λ
(19)
V. VALIDATION OF RESULTS
In this section, we consider some numerical results to
validate the proposed models and also to show the inﬂu-
ence of system parameters and vacation policies on the
performance measures of multiserver retrial systems. The
numerical results were established using the GreatSPN tool.
In Table 1, some experimental results are collected when
the servers vacation rate and the station vacation rate are very
large. The results were validated by the Pascal program given
in the book of Falin and Templeton [25] for the analysis of
multiserver retrial queues without vacations. From this table,
we can see that the corresponding performance measures are
very close to the case without vacation and to each other with
server or station vacation policy with very high vacation rate.
Deﬁne the parameter ρ = Nλ/µ, which is the largest
offered load in the system. Table 2 shows the variation of
the mean response time with ρ, for the single and multiple
vacation policies, when the service station consists of one
server and the retrial rate is very high. From this table, we
can see that the numerical results are very close to those
obtained by Trivedi [23] for single server queueing systems
with vacations and without retrials, since the retrial rate is
very large.
47
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

Table I
VALIDATION OF RESULTS IN MULTISERVER RETRIAL CASE WITHOUT VACATIONS
Model without
Model with
Model with
vacation [25]
servers vacation
station vacation
Number of servers
4
4
4
Size of source
20
20
20
Primary call generation rate
0.1
0.1
0.1
Service rate
1
1
1
Retrial rate
1.2
1.2
1.2
Vacation rate
-
1e+25
1e+25
Mean number of busy servers
1.800 748
1.800 768
1.800 758
Mean number of customers of
0.191 771
0.191 788
0.191 786
repeated calls
Mean rate of generation of
1.800 748
1.800 744
1.800 746
primary calls
Mean waiting time
1.106 495
1.106 518
1.106 510
Table II
MEAN RESPONSE TIME WITH N = 50, µ = 1, θ = 0.5, c = 1
ρ
Models without retrials [23]
Models with ν = 1e + 25
Multiple vacations
Single vacations
Multiple vacations
Single vacations
0.1
3.107
1.494
3.106 810
1.493 581
0.3
3.391
2.370
3.390 962
2.370 404
0.5
3.834
3.172
3.833 990
3.172 221
0.7
4.592
4.152
4.592 591
4.152 760
0.9
6.000
5.718
6.000 657
5.719 090
VI. CONCLUSION
In this paper, we proposed a technique that allows mod-
eling and analyzing ﬁnite-source multiserver retrial systems
with different vacation policies using GSPNs. The nov-
elty of the investigation is essentially the combination of
multiplicity of servers with the simultaneous presence of
repeated calls and vacations, which make the system rather
complicated.
The ﬂexibility of GSPNs modeling approach allowed
us a simple construction of detailed and compact models
for these systems. Moreover, it made it possible to verify
many qualitative properties of interest by inspection of
the reachability graph. From a performance point of view,
the proposed approach offers a rich means of expressing
interesting performance indices as a function of the Petri
net elements.
Finally, many retrial and vacation systems problems and
their solutions can be simpliﬁed using the stochastic Petri
nets modeling approach with all the methods and tools
developed within this framework.
REFERENCES
[1] J. R. Artalejo and M. J. Lopez-Herrero, Cellular mobile
networks with repeated calls operating in random environment,
Computers & Operations Research 37, no. 7, 2010, pp. 1158-
1166.
[2] T. V. Do, A new computational algorithm for retrial queues
to cellular mobile systems with guard channels, Computers &
Indus. Engin. 59, 2010, pp. 865-872.
[3] N. Gharbi, L. Mokdad, and J. Ben-Othman, Performance and
Reliability Analysis of Small Cell Networks with Retrials and
Different Breakdowns Disciplines: A Computational Approach,
The 5th IEEE International Workshop on Performance Evalua-
tion of Communications in Distributed Systems and Web based
Service Architectures (PEDISWESA’2013), Split, Croatia, July
7-10, 2013.
[4] N. Gharbi and L. Mokdad, Performance Evaluation of
Telecommunication Systems with Repeated Attempts and Two
Servers Classes, International Symposium on Performance
Evaluation of Computer and Telecommunication Systems
(SPECTS’2013), Toronto, Canada, July 7-10, 2013.
[5] P. Wuechner, J. Sztrik, and H. De Meer, Modeling Wireless
Sensor Networks Using Finite-Source Retrial Queues with
Unreliable Orbit, Proc. of the Workshop on Perf. Eval. of
Computer and Communication Systems (PERFORM’2010),
vol. 6821 of LNCS Publisher: Springer-Verlag, 2011.
[6] G. I. Falin and J. G. C. Templeton, Retrial Queues, Chapman
and Hall, London, 1997.
[7] J. R. Artalejo and A. G´omez-Corral, Retrial Queueing Systems:
A Computational Approach, Springer, Berlin, 2008.
[8] J. R. Artalejo, Accessible bibliography on retrial queues:
Progress in 2000-2009, Mathematical and Computer Modelling
51, 2010, pp. 1071-1081.
[9] Z. G. Zhang and N. Tian, Analysis of queueing systems
with synchronous single vacation for some servers, Queueing
Systems: Theory and Applications, vol. 45, no. 2, 2003, pp.
161-175.
[10] Z. G. Zhang and N. Tian, Analysis of queueing systems
with synchronous vacations of partial servers, Performance
Evaluation, vol. 52, no. 4, 2003, pp. 269-282.
48
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

[11] C. H. Lin and J. C. Ke, Multi-server system with single
working vacation, Applied mathematical Modelling, vol. 33,
2009, pp. 2967-2977.
[12] J. C. Ke, C. H. Lin, J. Y. Yang, and Z. G. Zhang, ”Optimal
(d,c) vacation policy for a ﬁnite buffer M/M/c queue with un-
reliable servers and repairs”, Applied Mathematical Modelling,
vol. 33, 2009, pp. 3949-3962.
[13] J. C. Ke, C. H. Wu, and Z. G. Zhang, ”A Note on a Multi-
server Queue with Vacations of Multiple Groups of Servers”,
Quality Technology and Quantitative Management, vol. 10, no.
4, 2013, pp. 513-525.
[14] B. T. Doshi, ”Queueing systems with vacations: a survey”,
Queueing Systems, vol. 1, no. 1, 1986, pp. 29-66.
[15] H. Takagi, Queueing Analysis: A Foundation of Performance
Evaluation, Volume I, Vacation and Priority Systems, Part I,
North-Holland, Amsterdam, 1991.
[16] N. Tian and Z. G. Zhang, Vacation Queueing Models: Theory
and Applications, Springer, NewYork, 2006.
[17] J. C. Ke, C. H. Wu, and Z. G. Zhang, ”Recent Developments
in Vacation Queueing Models: A Short Survey”, International
Journal of Operations Research, vol. 7, no. 4, 2010, pp. 3-8.
[18] S. J. Kwon, ”Performance analysis of CDPD Sleep mode
for power conservation in mobile end systems”, IEICE Trans.
Commun. E84, 2001.
[19] H. Li and T. Yang, ”A single server retrial queue with server
vacations and a ﬁnite number of input sources”, European
Journal of Operational Research 85, 1995, pp. 149-160.
[20] G. K. Janssens, ”The quasi-random input queueing system
with repeated attempts as a model for collision-avoidance star
local area network”, IEEE Transactions on Communications
45, 1997, pp. 360-364.
[21] G. Choudhury, ”A two phase batch arrival retrial queueing
system with Bernoulli vacation schedule”, Applied Mathemat-
ics and Computation 188, 2007, pp. 1455-1466.
[22] Z. Wenhui, ”Analysis of a single-server retrial queue with
FCFS orbit and Bernoulli vacation”, Applied Mathematics and
Computation 161, 2005, pp. 353-364.
[23] K. S. Trivedi and O. C. Ibe, ”Stochastic Petri net analysis
of ﬁnite-population vacation queueing systems”, Queueing
Systems 8, 1991, pp. 111-128.
[24] M. A. Marsan, G. Balbo, G. Conte, S. Donatelli, and
G. Franceschinis, Modelling with Generalized Stochastic Petri
Nets, John Wiley and Sons, New York, 1995.
[25] G. I. Falin and J. G. C. Templeton, Retrial Queues, Chapman
and Hall, London, 1997.
49
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-347-6
ICWMC 2014 : The Tenth International Conference on Wireless and Mobile Communications

