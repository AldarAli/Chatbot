Towards a Blockchain-based Identity Provider
Andreas Gr¨uner, Alexander M¨uhle, Tatiana Gayvoronskaya, Christoph Meinel
Hasso Plattner Institute (HPI)
University of Potsdam, 14482, Potsdam, Germany
Email: {andreas.gruener, alexander.muehle, tatiana.gayvoronskaya, christoph.meinel}@hpi.uni-potsdam.de
Abstract—The emerging technology blockchain is under way to
revolutionize various ﬁelds. One signiﬁcant domain to apply
blockchain is identity management. In traditional identity man-
agement, a centralized identity provider, representing a trusted
third party, supplies digital identities and their attributes. The
identity provider controls and owns digital identities instead of
the associated subjects and therefore, constitutes a single point
of failure and compromise. To overcome the need for this trusted
third party, blockchain enables the creation of a decentralized
identity provider serving digital identities that are under full con-
trol of the associated subject. In this paper, we outline the design
and implementation of a decentralized identity provider using an
unpermissioned blockchain. Digital identities are partially stored
on the blockchain and their attributes are modelled as veriﬁable
claims, consisting of claims and attestations. In addition to that,
the identity provider implements the OpenID Connect protocol to
promote seamless integration into existing application landscapes.
We provide a sample authentication workﬂow for a user at an
online shop to show practical feasibility.
Keywords–Blockchain; distributed ledger technology; digital
identity; self-sovereign identity; Ethereum.
I.
INTRODUCTION
In 2008, Satoshi Nakamoto published the foundational pa-
per on Bitcoin and started the rise of its underlying blockchain
technology [1]. Bitcoin is the ﬁrst popular digital currency
based on a peer-to-peer network without the involvement of
a trusted third party. The concept of a decentralized digital
currency scheme is generalized by the decentralized execution
of additional computations. Bitcoin provides a limited scripting
language to enforce requirements on the processing of pay-
ments [1]. Beyond this, the Ethereum blockchain comprises a
Turing-complete virtual machine for the execution of arbitrary
code [2]. This capability allows the implementation of smart
contracts [3] to specify complex behaviour for payments or
value transfer in general. On top of that, it enables further ap-
plications without requiring a centralized entity. Thus, current
blockchain technology allows decentralized storage and exe-
cution of applications within a network of peers, eliminating
the need for a trusted third party [4].
Identity management is concerned with the representation
and administration of entities and their attributes as digital
identities. Digital identities serve in the identiﬁcation, authen-
tication and authorization process for applications [5]. The
security of an application signiﬁcantly depends on recognizing
users and preventing impersonation attacks of other users. In
this regard, secure identiﬁcation and authentication procedures
are fundamental to avoid misuse. Furthermore, authorization
ensures that properly authenticated users act within granted
privileges. Therefore, identity management is a substantial
cornerstone in securing the digital world and in preventing
fraud.
A pivotal entity in this domain is an identity provider.
The identity provider implements identiﬁcation, authentication
and authorization functions and provides these services to
other parties [6]. Traditionally, an identity provider represents
a trusted third party and is used within an organization.
In addition to that, identity providers that are external to
organizations are used in identity federation scenarios. An end
user wants to authenticate at a service provider. The service
provider redirects the end user to the identity provider for this
process. The identity provider conﬁrms a successful login or
reports a failed authentication to the service provider. Based
on the result, access to the offered service is granted or denied.
A service provider signiﬁcantly relies on the proper exe-
cution of the processes carried out by the identity provider.
This trust is mainly derived from contractual obligations, due
diligence and reputation of the identity provider. Overall, in
traditional identity management, the identity provider is a
trusted third party and essential to the security of applications.
The centralized identity provider as the trusted third party
has several downsides. First and foremost, the identity provider
needs to be trusted due to centralized control and ownership of
digital identities and their attributes. The subject of the digital
identity is not in possession of its own data. Additionally,
the identity provider represents a single point of failure and
therefore decreased reliability. As a central entity the identity
provider may accumulate a large amount of identity data and
becomes a proﬁtable target to attackers, thereby increasing
motivation for data theft.
To address these challenges, we have devised a decentral-
ized implementation of an identity provider using an unper-
missioned blockchain. The blockchain-based identity provider
removes the trusted third party from identity management and
remediates centralized control and ownership of the digital
identities as well as the single point of failure and compro-
mise. Trust in the decenrally issued identities is derived from
the transparency of the blockchain implementation and the
attestation issuers, that verify claims. Additionally, the OpenID
Connect [7] protocol is implemented to facilitate seamless
integration into existing application landscapes and eases the
transition from conventional providers.
The remainder of this paper is structured in the following
way. In Section 2, we present related work and concepts. The
subsequent section provides background on the interrelations
between blockchain technology and identity management. We
devise our blockchain-based identity provider in Section 4.
Section 5 describes a sample authentication workﬂow using
the implemented identity provider. We provide suggestions for
future work in Section 6 and conclude the paper in Section 7.
73
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

II.
RELATED WORK
Numerous
practical
and
academic
projects
combine
blockchain technology and identity management [8]. These
projects target either speciﬁc parts of identity management
or are directly concerned with a self-sovereign identity. Im-
plementation approaches differ between creating speciﬁc-
purpose blockchains or adding functionality on top of existing
blockchains using smart contracts. However, the majority of
projects offer only a limited amount of detail regarding the
technical implementation. In the following section, we describe
uPort and Sovrin due to the sufﬁcient amount of available
information and the maturity of the solutions. Additionally, we
point out differences to our blockchain-based identity provider.
A comprehensive self-sovereign identity solution is imple-
mented by uPort [9] in the form of smart contracts on the
Ethereum blockchain. A digital identity is mainly represented
as a controller, proxy, and recovery contract. The address
of a proxy contract is the identiﬁer of the digital identity.
The controller contract establishes a management function to
administrate and use the proxy contract as an identity. This
distinction enables the replacement of the controller contract
and fosters persistence of the proxy contract address. The
restoration of the private key is the intent of the recovery
contract. Additionally, a central and user-independent registry
contract on the blockchain is used to reﬂect bindings between
identities and claims or attestations. Claims and attestations
are stored on InterPlanetary File System (IPFS) [10] or
central cloud storages. Besides blockchain-based components
of uPort, there are additional elements of the ecosystem. A
developer library enables the integration into applications. The
uPort mobile app is the key application for the end user to
manage the digital identity.
Compared
to
uPort,
our
blockchain-based
identity
provider solution is implemented as dedicated unpermissioned
blockchain yielding a beneﬁt on computational efﬁciency and
reduced transaction cost. uPort uses the general execution
environment and transaction costs on Ethereum. Our identity
provider is directly integrated into a blockchain and uses
dedicated transactions. Besides that, our identity provider
offers OpenID Connect conformity to seamlessly integrate
into existing application landscapes.
Sovrin [11] is a public and permissioned blockchain solu-
tion dedicated to providing identity management. Sovrin nodes
are distinguished as validator or observer nodes. Validators are
speciﬁcally chosen nodes that are permissioned to write the
next state of the blockchain and include transactions. Observer
nodes solely read the blockchain and make the information
available for clients. Sovrin is supervised by a complex trust
framework with different governance bodies that make deci-
sions on the further development of the blockchain and the
admission of new validator nodes. Additionally, participation
in the network is liable to contractual agreements issued
by the Sovrin Foundation [12]. A digital identity of Sovrin
comprises an identiﬁer and attributes are modelled as claims
and attestations. Aliases can be linked to the identiﬁer to
increase privacy. Several claim types are differentiated that
enable, for instance, clear, encrypted and hashed storage on
the blockchain. Storage providers can be used to save the data
in case the claim is not directly stored on the blockchain.
In contrast to Sovrin and the use of governance bodies, our
blockchain-based identity provider utilizes an unpermissioned
blockchain to avoid reliance on trusted third parties and to
foster the vision of a self-sovereign identity.
III.
BLOCKCHAIN AND IDENTITY MANAGEMENT
Considering both domains, blockchain technology and
identity management, there is mutual interest and applicability.
On the one hand, a permissioned blockchain requires the
implementation of identity management and access control to
grant privileges on the blockchain layer to eligible participants.
A permissioned blockchain comprises predetermined nodes for
transaction processing and block creation [13]. The predeter-
mined nodes need to be identiﬁed and permissions must be
assigned to the respective digital identities.
On the other hand, using blockchain technology to build
a distributed execution environment for self-sovereign identi-
ties forms a distinct identity provider. Blockchain technology
enables the implementation of a decentralized digital identity
that is not issued and owned by a trusted third party. This
digital identity is under true control of its associated entity.
Therefore, a decentralized digital identity adhering to spe-
ciﬁc characteristics is named a self-sovereign identity. These
properties are elaborated by Allen [14] and can be grouped
into the categories security, controllability and portability [15].
The cluster security comprises protection, minimisation and
persistence. Protection refers to the general precedence of
the digital identity’s owner rights. Minimisation is concerned
with data privacy and the reduction of information disclosure
about the subject. Persistence describes the long-term existence
of a digital identity. Controllability is the second category
in the attribute grouping and encompasses existence, control
and consent. Furthermore, persistence is repeatedly indicated.
Existence describes, that a digital identity should reﬂect a
physical object. The control of the identity is completely in the
possession of the owner and without the consent of the owner
no information is revealed. Portability is the last category
and comprises interoperability, transparency and access. The
digital identity and corresponding identity provider services
are interoperable with customers and provider services ap-
plying standard protocols. The implementation, operation and
actioning of the digital identity is transparent to all involved
parties. The owner, or any legitimate party, has easy access
to information or attributes of the digital identity. Overall,
blockchain technology is able to provide decentralized identity
management for other applications in a novel way.
IV.
A BLOCKCHAIN-BASED IDENTITY PROVIDER
In the following sections, we outline our decentralized
identity provider based on blockchain technology. Starting
with objectives and requirements that lead to particular design
decisions, we subsequently present the overall architecture,
theoretic model and implementation of the novel identity
provider.
A. Objective
In traditional identity management, digital identities and
their attributes are issued by a centralized identity provider that
represents a trusted third party. Service providers need to trust
the correctness of the identity provider as well as the validity of
issued digital identities and their attributes. In addition to that,
trust is required in properly performing the authentication pro-
cess of a subject. Furthermore, the centralized identity provider
74
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

is in full control and ownership of the digital identity and its
attributes. Therefore, the subject needs to trust the identity
provider on carefully handling and protecting its data. Besides
that, trust in compliant behaviour according to regulation and
contracts of the identity provider is required. The subject does
not expect arbitrary actions, for instance revoking attributes or
the complete digital identity, leaving the subject without access
to potential critical resources. An identity provider usually
serves numerous subjects and therefore collects and stores
an accumulated amount of data being a proﬁtable target for
attackers. Overall, a centralized identity provider represents a
single point of compromise and control.
To overcome these challenges, blockchain technology en-
ables the implementation of a decentralized identity provider
without it being a trusted third party. We devise a novel
implementation approach of an identity provider using an un-
permissioned blockchain to decentralize identity management
and derive trust in digital identities from claims and attestations
instead of the identity provider itself. The blockchain-based
identity provider applies conventional protocols to seamlessly
integrate into existing application landscapes conﬁning re-
quired changes on the side of the service provider.
B. Requirements
Besides the general objective, we consider the following
requirements as signiﬁcant for our blockchain-based identity
provider.
•
Decentralization.
Decentralization
of
the
identity
provider model is a key factor to foster independence
from a central authority. In general, decentralization
is enabled by the blockchain model. However, an
introduction of concentrated external dependencies
needs to be prevented in the blockchain network.
•
Standard Protocols. The usage of identity management
protocols as standards is necessary to foster a seamless
integration and migration from conventional identity
providers to the blockchain-based identity provider.
•
Efﬁciency. The identity provider should be cost ef-
ﬁcient with regards to transaction fees to foster its
usage.
C. Design Decisions
There are different solution approaches to building a
blockchain-based identity provider that fulﬁls the stated ob-
jective and implements the listed requirements. We make the
subsequent design decisions to achieve an optimal solution.
The identity provider is implemented as a separate
blockchain instead of a smart contract-based approach on an
existing general purpose blockchain. Using smart contracts on
another blockchain affects efﬁciency in terms of computation
and cost. A dedicated identity provider blockchain implements
the required components more efﬁciently compared to an
execution on a general purpose distributed virtual machine.
Furthermore, relying on a general purpose blockchain implies
the adoption of the respective transaction fee cost model.
Adjusted transaction costs to identity management yield a cost
beneﬁt.
To concentrate on the development of the identity provider,
we fork an existing blockchain as the foundation and integrate
the identity provider as a core component. We determined
Identiﬁer
Claim
Attestation
Digital Identity
1:n
1:n
Subject
Claim Issuer
Attestation Issuer
created by
issued by
issued by
Figure 1. Digital Identity Model and Actors
Ethereum as the most suitable solution for our identity provider
based on the broad community, extensive documentation and
published source code of the different clients.
Furthermore, we chose the OpenID Connect protocol as
integration pattern into existing applications. OpenID Connect
speciﬁcation as an amendment of OAuth 2.0 [16] is devel-
oped by major technology companies and has wide adoption.
Besides that, identity federation with social networks (e.g.
Facebook) are highly used.
D. Digital Identity Model and Actors
The digital identity comprises a unique identiﬁer and at-
tributes. The identiﬁer is chosen arbitrarily by the subject upon
creation of the identity. Uniqueness is ensured due to recording
and veriﬁcation on the blockchain network. The attributes of
the digital identity are modelled as claims and attestations. A
claim is a statement about an attribute of the digital identity.
The attestation of a claim is an assertion about the correctness
and validity of a claim by a digital identity. See Figure 1 for
an overview of the model. The digital identity is created by
a subject generally referring to an end user. The claim issuer
creates statements about the identity and the attestation issuer
asserts these statements. The service provider offers services
to end users. To use a service the subject authenticates and
potentially authorizes itself to the service provider by using the
blockchain-based identity provider. Both end user and service
provider can act as claim and attestation issuer.
E. Architecture and Authentication Process
In traditional identity management, the subject, identity
provider and service provider represent distinct entities. The
subject registers at the identity provider to create a digital
identity and potentially provide information about attributes.
The service provider forwards the subject to the identity
provider during the authentication process. The subject proves
with credentials to be in control of the respective digital
identity and the identity provider sends the authentication
result to the service provider.
Using a blockchain-based identity provider, the distinct
entity of an identity provider is replaced by a blockchain
network leading to changes in the general architecture and
the authentication process. An overview of the architecture
is depicted in Figure 2. Subject and service provider each
operate a node in the network to establish a connection to the
decentralized identity provider. Initially, the subject creates a
digital identity by issuing a transaction to the network.
Upon requesting access at a service provider (for instance at
an online shop) the service provider forwards the subject to the
75
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

Blockchain-based 
Identity Provider 
Subject
Service
Provider
Node
Node
Online
Shop
1 - Create Identity 
2 - Request Access 
3 - Verify Identity
Figure 2. Architecture
local node of the identity provider. Subsequently, the subject
proves to be in control of the presented digital identity and the
service provider grants access to its portal.
F. Theoretic Model
Our blockchain-based identity provider is based on the
Ethereum blockchain. Therefore, we extend the world state of
Ethereum as the theoretic model by an additional identity state.
The state transition function is modiﬁed to embrace changes
of the identity state resulting from newly introduced identity
transactions that are recognized by the blockchain.
1) World State and Identity State: The entire state is named
world state and comprises address to account state associations
[2]. We extend the world state to additionally include mappings
from addresses to identity states aligned to the account states
and formally deﬁne it as follows.
σ = (A, I)
A comprises the account states as deﬁned in [2] with A[m]
referencing a speciﬁc account by address m. We deﬁne I as the
set of identity states with I[m] referencing the identity state of
address m. An identity state contains the following attributes.
•
Nonce n. A scalar value matching the changes of the
identity. An identity is created with nonce = 1.
•
Identiﬁer i. An arbitrary string that references the
digital identity.
•
Owner o. Owner represents the related account of the
identity. This account controls the digital identity.
•
Claims c. The attribute comprises a cryptographic hash
of a trie that stores the claims of the identity. The data
of a claim might be stored on the blockchain or outside
the blockchain network. In case the data of the claim is
stored at another storage provider a cryptographic hash
is added as information of the claim to the blockchain.
•
Attestations a. The property contains a cryptographic
hash of a trie that stores attestations for the claims
of the digital identity. Comparable to claims, the
attestations can be stored on the blockchain or on
another storage solution having the cryptographic hash
on the blockchain.
The identity state is formally deﬁned as follows.
I[m] = (n, i, o, c, a)
2) Transactions:
A transaction is a cryptographically
signed message to the blockchain network. There are two
types of transactions T: Contract creation transaction Tcon
and message call transaction Tmsg [2]. These transactions are
determined to evolve the account state. We introduce three
additional transaction types to facilitate the identity model and
allow identity state changes. These transactions are as follows.
•
Create Identity Tcre. An identity is initially created by
specifying the identiﬁer i. The owner o is indirectly set
to the account from which the transaction originates.
•
Modify Identity Tmod. An identity is modiﬁed during
its lifetime by adding or removing claims and attesta-
tions.
•
Delete Identity Tdel. An identity is deactivated by
removing the owner as well as clearing claims and
attestations. Therefore, the control of the identity is
revoked and no further actions are possible.
We extend the deﬁnition of a transaction T in [2] to comprise
the following ﬁelds.
•
Type p. The attribute speciﬁes the transaction type and
is one of Tcon, Tmsg, Tcre, Tmod or Tdel.
•
Nonce n. The nonce determines the count of transac-
tions generated by the sender that is deﬁned with the
attribute from f.
•
GasPrice p. Gas is consumed for executing computa-
tions of the transaction. Gas price p is the cost for one
unit of gas.
•
GasLimit g. The ﬁeld determines the upper bound of
gas used for the transaction.
•
To t. The property deﬁnes the recipient of the trans-
action.
•
From f. The ﬁeld characterizes the originator of the
transaction either being an account itself or an identity.
•
Value v. Value v deﬁnes the payment transferred to
the recipient of the transaction.
•
Signature w, r, s. The properties comprise the cryp-
tographic signature of the transaction by the sender as
deﬁned in [2].
•
Init i. Data used for transaction of type Tcon.
•
Data d. Data used for transaction of type Tmsg and
Tmod.
The general validity of a transaction is determined through the
veriﬁcation of the sender’s cryptographic signature. A valid
transaction containing the sender’s address of an account is
signed with the corresponding key pair. Additional basic trans-
action veriﬁcation steps are deﬁned in [2]. Invalid transactions
are not processed.
3) State Transition:
The world state transitions into a new state based on transac-
tions issued to the network. These transactions advance the
world state’s underlying account [2]. Additionally, identity
transactions update the identity states. The mining of the next
block of the blockchain persists the included transactions and
76
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

did = ” did : bbidp : ”
i d s t r i n g
i d s t r i n g
= 1* i d c h a r
i d c h a r = ALPHA /
DIGIT
Figure 3. bbIdP DID Method Scheme
advertises the state evolvement to all nodes of the network. The
state transition function Υ advances the world state σ to the
new world state σ′ based on a Transaction T and is formally
deﬁned as follows [2].
σ′ = Υ(σ, T)
We detach account state transitions from identity state transi-
tions and deﬁne the following sub functions of Υ.
(A, I)′ = Υ((A, I), T)
⇔
ΥA(A, T) =

A′,
T ∈ {Tcon, Tmsg}
A,
T ̸∈ {Tcon, Tmsg}
∧ΥI(I, T) =

I′,
T ∈ {Tcre, Tmod, Tdel}
I,
T ̸∈ {Tcre, Tmod, Tdel}
The identity state transition function ΥI is the main function
of the blockchain-based identity provider.
G. Implementation
The foundation of our blockchain-based Identity Provider
(bbIdP) is the Python client of Ethereum comprising the main
libraries pyethapp [17] and pyethereum [18]. We adapted the
pyethereum implementation according to the theoretical model
to support the newly introduced identity management transac-
tions and to store identity information in a separate identity
state. Pyethapp is modiﬁed to use the updated pyethereum
library accordingly. To fully leverage the identity provider
model, pyethapp’s service oriented architecture is extended
by an OpenID Connect provider based on the pyoidc library
[19] to offer respective service and achieve straightforward
integration.
The representation of identiﬁer, claims and attestations dif-
ferentiates an internal and external model. The external model
is aligned to standards under development by World Wide Web
Consortium (W3C) community working groups [20] [21]. The
internal speciﬁcation is a reduced representation to facilitate
a streamlined implementation. The blockchain-based identity
provider offers remote procedure calls to retrieve identiﬁer,
claims and attestations in the external format. Additionally, the
OpenID Connect provider accepts the external representation.
The format of the identiﬁer is aligned to the Decentralized
IDentiﬁer (DID) speciﬁcation [20] and deﬁned as a particular
DID method scheme (see Figure 3). The method namespace is
bbidp and abbreviates the blockchain-based identity provider
proposed in this paper. The portion idstring is a combination of
one or more characters or numbers. This identiﬁer is speciﬁed
during the creation of the digital identity. It is provided in the
”To” attribute of the identity creation transaction. To exter-
nally reference the identity, the fully qualiﬁed decentralized
identiﬁer is used. In general, the external structure of a claim
follows the credential entity model of the Veriﬁable Claims
{
” id ” :
” i d e n t i f i e r ”
” type ”
:
” Smith ” ,
” claim ”
:
{
” id ”
:
” did : bbidp : bob ”
” f i r s t n a m e ”
: Bob
}
}
Figure 4. Sample Claim
[21] community working group. A claim is represented in the
JavaScript Object Notation (JSON) [22] format. A sample is
shown in Figure 4. Each claim consists of a claim identiﬁer,
meta data and a property that contains the actual attribute of
the digital identity. A claim is issued in simpliﬁed form to the
blockchain contained in the data ﬁeld of the identity modi-
ﬁcation transaction. Issuer and issue timestamp are implicitly
obtained from the respective transaction. The speciﬁed attribute
of the identity can be issued as a cryptographic hash to increase
privacy. Internally, the claim is stored in the claim trie of the
appropriate identity. The key is the claim identiﬁer and the
value is represented by the remaining attributes. To revoke an
existing claim, a transaction is issued containing a claim with
the same identiﬁer that has no claim attribute.
The attestation of a claim is a signature of the claim
itself by the attestation issuer. It is represented in JSON
and internally stored in the attestation trie of the identity.
Additionally, the attestation comprises meta data about the
issuer, creation time and the referred claim. In contrast to the
Veriﬁable Claims working group, we internally separated the
attestation from the claim to allow various attestations of a
single claim from different attestation issuers.
The integrated OpenID Connect provider serves a simple
web page. Upon re-directing a user from the originating portal
for authentication, it provides a random value encoded as
Quick Response (QR) code [23]. The provider expects as
return value a JSON data structure containing the random value
and the identity proﬁle that is signed by the owner account of
the digital identity. Subsequently, the provider veriﬁes against
the blockchain, that the signature is valid and the used account
corresponds to the owner of the digital identity. In case of
positive veriﬁcation, the provider returns a positive message
and redirects the user back to the originating portal. In case
of authentication failure, an error message is delivered.
V.
SAMPLE WORKFLOW
Alice owns an online book shop. To order a book, a cus-
tomer needs to login to the online shop. The online shop offers
the possibility to login with our blockchain-based identity
provider (see Figure 5). Bob wants to buy products in Alice’s
online shop. He creates a digital identity on the blockchain-
based identity provider network by issuing an identity creation
transaction with the identiﬁer ”bob”. After selecting products
in the online shop, Bob navigates to the sign-in page. Next,
the blockchain-based identity provider is chosen as a login
method by Bob. Consequently, the identity provider generates
a random value and provides it in the form of a QR code to
the online shop in an iFrame. Bob signs the random value
and the proﬁle of his digital identity related by the identiﬁer
77
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

”did:bbidp:bob” and sends it to the embedded callback address
of the identity provider. Upon successful veriﬁcation of the
return message, Alice’s online shop recognises Bob.
Figure 5. Sample Online Shop
VI.
FUTURE WORK
A future enhancement for our blockchain-based identity
provider is the functional extension to utilize claims and
attestations for the purpose of authorization in alignment with
the OAuth 2.0 protocol. A service provider could add an
attestation of a purchased service to the digital identity of a
customer. Based on the attested claim, the service provider
can grant access to the purchased offering upon return of
the customer to the online service. An additional research
area is related to the security of the public unpermissioned
blockchain, that is used as an identity provider. Remain the
security assumptions for a general purpose blockchain valid in
case of a dedicated blockchain for identity management.
VII.
CONCLUSION
Blockchain technology enables the creation of a decentral-
ized identity provider without a trusted third party. We pre-
sented the design and implementation of a novel blockchain-
based identity provider that offers digital identities contain-
ing veriﬁable claims. The blockchain-based identity provider
conforms to the OpenID Connect protocol in order to in-
tegrate seamlessly in existing authentication processes. The
conjunction of the conventional OpenID Connect protocol with
the novel blockchain-based identity provider model enables
overarching usage of these technologies. Finally, we described
a sample authentication workﬂow to show practical feasibility.
REFERENCES
[1]
S. Nakamoto. Bitcoin: A peer-to-peer electronic cash system. [Online].
Available: https://bitcoin.org/bitcoin.pdf [retrieved: 2018-07-18] (2008)
[2]
G.
Wood.
Ethereum:
A
secure
decentralised
generalised
transaction
ledger.
[Online].
Available:
https://pdfs.semanticscholar.org/ac15/ea808ef3b17ad754f91d3a00fedc8f
96b929.pdf [retrieved: 2018-07-18]
[3]
N.
Szabo.
Smart
contracts:
Building
blocks
for
digital
markets.
[Online].
Available:
http://www.fon.hum.uva.nl/rob/Courses/InformationInSpeech/CDROM/
Literature/LOTwinterschool2006/szabo.best.vwh.net/smart contracts 2.
html [retrieved: 2018-07-18] (1996)
[4]
C. Meinel, T. Gayvoronskaya, and M. Schnjakin, “Blockchain: Hype
oder innovation,” Hasso-Plattner Institute, Prof.-Dr.-Helmert-Strae 2-3,
14482 Potsdam, Germany, 2018.
[5]
G. Williamson, D. Yip, I. Sharoni, and K. Spaulding, Identity Manage-
ment: A Primer.
MC Press Online, LP., 2009.
[6]
MIT. Information systems
&
technology
website.
the
knowledge
base.
idp
(identity
provider).
[Online].
Available:
http://kb.mit.edu/conﬂuence/display/glossary/IdP+(Identity+Provider)
[retrieved: 2018-07-18]
[7]
OpenID
Foundation.
Openid
connect.
[Online].
Available:
http://openid.net/connect/ [retrieved: 2018-07-18]
[8]
Blockchain
and
identity.
[Online].
Available:
https://github.com/peacekeeper/blockchain-identity [retrieved: 2018-07-
19] (2018)
[9]
C. Lundkvist, R. Heck, J. Torstensson, Z. Mitton, and M. Sena.
uport: A platform for self-sovereign identity. [Online]. Available:
http://blockchainlab.com/pdf/uPort whitepaper DRAFT20161020.pdf
[retrieved: 2018-07-19] (2016)
[10]
J. Benet. Ipfs. content addressed, versioned, p2p ﬁle system. [Online].
Available: https://arxiv.org/pdf/1407.3561.pdf [retrieved: 2018-07-19]
(2014)
[11]
D. Reed, J. Law, and D. Hardman. The technical foundations
of sovrin. a white paper from the sovrin foundation. [Online].
Available: https://www.evernym.com/wp-content/uploads/2017/07/The-
Technical-Foundations-of-Sovrin.pdf [retrieved: 2018-07-19] (2016)
[12]
D. Reed et al. Sovrin provisional trust framework. [Online]. Avail-
able: https://sovrin.org/wp-content/uploads/2018/03/Sovrin-Provisional-
Trust-Framework-2017-06-28.pdf [Accessed: 2018-07-19] (2017)
[13]
BitFury
Group.
Public
versus
private
blockchains.
part
1:
Permissioned
blockchains.
white
paper.
[Online].
Available:
https://bitfury.com/content/downloads/public-vs-private-pt1-1.pdf
[re-
trieved: 2018-07-19] (2015)
[14]
C. Allen. The path to self-sovereign identity. [Online]. Available:
http://www.lifewithalacrity.com/2016/04/the-path-to-self-soverereign-
identity.html/cointelegraph.com/news/ﬁrst-iteration-of-ethereum-
metropolis-hard-fork-to-appear-monday
[retrieved:
2018-07-18]
(2016)
[15]
A.
Tobin
and
D.
Reed.
The
inevitable
rise
of
self-
sovereign
identity.
a
white
paper
from
the
sovrin
foundation.
[Online]. Available: https://sovrin.org/wp-content/uploads/2017/06/The-
Inevitable-Rise-of-Self-Sovereign-Identity.pdf [retrieved: 2017-07-19]
(2017)
[16]
Internet Engineering Task Force. Request for comments: 6749.
the
oauth
2.0
authorization
framework.
[Online].
Available:
https://tools.ietf.org/html/rfc6749 [retrieved: 2017-07-19] (2012)
[17]
Pyethapp. [Online]. Available: https://github.com/ethereum/pyethapp
[retrieved: 2018-07-18]
[18]
Pyethereum.
[Online].
Available:
https://github.com/ethereum/pyethereum [retrieved: 2018-07-19]
[19]
Pyoidc.
[Online].
Available:
https://github.com/OpenIDC/pyoidc
[retrieved: 2018-07-16]
[20]
D. Reed et al. W3c community group draft report. decentralized
identiﬁers (dids) v0.9. data model and syntaxes for decentralized
identiﬁers (dids). [Online]. Available: https://w3c-ccg.github.io/did-
spec/ [retrieved: 2018-07-18] (2018)
[21]
M. Sporny and D. Longley. W3c community group draft report.
veriﬁable
claims
data
model
and
representations
1.0.
[Online].
Available: https://www.w3.org/2017/05/vc-data-model/CGFR/2017-05-
01/ [retrieved: 2018-06-15] (2018)
[22]
Internet Engineering Task Force. Request for comments: 7159. the
javascript object notation (json) data interchange format. [Online].
Available:
https://tools.ietf.org/html/rfc7159 [retrieved:
2018-07-20]
(2014)
[23]
International
Standardization
Organization.
Iso/iec
18004:2000.
information technology - automatic identiﬁcation and data capture
techniques - bar code symbology - qr code. [Online]. Available:
https://tools.ietf.org/html/rfc7159 [retrieved: 2018-07-20] (2000)
78
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-661-3
SECURWARE 2018 : The Twelfth International Conference on Emerging Security Information, Systems and Technologies

