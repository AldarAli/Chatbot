Applying Quality Requirements Framework to an IoT System 
Tsuyoshi Nakajima 
Department of Information Science and Engineering 
Shibaura Institute of Technology 
Tokyo, Japan 
e-mail: tsnaka@shibaura-it.ac.jp 
 
Abstract—Modern information and communication technology 
systems more focus on their quality requirements since they 
have been increasing their complexity. This paper shows how 
the quality requirements framework of the ISO/IEC 25030 can 
be applied to an Internet of things application, Elderly 
monitoring system. The results of this application indicate the 
usefulness of the framework. 
Keywords. Quality requirements; SQuaRE; IoT. 
I. 
 INTRODUCTION 
Information and Communication Technology (ICT) 
systems are increasingly used to perform a wide variety of 
organizational functions and personal activities. The quality 
of these products enables and impacts various business, 
regulatory and information technology stakeholders. High-
quality ICT systems are hence essential to provide value, and 
avoid potential negative consequences, for the stakeholders. 
To develop such high-quality ICT systems, it is important 
to define quality requirements, because finding the right 
balance of quality requirements, in addition to well-specified 
functional requirements, is a critical success factor to meet 
the stakeholders' objectives. 
Furthermore, the complexity of ICT systems has grown 
exponentially with the advent of modern digital technologies 
like Internet of Things (IoT). This has also led to focus on 
more and more quality requirements that are critical to 
modern ICT systems. 
ISO/IEC 25030 Quality requirements has been published 
in 2007, and its revision process has been going on to expand 
its scope from software to ICT systems [1]. The standard 
belongs to ISO/IEC 25000 series: Systems and software 
Quality Requirements and Evaluation (SQuaRE) has been 
developed as the successor of the other standards on product-
related quality, including ISO/IEC 9126. 
This paper shows how the quality requirements 
framework of the ISO/IEC 25030 revision works [1], in case 
that it is applied to an IoT system. Section II explains the 
quality requirements framework and section III describe the 
target IoT system, and then the framework is applied to the 
system in section IV.  
II. 
QUALITY REQUIREMENTS FRAMEWORK 
A. Architecture of the SQuaRE series 
The SQuaRE series consists of five main divisions and 
on extension division. The divisions within the SQuaRE 
series are: 
 
ISO/IEC 2500n - Quality Management Division. 
The standards that form this division define all 
common models, terms and definitions used by all 
other standards in the SQuaRE series. The division 
also provides requirements and guidance for the 
planning and management of a project. 
 
ISO/IEC 2501n - Quality Model Division. The 
standards that form this division provide quality 
models for system/software products, quality in use, 
data, and IT services. Practical guidance on the use 
of the quality model is also provided.  
 
ISO/IEC 2502n - Quality Measurement Division. 
The standards that form this division include a 
system/software 
product 
quality 
measurement 
reference model, definitions of quality measures, and 
practical guidance for their application.  This 
division presents internal measures of software 
quality, external measures of software quality, 
quality in use measures and data quality measures. 
Quality measure elements forming foundations for 
the quality measures are defined and presented. 
 
ISO/IEC 2503n - Quality Requirements Division. 
The standard that forms this division helps 
specifying quality requirements. These quality 
requirements can be used in the process of quality 
requirements elicitation for a system/software 
product to be developed, designing a process for 
achieving necessary quality, or as inputs for an 
evaluation process.  
 
ISO/IEC 2504n - Quality Evaluation Division. 
The standards that form this division provide 
requirements, recommendations and guidelines for 
system/software 
product 
evaluation, 
whether 
performed by independent evaluators, acquirers or 
developers. The support for documenting a measure 
as an Evaluation Module is also presented. 
B. Quality requirements and quality models/measures 
Quality In Use Requirements (QIURs) specify the 
required levels of quality from the stakeholders' point of 
view. These requirements are derived from the needs of 
various stakeholders. QIURs relate to the outcome when the 
product is used in a particular context of use, and QIURs can 
be used as the target for validation of the product.    
QIURs can be specified using quality in use model 
(ISO/IEC 25010 [2]) and measures (ISO/IEC 25022 [4]). 
Figure 1 describes characteristics and subcharacteristics of 
quality in use model. 
12
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-666-8
FASSI 2018 : The Fourth International Conference on Fundamentals and Advances in Software Systems Integration

Effectiveness
Efficiency
Satisfaction
Freedom from risk
Context 
coverage
Effectiveness
Efficiency
Usefulness
Trust
Pleasure
Comfort
Economic risk
mitigation
Health and safety 
risk mitigation
Environmental risk 
mitigation
Context 
completeness
Flexibility
 
Figure 1. Quality in use model [2] 
 
Product Quality Requirements (PQRs) specify levels of 
quality required from the viewpoint of the ICT product. Most 
of them are derived from stakeholder quality requirements 
including QIURs, which can be used as targets for 
verification and validation of the target ICT product.  
PQRs can be specified using product quality model 
(ISO/IEC 25010[2]) and measures (ISO/IEC 25023[5]). 
Figure 2 describes characteristics and subcharacteristics of 
product quality model. 
 
Functional 
suitability
Performance 
efficiency
Compatibility
Usability
Reliability
Security
Maintain-
ability
Portability
Functional
completeness
Functional 
correctness
Functional 
appropriateness
Adaptability
Installability
Replaceability
Time-behavior
Resource 
utilization
Capacity
Co-existence
Interoperability
Appropriateness 
recognisability
Learnability
Operability
User error 
protection
Use interface 
aesthetics
Accessibility
Maturity
Availability
Fault tolerance
Recoverability
Confidentiality
Integrity
Non-repudiation
Accountability
Authenticity
Modularity
Reusability
Analysability
Modifiability
Testability
 
Figure 2. Product quality model [2] 
 
The Data Quality Requirements (DQRs) specify levels of 
quality required for the data associated with the product. 
These include requirements derived from QIURs and PQRs 
of input and output products. DQRs can be used for 
verification and validation from the data side. 
 
Inherent
System dependent
Accuracy
Completeness
Consistency
Credibility
Currentness
Availability
Portability
Recoverability
Inherent & 
System dependent
Accessibility
Compliance
Confidentiality
Efficiency
Precision
Traceability
Understandability
 
Figure 3. Data quality model [3] 
 
DQRs can be specified using data quality model 
(ISO/IEC 25012[3]) and measures (ISO/IEC 25024[6]). 
Figure 3 describes 15 characteristics of data quality model, 
which are categorized by inherent and/or system dependent. 
C. Quality requiremnets framework 
The revision of ISO/IEC 25030[1] will provide a 
framework for quality requirements, which consists of 
concept of the quality requirements, and processes and 
methods to elicit, define, use and govern them. 
There are three important points: 
 
To elicit quality requirements, not only direct users 
of the ICT product but also indirect users (using 
results of the product) and other stakeholders, such 
as developers, regulatory body, and society at large 
should be taken into account. 
 
QIURs should be considered first because most of 
PQRs are derived from QIURs, and they should be 
deployed into PQRSs and DQRs of its sub-products 
(smaller ICT products, software, data, hardware and 
communication facilities) to meet them. 
 
Quality 
requirements 
should 
be 
defined 
quantitatively, in order not to be vague and 
unverifiable requirements that depend on subjective 
judgement for their interpretation. 
III. 
IOT SYSTEM AND TARGET SYSTEM 
A. Characteristics of IoT systems 
The IoT envisages a future in which digital and physical 
things or objects can be connected by means of suitable 
information and communication technologies, to enable a 
range of applications and services. The IoT’s characteristics 
include [7]:  
 
many relevant stakeholders involvement 
 
device and network heterogeneity and openness 
 
resource constrained 
 
spontaneous interaction 
 
increased security attack-surface 
These characteristics will make development of the diverse 
applications and services a very challenging task. 
B. Target system 
Internet
Target 
info
Parameters 
and rules for 
monitoring 
Monitor 
data  for 
Targets
Action 
log
Android
terminal
Arduino
Zigbee
(C)
Zigbee
(R)
Server
(Linux)
Zigbee
(R)
HDMI
Bluetooth
Fixed 
sensors
Wearable sensors
Camera
Screen
Mic/
Speaker
3G/WiFi
3G/WiFi
Smart 
device
(temperature, pulse, 
acceleration)
(Motion(room), 
sound(kitchen), 
Temperature(stove))
Target
Monitor
(target / family / 
nurse)
Service company
(operator/maintainer/
data input operator)
 
Figure 4. Elderly monitoring system [8] 
13
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-666-8
FASSI 2018 : The Fourth International Conference on Fundamentals and Advances in Software Systems Integration

The target IoT system, to which SQuaRE’s quality 
requirements framework is applied, is Elderly monitoring 
system. Figure 4 shows its system architecture. 
Figure 5 describes use cases of elderly monitoring system. 
 
1-1
Input Sensor 
configuration
1-2
Edit target info
1-3
Define abnormities
and their treatment
1-4
Define monitors and 
their authority 
2-1
Gather sensor data 
for the target
2-2
Monitor and control
3-1
Access monitor data
3-2
Take photos
3-3
Hold TV conference
5
Report results of 
analysis
4
Monitor and analyze 
system status
Service company
(data input operator)
Contractor 
(target / family)
Elderly living alone
(target)
Monitor
(target / family / 
nurse)
Target ID, Name, 
Birthday,
Medical history, 
Physical info, Place
Target ID,
Data info (type, range, 
accuracy, unit)
Sensor configuration
Definition of abnormities 
(data, range)->action
Monitors and their 
authority
Target ID,
Sensor data,
Status of components
Target info
Parameters 
and rules for 
monitoring 
Monitor data  
for Targets
Action 
log
Service company
(operator/maintainer)
 
Figure 5. Use cases of elderly monitoring system (written by the author) 
 
IV. 
APPLICATION OF THE FRAMEWORK 
A. Stakeholder identification and select important QIURs 
The quality requirements framework needs identification 
of stakeholders of the target system, including not only direct 
users but also indirect user and other stakeholders. 
Table 1 lists identified stakeholders for the elderly 
monitoring system, including: 
 
Direct user: contractor, elderly living alone, family, 
nurse, and service company’s operators 
 
Indirect user: service company’s managers 
 
Other stakeholder: Developer, Ambulance 
 
For all stakeholders, their goals to achieve through using 
the target system are extracted. The direct users must have 
use case of the system (Figure 5) in which they involved for 
achieving their goal. The indirect users and other 
stakeholders do not use the system directly, and the former 
uses the results of the system and the latter may get 
influenced from the system in an indirect way. Therefore, 
they do not have relevant use cases. 
Based on stakeholders’ goals and use cases, important 
quality in use characteristics/subcharacteristics (Table 1) 
should be selected with target outcomes and consequences. 
 
 
Table 1. QIURs selection based on stakeholders’ goal  
Stakeholder
Goal
Use
case
QIUR (with target outcomes and
consequences)
Customer satisfaction
NA
Usefulness
Trust
Prevention from incidents
NA
Freedom from risks: prevention from
* incidents by system faults or
malfunctions
* incidents by normal operation
* privacy leakage
* malfunction by malicious attach
Monitor all equipment, and take
actions if something wrong
with them.
4
Efficiency: system monitor and control
Effectiveness: preventive actions
before disfunction or malfunction
Maintain and update system
and equipment.
1-1
Efficiency: maintenance activities
Contractor
(direct user)
Inform the service company of
what he/she wants them to
do.
1-2
1-3
Efficiency: operation for input
Freedom from risks: prevention from
wrong input
Detect designated
abnormalities for the target,
and take actions.
2-2
Effectiveness: early treatment
Trust: correct results on good timing
Obtain his/her own current
body condition and behavioral
pattern.
5
Effectiveness: obtain info on current
body condition and behavioral pattern to
provide objective insights.
Confirm target's normality.
3-1
3-2
Effectiveness: see target's condition
anytime and anywhere
Be informed of target's serious
abnormalities.
2-2
Trust: correct results on good timing
Freedom from risks: prevention from
* overlook of serious abnormalities
* unnecessary notice on trivial
abnormalities
Confirm target's normality.
3-1
3-2
Effectiveness: remote nursing
Efficiency: early notice of patient's
abnormalities
Be informed of target's all
abnormalities.
2-2
Effectiveness: early treatment
Trust: correct results on good timing
Freedom from risks: prevention from
overlook of serious abnormalities
Create reports for asking
doctors to diagnose
abnormalities.
5
Efficiency: automatic reporting
Achieve QCD goal
NA
Efficiency: development activities
Update the system to
implement new functions
periodically
NA
Efficiency: maintenance activities
Ambulance
(Other
stakeholder)
Dispatch ambulance cars on
demand (by nurse's call)
NA
Freedom from risks: prevention from
unnecessary dispatches of ambulance
cars
Service
company's
manager
(indirect
user)
Elderly living
alone
(direct user)
Family
(direct user)
Nurse
(direct user)
Developer
(Other
stakeholder)
Service
company's
operator
(direct user)
 
* direct user: person who interacts with the product 
* indirect user: person who receives output from a system, but does not 
interact with the system, for example executive manager, service acquirer 
B. Drivation of PQRs and DQRs 
Figure 6 describes how quality requirements derive 
others in the system hierarchy. 
The primary source of quality requirements is the users, 
from whom first QIURs for the information system 
including the target entities are elicited and documented. 
Then, they evolve into PQRs and DQRs for the target 
entities. Other stakeholders, such as developers and 
regulatory bodies, also give some quality requirements on 
the target entities. Finally, other entities give some 
requirements as constraints to the target entities, including 
non-target ICT products, software and data which are 
connected to or used in the targets, and hardware and 
communication which are used in them. 
Table 2 shows how to derive PQRs and DQRs from 
QIURs which are partially selected from Table 1. For PQRs 
and DQRs, important product quality characteristics/ 
subcharacteristics (Figure 2) and data quality characteristics/ 
subcharacteristics (Figure 3) are selected to meet the 
corresponding QIURs. 
14
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-666-8
FASSI 2018 : The Fourth International Conference on Fundamentals and Advances in Software Systems Integration

Information system
Derived from
Give requirements as secondary input, such as guidelines
Give requirements as constraints (ICT requirements)
ICT product/Data
Users
Other 
stakeholders
(Regulator, 
etc.) 
ICT product/Data
Software/Data
Other 
stakeholders
(Developer, 
tester, etc.) 
QIURs
PQR/
DQR
PQR/
DQR
PQR/
DQR
User
Relevant 
environment
Non-target Hardware & 
Communication facility
Non-target 
Software/Data
Non-target ICT product/Data (subsystem)
Hardware & 
Communication facility
PQR/
DQR
Entity type
Type of Quality 
requirements
A
xQRs
xQRs can be defined 
for Type A entities
 
Figure 6. Derivation of quality requirements [1] 
Some PQRs for the target product may be deployed into 
subcomponents to meet them (denoted with ->). DQRs are 
identified for the data files or data base used in the system 
(Figure 6). 
Table 2. Derivation PQRs and DQRs from QIURs 
Stakeholder
Use
case
QIUR (with target
outcomes and
consequences)
PQR
DQR
Freedom from
risks:
 prevention from
* incidents by
system faults or
malfunctions
Maturity
->Availability for
    server
->Maturity for IoT
    devices
Recoverability of
all data
Time-behavior
->Throughput of
    server
Efficiency and
Accessibility on
Monitor data for
target
* incidents by
normal operation
Maturity: exhaustive
testing
Consistency and
Currentness on
Monitor data for
target
* privacy leakage Confidentiality on
server
Confidentiality on
Target info
* malfunction by
malicious attach
Integrity: IoT devices,
network
Traceability on
Parameters and rules
for monitoring
Efficiency:
operation for input
Operability and
Accesability on Web
user interface
Understandability
on Parameters and
rules for monitoring
Freedom from
risks: prevention
from wrong input
Learnability and
User error
protection on : Web
user interface
Accuracy,
Completeness and
Consistency on
Parameters and rules
for monitoring
2-2
Effectiveness:
early treatment
Trust: correct
results on good
timing
Functional
suitability and
Functional
completeness for
detecting abnormalities
5
Effectiveness:
obtain info on
current body
condition and
behavioral pattern to
provide objective
insights.
Functional
suitability: inclusion
of useful information
Understandability
of reports
NA
Contractor
(direct
user)
1-2
1-3
Service
company's
manager
(indirect
user)
Elderly living
alone
(direct
user)
 
V. 
SUMMARY AND FUTURE WORK 
Modern ICT systems like IoT systems should put more 
focus on their quality requirements. This paper provides the 
brief introduction of ISO/IEC 25000 (SQuaRE) series, 
which define quality models and measures, and how to 
define quality requirements and evaluate quality of the ICT 
products.  
And then, the IoT systems’ unique characteristics 
compared to the other information systems are mentioned, 
including many relevant stakeholders’ involvement, device 
and network level heterogeneity and openness, resource 
constrained, spontaneous interaction, and increased security 
attack-surface, which may make development of the diverse 
applications and services a very challenging task.  
To solve this problem, we apply the quality requirements 
framework of the ISO/IEC 25030 revision to an IoT system, 
Elderly monitoring system. The results of this application 
make us believe the usefulness of the framework. 
More application of the framework to a variety of IoT 
systems and much larger scale ones should be needed to 
clarify its limitations and problems. 
 
REFERENCES 
[1] ISO/IEC 25030 DIS, Systems and Software engineering — Quality 
requirements framework. 
[2] ISO/IEC 25010:2011, Systems and Software engineering — System 
and software quality models. 
[3] ISO/IEC 25012:2008, Systems and Software engineering — Data 
quality model. 
[4] ISO/IEC 25022:2016, Systems and Software engineering — 
Measurement of quality in use. 
[5] ISO/IEC 25023:2016, Systems and Software engineering — 
Measurement of system and software product quality. 
[6] ISO/IEC 25024:2015, Systems and Software engineering — 
Measurement of data quality. 
[7] M. A. Razzaque, M. Milojevic-Jevric, A. Palade, and S. Clarke, 
“Middleware for internet of things, a survey,” IEEE Internet of 
Things Journal, Vol. 3, No. 1, pp. 70-95, 2016.  
[8] S. Okazaki et al, “An Intelligent Space System and its 
Communication Method to Achieve the Low Energy Consumption,”  
IEEJ-C Vol. 136, No. 12, pp. 1804-1814, 2016 (in Japanese). 
 
15
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-666-8
FASSI 2018 : The Fourth International Conference on Fundamentals and Advances in Software Systems Integration

