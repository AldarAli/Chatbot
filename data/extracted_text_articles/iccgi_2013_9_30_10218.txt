Stability Analysis of Global FCFS and Presorting
Service Discipline
Willem M´elange, Joris Walraevens, Dieter Claeys, Bart Steyaert and Herwig Bruneel
Department of Telecommunications and Information Processing
Ghent University - UGent
E-mail: {wmelange,jw,dc,bs,hb}@telin.UGent.be
Abstract—In this paper, we consider a continuous-time queue-
ing system with two different types (1 and 2) of customers with
two dedicated servers (also named 1 and 2). This means server
1 (2) can only serve customers of type 1 (2). The goal of this
paper is to determine the stability condition for our system
with global ﬁrst-come-ﬁrst-serve (FCFS) and presorting service
discipline, i.e., all arriving customers are accommodated in one
single FCFS queue, regardless of their types, with an exception
of the ﬁrst N customers. For the ﬁrst N customers the FCFS rule
holds only within the types, i.e., customers of different types can
overtake each other in order to be served. The motivation for our
work comes from trafﬁc and is to be able to give advise about
the optimal length of ﬁlter lanes, i.e., lanes reserved for vehicles
making a speciﬁc turn at a junction.
Keywords—queueing, stability, blocking, global FCFS, presort-
ing.
I.
INTRODUCTION
The motivation for this work is an every day problem in
trafﬁc. Trafﬁc jams might occur for multiple reasons. One
reason are trafﬁc junctions. Consider, for instance, the follow-
ing situation: vehicles approach a junction with two possible
destinations (1 and 2) as seen in Fig. 1. In trafﬁc context, it
is often not physically feasible to provide two separate lanes
for each possible destination (as seen in Fig. 1(b)). If it would
be, vehicles for both directions can be kept apart completely.
The other extreme occurs much more frequently, namely, when
there is one lane on the main road (Fig. 1(a)). In the case
where there is only one lane on the main road, it is possible
that vehicles on that road heading for destination 1 may be
hindered or even blocked by vehicles heading for destination 2,
even when the subroad leading to destination 1 is free, simply
because cars that go to 2 are in front of them. In other words,
there is a ﬁrst-come-ﬁrst-serve (FCFS) order on the main road
regardless what destination they have. In the rest of this paper
we will call this service discipline global FCFS (gFCFS). In
queueing theory terms, a service discipline where there are 2
types of customers that are accommodated in a single queue
and who are served in a FCFS manner regardless of their type.
When we look at the case in Fig. 1(a), there is even a global
ﬁrst-in-ﬁrst-out (gFIFO) order on the main road. At any given
time, at most one server will be working. A possible way to
minimize the impact of this blocking phenomenon is the use of
ﬁlter lanes, i.e., lanes reserved for vehicles making a speciﬁc
turn at a junction (as seen in Fig. 1(c)). It is clear that in
this case, we cannot longer talk about gFCFS or gFIFO as
service discipline. In the rest of the paper we will call this new
service discipline, which can be seen as sort of relaxation of the
(a) One lane on the main road
(b) Two lanes on the main road
(c) One lane on the main road with ﬁlter lane
Fig. 1.
Light grey vehicles with destination 1 and dark grey vehicles with
destination 2 approaching a trafﬁc junction
gFCFS service discipline, gFCFS with presorting (P-gFCFS).
Again in queueing theory terms, a service discipline where
there are 2 types of customers that are accommodated in a
single queue and who are served in a FCFS manner regardless
of their type with an exception for the ﬁrst N customers. Thus,
the customers can only be served if they are one of the ﬁrst N
customers in the system and there are no customers of the same
type in front of them. Fig. 1(c) is an example of such a system
with a P-gFCFS service discipline. In this speciﬁc case, N is
equal to 4. If the vehicle is in the ﬁrst 4 vehicles on the main
road and there is no vehicle in front of this vehicle with the
same direction, the vehicle will be able to drive without delay
caused by other vehicles to the destination that vehicle desires.
181
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

However, if there are 4 vehicles with another destination in
front of this vehicle, even when there are no vehicles in front
of this vehicle with the same destination, the vehicle is not
able to drive without delay caused by other vehicles to his
destination (as seen in Fig. 1(c)). We refer to [1], [2] for a
general overview and validation of modelling trafﬁc ﬂows with
queueing models.
Analogously, at a security checkpoint (e.g., at an interna-
tional airport or train station) people are usually body-searched
by someone of the same gender. As a result, when a group of
friends of the same gender arrive, the people of the opposite
gender behind them may have to wait until the whole group has
been checked, even when the other security person is available,
at least when it is not allowed to overtake at the security
checkpoint (which is often the case for security reasons). Here,
we can also have an relaxation of the gFCFS service discipline.
The security person can hand-pick a person from the waiting
line to come to the front of the line. We also presume that the
security person will only do this for one of the ﬁrst N persons
in the waiting line.
In [3] and [4], we already got some insight in the impact
of the blocking phenomenon caused by a gFCFS service
discipline on the performance of the involved systems (or a P-
gFCFS with parameter N equal to 2). As stated earlier, in this
paper, we want to relax the gFCFS rule and get some insight
in the impact of this relaxation. In other words, we want to
investigate the impact of the N-gFCFS service discipline on
the performance of the involved systems.
The structure of the rest of the paper is as follows: we
ﬁrst tackle in Section II the (more simple) problem where
the types in the arrival stream of customers are independent.
In this Section, ﬁrst the mathematical model is described in
Subsection II-A. Next we analyse the stability condition in
Subsection II-B. Then we tackle in Section III the (more
difﬁcult) problem where the types in the arrival stream of
customers are dependent. The same structure is used as in the
Section II where the types of customers in the arrival stream
are independent. The paper continuous with a discussion
about the results and some numerical examples in Section IV.
Finally, some conclusions are drawn and future research is
suggested in Section V.
II.
UNCORRELATED TYPES IN THE ARRIVALS
We start with the case of uncorrelated types in the arrivals.
This is for instance an adequate model for trafﬁc junctions, as
the destination of consecutive cars can largely be regarded as
independent.
A. Mathematical Model
We consider a continuous-time queueing model with inﬁ-
nite waiting room. There are two servers, where server 1 is
working at rate µ1 and server 2 at rate µ2 (exponential service
times). There are two types (classes) of customers. Each of the
two servers is dedicated to a given class of customers. In this
case, server 1 always serves customers of type 1 and server 2
always serves customers of type 2. The customers are served
as follows: if both types are present in the ﬁrst N customers
in the system, the ﬁrst customer of each type can be served
by its server. The customers not in the ﬁrst N customers are
0
1
N-1
N
σμ2  
(1-σ)μ1
(1-σ)μ1
(1-σ)μ1
(1-σ)μ1
σμ2  
σμ2  
σμ2  
(1)
(2)
(N-1)
(N)
Fig. 2.
(N + 1)-state Markov chain to determine the stability condition of
the system with P-gFCFS with uncorrelated types in the arrival stream
served in a global FCFS way, i.e., they are blocked not only
by customers of their own type in front of them, but also by
customers of different type. We will call this service discipline
global FCFS with presorting (P-gFCFS). For example, if the
ﬁrst i − 1 customers are of type 1 and the i-th customer is of
type 2, then this customer can be served by server 2 if i ≤ N.
However, if the ﬁrst N customers are of type 1 and the N +1-
th customer is of type 2, then this customer cannot be served
by server 2 even if the server is idle.
The customers enter the system according to a Poisson
arrival process with mean arrival rate λ. With probability σ, the
customer is of type 1 and with probability 1 − σ the customer
is of type 2.
B. Analysis of the Stability Condition
When looking at the stability condition, we can presume
that the system is constantly provided with new customers and
the system will therefore be ﬁlled with at least N customers
all the time. Note that we are only interested in the number
of customers of type 1 and 2 in the ﬁrst N customers of the
system. Thus, the exact queueing order of the types of the ﬁrst
N customers is of no importance. These observations lead to
the (N + 1)-state Markov chain in Fig. 2. The state m, m
customers of the ﬁrst N customers are of type 2 (and thus
N −m of type 1). The rate to go from state m to state m−1,
is σµ2; namely a rate µ2 to end the service in state m of the
customer with type 2 multiplied with the probability σ that the
new N-th customer of our system is of type 1. Similarly, the
rate to go from state m to state m + 1, is (1 − σ)µ1.
182
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

1
2
α
1-α
β
1-β
Fig. 3.
2-state Markov chain to determine the type of an arriving customer
Fig. 2 models the well-known birth-and-death process for
a M|M|1|N queue [5] and the probability to be in state m is
known to be given by
p(m) =

(1−σ)µ1
σµ2
m 
1 − (1−σ)µ1
σµ2

1 −

(1−σ)µ1
σµ2
N+1
.
(1)
Having obtained the p(m)’s, we can now move to the stability
condition. Therefore we postulate that the average amount of
work per unit time that enters the system (γ) is smaller than the
average amount of work the system can execute per unit time,
i.e., the average amount of work the system would execute
per unit time when it would be constantly provided with new
customers. Here, the system is able to execute 2 units of work
per unit of time when both servers are able to work (when
the system is in one of the states 1 to N − 1). The system is
able to execute 1 unit of work per unit of time when only one
server is able to work (when the system is in state 0 or N).
The stability condition is thus
γ < p(0) + 2
N−1
X
m=1
p(m) + p(N)
(2)
γ <

1 + (1−σ)µ1
σµ2
 
1 −

1−σ)µ1
σµ2
N
1 −

(1−σ)µ1
σµ2
N+1
.
(3)
where γ (the average amount of work that enters the system
per unit time) is given by
γ ≜ λ
 σ
µ1
+ 1 − σ
µ2

.
(4)
Equation (3) can then be written as
λ <

σ
µ1
N
−

1−σ
µ2
N

σ
µ1
N+1
−

1−σ
µ2
N+1 .
(5)
which says that on average, there are not more arrivals than
service completions.
III.
CORRELATED TYPES IN THE ARRIVALS
We now turn to the case that some correlation in the types
of consecutively arriving customers is present. This can, for
instance, be the case in the modelling of a security check
point, where partners of different sex (negative correlation)
may arrive more frequently, or groups of people, all of the
same sex (positive correlation).
A. Mathematical Model
The model is the same as in Section II-A except for the
arrival stream. Now the customers enter the system according
to a Poisson arrival process with mean arrival rate λ. The type
of the arriving customer is determined by a two-state Markov
chain (see Fig. 3). If the previous customer is of type 1, then
the customer is of type 1 with probability α and of type 2
with probability (1 − α). If the previous customer is of type
2, then the customer is of type 1 with probability (1 − β) and
of type 2 with probability β. Notice here already that we can
transform α and β, in two other parameters σ and K that have
a more intuitive meaning. The transformations from (α,β) to
(σ,K) are
σ =
1 − β
2 − α − β ,
(6)
K =
1
2 − α − β
(7)
and from (σ,K) to (α,β) are
α = 1 − 1 − σ
K
,
(8)
β = 1 − σ
K .
(9)
The intuitive meaning behind the parameter σ is the given
relative frequency distribution of the type of the customers.
The fraction of customers that are of type 1 (2) is σ (1 −
σ respectively). The parameter K on the other hand gives a
clear indication about the correlation. The parameter is directly
proportional to the mean number of customers of the same type
that arrive back-to-back. More speciﬁcally, we have
E [number of customers of type 1 arriving back-to-back]
=
1
1 − β = K
σ ,
(10)
E [number of customers of type 2 arriving back-to-back]
=
1
1 − α =
K
1 − σ ,
(11)
where E [· · · ] stands for the the expected value of what’s
between brackets. Notice here that when K equals 1, the types
of customers in the arrival stream are uncorrelated, and the
model transforms to that of Section II.
B. Analysis of the Stability Condition
We take the same approach as in Section II-B. The Markov
chain corresponding to Fig. 2 is more complicated in this case.
Now we do not only have to keep track of the number of type 1
and 2 customers in the ﬁrst N customers, but also of the type of
the “last” customer in this set of customers. These observations
lead to the 2N-state Markov chain in Fig. 4, where in state
(m, t), m customers of the N ﬁrst customers are of type 2
(and thus N − m of type 1) and the “last” customer is of type
t. Notice that we do not have states (0, 2) and (N, 1) since the
“last” customer cannot be of type 2 (1) if all N customers are
of type 1 (2).
The balance equations (see transitions through the dotted
lines (1b) to ((N − 1)b) in Fig. 4) are
µ2p(m, 1) = µ1p(m, 2),
(12)
183
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

0,1
1,2
1,1
N-1,2
N-1,1
N,2
2,2
2,1
αμ2
αμ2
αμ2
αμ2
(1-α)μ1
(1-β)μ1
(1-α)μ1
(1-α)μ1
(1-β)μ1
(1-α)μ1
(1-β)μ1
(1-α)μ1
(1-β)μ2
(1-β)μ2
(1-β)μ2
(1-β)μ2
(1-β)μ2
(1-α)μ2
(1-α)μ2
(1-α)μ2
βμ1
βμ1
βμ1
βμ1
(1a)
(1b)
(2a)
(2b)
((N-1)a)
((N-1)b)
(N)
Fig. 4.
2n-state Markov chain to determine the stability condition of the
system with P-gFCFS with correlated types in the arrival stream
where m = 1, · · · , N − 1 and (see transitions through the
dotted lines (2a) to ((N − 1)a) in Fig. 4)
(1 − β)µ2p(m, 2) + αµ2p(m, 1)
= (1 − α)µ1p(m − 1, 1) + βµ1p(m − 1, 2),
(13)
where m = 2, · · · , N − 1. Equations (12) and (13) can be
rewritten as
p(m, 1) = µ1
µ2
p(m, 2),
(14)
((1 − β)µ2 + αµ1)p(m, 2)
=

(1 − α)µ2
1
µ2
+ βµ1

p(m − 1, 2)
(15)
or even further as
p(m, 1) = µ1
µ2
p(m, 2),
(16)
p(m, 2) = (1 − α)µ2
1 + βµ1µ2
(1 − β)µ2
2 + αµ1µ2
p(m − 1, 2).
(17)
This yields for m = 1, · · · , N − 1
p(m, 1) = µ1
µ2
θm−1
1
p(1, 2)
(18)
p(m, 2) = θm−1
1
p(1, 2),
(19)
where
θ1 = (1 − α)µ2
1 + βµ1µ2
(1 − β)µ2
2 + αµ1µ2
.
(20)
The balance equation corresponding with transition (1a) reads
(1 − α)µ1p(0, 1) = (1 − β)µ2p(1, 2) + αµ2p(1, 1)
(21)
and using (12)
p(1, 2) =
(1 − α)µ1
(1 − β)µ2 + αµ1
p(0, 1).
(22)
Using (22) in (18) and (19), we ﬁnd
p(m, 1) = µ1
µ2
θm−1
1
(1 − α)µ1
(1 − β)µ2 + αµ1
p(0, 1),
(23)
p(m, 2) = θm−1
1
(1 − α)µ1
(1 − β)µ2 + αµ1
p(0, 1).
(24)
The last balance equation corresponding with transition (N)
leads to
p(N, 2) = (1 − α)µ2
1 + βµ1µ2
(1 − β)µ2
2
p(N − 1, 2),
(25)
where we used (12) to eliminate p(N−1, 1). The normalization
condition
N
X
m=0
(p(m, 1) + p(m, 2)) = 1,
(26)
where p(0, 2) = p(N, 1) = 0 by deﬁnition, ﬁnally yields
p(0, 1). Just as in Section II-B we can write the stability
condition as the inequality that the average amount of work
per unit time that enters the system (γ) is smaller than the
average amount of work the system can execute per unit time.
In this case, the stability condition is given by
γ < p(0, 1) + 2
N−1
X
m=1
(p(m, 1) + p(m, 2)) + p(N, 2)
(27)
γ < (1 + aθN−1
1
)(θ1 − 1) + 2b(θN−1
1
− 1)
(1 + aθN−1
1
)(θ1 − 1) + b(θN−1
1
− 1)
(28)
with
a = (1 − α)µ1
(1 − β)µ2
,
(29)
b =

(1 − α)µ1
(1 − β)µ2 + αµ1
 µ1
µ2
+ 1

.
(30)
To make the results more intuitive we use the transformations
from equations (8) and (9). Here, we also already see that not
184
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

K = 1, c = 1
1
1.1
1.2
1.3
1.4
1.5
1.6
1.7
1.8
1.9
2
γsup
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
σ
N = 2
N = 4
N = 8
N = 16
N = 32
Fig. 5.
γsup, least upper bound of the set of γ values where the system is
stable, versus parameter σ with K = 1 and c = 1
K = 1, c = 2
1
1.1
1.2
1.3
1.4
1.5
1.6
1.7
1.8
1.9
2
γsup
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
σ
N = 2
N = 4
N = 8
N = 16
N = 32
Fig. 6.
γsup, least upper bound of the set of γ values where the system is
stable, versus parameter σ with K = 1 and c = 2
the exact values of µ1 and µ2 are of importance but only the
ratio. The stability condition becomes
γ < (1 + aθN−1
1
)(θ1 − 1) + 2b(θN−1
1
− 1)
(1 + aθN−1
1
)(θ1 − 1) + b(θN−1
1
− 1)
(31)
with
c = µ1
µ2
,
(32)
θ1 = c K + (1 − σ)c − σ
cK − (1 − σ)c + σ ,
(33)
a = c(1 − σ)
σ
,
(34)
b =

(1 − σ)
cK − (1 − σ)c + σ

(c + 1) .
(35)
Notice that when θ1 = 1, we need to use l’Hˆopital’s rule
to determine the value of the right hand side of (31). Thus,
when θ1 = 1, the stability condition is given by
γ < 1 + aNθN−1
1
− (N − 1)(a − 2b)θN−1
1
1 + aNθN−1
1
− (N − 1)(a − b)θN−1
1
.
(36)
IV.
DISCUSSION OF THE RESULTS AND NUMERICAL
EXAMPLES
It is always interesting to look at the extreme situations.
The ﬁrst one is when N = 1. This means that we have a ﬁrst-
in-ﬁrst-out queue regardless of the types of customers. The
K = 10, c = 2
1
1.1
1.2
1.3
1.4
1.5
1.6
1.7
1.8
1.9
2
γsup
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
σ
N = 2
N = 4
N = 8
N = 16
N = 32
Fig. 7.
γsup, least upper bound of the set of γ values where the system is
stable, versus parameter σ with K = 10 and c = 2
σ = 0.4, c = 2
1
1.1
1.2
1.3
1.4
γsup
10
20
30
40
50
60
70
80
90
100
K
N = 2
N = 4
N = 8
N = 16
N = 32
Fig. 8.
γsup, least upper bound of the set of γ values where the system is
stable, versus parameter K with σ = 0.4 and c = 2
stability condition (31) becomes
γ < 1
(37)
This is what we would also intuitively expect. The amount of
work the system can execute per unit time is 1 (right-hand side
of equation (37)). In other words, at any given time only one
server is working. The second extreme situation is when N =
∞. In this case, seperate queues for each server are present.
We have to split up this situation in three cases. The ﬁrst case
is when θ1 = 1, rewritten as
σ
µ1 = 1−σ
µ2
(independent of K)
or the load is balanced between both servers. The stability
condition (31) becomes
γ < 2
(38)
This is, again, what we also would expect intuitively. The
amount of work the system can execute per unit time is 2
(right-hand side of equation (42)). In other words, at any given
time both servers are working provided the system is constantly
provided with new customers. Notice that this is only possible
when the load is balanced. The second case is when θ1 > 1,
rewritten as
σ
µ1 <
1−σ
µ2
or server 1 has a heavier load. The
stability condition (31) becomes
γ < aθ1 − a + 2b
aθ1 − a + b
(39)
or further simpliﬁed as
(1 − σ)λ < µ2.
(40)
185
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

K = 1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
load2
0
0.2
0.4
0.6
0.8
1
load1
N = 2
N = 4
N = 8
N = 16
N = 32
Fig. 9.
load2 versus load1 with uncorrelated types of customers in the
arrival stream (K = 1)
σ = 0.5, N = 4
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
load2
0
0.2
0.4
0.6
0.8
1
load1
K = 0.5
K = 1
K = 2
K = 5
K = 10
Fig. 10.
load2 versus load1 with N = 4 and σ = 0.4
A similar result can be found in the third case. This is when
θ1 < 1, rewritten as
σ
µ1 > 1−σ
µ2
or server 2 has a heavier load.
The stability condition (31) becomes
γ < 1 − θ1 + 2b
1 − θ1 − b
(41)
or further simpliﬁed as
σλ < µ1.
(42)
In both cases, our stability condition is governed by the queue
with the heavier load. This is what is expected, since when the
queue with the heaviest load is stable, automatically the other
queue with the lower load is also stable. Notice here already
that when the load is balanced we get the maximum total load
(θ1 = 1).
We now look at intermediate values of N. Figures 5, 6 and
7 show the inﬂuence of the relative frequency distribution. In
all three ﬁgures we have plotted γsup versus σ. Here, γsup is
the least upper bound or supremum of the set of γ values where
the system is stable and σ represents the relative frequency
distribution of the type of the customers. Fig. 5 shows the
case where we have a symmetric system (µ1 = µ2) and the
types of the customers in the arrival stream are uncorrelated
(K = 1). In this case, σ = φ and σ = 1−φ (0 < φ < 1) lead to
the same results. The key observation to understand the latter
is that for the operation of the system the exact types of the
N ﬁrst customers are irrelevant if both servers have the same
service rate µ. When the N ﬁrst customers are all of the same
type, the system only processes one customer anyway with the
same service rate µ, independent of the type of customer. In
fact, a system with σ = 1 − φ can be conceived as a system
with σ = φ whereby the names of the types 1 and 2 have
been “swapped”. Thus, there exists symmetry in the customer
types around the value σ = 1
2. The impact of P-gFCFS is the
largest when we reach the maximum for γsup at σ = 1
2. In
Fig. 6 and 7 this symmetry is broken since both customers no
longer introduce the same average amount of work that enters
the system. Fig. 6 shows the case where we have no longer a
symmetric system (µ1 = 2µ2) but the types of the customers
in the arrival stream are still uncorrelated. Here, we see that
the maximum is shifted. This maximum is now at
σmax =
µ1
µ1 + µ2
(43)
or rewritten
σmax
µ1
= 1 − σmax
µ2
(44)
which in words means that the maximum total load is reached
when both customers introduce the same average amount of
work that enters the system. In Fig. 7, the asymmetric case
(µ1 = 2µ2) where the types of the customers in the arrival
stream are correlated, is plotted. Here, we notice that the corre-
lation has indeed no inﬂuence on the σmax corresponding with
the maximum total load (in both ﬁgures 6 and 7, this maximum
is at σ = 2
3). But the correlation has an inﬂuence on the value
of the maximum. From ﬁgures 5-7 we see that impact of P-
gFCFS is most noticeable when the relative load distribution
is in balance. If the relative load distribution is totally out of
balance the impact of P-gFCFS becomes negligible, which is
also intuitively clear since we then approach a system with
almost only one type of customers and thus a single server
system.
Fig. 8 shows the inﬂuence of correlation. In this ﬁgure
we have plotted γsup versus parameter K, which gives an
indication about the correlation in the system as discussed
in Section III-A. Here, we see clearly that the throughput is
larger when the types of the customers alternate more in the
arrival stream. When K = 1
2 (when the types arrive constantly
alternating), we get the largest total load. Notice that this is
not the same value for all different N but the difference is
negligible. On the other hand when K = ∞, there only arrives
one type of customer and we get a single server system and the
limit is thus 1. Notice that correlation can have a devastating
impact on the total load of the system with P-gFCFS
Fig. 9 and 10 show the inﬂuence of the load of one type
of customer on the load of the other type of customer. In both
ﬁgures we have plotted load2 (= 1−σ
µ2 ) versus load1 (=
σ
µ1 ).
The load2 in both ﬁgures is the least upper bound of the set
of load2 values where the system is stable, for a given load1
value. In Fig. 9 we look at the case with uncorrelated types
of the customers in the arrival stream (K = 1). Here, we
see that for N = 2, load1 has a huge impact on load2. This
impact decreases when N becomes larger. In trafﬁc context is
186
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

this exactly what we wanted to become with the ﬁlter lanes.
We wanted to decrease the impact of the vehicles going to
destination 1 on vehicles with destination 2 and visa versa. In
Fig. 10, the types of the customers in the arrival stream are
correlated and we have a parameter N = 4 and σ = 0.4. In
this ﬁgure we look at the impact of correlation. We can clearly
see that in our system, correlation has a devastating impact. It
even undoes the impact that or parameter N has on the system.
V.
CONCLUSIONS AND FUTURE RESEARCH
In this paper, we have analysed the stability condition
of a continuous-time queueing model where two types of
customers, both to be served by their own dedicated server, are
accommodated in one common FCFS queue with an exception
for the ﬁrst N customers of the system. We have shown the
positive impact on the total maximum load of the relaxation
of this condition (the parameter N of our P-gFCFS service
discipline). We have also deduced that we can achieve the
largest maximum total load when the load is balanced between
both servers. It is also around this value, our parameter N has
the largest impact. When the loads are totally out of balance,
our parameter N has almost no impact at all. We have also
shown that if there is a lot of correlation between the types
of the customers in the arrival stream, this has an devastating
impact on our system and can even undo the positive impact
of the parameter N (ﬁlter lanes). Finally we have also shown
that in our system the load of one type of customer can have a
big impact on the maximum allowable load of the other type.
Here, the parameter N also helps to minimize the impact of
one type of customer on the other.
Our future research goal is to go beyond the stability
analysis of P-gFCFS. A ﬁrst interesting extension could be the
tail probabilities of the number of customers in the system (or
at least some approximation). And especially in trafﬁc context,
it would be interesting to be able to set the parameter N so
that only a certain percentage of the customers has to wait
longer than a certain period of time.
REFERENCES
[1]
T. Van Woensel and N. Vandaele, “Empirical validation of a queueing
approach to uninterrupted trafﬁc ﬂows,” 4OR, A Quarterly Journal of
Operations Research, vol. 4, pp. 59–72, 2006.
[2]
T. Van Woensel and N. Vandaele, “Modeling trafﬁc ﬂows with queueing
models: A review,” Asia-Paciﬁc Journal of Operational Research, vol. 24,
pp. 435–461, 2007.
[3]
W. M´elange, H. Bruneel, B. Steyaert, and J. Walraevens, “A two-class
continuous-time queueing model with dedicated servers and global fcfs
service discipline,” in Analytical and Stochastic Modeling Techniques and
Applications, vol. 6751 of Lecture Notes in Computer Science, pp. 14–27,
Springer Berlin / Heidelberg, 2011.
[4]
H. Bruneel, W. M´elange, B. Steyaert, D. Claeys, and J. Walraevens,
“A two-class discrete-time queueing model with two dedicated servers
and global fcfs service discipline,” European Journal of Operational
Research, vol. 223(1), pp. 123–132, 2012.
[5]
L. Kleinrock, Theory, Volume 1, Queueing Systems. Wiley-Interscience,
1975.
187
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

