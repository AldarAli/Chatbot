Efficient Privacy Preservation Protocol Using  
Self-certified Signature For VANETS 
Bidi Ying1,2, Dimitrios Makrakis1, Hussein T. Mouftah1 
Broadband Wireless & Internetworking Research Laboratory,  
School of Information Technology and Engineering, University of Ottawa, Ottawa, Canada1 
Zhejiang Gongshang University, Hangzhou, China2 
{byiung, dimitris, mouftah} @site.uottawa.ca 
Abstract—Privacy and security are two important issues in 
vehicular networks. Traditional authentication methodologies 
such as public/private keys & their corresponding certificates 
are not feasible to protect location privacy and security due to 
large computing overhead. In this paper, we propose an 
Efficient Privacy Preservation (EPP) protocol in vehicular ad-
hoc networks, which, uses smart card functionality to 
authenticate users and employs bilinear pairings method to 
generate the public and private key. The public key is derived 
from the signature of the user’s pseudonym identity and 
private key signed by a trust authority and roadside units, 
hence, users can verify signatures without their corresponding 
certificates. Performance analysis shows the proposed EPP 
protocol can authenticate vehicular users and data messages 
with low time complexity and preserve users’ privacy.  
Keywords-Vehicular networks, self-certified, privacy 
I. 
INTRODUCTION  
Vehicular ad-hoc network (VANET) is a promising 
technology expected to play an important role in road safety, 
traffic management, and information dissemination to drivers 
and passengers [1]. A VANET mainly consists of On-Board 
Units (OBUs) and Roadside Units (RSUs) [2]. OBUs are 
installed on vehicles while RSUs are deployed to act as base 
stations providing connectivity to properly equipped vehicles 
located in their area of coverage.   
Authentication is an important feature in a VANET as the 
source of the information should be verified to ensure the 
legitimacy of the data communicated [3-4]. Compare to 
wired network applications, VANET applications typically 
have more stringent authentication requirements. First of all, 
authentication should be done in short time in VANETs to 
ensure enough time for the drivers to take action. For e.g. a 
message update slower than once every 500 msec is probably 
too slow. Driver reaction time to stimuli like brake lights can 
be of the order of 0.7 Sec and higher [5]. Thus if updates 
come in slower than every 500msec, the driver may realize 
something is wrong before the safety system. This would 
make the driver think the safety system is not effective. 
Second, a certain degree of anonymity is typically required 
to ensure privacy of drivers, and the authentication model 
must ensure that this anonymity is maintained. For example, 
a rouge user could target and succeed to collect messages 
generated by other vehicular users and obtain sensitive 
information such as the driver’s name, license plate, speed, 
location of vehicle, route of travel without successful 
security and privacy guarantee mechanisms in place. Third, 
VANETs are highly mobile and the mobility should be 
considered when designing the authentication protocol for 
possible network partitioning. For instance, if two cars drive 
in opposite directions with 90 Km/h each, and if we assume 
a theoretical wireless transmission range of 300meters, 
communication is only possible for 12 seconds. 
Most of the existing security proposals for secure 
VANETs are based on the use of an asymmetric algorithm [1, 
3-4]. For example, an algorithm using public/private keys 
and 
their 
corresponding 
anonymous 
certificates 
to 
authenticate messages requires larger storage of a huge 
number of keys and larger computing overhead. A short-time 
signature using bilinear pairings was proposed in [6] to use 
in the electronic cash system, which allows a user to get a 
signature without giving the signer any information about the 
actual message or the resulting signature. However, this 
short-time signature is impractical for vehicular networks 
due to high mobility. Girault [7] first introduced self-
certified public key, where the private key of each user is 
only known to the user himself, while the corresponding 
public key is derived from the signature of the user’s identity 
and private key. This self-certified method can implicitly 
validate the user’s public keys, and cannot need extra 
corresponding certificates. Hence, it can reduce storage 
space. Shuo [8] proposed a further research about Self-
Certified Signature (SCS) where users can choose their 
private keys and the actual public key consists of the public 
key of a Trust Authority (TA) and the partial public key 
chooses by the user, along with the identity of the user 
explicitly. However, when sending the signed message 
together with the public key
YTA
, its partial public key 
YID
 
and its identify ID, an attacker still can link its ID to the user 
by monitoring messages. Thus, it can reveal private 
information regarding the activities of the user. Besides, real-
time data from users is to be accessed directly by an external 
party (eg. attacker), which will leak sensitive information to 
the external party.  
      In order to solve above problems, we introduce an 
efficient privacy preservation protocol, which is based on 
bilinear pairings. EPP scheme uses smart card to authenticate 
users and RSUs before allowing the user to access data; and 
employs bilinear pairings to generate the partial private key. 
The actual private key including two partial private keys is 
used to sign a data message, and the corresponding public 
key derived from the user’s pseudo ID/ partial public key and 
301
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

the TA’s public key is used to verify the signature. This 
strategy helps to avoid some active attacks such as forgery 
attack and guess attack, as will be shown in the security 
analysis section. Compared to the SCS scheme, the time 
complexity of EPP scheme remains lower, as will be shown 
in the time complexity analysis section.  
The remainder of the paper is organized as follows. 
Section II presents background. In Section III, the EPP 
scheme is described in detail. Section IV provides 
performance analysis. In Section V, the related work is 
surveyed. Finally, Section VI concludes the paper. 
II. 
BACKGROUND 
A. Definition of Bilinear Pairings 
Bilinear pairing is an important cryptographic primitive 
and has recently been applied in many positive applications 
in cryptography [9]. 
Let 
1
G and
2
G be two cyclic groups of the same prime 
order q. We write the group laws of 
1
G  and 
2
G  additively 
and multiplicatively, respectively. Let P be a generator 
of
G1
, assume that the discrete logarithm problems 
in
1
G and
2
G  are hard. An efficient admissible bilinear map 
e:
2
1
1
G
G
G


with the following properties: ①Bilinear: 
for 
all 
1
,
G
P P

and


Zq
a,b
, 
e P P ab
e aP bP
)
( ,
)
,
(

 
;②Non-degenerate: 
there 
exist 
1
,
G
P P

 such that
1
)
( ,
e P P 
; ③Computable: there is an 
efficient algorithm to compute 
)
( ,
e P P
 for any
1
,
G
P P

. 
We review related underlying mathematics problems [9] 
in 
1
G , which will server as the basis for our proposed EPP 
scheme. 
① Bilinear Diffie-Hellman (BDH) parameter generator: 
a randomized algorithm IG is a BDH parameter generator if 
IG takes a security parameter k>0, runs in time polynomial 
in k, and outputs the description of two groups 
1
G and
2
G of 
the same large prime order q and the description of an 
admissible pairing e: 
2
1
1
G
G
G


  
②Discrete Logarithm (DL) Problem: Given 
1
,
Q
P P

, 
for unknown 
*
n Zq
, compute 
P  nP

. 
③Computational 
Diffie-Hellman 
(CDH) 
Problem: 
Given 
1
,
,
G
P aP bP

, for unknown 
*
,
Zq
a b

, compute 
abP G1
. 
④Decisional Diffie-Hellman (DDH) Problem: Given 
1
,
,
,
G
P aP bP cP

, for unknown 
*
,
,
Zq
a b c

, decide 
whether c=ab mod q. It is know that DDH problem in 
1
G  is 
easy and can be solved in polynomial time according to 
c
ab
e P P
e P P
( , )
( , )

[9]. 
⑤ Gap Diffie-Hellman (GDH) Problem: If DDH 
problem in 
1
G  is easy and CDH problem in 
1
G is hard, call 
1
G is GDH.  
B. Self-certified Signature by Bilinear Pairings 
Shuo [8] proposed the SCS scheme using bilinear 
pairings, which includes KeyGen, Extract, Sign, and Verify. 
①KeyGen: It takes a security parameter k as input and 
returns system parameters. The system parameters include 
two cryptographic hash functions H and 
1
H . The TA 
chooses a master-key s and computes the corresponding 
public key 
YTA
. Each user chooses partial private 
key
xID
and computes the corresponding partial public key 
YID
. ②Extract: The TA generates the partial private key 
dID
 by input the system parameters, the master-key s, the 
partial public key 
YID
and an arbitrary 


{ 1,0 }
ID
, the 
infinite set of all binary strings. Then TA sends 
dID
securely 
to the user. The user can get the actual private key <
xID
, 
dID
> and the actual public key <
YTA
, ID, 
YID
>. ③Sign: An 
user signs any message M with its actual private key  <
xID
, 
dID
>. ④Verify: Any verifier can validate the signed M by 
checking the verification equation with respect to the actual 
public key <
YTA
, ID, 
YID
>. 
In the SCS method, the actual public key <
YTA
, ID, 
YID
> 
is verified implicitly through the subsequent use of the public 
key 
YTA
, hence, two users can directly use the partial public 
keys and the corresponding partial private keys to work. It 
can decrease much storage space and reduce authentication 
message time. However, when sending the signed message 
together with the public key
YTA
, its partial public key 
YID
 
and its identify ID, an attacker still can link its ID to the user 
by monitoring messages. Thus, it can reveal private 
information regarding the activities of the user.  
III. 
EFFICIENT PRIVACY PRESERVATION PROTOCOL 
USING SELF-CERTIFIED SIGNATURES 
A. System Formulation 
Fig.1 illustrates the network architecture, which consists 
of three entities: the top Trusted Authority (TA), the RSUs 
located at the road side, and the OBUs located on the 
vehicles. The TA is responsible for the registration of RSUs 
and OBUs and is assumed that is having sufficient 
computation and storage capabilities. RSUs are assumed to 
connect with the TA by wire or wireless links. Wireless 
access between vehicles as well as vehicles and RSUs is 
conducted through networks complying with the IEEE 
802.11p standard [5]. 
Made assumptions are the following.  
1) TA is fully trusted by all parties in the system, and is not 
possible for an adversary to compromise it. 
2) RSUs are semi-trusted entity. The TA can inspect all 
RSUs at the high level. Once an RSU is compromised in 
one time slot, the TA can detect and take action to 
recover it in the next time slot [11]. 
302
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

TA
OBU
RSU
RSU
IEEE 
802.11p
 
Figure 1. System model 
B. EPP scheme 
We assume that RSUs and OBUs are not trust. Hence, 
before entering into the VANET, RSUs and OBUs should 
be registered to the TA, and then OBUs obtain their actual 
public through the TA and RSUs. Therefore, the proposed 
EPP protocol consists of four parts shown in Fig. 2. 
Keygen 
phase
Data transmission 
phase
Registration 
phase
Login phase
Aauthentication 
phase
 
Figure 2. EPP scheme 
 
①Keygen phase, which generates system parameters for 
the self-certified signatures; ②Registration phase, where 
RSUs & users register into TA and obtain their smart cards; 
③Login/authentication phase, where a vehicular user should 
be authenticated before entering into the vehicular network 
and obtain its actual public key from the TA and RSUs and 
its actual private key generated by the TA and RSUs; 
④Data transmission phase: where each vehicular user signs 
any messages by its actual private key, receivers verify the 
signature by using its actual public key.  
1) Keygen phase 
Let k be the security parameter and a randomized 
algorithm IG be a BDH parameter generator satisfying the 
GDH Problem. Let 
1
G and
2
G be two cyclic groups of the 
same prime order q. We write the group laws of 
1
G  and 
2
G  
additively and multiplicatively, respectively. Let P be a 
generator of
1
G , assume that the discrete logarithm problems 
in
1
G and
2
G  are hard. An efficient admissible bilinear map 
is  e:
2
1
1
G
G
G


.The TA first generates the bilinear 
parameters (q, 
1
G ,
2
G , e, P) by running the randomized 
algorithm IG. Then, the TA chooses two cryptographic hash 
functions:

 
Zq
H H
:{ 1,0 }
,
1
, and random selects 


Zq
s
 as 
its private key, and computes 
YTA  sP
 as its public key. 
The system parameters will be published, which include {q,  
1
G ,
2
G ,e, P, H,
1
H ,
YTA
 }.  
2) Registration phase 
When a RSU or vehicle submits its identity to the TA 
for registering itself, the TA will do the following function: 
① For a vehicle: 
iV  submits its identity (
IDVi
) and 
password (
i
PW ) to the TA. Upon receiving the registration 
request, TA will compute vehicle
iV
’ pseudonym 
)
(
i
i
V
V
h ID
PVID

, 
pseudo 
password 
)
(
i
i
  h PW
, 
s
i
i
    x
, 
)
||
(
s
V
i
x
h PVID
N
i

. Note that we use 
i and
i
N to hide the parameter 
sx . Then it sends a smart 
card with <
h()
,
iV
PVID ,
i
 , 
i ,
i
N  >to 
iV . Here, 
h()
is a 
Hash function; 
sx is a secret parameter generated securely 
by the TA;  is XOR operation.  
② For the RSU: 
iR  submits its identity (
IDRi
) and 
location (
iL ) to the TA.  After receiving the registration 
request, 
the 
TA 
computes
)
||
(
i
R
i
L
ID
h
i
 
 and 
b
R
i
i
x
h ID
L
h
i 

 
)
(
)
(
, then sends a smart card with 
<
h()
, 
)
(
h ID iR
,
i
 , 
)
(
iL
h
,
i
 > to 
iR . Note that we use 
i
 to hide the parameter
bx .  Here, 
h()
is a Hash function; 
bx is a secret parameter generated securely by the TA.  
3) Login/authentication phase 
Login and authentication phase is invoked when 
iV  
wants to enter into this network. The login and 
authentication phase is as follows. 
① Login phase:  
iV  inserts its smart card to a terminal and 
IDVi
 and 
i
PW . The smart card validates 
IDVi
 and 
i
PW  with the 
stored ones in it by the functions by the functions 
i
i
V
V
PVID
ID
h
?
)
(
 
 and 
i
h PWi

?
)
(
 
, and then computes 




)
(
i
i
s
h PW
x

and verifies
i
s
V
N
x
h h ID
i
?
)
) ||
( (
 
. If it is 
not true, the smart card terminates the process and send 
rejection message to
iV .  
iR inserts its smart card to a terminal and 
IDRi
 and 
iL . 
The smart card validates 
iR
ID  and 
iL  with the stored ones 
in it by the function
)
(
)
(
?
i
i
h L
h L
 
and 
)
(
)
(
?
i
i
R
R
h ID
h ID
 
. If 
it is not true, the smart card terminates the process and send 
303
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

rejection message to
iR . Finally, 
iR can obtain 
*
bx  by 
computing 
)
(
)
(
*
iR
i
i
b
h ID
h L
x

  
.  
② Authentication phase 
Authentication phase is invoked when 
iV  wants to enter 
into this network. The authentication phase is shown as 
Fig.3. The details are as follows. 
Vehicle 
iV
RSU 
iR
TA




 :


ID
V
V
i
i
Y
PVID
CV T
DV
i
i
,
,
,
,
)
||
(
)
||
(



s
V
V
i
i
x
h T
PVID
h
DV
i
i

)
||
||
(
Vi
i
i
i
T
h N
CV




i
i
i
V
R
V
i
i
PVID
T
DR CR T
,
,
,
,
. 

:
)
||
||
(
)
||
||
(
*
i
i
V
R
b
i
i
i
i
T
T
h x
CV
h DV
DR



)
||
||
) ||
||
||
(
(
*
i
i
V
R
b
i
i
i
i
T
T
x
CV
DV
h h
CR


 

Ri
i
i
, ,T

 :
)
||
||
||
(
i
i
i
V
R
i
R
i
PVID
T
L
h ID
s




))
||
(
(
i
R
i
L
h ID
h s
i





1,U2
U
 :
U  rP
1
ID
ID
rY
d
U

2 
 
Figure 3. Authentication phase 
 
Step 1: The smart card in 
iV  picks a random 


q
ID
Z
x
as its 
partial private key and sets
x P
Y
ID  ID
, then will perform 
·Compute 
iV ’ dynamic login identity  
)
||
(
)
||
(



s
V
V
i
i
x
h T
PVID
h
DV
i
i

 
·Compute 
)
||
||
(
iV
i
i
i
T
h N
CV


 
·Send 


ID
V
V
i
i
Y
PVID
CV T
DV
i
i
,
,
,
,
 to the RUS 
iR , 
where 
TVi
 is the current timestamp when sending the 
message. 
Step 2: After receiving the login message, 
iR  will perform 
as follows: 
·Verify 
T
T
T
iV
 

)
(
, if it dose not hold, abort the 
process. Otherwise, store 
iV
PVID and 
YID
, where T is the 
current timestamp when receiving the message, T

denotes 
the expected time interval for the transmission delay. 
·Compute 
iR ’ dynamic login identity 
            
)
||
||
(
)
||
||
(
*
i
i
V
R
b
i
i
i
i
T
T
h x
CV
h DV
DR



, where  
iR
T  is the current timestamp when sending the message.  
·Compute 
)
||
||
) ||
||
||
(
(
*
i
i
V
R
b
i
i
i
i
T
T
x
CV
DV
h h
CR


 
·Send 


i
i
i
V
R
V
i
i
PVID
T
DR CR T
,
,
,
,
 to the TA. 
Step 3: Upon receiving the message, the TA will perform as 
follows:  
·Verify 
T
T
T
iR
 

)
(
, if it dose not hold, abort the 
process. 
·Compute 
)
||
(
)
) ||
(
(
s
V
V
i
i
x
h T
PVID
h h PW
DV
i
i 
 
 
·Compute  
)
) ||
)
) || ( (
||
(
(
i
i
V
s
i
s
V
i
T
x
h PW
x
h h PVID
CV

 
 
·Compute  
)
||
||
(
))
||
|| (
||
(
i
i
i
V
R
b
i
i
R
i
i
T
T
h x
DR
L
h ID
CV
h DV

 


          ·Compute  
)
||
||
)))||
(
)
(
|| (
||
(
(
i
i
i
V
R
b
i
R
b
i
i
i
T
T
x
h L
h ID
x
CV
h h DV
CR






         ·Verify 
i
i
CR
CR
?
 
, if it is not true, reject the message. 
 
·Compute 
)
||
||
||
(
i
i
i
V
R
i
R
i
PVID
T
L
h ID
s


 
 
·Compute 
))
||
(
(
i
R
i
L
h ID
h s
i

 
 
        ·Send message 
 

iR
i
i
 , ,T
, where 
iR
T  is the  
current timestamp when sending the message.  
 
Step 4: Upon receiving the message, 
iR  will perform as 
follows:  
·Verify 
T
T
T
iR
 


)
(
, if it dose not hold, abort the 
process. 
·Compute 
)
||
||
||
(
i
i
i
V
R
i
R
i
PVID
T
L
h ID
s


 

 
·Compute 
)
(
i
i
h s
 


 
 
·Verify 
i
i


?
 
, if it dose not hold, abort the process.  
·Compute 



1
)
,
,
(
G
Y
PVID
H Y
H
ID
V
TA
ID
i
, and sets 
the partial private key 
ID
ID
s H
d
 *
. 
·Choose random integer 


Zq
r
 and compute 
U  rP
1
, 
ID
ID
rY
d
U

2 
 
·Send message 


U1,U2
 to 
iV . 
Step 5: After receiving the message, 
iV  will perform as 
follows:  
·Compute 
1
2
x U
U
d
ID
ID

 
 
·Verify 
)
),
||
||
(
(
, )
(
?
TA
ID
V
TA
ID
Y
Y
PVID
e H Y
P
e d
i


, if it 
dose not hold, abort the process. Otherwise, 
dID
 is the 
secret certificate of the TA’s public key
YTA
, the partial 
public key 
YID
 and the vehicle
iV ’ 
iV
PVID . Thus, the 
iV  
obtains his actual private key (

ID dID
x ,
). Hence, the actual 
public key (
ID
V
TA
Y
PVID
Y
i ,
,
) is used as the private key for 
signing. 
4) Data transmission phase 
304
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

Step 1: To sign a message 
j
M , 
iV  randomly chooses an 
integer 


Zq
a
and performs 
·Compute 
)
||
||
(
ID
V
TA
ID
Y
PVID
H Y
H
i

 
·Compute 
R  aYTA
 
·Compute 
)
||
||
||
1(
iV
ID
j
PVID
H
R
f  H M
 
·Compute 
ID
ID
ID
x H
fad

 
 
·Send the message  


, 1
,
,
, ,
T
M
Y
R PVID
j
ID
Vi

 
Step 2: To verify the signature (
R, 
), the verifier 
iV 1
will 
perform 
·Verify 
T
T
T
 

)
(
1
, if it dose not hold, abort the 
process. 
·Compute 
)
||
||
(
ID
V
TA
ID
Y
PVID
H Y
H
i

 
·Compute  
)
,
)
||
||
||
(
(
)
,
(
1
?
ID
TA
V
ID
j
H
Y
R
PVID
H
R
e H M
P
e
i



, if 
it dose not hold, abort the process. 
Hence, if two vehicles follow this protocol, the verifier 
will always accept the signature (
R, 
) and be convinced of 
the authenticity of the partial public key of
iV . 
IV. 
PERFORMANCE ANALYSES 
A. Security Analysis 
1) Resilience to stolen smart attack 
Assume that the smart card of a vehicle is stolen or lost, 
then the attacker can extract the secret information 
{
h()
,
iV
PVID ,
i
 , 
i ,
i
N } from it by side channel attacks 
and invasive attacks [12]. However, even though an 
adversary taking control of the smart can obtain 
i , it is 
practically infeasible for the adversary to know
sx  by 
inferring 
i  or 
i
N , because of the one-way property of
h()
. 
Therefore, the attacker cannot generate a valid login 
message
iV
D  (
)
||
(
)
||
(
s
V
V
i
i
x
h T
PVID
h
DV
i
i 


). 
For the RSU 
iR , the attacker can obtain secret 
information {
h()
, 
)
(
h ID iR
i
 , 
)
(
iL
h
,
i
 } from the smart 
card, however, he cannot forger a fake message 
iR
D   
(
)
||
||
(
))
||
|| (
||
(
*
i
i
i
V
R
b
i
R
i
i
i
T
T
h x
L
h ID
CV
h DV
DR

 
) 
without knowing 
bx . 
2) Resilience to guessing attack 
Guessing attack is a crucial concern to any password-
protected system [13]. Our scheme can resist the guessing 
attack, since the communication units within vehicles do not 
contain password and IDs. The attacker might try different 
passwords in its effort to construct
iV
D  , however, the 
probability of failing is very high, because dose not have 
knowledge of 
sx .  
3) Resilient to replay attack 
Assume that the attacker intercepts a valid login 
message


iV
i
i
DV CV T
,
,
 and tries to login to the RSUs by 
replaying the same message. The verification of this login 
message 
fails 
because 
the 
interval
T
T
T
iV
 
 
)
(
(
T
denotes the expected time 
interval for the transmission delay), where T is RSU’ s 
system time when receiving the replayed message.  
We also include a timestamp in each data packet in 
order to verify during the data transmission phase the 
message’s validity.  Thus, the replay attack is also prevented. 
4) Validity 
      In the data transmission phase, the receiver can compute 
, )
)
||
||
||
(
(
, )
(
1
P
x H
ad
PVID
H
R
e H M
P
e
ID
ID
ID
V
ID
j
i



 
))
||
||
(
,
)
||
||
||
(
(
)
,
)
||
||
||
(
(
)
) ,
)
||
||
||
(
((
, )
)
)
||
||
||
(
((
1
1
1
1
ID
V
TA
TA
V
ID
j
ID
TA
V
ID
j
ID
ID
V
ID
j
ID
ID
V
ID
j
Y
PVID
H Y
Y
R
PVID
H
R
H M
e
H
Y
R
PVID
H
R
H M
e
P H
x
PVID as
H
R
H M
e
P
H
x
PVID as
H
R
H M
e
i
i
i
i
i








Hence, the proposed EPP is validity. 
5) Resilient to forgery attack 
Theorem1. The proposed EPP scheme is unforgeable under 
the assumption of the DL problem. 
Proof. If the attacker wants to forge a signature (
R, 
), he 
has to make sure the following verification correct: 
))
||
||
(
,
)
||
||
||
(
(
, )
(
1
?
ID
V
TA
TA
V
ID
j
Y
PVID
H Y
PVID R Y
R H
e H M
P
e
i
i




 
If 
the 
attacker 
knows 
)
)
||
||
||
(
(
1
TA
V
ID
j
Y
R
PVID
H
R
M
H
i

be 
the 
discrete 
logarithm problem in P, given 
*
r  Zq
, then assume that 
  rHID
, where 
)
)
||
||
||
(
(
1
ID
V
ID
j
x
as
PVID
H
R
H M
r
i


. 
The 
attacker 
knows 
a 
and 
computes 
)
||
||
||
1(
Vi
ID
j
PVID
H
R
M
H
, however, he dose not know s 
and 
xID
 by computing 
x P
sP Y
Y
ID
ID
TA


,
because of the 
discrete logarithm problem in
1
G and
2
G . 
B. Time Complexity Analysis 
Assume that 
Tpmul
represents the time for one point 
multiplication computation in 
1
G ; 
Tpadd
represents the time 
for one point addition computation in 
1
G ; 
Tpair
denotes the 
time for one pairing computation, and 
Thash
denotes that the 
time for one hash function. Note that the time complexity 
for other computation operations, such as the multiplication 
in 
*
Zq
, are ignored, since they are much smaller than 
Tpmul
,
Tpadd
,
Tpair
and
Thash
 [10]. Table I shows the time 
complexity of the proposed EPP scheme and the SCS 
scheme [8]. Compared to the SCS scheme in signing a 
message, the proposed EPP scheme reduces the time of 
(
Tpair
+
Tpadd
). From the paper [10], we can see that 
Tpair
 is 
much larger than other operations.   
305
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

TABLE I TIME COMPLEXITY  
Scheme 
Sign Message 
Verify Message
SCS scheme 
Tpair
+3
Tpmul
 
+2
Tpadd
+2
Thash
 
2
Tpair
+2
pmul
T
+
Tpadd
+2
hash
T
EPP scheme 
3
Tpmul
 
+
Tpadd
+2
Thash
 
2
Tpair
+
pmul
T
+
Tpadd
+2
hash
T
V. 
RELATED WORK 
User authentication is very important feature in a 
VANET as the source of the information should be verified 
to ensure the legitimacy of the communicated data [3-5]. To 
address such issues in VANETs, Raya et al. [1] introduced a 
security protocol for VANETs by installing a large number 
of private keys and their corresponding anonymous 
certificates to each vehicle. Instead of taking any real identity 
information of the drivers, these anonymous certificates are 
generated by taking the pseudo IDs of the vehicles. Existing 
PKI-based security schemes are prohibitively inefficient due 
to their computational complexity and obviously cannot 
scale to large vehicle populations.  
A possible approach to reduce the overhead of the PKI-
based security schemes is to improve the verification 
efficiency.  We can do so by using the short group signatures 
method [14, 15], since it can quickly verify a large number 
of signatures simultaneously instead of sequentially by 
decreasing the number of some principal time-consuming 
operations. However, these methods assume that all verified 
signatures are authentic, and therefore, they need to be 
optimized for realistic applications, where bogus signatures 
commonly exist. 
A short-time signature using bilinear pairings was 
proposed in [6] to use in the electronic cash system, which 
allows a user to get a signature without giving the signer any 
information about the actual message or the resulting 
signature. Liu et al. [11] proposed an efficient conditional 
private preservation protocol which authenticates users & 
RSUs by using Wei or Tate pairings on the elliptic curves 
and authenticates data messages by the short-time 
anonymous keys within certificates. However, the computing 
overhead to authenticate users & RSUs is still much high 
(the execution time (computing time) of authenticating users 
& RSUs is about 34.8msec in paper [11]). Liu et al.  [16] 
proposed a secure protocol based on group signature and 
identity-based signature techniques by bilinear pairings. A 
signature based on identity is adopted in the RSUs to 
digitally sign each message by the RSUs, which reduces 
signature overhead.  
VI. 
CONCLUSIONS 
In this paper, we presented an efficient privacy 
preservation protocol by using smart card functionality and 
bilinear pairings method for secure communications in 
vehicular network. Since users sign messages by their actual 
private keys and verify these messages only with their actual 
public keys no corresponding certificates, the EPP protocol 
has been identified to be not only capable of providing the 
conditional privacy preservation that is critically demanded 
in the VANET applications, but also achieves high efficiency 
in terms of time complexity.  
ACKNOWLEDGMENT 
This work was supported by the Government of Ontario 
under the ORF-RE WISENSE project (3074600) and the 
Natural Sciences and Engineering Research Council 
(NSERC) of Canada under NSERC Grant 193961-2006.  
REFERENCES 
[1] 
M. Raya and J. P. Hubaux, “Securing vehicular ad hoc networks,” 
Journal of Computer Security, vol. 15, no. 1, pp. 39-68, 2007. 
[2] 
Y. Peng, Z. Abichar, and J. M. Chang, “Roadside-aided routing (RAR) 
in vehicular networks,” in Proc. IEEE ICC 2006, Istanbul, Turkey, 
vol. 8, pp. 3602-3607, June 2006. 
[3] 
K. Ren, W. Lou, R. H. Deng, and K. Kim, “A novel privacy 
preserving authentication and access control scheme in pervasive 
computing 
environments,” 
IEEE 
Transaction 
on 
Vehicular 
Technology, vol. 55, no. 4, pp.1373-1384, July 2006. 
[4] 
H. Moustafa, G. Boudron, and Y. Gourhand, “AAA in vehicular 
communication on highways with ad hoc networking support: a 
proposed architecture,” in Proc. International Workshop on Vehicular 
Ad Hoc Networks (VANET), Germany, 2005. 
[5] 
“Dedicated Short Range Communications (DSRC),” [Online]. 
Available: http://grouper.ieee.org/groups/scc32/dsrc/index.html. 
[6] 
D. Chaum, “Blind signatures for untraceable payments,” in Proc. 
Advances in Cryptology - Crypto’82, Santa Barbara, California, USA, 
pp. 199-203, Aug. 1982. 
[7] 
M. Girault, “Self-certified public keys,” in Proc. Advances in 
Cryptology- Eurocrypt’91, LNCS 1440, Springer-Verlag, Brighton, 
UK, pp. 491-497, 1991. 
[8] 
Z.H. Shao, “Self-certified signature scheme from parings,” The 
Journal of Systems and Software, 2007, 80 (2) : 388 - 395. 
[9] 
D. Boneh, B. Lynn, and H. Shacham, “Short signatures from the Weil 
paring,” in Proc. Advances in Cryptology - Asiacrypt’01, LNCS 2248, 
Springer-Verlag, Gold Coast, Australia, pp. 514-532, 2001. 
[10] “Crypto++ 
5.6.0 
Benchmarks,” 
http://www.cryptopp.com/benchmarks. html. 
[11] R. X. Liu, et al., “ECPP: efficient conditional privacy preservation 
protocol; for secure vehicular communications,” The 27th Conference 
on Computer Communications. IEEE, 2008, pp. 1229-1237. 
[12] K. Markantonakis, et al., “Attacking smart card systems: theory and 
practice,” Information Security Technical Report, Vol. 14, Issue 2, 
May 2009, pp. 46-56. 
[13] M.L. Das, “Two-factor user authentication in wirelesssensor 
networks,” IEEE Trans. Wireless Comm. 2009, 8, pp. 2450-2459. 
[14] D. Chaum and E. van Heyst, “Group signatures,” in Advances in 
Cryptology - EUROCRYPT 1991, LNCS 547, pp. 257-265, Springer-
Verlag, 1991. 
[15] D. Boneh, X. Boyen, and H. Shacham, “Short group signatures,” in 
Advances in Cryptology - CRYPTO 2004, LNCS 3152, pp. 41-55, 
Springer-Verlag, 2004. 
[16] X. D.Liu, et al., “GSIS: a secure and privacy-preserving protocol for 
vehicular communications,” IEEE Transactions on Vehicular 
Technology, 56(6), pp. 3442-3456, 2007. 
 
306
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

