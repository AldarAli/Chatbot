Phased Array Satellite Antenna Testing by an
Aircraft Borne Emulation Platform
Iwan Kruger
Dept. of Electrical and Electronic Engineering
Stellenbosch University
Stellenbosch, South Africa
iwankruger@gmail.com
Riaan Wolhuter
Dept. of Electrical and Electronic Engineering
Stellenbosch University
Stellenbosch, South Africa
wolhuter@sun.ac.za
Abstract—The KU Leuven- and Stellenbosch Universities are
jointly developing an electronically beam steerable phased an-
tenna array for satellite applications, including all the peripheral
ground- and space segment subsystems. This paper covers the
development of an Aircraft based Satellite Emulator to facilitate
convenient aircraft based testing of an antenna array, intended
for Low Earth Orbit satellite deployment. A ﬂight strategy is
developed to emulate such a satellite as best possible, with the
strategy subsequently implemented in software on in-ﬂight PC
hardware. The emulator acts as a full interface between the
aircraft avionics and satellite bus system, to enable generation of
the required antenna steering commands and to create a satellite
bus image to the payload. The emulator provides in-ﬂight systems
information to the satellite payload, as it would get from an actual
satellite bus during spaceﬂight. The emulator ensures indifference
to the payload, regardless of the fact that testing is aircraft based.
An embedded control algorithm for the steerable antenna has
also been developed and resides in the onboard computer of the
payload. Excellent initial test results have been obtained from the
aircraft ﬂight simulator and actual ﬂight telemetry data, proving
the viability and cost-effectiveness of the approach. The system
tests as reported on here, stopped just short of full equipment
ﬂight testing, as scheduled for in the near future. This is awaited
with keen interest, as all results up to the present have been
positive and in line with expectations.
Index Terms—Satellite Emulator; Phase Array Antenna; Beam
Steering; Orbital Calculations; Link Budgets;
I. INTRODUCTION
The feasibility of utilising electronically beam steerable
antenna arrays (SAA) in space, is currently jointly being
investigated by the ESAT-TELEMIC division of the Depart-
ment of Electrical Engineering, Katholieke Universiteit Leu-
ven, (KUL) Flanders, in partnership with the Department of
Electrical and Electronic Engineering, Stellenbosch University,
South Africa. Successful space implementation of such an
antenna array promises a number of signiﬁcant beneﬁts and
the development of advanced techniques therefor, has been
the subject of our joint research and development for some
time [1], [2]. Amongst others, it will reduce the cost of
ground stations by eliminating tracking antennas and reducing
RF chain complexity, while still retaining an acceptable link
budget. By introducing beam steered satellite antenna tracking
of ground stations during overﬂight, the link budget could be
improved and ground station complexity reduced, particularly
with regard to antenna design and the RF chain. These ground
nodes are typically used for environmental and agricultural
data acquisition and any improvement regarding the above
are always beneﬁcial. The Stellenbosch University member of
this partnership, is responsible for development of the satellite
platform hosting the SAA, ground station and accompanying
ground-space communications link. The payload would be
deployed on a next South African low earth orbit (LEO)
satellite. Development and construction of any form of space
borne system is normally expensive and associated with many
risks. It was, therefore, decided to introduce an interim testing
phase prior to actual space ﬂight, by using a light aircraft as
a pseudosatellite test platform. This will offer the obvious ad-
vantages of convenient and relatively cheap closed loop system
testing and debugging. This must, without doubt, enhance the
chances of eventual in-ﬂight success. The aircraft itself has
been ﬁtted out for experimental use and will house the SAA,
the entire satellite payload containing the On Board Computer
(OBC), communications link component chain, steerable an-
tenna control/status interface, power supplies, as well as an
Aircraft Satellite Emulator (ASE). In actual deployment, all
interaction with the rest of the satellite is via a system bus for
purposes of telecommand, telemetry and attitude/positioning
information. The ASE is obviously required to act as translator
and emulator between the payload and aircraft, the latter acting
as pseudo-satellite. As far as the payload is concerned, it
should behave as if connected to the actual satellite bus. The
ASE and developed emulation strategy can be adapted to
various LEO satellite payloads and thus provides a general
low cost test platform prior to space deployment. The purpose
of this paper is to report on the development of the emulation
platform and SAA control subsystems. Some very encouraging
results have been presented elsewhere [1], which have since
been conﬁrmed and expanded by continued pre-ﬂight testing.
The paper will describe the required ﬂight path mechanics,
the feasibility of an emulation strategy, a brief description of
the implementation and test results obtained from an aircraft
simulator and aircraft ﬂight telemetry data. The rest of the
paper is structured as follows: An overview of the relevant
orbital mechanics in Section II, is followed by the discussion
of the required emulation strategy in Section III. Calculation
of the aircraft ﬂight path parameters in order to satisfy the
emulation strategy, is covered in Section IV. These basic
92
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

operational requirements are then utilised for the systems
design as set out in Section V. Evaluation and test results were
obtained from simulations, a ﬂight simulator and actual ﬂight
telemetry data. These are presented in Section VI. Section VII
contains a summary of the work performed, results obtained
and a view of the way forward.
II. ORBITAL CALCULATIONS
Before discussing the emulation strategy as developed, it
might be useful to present a brief refresher on satellite orbital
mechanics, as these are fundamental to the system design. The
calculations presented in this section are based on a spherical
earth model, which is adequate for this particular type of
application [3]. The oblateness of the earth and the varying
topography on the surface, are treated as coordinates above or
below the spherical surface of the earth.
A. Angular velocity
The angular velocity of a satellite in orbit can be calculated
by:
ω
=
r
GME
r3
(s−1)
(1)
where r (m) is the circular orbit radius, the universal
gravitation constant G = 6.672 × 10−11 m3kg−1s−2, and the
earth mass ME = 5.974 × 1024 kg[4].
B. Coordinates
The locations of the satellite and ground stations are spec-
iﬁed in latitude, longitude and radius coordinates, and can
be expressed in celestial coordinates originating at the earth’s
centre, as per Figure 1.





λ
s
θ
φ

sx
s
y
x
sz
z
ξ
y
α
Fig. 1.
Celestial coordinate structure
1) Satellite coordinates: The satellite position is ﬁrst de-
scribed by the (xs, ys, zs) coordinate system (Figure 1). The
x-axis is directed to the intersection of the satellite orbital
path and the equatorial plane. The satellite coordinates in this
coordinate frame are:
xs
=
R cos(θs)
(2)
ys
=
R sin(θs) cos(i)
(3)
zs
=
R sin(θs) sin(i)
(4)
where i is the inclination angle and θs = θ0 + (ωsat)(t) the
orbit angle. The initial orbit angle can be calculated by:
θ0
=
arcsin
sin(φ0)
sin(i)

(5)
(6)
where φ0 is the initial latitude coordinate of the satellite and
ωsat the angular velocity.
A transformation is required to describe the (xs, ys, zs) co-
ordinates in a celestial coordinate system. The transformation
is presented in the following matrix notation:


xSat
ySat
zSat

 =


cos(ξ)
sin(ξ)
0
− sin(ξ)
cos(ξ)
0
0
0
1




xs
ys
zs


(7)
The ξ angle is obtained as ξ = α − λSat,0 where λSat,0 is the
initial longitude coordinate of the satellite. α can be calculated
as:
α
=
arccos
 cos(θ0)
cos(φ0)

(8)
Thus, the satellite coordinates are given by:
xSat
=
R cos(θs) cos(ξ) + R sin(θs) cos(i) sin(ξ) (9)
ySat
=
−R cos(θs) sin(ξ) +
=
R sin(θs) cos(i) cos(ξ)
(10)
zSat
=
R sin(θs) sin(i)
(11)
2) Ground station coordinates: From Figure 1, the ground
station coordinates transformed to the celestial coordinate
system, are deﬁned by:
xGS
=
RGS cos(φGS) cos(λGS)
(12)
yGS
=
RGS cos(φGS) sin(λGS)
(13)
zGS
=
RGS sin(φGS)
(14)
with λGS(t) = λGS,0 + (ωGS)(t), where λGS,0 is the initial
longitude coordinate of the ground station and ωGS the angular
velocity of the Earth. [5]
C. Distance to satellite
If the coordinates of the satellite and ground station are
known, the varying distance D between the ground station
and the satellite can be obtained quite simply by Pythagorean
geometry.
D =
p
(xSat − xGS)2 + (ySat − yGS)2 + (zSat − zGS)2
(15)
93
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

D. Geocentric angle
The geocentric angle (ψ) between the satellite nadir point
and a ground station placed at the centre of the earth, can be
determined by the cosine rule.
ψ
=
arccos
R2
GS + R2
sat − D2
2 · RGS · Rsat

(16)
E. Elevation angle
The elevation angle (E) is the angle between the horizon
and the satellite.
E =
 arcsin

Rsat sin(ψ)
D

− π
2

(17)
F. Azimuth angle
The azimuth angle is the angle measured Eastward from
North, to the nadir point at the ground station, as per angle
NPT in Figure 2.
ψ



sat
φ
ξ





GS
φ
Fig. 2.
Earth satellite geometry (reproduced from [6])
For the spherical triangle NPT of Figure 2:
sin(NPT)
sin(90◦ − φsat) = sin(NPT)
cos(φsat) = sin(PNT)
sin(ψ)
(18)
For the spherical triangle NBA the angle BAN and AON is
equal to 90◦, therefore
sin(BNA)
sin(L)
= sin(BAN)
sin(AON) = 1
(19)
Because angle BNA = PNT, equation 19 can be substituted
into equation 18 with the result:
sin(NPT)
=
sin(L) cos(φsat)
sin(ψ)
(20)
a
=
NPT = arcsin(sin(L) cos(φsat)
sin(ψ)
) (21)
where ψ is the geocentric angle, φsat the latitude coordinate
of the satellite and
L
=
|λGS − λsat|
(22)
the difference between the longitude coordinates of the ground
station and the satellite. To obtain the true azimuth angle (A),
we need to consider the position of the nadir,
(point T in Figure 2) relative to the ground station (point P in
Figure 2). The various cases can be summarised as follows:
A =







180◦ − a
if λGS (t) − λsat(t) > 0 and φGS (t) − φsat(t) < 0
a
if λGS (t) − λsat(t) > 0 and φGS (t) − φsat(t) > 0
180◦ + a
if λGS (t) − λsat(t) < 0 and φGS (t) − φsat(t) < 0
360◦ − a
if λGS (t) − λsat(t) < 0 and φGS (t) − φsat(t) > 0
(23)
G. Steering angles
This section will describe the basic strategy to calculate
the φ (phi) and θ (theta) angles. These angles will enable the
airborne object to track the speciﬁed ground station. The φ
angle is measured from the positive x-axis of the body frame
toward the positive y-axis, in the x-y plane. The θ angle is
measured from the positive z-axis of the body frame, towards
the position vector. Figure 3 deﬁnes the parameters used to
calculate these angles.

θ
body
X
body
Y
body
Z
φ
x
W
Wy
z
W
	
θ
body
X
body
Y
body
Z
φ
	
t
Fig. 3.
Deﬁning parameters used to calculate the θ and φ angles.
The coordinates (LLA), speciﬁed as latitude, longitude and
altitude, are known for both the airborne object and ground
station. The ﬁrst step is to convert these coordinates from the
LLA system to the ECEF frame, by making use of the World
Geodetic System 1984 standard. (WGS-84)[7]. The results can
be written as follows:
⃗RSat
=
 XSat
YSat
ZSat
T and
(24)
⃗RGS
=
 XGS
YGS
ZGS
T
(25)
The airborne object to ground station position vector is then
calculated as
⃗Rpos
=
⃗RGS − ⃗RSat
(26)
The position vector can now be converted from the ECEF
frame to the NED frame situated at the airborne object.
⃗B = K · ⃗Rpos
(27)
where K is the transformation matrix [8].
It is necessary to take the attitude of the object into account
by describing the object in terms of its pitch, roll and yaw
Euler angles. By using an Euler 123 rotation [9] to transform
the position vector from the NED frame to the body frame of
the object, it is possible to describe the position vector from the
94
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

object to the ground station in terms of the orientation of the
object. The θ and φ angles can be calculated after accounting
for the attitude of the object.
⃗W = A · ⃗B
(28)
The θ and φ angles are relative to the body frame of the
object. These angles direct the position vector to the target
or ground station and can be calculated by means of simple
trigonometry.
The theta θ angle is calculated as:
t
=
q
W 2x + W 2y
(29)
θ
=
π
2 − arctan
Wz
t

(30)
=
π
2 − arctan


Wz
q
W 2x + W 2y


(31)
The φ angle is calculated as:
φ
=
arctan
Wy
Wx

(32)
III. EMULATION STRATEGY
This section presents a few emulation strategies as consid-
ered and the reasons for selecting a particular one.
Two main emulation approaches were considered. The ﬁrst
approach was to emulate the satellite position relative to a
ground station and the second to emulate the ground station
position relative to a satellite. It is clear that for the ﬁrst
case the position could be described by elevation and azimuth
angles [10]. The second approach describes the position of a
ground station from the perspective of a satellite using the φ
and θ angles. These angles are, in both cases, time dependent
for LEO satellites. The function of the emulator is to calculate
a ﬂight route for an aircraft that would approximate these
orbital characteristics as closely as possible.
A. Flight Strategy
1) The ﬁrst emulation ﬂight strategy considered was to ﬂy
in ascending concentric circles around a ground station.
This strategy covers all the azimuth and φ angles for a
speciﬁc elevation or θ angle. By spiralling upwards it
is possible to cover many elevation and θ angles. The
implementation of this strategy is however arduous. It is
difﬁcult for an aircraft to ﬂy at a constant speed in an
accurate, circular, upwards path around a ground station.
However, the main disadvantage of this option is that the
speciﬁc time variant behaviour of practical elevation-
azimuth and φ-θ angles are not taken into account.
2) The second strategy entailed ﬂying past a ground station
in a straight path parallel to the earth surface at a
constant speed and altitude. It is easier for a pilot to
implement this strategy than the previous one and he
will be able to maintain a more stable attitude. Because
of this and with the aircraft ﬂying parallel to the surface,
the orientation of the antenna on the aircraft will match
the predicted orientation of the antenna on the satellite
more closely. The orientation of the antenna will enable
the steering angles of the antenna to approach that of
the actual satellite implementation, providing a more
realistic scenario. The orientation will also facilitate
the calculation of a more accurate linkbudget for a
ﬂight path. The linkbudget can then be emulated by
compensating for the LF S losses by attenuating the
transmitting or receiving signal. The further advantage
of this strategy is that the speciﬁc time variant behaviour
of the elevation-azimuth and φ-θ angles of a LEO
satellite are taken into account. This will also enable
the relationship between the antenna steering angles and
time to match that of the satellite application. For these
reasons the second strategy is clearly the better one and
was selected for actual implementation.
B. Transmission Link Strategy
With the aircraft based ﬂight test, the direct LOS distance
to a ground station is clearly much shorter than in the case of
a real satellite. In order to emulate the satellite link budget, the
free space loss (FSL) must be compensated for. The calculated
FSL is shown in Figure 20. The aircraft link must, therefore,
be attenuated to achieve the FSL of a satellite link. This could
be simply done by adjustment of the transmit power for both
the up- and down links.
Doppler shift is not a consideration for the aircraft ﬂight test
due to the low speed, but certainly affects the satellite link.
The amount of required compensation will be determined by
ﬁnal orbit and receiver front-end selectivity bandwidth. For
this project, Doppler compensation will probably be performed
at the ground station and therefore, no compensation has been
implemented on the emulator platform.
To minimise the affect of terrain scattering, the emulation
ﬂight tests are planned for a wide open semi-desert area.
Table I shows the losses caused by the distance between the
ground station and the aircraft at various maximum elevation
angles. Losses between the ground station and the satellite
is displayed in the last column of Table I. The amount of
attenuation can thus be calculated by subtracting the satellite
free space losses from those of the aircraft at a speciﬁc altitude
and maximum elevation angle.
IV. CALCULATION OF AIRCRAFT PARAMETERS
In order to implement the chosen strategy as discussed in
the previous section, it is necessary that the aircraft ﬂight
parameters be calculated in terms of the required trajectory.
This calculation was done by means of a suitable script, based
on the elevation-azimuth approach, as explained in Section III.
The script is fed with the maximum elevation angle as an
input parameter. The maximum elevation angle occurs when
the object is closest to the ground station. The script then
calculates the time values for a LEO satellite in orbit, as
it transits from minimum- to maximum elevation angle. An
iterative method is implemented to calculate the parameters
for the aircraft ﬂight path, emulating the satellite elevation
95
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Free space loss (dB)
Altitude (km)
0.05
0.345
0.64
0.935
1.23
1.525
1.82
2.115
2.41
2.705
3
500
0 deg elevation
128.09
136.48
139.16
140.81
142
142.93
143.7
144.35
144.92
145.42
145.87
168.26
10 deg elevation
89.231
106
111.36
114.65
117.02
118.88
120.41
121.71
122.84
123.84
124.73
164.63
20 deg elevation
83.344
100.12
105.49
108.78
111.16
113.02
114.56
115.86
116.99
117.99
118.89
161.58
30 deg elevation
80.046
96.822
102.19
105.48
107.86
109.73
111.26
112.57
113.7
114.7
115.6
159.22
40 deg elevation
77.864
94.641
100.01
103.3
105.68
107.55
109.08
110.39
111.52
112.53
113.42
157.45
50 deg elevation
76.34
93.117
98.484
101.78
104.16
106.03
107.56
108.87
110
111
111.9
156.13
60 deg elevation
75.275
92.052
97.419
100.71
103.09
104.96
106.5
107.8
108.94
109.94
110.84
155.17
70 deg elevation
74.566
91.343
96.71
100
102.38
104.25
105.79
107.09
108.23
109.23
110.13
154.52
80 deg elevation
74.158
90.935
96.303
99.595
101.98
103.84
105.38
106.69
107.82
108.82
109.72
154.15
90 deg elevation
74.025
90.802
96.17
99.462
101.84
103.71
105.25
106.55
107.69
108.69
109.59
154.03
TABLE I
FREE SPACE LOSS CALCULATIONS
time window. An elevation time window is calculated for each
combination of aircraft altitude and speed. It should be noted
that if the altitude changes, so does the minimum distance
to the ground station, which is the distance from the ground
station to the satellite nadir point, when the aircraft is closest
to the ground station.
0
20
40
60
80
100
120
140
160
180
0
10
20
30
40
50
60
70
Time (min)
Elevation (deg)
Satellite
Aircraft
Fig. 4.
Elevation angle versus time
Figure 4 compares the satellite and aircraft elevation angles
versus time, for a chosen ﬂight path. It is clear from Figure
4 that only a small interval of the visibility time period of
an aircraft is suitable to emulate the behaviour of the time
varying elevation angles of a satellite. For this reason the graph
of the aircraft ﬂight path is shifted to the left, to align the
maximum elevation angles. The optimisation of the elevation
time graph is achieved by calculating the area under each graph
for a speciﬁed time window and subtracting the results. The
smaller the result after the subtraction, the better the match
between the two graphs. The results of these calculations are
obtained from the script in the form of two ﬁgures. The dark
blue areas in Figure 5 specify the areas where the speed and
altitude of the aircraft best conform to the emulated elevation
and azimuth angles. Figure 6 shows the distance for different
altitudes from the aircraft’s nadir point to the ground station
at the point when the aircraft is closest to the ground station.
Figures 5 and 6 enable us to choose either the desired speed,
altitude or distance from the ground station and then use the
ﬁgures to calculate the other parameters. Therefore, using the
results from Figures 5 and 6, will allow us to specify the ﬁnal
ﬂight route as required.
Fig. 5.
Speed versus altitude of aircraft
It is thus possible to calculate aircraft ﬂight path parameters
of speed, altitude and distance from the ground station to
satisfy the elevation and azimuth angles as related to the
satellite’s orbital ﬂight. Figure 7 and Figure 8 illustrate this
conformity between the elevation and azimuth angles of the
satellite and the aircraft for the visibility time period of
the satellite. Although deviations will occur at low elevation
angles, a very useful time window for testing purposes can
still be obtained.
96
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 6.
Distance from ground station
0
2
4
6
8
10
0
10
20
30
40
50
60
Time (min)
Elevation (deg)
Satellite
Aircraft
Fig. 7.
Elevation angle versus time interval
V. SYSTEM DESIGN
The system design is comprised of two sections, the emula-
tor and the satellite payload modules. Only the components
indicated in the system diagram as per Figure 9, have a
direct inﬂuence on the system design. Components not directly
affecting the system, are not shown.
A. Satellite Payload Module
The following components on the payload are applicable to
the system design:
• Steerable antenna developed by KUL.
• The OBC, an SH4 processor with a 32-bit RISC archi-
tecture.
0
2
4
6
8
10
0
20
40
60
80
100
120
140
160
Time (min)
Azimuth (deg)
Satellite
Aircraft
Fig. 8.
Azimuth angle versus time interval
	









 
!
"


#


	

$

%!&


!


!

'


(

!



#

 

Fig. 9.
System diagram
• A QNX operating system is run on the OBC. This
UNIX based real-time operating system was provided by
SunSpace, with additional software components.
• The scheduling module comprises software that sched-
ules the communication times between the satellite and
various ground stations.
• An SAA control module electronically controls the steer-
able antenna array. The required control algorithm was
developed in the course of this project. The module uses
the φ and θ steering angles to direct the antenna beam,
according to the strategy to calculate these angles as
discussed earlier. The SAA module is housed in the OBC
of the payload.
• The CAN node, which allows devices to connect to the
CAN network.
• A virtual CAN node enables the SAA control software
to use the hardware of the exsisting CAN node on the
OBC to communicate over the CAN bus.
97
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

B. Emulator Module
Instead of connecting the payload to a satellite through
the CAN bus, the payload is connected to the emulator
module, which mimics the behaviour of an actual satellite. The
emulator module comprises an industrial PC with emulator
software, known as the ASE, which provides an interface
for the user to construct a ﬂight path for an airborne object
emulating the orbital characteristics of a satellite pass as
closely as possible. As the emulation strategy is to ﬂy the
payload with the emulator module on an aircraft, the emulator
module connects to the aircraft avionics equipment. Just as
the satellite would provide data to the payload in ﬂight, the
emulator will provide the necessary data.
The aircraft satellite emulator design is divided into three
sections, i.e., the aircraft avionics equipment interface, the
ASE - payload interface and the satellite emulator software
running on the industrial PC.
The ASE is connected to the aircraft avionics equipment
via a RS232 port and to the payload CAN bus, via a USB to
CAN module. The ASE software functions as implemented,
can be summarised as follows:
1) One of the main tasks of the satellite emulator software,
is to provide a GUI that will allow the user to construct
a ﬂight path for an aircraft to emulate a satellite, store
ﬂight data and display results. A GUI constructed ﬂight
path, with way points indicating the start- and end of
the path, is shown in Figure 10. A GUI will allow a
user to specify the ground station coordinates, maximum
elevation angle and aircraft speed. The application will
then calculate the speed, altitude and distance from
the ground station required from the aircraft ﬂight to
satisfy the elevation and azimuth angles. The elevation
and azimuth angles for the visibility time period as
calculated, are displayed to the user, assisting with ﬂight
path deﬁnition.
2) The ASE software also calculates all the line-of-sight
(LOS) link margins, elevation and azimuth angles of a
satellite with speciﬁc parameters, for a speciﬁed amount
of time.
3) The ASE software accepts the aircraft avionics inputs
and does the necessary in-ﬂight realtime translation to
provide emulated data to the payload OBC via CAN
bus. Flight data are recorded and used to calculate the
aircraft LOS link margins, elevation and azimuth angles.
The results of these calculations will be displayed to the
user (typically an aircraft engineer/passenger), enabling
him to to evaluate the ﬂight continuously.
The free space loss (FSL) parameter needs to be com-
pensated for to emulate the satellite linkbudget. Figure
20 shows the calculated FSL over ﬂight time. The
aircraft link must thus be attenuated to obtain the correct
satellite link FSL.
4) All the data received and sent by the ASE are logged by
a script written in C. The SAA steering angles calculated
by the control algorithm are also logged. This will enable
the evaluation of the system performance after a ﬂight.
The SAA control can be thus be evaluated by perusing
the logged data.
5) Close coordination was kept with the software devel-
opers of the OBC payload software, to ensure data/ﬁle
compatibility and realtime data packet synchronisation
between ASE and OBC/CAN bus.
	
	



	
	
	

		




	

	
	
	
	
	

	



Fig. 10.
Screenshot of the ﬂight route tab of the GUI
C. Functional analysis
An understanding of the system can be achieved by dis-
cussing the various hardware and software modules, as per
the system’s functional block diagram of Figure 11.
D. Concept of Execution
1) Use Cases: All the entities that interact with this system
and their corresponding use cases are shown in Figure 12.
The emulation scenario is set up in the ﬁrst use case. This is
done by the user creating a ﬂight route. A map with the ﬂight
route scenario is then displayed to the user. The second use
case demonstrates the peripheral devices of the emulator being
initialised by the user. These peripheral devices include the
interface of ASE with the aircraft avionics equipment and the
payload. In use case three data is received by the system from
the aircraft avionics equipment. The data received describes
the attitude and position of the aircraft. The system switches
the payload ”on” when the aircraft reaches the start of the
ﬂight route and ”off” when the aircraft reaches the end of
the ﬂight route. This is illustrated by use case four, which
simulates the situations as the satellite switches the payload
”on” when communication with a ground station should start
and ”off” when communication ends. In use case ﬁve, QNX
starts the execution of the antenna control software on board
the SH4. This will occur each time the payload is switched
on and the SH4 boots. In use case six the scheduling software
98
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

	






































 
 !











"



#
#
$
%
$
%
&
&
'
'
(
(
)
*
)
+
*
#,
+
##
#,
#$
##
#%
#$
#&
#%
#'
#&
#(
#)
#(
#*
#)
#+
#*
#+
#'
Fig. 11.
Functional block diagram of the system
provides the coordinates of the target ground station to the
system. The steering angles of the antenna are then calculated
and the corresponding commands sent to the steerable antenna.
2) Sequencing: The sequential interaction of the various
components deﬁned by the use cases are illustrated by the
sequence diagram of Figure 13. Note the following:
• The ASE continuously receives aircraft data from the
aircraft avionics equipment.
• The ASE switches the payload on once the aircraft is
at the start of the ﬂight path. By switching the payload
on, the steerable antenna will activate and QNX on the
SH4 will boot. QNX will then start the execution of
the scheduling and SAA control software. However, note
that when the aircraft reaches the end of its ﬂight path
the ASE will switch the payload off. This will power
down the steerable antenna, as well as QNX and the


	
















 
 
!
 


"


	

#$%
 	

&
'
			
('

Fig. 12.
System use case diagram
applications running on it.
E. Transmission Link
Subsection III-B describes the transmission link strategy
adopted. The main concepts of this strategy are that:
• FSL should be compensated for to emulate the transmis-
sion link.
• The FSL compensation is achieved by attenuation of the
received or transmitted signal.
• The attenuation will be applied at the ground station.
• For reasons mentioned in Section III-B, Doppler com-
pensation is not considered. Doppler compensation will,
however, be applied at the ground station when the system
is implemented on an actual satellite.
• Flight tests will be performed in wide-open areas to
minimise the effect of terrain scattering.
VI. EVALUATION
In order to verify the design and subsequent usability
of the system, some preliminary tests were performed to
evaluate the emulator system performance before an actual
ﬂight test. The overall system performance was evaluated in
four different ways, ﬁrst with an aircraft avionics equipment
emulator (AAEE), which was speciﬁcally developed for the
evaluation of this system. The emulator serves as a substitute
for an actual aircraft. Secondly, performance is evaluated with
an aircraft simulator. The aircraft simulator closely models the
light aircraft for which this system was developed. The aircraft
simulator has input interfaces, such as a joystick and pedals,
that contribute unknown factors such as pilot skill to the
system evaluation. The third preliminary test used the aircraft
simulator in conjunction with a prototype SAA to evaluate
the system performance. The ﬁnal ground based system test
performed last, used actual aircraft telemetry data. This data
99
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org


	
	

	

		

	


 	!	

"	!	
 

"
	
!
#"

$%&

!"	
		 
'	
	(


#"






)
"	"
*
	
"	


!"	


Fig. 13.
System sequence diagram
was captured on a ﬂight of the light aircraft for which this
system has been developed. The tests were performed as
follows:
1) During the course of the project, the AAEE software
was speciﬁcally developed as part of the research. The
software provides realistic aircraft avionics data with
the correct protocol to the system, thereby providing a
means to test the system without an actual ﬂight test.
The user can specify a chosen ﬂight path by specifying
the ﬂight start-and-end coordinates as well as aircraft
parameters such as velocity, altitude and attitude. The
AAEE software uses this information to provide aircraft
avionics data to simulate an aircraft ﬂight.
As a ﬁrst attempt, the AAEE was used to produce
realistic avionics ﬂight data, as for an envisaged test
ﬂight. This was run on a separate CPU and the data
was serially fed into the ASE in real time. The ASE
output, in reaction to the ﬂight path as conﬁgured and
simulated data as received, was fed onto the payload
CAN bus for processing by the OBC. The latter was
to produce the required steering commands for the
SAA. The required steering angles, and commensurate
commands, were calculated in advance using the orbital
calculations as discussed earlier. The entire process was
100
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

logged by means of suitable scripts and the output of
the payload to the SAA was captured on a separate PC.
2) As a second round of more stringent tests, approaching
practical ﬂight, a hardware based, standalone aircraft
ﬂight simulator was coupled to the ASE. The simulator
is used for training and automatic pilot development.
It is controlled by a joystick, pedals and other realistic
hard interfaces, thus contributing the unknown quantity
of pilot skill. Because the simulator closely models the
light aircraft on which this system will be ﬂown, the
simulation will react in much the same way as the actual
aircraft in ﬂight. The simulator thus presents an extra
dimension to the evaluation, without an actual ﬂight test.
Figure 14 shows a screen shot of the simulator GUI.
Fig. 14.
Screen shot of the aircraft simulator software GUI
The ASE software was used to construct a ﬂight route
with a maximum elevation angle of 60◦. An above
ground station altitude of 1.869 km is necessary for
an aircraft cruising speed of 120 km/h. As mentioned
in Section III, the ﬂight strategy would be to ﬂy at a
constant speed and altitude past a ground station, thereby
emulating a LEO satellite pass. The results of this test
are shown in Figures 15 to 20.
These ﬁgures present three sets of data. (For sake of
clarity, some smaller portions of the graphs are mag-
niﬁed) The ﬁrst two sets contain the predicted satellite
and aircraft data. These were calculated with the help of
calculations derived in Section II. The third set shows the
aircraft ﬂight data as generated by a simulated aircraft
ﬂight.
The attitude of the aircraft is described by Figure 15. The
ﬁgure indicates the difﬁculty experienced in this case, in
maintaining a constant attitude. It should be mentioned
that the simulator was not ﬂown on autopilot.
Figures 16 and 17 show the calculated elevation and
azimuth angles. As can be seen from these two ﬁgures,
the simulated ﬂight data closely resembles that of the
predicted aircraft ﬂight. The elevation and azimuth an-
gles are not that affected by the attitude, which is in line
with the theoretical ﬁndings as presented earlier.
The calculated θ and φ angles are shown in Figures 18
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-10
0
10
Time (min)
Roll (deg)
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-10
0
10
Time (min)
Pitch (deg)
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
170
180
190
Time (min)
Yaw (deg)
Fig. 15.
Measured aircraft simulator ﬂight test roll, pitch and yaw data
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
20
25
30
35
40
45
50
55
60
65
Time (min)
Elevation (deg)
1.6
1.65
1.7
40.8
41
41.2
41.4
41.6
Satellite
Aircraft
Aircraft Simulator
Fig. 16.
Calculated satellite-, predicted aircraft- and measured aircraft
simulator ﬂight test elevation data
and 19. A slight deviation is seen from the predicted
aircraft data, which is attributed to the varying attitude
of the aircraft. It is because of this expected deviation
that the ﬁrst approach mentioned in Section III was not
chosen. A better approach is to emulate the elevation-
azimuth angles more closely than the θ-φ angles, which
will vary in any case. The antenna control algorithm uses
these θ and φ angles to beam steer when the antenna
steering control algorithm compensates for this varying
attitude, as it should. The varying attitude should not
affect the link budget signiﬁcantly.
3) The following test was performed to evaluate the per-
formance of the developed system with a prototype
SAA, where the main focus was to see whether the two
systems communicated correctly with each other. The
101
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
20
40
60
80
100
120
140
160
180
Time (min)
Azimuth (deg)
1.2
1.4
1.6
1.8
25
30
35
40
Satellite
Aircraft
Aircraft Simulator
Fig. 17.
Calculated satellite-, predicted aircraft- and measured aircraft
simulator ﬂight test azimuth data
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
20
30
40
50
60
70
80
Time (min)
Theta angle (deg)
Satellite
Aircraft
Aircraft Simulator
1.2
1.4
1.6
1.8
44
46
48
50
52
Fig. 18.
Calculated satellite-, predicted aircraft- and measured aircraft
simulator ﬂight test θ angle data
tests were performed in conjunction with KUL who, as
mentioned earlier, developed the SAA.
The objective of the ﬁnal test was ﬁrst to conﬁrm that the
SAA control software on the payload can communicate
with the SAA, then to verify that the SAA control
software steers the SAA in the correct direction. To
conﬁrm the latter, the aircraft simulator was coupled
to the system, a ground station was selected and the
speciﬁed ﬂight route ﬂown.
A signal generator placed directly in front of the SAA
provided a constant signal source to the SAA. A re-
duction of the received signal occurs when the SAA
is steered. The SAA is steered according to the ASE
indication of the aircraft on the ﬂight route. Therefore,
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
20
40
60
80
100
120
140
160
180
Time (min)
Phi angle (deg)
Satellite
Aircraft
Aircraft Simulator
1.4
1.6
1.8
25
30
35
40
45
Fig. 19.
Calculated satellite-, predicted aircraft- and measured aircraft
simulator ﬂight test φ angle data
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
100
110
120
130
140
150
160
170
Time (min)
Free Space Loss (db)
1.4
1.6
1.8
2
106
108
110
112
Satellite
Aircraft
Aircraft Simulator
Fig. 20.
Calculated satellite-, predicted aircraft- and ﬂight simulator test FSL
data
if the aircraft is directly above the ground station, no
phase shift will be applied and the received signal will
be at its strongest.
Data captured from the SAA conﬁrmed that the SAA
was indeed steered correctly. The SAA control module
on the payload controlled the SAA as expected to enable
the SAA to phase shift the signal correctly in order to
direct the antenna beam to a speciﬁc ground station.
KUL reviewed the data captured from the SAA and
also concluded that the SAA was steered according to
the speciﬁed ﬂight path, conﬁrming that communication
between the payload and SAA was correct.
4) The ﬁnal system test once more increased the level
of realism, before an actual ﬂight test. The system
102
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

test utilised captured telemetry data from a ﬂight of
the light aircraft test vehicle. Actual telemetry data
introduces another unknown factor into the evaluation
process, in the form of wind disturbances and other
ﬂight perturbations. The data generated by the system
was captured and evaluated, as with the previous tests.
The test proceeded as follows:
A ﬂight path was ﬁrst constructed with the help of the
ASE software. The path past a ground station had a max-
imum elevation angle of 50◦, an altitude of 1.985 km
above the ground station and required a cruising speed
of 130 km/h. The ﬂight path was then ﬂown with a
light aircraft. The aircraft telemetry data was captured
in ﬂight and retrieved afterwards. Note however, that
only half of the ﬂight path constructed by the ASE, was
ﬂown. The reason for this is that the data for the second
half of the ﬂight path would be a mirror image of the
ﬁrst, which was therefore, considered adequate for these
initial system tests. The light aircraft used for the ﬂight,
is depicted in Figure 21.
Fig. 21.
The Jora ﬂight test aircraft
The following four ﬁgures describe the telemetry data
captured from the ﬂight. The ﬁrst set of data illustrated
in Figure 22 shows the aircraft ﬂight route as the aircraft
ﬂew in a North-Westerly direction past the ground
station. Figure 23 shows the aircraft altitude above the
ground station, Figure 24 the aircraft airspeed and Figure
25 the attitude. Note that Figure 24 illustrates the speed
of the aircraft through the air and not the speed relative
to the ground. Factors such as the wind needs to be taken
into account when calculating the aircraft ground speed.
As depicted by the ﬁgures regarding the aircraft simu-
lator based system test, these ﬁgures illustrate the difﬁ-
culty experienced by the pilot in maintaining a constant
heading, altitude, speed and attitude. These deviations
can also partly be attributed to external factors such as
wind disturbances. However, note that the attitude with
these wind disturbances are more or less the same as
the attitude obtained earlier with the aircraft simulator
in Figure 15. These disturbances could possibly be
minimised by an experienced pilot ﬂying in a relatively
calm day.
After the telemetry data was retrieved, the ﬂight data was
fed to the ground based system test setup. This setup is
18.805
18.81
18.815
18.82
18.825
18.83
18.835
18.84
18.845
18.85
-34.015
-34.01
-34.005
-34
-33.995
-33.99
-33.985
-33.98
-33.975
-33.97
Longitude (deg)
Latitude (deg)
Aircraft flight path
Ground station
Fig. 22.
Aircraft ﬂight path past ground station
0
0.5
1
1.5
2
2.5
1.75
1.8
1.85
1.9
1.95
2
Time (min)
Altitude (km)
Fig. 23.
Aircraft altitude above ground station
exactly the same as for the previous system tests, except
that the input data is sourced from the actual aircraft
ﬂight telemetry record. The results of this test are shown
in Figures 26 to 29.
The elevation and azimuth angles are shown in Figure
26 and 27. It is clear from these results that the actual el-
evation and azimuth angles closely follow the predicted
values, as in the case using the aircraft simulator. This
is in line with the results from previous system tests and
a gratifying conﬁrmation thereof.
Figure 28 and 29 shows the θ and φ steering angles.
These angles are also in line with the results obtained by
the earlier system test. Similar to the indications of the
earlier test, small deviations from the predicted aircraft
data can be seen, attributed to varying altitude, speed
and attitude. This data however, also shows that these
103
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

0
0.5
1
1.5
2
2.5
120
125
130
135
140
145
150
155
160
165
Time (min)
Air speed (km/h)
Fig. 24.
Aircraft air speed
0
0.5
1
1.5
2
2.5
-10
0
10
Time (min)
Roll (deg)
0
0.5
1
1.5
2
2.5
-20
-10
0
10
Time (min)
Pitch (deg)
0
0.5
1
1.5
2
2.5
-70
-60
-50
-40
Time (min)
Yaw (deg)
Fig. 25.
Aircraft attitude
deviations are more or less the same as experienced with
the earlier aircraft simulator based tests. It also serves
to further conﬁrm the soundness of concept using an
appropriate aircraft based emulator as an interim test
bed for this type of satellite system.
Figure 30 shows the calculated FSL. The losses resemble
the predicted ﬁgures and the link budget will not be
signiﬁcantly affected by the aircraft attitude, due to the
steerability of the antenna.
The tests as abovementioned, have proved the functionality
of the design and no reason that the design should not perform
as expected in the actual ﬂight test, has been uncovered. The
results obtained by using actual aircraft telemetry data con-
ﬁrmed those obtained previously with the aircraft simulator. At
the time of of writing, an actual ﬂight test with fully integrated
system was scheduled for the second half of 2011. Equipment
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
20
25
30
35
40
45
50
55
Time (min)
Elevation (deg)
Satellite
Aircraft
Aircraft Flight
1.7
1.8
1.9
42
42.5
43
43.5
Fig. 26.
Calculated satellite-, predicted aircraft- and measured aircraft ﬂight
test elevation data
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-40
-20
0
20
40
60
80
100
120
140
Time (min)
Azimuth (deg)
Satellite
Aircraft
Aircraft Flight
1.8
2
2.2
60
65
70
75
Fig. 27.
Calculated satellite-, predicted aircraft- and measured aircraft ﬂight
test azimuth data
racks in the aircraft have already been prepared to receive the
ASA, SAA and test platform hardware.
VII. CONCLUSION
The initial results obtained by means of an aircraft simu-
lator and ﬂight telemetry, conﬁrm the requirement to follow
an exact ﬂight route while maintaining a constant attitude.
Any deviation will affect the performance of the emulation.
However, the elevation and azimuth angles are less affected
than the θ and φ angles by small aircraft attitude ﬂuctuations,
for reason that the elevation and azimuth angles are measured
from the perspective of the ground station and θ and φ from
the aircraft.
Attitude changes obviously also change the orientation of
104
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
35
40
45
50
55
60
65
70
75
80
Time (min)
Theta angle (deg)
Satellite
Aircraft
Aircraft Flight
Fig. 28.
Calculated satellite-, predicted aircraft- and measured aircraft ﬂight
test θ angle data
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
180
200
220
240
260
280
300
320
340
360
380
Time (min)
Phi angle (deg)
Satellite
Aircraft
Aircraft Flight
Fig. 29.
Calculated satellite-, predicted aircraft- and measured aircraft ﬂight
test φ angle data
the antenna on the aircraft. This, however, will be compensated
for by the antenna control algorithm in correcting the θ and
φ steering angles (Figures 18, 28 and 19, 29). The effect on
the transmission link is, therefore, relatively small, apart from
some required change in the induced FSL (Figure 20).
Maintaining an exact ﬂight path presented a challenge to
the pilots ﬂying the aircraft simulator and the actual light
aircraft. An experienced pilot is essential for the successful
implementation of the ﬂight strategy. This was even more
evident in the actual ﬂight where external factors such as
wind disturbances played a role. These external inﬂuences
can be minimised by ﬂying in good weather conditions and
augmenting the ﬂight operations with an autopilot.
Furthermore, results from the previous sections indicate that
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
100
110
120
130
140
150
160
170
Time (min)
Free Space Loss (db)
1.2
1.4
1.6
108
110
112
114
Satellite
Aircraft
Aircraft Flight
Fig. 30.
Calculated satellite-, predicted aircraft- and ﬂight test FSL data
deviations occur at low elevation angles. A ﬂight path with a
higher maximum elevation angle will, therefore, emulate the
satellite more accurately. This is not seen as a major drawback,
as the emulation time window is still adequate.
Test logs from the performed tests also indicate that the
beam steering commands were correctly generated by the OBC
in response to the ASE inputs, in response to the ASE inputs
as processed from the aircraft avionics parameters, ﬂight path
data as deﬁned and ground station coordinates.
The initial results clearly indicate that it is quite feasible
to use a light aircraft equipped with a suitable emulator,
to act as an initial ﬂight test platform, in order to evaluate
the performance of the beam steerable satellite antenna and
peripheral associated payload components. Although many
other factors, such as overall hardware conﬁguration, space
endurance etc., enter into the design of actual space ﬂight
hardware, the economics and convenience of the approach as
set out, are beyond question. It was also proved that an actual
LEO satellite ﬂight path could be emulated to an acceptable
degree. The ASE with incumbent software as developed, will
furthermore act as a realistic and ﬂexible interface between
the aircraft and the satellite payload under development. The
set of results obtained thus far using actual hardware and very
realistic ﬂight data, conﬁrmed the accuracy and functionality
of the ASE. The tests performed with the prototype SAA
further proved the functionality of the interface between the
two systems and the correct operation of the OBC-SAA
control software. This paper described the implementation and
intermediate testing of a practical and quite general, LEO
aircraft based emulation platform. This development is not
only suitable for the SAA payload in question, but can be
adapted for interim testing of various satellite payloads. Such
an approach is a ﬂexible and clearly cost effective means of
actual preﬂight system testing. The system tests as documented
stopped just short of full airborne equipment ﬂight testing, as
105
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

scheduled for in the near future. However, as results up to the
present have been very positive and in line with expectations,
we look forward to that ﬁnal step.
REFERENCES
[1] I. Kruger and R. Wolhuter, “An aircraft based emulation platform for
LEO satellite antenna beam steering,” in Fifth International Conference
on Systems and Networks Communication (ICSNC 2010). Nice, France:
International Academy, Research, and Industry Association (IARIA),
22 - 27 August 2010, pp. 221 – 228.
[2] W. Aerts, P. Delmotte, and G. Vandenbosch, “Conceptual study of analog
baseband beam forming: Design and measurement of an eight-by-eight
phased array,” IEEE Transactions on Antennas and Propagation, vol. 57,
pp. 1667–1672, 2009.
[3] J. Wertz, Ed., Spacecraft Attitude Determination and Control.
Kluwer
Academic, 1991.
[4] D. Charlambous, “Mathematical tools (physics studies),” Department of
Physics Lancaster University, Tech. Rep., page 4.
[5] B. A. Campbell and S. W. McCandless, Introduction to Space Sciences
and Spacecraft Applications.
Gulf Publishing Company, 1996.
[6] G. Maral and M. Bousquet, Satellite Communications Systems, 2nd ed.
John Wiley & Sons Ltd, 1993.
[7] D. Koks, “Using rotations to build aerospace coordinate systems,” Aus-
tralian Department of Defence: Electronic Warface and Radar Division
System Sciences Laboratory, Tech. Rep., 2006.
[8] “Direction
Cosine
Matrix
ECEF
to
NED.”
[Online].
Available:
http://www.mathworks.com/access/helpdesk/help/toolbox/
aeroblks/directioncosinematrixeceftoned.html,(March2010)
[9] A. Thompson, “Untitled Article.” [Online]. Available: http://atacolorado.
com/eulersequences.doc(March2010)
[10] S. Cakaj, W. Keim, and K. Malaric, “Communications duration with
low earth orbiting satellites,” in 4th IASTED International Conference
on Antennas, Radar and Wave Propagation, Montreal, Canada, ARP
2007, May 30 - June 1 2007, pp. 85 – 88.
106
International Journal on Advances in Networks and Services, vol 4 no 1 & 2, year 2011, http://www.iariajournals.org/networks_and_services/
2011, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

