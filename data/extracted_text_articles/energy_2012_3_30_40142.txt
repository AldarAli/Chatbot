A Privacy Preserving and Secure Authentication Protocol for the Advanced
Metering Infrastructure with Non-Repudiation Service
Chakib Bekara, Thomas Luckenbach
RESCON Department
Fraunhofer FOKUS Institute
Berlin, Germany
{chakib.bekara, thomas.luckenbach}@fokus.fraunhofer.de
Kheira Bekara
LOR Department
Institut TELECOM Sud-Paris
Evry, FRANCE
kheira.bekara@it-sudparis.eu
Abstract—In the smart grid, smart meters play an important
role in keeping a real-time balance between energy production
and energy consumption. The advanced metering infrastruc-
ture is responsible of collecting, storing, analyzing and pro-
viding metering data from smart meters to the authorized
parties, and also carrying commands, requests, messages and
software updates from the authorized parties to the smart
meters. As such, advanced metering infrastructure is one of
the important components of the smart grid, and securing
it is a prerequisite for guaranteeing a large acceptance and
deployment of the smart grid. One step towards securing it is
to provide authentication, integrity and conﬁdentiality services.
Another important step is to preserve the privacy of the end-
customer equipped with a smart meter, where all its related-
data (including metering data) are kept secret, such as energy
consumption, billing and which smart appliances are used in its
premises. In this paper, we propose an ID-based authentication
protocol for the advanced metering infrastructure, which pro-
vides source authentication, data integrity and non-repudiation
services, while preserving the end-customer’s privacy.
Keywords-Identity-based Cryptography; Key Establishment;
Data Source Authentication; Smart Grid; Advanced Metering
Infrastructure; Smart Meter; User’s privacy
I. INTRODUCTION
The term SM (Smart Meter) designs an advanced digital
utility meter (electricity, gas, water, heat, etc.) equipped
with a two-way communication interface. In the context of
the SG (Smart power Grid), a SM is installed at an end-
customer premises, and is able to communicate with the
utility (energy utility), by sending metering data (e.g., energy
consumed/locally produced, grid status, meter status, etc.),
and also by responding to messages from the utility (e.g.,
software update, realtime pricing, load shedding, energy cut-
off, etc.).
The SM is a key element in the AMI (Advanced Metering
Infrastructure), as shown in Figure 1. The AMI [1] is re-
sponsible for collecting, analyzing, storing and providing the
metering data sent by the SMs to the appropriate authorized
parties (e.g., energy provider, utility, SG operator, etc.).
The AMI is also responsible for transmitting requests, com-
mands, pricing-information and software updates from the
authorized parties to the SMs. Figure1 presents a simpliﬁed
view of the AMI as a part of the SG, where we differentiate
the following components[2]:
• End-customer’s HAN: this includes the SM, which
is the main component, in addition to SAs (smart
appliances), e-car (electric car) and local renewable
energy sources in a customer’s premises.
• GW (Gateway): the GW acts as an interface between a
set of SMs and the AMI head-end. The GW plays the
role of a concentrator, collecting data from several SMs
using a local short-distance communication infrastruc-
ture (e.g., ZigBee, Bluetooth, WiFi, PLC, etc.), then
sending them using a long-distance communication
infrastructure (e.g., Internet, GSM, WiMax, GPRS) to
the AMI head-end. It could also play the role of a
ﬁrewall, by protecting the end-customers HAN from
outside attackers. There may be several levels of GWs:
a GW per a residential building block (a set of HANs),
an upper level GW per a set of building blocks, etc.
• AMI Communication Infrastructure: in its simplest
form, this network provides a communication path from
the SM/GW to the AMI head-end, and reciprocally.
• AMI head-end: is responsible for two-way communi-
cation with SMs/GWs. Thus it serves as a gateway
between the end-customer’s HAN (mainly the SM) and
the AMI back-end.
• AMI back-end: the components in the AMI back-end
manage SMs, use data collected from SMs (for billing,
grid status estimation, consumption/production fore-
casting, outage management, etc.) and send data and
requests (software/ﬁrmeware update, real-time pricing,
load shedding, etc.) to SMs. The MDMS (Meter Data
Management System) [2] is responsible for storing all
the exchanged data with the SMs, then dispatching
them to the authorized receivers.
The well-functioning of the SG is based on the trustworthy
of the overall data ﬂow(assuming authentic origin/source
and data integrity), including the data exchanged in the
the AMI [3]. Attacking the AMI will impact the utility
and the end-customer, and, as consequence, threaten the
60
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

AMI Communication 
Infrastructure/ WAN 
Power Grid 
Energy provider(s) 
-Billing  
- Demand response 
Utility (distribution 
and/or transmission) 
-
Outage 
management 
-
Energy quality 
-
Meter 
management 
SM (Smart Meter) 
E-Car 
SAs (Smart Appliances) 
Bulk Energy generation 
Distributed renewable 
energy generation 
Meter Data 
Management System 
(MDMS) 
Residential end-customer’s premise (ex: home) seen as a HAN (Home area Network) 
Local energy production 
Two-way communication (data flow) 
Energy flow 
distribution 
transmission 
AMI head-end 
Smart Grid 
Operator 
AMI back-
end 
HAN1 
… 
HANn 
SM 
GW 
(Gateway) 
Figure 1.
A general view of the AMI as part of the SG
security of the SG. An attacker could impersonate the SMs
and send false meter readings to the utility. This may
results on ﬁnancial loss for the utility, unbalanced energy
production/consumption and may lead to power outages.
Moreover, an attacker could target the end-customers HAN,
by masquerading as the utility and sending fake commands
(e.g., disconnection or load shedding), fake pricing messages
(low price during peak period and high price during off-peak
period), resulting on ﬁnancial loss for the end-customer.
The attacker could also impersonate the GW to which is
connected the SM and thus drop all messages sent from/to
the SM, impacting both the utility and the end-customer.
Finally, the attacker could also impersonate the SM to the
local SAs inside the end-customers HAN, making them to
operate during peak period .
Securing the ﬂow of data in the AMI requires establishing
secure (end-to-end) communication channels between com-
municating parties in the AMI, providing the basic security
services: data source authentication, non-repudiation and
conﬁdentiality [3], where:
1. Data source authentication allows the veriﬁcation of
the identity that one party claim to have (origin au-
thentication), and that the data received from that party
was not altered en-route (data integrity). This service
protects the AMI from the following attacks: identity
impersonation, MITM (Man-In-The-Middle) [4] attack
and data injection/modiﬁcation.
2. Non-repudiation prevents a sender from denying send-
ing a message. This service is required to avoid that a
SM (end-customer) deny sending some metering data
(energy consumption), or the energy provider deny
sending some real-time pricing. This service is useful
when responsibilities in case of dispute need to be
clearly identiﬁed.
3. Conﬁdentiality protects data from being legible to unau-
thorized parties.
In our paper, we mainly investigate how to efﬁciently pro-
vide the two ﬁrst security services. In addition, we consider a
third security service, which is related to the end-customer’s
HAN privacy. Information about the SAs inside the end-
customer’s HAN (e.g., identity, type, etc.) should not be
divulged, even when a SM and a SA need to mutually
authenticate.
In this paper, we present an ID(Identity)-based authen-
61
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

tication protocol for the AMI, providing data source au-
thentication and non-repudiation services, and preserving the
privacy of the end-customer. In Section II, we review some
related works about authentication in AMI. In Section III,
we describe our motivation towards our proposal, give the
assumptions we made and summarize the notations we use.
Section IV presents our ID-based authentication protocol for
the AMI, and Section V discusses its security and gives a
brief comparison with the related works. Section VI gives
some perspective works and concludes the paper.
II. RELATED WORKS
Several authentication protocols (APs) were proposed for
the SG and the AMI, all of them rely on the use of
one or more of the following cryptographic keying mate-
rials/schemes:
1. Using traditional PKC (public-key cryptography); cou-
pled with a PKI [5] (public key infrastructure), as in [6].
2. Using IBC (ID-based Cryptography) [7]; coupled with
a single trusted PKG (Private Key Generator), as in [8].
3. Using solely symmetric-key cryptography; coupled
with a single trusted KDC (Key Distribution Center),
as in [9] [10].
The proposed authentication protocols achieve authentica-
tion between two parties A and B, in one of the following
two ways:
• Prove the possession of a shared secret key (pre-shared
or established), that only both parties know/share. This
is typically done by generating/verifying a MAC (mes-
sage authentication code) using the shared key. How-
ever, MACs do not provide non-repudiation service,
since the used key is known to the two parties.
• Prove the possession of a private information (called
private key) without revealing it, that the other party
could verify using an authentic public information re-
lated to the prover (called public key). This is typically
done by generating digital signatures using the signer’s
private key, while the receiver uses the signer’s public
key to check the signatures. Digital signatures provide
non-repudiation service, if and only if the signer’s
private key is known to the signer only.
In [6], Fouda et al. investigate the authentication between
two parties A and B of the SG: mainly a SM and a GW.
Each entity possess a pair of self-generated private/public
keys, while the public key is certiﬁed by one of the CAs
(Certiﬁcation Authorities) of the PKI. After verifying the
certiﬁcate of each others (is valid and not revoked), A and B
use the authenticated DH key establishment mechanism [4],
in order to securely establish a secret shared key KA B,
that both use to provide data source authentication. If non-
repudiation is required, each party can use its private key to
generate signatures.
In [8], So et al. propose an ID-based encryption and
signature protocol for the AMI, based on IBC. The authors
Figure 2.
Private/Public Keys generation in IBC System
assume the existence of a widely trusted PKG that possesses
a master private (SP KG)/public (PP KG) keys. The PKG
generates the ID-based private key of each entity A in the
AMI using IDA and SP KG, while A’s ID-based public
key could be easily derived from A’s identity IDA (see
Figure 2). Again, to provide data source authentication, A
uses its private key to generate signatures over the messages
it sends, while a receiver B uses IDA to derive A’s public
key, then checks the authenticity of the messages received
from A. Since the protocol is based on IBC, certiﬁcates are
not used. The authenticity of A is implicitly checked if its
signature is successfully veriﬁed, which means that A owns
the right private key issued by the PKG.
In [10], Ayday et al. investigate authentication in end-
customer’s HAN, where each HAN contains: a GW, a SM,
and a set of SAs. The authors assume that the utility plays
the role of a widely trusted KDC in the SG, and that each
GW possesses a unique IP address (serving as its ID) issued
by an ISP (Internet Service Provider). The KDC shares a
long-term unique secret key LTKA with each entity A. Two
entities A and B, with corresponding unique identiﬁers IDA
and IDB, trying to establish a secure communication for
the ﬁrst time, send ﬁrst an authenticated key-establishment
request carrying both IDA and IDB, to the KDC. The KDC
serves the requests as follows:
• The KDC checks that the messages are authentic using
LTKA and LTKB.
• If the requests originate from a SM and a GW and
are authentic, the KDC ﬁrst uses the service of a
third party providing localization information, to make
sure that SM and GW are collocated (belong to the
same HAN). Mainly, the KDC knows the location
LocSM of SM due to the billing address of SM, then
sends IDGW and LocSM to the ISP (internet service
provider) of GW, which could determine whether or
not LocGW =LocSM . In this way, the KDC avoids a
wrong/malicious key-establishment between a GW and
SM of different HANs. If SM and GW are collocated,
the KDC generates a secret key KSM GW and securely
sends it encrypted using LTKSM to SM and using
LTKGW to GW.
• If the key-establishment is between GW/SM and a SA,
62
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

the KDC ﬁrst veriﬁes that the GW and the SM related
to the SA have already established a secret key. Finally,
the KDC issues a secret key KSA GW (resp. KSA SM)
and securely sends it to SA and GW (resp. SA and SM).
In [9], Yan et al. present an authentication and encryption
protocol for the AMI, where SMs are interconnected through
a multi-hop wireless network, and form a logical linear
communication path to reach a remote collector node (GW).
The authors assume the existence of trusted KDC (utility),
which shares a secret key with each SM and securely issues
a secret key to each pair of SMs in the communication path.
A SM encrypts its reading using the key shared with the GW,
and authenticates the data it sends (including data received
from previous SMs in the path) using the key shared with
the next SM in the path. In this way, each SM could verify
the authenticity of the data it receives, and also guarantee
the conﬁdentiality of the metering data that it generates.
A. discussion
Authentication protocols based on symmetric-key cryp-
tography coupled with KDC [9] [10], and those based on
IBC coupled with a PKG [8], are known for their relatively
low induced overheads (computation, storage, transmission),
and lightweight management requirements (no need for PKI,
since certiﬁcates are not used). In the other side, authentica-
tion protocols based on PKC are known for their relatively
expensive overheads, especially for resources-constrained
devices, and require the costly deployment of a PKI to issue
and manage a large number of digital certiﬁcate. However,
the ﬁne performance of [8] [9] [10], comes at the expense
of some security issues and some hard to fulﬁl assumptions:
• All the three protocols assume the existence of a single
trusted entity (usually the utility) in the whole SG,
playing the role of the PKG in [8] and the role of the
KDC in [9] [10]. Assuming the existence of a single
trusted entity (PKG or KDC) in the AMI is a hard to
fulﬁl assumption, and do not scale to a so large network
(millions of SMs, SAs, etc.). It is not trivial that the
large number of manufacturers of SMs, SAs, GWs, e-
cars, etc., would accept to trust the same single entity
for key management. Moreover, would this single entity
be able to efﬁciently manage the security of a large
number of entities and systems involved in the AMI?
• In [8] based on IBC, the PKG issues the private keys
of all entities of the SG. As a consequence, there is a
key-escrow problem, and thus, non-repudiation service
could not be guaranteed.
• In [9] [10], the KDC issues a secret shared key for
any pair of communicating entities A and B in the
AMI (SM, GW, SA, etc.). As a consequence, the pri-
vacy of communications in the AMI is not completely
preserved, since the KDC can easily eavesdrop on the
encrypted messages, or even impersonate any entity
without being detected. Moreover, the end-customer’s
privacy in [10] is not preserved, since information
related to the SAs in its HAN could be divulged during
the key-establishment phase between a GW/SM and
SAs.
•
[10] assumes the existence of a GW per HAN/SM,
whereas in practice there is one GW to serve a set
of SMs. Requiring a GW per HAN, either means
integrating a GW (with all its advanced features) with
each SM, or deploying a separate GW per SM/HAN.
Both solutions are ﬁnancially expensive due to the
large number of deployed SMs. Assuming that one GW
serves a set of HANs, the use of ISP to check whether
the SM and the GW are collocated will fail, since the
GW and the SM are now in two different locations.
As a consequence, preventing wrong/malicious key-
establishment could not be guaranteed.
• Assuming that the utility plays the role of the KDC
or the PKG is problematic, since in many countries
(e.g., USA) several independent electricity utilities may
operate in the same region. In this case, we will end up
with several KDCs/PKGs, which make all the previous
authentication protocols not directly applicable.
Finally, all the proposed protocols do not consider the
case where SAs of HANi could successfully mutually
authenticate with the SM of a neighboring HANj. This
situation could make the SAs to be controlled by the SM of
HANj instead of the SM of HANi. Meanwhile, the same
problem occurs, except for [8], when establishing secure
communications between a SM and the right GW: e.g., a
SM communicate with the GW of a neighboring building
and not the GW of the the local building.
III. MOTIVATION, ASSUMPTIONS AND NOTATIONS
A. Motivation and Assumptions
To provide an efﬁcient authentication for the AMI, we
mainly make use of symmetric-key cryptography and IBC,
and rarely consider using classical PKC (RSA, DSA, and
even ECC) [4], since it requires the use of certiﬁcates, where
certiﬁcate distribution/fetching and certiﬁcate validation will
add extra overheads that some resource-constrained devices
in the AMI (SMs, SAs, etc.) could not easily offer. The only
exception is for PKGs, which still use classical ECC [11].
Moreover, in order to provide non-repudiation service and
protect the end-customer’s HAN privacy, we do not rely on
a KDC for authentication and key management. Instead, we
use a variant of IBC called certiﬁcate-less IBC [12], where
each entity’s private key is partially issued by the PKG, the
other part of the key being securely issued by the entity
itself. Using certiﬁcate-less IBC, we can now provide non-
repudiation service for the AMI, which was not possible
using the basic IBC as in [8].
Unlike [8] [9] [10], we assume the existence of several
trusted key management authorities (PKG), where entities
63
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

Table I
USED NOTATIONS
SM
Smart meter
SA
Smart appliance
GW
Gateway
EP
Energy Provider
IDA
unique identity of entity A
NA
a nonce value generated by A
PA
A’s public-key
SA
ID-based private key of A, or simply A’s private key
PKGi
the ith Private Key Generator
PP KGi
Public key of PKGi
SP KGi
master-secret Private key of PKGi
MAC
Message Authentication Code
KA B
an l-bit secret shared key between entities A and B
MACK(M)
a MAC generated over message M using key K
EncK(M)
message M encrypted using key K
σSA(M)
a signature generated over message M using SA
p
a large prime of length | p |>160 bits
Fp
a ﬁnite ﬁeld, Fp=[0, p-1]
E(Fp)
an elliptic curve deﬁned over Fp
aP
scalar to point multiplication: addition of P a times
x ∥ y
concatenation of x and y
served by different PKGs could authenticate and estab-
lish secure communications. In this way, the scalability is
improved, no single point of failure exists, and the end-
customer’s privacy is enhanced.
Finally, we assume that the SMs and the GWs deployed
on the AMI network are owned and managed by the utility,
which owns also the electricity distribution and/or trans-
mission power network. In the other side, SAs inside the
end-customer’s HAN are owned and managed by the end-
customer. In our paper, we make a distinction, which is not
made by the other works, between the utility and the energy
provider:
• The utility owns the physical electric infrastructure until
the end-customer’s electricity point of delivery (SM),
over which electricity is delivered.
• The energy provider; with which the end-customer
signs a contact, supplies the end-customer by energy
(by buying it from energy produces), and bills it for the
consumed energy. The utility is informed about each
signed contract between any end-customer (SM) and
any energy provider.
B. Notations
Table I summarizes the notations used through the remain-
ing of the paper.
IV. OUR PROPOSED ID-BASED AUTHENTICATION
PROTOCOL FOR THE AMI
In this section, we propose and describe an ID-based
authentication protocol for the AMI, which provides source
authentication, data integrity, non-repudiation and preserves
the end-customer’s HAN privacy.
Our protocol involves three phases: System setup phase,
Node initialization/Private key generation phase and Data
Source Authentication phase.
A. Phase I-System Setup
We assume the existence of t trusted entities in the SG,
PKGi i = 1, ..., t, playing the role of private key genera-
tion authorities. It is evident that t is inﬁnitely negligible
compared to the number of entities involved in the SG.
The t PKGs agree on the use of the same elliptic curve
E(Fp), with the simpliﬁed domain parameters ParamE =
(a, b, p, n, P), where:
• p is the order of the ﬁnite ﬁeld Fp over which is deﬁned
E(Fp).
• a, b ∈ Fp are the coefﬁcients of E(Fp).
• P ∈ E(Fp) is a generator point of a cyclic subgroup
of E(Fp), and n is a big-prime and is the order of P.
The PKGs also agree on the use of two n-degree cyclic
groups: G1 ⊂ E(Fp) (additive group, e.g., the subgroup of
E(Fp) deﬁned by P) and GT (multiplicative group, e.g.,
an extension ﬁeld of Fn), on a symmetric pairing function
e [13] and on two hash functions:
H1 : {0, 1}∗ × G1 → G1 and H2 : GT × GT → {0, 1}l.
e has the following properties [13]:
• Bilinearity: e(aR, bS)=e(abR, S)=e(R, abS)=e(R, S)ab,
∀ a,b ∈ F ∗
n, ∀ R, S ∈ G1
• Non-degeneracy: e(P, P) ̸= 1GT , where 1GT is the
identity element of GT , P is the generator of G1.
• Computability: there exists an efﬁcient algorithm im-
plementing and computing e.
Then, each PKGi performs the following:
• Picks
a
random
master-secret
private
key
SP KGi
∈
Fn
∗
and
computes
its
public-key
PP KGi=SP KGiP, then sets its IBC system parameters:
Parami=(n, G1, GT , e, P, PP KGi, H1, H2)∪ParamE.
• Securely gets the identity IDP KGj of each remaining
PKGj along with an authentic copy of PP KGj. Then,
PKGi issues a cross-domain certiﬁcate to each PKGj,
where Texp is the certiﬁcate’s expiration date:
Certi→j = IDP KGi, IDP KGj, PP KGj, Texp
|
{z
}
π
σSP KGi (π)
PKGi makes Certi→j available by publishing it on a
public repository referenced to it by @Diri.
For signature generation/veriﬁcation over the certiﬁcates, we
use the ECDSA signature scheme [11]. Figure 3, summa-
rizes Phase I
B. Phase II-Node Initialization/Private Key Generation
Each entity involved in the AMI (SM, GW, SA, e-car,
etc.) is issued a partial ID-based private key by one of the t
PKGs at the manufacturing phase. Each manufacturer signs
a contract with one or more PKGs, in order to securely
provide each device it produces with its partial ID-based
private key, along with the necessary IBC system parameters.
We assume that the initialization step is performed over an
64
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

ParmE ={a, b, p, n, P} 
e, G1, GT, H1, H2 
PKG1: SPKG1/ PPKG1 
Param1 
Get remaining 
PPKGj 
Publish Cert1j 
PKGi :SPKGi /PPKGi 
Parami 
Get remaining 
PPKGj 
Publish Certij 
PKGt :SPKGt / SPKGt 
Paramt 
Get remaining 
PPKGj 
Publish Certtj 
 … 
… 
Common public parameters 
Distinct keying domains, with distinct IBC system parameters Parami 
Keying domain 1 
The set of served 
entities, issued 
private keys by 
PKG1 
Keying domain i: 
 The set of 
served entities, 
issued private 
keys by PKGi 
Keying domain t:  
The set of served 
entities, issued 
private keys by 
PKGt 
Figure 3.
System Setup Phase
already established secure channel between PKGi and the
manufacturer.
Thus, a device A with a unique built-in identity IDA (e.g.,
serial number, MAC address, IPv6 address, etc.), served by
PKGi will be securely initialized as follows:
• A is loaded with Parami, @Diri
• Then, A picks a random kA ∈ F ∗
n and sends to PKGi:
IDA, kAP.
• PKGi
sends
to
A
its
partial
private
key:
DA=SP KGiH1(IDA, kAP)
• A computes its total ID-based private key SA=kADA,
and sets PA=< kAP, kAPP KGi >. A securely stores
kA and SA, since it needs them for signature genera-
tion, public-key decryption and key-establishment.
At the end of the initialization, A is the only entity knowing
SA. Even PKGi does not know it since it could not know
kA. A is said to belong to the keying domain i deﬁned
by PKGi (see Figure 3). In the same way, each EP will
securely get its partial private key, then computes its total
private key.
Finally, each entity A={SM, GW} purshased by the
utility, goes through a second step of initialization before its
deployment. Mainly, the utility pre-loads the SM/GW with
its identity IDUtility and a unique long term shared secret
key LTKA.
C. Phase III-Data Source Authentication
In this phase, two communicating parties A and B of the
AMI (EP, GW, SM, SA, etc.), ﬁrst mutually authenticate (the
ﬁrst time they met), then securely exchange messages. Two
cases can be distinguished:
• Case I: Intra-domain communications: both A and B
belong to the same keying domain i deﬁned by PKGi.
• Case II: Inter-domains communications: A and B
belong to two different keying domains i and j, deﬁned
by PKGi and PKGj respectively.
We only consider Case II, since Case I is trivial. We
consider three scenarios of communication, where all the
communicating entities belong to two different keying do-
mains:
• between EP and SM.
• between SM and GW.
• between SM and SA
For simplicity, we assume that during a communication the
initiator always belongs to domain i, whereas the responder
belongs to domain j. Also, we give the details of the ID-
based signature generation/veriﬁcation we use at the end of
the section, and not for each scenario.
1) Communication between EP and SM: When the end-
customer signs a new contract with an EP to be its energy
supplier, the EP initiates a communication with the corre-
sponding SM, by by setting a request Req1 (association with
a new EP) and generating an ID-based signature over M1,
then sends the following message to the SM:
Req1, IDEP , PEP , IDP KGi, NEP , IDSM
|
{z
}
M1
σSEP (M1)
(1)
Upon reception of (1), the SM checks the message
freshness (not replayed) from the received nonce value
NEP . If expired or not already held, the SM checks from
@Dirj whether or not there exists a certiﬁcate Certj→i
issued from PKGj to PKGi. Assuming it exists, the
SM checks Certj→i’s validity using PP KGj following the
ECDSA signature scheme [11]. If the certiﬁcate is valid
(certiﬁcates signature is valid), the SM trusts PP KGi, and as
consequence assumes that PEP is a valid public-key. Finally,
SM checks the signature on (1). If valid, the SM sends a
request Req2 to the utility to check whether IDEP is a
valid energy provider, and whether or not it must accept
Req1:
Req2, IDSM, IDEP , NSM
|
{z
}
M1a
, MACLT KSM (M1a)
(2)
Upon reception of (2), the utility checks that the message
is fresh and authentic, then checks if there is a new asso-
ciation between IDSM and IDEP (a new energy supply
contract has been signed). If it is the case, the utility sends
the following approval conﬁrmation message (otherwise
sends a deny message):
OK, IDEP , IDSM
|
{z
}
M1b
, MACLT KSM (M1b ∥ NSM)
(3)
Upon reception of (3), the SM checks if it is fresh and
authentic (MAC is valid) and that the response of is ’OK’.
65
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

If all veriﬁcations are positive, the SM considers that it
has successfully authenticated the EP. The SM responds to
the EP to both authenticate itself and also to conﬁrm the
acceptance of Req1:
OK, IDSM, PSM, IDP KGj, NSM, IDEP
|
{z
}
M2
, σSSM (M2 ∥ NEP )
(4)
Upon reception of (4), the EP veriﬁes that it is fresh.
If expired or not already held, the EP checks from @Diri
whether or not there exists a certiﬁcate Certi→j. Assuming
it exists and is valid, the EP trusts PP KGj, and consequently
assumes that PSM is valid. The EP checks the ID-based
signature on 4. If the signature is valid and the response is
’OK’, it considers that it has successfully authenticated the
SM and sends the following message to conclude the mutual
authentication phase:
Finish, σSEP (Finish, IDEP , IDSM, NSM)
(5)
Now, the EP and the SM can successfully generate
and verify signatures over their exchanged messages, thus
ensuring data source authentication and non-repudiation.
They could also establish a shared secret key, as described
in Section IV-C2, to secure their communications if non-
repudiation is not mandatory.
2) Communication between SM and GW: A newly de-
ployed SM in a residential building needs ﬁrst to authenticate
the GW of the building, before sending its metering data
to the AMI head-end via this GW. The deployment of the
SM is done by an authorized employee of the utility. To
avoid associate the SM with a wrong GW (neighboring GW
or a fake GW), all what is needed is that the employee
indicates to the SM the IDGW to which the SM needs to
communicate. Assuming the employee securely initializes
the SM with IDGW , the following steps are performed
between the SM and the GW:
The SM sets an attach-req request to ask to be attached
to the GW, generates an ID-based signature over M3, then
sends the following message to IDGW
attach − req, IDSM, PSM, IDP KGi, NSM
|
{z
}
M3
, σSSM (M3)
(6)
Upon reception of (6), the GW checks its freshness. If
expired or not already held, the GW checks from @Dirj
whether or not there exists a certiﬁcate Certj→i. Assuming
it exists and is valid, the GW checks the validity of the
signature on (6) using PSM. If valid, using secret values
kGW and SGW , and public-key PSM, the GW computes a
secret key K=KGW SM=
H2(e(SGW , kSMP)e(kGW H1(IDSM, kSMP)kSMPP KGi))
then sends the following message to the SM, to notify the
acceptance of the request:
attach − ok, IDGW , IDP KGj, NGW
|
{z
}
M4
, MACK(M4 ∥ NSM)
(7)
Upon reception of (7), the SM checks its freshness and
makes sure that it originates from the pre-conﬁgured IDGW .
If expired or not already held, the SM checks from @Diri
the existence of a certiﬁcate Certi→j. Assuming it exists
and is valid, the SM computes using secret values kSM and
SSM, and public-key PGW , the secret key K=KSM GW =
H2(e(SSM, kGW P)e(kSMH1(IDGW , kGW P), kGW PP KGj))
then checks the received MAC. If the veriﬁcation succeeds,
then SM concludes that the GW is authentic and that
KSM GW =KGW SM (otherwise detects that the GW is
misbehaving and stops communication with it). Then, the
SM sends the following message to authenticate itself to the
GW:
finish, MACK(finish, IDSM, IDGW , NGW )
(8)
The GW veriﬁes the authenticity of (8). If the MAC is
valid, the GW concludes that the SM is authentic and that
KGW SM=KSM GW . Henceforth, the SM and the GW use
KSM GW to provide data source authentication. However,
if they need to provide non-repudiation, they can still use
their private keys. Now let prove that KSM GW =KGW SM,
for simplicity we omit H2 in the proof.
We have KGW SM=H2(α β), where
α
=
e(SGW , kSMP))
=
e(kGW SP KGjH1(IDGW , kGW P), kSMP)
=
e(kSMH1(IDGW , kGW P), kGW SP KGjP)
=
e(kSMH1(IDGW , kGW P), kGW PP KGj)
β
=
e(kGW H1(IDSM, kSMP), kSMPP KGi)
=
e(kGW H1(IDSM, kSMP), kSMSP KGiP)
=
e(kSMSP KGiH1(IDSM, kSMP), kGW P)
=
e(SSM, kGW P)
From
α
and
β,
we
can
easily
deduce
that
KGW SM=H2(αβ)=H2(βα)=KSM GW
3) Communication between SM and SA: When a new
SA is deployed in the end-customer’s HAN, it ﬁrst needs
to authenticate itself to (associate itself with) the SM of the
HAN, and also requires the authentication of the SM. To
avoid associating a SA with a wrong SM (e.g., the SM of a
neighboring HAN), the end-customer explicitly indicates to
the SA IDSM to which the SA needs to associate. Assume
that the SA is provided with a data input interface (e.g.,
small keyboard), or could be connected to a PC and then
be accessible through a software interface. In this case, the
end-customer (SA’s owner) could initialize the SA with the
66
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

appropriate IDSM (the SM of its HAN). As a consequence,
the SA and the SM could mutually authenticate and establish
a secret key KSA SM for data source authentication, as
described in Section IV-C2, without involving any online
third party (KDC or PKG).
4) ID-based Signature Generation/Veriﬁcation: We based
our ID-based signature on the Hess ID-based signature
scheme [14], while providing some modiﬁcation to reﬂect
the use of Certiﬁcate-less IBC. Let A belonging to domain
i be the signer, B belonging to domain j be the veriﬁer, and
M the signed message. In addition, assume that B already
trusts PKGi. Moreover, SA=kASP KGiH1(IDA, kAP) is
A’s private key and PA=< kAP, kAPP KGi > is A’s public
key.
A generates the signature < R, v > as follows:
• Picks k ∈ Fn
∗, and P1 ∈ G1
∗, then computes
r = e(kP1, P)
(9)
• Computes
v = H(M ∥ r)
(10)
and sets
R = vSA + kP1
(11)
where H is a one-way hash function (e.g., SHA1)
• Outputs σSA(M)=< R, v >
B veriﬁes the signature < R, v > using IDA, PA and
PP KGi as follows:
• Computes r′, where:
r′ = e(R, P)e(−vH1(IDA, kAP), kAPP KGi)
(12)
• Accepts the signature only and only if
v = H(M ∥ r′).
(13)
Now, let prove that if the signature is veriﬁed (equation
13 held), then A really generated the signature over M using
its private key SA corresponding to IDA and PA, where SA
is partially generated PKGi.
From (9), (10) and (13), we deduce that
r′ = e(kP1, P)
(14)
Finally, from (12) and (14), we have:
e(kP1, P)
=
e(R, P)e(−vH1(IDA, kAP), kAPP KGi)
=
e(R, P)e(−vH1(IDA, kAP), kASP KGiP)
=
e(R, P)e(−vkASP KGi(IDA, kAP), P)
=
e(R, P)e(−vSA, P)
=
e(R − vSA, P)
Now, we get that
e(kP1, P) = e(R − vSA, P)
By equality, term to term of the both pairing functions, we
have
kP1 = R − vSA ⇒ R = vSA + kP1
Thus, we ﬁnd here the initial signature as generated by A
in 11.
V. SECURITY ANALYSIS AND COMPARISON
Our
ID-based
authentication
protocol
for
the
AMI
achieves secure authentication and non-repudiation. It also
improves the privacy for the end-customer’s. Any pair of
communicating nodes of the AMI could mutually authen-
ticate each other, then if authentic, securely exchange data
either by signing them (if non-repudiation is required), or by
establishing a shared secret key and generating MACs over
the data (if non-repudiation is not required). Moreover, a SM
and a SA could mutually authenticate without involving an
online third party as the KDC in [9][10], thus, preserving
the end-customer’s privacy. Finally, the inclusion of a nonce
value in each exchanged message protects the receiver
from replay attacks. Indeed, a receiver accepts an authentic
message from A as a fresh, only and only if the new nonce
NA carried in the message is grater than the last nonce
received from A.
In our proposed solution, two nodes A and B are able to
mutually authenticate, if and only if:
• They belong to the same keying domain i: In this case,
both are issued a partial private key from the trusted
PKG PKGi.
• They belong to two different keying domains: In this
case, they could not directly trust each other’s public-
key, since they do not trust the public-key of the PKG
of the other domain. Each node needs to get a cross-
domain certiﬁcate, issued by the PKG of its local
domain to certify the public key of the PKG of the
other domain. If such cross-certiﬁcate exists, then both
entities could mutually authenticate, and also establish
a shared key to protect their communications. If such
certiﬁcate does not exist, then they will not be able to
communicate.
A node X cheating on its ID or the ID of its PKG, is not able
to pass the authentication phase in the three scenarios, since
it could not have the appropriate private key corresponding
to its identity and to its public-key. Consequently, X is not
able to generate a valid signature that the other side will
successfully verify, and cannot generate the same shared key
as generated by the other party. As a consequence, X will
be detected as misbehaving/cheating, and the communication
with him will be stopped.
Our ID-based authentication protocol covers communi-
cations between the SM and the EP, a feature that is not
described in the related works presented in Section II.
Authentication in our protocol is very useful, especially
since the end-customer is able to freely move from one EP
67
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

to another, in the context of SG. Also, in the new SG, the
tendency is to make a separation between the utility (infras-
tructure provider) and the EP (electricity provider), since
they are two separate entities. However, the intervention of
the utility will remain, as seen in Section IV-C1. Indeed, the
utility protects the SM from malicious/illegal association to
any new EP.
The use of certiﬁcate-less IBC removes the key-escrow
problem in [8], and thus guarantees non-repudiation. Indeed,
an entity A is the only entity knowing its private key SA.
Thus, A could not repute a signature that it has generated
and that could be veriﬁed using PA, by claiming that another
party (e.g., PKGi) generated it, since PKGi does not know
SA.
Finally, for authentication between SM/GW, and SM/SA,
an authorized human intervention is performed to avoid a
wrong/malicious association. Indeed, for SM/GW, an autho-
rized ﬁeld personal from the utility will indicate to the SM
the identity of the associated GW, in order to send its meter
readings and receive messages from utility and its EP. For
SM/SA, the owner of the SA will indicate the identity of
the SM to which the SA need to communicate with.
VI. CONCLUSION AND PERSPECTIVES
Authentication is an important requirement to protect the
AMI from several attacks, such as impersonation and data
modiﬁcation. In this paper, we present an ID-based authen-
tication protocol for the AMI that induces low overheads,
provides non-repudiation and authentication services, allows
efﬁcient key-establishment and preserves the end-customers
privacy. Moreover, our solution is scalable since it considers
several key management authorities. As a future work, we
will evaluate the performances of the protocol, through
simulation and implementation. Then, we will extend it
to provide also conﬁdentiality for communication in AMI,
and enforce end-customers privacy through anonymization
techniques, so that the generated metering data could not be
linked to a particular SM/end-customer.
REFERENCES
[1] D. P. Chassin, “What can the smart grid do for you? and what
can you do for the smart grid,” Electricity Journal, Elsevier,
vol. 23, no. 5, pp. 57–63, June 2010.
[2] ASAP-SG,
“The
advanced
security
accelera-
tion
project,”
Open
SG
User
Group,
Online,
http://osgug.ucaiug.org/utilisec/amisec/,
(retrieved:
January
2012), Technical Guidline, June 2010.
[3] F. M. Cleveland, “Cyber security issues for advanced meter-
ing infrasttructure,” in IEEE Power and Energy Society Gen-
eral Meeting-Conversion and Delivery of Electrical Energy
in the 21st Century.
Pittsburgh, PA: IEEE, July 2008, pp.
1–5.
[4] A. J. Menzes, P. C. V. Oorschot, and S. A. Vanstone,
Handbook of Applied Cryptography.
CRC Press, 1997.
[5] C. Farell and S. Adams, “Internet x.509 public key infras-
tructure certiﬁcate management ptotocols. rfc 2510.”
[6] M. M. Fouda, Z. M. Dadlulah, N. Kato, R. Lu, and X. Shen,
“Towards a light-weight message authentication mechanism
tailored for smart grid communications,” in Int. Workshop on
Security in Computers, Networking and Commmunications.
Shanghai, China: IEEE, April 2011, pp. 1035–1040.
[7] L.
Chen,
“Identity-based
cryptography,”
International
School on Foundations of Security Analyses and Design,
http://www.sti.uniurb.it/events/fosad06/
(retrieved:
January
2012), 2006.
[8] H. K. H. So, S. H. M. Kwok, E. Y. Lam, and L. King-Shan,
“Zero-conﬁguration identity-based signcryption scheme for
smart grid,” in IEEE Int. Conf. on Smart Grid Communi-
cations, Gaithersburg, USA, October 2010, pp. 321–326.
[9] Y. Yan, Y. Qian, and H. Sharif, “A secure and reliable in-
network collaborative communication scheme for advanced
metering infrastructure in smart grid,” in Wireless Commu-
nications and Networking Conference.
Caucun, Mexique:
IEEE, March 2011, pp. 909–914.
[10] E. Ayday and S. Rajagopal, “Secure, intuitive and low-cost
device authentication for smart grid networks,” in IEEE Con-
sumer Communications Networking Conference, Las Vegas,
USA, January 2011, pp. 1161–1165.
[11] D. Hankerson, A. J. Menzes, and S. Vanstone, Guide to
Elliptic Curve Cryptography.
New-York: Springer-Verlag,
2004.
[12] G. Omahen, A. Souvent, and B. Luskovec, “Advanced meter-
ing infrastructure for slovenia,” in IEEE Conf. on Electricity
Distribution, Prague, Slovenia, June 2009, pp. 673–676.
[13] A.
Menzes,
“Introduction
to
pairing-based
cryptography,”
Online,
http://www.math.uwaterloo.ca/ ajmeneze/publications/pairings.pdf
(retrieved: January 2012).
[14] F. Hess, “Efﬁcient identity based signature schemes based
on pairings,” in SAC02 Revised Papers from the 9th Annual
International Workshop on Selected Areas in Cryptography.
London UK: Springer-Verlag, 2003, pp. 310–324.
68
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-189-2
ENERGY 2012 : The Second International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies

