128
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Recent Development and Applications of SUMO – Simulation of Urban MObility 
Daniel Krajzewicz, Jakob Erdmann, Michael Behrisch, and Laura Bieker 
Institute of Transportation Systems 
German Aerospace Center 
Rutherfordstr. 2, 12489 Berlin, Germany 
e-mail: Jakob.Erdmann@dlr.de, Daniel.Krajzewicz@dlr.de, Michael.Behrisch@dlr.de, Laura.Bieker@dlr.de 
 
 
Abstract—SUMO is an open source traffic simulation package 
including the simulation application itself as well as supporting 
tools, mainly for network import and demand modeling. 
SUMO helps to investigate a large variety of research topics, 
mainly in the context of traffic management and vehicular 
communications. We describe the current state of the package, 
its major applications, both by research topic and by example, 
as well as future developments and extensions. 
Keywords-microscopic 
traffic 
simulation; 
traffic 
management; open source; software 
I. 
 INTRODUCTION 
SUMO (“Simulation of Urban MObility”) [1][2] is a 
microscopic, inter- and multi-modal, space-continuous and 
time-discrete 
traffic 
flow 
simulation 
platform. 
The 
implementation of SUMO started in 2001, with a first open 
source release in 2002. There were two reasons for making 
the work available as open source under the gnu public 
license (GPL). The first was the wish to support the traffic 
simulation community with a free tool into which own 
algorithms can be implemented. Many other open source 
traffic simulations were available, but being implemented 
within a student thesis, they got unsupported afterwards. A 
major drawback – besides reinvention of the wheel – is the 
almost non-existing comparability of the implemented 
models or algorithms, and a common simulation platform is 
assumed to be of benefit here. The second reason for making 
the simulation open source was the wish to gain support 
from other institutions. 
Within the past ten years, SUMO has evolved into a full 
featured suite of traffic modeling utilities including a road 
network importer capable of reading different source 
formats, demand generation and routing utilities, which use a 
high variety of input sources (origin destination matrices, 
traffic counts, etc.), a high performance simulation usable for 
single junctions as well as whole cities including a “remote 
control” interface (TraCI, see Section II. D.) to adapt the 
simulation online and a large number of additional tools and 
scripts. The major part of the development is undertaken by 
the Institute of Transportation Systems at the German 
Aerospace Center (Deutsches Zentrum für Luft- und 
Raumfahrt, DLR). External parties supported different 
extensions to the simulation suite. 
In this paper, we will survey some of the recent 
developments and future prospects of SUMO. We start with 
an overview of the applications in the suite, showing how 
they help in preparing and performing a traffic simulation. 
Then, major research topics, which can be addressed using 
SUMO are presented. We then outline the usage of SUMO 
within some recent research projects. Finally, we present 
recent extensions and discuss current development topics. 
II. 
THE SUMO SUITE 
SUMO is not only a traffic simulation, but rather a suite 
of applications, which help to prepare and to perform the 
simulation of a traffic scenario. As the simulation application 
“sumo”, which is included in the suite, uses own formats for 
road networks and traffic demand, both have to be imported 
or generated from existing sources of different kind. Having 
the simulation of large-scale areas as the major application 
for sumo in mind, much effort has been put into the design 
and implementation of heuristics which determine missing, 
but needed attributes. 
In the following, the applications included in the suite are 
presented, dividing them by their purpose: network 
generation, demand generation, and simulation. 
A. Road Network Generation 
SUMO road networks represent real-world networks as 
graphs, where nodes are intersections, and roads are 
represented by edges. Intersections consist of a position, a 
shape, and right-of-way rules, which may be overwritten by 
a traffic light. Edges are unidirectional connections between 
two nodes and contain a fixed number of lanes. A lane 
contains geometry, the information about vehicle classes 
allowed on it, and the maximum allowed speed. Therefore, 
changes in the number of lanes along a road are represented 
using multiple edges. Such a view on road networks is 
common; though some other approaches, such as Vissim’s 
[3] network format or the OpenDRIVE [4] format, exist. 
Besides this basic view on a road network, SUMO road 
networks include traffic light plans, and connections between 
lanes across an intersections describing which lanes can be 
used to reach a subsequent lane. 
SUMO road networks can be either generated using an 
application named “netgenerate” or by importing a digital 
road map using “netconvert”. netgenerate builds three 
different kinds of abstract road networks: “manhattan”-like 
grid networks, circular “spider-net” networks, and random 
networks. Each of the generation algorithms has a set of 
options, which allow adjusting the network’s properties. 
Figure 1 shows examples of the generated networks. 
 

129
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
  
  
 
Figure 1.  Examples of abstract road networks as built using 
“netgenerate”; from left to right: grid (“manhattan”, spider, and random 
network) 
The road network importer netconvert converts networks 
from other traffic simulators such as VISUM [5], Vissim, or 
MATSim [6]. It also reads other common digital road 
network formats, such as shapefiles or OpenStreetMap [7]. 
Besides these formats, netconvert is also capable to read less 
known formats, such as OpenDRIVE or the RoboCup 
network format. Figures 2 and 3 show the capabilities to 
import road networks from OpenStreetMap by example, 
comparing the original rendering on OpenStreetMap’s web 
pages against SUMO rendering of the imported network.  
 
Figure 2.  Original OpenStreetMap network of Gothenborg. 
 
Figure 3.  Gothenborg network imported into SUMO. 
Additionally, netconvert reads a native, SUMO-specific, 
XML-representation of a road network graph referred to as 
“plain” XML, which allows the highest degree of control for 
describing a road network for SUMO. This XML 
representation is broken into five file types, each for 
description of nodes, edges, optionally edge types, 
connections, and (fixed) traffic light plans. Edge types name 
sets of default edge attributes, which can be referenced by 
the later loaded edges. Nodes describe the intersections, 
edges the road segments. Connections describe which lanes 
incoming into an intersection are connected to which 
outgoing lanes. The simulation network created by 
netconvert contains heuristically computed values wherever 
the inputs are incomplete as well as derived values such as 
the exact geometry at junctions. It is also possible to convert 
a simulation network back into the “plain” format. Multiple 
input formats can be loaded at the same time and are 
automatically merged. Since the “plain” format allows 
specifying the removal of network elements and the adaption 
of single edge and lane parameters, it can be used for a wide 
range 
of 
network 
modifications. 
To 
support 
such 
modifications SUMO additionally provides the python tool 
netdiff.py, which computes the (human-readable) difference 
D between two networks A and B. Loading A and D with 
netconvert reproduces B. 
Most of the available digital road networks are originally 
meant to be used for routing (navigation) purposes. As such, 
they often lack the grade of detail needed by microscopic 
road traffic simulations: the number of lanes, especially in 
front of intersections, information about which lanes 
approach which consecutive ones, traffic light positions and 
plans, etc., are missing. Sharing the same library for 
preparing generated/imported road networks, see Figure 4, 
both, netgenerate and netconvert, try to determine missing 
values using heuristics. A coarse overview on this 
preparation process can be found in [8]. However, most of 
the algorithms described in [8] have been reworked since its 
publication. Additional, optional heuristics guess locations of 
highway on- and off-ramps, roundabouts, traffic lights, etc. 
 
 
Figure 4.  Common network preparation procedure in netconvert and 
netgenerate. 
Even with the given functionality, it should be stated that 
preparing a real-world network for a microscopic simulation 

130
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
is still a time-consuming task, as the real-world topology of 
more complicated intersections often has to be improved 
manually. A new tool named “netedit” allows editing road 
networks graphically. This is in many cases simpler and 
faster than preparing XML input files. It also combines the 
otherwise separate steps of network generation and 
inspection with netconvert and the simulation GUI. netedit is 
not yet available for public use. 
B. Vehicles and Routes 
SUMO is a purely microscopic traffic simulation. Each 
vehicle is given explicitly, defined at least by a unique 
identifier, the departure time, and the vehicle’s route through 
the network. By “route” we mean the complete list of 
connected edges between a vehicle's start and destination. If 
needed, each vehicle can be described in a finer detail using 
departure and arrival properties, such as the lane to use, the 
velocity, or the exact position on an edge. Each vehicle can 
get a type assigned, which describes the vehicle’s physical 
properties and the variables of the used movement model. 
Each vehicle can also be assigned to one of the available 
pollutant or noise emission classes. Additional variables 
allow the definition of the vehicle’s appearance within the 
simulation’s graphical user interface. 
A simulation scenario of a large city easily covers one 
million vehicles and their routes. Even for small areas, it is 
hardly possible to define the traffic demand manually. The 
SUMO suite includes some applications, which utilize 
different sources of information for setting up a demand. 
For large-scale scenarios usually so-called “origin/ 
destination matrices” (O/D matrices) are used. They describe 
the movement between so-called traffic analysis zones 
(TAZ) in vehicle numbers per time. For use in SUMO these 
matrices must be disaggregated into individual vehicle trips 
with depart times spread across the described time span. 
Unfortunately, often, a single matrix is given for a single 
day, which is too imprecise for a microscopic traffic 
simulation since flows between two TAZ strongly vary over 
the duration of a day. For example, people are moving into 
the inner-city centers to get to work in the morning, and 
leave the inner-city area in the afternoon or evening. Such 
direction changes cannot be retrieved from an aggregated 
24h matrix. Much more useful but only sometimes available 
are matrices with a scale of 1h. The SUMO suite includes 
“od2trips”, an application for converting O/D matrices to 
single vehicle trips. An hourly load curve can be given as 
additional input for splitting the daily flows into more 
realistic hourly slices. Besides disaggregating the matrix, the 
application also optionally assigns an edge of the road 
network as depart/arrival position, respectively. The mapping 
from traffic assignment zones to edges must be supplied as 
another input. 
The resulting trips obtained from od2trips consist of a 
start and an end road together with a departure time. 
However, the simulation requires the complete list of edges 
to pass. Such routes are usually calculated by performing a 
dynamic user assignment (DUA). This is an iterative process 
employing a routing procedure such as shortest path 
calculation under different cost functions. Details on the 
models used in SUMO can be found in Section III.B. 
SUMO 
includes 
two 
further 
route 
computation 
applications. The first, “jtrrouter”, uses definitions of turn 
percentages at intersection for computing routes through the 
network. Such an approach can be used to set up the demand 
within a part of a city’s road network consisting of few 
nodes. The second, “dfrouter”, computes routes by using 
information from inductive loop or other cross-section 
detectors. This approach is quite successful when applied to 
highway scenarios where the road network does not contain 
rings and the highway entries and exits are completely 
covered by detectors. It fails on inner-city networks with 
rings or if the coverage with detectors is low. 
It should be noted, that, while digital representations of 
real-world road networks became available in good quality 
in recent years, almost no sources for traffic demand are 
freely available. Within most of our (DLR's) projects, a road 
administration authority was responsible for supporting the 
demand information, either in form of O/D-matrices or at 
least by supplying traffic counts, which were used to 
calibrate a model built on rough assumptions.  
Two tools enclosed in the SUMO package try to solve 
this problem by modeling the mobility wishes of a described 
population. “SUMO Traffic Modeler” by Leontios G. 
Papaleontiou [9] offers a graphical user interface allowing 
the user to set up demand sources and sinks graphically. 
“activitygen” written by Piotr Woznica and Walter 
Bamberger from TU Munich has almost the same 
capabilities, but has no user interface. Both tools are 
included in the suite and both use own models for creating 
mobility wishes for an investigated area, requiring different 
data. They are both under evaluation, currently. 
Figure 5 summarizes the possibilities to set up a demand 
for a traffic simulation using tools included in the SUMO 
package. 
 
inductive 
loop
measures
DFROUTER
routes
flows
turning 
ratios
O/D-matrix
OD2TRIPS
JTRROUTER
trips
DUAROUTER
ACTIVITYGEN
SUMO Traffic 
Modeler
 
Figure 5.  Supported methods for demand generation. 

131
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
C. Simulation 
The application “sumo” performs a time-discrete 
simulation. The default step length is 1s, but may be chosen 
to be lower, down to 1ms. Internally, time is represented in 
microseconds, stored as integer values. The maximum 
duration of a scenario is so bound to 49 days. The simulation 
model is space-continuous and internally, each vehicle’s 
position is described by the lane the vehicle is on and the 
distance from the beginning of this lane. When moving 
through the network, each vehicle’s speed is computed using 
a so-called car-following model. Car-following models 
usually compute an investigated vehicle’s (ego) speed by 
looking at this vehicle’s speed, its distance to the leading 
vehicle (leader), and the leader’s speed. SUMO uses an 
extension of the stochastic car-following model developed 
by Stefan Krauß [10] per default. Krauß’ model was chosen 
due to its simplicity and its high execution speed. 
The model by Krauß has proved to be valid within a set 
of performed car-following model comparisons [11][12][13]. 
Nonetheless, it has some shortcomings, among them its 
conservative gap size, yielding in a too low gap acceptance 
during lane changing, and the fact that the model does not 
scale well when the time step length is changed. To deal with 
these issues, an application programmer interface (API) for 
implementing other car-following models was added to 
sumo. Currently, among others, the following models are 
included: the intelligent driver model (IDM) [14], Kerner’s 
three-phase model [15], and the Wiedemann model [16]. It 
must be stated, though, that different problems were 
encountered when using these models in complex road 
networks, probably due to undefined side-constraints and/or 
assumptions posed by the simulation framework. For this 
reason, the usage of different car-following models should be 
stated to be experimental only, at the current time. Being a 
traffic flow simulation, there are only limited possibilities to 
reflect individual driver behavior; it is however possible to 
give each vehicle its own set of parameters (ranging from 
vehicle length to model parameters like preferred headway 
time) and even to let different models run together. The 
computation of lane changing is done using a model 
developed during the implementation of SUMO [17]. 
Two versions of the traffic simulation exist. The 
application “sumo” is a pure command line application for 
efficient batch simulation. The application “sumo-gui” offers 
a graphical user interface (GUI) rendering the simulation 
network and vehicles using openGL. The visualization can 
be customized in many ways, i.e., to visualize speeds, 
waiting times and to track individual vehicles. Additional 
graphical elements – points-of-interest (POIs), polygons, and 
image decals – allow to improve a scenario’s visual 
appearance. The GUI also offers some possibilities to 
interact with the scenario, e.g. by switching between 
prepared traffic signal programs, changing reroute following 
grades, etc. Figure 6 shows a single intersection simulated in 
sumo-gui. sumo-gui offers all features the command line 
version sumo supports. 
 
 
Figure 6.  Screenshot of the graphical user interface coloring vehicles by 
their CO2 emission. 
SUMO allows generating various outputs for each 
simulation run. These range from simulated inductive loops 
to single vehicle positions written in each time steps for all 
vehicles and up to complex values such as information about 
each vehicle’s trip or aggregated measures for all streets 
and/or lanes. Besides conventional traffic measures, SUMO 
was extended by a noise emission and a pollutant emission / 
fuel consumption model, see also Section V.A. All output 
files generated by SUMO are in XML-format. 
D. On-Line Interaction 
In 2006, the simulation was extended by the possibility to 
interact with an external application via a socket connection. 
This API, called “TraCI” for “Traffic Control Interface” was 
implemented by Axel Wegener and his colleagues at the 
University of Lübeck [18], and was made available as a part 
of SUMO’s official release. Within the iTETRIS project, see 
Section IV.B, this API was reworked, integrating it closer 
into SUMO’s architecture. 
To enable on-line interaction, SUMO has to be started 
with an additional option, which obtains the port number to 
listen to. After the simulation has been loaded, SUMO starts 
to listen on this port for an incoming connection. After being 
connected, the client is responsible for triggering simulation 
steps in SUMO as well as for closing down the connection 
what also forces the simulation to quit. The client can access 
values from almost all simulation artifacts, such as 
intersections, edges, lanes, traffic lights, inductive loops, and 
of course vehicles. The client may also change values, for 
example instantiate a new traffic light program, change a 
vehicle’s velocity or force it to change a lane. This allows 
complex interaction such as online synchronization of traffic 
lights or modeling special behavior of individual vehicles. 
While DLR uses mainly a client-library written in Python 
when interacting with the simulation, the client can be 
written in any programming language as long as TCP sockets 
are supported. A Python API as well as a freely available 
Java API [19] are included with SUMO and support for other 
programming languages may follow. 

132
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
III. 
RESEARCH TOPICS 
In the following, the major research topics addressed 
using SUMO are presented. The list is mainly based on 
observations of published papers which cite SUMO. 
A. Vehicular Communication 
The probably most popular application for the SUMO 
suite is modeling traffic within research on V2X – vehicle-
to-vehicle and vehicle-to-infrastructure – communication. In 
this context, SUMO is often used for generating so-called 
“trace 
files”, 
which 
describe 
the 
movement 
of 
communication nodes by converting the output of a SUMO 
simulation into a format the used communication simulator 
can read. Such a post-processing procedure allows feeding a 
communication simulator with realistic vehicle behavior, but 
fails on simulating the effects of in-vehicle applications that 
change the vehicles’ behavior. To investigate these effects, a 
combined simulation of both, traffic and communication is 
necessary [20]. For such research, SUMO is usually coupled 
to an external communication simulation, such as ns2 or ns3 
[21] using TraCI. For obtaining a functioning environment 
for the simulation of vehicular communications, a further 
module that contains the model of the V2X application to 
simulate is needed. Additionally, synchronization and 
message exchange mechanisms have to be involved. 
TraNS [22] was a very popular middleware for V2X 
simulation realizing these needs. It was build upon SUMO 
and ns2. Here, TraNS’ extensions to ns2 were responsible for 
synchronizing the simulators and the application had also to 
be modeled within ns2. TraNS was the major reason for 
making TraCI open source. After the end of the projects the 
original TraNS authors were working on, TraNS was no 
longer maintained. Since the TraCI API was changed after 
the last TraNS release, TraNS only works with an outdated 
version of SUMO. 
A modern replacement for TraNS was implemented 
within the iTETRIS project [23]. The iTETRIS system 
couples SUMO and ns2’s successor ns3. ns3 was chosen 
because ns2 was found to be unstable when working with a 
large number of vehicles. Within the iTETRIS system, the 
“iTETRIS Control System”, an application written in c++ is 
responsible for starting and synchronizing the involved 
simulators. The V2X applications are modeled as separate, 
language-agnostic programs. This clear distribution of 
responsibilities allows to implement own applications 
conveniently in the user’s favorite programming language. 
The Veins framework [20] couples SUMO and 
OMNET++ [24], a further communication simulator. A 
further, very flexible approach for coupling SUMO with 
other applications is the VSimRTI middleware developed by 
Fraunhofer Fokus [25]. Its HLA-inspired architecture not 
only allows the interaction between SUMO and other 
communication simulators. It is also able to connect SUMO 
and Vissim, a commercial traffic simulation package. In 
[25], a system is described where SUMO was used to model 
large-scale areas coarsely, while Vissim was used for a fine-
grained simulation of traffic intersections. 
Many vehicular communication applications target at 
increasing traffic safety. It should be stated, that up to now, 
microscopic traffic flow models are not capable of modelling 
real collisions and thus derive safety-related measures 
indirectly, for instance by detecting full braking. SUMO’s 
strength lies in simulation of V2X applications that aim at 
improving 
traffic 
efficiency. 
Additionally, 
evaluating 
concepts for forwarding messages to their defined 
destination (“message routing”) can be done using SUMO, 
see, for example, [26] or [27]. 
B. Route Choice and Dynamic Navigation 
The assignment of proper routes to a complete demand or 
a subset of vehicles is investigated both, on a theoretical base 
as well as within the development of new real-world 
applications. On the theoretical level, the interest lies in a 
proper modeling of how traffic participants choose a route – 
a path through the given road network – to their desired 
destination. As the duration to pass an edge of the road graph 
highly depends on the numbers of participants using this 
edge, the computation of routes through the network under 
load is a crucial step in preparing large-scale traffic 
simulations. Due to its fast execution speed, SUMO allows 
to investigate algorithms for this “user assignment” or 
“traffic assignment” process on a microscopic scale. Usually, 
such algorithms are investigated using macroscopic traffic 
flow models, or even using coarser road capacity models, 
which ignore effects such as dissolving road congestions. 
The SUMO suite supports such investigations using the 
duarouter application. Two algorithms for computing a user 
assignment are implemented, c-logit [28] and Gawron’s [29] 
dynamic user assignment algorithm. Both are iterative and 
therefore time consuming. Possibilities to reduce the duration 
to compute an assignment were evaluated and are reported in 
[30]. A further possibility to reduce the computational effort 
is given in [31]. Here, vehicles are routed only once, directly 
by the simulation and the route choice is done based on a 
continuous adaptation of the edge weights during the 
simulation. 
Practical applications for route choice mechanisms arise 
with the increasing intelligence of navigation systems. 
Modern navigation systems as Tom Tom’s IQ routes ([32]) 
use on-line traffic information to support the user with a 
fastest route through the network regarding the current 
situation on the streets. One research topic here is to develop 
new 
traffic 
surveillance 
methods, 
where 
vehicular 
communication is one possibility. With the increased 
penetration rate of vehicles equipped with a navigation 
device, further questions arise: what happens if all vehicles 
get the same information? Will they all use the same route 
and generate new congestions? These questions are not only 
relevant for drivers, but also for local authorities as 
navigation devices may invalidate concepts for keeping 
certain areas calm by routing vehicles through these areas. 
SUMO allows addressing these topics, see, e.g., [33]. 
C. Traffic Light Algorithms 
The evaluation of developed traffic light programs or 
algorithms for making traffic lights adaptable to current 
traffic situation is one of the main applications for 
microscopic traffic flow simulations. As SUMO’s network 

133
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
model is relatively coarse compared to commercial 
applications such as Vissim, SUMO is usually not used by 
traffic engineers for evaluating real-life intersections. Still, 
SUMO’s fast execution time and its open TraCI API for 
interaction with external applications make it a good 
candidate for evaluating new traffic control algorithms in 
abstract scenarios. 
The first investigation in traffic lights was performed 
within the project “OIS” [34] where a traffic light control 
algorithm, which used queue lengths determined by image 
processing should have been evaluated. As a real-world 
deployment of the OIS system was not possible due to legal 
constraints, the evaluation had to be done using a simulation. 
The simulation was prepared by implementing a real-world 
scenario, including real-world traffic light programs. The 
simulation application itself was extended by a simulated 
sensor, which allowed retrieving queue lengths in front of the 
intersection similar to the real image processing system. The 
traffic light control was also implemented directly into the 
simulation. At the end, the obtained simulation of OIS-based 
traffic control was compared against the real-world traffic 
lights, [34] shows the results. 
In ORINOKO, a German project on traffic management, 
the focus was put on improving the weekly switch plans 
within the fair trade center area of the city of Nürnberg. 
Here, the initial and the new algorithm for performing the 
switch procedure between two programs were implemented 
and evaluated. Additionally, the best switching times were 
computed by a brute-force iteration over the complete 
simulated day and the available switch plans. 
By distinguishing different vehicle types, SUMO also 
allowed to simulate a V2X-based emergency vehicle 
prioritization at intersections [35]. Other approaches for 
traffic light control were also investigated and reported by 
other parties, see, e.g., [36], or [37]. 
As mentioned before, the first investigations were 
performed by implementing the traffic light algorithms to 
evaluate directly into the simulation’s core. Over the years, 
this approach was found to be hard to maintain. Using TraCI 
seems to be a more sustainable procedure currently. 
D. Evaluation of Traffic Surveillance Systems 
Simulation-based evaluation of surveillance systems 
mainly targets on predicting whether and to what degree the 
developed surveillance technology is capable to fulfill the 
posed needs at an assumed rate of recognized and/or 
equipped vehicles. Such investigations usually compare the 
output of the surveillance system, fed with values from the 
simulation to the according output of the simulation. An 
example will be given later, in Section IV.A. on the project 
“TrafficOnline”. 
A direct evaluation of traffic surveillance systems’ 
hardware, for example image processing of screenshots of 
the simulated area, is uncommon, as the simulation models 
of vehicles and the environment are too coarse for being a 
meaningful input to such systems. Nonetheless, the 
simulation can be used to compute vehicle trajectories, 
which can be enhanced to match the inputs needed by the 
evaluated system afterwards. An example of such an 
investigation is the evaluation of hyperspectral sensors 
reported in [38]. 
Besides evaluating developed surveillance systems, 
possibilities to incorporate traffic measurements of various 
kinds into a simulation are evaluated, see for example 
Section IV.C. on “VABENE”. 
IV. 
RECENT AND CURRENT PROJECTS 
SUMO was used in past research projects performed by 
the DLR and other parties. In the following, some of the 
recently performed projects are described. 
A. TrafficOnline 
Within the TrafficOnline project, a system for 
determining travel times using GSM telephony data was 
designed, implemented, and evaluated. SUMO was used to 
validate this system’s functionality and robustness. In the 
following, we focus on the simulation’s part only, neither 
describing the TrafficOnline system itself, nor the evaluation 
results. 
The outline for using the simulation was as follows. 
Real-world scenarios were set up in the simulation. When 
being executed, the simulation was responsible for writing 
per-edge travel time information as well as simulated 
telephony behavior values. The TrafficOnline system itself 
obtained the latter, only, and computed travel times in the 
underlying road network. These were then compared to the 
travel times computed by the simulation. The overall 
procedure is shown in Figure 7. 
 
 
Figure 7.  Overall process of TrafficOnline validation. 
The evaluation was performed using scenarios located in 
and around Berlin, Germany, which covered urban and 
highway situations. The road networks were imported from a 
NavTeq database. Manual corrections were necessary due to 
the limits of digital road networks described earlier in 
Section II.A.  
 
 
Figure 8.  Validation of the traffic flows in TrafficOnline. 
Measurements from inductive loops were used for traffic 
modeling. Figure 8 shows two examples of validating the 
traffic simulation by comparing simulated (black) and real-

134
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
world inductive loop measures (blue, where dark blue 
indicates the average value). For validating the robustness of 
the TrafficOnline system, scenario variations have been 
implemented, by adding fast rail train lines running parallel 
to a highway, or by implementing additional bus lanes, for 
example. Additionally, scenario variations have been built by 
scaling the simulated demand by +/- 20%. 
For validating the TrafficOnline system, a model of 
telephony behavior was implemented, first. The telephony 
model covered the probability to start a call and a started 
call’s duration, both retrieved from real-world data. For an 
adequate simulation of GSM functionality, the real-world 
GSM cell topology was put onto the modeled road networks. 
It should be noted, that dynamic properties of the GSM 
network, such as cell size variations, or delays on passing a 
cell border, have not been considered. Figure 9 shows the 
results of validating the simulated telephone call number 
(black) against the numbers found in real-world data (green, 
dark green showing the average call number) over a day for 
two selected GSM cells. 
 
 
Figure 9.  Validation of the telephony behavior in TrafficOnline. 
B. iTETRIS 
The interest in V2X communication is increasing but the 
deployment of this technology is still expensive, and ad-hoc 
implementations of new traffic control systems in the real 
world may even be dangerous. For research studies where 
the benefits of a system are measured before it is deployed, a 
simulation framework, which simulates the interaction 
between vehicles and infrastructure is needed, as described 
in III.A. The aim of the iTETRIS project was to develop 
such a framework, coupling the communication simulator 
ns3 and SUMO using an open source system called “iCS” – 
iTETRIS Control System – which had to be developed 
within the project. In contrary to other, outdated solutions 
such as TraNS, iTETRIS was meant to deliver a sustainable 
product, supported and continued to be developed after the 
project’s end. 
Besides implementing the V2X simulation system itself, 
which was already presented in Section III.A., the work 
within iTETRIS included a large variety of preparation tasks 
and – after completing the iCS implementation – the 
evaluation of traffic management applications as well as of 
message routing protocols. 
The preparations mainly included the investigation of 
real world traffic problems and their modelling in a 
simulation environment. The city of Bologna, who was a 
project partner in iTETRIS, supported traffic simulation 
scenarios covering different parts of the town, mainly as 
inputs for the simulations Vissim and VISUM, both 
commercial products of PTV AG. These scenarios were 
converted into the SUMO-format using the tools from the 
SUMO package. Besides the road networks and the demand 
for the peak hour between 8:00am and 9:00am, they included 
partial definitions of the traffic lights, public transport, and 
other infrastructure information. 
One of the project’s outputs is a set of in-depth 
descriptions of V2X-based traffic management applications, 
including different attempts 
for 
traffic surveillance, 
navigation, and traffic light control. In the following, one of 
these applications, the bus lane management, is described, 
showing the complete application design process, starting at 
problem recognition, moving over the design of a 
management application that tries to solve it, and ending at 
its evaluation using the simulation system. A more detailed 
report on this application is [39]. 
Public transport plays an important role within the city of 
Bologna, and the authorities are trying to keep it attractive by 
giving lanes, and even streets free to public busses only. On 
the other hand, the city is confronted with event traffic – e.g., 
visitors of football matches, or the fair trade centre – coming 
in the form of additional private passenger cars. One idea 
developed in iTETRIS was to open bus lanes for private 
traffic in the case of additional demand due to such an event. 
The application was meant to include two sub-systems. The 
first one was responsible for determining the state on the 
roads. The second one used this information to decide 
whether bus lanes shall be opened for passenger cars and 
should inform equipped vehicles about giving bus lanes for 
usage. 
Figure 10.  Speed information collection by RSUs. Each dot represents one 
data point, the color represents the speed (green means fast, red slow). 
In order to use standardised techniques, traffic 
surveillance was implemented by collecting and averaging 
the speed information contained in the CAMs (cooperative 
awareness messages) at road side units (RSUs) placed at 
major intersections (see Figure 10). As soon as the average 
speed falls below a threshold, the application, assuming a 
high traffic amount, gives bus lanes free for passenger cars. 
The RSU sends then the information about free bus lanes to 
vehicles in range. 
The evaluations show that the average speed was usable 
as an indicator for an increase of traffic demand. Though, as 

135
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
the usage of this measure is rather uncommon, further 
investigations and validations should be performed. When 
coming to measure the benefits of using bus-lanes for private 
vehicles, the application did not prove its benefits at all. At 
higher penetration rates, the average travel time of all 
distinguished transport modes – busses, vehicles not 
equipped with V2X devices, equipped vehicles, as well as 
rerouted vehicles – climbs above the respective average 
travel times without the application. The main reason is that 
vehicles, which use bus lanes tend to either decelerate the 
busses or are blocked by busses. 
 
Figure 11.  Average travel times changes per vehicle class over equipment 
rates. 
The results show, that a naive implementation of the 
application does not take into account traffic behaviour and 
degrades with increasing penetration rate. This effect was 
observed in studies on other V2X-based traffic management 
applications as well. It also shows that proper design and a 
fine-grained evaluation of developed applications are 
needed. 
C. VABENE 
Big events or catastrophes may cause traffic jams and 
problems to the transport systems, causing additional danger 
for the people who live in the area. Public authorities are 
responsible for taking preparatory actions to prevent the 
worst case. The objective of VABENE is to implement a 
system that supports public authorities to decide which 
action should be taken. This system is the successor of 
demonstrators used during the pope’s visit in Germany in 
2005 and during the FIFA World Cup in 2006. 
One focus of VABENE lies on simulating the traffic of 
large cities. The system shows the current traffic state of the 
whole traffic network, helping the traffic manager to realize 
when a critical traffic state will be reached. To simulate the 
traffic of a large region such as Munich and the area around 
Munich at multiple real-time speed, a mesoscopic traffic 
model was implemented into SUMO. This model has not yet 
been released to the public and is available for internal 
proposes only. 
Similar to the TrafficOnline Project (Section A), the road 
networks were imported from a NavTeq database and 
adapted manually where needed. The basic traffic demand 
was computed from O/D-matrices supplied by traffic 
authorities. 
The simulation is restarted every 10 minutes, loads a 
previously saved state of the road network and computes the 
state for half an hour ahead. While running, the simulation 
state is calibrated using traffic measurements from various 
sources such as inductive loops, floating car data and (if 
available) an airborne traffic surveillance system. This 
calibration is performed by comparing simulated vehicle 
counts with measured vehicle counts at all network edges for 
which measurements are currently available. Depending on 
this comparison, vehicles are removed prematurely from the 
simulation or new vehicles are inserted. Also, the maximum 
speed for each edge is set to the average measured speed.  
A crucial part of this calibration procedure is the 
selection of a route for inserted vehicles. This is 
accomplished by building a probability distribution of 
possible routes for each network edge out of the basic traffic 
demand and then sampling from this distribution. 
The accuracy of the traffic prediction depends crucially 
on the accuracy of the basic traffic demand. To lessen this 
problem we are currently investigating the use of historical 
traffic measurements to calibrate the simulation wherever 
current measurements are not yet available. However, this 
approach carries the danger of masking unusual traffic 
developments, which might already be foreseeable from the 
latest measurements.  
Both, the current traffic state as well as the prediction of 
the future state is presented to the authorities in a browser-
based management interface. The management interface 
allows to investigate the sources of collected information, 
including inductive loops, airborne and conventional images, 
as well as to monitor routes or evaluate the network’s current 
accessibility, see Figure 12. 
 
 
Figure 12.  Screenshot of the “EmerT” portal used in VABENE showing 
travel time isochrones. 
D. CityMobil 
Microscopic traffic simulations also allow the evaluation 
of large scale effects of changes in vehicle or driver behavior 
such as the introduction of automated vehicles or 
electromobility. The former was examined with the help of 

136
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
SUMO in the EU project CityMobil where different 
scenarios of (partly) automated cars or personal rapid transit 
were set up on different scales, from a parking area up to 
whole cities. 
On a small scale, the benefits of an autonomous bus 
system were evaluated. In this scenario, busses are informed 
about waiting passengers and adapt their routes to this 
demand. On a large scale, the influence of platooning 
vehicles was investigated, using the model of a middle-sized 
city of 100.000 inhabitants. Both simulations showed 
positive effects of transport automation. 
V. 
RECENT EXTENSIONS 
A. Emission and Noise Modeling 
Within the iTETRIS project, SUMO was extended by a 
model for noise emission and a model for pollutant emission 
and fuel consumption. This was required within the project 
for evaluating the ecological influences of the developed 
V2X applications. 
Both models are based on existing descriptions. 7 models 
for noise emission and 15 pollutant emission / fuel 
consumption models were evaluated, first. The parameter 
they need and their output were put against values available 
within the simulation and against the wanted output, 
respectively. Finally, HARMONOISE [40] was chosen as 
noise emission model. Pollutant emission and fuel 
consumption is implemented using a continuous model 
derived from values stored in the HBEFA database [41]. 
The pollutant emission model’s implementation within 
SUMO allows to collect the emissions and fuel consumption 
of a vehicle over the vehicle’s complete ride and to write 
these values into a file. It is also possible to write collected 
emissions for lanes or edges for defined, variable 
aggregation time intervals. The only available noise output 
collects the noise emitted on lanes or edges within pre-
defined time intervals, a per-vehicle noise collecting output 
is not available. Additionally, it is possible to retrieve the 
noise, emitted pollutants, and fuel consumption of a vehicle 
in each time step via TraCI, as well as to retrieve collected 
emissions, consumption, and noise level for a lane or a road. 
Besides measuring the level of emissions or noise for 
certain scenarios, the emission computation was also used 
for investigating new concepts of vehicle routing and 
dependencies between the traffic light signal plans and 
emissions [42]. 
B. Person-based Intermodal Traffic Simulation 
A rising relevance of intermodal traffic can be expected 
due to ongoing urbanization and increasing environmental 
concerns. To accommodate this trend SUMO was extended 
by capabilities for simulating intermodal traffic. We give a 
brief account of the newly added concepts. 
The conceptual center of intermodal traffic is the 
individual person. This person needs to undertake a series of 
trips where each may be taken with a different mode of 
transport such as personal car, public bus or walking. Trips 
may include traffic related delays, such as waiting in a jam, 
waiting for a bus or waiting to pick up an additional 
passenger. It is important to note that earlier delays influence 
later trips of a simulated person. The above concept is 
reflected in an extension of the SUMO route input. One can 
now specify a person as a list of rides, stops and walks. A 
ride can stand for any vehicular transportation, both private 
and public. It is specified by giving a starting edge, ending 
edge and a specification of the allowed vehicles. Stops 
correspond to non-traffic related activities such as working 
or shopping. A walk models a trip taken by foot but it can 
also stand for other modes of transport that do not interfere 
with road traffic. Another extension concerns the vehicles. In 
addition to their route, a list of stops and a line attribute can 
be assigned. Each stop has a position, and a trigger which 
may be either a fixed time, a waiting time or the id of a 
person for which the vehicle must wait. The line attribute can 
be used to group multiple vehicles as a public transport 
route. 
These few extensions are sufficient to express the above 
mentioned person trips. They are being used within the 
TAPAS [43][44] project to simulate intermodal traffic for 
the city of Berlin. Preliminary benchmarks have shown that 
the simulation performance is hardly affected by the 
overhead of managing persons. In the future the following 
issues will be addressed: 
• 
Online rerouting of persons. At the moment routing 
across trips must be undertaken before the start of the 
simulation. It is therefore not possible to compensate a 
missed bus by walking instead of waiting for the next 
bus. 
• 
Smart integration of bicycles. Depending on road 
infrastructure bicycle traffic may or may not interact 
with road traffic. 
• 
Import modules for importing public time tables. 
VI. 
CURRENT DEVELOPMENT 
As shown, the suite covers a large variety of 
functionalities, and most of them are still under research. In 
the past, applications from the SUMO suite were adapted to 
currently investigated projects’ needs, while trying to keep 
the already given functionality work. This development 
context will be kept for the next future, and major changes 
in functionality are assumed to be grounded on the 
investigated research questions. Nonetheless, a set of 
“strategic” work topics exist and will be presented in the 
following sub-sections. They mainly target on increasing the 
simulation’s validity as well as the number of situations the 
simulation is able to replicate, and on establishing the 
simulation as a major tool for evaluation of academic 
models and algorithms for both traffic simulation as well as 
for evaluation of traffic management applications. 
A. Car-Following and Lane-Change API 
One of the initial tasks SUMO was developed for was the 
comparison of traffic flow models, mainly microscopic car-
following and lane-changing models. This wish requires a 
clean implementation of the models to evaluate. Within the 
iTETRIS project, first steps towards using other models than 

137
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
the used Krauß extension for computing the vehicles’ 
longitudinal movement were taken by implementing an API 
for embedding other car-following models. Some initial 
implementations of other models exist, though not all of 
them are able to deal correctly with multi-lane urban traffic. 
What is already possible to do with car-following models is 
also meant to be implemented for lane-change models. 
B. Model Improvements 
While evaluation of academic driver behavior models is 
one of the aimed research topics, most models are 
concentrating 
to 
describe 
a 
certain 
behavior, 
e.g., 
spontaneous jams, making them inappropriate to be used 
within complex scenarios which contain a large variety of 
situations. In conclusion, next steps of SUMO development 
will go beyond established car-following models. Instead, an 
own model will be developed, aiming on its variability 
mainly. 
C. Interoperability 
SUMO is not the only available open source traffic 
simulation platform. Some other simulators, such as 
MATsim, offer their own set of tools for demand generation, 
traffic assignment etc. It is planned to make these tools being 
usable in combination with SUMO by increasing SUMO’s 
capabilities to exchange data. Besides connecting with other 
traffic simulation packages, SUMO is extended for being 
capable to interact with driving or world simulators. Within 
the DLR project “SimWorld Urban”, SUMO is connected to 
the DLR driver simulator, allowing to perform simulator test 
drives through a full-sized and populated city area. 
VII. SUMMARY 
We have presented a coarse overview of the microscopic 
traffic simulation package SUMO, presenting the included 
applications along with some common use cases, and the 
next development steps. The number of projects and the 
different scales (from single junction traffic light control to 
whole city simulation) present the capabilities of the 
simulation suite. Together with its import tools for networks 
and demand and recently added features such as emission 
modeling and the powerful TraCI interface, SUMO aims to 
stay one of the most popular simulation platforms not only in 
the field of vehicular communication. We kindly invite the 
reader to participate in the ongoing development and 
implement his or her own algorithms and models. Further 
information can be obtained via the project’s web site [2]. 
 
REFERENCES 
 
[1] M. Behrisch, L. Bieker, J. Erdmann, and D. Krajzewicz, 
“SUMO - Simulation of Urban MObility: An Overview,” in 
SIMUL 2011, The Third International Conference on 
Advances in System Simulation, 2011. 
[2] DLR 
and 
contributors, 
SUMO 
Homepage 
[Online], 
http://sumo.sourceforge.net/, accessed July 03, 2012. 
[3] PTV AG, Vissim homepage [Online], http://www.ptv-
vision.com/en-uk/products/vision-traffic-suite/ptv-
vissim/overview/, accessed July 03, 2012. 
[4] OpenDRIVE consortium, OpenDRIVE homepage [Online], 
http://www.opendrive.org/, accessed July 03, 2012. 
[5] PTV AG, VISUM homepage [Online], http://www.ptv-
vision.com/de/produkte/vision-traffic-suite/ptv-visum/, 
accessed July 03, 2012. 
[6] MATSim 
homepage 
[Online], 
http://www.matsim.org/, 
accessed July 03, 2012. 
[7] OpenStreetMap 
homepage 
[Online], 
http://www.openstreetmap.org/, accessed July 03, 2012. 
[8] D. Krajzewicz, G. Hertkorn, J. Ringel, and P. Wagner, 
“Preparation of Digital Maps for Traffic Simulation; Part 1: 
Approach and Algorithms,” in Proceedings of the 3rd 
Industrial Simulation Conference 2005, pp. 285–290. 
EUROSIS-ETI. 3rd Industrial Simulation Conference 2005, 
Berlin (Germany). ISBN 90-77381-18-X. 
[9] L. G. Papaleondiou and M. D. Dikaiakos,  “TrafficModeler: A 
Graphical Tool for Programming Microscopic Traffic 
Simulators through High-Level Abstractions,” in Proceedings 
of the 69th IEEE Vehicular Technology Conference, VTC 
Spring 2009, Spain, 2009. 
[10] S. Krauß, “Microscopic Modeling of Traffic Flow: 
Investigation of Collision Free Vehicle Dynamics,” PhD 
thesis, 1998. 
[11] E. Brockfeld, R. Kühne, and P. Wagner, “Calibration and 
Validation of Microscopic Traffic Flow Models,” in 
Transportation Research Board [ed.]: TRB 2004 Annual 
Meeting, pp. 62–70, TRB Annual Meeting, Washington, DC 
(USA) 2004. 
[12] E. Brockfeld and P. Wagner, “Testing and Benchmarking of 
Microscopic Traffic Flow Models,” in Proceedings of the 
10th World Conference on Transport Research, pp. 775-776, 
WCTR04 - 10th World Conference on Transport Research, 
Istanbul (Turkey) 2004. 
[13] E. Brockfeld, R. Kühne, and P. Wagner, “Calibration and 
Validation 
of 
Microscopic 
Traffic 
Flow 
Models,” 
Transportation Research Records, 1934, pp. 179–187, 2005. 
[14] M. Treiber and D. Helbing, “Realistische Mikrosimulation 
von 
Strassenverkehr 
mit 
einem 
einfachen 
Modell,” 
Symposium Simulationstechnik (ASIM), 2002. 
[15] B. Kerner, S. Klenov, and A. Brakemeier, “Testbed for 
wireless vehicle communication: A simulation approach 
based on three-phase traffic theory,” in Proceedings of the 
IEEE Intelligent Vehicles Symposium (IV’08), pp. 180–185, 
2008. 
[16] R. Wiedemann, „Simulation des Straßenverkehrsflußes,“ in 
Heft 8 der Schriftenreihe des IfV, Institut für Verkehrswesen, 
Universität Karlsruhe, 1974. 
[17] D. Krajzewicz, “Traffic Simulation with SUMO - Simulation 
of Urban Mobility,” in J. Barceló, “Fundamentals of Traffic 
Simulation,” International Series in Operations Research and 
Management Science. Springer, pp. 269–294, ISBN 978-1-
4419-6141-9. ISSN 0884-8289, 2010. 
[18] A. Wegener, M. Piórkowski, M. Raya, H. Hellbrück, S. 
Fischer, and J.-P. Hubaux, “TraCI: An Interface for Coupling 
Road Traffic and Network Simulators,” in Proceedings of the 
11th communications and networking simulation symposium, 
2008. 
[19] Politecnico 
di 
Torino, 
TraCI4J 
Homepage 
[Online], 
http://sourceforge.net/apps/mediawiki/traci4j/index.php?title=
Main_Page, accessed July 09, 2012. 
[20] C. Sommer, Z. Yao, R. German, and F. Dressler, “On the 
need for bidirectional coupling of road traffic microsimulation 
and network simulation,” in Proceedings of the 1st ACM 
SIGMOBILE workshop on Mobility models, pp. 41–48, 
2008. 
[21] ns3 Homepage [Online], http://www.nsnam.org/, accessed 
January 26, 2011. 

138
International Journal on Advances in Systems and Measurements, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/systems_and_measurements/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[22] M. Piórkowski, M. Raya, A. Lugo, P. Papadimitratos, M. 
Grossglauser, and J.-P. Hubaux, “TraNS: Realistic Joint 
Traffic and Network Simulator for VANETs,” ACM 
SIGMOBILE Mobile Computing and Communications 
Review, pp. 31-33, 2008. 
[23] iTETRIS Homepage [Online], http://www.ict-itetris.eu/10-10-
10-community/, accessed July 09, 2012. 
[24] OMNET++ Homepage [Online], http://www.omnetpp.org/, 
accessed July 09, 2012. 
[25] D. Rieck, B. Schuenemann, I. Radusch, and C. Meinel, 
“Efficient Traffic Simulator Coupling in a Distributed V2X 
Simulation Environment,” in SIMUTools '10: Proceedings of 
the 3rd International ICST Conference on Simulation Tools 
and Techniques, Torremolinos, Malaga, Spain, 2010. ICST 
(Institute for Computer Sciences, Social-Informatics and 
Telecommunications Engineering), ICST, Brussels, Belgium, 
pp. 1-9, ISBN: 978-963-9799-87-5. 
[26] D. Borsetti and J. Gozalvez, “Infrastructure-Assisted Geo-
Routing for Cooperative Vehicular Networks,” in Proceedings 
of the 2nd IEEE (*) Vehicular Networking Conference (VNC 
2010), 2010, New Jersey (USA). 
[27] M. A. Leal, M. Röckl, B. Kloiber, F. de Ponte-Müller, and T. 
Strang, 
“Information-Centric 
Opportunistic 
Data 
Dissemination in Vehicular Ad Hoc Networks,” in 
International IEEE Conference on Intelligent Transportation 
Systems (ITSC), 2010, Madeira Island (Portugal). 
[28] E. Cascetta, A. Nuzzolo, F. Russo, and A. Vitetta, “A 
modified logit route choice model overcoming path 
overlapping problems,” in Transportation and traffic theory: 
Proceedings of the 13th International Symposium on 
Transportation and Traffic Theory. Pergamon Press, Lyon, 
France, 1996. 
[29] C. 
Gawron, 
“Simulation-based 
traffic 
assignment 
– 
computing user equilibria in large street networks,” Ph.D. 
Dissertation, University of Köln, Germany, 1998 
[30] M. Behrisch, D. Krajzewicz, and Y.-P. Wang, “Comparing 
performance and quality of traffic assignment techniques for 
microscopic road traffic simulations,” in Proceedings of 
DTA2008. DTA2008 International Symposium on Dynamic 
Traffic Assignment, Leuven (Belgien), 2008. 
[31] M. Behrisch, D. Krajzewicz, P. Wagner, and Y.-P. Wang, 
“Comparison of Methods for Increasing the Performance of a 
DUA Computation,” in Proceedings of DTA2008. DTA2008 
International Symposium on Dynamic Traffic Assignment, 
Leuven (Belgien), 2008. 
[32] R.-P. Schäfer, “IQ routes and HD traffic: technology insights 
about tomtom's time-dynamic navigation concept,” in 
Proceedings of the the 7th joint meeting of the European 
software engineering conference and the ACM SIGSOFT 
symposium on The foundations of software engineering 
(ESEC/FSE '09). ACM, New York, NY, USA, 171-172. 
DOI=10.1145/1595696.1595698, 2009. 
[33] D. Krajzewicz, D. Teta Boyom, and P. Wagner, “Evaluation 
of the Performance of city-wide, autonomous Route Choice 
based on Vehicle-to-vehicle-Communictaion,” TRB 2008 (87. 
Annual Meeting), 2008, Washington DC, USA. 
[34] D. Krajzewicz, E. Brockfeld, J. Mikat, J. Ringel,  C. Rössel, 
W. Tuchscheerer, P. Wagner, and R. Woesler, “Simulation of 
modern Traffic Lights Control Systems using the open source 
Traffic Simulation SUMO,” in Proceedings of the 3rd 
Industrial Simulation Conference 2005, pp. 299–302, 
EUROSIS-ETI, 3rd Industrial Simulation Conference 2005, 
Berlin (Germany). ISBN 90-77381-18-X.2005. 
[35] L. Bieker, “Emergency Vehicle prioritization using Vehicle-
to-Infrastructure 
Communication,” 
Young 
Researchers 
Seminar 2011 (YRS2011), 2011, Copenhagen, Denmark. 
[36] D. Greenwood, B. Burdiliak, I. Trencansky, H. Armbruster, 
and 
C. 
Dannegger, 
“GreenWave 
distributed 
traffic 
intersection control,” in Proceedings of The 8th International 
Conference on Autonomous Agents and Multiagent Systems - 
Volume 2, pp. 1413–1414, 2009. 
[37] O. H. Minoarivelo, “Application of Markov Decision 
Processes to the Control of a Traffic Intersection,” 
postgraduate diploma, University of Barcelona, 2009 
[38] J. Kerekes, M. Presnar, K. Fourspring, Z. Ninkov, D. 
Pogorzala, A. Raisanen, A. Rice, J. Vasquez, J. Patel, R. 
MacIntyre, 
and 
S. 
Brown, 
“Sensor 
Modeling 
and 
Demonstration 
of 
a 
Multi-object 
Spectrometer 
for 
Performance-driven Sensing,” in Proceedings of Algorithms 
and Technologies for Multispectral, Hyperspectral, and 
Ultraspectral Imagery XV, SPIE Vol. 7334, Defense and 
Security 
Symposium, 
Orlando, 
Florida, 
2009, 
DOI: 
10.1117/12.819265. 
[39] L. Bieker and D. Krajzewicz, “Evaluation of opening Bus 
Lanes for private Traffic triggered via V2X Communication,” 
(FISTS 2011), 2011, Vienna, Austria. 
[40] R. Nota, R. Barelds, and D. van Maercke, “Harmonoise WP 3 
Engineering method for road traffic and railway noise after 
validation and fine-tuning,” Technical Report Deliverable 18, 
HARMONOISE, 2005. 
[41] INFRAS. HBEFA web site [Online], http://www.hbefa.net/, 
accessed July 09, 2012. 
[42] D. Krajzewicz,  L. Bieker, E. Brockfeld, R. Nippold, and J. 
Ringel, 
“Ökologische 
Einflüsse 
ausgewählter 
Verkehrsmanagementansätze,“ 
In 
Heureka 
'11, 
2011, 
Stuttgart, Germany. 
[43] R. Cyganski and A. Justen, “Maßnahmensensitive Nach-
fragemodellierung in mikroskopischen Personenverkehrs-
modellen,“ Deutsche Verkehrswissenschaftliche Gesellschaft, 
Schriftenreihe B, 2007. 
[44] G. Hertkorn and P. Wagner, “Travel demand modelling based 
on time use data,” in 10th International conference on Travel 
Behaviour Research, August 2004. 
 

