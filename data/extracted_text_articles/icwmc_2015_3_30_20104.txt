IWO Based Adaptive Algorithm for Packet Scheduling Problem 
 
Jan Dziergwa, Iwona Pozniak-Koszalka, Leszek Koszalka, and Andrzej Kasprzak  
Department of Systems and Computer Networks 
Wroclaw University of Technology 
Wroclaw, Poland 
e-mail: jan.dziergwa@gmail.com, {iwona.pozniak-koszalka, leszek.koszalka, andrzej.kasprzak}@pwr.edu.pl 
 
 
Abstract— This paper deals with the packet scheduling 
problem in a computer network. Multimedia services, such as 
Voice-over-IP (VoIP) and Video-on-Demand (VoD), rely on IP 
networks thus may suffer from unwanted delays, high packet 
loss rate and large jitter because of intense traffic load on the 
network. Traffic needs to be prioritized in order to meet the 
Quality-of-Service (QoS) requirements and ensure reliable 
media transmission. This paper presents an idea of modifying 
Weighted Round Robin (WRR) scheduling algorithm to adapt 
to 
the incoming traffic 
by 
applying 
Invasive 
Weed 
Optimization (IWO) metaheuristic search algorithm for 
finding the best set of the weights with every time step. 
Simulation study of the performance of the proposed 
scheduling algorithm, called Adaptive Weighted Round Robin 
(AWRR), shows that it can deliver better results than basic 
scheduling algorithms. 
Keywords — packet scheduling; metaheuristic; QoS; IWO; 
algorithm; experimentation system 
I. 
INTRODUCTION 
Time sensitive multimedia services, such as VoIP and 
VoD, play an important role in modern IP networks. Due to 
many factors, media packets transported on a packet-
switched network may suffer from long delay time, large 
jitter and high packet loss rate. These problems may have 
destructive influence on quality of time-sensitive media 
streams. The traffic needs to be prioritized in order to meet 
the QoS requirements, i.e., to achieve low delays and jitter 
of media packets to allow media streaming or VoIP 
telephony. 
This paper deals with packet scheduling problem in a 
computer network. The main idea for the algorithm 
proposed in this paper is to modify known WRR scheduling 
algorithm to make it adapt to the incoming traffic and, 
hopefully, achieve better results. The WRR generates 
scheduling sequence according to the weights of packets. 
The modification consists in (i) making the weights 
adjustable with every time step and (ii) applying the IWO 
metaheuristic algorithm for finding the best set of weights in 
adaptive manners. 
Moreover, the paper presents the comparative analysis 
of efficiency between basic queuing algorithms and the 
created complex metaheuristic algorithm for solving packet 
scheduling problem. 
The rest of the paper is organized as follows. In Section 
II, the related works are discussed. Section III describes 
briefly the formulation of the considered problem. The 
considered three algorithms for solving the problem, 
including the created algorithm, are presented in Section IV. 
The designed and implemented experimentation system is 
shortly presented in Section V. Section VI is devoted to 
investigation containing experiment set-up, as well as the 
presentation and discussion of the obtained results. The final 
remarks with a conclusion appear in Section VII. 
II. 
RELATED WORK 
There are available papers concerning packet scheduling 
mechanisms for QoS requirements. 
In [1], the problem of two-stage packet scheduling on 
parallel processors is considered. This paper is the main 
reference for this work as it assumes applying meta-
heuristics for packet scheduling problem. It is assumed, that 
each processor schedules packets according to WRR rule. In 
order to deliver required level of the QoS parameters of 
WRR, the two stage approach is used such that QoS 
requirements are met for all distinguished traffic classes. 
Adaptation of WRR weights relies on the adaptation 
through identification methodology with the Diagonal 
Recurrent Neural Network (DRNN) applied as the model of 
QoS parameters.  
Paper [2] describes interesting concepts of QoS packet 
scheduling approaches. Author proposes a charge-based 
optimization model for packet scheduling aiming to 
maximize overall satisfaction, as well as to develop a simple 
and effective scheduling policy for the environments where 
packets have predefined hop-by-hop time schedules.  
Paper [3] applies the proportional model in the 
differentiation of queueing delays, and investigates 
appropriate packet scheduling mechanisms. 
In [4], an approach to adaptive packet scheduling is 
presented, based on adaptation through identification 
methodology. Identification refers here to prediction of 
future QoS parameters of processed traffic, basing on values 
of parameters of primary scheduling algorithm. 
The authors of [5] present another scheduling discipline, 
called Nested Deficit Round Robin (NDRR). It splits each 
DRR round into one or more smaller rounds, within each of 
which we run a modified version of DRR. 
In the last years many metaheuristic algorithms based on 
the imitation of processes in nature, in particular concerning 
ants, swarms and invasive weeds, were created for solving 
optimization problems in various areas, e.g., in ecology [6], 
and in managing computer systems [7].  
61
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-433-6
ICWMC 2015 : The Eleventh International Conference on Wireless and Mobile Communications

The implementation of nature based algorithms can give 
some profit. In this paper, the concept of adaptive packet 
scheduling using the two stage approach [1] [2] [4] with the 
IWO metaheuristic [6] [7], is used in order to propose more 
efficient way of packet scheduling in computer network. 
III. 
PROBLEM STATEMENT 
For the purpose of this paper, it is assumed, that the 
network traffic is generated on a single link between two 
side routers denoted in Fig. 1 as node A and node B.  
 
 
Figure 1. The considered fragment of the network. 
An aggregated stream of packets incoming into the 
network node is composed of three types of packets 
characterized by the same source and destination addresses. 
The distinguished types of packets are: video, audio, and 
www packets.  
The general scheduling problem is to find in each time 
step   	
; 	,   such 
that 
   argmin   . The criterion function D is a 
defined composition of three elements: 
	
   ∗  !
"# $  !
%,  
	  &" ∗  !
"# $  !
%, 
  ''' ∗  !
"# $  !
%, 
where w (n) are weights (changed in each time step), 
 !
"#  is the time moment when packet is processed 
through network,  !
%is the time moment when packet 
arrives to management system. 
Following the two stage approach (described in detail in 
[1]), the problem to be solved in this paper consists in 
finding such a vector of local scheduling algorithm’s 
weights: ∗  ,
&",
''' for 
which the traffic delay is minimized in the sense of a given 
criterion.  
In this paper, we concentrate on the minimum average 
delay denoted by Q. 
IV. 
ALGORITHMS 
A. Reference Algorithms 
As the reference algorithms, two well-known scheduling 
algorithms are taken into consideration: Priority Queuing 
algorithm, here denoted as PQ, and Weighted Round Robin 
algorithm, denoted as WRR. PQ schedules traffic such that 
the higher priority packets get served first. Three different 
priorities are considered - High, Medium, and Low. The 
lower priority packets only get serviced if there are no 
higher priority packets waiting. WRR algorithm generates 
scheduling sequence according to the weights of packets. 
For more detail concerning these algorithms see [1]. 
B. AWRR algorithm 
This algorithm is an own modification of WRR 
algorithm. The main idea is to automatically adjust weights 
with every time step. IWO metaheuristic algorithm is used 
for finding the best set of weights. 
The algorithm requires performing the following steps: 
Step 1. Generating an initial population (a random set of 
weights). 
Step 2. Calculating fitness based on the criterion function 
(e.g., Q = minimum average delay) and checking the 
constraints (a packet loss rate). 
Step 3. Making reproduction (based on plant fitness). 
Step 4. Choosing new seeds near to the parent plant 
(randomly distributed with zero mean and specified 
standard deviation).  
Step 5. Producing seeds by each weed when the 
maximum number of weeds in a colony is reached. 
Step 6. Weeds with lower fitness are eliminated to reach 
the maximum allowable population in a colony. 
The process continues until stop condition is satisfied 
(e.g., maximum iteration is reached).  
V. 
EXPERIMENTATION SYSTEM 
The 
designed 
experimentation 
system 
has 
been 
implemented in MATLAB environment. 
The system gives opportunities for: 
• 
Packet scheduling on a single link between two 
side routers, 
• 
Using the type of traffic such as video, audio and 
www packets, 
• 
Performing the following algorithms: PQ, WRR, 
and AWRR - IWO based Adaptive Weighted 
Round Robin algorithm. 
The system consists of the following modules: 
• 
Packet generation  module, 
• 
Simulation module, 
• 
PQ algorithm module, 
• 
WRR algorithm module, 
• 
AWRR algorithm module. 
The experimentation system can be treated as input-
output system (see Fig. 2). 
 
Figure 2. The concept of the experimentation system. 
62
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-433-6
ICWMC 2015 : The Eleventh International Conference on Wireless and Mobile Communications

The user can carry out the simulation experiments taking 
into consideration the following variables: 
Input parameters: sort of traffic, proportion of traffic, 
traffic load, bandwidth, simulation time. 
Output parameters: the average packet delay, maximum 
packet delay, packet jitter. 
VI. 
INVESTIGATION 
A. Experiment Setup 
The following setup was used in order to achieve similar 
queuing properties. The goal was to set the same priorities 
(weights) in AWRR and WRR algorithms such that the 
comparison is accurate.  
Inputs: 
 
Minimum combined (weighted) average delay as a 
criterion for AWRR algorithm: 
 
(  ! )1.5 ∗ -	
	
./ + 1.2 ∗ -		
./
+0.1 ∗ -	
./
3. 
 
 
Weights for WRR algorithm: 
 = 15,
&" = 12,
''' = 1 (similarly to 
AWRR); 
 
Priorities for PQ: video packets: high, audio packets: 
medium, www packets: low; 
 
Simulation time: 100 [µs]; 
 
Traffic load: 120% of bandwidth ; 
 
Type of traffic: 40% video, 40% audio, 20% www 
packets. 
Outputs: 
 
Packet delay,  
 
Packet jitter . 
B. Results and Comments 
The results of experiment are shown in a form of plots 
for all three algorithms: PQ, WRR, and AWRR.  
 
 
Figure 3. Delay of video packets. 
Fig. 3 shows the performance of algorithms when it 
comes to video delay. PQ algorithm produces no delay as 
expected but at the cost of other types of packets as can be 
seen on next plots. AWRR algorithm reaches the point of 
2µs only for one moment, apart from that it behaves 
similarly to WRR algorithm producing very low video 
delay. 
 
 
Figure 4. Delay of audio packets. 
In Fig. 4, it may be observed that PQ and AWRR 
algorithms do not exceed 3µs, keeping the delay mostly in 
(0-2)µs range. WRR algorithm produces worst results 
comparing to the above.  
In Fig. 5, the delay of www packets is shown. It has 
been observed that PQ produces good results when it comes 
to delay for video and audio but at the expense of www 
packets. One may notice rapid growth of delay from the 
start of simulation for PQ algorithm. The delay plot for PQ 
also has the highest maximum (see Table I). 
 
 
Figure 5. Delay of www packets. 
0
500
1000
1500
2000
-1
0
1
Priority Queuing (PQ)
Delay [us]
Number of packet
0
500
1000
1500
2000
0
0.5
1
Weigthed Round Robin (WRR)
Delay [us]
Number of packet
0
500
1000
1500
2000
0
1
2
Adaptive Weigthed Round Robin (AWRR)
Delay [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
2
4
Priority Queuing (PQ)
Delay [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
2
4
Weigthed Round Robin (WRR)
Delay [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
2
4
Adaptive Weigthed Round Robin (AWRR)
Delay [us]
Number of packet
0
200
400
600
800
1000
0
50
100
Priority Queuing (PQ)
Delay [us]
Number of packet
0
200
400
600
800
1000
0
50
100
Weigthed Round Robin (WRR)
Delay [us]
Number of packet
0
200
400
600
800
1000
0
50
100
Adaptive Weigthed Round Robin (AWRR)
Delay [us]
Number of packet
63
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-433-6
ICWMC 2015 : The Eleventh International Conference on Wireless and Mobile Communications

In Fig. 6, Fig. 7, and Fig.8., one can observe the 
performance of algorithms when it comes to jitter. PQ 
schedules video packets with no jitter, which is an expected 
behavior. This has however noticeable impact on jitter of 
the rest of the packets. PQ scheduling causes highest jitter in 
audio and www. This is because video packets were always 
sent first causing other types of packets to be placed in 
queue. AWRR and WRR perform similarly, with a slight 
advantage of the IWO based algorithm in video packets 
jitter. 
Figure 6. Jitter of video packets. 
 
 
Figure 7. Jitter of audio packets. 
 
TABLE I. MAXIMUM DELAY OF PACKETS 
Maximum delay [μs] 
 
PQ 
WRR 
AWRR 
For all packets 
 
87 
86 
For video packets 
0 
1 
2 
For audio packets 
3 
4 
3 
For www packets 
89 
87 
86 
TABLE II AVERAGE DELAY OF PACKETS 
Average delay [μs] 
PQ 
WRR 
AWRR 
12.4460 
12.3479 
12.2282 
 
Figure 8. Jitter of www packets. 
 
C. 
Discussion 
The results obtained from the simulation show slight 
advantage of AWRR algorithm in packet queuing problem 
in comparison with basic priority scheduling algorithms. 
As one can notice from Table I, the AWRR algorithm 
schedules packets with lower maximum delay without an 
increase in video and audio delays. 
Comparing delay and jitter of audio packets for all 
algorithms (Fig. 4 and Fig. 7), we can say that the advantage 
of AWRR is noticeable. The results for www packets show 
the bad performance of PQ, especially when we take under 
consideration the jitter, and WRR or AWRR algorithms 
produce satisfying results. 
Results of average delay presented in Table II show 
another advantage of AWRR algorithm for which the 
average is the lowest. 
Discrepancies of results grow with the growing 
simulation time on the favor of AWRR algorithm. 
VII. 
CONCLUSION 
In general, the proposed algorithm AWRR produced 
good results confirmed by the simulation experiment, 
slightly outperforming the basic scheduling algorithms. 
However, while implementing more complex approaches, 
such as AWRR presented in this paper, one must have in 
mind much higher computational complexity and choose the 
right solution to the processing power of hardware. 
In the nearer future, we plan to implement more 
metaheuristic algorithms, in particular the algorithms based 
on evolutionary approaches [8], as well as to extend the 
experimentation system by the implementation of the 
module allowing making the multistage experiments in 
automatic manner following the ideas presented in [9]. 
0
500
1000
1500
2000
-1
0
1
Priority Queuing (PQ)
Jitter [us]
Number of packet
0
500
1000
1500
2000
0
0.02
0.04
Weigthed Round Robin (WRR)
Jitter [us]
Number of packet
0
500
1000
1500
2000
0
0.01
0.02
Adaptive Weigthed Round Robin (AWRR)
Jitter [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
0.05
0.1
Priority Queuing (PQ)
Jitter [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
0.02
0.04
Weigthed Round Robin (WRR)
Jitter [us]
Number of packet
0
200
400
600
800
1000
1200
1400
1600
1800
0
0.02
0.04
Adaptive Weigthed Round Robin (AWRR)
Jitter [us]
Number of packet
0
200
400
600
800
1000
0
2
4
Priority Queuing (PQ)
Jitter [us]
Number of packet
0
200
400
600
800
1000
0
0.5
1
Weigthed Round Robin (WRR)
Jitter [us]
Number of packet
0
200
400
600
800
1000
0
0.5
1
Adaptive Weigthed Round Robin (AWRR)
Jitter [us]
Number of packet
64
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-433-6
ICWMC 2015 : The Eleventh International Conference on Wireless and Mobile Communications

ACKNOWLEDGMENT 
This work was supported by the statutory funds of the 
Department of Systems and Computer Networks, K0402, 
Wroclaw University of Technology, Poland. 
REFERENCES 
[1] A. Grzech, P. Swiatek, and P. Rygielski, “Twostage packet 
Scheduling 
in 
the 
Network 
Node”, 
The 
Twentieth 
International Conference on Systems Engineering (ICSE 
2009), Coventry, UK, Sept. 2009, pp. 181-184. 
[2] Yao-Nan Lien and Yung-Chuan Wun, “Timeliness and QoS 
Aware Packet Scheduling for Next Generation Networks”, The 
Twelfth 
International 
Conference 
on 
Network-Based 
Information Systems (NBIS 2009), Indianapolis, USA, Aug. 
2009, pp. 9-16.  
[3] C. Dovrolis, D. Stiliadis, and P. Ramanathan, “Proportional 
differentiated services: delay differentiation and packet 
scheduling”, IEEE/ACM Transactions on Networking, 
vol. 10, pp. 12–26, Feb. 2002.  
[4] A. Grzech, P. Swiatek, and P. Rygielski, “Improving QoS 
Guaranties via Adaptive Packet Scheduling.” The Sixteenth 
Polish Tele-traffic Symposium (PTS 2009), Lodz, Poland, 
Sept. 2009, pp. 53-56. 
[5] S. S. Kanhere and S. Harish, "Fair, Efficient and Low-
Latency Packet Scheduling using Nested Deficit Round 
Robin," IEEE Workshop on High Performance Switching and 
Routing (HSPR 2001), Dallas, Texas, USA, 2001, pp. 6-10.  
[6] A. R. Mehrabian, “A novel numerical optimization algorithm 
inspired from weed colonization”, Ecological Informatics, 
vol. 1, 2003, pp. 355–366.  
[7] S. M. Sundaram, S. Palani, and A. R. Babu, “OLSR with 
optimized hybrid particle swarm optimization and invasive 
weed optimization”, Journal of Theoretical and Applied 
Information Technology, vol. 57, Nov. 2013, pp. 502-508. 
[8] D. Ohia, L. Koszalka, and A. Kasprzak, “Evolutionary 
algorithm for solving congestion problem in computer 
network”, Lecture Notes in Computer Science, Springer, vol. 
5711, pp. 112-121, 2009. 
[9] L. Koszalka, D. Lisowski, and I. Pozniak-Koszalka, 
“Comparison of allocation algorithms for mesh structured 
networks using multistage simulation”, Lecture Notes in 
Computer Science, Springer, vol. 3984, pp. 58-67, 2006. 
 
 
65
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-433-6
ICWMC 2015 : The Eleventh International Conference on Wireless and Mobile Communications

