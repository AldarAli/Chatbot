QoS versus QoE for Database Tuning  
 
Jaroslaw Kurpanik, Malgorzata Pankowska 
Department of Informatics 
University of Economics in Katowice 
Email: jaroslaw.kurpanik@ue.katowice.pl, pank@ue.katowice.pl
 
 
Abstract—Quality in Information Communication Technology 
(ICT) domain is understood as the totality of characteristics of 
an entity that are important for its ability to satisfy users. In 
the paper, authors present a consistent set of concepts 
concerning Quality of Experience (QoE) and Quality of Service 
(QoS) modelling for information system development. In the 
last part, they focus on database application tuning and give an 
example of how the selected QoS measures (i.e., Cost, %CPU 
and physical read) can be used for quality improvement.  
Keywords-QoE, QoS, quality measures, quality management, 
database tuning. 
I. 
 INTRODUCTION  
Last years developed servitization is considered as a 
business strategy to get competitive advantage in IT sector. 
Servitization as a process is developed within Service 
Science, which is an interdisciplinary approach to study, 
create, improve a service [1]. The generic model of services 
process lifecycle is argued to be derived from the basic 
phases of a generic business process lifecycle and 
encompasses part of the possible service outcomes, captured 
in the Interact-Service-Propose-Agree-Realize (ISPAR) 
model [2]. In services, values are co-created by user and 
service provider. Value is determined by results, quality of 
the customer experience, service price and access costs. 
Service has a different meanings in different disciplines. In 
information systems engineering, the service concept is used 
to separate the external and internal behaviour of a system. 
In enterprise architecture approach, service is perceived a 
bidge that different layers of an enterprise [3].  
In the paper, servitization is assumed to include all the 
activities for Information Communication Technology (ICT) 
services and application quality management. The paper 
aims to emphasize the relations, differences and applicability 
of Quality of Experience (QoE) and Quality of Service 
(QoS) for business application development. The first part of 
the paper covers explanation of QoE and QoS in the ICT 
sector. The second part includes discussion on usage of QoS 
approach for tuning the databases for business.  
II. 
QOS VERSUS QOE 
The quality management is to maintain the internal 
quality of an entity. In order to achieve this, it aims at four 
subjects, i.e., the product quality, the process quality, the ICT 
facilities quality and the business organization quality, 
mostly aiming at matters like quality of people and their 
expertise and competencies.  
According to Deora et al. [4], quality can be perceived in 
different aspects, i.e., quality as functionality, as reputation, 
and as conformance, which is synonymous with meeting 
specifications. These different views require quality to be 
monitored 
and 
measured 
differently. 
Quality 
as 
a 
functionality characterizes, for example,  the design of a 
software and can be measured by comparing the piece of 
software against others offering similar functionalities. 
Quality as conformance is monitored for each software 
individually, and usually requires the user's experience in 
order to measure the promise and expectations against the 
delivery. Quality as reputation means that evaluated software 
is regarded as a reference over time because of its 
functionalities and conformance qualities. Beyond that 
quality can be considered as a continuous improvement of 
non-functional features and can be measures by comparing 
the modified software against  the same piece of software 
before 
modification, 
assuming 
it 
keeps 
the 
same 
functionalities. Considering service quality means to focus 
on the gaps that infuence the service quality. At first, the 
expected service as perceived by the service provider  is 
different from what is expected by the customer. Second, the 
service specification as used by the service provider differs 
from the expected service as perceived by the service 
provider. Third, the actual service delivery differs from the 
specified services, because of the deficiencies in human 
resource policies, and failures to match demand and supply. 
Fourth, communication about the service does not match the 
actual service delivery because of ineffective management of 
customer expectations, overpromising, and inadequate 
horizontal communications. Fifth, the actual service 
performance  differs from the customers' expectations [15].  
Service quality as an intangible characteristics is 
expressed by other qualitative characteristics: 
 reliability, understood as the ability of a service 
operation to be executed within the maximum expected 
time frame, 
 response time to handle the user requests, 
 availability, understood as the probability for a service 
being accessed properly in an observation period,  
 integrity, understood as the quality aspect of how the 
service maintains the correctness of the interaction in 
respect to the source.  
30
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

According to ISO 9000:2000, quality is the ability of a 
set of inherent characteristics of a product, system or process 
to fulfill the requirements of customers and other interested 
parties. Nowadays, researchers and practitioners differentiate 
QoE from QoS. The relationship between these two concepts 
are formulated in different ways:  
 QoE as a counterbalance form for QoS. 
 QoE as a contradiction of QoS. 
 QoE as a linear combination of QoS and user 
experience. 
 QoE as an interchangeable concept of QoS.   
The first approach emphasizes the user's perceptions and 
experiences. Therefore, the service providers are requested to 
deliver the software and services not with a high QoS, but 
with a high QoE to their customers [6].  
The QoE concept is particularly important for human-
machine interface design, where there is a focus shift from 
classical usability, understood in terms of effectiveness and 
efficiency, towards the design of experiences that people 
have through the use of the interfaces. QoE is defined as the 
degree of delight or annoyance of a person whose 
experiencing involves an application, service, or system. It 
results from the person's evaluation of the fulfilment of their 
expectations and needs with respect to the utility and/or 
enjoyment in the light of the person's context, personality 
and current state [7]. QoE means the overall acceptability of 
an application or service, as perceived subjectively by the 
end user and QoE is supplemented by QoS, which means 
totality of characteristics of a service that bear on its ability 
to satisfy stated and implied needs of the user of service.  
In the second approach, Varela et al. [8] contrast QoE 
with QoS. According to them, QoS means the totality of 
characteristics of a telecommunication services, but QoE is 
not limited to only such services. QoE is defined entirely 
from the user's perspective. In QoS evaluation process, the 
focus is mostly on performance of telecommunication 
systems, while QoE focuses on ICT services and 
applications. For QoS evaluation, methods are technology 
oriented, 
empirical 
and 
include 
simulation 
results' 
measurements. QoE evaluation is a multi-disciplinary and 
multi-methodological approach.  In this contradictive 
process, Weiss et al. [9] add that QoE itself is an important 
measure for addressing the instantaneous user reaction to 
changes 
in 
the 
QoS 
(e.g., 
types 
of 
transmission 
degradations). Assessment methods of momentary QoE 
include the measures for truly instantaneous assessment, but 
also the assessment for short-term samples which exhibit 
microscopic variation [9].  
For Garcia et al. [10], QoE is influenced by user 
expectations, context and personal preferences. The 
perception and understanding of the users' QoS are typical 
for video quality evaluation, but they are going beyond 
purely measuring video quality. They cover new subjective 
studies and methodologies for episodic subjective quality 
evaluation in realistic environments. The quality of the 
multimedia content as perceived by the user is referred by 
Timmerer et al. [11] as an example of QoE application. As 
such, the QoE is defined for a certain modality (e.g., image) 
or simply for a combination of audio and visual elements and 
QoE is targeting two human senses, namely hearing and 
seeing. They argue that browsing multimedia content may 
also 
stimulate 
other 
senses 
such 
as 
olfaction, 
mechanoreception, equilibrioception, or thermoreception. 
Users are located in a certain environment, where there are 
other sensory information, e.g., light, wind, vibration, and 
scent, so the users perceive also these additional sensory 
effects and even consider them as a part of the particular 
multimedia content and enrich their personal experience. 
Therefore, although there is a wide range of factors 
influencing user experience and QoE, the most important 
factors can be classified into three main categories; the 
context around the user, the user's state, and the system 
properties [7].  
Reiter et al., specify ten context categories as follows: 
personal context, social context concerning interpersonal 
action and relations, economic context including cost and 
brand of software applications, event-based context, 
application based context, historical context, physical context 
describing the user locations and movements, temporal 
context, task context, and technical context. The task context 
concerns the user activities realized in parallel or as a 
sequence, and interruptions. The technical context describes 
the relationships among the system of interest and other 
relevant 
devices, 
applications, 
networks 
and 
other 
informational artefacts [12].   
In the third approach, QoS deals with the performance 
aspects of physical systems. QoE deals with the users' 
assessment of system performance, as colored by context, 
culture, the users' expectations with respect to the system or 
service and their fulfilment, socio-economic issues, and 
psychological profiles, among other factors.  
According to Beyer and Moller [13], QoE is defined as 
weighted linear combination of QoS and user experience. 
For Wennerheimer and Robinson, there is no simple 
correlation of QoE and QoS [14]. However, a generic 
correlation model between QoS and QoE does not lead to 
any improvements. QoE is the overall acceptability of an 
application or service and as such QoE represents user 
satisfaction. From the software developer point of view,  
QoS is the collective effect of software usability and service 
performance. Therefore, QoE covers nontechnical and 
human aspects of system performance, i.e., smoothness and 
interaction maintenance effort, response ability, pace, 
naturalness, comprehensibility effort, accessibility, integrity, 
retainability, ergonomics, aesthetics, learnability, intuitivity, 
and intrinsic motivation of user activity.  
The aesthetics is connected with ICT devices parameters 
concerning resolution, colour brightness, noisiness, loudness, 
and vibration. QoS concerns the usability of functionalities 
of software, services and devices. Apart from that, QoS 
properties, such as performance and reliability are 
increasingly important to ensure user acceptance.  
Generally, QoS parameters can be classified as 
stimulants and destimulants [15]. Stimulants are variables, 
which values should be increased for the quality 
improvement, as it is in the case of reliability, compatibility, 
interoperability, 
scalability, 
effectiveness, 
efficiency, 
security, accuracy, coherence, and network throughput. 
31
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

Destimulants are QoS parameters, which values ought to be 
decreased in the quality improvement process, as it is in the 
case of metrics including  time delay, jitter, interruptions, 
errors, discontinuity, response time, packet loss rate, latency 
and time to repair.  
QoS is determined in relation to the fulfilment of the 
service agreement. The measurement of the QoS needs to 
take into consideration the input from both the customer as 
well as the service provider, as the service and software 
development agreement binds both parties. Measuring the 
quality of software and services is important in modern 
service-oriented environments. It is reshaping the world of 
business by providing trusted business processes and the 
reputation of service providers and software developers. The 
QoS characteristics are a quantifiable aspect of QoS and they 
are developed independently of the means by which they are 
represented and controlled. The values of QoS characteristics 
include not only numbers (e.g., Booleans,  integers, reals, 
complex numbers), but also vectors, matrices, ranks and 
names of states.  
Particularly in the ICT sector, the subclasses describing 
QoS characteristics of general importance to communication 
and processing are presented by the following characteristics 
groups: time-related, coherence, capacity, integrity, safety, 
security.  QoS characteristics cover not only metrics, but also 
policies, which make a concrete software useful.  
The policies include scheduling and dispatching policies, 
admission control of requests, levels of services supported in 
the server, and management of service requests.   
In the last, fourth approach, QoE and QoS terminology 
are used interchangeably [16]. QoE is the overall 
performance of a system from the point of view of the users. 
QoE is a measure of end-to-end performance at the service 
level from the user perspective and an indication of how well 
the system meets the user's needs. QoS is a measure of 
performance from the network perspective. QoS refers to a 
set of technologies that enable the network administrator to 
manage the effects of congestion on application performance 
as well as providing differentiated services to selected 
network traffic flows or to selected users. Quality 
management in ICT sector supported by QoS characteristics 
requires establishing, monitoring and maintenance of the 
actual QoS characteristics, controlling of the QoS targets,  
alerting as a result of some events relating to the QoS 
management [17].  
III. 
  QOE APPLICATION EXAMPLE 
Top management and company decision makers have an 
opportunity to measure the quality of ICT services with 
Information Technology Service Management (ITSM) 
system. Therefore, they are able to manage business 
processes and technologies. ITSM system enables ICT 
providers to adhere to the conditions included in the Service 
Level Agreement (SLA), expressed by Key Performance 
Indicators (KPIs). Usually, 
the 
SLA must contain 
quantitative measures that represent a desired and mutually 
agreed state of a service, provide additional boundaries of a 
service scope, and describe guaranteed minimal service 
performance [18].  
Furthermore, KPIs are metrics that are used to measure 
efficiency and effectiveness of a service, and service 
operation status. The SLA examples would cover, for a 
particular customer, the reaction time, resolution time, 
compliance to agreed deadlines. KPIs examples could 
include average reaction time by users, incoming ticket 
volume trend, time of system inaccessibility, number of 
solved problems in an established time, number of correctly 
provided services in relation to the number of all services.  
However, service catalogue is constructed in the context 
of particular business goals' specification. ICT service design 
does not concern the whole system in the same way. The 
quality parameters may be not defined for database, 
application servers or networks. The quality parameters are 
defined for particular levels of the information system. They 
are analysed and maintained inside the ICT department, 
which focuses on the new solution development, as well as 
on the existing functionalities extension. However, this 
approach is not appropriate for business, which requires the 
effects important for the customers. Therefore, the 
accountability of ICT services should be based on SLA 
parameters.  
For example, in an information system for sale and 
distribution, number of cases of exceeding the accepted time 
(i.e., 2 seconds) for registration of one item in an order 
during a day. User receives a phone request and inserts data, 
which are dictated by their customer. Average number of 
items dictated through the phone covers about 70 elements 
per one customer request. Request reception time is critical. 
After the registration of each item in request, information 
systems verifies product accessibility, controls the product 
promotions 
and 
calculates 
the 
price 
and 
margins. 
Information system is to measure the time between product 
approval and the moment of the presentation of all data on 
the terminal screen. In case of exceeding the time, the 
information is registered in log file. Business user accepts no 
more than 50 cases, where the time of 2 seconds is exceeded. 
Logs are constantly monitored and in a situation of 
increasing the number of such cases, suitable actions are 
undertaken to return to the acceptable level of service. 
Similar time and acceptance levels are defined by inventory 
division users working with mobile devices.  
IV. 
QOS APPLICATION EXAMPLE 
The consideration on the quality measures refers to the 
Oracle database efficiency. Efficiency analysis and database 
tuning requires multidimensional approach, because of the 
number of influencing variables. For Oracle applications, the 
database tuning is considered as: 
 Good database design and distribution of  the database 
workload across multiple disks to avoid or reduce disk 
overloading.  
 Disk I/O optimization, which is related directly to 
throughput and scalability.   
 Checkpointing  to increase the I/O activity and system 
resource usage.  
32
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

 Batching multiple operations together and/or increasing 
the number of operations that run in parallel (increasing 
concurrency) [19].   
In this paper, authors focus on operations, which are 
important from the point of view of database administrator 
and which have an impact on database system efficiency and 
on the speed of query performance. Particularly, they 
consider input/output (I/O) operations and the number of 
physical disc readings realized by a database system to find 
the answer to the user query. If that number is smaller, the 
waiting time for query results is shorter. The number can be 
optimized in different ways, for example by suitable index 
creation [12]. A query execution plan is an ordered set of 
steps used to access data in an SQL relational database 
management system.  
Query optimizer attempts to determine the most efficient 
way to execute a given query by considering the possible 
query plans [20]. They can be rule-based or cost-based. In 
the first approach, the rule-based optimizer (RBO) chooses 
an execution plan based on the rules and access paths 
available and the ranks of these access paths [21].  
Oracle's ranking of the access paths is heuristic. If there 
is more than one way to execute an SQL statement, then the 
RBO always uses the operation with the lowest rank. 
Usually, operations of lower rank execute faster than those 
associated with constructs of higher rank. Cost-based 
optimizer (CBO) generates a set of potential execution plans 
for SQL statements, estimates the cost of each plan, calls the 
plan generator to generate the plan, compares the costs, and 
chooses the plan with the lowest cost. In this approach the 
query performance time is estimated for different options and 
the query for which the time is the shortest is selected [22].  
In Oracle, the cost is defined as units of work or resource 
used. The query optimizer uses disk I/O, CPU usage, and 
memory usage as units of work. So, the cost used by the 
query optimizer represents an estimate of the number of disk 
I/Os and the amount of CPU and memory used in performing 
an operation. The operation can be scanning a table, 
accessing rows from a table by using an index, joining two 
tables together, or sorting a row set [23]. The cost of a query 
plan is the number of work units that are expected to be 
incurred when the query is executed and its result produced. 
The cost of a table scan or a fast full index scan depends on 
the number of blocks to be scanned and the multiblock read 
count value. The cost of an index scan depends on the levels 
in the B-tree, the number of index leaf blocks to be scanned, 
and the number of rows to be fetched using the rowid in the 
index keys [7] [18]. Oracle proposes many different indexes 
applying for  minimizing the query performance cost.  
Indexes are optional structures associated with tables 
and clusters. Indexes can be created on one or more columns 
of a table to speed up SQL statement execution on the table. 
Indexes are the primary means of reducing disk I/O when 
properly used. Oracle provides several indexing schemes, 
e.g.:  
 Normal indexes, by default, Oracle Database creates 
B-tree indexes. 
 Reverse indexes.  
 Bitmap indexes.  
The purpose of an index is to provide pointers to the 
rows in a table that contain a given key value. In a regular 
index, this is achieved by storing a list of rowids for each 
key corresponding to the rows with that key value.  
Oracle Database stores each key value repeatedly with 
each stored rowid. In a bitmap index, a bitmap for each key 
value is used instead of a list of rowids [24]. Creating 
reverse key index, compared to a standard index, reverses 
the bytes of each column indexed (except the rowid) while 
keeping the column order [11].  
In this example, the sh.customers table was used for the 
verification of impact of indexes applying on the cost of 
query performance. Before the decision on index creation, 
certain statistics for  sh.customers table were calculated and 
presented in Table 1.  
 
TABLE I.  SEGMENT OF COLLECTED COLUMN STATISTICS   
COLUMN_NAME 
DENSITY 
NUM_NULLS 
CUST_CITY_ID 
0,00217939065 
0 
CUST_TOTAL 
1,00000000000 
0 
CUST_STATE_PROVINCE 
0,00689655172 
0 
 
 
Table 1 consists of three columns, where the value in 
"DENSITY" column provides information about the 
selectiveness of the column. Lower value indicates that the 
column is a better candidate to create index. Value included 
in "NUM_NULLS" column indicates how many "null" 
values are included in the column [11] [18]. The 
"DENSITY" value for the "CUST_TOTAL" column is equal 
to 1, so the column contains only one unique value, therefore 
creating an index on this column is not necessary, because 
the full table scan can be efficient. For the two other 
columns, the selectiveness of data is relatively high. 
Therefore, the columns are good candidates for indexing.  
TABLE II.  
STATISTICS  
IN THE  "WITHOUT INDEX (FULL TABLE SCAN)" CASE  
Without index (Full table scan) 
Id 
Operation 
Name 
Rows 
Bytes 
Cost 
(%CPU) 
Time 
0 
 
1 
SELECT 
STATEMENT 
 TABLE 
ACCESS FULL 
 
 
CUSTO
-MERS 
66 
 
66 
990 
 
990 
405 (1) 
 
405(1) 
00:00:01 
 
00:00:01 
28 physical read IO requests 
11919360 physical read bytes 
28 physical read total IO requests 
11919360 physical read total bytes 
11 physical read total multi block requests 
1455 physical reads 
1455 physical reads cache 
1427 physical reads prefetch 
 
 
33
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

TABLE III.  
STATISTICS IN THE "NORMAL INDEX" CASE 
Normal Index 
Id 
Operation 
Name 
Rows 
Bytes 
Cost 
(%CPU) 
Time 
0 
 
1 
 
2 
SELECT 
STATEMENT 
 TABLE 
ACCESS FULL 
  INDEX      
RANGE SCAN 
 
 
CUSTO
-MERS 
TEST_ 
INDEX 
66 
 
66 
 
23 
990 
 
990 
24 (0) 
 
24 (0) 
 
   2(0) 
00:00:01 
 
00:00:01 
 
00:00:01 
1 physical read IO requests 
8192 physical read bytes 
1 physical read total IO requests 
8192 physical read total bytes  
1 physical reads 
1 physical reads cache 
TABLE IV.  
STATISTICS IN THE "REVERSE INDEX" CASE 
Reverse Index  
Id 
Operation 
Name 
Rows 
Bytes 
Cost 
(%CPU) 
Time 
0 
 
1 
 
 
 
2 
SELECT 
STATEMENT 
 TABLE 
ACCESS BY 
INDEX 
ROWID 
  INDEX       
FULL SCAN 
 
 
CUSTO
-MERS 
 
 
TEST_ 
INDEX 
66 
 
66 
 
 
 
4751 
990 
 
990 
4543 (1) 
 
4543 (0) 
 
   
 
125 (0) 
00:00:01 
 
00:00:01 
 
 
 
00:00:01 
24 physical read IO requests 
101580 physical read bytes 
14 physical read total IO requests 
1015808 physical read total bytes  
124 physical reads 
124 physical reads cache 
TABLE V.  
STATISTICS IN THE "BITMAP INDEX" CASE 
 Bitmap Index 
Id 
Operation 
Name 
Rows 
Bytes 
Cost 
(%CPU) 
Time 
0 
 
1 
 
 
 
2 
 
 
3 
SELECT 
STATEMENT 
 TABLE 
ACCESS BY 
INDEX 
ROWID 
   BITMAP 
CONVERSION 
TO ROWIDS 
   BITMAP 
INDEX 
RANGE SCAN 
 
 
CUSTO
-MERS 
 
 
 
 
 
TEST_ 
INDEX 
66 
 
66 
 
 
990 
 
990 
17 (0) 
 
17 (0) 
 
   
00:00:01 
 
00:00:01 
 
 
160  physical read IO requests 
10485760  physical read bytes 
160  physical read total IO requests 
10485760  physical read total bytes 
1280  physical reads 
1280  physical reads cache 
1120  physical reads cache prefetch 
1120  physical reads prefetch warmup 
 
Tables 2, 3, 4, and 5 cover the plan of performance of the 
query: select cust_city from sh.customers where cust_city_id 
is between 52379 and 52383.  
Application of indexes influences an increase of central 
processor unit performance, as well as decreases physical 
read, total IO requests and cost of operations. 
In the "Without index (Full table scan)" case, the Cost 
(%CPU) is smaller than in the "Reverse index" case, 
because in this first option, the multiblock reading 
operations are realized (Table 6). These operations are more 
promptly than reading operations in the other options.  
TABLE VI.  
ANALYSIS OF INDEX APPLICATION FOR EFFICIENCY 
IMPROVEMENT  
Different Index Types 
Parameter  
Without 
Index 
(Full table 
scan) 
Normal 
Index 
Reverse 
Index 
Bitmap 
Index 
Efficiency 
increase in 
the best 
option 
selection 
situation  
Cost 
(%CPU) 
405 
24 
4543 
17 
16 
Physical 
read 
1455 
1 
125 
1280 
1455 
 
     
V. 
DISCUSSION AND CONCLUSION  
Taking into account the contemporary standards and 
professional studies some conclusions on the relations 
among QoS and QoE can be formulated. However, firstly, 
different interpretations of QoE and QoS are developed and 
widely accepted. The paper aimed to present that categories 
belong 
to 
two 
different 
ICT 
system 
development 
environments. QoE focuses on user perception and 
satisfaction, therefore, QoE metrics should be proposed, 
specified, evaluated and estimated by end users. Usually, 
application developers discuss the acceptable metrics and 
metrics values with end users. The discussions are not a one-
time event, but they are repeatable and these metrics ought to 
be included in the documentation and contract among ICT 
solution providers and users. On the other hand, the QoS 
frameworks 
were 
originally 
developed 
for 
network 
management. However, taking into account the ISO/IEC 
13236 standard, the term "service" is understood in  a very 
general sense, therefore the wide application of QoS 
framework is possible [14]. According to that standard, it 
includes, among others: 
 The provision of processing and information repository 
functions by entities, objects, applications and 
application processes. 
 The interactions between entities, objects, and 
applications.  
 The confidentiality and lifetime characteristics applied 
to information stored in the information system. 
 The communication services.  
 The physical equipment. 
In the ISO/IEC 13236 standard, a QoS characteristic 
represents some aspect of a system, service or resource that 
can be identified and quantified. The QoS parameters are 
usually, but in unique way, specified in the SLA. These 
parameters are of different kinds, including:  
 A desired level of characteristics, specified by system 
developers. 
 A minimum or maximum level of a characteristic. 
 A measured value, used to convey historical 
information. 
 A threshold level. 
 A warning or a signal to take corrective actions. 
34
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

 A request for operations on managed objects relating to 
QoS. 
Taking into account the above mentioned specification of 
parameter kinds it is difficult to define suitable parameters 
for database quality improvement. However, the general 
important QoS characteristics in the ISO/IEC 13236 standard 
are grouped in the following subclasses: 
 Time-related characteristics. 
 Coherence characteristics. 
 Capacity-related characteristics. 
 Integrity-related characteristics. 
 Safety-related characteristics. 
 Security-related characteristics. 
 Reliability-related characteristics. 
 Within the capacity-related  characteristics, capacity, 
throughput, processing capacity and operation loading are 
considered. In ISO/IEC 13236, the  application information 
throughput characteristic is defined as an amount of data 
transferred between applications in a period of time and it is 
quantified as a rate expressed in bits/second or bytes/second. 
Beyond that the system throughput characteristic is defined 
as an amount of processing performed in a period of time. In 
this paper, authors proposed two metrics, i.e., cost (%CPU) 
and physical read for database throughput improvement. The 
measurements are strongly important only for database 
application developers and not visible to the end users. In the 
future, authors propose to further develop the system quality 
measurement from the different ICT system stakeholder 
point of view.  
REFERENCES 
[1] Y. Lin, Y. Shi, and S. Ma, "Servitization  Strategy: Priorities, 
Capabilities, and Organizational Features," in Service 
Science, 
Management 
and 
Engineering, 
Theory 
and 
Applications, G. Xiong, Z. Liu, X. Lu, F. Zhu, and D. Shen, 
Eds. Amsterdam, Elsevier, pp.11-34, 2012. 
[2] P.P. Maglio, S.L. Vargo, N. Caswell, and J. Spohrer, "The 
service system is the basic abstraction of service science," 
Information Systems and e-business Management 7, 2009, 
pp.395-406.  
[3] G. R. Gangadhran and E. Field, "Analyzing Requirements and 
Approaches for Sourcing Software Based Services,"  Service 
Science and Logistics Informatics, Luo Zongwei, Ed. 
Hershey, New York, Information Science Reference, IGI 
Global,  pp. 195-205, 2010. 
[4] V. Deora, J. Shao, W. A. Gray, and N. J. Fiddian, "A Quality 
of Service Management Framework Based on User 
Expectations," in Service Oriented Computing, M.E. 
Orlowska, S.Weerawarana, M.P. Papazoglou, and J. Yang, 
Eds. Berlin, Springer-Verlag, pp. 104–114, 2003.   
[5] C. Mendes and M.      Mira da Silva, "DEMO-Based Service 
Level Agreements," in Exploring Services Science. M.Snene, 
Ed. Belin, Springer, pp.227-242, 2012.  
[6] A. Raake and S. Egger, "Quality and Quality of Experience," 
In Quality of Experience, S.Moller and A.Raake, Eds. 
Heidelberg, Springer, pp. 11-35, 2014. 
[7] Qualinet White Paper on Definitions of Quality of 
Experience-Output Version of the Dagstuhl Seminar 12181. 
[Online] 
Available 
from: 
https://tel.archives-
ouvertes.fr/IRCCYN-IVC/hal-00977812v1 2015.01.16 
[8] M. Varela, L. Skorin-Kapov, and T. Ebrahimi, "Quality of 
Service Versus Quality of Experience," in Quality of 
Experience, S.Moller and A.Raake, Eds. Heidelberg, 
Springer, pp. 85-97, 2014. 
[9] B. Weiss, D. Guse, S. Moller, A. Raake, A. Borowiak and U. 
Reiter, "Temporal Development of Quality of Experience," in 
Quality of Experience, S. Moller and A.Raake, Eds. 
Heidelberg, Springer, pp. 133-148, 2014. 
[10] M. Garcia, S. Argyropoulos, N. Staelens, M. Naccari, M. 
Rios-Quintero, and A. Raake, "Video Streaming," in Quality 
of Experience, S.Moller and A.Raake, Eds. Heidelberg, 
Springer, pp. 277-298, 2014. 
[11] Ch. Timmerer, M. Waltl, B. Rainer, and N. Murray, "Sensory 
Experience: Quality of Experience Beyond Audio-Visual," in 
Quality of Experience, S.Moller and A.Raake, Eds. 
Heidelberg, Springer, pp. 351-366, 2014. 
[12] U. Reiter, K. Brunnstrom, K. De Moor, M. Larabi, M. Pereira, 
A. Pinheiro, J. You, and A. Zgank, "Factors Influencing 
Quality of Experience," in Quality of Experience, S.Moller 
and A.Raake, Eds. Heidelberg, Springer, pp. 55-73, 2014. 
[13] J. Beyer and S.  Moller, "Gaming," in Quality of Experience, 
S.Moller and A.Raake, Eds. Heidelberg, Springer, pp. 367-
382, 2014. 
[14] M. Wennesheimer and D. Robinson, "Service Quality 
Definition and Measurement, A Technical Report," NGMN 
Alliance, Next Generation Mobile Networks Ltd. Frankfurt, 
2013. 
[15] Information Technology - Quality of service: Framework, 
International Standard, ISO/IEC 13236,  ISO, IEC, Geneve, 
1998. 
[16] DSL Forum TR-126.  Triple-play Services Quality of 
Experience 
(QoE). 
[Online] 
Available 
from: 
http:// 
www.broadband-forum.org/technical/download/TR-126.pdf 
2015.01.15.  
[17] A. T. Campbell, "Quality of Service Architecture," 
Computing Department, Lancaster University, Doctor thesis, 
1996. 
[Online]. 
Available 
from: 
http:// 
www.cs.dartmouth.edu/ ~campbell/papers/thesis      2015. 
01. 15. 
[18] User Experience White Paper Bringing clarity to the concept 
of user experience, Result from Dagstuhl Seminar on 
Demarcating User Experience, September 15-18, 2010, 
February 11, 2011. [Online] Available from: http:// 
www.allaboutux.org/files/UX-WhitePaper.pdf 2015.01.16. 
[19] Oracle Database Tuning,  WebLogic Server Performance and 
Tuning, 
2014. 
[Online]. 
Available 
from:  
http://docs.oracle.com/ cd/E13222_01/wls/ docs100/perform/ 
dbtune .html    2014.12.22.  
[20] M. Wojciechowski and M. Zakrzewicz, "Cost Optimizer of 
Queries" Instytut Informatyki, Politechnika Poznanska, 2015. 
[Online] 
Available 
from: 
http://www.ploug.org.pl/ 
seminarium/ 
seminarium_III/ 
materialy/ 
kosztowy.pdf, 
2015.01.18 
[21] B. Bryla and K. Loney, "Database Administration Guide," 
Helion, Gliwice, 2010. 
[22] Database Performance Tuning Guide and Reference, 2002. 
[Online] 
Available 
from: 
https://docs.oracle.com/cd/ 
B10501_01/ server.920/ a96533.pdf , 19.01.2015 
[23] Database SQL Language Reference, 2015. [Online] Available 
from: 
http://docs.oracle.com/cd/B28359_01/ 
server.111/ 
b28286/statements_5011.htm#SQLRF01209 , 18.01.2015 
[24] Programmer Interview, 2015. [Online] Available from:  
http://www.programmerinterview.com/index.php/database-
sql/cardinality-versus-selectivity/, 10.01.2015 
 
35
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-416-9
INFOCOMP 2015 : The Fifth International Conference on Advanced Communications and Computation

