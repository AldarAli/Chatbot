Requirements Elicitation Guide for Embedded Systems: An Industry Challenge 
Luiz Eduardo Galvão Martins 
Institute of Science and Technology 
Federal University of São Paulo, UNIFESP 
São José dos Campos, Brazil 
e-mail: legmartins@unifesp.br 
Jaime Cazuhiro Ossada 
Technology College of Indaiatuba 
Indaiatuba, Brazil 
 e-mail: Jaime.ossada@fatec.sp.gov.br 
Anderson Belgamo 
Methodist University of Piracicaba, UNIMEP 
Piracicaba, Brazil 
e-mail: anbelgamo@unimep.br 
Bárbara Stefani Ranieri 
Methodist University of Piracicaba, UNIMEP 
Piracicaba, Brazil 
e-mail: bsranieri@unimep.br 
 
Abstract—This 
paper 
presents 
GERSE, 
a 
guide 
to 
requirements elicitation for embedded systems – GERSE is a 
Portuguese acronym to Guia de Elicitação de Requisitos para 
Sistemas Embarcados. Despite the advances in the area of 
embedded systems, there is a shortage of requirements 
elicitation techniques that meet the particularities of this 
segment. The contribution of GERSE is to improve the 
capturing process and organization of the embedded systems 
requirements. The proposed guide was based on a field 
research with Brazilian developers to find out the state of 
practice in embedded systems requirements. GERSE had been 
tested in a case study and had been evaluated by embedded 
systems engineers. A tool called ZAKI was developed to 
support GERSE and is also presented in this paper.  
Keywords - Embedded Systems; Requirements Elicitation; 
Requirements Template. 
I. 
INTRODUCTION 
Currently, the Embedded Systems (ES) projects have 
been created for a lot of purposes and they are an area with 
several aspects to be explored. The presence of ES has 
increased in the last years and they have become almost 
ubiquitous in segments as industry, commerce and 
residences [4]. The developed software for ES is becoming 
more and more complex and sophisticate, of course this 
increased sophistication has a strong influence in system 
requirements elicitation and management. In ES context, 
more than 50% of the problems occur after the system is 
delivered to the customer [10][15]. However, the described 
problems are not implementation mistakes, but most of 
them are requirement issues emerged during the system 
conception.   
The ES are present in our daily life and the trend is to 
increase in large scale in the next years. Currently, billions 
of processors have been built a year to supply the ES market 
[2]. Taking such context under consideration, we present 
GERSE in this paper as a guide to drive the requirements 
elicitation for embedded systems.  GERSE will support ES 
developers to create safer, trustworthy, complete, and 
correct ES using requirements engineering as a basis.   
The ES development has grown a lot in the last years, 
but the industries still have serious problems to define 
patterns 
and 
templates 
to 
adequately 
address 
the 
particularities of the requirements definition of ES. The 
consolidation of the good practices that effectively support 
the demands of the ES development process is still a great 
challenge to industry. 
This paper is organized as follows:  in section two, 
related works involving requirements engineering to ES are 
commented; in section three, the phases and activities 
proposed by GERSE are presented; section four presents a 
case study and the evaluation of the GERSE, performed by 
ES engineers; section five presents a software tool to support 
GERSE; and finally, in section six, some conclusions and 
future works are pointed out. 
II. 
REQUIREMENTS ENGINEERING FOR EMBEDDED 
SYSTEMS 
While embedded software is becoming more complex 
the ES engineers are asking the software engineering 
community techniques, methods and tools which can help 
them to improve software quality for ES. On the other hand, 
software engineering community is recognizing the 
necessity to adapt the existing methods and to offer new 
ones to effectively support the particularities of the ES area 
[15][16][17].  
Based on the literature review and the interaction to the 
ES professionals it is possible to detect just few 
requirements engineering methods, techniques and tools to 
address the ES particularities [1][7][9]. For instance, the 
software development in the automotive industry is a field 
that brings a great challenge to software engineering, where 
real time and security requirements come together. For the 
automotive ES to reach their goals, it is necessary that 
software control functions work correctly according to strict 
requirements [5].   
106
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

Beyond the automotive industry, the ES projects have 
become larger following the electronic components 
evolution and consequently making new challenges to 
requirements engineering. A great challenge is to produce 
ES with high quality and also supply the market before the 
system becomes obsolete. As discussed by Cheng and Atlee 
[8], the development teams must use software engineering 
techniques and processes to improve the productivity of the 
developers and the quality of the incoming software. The 
requirements engineering processes [12][14] help the 
stakeholders to define what they really need, allowing the 
suppliers  to clearly understand the requirements being 
implemented in the ES. In this requirements definition 
process, 
several 
professionals 
with 
different 
skills 
collaborate, such as: users and customers, specific domain 
experts, marketing specialists, project managers, electrical 
engineers, mechanical engineers, software engineers and 
others. For this group, the requirements engineering can 
offer several benefits, as follows: support to agreements and 
project planning, shortening the development schedule, 
offering a consistent basis for deadlines estimation, a 
baseline for validation and verification, and trustworthy 
artifacts to drive the ES development. 
In Broy’s work [5], two phases are suggested to run 
requirements elicitation: 
(i) 
Pre-phase: the first approximation of the product to be 
developed; during this phase the strategies and the 
position of the product in the marketplace are defined. 
The goals and marketing issues are planned and a 
document must be written reporting the product 
constraints and possible alternatives.   
(ii) Main phase: based on the results from the pre-phase an 
agreement among the stakeholders must be done. This 
agreement is an extensive specification of the technical 
requirements of the product. 
 
As discussed in [5][15], the conventional methods used 
to perform requirements engineering are incomplete and do 
not adequately address the particularities and necessities of 
ES. The requirements engineering to specify electronics, 
automotives and other devices that need ES demand 
adjustments. That is the main point discussed in this work 
and the motivation to propose GERSE.   
To propose the requirements elicitation guide for ES 
presented in this paper, a literature review about 
requirements engineering related to many aspects of ES was 
performed. This review covered the period from 1997 to 
2012.. Most of the reviewed works pointed out the issues 
and difficulties at the early stages of the ES development [3] 
[6] [13] [19], however, it was not found any suggestion 
about specific methodologies for capturing and defining 
requirements, or even a guide to refine and transform the 
high level requirements - close to customers and users - to 
technical requirements - close to ES engineers.  
III. 
GERSE: A PROPOSAL FOR A REQUIREMENTS 
ELICITATION GUIDE 
In GERSE elaboration, a field research with 53 
professionals that worked with ES in the Brazilian market 
was initially performed. The goal of this field research about 
requirements elicitation of the ES was to know the state of 
practice in Brazil. Therefore, professionals who worked in 
several segments using ES were invited, most of them being 
professionals working in industries in São Paulo state. The 
main segments covered in this research were: automotive 
systems, industrial automation, home appliance, domotics, 
medical devices, telecommunication and entertainment. 
After the organization and analysis of the field research 
results, a study about IEEE Std. 830-1998 recommendation 
[11] and Volere template [18] was performed. The IEEE 
Std. 930-1998 recommendation suggests how to organize 
software 
requirements 
proposing 
several 
generic 
specification templates. The Volere template is a document 
that suggests a detailed framework to document and 
organize software requirements. Both IEEE Std. 830-1998 
recommendation and Volere template are very known by the 
requirements engineering community, but they are generic 
guides for requirements elicitation. 
Based on these three elements (IEEE Std. 830-1998, Volere 
template and the field research results) groups of activities 
that compose GERSE were proposed, such set of activities 
was organized in a way to support the ES engineers to better 
capture and specify ES requirements.  
The main goal of the proposed guide is to help ES 
engineers during the requirements elicitation process. 
GERSE leads ES engineers during the elicitation process 
offering a set of activities that addresses the ES main 
features. Using GERSE, ES engineers can manage the 
requirements elicitation process in an organized way. The 
proposed guide helps the requirements definition allowing 
its complete specification for products based on embedded 
technology. GERSE is divided into two phases, named pre-
phase and main phase, which are organized in seven 
categories. These categories are organized in 46 activities, 
which are responsible to generate the artifacts that will 
compose the ES requirements. Each activity produces at 
least one artifact that can be both a document describing a 
specific feature of the product or a diagram modeling any 
specific feature. The activities of the pre-phase will help the 
ES engineers to make the transition from the high level 
requirements to technical requirements. Figure 1 shows a 
GERSE overview presenting the categories proposed to 
each phase. 
GERSE is divided into two phases: pre-phase e main 
phase. During the pre-phase the activities were gathered into 
three categories: 
Context Organization, Stakeholders 
Definition and High Level Requirements Elicitation. In the 
main phase, the activities were gathered into four categories: 
Definition of Hardware Requirements, Definition of 
Software Requirements, Identification of Quality Metrics 
and Identification of Production Requirements. Considering 
107
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

the activities of all categories GERSE offers 46 activities to 
perform a complete requirements elicitation of the ES. Each 
category has specific goals supported by activities that 
should help the ES engineers to produce useful artifacts to 
compose the requirements specification of the ES to be 
developed. 
 
 
Figure 1. Phases and categories supported by GERSE. 
 
During the pre-phase, the requirements that will help the 
ES engineers to understand the system to be developed are 
captured, such requirements define the system basic 
features, purposes, and goals. The final artifact obtained 
using  GERSE set of activities is a high level requirements 
specification, which defines all the ES characteristics, 
referring to mechanical, electrical and functional aspects 
plus the system cost overview, prototype model and all 
functional and non-functional requirements. It is important 
to observe that ES non-functional requirements are different 
from those usually managed in conventional systems. For 
example, energy consumption is an ES specific non-
functional requirements. 
When the pre-phase requirements are gathered, it is 
necessary to transform them into technical requirements, 
such transformation will enrich the requirements with more 
details. In this process, the category “High Level 
Requirements Elicitation” has a very important role because 
the requirements obtained from this category will be the 
requirements core to be transformed into technical 
requirements. After all activities suggested in GERSE are 
performed, the ES engineers gather a large set of functional 
and non-functional requirements that specify the main 
features of the ES. The cost to gather such requirements 
documentation is low when GERSE activities are followed 
by the ES engineers. This documentation facilitates the 
project development in parallel ways: one team developing 
the hardware and other team developing the software, 
turning the ES development faster to answer the time to 
market. 
IV. CASE STUDY AND GERSE EVALUATION 
In this section, a case study is presented using GERSE. 
The guide was instantiated to produce the requirements 
elicitation of a digital chess clock used in professional chess 
tournaments. The purpose of this experience was to evaluate 
GERSE in a real situation choosing a specific product and 
eliciting ES requirements that must control such product. 
The case study shows some artifacts generated using 
GERSE during the requirements elicitation process. 
Table 1 presents the results gathered from the activities 
performed in the category “Stakeholders Definition”. The 
identified stakeholders include: commercial department, 
marketing 
department, 
components 
suppliers, 
chess 
referees, other manufacturers, chess players, and hobbyists. 
The evolvement degree and influence degree on the project 
were defined for each type of stakeholders.  
TABLE I.  
RESULTS GATHERED IN THE ACTIVITIES FROM THE 
CATEGORY “STAKEHOLDERS DEFINITION” 
Activity  
Output Artifacts 
Definition of 
key stakeholder 
Commercial Department: 
Involvement level: low 
Influence on project: Approval of final costs. 
Department of Marketing 
Involvement level: High  
Influence on project: approval of  the 
characteristics of packaging, reliability, 
performance, usability and action buttons. 
Component manufacturers and suppliers 
Involvement level: High  
Influence on project: collaborate by providing 
technical specifications of the components to 
engineers to make better use of components to 
be used in product development. 
Determine 
domain experts 
stakeholders 
Chess referee 
Involvement level: High  
Influence on Project:  help understand the 
official rules of chess game according to the 
FIDE (World Chess Federation). 
Identify 
stakeholders 
against the 
project 
Competitors' manufacturer 
Involvement level: High, because the clocks 
available on the market by manufacturers are 
used as references for comparison of new 
product. 
Characterize 
User Profiles 
Professional chess players 
Profile: Users accustomed with digital chess 
clock available in the market.  Use the clock to 
study and compete. 
Hobbyists 
Profile: users more accustomed to analog clocks. 
Use the clock to study, and eventually in 
competitions. 
 
Figure 2 presents a suggestion for the design of the case, 
as well as the keys and the chess clock display, this 
prototype is resulted from the activities in the category 
“High Level Requirements Elicitation”. This prototype was 
based on market analysis and a requirements elicitation 
process performed with professional chess players, which 
pointed out the main functions that a digital chess clock has 
to offer for the users, especially for those who use it in 
professional tournaments.  
108
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

The complete requirements specification of the digital 
chess clock and GERSE documentation were sent to four ES 
engineers to evaluate the proposed guide, the evaluation was 
performed based on a survey. The ES engineers’ expertise 
was 
in 
automotive 
systems, 
medical 
devices 
and 
entertainment areas. The survey was composed by twenty 
one questions based on Likert’s scale [20]. The case study 
results, GERSE documentation and the survey were e-
mailed to the ES engineers. The answers to the survey 
allowed a realistic evaluation of GERSE viability.  
 
Figure 2. Initial product prototype showing the main functions - 
gathered in the activities performed from the category “High Level 
Requirements Elicitation”. 
 
Table II presents the results gathered in the activities 
performed from the category “Definitions of Hardware 
Requirements”. 
In 
this 
table, 
the 
main 
hardware 
requirements of the digital chess clock are presented, which 
specify the sensors, interaction displays, keys, external 
communication interface, hardware interruptions and 
microcontroller necessary to build the product.  Considering 
the unique aspects of this project it was not necessary to 
specify actuators. 
TABLE II.  RESULTS GATHERED IN THE ACTIVITIES FROM THE 
CATEGORY “DEFINITION OF HARDWARE REQUIREMENTS” 
Activity  
Output Artifacts 
Determine sensor 
01 Humidity sensor 
Function: continually check the internal moisture of 
the product to avoid damage to the components. 
Type: analog. 
01 Temperature sensor 
Function: check the value of the internal chassis 
temperature, to ensure that it will not exceed the 
working temperature range of the internal 
components. 
Type: analog. 
Delimit 
the 
actuators 
Not applied to this product. 
Clarify 
user 
interaction 
02  LCD graphical with 128 x 64  
Function: display the playing remaining time for 
each player (update the display in real time). 
01 Buzzer 
Function: warning to the end of settings, end of the 
game and battery low level. 
Characterize 
hardware 
interruptions 
Temperature Range 
Function: sound and light warning should be issued 
if the temperature is outside the ranges of 
acceptable values. 
Humidity range 
Function: sound and light warning should be issued 
if the humidity is outside the ranges of acceptable 
values. 
Battery 
Function: sound and light warning should be issued 
if the battery low level. 
Pause 
Function: by pressing the"pause" the time count 
both counters should be frozen. 
Identify 
the 
action buttons 
02 on/off switch with lock 
Function: activation of the stop watch time player 
who makes the move (and freezing the timer player 
that does the move ). 
01 Button type joystick 
Function: button for programming should have 4 
positions (left, right, up, down) and a central 
(enter), for control and navigation mode for 
programming. 
04 Buttons without locking 
Function: 
buttons 
to 
pause, 
start, 
save 
programming, turn off and on the clock. 
 
Specify 
the 
memories 
01  PROM memory 
Function: storage modalities of game time. 
01  Flash memory 
Function: store setup(variable) of types of playing 
time. 
Define 
external 
communication 
ports 
USB Port 
Function: connection to external board for 
automatic storage of moves. 
Fix 
component 
requirements 
AC / DC Adapter 
Function: battery charging 
Specify 
the 
requirements for 
layout 
of 
controller board 
The layout of the printed circuit board to be double 
sided to contribute to miniaturization of the 
enclosure. 
Defining 
the 
parameters 
of 
legacy hardware 
Not applied to this product. 
Demarcating the 
parameters 
of 
special  COTS 
Not applied to this product. 
 Identify 
microcontrollers 
PIC PIC18F4550-I/P 32 KB/2048 RAM 35 I/O 
microcontrollers with USB support. 
 
All ES engineers evaluated GERSE as a useful guide for 
ES requirements elicitation stating that such guide is easy to 
use and contributes to increase the ES development quality.  
Table III shows GERSE general evaluation results. It is 
possible to observe that GERSE was well evaluated, 
especially the aspects concerned to clearness, easiness of 
use and the contribution to improve the quality of 
requirements elicitation. The ES engineers considered the 
guide easy to use and it supports their requirements 
elicitation necessities. The completeness is an issue that 
must be improved in GERSE. 
 
 
109
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

TABLE III.  
GERSE GENERAL EVALUATION 
Questions 
Totally 
agree 
Partially 
agree 
Partially  
disagree 
Totally 
disagree 
The presented 
guide is clear 
enough to be used 
in an embedded 
systems design 
for small and 
medium 
businesses. 
 
 
50% 
 
 
50% 
 
 
0% 
 
 
0% 
The presented 
guide is complete 
and meets the 
needs of 
embedded 
systems projects 
for small and 
medium 
businesses. 
 
 
50% 
 
 
25% 
 
 
25% 
 
 
0% 
Would adopt the 
presented guide 
for requirements 
elicitation on 
future projects. 
 
50% 
 
25% 
 
25% 
 
0% 
The presented 
guide is easy to 
use. 
 
50% 
 
50% 
 
0% 
 
0% 
The presented 
guide contributes 
in improving the 
quality of 
embedded 
systems 
development. 
 
 
50% 
 
 
50% 
 
 
0% 
 
 
0% 
The presented 
guide meets your 
needs 
requirements 
definitions in 
embedded 
systems projects. 
 
 
50% 
 
 
50% 
 
 
0% 
 
 
0% 
 
V. ZAKI: A COMPUTATIONAL SUPPORT TO GERSE 
 
The adoption of any software process can be facilitated 
by the use of computer support. In this sense, a tool called 
Zaki [21] was developed, to support GERSE activities and 
the requirements elicitation process for embedded systems.   
Zaki tool is divided into two modules, according to 
GERSE phases (pre-phase and main phase), supporting 
activities like requirements elicitation, analysis and 
management for embedded systems. Zaki tool was 
developed using .NET platform (C# language) and the SQL 
Server database. 
During the pre-phase, Zaki tool supports functionalities 
related to manage information about project guidelines and 
main product features, development organizational impact 
and target audience. During the main phase, Zaki tool is 
divided into three modules: Definition of Hardware 
Requirements, Definition of Software Requirements, and 
Identification of Quality Metrics. 
Specifically 
related 
to 
Definition 
of 
Hardware 
Requirements, Zaki tool converts high level requirements to 
technical ones, allowing the definition of sensors, actuators, 
memory, microcontrollers, legacy hardware and other 
requirements associated to hardware components. Besides, 
it is possible to choose COTS (Commercial Off-The-Shelf) 
to be used in the embedded systems. Figure 3 presents a 
user interface of Zaki tool responsible to record actuators 
related to the embedded system project. 
 
 
Figure 3. User interface of Zaki tool to manage actuators. 
 
Aiming to perform a feasibility study of Zaki tool, three 
requirements engineers - with over two years of experience 
in the area - were asked to perform the requirements 
elicitation and specification for an embedded system to a 
data logger device. The main goal of such device is 
monitoring and collecting environmental data, including 
temperature, atmospheric pressure, humidity, rainfall, wind 
speed, and others. 
TABLE IV.  
ADDRESSING QUESTIONS TO THE ELICITATION PROCESS 
SUPPORTED BY ZAKI 
Questions 
Totally 
agree 
Partiall
y 
agree 
Disagr
 
The tool meets the goals of the 
requirements elicitation process for 
embedded systems. 
 
100% 
 
0% 
 
0% 
The tool facilitates the process of 
requirements 
elicitation, 
assuring 
quality of project and time reduction. 
 
100% 
 
0% 
 
0% 
The tool organizes information about 
the project and ensures an efficient 
requirements elicitation process. 
 
25% 
 
75% 
 
0% 
The 
tool 
supports 
a 
complete 
requirements 
elicitation 
process, 
ensuring the completeness of the project 
goals. 
 
100% 
 
0% 
 
0% 
110
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

 
The evaluation was performed by the filling of a 
questionnaire with 15 questions - 13 objective questions and 
2 personal observations. The goal of evaluation was to 
analyze the use of Zaki tool to identify improvements and 
non compliances.  
According to Table IV, the requirements engineers were 
unanimous in stating that the tool supports the requirements 
elicitation process, facilitating and reflecting in time savings 
and quality of the embedded systems project. However, 
interfaces improvements must be performed to facilitate the 
usage of Zaki tool. 
 
VI. CONCLUSION AND FUTURE WORK 
GERSE proposed activities support engineers guiding 
ES requirements elicitation and specification, which help 
them to produce an organized, easy to understand and 
complete requirements document. According to the 
evaluation performed by ES engineers, GERSE reaches the 
goal of being itself a consistent guide for ES requirements 
elicitation. One of this work’s relevant contribution is to 
narrow the gap between Software Engineering – specifically 
concerned to Requirements Engineering - and ES 
engineering. The requirements elicitation for any kind of 
system is not a trivial job. Particularly for ES, there are a lot 
of specific issues to be managed, for instance: real-time 
requirements, energy consume control, hardware constraints 
– sensors, actuators, memory and microcontrollers – short 
window of time-to-market.   
GERSE evaluation performed by ES engineers with 
expertise in several areas of application, as automotive, 
medical devices and entertainment, pointed out that the 
guide is clear and easy to understand. But the evaluation 
also reveals that some aspects can be improved such as 
GERSE completeness, specially the activities concerned to 
quality metrics and production requirements. These issues 
are going to be treated in future works. In general, GERSE 
was considered satisfactory contributing to fulfill the 
existent gap in the early stages of an ES project. GERSE 
contributes to decrease the occurrence of faults, errors and 
mistakes that are very common during the ES requirements 
capturing. A mature requirements elicitation process can be 
reached using GERSE, which supports the transition of high 
level requirements to technical ones. This paper also 
presented Zaki, a tool to support GERSE adoption, since it 
can assist ES engineers to better manage the requirements 
gathered when GERSE is running. 
REFERENCES 
[1] A. Post, I. Menzel, J. Hoenicke, and A. Podelski, “Automotive 
Behavioral Requirements Expressed in a Specification Pattern 
System: a Case Study at BOSCH”, Requirements Engineering, 
Springer-Verlag, vol. 17, 2012, pp. 19-33. 
[2] M. Aoyama, “Persona and Scenario Based Requirements Engineering 
for Software Embedded in Digital Consumer Products”. 13th IEEE 
International Conference on Requirements Engineering, 2005, pp. 85-
94. 
[3] A. Aurum and C. Wohlin, “Requirements Engineering: Setting the 
context”. In: Aurum C. & Wohlin C. (Eds), Engineering and 
managing software requirement. Springer. Berlin, Germany, 2005, 
pp. 1-15. 
[4] J. Boulanger and D. van Quang, “Experiences from a model-based 
methodology for  embedded electronic software in automobile”,  
(ICTTA) 3rd 
International Conference on 
Information and 
Communication Technologies: From Theory to Applications, 2008, 
pp. 1-6. 
[5]  M. Broy, “Requirements Engineering for Embedded Systems”, 
Workshop on Formal Design of Safety Critical Embedded Systems 
(FemSys), Munich, Germany, 1998. 
[6] R. Cancian, M. Stemmer, and A. Frohlich, “New Developments in 
EPOS Tools for Configuring and Generating Embedded Systems”, 
Proceedings of the 12th IEEE International Conference on Emerging 
Technologies and Factory Automation, Patras, 2007, pp. 776-779. 
[7] H. Chae, “The Partitioning Methodology in Hardware/Software Co-
Design Using Extreme Programming: Evaluation through the Lego 
Robot Project”, Proceedings of the sixth IEEE International 
Conference on Computer and information Technology, 2006, p. 187. 
[8] B. Cheng and J. Atlee, “Research Directions in Requirements 
Engenneering, Future of software Engeneering”. IEEE Future of 
Software Engineering (FOSE’07),  2007, pp. 285 – 303. 
[9] E. Sikora, B. Tenbergen, and K. Pohl, “Requirements Engineering for 
Embedded Systems: an Investigation of Industry Needs”, Proceedings 
of the 17th International Working Conference on Requirements 
Engineering: foundation for software quality (REFSQ'11). Springer-
Verlag, Berlin, Heidelberg, 2011, pp. 151-165. 
[10] B. Graaf, M. Lormans, and H. Toetenel, “Embedded Software 
Engineering: the State of the Practice”, IEEE Software archive, vol. 
20, no. 6, 2003, pp. 61-69. 
[11] IEEE Computer Society Software Engineering Standards Committee, 
“IEEE 
Recommended 
Practice 
for 
Software 
Requirements 
Specifications”. IEEE Std 830-1998. 
[12] H. Hoffmann and F. Lehner, “Requirements Engineering as a Success 
Factor in Software Projects”. IEEE Software, vol. 18, no.4, 2001, pp. 
58-66. 
[13] L. Jiang and A. Eberlein, “Selecting Requirements Engineering 
Techniques Based on Project Attributes - A Case Study”. Proceedings 
of the 14th Annual IEEE International Conference and Workshops on 
the Engineering of Computer Based Systems, 2007, pp. 269 – 178. 
[14] G. Kotonya and I. Sommerville, Requirements Engineering: 
Processes and Techniques. John Wiley and Sons, 1998. 
[15] P. Liggesmeyer and M. Trapp, “Trends in Embedded Software 
Engeneering”,  IEEE Software Magazine, v. 26, n. 3, 2009, pp. 19-25. 
[16] E. Nasr, J. Mcdermid J, and G. Bernat, “Eliciting and Specifying 
Requirements with Use Cases for Embedded Systems”, Proceedings 
of the 7th International Workshop on Object-Oriented Real-Time 
dependable systems (WORDS), 2002, pp. 350 – 357. 
[17] A. Pretschner, M. Broy, I. H. Kruger, and T. Stauner, “Software 
Engineering for Automotive Systems: A Roadmap Future of Software 
Engineering”, In: International Conference on Software Engineering - 
Future of Software Engineering (FOSE), 2007, pp. 55 -71. 
[18] S. Robertson and J. Robertson, Mastering the Requirements Process, 
Addison-Wesley, 2nd edition, London, 2006. 
[19] F. Vahid and T. Givargis, Embedded System Design: A Unified 
Hardware/Software Design. John Willey & Sons, 2002. 
[20] R. Likert, “A technique for the measurement of attitudes”. Archives 
of Psychology, 1932. 
[21] J. C. Ossada, L. E. G. Martins, A. Belgamo, and B. S. Ranieri, 
“GERSE: Guia de Elicitação de Requisitos para Sistemas 
Embarcados”, XII Workshop on Requirements Engineering (WER), 
Argentina, 2012, pp. 1-14. 
 
 
111
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

