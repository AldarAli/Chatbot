 
 
An Architecture of Adaptive Product Data Communication System  
for Collaborative Design  
Bernadetta Kwintiana Ane and Dieter Roller 
Institute of Computer-aided Product Development Systems, Universität Stuttgart 
Universitätsstr. 38, D-70569 Stuttgart, Germany. 
E-Mail: ane@informatik.uni-stuttgart.de, roller@informatik.uni-stuttgart.de 
 
 
Abstract—Today, designers and engineers on collaborative 
design environments often work in parallel and independently 
using different tools distributed at separate locations. Due to 
unique characteristic of engineering design, interaction during 
product development is difficult to support. As the information 
and 
communication 
technologies 
advances, 
computer 
supported collaborative 
design (CSCD) becomes 
more 
promising. Nevertheless, a potential problem remains between 
the product design and manufacturing, which mainly lies on 
the geometric shape of products that exists inherent in mass-
customization. Meanwhile, CAD/CAM technologies have their 
own authoring tools, which govern the use of independent 
language and format for expressing various features and 
geometry. This condition creates incompatibility and has 
significant impact to the product costs. This paper is to address 
the incompatibility problem by introducing an architecture of 
the adaptive product data communication system. The 
adaptive system has a capability for autonomous tracking of 
design changes. The tracking model supports forward and 
backward tracking of constraint violation during the 
collaborative design transactions. 
Keywords-computer supported collaborative design; product 
data communication; adaptive. 
I. 
 BACKGROUND 
Today’s industry requires massive computer-supported 
technologies to address the increasingly complex product 
development tasks and the high expectations of customers. 
As the information and communication technologies 
advances, application of collaborative engineering to 
product design, so-called computer supported collaborative 
design (CSCD), becomes more promising.  
Sprow [1] defines CSCD, or so-called cooperative 
design, as the process of designing a product through 
collaboration among multidisciplinary product developers 
associated with the entire product life-cycle. CSCD is 
carried out not only among multidisciplinary product 
development teams within a company, but also across the 
boundaries of companies and time zones, with increased 
numbers of customers and suppliers involved in the process. 
Accomplishing a design task and delivering the results 
to manufacturing requires huge and complex information. 
Meanwhile, a potential problem remains between design 
and manufacturing, which mainly lies on the geometric 
shape of products that exists inherent in mass-customization 
[2]. Since the CAD/CAM technologies mostly govern 
independent authoring tools in different languages and 
formats, this condition creates incompatibility and has 
significant impact to the product costs. Therefore, 
synchronization of product data along the product 
development life-cycle is necessary.  
This paper is to address the incompatibility problem that 
usually occurs in a collaborative design team by introducing 
an architecture of the adaptive product data communication 
system.  The adaptive system is developed based on cloud 
computing technology, whereby shared servers provide 
resources, softwares, and data to designers and engineers on 
remote nodes on demand. Section 2 provides the framework 
of CSCD, Section 3 describes the architecture of the 
adaptive product data communication system, Section 4 
describes the system ability for tracking of design changes, 
and, finally, Section 5 summarizes the conclusion of the 
paper. 
II. 
 COMPUTER SUPPORTED COLLABORATIVE DESIGN 
Many researchers consider CSCD as an application of 
computer supported cooperative work (CSCW) in design. 
The term CSCW was first used by Greif and Cashman in 
1984 to describe the topic on how to support people in their 
work arrangements with computers [3, 4]. Design has been 
one of the most important applications of CSCW 
technologies. With the rapid advancement of Web-based 
technologies, CSCD has progressed dramatically. The depth 
and breadth of CSCD applications are far beyond the 
traditional definition of concurrent engineering.  
Technologies like CSCW and intelligent agents have 
been investigated to be effective to enhance communication, 
cooperation, and coordination among design team as well as 
software tools. The CSCW tools like groupware are used to 
facilitate communication among users. Meanwhile, in 
CSCD an agent can be considered as a software system that 
communicates and cooperates with other software systems 
to solve a complex problem, which is beyond the capability 
of each individual software system [5]. 
A. Web Technology for Collaborative Design 
Since its emergence in 1993, Web has been quickly 
applied in the development of collaborative design systems. 
Along with the Web, a number of associated representation 
technologies have been developed, such as Hyper Text 
Mark-up Language (HTML), eXtensible Mark-up Language 
(XML), and Virtual Reality Mark-up Language (VRML),  
to enable better cross-platform and cross-enterprise 
exchange of multimedia information and design models. 
Many early collaborative design systems were developed 
using the Blackboard architecture [6] and distributed-object 
technologies like CORBA (Common Object Request Broker 
Architecture) [7], COM (Component Object Model) [8], and 
DCOM 
(Distributed 
Component 
Object 
Model).                      
A blackboard architecture is a distributed computing 
182
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

 
 
architecture where distributed applications, modelled as 
intelligent agents, share a common data structure called the 
“blackboard” and a scheduling/control process. 
B. Integration of Web and Agent Technologies 
A CSCD system developed with the Web as a backbone 
will primarily provide access to catalogue and design 
information 
on 
components 
and 
sub-assemblies, 
communication 
amongst 
multimedia 
formats, 
and  
authenticated access to design tools, services and 
documents. With the development of Web services and 
Semantic Web technologies, Web-based infrastructure has 
been used in a number of collaborative design systems. A 
Web-based collaborative design system usually uses a 
client/server architecture, in which the interaction between 
components is predefined. This kind of approach is 
considered insufficient to support dynamic collaborative 
design, where tasks are usually involving complex and non-
deterministic interactions, producing results that might be 
ambiguous and incomplete. Hence, integration of Web and 
agent technologies to support collaborative design is 
considered crucial.  
Software agents are mostly used for supporting 
cooperation amongst designers, enhancing interoperability 
between traditional computational tools, or allowing better 
simulations. An agent-based collaborative design system is 
a loosely coupled network of problem solvers that work 
together to solve complex problems that are beyond their 
individual capabilities [9]. Software agents in such systems 
are communicative, collaborative, autonomous, reactive (or 
proactive), and intelligent.  
To date, many agent applications in the Web-based 
collaborative design still face many challenging questions. 
Coping with this issue, the concept of active Web server is 
introduced to integrate the Web and agent technologies [10]. 
The active Web server has driven the emergence of Web 
services concept [11]. As stated by the World Wide Web 
Consortium (W3C) [12], a Web service is a software system 
designed to support interoperable machine-to-machine 
interaction over a network.  
III. ARCHITECTURE OF ADAPTIVE PRODUCT DATA 
COMMUNICATION  SYSTEM 
In this section, an adaptive product data communication 
system is being introduced. The adaptive system is designed 
using an integrated Web and agent-based technologies for 
coordination in collaborative design environment. Here the 
term “adaptive” represents the ability of the agent to adapt 
with changes in the Web-based environment that commonly 
source from changes of application programs, data formats 
and structure, in such a manner in order to improve the 
system’s future performance. 
Design collaboration requires a higher sense of working 
together in order to achieve a holistic creative result [13]. It 
is a far more demanding activity, more difficult to establish 
and sustain, than completing a project in cooperation or 
coordination. Here the architecture of the adaptive 
communication system is designed based on STEP [2, 14], 
i.e., Standard for the Exchange of Product Model Data. 
STEP is an ISO standard for the computer-interpretable 
representation and exchange of industrial product data. The 
system architecture contains a shared product database 
management system (DBMS), which is composed on a low-
level language, i.e., ASCII (American Standard Code for 
Information Interchange), as its native format. The database 
consists of geometry, topology, and auxiliary information. 
Considering 
complexity 
of 
engineering 
objects, 
a 
“reference” of geometry and topology is built into the 
DBMS that consists of taxonomy and data dictionary of 
elements geometry. 
A. Taxonomy  
The taxonomy is designed to be generic that workable 
under a variety of CAD applications. As a reference, the 
taxonomy has two functions. First, it identifies and generates 
particular geometric shapes. Second, it classifies the 
geometry into specific groups of objects (e.g., crankshaft, 
cantilever, 
motor-body, 
etc.). 
Fig. 
1 
describes 
the 
hierarchical structure of object classes, features, faces, and 
geometric entities in the parent-child relationship. 
B. Data Dictionary 
Data dictionary is a centralized repository of information 
about such data like meaning, relationships to other data, 
origin, usage, and format [15]. Data dictionary refers  to a 
piece of  “middleware” that  supplants  the native format of 
DBMS. Software agents are implant in the middleware in 
HTML, XML and VRML formats as interface to the 
CAD/CAM (i.e., Inventor and solidworks) applications. The 
middleware is modelled as an active object-oriented 
database (OOD). The active OOD is a database that allows 
users to specify actions to be taken automatically given 
certain rules when certain conditions arise [16]. In this 
architecture, the data dictionary is developed as an active 
semantic network (ASN) and realized as an active OOD. 
ASN is a shared database system developed to support 
designers during product development [17]. The goal of 
ASN is to represent all knowledge relevant to the 
collaborative product design teams. Fig. 2 describes the data 
dictionary in the ASN architecture.  
C. ISO/OSI Data Communication Network 
Since each CAD/CAM system has different proprietary 
native formats, data communication in collaborative design 
team should be done on a neutral format, i.e., .STEP file. 
The terms “neutral’ means that the file format is 
independent of different formats utilized by the various 
computer-aided systems. Here the data communication 
network is designed based on the seven-layers ISO/OSI 
model as depicted in Fig. 3. An ISO/OSI model is an Open 
System Interconnect (OSI) model developed by the 
International Standards Organization (ISO). Therefore, this 
model is considered fit to the STEP standard. The model 
splits the communication process into seven layers, i.e., 
physical, data-link, network, transport, session, presentation, 
and application layers.  
The physical layer deals with the electrical and 
mechanical means of data transmission. Data-link layer 
frames  across  a single  local  area  network  (LAN)  and  its  
183
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

 
 
 
Figure 1.  Taxonomy. 
 
functions include resolution of contention for use of the 
shared  transmission  medium, delimitation and  selection 
of frames addressed to this node, detection of noise via a 
frame check sequence, and any error correction or retries 
performed within the LAN. Network layer provides the 
transparent transfer of data between transport entities. 
Transport layer ensures that data units are delivered error-
free, in sequence, with no losses or duplications. Session 
layer controls the dialogue between applications during a 
communication session. Presentation layer takes care of 
the syntax of the data exchanged between applications. 
Finally, application layer ensures that data transferred 
between any two applications are understood. Each layer 
can be developed independently and replaced without 
affecting the other layers.  
When data is sent from workstation A to workstation 
B, it goes down the layers. At each layer, a control 
message is appended to the data. Then, the complete data 
is 
transmitted 
through 
the 
ISO/OSI 
medium 
to 
workstation B. At each layer of workstation B, the control 
message is stripped and proper actions are taken to 
convert the data into the proper format. Through an 
efficient data communication, conflicts and constraints 
can be analyzed earlier from different perspective. Hence, 
the collaborative design team can achieve the design 
objectives for an optimal product performance, at low 
manufacturing costs, and assurance that the product can 
easily and economically be serviced and maintained [18]. 
IV.   TRACKING OF DESIGN CHANGES 
One of the issues in collaborative design is that one 
must assess the impacts of a design change on other 
design objects and notify other parties promptly [19]. This 
paper adopts an approach to tracking of design changes 
introduced by Xie [20]. 
The mechanism for tracking of design changes is 
based on product data and their relationships. The product 
data contains descriptions for product specification, 
function decomposition structure, solution principles, 
layout design, assemblies, and parts. The relationships are 
established based on geometric constraint between two or 
more elements. The geometric constraint relationships 
define three types of constraint between parts, i.e., fit, 
contact, and consistent constraints. The fit constraint 
exists if there is a tolerance requirement between parts. 
The contact constraint represents a physical contact 
between two parts. The consistent constraint exists if two 
parts hold a dimensional constraint without a physical 
contact.  
This 
approach 
supports forward 
tracking 
and 
backward tracking of a design change. Forward tracking 
identifies the impact of the change on later design stages 
if a design change  occurs at  an earlier stage. On the other 
hand, backward  tracking   identifies  the  impacts   of  
changes  on previous stages, if a change occurs at a later 
stage. The design change rules are stored in a knowledge 
base so that all the impacts can be retrieved through an 
inference engine. Therefore, designers can identify the 
total impacts of a proposed design change on an entire 
product development life-cycle.  
To make the necessary design information available, 
product data information is extracted from design process 
and represented in a data model. A data model is a set of 
concepts that can be used to describe the structure of 
DBMS [21]. Here an entity-relationship model is used to 
describe the concepts of entities, attributes, and 
relationships.  
In this regard, the change tracking model involves  
five entities, i.e., Specification, Function, Principle, 
Design_ object, Assembly, and Part. These entities are 
associated to 19 attributes, i.e., Buy-or-make, Category, 
Classification, Cost, Criteria, Description, Dimension, 
High-limit, ID, Low-limit, Mass, Materials, Measurement, 
Quantity, Selected, Source-form, Tolerance, Type, and 
Unit. Meanwhile, the relationships represent a set of 
associations amongst entities. Cardinality ratio constraints 
specify 
three 
common 
combinations 
for 
binary 
relationship types, i.e., one-to-one (1:1), one-to-many 
(1:M), and  many-to-many (M:N). The relationships in 
this model include Requires, Contains, Previous, 
Solution, Implement, Belongs, and Constraint. Fig. 4 
describes the entities and their associated attributes in the 
prescribed relationships. 
Classes
Features
Faces
Geometric 
entities
Objects:
regular or free-form surfaces
Angled sub-objects
Radial sub-objects
Block
Prism
Pyramid
Cone
Cylinder
Sphere
Toroidal
Rectangle
Triangle
Polygon
Ellipse
Circle
Horizontal 
line
Vertical   
line
Upward 
diagonal
Downward 
diagonal
Convex
hull
Arc (single radius,
given θ angle)
Curve
184
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

 
 
 
Figure 2.  Data Dictionary In Active Semantic Network. 
 
V. CASE STUDY 
To verify the changes tracking model, a case study is 
applied on the motor-body. The initial design of motor-
body has cylinder shape with 1.751 kg mass and 0.000227 
m3
Generally, structural analysis problem can be treated 
as linear static problem under assumptions small 
deformation (i.e., loading pattern is not changing due to 
the deformed shape), elastic material (i.e., no plasticity), 
and static load (i.e., the load is applied to the structure in a 
slow of steady operation). Therefore, the force-
displacement analysis is applied to the motor-body. The 
relationship between the joint forces and the joint 
displacements of finite elements should satisfy the 
stiffness function,   
 volume of alloy steel (SS). The real structure sustains 
a distributed state of stress. The stress is represented by 
forces at the element joints or nodes. Correspondingly, the 
displacement of these points is employed in the 
characterization of displaced state of the element. 
 
 
Figure 3.  ISO/OSI Data Communication Network Model. 
Product 
Data
CAD tools
Session
Transaction
ASN-API
Client-Stub
CAD tools
Session
Transaction
ASN-API
Client-Stub
Cooperative 
Transaction Systems
Event
Action
Conflict Detector
Active
Component
Rule based 
Conflict-resolution
Condition
Project 
Data
User 
Model
Dimensions:
Rules
Data
Locks
ASN - API
ASN - Stub
Object 
Manager
Distributed Object Management
Locality
Consistency
Replication
Caching
Data Dictionary
Object-oriented 
Database Systems
1
a1
2
1
a2
2
1
b1
2
i
...
j
A
...
B
TAXONOMY
Self-learning system
Manufacturing
Prototyping
Quality 
Inspection
Workstation A
Application
Presentation
Session
Transport
Network
Data Link
Physical
Layer 1
Layer 6
Layer 5
Layer 4
Layer 3
Layer 2
Layer 7
Workstation B
CAD/CAM authoring tools:
Inventor and Solidworks
Middleware:
HTML, XML, VRML
Application
Presentation
Session
Transport
Network
Data Link
Physical
ISO/OSI medium
User Program
User Program
Neutral Format Translator 
based on STEP standard
Product DBMS:
ASCII
185
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

 
 
 
Figure 4.  E-R Diagram For  Change Tracking Model (Source: Xie [19]). 
 
{F} = [k] {∆} 
(1) 
where {F}: element force, {∆}: displacement vectors, and 
[k]: element stiffness matrix. An individual term of the [k] 
matrix, kij, is an element stiffness coefficient. When the 
displacement ∆j is imposed at unit value and all other 
degree of freedom are held fixed against displacement (∆k 
= 0, k≠j) the force Fi is equal in value to kij
The force-displacement analysis produces an average 
deformation scale at 1.72501e
. 
+008
Furthermore, the Von Mises stress [22] analysis is 
applied 
 and prediction of 
location where the most deformed mesh are possible to 
occur. The resultants displacement shows the minimum 
condition 0 mm is at location (3.969 cm, -0.499 cm, -
11.000 cm) and the maximum condition 6.76612e-008 
mm at location (-3.373 cm, -3.291 cm, -0.099 cm). The 
analysis predicts that two most possible deformed 
locations likely to occur at the lower-part of cab-screw 
holes as depicted in Fig. 5. This condition makes the 
cylinder shape has more possibility to slip from its 
position and fixtures.  
𝜎𝑒 = 1
√2
ඥ(𝜎1 − 𝜎2)2 + (𝜎2 − 𝜎3)2 + (𝜎3 − 𝜎1)2 
(2) 
where 𝜎1 , 𝜎2 , and 𝜎3 : three principle stresses at the 
considered point in a structure. For a ductile material, the 
stress (𝜎𝑒) and the yield stress of the material (𝜎𝑦) must 
satisfy the constraint 
𝜎𝑒 ≤ 𝜎𝑌. 
(3) 
The results estimate  minimum stress 3.04976e-006 N/mm2
maximum stress 0.000572322 N/mm
 
(MPa) at location (4.170 cm, -0.470 cm, -6.750 cm) and 
2
In this regard, design improvement is done based on 
entities, attributes, and relationships which have been 
defined in the E-R diagram. Change of Design_object 
from cylinder to block shape has driven change of 
specification, part, and assembly respectively. The 
progress for forward tracking of Design_object change is 
described in Table I. 
 (MPa) at location 
(3.524 cm, -3.385 cm, -0.350 cm). The stress is 
distributed from the inner cylindrical mesh boundary to 
the outer boundary with the highest strained locations are 
found at the elements adjacent to the four cab-screw 
holes. This condition makes the initial design has high 
potential failure during the assembly and product use. 
Therefore, it needs to be redesigned. 
As a result, a block shape of motor-body in dimension 
82.5 x 82.5 x 100 millimeters with 1.859 kg mass and 
0.000241 m3 volume of alloy steel (SS) is obtained. The 
new design has 6.15% more weight than the initial design, 
but shows better performance. The force-displacement 
analysis of the new design produces an average 
deformation scale 8.59488e+007, i.e., 50.18% better than 
the initial design. In the new design, the deformation has 
been localized at the upper-front to -middle of finite mesh 
as depicted in Fig. 6. Moreover, the von Mises stress 
analysis shows the results of minimum stress 3.43238e-007 
N/mm2 (MPa) and maximum stress 0.00139487 N/mm2
 
 
(MPa). These structural problems are expected to be 
further minimized during assembly when the motor-body 
is joined with the motor-cover.  
 
 
 
 
(a) cylinder shape 
(b) estimated displacement 
 
(a) block shape 
(b) reduced displacement 
Figure 5.  Initial Design 
 
Figure 6.  Improved Design 
 
 
 
Deformed 
mesh 
 
 
 
Deformed 
mesh 
186
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

 
 
TABLE I.      FORWARD TRACKING OF DESIGN OBJECT CHANGE 
ENTITIES 
ATTRIBUTES 
STATUS 
DESIGN VALUES 
INITIAL 
IMPROVED 
Function 
ID 
No change 
part#1 
part#1 
 
Description 
No change 
Motor-body 
Motor-body 
Principle 
Classification 
No change 
Motor protection 
Motor protection 
 
Source Form 
No change 
Production house 
Production house 
Design_Object 
Quantity 
No change 
100 pieces 
100 pieces 
 
Buy-or-Make 
No change 
make 
make 
Specification 
Criteria 
No change 
mechanic – static 
mechanic – static 
 
Low-limit 
Change 
3.04976e-006 N/mm
3.43238e-007 N/mm
2 
 
2 
High-limit 
Change 
0.000572322 N/mm
0.00139487 N/mm
2 
 
2 
Unit 
No change 
1 
1 
 
Category 
No change 
automotive part 
automotive part 
Part 
Material 
No change 
alloy steel (SS) 
alloy steel (SS) 
 
Mass 
No change 
min 1.750 – max 1.860 kg 
min 1.750 – max 1.860 kg 
 
Cost 
No change 
USD 367.82 - USD 375.00 
USD 367.82 - USD 375.00 
 
Measurement 
No change 
millimeter (cm) 
millimeter (cm) 
 
Dimension 
Change 
d⊘: 82.5mm,  ℓ: 110 mm 
𝑤: 82.5 mm, ℎ: 82.5 mm, ℓ: 110 mm 
VI. CONCLUSION 
Today, design activity is inevitable should be done as 
an integrated process with design optimization and 
manufacturing. In a collaborative design environment, the 
product development activities usually take place at 
geographically distributed locations. 
This paper introduces an adaptive product data 
communication system that is developed by making used 
of the integrated Web and agent-based technologies. The 
architecture of the adaptive system is designed based on 
STEP standard. The system contains a shared product 
database 
management 
system (DBMS), 
which is 
composed on a low-level language as its native format. 
Meanwhile, the data communication network is developed 
based on the seven-layer ISO/OSI model. Considering 
high possibility of constraint violation during the 
collaborative design transactions, a capability for 
autonomous tracking of design changes is built in to the 
adaptive system. The tracking model supports forward 
and backward tracking of design changes. Therefore, it 
enables designers and engineers to identify the total 
impacts of a proposed design change on an entire product. 
ACKNOWLEDGMENT 
This research project is organized under the financial 
support of The Alexander von Humboldt Foundation and the 
Institute of Computer-aided Product Development Systems, 
Universität Stuttgart in Stuttgart, Germany. 
REFERENCES 
[1]  
E. 
Sprow, 
“Chrysler’s 
Concurrent 
Engineering 
Challenge,” 
Manufacturing Engineering, vol. 108, issue 4, 1992, pp. 35-42. 
[2]  
B. K. Ane, “Automation of Design for Reverse Engineering in a 
Collaborative Design Environment: Development of STEP Neutral 
Format Translator for Product Data Exchange,” Research Report, 
Institute 
of 
Computer-aided 
Product 
Development 
Systems, 
Universität Stuttgart, Stuttgart-Germany, 2010. 
[3]  
K. Schmidt and L. Bannon, “Taking CSCW Seriously,” Computer 
Supported Cooperative Work, vol. 1, issue 1/2, 1992, pp. 7-40. 
[4]  
I. Greif, Computer-Supported Cooperative Work: A Book of 
Readings, San Mateo, CA: Morgan Kaufmann Publishers, 1988. 
[5]  
W. Shen, Q. Hao, H. Yoon, and D. H. Norrie, “Applications of Agent 
Systems in Intelligent Manufacturing: An Update Review,” 
International Journal of Advanced Engineering Informatics, vol. 20, 
issue 4, 2006, pp. 415-431. 
[6]  
V. Jagannathan, R. Dodhiawala, and L. S. Baum, Blackboard 
Architectures and Applications, San Diego, CA: Academic Press, 
1989. 
[7]  
Object Management Group, Common Object Request Broker 
Architecture (CORBA) Specification: Version 3.1, Needham, MA: 
OMG, 2008. 
[8]  
D. Box, Essential COM, Upper Saddle River, NJ: Addison-Wesley. 
1998, ISBN: 0-201-63446-5. 
[9]  
W. Shen, D. H. Norrie, and J. P. Barthes, Multi-Agent Systems for 
Concurrent Intelligent Design and Manufacturing, London, UK: 
Taylor and Francis, 2001. 
[10] 
W. Shen, “Web-based Infrastructure for Collaborative Product 
Design: An Overview,” Proc. of the 5th International Conference on 
Computer Supported Cooperative Work in Design, 2000, pp. 239-244. 
[11]  W. Shen and Q. Hao, “A Service Oriented Framework for Blow 
Molded Automotive Parts Design and Optimization,” Proc. of the 
SAE 2004 Congress, 2004, SAE 2004-01-1244. 
[12]  W3C Working Group,” Web Services Architecture,”World Wide Web 
Consortium, 
2004, 
http://www.w3.org/TR/2004/NOTE-ws-arch-
20040211, accessed on January 20, 2011. 
[13]  K. Huang, X. Li, S. Cao, B. Yang, and W. Pan, “Co-DARFAD - The 
Collaborative Mechanical Product Design System,” Proceed. of the 
Sixth International Conference on Computer Supported Cooperative 
Work In Design, 2001, pp. 163-168. 
[14]  International Standard Organization, Industrial Automation System 
and Integration – Product Data Representation and Exchange – Part 
31: Conformance Testing Methodology and Framework: General 
Concepts, Geneva, Switzerland, ISO Central Secretariat, 1992. 
[15]  IBM Dictionary of Computing, “IBM Terminology,” 2008,                          
http://www-01.ibm.com/software/globalization/terminology/d.html, 
accessed on January 20, 2011. 
[16]  D. Roller and O. Eck, “Constraint propagation using an Active 
Semantic 
Network,” in Geometric 
Constraints Solving and 
Applications, (Eds.) B. Brüderlin and D. Roller, Berlin. Springer-
Verlag, 1998. 
[17] 
B. Bernd, G. Heiko, and W. Michael, „Aktives Semantiches 
Konstruktions- und Zuverlässigkeitsnetz. In: Entwicklung und 
Erprobung Innovativer Produkte-Rapid Prototyping: Grundlagen, 
Rahmenbedingungen und Realisierung,” (Eds.) B. Bertsche and H.-J. 
Bullinger, Berlin. Springer-Verlag, 2007, pp. 130-158. 
[18] 
J. Harrley, Concurrent Engineering, Cambridge, MA: Productivity 
Press, 1992. 
[19] 
L. Wang, W. Shen, H. Xie, J. Neelamkavil, and A. Pardasani, 
“Collaborative Conceptual Design: A State-of-the-art Survey,” Proc. 
of the sixth International Conference on Computer Supported 
Cooperative Work in Design, 2000, pp. 204-209. 
[20] 
H. Xie, “Tracking of Design Changes for Collaborative Product 
Development ,” Proc. of the Sixth International Conference on 
Computer Supported Cooperative Work in Design, 2001, pp. 175-180. 
[21]  R. Elmasri and S . B. Navather, “Fundamentals of Database Systems,” 
New York: Benjamin Cummings Publishing Company Inc., 1989. 
[22] 
C. L. Liua, Z. Z. Lua, Y. L. Xub, and Z. F. Yuec, “Reliability Analysis 
For Low Cycle Fatigue Life of the Aeronautical Engine Turbine Disc 
Structure Under Random Environment,” Materials Science and 
Engineering, vol. A, issue 395, 2005, pp. 218-225.  
187
ACHI 2011 : The Fourth International Conference on Advances in Computer-Human Interactions
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-117-5

