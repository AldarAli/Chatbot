A General Solution for Business Process Model Extension with Cost Perspective based
on Process Mining
Dhafer Thabet, Sonia Ayachi Ghannouchi, Henda Hajjami Ben Ghezala
RIADI Laboratory
National School for Computer Sciences
Mannouba, Tunisia
e-mail: dhafer.thabet@isetso.rnu.tn, sonia.ayachi@isgs.rnu.tn, henda.benghezala@ensi.rnu.tn
Abstract—Several organizations look for improving their
business processes in order to enhance their efficiency and
competitiveness. 
Business 
process 
management
approach
includes techniques allowing continuous business process
improvement. Process mining is a business process management
technique allowing to extract knowledge from event logs
commonly available in today’s information systems. Business
process model extension is a process mining technique enriching
a business process model with different perspectives useful for
decision making support. Furthermore, financial costs incurred
during business process execution is prominent information
needed for business process improvement decision making in
terms of cost reduction. We propose a solution for business
process model extension with cost perspective based on process
mining. The solution is based on cost extension of the high-level
process structure, which is a meta-model enabling the integration
of different perspectives into one model independently of its
notation. However, the cost extension is designed only at the
activity level and the general approach needs to be validated. In
this paper, on one hand, we propose an improved version of the
proposed approach providing cost extension including cost data
description and analysis at both activity and business process
levels, and on the other hand, we present implementation and
tests of the improved solution on three simplified business
process model notations: Petri Net, Event-driven Process Chain
and Business Process Model and Notation.
Keywords-Business Process Management; Business Process
Improvement; Process Mining; Business Process Model Cost
Extension; Cost Extended High Level Process Structure.
I.
INTRODUCTION
The main concern of several organizations is to enhance
their efficiency and competitiveness [3]. The Business Process
Management 
(BPM) 
approach 
aims 
at, 
continuously,
improving organizations’ business processes [1][22]. The
Process Mining (PMining) technique is used to analyze
business processes based on event logs commonly available in
today’s information systems [1][22]. Event logs can be used to
conduct three types of PMining [13][23][28]: (1) discovery:
produces a BP model using event logs; (2) conformance: an
existing process model is compared with the corresponding
event logs to identify the eventual deviations; (3)
enhancement: includes two sub-types: repair (improving the
model to better reflect reality) and extension. The latter type
allows to enrich the BP model with additional perspectives
useful for BP improvement decision making support
(examples: organizational, case and time perspectives).
Furthermore, organizations look to reduce the financial
costs incurred during the execution of their business processes
using different techniques. Management Accounting (MA) is
the field defining how cost (and other information) should be
used for planning, controlling, continuous improvement and
decision making [10][30]. It includes several techniques such
as: Activity-Based Costing/Management (ABC/M) [10][30];
Time-Driven 
ABC 
(TDABC)
[14]; 
and 
Resource
Consumption Accounting (RCA) [7][21]. The goal of these
techniques is to measure costs incurred during process
execution and to allocate them to the BP operations.
In order to facilitate access and interpretation of cost
information for decision makers, it would be interesting to
have these information associated to the corresponding BP
model. Indeed, this enables decision makers to easily obtain
accurate cost information about their business processes. Thus,
we considered the issue of BP model extension with cost
information based on PMining extension technique. In
[24][25], we started by studying this issue for business
processes modeled with Petri Nets. Thus, we proposed an
approach and its implementation for Petri Net cost extension
based on PMining extension technique. Furthermore, in [27],
the 
proposed 
solution 
was 
improved 
according 
to
recommendations we drew from interviews we conducted with
experts in MA. Moreover, in [28], we proposed a generalized
version of the proposed approach in order to make it
independent of the BP modeling notation (not only Petri Nets).
The main research goal is BP model extension with cost
perspective using PMining extension technique in order to
support decision makers in their improvement decisions for
cost reduction. The solution we proposed in [24][25] ensures a
Petri Net model cost extension based on PMining extension
technique. In [26], we improved the proposed solution with
respect to recommendations drew from interviews with
experts in terms of MA. The considered improvements
concern three main levels: cost data structure, cost data
description and cost data analysis. Besides, in [27], we
generalized the proposed approach in order to support
different BP modeling notations.
However, 
the 
generalized 
approach 
provides 
cost
extension, cost data description and analysis, only at the
activity level. Thus, it would be useful for decision makers to
also get insight on cost information and knowledge at the BP
level. For instance, this would provide information about the
activities which incurred the highest cost value among the
considered BP activities. Therefore, in this paper, the
considered main research question is about the way to improve
the proposed approach so that it provides cost extension, cost
238
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

data description and analysis at both activity and BP levels.
Moreover, this paper presents an overview about the
implementation as well as the tests of the improved approach
on three simplified BP modeling notations: PN, EPC and
BPMN.
In the remainder of this paper, we give an overview about
the related works, in Section II. Section III presents the
proposed solution design, implementation and tests. Finally, a
summary of the contribution, its limits and the future works
are presented in Section IV.
II. RELATED WORK
The work of Nauta in [18] is a proposal of an architecture
to support cost-awareness in PMining. Nauta’s solution,
mainly, consists in annotating the initial event log -in
eXtensible Event Stream (XES) format [12] - with cost
information using a cost model. The cost annotation is
performed, per cost type, in the final event of each task
instance. Then, the obtained cost annotated event log -in XES
format- is used to create cost reports [18].
The work of Wynn et al. [32][33] was motivated by the
work of Nauta. Wynn et al. proposed a cost mining framework
allowing cost reports generation and cost prediction. The cost
report can be customized in different ways. The cost
prediction looks for cost patterns so that it would be possible
to predict cost consumption of an ongoing BP case [33]. The
cost prediction is performed by proposing a cost extension of
the transition system approach [29] to produce a cost-
annotated transition system.
The technique proposed by Conforti et al. in [5] aims at
predicting faults related to three dimensions of a BP, which
are time, cost and reputation. It allows process participants to
make risk-informed decisions when taking part in a BP. The
technique relies on risk estimator trained using data extracted
from event logs. For each state of a process execution where
input is required from a participant, the estimator determines
the severity and likelihood that a fault will occur if that input
is going to be used to carry on the process execution. The
technique offers the considered participant risk-based
recommendations for reducing the number of faults and their
severities [5].
Although cost reports, which are produced by the solution
of Nauta, are used by management accountants to have details
about the costs incurred by BP execution, they are not
sufficient for better decision making support. Moreover, the
generation of only tabular cost reports does not facilitate
decision making. In the work of Wynn et al., cost reports are
generated separately from the BP model, which may not
facilitate support for decision makers with no MA
background. Furthermore, the proposed cost prediction is
mainly based on activities and resources of the considered BP
while different other attributes could influence cost values. In
addition, cost prediction aims at cost reduction for the current
BP case but does not support improvement decisions for the
whole BP. Similarly, in the work of Conforti et al., cost-
related risk prediction is used to provide recommendations
supporting reduction of cost-related faults for the current BP
case but not for the whole BP improvement. Besides, all of the
mentioned works do not provide BP model cost extension at
different levels (particularly activity and BP levels) while it is
important to present BP-related cost information from
different points of view. Moreover, each of these works focus
on a particular type of BP models, although the diversity of
BP modeling notations.
Therefore, in this paper, we propose a solution using the
cost annotated event logs, produced by the solution of Nauta,
in order to extend BP models with cost perspective at BP and
activity levels. Besides, the proposed solution takes into
account the diversity of BP modeling notations.
III. PROPOSED SOLUTION
In [27], we introduced the first version of the generalized
approach for BP model cost extension based on PMining. In
order to provide better support for decision makers in their
improvement decisions, we considered to further improve the
previous version of the proposed approach so that cost
extension covers the activity level as well as the BP level.
Moreover, the improved solution should be implemented and
tested in order to be validated. In the following, we present the
improved solution design, implementation and tests.
A. Proposed Solution Design
In the following, we present an overview about the
proposed approach and the adopted general meta-model
allowing cost extension at activity and BP levels.
1) Proposed
Approach Overview:
Fig. 1 shows an
overview about the proposed approach. The BP model and the
corresponding cost annotated event log are the inputs of the
generalized approach. The BP model is extended with cost
data extracted from the cost annotated event log. Thus, the
obtained output of this step is a cost extended BP model.
Then, the output is graphically displayed with respect to the
corresponding notation. The following step is to handle the
cost extended BP model in such a way to further support
decision makers in BP cost reduction. Cost data can be
handled at two different levels: the activity level and the BP
level.
Firstly, activity level cost data is handled whether by
description or analysis for each user-selected activity. On one
hand, cost data description allows decision makers to get
insight about each activity of the BP model from a cost point
of view. Cost description is performed using user-
customizable tables and graphics. Tables are used to present
cost values with respect to the user-specified options. Graphics
are used to represent views of average cost values based on
different factors (resource, cost types, instances) and to
visualize a comparison between recorded cost values and the
user-expected ones. The user-defined cost values could be
provided whether by a single cost expected value or a cost
expected interval representing a cost value range between
expected minimum and maximum cost values. On the other
hand, cost data analysis supports decision makers to find out
factors influencing on incurred cost values. Two cost analysis
methods are considered. The first method consists in
classifying resources into two groups by comparing resource-
based average cost corresponding to the selected activity with
a user-defined cost value or interval. This method supports
decision makers to determine resources involved in incurring
higher/lower cost values than the user-expected one for the
239
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

selected activity. The second cost data analysis method deals
with how to support decision makers to know which activity-
related attributes (resource, time and other data attributes)
influence activity cost values, and how. The method is based
on using Machine Learning (ML) classification algorithms
[9][23][31], which allow to extract knowledge about the
influence of selected attributes on activity cost values. The
inputs of a ML classification algorithm are: training examples,
attributes and classes. In our case, for each selected activity of
the BP model, training examples are the activity instances
contained in the cost annotated event log. The attributes are
the activity-related ones including resource, time and data
attributes. If the user provides a single expected cost value,
two classes are defined: C1 (respectively C2) represents
activity instances having an average cost value (cost type is
selected by the user) higher (respectively lower) than a user-
estimated cost value. If an expected cost interval is provided
(expected maximum and minimum cost values), in addition to
C1 and C2 classes, a third class C3 is added to represent
activity instances having an average cost value (cost type is
selected by the user) between the user-expected cost interval
bounds. The outputs are the inferred structural patterns
represented, for instance, in the form of a list of classification
rules, which represent a simple and expressive way to
understand which attributes influence cost values, and how
[27].
Secondly, BP cost data can be handled with two main
ways. On one hand, the first way provides BP cost data
description using tables or graphics. Tables represent numeric
cost data values calculated according to user-customized
options (computation modes and cost types). Graphics provide
cost-related views based on different factors (BP instances,
activities and cost types) and are also used to represent
comparisons between recorded cost values and user-defined
cost value or interval. On the other hand, the second way
consists in analyzing BP cost data in order to support decision
makers determining factors influencing cost values at the BP
level. Cost data analysis includes two methods. The first
method provides statistics about BP instances that incurred
costs more/less than a user-defined cost value or interval. If
the user chooses to provide a single cost value, the cost data
analysis consists in calculating the percentages of BP
instances that incurred costs more and less than the user-
defined one. If the user provides an interval (expected
maximum and minimum cost values), the cost data analysis
consists in computing percentages of BP instances that
incurred costs higher, in and lower than the user-defined cost
interval. Then, the obtained percentages are displayed
textually and/or graphically. The second BP cost analysis
method aims at extracting knowledge about BP-related
attributes (time and other data attributes) that influence BP
cost values using ML classification algorithms. The input data
include training examples, which are the BP instances (traces)
contained in the cost annotated event log; attributes which are
BP instances-related attributes including time and (if any)
other data attributes; and classes which depend on the cost
expected value(s) provided by the user. If a single value is
provided, two classes are generated: C1 (respectively C2)
represents 
BP 
instances 
with 
average 
costs
higher
(respectively lower) than the user-expected one. If an interval
is provided, a third class C3 is generated representing BP
instances with average costs within the provided interval. The
outputs of this method are structural patterns representing
knowledge about factors that influence BP-related cost values.
2) Cost-extended High-Level Process Structure: The high-
level process structure is a general meta-model designed to
embed information from different perspectives into the control
flow and to make them as generic and reusable as possible
[23]. As our goal is to incorporate cost information into the BP
model, we considered to extend the high-level process
structure with the data structure representing the
cost
perspective. The cost extended high-level process core data
structure is shown in Fig. 2 as a UML class diagram. The
yellow-colored classes together with their relationships
represent the high-level process structure. The HLProcess is
the central class and holds the high-level information
independently of the BP model type. It holds a list of process
elements (HLProcessElement) such as activities (HLActivity)
for the process. Besides, each high-level process element is
identified using the HLID class. The HLGlobal class holds
information that is globally relevant for the BP. The HLModel
class enables to match the nodes of an actual BP model to
their corresponding elements in the HLProcess structure. The
ModelGraph class represents the actual BP model. These
classes represent the common elements that will be shared by
all high-level processes, regardless of whether they refer to
some Petri net model, or YAWL model, etc. [23][27].
As shown in Fig. 2, the cost data structure is represented
by the grey-colored classes together with their relationships.
The HLProcessCost class and the corresponding relationships
represent cost information at BP level. It consists of a list of
process instances costs each of which is represented by the
ProcessInstanceCost class. Moreover, as HLProcessCost class
represents cost information at BP level, it is associated to the
HLProcess class. Each process instance cost consists of a list
of activity instances costs (ActivityInstanceCost class).
Each activity instance cost consists in turn of elementary
costs (ElementaryCost class). Each elementary cost has a
value, a currency and a cost type (CostType class).
Furthermore, each process instance cost is related to a process
instance (ProcessInstance class) and each activity instance cost
is related to an activity instance (ActivityInstance class). The
ProcessInstance and ActivityInstance classes are generalized
using the abstract Instance class so that for each process
instance and activity instance, we retain the resources involved
in its execution (Resource class), the corresponding time
information (Time class) and, if any, other related data
attributes (DataAttribute class). This way, HLProcessCost
class holds cost information related to the whole BP and to
each one of its activities independently of the BP model
notation. Thus, the cost-extended HLPS shown in Fig. 2
allows to get cost information at both BP and activity levels.
240
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

Figure 1.
Improved approach overview.
Activity Level
BP Level
Extend the business process model with cost data
Cost annotated event log (Nauta’s approach)
Business process model
Extract cost data
Cost data extracted
Associate cost data to the business process model
Cost extended business process model
Display the cost extended business process model
Cost extended business process model displayed
Input/Output
Step/Sub-Step
Legend
Sequential flow
Optional flow
Describe BP cost data
Analyze BP cost data
Calculate and Display
BP cost data according
to the user-selected
computation modes and
cost types
BP cost data displayed
using tables
Calculate and Display
BP cost data based on
the user-selected factor
(cases/ activities/ cost
types)
BP cost data displayed
using graphics
Describe selected activity
cost data
Analyze selected activity
cost data
Calculate and Display cost
data according to the user-
selected computation
modes and cost types
Prepare and generate input data
for ML classification algorithm
Extract knowledge about
attributes influencing cost
values using a ML classification
algorithm
Activity cost data
displayed using tables
ML input data generated
Knowledge extracted and
displayed
Classify resources into resources
involved in incurring costs
higher/lower than the user-
defined cost value/interval
Resources classified and
displayed using tables
Calculate and Display cost
data based on the user-
selected factor (cases/
resources/ cost types)
Activity cost data displayed
using graphics
Select an activity
Cost extended business process model
with selected activity
Define estimated
cost value/interval
User-defined cost value/interval
Prepare and generate input data
for ML classification algorithm
Extract knowledge about
attributes influencing cost
values using a ML classification
algorithm
ML input data generated
Knowledge extracted and
displayed
Calculate percentages of BP
cases that incurred costs
higher/lower than the user-
defined cost value/interval
Percentages displayed
using text and/or graphic
Define estimated cost
value/interval
User-defined cost value/interval
241
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

B. Proposed Solution Implementation
The proposed approach is implemented as a tool for BP
model cost extension. Table 1 shows the general architecture
of the implemented tool. The left side column of Table 1
represents the required inputs for the implemented tool. The
first input is the BP model file (PN or EPC or BPMN, etc.),
which meets the corresponding meta-model (format). For this
moment, the PNML [15], the EPML [17] and simplified
BPMN [19]
meta-models are implemented. Thus, the
implemented tool supports PN, EPC and BPMN models
corresponding, respectively, to the above mentioned meta-
models. The second input is the corresponding cost annotated
event log file, which meets XES format - the standard event
log meta-model for PMining [12]. The central column of
Table 1 shows the internal tool structure, which is represented
by a UML component diagram. It is composed of three
packages: CostExtendedHLPS, GUI and Main.
The CostExtendedHLPS package contains three sub-
packages: HLProcess, HLModel and ModelGraph. The
HLProcess sub-package consists of the high level process
information classes and their relationships (HLProcess and
related classes in Fig. 2) including cost data structure. The
HLProcess sub-package uses the OpenXES plugin to import
cost data from cost extended event log files. The HLModel
sub-package contains the HLModel class and its sub-classes as
shown in Fig. 2. The ModelGraph sub-package consists of the
ModelGraph class and its sub-classes, which represent the
different BP meta-models. For this moment, we implemented
PN, EPC and BPMN meta-models using (respectively) the
PNML framework [15], EPCTools [6] and BPMN Camunda
[4] plugins. The GUI package contains all graphical user
interfaces and their related classes whose role is to import
input files and display processed results. Orchestration of the
different packages is ensured by the Main package.
HLProcessElement
HLProcess
HLActivity
-label
HLModel
ModelGraph
HLPetriNet
HLEPC
HLYAWL
PetriNetModel
YAWLModel
EPCModel
1..*
Time
-start_ts
-end_ts
-duration
CostType
ActivityInstance
-id
ElementaryCost
-value
-currency
1..*
1
1
has
1
1
Resource
executed by
1..*
1
DataAttribute
-label
has
*
1
HLGlobal
1
1
HLBPMN
BPMNModel
HLID
1
1
ActivityInstanceCost
concerns
1
1
1
1
1
1
HLProcessCost
*
has
1
1
ProcessInstanceCost
ProcessInstance
-id
concerns
1
1
Instance
1..*
Figure 2.
Improved cost-extended HLPS.
242
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

TABLE I.
GENERAL ARCHITECTURE OF THE BP MODEL COST EXTENSION TOOL.
Inputs
Tool Architecture (UML Component Diagram)
Outputs
Main
PNML Framework
<<external>>
OpenXES 1.9
<<external>>
CostExtendedHLPS
HLProcess
HLModel
ModelGraph
EPCTools
<<external>>
Camunda BPMN
<<external>>
GUI
Depending on the user-selected option, the produced
output concerns whether the BP level or the activity level. On
one hand, the BP level outputs are computed for the whole BP
and may be: (1) cost description results displayed whether
with tables or graphics, or (2) cost analysis results displayed
using text and/or graphics for BP instances costs statistics
method and are generated as Attribute-Relation File Format
(ARFF) file [31] for the ML classification-based method at BP
level. Each generated ARFF file consists of attributes values
and classes as presented in section III.A.1. Thus, the generated
ARFF file can be
easily imported into the
Waikato
Environment for Knowledge Analysis (Weka) system [31],
which allows to pre-process the input data and provides
several algorithms to apply for extracting knowledge about
factors influencing cost values of the whole BP in different
forms such as classification rules or decision trees. On the
other hand, activity level outputs are calculated for each
selected activity and may be: (1) cost description results
displayed using tables or graphics, or (2) cost analysis results,
which are displayed using tables for the cost-based resource
classification method and are generated as ARFF files for the
ML classification-based method
at activity level. The
generated ARFF file can be imported in Weka and
classification algorithms can be applied to extract knowledge
about factors influencing cost values of the selected activity.
C. Proposed Solution Tests
In order to validate the improved solution, we carried out
tests using the same BP example with three different modeling
notations: PN, EPC and BPMN. The test example is a simple
phone repair process. The considered BP modeled with Petri
Net notation is presented in [18][24]. The BP begins by the
registration of the broken phone and then it is analyzed to
determine the defect type. Depending on the severity of the
defect, a simple repair or a complex repair is carried out.
Then, the phone is tested to check whether it is fixed. If so, the
repair details are archived and it is returned to the customer. If
it is not fixed, the repair and then the test are restarted again. If
the phone is still broken after the fifth repair test, the repair
details are archived and the phone is returned to the customer.
Otherwise, the customer is informed about the defect type
after the defect analysis and before archiving the repair details
[18][23].
This process example was already used as a test case
example in Nauta’s solution. We used the produced cost
annotated event log (1000 cases obtained by simulation)
together with its corresponding BP model (in PN, EPC and
BPMN notations) as inputs for our tool test phase. In the
following two sub-sections, the obtained results of the carried
out tests are presented for each of the BP and the activity
levels cost extensions with different BP modeling notations.
1) Tests Results of the Business Process Level Cost
Extension: Fig. 3 (respectively Fig. 4) shows the obtained
results after importing the BP example Petri Net (respectively
BPMN) model file and the corresponding cost annotated event
log file. The background frame of Fig. 3 (respectively Fig. 4)
represents the main tool frame,
which displays the
corresponding Petri Net (respectively BPMN) model. The
foreground frames of Fig. 3 illustrate cost data description at
the BP level. The top left frame represents the BP level related
cost description table with different computation modes
(average, maximum and minimum) for all cost types (total,
fixed, labour, variable overhead and material costs). The top
right frame shows average total cost incurred by each activity
of the BP using a pie chart indicating the activity that incurred
the highest cost among them (“Repair (Complex)” activity in
Fig. 3). The bottom right frame shows BP level related
average cost per cost type: total cost is yellow-colored and
other cost types are green-colored. The bottom left frame
illustrates BP level related average cost based on BP cases
together with two horizontal lines representing minimum (blue
Cost extended
business process
model
graphically
displayed
Cost extended
XES meta-model
(.xes)
Cost annotated EL
(.xes)
Business Process
Model File
Business Process
meta-model
Activity level
Cost Description
Tables/Graphics
displayed
Cost Analysis Tables
displayed
ARFF file generated
BP level
Cost Description
Tables/Graphics
displayed
Cost Analysis
Text/Graphics displayed
ARFF file generated
243
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

line) and maximum (green line) cost values provided by the
user as the expected cost interval boundaries.
The foreground frames of Fig. 4 provide cost statistics
about BP instances. As shown in the foreground left frame of
Fig. 4, the selected cost type to be analyzed is “Total Cost”
and the user chooses to enter an expected cost interval
(500..800 AUD) instead of an expected cost value. Moreover,
both textual and graphical display modes are selected. Then,
when validating, BP cost statistics results are displayed.
Textual results are displayed in the bottom of the foreground
left frame of Fig. 4. The red (respectively blue, green)-colored
text represents number and percentage of BP instances that
incurred higher (respectively in interval, lower) average total
costs than the user-provided cost interval. The foreground
right frame of Fig. 4 represents graphically the obtained
results using a pie chart. As shown in both foreground frames,
7.7% of BP instances incurred total costs more than 800 AUD,
7.2% of them incurred total costs less than 500 AUD and
85.1% of them incurred total costs between 500 and 800
AUD. Tests of ML-based cost analysis for the BP level is left
for other BP examples as for the considered test example,
there is no data attributes related to the BP instances (traces).
The tests results of the BP level cost extension, presented in
Fig. 3 and Fig. 4, remain valid for the three considered BP
notations (PN, EPC and BPMN).
Figure 3.
Cost data description (BP level) with PN notation.
Figure 4.
BP cases cost statistics (BP level) with BPMN notation.
244
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

2) Tests Results of the Activity Level Cost Extension: As
shown in Fig. 5 (respectively Fig. 6), the background frame
displays the obtained EPC (respectively BPMN) model after
importing the corresponding BP model and cost extended
event log files. The foreground frames of Fig. 5 show cost data
description corresponding to the “Analyze Defect” function.
The top left frame illustrates cost data description table
corresponding to the “Analyze Defect” function with average,
maximum and minimum computation modes and total,
variable overhead, fixed and labour cost types. The top right
frame shows blue bars each of which representing the average
of total costs related to “Analyze Defect” function instances
executed by a resource. The bottom right frame illustrates a
curve representing the average total costs of the “Analyze
Defect”
function based on its instances and two lines
representing the user-expected cost interval boundaries:
minimum (blue line) and maximum (green line) cost values.
The bottom left frame shows average cost per cost type for the
“Analyze Defect” function: yellow-colored bar represents total
cost and green-colored bars represent others cost types.
Figure 5.
Cost data description for “Analyze Defect” function (activity level) with EPC notation.
Figure 6.
Resource classification based on total cost of “Analyze Defect” activity (activity level) with BPMN notation.
245
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

The foreground right frame of Fig. 6 shows test results of
the first activity level cost analysis method, which is a cost-
based resource classification for the “Analyze Defect”
activity. As it is illustrated in Fig. 6, the user selected the
“Total Cost” as the cost type to be analyzed. The provided
expected cost interval for the considered activity ranges from
15 AUD to 17 AUD. Then, the provided result is displayed
using a table showing three columns. The first column
(respectively second, third) lists resources, which executed
“Analyze Defect” activity instances with average total cost
higher (respectively in interval, lower) than the user-expected
cost interval. As shown in Fig. 6, the average total cost of
“Analyze Defect” activity instances executed by “Tester6” is
within the user-expected cost interval. However, the other
resources are involved in incurring higher total costs than 17
AUD and no resources incurred lower total costs than 15
AUD. Furthermore, the second activity-level cost analysis
(ML-based) method is tested on the “Analyze Defect” activity
by selecting the total cost as a cost type and 17 AUD as the
expected cost value. An ARFF file is automatically generated
according to details presented in section III.A.1. Afterwards,
the ARFF file is imported using Weka system. The selected
attributes are: “resource”, “duration”, “phone type” and
“defect type” attributes for the activity in hand. Then, we
applied different classification algorithms among which we
retained the J48 algorithm [31] as it provided the highest rate
of correctly classified instances (100%). The obtained result is
presented by the following classification rules:
If (phoneType = T1) Then
Cost is lower
If (phoneType = T2) Then
Cost is lower
If (phoneType = T3) Then
Cost is higher
The obtained classification rules show that if the phone
type is T1 or T2, the incurred total cost of the “Analyze
Defect” activity is lower than the expected cost value (17
AUD). However, if the phone type is T3, the total cost
exceeds the expected cost value. Then, it can be concluded
that the total cost incurred during the execution of this activity
depends on the “phone type” attribute and the influence of the
other attributes on the corresponding total cost is not
prominent. This indicates to decision makers that reviewing
the repair of T3 phones is likely to lead to a solution to reduce
costs incurred by the execution of “Analyze Defect” activity.
The tests results, presented in Fig. 5 and Fig. 6 about the
activity level cost extension, remain valid for the three
implemented BP notations (PN, EPC and BPMN).
IV. CONCLUSION AND FUTURE WORKS
In this paper, we proposed an improved solution providing
BP model cost extension at the activity level as well as the BP
level based on Process Mining. In fact, we extended the
proposed approach so that it offers cost description and
analysis at both activity and BP levels. Besides, we improved
the proposed meta-model (HLPS) in order to represent cost
data at activity and BP levels. Moreover, we presented the
implementation of the improved approach. Additionally, we
described the obtained results of tests that we carried out on
the implemented tool using a simple phone repair process as
test example with three simplified modeling notations: PN,
EPC and BPMN. Furthermore, the tests results show that the
solution is extensible to cover different other business
modeling notations. Therefore, the obtained proposal is a
general BP model cost extension solution providing cost
extension, description and analysis at activity and BP levels,
which further improve decision making support for BP cost
reduction.
However, the proposed solution has some limits especially
for the ML-based cost data analysis. First, the provided BP
level cost analysis does not include the influence of resources
on BP costs while it may be important in cost reduction
decision making. Second, selection of the classification
algorithm is left for the user, which may be enhanced by
guiding the selection in order to improve the quality of the
generated results. Third, the proposed solution does not
include means to simulate the impacts, of changes brought to
the BP, on its incurred costs before applying real actions on
the BP.
Currently, we are studying further cost data analysis
improvements in such a way to provide more guidance for
better decision making support. These improvements will be
proposed and validated by coordination with data mining
experts. In future works, we consider to carry out real world
case studies in order to evaluate the proposed solution
performances.
REFERENCES
[1]
M. Adams, N. Russell, A. H. M. ter Hofstede, and W. M. P. van der
Aalst, Modern business process automation, Springer, Heidelberg, 2010.
[2]
J. Billington et al., “The Petri Net Markup Language: Concepts,
Technology, and Tools,” In ICATPN’03, 24th International Conference
on Applications and Theory of Petri Nets, Springer, pp. 483-505, 2003.
[3]
P. Briol, Business process engineering: from elaboration to exploitation,
Briol Patrice, 2008.
[4]
Camunda Services, 2014. BPMN Workflow Engine. [online] Available
at: <http://camunda.org/> [retreived: August, 2015].
[5]
R. Conforti, M. de Leoni, M. La Rosa1, and W. M. P. van der Aalst,
“Supporting Risk-Informed Decisions during, Business Process
Execution,” International Conference on Advanced Information Systems
Engineering, 2013.
[6]
N. Cuntz and E. Kindler, 2006. EPC Tools. [online] Available at:
<http://www2.cs.uni-paderborn.de/cs/kindler/Forschung/EPCTools/>
[retreived: August, 2015].
[7]
D. Clinton and S. A. Webber, “RCA at clopay: here’s innovation in
management accounting with resource consumption accounting,” In
Strategic Finance, 2004.
[8]
D. Gilbert, “The JFreeChart class library,” 2014 (version 1.0.19)
Installation
Guide. 
[pdf] 
Available 
at:
<http://garr.dl.sourceforge.net/project/jfreechart/1.%20JFreeChart/1.0.19
/jfreechart-1.0.19.zip> [retreived: August, 2014].
[9]
J. Han, M. Kamber, and J. Pei, Data mining: concepts and techniques,
3rd ed., Elsevier, United States of America, 2012.
[10] D. R. Hansen and M. M. Mowen, “Cost management: accounting and
control,” 2006, Thomson South-Western. United States of America.
[11] L. M. Hillah, E. Kindler, F. Kordon, and L. Petrucci, “A Primer on the
Petri Net Markup Language and ISO/IEC 15909-2*,” In CPN’09, 10th
International workshop on Practical Use of Colored Petri Nets and the
CPN Tools. Denmark, 2009.
[12] Hverbeek, 
“eXtensible 
Event 
Stream,” 
[online] 
Available:
<http://www.xes-standard.org> [retreived: June, 2013].
[13] IEEE Task Force on Process Mining, 2012. “Process Mining
Manifesto,” In BPM 2011 Workshops. Springer.
246
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

[14] R. S. Kaplan and S. R. Anderson, “Time-driven Activity-Based
Costing”. In HBS Working Paper, 2003.
[15] LIP6 (Laboratoire d’Informatique de Paris 6), 2012. PNML Framework
download site. [online] Available at: <http://pnml.lip6.fr> [retreived:
July, 2013].
[16] LIP6 (Laboratoire d’Informatique de Paris 6), 2013. PNML reference
site. [online] Available: <http://www.pnml.org> [retreived: July, 2013].
[17] J. Mendling, 2005. EPC Markup Language (EPML). [online] Available
at: <http://www.mendling.com/EPML/> [retreived: June, 2015].
[18] W. E. Nauta, “Towards cost-awareness in process mining,” Master’s
thesis 
Eindhoven, 
2011. 
[pdf] 
Available:
<http://alexandria.tue.nl/extra1/afstversl/wsk-i/nauta2011.pdf>
[retreived: April 2012].
[19] OMG (Object Management Group), 2015. BPMN 2.0. [online]
Available at: <http://www.omg.org/spec/BPMN/2.0/> [retreived: August
2015].
[20] Process Mining Group, 2013. Process Mining: Research, Tools and
Application. 
[pdf] 
Available: 
<http://www.processmining.org>
[retreived: June, 2013].
[21] RCA Institute, 2008. Resource Consumption Accounting Institute.
[online] Available:
<http://www.rcainstitute.org> [retreived:
April,
2012].
[22] M. Rosemann and J. vom Brocke, Handbook on business process
management 1, Springer. Heidelberg, 2010.
[23] A. Rozinat, “Process mining: conformance and extension,” PhD Thesis,
University Press Facilities. Eindhoven, 2010.
[24] D. Thabet, S. A. Ghannouchi, and H. H. Ben Ghezala, “Towards
business process model extension with cost perspective based on process
mining - Petri Net model case,” In ICEIS’14, 16th International
Conference on Enterprise Information Systems, SciTePress, Portugal,
pp. 335-342, 2014.
[25] D. Thabet, S. A. Ghannouchi, and H. H. Ben Ghezala, “Petri net model
extension with cost perspective based on process mining,” In
ICMHIS’14, 9th International Colloquium of MHIS (Management High
Institute of Sousse), Tunisia, 2014.
[26] D. Thabet, S. A. Ghannouchi, S. and H. H. Ben Ghezala, “Petri Net
Model Cost Extension based on Process Mining - Cost Data Description
and Analysis,” In ICEIS’15, 17th International Conference on Enterprise
Information Systems, SciTePress, Spain, pp. 268-275, 2015.
[27] D. Thabet, S. A. Ghannouchi, and H. H. Ben Ghezala, “Business Process
Model Extension with Cost Perspective based on Process Mining - Cost
Data Description and Analysis.” In IBIMA’15, 26th International
Business Information Management Association Conference, Spain,
2015.
[28] W. M. P. van der Aalst, Process Mining: Discovery, Conformance and
Enhancement of Business Processes, Springer-Verlag. Berlin, 2011.
[29] W. M. P. van der Aalst, M. Schonenberg, and M. Song, “Time
prediction based on process mining,” Information Systems, vol. 36, no.
2, pp. 450-475, 2011.
[30] J. J. Weygandt, P. D. Kimmel, and D. E. Kieso, Managerial accounting
tools for business decision making, John Wiley & Sons Inc. United
States of America, 2010.
[31] I. H. Witten, F. Eibe, and M. A. Hall, Data mining: practical machine
learning tools and techniques, Elsevier. Burlington, 2011.
[32] M. T. Wynn, W. Z. Low, and W. Nauta, “A framework for cost-aware
process management: generation of accurate and timely management
accounting cost reports,” Conferences in Research and Practice in
Information Technology, pp. 79-88, 2013.
[33] M. T. Wynn, W. Z. Low, A. H. M. ter Hofstede, and W. Nauta, “A
framework for cost-aware process management: cost reporting and cost
prediction,” Journal of Universal Computer Science, vol. 20, no. 3, pp.
406-430, 2014.
247
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

