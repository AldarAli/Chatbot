Middleware For Heterogeneous Healthcare Data Exchange: A Survey 
Carlos Andrew Costa Bezerra 1 2 , André Magno Costa de Araujo 1 3, Bruno Sacramento Rocha 2, Vagner Barros 
Pereira 2, Felipe Silva Ferraz 2 3 
ITPAC – President Antonio Carlos Tocantinense Institute Araguaina, Brazil 1; CESAR – Recife Center for Advanced Studies 
and Systems Recife, Brazil 2; Federal University of Pernambuco Recife, Brazil 3  
e-mail: andrew@r2asistemas.com.br, amcaraujo@gmail.com, bdsr74@gmail.com, vagnerbarrospereira@gmail.com, 
fsf@cesar.org.br, amca@cin.ufpe.br, fsf3@cin.ufpe.br 
 
 
Abstract — In this paper, we present a survey for data exchange 
middleware in health based on the HL7 standard. HL7 is an 
international standard, grounded on the Open System 
Intercommunication model (OSI), which standardizes exchange 
and 
transportation 
of 
information 
between 
healthcare 
organizations. Based on this standard, we examine examples of 
middleware selected during an exploratory research in the 
repositories of the Association for Computing Machinery 
(ACM) and Institute of Electrical and Electronics Engineers 
(IEEE). This article provides an overview of features present in 
the selected middleware. 
Keywords - Middleware; Healthcare; Data Exchange; 
Interop; Heterogeneous Data; HL7; EHR; 
I. 
 INTRODUCTION 
Healthcare systems produce a huge amount of health data. 
In most cases, information is spread among public and private 
institutions, clinics, care centers, laboratories, etc. One of the 
big challenges in the medical area is to provide access to 
patient’s clinical data, regardless of where they were 
generated [1]–[3]. There are architectural models which 
standardize storage and communication of electronic 
healthcare records (EHR) – e.g. OpenEHR [4] and EN 13606 
[5][6]. However, even solutions that have their working 
repositories implemented based on one of the previously 
mentioned models use different types of database or 
technologies, are in different versions or have other 
particularities that make them different from the others [7].  
In the data exchange domain, there are various 
technologies that address the task of exchanging information 
between heterogeneous databases, such as Web-Services [8] 
and Cloud Services [9]. However, according to Xianyong Liu 
[10], middleware represents a technology that takes charge of 
communication and bridges lower-level Data Transfer Units.  
For this paper, we discuss the already available HL7-based 
middleware, ongoing research projects and solutions under 
development for HL7-based healthcare information exchange. 
We conducted a literature review and selected two works 
which and will be henceforth named Middleware A and B. 
The other middleware analyzed represent solutions that are 
present on the IT market, which are Mitre hData, Mirth 
Connect and IBM Websphere [11]–[13] 
Health Level-7 (HL7) refers to a set of international 
standards to transfer clinical and administrative data between 
software applications used by various healthcare providers. 
These standards focus on the application layer, which is "layer 
7" in the OSI model [14][15] 
The main objective of this work is to discuss the already 
available HL7-based middleware, as well as ongoing research 
projects and solutions under development for HL7-based 
healthcare information exchange. Section II discusses some 
aspects related to HL7 and healthcare systems. Section III 
presents the types of middleware and indications of use for 
each one. Section IV discusses projects and applications of 
HL7-based middleware and shows a comparison between 
them. Finally, conclusions and future developments of this 
research are presented in Section V.  
II. 
HL7 AND HEALTHCARE SYSTEMS INTEGRATION 
HL7 was founded in 1987 with the objective of defining 
standards for information exchange between health systems. 
It is a non-profit institution approved in 1994 by the American 
National Standards Institute (ANSI) [16]. The standard 
follows the conceptual definition of the application interface 
model, represented by the seventh layer of the OSI model, 
providing support to plug-and-play functionalities when used 
to integrate two or more health systems [17]. 
The HL7 standard provides specifications aiming to 
standardize the exchange and transportation of information 
between health systems, with the objective of making such 
systems interoperable [18]. HL7 is highly recommended to 
organizations seeking interoperability between internal and 
external systems of public health. The standard provides 
quality, efficiency and effectiveness in the delivery and 
sharing of medical information [17]. 
The HL7 standard encompasses groups of specification, 
like the ones exemplified below: 
 
Message protocols for the information exchange 
between health systems; 
 
Clinical Document Architecture (CDA) for document 
exchange.  
A. Tools that use the HL7 standard 
HL7 can be used for diverse implementations of health 
systems integration. Some of them were identified and 
described as follows: 
 
Implementation of test middleware to validate the 
formats of messages in the HL7 standard, allowing for 
the identification of a system that does not comply 
with the HL7 standard [19]; 
409
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

 
Implementation of an emergency medical system 
using the Open Services Gateway Initiative (OSGi) 
service platform, enabling sharing information 
between medical systems and emergency services. 
This system uses the HL7 standard to format 
messages; 
 
Implementation of a mobile app that receives data 
from medical sensors and converts them to the HL7 
standard so they can be sent later through the Wireless 
Local Area Network (WLAN) or Bluetooth.  It can 
receive diagnoses and prescriptions later; 
 
Implementation of middleware to standardize the 
communication between different types of medical 
devices and health systems. It is made possible by 
converting the IEEE 1073 standard, when the medical 
devices follow the HL7 standard [17]; 
 
Application that receives data from devices that 
measure vital signs, such as blood pressure, 
heartbeats, levels of glucose and body temperature. 
These pieces of data are received by the 
communication interfaces of the device, i.e. Universal 
Serial Bus (USB), Bluetooth or WLAN. All data is 
received by the application in different formats and 
then sent to the telemedicine central in the HL7 
standard to be analyzed. When it becomes possible to 
provide more detailed care, the central activates a 
videoconference to detail and explain the situation to 
the caretakers in charge [20]. 
III. 
MIDDLEWARE 
As a way to solve issues related to health information 
exchange, we analyze the middleware technology. It is a 
technology for distributed applications, able to hide details of 
the network and deal with a great amount of important 
functionalities for development, implantation, execution and 
interaction of applications [21]. The main idea is to be 
between two layers enabling communication between the 
connected parts. It is not only a network application which 
connects two sides, but also a means to promote the 
interoperability 
between 
the 
applications, 
protecting 
implementation details of functionalities and providing a set 
of interfaces to the customer [10].  
There are various types of middleware that can be 
implemented with the objective of providing the exchange of 
health information, e.g. transactional, procedural, message-
oriented and object-oriented.  
 
A. Transactional Middleware   
The transactional middleware (TM) is designed to provide 
synchronous distributed transactions [22]. It consists of a 
transactional 
monitor 
that 
coordinates 
simultaneous 
transactions between customers and servers, reducing the 
overload, response time and Central Processing Unit (CPU) 
costs between the components by guaranteeing the Atomicity, 
Consistency, Isolation and Durability properties (ACID). 
However, they offer unnecessary and undesirable warranties 
through the ACID properties. When a customer is performing 
a long processing, it may prevent other customers from 
following up with their requests [22].  
As there is always the need to exchange a great number of 
health messages, each customer will always have a great 
amount of information to be shared, rendering this 
middleware inappropriate for this objective. 
 
B. Procedural Middleware  
The procedural middleware (PM) was developed by SUN 
Microsystems around the decade of 1980 and became known 
as the Remote Procedure Call (RPC). Its implementation is 
supported by various computing environments; however, they 
do not offer good communication because they do not support 
asynchronous transmission, replication or load balancing [22]. 
 
C. Message-Oriented Middleware 
Message-oriented 
middleware 
(MOM) 
allows 
for 
distributed applications to communicate and exchange 
information by sending and receiving messages [23]. The 
essential elements for a message-oriented middleware are 
clients, messages and the MOM provider, as seen in Figure 1, 
which depicts an API and administration tools [23]. This 
middleware exchanges information asynchronously.  
 
 
 
Figure 1.  MOM-Based System [23] 
This way of working provides the customer with the 
means to continue working even if a message has been sent – 
it doesn’t make customer wait for a response. However, it 
might run out of message storage resources, which can 
generate a failure in the component. The HL7 international 
protocol predicts the exchange of information through 
asynchronous messages, which makes this type of middleware 
the best for implementing a solution for the health information 
exchange. Some examples that may illustrate this modality are 
Microsoft Message Queuing (MSMQ) by Microsoft, [24] and 
MQSeries by IBM [25].  
 
D. Object-Oriented Middleware 
The 
object-oriented 
middleware 
(OOM) 
allows 
applications to communicate and exchange information by 
invoking methods [26]. It works precisely like the local 
method invocation. Its communication is synchronous, which 
means an object invokes a middleware method and awaits the 
response of said method. Similarly to Peer-to-Peer and 
Remote Procedure Call (RPC) communications, this 
410
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

workflow prevents the client from using the system while the 
invoked object is working.  
 
 
Figure 2.  Synchronous call [26] 
 
Figure 3.  Asynchronous call [26] 
A great advantage of the object-oriented middleware is the 
fact that it accepts the invocation of methods written in 
different programming languages [26]. Moreover, some OOM  
support both synchronous and asynchronous messages; this is 
an attempt to mitigate the limitations caused by one form of 
communication. Other OOMs also implement types of  
message exchange control in order to use resources more 
efficiently, by making use of threads and timeouts [26]. 
Figures 2 and 3 illustrate this behavioral change in Messaging. 
 
IV. 
HL7-BASED MIDDLEWARE ANALYSIS 
The middleware analysis based on characteristics present 
in the construction of each middleware was separated into ten 
categories: 
 
Synchronous: 
when 
the 
middleware 
supports 
synchronous messaging; 
 
Asynchronous: when it supports asynchronous 
messaging; 
 
Type of Middleware: if the middleware is TM, PM, 
OOM or MOO; 
 
Web Bases: when the middleware runs uses web 
architecture; 
 
HL7 v2.x: when it supports any version 2 of HL7; 
 
HL7 v3.x: when it supports any version of HL7; 
 
HFIR: when it supports HL7 HFIR versions that 
combine the best features on v2, v3 and CDA; 
 
Parsing: when it offers the process to message 
syntactic analysis; 
 
Validating: when it offers the process of verifying the 
message conformance; 
 
Transmitting: when it offers the process of submitting 
the message to other client. 
 
A. Middleware A 
In [16], Liu et al. proposed an extensible HL7-based 
middleware, as shown in Figure 4, to provide a 
communication 
channel 
between 
different 
healthcare 
information systems that either did not support HL7 messages 
exchange or had not implemented an interface for it yet.  
 
 
Figure 4.  HL7 middleware architecture 
 This middleware has three deployment options: client-
side, server-side and independent deployment., although only 
the independent deployment uses all the HL7 functions. 
 
B. Middleware B 
Ko et al. [27] presents a middleware framework developed 
for the National Taiwan University Hospital (NTUH). Figure 
5 shows that it consists in a multi-tier service oriented 
architecture (SOA). It uses the message and event type to 
identify the required service and invoke the correspondent 
sub-routine. HL7 messages are used to format all information 
exchanged across systems. 
 
 
 
 
Figure 5.  NTUH HIS system architecture Note 
 
Besides the conventional middleware presented above, 
there are extensible libraries and components that address the 
complexities of HL7 encoding and decoding rules along with 
acknowledgements, allowing for the application developer to 
focus on underlying business logic and workflow, such as 
Merge HL7 and HAPI-Fast Healthcare Interoperability 
411
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

Resources (FHIR) toolkits. Furthermore, there are specific 
tools for parsing and transmitting HL7 messages, e.g. HL7Spy 
and HL7 Analyst [28]–[30]. 
 
C. Mitre hData 
Donald W. Simborg created the Level 7 protocol 
originally (in 1977), which later turned into the well-known 
HL7 standard version 2. He was developing departmental 
systems at the Johns Hopkins University, in Baltimore, MA, 
and was programming in the APL language. He continued to 
develop systems at the University of California in San 
Francisco (UCSF) in 1976, where his CIO was. Besides, he 
also worked for Mitre Corporation, a think-tank company of 
California where he acquired a lot of experience in the pioneer 
use of LANs and High Level Protocols (HLP) protocols [13]. 
hData is a standard for electronic health data exchange 
which is WEB-based and very light. Formulated in 2009 by 
MITRE and a non-profit organization, it has since evolved 
through the cooperation of the leaders in the health industry. 
The hData standard is the first one developed for RESTful 
health data exchange. Figure 6 explains the composition of 
hData. 
 
 
Figure 6.  Relationship between the different components of hData [13] 
The hData Registry Format (HRF) specifies the format of 
the hData Hierarchy (HDH). HDH is based on models of 
logical resources provided externally by experts in the domain 
or partners in the exchange of information, e.g. FHIR. HDH 
may be satisfied with one or more hData Content Profiles 
(HCPS), which are guides for the implementation and use of 
hData in specific domains. The server that hosts the HDH 
instance provides a service interface for the customers to 
interact with the HDH resources, placing information in 
persistent data storage. The hData RESTful Transport (HRT) 
standard specifies these services if there is a REST 
implementation. 
D. Mirth Connect 
Created by Mathias LIN, it is a middleware considered the 
Swiss army knife of the integration engines of health 
information. It is specialized and designed to exchange 
messages in the HL7 standard and counts on tools to develop, 
test and monitor interfaces [31]. Figure 7 illustrates an 
architectural vision of a system that uses Mirth Connect. 
 
 
Figure 7.  Architecture of a system using Mirth Connect as a Middleware 
[11] . 
The following functionalities are available: 
 
A rich interface channel development and monitoring 
environment using an intuitive drag-and-drop 
template-based editor; 
 
Real-time 
connection 
monitoring 
through 
a 
dashboard; 
 
Message reprocessing; 
 
An integration server that supports a variety of 
protocols to connect to external systems, and diverse 
database options. 
E. IMB WebSphere Message Broker 
The IMB WebSphere Message Broker (WMB) is 
considered a product of business integration and used to 
integrate applications of general purpose by applying message 
transformation, enrichment and routing. It supports health 
applications even if they were built in other languages, such 
as .NET, C or Java. Figure 8 depicts the architecture of a 
WMB application. 
 
WMB offers: 
 
 
Models of message used to analyze, route and 
transform HL7 messages; 
 
Input and Output nodes to integrate HL7 clinical 
applications; 
 
Integration with medical devices; 
 
Integration 
with 
Digital 
Imaging 
and 
Communications in Medicine (DICOM); 
 
Specific standards of medical assistance; 
 
Operational monitoring of data transmission for 
medical applications; 
 
Generation of events of Audit Trail and Node 
Authentication 
(ATNA) 
auditing 
to 
support 
412
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

confidentiality of patient information, data integrity 
and provision; 
 
Ability to extract information from medical assistance 
data in message flows, and sending information. 
 
 
Figure 8.  Architecture of a health system using WMB [12] 
 
The selected characteristics of the presented middleware 
are summarized in Table I. 
TABLE I.  
CHARACTERISTICS OF PRESENTED MIDDLEWARE 
Characteristics Mid A Mid B Websphere 
Mirth 
Connect 
hData 
Synchronous 
x 
x 
x 
x 
- 
Asynchronous 
- 
- 
x 
x 
x 
Middleware type MOM MOM 
MOM 
MOM 
MOM 
Web-based 
- 
x 
x 
x 
x 
HL7 v2.x 
x 
x 
x 
x 
- 
HL7 v3.x 
x 
- 
x 
x 
- 
HFIR 
- 
- 
x 
x 
x 
Parsing 
x 
x 
x 
x 
x 
Validating 
- 
x 
x 
x 
x 
Transmitting 
x 
x 
x 
x 
x 
 
Table I shows the features supported by each middleware 
evaluated in this work. Observing the results obtained, it is 
possible to highlight the following points: i) all middleware 
analyzed are MOM types, ii) all of them encompass all 
methods of parsing and transmitting, iii) only the market 
middleware supports HFIR and asynchronous message 
exchange. 
 
V. 
CONCLUSION AND FUTURE WORK 
In this paper, we have analyzed and compared different 
middleware for healthcare data exchange. This study showed 
the extensibility of HL7 standards and the ongoing HL7-based 
projects and research. The comparison analysis provided an 
insight into the strengths and weaknesses of the middleware 
architecture, the compatibility with HL7 versions, operating 
systems, architecture, features and connection type. Based on 
the survey, we found that the Mirth Connect and Mitre hData 
middlewares are the most appropriate for exchanging health 
data. This is due to the fact that they present features which 
are more compatible with the HL7 standard, as both 
middlewares are specifically meant to be used in health 
applications. The Websphere middleware, for general 
purposes, may also be used in health data exchange. However, 
the lack of alignment with the HL7 standard would increase 
the complexity of the developed solution. 
 In future works, we will use a HL7-based toolkit to 
implement, test and measure a middleware to integrate 
different healthcare solutions and consolidate patient data in a 
big-data repository using HL7 messages. Then, we will 
compare the results with the existing middleware and, 
depending on the results, propose a new HL7-based 
middleware architecture. 
VI. 
REFERENCES 
[1] P. Silva-Ferreira, J. Patriarca-Almeida, P. Vieira-Marques, R. Cruz-
Correia, “Improving expressiveness of agents using openEHR to 
retrieve multi-institutional health data: Feeding local repositories 
through HL7 based providers.” Inf. Syst. Technol. (CISTI), 2012 7th 
Iber. Conf. on. IEEE, 2012, pp. 1-5. 
[2] R. Cruz-Correia, J. C. Nascimento, R. D. Sousa, and H. O’Neill, 
“eHealth key issues in Portuguese public hospitals” Proc. - IEEE 
Symp. Comput. Med. Syst, 2012, pp. 1-6. 
[3] L. Ribeiro, J. P. Cunha, and R. Cruz-Correia, “Information systems 
heterogeneity and interoperability inside hospitals: A survey,” Heal. 
2010, pp. 337–343. 
[4] T. Beale and S. Heard, “openEHR - Architecture Overview,” 
OpenEHR Found., 2007, pp. 1–79. 
[5] ISO, “ISO 13606-1:2008 Health informatics — Electronic health 
record communication — Part 1: Reference model,” 2008. [Online]. 
Available: ISO 13606-1:2008(en). [Accessed: 06-Jun-2015]. 
[6] ISO, “ISO 13606-2:2008 Health informatics Electronic healthcare 
record communication Part 2: Archetype interchange specification. 
International Organization for Standardization,” 2008. [Online]. 
Available: 
http://www.iso.org/iso/home/store/catalogue_ 
tc/catalogue_detail.htm?csnumber=50119. [Accessed: 06-Jun-2015]. 
[7] S. Frade, S. M. Freire, E. Sundvall, J. H. Patriarca-Almeida, and R. 
Cruz-Correia, “Survey of openEHR storage implementations,” Proc. 
CBMS 2013 - 26th IEEE Int. Symp. Comput. Med. Syst., 2013, pp. 
303–307. 
[8] X. Ma, L. Qian, and X. Lin, “WSXP:A universal data exchange 
platform based on Web Services,” Inf. Sci. Eng. (ICISE), 2010 2nd Int. 
Conf., pp. 4815 - 4818, 2010. 
[9] B. Li, L. Sun, and R. Tian, “Multi-source Heterogeneous Data 
Exchange System for Cloud Services Platform Based on SaaS,” Inf. 
Sci. Control Eng. (ICISCE), 2015 2nd Int. Conf., pp. 327-331, 2015. 
[10] X. Liu, L. Ma, and Y. Liu, “A middleware-based implementation for 
data integration of remote devices,” Proc. - 13th ACIS Int. Conf. Softw. 
Eng. Artif. Intell. Networking, Parallel/Distributed Comput. SNPD 
2012, pp. 219–224. 
[11] S. Ngamsuriyaroj, C. Sirichamchaikul, S. Hanam, and T. 
Tatsanaboonya, “Patient information exchange via web services in HL 
7 v3 for two different healthcare systems,” Proc. 2011 8th Int. Jt. Conf. 
Comput. Sci. Softw. Eng. JCSSE 2011, pp. 420–425. 
[12] IBM, “IBM Message Broker 8.” [Online]. Available: http://www-
01.ibm.com/support/knowledgecenter/SSKM8N_8.0.0/com.ibm.healt
hcare.doc. 
413
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

[13] MITRE 
Corporation, 
“Project 
hData.” 
[Online]. 
Available: 
http://www.projecthdata.org. [Accessed: 21-Jun-2015]. 
[14] H. L. S. International, “Health Level Seven,” 2007. [Online]. 
Available: http://www.hl7.org/. [Accessed: 06-Jun-2015]. 
[15] ISO/IEC, “Information technology - Open Systems Interconnection - 
Basic Reference Model: The Basic Model,” vol. 1, p. 69, 1994. 
[16] L. Liu and Q. Huang, “An extensible HL7 middleware for 
heterogeneous healthcare information exchange,” 2012 5th Int. Conf. 
Biomed. Eng. Informatics, BMEI 2012, no. Bmei, 2012, pp. 1045–
1048. 
[17] H. C. Tung Tran, Hwa-Sun Kim, “A Development of HL7 Middleware 
for Medical Device Communication,” in Fifth International 
Conference on Software Engineering Research, Management and 
Applications, 2007, pp. 485–492. 
[18] M. Hussain, M. Afzal, H. F. Ahmad, N. Khalid, and A. Ali, “Healthcare 
applications interoperability through implementation of HL7 web 
service basic profile,” ITNG 2009 - 6th Int. Conf. Inf. Technol. New 
Gener., 2009, pp. 308–313. 
[19] D.-M. L. D.-M. Liou, E.-W. H. E.-W. Huang, T.-T. C. T.-T. Chen, and 
S.-H. H. S.-H. Hsiao, “Design and implementation of a Web-based 
HL7 validation system,” Proc. 2000 IEEE EMBS Int. Conf. Inf. 
Technol. Appl. Biomed. ITAB-ITIS 2000. Jt. Meet. Third IEEE EMBS 
Int. Conf. Inf. Technol, 2000, pp. 1–6. 
[20] S. C. Lin, Y. L. Chiang, H. C. Lin, J. Hsu, and J. F. Wang, “Design and 
implementation of a HL7-based physiological monitoring system for 
mobile consumer devices,” Dig. Tech. Pap. - IEEE Int. Conf. Consum. 
Electron., 2009, pp. 1-2. 
[21] N. Ibrahim, “Orthogonal classification of middleware technologies,” 
3rd Int. Conf. Mob. Ubiquitous Comput. Syst. Serv. Technol. 
UBICOMM 2009, 2009, pp. 46–51. 
[22] H. Pinus, “Middleware: Past and present a comparison,” pp. 1–5, 2004. 
[23] Oracle, “Message-Oriented Middleware (MOM),” 2010. [Online]. 
Available: 
http://docs.oracle.com/cd/E19798-01/821-
1798/aeraq/index.html. [Accessed: 02-Jun-2015]. 
[24] Microsoft, “Message Queuing (MSMQ),” 1999. [Online]. Available: 
https://msdn.microsoft.com/en-us/library/ms711472(v=vs.85).aspx. 
[Accessed: 05-Jun-2015]. 
[25] IBM, 
“IBM 
MQ,” 
2011. 
[Online]. 
Available: 
http://www-
03.ibm.com/software/products/en/ibm-mq. [Accessed: 05-Jun-2015]. 
[26] M. Henning, “A new approach to object-oriented middleware,” IEEE 
Internet Comput., vol. 8, no. 1, pp. 66–75, 2004. 
[27] L. Ko et al. “HL7 middleware framework for healthcare information 
system,” Heal. 2006 8th Int. Conf. e-Health Networking, Appl. Serv., 
2006, pp. 152–156. 
[28] University Health Network., “HAPI FHIR.” [Online]. Available: 
http://hl7api.sourceforge.net/. 
[29] Inner 
Harbour 
Software, 
“HL7Spy.” 
[Online]. 
Available: 
http://hl7spy.ca/hl7-spy/. [Accessed: 21-Jun-2015]. 
[30] J. 
Reagan, 
“HL7 
Analyst.” 
 
[Online]. 
Available: 
http://hl7analyst.codeplex.com/downloads/get/250522?releaseId=685
24. [Accessed: 21-jun-2015]  
[31] Meta Healthcare, “Mirth Connect - HL7 Middleware.” [Online]. 
Available: 
http://www.metahealthcare.com/solutions/mirth/. 
[Accessed: 21-Jun-2015].  
 
414
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

