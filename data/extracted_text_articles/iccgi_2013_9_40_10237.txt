Development of Logistical Model Based on Integration of  
Ontology, Multi-Agent approach and Simulation 
 
Konstantin A. Aksyonov, Eugene A. Bykov, Olga P. Aksyonova, Alena L. Nevolina 
Department of Information Technology 
Ural Federal University 
Ekaterinburg, Russia 
BPsim.DSS@gmail.com, speedmaster@inbox.ru, wiper99@mail.ru, mail@bpsim.ru   
 
 
Abstract—The paper focuses on development of logistical 
model based on multi-agent model of a resource conversion 
process. The model is used for planning and dispatching of gas 
stations network. We compare existing approaches to multi-
agent planning, including requirements and capabilities nets, 
multi-agent resource conversion process model, active and 
passive convertors model, agent-based simulation modeling, 
and their software implementations (Magenta, BPsim, Onto 
Modeler, AnyLogic). The most perspective approaches are 
implemented in Magenta and BPsim systems. However multi-
agent approach based on distributed calculations has one 
disadvantage, which is frequent plan modification, resulting in 
certain instability of the model. To avoid this effect, we use 
situation filtration and diagnosis block. In order to take delays 
into consideration and analyze the bottlenecks in logistical 
chain, we use simulation modeling. We compare existing 
knowledge representation models, identify the benefits, and 
develop a methodology that considers all advantages. 
Keywords-logistics; decision support; simulation; expert 
system; frame; UML 
I. 
 INTRODUCTION 
The following components are considered during system 
analysis of logistical, production, business systems, and 
business processes: mission, vision, strategy, processes [1]. 
Development of applied decision support systems based on 
hybrid (dynamic and intelligent) models requires the 
following functions [1]: 
• 
Design of conceptual model of the problem domain, 
• 
Problem 
domain 
knowledge 
definition 
and 
knowledge-based output, 
• 
Definition 
of 
dynamic 
resource 
conversion 
processes, 
• 
Development of hierarchical process model, 
• 
Availability of situation and command definition 
languages (to define control model),  
• 
Design of multi-agent models (availability of 
coalitions of intelligent agents). Models  of 
intelligent agents correspond to the models of 
decision-making people, 
• 
Integration of conceptual, simulation modeling, 
expert systems, and situational management, 
• 
Integration with tools for Computer-Aided Software 
Engineering (CASE-tools). 
Multi-agent systems engineering approaches can be 
distinguished into two types: 
• 
Based on object-oriented methods and technologies 
and 
• 
Application of traditional knowledge engineering 
methods. 
An actual task is development of dynamic situations 
modeling system, based on object-oriented technologies. 
 Planning is one of applied directions of multi-agent 
systems. "An agent is an encapsulated computer system that 
is situated in some environment and that is capable of 
flexible, autonomous action in that environment in order to 
meet its design objectives" [2-3].  
An example of multi-agent system applications to 
operation planning of a flexible industrial system is 
discussed by Jennings [2].  We can name the following 
advantages of multi-agent planning systems: 
1. Formalization of decision making nodes (situation 
processing scenarios) in form of the agents, which 
relates to knowledge formalization, 
2. Planner is embedded in between certain elements of 
a multi-agent system by means of interaction 
(negotiations) of these elements. Thus, it may 
modify the plan in case of delays or unexpected 
situations, 
3. Network of interconnected agents coordinates its 
activity independently. 
Additional advantage of multi-agent planning consists in 
availability of automatic notifications of process actors about 
events and changes at control object, which makes control 
transparent. Therefore, problem domain knowledge data is 
formalized during development and deployment of a multi-
agent system, and the decision making process is automated. 
This all facilitates decision making activity. 
Among the most considerable results, one may note the 
development and practical application of the Requirements 
and Capabilities (RC-) networks apparatus [4-5]. This 
approach adheres to the “classical” interpretation of a multi-
agent system and is oriented to problem solving in computer 
networks.  
Apparatus of RC-networks has been developed by 
Vittich and Skobelev [4] and implemented within Magenta 
technology [5]. It has been applied in a family of applied 
intelligent planning systems for the following objects [5]: 
 
188
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

• 
An enterprise, controlling ocean tanker fleet, 
• 
Cargo transportation company, 
• 
Project managing company. 
Multi-agent approach also found its use in simulation 
modeling. Thereby, the simulation modeling system 
AnyLogic supports modeling of reactive agents [6]. 
AnyLogic uses state chart extensions of Unified Modeling 
Language for. Real-Time (UML-RT) for agent behavior 
formalization. 
An 
example 
of 
multi-agent 
system 
implementation within the dynamic expert system G2 [7] is 
presented in [8]. G2 makes use of the built-in simulation 
modeling sub-system ReThink [7].  
The agent concept is re-considered within the framework 
of simulation modeling. Here, its communication features at 
the network protocols level, as well as capabilities of moving 
on the network, are becoming less important. At the same 
time, its intelligence and sociality are increasing. By 
intelligence we mean consideration of large volumes of data 
and knowledge and complexity of logical output machine 
implementation, at least for G2 and BPsim systems. Sociality 
includes modeling of social behavior, internal beliefs, 
desires, and agent goals.   
II. 
SIMULATION MODELING,  KNOWLEDGE 
REPRESENTATION AND DESIGN OF DECISION SUPPORT 
SYSTEMS 
Range of simulation modeling systems application 
substantially broadened during last decades. First, simulation 
modeling systems and software-based simulation models are 
built into enterprise control loops, integrated with sensors, 
controllers, corporate information systems via data exchange 
interfaces, thus, receiving data on current state of the 
managed object. Second, most simulation modeling systems 
allow modification/refresh of initial data and adapt decision 
on the basis of current situation, during experiment 
execution. Third, most applied decision support systems, that 
are based on simulation modeling sub-system or simulation 
model, 
use 
heuristic-based 
sub-systems 
of 
decision 
optimization and improvement for formalization of decision 
making people knowledge and control algorithms.  
Projects in the areas of hybrid decision support systems 
deployment for logistical, industrial management, and 
construction are described in [9-11]. Such systems integrate 
simulation model with heuristic or optimization blocks. 
Therefore, 
we 
are 
dealing 
with 
open 
integrated 
modules/systems for simulation modeling. Expert system 
elements, including a knowledge base and logical output 
machines, and ontologies are actively used in decision 
support systems as well.  
Despite active application of conceptual modeling tools 
based on Unified Modeling Language (UML) in the area of 
information systems development, application of such tools 
in simulation modeling engineering is limited [12]. An 
advantage of conceptual and simulation modeling integration 
approach is the capability of rapid transition from conceptual 
models to the models of engineering and application 
(program implementation) [12]. To define a transition from 
conceptual models to simulation models one may use 
ontologies or knowledge representation models. Ontology 
development experience for logistical projects and supply 
chains is presented in [13]. RC-networks [4-5] use ontologies 
for formalization of decision making points in distributed 
networks of control object (logistical chain). The following 
agents are available in the cargo transportation project:  
truck, technical examination, order, gas station, driver.  
External environment
(convertors, agents, resources, 
tools, parameters, goals)
Simulation model
Planning subsystem
Reactive subsystem
External environment interface
Sub-system of cooperation with other agents
Inner behaviour
(Activity diagram)
Logical output 
from strategic 
knowledge  base 
(Decision search 
diagram)
Strategic knowledge 
base
(frames)
Tactical knowledge 
base 
(productions)
Logical output from tactical 
knowledge base 
(Direct output)
 
Figure 1. Multi-agent resource conversion process model structure 
 
189
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

Multi-agent resource conversion process model has been 
implemented in BPsim software suite [10-11]. Multi-agent 
resource conversion process model has been implemented as 
a result of integration of simulation, multi-agent and expert 
modeling [1, 20]. Multi-agent resource conversion process 
model structure is presented in Figure 1. 
III. 
ANALYSIS OF EXISTING KNOWLEDGE 
REPRESENTATION MODELS 
Comparison of typical knowledge representation models 
for the problem of knowledge extraction for the problem 
domain of logistics, business, Multi-agent Resource 
Conversion Processes (MRCP), and further application in 
software simulation models is presented in Table 1.  
Comparison revealed that the most effective approach is a 
combination of production-based and frame-based approaches 
for knowledge formalization in the logistical problem domain. 
A disadvantage of frame-based approach is the complexity of 
logical output machine.  
For system analysis, the UML class diagram may be used 
as a basis for the definition of frame-concepts structure. Further 
definition of conceptual graphs (semantics) and filling with 
data form the knowledge base. Decision search diagrams 
(extended 
UML 
sequence 
diagrams) 
are 
used 
for 
implementation of logical output machine visual builder. 
Sequence diagram graphically define sequence of method calls 
between classes while solving a specific problem (scenario). 
Such approach allows to visual definite the solution [14]. 
Depending on modeling aspects, various concepts of the 
problem domain use different elements of the resource 
conversion process model. Base classes (concepts) of the 
problem domain of simulation modeling of logistical and 
business processes include the following. 
• 
Business process together with its temporal and cost 
features, as well as properties of inputs, outputs, and 
tools of multi-agent resource conversion process 
operations (ultimate units of a business process), 
• 
Locations (inhabited and non-inhabited), containing 
geo-information 
– 
in 
multi-agent 
resource 
conversion processes may be represented with 
corresponding transacts, 
• 
Transportation vehicles – in multi-agent resource 
conversion processes may be represented with 
corresponding transacts or tools, 
• 
Personnel – in MRCP represented with tools or 
corresponding transacts, 
• 
Decision making people – in MRCP represented 
with agents; heuristics are formalized in form of 
agent rules, 
• 
Road network and transportation routes – in MRCP 
represented by transaction processing routes between 
operations, defining transitions on logical chain, 
• 
Resources and cargo (resource and cargo storage), 
used in business processes – in MRCP represented 
by corresponding transacts or resources, 
• 
Statistics and experiment results accumulation 
classes are generated on the output of MRCP model. 
Results of development of tools and methods of business 
processes modeling and software engineering for automation 
of the process starting with process formalization, 
development of dynamic models of the processes and 
decision making processes, running simulation experiments 
with the models, bottlenecks analysis, re-engineering, and 
optimization of the processes, until software engineering 
(database structure generation and software module 
prototypes implementation), are presented in [15]. Also, a 
semantic model, defining multi-agent resource conversion 
process, is presented in [15]. The model uses discrete event 
simulation modeling as a dynamic component and expert and 
multi-agent simulation of intelligent agents as an intelligent 
component. It includes the following components: processes, 
operations, resources, control commands, mechanisms, 
resource sources and receivers, junctions, parameters, 
agents. Information resources due to their features are 
defined separately. These are Messages and Requests for 
operation execution. Cause-and-effect relations between 
conversion elements and resources are defined with the 
Relation object. 
A specialized problem-oriented language is used in 
dynamic situations modeling system BPsim.MAS [10] for 
definition of subject ontologies and cause-and-effect laws for 
definition of process dynamics. According to Guizzardi and 
Wagner [12], subject ontology of discrete-event simulation 
modeling uses a concept of “CasualLow”, which is 
equivalent to the “Action” concept in multi-agent resource 
conversion process model. 
Semantic model became the basis and was extended with 
detailed definition of semantics from the point of view of 
simulation modeling and consideration of agents’ behavior. 
Actions may result in both parametric and structural 
modifications of MRCP model elements. Model is presented 
in Figure 2. This model is extended with elements of 
logistical projects ontology, presented in [13], and adapted to 
specific features of gas stations supply network project.  
TABLE I.  
COMPARISON OF VARIOUS KNOWLEDGE REPRESENTATION MODELS 
Requirements for the model 
Productions 
Semantic networks 
Frames 
Visibility 
◌ 
● 
● 
Hierarchical data definition 
◌ 
● 
● 
Simplicity of adding new knowledge 
● 
◌ 
◌ 
Consistency with object-oriented approach 
◌ 
◌ 
● 
Use of UML 
◌ 
◌ 
● 
Consideration for process dynamics 
◌ 
◌ 
◌ 
 
190
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

IV. 
METHODOLOGY OF INFORMATION SYSTEMS 
ENGINEERING WITH AID OF BPSIM 
The suggested methodology has the following specific 
features: 1. Simulation modeling for “as-to-be” model 
verification at re-engineering stage; 2. Capability of 
defining decision making people models. Software 
engineering process is separated into several stages. These 
stages are discussed further in relation to BPsim software. 
First stage is research. Simulation model “as-is” is 
designed on this stage. Simulation experiments are carried 
out targeting identification of non-optimal process 
organization. Model results are used for design of the “as-
to-be” model of the multi-agent resource conversion 
process, which in turn is used for software engineering. The 
following products from BPsim family are used on this 
stage: 1. Dynamic situations modeling system BPsim.MAS 
(“Multi-agent simulation”) is used for design of simulation 
model and running simulation experiments, 2. CASE tool 
BPsim.SD (“Software Developer”) is used for designing 
diagrams, defining software architecture. Note that the 
results of work in BPsim.MAS may be automatically (with 
aid of software assistant) transformed into BPsim.SD 
model, since operations, defined in multi-agent resource 
conversion process mode, are transformed into operations 
on Data Flow Diagrams (DFD) [12], agents – into external 
entities, and order of operations defines direction of data 
flow [15].  
Second stage consists in the project study. Structural 
analysis results become the basis for object-oriented 
engineering when building information system model. An 
important feature of BPsim.SD is the capability to acquire 
use-case diagrams on the basis of the data from data flow 
diagrams: 
external 
entities of 
DFD 
diagrams 
are 
transformed into roles, and processes – into use-cases. 
Sequence of data processing method calls in multi-agent 
resource conversion processes problem domain in reflected 
on sequence diagrams. Class diagrams are defined for the 
conceptual model specification of the problem domain. 
Class properties define the features of the problem domain 
objects, and methods describe operations of resources 
seizure, release and conversion, and the code from multi-
agent resource conversion process model may be 
transferred into method definition [15].  
The third stage consists in system development, while 
the fourth refers to system deployment. Effectively 
designed elements of the hybrid model of multi-agent 
resource conversion processes implemented in software, 
may be immediately included into decision support system 
or the corporate information system and used in decision 
making process, both as a whole or separately in form of 
calls to software assistants. Program model may be 
converted into the library of executable application and be 
used in control system. The most complex and costly 
intelligent components in decision support systems 
development are the logical output machine simulation 
modeling core, multi-agent system core and agent 
communications. Due to that, an actual problem is 
development of applied decision support systems based on 
ready-made intelligent components.  
V. 
ANALYSIS OF EXISTING APPROACHES 
Skobelev refers to Magenta [16] technology as to the first 
generation of multi-agent platforms and presents results of 
second generation platform development. One of the features 
of second generation multi-agent platform is the control over 
all kinds of mobile resources that have built-in GPS (Global 
Positioning System) and/or GLONASS (Global Navigation 
Satellite System) sensors. Part of this platform is deployed 
directly on the mobile devices.  Advantages of second 
generation platform are illustrated in [16] on the truck 
control project for the European transportation network, 
since no similar system can “consolidate cargo, adapt 
delivery routes, plan deliveries and assign trucks on the basis 
of events flow, such as new order entry or changes in 
resource availability”. A conceptual approach to design of a 
similar system is presented in [17]. 
One of multi-agent planning platform requirements is 
support of the full control cycle that consists of the following 
stages [16]: 
1) Reaction to event (discrete event control). Events 
(orders, delays, failures, etc.) are received in real time. They 
need to be planned, taking into account current plans, 
individual preferences and limitations of resources and 
orders, 
2) Dynamic planning (re-planning  / dispatching), 
3) Coordination and plan revision “on the fly”. 
Changes are made to resource plans without stopping and 
restarting the main program, by modifying the schedule “on 
the fly”, making use of both free windows and adaptive 
repositioning of previously assigned orders. When planned 
and actual schedules differ, automatic re-planning and user 
coordination are required. 
Part-whole
Type
MRCP
Part-whole
Resourc
es
Agents
Part-whole
Part-whole
Operations
Processes
Sources
Receivers
Intersections
Convertors
Commands
Transacts
Tools
Uses
Parameters
Inheritance
Inputs
Outputs
Consume
Generate
Are
Behavior 
model
Consists of
Situation analysis 
rules
Agents’ 
actions
Calls
Initiate
Analyse state
Initiate decision search
Frame 
knowledge base
Goals
Part-whole
Agents’ 
goals
Decision
returns
correct
Inheritance
System time
Inheritance
Actions
Consist of
Modify state of resources and 
tools, goals, parameters, MRCP 
structure, transact processing routes
Inheritance
Consists of
 
Figure 2.  Semantic model of multi-agent resource conversion 
processes 
191
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

4) Plan execution monitoring and control 
Successful deployment of planning system highly depends 
on user “trust” factor. Users, typically logistical specialists or 
dispatchers, are responsible for planning and control of 
transportation process. User trust may be provided by 
offering aids to override the system operation and make 
modifications accordingly. Planning problem is usually 
complex, since certain events, situations and parameters can 
be omitted during development of intelligent planning 
system. Thus, the following additional requirements emerge: 
1) Negotiations on the plan with end users 
2) Manual plan editing, including manual planning 
In order to design an efficient supply chain planning 
system one must control of supply and individual order 
terms; diagnose the bottlenecks of transportation networks 
and logistical centers. Thus, there is a requirement for 
analysis and modeling of logistical systems that are based 
on queuing systems.  
The following approaches to multi-agent system and 
business process models are available: 1. Multi-agent 
resource conversion process model [1, 20], 2. Requirements 
and capabilities networks (RC-nets) by Vittich, Skobelev, 
and Rzevski [4-5, 16], used for development of intelligent 
multi-agent systems in logistics, 3. Models of Active and 
Passive Convertors (APC) by Moskalyov and Klebanov 
(Onto Modeler software) [19], 4. Approach, implemented 
in AnyLogic software [6, 9].  
The results of these approaches analysis are presented 
in Table 2. The requirements for logistical system may be 
separated into 3 groups: knowledge formalization; analysis 
and simulation; full control lifecycle support.  
As we can see from the table, the RC-net satisfies most 
requirements 
of 
logistical 
models 
and 
supports 
corresponding 
tasks. 
Also 
the 
multi-agent 
resource 
conversion process model is perspective, if improved and 
perfected, due to detailed study of integration of conceptual, 
simulation, expert, multi-agent, and situation modeling.  
Generally, there is the following difference between RC-
networks based and multi-agent resource conversion 
processes apparatuses: 
1. Approaches have different knowledge distribution and 
representation. Each agent of RC-network possesses only its 
own knowledge. In order to achieve the common goal of 
planning and control a feature of agent communication is 
required. Thus, the RC-network provides a decentralized 
control system. AnyLogic provides a set of blocks for 
simulation modeling of transportation systems, but lacks 
tools for knowledge (ontology) processing. Since all 
knowledge about the whole control object in multi-agent 
resource conversion processes and APC is stored in a 
common 
knowledge 
base, 
the 
multi-agent 
resource 
conversion process offers a more centralized control system. 
It receives information from distributed sources (fuels 
residues sensors, transportation vehicles monitoring systems, 
corporate information system). 
2. Approaches differ by technical implementation. Last 
applications of RC-networks are oriented towards distributed 
calculations and networks. Software implementations of 
multi-agent resource conversion process model and APC 
model, as well as AnyLogic system, are all local simulation 
modeling systems.. 
3. Planning and dispatching tasks are solved with aid of 
RC-networks and multi-agent resource conversion process 
model. AnyLogic system is not oriented towards these 
problems, since the planning block needs to be implemented. 
APC approach cannot be used in planning tasks and 
logistical systems dispatching. Still, there are some 
disadvantages in the RC-networks approach [16]:  
TABLE II.  
ANALYSIS OF APPROACHES AND DYNAMIC MODELS OF SITUATIONS 
Features 
MRCP 
RC-net 
APC 
AnyLogic 
1. Various resource types 
● 
● 
● 
● 
2. Temporal parameters 
● 
● 
● 
● 
3. Conflicts on common resources and tools 
● 
● 
● 
● 
4. Discrete operations 
● 
● 
● 
● 
5. Complex resources (transacts), transact queue  
● 
● 
● 
● 
6. Situations analysis and decision search (heuristics block) 
● 
● 
◌ 
◌ 
7. Agent communications 
●* 
● 
◌ 
● 
8. Use of geo-data 
● 
● 
◌ 
● 
9. Development of subject ontologies 
● 
● 
● 
◌ 
10. Subject ontology of logistical problems 
● 
● 
◌ 
◌ 
11. Software engineering (use of UML) 
● 
◌ 
◌ 
● 
12. Support for distributed computing environments  
◌ 
● 
◌ 
◌ 
13. Simulation modeling 
● 
◌ 
● 
● 
14. Full control cycle 
 
 
 
 
14.1. Reaction to external event from the control object 
● 
● 
◌ 
◌ 
14.2. Dynamic planning 
● 
● 
◌ 
◌ 
14.3. Dispatching (re-planning) 
● 
● 
◌ 
◌ 
14.4. Coordination and plan revision “on the fly” 
● 
● 
◌ 
◌ 
14.5. Plan execution monitoring and control  
● 
● 
◌ 
◌ 
14.6. Negotiations on the plan with end users 
● 
● 
◌ 
◌ 
14.7. Manual plan editing 
● 
● 
◌ 
◌ 
 
* – feature under development 
192
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

a. 
Most scheduled trips are edited during execution (23% 
of all decisions are revised within the first hour after 
they are accepted, and only 10% of all decisions are 
alive for over 3 hours), 
b. Generally, there are 0 to 18% of proactivity phases that 
improve the schedule, 
c. 
System notifies logistical chain actors of all changes 
related to in, which causes certain tension.  
 Multi-agent resource conversion process model software 
implementation was further improved by agent heuristic 
blocks, implemented on the basis of production and frame-
based expert sub-systems, and also situation diagnosis and 
filtration blocks, which altogether drastically solaces the 
disadvantages of logistical chains. 
 
VI. 
APPLICATION OF BPSIM.MAS FOR MODELING OF 
LOGISTICAL PROCESSES 
Currently, the intelligent planning system is under 
development. It is going to be deployed at logistical 
department 
of 
gas 
supplying 
company, 
located 
in 
Ekaterinburg, Russia, a major city in authors’ area. The gas 
stations network of the supplier consists of 24 gas stations. 
Fuel to these stations is delivered by 12 fuel tankers. The 
total number of fuel tanks at all gas stations is 85 [10]. 
Interaction of intelligent system modules is presented in 
Figure 3.  
Initially, a logistics specialist sets initial values. They 
include date of the plan, fuel tankers shift start time, 
distribution strategy for various fuel types. Initial data also 
includes residues at gas stations and technical condition of 
tanker fleet. After finishing the algorithm operation, users 
have an opportunity to modify the plan. Next, the plan is 
exported into simulation module and is corrected depending 
on simulation results. Simulation model also monitors 
residues on each gas station and fuel usage dynamics. 
Events, received from the control object, are processed in 
situation diagnosis block. Processing results determine, 
whether the plan needs to be modified either in part, in 
whole, or not at all. Sample situations include failure of the 
gas tanker, availability of new tanker, closure of oil farm, 
appearance of a new order.  
Corporate 
Information 
System
Planning 
module
Simulation 
module
Test data on residue in tanks
Control object 
(fuel tanker fleet)
Delivery plan
Model tuning 
module
Real data on residue in tanks
Events
Real data on residue in tanks
Figure 3. Interaction of planning system 
VII. CONCLUSION AND FUTURE WORK 
The paper discussed development of logistical model 
based on multi-agent model of a resource conversion 
process. Also the following problems have been solved: 
A semantic model of multi-agent resource conversion 
processes has been designed, 
A methodology for design of information systems, based 
on the model of multi-agent resource conversion processes 
has been presented, 
A comparison of existing multi-agent approaches of 
information system development for the problems of 
planning and logistics has been presented.  
We analyzed requirements and capabilities nets, multi-
agent resource conversion process model, active and passive 
convertors model, agent-based simulation modeling, and 
their software implementations (Magenta, BPsim, Onto 
Modeler, AnyLogic). The most perspective approaches are 
implemented in Magenta and BPsim systems. However 
multi-agent approach based on distributed calculations has 
one disadvantage, which is frequent plan modification, 
resulting in certain instability of the model. To avoid this 
effect, we use situation filtration and diagnosis block. In 
order to take delays into consideration and analyze the 
bottlenecks in logistical chain) we use simulation modeling. 
Despite the active application of UML-based conceptual 
modeling tools in the area of information systems 
development, their application in simulation modeling 
engineering is limited. An advantage of conceptual and 
simulation modeling integration is the availability of rapid 
transition from conceptual models to design and application 
models, and software implementation. Ontologies and 
knowledge representation models may be used for transitions 
from conceptual model to simulation model. The ontologies 
are used in Magenta and BPsim systems. 
Further research includes: 
1. Estimation of proactivity phases of various event 
types for the suggested approach, 
2. Improvement of multi-agent resource conversion 
process model architecture, 
3. Design of full knowledge base for situations, 
4. Study of separate situations effect on plan stability, 
5. Deployment of decision support system. 
ACKNOWLEDGMENT 
Work was carried out under the terms of contract 
№ 02.G25.31.0055 (project 2012-218-03-167) and the Ural 
Federal University development program with the financial 
support of young scientists. 
REFERENCES 
[1] K. A. Aksyonov, “Model of a multi-agent resource 
conversion process and system analysis of organizational 
technical systems”, Computer and information technology 
bulletin, vol. 6, pp. 38-45, Ekaterinburg, Russia, 2009. 
[2] N. R. Jennings, "On agent-based software engineering," 
Artificial Intelligence, vol. 117, pp. 277-296, 2000. URL: 
http://www.agentfactory.com/~rem/day4/Papers/AOSE-
Jennings.pdf [retrieved: June, 2013] 
193
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

[3] M. Wooldridge, Agent-based software engineering, IEE 
Proceedings on Software Engineering, 144 (1). 1997. pp. 26–
37. 
[4] V. A. Vittich and P. O. Skobelev Multiagent Interaction 
Models for Constructing the Needs-and-Means Networks in 
Open Systems. Automation and Remote Control. Vol. 64, 
2003, 
pp. 
162-169. 
http://link.springer.com/article/10.1023%2FA%3A102183681
1441 [retrieved: June, 2013] 
[5] G. Rzevski, J. Himoff, and P. Skobelev, “MAGENTA 
Technology: A Family of Multi-Agent Intelligent Schedulers. 
International conference on multi-agent systems” Proceedings 
of Workshop on Software Agents in Information Systems and 
Industrial Applications 2 (SAISIA). Fraunhofer IITB, 
Germany, 
2006. 
URL: 
http://rzevski.net/06%20i-
Scheduler%20Family.pdf [retrieved: June, 2013] 
[6] Agent 
Based 
Modeling. 
Available 
at:  
http://www.anylogic.com/agent-based-modeling 
[retrieved: 
June, 2013] 
[7] Gensym G2 2011 Editions. Product page. Available at:  
http://www.gensym.com/product/G2 [retrieved: June, 2013] 
[8] G. V. Rybina and S. S. Parondjanov “Modelling of intelligent 
agent interaction processes in multi-agent systems”. Artificial 
intelligence and decision making. no. 3, 2008, pp. 3-15. 
http://www.aidt.ru/index.php?option=com_content&view=arti
cle&id=145 [retrieved: June, 2013] 
[9] A. V. Borschev. “Application of simulation modeling in 
Russia”, Proceedings of 3rd Russian scientific conference 
IMMOD, 
St. 
Petersburg, 
Russia, 
2007, 
pp. 
11-16,  
http://www.anylogic.ru/upload/iblock/981/98110c406433a4ed
72833480ad775068.pdf [retrieved: June, 2013] 
[10] K. A. Aksyonov, E. A. Bykov, A. A. Skvortsov, O. P. 
Aksyonova, and E. F. Smoliy, “Intelligent system for 
scheduling transportation within gas stations network”, 
Proceedings of the 2012 Winter Simulation Conference (WSC 
2012) 
December 
2012, 
Berlin, 
Germany. 
URL: 
http://informs-sim.org/wsc12papers/includes/files/pos194.pdf  
[retrieved: June, 2013] 
[11] K. A. Aksyonov, E. A. Bykov, K. Wang, and O. P. 
Aksyonova, “Application of simulation-based decision 
support systems to optimization of construction corporation 
processes”, Proceedings of the 2012 Winter Simulation 
Conference (WSC 2012) December 2012, Berlin, Germany. 
URL: 
http://informs-
sim.org/wsc12papers/includes/files/pos172.pdf  [retrieved: 
June, 2013] 
[12] G. Guizzardi and G. Wagner, “Tutorial: Conceptual 
simulation modeling with Onto-UML”, Proceedings of the 
2012 Winter Simulation Conference, (WSC 2012), December 
9-12, 2012, Berlin, Germany. pp. 52-66, http://informs-
sim.org/wsc12papers/includes/files/inv284.pdf 
[retrieved: 
June, 2013] 
[13] M. Kowalski, S. Zelewski, D. Bergenrodt, and H. Klupfel, 
“Application of new techniques of artificial intelligence in 
logistics: an ontology-driven case-based reasoning approach”, 
Proceedings of ESM'2012 (ESM - European Simulation and 
Modelling 
Conference) 
October 
22-24, 
2012, 
FOM 
University of Applied Sciences, Essen, Germany. pp. 323-
328. 
[14] K. A. Aksyonov, I. I. Sholina, and E. M. Safrygina, 
“Development and application of object-oriented modeling 
and decision support system for multi-agent resource 
conversion processes”, Scientific and technical bulletin of St. 
Petersburg 
State 
Technical 
University. 
Informatics, 
Telecommunication, Control., vol. 3 (80), pp. 87-97, 
Ekaterinburg, Russia, 2009. 
[15] K. A. Aksyonov and I. A. Spitsina, “Method for engineering 
of enterprise information systems based on semantic models 
of multi-agent resource conversion processs and software”, 
Automatization and state-of-the-art technology, vol.9, pp. 22-
30, Moscow, Russia, 2009. 
[16] P. O. Skobelev “Multi-agent technologies for resource 
management in real time”, Proceedings of the seminar 
“Mechanics, control and informatics”, Tarusa, Russia, 2-4 
March 
2011, 
available 
at 
http://www.iki.rssi.ru/seminar/2011030204/presentation/2011
0303_03.pdf [retrieved: June, 2013] 
[17] M. Klump and G. Sandhaus “Dynamic scheduling in logistic 
with agent-based simulation”, Proceedings of ESM'2012 
(ESM - European Simulation and Modelling Conference) 
October 22-24, 2012, FOM University of Applied Sciences, 
Essen, Germany. P.329-336. 
[18] V. A. Vittich and P. O. Skobelev, “Multi-agent interaction 
models for design of requirements and capabilities networks 
in open systems”, Automatics and Telemechanics, vol. 1, pp. 
177-185, Ekaterinburg, Russia, 2003 
[19] I. M. Moskalyov, “System for analysis and optimization of 
resource conversion processes”, PhD research work, Ural 
State Technical University, Ekaterinburg, Russia, 2006. 
[20] K. Aksyonov, E. Bykov, L. Dorosinskiy, E. Smoliy, and O. 
Aksyonova, “Decision Support based on Multi-Agent 
Simulation Algorithms with Resource Conversion Processes 
Apparatus Application, Multi-Agent Systems”, In Modeling, 
Interactions, Simulations and Case Studies, Faisal Alkhateeb, 
Eslam Al Maghayreh and Iyad Abu Doush (Ed.), ISBN: 978-
953-307-176-3, 
InTech, 
2011, 
Available 
from: 
http://www.intechopen.com/articles/show/title/decision-
support-based-on-multi-agent-simulation-algorithms-with-
resource-conversion-processes-appar, pp. 301-326 [retrieved: 
June, 2013] 
 
 
 
 
194
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

