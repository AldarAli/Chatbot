264
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Carrier Phase Discrimination for a Common
Correlation Interval GNSS Receiver Architecture
Pedro A. Roncagliolo, Javier G. Garc´ıa, and Carlos H. Muravchik
Laboratorio de Electr´onica Industrial, Control e Instrumentaci´on (LEICI),
Dto. Electrotecnia, Facultad Ingenier´ıa, UNLP, La Plata, Argentina.
Emails: {agustinr, jgarcia, carlosm}@ing.unlp.edu.ar
Abstract—Basic measurements of global navigation satellite
system receivers are obtained after the correlation of the incom-
ing signal with locally generated replicas. Usually, correlation
intervals are chosen synchronously with the data-bits sent with
each satellite signal to avoid bit transitions. As a consequence,
the ensuing code and carrier phase estimation signal processing
operates at its own time and the navigation task must extrapolate
loop measurements to a common instant. We have proposed
an alternative receiver architecture using a common correlation
interval for all satellite signals. Under this scheme, the correla-
tions made for each satellite in-view have a common interval,
chosen in synchronism with the navigation process rather than
with the data bits. Naturally, now the bit transitions within a
correlation interval require special treatment. The advantages
of avoiding measurement extrapolation are shown with a scalar
phase lock loop structure intended for high dynamics real-time
receivers. The operation of this loop in a common correlation
interval receiver needs a carrier phase discriminator structure
able to produce outputs for the correlation with bit transitions
inside the interval. Three possible carrier discriminator schemes
are analyzed in this work. It is shown that the loops operating
data-bit asynchronously with any of these schemes have similar
tracking threshold and phase estimation quality than those
working bit-synchronously. The proposed architecture naturally
generates a vector of simultaneous measurements and then it
is particularly suited for the implementation of real-time vector
tracking loops.
Keywords- Phase Discrimination; GNSS; Real-Time Receivers;
Digital Phase Locked Loops; Vector Tracking Loops.
I. INTRODUCTION
Measuring the propagation delay of broadcast signals is
the key to the position calculations made in every modern
global navigation satellite system (GNSS) receiver. For this
purpose, the receiver has to be synchronized with the visible
satellite signals. Direct sequence spread spectrum (DS-SS)
signals are utilized due to their desired properties of high time-
resolution and code division multiple access (CDMA) and
therefore code and carrier synchronization are required [2]. A
correlation stage is also needed at the receiver to de-spread the
incoming signals so that the synchronization and navigation
algorithms can operate with reasonable signal-to-noise ratios.
The required economy of operations in real-time receivers
makes impractical the use of complex estimation schemes and
usually tracking loop schemes are adopted for synchronization
purposes. Phase measurements are considerably less noisy than
code delay and so, code loops are usually aided by carrier
loops [3]. However, the signal phase is affected by the wave-
length ambiguity and hence the basic measurement used for
standard position determination is code delay. On the contrary,
the techniques used in high precision positioning applications
usually take advantage of the phase measurements. In general,
code delay and carrier phase or frequency measurements used
by the GNSS receiver for position and velocity determination
are referred to as navigation measurements or raw track data.
Typically, the GNSS signal has also a data structure to send
useful information to the receivers, such as orbit parameters
needed for satellite position calculations, clock corrections,
ionospheric corrections, signal quality indexes, etc. The bits
carrying this information are modulated usually in phase, and
of course the receiver has to be able to demodulate them. The
presence of these data-bits imposes restrictions to the receiver
operation from the point of view of navigation measurements
generation. Indeed, the correlation time is in principle, limited
to the bit duration time and the corresponding signal-to-noise
ratio increase due to despreading gain is limited too. In some
applications this is not a limitation at all, but in others, such as
indoor positioning, the use of some long-correlation techniques
is unavoidable [4]. Moreover, since different satellite signals
experience different propagation delays, the edges of these bits
are in general asynchronous. As a consequence, the correlation
intervals used for each signal satellite are also asynchronous.
In standard real-time receivers, this causes that the tracking
loops for each satellite operate synchronously with the bit
edges, but asynchronously among them. For the navigation
process, this implies that the measurements do not correspond
to the same time instant and the receiver has to extrapolate
them [2], [3]. These lag differences make it difﬁcult to take
advantage of the correlation between the received signals,
since each signal is tracked independently.
The convenience of joint tracking the signals by means of
the so-called vector tracking loops, has been envisioned since
the conception of the GNSS systems [2]. Nowadays, due to
their potential advantages together with the growing computa-
tion capacity available in a GNSS receiver, many researchers
and developers, are considering vector tracking loop schemes.
These loops can obtain up to 6 dB of improvement in tracking
threshold, in addition to high dynamic capacity, multipath
immunity and robustness [5]. Vector tracking loops have been
mainly applied in software-based receivers [6], [7]. Recently,
a real-time implementation using ﬁeld-programmable-gate-

265
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
arrays (FPGA) with a fast microprocessor has been reported
in [8]. This implementation operates with asynchronous cor-
relations of the different signals, either extrapolating the
navigation measurements or asynchronously incorporating the
measurements to the main processing algorithm. Other off-
line implementations use data bit removal in order to get
simultaneous navigation measurements [9].
In a previous work, we proposed a different and novel ap-
proach, which is based on the use of synchronous correlations
for the received satellite signals so that the navigation mea-
surements are naturally simultaneous [1]. As a consequence,
the tracking loops operate asynchronously with respect to the
bit edges of the signals and their inputs, i.e., the code and
carrier phase errors, have to be calculated for signal intervals
with a possible bit-transition inside. The suggested approach
is to compute partial correlations before and after the bit
edge and calculate a discriminated error based on them. In
this work we analyze particularly three different carrier phase
discriminators based on this partial correlations. In high signal-
to-noise ratio the three schemes show similar performance,
which is also similar to the bit synchronous tracking loop
results. The main difference between them is their non-linear
characteristic, which is evidenced in low signal-to-noise and/or
high dynamic situations. This aspect of the discriminators is
quantiﬁed by means of the resulting tracking threshold, i.e.,
the lowest signal-to-noise ratio the tracking loop can operate
at, computed for different dynamic scenarios.
The rest of paper is organized as follows. A digital model
for the received GNSS signal is presented in Section 2.
Since the emphasis on this work is on phase discriminator,
our unambiguous frequency-aided phase-locked loop (UFA-
PLL) scheme will be brieﬂy explained [10]. The advantages
of avoiding measurements extrapolation are shown with this
tracking loop structure intended for high dynamics real-time
receivers. The three phase error discriminators schemes under
consideration for the correlation periods with possible bit-
transition are presented in Section 3. The computational load
of each scheme and their extension for code delay discrimina-
tion is also shortly discussed. The considered phase discrim-
inators are applied to UFA-PLL structure in Section 4, and
their effects in the phase measurements quality and tracking
threshold are determined by means of Monte Carlo simula-
tions. One of the schemes show better performance for low
dynamics situations but its performance is severely degraded
in high dynamics. In the other two cases, the degradation in
the tracking threshold is less than 0.5dB compared with a loop
that works with known data-bits, for all the dynamic scenarios
considered. Curves of pull-out probability of the different
schemes are also provided. The small degradation in tracking
threshold caused by the data-bits asynchronous operation is
completely insigniﬁcant compared to the improvement in
the quality of phase measurements due to the absence of
extrapolation and the common correlation interval architecture.
Finally, the obtained conclusions and future work lines are
given in Section 5.
II. DIGITAL MEASUREMENTS MODEL
In a GNSS receiver, the incoming signal must be correlated
with the locally generated replicas for each visible satellite.
The complex correlations of the signal from a given satellite
with carrier power to noise power spectral density C/N0 and
for the i-th correlation interval of duration T can be expressed
as [2]
Ci = Di
r
T C
N0
sinc(∆fi)R(∆τi)ej(π∆fiT +∆θi) + ni
(1)
where ∆τi = τi − ˆτi is the code delay estimation error,
∆fi = fi − ˆfi the frequency estimation error, both assumed
constant during the integration time, and ∆θi = θi − ˆθi the
initial phase estimation error. The term ni is a complex white
Gaussian noise sequence with unit variance, R(·) is the code
correlation function and sinc(x) = sin(πx)/(πx). This ex-
pression assumes that there are binary data bits Di = ±1 and
that correlations are computed within the same bit period. This
type of modulation, i.e., binary phase shift keying (BPSK), is
used in the GPS civil signal and in the data components of
composite modernized GNSS signals.
After the acquisition process has been completed, i.e., in
tracking conditions [2], code and frequency estimation errors
are sufﬁciently small so that the functions sinc(·) and R(·) can
be approximated by one. Hence, (1) becomes
Ci = Ii + jQi = Di
r
T C
N0
ej∆φi + ni
(2)
where we have deﬁned ∆φi = φi − ˆφi, with φi = πfiT + θi
and ˆφi = π ˆfiT + ˆθi. With the help of these sequences the
carrier tracking loop can be modeled as a digital single-input
single-output (SISO) system. It is important to note that ∆fi
and ∆φi can be interpreted as the average frequency error and
average phase error during the correlation interval respectively.
The phase estimation error is obtained from the angle of
the complex correlation. In the case of BPSK modulation the
phase error must be insensitive to the bit changes and a two
quadrant discriminator should be utilized. Then,
ei = tan−1
µQi
Ii
¶
= [∆φi + nφi]π
(3)
where the notation [·]π indicates that its argument is kept
within the interval (− π
2 , π
2 ] by adding or subtracting π as
many times as needed. The noise term nφi has zero mean and
a complicated probability distribution in general. However, in
high C/N0 conditions it can be approximated by a Gaussian
distribution with zero mean and variance 1/(2TC/N0).
A. Phase Discriminator
The unambiguous frequency-aided (UFA) algorithm uses
the frequency error information to correct the non-linearity of
a phase-locked loop (PLL), instead of adding a frequency-
locked loop (FLL) to cope with high dynamics. Thus, the
advantages of a frequency loop are added to the PLL obtaining
the same dynamic tolerance of an FLL but also avoiding cycle
slips during tracking [11], [10]. The UFA phase discriminator

266
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
1
1 − z−1
-
z−1
p3
-
ˆφi
-
-
6
z−1
-
[·]π
-
ei
-
p2
UFA
-
-
ui
φi + nφi
-
1
1 − z−1
1
1 − z−1
1
1 + Cz−1
6
-
6
-
-
-
p1
bi
ai

ci
Fig. 1.
Block diagram of the UFA-PLL model.
works correcting the ambiguous values of ei by adding or
subtracting an integer number of π. The correction is such
that the difference between successive values of the corrected
phase error ui is less than a quarter of a cycle in magnitude.
Then, the corrected phase error estimate, with starting value
u0 = e0, is
ui = ei − Iπ(ei − ui−1)
(4)
where Iπ(x) = x − [x]π acts similarly to the integer part
function, but with steps at the multiples of π. Created in this
way, the sequence of phase errors ui has unambiguous values
as long as the loop frequency error is lower than 1/(4T)
in magnitude, i.e., half of the Nyquist rate from uniform
sampling theory. Under this condition, the sequence ui allows
to measure the loop frequency error with a simple difference
of successive phase errors, giving to the UFA-PLL the same
extra-information that usually has an FLL but not a PLL. In
previous works we have also shown that the UFA-PLL has
the same noise resistance, and so the same tracking threshold,
than an equivalent FLL [12].
B. Carrier Phase Tracking Loop
For the purpose of comparing different correlation intervals
approaches, throughout the rest of this work we consider a
speciﬁc carrier tracking loop. We chose a digital UFA-PLL
as shown in Figure 1 whose ﬁlter coefﬁcients are C = 0.5,
p1 = C = 0.5, p2 = 0.105, and p3 = 0.0123. For the
selected correlation time, T = 5ms, the resulting PLL has
an equivalent noise bandwidth BN = 75.6Hz. Notice that two
delays are included in the loop model. One of them is due
to the time spent in computation of the correlation. The other
delay appears because the estimated values used to compute
the correlations have to be known before the calculations
begin. That is, the value ˆφi is obtained with the loop ﬁlter
output of the (i − 1)-th correlation interval, which in turn
is calculated with the estimation errors of ˆφ(i−2). The loop
ﬁlter is optimized for the tracking of acceleration steps, which
produces a quadratic ramp of phase at the loop input. These
demanding high dynamics scenarios can be found for example
in sounding rockets, at engine turn-on and turn-off. This loop
design has been implemented in experimental GPS receivers
[11]. According to the analysis made in [13] this design is
almost optimal for tracking steps of 20g, in the sense that for
0
0.05
0.1
0.15
0.2
0.25
−20
0
20
40
60
80
100
120
140
Time [seconds]
Phase error [degrees]
 
 
Actual phase error
(within the correlations)
Average phase error
(as seen by the loop)
Fig. 2.
Phase error during a step of 20g. Loop transient response.
0.95
0.96
0.97
0.98
0.99
1
−2
−1
0
1
2
3
4
Time [seconds]
Phase error [degrees]
 
 
Actual phase error
(within the correlations)
Average phase error
(as seen by the loop)
Fig. 3.
Phase error during a step of 20g. Loop stationary state response.
a given C/N0 it approximately produces the smallest pull-out
probability. More details and properties of this loop can be
found in [10].
This loop is simulated at a higher sampling rate than

267
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
0
0.05
0.1
0.15
0.2
0.25
−5
0
5
10
15
20
25
30
Frequency Error [Hz]
Time [seconds]
 
 
Actual frequency error
(within the correlations)
Average frequency error
(as seen by the loop)
Fig. 4.
Frequency estimation error during a step of 20g. Loop transient
response.
0.95
0.96
0.97
0.98
0.99
1
−3
−2
−1
0
1
2
3
4
Frequency Error [Hz]
Time [seconds]
 
 
Actual frequency error
(within the correlations)
Average frequency error
(as seen by the loop)
Fig. 5.
Frequency estimation error during a step of 20g. Loop stationary
state response.
the loop iteration in order to quantify the quality of phase
measurements obtained from the tracking loops. If the loop
operates synchronously with the data bits, it cannot be syn-
chronous with the navigation process in general. Therefore,
the measurement instants can occur at any instant during a
correlation interval, not necessarily in the middle. The phase
measurement extrapolation made by the navigation process is
done based on the same information that the loop has about
the phase dynamic. Typically, if the measurement instant is
not the middle of the correlation interval, the loop frequency
estimate for this interval is used to linearly extrapolate this
value. The phase measurement obtained in this way, is the
same that the instant phase error inside the correlation interval
because the carrier local replica is generated with the same
logic. In order to quantify the effects of navigation measure-
ments extrapolation without increasing the simulation time
0.85
0.9
0.95
1
−7.2
−5.4
−3.6
−1.8
0
1.8
3.6
Phase error [degrees]
Time [seconds]
 
 
Actual phase error
(within the correlations)
Average phase error
(as seen by the loop)
Fig. 6.
Phase estimation error with C/N0 =48 dB/Hz.
excessively, a time step of 1ms was selected. This implies
a quantization of the measurement times to 5 possible values
within a correlation interval of T = 5ms. The phase estimate
used for each middle instant of this period is ˆφi = c(i−1),
and the frequency estimate for this whole 5 ms period is
ˆfi = b(i−1) + a(i−1)/2. This frequency estimate was chosen
because, as can be seen in the following simulations, it has
zero stationary error for acceleration steps.
As an example, consider the phase estimation error pro-
duced by the loop for an acceleration step of 20 g without
noise. The result is plotted in Figures 2 and 3 to appreciate
the estimation error inside the correlation interval. Clearly, the
phase error is not constant during each correlation period. In
fact, since the estimated carrier has constant frequency for
each period, the loop ﬁts the incoming phase with a piecewise
linear approximation. Hence, a residual quadratic ramp of
phase appears as an estimation error. Notice that the level
of error is lower if the relative location within the correlation
interval is close to the middle. Even when the digital loop has
zero stationary state response to acceleration steps, the error
in the middle of the correlation interval is not zero because the
loop works with the average phase error of each interval. The
same situation is found for the frequency estimation, plotted in
Figures 4 and 5. Here, the residual error is a linear ramp inside
each interval, and then average error equal to zero produce
zero error in the middle of the interval.
As long as pull-out or cycle slips do not occur, the loop
response is linear and the noise effects can be analyzed
separately. As an example, the loop response to noise only
with C/N0 = 48dB/Hz is plotted in Figure 6. In this case, the
resulting phase error seems to be lower if the relative location
within the correlation interval is close to the beginning. This
effect can be understood if we notice that in fact, the loop
calculates a carrier prediction for the following correlation
interval based on the available measurements. And as the
prediction time grows, so does the noise variance of this

268
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
−2
−1
0
1
2
0
1
2
3
4
5
Time relative to the correlatoin center [ms]
Phase Standard Deviation [degrees] 
 
 
Acc. step (20g)
Noise (C/No=48 dB/Hz)
Acc. step + Noise
Fig. 7.
Phase estimation error within the correlation interval.
prediction. Signal and noise results are summarized in Figure
7 where each contribution to the phase standard deviation is
plotted for the different relative location within the correlation
period. The signal parts correspond to the time average of a
1-second run like that shown in Figure 2. The noise variance
was estimated with an average of 10000 runs of 1 second
with only Gaussian noise of variance
1
2T C/N0 as input, and
discarding the ﬁrst third of the record to avoid the main part
of the loop transient. It is possible to verify that the standard
deviation for the loop output, i.e., at the middle point, is the
same as that obtained with the equivalent noise bandwidth of
the loop and the input noise variance. Indeed,
σ2
ˆφi =
1
2TC/N0
× 2BNT =
BN
C/N0
(5)
The expression gives σ ˆφi = 1.98o when C/N0 = 48dB/Hz, as
seen in ordinates of Figure 7. In summary, the phase estimation
quality changes depending on the time when the navigation
measurement is taken during the correlation interval. In the
presented example better estimates are obtained if the mea-
surements are taken at the middle, and this can only be done
if the loop is synchronous with the navigation process and
therefore it is bit-asynchronous. In a bit-synchronous loop,
when the measurement instant is taken next to the end of the
correlation interval the increase in noise standard deviation
is 3.1o/2o ≈ 1.55, i.e., 55%. This analysis clearly shows
that even for a GNSS receiver with scalar tracking loops,
the common correlation interval scheme can be considerably
beneﬁcial, if the effect of bit transitions can be properly
handled. This is the aim of the next section.
III. BIT ASYNCHRONOUS PHASE DISCRIMINATION
Assume the receiver is tracking a given satellite and it knows
when a data bit edge will occur during a correlation interval.
This requires that a bit synchronization stage has been com-
pleted previously. This is not a limitation since the required
signal strength for tracking at the high dynamics considered
in this work must be high enough to detect bit transitions. For
the same reason, multiple data-bits long correlation intervals
will not be considered. However, notice that the receiver will
not use bit transitions to synchronize the correlation intervals.
In our scheme, the receiver uses them to compute the code and
phase errors as described in the following and the correlation
intervals are dictated by the navigation task. Speciﬁcally,
assume for the i-th correlation interval of duration T the bit
edge will occur T1 seconds after the beginning and T2 seconds
before its end. Clearly, T1 + T2 = T. In that case, a coherent
correlation of T seconds will not be effective since the possible
change of phase will produce a signal cancelation. The worst
case when there is a bit reversal is T1 = T2 = T/2, where
a complete signal cancelation occurs. Therefore, the receiver
should compute two partial correlations, namely C1 and C2.
Then, for a given correlation interval the partial correlation
can be expressed as
C1
=
I1 + jQ1 = D1
r
T1
C
N0
ej∆φ1 + n1
(6)
C2
=
I2 + jQ2 = D2
r
T2
C
N0
ej∆φ2 + n2
(7)
where the subscripts i have been omitted to simplify the
notation. Notice that ∆φ2 = ∆φ1 + 2πfiT, if fi is the fre-
quency error, assumed constant during this whole correlation
interval, and n1 and n2 are independent zero-mean and unit-
variance complex gaussian noise. Based on these two partial
correlations, different phase discriminators can be computed.
In the following subsections we describe three of them. Their
comparison in terms of tracking threshold is left for the next
section.
A. Partial-Decision Directed (PDD) Discriminator
One possible approach to combine the phase information of
both partial correlations is to estimate the corresponding data-
bits based on the in-phase value. Then, this data-bit estimates,
ˆd1 and ˆd2, can be used to correct the bit transition and add
the partial correlations. Then, the phase of the resulting total
correlation will be the sought for phase error value. The
expression of this phase discriminator for the i-th correlation
interval is
eP DD
=
tan−1
Ã ˆd1Q1 + ˆd2Q2
ˆd1I1 + ˆd2I2
!
=
tan−1
µsgn(I1)Q1 + sgn(I2)Q2
|I1| + |I2|
¶
(8)
where the notation sgn(·) indicate the sign function. Of course,
the longer the correlation time, the better is the data-bit
estimate. But, if one correlation is long necessarily the other
will be short. However, it can be argued that when a short
correlation is added, even in error, its effect will not be so
harmful because the other partial correlation will dominate in
the sum.

269
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
B. Partial-Phase Weighted Average (PWA) Discriminator
Another possible discriminator can be obtained from the
phase errors of both partial correlations. This is the approach
used in [1]. The phase errors, obtained as in (3), corresponding
to C1 and C2 respectively are
e1
=
tan−1
µQ1
I1
¶
= [∆φ1 + nφ1]π
(9)
e2
=
tan−1
µQ2
I2
¶
= [∆φ2 + nφ2]π
(10)
where ∆φ1 = ∆θi + π∆fiT1 and ∆φ2 = ∆θi + 2π∆fiT1 +
π∆fiT2 according to the assumed linear evolution of the phase
error. Leaving aside for a moment the nonlinearity of the
tan−1(·) function, we can think that these two phase errors
are partial averages and therefore they should be averaged to
obtain the desired phase error for the i-th correlation interval.
The weighted average of them, adjusted to the duration of each
correlation, should be
eP W A
=
T1
T e1 + T2
T e2
≈
∆θi + π∆fiT + neq = ∆φi + neq
(11)
with neq equal to the weighted average of nφ1 and nφ2.
Under the Gaussian approximation for both noise terms, neq
has a Gaussian distribution with zero mean and variance
1/(2TC/N0). That is, the same variance as if the bit edge
was not present. Of course, if either T1 or T2 are not long
enough the approximation is not valid, and we still have to
deal with the nonlinearity of the tan−1(·) function.
The issue about the nonlinearity is caused by the ambiguity
of the phase, indicated by the function [·]π. If this operation
acts after the weighted average we would obtain a result equiv-
alent to (3) for the correlation interval with a bit transition.
However, in (11) the [·]π function actually is applied before
the average, and then the result is not correct. Fortunately, the
same idea used to build the UFA algorithm can be applied here
to test the result and correct it when needed. The hypothesis
is that the frequency error is kept under 1/(4T) in magnitude.
Hence, the signal part of a difference between the partial phase
errors in (9) must be bounded. Indeed, (9) can be written as
e1
=
tan−1
µQ1
I1
¶
= ∆φ1 + nφ1 + k1π
(12)
e2
=
tan−1
µQ2
I2
¶
= ∆φ2 + nφ2 + k2π
(13)
with k1, k2 ∈ Z. Then, different values of k1 and k2 will
produce a wrong result at the average (11). This situation has
to be detected, and a simple hypothesis test can be built. The
decision variable is
e1 −e2 = ∆θ1 −∆θ2 +nd +kdπ = π∆fiT +nd +kdπ (14)
where nd = nφ1 −nφ2 and kd = k1−k2. Since |∆fiT| < 1/4
and nd is a zero mean symmetrically distributed noise term,
the optimum decision for the kd value is ˆkd = Iπ(e1 − e2)/π.
Notice that the possible values for kd are only three: -1, 0
TABLE I
Standard deviation for different discrimination schemes.
Scheme
Noise (48dB/Hz )
Acc.(20g)
Acc. + Noise
KD
1.975
0.377
2.015
PDD
1.976
0.377
2.011
PWA
1.975
0.377
2.013
SIP
1.99
0.373
2.027
and 1. Then, if ˆkd = 0 no correction is needed and (11) can
be applied directly. If ˆkd ̸= 0, either e1 or e2 have to be
corrected. Which one is not important since the π ambiguity
of the ei value will be solved later by the UFA algorithm. For
simplicity, assume e2 is corrected when ˆkd ̸= 0. Then, the
ﬁnal expression for this phase error discriminator is
eP W A = T1
T e1 + T2
T {e2 + Iπ(e1 − e2)} .
(15)
C. Squared-Input Phase (SIP) Discriminator
The bit transition caused by a BPSK modulation can be
also avoided squaring the signal. This technique, usually called
Squaring Loops has been used traditionally in analog BPSK
synchronization schemes [14]. This idea was also used to
extend the correlation interval non-coherently beyond the data-
bit duration [15]. In our case, if the partial correlations are
squared, then they can be added without the adverse effect
of the data-bit. Clearly, the noise is also present and in low
signal-to-noise ratio conditions this causes a squaring loss.
The squaring operation also produces a duplication of the
correlation phase and therefore a correction factor should be
applied. The expression of this phase discriminator for the i-th
correlation interval is
eSIP
=
1
2∠
©
(I1 + jQ1)2 + (I2 + jQ2)2ª
=
1
2 tan−1
2
½ 2(I1Q1 + I2Q2)
I2
1 − Q2
1 + I2
2 − Q2
2
¾
(16)
where the subscript 2 indicates that actually a four-quadrant
inverse tangent should be used.
The three discrimination schemes were simulated in the
same conditions as the bit-synchronous loop. In this case,
only the phase error in the middle of the correlation interval
matters since under the common correlation interval archi-
tecture the receiver can choose this measurement instant and
no extrapolations are needed. The results after 10000 runs of
the loop with random data-bit transition location in each case
are summarized in the Table I. In each case, the statistical
signiﬁcance of the result was checked, i.e., the empirical
standard deviation of the estimated value was in the order of a
thousandth of the empirical mean. For comparison purposes a
loop with known data-bits (KD) was also included. This loop
uses the same discriminator as in the bit-synchronous case
because it can correct the partial correlations and add them
coherently.

270
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
1
2
3
4
5
0.3
0.32
0.34
0.36
0.38
0.4
0.42
0.44
0.46
Phase Standard Deviation [degrees] 
Data−bit transition time relative to the correlation begining [ms]
 
 
KD
PDD
PWA
SIP
Fig. 8.
Phase estimation error with different transition locations.
Except for the squaring scheme, the noise and signal re-
sponse are the same as in the loop with known data-bits, and
also in the data-bit synchronous loop. On the contrary, the last
scheme (SIP) has a little more output noise and, in average, a
little less noise in the signal estimation. However, this value
is highly dependent on the data-bit transition location. The
response to an acceleration step without noise is plotted in Fig.
8 for ﬁxed transition location inside the correlation interval.
While this value is almost constant for the other schemes, it
changes considerably for the squaring one.
From the computational cost point of view, the ﬁrst scheme
is the best. One inverse tangent is used as the case of the
usual phase discriminator. Only the sign corrections are needed
before the complex sum. In the second case, one more inverse
tangent calculation is needed each time a bit transition is
present, plus the weighted average. The logic needed for the
last π ambiguity correction can be neglected compared with
the cost of angle calculations and multiplications. And in
the last scheme, two complex square operations are required
instead of and additional inverse tangent. Which one is more
demanding will depend on the speciﬁc implementation of the
receiver processor unit.
Naturally, the ideas of the partial data-bit estimation, the
weighted average for combining partial discriminated errors,
or the squaring operation can be extended to be applied for
the case of code delay error estimation in the presence of a
bit transition. Signiﬁcant changes of the code delay are not
expected during a correlation interval, and in the case of high
dynamics the code loop is aided by the carrier loop and then
only the residual and low code dynamics is tracked. Thus, the
code delay error will not evolve signiﬁcantly during the two
partial correlations, and the signiﬁcant effect will be only to
reduce the noise to the same level obtained with a correlation
time T. In addition, the delay discriminators are not ambiguous
and then no further corrections are needed in the case of the
weighted average.
IV. TRACKING THRESHOLD ESTIMATION
In this section, the non-linear performance of the three
proposed bit-asynchronous schemes for different acceleration
and signal levels is determined by means of simulation. Main
consequences of this non-linear behavior are cycle slips and
pull-out events, i.e., to lose lock with the tracked signal.
If a cycle slip occurs, it will produce a loop transient that
could end with a pull-out event or not. This temporary loss
of phase lock can degrade the data bit demodulation, but as
long as the frequency error is low enough, useful navigation
measurements can be generated. Actually, since the expression
(1) was used for the calculation of 1ms correlations used in the
simulations, a frequency error also produces a signal power
reduction due to the sinc(·) function factor. Therefore, the
adopted criterion to declare a pull-out was that the frequency
error exceeds 1/T = 200 Hz. In this situation, the signal
power is completely attenuated and then it can be considered
as a practically irrecoverable state. An error of less than 200
Hz is a critical situation but it could still be recoverable. For
each value of acceleration and C/N0, 100,000 runs of 1 second
(200 samples) were computed. Each run has an acceleration
step of the selected value at the beginning.
Four UFA-PLLs were simulated for comparison. One op-
erates with known data-bits and it is equivalent to a data-
bit synchronous loop. The other three loops implement the
proposed schemes for carrier phase discrimination during a
bit transition according to (8), (15) and (16). Pull-out events
were detected using the previously mentioned criteria, and the
pull-out probability (POP) of each scheme was estimated as
the ratio between the number of runs with a pull-out event and
the number of total runs simulated. Since the POP is computed
for 1 second of tracking it can be also interpreted as the inverse
of the mean-time to lose lock (MTLL) in seconds. The results
are presented in Figs. 9, 10, 11, and 12, where POP level
curves have been plotted for values of 0.1, 0.2 and so on. The
tracking threshold of each scheme is deﬁned usually when the
POP reaches a level of 0.1. Then, the region of operation to
the right of the 0.1 curve in each scheme. The ﬁrst considered
scheme shows practically the same tracking threshold as the
loop with known data-bits in the low dynamic situation.
However, its performance has an important degradation when
the dynamics is increased. This effect can be explained by the
fact that during high dynamic situations, the received phase
changes appreciably during the correlation interval, and the
bit detection based on partial correlations is poor. The other
two proposed schemes exhibit only a small degradation in their
tracking thresholds with respect to the loop with known data.
Actually, comparing Figs. 10 and 11 with Fig. 9 it can be
clearly seen that the difference between them is always less
than 0.5 dB.
The pull-out probabilities estimated for the scenarios with-
out acceleration, and with acceleration steps of 20g, 40g, and
60g are plotted in Figs. 13, 14,
15, and
16, respectively.
These curves show in more detail that the scheme based
on partial bit detection has a better performance when there

271
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Acceleration [g]
C/N0 [dB/Hz]
 
 
30
31
32
33
34
35
36
0
10
20
30
40
50
60
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Loop with
KD scheme
Fig. 9.
POP of loop with known data and its tracking threshold.
 
 
C/N0 [dB/Hz]
Acceleration [g]
30
31
32
33
34
35
36
0
10
20
30
40
50
60
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Loop with
PDD scheme
Fig. 10.
POP of loop with PDD scheme and its tracking threshold.
is no acceleration and how this performance change in the
more demanding dynamic scenarios. It can also be seen
that the partial-phase weighted average scheme has a worse
performance in low and moderate dynamic scenarios than the
squared-input one, but the situation changes when very high
dynamics is considered. In particular, the weighted average
scheme has the best performance for the 60g acceleration
condition. Notice that in n Fig. 13 there are no results for
C/N0 = 36dB/Hz because the number of runs simulated do
not allow a dependable estimate of them.
V. CONCLUSIONS AND FUTURE WORK
The proposed GNSS receiver architecture is based on
bit-asynchronous tracking loops and is intended for high
performance real-time receivers. Under this architecture, the
tracking loop operation is synchronous with the navigation
measurement generation process, rather than with the data-
C/N0 [dB/Hz]
Acceleration [g]
 
 
30
31
32
33
34
35
36
0
10
20
30
40
50
60
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Loop with
PWA scheme
Fig. 11.
POP of loop with PWA scheme and its tracking threshold.
 
 
Acceleration [g]
C/N0 [dB/Hz]
30
31
32
33
34
35
36
0
10
20
30
40
50
60
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Loop with
SIP scheme
Fig. 12.
POP loop with SIP scheme and its tracking threshold.
bits as it is done traditionally. In this way, the measurement
instants of the tracked signals do not need to be extrapolated
to a common instant and therefore a signiﬁcant improvement
can be obtained. An example was shown where a phase noise
standard deviation increase of up to 55% can be avoided by
controlling the measurement instant. Three different carrier
discrimination schemes designed for GNSS receivers operating
with such a common correlation interval for all the tracked
satellite signals have been presented.
The effect of a possible bit-transition inside the correlation
interval is managed by the calculation of two partial corre-
lations. The proposed carrier discrimination schemes work
based on these partial correlations. The proposed schemes
were applied to a UFA-PLL designed for high dynamic GNSS
receivers. We found that the data-bit asynchronous operation
with either of the proposed schemes produces negligible
impact on tracking estimation phase noise for high signal-to-

272
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
30
31
32
33
34
35
36
10
−5
10
−4
10
−3
10
−2
10
−1
10
0
Pull−Out Probability
 
 
C/N0 [dB/Hz]
KD
PDD
PWA
SIP
Fig. 13.
POP of different schemes without acceleration.
30
31
32
33
34
35
36
10
−4
10
−3
10
−2
10
−1
10
0
 
 
Pull−Out Probability
C/N0 [dB/Hz]
KD
PDD
PWA
SIP
Fig. 14.
POP of different schemes at 20g of acceleration.
noise ratio conditions. Their non-linear performance, in low
signal-to-noise ratio conditions, was quantiﬁed through pull-
out probabilities estimation based on extensive Monte Carlo
simulations. It was found that each of the proposed schemes
is more appropriate for different dynamic levels. The scheme
based on partial-bit decision works better in low dynamic
conditions, the squared-input one is preferable for moderate
dynamics, while the partial-phase weighted average is better
for very high dynamic situations. The extension of these
schemes for code delay error estimation was brieﬂy discussed.
In terms of computational cost, there is some increase due
to the calculation of the partial correlations and ensuing error
discrimination. However, the operation of the different satellite
tracking loops with the same timing can reduce the processor
load depending on the adopted hardware/software architecture.
Nevertheless, this new GNSS receiver architecture main po-
tential is for the implementation of vector tracking loops in
30
31
32
33
34
35
36
10
−3
10
−2
10
−1
10
0
 
 
Pull−Out Probability
C/N0 [dB/Hz]
KD
PDD
PWA
SIC
Fig. 15.
POP loop of different schemes at 40g of acceleration.
30
31
32
33
34
35
36
10
−1
10
0
Pull−Out Probability
C/N0 [dB/Hz]
 
 
KD
PDD
PWA
SIP
Fig. 16.
POP loop of different schemes at 60g of acceleration.
real time, since it will allow operating with a simultaneous
vector of measurements from the received satellite signals
obtained from correlations computed at a common time. In this
case, a correlation stage capable of computing the two partial
results for the same receiver estimates when the possible
transition location is fed as an extra parameter could be very
beneﬁcial for a real-time implementation. An implementation
of such a correlator architecture in an FPGA has already
been implemented and reported in [16]. The authors are now
working on the vector tracking loop formulation in real-time
with this philosophy.
VI. ACKNOWLEDGMENT
This work was funded by ANPCyT PICT 00535 and UNLP
11-I-127 and CIC-PBA.

273
International Journal on Advances in Telecommunications, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/telecommunications/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
REFERENCES
[1] P. A. Roncagliolo, J. Garc´ıa, and C. H. Muravchik, “Data-Bits Asyn-
chronous Tracking Loop Scheme for High Performance Real-Time
GNSS Receivers,” in Proceedings of The Fourth International Confer-
ence on Advances in Satellite and Space Communications, SPACOMM
2012, Chamonix, Mont Blanc, France, April 2012, pp. 108 – 113.
[2] B. W. Parkinson and J. J. Spilker (eds.), Global Positioning System: The-
ory and Applications.
Washington: American Institute of Aeronautics
and Astronautics (AIAA), 1996.
[3] E. D. Kaplan, Understanding GPS: Principles and Applications.
Boston: Artech House, 1996.
[4] van Diggelen, F., “Indoor GPS theory & implementation,” in Proceed-
ings of The Position Location and Navigation Symposium (PLANS), 2002
IEEE/ION, Palm Springs, CA , USA, August 2002, pp. 240 – 247.
[5] M. Lashley, D. M. Bevly, and J. Y. Hung, “A valid comparison of vector
and scalar tracking loops,” in Proceedings of The Position Location and
Navigation Symposium (PLANS), 2010 IEEE/ION, Indian Wells, CA,
USA, May 2010, pp. 464 – 474.
[6] M. Lashley, D. M. Bevly, and J. Y. Hung, “Performance analysis of
vector tracking algorithms for weak gps signals in high dynamics,” IEEE
Journal of Selected Topics in Signal Processing, vol. 3, no. 4, pp. 661
– 673, August 2009.
[7] S. Zhao and D. Akos, “An Open Source GPS/GNSS Vector Tracking
Loop - Implementation, Filter Tuning, and Results,” in Proceedings of
the 2011 International Technical Meeting of The Institute of Navigation,
ION ITM 2011, San Diego, CA, USA, January 2011, pp. 1293 – 1305.
[8] W. L. Edwards, M. Lashley, and D. M. Bevly, “FPGA Implementation
of a Vector Tracking GPS Receiver using Model-Based Tools,” in
Proceedings of the 22nd International Technical Meeting of The Satellite
Division of the Institute of Navigation,ION GNSS 2009, Savannah, GA,
USA, September 2009, pp. 273 – 280.
[9] T. Lin, J. T. Curran, C. O´Driscoll, and G. Lachapelle, “Implementation
of a Navigation Domain GNSS Signal Tracking Loop,” in Proceedings
of the 24th International Technical Meeting of The Satellite Division of
the Institute of Navigation, ION GNSS 2011, Portland, Oregon, USA,
September 2011, pp. 3644 – 3652.
[10] P. A. Roncagliolo, J. G. Garc´ıa, and C. H. Muravchik, “Optimized
Carrier Tracking Loop Design for Real-Time High-Dynamics GNSS
Receivers,” International Journal of Navigation and Observation, vol.
2012, p. 18.
[11] P. A. Roncagliolo and J. G. Garc´ıa, “High Dynamics and False Lock
Resistant GNSS Carrier Tracking Loops,” in Proc. of The 20th Int. Tech-
nical Meeting of The Satellite Division of The Institute of Navigation,
ION GNSS 2007, Fort Worth, Texas, September 2007, pp. 2364 – 2375.
[12] P. A. Roncagliolo, J. G. Garc´ıa, and C. H. Muravchik, “Pull-out
Probability and Tracking Threshold Analysis for High Dynamics GNSS
Carrier Loops,” in Proceedings of The 21st International Technical
Meeting of The Satellite Division of The Institute of Navigation, ION
GNSS 2008, Fort Worth, Texas, USA, September 2008, pp. 221 – 228.
[13] P. A. Roncagliolo, J. G. Garc´ıa, and C.H. Muravchik, “Pull-out Probabil-
ity Considerations in High Dynamics GNSS Tracking Loops Design,” in
Proceedings of The 10th International Symposium on Spread Spectrum
Techniques and Applications, ISSSTA 2008, Bologna, Italy, August 2008,
pp. 53 – 57.
[14] J. G. Proakis, Digital Communications, 3rd Edition.
New Jersey:
McGraw Hill, 1995.
[15] D. Borio and G. Lachapelle, “A non-coherent architecture for GNSS
digital tracking loops,” Annals of Telecommunications, vol. 64, no. 9,
2009.
[16] J. G. Diaz, J. G. Garcia, and P. A. Roncagliolo, “An FPGA imple-
mentation of a data-bit asynchronous GPS/GLONASS correlator,” in
Micro-Nanoelectronics, Technology and Applications (EAMTA), 2012
Argentine School of, aug. 2012, pp. 27 –33.

