Supporting Active and Healthy Aging -
An Assistive Process Improvement Approach
Gerhard Chroust
Johannes Kepler University Linz
Email: gerhard.chroust@jku.at
Georg Aumayr
Johanniter Oesterreich Ausbildung und Forschung gemeinnuetzige GmbH
Email: georg.aumayr@johanniter.at
Abstract—Active and Healthy Aging (AHA) is one of the growing
concerns and aims of a sustainable society and of the European
Union. In many business and industrial enterprises, the adoption
of a process view and the analysis of the processes to be performed
has brought about numerous advantages, ranging from clarity
and understandability to increased efﬁciency due to assessment
and measurements of quality and capability. In this paper, we
apply the process view concepts to the processes needed for
Assisted Healthy Aging. The necessary activities are described
on an abstract level (i.e., as activity types) and organized in a
Process Model. Individual processes are derived (instantiated)
from the AHA-model to be enacted by the aging persons, the
Seniors, utilizing the human and technical support structure. We
discuss the application of the concept of process view in the AHA-
environment, especially pointing out the difference from classical
business/industrial processes. A discussion about the possibilities
to assess the quality of AHA-processes and their support by a
Model Interpreter closes the paper.
Keywords–Seniors; Process View; Process management; Matu-
rity; Capability; Assessment
I.
INTRODUCTION
Active and Healthy Aging (AHA) is one of the growing
concerns and aims of a sustainable society and the central
theme of the EU Project My-AHA [1]. Supporting Active and
Healthy Aging is an ethical, an economic and ﬁnally also an or-
ganizational issue, especially due to the demographic changes
in the Western World. Most Seniors will become involved in
active and/or passive roles in activities related to AHA, if they
like it or not. Usually, support is needed to compensate for lack
of Seniors’ sufﬁcient capability to perform simple or complex
necessary processes on one’s own. This deﬁcit in capability has
to be overcome by a human support environment (consisting
of persons from many different disciplines: family, doctors,
nurses, service personal, helpers, etc.) and the technological
support system (consisting of gadgets, tools, computers, robots,
etc.). Automation will be a key factor in providing an effective
and also economic support.
Based on the advantages and the success of the process
view in industry (”Industry 4.0”), i.e., an increased autonomous
intercommunication behavior of multiple machines, we suggest
adopting a process view of supporting AHA. This will be a
good basis for including technological means and tools. We
believe that applying a process management approach can
help to improve the quality, efﬁciency and understandability
of AHA-projects. We will use the terminology and concepts
of system development processes (e.g., ISO/IEC (International
Organization for Standardization / International Electrotech-
nical Commission) 12207 [2] and ISO/IEC 15288 [3]) for
describing the AHA-support processes, their interfaces and the
necessary requirements. Quality assessment will be based on
the ISO/IEC 33000 family of standards [4].
In this adoption process, we have to be aware that an obvious
key difference is that the ’objects’ of software processes are
innate artefacts and not living beings, human Seniors. This will
impose strong implications and limits with respect to aspects
of humanity, morality, ethics, and risks.
The paper will be structured as follows: In Section II,
we will describe the basic concepts and terminology of a
process view, i.e., the structure of processes with activities
and tasks and their interrelations and the Process Models.
While this discussion is applicable essentially to all processes
we will speciﬁcally discuss the requirements, challenges, and
differences introduced by considerations of AHA, especially in
comparison with ’pure’ technical processes in Section III. In
Section IV, we will again be inspired by software engineering
with respect to discussing means to measure, control and even
improve the quality of AHA-processes. At last, Section V
will be devoted to the technological support to enact, assess,
control, and measure the maturity of the AHA-processes
leading to concepts for an AHA-Process Interpreter.
Statements and observations speciﬁc to AHA will be empha-
sized by printing them in italic and preceding them by ”AHA:”.
II.
THE PROCESS VIEW
A. Activities and Tasks
The process view decomposes a complex undertaking
into a set of processes, activities and tasks, which inter-
act and exchange information and work products (”inputs”
and ”outputs”). The Software Engineering Standard ISO/IEC
12207:2017 [2] deﬁnes:
•
process : set of interrelated or interacting activities that
transforms inputs into outputs
•
task : a requirement, recommendation, or permissible
action, intended to contribute to the achievement of one
25
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

or more outcomes of a process. (In the management
literature a task is often considered an uninterruptible
unit of doing to be performed in one go.)
•
activity : a set of cohesive tasks of a process. Despite
the fact that the above distinctions are important for the
structuring of Process Models, we will in most cases
simply speak of ’activities’, encompassing also tasks and
sometimes also processes.
The division of an activity into different tasks (the gran-
ularity) will depend on the nature of a task and also on
the capability/knowledge of the performing person [5][6]. A
Process Model designer must strike a good balance between
too coarse a granularity (leaving to much open and some users
helpless) and too ﬁne a granularity (boring some users with
unnecessary and/or’ obvious’ details of tasks).
AHA: This issue will receive special attention in this paper
(see Section III). Activities can be assigned to be performed
by the Senior himself/herself, by various helpers from different
professions and machines (computers) of diverse capability
and diversity. One consequence is that the same support
activity task has to be divided differently depending on the
capability of the individual Senior.
B. What is a Process Model?
A Process Model deﬁnes and documents the activities,
their contents, their meaning, and their interaction (input and
output) with other activities. For Software Engineering, the key
documents are ISO/IEC 12207 [2] and ISO/IEC 15288 [3].
The Process Model abstracts from idiosyncrasies of a single
process and describes the process ’in general’, independent of
the enacting person or the object of the activity. It describes
in an abstracted form all necessary activities (e.g., ’evaluate
health status’ or ’perform operation’) and their logical de-
pendencies (e.g., ’measure blood pressure’ before ’perform
operation’) and the necessary work products (e.g., ’blood
pressure values’, ’description of previous treatments’) to be
produced and used by these activities. When modelling a
process, all semantically equivalent activities are abstracted
into one ”activity type” [7], e.g., measuring blood pressure in
the morning, the afternoon and the next day are abstracted
to one activity type ’measure blood pressure’ (Figure 1).
Similarly, the work products are abstracted into ”work product
types”, e.g., to a work product type ”blood pressure”.
The logical dependencies between activities are also ex-
pressed on the ’type’-level and have to be applied for the
individual activities (instances). This leaves still considerable
freedom to ”navigate”, i.e., to choose the next task [9],
see Figure 2. A Process Model contains in abstracted form
the experiences of many preceding processes combined with
theoretical considerations and desirable improvements. By up-
dating the Process Model, newer experiences and best practices
can also be added to it. Different methods and strategies
will distinguish themselves, both in the activities and work
products, but especially in the sequence the various activities
are to be performed in.
Figure 1. Process Abstraction and Instantiation [8].
Figure 2. Instances of activity-types and work-product-types for AHA.
Figure 3 shows the extended meta-model of a software
Process Model, also showing additional components: tools,
roles, input/output relations, and structural information [9].
C. Advantages of the Process View
Key advantages of a formal Process Model are [9][10] :
•
from implicit to explicit deﬁnition : A formally described
Process Model can be recorded, standardized, transmit-
ted to others, stored and taught, thus converting implicit
knowledge into explicit knowledge [11].
•
Storing Best Practices : It also acts as a repository for
new best practices, thus preserving experience, but also
allows audits and recording of inadequacies. One can
also identify essential or usefully subprocess ex-post [6].
•
Standardization : It provides standardization across dif-
ferent persons, projects and applications. This is of spe-
cial value for the cooperation of heterogeneous teams.
•
Quality assessment : The process can ex-post be evalu-
ated, improved [12], its capability and maturity assessed
(e.g., by the ISO/IEC 33000 family [4]. For details see
Section IV.
•
Audits, Tracing and Recording of Resources : Com-
puter support allows the automatic recording of enacted
activities and accounting of used resource (personnel,
volunteers, operational material, etc.)
•
Computer Support : A formally described Process Model
can be supported by a Process Interpreter, see Section
V.
26
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

Figure 3. A Process meta-model.
Figure 4. Interfaces for AHA.
D. Enacting a Process Model
When performing a project (or actually any activity based on
the Process Model (Figure 3) ) the model has to be ’enacted’.
An appropriate ’Interpreter’ of the Process Model (Figure 4),
be it a human or a computer programs has numerous different
activities to perform.
•
Instantiation and administration of activity types : In-
stances of activity types must be created, shown to the
user, worked on by the user, and their status remembered
(planned, started, ﬁnished, under rework, etc.). Access to
the needed inputs must be provided, outputs identiﬁed.
AHA: In many cases a Senior has to initiate and/or
perform speciﬁc activities. The Process Interpreter can
ask the Senior to do so. It is difﬁcult to check whether
the actions have been performed, see Section III-B.
•
Instantiation and administration of work products : All
work products (documents or pointers to external arte-
facts) must be created (are ’replicated’), i.e., instantiated
as often as necessary (Figure 2)), administered and
related to the appropriate activities.
•
Navigation : The enactment of an activity (an instance)
must honour restrictions and dependencies within and
between all other activities (e.g., sequence constraints
between activities, common start or end of activities,
exclusion of parallelism between them, etc.).
The sequence in which activities are to be performed
(the ’navigation information’) is partially deﬁned in the
Process Model. The Model (as a construct on the ’type’
level) leaves considerable freedom.
AHA: For example, a Process Model for a Senior might
contain two activity types ”put on socks” and ”put on
shoes” (see Figure 2). Actually, each of these two activity
types identiﬁes two activities (one for the right and one
for the left foot) and thus would result in 8 different
activity sequences.
•
Pre-emption and Resumption : Sometimes processes
have to be urgently interrupted in order to assign re-
sources to other activities, typically for emergencies.
AHA: An unexpected heavy bleeding has to be handled
immediately, probably pre-empting another activity. Af-
ter the emergency has been taken care of it is often
difﬁcult to decide how to handle the interrupted activity
(start anew, continue at point of interrupt, abandon the
rest of the activity). In all cases the Process Model
Interpreter has to be informed and the necessary status
set.
III.
SYSTEM DEVELOPMENT AND SUPPORTING AHA
In this section, we will expand on the use of the Process
View in AHA and use the experience and know-how from
Software Engineering. See also a similar comparison between
Software Engineering and Disaster-Management in [13].
A. AHA as a Collection of Processes
The processes performed in AHA are in many aspects
similar to systems engineering. A Senior himself/herself is a
very complex system. The processes, which try to improve
his/her status and/or situation must - as consequence - also
be very complex, as the Law of Requisite Variety postulates
[14]. Support for Seniors by humans and machines (including
computers) must enact a large variety of support processes.
Health care processes diverge in their properties in sev-
eral ways from the classical systems engineering processes.
The reason lies in the different focus of these two types
of processes: the ’objects’ of AHA are living humans with
their will, personality and idiosyncrasies while the objects
of systems engineering processes are usually inert software
objects. Humans are ﬂexible, variable, sometime irrational, and
provided with a free will, with moods and variations. This
has to be considered when discussing the various components
of the AHA-process. We restrict ourselves to My-AHA, i.e.,
supporting individuals in living through their aging process in
an acceptable and healthy status.
All activities must be designed with strong consideration of
human factors with respect to all involved persons [15][16].
This includes observation of cultural differences between eth-
nic groups [15] with respect to contents, form and differences
as far as believing in and interpretation of warnings and
instructions and the willingness to obey them [17].
27
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

B. Challenges in AHA
Considerable differences exist between the situation in a
system engineering situation as compared to a AHA-situation
(see also [13]) . Many of them challenge our creativity.
•
Completion Control : In a ’regular’ system development
project guided by a Process Model each task or activity
has at least one outcome in tangible form (a piece of
document, ﬁnished intermediate product etc.), which is
expected (and needed) by a successive task. In most
cases a different person will be in charge of the succes-
sive task and therefore will ’ask for’ the result - quality
might be lacking, but a document is expected.
AHA: In most cases this is not true. Most ’outputs’
of an AHA-process are triggers for another activity
or acknowledgements (’take medicine XYZ’ , ’morning
gymnastics done’, ...). In the Process Model only surro-
gates for these ’outputs’ are created. Whether the Senior
has cleaned his/her teeth, or drank enough liquid is very
difﬁcult to control. The simple solution that the Senior
has to acknowledge the completion of the task is of little
use since a Senior can (and often will) easily fake the
acknowledgement.
Two approaches are promising:
Internet of Things: Utilizing the concept of the Internet
of Things one can equip essential gadgets (e.g., the tooth
brush or the jug) with active sensors and thus recognize
the completion of an activity (at least to a certain extent).
However, experience also tells us, that many Seniors
dislike this type of control and will be very creative in
circumventing and faking completion (e.g., watering the
ﬂowers instead of drinking, etc.)
Gamiﬁcation: A more promising approach seems to
be the concept of Gamiﬁcation [18]: the recognized
successful completion of an activity will produce of
visible ’achievement mark’ on a prominently visible
display. Psychologically this is more promising, but can
only be used in certain environments.
•
Misplacing and Searching : In a Software Engineering
Environment the Process Interpreter stores, administrates
and makes available the work product.
AHA: Seniors are generally plagued by misplacing
things and having problems ﬁnding them later. To a
certain extent an Internet of Things approach could
help, one would need to equip all important object with
sensors. In this case the system could indicate where to
ﬁnd the necessary objects or documents
•
Forgetfulness : Depending on the speciﬁcs of the chosen
Project Interpreter, users will be reminded of pending
activities and deadlines
AHA: Seniors tend to become forgetful. A Process Inter-
preter can bridge and alleviate much of this forgetfulness
by registering activities and dates to remind the Senior.
•
Time variability : While mechanical systems show a
reasonable predictability and stability this is not true
especially of Seniors.
AHA: This means that one cannot make reliable assump-
tions about the physical or mental status of a Senior. It
can change any time. Therefor the AHA-processes must
be carefully double checking the situation etc.
•
Lack of full knowledge of the history : In Software
Engineering lots of the information is not provided
explicitly but hidden in the code and documentation (as
far as trustworthy).
AHA: Similarly historical data documented about a
Senior is full of hidden facts, omissions, mistakes, mis-
understanding and unknowns - often due to privacy
considerations. Treatment has to take this into account,
especially if certain activities are performed by comput-
ers.
•
Pre-emption of activities : One often has to interrupt an
activity in favour of performing another one.
AHA: A well-ordered enactment of a Process Model is
often not possible. Activities have to be started suddenly
due to an emergency (e.g., ”severe coughs”). Other
activities have to be interrupted and later taken up at
the point of interrupt, or repeated.
•
Pressure of Time and Success : The production of
software seems to be notoriously under performance
pressure.
AHA: For Seniors the time very often ’runs away’.
Hazards appear suddenly and have to be taken care
of immediately. Life-saving activities often have a very
narrow time window to be successful.
•
Stress and psychological pressure : Helpers are often
under stress due to the responsibility in view of unclear
situations [19][20].
AHA: This problem often is more pronounced due to the
close relations between Seniors and personnel.
•
Systemic problems : Health problems are usually the
result of several interacting causes.
AHA: Illnesses and hazards often have highly interre-
lated causes and reciprocal inﬂuences, often showing
new symptoms (emergence [21]) like allergic reactions
against some medicine. Domino-effects of existing ill-
nesses, side effects of medication need to be considered
•
Cultural ”blockages” and taboos : When treating Seniors,
social taboos and conventions have to be kept in mind
(no blood transfusion for Jehovah’s Witnesses, no male
personal for Muslim women, etc.).
AHA: Seniors often have their own mind, long estab-
lished peculiarities and often no understanding for the
necessities of treatment. They also often object to being
’led’ by a ’machine’ despite the lack the capability to
manage themselves.
IV.
CAPABILITY ASSESSMENT OF THE AHA-PROCESSES
One of the key advantages of deﬁning and following a
Process Model is the possibility to assess the capability of the
performing organization: to what extent can the organization
provide the services and products intended to be provided
based on a standardized and accepted Process Model (cf. [4])?
In the 1980s, the Software Process Program was founded at
the Software Engineering Institute (SEI) at Carnegie Mellon
28
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

Figure 5. Levels of Process Capability (ISO/IEC 33000 [4]).
University under the leadership of Watts Humphrey. This
program resulted in the development of the Capability Ma-
turity Model [22][23][24]. A prerequisite is a comprehensive,
generally agreed-upon Process Model containing all the key
processes needed for software engineering. [2] identiﬁes some
40 individual processes. These processes are rather compre-
hensive with many individual tasks. Each process is evaluated
to what extent it is performed by the organization (N..not per-
formed, P..partially performed, L..largely performed, F..fully
performed). This yields a proﬁle as shown in Figure 6. This
proﬁle can be compared to other Process Models, to an
industry average and also compared with the proﬁle needed
for the speciﬁc project.
AHA: A Senior who is able to walk alone, does not need
certain processes irrespective of their performance level.
In order to characterise a complete enterprise (be it a
software house or - in our case - a senior home) its over-
all maturity is of high relevance for future planning and can
be measured. Figure 5 is the basis for assessing an enterprise.
In software engineering the levels (see Figure 5 ) run from
incomplete (where the process is mostly unsuccessful) up
to ’improving’ (where the process is continually adapted to
new needs and challenges). In a nutshell the maturity of
an enterprise to produce good software can be assessed and
measured using a two dimensional graph (capability versus
individual relevant processes), see Figure 6. The Assessment
can also be used for the improvement of the processes [10][12].
AHA: One needs a comprehensive, agreed-upon Project
Model and historical records of what has worked in the
past. Then one can identify deﬁciencies in the Process Model,
compatibilities and differences of various processes (since not
all Seniors need all processes), and identify the improvement
potential.
V.
A PROCESS INTERPRETER
Computer support is the key for efﬁciency and effectiveness
of the AHA-processes. It has to show two different faces:
Figure 6. Comparing different proﬁles.
One is directed to the Senior, the aging person. It has to be
empathic, helpful and tries to explain/show the situation in a
way a Senior can understand. The other one is technological
and effective and provides a stable, effective infrastructure for
the other interface.
A. User Interface
The system helps the user to enact the processes he/she is
supposed or intended to perform. It also allows the user enter
processes of his/her own (things to do, things not to forget and
be reminded, deadlines...) Considering the challenges listed in
Section III-B a Process Interpreter for AHA-purposes must
fulﬁl several somewhat contradicting properties:
•
strict : Certain activities must be performed exactly
as prescribed, often even within a very narrow time
window.
•
tolerant/ﬂexible : Some activities may be performed not
at all or very loosely, depending on the speciﬁc situation,
especially in view of the varying psychical and mental
situation of a Senior.
•
robust : The system must be robust against disturbances
of various kinds (be it changes in the well-being of the
Senior, computer failures, cultural differences, sudden
unexpected changes in the behavior or the situation, ...)
•
agile : Handling of Seniors must be highly ﬂexible
(especially due to inﬂexibilities, which come with old
age.)
•
user-friendly : The interfaces must be easy to understand
and show ”good behavior with the sensitivity of an
intuitive, courteous butler” [25]. They should take into
account the personal and cultural differences as deﬁned
in [26]
•
unobtrusive and non-stigmatic : The Senior must feel
conﬁdent, that his/her use of the assisting system is ac-
cepted by his/her peers and neighbours without negative
feelings.
B. The Role of Tools, Machines and Robots
In many ways, robots can even replace humans. For this to
happen, it is necessary to have a clear, unambiguous and formal
29
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

description of the processes to be performed (the Process
Model), plus a characteristic of machine environments. Thus
it is possible to allocate processes to persons or machine,
whatever is the better choice, also for the Senior. Robots can
relieve helpers from chores, which do not really require human
understanding and human empathy versus the Seniors. A
Process Interpreter (Figure 3) is an ideal tool and infrastructure
to automatically include the access to tools into the AHA-
processes.
VI.
CONCLUSION AND FUTURE WORK
Adopting a process view for supporting Assisted Healthy
Aging (AHA), like in other business and industrial areas,
promises an improvement in clarity, understanding, and efﬁ-
ciency: The necessary processes are deﬁned and documented in
a Process Model, which is the basis for automatically guiding
the execution of the individual processes by a so-called Process
Interpreter. It helps all stakeholders, Seniors, human support
personnel to follow the processes and use technical support.
This approach also allows a better control of the execution
of these processes and assess the quality and capability of
the deﬁned processes. Implementing such a scenario requires
a deep understanding of the behavior, the limitations and
idiosyncrasies of Seniors.
Obviously, the work described here is only a beginning.
More work has to be done to understand the requirements
of Seniors with different social, cultural and economic back-
ground. This strongly affects the ’look and feel’ of interfaces,
especially with respect to ease of use and empathy. We hope
that our contribution will trigger further research and useful
result for Assisted Healthy Aging of Seniors.
ACKNOWLEDGMENT
This the research behind this paper was supported by the
EU Horizon-2020 project No 689592 My-AHA: all /stadarMy
Active and Healthy Aging, 2016-2019.
REFERENCES
[1]
Univ.
Torino(ed.),
“My-aha
-
my
active
and
healthy
ageing,”
http://www.activeageing.unito.it/home, [retrieved: May, 2017], 2016.
[2]
ISO/IEC, “ISO/IEC cd 12207.4 Systems and Software engineering -
Software life cycle processes,” Internat. Org. for Standarization, ISO,
Tech. Rep., 2016.
[3]
——, “ISO/IEC 15288:2006: Systems Engineering - System Life Cycle
Processes,” Internat. Org. for Standarization, ISO/IEC JTC 1/SC 7/WG
7 (Jan 2006), Tech. Rep., 2006.
[4]
——, “ISO/IEC 33001:2015 : Information technology – process as-
sessment – concepts and terminology,” International Organisation for
Standarization, Tech. Rep., 2015.
[5]
F. Milani, M. Dumas, R. Matulevicius, N. Ahmed, and S. Kasela,
“Criteria and heuristics for business process model decomposition,” Bus
Inf Syst Eng, vol. 58 (2016), no. 1, 2016, pp. 1–17.
[6]
W. van der Alst and S. Dustdar, “Process mining put into context,”
IEEE Internet Computing, March 2012, pp. 82–87.
[7]
G. Chroust and G. Aumayr, “Process models for disaster management -
standardization and assessment,” in EMCSR 2014 - book of Abstracts,
W. Hofkirchner and S. Blachfellner, Eds.
BCSSS 2014, p. 5.
[8]
G. Chroust, N. Sturm, M. Roth, and P. Ziehesberger, “Regional disasters
and systemic reactions,” in ISSS 2011 and ISKSS 2011: All Together
Now: Working across Disciplines, J. Wilby, Ed.
(CDROM) Int.
Systems Science Society, UK, 2011, p. 15 (paper no 1631).
[9]
G. Chroust, “Software process models: Structure and challenges,” in
Feng, Y. and Notkin, D. and Gaudel, M.C.(ed.): Software: Theory
and Practice - Proceedings, IFIP Congress 2000, Aug. 2000, Beijing.
Kluwer, 2000, pp. 279–286.
[10]
SPIRE Project Team, The SPIRE Handbook - Better, Faster, Cheaper
- Software Development in Small Organisations.
Centre of Software
Engineering Ltd, Dublin 9, Ireland, 1998.
[11]
I. Nonaka and H. Takeuchi, The Knowledge Creating Company. Oxford
University Press, New York 1995.
[12]
W. van der Alst, M. La Rosa, and F. M. Santoro, “Business process
management - don’t forget to improve the process!” Bus Inf Syst Eng,
vol 58 (2016), no. 1, 2016, pp. 1–6.
[13]
G. Chroust, G. Aumayr, G. Haider, R. Randus, and A. Th¨ur, “Prozess-
management im Katastropheneinsatz: agil, strikt, tolerant und robust?
(Process management in disaster management: agile, strict, tolerant
and robust?),” in Projektmanagement und Vorgehensmodelle 2016 -
Arbeiten in hybriden Projekten: Das Sowohl-als-auch von Stabilit¨at
und Dynamik, M. Engstler, M. Fazal-Baqaie, E. Hanser, O. Linssen,
M. Mikusz, and A. Volland, Eds.
Lecture Notes in Informatics (LNI),
vol P-263, Gesellschaft f¨ur Informatik, Bonn 2016, pp. 93–107.
[14]
W. Ashby, “Requisite variety and its implications for the con-
trol of complex systems,” Cybernetica 1:2, p. 83-99. (available at
http://pcp.vub.ac.be/Books/AshbyReqVar.pdf) [retrieved: May 2017],
1958, pp. 83–99.
[15]
D. McEntire, Disaster Response and Recovery: Strategies and Tactics
for Resilience.
Wiley, USA 2007.
[16]
ISO, “ISO 22320:2011, Societal security – emergency management
– requirements for incident response,” International Organization for
Standardization, 2011, Tech. Rep., 2011.
[17]
K. Haddow and G. Haddow, Disaster Communications in a Changing
Media World.
Butterworth-Heinemann Homeland Security, kindle-
book, 2008.
[18]
S. Deterding, D. D., R. Khaled, and L. Nacke, “From game design
elements to gamefulness: deﬁning gamiﬁcation,” in Proceedings of the
15th International Academic MindTrek Conference: Envisioning Future
Media Environments.
ACM 2011, pp. 9–15.
[19]
D. Duckworth, “Psychological problems arising from disaster work,”
Stress Medicine vol. 2 (1986), no. 4, 1986, pp. 315–323.
[20]
Bundesamt
f.
Bev¨olkerungsschutz
und
Katastrophenhilfe,
Psychosoziales Krisenmanagement in CBRN-Lagen / Psychosocial
Crisis
Management
in
CBRN
Incidents.
Bundesamt
f.
Bev¨olkerungsschutz und Katastrophenhilfe, Germany 2011.
[21]
G. Chroust, “Feature interaction and emergent properties,” in Fea-
ture Interactions: The Next Generation (Dagstuhl Seminar 14281),
S. Sven Apel, J. M. Atlee, L. Baresi, and P. Zave, Eds.
Dagstuhl
Reports, vol. 4 (2014), no. 7, Schloss Dagstuhl–Leibniz-Zentrum fuer
Informatik, 2014, pp. 15–16.
[22]
W. Humphrey, Managing the Software Process.
Addison-Wesley
Reading Mass. 1989.
[23]
——, “A discipline for software engineering,” SEI Series in SW
Engineering, Addison Wesley, 1995.
[24]
H. van Loon, Process Assessment and ISO/IEC 15504.
Springer, New
Aork 2004.
[25]
C. Miller, Ed., Human-Computer Etiquette: Managing Expectations
with Intentional Agents.
Comm. ACM vol. 47 (2004), No. 4, 2004.
[26]
G. Hofstede, G. J. Hofstede, and M. Minkov, Cultures and Organizations
- Software of the Mind, 3rd edition.
McGraw-Hill, NY 2010.
30
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-565-4
SMART 2017 : The Sixth International Conference on Smart Cities, Systems, Devices and Technologies

