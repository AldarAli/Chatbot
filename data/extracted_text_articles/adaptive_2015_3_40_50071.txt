Multi-Agent Model for Leader Identiﬁcation in Platoon System
Baudouin Dafﬂon
DISP-LAB
Université Lumière Lyon 2, Lyon, France
Email: baudouin.dafﬂon@univ-lyon2.fr
Franck Gechter
IRTES-SET
UTBM, Belfort, France
Email: franck.gechter@utbm.fr
Abstract—In the past decades, the research on autonomous
vehicles and transportation systems has performed a great
breakthrough. Among the emergent new transportation modes,
the development of platoon control solutions seems to be very
promising in terms of environmental impact and trafﬁc jam
aspects. The two main approaches generally encountered in
literature deal with either a global point of view or a local
one. In the local approaches, the follower vehicle perceives its
environment, identiﬁes a leader and applies a function to calculate
a command. This paper deals with the identiﬁcation task for a
local platoon control system. This identiﬁcation task is made using
the reactive multi-agent paradigm. In the proposed system, the
identiﬁcation task can be deﬁned as a selection of one pattern
from a set following several criteria. These patterns are emergent
structures made of agents which aggregate on speciﬁc areas
of their environment depending on their perception and their
interactions. The agent environment is built using data collected
by sensors. The sensors raw data are processed so as to be
integrated into agent environment. The association between one
physical sensor and a suitable processing algorithm is called an
abstract sensor. The paper presents in detail the proposal and its
applications in simulated and real environments.
Keywords–multi-agent; platoon system; leader identiﬁcation
I.
INTRODUCTION
In the past decades, the research on autonomous vehicles
and transportation systems has achieved a great breakthrough
with a widespread use of powerful embedded systems which
includes multiple sensors and top level computational re-
sources. In parallel with the extension of the autonomous
abilities of individual vehicles, new transportation systems
emerged. Among them, one can cite the development of
platoon control solution aimed at helping the driver in his
task while bringing some interesting properties in terms of
environmental impact and trafﬁc jam aspects.
A platoon can then be deﬁned as a set of vehicles, evolving
together without material link while keeping a given geometric
conﬁguration. In literature, two families of approaches are
widely developed, they are classiﬁed according to a global
or local reference frame. Global approaches propose to lo-
cate vehicles in a common reference frame shared by all
the vehicles of the convoy. This requires precise localisation
algorithms and efﬁcient communication exchanges between
vehicles. By contrast, local approaches are more reactive and
they focus on local perception abilities. In these approaches,
each vehicle perceives its environment, identiﬁes a leader and
applies a function to calculate a command. Thus, the local
approaches rely mainly on an identiﬁcation function aimed at
ﬁnding the right vehicle to follow. Several solutions can be
used to perform this identiﬁcation task. For instance, one can
cite the use of speciﬁc visual beacons [1], the use of Fuzzy
logic algorithms [2] or the use of arithmetic solutions [3].
The main drawback of these solutions is a low robustness
to interference or to sensor perturbations and the lack of
adaptation ability so as to make them able to face with changes
in scene conﬁguration. To overcome these limitations, we
propose, in this paper, a solution based on the reactive multi-
agent paradigm. This solution uses the adaptive skills and
the self-organization properties of multi-agent systems so as
to provide robustness and adaptability to the identiﬁcation
system.
In recent years, multi-agent systems have been widely
used to solve dynamic problems such as dynamical obstacles
avoidance [4], localization and tracking, robot coordination etc.
It has been also demonstrated that reactive multi-agent system
approaches are efﬁcient for tackling complex problems such
as autonomous parking control [5], cooperation of situated
agents/robots [6], data fusion and problem/game-solving [7].
The goal of this paper is to present an approach for
a vehicle identiﬁcation problem in a platoon context. The
proposed approach is based on the application of reactive
multi-agent systems. The identiﬁcation problem can be deﬁned
to be the activity of selecting pertinent elements from a set of
data using considerations on their shape, structure, dynamic,
etc. Applied to vehicle identiﬁcation in local platoon context,
the identiﬁcation is aimed at selecting, among all the objects
detected in the vehicle perception range, one vehicle that can
be considered as a leader for the platoon task. Thus, the
result of an identiﬁcation is a set of objects containing the
leader and obstacles. In our multi-agent approach, this set is
deﬁned by the observation and the study of the components
and the properties of the multi-agent system. The agents we
developed are immaterial and evolve in an virtual environment
which is an abstraction of vehicle perception range. Agent-to-
agent and agent-to-environment interactions are proposed to
produce an agent dissemination into the virtual environment
the spatial conﬁguration of which is led by the data furnished
by vehicle sensors. This emergent structure, which represents
the global system state, is analysed by indicators which allow
to differentiate a potential leader from obstacles and other
vehicles.
The paper is structured as follows : Section II draws a
state of the art of the platoon issue through a description
of the past and current international projects on the subject.
Section III describes the multi-agent model used. Section
IV exposes simulations and experimentations of identiﬁcation
74
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

model associated to the platoon function and Section V draws
a conclusion of this work and provides clues for future research
works.
II.
BACKGROUND
The vehicle detection for the local platoon issue has been
widely developed through a huge number of international
projects. The ﬁrst project (PATH 1992-2003) that deals with
the platoon control was based on the use of radar sensors
[8], which enable the detection system to measure with high
accuracy the leader position. The drawback of this solution was
that the following vehicle detects also obstacles and cannot
separate them from the leader. Then, the DEMO 2000 project
proposes a system for the detection of obstacles in order to
recognize and localize obstacles [9]. Effective on a straight
road, the performance of this system is limited with curved
trajectories and in an open environment. The CHAUFFEUR
project [10] used an on-board image processing system to
determine the relative position of the preceding vehicle. This
system depends on the detection of the infrared light (IR)
emitters attached to the back of the preceding vehicle. This
solution is efﬁcient while dealing with homogeneous platoons.
In the case of trucks and regular cars being together in the same
platoon, the size of IR emitters becomes a problem (some of
them are too large for being attached to a small car). Moreover,
the use of such artiﬁcial beacons increases the cost of the
solution and the reliability of the systems depends strongly on
the light conditions. As opposed to this, the KONVOI project
[11] developed a driver assistance system (ADAS) which
controls the longitudinal and lateral adjustment. This system is
based on laser range ﬁnder and radar sensors. However, both
devices are not usable in unstructured environments, because
they are based on the retrieval of infrastructure information,
such as lane markings or Geographical Information Systems
as references for the longitudinal and lateral control.
III.
MULTI-AGENT MODEL FOR IDENTIFICATION
A. Global overview
As previously explained, the proposed approach is based
on the application of reactive multi-agent system [12] [13]. A
virtual environment is built up using processed data collected
by the embedded sensors of the follower vehicle. The asso-
ciation of one physical sensor and of a suitable processing
algorithm is named abstract sensor. Agents are then spread
in this environment. Depending on their perception and their
interactions, agents aggregate on speciﬁc areas of their en-
vironment. This aggregation phenomenon leads to emergent
structures made of agents which are considered as patterns.
The task of identiﬁcation can then be deﬁned as a selection of
one pattern from a set following several criteria.
The process can then be summarized by the following main
steps (Figure 1):
1)
Data are collected by abstract sensors.
2)
Data are projected in 2D-space which corresponds
to the environment of the agents ; this space is an
abstraction of the state space of the problem.
3)
A population of agents interacts with the projected
data in this space using a set of interaction inspired by
physics. The result of these interactions are structures
or patterns which emerge into the environment.
4)
A static and dynamic study allows then to identify
the leader vehicle and the obstacles present in the
vehicle’s neighbourhood.
Figure 1. Global overview
B. multi-agent model
This section is aimed at giving a detailed description
of the proposed Reactive Multi-Agent System (RMAS). The
proposed approach puts the environment in the center of the
problem-solving process. The environment corresponds to the
place where the problem and its constraints are speciﬁed and
presented to the perception of the agents. Then, interactions
are deﬁned in order to take into account the dynamics of
the problem and its representation in the environment. These
elements lead to emergent structures which are then analysed
so as to extract the best solution to the problem. In the
context of leader vehicle identiﬁcation, the emergent structure
is interpreted as a pattern with a speciﬁc geometrical shape
and a particular behaviour.
1) Environment: As explained before, agents environment
is the corner stone of the approach. It links vehicle’s world
and the identiﬁcation mechanism. It is composed of entities
associated to objects perceived by abstract sensors. An abstract
sensor unit is composed of a sensor (software or hardware)
and function of pre-processing. Objects are projected into
environment as point or cloud of points.
2) Agents: The role of agents is to cover the environment,
to locate and to track projected data. Two operations are
considered:
•
Grouping agents on the pertinent information.
•
Interpreting the features of emergent structures.
In order to do this, two populations of agents are created, label
agents and delegate agents.
The aim of label agents is to cluster, to follow and to isolate
data of the virtual environment. Label agents have an internal
state deﬁned by one Label and one constraint.
•
The label, denoted Li
t for an agent Ai at t time,
determines, for agent Ai, the membership to one group
of agents according to spatial proximity. The value
of the label is a natural number and is deﬁned as
follows:s
Li
t+1(υ) =









0
if ϵt = ∅
Rand(0,255)
if αt = ∅ ∧ ϵt ̸= ∅
min(Li
t, Lj
t)
if ∀j ∈ αt
(Li
t ̸= Lj
t ∧ Li
t ̸= 0)
(1)
75
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

where
◦
ϵt is a set of information
◦
αt is a set of agents
•
The constraint is a numerical value which represents
the spatial organization of agents in the group. Consid-
ering an agent Ai, and its neighbourhood composed by
the nearest two agents Aj and Ak, having the same
label, the angle described by ⃗ij and ⃗ik deﬁnes the
constraint. The higher the angle value is, the lower is
the stress. This allows to deﬁne a pattern proﬁle that
can be used to identify the emergent structures.
The aim of delegate agents, is to detect and to locate
groups of label agents having the same label value. Their
internal state is deﬁned by one satisfaction value and one vector
named normal vector.
•
The satisfaction is achieved when the delegate agent
is near a group of label agents. The satisfaction value
is progressive. Before reaching a threshold which
locks its state, the delegate agent must satisfy con-
straints such as proximity, moving and loyalty to
the group of label agents. A delegate agent who
oscillates between two labels cannot be considered to
be satisﬁed.
The satisfaction value Si
t+1 increases in time, and can
be calculated for an agent Ai at time t by:
Si
t+1 = 1
|λ|
X
j∈λ
(1 − ||⃗rt⃗jt||
π
) + Si
t
(2)
where
λ
=
label of the group
⃗rt
=
position of the delegate agent
⃗jt
=
position of a label agent Aj
•
The normal vector can be deﬁned as a unit vector,
collinear to the average motion vector of the agents
pattern. It is computed when the delegate agent has
reached a satisfaction threshold. The normal vector,
noted ⃗N i is deﬁned as the mean of normal vectors of
all the label agents composing the pattern using the
following equation:
⃗N i = 1
|λ|
X
j∈λ
⃗
jdir
(3)
The combination of the values of the internal states allows
to cluster and to identify groups of agents.
3) Interactions: So as to reach their goals (relevant patterns
of data), agents are evolving in their environment according to
their perceptions and their interactions. The moves of agents
are computed according to interactions inspired by classical
physics. Label agents can thus be compared to particles in a
force ﬁeld inﬂuenced by their neighbourhood. Two types of
interactions are used:
•
Agent-agent interaction : agents are repulsing each
other according to their nature (i.e. label agent repulses
other label agents and delegate agent repulses other
delegate agents). This ensures a homogeneous disper-
sion in the environment. The repulsion is computed
following a classical gravitational Newton law in 1/r2.
The force is given by :
⃗
Frij = αmimj
⃗
AiAj
∥
⃗
AiAj∥3
(4)
where
◦
mi is the mass of agent i.
◦
Ai is the position of agent i.
◦
αis a coefﬁcient taking into account the state
of the agent (if it is locked or not for a label
agent, if it is satisﬁed or not for a delegate
agent) and the gravitational constant of the
environment which is set empirically.
•
label agent-delegate agent: an attraction force is
applied between agent and environment’s items. Thus,
label agents are attracted by the data which corre-
sponds to the presence of perceived objects. Moreover,
delegate agents are attracted by label agents by using
the same kind of force. The mathematical formulation
of the attraction force is given by :
⃗
Faic = βgmimc
⃗
AiC
∥ ⃗
AiC∥3
(5)
where
◦
mi is the mass of agent i.
◦
Ai is the position of agent i.
◦
mc is mass of the center of attraction.
◦
C is position of the center of attraction.
◦
βg is a coefﬁcient taking into account the
state of agents and environment properties.
Interactions are applied following Newton’s law of motion.
The system calculates at each time step, the position, the
velocity and the acceleration of each agent. The acceleration
is calculated as follows:





P −→
Fi = m.−→
γi
−→
γi = 1
m. P −→
Fi
−→
γi = 1
m.(−→
Fa + −→
Fr)
(6)
Forces can be generalised :−→
Fa et −→
Fr to all elements present
in the perception ﬁeld of agent Ai :







FrX
i = P
i̸=j

mi.mj
(xj−xi)
((yj−yi)2+(xj−xi)2)
3
2

FrY
i = P
i̸=j

mi.mj
(yj−yi)
((yj−yi)2+(xj−xi)2)
3
2

(7)
and

FaX
i = α.mi.mc.(xi − xc)
FaY
i = α.mi.mc.(yi − yc)
(8)
76
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

For agent Ai :
n
⃗Xi(t) = ⃗Xi(t − 1) +

⃗Vi(t − 1)δt + (δt)2
2m
−→
Fri + −→
Fai

(9)
where
•
⃗Xi(t) is the agent position.
•
⃗Vi(t) is the agent velocity
On a computer implementation point of view, the agents
behaviours are ruled by a scheduler. This scheduler calls, at
each time step, a function aimed at computing the forces to be
applied and the future acceleration, speed and position of each
agent. The result of this scheduler behaviour is a movement
of all agents in the environment involving emergent structures
which can then be studied by an external software module
detailed in next paragraph.
C. Observation and identiﬁcation
The external software module is able to retrieve, at any
moment, the position and speed of the agents. The emergent
structures, that appear in the environment, are patterns
sharing the same label and the same delegate. To achieve the
identiﬁcation of objects, the constraint values of each label
agent is used. These values are collected by the delegate
agent of the group and form a vector which represents the
proﬁle of the detected object. This vector can be compared
to a application dependant database previously deﬁned. The
database contains a set of proﬁles deﬁned by an expert
and takes into account the characteristics of the problem.
In the context of platoon system, the useful information
is classiﬁed into three types: leader, vehicle and obstacle.
Among the detected vehicles, one of them must be chosen to
be the leader. To do this, a multi-criteria comparison between
delegate agents characteristics is performed. The criteria taken
into account are: the life time of the delegate agent in the
environment, the distance between the delegate agent and
the follower vehicle which needs to determine its leader,
the angle between the delegate and the follower vehicle, the
relative speed of the delegate in the environment and the
fact that the delegate already represents the current local leader.
These criteria are expressed in the form of a radar chart
(Figure 2) and the selection is made by comparison of the
obtained surfaces. The delegate agent who has the largest
surface area is considered to be the local leader, other delegate
agents are considered as obstacles.
IV.
SIMULATIONS AND EXPERIMENTATIONS
In this section, we present both results obtained in simu-
lation and experimentation with real vehicles. So as to better
compare both, the same protocol, scenarios, and metrics have
been used.
A. Protocols
The testing protocol follows a classical workﬂow: data
acquisition in a track involving all desired scenario, ofﬂine
processing of data to produce classiﬁcation, comparison be-
tween automatic classiﬁcation and human classiﬁcation.
Figure 2. Delegate agents representation
1) Scenario: The scenario deﬁnition is one of the most
important key points in simulations and experimentation. Tests
have been made in the Technome site of Belfort. Technome
site is an industrial/commercial activity area where pedestri-
ans, parked and moving car, urban furniture can be found.
Moreover, we have to the opportunity to use a 3D and geo-
localised model of this area, that allows to proceed tests with
the same scenario in simulation and in experimentation. The
path selected for testing consists of several straight lines, a
roundabout and various curves. It is surrounded by buildings
and frequently crossed by pedestrians and cars. This path is
repeated several times in order to obtain a sufﬁcient amount
of data.
2) Metrics: The metrics corresponds to the way the results
are evaluated. Several metrics can be chosen such as the
F-measure for example. In this case, we have chosen to
concentrate on the application ﬁeld. The metrics used are thus
the classiﬁcation rate between 2 or 3 classes (building, car,
urban furniture, etc. ), the false positive rate, the frequency
and the duration of mistakes.
3) Tools:
•
VIVUS Simulator:
to assess the quality of our
approach, realistic simulations have been done using
VIVUS simulator [14], a vehicle simulator developed
by the IRTES-SET laboratory. VIVUS is based on
PhysX for real physical behaviour, and Unity3D for
good 3D performance. This software can simulates
the behaviours of each vehicle on several levels such
as perceptions with laser range ﬁnder or cameras,
physical reaction between elements (wheels, car’s
parts, etc.), etc. Physical reactions are computed using
the same physical laws as in the real world (collision,
gravity, etc.) and taking into account the properties
of the environment (friction with road, materials of
ground and walls, weather conditions, etc.). VIVUS
has already been used to test various intelligent
vehicle algorithms such as linear platoon control [13],
obstacle avoidance and driving assistance [12], and
intelligent crossroads simulations in [15].
•
SeT-Car platform : the Systems and Transportation
laboratory has got some electrical cars equipped for
perception and autonomous navigation. The vehicle
77
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

used for these experimentations is equipped with
various sensor such as a Real Time Kinematic GPS
(differential GPS), video cameras, gyroscope, laser
range ﬁnder, etc. In these simulations, only the laser
range ﬁnder has been used. Its characteristics are
the following: 180 degrees of aperture, 80 meters of
range and 1 degree of resolution.
•
Janus is a multi-agent platform that was speciﬁ-
cally designed to deal with the implementation and
deployment of holonic and multi-agent systems. It
is based on an organizational approach and its key
focus is that it supports the implementation of the
concepts of role and organization as ﬁrst-class entities.
This consideration has a signiﬁcant impact on agent
implementation and allows an agent to easily and
dynamically change its behaviour.
B. Simulation results
The goal of these simulations is the validation of our
system by studying the quality of the classiﬁcation.
Two scenarios are simulated :
•
Trajectory in a sparse environment: The sparse en-
vironment is composed of a small number of objects.
It consists only of buildings. It highlights the system’s
ability to detect buildings at different speeds.
•
The trajectory in a dense environment: The dense
environment is composed of a large number of objects.
It consists of buildings, different models of parked
vehicles and of moving vehicles. It represents a classi-
cal dynamic urban environment. The objective of the
simulation is to assess the system’s ability to detect a
large number of different objects, moving or not.
Simulated vehicles have laser range ﬁnder sensors and are con-
ducted by an operator. Simulations are running out hundreds
of times in order to have a signiﬁcant amount of data for a
reliable statistical study.
1) sparse
environment
results:
Figure
3
shows
the
classiﬁcation of objects in time. Two classes are represented:
building and another. One can observe that the system
regularly detects a large number of objects in the environment
(t = 37s or t = 360s ). These detections are due to
disturbances
corresponding
to
measurement
errors
(soil,
sidewalks, etc.).
Figure 3. The evolution of the number of objects and their classiﬁcation
These simulations show that in 12% of cases, a building
is not detected by the system. 16% of the objects classiﬁed
as buildings are false positives due to pitching of laser range
ﬁnder during acceleration and braking.
2) dense environment results: Figure 4 shows the evolution
of the number and type of objects detected during the simu-
lation. We can see that increasing the number of objects does
not cause a system overload. The list of identiﬁed objects is
produced in less than 25 milliseconds. Note that the rate of
not classiﬁed object’s decreases compared to the simulation in
a sparse environment. Indeed, because of the noise reduction
ratio / useful information, the noise is less isolated and causes
less disruption.
Figure 4. Distribution of classiﬁcation
About misclassifﬁcation, buildings are easier to detect than
vehicles. In 82% of cases, a building is properly identiﬁed
against 78% for vehicles. Similarly, the presence of the vehicle
causes more false positives. This ﬁgure also shows that in
these simulations, 12% of the vehicles were not detected by
the system.
C. Experimentation results
Experimental results are based on the use of IRTES-
SET vehicles. We conducted several acquisitions campaigns to
obtain sufﬁcient data to study the behaviour of our approach in
real situations. For these experiments, we make an acquisition
campaign in Belfort city. The vehicle is driven by an operator
throughout the circulation. The environment on the trajectory
is composed of parked and moving vehicles, buildings and
street furniture, such as sheltered bus stops.
The results discussed in this section correspond to the
study of classiﬁcations made by our approach. Two classes of
interest are deﬁned : vehicles and buildings. The other detected
objects are classiﬁed as "other" category and are considered
as obstacles.
Figure 5 shows the evolution of the number of detected
objects and their allocation over the time. We observe that the
system limit is around 15 objects. Over this number, objects
become too small in relation to the sensor resolution. This
limit is due to the resolution proposed by the sensor. Finer
resolution would detect more objects. We can also see that the
system is able to quickly adapt to its environment. The number
of detected objects can vary between appraisals. The largest
identiﬁed variation is +/- 9 items in 0.25 seconds.
In terms of misclassiﬁcation, buildings were detected in
78% of cases and that vehicles were detected in 72% of cases.
The "other" category is the biggest generator of false positives.
Among the non-detected objects, buildings and vehicles are
below 11%. Street furniture that is often confused with the
noise is difﬁcult to identify. 72% of the objects belonging to
this class are not identiﬁed.
78
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

Figure 5. Classiﬁcation of objects
We sought to quantify the duration of classiﬁcation errors.
These errors are either undetected objects, either false posi-
tives. Figure 6 shows that the error term is averaged higher for
buildings than for vehicles. In almost 90% of cases, a vehicle
is not detected between 0.25 and 0.5 seconds. Moreover, the
distribution of misclassiﬁcation of buildings is between 0.25
seconds and 1 second.
Figure 6. misclassiﬁcation
We note that the real life results are worse than the
simulation results, mainly due to the difference between the
real and the simulated sensors. However, the simulation does
not take into account the pure delays and the margins of error
in the control actuators.
V.
CONCLUSIONS
The paper presents a reactive agent approach for leader
detection in platoon system through a generic and self-adaptive
decision process. In this model, the environment is the central
key element of agents system. It is the link between real world
and the identiﬁcation system. Agents population properties are
observed to allow to choose and determine leader position in
vehicle’s perception and to separate it from other elements.
This solution has been successfully tested in simulation
and in experimentation. The results obtained are encouraging
to add and test the multi-sensor and plug and play ability of
the system.
In order to continue this research, we are now working
on a generic and self-adaptive approach for an agent based
platoon control system.
ACKNOWLEDGMENT
This work was done with the support of the French ANR
(National Research Agency) through the ANR-VTT SafePla-
toon project (ANR-10-VPTT-011).
REFERENCES
[1]
H. Huang, W. Jiang, W. Wang, Y. Cao, T. Zuo, and M. Li, “Simulation
experiment of acquisition and tracking with beacon between the spatial
movement platforms,” Intelligent Control and Automation, 2008, pp.
7089–7093.
[2]
R. Gibson, D. Hall, and J. Stover, “An autonomous fuzzy logic archi-
tecture for multisensor data fusion,” Multisensor Fusion and Integration
for Intelligent Systems, 1994, pp. 143–150.
[3]
L. Guo, M. Zhang, Y. Wang, and G. Liu, “Environmental perception of
mobile robot,” Information Acquisition, 2006, pp. 348–352.
[4]
B. Dafﬂon and F. Gechter, “Making decision with reactive multi-
agent systems: A possible alternative to regular decision processes for
platoon control issue,” in Mexican International Conference on Artiﬁcial
Intelligence, Nov. 2014.
[5]
B. Dafﬂon, J. Contet, F. Gechter, and P. Gruer, “Toward a reactive
agent based parking assistance system,” The 24rd IEEE International
Conference on Tools with Artiﬁcial Intelligence ICTAI, IEEE Computer
Society, 2012.
[6]
J.-P. Georgé, M. P. Gleises, F. J. Garijo, V. Noël, and J.-P. Arcangeli,
“Self-adaptive coordination for robot teams accomplishing critical ac-
tivities,” PAAMS, 2010, pp. 145–150.
[7]
G. DiMarzo-Serugendo, A. Karageorgos, O. Rana, and F. Zambonelli,
“Engineering self-organising systems: Nature-inspired approaches to
software engineering,” Lecture notes in Atiﬁcial intelligence, vol. vol.
2977, 2004, p. 299.
[8]
S. Shladover, “Ahs research at the california path program and future
ahs research needs,” Vehicular Electronics and Safety, 2008, pp. 4–5.
[9]
S. Kato, S. Tsugawa, K. Tokuda, T. Matsui, and H. Fujii, “Vehicle
control algorithms for cooperative driving with automated vehicles
and intervehicle communications,” Intelligent Transportation Systems,
vol. 3, 2002, pp. 155–161.
[10]
H. Fritz, “Longitudinal and lateral control of heavy duty trucks for
automated vehicle following in mixed trafﬁc: experimental results from
the chauffeur project,” Control Applications, vol. 2, 1999, pp. 1348–
1352.
[11]
R. Kunze, R. Ramakers, K. Henning, and S. Jeschke, “Organization
and operation of electronically coupled truck platoons on german
motorways,” Springer Berlin / Heidelberg, 2009, pp. 135–146.
[12]
B. Dafﬂon, F. Gechter, P. Gruer, and A. Koukam, “Vehicle platoon and
obstacle avoidance: a reactive agent approach,” IET Intelligent Transport
Systems, 2013, pp. 257–264.
[13]
M. El-Zaher, F. Gechter, P. Gruer, and M. Hajjar, “A new linear
platoon model based on reactive multi-agent systems,” The 23rd IEEE
International Conference on Tools with Artiﬁcial Intelligence ICTAI,
IEEE Computer Society, 2011.
[14]
F. Gechter, J.-M. Contet, O. Lamotte, S. Galland, and A. Koukam,
“Virtual intelligent vehicle urban simulator: Application to vehicle pla-
toon evaluation,” Simulation Modelling Practice and Theory (SIMPAT),
2012, pp. 103–114.
[15]
B. Daffon, F. Gechter, J. Contet, A. Abbas-Turki, and P. Gruer, “In-
telligent crossroads for vehicle platoons reconﬁguration,” International
Conference on Adaptive and Intelligent Systems, 2011.
79
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-391-9
ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications

