Application of Scenario-driven Role Engineering to the MinaBASE Process
Knowledge Database
Daniel Kimmig∗, Andreas Schmidt†∗, Klaus Bittner∗, and Markus Dickerhof∗
∗Institute for Applied Computer Science
Karlsruhe Institute of Technology
Karlsruhe, Germany
E-mail: {daniel.kimmig, andreas.schmidt, klaus.bittner, markus.dickerhof}@kit.edu
†Department of Informatics and Business Information Systems,
University of Applied Sciences, Karlsruhe
Karlsruhe, Germany
E-mail: andreas.schmidt@hs-karlsruhe.de
Abstract—Collaborative systems, which are often used in
short-term virtual enterprises or long-term cooperation net-
works, often contain informations about the manufacturing
and fabrication competences of the technology partners which
should only be made available to a very restricted group
of persons for example to support feasibility studies in the
context of actual customer requests. This is a new important
feature to be supported in nowadays knowledge management
systems. Hence, the goal of this paper is so to present a
methodology for implementing an access system that supports
the deﬁnition of ﬁne granular access rights for cooperative
process knowledge management systems, that could protect
such sensible information. In this paper we present an adaption
of the scenario-driven role engineering method to the special
needs in a collaborative process knowledge management system
with ﬁne granular access requirements. Beside the adaption
of the scenario-driven role engineering method to such a
system, the adapted method will be concretely applied to the
process knowledge management system MinaBASE, which was
developed in our institute. To complete, an implementation will
be shown with the help of the inversion of control framework
“Spring Security”. Here static aspects as well as dynamic
aspects of security will be presented. The paper shows in
a detailed manner the usability of the scenario-driven role
engineering method for applications in the ﬁeld of collaborative
knowledge management.
Keywords-Data conﬁdentiality and integrity; knowledge man-
agement; RBAC;
I. INTRODUCTION
Both corporate groups as well as small and medium-sized
enterprises (SME) are experiencing increasing competition
and shorter product lifecycles. The resulting necessity of
shortening the product development process also has to be
mastered by enterprises in the ﬁeld of microsystems tech-
nologies (MST) that are characterized by a high interdisci-
plinarity and complex, multi-stage, and hardly standardized
fabrication processes. Frequently, every product is produced
by an individually tailored fabrication process [1]. While
larger MST enterprises still manage a wide spectrum of
technologies, SME rather tend to offer solutions in a high
specialized area. To offer more complex solutions, they
establish technical partnerships with other SME. These may
have the form of short-term virtual enterprises or long-term
cooperation networks. To support such organization forms in
the ﬁeld of MST, the MinaBASE process knowledge database
was developed by the Institute for Applied Computer Sci-
ence of Karlsruhe Institute of Technology. By means of this
database, the manufacturing and fabrication competences
of the technology partners are made available to a central
coordinator who then assesses technical and economic fea-
sibility. This information, however, includes internal know-
how, the conﬁdentiality, secrecy, and integrity which is of
crucial importance to the company’s existence. Acceptance
of MinaBASE therefore does not only depend on whether it
meets functional requirements, but also on aspects like safety
and access protection. To prevent an undesired disclosure
of company secrets of a technology partner, access shall
be controlled by the established role-based access control
(RBAC) [2]. Here, authorizations are not assigned directly
to subjects, i.e., the users of a system, but to abstract roles
to which the users are assigned afterwards. In this way, the
frequently error-prone maintenance expenditure is reduced
and safety is increased. However, this requires the deﬁnition
of an adequate role concept. Information systems often use
standard models with system-wide administrators, owners of
information objects, and guests having restricted read access.
It is not considered in which business processes the system
is used and which particular requirements result in terms of
conﬁdentiality and data integrity. For MinaBASE, it should
be possible to provide a partner with insight in the product-
related properties of a microsystem during the sales process,
but not to disclose the conﬁguration of machine parameters
to produce these properties. Such an application exceeds the
modeling capacities of the standard role concept described,
as external partners are not the owners of this information.
This results in a high expenditure to maintain the ﬁnely
detailed authorizations. This problem will be solved by
125
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

a role concept individually adapted to MinaBASE . This
role concept is based on a systematic approach, scenario-
driven role engineering. The main contribution of the paper
is twofold: First, the adaption of the scenario-driven role
engineering method will be adapted to the requirements of
collaborative knowledge management systems. And second,
the suitability of existing access frameworks to implement
the adapted method will be shown by means of the IoC-
framework spring security.
The paper will be structured as follows: In the next
section, the MinaBASE process knowledge database will
be presented. Then, the scenario-driven role engineering
approach [3] and the adaptations to the background and
objective of MinaBASE will be outlined. Afterwards, the
model will be applied and a role concept for RBAC ensuring
data integrity and conﬁdentiality for MinaBASE will be
derived. The ﬁnal section describes the implementation of
this role concept within an IoC-Framework by demonstrating
how Spring Security and technolgies such as AOP can be
used to fulﬁll static and dynamic security requirements.
II. MinaBASE PROCESS KNOWLEDGE DATABASE
The knowledge required to produce values added is no
public property, but a company resource that has to be
administrated efﬁciently in order to ensure economic suc-
cess. To support this process, knowledge management sys-
tems have been established [4]. In process-oriented knowl-
edge management [5], these methods are applied to highly
knowledge-intensive fabrication processes, as those used
in MST. The MinaBASE process knowledge database was
developed within the framework of the MicroWebFab joint
project funded by the BMBF [5]. It was used by the
technology partners for the structured storage of technical
fabrication parameters of the methods and materials used
in MST and of the partner-speciﬁc technical competences.
In MinaBASE , the smallest information entity is the so-
called technical aspect (TA). It is used to model materials,
machines, and fabrication technologies [6]. By means of
generalization hierarchies, TAs are arranged in taxonomies.
The number and contents of taxonomy trees can be speciﬁed
and modiﬁed during runtime, such that a ﬂexible structure
meeting MST requirements can be deﬁned for the storage
of fabrication know-how. TAs may be assigned properties
referred to as technical parameters (TP). A TP is a string of
characters, integers, or ﬂoating-point numbers in a certain
unit and references an attribute, e.g., the density. The TP
of a TA are inherited by lower partial hierarchies of the
hierarchy tree in analogy to the object-oriented approach.
Hence, no error-prone multiple input is required. In addition,
lower hierarchy levels can further reﬁne the inherited TP by
specifying general value ranges. Typing of the TP places
them in a certain context, such that a TP refers to a product
or its fabrication and, hence, is either product-speciﬁc or
fabrication-speciﬁc. Product-speciﬁc TP describe the proper-
injection
pressure
refractive
index
surface
roughness
Procedure
Injection
molding
Geometry
Rib
 Material
 
Polystyrene
 Machine
 
Arburg 
Allrounder
edge
quality
pressure
tolerance
Legend
TA - Technical Aspect
TP - Technical Parameter
Competence-speciﬁc TP
Figure 1.
Schematic representation of a MinaBASE competence [8]
ties of a microsystem, such as the depth of a groove reached
by the fabrication process of milling. Fabrication-speciﬁc
TP refer to the machine conﬁguration needed to produce a
speciﬁc product property. For modeling the capabilities of
a technology partner, competences [7] are considered to be
a set of various TA from disjunct hierarchy trees, which is
illustrated in Figure 1. This ﬁgure schematically represents
the competence “injection molding of a rib with polystyrene
using the Arburg Allrounder machine” together with some
TP. From the hierarchy trees of process, machine, material,
and geometry element, the TAs are selected. These TAs are
characterized by own TP, such as the injection pressure of
the injection molding process. The combination of these TAs
results in the competence that is reﬂected by other TP, such
as the edge quality and surface roughness. Consequently,
a competence is a type of view of a certain combination
of TAs with properties in the form of TP that apply to
this combination only, i.e., that characterize the competence
in more detail. TAs can be used in several competences.
They represent reusable, encapsulated, smallest information
entities. An extension of the MinaBASE concept has been
developed in order to reuse these information entities to
allow process modeling of manufacturing sequences based
on semantic technologies [8].
III. SCENARIO-DRIVEN ROLE ENGINEERING
The term of role engineering (RE) in the context of RBAC
means the design and speciﬁcation of roles, authorizations,
secondary conditions, and restrictions as well as of a hi-
erarchic role model [9]. RE is used to create a concrete
model for RBAC-based access control. In [3], Scenario-
driven role engineering (SDRE) is deﬁned as an approach
based on scenarios, such as sequences of actions and events
from the user’s perspectives. This sequence in a scenario
can be subdivided into subscenarios and steps. Scenarios are
embedded in a task, i.e., a problem or a work area, which
links the scenarios of a system with its users. The users
mostly apply a system to fulﬁll a task of their work proﬁle
or their job description. This structurization into various
levels serves to break down a job description of a user
into atomic steps, each of which may be associated with
an authorization to access a resource. For various types
126
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

!"#$%&'(&#)*+,-"#.+'(+
/01+,2"3(#""+)$'&#""#"
4$355.'6(+*-"7"+3(*'+
"&#(-$3'"+-(.+-*'83&+"*#)"
93(7+6'$7+)$':5#"+63*;+
*-"7"+;-<3(=+/3(->?0@
$#5#<-(&#
4#$3<-A'(+'B+)#$83""3'("
$#C23$#.+B'$+"*#)"
4#:(3A'(+'B+-+)$#5383(-$D+
$'5#+&'(&#)*
E#-""#""8#(*+'B+
)$#5383(-$D+$'5#+&'(&#)*
F3(-5+$'5#+&'(&#)*+-"
E>?G+8'.#5
All parts of
MinaBASE
covered?
Y
Extension of 
MinaBASE
features
H
I
J
K
L
M
N
Figure 2.
Scenario-driven role engineering according to [3] with adaptions
of users, the minimum amount of authorizations required
for the execution of the tasks can be derived. In this way,
the principle of least privilege [10] is implemented. For
documentation, various models are generated by the SDRE
approach, which are interlinked in terms of contents and
used for the derivation of the role concept. The scenario
model describes all scenarios and steps, task deﬁnitions serve
to structure scenarios, the work proﬁle summarizes tasks for
job descriptions. The permission catalog lists the individual
permissions or authorizations. It may be complemented by
a constraint catalog of special limitations [3]. While the
permission catalog is focused on static assignments of autho-
rizations to speciﬁc resources, constraints describe dynamic
conditions, which are evaluated at runtime. Hereinafter, the
SDRE process will be described in general. First, the use
scenarios of the system are compiled and their actions and
events are documented. Then, subscenarios and steps are
deﬁned and the authorizations required for them are included
in the permission catalog or special limitations are listed in
the constraint catalog. When this step is completed for all
scenarios, similar scenarios are generalized. Very complex
scenarios are divided into smaller parts which are then
included in the scenario model. On this basis, tasks are
formed by grouping scenarios. These tasks are then classiﬁed
into various work proﬁles. This results in a preliminary role
concept and minimum authorizations can be assigned to
the individual activities. As a rule, this preliminary model
contains duplicates of roles with identical authorizations,
which then have to be fused in a last step. This yields
the RBAC model as a role concept. The SDRE process
represents a systematic approach to RE. It was applied
to information systems for the health care sector by the
technical committee of HL7 already [11]. Due to this prac-
tical test, SDRE in principle may be applied to MinaBASE
. However, certain adaptations are required, because the
background and objective of MinaBASE differ from those
of the HL7 systems. The paramount objective of MinaBASE
is the support of knowledge-intensive business processes
of MST enterprises by a structurization of the knowledge
required for the execution of these business processes. A
criterion for the acceptance of knowledge management is
its integration in workﬂows of the users and an efﬁcient and
complete coverage of information needs [12]. As such the
SDRE approach is to be applied to the use of MinaBASE
in business processes of MST enterprises and cooperation
networks. The model given in [3] is therefore subjected to
the following adaptations:
• In the standard SDRE methodology, scenarios for a
system are the main input, to which required autho-
rizations are allocated. Afterwards these scenarios are
generalized and assigned to tasks and work-proﬁles
which create a preliminary role concept, that needs to
be revised afterwards.
For MinaBASE however an alternative input is more
persuasive. Instead of starting with the scenarios of the
system, work areas within the business processes of
an MST-company are examined, whether they include
tasks in which MinaBASE can be used to increase added
value. To these tasks scenarios will be assigned in
order to obtain the information, which resources are
required for fulﬁlling them and what authorizations
are needed. Based on this information, a preliminary
role concept can be derived analogous to the standard
model due to the minimal set of authorizations for each
role. By these adapations, a switch of input variables
to the methodology - the basic principle of SDRE
is preserved, while better results for the creation of
the role concept are expected, because of the adapted
methodology being closer to the business processes of
a MST-company.
• The scenarios to be formulated are not based on conse-
quences of actions and events, but will also contain
all deﬁnable steps. Although these do not occur in
sequential order, they can be characterized by a certain
access authorization.
• For reasons of clarity, special limitations extending
beyond the static allocation of authorizations are in-
cluded directly in the permission catalog and not in the
127
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

constraint catalog, such that both models fuse.
The adapted process is illustrated in Figure 2. It comprises
six steps, the execution of which shall be described in more
detail in the following section.
IV. APPLICATION OF SDRE TO MinaBASE
Using parts of the models created by the SDRE process,
it shall now be demonstrated how the role concept can be
generated systematically.
A. Step 1: Generation of the User Concept
Application of the model is based on an analysis of the
business processes of a model MST company for possibil-
ities of using MinaBASE and for activities, where the use
of MinaBASE may result in a value added. Functions and
units of an MST company, which may be potential users of
MinaBASE, are:
• Sales, external guest: MinaBASE supports the sales
process in the strategic assessment of the feasibility of
customer orders, because these decisions can be made
based on an IT documentation of competences and
fabrication know-how. Strategic means that a general
decision is made without taking into account technical
details. In addition, the customer order is typed depend-
ing on whether a standard product is to be manufactured
or a speciﬁcation has to be met by enforcing the
development in a project. The documented competences
can be used as a database for sales promotion. External
guests, e.g., customers or suppliers, may be given
access to the system in order to inform themselves
about fabrication processes used by the company or
the cooperation network.
• Project management, development: If a customer order
is classiﬁed to be not directly producible by the sales
division, a project team is established based on the
customer’s speciﬁcation. This team is composed of the
project manager and technical experts. In an iterative
process, they specify general solution alternatives, the
commercial feasibility of which is assessed. In addition,
solution approaches, such as functional patterns or pro-
totypes, are developed in detail, the technical feasibility
of which is guaranteed. Upon successful agreement
with the customer, exact fabrication planning is started
in the next step. Planning is based on the results of the
development of a commercially and technically feasible
solution.
• Construction, fabrication planning: Planning of fabri-
cation, i.e., of the individual steps of production ﬂow,
may be initiated by a successful development process
or a directly producible customer order, e.g., the repe-
tition of an already executed fabrication process. In the
latter case, MinaBASE, a system for process-oriented
knowledge management, provides support by the stor-
age of process elements of process steps and process
Figure 3.
Work area project management with associated tasks from the
work proﬁle model
sections and their combination in process chains, as this
allows for the direct use of already executed fabrication
processes [8]. This principle in weaker form may also
be applied to fabrication planning based on a technical
solution alternative from development. By copying or
adapting existing process models or process elements,
planning of the fabrication process can be acceler-
ated. Construction and fabrication planning result in
a detailed schedule for production and deﬁned quality
management tests, during which data are measured in
the production process.
• Quality management, production: Production focuses
on the execution of the process steps deﬁned by fab-
rication planning in a process chain to execute the
order placed by the customer. Technicians working at
the machines have direct access to production and are
capable of using technical parameters of the individual
process elements of the process chain for adjusting
the machine parameters and of measuring real data
during the tests. Various areas of quality management
are covered. New fabrication knowledge of attributes
and parameters of process elements is generated.
B. Step 2: Deﬁnition of Work Proﬁles and Task Deﬁnitions
According to the adaptations to the SDRE model,
MinaBASE tasks are assigned to the enterprise units or work
areas listed in the previous section. Figure 3 shows a part
of the work proﬁle model. In the work area of project
management for the iterative development of solutions for
a not yet solved development problem of a customer order,
tasks are identiﬁed, to which the MinaBASE resources can
be applied. These tasks are the pooling of technical experts,
the analysis of fabrication competences and process chains,
and the coordination of process dependencies beyond orga-
nizational units. The complete work proﬁle model contains
all tasks to which MinaBASE may be applied. These are
the input variables for the detailed assignment of scenarios,
steps, and authorizations to access resources in the following
step.
128
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

Figure 4.
Reﬁnement of tasks in use scenarios and assignment of authorizations to access the resources needed
C. Steps 3/4: Reﬁnement of Scenarios and Assignment of
Authorizations
For the ﬁrst two tasks mentioned in the previous section,
namely, the pooling of experts and the coordination of pro-
cess dependencies, a part of the fused permission and con-
straint catalog is illustrated in Figure 4. For every scenario or
every step, the associated operation on an object or resource
is modeled, with R denoting read access (read), C denoting
the creation of a new entry (create), U meaning processing
(update), and D the deletion (delete) of a resource. The
information of which actor accesses which resource with
which operation is encapsulated as a permission by a triple
of the type (actor, operation, object). At last, limitations or
constraints of access are speciﬁed. For the ﬁrst task, the
organizational units, contact data of technical experts, and
competences of the organizations stored in MinaBASE are
considered as use scenarios. Read access (R) to the tables
of the database and application components is required. In
analogy, the second task is handled. Here, order data and
detailed, production-related attribute values of process de-
pendences are needed. In addition, an entry in the constraint
catalog is made to ensure that the actor sees only those
attribute values that are characterized as project-speciﬁc
property and not as production-speciﬁc, internal know-how
of an organization. This constraint cannot be implemented as
a static authorization, as the assignment is made dynamically
during runtime.
D. Steps 5/6: Derivation of the Role Concept
By applying the ﬁrst steps of the adapted SDRE model to
the identiﬁed MinaBASE-using enterprise units, a hierarchy
corresponding to a preliminary model of the role concept
may be derived on the basis of the authorizations. The high-
est point is the administration that is not only responsible
for administrating users and their assignment to roles, but
also has all other authorizations in the system. The lowest
point is the external guest, who is given fewest access
rights. In between, the graph may be structured horizon-
tally and vertically. Vertical structurization results from the
!"#$%&'()*+$,#
-./0&0,#%'12&
3&24($.*$)
$&*0&$$%0&*
5%2.+612&
7'($,
5%28$6#
/'&'*$/$&#
9$:$(2;/$&#
<2%=
,6>$.+(0&*
?+'(0#@
/'&'*$/$&#
Figure 5.
Preliminary role concept based on the permission catalog
degree of orientation to orders. This means that planning
of working steps of a process chain and their execution
are much more related to orders than the development of
solution alternatives for a certain customer speciﬁcation by
technical experts. Horizontal structurization results from the
authorization steps.
Then, the last step of the SDRE process follows, i.e.,
the analysis of the preliminary model for groupings of
authorizations in the form of roles that exist several times
and have a comparable amount of authorizations. These roles
have to be eliminated. Otherwise, the catalog would list
more roles than necessary, which might result in anomalies
and undesired side effects in the administration of rights
and roles. Review of the preliminary model taking into
account the criteria described yields the role concept shown
in Figure 6. Documentation of the authorizations for the
individual company units shows that a separation between
project management and development is not reasonable, as
the access rights for the modeled scenarios and steps are
identical. For this reason, both units are summarized by the
developer role. The same applies to fabrication planning and
129
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

!"#$%&'()*+$,#
-./0&0,#%'#1%
2&13($.*$
$&*0&$$%
4$56&050'&
71%8)
,56$.+($%
9'($,
:$;$(1<$%
Figure 6.
Revised role concept as RBAC model
quality management, as both units use MinaBASE for various
objectives, but still have comparable use scenarios and,
hence, identical authorizations. Consequently, they assume
the same role in the use of MinaBASE , the role of the
work planner. Below, the role of technician exists, who is
responsible for the implementation of the plans made by the
work planner. The technician is in the position to acquire the
measurement data for the tests of the work planner and to
deﬁne detailed parameters, such as machine instructions, as
information added to process elements. To fulﬁll his task,
the developer needs deep insight into the details of the
competences and process chains, as he has to extend the
strategic assessment of the sales division by a guaranteed
technically possible feasibility assessment. The “knowledge
engineering” component has already encapsulated the rights
to update order-independent knowledge in the preliminary
model. In this way, additional authorizations can be assigned
speciﬁcally to a role.
V. IMPLEMENTATION IN AN IOC-FRAMEWORK
This section describes the implementation of the RBAC
model within MinaBASE. At ﬁrst, the used framework,
Spring Security, is introduced. After that, it is shown how
static and dynamic security requirements stemming from the
permission catalog as well as the constraint catalog can be
fulﬁlled.
A. Spring Security
Spring Security is a subproject of the application frame-
work “Spring” to control authentication and authorization
in the JEE environment, i. e., in the range of business
applications based on Java technology [13]. It is empowered
by technologies provided by the core of Spring, such as
”Inversion of Control“ (IoC) using ”Dependency Injection“,
which means a passive provisioning of an application com-
ponent’s dependencies by a central container known as the
Spring ”ApplicationContext“, as well as the aspect-oriented
programming (AOP) capabilities provided by that container.
AOP is used for central encapsulation of cross-cutting con-
cerns into so-called aspects, which avoids the scattering of
duplicated code for realizing them across the codebase. By
integrating with the hosting web container, a central hook
is implemented by which a chain of ﬁlters can monitor and
control the processing of HTTP requests as well as the exe-
cution of application components. This enables Spring Secu-
rity to capture all elements of an application’s architecture
while thoroughly ensuring its security requirements using
a declaratively conﬁgurable mechanism. This central hook
determines whether an incoming request is trying to access a
protected resource according to the supplied conﬁguration.
If this is the case, the ”AuthenticationManager“ (AM) is
requested to authenticate and return the current principal,
an abstract notion for, e. g., the currenlty logged in user,
which is used by the ”AccessDecisionManager“ (ADM) to
determine whether its role has the permission required for
the protected resource in question. These two components
can be controlled in a very ﬂexible manner. For instance,
during authentication, the AM can be conﬁgured to consult
different providers, which in turn compare the principal’s
credentials by querying relational databases or LDAP di-
rectories. The ADM can be controlled by assigning static
key/value-pairs of resources and required permissions or by
enabling the dynamic execution of AOP-driven components.
The following shows how Spring Security can be used to
enforce compliance with the static and dynamic security
requirements as speciﬁed in the permission- and constraint
catalog in Figure 4.
B. Static aspects of security
Extending the security mechanisms across the entire archi-
tecture of MinaBASE requires the ADM to use a FilterSecu-
rityInterceptor“ (FSI) for securing the presentation layer as
well as a MethodSecurityInterceptor“ (MSI) for the applica-
tion layer. To protect the application layer, a conﬁguration
of the MSI is required that determines which permissions
the role of the current principal must possess to invoke
components for data access and application logic. This can
be realized by placing annotations directly in the application
source code or through a central AOP conﬁguration. The
latter variant is used due to easier maintenance and therefore
shown in Listing 1. For the protection of method invocations,
a so-called pointcut, which is an entry point for the execution
of code formulated as AOP-advices, is associated with a
permission, whose presence will be checked by the MSI.
<global −method−s e c u r i t y>
<p r o t e c t −p o i n t c u t
e x p r e s s i o n =” e x e c u t i o n (∗
edu . k i t . minabase .∗ CompetenceDAO . get ∗ ( . . ) ) ”
access =”PERM R Competence” />
</ global −method−s e c u r i t y>
Listing 1.
Conﬁguration of the MethodSecurityInterceptor
130
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

This restricts the data access to competences by requiring the
presence of the ”PERM R Competence“ permission for the
execution of methods, whose names start with ”get“ and are
located within the CompetenceDAO class. The assignments
of permissions to roles can be altered using an administrative
interface at runtime. The invocation of methods for modi-
fying and deleting information entities within MinaBASE as
well as the execution of application logic can be restricted
in a similar fashion. For securing the presentation layer,
combinations of URL-patterns for protected regions and
required permissions are speciﬁed, which are evaluated by
the FSI during the monitoring of HTTP request processing.
An excerpt of the necessary conﬁguration is shown in List-
ing 2. Due to the URL-patterns being evaluated from top to
bottom, the monitoring is at ﬁrst disabled for static resources
to achieve higher performance. Thereafter, permissions for
visiting URLs matching the location for display and editing
of competences are stated.
<h t t p
auto−config =” f a l s e ”
access−denied−page=” / denied . j s p ”>
<i n t e r c e p t −u r l
p a t t e r n =” / s t a t i c / ∗ . ∗ ”
f i l t e r s =” none ” />
<i n t e r c e p t −u r l
p a t t e r n =” / competence / show /∗∗ ”
ac cess =”PERM R Competence” />
<i n t e r c e p t −u r l
p a t t e r n =” / competence / e d i t /∗∗ ”
ac cess =”PERM W Competence” />
<form−l o g i n
login −page=” / l o g i n . j s p ”
a u t h e n t i c a t i o n −f a i l u r e −u r l =” / l o g i n . j s p ? e r r o r =1” />
<logout
logout−success −u r l =” / logout . j s p ” />
</ h t t p>
Listing 2.
Conﬁguration of the FilterSecurityInterceptor
The ﬁnal step is the declaration of URLs, to which the
AM will redirect unauthenticated users, that try to access
a protected resource as well as URLs for authentication
failures and the termination of a user’s session. These
settings ensure that protected areas are not reachable for
users that dont possess the required permissions. To improve
the user experience, links to sections the user does not have
access to should not be displayed in the ﬁrst place. To
achieve this, the generation of HTML needs to be controlled
with permissions in mind. Spring Security is bundled with an
extension that allows fragments of Java ServerPages (JSP)
to be rendered according to the current user’s permissions,
which is demonstrated in the following Listing 3.
<s e c : a u t h o r i z e
i f A l l G r a n t e d =”PERM W Competence”>
<a
h r e f =” / cometence / e d i t / . . . ”>
Edit
t h i s
competence</ a>
</ s e c : a u t h o r i z e>
Listing 3.
Permission based generation of the user interface
This JSP-Tag assures that links to the area for editing
competences are only rendered to those users that have
the ”PERM W Competence“ permission. These three list-
ings show how Spring Security can be used to employ a
!"#$
%#&'()*+$),,#$
-#$./0#'123#$'4#2*
52+2'600#""'4#2*
52+2&2"#
70)89#+#*0#7
":);7<<<
,)2=()89#+#*0#>?
@#+()89#+#*0#>?
A/&#$*2+#'BC#$3
()89#+#*0#'
DE6FG&H#0+
()89#+#*0#'
4#I)$#'6=./0#
()89#+#*0#'
6J#$'6=./0#
0)89#+#*0#7
":);<H"9
KE2$28#+#$F
-#06=./0#
Figure 7.
Integration of the MParameterSecAdvice in MinaBASE
homogeneous system of permissions that stems from the
SDRE permission catalog and covers the entire application
architecture from data access to the presentation layer. At
runtime these permissions are assigned to roles from the
designed RBAC model.
C. Dynamic security aspects
In the previous section, security aspects were considered,
which could be fulﬁlled by statically restricting access to a
protected resource by requiring a speciﬁc permission to be
held by the current principal. While most aspects of the
permission catalog are covered by this approach, entries
of the constraint-catalog as depicted in Figure 4 cannot
be implemented in this fashion, because of their dynamic
nature, wich means, these constraints cannot be enforced at
build-time, but only at runtime. As an example, the ﬁltering
of Fabrication-speciﬁc TP of a competence’s detailed view
is used. To avoid code duplication whenever Fabrication-
speciﬁc TP of a MinaBASE information entity shall be
ﬁltered, this concern is encapsulated into a separate AOP-
Advice called ”MParameterSecAdvice“, whose integration
into the method’s call ﬂow is illustrated in Figure 7. A
request for the detailed view of a competence is received
by a Web-controller, which initiates the data access for the
current competence by invoking methods from the service
layer. Once this competence is loaded as a database object,
the MParameterSecAdvice is hooked into the execution ﬂow
using AOP-Weaving. The job of this component is to iterate
over the competence’s parameter collection and ﬁlter out
those parameteres to which the current principal has no
permission. The revised competence object is then returned
to the controller which starts the generation of HTML
templates and sends the result to the browser. The advantage
of this appraoch is the fact that the permission based ﬁltering
is encapsulated into the MParameterSecAdvice once and can
be applied declaratively to multiple application components
without code duplication and mixture of concerns by simple
conﬁguration in a similar fashion as described in Listing 1.
131
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

VI. CONCLUSION
In this paper, a role concept for the process knowledge
database MinaBASE has been developed based on a system-
atic methodology called Scenario-driven role engineering.
The implementation of this role concept within an IoC-
Framework such as Spring has been demonstrated by uti-
lizing Spring Security and technolgies such as AOP. At
ﬁrst, the MinaBASE approach as well as the Scenario-driven
role engineering methodology were introduced. Following
this, careful adjustments were made to the inputs of the
SDRE process resulting from the background and purpose
of MinaBASE without hurting the methodology’s idea and
principles. Then the application of the SDRE process was
shown including examples on how to derive a minimal set
of permissions enabling each role to fulﬁll its work proﬁle.
In the following section the implementation of the derived
role concept using Spring Security is described in detail.
Important concepts are Dependency Injection and AOP, as
they enable Spring Security to ensure static and dynamic se-
curity requirements across the entire application architecture.
For the implementation of security requirements that can be
decided at runtime only, an example was given in order to
prevent the disclosure of Fabrication-speciﬁc parameters for
non-authorized persons.
REFERENCES
[1] U. Hansen, C. Germer, S. B¨uttgenbach, and H. Franke, “Rule
based validation of processing sequences,” in Techn. Proc.
MSM, 2002.
[2] D. F. Ferraiolo and R. Kuhn, “Role-based access control,”
in In Proceedings of 15th NIST-NCSC National Computer
Security Conference, October 1992, pp. 554–563.
[3] G. Neumann and M. Strembeck, “A scenario-driven role
engineering process for functional RBAC roles,” in SACMAT
’02: Proceedings of the seventh ACM symposium on Access
control models and technologies. New York, NY, USA: ACM
Press, 2002, pp. 33–42.
[4] I. Nonaka and H. Takeuchi, “The knowledge-creating com-
pany,” Harvard Business Review, vol. 6, pp. 96–104, 1991.
[5] M. Dickerhof, “Prozesswissensmanagement f¨ur die Mikrosys-
temtechnik.” Statusseminar MikroWebFab, Karlsruhe, 2003.
[6] M. Dickerhof and A. Parusel, “Bridging the Gap—from
Process Related Documentation to an Integrated Process
and Application Knowledge Management in Micro Systems
Technology,” Micro-Assembly Technologies and Applications,
pp. 109–119, 2010.
[7] M. Dickerhof, O. Kusche, D. Kimmig, and A. Schmidt,
“An ontology-based approach to supporting development and
production of microsystems,” Proc. of the 4th Internat. Conf.
on Web Information Systems and Technologies, 2008.
[8] D. Kimmig, A. Schmidt, K. Bittner, and M. Dickerhof, “Mod-
eling of microsystems production processes for the minabase
process knowledge database using semantic technologies,”
Proc. of the 3th Internat. Conf. on Information, Process, and
Knowledge Management, 2011.
[9] E. J. Coyne, “Role engineering,” in RBAC ’95: Proceedings of
the ﬁrst ACM Workshop on Role-based access control.
New
York, NY, USA: ACM Press, 1996, p. 4.
[10] J. H. Saltzer and M. D. Schroeder, “The protection of in-
formation in computer systems,” in Inproceedings of fourth
ACM Symposium on Operating System Principles, 1975.
[11] HL7 Security Technical Committee , “HL7 Role Based Ac-
cess Control (RBAC) Role Engineering Process,” January
2005.
[12] K. Boehm, W. Engelbach, J. H¨artwig, M. Wilcken, and
M. Delp, “Modelling and implementing pre-built information
spaces. architecture and methods for process oriented knowl-
edge management,” 2005.
[13] B.
Alex
and
L.
Taylor,
“Spring
Security
Reference
Documentation,”
http://static.springsource.org/spring-
security/site/docs/3.1.x/reference/springsecurity-single.html,
last access: 06.04.2011.
132
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-010-9
SECURWARE 2011 : The Fifth International Conference on Emerging Security Information, Systems and Technologies

