A Human-on-the-Loop Autonomy Architecture
for Resident-AUV Undersea Support Infrastructure
Pedro Andr´es Forero, LorRaine Duffy, and Eric Hendricks
Naval Information Warfare Center Paciﬁc
San Diego, California 92152, USA
Emails: {pedro.a.forero; lorraine.duffy; eric.hendricks}@navy.mil
Abstract—The use of Resident Autonomous Underwater Vehicles
(R-AUVs) is a necessary step towards increasing the safety and
reliability of undersea infrastructure ranging from communica-
tion cables to oil pipelines and undersea observatories. Undersea
Support Infrastructure (USI) for R-AUVs will provide docking,
energy and communication services. Furthermore, it will be able
to autonomously interact with R-AUVs, while enabling remote
human operators to oversee, and in some cases direct, the R-AUVs
and USI operations. This is particularly critical in situations
where assured communications between operators and the USI
are not guaranteed. This paper proposes an autonomy architec-
ture for USIs that pursues a vertical and horizontal separation-
of-concerns architecture-design approach and builds on well-
documented autonomy and autonomic system design principles.
Horizontal separation allows for conﬁguration strategies and be-
havior policies to be deﬁned, selected, executed and monitored by
loosely coupled planning modules acting as arbitrators. Vertical
separation enables decision making components to be grouped
according to the timeliness of the decisions they must make. Our
autonomy architecture features a dual, local and global, planning
layer that provides an interface for the operator to interact
with the USI, enables human-on-the-loop autonomy, and supports
autonomous operations in situations where the communications
between the operator and the USI are unreliable and intermittent.
A use case for this architecture in the context of future at-sea
inspection, maintenance, and repair services for the oil and gas
industry is discussed.
Keywords–Autonomy architecture; resident autonomous un-
derwater vehicles; inspection, maintenance and repair; human-
machine interaction.
I.
INTRODUCTION
Ocean exploration and monitoring activities for both civil-
ian and military applications are increasingly integrating sensor
payloads with underwater vehicles to satisfy their need for
deeper and persistent reach [17], [21], [24]. Commercially-
available Autonomous Underwater Vehicle (AUV) technolo-
gies can routinely reach depths of up to 6,000 meters – the
average ocean-depth has recently been estimated at 3,682
meters [6] – and conduct unattended operations for several
days [21]. Furnished with advanced sensors and actuators,
underwater vehicles are able to perform undersea data collec-
tion and actuation in environments previously considered too
risky, costly or inaccessible for manned operations. Although
challenged by the harsh environmental conditions and the
intense pressure characteristic of the deeper parts of the ocean,
advances in AUV design and material science will continue
extending the AUVs’ ability to operate deeper and longer
underwater.
Despite the success of AUVs, long-term AUV deployments
continue to require frequent human intervention. For instance,
AUV batteries must be periodically recharged or replaced by
a human operator. Coupled with the low-bandwidth acoustic
channels and high-energy cost-per-bit associated with under-
water acoustic communications [7], and the increasing de-
mand for larger volumes of undersea data, the availability of
limited data storage and processing capabilities onboard an
AUV imposes a requirement for periodic data downloads. Not
only is human intervention costly and risky, but it is also a
limiting factor for the duration and operational rhythm of AUV
operations. Despite these challenges, AUV capabilities in the
areas of navigation, actuation, maneuverability and artiﬁcial
intelligence have continued to mature [17], [21]. Indeed, the
new generation of underwater vehicles combines attributes of
AUVs and Remotely Operated Vehicles (ROVs) that facilitate
actuation using anthropomorphic capabilities [1], [23].
Continual inspection, maintenance and repair (IMR) ser-
vices for undersea infrastructure is a nascent application area
for AUVs that considers the use of Resident AUVs (R-
AUVs) [11], [15], [20]. IMR activities have been traditionally
conducted by ROVs tethered via an umbilical cable, which
provides power and communications, to a manned vessel or
surface platform from where a human operator controls them.
Pre-deployed support infrastructure will enable R-AUVs to
remain unattended in proximity of the undersea infrastructure
they intend to support [8], [10]. Not surprisingly, R-AUVs are
expected to signiﬁcantly reduce deployment and maintenance
costs associated with AUV-transit in and deployment from a
manned vessel, which for a typical IMR campaign can be as
high as US $120,000 per day [11]. While on-call, R-AUVs will
be able to respond quickly to IMR requests, provide support in
spite of surface weather conditions, and accommodate opera-
tions in ice-covered seas. AUV docking platforms stationed
several meters below the sea surface can protect R-AUVs
from storms and maritime trafﬁc. Furthermore, they can enable
human operators to remotely monitor, re-task and access data
collected by the R-AUVs. R-AUVS can also support the initial
phases of exploration and data collection for identiﬁcation of
promising exploitation areas.
Beyond providing energy, communications and data storage
services, Undersea Support-Infrastructure (USI) for R-AUVs
offers an opportunity for introducing autonomy functions to
plan, coordinate and execute operations with multiple R-
AUVs. Monitoring and maintenance services for the R-AUVs
themselves can be integrated as services supported by the USI
directly. Due to the requirement for unmanned operations,
1
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

the USI must be able to autonomously interact with and
provide services to the R-AUVs. Additionally, it must allow
human-on-the-loop operations, where a human operator re-
motely supervises and directs, when necessary, IMR activities.
Similarly to the R-AUVs, the USI must operate autonomously
while striving to accomplish the service provisioning goals and
objectives deﬁned by the operator.
This paper proposes the Human-on-the-loop Autonomy
in Austere Networking Environments (HANEn) architecture,
a new autonomy architecture for the USI that emphasizes
planning, resource allocation and service provisioning for R-
AUVs as they perform IMR activities. The operational scenario
discussed herein focuses on situations where communications
with a human operator are unreliable and intermittent. Similar
to the MORPH architecture for self-adapting systems [4],
HANEn allows for reconﬁguration of subsystem parameters,
and redeﬁnition of service and behavior policies. Addition-
ally, it features dual and cooperative Planning Layers that
extend the classical three-layer architectures to accommodate
the spatial dimension associated with coordinating activities
across multiple USIs. Due to the inherent risks associated with
undersea operations, HANEn must support fault diagnostics
and management services for the USI. Furthermore, fault
diagnostics services can be provided to the R-AUVs by the
USI directly or as remotely-operated service managed by the
operator. These services can be implemented within HANEn
via the deﬁnition of appropriate conﬁguration strategies, e.g.,
use redundant hardware when necessary, and behavior policies,
e.g., redeﬁne the quality-of-service provisioning provided to R-
AUVs as a function of the degradation experienced by the USI
hardware components.
HANEn proposes a four-layer architecture for autonomy
whose fourth layer, called the Global Planning Layer, resides
with the operator, outside the USI; supports multiple and
concurrent USI deployments; enables planning functions to use
models, policies and historical data collected from multiple
USIs; and, provides an interface for the human operator to
monitor and direct USIs and by extension the R-AUVs. The
Local and Global Planning Layers are connected through an
unreliable, low-bandwidth and high-latency communications
network. One of the main implications of this separation is
that the perceived state of the USI and its environment is not
necessarily the same when seen from the Local and Global
Planning Layers. Thus, modeling and inference tools become
fundamental for maintaining alignment between the operator’s
and the USI’s understanding of the state of the USI and the
environment in which it operates.
The paper is organized as follows. Section II provides an
overview of the HANEn Architecture. Section III describes the
conﬁguration strategy and behavior policy selection at each
layer of the HANEn four-layer architecture and their interac-
tion with the Knowledge Repositories. Section IV discusses
how HANEn enables regional coordination for provisioning
of IMR services to support management of oil and gas subsea
infrastructure. The paper concludes in Section V.
II.
HANEN ARCHITECTURE OVERVIEW
In this section, the HANEn autonomy architecture is in-
troduced. HANEn builds on the Monitor, Analyze, Plan and
Execute over a Knowledge-Base (MAPE-K) model and pro-
poses a four-layer architecture for implementing the Analyze
Figure 1. HANEn architecture modeled via an extended MAPE-K model
featuring local M, A, P, E, and K modules interacting with the USI via
its Application Programming Interfaces (APIs). It also illustrates the global
Planning (PG) and Knowledge Repositories (KG) that enable HANEn to
coordinate activities across multiple USIs.
Figure 2. Block-diagram representation of the HANEn Architecture for a
single operator-USI pair. Block colors used therein correspond to those used
in the MAPE-K modules shown in Figure 1.
and Plan computational modules [18]. MAPE-K deﬁnes four
fundamental modules used to model the decision making
process of autonomous and self-adapting systems as a control
loop, namely the Monitor (M), Analyze (A), Plan (P), Execute
(E) modules (see Fig. 1). Additionally, MAPE-K also features
the Knowledge Repository (K) containing environment, system
and goal models, inference and learning tools, and data log-
ging and managing capabilities. Its content is available to all
MAPE-K modules and layers of the decision-making hierarchy
deﬁning the Analyze and Plan modules. Our four-layer ar-
chitecture introduces the Operational, Control, Local Planning
and Global Planning Layers, thereby extending the three-layer
architectures often used as the basis for developing autonomy
architectures for self-adapting and autonomic systems with an
additional planning layer [2], [4], [12], [13], [14], [16]. The
Global Planning Layer can be understood as a global planning
and knowledge aggregation layer bridging mutiple, otherwise
disconnected, USIs as shown in Fig. 1. An overview diagram of
HANEn that highlights its relationship with MAPE-K modules
is shown in Fig. 2.
The motivation behind implementing a classical three-layer
architecture for the Analyze and Plan modules within MAPE-
K is the realization that decision making in any autonomous
system must occur at different time scales and use different
system-state deﬁnitions [2], [3], [14]. Three-layer architectures
2
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

have remained relevant in the past decade as is noted by
their usage for modeling recent cloud-based robotics and self
adapting systems. These systems presume the availability of
reliable, high-bandwidth communications between the Control
Layer implemented in individual robots and the Planning Layer
instantiated in a cloud computing platform [2], [22]. In that
context, it is natural to implement regional Planning Layers at
locations that have powerful computational resources and large
sets of data and models available, rather than at individual,
resource-limited robots [9]. In this case, the regional Planning
Layer is continually updated with data and policy updates
received from individual robots and able to support advanced,
computationally-intensive inference procedures.
The four-layer architecture used by HANEn continues to
separate decision making according to the timeliness and
state information with which decisions must be made. This
separation highlights the different knowledge requirements for
the various levels of conﬁguration strategy and behavior policy
deﬁnition needed by the USI. The Global Planning Layer in
HANEn enables the USI to use the data, models and com-
putational resources that the USI has available via the Local
(K) and Global (KG) Knowledge Repositories, respectively
(see Fig. 2). It thereby addresses the need for managing
access and usage of intermittent global data and computational
resources, and USI-operator directives to optimize the local
and global performance of multiple USIs. Furthermore, it
enables planning and execution coordination of concurrent
operations among multiple USI deployments.
A brief description of HANEn and the USI systems it
supports is given in the following subsections.
A. System
The USI system is the combination of controllable and
observable hardware and software elements that provide sup-
port and services to the R-AUVs. It comprises all sensors
and actuators that the USI uses to monitor and direct the
system to provide services and execute actions. The policies
and conﬁguration options selected for the system by HANEn
are constrained by the capabilities implemented in the USI
and the availability of Application Programming Interfaces
(APIs) to access them. From an autonomy architecture vantage
point, the system provides monitoring and control mechanisms
through a collection of APIs. These APIs provide access
to all relevant USI subsystems. The monitoring mechanisms
available in the system include the generation of status updates
and event notiﬁcations, and access to raw and processed sensor
data. Control mechanisms available in the system include
the conﬁguration of actuator parameters and the deﬁnition of
service execution proﬁles.
B. Operational Layer
The Operational Layer is concerned with execution, moni-
toring, and enforcement of conﬁguration and behavior policies
as deﬁned by the Plan and Control Layers. Events handled by
this layer require rapid response to either maintain or recover a
speciﬁc system state. The conﬁguration strategies and behavior
policies used by this layer are deﬁned by the Control Layer. It
reacts directly to data collected by the Monitor module through
sensors, software probes, and status and fault reports generated
by the system, and creates status and event reports for the upper
layers. It also commands reconﬁguration of system parameters
and behavior policies via the Actuator and Execution Proﬁle
system APIs, and reports system faults and anomalies to the
Control Layer.
C. Control Layer
The Control Layer is concerned with the reconﬁguration
of parameters and behaviors of the system components using
precomputed conﬁguration strategies and behavior policies that
can be used in response to system state changes. Behavior
policies can be generated via dynamic resource management
and scheduling algorithms. Reconﬁguration can be triggered
by a request from the Planning Layer to accommodate a
change in the USI goals, or a notiﬁcation from the Operational
Layer in response to a fault or anomaly identiﬁed in the
system. Behavior reconﬁguration can also be triggered by
the Control Layer itself to resolve issues that would prevent
the system from achieving the goals deﬁned in the Goal
Model, or capitalize on opportunities identiﬁed thru knowledge
available in the Knowledge Repository. The latter may occur,
e.g., when verifying that the assumptions under which current
behaviors enacted by the Operational Layer are still valid.
This layer receives new conﬁguration strategies and behavior
policies from the Local Planning Layer, and can request new
conﬁguration strategies and behavior policies when suitable
ones are unavailable.
D. Local Planning Layer
The Local Planning Layer resides with the USI. It is
responsible for all long-term planning activities. It deﬁnes
behavior policies and corresponding system-parameter conﬁg-
uration strategies to support policy execution. Conﬁguration
strategies and behavior policies are chosen to satisfy the system
goals deﬁned by the operator. This layer is responsible for
translating the system goals provided by the operator to a goal
model that links goal satisfaction with speciﬁc system conﬁg-
uration and behavior requirements. Not only do goal models
support the deﬁnition of long-term conﬁguration strategies and
behavior policies, but they also enable the system to identify
conﬁgurations and behaviors necessary for accomplishing the
system goals. The resulting set of requirements are used by this
layer to deﬁne conﬁguration strategies and behavior policies.
The Local Planning Layer relies on the state and evolution
models, goal models, learning and policies database available
in the local Knowledge Repository. New conﬁguration strate-
gies and behaviors can be triggered by requests from the Con-
trol Layer, or internally by changes in the Goal Model or the
deﬁnition of new behavior policies through internal learning
mechanisms. This layer checks for consistency between the
behaviors and the conﬁguration to ensure that behavior execu-
tion can be conducted as expected. Reconﬁguration strategies
also include safe-transition approaches to reach a given system
conﬁguration (state) given the current system conﬁguration and
behavior policies, and the environment’s state.
E. Global Planning Layer
The Global Planning Layer resides with the human operator
infrastructure. It includes a human-machine interface (HMI)
module that the USI operator can use to monitor and manage
the system remotely. When connected to the USI, it can
supersede the Local Planning Layer Goal Model, conﬁguration
3
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

strategy and behavior policy deﬁnition mechanisms accord-
ing to the Authority Management Functions responsible for
planning decision-authority allocation. HADEn’s human-on-
the-loop autonomy enables the operator to demand decision-
control over the system to deﬁne conﬁguration strategies,
behavior policies and force the execution of speciﬁc actions
by directly interacting with the system APIs. The Authority
Management Functions enable the operator to gain and re-
linquish control of the system via the HMI, and to reallocate
decision authority over the system to the Local Planning Layer
whenever the USI loses connectivity with the operator. The
Global and Local Planning Layers use a collection of authority
tokens to identify and track who has authority over the system.
These tokens are stored in the Knowledge Repository and are
managed by the Planning Layers directly.
The Global Planning Layer has access to the Global
Knowledge Repository that subsumes historical data collected
across a variety of USI deployments and conﬁgurations. Thus,
it can, in principle, develop well-informed conﬁguration strate-
gies and behavior policies to enable USI and R-AUV coordina-
tion across multiple USIs, specially when compared with those
developed by a single USI using its own, local Knowledge
Repository. It, furthermore, can exercise case-based reasoning
to transfer conﬁgurations and behaviors learned in one USI to
address a similar challenge arising in a different USI.
F. Knowledge Repository
The Knowledge Repository is a resource shared by all
computational blocks of HADEn. It decouples the data- and
information-aggregation activities from the decision-making
activities enacted by the selection of conﬁguration strategies
and behavior policies. The Knowledge Repository is respon-
sible for logging and storage of system data and system
reports. These data are used by the inference and learning
blocks. The inference block uses data to update models for the
environment, the USI and the R-AUVs. These models are used
by the decision making layers to verify that the assumptions
behind the active behavior policies are valid. Data are also used
by internal learning mechanisms that attempt to develop new
behavior policies. The resulting policies can be enacted by the
Local Planning Layer or used to extend the Global Knowledge
Repository, which is available to the USI operator. The Goal
Model deﬁned in the Knowledge Repository, together with the
models of the USI, the environment and the R-AUVs, are
used by the Planning and Control Layers to assess whether
the requirements for goal completion are satisﬁed.
The Knowledge Repository is divided between the USI
operator and the individual USI. In scenarios with intermittent
and unreliable communications between the operator and the
USI, it is not practical to synchronize the content of the
Global and Local Knowledge Repositories. Instead the content
of the local Knowledge Repository can be summarized via
model abstractions, compressed data, report representations,
and information summaries that will be sent periodically to the
global Knowledge Repository residing with the USI operator,
whenever communication opportunities are available.
III.
DECISION-MAKING STRUCTURE AND SUPPORT
The layering approach featured by HANEn implements the
separation-of-concerns design principle to manage the different
time scales and information requirements of the decision
Figure 3. Internal conﬁguration of the Operational and Control Layers, both
of which have access to the Local Knowledge Repository (K). Plan (P)
Modules in each layer act as arbitrators between the conﬁguration and behavior
functions to deﬁne the appropriate autonomy strategy to follow.
making processes executed within each USI, and globally
across multiple USIs. When executing their internal decision
making process, each layer is only concerned with requests and
reports coming from the layer below, and directives in the form
of new conﬁguration strategies and behavior policies from the
layer above. Additionally, each layer uses speciﬁc content and
functions from the Local Knowledge Repository to verify the
context in which the decision making process is taking place.
The four-layer autonomy architecture used by HANEn can be
modeled as a hierarchical control system implementing loosely
coupled, dual MAPE-K models in the Operational and Control
Layers, as shown in Figure 3, and single MAPE-K models in
the Local and Global Planning Layers each having access to
related, yet different, Knowledge Repositories, as shown in
Figure 4.
The Operational and Control Layers are modeled via two
MAPE-K models that monitor, maintain, and select the con-
ﬁguration strategy and behavior policy approaches used. Each
Monitor and Analyze block-pair is responsible for collecting
and analyzing conﬁguration and behavior-speciﬁc data in the
form of reports, requests, time-series, et cetera. Each layer
implements a set of conﬁguration and behavior functions that
support the Analyze and Plan computational blocks within
the layer. Per layer, the MAPE-K models share a common
Planning computational block and have access to the local
Knowledge Repository. In addition to deciding what conﬁgu-
ration strategies and behavior policies to deploy, the Planning
block decides how new conﬁguration strategies and behavior
policies are to be deployed and executed based on the analysis
provided by the two Analyze blocks in the layer. Its role
includes deciding whether the conﬁguration strategies can
support the execution of a given behavior policies, whether a
change in the conﬁguration affects the viability of the current
behavior policy, and what the transition approach for new
conﬁgurations and behaviors must be to avoid inadvertently
driving the system conﬁguration into an execution pitfall that
would affect the ability of the system to achieve its goals.
The Local and Global Planning Layers are responsible
4
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

Figure 4. Internal conﬁguration of the Global and Local Planning Layers. The
Local (Global) Knowledge Repository is colored red (green) and denoted by
K (KG). Note that K and KG do not necessarily have the same content.
for long-term planning and adaptation functions. The Local
Planning Layer uses its conﬁguration and behavior functions
to deﬁne new conﬁguration strategies and behavior policies.
Updates occur whenever the USI encounters situations that
cannot lead to accomplishing the USI goals given the known
conﬁguration and behavior strategies available in the local
Knowledge Repository. This layer receives operational direc-
tives from the Operator through the Global Planning Layer,
which could pass the directives directly to the USI or use
its Global Knowledge Repository and up-to-date information
about the USI to deﬁne a goal model for the speciﬁc USI
to achieve. When directives are shared with the USI, the
USI uses its Local Knowledge Repository to deﬁne a goal
model that links goals with USI system requirements in a
hierarchical and logical structure. The Goal Model and a set of
appropriate assessment metrics are then stored and maintained
in the Local Knowledge Repository. They serve as the basis
for the conﬁguration strategy and behavior policy evaluation
conducted by the Control and Operational Layers.
The Global Planning Layer has similar decision-making
responsibilities to those of the Local Planning Layer. It,
however, features two major differences with respect to its
local counterpart. First, it has access to the Global Knowledge
Repository and, thus, to a larger set of information records,
knowledge, and presumably more advanced data inference
capabilities. This repository has records of historical data,
conﬁguration strategies, behavior policies, and models col-
lected over time, across all USIs managed by the operator.
In addition to its responsibilities with each USI, the Global
Planning Layer is responsible for coordinating activities across
USIs for all regional energy, data storage, communications and
R-AUV services. Second, it offers an HMI for the operator to
interact with the USIs. This interface allows the operator to
monitor and direct individual USIs and coordinate operations
across all regional USIs. The HMI uses the Global Knowledge
Repository and the inference and forecasting tools available
within it to present the status of a given USI and its environ-
ment to the operator. In most situations the global Knowledge
Repository will not have access to the raw data captured by
a USI, thus the state view offered to the operator is based on
model abstractions and summary updates that an individual
USI can transmit to the operator.
The Local and Global Planning Layers also share the set
of authority management functions that assign and manage the
authority tokens, deﬁning who has authority over a given USI,
Figure 5. Internal conﬁguration of the Local and Global Knowledge Reposi-
tories.
i.e., what Analyze and Plan computational blocks will be used
by the USI to deﬁne new conﬁguration strategies and behavior
policies. The default operational mode of HANEn is conﬁgured
for human-on-the-loop operations. Thus, the operator, through
the Global Planning Layer, has a default supervisory role
with the USI having ownership of its authority token. When
the operator and the USI are connected, the operator can
request an authority transfer to direct USI operations. When the
authority token is assigned to the operator, the Local Planning
Layer has the responsibility of monitoring its connectivity with
the operator, to promptly regain authority over the USI if
connectivity with the operator is lost for a predeﬁned length of
time. The Authority Quota knowledge structures in the global
and local Knowledge Repositories allow the operator and the
USIs to track authority ownerships. They could also deﬁne
ﬁner authority control over speciﬁc USI functions to support
the implementation of adjustable autonomy strategies [5], [19].
Finally, the Planning Layers are responsible for managing
the Local and Global Knowledge Repositories content, see
Fig. 5. Data and model management policies are deﬁned and
enforced by the Knowledge-Repository Management block.
These include data prioritization policies for exchanging data
between local and global Knowledge Repositories, and data
expiration policies that deﬁne when USI data logged in the
Local and Global Knowledge Repositories can be archived
or discarded. The Knowledge-Repository Management block
is also responsible for deﬁning behavior policies for the
communication interface that connect the USI and the operator.
Behavior policies include data-exchange schedules, allocation
of communication resources, data summarization, data com-
pression policies, and security postures.
IV.
REGIONAL PLANNING COORDINATION
This section discusses regional planning coordination using
HANEn to support a group of USI deployments, where each
USI deployment is responsible for a group of R-AUVs support-
ing IMR operations for an Undersea Oil and Gas Infrastructure
(OGI). In this scenario, the Regional USI Operator and the
OGI Manager are considered different and not necessarily co-
located roles. For instance, the USI Operator could be part of
an infrastructure-as-a-service provider for undersea operations,
while the OGI Manager is a member of an oil and gas
management company. Therefore, the scenario considered here
depicts an Internet Service Provider (ISP) network connecting
the USI Operator and the OGI Manager. Both the USI Operator
and the OGI Manager use private networks to access and
manage their infrastructure. Figure 6 shows the USIs, R-AUVs
and other OGI interacting in support of an IMR mission.
Upon receiving a request from the undersea OGI Manager
for periodic inspections, the regional USI Operator updates
the schedule of operations for the R-AUVs available in its
5
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

Figure 6. Sample HANEn deployment to support IMR operations for undersea
OGI. The OGI is managed and monitored by the OGI Manager via OGI Access
Points (OGI-APs). The regional USI Operator provides directives to the USI
and R-AUVs via the HMI offered by HANEn.
area of responsibility (AoR). The R-AUV service schedule
implicitly deﬁnes a baseline schedule of operations for the
USIs in the same AoR. The USI Operator uses the HANEn
HMI interface to upload USI mission updates. Then, HANEn
creates an updated Goal Model within each USI that aligns
with the new mission objectives. This model is created by the
Global Planning Layer and stored in the Global Knowledge
Repository. Then, it is transferred to an individual USI where it
is maintained in their Local Knowledge Repositories. The up-
dated Goal Model triggers a review of schedules and resource-
usage proﬁles within each USI to verify that the currently
available conﬁguration strategies and behavior policies can
support the new service proﬁles required by the R-AUVs given
the current USI state. The operator also notiﬁes mission and
conﬁguration updates to the R-AUVs via the USI. Updates
for the R-AUVs are passed via HANEn as a mission update
ﬁle for the R-AUV USI subsystem, which is responsible for
coordinating local interactions with R-AUVs and relaying
operation directives from the operator to the R-AUVs. Note
that in this case the authority token remains with the USI.
Figure 7 illustrates the goal-model generation and R-AUV
mission update process.
After conducting their missions, R-AUVs upload data and
inspection reports generated during the mission to the USI. The
USI is responsible for transmitting the data gathered by the R-
AUVs to the Regional USI Operator who is in turn responsible
for generating an inspection report for the OGI Manager. R-
AUVs also upload detailed resource utilization summaries to
the USI Operator who uses them for service-billing purposes.
The OGI Manager is able to remotely monitor and manage
some elements of the OGI infrastructure via strategically posi-
tioned OGI Access Points (OGI-APs). These OGI-APs enable
the OGI Manager to identify and respond to anomalies and
faults that require additional inspection, or on-site intervention
and repair. The OGI Manager sends urgent service requests
to the Regional USI Operator who sends updated mission
directives to a selected group of R-AUVs to support the OGI
Manager IMR request. Mission updates are also sent to each
USI to guarantee that the updated service proﬁle for the R-
AUVs can be supported, see Figure 7.
Mission updates for the USIs and R-AUVs are transmitted
over a network whose last-mile communications link is inter-
Figure 7. Goal Model generation based on a USI mission update introduced
by the operator, and transfer of R-AUV mission updates via the USI.
mittent and unreliable. Thus, the Global Planning Layer of HA-
NEn must carefully manage the allocation of communication
resources between the operator and the USIs. These resources
and their conﬁguration are controlled directly via the local
API for the Communications Interface (CI) available to the
operator. The USIs have a similar management responsibility
over their local CIs for managing their communications with
the Regional USI Operator.
In some cases, the OGI Manager may not be able or willing
to tolerate the long delay that the data collected by the R-AUVs
will incur when being transmitted to the OGI Manager via
the Regional USI Operator network. In this case, the latency
experienced by the data aggregates both the latency due to
delays and disruption in the network between the USI operator
and the USIs, and the R-AUV transit time back to the USI prior
to the data being delivered to it. In those cases, the R-AUVs
could use the OGI-APs to upload their data and report directly
to the OGI Manager. Not only could this approach reduce the
overall R-AUV data latencies, but it could also give R-AUVs
access to a more reliable communications infrastructure that
will allow them to upload larger volumes of sensor and actuator
data to the OGI Manager. Behavior policies executed on the
USI Operational Layer are responsible for managing the data
gathered by the R-AUVs either as backup copies of the data
sent directly to the OGI Manager or as redundant data that can
eventually be discarded.
V.
CONCLUSIONS AND FUTURE WORK
This paper proposed HANEn, a new autonomy architecture
for USI supporting R-AUV missions. HANEn enables human-
on-the-loop operations and is well-suited for scenarios where
the communications between the operator and the USI are
intermittent, and characterized by low bandwidth and high
latency. USIs using HANEn can operate autonomously, while
still allowing the operator to gain control over them as needed.
HANEn features a four-layer autonomy architecture whose
fourth layer, the Global Planning Layer, supports coordination
among multiple USIs, management of regional Knowledge
Repositories, and an HMI that enables observability and con-
trollability of the USI by an operator. A key beneﬁt achieved
by the Global Planning Layer is the persistent regional USI
management which is achieved by the effective use of the
Global Knowledge Repository and the inference tools embed-
ded in it. HANEn’s layered architectural approach separates
the decision-making processes that are conducted by the USI
according to their required execution time scales. Furthermore,
6
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

it separates the selection of conﬁguration strategies and behav-
ior policies, thereby isolating conﬁguration and functionality
concerns. The use of HANEn was discussed within the context
of IMR missions for OGI.
Future work will focus on the development of a notional
HANEn implementation with emphasis on the engineering
aspects of the Local and Global Planning Layers, and the
interaction between HANEn and the R-AUVs. As a layered
architecture, HANEn could naturally extend various self-
adaptive autonomy architectures, such as MORPH, and enable
systems using them to coordinate activities across a common
Global Planning Layer. Prior implementations of three-layer
autonomy architectures can be used as a starting point for
developing local USI autonomy. One of the major imple-
mentation challenges for HANEn lies on the intelligent use
of the communications and networking capabilities available
to connect the USI with the operator and the R-AUVs.
Communications in the maritime domain are not reliable,
often offer limited and variable communication bandwidths,
and are sensitive to environmental conditions. Synchronization
of the Local and Global Knowledge Repositories in such
operating environment may be impractical if HANEn were
to, e.g., attempt to synchronize raw sensor-data recordings.
Our initial implementation approach relies on the use of high-
resolution parametric models and bounded knowledge-graph
structures that can provide sufﬁcient information to support
the reasoning and inference functions needed at the Global
and Local Planning Layers of HANEn.
Finally, careful implementation of the Authority Manage-
ment Functions both on the Local and Global Planning Layers
is critical to avoid execution pitfalls in which the USI is unable
to regain authority over some or all of its functions, even
when the operator is disconnected from the USI. The Authority
Management Functions are critical for HANEn to enable
the operator to control the USI. Thus, they require special
safeguards to be put in place to enable the Local Planning
Layer to regain control over the USI. Similarly and from the
operator’s vantage point, authority token allocations should be
resilient to instabilities in the communications path between
the operator and the USI to avoid unnecessary authority token
transfers and the corresponding decision-making reallocations
needed as part of such transitions.
ACKNOWLEDGEMENT
This work was funded by the Naval Innovative Science and
Engineering program at the Naval Information Warfare Center
Paciﬁc.
REFERENCES
[1]
E. Ackerman, “The underwater transformer: Ex-NASA engineers built
a robot sub that transforms into a skilled humanoid,” IEEE Spectrum,
vol. 56, no. 8, pp. 22–29, Aug 2019.
[2]
A. Ahmad and M. A. Babar, “Software architectures for robotic
systems,” J. Syst. Softw., vol. 122, no. C, pp. 16–39, Dec. 2016.
[3]
R. Alami, R. Chatila, S. Fleury, M. Ghallab, and F. Ingrand, “An
architecture for autonomy,” The International Journal of Robotics
Research, vol. 17, no. 4, pp. 315–337, 1998.
[4]
V. Braberman, N. D’Ippolito, J. Kramer, D. Sykes, and S. Uchitel,
“MORPH: A reference architecture for conﬁguration and behaviour
self-adaptation,” in Proc. of the 1st International Workshop on Control
Theory for Software Engineering, ser. CTSE 2015.
New York, NY,
USA: ACM, 2015, pp. 9–16.
[5]
C. Calefato, R. Montanari, and F. Tesauri, “The adaptive automation
design,” in Human Computer Interaction: New Developments, K. Asai,
Ed.
Rijeka: IntechOpen, 2008, pp. 141–154.
[6]
M. A. Charette and W. Smith, “The volume of Earth’s ocean,” Oceanog-
raphy, vol. 23, pp. 112–114, June 2010.
[7]
M. Chitre, S. Shahabudeen, L. Freitag, and M. Stojanovic, “Recent
advances in underwater acoustic communications networking,” in IEEE
OCEANS, Sep. 15-18, Quebec City, Canada 2008, pp. 1–10.
[8]
N. A. Cruz, A. C. Matos, R. M. Almeida, and B. M. Ferreira, “A
lightweight docking station for a hovering AUV,” in IEEE Underwater
Technology, Feb. 21-24, Busan, South Korea 2017, pp. 1–7.
[9]
D. Weyns et al., “On patterns for decentralized control in self-adaptive
systems,” in Software Engineering for Self-Adaptive Systems II: In-
ternational Seminar, Dagstuhl Castle, Germany, October 24-29, 2010
Revised Selected and Invited Papers, R. de Lemos, H. Giese, H. A.
M¨uller, and M. Shaw, Eds.
Berlin, Heidelberg: Springer Berlin
Heidelberg, 2013, pp. 76–107.
[10]
S. Fan, C. Liu, B. Li, Y. Xu, and W. Xu, “AUV docking based on
USBL navigation and vision guidance,” Journal of Marine Science and
Technology, vol. 24, no. 3, pp. 673–685, Sep 2019.
[11]
M. Furuholmen, A. Hanssen, R. Carter, K. Hatlen, and J. Siesjo,
“Resident autonomous underwater vehicle systems – a review of drivers,
applications, and integration options for the subsea oil and gas market,”
in Proc. of the 11th Offshore Mediterranean Conference, Mar. 20-22,
Ravenna, Italy 2013, pp. 387–395.
[12]
D. Garlan, S.-W. Cheng, A.-C. Huang, B. Schmerl, and P. Steenkiste,
“Rainbow: architecture-based self-adaptation with reusable infrastruc-
ture,” IEEE Computer, vol. 37, no. 10, pp. 46–54, Oct 2004.
[13]
D. Garlan and B. Schmerl, “Model-based adaptation for self-healing
systems,” in Proc. of the First Workshop on Self-healing Systems, ser.
WOSS ’02.
New York, NY, USA: ACM, 2002, pp. 27–32.
[14]
E. Gat, “Three-layer architectures,” in Artiﬁcial Intelligence and Mobile
Robots, D. Kortenkamp, R. P. Bonasso, and R. Murphy, Eds.
Cam-
bridge, MA, USA: MIT Press, 1998, pp. 195–210.
[15]
B. Gilmour, G. Niccum, and T. O’Donnell, “Field resident AUV systems
– Chevron’s long-term goal for AUV development,” in IEEE/OES
Autonomous Underwater Vehicles, Sep. 24-27, Southampton, United
Kingdom 2012, pp. 1–5.
[16]
D. Goldberg, “Huxley: A ﬂexible robot control architecture for au-
tonomous underwater vehicles,” in IEEE OCEANS, June 6-9, Santander,
Spain 2011, pp. 1–10.
[17]
T. Hyakudome, “Design of autonomous underwater vehicle,” Interna-
tional Journal of Advanced Robotic Systems, vol. 8, no. 1, p. 9, 2011.
[18]
J. O. Kephart and D. M. Chess, “The vision of autonomic computing,”
Computer, vol. 36, no. 1, pp. 41–50, Jan 2003.
[19]
M. Luck, M. D’Inverno, and S. Munroe, “Autonomy: Variable and
generative,” in Agent Autonomy, H. Hexmoor, C. Castelfranchi, and
R. Falcone, Eds.
Boston, MA: Springer US, 2003, pp. 11–28.
[20]
T. Matsuda, T. Maki, K. Masuda, and T. Sakamaki, “Resident au-
tonomous underwater vehicle: Underwater system for prolonged and
continuous monitoring based at a seaﬂoor station,” Robotics and Au-
tonomous Systems, vol. 120, p. 103231, 2019.
[21]
R. B. Wynn et al., “Autonomous underwater vehicles (AUVs): Their
past, present and future contributions to the advancement of marine
geoscience,” Marine Geology, vol. 352, pp. 451–468, 2014, 50th
Anniversary Special Issue.
[22]
O. Saha and P. Dasgupta, “A comprehensive survey of recent trends in
cloud robotics architectures and applications,” Robotics, vol. 7, no. 3:
47, 2018.
[23]
J. Sverdrup-Thygeson, E. Kelasidi, K. Y. Pettersen, and J. T. Gravdahl,
“The underwater swimming manipulator - a bio-inspired AUV,” in
IEEE/OES Autonomous Underwater Vehicles (AUV), Nov. 6-9, Tokyo,
Japan 2016, pp. 387–395.
[24]
T. Ura, “AUV “r2D4”, its operation, and road map for AUV devel-
opment,” in Advances in Unmanned Marine Vehicles, ser. Control,
Robotics and Sensors.
Institution of Engineering and Technology,
2006, pp. 239–254.
7
Copyright (c) The Government of USA, 2020. Used by permission to IARIA.     ISBN:  978-1-61208-787-0
ICAS 2020 : The Sixteenth International Conference on Autonomic and Autonomous Systems

