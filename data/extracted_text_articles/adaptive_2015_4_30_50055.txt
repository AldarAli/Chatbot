ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
92
Cyber Organic System-Model – New Approach for Automotive System Design
Daniel Adam
BMW Forschung und Technik
80992 Munich, Germany
E-mail: Daniel.Adam@bmw.de
Joachim Fr¨oschl
BMW AG
80788 Munich, Germany
E-mail: Joachim.Froeschl@bmw.de
Uwe Baumgarten
Technische Universit¨at M¨unchen
Fakult¨at f¨ur Informatik
Lehrstuhl/Fachgebiet f¨ur Betriebssysteme
85748 Garching, Germany
E-Mail: baumgaru@tum.de
Andreas Herkersdorf
Technische Universit¨at M¨unchen
Fakult¨at f¨ur Elektrotechnik und Informationstechnik
Lehrstuhl f¨ur Integrierte Systeme
80290 Munich, Germany
E-Mail: Herkersdorf@tum.de
Hans-Georg Herzog
Technische Universit¨at M¨unchen
Fakult¨at f¨ur Elektrotechnik und Informationstechnik
Fachgebiet Energiewandlungstechnik
80333 Munich, Germany
E-Mail: hg.herzog@tum.de
Abstract—Modern vehicles are characterized by multiple sys-
tems to represent customer functions. The steady increase of these
functions leads to an increasing system complexity. This paper
describes a structured approach to better master the complexity
for future electric and electronic systems. The new approach
is based on a combination of two existing system models.
The ﬁrst system model is based on a cybernetic perspective
for a management approach for an electrical energy system.
The second system model is based on the work in the section
”Organic Computing” of the ”Gesellschaft der Informatik e.V.”.
In addition, principles were taken from the human body to design
this system approach. Based on these, the Cyber Organic System
model is proposed for use in automotive E/E systems. Also, this
model focuses the distribution of the overall function to the 3C
(Car, Consumer Device, Cloud) locations. Furthermore, the use of
this model in automotive software system design will be outlined
on the basis of examples.
Index Terms—Cyper Physical System; Electric and electronic
vehicle architecture; Bio-inspired computing;
I. INTRODUCTION
Currently, various approaches for the modeling of complex
systems are discussed. In the context of a vehicle data network-
ing in the sense of an overall network, the cybernetic model of
fEPM (ﬂexible Energy and Power Management) [1] and the
Organic Computing (OC) [2] model appear most promising
for automotive applications. Besides of the two mentioned
models, there are further models. One of these models is
the model of Deutsch, cited in Rittmann [3]. This model is
characterized by the combination of regulatory and memory
functions. On one hand, the fEPM model has already been
tested in a vehicle with a high degree of maturity. On the
other hand, the OC model has additional features. This paper
discusses the combination of the two models for an overall
approach for a bio-inspired software architecture for vehicles.
Because the two models have a certain similarity, we discuss
the combination of the two models into an overall approach
in this paper.
This approach should enable the homogeneous cross linking
between vehicles and the (surrounding) infrastructure. IoT
(Internet of Things) leads to a continuous increase in the
importance and relevance of cross linking. An important
feature of the cross linking structure is the distributed function
execution and the rising intelligence of these systems.
The rest of the paper is structured as follows. Section II
presents the related work. Section III describes the mapping
of the fEPM, OC model, and the COS model. Section IV
gives an overview of different scenarios of the COS model in
a vehicle. In Section V, discusses the applicability of COS in
a vehicle. Section VI summarizes the paper.
II. RELATED WORK
In this section, the two models are described, which were
combined to the COS model in the following section. In
addition, Table I shows other related models. The following
models are related: VSM (Viable System Model) from Stafford
Beer [4], NASREM (NASA/NBS Standard Reference Model
for Telerobot Control System Architecture) from NASA [5],
fEPM from Joachim Fr¨oschl [1] and OC from the Organic
Computing Initiative [2]. All of these models use the MAPE
(Monitor, Analyze, Plan and Execute) or the SMPA (Sense,
Model, Plan and Act) pattern [6], [7].
The related models don’t consider about the current devel-
opment, like IoT and Cloud. Therefore, the COS model is a
consequent enhancement under consideration of requirements
of the current developments.
A. fEPM - ﬂexible Energy and Power Management
The fEPM [8] is based on a recursive application of the
following drafted cybernetic basic model, as shown in Figure
1. This basic model is based on the VSM (Viable System
Model) from Stafford Beer [4]. It features 5 system levels.
The system level 1 is mostly deﬁned by system values. Beside

ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
93
System level 5
Operating
strategy
System level 4
Environment
+ Risk
System level 3
State
evaluating
System level 2
Operating ﬁgures
System level 1
System values
Tendencies
Interaction model
Vehicle, Driver, Environment
Vehicle
system
Reﬂex system
Fig. 1. The fEPM model.
TABLE I. OVERVIEW OF THE RELATED MODELS
VSM
NASREM
fEPM
OC
Layer #
5
6
5
5
Time
of
origin
1972
1985
2006
2010
Main
charac-
teristic
First
biological
model
2D
Layer
model
Technical
transfor-
mation
of
the VSM
Learning
ability
the physical connections, control and steering functions are
included.
The system level 2 condense the system values into operat-
ing ﬁgures.
The system level 3 determines the operating ﬁgures and
tendencies that are the analysis of the variation in time of
the system values and the operating ﬁgures, with deposited
knowledge into system states. This level contains also the
autonomous, state based system modiﬁcations for the purpose
of system stabilization.
The system level 4 combines the internal system states with
the external system states based on the environment informa-
tion under observation of the risk; although the modiﬁcation
of a higher hierarchy level is included in the same way.
The coupling of the environment information is ﬁltering the
relevant information out of the system speciﬁc environment.
The system level 5 contains the operating strategy, which
deﬁnes the conscious behavior. In this level, the regulation
values, also known as modiﬁcators, are composed [9], [10].
B. OC - Organic Computing
Figure 2 illustrates the OC model, which consists out of
ﬁve layers. The lowest layer is the physical layer, which
contains the environment, the actuators, and sensors. The
Cognitive
levels
Executive
levels
Com.-
levels
EA layer
AI layer
Reﬂex
layer
Physical
layer
1.
2.
3.
4.
5.
Observer
Controller
Observer
Controller
Standard
controller
CU
Communication
(Virtual environment)
SuOC
(Real environment)
Primarily
Secondary
Dataﬂow
Off Board
On Board
Fig. 2. Reference Model of the OC model (Source: [2]).
second layer is the reﬂex layer, a kind of protection layer
to ensure fast and correct reaction. The third layer is an
AI (Artiﬁcial intelligence) layer, which is responsible for
quick responses to unfamiliar situations. The fourth layer
is the EA (Evolutionary Algorithm) layer to generate long
term strategies by using evolutionary approaches - selection,
mutation and recombination, - and simulation. The ﬁfth and
topmost layer is used to communicate with other components.
This communication happens mainly through different (data)
models (environmental, vehicle, and driver model), which
enables modeling the real world abstract. This layer contains
an image of the lowest layer of [2].
III. MAPPING AND DESCRIPTION OF THE COS MODEL
In this section, the identiﬁed modules from the fEPM and
OC models are explained. This identiﬁcation of the modules
is the necessary basis for mapping these two models. A
fundamental fact is to divide the modules to related modules
with similar behavior and properties. This implies that any
property or object is not included in both approaches. Func-
tional properties of the two models are targeted to combine
so that a new model is created with a bigger functional
scope. Figure 3 illustrates the mapping of each module. For
traceability reasons, each module has its own identiﬁer. We
introduce these identiﬁers in the description of the modules
(see subsection III-A), which will be used in the description
section of the COS (see subsection III-B).
A. Modules
Consecutively, the particular modules are compared in de-
tail, to deﬁne the COS model afterwards.

ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
94
System level 5
Operating
strategy
System level 4
Environment
+ Risk
System level 3
State
evaluating
System level 2
Operating ﬁgures
System level 1
System values
Tendencies
Interaction model
Vehicle, Driver, Environment
Vehicle
system
Reﬂex system
Cognitive
levels
Executive
levels
Com.-
levels
EA layer
AI layer
Reﬂex
layer
Physical
layer
1.
2.
3.
4.
5.
Observer
Controller
Observer
Controller
Standard
controller
CU
Communication
(Virtual environment)
SuOC
(Real environment)
Primarily
Secondary
Dataﬂow
Off Board
On Board
1
1
2
2
3
3
3
4
4
5
5
6
6
7
7
7
8
8
8
9
9
9
9
Fig. 3. Mapping between the OC and the fEPM model
1) Sensors (1a): This module includes in both approaches
the necessary sensors or other general information sources that
are necessary for the investigation of relevant data or system
values.
2) Actuators (1b): This module includes in both approaches
the necessary actuators and general actuator elements that are
necessary for the relevant system modiﬁcations.
3) Environment (2): With the environment, all inﬂuences
from outside the system border are referred. This means on
one hand the acquisition and on the other hand the impact
of the environment. In both approaches, a real and virtual
environment can be distinguished.
a) Real environment (2r): Within the real environment
the physical objects are included.
b) Virtual environment (2v): Within the virtual environ-
ment instances respective models of the relevant physical
objects from the real environment are necessary for the corre-
sponding functions. Because the fEPM makes no distinction
between a virtual and a real environment, such differentiation
is implemented into the OC module.
4) Data analysis (3a-c): This means that the internal sys-
tem values should be analyzed. Depending on the system level,
the abstraction level changes and a different view on data
analysis and data calculation is necessary.
5) Limitation (physical) (4): To avoid data overﬂow within
the modiﬁcation the so called modiﬁcators are limited in the
ﬁrst step of propagation.
6) State evaluating (reﬂex) (5): Within this level, an assess-
ment of the system values, operating ﬁgures, and tendencies is
done. If these parameters are out of a deﬁned range, taking care
this layer to use values these are within the range of values.
The allowed range is deﬁned by tolerability borders wherein
the system is able to fulﬁll explicit operating strategies. If the
values are moving out of the deﬁned range, a system reaction
has to be initiated like a reﬂex for stabilizing itself. In a human
organism this behaviour is called homeostasis [11].
7) Reﬂex (execution) (6): To stabilize the system, im-
mediate and direct reactions are necessary. In addition, the
operating strategy deﬁnes the self-awareness behavior, where
some actions must be blocked.
8) Conscious behavior (7): When the system is in a stable
state, the system works with a conscious behavior, for example
as an operating strategy. While in the fEPM model only one
level of conscious behavior is implemented, in the OC-model
there are two levels that exist. The lower AI level is conform
to the system level 5 of the fEPM model. The upper EA
level contains additional evolutionary algorithms to construct a
long range operating strategy performance result. Therefore, a
higher degree of learning aptitude and self-dependence within
the functionality should be enabled.
9) Aggregation of data (8a-c): The accumulated data are
collected for an increase of information entropy. The differ-
ence in a-c is done in the same matter and argumentation is
done similarly in data analysis.
10) Recursivity: Both approaches can be used in a recursive
way to reduce complexity. With the use of recursion, the higher

ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
95
instances are unloaded and the lower instances are reinforced
to their self-dependence. The lower instances have their own
duties and freedom of action. This autonomy is based on the
principle of subsidiarity and enables a federal distribution of
functionality. This enables a higher capacity of action shown
in the example of the OC model in Figure 5.
B. Cyber Organic System Model
The discussed modules can be combined to the cyber
organic system model, called COS model represented in Figure
4. Therefore, the single key features of the identiﬁed levels are
drafted and dedicated to the modules consecutively.
Therefore, it is possible that the left and the right side of
the model can be implemented on different Electronic Control
Units (ECUs). It is also possible to omit some levels of the
model.
1) Communication level: Here, the instructions to the sys-
tem behavior are partially calculated from modules of a higher
hierarchy level and partially from calculated modules of the
same hierarchy level received. Furthermore, calculated data
with partially higher data entropy is delivered. The different
communication partners could stay within the vehicle (on
board) or outside the vehicle (off board).
Also, the modules 2v, 3c, 8c are included.
2) Intelligence level: This level includes the speciﬁc data
processing within the observer unit and a simulation unit
within the control unit to learn a long term operating strategy.
An additional validation unit is necessary to validate the
data and information, which are developed on non-functional
veriﬁed components.
Also, the modules 2v, 8b are included.
3) Strategy level: Within this level, the learned operating
strategy from the intelligence level is used to execute a
conscious behavior in a fast and optimal way. Therefore,
the necessary information is processed in the observer unit
demanded by the control unit.
Also, the modules 2v, 8a are included.
4) Reﬂex level: In this level, a ﬁrst and fast analysis in the
observe unit (OU) is executed. If necessary, a reﬂex reaction is
immediately initiated. Similar to the human nerve system the
conscious behavior is blocked or overruled within the control
unit (CU). The human nervous system is spoken of a inhibitory
interneuron [12]. Thus, effects self-awarness, - self-protection,
and self-stabilization - of the system. In opposite to both higher
levels, – intelligence and strategic level – ﬁxed reﬂexes are
used based on an identical data acquisition. Therefore, the
freedom of action and possibilities of calculation are limited.
Also, modules 5 and 6 are included.
5) Objects layer: Within this level, the data sources and
drains of the function model are implemented. On one hand
a real hardware for sensors and actuators can be used. On the
other hand further software subsystems (e.g. COS stacks) can
be embedded.
Also, modules 1a, 1b, 2r and 4 are included.
Reﬂex
layer
Com.
layer
Intelligence
layer
Strategy
layer
Objects
layer
Observer
Controller
Validator
Observer
Controller
Reﬂex
CU
OU
Communication
(Virtual environment)
SW subsystems
(Data communication)
Sensors/Actuators
(Real environment)
Fig. 4. Structure of the Cyber Organic System model.
Fig. 5. Degree of variability and autonomy of a OC model in dependence
on the system topology (Source: [2]).
IV. THE CYBER ORGANIC SYSTEM MODEL IN VEHICLE
On one hand, the consideration of a function with a COS
model is possible. On the other hand using the recursion
principle a complete system with many different functions is
also possible. First, the complexity of the entire system is
reduced. Second, the degree of autonomy and the variability
is increased (see Figure 5) [2].
The layered architecture of the COS model enables a ﬂexible
and temporary relocation of (partial) functionalities or groups
towards further locations (3C).
In the actual hierarchy formation several approaches are
possible: a centralized and decentralized approach. This is
application may be dependent on not only the platform or
model, but even on the equipment of actual vehicle.

ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
96
Vehicle Master
Information&
Communication
master
Driving
master
Body
master
Body&
Comfort
master
Sensor
master
Fig. 6. Central approach in the full vehicle with the COS model.
In the centralized approach, there is a vehicle master at
the top of the hierarchy and each function is arranged di-
rectly or indirectly under this master. In the decentralized
approach, independent groups of functions are set up, which
also have recursive structures. The extreme case is only having
one function in the group. A division of the functions is
possible in either domain, see Doman Controller approach
according [13], or functional point of view. The size of
the groups probably depends on the functions and domain.
Different behaviors already exist between domains, as an
example, the scaling functions mentioned. With scaling, the
functional scope changes. This is reasonable, because of the
larger range of functions in the vehicle. A second reason is
that existing functionality is being extended. Therefore, their
functionality is growing. Which, in turn, results in changes
of the partitioning. For example, the light control can be
considered. A standard front light requires a smaller software
scope, as a xenon or laser light. Another example of the
equipment variant can be made the variety of a seat. From pure
mechanisms over an electrically adjustable up, to a fully air-
conditioned seat with a massage function. While the functions
are partitioned at a high scale, a plurality of control devices
in a domain matching in another domain are the same case,
a high integration strategy is followed. In the case of high
integration, several (independent) functions will be combined
on one electronic control unit [14].
Figures 6, 7 and 8 outline the different organization options
within a vehicle. The topmost element of each organization
structure is the coordinator of the underlying elements and
the communication partner to another vehicle or cloud. The
organization structure depends on the conﬁguration of every
vehicle. Probably, neither of the two extreme approaches
will be usedInstead, a hybrid approach between both, which
frequently occurs in distributed systems, will be used.
V. DISCUSSION
When the two approaches are compared, it indicates that the
fEPM approach has a high similarity with the OC approach,
as listed in Table II.
The fEPM model follows a single-generation and an indi-
vidual approach. The OC model follows a multi-generational
approach. This difference is given by the fact that the OC
approach has besides the strategy an intelligence layer to
Engine
management
Transmission
management
Break
management
Energy
management
IVI (In-vehicle
infotainment) management
Fig. 7. Decentral approach in the full vehicle with the COS model.
Drive Management
Engine
management
Transmission
management
Break
management
Energy
management
IVI (In-vehicle
management)
Fig. 8. Hybrid approach in the full vehicle with the COS model.
generate completely new strategy plans through evolutionary
algorithm. Also, the fEPM works only with two (online)
timeframes. In contrast, the OC approach has three timeframes.
In addition to the two online timeframes, an ofﬂine timeframe
exists, which generates completely new strategy plans. This
results in a self-development of the strategy. This leads to
a continuous system improvement through targeted objective
adjustments and optimization.
TABLE II. TAKS AND FUNCTIONS FOR DATA DISTRIBUTION AND
PROCESSING
fEPM
OC
1 generation and 1 individual
Multi-generational
approach
and
mutli individuals
Operating strategy is in the system
level 5
Operating strategy is in the AI
layer
Validation is doing in the switch
and limit unit
Strategy adaptation
Strategy generation
2 Timeframes
•Online (short term/Reﬂex) (S3)
•Online (medium term/Awareness)
(S5)
3 Timeframes
•Online (short term/Reﬂex) (Re-
ﬂex layer)
•Online (medium term/Awareness)
(AI layer)
•Ofﬂine (long term/Self generation
of new strategies) (EA layer)
Furthermore, the modular structure of the COS model
allows transparent segmentation for the actual function. This
enables a ﬂexible partitioning to various control devices or
other locations - the 3C locations. This ﬂexibility can not only
be used in the development, but also during the operation of a
temporary relocation of individual layers is possible. Table
III shows a possible distribution of the different layers at
the 3C locations. The decisive factors are from today’s per-

ADAPTIVE 2015 : The Seventh International Conference on Adaptive and Self-Adaptive Systems and Applications
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-391-9
97
spective: communication times, deadlines, energy consump-
tion, safety requirements (Veriﬁcation and certiﬁcation of the
components), and the necessary computing power. In order
to fulﬁll the requirements of the ISO 26262 (Road vehicles -
Functional safety), approaches or related norms from other in-
dustries, for example, from the railway and chemical industry,
can be applied. The following norms should be mentioned:
EN 50159 (Railway applications - Communication, signaling
and processing systems), IEC 61508 (Functional Safety of
Electrical/Electronic/Programmable Electronic Safety-related
Systems) or IEC 62443 (Industrial communication networks -
Network and system security). Through these approaches, SIL
3 (Safety Integrity Level) requirements can be fulﬁlled or made
higher. This corresponds to the highest ASIL (Automotive
Safety Integrity Level) [15]. This is taken into account the
Validator in the intelligence layer.
Because of the software scopes (Lines of code) and the
required computing power, the necessary functional validation
for the simulation, the intelligence layer is not realizable for all
of its functions. In order to ensure operational safety, the COS
model contains a Validator. The Validator is used to verify the
results from the simulation of a non-functional or unsafe area
to use in a functional protected area according ISO 26262.
TABLE III. POSSIBLE PARTITIONING OF THE INDIVIDUAL LAYERS
ON THE 3C LOCATIONS
Layer
Car
Consumer Device
Cloud
Reﬂex
X
(X)
Strategy
X
X
X
Intelligence
(X)
X
X
Legend:
X = Without any restrictions (X) = Possible with restrictions
VI. SUMMARY
The resemblance of the two models - fEPM and OC - allows
a merge into the COS model, which combines the properties
of the two models. Due to the same objects and features of the
models from the two approaches, the uniﬁcation could be done
with little effort. In addition to the outline of the two models,
there was a modularized representation of COS models and a
ﬁnal exemplary application for partitioning functionality in a
vehicle.
Furthermore, it was already the (detailed) implementation
and use considered, there were many analogies to the func-
tioning of the human body. Also, the CU unit came in consid-
eration the principles of the human body in the COS model. As
added value of the combination and the analogies we expected,
a revolution of further development of the vehicles system
to something like humans, is considered the highest stage of
evolution.
The future work should be an implementation and an
evaluation of the COS model within a vehicle architecture.
The ﬁrst step is the implementation of selected functions. The
second step is the implementation of a representative set of
vehicle functions. As a basis for the implementation the results
of the development of the fEPM model can be used.
REFERENCES
[1] J. Fr¨oschl and H.-G. Herzog, “A new kind of an Energy Management
System,” Bad Boll, April 2015.
[2] C. Mueller-Schloer, H. Schmeck, and T. Ungerer, Organic Computing -
A Paradigm Shift for Complex Systems.
Springer, Apr. 2011, ISBN:
978-3-0348-0130-0.
[3] G. Rittmann, Der Umgang mit Komplexitt: Soziologische, politische,
konomische und ingenieurwissenschaftliche Vorgehensweisen in vergle-
ichender systemtheoretischer Analyse.
Nomos, ISBN: 9-783-8487-
0990-8.
[4] S. Beer, Brain of the Firm. Chichester, England; New York: John Wiley
& Sons, Jun. 1995, ISBN: 978-0-4719-4839-1.
[5] J.
S.
Albus,
H.
G.
McCain,
and
R.
Lumia,
“NASA/NBS
standard reference model for telerobot control system architecture
(NASREM),”
NBS/NIST
Technical
Notes,
no.
1235,
1987,
pp.
1
–
98,
Last
Accessed:
2015-02-15.
[Online].
Available:
http://archive.org/details/nasanbsstandardr1235albu
[6] IBM,
“An
Architectural
Blueprint
for
Autonomic
Com-
puting,”
IBM,
Tech.
Rep.,
Jun.
2005,
Last
Ac-
cessed:
2015-02-15.
[Online].
Available:
http://www-
01.ibm.com/software/tivoli/autonomic/pdfs/AC Blueprint White Paper
4th.pdf
[7] J. Hertzberg, H. Jaeger, U. Zimmer, and P. Morignot, “A framework for
plan execution in behavior-based robots,” in Intelligent Control (ISIC),
1998. Held jointly with IEEE International Symposium on Compu-
tational Intelligence in Robotics and Automation (CIRA), Intelligent
Systems and Semiotics (ISAS), Proceedings.
IEEE, Sep. 1998, pp.
8–13, ISBN: 0-7803-4423-5.
[8] T. P. Kohler, J. Fr¨oschl, and H.-G. Herzog, Systemansatz fur ein hierar-
chisches, umweltgekoppeltes Powermanagement, C. Hoff and O. Sirch,
Eds.
Renningen: expert Verlag, ISBN: 9-783-8169-3010-5.
[9] T. Kohler, J. Fr¨oschl, and H.-G. Herzog, “Systemansatz f¨ur ein hierar-
chisches, umweltgekoppeltes Powermanagement,” in Elektrik/Elektronik
in Hybrid- und Elektrofahrzeugen, O. Sirch, Ed. Haus der Technik e.V.,
2010, ISBN: 9-783-8169-3010-5.
[10] T. P. Kohler, Pr¨adiktives Leistungsmanagement in Fahrzeugbordnetzen.
Berlin Heidelberg New York: Springer, 2014, ISBN: 978-3-6580-5012-
2.
[11] A. Faller and M. Schuenke, The Human Body: An Introduction to
Structure and Function, 1st ed.
Georg Thieme Verlag, April 2004,
ISBN: 9-781-5889-0122-4.
[12] J. S. Schwegler and R. Lucius, Der Mensch - Anatomie und Physiologie.
Georg Thieme Verlag, Jul. 2011, ISBN: 9-783-1316-8935-1.
[13] H. Krimmel, H. Deiss, W. Runge, and H. Sch¨urr, “Electronic networking
of driveline and chassis,” ATZ worldwide, vol. 108, no. 5, 2006, pp. 5–8,
ISSN: 2192-9075.
[14] D. Adam, S. Tverdyshev, C. Rolfes, T. Sandmann, S. Baehr, O. Sander,
U. Baumgarten, and J. Becker, “Two Architecture Approaches for MILS
Systems in Mobility Domains (Automobile, Railway and Avionik),” in
International Workshop on MILS: Architecture and Assurance for Secure
Systems, Amsterdam, Jan. 2015.
[15] R. Bris, C. G. Soares, and S. Martorell, Reliability, Risk, and Safety,
Three Volume Set: Theory and Applications.
CRC Press, 2009, ISBN:
9-780-2038-5975-9.

