Gaussian Fitting of Multi-scale Trafﬁc Properties
for Discriminating IP Applications
Eduardo Rocha, Paulo Salvador and Ant´onio Nogueira
University of Aveiro/Instituto de Telecomunicac¸˜oes
Aveiro, Portugal
e-mails: {eduardorocha, salvador, nogueira}@ua.pt
Abstract—In the last years, there has been an increasing
need to accurately assign trafﬁc to its originating application
or protocol. Several new protocols and services have appeared,
such as VoIP or ﬁle sharing, creating additional identiﬁcation
challenges due to their peculiar behaviors, such as the use
of random ports or ports associated to other protocols. The
number and variety of security vulnerabilities and attacks that
are carried out over the Internet has also drastically increased in
recent years. Besides, privacy and conﬁdentiality are also growing
concerns for Internet users: trafﬁc encryption is becoming widely
used and, therefore, access to the user payload is more and
more difﬁcult. Therefore, new identiﬁcation methodologies that
can be accurate when applied to different types of trafﬁc and
be able to operate in cyphered trafﬁc scenarios are needed.
In this paper, we present an identiﬁcation methodology that
relies on a multiscale analysis of the trafﬁc ﬂows, differentiating
them based on the probability that their characteristic multiscale
behavior estimators belong to speciﬁc probability distributions
whose parameters are inferred from trafﬁc ﬂows of real ap-
plications. The classical concept of trafﬁc ﬂow was replaced
by the deﬁnition of data stream, which consists of all trafﬁc
(in the upload or download directions) of a local IP address
that is univocally identiﬁed by a numeric identiﬁer. The results
achieved so far show that the proposed methodology is able to
accurately classify licit trafﬁc and also identify some of the most
common Internet security attacks. Besides, this approach can also
circumvent some of the most important drawbacks of existing
identiﬁcation methodologies, namely their inability to work under
strict conﬁdentiality restriction scenarios.
Keywords:
Application
identiﬁcation,
multiscale
analysis,
wavelets, licit and illicit applications.
I. INTRODUCTION
Classifying Internet trafﬁc is a critical task for many areas,
such as trafﬁc engineering, Quality-of-Service (QoS), access
control and security/intrusion detection. In recent years, the
emergence of diversiﬁed and demanding applications made
some of the mostly used classiﬁcation methodologies (like
port-based classiﬁcation or payload inspection) inadequate.
Besides, the number and diversity of attacks to hosts and
services in the Internet increased in a dramatic way. Among
these new threats, botnets are some of the most severe and
dangerous [24], being responsible for some of the most
stealth attacks, such as Distributed Denial-of-Service, Spam
and phishing e-mails [4], [7], [6]. A botnet is a network
of compromised computers under the control of a master,
the bot master, which issues commands to the compromised
hosts. Usually, these communications are encrypted, which
poses a signiﬁcant obstacle for Intrusion Detection Systems
(IDSes). Moreover, the distributed nature of these attacks and
the evolving (from centralized to distributed) structure of the
botnets [16] also makes them extremely difﬁcult to prevent.
This paper presents a new technique for identifying licit
and illicit trafﬁc ﬂows based on the classiﬁcation of different
multi-scale behavior estimators. The classiﬁcation method-
ology relies on the probability that these estimators belong
to a Gaussian distribution whose parameters are inferred
from trafﬁc ﬂows of the real applications. This approach
presents several advantages over existing ones, namely its
compliance with privacy issues since only packet headers
at the IP and/or IP security protocols levels are analyzed.
This work is an extension of a previous work [28] that also
analyzed the multi-scale behavior of sampled ﬂows generated
by different applications using a kind of ”blind” clustering
to classify the multi-scale coefﬁcients’ estimators. Here, we
assume that these estimators follow a Gaussian distribution and
use a probabilistic methodology to classify them, thus being
able to discriminate their underlying generating applications.
Besides the three widely used Internet applications that were
also considered in [28] (web-browsing, video streaming and
BitTorrent), we also include two of the most common attacks
that are used by botnets: (i) port scanning and (ii) snapshots
of the users’ desktops. The classiﬁcation results that have
been already obtained show that the proposed approach is
very promising, while being immune to some of the main
disadvantages of current detection methodologies.
In order to be able to classify the different interactions that
an application creates, which may consist of several sessions
with different end-hosts/servers (and we strongly believe that
the analysis of these interactions as a whole provides a deeper
insight into how the applications behave and can assist in
trafﬁc discrimination), the restrictive classical deﬁnition of
ﬂow was replaced by the deﬁnition of data stream, which
consists of all trafﬁc (in the upload or download directions) of
a local IP address that is univocally identiﬁed by a numeric
identiﬁer.
The remaining part of this paper is organized as follows:
Section II presents some related work in the ﬁelds of trafﬁc
classiﬁcation and attacks identiﬁcation, Section III presents
some background on wavelets and multiscale analysis, Section
IV presents the details of the identiﬁcation methodology; Sec-
tion V presents some identiﬁcation results that were already
obtained in order to evaluate the efﬁciency of the proposed
methodology and, ﬁnally, Section VI presents some brief
6
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

conclusions about the conducted work.
II. RELATED WORK
The issue of trafﬁc classiﬁcation has been studied for many
years and many techniques have been proposed to address this
problem. In an early stage, trafﬁc was classiﬁed according
to the ports used for communication. However, this analysis
became inaccurate when new protocols, such as BitTorrent or
VoIP protocols, started to use random ports or ports associated
to other applications. In fact, in a study conducted by [21],
port-based techniques were unable to classify most of the
network trafﬁc that was generated by Peer-to-Peer (P2P) pro-
tocols. Payload analysis was one of the techniques proposed
to overcome this limitation. It consists on the inspection of
the packet’s payload searching for characteristic signatures
that can identify the generating protocol. A study carried out
in [14] used this technique to identify P2P trafﬁc and the
results achieved were very accurate. In another work [30],
digital signatures were also used to classify P2P trafﬁc. The
results achieved were very accurate and the authors proved
that the proposed methodology can be effective in high-
speed networks. However, in recent years, trafﬁc encryption
is becoming widely used to guarantee the conﬁdentiality of
the exchanged data in the Internet and, therefore, in these
scenarios the packet payload is no longer accessible. Besides,
when trafﬁc is not encrypted the access to the packet’s payload
may not be allowed due to privacy restrictions.
Statistical analysis of trafﬁc ﬂows appeared as a solution that
could overcome these restrictions, since only the headers of the
packets are analyzed. The main concept of this approach is that
trafﬁc generated by the same protocol will present the same
proﬁle. Karagiannis et al. tried to identify P2P trafﬁc based
on a three-level analysis: social, functional and application
levels. The accuracy of the obtained results was very high
[15]. In another work [13], the authors built behavioral proﬁles
that describe dominant patterns of the studied applications and
the results showed that this approach was quite promising. In
[21], the authors only analyzed the TCP SYN, FIN and RST
ﬂags in order to obtain connection-level information about
P2P trafﬁc. This technique has several inherent drawbacks:
trafﬁc presenting unknown behavior cannot be classiﬁed; when
trafﬁc is transported through a secure tunnel, the port numbers
and the TCP ﬂags may not be available and, consequently,
classiﬁcation is not possible.
In the last years, the number of security vulnerabilities
and attacks increased at a dramatic rate [29]. Botnets have
emerged and became one of the most dangerous threats to
on-line security, being used for a wide variety of illegal
activities such as DDoS, Spam, ﬂooding attacks and exploit
scanning, just to name some of them [22]. Besides, they are
undetected by anti-virus software and IDSes [4]. Most IDSes,
such as Snort [2], perform intrusion detection based on the
recognition of signatures and known patterns from security
attacks. This can constitute an accurate detection methodology,
but these defense mechanisms cannot detect zero-day threats
and attacks with unknown proﬁles [17]. Of course, IDSes can
protect their networks by classifying any trafﬁc pattern that
deviates from an already known normal proﬁle as an attack.
Although this strategy could make them able to detect zero-
day attacks, the detection accuracy would decrease since some
of these ”abnormal” proﬁles may be originated by legitimate
user actions.
The structure of the botnets is also evolving, becoming more
complex and distributed. For instance, the C&C infrastructure
evolved from a centralized one, in which IRC protocols were
used for communication, to a distributed one where P2P proto-
cols and networks are used. Moreover, these communications
can also be embedded in the HTTP protocol. Therefore, the
detection of these networks is becoming more difﬁcult and
new methodologies are needed for their accurate detection.
Several studies have been conducted in order to collect,
analyze and understand how botnets work: [5] studies the com-
munications between the Command and Control (C&C) server
and the infected machines; [25] analyzed the network behavior
of spammers; [8] conducted several basic studies of botnet
dynamics; [9] proposed to use DNS sink holing technique for
botnet study and pointed out the global diurnal behavior of
botnets; ﬁnally, [6] studied the relationship between botnets
and scanning/spamming activities.
Based on this knowledge, different approaches have been
proposed to solve the botnet detection problem: in [26], the
authors used DNS-based black hole list counter-intelligence to
ﬁnd botnet members that generate spam; in [27], the authors
proposed a system to detect malware (including botnets) by
aggregating trafﬁc that shares the same external destination,
have a similar payload and involves internal hosts with sim-
ilar OS platforms; [20] proposed a machine learning based
approach for botnet detection using some general network-
level trafﬁc features of chat-like protocols, such as IRC; ﬁnally,
[12] describes BotHunter, which is a passive botnet detection
system that uses dialog correlation to associate IDS events to
a user-deﬁned bot infection dialog model.
III. WAVELETS AND MULTISCALE ANALYSIS
A wavelet ψ(t) can be deﬁned as a pass-band function
oscillating at a central frequency f0. By performing a scaling
change, which may consist of an expansion or a compression,
and a temporal shift, we obtain ψj,k(t) = 2−j/2ψ(2−jt − k),
that is the oscillating central frequency moves to 2−jf0 and
the origin of the temporal reference to 2jk. Note that j
represents the temporal scale, k represents the kth coefﬁcient
corresponding to scale j, with j0 being the larger time scale.
Wavelet decomposition also uses a low-pass function, φj0,k(t),
known as scaling function, that can be scaled and temporarily
shifted in a similar way to function ψj,k(t). Therefore, the
deﬁnition of the Discrete Wavelet Transform (DWT) of a
stochastic process X(t) is [11]:
X(t) =
X
k
cX(j0, k)φj0,k(t) +
∞
X
j=j0
X
k
dX(j, k)ψj,k(t) (1)
where cX(j0, k) are the scaling coefﬁcients and dX(j, k) are
the wavelet coefﬁcients. The estimators for the ﬁrst order
moment of the wavelet coefﬁcients can be deﬁned as:
7
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

µj = 1
nj
nj
X
k=1
|dX(j, k)|
(2)
where nj is the number of coefﬁcients to be analyzed at scale
j. The scaling behavior of any stochastic process can then be
studied by an analysis of the Logscale diagrams, which consist
of logarithm plots of these estimators with the scales [3].
As mentioned in Section I, phenomena such as Short-Range
Dependence (SRD) and Long-Range Dependence (LRD) have
been studied in several works. In [18] can be fond the
ﬁrst evidence that network trafﬁc has self-similar character-
istics. In [23], several TCP statistics, such as session and
connection arrivals, were analyzed and self similarity was
found in many traces. In [32], the authors provided several
measurements which showed that network trafﬁc exhibits self-
similar behavior. Physical features of communication networks
were also presented to explain such behavior. In [31], time-
series extracted from network trafﬁc were proven to exhibit
LRD. Feldmann et al. investigated several aspects of user and
network behaviors contribute to the scaling regimes in WAN
trafﬁc [10].
IV. IDENTIFICATION METHODOLOGY
Our work aims at classifying the several interactions that
an application creates, which may consist of several sessions
with different end-hosts/servers. We believe that the analysis
of such interactions as a whole can provide a deeper insight
into how the applications behave and can assist in trafﬁc
discrimination. To be able to perform such study, the classical
deﬁnition of a ﬂow, the 5-tuple, becomes too restrictive since
it does not capture all the mentioned interactions. Therefore,
we used the deﬁnition of data stream, which consists of all
trafﬁc (in the upload or download directions) of a local IP
address and univocally identiﬁed by a numeric identiﬁer. This
data stream numeric identiﬁer is: (i) for unencrypted trafﬁc,
a speciﬁc TCP/UDP (local or remote) port number and (ii)
for encrypted trafﬁc, the Security Parameters Index (SPI) in
ESP headers in case of IPsec tunnels or any other speciﬁc
identiﬁer of IP-level encrypted tunnel technology. Therefore,
data streams are uniquely identiﬁed by a 2-tuple (IP address,
unique identiﬁer). Other important deﬁnitions in our work are
the known data streams which consist of streams, as previously
deﬁned, analyzed a priori to determine its origin applica-
tion(s). On the other hand, let us deﬁne the unknown data
streams as a trafﬁc stream created by an unknown application.
Several stochastic processes (and respective statistics) can be
extracted from these data streams, which, in this work, will be
processed by a DWT, as described in Section III, in order to
obtain the estimators deﬁned in (2). Since the applications that
generated the analyzed trafﬁc might have different network
conditions, these estimators were normalized to zero mean:
ˆµj = µj −
J
X
j=1
µj
J
(3)
in which J represents the number of scales considered
for analysis. In the following lines we will present some
more deﬁnitions. For instance, let A represent the number
of known applications, M represent the number of unknown
data streams that we want to classify and N correspond to
the number of known data streams. Let pi,a, a = 1, ..., A
designate the probability that the unknown stream i belongs
to the Gaussian distribution inferred from the known streams
of the application a. Let Ea,j = {ei
a,j, i = 1, . . . , N} and
Uj = {ui
j, i = 1, . . . , M} represent the normalized estimators,
as deﬁned in (3), for the ﬁrst order moment of the wavelet
coefﬁcients of a stochastic process, respectively, extracted
from a known data stream i of the application a at the scale
j and extracted from a unknown data stream i at the scale j.
The proposed methodology assumes that Ei
a,j and Uj, for all
j and a, follows a Gaussian distribution. Therefore, let
Pi,a,j =
Z ui
j+∆
ui
j−∆
1
q
2πσ2
a,j
e
(
−(u−ea,j )2
2σ2
a,j
)
du
(4)
represent the probability that the estimator of the unknown
stream i, of the scale j, is within a neighborhood of width
2∆, centered on itself originated by a distribution whose
parameters, ea,j and σ2
a,j, are empirically inferred from the
known data streams of an application a:
ea,j = 1
N ΣN
i=1ei
a,j
(5)
σ2
a,j =
1
N − 1ΣN
i=1(ei
a,j − ea,j)2
(6)
The probability Pi,a,j is then computed for all unknown
streams and for all distributions inferred from the known
streams studied applications, for each scale of analysis.
Subsequently, it is possible to compute Pi,a as:
Pi,a =
J
Y
j=1
Pi,a,j, a = 1, ..., A; i = 1, ..., M
(7)
Finally, an unknown data stream i, i = 1, . . . , M, is
associated with application α, α = 1, . . . , A, such that
∃α, Pi,α = max
a [Pi,a].
(8)
V. RESULTS
In this Section we present the obtained results from sev-
eral trafﬁc data streams extracted from: (i) licit TCP and
UDP trafﬁc traces passively collected at the University of
Aveiro network on September 15, 2008 and (ii) illicit traces
experimentally generated in laboratory simulating some of
the most relevant botnet uses. The licit applications data
streams extracted (and classiﬁed a priori) from the trafﬁc
collected were ﬁle-sharing (BitTorrent), video streaming and
HTTP (browsing). Figures 1 to 3 present the variation of the
number of bytes in the upload and download directions for the
mentioned applications. The illicit trafﬁc was experimentally
generated in our lab in an attempt to simulate some of the most
relevant reconnaissance attacks. The NMAP [1] ﬂows were
generated using a discrete scan proﬁle in order to replicate a
typical botnet port scan that tries to evade IDS detection and
8
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

0
500
1000
1500
2000
2500
3000
0
0.5
1
1.5
2x 10
5
Sampling Interval
Number of Bytes
Figure 1.
Number of bytes for a Torrent ﬂow.
0
500
1000
1500
2000
2500
3000
0
0.5
1
1.5
2x 10
5
Sampling Interval
Number of Bytes
Figure 2.
Number of bytes for a Streaming ﬂow.
scan hosts and networks, bypassing their ﬁrewalls and proxies.
Therefore, we performed a sequential port scan with one
second of interval between (SYN) probes and a waiting time of
15 seconds before start scanning a new machine. The Snapshot
ﬂows were generated by emulating the capture of a ﬁxed
size small image (335x180 pixels, 120KBytes) of the user’s
desktop around the cursor every time the user performed a
click. We assumed that the user was browsing the Internet and
performed a click with an exponentially distributed interval
with average equal to 120 seconds [33]. The ﬂows of these
applications are presented in Figs. 4 and 5, respectively.
In this case, the values analyzed were the overall number
of transmitted bytes, independently of direction. The extracted
data streams were 5 and 15 minutes long and were divided in
known and unknown streams, however, the real classiﬁcation
of all streams was kept for validating the classiﬁcation results
of the unknown streams. Now let us present the values of
the several variables deﬁned in Section IV. The number of
application considered was 5 (A = 5). The number of known
streams, N, used for inferring the parameters of the Gaussian
distributions was 30 and the number of unknown streams, M,
was 80, for each application. The value of the interval ∆ used
was 0.1.
The known and unknown streams were analyzed via a DWT
in order to obtain the estimators for the ﬁrst order moment of
the wavelet coefﬁcients. The ﬁrst mentioned values were then
used to validate the assumption that the estimators for the ﬁrst
order moment of the wavelet coefﬁcients, for each application
and scale, follow a Gaussian distribution. The test used was the
Lilliefors goodness-of-ﬁt test which veriﬁes the null hypothesis
0
500
1000
1500
2000
2500
3000
0
2000
4000
6000
8000
10000
12000
Sampling Interval
Number of Bytes
Figure 3.
Number of bytes for an HTTP ﬂow.
0
500
1000
1500
2000
2500
3000
0
50
100
150
200
250
Sampling Interval
Number of Bytes
Figure 4.
Number of bytes for a NMap ﬂow.
that the sample in a vector comes from a distribution in the
Gaussian family, against the alternative that it does not [19].
All the tests did not reject the null hypothesis, that is, all the
estimators can be approximated by a Gaussian distribution.
The classiﬁcation results were computed by comparing the
classiﬁcation achieved with the proposed methodology with
the real application. In the ﬁrst part of our results, we consid-
ered the 5 minutes long data streams. We only used the ﬁrst 5
scales since at higher scales the estimators of all applications
tend to converge. Figures 6 and 7 show box plots with 25%,
50%, 75% and 95% quantiles, for the estimators of the ﬁrst
order moment of the wavelet coefﬁcients of the 5 minutes and
15 minutes data streams, respectively. We can observe that
the distributions of the estimators of the HTTP and Snapshot
streams almost overlap in all scales. This suggests that some
HTTP and Snapshot streams might be misclassiﬁed. However,
for the 15 minutes data streams (Figure 7) the Snapshot trafﬁc
estimators are now more concentrated around the mean, which
suggests that the accuracy will be higher. For the remaining
estimators’ distributions we can observe that, at least in one
scale, they are very separated and therefore they will not be
misclassiﬁed.
The numerical results obtained, for the 5 minutes trafﬁc
traces, are presented in Table I and it is possible to observe
that these are relatively accurate for all applications. With
the exception of HTTP 5 minutes data streams, the obtained
percentage of correctly identiﬁed data streams is between
73% and 100%. For HTTP trafﬁc, the correct classiﬁcation
percentage is lower, as some of these data streams were
misclassiﬁed as Snapshot, which is in accordance with the
previous analysis. These result can be explained by the fact
9
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

0
500
1000
1500
2000
2500
3000
0
2
4
6
8
10
12
14 x 10
4
Sampling Interval
Number of Bytes
Figure 5.
Number of bytes for a Snapshot ﬂow.
-2
-1.5
-1
-0.5
 0
 0.5
 1
 1.5
 2
 1
 2
 3
 4
 5
Estimators for the first order moment of the wavelet coefficients
scale
HTTP
NMap
Snapshot
Streaming
Torrent
Figure 6.
Distributions for 5 minutes traces.
that HTTP data streams multiscale estimators have an higher
variance, resulting from the various and heterogeneous user be-
haviors, making this distribution partially overlap the snapshot
estimators distribution (which has a much lower variance) in
all scales. Moreover, several protocols, such as ﬁle sharing and
video streaming, run on top of HTTP communications which
justiﬁes the large variance the estimators of these streams
present and some classiﬁcation mistakes. The classiﬁcation
results for the 15 minutes data streams are presented in Table
II and we can observe that the accuracy of the results for all
applications is higher. This can be explained by the fact that
traces are longer, contain more information and more differ-
entiating characteristics. This allows a deeper decomposition
of each signal and therefore, a better analysis of their unique
behaviors and leads to better classiﬁcation results.
Table I
RESULTS FOR 5 MINUTES TRACES USING 5 SCALES
Data
Classiﬁed as
Streams
NMap
Snapshot
HTTP
Streaming
Torrent
NMap
100%
0%
0%
0%
0%
Snapshot
0%
72.7%
22.7%
3.1%
1.5%
HTTP
0%
29.4%
64.7%
2.9%
2.9%
Streaming
0%
0%
3.6%
96.4%
0%
Torrent
0%
3.1%
1.6%
1.5%
93.8%
-2
-1.5
-1
-0.5
 0
 0.5
 1
 1.5
 2
 1
 2
 3
 4
 5
Estimators for the first order moment of the wavelet coefficients
scale
HTTP
NMap
Snapshot
Streaming
Torrent
Figure 7.
Distributions for 15 minutes traces.
Table II
RESULTS FOR 15 MINUTES TRACES USING 5 SCALES
Data
Classiﬁed as
Streams
NMap
Snapshot
HTTP
Streaming
Torrent
NMap
100%
0%
0%
0%
0%
Snapshot
0%
95.2%
4.8%
0%
0%
HTTP
0%
15.4%
76.9%
0%
7.7%
Streaming
0%
0%
0%
100%
0%
Torrent
0%
0%
0%
0%
100%
VI. CONCLUSIONS
The last years have witnessed the appearance of several new
protocols and services, a huge increase on the number and
variety of security vulnerabilities and attacks that are carried
out over the Internet and the growth of the privacy and conﬁ-
dentiality concerns of Internet users. Thus, new identiﬁcation
methodologies that can be accurate when applied to different
types of trafﬁc and be able to operate in cyphered trafﬁc
scenarios are needed. This paper proposed an identiﬁcation
methodology that relies on a statistical multiscale analysis of
the trafﬁc ﬂows, differentiating them based on the probability
that their characteristic multiscale behavior estimators belong
to Gaussian probability distributions whose parameters are
inferred from trafﬁc ﬂows of real applications. The results
obtained show that the proposed methodology is able to accu-
rately classify licit trafﬁc and also identify some of the most
common Internet security attacks. Besides, the approach can
also avoid some of the most important drawbacks presented by
existing identiﬁcation methodologies, namely their inability to
work under strict conﬁdentiality restriction scenarios. Finally,
the deﬁnition of data stream also proved to be adequate for
discriminating between several IP applications, constituting
an important step towards a complete understanding of their
behaviors.
ACKNOWLEDGEMENTS
This research was supported in part by Fundao para a Cincia
e a Tecnologia, grant SFRH/BD/33256/2007.
REFERENCES
[1] Nmap: Free security scanner for network exploration and security audits.
http://nmap.org/, March 2009.
10
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

[2] Snort :: Home page. http://www.snort.org/, May 2010.
[3] P. Abry, P. Flandrin, M. Taqqu, and D. Veitch. Wavelets for the analysis,
estimation, and synthesis of scaling data. In K. Park and W. Willinger,
editors, Self-Similar Network Trafﬁc and Performance Evaluation, pages
39–88. Wiley, 2000.
[4] P. Barford and V. Yegneswaran. An inside look at botnets. Springer
Verlag, 2006.
[5] K. Chiang and L. Lloyd.
A case study of the rustock rootkit and
spam bot.
In HotBots’07: Proceedings of the ﬁrst conference on
First Workshop on Hot Topics in Understanding Botnets, pages 10–10,
Berkeley, CA, USA, 2007. USENIX Association.
[6] M. Collins, T. Shimeall, S. Faber, J. Janies, R. Weaver, M. Shon, and
J. Kadane. Using uncleanliness to predict future botnet addresses. In
ACM/USENIX Internet Measurement Conference IMC’07, 2007.
[7] E. Cooke, F. Jahanian, and D. Mcpherson.
The zombie roundup:
Understanding, detecting, and disrupting botnets.
pages 39–44, June
2005.
[8] E. Cooke, F. Jahanian, and D. McPherson.
The zombie roundup:
Understanding, detecting, and disrupting botnets. In USENIX SRUTI’05,
pages 39–44, 2005.
[9] D. Dagon, C. Zou, and W. Lee.
Modeling botnet propagation using
timezones. In 13th Annual Network and Distributed System Security
Symposium NDSS’06, January 2006.
[10] A. Feldmann, A. Gilbert, P. Huang, and W. Willinger. Dynamics of IP
trafﬁc: A study of the role of variability and the impact of control. In
SIGCOMM, pages 301–313, 1999.
[11] A. Feldmann, A. C. Gilbert, and W. Willinger.
Data networks as
cascades: investigating the multifractal nature of internet wan trafﬁc.
In SIGCOMM ’98: ACM SIGCOMM ’98 conference on Applications,
technologies, architectures, and protocols for computer communication,
pages 42–55, New York, NY, USA, 1998.
[12] G. Gu, P. Porras, V. Yegneswaran, M. Fong, and W. Lee. Bothunter:
Detecting malware infection through ids-driven dialog correlation. In
16th USENIX Security Symposium, 2007.
[13] Y. Hu, D.-M. Chiu, and J. Lui.
Application identiﬁcation based on
network behavioral proﬁles.
Quality of Service, 2008. IWQoS 2008.
16th International Workshop on, pages 219–228, June 2008.
[14] T. Karagiannis, A. Broido, N. Brownlee, K. Claffy, and M. Faloutsos.
Is p2p dying or just hiding? [p2p trafﬁc measurement]. Global Telecom-
munications Conference, 2004. GLOBECOM ’04. IEEE, 3:1532–1538
Vol.3, Nov.-3 Dec. 2004.
[15] T. Karagiannis, K. Papagiannaki, and M. Faloutsos. Blinc: multilevel
trafﬁc classiﬁcation in the dark. In SIGCOMM ’05: 2005 conference
on Applications, technologies, architectures, and protocols for computer
communications, pages 229–240, New York, NY, USA, 2005. ACM.
[16] A. Karasaridis, B. Rexroad, and D. Hoeﬂin. Wide-scale botnet detection
and characterization. In HotBots’07: First Workshop on Hot Topics in
Understanding Botnets, Berkeley, CA, USA, 2007. USENIX Associa-
tion.
[17] O. Kolesnikov, D. Dagon, and W. Lee. Advanced polymorphic worms:
Evading ids by blending in with normal trafﬁc. Technical report, 2004.
[18] W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson. On the
self-similar nature of ethernet trafﬁc (extended version).
IEEE/ACM
Transactions on Networking, 2(1):1–15, 1994.
[19] H. Lilliefors. On the kolmogorov-smirnov test for normality with mean
and variance unknown. Journal of the American Statistical Association,
1967.
[20] C. Livadas, R. Walsh, D. Lapsley, and W. Strayer.
Using machine
learning techniques to identify botnet trafﬁc.
In 2nd IEEE LCN
Workshop on Network Security, 2006.
[21] A. Madhukar and C. Williamson. A longitudinal study of p2p trafﬁc
classiﬁcation.
Modeling, Analysis, and Simulation of Computer and
Telecommunication Systems, 2006. MASCOTS 2006. 14th IEEE Inter-
national Symposium on, pages 179–188, Sept. 2006.
[22] A. H. Nicholas Ianelli. Botnets as a Vehicle for Online Crime. The
International Journal of Forensic Computer secience, 2(1), 2007.
[23] V. Paxson and S. Floyd.
Wide-area trafﬁc: The failure of Poisson
modeling. IEEE/ACM Transactions on Networking, 3(3):226–244, June
1995.
[24] M. Rajab, J. Zarfoss, F. Monrose, and A. Terzis.
A multi-faceted
approach to understanding the botnet phenomenon. In ACM SIGCOM-
M/USENIX Internet Measurement Conference IMC’06, October 2006.
[25] A. Ramachandran and N. Feamster. Understanding the network-level
behavior of spammers. SIGCOMM Comput. Commun. Rev., 36(4):291–
302, 2006.
[26] A. Ramachandran, N. Feamster, and D. Dagon.
Revealing botnet
membership using dnsbl counterintelligence. In USENIX SRUTI, 2006.
[27] M. Reiter and T. F. Yen.
Trafﬁc aggregation for malware detection.
In Fifth GI International Conference on Detection of Intrusions and
Malware, and Vulnerability Assessment, 2008.
[28] E. Rocha, P. Salvador, and A. Nogueira. Detection of illicit trafﬁc based
on multiscale analysis.
In Software, Telecommunications Computer
Networks, 2009. SoftCOM 2009. 17th International Conference on,
pages 286 –291, September 2009.
[29] S. E. Security. Symantec Global Internet Security Threat Report: Trends
for 2008. Technical report, Symantec, April 2009.
[30] S. Sen, O. Spatscheck, and D. Wang.
Accurate, scalable in-network
identiﬁcation of p2p trafﬁc using application signatures. In WWW ’04:
Proceedings of the 13th international conference on World Wide Web,
pages 512–521, New York, NY, USA, 2004. ACM.
[31] M. Taqqu, V. Teverovsky, and W. Willinger.
Is network trafﬁc self-
similar or multifractal? 5:63–73, 1997.
[32] W. Willinger, V. Paxson, and M. Taqqu. Self-similarity and Heavy Tails:
Structural Modeling of Network Trafﬁc. A Practical Guide to Heavy
Tails: Statistical Techniques and Applications. Birkhauser, 1998.
[33] I. Zukerman, D. W. Albrecht, and A. E. Nicholson. Predicting users’
requests on the www.
In Seventh International Conference on User
Modeling, pages 275–284, 1999.
11
EMERGING 2010 : The Second International Conference on Emerging Network Intelligence
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-103-8

