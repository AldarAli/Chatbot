Concatenated Turbo/LDPC Codes for Deep Space
Communications: Performance and Implementation
Carlo Condo
Department of Electronics and Telecommunications
Politecnico di Torino
Torino, Italy
carlo.condo@polito.it
Abstract—Deep space communications require error correction
codes able to reach extremely low bit-error-rates, possibly with
a steep waterfall region and without error ﬂoor. Several schemes
have been proposed in the literature to achieve these goals. Most
of them rely on the concatenation of different codes that leads
to high hardware implementation complexity and poor resource
sharing. This work proposes a scheme based on the concatenation
of non-custom LDPC and turbo codes that achieves excellent
error correction performance. Moreover, since both LDPC and
turbo codes can be decoded with the BCJR algorithm, our
preliminary results show that an efﬁcient hardware architecture
with high resource reuse can be designed.
Keywords—LDPC; turbo; concatenation; deep space
I. INTRODUCTION
The world of communications is characterized by a con-
tinuous strive for better performance: communication systems
are usually pushed towards higher throughput, lower Bit-Error-
Rate (BER) and lower power consumption with every gener-
ation. A particular application is deep space communications:
due to the limited number of complete developments, their
evolution in this domain is slower than in other application
ﬁelds. Moreover, their requirements and constraint can dif-
fer substantially from all other communication environments.
Transmission between spacecrafts and Earth are supposed to
be sporadic events, but the limited amounts of available power
and the long distances make failed reception, and consequent
retransmission, an unacceptable event. For this reason, deep
space missions do not require a high throughput, while at the
same time they demand very strict BER and frame-error-rate
(FER) performance. The Consultative Committee for Space
Data Systems (CCSDS) suggests a set of rules (a de facto stan-
dard) for all space-related communication systems. In [1] four
channel coding schemes are described, while in [2] the con-
sidered channel coding options are assembled into application-
wise FEC schemes. Deep space exploration requires the use
of powerful error correction codes, such as turbo codes [3],
lower rate low-density-parity-check (LDPC) codes [4] and
concatenated Reed-Solomon (RS) and convolutional codes.
Various works have proposed deep space FEC schemes, also
using codes that are different from those suggested in [1]: from
custom-constructed single codes [5] to more complex concate-
nated schemes [6]. Concatenation between different codes has
been frequently considered in order to improve performance.
“Guaranteed-performance-codes” like RS or BCH codes are
often used as Outer Codes (OCs) thanks to their measurable
error correction capabilities, and joined to Inner Codes (ICs)
such as convolutional or LDPC, used in WiMAX and DVB-
S2. The same RS+convolutional FEC scheme devised in [2]
allows these codes to rival with the more powerful LDPC and
turbo codes. However, concatenation comes at a usually high
implementation cost: decoding support for sometimes very
different codes must be provided, increasing area and power
consumption. Low-complexity decoders have been designed
for many codes [7], [8] but steps have been recently taken
towards ﬂexibility, with area efﬁcient multi-code decoders [9],
[10].
This paper presents a deep space oriented FEC scheme
by serial concatenation of LDPC and turbo codes. Section II
describes how, through a particular representation of the LDPC
parity check matrix, both kinds of codes can be decoded with
the same algorithm, allowing very low-cost implementation of
a joint decoder. The FEC scheme is described in detail in Sec-
tion III. Performance of the concatenated scheme is compared
with the standard requirements in Section IV, together with a
set of recent works both on deep space communications and on
concatenated codes. Finally, an estimation of the complexity
of decoder supporting both codes is made in Section V.
II. TURBO AND LDPC DECODING ALGORITHMS
Convolutional Turbo Codes (or CTCs) are obtained as the
parallel concatenation of two constituent Convolutional Code
(CC) encoders. Consequently, also the decoder is made of two
different parts, called Soft-In-Soft-Out (SISO) or Maximum-
A-Posteriori (MAP) decoders, and connected by an interleaver
Π and a de-interleaver Π−1. Each MAP decoder implements
the BCJR algorithm [11], which produces extrinsic metrics
from a priori information. Representing the constituent CC
as a trellis, let us deﬁne k as a trellis step and u as an
uncoded symbol. Each decoder computes λk[u] = λapo
k
[u] −
λapr
k
[u] − λk[cu] where λapo
k
[u] is the a-posteriori informa-
tion, λapr
k
[u] is the a priori information and λk[cu] is the
systematic component of the intrinsic information. The a-
posteriori information is obtained as follows:
λapo
k
[u] =
∗
max
e∶u(e)=u{b(e)} −
∗
max
e∶u(e)=˜u{b(e)}
(1)
where ˜u ∈ U is an uncoded symbol taken as a reference
(usually ˜u = 0) and u ∈ U ∖ {˜u} with U the set of uncoded
1
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

symbols; e is a trellis transition and u(e) is the corresponding
uncoded symbol. Following the Max-Log-MAP approximation
[12], for a small BER degradation the
∗
max{xi} function
becomes max{xi}. The term b(e) in (1) can consequently
be deﬁned as:
b(e) = αk−1[sS(e)] + γk[e] + βk[sE(e)]
(2)
αk[s] =
max
e∶sE(e)=s{αk−1[sS(e)] + γk[e]}
(3)
βk[s] =
max
e∶sS(e)=s{βk+1[sE(e)] + γk[e]}
(4)
γk[e] = λapr
k
[u(e)] + λk[c(e)]
(5)
where sS(e) and sE(e) are the starting and the ending states
of e, αk[sS(e)] and βk[sE(e)] are the forward and backward
metrics associated to sS(e) and sE(e) respectively, while
λk[c(e)] is the channel intrinsic information.
LDPC codes are identiﬁed by a sparse parity check matrix
H, of size M × N. A received codeword must satisfy all the
parity checks (rows) of H, i.e. H ⋅ x′ = 0, where x is the
codeword of length N. Different decoding approaches are
possible, depending on the graph representation of H: the
classical approach deﬁnes a bipartite graph with N Variable
Nodes (VNs) and M Check Nodes (CNs), and edges between
VNi and CNj if a nonzero entry is present in column i and
row j of H. Layered decoding [13] on the contrary, sees H
as a multipartite graph composed of different layers of parity
checks: this scheduling allows to exploit faster convergence
thanks to multiple updates of the bit error probabilities within
a single iteration.
Calling λ[c] the Logarithmic Likelihood Ratio (LLR) of
symbol c and, for column k in H, bit LLR λk[c] is initialized
to the corresponding received soft value. These are the VN-to-
CN messages. The following operations are executed for all
parity constraints l in a given layer, and reiterated up to the
desired level of reliability:
∆λlk[c] = λk[c] − Λapr
lk
(6)
λk[c] = ∆λlk[c] + Λapo
lk
(7)
where Λapo
lk
is the CN-to-VN message, namely the updated
version of Λapr
lk , that is initialized to 0, and stored for the
next iteration. Several exact and approximated algorithms
have been proposed to calculate Λapo
lk : the most common
algorithm used in LDPC decoding is the Belief Propagation
(BP) algorithm, of which one of the most used approximations
is the min-sum and its variations [14].
It can be clearly seen that LDPC and turbo decoding pro-
cesses share many characteristics. Both of them are iterative,
rely on soft information, are usually implemented in their
logarithmic form, while commonly being represented through
special kinds of graphs. A particularly interesting exploitation
of these characteristics has been proposed in [15]. Every row
of H is seen as a turbo code with trellis length equal to the row
weight: a direct link between turbo and LDPC codes is drawn,
and turbo decoding algorithms can be applied to LDPC codes
with minor adjustments. The BCJR-based LDPC decoding
relies on the fact that binary LDPC codes have a 2-state trellis:
state metrics can consequently be expressed as differences
∆α[c] and ∆β[c], reducing the quantization noise. Deﬁning
Φ(x,y) = max(x,y)−max(x+y,0) and considering the Max-
Log-MAP approximation [16], the CN-to-VN message update
becomes:
Λapo
lk
= Φ(∆αk[c],∆βk[c])
(8)
∆αk = Φ(∆αk−1[c],∆λlk[c])
(9)
∆βk = Φ(∆βk+1[c],∆λlk[c])
(10)
where ∆α[c] and ∆β[c] at the edge of the trellis are initialized
as the minimum value of the dynamic range.
III. PROPOSED FEC SCHEME
In the CCSDS recommended standard [17] transmission
data rates of up to 2.048 Mb/s are foreseen for the next
missions, while FEC schemes must be able to guarantee bit
error ﬂoors not higher than 10−9. The need for effective coding
schemes, alongside simple decoding algorithms, makes code
concatenation one of the smartest solutions. The powerful
Turbo and LDPC codes have been considered for concate-
nation before ( [18]) but the low level of details provided and
the unsatisfying results leave room for further investigation.
The devised FEC scheme is shown in Fig. 1: an LDPC
code is serially concatenated to a turbo code. The outer
encoder encodes the input bits, and the resulting codeword
is used as input for the inner encoder. Being responsible of
the ﬁrst, rough decoding, the IC should work well also in
presence of a large number of errors. Since turbo codes have
better performance than LDPC at low SNR [19], they have
been chosen as IC. On the contrary, receiving the updated
information from the inner decoder, the OC decoder, that is
an LDPC code, can fully exploit its deep waterfall region and
low error ﬂoor. An interleaver scrambles the output of the
OC encoder before the second encoding, while the inverse
function is inserted between the decoders. Since, depending on
the rate and characteristics of the chosen codes, the block sizes
may not be compatible, an optional padding block has been
placed after the interleaver: zeros are added to the scrambled
codeword to ﬁt the required number of bits. This reduces the
coding efﬁciency but allows for ﬂexible concatenation. The
padding bits are removed after the IC decoding, before the
deinterleaver.
The decoding process starts in the IC decoder, which
performs up to Iterin iterations. After Iterin the codeword is
stripped of the padding bits, descrambled and passed to the OC
decoder. Both turbo and LDPC code decoding algorithms in-
volve soft information: while the IC decoder receives measures
of bit error probabilities from the channel estimator, the OC
decoder must rely on the metrics updated by the IC decoder. In
particular, the LDPC decoder receives as intrinsic information
for the initialization of λk[c] the bit-level extrinsic output of
the turbo SISO λk[u]. These metrics are passed through the
deinterleaver along with the codeword.
2
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

Output
Input
 bits
 bits
LDPC
decoder
encoder
Turbo
Turbo
decoder
encoder
LDPC
Channel
De−Pad
Pad
Π
Π−1
Figure 1: Serial concatenation of LDPC and turbo codes
FEC scheme
The CCSDS suggests three FEC schemes for space com-
munications in [1]: a RS-convolutional codes concatenated
scheme, turbo codes and LDPC codes. Deep space communi-
cations requiring very low bit error rates address turbo codes in
particular, allowing four code rates ranging from 1/6 to 1/2,
and four information block lengths in the range 1784-8920.
The WiMAX standard [19] relies on a wide set of Quasi-
Cyclic LDPC codes (QC-LDPC), together with turbo codes
of different length and rates. The two code types are mutually
exclusive options in the standard: their proven effectiveness
and implementation-friendly structure, however, make them
ideal candidates for concatenation towards deep-space applica-
tions, regardless of the relatively low performance of WiMAX
LDPC codes w.r.t. CCSDS LDPC codes. Thanks to the wide
variety of available codes, it has been possible to experiment
with different code combinations consisting of both WiMAX
and CCSDS codes. Though CCSDS Single-Binary (SB) turbo
codes employ 16 states, it is proven in Section IV that also the
Duo-Binary (DB), eight-state codes used in WiMAX guarantee
very good results while keeping the decoding complexity low.
IV. SIMULATIONS AND PERFORMANCE COMPARISONS
To evaluate the effectiveness of the proposed approach,
simulations have been run on a proprietary tool. Its deeply
customizable structure allows to select codes, channel model,
SNR and result reliability level, together with decoding al-
gorithms and related choices (number of iterations, stop-
ping criteria). Moreover, it is possible to tweak a set of
implementation-oriented characteristics, like different approx-
imations of the chosen algorithms and number of bits assigned
to the representation of the metrics.
In order to comply as much as possible with the require-
ments of CCSDS, the turbo codes suggested in [1] have been
used as ICs in a ﬁrst batch of simulations, and concatenated
with WiMAX LDPC codes. The relatively high rate of the
OC results in a concatenated rate that is very close to the
CCSDS speciﬁcations. Block size compliance is guaranteed by
using, if needed, multiple LDPC codewords as a single turbo
information block, together with padding bits. The maximum
allowed number of iterations has been set to 10 for both IC
and OC decoder, and following most of the state of the art on
deep space communications, the AWGN channel model has
been chosen.
Moving towards a hardware implementation of the proposed
FEC scheme, some limitations have been inserted in the sim-
 1e-10
 1e-09
 1e-08
 1e-07
 1e-06
 1e-05
 0.0001
 0.001
 0.01
 0.1
 1
-0.2
 0
 0.2
 0.4
 0.6
 0.8
 1
BER
SNR
BER of concatenated and single turbo (10 it, inner) and LDPC (10 it, outer) codes
Turbo SB 3568 1/3, 10 iter
Turbo SB 3568 1/3, LDPC 2304 5/6
Turbo DB 1920 1/3, LDPC 2304 5/6
Turbo SB 3568 1/4, 10 iter
Turbo SB 3568 1/4, LDPC 2304 5/6
Turbo DB 1920 1/3, LDPC 2304 3/4
Figure 2: Concatenated LDPC and turbo BER, AWGN
channel, BPSK modulation
 1e-08
 1e-07
 1e-06
 1e-05
 0.0001
 0.001
 0.01
 0.1
 1
-0.2
 0
 0.2
 0.4
 0.6
 0.8
 1
FER
SNR
FER of concatenated and single turbo (10 it, inner) and LDPC (10 it, outer) codes
Turbo SB 3568 1/3, 10 iter
Turbo SB 3568 1/3, LDPC 2304 5/6
Turbo DB 1920 1/3, LDPC 2304 5/6
Turbo SB 3568 1/4, 10 iter
Turbo SB 3568 1/4, LDPC 2304 5/6
Turbo DB 1920 1/3, LDPC 2304 3/4
Figure 3: Concatenated LDPC and turbo FER, AWGN
channel, BPSK modulation
ulation environment. To correctly evaluate the impact of soft
information quantization on the BER and FER, the dynamic
range of all metrics involved in the decoding process has
been limited to 10 or 9 bits, with 3 bits of fractional part.
For the same reason, both the LDPC and turbo codes have
been decoded with the BCJR algorithm, thus leading to low
decoding complexity.
Early experimentations have shown that the gain that can be
obtained with the insertion of a bit interleaver between the two
encoders is negligible w. r. t. the additional complexity, and
it has not been considered in the plotted curve. This limited
effect is mainly due to the sparse structure of the H matrix,
that acts as an interleaver by itself [18].
Fig. 2 and 3 plot a set of meaningful BER and FER curves
respectively. The “+” marker indicates the curves provided by
CCSDS in [1] for SB turbo codes of rate 1/3 (continuous) and
1/4 (dashed). They are obtained with 10 decoder iterations,
QPSK modulation and AWGN channel. The ×-marked curves
show the performance of these codes when concatenated with
a WiMAX rate 5/6 LDPC code. It can be seen that both
3
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

 1e-10
 1e-09
 1e-08
 1e-07
 1e-06
 1e-05
 0.0001
 0.001
 0.01
 0.1
 1
-0.2
 0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
BER
SNR
BER of concatenated and single turbo (10 it, inner) and LDPC (10 it, outer) codes
BER Turbo 960 1/3, 20 iter
BER Turbo 960 1/3, 10 iter
BER Turbo 960 1/3, LDPC 1920 1/2
BER Turbo 960 1/3, LDPC 1920 5/6
BER LDPC 1920 1/2, 20 iter
BER LDPC 1920 1/2, 10 iter
Figure 4: LDPC and DB turbo BER, concatenated and
single-code, AWGN channel, BPSK modulation
concatenated BER and FER follow very closely the standard’s
curves: FER results are particularly encouraging, thanks to
aggregated error distributions that are addressed later in this
section. Moreover, plots in [1] show error ﬂoors as early as
BER=10−6 (block length 8920): the minimum BER simulated
with the concatenated scheme is slightly above 10−10, with no
signs of error ﬂoor.
The continuous, ∎-marked curves have been obtained by
substituting to the SB turbo code of CCSDS in the con-
catenated scheme a WiMAX DB turbo code of comparable
size and same rate. The difference between the two curves is
negligible, while the complexity of an 8-state turbo decoder
is much lower than a 16-state one, as shown in Section V.
To evaluate the inﬂuence of IC and OC respective rates on
the decoding performance, a second set of simulations has
been run: the IC rate has been ﬁxed to 1/3 and by changing
the OC rate it has been possible to obtain concatenated rates
equal to those of CCSDS turbo codes. In both Fig. 2 and 3,
the dashed, ∎-marked curve has a concatenated rate of 1/4,
obtained by CTC 1/3 + LDPC 3/4. It can be noticed how the
lower rate of the OC fails to deliver the same BER and FER
results as CTC 1/4 + LDPC 5/6: this behavior, observed also
in the CTC 1/6 + LDPC 5/6 against CTC 1/3 + LDPC 1/2
case, reveals how the IC turbo rate is more critical than for
the LDPC OC.
Fig. 4 plots a set of BER curves to compare the performance
of WiMAX concatenated codes against single LDPC and
turbo codes. The curves showing the “+” marker refer to the
concatenated FEC scheme: both use a WiMAX turbo code
of rate 1/3 and 960 two-bit input symbols. The continuous
line has been obtained using a rate 1/2, codeword length
1920 LDPC, while the dashed one with a rate 5/6 LDPC.
The higher rate LDPC results in a less steep curve: this
degradation can be addressed by rising Iterin, with the two
curves superimposed at Iterin=20. These plots are compared
to the constituent rate 1/3 CTC and rate 1/2 LDPC with
different numbers of allowed iterations. Since the concatenated
scheme has at its disposal up to 20 iterations (10 CTC + 10
 1e-08
 1e-07
 1e-06
 1e-05
 0.0001
 0.001
 0.01
 0.1
 1
-0.2
 0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
FER
SNR
FER of concatenated and single turbo (10 it, inner) and LDPC (10 it, outer) codes
FER Turbo 960 1/3, 20 iter
FER Turbo 960 1/3, 10 iter
FER Turbo 960 1/3, LDPC 1920 1/2
FER Turbo 960 1/3, LDPC 1920 5/6
FER LDPC 1920 1/2, 20 iter
FER LDPC 1920 1/2, 10 iter
Figure 5: LDPC and DB turbo FER, concatenated and
single-code, AWGN channel, BPSK modulation
LDPC), single-code curves are plotted with both 20 and 10
iterations maximum. The concatenated BER shows very good
performance at low Eb/N0, crossing the 10−6 threshold at
Eb/N0=0.9 dB when using the rate 5/6 LDPC OC. At higher
Eb/N0, its performances are even more remarkable: a total of
2 ⋅ 108 frames have been simulated for all the shown Eb/N0
points, for a total of 1.92⋅1011 information bits, and no errors
were counted for Eb/N0 higher than 1.0 dB when using the
rate 1/2 LDPC code. The curves show no sign of error ﬂoor
and constant BER decrease. At low Eb/N0, the 20-iterations
single CTC outperforms the concatenated schemes of up to
0.15 dB: the difference is smaller than that reported in [18]
with much more favorable conditions, and the crossing point
occurs at a higher BER and much lower Eb/N0.
Fig. 5 shows the FER curves for the same parameters as
Fig. 4: the concatenated FER reaches very low values (7⋅10−8
with rate 5/6 LDPC code). The difference with the 20-iteration
single CTC curve at low Eb/N0 is substantially reduced (0.08
dB maximum) w. r. t. the BER, and the crossing point is
moved at lower Eb/N0. This is due to the fact that very often a
failed decoding with the concatenated scheme is due to a high
number of wrong bits within the same frame. Consequently,
BER and FER scale differently, since errors are clustered
together and affect a very low number of frames.
Table I provides a comparison of the proposed FEC scheme
with similar state of the art solutions. Solution A refers to
CCSDS SB turbo 1/4 + WiMAX LPDC 5/6, while solution B
to CCSDS SB turbo 1/3 + WiMAX LPDC 5/6, both already
shown in Fig. 2 and Fig.3. To help a fair comparison with
coding schemes with different rate, the ∆SHN row identiﬁes
the distance of the BER curve from the Shannon limit at
BER=10−6: in both cases the distance is less than 1.5 dB.
The obtained ∆SHN is similar to that of the AR4JA LDPC
codes proposed by CCSDS [1], but has been obtained with a
much smaller number of iterations.
In a recent work [20], a FEC scheme for 3D HDTV using an
outer block turbo code (BTC) concatenated to an LDPC code
is proposed. The scheme is shown to outperform the DVB-
4
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

TABLE I. PERFORMANCE COMPARISON AMONG FEC SCHEMES
A
B
[20]
[21]
[5]
[6]
[22]
[18]
[23]
Application
Deep space
3D HDTV
Satellite
Deep space
Deep space
–
Mobile
Inner Code
SB CTC
LDPC
NB-LDPC
QC-LDPC
LT
Parallel
SB CTC
Outer Code
QC-LDPC
BTC
LT
NB-LDPC
RSC/LDPC
LDPC
Ratein
1/4
1/3
1/2
2/3
1/3
25/49
1/2
1/3
Rateout
5/6
5/6
467/500
9/10
49/50
1/2
7/8
Rateconcatenated
5/24
5/18
467/1000
3/5
1/2
1/3
7/24
Inputin
3568
16 K
1000 symbols
2379
32 K
504
2048
Inputout
1920
15 K
900 symbols
16 K
504
1792
Inner Decoding Alg.
BCJR
BP
FFT-BP
BP
N/A
Log-MAP
BP
Outer Decoding Alg.
BCJR
CHASE
MP
LLR-BP
Log-MAP
Iterin
10
50
20
15
N/A
8
5
5
Iterout
10
N/A
N/A
10
50
100
Quantization
10-9 bits
Floating Point
Floating Point
Floating Point
Adaptive
Floating Point
Floating Point
Channel
AWGN
Rayleigh
AWGN
AWGN
AWGN
AWGN
AWGN
Eb/N0 @ BER=10−6
0.43
0.65
4.4
1.85
N/A
N/A
2.35
1.75
1.55
FER @ BER=10−6
8 ⋅ 10−6
8 ⋅ 10−6
4 ⋅ 10−4
N/A
2 ⋅ 10−5
N/A
N/A
∆SHN @ BER=10−6
1.38
1.43
4.50
1.55
2.90
2.43
2.23
minimum BER
2 ⋅ 10−9
< 10−10
2 ⋅ 10−7
8 ⋅ 10−7
3 ⋅ 10−6
N/A
1.2 ⋅ 10−7
4 ⋅ 10−7
2 ⋅ 10−7
minimum FER
6 ⋅ 10−8
1.1 ⋅ 10−8
8 ⋅ 10−5
N/A
N/A
10−8
6 ⋅ 10−6
N/A
N/A
Eb/N0 @ min
0.6
0.9
4.6
2.0
0.3
1.05
2.5
1.9
1.6
T2 standard serial concatenation of BCH and LDPC codes.
Contrariwise to CTCs, BTCs are obtained by concatenating
various BCH codes, and decoded via CHASE algorithm,
whose implementation complexity is estimated comparable to
that of BCJR. The BER and FER performance are greatly
outperformed by this work’s, with approximately 4 dB gain,
and a very high ∆SHN. This could partly be due to the higher
code rate and to the fading channel model, but [20] sets a very
high number of iterations for the inner code, a large block size
and ﬂoating point precision for the simulations, all factors that
contribute to the improvement of results.
Luby Transform (LT) or fountain codes have been used
together with non-binary LDPC (NB-LDPC) codes in [21]
for satellite communications. The resulting system is very
ﬂexible, thanks to LT codes, and the presence of NB-LDPC
codes guarantees a high error correction power even at high
rates. The decoding complexity, however, suffers from the
concurrent FFT-based BP and message passing algorithms,
much higher than a single BCJR. The BER shows 1.2 dB loss
w. r. t. solution B: for the same rate and precision, the two FEC
systems should yield comparable results. This is conﬁrmed
by the comparable ∆SHN metrics. Both A and B, however,
outperform the LT+binary LDPC codes of [24].
The QC-LDPC construction scheme for deep space com-
munications described in [5] gives very good results without
making use of concatenation: although the curves do not show
low BER points, a 0.4 dB gain can be observed against the
plots with similar rate in Fig. 2. These curves have been
drawn with ﬂoating-point precision and a decoding algorithm
devoid of approximations: some degradation of performance
is consequently to be expected after the implementation. The
complexity of the probability-domain BP algorithm, moreover,
is very high, burdening the hypothetical hardware with large
area occupation and high power consumption.
The joint source-channel coding scheme described in [6],
aimed at deep space image transmission, uses Raptor codes, i.
e. a concatenation of an LT code with a precode, in this case a
very high-rate NB-LDPC. This powerful coding scheme, also
addressed in [21], obtains very good results at high coding
rates: FER shows only 0.15 dB loss w. r. t. solution B,
regardless of the rate difference.
In [22] parallel concatenation of LDPC and RSC codes
is explored. The LLR-based BP algorithm implemented for
the LDPC part allows good performance also with relatively
small block sizes and a few allowed iterations: still, it is
outperformed by A by 1.70 dB gain at BER=10−6 and one dB
smaller ∆SHN, with even more difference in the FER curves.
The two closely related works [18] and [23] implement
CTCs as inner and LDPC codes as OCs, decoding them with
Log-MAP and probability-domain BP algorithms respectively.
The work in [23] presents the same system as [18], with
the addition of a certain number of global decoder iterations
that slightly improve the BER. The plotted curves show a
degradation of the concatenated scheme (5+50 iterations) w. r.
t. the single turbo code (5 iterations) of up to 0.3 dB that has
not been observed in this work (Fig. 4). Rates are comparable
to that of B, and they both use the AWGN channel model,
while the block size of B is larger. Regardless of the much
higher precision and number of iterations allowed in [18], A
and B yield better BER and ∆SHN results, with a gain ranging
from 0.90 to 1.10 dB at BER=10−6.
V. IMPLEMENTATION COMPLEXITY
The proposed FEC scheme joins the BER of turbo codes
at low Eb/N0 with that of LDPC codes at higher Eb/N0,
resulting in very steep performance curves that are well suited
for deep space communications. However, concatenation is
usually expensive when it comes to implementation, since
decoding is required for both codes separately. Resource
sharing can be attempted, but if the decoding algorithms are
very different the obtained area saving are often overweighted
by the additional logic required. Since LDPC and turbo codes
can be decoded with the BCJR algorithm, it is possible to
share a large part of the datapath. Currently, the authors
5
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

are working on a ﬂexible and efﬁcient decoder meeting the
requirements for concatenated LDPC and turbo decoding: the
decoder must be able to switch between LDPC and turbo
conﬁgurations on-the-ﬂy, in case of IC failed decoding. Partial
synthesis estimations show that around 95% of the LDPC
datapath can be shared with the turbo datapath. Moreover, due
to the higher number of states in the trellis of turbo codes,
the LDPC decoder architecture can exploit an internal level of
parallelism (up to 8× in presence of 16-state turbo codes). This
aspect is particularly useful in case many LDPC codewords
are used as a single information block for turbo codes. Taking
as an example the multi-core LDPC-turbo decoder presented
in [9], a 95% shared datapath would result in a 14% area
reduction in every processing element. The limited throughput
requirements set by CCSDS allow to scale down the operating
frequency: in B, a throughput of 2 Mb/s would be achieved at
8 MHz, with a huge decrease in power consumption.
BP and CHASE algorithms used in [20] are very different
and, to the best of our knowledge, datapath sharing has never
been considered. However, the adaptive BP proposed in [25]
for BTC decoding is likely to allow at least partial resource
sharing. Also in case of LT and NB-LDPC codes used in
[21] and [6], while the datapaths are different, both decoding
processes rely on a bipartite graph: this can lead to some
degree of sharing of the internal connections and memories.
In [22] LDPC decoding is performed through LLR-BP:
the min-sum approximation only requires sums and minimum
extractions, making its implementation very simple. In [26]
resource sharing between min-sum and SISO-based turbo de-
coding is considered, resulting in unsatisfying improvements:
the overhead would be even greater with the probability-
domain BP used in [18].
VI. CONCLUSION AND FUTURE WORK
In this paper, a FEC scheme relying on serial concatenation
of parallel CTCs and LDPC codes is presented. Detailed
simulations and comparison with the state of the art show
competitive results, outperforming or being comparable to the
latest concatenation and deep space schemes. The use of the
same algorithm to decode both codes leads to a small area,
low power implementation that is currently under develop-
ment. Early complexity estimations show that it is possible to
implement the proposed approach at a very small cost w. r. t.
even single code deep space communications FEC schemes.
REFERENCES
[1] TM Synchronization and Channel Coding - Summary of Concept and
Rationale, Consulative Committee for Space Data Systems (CCSDS)
Std. 130.1-G-2, Nov. 2012.
[2] TM Channel Coding Proﬁles, Consulative Committee for Space Data
Systems (CCSDS) Std. 131.4-M-1, Jul. 2011.
[3] C. Berrou, A. Glavieux, and P. Thitimajshima, “Near Shannon limit error
correcting coding and decoding: Turbo codes,” in IEEE International
Conference on Comm., 1993, pp. 1064–1070.
[4] R. G. Gallager, “Low density parity check codes,” IRE Transactions on
Information Theory, vol. IT-8, no. 1, pp. 21–28, Jan 1962.
[5] N. Andreadou, F.-N. Pavlidou, S. Papaharalabos, and P. Mathiopoulos,
“Quasi-cyclic low-density parity-check (QC-LDPC) codes for deep
space and high data rate applications,” in Satellite and Space Communi-
cations, 2009. IWSSC 2009. International Workshop on, sept. 2009, pp.
225 –229.
[6] O. Bursalioglu, G. Caire, and D. Divsalar, “Joint source-channel coding
for deep space image transmission using rateless codes,” in Information
Theory and Applications Workshop (ITA), 2011, feb. 2011, pp. 1 –10.
[7] Z. Wang and Z. Cui, “Low-complexity high-speed decoder design
for Quasi-Cyclic LDPC codes,” Very Large Scale Integration (VLSI)
Systems, IEEE Transactions on, vol. 15, no. 1, pp. 104 –114, jan. 2007.
[8] A. Ahmed, M. Awais, A. ur Rehman, M. Maurizio, and G. Masera, “A
high throughput turbo decoder VLSI architecture for 3GPP LTE stan-
dard,” in Multitopic Conference (INMIC), 2011 IEEE 14th International,
dec. 2011, pp. 340 –346.
[9] C. Condo, M. Martina, and G. Masera, “VLSI implementation of a
multi-mode turbo/LDPC decoder architecture,” Circuits and Systems I,
IEEE Transactions on, to appear.
[10] M. Alles, T. Vogt, and N. Wehn, “FlexiChaP: A reconﬁgurable ASIP for
convolutional, turbo, and LDPC code decoding,” in Turbo Codes and
Related Topics, 2008 5th International Symposium on, 2008, pp. 84 –89.
[11] L. R. Bahl, J. Cocke, F. Jelinek, and J. Raviv, “Optimal decoding of
linear codes for minimizing symbol error rate,” IEEE Transactions on
Information Theory, vol. 20, no. 3, pp. 284–287, Mar 1974.
[12] S. Papaharalabos, P. T. Mathiopoulos, G. Masera, and M. Martina,
“On optimal and near-optimal turbo decoding using generalized max∗
operator,” IEEE Comm. Letters, vol. 13, no. 7, pp. 522–524, Jul 2009.
[13] D. Hocevar, “A reduced complexity decoder architecture via layered de-
coding of LDPC codes,” in Signal Processing Systems, IEEE Workshop
on, 2004, pp. 107 – 112.
[14] M. Fossorier, M. Mihaljevic, and H. Imai, “Reduced complexity iterative
decoding of low-density parity check codes based on belief propagation,”
IEEE Trans. on Comm., vol. 47, no. 5, pp. 673 –680, May 1999.
[15] M. Mansour and N. Shanbhag, “Turbo decoder architectures for low-
density parity-check codes,” in Global Telecommunications Conference,
2002. GLOBECOM ’02. IEEE, vol. 2, nov. 2002, pp. 1383 – 1388 vol.2.
[16] M. Martina, G. Masera, S. Papaharalabos, P. T. Mathiopoulos, and
F. Gioulekas, “On practical implementation and generalizations of
max* operator for turbo and LDPC decoders,” IEEE Transactions on
Instrumentation and Measurement, vol. 61, no. 4, pp. 888–895, Apr
2012.
[17] Radio Frequency and Modulation Systems Part 1: Earth Stations and
Spacecraft, Consulative Committee for Space Data Systems (CCSDS)
Std. 401.0-B-21, Jul. 2011.
[18] S. H. Lee, J. A. Seok, and E. K. Joo, “Serial concatenation of LDPC
and turbo code for the next generation mobile communications,” in
Wireless and Optical Communications Networks, 2005. WOCN 2005.
Second IFIP International Conference on, march 2005, pp. 425 – 427.
[19] IEEE Standard for Local and Metropolitan Area Networks Part 16, IEEE
Std 802.16e-2005 Std., 2006.
[20] K. Kwon, H. H. Im, and J. Heo, “An improved FEC system for next
generation terrestrial 3D HDTV broadcasting,” in Consumer Electronics
(ICCE), 2012 IEEE International Conference on, jan. 2012, pp. 327 –
328.
[21] W. Lei, L. Jing, and W. J. bo, “Design of concatenation of fountain and
non-binary LDPC codes for satellite communications,” in Information
Engineering and Computer Science (ICIECS), 2010 2nd International
Conference on, dec. 2010, pp. 1 –4.
[22] S. Gounai, T. Ohtsuki, and T. Kaneko, “Performance of concatenated
code with LDPC code and RSC code,” in Communications, 2006. ICC
’06. IEEE International Conference on, vol. 3, june 2006, pp. 1195 –
1199.
[23] S. H. Lee, J. A. Seok, and E. K. Joo, “Serially concatenated LDPC and
turbo code with global iteration,” in Systems Engineering, 2005. ICSEng
2005. 18th International Conference on, aug. 2005, pp. 201 – 204.
[24] W. Yao, L. Chen, H. Li, and H. Xu, “Research on fountain codes in deep
space communication,” in Image and Signal Processing, 2008. CISP ’08.
Congress on, vol. 2, may 2008, pp. 219 –224.
[25] C. Jego and W. Gross, “Turbo decoding of product codes using adaptive
belief propagation,” Communications, IEEE Transactions on, vol. 57,
no. 10, pp. 2864 –2867, october 2009.
[26] J. Dielissen, N. Engin, S. Sawitzki, and K. van Berkel, “Multistandard
FEC decoders for wireless devices,” Circuits and Systems II, IEEE
Transactions on, vol. 55, no. 3, pp. 284 –288, march 2008.
6
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-264-6
SPACOMM 2013 : The Fifth International Conference on Advances in Satellite and Space Communications

