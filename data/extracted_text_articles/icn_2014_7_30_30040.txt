Fault Tolerance in Area Coverage Algorithms for Limited Mobility Sensor Networks
Mark Snyder, Sriram Chellappan
Dept. of Computer Science
Missouri University of Science & Technology
Rolla, Missouri, USA
Email: marksn ms@msn.com, chellaps@mst.edu
Abstract—In sparse deployments of mobile sensors, the mobil-
ity of sensors is required to search the coverage area in an attempt
to achieve polling—complete, possibly repeated, area coverage
over time. Mobile sensor platforms are vulnerable to a variety of
hazards during normal operation. When sensors lose the ability
to mobilize due to mechanical failure, environmental factors, or
simply exhausting their energy source, coverage effectiveness can
be seriously impacted. Ideally, algorithms should adjust their
behavior to compensate for failure modes in order to avoid
areas statically covered by disabled sensors as well as adjusting
their behavior to cover the areas assigned to sensors that are no
longer able to mobilize. In this work, we demonstrate the effects
of disabled mobility on area coverage algorithms due to their
inability to adjust behavior, and suggest mitigation strategies and
the impact on improving coverage in the face of disabled mobility.
Keywords—Mobile Sensors; Sensor Networks; Disabled Mobil-
ity; Algorithms
I.
INTRODUCTION
There are numerous factors driving increased attention to
usage of automated sensor drones that consist of a hardware
platform with onboard command/control, sensors, and effectors
that provide for mobility. Human safety factors have long been
a primary motivator for interest in employing robots for a
variety of tasks where humans would prefer not to be. Also,
mobile sensor hardware platforms have seen many recently
advances, such as higher computation power, relatively lower
weight, and lower power requirements that allow drones to
carry much more computational capacity and payload or stay
deployed and functional for longer periods of time. More
and more, these platforms are more readily available, as the
beneﬁts of mass production of commercially designed systems
are realized.
Mobile sensors are physical devices that are subject to
observable failure rates. One of the most common problems
for mobile sensors is that the effectors that provide for the
mobility function of the platform fail [1], or that terrain or
other issues cause the mobile sensor to become stuck while all
other features of the platform continue to function as normal.
It is intuitive that one requirement of an algorithm being
analyzed is that for the algorithm to function, sensors must
be aware to some degree of the relative position and mobility
restrictions (failure modes) impacting other sensors, otherwise
there is no way they can (nor any reason for them to) alter
their behavior. However, mobile sensors need not support full
localization. Awareness of the failure modes of other sensors
allows the network to be fault-tolerant, self-healing, and to
dynamically change from initially homogeneous to heteroge-
neous with respect to mobility as agents adopt different roles
(whether by choice or as observed).
Further, we acknowledge that various subsystems of a
wireless sensor exhibit different energy requirements than
others. Since our primary priority is to maintain a given
network quality of service, we are required to utilize the
mobility feature of the sensors. What we will establish is
a schedule, whereby a certain number of sensors lose their
mobility but retain their other functions, and will analyze the
extent to which other sensors are able to compensate for this
failure mode by altering their movement strategy to preserve
the required quality of service while avoiding the area covered
by the disabled sensors.
Given an objective measurement for lifetime and effective-
ness of a sensor network, we explore the effects of disabled
mobility on these metrics. From this work, we can see that
as sensors lose their mobility, they become, in essence, static
rather than mobile sensors. When the deployment and/or the
algorithm that governs their behavior ensures that mobile
sensors are spread sufﬁciently to adequately cover the search
area, then coverage impact can be minimal. Conversely, when
the deployment is concentrated or the algorithm fails to spread
sensors prior to many of them failing, coverage effectiveness is
vulnerable. Additionally, when mobility fails but other func-
tions, such as communication, continue to operate, a sensor
can communicate misleading intentions to other sensors. In
essence, this can have outcomes similar to an attack where
blind spots are created. The disabled sensor cannot navigate
to the intended location to cover it, and other mobile sensors
choose not to go there because they believe it is already
covered.
In this paper, we examine related work in the areas of
limited mobility, reliability analysis, and fault tolerance. After
a brief survey of mobile sensor platforms, their mobility limi-
tations, and their vulnerabilities to device failure, we describe
the problem of assessing the impact of disabled mobility on
coverage algorithms. We deﬁne the reliability model we will
use, describe the simulation platform and parameters selected
for our analysis, several coverage algorithms that are used for
comparison, and then present ﬁndings, conclusions, and future
work.
II.
RELATED WORK
Fault tolerance in mobile sensor networks, the topic of
algorithms that behave in a way that tolerates failure modes
while still cooperatively pursuing a goal, can be found [2],
[3], [4], but the speciﬁc topic of fault tolerance with respect
to limited mobility sensor networks and how failures affect
coverage performance has not.
One area where limited mobility affects performance of a
mobile sensor network is when sensors are deployed for blan-
ket coverage. The lifetime of such networks, and algorithms for
preserving/extending the lifetime, has been extensively studied.
160
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

An example uses redundant sensors in a dense deployment so
that as sensors fail other sensors in the same region can wake
up and take over for the missing sensor [5]. There are formulae
that can be used to objectively assess the expected lifetime of
a network of sensors [6]. Also, many works have explored
the idea of optimized message routing for sensor networks
in the event that some sensors fail, so that messages can be
routed through other paths [7]. However, there has been little
work devoted to the area of exploring what happens when
a sensor continues to function even though it is no longer
able to navigate. This is a real concern given that in many
real world sensor platforms, energy requirements for mobility
account for a large portion relative to that required for sensing
and communication. The closest analogy is the study of hybrid
sensor networks, where the term hybrid refers to the fact that
sensors are non-homogeneous: some are static, and others are
mobile [8], [9]. However, no works were found that examine
the problem of sensors failing according to a predetermined
failure model, additionally that the failure is limited to the
mobility feature of the device, and relates this to the impact
on coverage effectiveness.
As further background, a number of works examine sensor
network lifetime from a rather fatalistic point of view, ex-
pressing desire to describe and understand an inevitable upper
bound on the utility of a network of sensors [10].
It was shown that effectors–devices that perform actu-
ation (including mobility), such as the motor, appendages,
treads/wheels, and related connections—was observed to ac-
count for 35% of mobile robot failure, the largest single reason
for failures [1]. This makes consideration of the problem of
maintaining coverage quality of service (among other goals)
using cooperating sensors in the network, an important aspect
of mobile sensor network research.
Various works explore ﬁxed deployments (no mobility fol-
lowing the initial deployment of the sensors), where mobility is
not a concern toward energy constraints on the lifetime of the
network. In a dense sensor deployment scenario, more sensors
are deployed than are required to cover an area, and when
a sensor fails, other sensors use a protocol to decide which
sensor wakes up and takes the place of sensing the missing
area. In some cases, sensors have a limited ability to exercise
mobility, and can move closer to the hole in coverage in order
to adjust for the missing sensor.
III.
RELIABILITY IN SENSOR PLATFORMS
Numerous mobile sensor platforms have been in develop-
ment in recent decades, including ground-based, lift-based,
buoyancy-based, and space-based. Ground-based platforms
(sometimes referred to as UGV’s [11]) can be tiny weighing
only a few centimeters/grams, using battery-powered micro cir-
cuitry, or as large as automobiles weighing tons using internal-
combustion engines. These platforms are subject to a variety
of mechanical failures, are vulnerable to obstacles found on
the ground in the environments in which they operate, as well
as terrain variations and pitfalls. The energy source (weight
and conservation) is a major factor limiting the mobility of
these platforms.
Lift-based, or aerial, platforms are devices that employ the
physics of lift in order to remain in a state where controlled
mobility is possible. The size of these devices can range
from small, hand-held devices, up to large military/commercial
aircraft. Identifying aircraft with a low Reynolds number
TABLE I: Approximate weight and buoyancy of various substances
Substance
Weight
Buoyancy
Air
1.2256Kg/m3
—
Hydrogen (H)
0.0857Kg/m3
1.1399Kg/m3 (H v. Air)
Helium (He)
0.1691Kg/m3
1.0565Kg/m3 (He v. Air)
Water (H2O)
988.2Kg/m3 @ 20 ◦C
0.24875Kg/m3 (Air v. Water)
provides a way to construct devices that are useful for lab
research [12]. The Reynolds number can be expressed as
shown in (1), where ρ is the air density, L is airfoil length, υ is
velocity, and µ is the viscosity of the substance through which
the device moves. Utilizing this formula allows researchers to
create small, lightweight devices that can move slowly and
stay aloft for longer periods of time. However, a challenge
faced by lift-based platforms is that they must expend energy to
maintain continual lift. Mechanical failures are often fatal due
to engineering the devices to use minimal structural material to
minimize fuel requirements and allow for more payload, which
in turn makes the devices more fragile than their ground-based
cousins.
Re = ρLυ
µ
= ρυ2
µυ
L
=
inertia
viscosity
(1)
Buoyancy-based platforms solve many of the problems
faced by ground-based and lift-based platforms. Examples of
this type of platform include blimps and boats. These devices
can be tiny to enormous commercial tanker ships. They are
characterized by the ability to maintain a stable navigational
state for long periods of time (indeﬁnitely, barring other issues,
such as leaks), and the ability to support a much larger payload
over time than lift-based or even ground-based platforms. Vul-
nerabilities include currents in the substance (typically water
or air) in which the devices operate, weather, and obstacles.
When we consider the relative densities of substances, we can
approximate the weight and buoyancy for devices utilizing
these substances as shown in Table I. Thus, the desired payload
can be deﬁned and the device characteristics tailored to ﬁt.
Space-based platforms have been in use for nearly six
decades. These devices must use some combination of lift,
buoyancy, and thrust in order to place the device in “space”
where it is capable of remaining aloft in a state where its
navigational attributes are governed by inertia and orbital
mechanics, and where the viscosity becomes negligible. Such
platforms are vulnerable to impacts with other objects traveling
at very high velocities, orbital decay causing atmospheric
reentry, cosmic rays and radiation, extreme heat and cold, in
addition to standard mechanical failures with rare opportunities
for service/repair.
Reliability analysis studies the probability of devices per-
forming the function for which they were designed over
a period of time within speciﬁed parameters. In [13], we
see analysis of failure rate models for devices. We describe
time-to-failure as a probability density function (PDF) or
cumulative density function (CDF). The probability of failure
over time F(t) may be expressed mathematically as shown
in (2). Alternatively, the probability of reliability over time
R(t) = 1 − F(t). The function f(x) represents a distribution
of failures over time, and the interval between t0 and t1 is the
period of time during which the devices are observed.
161
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

F(t) = Pr{T : t0 ≤ x < t1} =
Z t1
t0
f(x)dx
(2)
Failure rates for these various platforms are becoming more
widely available as technologists spend more time settling
on one design and tracking its reliability [14], [4], [1], [15],
[11], [16]. As these platforms become more common, we will
be able to develop more applicable and accurate failure rate
models for each type of platform.
IV.
PROBLEM DETAILS
We deﬁne the coverage ﬁeld as a region that is observed
as a plane to sensors. A set of mobile sensors is deployed
using a deployment function. In this paper, we focus on two
deployment schemes. First, a purely stochastic means of evenly
distributing sensors throughout the ﬁeld. Second, a stochastic
method that produces a Gaussian approximation of a Poisson
distribution around a point, as if the sensors might have been
dropped from an aircraft and dispersed organically at various
distances and orientations relative to the drop point.
We focus on sparse deployments in which the number of
sensors n is deﬁned in (3), A is the area of the coverage ﬁeld
and r is the sensing range. This relationship ensures that the
number of sensors being lower than required to make blanket
coverage possible. This allows us to focus on ﬁnding solutions
to the problem of polling–minimizing detection time for any
events in the coverage ﬁeld, while maximizing the number of
times we can poll all points in the coverage ﬁeld over a given
period of time.
At this point we deﬁne polling frequency as the number of
times the entire coverage ﬁeld is sensed in a given time period.
n <
4A
3
√
3r2
(3)
In balanced deployments, the problems shift from ﬁnding
solutions that minimize the time to achieve (and maintain)
blanket coverage, whereas in dense deployments the prob-
lems shift from the challenge of providing polling to one of
maintaining blanket coverage or redundant blanket coverage.
When a sensor becomes mobility-disabled in balanced to
dense deployments, the network’s ability to maintain blanket
coverage for a length of time can be shortened as sensors
ultimately fail completely and the inability of other sensors
to take their place causes coverage holes.
The mobility of the sensors is considered to be limited, in
that there is a probability that at a certain time interval from the
drop time that a given sensor might suddenly lose the ability
to move. This simulates the lifetime of the mobility feature
of the sensor. However, the sensor continues to be able to
take measurements of its environment from this location. The
number of sensors that have failed over time is controlled such
that it follows a probability density function. As an example,
the number of sensors that have failed over time might look
like one of the models shown in Figure 1.
The “bathtub curve” model for failure rates has been
described [13]. In this model, numerous initial failures are
observed, followed by a stable period where few failures occur,
and ﬁnally a period of time where devices succumb to the
useful lifetime of any of a number of their components causes
a relatively higher failure rate to account for a majority of
the remaining devices. While this model describes the failure
Figure 1: Cumulative distribution function (top) illustrating how we
will distribute the disabling of mobility of sensors over time, plus
Bathtub Curve (bottom) showing another well known failure rate
model
rate of an entire population of devices over time, this model
may not be as useful for studying the effects of failures of a
speciﬁc set of devices in use in the ﬁeld. This is due to the fact
that initial testing and quality control measures will identify
defective products prior to deployment, and devices may be
replaced in the ﬁeld long before they actually fail during
use. For this reason, we focus on the cumulative distribution
function (CDF) model for our simulations that assumes no
failures initially, but a growing number of failures as the
simulation progresses, followed by a few sensors that fail later.
V.
ALGORITHMS
In our simulations, we chose several algorithms to analyze
and compare with varying sensor count (sparsity), two deploy-
ment schemes (random and Gaussian around a point), with
and without applying the schedule of disabled mobility, and in
some cases with and without modiﬁcations to the algorithm to
mitigate the effects of disabled mobility.
The Random Walk and Random Direction Walk [17] are
used. The Random Walk algorithm has sensors simply choose
at each opportunity in time a random direction to move,
whereas the Random Direction Walk algorithm chooses a
random direction up front and continues that direction for
the life of the simulation. Although these algorithms include
no cooperative features, nor do they attempt to avoid gaps or
redundant coverage in any way, they provide a good baseline
for comparison to other algorithms.
The Proxy [18] and WGB [19] algorithms were also used.
The distributed Proxy-based algorithm involves both static and
mobile sensors which bid for new locations in order to heal
holes in coverage. The WGB algorithm, also a distributed
heuristic-based approach, uses an internal tile-coloring model
to merge data about what areas nearby are not covered (white),
have sensors nearby that could cover (gray), and areas that
are already occupied (black), in order to identify the location
of highest need. We focus on WGB in order to eliminate the
variable of static sensors from disabled mobility sensors. Other
162
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

algorithms, such as Virtual Force (VF) [20], [21] were also
examined.
VI.
EFFECTS OF DISABLED MOBILITY
We anticipate a few challenges that will affect coverage
efﬁciency in the face of disabled mobility. First is the fact
that a disabled sensor is sitting in one place sensing the area
around it and other sensors that pass through this area will
duplicate coverage resulting in a loss of efﬁciency. Second,
the disabled sensor could have been expected to have covered
a portion of the ﬁeld itself had it not become disabled, thus,
other sensors may need to adjust their movement plan in order
to cover the area excluded by the loss of the disabled sensor.
Another factor of interest is the probability of detection and the
detection time delay behavior in the presence of the disabled
mobility schedule.
With some algorithms, disabled sensors may in fact mislead
other sensors about their intended mobility plan and affect
coverage in ways that would not be seen if the sensor were to
completely fail.
Let us consider a scenario where we assume a random
distribution of sensors across the search area, where sensors
have unlimited mobility (range). The sensing distance is con-
ﬁgured so that this is a sparse to balanced deployment (i.e., the
ratio of sensor range to number of sensors relative to search
area precludes blanket coverage). The goal is to maximize
area coverage over time (or synonymously to minimize de-
tection delay). We examine two reference algorithms. First,
the Random Walk algorithm, where each mobile sensor starts
exploring the area in random moves. Second, we examine the
Random Direction Walk algorithm, where each sensor begins
by picking an initial direction and continually moves straight
in that direction indeﬁnitely.
Analyzing the results of a schedule of sensor mobility
disability surfaced a challenge with this scenario. Examining
the initial deployment, we observe a random distribution of
mobile sensors throughout the search area. Also, at any time
in the future, a snapshot of the region also shows a distribution
with no less random features than the initial deployment.
Despite the fact that the point at which a given sensor
becomes disabled is according to a pre-determined schedule,
the location at which it resides when it becomes disabled is
again no less randomly distributed than the initial deployment.
Thus, observing simulation of this scenario over time as seen
in Figure 2 shows that although the performance isn’t great at
any point in time throughout the runs, disabling the mobility
of the sensors doesn’t hurt the algorithm in an interesting or
unexpected way.
Using the Random Direction Walk algorithm produces
analogous results, and both algorithms are consistent even
when the number of sensors is varied. Figure 3 shows a
consistent drop-off in polling frequency with random direction
walk across a variety of sensor counts. Polling frequency
eventually ﬂattens due to the sparse deployment density and
the fact that disabled sensors fail to iteratively cover the area
over time. This produces an equivalent increase in average
detection delay as more and more of the area must be polled
by a decreasing population of sensors with mobility.
When we examine the effects of disabled mobility on
the WGB algorithm, we see a consistent drop in coverage
performance, and falling to as much as 20% loss of coverage
as sensors begin to lose mobility. Figure 4 illustrates how many
Figure 2: Random walk coverage and polling frequency over time
Figure 3: Random direction walk polling frequency over time
percentage points coverage drops with the WGB algorithm in
particular, simply by adding the schedule of disabled mobility
over time. This is actually quite good considering that the
algorithm pushes sensors from their initial deployment to a
balanced coverage of the area rather quickly.
We can also see from Figure 5 a representation of the
performance of the WGB algorithm in terms of the coverage
percentage over time for a varying number of sensors. In order
to properly interpret the sparsity of the deployment given the
speciﬁed sensor counts, we refer once again to (3) with a
conﬁguration of coverage area and sensor range that results
Figure 4: The number of percentage points lost by adding disabled
mobility to WGB algorithm
163
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

TABLE II: Max coverage % for various sensor counts
Sensors
Max %
25
39.26
30
47.12
35
54.97
40
62.83
50
78.53
80
125.66
100
157.07
Figure 5: WGB algorithm, coverage area over time varying sensor
count
in a balanced deployment would require a value of n ≈ 76.98.
Given the size of the coverage ﬁeld in these simulations
relative to sensor range and number of sensors, we can see the
computed maximum coverage achievable for various sensor
counts. These are upper bounds, and rely on none of the
sensors overlapping areas covered by other sensors. In practice,
for our distributed algorithms to consistently achieve polling,
the number of sensors remains at 80 or below.
Regarding the problem of disabled mobility causing poten-
tially misleading information being broadcast to other sensors,
we see that there is a clear impact to coverage efﬁciency. By
making a small adjustment to the WGB algorithm to detect this
failure mode, plus a behavior change when the failure mode
occurs such that sensors refrain from broadcasting an intention
to move that will not occur, we see an improvement in both
Gaussian and Random deployment modes of a full percentage
point. Figure 7 shows the improvement for one conﬁguration.
As shown, the improvement begins as sensors start to fail.
When a growing number of sensors are unable to move, the
ability for the WGB algorithm to continue to cooperatively
explore the coverage ﬁeld without gaps or signiﬁcant redundant
coverage becomes apparent as compared to Random Walk,
Random Direction Walk, and other algorithms.
VII.
CONCLUSIONS
One thing we can observe from these results is that
coverage algorithms that do a good job of quickly reaching a
Figure 6: WGB algorithm with disabled mobility, coverage area
over time varying sensor count
Figure 7: Percentage improvement in coverage efﬁciency by
detecting failure mode
desirable location from their initial deployment, cooperate to
avoid gaps and redundant coverage, and continue to leverage
what mobility is available throughout the sensor network,
produce better results as sensors lose their mobility than algo-
rithms that rely on statically touring or other more methodical
means of exploring and covering their environment. The WGB
algorithm, for example, saw only minimal degradation of
coverage quality of service, and performed well in sparse to
balanced deployments in the face of a schedule for disabled
mobility.
With extremely sparse deployments, sensors that are mobile
come into contact with disabled sensors less often. In these
scenarios, we observe through simulations that algorithms,
such as random direction walk have less of an impact than
algorithms that tour an established territory, because in the
latter case, once a sensor becomes disabled, there is no sensor
to cover that sensor’s territory. As the deployment becomes
less sparse, algorithms that try to avoid one another are more
164
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

vulnerable to being misled by disabled sensors that continue
to broadcast their intentions to move, but never do.
The disabled mobility problem has particular signiﬁcance
because, as deﬁned, the outcome can be demonstrated clearly
as an extension of prior proven simulation techniques. The
proposed approach introduces a factor whereby sensors be-
come immobile at various rates over time. When the coverage
algorithm is to pick a random direction, then sensors will
disregard the location and coverage provided by disabled sen-
sors and will proceed to duplicate coverage. When algorithms
avoid those areas, coverage effectiveness can be shown to
increase. As more sensors become disabled, coverage becomes
degraded, as we have shown.
VIII.
FUTURE WORK
Communication protocols have been extensively studied
from a number of perspectives. However, there is potential for
augmenting these protocols to transmit failure modes along
with existing packets in order to allow distributed algorithms
to reactively modify their behavior to make the sensor network
self-healing fault tolerant. For example, consider a mobile
sensor that is able to transmit a set of p failure modes
F = {f0, f1, ..., fp}, where fi ∈ {0, 1}. Each failure mode
represents a test result from an onboard sensor that tests an
aspects of the sensor’s normal operational state and report
about what portions of the sensor are working (1) or not
(0). If we assume a homogeneous set of mobile sensors, then
each sensor would understand what aspect of its counterpart
was malfunctioning by reading this stream contained within a
packet sent according to the communication protocol used by
the mobile sensors. Thus, we could develop algorithms that
adjust their navigation choices after ﬁltering data from other
sensors. Such algorithms would not be as susceptible to being
misled by the communicated intended actions of other sensors.
ACKNOWLEDGMENTS
This work was supported in part by National Science
Foundation (NSF) under Grant No. 1254117 and 1205695.
Any opinions, ﬁndings, and conclusions or recommendations
expressed in this material are those of the author(s) and
do not necessarily reﬂect the views of the National Science
Foundation.
REFERENCES
[1]
J. Carlson and R. R. Murphy, “Reliability analysis of mobile robots,”
in Robotics and Automation, 2003. Proceedings. ICRA’03. IEEE Inter-
national Conference on, vol. 1, pp. 274–281, IEEE, 2003.
[2]
G. Hoblos, M. Staroswiecki, and A. Aitouche, “Optimal design of fault
tolerant sensor networks,” in Control Applications, 2000. Proceedings
of the 2000 IEEE International Conference on, pp. 467–472, IEEE,
2000.
[3]
P. Basu and J. Redi, “Movement control algorithms for realization of
fault-tolerant ad hoc robot networks,” Network, IEEE, vol. 18, no. 4,
pp. 36–44, 2004.
[4]
M. L. Visinsky, J. R. Cavallaro, and I. D. Walker, “Robotic fault
detection and fault tolerance: A survey,” Reliability Engineering &
System Safety, vol. 46, no. 2, pp. 139–158, 1994.
[5]
M. Cardei and D.-Z. Du, “Improving wireless sensor network lifetime
through power aware organization,” Wireless Networks, vol. 11, no. 3,
pp. 333–340, 2005.
[6]
Y. Chen and Q. Zhao, “On the lifetime of wireless sensor networks,”
Communications Letters, IEEE, vol. 9, no. 11, pp. 976–978, 2005.
[7]
Y. Chen, Q. Zhao, V. Krishnamurthy, and D. Djonin, “Transmission
scheduling for optimizing sensor network lifetime: A stochastic shortest
path approach,” Signal Processing, IEEE Transactions on, vol. 55, no. 5,
pp. 2294–2309, 2007.
[8]
W. Wang, V. Srinivasan, and K. C. Chua, “Trade-offs between mobility
and density for coverage in wireless sensor networks,” in MOBICOM,
pp. 39–50, 2007.
[9]
D. Wang, J. Liu, and Q. Zhang, “Probabilistic ﬁeld coverage using a
hybrid network of static and mobile sensors,” in Quality of Service, 2007
Fifteenth IEEE International Workshop on, pp. 56–64, IEEE, 2007.
[10]
I. Dietrich and F. Dressler, “On the lifetime of wireless sensor net-
works,” ACM Transactions on Sensor Networks (TOSN), vol. 5, no. 1,
p. 5, 2009.
[11]
J. Carlson and R. R. Murphy, “How ugvs physically fail in the ﬁeld,”
Robotics, IEEE Transactions on, vol. 21, no. 3, pp. 423–437, 2005.
[12]
J.-D. Nicoud and J.-C. Zufferey, “Toward indoor ﬂying robots,” in In-
telligent Robots and Systems, 2002. IEEE/RSJ International Conference
on, vol. 1, pp. 787–792, IEEE, 2002.
[13]
C. Lai, M. Xie, and D. Murthy, “Ch. 3. bathtub-shaped failure rate life
distributions,” in Advances in Reliability (N. Balakrishnan and C. Rao,
eds.), vol. 20 of Handbook of Statistics, pp. 69 – 104, Elsevier, 2001.
[14]
J. R. Cavallaro and I. D. Walker, “A survey of nasa and military
standards on fault tolerance and reliability applied to robotics,” in NASA
CONFERENCE PUBLICATION, pp. 282–282, NASA, 1994.
[15]
J. Carlson, R. Murphy, and A. Nelson, “Follow-up analysis of mobile
robot failures,” in Robotics and Automation, 2004. Proceedings. ICRA
’04. 2004 IEEE International Conference on, vol. 5, pp. 4987–4994
Vol.5, IEEE, 2004.
[16]
S. Stancliff, J. M. Dolan, and A. Trebi-Ollennu, “Towards a predictive
model of robot reliability,” 2005.
[17]
E. Atsan and ¨O. ¨Ozkasap, “A classiﬁcation and performance comparison
of mobility models for ad hoc networks,” in Ad-Hoc, Mobile, and
Wireless Networks, pp. 444–457, Springer, 2006.
[18]
G. Wang, G. Cao, and T. La Porta, “Proxy-based sensor deployment for
mobile sensor networks,” in Mobile Ad-hoc and Sensor Systems, 2004
IEEE International Conference on, pp. 493–502, IEEE, 2004.
[19]
M. Snyder, S. Chellappan, and M. Thakur, “Exploratory coverage
in limited mobility sensor networks,” in Network-Based Information
Systems, 2013. NBIS’13. International Conference on, IEEE, September
2013.
[20]
A. Howard, M. J. Matari´c, and G. S. Sukhatme, “Mobile sensor network
deployment using potential ﬁelds: A distributed, scalable solution to the
area coverage problem,” in Distributed Autonomous Robotic Systems 5,
pp. 299–308, Springer, 2002.
[21]
Y. Zou and K. Chakrabarty, “Sensor deployment and target localization
based on virtual forces,” in INFOCOM 2003. Twenty-Second Annual
Joint Conference of the IEEE Computer and Communications. IEEE
Societies, vol. 2, pp. 1293–1303, IEEE, 2003.
165
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-318-6
ICN 2014 : The Thirteenth International Conference on Networks

