315
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fuzzy Query Propagation in Sensor Networks 
 
Mohamed Bakillah 
Steve H.L. Liang 
Department of Geomatics Engineering 
University of Calgary, 2500 University Dr. NW, Canada 
mohamed.bakillah@geog.uni-heidelberg.de 
steve.liang@ucalgary.ca 
Mir Abolfazl Mostafavi 
Geomatic Research Center, Laval University, 
1055, avenue du Séminaire, Québec, 
Canada 
mir-abolfazl.mostafavi@scg.ulaval.ca 
Alexander Zipf  
Jamal Jokar Arsanjani 
Rupprecht-Karls-Universität, Institute for GI-Science, 
Berliner Straße 48, D-69120, Heidelberg, Germany 
alexander.zipf@geog.uni-heidelberg.de  
jokar.arsanjani@geog.uni-heidelberg.de
 
Abstract—Query-driven 
information 
retrieval 
aims 
at 
supporting users to request and retrieve relevant data from 
sensor networks. Due to energy and capacity constraints that 
characterize sensor networks, information retrieval should 
avoid flooding the network with queries, but rather find the 
most efficient propagation path that maximizes the recall of 
relevant data while minimizing the number of sensor nodes 
being accessed. This is the problem of query propagation, for 
which numerous approaches for sensor networks have been 
proposed. Although, one unaddressed issue that remains is the 
issue of fuzziness of users’ queries and fuzziness of sensor data. 
When crisp criteria are used to express queries and select 
query recipients during propagation, some sensor nodes that 
are relevant can be “missed.” Therefore, this paper’s objective 
is to integrate a fuzzy semantic mapping mechanism, which has 
been published in a previous research, into a new, cluster-
based fuzzy query propagation approach. The fuzzy query 
propagation approach avoids the overload of sensor nodes that 
are near the sink nodes by incorporating a first propagation 
step towards relevant clusters of sensors, therefore varying the 
sensor nodes that will have to redistribute the query, followed 
by an intra-cluster query propagation phase. The approach 
has been evaluated with a simulation and compared with a 
crisp version to show the impact of the consideration of 
fuzziness in the improvement of the recall of relevant nodes 
while avoiding the increase of propagation cost. 
Keywords - Fuzzy logics, information retrieval, query 
propagation, sensor networks. 
I. 
 INTRODUCTION 
Sensor networks are intended to monitor environmental 
conditions, such as weather, properties of soil and water 
bodies, vegetation, etc. While sensors are more traditionally 
used by scientific experts to study environmental and 
physical phenomena, it is believed that greater public can 
also benefit from access to sensor data. In this paper, we 
extend a previous paper on fuzzy semantic mapping that was 
presented at the SEMAPRO 2011 conference [1] by 
integrating the fuzzy semantic mapping approach into a new 
fuzzy query propagation approach for sensor networks. 
In order to support improved access, sensor data should 
therefore be accessed through the Internet, with the help of 
platforms such as the Geospatial Cyberinfrastructure for 
Environmental Sensing platform (GeoCENS). GeoCENS is 
an online platform that enables simplified searching, storing 
and sharing of environmental and other georeferenced data 
[2]. In such platform, sensors collect data on a given feature, 
process these data and forward it to a so-called "sink node," 
which in turn forwards the data to the application through the 
Internet. Because all sensor nodes cannot necessarily be 
connected to the sink node, sensor data must be forwarded 
from node to node until reaching the sink node [3]. In the 
same manner, sensor data queries issued by users must be 
forwarded from the sink node to the nodes holding the 
requested data (the relevant nodes) through intermediary 
sensor nodes in the network. 
However, because sensors are meant to be small devices, 
their processing capacity and their source of energy are 
limited. Also, despite the decreasing cost of sensors, it 
cannot be assumed that they can be replaced when they run 
out of power. For example, some sensors cannot be accessed 
once being set up in their environment (some are buried to 
measure soil moisture, while others are underwater to 
measure water temperature, etc.). Therefore, the path chosen 
to send queries to sensor nodes and to send back data to the 
sink node must be determined in a way to avoid consuming 
the energy of sensor nodes; at the same time, the path chosen 
must enable to reach the nodes that are relevant to the query 
and retrieve the requested data. This problem is called query 
propagation.   
Numerous approaches have been proposed for query 
propagation and data collection from sensor nodes. A 
representative sample of such approach is presented in 
Section II. The approaches are varying in terms of the data 
delivery model (whether sensors proactively send data to the 
sink node according to a pre-defined scheme, or solely on-
demand of the user); organization of the sensor network (flat 

316
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
or hierarchical); and criteria for selecting query recipient 
nodes. However, one well-know problem in GIScience, but 
that is still unaddressed in query propagation approaches for 
sensor networks, is the fuzziness of data and queries.  
Research indicates that geographical phenomena in 
particular are fuzzy [4]. For example, where a mountain 
starts or ends cannot be determined with precision; and 
whether the vegetation is dense or not is only an imprecise 
concept. Fuzzy theory, which allows the partial membership 
of an element into a set (e.g., the set of dense vegetation 
areas) is widely used to represent geographical phenomena. 
For example, in [5], fuzzy theory is used to represent fuzzy 
land cover categories. Similarly, concepts such as spatial 
relations that are used in users' queries (e.g., close to, around, 
at proximity, far from) are also fuzzy [6]. Sensor data can 
also be fuzzy, for example, the location of the sensor can be 
imprecise or there is a certain level of uncertainty in data 
being gathered. The fact that sensor data and queries are 
fuzzy should be taken into account during query propagation.  
Conversely, it could result in the inability of the approach to 
retrieve relevant data.  
In previous research presented at the SEMAPRO 2011 
conference [1], we have presented a fuzzy logic semantic 
mapping model to compare components of fuzzy ontologies. 
In this paper, the objective is to apply this approach and 
integrate it into a fuzzy query propagation approach. The 
fuzzy semantic mapping theory and mechanism presented in 
[1] is incorporated into a cluster-based query propagation 
approach as a way to express fuzzy queries and select query 
recipient according to fuzziness degree and a fuzzy semantic 
relations. 
The 
fuzzy 
query 
propagation 
approach 
incorporates a first propagation step towards relevant clusters 
of sensors, followed by an intra-cluster query propagation 
phase. The ability of the approach to retrieve relevant 
information and a comparison between crisp and fuzzy 
propagation has been evaluated through a simulation. 
The content of this paper is organized as follows: the 
next section presents related work on query propagation in 
sensor networks. Section III is a brief introduction to fuzzy 
logics in GIScience and in sensor networks. Section IV 
presents our fuzzy query propagation approach, while 
Section V presents an extended version of the fuzzy semantic 
mapping mechanism.  The evaluation of the approach is 
conducted in Section VI, while conclusion and future work 
are provided in Section VII. 
II. 
QUERY PROPAGATION IN SENSOR NETWORKS 
Propagating queries to the relevant sensors of a network 
is a challenging issue, since a balance between the quality of 
query answers and the efficiency of the approach must be 
reached.  
Existing query propagation approaches for sensor 
networks can be categorized according to the data delivery 
model they rely on, i.e., how the flow of data between the 
sensors and the requestor is triggered and organized [7]. The 
first data delivery model is the proactive model. In the 
proactive model, sensor nodes periodically forward the data 
they have collected to a server, at a pre-specified rate, or 
when an event of interest occurs (event-driven model) [3]. 
Examples of query propagation approaches based on the 
proactive data delivery model include [8] and [9]. While the 
approach proposed in this paper could be somewhat easily 
adapted to the proactive model, in this paper, we focus on the 
second type of delivery model, i.e., the query-driven model.  
In the query-driven model (or on-demand model), data is 
sent by sensor nodes only when a user queries the sensor 
network [10]. The problem then is to determine through 
which path and to which sensor nodes the query should be 
sent. We assume in the following that the user can access the 
sensor network through a so-called “sink node,” which is a 
node of the network that acts as an intermediary between the 
user (through the Internet) and the rest of sensors in the 
network [11]. One common approach for query-driven 
model is the reverse tree model [10][12][13]. In the reverse 
tree model, the query is broadcasted from the sink node to 
the nodes of the network. The structure of the tree is built as 
the query is propagated from node to node, with the sink 
node being the root of the tree. Sensors send back their data 
to the sink node following the tree structure. Approaches 
based on the reverse tree model vary according to the 
mechanism they rely on for selecting the nodes that will be 
part of the tree. For example, some approaches are called 
“attribute-based,” because at each “jump,” the decision about 
propagation is made based on a match between the attributes 
specified in the query and the attributes of data collected by 
the sensors. Examples of such approaches include 
[14][15][16][10]. The attribute can be, for example, the area 
where the sensor is located or the type of sensor. One 
disadvantage of the reverse tree model is that it can be 
inefficient because it may impose unbalanced energy 
consumption in the sensor network, since the nodes that are 
close to the sink forward more data and queries and 
therefore, use more energy than other nodes that are far from 
the sink node [10]. One solution would be therefore to avoid 
that the sink node always sends the query through its 
immediate neighbors. To address this issue, and to facilitate 
routing to relevant sensors in general, the hierarchical 
routing protocols can be helpful. Hierarchical routing 
protocols divide the network into clusters of sensors 
[17][18][8][9]. Queries can then be sent directly from the 
sink node to the designated "leader" of the relevant cluster, 
avoiding the same sensors to disseminate the queries and 
collect the corresponding data.  
Other types of approaches, called geographical routing 
protocols, aim at propagating the queries sent by users who 
are searching for data from sensors in a specific location. 
These protocols therefore explicitly take into account the 
location of sensors in the selection of recipient nodes 
[19][20][21]. The query includes the targeted coordinates; 
neighbor sensor nodes in the network are actively sharing the 
information about their respective location. Therefore, when 
a node receives a query, it sends it to the neighbor node that 
is the closest to the targeted location. Villalba et al. [3] 
indicate that several metrics have been used to measure 
closeness, the most common ones being the Euclidean 
distance and the projected line joining the relaying node and 
the destination. However, we note that such routing 
protocols based on crisp measures do not allow take into 

317
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
account the fuzziness of queries. More particularly, it is very 
likely that users lack the capacity to specify a precise 
location of interest, and can only provide an approximation 
of it [10]. We argue that this is also true regarding thematic 
or temporal attributes of queries. For example, a user might 
look for sensors that have observed "temperature around 
30oC" rather than exactly 30oC, within a fuzzy period of 
time. This motivates our proposal of a fuzzy query 
propagation approach for sensor networks.  
III. 
FUZZY LOGICS IN GISCIENCE AND SENSOR 
NETWORKS 
GIScience researchers such as Couclecis [22] and Zhang 
and Goodchild [23] have demonstrated that uncertainty 
should be considered as a kind of knowledge that must be 
explicitly represented and dealt with. Fuzzy logics, which 
were proposed by Zadeh [24] to deal with imprecise and 
vague knowledge, are now widely used in GIScience [4]. For 
example, [25] uses fuzzy sets to assess the similarity of 
categorical maps, while [6] have developed an ontology of 
fuzzy spatial relations to improve the interpretation of 
images. Fuzzy theory and fuzzy logics are also widely used 
in sensor networks. For example, [26] use fuzzy logics in a 
hierarchical clustering protocol for query routing in sensor 
networks. In this approach, fuzzy logics are used to select 
the sensor node that will play the role of the "cluster head" 
(leader) of a sensor cluster. Fuzzy variables used for cluster 
head selection include energy, centrality, and concentration. 
Fuzzy logics have also been used to assess the quality of 
service (QoS) in wireless sensor networks [27]. More 
specifically, QoS in wireless sensor networks is highly 
related to energy efficiency and avoiding the congestion of 
messages at nodes. In [27], fuzzy logics are used to estimate 
the congestion at nodes in order to facilitate routing 
messages more efficiently. Fuzzy logics are also used to 
assess trust in order to distinguish between trustworthy and 
threatening nodes in wireless sensor networks [28]. In [29], 
fuzzy theory is used to enable fusion of uncertain sensor 
data in wireless sensor networks. The approach was 
designed for the fusion of data coming from sensors that 
monitor the same property (in this case, luminosity). Other 
applications exist that use fuzzy theory in the context of 
message routing in wireless sensor networks [30][31]. [30] 
propose a solution to avoid the useless propagation of 
messages to all nodes of the network. In their approach, the 
transmission area is limited according to a fuzzy threshold 
value. The fuzzy threshold value is determined by a fuzzy 
rule-based system that considers the energy and density of 
nodes. [31] have developed a fuzzy logic controller that 
allows nodes in the sensor network to compute their 
capacity to transfer messages based on their battery power 
level and the type of data being forwarded. Similarly, [32] 
proposed an energy-aware fuzzy routing mechanism for 
wireless sensor networks. Despite numerous works using 
fuzzy theory for sensor networks, to the best of our 
knowledge, none investigate the use of fuzzy logics to 
represent the uncertainty of semantics of sensor data and to 
support semantic-based query propagation. This motivates 
the approach presented in this paper. 
A. Fundamentals of Fuzzy Theory 
This section briefly introduces the basic notions of fuzzy 
sets and fuzzy logics. In classical set theory, elements of a 
set either belong to a set, or they do not; conversely, fuzzy 
set theory was developed to deal with the case of partial 
membership to a set. Each member of a fuzzy set is assigned 
a so-called membership degree, which value is between 0 
and 1, and which indicates the strength of the membership 
into the set. A null value indicates that the element does not 
belong at all to the set, while a value of 1 indicates that the 
element fully belongs to the set. Consider a set of elements 
called the reference set and denoted X. A fuzzy subset F of X 
is formally defined with a membership function μF(x); this 
function associates any element x of X to a value in the [0, 1] 
interval. All set operations for crisp sets (union, intersection, 
etc.) have their fuzzy counterpart. The fuzzy implication 
operators such as Gödel, Gogen and Lukasiewicz fuzzy 
implications operators are for example used to reason with 
relations between fuzzy sets [33] while fuzzy composition 
operators are used to infer membership of an element into a 
fuzzy set, knowing its membership degree into another 
related fuzzy set. The operators that will be used in this 
paper will be introduced in Section V. 
IV. 
FUZZY QUERY PROPAGATION 
The data delivery model targeted by the proposed fuzzy 
query propagation approach is query-driven [3], i.e., the 
fuzzy query propagation process is initiated by a user who 
issues a query expressing the characteristics of the data he or 
she is looking for. Figure 1 illustrates the fuzzy query 
propagation framework.  
The proposed framework is based on the principle of 
hierarchical routing protocol [3], which advantage is to avoid 
large traffic overhead and therefore to reduce energy 
consumption by sensors [10]. In this paper, we assume that 
the sensor network is already partitioned into clusters of 
sensors. Each cluster has a gateway node, which is the node 
responsible for receiving a query and redistributing it to 
other members of the cluster. Existing research [26] 
demonstrates that a single gateway node has disadvantages 
because it can become a single point of failure (e.g., if the 
selected gateway node runs out of power or becomes 
dysfunctional). To avoid this problem, the role of gateway 
node is rotated among several nodes (provided that they have 
sufficient capacity). The choice of gateway nodes can be 
done randomly at predetermined time intervals [34] in order 
to share the consumption of energy. However, in case of 
failure, the sink node should automatically forward the 
queries to the next gateway node. To detect failure of the 
gateway node, we have included a communication protocol 
where the gateway node sends a notification to the sink node 
every time it receives a query. Therefore, if the sink node 
does not receive a notification, it assumes that the current 

318
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
gateway node is not available and rotate to the next available 
gateway node. 
 
 
 
Figure 1. Fuzzy propagation framework 
 
Sensor clusters are formed according to various semantic 
criteria: sensors which data pertain to similar or 
complementary domain of application, themes, geographical 
locations, etc., are gathered into clusters. This facilitates the 
propagation of queries to targeted groups of sensors instead 
of flooding the network with queries. Since it is not the 
objective of this paper to further describe how clusters of 
sensors are formed, we point out to our previous published 
research [35] where we have proposed a social-network-
analysis-based algorithm for sensor cluster formation. The 
clustering algorithm identifies, within the available sensors, 
those that can be considered as “leaders” because their 
characteristics encompass those of other sensors. For 
example, a sensor that “measures density of gas” 
encompasses sensors that “measure density of CO2”, 
“measure density of air pollutant,” etc. Leader sensors are 
identified using the network analysis concept of “centrality.” 
Then, meaningful clusters of sensors are formed around 
those “leader” sensors. To do so, the algorithm searches the 
semantic neighborhood of leader sensors to select those that 
will be part of the cluster formed around this leader sensor. 
Each sensor node stores a set of metadata according to 
the Sensor Model Language (SensorML) format [36]. 
Similarly, each sensor cluster is associated with metadata 
that describe the nature of its member sensors. The metadata 
describe the category of phenomenon observed, the 
observation period and area of observations, the observed 
properties (e.g., temperature, soil moisture, etc.), the types of 
sensors, the intended application and the application domain  
[36]. The metadata on sensor clusters are stored in a sensor 
cluster metadata knowledge base, which is held by the sink 
node that usually has greater storage and processing 
capabilities than “regular” sensor nodes [10].   
A. Global Fuzzy Query Propagation Process 
The fuzzy query propagation process is as follows: first, 
a fuzzy query is formulated by a user. The query is sent, 
through a Web platform, to a sink node. The sink node is 
responsible for broadcasting the query to sensors of the 
network. However, instead of flooding the network, the sink 
node identifies the clusters that are the most likely to contain 
sensor nodes that are relevant to the query. To do so, a fuzzy 
semantic matcher (described in Section V) is implemented at 
the sink node. The fuzzy semantic matcher compares the 
fuzzy query with the metadata on the cluster and return 
matches. Matches are selected according to fuzzy criteria, 
which computation is discussed in Section V. When 
matching clusters are selected, the sink node then sends the 
query to the gateway node of these clusters. Then, the 
gateway node will initiate the fuzzy intra-cluster propagation 
of the query, i.e., propagation from node to node inside a 
cluster. 
B. Fuzzy Intra-Cluster Propagation Algorithm 
The fuzzy intra-cluster propagation algorithm is 
provided below in Figure 2. This algorithm is the procedure 
performed by any node that receives the query during intra-
cluster propagation, including the gateway node. 
The process starts when a node receives the query. The 
algorithm performs a sequence of “jumps,” from node to 
node, within the scope of a cluster. “Jump” refers to the 
action of sending a query from one node to another. The 
algorithm is parameterized with a maximum number of 
jumps; the role of this parameter is to avoid the unstopped 
propagation of the query. Since the algorithm is executed in 
parallel by several recipient nodes, there cannot be a global 
maximal number of jumps that can be tracked. Instead, the 
maximal number of jumps is computed along a single path, 
i.e., every time the query is forwarded to a node, the current 
number of jumps is incremented by 1. When a node sends a 
query to a neighbor node, it also sends the current value of 
the number of jumps along that path. If a node receives a 
query but the max number of jumps along this path is 
reached, it stops the local propagation. Meanwhile, the 
propagation may continue along other paths.  
Sink 
node 
Web client 
 
Sensor 
cluster 
metadata 
Sensor 
clusters  
Fuzzy 
propagation 
to gateway 
nodes   
Fuzzy intra-cluster 
propagation  
Gateway 
node  

319
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Node 
receives 
query
Compute fuzzy mapping 
with neighbour
Determine local 
confidence interval
Select node from fuzzy 
mapping vector
Max_jump is reached
Stop local 
propagation process
Node has received 
query Q
Global confidence 
threshold is reached
Node is within the
confidence interval
Send query to 
selected node
Stop local 
propagation process
All nodes have 
been selected
Yes
No
No
Yes
Populate list of 
neighbours
No more neighbour
Select 
neighbour from 
list
No
Yes
Yes
No
Yes
No
No
List is empty
Yes
No
Yes
 
 
Figure 2. Fuzzy intra-cluster propagation algorithm 
 
If the maximum number of jumps is not reached, the 
current recipient node creates a list of neighbor nodes. For 
each neighbor node, the recipient node computes a fuzzy 
mapping between the query and the neighbor node’s 
metadata, which is composed of two components: a 
semantic relation r and a fuzzy inclusion value f (details on 
how the semantic relation r and the fuzzy inclusion value f 
are computed are given in Section V). As a result, the 
recipient node obtains a fuzzy mapping vector: 
 
V = ((f1, r1), (f2, r2), … (fn, rn)). 
 
To determine which neighbor node(s) will be selected as 
new query recipient, three conditions must be verified:  
 
the fuzzy semantic relation r must be one of the 
type(s) selected by the user (among the possible 
semantic relations listed in Table 1 and presented 
in Section V);  
 
the fuzzy inclusion must fall within a local 
confidence interval, and  
 
the fuzzy inclusion must meet a global user-defined 
threshold.  
The fact that the user can select both quantitative criteria 
(the fuzzy inclusion thresholds) and a qualitative criterion 
(the semantic relation r) to restrict the nodes that can be 
selected as query recipients gives more flexibility to the 
approach and makes it more adaptable to the user’s needs. 
For example, if the user specifies that the semantic relation 
between the query and the neighbor node’s metadata must 
be “contains,” it means that the user accepts to receive data 
more specific than the needs expressed in the query. 
Conversely, if the user select “contained in” as a semantic 
relation, its means he or she accept to receive data more 
general than the needs expressed in the query.  
The local confidence interval is a percentage of the 
highest values in V. More specifically, the local confidence 
interval is the interval of fuzzy inclusion values that 
contains x percent of the highest values of fuzzy inclusion in 
V, where x is a threshold that can be user-defined. For 
example, if x = 20, it means that the interval will contain 20 
percent of the elements in V, with these 20 percent elements 
being the highest possible. Therefore, the smaller x is, the 
more selective is the algorithm. In the experiment presented 
in Section VI, we have selected x = 20, since the ability of 
the algorithm to forward the query to relevant nodes was 
optimal using this threshold for the given data set.  
This interval is local because for every node, a different 
interval is determined dynamically at run-time. The purpose 
of having both local and global threshold is to deal with 
variation of fuzzy inclusion values within the network. To 
ensure that no node answers twice the same query, the query 
is given a unique identifier stored by nodes who received it. 
If a node receives a query it had already forwarded, it will 
stop the local propagation process (the propagation may 
continue along other paths).  
V. 
FUZZY SEMANTIC MAPPING MECHANISM 
In this section, we present the fuzzy semantic mapping 
mechanism that supports the query propagation process 
presented in the previous section. The fuzzy semantic 
mapping mechanism, which produces both qualitative and 
quantitative relations, was introduced in Bakillah and 
Mostafavi [1]; however, in this paper we extend it to include 
the cases of discrete but also continuous properties.  Some 
papers on fuzzy ontology mapping have already been 
published, 
for 
example, 
[37][38]. 
However, 
these 
approaches have limited expressivity. For example, [37] 
focus on finding subsumption relations between concepts of 
fuzzy ontologies, while our fuzzy semantic mapping 
framework provides 9 possible mapping relations. [38] do 
not address the comparison of fuzzy continuous ranges of 
values for properties, while in this paper we integrate 
measures for both discrete and continuous properties. 
In this paper, we assume that the metadata on sensors is 
formalized in an ontological format. An ontology is usually 
defined as a set of concepts (or classes) that represent entities 
of the domain of discourse, relations and/or properties, and 
axioms, which are statements that are true within that domain 
of discourse [39]. We follow a similar approach to define the 
fuzzy geospatial ontology. However, in the fuzzy ontology, 
we consider that the membership degree of a property or 
relation in the definition of a concept can be quantified. In a 
crisp ontology, the membership degree of a property or 
relation into the definition of a concept is always one or zero. 
This means that either a concept has that property; or it does 

320
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
not have it. In the fuzzy ontology, this membership degree 
varies between zero and one, to indicate partial membership. 
Therefore, in a fuzzy ontology, concepts do not have a crisp 
definition. 
We define the fuzzy geospatial ontology as a 5-tuple: O 
= {C, R, P, D, rel, prop}, where: 
 
C is a set of concepts, which are abstractions of 
entities of the domain of discourse;  
 
R is a set of relations;  
 
P is a set of properties for concepts;  
 
D is a set of possible values for properties in P, 
called range of properties;  
 
rel: [R→C × C] → [0, 1] is a fuzzy function that 
specifies the fuzzy relation that holds between two 
concepts;  
 
prop: [P→C × D] → [0, 1] is a fuzzy function that 
specifies the fuzzy relation between a concept and a 
subset of D. D is therefore a fuzzy range of values.  
The set of relations R includes spatial relations such as 
“Is_located_at,” which indicates the location of an instance 
of the concept, and other topological, directional and 
orientation spatial relations, which can be fuzzy. Therefore, 
in this paper we assume that either the query can contain a 
fuzzy property (e.g., “find sensors monitoring temperature 
close to point A,” with point A being defined with a fuzzy 
function such as in Figure 4), or the sensor itself can be 
defined by a fuzzy property (its position in space being 
fuzzy), or both. The fuzzy semantic mapping mechanism 
takes into account these three cases, since fuzzy sets theory 
also include the case of crisp sets (where membership 
degree can only be 1 or 0). 
For the purpose of our approach, we define a concept 
with a conjunction of a set of axioms AC, where each axiom 
is a fuzzy relation or property that defines the concept:  
 
C = A1⊓ A2 ⊓  …. ⊓  An. 
 
We use the term axiom, which is usually employed to 
refer to the whole expression that defines a concept, because 
a concept could also be defined by one feature (property or 
relation). 
The idea of the fuzzy semantic mapping mechanism is to 
use fuzzy logics to first determine the fuzzy inclusion of a 
concept into another concept from a different ontology (or, 
in the case of fuzzy propagation, the fuzzy inclusion of the 
query concept into another concept describing the semantics 
of sensor data), based on the fuzzy inclusion of each axiom 
of the first concept into axioms of the second concept. Then, 
fuzzy predicates, which value depends on the fuzzy 
inclusion, are used to infer the semantic relation between the 
two concepts.  
Let two concepts C and C’ be defined as follows: 
C = A1⊓ A2 ⊓  …. ⊓  An 
               C’ = A1’⊓ A2’ ⊓  …. ⊓  Am’. 
 
We define the fuzzy semantic mapping between C and C’ as 
follows: 
 
Definition (fuzzy semantic mapping) A fuzzy semantic 
mapping mC between C and C’ is a tuple mC = <C, C’, rel(C, 
C’), μ(C, C’)>, where rel is a semantic relation between C 
and C’, and μ(C, C’) is the fuzzy inclusion of C into C’.  
 
We define the fuzzy inclusion as the membership degree 
of a concept in another. This means that when the value of 
the fuzzy inclusion is 1, the first concept is entirely included 
in the second concept; when it is zero, no axiom of the first 
concept intersects with axioms of the second. The fuzzy 
inclusion of C into C’ is denoted with µ(C, C’) : 
 
, '1,... ' )
1,...,
(
, '1,... ' )
1,...,
(
'
)
(
( ))
( ),
min(
)'
,
(
Am
An A
A
A
C
Am
An A
A
A
C
C
A
A
A
C C
,              (1) 
 
where µC(A) is the membership degree of axiom A in concept 
C. We know that this membership degree comes from the 
definition of the concept in the fuzzy geospatial ontology. 
Now there are two cases to consider: either the axioms are 
formed with properties with discrete range of values, or 
axioms are formed with properties with continuous range of 
values (i.e., a fuzzy function such as in Figure 4). In each 
case, the fuzzy inclusion must be computed using different 
formulas. 
First, we explain how the fuzzy inclusion of C into C’ 
defined in (1) is computed in the case of properties with 
discrete or continuous range of values. Secondly, we explain 
how the semantic relation rel between C and C’ is 
determined using the fuzzy inclusion value. 
A. Fuzzy Inclusion: The Discrete Case 
Let A: <r.D> and A’: <r’.D’> be two axioms, where D 
and D’ are discrete fuzzy ranges of values (e.g., temperature 
= low, average, or high). For example, <temperature.((0.2, 
low);(0.8, average))> represents the partial membership of 
temperature value into the set of low and average 
temperature intervals.  
To compute (1), which relies on the membership of 
axiom A in concept C’, and where axiom A of concept C 
might not be already in the definition of the concept C’, we 
need the membership of axiom A in axiom A’ of C’. The 
membership degree of A into A’ is determined by the Zadeh 
conjunction for fuzzy sets: 
 
'), ( , '))
min( ( ,
)'
( ,
r r
D D
A A
.               (2) 
 
Generally, the function μ(X1, X2) over any fuzzy sets 
X1, X2 is defined as follows, using the fuzzy implication 
principle of fuzzy logics [33]: 
 

321
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
( ))
( )
(
inf
2)
,1
(
2
1
2
1
x
x
X
X
X
f
X
X
x X
,       (3) 
 
where ⇒f is a fuzzy implication operator from [0,1] into 
[0,1], and x is any element belonging to X1 and/or X2. There 
are several definitions for the fuzzy implication operator 
(including 
Gödel, 
Gogen 
and 
Lukasiewicz 
fuzzy 
implications, see [33]). We use Lukasiewicz fuzzy 
implication because of its superior flexibility, which is 
defined as follow:  
 
otherwise
x
x
if
x
x
x
x
X
X
X
X
X
L
X
( )
( )
 
( )
( )
1
1
( )
)
(
2
1
2
1
2
1
.         (4) 
 
Now, we need to adapt formulas (3) and (4) to compute 
μ(D, D’) and μ(r, r’). For example, consider the problem of 
computing μ(D, D’). Consider also that ci’ is an element of 
the fuzzy set D’. We see from (4) that we need to know the 
membership degree of elements of D’ into D (μD(ci’)), and 
vice-versa. However, this membership degree is not readily 
available, because elements of D’ are not necessarily 
included in D. In other words, all we have is the membership 
degree of an element into the set to which it initially belongs. 
Nevertheless, it is possible to compute μD(ci’) if we know the 
membership degree of ci’ into elements of D (denoted with 
cj). To do so, we use the Lukasiewicz fuzzy composition 
operator, denoted with the symbol ⊗L, and which determines 
the membership of a first element ci’ in a set D, knowing the 
membership degree of ci’ in cj and the membership degree of 
cj in D (Figure 3). The symbol c is used to indicate an 
element of the range of values of a property or a relation of 
the fuzzy geospatial ontology. 
 
Figure 3. Illustration of the Lukasiewicz fuzzy composition 
principle 
 
According to this principle, the membership degree of 
ci’ in D writes as: 
 
j
i
cj
L
j
D
i
D
c
c
c
)'
(
)
(
)'
(
, 
)
(
i
j
c
c
j
,      (5) 
where 
 
0 ,1 ),
)'
(
)
(
max(
)'
(
)
(
i
cj
j
D
i
cj
L
j
D
c
c
c
c
     (6) 
 
according to Lukasiewicz’s definition of the fuzzy 
composition operator.  
To determine μcj(ci’), which is the membership degree of 
an element ci’ of a range of values in an element cj of 
another range of values, we have developed a fuzzy 
membership degree measure. This measure is based on the 
relative position of cj and ci’ in an upper-level ontology O. 
An appropriate ontology for this task is a domain-
independent, largely recognized lexical base, such as 
WordNet. 
However, 
other 
specialized 
upper-level 
ontologies might be more useful, depending on the domain 
of application. Of note however is that the chosen upper-
level ontology should be structured with is-a relations. This 
is because is-a relations allow to identify inclusion relations 
between elements of the ontology, which allows to derive 
membership degrees. We note that using such external 
resource 
allows 
to 
deal 
with 
the 
terminological 
heterogeneity that characterizes the metadata of sensors 
produced by different organizations. Let <O be a 
hierarchical, is-a relation between terms t in O, such that 
t<O t’ means that t is more specific (less general) than t’. 
Let P(cj, ci’) be the path relating cj to ci’ in O, according to 
this hierarchy: P(cj, ci’) = {cj, t1, t2, … ci’} so that t1, t2, … 
is the ordered set of nodes (representing terms) from cj to ci’ 
in O. Let d(tk) be the set of descendants of a node tk in O. 
We define μcj(ci’) as follows: 
 
otherwise
c
c
t
d
c
j
j
ic
P c j
kt
k
i
c j


c '
if
c '
if
  
0
)
(
1
1
)'
(
i
i
)'
 ,
(
.                (7) 
 
This equation means that when ci’ is more specific than 
cj, it is entirely included in cj, and when ci’ is more general 
than cj, μcj(ci’) decreases with the number of descendants of 
its subsumers. Replacing results of (7) in (6), we obtain the 
membership of each element of the fuzzy range D’ in D, 
which, in turn, allows to determine μ(D, D’) with (3). 
Equation (7) is also used to determine μ(r, r’), so these 
results can be replaced in (3). 
The fuzzy inclusion values between the axiom also 
allows to determine the semantic relation between these 
axioms. From the fuzzy inclusion given in (2), we obtain the 
semantic relation between the axioms, rel(A, A’), using the 
following rules, which are derived from the fuzzy set 
relationship definitions: 
(R1) A ≡ A’ ⇔ μ(A, A’) =1 
 μ(A’, A) =1 
(R2) A  ⊑  A’⇔ μ(A, A’) =1 
 μ(A’, A) <1 
(R3) A  ⊒  A’⇔ μ(A, A’) <1 
 μ(A’, A) =1 
(R4) A  ⊓  A’⇔ 0 < μ(A, A’) <1 
 0 < μ(A’, A) <1 

322
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
(R5) A ⊥ A’⇔ μ(A, A’) =0 
 μ(A’, A) =0. 
 
Semantic relations between the axioms will enable to 
determine the semantic relation between the concepts that 
they compose. Before we show how this can be done (in 
Section C), we present the case of fuzzy inclusion between 
properties with continuous ranges of values. 
B. Fuzzy Inclusion: The Continuous Case 
Properties can have continuous fuzzy ranges of value 
described by fuzzy membership functions. Their general 
form is A: <p.f> and A’: <p’.f’>, where p and p’ are 
properties and f and f’ are fuzzy continuous functions. For 
example, Figure 4 shows the comparison of two fuzzy 
membership functions describing fuzzy spatial regions sr’ 
and sr’ (e.g., fuzzy spatial location targeted by the query and 
fuzzy spatial area of measurement of the sensor). Such 
function represents the uncertainty bounds for a class of 
fuzzy spatial regions.  
 
 
 
Figure 4. Example of fuzzy functions for defining a fuzzy point 
(geographical location) 
 
The choice of the fuzzy function to represent the range 
of a property depends on the characteristics specific to the 
sensor, especially how the accuracy of the measurement 
changes in space. For example, in Figure 4, sr is a triangular 
fuzzy function; the membership degree of a point in space 
into the sensor’s area of measurement is maximal only at a 
single, punctual location (x=0). As the distance to this single 
location increases, the membership degree decreases 
linearly and symmetrically. Such fuzzy function can be 
suitable to represent the area of measurement of a sensor 
that monitors the temperature at a certain fuzzy point, for 
example.  Meanwhile, sr’ represents a fuzzy trapezoidal 
function where the membership degree of a point in space 
into the sensor’s area of measurement is maximal inside a 
given radius. Outside this radius, the membership degree 
decreases linearly (and more sharply than in the given 
triangular function). Such fuzzy function may be more 
suitable to describe a sensor that can detect movement 
within a given circular area, for example. We can also see 
that the slope depends on how precise the measurement is in 
space and therefore depends on the sensor’s characteristics. 
Other common fuzzy functions are presented in [40].  
The membership degree A into A’ is computed with (2), 
except that the membership of f into f’ is not computed with 
(3), which is applicable only to discrete fuzzy sets. Instead, 
we need to study inclusion measures for continuous fuzzy 
sets. A review of similarity and inclusion measures for 
fuzzy sets is presented in [41]. Notably, the measure for 
erosion of fuzzy sets by [42] is presented as a suitable 
measure to measure fuzzy inclusion for finite sets. Since no 
measurement domain of sensors can be infinite, a fuzzy 
inclusion for finite sets is appropriate. According to this 
measure, the membership of f into f’ can be computed with 
the following function: 
 
1
0
'
( )
inf
)'
( ,
x d
f
f
f
x f
,                 (8) 
 
where x is an element of the universe of discourse (or of the 
union of the domains of f and f’), and fα is called the α-cut of 
f, which is the binary set with defined as follows: 
 
( )
 
if 1
( )
 
if 0
( )
x
x
x
f
f
f

                   (9) 
 
Note that this approach is used not only for spatial or 
temporal properties, but also for the case of thematic 
property axioms with fuzzy continuous ranges of value, for 
example A: <HasWindSpeed.Low>, where low is a 
continuous fuzzy range of values over the values of wind 
speed. 
C. Semantic Relations 
In order to determine the semantic relation between the 
query concept and a concept describing semantics of sensor 
data, we have defined a set of three predicates. Predicates 
are measurements which values are qualitative; they are 
used to determine whether a semantic relation between two 
concepts is true. The semantic relations between two 
concepts are qualitative relations among the following: 
equivalence, contains, contained in, partial symmetric-
containment, 
partial 
left-containment, 
partial-right 
containment, strong overlap, weak overlap, and disjoint (as 
listed in Table 1). The semantic relation is determined by 
the following expression:  
 
),
,
(
)
,
(
)
,
(
)'
,
(
'
Pr
'
Pr
'
C
C
C
C
C
C
A
CI A
A
C A
A
A
I
C C
rel
      (10)
 
 

323
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
where I(AC, AC’), C(AC, AC’) and CI(AC, AC’) are three 
predicates that respectively evaluate the following: 
 I(AC, AC’) predicate evaluates the intersection of axioms 
of the concept C with axioms of C’;  
 C(AC, AC’) predicate evaluates the inclusion of axioms of 
C’ in axioms of C, and  
 CI(AC, AC’) predicate evaluates the inclusion of axioms 
of C in axioms of C’.  
The ⊗Pr symbol in (10) is a composition operator. Its 
function is to give the semantic relation between C and C’, 
based on the value of the three predicates. 
For any predicate Pr, the possible values of Pr are: 
 
B value, if for all axioms of C there is an axiom of 
C’ that verifies predicate Pr, and vice-versa. For 
example, I(AC, AC’) = B if for all axioms in AC, there 
is an axiom in AC’ that intersects this axiom (as 
determined by rules R1 to R5 defined in the previous 
section), and vice-versa; 
 
S value, if there exist some axioms of C and axioms 
of C’ that verify predicate Pr, but not all; 
 
N value, if there exists no axiom of C and C’ that 
verifies predicate Pr. 
These principles for determining the value of a predicate 
are formally expressed as follows (where logic symbols are 
∀(for all), ∃ (there exists) ⊥ (disjoint) and ¬ (negation)): 
 
N
S
B
I C C
)'
,
(
0)
, ' )
(
, ' )
(
,
0)]
, ' )
(
, ' )
(
,
0)
, ' )
(
, ' )
(
,
[
0)
, ' )
(
, ' )
(
,
0)
, ' )
(
, ' )
(
,
0)
, ' )
(
, ' )
(
,
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
 
N
S
B
C C C
)'
,
(
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
  
N
S
B
CI C C
)'
,
(
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
0
)'
,
(
{ , }
)'
,
(
,
j
i
j
i
j
i
j
i
j
i
j
i
j
i
j
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
A A
j rel A A
i
 
 
For C and C’, the domain of quantifiers i and j is 
respectively i ∈ {1,…, n} and j ∈ {1,…, m}.  
 
As for the composition operator ⊗Pr, it takes as input the 
value for the three predicates for C and C’, and returns the 
semantic relation between C and C’, according to the 14 
possible combinations of predicate values identified in 
Table 1. This table defines the ⊗Pr operator: each 
combination of values for the three predicates is associated 
with a resulting semantic relation. For example, C 
(semantically) contains C’ if I(AC, AC’) = B, C(AC, AC’) = B 
and CI(AC, AC’) = S (second line of Table 1). In the 
associated illustrations, blue sets represent axioms of C, and 
red sets axioms of C’. 
 
TABLE I.  
SEMANTIC RELATIONS IN FUNCTION OF THE COMBINATION 
OF PREDICATE VALUES (⊗PR OPERATOR) 
Semantic 
relationship 
(C, C’) 
Value 
of 
I(AC, 
AC’) 
Value 
of 
C(AC, 
AC’) 
Value 
of 
CI(AC, 
AC’) 
Representation 
1. 
Equivalence 
B 
B 
B 
 
2.  
Contains 
B 
B 
S 
 
B 
B 
N 
 
3. Contained 
In 
B 
S 
B 
 
B 
N 
B 
 
4. Partial S-
Containment 
(S=Symetric) 
B 
S 
S 
 
S 
S 
S 
 
5. Partial L-
Containment 
(L-LEFT) 
B 
S 
N 
 
S 
S 
N 
 
 

324
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
6. Partial R-
containment 
(R=RIGHT) 
B 
N 
S 
 
S 
N 
S 
 
7. Strong 
Overlap 
B 
N 
N 
 
8. Weak 
Overlap 
S 
N 
N 
 
9. Disjoint 
N 
N 
N 
 
 
This fuzzy semantic mapping mechanism describes how 
the fuzzy inclusion and semantic relation can be computed 
between a query concept and semantics of sensor data, and 
therefore supports fuzzy query propagation. It is worth 
noting that the approach requires the user to formulate 
within its query a fuzzy function for the fuzzy properties, 
which might not be straightforward for users who are not 
familiar with fuzzy set theory. Therefore, we note that 
further work is required to develop a friendly interface to 
help capture the fuzziness in user’s queries in an easier 
fashion. Similarly, the approach requires that the fuzziness 
of sensor data be formally described and available within 
sensor metadata. In this respect, we note that several 
proposals have already been made for the development of 
Fuzzy Description Logics (DL) [40], DL being the 
underlying formalism of OWL, the W3C-recommended 
language for the Semantic Web [43]. 
VI. 
EVALUATION 
In this section, we present the evaluation of the fuzzy 
query propagation approach. The presented evaluation is 
based on the comparison of the approach with the flooding 
algorithm, which consists in flooding the network through 
all available communication channels between sensors. We 
also compare the crisp version of the algorithm with the 
fuzzy version to verify whether the fuzzy algorithm helps to 
find more relevant sensors than the crisp version. Finally, to 
further investigate the behavior of the algorithm, we 
compare the results using different fuzzy inclusion 
thresholds as criteria to select query recipient nodes.  
The approach was implemented as a simulation in Java 
(Eclipse 3.4, JDK 1.6) with a maximum of 20,000 nodes. 
Nodes were randomly assigned metadata using a set of 
metadata into which variations were randomly introduced. 
The original metadata was obtained from the SensorML 
descriptions available on the Geospatial Cyberinfrastructure 
for Environmental Sensing platform (GeoCENS), an online 
platform that enables simplified searching, storing and 
sharing of environmental and other georeferenced data [2], 
to which we have added fuzzy membership functions on 
their 
location 
and 
some 
thematic 
attributes 
(e.g., 
temperature, precipitations and soil moisture) for the 
purpose of the simulation.  
The simulations performed were compared in terms of 
the rate of dissemination of the query to the relevant sensor 
nodes. The approach is efficient if the least sensor nodes are 
sent messages for a maximum of relevant nodes being 
reached and identified as query recipients. The rate of 
dissemination compares the percentage of relevant nodes 
that were selected as query recipients (vertical axis) versus 
the number of sensor nodes that were reached (i.e., that 
received the query message) (horizontal axis). Therefore, we 
are not only evaluating the ability of the algorithm to 
propagate the query while reducing energy consumption, 
but also the ability to find the best path to maximize the 
recall and accuracy. The relevant nodes with respect to a 
query were identified manually during the setting of the 
simulation and used as authoritative result for the evaluation 
of the approach.  
Figure 5 shows the assessment of the rate of 
dissemination for the flooding, crisp, and fuzzy algorithms, 
tested with a fuzzy inclusion threshold of 0,40.  
 
 
Figure 5. Rate of dissemination using flooding, crisp or fuzzy 
propagation algorithm 
 
The flooding algorithm, because it reaches all nodes of 
the network, is able to achieve a 100 percent recall of 
relevant sensor nodes. But this is only at the very high cost 
of sending messages to all nodes of the network, which is 
not appropriate in an environment where the energy of 
sensors must be saved since it is not guaranteed that sensors 

325
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
are easily accessible and can be replaced or their energy 
source renewed; for example some sensors are buried to 
measure soil moisture, while others are underwater to 
measure water temperature, etc. Meanwhile, the crisp 
algorithm can only achieve a 43 percent recall of relevant 
nodes. This is because the crisp query is very restrictive in 
comparison with the fuzzy query. While the fuzzy algorithm 
is more costly that the crisp algorithm (20 percent more 
nodes received a query message), its performance 
counterbalances this cost since the recall of relevant nodes 
reaches over 90 percent.  
Figure 6 shows the rates of query dissemination to 
relevant sensors for different values of the fuzzy inclusion 
threshold (0,20, 0,40, 0,60 and 0,80).  
 
 
Figure 6. Rate of dissemination using various fuzzy inclusion 
thresholds 
 
When the algorithm is set with a 0,20 or 0,40 fuzzy 
inclusion threshold, the difference in the recall of relevant 
nodes is very slight, suggesting that even low fuzzy 
inclusion between 0,20 and 0,40 might be sufficient to 
indicate relevance. 
However, with a low threshold, a significant number of 
sensor nodes that are not relevant are accessed in 
comparison with the 0,40 threshold. With the 0,60 and 0,80 
thresholds, an important percentage of relevant nodes are 
missed and the query propagation is stopped after reaching a 
smaller number of nodes. Although this study does not 
demonstrate which threshold is appropriate at all times, 
since this is likely to depend on the data being used, this 
demonstrates that the choice of the fuzzy inclusion threshold 
is a determining factor influencing the efficiency of the 
approach. Therefore, a testing phase with sample network is 
necessary to establish the more relevant threshold.  
 
VII. CONCLUSION AND FUTURE WORK 
In the geospatial domain, it is essential to consider the 
uncertainty and fuzziness of geospatial phenomena. In a 
previous paper, we had presented an approach for fuzzy 
semantic mapping of fuzzy geospatial ontologies [6]. In this 
paper, we have demonstrated one of the possible 
applications of this approach through incorporating it into a 
new approach for fuzzy query propagation in sensor 
networks.  
Sensors are devices intended to monitor environmental 
conditions, and they can be interconnected through so-called 
sensor networks. Due to energy, processing and memory 
limitations pertaining to their size, sensors of a network 
cannot be all reached by an application. They must rather be 
queried and their data retrieved through intermediary sensor 
nodes of the network. This situation creates the need for 
query propagation mechanisms that are efficient in terms of 
cost, but that are also able to retrieve requested data. At the 
same time, we believe that the fuzziness of query and sensor 
data must be taken into account in query propagation to 
improve the ability to retrieve relevant data. This created the 
motivation for the fuzzy query propagation approach that 
has been proposed in this paper. The fuzzy query 
propagation approach comprises a first propagation step 
towards relevant clusters of sensors, therefore varying the 
sensor nodes that will have to redistribute the query; it is 
followed by an intra-cluster query propagation phase. In 
both phases, the fuzzy semantic mapping mechanism is used 
to select query recipients. The experiments that were 
conducted show that in comparison with a crisp approach, 
taking into account the fuzziness indeed improves the recall 
of relevant data while avoiding the increase of propagation 
cost. We have also noted that one challenge or limitation 
raised by our research is related to the impact on the 
performance of the approach of some parameters of the 
proposed algorithm, including the fuzziness threshold being 
chosen to select query recipients. Therefore, further research 
is required to investigate avenues for helping the user to 
select the appropriate threshold in a user-friendly fashion. 
Among future work being uncovered by this study, we 
plan to investigate the role of such fuzzy query propagation 
approach into the so-called semantic enablement of Spatial 
Data Infrastructures (SDIs). Because the objective of SDIs 
is to support the exchange of heterogeneous data and 
information among various providers and users, future 
research on SDIs will aim at integrating access to sensor 
networks through SDIs. Therefore, we foresee that future 
work on how to integrate fuzzy query propagation as a 
service into SDIs will be useful. Semantic-based query 
propagation strategies such as provided in this paper can be 
adapted to SDIs and coordinated with catalogue services so 
that the user can, through a single interface, search for either 
data from web services registered in centralized catalogues 
or data from dynamic networks made accessible through 
SDIs. 
ACKNOWLEDGMENT 
This research was made possible by an operating grant 
from Microsoft Research and Alberta Innovate Technology 
Future Natural Sciences. 
 

326
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
REFERENCES 
 
[1] M. Bakillah and M.A. Mostafavi, “A Fuzzy Logic Semantic 
Mapping Approach for Fuzzy Geospatial Ontologies,” Proc. 
of SEMAPRO 2011, Lisbon, Portugal, November 2011, pp. 
21-28. 
[2] http://www.geocens.ca/ Access date: 03.06.2012 
[3] L. J. G. Villalba, A. L. S. Orozco, A. T. Cabrera, and C. J. B. 
Abbas, “Routing Protocols in Wireless Sensor Networks,” 
Sensors, vol. 9, issue 11, 2009, pp. 8399-8421. doi: 
10.3390/s91108399. Access date: 03.06.2012 
[4] V.B. Robinson, “A Perspective on the Fundamentals of Fuzzy 
Sets and Their Use in Geographical Information Systems,” 
Transactions in GIS, vol. 7, issue 1, 2003, pp. 3-30. doi: 
10.1111/1467-9671.00127 Access date: 19.12.2012 
[5] O. Ahlqvist, “Using Uncertain Conceptual Space to Translate 
between Land Cover Categories,” International Journal of 
Geographical Information Science, vol. 19, issue 7, 2005, pp. 
831-857. doi: 10.1080/13658810500106729 Access date: 
19.12.2012 
[6] C. Hudelot, J. Atif, and I. Bloch, “Fuzzy Spatial Relation 
Ontology for Image Interpretation,” Fuzzy Sets and Systems, 
vol. 159, 2008, pp. 1929-1951. doi:10.1016/j.fss.2008.02.011 
Access date: 19.12.2012 
[7] H. Karl and A. Willig, “Protocols and Architectures for 
Wireless Sensor Networks,” Chichester, West Sussex, UK: 
John Wiley & Sons, 2005. ISBN: 978-0-470-09510-2 
[8] C. Liu, K. Wu, and J. Pei, “An Energy-efficient Data 
Collection Framework for Wireless Sensor Networks by 
Exploiting Spatiotemporal Correlation,” IEEE Transactions 
on Parallel Distribution Systems, vol. 18, 2007, pp. 1010-
1023. doi: 10.1109/TPDS.2007.1046 Access date: 19.12.2012 
[9] B. Gedik, L. Liu, and P.S. Yu, “ASAP: An Adaptive 
Sampling Approach to Data Collection in Sensor Networks,” 
IEEE Transations on Parallel Distribution Systems, vol. 18, 
2007, pp. 1766-1783. doi:10.1109/TPDS.2007.1110. Access 
date: 19.12.2012 
[10] R. Teng and B. Zhang, “On-demand Information Retrieval in 
Sensor Networks with Localised Query and Energy-balanced 
Data Collection,” Sensors, vol. 11, 2011, pp. 341-361. doi: 
10.3390/s110100341. Access date: 03.06.2012 
[11] A. 
Zafeiropoulos, 
D.-E. 
Spanos, 
S. 
Arkoulis, 
N. 
Konstantinou, and N. Mitrou, “Data management in sensor 
networks 
using 
semantic 
web 
technologies,” 
Data 
Management in Semantic Web, H. Jin, Z. Lv, Eds. Nova 
Science Publishers, Inc., 2009, pp. 97-118. 
[12] P.B. Karp, Y. Ke, S. Nath, and S. Seshan, “IrisNet: An 
Architecture for a Worldwide Sensor Web,” IEEE Pervasive 
Computing, 
vol. 
2, 
2003, 
pp. 
22-33. 
doi: 
10.1109/MPRV.2003.1251166. Access date: 19.12.2012 
[13] L. Kulik, E. Tanin, and M. Umer, “Efficient Data Collection 
and Selective Queries in Sensor Networks,” Proc. of 2nd 
International Conference on GeoSensor Networks, Boston, 
MA, USA, October 2006, pp. 25-44. doi: 10.1007/978-3-540-
79996-2-3. Access date: 19.12.2012 
[14] J. Kulik, W. Heinzelman, and H. Balakrishnan, “Negotiation-
based Protocols for Disseminating Information in Wireless 
Sensor Networks,” Wireless Networks, vol. 8, 2002, pp. 169–
185. 
doi: 
10.1023/A:1013715909417. 
Access 
date: 
19.12.2012 
[15] D. Braginsky and D. Estrin, “Rumor Routing Algorithm for 
Sensor Networks,” Proc. of the First ACM International 
Workshop on Wireless Sensor Networks and Applications 
(WSNA), Atlanta, GA, USA, September, 2002, pp. 22–31. 
doi:10.1145/570738.570742. Access date: 19.12.2012 
[16] N. Sadagopan, B. Krishnamachari, and A. Helmy, “The 
ACQUIRE Mechanism for Efficient Querying in Sensor 
Networks,” Proc. of the First IEEE International Workshop on 
Sensor Network Protocols and Applications (SNPA), 
Anchorage, 
AK, 
May 
2003, 
pp. 
149–155. 
doi: 
10.1109/SNPA.2003.1203365. Access date: 19.12.2012 
[17] S. Lindsey and C.S. Raghavendra, “PEGASIS: Power-
efficient Gathering in Sensor Information Systems,” Proc. of 
the Aerospace Conference, Big Sky, MT, March, 2002, pp. 
1125–1130. doi: 10.1109/AERO.2002.1035242. Access date: 
19.12.2012 
[18] S. Chatterjea, S. De Luigi, and P. Havinga, “DirQ: a Directed 
Query Dissemination Scheme for Wireless Sensor Networks,” 
Proc. of the IASTED International Conference on Wireless 
Sensor Networks (WSN), Banff, Alberta, Canada, July 2006. 
doi:10.1109/ICPPW.2006.20. Access date: 19.12.2012 
[19] K. Seada and A. Helmy, “Geographic Protocols in Sensor 
Networks,” Technical Report 04-837, Computer Science 
Department, University of Southern California: San Diego, 
CA, USA, 2008. 
[20] T. He, J.A. Stankovic, C. Lu, and T.F. Abdelzaher, “SPEED: 
a Stateless Protocol for Real-time Communication in Sensor 
Networks,” Proc. of the 23rd International Conference on 
Distributed Computing Systems (ICDCS), Providence, RI, 
USA, 
May, 
2003, 
pp. 
46–55. 
doi: 
10.1109/ICDCS.2003.1203451. Access date: 19.12.2012 
[21] I. Stojmenovic, “Geocasting with Guaranteed Delivery in 
Sensor Networks,” IEEE Wireless Communication Magazine, 
vol. 11, 2004, pp. 29-37. doi: 10.1109/MWC.2004.1368894. 
Access date: 19.12.2012 
[22] H. Couclelis, “The Certainty of Uncertainty: GIS and the 
Limits of Geographic Knowledge,” Transactions in GIS, vol. 
7, issue 2, 2003, pp. 165-175. doi: 10.1111/1467-9671.00138. 
Access date: 19.12.2012 
[23] J. Zhang and M. Goodchild, “Uncertainty in Geographical 
Information,” London: Taylor & Francis, 2002. 
[24] L. A. Zadeh, “Fuzzy Sets,” Information and Control, vol. 8, 
issue 
3, 
1965, 
pp. 
338–353. 
doi: 
10.1016/S0019-
9958(65)90241-X. Access date: 19.12.2012 
[25] A. Hagen, “Fuzzy Set Approach to Assessing Similarity of 
Categorical Maps,” International Journal of Geographical 
Information Science, vol. 17, issue 3, 2003, pp. 235–249. doi: 
DOI:10.1080/13658810210157822. Access date: 19.12.2012 
[26] S. Swapna Kumar, M. Nanda Kumar, and V. S. Sheeba, 
"Fuzzy Logic based Enercy Efficient Hierarchical Clustering 
in Wireless Sensor Networks," International Journal of 
Research and Reviews in Wireless Sensor Networks, Vol. 1, 
No. 
4, 
2011, 
pp. 
53-57. 
doi: 
10.1109/CHUSER.2011.6163758. Access date: 19.12.2012 
[27] S. A. Munir, Y. Wen Bin, R. Biao, and M. Jian, "Fuzzy Logic 
based Congestion Estimation for QoS in Wireless Sensor 
Network," Proc. of 2007 WCNC, IEEE, 2007, pp. 4339-4344. 
doi: 10.1109/WCNC.2007.791. Access date: 19.12.2012 
[28] K. Kim and H. Suk Seo, “A Trust Model Using Fuzzy Logic 
in Wireless Sensor Network,” Proc. of World Academy of 
Science, Engineering and Technology, Vol. 42, 2008, pp. 63-
66. 
[29] Y.-J. Wen, A. M. Agogino, and K., Goebel, “Fuzzy 
Validation and Fusion for Wireless Sensor Networks,” Proc. 
of 2004 ASME International Mechanical Engineering 
Congress and RD&D Expo, November 13-19, 2004, 
Anaheim, 
California, 
USA, 
2004, 
pp. 
1-6. 
doi: 
10.1115/IMECE2004-60964. Access date: 19.12.2012 
[30] S. Hoon Chi and T. Ho Cho, “Fuzzy Logic based Propagation 
Limiting Method for Message Routing in Wireless Sensor 
Networks,” Proc. of 2006 Computational Science and Its 

327
International Journal on Advances in Intelligent Systems, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Applications, 
LNCS 
3983, 
2006, 
pp. 
58-67. 
doi: 
10.1007/11751632-7. Access date: 19.12.2012 
[31] T. Srinivasan, R. Chandrasekar, and V. Vijaykumar, “A 
Fuzzy, Energy-efficient Scheme for Data Centric Multipath 
Routing in Wireless Sensor Networks,” Proc. of 2006 
International 
Conference 
on 
Wireless 
and 
Optical 
Communications Networks, IEEE, Bangalore, India. doi: 
10.1007/11751632-7. Access date: 19.12.2012 
[32] M. Yusuf and T. Haider, “Energy-aware Fuzzy Routing for 
Wireless Sensor Networks,” Proc. of the 2005 IEEE 
Symposium on Emerging Technologies, 17-18 Sept. 2005, 
IEEE, 2005, pp. 63-69. doi: 10.1109/ICET.2005.1558856. 
Access date: 19.12.2012 
[33] P. Bosc and O. Pivert, “About Approximate Inclusion and its 
Axiomatization,” Fuzzy Sets and Systems, vol. 157, 2006,  
pp. 1438-1454. doi: 10.1016/j.fss.2005.11.011. Access date: 
19.12.2012 
[34] W.R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, 
“Energy-efficient Communication Protocol for Wireless 
Microsensor Networks,” IEEE Computer Society Proc. of the 
33nd Hawai International Conference on System Science, 
Washington, DC, USA, vol. 8, 2000, pp. 8020. doi: 
10.1109/HICSS.2000.926982. Access date: 19.12.2012 
[35] M. Bakillah and S. H.L. Liang, “Discovering Sensor Services 
with Social Network Analysis and Expanded SQWRL 
Querying,” Proc. of W2GIS 2012, LNCS 7236, S. Di 
Martino, A. Peron, and T. Tezuka, Eds. Berlin Heidelberg: 
Springer Verlag, 2012, pp. 221-238. doi: 10.1007/978-3-642-
29247-7_16. Access date: 19.12.2012 
[36] M. Botts et al., “OGC Sensor Web Enablement: Overview 
and High Level Architecture,” (OGC 07-165), Open 
Geospatial Consortium white paper, 2007. 
[37] B. Xu, D. Kang, J. Lu, Y. Li, and J. Jiang, “Mapping Fuzzy 
Concepts Between Fuzzy Ontologies,” Proc. of the 9th 
International KES Conference, Melbourne, Australia, 2005, 
LNCS 3683, pp. 199-205. doi: 10.1007/11553939_29. Access 
date: 20.12.2012 
[38] S. Niwattanakul, P. Martin, M. Eboueya, and K. Khaimook, 
“Ontology Mapping based on Similarity Measure and Fuzzy 
Logic,” Proc. of World Conference on E-Learning in 
Corporate, Government, Healthcare, and Higher Education, T. 
Bastiaens and S. Carliner (Eds.), 2007, pp. 6383-6387. 
[39] P. Agarwal, “Ontological Considerations in GIScience,” 
International Journal of Geographical Information Science, 
vol. 
19, 
issue 
5, 
2005, 
pp. 
501–536. 
doi: 
10.1080/13658810500032321. Access date: 19.12.2012 
[40] F. Bobillo and U. Straccia, “FuzzyDL: An Expressive Fuzzy 
Description Logic Reasoner,” Proc. of IEEE International 
Conference on Fuzzy Systems, 1-6 June 2008, pp. 923-930. 
doi: 10.1109/FUZZY.2008.4630480. Access date: 19.12.2012 
[41] M.-S. Yang and D.-C. Lin, “On Similarity and Inclusion 
Measures between Type-2 Fuzzy Sets with an Application to 
Clustering,” Computers and Mathematics with Applications, 
vol. 
57, 
2009, 
pp. 
896-907. 
doi:10.1016/j.camwa.2008.10.028. Access date: 20.12.2012 
[42] L. Bloch, H. Maitre, “Fuzzy Mathematical Morphologies: A 
Comparative Study,” Pattern Recognition, vol. 28, 1995 pp. 
1341-1387.  
[43] K. Janowicz, C. Keßler, M. Schwarz, M. Wilkes, I. Panov, M. 
Espeter, and B. Baeumer, “Algorithm, Implementation and 
Application of the SIM-DL Similarity Server,” Proc. of the 
Second International Conference on GeoSpatial Semantics 
(GeoS 2007), Mexico City, Mexico, 29–30 November 2007, 
pp. 128–145. doi: 10.1007/978-3-540-76876-0-9. Access 
date: 19.12.2012 
 
 

