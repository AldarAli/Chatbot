5G Slicing Management and Orchestration Architectures - Any Convergence? 
 
Eugen Borcoci, Cosmin Contu, Andra Ciobanu 
University POLITEHNICA of Bucharest - UPB 
Bucharest, Romania 
Emails: eugen.borcoci@elcom.pub.ro, cosmin.contu@elcom.pub.ro, andraciobanu90@yahoo.com 
 
 
Abstract — Management and Orchestration (M&O) are 
essential activities in 5G slicing systems. Essentially, the 
integrated M&O based on The European Telecommunications 
Standards Institute (ETSI) Management and Orchestration 
(MANO) is the basis, but enriched, in order to cope with 
slicing. In particular, supporting technologies like Network 
Function Virtualization (NFV) and Software Defined Networks 
(SDN) are considered, to deliver functional components for 5G 
slicing M&O. The multi-tenant, multi-domain, multi-operator, 
end-to-end (E2E) features of the 5G slicing determine a high 
complexity 
for 
M&O. 
Consequently, 
many 
different 
architectural variants have been already proposed, studied and 
developed in recent studies, standards and projects. The study 
in this paper is useful because, despite many efforts, (spent in 
the last five years) much heterogeneity and different solutions 
still exist, even at the M&O architectural level.  This paper 
analyzes the existing common parts and differences between 
several 5G slicing architectures, in an attempt to identify a 
degree of “convergence”, while considering the MANO as a 
base architecture. 
Keywords — 5G slicing; Management and Orchestration; 
Software Defined Networking; Network Function Virtualization. 
Service management; Resource management.  
I. 
 INTRODUCTION  
The emergent 5G mobile network technologies offer 
powerful features, in terms of capacity, speed, flexibility and 
services, to answer the increasing demand and challenges 
addressed to communication systems and Internet [1][2]. 5G 
can 
provide 
specific 
types 
of 
services 
to 
satisfy 
simultaneously various customer/tenant demands in a multi-
x fashion (the notation –x stands for: tenant, domain, 
operator and provider).   
The 5G network slicing concept (based on virtualization 
and softwarization) enables programmability and modularity 
for network resources provisioning, adapted to different 
vertical service requirements (in terms of bandwidth, latency, 
mobility, etc.) [2]-[6]. In a general view, a Network Slice 
(NSL) is a managed logical group of subsets of resources, 
Physical/Virtual network functions (PNFs/VNFs), placed in 
the architectural Data Plane (DPl), Control Plane (CPl) and 
Management Plane (MPl). The slice is programmable and 
has the ability to expose its capabilities to the users.   
Network Function Virtualization [7]-[9] and Software 
Defined Networks can cooperate [10] to manage and control 
the 5G sliced environment, in a flexible and programmable 
way.   
Management and Orchestration (M&O) is a crucial 
subsystem in 5G. Such topics constitute the object of 
standardization organizations and forums among which The 
3rd Generation Partnership Project (3GPP), The 5G 
Infrastructure Public Private Partnership (5GPPP), and ETSI 
are representative [11]-[16]. They cooperate in order to 
harmonize their specifications. For instance, the 3GPP-
defined management system interacts with ETSI’s NFV 
MANO system to enable the resource management for 
virtualized Core Network (CN), virtualized Radio Access 
Network (RAN) and network slicing. ETSI collaboration 
with 3GPP – especially the Service and System Aspects Fifth 
(SA5) Working Group – is a key throughout the specification 
work of both ETSI NFV Releases 2 and 3, to ensure 
interoperability between management systems. 
ETSI NFV has recently designed new features to support 
5G networks. 5G resource M&O aspects were added on top 
of the NFV Release 2 framework. New NFV Release 3 [9] 
topics related to 5G include: “Support for network slicing in 
NFV”, “Management over multi-administrative domains”, 
and “Multi-site network connectivity”.  These features are 
essential to address the variety of applications expected to 
run on top of a 5G system, whether using distributed 
resources over multiple sites, centralized or a combination of 
both. 
However, it is recently recognized that a complete 
understanding of the relationship of an M&O system and a 
slicing system is still missing [2]. Even more, it is not yet a 
general/common agreement on the slice itself; several 
definitions exist, having major impacts and relationships to 
the M&O.  
In the simplest view, a slice is a service with resource 
guarantees. Here, the slicing system and the orchestration 
system are identical. At the other end of approaches, a slice 
is a complex entity, i.e., a collection of resources 
(computing, networking, storage) – that constitute a virtual 
logical network (and customizable), embedded in some 
physical networking infrastructure. Inside such a slice, the 
slice owner/tenant has partial or even full freedom to enforce 
its own management and control (M&C) policies and 
actions. Many studies and standards adopted the slice 
complex definition; this is also considered in this work, 
given the high flexibility that it can offer to the tenants. On 
the other hand, the complex structure of such a slice induces 
M&O complexity and leads to a large variety of possible 
architectural approaches. 
1
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

Given the rather large variety of architectural proposals, 
there is an interest to evaluate in what degree they have 
similar approaches of the main “core” architectural 
functional set of blocks. This similarity level will be called 
here “convergence”, although this word has usually a richer 
semantic. The focus of this paper is on management and 
orchestration sub-systems. Due to space limitation, this text 
cannot afford to offer detailed explanations about the 
architectures presented; the objective is to identify the major 
point of similarity of different approaches. 
Therefore, this paper is mainly an overview type. Its 
structure is described below. Section II outlines the 
stakeholder roles, given that such definitions determine 
essentially the overall architecture.  Section III evaluates 
whether a unified view exists at architectural level, expressed 
in so-called meta-architecture. Section IV performs an 
analysis of some factors that lead to non-convergent refined 
M&O architectures. Section V uses some examples extracted 
from various studies and projects to illustrate the 
heterogeneity 
of 
solutions. 
Section 
VI 
summarizes 
conclusions and future work.  
II. 
STAKEHOLDER ROLES  
The layered structure of the 5G slicing M&O strongly 
depends on the definition of stakeholder roles (also called 
business model). Different business models aim to support 
multi-tenant, multi-domain end-to-end (E2E) and multi-
operator capabilities. A basic model (see A. Galis, [17]) 
defines four roles:  
Infrastructure Provider (InP) – owns and manages the 
physical infrastructure (network/cloud/data center). It could 
lease its infrastructure (as it is) to a slice provider, or it can 
itself construct slices and then lease the infrastructure in 
network slicing fashion.  
Network Slice Provider (NSLP) – can be typically a 
telecommunication service provider (owner or tenant of the 
infrastructures from which network slices are constructed). 
The NSLP can construct multi-tenant, multi-domain slices, 
on top of infrastructures offered by one or several InPs.  
Slice Tenant (SLT) – is the generic user of a specific slice, 
including network/cloud/data centres, which can host 
customized services. The SLTs can request from a NSLP to 
create a new slice instance.  The SLT can lease virtual 
resources from one or more NSLP in the form of a virtual 
network, where the tenant can realize, manage and provide 
Network Services (NS) to its individual end users. A NS is a 
composition of Network Functions (NFs), defined in terms of 
the individual NFs and the mechanism used to connect them. 
A single tenant may have one or several slices in its domain. 
End User (EU) - consumes (part of) the services supplied 
by the slice tenant, without providing them to other business 
actors. 
The above business model is recursive (see Ordonez et 
al., [3]), i.e., a tenant can at its turn to offer parts of its sliced 
resources to other tenants. Other variants of business models 
are presented in [17]. 
Several recent Public Private Partnership (PPP) Phase 
I/II collaborative research are running, having as objectives 
5G technologies [17]. Some of them extended the list of role 
definitions to allow various possible customer-provider 
relationships between verticals, operators, and other 
stakeholders. In [2] one can find a more refined business 
model:  
Service Customer (SC): uses services offered by a 
Service Provider (SP). The vertical industries are considered 
as typical examples of SCs.  
Service Provider (SP): generic role, comprising three 
possible sub-roles, depending on the service offered to the 
SC: Communication SP offers traditional telecom services; 
Digital SP offers digital services (e.g., enhanced mobile 
broadband and IoT to various verticals); Network Slice as a 
Service (NSaaS) Provider offers an NSL and its services. 
The SPs have to design, build and operate services using 
aggregated network services.  
Network Operator (NOP): orchestrates resources, 
potentially 
from 
multiple 
virtualized 
infrastructure 
providers (VISP). The NOP uses aggregated virtualized 
infrastructure services to design, build, and operate network 
services that are offered to SPs.  
Virtualization 
Infrastructure 
SP 
(VISP): 
offers 
virtualized infrastructure services and designs, builds, and 
operates virtualization infrastructure(s) (networking and 
computing resources). Sometimes a VISP offers access to a 
variety of resources by aggregating multiple technology 
domains and making them accessible through a single 
Application Programming Interface (API).  
Data Centre SP (DCSP): designs, builds, operates and 
offers data center services. A DCSP differs from a VISP by 
offering “raw” resources (i.e., host servers) in rather 
centralized locations and simple services for consumption of 
these raw resources.  
The hierarchy of this model (in the top-down sense of a 
layered architecture) is: SC, SP, NOP, VISP, DCSP. Note 
that, in practice, a single organization can play one or more 
roles of the above list. 
III. 
A GENERIC 5G MANAGEMENT META-ARCHITECTURE 
The analysis of the convergence degree between many 
architectural proposals (in 5G and in particular, in 5G 
slicing) leads to the question: is there any high-level 
consensus architecture?  Recently, the document [2], 
authored by 5G PPP Architecture Working Group has 
identified a set of requirements for a consensus/meta 5G 
high-level architecture (collecting some M&O fundamental 
functionalities). The identified features are general for 5G 
and in particular applicable also to the slicing approach. 
This architecture should be able to support:  
a. individual control of NFs (their distribution/placement, 
number of instances, deployment of an execution 
environment, management of the instances’ states, start/stop 
the instances). 
b. individual NFs chaining into services (NF graphs) 
facilitated by different control mechanisms at network level 
(e.g., the NFs chaining can be SDN -controlled).  
2
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

c. different underlying execution environments: various 
virtualization 
techniques 
(virtual 
machines 
(VM), 
containers, or plain processes) in clusters of different sizes 
(from a CPU board to an entire large-scale data center) over 
different, specialized “technological domains” - i.e., from 
some simple hardware, up to complex networking 
environments (wireless, optics, cable). 
d. 
working 
across 
different 
“organizational”, 
or 
administrative domains, i.e., owned by network operators or 
companies and using various business models (e.g., network 
operators can be separated from cloud infrastructure 
operators).  
e. a large range of applications with different specific 
requirements 
(in 
terms 
of 
resource, 
deployment, 
orchestration and optimization goals);  
f. subdivision of the infrastructure in logical separated 
and isolated slices – while offering different levels of 
guaranteed performance to their tenants. 
Note that slicing capabilities – can be seen as part of a 
M&O system. However, there is no general consensus on 
this inclusion. There are proposals to position a slicing 
system underneath or above a MANO system. 
Several core roles have emerged from the above 
requirements: end user, function developer, application 
developer, validation and verification entity, tenant (owner 
of applications), operator (not necessarily encompassing 
slicing operator) infrastructure provider (network, cloud), 
etc., [2]. These can be mapped onto the roles described in 
Section II. Overlaps can exist between some of the above. 
Also, the mapping of the above roles on real organizations 
roles is flexible. 
The requirements listed above actually drive the 
definition of the M&O meta-architecture, in the sense that 
no matter the solution will be, the six functionalities should 
be included. These define a general level of convergence 
from architectural point of view. A particular architecture 
will be a refinement of the meta-one. 
Another general aspect is related to the different time 
scales of different operations. One can distinguish between 
“orchestration” and “control” actions. The first are mid-
long-time scales operations, relatively heavy-weight (e.g., 
optimization of the overall structure of a service, group of 
services, or slices). The second class comprises short time 
scales operations (e.g., light-weight operations, flow routing, 
etc.). We defend here the idea that such a logical separation 
should exist (it is natural) between functional elements 
performing the orchestration w.r.t. those dedicated to control; 
however, in different refinements of the meta-architecture 
this separation is not quite obvious; this, again, leads to 
heterogeneity of approaches. 
The basic framework for a high-level meta-architecture is 
offered by ETSI NFV (Figure 1). The main M&O blocks are: 
the NFV Orchestration (NFVO), VNF Manager (VNFM) 
and Virtual Infrastructure Manager (VIM). If the principle of 
separation between the orchestration and control is applied, 
then the specific network configuration tasks (e.g., 
connectivity - related) can be outsourced to a separate SDN 
controller, working under command of the NFVO. An 
alternative could be, to split the NFVO into two parts – 
orchestrator and controller. 
 
 
Figure 1.  Network slice management in an NFV framework  (ETSI GR 
NFV-EVE 012 V3.1.1, [14] ) 
NFV -Network Function Virtualization; EM - Element Manager; 
MANO - Management and Orchestration (NFVO – NFV Orchestration; 
VNFM – VNF Manager; VIM Virtual Infrastructure Manager); VNF/PNF –
Virtual/Physical Network Function; NFVI -NFV Infrastructure; NS-
Network Service; OSS-Operations Support System. 
 
The slicing support feature (i.e., yes/no) introduces 
significant differentiation between particular architectures. 
The slice management can be included into the NFVO 
(because a network slice instance (NSLI) can be actually 
seen as a guaranteed network service), or a separate slice 
manager exists (controlled by NFVO). The service 
management can be defined as separated from resource 
management, or they can be treated together. A cleaner 
architecture is resulting in the former case. 
In multiple domain cases, the NFVOs should federate in 
some form with peer NFVOs, placed in a single or in 
multiple organizations. In some approaches, a hierarchy of 
service management instances is developed, having on top a 
multi-domain manager (working at abstract level) and then 
single-domain managers. The latter should perform also peer 
interactions. 
A typical set of functional M&O blocks for a single-
domain meta-architecture is [2] (top-down ordered levels): 
[Service management, Orchestrator, (MANO controller, 
SDN controller), VIM, Resources]. In a multi-domain 
environment, each domain should have the previous set and 
above all a multi-domain service manager should exist. Note 
that inter-domain (horizontal) peer interactions must exist 
between peers (e.g., Orchestrator_X <---> Orchestrator_Y). 
The basic 5G slicing high level architecture proposed by 
ETSI [14] (Figure 1), can be considered as a meta-
architecture comprising the six features exposed above. To 
the original ETSI NFV architecture [7][8], several new 
functional blocks have been added in order to support the 
network slicing (ETSI-NFV EVE 012 [14]). 
The 3GPP TR 28.801 document [15] defines three new 
management 
functions: 
Communication 
Service 
Management 
Function 
(CSMF) – it 
translates 
the 
communication service requirements to NSL requirements; 
3
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

Network Slice Management Function (NSMF) - responsible 
for the management (including instances lifecycle) of NSLIs 
(it derives network slice subnet requirements from the 
network slice related  requirements); Network Slice Subnet 
Management Function (NSSMF) - responsible for the 
management (including lifecycle) of Network Slice Subnet 
Instances (NSSIs).  
An interface is defined, i.e., Os-Ma-NFVO Reference 
Point (RP) with ETSI NFV-MANO. To interact in an 
appropriate way with NFV-MANO, the NSMF and/or 
NSSMF need to determine the type of NS or set of NSs, 
VNF and PNF that can support the resource requirements for 
a NSLI or NSSI, and whether new instances of these NSs, 
VNFs, and the connectivity to the PNFs, need to be created, 
or existing instances can be re-used. 
Starting from the above basic architecture and 
considering different visions (shortly presented in the 
Introduction section), several groups developed a large set of 
variants of refined architectures [17]. Some of them are 
substantially different from each other. Currently there is a 
high heterogeneity seen in this area. The question analyzed 
in this paper is: how much convergence/similarity and how 
much mutual compliancy exists among them?  
IV. 
 WHERE DOES  THE HETEROGENEITY COME FROM? 
This section will summarise the factors leading to   
heterogeneity in the area of particular architectures. Note 
that, given the topics complexity, this analysis cannot be 
exhaustive. Some aspects are not touched, or only briefly 
mentioned, such as: abstraction aspects, slice isolation and 
security, slice composition, monitoring issues and slice 
optimization, 
details 
on 
multi-domain 
interactions, 
technological details and so on.   
The services deployment is inherently heterogeneous, 
depending on applications to be supported. An example is 
the traffic locality property (at the edge of the network/slice 
or crossing the core part). An orchestrator should be aware of 
such traffic properties and, if necessary, deploy the 
corresponding network functions at the mobile edge. The 
orchestrator needs to have enough topology information of 
slices in order to be able to install appropriate functions at 
right places. 
The execution environments at the infrastructure level 
could also be heterogeneous. The infrastructure should 
provide an interface to the orchestrator, via which different 
functions execution can be started, stopped, paused, or 
migrated; the interface also provides means to influence the 
transport of data. Variants can exist: 
• 
The infrastructure hides (to MANO) its information 
on the type of execution elements available. The 
infrastructure management chooses the right (i.e., 
“functionally possible”) realization of a function 
(virtual machine (VM) or container, etc.). This 
abstraction simplifies the MANO tasks, but makes 
difficult for the infrastructure manager to decide 
what is “performance-optimal” in the absence of 
information about the performance requirements of 
an entire service, and the relationships to other 
services. 
• 
The 
infrastructure 
provides 
to 
the 
MANO 
information on available types of execution 
resources (quantity, locations, etc.). So, the MANO 
has enough information to optimize the execution 
environment. The price paid is a higher burden for 
MANO. Note that such an approach should consider 
the degree of trust between the infrastructure 
provider and MANO entity, especially in multi-
domain environment. 
The hardware heterogeneity at infrastructure level can 
also determine many variants, e.g., virtualization methods 
and other factors (e.g., Field programmable gate arrays 
(FPGA), Graphics processing unit (GPU) implementations, 
hardware accelerators, etc.). 
The classical principle of vertical separation of services 
in 
network-related 
(i.e., 
connectivity–oriented) 
and 
application-level services (e.g., caching, video transcoding, 
content-oriented, web server, etc.) could be preserved or not. 
The separation will require one orchestrator vs. separate 
network/service orchestrators. One can speak about 
segregated 
or 
integrated 
orchestration, 
respectively. 
Concerning slicing, one can define some slices offering 
essentially connectivity services and other dedicated to high-
level applications. The clear separation of areas of 
responsibility over resources could be an advantage for 
operational stability (e.g., a segregated RAN orchestrator 
could still maintain basic RAN services even if an 
application-oriented orchestrator fails). On the other hand, 
the integrated orchestration could be attractive, in particular 
for operators, if both kinds of services could be orchestrated 
in the same fashion (and possibly even with the same 
orchestration infrastructure). These two options also 
determine heterogeneity at M&O architectural level. 
 Segregated orchestrators lead to a more complex overall 
architecture. One must assign areas of responsibilities from a 
resource perspective (which orchestrator controls - what 
resources); one should identify services pertaining to each 
orchestrator. The split of service is also a problem, i.e., the   
service description should define the “network” and 
“application-facing” parts of the service. Aligning the control 
decisions taken by these two kinds of orchestrators in a 
consistent way is also not trivial. In an integrated 
orchestration approach, all these problems disappear. 
However, an integrated orchestrator might be very complex 
if required to treat substantially different services (a one-
size-fits-all orchestration approach is rather not the best 
choice). An integrated orchestrator is a more challenging 
piece of software (from both dependability and performance 
perspectives) but would result in a simpler overall 
architecture.  
Considering the above rationale, we defend the idea that 
from the slicing point of view, a segregate orchestrator is a 
better choice. 
However, in practice, both approaches have been 
pursued in different projects. Currently, a final verdict 
commonly 
agreed, 
on 
segregated 
versus 
integrated 
orchestration is not yet available. Apparently, there is no 
need to standardize this option, as long as both of them 
could be realized inside a meta-architecture. So, for the time 
4
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

being, we can state that M&O heterogeneity, from this point 
of view, will last. 
Another 
architectural 
choice 
is 
on 
“flat” 
or 
“hierarchical” orchestration. In the flat solution, a single 
instance of a particular orchestrator type is in charge of all 
assigned resources. In the hierarchical solution, there are 
multiple orchestrators (a “hierarchical” model is needed, 
when orchestrators know to talk to each other). Note that a 
hierarchical orchestrator is not necessarily a segregated one, 
because all hierarchy members could deal with the same type 
of services. 
In many projects and studies, the hierarchical M&O 
option is chosen [6][17]-[20]. However, several issues 
should be solved in each of the two solutions [2]: 
• 
The number of hierarchy levels and each member 
responsibility area could be fixed or adaptive (upon 
load changes the responsibility areas can be 
split/merged; 
new 
hierarchy 
levels 
can 
be 
added/removed and new orchestrator instances can 
be started or some old ones can be stopped). 
However, the adaptive option is highly complex, 
given the inherent dynamicity capability required. 
• 
North/south 
vertical 
interfaces 
between 
the 
orchestrators must be defined. In a flat model, the 
service requests are received by an orchestrator’s 
northbound interface (NBI). At its south bound the 
orchestrator communicates with NBI of the 
abstracted infrastructure (VIM). These two NBIs are 
structurally different. In a hierarchical model, an 
orchestrator should be able to communicate with a 
lower level orchestrator through a different interface 
than for VIM.  So, an orchestrator should be able to 
use different NBIs (NBI of a VIM, or NBI of a 
lower-level orchestrator). It is still in study to create 
uniform interfaces; the advantage would be that from 
the perspective of a higher-level orchestrator, it 
always talks to a VIM-style interface. The recursive 
orchestration could be much easier implemented.  
• 
Horizontal interfaces (east/west) should be defined 
between peer orchestrators (those who are on the 
same level), if they are allowed to negotiate directly 
with each other (for resources). Such interfaces are 
naturally to exist in cross-domain slicing scenarios. 
• 
Multi-domain scenarios create new problems (e.g., 
in the case of a multi-domain “federated” slice) 
[6][18]. In a flat model, each orchestrator of a 
domain is actually multi-orchestration capable, i.e., it 
can 
discuss/negotiate 
with 
other 
domains’ 
orchestrators. In the hierarchical model, a higher-
level orchestrator could exist, in charge of 
harmonizing multiple organizations cooperation. 
However, several issues are not fully solved today: 
which 
entity 
would 
run 
that 
multi-domain 
orchestrator, trust issues, preservation of domains 
independency, assuring the fairness, etc.  
• 
Mapping of the orchestration entities (and their 
areas of responsibility) onto “domains” (in a very 
general sense of the word) is still an open research 
issue and it is also a factor of heterogeneity of the 
refined M&O architectures. For instance, one could 
have 
separate 
orchestrators 
for 
different 
technological 
domains 
(e.g., 
computational 
resources, optical networking infrastructure, wireless 
edge, etc.). However, the word “domain“ can be 
associated to organizations/companies boundaries. 
Such domains have overlap with the technological 
ones.  A third semantic is that a “domain” could be a 
subdivision of a larger infrastructure into an edge 
domain, a core domain, etc. (each one spanning 
multiple technologies, possibly dealing with all 
kinds of services in a non- segregated way). 
• 
Relationship of the M&O system and a slicing 
system is another factor of architectural variability, 
depending on what the definition of a slice is. A 
largely agreed solution is to have a general 
orchestrator (configured offline), capable to trigger 
the construction of a new slice and then to install in 
this new slice its own dedicated orchestrator (before 
the slice run-time). To still assure the basic services 
outside any slice (e.g., packet forwarding at network 
level) one can construct an additional special 
orchestrator installed outside of all slices. Currently, 
many combinations have been proposed, and there is 
still no consensus on such matters. The convergence 
of solutions will be determined probably by the 
adoption of a more unique definition of a slice – 
which could assure better inter-operability.  
V. 
EXAMPLES  OF SLICED 5G MANAGEMNT AND 
ORCHESTRATION ARCHITECTURES  
This section will provide some examples to illustrate the 
major M&O options and also the heterogeneity of the refined 
architectures. Given the limited dimension of this paper, the 
examples are included mainly for illustrative purposes, i.e. 
this text cannot cover a large set of refined architectures. 
The 5GPPP Working Group details a 5G multi-domain 
architecture by defining four planes [1]: Service, M&O, 
Control and Data planes. The architecture also includes a 
Multi-Domain 
Network 
Operating 
System 
containing 
different adaptors and network abstractions above the 
networks and clouds heterogeneous fabrics. The M&O plane 
comprises a general Service Management, the Software-
Defined Mobile Network Orchestrator (SDMO) and the 
ETSI NFV lower level managers (i.e., VNFM and VIM). 
The SDMO is composed of a domain specific application 
management, an Inter-slice Resource Broker and NFV-
NFVO. The SDMO performs the E2E management of 
network services; it can set up slices by using the network 
slice templates and merge them properly at the described 
multiplexing point. Note the definition of a separated Control 
Plane. It is “horizontally” separated in two parts: intra and 
inter-slice control functions. “Vertically”, it is organized in 
SDN style, i.e., with three planes: Control applications (inter 
and intra-slice); SDN controllers; SDN nodes (these are 
actually slicing control function blocks realized as 
PNF/VNFs). Note also the flexibility of SDN-NFV 
cooperation: some slicing control functions are seen and 
5
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

realized as SDN nodes.  The SDN controllers are two types: 
Software-Defined Mobile Network Coordinator (SDM-X) 
and Software-Defined Mobile Network Controller (SDM-C). 
 
NSL Instance 1 
Tenant SDN 
controller 
 
 
Multi-domain NSL Orchestrator 
 
Catalogs 
NS, VNF 
VNF 
chain,  
config 
VNF LCM 
NSL Provider 
 Domain 
NSL Instance n 
VNF 
VNF 
VNF 
Multi-domain Resource Orchestrator 
 
NSL 
 Tenant 
 n 
domain 
NSL Manager 
NS Orchestrator 
 
VNFM 
VNFs running 
on orange VMs 
Instantiated 
for each slice 
instance  
NSL 
 Tenant 
1 
domain 
Multi-domain Infrastructure (VIM, SDN controllers, networking, computing) 
 
 
Figure 2. Run-time view of a multi-domain slicing hierarchical architecture example 1  
(adapted from ETSI GR NFV-EVE 012 [14] and Ordonez-Lucena [3][19]) 
 
NS – Network Service; NSL - Network Slice; VNF – Virtualized Network Function; VNFM – VNF Manager; SDN Software Defined Networking; LCM –
Life Cycle Management; VIM – Virtual Infrastructure Manager  
In Figure 2, a multi-domain hierarchical slicing 
architecture (viewed at run-time phase) is presented 
according to the proposal from ETSI GR NFV-EVE 012 [14] 
and J.Ordonez-Lucena et al. [3][19]. The main M&O entity 
is the Network Slice Provider (NSLP). Note the multiple 
levels of orchestrators and separation between service and 
resource management. Inside NSLP, a highest layer NSL 
Orchestrator (NSLO) (configured offline) has a main role in 
the creation phase of slices and also in the run-time phase. In 
the creation phase, NSLO receives the order to deploy a 
NSLI for a tenant (or the NSLP decides itself to construct a 
slice). The NSLO should have enough information 
(including on multi-domain resource availability) in order to 
check the feasibility of the order. To accomplish this, it 
interacts with a lower level Resource Orchestrator (RO) 
(which aggregates resource information from several 
domains (InPs)), and also accesses the VNF and NS 
catalogues. 
The NSL provider plays a role of an infrastructure tenant; 
it rents the infrastructure resources owned by the underlying 
infrastructure providers, and uses them to provision the NSL 
instances. The RO uses the set of resources supplied by the 
underlying VIMs/WIMs and optimally dispatches them to 
the NSL instances. All the NSL instances are simultaneously 
provided with the needed resources to satisfy their 
requirements and preserve their performance isolation. Note 
that in this high-level architecture proposal it is not detailed 
how the multi-domain capable RO is implemented in order 
to assure inter-domain independence.  
For each network slice instance (NSLI), individual M&O 
entities are dynamically created. Each NSLI has its own 
management plane (to get slice isolation) composed of: NSL 
Manager, NS Orchestrator (NSO), Tenant SDN Controller 
and VNF Manager (VNFM). 
Taleb et al. [6] recently proposed a multi-domain slicing 
hierarchical, complex orchestration architecture (see Figure 
3). It is structured into four major strata: Multi-domain 
Service 
Conductor, 
Domain-specific 
Fully-Fledged 
Orchestration, Sub-Domain Management and Orchestration 
(MANO) and Connectivity, and Logical Multidomain Slice 
Instance stratum. The architecture introduces (at top level) a 
novel architectural plane - Service Broker (SB), to handle 
incoming slice requests from verticals, for instance Mobile 
Virtual Network Operators (MVNO), and application 
providers. The main SB operations are: NS admission 
control and negotiation, considering service aspects; 
management of slice user/owner relationship enabling a 
direct tenant interface with the MSC plane; billing and 
charging; NSLI scheduling, i.e., start and termination instant 
of time, related with slice composition and decommission.  
Below the SB, a Multi-domain Service Conductor (MSC) 
plane is defined, to perform service management across 
federated domains. The MSC stratum analyzes and maps the 
service requirements of incoming multi-domain slice 
requests onto the respective administrative domains. It also 
maintains the desired service performance throughout the 
entire service life-cycle. Inside MSC, a Service Conductor 
(SC) is placed on top; the SC analyses and maps the service 
requirements of incoming slice requests onto appropriate 
administrative domains and maintains the desired service 
performance during service lifecycle. Below SC, a Cross-
domain Slice Coordinator is defined for each slice, which 
aligns cloud and networking resources across federated 
domains and carries out the Life Cycle Management (LCM) 
6
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

operations of a multi-domain slice. It also establishes and 
controls inter-domain transport layer connectivity, assuring 
the desired performance. A multi-domain NSLI can combine 
several Fully-Fledged NSLIs that belong to distinct 
administrative domains, to get an E2E multi-domain (i.e., 
federated NSLI).  
For each domain a Fully-fledged NetSlice Orchestration 
Plane is constructed, dealing with specific operations 
associated to slices instance in that domain (such as service 
management and slice lifecycle management). The lower 
layers of this specific orchestration plane comprise NFV 
MANO functionalities (NFVO, VNFM and VIM). Low level 
connectivity tasks between VNF/PNFs are performed by an 
SDN controller.  
The 5G-MoNArch H2020 project [20] develops a 
hierarchical architecture consisting of four layers: Service, 
M&O, Controller and Network layer (similar to that 
proposed in [1] by 5GPPP). The overall functional 
architecture is presented in Figure 4. The Service layer 
comprises Business Support Systems (BSS), business-level 
Policy and Decision functions, and further applications and 
services operated by a tenant or other external entities.  
The M&O layer contains M&O functions from different 
network, technology, and administration domains (e.g., 
3GPP public mobile network management, ETSI NFV 
MANO, ETSI Multi-access Edge Computing functions 
[ETSI MEC16], management functions of transport network 
or enterprise networks. The M&O layer is divided into an 
End-to-End (E2E) service M&O sublayer and an additional 
sublayer containing domain-specific management functions. 
An E2E network slice is composed of Network Slice Subnet 
Instances (NSSIs), typically each from a different network 
domain, including subnets from radio access network (RAN), 
transport, and core network domains, or private networks. 
The M&O layer performs cross-domain coordination actions.  
 
Service Conductor 
 
Service 
Repository 
End 
Users 
Multi-domain Service Conductor Plane 
Unified Connectivity 
Resource Manager 
 
 Tenants (verticals, MVNO, APP providers 
Unified Cloud  
Mediator 
 
OSS/BSS 
Cross-domain Slice Coordinator 
Cross-domain Slice Coordinator 
Cross-domain Slice Coordinator 
Slice A 
Slice B 
Slice C 
Logical Multi-domain Network Slices 
Multi-domain Network Slice Functions 
Control Plane  
VNFs 
Data Plane  
VNFs 
Virtualisation layer 
Physical Resources: 
Network, Compute, Storage 
 
NFVI 
Virtual Resources: 
Network, Compute,Storage, 
VNF-domain  
 
 
D1 
D2 
D3 
Service Management 
 
 
 
 
 
 
 
 
 
 
PoP 3 
Slice Life-Cycle Management 
Fully-fledged Net Slice Orchestration Plane 
 
 
 
 
 
 
 
 
 
 
PoP 3 
Sub-domain NFV MANO 
 
 
 
 
 
 
 
 
 
PoP 3 
VNF 
VNF 
VIM/WIM 
NFVO 
VNFM (s) 
Domain 
specific VNF 
Catalogue 
Service Broker 
 
  
 
Sub-domain  
Connectivity 
control 
SDN 
Controller 
Multiple Admin Domains 
One per 
slice 
One per 
domain 
 
Figure 3.  Multi-domain multi-tenant slicing architecture example 2 (adapted from [6]) 
 
7
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

 
 
Figure 4. 5G-MoNArch high-level structure of the overall functional architecture (Source: [20]) 
 
Note again the architectural separation between the 
management and control. The Controller layer comprises 
two types of controllers- cross-slice and the intra-slice (XSC 
and ISC, respectively). On top of the controllers, there are 
Control Applications; together they realise the network 
programmability in SDN style. Each network domain has a 
dedicated controller that is aware of the domain technology 
and implementation characteristics.  
Other architectures are proposed and developed in 
different research projects [17]. Again, all of them satisfy the 
characteristics of the meta-architecture described in Section 
III. However, different specific developments are present in 
their refined version. 
VI. 
CONCLUSIONS AND FUTURE WORK 
This is an overview-type paper; it analyzed different 
M&O architectures for 5G slicing, in order to evaluate the 
degree of their similarity/convergence, given the large 
variety of proposals existing in various studies, standards and 
projects. 
It has been shown that business model definitions 
(actors) and their roles (Section II) have an important impact 
on the high-level definition of the architectural assembly. 
Actually, the variety of business models is a primary factor 
of architectural heterogeneity, given the different definition 
of actors and roles, adopted mainly from business reasons 
and only secondly from technical ones. Also, the definition 
of a slice itself is still not globally agreed upon and this 
naturally leads to different architectures. 
 However, a unifying meta-architecture has been defined 
(see Section III), answering to some basic requirements for 
5G systems and, in particular, for 5G M&O slicing. It has 
been derived from ETSI MANO work complemented with 
additional functionalities slice-oriented. The most relevant 
architecture examples found in literature and developments 
are essentially compliant with the basic meta-architecture. It 
is important to note that, all relevant architectures proposed 
in different studies, standards and projects generally try to 
achieve the main meta-architecture capabilities. 
On the other hand, many factors are inducing 
heterogeneity of the refined architecture variants, such as: 
multi-domain, multi-tenant, multi-operator, multi-technology  
 Future work can go further to consider more deeply the 
multi-x aspects, implementation and performance. Future 
work can concentrate on M&O issues such as: an appropriate 
cooperation between slice-specific management functional 
blocks. Policies need to be captured in a way that they can be 
automatically validated. This automation enables slice-
specific functional blocks to be authorized to perform the 
corresponding management and configuration actions in a 
timely manner. 
Designing computationally efficient resource allocation 
algorithms and conflict resolution mechanisms at each 
abstraction layer is also a way to flexibly assign resource on-
the-fly to slices.  
Lastly, one should mention new approaches for 5G 
slicing M&O architectures: usage of artificial intelligence 
and in particular, machine learning techniques in order to 
provide more M&O automation and capabilities of dealing 
with big volumes of data [21]-[24]. This domain is only at its 
beginning, so is an open field for further studies. 
 
REFERENCES 
[1] 
5GPPP Architecture Working Group, “View on 5G 
Architecture”, Version 2.0, December 2017, https://5g-
ppp.eu/wp-content/uploads/2017/07/5G-PPP-5G-
Architecture-White-Paper-2-Summer-2017_For-Public-
Consultation.pdf, [retrieved June, 2019]. 
[2] 
5GPPP Architecture Working Group, “View on 5G 
Architecture”, 
Version 
3.0, 
June, 
2019, 
https://5g-
ppp.eu/wp-content/uploads/2019/07/5G-PPP-5G-
Architecture-White-Paper_v3.0_PublicConsultation.pdf, 
[retrieved June,  2019]. 
8
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

[3] 
J. Ordonez-Lucena et al., “Network Slicing for 5G with 
SDN/NFV: Concepts, Architectures and Challenges”, IEEE 
Communications Magazine, 2017, pp. 80-87, Citation 
information: DOI 10.1109/MCOM.2017.1600935. 
[4] 
X. Foukas, G. Patounas, A. Elmokashfi, and M. K. Marina, 
“Network Slicing in 5G: Survey and Challenges”, IEEE 
Communications Magazine, May 2017, pp. 94-100. 
[5] 
I. Afolabi, T. Taleb, K. Samdanis, A. Ksentini, and H. Flinck, 
“Network Slicing & Softwarization: A Survey on Principles, 
Enabling 
Technologies 
& 
Solutions”, 
IEEE 
Communications Surveys & Tutorials, March 2018, pp. 
2429-2453.  
[6] 
T. Taleb, I. Afolabi, K. Samdanis, and F. Z. Yousaf, "On 
Multi-domain Network Slicing Orchestration Architecture & 
Federated 
Resource 
Control", 
http://mosaic-
lab.org/uploads/papers/3f772f2d-9e0f-4329-9298-
aae4ef8ded65.pdf, [retrieved June, 2019]. 
[7] 
ETSI GS NFV 002, “NFV Architectural Framework”, 
V1.2.1, December, 2014. 
[8] 
ETSI GS NFV-IFA 009, “Network Functions Virtualisation 
(NFV); 
Management 
and 
Orchestration; 
Report 
on 
Architectural Options”, Technical Report, V1.1.1, July, 2016.  
[9] 
ETSI GR NFV-IFA 028, “Network Functions Virtualisation 
(NFV) Release 3; Management and Orchestration; Report on 
architecture options to support multiple administrative 
domains”, Technical Report, V3.1.1, January, 2018. 
[10] ONF TR-526, “Applying SDN Architecture to 5G Slicing”, 
April 2016.  
[11] 5G 
Network 
and 
Service 
Management 
Including 
Orchestration 
v3.14.0, 
Project 
5G 
NWMO, 
2019, 
https://www.ngmn.org/fileadmin/ngmn/content/downloads/T
echnical/2019/190312_5G_Network_and_Service_Manage
ment__including_Orchestration_3.14.0.pdf, [retrieved June, 
2019]. 
[12] ETSI NFV Announces New Features to its Architecture to 
support 
5G, 
https://www.etsi.org/newsroom/press-
releases/1622-2019-07-etsi-nfv-announces-new-features-to-
its-architecture-to-support-5g, [retrieved July, 2019]. 
[13] G. Daniels, ETSI tightens 3GPP 5G compatibility with NFV 
Release 
3, 
July 
2, 
2019, 
https://www.telecomtv.com/content/nfv/etsi-tightens-3gpp-
5g-compatibility-with-nfv-release-3-35653/, [retrieved July, 
2019]. 
[14] ETSI GR NFV-EVE 012, Release 3 “NFV Evolution and 
Ecosystem; Report on Network Slicing Support with ETSI 
NFV Architecture Framework”, Technical Report, V3.1.1, 
December, 2017. 
[15] 3GPP TR 28.801, "Telecommunication management; Study 
on management and orchestration of network slicing for next 
generation network", V15.0.0, September, 2017. 
[16] 3GPP TS 28.530, “Management of 5G networks and 
network slicing; Concepts, use cases and requirements”, Rel. 
15, April 2018. 
[17] A. Galis, “Network Slicing- A holistic architectural 
approach, orchestration and management with applicability 
in 
mobile 
and 
fixed 
networks 
and 
clouds”, 
http://discovery.ucl.ac.uk/10051374/, [retrieved July, 2019]. 
[18] K. Katsalis, N. Nikaein and A. Edmonds, "Multi-Domain 
Orchestration 
for 
NFV: 
Challenges 
and 
Research 
Directions", 2016 15th Int'l Conf. on Ubiquitous Computing 
and Communications and International Symposium on 
Cyberspace and Security (IUCC-CSS), pp. 189–195, DOI: 
10.1109/IUCC-CSS.2016.034, 
https://ieeexplore.ieee.org/document/7828601, 
[retrieved 
July, 2019]. 
[19] J. Ordonez-Lucena et al., "The Creation Phase in Network 
Slicing: From a Service Order to an Operative Network 
Slice", 
European 
Conference 
on 
Networks 
and 
Communications 
(EuCNC), 
2018, 
https://arxiv.org/abs/1804.09642 [retrieved July, 2019]. 
[20] H2020-ICT-2016-2, Monarch Project, 5G Mobile Network 
Architecture for diverse services, use cases and applications 
in 5G and beyond, Deliverable D2.3, “Final overall 
architecture”, 
2019, 
https://5g-monarch.eu/wp-
content/uploads/2019/05/5G-
MoNArch_761445_D2.3_Final_overall_architecture_v1.0.p
df, [retrieved June, 2019]. 
[21] V. P. Kafle et al., “Consideration on Automation of 5G 
Network slicing with Machine Learning”, ITU Kaleidoscope 
Santa Fe, 2018. 
[22] J. Moysen and L. Giupponi, “From 4G to 5G: Self-organized 
Network 
Management 
meets 
Machine 
Learning”, 
arXiv:1707.09300v1 [cs.NI] 28 July 2017. 
[23] S. Ayoubi et al., Machine Learning for Cognitive Network 
Management, IEEE Communications Magazine, January 
2018, pp.158-165. 
[24] D. Lorenz et al., “SliceNet – Cognitive Slice Management 
Framework for Virtual Multi-Domain 5G Networks”, 
https://www.systor.org/2018/pdf/systor18-21.pdf, [retrieved 
September, 2019]. 
 
 
 
9
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-747-4
AFIN 2019 : The Eleventh International Conference on Advances in Future Internet

