Software Quality Assessment and Error/Defect Identiﬁcation in the Italian Industry
Preliminary Results from a State of the Practice Survey
Giuseppe Scanniello
University of Basilicata
Dipartimento di Matematica e Informatica
85100, Potenza, ITALY
giuseppe.scanniello@unibas.it
Fausto Fasano
University of Molise
STAT Dept.
86090, Pesche (IS), Italy
fausto.fasano@unimol.it
Andrea De Lucia, and Genoveffa Tortora
University of Salerno
School of Science
84084, Fisciano (SA), ITALY
adelucia@unisa.it, tortora@unisa.it
Abstract—In this paper, we present the results of a sur-
vey aimed at comprehending the relevance and the typology
of the software quality assessment approaches and software
error/defect identiﬁcation methods/approaches used in the
industrial practice. The context of this study was the IT
industry. In particular, we involved industries/organizations
that develop and sell software as a main part of their business
or develop software as an integral part of their products
or services. The results of a preliminary analysis indicated
that software quality assessment and software error/defect
identiﬁcation are very relevant and regard almost the totality of
the interviewed companies. Furthermore, the widely used and
most popular practice is testing, while an increasing interest
has been manifested in distributed inspection methods.
Keywords-empirical investigation; quality assessment; er-
ror/defect identiﬁcation; inspection; state of the practice sur-
vey; testing.
I. INTRODUCTION
To construct high quality products engineering disciplines
check intermediate and ﬁnal artifacts so that defects can
be identiﬁed and then removed. Similarly, software devel-
opment needs complementary combination of design and
veriﬁcation/validation activities to produce and deliver high
quality software products [24]. In fact, today it is widely
recognized that veriﬁcation and validation activities are
needed to assess and maintain the quality of a software
product.
In the software engineering community, there is a growing
interest towards surveys investigating the state of the art
and practice about the use of processes, methods, and tools
within software products development and maintenance [12],
[17], [19], [22] as well as for software veriﬁcation, valida-
tion, and review [5], [14].
Surveys are investigations to gather data from respon-
dents, using a questionnaire composed of closed or open
questions [23]. Depending on the survey purpose, it may
focus on opinions or factual information [16]. Data can
be collected by: face-to-face and phone interviews, mail,
e-mails, and web pages. E-mail surveys are both very
economical and very fast. They are often best for sensitive
items, and there is no interviewer bias. On the other hand,
email surveys are limited to simple questionnaires. The
data can be analyzed to derive descriptive and explanatory
conclusions [2] that are applicable only to the selected
population.
In this paper, we present the preliminary results of a
survey organized by three Italian Universities – University of
Basilicata, University of Molise, and University of Salerno
– to understand the state of the practice of software quality
assessment and software error/defect identiﬁcation in the IT
Italian industry.
The survey was conducted from the spring 2008 to
the winter 2009. We invited to participate 70 compa-
nies/organizations that develop and sell software as a main
part of their business or develop software as an integral
part of their products. We received by e-mail 30 fully
completed questionnaires from key people of the invited
companies/organizations.
The main ﬁndings of the study can be summarized as
follows:
Software quality assessment and software er-
ror/defect identiﬁcation are very relevant and re-
gard roughly almost the totality of the interviewed
companies. The widely used and popular practice
is testing. An increasing interest has been however
manifested in distributed inspection methods.
The remainder of the paper is organized as follows: Related
work is presented in Section II, while Section III presents
the design of the study. The preliminary analysis of the data
and the threats that may affect the validity of the results
are discussed in Section IV. Final remarks and future work
conclude the paper.
II. RELATED WORK
Methods and techniques for software quality assessment
and software error/defect identiﬁcation have been largely
experimented in case studies and controlled experiments [8],
[18]. A number of systematic reviews and state of the art
surveys have been proposed in the literature on these top-
ics [4], [7], [15], [17]. On the other hand, only a few numbers
of state of the practice survey have been conducted in the
589
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

past [5], [14]. Accordingly, in the following subsections we
describe state of practice surveys related to software review
and to process and methods for software development and
maintenance.
A. Software Reviews
The focus of the survey presented in [5] is the analysis
of the current state of the practice in industry regarding the
application of reviews and inspections. The major focus is
on the concrete application of walkthroughs, peer reviews,
and formal inspections. Similarly to our study, the results
indicate that there are still many objections against the
usage of the techniques considered in the study. The main
highlighted concern is that these techniques are perceived
as too time consuming and thus not applicable in practice.
Differently from us, this state of the practice surveys is only
focused on walkthrough and software inspections.
Based on the results discussed in [5] and [21], Jedlitschka
et al. [14] conduct a survey to investigate the state of
the practice of inspection technology in German software
industry decision makers. They involved 92 companies and
observed that information regarding the impact of technolo-
gies on product quality, cost, and development time, as
well as on technology cost-beneﬁt ratio is considered highly
relevant for the interviewed decision makers.
B. Software Development and Maintenance
Hauge [12] explores and investigates the open source
phenomena in the IT industry. He adopts both a literature
study and a web-based survey. The sample is composed
of companies from the Norwegian software industry. The
results of this study show that the open source is widely
used. In particular, he observes that about 50% of the
Norwegian IT companies adopt open source code in the
marketed software products.
Conradi et al. [19] presents a state of the practice survey
on risk management in software development with off-the-
shelf software components. The authors interviewed soft-
ware companies from Norway, Italy, and Germany. The
results show that off-the-shelf components normally do not
contribute negatively to the quality of the software system.
Furthermore, the study also reveals that issues such as the
underestimation of integration effort and inefﬁcient debug-
ging remain problematic.
Torchiano et al. [22] reports on a state of the practice
survey conducted among 59 Italian software companies. This
survey is conducted within a research project [9] and aims
at analyzing the state of the practice in software migration.
The results of the survey indicate that about 66% of the
interviewed companies have some experiences in migration
tasks. The study also highlights the lacking of tools for the
execution of migration tasks. This however does not seem
to constitute a problem for the interviewed companies.
III. DEFINITION AND DESIGN
The goals of the survey we have conducted in the IT
Italian industry can be summarized as follows:
Primary goal: comprehending the relevance and the
typology of the software quality assessment approaches and
software error/defect identiﬁcation methods/approaches used
in the practice.
Secondary goal: identifying the main problems and the
actual needs (methods, techniques, and tools).
With respect to the goals, the following research questions
have been deﬁned and investigated:
RQ1 What is the relevance of quality assessment and
error/defect identiﬁcation in IT Italian industry?
RQ2 What are the most popular and widely used prac-
tices?
RQ3 What are the main problems encountered to employ
approaches/methods for quality assessment and software
error/defect identiﬁcation?
RQ4
Is
there
an
interest
in
never
used
approaches/methods for quality assessment and software
error/defect identiﬁcation?
The survey has been conducted through the following
three steps:
(i) Designing a common questionnaire that includes the
main questions and perspectives;
(ii) Conducting the survey leveraging the industrial contact
networks of the Universities involved in the study;
(ii) Analyzing the data and packaging the results.
A. Conceptual Model
The conceptual model clariﬁes the meaning of some terms
(e.g., project and inspection) and describes all the entities of
interest for the survey.
Project. It represent a completed software project.
Software artifact. It is a tangible product created during
software development.
Testing. “The process of analyzing a software item to de-
tect the differences between existing and required conditions
(that is, bugs) and to evaluate the features of the software
items” [1].
Inspection. “A static analysis technique that relies on
visual examination of development products to detect er-
rors, violations of development standards, and other prob-
lems” [13].
Distributed Inspection. It is a method to support geo-
graphically distributed teams in the inspection of software
artifacts.
Pair Inspection. It is an informal method for inspecting
software artifact. The author’s artifact and an inspector are
require to accomplish the inspection.
Walkthrough. “A static analysis technique in which a
designer or programmer leads members of the development
team and other interested parties through a segment of
documentation or code, and the participants ask questions
590
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

and make comments about possible errors, violation of
development standards, and other problems” [13]
We identiﬁed three areas of interest for collecting the data:
Demographic
information concerns the interviewed
company/organization (company, the hereafter) and the re-
spondents.
Relevance and typology regards information on projects
on which the considered quality management methods and
approaches have been used.
Main problems and needs is about the issues to adopt
the software quality assessment approaches and software
error/defect identiﬁcation methods.
B. Identiﬁcation of the Target Population
The target population consisted of IT companies that
develop and sell software as a main part of their business
(e.g., software house) or develop software as an integral part
of their products or services (e.g., healthcare domain).
The selection of the companies (sampling) has been
conducted using the network contacts (for convenience and
opportunity) of the research groups of the authors. The
contacts network included companies that participated to our
research projects [9] and/or employed or hosted (for external
stages) students with a Master or a Bachelor degree from the
following Universities: University of Basilicata, University
of Molise, and University of Salerno.
C. Questionnaire Design and Data Collection
We have developed the questionnaire following the stan-
dard schema proposed in [5]. Figure 1 shows the designed
questionnaire. The questionnaire contains both open (some
required just ﬁlling in a comment or text) and closed
questions. According to the conceptual model, the ques-
tionnaire consists of different questions that depend on the
usage or not of software quality assessment approaches and
software error/defect identiﬁcation methods and on the will
of employing them in the future.
The questionnaire was introduced with a brief motivation
sketching the general problem to be investigated.
The importance of this study and our objectives were
inserted in an accompanying letter attached to the ques-
tionnaire. Great care was taken to ensure ethical require-
ments and privacy rules imposed by the Italian regulations.
Furthermore, we also clariﬁed that all the information was
considered conﬁdential and that the data were used only for
research purposes and revealed only in aggregated form.
The respondents sent the answered questionnaires by e-
mail. The rationale for using this communication medium
was that the companies may consider sensitive the informa-
tion treated in the survey.
IV. RESULTS
Among the 70 invited companies, 48 gave their availabil-
ity to participate to the survey, while 32 correctly ﬁlled in
the questionnaire.
!
Figure 1.
Designed questionnaire
A. Respondents’ Background and Companies Characteris-
tics
The age of the respondents ranged from 24 to 50 years old
with an average of 35 years (only 2 were female). Regarding
the role of the respondents, 73% of them stated that they
had management roles (i.e., projects manager, IT manager,
quality manager, or production manager) while 27% were
developers or software architects. Among the respondents,
93% had a master degree, 7% had a bachelor degree. None
of the interviewed had a PhD. 80% had a speciﬁc IT degree.
The interviewed companies were 60% independent and
40% subsidiaries (i.e., controlled by a larger and more
powerful company). Among these companies, 67% were
private companies and 33% were quoted on the Italian stock
exchange. None was a government organization. 53% of the
companies were either small or medium-sized enterprises
(i.e., < 250 employees), while 47% were larger ones.
Note that larger companies were composed of businesses
units. For smaller companies, the number of employees of
the business unit coincided with the total number of the
company employees. For the larger companies, the size of
the business units of the respondents were distributed as
follows: 13% were micro (< 10), 67% were small (between
10 and 50), and 20% were medium (between 50 and 250).
The companies come from different industrial domains.
In particular, most of them worked in the area of software
consultancy (40%). On the other hand, 33% of the compa-
nies worked on software development and 27% provided IT
services to others.
591
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

The
typical
size
of
the
software
systems
handled/developed was: from 10 to 100KLOCs (7%),
from 100 to 500 KLOCs (80%); more than 500 KLOCs
(13%).
B. Relevance of the used practices and inﬂuential factors
All the respondents of the companies, that never used the
methods/approaches considered in the survey, have planned
to adopt at least one among: testing, inspection, distributed
inspection, and walkthrough. These were 20% of the com-
panies.
On the other hand, 40% of the companies regularly
employed at least one of the considered methods/approaches,
while 13% of the respondents declared that their companies
often used testing, inspection, distributed inspection, and
walkthrough. Finally, 27% of the companies occasionally
used them.
Among the companies that have used at least one of
the methods/approaches (i.e., 24 out of 30), most of them
(i.e., 14 out of 24) regularly used testing techniques, while
4 companies stated that testing has been often used in
the past. Only 2 respondents indicated that their company
occasionally used testing.
Inspection methods (i.e., variations of the Fagan’s process)
to identify defects in software artifacts were already used
in only 2 companies, while 10 out of 24 companies often
used them. Inspection methods were occasionally employed
within 6 companies, while 4 stated that these approaches
have never been employed, but will be used in the future.
Only 2 companies were not interested in using inspection
methods in the future.
Distributed inspection methods have been rarely used
within 6 companies. Moreover, 6 respondents stated that
his/her company has never used distributed inspection, but
this technique will be used in the future to identify defects
in software artifacts. Finally, 12 out of 24 companies have
never used a method for distributed inspection and did not
plan to employ it in the future.
The pair inspection was regularly used in 6 out of 24 com-
panies, while only 2 companies often used this technique.
Pair inspection was occasionally used within 8 companies.
The respondents of 8 companies stated that this technique
was never used. Among these companies, 6 stated that were
not interested in using pair inspection in the future.
Walkthrough was regularly used in 4 companies, while 6
companies often employed this practice within their projects.
Walkthrough was occasionally used within 10 companies
(i.e., 42% of the cases). Finally, 4 companies never used
this practice and were not interested in using it.
We also asked to indicate the approach/method the re-
spondents considered simpler, more effective, less expensive,
and with a best cost beneﬁt ratio. They identiﬁed the pair
inspection as the simplest method to apply (i.e., 12 out
of 24), while testing was considered the more effective
and with the best cost beneﬁt ratio. The less expensive
approach/method was considered the pair inspection. Further
details can be found in Figure 2.
The greater part of the respondents (16 out of 24) stated
that the methodological aspect is the predominant factor
to effectively identify defects and improve the quality of
software artifacts. The human factor was indicated as the
secondary concern (8 out of 24).
! Figure 2.
Results of the used practices with respondents considerations
C. Main Problems and Needs
We asked the respondents to indicate the methods they
were interested in using among the never used ones. Dis-
tributed inspection was the method on which the respondents
manifested greatest interest.
The main problems in the industry to adopt variations of
the inspection process proposed by Fagan were (in increas-
ing priority order): lack of specialized employees, technique
not properly known, technique too much expensive, and lack
of time. The companies that never used this method were
10 out of 22.
Similarly, the main problems to employ a distributed
inspection process were (in increasing priority order): tech-
nique not properly known, short time to market, technique
too much expensive, and trust in the technique. Anyway, 16
out of 22 companies were interested in this method.
Regarding, pair inspection 14 companies never used it.
Most of them never used this practice since it was not
properly known. The factors identiﬁed as less inﬂuential to
use this practice were: technique too much expensive, short
time to market, and lack of specialized employees.
The respondents were also asked to describe other tech-
niques used in the company to identify defects within
software artifacts. Nobody answered to this question, thus
enforcing the assumption that the methods/approaches in-
vestigated in our survey are the only employed within the
involved companies.
Finally, we asked the respondents whether their company
were interested in experimenting inspection, distributed in-
592
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

spection, and pair inspection. All of them generally mani-
fested the same level of interest on these methods.
D. Findings
We summarize the main ﬁndings emerged from the con-
ducted state of the practice survey according to the deﬁned
research questions.
RQ1. The data analysis showed that software quality
assessment and software error/defect identiﬁcation are very
relevant in for the IT companies involved in the survey.
RQ2. Testing is the most employed practice. The second
larger employed practice was formal inspection based on the
original process proposed by Fagan.
RQ3. The main problem to use pair inspection and
distributed inspection is related to their scant popularity.
On the other hand, the main problem to introduce the other
approaches/methods is the short time to market and the lack
of properly skilled employees in the company.
Regarding distributed inspection, most of the companies
never used this technique for the following three reasons: (i)
team members are not geographically distributed; (ii) there is
lack of tools for supporting distributed inspection processes;
(iii) inspection tools (if available) are not integrated with
Software Conﬁguration Management [11] (SCM) systems.
Despite the scant usage of distributed inspection, it
aroused great curiosity and interest. This is probably due to
the fact that respondents perceived distributed inspection less
expensive than traditional inspection. Further, distributed in-
spection avoids problems related to the different time zones,
when synchronous discussions are not accomplished [8].
RQ4. Most of the companies were interested in using
inspection, distributed inspection, and pair inspection within
pilot projects.
E. Threats to Validity
Internal validity threats regard external factors that may
affect the results. In industrial surveys, it is usually impossi-
ble to know whether the respondents truthfully answered the
questionnaire. Scarce motivation to answer the questionnaire
could also affect the results. To mitigate this threat we
properly designed the survey. Another factor that may have
inﬂuenced the internal validity is the number of invited com-
panies that did not answer the questionnaire. Even, the inter-
viewed within our industrial contact network may inﬂuence
the internal validity. Another threat could be related to the
difﬁculty of comprehending the questions (e.g., ambiguous,
not clear, not well formulated). To mitigate this threat, the
questionnaire was designed to (i) minimize comprehension
problems; (ii) reduce complexity and memory overload; (iii)
increase respondent’s attention.
External validity concerns the generalization of the re-
sults. This threat is present in case of industrial surveys. In
fact, we cannot be sure that our sample is representative of
the Italian IT industry in general, and we are aware that
Southern Italy is over-represented compared to Northern
Italy. Accordingly, replications are needed to increase our
conﬁdence in the achieved results.
Construct validity threats concerns the metrics used in
the study. In our case, the questionnaire was designed
using standard ways and scales [20]. The questions were
formulated to minimize possible ambiguities.
V. CONCLUSION AND FUTURE WORK
The survey presented in this study aims at studying and
understanding the state of the practice of software quality
assessment and software error/defect identiﬁcation in the
Italian industry. Accordingly, we invited 70 companies to
participate and received 30 fully and correctly completed
questionnaires.
The target population consisted of decision makers in
software development. Indeed, we considered IT Italian
companies that develop and sell software as a main part of
their business (e.g., software house) or develop software as
an integral part of their products or services (e.g., commerce
in the healthcare domain).
The main results of the presented study show that software
quality assessment and software error/defect identiﬁcation
are relevant and regard roughly almost the totality of the in-
terviewed companies. Among the practices considered in the
study, software testing is the widely used and popular one.
The greater part of the companies that regularly uses soft-
ware testing is not interested in the approaches/techniques
we have investigated in the survey presented here. Future
work will aim at investigating this point.
Furthermore, the state of the practice survey and the
subsequent interview, in particular, highlighted some further
discussion points with respect to the global software devel-
opment and the quality of software artifacts produced by
geographically distributed software engineers:
(i) First of all, the business units of the respondent are
often geographically co-located. This indicates that
global software development is only marginally ap-
plied in the interviewed software companies. However,
in case a company has more distributed business units,
they communicate using standard synchronous (e.g.,
instant messaging) and asynchronous communication
media (e.g., email and/or forum).
(ii) Secondly, there is lack of tools that effectively support
distributed teams during software inspections. Despite
a number of distributed inspection processes and tools
have been proposed [9], [16], the industrial practice is
still far to adopt them. This indicates a gap between re-
search laboratories and industrial reality that deserves
a concrete cooperation between academy and industry
based on technology transfer projects.
(iii) Finally, the proposed distributed inspection tools are
not integrated with the SCM system used in the com-
pany. This point is the most critical. Indeed, most of
593
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

the software companies use SCM systems to access the
level two of CMM and to get ISO 9000 certiﬁcation,
while distributed inspection tools are not widely em-
ployed in the industrial practice despite they are recog-
nized useful to improve software quality. We think that
the integration of these tools within widely known sys-
tems for the management and version control would
signiﬁcantly increase their diffusion, thus improving
the quality assurance of software systems developed
in distributed contexts. This conjecture needs to be
further investigated conducting industrial user studies
within industrial software projects.
REFERENCES
[1] ANSI/IEEE Std. 829-1983: “Software Test Documentation”,
IEEE Press. lnstitute of Electrical and Electronics Engineers.
Inc.. New York, 1987.
[2] V.R. Basili, “The Role of Experimentation in Software Engi-
neering: Past, Current, and Future,” Proc. 18th International
Conference on Software Engineering, 1996, pp. 442–449.
[3] B. Berliner, “CVS II: Parallelizing software development”. In
Proceedings of the USENIX Winter 1990 Technical Confer-
ence, Berkeley, CA, 1990. USENIX Association, pp.341–352.
[4] V. Chandola, A. Banerjee, and V. Kumar, “Anomaly detection:
A survey”. In ACM Computing Survey. vol. 41, no. 3, 2009,
pp. 1–58.
[5] M. Ciolkowski, O. Laitenberger, and S. Bifﬂ, “Software re-
views: The state of the practice”. In IEEE Software, vol. 20,
no. 6, 2003, 2003, pp. 46–51
[6] B. Collins-Sussman, B. Fitzpatrick, and C. Pilato. Ver-
sion Control with Subversion. OReilly, 2004. draft from
http://svnbook.red-bean.com/.
[7] R. Czaja and J. Blair,“Designing surveys: a guide to decisions
and procedures”. 2nd ed. London: Sage, 2005.
[8] A. De Lucia, F. Fasano, G. Scanniello, and G. Tortora, “Eval-
uating distributed inspection through controlled experiments”,
In IET Software, vol. 3, no. 5, 2009, pp. 381–394.
[9] A. De Lucia, M. Di Penta, F. Lanubile, and M. Torchiano,
“METAMORPHOS: MEthods and Tools for migrAting soft-
ware systems towards web and service Oriented aRchitectures:
exPerimental evaluation, usability, and tecHnOlogy transfer”,
In Proceedings of 13th European Conference on Software
Maintenance and Reengineering, 2009, pp. 301–304.
[10] A. De Lucia, F. Fasano, G. Scanniello, and G. Tortora,
“Integrating a distributed inspection tool within an artefact
management system”. In Proceedings of 2nd International
Conference and Data Technologies, 2007, pp. 184–189.
[11] J. Estublier, D. Leblang, A. Van Der Hoek, R. Conradi, G.
Clemm, W. Tichy, and D. Wiborg-Weber, “Impact of Software
Engineering Research on the Practice of Software Conﬁgura-
tion Management”, In Transactions on Software Engineering
and Methodology, vol. 14, no. 4, 2005, pp. 383–430.
[12] O. Hauge. Open source software in software intensive indus-
try - a survey. Technical report, Norwegian University of Sci-
ence and Technology Department of Computer and Information
Science,
2007.
http://daim.idi.ntnu.no/masteroppgaver/IME/
IDI/2007/3290/masteroppgave.pdf.
[13] IEEE Std 610.12-1990, “IEEE Standard Glossary of Software
Engineering Terminology”, 1990
[14] A. Jelitshka, M. Ciolkowski, C. Denger, B. Freimut, and
A. Schlichting, “Relevant information sources for successful
technology transfer: a survey using inspections as an exam-
ple”, In 1st International Symposium on Empirical Software
Engineering and Measurement, 2007, pp. 31–40.
[15] L. P. W. Kim, C. Sauer, R. and Jeffery “A framework for
software development technical reviews”. In Software Quality
and Productivity: Theory, Practice, Education and Training,
1995, pp. 294–299
[16] B.A. Kitchenham, S.L. Pﬂeeger, L.M. Pickard, P.W. Jones,
D.C. Hoaglin, K. El Emam, and J. Rosenberg, “Preliminary
Guidelines for Empirical Research in Software Engineering”,
IEEE Transactions on Software Engineering, vol. 28, no. 8, pp.
721–734, August 2002. DOI: 10.1109/TSE.2002.1027796.
[17] O. Laitenberger. A Survey of Software Inspection Technolo-
gies. In Handbook on Software Engineering and Knowledge
Engineering, vol. 2, World Scientiﬁc Publishing, 2002, pp.
517–555.
[18] F. Lanubile, T. Mallardo, and F. Calefato, “Tool Support
for Geographically Dispersed Inspection Teams”, In Software
Process: Improvement and Practice, vol.8, no.4, Wiley Inter-
Science, 2003, pp.217–231.
[19] J. Li, R. Conradi, O. Petter, N. Slyngstad, M. Torchiano,
M. Morisio, and C. Bunse, “A State-of-the-Practice Survey of
Risk Management in Development with Off-the-Shelf Software
Components”. In IEEE Transactions on Software Engineering,
vol. 34 no. 2, 2008, pp. 271–286.
[20] N. Oppenheim, “Questionnaire Design, Interviewing and At-
titude Measurement”, Pinter Publishers, 1992.
[21] T. Punter, “What information do Software Engineering prac-
titioners need?”, In Proceedings of the 2nd International Work-
shop on Empirical Software Engineering, 2003, pp. 85–95
[22] M. Torchiano, M. Di Penta, F. Ricca, A. De Lucia, and
F. Lanubile, “Software migration projects in Italian industry:
Preliminary results from a state of the practice survey”, In
Proceeding of 23rd IEEE/ACM International Conference on
Automated Software - Workshop Proceedings (ASE Work-
shops), L’Aquila, Italy, 2008, pp. 35–42.
[23] C. Wohlin, P. Runeson, M. Host, M. C. Ohlsson, B. Regnell,
and A. Wesslen, “Experimentation in Software Engineering -
An Introduction”, Kluwer, 2000.
[24] M. Young and M. Pezze, “’Software Testing and Analysis:
Process, Principles and Techniques”. John Wiley & Sons, 2008.
594
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

