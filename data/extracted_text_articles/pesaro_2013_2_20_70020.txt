Static versus Dynamic Group-Screening Models
Dieter Claeys, Joris Walraevens, Bart Steyaert, Herwig Bruneel
SMACS Research Group, Department TELIN
Ghent University
Ghent, Belgium
Email: Dieter.Claeys@telin.ugent.be
Abstract—Group screening can lead to a tremendous reduc-
tion in number of tests and costs, and therefore has attracted
considerable attention in literature. For several decades, a
model from Robert Dorfman was the de facto standard to
determine the optimal group size. However, more recently, it
has been pointed out that the model from Dorfman is rather
static, i.e., a predetermined large number of items has to be
screened, whereas in reality the context is rather dynamic:
items arrive at random moments in time, in groups of different
and random size.
In this paper, we investigate to what extent the optimal group
size in the static model from Dorfman remains efﬁcient in a
dynamic context. This is of vital importance for practitioners,
as the model from Dorfman was the de facto standard for
several decades and thus has to be validated. On top of that,
even though dynamic models exist nowadays, these are much
harder to implement and require a time-consuming processing
time, due to the numerical work that is involved, such as
repeatedly calculating zeroes of functions and solving sets of
equations.
Keywords-group screening; optimal group size; static model;
dynamic model; model validation
I. INTRODUCTION
Classiﬁcation of items as good or bad can often be
achieved more economically by screening the items in
groups rather than individually. The underlying reason
is that when a test on a group returns good, it can be
concluded (after one test only) that all items within the
group are good. Dorfman [1] was the ﬁrst to introduce the
paradigm of group screening and he found an immediate
application in the detection of syphilitic men drafted into
military service during WWII. He suggested to apply
this procedure also to manufacturing processes where the
defective goods have to be eliminated from the collection
of all produced goods. Later on, many researchers applied
this paradigm to screen blood for the presence of HIV
[2][3][4][5][6][7], Inﬂuenza [8] and West Nile Virus [9]
(group screening is in this context generally referred to
as blood pooling). The range of application even streches
further. Macula [10] and Manoli et al. [11] applied group
screening to DNA screening and Dean and Lewis [12]
(chapter 3), Xie et al. [13] and Zhu et al. [14] utilized it
for drug discovery. Finally, group screening has also found
its entrance in the ﬁeld of computer science, for instance
in the study of web services [15][16], image compression
[17], multiple access protocols [18], optical networks [19],
encryption [20], etc.
When group screening is feasible, the selection of the
group size is crucial: the larger a group size, the more
items can be screened by only one test, but the more
likely it becomes that one or more items of the group
are bad, inferring that retesting becomes necessary. This
can, for instance, be achieved by retesting all items of
the group individually, which is often referred to as
group-individual screening policy (see, e.g., [2]). However,
in many occasions, a group-subgroup screening policy is
adopted, whereby the group is divided into subgroups which
are each subjected to a new group test. Traditionally, a bad
group is divided in two subgroups of equal size whereby
the items of a bad subgroup are retested individually [21].
For several decades, a mathematical model from Robert
Dorfman [1] was the de facto standard to determine the
optimal group size. This model is essentially static: it
postulates that a population consisting of a predetermined
large number of items has to be screened whereby all items
are present from the beginning. However, Abolnikov and
Dukhovny [2] correctly pointed out that the practical context
is usually dynamic: items are not all present from the start,
and arrive at random moments in time, possibly in groups
of different and random size. For instance, trucks from
various regions of a country arrive at the blood screening
laboratory at random moments of the day, with a variable
number of blood samples to be screened. Abolnikov and
Dukhovny [2] dealt with the dynamic nature by relying
on queueing theory. Since then, Bar-Lev et al. [22] and
Claeys et al. [21] further developed and analyzed queueing
models to better include the dynamic nature of item arrivals.
An
important
disadvantage
of
dynamic
models
and
analyses, is that they are much harder to implement and
the processing time is slow due to the numerical work
that is involved, such as repeatedly calculating zeroes of
functions and solving sets of equations. A natural question
crucial to practitioners is thus the following: under which
circumstances does the static model yield accurate results
in a dynamic context? This is the question we wish to
32
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

answer in this paper. More speciﬁcally, we examine to
what extent the optimal group size in the static model from
Dorfman [1] remains optimal or efﬁcient in the dynamic
(queueing) model from Claeys et al. [21]. We compare
with [21] and not with the dynamic model from Bar-Lev et
al. [22] as they study an incomplete-identiﬁcation scenario,
which means that when a group test returns bad, the whole
group is discarded. In Claeys et al. [21] and Dorfman [1]
on the other hand, the bad items need to be separated from
the good, i.e., complete identiﬁcation is necessary, incurring
that retesting is essential. We also prefer to not adopt the
model from Abolnikov and Dukhovny [2], as only the
system content at service completion times is established
in their paper.
The remainder of this paper is structured as follows:
in Section II, we describe the static and the dynamic model
in detail. Thereafter, we evaluate in Sections III and IV to
what extent results obtained by the static model are valid
in a dynamic context. Finally, conclusions are drawn in
Section V.
II. DESCRIPTION OF THE MODELS
In this section, the static model of Dorfman [1] and the
dynamic model of Claeys et al. [21] are reviewed in detail.
A. Static Model
In the static model, the bad items in a (huge) population
have to be identiﬁed. Dorfman [1] has deduced a formula
for the mean number of tests (E [T]) required to screen a
population consisting of N items when the group-individual
policy is adopted with group size c. Let p characterise the
probability that a random item is good. Then (1 − pc) is
the probability that a group of c items is bad (at least one
item is bad), in which case c additional individual tests are
necessary after this group test to actually identify the bad
item(s). Hence, the mean number of tests to screen a group
of c customers equals 1 + (1 − pc)c. As the population is
divided in N/c subgroups, the average number of tests to
screen the entire population reads
E [T] = N
c + N(1 − pc) .
(1)
Along the same lines, it is possible to deduce an expression
for the average number of required tests in case of other
screening policies. For instance, for the group-subgroup
policy whereby a bad group is divided in two subgroups
of equal size which are retested individually when the
(sub)group test returns bad, it can be found that
E [T] = N
c
[
1 +
(
1 − p⌈c/2⌉)
p⌊c/2⌋ (2 + ⌈c/2⌉)
+
(
1 − p⌊c/2⌋)
p⌈c/2⌉ (2 + ⌊c/2⌋)
+
(
1 − p⌈c/2⌉) (
1 − p⌊c/2⌋)
(2 + c)
]
.
(2)
The ﬁrst term between brackets expresses that at least
one test is required per group, the second represents the
situation whereby only the ﬁrst subgroup is bad, the third
term corresponds with only the second subgroup being bad,
whereas in the ﬁnal term both subgroups are bad.
B. Dynamic Model
In [2], it was stated that the dynamic nature of the item
arrivals can be captured by a queueing model. We here
brieﬂy recapitulate the queueing model that is presented
in [21]. It is a discrete-time queueing model whereby the
numbers of item arrivals during consecutive time slots are
modelled by a sequence of independent and identically
distributed random variables, with common mass function
a(n) ≜ Pr [n arrivals in a random slot] ,
and probability generating function (PGF) A(z), i.e.,
A(z) ≜
∞
∑
n=0
a(n)zn.
The mean value, often referred to as mean arrival rate, is
denoted by λ and is by deﬁnition equal to A
′(1) (we use
primes to indicate derivatives).
The items join the queue in awaitance of being screened
by the testing facility (“the server”). The items are
screened (“served”) in groups, which is in queueing theory
called batch service (e.g., [23][24][25][26]) or bulk service
([27][28][29][30]). It is assumed that a single test takes
exactly one slot and that tests are initiated and completed at
slot boundaries. In order to avoid confusion, we adopt the
term group screening for the complete process, i.e., for the
ﬁrst test on the entire (original) group and the other tests
(if any) on subgroups or individual items of the group. The
“service time” of a group of items corresponds with the
number of tests required to screen the group and can thus
take several slots. As the number of tests required to screen
a group depends on the number of items in that group, the
service time of a group is dependent on the number of items
within the group (a larger group has a larger probability of
being bad). The service time of a group consisting of j items
is represented by Sj and its corresponding PGF by Sj(z).
The following expression for Sj(z) is established in [21] for
the group-individual screening policy
S1(z) = z ,
Sj(z) = pjz + (1 − pj)zj+1 ,
j ≥ 2 .
This can be comprehended as follows: a group consisting
of one item requires only one test. In the other case, a
group of size j is good with probability pj and thus requires
one (group) test. When the group is bad (with probability
33
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

(1−pj)), j additional individual tests are necessary, leading
to a service time of j + 1 slots.
For the group-subgroup screening policy presented in Sec-
tion II-A it was found in [21] that
S1(z) = z ,
S2(z) = p2z + (1 − p2)z3 ,
S3(z) = p3z + p2pz3 + (1 − p2)z5 ,
Sj(z)
=
pjz + p⌈j/2⌉ (
1 − p⌊j/2⌋)
z⌊j/2⌋+3
+p⌊j/2⌋ (
1 − p⌈j/2⌉)
z⌈j/2⌉+3
+
(
1 − p⌊j/2⌋) (
1 − p⌈j/2⌉)
zj+3 ,
j ≥ 4
The cases j < 4 are considered separately to avoid that a
bad group or subgroup consisting of one item gets retested.
In the expression for j ≥ 4, the ﬁrst term corresponds with
a good group, the second with only the ﬁrst subgroup being
bad, the third with only the second subgroup being bad and
the ﬁnal term with both subgroups being bad.
At this point, it is important to realize that the dynamic
nature of the item arrivals entails two additional differences
as compared to the static model. First, it is necessary to
select a minimum group size next to the maximum c from
the static model (in the sequel we denote this minimum by
l), as it might occur that less items are present than the
maximum group size when the testing facility is available.
When less than l items are present, screening is postponed,
whereas otherwise screening is initiated even if less than c
items are present.
Second, whereas in the static model only the number
of required tests to screen the entire population matters,
various performance measures can be of importance in
case of a dynamic model. In this paper, we restrict ourselves
to the, in our opinion, most important, performance measures
for dynamic models. The ﬁrst is the testing probability f,
deﬁned as the fraction of slots during which the testing
facility is busy. It is equal to the probability that the testing
facility is testing (a group, a subgroup or an individual
item) during a random time slot. This performance measure
is especially of importance from an operational point of
view: the smaller the testing probability, the cheaper the
testing strategy. The second is the mean delay of items (D),
i.e., the average time that an item remains in the test center
(the “system”). More speciﬁcally, the delay of an item is
the time, starting at the end of the time slot wherein the
item arrives, until the item has been screened. As screening
starts and ends at slot boundaries, the delay of an item is
expressed as an integral number of time slots. As opposed
to the testing probability, the mean delay is especially
of importance from the point of view of the items to be
screened. For instance, when items represent blood samples,
it is necessary to inform the patients as soon as possible
whether or not they are infected by some disease and the
mean delay is a measure for this. The following formulas
have been deduced in [21] for these performance measures:
f = 1 −
l−1
∑
n=0
dn ,
(3)
D =
[
2cE [Sc] λ
l−1
∑
n=0
dn + c(c − 1)
l−1
∑
n=0
dn + 2c
l−1
∑
n=0
dnn
+
c−1
∑
n=l
dngn − c(c − 1) + S
′′
c (1)λ2 + E [Sc] A
′′(1)
]
/ [2λ(c − E [Sc] λ)] ,
(4)
with
gn ≜ E [Sn] c [c − 1 + 2n] − E [Sc] n [n − 1 + 2c]
+ 2λ(c − n)E [Sn] E [Sc] + λ
[
cS
′′
n(1) − nS
′′
c (1)
]
,
and E [Sn] = S
′
n(1) by deﬁnition. The boundary probabili-
ties dn (n = 0, . . . , c − 1) are the solutions of the following
set of c linear equations:
l−1
∑
n=0
dnzn
i +
c−1
∑
n=l
dn
zn
i − Sn(A(zi))
1 − A(zi)
= 0 , 1 ≤ i ≤ c − 1 ,
−c + E [Sc] λ = − c
l−1
∑
n=0
dn +
c−1
∑
n=l
dn[nE [Sc] − cE [Sn]] .
The zi’s (1 ≤ i ≤ c−1) are the c−1 zeroes of zc−Sc(A(z))
inside the closed complex unit disk {z ∈ C : |z| ≤ 1} that
are different from 1.
Before we compare results of the static and the dynamic
model, it is important to stress that in order to determine
optimal group sizes l and c, it is necessary to calculate
(3) or (4) (whichever is the intended criterium) for various
values of l and c and then select those values that minimize
f or D. On top of that, (3) and (4) rely on the dn’s,
which in turn are dependent on l and c. Therefore, those
boundary probabilities have to be calculated for every
l and c, by each time calculating zeroes zi and solving
a set of equations. Hence, this procedure is complicated
for practitioners due to the numerical work involved and
requires much processing time.
34
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

Remark 1: It should be noted that formulas (3) and (4)
are valid under the assumption that the system is in steady
state. The system can reach steady state if and only if
λ <
c
E [Sc] .
This inequality guarantees that items that enter the test
center will eventually (i.e., after a ﬁnite time) be screened.
It expresses that the average number of items that enter
the test center in a random slot must be smaller than the
average number of items that can leave the test center at
the end of a slot if many items are present. This is a natural
assumption in practice.
In the remainder of this paper, we compare the optimal group
size in the static model (in the sequel referred to as optimal
static group size) with the minimum and maximum group
sizes that produce the smallest testing probability f (Section
III) and those that generate the smallest average delay D
(Section IV) in the dynamic model.
III. TESTING PROBABILITY
In this section, we compare the optimal static group size
with the group sizes that minimize the testing probability
(f) in the dynamic model. Note ﬁrst that formulas (1)-(2)
and (3)-(4) for the static and dynamic model do not consist
of the same parameters. Before we can fairly compare the
optimal group sizes, we have to study the inﬂuence of these
parameters. We therefore represent in Tables I and II the
optimal static group size versus the population size N for
respectively the group-individual and the group-subgroup
screening procedure as presented in Section II-A. To ﬁnd the
optima, we have calculated E [T] for a wide range of values
of c and selected the value that produces smallest E [T] as
optimum (see [21] for more information). We observe that
the population size has no impact on the optimal static group
size.
Next, we turn to the dynamic model and evaluate the
inﬂuence of A(z) on the group sizes that minimize f. The
optimal maximum group size is illustrated in Tables III and
IV for several values of λ and p and for two distributions
for the number of item arrivals during a random slot: the
Poisson distribution, i.e., with PGF
A(z) = eλ(z−1) ,
and the geometric distribution:
A(z) =
1
1 + λ − λz .
We perceive from Tables III and IV that the mean arrival
rate λ and even the whole distribution A(z) have no impact
on the optimal maximum group size. Note that the optimal
minimum group size is not mentioned as it is equal to the
Table I
GROUP SIZE THAT MINIMIZES E [T] IN CASE OF GROUP-INDIVIDUAL
SCREENING (STATIC MODEL)
p = 0.95
p = 0.975
p = 0.99
N = 1000
5
7
11
N = 2000
5
7
11
N = 5000
5
7
11
N = 10000
5
7
11
Table II
GROUP SIZE THAT MINIMIZES E [T] IN CASE OF GROUP-SUBGROUP
SCREENING (STATIC MODEL)
p = 0.95
p = 0.975
p = 0.99
N = 1000
8
10
14
N = 2000
8
10
14
N = 5000
8
10
14
N = 10000
8
10
14
optimal maximum group size when the testing probability
has to be minimized.
These ﬁndings are of crucial importance: in order to
compare the static and dynamic models, it is not necessary
to “map” the parameter N of the (static) population size
on the (dynamic) mean arrival rate λ and the PGF of the
arrival process A(z): the exact values of N and λ and
the exact expression for A(z) do not have an inﬂuence
on the optimal group sizes. In addition, when comparing
Tables I-II with Tables III-IV, it is clear that the static and
the dynamic model produce equal optimal group sizes.
We now prove these ﬁndings. Let us start by inspecting
the dynamic model. As already mentioned, the optimal
minimum group size always equals the optimal maximum
group size. The reasoning behind this is that when less
items are present than the maximum group size, it is, from
the point of view of minimizing the testing probability,
better to wait until enough items are present, in order
to fully exploit the beneﬁt of group screening (less tests
required). As a result, if the testing facility is screening
(with probability f), it always screens a group consisting
of c items. As a consequence, the average screening time
equals E [Sc] slots, so that in a random slot wherein
the testing facility is screening, the ongoing screening is
ﬁnished at the end of that slot with probability 1/E [Sc].
Hence, the average number of items leaving the system in
a slot because screening is completed equals fc/E [Sc].
We now rely on this result to translate the well-known
“rate-in-rate-out” principle (see e.g., [31]) in terms of
the system parameters. The “rate-in-rate-out” principle
expresses that in a queueing system in steady state, the
mean number of items entering the system per slot equals
the mean number of items leaving the system per slot.
35
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

Table III
GROUP SIZE THAT MINIMIZES f IN CASE OF GROUP-INDIVIDUAL
SCREENING (DYNAMIC MODEL); * MEANS THAT THE TEST CENTER IS
NOT ABLE TO COPE WITH ALL SAMPLES, BECAUSE λ ≥ c/E [Sc] FOR
EVERY VALUE OF c
p = 0.95
p = 0.95
p = 0.99
p = 0.99
Poisson
geometric
Poisson
geometric
λ = 1
5
5
11
11
λ = 2
5
5
11
11
λ = 3
*
*
11
11
λ = 4
*
*
11
11
λ = 5
*
*
11
11
Table IV
GROUP SIZE THAT MINIMIZES f IN CASE OF GROUP-SUBGROUP
SCREENING (DYNAMIC MODEL); * MEANS THAT THE TEST CENTER IS
NOT ABLE TO COPE WITH ALL SAMPLES, BECAUSE λ ≥ c/E [Sc] FOR
EVERY VALUE OF c
p = 0.95
p = 0.95
p = 0.99
p = 0.99
Poisson
geometric
Poisson
geometric
λ = 1
8
8
14
14
λ = 2
8
8
14
14
λ = 3
*
*
14
14
λ = 4
*
*
14
14
λ = 5
*
*
14
14
Putting these elements together yields
λ = f
c
E [Sc] .
(5)
Next, deﬁne
g(c) ≜ E [Sc]
c
.
(6)
As a result, (5) can be transformed into
f = λg(c) .
At this point, it is crucial to realize that g(c) is independent
of λ and A(z), simply because E [Sc] only depends on c and
p. As a result, the group size c that produces the smallest
value f, minimizes g(c) and is independent of λ and A(z).
In the static scenario on the other hand, the mean number
of tests required to screen a population of size N is equal
to
E [T] = N
c E [Sc] ,
because the population is divided in N/c groups with
average testing time E [Sc]. Owing to (6), we obtain
E [T] = Ng(c) .
Analogously as for the dynamic model, we can state that
the optimal group size minimizes g(c) and that N has no
impact. We can thus conclude that the optimal group size
is the same in both models as it minimizes in essence the
same function. Finally, it is worth noting that the proof is
independent of the screening policy, which thus infers that
the conclusions are valid for all screening policies.
In order to illustrate that the optimal group size minimizes
g(c) (≜ E [Sc] /c), E [Sc] and g(c) are shown in Table V,
for various values of c and in case of the group-subgroup
screening policy. We indeed notice that for p = 0.95, 0.975,
0.99, g(c) is minimized when c = 8, 10, 14 respectively
(compare with Tables II and IV).
Table V
E [Sc] AND g(c) FOR VARIOUS VALUES OF c IN CASE OF
GROUP-SUBGROUP SCREENING
E [Sc]
g(c)
E [Sc]
g(c)
p = 0.95
p = 0.95
p = 0.99
p = 0.99
c = 1
1
1
1
1
c = 2
1.1950
0.5975
1.0398
0.5199
c = 3
1.4803
0.4934
1.0992
0.3664
c = 4
1.7610
0.4402
1.1584
0.2896
c = 5
2.0753
0.4151
1.2269
0.2454
c = 6
2.3856
0.3976
1.2952
0.2159
c = 7
2.7732
0.3962
1.3826
0.1975
c = 8
3.1571
0.3946
1.4697
0.1837
c = 9
3.6126
0.4014
1.5756
0.1751
c = 10
4.0647
0.4065
1.6813
0.1681
c = 11
4.5829
0.4166
1.8055
0.1641
c = 12
5.0982
0.4248
1.9295
0.1608
c = 13
5.6744
0.4365
2.0716
0.1594
c = 14
6.2479
0.4463
2.2136
0.1581
c = 15
6.8777
0.4585
2.3735
0.1582
IV. MEAN DELAY
In the previous section, we have shown that the minimum
and maximum group sizes that minimize f in the dynamic
model are both equal to the optimal static group size. In
this section, we investigate whether this also holds when
D is minimized instead of f in the dynamic model. First,
note that the optimal minimum group size now equals
1. Indeed, if very few items are present when the testing
facility is available, these items would probably suffer a
considerable delay if the testing facility would postpone
screening until more items are present. In addition, the
probability of a group of very few items to be infected
is very small, so that most likely the screening of such a
group only lasts one slot, in which case the testing facility
will be available again at the beginning of the next slot
for possible newly arrived items. As a result, we ﬁx the
minimum group size to 1.
Next, we illustrate the maximum group size that minimizes
D for various values of λ and p, both for the group-
individual (Table VI) and the group-subgroup screening
policy (Table VII). We observe that the optimal maximum
group size increases as a function of λ and that for large
enough λ it equals the static optimum. The latter is a
consequence of the fact that when the system is heavily
loaded, nearly always many items are present, meaning that
the system becomes almost equivalent with a static system.
In the previous section, we have proved that the optimal
36
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

static group size minimizes g(c), the average number of
tests per item. It is thus natural to ask why for small
and medium values of λ it is better to select a smaller
maximum group size than the group size that minimizes the
average number of tests per item. In order to understand
this, we consider the example with the group-subgroup
policy and with p = 0.975 (Table VII). Assume that 10
items are present, the testing facility is available and λ = 1.
It seems evident to execute 1 group test on the 10 items,
as this would lead to the smallest average number of tests
per item (Table IV). However, Table VII indicates that a
maximum group size equal to 6 is the best option. Let us
observe what happens if the maximum group size equals 6
instead of 10, by relying on Table V. When the 10 items
are screened together, this takes on average 2.6364 slots.
When, on the other hand, only the ﬁrst 6 items are screened
together, these 6 items are screened in, on average, 1.72
slots. Thereafter, the remaining 4 items can be screened,
in other words, these items have already been delayed
on average 1.72 slots before their screening is initiated.
As λ = 1, on average 5.72 items are present when the
screening of the ﬁrst 6 items is completed. Assume that
6 items are present at that time. These items are screened
together and it takes on average 1.72 slots. Hence, the ﬁrst
6 items beneﬁt and suffer on average a delay of 1.72 instead
of 2.6364 slots, whereas the screening of the other 4 items
is completed after on average 3.34 instead of 2.6364 slots.
As a consequence, the average screening time of these 10
items is (6 ∗ 1.72 + 4 ∗ 3.34)/10 = 2.368, which is better
than 2.6364 slots. This example thus illustrates why the
maximum group size that minimizes D can be smaller than
the optimal static group size for smaller values of λ.
Table VI
GROUP SIZE THAT MINIMIZES D IN CASE OF GROUP-INDIVIDUAL
SCREENING; * MEANS THAT THE TEST CENTER IS NOT ABLE TO COPE
WITH ALL SAMPLES, BECAUSE λ ≥ c/E [Sc] FOR EVERY VALUE OF c
p = 0.95
p = 0.975
p = 0.99
λ = 1
3
4
6
λ = 2
4
5
6
λ = 2.25
5
5
6
λ = 2.5
*
5
6
λ = 3
*
6
7
λ = 3.25
*
7
7
λ = 3.5
*
*
7
λ = 4
*
*
8
λ = 5.11
*
*
11
Hence, for low and medium λ, the static model overestimates
the optimal group size if the mean delay of items has to be
optimized. A question that arises in this context is: when
the static optimal group size (say cs) is selected instead of
the group size that actually minimizes D (we call this cd),
Table VII
GROUP SIZE THAT MINIMIZES D IN CASE OF GROUP-SUBGROUP
SCREENING; * MEANS THAT THE TEST CENTER IS NOT ABLE TO COPE
WITH ALL SAMPLES, BECAUSE λ ≥ c/E [Sc] FOR EVERY VALUE OF c
p = 0.95
p = 0.975
p = 0.99
λ = 1
4
6
8
λ = 2
6
6
8
λ = 2.5
8
8
8
λ = 3
*
8
10
λ = 3.75
*
10
10
λ = 4
*
*
10
λ = 6
*
*
14
what is the relative error
100(Ds − Dd)/Ds ,
(in %), with Ds the mean delay when c = cs and Dd
the mean delay when c = cd. We have therefore depicted
this relative error versus λ in Figures 1 and 2, for the
group-individual and the group-subgroup screening policy
respectively. We observe that the relative error is extremely
small for small values of λ, that it ﬁrst increases as a
function of λ, and then decreases again when λ becomes
large. When for instance c = 14 is selected instead of c = 8
for small values of λ, it does not matter much because it
seldom occurs that more than 8 items are present when the
testing facility is available. If λ increases, this occurs more,
which then leads to a larger relative error. Finally, when λ
becomes large, cd tends to cs, which leads to a decaying
relative error.
 0
 2
 4
 6
 8
 10
 12
 14
 16
 18
 20
 0
 0.5
 1
 1.5
 2
 2.5
 3
 3.5
 4
 4.5
 5
 5.5
relative error
λ
p-=0.95
p-=0.975
p-=0.99
Figure 1. Relative error (in %) versus λ; Group-individual screening policy
Remark 2: Even in those cases whereby it is necessary
to adopt the dynamic model because the relative error is
signiﬁcant, this paper provides precious information. Indeed,
we have pointed out that the optimal minimum group size
equals one and that the optimal maximum group size is
upper bounded by the optimal static group size. As a result,
D has to be calculated only for values of c not larger than
37
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

 0
 2
 4
 6
 8
 10
 12
 14
 0
 1
 2
 3
 4
 5
 6
relative error
λ
p-=0.95
p-=0.975
p-=0.99
Figure 2.
Relative error (in %) versus λ; Group-subgroup screening policy
the optimal static group size, instead of an extensive range
of combinations of both l and c, which thus reduces the
calculation time considerably.
V. CONCLUSION AND FUTURE WORK
In this paper, we have investigated to what extent the
optimal static group size of Dorfman remains efﬁcient in
a dynamic context. We have explained that instead of one
group size, a minimum and a maximum group size have
to be determined in case of dynamic item arrivals. In addi-
tion, various performance measures exist, whereas only the
number of tests required to screen the population matters in
the static model. We have considered the testing probability
and the mean delay of items. The former is especially of
importance from an operational point of view, whereas the
latter is crucial for the items to be tested.
We have shown that when the testing probability has to be
minimized, both the optimal minimum and the maximum
group size equal the optimal static group size. When, on
the other hand, the average delay has to be minimized,
the optimal minimum group size equals one, whereas the
optimal maximum group size increases as a function of the
mean arrival rate (λ) and eventually becomes equal to the
optimal static group size for large mean arrival rates. We
have demonstrated that selecting the optimal static group
size instead of the optimal maximum group size, leads to a
small relative error in the mean delay for sufﬁciently small
or large mean arrival rates and to a larger relative error for
medium mean arrival rates.
We can thus conclude that this paper clearly indicates
under which circumstances the static model from Dorfman
produces satisfying results in a dynamic context. This is
of vital importance for practitioners, as the model from
Dorfman was the de facto standard for several decades and
thus has to be validated. On top of that, even though dynamic
models exist nowadays, these are much harder to implement
and require a time-consuming processing time, due to the
numerical work that is involved, such as repeatedly calcu-
lating zeroes of functions and solving sets of equations.
Finally, we would like to stress that even when it is necessary
to rely on a dynamic model, this paper provides valuable
insights which aid in reducing the calculation time consid-
erably.
Although this paper provides precious insights, there are
several directions for future research. First, the conclusions
in this paper are based on numerical examples and intuitive
reasoning. Therefore, we will continue our research in order
to prove our ﬁndings on a rigorous manner. Next, we will
investigate whether the conclusions from this paper also
hold when the number of item arrivals during consecutive
time slots is not independent and identically distributed, but
exhibits some kind of correlation. Finally, we will also study
other performance measures, such as the probability that the
delay of an item exceeds some large threshold, the mean
number of items waiting in the queue to be screened, etc.
ACKNOWLEDGMENT
This research has been funded by the Interuniversity
Attraction Poles Programme initiated by the Belgian Science
Policy Ofﬁce.
REFERENCES
[1] R. Dorfman, “The detection of defective members of large
populations,” Annals of Mathematical Statistics, vol. 14, pp.
436–440, 1943.
[2] L. Abolnikov and A. Dukhovny, “Optimization in HIV
screening problems,” Journal of Applied Mathematics and
Stochastic Analysis, vol. 16(4), pp. 361–374, 2003.
[3] S. Fiscus, C. Pilcher, W. Miller, K. Powers, I. Hoffman,
M. Price, D. Chilongozi, C. Mapanje, R. Krysiak, S. Gama,
F. Martinson, and M. Cohen, “Rapid, real-time detection
of acute HIV infection in patients in Africa,” Journal of
Infectious Diseases, vol. 195(3), pp. 416–424, 2007.
[4] T. Quinn, R. Brookmeyer, R. Kline, M. Shepherd, R. Paran-
jape, S. Mehendale, D. Gadkari, and R. Bollinger, “Feasibility
of pooling sera for HIV-1 viral RNA to diagnose acute
primary HIV-1 infection and estimate HIV incidence,” AIDS,
vol. 14(17), pp. 2751–2757, 2000.
[5] M. Sherlock, N. Zetola, and J. Klausner, “Routine detection of
acute HIV infection through RNA pooling: survey of current
practice in the United States,” Sexually Transmitted Diseases,
vol. 34(5), pp. 314–316, 2007.
[6] J. Stekler, P. Swenson, R. Wood, H. Handsﬁeld, and
M. Golden, “Targeted screening for primary HIV infection
through pooled HIV-RNA testing in men who have sex with
men,” AIDS, vol. 19(12), pp. 1323–1325, 2005.
[7] L. Wein and S. Zenios, “Pooled testing for HIV screening:
Capturing the dilution effect,” Operations Research, vol. 44,
pp. 543–569, 1996.
38
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

[8] M. Hourfar, A. Themann, M. Eickmann, P. Puthavathana,
T. Laue, E. Seifried, and M. Schmidt, “Blood screening
for inﬂuenza,” Emerging Infectious Diseases, vol. 13(7), pp.
1081–1083, 2007.
[9] B. Lee and B. Biggerstaff, “Screening the United States blood
supply for West Nile Virus: a question of blood, dollars, and
sense,” PLoS Medicine, vol. 3(2), pp. 168–169, 2006.
[10] A. Macula, “Probabilistic nonadaptive and two-stage group
testing with relatively small pools and DNA library screen-
ing,” Journal of Combinatorial Optimization, vol. 2, pp. 385–
397, 1999.
[11] T. Manoli, N. Gretz, H. Grne, M. Kenzelmann, R. Eils, and
B. Brors, “Group testing for pathway analysis improves com-
parability of different microarray datasets,” Bioinformatics,
vol. 22(20), pp. 2500–2506, 2006.
[12] A. Dean and S. Lewis, Screening: Methods for Experimen-
tation in Industry, Drug Discovery, and Genetics.
Springer,
2006.
[13] M. Xie, K. Tatshuoka, J. Sacks, and S. Young, “Group
testing with blockers and synergism,” Journal of the American
Statistical Association, vol. 96, pp. 92–102, 2001.
[14] L. Zhu, J. Hughes-Oliver, and S. Young, “Statistical decoding
of potent pools based on chemical structure,” Biometrics,
vol. 57, pp. 922–930, 2001.
[15] W. Tsai, Y. Chen, R. Paul, N. Liao, and H. Huang, “Cooper-
ative and group testing in veriﬁcation of dynamic composite
web services,” Proceedings of the 28th Annual International
Computer Software and Applications Conference (COMPSAC
’04), vol. 2, pp. 170–173, 2004.
[16] W. Tsai, X. Zhou, Y. Chen, and X. Bai, “On testing and
evaluating service-oriented software,” Computer, vol. 41(8),
pp. 40–46, 2008.
[17] E. Hong and R. Ladner, “Group testing for image compres-
sion,” IEEE Transactions on Image Processing, vol. 11(8),
pp. 901–911, 2002.
[18] A. D. Bonis and U. Vaccaro, “Constructions of generalized
superimposed codes with applications to group testing and
conﬂict resolution in multiple access channels,” Theoretical
Computer Science, vol. 306(1-3), pp. 223–243, 2003.
[19] N. Harvey, “Non-adaptive fault diagnosis for all-optical net-
works via combinatorial group testing on graphs,” Proceed-
ings of the 26th IEEE International Conference on Computer
Communications (INFOCOM2007), pp. 697–705, 2007.
[20] J. Fang, Z. Jiang, S. Yiu, and L. Hui, “Checking key integrity
efﬁciently for high-speed quantum key distribution using
combinatorial group testing,” Optics Communications, vol.
284(1), pp. 531–535, 2011.
[21] D. Claeys, J. Walraevens, K. Laevens, and H. Bruneel, “A
queueing model for general group screening policies and
dynamic item arrivals,” European Journal of Operational
Research, vol. 207(2), pp. 827–835, 2010.
[22] S. Bar-Lev, M. Parlar, D. Perry, W. Stadje, and F. V. der
Duyn Schouten, “Applications of bulk queues to group testing
models with incomplete identiﬁcation,” European Journal of
Operational Research, vol. 183, pp. 226–237, 2007.
[23] D. Claeys, J. Walraevens, K. Laevens, and H. Bruneel,
“Analysis of threshold-based batch-service queueing systems
with batch arrivals and general service times,” Performance
Evaluation, vol. 68(6), pp. 528–549, 2011.
[24] M. Neuts, “The busy period of a queue with batch service,”
Operations Research, vol. 13(5), pp. 815–819, 1965.
[25] K. Sikdar and U. Gupta, “Analytic and numerical aspects of
batch service queues with single vacation,” Computers and
Operations Research, vol. 32, pp. 943–966, 2005.
[26] X. Yi, N. Kim, B. Yoon, and K. Chae, “Analysis of the
queue-length distribution for the discrete-time batch-service
Geo/Ga,Y /1/K queue,” European Journal of Operational
Research, vol. 181, pp. 787–792, 2007.
[27] A.
Banerjee
and
U.
Gupta,
“Reducing
congestion
in
bulk-service ﬁnite-buffer queueing system using batch-size-
dependent service,” Performance Evaluation, vol. 69(1), pp.
53–70, 2012.
[28] S. Chang and D. Choi, “Performance analysis of a ﬁnite-
buffer discrete-time queue with bulk arrival, bulk service and
vacations,” Computers and Operations Research, vol. 32, pp.
2213–2234, 2005.
[29] S. Chang and T. Takine, “Factorization and stochastic de-
composition properties in bulk queues with generalized vaca-
tions,” Queueing Systems, vol. 50, pp. 165–183, 2005.
[30] M. Neuts, “A general class of bulk queues with Poisson
input,” Annals of Mathematical Statistics, vol. 38, pp. 759–
770, 1967.
[31] H. Bruneel and B. Kim, Discrete-Time Models for Com-
munication Systems Including ATM.
Kluwer Academic
Publishers, 1993.
39
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-268-4
PESARO 2013 : The Third International Conference on Performance, Safety and Robustness in Complex Systems and Applications

