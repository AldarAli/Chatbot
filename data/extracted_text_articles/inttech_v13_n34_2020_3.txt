Analyzing Model Element Labels of BPMN Diagrams Provided on the Web 
Christian Kop  
University of Klagenfurt 
Klagenfurt, Austria 
e-mail: christian.kop@aau.at 
 
 
Abstract— The Business Process Model and Notation (BPMN) 
is the de-facto standard for process modeling. It provides four 
types of diagrams to cover different aspects of process 
modeling, ranging from process specifications itself to the 
specification of the interactions between the involved 
participants at different level of abstractions. These different 
types of Diagrams are Process Diagram, Collaboration 
Diagram, Choreography Diagram and Conversation Diagram.  
For all BPMN models of any of these diagram types, it is 
important that they are understandable to all stakeholders. 
The Web provides many examples of these different diagrams 
types. Enterprises and consultants, who offer technical 
solutions (i.e., BPMN tools) or consulting services for BPMN, 
provide these examples. Since such models are provided on the 
Web as introductory learning examples, such examples can 
also influence novice BPMN modelers. Therefore, it is worth to 
examine if such examples have the same quality standards as 
suggested in the literature. This paper, therefore, focuses on 
the analysis of such BPMN examples. Particularly, it focuses 
on the labels of model elements, since these labels represent the 
relationship between a BPMN model and a certain domain. 
Hence, this paper shows results of the analysis of model 
element labels that appear in Process Diagrams Collaboration 
Diagrams, 
Choreography 
Diagram 
and 
Conversation 
Diagrams.  
Keywords-Business Process Model and Notation (BPMN); 
Labels 
of 
Model 
Elements; 
Collaboration 
Diagrams; 
Choreography Diagrams; Conversation Diagrams 
I. 
 INTRODUCTION   
As an extension to [1], this paper discusses the labels of 
additional Business Process Model and Notation diagrams 
and their model elements. The Business Process Model and 
Notation (BPMN) is the de-facto modeling language 
standard for documenting processes. For the list of model 
elements of BPMN, see e.g., the BPMN poster on the Web 
[2]. In BPMN, four different diagram types exist [3]. The 
most used type of diagram is the Process Diagram. It 
specifies the details of a single process. The other types of 
diagrams 
are 
Collaboration 
Diagram, 
Choreography 
Diagram and Conversation Diagram. With these four 
diagrams, a modeler can model different aspects. This ranges 
from the modeling of interaction of participating systems to 
the detailed description of the process within one of the 
participating systems. Even the Process Diagram itself is 
intended for both high-level organizational processes and 
lower level processes that a workflow engine can execute.  A 
good analysis and documentation is necessary in order to 
understand the internal behavior of a system like an 
enterprise, its interaction to other participants (e.g,, 
customers or suppliers) and to implement process automation 
well.  
For a good documentation of all aspect of process 
modeling, which is understandable by all stakeholders, skills 
in modeling with BPMN are very relevant. Today, reading 
books about BPMN or visiting BPMN courses are not the 
only ways to obtain these skills. Instead, it is often much 
easier and cheaper to click through the Web, looking and 
reading the diagrams, as well as the enclosed explanations. 
Thus, Web examples can be taken as surrogates for examples 
in professional literature (e.g., specialist books). Actually, 
the BPMN and Business Process Management (BPM) 
community (e.g., tool providers and consultants) also have 
the aim to present BPMN examples on the Web to give 
either an introduction of the tool features for BPMN 
modeling or to show modelers how these diagrams look like 
and how they should be modelled. Hence, a look at such 
Web examples and their quality for being a standard for 
novice modelers can be useful.  
There are different aspects of how modeling quality can 
be defined (e.g., syntactical correctness; adequate drawing of 
models; adequate color and shape of model elements; 
adequate labels of model elements, etc.).  
This work focuses on the labels of model elements. 
Whereas the previous work [1] focused on important model 
elements of Process Diagrams only, this extended version 
also considers the labeling styles of the three other types of 
BPMN diagrams. Labels on model elements (e.g., “send 
application” as a label example of a BPMN Activity) are 
important since they relate the model to the observed reality. 
They represent the semantic bearing parts of a domain giving 
the model elements and thus the whole BPMN model a 
certain meaning in a specific domain. Therefore, if the labels 
are not well chosen, a model can be more confusing than 
understandable and this can lead to a wrong interpretation of 
models. Unfortunately, if modeling tools would analyze such 
labels, they will not be able to give exact results if a label is 
correct or not. The reason is obvious. Natural language labels 
do not follow those strict syntactic patterns like the model 
elements in an artificial modeling language like BPMN. 
Furthermore, there are many natural languages. A certain 
syntactic pattern that makes up a good labeling style in 
English must not necessarily be applicable in another 
language. Therefore, tools can only make suggestions. 
However, if these tool suggestions do not fit with 
introductory learning examples (e.g., taken from the Web), 
they will be worth for nothing. Hence, such learning 
122
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

examples are still important and the labeling style therefore 
has to be carefully chosen by the creators of such examples. 
While labeling guidelines already exist in literature for 
the important model elements of Process Diagrams, no 
quality guidelines exist for the other three types of diagrams. 
However, the model elements introduced in these diagrams 
have a purpose. Therefore, it can be assumed that this 
restricts and determines the way these elements are labeled. 
Additionally, these new model elements are derived from 
model elements, which already exist in Process Diagrams. In 
this latter case, it can be assumed that the kind of label is 
oriented on the label of the model element, from which this 
new element is derived.  
The goals of this work, therefore, are twofold. For 
Process Models the goals are the following: 
 
Check if the introductory learning examples for 
Process Models provided on the Web by BPMN 
experts (e.g., enterprises that offer BPMN tools and 
consultants offering consulting services) follow the 
label quality guidelines mentioned in literature. 
 
Examine if in these examples, the labels are at least 
well chosen. That means: Even if the labels do not 
exactly match the guidelines, nevertheless, they 
make sense in a specific context. In order to answer 
this, the analysis of the examples on the Web has 
been done on a sample extracted from the Web. 
For Collaboration Diagrams, Choreography Diagrams and 
Conversation Diagram, the goals of this paper are the 
following:  
 
Check if the new model elements introduced in 
these 
three 
additional 
diagrams 
follow 
the 
assumptions mentioned above regarding to their 
labeling styles. 
 
Check if the labeling styles of model elements, 
which both can be modelled in Process Diagrams 
and the other three diagrams stay the same. 
Therefore, the paper is structured as follows. In Section 
II, an overview of related work is given and labeling styles 
together with literature recommendations of good labeling 
styles are presented. Section III describes the preparation of 
the sample of Web examples for this work. Section IV 
focuses on the labels of model elements for BPMN Process 
Diagrams. It describes, which kinds of labels are used and 
compares these labels with labeling style recommendations 
in literature. Section V focuses on the three additional types 
of BPMN diagrams (Collaboration Diagram, Choreography 
Diagram and Conversation Diagram). It discusses the labels 
used in the model elements of these diagrams. The paper is 
summarized in Section VI. 
II. 
RELATED WORK 
All aspects of the quality of process models are in the 
focus of the research community. In [4] the visual notations 
of model elements in any conceptual modeling language are 
examined. The author discusses the influence of this visual 
notation on the good or bad readability of conceptual models. 
Issues of deficiencies in BPMN are stated in [5] and [6]. In 
[7] and [8], the authors focus on the quality of BPMN 
models. A literature survey about business process modeling 
quality is given in [9]. Seven guidelines for process modeling 
are proposed and verified with user studies in [10]. The 
research in [11] focuses on the modeling language part of 
BPMN for describing Choreographies. The authors introduce 
a quality framework for checking the quality of this BPMN 
language part. 
Some researchers have thought about automating the 
labeling process of business process modeling and 
aggregation of process models to support the comprehension 
of such process models [12] [13]. It was even analyzed how 
the style, color and arrangement of label parts on a model 
element improves readability [14] [15]. 
A. 
Related  Work with respect to Labels of Model 
Elements  
More detailed work on labels of BPMN model elements 
itself was done in [16] - [18]. These research works are based 
on data sets of process models from industry. Good labeling 
styles of Activities, Events and Gateways for three different 
natural languages were proposed and recommended in [16]. 
There, violations of these labeling styles are described. Table 
I gives an overview of the labeling styles, which will be 
discussed in detail afterwards. 
 
TABLE I: OVERVIEW OF LABELING STYLES 
 
Model element 
category 
Labeling style 
Activity 
 
Verb Object Style 
 
Action Noun Style 
 
Descriptive 
Gateway 
 Question with Noun and Verb in 
Past Participle 
 Infinitive Verb Question 
 Object with Adjective Question 
 Equation Question 
Event 
 
Verb in Past Participle Style 
 
Predicative Adjective Style 
 
Categorization Style 
 
Activities subsume Sub Processes, Tasks and Call 
Activities. In all cases, the working step within a process, are 
described. For the labels of Activities, the following styles 
were found in this literature: 
 
Verb Object Style:  A label that starts with a verb 
expressing the activity followed by an object, on 
which this activity is executed (e.g., “create 
document”). 
 
Action Noun Style: This style has three sub styles: a) 
A label that has either a nominalized verb only or a 
compound noun consisting of a verb as the head of 
this compound noun (e.g., “creation”, “document 
creation”). b) The Noun can also be a noun phrase 
with the preposition “of” in between (e.g., “creation 
of document”). c) Finally, the Action Noun Style can 
also start with a gerund followed by a noun (e.g., 
“creating document”). 
123
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
The style called Descriptive is a style consisting of a 
subject, a verb in third person singular and an object 
(e.g., “author writes book”). 
Beside this, there are also labels that do not follow a 
good style at all. These are labels with nouns only and no 
verbs at all (e.g., “error”). According to literature [17], the 
Verb Object Style is the most recommended style that should 
be used for modeling Activities. 
With Gateways, a workflow can be divided into several 
paths, but different paths can also be merged. Most 
recommended Gateway labeling styles in literature have in 
common that they should end with a question mark (“?”). 
Thus, the literature assumes that these kinds of styles are 
mainly used for Exclusive (XOR) and Inclusive (OR) 
Gateways since in these Gateways a decision is made, which 
can be expressed as a question.  On contrary, a Parallel 
(AND) Gateway does not need such a label since no decision 
is made.  Such questions in Gateway labels can be expressed 
in one of the following styles: 
 
Question with Noun and Verb in Past Participle 
(e.g., “document created?”) 
 
Infinitive Verb Question (e.g., “approve contract?”) 
 
Object with Adjective Question: A phrase consisting 
of an object followed by an adjective or an auxiliary 
and an adjective (e.g., “parts available?” or “parts 
are available?”) 
 
Equation Question:  A phrase consisting of an 
object followed by a logical operator and a value 
(e.g., “amount is greater than $ 200”). 
A counter example for good quality again is a noun only 
(e.g., “result?”), It is not possible to derive a clear decision 
from such a kind of label. For Gateways, the most 
recommended labeling style is Question with Noun and Verb 
in Past Participle [17]. 
Finally, events that can occur within a process are 
modelled with the model element Event. 
Labeling styles for Events can be classified as followed: 
 
Verb in Past Participle Style: This can be 
characterized by an object followed by a verb in 
past participle or followed by a (modal) auxiliary 
and a verb in past participle (e.g.,  “document 
created”, “document has been created”,  “document 
is created”, “document must be created”) 
 
Predicative Adjective Style:  Here, a noun together 
with a predicative adjective is used to label an Event 
(e.g., “document correct” or “document is correct”). 
 
Categorization Style:  Two nouns are related with a 
verb (mainly the verb “is”) in order to express that 
the term specified with the first noun can be 
categorized according to the term expressed with 
the second noun (e.g., “person is author”). 
Modelers also use labels that better should not be used 
for Events at all, since they do not provide sufficient 
information to a reader. For instance, they use a noun only 
(e.g., “inquiry”). The Verb in Past Participle Style is the one, 
which is most recommended as a labeling style for Events 
[17]. 
Beside simple labels, it has also been examined in 
literature that modelers use complex phrases and sentences 
for Activity labels instead of drawing more model elements 
with simpler, so called canonical labels.  Especially in [18], 
these kinds of inconsistent use of labeling, so called non- 
canonical patterns, are examined.  Three categories of 
complex, non-canonical label patterns were detected:  
 
Complex control flow label:  The label of an 
Activity consists of a sequence of verbs, each 
describing an Activity, which are concatenated with 
“or” or “and”. This verb sequence, however, 
implicitly expresses a decision (in the case of “or”) 
or a parallel respectively a sequential execution of 
several Activities (in the case of “and”). It does not 
express an atomic working step. Thus, instead of 
one Activity with a complex label, several 
Activities with simpler labels together with control 
flows can also be used. Other complex labels of that 
kind are phrases, which end with “as required”, “as / 
if needed”, as well as sentences or phrases 
expressing an iteration (e.g., “while …. “, “repeat 
until … “, “for each …”). 
 
Extra specification of data, resources and time: In 
this category, the label of the model element not 
only contains the necessary information, but also 
additional information that is often given in some 
sorts of brackets (e.g., “clear differences (inventory 
management)”). Most often, either this extra 
information should be itself explicitly modelled 
with a model element like an Event, Activity or 
Gateway or this extra information is useless. 
 
Implicit Action and Decision:  Here, the label and 
the model element do not fit. For instance, the label 
of an Activity is expressed in terms of a pattern that 
is typically used for an Event (e.g., “order received” 
instead of “receive order”). 
In literature, these categories of non-canonical labels are 
seen as patterns that can confuse the reader of a model. 
The guidelines for labeling discussed in literature are 
focusing on model elements for Process Models. No explicit 
guidelines exist for typical model elements of Collaboration 
Diagrams, Choreography Diagrams and Conversation 
Diagrams. However, the model elements of these three 
Diagrams have either a very specific purpose (e.g., Pools, 
Lanes) or the model elements of these Diagrams can be 
derived from model elements that already exist in Process 
Diagrams. If model elements have a specific purpose, then 
this can restrict the way in which they can be labeled. If they 
can be derived from model elements that already exist in 
Process Diagrams then also the labeling styles and guidelines 
of the exiting model elements can be applied to these “new” 
model elements (e.g., model elements of Choreography and 
Conversation Diagrams). 
B. 
Focus of this Work with respect to Related Work 
In this work, the labels of the model elements are also 
examined. For analyzing the labels of model elements in 
Process Diagrams, this work does not only consider 
Activities, Gateways and Events as such, but also explores 
different types of Activities, Gateways and Events in detail. 
124
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

In addition to previous work in the related literature about 
labeling guidelines for Process Diagrams model elements, 
the main emphasis of this work can be characterized as 
follows: Instead of working with data sets from industry, the 
aim of this paper is to look for BPMN examples on the Web. 
Existing results of labeling guidelines in literature are taken 
as a reference. With this as a basis, the Web examples are 
examined and compared with the given guidelines. 
Furthermore, the focus is not only on model elements of 
Process Diagrams as in previous literature. In addition, it 
also focuses on the label analysis of new model elements, 
which appear in Collaboration Diagrams, Choreography 
Diagrams and Conversation Diagrams. Once again, the Web 
was taken as a resource for analyzing the modelled examples 
of these diagrams.   
III. 
PREPARATION OF THE WORK 
In order to check how different enterprises, which sell 
BPMN modelling tools, as well as consultants, provide 
BPMN diagram examples, the following procedure was 
executed to get the sample.  
For Process Diagrams, in the first step, the search term 
“BPMN” was entered into the search field of Google. This 
search engine was used as a means to choose the sample. In 
order to get diagrams first and not descriptions of BPMN, the 
image result list of the search engine was used. Here, it was 
expected to get various images of BPMN diagram examples.  
Once the search engine generated the list of diagrams, in the 
second step the list was manually examined. For each image, 
it was first decided if this image is really a BPMN diagram 
example in English provided at a Web site or if it is not. If it 
was indeed such a diagram, then the link to the respective 
Web site, from which the search engine listed the image, was 
collected. For this purpose, the link was entered into a file in 
order to generate a list of Uniform Resource Locator (URL) 
links.  At the end of this URL collection step, a list of URL 
links, each containing at least one image of a BPMN diagram 
was collected in the file. In the third step, the file with these 
links was further examined. For doing this, the file with the 
URL link list was automatically scanned and each link was 
grouped to a Web domain.  
In the fourth step, each link, as well as the additional link 
to the more general Web domain, was once again further 
examined. From all these sources, images of BPMN Process 
Diagram examples were downloaded and collected on the 
local file system. The aim of this fourth step was to find 
more BPMN images provided at this Web domain. Much 
more images were found and collected.  
In the fifth step, all these collected images were manually 
examined and the individual BPMN model elements together 
with their features and labels for each diagram and domain 
were transcribed into a database. This data set was then 
analyzed according to the aim of this work. 
In total, 43 Web domains and the BPMN 2.0 by Example 
document of Object Management Group (OMG) [19] were 
examined. The BPMN 2.0 by Example document was 
included, since this is also an important information resource 
about BPMN on the Web. During this collection phase, 
images, which were not readable, were filtered out. Images 
that are used as BPMN counter examples (i.e., how a BPMN 
diagram should not be modeled) were filtered out too, since 
the focus is on models that are seen as correct by the 
provider. The remaining examples, which in total are 346 
diagram images of BPMN model examples were used for 
this work. Furthermore, only distinct labels were analyzed. 
This should avoid that a certain labeling style appears too 
often just because the same label (e.g., “order product”) is 
used in many examples. 
For Collaboration Diagrams, Choreography Diagrams 
and Conversation Diagrams in the first step the names of 
these Diagrams were explicitly entered into the search text 
field of the search engine in order to prevent results that 
show Process Diagrams only. Once again, the image result 
list was examined. Since there were not so many of these 
diagrams found on the Web, the rest of the collection and 
analysis procedure was done manually. Once the diagrams 
were collected, the labels of the model elements on each of 
diagrams were examined. Particularly, the labels were 
checked if there are any modeling preferences regarding a 
certain given labeling style. Once again, only distinct labels 
were analyzed. 
IV. 
PROCESS DIAGRAM  
The BPMN Process Diagram is the most used type of the 
four BPMN diagrams.  A BPMN Process Diagram specifies 
the flow of the working steps for processes that usually 
appear in enterprises in order to produce a value (e.g., a 
product or a service). However, it also can be used to model 
any kinds of processes. For example, computer-supported 
parts of processes (workflows) can also be modeled with this 
diagram. Therefore, it is obvious that this type of diagram is 
very important. Figure 1 shows an excerpt of such a diagram. 
Here, the first two possible steps in the process of how to 
write a thesis are specified. 
 
 
Figure 1. Except of Process Diagram 
 
In the Subsections A to D, the analyzed distinct labels of 
important kinds of model elements specified in Process 
Diagram examples on the Web are introduced and discussed. 
They are discussed with respect to the recommendations in 
125
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

literature mentioned in Section II. These model elements 
have the characteristics that  
a) quality guidelines already exist in literature and  
b) they appear in nearly every introductory example of 
a Process Diagram. 
Especially, this holds for Tasks as a subset of Activity 
and Events. Gateways on the other hand have to be used as 
soon as a process model does not have only a single 
sequence, but the specified process in the process model 
branches to several paths. Thus, in most process models, 
except the most trivial ones, Gateways are important. 
Furthermore, these labels are analyzed in detail according to 
the specific model element, since for different model 
elements different labeling strategies are needed. In addition 
to these more important types of model elements, also model 
elements of minor importance will be discussed in 
Subsection E. However, since these types of model elements 
in Subsection E do not play an important role, no labeling 
quality guidelines exist, to which the label of these model 
elements can be compared. 
A. 
Labels of Activities 
As mentioned in Section II, Activities are the working 
parts in a process. Activities can be divided into the 
following categories: Task, Sub Process and Call Activity. 
A Task is a single atomic working step of someone or 
something within the process. It is atomic since it cannot be 
split into smaller pieces. The OMG BPMN specification lists 
the following Task types:  Task with no specific type 
(untyped Task), Send Task, Receive Task, User Task, 
Manual Task, Script Task, Service Task and Business Rule 
Task (see Figure 2 for the graphical notations). 
 
 
 
Figure 2. Task types in BPMN 
 
These Task types have different meanings. For instance, 
a User Task is a Task, where a human performs this Task 
with the assistance of a software application. A Manual Task 
is a task that is also done by a human but without any 
assistance of a software application. A modeler can model a 
task as a Send Task, if during this Task any kind of 
information or thing is send. S/he can model a Task as a 
Receive Task if any kind of information or thing is received 
within the process. The Script Task executes predefined 
scripts. In a Service Task, a predefined business logic is 
executed. In a Business Rule Task, predefined decisions are 
made. If the modeler do not want to give the modeled Task a 
certain semantic, then s/he models an untyped Task. After 
the examination of Process Diagrams, it turned out that the 
untyped Task was the dominating task type. About two third 
of all tasks were untyped Tasks. The next frequent Task was 
the User Task. About a fifth of all the Tasks were User 
Tasks. The rest were Service Tasks, Manual Tasks, Send 
Tasks, Receive Tasks and Script Tasks. Business Rule Tasks 
appear very seldom in the sample. 
Sub Processes are parts in a process, which can be 
splitted into smaller pieces. These pieces can be itself Tasks 
or Sub Processes. Hence, Sub Processes represent processes 
within the whole process. They establish a nested hierarchy 
of working parts. Sub Processes can be divided into the 
following categories according to the OMG: Untyped Sub 
Process, Event Sub Process, Transaction or Ad hoc Sub 
Process. Figure 3 shows the graphical notations of the 
different types of Sub processes. 
 
 
 
Figure 3. Sub Process types in BPMN 
 
An Event Sub Process is a Sub Process that is triggered 
by Events. A Transaction Sub Process is a process that must 
reach a consistent state. In an Ad-hoc Sub Process the parts 
of it (i.e., Tasks, other Sub Processes) do not have a causal 
dependency on each other. They can even be executed in 
parallel. Once again, if the modeler do not want to specify 
the specific category of a Sub Process, then s/he uses the 
untyped Sub Process.  
In the given sample, this untyped Sub Process is the 
category that is mostly used. More than 80 % of all modeled 
Sub Processes are untyped Sub Processes.  
Finally, a Call Activity (see Figure 4 for the graphical 
notation) refers to a Sub Process that is globally specified 
once, instead of directly embedded into the overall process. 
 
 
 
Figure 4. Call Activity 
 
126
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

To summarize, Activities represent those parts of a 
process where somebody or something should act in order to 
progress the process. Therefore, an active verb, which is the 
best word category for acting, should be used to label these 
model elements. In literature, the Verb Object Style is 
preferred. An object itself can be a noun (simple ore 
compound) or a noun phrase.  
In the sample, 944 distinct Task labels were found. The 
majority of these distinct Task labels (75 %), , follow this 
Verb Object Style, where the object is a noun and the direct 
object of the verb (e.g., “specify vacancy”, “ship item”, 
“review results”). In some cases, an article is added (e.g., 
”select a pizza”). Only in 2 % of all cases, a single verb or a 
verb together with an adverb is the only label for a Task 
(e.g., “publish”, “rate negatively”). In 13 % of the cases, the 
Task labels extend the suggested Verb Object Style a little 
bit. In these labels, the object is a noun phrase (e.g., 
“nomination form” in “send nomination form”). In addition, 
cases were found, where the object is an indirect object (e.g., 
“communicate to customer”) or there are two objects (direct 
and indirect object) following the verb (e.g., “deliver books 
to customer”).  In 10 % of the Task labels, the modeler used 
other labeling styles for Tasks. For instance:  
 
They used nominalization of a verb (e.g., 
“delivery”).  
 
They used full sentences (e.g., “why have you 
bought so many sticks of sausage?”). 
 
They concatenated verbs (e.g., “add paperwork and 
move package to pick area”). 
 
They used a condition phrase (“check if extra 
insurance is necessary”).  
To summarize, the Verb Object Style preferred in 
literature is also used in the majority of cases on the Web 
(see Figure 5). 
 
 
 
Figure 5. Percentage of Task labeling styles. 
 
For Sub Processes, the situation is as follows: From the 
85 distinct labels of normal Sub Processes, 42 % have a 
nominalization of the verb (e.g., “ordering”, “creation”) as 
their label (i.e., Action Noun Style). In 55 % of the cases, Sub 
Processes follow the Verb Object Style. Either the rest does 
not have a label or it is a complex sentence (e.g., “send out 
application forms & reminders”). Hence, no definite labeling 
preference can be found in these examples from the Web.  
There are not enough Event Sub Processes and 
Transactions in the sample. Therefore, here it is hard to make 
a good proposition. In these few examples, the labels follow 
the Verb Object Style. There are also not so many Call 
Activities in order to make a proposition. Therefore, it can 
only be observed here that modelers prefer the Action Noun 
Style instead of the Verb Object Style. 
B. 
Relationships between Labels and Specific Task Types 
Since about a fifth of all modeled Tasks are modeled as 
User Tasks, it is interesting to see, what is modeled as a User 
Task. Especially, it is interesting to see, what is modeled as a 
User Task in comparison to what is modeled as a Manual 
Task. Therefore, the labels of the two Tasks are further 
analyzed.  
From the point of view of the BPMN specification [20], 
there is a clear distinction between a User Task and a Manual 
Task. A person performs a User Task but a software 
application assists this person. A Manual Task is also 
performed by a person, but without assistance of a software 
application system. 
It could be expected that labels for Tasks that represent a 
software application support differ from the labels of Manual 
Tasks. However, according to the labels it is not always 
possible to differentiate between a User Task and a Manual 
Task. Of course, labels with a verb were found that fit with 
the purpose of a User Task (e.g., “edit 1st level ticket”, “fill 
in purchase form”, “book flight”, “find student’s position”). 
On the other hand also labels were found, which do not 
perfectly fit with the purpose of a User Task (e.g., “hire 
staff”, “plan interview”, “read book”, “rent office”, “ship 
book”, “train new employee on job specifics”, “discuss 
nominations”, “announce Nobel prices laureate”, etc.). The 
labels for User Tasks and Manual Tasks are set arbitrarily. 
One interpretation can be that it is the modelers decision to 
see something as a Manual Task (without software 
application support) or a User Task (with software 
application support) and it depends on the purpose of the 
model (i.e., whether it is a workflow model or not). 
Particularly, a User Task can be more than a simple user 
interaction with the Information System. Thus, if a workflow 
for a workflow engine is specified with BPMN then it seems 
that every Manual Task can also become a User Task. A 
second interpretation can be that modelers of these 
introductory learning examples do not really want to 
distinguish between User Tasks and Manual Tasks at all. 
Therefore, they prefer to model a User Task even in a 
situation where a Manual Task would be the right choice. 
The frequency of other task types is very low and, except 
for Send Tasks, no relationship between labels and these 
Task types were found. For the 38 distinct labels of Send 
Tasks, in this sample it turned out that 53 % of the distinct 
Send Task labels start with the verb “send”. Further, 26 % 
have a verb like “email”, “inform”, “notify”, “distribute”, 
“post”, “submit”, “order”. All these other label examples can 
be seen as variants of sending. Thus, it can be concluded that 
127
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

labels of a Send Task are in accordance with the purpose of 
this Task type. 
C. 
Labels of Events 
The next important model element of BPMN is the 
Event. 
BPMN 
distinguishes 
between 
the 
following 
categories: Events that start a process (Start Event), Events 
that finish a process (End Event) and Events that can happen 
during process execution (Intermediate Event). There is also 
a special type of Event, which can be placed on the boundary 
of an Activity (Boundary Event). Furthermore, in each of 
these categories an Event can have different types. Some of 
these types are untyped Event, Message Event, Timer Event, 
Error Event and Conditional Event. If the modeler do not 
want to model a specific type of Event, then s/he models an 
untyped Event. Finally, for some of the specific Event types, 
it can be distinguished whether an Event is triggered 
(throwing Event) or an Event is received (catching Event). 
The semantic of a certain Event depends on the combination 
of the aforementioned category, type and if it is a throwing 
or catching Event. For instance, an Intermediate catching 
Message Event means that within a process, the process 
execution waits until the process receives a message, an 
information or thing. After it has been received, the process 
continues. A throwing Intermediate Message Event means 
that at a certain state in the process, a message, information 
or thing is sent to a recipient that has to catch this message 
information or thing respectively. Immediately after sending 
it, the process execution continues with the next process step. 
With a Timer Event, anything that is related to time (e.g., a 
certain point in time, a duration etc.) can be specified. For 
more explanations of the different meanings of Events, the 
reader is referred to the OMG BPMN specification [19] [20]. 
Figure 6 shows some Events. This list however is not 
complete since there are many other types of Events, which 
can occur in the combination of a Start- Intermediate- or End 
Event and whether they are catching or throwing. For a 
detailed list, the reader is referred to [2]. 
 
 
 
Figure 6. An excerpt of Event categories and types 
 
When talking about labels on Events, firstly, it has to be 
examined if Events have labels. While BPMN modelers 
always give labels for Tasks, they are not so systematic if 
they have to specify labels for Events. From all the Start 
Events found in the diagrams of the sample, 46 % do not 
have a label. From these, most of the Events (86 %) are 
untyped Events (i.e., Events that are not further classified to 
a specific type). However, a few cases were also found with 
Link Events, Message Events and Signal Events that have no 
labels. For Intermediate Events, fewer cases with no labels 
exist. Only in 14 % of all Intermediate Events, no labels 
were detected. Particularly, the Intermediate Timer Event 
and Message Event are those types with no labels. These two 
Event types also had a high frequency within the 
Intermediate Events types. There are 38 % of all Boundary 
Events, which do not have a label.  There are 56 % of all End 
Events, which do not have a label. From these End Events 
with no label, 81 % are untyped Events.  
To summarize this, for the examples provided on the 
Web, the modelers responsible for these examples especially 
do not see the necessity to label Start and End Events. 
Particularly, this happened if these Start and End Events are 
untyped Events. Unlabeled model elements, however, cannot 
be understood well. If novice process modelers see such 
unlabeled model element examples on the Web, they might 
take it as a standard although they should avoided it. 
After the examination of Events with no labels, it is 
interesting to see what kind of labels Events have. It is 
expected that specific Event types have specific types of 
labels. For example, Message Events and Timer Events are 
labelled in different ways. For this analysis, six Event types 
were further examined, since these Event types cover 87 % 
of all Event types in the sample. These Event types are: 
Timer Event, Message Event, Signal Event, Compensation 
Event, Terminate End Event and the untyped Event.  
All labels of the Timer Event have, of course, in common 
that they specify time. However, this is done in various 
ways. Table II presents a list of representative Timer Event 
labels. In this list, the grouping of the individual labels, 
suggests label patterns of similar structure. 
From the examples, it can be seen that they are not in 
accordance with the Event labeling style recommended in 
literature (Verb in Past Participle Style). Nevertheless, in the 
context of a Timer Event, many of these labels are 
appropriate. 
 
TABLE II. TYPICAL LABELS OF TIMER EVENTS 
 
 wait 
until 
next 
business day 
 24h; 
10 
min; 
60 
minutes; one week; 2 
weeks; 24 hours; 14 
days; 48-hours 
 september year n-1 
 wait 6 days; wait some 
time; 
wait 
until 
thursday, 9am 
 1st day of month; 20th 
of each month 
 3 business days  
 friday at 6 pm pacific 
time; friday, 6 pm 
pacific time 
 
 timeout; time out (1 
week); order timed out 
 content expired (5 days) 
 delay 6 days; delay 6 
days 
from 
announcement 
 < 60 min; > 60 min 
 expires at set deadline 
 auction over 
 10 min wait 
 12 o'clock 
 start time; finish time 
 on next Wednesday 
 start on Friday 
 every 10 minuts; every 
24 hours 
 
128
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

For a Message Event, it has to be distinguished between a 
throwing Message Event and a catching Message Event. 
Usually, it could be expected that a catching Message Event 
follows the Verb in Past Participle Style. However, the 
found catching Message Events have a greater variety. 
Beside the typical Verb in Past Participle Style, also catching 
Message Events were found that consists of  
 
a noun (compound noun) or noun phrase only (e.g., 
“payment”, “complaints to customer service”) 
 
a complete sentence (e.g., “where is my pizza”)  
 
a verb in past participle only (e.g., “paid”). 
 
a noun with an adjective (e.g., “assignment 
complete”) 
Unfortunately, not so much throwing Message Events 
were found. Most of these throwing Message Events had no 
labels at all. Based on the remaining throwing Message 
Events with labels, it can be said that throwing Message 
Events use the Verb Object Style as it is usual in Task labels. 
Since a throwing Message Event can be used as an 
alternative for a Send Task, this labeling style is adequate. 
The literature recommends the Verb in Past Participle Style 
for an Event but does not consider the specific type of Event. 
The found Signal Events (catching or throwing) follow 
the Verb in Past Participle Style to a large extent. Beside 
this, the following interesting label examples were also 
found: “on alert”, “undeliverable”. According to literature, 
these examples would be out of the scope of the 
recommendations.  
Many of the Compensation Events do not have a label. 
Those that have a label, mainly follow the Verb Object Style 
(e.g., “cancel reservation”, “undo book travel”). Many of 
these labelled Compensation Events are throwing Events. 
Once again, this is out of scope of the recommendation in the 
literature, which in general prefers the Verb in Past 
Participle Style for Events.  However, in this special case of 
throwing Events, which rather express an active action than a 
passive reaction, the Verb Object Style makes sense. 
Most of the Terminate End Events do not have a label. 
The few remaining Terminate End Events with labels follow 
the Verb in Past Participle Style or just have the label 
“terminate” or “end”, respectively. 
The analysis of untyped Events is split into the analysis 
of Intermediate Events, Start Events and End Events. 
Untyped Boundary Events with labels do not appear in the 
sample. This analysis provides the following results. 
Untyped Intermediate Events follow the Verb in Past 
Participle Style. The labels of untyped Start Events do not 
only follow this style. Instead, some of them only have 
 
a noun, compound noun or noun phrase (e.g., 
“application”, “existing process”),  
 
an adjective (e.g., “hungry”)  
 
phrases starting with an adjective (e.g., “hungry for 
pizza”), 
 
simple sentences (e.g., “the store opens”). 
The labels of untyped End Events follow the Verb in Past 
Participle Style largely. 
D. Labels of Gateways 
BPMN distinguishes seven types of gateways: Exclusive 
(XOR) Gateway, Parallel (AND) Gateway, Inclusive (OR) 
Gateway, Event-based Gateway, Complex Gateway and two 
special Gateways that should be modelled at the beginning of 
a process. Particularly, these are the Exclusive Instantiating 
Event-based Gateway and the Parallel Instantiating Event-
based Gateway. For those types that appear most in the 
sample, the meaning will be explained. In Figure 7, the 
graphical notations of the most important types of Gateways 
are listed. 
 
 
 
Figure 7. Most important types of Gateways 
 
In general all gateways control, which of the several 
branching paths in a process are executed. The Gateways 
listed in Figure 7 also control how these paths can be merged 
together in a process. They do it however in different ways. 
A Parallel (AND) Gateway activates all following paths. 
This kind of Gateway also waits until all paths are executed 
if the paths are merged together. Only if all the paths are 
executed, the process execution after the merge continues. 
The Exclusive (XOR) Gateway depends on a condition 
expression. On the basis of the condition, it is decided, which 
of the several path is executed. Only one of these paths can 
be executed. During the merging of the paths, the Exclusive 
(XOR) Gateway just continues the process execution for 
every paths that was executed before. The Inclusive (OR) 
Gateway also depends on conditions but a subset of all the 
several paths and even all the paths can be executed. This 
depends on the conditions, which become true. During the 
merging-point the Inclusive (OR) Gateway knows the paths 
that were executed before and waits until all executed paths 
are finished before the process continues after the merge-
point of an Inclusive (OR) Gateway. 
With respect to the analysis of labeling, of course only 
the Exclusive (XOR) and Inclusive (OR) Gateways were 
analyzed. It is not necessary to analyze Parallel (AND) 
Gateways, since in these Gateways all the following 
branching paths are executed. Therefore, a label that 
specifies a condition is not necessary. In addition, none of 
the three Gateways (Parallel, Exclusive, and Inclusive) is 
analyzed at the merging-point, since they usually also do not 
have a label. Hence, it is only interesting how the conditions 
that should appear as labels on Exclusive (XOR) Gateways 
and Inclusive (OR) Gateways look like. 
The labels of these Gateways vary. The style Question 
with Noun and Verb in Past Participle is not the only one. 
Again, additional patterns exist:  
129
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
nouns, compound nouns and noun phrases,  
 
verbs in past participle only,  
 
states of an object (i.e., where the state is 
represented by an adjective or by the word “ok”),  
 
comparisons with mathematical operators (e.g., “>”, 
“<”) or with words (e.g., “above”).  
What is common to many labels is the character “?” at 
the end of the label. Many Exclusive Gateways and Inclusive 
Gateways even do not have a label although they branch the 
process into two or several paths. Such cases once again can 
be seen as a contradiction to the recommendations in 
literature. 
Beside the label of the Gateway itself, it is also important 
to analyze the labels on the Sequence Flows, which leave the 
Exclusive Gateways and Inclusive Gateways. About a fifth 
of all these labels are the words “yes” and “no”, respectively. 
The rest varies. These variations can be seen in Table III, 
where some of these labels are listed. 
 
TABLE III. LABEL EXAMPLES ON SEQUENCE FLOWS 
 
 “1” 
 “>=20” 
 “40 % “ 
 “yes” 
 “2nd level issue” 
 “50 % education 
training” 
 “all items available” 
 “allow extension”  
 “bicycle costs >= 500 
usd” 
 “capacity & parts 
available” 
 “capacity not 
available” 
 
  “capacity ok” 
 “employee is ready for 
work” 
 “fix in release”  
 “in stock” 
 “is junk mail”  
 “no more responses” 
 “not accepted”  
 “payment received == 
false” 
 “purchase 1” 
 “put on hold” 
 “ready with request” 
 “simple”) 
 
Process Diagrams intended for workflows also have 
Gateway 
labels 
like 
“${order.price 
<= 
250}” 
or 
“${!approved}”. 
E. Labels of Data Object, Data Store, Text Annotation  
Model elements that play a minor role in Process 
Diagrams are Data Object, Date Store and Text Annotation. 
A Data Object is any data that is processed in Activities. If 
data is taken from a certain storage (e.g., a file or database 
table), then this can be modeled with the model element Data 
Store. Finally, if the modeler would like to add any 
additional textual information to the process model, s/he can 
do it with the model element Text Annotation. Figure 8 
shows the graphical notations of these model elements. 
In labels of Data Objects also noun phrases appear. They 
can be complemented with verbs in participle or adjectives in 
order to express the state of an object (e.g., “job description”, 
“job description [endorsed]”). Some modelers extend this 
verb in participle with brackets. Nouns and noun phrases are 
the typical labels for Data Stores. Sometimes, the 
abbreviation “db” or the word “database” complements the 
label. Since Text Annotations are just comments or 
additional information given by the modeler, the modeler can 
use any phrase or sentences to label a Text Annotation.  
 
 
 
Figure 8. Data Object, Data Store and Text Annotation 
 
V. 
COLLABORATION DIAGRAM, COREOGRAPHY 
DIAGRAM AND CONVERSATION DIAGRAM  
As already mentioned in the introduction, BPMN offers 
three additional diagram types. These diagrams types are 
Collaboration 
Diagram, 
Choreography 
Diagram 
and 
Conversation Diagram. The following subsections describe 
these diagrams. First, the new model elements in these 
diagrams will be explained. Afterwards, the labels of these 
model elements will be discussed. 
A. Collaboration Diagram 
Whereas, a process modeler can specify the flow of 
activities within a single process, s/he cannot specify how 
two or more systems interact. Such information is modelled 
with a Collaboration Diagram. Therefore, the Collaboration 
Diagram is an extension of a process diagram. For specifying 
the flow of activities within each of the processes, the same 
model elements are used (Activity, Event, Gateway). In 
addition to that, the following new model elements appear in 
a Collaboration Diagram: Pool, Lane, and Message Flow. A 
Pool is a system or the role of a system in an interaction 
scenario that embeds a specific process. For instance, if a 
modeler wants to specify the surrounding system of a 
process, which contains this process (i.e., a department, an 
enterprise, a technical system or role of a system) then s/he 
uses the model element Pool to model it. If this system is 
more complex and contains subsystems then theses 
subsystems are modeled using the model element Lane. A 
typical example of a complex system can be an enterprise, 
which is modelled as a Pool. If it is necessary to model 
certain departments of that enterprise, then these departments 
are modeled as Lanes. In order to specify the interaction 
between the processes, the Pools can exchange messages. 
This is modelled with the model element Message Flow. 
Messages Flows represent simple messages, information 
exchanges or even material things (e.g., certain products) 
130
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Hence, a Message Flow represents anything from a simple 
information to a more complex domain entity like a product, 
contract or money that is transferred from one Pool to 
another. Figure 9 shows two Pools exchanging Messages. In 
this example, the Pools are collapsed. However, Pools in a 
Collaboration can also be expanded. Then each pool contains 
its specific process modelled with the model elements of a 
Process Diagram. 
 
 
Figure 9. Collaboration Diagram with collapsed Pools 
 
Looking at the labels of the model elements used in 
Collaboration Diagrams, the following can be said: The 
model elements that are already in use in Process Diagrams 
are labeled in the same ways as described in the section 
about Process Diagrams (Section IV). The model elements 
Pool, Lane and Message Flows are labeled as follows:     
Nouns and noun phrases dominate the labels of Pools and 
Lanes. In 88 % of the cases, a label of a Pool is a noun 
phrase. For Lanes it is even 100 % in the sample.  Typical 
labels on Message Flows are nouns or noun phrases only. In 
69 % of the cases, a label of a Message Flow is a noun or a 
noun phrase. However, the labels of Message Flows can also 
follow other styles. Such a style for instance is Verb in Past 
Participle Style. An example for this style is e.g., “letter 
received”. Some Message Flows follow the Verb Object 
Style (e.g., “send letter”). Message Flows can have the 
following labels as well: “100$”, “give me 100$”, “here is 
your medicine”, “pickup your medicine and you can leave”. 
In these special cases of whole sentences, modelers use 
message flows mainly to represent the concrete oral 
communication between persons represented by the Pools. In 
some Collaboration Diagrams, the Message Flows do not 
have a label. In these Diagrams, the modelers seem to 
assume that the semantic of message in the Message Flow 
can be derived from the involved Events. 
B. Choreography Diagram 
The Choreography Diagram was introduced in Version 
2.0 of BPMN. A Choreography Diagram focuses on the 
interaction of messages between Pools. Here Pools are also 
called participants. It is based on a Collaboration Diagram 
but instead of presenting all interaction details between 
pools, as well as all the process details within each pool it 
describes the interaction in a more compact manner. 
Therefore, this diagram introduces the new model element: 
Choreography. Figure 10 shows a simple example of a 
Choreography Diagram. It contains two Choreographies 
connected by a Sequence Flow. 
.
 
Figure 10. Choreography Diagram 
 
The Choreography is a radiused rectangle, which consists 
of three sections. The outer sections represent the involved 
participants (Pools) in this Choreography. The section in the 
middle represents the activity that triggers or receives the 
messages. This activity can be either a Choreography Task 
or a Sub Choreography. Sometimes also the messages itself 
are presented with a letter-envelope icon related to the 
Choreography. A Sequence Flow can connect each 
Choreography to other Choreographies. Similar to Process 
Diagrams, such a Choreography Diagram can split into 
several paths. These paths can also once again merge 
somewhere in the diagram. Therefore, a Choreography 
Diagrams contains Gateways too. In addition, such a 
Diagram can also contain Events. At least one start Event 
and one End Event are mandatory.  
An examination of several Choreography Diagrams 
found on the Web provides the following results about the 
labels. 
The outer sections with the participants (Pools) involved 
in a Choreography always have a noun as a label. In the 
middle section where the activity is defined, the following 
was found. In 73 % of the cases, the section, representing the 
activity (Chorography Task or Sub Choreography), is labeled 
with the Verb Object Style (e.g., “confirm order”). In 10 % of 
the cases, the Action Noun Style (e.g., “order rejection”) is 
131
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

used. In 11 % of the cases, these labels were also nouns, 
noun phrases or nouns with an adjective (e.g., “insufficient 
credit”). In addition, a few cases (6 %) used non-canonical 
patterns (e.g., “pick and drop Customer”) or other labeling 
styles (e.g., “payment ok”). Unfortunately, far too few Sub 
Choreographies exist in the sample. Therefore, the analysis 
and analysis results do not distinguish explicitly between 
Choreography Tasks and Sub Choreographies. However, in 
these rare cases of Sub Choreography examples, it was 
examined that the Verb Object Style also dominates.  
In some cases, it was also interesting to see a switch of 
labeling style in the same diagram. The creator of this 
diagram used the Verb Object Style to a large extend but then 
used noun or noun phrase only. Since this middle section of 
the model element Choreography is derived from a Task or 
Sub Process, which are modelled in a Collaboration 
Diagram, then the Verb Object ,Style should be used. If it 
would be derived form a Sub Process, both the Verb Object 
Style and Action Noun Style would be appropriate. However, 
other kind of labeling patterns do not fit in this middle 
section of a Choreography.  
For most of the Messages related to a Choreography, 
nouns or noun phrases were used as labels. In one 
exceptional case of a diagram, such a label is a whole 
sentence. 
Nearly in all Choreography Diagrams, the Start Events 
and End Events had no label, since they just represent the 
trivial fact that the Choreographies have a start and an end. 
The few Intermediate Events that appeared in the diagram 
had similar variants of labeling styles like the Intermediate 
Events in Process Diagrams. Those kinds of Gateways, 
which appeared in the Choreography Diagrams and express a 
decision like Exclusive (XOR) Gateway or Inclusive (OR) 
Gateway, were also labeled in an adequate manner. The 
labels indicate the decision that has to be made. Particularly, 
similar variants of labeling styles like for the Gateways used 
in Process Diagrams (e.g., the labeling style Question with 
Noun and Verb in Past Participle) are used here too. Parallel 
(AND) Gateways do not have a label in these Diagrams. 
However, like in Process diagrams, there is also no need for 
a label on Parallel (AND) Gateways, because the sequence-
flows split and all outgoing paths have to be taken. Hence, 
there is no need to label this splitting point for expressing a 
decision that has to be made at this point. 
C. Conversation Diagram 
The Conversation Diagram was also introduced in 
Version 2.0 of BPMN. A Conversation Diagram describes 
the exchange of messages between participants. Once again, 
these participants are just a continuation of the concept Pool. 
The graphical notation is a little bit different. Instead of tall 
rectangles, these participants are modelled with smaller 
rectangles.  The new model element, which is introduced in a 
Conversation Diagram, is the Conversation and the 
Conversation Link.  The Conversation defines the message 
exchanges between the Pools. The modeling notation for a 
Conversation is a hexagon. BPMN distinguishes between 
normal 
Conversations, 
Sub 
Conversations 
and 
Call 
Conversation. The latter is a reference to a globally defined 
Conversation or Sub Conversation. Graphically, a Call 
Conversation is also drawn as a hexagon but the margins are 
bolder.  In order to specify, which participant is connected, 
to which other participant via a Conversation, the 
Conversation Links (two parallel lines) connect the 
participants with Conversations. Figure 11 shows a simple 
example of a Conversation Diagram. 
Since in Conversation Diagrams the participants 
represent Pools, the modelers mainly use nouns or noun 
phrases to model these participants. It was also observed that 
two styles dominate the labels for Conversations. About 42 
% of the distinct labels are nouns or noun phrases. In 30 % of 
the labels, the Verb Object Style is used (e.g., “run 
advertising campaign”, “invoke service components”). 
Additionally, other labeling preferences appear. About 16 
% of the labels follow the Action Noun Style (e.g., “book 
reservation”). In the remainder of the cases, the modelers 
preferred labels, which mainly follow non-canonical label 
patterns 
(e.g., 
“recruitment 
and 
training”, 
“delivery/dispatch”). 
 
 
 
Figure 11. Conversation Diagram 
 
Unfortunately, Sub Conversations were rarely used and 
Call Conversations were not used at all in the sample. All 
that can be said about Sub Conversations is: A dominant 
labeling style does not exist in this sample.  
Since a Conversation represents message exchanges, 
labeling using a noun, noun phrase or the Action Noun Style 
is more natural.  Conversation Links are not labeled. 
However, this is according to BPMN, which also does not 
enforce labeling of Conversation Links. 
VI. 
CONCLUSION AND FUTURE WORK 
This paper described how BPMN model examples are 
presented on the Web. Particularly, the labels of the model 
elements of all the four types of BPMN diagrams (Process 
Diagram, Collaboration Diagram, Choreography Diagram 
and Conversation Diagram) were examined. In summary, the 
following can be said about the BPMN model element labels 
used in Web examples. 
For the labels of atomic Activities called Tasks, there is 
common consensus to follow the recommended Verb Object 
Style, since the majority of the label examples for model 
elements on the Web follow this style. For non-atomic 
Activities (i.e., normal Sub processes), two ways of labeling 
are preferred: Nominalization of a verb (Action Noun Style) 
132
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

and the recommended Verb Object style.  
In the case of Event types, it turned out that the labeling 
styles vary depending on the Event type used. Additionally, 
within the same Event type, variations of labels exist. For 
some of these labeling strategies, existing literature would 
even state that these labels have deficiencies. Therefore, it 
would be good that both providers of such examples and 
readers of these examples have a more critical look on them. 
However, it also has to be said that some of the label 
examples for Events (e.g., Timer Event) are appropriate with 
respect to the certain type of Event.  
If Gateways have a label, then it is quite well understood 
that a question mark (“?”) should close the label, as it is 
suggested in literature. However, this is the only accordance 
with literature. Since many of the Gateways do not even 
have any label. This can be also interpreted as follows. The 
community, who posts process model examples on the Web, 
does not yet understand labeling of Gateways as an 
important feature for a better understanding of the process 
paths.  
It is of common understanding that the Pools 
(participants) used in Collaboration Diagrams, Choreography 
Diagrams and Conversation Diagrams as well as the Lanes in 
Collaboration Diagrams represents systems or role of 
systems and subsystems, respectively. Therefore, they should 
be labeled with a nouns or a noun phrase.  
In Choreography Diagrams, the labels of the new model 
element Choreography are consistent with its basis. As 
already described, the outer sections of a Choreography that 
represent participating Pools are labeled with nouns or noun 
phrases. The middle section, which represents the activity 
triggering or receiving a message, is labeled with the most 
common labeling styles used in Activities. Namely, it is 
labeled with the Verb Object Style or Action Noun Style.  
Many of the labels used in the new model element 
Conversation are either nouns and noun phrases, respectively 
or they follow the Verb Object Style. However, nouns and 
noun phrases seem to be more natural. 
Hence, the new model elements, which appear in 
Collaboration Diagrams, Choreography Diagrams and 
Conversation Diagrams, have labels that mainly represent 
their purpose. 
As a future work, it would be interesting to examine Web 
examples of Process Diagrams, Collaboration Diagrams, 
Choreography Diagrams and Conversation Diagrams that are 
modeled with labels in another language than English. 
REFERENCES 
[1] C. Kop, “Analyzing Model Element Labels of Business 
Process Model Examples Provided on the Web,” The Twelfth 
International Conference on Information, Process, and 
Knowledge (eKNOW2020), IARIA ThinkMind, 2020, pp. 28 
– 33. 
[2] 
BPMN 
2.0 
Poster 
available 
on 
the 
Web: 
http://www.bpmb.de/images/BPMN2_0_Poster_EN.pdf 
[retrieved: December 2020]. 
[3] https://www.ariscommunity.com/users/roland-woldt/2011-01-
28-learning-bpmn-2-which-models-are-available-bpmn 
[retrieved: December 2020]. 
[4] D. L. Moody, The “Physics” of Notations: Toward a 
Scientific Basis for Constructing Visual Notationsin Software 
Engineering,” IEEE Transactions on Software Engineering, 
vol 35 (6), 2009, pp. 756 – 779. 
[5] J. Becker, “Opportunities and Constraints: The Current 
Struggle with BPMN,” Business Process Management 
Journal, vol. 16 (1), 2010, pp. 181–201. 
[6] J. Becker, M. Rosemann, P. Green, and M. Indulska, “Do 
Ontological Deficiencies in Modeling Grammars Matter?,” 
MIS Quaterly, vol. 35 (1), 2011, pp. 57–79. 
[7] B. Silver, BPMN method and style, 2nd edition, Cody-
Cassidy Press, 2009. 
[8] J. Krogstie, Quality in Business Process Modeling, Springer 
2016. 
[9] I. Moreno-Montes de Oca, M. Snoeck, and H. A. Reijers, A. 
Rodriguez-Morffi, “A systematic literature review of studies 
on business process modeling quality,”  Journal of 
Information and Software Technology, vol, 58, 2015, pp. 187-
205. 
[10] J. Mendling, H. A. Reijers, and W. M. P. van der Aalst, 
“Seven process modeling guidelines (7PMG),” Journal of 
Information and Software Technology, vol. 52, 2010, pp. 
127–136. 
[11] M. Cortes-Cornax, S. Dupuy-Chessa, D. Rieu, and M. Dumas, 
“Evaluating Choreographies in BPMN 2.0 Using an Extended 
Quality Framework,” International Workshop on Business 
Process Modeling Notation, Springer, 2009, pp 103-117. 
[12] A. Koschmider, M. Ullrich, A. Heine, and A. Oberweis, 
“Revising the Vocabulary of Business Process Element 
Labels,” International Conference on Advanced Information 
Systems Engineering (CAiSE 2015), Springer LNCS 9097, 
2015, pp. 69–83. 
[13] H. Leopold, J. Mendling, and H. A. Reijers, “On the 
automatic labeling of process models,” Proceedings of the 
23rd International Conference on Advanced Information 
Systesm Engineering (CAiSE 2011), Springer LNCS 6741, 
2011, pp. 512–520. 
[14] K. Figl, J. Mendling, and M. Strembeck, “The Influence of 
Notational Deficiencies on Process Model Comprehension,” 
Journal of the Association for Information Systems, vol. 14 
(6), 2013, pp. 312–338. 
[15] A. 
Koschmider, 
K. 
Figl, 
and 
A. 
Schoknecht, 
“A 
Comprehensive Overview of Visual Design of Process Model 
Element Labels,” Business Process Management Workshops 
(BPM 2015, 13th International Workshops), Springer LNBIP 
256, 2015, pp. 571–582. 
[16] H. Leopold, R. H. Eid-Sabbagh, and J. Mendling, L. 
Guerreiro Azevodo, F. Araujo Baiao, “Detection of naming 
convention violations in process models for different 
languages,” Decision Support Systems, vol. 56, 2013, pp. 
310-325. 
[17] H. Leopold, J. Mendling, and O. Günther, “Learning from 
Quality Issues of BPMN Models from Industry,” IEEE 
Software, July/August 2016, pp. 26–33. 
[18] H. Leopold, H., F. Pittke, and J. Mendling, “Ensuring the 
Canonicity of process models,” Data & Knowledge 
Engineering, 111, 2017, pp. 22–38. 
[19] BPMN 2.0 by Example, Version 1.0 (non-normative), OMG 
Document 
Number: 
dtc/2010-06-02, 
https://www.omg.org/cgi-bin/doc?dtc/10-06-02.pdf [retrieved: 
December 2020]. 
[20] Management Business Process Model and Notation (BPMN), 
Version 2.0, OMG Document Number formal/2011-01-03,   
http://www.omg.org/spec/BPMN/2.0 [retrieved: December 
2020]. 
 
133
International Journal on Advances in Internet Technology, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

