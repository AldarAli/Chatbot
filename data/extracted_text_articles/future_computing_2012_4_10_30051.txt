Fuzzy Computer Architecture Based on Memristor Circuits 
 
Martin Klimo 
Faculty of Management Science and Informatics 
University of Zilina 
Zilina, Slovakia 
martin.klimo@fri.uniza.sk 
Ondrej Such 
Mathematical Institute 
Slovak Academy of Sciences 
Banska Bystrica, Slovakia 
ondrej.such@gmail.com
 
 
Abstract— von Neumann computer concept is approaching its 
limits and new computing paradigms are needed. This paper 
introduces a fuzzy computer architecture based on memristor 
circuits. The new concept offers naturally parallel architecture 
that unifies memory and data processing. We discuss both 
application specific and general purpose computing. We 
conclude with an outline of a research roadmap to bring the 
concept into practical realization. 
Keywords 
- 
unconventional 
computing; 
fuzzy 
logic 
implementation; memristor.  
I. 
 INTRODUCTION  
In May 2011, FET Proactive Unit of DG-INFSO EC has 
published a document [1] that presents challenges for 2011-
12 period as a result of a broad discussion within ICT 
community. The idea threading through several essays in 
this brochure is that von Neumann computer concept is 
reaching its limits and new computing paradigms are 
needed. When a program is stored in memory, its  
instructions need to be transferred, along with the data,  into 
the CPU for execution. This introduces performance 
barriers: firstly, disjoining processing from memory and 
secondly, inherent serialization of program execution. These 
problems motivate  research into new computing concepts.  
Promising solutions seem to be the quantum computing 
and 
biomolecular/biocellular 
computing. 
Quantum 
computing is well covered by FET projects, and, even in 
May 2011, there was announced a sale of the first 
commercial 
quantum 
computer 
[2]. 
In 
2010, 
the 
BACTOCOM FET Proactive project [3] was also launched 
focussing on bio-computer prototyping based on population 
of E. coli bacteria and following in 2011 by COBRA FET 
Proactive 
Coordination 
Action 
[4]. 
Although 
these 
technologies are promising, they are not mature enough. 
Nanotechnology promises a new way to overcome 
performance limitations mentioned above. In 2008, the HP 
Lab realised a memristor [5], a two terminal circuit element. 
forecast by Leon Chua in 1971 [6]. This element is able to 
change its resistance between high and low resistance states. 
It does so under bias and in effect it “remembers” charge 
that has flown through it. Moreover, the change is non-
volatile, meaning no energy is needed for memristor to 
maintain its state. Nanoscale has proven crucial for the 
functioning of the device since in this realm enormous 
electric fields can be realized with low voltage. . Energy 
savings and higher densities can be obtained by non-volatile 
memristor memories announced for market in 2013 [7]. 
They can also bridge the distance between processing unit 
and the memory [8]. But, memristor crossbar can unify the 
memory and the processing unit together. Nowadays we can 
find two approaches how to do this. The first idea is to use 
memristors in the role of a synapse within a neural network. 
This approach is studied by ERC Starting Grant 
NANOBRAIN [9] since 2010. The second idea [10] is 
based on the fact that Boolean implication can by executed 
by material implication, where the logic value is expressed 
by the memristance and not by the voltage. This allows one 
to compute Boolean logic functions [11] by memristor 
crossbar. 
In the rest of our paper we present our new approach 
based on fuzzy logic circuits instead of binary logic circuits. 
Memristor implementation of fuzzy logic functions not only 
brings energy savings, but it naturally joins computation and 
memory functions and thus creates brain-like computing 
architecture. 
In the next section we review the basic building blocks 
for fuzzy logic circuits. In section three we describe an 
application-specific fuzzy architecture that parallels currently 
employed fuzzy controllers. Section four describes a general-
purpose fuzzy logic computer whose main distinguishing 
feature is reconfigurability. We conclude we propose a 
research roadmap that would bring the new architecture into 
reality. 
II. 
FUZZY LOGIC IMPLEMENTATION BY MEMRISTORS 
We have found [16] that elementary circuits with 
memristors can compute min (Figure 1), max, avrg functions 
and in synchronised mode (similar to [10]) the implication as 
well in voltage domain.   
 
Figure 1.  Example of a fuzzy function implementation. 
84
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-217-2
FUTURE COMPUTING 2012 : The Fourth International Conference on Future Computational Technologies and Applications

Hardware implementation of min, max functions is not a 
new idea and fuzzy logic circuits based on CMOS, FET [17] 
[18] or FPGA [19] implementations have been used. 
However, there are two principal advantages of memristor 
based implementations: 
1. Circuit uses only energy of its inputs and no extra source 
of energy is needed compared with the transistor based 
implementations mentioned above. 
2. Memristor implementation introduces also a memory 
feature of these elementary circuits. This property is 
based on dynamic behaviour of memristors and it needs 
further research. 
These three functions (min, max, avg) allow only 
building of a monotone fuzzy logic system [12]. Using clock 
pulses for implication or using CMOS invertors for negation, 
the Gődel logic can be implemented. This has a significant 
impact on the fuzzy computer architecture and all 
possibilities have to be investigated within the project for 
which we are looking for partners. Here we present an 
asynchronous architecture using the property of de Morgan 
law that the dual logic function with inverted inputs gives the 
inverted function. This dual system approach allows simpler 
implementation because invertors are located only in the first 
stage of min, max, avg based circuit. This means that energy 
source is needed only at the border of the fuzzy logic circuit 
and the rest of circuit is passive and voltage values are 
continuously recalculated as fuzzy logic functions when 
nonzero voltage inputs occur. 
We can conclude that memristor-based elementary fuzzy 
functions with dual system approach allow building general 
problem solving machines like today’s digital computers. 
III. 
APPLICATION SPECIFIC FUZZY COMPUTERS 
Thirty years of fuzzy systems applications show a big 
market potential of application specific fuzzy logic circuits. 
Capability of high density integration makes them suitable 
for control functions in daily life in applications like phones, 
cameras, etc. A general architecture of such a fuzzy 
computer is well known fuzzy system architecture, as shown 
in Figure 2. 
 
Inference 
Engine
Defuzzifier
Fuzzifier
Input
Output
 
Figure 2.  Application specific fuzzy system architecture. 
Min, max, avg functions can be applied in all of blocs in 
the fuzzy system; anyhow, we will concentrate on Inference 
engine, which is a fuzzy logic circuit itself.  
Although fuzzy logic applications are often times ahead 
of theory development, today's fuzzy logic stands on sound 
mathematical foundations that are continuously being 
extended. Fuzzy logic allows one to systematically approach 
solving problems dealing with „uncertainty“, in much the 
same way as two-valued logic captures manipulation of 
„certain“ information. This is the area where human are still 
order of magnitudes faster than currently used computers. 
However, should fuzzy logic systems approach complexity 
of human brain, they cannot be emulated on a von-
Neumannn computer. In their implementation, one needs to 
use blocks that can naturally execute elementary fuzzy logic 
functions and allows them to connect them into larger 
circuits. 
One of the main tasks in a fuzzy system design is 
optimization of fuzzy logic circuit for a particular 
application. In a small system the set of implications can be 
explicitly proposed, but no optimization method is available 
for large fuzzy circuits. Promising results give metaheuristics 
like evolution programming, genetic programming, fractal 
structures and so on. 
Creating fuzzy logic functions by memristor network 
topology evokes reminiscences to analog computing. 
Comparing memristor based computing with quantum or 
biocellular computing the memristor technology is more 
mature and several feasible approaches (metal-oxid, ferro-
magnetic, grapheme-oxide) for implementation exist. 
Min, max functions in Gődel logic is just one example of 
t-norm and co-norm in fuzzy logic. On the other side they are 
examples of fuzzy logic functions that are easily 
implemented by memristors. This gives rise to the question 
about position of Gődel logic within the general framework 
of fuzzy logics for applications. 
IV. 
GENERAL PURPOSE FUZZY COMPUTERS 
A general-purpose fuzzy computer requires means to 
reconfigure its circuits, because, like in the analog computer, 
the program is given by the circuit topology 
 
Figure 3.  General purpose fuzzy system architecture. 
and the initial state of the system. A rule generator, possibly 
controlled by a CPU/GPU computer, reconfigures memristor 
switches in fuzzifier, inference engine and defuzzifier as 
shown in Figure 3. 
Then programming, compiling and program execution is 
a process in which topology of fuzzy logic circuit is designed 
and parameters of fuzzifier and defuzzifier are specified. In 
this phase fuzzy computing keeps continuity with classical 
computing where programs are written by a human 
expressing given logic requirements. This approach  can 
build on previous works on the fuzzy logic programming 
[13] and Fuzzy Prolog-like program languages [14] or 
domain specific languages.  
Inference 
Engine
Defuzzifier
Fuzzifier
Rule 
Generator
Input
Output
85
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-217-2
FUTURE COMPUTING 2012 : The Fourth International Conference on Future Computational Technologies and Applications

This means that programming can be executed on a 
classical computer with interfaces into a general structure of 
reconfigurable memristor network. Memristor crossbar 
seems be a suitable element to do this, but many questions 
on the implementation are still open. 
As a starting point the following fuzzy computer 
architecture (shown in Figure 4) may be assumed. 
 
 
Figure 4.  Fuzzy computer architecture, processing sensor inputs on 
memristor crossbars and yielding actuators 
This is two-layer architecture. At the bottom there are 
memristor crossbars for real time processing with input-
output interfaces from sensors – into actuators, as well as 
invertors for the dual system. We can see dual logic 
architectures consisting of two “hemispheres”. If more 
crossbars are required to create one hemisphere than may be 
given by capacity constraints, sense domain separation or 
hierarchy needs [15], then additional switches may be 
needed. Also a switch that will connect the corresponding 
functions in both hemispheres (“Corpus Callosum“) belongs 
to this layer. At the top layer there are classical computers 
(CPU/GPU) that generate topology of memristor network 
within crossbars and switches regarding required fuzzy logic 
functions given by logic program. This topology may be 
fixed; anyhow we assume that local rules within one crossbar 
can be adapted by program in corresponding GPU (short-
term plasticity) while the long-term strategies (like 
supervised learning) will be distributed from the supervising 
CPU on the top.  
 
V. 
CONCLUSION 
 
Fuzzy logic has been applied in practice for several decades. 
Memristor technology, despite being just a few years old, is 
progressing rapidly, and first memristor memories will be 
commercialized within a year.  In order to combine them, 
and realize aforementioned fuzzy logic computers,  a natural 
research roadmap can be outlined: 
1. Adaption of fuzzy logic system to memristor technology 
a. suitability of Gődel logic from applications point of 
view 
b. evaluation of different memristor technologies 
(unipolar, bipolar, metal oxide, ferro-magnetic, etc) 
c. theoretical limits of fuzzy logic memristor circuits 
d. influence of memristor threshold effect on fuzzy 
computation 
e. composition of logic functions 
f. properties of self-referencing fuzzy logic functions 
(delay and synchronisation) 
2. Fuzzy 
Prolog 
like 
programming 
languages 
and 
corresponding compilers have to be developed to allow 
programmers write programs in digital computer style to 
create structures in fuzzy logic networks 
3. Applications development 
a. simple programs for architecture benchmarking 
b. evolutionary and genetic programs for more complex 
brain-like applications 
ACKNOWLEDGMENT 
This contribution is the result of the project 
implementation: Centre of excellence for systems and 
services of intelligent transport II., ITMS 26220120050 
supported by the Research & Development Operational 
Programme funded by the ERDF. Partially supported by 
grant VEGA 2/0112/11. 
REFERENCES 
 
[1] 
FET Consultations 2009-2010 “Shaping the future”. 
European Union, May 2011, ISBN 978-92-79-19570-9, 
doi:20.2759/4612 
[2] 
M. Feldman, “D-Wave Sells First Quantum Computer,” 
HPC wire (http://www.hpcwire.com/), May 26, 2011, 
[retrieved: May, 2012] 
[3] 
http://www.bactocom.eu/, [retrieved: May, 2012] 
[4] 
http://www.cobra-project.eu/, [retrieved: May, 2012] 
[5] 
D. B. Strukov, G. S. Snider,D. R. Stewart,R. S. Wiliams, 
“The missing memristor found,” Nature 453 (2008) 80-83 
[6] 
L. O. Chua, “Memristor – the missing circuit element,” 
IEEE Trans. Circuit Theory 18 (1971) pp .507-519 
[7] S. Adee, “HP partners with Hynix to commercialize 
memristors in an all-purpose memory,” IEEE Spectrum, 2010, 
http://spectrum.ieee.org/semiconductors/devices/memristor-
inside, [retrieved: May, 2012] 
 [8] 
G. Snider, R. Amerson, D. Carter, H. Abdalla, M. S. Q. J. 
Léveillé, M. Versace, H. Ames, S. Patrick, B. Chandler, A. 
Gorchetchnikov, E. Mingolla, “From Synapses to Circuitry: 
Using Memristive Memory to Explore the Electronic Brain,” 
Computer, vol. 44 No. 2 (2011) pp. 21-28 
[9]    http://cordis.europa.eu/fetch?CALLER=FP7_PROJ_EN&AC
TION=D&DOC=1&CAT=PROJ&RCN=95287, [retrieved: 
May, 2012] 
[10] J. Borghetti, G. S. Snider, P. J. Kuekes, J. J. Yang, D. R. 
Stewart R. S. Williams, “Memristive” switches enable 
“sateful” logic operations via material implications, Nature 
464 (2010) pp. 873-876 
invertors
Sensors 1
Sensors n
actuators
86
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-217-2
FUTURE COMPUTING 2012 : The Fourth International Conference on Future Computational Technologies and Applications

[11] E. Lehtonen, J. H. Poikonen, M. Laiho, “Two memristors 
suffice to compute all Boolean functions,” Electronic Letters 
46, No. 3 (2010) 
[12] M. Blum, R. Rue, K. Yang, “On the complexity of 
MAX/MIN/AVRG circuit,” Carnegie Mellon Technical 
Report CMU-CS-02-110, 2002, 
http://repository.cmu.edu/compsci/150/, 
[retrieved: 
May, 
2012] 
[13] P. Vojtáš, “Fuzzy logic programming. Fuzzy Sets and 
Systems,” 124 (2001) pp. 361–370 
[14] S. Guadarrama, S. Muñoz, C. Vaucheret, “Fuzzy Prolog: a 
new approach using soft constraints propagation,” Fuzzy 
Sets and Systems. 144, Issue 1 (2004) pp. 127-150 
[15] R. Velik, G. Zucker, D. E. Dietrich, “Towards Automation 
2.0: A Neurocognitive Model for Environment Recogni-
tion,” Decision-Making, and Action Execution,” EURASIP 
Journal on Embedded Systems, Vol. 2011, Article No. 4, 
doi>10.1155/2011/707410 
[16] M. Klimo, O. Such, O.: Memristors can implement fuzzy 
logic. http://arxiv.org/abs/1110.2074 
[17] T. Yamakawa, I Miki, “The Current Mode Fuzzy Logic 
Integrated Circuits Fabricated by the Standard CMOS 
Process,” IEEE Trans. Computers Vol. 35, No. 2 (1986) pp. 
161-167 
[18] F. Ueno, Y. Shirai, “Fuzzy Logic Semifinished Integrated 
Circuit,” US Patent No. 4,860,243 (1989) 
[19] D. Kim, “An Implementation of Fuzzy Logic Controller on 
the Reconfigurable FPGA System,” IEEE Trans. Industrial 
Electronics, Vol. 47, No. 3 (2000) pp. 703-715 
 
 
87
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-217-2
FUTURE COMPUTING 2012 : The Fourth International Conference on Future Computational Technologies and Applications

