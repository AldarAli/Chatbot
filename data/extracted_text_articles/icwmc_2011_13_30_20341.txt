Thresholds Determination for new Backoff Algorithm in MANETs 
 
Muneer Bani Yassein, Wail Mardini, Zainab AbuTaye' 
 
Jordan University of Science and Technology 
masadeh@just.edu.jo mardini@just.edu.jo, zoabutaye08@cit.just.edu.jo 
 
                                                   
Abstract - Backoff algorithms are one class of collision 
resolution algorithms used in the medium access control 
protocols in mobile ad hoc networks. When there are different 
nodes competing to access a shared channel at the same time, 
the possibility of collision is highly probable, especially in high 
traffic load networks. This study aims to study the possibility 
of using different values for increments and decrements in the 
contention windows in order to improve the performance.  
 
Keywords - Medium Access Control protocols; Backoff 
Algorithm; Ad hoc network; network performance. 
 
 
I. 
INTRODUCTION 
Mobile Ad hoc Networks (MANETs) [1, 2] work 
without 
requiring 
any 
preexisting 
communication 
infrastructure. These types of networks gain a high 
importance and attract attention due to the need of rapid 
deployment in emergency cases such as military operations, 
search and rescue operations and disaster recovery that do 
not have enough time to build an infrastructure. A MANET 
is an autonomous system of wireless nodes connected by 
wireless links. Each node not only acts as a sender or 
receiver but also as a router in order to convey the packet via 
intermediate nodes until it reaches the desired destination 
(multi-hop 
technique). 
These 
nodes 
have 
mobility 
characteristic that allow forming a dynamic network 
topology which is highly changeable and random. 
Collision is considered as the major problem in wireless 
networks, so the backoff mechanism should be applied in 
order to decrease the collision and to achieve an efficient use 
of the shared channel. IEEE 802.11 DCF, the most widely 
used standard in MAC protocol, uses a Binary Exponential 
Backoff (BEB) algorithm which uniformly chooses the 
backoff value from the Contention Window (CW). 
The main idea of using the backoff algorithm is to 
reduce collision and resolve contention among different 
nodes. Once the collision has occurred, the collided nodes 
are needed to defer for a period time known as 
retransmission delay (or backoff) which is usually selected 
randomly from bounded contention window that has a 
predetermined lower and upper values. These values are 
based on the number of active nodes and traffic load in the 
network. As an example CWmin and CWmax are usually set 
to 31 and 1023 respectively in IEEE 802.11 DCF, and set to 
2 and 1024 respectively in Ethernet [3, 4, 5, 6].  
Researchers have proposed many backoff algorithms in 
order to utilize the performance for IEEE 802.11 DCF MAC 
protocol. Some of these algorithms will be mentioned in the 
following section. 
 
II. 
BACKGROUND AND RELATED WORK 
Many backoff algorithms have been proposed in order 
to decrease the collision and to achieve an efficient use of 
the shared channel. 
In [7], Bharghavan, et al. have proposed Medium 
Access with Collision Avoidance-Wireless (MACAW) 
protocol which used a Multiplicative Increase Linear 
Decrease (MILD) Backoff algorithm. In the MILD 
algorithm, the nodes increase their contention window 
multiplicatively upon collision or failure in transmission 
and decrease their contention window linearly upon success. 
This algorithm introduced to address unfairness problem in 
Binary Exponential Backoff (BEB) algorithm. 
Manaseer and Masadeh [8] have  proposed a 
Pessimistic Linear Exponential Backoff (PLEB) algorithm. 
This algorithm based on assumption that the failure in 
transmission process is caused by the congestion in 
network. It is considered as a result of combination between 
linear and exponential increment methods. Using these two 
increment methods will help to achieve the aim of this 
algorithm in improving the performance of a MANET in 
terms of network throughput and average packet delay. By 
using the linear increment, this algorithm will improve the 
performance by reducing network delay. On the other hand, 
using the exponential increment will improve network 
throughput. 
Manaseer, et al.  [9,10] have proposed Fibonacci 
Increment Backoff (FIB) algorithm and Logarithmic (LOG) 
Backoff algorithm, respectively. The former algorithm uses 
a famous math series called  Fibonacci Series, which aims 
to reduce the differences between successive contention 
window sizes, this algorithm achieves a higher throughput 
when compared with (BEB) algorithm, the later algorithm 
uses Logarithmic increments in order to utilize the 
distribution of random numbers. It achieves a higher 
throughput and less packet loss. It also achieves stability of 
network throughput over various speeds of nodes. 
 
In [4], Haas and Deng have proposed the Sensing 
Backoff Algorithm (SBA) in order to utilize the network 
285
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

throughput and fairness issues. This algorithm based on 
sensing mechanism (overhearing the channel to get the 
needed information). So, each node changes its backoff 
interval based on the results of the sensed channel status.  
 
Deng, et al. [11] have proposed linear Multiplicative 
Increase Linear Decrease (LMILD) Backoff  algorithm; in 
this algorithm, the collided nodes mutiplicatively increase 
their contention windows, while other nodes overhearing 
the collision increase their contention window in linear way. 
Upon a success, all nodes decrease their contention 
windows in a linear way. 
 
 In [12], Exponential Increase Exponential Decrease 
(EIED) backoff algorithm was proposed to improve the 
performance of the IEEE 802.11 DCF. Upon a collision or 
Failure,  nodes exponentially increase their contention 
window and upon a success all nodes exponentially 
decrease their contention windows. This algorithm 
surpasses BEB in terms of throughput and delay. 
 
Choi, et al. [13] have proposed Predictive DCF (P-
DCF) Backoff algorithm to be used in IEEE 802.11 DCF. 
This algorithm enables nodes to choose their next backoff 
times by listening to the channel continuously. It reduces 
the collision probability and outperforms the BEB algorithm 
in terms of throughput and delay. 
 
100
150
200
250
300
350
Contention Window Size
 
Figure 1. Exponential and linear increase of CW in PLEB. 
 
 
Figure 1 shows the increment behavior of PLEB. In this 
paper, we study the impact of using different values of this 
exponential and linear increment. We also study the impact 
of having repeating this process in multiple phases.  
When the backoff mechanism is applied, the contention 
window size needs to be increased as a response to a failure 
or collision. As the first response to a failure, we study 
increasing the CW size in an exponential way. Increasing by 
using exponential will improve network throughput by 
producing enough length of backoff times, so the new 
Contention Window (CW) is calculated using the following 
formula: 
                   CWnew = CW * K                                          (1)        
 where K is an exponential increase factor. 
 
Then, after a number of exponential increments, we 
study the impact of linearly increases the CW in order to 
avoid the rapid growth of CW size that causes a high 
increase of the backoff value and thus results in reducing 
network delay, so the new contention window is changed 
using the following formula: 
                    CWnew = CW + T                                        (2) 
  where T is a linear increase factor. 
    
Upon a success in transmission, we want to decreases 
the CW in a linear way instead of resetting the CW to its 
minimum value as in BEB. We use a linear decrease 
mechanism to solve the fairness problem (avoid channel 
domination of only one node) due to that resetting 
mechanism in BEB takes only one successful transmission 
to reach CWmin which causes a huge variation of the 
contention window size and degrades the performance in 
heavy loaded network since each new packet starts with the 
minimum contention window value which is considered as a 
small value in heavy loaded network, so in our algorithm 
the new contention window is changed using the following 
formula: 
                   CWnew = CW – Y                                           (3) 
where Y is a linear decrease factor. 
 
As justified later in the following section, based on 
experimental results, we choose the value of Y to be 2.  
      
III. 
SIMULATION RESULTS AND ANALYSIS 
 
We use Glomosim (version 2.03) simulator [14, 15] to 
study the impact of different values in order to choose a 
suitable values and compare them with Pessimistic 
Linear/Exponential Backoff (PLEB) Algorithm.  
The network consists of 100 nodes randomly placed in 
a 2200m × 600m rectangular field. We use the Random 
Waypoint as the mobility model. Constant bit rate (CBR) 
with 512 byte data packets is used. The MAC layer protocol 
is 802.11.The main parameters used in the simulations are 
summarized in Table 1. 
 
TABLE 1: SIMULATION PARAMETERS 
Parameter 
Value 
Network area 
2200m × 600 m 
Transmission 
range 
250 m 
Number of nodes 
100 nodes 
Nodes speed 
1, 4, 10 m/s 
Pause time 
0 s 
Bandwidth 
2 MHz 
Traffic type 
CBR 
Packet rate 
4 
Packet size 
512 B 
Simulation time 
500 s 
286
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

 
       The metrics used to compare the performance are the 
following:  
1. Throughput: the total amount of data packets 
successfully received at the destination. 
2. Packet Delivery Ratio (PDR): the ratio of total 
amount of data packets received by the destination to the 
total amount of data packets sent by the CBR sources. 
3. Average End-to-End delay (EED): is the average 
delay taken for a data packet that is originated at the source 
to be received at the destination. All possible delays caused 
by buffering during route discovery latency, retransmission 
delays at the MAC, queuing at the interface queue and 
propagation delay are included.   
Many experiments are conducted to study the effect of 
our proposed algorithm in terms of throughput, packet 
delivery ratio and end to end delay in order to justify our 
selected values. Figures 2-4 show the impact of number of 
increments of linear and exponential on throughput, packet 
delivery ratio and end to end delay respectively with 
keeping the resetting mechanism as in BEB and PLEB.  
Experiment 1 to experiment 4 display 3 increments of 
exponential in the two phases within increase factors k and 
u equal 1.5  and varying the number of linear increments in 
phase 1 to 5, 10, 15, 20 respectively within increase factors  
t and v equal 5.  
Experiment 5 to experiment 8 display 2 increments of 
exponential in the two phases within increase factors k and 
u equal 1.5  and varying the number of linear increments in 
phase 1 to 5, 10, 15, 20 respectively within increase factors  
t and v equal 5. 
       Results show that experiment 1 has a better prformance 
in terms of throughput and packet delivery ratio as 
compared to PLEB with no improvement in delay metric. 
 
100000
102000
104000
106000
108000
110000
112000
114000
116000
118000
120000
0
2
4
6
8
10
12
Speed
T h ro u g h p u t(b it/s)
pleb
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
 
Figure 2. Impact of number of increments of linear and 
exponential on throughput for K= 1.5, T= 5, U= 1.5, V= 5. 
   
0.9
0.91
0.92
0.93
0.94
0.95
0.96
0.97
0.98
0
2
4
6
8
10
12
Speed
P a c k e t D e liv e ry  R a tio (% )
pleb
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
 
Figure 3. Impact of number of increments of linear and 
exponential on PDF for K= 1.5, T= 5, U= 1.5, V= 5. 
 
0
0.05
0.1
0.15
0.2
0.25
0.3
0
2
4
6
8
10
12
Speed
E n d  to  E n d  D e la y (s )
pleb
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
 
Figure 4 Impact of number of increments of linear and exponential 
on delay for K= 1.5, T= 5, U= 1.5, V= 5.    
 
Depending on the results of previous figures, another 
type of experiments were held related to experiment 1. 
Figure 5, Figure 6 and Figure 7 show the impact of number 
of increments of linear and exponential on throughput, 
packet delivery ratio and end to end delay respectively.  
Experiment 1 to experiment 3 display 3 increments of 
exponential with k=u=1.5 but varying the decrease process 
of CW upon successful transmission as exponentially 
decrease with y=1.5, resseting to CWmin and linearly 
decrease with y= 2 respectively. 
Experiment 4 to experiment 6 display 3 increments of 
exponential at phase 1 and 2 increments at phase 2 with 
k=u= 1.8  but varying the decrease process of CW  upon 
successful transmission as exponentially decrease with 
y=1.8 , resseting to CWmin and linearly decrease with y= 2 
respectively.  
Experiment 7 to experiment 9 display 3 increments of 
exponential at phase 1 and 1 increment at phase 2 with 
k=u= 2  but varying the decrease process of CW upon 
successful transmission as exponentially decrease with y=2 , 
resseting to CWmin and linearly decrease with y= 2 
respectively. 
 
287
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

110000
112000
114000
116000
118000
120000
122000
124000
126000
0
2
4
6
8
10
12
Speed
T h ro u g h p u t (b it/s)
PLEB
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
Experiment9
 
Figure 5. Impact of varying exponential increase factor and 
resetting mechanism of linear on throughput.   
  
0.93
0.94
0.95
0.96
0.97
0.98
0.99
1
0
2
4
6
8
10
12
Speed
P acket D e livery R atio (% )
pleb
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
Experiment9
 
Figure 6. Impact of varying exponential increase factor and 
resetting mechanism of linear on PDF.    
 
 
Results show that experiment 3 has a better prformance 
in terms of throughput and packet delivery ratio as 
compared to PLEB and the delay is approximately the same. 
 
Based on the results of the above figures, in this study  
our suitable thresholds are K= 1.5, T= 5, U= 1.5, V= 5, Y= 
2 as they offer better performance as compared to other 
possible values, based on these values W equal 69.75.  
 
0
0.05
0.1
0.15
0.2
0.25
0.3
0
2
4
6
8
10
12
Speed
E n d  to  E n d  D e la y (s )
PLEB
Experiment1
Experiment2
Experiment3
Experiment4
Experiment5
Experiment6
Experiment7
Experiment8
Experiment9
 
Figure 7. Impact of varying exponential increase factor and 
resetting mechanism of linear on delay. 
 
 
IV. 
CONCLUSION 
 
 
This research presented an experimental study of using 
different values in a backoff algorithm with different criteria 
(e.g., number of increments) to select suitable thresholds to 
be used in new algorithms and compared them with PLEB. 
The results show that when thresholds are K= 1.5, T= 5, U= 
1.5, V= 5, Y= 2 this will offer better performance as 
compared to other possible values in terms of throughput, 
packet delivery ratio and delay which is approximately the 
same compared to PLEB. 
  
REFERENCES 
[1] Nieminen, K., “Introduction to Ad Hoc Networking”, Networking 
Laboratory Helsinki University of Technology, pp. 1-10, 2003. 
[2] Chlamtac, I., Conti, M. and Liu, J., "Mobile ad hoc networking: 
imperatives and challenges", Science Direct, pp 13-64, 2003. 
[3] Wu, H. and Pan, Y.,  “Medium Access Control in Wireless Networks 
(Wireless Networks and Mobile Computing)”, Nova Science Publishers, 
2008.  
[4]  Deng, J. and Hass, Z.J., “On Optimizing the Backoff Interval for 
Random Access Schemes” IEEE Transactions on Communications, 
volume 51, issue 12, pp. 2081- 2090, 2003. 
[5] Krishna, C., Chakrabarti, S. and Datta, D., “Impact of Contention 
Resolution Algorithms on the Performance of IEEE 802.11 DCF-based 
MAC Protocol in a Mobile Ad hoc Network”, pp. 1-4, 2005. 
[6]  Krishna, C., Chakrabarti, S., Datta, D., "A modified backoff algorithm 
for IEEE 802.11 DCF-Based MAC protocol in a mobile ad hoc network", 
IEEE, pp. 664- 667, 2004. 
 [7] Bharghavan, V., Demers, A., Shenker, S. and Zhang, L., “MACAW: A 
media access protocol for wireless LAN’s”, Proceedings of the ACM 
SIGCOMM, London, pp. 212-225, 1994. 
[8] Manaseer, S. and Masadeh, M., “Pessimistic Backoff for Mobile Ad 
hoc Networks ", IEEE, pp 1-10, 2008.  
[9]  Manaseer, S., Ould-Khaoua, M. and Mackenzie, L.,”Fibonacci Backoff 
Algorithm for Mobile Ad Hoc Networks ”, University of Glasgow, pp. 1-6, 
2006. 
[10]  Manaseer, S., Ould-Khaoua, M. and Mackenzie, L.,” On a Modified 
Backoff Algorithm for MAC Protocol in MANETs”, University of 
Glasgow, pp. 1-13, 2007. 
[11] Deng, J., Varshney, P., and Haas, Z., “A new backoff algorithm for 
the IEEE 802.11 distributed coordination function” , In Communication 
Networks and Distributed Systems Modeling and Simulation (CNDS '04), 
pp. 1-6, 2004.  
[12] Song, N.O., Kwak, B.J., Song, J., and Miller, L.,”Enhancement of 
IEEE 802.11 distributed coordination function with exponential increase 
exponential decrease backoff algorithm”, in Proc. VTC 2003-Spring, vol. 
4, Jeju, Korea, pp. 2775-2778, 2003. 
         [13] Choi, N., Seok, Y., Choi, Y., Kim, S. and Jung, H.,“P-DCF: Enhanced 
Backoff Scheme for the IEEE 802.11 DCF”, pp. 1-4, 2005.  
        [14] Zeng, X., Bagrodia, R. and Gerla, M., "Glomosim: A library for 
parallel simulation of large-scale wireless networks". In Proceedings of the 
12th Workshop on Parallel and Distributed Simulation, 26.29, pp. 154-161. 
[15] GloMoSim: Global Mobile Information Systems Simulation Library. 
http://pcl.cs.ucla.edu/projects/glomosim/.  
 
288
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

