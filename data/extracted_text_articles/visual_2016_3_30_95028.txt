Enhanced Hash-based Intra Block Copy for HEVC Screen Content Coding using 
Sucessive Elimination Algorithm 
 
Ilseung Kim 
Department of Electronics and Computer Engineering 
Hanyang University 
Seoul, Korea 
e-mail: ghanjang@gmail.com 
Jechang Jeong 
Department of Electronics and Computer Engineering 
Hanyang University 
Seoul, Korea 
e-mail: jjeong@hanyang.ac.kr 
 
 
Abstract—An efficient algorithm is proposed not only to reduce 
the computation cost of the hash-based intra block copy (IBC), 
but also to achieve the Bjontegaard delta bit rate (BDBR) gain 
for High Efficiency Video Coding standard (HEVC) screen 
content coding(SCC). Recently, the HEVC Screen Content 
Coding Draft 6 was published including several new tools. 
Among those, hash-based intra block copy shows the high 
coding gain but it has a massive computational complexity 
even though it is adopted as a fast algorithm for global block 
search for IBC mode. The proposed algorithm suggests the 
effective way to calculate the lower bound for rate-distortion 
(RD) cost when performing the hash-based IBC process and to 
eliminate the impossible candidates earlier. Experimental 
results show that about 50% on the average and up to 86.80% 
of the search points can be early terminated as well as 0.21% 
on the average BDBR saving can be achieved compared to 
HM-16.8+SCM-6.1. 
Keywords; HEVC; Screen content coding(scc); Intra Block 
copy(IBC); Hash. 
I. 
 INTRODUCTION  
High Efficiency Video Coding standard (HEVC) [1] is 
the most recent international video coding standard jointly 
developed by Joint Collaborative Team on Video Coding 
(JCT-VC) and it was finalized in January 2013. HEVC is 
able to achieve around 50% bit-rate reduction under the 
equivalent subjective visual quality circumstances, compared 
with H.264/MPEG-4 AVC standard [2][3]. 
Recently, on the other hand, there has been a 
proliferation of applications which utilize the computer 
generated contents, such as wireless display, remote desktop, 
external display interfacing, and cloud computing, etc. [4]. 
However, the type of video content used in these applications 
has different characteristics compared with that of the 
camera-captured content, such as containing no sensor noise, 
having large uniformly flat areas, repeated patterns, and a 
limited number of different colors and so on.  
Even though there are several sequences that contain 
screen contents in the common test sequences, such as Class 
F, HEVC may not be efficient for the sequences whose 
characteristics are different from the camera-captured natural 
video contents because it was developed with a main focus 
on dealing with camera-captured natural video contents. 
Accordingly, there have been requirements for coding of 
screen content. In order to reflect these requirements, the 
MPEG Requirements subgroup published a set of 
requirements for an extension of HEVC for coding of screen 
content in January 2014 [4] and currently the HEVC Screen 
Content Coding (SCC) Draft 6 was published in February 
2016 [5][6]. 
In HEVC-SCC, 4 major techniques/tools have been 
introduced: Palette mode, Adaptive colour transform (ACT), 
Adaptive motion vector resolution, and Intra block copy 
(IBC). Palette mode utilizes the observation that a number of 
different colour value frequently exist for screen content. A 
lot of HEVC-SCC test materials consist of RGB colour 
format or YCbCr 4:4:4 format, whose inter-colour 
component correlation is very high. In order to remove inter-
colour component redundancy, ACT has been introduced in 
SCC. Unlike camera captured content, there is no need to use 
fractional motion compensation for much screen content. For 
this reason, adaptive motion vector has adopted in SCC. 
There are a lot of repeated patterns such as characters in 
screen content, so the motion estimation and compensation 
within the current picture can be effective. IBC is the 
technique that conducts the motion estimation and 
compensation within the current picture as shown in Fig. 1. 
In HEVC-SCC Draft 6, there are two kinds of block 
vector search method for IBC: local search mode and global 
search mode and hash-based block vector search technique 
has been adopted for global search mode. This paper 
provides an overview of technical issues of IBC and presents 
a tool for improving IBC, especially hash-based block vector 
search.  
 
 
Figure 1.  An example of IBC from sc_map video sequence 
50
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-520-3
VISUAL 2016 : The First International Conference on Applications and Systems of Visual Paradigms

This paper is organized as follows: Section II describes a 
technical features of IBC as a conventional algorithm. 
Section III presents the proposed algorithm. Section IV 
discusses the experiment results and the conclusion is set 
forth in Section V. 
 
II. 
INTRA BLOCK COPY (IBC) IN HEVC-SCC DRAFT 6 
Basically, IBC is the technique that conducts the motion 
estimation (ME) and compensation within the current picture. 
Block matching is performed in order to find the optimal 
block vector and to calculate the lowest rate-distortion (RD) 
cost like ME but within a current picture. On the other hand, 
there are two kinds of IBC modes in SCC: local block vector 
search and global block vector search for IBC mode. In SCC, 
a local area search is performed first and a global search is 
followed. Comparing RD cost from both search, choose the 
block vector with the minimum RD cost.  
 
A. Local block vector search for IBC mode 
In this step, there are two steps find the optimal block 
vectors (BVs). First, find the four best BVs according to their 
RD cost, where  
_ cos
luma
bits
RD
t
SAD
BV






within 2 CTU for the local search as depicted in Fig. 2 
where
BVbits
 is the number of bits needed to signal the BV. In 
this step, only the SAD of the luma component is used. For 
the chosen four best BVs, additional RD cost is calculated as  
_cos
luma
chroma
bits
RD
t
SAD
SAD
BV







, in order to find the locally optimal block vector 
local
BVopt
. 
The RD cost corresponding to 
local
BVopt
is denoted by 
_cos local
opt
RD
t
. 
B. Global block vector search for IBC mode 
Global block vector search is conducted for 8x8 and 
16x16 blocks. As shown in Fig. 3, the entire reconstructed 
current picture before loop filtering is the global search 
prediction area. For 16x16 blocks, a one-dimensional search 
is performed over the entire reconstructed current picture, as 
shown in Fig. 4. For the horizontal search, block matching is 
performed only in the horizontal direction that means vertical 
components of BVs are zero with the same height of the 
current block and the vertical search is performed in the 
same manner.  
For 8x8 PUs, a hash-based full picture search is used to 
search the optimal BV. The 16-bit hash entries for the 
current block and the reference block are calculated using the 
original sample values. Let Grad denote the gradient of the 
8x8 block and let dc0, dc1, dc2, and dc3 denote the DC 
values of the four 4x4 sub-blocks of the 8x8 block. Then, the 
16-bit hash entry H is calculated as: 
(
0,3)
13
(
1,3)
10
        
(
2,3)
7 
(
2,3)
4 
        
(
,4),
H
MSB dc
MSB dc
MSB dc
MSB dc
MSB Grad








 

where MSB(X,n) represents the n most significant bits of X.  
The procedure of hash-based IBC is as follows: First, the 
hash-value of the current PU is calculated. Search the blocks 
which have the same hash value with the current PU in the 
pre-calculated hash list. Then, the blocks that have the same 
hash value with that of the current block perform the RD cost 
and choose the eight best BVs according to (1). For the 
chosen eight best BVs, additional RD cost is calculated using 
(2) in order to find the 
global
BVopt
. 
 
 
Figure 2.  Local block vector search prediction area 
 
Figure 3.  Global block vector search prediction area 
 
 
Figure 4.  A one-dimensional search prediction area for 16x16 blocks 
51
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-520-3
VISUAL 2016 : The First International Conference on Applications and Systems of Visual Paradigms

 
Figure 5.  IBC prediction area 
 
C. Fast block vector search for IBC mode 
If the residual of inter prediction is not zero, some fast 
search and early termination methods are employed, between 
evaluating the RD cost of inter mode and intra mode. It is 
applied only to 2Nx2N partition of various CU sizes. If the 
residue of fast IBC search is not zero, then regular intra 
mode will be performed as described in Sections A and B. 
The SAD-based RD costs of using a set of BV predictors 
are calculated in the fast search. As shown in Fig. 5, the set 
includes the five spatial neighboring BV as used in inter 
merge mode and the last two coded BVs. In addition, the 
derived BVs of the block pointed to by each of the 
aforementioned BV predictors are also included.  
 
III. 
PROPOSED ALGORITHM 
Hash-based IBC mode for the 8x8 PU has a critical role 
in SCC. Compared with SCC without hash-based IBC, up to 
75% Bjøntegaard Distortion bitrate (BD-BR) gain can be 
achieved. On the other hand, even though the main purpose 
of using hash-based search is to speed up the full picture 
search, it has a massive computation burden when there are a 
number of blocks in the hash list. For example, over 70 
thousand times RD cost calculations are performed on the 
average 
for 
8x8 
PU, 
when 
we 
encode 
“sc_wordEditing_1280x720_8bit_444” sequence under the 
intra_main_SCC condition. In order to alleviate this, we 
apply the concept of the successive elimination algorithm 
(SEA) [7] for the 8x8 PUs which are used for hash-based 
search.  
The derivation of the SEA starts from the following basic 
triangular inequalities, 
( , )
(
,
)
( , )
(
,
)
 ,
(
,
)
( , )
( , )
(
,
)
c
r
c
r
r
c
c
r
f i j
f i
x j
y
f i j
f i
x j
y
f i
x j
y
f i j
f i j
f i
x j
y



















where 
( , )
cf i j and 
( , )
rf i j denote the intensity of the pixel 
with coordinate  ( , )
i j in the current picture and the reference 
picture, ( , )
x y
represents the displacement of the BVs, 
respectively.  
By using (4), it can be easily shown that the following 
relation holds: 
,
0
,
0
*
*
*
*
,
0
( , )
(
,
)
           
( , )
(
,
)
(
, 
),
N
N
c
r
i j
i j
N
c
r
i j
f i j
f i
x j
y
f i j
f i
x
j
y
SAD x
y
















where 
*
*
(
,
)
x
y
denotes the displacement of the optimal BV. 
This means that the difference of the sum norms of the 
current block and the reference block cannot exceed the SAD 
value of the search point, so we can distinguish the 
impossible candidate using the sum norms and SAD value. 
In this case,   
*
*
(
, 
)
SAD x
y
 and 
*
*
(
,
)
x
y
 can be updated by 
( , )
SAD x y  and ( , )
x y , respectively, if 
( , )
SAD x y   is less than 
*
*
(
, 
)
SAD x
y
. Also, applying (5) into (1), then it can be easily 
demonstrated the following inequality: 
,
0
,
0
min
( , )
(
,
)
                               
_ cos
.
N
N
c
r
bits
i j
i j
f i j
f i
x j
y
BV
RD
t













Note that all the procedure of the proposed algorithm is 
applied when the hash value is matched. The procedure of 
the proposed algorithm is as follows: Calculate the 
  BVbits
 
first and then check (6) with the sum norms and the value of 
RD_cos min
t
. If the condition does not hold, discard the 
search point and move on to next search point. Once the 
search point is skipped, that point cannot be included as a 
candidate set aforementioned in Section II. C. 
Note that the sum norm for each block has been already 
calculated when calculating the 16-bit hash entry H in (3). In 
other words, there is no additional computation to get the 
sum norms of the current block and reference blocks. 
 
IV. 
EXPERIMENT RESULTS 
In order to demonstrate the coding efficiency of the 
proposed algorithm, we simulated five sequences in the 
common test conditions (CTC) used during the development 
of HEVC-SCC [8] and a sequence from the HEVC CTC in 
Class F as listed in Table I under the intra_main_scc 
configuration condition. HM-16.8+SCM-6.1 was modified to 
include the proposed algorithm. 22, 27, 32, and 37 are set for 
QPs.   
TABLE I.  
TEST SEQUENCES 
Resolution 
Sequence name 
YCbCr 
color 
format 
1920x1080 
sc_desktop_1920x1080_60_8bit 
4:4:4 
1920x1080 
MissionControlClip3_1920x1080_60_8b444 
4:4:4 
1280x720 
sc_web_browsing_1280x720_30_8bit 
4:4:4 
1280x720 
sc_map_1280x720_30_8bit 
4:4:4 
1280x720 
sc_wordEditing_1280x720_30_8bit 
4:4:4 
1280x720 
slideEditing_1280x720_30 
4:2:0 
52
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-520-3
VISUAL 2016 : The First International Conference on Applications and Systems of Visual Paradigms

TABLE II.  
PERFORMANCE COMPARISON BETWEEN HM-16.8 AND 
HM-16.8+SCM-6.1. 
Sequence name 
BD-BR (%) 
sc_desktop_1920x1080_60_8bit 
-84.01 
MissionControlClip3_1920x1080_60_8b444 
-28.24 
sc_web_browsing_1280x720_30_8bit 
-51.32 
sc_map_1280x720_30_8bit 
-80.88 
sc_wordEditing_1280x720_30_8bit 
-68.54 
slideEditing_1280x720_30 
-48.50 
Average 
-60.25 
 
TABLE III.  
PERFORMANCE COMPARISON WITH VERSUS WITHOUT 
HASH-BASED IBC FOR HM-16.8+SCM-6.1. 
Sequence name 
BD-BR (%) 
sc_desktop_1920x1080_60_8bit 
-75.56 
MissionControlClip3_1920x1080_60_8b444 
-4.12 
sc_web_browsing_1280x720_30_8bit 
-27.00 
sc_map_1280x720_30_8bit 
-67.90 
sc_wordEditing_1280x720_30_8bit 
-54.19 
slideEditing_1280x720_30 
-21.54 
Average 
-41.72 
 
TABLE IV.  
PERFORMANCE COMPARISON BETWEEN HM-16.8+SCM-
6.1 AND THE PROPOSED ALGORITHM. 
Sequence name 
BD-BR (%) 
sc_desktop_1920x1080_60_8bit 
-0.62 
MissionControlClip3_1920x1080_60_8b444 
0.00 
sc_web_browsing_1280x720_30_8bit 
-0.13 
sc_map_1280x720_30_8bit 
-0.26 
sc_wordEditing_1280x720_30_8bit 
-0.22 
slideEditing_1280x720_30 
0.00 
Average 
-0.21 
 
TABLE V.  
EARLY TERMINATION RATIO COMPARED TO HM-
16.8+SCM-6.1 (%) 
Sequence name 
Ratio (%) 
sc_desktop_1920x1080_60_8bit 
57.25 
MissionControlClip3_1920x1080_60_8b444 
26.40 
sc_web_browsing_1280x720_30_8bit 
86.80 
sc_map_1280x720_30_8bit 
42.55 
sc_wordEditing_1280x720_30_8bit 
45.50 
slideEditing_1280x720_30 
35.43 
Average 
48.99 
 
 
Table II shows the bit-rate savings SCC tools over HM-
16.8 for intra main configuration. Note that negative number 
indicates the BD-BR saving. BD-BR savings in the range of 
28.24% to 84.01% and 60.25% on the average can be 
observed.  
Aforementioned in Section III, hash-based global IBC 
search has an important role in SCC as shown in Table III. 
Except some sequences like “MissionControlClip3”, BDBR 
saving rate is quite high; about 40% BDBR saving can be 
observed. 
Table IV shows the performance comparison between 
HM-16.8+SCM-6.1 and the proposed algorithm. Even 
though we proposed a kind of an early termination methods 
over hash-based IBC, we can achieve the BDBR saving up to 
0.62% and 0.21% on the average. The interesting point is 
that the sequences which have the higher coding gain by 
using hash-based IBC also have the higher coding gain for 
the proposed algorithm. We can obtain the coding gain by 
eliminating the impossible search points that may be a bad 
influence on BV predictors from as a candidate set 
aforementioned in Section II. C. 
It is demonstrated that the impossible search point can be 
effectively removed by checking (6) as shown in Table V. 
The impossible candidates are removed up to 86.80% and 
about 50% on the average.  
 
V. 
CONCLUSION 
In this paper, enhanced hash-based intra block copy 
algorithm using successive elimination algorithm is proposed, 
after analyzing the conventional IBC technique in HEVC 
SCC Draft 6, especially hash-based IBC. The proposed 
algorithm suggests the efficient way to calculate the lower 
bound for RD cost when performing the hash-based IBC 
process and to eliminate the impossible candidates earlier. 
Experimental results show that about 50% on the average 
and up to 86.80% of the search points can be early 
terminated as well as 0.21% on the average BDBR saving 
can be achieved compared to HM-16.8+SCM-6.1. 
 
ACKNOWLEDGMENT 
“This research was supported by Basic Science Research 
Program through the National Research Foundation of 
Korea(NRF) funded by the Ministry of Science, ICT and 
future Planning(NRF-2015R1A2A2A01006004)“ 
 
REFERENCES 
 
[1] G. J. Sullivan, J. Ohm, W.-J. Han, and T. Wiegand, “Overview of the 
High Efficiency Video Coding (HEVC) Standard,” IEEE Trans. 
Circuits Syst. Video Technol., vol. 22, no. 12, pp. 1649-1668, Dec. 
2012 
[2] J. Ohm, G. J. Sullivan, H. Schwarz, T. Tan, and T. Wiegand ” 
Comparison of the coding efficiency of video coding standards – 
including High Efficiency Video Coding (HEVC),” IEEE Trans. 
Circuits Syst. Video Technol., vol. 22, no. 12, pp. 1669–1684, Dec. 
2012. 
[3] Advanced Video Coding for Generic Audiovisual Services, ITU-T 
and ISO/IEC JTC1, document ITU-T Rec. H.264 and ISO/IEC 
14496-10, May 2003.  
[4] H. Yu, K. McCann, R. Cohen, and P. Amon, Requirements for an 
Extension of HEVC for Coding of Screen Content, ISO/IEC JTC 
53
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-520-3
VISUAL 2016 : The First International Conference on Applications and Systems of Visual Paradigms

1/SC 29/WG 11, document MPEG2014/N14174, San Jose, CA, USA, 
Jan. 2014. 
[5] R. Joshi. et. al., “HEVC Screen Content Coding Draft Text 6,” 23rd 
JCT-VC meeting, San Diego, U.S. document JCTVC-W1005, Feb. 
2016. 
[6] R. Joshi, J. Xu, R. Cohen, S. Liu, and Y. Ye, “Screen content coding 
test model 6 (SCM 6),” 22nd JCT-VC meeting, Geneva, Switzerland, 
document JCTVC-V1014, Oct. 2015. 
[7] W. Li and E. Salari, “Successive elimination algorithm for motion 
estimation,” IEEE Trans. Image Process., vol. 8, pp. 105-107, Jan. 
1995.  
[8] H. Yu, R. Cohen, K. Rapaka, and J. Xu, “ Common test coditions for 
screen content coding,” 20th JCT-VC meeting, Geneva, Switzerland, 
document JCT-VC-T1005, Feb. 2015. 
54
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-520-3
VISUAL 2016 : The First International Conference on Applications and Systems of Visual Paradigms

