Webcasting From Challenging Locations  
 
 
Ronald Marsh  
Computer Science Department  
University of North Dakota  
Grand Forks, ND, USA 
rmarsh@cs.und.edu 
Timothy Young  
Department of Physics and Astrophysics 
University of North Dakota  
Grand Forks, ND, USA 
tim_young@und.nodak.edu
 
 
Abstract—This paper will discuss the issues associated with 
webcasting from remote and challenging locations using open 
source software. Issues discussed will include the pros and cons 
of point-to-point versus multicasting, the use of commercial 
software versus open source, website design criteria, and some 
of the technical issues (network bandwidth requirements, chat 
room and webpage configuration). The authors have 
experience in setting up and conducting webcasts of 
astronomical events which have been broadcast from nine 
different countries as part of the Sun Earth Moon system 
(SEMs) project - a public outreach and informal learning 
project developed at the University of North Dakota (UND). 
The system developed is also being used to evaluate an 
unmanned aircraft system in support of Defense Support of 
Civil Authorities. 
 
Keywords-webcast; solar and lunar eclipses; social media. 
I. 
 INTRODUCTION 
The scientific community has long been concerned with 
the gap between advances in natural sciences, particularly in 
physics and astronomy, and the level of public awareness 
and involvement [1-3]. Additionally, if young generations 
do not acquire knowledge of basic scientific concepts, the 
knowledge gap will continue to widen. Contrary, if young 
people are equipped with the underlying scientific 
principles, it is easier for them to stay connected with the 
growth of scientific knowledge throughout their lives [4]. 
Therefore, scientists should not only focus on research but 
also on bridging the gap between science and the public by 
means of informal science education [5-8]. Hence, the 
scientific community is currently looking for innovative 
ways of encouraging informal science learning [9].  
Sun Earth Moon system (SEMs) [10] is a public 
outreach project conceived by the authors to bring live 
coverage of rare astronomical events to the public using the 
Internet as a way to encourage informal science learning 
[11]. 
Scientists 
determine 
beforehand 
from 
what 
geographical location these celestial events can be best 
observed; then a UND team travels to the location, sets up 
equipment, and shares the event with SEMs visitors in real 
time. 
SEMs webcasts began with the June 8, 2004 Venus 
transit that was webcast from Delhi, India. The webcast was 
very successful with 37,000 visitors to the website occurring 
during the six hour webcast. This was encouraging as 
webcasting was still in its early development stage with an 
adoption rate of only 7% [12]. The second SEMs webcast 
was the October 28, 2004 lunar eclipse that was webcast 
from Grand Forks. Unfortunately, it was cloudy. However, 
the website had over 159,000 visitors in just two hours; 
which increased the load on the server to the point where the 
system administrator could not login to place a notice on the 
website that it was cloudy and that there would be no 
webcast! It was quickly realized that if the team planned to 
continue webcasting astronomical events that a better 
understanding of webcasting methodologies, the current 
server and software environment, and usage patterns would 
have to be developed.  
For the first two webcasts, accounts and disk space on 
the UND School of Medicine’s MacroMedia Breeze server 
were obtained. While this software is very capable and easy 
to use, it limits the number of concurrent viewers (as 
determined by the site license). Given the problems 
encountered with the October 28, 2004 lunar eclipse 
webcast, alternative webcast techniques / packages were 
explored. 
The SEMs webcasts have some unique requirements 
which drove our decision making process. First and 
foremost is the tremendous number of visitors that can be 
expected over a short time period coupled with finite 
network bandwidth. The second is that the team must be 
able to broadcast from remote locations – locations were 
one must make do with whatever Internet connection can be 
obtained and with whatever equipment can be brought (due 
to weight and customs restrictions). Therefore, it is 
mandatory to be able to send a single stream from our 
remote site to a server located at UND and have that server 
provide the multitude of public streams. The third is that it 
is the goal of the SEMs project to give viewers the feeling 
of being there and to instill the excitement of being part of a 
global community witnessing a rare event. The fourth is to 
have the ability to record and store for playback (at the 
viewer’s convenience) the video and audio. As a result, 
experiments with the use of the media to make the event as 
life-like as possible for the viewers have been continuously 
conducted. Unlike the other eclipse webcasts, the SEMs 
webcasts use streaming color video, audio and have a chat 
room. It was discovered that having viewers post questions 
1
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

on the chat room and our answering via audio was very 
popular. However, such amenities require bandwidth and 
flexible software/systems. 
The remainder of this paper will review the techniques 
and software that are available and provide a discussion of 
the techniques/software that have been adopted and 
developed. 
 
II. 
BACKGROUND 
Webcasting refers to the delivery of audio and video 
content over the web [13]. Ha and Ganahl [14] point out that 
“there are many different applications of webcasting in both 
the nonprofit and the commercial sector” where the web is 
used as a delivery medium, such as informational, 
instructional, marketing, and entertainment. Webcasting 
options can be broken down into two categories: the 
network protocol and the software used [15, 16]. The 
network protocol options can be further divided into two 
sub-categories:  
1) Point-to-point: This is the most common protocol 
used by commercial webcast systems as it gives the 
software a mechanism to track/limit the number of viewers. 
Furthermore, point-to-point commonly uses HTTP port 80 
which is rarely blocked by Internet Service Providers (ISPs). 
Unfortunately, every viewer creates/requires a separate and 
redundant connection to the server. Therefore, the number 
of viewers possible is also limited by the server site’s 
bandwidth.  
2) Multicast: With multicast a single stream is 
broadcast by the server and is replicated by all network 
routers encountered and therefore sent to everyone on the 
network (whether they want it or not). As a result, multicast 
consumes a massive amount of network bandwidth and 
therefore, many ISPs block all multicast signals. Thus, 
multicast is akin to AM/FM radio where anyone knowing 
the channel can tune in, thus multicast is not commonly 
supported by commercial webcast systems. Finally, to 
webcast over multicast, one needs a multicast address [17], 
and one must set the time-to-live on the packets such that 
the appropriate number of routers is crossed to reach the 
desired audience. 
The software options can also be divided into two sub-
categories: 
1) Commercial 
Software: 
Commercial 
packages 
typically 
provide 
support 
for 
many 
cameras 
and 
microphones and provide useful features such as chat 
rooms, the ability to show presentation slides, have remote 
feed capability and have web browser interfaces. The 
drawbacks to using commercial packages include the price, 
the lack of support of multicast, license restrictions limiting 
the number of viewers, and the need to install web browser 
plug-ins. 
2) Open source: Open source packages range widely 
in capability and few support chat rooms, the ability to show 
presentation slides, or remote feeds. We have also found 
camera and microphone support spotty in these packages. 
However, free packages have no license restrictions and 
more likely to support multicast. 
One can also consider a push or pull strategy. The “pull” 
strategy requires the receiver to initiate a message transfer 
by explicitly contacting the sender; therefore, a website 
using the “pull” model only allows users to retrieve 
information. In the “push” model, the sender knows the 
identity of the receiver in advance and pushes messages in 
an asynchronous manner to the receiver [18, 19]. For the 
purposes of creating the utmost, life-like experience of 
being part of a global community witnessing a rare 
astronomical event, the “pull” strategy was found to be most 
effective. In addition, the nature of the webcasts and 
network bandwidth has limited our ability to support the 
“push” model.  
 
III. 
UND/SEMS WEBCAST SYSTEM  
Given our requirements and limited funding, we were 
fortunate to realize that we could develop a system that 
would meet our needs using open source software. Hence, 
the UND/SEMs webcast system relies heavily on open 
source software. The chat room and website are hosted on a 
Linux server running the High Performance Internet Relay 
Chat software [20] and the Apache web server [21]. The 
multimedia (audio and video) streams are served by three 
Windows XP servers each running the VLC media player 
[22]. All servers are located at UND. A webcam connected 
to a laptop computer is used to capture and forward the 
multimedia stream from the remote site to one of the VLC 
servers using a User Datagram Protocol (UDP) connection. 
Two copies of the VLC media player (version 8.6i) are 
executed on the laptop computer. The first is used to acquire 
the multimedia data from connected devices (webcam, 
microphone, etc.), to make a high quality recording on the 
laptop, and to stream the multimedia data to the loopback 
network connection (127.0.0.1). The second receives the 
multimedia data from the loopback network connection, 
transcodes the multimedia stream to reduce its bandwidth, 
and streams the transcoded multimedia data to UND using 
the UDP connection. At UND, the multimedia stream is 
received by the first VLC server which provides two 
multimedia streams, a webcast/HTTP stream and a 
multicast/UDP stream (the North Dakota Higher Education 
Computer Network possesses a block of multicast 
addresses). Both of these multimedia streams use the same 
codec as was employed by the laptop. The second VLC 
server receives the multicast stream and transcodes it 
producing a Microsoft MediaPlayer compatible webcast 
multimedia stream. The third VLC server receives the 
multicast stream and transcodes it producing a MPEG4 Real 
Time Streaming Protocol (RTSP) multimedia stream 
compatible with many mobile devices (e.g., smartphones). 
Experience has shown that when serving N unique (different 
codecs) video streams it is best to use N unique IP addresses 
2
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

on N unique servers for stability. Hence, two video streams 
require two servers, each sending a uniquely encoded 
stream. Even a dual processor server with dual network 
interface cards has proven to be unstable when used for this 
purpose. However, multiple streams using the same codec 
has proven to be stable when served from a single computer 
with multiple network interfaces. Figure 1 depicts the 
webcasting system. 
 
 
 
Figure 1. UND/SEMS webcast system 
 
Fortunately, VLC can be easily configured (via 
command line options or a startup script) to allow mirror 
sites. Thus, in order to reduce bandwidth requirements at 
UND, a mirroring scheme has been employed. To date, the 
SEMs webcasts have been mirrored by Pennsylvania State 
University (main campus at University Park, and Wilkes-
Barre campus), High Performance Computing Research 
Department at Lawrence Berkley National Laboratory, and 
Williston North Dakota School District in the United States; 
Universidad de Sonora in Mexico; and the University of 
Barcelona in Spain.  
Unfortunately, VLC does not provide support for a chat 
room, presentation slides, has relatively poor web browser 
support, spotty camera and microphone support and requires 
unique web browser plug-ins. However, due to its 
popularity, a lot of people not associated with the VLC 
project have developed components to extend its capability. 
For example, JavaScript applications have been written that 
allow VLC streams to be viewed on a web browser (IE and 
FireFox).  
To support social interaction [23, 24] and solicit 
feedback within an open environment like SEMs, the site 
integrates an online chat room supported by open source 
JavaScript code. The integration of a chat room provides 
visitors with an opportunity to become engaged in 
discussions with UND scientists and fellow viewers at a 
time of an event. The inclusion of a real-time discussion 
turned out to be very popular. Therefore, with a little 
development, the SEMs team was able to create a website 
with nearly the same look and feel as a commercial package, 
but that provided the non-commercial features required.  
The presence of the blog is another important factor for a 
website’s success. Originally, the SEMs project weblog 
consisted of postings of daily activities, trials and 
tribulations of fieldwork, links to local Internet-radio 
stations and webcams, as well as information about local 
cultures. The current site design allows readers to comment 
3
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

on the project blog. The commenting feature was 
implemented during the August 1, 2008 total solar eclipse 
webcast that was broadcasted from Xi’an, China. According 
to Du and Wagner [25], factors that determine the success of 
a blog include content, the technology used to support the 
blog, and its social value. The content is the information 
(written or media) provided. The technology used to support 
the weblog should be interactive and should be able to 
present and organize content facilitating social interaction 
among bloggers [26]. Research has also shown that users 
prefer blogs that are commented on by other visitors and 
support social interaction [27, 28].  
Once you have arrived and successfully “setup shop” 
you have to determine how much bandwidth you have. Or 
more importantly, what is the bandwidth back to the server. 
While local bandwidth may be very high, there may be a 
low bandwidth link somewhere between you and your 
servers. One tool that has proven useful is Speedtest.net 
(www.speedtest.net) and/or other similar sites (as long as 
they have a server near your servers).  However, the only 
reliable way to verify what bandwidth you have is to test the 
stream and to adjust the video and audio data rates (VLC 
provides this capability) to obtain the best quality of service 
possible. It helps to have someone monitoring the stream 
from a location at or near the server and to have them 
communicate to you regarding the stream quality (the chat 
room works nicely for this). Unfortunately, there is no 
obvious formula for determining the best combination of 
codecs, frame rates, and bit rates. Given the many variables, 
trial and error is the only real solution. 
 
IV. 
SCRIPTS 
We have developed a set of scripts that allow our system 
to be used by others, those scripts are listed below: 
A. Laptop VLC Script #1 
This MS Windows 7 script starts VLC instructing it to 
accept connect to a Vimicro USB PC Camera and the 
default audio device. The script then sets the video size to 
320x240 with a frame rate of 6 frames per second. The 
script then transcodes the stream into a mpeg4 (video and 
audio) stream, sets the bit rates, duplicates the stream for 
local display, for local storage (filename: “test.mp4”), and 
broadcasts the stream over the loopback network connection 
(http port 80). 
 
C:\Progra~2\VideoLAN\VLC\vlc.exe -vvv dshow:// 
:dshow-vdev="Vimicro USB PC Camera (ZC0301PL)"  
:dshow-adev="" :dshow-size="320x240" :dshow-
caching=200  :dshow-fps=6.000000 :sout=#transcode 
{vcodec=mp4v,vb=3072,scale=1,acodec=mp4a,ab=192,
channels=2}:duplicate{dst=display,dst=std 
{access=file,mux=mp4,dst="C:\Users\rmarsh\Desktop\te
st.mp4"},dst=std{access=http,mux=ts,dst=127.0.0.1:80}
} 
B. Laptop VLC Script #2 
This MS Windows 7 script starts VLC instructing it to 
accept the stream on the loopback network connection and 
to transcode the stream into a reduced bit rate DivX3 
stream. The stream is then displayed locally and forwards it 
via UDP to UND VLC server #1 (bbbb.cs.und.edu). 
 
C:\Progra~2\VideoLAN\VLC\vlc.exe -vvv 
http://127.0.0.1:80 :sout=#transcode{vcodec=DIV3, 
vb=256,scale=1,acodec=mp3,ab=192,channels=2} 
:duplicate{dst=display,dst=std{access=udp,mux=ts, 
dst=bbbb.cs.und.edu:1235}} 
C. UND VLC Server #1 script 
This MS Windows XP script terminates any running 
version of VLC (taskkill) and restarts VLC instructing it to 
accept a UDP stream addressed to it on port 1235 and to 
rebroadcast it over multicast (UDP) on IP xxx.xxx.xxx.xxx 
port 1234 and over http on IP/host name bbbb.cs.und.edu 
port 80 with a time-to-live of 200. Note that the host name 
of this machine would be bbbb.cs.und.edu. 
 
taskkill /f /im vlc.* 
 
C:\Progra~1\VideoLAN\VLC\vlc.exe 
-vvv 
udp://@:1235 
:sout=#duplicate{dst=std{access=udp,mux=ts,dst=xxx. 
xxx.xxx.xxx:1234},dst=std{access=http,mux=ts,dst=bbb
b.cs.und.edu:80}} --ttl 200 
D. UND VLC Server #2 script 
This MS Windows XP script terminates any running 
version of VLC (taskkill) and restarts VLC instructing it to 
accept the multicast (UDP) stream produced by server #1 on 
port 1234 and to transcode and rebroadcast it over mmsh 
(media player) on IP/host name cccc.cs.und.edu port 80 with 
a time-to-live of 200. Note that the host name of this 
machine would be cccc.cs.und.edu. 
 
taskkill /f /im vlc.* 
 
C:\Progra~1\VideoLAN\VLC\vlc.exe -vvv 
udp://@xxx.xxx.xxx.xxx:1234 
:sout=#duplicate{dst=std{access=mmsh,mux=asf, 
dst=cccc.cs.und.edu:80}} --ttl 200 
E. UND VLC Server #3 script 
Like the previous MS Windows XP scripts, this script 
terminates any running version of VLC (taskkill) and 
restarts VLC instructing it to accept the multicast (UDP) 
stream produced by server #1 on port 1234. This script then 
transcodes the stream into mpeg4 (video and audio) and 
rebroadcasts it as a Real Time Streaming Protocol (RTSP) 
on IP/host name dddd.cs.und.edu port 554 with a time-to-
live of 200. Note that the host name of this machine would 
be dddd.cs.und.edu. Finally, we chose not to include this 
4
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

script at this time as we are still debugging and testing it on 
the different cell phone provider’s systems and their smart 
phones available. 
 
Note that to use any of these scripts one will need to 
copy and paste the text into Notepad and save it as a DOS 
batch file. 
V. 
CONCLUSION 
By using a combination of open source software, our 
own scripts, and a combination of point-to-point and 
multicast webcast technologies a hierarchical webcasting 
system that allows many more viewers than would be 
possible with any single approach has been achieved. A 
multicast stream over Internet2, primarily for university 
viewers, and multiple point-to-point streams, for home 
viewers via the SEMs site and mirror sites, is provided. A 
similar webcast system could easily be developed by anyone 
else wanting to produce such live events. 
The latest development/usage is for Defense Support of 
Civil Authorities. For this project video acquired by a UND 
operated (http://www.uasresearch.com/home.aspx) Insitu 
ScanEagle unmanned aircraft is captured by a computer 
located in the mobile command center [29-32]. Two 
instances of VLC are again used to make a high quality 
local recording and a lower quality transcoded version for 
streaming. Using a cell phone, the transcoded video stream 
is then sent to the VLC servers at UND using a User 
Datagram 
Protocol 
(UDP) 
connection. 
From 
there 
emergency management personnel have access to the video 
stream via a dedicated website. We have also achieved some 
success in streaming that video to smart phones (iPhone, 
Android, etc.) using the Real Time Streaming Protocol 
(RTSP). 
 
REFERENCES 
[1] J. Baxter, “Children’s understanding of familiar astronomical 
events,” International Journal of Science Education, 11, 1989, 
pp. 502-513. 
[2] J. Dunlop, “How children observe the universe,” Publications 
of the Astronomical Society of Australia, vol. 17, no. 2,2000,  
pp. 194-206. 
[3] P. M. Sadler, “Misconceptions in astronomy,” Proceedings of 
the second international seminar misconceptions and 
educational strategies in science and mathematics (Vol. III), J. 
Novak, Ed. Ithaca, NY: Cornell University Press, 1987, pp. 
422-425. 
[4] L. D. Richardson and M. Wolfe, Principles and practice of 
informal education: Learning through life. New York, NY: 
RoutledgeFalmer. 2001. 
[5] J. H. Falk, E. Donovan, and R. Woods, Free-choice science 
education: How we learn science outside of school, New 
York, NY: Teachers College Press. 2001. 
[6] A. Hofstein and S. Rosenfeld, “Bridging the gap between 
formal and informal science learning,” Studies in Science 
Education. vol. 28, 1996, pp. 87-112. 
[7] P. D. Hurd, Inventing science education for the new 
millennium, New York, NY: Teachers College Press.1997. 
[8] G. Sonnert and G. J. Holton, Ivory bridges: Connecting 
science and society. Cambridge, MA: MIT Press. 2002. 
[9] L. J. Rennie and S. M. Stocklmayer, “The communication of 
science and technology: Past, present and future agendas,” 
International Journal of Science Education, vol. 25, no. 6, 
2003, pp. 759-773. 
[10] Sun Earth Moon System, www.sems.und.edu. Last accessed 
June 26, 2011. 
[11] R. Marsh, “The Sun Earth Moon System; Connecting Science 
and Informal Learning,” Handbook of Research on Social 
Interaction 
Technologies 
and 
Collaboration 
Software: 
Concepts and Trends,” T. Dumova and R. Fiordo (Eds),  pp. 
428-438, July, 2009, [ISBN: 978-1-60566-368-5]. 
[12] C. A. Lin, “Webcasting adoption: Technology fluidity, user 
innovativeness, 
and 
media 
substitution,” 
Journal 
of 
Broadcasting & Electronic Media, vol. 48, no. 3, 2004, pp. 
157-178. 
[13] P. Miles, Internet world guide to webcasting. New York, NY: 
John Wiley & Sons. 1998. 
[14] L. Ha and R. J. Ganahl, Webcasting worldwide: Business 
models of an emerging global medium, Mahwah, NJ: 
Lawrence Erlbaum. 2007. 
[15] J. Follansbee, Hands-on guide to streaming media: An 
introduction to delivering on-demand media. Burlington, MA: 
Focal Press. 2006. 
[16] J. Mann, When and how to use webcasting. Stamford, CT: 
Gartner. 2005. 
[17] Cisco Systems, Inc, “Guideline for Enterprise IP Multicast 
Address 
Allocation,” 
http://www.cisco.com/en/US/prod/ 
collateral/iosswrel/ps6537/ps6552/ps6592/prod_white_paper0
900aecd80310d68.pdf. Last accessed June 26, 2011. 
[18] S. Mack and D. Rayburn, Hands-on guide to webcasting: 
Internet event and AV production. Amsterdam: Elsevier/Focal 
Press. 2006. 
[19] B. O. Szuprowicz, Webcasting and push technology 
strategies: Effective communications for intranets and 
extranets. Charleston, SC: Computer Technology Research 
Corp. 1998. 
[20] IRCD-Hybrid, www.ircd-hybrid.org. Last accessed June 26, 
2011. 
[21] The Apache Software Foundation, www.apache.org. Last 
accessed June 26, 2011. 
[22] VideoLAN, www.videolan.org. Last accessed June 26, 2011. 
[23] J. Porter, Designing for the social web. Berkeley, CA: New 
Riders. 2008. 
[24] J. Preece, I. R. Rogers, and H. Sharp, Interaction design: 
Beyond human-computer interaction. Hoboken, NJ: John 
Wiley & Sons. 2007. 
[25] H. S. Du and C. Wagner, “Weblog success: Exploring the role 
of technology,” International Journal of Human-Computer 
Studies, vol. 64, no. 9, 2006, pp. 789-798. 
[26] L. D. Richardson and M. Wolfe, Principles and practice of 
informal education: Learning through life. New York, NY: 
RoutledgeFalmer. 2001. 
[27] C. Shirky, “Power laws, weblogs, and inequality,” Clay 
Shirky's Writings About the Internet, 2003, unpublished 
Retrieved April 16, 2011, from http://www.shirky.com/ 
writings/powerlaw_weblog.html  
 
5
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

[28] C. Wagner and N. Bolloju, “Supporting knowledge 
management 
in 
organizations 
with 
conversational 
technologies: Discussion forums, weblogs, and wikis,” 
Journal of Database Management, vol. 16, no. 2, 2005, pp. i–
viii. 
[29] R. Marsh, M. Kary, K. Ogaard, and J. Nordlie, “Development 
of a Mobile Ganged Phase Array Radar – Risk Mitigation 
System System for UAS Operations in North Dakota,” 
Proceedings of the 2010 International Conference on 
Software Engineering Research & Practice, {SERP} 2010, 
Las Vegas, NV., 2010, pp. 403-410. 
[30] R. Marsh, M. Kary, K. Ogaard, J. Nordlie, and C. Thesien, 
“Development of an Information Display System for UAS 
Operations in North Dakota,” Proceedings of the IADIS 
International Conference Computer Graphics, Visualization, 
Computer Vision and Image Processing 2010 (part of 
MCCSIS 2010), Frieburg, Germany, 2010, pp. 193-200. 
[31] H. Reza, M. Askelson, and R. Marsh, “A Fault Tolerant 
Architecture Using AADLs for Unmanned Aircraft Systems 
(UAS),” Proceedings of the 2010 International Conference on 
Software Engineering Research & Practice, {SERP} 2010, 
Las Vegas, NV., 2010, pp. 180-184. 
[32] R. Marsh, M. Kary, K. Ogaard, and J. Nordlie, “Development 
of a Mobile Information Display System for UAS Operations 
in North Dakota,” International Journal of Computer 
Information 
Systems 
and 
Industrial 
Management 
Applications, Volume 3, 2011, pp. 435-443. 
6
CONTENT 2011 : The Third International Conference on Creative Content Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-157-1

