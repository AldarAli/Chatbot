Sensor Gateway Using Arduino via Google Cloud and IEEE 802.15.4e 
Seung Hyeok, Shin 
Dept. of Applied Mathematics, Kumoh National Institute of 
Technology 
51, Daehak-ro, Gumi-si Gyeongsangbuk-do 39177, Korea 
shinbaad@kumoh.ac.kr 
Won Sok, Yoo 
Dept. of Applied Mathematics, Kumoh National Institute of 
Technology 
51, Daehak-ro, Gumi-si Gyeongsangbuk-do 39177, Korea 
wsyoo@kumoh.ac.kr  
Lee Sub, Lee 
Dept. of Computer Engineering, Kumoh National Institute 
of Technology 
51, Daehak-ro, Gumi-si Gyeongsangbuk-do 39177, Korea 
eesub@kumoh.ac.kr 
Abstract—In this paper, we described a sensor gateway for 
using in a hierarchical network architecture. We propose a 
gateway architecture termed “Light-Weight Gateway”, which 
provides multiple interfaces to IEEE 802.15.4e called Zigbee 
and IEEE 802.11 called Wi-Fi, for supporting Google cloud 
client. For this, we used Arduino as wireless sensor gateway on 
Google cloud messaging service. It is possible to expose its 
functionality as an Internet of Things (IoT) node. The Arduino 
receives sensor information and sends it to the network 
through Google cloud using Wi-Fi module. 
Keywords-Arduino;Sensor 
Gateway;Google 
Cloud 
Messaging Service;IEEE 802.15.4e;Wireless Seneor Network. 
I.
INTRODUCTION
A Wireless Sensor Network (WSN) is a network 
consisting of distributed devices that provide sensing 
features such as industrial gas problems, pipe vibration, 
noise, motion, etc. Nowadays, WSN systems are developed 
more and more intelligently. [1]. The Future WSN aims to 
integrate heterogeneous communication technologies in 
order to substantially contribute to asserting the concept of 
IoT. The low cost of sensor technology has eased the 
proliferation of WSN in many applications, such as real-
time monitoring, bio technology, and smart factories [2]. 
In this paper, we propose a scheme of wireless 
communication system. This low-cost, small-sized system 
can collect real-time environmental values, such as gas 
pressure, stink, noise, humidity and temperature data 
remotely. Figure 1 shows the overall system architecture. 
II.
RELATED RESEARCHES
In this section, we introduce google cloud messaging 
service. 
A.
Google Cloud Messaging Service 
Google provides a service called Firebase Cloud 
Messaging(FCM), which we can be used to send data to the 
user’s device from app server and even receive messages 
from the devices to our servers through the same connection 
[3][4]. Figure 1 shows entities in the FCM. It also shows the 
scenario of FCM client registration and data sending. FCM 
consists of three parts, FCM client, app server and 
connection server. Some IDs and tokens used in different 
stages are described as follows. First, we have to apply an 
API key from Google, and then get a Sender ID. 
Registration ID is then issued from the FCM app server to 
the FCM application that allows it to receive messages. If 
the FCM device wants to join push group, it sends Sender 
ID to FCM server and Registration ID to the app server for 
identifying each device and registering to receive messages 
for FCM application. When app server wants to push 
messages, it sends its own API Key and user’s Registration 
ID to FCM server, and then sends messages to FCM server. 
There are two types of messages in FCM. One is the send-
to-sync message, and the other is the message with payload. 
The send-to-sync message is a light message used in 
notifying the app on mobile device to update information. 
On the other hand, the payload message is able to contain up 
to 4 KB, and is often used to exchange instant messages. 
The proposed push notification adopts both of  two types. 
We implemented the cloud messaging system based on 
FCM service. It consists of four major components: sensor 
gateway, FCM client as a smart phone application, app 
server and mongo database as shown in Figure 1. 
III.
IMPLEMENTATION
In this section, we introduce light weight gateway and 
proposed architecture. 
A.
Light Weight Gateway 
Arduino is an open-source hardware platform. The 
Arduino Uno is a microcontroller board based on the 
ATmega328p-pu [5]. The Arduino does not have built-in 
Wi-Fi and 802.15.4e connectivity. Instead, it is added by 
connecting Wi-Fi and ZigBee module. Modules are 
connected to the Arduino using a serial port or an API mode. 
Also, wireless capabilities are added by forwarding any data 
received from the 802.15.4e network to the Google cloud 
and forwarding received Google cloud to the 802.15.4e 
1
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-651-4
ICIW 2018 : The Thirteenth International Conference on Internet and Web Applications and Services

network, respectively. Figure 2 shows the proposed Arduino 
gateway. 
B.
Proposed Architecture 
The main ingredient for any IoT based operation is a 
sensor gateway and app server [6]. The centralized sensor 
gateway acts as the heart of all the IoT rooted operation. In 
this paper, the app server is used for data storage, sensor 
feedback and control [7]. A virtual connection between the 
app server and FCM client devices include sensor gateway 
that needs to be created. There are several ways to make an 
Internet connection form, which we have used FCM. Figure 
3 shows the proposed system architecture. 
Most FCM systems use an external app server to send 
notifications via the Google cloud. In this paper, we 
proposed a modified FCM registration about sensor gateway. 
Therefore, sensor gateway stores the FCM client registration 
ids. So, sensor gateway can send a sensing data to the FCM 
client individually. 
IV.
RESULT
Figure 4 shows the registration sequence. Figure 4(a) is 
the FCM sequence and 4(b) is the proposed system 
sequence. Proposed sequence is more complex than FCM 
sequence. FCM client registration request is occurred twice 
in proposed sequence. This means that proposed sequence is 
too complex in the registration sequence. But this sequence 
is not important in entire FCM sequence, because 
registration is not being occurred frequently. 
Figure 5 shows the push message sequence. Figures 5(a) 
and 5(b) show FCM sequence and proposed system 
sequence. FCM sequence is more complex than the proposed 
sequence. The sensor gateway for push message sequence is 
used in the proposed sequence. This means that proposed 
sequence reduced the step of the request data and user 
account. Since push message sequence is occurring more 
frequently, it is more efficient than FCM sequence. 
Figure 6 shows time complexity graph of Big-O. Figure 
6(a) is the registration sequence and 6(b) is the push message 
sequence. The graph of y=O(n) shows the FCM sequence 
and y=O(n2) shows the proposed sequence in Figure 6(a).  
As shown in the graph, the proposed registration sequence is 
more complex than FCM sequence. The graph of y=O(n2n)
shows the proposed sequence and y=(Onn) shows the FCM 
sequence in Figure 6(b). As shown in the graph, the FCM 
sequence is more complex than proposed sequence. 
V.
CONCLUSION
In this paper, we have described how to compose 
Arduino by adding an 802.15.4e and FCM client function, in 
order to use it as a sensor gateway. We also modified the 
registration sequence on Google cloud, and showed efficient 
push message sequence. We have described all of the 
necessary steps to make a registration sequence. In addition, 
we have described the design and implementation of 
Arduino sensor gateway, which can be used for WSN. To 
demonstrate the applicability of our system, we have 
presented two representative scenarios of use cases  that 
illustrate how our infrastructure can be used. 
Our future work includes the implementation of 
additional applications, which is smart phone application and 
web data visualization system. 
REFERENCES
[1]
I. Agranat, “Embedded web servers in network devices”, 
Communication Systems Design, Mar. 1998. 
[2]
P. P. Pereira, J. Eliasson, R. Kyusakov, and M. Johansson, 
“Enabling Cloud-connectivity for Mobile Internet of Things 
Applications”, IEEE Seventh International Symposium on 
Service-Oriented System Engineering, 2013, pp. 518-526. 
[3]
P. Klasnja, and W. Pratt, “Healthcare in the pocket: mapping 
the space of mobile-phone health interventions,” Journal of 
biomedical informatics, Vol. 45, No. 1, pp. 184–198, 2012. 
[4]
M. Berglund, C. Nilsson, P. R´evay, G. Petersson, and G. 
Nilsson, “Nurses and nurse students demands of functions and 
usability in apda”, International Journal of Medical 
Informatics, Vol. 76, No. 7, pp. 530–537, 2007. 
[5]
Arduino 
website, 
May 
2018. 
[Online]. 
Available: 
http://www.arduino.cc/ 
[6]
B. S. Fjeldsoe, A. L. Marshall, and Y. D. Miller, “Behavior 
change interventions delivered by mobile telephone short-
message service”, American Journal of Preventive Medicine, 
Vol. 36, No. 2, pp. 165–173, 2009. 
[7]
E. S. Bradley, D. A. Roberts, P. E. Dennison, R. O. Green, M. 
Eastwood, S. R. Lundeen, I. B. McCubbin,  and I. Leifer, 
“Google earth and google fusion tables in support of time-
critical collab-oration: Mapping the deep water horizon oil 
spill with the aviris airborne spectrometer”, Earth Sci-ence 
Informatics, Vol. 4, No. 4, pp. 169–179, 2011. 
2
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-651-4
ICIW 2018 : The Thirteenth International Conference on Internet and Web Applications and Services

Figure 1. Client Registration and Data Sending on FCM 
Figure 2. Proposed Sensor Gateway 
Figure 3. Proposed System Architecture 
3
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-651-4
ICIW 2018 : The Thirteenth International Conference on Internet and Web Applications and Services

(a) FCM Sequence 
(b)  Proposed Sequence 
Figure 4. Registration Sequence Diagram 
(a) FCM Sequence 
(b)  Proposed Sequence 
Figure 5. FCM Push Message Sequence Diagram
(a) Registration Sequence 
(b)  Push Message Sequence 
Figure 6. Time Complexity Graph of Big-O 
4
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-651-4
ICIW 2018 : The Thirteenth International Conference on Internet and Web Applications and Services

