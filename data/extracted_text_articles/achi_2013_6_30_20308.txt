Study of a FCMAC ANN for Implementation in the Modeling of an Active Control 
Transtibial Prosthesis
Andrade, J. A. A., Diniz, E. H., Borges, K. C. 
Figueiredo, J. F., Silva, R. C. 
Faculty of Gama/Gama - FGA 
University of Brasília – UnB at Gama 
Brasília-DF, Brazil 
e-mail: andrade.jaa.unb@gmail.com 
Brasil, L. M. 
Program of Post-Graduation in Biomedical Engineering 
University of Brasília-UnB at Gama 
Brasília-DF, Brazil 
e-mail: lmbrasil@gmail.com
 
 
Abstract— This article presents some topics that have been 
developed by the authors on the development of a model of 
posture and behavior control of a Active Transtibial 
Prosthesis, i.e., applied to individuals with amputation below 
the knee. It is intended to use a Neuro-Fuzzy ANN as the basis 
of this control. Specifically, we intend to use an FCMAC ANN 
Neuro-Fuzzy type. Such ANN has the ability of memorizing a 
region of operation and allow that for similar entries to those 
known in memory, know outputs may be generated. It is 
intended to show an early version of this work whose 
application was the modeling of the inverse kinematics of a leg 
in the sagittal plane. 
Keywords-component; Active Transtibial Prosthesis, Control, 
Artificial Intelligence, ANN Neuro-Fuzzy. 
I. 
 INTRODUCTION  
The search to improve the quality of life for people who 
have suffered amputation is one of the goals of a branch of 
engineering called the Rehabilitation Engineering [1]. Using 
tools and techniques developed in large research centers, it 
is possible to obtain models of prostheses and orthoses that 
may allow greater comfort to its user, particularly for those 
with lower limb amputations. 
Modeling the control of prosthesis or any device used in 
human rehabilitation allows for better interaction with its 
user and can ensure greater comfort in performing 
movements [2]. In particular, for prostheses applied to the 
lower limbs, their behavior during walking is a factor that 
can facilitate or hamper the movement of the user. In this 
context, some tools from studies in the area of Artificial 
Intelligence can assist in the implementation of the control 
of these devices for rehabilitation. Of these tools, we 
highlight the use of fuzzy systems and Artificial Neural 
Networks (ANNs) combined in a system called Neuro-
Fuzzy ANNs. The fuzzy systems deal with linguistic sets 
that allow managing inaccuracies in a way to generate the 
output more plausible by rules [3]. In the other hand the 
ANNs seek to simulate the connectionist reasoning using 
processing 
units 
with 
nervous 
system 
biological 
inspirations. They are able to learn, generalize and classify 
the elements in the universe they have been trained. The 
combination of these two systems can leverage the best of 
each [3]. 
In this work, we intend to show the results of some 
studies done about a Neuro-Fuzzy called FCMAC. This 
ANN has great potential for use in real-time control and 
allows the memorization of the environment in which it will 
be applied in order to generate the closest know output [4]. 
The FCMAC ANN is used as a basis for implementing a 
posture and behavior control of an active prosthesis for 
transtibial amputees and, as a first version, the results 
generated in this study were applied to generate a modeling 
of inverse kinematics of a leg in the sagittal plane.  
II. 
CHOICE OF A NEURO-FUZZY ANN 
Among the various models of Neuro-Fuzzy ANNs, we 
highlight the ANFIS ANN (Adaptive Network-based Fuzzy 
Inference Sistem) and FCMAC (Fuzzy-Cerebellar Model 
Articulation Controller) ANN. In previous works [11, 12] 
we sought to determine which of these two types would be 
used in the implementation of the control of the active 
transtibial prosthesis. The following will show some 
characteristics about these two Neuro-Fuzzy ANNs. 
A. ANN ANFIS 
The ANFIS is one of the more widespread Neuro-Fuzzy 
ANNs and represent a type of RBF (Radial Basis Function)  
ANN in a system of type Fuzzy TSK (Takagi, Sugeno and 
Kang) [3]. It relies on the use of ANNs and Fuzzy systems 
whose output has not defuzzification processes. Figure 1 
shows the layout and operation of such an ANN. 
 
 
Figure 1.  Model of Neuro-Fuzzy ANN of the ANFIS type [3]. 
In Figure 1, the first layer represents the fuzzification of 
the inputs x and y. Layer 2 is responsible for the activation 
of the outputs of layer 1. Layer 3 is responsible for 
normalizing the output of layer 2. Layer 4 presents 
151
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

parametric equations on the basis of inputs from the ANN 
and layer 5 is the sum of parametric equations whose 
biggest influence on the output comes from the parametric 
equations whose activations in layers 2 and 3 are larger. 
This ANN presents two modes of construction [3]. The 
first is called Concatenated Model, whose entries are a 
concatenation of relevance vectors associated with each 
variable. The second is called the Combined Model and, 
unlike the previous, its entries are formed by combinations 
of fuzzy sets of the variables. In this last, to develop a 
complete system, all possible combinations for these 
assemblies must be considered. 
B. The FCMAC ANN 
The FCMAC ANN is an improvement of an architecture 
proposed by [5], called CMAC. The CMAC (Cerebellar 
Model Articulation Controller) ANN is a simplified model 
inspired in the cerebral cortex of mammals that operates 
through associative memories that relate the inputs of the 
ANN with appropriate outputs. A feature that should be 
mentioned is that the CMAC ANNs have a large number of 
receptive fields with finite boundaries [3, 4]. This means that 
it operates in a mapping by limited intervals of operation. 
The ANN initially proposed by [5] implements functions of 
the type shown in (1) and (2). 
 
A
S
f
→
:
 
(1) 
 
Y
g A
→
:
 
(2) 
In Equation 1, S is the space of input from ANN, A is the 
set of CMAC memories and Y is the output. The mapping of 
CMAC memories is done using functions of Boolean 
activation. The outputs of these activations are combined 
using an AND Boolean operator to enable or disable your 
memories. The memories that are activated are weighted by 
weights and summed to generate the output of the ANN. 
However, the use of activation functions of Boolean type in 
entries, 
makes 
some 
CMAC 
memories 
completely 
connected or disconnected. This makes its output response 
to present discontinuities, even for well-behaved inputs [6]. 
An alternative proposed by [7] to solve the problem of 
discontinuities in the output of the ANN was the adoption of 
activation functions of fuzzy logic. These functions work 
with concepts of pertinence of elements and allow use as a 
activation one degree trigger that allows certain memory 
locations that are not completely disconnected from the 
output pattern and are usually Gaussian or B-splaines [3, 6]. 
Thus some memory locations may contribute fully, partially 
or not contribute to the output, making that this way it can be 
continuous and smooth. The structure of a Fuzzy-CMAC 
ANN (or FCMAC) can be seen in Figure 2, where it notices 
that it is very similar to the CMAC ANN, differentiated only 
by the activation functions in the entries. 
 
Figure 2.  FCMAC ANN structure. Adapted from [6, 4]. 
C. Justification for the Selection of  FCMAC ANN 
Regarding ANFIS ANN, it appears that it seeks to 
preserve the properties of generalization of ANNs. 
Moreover, the knowledge of an expert can serve to start the 
ANN parameters so that during your training, it can give 
better results by already be closer to the desired setting. 
However, with regard to its constitution, it must be verified 
its limitations for problems not linearly separable, that is, 
with similar characteristics but belonging to different sets 
[8]. This is because in the case of the combined model, its 
application in project is subject to the number of entries in 
the ANN, since the number of combinations grows 
exponentially with the number of inputs, besides being more 
difficult to construct. Now with regard to the concatenated 
model, its construction becomes easier, however, the ANN 
becomes less robust. 
Regarding the Fuzzy-CMAC ANN, a feature that should 
be mentioned is that their receptive fields act as memories 
of Fuzzy-CMAC ANN, by enabling or disabling certain 
ANN connections. Thus, only a few receptive fields will 
predominantly contribute to the output of the ANN while 
others will not contribute effectively. Thanks to this, it is 
possible to conduct a local training ANN only fields that 
contribute to output and allowing some information stored 
by the ANN are not lost. Moreover, the problem of 
discontinuities solved by the use of continuous functions of 
fuzzy logic, may apply a method of training using a gradient 
method [3, 6]. 
Thus, it appears that the Fuzzy-CMAC ANN is presented 
as a robust technique that can map the characteristics of the 
human gait. Memorize certain features of the walk can allow 
the prosthesis to have a consistent stance that can relate the 
user's intentions with the environment [12]. Given its 
characteristics, the aim is to use a Fuzzy-CMAC ANN as the 
basis to perform the modeling control of the active prosthesis 
for transtibial amputees. 
 
 
 
 
152
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

III. 
MATERIAIS E MÉTODOS 
A. Operation of FCMAC ANN 
Likewise the CMAC ANN, the FCMAC also operates at 
finite boundaries, i.e., inputs are limited to their ranges of 
operation. At the entrance of ANN, µ values are calculated 
which are the degrees of pertinence of the input values in the 
range of operation. Thus the output of the activation 
functions are calculated in (3). 
 














−
−
=
2
2
1
exp
ij
ij
i
ij
c
x
σ
µ
 
(3) 
In Equation 3, µ is the value of the pertinence of input x, 
partitions of the interval c and σ are the center and support 
of the membership functions, i ranges from 1 to n inputs and 
j ranges from 1 to k number of membership functions. Then 
the combinations of the membership functions of the inputs 
are combined with each other as the operator E. For 
FCMAC ANN are used t-norm operators as minimum or 
algebraic product [9]. For this work, we used the algebraic 
product given by (4). 
 
( )
= ∏
j
ij
m
x
a
µ
 
(4) 
The index m in (4) ranges from 1 to kn number of rules 
or combinations of inputs, and a is an associative cell 
related to the FCMAC memory of this multiplicand, and 
related to the insert input. The associative cells activated by 
input values that are closer to the values entered in the ANN 
showed a higher value. With that they influence the output 
more than those with a lower value. However, all cells 
contributed to the output of the ANN that in this study was 
adopted as the (5) [6]. 
 
∑
∑
=
=
=
N
m
m
N
m
m
m
a
w a
Y
1
1
 
(5) 
where N is the number of memories in the ANN. 
B. Learning of FCMAC ANN 
For the correction of the weights of ANN, one can use an 
equation similar to the correction of the weights of CMAC 
ANN. It is given by (6). It is also possible to adjust the 
Gaussian activation functions of the input layer. This 
adjustment is made using the backpropagation algorithm and 
the variables c (center) are modified and σ of the Gaussian 
functions. This adjustment improves performance at the 
ANN output [6]. 
 
(
)
∑
=
−
=
∆
N
m
m
j
ij
a
a
Y
Yd
w
1
η
 
(6) 
C. Reduction in the number of inputs combinations 
A problem that occurs with this ANN is that the total 
number of possible rules, or combinations of functions grows 
exponentially in a relation between the number of entries n 
and the number of membership functions k as in (7). This is 
referred to as curse of dimensionality [3], since the number 
of entries of ANN may limit the application of the designer. 
 
C = kn
 
(7) 
To reduce this problem, [6] used a limited number of 
combinations and adjusted the membership functions in the 
inputs so that the generated combinations could map the 
inputs in the best possible way. For this he treated the 
membership functions or activation using an algorithm of 
clustering or categorization that allowed these functions to 
initialize. The clustering algorithms used to start the 
membership functions was the Fuzzy C-Means. With this 
technique it is possible to calculate the centers of Gaussians 
activation functions so that they are well distributed in the 
input space. This allowed the number of combinations of 
inputs to grow linearly with the number of activation 
functions for each input, as shown in (8). 
 
C = k
 
(8) 
In (7) and (8), C is the number of possible combinations 
of inputs FCMAC. The Fuzzy C-Means algorithm is one of 
the algorithms most utilized for clustering and as well as 
other algorithms of the type, aims to minimize a function of 
the type presented in (9), which represents a cost function 
based on the distance of each point in the input assembly, in 
the position of each cluster and in the relevance of each point 
to the cluster [10]. 
 
(
)
∑∑
=
=
=
c
i
P
j
i
j
ij m
x v
d
J
1
1
2
,
µ
 
(9) 
In (9), xj is a sample of a point vector P, c is the number 
of desired clusters, d is the distance from xj to the center vi 
and µij is the value of degree of relevance of the sample xj to 
the center vi, m is called fuzzy factor which typically is equal 
to 2 (the bigger m is, it is said the cluster is more fuzzy [10]) 
and J is called cost function. 
D. Implementation of a FCMAC ANN 
To implement a FCMAC ANN, it was necessary to list 
what are the elements that characterize an ANN of this type. 
Thus, some elements were listed, and as a result, was 
generated a data structure that could represent ANN as 
illustrated in Figure 3. To implement FCMAC ANN, it was 
used the computer álgebra ambient Matlab ® because it 
allows greater ease in the development of algorithms. 
153
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
Figure 3.  Data structure that represents the FCMAC ANN. 
In Figure 3, the attribute numbers stores values 
corresponding to dimensions of ANN, such as number of 
entrances, activation functions and numbers of outputs. The 
attribute activations stores two matrixes that store the values 
of centers and supports of the Gaussian functions of the 
inputs. Finally, the attribute weights keeps the corresponding 
matrix weights of each output, each initialized with random 
values between -1 and 1 [6]. 
 
E. Neuro-Fuzzy Control for a Active Transtibial 
Prosthesis 
The active transtibial prosthesis has a set of sensors that 
allow for the acquisition of kinematic and dynamic 
parameters during operation. As the initial proposal, the 
control of posture and behavior will not consider the 
bioelectric signals of the user, ie, will be used only dynamic 
kinematic parameters acquired by the sensors. For this 
purpose, it is intended to train a FCMAC ANN in order to 
bring consistent output based on the parameters obtained 
from sensors. Thus, based on previous work [11, 12], were 
collected some parameters that feed the FCMAC ANN: 
• 
Distance d relative to the ground plane; 
• 
Angle α between the sole of the prosthesis to the 
ground plane; 
• 
Angles β between the sole and the leg prosthesis; 
• 
Force F applied to the prosthesis due to the weight of 
the user; 
With these parameters, it is proposed the control model 
shown in Figure 4 [13]. 
 
Figure 4.  Proposed model to control the prosthesis [13]. 
In Figure 4, it can be seen that the output of FCMAC 
ANN should provide at its output the movement to be 
performed by the prosthesis and how much torque must be 
applied to a joint. This pattern of torque must be applied at 
the ankle and depend on the phase of gait. The movement 
pattern also depends on the phase of gait. These two 
standards should be adjusted according to the kinematic and 
dynamic model of the prosthesis so that your posture and 
behavior can be consistent. 
IV. 
RESULTS 
As a first version in the application of Neuro-Fuzzy 
FCMAC ANN in a control template for a Active Transtibial 
prosthesis, worked on a model of inverse kinematics of a leg 
in the sagittal plane. This means that one wishes to obtain the 
angles which allow the end of the leg may be located in a 
certain position. For this, it is considered a model with two 
segments and two degrees of freedom (degree of motion). 
The ANN which controls the position of the leg has as input 
parameters a position in which the point on the ankle is in the 
xy plane and an output, it is expected angles of the hip and 
knee. The structure of ANN used can be seen in Figure 5. 
 
Figure 5.  Structure of FCMAC ANN to control the leg where N = 100, 
that is, the ANN possesses 100 memories. 
For training the ANN, it was generated a leg operation 
space in which its edge could be located. In this operating 
region, about 400 training points were generate, which were 
also used to generate a 100 clusters that serve as centers for 
the Gaussian functions activation inputs of ANN. The region 
restriction is shown in Figure 6, where two segments of line 
represents the leg segments and the red points are the clusters 
generated in this mapping. 
154
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
Figure 6.  Mapping of the leg operation space. Strictly in this region, the 
FCMAC ANN can provide the desired output after training. 
Established these points, began training a FCMAC ANN 
with about 100 activation functions on each input. After 
training, was traced a trajectory parameterized in the xy plane 
and tried to verify if the ANN would be able to perform the 
inverse kinematics of this trajectory to position the end of the 
leg in this plan. Figure 7 shows the trajectory traced to the 
end of the leg and the solution of inverse kinematics for the 
angles corresponding to this path. 
 
Figure 7.  At the top of the figure has the trajectory desired to be 
approximate by FCMAC ANN. In the lower part there are the 
corresponding angles to this path 
V. 
DISCUSSION 
When using a categorization algorithm, one can find 
some clusters that are positioned at locations around whose 
elements have some similarity. By doing so, it was possible 
to perform a mapping of the leg operation space with a 
limited amount of clusters equal to ¼ of data that would be 
used in training. This could allow a drastic reduction in the 
number of combinations of inputs needed so that the ANN 
could approximate the trajectory. Thus, for the ANN used, 
which had 100 functions in the activation of 2 starters, it 
took only 100 combinations of inputs instead of 1002 = 
10000. 
The FCMAC ANN training for this application was 
carried out in 500 times and wished the Mean Square Error 
(MSE) was 10-4. However, at the end of training epochs, the 
NDE obtained was 1.6 x10-4. However, ANN performance 
was satisfactory, because the behavior of the trajectories 
obtained in simulation was close to expectations as you can 
see in Figure 8, where they are shown briefly simulation 
performance of the FCMAC ANN to approximate the 
trajectory of the leg. 
 
Figure 8.  The figure shows a few moments of trained FCMAC 
simulation. The blue curve represents the desired trajectory and the red 
represents the trajectory obtained by ANN. 
VI. 
CONCLUSION 
Through this work, we can learn a few points about the 
capabilities of FCMAC ANN. It was found that in case of 
using all possible input combinations, their applications on 
design would be constrained by the number of entries as the 
number of combinations grows exponentially with the 
number of inputs and activation functions. 
It was seen that the use of a categorization algorithm 
allows the number of input combinations is dramatically 
reduced to a linear complexity to the number of activation 
functions of the inputs. The Fuzzy C-Means algorithm 
allowed for mapping the operating region of the leg so that 
could distribute the activation functions of the inputs 
through this region. 
As regards the application done, verified the ability of 
FCMAC ANN memorizing the operating region and allow 
the execution of any path in this region even without the 
known during training. That's why when associating various 
positions in the area of operation with the angles of the hip 
and knee for the training data, the ANN memorized these 
relationships. Thus, when designing a trajectory in this 
region, it checks the path which points are closer to the 
region known demand and provide an approximate output. 
It should be noted also that the coordinates are entered in 
the input ANN were operating in the area, leaving the ANN 
155
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

would be inconsistent. Thus, mechanisms are needed to 
prevent these boundary conditions occur. 
As a next step, we intend to use the data obtained in a 
simulation environment developed in [11, 12] to train a 
FCMAC ANN. The aim is also to obtain a model of posture 
control and behavior of active prosthesis for transtibial 
amputees. 
ACKNOWLEDGMENT 
The authors thanks the University of Brasilia (UnB) and 
the Ministry of Health for the financial support through the 
Scientific Initiation Scholarship program and another 
financial suports. 
REFERENCES 
[1] Cassemiro, 
E.R., 
“Methodology 
for 
the 
Development 
of 
Biomechanics Devices for the Application in Anthropomorphic 
Prosthesis”, Thesis of Master, FEM/UNICAMP, Campinas, 2002, 89 
p. (In Portuguese). 
[2] Blaya, A.J., Herr, H., “Adaptative Control of a Variable-Impedance 
Ankle-Foot Orthosis to Assist Drop-Foot Gait”, In: IEEE 
Transactions on Neural Systems and Rehabilitation Engineering. Vol. 
12, p., 24-31, 01 Sept  2004. 
[3] Rezend, S.O., Intelligent Systems – Fundamentals and Applications , 
São Paulo: Manole, 2002 (In Portuguese). 
[4] Almeida, P.E.M. ; Simões, M.G. , “Parametric CMAC networks: 
Fundamentals and applications of a fast convergence neural 
structure”. IEEE Transactions on Industry Applications, New York, 
NY, v. 39, n.5,  2003, p. 1551-155. 
[5] Albus, J. S., “A new approach to manipulator control: The cerebellar 
model articulation controller”. Trans. ASME, J. Dyn. Syst., Meas. 
Control, v. 97, p. 220-227, Sept 1975. 
[6] Reis Jr, S.G., “Thermal Modeling of a Lamination Process of Tubes 
Using Neural Networks Fuzzy-CMAC”, Thesis of Master,  
DPPG/CEFET-MG, Belo Horizonte, 2005, 132 p. (In Portuguese). 
[7] Brown, M., Harrys, C. Neuro-Fuzzy Adaptative Modelling and 
Control., 1th ed.,  Prentice-Hall, New York, 1994. 
[8] Rich, E., Knight, K. , Artificial Intelligence,  USA: Markron, 1992.  
[9] Simões, M. G. ; Shaw, I. S., Fuzzy Control and Modeling, 2nd ed. 
São Paulo: Edgard Bluchert, 2007, 200p. (In Portuguese). 
[10] Berni, C. C., “Implementation in Hardware/Firmware of a Virtual 
Sensor Using Fuzzy Identification Algorithm”. Thesis of Master in 
Engineering – University of São Paulo, São Paulo. 2004. 179p. (In 
Portuguese). 
[11] Silva, R.C., Brasil, L.M., Costa Jr, E.A., Rosa, S.S.R.F., Andrade, 
J.A,A, Rodrigues, O., “The Development of an Active Prosthesis for 
Transtibial Amputees: Applied models and Sensorial Fusing”, In: 
Technically Assisted Rehabilitation – TAR Conference 2011, Berlin, 
p., 1-4, 17-18 mar 2011. 
[12] Andrade, J.A.A., Silva, R.C., Araujo, E., Rosa, S.S.R.F., 
“Contributing to Human Rehabilitation through Study of an Active 
Prosthetic”, 
In: 
International 
Symposium 
on 
Applied 
Electromagnetics and Mechanics - ISEM 2011, Napoli, p., 1-6, 06-09 
sept. 2011.  
[13] Andrade, J. A. A., Brasil, L. M., et al., “Proposal of Study of Neuro-
Fuzzy Networks for the Applications int the Control of a Transtibial 
Active Prosthesis”, In: XXIII Congresso Brasileiro de Engenharia 
Biomédica (XXIII-CBEB), Porto de Galinhas, oct 2012, 1-3p. (In 
Portuguese). 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
156
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

