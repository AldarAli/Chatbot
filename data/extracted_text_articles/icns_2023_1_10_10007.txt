A Topology Aggregation-based Approach for the
Unsplittable Shortest Path Routing Problem
Hamza Ben-Ammar
Orange Innovation
Rennes, France
email: hamza.benammar@orange.com
Jean-Michel Sanner
Orange Innovation
Rennes, France
email: jeanmichel.sanner@orange.com
Abstract—The Unsplittable Shortest Path Routing (USPR)
problem is one of the optimization problems that has been well
studied in the field of traffic engineering for IP networks due
to its importance for improving the network’s Quality of Service
(QoS). Given a directed graph representing the IP network and a
set of commodities depicting the demands to be sent between its
nodes, the USPR problem consists in identifying a set of routing
paths and the associated administrative weights such that each
commodity is routed along the unique shortest path between
its origin and its destination following these weights. Due to the
NP-hardness of this problem, we propose a topology aggregation-
based approach to solve it, which consists in efficiently aggre-
gating the network’s graph to make the solving process more
scalable. The experimental results show the efficiency of this
proposal in terms of scalability and network’s maximum load
reduction compared to other methods from the state-of-the-art.
Keywords—Traffic engineering; Mixed Integer Linear Program-
ming; Topology Aggregation; Algorithms.
I. INTRODUCTION
With the continuous growth of traffic and the strong re-
quirement for optimizing the use of networks’ resources,
Traffic Engineering (TE) becomes a major requirement of
telecommunication networks. The goal of Traffic Engineering
is to fit traffic flows with networks’ constraints and operators’
requirements. For instance, an objective can be to minimize
the load of some network links to prevent the network from
overload.
Unlike in Multiprotocol Label Switching (MPLS) networks,
which embed some suitable centralized or distributed mech-
anisms for TE, intra-domain TE in Open Shortest Path First
(OSPF) and IS-IS networks using Interior Gateway Protocol
(IGP) based on Shortest Path First (SPF) algorithms is a very
challenging task. This is particularly true if networks managers
want to manage fine-grained internet traffic dynamically with
short time slots.
The routing mechanism implemented in such IGP networks
is based on the computation of the shortest path between
nodes, using as lengths the weights assigned to each link in
the network by the routing protocol. In each router, the next
link on all shortest paths to all possible destinations is stored
in a table. A flow arriving at the router is sent to its destination
by splitting the flow between the links that are on the shortest
path to the destination.
Solving the problem of finding the best and possibly unique
set of weights assigned to each link to guarantee the correct
flow of traffic and to fit some traffic constraints is NP-hard.
It cannot be solved exactly in an acceptable delay when
the network size exceeds some dozen of nodes. When it is
required that each flow should be routed on a unique shortest
path between its origin and its destination, it is called the
Unsplittable Shortest Path Routing (USPR) problem.
The problem is even more difficult when the network is
composed of thousands of nodes, without mentioning the fact
that we can expect to adapt to short delay traffic variations.
An empirical approach proposed by CISCO is to assign
weights inversely proportional to the links capacities. This
way provides a practical traffic engineering solution but it
also provides results far from the optimal, without uniqueness
guarantee for paths flows, and without adaptation to traffic
variations in time.
The framework of telecommunications’ networks is com-
monly characterized as Scale Free because the growing of the
number of edges is sub-linear to the growing of the number
of nodes. They are very often composed with some nodes,
designed as hub, strongly connected with their neighboring
nodes, and connected together with some edges. Telecom-
munications’ networks can also be characterized as sparse
networks because the number of edges is far lower than
the maximum number of links within the network. In the
end, sometimes some nodes or edges can be characterized as
separators because when removed, they split the network in
two parts.
These common features occurring frequently in telecommu-
nication networks suggest that a heuristic to solve some NP-
hard problems like the USPR problem applied to networks
graphs could be designed based on their usage. The principle
would be to simplify the topology by using the structure of
the network and trying to keep some useful properties of the
graph to guarantee that the algorithm will provide acceptable
solutions, in acceptable delays.
In this work, we propose a topology aggregation-based (TA)
approach to solve the USPR problem. The idea is to aggregate
some parts of the network graph to tailor the new graph to
the solver performances applied on a Mixed Integer Linear
Programming (MILP) modelling of the problem. This process
could possibly be done in an iterative way. We conducted some
experimentation on a set of various networks, and we achieved
some promising results. To the best of our knowledge, using
1
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

topology aggregation to tackle the USPR problem has not been
considered in previous studies.
The rest of the paper is organized as follows. In Sec-
tion II, we present state-of-the-art of topology aggregations’
techniques in telecommunications’ networks and of MILP
formulations of the USPR problem. Section III provides the
detailed description of the problem and our proposal. In
Section IV, we present a set of experimental results. Finally,
Section V summarizes the achievements of this paper and
describes future works.
II. RELATED WORK
The shortest path routing problem (splittable and unsplit-
table cases) has been widely studied in the literature [1].
In [2], the authors studied the problem of computing a set
of unique weights enforcing a given set of routing paths.
They then proposed linear programs to solve this problem
and boundaries for heuristics based resolution methods. The
authors in [3] studied the Internet traffic optimization through
OSPF weights setting. They proposed a local search heuristic
which provided good solutions close to the optimal for their
particular network. In [4], a MILP formulation of the prob-
lem’s splittable version was developed using a family of valid
inequalities. The MILP model is solved with a branch and
cut algorithm capable of providing solutions in an acceptable
delay for small networks with a controlled optimality gap. A
local search heuristic is used to initialize the branch and cut
algorithm.
Bley proposed in [5] an integer programming algorithm
for the minimum congestion unsplittable shortest path routing
problem. A general decomposition approach is adopted to
provide a master and a client sub problems, which results in
a significant improvement for small and middle size problems
solving. The authors in [6] studied the delay constrained
unsplittable shortest path routing problem. They extended the
results presented in [5] by adding new valid inequalities,
strengthening the linear relaxation of the problem. Then, they
used this new formulation as a building block to perform a
dynamic programming approach resolution.
Approximating dense graphs by sparse ones or preserving
some useful properties like cuts or spectral representations of
the graph are explored in some papers (for instance in [7]).
The idea is that some algorithms can run faster on the sparse
graph approximation to find good solutions in a reasonable
time. However, there are no reasons that these techniques are
suitable for each problem to be solved on graphs.
Topology Aggregation (TA) for routing purposes in net-
works is a well studied subject in the literature [8]. In [9] and
[10], a TA tutorial for hierarchical routing in ATM networks
containing the basics and conventional methods for topology
aggregation along with performance evaluation of several
aggregation schemes is provided. The authors in [11] analyzed
the impact of TA on different QoS routing algorithms. Multiple
TA methods were used with different networks settings. In
[12], a novel QoS model for topology aggregation in delay-
bandwidth sensitive networks was presented. Later on, several
works [13]–[15] used TA dealing with problems like Virtual
Network Embedding, Service Function Chain Orchestration
and Virtual Network Function placement for scalability or
security issues.
In this paper, we propose a TA-based approach adapted
for solving the Unsplittable Shortest Path Routing Problem,
extending the work presented in [6].
III. PROBLEM STATEMENT AND PROPOSAL
In this section, we present a formal description of our
problem followed by an in-depth look of the proposed solution.
A. Problem description
Let G = (V, E) be a directed graph representing an IP
network where V = {v1, . . . , vM} depicts the nodes of the
network and E ⊂ V × V is the set of links connecting them.
Each node v ∈ V represents a router and each edge e ∈ E
corresponds to a logical link between adjacent nodes u and
v with an associated capacity (bandwidth) denoted by cuv.
We denote by K a set of commodities representing the traffic
demands to be routed between nodes of the graph G. Every
commodity k ∈ K is defined by a pair (sk, tk) where sk and
tk being respectively the origin and destination of k. A traffic
volume Dk ≥ 0 to be routed from sk to tk is affected to each
k ∈ K.
Let’s recall that the USPR problem consists in finding a set
of weights to assign to the graph’s edges that will be used
to generate a set of routing paths such that (i) there is a
unique shortest path for each commodity and (ii) the network
congestion is minimum. The load of an edge uv ∈ E given a
routing configuration R ∈ R(G, K), where R(G, K) depicts
the set of all possible routing configurations of K in G, is the
ratio between the total flow that goes through the edge and its
capacity and it is defined as:
load(R, u, v) =
1
cuv
X
pk∈R:uv∈p
Dk,
where a partial routing path for a commodity k ∈ K in a
graph G is a pair (p, k) denoted by pk (p being a path).
The congestion cong(R) of a routing configuration R ∈
R(G, K) is depicted as:
cong(R) = max
uv∈E load(R, u, v).
It represents the maximum load over all arcs. The goal is
then to minimize cong(R), i.e., minimize the load of the most
loaded link (denoted L).
B. MILP formulation
We define the binary variable xk
e that takes the value 1 if
commodity k is routed along a path containing edge e and 0
otherwise. Let ut
e be a binary variable that takes 1 if e belongs
to a shortest path towards destination t and takes 0 if not. We
further depict wuv as the weight assigned to the edge uv and
ru
v as the potential of node u, which is the distance between
2
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

 N0
 N2
 N1
 N7
 N5
 N4
 N6
 N3
 N2
 N1
 N'0
 N'3
 N2
 N1
w
w
w
w
 N'0
 N'3
 N0
 N2
 N1
 N7
 N5
 N4
 N6
 N3
w
w
w
w
w
w
w
w
w
w
Step 2
TA + TM update
Step 3
Step 4
USPR  
metrics
TM update + USPR metrics
 N0
 N2
 N1
 N7
 N5
 N4
 N6
 N3
Step 1
TA method
Fig. 1. Topology aggregation method for USPR.
nodes u and v. The USPR problem can then be described with
the following MILP formulation [6]:
minimize L
(1)
s.t.
X
e∈δ+(v)
xk
e −
X
e∈δ−(v)
xk
e =







1
if v = sk,
−1
if v = tk,
0
otherwise,
∀v∈V,∀k∈K.
(2)
X
k∈K
Dkxk
e ≤ cuvL, ∀e ∈ E,
(3)
X
e∈δ+(v)
ut
e ≤ 1, ∀v ∈ V, ∀t ∈ T,
(4)
xk
e ≤ utk
e , ∀e ∈ E, ∀k ∈ K,
(5)
ut
e ≤
X
k∈K,tk=t
xk
e, ∀e ∈ E, ∀t ∈ T,
(6)
wuv − rt
u + rt
v ≥ 1 − ut
uv, ∀uv ∈ E, ∀t ∈ T,
(7)
wuv − rt
u + rt
v ≤ M(1 − ut
uv), ∀uv ∈ E, ∀t ∈ T.
(8)
The objective (1) is to minimize the load of the most loaded
link, denoted L. Inequality (2) ensures that a unique path is as-
sociated to each commodity k and (3) expresses the load over
an edge e. Inequalities (4) and (5)-(6) are anti-arborescence
and linking constraints, respectively. In particular, inequality
(4) ensures that there is at most one path traversing any node
v towards a given destination t ∈ T, which is necessarily
implied by Bellman property. Constraints (7) and (8) guarantee
that the weight of any edge used by a shortest path towards
a destination t corresponds to the difference of potentials
between the end nodes of this edge and larger otherwise (a
more detailed formulation with additional valid inequalities
and constraints is presented in [6]).
C. Solving USPR using TA
1) Topology aggregation-based approach: As mentioned
earlier, the USPR problem is NP-hard and using the previously
described formulation to obtain an optimal solution is not
practical in terms of running time and scalability. In this paper,
we propose a topology aggregation-based approach to be used
combined with the MILP formulation to solve the USPR prob-
lem and generate near-optimal solutions efficiently. Topology
aggregation is defined as a set of techniques that abstract or
summarize the state information about the network topology
to be exchanged, processed, and maintained by network nodes
for routing purposes [8]. TA is generally applied for mainly
two reasons: security concerns (hiding the network’s internal
topology) and scalability issues, which represents in this work
our main concern. In our case, we want to use TA in order to
compress the topology information and reduce its complexity
to enable the application of the USPR solver and provide
solutions in reasonable delays.
An overview of the approach proposed is depicted in
Figure 1. The starting point is the network’s topology to be
studied, which is represented by the graph G and a traffic
matrix K containing the set of demands to be routed between
nodes. For sake of simplicity, G in Figure 1 is represented
by a bi-directed graph, but in real networks, the upload
and download links between nodes are separated and can
have different weights. The first step consists in using an
aggregation method (which will be detailed in the next section)
3
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

 N0
 N2
 N1
 N5
 N4
 N3
 N0
 N2
 N1
 N5
 N4
 N3
 N0
 N2
 N1
 N5
 N4
 N3
 N0
 N2
 N1
 N5
 N4
 N3
 N0
 N2
 N1
 N5
 N4
 N3
 N0
 N2
 N1
 N'3
Fig. 2. GNC algorithm.
to select the nodes or the sub-graphs to be merged. Then, a new
graph is generated according to the merged entities created
along with a new traffic matrix where commodities will also
be merged based on the aggregated graph. More specifically,
the source (respectively the destination) of each commodity
will be replaced by the aggregated node if it belongs to one.
The next step now consists on applying the USPR solver on the
newly generated graph to compute the set of different weights
to be assigned to the links. In the next and final step, we adapt
the initial traffic matrix (by keeping in each commodity only
the sub-flows that have not been treated yet) in order to be
able to apply the USPR solver on the aggregated sub-graphs.
At the end, we have a full configuration of weights on all the
links.
Algorithm 1 Aggregation algorithm
1: procedure GNC(Graph G)
2:
List Aggregations ← {}
3:
while E ̸= ∅ do
4:
Calculate betweenness scores for all links in the
graph
5:
Remove from the graph the link with the highest
score
6:
if Disconnected sub-graph G′ forms a clique then
7:
List Aggregations.insert(G′)
8:
end if
9:
end while
10:
return List Aggregations
11: end procedure
2) Topology aggregation method: As we have seen previ-
ously, our goal is to select relevant sub-graphs from the initial
topology to be aggregated. This choice will heavily impact
the generated links’ weights and thus, the network’s maximum
load that we want to minimize. In this paper, we propose a
topology-aggregation method (see Algorithm 1) based on the
Girvan-Newman (G-N) algorithm [16]. The Girvan–Newman
algorithm detects communities by progressively removing
edges from the original graph. The algorithm removes the
“most valuable” edge, traditionally the edge with the highest
betweenness centrality, at each step. The betweenness of a
particular link is determined by computing the shortest paths
for each couple of vertices in the graph representing the
network and counting how many times each link appears on
those shortest paths [17].
During each step of the G-N process and after computing
all the links’ betweenness values, the link having the largest
value is removed. These steps will be repeated until a stopping
condition is reached. Otherwise, the process will result in the
removal of all the links, which reduces the network to its
nodes. A stopping condition can be for instance the number
of communities of a given size. In [16], the authors use the
modularity metric as a quality indicator for the clustering
process. This metric evaluates the partitioning of a graph
by computing the ratio of intra-communities edges to the
number of inter-communities edges (see [16] for details on
the modularity metric’s formula). In our process and at each
link removal step, if an emerging community represented by
a disconnected sub-graph forms a clique, it is aggregated (see
Figure 2). Let’s recall that a clique of a graph G is a sub-
graph that is complete where each node is directly connected
to all the others. In case where no cliques are found, we select
sub-graphs having a maximum diameter of 2, i.e, the length
of the shortest path between the most distanced nodes in the
sub-graph.
In the proposed aggregation process, using the G-N algo-
rithm to form communities will allow us to avoid aggregating
the most valuable edges by removing them progressively from
the network. These links are most likely to carry the maximum
loads and as a result, their abstraction can lead the USPR
solver to increase the overall maximum load. Conversely, the
communities to be aggregated are set up with the less valuable
edges.
IV. RESULTS
We present in this section the experimental results related
to our proposed TA-based approach for solving the USPR
problem.
4
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

TABLE I. NETWORKS TOPOLOGIES CHARACTERISTICS.
Topology
|V |
|E|
|K|
Traffic pattern
Traffic volume
Links capacities
Avg node degree
Abilene
12
30
132
Uniform
Random
Uniform
2.50
Atlanta
15
44
210
Uniform
Random
Random
2.93
Newyork
16
98
240
Uniform
Random
Uniform
6.12
France
25
90
300
Random
Random
Uniform
3.60
Norway
27
102
702
Uniform
Random
Uniform
3.78
Nobel-us
14
42
91
Random
Random
Uniform
2.93
Nobel-ger
17
52
121
Random
Random
Uniform
3.06
Nobel-eu
28
82
378
Random
Random
Uniform
3.00
TABLE II. COMPARISON RESULTS.
Topology
InvCap
IGP-WO
NRPA
GNC
Exec time
GNC
Exec time NRPA
and IGP-WO
Exec time
OPT
Abilene
48.12%
0%
0%
0%
0.3 min
10 min
1 min
Atlanta
54.58%
5.04%
5.04%
36.52% (0%)
2 min
10 min
4 min
Newyork
68.88%
37.77%
44.4%
28.8% (2.22%)
2 min
30 min
> 4320 min
France
70.92%
19.50%
19.50%
60% (15.7%)
1 min
30 min
> 4320 min
Norway
55.55%
7.40%
11.11%
59.31% (18.51%)
3 min
60 min
> 4320 min
Nobel-us
53.51%
2.06%
2.06%
0%
6 min
10 min
58 min
Nobel-ger
43.15%
13.69%
13.69%
9% (6.75%)
1 min
10 min
122 min
Nobel-eu
24.74%
0.28%
0.28%
4.12% (1.31%)
8 min
30 min
1250 min
A. Parameters
The experiments were performed on networks with various
sizes and characteristics taken from SNDlib [18]. The char-
acteristics of the various network graphs tested are shown in
Table I. A traffic pattern is considered uniform if it exists
in K one commodity between each couple of nodes of the
network (otherwise, it is a random one). A uniform traffic
volume means that all the demand in the traffic matrix are
equal (the same definition applies also for links capacities).
Our proposal was implemented in Python using the NetworkX
library for graph-related tasks, and Cplex (with the default
settings) was used for the exact solving of USPR.
We compare our algorithm to the following common ap-
proaches from the literature:
• InvCap: a practical approach suggested by Cisco, this
configuration sets the links weights inversely proportional
to the capacities.
• IGP-WO: proposed in [19], this approach is based on a
local search algorithm using dynamic graph algorithms
to tackle the links’ weights optimization.
• NRPA: in this approach [20], a Monte Carlo Search
algorithm is used to solve the USPR problem through
the application of Nested Rollout Policy Adaptation al-
gorithm.
In order to evaluate the efficiency of our algorithm GNC
and compare it to the other ones, we depict for each approach
the execution time and the maximum load gap relative to the
optimal value obtained by solving the MILP formulation of
the problem using an exact approach OPT (or relative to a
lower bound if no solution is found). The depicted results of
IGP-WO and NRPA in Table II represent the average score of
5 executions as presented in [20].
B. Performance evaluation
The comparison results are shown in Table II. Regarding
the execution time, we can see that GNC performs very well
compared to NRPA, IGP-WO and especially OPT. The impact
of topology aggregation on lightening the heavy computations
to solve the USPR problem is very straightforward. In terms
of maximum load gap, the performance depends on the
tested topology network and its characteristics. For example,
considering the Abilene results, all three approaches achieve
a gap of 0%, which means that they achieve the optimal
value. Looking at Atlanta topology, our algorithm does not
perform well (36.52%) compared to IGP-WO and NRPA
(5.04%). However, if a local search method is applied to the
aggregations list generated by GNC (values reported between
parentheses in GNC column), we can achieve excellent results
(0%). Considering for example (N0, N1, N2) as an initial
aggregation, the local search method employed consists in
replacing one node by another neighbor one (for instance
to obtain (N0, N1, N3)) or add a node to the aggregation
list and check if it improves the obtained results. These
results improvements show the potential of using our TA-based
approach in general and the improvements that can be done by
improving the aggregation level. We obtain similar results with
France and Norway networks where a topology aggregation
configuration can be found to achieve better results. For the
remaining networks, our GNC algorithm outperforms IGP-WO
and NRPA. For now, there is no clear correlation between
5
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

the characteristics of the tested networks and the performance
achieved by our algorithm (even in the case of a traffic matrix
having a uniform pattern). Another point to be highlighted
is that our approach (using the basic version of GNC) is
deterministic compared to IGP-WO and NRPA, where results
may differ with each experimental run.
V. CONCLUSION AND FUTURE WORK
In this paper and in the context of traffic engineering, we
tackle the Unsplittable Shortest Path Routing problem (USPR),
which consists in finding the efficient weights of an IP network
to handle traffics flows. The USPR problem is proven to be
NP-hard and thus, many studies have used meta-heuristics to
solve it. In this work, we propose a novel approach based on
the Topology Aggregation (TA) paradigm in order to solve
an USPR problem instance. The proposal consists of a TA-
based methodology applicable to our use case in which an
approach called GNC based on the Girvan-Newman com-
munity detection algorithm is implemented. The conducted
experiments to evaluate GNC and compare it to other methods
have shown the efficiency and the potential of using a TA-
based method to solve the USPR problem. We intend in the
future to improve our aggregation algorithm and conduct more
extensive experiments to validate our work by testing other
network configurations with challenging settings and analyze
the correlation between the network’s characteristics and the
algorithm’s performance. We also intend to study the delay-
constrained version of USPR.
ACKNOWLEDGMENTS
We want to gratefully thank our colleagues from Orange
Innovation in Rennes Dr. Meryem Ouzzif for proofreading our
paper and Xavier Grall for his help in producing the results
shown in this paper.
REFERENCES
[1] A. Altın et al., “Intra-domain traffic engineering with shortest path
routing protocols,” Annals of Operations Research, vol. 204, no. 1, pp.
65–95, 2013.
[2] W. Ben-Ameur and E. Gourdin, “Internet routing and related topology
issues,” SIAM Journal on Discrete Mathematics, vol. 17, no. 1, pp. 18–
49, 2003.
[3] B. Fortz and M. Thorup, “Internet traffic engineering by optimizing
ospf weights,” in Proceedings IEEE INFOCOM 2000. conference on
computer communications. Nineteenth annual joint conference of the
IEEE computer and communications societies (Cat. No. 00CH37064),
vol. 2.
IEEE, 2000, pp. 519–528.
[4] A. Parmar, S. Ahmed, and J. Sokol, “An integer programming approach
to the ospf weight setting problem,” Optimization Online, 2006.
[5] A. Bley, “An integer programming algorithm for routing optimization in
ip networks,” Algorithmica, vol. 60, no. 1, pp. 21–45, 2011.
[6] A. Benhamiche and M. Chopin, “Toward scalable algorithms for
the
unsplittable
shortest
path
routing
problem,”
arXiv
preprint
arXiv:2006.04324, 2020.
[7] G. Goranci, “Dynamic graph algorithms and graph sparsification: New
techniques and connections,” ArXiv, vol. abs/1909.06413, 2019.
[8] S. Uludag et al., “Analysis of topology aggregation techniques for qos
routing,” ACM Computing Surveys (CSUR), vol. 39, no. 3, pp. 7–es,
2007.
[9] W. C. Lee, “Topology aggregation for hierarchical routing in atm
networks,” ACM SIGCOMM Computer Communication Review, vol. 25,
no. 2, pp. 82–92, 1995.
[10] B. Awerbuch et al., “Routing through networks with hierarchical topol-
ogy aggregation,” Journal of High Speed Networks, vol. 7, no. 1, pp.
57–73, 1998.
[11] F. Hao and E. W. Zegura, “On scalable qos routing: performance
evaluation of topology aggregation,” in Proceedings IEEE INFOCOM
2000. Conference on Computer Communications. Nineteenth Annual
Joint Conference of the IEEE Computer and Communications Societies
(Cat. No. 00CH37064), vol. 1.
IEEE, 2000, pp. 147–156.
[12] K.-S. Lui, K. Nahrstedt, and S. Chen, “Routing with topology aggre-
gation in delay-bandwidth sensitive networks,” IEEE/ACM transactions
on networking, vol. 12, no. 1, pp. 17–29, 2004.
[13] M. Shen et al., “Towards efficient virtual network embedding across
multiple network domains,” in 2014 IEEE 22nd International Sympo-
sium of Quality of Service (IWQoS).
IEEE, 2014, pp. 61–70.
[14] G. Sun et al., “Service function chain orchestration across multiple
domains: A full mesh aggregation approach,” IEEE Transactions on
Network and Service Management, vol. 15, no. 3, pp. 1175–1191, 2018.
[15] C. Morin et al., “Vnf placement algorithms to address the mono-and
multi-tenant issues in edge and core networks,” in 2019 IEEE 8th
International Conference on Cloud Networking (CloudNet).
IEEE,
2019, pp. 1–6.
[16] M. E. Newman and M. Girvan, “Finding and evaluating community
structure in networks,” Physical review E, vol. 69, no. 2, p. 026113,
2004.
[17] L. C. Freeman, “A set of measures of centrality based on betweenness,”
Sociometry, pp. 35–41, 1977.
[18] S. Orlowski et al., “Sndlib 1.0—survivable network design library,”
Networks: An International Journal, vol. 55, no. 3, pp. 276–286, 2010.
[19] G. Leduc et al., “An open source traffic engineering toolbox,” Computer
Communications, vol. 29, no. 5, pp. 593–610, 2006.
[20] C. Dang et al., “Monte carlo search algorithms for network traffic
engineering,” in Joint European Conference on Machine Learning and
Knowledge Discovery in Databases.
Springer, 2021, pp. 486–501.
6
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-052-0
ICNS 2023 : The Nineteenth International Conference on Networking and Services

