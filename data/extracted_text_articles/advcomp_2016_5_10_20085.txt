A Genetic Algorithm Solution for the Doctor Scheduling Problem
Abir Alharbi and Kholood AlQahtani
Mathematics Department, King Saud University, Riyadh, Saudi Arabia
e-mail:abir@ksu.edu.sa , 432201096@student.ksu.edu.sa
Abstract—In this study, we present a genetic algorithm
solution to the scheduling problem for doctors in the Pediatric
Department of Prince Sultan Military Medical City (PSMMC)
in Riyadh Saudi Arabia. The genetic algorithm approach uses
a cost bit matrix where each cell indicates any violation of
constraints. The experimental results show that the suggested
method generated a doctor schedule faster and with less
violated
constrains
compared
to
the
traditional
manual
methods.
Keywords- Doctor Scheduling Problem, Genetic Algorithms, cost
bit matrix.
I.
INTRODUCTION
A hospital providing around-the-clock services divides
its daily work into consecutive shifts, and a shift is a period
of time in which a group of employees is in-service. A doctor
is assigned to a set of shifts, and this assignment satisfies
several
constraints
that
may
be
set
up
by
staffing
requirements, rules by the administration, and labor contract
clauses. In a Doctor Scheduling Problem (DSP), each doctor
is assigned to the set of shifts and rest days in a timetable
called a doctor roster. DSP was proven to be NP-hard even
with only a subset of real world constraints [4]. In the
literature, many research works were done on DSP or the
similar Nurse Scheduling Problem (NSP). Miller et al. [13],
and Warner et al. [14] formulated Nursing Schedule Problem
as the selection of a timetable that minimized an objective
function
that
balanced
the
trade-off
between
staffing
coverage and nurses' preferences. Abdannadher et al. [2],
applied Constraint Logic Program (CLP) framework and Li
et al. [11], employed Bayesian optimization algorithm. Jan
et al. [9], and Aickelin et al. [3] applied the genetic
algorithms (GA) to NSP. Kundu et al. [10] applied genetic
algorithm and simulated annealing to the same problem
instances and compared their performances with others, and
[6] applied coloring graph theory to solve NSP.
In DSP, there are many constraints and there can be
several different instances with different set of constraints. In
this study, we consider the cyclic Doctor Scheduling
Problem with the following constraints. An instance includes
three components:
(l) the personal preference of each doctor to work on
particular days and shifts,
(2) the minimal coverage constraints of the minimal
required number of doctors per shift and per day,
(3) the case-specific constraints specified by personal
time requirements, specific workplace conditions, etc.
The objective of this problem is to satisfy doctors'
requests as much as possible while fulfilling the employers'
requirements. In this paper, we apply a genetic algorithm
with a cost bit matrix that penalizes the solution of the DSP
if the constrains are violated, and hence find a schedule
solution that optimizes the doctors’ roasters and satisfies the
constraints. In the next section, we will briefly introduce the
genetic algorithms, DSP, its cost function, and the cost bit
matrix. In Section III the GA results are discussed. Finally,
conclusions and future work are discussed in Section IV.
II.
GENETIC ALGORITHMS
Genetic Algorithms (GA) are adaptive heuristic search
algorithms [12] premised on the evolutionary ideas of natural
selection and genetics. The basic concepts of the GA were
designed to simulate those processes in natural evolution
system, and survival of the fittest. GA are a powerful tool to
solve optimization problems with multiple variables [1][7].
GA
were
applied
to
several
scheduling
problems
[3][5][8][9]. GA use a search algorithm to simulate the
process of natural selection. GA start with the set of potential
solutions called population and evolves toward more optimal
solutions. The solutions are evaluated by a fitness function.
The fitness value represents the quality measure of a solution
so that the algorithm can use it to select ones with better
genetic material for producing new solutions and further
generations. The selection chooses superior solutions in
every generation and assures that inferior solutions become
extinct. The crossover operator chooses two solutions from
the current population and generates a new solution based on
their genetic material. Selection and crossover operators will
expand the good features of superior individuals through the
whole population. They will also direct the search process
towards a local optimum. The mutation operator changes the
value of some genes in a solution and helps to search other
parts of the problem space. The main disadvantage of GA is
the requirement for a large computation time.
A.
Doctor Scheduling Problem
DSP consists of creating weekly or monthly schedules for
N doctors by assigning one out of a number of possible shift
patterns to each doctor. These schedules have to satisfy
working contracts and meet the requirements for the number
91
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

of doctors of different grades for each shift, while being seen
to be fair by the staff concerned. Therefore, DSP is
essentially a scheduling problem that suits a number of
constraints. The constraints are usually categorized into two
categories: soft and hard constraints. Hard constraints should
always be satisfied in any working schedule so that there will
be no breaches. Any schedule that does not satisfy all of the
hard constraints cannot be a feasible one. Possible examples
include restrictions on the number of doctors for each shift;
the maximum number of shifts in a week, a month, etc. On
the contrary, soft constraints can be violated but as minimal
as possible. In other words, the soft constraints are expected
to be satisfied, but violation does not make it an infeasible
solution. We confined the constraints as follows:
(a) Hard constraints
(i) There are constraints on the number of doctors for
each working shift per day. The number of doctors for
morning, evening, and night shift should be between the
minimum and maximum values.
(ii) There are constraints for the working patterns.
Morning after night shift, evening after night, morning after
evening shift and three consecutive night shifts are restricted
combination of working patterns.
(b) Soft constraints
There are constraints for the total number of off-days (o),
night (n), morning (m) and evening (e) shifts during a certain
period of days for each doctor.
In this project, we consider a scheduling problem for the
Pediatric Department of Prince Sultan Military Medical City
(PSMMC) in Riyadh/ Saudi Arabia. Monthly doctors’ rosters
are made manually before the end of each month. Figure 1
shows original hospital roasters for the month of February
2016. Even though making monthly rosters manually
required great effort and time, it did not resolve all conflicts,
and sometimes it had created more tedious adjustments to
accomplish needed tasks. There are consultants, senior and
junior doctors working in this department. This project is
concerned with scheduling shifts for junior doctors in two of
the department wards for one month only. A major problem
with any scheduling problem is the allocation of resources in
an effective way, and violating constraints will be affecting
the quality of the solution.
B.
The Cost Function
We
have
to
define
a
cost
function
which,
after
optimization, will obtain optimal schedules for each doctor.
Let N, D be the number of doctors and days. Then, DSP may
be represented as a problem to find a schedule matrix, so that
each element of the matrix, Xij expresses that doctor i works
on day j where Xij =(m e, n, o).
(a) To evaluate the violation of hard constraint (i), we define
m, e, n as the total number of doctors for morning, evening,
and night shift on day j. If any of these numbers are not
between the minimum and maximum number of doctors for
each shift (mmin, mmax, emin, emax, nmin, nmax), cost C1
will be incremented by l.
(b) To evaluate the violation of hard constraint (ii), working
patterns are examined. Any violation of the working patterns
specified (such as n after m, e after n, m after e, or
consecutive n, n, n) will increment cost C2 by l.
(c) To evaluate the violation of soft constraint, we define M,
E, N, O as the total number of the corresponding shifts,
morning, evening and night and off-days for doctor i during
the period of D and Mreq , Ereq, Nreq, Oreq as the required
number of morning, night and night shifts and off-days for
all doctors during the period of D. If any of these numbers
M, E, N, O does not meet, Ereq, Nreq, Oreq respectively,
cost C3 will be incremented by 1.
Different weight values can be assigned for the costs Cl,
C2 and C3. Then, the final cost function is
f= C1*w1 + C2*w2+ C3*w3
where wI, w2 and w3 are weight values for Cl, C2 and C3,
respectively. Our goal is to minimize the cost function f so as
to find an optimal doctor schedule. The simplest method to
find the solution is a brute force approach (manually)
evaluating all possible doctor schedules and finding the
feasible one with the minimum cost among them. However,
if the number of all possible doctor’s increase, this approach
is intractable. This is a class of problems schedules for which
it is believed that no efficient algorithm exists, called NP-
hard. In other words, the algorithms that guarantee to find an
optimal solution with the size of D and N in reasonable time
may not exist. To overcome this problem, we use a genetic
algorithm which is an approximation algorithm. GA provide
an approximate solution rather than an optimal one in
acceptable time.
C.
GA Paramreters for Selction and Crossover
The initial population (n), are the first n schedules for
doctors that are NxD matrices, is generated randomly
assigning each doctor to one of the three shifts with a day-off
on each day, Table I shows a sample of a week schedule for
5 doctors (a 5x7 matrix). The costs of these schedules are
calculated by cost functions Cl, C2 and C3. The method of
selection in this study, is the roulette wheel selection that is
the most common type of selection method. Two schedules,
P1 and P2, are chosen randomly based on their costs and are
used to produce an offspring. One schedule can be selected
for a parent more than once. The crossover between the two
chosen parents genome is done at a single point randomly
chosen with probability 0.8 to produce the new generation
offspring, and with 0.01 Mutation rate. The remaining initial
92
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

parameters are set as given by the PSMMC hospital for Feb
2016, N=24, D=29, mmin=8, mmax=10, emin=6, emax=10,
nmin=6, nmax=10, and soft constrains for each week
Mreq=Ereq=Nreq=2, and Oreq=1. The method was activated
to reach an optimum cost=0 (f=0) using Matlab genetic
algorithm toolbox with Intel Core ™ i5-250M 2.5 Ghz CPU
and 4GB.
TABLE I. SAMPLE WEEK OF HOSPITAL SCHEDULE FOR 5 DOCTORS
Doctor
M
T
W
TH
F
S
SU
1
m
e
n
o
m
m
n
2
e
m
m
n
o
m
n
3
n
n
o
m
e
e
e
4
m
m
e
e
n
o
m
5
e
e
e
n
m
n
o
III.
GA RESULTS
The genetic algorithm started with a population size of 60
individuals, with the size of each genome NxD matrix (24
doctors for 29 days). The algorithm terminates when the
maximum number of generations reaches 300, or when the
increase in fitness of the best individual over five successive
generations falls below a certain threshold, set at 2 × 10-6.
Our fitness function f is set to the final cost function as f=
5C1 + 5C2 + C3, which penalizes systems violating the
constrains
with
the
assigned
weights.
The
GA
runs
throughout the generations to find the best genome in this
population. The best genome is the one, which violates the
least number of constrains. After all 300 generations
(repeated 50 times), the genetic algorithm finds the optimum
genome; hence, it finds the best doctor schedule table which
violates the least constrains. The proposed GA results are
compared to the hospital manual roaster tables derived from
Fig. 1. Table III shows the incident matrix for the 24 doctors
in PSMMC for the month of February, 2016. Fig. 2 shows
the GA results as plots of the best fitness value over the
generations, and average distance between individuals for
the 4 weeks. The best doctor schedule produced from the GA
is given in Table IV. Table II shows a comparison of the
performance results of the two methods. Both methods
solved each of the given problem instances and the results
did not violate any of hard constraints in all periods. GA
generated schedules with optimal cost in all periods, also, the
optimal costs from GA is smaller than that of the manual
tables. The average execution time of GA is around 3.45
minutes which is much faster than those of manual tables
which takes a few hours to accomplish. Hence, GA are very
effective compared to traditional manual methods based on
on time and least constrains violation.
TABLE II. COMPARISONS OF GA AND TRADITIONAL HOSPITAL SCHEDULE
T (min)
fopt
Method
period
2.6
2
GA
1week
7
Manual
3.2
5
GA
2weeks
11
Manual
3.75
4
GA
3weeks
12
Manual
3.96
3
GA
4weeks
10
Manual
IV.
CONCLUSION AND FUTURE WORK
In this paper, we proposed a Genetic Algorithm approach
with a cost bit matrix to solve a DSP in PSMMC hospital.
The genetic algorithm found solutions satisfying all the
constraints. This approach generated a doctor schedule faster
in speed and better in quality than traditional manual
methods. Although we have presented this work in terms of
doctor scheduling, it should be noted that the main idea of
the approach could be applied to many other scheduling
problems. Future research aims at experiments on the nurse’s
schedule in PSMMC hospital with more constraints and a
diversity of requirements. Our future plans also include
producing a software that helps hospitals design schedules
with their constrains for their doctors and nurses with simple
inputs and less time to avoid manual schedule making.
ACKNOWLEDGMENT
This research project was supported by a grant from the
“Research Centre of the Female Scientific and Medical
Colleges”, Deanship of Scientific Research, King Saud
University.
REFERENCES
[1]
Alharbi A, Rand W, Rolio R , et al (2007), Understanding the
Semantics of Genetic Algorithms in Dynamic Environments
A case Study Using the Shaky Ladder Hyperplane-Defined
Functions,
Workshop
on
Evolutionary
Algorithms
in
Stochastic and Dynamic Environments, incorporated in Evo
Conferences Valencia, Spain.
93
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

[2]
S. Abdennadher and H. Schienker, “Nurse Scheduling using
Constraint Logic Programming”, Proc. AAAI ‘99/IAAI ‘99,
(1999), pp. 838-843.
[3]
U. Aickelin and K. A. Dowsland, “An indirect Genetic
Algorithm for a Nurse-Scheduling Computers & Operations
Research, vol. 31, no. 5, (2004) April, pp. 761-778.
[4]
U. Aickelin and K. A. Dowsiand, “Exploiting Problem
structure roistering problem”, Journal of Scheduling, vol. 3,
(2000), pp. 139-153.
[5]
A. Brezulianu, F. Monica and F. Lucian, “A Genetic
Algorithm Approach for a Constrained Employee Scheduling
Problem as Applied to Employees at Mall Type Shops”,
IJAST, vol. 14, (2010), pp. 1-14.
[6]
A. Gideon, A Nurse Scheduling Using Graph Coloring.
Master thesis submit- ted, Mathematics Department, Kwame
Nkrumah University, Ghana, 2013.
[7]
D. E. Goldberg, “Genetic Algorithms in Search, Optimization
and Machine Learning”, Addison Wesley (1989) .
[8]
H. Heidari and A. Chalechale, “Scheduling in Multiprocessor
System Using Genetic Algorithm”, IJAST, vol 43, (2012),
pp.81-94.
[9]
A. Jan, M. Yamamoto and A. Ohuchi, “Evolutionary
Algorithms for Nurse Scheduling Evolutionary Computation,
2000. Proc. The 2000 Congress, (2000), pp. 196-203.
[10] S. Kundu, M. Mahato, B. Mahanty and S. Acharyya,
“Comparative Performance of Simulated Annealing and
Genetic Algorithm in Solving Nurse Scheduling Problem”,
Proc. Int’l Multi Conference of Engineers and Computer
Scientists 2008 1, (2008) January, pp. 1-5.
[11]
J. Li and U. Aickelin, “A Bayesian Optimization Algorithm
for the Nurse Scheduling Evolutionary Computation, 2003.
In: CEC ’03.
[12] Michalewicz , Z. Genetic Algorithms +Data Structures=
Evolution Programs, 3rd edition, Springer-Verlag, (1996).
[13] H. E. Miller, W. P. Pierskalla and G. J. Rath, “Nurse
Scheduling using Mathematical Programming,”Operations
Research, vol. 24, no. 5, (1976), pp. 857-870.
[14]
D.
M.
Warner
and
J.
Prawda,
“A
Mathematical
Programming Model for Scheduling Nursing Personnel in a
Hospital”, Management Science, vol. 19 (4-Part-1), (1972)
December, pp. 411-422.
94
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

Department of Paediatrics
Paediatric ICU Team
Division Mobile: 0504585767
Febrauary 2016
1-6 PICU On- call Team A
08:00-08:00
3-1 PICU service Team B
08:00 – 16:00
PRRT & Transportation 08:00-08:00
Team C
Date
Day
Consultant
Fellow /
Registrar
Resident
Consultant
Fellow
Registrar/Resident
Consultant
Fellow /Registrar
1
Mon
Chehab
Rizwan
ELGAWHARAH
Mohaimeed
Rizwan
NOUR S
Mohaimeed
Rizwan
2
Tues
Chehab
Warwar
QASSIM
Mohaimeed
Rizwan
NOUR S
Mohaimeed
Rizwan
3
Wed
Chehab
Yacoub
M. ASIRI
Mohaimeed
Rizwan
NOUR S
Mohaimeed
Rizwan
4
Thu
Mohaimeed
Inayat
GRACE
Mohaimeed
Inayat
GRACE
Mohaimeed
Inayat
5
Fri
Mohaimeed
Rizwan
TAGHREED
Mohaimeed
Rizwan
TAGHREED
Mohaimeed
Rizwan
6
Sat
Mohaimeed
Ahmed
ELGAWHARAH
Mohaimeed
Ahmed
ELGAWHARAH
Mohaimeed
Ahmed
7
Sun
Thabet
Warwar
AMAL
Bafaqih
Warwar
MALIK
Bafaqih
Warwar
8
Mon
Thabet
Yacoub
NADA ALHARBI
Bafaqih
Warwar
MALIK
Bafaqih
Warwar
9
Tues
Thabet
Inayat
RAED
Bafaqih
Warwar
MALIK
Bafaqih
Warwar
10
Wed
Thabet
Rizwan
BODOUR
Bafaqih
Warwar
MALIK
Bafaqih
Warwar
11
Thu
Bafaqih
Yaser
MUJAHID
Bafaqih
Yaser
MUJAHID
Bafaqih
Yaser
12
Fri
Bafaqih
Warwar
NADA
Bafaqih
Warwar
NADA
Bafaqih
Warwar
13
Sat
Bafaqih
Yacoub
ESRAA M
Bafaqih
Yacoub
ESRAA M
Bafaqih
Yacoub
14
Sun
Mohaimeed
Inayat
EBTISAM
Chehab
Inayat
HAMDAN
Chehab
Inayat
15
Mon
Mohaimeed
Rizwan
TAGHREED
Chehab
Inayat
HAMDAN
Chehab
Inayat
16
Tues
Mohaimeed
Yaser
NADA
Chehab
Inayat
HAMDAN
Chehab
Inayat
17
Wed
Mohaimeed
Yacoub
QASSIM
Chehab
Inayat
HAMDAN
Chehab
Inayat
18
Thu
Thabet
Ahmed
ESRAA M
Thabet
Ahmed
ESRAA M
Thabet
Ahmed
19
Fri
Thabet
Inayat
MUJAHID
Thabet
Inayat
MUJAHID
Thabet
Inayat
20
Sat
Thabet
Warwar
SARAH F
Thabet
Warwar
SARAH F
Thabet
Warwar
21
Sun
Bafaqih
Rizwan
RAED
Thabet
Yaser
Abdullah S
Thabet
Yaser
22
Mon
Bafaqih
Ahmed
TAGHREED
Thabet
Yaser
Abdullah S
Thabet
Yaser
23
Tues
Bafaqih
Inayat
AMAL
Thabet
Yaser
Abdullah S
Thabet
Yaser
24
Wed
Bafaqih
Warwar
QASSIM
Thabet
Yaser
Abdullah S
Thabet
Yaser
25
Thu
Chehab
Rizwan
NADA ALHARBI
Chehab
Rizwan
FATIMAH
Chehab
Rizwan
26
Fri
Chehab
Yacoub
EBTISAM
Chehab
Yacoub
HALA
Chehab
Yacoub
27
Sat
Chehab
Yaser
MUJAHID
Chehab
Yaser
NADA ALHARBI
Chehab
Yaser
28
Sun
Chehab
Inayat
QASSIM
Mohaimeed
Ahmed
Yosef
Mohaimeed
Ahmed
29
Mon
Chehab
Warwar
M. ASIRI
Mohaimeed
Ahmed
Yosef
Mohaimeed
Ahmed
Figure 1.
Example of a Hospital Manual Doctor schedule.
Figure 2.
GA results showing the average distance between the indivisuals, and the best fitness value for 4 weeks.
95
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

TABLE III. THE HOSPITAL INCIDENT MATRIX FOR DOCTORS WORKING IN SAME GROUP AND WARD FOR N=25.
R 31
R 41
R 11
R 15
R 24
S U B 1
R 32
R 42
R 12
R 21
R 25
S U B 2
R 33
R 43
R 13
R 22
R 26
S U B 3
R 34
R 44
R 14
R 23
R 27
S U B 4
R 31
R 41
R 11
R 15
R 24
S U B 1
R 32
R 42
R 12
R 21
R 25
S U B 2
R 33
R 43
R 13
R 22
R 26
S U B 3
R 34
R 44
R 14
R 23
R 27
S U B 4
96
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

TABLE IV. GENETIC ALGORITHM BEST DOCTOR SCHEDULE N=24, D=29.
Dr
#/d
ay
1
2
3
4
5
6
7
8
9
1
0
1
1
1
2
1
3
1
4
1
5
1
6
1
7
1
8
1
9
2
0
2
1
2
2
2
3
2
4
2
5
2
6
2
7
2
8
2
9
1
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
2
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
3
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
4
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
5
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
6
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
7
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
8
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
9
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
10
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
11
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
12
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
13
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
14
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
15
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
16
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
17
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
18
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
19
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
20
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
e
e
n
m
n
o
e
21
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
e
n
o
m
m
n
m
22
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
m
m
n
o
m
n
e
23
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
n
o
m
e
e
e
n
24
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
m
e
e
n
o
m
m
97
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-506-7
ADVCOMP 2016 : The Tenth International Conference on Advanced Engineering Computing and Applications in Sciences

