Vitalizing Local ICT-industry by Acceleration of FLOSS-based Software Product
Development: A Case Study of the ICT-industry in Okinawa
Jun Iio
Mitsubishi Research Institute, Inc.
Chiyoda-ku Tokyo, Japan
iiojun@mri.co.jp
Yasuyuki Minei
OCC Corporation
Urasoe Okinawa, Japan
minei@occ.co.jp
Masato Kubota
E-Sir, Inc.
Naha Okinawa, Japan
kubota@e-sir.co.jp
Kazuhiro Ooki
NEC Corporation
Minato-ku Tokyo, Japan
ooki kazuhiro@bc.jp.nec.com
Abstract—Occupational condition differentials between ma-
jor enterprises in areas around central Japan and small-
medium-enterprises in rural area are caused by hierarchical
structure in Japanese industries on the information com-
munication technologies (ICT). In order to remove this in-
adequate situation, we have drawn a blueprint to reform
the ICT-industry by proposing a reference model to develop
Free/Libre/OpenSource-based software products and a system
that can support the development. The system has been imple-
mented in an organization to help the local ICT-enterprises in
Okinawa and the reference model is also now provided by that
organization. This paper reports an outline of the system and
that of the reference model. A result of test-run of software
products development along with the reference model, using
the support system, is also shown in this paper.
Keywords- OSS-based software products; local ICT-industry;
development support.
I. INTRODUCTION
The industrial structure of the information and commu-
nication technologies (ICT) industry in Japan is similar
to that of construction industry. That is, it is organized
in a pyramid structure, where a main contractor exists at
the top of the hierarchical structure. In the pyramid, not
only sub contractors but also sub-sub contractors, and often
much deeper degree of contractors can be members of the
hierarchical structure. In such an industrial structure, only
contractors in upper layers have opportunities to perform
creative activities, because they play roles in upper pro-
cess, such as requirement analysis and/or system conceptual
design. Small-medium enterprises (SMEs) located at the
bottom of the hierarchical structure are usually associated
with lower process of system development. Hence, they
mainly take charge of coding or relatively smaller unit-
function development, and tend to accept relatively non-
challenging work.
The occupational condition differential between major en-
terprises in the Tokyo area and SMEs in rural areas is caused
by these hierarchical structures of Japanese ICT-industry. To
eliminate these differentials and to vitalize the local ICT-
industry, this industry structure should be modiﬁed, or more
speciﬁcally, it should be corrupted and restructured. In order
to break the dependencies in the hierarchical structure, it is
important for bottom members to have their own products.
As the ﬁrst step to rebuild the structure, we have designed a
reference model of work process to develop Free/Libre/Open
Source Software (FLOSS) based products and a development
support system for the SMEs in the rural ICT-industries.
The ICT-industry in Okinawa is also embedded in this
typical problematic pyramid structure. In the ICT-industry
in Okinawa, many of ICT-enterprises are SMEs and main
customers of them are sub contractors and/or sub-sub con-
tractors in a large project. They seldom close a contract with
neither user enterprises nor public sectors directory. That is
one of the reasons why the ICT-related SMEs in Okinawa
have an occupational wage problem. Three years ago, we
have drawn a blueprint of an organization for industrial
reform to solve this problem. This organization is now
realized as an institute, named Ryukyu software business
support center.
II. OKINAWA SOFTWARE DEVELOPMENT
ACCELERATION PROJECT
Based on the blueprint, “Okinawa software development
acceleration project” has been conducted from the ﬁscal year
2009. The aim of this project was to transform the local
ICT-industries in Okinawa from commission-based business
model into production-based business model. Because the
production-based business can help SMEs to make contract
directly with end-users, this transformation was considered
to be needed to vitalize the local ICT-industries.
The goal of the project was to establish the standardized
software development method based on FLOSS project and
to implement the supporting system environment which
developers were able to utilize for developing their software
products. These functions are consolidated in the Ryukyu
software business support center in order to develop their
own software product based on FLOSS and its resources.
A. Background and Objective
In the Internet, there are varieties of software database
called “FLOSS repository,” where many FLOSS projects are
registered by developers from FLOSS communities. Such
software can be used with no expense. Furthermore, we
362
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

Figure 1.
An overview of the Okinawa software development acceleration project and activities around the Ryukyu software business support center
located at the center of this ﬁgure.
can use, modify, and redistribute freely under the condi-
tion of licenses bundled with software. Many of FLOSS
are equipped attractive functions for users and they have
potential capacity to be commercial software products. How-
ever, there is always a possibility that the software quality
of FLOSS cannot satisfy appropriate level as commercial
product. For example, it can be considered hard to use for
novice users due to lack of install-function to install software
into different environment, non-Japanese messages shown
by non-internationalized software prevent average Japanese
users from operating the software easily, and so on.
In our project, we have established the reference model
of work process to develop FLOSS-based software products,
which has several steps starting with searching FLOSS,
screening, evaluating, and applying internationalization in-
cluding localization, if needed. We designed not only the
reference model but also implementation of the system
environment that can be used to support the work process
of software development. In addition, the framework for
operating these systems efﬁciently was considered. These
services can be provided to ICT-enterprises in Okinawa
prefecture by Ryukyu software business support center so
that the ICT-industry in Okinawa will be vitalized and be
activated.
B. Overview of the Project
This framework is expected to help the ICT-enterprises
in Okinawa to acquire material as the basis of software
product development, several data, and other resources. ICT-
enterprises in Okinawa can put extra effort only to develop
additional functions that are considered to be needed in order
to suit it as their software product. This framework supports
ICT-enterprises to accelerate their software development
much rapidly and efﬁciently, that results in an establishment
of effective software business infrastructure in the local ICT-
industry.
A basic concept of the project is shown in Figure 1. It
also illustrates a series of validation processes, an overview
of supporting system, and an image of acceleration of soft-
ware development by participants from the ICT-industries in
Okinawa. The whole validation process contains screening,
evaluating, testing, internationalizing, and localizing.
III. SUPPORT SYSTEM AND REFERENCE MODEL OF
PRODUCT DEVELOPMENT
The system environment for the FLOSS-based software
product development and the reference model are explained
in this section.
A. Support System for FLOSS-based Software Product De-
velopment
Ryukyu software business support center provides its
working guidelines for FLOSS-based software development,
and members of the center can use the supporting system
for their development activities, which is implemented in the
center.
363
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

Figure 2.
An overview of the software development support system
provided by the Ryukyu software business support center.
An overview of the system is shown in Figure 2. The
system is roughly divided into two parts. The public part
of the system shown in the left half of the Figure 2 can be
accessed by everyone via the Internet and the restricted part
of the system shown in the right half of the Figure 2 can be
accessed by authorized members, which are ICT-enterprises
in Okinawa prefecture. In either case, user has to access “the
web portal” at ﬁrst.
Main content of the public part consists of a catalogue
and demonstration function for software products which
are developed and offered by ICT-enterprises in Okinawa.
The information provided only by the software catalogue is
considered insufﬁcient to present a whole image of software;
thus demonstration system is prepared so that user can
ﬁgure out usability of the software as a practical manner.
Optionally, software can be exhibited by operation movies.
Restricted part of the system helps ICT-enterprises to
develop their software products which can be registered
into the software catalogue. Firstly users have to log into
“development portal” and then carry on process manage-
ment, member assignment and progress management, using
the project management function that is implemented within
the restricted part of the system. For the practical work in
software development process, developers can use working
environment for their software product development. For
the evaluation, internationalization, and localization process,
users can access adjunctive environment provided as a func-
tion of the system. Results of development are registered into
product material database. After the registration of product
materials, if some ICT-enterprises proceed with additional
development by themselves and decide to make a sale
of the software as their own products, they can register
Figure 3.
Work steps in the FLOSS-based software product development
project, begin with marketing process and end with registering materials
into portal database.
their products into the product catalogue and demonstration
environment and they will be public to the consumer.
B. Reference Model of Work Process
Participants in the FLOSS-based software product devel-
opment project execute tasks up to the work steps shown in
Figure 3.
Before starting the software product development process,
a person in charge conducts market research to make clear
that what type of software is required and what type is not
required. This market survey is conducted on a regular basis
to catch up with market trends. The result of the market
research would be used for deciding what area should be
focused on and which software should be tailored as a soft-
ware product by each enterprise. This decision is made in the
ﬁrst product planning step. Next step is to extract FLOSS-
based product candidates. To ﬁnd the candidates, FLOSS
repositories such as SourceForge.net will be explored. In
this step, at least ﬁve or more FLOSS projects should be
selected, because these candidates will be ﬁltered at the
following steps and will be dropped depending on results
of successive evaluations.
The software quality of each candidate is roughly es-
timated in the screening process, from the standpoint of
development stability, the number of current users, activity
of its community, and so on. In this step, every evaluation
is judged by their information delivered from the web-
site of the candidate projects. Note that FLOSS installation
and/or source-code analysis are not required. These practical
evaluations are performed in the subsequent evaluation step.
The second product planning step that is optional will be
conducted. In this step, what problems will be faced with
in the process of making FLOSS into software products is
discussed. The decision whether this action is taken or not
is depending on business strategies of ICT-enterprises. From
a practical perspective, this step will be started after the
screening process, and it will be being performed simulta-
364
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

neously with the other subsequent processes.
The FLOSS candidates ﬁltered by the screening step are
subjects of evaluating-and-test step. In this step, software
quality and license condition are investigated in details. Es-
pecially in desktop applications, localization is an important
issue for the end-users. If FLOSS is not internationalized
nor localized for Japanese, it is not familiar with Japanese
users. Validating whether the software is internationalized
and localized for Japanese or not is very important for
the Japanese users. This work will be done in testing
requirement for the internationalization and localization step.
Finally, development process will be shifted into compre-
hensive decision making phase. In this step, possibility of the
attractive software products with the candidates is examined
based on the results of the sequential steps of screening,
evaluating, and considering the needs of internationalization
and localization. The results are registered into the database
if the candidates have some possibilities to make a business
contract. In a practical sense, the development requires
several developing steps on the internationalization and lo-
calization for the Japanese users. After that, considering the
second product planning step, developed software products
can be published via the web portal in the public part of the
system.
IV. EVALUATION OF THE SYSTEM AND OPERATION
For the purpose of validating the efﬁciency of the system
and reference model of operation, preliminary test-run was
designed and conducted from the middle of December 2010
to the end of February 2011.
The trial validation was conducted along with following
steps:
1) Interviews with key persons in higher educational
institutes in Okinawa
2) Workshop on the overview of the test-run
3) Workshop on the practical work in the marketing step
4) Workshop on the practical work in the screening step
5) Workshop on the practical work in the evaluation-and-
test step
6) Workshop on the practical work in the international-
ization and localization step
7) Brieﬁng session on how to operate the Protex IP to
check licensing issues
A. Implementation Structure of the Validation
The trial had twenty two participants from eight com-
panies that are the member companies of this project. All
participants were divided into ﬁve groups in order to evaluate
the proposed system and the working model.
There were two types of groups; the one was single-
membered group and the other one was hybrid group.
“Single-membered” represents that all the members in the
group work for the same company and they work in the same
ofﬁce. On the other hand, the members in the hybrid group
Table I
THE SCREENING RESULTS OF THE TEST-RUN.
FLOSS
Score in the screening step
Result
magento
41
NG
prestashop
70
OK
zabbix
59
NG
Simple Groupware
51
NG
Open Atrium
55
NG
Concursive
38
NG
]project-open[
60
OK
vtiger CRM
63
OK
ERP 5.0
36
NG
were gathered from different companies. In addition, design-
ers in charge of each step of the reference working model
were participated in the training phase of the trial validation,
as lecturers teaching the details of each procedure.
The reason why these two types of working groups is
because the Ryukyu software business support center is
located in the rural area of Okinawa and it is far from
Naha, the central region of Okinawa prefecture. Thus many
of engineers will use the system remotely, and sometimes
they will work in cooperation. The hybrid group can be
considered as an emulation of practical use of the functions
provided by the support center.
Table I illustrates the results of the screening process
during the test-run. Scores were calculated from 0 to 100 in
conformity with evaluation criteria in the screening process.
At the end of this procedure, the ﬁnal result was decided
to OK if evaluation score is 60 or over. On the other hand,
if the ﬁnal score was under 60, which is the case of NG
in the Table I, evaluation process for the FLOSS candidate
stopped.
After ﬁnishing the test-run, only the “prestashop” shown
in the Table I has been reached to the ﬁnal judgement and
the other factors has increased its ﬁnal score up to 74 points,
which results in the conclusion that it has possibility to be
a software product sold by the ICT-enterprise in Okinawa.
Note that ERP 5.0 got lower score than expected. The reason
of the low score is considered that the software has been
already famous enough in Japan and there is a company
supporting localization and promotion for the software in
Japan. That is, ERP 5.0 has already been well-suited for
Japanese market and there seems no room for developing in
our project. Thus, the score of ERP 5.0 is relatively low.
Participants in this validation process have contributed
their comments to improve the reference model and sup-
porting system.
Followings are selected reviews:
• Although there are many difﬁcult points to be not able
to make a decision in each process, appropriate advices
from instructor help me to solve the questions.
• I did not have opportunities to evaluate the tools pro-
365
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

vided in the evaluation-and-test process, because the
period of validation process was too short.
• It can be difﬁcult unless the participants in the evalua-
tion process have enough skills.
• The idea and method to narrow the list down to
effective products are considered valuable when we
have to struggle with FLOSS projects in the future.
V. RELATED WORK
Many FLOSS and its community evaluation methods have
been proposed so far, like Open BQR[1], Open Source
Maturity Model (OSMM)[2], method for Qualiﬁcation and
Selection of Open Source software (QSOS)[3,4], Open BRR
(Business Readiness Rating for Open Source)[4], SQO-OSS
Quality Model[5], and QualiPSo[6]. Evaluation criteria used
in our screening process are based on a mixture of the
criteria deﬁned in those evaluation methods.
In our evaluation-and-test process, check items are
arranged in accordance with the international standard,
ISO9126[7] quality standards. As described in this standard,
the operator works on checking three categories of the
software quality: inner quality, outer quality, and quality-in-
use. The inner quality and the outer quality are separately
deﬁned as six quality features and twenty seven sub-quality
features. Also the quality-in-use is deﬁned as four quality
features.
The evaluation-and-test process has an additional function
to verify the risk of license violation. According to Monden
et al.[8], about ten percent of FLOSS has contained reused
code in its source code. To avoid GPL violation, it should be
conﬁrmed that the software product does not have any GPL
contaminated code. Thus, Black duck software’s Protex IP
has been introduced in order to make sure of compliance
with the FLOSS licenses.
VI. CONCLUSION
In this paper, the reference model and the system for
developing software product based on prospective FLOSS
are described. The model and the system are provided by
the Ryukyu software business support center in order to
transform the structure of the local ICT-industry in Okinawa.
Implementing the system using well-known FLOSS, such
as MySQL, Track, PHP, Zend, and Subversion, has reminded
us that the FLOSS products were helpful to construct a
speciﬁc system quickly and efﬁciently. With the help of
these FLOSS products, we could develop the highly practical
system in a short development period. The system has
also its web-based user interface and it is provided by the
combination of Linux, Apache, MySQL, and PHP; that is
the LAMP system. The decision to use LAMP stack resulted
in quick development and stable operation at present.
In the reference model using the system, working pro-
cesses for screening and evaluating FLOSS products are
needed to be managed by administrators. However, since
those processes are complicated enough and there has some
room to modify in instruction of the working process, those
two working processes have been designed as independent
on the system.
Practically, the reference model is described with two
documents. One is system operation manual and the other
is a guidance document on the reference model. Several
methods were discussed and reﬁned through the design of
the reference model; it is composed of a method to focus on
a speciﬁc area in the software classiﬁcation as market survey,
a method to extract FLOSS according to the result of the
market survey, a method to apply screening process onto
FLOSS candidates, a method to derive evaluation items in
accordance with the (sub-) quality features that are suitable
to validate the candidate software, and so on.
Regular operations of the Ryukyu software business sup-
port center have just started after preliminary discussion
phases. The ICT-enterprises in Okinawa prefecture should
bring forward their activities on developing their own soft-
ware products with the help of the functions provided by the
center. Promotion on the center’s operation remains as our
future work.
REFERENCES
[1] D. Taibi, L. Lavazza, and S. Morasca, OpenBQR: a framework
for the assessment of OSS, Open Source Development, Adop-
tion and Innovation, IFIP International Federation for Informa-
tion Processing, Vol. 234/2007, pp. 173–186, 2007.
[2] B. Golden, Succeeding with Open Source, Addison-Wesley
Professional, 2004.
[3] A. Origin, Method for Qualiﬁcation and Selection of Open
Source software (QSOS), version 1.6, April 2006, http://www.
qsos.org/download/qsos-1.6-en.pdf
[4] J.C. Deprez and S. Alexandre, Comparing Assessment Method-
ologies for Free/Open Source Software: OpenBRR and QSOS,
Product-Focused
Software
Process
Improvement,
Lecture
Notes in Computer Science, Vol. 5089/2008, pp. 189–203,
2008.
[5] I. Samoladas, G. Gousios, D. Spinellis, and I. Stamelos, The
SQO-OSS Quality Model: Measurement Based Open Source
Software Evaluation, Open Source Development, Communities
and Quality, IFIP International Federation for Information
Processing, Vol. 275/2008, 2008.
[6] V. Bianco, L. Lavazza, S. Morasca, and D. Taibi, Quality of
Open Source Software: the QualiPSo Trustworthiness Model,
Open Source Ecosystems: Diverse Communities Interacting,
IFIP Advances in Information and Communication Technol-
ogy, Vol. 299/2009, pp. 199–212, 2009.
[7] ISO/IEC 9126-1:2001 Software EngineeringProduct Quality-
Part 1: Quality model, June 2001.
[8] A. Monden, S. Okahara, Y. Manabe, and K. Matsumoto, Guilty
or Not Guilty: Using Clone Metrics to Determine Open Source
Licensing Violations, IEEE Software, Vol.28, No.2, pp. 42–47,
Mar./ Apr. 2011.
366
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

