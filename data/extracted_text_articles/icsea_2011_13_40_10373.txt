Method for CMMI-DEV Implementation in 
Distributed Teams 
 
Tiago da Cunha Oliveira 
Departamento de Engenharia Informática 
Instituto Superior Técnico, Universidade Técnica de Lisboa 
Lisboa, Portugal 
tiagocoliveira@ist.utl.pt 
Miguel Mira da Silva 
Departamento de Engenharia Informática 
Instituto Superior Técnico, Universidade Técnica de Lisboa 
Lisboa, Portugal 
mms@ist.utl.pt 
 
 
Abstract—Organizations tend to perform their work in off-
shore sites to become more competitive. But managing these 
teams is not an easy task because it is needed a great level of co-
ordination. So, some organizations adopt maturity models as 
CMMI-DEV to normalize and coordinate the tasks across the 
different sites. But it faces difficulties due to the different work 
practices and cultures in the distributed teams, which can imply 
a great resistance to change. Thus, when an organization wants to 
put their development process in compliance with CMMI-DEV, 
we propose that a first assessment should be done by an under-
standing of the development processes in each location, making it 
possible to normalize/standardize the work processes with small-
er changes, reducing the cost and resistance to change. This pro-
posal was evaluated by applying these methods in a distributed 
organization with two development branches. One branch has 
ISO 9001:2008 certification and works in two countries, and the 
other branch in three countries. The data below supports the 
objectives of our proposal, pointing to a careful analysis of the 
different teams, and therefore easier to adopt models such as 
CMMI-DEV.  
 
Keywords- Development Process, CMMI-DEV, Geographically 
Distributed Teams, Organizational Change. 
I. 
INTRODUCTION 
Software projects management has been and remains as one of 
the crucial problems of computing. Although there have been 
several efforts to make project management more effective 
and efficient, it still has several problems such as [1] [2]: ob-
jectives of the project unrealistic or disorganized; inaccurate 
estimations of the resources necessary to implement the pro-
ject; requirements of the system ill-defined; weak monitoring 
of the status and progress of the project; risks poorly or inade-
quately managed; lack of communication between stakehold-
ers (customers, users and developers); immature use of tech-
nology; lack of capacity to deal with the complexity of the 
project; careless and poorly formalized development practices; 
poor project management; politics of stakeholders; commer-
cial pressures; inadequate quality control; ineffective control 
of change.  
In addition to these problems outlined above, organizations 
must be much more effective and efficient due to the high 
competitive environment in the market where they perform 
their work [16]. 
So, resulting from that fact, a solution that has grown and 
tended to become more popular, is the outsourcing of infor-
mation technology services in offshore sites [16]. (According 
to an IDC market research report [23], the estimated market 
size of IT offshoring reached US$29.4 billion by 2010). 
It holds, as the key benefits, the product launch to market 
sooner, with lower development costs through access to 
skilled manpower and specialized resources [3] [4]. 
 
Over the past ten years, emerged a series of facts that must be 
taken into consideration when selecting suppliers of computer 
services such as [4]: 
 
Globalization - opening the borders to the interna-
tional market; 
 
Business environment - growing interest of countries 
in developing the economy, creating mechanisms for 
attracting foreign investment through tax incentives, 
reduction of bureaucracy and building technology 
parks; 
 
Decrease the cost of telecommunications; 
 
Standardization of methodologies and tools in soft-
ware development. 
 
To these facts, join two more important ones as the large dif-
ference in wages in different locations around the globe to 
perform the same function and the increasing standardization 
of the culture of companies that are increasingly multinational. 
 
As managers have to make commitments, most often based on 
price/quality of service rather than patriotic or emotional fac-
tors, the choice of suppliers began to be increasingly made 
outside the country of origin of the company - offshoring [4]. 
 
When the managers of organizations opt for the offshoring 
choice, they rely on two key factors [5]: 
1. Reduction of development costs 
2. Rapid increase of skilled labor 
Despite all the benefits resulting from offshoring, managing 
distributed teams is not an easy task, because these teams fre-
quently suffer crises of trust and coordination problems [12]. 
 
312
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

So, many organizations choose to do the alignment between 
operations and processes based on maturity models, which 
suggest the best practices in the industry, giving the organiza-
tion a competitive advantage [6] [7]. 
 
Traditional maturity models as Carnegie Mellon's Capability 
Maturity Model Integration (CMMI) [21] help organizations 
find their state of optimization, providing a structure that al-
lows alignment between process areas suggested by the model 
and process management. CMMI-DEV enables organizations 
to achieve a high level of process optimization, following the 
goals suggested by the model, considered as best practices 
within the development branch. With the adoption of the mod-
el, the organization takes deep knowledge of their processes 
and patterns of behavior that should be established [8]. 
 
In this paper, we present geographically distributed teams and 
organizational change in distributed team’s related work. 
Thereon, we approach the problem of CMMI-DEV implemen-
tation in distributed teams, and its resolution proposal. Addi-
tionally, we will be present and evaluate the preliminary re-
sults in an organization that has its workforce distributed, by 
the application of the proposal.  
II. 
RELATED WORK 
Aiming to achieve a better control, coordination and monitor-
ing, a first analysis of the distributed teams and the organiza-
tional changes is in order. To point out the main details, issues 
and implications became our main goal in Section II. 
A. Geographically Distributed Teams 
These teams are located in countries where manpower is 
cheaper, usually with additional time zone with the country of 
origin of the organizations in order to take advantage of 24 
hours of daily work [9]. 
 
The distributed teams were the result of globalization, but this 
has no implication as the standardization of cultures, as they 
continue to be diversified with different values and beliefs that 
result in different behaviors [11]. Since organizations are de-
pendent on people, all these differences in the context of dis-
tributed teams become of utmost importance when one wants 
to maximize and make use of distributed teams to a competi-
tive advantage [11]. 
 
Organizations must cope with challenges such as conflicts aris-
ing from their employment relationship between their teams. 
Conflicts at the completion of tasks [13] are due to differing 
views and opinions regarding the tasks of the team. These reso-
lutions are more complicated due to lack of physical meetings, 
which means that the agreement between different views is 
complicated due to limitations in terms of trust arising from the 
singularities of distributed teams [10] Conflicts also arise in 
terms of processes [13], i.e., teams use different ways of work-
ing to accomplish the same result. 
Hence, understanding the differences urges as an extreme need 
in the help in improving relations of trust between teams [11] 
this understanding should be done by [12]: 
 
Sharing identity, so that the effects of geographical 
dispersion are reduced 
 
Sharing context, i.e., the team members can access 
the same information, using the same tools 
 
Possibility of spontaneous communication through 
access to tools [10] that allow informal, unplanned 
interactions between members, thereby strengthening 
the relations of trust [14]. 
 
Understand and respect the particularities of the distributed 
teams is essential to get the maximum benefits and reduce its 
complications and shortcomings. The problems that most 
commonly affect these teams are not technical problems as 
they become salient faster than the non-technical [15]. 
B. Organizational Change in Distributed Teams 
The CMMI-DEV can have implications as a process of 
change, since there may have to be redefinitions of procedures 
performed, in order to conform to the model. 
 
This process of change reaches further complexity in the con-
text of offshoring, i.e., put all organizational units under the 
objectives suggested by the model. Once alone, the offshoring 
originates process of change [17]. 
 
The framework of change processes must be studied very 
carefully as they can be influenced by three contexts that in-
fluence change in organizations [17]: 
 
External Context: Factors of legislation, commercial 
and social 
 
Internal Context: social aspects of the organization, 
technical infrastructure, management style 
 
Individual Background: actors who develop their 
roles in the organization with their views of working 
methods. 
 
So it has to be taken into account in the phenomena of change, 
the surrounding environment, processes and people in order to 
avoid negative aspects for the organization and for business. 
Understanding this framework of change processes is im-
portant for this to an end, thus reducing the resistance to 
change that tends to increase with the number of different or-
ganizational units. (Figure 1) 
 
Figure 1 - Relation between the change resistance impact with the number of 
different locations 
During the process of change there are other factors (hard fac-
tors) also important to be taken into consideration [18]: 
313
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

 
Duration: The time it takes for the changing process 
to be implemented 
 
Integrity of the performance of the development team 
to complete a task on time. This factor depends on 
the skills of employees in respect of a project compo-
nent 
 
Commitment among top managers and employees af-
fected by the change 
 
Efforts caused by the change process 
 
All these factors must be taken into account, since the inten-
tion is that the change generated by the adoption of CMMI-
DEV is less abrupt as possible so that implementation is done 
with greater adherence by all participants in the process, in 
order to reduce resistance to change. 
III. 
PROBLEM 
To take advantage from offshoring, organizations must have an 
effective coordination in the different locations, which have 
great influence on productivity and performance [24]. 
 
There are different opinions related with the coordination be-
tween these teams. One relates with standardization of process-
es to reduce the conflict and differences between the sites, and 
another, which refers that its normalization can generate suspi-
cion and resentment at offshore sites embedded in different 
cultures and ways to execute their work. 
 
So, there are organizations, which adopt CMMI-DEV to be 
enabled to benefit from greater control, coordination and moni-
toring, resulting in improvements in the development process 
[5]. However, this model still suffers from significant short-
comings regarding the best practices that should be followed to 
organizations whose work focus is based on distributed teams 
[6]. 
 
When an organization decides to adopt CMMI-DEV has to be 
very careful, as its adoption usually involves a standardiza-
tion/normalization of processes. However, the maturity mod-
els are poorly adapted to the reality of offshoring [6], and it 
might not make sense that distributed teams run processes in 
the same way as they have different frameworks. From these 
frameworks emerge some of the limitations of offshoring as 
[6] [16] [22]: 
 
Difficulty for clarification of requirements for lack of 
physical meetings; 
 
Failure of coordination due often to failures of com-
munication; 
 
Large differences in experience among staff, with 
implications on the performance of the project; 
 
Time zone Difference, which can influence the time 
to solve problems; 
 
Different infrastructures, such s unstable Internet 
connections or electricity; 
 
Cultural differences. 
 
Some of the problems posed by distributed teams still do not 
have the best response from the CMMI-DEV, such as the lack 
of communications in person, redundant information, lack of 
motivation, conflict resolution. This model is still based on 
traditional working practices and does not take into account the 
growing trends of global organizations and distributed teams 
[6]. The adoption of CMMI-DEV can imply the existence of 
organizational change processes, difficult to manage. 
 
In the different locations, there are various formal and informal 
rules that have predominance in the interaction of the work-
space, since there may be differences in organizational politics, 
in government legislation for human resources, stability and 
efficiency in economic and political environment. These fac-
tors are often not taken into account, since what usually hap-
pens is the definition of new processes without giving suffi-
cient attention to its implementation, hoping that the new pro-
cedures and technologies make by themselves the change of 
processes. This situation means that there is misalignment, 
since the teams change their practices but not its definition. The 
resultant misalignments of these facts make it difficult to share 
the best practices across the organization. 
 
The problem arises since the adoption of CMMI-DEV already 
tends to standardize the business processes, which in a distrib-
uted organization with various implementations of the same 
process, face great resistance to change (Figure 2). 
 
Figure 2 - Applying CMMI-DV in different locations 
IV. 
PROPOSAL 
We believe that only through a detailed analysis of the particu-
larities of each of the distributed teams, understanding their 
differences, taking advantage of its strengths and identifying 
its limitations, we are able to first know their work processes, 
to boost and improve them afterwards. 
 
Understand the current processes of the teams also allows to 
assess the level of adherence that their methods of work al-
ready have with the CMMI-DEV model, thereby finding the 
areas in, which no change is necessary, reducing the difficul-
ties inherent in the processes of change. So our objective is to 
archive a great level of coordination between the different 
sites, based in the model CMMI-DEV, but respecting the local 
work processes and cultures. 
Thus, in order to meet the objectives outlined above this paper 
proposes a method to implement CMMI-DEV trying to keep 
the various implementations of processes in the distributed 
organization, reducing risks and costs of implementation. It is 
314
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

also expected a decrease in resistance to change by stakehold-
ers in the processes. 
 
To evaluate this proposal, it will be use in an organization that 
works with teams distributed in Canada, Guatemala, Portugal 
and India and wants to implement CMMI-DEV. 
V. 
PRELIMINARY RESULTS 
Under this project, some work was already done in order to 
better understand the processes undertaken in an organization 
that uses distributed teams. This organization intends to evalu-
ate and put their processes in accordance with CMMI-DEV, so 
they can improve their work processes and have a better coor-
dination and control between the different sites. The choice 
stood by this model because, in their opinion, it is the most 
famous in development area and with better known results. 
 
In this company there are two distinct branches of develop-
ment. One (branch A), which makes maintenance and minor 
improvements to an old product, and is certified with ISO 
9001:2008  headquartered in Canada, with team members also 
in Portugal. The software development is done between Portu-
gal and Canada, the definition of requirements and quality 
analysis is performed in Canada. There is another (branch B) 
to develop a product, which is not yet in production with the 
software development done in Guatemala, Portugal and India, 
with the respective definition of requirements and quality 
analysis performed in Guatemala. 
 
Thus, in an early stage of this work, there was an incorpora-
tion in the team of internal auditors of ISO 9001:2008 of the 
organization, This analysis led to better understand the pro-
cesses carried out and based on existing work in the area done 
by Mutafelija and Stromberg [19] [20] it was possible to per-
form a mapping between the ISO 9001:2008 and CMMI-DEV 
1.3. This mapping aims the notion of taking advantage of the 
resources and synergies between the two models, having no 
influence in the SCAMPI of the CMMI-DEV. 
 
There was thus a first survey of the faults to cover so that the 
branch (A) can converge with CMMI-DEV model. An exam-
ple of the mapping between ISO 9001:2008 and CMMI-DEV 
is in Table 1, with the process area project planning. 
TABLE 1- GAP IDENTIFICATION BASED ON ISO/CMMI-DEV MAPPING 
Project Planning 
 
Required Improvement based on Typical work 
products suggested by CMMI documentation. 
SG 1 – Establish Estimates 
 
SP 1.1 - Estimate the 
Scope of the Project 
Task descriptions; 
Work package descriptions; WBS; 
SP 1.2 Establish Estimates 
of Work Product and Task 
Attributes 
Technical approach; 
Size and complexity of tasks and work prod-
ucts; 
Estimating models; 
Attribute estimates 
SG 2 – Develop a Project 
Plan 
 
SP 2.2 Identify Project 
Risks 
Identified risks; 
Risk impacts and probability of occurrence; 
Risk priorities; 
SP 2.3 Plan for Data Man-
agement 
Data management plan; 
Master list of managed data; 
Data content and format description; 
Data requirements list for acquirers and for 
suppliers; 
Privacy requirements; 
Security requirements; 
Security procedures; 
Mechanism for data retrieval, reproduction, and 
distribution; 
Schedule for collection of project data; 
Listing of project data to be collected; 
SP 2.5 - Plan for Needed 
Knowledge and Skills 
Inventory of skill needs; 
Staffing and new hire plans; 
Databases (e.g., skills and training); 
SP 2.6 - Plan Stakeholder 
Involvement 
Stakeholder involvement plan 
SG 3 – Obtain Commit-
ment to the Plan 
 
SP 3.1 Review Plans That 
Affect the Project 
Record of the reviews of plans that affect the 
project 
SP 3.2     Reconcile Work 
and Resource Levels 
Revised methods and corresponding estimating 
parameters (e.g., better tools and use of off-the-
shelf components) 
Renegotiated budgets 
Revised schedules 
Revised requirements list 
Renegotiated stakeholder agreements 
SP 3.3 Obtain Plan 
Commitment 
Documented requests for commitments 
Documented commitments 
 
In branch B, for each process area there has been made a first 
survey of the practices, which are followed, against the specif-
ic practices of CMMI-DEV in order to have a first iteration of 
the flaws to cover. This work was already made to all process 
areas of CMMI level 2. Please note that this survey of flaws is 
based on interviews with top managers. 
 
An example of this more detailed survey for Project Planning 
is in Table 2. 
 
TABLE 2- GAP IDENTIFICATION BASED ON INTERVIEWS WITH TOP MANAGERS 
OF THE ORGANIZATION 
Project Planning 
 
Required Improvements 
SG 1 – Establish Estimates 
 
SP 1.1 – Estimate the Scope of the project 
Stakeholder 
Form; 
Mile-
stones Form; 
Meetings Form 
SP 1.2 – Establish Estimates of Work Prod-
uct and Task Attributes 
Metrics Spreadsheet 
SP 1.3 – Define Project Lifecycle Phases 
In conformity 
SP 1.4 – Estimate Effort and Cost 
In conformity 
SG 2 – Develop a Project Plan 
 
315
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

SP 2.1 – Establish the Budget and Schedule 
Schedule and Project Cost 
Form 
SP 2.2 – Identify Project Risks 
Risks Form 
SP 2.3 – Plan Data Management 
In conformity 
SP 2.4 – Plan the Project’s Resources 
Needed Ressources Form 
SP 2.5 – Plan Needed Knowledge and Skills 
Employees Skills Form; 
Relation Skills/Needed Re-
sources Form 
SP 2.6 – Plan Stakeholder Involvement 
Involvement Plan 
SP 2.7 – Establish the Project Plan 
In conformity 
SG 3 – Obtain Commitment to the Plan 
 
SP 3.1 – Review Plans That Affect the Pro-
ject 
Revision Plans Definition 
SP 3.2 – Reconcile Work and Resource 
Levels 
In conformity 
SP 3.3 – Obtain Plan Commitment 
Establish commitments 
 
Based on mapping already done by Mutafelija and Stromberg, 
for each section of ISO there were a percentage of conformity 
related with the specific practices of CMMI-DEV (0%, 30%, 
60% and 100%). So, our analysis of the branch A, based on 
this mapping, applies for the branch B, since the assessment 
was supported with the same percentages, resulting the follow-
ing graphics. 
 
The graphic below (Figure 3) is an example of the conformity 
analysis that the two branches have with each of the process 
areas, based on the assessment done, so, it was possible to 
know how far away each branch is to have their processes in 
compliance with CMMI-DEV. 
 
Figure 3- Percentage of confrmity with the process area project planning 
VI. 
EVALUATION 
In this first analysis of a case of practical application of our 
proposal, it was possible to make a first evaluation. 
 
Although the two branches of the same organization make 
development and want to adopt the same CMMI-DEV model 
across the organization, both branches and the teams are very 
different and work in dissimilar way. 
 
This fact is a result not only from the particularities of the dis-
tributed teams, which have been discussed in this report but 
also from other factors more related to their work processes. 
Therefore, the initial factor, with a branch certified ISO 
9001:2008 and the other not, raises great differences with re-
gard to working methods. The adoption of CMMI-DEV, alt-
hough not directly, allows it to become easier through the 
work already done, the mapping between ISO-CMMI (Figure 
4). 
 
Figure 4- Total percentage of conformity with CMMI-DEV level 2 
 
It was also possible to denote that although a branch being 
certified ISO 9001:2008, is not, in some cases, closer to the 
objectives of the model CMMI-DEV (Figure 5). We can, for 
example, remove that stance from the tables of preliminary 
results section, noting that the SP 2.3, which has no ISO 
9001:2008 certification in the branch, already is consistent 
with the model, while the other branch certified resulting from 
the analysis made of the mapping done with CMMI-DEV, has 
some flaws that should be covered. 
 
Figure 5- Percentage of conformity for each specific practice in process area 
project planning 
 
Another factor that makes completely different the work prac-
tices is related to the development of the products of these two 
branches, which use different processes and tools. Conse-
quently, its development cycle has also wide disparities in 
both the type and the manner of tasks to perform. 
VII. CONCLUSION 
This study proposed a method to evaluate the compliance that 
an organization has with CMMI-DEV, to enable their easier 
implementation in the nearest future. We propose that the dif-
ferences between sites should be taken into account, respect-
ing the distributed practices and culture, reducing the conflict 
between the various processes performed by geographically 
distributed teams. These allow a better knowledge of organiza-
tional processes, often unknown by top managers. This 
knowledge is essential to an organization in order to define the 
adjustments to apply to their processes. 
 
316
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

So, in our work we study an organization with distributed 
teams. First it was done an assessment to know the compliance 
or each branch with CMMI-DEV, and after that there were 
proposed improvements to the processes, in order for them to 
be in accordance with the model. 
 
Thus, it is expected that the proposed method contributes to 
solving the problem of organizational adaptability to CMMI-
DEV. Expected to reduce the impact of the change processes 
through a deep understanding of current processes of the or-
ganization, allowing us to find the flaws in order to develop an 
action plan. It is believed that this would make the compliance 
with CMMI–DEV easier to implement even in work per-
formed with resource to distributed teams. 
REFERENCES 
[1] Charette, R.N., 2005, Why Software Fails. Journal IEEE Spectrum, 
Volume 42, Number 9 
[2] Jones, C., 2004, Software Project Management Practices: Failure Versus 
Success, Crosstalk,  Citeseer Volume 17, Number 10 
[3] Rao, 
N.M., 
2009, 
Challenges 
in 
Execution 
of 
Outsourcing 
Contracts,Proceedings of the 2nd India Software Engineering 
Conference, ACM, 75-79 
[4] Blinder, A.S., 2006, Offshoring: The Next Industrial Revolution?, 
Foreign affairs, Volume 82, Number 2,  113-128 
[5] Carmel, E. and Agarwal, R., 2002 Tactical Approaches for Alleviating 
Distance in Global Software Development, Journal IEEE, Volume 18, 
Number 2, 22-29 
[6] Azderka, M. and Grechenig, T., 2009, Project Management Maturity 
Models: Towards Best Practices for Virtual Teams, Engineering 
Management Conference, 2007 IEEE International, 84-89 
[7] Jugdev, K. and Thomas, J., 2002,Project Management Maturity Models: 
The silver Bullets of Competitive Advantage, Project Management 
Journal, Volume 33, Number 4, Proquest ABI/INFORM, 4-14 
[8] Wang, Q. and Li, M., 2006, Software Process Management: Practices in 
China, Unifying the Software Process Spectrum, Springer, 317-331 
[9] Edwards, H.K. and Sridhar, V., 2003, Analysis of the Effectiveness of 
Global Virtual Teams in Software Engineering Projects, IEEE Computer 
Society 
[10] Al-Ani, B. and Redmiles, D., 2009, Supporting Trust in Distributed 
Teams Through Continuous Coordination, IEEE Software, Volume 99, 
Number 1, 35-40 
[11] Siakas, K., Maoutsidis, D. and Siakas, E., 2006, Trust facilitating good 
software outsourcing relationships, Springer, 171-182 
[12] Hinds, P.J. and Mortensen, M., 2005, Understanding conflict in 
geographically distributed teams: The moderating effects of shared 
identity, shared context, and spontaneous communication, Organization 
Science, Volume 16, Number 3,Institute for Operations Research and 
the Management Sciences, 290-307 
[13] Huang, H. and Ocker, R, 2006,Preliminary Insights Into the In-
Group/Out-Group Effect in Partially Distributed Teams: An Analysis of 
Participant Reflections, Proceedings of the 2006 ACM SIGMIS CPR 
Conference on Computer Personnel Research: Forty Four years of 
computer personnel research: achievements, challenges in the future, 
ACM, 264-272 
[14] Suchan, J. and Hayzak, G., 2002, The Communication Characteristics of 
Virtual Teams: A case study, vol 44, Number 3, IEEE,  174-186 
[15] Akbar, R. and Hassan, M.F., 2010, Limitations and Measures in 
Outsourcing Projects to Geographically Distributed Offshore Teams, 
2010 
International 
Symposium 
in 
Information 
Technology 
(ITSim),Volume 3, IEEE, 1581-1585 
[16] Chatfield, A.T. and Wanninayaka, P., 2008, IT Offshoring Risks and 
Governance Capabilities, IEEE Computer Society 
[17] Ramanathan, TR., 2009, The Role of Change management in 
Implementing the Offshore Outsourcing Business Model: A Processual 
View 
[18] Sirkin, H.L., Keenan, P., and Jackson, A., 2005, The Hard Side of 
Change Management,Harvard Business Review, Volume 83, Number 10 
[19] Yoo, C., Yoon, J., Lee, B., Lee, C., Lee, J., Hyun, S. and Wu, C., 2006, 
A Unified Model for the Implementation of Both ISO 9001: 2000 and 
CMMI by ISO-Certified Organizations, Journal of Systems and 
Software, Volume 7, num 7, Elsevier, 954-951 
[20] Mutafelija B. and Stromberg H., 2009 Mappings of ISO 9001:2000 and 
CMMI Version 1.2 
[21] CMMI Produt Team., 2010, CMMI for Development , Version 1.3 
(available 
online 
at http://www.sei.cmu.edu/reports/10tr033.pdf 
, 
accessed in May 2011) 
[22] Guzman, G., Ramos, S., Seco, A. and Esteban, S., 2010, How to Get 
Mature Global Virtual Teams: A Framework to Improve Team Process 
Management in Distributed Software Teams Volume 18, Number 4, 
Software Quality Journal,  Springer, 409-435} 
[23] IDC. IDC Executive Market Watch Market Research,  2006 available at 
http://cdn.idc.com/uk/downloads/events/idc_executive_market_watch.pd
f , accessed in May 2011). 
[24] Sidhu, J.S. and Volberda, H.W.2011, Coordination of globally 
distributed teams: A Co-Evolution Perspective on Offshoring, 
International Business Review, Elsevier 
 
317
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

