114
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Getting Anesthesia Online: The smartOR Network
Marcus Koeny
Marian Walter
Steffen Leonhardt
Chair for Medical Information Technology
RWTH Aachen University
Aachen, Germany
koeny@hia.rwth-aachen.de
walter@hia.rwth-aachen.de
leonhardt@hia.rwth-aachen.de
Julia Benzko
Klaus Radermacher
Chair of Medical Engineering
RWTH Aachen University
Aachen, Germany
benzko@hia.rwth-aachen.de
radermacher@hia.rwth-aachen.de
Michael Czaplik
Rolf Rossaint
Department of Anesthesiology
University Hospital RWTH Aachen
Aachen, Germany
mczaplik@ukaachen.de
rrossaint@ukaachen.de
Abstract—In
this
article,
the
concept
of
a
future
manufacturer-independent network standard for operating
rooms is presented. On the basis of this standard, the
realization of an integrated networked operating room is
discussed using two workstations: One for the surgical and
one for the anesthesia workplace displaying and controlling
further networked components like patient bench, endoscope
or tracking system respectively. As the main focus of this
work the anesthesia workstation with an integrated system
for telesupervision is presented. The workstation consolidates
information from patient monitor, anesthesia machine and
syringe pumps. Furthermore, information from surgical devices
are requested to support the anesthesiologist. As a medical
application the integration of an extended alarm concept is
discussed followed by an outlook on options such a system can
offer in near future.
Keywords-telesupervision;
anesthesiology;
smart
operating
room; network; SOA; patient alarms
I. INTRODUCTION
Part of this work was previously published at the
EMERGING 2011 in Lisbon [1]. The described materials
and methods are part of a research project called smart
operating room (smartOR). The project aims to develop a
manufacturer independent standard for device connectivity
in the operating room, the Open Surgical Communication
Bus (OSCB). Therefore this article presents a motivation
for the standard and a description of the state of the art and
our vision. After that the protocol itself (OSCB) is described
followed by the concepts.
A. Motivation
In Figure 1, a typical view of the anesthesiologist’s
workplace can be seen. Obviously there is a multitude of dif-
ferent medical devices like a patient monitor, an anesthesia
machine, infusion pumps, operating room lights and surgical
devices, like endoscopes and further instruments supporting
the medical staff to treat the patient.
Figure 1.
Typical scenario in an operating room [2]
All of these devices are necessary for a safe and successful
process of the surgical intervention. However, the variety of
devices, which are in most cases from different manufactur-
ers, offer different risks for the patient and the operating
staff. Each device has own operating panels and display
concepts. Hence, information is presented to the user very
individually and non-uniformly. For example, most infusion
pumps have numeric displays with according numeric input.
The patient monitor has a touch surface and the anesthesia
machine is operated using a combination of setting valves
and key input. Furthermore, in most cases there is a barrier
between the anesthesiologist’s workplace and the surgical
workplace, due to hygienic reasons, which limits the in-
teraction and information exchange between the anesthesia
and surgical team. Nevertheless, despite of different tasks
and focuses (performing surgery or controlling narcosis and
patient’s health state respectively), an interaction is required
for optimal patient safety.
Currently, companies like for example Wolf [3] or Stryker
[4], are building integrated operating room solutions present-

115
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
ing consolidated information from all devices in centralized
displays. An example of such an integrated operating room
can be seen in Figure 2. Consolidated displays can be
Figure 2.
Operating room of the future. Example for consolidated data
from various devices [3]
seen, which present optimized context-adapted information.
Devices can be operated in a uniform way, so that us-
ability concepts are clearly improved. Furthermore, several
safety and assistance concepts can be integrated to support
clinicians. Unfortunately, there are still drawbacks. Usually,
integrated operating room systems are only built by one
manufacturer or a limited range of partners. The operating
rooms are optimized for only a certain type of interventions.
Furthermore, these solutions are often based on proprietary
protocols which do not allow a manufacturer-independent
connection.
The aim of this manuscript is to enlighten these aspects in
detail and to present our vision of the networked operating
room of the future.
B. State of the Art
The situation presented in Figure 1 can be found in
most hospitals, although the above mentioned integrated
operating room solutions exist. A typical device set of
the anesthesiologist’s workplace consists of patient monitor,
anesthesia machine, and syringe pumps. In still frequently
used older equipment the only networked combination is
the anesthesia machine and the patient monitor in order to
display vital signs of the anesthesia machine at the patient
monitor’s display. Hence, the patient monitor only displays
vital signs; the anesthesia machine provides a user interface
to control the parameters for mechanical ventilation and
anesthesia. New upcoming solutions for the anesthesiolo-
gist’s workplace like the Draeger Smart Pilot View [5] [6] or
the GE Healthcare Navigator Application Suite [7] are often
expensive and, like the integrated operating room solutions,
only connectable to a limited range of devices. The advanced
integrated operating rooms present clearly arranged user
machine interaction and support the staff during the inter-
vention. The manufacturers of these integrated solutions are
often developing devices for special purposes like endoscopy
or brain surgery. Therefore the application of these rooms
is often limited to a speciﬁc ﬁeld of interventions. The
described integrated operating room solutions are based on
proprietary protocols. Therefore only manufacturer with an
according license are able to integrate their own device
into these operating rooms. Especially, smaller manufac-
turers with innovative products are handicapped without
a license. Furthermore, more and more hospitals would
combine different devices from different manufacturers to
improve patient’s treatment with best cost efﬁciency. A
manufacturer independent standard would make possible
every combination of devices regardless which manufacturer
has produced it and which intervention type is performed.
But why does such a manufacturer-independent standard
does not exist yet [8]?
In medical applications every device must be certiﬁed to
comply with national and international medical standards
like the ISO 60601 [9] for electrical operating safety and
according to medical device acts. Furthermore, a risk anal-
ysis according to the ISO 14971 [10] or the ISO 80001
[11] must be performed. In case of connected devices this
certiﬁcation and risk analysis must be done for every device
combination. This procedure is associated with much effort
and costs. In case of a manufacturer independent standard
the effort is much bigger, because the multitude of devices is
larger and the risks are much more complex to assess. Due
to the multitude of devices available on the market there
must be developed new methods for the safety concepts and
the risk management. Furthermore, the interest by the bigger
manufacturer is low establishing a manufacturer independent
standard. However, the request by clinicians for such a
manufacturer independent standards becomes bigger and
bigger.
C. The Vision
Our vision is to develop a standard for manufacturer-
independent inter-device communication based on a service-
oriented architecture (SOA) and on well-known inter-
net technologies. The Open Surgical Communication Bus
(OSCB) is the implementation of the standard. The use of a
SOA has been previously proofed by different projects like
the orthoMIT [12], the FUSION [13] or the Medical Device
Plug and Play (MDPnP) [14] projects. During the design
time of the standard, aspects like risk management and
certiﬁability play an important rule. Concepts to integrate
risk management into the protocol and mechanisms to ensure
the safety and reliability of the network will be integrated
into the standard.
Based on the deﬁned standard new concepts for device op-
eration and display concepts will be developed. Furthermore,
the patients safety should be increased and medical staff
should be supported by intelligent alarm systems. First in
the following Section the basic concept with most important
components of the smart operating room (smartOR) is

116
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
presented [15]. In the Technical Realization in Section III the
Open Surgical Communication Bus (OSCB) and underlying
technologies are discussed. After that the implementation
of an anesthesia workstation as a technical application is
described in Section IV, followed by the medical application
in Section V. Finally the most important results and future
work is described in Section VI.
II. SMARTOR SYSTEM OVERVIEW
The structure and the essential components of the
smartOR concept are shown in Figure 3 and described in
the following sections.
A. Open Surgical Communication Bus
As central component the OSCB is realized using standard
hardware used in Local Area Networks (LAN). Every device
in the operating room must be connected to the OSCB.
Therefore, in principle, each device can communicate with
each other. All devices are medical products and certiﬁed
by according laws and standards. To ensure a ﬂexible and
reliable communication, each device has to implement a
speciﬁc set of communication functions, which are described
in Section III-B.
B. Surgical Workstation
The surgical workstation displayed in Figure 4 is the
central display and control component of the surgeon’s
workplace. During surgical interventions the surgical work-
station can be controlled by the surgeon itself using modern
interface methods like gesture or speech input methods.
Alternatively, the assistance personal can control the work-
station. During the intervention the surgical workstation
presents context-related information for the surgical team.
This information consists of major vital signs, relevant
alarms as well as the actual patient’s health state in a com-
pact form similar to a trafﬁc light. Additional information
like currently used devices and according functions can be
easily used by the operator. Furthermore, the manufacturer
of a device can deploy customized user interfaces.
Figure 4.
Very brief and consolidated information from the anesthesia
workstation about the current patient’s health state on the display of the
surgical workstation
C. Anesthesia Workstation
The anesthesia workstation is the central information and
control system of the anesthesiologist’s workplace. Further-
more, it integrates the telesupervision system facilitating
support opportunities by a ”remote consultant” in critical
situations or during teaching. The visualization of the con-
Figure 5.
Anesthesiologist’s workplace with telesupervision system
modiﬁed after [1]
cept can be seen in Figure 5. The anesthesia workstation
retrieves the information from patient monitor, anesthesia
machine and infusion / syringe pumps and displays vital
signs, alarms and infused drugs on the central display of the
anesthesiologist’s workplace. Additionally all information
that are available in the anesthesia workstation can also
be displayed on a remote tablet PC. Hence, a supporting
consultant has an overview of the current progress and state
of the intervention. Furthermore, assistance systems like
decision support facilities or evaluation algorithms of the
patient’s health state can also be provided for the anesthesi-
ologist. In case of remote support, an additional video and
audio connection can be established for consultation. The
anesthesia workstation and the telesupervision system are
the main focus of this work; they are described in Section
IV more detailed as application of the smartOR network.
D. Medical Devices
There are many devices used by a surgeon. From a
simple scalpel over an endoscope to a specialized navigation
system for brain surgery. Whether the scalpel itself is a
device, which is not be networked it could be tracked by
a navigation system. The navigation system, for example,
supports the surgeon during brain surgery allocating a tumor.
The endoscope is used in combination with endoscopic
lights and an insufﬂation device, which pumps CO2 into
the abdominal region. All these devices need to be operated
by a surgeon or an assistant. Connecting these devices
together allows the surgical workstation to operate them
from one central control unit in an efﬁcient and uniform
way. Therefore several industrial partners from the smartOR

117
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 3.
smartOR network overview modiﬁed after [1]
project participate in developing new standards and integrate
their devices by using the already mentioned OSCB bus.
Figure 3 shows the anesthesia devices, which are currently
not directly connected to the OSCB. A high amount of
time critical data has to be transmitted from the device to
the workstation, for example multiple waveforms like the
electrocardiogram (ECG) or the photoplethysmogram (PPG).
In most cases these data are not relevant for devices used
by the surgeon in a non-consolidated form. Furthermore, at
this time, these devices cannot be directly connected to the
OSCB, because the software and interfaces on those device
has to be adopted. Therefore, the anesthesia workstation is
used as a protocol converter, which can forward relevant and
requested data to the OSCB.
E. Gateway
For security and performance reasons, the OSCB of each
operating room is an isolated network. Interaction between
other ORs and the hospital IT network is realized by
a gateway, which ﬁlters the trafﬁc from the hospital IT.
Additionally sensitive data from the OSCB is ﬁltered. On
the other hand patient data from the Hospital Information
System or images from radiology (e.g. DICOM [16] format)
can be transferred from the hospital IT through the gate-
way to the OR. Furthermore, updated patient records from
anesthesiology and surgery can be returned to the hospital
information system.
F. Results
The above mentioned devices and methods are the basis
for the smartOR network, which is realized using compo-
nents and protocols described in Section III. In the smartOR
the anesthesia and surgical workstations are the new display
and control instruments and represent central components.
The surgical and anesthesia devices can be controlled by
the workstations. All components can be substituted by
components from other manufacturer as long as these are
using the OSCB standard.
III. TECHNICAL REALIZATION
In this Section, the technical principles of the OSCB are
described. Since the standard is still in development, the
current state of development is presented.
A. Internet Technologies Used
The communication layers are represented by the OSCB,
which is described according to the ISO reference model in
Figure 6. The physical and data link layer of the OSCB is
based on the Ethernet standard IEE802.3. Ethernet is a com-
monly used standard and has already been approved in many

118
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
medical applications like in the Medical Device Plug and
Play MDPNP protocol [14][17] and Draeger Inﬁnity network
[18]. Moreover, Wi-Fi is used according to IEEE802.11
[19], to integrate mobile systems like the tablet PC for
the telesupervision system. Finally the used physical layer
does not matter, as long as used devices are conform to the
ISO60601 [9] and according to medical device acts. Relevant
for communication and for the protocol implementation are
network and upper layers.
Figure 6.
Modiﬁed ISO / OSI reference model for the OSCB
The IP based TCP and UDP protocols are commonly used
in the internet and local networks. Hence our network and
transport layer is based on these protocols as well. The per-
formance and transmitting characteristics (CSMA/CD) are
sufﬁcient as we have not to match real-time criteria with the
OSCB. The OSCB is only deﬁned for device identiﬁcation,
device management, exchange of parameters, alarms and
commands with no hard real-time demands. Large amounts
of data and real-time data, like high resolution video must
be transmitted using other protocols. Additionally there can
be other communication channels used, like a M2IO switch
(comparable to a KVM switch with matrix functionality) or
additional communication channels.
In the upper layers we use web service technology ac-
cording to the Device Proﬁle for Web Services (DPWS)
[20] [21] standard. The DPWS standard combines SOAP
[22] technology with functions for device discovery. Every
device in the smartOR network implements methods for dis-
covery, registration and deregistration. Therefore all devices
in the operating room can be easily managed by a central
management component, as a new device on the OSCB
registers itself by the management component. Other devices
can retrieve a list of all devices from the management com-
ponent. If the central management component fails, devices
can manage themselves using the integrated DPWS device
discovery functionality . The web services and exchanged
messages are described in the following section in detail.
B. The Open Surgical Communication Bus
As described above, DPWS [20] [21] is used as the upper
communication layers and builds the basis functionality in
the OSCB. The OSCB deﬁnes the description of a DPWS
device, web services hosted by a device and the messages
exchanged by the web services.
Every device in the OSCB must implement three web
services according to Figure 7:
Figure 7.
Web Services
• The smartORIdentiﬁcationService is used for device
identiﬁcation. It submits information about the device
like hardware revision, software version and available
parameters and commands.
• The
smartORWebService
is
used
for
parameter
exchange and command exchange. With the functions
getParameter and setParameter various parameters
like vital signs or device parameter can be read and
set.
• The smartORNotiﬁcationService implements a notiﬁ-
cation service, which can be subscribed by clients.
After subscribing the notiﬁcation service every sub-
scriber will be informed by the service about parameter
changes or alarms.

119
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Every device parameter, command and event has its own
identiﬁcation according to the ISO11073 [23]. The identiﬁer
is build using speciﬁed rules, which can be found in the stan-
dard. For example the designation of an insufﬂator device
would be MDC DEV INSUFFLATOR. Where ’MDC’ is
the global identiﬁer for parameters according to this standard
and stands for medical device component. The second part
speciﬁes if it is a device (DEV), a command (CMD) or an
event (EVT). Parameters are named using the device name
as second part. For example ’MDC ECG HEART RATE’
means the heart rate derived from the ECG.
C. Results
Some parts of the OSCB are not speciﬁed yet; therefore
even not all parts are realized in the software protocol.
The usability of the SOA has been still proved [24] [25].
Currently just the WS4D-JMEDS framework in Java is
used for the implementation of the OSCB. Therefore there
is no comparison available between the WS4D-JMEDS
framework and other framework’s like WS4D-gSOAP or
the .NET Micro framework DPWS implementation. Hence
the WS4D-JMEDS framework is written in Java and offers
much functionality a state of the art PC is necessary for
implementation. The direct implementation in Java based
medical devices is easy. Unfortunately, using this library in
medical devices based on special embedded systems, still
need effort or writing software interface for adaption.
IV. IMPLEMENTATION OF THE ANESTHESIA
WORKSTATION
The anesthesia workstation is one of the central compo-
nents of the smartOR and develops its full capabilities in
combination with other components in the network. How-
ever, the workstation can be used standalone. For example
the software has been tested in different studies connected
only to a patient monitor, an anesthesia machine and syringe
pumps. During the studies patient data were recorded during
surgery in order to develop new alarm concepts, for example
the one described in Section V.
The anesthesia workstation consists of a special medical
PC, which is equipped with hardware interfaces like RS232
and Ethernet for medical device connection. Up to two
screens can be used for visualization. The functionality is
implemented in a software called SomnuCare, which is
primary developed in C++ using the Qt [26] library. For
easy development and integration of new components the
software is separated into different modules.
The most important modules of the SomnuCare software
can be seen in Figure 8. The central and most important
component is the memory mapped ﬁle (MMF) engine. It
stores and caches all data from the interfaces, where each
MMF represents a single data stream from an interface. Such
a data stream can be a waveform like an ECG, numeric vital
signs like heart rate or alarms from a medical device. Data
acquisition is performed by the interfaces itself as described
in Section IV-B. All interfaces in SomnuCare have a uniform
API, which is described later in Section IV-B. This concept
enables the programmer to add further interfaces for data
acquisition without change of other parts of SomnuCare.
The telesupervision system is such a module and integral
component of the SomnuCare software. This system consists
of the anesthesia workstation as server component and a
tablet-PC as remote component for the supervisor. The
remote side is realized running an additional instance of the
SomnuCare software, which is connected to the anesthesia
workstation in the operating room using Wi-Fi.
The telesupervision server emulates an interface for the
supervisors tablet PC and mirrors all data stored in the MMF
engine to a special interface on the tablet PC.
A. Integration into smartOR Network
Currently only the Java based WS4D-JEMEDS frame-
work is used for the OSCB protocol, as mentioned above.
SomnuCare itself is written in C++. Therefore an additional
module is used to integrate the web service functionality in
SomnuCare. The program translates the web service requests
to serialized strings, which are forwarded to the counterpart
in SomnuCare using an IPC socket. The web service module
makes use of the MMF engine to retrieve the requested data
and sends them back to the Java program. Finally the Java
program answers the request of the client.
B. Interfaces for Data Acquisition
As mentioned above the SomnuCare interfaces are used
to read data from devices using different hardware interfaces
and software protocols. For example a patient monitor can
be connected via Ethernet to the workstation using an UDP
multicast based protocol and an anesthesia machine using
Draeger Medibus [27] protocol via an RS232 interface. The
communication with the connected device is performed by
the interface, so independently from the physical connection
each device can be integrated in SomnuCare. The interface
only has to implement the API functions shown in Figure
9 for conﬁguring, starting and stopping the interface. Every
interface holds an internal state machine, which is controlled
by these functions. This enables SomnuCare to automatically
handle different types of connected devices using a uniform
API. The interfaces in SomnuCare are controlled by a man-
ager module described in Section IV-D, which conﬁgures,
starts and stops the interfaces and handles possible changes
of state, for example caused by a disconnection. Received
data is directly written by the interface to the memory
mapped ﬁle engine.
C. Memory Mapped File Engine
The memory mapped ﬁle engine makes use of the op-
erating system’s memory mapped ﬁle API and supports
reading and writing data to multiple segmented memory

120
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 8.
Structure of the SomnuCare software modiﬁed after [1]
Figure 9.
The SomnuCare interface
mapped ﬁles. Writing and reading data is performed by
operating system functions. The memory mapped ﬁle tech-
nology allows data written to the memory mapped ﬁle being
accessible like data in the RAM and stored to the hard disk
like a log ﬁle at the same time. Hence only interfaces are
used to write data to multiple memory mapped ﬁles, the
engine supports only one writer for each memory mapped
ﬁle, which can append data. Because all data should be
logged and be available for other algorithms, functions for
erasing or sorting data are not implemented. Reading is
allowed by multiple instances as shown in Figure 10. This
is necessary because the data from the interfaces is needed
in different modules of the software. For example, the GUI
as viewing element needs access to the last appended data,
the telesupervision server must send the last incoming data,
which have not already been send, to the client and the
web services need to send speciﬁc data on request. During
long interventions there can be a large amount of data
stored in the MMF engine. For example during a 5 hour
intervention with up to 50 recorded vital signs 500 MB data
accumulate. To save memory not the whole ﬁle is mapped
into memory. Therefore only the last segment is allocated.
If the last segment is full, the ﬁle will be expanded with
the segments size and this new segment will be allocated.

121
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 10.
The SomnuCare interface
The reading function is able to randomly access segments.
To improve the performance of multiple readers, they can
register their instance for reading only appended data, which
are tagged during insertion. In order to control all of these
functions a special control segment is implemented in a
separate memory mapped ﬁle. It stores information about
segment handling and tagging new data for every reader
instance. Furthermore, individual information like sample
rate or data type can be stored in the control segment. This
enables other programs to open the memory mapped ﬁle and
use the contents for further evaluation.
Vital signs stored in the MMF engine and interfaces are
controlled by a manager component, which is described in
the following Section.
D. Manager Components
As mentioned above, the interfaces and vital signs are
controlled by manager modules. The manager modules con-
sists of hash lists, which can be stored to a database for
persistence. During the runtime of SomnuCare the manager
walks periodically through the lists in order to control the
state and conﬁguration of every interface or vital sign. Via
the user interface the manager can be conﬁgured.
E. Telesupervision Server
The telesupervision server mirrors new appended data
in all memory mapped ﬁles over the wireless network to
the remote instance. Since the data in the memory mapped
ﬁles is stored in a binary format, a binary protocol is used
for data transmission. On the client side the counterpart is
implemented as a standard SomnuCare interface. Therefore
there is no modiﬁcation needed on the client instance,
except activating the according interface and setting the IP
address of the server. Like all other interfaces the supervision
interface must implement the state machine. This enables
the network interface to automatically reconnect after a
WLAN disconnect or any other failure. After a disconnect
the interface tries to reconnect and load missing data in order
to proceed with its normal operation. Due to the data tagging
functionality and the consistency of the memory mapped
ﬁles, no data will be lost, so an additional resynchronization
is not necessary.
F. The Graphical User Interface
The graphical user interface of SomnuCare is designed to
match the view of a standard patient monitor (Figure 11),
because the patient monitor style has been proven for years.
In order to test new features, alarm concepts and algorithms
Figure 11.
SomnuCare user interface [1]
the layout of the GUI can be modiﬁed. Furthermore, new
elements can be inserted, for example a trafﬁc light in order
to visualize the state of a vital sign, as described later in
Section V.
G. The Simulation Mode
Normally SomnuCare is used in an operating room
scenario for interfacing other devices and supporting the
anesthesiologist. Additionally SomnuCare can be used stand
alone in studies with simulated or previously recorded data.
Therefore a special interface (IfMatlab) is integrated, in
order to load Matlab [28] workspaces and playback these
data. Since IfMatlab acts as a standard interface and all
data going through this interface are fed back into the MMF
engine, allowing new algorithms to be evaluated.
H. Processors
A processor reads data from the memory mapped ﬁle
engine and applies customized algorithms. The output of
a SCProcessor is feed back into the memory mapped ﬁle
system and therefore the computed output is available for
different modules in SomnuCare.
For example a special SCProcessor instance is used to
plot waveforms like ECG or real time blood pressure with
a speciﬁc data rate. This is necessary because physicians
are trained to make diagnosis based on standardized signals.
Unfortunately, devices of different manufacturers transmit
vital signs using different sample rates and block sizes.
Therefore the processor must resample these signals and
insert a time delay for uniform plotting.

122
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
I. Results
The SomnuCare software is a modular C++/Qt software,
which is easily extensible with new features. It stores all data
from connected devices in a memory mapped ﬁle engine and
makes these data available for live and post-hoc processing.
The workstation aims the look and feel of a patient monitor.
However, it is not limited to the display of the patient
monitor signals only, but is able to view data from patient
monitor, anesthesia machine and syringe / infusion pumps.
Furthermore, it is able to visualize new concepts like for
example the display of the vital signs state.
SomnuCare itself has been used in different studies in
die operating room recording data from patient monitors,
anesthesia machines and syringe pumps from different man-
ufacturers. The software will be permanently improved and
extended in order to integrate new devices and try new
concepts. The current realization of the OSCB integration
is only a transitional solution.
The IPC communication between C++ and Java is af-
ﬂicted with much overhead. Furthermore, receiving data
from the OSCB using a web service client is not working.
As long the SomnuCare software interfaces needed devices
directly this is no drawback.
The performance of the Wi-Fi connection is sufﬁcient to
transmit all data processed in the workstation to the supervi-
sor. However, there are still problems with the video/audio
link between the operating room and the remote station.
Especially transmitting patient data and establishing the
audio link needs a good Wi-Fi infrastructure, because the
bandwidth is not sufﬁcient if the connection is week.
V. MEDICAL APPLICATION
As mentioned in the introduction the vision of the
smartOR network is to support the staff in the operating
room. The presented smartOR concept and standard sets
the base for the following presented medical application.
In this Section a ﬁrst approach to such a decision support
and intelligent alarm system is described.
The data collected during the study described in the
following Section are the basis for the presented alarm
concepts. At the time the study took place, the SomnuCare
software was not completed, therefore a special software
module was developed to capture the data exclusively from
the Datex Ohmeda AS/3 and BBraun perfusor serial inter-
faces and store them as comma separated text ﬁles. Relevant
anesthesia and intervention-related events and milestones
respectively were recorded by the same software. Thus,
post-hoc synchronization was not required. Furthermore, the
patients’ sex, weight, age, size and the type of intervention
were recorded.
A second study based on the SomnuCare software was
carried out with a Philips MP70 patient monitor and BBraun
syringe pumps. The setup was comparable to the described
study, which will be explained in the following Section more
deeply.
A. Data Acquisition During Surgery
The data collected during the described studies are the
base of the alarm system integrated in SomnuCare. The
original study with a limited device combination has been
previously published in [1].
In order to improve comparability of the collected data,
similar surgical interventions, most of them gynecologic
laparoscopic, were selected for recording. Anonymous data
acquisition took place at the University Hospital Aachen
after approval by the local ethics committee. Generally, the
most important steps were pointed out as milestones:
• Start of presence of the anesthesiologist
• Start of anesthetization
• Approval for surgery
• Start of surgical preparation
• Start of surgical intervention
• End of surgical intervention
• End of surgical wrap-up
• End of anesthesia
• End of presence of the anesthesiologist
Furthermore, following events were recorded:
• Anesthetic events like intubation or inserting of a
stomach tube
• Surgical events like skin incision, intra-operative relo-
cation
• Intravenous drug injection
All vital signs and information from the following devices
were recorded:
• Datex Ohmeda AS/3 or MP70 patient monitor
• Draeger Cicero, Cato, Primus anesthetic machine con-
nected via Datex Ohmeda monitor
• Up to four BBraun perfusor infusion pumps
The above listed devices represent the standard setup in the
University Hospital Aachen for these surgical interventions
and resulted in the following recorded vital signs:
• Heart rate, non-invasive and/or invasive blood pressure,
oxygen saturation
• Respiratory rate, tidal volumes, pressures, fractions of
end-tidal CO2, O2 and anesthetic gases
• Anesthesia agents via syringe pumps and/or anesthetic
gas concentration via the anesthetic machine
In total, data from 17 surgical interventions were recorded
(8 female, 9 male patients). A balanced anesthesia with
anesthetic gases (Isoﬂurane, Sevoﬂurane) was carried out
in 8 cases; the remaining 9 received a total intravenous
anesthesia using Propofol and Remifentanil.
B. Anesthesia Alarm Concept
Generally, patient alarms are generated if a vital sign, for
example the blood pressure, exceeds previously set limits.

123
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
In the operating room this concept is reasonable, since every
exceeding can be critical. But, after critical situation, it is
not necessary to repeat this alarm every 2 minutes, after
the alarm has been conﬁrmed and the underlying problem is
already solved. As a solution for this problem, the following
state machine was implemented for every important vital
sign, for example like heart rate, non-invasive blood pressure
and oxygen saturation: Compared to conventional alarms,
which are triggered by exceeding pre-conﬁgured but ﬁx
limits, the state machine reconsiders the change of the
vital sign after limit exceeding. So, initially the concept
of classical limits is kept, but supplemented with the state
machine algorithm.
Concretely, the alarm is rated into four conditions, similar
to a trafﬁc light.
• RED for a serious danger for the patient
• ORANGE for a situation with a potential danger for
the patient
• YELLOW for the phase after a RED or ORANGE
alarm is cleared
• GREEN for no alarm
The resulting state machine and ﬂow diagram can be seen
in 12.
Figure 12.
Resulting state maschine [1]
C. Results
The described trafﬁc light alarm system is useful to avoid
unnecessary alarms after critical situations. An example of
such a situation can be seen in Figure 13. After a markedly
increase of the blood pressure an orange alarm will be
raised. If the alarm is acknowledged and the vital signs
trend is targeting in-between the limits, the alarm turns into a
yellow alarm. The yellow alarm still gives fair warning to the
anesthesiologist, but the intrusive periodic acoustic warning
is suppressed. If the trend is going worse, the alarm will
return to the orange or red state.
Figure 13.
Example of an recorded surgical intervention [1]
VI. CONCLUSION AND FUTURE WORK
With regard to develop a manufacturer-independent pro-
tocol and interface standard for the operating room, ﬁrst
advances of the smartOR concept were described. In par-
ticular, the Open Surgical Communication Bus as well
as approaches to realize workstations, which are custom-
designed for anesthesia and surgery respectively were pre-
sented. First clinical data were already collected via already
existing hardware interfaces and software modules and used
for the development of novel anesthesia alarm concepts.
Nevertheless the system is not fully developed yet but in
progress.
A. smartOR System Overview
All devices in the smartOR are managed by a central
device. Currently the device manager is integrated in the
surgical workstation and lists all available devices in the user
interface. However, the device manager should manage the
access between the devices and manage the risk a new device
or data exchange between devices can bring. Therefore
additionally the device manager should integrate the risk
and security management for the network.
Furthermore, fall back strategies must be planned in order
to handle a failure of this component. Of course the network
should be still functional even whether in a function limited
mode. For example if the device manager fails, the network
could keep its current state and ignore new devices, which
risk and security aspects cannot be assessed by the manager.
The gateway is included in the concept, but not been
implemented yet. It should consist of a powerful PC, which
is able to run a stateful ﬁrewall, in order to ﬁlter unsecure
trafﬁc from the hospital IT, while forwarding relevant data,
like DICOM images from the radiology or patient informa-
tion from a hospital information system.

124
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
B. Technical Realization
The described components and protocols used in the
lower layers of the OSI reference model, like Ethernet, TCP
and UDP are used in many applications. Even in medical
applications the used technologies are state of the art. Since
there are no hard real time criteria to match, Ethernet with
100Mbit/s or 1GBit/s is fast enough for the OSCB.
A comparison between different DPWS frameworks is
still missing. The currently used WS4D-JEMEDS frame-
work is a ﬂexible tool, but not optimized for the OSCB. In
future we will implement the OSCB protocol using different
frameworks, like the in C++ written WS4D-gSOAP or the
.NET Compact Framework, which covers the C# world.
Additionally the consortium is developing an optimized
framework in C++, with less dependencies to other libraries.
This helps integrating the OSCB to medical devices, which
are based on limited embedded hardware. The SomnuCare
software will be modiﬁed to use the new C++ framework.
Another point is the cross operating room communication
with the telesupervision client. As already mentioned the
smartOR gateway ﬁlters all possible risky and unnecessary
trafﬁc and isolates each operating room. Implementing a
cross operating room operation for the telesupervision sys-
tem, the gateway must allow the trafﬁc for the telesuper-
vision system and forward it to the hospital IT or a WiFi
infrastructure.
C. Implementation of the Anesthesia Workstation
The anesthesia workstation is a modular software, which
integrates devices like patient monitor, anesthesia machine
and syringe pumps into the OSCB. Furthermore, the soft-
ware is capable of performing real time computations on the
signals received from the interfaces. The concept has been
approved in practical use in studies and in the demonstration
environment, according to Figure 3.
One of the most important following steps is the direct in-
tegration of a DPWS framework, without external processes
running, in order to reduce overhead and additional interface
logic, which is not conform to the standard SomnuCare
interface logic, described in Section IV-B. One possible
solution would be the integration of the self-developed
framework or the WS4D-gSOAP framework. Furthermore,
work has to be done equipping syringe pumps and anes-
thesia machines with a control mode, so that parameters of
connected devices can be changed by the workstation. This
would help in situations where the anesthesiologist has to act
near the patient and is not able to setup new dose rates or
parameters on the devices. Realizing such functions needs an
extension to the described concepts, mainly extensions in the
risk management. The workstation must ensure the correct
setting of dose. Furthermore, the user must be present in the
operating room in order to supervise the new setup.
D. Medical Application
Several
medical
applications
and
advances
can
be
achieved using the approach to reduce unnecessary but
intrusive alarms is meaningful for practical and safety rea-
sons. The conventional min/max alarms have been approved
for many years and will therefore be kept and extended
with technologies, which use the information from other
devices in the smartOR network. For example the system can
correlate possible blood pressure variability with the setting
of the OR table. Than a workﬂow engine can analyze the
actions of every device in the OR and determine possible
future steps of the intervention in order to adopt alarm
limits or to give advices for the next steps. Furthermore,
dependent on the next steps of the intervention, the system
can recommend, for example, to increase depth of anesthesia
in advance of skin incision or a pending painful procedure.
ACKNOWLEDGEMENT
The described work is supported by the German Ministry
of Economics and Technology. The smartOR project has
the support code 01MMA09041A. The responsibility of this
publication is by the authors. The authors would thank
the following smartOR project partners for the efﬁcient
collaborative work:
• Innovation Center for Computer Assisted Surgery (IC-
CAS) der Universitt Leipzig
• LOCALITE GmbH
• Richard Wolf GmbH
• SurgiTAIX AG
• Synagon Gmbh
• VDE/DGBMT
Furthermore, the project is supported by clinics of different
branches.
REFERENCES
[1] M. Koeny, M. Czaplik, M. Walter, R. Rossaint, and S. Leon-
hardt, “A new telesupervision system integrated in an intel-
ligent networked operating room,” The Third International
Conference on Emerging Network Intelligence, 2011.
[2] M. Walter, “Telesupervision und automatisierung in der
anaesthesie,” VDE Kongress 2006 Aachen, 2006.
[3] “Website Richard Wolf GmbH - Core system (last visited:
December 2012) http://www.richard-wolf.com/core.html.”
[4] “Website Stryker Corporate (last visited: December 2012)
http://www.stryker.com.”
[5] V. Billard, S. Ming, J. Miatello, K. Chatti, and F. Ferhi,
“Drug interaction display during balanced anesthesia: Smart
pilot view preliminary study,” Anesthesiology 2010, no. A869,
2010.
[6] R. Kennedy, “Seeing the future of anesthesia drug dosing:
Moving the art of anesthesia from impressionism to realism,”
Anesthesia & Analgesia, vol. 111, no. 2, pp. 252–55, 2010.

125
International Journal on Advances in Internet Technology, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/internet_technology/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[7] “Website GE Healthcare (last visited: December 2012)
http://www.gehealthcare.com.”
[8] B.
Ibach,
A.
Zimolong,
P.
Knipp,
J.
Benzko,
and
K. Rademacher, “Modulare Integration und Vernetzung von
Medizinprodukten unter Beruecksichtigung der IEC 80001,”
DESIGN & ELEKTRONIK Entwicklerforum Embedded goes
Medical, 2009.
[9] “Medizinische elektrische geraete,” 2006.
[10] “Application of risk management to medical devices,” 2007.
[11] “Application of risk management for it-networks incorporat-
ing medical devices,” 2010.
[12] “orthoMIT - Future Orthopedic Operating Room (Last vis-
ited: December 2012) http://www.orthomit.de.”
[13] “SOMIT - FUSION project (Last visited: December 2012)
http://http://www.somit-fusion.de.”
[14] J. Goldman, “Advancing the adoption of medical device
plug-and-play interoperability to improve patient safety and
healthcare efﬁciency,” Medical Device ”Plug-and-Play” Inter-
operability Program, Tech. Rep., 2000.
[15] J. B. nad Bastian Ibach and K. Radermacher, “Der traum vom
plug u. play im op,” MED engineering, vol. 03-04, pp. 76–79,
2011.
[16] D. Clunie, DICOM Structured Reporting. Bangor: PixelMed
Publishing, 2001.
[17] “Medical device ”plug-and-play” website (last visited: De-
cember 2012) http://mdpnp.org.”
[18] (2012, Jun.) Draeger inﬁnity protocol. [Online]. Available:
http://www.draeger.de
[19] “IEEE 802.11 - Wireless LAN (WLAN), Wi-Fi.”
[20] “Devices Proﬁle for Web Services Version 1.1,” 2009.
[21] T. Nixon and A. Regnier, “Devices proﬁle for web services
version 1.1,” OASIS, Tech. Rep., 2009.
[22] “W3C SOAP 1.2 - Simple Object Access Protocol,” 2007.
[23] “ISO 11073 - Health informatics,” 2006.
[24] B. Ibach, A. Zimolong, F. Portheine, and K. Raderma-
cher, “Serviceorientierte Architekturen am Beispiel Opera-
tionssaal,” 9. Wuerzburger Medizintechnikkongress Kongress-
band, pp. 198–201, 2008.
[25] J. Benzko, B. Ibach, and K. Radermacher, “Or-integraction
based on soa - automatic detection of new service providers
using dpws,” Proceedings CARS (Suppl. 1), vol. 01, pp. 195–
196, 2010.
[26] “QT website / layout management (last visited: December
2011) http://qt.nokia.com/products/.”
[27] Draeger Medibus fuer Narkosegeraete, 1999.
[28] “The Mathworks company website (last visited: December
2012) http://www.mathworks.com.”

