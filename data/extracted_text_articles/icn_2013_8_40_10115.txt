A Numerical Approach for Performance Evaluation of Cellular Mobile Networks
with Channels Breakdowns
Nawel Gharbi
Computer Science Department
University of Sciences and Technology, USTHB
Algiers, Algeria
Email: ngharbi@wissal.dz
Abstract—In this paper, we propose a numerical approach to
study performance and reliability of cellular mobile networks,
taking into account the repeated attempts of users whose call
was refused due to the lack of available resources and random
breakdowns of the base station channels, using the Generalized
Stochastic Petri Nets (GSPNs) model as a support. In fact,
one of the major drawbacks of this high-level formalism in
performance evaluation of large networks is the state space ex-
plosion problem. Hence, the novelty of this investigation is the
presentation of an approach which allows a direct computing
of the inﬁnitesimal generator describing the users behavior and
channels allocation, without the generation of the reachability
graph nor its reduction. In addition, we develop the formulas
of the main stationary reliability and performance indices as a
function of the network parameters, the stationary probabilities
and independently of the reachability set markings.
Keywords-Cellular Mobile Networks; Repeated calls; Channels
breakdowns; Inﬁnitesimal generator; Performance Evaluation.
I. INTRODUCTION
Modeling and performance evaluation are essential for
design of cellular mobile networks, where, the number of
users and the need for higher data rates and multimedia
services increase more and more. Hence, the study of users
behavior and in particular, the repeated attempts (called
repeated calls or retrials) of users whose call was refused due
to the lack of available resources and the consideration of
random breakdowns of the base station channels, are crucial
to determine the network performance because they can have
quite a negative impact on the quality of service offered
to users and should therefore not be neglected in network
design and planning.
The modeling of repeated attempts has been a subject
of numerous investigations dealing with the performance
analysis of switching systems, communication networks,
cellular mobile networks [1], [2], [3] and wireless sensor
networks [4].
In modern cellular networks, micro cells are under consid-
eration. These small cells operate in licensed and unlicensed
spectrum that have a range of 10 to 200 meters, compared
to macrocells which might have a range of a few kilometers.
Hence, the cell size gets smaller, and thus the number
of users served in a cell will be relatively smaller, such
that trafﬁc models with a ﬁnite source of users should be
considered.
This paper aims at presenting a numerical approach for
performance and reliability evaluation of cellular mobile
networks, where the supported area is divided into micro
cells, each of them contains a ﬁnite number of users and is
served by a base station having a limited number of channels
which could be subject to random breakdowns. We focus
specially on the effect of repeated calls of blocked users and
channels breakdowns on the network performances.
Although the reliability study is of great importance, there
are only few works that take into consideration repeated
calls involving the unreliability of the servers and the ﬁnite
source of users, as it can be seen in the recent classiﬁed
bibliography of Artalejo [5]. Moreover, most studies deal
with single unreliable server retrial queues or an inﬁnite
customers source [6], [7], [8], [9], [10]. However, papers
treating ﬁnite-source retrial systems with multiple unreliable
servers are fewer.
The unreliable heterogeneous servers
case was considered by Sztrik [11] using a retrial queueing
model.
On the other hand, retrial mobile networks with
several homogeneous servers subject to breakdowns were
modeled and analyzed by means of Generalized Stochastic
Petri nets (GSPNs) in the recent paper of Gharbi [3].
From a modeling point of view, and compared to retrial
queues, the generalized stochastic Petri nets (GSPNs) high
level formalism allows an easier description of the behavior
of complex systems. This is particularly true for mobile net-
works. However, the model analysis requires the generation
of the reachability graph and then its reduction to obtain
the corresponding Markov chain. These two steps require
a large storage space and a long execution time. Moreover,
the state space increases exponentially as function of the
users source size and the base station channels number.
So, for practical cellular networks, the models may have
a huge state space. Hence, the novelty of this investigation
is the presentation of an approach to deal with this problem.
To this end, we develop an algorithm for automatically
calculating the Markov chain inﬁnitesimal generator, without
the generation of the reachability graph nor its reduction. In
that way, the storing of the entire state space is avoided. In
190
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

addition, we develop the formulas of the main stationary
performance and reliability indices, as a function of the
base station channels number, the users source size, the
stationary probabilities and independently of the reachability
set markings.
The paper is organized as follows: First, we give the
syntax and semantics of GSPNs formalism. Next, the GSPN
model describing a network cell with repeated calls and
base station channels breakdowns is developed in Section
3.
Then, the proposed analysis approach is detailed.
In
Section 5, the computational formulas for evaluating exact
performance indices of these networks are derived. Next,
based on some experimental examples, we validate our
approach in the reliable case and we illustrate the effect of
retrial rate and base station channels number on the mean
response time. Finally, we give a conclusion.
II. SYNTAX AND SEMANTICS OF GENERALIZED
STOCHASTIC PETRI NETS
Generalized stochastic Petri nets (GSPNs) [12], [13] are a
powerful mathematical and graphical formalism, well suited
for modeling and evaluating the performances of stochastic
systems involving concurrency, nondeterminism and syn-
chronization. In the past decade, GSPNs have received much
attention from researchers, and have been extensively used
for analytical modeling of performance and performability
of computer, communication, manufacturing and aerospace
systems.
Formally, a GSPN can be deﬁned as an eight-tuple
(P, T, α, I, O, H, W, M0) where P is the set of places, T
is the set of transitions such that T ∩ P = ∅, it consists
of timed and immediate transitions, α : T → {0, 1} is the
priority function which associates the priority α(t) = 1 to
immediate transitions and α(t) = 0 to timed transitions, I,
O, H : T → Bag(P) are the input, output and inhibition
functions, respectively, where Bag(P) is the multiset on P,
W : T → R+ is a function that assigns a rate of negative
exponential distribution to each timed transition and a weight
to each immediate transition, M0 : P → IN is the initial
marking, a function that assigns a nonnegative integer value
to each place, and describes the initial state of the system.
In the graphical representation, places are represented
by circles, timed transitions by boxes (or rectangles) and
immediate transitions by thin bars. Arcs, leading from places
to transitions (from transitions to places resp.) describe the
input (the output resp.) function and the arcs, denoting the
inhibition function are circle-headed. Arcs are labeled with
an integer d ≥ 1 called the multiplicity of the arc, a value
of 1 is usually omitted for readability.
The system state is described by means of markings. The
marking of a place is the number of tokens which the place
contains. A marking of a Petri net is a mapping M : P →
IN, which speciﬁes the number of tokens in each place of
the net. The dynamic behavior of a GSPN results from the
ﬁring of transitions yielding other markings than M0.
A transition t is enabled in a marking M iff each of its
ordinary input places contains at least as many tokens as the
multiplicity of the input arc, and each of its inhibitor input
places contains fewer tokens than the multiplicity of the
corresponding inhibitor arc. One more condition for timed
transitions is that no immediate transition is enabled simul-
taneously in M because immediate transitions have priority
over timed transitions. Moreover, an enabled timed transi-
tion t ﬁres after a delay which is exponentially distributed
with rate W(t) while an enabled immediate transition t
ﬁres in zero time. In case of conﬂicts between immediate
transitions in a marking M, a given transition t ﬁres with
probability W(t)/ ∑
t′:M[t′> W(t′). On the other hand, a
timed transition has a single-server, n-servers or ∞-servers
semantics. For the single-server semantics, the ﬁring rate of
a transition t equals its rate W(t), however, for the inﬁnite-
servers semantics, the ﬁring rate of transition t in marking
M is marking dependent and so equals W(t) · ED(t, M),
where ED(t, M) is the enabling degree of t in the marking
M. The condition of marking dependent ﬁring is represented
by the symbol # placed next to transition.
The ﬁring of any enabled timed or immediate transition
t from a marking M, produces a new marking M ′ =
M − I(t) + O(t). All markings created due to the ﬁring of
transitions are called reachable and the reachability graph is
obtained by representing each marking by a vertex and plac-
ing a directed edge from vertex Mi to vertex Mj, if marking
Mj can be obtained by the ﬁring of some transition enabled
in marking Mi. In the reachability graph, markings enabling
no immediate transitions are called tangible markings. In
this case, one of the enabled timed transitions can ﬁre next
(application of race policy commonly). Markings in which
at least one immediate transition is enabled, are called van-
ishing markings and are passed through in zero time. Since
the process spends zero time in the vanishing markings, they
don’t contribute to the dynamic behavior of the system, so,
they are eliminated from the reachability graph by merging
them with their successor tangible markings. This reduction
process which corresponds to the elimination of vanishing
markings results in a tangible reachability graph, which is
isomorphic to a continuous time Markov chain (CTMC).
The states of the CTMC are the markings in the tangible
reachability graph, and the state transition rates are the
exponential ﬁring rates of timed transitions in the GSPN.
The solution of this CTMC at steady-state is the stationary
probability vector π which can be expressed as the solution
of the linear system of equilibrium equations π.Q = 0 with
the normalization condition ∑
i πi = 1, where πi denotes the
steady-state probability that the process is in state Mi and Q
is the inﬁnitesimal generator. Having the probabilities vector
π, we can compute several stationary performance indices
of the system.
191
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

III. GSPN MODEL OF CELLULAR MOBILE NETWORKS
WITH REPEATED CALLS AND CHANNELS BREAKDOWNS
We observe a cellular mobile network where a supported
area is divided into small cells, with a ﬁnite source of
users (mobiles) of size N in each cell and a base station
that consists of c (c ≥ 1) identical and parallel channels
subject to breakdowns and repairs.
Each user is either
free, under service or in orbit at any time. Each channel
can be in operational (up) or non-operational (down) state,
and it can be idle or busy (on service).
User requests
are assigned to operational idle channels randomly and
without any priority order.
If one of the channels is up
and idle at the moment of the arrival of a call, then the
user starts being served immediately.
Service times are
independent identically-distributed random variables, whose
distribution is exponential.
After service completion, the
channel becomes idle. Otherwise, if all channels are busy
or down at the arrival of a request, the user joins the orbit.
In Fig. 1, we present the GSPN model describing the
users behavior and the channels allocation. In this model,
the place Cus−Free contains the free users, place Choice
represents the arrival of a primary or a repeated call for
service and place Ser−Idle represents the operational idle
channels. Initially, it contains c tokens because all channels
are up and available. Place Cus−Serv contains the users
in service.
Place Orbit represents the orbit and place
Ser−Down contains the failed channels. Hence, the initial
marking of the net is given by:



M0(Cus−Free) = N
M0(Ser−Idle) = c
M0(p) = 0
∀p ∈ P, p /∈ {Cus Free, Ser Idle}.
The ﬁring of transition Arrival indicates the arrival of a
primary request. The service semantics of this transition is
∞-servers (represented by symbol #) because free users can
independently generate primary calls. Hence, the ﬁring rate
depends on the marking of place Cus−Free and is equal
to λ.M(Cus Free).
At the arrival of a primary or repeated call to place
Choice, if place Ser−Idle contains at least one token, i.e.,
if there is at least one idle operational channel, immediate
transition Begin−Serv ﬁres. Hence, the user starts being
served and the channel moves into busy state. Otherwise, if
place Ser−Idle is empty, immediate transition Go−Orbit
ﬁres and the user immediately joins place Orbit and starts
generating a ﬂow of repeated calls with rate ν, until it
ﬁnds an operational idle channel.
In fact, users in orbit
behave independently of each other and are persistent in the
sense that they keep making retrials until they receive their
requested service, after which they have no further effect on
the network. The ﬁring of transition Retrial represents the
arrival of a repeated call. As users independently generate
repeated calls, this transition has an ∞-server semantics.
                                             Orbit 
 
 
                                                               Go_Orbit                   Ser_Idle                                
                      Retrial                                                                       
                                                                                         c 
   ν     # 
 
                                                                      Cus_Serv    Service 
        Cus_Free              λ                                                                 µ        
                         N                     
                                        #                                                                 #  
                                      Arrival         Choice    Begin_Serv 
                      #            γ             τ 
                        Act_Fail                  Repair                                                
 
          
      Ser_Down                               
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1.
GSPN model of small cell networks with retrials and channels
breakdowns
At the end of a service period, timed transition Service
ﬁres.
The users under service returns to free state (to
place Cus−Free) and the channel becomes idle and ready
to serve another user. As services take place in parallel,
transition Service has an ∞-servers semantics.
If a channel fails during a service period, which is
represented by the ﬁring of timed transition Act−Fail, the
interrupted user joins the orbit and will restart service later,
while the failed channel joins place Ser−Down, where it
will be repaired. The ﬁring of transition Repair represents
the end of the repair time which is exponentially distributed
with rate τ, and the fact that the repaired channel returns
to the operational idle state (to the place Ser−Idle). The
repairman repairs one channel at a time. Thus, the service
semantics of transition Repair is single-server semantics.
This means that the ﬁring rate is constant.
IV. STOCHASTIC ANALYSIS
When modeling real cellular mobile networks, gener-
ating the GSPN reachability graph and then the reduced
underlying Markov chain, may require a huge storage space
and a long execution time, since the state space increases
exponentially as a function of the users source size and
channels number.
To overcome this problem, this paper
aims to avoid these two steps by designing an algorithm that
compute directly the Markov chain inﬁnitesimal generator
as a function of system parameters and without generating
neither the reachability graph nor the reduced Markov chain.
In that way, the complete storing of the reachability set is
avoided.
In the following, we describe in detail, the applied steps
to derive the corresponding algorithm.
Whatever the values of N and c (with c < N), the
conservation of users and channels gives the following
equations:
192
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

{
M(Cus−Free) + M(Cus−Serv) + M(Orbit) = N
M(Ser−Idle) + M(Cus−Serv) + M(Ser−Down) = c (1)
Observing these two equations, we note that the system
state at steady-state can be described by means of three
variables (i, j, k), where:
• i represents the number of users in service (in place
Cus−Serv);
• j is the number of users in orbit (in place Orbit);
• and k is the number of failed channels (in place
Ser−Down).
Hence, having (i, j, k), the markings of all places can be
obtained. On the other hand, applying (1), we can deduce:
{ 0 ≤ i + j ≤ N
0 ≤ i + k ≤ c
(2)
The behavior of the system can be described by a CTMC,
whose inﬁnitesimal generator is an R × R matrix Q. When
there are i users in service, the remaining N − i users must
be dispatched between places Cus Free and Orbit, and the
remaining c − i channels are idle or down. However, when
active breakdowns are considered, state (0, 0, c) where all
users are free and all channels are down is not reachable,
because channels can fail only in busy state. But the model
with (in)dependent breakdowns includes this state. Hence,
the number R of accessible tangible markings equals: R =
[∑c
i=0(N − i + 1).(c − i + 1)] − 1, which can be rewritten
as: R = [∑c+1
i=1(N − c + i) ∗ i] − 1.
The inﬁnitesimal generator Q is constructed as follows:
Q[(i, j, k), (x, y, z)] =







θ[(i, j, k), (x, y, z)]
if (i, j, k) ̸= (x, y, z),
− ∑
(x,y,z)̸=(i,j,k) θ[(i, j, k), (x, y, z)]
if (i, j, k) = (x, y, z).
where θ[(i, j, k), (x, y, z)] is the transition rate from state
(i, j, k) to state (x, y, z). By analyzing the ﬁrings of the
GSPN transitions, we obtain the following rates:
• [k > 0] : (i, j, k)
τ−→ (i, j, k − 1)
• [i > 0] : (i, j, k)
iµ
−→ (i − 1, j, k) and (i, j, k)
iγ
−→
(i − 1, j + 1, k + 1)
• [j > 0 and i + k < c] : (i, j, k)
jν
−→ (i + 1, j − 1, k)
• [i + j < N and i + k < c] : (i, j, k)
(N−i−j).λ
−−−−−−−→ (i +
1, j, k)
• [i + j < N and i + k = c] : (i, j, k)
(N−i−j).λ
−−−−−−−→ (i, j +
1, k)
As a consequence, the inﬁnitesimal generator can be
automatically calculated by means of Algorithm 1. In this
case, when dealing with line 7, the case where i + j = 0
should not be considered, as the state where all users are
free and all channels are down does not exist. The same
holds for line 29 when i = j = 0 and k = c.
Algorithm 1 Computation of the inﬁnitesimal generator
◃ Primary arrivals : i + j < N
1: for i ← 0, c − 1 do
2:
for j ← 0, N − i − 1 do
3:
for k ← 0, c − i − 1 do
4:
◃ admission in service
5:
θ[(i, j, k), (i + 1, j, k)] ← (N − i − j).λ
6:
end for
7:
◃ admission in orbit
8:
θ[(i, j, c − i), (i, j + 1, c − i)] ← (N − i − j)λ
9:
end for
10: end for
◃ Successful retrials : j > 0 and i + k < c
11: for i ← 0, c − 1 do
12:
for j ← 1, N − i do
13:
θ[(i, j, k), (i + 1, j − 1, k)] ← j.ν
14:
end for
15: end for
◃ End of service and channel breakdown : i > 0
16: for i ← 1, c do
17:
for j ← 0, N − i do
18:
for k ← 0, c − i do
19:
◃ end of service
20:
θ[(i, j, k), (i − 1, j, k)] ← i.µ
21:
◃ channel breakdown
22:
θ[(i, j, k), (i − 1, j + 1, k + 1)] ← i.γ
23:
end for
24:
end for
25: end for
◃ Repairs : k > 0
26: for i ← 0, c − 1 do
27:
for j ← 0, N − i do
28:
for k ← 1, c − i do
29:
θ[(i, j, k), (i, j, k − 1)] ← τ
30:
end for
31:
end for
32: end for
V. PERFORMANCE AND RELIABILITY INDICES
The aim of this section is to derive the formulas of
the most important stationary performance and reliability
indices. As, the proposed models are bounded and the initial
marking is a home state, the underlying process is ergodic.
Hence, the steady-state solution exists and is unique.
The inﬁnitesimal generator Q can be obtained automati-
cally by applying the above algorithms. Then, the steady-
state probability vector π can be computed by solving the
linear equation system:
193
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks




π.Q = 0
∑
(i,j,k) πi,j,k = 1,
where (i, j, k) satisfy the conditions given in (2).
Having the probability distribution π, we can derive
several
exact
performance
and
reliability
measures.
Although state (0, 0, c) is not reachable, we consider it in
order to have an homogeneous presentation of formulas. In
this case, we assign it a null probability.
• Mean number of busy channels (ns): This
corresponds to the mean number of tokens in place
Cus−Serv which is also the mean number of cus-
tomers under service.
ns =
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
i.πi,j,k
(3)
• Mean number of users in orbit (no):
This corresponds to the mean number of tokens in
place Orbit.
no =
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
j.πi,j,k
(4)
• Mean number of users in the system
(n):
n = ns + no =
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
(i + j).πi,j,k
(5)
• Mean number of failed channels (nf):
This represents the mean number of tokens in place
Ser−Down.
nf =
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
k.πi,j,k
(6)
• Mean number of operational idle
channels (ni):
This
represents
the
average
number of tokens in place Ser−Idle.
ni = c−(ns+nf) = c−
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
(i + k).πi,j,k (7)
• Mean rate of generation of primary
calls (λ):
This represents the throughput of
transition Arrival, which equals the throughput of
transition Service.
λ = (N − n).λ =
c
∑
i=0
N−i
∑
j=0
c−i
∑
k=0
(N − i − j).λ.πi,j,k
(8)
• Mean rate of service (µ):
This represents
the throughput of transition Service.
µ = µ.ns = λ
• Mean rate of generation of repeated
calls (ν): This represents the retrial frequency of
customers in orbit. It corresponds to the throughput of
transition Retrial.
ν =
c
∑
i=0
N−i
∑
j=1
c−i
∑
k=0
j.ν.πi,j,k = ν.no
• Failure frequency of busy channels
(γ):
This represents the throughput of transition
Act−Fail.
γ =
c
∑
i=1
N−i
∑
j=0
c−i
∑
k=0
i.γ.πi,j,k = γ.ns
• Failure frequency of idle channels
(δ):
This represents the throughput of transition
Idle−Fail.
δ =
c−1
∑
i=0
N−i
∑
j=0
c−i−1
∑
k=0
(c − i − k).δ.πi,j,k = δ.ni
• Blocking probability of a primary
call (Bp):
Bp =
∑c
i=0
∑N−i−1
j=0
(N − i − j).λ.πi,j,c−i
λ
• Blocking probability of a repeated
call (Br):
Br =
∑c
i=0
∑N−i
j=1 j.ν.πi,j,c−i
ν
• Blocking probability (B):
B =
λ
λ + ν . Bp +
ν
λ + ν . Br
• Mean rate of repair (τ):
This represents the throughput of transition Repair.
τ
=
τ.
c−1
∑
i=0
N−i
∑
j=0
c−i
∑
k=1
πi,j,k
=
{
γ,
in active breakdowns,
γ + δ,
in dependent breakdowns.
• Utilization of s channels (Us):
(0
≤
s ≤ c) This corresponds to the probability that s
channels are busy :
Us =
N−s
∑
j=0
c−s
∑
k=0
πs,j,k
• Availability of s channels (As):
(0 ≤ s ≤ c) This corresponds to the probability that
s channels are operational and idle.
As =
c−s
∑
i=0
N−i
∑
j=0
πi,j,c−s−i
194
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

Table I
VALIDATION IN THE RELIABLE CASE
Reliable [14]
Non-reliable
Number of channels
4
4
Number of users
20
20
Primary call generation rate
0.1
0.1
Service rate
1
1
Retrial rate
1.2
1.2
channel’s failure rate
-
1e-25
channel’s repair rate
-
1e+25
Mean number of busy channels
1.800748
1.800764
Mean number of sources
0.191771
0.191786
of repeated calls
Mean rate of generation
1.800748
1.800745
of primary calls
Mean waiting time
0.106495
0.1065036
• Failure probability of s channels
(Fs):
(0 ≤ s ≤ c) This corresponds to the
probability that s channels are failed:
Fs =
c−s
∑
i=0
N−i
∑
j=0
πi,j,s
• Utilization of the repairman (Ur):
This corresponds to the probability that at least one
channel is failed:
Ur = τ/τ
• Mean response time (R): The mean response
time is deﬁned as the mean time from the instant a
customer generates a primary request until it is served.
In the steady state, it can be obtained using Little’s
formula:
R = no + ns
λ
• Mean waiting time (W):
W = no
λ = R − 1
µ
VI. EXPERIMENTAL EXAMPLES
In order to test the feasibility of our approach, we
developed a tool to implement the above algorithm and the
performance indices formulas. Hence, we tested it for a large
number of examples. In particular, the results obtained in
the reliable case were compared to those generated by the
program given in the book of Falin and Templeton [14] for
analysis of ﬁnite-source retrial queues with reliable servers,
since if the failure rate in non-reliable models is very low and
repair rate is very high, the performance parameters should
approach the corresponding ones in reliable models. From
table I, we can see that the results of the proposed approach
are very close to those obtained in the reliable case.
Next, we illustrate the effect of retrial rate and base station
channels number on the mean response time. The results are
presented in Figure 2 and Figure 3, respectively, where the
two curves correspond to the reliable case and non-reliable
one. From these two ﬁgures, we see that the mean response
time is a decreasing function of retrial rate and channels
number. Moreover, the reliable model gives the best mean
response times in the two cases.
Figure 2 also shows that the retrial rate has a signiﬁcant
inﬂuence on the mean response time for low retrial rate
values. However, when more and more repeated requests
arrive, the decrease is not considerable in the case of
channels breakdowns.
Figure 3 shows that a small change in the number of base
station channels, particularly from 1 to 3 channels, produces
a big difference in the mean response time (≈ −61% for the
unreliable channels). However, after a certain value (c = 4),
the decrease is not considerable.
VII. CONCLUSION AND FUTURE WORK
This paper aims at presenting an approach that allows per-
formance evaluation of cellular mobile networks, taking into
account the repeated calls of blocked customers, the ﬁnite
number of customers served in a cell and the breakdowns
of base station channels. The ﬂexibility of GSPNs modeling
approach allowed us a simple construction of detailed and
compact models for these systems. The models are used as
a support to derive the balance equations of the networks,
so that the inﬁnitesimal generator can be obtained without
building the reachability graph of the model nor reducing it.
Exact stationary performance and reliability parameters can
then be computed.
In conclusion, the GSPNs method holds promise for the
solution of several systems with repeated attempts. Hence,
it is worth noting that our approach can be further extended
to more complex systems with different breakdowns disci-
plines.
REFERENCES
[1] Artalejo, J.R. and Lopez-Herrero, M.J.: Cellular mobile net-
works with repeated calls operating in random environment.
Computers & operations research 37, no7, pp. 1158-1166
(2010)
[2] Tien Van Do: A new computational algorithm for retrial
queues to cellular mobile systems with guard channels. Com-
puters & Indus. Engin. 59, pp. 865-872 (2010)
[3] Gharbi, N.: Modeling and Performance Evaluation of Small
Cell Wireless Networks with Base Station Channels Break-
downs. In Proceedings of The Eighth Inter. Conf. on Wireless
and Mobile Communications, pp. 42-48, Italy (2012)
[4] Wuechner, P., Sztrik, J., and De Meer, H.: Modeling Wireless
Sensor Networks Using Finite-Source Retrial Queues with
Unreliable Orbit. Proc. of the Workshop on Perf. Eval. of
Computer and Communication Systems (PERFORM’2010),
vol. 6821 of LNCS Publisher: Springer-Verlag (2011)
[5] Artalejo, J.R.:
Accessible bibliography on retrial queues:
Progress in 2000-2009. Mathematical and Computer Mod-
elling 51, pp. 1071-1081 (2010)
195
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

0
0,5
1
1,5
2
2,5
3
0,01 0,02 0,03 0,04 0,05 0,06 0,07 0,08 0,09
0,1
Retrial rate
Mean response time
Reliable case
Active breakdowns:γ=0,05
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 2.
Mean response time versus retrial rate
0
1
2
3
4
5
6
7
8
9
1
2
3
4
5
6
7
8
9
10
Base Station channels number
Mean response time
Reliable case
Active breakdowns:γ=0,05
 
Figure 3.
Mean response time versus base station channels number
[6] Almasi, B., Roszik, J., and Sztrik, J.: Homogeneous ﬁnite-
source retrial queues with server subject to breakdowns and
repairs. Mathematical and Computer Modelling 42, pp. 673-
682 (2005)
[7] Almasi, B., Roszik, J., and Sztrik, J.: Heterogeneous ﬁnite-
source retrial queues with server subject to breakdowns and
repairs. Journal of Mathematical Sciences 132, pp. 677-685
(2006)
[8] Sztrik, J. and Efrosinin, D.: Tool supported reliability anal-
ysis of ﬁnite-source retrial queues. Automation and Remote
Control 71, pp. 1388-1393 (2010)
[9] Sztrik, J. and Kim, C.S.:
Tool supported performability
investigations of heterogeneous ﬁnite-source retrial queues.
Annales Univ. Sci. Budapest., Sect. Comp. 32, pp. 201-220
(2010)
[10] Wang, J., Cao, J., and Li, Q.: Reliability analysis of the retrial
queue with server breakdowns and repairs. Queueing Systems
38, pp. 363-380 (2001)
[11] Roszik, J. and Sztrik, J.: Performance analysis of ﬁnite-source
retrial queues with nonreliable heterogenous servers. Journal
of Mathematical Sciences 146, pp. 6033-6038 (2007)
[12] Ajmone Marsan, M., Balbo, G., Conte, G., Donatelli, S.,
and Franceschinis, G.: Modelling with Generalized Stochastic
Petri Nets. John Wiley & Sons, New York (1995)
[13] Diaz, M.: Les r´eseaux de Petri - Mod`eles Fondamentaux.
Paris, Herm`es Science Publications (2001)
[14] Falin, G.I. and Templeton, J.G.C.: Retrial Queues. Chapman
and Hall, London (1997)
196
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

