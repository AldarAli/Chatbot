GRChat: A Contact-based Messaging Application for
the Evaluation of Information Diffusion
Enrique Hern´andez-Orallo, David Fern´andez-Delegido, Andr´es Tom´as, Jorge Herrera-Tapia,
Juan-Carlos Cano, Carlos T. Calafate, Pietro Manzoni
Departamento de Inform´atica de Sistemas y Computadores. Universitat Polit`ecnica de Val`encia. Spain.
emails: ehernandez@disca.upv.es, daferde1@ﬁv.upv.es, antodo@upv.es, jorherta@doctor.upv.es,
{jucano, calafate, pmanzoni}@disca.upv.es
Abstract—Contact-based messaging applications establish a short-
range communication directly between mobile devices, storing the
messages in the devices in order to achieve a full dissemination
of such messages. When a contact occurs, the mobile devices
interchange their stored messages, following a epidemic diffusion.
No messages are sent or stored in servers. In order to evaluate the
diffusion of messages among mobile devices based on opportunis-
tic contacts, we developed GRChat, an Android application that
uses Bluetooth as near-by communication protocol. We present
some results about the efﬁciency of peer-to-peer message diffusion
depending on message size and devices distance.
Keywords–Opportunistic networks; Contact-based Messaging;
Performance Evaluation; Epidemic diffusion
I.
INTRODUCTION
Routing protocols for opportunistic communication envi-
ronments enable the storing, carrying, and forwarding of infor-
mation between mobile devices [1]. Based on this technology,
Mobile Social Networking in Proximity (MSNP) [2], is deﬁned
as a wireless peer-to-peer network of opportunistically con-
nected nodes that use proximity as the social relationship. This
condition allows the establishment of local communication
channels that can be used for applications, such as information
sharing, advertisement, disaster and rescue operations, gaming,
etc. For example, FireChat (developed by Open Garden) is a
successful contact-based messaging application.
Contact-based messaging applications work as follows (see
ﬁgure 1): Each mobile device is a node with an application that
notiﬁes and present to the user any received messages for the
subscribed groups. The application is also cooperative: it must
store all messages and performs the diffusion of such messages
to other nearby nodes. Each node has a limited buffer where
it can store the messages obtained from other nodes. When
two nodes establish a pair-wise connection, they exchange all
messages they have in their buffers, and check whether some
of the newly received messages are suitable for notiﬁcation to
the user. Message spreading is based on epidemic diffusion, a
concept similar to the spreading of infectious diseases, when
an infected node (the one that has a message) contacts another
node to infect it (transmit the message). Epidemic routing
obtains the minimum delivery delay at the expense of increased
local buffer usage and transmission count.
To evaluate the performance of contact-based messaging
applications we have developed our own app: the GRChat.
GRChat is an Android app that can establish connection
between two or more phones and transmit data and images
using bluetooth. With this app, we can evaluate several as-
pects that can affect the message diffusion performance, such
as local buffer management, message interchange protocol,
message time-to-live, power consumption, etc. Several sample
screenshots of the GRChat app are shown in ﬁgure 2. It has
two operating modes: normal and benchmarking. In normal
mode, it works like a messaging app where the user can
watch previous messages/images and write new ones. When
the user pushes the send button, GRChat connects to any near-
by devices in order to send this new message, as shown in
ﬁgure 2a (and just in case, it also can receive new messages).
When a device gets a new message it also tries to connect to
other devices in order to complete the diffusion of the message.
The results of sending and receiving several messages are
shown in ﬁgure 2b. When no messages are sent, the appli-
cation is periodically searching for near-by devices in order to
automatically interchange messages. The benchmarking mode
(see screenshot in ﬁgure 2c) is for evaluating the setup and
transmission times. In this mode, one of the devices iteratively
sends a number of messages or images with a predetermined
size for measuring the delivery times of a bunch of messages.
The experience shows that contact-based messaging appli-
cations seem to be operative in open places with a moderate-
high density of persons (greater than 0.05 people per m2).
Furthermore, analytical and simulation models show that infor-
mation diffusion have a strong dependence on contact patterns,
but also on message size [3] [4]. One of the key issues for
performance evaluation is determining the contact setup time
between two devices and the practical transmission bandwidth.
These values will clearly depend on several factors such as
the distance between mobile devices and network congestion.
Thus, in this paper we focus our experiments in message
interchange performance for obtaining contact and message
delivery times depending on devices distance.
On the following section we detail the experiments and
results for obtaining the delivery time, ending the paper with
the conclusions section.
Figure 1. Opportunistic diffusion of messages.
32
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-478-7
INFOCOMP 2016 : The Sixth International Conference on Advanced Communications and Computation (contains MODOPT 2016)

(a)
(b)
(c)
Figure 2. Several screenshots of the GRChat App.
II.
EXPERIMENTAL RESULTS
The goal of the following experiments was to obtain the
message delivery time (i.e. the time needed to transmit a
message) depending on message size, evaluating the impact on
the performance of the relative distance between the devices.
The mobile devices used on the experiments were two BQ
Aquarius M4.5 smartphones using Android Version Lollipop
API 22 with the following hardware characteristics: ARMv7
988Mhz processor, 938MB of RAM, GPU ARM Mali-T720
and Bluetooth 4.0.
The experiments consisted on sending 500 messages from
one device to another one. Every message sending comprises
three steps: the device connection or pairing, the message
transmission and ﬁnally the end of the connection, so the
message delivery times reported include both connection and
transmission times. Three message sizes were considered:
a short text message (375 Bytes), a low-resolution picture
or photo (109 KB), and a short video or high resolution
picture (11 MB). Regarding the separation of the devices,
three different distances are considered: near (10 cm), mid
(5m) and far (10m). The cumulative distribution function plot
(cdf) of the packet delivery time for the different message sizes
are shown in ﬁgure 3, and a resume of the main statistics is
on table I. We can see that, shorter messages have a high
variability due mainly to the connection time, which have
less impact on larger messages. The results for near and mid
distance are very similar. When the distance is far (larger
than the practical bluetooth range, that is 7m), the mean
delivery time increases especially for shorter messages, due
to connection and retransmission problems, affecting seriously
the performance of the diffusion protocol. From these delivery
times, we can estimate the connection time and the practical
bandwidth: when the devices are close, the mean connection
time is about 0.35s and the bandwidth is 1.8Mbps; when the
devices are distant the connection time is increased to 5.8s and
the bandwidth is reduced to 1.5Mbps.
III.
CONCLUSIONS
This paper brieﬂy describes the GRChat app and the exper-
iments performed for obtaining the connection and message
delivery times. In conclusion, as expected, these times are
seriously affected when devices are distant. The obtained
values are planned to be used in simulations and models as the
one detailed in [3]. Also, as a future work, we plan to perform
0
1
2
3
4
5
6
7
8
time (s)
0
0.2
0.4
0.6
0.8
1
F(x)
Near
Mid
Far
(a)
0
1
2
3
4
5
6
7
8
9
time (s)
0
0.2
0.4
0.6
0.8
1
F(x)
Near
Mid
Far
(b)
0
50
100
150
200
250
300
350
time (s)
0
0.2
0.4
0.6
0.8
1
F(x)
Near
Mid
Far
(c)
Figure 3. Cumulative distribution plots of the delivery times for different
message sizes a) 375B; b) 109KB, c) 11MB
TABLE I. MESSAGE DELIVERY TIMES. ALL VALUES IN SECONDS.
mean
min
max
Q1
Q3
375B
Near (10cm)
0.30
0.04
12.42
0.09
0.14
Mid (5m)
0.26
0.06
9.35
0.10
0.14
Far (10m)
0.60
0.05
62.13
0.09
0.16
109KB
Near (10cm)
1.03
0.85
2.56
0.90
1.07
Mid (5m)
1.13
0.76
2.33
0.97
1.13
Far (10m)
2.05
1.01
8.20
1.45
2.24
11MB
Near (10cm)
49.37
45.43
56.75
48.66
49.71
Mid (5m)
57.35
49.62
80.17
54.10
59.60
Far (10m)
72.68
51.21
333.86
58.51
77.95
more experiments regarding buffer and message transmission
strategies.
ACKNOWLEDGMENTS
This work was supported by Generalitat Valenciana, Spain
(Grant AICO/2015/113).
REFERENCES
[1]
L. Pelusi, A. Passarella, and M. Conti, “Opportunistic networking: data
forwarding in disconnected mobile ad hoc networks,” Communications
Magazine, IEEE, vol. 44, no. 11, November 2006, pp. 134–141.
[2]
Y. Wang, A. Vasilakos, Q. Jin, and J. Ma, “Survey on mobile social net-
working in proximity (MSNP): approaches, challenges and architecture,”
Wireless Networks, vol. 20, no. 6, 2014, pp. 1295–1311.
[3]
E. Hernandez-Orallo, J. Herrera-Tapia, J.-C. Cano, C. Calafate, and
P. Manzoni, “Evaluating the impact of data transfer time in contact-
based messaging applications,” Communications Letters, IEEE, vol. 19,
no. 10, Oct 2015, pp. 1814–1817.
[4]
C. S. De Abreu and R. M. Salles, “Modeling message diffusion in
epidemical DTN,” Ad Hoc Networks, vol. 16, May 2014, pp. 197–209.
33
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-478-7
INFOCOMP 2016 : The Sixth International Conference on Advanced Communications and Computation (contains MODOPT 2016)

