A Routing Protocol for WSN Based on the Implementation of Source Routing for 
Minimum Cost Forwarding Method 
 
Fardin Derogarian 
MAP-Tele, INESC Porto 
Faculdade de Engenharia da Universidade do Porto 
Porto, Portugal 
mpt09020@fe.up.pt 
João Canas Ferreira1, Vítor M. Grade Tavares2 
INESC Porto 
Faculdade de Engenharia da Universidade do Porto 
Porto, Portugal 
1jcf@fe.up.pt,
 2vgt@fe.up.pt
 
 
Abstract—This paper presents a routing protocol for wireless 
sensor networks (WSN), established on the basis of 
fundamental concepts in source based routing (SBR) for ad hoc 
networks and minimum cost forwarding (MCF) methods for 
heterogeneous WSNs. Neither routing tables nor network 
topology information is maintained at sensor level, which 
makes the proposed protocol part of the reactive routing 
protocols class. Despite the lack of network information at the 
sensor, the packets from the sink node to sensors, and vice-
versa, always follow the optimal communication path with 
minimum cost. Simulation results have shown that the 
proposed protocol performs better than MCF protocol alone, 
and nodes always route the packets through the optimal path 
up to destination. In fact, according to the energy consumption 
and throughput found by simulation, this protocol improves on 
the MCF protocol for applications where the sink node, acting 
as a server or base station (BS), generates significant amounts 
of network traffic. All results are based on simulations and 
data treatment performed with OMNet++ 4, Matlab 7 and 
Microsoft Visual Studio2010(C#) platform tools. 
Keywords-Wireless 
Sensor 
Networks; 
Minimum 
Cost 
Forwarding; Source Based Routing,  
I. 
INTRODUCTION 
A wireless sensor network (WSN) comprises a large 
number of sensors equipped with wireless communication 
ports that are deployed closed or within the phenomenon to 
be monitored. Recent advances in wireless communication 
electronics have enabled the development of low-cost, low-
power, multifunctional sensor nodes. Small in size and 
capable of communications over short distances, this 
emergent technology has opened a wide range of application 
possibilities. Usefulness can be found in a panoply of areas, 
such as health, military, industrial and home applications 
[1][2]. Usually, in a sensor network, sensors cooperate to 
handover data from the source sensor to the destination. In 
most systems, a single sink node is responsible for collecting 
data from all sensors. Still, in numerous situations, this sink 
node also is a BS node to manage the sensors. 
WSNs are ad hoc networks, employing techniques for 
network self-organization and packet routing [3]. However, 
there are many fundamental differences between the 
traditional wireless ad hoc networks and WSNs per se, 
which makes conventional wireless ad hoc network 
protocols unsuitable for WSN applications. Large number of 
sensors, proneness to failure, fast changing network 
topology, limited resources and low-power consumption are 
examples of such dissimilitude found in WSNs. The 
literature describes numerous protocol designs targeting 
specific WSN applications [1][2][3]. Sensor networks are 
limited-resource systems, therefore a significant amount of 
effort has been directed to reduce the size of the network 
part, overall power consumption and to the design of 
protocols that take these characteristics into consideration.  
Routing protocols are classified in two general 
categories: proactive and reactive protocols [1]. Proactive 
routing protocols keep track of routes to all destinations in 
routing tables. LEACH [4], a protocol based on node 
clustering and PEGASIS [5], a protocol based on a token-
passing chain, are two examples of proactive routing 
protocols. Unlike proactive protocols, reactive protocols 
acquire routes on demand and avoid saving information 
about the network topology. Flooding, Gossiping and MCF 
[6] [7] are examples of reactive protocols.  
Traffic in sensor networks displays, in general, a 
heterogeneous nature [8]. In fact, in most cases, the 
communication patterns in sensor networks are characterized 
by: 
a. 
Traffic between the BS node and sensor nodes. This 
type of traffic has two sources: 1) sensor nodes 
sending acquired data to the BS node (BS as a sink 
node); 2) BS node sending control information to the 
sensor nodes (for configuration of measurement 
parameters, for example). This type of traffic 
represents 
the 
largest 
part 
of 
the 
overall 
communication. 
b. Traffic between adjacent nodes: adjacent nodes 
exchange information data for data transmission, get 
the conditions, connections, topology and etc. 
These conditions need to be considered during the design 
of a network protocol for sensor networks. This paper 
proposes a reactive routing protocol where sensors have no 
information about the network topology, but packets from 
sensors to BS or vice-versa, always communicate over 
optimum paths with minimum cost. Since the proposed 
concept combines source routing with minimum cost 
forwarding, it is called the Source Routing for Minimum 
Cost Forwarding (SRMCF) protocol. In this approach, the 
85
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

routing information of the packets generated by the BS to be 
sent to sensor nodes is included in the packets. 
The rest of the paper is organized as follows: Section 2 
describes the related works. Section 3 describes the main 
protocol and section 4 explains the network initialization 
procedure. Section 5 presents and discusses simulation 
results from the proposed protocol. Section 6 unites the main 
conclusions drawn from this work. 
II. 
RELATED WORKS 
The MCF protocol is a good method for routing packets 
in a reactive sensor network [6][7]. This routing method is a 
cost field based approach and exploits the fact that the 
routing direction of data, flowing from sensors to sink, is 
always known and that cost is always minimum. In this 
method, sink node starts to setup the network with 
broadcasting its cost value and all nodes get minimum cost 
value to reach the sink node. With this method, sensor nodes 
have neither routing tables nor information about the 
network topology.  
It is observable that this approach applies only for data 
sent from the sensor nodes to sink. If the sink node wants to 
send data to a specific node, other methods like flooding 
must be employed. In situations where the BS node 
simultaneously acts as a sink and server, and generates a 
significant amount of data, then implosion, overlapping and 
resource blindness problems, resulting from the flooding 
method, will reduce the network performance. Therefore, 
MCF is appropriate only for those applications where the 
sink node has an almost exclusive role of data collector. 
For the BS to send data to a dedicated sensor, destination 
and routing path must be defined at the BS node like in 
source based routing (SBR) [9]. To implement source 
routing, the packet contains the address of each node on the 
routing path. Source routing requires determining the address 
of all nodes and routing paths from source to destination, as 
is done in protocols like Dynamic Source Routing (DSR) 
[9][10] for wireless ad hoc network and Link Quality Source 
Routing (LQSR) [11] developed by Microsoft for wireless 
mesh networks. DSR and LQSR protocols are reactive 
approaches and do not need routing tables. These protocols 
determine a route on-demand when the source node wants to 
send data to destination node and keep the routing 
information while communicating.  
The source node establishes a route between source and 
destination nodes by broadcasting a RouteRequest packet. 
When the destination node receives the RouteRequest 
packet, it replies with RouteReply packet to the source node. 
This packet carries the routing path from source node to 
destination node. During the communication between the 
nodes, the intermediate nodes route the packets by using the 
routing information which is carried in the packet headers.  
A higher connection setup delay in comparison with 
table-driven protocols and the absence of a mechanism for 
local repair of failed links are some of the disadvantages of 
the DSR and LQR protocols.  
III. 
DESCRIPTION OF THE PROTOCOL 
Consider a wireless network composed of multiple sensor 
nodes and one BS node. The BS node maintains a table of 
minimum cost paths from itself to every sensor node in the 
network. If the BS node needs to send a packet to a given 
sensor node, over a specific path specified in the table, the 
intermediate nodes must be aware of the path and route the 
packet to the correct links. As aforementioned, sensors in a 
reactive network do not have any information about the 
network topology. Furthermore, it is impossible to route the 
packet over a predefined fixed path when nodes have no 
knowledge about network topology or routing information. 
However, if the packet carries the path information, like it is 
done in Trajectory Based Forwarding (TBF) [12] and DSR, 
then the intermediate nodes can use this information to route 
the packets to destination node. 
Taking into account the heterogeneous traffic in a WSN 
and making use of minimum cost forwarding and source 
based routing concepts, a reactive protocol can be designed 
to have optimum routing in both communication directions 
(from BS to nodes and nodes to BS). 
It should be noted that in this method there is only one 
routing table at the BS node: the other nodes use the 
information in that table when the BS node issues a route-
packet. The routing of packets, originated from sensor nodes, 
is based on the minimum cost forwarding method, without 
resourcing to a routing table. It is necessary that nodes can 
identify the type of a packet, because the routing algorithms 
for packets, coming from the BS node and for packets 
generated by sensor nodes, are different. These algorithms 
are described below.   
A. Packets Sent from BS to Sensor Node  
Suppose that the BS node needs to send a packet to 
sensor N3 in Fig. 1. In a mesh network, there are many paths 
from BS to each node, but almost always there is only one 
optimum path that has minimum cost for forwarding packets. 
Suppose that the minimum cost path, between BS and sensor 
node N3, is the one shown in bold in Fig. 1. In the present 
protocol there is a routing table at the BS node that maps 
each sensor node ID to the minimum cost path from BS to 
sensor node. This table is formed during the network setup 
phase. 
 
Figure 1.  The minimum cost path between the BS and sensor N3 
Fig. 2 depicts the proposed format for packets generated 
by the BS. The packet header includes three fields for 
routing purposes: a pointer, an offset and path information. 
The pointer determines the position in the information path 
86
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

for the next node. Each sensor node will decrease it by one 
unit before sending the packet to the next node. When the 
Pointer reaches zero, it means that the current node is the 
destination. 
 
 
Figure 2.   a) Packet generated by BS, b) Header of the packet 
The packet header is variable in length and depends on 
the number of the nodes between the BS and destination 
nodes. The offset determines the length of the path: the 
destination node will use it to determine the start position of 
payload, while intermediate nodes can ignore it.   
As an example, table I shows the paths from BS to nodes 
N2, N3 and N4 as presented in the routing table at the BS. 
The value saved for each node is an ordered list of 
intermediate node IDs.  
TABLE I.  
 ROUTING PATH FOR NODES N2, N3 AND N4 IN ROUTING 
TABLE 
Node 
Path 
… 
... 
ID2 
ID1 
ID3 
ID1, ID2 
ID4 
ID5 
… 
… 
 
Fig. 3 shows the evolution of the pointer value as the 
packet passes through different nodes on the path form BS to 
N3.  To send a packet from BS to N3, BS generates a packet 
with path (ID1, ID2, and ID3) and pointer value 2. When N1 
gets the packet from BS, the pointer value is 2. N1 decreases 
the pointer by one and sends the packet to N2 (since ID2 was 
the node ID in position 2 as specified by the pointer). When 
arriving at N2, the packet pointer is 1:  therefore the packet 
will be sent to N3 with new pointer value 0. N3 gets the 
packet when the pointer is 0: this means that N3 is the 
destination node. 
 
 
Figure 3.  The pointer value in different nodes on the path between BS and 
N3 
It can be seen that with this method sensor nodes can 
route packets without having information about the 
destination node and with minimum processing. All the 
information that they need to select the next node is available 
in the header, and sensors only select the next node based on 
the pointer value and the ID list present in the header. 
B. Packets from a Sensor Node to BS:  
Suppose now that the sensor N3 in Fig. 1 needs to send a 
packet to the BS node. As will be described later, during the 
setup phase of the network, to each node is assigned a 
minimum cost value and the ID of that adjacent node, on the 
path to the BS that has minimum cost. In this example, 
assume that the minimum cost neighbour is N2 for N3 and 
N1 for N2. Then N3 generates a packet that includes the N3 
ID and sends it directly to N2. When N2 has a packet that 
must be sent to the BS node, it will send it to N1. In this 
example, N1 will send the packet to the BS directly. The 
received packet includes ID3 as the identification of the 
source node.  
It is clear that the packet header is different for packets 
sent from the BS node and for those originated from the 
sensor nodes. In the latter, there is no information about the 
present path and the size of the header is fixed. Intermediate 
nodes decide how to handle each packet based on its type.  
IV. 
NETWORK SETUP  
Before normal operation, the network must be initialized. 
The setup phase has two steps. During the first all nodes 
determine their cost values for communicating with the BS 
node. During the second step the BS node generates the 
routing table. The setup processing is as follows. 
A. Determination of  each Node Cost Value  
This step is similar to the minimum cost forwarding 
back-off process [6], however, differently from MCF; each 
node now has a unique ID. First all nodes except the BS, set 
their cost to infinity. The cost can be of any parameter such 
as hop count, transmission power, consumed energy, 
processing resources or delay. The BS node associated cost 
is zero. The BS broadcasts a cost advertisement message to 
the adjacent nodes. When a sensor node receives a cost 
message, compares its present cost with the new cost plus the 
link cost. If the new total cost value is less than its previous 
cost, the node changes the cost to the new value and saves 
the sender ID responsible for the advertisement message. 
The node then broadcasts an advertisement message to the 
adjacent nodes with its new cost value and ID. This process 
continues until all the nodes set their cost values to the 
minimum and introduce themselves to the BS. From the 
standpoint of the BS, one node does not exist unless it has 
introduced itself to BS. The BS node has to wait for the setup 
of the network to finish. The waiting time is set according to 
the number of nodes and network parameters such as link 
speed, delay and processing time. 
In Fig. 4 example, node N3 has two links with N2 and 
N4, but the cost value from N2 is lower than the cost value 
from N4. Therefore, N3 will change its cost to 5 and register 
87
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

the ID of N2 as being on the path with minimum cost to the 
BS node. 
 
 
Figure 4.  Forwarding along minimum cost 
B. Routing Table Creation in the BS Node  
As mentioned before, there is only one routing table for 
the whole network at the BS node. This table has information 
about all optimum paths with minimum cost values between 
the BS node and other nodes. The table creation step 
proceeds as follows: 
When a node changes its cost value to a new value 
(during the setup of the network or even during normal 
operation of the system), it sends a message with its ID to the 
adjacent node from which it had calculated its own cost 
value. The receiver node adds its ID to the received message 
and sends it back to the next adjacent node along the 
optimum path. Eventually, when the BS receives the 
message, it has a message form the source node that includes 
the IDs of the nodes in the path between the source node and 
server node. The server node (BS) will save the IDs as a 
routing path in the row of the routing table, corresponding to 
that particular source node. This way, sensor nodes and sink 
node collaborate in the creation of the routing table. It should 
be noted that the same process will be performed during the 
normal network operation if a cost value, of a given node, 
changes. The cost value of nodes can change when a link or 
node failure occurs or still when a node gets a cost 
advertisement message with a lower cost value than their 
previous cost. 
Fig. 5 shows the routing path creation for node N3, 
supposing that N1 and N2 are the nodes with minimum cost 
value to BS node, on the path between the N3 and BS. Table 
I shows the value of that row belonging to N3 with ID3 in 
the column “Node” of the routing table. 
 
 
Figure 5.  The cost value of N3 has changed 
If a link or node failure occurs during normal operation, 
the cost value of the nodes  and their related routing path in 
BS must be updated. For example, suppose that the link 
between N3 and N2 in Fig. 4  fails, so that the previous cost 
value of N3 is not valid anymore. Then N3 starts the process 
of getting a new cost value by changing its cost value to 
infinity and sending a cost request message to adjacent 
nodes. In this case, it obviously gets a new minimum cost 
value from N4. Now the new path with minimum cost 
between N3 and BS goes through  N1 and N4. After the 
change in cost value, the routing path related to N3 in the 
routing table of BS is updated as mentioned in step B. Note 
that the cost value of the nodes located closer to the BS than 
the failing link are not affected. The process for updating the 
cost value after a node failure is similar.  
V. 
SIMULATION AND RESULTS 
In the above sections the routing protocol and the setting 
up of the network were exposed. This section presents the 
simulation results and the respective performance of a WSN 
using the proposed protocol. The results are compared with 
one employing the MCF protocol, and were obtained by 
implementing both protocols with OMNet++ 4. Matlab 7 and 
Microsoft Visual Studio 2010 with C# were also used to 
create the network and help on the analysis of the data from 
OMNet++.  
The sensors were randomly scattered in a square area and 
remain fixed throughout the simulation. Table II shows the 
simulation parameters. 
TABLE II.  
 SIMULATION PARAMETERS 
Parameter 
Value 
Sensor nodes 
50, 100 
Network area (m2) 
100×100 
The averages size of the packets generated with nodes (byte) 
150 
Packets maximum length (byte) 
256 
Antenna reach (m) 
10 
Processing delay (ms) 
1 
Nodes buffer size (byte) 
1k 
Simulation time (s) 
30 
 
The evaluation metrics are network throughput and 
energy consumption in terms of packet generated by BS 
node, when all the sensor nodes and BS node simultaneously 
generate packets. Another item in analysis is the average 
packet header size created by the BS node in terms of the 
number of sensor nodes in the network. 
Fig. 6 shows the throughput of networks with 50 and 100 
nodes using the proposed protocol. For comparison, the 
throughput for the same network, using the MCF protocol, is 
also shown. Results were collected for different amounts of 
traffic generated by the BS node. The results show that due 
to 
the 
use 
of 
optimum 
path 
information, 
during 
communication, SRMCF achieves higher throughput than 
MCF. Furthermore, for the range analysed, the throughput is 
almost constant with increasing data-rate. 
 
88
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

 
Figure 6.  Throughput of the network in terms of the data rates of the 
packets generated by the BS node 
In fact, with the proposed protocol, the traffic generated 
by the BS node is similar to the traffic of the other nodes. In 
contrast, the MCF protocol floods the packets from BS to 
nodes and increases the unwanted traffic in the network. 
Usually, increasing the traffic augments the probability of 
collisions and consequent packet loss, decreasing the 
network throughput. 
Fig. 7 shows the network energy dissipation plot for the 
SRMCF and MCF protocols and for various values of 
generated packets by BS node. The simulation results are for 
50 and 100 nodes.  
 
 
Figure 7.  Energy consumption of the network. 
The energy consumption during data transmission 
depends on distances between the nodes [13] and usually is 
in the range of a few nano joules per each communication bit 
in WSN applications (10.8 nJ/bit reported in [14]).  After the 
network setup is finished, each node starts to send packets to 
the BS node, at 1kBps data rate. The BS node randomly 
selects nodes and sends packets to them. It can be seen that, 
for the same conditions, the MCF protocol leads to a larger 
energy dissipation that furthermore increases faster with 
increasing data-rate. This is consequence of the flooding 
method used by MCF to send packets from BS to the nodes. 
In contrast, the proposed protocol sends the packets directly 
from BS to the node over the optimum path. 
The SRMCF packet header size, generated by BS, is 
variable and depends on the number of nodes in the paths 
between the BS and destination nodes. When the BS needs to 
send data to adjacent nodes uses a minimum length of 5 
bytes for the header. Fig. 8 shows the average header size for 
networks with 100 to 1000 nodes. The figure implies that 
although the number of nodes increases 10 times, the 
average header size increases only by a factor of 2.26.  
The effect of a variable header size has been taken into 
account in the energy dissipation simulations by considering 
the energy dissipated for each. In our simulations, the 
maximum packet size is 256 byte, so a one–byte filed is 
enough to specify the packet length. Both SRMCF and MCF 
have a fixed 5-byte header for packets generated by the 
sensor nodes. Both protocols have a relatively small header 
size in relation to the overall packet size. 
 
Figure 8.  Packet header size  
VI. 
CONCLUSION 
This paper describes a routing protocol for wireless 
sensor networks based on the inclusion of routing 
information in the packets when minimum cost forwarding 
method is used. With the proposed protocol, and except for 
the BS node, there is no need to maintain explicit forwarding 
path tables in the intermediate nodes. The routing table on 
BS is formed in the network setup phase and updated after 
any change in network topology reported by sensor nodes. 
The intermediate nodes get routing information from the 
packets originating from the BS without having to know the 
network topology. In comparison with the MCF protocol, the 
traffic from sensor nodes to BS is the same, but the traffic 
from BS node to sensor nodes achieves better performance 
without significant changes on the sensor nodes side.  
The simulation results indicate that not only the proposed 
protocol has higher throughput than MCF, but also dissipates 
less energy. 
ACKNOWLEDGMENT  
This research was partially funded by Fundação para a 
Ciência e a Tecnologia (FCT) under contract number 
PTDC/EEA-ELC/103683/2008 (PROLIMB) with Institute 
for Systems and Computer Engineering of Porto (INESC 
Porto). 
REFERENCES 
[1] M. Ilyas and I. Mahgoub, “Handbook of Sensor Networks: 
Compact Wireless and Wired Sensing Systems,” CRC Press 
LLC, USA, 2005. 
89
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

[2] X. LI, “Wireless Ad Hoc and Sensor Networks, Theory and 
Applications,” Cambridge University Press, USA, 2008. 
[3] I.F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, 
“A survey on sensor networks,” Communications Magazine, 
IEEE, vol. 40, 2002, p. 102–114. 
[4] W.R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, 
“Energy-efficient communication protocol for wireless 
microsensor networks,” System Sciences, 2000. Proceedings 
of the 33rd Annual Hawaii International Conference on, 2002, 
p. 10–pp. 
[5] W. Guo, W. Zhang, and G. Lu, “PEGASIS Protocol in 
Wireless Sensor Network Based on an Improved Ant Colony 
Algorithm,” 2010 Second International Workshop on 
Education Technology and Computer Science, Wuhan, China: 
2010, pp. 64-67. 
[6] F. Ye, A. Chen, S. Lu, and L. Zhang, “A scalable solution to 
minimum cost forwarding in large sensor networks,” 
Computer 
Communications 
and 
Networks, 
2001. 
Proceedings. Tenth International Conference on, 2001, p. 
304–309. 
[7] T.V. Padmavthy, G. Divya, and T.R. Jayashree, “Extending 
network lifetime in wireless sensor networks using modified 
minimum Cost forwarding protocol-MMCFP,” Wireless 
Communications, Networking and Mobile Computing, 2009. 
WiComʼ09. 5th International Conference on, 2009, p. 1–4. 
[8] C. Ma and M. Ma, “Data-centric energy efficient scheduling 
for densely deployed sensor networks,” Communications, 
2004 IEEE International Conference on, 2004, p. 3652–3656. 
[9] Yingji Zhong and Dongfeng Yuan, “Dynamic source routing 
protocol for wireless ad hoc networks in special scenario 
using location information,” in Communication Technology 
Proceedings, ICCT 2003. International Conference on, 2003, 
vol. 2, pp. 1287-1290 vol.2. 
[10] J.E. Garcia, A. Kallel, K. Kyamakya, K. Jobmann, J.C. Cano, 
and P. Manzoni, “A novel DSR-based energy-efficient 
routing algorithm for mobile ad-hoc networks,” Vehicular 
Technology Conference, VTC 2003-Fall. IEEE 58th, 2003, p. 
2849–2854. 
[11] Microsoft Research, "Self-Organizing Neighborhood Wireless 
Mesh Networks", http://research.microsoft.com/mesh. 
[12] D. Niculescu and B. Nath, “Trajectory based forwarding and 
its applications,” Proceedings of the 9th annual international 
conference on Mobile computing and networking, 2003, p. 
260–272. 
[13] W. Ye and F. Ordónez, “Robust Optimization Models for 
Energy-Limited Wireless Sensor Networks under Distance 
Uncertainty,” Wireless Communications, IEEE Transactions 
on, vol. 7, 2008, p. 2161–2169. 
[14] B.H. Calhoun, D.C. Daly, N. Verma, D.F. Finchelstein, D.D. 
Wentzloff, A. Wang, S.H. Cho, and A.P. Chandrakasan, 
“Design considerations for ultra-low energy wireless 
microsensor nodes,” IEEE Transactions on Computers, 2005, 
p. 727–740. 
90
SENSORCOMM 2011 : The Fifth International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-144-1

