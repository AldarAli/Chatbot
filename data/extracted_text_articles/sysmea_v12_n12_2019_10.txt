101
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
A Verification Framework for Business Rules Management in the Dutch 
Government Context 
 
 
Koen Smit 
Digital Smart Services 
HU University of Applied Sciences Utrecht 
Utrecht, the Netherlands 
koen.smit@hu.nl 
Martijn Zoet 
Optimizing Knowledge-Intensive Business Processes 
Zuyd University of Applied Sciences 
Sittard, the Netherlands 
martijn.zoet@zuyd.nl 
 
Matthijs Berkhout 
Digital Smart Services 
HU University of Applied Sciences Utrecht 
Utrecht, the Netherlands 
matthijs.berkhout@hu.nl 
 
Abstract—Since 
an 
increasing 
amount 
of 
business 
decision/logic management solutions are utilized, organizations 
search for guidance to design such solutions. An important 
aspect of such a solution is the ability to guard the quality of 
the specified or modified business decisions and underlying 
business logic to ensure logical soundness. This particular 
capability is referred to as verification. As an increasing 
amount of organizations adopt the new Decision Management 
and Notation (DMN) standard, introduced in September 2015, 
it is essential that organizations are able to guard the logical 
soundness of their business decisions and business logic with 
the help of certain verification capabilities. However, the 
current knowledge base regarding verification as a capability 
is not yet researched in relation to the new DMN standard. In 
this paper, we re-address and - present our earlier work on the 
identification of 28 verification capabilities applied by the 
Dutch government [1]. Yet, we extended the previous research 
with more detailed descriptions of the related literature, 
findings, and results, which provide a grounded basis from 
which further, empirical, research on verification capabilities 
with regards to business decisions and business logic can be 
explored. 
Keywords-Business Rules; Business Rules Management; 
Verification; Capabilities; Dutch Government 
I. 
 INTRODUCTION  
Business rules (BR’s), as part of business logic, are 
increasingly being utilized in enterprises as building blocks 
for (automated) decision making, for example, supporting 
execution of various types of e-services like applying for an 
insurance product and applying for social benefits and 
automated fraud detection at financial organisations. As a 
result, organizations employ various methods and processes 
to manage these BR’s, often referred to as Business Rules 
Management (BRM) [2]. An important part of BRM 
comprises quality control, which focuses on reducing errors 
in the syntax and intended behavior of the business rules. 
Thereby improving the quality of the defined and executed 
BR’s [3]. This particular capability is referred to as 
verification. A capability in this paper is defined as an ability 
that an organization, person, or system, possesses. It, 
therefore, defines what an organization, person or system 
does or can do but not how it accomplishes it. In practice, a 
capability can be implemented in different ways, for example 
manually, partly- or fully automated. 
In September 2015, the Object Management Group 
(OMG) released a new standard for modelling decisions and 
underlying business logic, the Decision Model and Notation 
(DMN) [4]. As the adoption of the DMN standard increases, 
the need for verification of BR’s, which are a significant 
component of the decision logic layer in DMN, increases as 
well. Therefore, in this paper, we adhere to the DMN 1.1 
standard [5] and aim to explore which verification 
capabilities are relevant in the verification process of 
decisions and underlying BR’s. 
Verification, as a capability in general software 
development, is an established research field and has 
received a lot of attention from researchers in the previous 
decades (Ackerman, Buchwald, & Lewski, 1989; Van der 
Aalst, 1999; Vermesan & Coenen, 2013). In literature, 
verification of business rules is a capability, executed by a 
specific 
component, 
of 
expert 
systems, 
knowledge 
management systems, knowledge engineering systems, or 
knowledge based systems. Regarding these research 
domains, different scholars and practitioners identify 
different types of verification capabilities, for example, the 
work [9] on verification capabilities for expert systems, in 
the work of [10], [11] and [8] on verification capabilities for 
business process models, and in the work of [12] and [7] on 
verification capabilities for Knowledge Based Systems. 
Another contribution within the research domain of business 
logic is the work of Von Halle and Goldberg [13], which 
presents multiple principles that refer to capabilities that are 
applicable when performing verification of business logic, 
containing business rules. An example included in their work 
is the normalization and integrity verification capability. 
However, in current literature on business logic, no 
uniform 
overview 
exists. 
Additionally, 
the 
current 
knowledge base predominantly focuses on theory forming by 
means of deductive research methods, while inductive 

102
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
research methods to explore the spectrum of the verification 
capability seem almost non-existent to the knowledge of the 
authors. 
This paper aims to define, from practice, the spectrum of 
capabilities required for the verification of business logic 
which can be designed and specified with DMN. To be able 
to do so, we addressed the following research question: 
“Which verification capabilities are useful to take into 
account when designing a business rules management 
solution?” Five large Dutch government institutions 
participated in a three-round focus group to derive 
verification capabilities applied in practice. The results form 
a framework of capabilities regarding the verification of 
business rules. 
The remainder of this paper proceeds as follows. First, 
we provide, in short, insights into what verification 
comprises in the context of BRM and how it relates to the 
other BRM capabilities. This is followed by the research 
method utilized to identify the verification capabilities 
applied in the Dutch governmental context. Furthermore, the 
collection and analysis of our research data are described. 
Subsequently, our results, which led to our framework 
containing 28 verification capabilities are presented. Finally, 
we discuss which conclusions can be drawn from our results, 
followed by a critical view of the research method and 
techniques utilized and propose possible directions for future 
results.  
II. 
BACKGROUND AND RELATED WORK 
With increasing investments in BRM, organizations are 
searching for ways to guide the design of business rules 
management solutions. A business rule is defined as “a 
statement that defines or constrains some aspect of the 
business intending to assert business structure or to control 
the behavior of the business” [14]. A business rules 
management solution enables organizations to elicitate, 
design, specify, verify, validate, deploy, execute, evaluate 
and govern business rules, see Figure 1 [15], [16]. When a 
business rules management solution is designed, each of the 
nine previously mentioned capabilities need to be designed, 
implemented and governed. The manner in which way these 
capabilities are realized depends on the actual situation in a 
specific organization. This paper is part of a research project 
in which the focus was to evaluate all nine capabilities of 
five government institutions. In this paper, we focus on the 
verification capability as other studies (i.e., [17]–[20]) 
already focused on the exploration and definition of the other 
BRM capabilities. 
As stated in the introduction section, no uniform 
overview exists with regards to verification capabilities in 
the context of BRM, and more specific, in relation to DMN. 
Literature in neighboring fields often define one or more 
verification capabilities, however, they do not present a 
uniform overview. Furthermore, the verification capabilities 
described in neighboring fields are often based on or related 
to a specific language and therefore less generalizable. For 
example, regarding software development verification, [21] 
and [6] describe several verification capabilities, but do not 
aim to be complete as their work define the boundaries of 
verification in general and a process to execute verification. 
Furthermore, for example, with regards to Business Process 
Management and process modeling. The work of [22] and 
[23], describe verification as a capability for process model 
checking. However, they do so in a technical and non-
uniform manner. From the literature we find that verification 
capabilities, in a general sense, are often mentioned or 
described as part, thus often a sub-goal, of a research study, 
to evaluate the conformance with certain guidelines. To 
contribute to the current knowledge base, we aim to define 
the verification capability with regards to BRM utilizing an 
inductive approach. 
 
 
 
Figure 1. BRM Capability Framework 
 
      A detailed explanation of each capability can be found in 
[24]. However, to ground our research, a summary of the 
elicitation, design, specification and verification capabilities 
is provided here. The purpose of the elicitation capability is 
twofold. On the one hand, the purpose is to determine the 
knowledge that needs to be captured from various legal 
sources to realize the value proposition of the business rules. 
Many possible legal sources from which this knowledge can 
be derived exist, for example, laws, policies, guidelines, 
regulations, expert hearings, research outcomes, case law, 
and internal documentation. Depending on the type of 
knowledge 
source(s), 
different 
methods, 
processes, 
techniques and tools to extract the knowledge are applied 
[25]. The output of the elicitation capability is the collection 
of knowledge that is required to design the Decision 
Requirements Diagram (DRD), which is the highest level of 
abstraction with respect to decision modelling in DMN. The 
DRD layer recognizes four concepts: 1) a decision, 2) 
business knowledge, 3) input data, and 4) a knowledge 
source. When no DRD exists, elicitation information is 
collected to specify the four. On the other hand, when a DRD 
is already in place, an impact analysis is performed to 
identify the modifications that need to be processed to the 
existing structure and underlying business logic in the design 
and specification capabilities. The DRD consists of a 
combination of business decisions. A DRD is a collection of 
business logic, in terms of business rules and fact types. The 
relationship between different decisions is depicted in a 
derivation structure. The DRD is the high-level output which 

103
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
the design capability needs to realize. After the DRD is 
created, the content (business rules and fact types) of each 
individual decision need to be specified in the specification 
capability. The purpose of the specification capability is to 
create the business rules and fact types needed to make the 
decision, the Decision Logic Level (DLL). The decision 
logic level has multiple key concepts which are described in 
two languages the Friendly Enough Expression Language 
(FEEL) and the Simple FEEL variant (SFEEL). SFEEL is a 
subset of FEEL, tailored for simple expressions in 
conjunction to be utilized in decision tables. However, the 
same concepts of SFEEL and FEEL can be expressed in 
multiple other languages. For example, Camunda also 
supports the use of other languages to define business logic 
with, such as Javascript, Groovy, Python, Jruby, and Juel 
[26]. The language selected to represent the decision logic 
does not influence the decision requirements level. The 
output of the specification capability is a specified context 
design that contains decisions, business rules, and fact types. 
After the DRD and DLL are created, they are verified, 
comprising the evaluation to eliminate syntax errors in both 
abstraction levels. This is defined as the verification 
capability. The purpose of the verification capability is to 
determine if the decisions, business rules, and fact types 
adhere to predefined criteria, for example, conformance to 
language guidelines, and are logically consistent. If errors are 
identified, two scenarios can occur. First, the verification 
issues are resolved in a revision of the designed and specified 
business knowledge. Second, the verification issues are 
ignored and the decisions, business rules, and fact types are 
deployed based on the current elicitated, designed and 
specified business logic. However, verification errors not 
properly addressed could result in the improper execution of 
the value proposition in the execution capability later on in 
the BRM processes, thus posing a possible risk to the 
organization that employs the business logic [24]. 
III. 
RESEARCH METHOD 
The goal of this research is to identify verification 
capabilities that are being utilized in practice. Currently, 
research is conducted on business rules (management), 
however, the existing knowledge base is rather old and 
mostly from a theoretical perspective [15], [24], [27]. 
Additionally, most of the research that is conducted on 
business 
rules 
(management) 
embraces 
a 
deductive 
approach, while little is known on how verification is applied 
in practice. Therefore, research studies utilizing an inductive 
approach could lead to further theory refinement by taking 
into account verification capabilities are applied in practice. 
An appropriate focus of research with an inductive approach 
is 
on 
identifying 
new 
constructs 
and 
establishing 
relationships between identified constructs from a practical 
context (e.g., Edmondson and McManus, [28]). Therefore, 
through grounded theory based data collection and analysis, 
in our research we explore verification capabilities applied in 
practice and combine them into a framework to, on the one 
hand, guide organizations in the design and execution of the 
verification capability as part of business rules management, 
while on the other hand strengthen the currently available 
knowledge base with insights derived from practice. 
To explore a range of possible solutions with regards to a 
complex issue group based research techniques are adequate 
[29]. Group-based research techniques are useful when the 
collection of possible solutions need to be combined into one 
view, backed by empirical evidence that is not present in the 
body of knowledge. Examples of group based techniques are 
brainstorming, nominal group techniques, focus groups and 
Delphi studies. Group based research techniques can be 
differentiated by the type of approach they utilize, face-to-
face versus non-face-to-face approaches to gather research 
data. Of course, both the face-to-face and non-face-to-face 
approaches are characterized by their advantages and 
disadvantages; i.e., in face-to-face meetings, participants can 
provide (additional) feedback directly. On the other hand, 
face-to-face meetings are characterized to be restricted with 
regard to the number of participants as well as the possible 
existence of group or peer pressure. 
For this study we selected a face-to-face approach to be 
more appropriate, also facilitating peer-discussion regarding 
the application of the verification capability at the selected 
governmental organizations. Earlier experiences of the 
researchers with similar approaches showed that participants 
will trigger each other to elaborate more in-depth on why 
and how a specific capability is applied. 
IV. 
DATA COLLECTION AND ANALYSIS 
The data for this study is collected over a period of three 
months, between January 2014 and March 2014. The 
collected data has initially been categorized based on the 
beta version of the DMN standard that was published in 
August 2013. Since no significant changes between the beta 
and the final version of the DMN standard occurred, we refer 
to the final 2016 version of the DMN standard in this paper 
[5]. The data collection was conducted through three rounds 
of focus groups. Between each individual focus group, the 
researchers consolidated the results.  
When designing a focus group, a number of situational 
characteristics need to be considered: 1) the goal of the focus 
group, 2) the selection of representative participants, 3) the 
number of participants, 4) the selection of the main facilitator 
and research team, 5) the information recording facilities, 
and 6) the protocol of the focus group. The goal of the focus 
group was to identify the current verification capabilities 
being applied in practice. The selection of participants 
should be based on the group of individuals, organizations, 
information technology or community that best represents 
the phenomenon studied [30]. In this study, organizations 
and individuals that deal with the verification of a large 
amount of business rules represent the phenomenon studied; 
examples are financial and governmental institutions. Taking 
this into account, multiple Dutch government institutions 
were invited to participate. The organizations that agreed to 
cooperate with the focus group meetings were the: 1) Dutch 
Tax and Customs Administration, 2) Dutch Immigration and 
Naturalization Service, 3) Dutch Employee Insurance 
Agency, 4) Dutch Education Executive Agency, and 5) 

104
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Dutch Social Security Office. We believe that this is a 
representative selection due to several reasons; 1) they apply 
all degrees of automation to their decision making (i.e., 
human, a human supported by a machine, a machine 
supported by a human, and fully automated), 2) they design 
and execute a large variety of rule types (i.e., derivation, 
calculation, constraints, process, validation, and decision 
rules), and 3) they are required to indisputably implement the 
laws and regulations for all Dutch citizens and organizations. 
Based on the written description of the goal and 
consultation 
with 
experienced 
employees 
of 
each 
government institution, participants were selected to take 
part in the focus group meetings regarding verification of 
business rules. In total, ten participants took part in the focus 
group rounds which fulfilled the following positions: One 
legal advisor, two BRM project managers and seven business 
rule analysts. All involved subject-matter experts had a 
minimum of five years of experience with the verification of 
business rules. Delbecq & van de Ven [29] and Glaser [31] 
state that the facilitator of the focus groups should have an 
appropriate level of experience with regards to the topic. 
Also the facilitator should have experience with the workings 
of face-to-face group based research techniques. The 
facilitator in this research project has a Ph.D. in BRM and 
has conducted nine years of research with regards to BRM. 
Furthermore, the facilitator has conducted research while 
utilizing many face-to-face research techniques before. 
Additionally, 
three 
researchers 
were 
supporting 
the 
facilitator during the focus group meetings. One researcher 
was the ‘back-up’ facilitator. The back-up facilitator 
monitored whether each participant provided equal input. 
When necessary, the back-up facilitator involved specific 
participants by asking for more in-depth elaboration on the 
subject at hand. The other two researchers acted as minute’s 
secretary, taking notes. All focus group meetings were video 
and audio recorded. The duration of the first focus group was 
192 minutes, the second 205 minutes and the third 207 
minutes. All three focus group meetings followed the same 
overall protocol, starting with an introduction and 
explanation of the purpose and procedures of the focus group 
at hand, after which verification capabilities were generated, 
shared, discussed and/or refined. 
Prior to the first round, the research team informed the 
participants with regards to the purpose of the research and 
meetings at hand, after which the participants were invited to 
submit their current documentation with regards to 
verification capabilities regarding business decisions and 
business logic. Prior to the first focus group meeting, the 
research team already consolidated similar verification 
capabilities 
that 
were 
derived 
from 
the 
received 
documentation. This was to ground and start up the 
discussion of the first focus group meeting. During the first 
focus group meeting, participants first explained their 
submitted documentation and why their verification 
capabilities were relevant in their context. For each 
capability, the group discussed whether it was related to 
business rules management processes in general or not, for 
example, some of the mentioned results focused more on the 
verification of process models or data types. The second and 
last part of the focus group meeting was committed to 
defining new or missing capabilities where participants 
thought they were missing from the already identified 
selection of capabilities. For each proposed capability, it’s 
ID, 
label, 
description, 
rationale, 
classification, 
and 
example(s) were discussed and noted, see Table I. 
 
Table I. Identical business rules verification 
 
capability ID: 
B4. 
capability 
label: 
Identical business rules verification. 
capability 
description: 
Identical business rule verification 
checks if a business rule occurs more 
than once in the exact same appearance 
in the same business rule set. 
capability 
rationale: 
Identical business rule verification is 
needed as redundant rules account for 
extra maintenance burden on top of the 
negative 
impact 
they 
have 
on 
performance.  
capability 
classification: 
Decision logic level verification 
capability 
example: 
(underlined 
business rules 
are identical) 
Decision: Rights for Child Benefits 
1 – The Age of the Child is between 16 
and 17 
2 – The Child is registered as part of 
=> 1 household 
3 –  The Child has the right to receive 
study benefits 
4 – The Child is registered as part of 
=> 1 household 
 
5 – The Registration Status of the 
Child is Household of 1  
 
When the first focus group meeting was finished, the 
researchers started analysis to consolidate the results. 
Consolidation of the results comprised the detection of 
incomplete and redundant capabilities. Next, the results of 
the analysis by the research team were sent to the 
participants of the focus group meeting fourteen days in 
advance before the next meeting. During these fourteen days, 
the participants assessed the consolidated results in 
relationship to three questions: 1) “Are all capabilities 
described correctly?” (in terms of the capability label and 
accompanied examples), 2) ”Do I want to remove a 
capability?”, and 3) “Do we need additional capabilities?“ 
During the second focus group, the participants discussed 
the derived capabilities. The group started to discuss their 
usefulness, and, again, whether all capabilities were 
described correctly. Furthermore, the participants were asked 
to validate whether the capabilities that were identified to be 
redundant from the consolidation by the research team 
needed removal from the selection of relevant capabilities. 
For example, one of the participants submitted the capability 
‘illegal value’, while another capability labelled ‘domain 
violation’ already existed in the results of the first focus 
group round, which is an equivalent capability. As the end of 

105
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
the second focus group meeting showed signs of saturation 
amongst the participants. For this reason, the third focus 
group was redesigned as a validation session in which we 
solely wanted to validate the results that were derived from 
the first two focus groups. The discussion in the last focus 
group therefore focused on further refinement of the existing 
capabilities in terms of their descriptions, classification, and 
goals. 
V. 
RESULTS 
In this section, based on our data collection and analysis, 
we present our results with the help of a case which is 
further specified in [32]. This case does not adhere to the 
business rules provided by the governmental agencies. The 
reason for this is that per discussed capability, different case 
examples were adhered to in the focus groups by the 
participants. The reader therefore would get snippets of 
business rules from each agency, lacking the discussion of 
an integrated case. Therefore the results of the focus groups 
and Delphi study have been mapped onto an integrated case 
that is presented in an integrated manner. The case we 
selected comprises the determination of risk of malnutrition 
regarding a hospitalized patient, see Appendix A. 
 
Table II. Business logic expressed in the DMN formal decision table 
format 
 
Decision: Determine Malnutrition Risk 
Business 
rule # 
Input  
Output 
Annotation 
Malnutrition 
Risk Points of 
the patient 
Malnutrition 
Risk of the 
patient 
 
1 
<= 3 
1 
Malnutrition 
of the patient 
is 1 (low) 
2 
]3..6[ 
2 
Malnutrition 
of the patient 
is 2 
(moderate) 
3 
>= 6 
3 
Malnutrition 
of the patient 
is 3 (high) 
 
As stated in the background and related work section of 
this paper, the DMN standard features two levels of 
abstraction, the DRD and the DLL. For the demonstration of 
the business logic used in our examples we choose not to use, 
due to page size constraints, the DMN formal decision table 
format, but a simpler and compact representation; structured 
English. Business logic expressed in decision tables is easily 
transformed into structured English business logic, see for 
example Table II (decision tables) and Table III (structured 
English). 
In total, the consolidated framework for the verification 
of business decisions and business logic consists of 28 
verification capabilities, see Figure 2. Due to space 
limitations, we present each capability by its label, 
description, and example. 
 
Table III. Business logic expressed in the structured English format 
Decision: Determine Malnutrition Risk 
BR1 - Malnutrition Risk of the patient must be equated to 1 
IF Malnutrition Risk Points of the patient <= 3  
 
BR2 - Malnutrition Risk of the patient must be equated to 2 
IF Malnutrition Risk Points of the patient is >3 AND <6 
  
BR3 - Malnutrition Risk of the patient must be equated to 3 
IF Malnutrition Risk Points of the patient >= 6  
 
To further structure our derived capabilities, the 
abstraction layers of the DMN standard are utilized for 
categorization as some verification capabilities are only 
relevant in the context of a certain abstraction level of 
business logic. Lastly, as some derived verification 
capabilities are relevant in a generic sense, the generic 
category has been added. 
 
 
 
Figure 2. BRM verification capability framework. 
A. Decision requirements level verification 
Regarding the highest level of abstraction, the decision 
requirements level, eight verification capabilities were 
identified.  
 
Conclusion verification 
Conclusion verification checks if the conclusion fact of 
an individual decision is used as a condition fact in another 
decision. In a DRD, this situation can only legitimately occur 
once, namely with the top-level decision. Additional 
occurrences indicate an error in the logical completeness. For 
example, let’s examine the decisions “E - Calculate Body 
Mass Index Risk Points” and “F - Calculate Body Mass 
Index”. The conclusion fact “Body Mass Index” of decision 
F is used as a condition fact in decision E. If this would not 
be the case decision E would be floating and an error would 
occur.  
 
 

106
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Condition verification 
Condition verification is a reversed form of conclusion 
verification. It first checks if a condition fact is a ground-fact 
or derived-fact. If a fact is a derived-fact, the test checks if 
the fact is the conclusion fact of another decision. Let‘s 
examine the same example as presented in the conclusion 
verification. The condition fact “Body Mass Index” of the 
decision “E - Calculate Body Mass Index Risk Points” is the 
conclusion of the decision “F - Calculate Body Mass Index”. 
If this would not be the case, decision E would be executed, 
but an error would occur. 
 
Input verification 
Input verification checks if the conclusion fact of an 
underlying decision is used as a condition fact in the parent 
decision. Contrary to conclusion verification and condition 
verification, input verification checks if there are no 
unnecessary decisions in the DRD. For example, let’s 
examine the decision: “C – Calculate Weight Loss Risk 
Points”. For this example, this decision has two connected 
decisions: “D - Calculate Weight Loss” and additionally, 
“Assess Weight Pattern.” However, only the conclusion fact 
of decision D is applied in decision C. Indicating that the 
decision “Assess Weight Pattern” is unnecessary and should 
be removed from the DRD. 
 
Existing business knowledge verification 
Existing business knowledge verification checks if a 
decision is accompanied with specified business knowledge. 
For example, let’s examine the same decisions as used in the 
example of input verification: “D – Calculate Weight Loss” 
and “Assess Weight Pattern.” In this specific instance, no 
business knowledge is specified for decision “Assess Weight 
Pattern”, while the business knowledge is required to execute 
the parent decision “C – Calculate Weight Loss Risk Points.”  
 
Invalid business knowledge verification 
       Invalid business knowledge verification checks if each 
fact value of the condition fact of a decision is also present as 
a fact value of the linked conclusion fact of the underlying 
decision(s). For example, let’s examine the two decisions: “E 
- Calculate Body Mass Index Risk Points” and “F - Calculate 
Body Mass Index.” The conclusion fact of decision F is used 
as a condition fact in decision E. In this example, the 
conclusion fact of decision F contains a value range from 10 
to 80 BMI points, while the condition fact in decision E 
contains a value range of 20 to 70 BMI points. 
 
 
 
Figure 3. Example based on [32] depicting a circularity error 
 
Circularity verification 
     Circularity verification checks if a conclusion fact of the 
parent decision is used as a condition fact in the underlying 
decision while at the same time, the conclusion fact of the 
underlying decision is used as a condition fact in the parent 
decision. For example, see Figure 3. 
 
Transitive dependency verification 
Transitive dependency verification checks if the same 
condition fact occurs twice in a set of three decisions that are 
connected to each other. For example, take into account a 
situation where there are three decisions: “Decision A”, 
“Decision B” and “Decision C”. “Decision A” applies the 
conclusion facts of “Decision B” and “Decision C” as 
condition facts. In addition “Decision B” applies the 
condition fact “intake solid food of the patient” to derive a 
conclusion. Additionally “Decision C” also applies the 
condition “intake solid food of the patient” in addition to an 
extra condition fact to derive a conclusion. Therefore the 
condition fact “intake solid food of the patient” is applied 
twice to eventually derive the conclusion of “Decision A”. 
This does not necessarily have to be an error, but usually 
implies an error in the business logic, which can be solved by 
removing either “Decision B” or the condition fact “intake 
solid food of the patient” in “Decision C”, see also Figure 4. 
 
 
 
Figure 4. Example based on [32] depicting a transitive dependency error 
 
Conflicting conclusion verification 
        Conflicting conclusion verification checks if there are 
conclusion facts that are established using different business 
rules and facts. For example, the conclusion fact “Food 
Intake Risk Points” of decision G could be calculated by the 
following business rules: “BR18 - Food Intake Risk Points of 
the patient must be equated to 4 IF Solid Intake of the patient 
> 5 days AND Age of the patient > 18 AND Liquid Intake of 
the patient <= 1 days” and “BR19 - Food Intake Risk Points 
of the patient must be equated to 4 IF Solid Intake of the 
patient > 5 days AND Age of the patient > 18 AND Liquid 
Intake of the patient <= 1 days ”. In this case, the conclusion 
fact is differently calculated and therefore the results of both 
business rules could contradict each other. 
B. Decision logic level verification 
      Regarding the decision logic level, eight verification 
capabilities were identified.  

107
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Identical business rules verification 
Identical business rule verification checks if a business 
rule occurs more than once in the exact same appearance in 
the same business rule set. Take for example the following 
two business rules: “Malnutrition Risk of the patient must be 
equated to 2 IF Malnutrition Risk Points of the patient is >3 
AND <6” and “Malnutrition Risk of the patient must be 
equated to 2 IF Malnutrition Risk Points of the patient is >3 
AND <6”. See also the completely elaborated capability 
description and rationale in Table I. 
 
Equivalent business rules verification 
Equivalent business rule verification checks for business 
rules which are expressed different, but have the same 
outcome. Take for example the following two business rules: 
“Food Intake Risk Points of the patient must be equated to 4 
IF Solid Intake of the patient > 5 days AND Age of the 
patient >= 18 AND Liquid Intake of the patient > 1 days” 
and “Food Intake Risk Points of the patient must be equated 
to 4 IF Solid Intake of the patient >= 6 days AND Age of the 
patient > 17 AND Liquid Intake of the patient >= 2 days.” 
Both business rules have the same outcome, but are written 
differently. 
 
Subsumed business rules verification 
Subsumed business rule verification checks if business 
rules exist that are more comprehensive compared to a 
business rule with the same outcome. Take for example the 
following business rule: “Food Intake Risk Points of the 
patient must be equated to 4 IF Solid Intake of the patient > 5 
days AND Liquid Intake of the patient > 1 days”. The 
previous business rule concludes exactly the same fact as the 
following business rule, which utilizes one more condition: 
“Food Intake Risk Points of the patient must be equated to 4 
IF Solid Intake of the patient > 5 days AND Age of the 
patient <= 18 AND Liquid Intake of the patient > 1 days”.  
 
Unnecessary fact verification 
Unnecessary fact verification checks for facts that is 
included in a business rule, but is not required to calculate or 
derive the outcome. Take for example the business rule: 
“Body Mass Index of the patient must be computed as 
Current Weight of the patient / Square (Height of the 
patient)”. Additionally, we present the facts for this ruleset: 1) 
Body Mass Index, 2) Current Weight, 3) Height, and 4) Shoe 
Size. In this example the Shoe Size of a patient is not used in 
the business rule to calculate the outcome and is therefore 
unnecessary. 
 
Interdeterminism verification 
Interdeterminism verification checks if there are two 
business rules with the same condition facts but with a 
different conclusion. For example the business rules: 
“Malnutrition Risk of the patient must be equated to 2 IF 
Malnutrition Risk Points of the patient is >3 AND <6” and 
“Malnutrition Risk of the patient must be equated to 4 IF 
Malnutrition Risk Points of the patient is >3 AND <6”. The 
conditions of these two business rules are exactly the same, 
but the conclusion fact value is different, which leads to 
conflicting results.  
 
Overlapping fact value range verification 
Overlapping fact value range verification checks if 
condition fact value ranges in a business rule overlap each 
other which may lead to inconsistent business rule output. 
For example the business rules: “Body Mass Index Risk 
Points of the patient must be equated to 1 IF Patient Body 
Mass Index of the patient is >18.5 AND <20” and “Body 
Mass Index Risk Points of the patient must be equated to 2 
IF Body Mass Index of the patient is >19 AND <22.” In this 
case, the ranges of the condition fact Body Mass index are 
18.5-20 and 19-22, which consist of partly overlapping 
values.  
 
Specific partial reduction verification 
Specific partial reduction verification checks if two 
ranges in business rules can be combined. Take for example 
the following business rules: “Food Intake Risk Points of the 
patient must be equated to 6 IF Solid Intake of the patient > 5 
days AND Age of the patient > 18 AND <= 30 AND Liquid 
Intake of the patient > 1 days” and “Food Intake Risk Points 
of the patient must be equated to 6 IF Solid Intake of the 
patient > 5 days AND Age of the patient > 30 AND <40 
AND Liquid Intake of the patient > 1 days.” The conclusion 
is the same in this example so the two business rules can be 
combined into one business rule. 
 
Missing business rules verification 
Missing business rules verification checks if there are 
situations in which a particular inference is required, but 
there is no rule that succeeds in that situation and produces 
the desired outcome. Missing business rules can be detected 
when it is possible to enumerate all possible scenarios in 
which a given decision should be made or a given action 
should be taken. For example, when the first business rule of 
the decision ‘C - Calculate Weight Loss Risk Points’ is 
missing, it is impossible to conclude a total amount of risk 
points other than the fact values ‘1’ and ‘2’. 
C. Fact level verification 
Regarding the decision fact level, eight capabilities 
regarding verification were identified. In the verification 
capabilities above references are made to specific decisions 
that are part of the case that is utilized to demonstrate the 
capabilities. From this point on, this is not relevant as fact 
types and fact values can be and are usually independently 
managed and applied across different collections of business 
logic (like business rules or decision tables). 
 
Valueless fact label verification 
Valueless fact label verification focuses on the label of 
the fact in the fact vocabulary. It checks whether each fact 
type label is expressed without any fact values. For example, 
the fact type “Body Mass Index >=20” is a binary question, 
thus only comprising two fact values, “yes” and “no”. In this 
case the fact value “20” should be removed from the fact 
label and formulated in two separate rules. 

108
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Unused fact verification 
Unused fact verification focuses on facts that are present 
in the fact vocabulary, but not utilized in any BR. Unused 
facts, especially at large amounts, can decrease efficiency as 
these unused facts need to be maintained just like the facts 
that are utilized in BR’s. Such errors are often caused by the 
removal of a BR without checking whether the facts are still 
utilized in other BR’s. For example, the following facts and 
BR’s are expressed: 1) “Body Mass Index”, 2) “Body Mass 
Index Risk Points”, and 3) “Standardized Body Mass Index”, 
BR’s: “Body Mass Index Risk Points of the patient must be 
equated to 0 IF Body Mass Index of the patient is >= 20” and 
“Body Mass Index Risk Points of the patient must be 
equated to 2 IF Patient Body Mass Index of the patient < 20”. 
In this case three fact types are available, but the given BR 
set does not utilize the fact type “Standardized Body Mass 
Index”. 
 
Domain violation verification 
Domain violation verification focuses on how fact values 
are expressed, in terms of its format, against how they should 
be expressed. This is important as it influences if the 
executability of the BR of which the fact types are part of. 
For example, consider a BR that utilizes the following fact: 
“Current Weight”. The weight of the patient is usually 
expressed as an integer, for example “122”. However, when 
the data type of the fact “Current Weight” is designed as a 
string the weight can only be expressed as: “one hundred and 
twenty-two kilograms”. 
 
One value-collection verification 
One value-collection verification focuses on collections 
and the amount of fact values a fact contains. Less than two 
fact values in a collection can be caused by 1) not enough 
fact values are created in the specification process or 2) due 
to changes to laws and regulations that result in the removal 
of fact values as part of the collection. For example, the fact 
type “Malnutrition Risk” normally comprises three fact 
values “1”, “2” and “3”. However, when both the first and 
second fact values are removed, the fact comprises a 
collection with only one value. 
 
Fact value overlap verification 
Exclusivity/overlap verification focuses on the detection 
of fact values that are not exclusive, thus overlapping each 
other. This verification capability is only applicable for a fact 
that comprises a collection of fact values. For example, the 
fact “Body Mass Index Risk Points” consists of several fact 
values, from which some are categories of values, which 
indicate a certain risk level of a patient. In this case, the 
following fact values are present: “> 20”, “18.5..20”, 
“19..21” and “< 22”. Both the fact values “18.5..20” and 
“19..21” are not exclusive as they partly overlap. This could 
result in a situation where two fact values are valid at the 
same time, potentially resulting in conflicting conclusions. 
 
Lexical verification 
Lexical error verification focuses on the usage of a wrong 
fact type in BR’s. Take for example a wrong synonym or a 
complete other word than required. Another example within 
a BR: “Food Intake Risk Points of the patient must be 
equated to 0 IF Hard Intake of the patient <= 5 days AND 
Age of the patient <= 18 AND Fluid Intake of the patient <= 
1 days.” In this case, ‘Solid’ and ‘Liquid’ are replaced by 
‘Hard’ and ‘Fluid’. 
 
Typographical and mechanical verification 
Typographical and mechanical verification focuses on 
spelling, capitalization and punctuation errors in facts and 
fact values as part of business rules. An example of a 
typographical error would be: “Fod Intake Risk Points of the 
patient”. Moreover, an example of a mechanical error would 
be: “Food Intake Risk Points of the patient.” 
 
Documentation verification 
Lastly, documentation of each fact should be available in 
the fact vocabulary. If a fact is added to the fact vocabulary 
without any documentation, business rule analysts cannot 
utilize the fact vocabulary as a single point of truth, as 
double or conflicting facts could exist. For example, when 
the following two facts exist in the fact vocabulary: ‘patient 
weight’ and ‘weight’. When no documentation is added for 
one of these facts the difference between both is hard to 
distinguish. However, automated verification is only able to 
check whether documentation is available, and not if it is 
semantically correct. 
 
D – Generic verification level 
       Regarding the generic verification level, four capabilities 
regarding verification were identified. 
 
Grammatical conformance verification 
Grammatical conformance verification checks that all 
individual components in the business rule set are verified 
on whether they are designed according to the language-
related guidelines. Take for example (regarding decision 
logic-level verification), the business rule “Body Mass 
Index Risk Points of the patient must be equated to 2 IF 
Patient Body Mass Index of the patient <= 18.5,” which is a 
business rule to determine “E. Calculate Body Mass Index 
Risk Points”. A syntax requirement of a business rule 
language could state that the combination of elements for a 
business rule needs to be consequent, in this case: fact 
(Body Mass Index) plus operator (=<) plus operand (18.5). 
 
Declarativity verification 
Declarativity verification checks whether there is no 
implicit or explicit order in which decisions, business rules, 
or facts are executed or evaluated. For example (regarding 
decision logic-level verification), we take the combination 
of two business rules: “BR14 - Food Intake Risk Points of 
the patient must be equated to 2 IF Solid Intake of the 
patient <= 5 days AND Age of the patient > 18 AND Liquid 
Intake of the patient <=1 days” and “BR15 - Food Intake 
Risk Points of the patient must be equated to 4 IF Solid 
Intake of the patient <= 5 days AND Age of the patient > 18 

109
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
AND Liquid Intake of the patient > 1 days.” This part of the 
ruleset may not imply any sequentially as it does not matter 
if business rule 15 is executed before business rule 14. The 
same holds for the sequence in which the business rule 
evaluates the condition facts. 
 
Omission verification 
Omission verification checks if required components on 
all three layers are missing. For example (decision 
requirements-level verification), decisions in a DRD 
modelled without a source or input data, or missing 
operands (i.e., =, >, =<), condition facts, conclusion facts, 
and fact values. Moreover, in another example (decision 
logic-layer verification), the operator and fact value of the 
conclusion fact are missing in the following business rule: 
“BR16 - Food Intake Risk Points of the patient must be 
equated to <…> IF Solid Intake of the patient <…> 5 days 
AND Age of the patient > 18 AND Liquid Intake of the 
patient > 1 days”. 
 
Atomicity verification 
      Atomicity verification focuses on the atomic design 
principle. This means that all components need to be 
normalized in such a state that no further normalization is 
possible. Therefore it checks whether all components are 
expressed and modelled in their atomic state. For example 
(decision requirements-level verification), it checks whether 
each decision is expressed in its atomic state, from which no 
other decisions could be derived, thus the decisions are fully 
normalized. Take the decision “Calculate Weight and 
Circumference Loss”, which actually comprises both the 
Weight and Circumference loss of a patient. As both 
decisions are calculated using different business rules and 
facts, the decision should be further normalized into two 
unique decisions, one comprising only the weight loss and 
one comprising the circumference loss of a patient. 
VI. 
CONCLUSIONS 
Business rules, as part of business logic, are increasingly 
being utilized in organizations as building blocks for 
(automated) decision making. In this research we aimed to 
find an answer to the following research question: “Which 
verification capabilities are useful to take into account when 
designing a business rules management solution?” To 
accomplish this, we have conducted a three round focus 
group with five large Dutch governmental institutions. Our 
rounds of data collection and analysis resulted in a collection 
of 28 capabilities that, depending on the situation, must be 
taken into account when designing the verification capability 
as part of a BRM solution, see Figure 2. The BRM 
verification capability framework resulted from this study 
features capabilities for 1) the business decisions level, 2) 
decision logic level, and 3) the fact level. Additionally, our 
results presented a fourth category, 4) generic level 
capabilities with regards to verification.  
From a theoretic perspective the verification framework 
provides a framework for further development and research 
into the verification capability and possible relationships 
with other BRM (sub)capabilities. This is important because 
practice often seems to confuse validation with verification 
and vice versa, however, both are different, see also (self-
reference 2017). Further theoretical maturation is needed as 
the current Decision Management and Business Rules 
Management body of knowledge offers few means to 
structure verification of business decisions and business 
logic.  
From a practical perspective, the verification framework 
offers practitioners a set of building blocks that could make 
up the verification in their organizations tooling. Depending 
on the situation, i.e., the language used to formulate the 
business decisions and business logic and the maturity of the 
tooling utilized, the framework offers verification types that 
can be implemented in different levels (fact-level, business 
logic level, and business decision level). 
VII. DISCUSSION 
     As is generally true with empirical research, our results 
are subject to interpretation and are limited to the data and 
its context that was analyzed. Four threats to the validity of 
the conclusion are identified. First, the sample of 
organizations included is solely drawn from governmental 
institutions. Although we believe that governmental 
institutions adequately represent organizations that apply 
BRM, we lack the inclusion of commercial organizations in 
this study.  
     Second, regarding the research method and techniques 
utilized, our study included a sample of ten verification 
subject-matter experts. Despite the expertise levels of these 
ten subject-matter experts was substantive, this could be 
seen as a low number of participants. We argue that, given 
the maturity of the body of knowledge on verification with 
regards to business decisions and business logic, the 
qualitative approach with a lower number of participants 
was more suitable. This approach offered a more in depth 
view 
of 
the 
‘verification’ 
phenomenon 
at 
these 
organizations and provides the body of knowledge with a 
basis to continue more ‘broad-focused’ research on the topic. 
Third, with regards to the completeness of the results, this 
study allowed us to identify a large chunk of relevant 
verification capabilities in the Dutch governmental context. 
While we believe that the included organizations represent 
the Dutch governmental agencies fairly, the Dutch 
government houses many more governmental agencies that 
could not participate or were not involved in this study due 
to the scope and other practical matters. Of course we 
cannot claim that the verification capabilities presented in 
this paper represent the full spectrum of verification 
capabilities possible or utilized in practice.  
Fourth one additional relevant factor with regards to our 
results might be the importance of each capability in 
practice, which we yet have to find an answer to. We stress 
that future research should focus on finding answers to such 
knowledge gaps. 

110
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
VIII. FUTURE RESEARCH 
     This study and its results revealed multiple possible and 
interesting research directions. Undoubtedly the first 
research direction would be the shift from a narrow and 
deep focus of qualitative research to a more broad focus 
including both qualitative and quantitative research methods 
and data collection & analysis techniques. This allows for 
the inclusion of more participants, thus larger sample sizes, 
and therefore improves the generalizability of future results. 
The latter is important to both the body of knowledge and 
practice as it ensures validity of verification as a capability 
and drives adoption in practice. Additionally, future studies 
should 
include 
both 
governmental 
and 
commercial 
organizations and possibly identify best practices for both 
types of organizations. It would be interesting to find out 
whether verification is implemented significantly different 
in a commercial setting. On the one hand, this is possibly 
due to the fact that a governmental organization has to ‘lead 
by example’ rather than take risks on purpose. On the other 
hand, concerning the availability and expectations of a 
commercial organization’s services (being very dependent 
on correctly implemented and executable business decisions 
and business logic), the possible risks could be much higher.  
     One dimension that could be explored in future research 
are the situational factors that drive the verification goals. 
For example, the type of organization, language utilized or 
type of services delivered could affect which verification 
capabilities 
are 
implemented. 
Such 
factors 
help 
organizations to easily identify where to focus on when 
designing and implementing verification capabilities.  
REFERENCES 
 
[1] 
K. Smit, M. Zoet, and M. Berkhout, “Verification 
Capabilities for Business Rules Management in the Dutch 
Governmental Context,” in Proceedings of the fifth 
International Conference on Research and Innovation in 
Information Systems (ICRIIS), Langkawi, Malaysia, 2017. 
[2] 
M. Zoet, Methods and Concepts for Business Rules 
Management, 1st ed. Utrecht: Hogeschool Utrecht, 2014. 
[3] 
J. Boyer and H. Mili, Agile business rule development: 
Process, Architecture and JRules Examples. Springer 
Berlin Heidelberg, 2011. 
[4] 
Object Management Group, “Decision Model And 
Notation (DMN), Version 1.0,” 2015. [Online]. Available: 
http://www.omg.org/spec/DMN/1.0/. 
[5] 
Object Management Group, “Decision Model And 
Notation (DMN), Version 1.1,” 2016. 
[6] 
A. F. Ackerman, L. S. Buchwald, and F. H. Lewski, 
“Software inspections: an effective verification process,” 
IEEE Softw., vol. 6, no. 3, pp. 31–36, 1989. 
[7] 
A. Vermesan and F. Coenen, Validation and Verification 
of Knowledge Based Systems: Theory, Tools and Practice. 
Springer Science & Business Media, 2013. 
[8] 
W. M. Van der Aalst, “Formalization and verification of 
event-driven process chains,” Inf. Softw. Technol., vol. 41, 
no. 10, pp. 639–650, 1999. 
[9] 
B. Buchanan and E. Shortcliffe, Rule-Based Expert 
Systems: The Mycin Experiments of the Stanford Heuristic 
Programming Project. Reading, MA: Addison Wesley 
Publishing Company, 1984. 
[10] 
A. Deutsch, R. Hull, F. Patrizi, and V. Vianu, “Automatic 
verification of data-centric business processes,” in 
Proceedings of the 12th International Conference on 
Database Theory, 2009, pp. 252–267. 
[11] 
F. Puhlmann, “Soundness verification of business 
processes specified in the pi-calculus,” in OTM 
Confederated International Conferences “On the Move to 
Meaningful Internet Systems,” 2007, pp. 6–23. 
[12] 
R. Studer, V. R. Benjamins, and D. Fensel, “Knowledge 
engineering: principles and methods,” Data Knowl. Eng., 
vol. 25, no. 1, pp. 161–197, 1998. 
[13] 
B. Von Halle and L. Goldberg, The Decision Model: A 
Business Logic Framework Linking Business and 
Technology. CRC Press, 2009. 
[14] 
T. Morgan, Business rules and information systems: 
aligning IT with business goals. Addison-Wesley 
Professional, 2002. 
[15] 
A. Kovacic, “Business renovation: business rules (still) 
the missing link,” Bus. Process Manag. J., vol. 10, no. 2, 
pp. 158–170, 2004. 
[16] 
S. Schlosser, E. Baghi, B. Otto, and H. Oesterle, “Toward 
a functional reference 
model for business rules 
management,” 
in 
the 
47th 
Hawaii 
International 
Conference on System Sciences (HICSS), 2014, pp. 3837–
3846. 
[17] 
M. Zoet and K. Smit, “An Economic Approach to 
Business Rules Normalization,” in Proceedings of the The 
Ninth International Conference on Information, Process, 
and Knowledge Management, 2017, pp. 1–6. 
[18] 
K. Smit and M. Zoet, “Management Control System for 
Business Rules Management,” Int. J. Adv. Syst. Meas., 
vol. 9, no. 3–4, pp. 210–219, 2016. 
[19] 
K. Smit, M. Zoet, and M. Berkhout, “A Framework for 
Traceability of Legal Requirements in the Dutch 
Governmental Context,” in Proceedings of the 29th Bled 
eConference, 2016, pp. 151–162. 
[20] 
K. Smit and M. Zoet, “Utilizing Change Effort Prediction 
to Analyze Modifiability of Business Rule Architectures 
at the NHS,” in PACIS 2016 Proceedings, 2016, p. paper 
261. 
[21] 
B. W. Boehm, “A spiral model of software development 
and enhancement,” Computer (Long. Beach. Calif)., vol. 
21, no. 5, pp. 61–72, 1988. 
[22] 
G. J. Holzmann, “The model checker SPIN,” IEEE Trans. 
Softw. Eng., vol. 23, no. 5, pp. 279–295, 1997. 
[23] 
W. Van der Aalst, H. De Beer, and B. Van Dongen, 
“Process mining and verification of properties: An 
approach based on temporal logic.,” in On the Move to 
Meaningful Internet Systems 2005: CoopIS, DOA, and 
ODBASE, 2005, pp. 130–147. 
[24] 
K. Smit and M. Zoet, “Management Control System for 
Business Rules Management,” Int. J. Adv. Syst. Meas., 
vol. 9, no. 3–4, pp. 210–219, 2016. 
[25] 
S. Liao, “Expert system methodologies and applications—
a decade review from 1995 to 2004,” Expert Syst. Appl., 
vol. 28, no. 1, pp. 93–103, Jan. 2004. 
[26] 
Camunda, “Camunda Github - Supported Languages,” 
2017. 
[Online]. 
Available: 
https://github.com/camunda/camunda-docs-

111
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
manual/blob/master/content/user-guide/dmn-
engine/expressions-and-scripts.md. [Accessed: 30-Aug-
2017]. 
[27] 
M. L. Nelson, J. Peterson, R. L. Rariden, and R. Sen, 
“Transitioning to a business rule management service 
model: Case studies from the property and casualty 
insurance industry,” Inf. Manag., vol. 47, no. 1, pp. 30–
41, Jan. 2010. 
[28] 
A. C. Edmondson and S. E. Mcmanus, “Methodological 
Fit in Management Field Research,” Proc. Acad. Manag., 
vol. 32, no. 4, pp. 1155–1179, 2007. 
[29] 
A. L. Delbecq and A. H. Van de Ven, “A group process 
model for problem identification and program planning,” 
J. Appl. Behav. Sci., vol. 7, no. 4, pp. 466–492, 1971. 
[30] 
A. Strauss and J. M. Corbin, Basics of qualitative 
research: Grounded theory procedures and techniques. 
Sage Publications, Inc, 1990. 
[31] 
B. G. Glaser, Theoretical sensitivity: Advances in the 
methodology of grounded theory. Sociology Press, 1978. 
[32] 
K. Smit, M. Zoet, and M. Berkhout, “Technical Report 
Case-2016-0001,” Utrecht, 2016. 
 

112
International Journal on Advances in Systems and Measurements, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/systems_and_measurements/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
APPENDIX A: Determine malnutrition risk DRD 
 
Decision Requirements Level 
In the decision requirements level, seven decisions are modelled with their corresponding business knowledge, input data and 
knowledge sources, see Figure A-1.  
 
 
Figure A-1. Decision Requirements Level Diagram – Assess malnutrition risk [32] 
 

