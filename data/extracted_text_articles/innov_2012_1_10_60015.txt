Automated Generation of Movement Trace for Aircraft Ad Hoc Networks  
Ki-Il Kim 
Department of Informatics, Engineering Research Institute 
Gyeongsang National University 
Jinju, Korea 
kikim@gnu.ac.kr 
 
 
Abstract — Following our previous our work [1] to get realistic 
movement trace for aircraft ad hoc networks, in this paper, we 
propose how to generate the automated scenarios that are 
supposed to be used in simulation. Even though an approach 
for realistic mobility model was proposed as well as 
implemented in our previous work, it lacks of repeatability and 
takes long time to get the trace file due to manual 
configuration for parameters of all aircrafts. Thus, automated 
scenario generation is strongly required for diverse different 
scenarios in a way of convenient and easy configuration. To 
achieve this research goal, some additional functions are 
proposed and implemented under the same software 
architecture as the previous work. 
Keywords-movement trace; aircraft ad hoc networks. 
I. 
 INTRODUCTION 
As many researches for AANET (Aircraft Ad Hoc 
Networks) [2] have been recently conducted, performance 
evaluation through network simulator is regarded as one of 
essential tasks while developing new enhanced protocols or 
network architecture. Nevertheless, since current popular 
network simulators are not sufficiently equipped for 
adequately simulating the mobility of moving aircraft, 
corresponding components for each simulator is strongly 
required. Among required components, movement trace is 
one of big research challenges because there are little 
available sources. Thus, a new source of realistic mobility 
traces for simulation should be concerned significantly. This 
requirement was also observed in research experience from 
pure mobile ad hoc networks to vehicular ad hoc networks.  
Related to movement trace, it can be obtained by either 
mathematical model or actual observation. For former 
example, a new model was introduced in [3]. In this work, 
we propose how to create a position and velocity function for 
an aircraft, given its starting location and speed, altitude, and 
heading on each leg of its height. In addition, an optimization 
procedure is used to fit the position and velocity functions to 
the supplied data. Even though the proposed scheme in [3] 
enables 
the 
researcher 
to 
facilitate 
the 
movement 
information; however, the proposed method is not suitable to 
generate realistic mobility model. The major reason for this 
drawback is caused by the following fact that there is a large 
number of aircrafts with different properties and great 
changes in flying surrounding situations such as wind. 
Therefore, despite of complex dynamics of each aircraft and 
external environments, it should be considered together with 
a mathematical model; for the realistic movement model, 
mathematical model presented in [3] cannot accommodate 
all possible situations. This fact leads to unrealistic 
movement trace in many scenarios. In the latter case, as a 
current observation, real-world aircraft will be tracked using 
on-board or subsidiary devices and vehicle positions 
recorded at regular intervals. However, while such a mobility 
model will arguably result in the most realistic aircraft 
movement, its use is limited by this approaches’ inherent 
limitation to a small set of mobility parameters. Changing 
only one parameter, e.g., the density of vehicles, and keeping 
all other parameters unchanged is simply infeasible in 
reasonably large scenarios. The restriction of trace data on 
what could be recorded from real-world vehicle movements 
can be easily overcome by generating such movement traces 
artificially.  
To solve problem mentioned above, we proposed how to 
use commercial flight simulator for movement trace. As far 
as we know, this is the first approach to use commercial 
flight simulator for the research in AANET. 
 
 
Figure 1.  Software architecture 
 By using flight simulator, actual movement of each 
aircraft is controlled by each user’s manual aviation or 
automatic flight in the commercial flight simulator 
depending on dynamic of each aircraft. The software 
architecture for the movement trace is shown in Figure 1. 
Through user interface, a user can create several scenarios. 
And then, mobility generator that is implemented by help of 
flight simulator is executed to generate raw movement data. 
Finally, raw data is converted to the adequate format in each 
network simulator. In Figure 2, we can see the real 
implementation and experiment results. A user can create 
each node in developed software and this action brings about 
1
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-244-8
INNOV 2012 : The First International Conference on Communications, Computation, Networks and Technologies

the creation of aircraft in flight simulator. Similar to this 
procedure, 
positional 
information 
of 
waypoints 
are 
transferred to corresponding object in flight simulator. After 
executing simulation, an aircraft starts its aviation and 
generates the trace for movement. This information is 
displayed in developed software to prove its operation. 
 
 
Figure 2.  Movement toward waypoint and display of position information 
at the left side 
II. 
AUTOMATED TRACE FOR MOVEMENT 
By using the works described in the previous section, it is 
possible for researchers to gather realistic movement trace. 
But, it is recommended to employ automated scenarios 
configuration rather than manual one for the diverse 
scenarios since multiple runs are naturally required in the 
procedure for performance evaluation. With the same 
demand, “setdest” [4] external command for mobility 
generation for random waypoint model is provided in NS-2. 
In addition, a mobility scenario generation and analysis tool 
was already released as shown in [5]. In this section, we 
explain how to extend the current software to generate 
automated movement trace. 
A. Analysis of Automated Movement Trace 
The procedure toward automated scenarios requires 
following information to gather movement trace, number of 
aircrafts, type of aircrafts, mobility pattern, and simulation 
time. Figure 3 illustrates the example of user interface for 
generating scenarios. In this interface, if a user wants to 
create eight aircrafts totally, four aircrafts are made after 
creating four ones, respectively. The type of aircrafts can be 
determined in a group. 
B. Implementation Issues 
 
Initial position of aircraft: When many aircrafts are 
created, the initial position of them can affect the 
movement traces. To prevent dense deployment, the 
position of aircraft is determined in a uniform way 
where the aircraft were arranged in any position 
within the square in uniform topology. 
 
Mobility type: For the mobility pattern, we design 
two different types. One is random walk model [6] 
and the other is mission based model. The latter is 
assumed that a special mission is performed by the 
corresponding aircraft. Thus, an aircraft starts 
aviation toward the destination in this mode. After 
an aircraft arrives the destination and then it change 
the direction to the original point. On the other hand, 
an aircraft moves with arbitrary speed and direction 
during the predetermined time in the random walk 
model. After the duration is over, new direction is 
selected and an aircraft change its moving direction 
according to new one. The major different feature 
with typical random walk is that moving speed is not 
changed but fixed in this model. The model is very 
suitable dynamic situation where there is fighting. 
 
Figure 3.  User interface for scenario generator 
C. Algorithm for Movement Trace 
The algorithm for automated movement is shown below. 
The main part of algorithm is defined in line 4 as FUNC. 
This function is provided by commercial flight simulator to 
model realistic movement of each aircraft.  
 
Ai : ith aircraft ( 0 <= i <= number of aircrafts) 
Ai(m) : mobility model of ith aircraft 
Ai(k) : kind of ith aircraft 
Pi(t) : Position of Ai at time t 
V(i) : Velocity of aircraft i 
Distancei (j-1,j) : Moving distance from time j-1 to j 
T : simulation time 
 
1. for all aircrafts { 
2.       Pi(0) = initial position of Ai 
3.       while (current_time < T) { 
4.            Distancei(j-1,j) = FUNCi(V(i), Ai(k), Ai(m)) 
                where FUNCi is defined by dynamic of each 
aircraft in Flight Simulator 
5.            Pi(j) = Pi(j-1) + Distancei(j-1,j)  
6.            converts Pi(j) to ns-2 format 
7.            j++ 
8.        } 
9. } 
 
2
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-244-8
INNOV 2012 : The First International Conference on Communications, Computation, Networks and Technologies

 
STEP 1: for all aircrafts, set initial position. 
 
STEP 2: Compute the next position with realistic 
dynamics of aircrafts until whole simulation time is 
over. 
 
STEP 3: Generated position information is converted 
to NS-2 format. 
III. 
EXPERIMENTS 
We implemented the core technologies for mobility and 
scenario generator. In Figure 4, the initial position of 10 
aircraft is shown when each aircraft locates in uniform way. 
In addition, Figure 5 shows the movement of aircrafts when 
movement pattern is modeled as random walk. The colored 
link represented the consecutive positions that aircraft 
sequentially visited.  Moreover, experiment for mission 
based model is illustrated in Figure 6. Different from case in 
Figure 5, we can see the respective destination that an 
aircraft is supposed to visit the place. Each aircraft move 
toward the destination based on its dynamic model. 
 
 
Figure 4.  Locates aircraft at the initial point 
 
Figure 5.  Movement display in random walk model 
 
Figure 6.  Movement display in mission based model 
IV. 
COMPARISON WITH PREVIOS WORK 
In this section, the proposed scheme is compared with 
previous work [3], based on mathematical equation. The 
position is marked in the realistic map as you can see in 
Figure 7 and Figure 8. First, aircraft in Figure 7 shows the 
mathematical movement. Since the mobility model is not 
affected by external environment as well as dynamic of 
aircraft, movement is illustrated as straight line. Also, 
direction is changed rapidly at the waypoint. On the other 
hand, movement for Boeing 747 aircraft shows different 
pattern with the former one. When corresponding aircraft 
requires wide range of turning direction where external 
environment is not always the same, different movement 
trace around the waypoints are observed. Another point 
worthwhile mentioning is that the actual movement cannot 
guarantee to pass waypoints exactly even though the aircraft 
approaches them nearly. Meanwhile, movement that is 
managed by the equation, all points are shown to covered 
exactly by the trace. 
 
Figure 7.  Movement trace by the proposed scheme 
3
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-244-8
INNOV 2012 : The First International Conference on Communications, Computation, Networks and Technologies

 
Figure 8.  Movement trace by [3] 
V. 
CONCLUSION 
In this paper, we proposed how to implement automated 
scenarios and mobility generator for aircraft ad hoc networks. 
Based on software architecture in our previous works, some 
functions are additionally implemented while considering 
implementation issues such as mobility pattern. Finally, 
results for experiment of implementation are shown to prove 
the correctness of the implementation. 
For the further works, we will provide more functions for 
initial positioning such as random distribution. Also, other 
mobility patterns such as group mobility will be concerned 
for implementation. Furthermore, performance evaluation of 
the routing protocol with generated mobility trace file will be 
accomplished and analyzed. 
ACKNOWLEDGMENT 
This research was supported by the MKE (The Ministry 
of Knowledge Economy), Korea, under the ITRC 
(Information Technology Research Center) support program 
(NIPA-2012-H0301-12-3003) supervised by the NIPA 
(National IT Industry Promotion Agency). 
REFERENCES 
[1] 
K. I. Kim and K. C. Park, “Design of Movement Scenarios for 
Aircraft Ad Hoc Networks,” Proc. of ASEA, Korea, Dec. 2012. 
[2] 
Airborne 
Ad 
Hoc 
Networks, 
http://www.csse.monash.edu.au/~carlo/adhoc.html, [retrieved: Oct., 
2012] 
[3] 
J. Nutaro, S. Jarboe, B. Zeigler, and D. Fulton, "A Method for 
Generating Synthetic Air Tracks," in Proc. of 12th IEEE/ACM 
International Symposium on Distributed Simulation and Real-Time 
Applications, pp. 245-251, 2008. 
[4] 
The 
Network 
Simulator 
ns-2: 
Documentation, 
http://www.isi.edu/nsnam/ns/ns-documentation.html [retrieved: Nov., 
2011] 
[5] 
BonnMotion, http://net.cs.uni-onn.de/wg/cs/applications/bonnmotion/, 
[retrieved: May, 2012] 
[6] 
T. Camp, J. Boleng, and V. Davies, “A Survey of Mobility Models 
for Ad Hoc Network Research,” Wireless Communication and 
Mobile Computing (WCMC): Special issue on Mobile Ad Hoc 
Networking: Research, Trends and Applications, vol. 2, no. 5, pp. 
483-502, 2002. 
 
 
 
4
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-244-8
INNOV 2012 : The First International Conference on Communications, Computation, Networks and Technologies

