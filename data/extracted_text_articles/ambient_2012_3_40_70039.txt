 
Requirements of Task Modeling in Ambient Intelligent Environment 
 
 
Asma Gharsellaoui,Yacine Bellik 
AMI Group, LIMSI-CNRS, Paris-South University 
Bât 508, Plateau du Moulon, B.P, 133, 
91403 Orsay Cedex, France 
asma.gharsellaoui@limsi.fr 
yacine.bellik@limsi.fr 
Christophe Jacquet 
Department of Computer Science, 
SUPELEC Systems Sciences, 
3 rue Joliot-Curie 
91192 Gif-sur-Yvette Cedex, France 
Christophe.Jacquet@supelec.fr 
 
 
Abstract— User tasks modeling  has been the focus of many 
research works either for designing user interfaces suitable to 
given use cases or for identifying the current task of the user in 
order to assist him/her. The problem of user tasks modeling 
has   been   widely   addressed   within   the   context   of   GUIs 
(Graphical User Interfaces). In this paper, we present an 
overview of several existing task models and we discuss the 
specificities of user tasks modeling in the context of Ambient 
Intelligent   Environments,   which   are   mainly  place-related 
tasks, device-related tasks and the possible errors occurring 
while performing a task. Then, w e  discuss the limitations of the 
classical user tasks models and depict the requirements of a 
task model specific to an interaction with an ambient 
environment. 
 
Keywords-User 
Task 
modeling; 
Ambient 
intelligent 
environments; User-centered systems. 
 
I. 
INTRODUCTION 
Ambient Intelligent (AmI) environments strive to support 
everyday life of the user through their embedded   intelligent 
objects [1]. The goal of such environments is to satisfy user 
needs based on his/her preferences. Users are the center of 
such systems and are becoming more and more accustomed 
to technology and require more complex interaction 
possibilities. A user interacts with the system through tasks 
which are actions the user is going to perform in order to 
achieve a certain goal. Research in the field of assistance and 
supervision of tasks in ambient environments are still at an 
early stage. 
 
In this context, our work focuses on helping users to 
perform tasks properly through an adapted modeling 
approach. The purpose of user task modeling is to paint a 
predictive picture of user’s activity. This picture must be 
detailed enough to create  usable  systems.  Section  II  
details the  basic concepts related to task modeling. Section 
III contains a discussion of existing task models and their 
limitations. Section IV presents the specificities of ambient 
tasks and is followed by a discussion on how existing models 
can or cannot deal with these specificities through a scenario 
example (Section V). Our main contribution lies in Sections 
VI and VII that, respectively, introduce a new taxonomy for 
tasks categorization in ambient environments, and identify 
requirements   for   task   models   adapted   to   ambient 
applications. Section VIII gives conclusions and directions 
for future work. 
 
II. 
BASIC CONCEPTS 
 
A. Task 
According to the Shorter Oxford Dictionary, a task is 
“any piece of work that has to be done”. Tasks can be seen as 
actions that have to be performed to reach a goal in a specific 
application domain. They can be either logical such as 
retrieving information about a contact or physical such as 
dialing a phone number [2]. These actions are intended to be 
performed   by   the   user,   but   they   do   not   necessarily 
correspond to the user behavior while manipulating the 
application. 
 
B. Goal 
A goal is an intention either to modify the state of an 
artifact  or  to  maintain  it  [3].  For  example,  accessing  a 
contact database to look up a phone number of a colleague is 
a goal which does not require the modification of the state of 
the application, whereas accessing a contact database to add 
a new contact requires the modification of the state of the 
application. 
Tasks and goals are closely connected. Each task can be 
associated with one goal that is the goal achieved by 
performing the task while one goal can be achieved by 
performing  one  or  multiple  tasks.    In  some  cases  it  is 
possible to choose among different tasks to achieve a certain 
goal [2]. 
 
C. Activity 
A user activity is a set of actions that the user is really 
going  to  perform  when  interacting  with  the  system  to 
achieve a goal. The activity corresponds to the user behavior 
when interacting with the system depending on the context 
of use. It is unpredictable and obtained by observing the 
behavior of the user. 
 
D. Task Model 
When designing an  interactive system, several phases 
are conducted.  First of all the task analysis phase [4] takes 
place to identify the fundamental elements of a job and to 
examine required knowledge and skills [5]. When this phase 
is  finished,  relevant  tasks  are  identified  and  the  task 
modeling phase starts. The purpose of task modeling is to 
71
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

build a model which precisely describes the relationships 
among the various tasks already identified. A task model 
describes the predictive activities to be performed in order to 
reach user goals. 
The basic principle of task modeling is to decompose 
each task until reaching basic tasks which cannot be further 
decomposed. In some cases basic tasks require one single 
physical action to be performed. The level of decomposition 
in  task  modeling  depends  on  its  purpose.  Task  models 
should be rich in information and flexible so as to capture all 
the main activities that should be performed to reach the 
desired goals and the different ways to accomplish them [6].  
We notice that there is a difference between task modeling and 
process modeling. A process modeling is a way of describing 
actions that must be done by the system and so 
implemented. But task models describe what could be done 
but not necessarily what will be done. 
Task models can  be useful for two main  classes of 
people [2]: 
-  Designers: task models provide a  structured approach  
to evaluate an existing system or as a starting point to 
design new applications from scratch before implementing 
them. 
- End users: the developer takes into account the user’s 
activities since the physical actions supported by the user 
interface can be mapped onto logical actions and the 
representations provided could support the possible tasks. 
 
III. EXISTING TASK MODELS AND THEIR LIMITATIONS 
A number of approaches to task modeling have been 
developed. In the following paragraphs, we present a short 
overview of the main ones. 
HTA: Its main idea is to represent complex tasks through 
a hierarchical representation (tree-like structure) [7]. This 
process starts with the identification of goals [8] knowing 
that  each  goal  has  a  status  (i.e.,  latent  or  active)  and 
conditions  to  be  satisfied.     Then  the  decomposition  is 
repeated recursively until obtaining observable subtasks 
allocated either to the user or to the user interface [9]. Using 
this formalism we don’t see clearly if we model a system 
action or a user one. This model doesn’t offer a lot of 
operators. For example there is no specific symbol to model 
parallel actions; one can only choose to use non-ordered 
sequences. 
GTA: It describes the tasks by focusing on four central 
concepts: agents, roles, work [7] and situation [10]. Agents 
often represent people, either individuals or  in groups; in 
some cases there can be non-human actors, or systems that 
comprise collaboration between human agents and machines. 
GTA doesn’t enable one to see if the task is allocated to the 
system, the user or both (case of an interactive task) since 
there is no single representation for each type. It enables one 
to express only few operators in a specific way, for example 
hierarchical structure is represented from left to right. 
CTT: The Concur  Task Tree is a  concurrent notation 
having a structured representation (a tree-like form). There is 
a distinction between four groups of tasks with various 
representations:  User  tasks,  Application  tasks,  Interaction 
tasks and Abstract tasks (tasks that need to be refined).It 
provides a large number of temporal relationships between 
the tasks [11]. It is one of the richest task models, but it is a 
static model (once established it doesn’t change, see Section 
V). In addition, it does not focus on the physical space where 
the task will occur, nor on the devices since it concerns a 
single system. 
UAN: It is a textual notation where the interface is 
represented as a quasi-hierarchical structure of asynchronous 
tasks, the sequencing within each task being independent of 
the  others.  Each  basic  task  is  associated  with  one  table. 
These tables have three columns indicating the user actions, 
the  system  feedback  and  the  internal  state  modifications 
using some specific symbols [12]. A rich set of operators to 
describe temporal relationships among tasks is available. But 
this method leads to a large specification. And it is not 
possible to model actions out of the interaction with the 
interface. 
TKS: This method is based on a Task Knowledge 
Structure, which is a conceptual representation of the 
knowledge a person has stored in her memory about a 
particular task [6]. It has a tree like form.  TKS focuses on: 
Roles, Goal structure and Taxonomic structure. Using this 
formalism it is not possible to model various relations 
between tasks as there is no special notation for repetitive, 
optional, parallel actions. Another limitation of this method 
is that is not possible to model system actions. 
DIANE+: DIANE+ formalism [13] is a tree-like model 
using  three  types  of  actions:  interactive,  automatic  and 
manual [6]. Diane+ can represent all the constraints of the 
above specifications such as ordered sequences, unordered 
sequences, loops, required choices, free choices, parallelism, 
default operations, and so on [7]. It doesn’t include any 
possibility to put additional information about the task 
concerning, for instance, location, required devices, etc. 
TOOD:  It  consists  of  an  object-oriented  method  for 
modeling tasks in the domain of processes control and 
complex interactive systems [7].  It is based on a hierarchical 
decomposition  into  tasks  modeled  using  Petri  Nets.  This 
method consists of four steps: hierarchical decomposition of 
tasks, identification of descriptor objects and world objects, 
definition of elementary and control tasks and integration of 
concurrency [14]. This description covers task hierarchy and 
temporal ordering. Sometimes we have a succession of user 
actions and we can’t model it using this formalism which 
obliges each action to be between two system transitions. 
 
 
IV. 
SPECIFITIES OF TASKS IN AMBIENT  INTELLIGENT 
ENVIRONMENTS 
 
A. Ambient Intelligence 
The term Ambient Intelligence (AmI) was coined by 
Philips in 1998, then used by the European Commission in 
2001 and has since been adopted worldwide [16]. At the 
beginning, AmI was a vision of the future in which 
environments support the people inhabiting them. It has 
been introduced [15] as an intelligent, embedded, digital 
environment that is sensitive and responsive to the presence 
of people. 
AmI has a wide range of application since applications 
in various domains were realized. According to [16] the 
main application areas are: AmI at home for domestic care 
of the elderly [17] or assisted living; AmI at Shops, 
shopping,  recommender  systems  and  business  and  also 
many applications in Museums, tourism, groups, and 
institutions. 
72
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

Unlike a workstation whose actions have an impact only 
on itself and its immediate environment, an ambient system 
can incorporate features that enable it to act more broadly on 
the  physical  environment  (actuators)  or  to  acquire 
information from its environment (sensors). In addition to 
the  sensors  and  actuators,  the  system  also  incorporates 
devices  enabling the interaction  with the user  [18]. 
Nowadays,   sensors  available  in   ambient   systems  may 
provide clues about the behavior of people (position, 
orientation, displacement, etc.). This kind of information 
could then be exploited to ensure the proper conduct of tasks 
performed by the user and to offer assistance when needed. 
 
B. Characteristics of tasks in AmI Environment 
Device-dependent tasks 
Ambient   systems   include   many   small   devices   in   the 
surrounding space of the user. Fulfillment of a task may 
require resources from the environment in which it will take 
place. That is why we talk about device-related tasks. 
If  a  task  requires  a  specific  device,  we  must  
find  this equipment. In an AmI environment, the devices 
could be added or removed at each moment or could be used 
by another person. When the user needs a device, the system 
must invoke this particular device or an equivalent one. This 
requires devices’ categorization according to the services it 
could offer to the user. For example, the screen laptop could 
be used as a projection screen for viewing a film if the TV is 
out of order or being used by another person. So for each 
device we will have a list of possible related tasks. 
Place-dependent tasks 
Some tasks may need some resources which may be not 
mobile but located somewhere in the physical space. The 
execution  of  the related  tasks will  be  possible only in  a 
certain range of the physical space. That’s called place- 
related  tasks.  For  example:  Kitchen-related  tasks  are  the 
tasks possible in the kitchen such as:  make tea, wash dishes, 
and prepare dinner... 
 
Tasks in AmI environments also share some characteristics 
with classical tasks, in particular: 
Temporal relationships 
Two (or more) tasks in an ambient environment could be 
associated  through  kinds  of  relationships.  Parallel  tasks 
should be executed at the same time. Sequential tasks need to 
be executed in order: the beginning of a task corresponds to 
the end of the previous one. In some cases we could have the 
choice to get into a state by executing a specific task or 
another that is equivalent. In other cases we may need to 
model a second task that suspends the execution of a first 
task and that will be executed again after the second task 
finishes. 
Error-prone behavior 
Since  we  model  user  actions  in  interaction  with  various 
intelligent embedded systems, it is possible that errors occur 
during  the  process  (system  errors  or  user  manipulation 
errors). These errors must not be neglected during the 
modeling phase and alternative solutions should be provided. 
V. 
DISCUSSION OF EXISTING TASK MODELS THROUGH AN 
EXAMPLE 
A large number of task models have been developed, 
especially in the context of GUIs. In this section some of 
these models are discussed according to the characteristics of 
tasks in AmI environments through an example scenario. 
 
A. Ambient scenario 1 “Renewing passport” 
Elie was browsing traveling web pages. The system 
understands that she plans to go on a trip and reminds her 
that her passport is no longer valid. The system asks her if 
she wants help to renew her passport. Once she validates this 
option, the system starts giving her instructions. 
The system connects to the “city hall” website (of the 
town where she lives) to get the different documents that 
should be provided when renewing a passport. 
The system instructs her that she needs a certificate of 
birth.  She asks  for  help  since  she  forgets its  place.  The 
system mentions that it is in the shelf where she puts her 
papers. Elie finds it and presents it to the system scanner. 
The system scans the found certificate and notices that it is 
expired (it was provided since more than three months) and 
a new one must be extracted from the “town hall” where 
she was born. For this purpose, the system suggests   Elie   to   
send   them   an   email.   An   email   is automatically written 
including some information about her (first name, last name, 
date and place of birth …) asking for a new certificate of 
birth. Elie validates the email which is sent to the “town 
hall”. 
Now, the system indicates that she needs a new 
normalized photo. Elie goes in front of the camera. First she 
is in front of a white wall; the photo web service indicates 
that the photo is not valid since the background must be clear 
but not white. The second trial is in front of a black wall and 
the photo system rejected this picture too. The third one is 
accepted by the system and then printed. Elie takes the 
pictures and puts them on a tray where she collects all the 
needed items. 
Then the system instructs her to buy a tax stamp from the 
web  site  of  the  general  treasury.  The  system  opens  the 
website of the general treasury and Elie chooses the 
appropriate stamp indicated on the web site of the “city hall” 
then proceeds to the payment. She types her credit card 
number and prints the stamp received by email. She adds it 
to the tray containing  all  the  other  papers.  She is not  
sure that  she bought the correct stamp so she scans its 
barcode using a tablet computer and the system tells her that 
it is indeed the asked one. 
At this stage, she needs to find her  old passport; she 
asked the system to help her to find it because she forgot 
where she put it. The system instructs her to look in the 
nightstand. She finds it, brings it and adds it to the tray. 
Now, that she has collected all the papers she must wait 
for the certificate of birth to have the file closed and to go to 
the “city hall” to deposit the renewing papers. However she 
decides to already get an appointment to deposit the 
documents. 
73
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

The system dials the number of the “city hall” in order to 
make an appointment. When Elie talks on the phone, her 
calendar is displayed starting from next week (as the 
certificate takes usually one week  to be delivered) in 
order to see her free times to insure her availability for the 
chosen date. 
 
B. Task models representation 
 
In Section 3 we have talked about seven task models. 
We have tried to model the proposed scenario using some of 
them to highlight their limits. 
Figures 1 and 2 show the modeling of this scenario 
using the HTA task model. As it could be seen from the 
model, we couldn’t model system tasks so we feel that a big 
part of the model is missing (TKS model exhibits the same 
limitation). For example, we don’t see that the system 
proposes help. At first we see directly the user validating 
help  request.   We  could not   model   the  parallel  actions 
“talking on the phone” and “seeing the calendar”. We could 
not model the possible errors while taking photos directly 
but we represent them as a repetitive task. 
Figure 3 shows a part from the renewing of the passport 
scenario model using the GTA task model. We can see that 
we could model system actions as well as user actions but 
we could not differentiate between the two types since we 
use the same representation. At the starting of each subtasks 
we put the time relationship between them and we have 
various options for that (for example we have “seq” for 
sequential tasks, “and” for parallel executed tasks, etc.). 
Using UAN, we cannot model actions out of the 
interaction with the interface so we couldn’t model the 
scenario since it includes many actions of an  interaction 
with an ambient system not necessarily a GUI. We could 
just model for example the purchase of the stamp as it is 
realized on line. 
Figure 4 shows a part of the scenario modeled using the 
CTT task model. We can see that this model enables to 
model user tasks, system tasks and interaction tasks with 
different   representations;   but,   we   need   to   differentiate 
between different sub-systems since the user is interacting 
with different sub-systems in order to achieve his/her goal. 
We also need sometimes to put constraints related to places 
for instance in our scenario the user must sit in front of the 
camera to be able to take the picture. This model is rich with 
its different time operators but once established it doesn’t 
evolve according to the context (when modeling ambient 
tasks, the task model must evolve in real time to ensure that 
it takes into account the modification in the environment). 
There is no special notation for errors occurring. 
 
C. Discussion 
Only few of the existing task models include a clear 
differentiation in the representation of the tasks between 
system tasks, user and interaction ones. For instance from the 
ones cited in the third section only CTT and DIANE+ 
explicitly introduce several categories,  whereas the others 
represent  all  task  types  on  the  same  way.  None  of  the 
referred task models has a special notation for device-or- 
place-related tasks. This limitation is due to the fact that 
these task models deal only with tasks invoking only one 
system, so there was no need to model several systems or 
place-related systems. Some of the listed task models (for 
instance: GTA, CTT UAN...) have a large choice of time 
operators offering possibilities to express various time 
relationships between tasks. It’s also important to notice that 
not all the task models have a graphical presentation for 
example UAN doesn’t have a graphical representation but 
just a textual description of the different tasks. 
Table I summarizes the main characteristics of existing 
task models. The column "Types" indicates if the model 
includes any differentiation 
between 
task 
categories. 
“Devices” and “Places” show if there is any possibility to 
express device-related and place-related tasks. “Time 
Operators” refers to the presence of time operators to express 
temporal  relationships  between  tasks.  The  final  column 
shows if there is any graphical representation of the model. 
 
TABLE I. 
COMPARISON OF EXISTING TASK MODELS 
CHARACTERISTICS 
 
 
 
Types 
 
Devices 
 
Places 
Time 
Operators 
Graphical 
Representation 
HTA  
 
 
x 
X 
GTA  
 
 
 
X 
CTT 
x 
 
 
x 
X 
UAN  
 
 
x 
 
TKS 
 
 
 
x 
X 
DIANE+ 
x 
 
 
x 
X 
TOOD  
 
 
 
X 
 
VI. 
PROPOSAL OF A TAXONOMY OF TASKS IN AMBIENT 
ENVIRONMENT 
Tasks 
in 
AmI 
environments 
have 
some 
specific 
characteristics; let us try to depict them based on a second 
scenario. 
 
A. Scenario 2 
Elie goes to work at 8am, so she leaves home; the heater is 
turned off since nobody is at home. She comes home after 
6pm so she planned a TV program recording at 5pm for her 
favorite film. The system starts also another recording of a 
cooking TV program since it knows that she likes that kind 
of program. When she leaves the office, the system puts the 
heater on, 30 minutes before she arrives (after taking into 
account the distance between the house and the office and 
depending on the traffic) as the house takes about 30 minutes 
at least for warming. When she comes back home, she calls 
her friend John and at the same time turns the TV on and 
asks for the second channel. Since the TV is in front of the 
window, the system decides to close up the window stores 
because the sun shines outside, disturbing watching TV. 
74
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

TABLE II. 
TASK CATEGORIES THROUGH EXAMPLES 
 
 
automatic 
implicit interactive 
explicit interactive 
User 
 
Programmed 
Recording TV programs 
programmed by the user 
Put heater on when the user 
comes back home 
Record TV program immediately 
after the user asks for that. 
The user asks the system to 
remind him/her or them to do a 
certain task at a specific time. 
 
 
 
Learned 
Regular TV programs 
recording learned from user 
habits 
Put heater on when the user 
comes back home because the 
user asked for that many times so 
the system learned this. 
Modification of the 
intended/planned action after 
interactions with the user. The 
system learns how to respond to 
a new order. 
The system notices that each time 
the user puts the conditioner on, he 
closes the windows. This task must be 
added to the task model to 
enable reminding the user to do it. 
 
 
 
Deduced 
 
 
Recording a given TV 
program since it is similar to 
what the user is used to 
watch. 
 
 
Put on the heater when the user 
leaves the office (deduced in 
fonction of the traffic and the 
distance between home and the 
office). 
 
 
 
When the user turns on the TV, 
the system closes the windows as 
it disturbes TV viewing. 
The system has meta-rules saying 
that if the windows are opened the 
conditioner must be closed. If the 
user opens the windows and could 
not turn off the conditioner as the 
remote controller is disabled,the 
system asks the user to put off the 
conditioner manually. 
 
B. New tasks categorization 
Starting from the Scenario 2 and trying to imagine other 
possible  situations,  we  propose  a new categorization  of 
tasks in ambient environments. Tasks are categorized with 
respect to 2 axes: 
 The way the task is launched: Tasks can be automatic, 
explicit interactive, implicit interactive, or done by the 
user. 
1/Automatic tasks: the system does the task by itself 
without user intervention at this moment. 
2/Interactive explicit: the user action or situation is 
understood by the system as an entry condition or order 
to a certain task. 
3/Interactive implicit: the user directly instructs the 
system to do a certain task. 
4/User: the task is done by the user. 
For categories 2 and 3, there is an interaction between 
the system and the user which leads to the realization of 
the task. 
 The way the task is acquired: Tasks can be 
programmed, learned or deduced, expressing the way 
the system gets knowledge of the task. 
1/Programmed: the user or the designer instructs the 
system to do a certain task. 
2/Learned: the repetitive invocations done by the user 
could be learned by the system and then anticipated and 
realized without user invocation. Here the system learns 
user habits or repetitive tasks and starts doing them 
without being ordered explicitly to do that. 
3/Deduced:  The  intelligence  of  the  system  includes 
some rules that allow some tasks to be initiated by the 
system to satisfy potential needs of the user, based on 
his/her profile. 
We propose to categorize a task through the intersection 
of these two dimensions, depending on the way a certain 
task is launched and acquired. Table 2 explains each type 
through an example from the Scenario 2 or a variation of it. 
 
VII. REQUIREMENT OF TASK MODELING IN AMBIENT 
INTELLIGENT ENVIRONMENT 
From   the   previous   scenarios,   we   can   extract   the 
following requirements for an ambient task model. 
Place-related and device-related tasks 
Concerning  the  constraints  of  place-related  and  device- 
related tasks, the task model should include the possibility of 
labeling tasks with spatial constraints and devices involved 
to achieve the task. However it is impractical to refer to a 
specific device in an AmI environment because in AmI 
environments devices and services may appear and disappear 
dynamically. So instead we should refer to a family or type 
of device. 
The usage of  an  ontology  for  device classification  
is necessary. One solution is to deal with services which 
could be realized by using different facilities from the 
surrounding environment and so the devices will be part of a 
category offering  certain  services.  Once  a  task  needing  
a  given missing device starts, the system may propose to 
realize it with one of the available equivalent ones. For 
example if the user wants to call someone and at this moment 
the phone’s battery  is  discharged,  the  system  could  opt  
for  an  equivalent solution which is to call on Skype using 
the user laptop, So these two solutions could be considered 
as equivalent  since they enable the same goal in two 
definitely different ways to be achieved. Such devices 
classification was realized in previous research works; we 
can cite for example DogOnt, an ontology for amb ient 
intelligent environments [19]. 
Granularity or task decomposition 
The granularity of task decomposition must be chosen. Since 
the basic principle of task models is to decompose a complex 
task into smaller subtasks until reaching a basic task which 
could not be further decomposed, the level of decomposition 
at which we stop decomposing a task in an ambient 
environment must be determined. We propose to stop the 
decomposition at the level where services are invoked. 
75
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

User profile 
Ambient intelligent environments may be proactive systems. 
They  evolve  according  to  the  user  profile  in  order  to 
anticipate his/her expectations. So the model must integrate a 
part in which user habits and preferences are continuously 
stored. 
Dynamic model 
The proposed task model should be an evolving model in 
order to respond to the continuous changes of the context and 
to enable the representation of the learned and inferred tasks. 
In contrast to static classical task models, a task model 
adapted to AmI environments is dynamically changing with 
the  new  learned  knowledge.  It  evolves  once  the  system 
learns more about the user profile or new tasks. This task 
model should be able to model the reactive part of the tasks 
as well as the proactive one. 
Error-prone behavior 
Errors may occur during the interaction with the system so 
the model should have a special notation for either system or 
user errors and should be able to propose another alternative 
to overcome errors, for example by a system action or by 
proposing another alternative to the user. In ambient 
environments, error detection can go further since we have 
sensors enabling to detect any equipment’s failure to 
overcome. 
Task categorization 
An ambient task model should refer to the new proposed task 
categorization by offering a means to label tasks according to 
their categories. The usage of this taxonomy will be helpful 
in many cases. For example when we have concurrent tasks 
to be performed using the same device we wish to prioritize 
them. Namely deduced tasks would have the least priority 
since they are only based on the system deduction whereas 
programmed ones should have greater priority. 
 
Some of the existing task models offer facilities that 
should be offered by an ambient task model as well. For 
instance a model having a graphical structure is easy to use 
by both developers and end users because it highlights the 
main information and keeps out of sight complex 
information. A hierarchical structure could also be helpful to 
enable a clear identification of task steps and to reduce the 
complexity of the tasks that should be performed in order to 
reach a certain goal. 
The model  should  also  include  a  rich  set  of  
temporal operators to express any possible temporal relation 
between tasks. 
 
D. CONCLUSION AND FUTURE WORK 
Task modeling is an interdisciplinary research area which 
requires knowledge in computer and cognitive sciences and 
Human Computer Interaction (HCI). In cognitive sciences 
there is a big focus on how to characterize and identify 
relevant tasks. In computer science the focus is much more 
on finding notations suitable to represent tasks and their 
relationships more precisely. The last area involved is HCI 
since we try to study and to model a human in interaction 
with a system. 
In this paper, we have made an overview of the existing 
task models and we have studied their limitations when used 
to model ambient scenarios. 
Ambient tasks share some characteristics with classical 
tasks but they also have proper specificities. We have 
detailed  the  characteristics  of  tasks  in  AmI  environment. 
Since  the  tasks  may  invoke  specific  devices  in  specific 
places, this has led us to specify device-related and place 
related-tasks. 
We have proposed a new taxonomy of tasks adapted to 
ambient environments, based on two axes: the way tasks are 
launched and the way they are acquired. We have given 
precise   examples   for   each   possible   category   of   this 
taxonomy. 
From  the  previously  detailed  characteristics,  we  have 
deduced a set of requirements for a task model suited to tasks 
in an ambient environment. In summary such a model must: 
 
be  an  evolving  model  that  takes  into  account 
changes that may occur in the surrounding 
environment, 
 
have services as the lowest level of task 
decomposition, 
 
give special labels to each task to specify if the 
realization needs special devices or must take place 
in a special area, 
 
propose a type for each category of tasks (from the 
proposed taxonomy), 
 
explicitly represent possible errors and solutions, 
 
offer a large set of temporal operators. 
At this stage relevant characteristics of tasks in ambient 
environments are highlighted, new task categorization was 
defined and the requirements of a task model adapted to AmI 
environment are clearly identified. As a future work, we plan 
to develop this novel ambient task model that will enable an 
intelligent assistance to users in their daily activities. This 
task model will be exploited in real time in order to 
compare the tasks actually performed with the intended 
ones and to infer the next actions of the user and adapt 
system responses. We also plan  to  have  real  scale  
experimentations  in  an  equipped smart room at our Lab 
(LIMSI-CNRS) based on different scenarios. 
 
REFERENCES 
[1]   G. Riva, M. Lunghi, F. Vatalaro, and F. Davide, “Presence 2010: The 
Emergence of Ambient Intelligence”,  in: G. Riva, W.A IJsselsteijn 
(Eds.), Being There: Concepts, effects and measurement of user 
presence in synthetic environments, IOS Press, Amsterdam, 2003, pp. 
60-81. 
[2]    F. Paterno, “Task models in interactive software systems”, Handbook 
of Software Engineering and Knowledge Engineering, Vol 1, 2002, 
Publisher: World Scientific, pp. 1-19, ISBN: 981024973X, DOI: 
10.1002/9780470757079.ch4. 
[3]    E. Schulungbaum, “Model-based user interface software tools current 
state of declarative models”, in the Graphics, Visualization and 
Usability Center’ technical report in  Georgia institute of technology 
GIT-GVU-96-30 November 1996. 
[4]    J. Annett and  K.D.  Duncan , “Task  analysis and  training  design", 
Occupational Psychology, 41, 1967, pp.211–227. 
[5]    T.C. Ormerod, A. Shepherd, “Using Task Analysis for Information 
Requirements  Specification:  The  Sub-Goal  Template  (SGT) 
Method”, The Handbook of Task Analysis for Human-Computer 
Interaction. Mahwah, NJ.: Lawrence Erlbaum Associates, 2004, pp. 
347-365. 
[6]    W3C    group,“Task    Meta    Models”,    February    2010,    Online: 
http://www.w3.org/2005/Incubator/model-based-ui/wiki/Task_ 
Meta_Models. 
76
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

[7]    J.   Guerrero-Garca,   J.    Vanderdonckt, and   J.M.   Gonzalez-
Calleros. Towards a multi-user interaction meta-model, Working paper 
08/28, 2008. 
[8]    D. Diaper and N. A.Stanton, “The handbook of task analysis for 
human computer interaction”,2004 pp.67–116. 
[9]    S.Mills. “Contextualising design: Aspects of using usability context 
analysis and hierarchical task analysis for software design”, Journal 
of Behaviour & Information Technology archive, Vol 26, Issue 6, 
November 2007, pp 499-506. 
[10]   Gerrit C. van der Veer , Bert F. Lenting , Bas A.J. Bergevoet. “GTA: 
Groupware task analysis - modeling complexity”, Acta Psychologica, 
1996, vol 91, pp.297-322. 
[11]  P. Rigole, T.Clerckx, Y. Berbers, and K. Coninx. “Task driven 
automated 
component 
deployment 
for 
ambient 
intelligence 
environment”, Pervasive and Mobile Computing, vol 3, Issue 
3,2007, 
pp.276-299, 
ISSN: 
15741192, 
DOI: 
10.1016/j.pmcj.2007.01.001. 
[12]  J.  Coutaz,   F.   Paterno,  G.   Faconti, and L.   Nigay.   Comparison  
of approaches for specifying multimodal interactive systems,1994. 
[13] J-C. Tarby and M-F. Barthet, “The Diane+ method”. In J. 
Vanderdonckt, (Ed.), Computer-aided design of user interfaces,1996, 
pp. 95–120. Namur, Belgium: Presses Universitaires de Namur. 
[14]   F.  Moussa,  M.  Riahi,  C.  Kolski, and  M.  Moalla.  Interpreted  
petri nets used for human-machine dialogue specification,1st ed., 
vol. 9. IOS Press: Integrated Computer-Aided Engineering, 2002, 
pp.87–98. 
[15]  A.   Gaggioli,   “Optimal   experience   in   ambient   intelligence”,in 
Ambient 
Intelligence, 
IOS 
Press, 
2005, 
http://www.ambientintelligence.org. 
[16]  F. Sadri. “Ambient intelligence: A survey“. ACM: computer survey, 
Vol.43, 
Issue.4, 
Ocober 
2011, 
pp.36–66, 
DOI=10.1145/1978802.1978815,http://doi.acm.org/10.1145/1978802. 
1978815. 
[17] F.Sadri, “Ambient Intelligence for Care of the Elderly in Their 
Homes”. In Proceedings of the 2nd Workshop on Artificial 
Techniques for Ambient Intelligence (AITAmI), 2007,pp 62-67. 
[18] G. González, , A. Cecilio, B. Lopez, , and de la Rosa “Smart user 
models for ambient recommender systems“. In Ambient Intelligence 
and (Everyday) Life., University of Basque Country, San Sebastian, 
Spain, pp. 113-122. , 2005. 
[19]  D.Banino  and  F.CornoDogont-Ontology, “Modeling  for  Inteligent 
Domotic Environments” ,” Springer-Verlag Berlin Heidelberg 2008, 
pp. 790-803. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. 
Renewing passport task represented with the HTA task model (part1). 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 2. 
Renewing passport task represented with the HTA task model (part2). 
77
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3. 
Part from renewing passport task represented with the GTA task model. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 4. 
Part from renewing passport task represented with the CTT task model. 
78
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-235-6
AMBIENT 2012 : The Second International Conference on Ambient Computing, Applications, Services and Technologies

