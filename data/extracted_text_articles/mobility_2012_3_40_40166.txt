A Smarter Collaborative Mobile Learning Solution 
Rui Neves Madeira 
DSI, ESTSetúbal, 
Politechnic Institute of Setúbal, 
Campus do IPS, Setúbal, Portugal 
rui.madeira@estsetubal.ips.pt 
 
 
Abstract— Mobile learning has been receiving increased 
attention 
from 
diverse 
publications 
and 
events. 
The 
assimilation of mobile computing by education allows students 
to access education calmly, flexibly and seamlessly. This area 
of mobile services is getting wide attention by developers, 
strongly supported by the notion of context-aware. It permits 
that systems can take the location and position of a user, her 
interactions and even ‘smart’ objects into account to present 
more personalized services. This work presents the addition of 
a personalization module to PortableLab, a mobile learning 
solution that allows students to analyze several poor quality 
power supply occurrences. The developed system is a step 
forward in the development of mobile learning courses, 
presenting content adapted to each student. The paper 
presents the PortableLab system and how its integration of 
personalization is being done in order to have the right mobile 
interfaces tailored to the students. 
Keywords-personalization; smart interfaces; adaptation; 
android; m-learning 
I. 
 INTRODUCTION 
Nowadays, mobile devices are essential tools for 
peoples’ daily living. The assimilation of Ubiquitous 
Computing (Ubicomp) [1], strongly based on Mobile 
Computing, by education, marks an important step forward 
allowing students to access education calmly, flexibly, and 
seamlessly. The term Mobile Learning (M-Learning) is 
frequently used to refer to the use of handheld mobile 
devices that enable the learner to be ‘on the move’, providing 
anytime anywhere access for learning [2]. Moreover, lifelong 
learning is also a requirement of our era and mobile 
technologies can help meeting this challenge through the 
offer of access to “just-in-time knowledge”. 
M-learning is considered more innovative and student- 
centered than typical e-learning or classic distance education 
methods, representing an effective pedagogical method as 
any other conventional learning method [3, 4]. Furthermore, 
it is desired that a mobile learning system proactively reacts 
to individuals who use it, in a pervasive and persistent way.  
This human-centered vision demands for adaptive and 
personalized services also according to the context. 
Personalization must be a major component in m-learning 
systems, and generally in Ubicomp scenarios. M-learning 
combined, as much as possible, with other Ubicomp’s 
features can offer great innovation to the learning process, 
allowing an adaptive learning through personalization 
according to students’ preferences and learning capabilities. 
However, this personalization requirement needs more 
than wirelessly networked computers, sensors and mobile 
devices working together, as it relies implicitly on some kind 
of recommendation mechanism to directly serve the 
individual or the group. The offer of the right personalized 
content, interfaces and services is a challenge due to various 
issues such as diverse user interests and particular needs, 
heterogeneous environments and devices, dynamic user 
behavior and user privacy. The process of obtaining and 
choosing relevant content and interfaces for user interaction 
in m-learning systems is still a critical challenge, being a 
hard task in many applications from diverse domains [5]. 
This paper presents PortableLab [6], a mobile laboratory 
with several interfaces for power quality assessment, giving 
special attention to the addition of a personalization module, 
which is still in progress. The main goal of PortableLab is to 
improve students’ interest and motivation, making resources 
available as much as possible at any place and any time. This 
mobile remote laboratory is being used as a complement to 
the usual classroom laboratory type lessons. The developed 
system integrates a server with a data acquisition board and a 
central database to be accessed by the mobile application, 
programmed for the Google Android platform. The mobile 
application includes a collaborative learning module that it is 
essential for the growth of students. With this module, they 
can annotate content to be seen by teachers and colleagues, 
giving additional information about their understandings or 
helping others in the learning process. Furthermore, we are 
in the process of integrating a module responsible for 
adapting 
contents 
and 
functionalities 
to 
the 
level 
demonstrated by students and also according to the 
interactions stream, which is defined by screens and 
components clicks and functionalities executed by users. 
The paper is organized as follows. In Section II, we 
present a summary of related work. The third Section 
introduces the system’s architecture and the mobile 
application interfaces. Section IV adds the ideas about the 
personalization process and smart adaptation of PortableLab 
interfaces. Finally, in Section V, conclusions and future work 
are presented. 
II. 
RELATED WORK 
Nowadays, m-learning is a very active research field, 
with the development of many important and interesting 
projects. M-learning is rapidly growing from a set of 
research projects into worldwide deployment of services for 
64
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-229-5
MOBILITY 2012 : The Second International Conference on Mobile Services, Resources, and Users

classrooms, field trips, workplace training and informal 
education, among other areas.  
Frohberg et al. presented a deep and critical analysis of 
m-learning projects published before the end of 2007 [7], yet 
without important focus on personalization to tailor content 
and interfaces to the right student and even teacher. Major 
m-learning projects have been concentrating on the generic 
platforms development for m-learning and explored new 
supports for a kind of technology-mediated learning across 
locations and life transitions [8, 9]. 
Smaller projects are more directed to develop new 
pedagogical solutions for specific cases and to explore how 
learning on handheld mobile devices interweaves with 
personal interests and individual learning needs [10], which 
is much more of our interest. The SHAPE project [11] is one 
that can benefit from this approach in a next phase. It aims to 
enhancing the conceptual understanding of how to undertake 
design of computing in public spaces and to create exemplars 
for how new computing can be used to augment educational 
and social interaction in public environments. A part of the 
project is used to simulate an archaeology dig, where the aim 
is to enhance children’s collaborative learning in museums, 
through supporting sensorial experience and capturing 
embodied knowledge. It can be tailored to each user. 
UNIWAP [12] is another interesting m-learning project 
created to assist in teacher training. The project used 
relatively simple technologies, short message service (SMS) 
and digital pictures, to enable students to create digital 
portfolios   built   from   materials   created   in   the   field. 
Messaging was used to enable the trainees, who were widely 
distributed when training in different schools, to collaborate 
with each other and share their experiences. These projects 
are interesting because of the collaborative approach they 
include, presenting some personalization possibilities. 
Finally, Kay presents a “vision for the lifelong user 
model as a first class citizen, existing independently of any 
single application and controlled by the learner” [13]. She 
argues that it has a key role for a vision of personalized 
lifelong learning, enabling students/learners to supplement 
their own knowledge with readily accessible digital 
information based on information they have accessed or 
used. The paper also presents a good overview of Intelligent 
Tutoring Systems, which are important in terms of features 
related to adaptation. 
Although being possible to find m-learning projects using 
personalization or adaptation concepts, it is clear that none 
uses a general model based on web-services platform that 
integrates machine learning modules like the approach 
applied to PortableLab.   
III. 
PORTABLELAB 
This Section is used to present PortableLab, its 
architecture and technologies, also introducing the main 
screens in order to understand where personalization can be 
applied.  
A. Implementation of PortableLab 
The architecture of PortableLab can be seen as a typical 
client-server approach. The data acquisition is done by 
current and voltage sensors that send signals to a data 
acquisition board, which is connected to a server that runs 
signals processing and data management modules. These 
modules store the received data in the server’s main 
database. This database is updated every time new values are 
read, independently of the requests of the mobile clients. 
Apart from the existence of the server database (remote to 
the mobile user), the user can also choose to use a (local) 
database, located in the mobile learning application. To 
access the remote database, mobile devices need to use a 
PHP (PHP: Hypertext Preprocessor) API (Application 
Programming Interface) through HTTP (Hypertext Transfer 
Protocol) connections to obtain the necessary information for 
the reproduction of various types of charts, including 
harmonic content, voltage, and current charts. This API is 
also used to synchronize the information between the two 
databases, with the communication being made in a 
bidirectional way. The master database is always the remote 
database, since it will store the real-time measured data. Its 
content is copied to the mobile database every time the user 
chooses to synchronize both databases. The main 
programming language of the mobile application interfaces 
is Java, mostly using libraries provided by the Android SDK 
and the AChartEngine library that provides graphical 
functionalities to reproduce the various types of charts. A 
detailed description of the system and its technologies can be 
found in [6]. 
B. PortableLab’s Interfaces 
The Login screen where the user, a student or teacher, 
has to authenticate is the entrance of the application (Fig. 1, 
left image). After a successful login, the user finds the main 
screen where s/he can choose the visualization of charts with 
the most recent reads related with power quality (Fig. 1, right 
image at bottom). Another functionality included in this 
screen is the search of reads by date, time, or by both.  
 
   
 
Figure 1.  Mobile application’s initial screens (in Portuguese). 
The left image in Fig. 2 presents how the PortableLab 
application appears in a real device in terms of representation 
of charts, and the right image shows below the charts the 
comments/annotations made by students and teachers, 
65
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-229-5
MOBILITY 2012 : The Second International Conference on Mobile Services, Resources, and Users

illustrating the collaborative role of the tool. A student can 
use this functionality to annotate some results, put questions 
to teachers, or help other students. A teacher can use it to 
respond to students or to better explain an idea about the 
results. 
 
     
 
Figure 2.  Mobile application’s screens on a HTC device: charts 
visualization and list of recent annotations by users (in Portuguese). 
The application presents other functionalities, such as, 
the application’s operation mode configurations, the user 
personal data and the user authentication definitions. 
Depending   on   the   user   profile,   other   options   are 
available, such as the possibility of seeing a detailed list of 
users that have used the system. Only teachers have access to 
this screen. 
IV. 
INTEGRATION OF PERSONALIZATION 
This Section discusses how to apply personalization, 
smart adaptation, to Ubicomp and Mobile Computing 
systems, presenting a general solution. Moreover, it presents 
initial decisions regarding PortableLab’s personalization 
integration.  
A. A Web-based Personalization Model Solution  
An essential input for every intelligent adaptation or 
personalization technique is the user model [13]. However, it 
is important to define the information integration level since 
the focus should be on the integration of personal (from the 
user model) and contextual information (from the context) 
about the user in the current domain of application. 
Additionally, the adoption of ontology for smoothly 
modeling the domain, the context and the personalization 
process can contribute to tailor the right information, 
services or interfaces to users, thus, facilitating and enriching 
the HCI (Human-Computer Interaction) process. Ontologies 
can also be very important for the reuse of parts of the user 
model in a ubiquitous environment. This requires protocols 
for ontology understood by applications and/or a mechanism 
for mapping different ontologies within them [13]. At the 
moment, we are working on the ontology definition as we 
consider it very important to obtain the best personalization 
model. We are also developing the user and context models 
that are part of the latter.  
A partial taxonomy of what we consider the starting point 
for user modeling integrates: demographics, preferences, 
roles, and knowledge. In terms of intelligent adaptation of 
the interfaces and content, it will work much better if besides 
the usual user profile we consider the location, both physical 
and semantic (e.g., at home), the situation (e.g., alone, in 
family or lunching) and the emotions felt by the user 
(initially, s/he can choose from a list), connecting to the 
context model. Context awareness plays a major role in 
Ubicomp, being tightly coupled with user modeling [14]. 
Moreover, an interactions stream (set of interactions between 
the user and the application) is used to know the “degree of 
empathy” between the user and the system/application. 
So, the personalization model is based on a generic 
configuration data model that is mainly composed of 
Personalization Options, Parameters and Resources (see Fig. 
3). Data concerning direct user interaction with the 
application, such as clicks, time spent on menus, and 
numbers of log-in operations are considered as Resource 
data. Parameters are usually defined by mathematical 
expressions based on the Resources (seen as variables) and 
used to characterize the different options for each desired 
personalization (see Table 1 for an example). This 
configuration model is also a part of the general 
personalization model, being closely connected to the user 
and context sub-models. 
 
 
Figure 3.  The personalization configuration model. 
When interacting with an application, users do not 
behave in a uniform way. Different users may present 
different interests, different knowledge and different 
capabilities to interact with the system. Therefore, it is 
important to assign users to categories that represent them to 
facilitate the personalization process. It is possible to use the 
interaction stream data, in conjunction with user and context 
(if considered) data, in a clustering operation with a defined 
number of clusters, each one basically representing a user 
category. The result of this operation is a set of categories 
(clusters) where each one contains a collection of users 
(points). After the clustering operation, a recommendation 
service checks which personalization options are associated 
to the user categories in order to link the options to the users. 
Moreover, we are still working on the use of Recommender 
systems (RS) to improve personalization, adding levels of 
detail to the machine learning (ML) algorithm.  
66
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-229-5
MOBILITY 2012 : The Second International Conference on Mobile Services, Resources, and Users

RS can be seen as mediators of the user experience in the 
digital world and are increasingly helpful in doing the same 
in the physical world [15]. The goal of a common RS is to 
proactively suggest and prioritize items the user may be 
interested in, taking into account the context at the moment 
of the interaction, and predicting the user behavior [16]. The 
application of context to RS can be tightly integrated into the 
recommendation algorithm, or used independently to 
improve its recommendations. Based on the general 
personalization model, integrating user, context, application 
and domain, and configurations sub-models, candidate items 
such as interface customization and learning information are 
selected to feed up the ML algorithm, which we propose 
with a composition of four main sub-modules (Fig. 4).  
 
 
Figure 4.  Architecture of modules involving the recommendation process. 
Being based on RS, the personalization module needs a 
ratings database, also based on feedback provided by users 
and on their interactions stream. In an m-learning system, 
based on Ubicomp characteristics, the goal is to have a 
system that is as unobtrusive as possible. So, how can the 
system gather the ratings from users, requiring as little 
interaction as possible? The rating can be explicit when in 
specific moments the system asks for a simple rating of an 
interface or some piece of information. More interesting are 
the implicit ratings, which can be inferred from the 
interactions of the user with the system. It can be based on 
the time spent in front of the display, analyzing face 
expressions, or more simply on number of screens and 
components clicks and functionalities executed by users. 
Furthermore, 
we 
intend 
to 
have 
this 
general 
personalization model being applied to different applications, 
systems, even if from different domains. The model is 
deployed as a framework, a web-services platform – 
personaX - designed to provide orientation and tools to help 
developers 
in 
the 
implementation 
of 
a 
standard 
personalization. On the other side, users will be less bothered 
when starting to use a new system/app. This one already 
might know something about s/he. User interactions within 
one system might be useful to help personalizing another 
one.  
The core of personaX (Fig. 5) is working, being used in 
the form of personalization APIs and configuration modules, 
which give the developer a high-level of implementation. 
The personalization algorithms are already implemented and 
the developer only needs to apply the model according to 
specific project's needs.  
 
 
Figure 5.  personaX: a web-services platform for personalizatin. 
B. PortableLab’s Initial Personalization Decisions  
Furthermore, we have to decide about the user data that 
can and should be captured and included as a basis for the 
personalization. To accomplish that capture, which are the 
potential sources for user modeling information? 
The data can be collected from, for instance: life logging 
sensors, personal devices and in the cloud, besides the 
specific Information System of the University using 
PortableLab. With more sensors, such as GPS, camera, and 
gyroscope, embedded in mobile devices, it is possible to 
record the activities and behavior of a user. Additionally, the 
usage of wearable sensors enables the capture of users’ 
physical and physiological data and, this way, the emotional 
model [15] can be predicted and not only stated by the user. 
The captured sensor data can be used to represent a situation 
event and extract patterns from the activities data logs. In 
relation to context, the environment conditions can be easily 
inferred with the usage of sensors, while the location 
information can be known using GPS and Wi-Fi 
technologies. 
 
TABLE I.  
EXAMPLE OF PERSONALIZATION OPTIONS FOR 
PORTABLELAB 
Personal
ization 
Personalization 
Options 
Parameters 
Resources 
Initial 
screen 
- Communicator 
- Solitary 
Communication 
profile: 
- numberPosts
/numberVisu
al 
 
-numberPosts 
-numberVisual 
 
67
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-229-5
MOBILITY 2012 : The Second International Conference on Mobile Services, Resources, and Users

V. 
CONCLUSIONS AND FUTURE WORK 
The use of m-learning tools, if correctly contextualized 
and built, can benefit the traditional learning methodologies 
and methods. However, these m-learning applications should 
integrate a personalization approach to have better chances 
of being really efficient working as complementary learning 
tools. This work focuses on a proposal for facilitating the 
implementation of personalized m-learning systems.  
PortableLab is being tested as a first m-learning 
prototype with an explicit personalization module. The 
research is studying how the personalization model can be 
defined, distributed and executed among different devices. 
These personalization features are currently being defined in 
order to choose the best ML algorithms, along with the 
definition of the final user and context models. The 
applicability and maturity of the proposal should be shown 
through its usage in the development of the prototype. 
ACKNOWLEDGMENT 
I would like to thank my advisor Prof. Dr. Nuno Correia 
for supporting me on the personalization studies, Marco 
Guerra and Cláudia Francisco for previous work on the 
PortableLab development and, finally, André Vieira for 
debating ideas about the personalization model. 
REFERENCES 
[1] M. Weiser, The Computer for the 21st Century,  Scientific American, 
vol. 265, no. 3, Sept. 1991, pp. 66-75. 
[2] S. Price,  Ubiquitous  computing:  digital  augmentation  and learning, 
in Pachler, N. (Ed.), M-learning: towards a research agenda,  WLE   
Centre occasional papers in work-based learning 1, London: Institute 
of Education, 2007. 
[3] C. Romero, S. Ventura, and P. Bra, Using Mobile and Web- based 
Computerized Tests to Evaluate  University Students, Computer  
Applications in Engineering Education Journal, vol. 9999, Published 
online in Wiley InterScience, 2009. 
[4] R.N. Madeira, V.F. Pires, O.P. Dias, and J.F. Martins, Development 
of a Mobile Learning Framework for an Analog Electronics   Course,   
Proc. Int. Conf. IEEE Education Engineering (EDUCON), Madrid, 
Spain, 2010, pp. 561 – 567. 
[5] 
M. Gorgoglione, C. Palmisano, and A. Tuzhilin, Personalization in 
context: Does context matter when building personalized customer 
models?. In ICDM ’06 , pp. 222–231, 2006. 
[6] 
M.A. Guerra, C.M. Francisco, and R.N. Madeira, PortableLab: 
Implementation of a mobile  remote laboratory for the Android 
platform, In  Global  Engineering Education Conference (EDUCON), 
2011 IEEE, pp.983-989, April 2011. 
[7] 
D. Frohberg, C. Göth, and  G. Schwabe, Mobile Learning projects – a 
critical analysis of the state of the art. Journal of Computer Assisted 
Learning, vol. 25, no. 2009, pp. 307–331. 
[8] 
C. H. Muntean, and G. Muntean, Open Corpus Architecture for 
Personalised Ubiquitous E-learning.  Personal Ubiquitous Computing 
journal, vol. 13, no. 3,  2009, pp. 197-205. 
[9] 
M. Sharples, The Design of Personal Mobile Technologies for 
Lifelong Learning, Computers and Education, vol. 34, no. 3,2000, pp. 
177-193. 
[10] A. Hamid, and S. Hafizah, WE-learning – Electronic and Mobile  
Learning  Environment,  The  Public  Institutions  of Higher Learning 
R&D Exposition, Kuala Lumpur, Malaysia, 2003. 
[11] T. Hall, and L. Bannon, Designing ubiquitous  computing to enhance 
children’s interactions in  museums. Proceedings of IDC 2005, 
Boulder, Colorado, 2005. 
[12] P. Seppälä, and H. Alamäki, Mobile learning in teacher training,  
Journal  of  Computer  Assisted  Learning,  No.  19, 2003, pp. 330-
335. 
[13] J. Kay, Lifelong Learner Modeling for Lifelong Personalized 
Pervasive Learning. IEEE Trans. Learn. Technol. 1, 4, 2008, pp. 215-
228. 
[14] A. Jameson, and A. Kruger, Preface to the Special Issue on User 
Modeling in Ubiquitous Computing. User Modeling and User-
Adapted Interaction 15, 3-4 (August 2005), pp. 193-195. 
[15] McDonald D.W.: Ubiquitous Recommendation Systems. IEEE 
Computer, pp 111-112, 2003. 
[16] Palmisano C., Tuzhilin A., Gorgoglione M.: Using context to improve 
predictive modeling of customers in personalization applications. In    
IEEE Trans. On Knowl. and Data Engineering, 20(11), pp. 535–1549, 
2008.  
[17] González G., López B., Rosa J.L.: Managing  Emotions in Smart  
User  Models  for  Recommender   Systems.  In  Proc ICEIS’04, pp. 
187-194, 2004. 
 
 
 
68
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-229-5
MOBILITY 2012 : The Second International Conference on Mobile Services, Resources, and Users

