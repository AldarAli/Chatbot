Smart Bin for Incompatible Waste Items
Arnab Sinha
INRIA, Rennes-Bretagne Atlantique,
Campus Universitaire de Beaulieu
35042 Rennes Cedex, France
arnab.sinha@inria.fr
Paul Couderc
INRIA, Rennes-Bretagne Atlantique,
Campus Universitaire de Beaulieu
35042 Rennes Cedex, France
paul.couderc@inria.fr
Abstract—In this paper, we present a generalized ontology
based system to identify the necessary properties of products
and objects and then make inferences of possible incompatibil-
ities between them. This is designed in the context of waste
management, where considerable volume of waste is present
collectively and there may be chances of hazard or reduces the
value of the recyclable waste. These inferences for the group of
objects are performed based on the knowledge available locally
without looking up from any external sources. Since, the global
identiﬁcation of objects is avoided, preservation of privacy is
ensured, which is a concern in the ﬁeld of pervasive computing.
Our model can have applications in various domains. We have
demonstrated it’s application in the domain of waste management
and discussed about other possible domains.
Keywords-Radio-frequency identiﬁcation (RFID); incompatible;
ontology; OWL; waste
I. INTRODUCTION
Today, efﬁcient management and handling of waste are of
great importance. The European Union (EU) reports handling
around 3 billion tonnes of waste (and still counting) each year
among which, around 90 million tonnes are hazardous [1]. So
managing the waste i.e. treating and disposing them efﬁciently
causing least possible harm to the environment is becoming
difﬁcult. Waste prevention, recycling/reuse and disposal are the
three principles laid down by the European Union’s approach
to waste management. For example, products like packaging
waste, batteries, electrical and electronic wastes require special
attention for recycling and reuse. Some of these items can be
hazardous to be put into a waste bin containing other items.
Sorting is performed for efﬁcient recycling and reuse of
the waste materials. Different waste items contain recyclable
and reusable materials having economic value. Hence, sorting
them at the earliest has advantages. Moreover, it also ensures
the quality of the collected waste with no contamination. It
also avoids potential hazards. Transporting them to the sorting
facilities could be another overhead to cost if not performed
early. Lastly they might end up as landﬁlls, if left undetected.
Despite that the early sorting could be beneﬁcial, we need
to reason out for the sorting process. Also, care should taken
about any possibilities of hazards during this process. The
model described in this paper can be used to perform such
reasoning.
The rest of the paper is organized as follows: Section 2
presents the background. Section 3 describes the principle for
inferring hazardous incompatibilities and how the system is
designed to use the principle in Section 4. A demonstration of
our Smart Bin and other possible applications are presented
in Section 5. Finally, we discuss the complexity of our system
before concluding in Section 6 and 7, respectively.
II. BACKGROUND
Lately, there has been considerable efforts to increase the
cost effectiveness and efﬁciency of waste management system
with the advancement of technology. As described above, the
sorting process can be handled efﬁciently and smartly by using
information technologies.
Radio-frequency identiﬁcation (RFID) is currently an up-
coming and rapidly growing mobile technology for the pur-
pose of uniquely identifying and tracking an object attached
with a RFID tag. Some RFID tags can be read from several
meters away and could be beyond the line of sight. They can
also be bulk read and costs from a few cents to a few dollars
[3], [4]. These tags are now widely used in various ﬁelds
like asset tracking, manufacturing, supply chain management,
retailing, payment systems, security and access control etc [5].
RFID’s have also been considered to be used for better waste
management. In RFID and sensor based real-time Automatic
Waste Identity, Weight and Stolen Bins Identiﬁcation System
(WIWSBIS), the authors have proposed the use of RFID
tags in an environmental context [3]. They have used RFID
tags to identify the waste bins, uniquely and remotely. RFID
supported waste management and load cell sensor technology
are used to automate the billing for customers on pay-per-
use basis. While this is a paper where all the information
processing has been done at the bin level, we have not come
across any work that makes inferences at the item level i.e.
based on the contents.
The trend of pervasive computing is transforming more
and more everyday used objects smarter with embedded
technology and connectivity. Cooperative Artefacts is a smart
container system where the authors have proposed that the
chemical containers are able to assess their situation in the
world, without requiring any supporting infrastructure in the
environment [10], [11]. The movable artifacts can make rule-
based inference based on its embedded domain knowledge
and perceptual intelligence. The knowledge is stored in a
distributed way across the artefacts. So, communication with
the artefacts in proximity might be required frequently to
obtain the necessary information before making inferences.
40
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

The goal of pervasive computing, which combines current
network technologies with wireless computing, voice recogni-
tion, Internet capability and artiﬁcial intelligence, is to create
an environment where the connectivity of devices is embedded
in such a way that the connectivity is unobtrusive and always
available.
Internet of things (IoT) is a concept where smart devices
interact and communicate with other devices, objects, environ-
ment and infrastructures. The authors proposes an application
for pharmaceutical system for detection of interaction and im-
proper administration of drugs to patients [17]. The drugs are
NFC tagged or bar coded for identiﬁcation and matching with
the remote information system. to detect the suitability with
patient’s health condition. It works within the IoT paradigm.
In our work, we have proposed an ontology based knowl-
edgebase, which is used to describe the properties and make
inferences about the incompatibilities among objects. This
knowledgebase is local and powerful enough enabling au-
tonomous decisions. Our objects are passive in nature due to
the type of RFIDs used. By contrast, [10], [11] proposes active
objects by use of sensors.
III. HAZARD DETECTION PRINCIPLE
Pervasive computing is the growing trend of progressing
beyond the idea of personal computing. Objects used everyday
have embedded technologies attached, to perform smarter
activities collectively. We have proposed to self describe
waste items with their properties using RFID tags. Based on
these properties, incompatibilities could be detected among
a collection of items present locally. In this section, we
discuss its underlying principle. For the purpose we begin with
organizing the waste domain in a speciﬁc manner for making
such inferences.
A. Describing waste items
The waste domain can be categorized based on their var-
ious hazardous properties. There are standards that speciﬁes
the properties of waste materials and categorizes them [2].
Although, discussion on such standards is outside the scope
of this paper, however we utilize its idea for categorization
and use few examples of hazards related to some of these
categories.
Some examples of hazardous properties for this domain are
spark, explosion, toxic fumes etc and can categorize based on
them. As discussed in the previous section, we are interested to
infer incompatibilities. So, it is essential to pick the properties
only that are relevant for interactions with other items.
Figure 1 is the pictorial representation of the three condi-
tions under which these properties can act in hazardous ways.
They are summarized as below:
• under effect of: the condition(s) which holds the proper-
ties that can affect the category
• can cause: this condition enlists the properties that can
be caused by the category
• in presence of: this holds the external conditions under
which the can cause properties occur
Fig. 1.
Conditions to describe a category
In the subsequent sections, we will use the same pictorial
representation to describe the waste categories or items in our
examples.
Let us take some scenarios of interactions between cate-
gories. First, let’s take an example of simple incompatibility
between a pair of them. Suppose a category A can cause an
incidence (for instance say hazardous property X) that affects
a second category B. Hence, an incompatibility exists between
the categories A and B. Our second example is a slightly
more complex and realistic than the previous example. If the
category A causes the incidence (i.e. X) only in presence of
an external condition (let’s name as C), makes it an important
augmentation to the scenario. Hence, the categories does not
pose to be incompatible if the condition C is unfavorable.
Both of these scenarios consider the incompatibility between
different categories where the hazardous property affects each
other. However, there are properties like explosion for exam-
ple, which have hazardous effect by itself. The situation can
be represented as a category that causes a hazardous property
that affects itself that may depend on the external condition.
B. Inferring incompatibilities
As described above, we can self describe waste items
accordingly. When a collection of these items is present locally
we can infer incompatibilities based on the discussed scenar-
ios. Sometimes objects are located remotely and communicate
within themselves and other knowledgebase using network
infrastructure like the Internet to make decisions. Such an
idea is called Internet of things (IoT) in the ﬁeld of pervasive
computing. Our approach in this paper proposes making the
required information that describes waste domain available
locally for inferences. Such collective inferences could be
made without using network for communication. We prefer
to use the name for such a situation as Intranet of Things
(InoT) as it does not involve any devices located remotely
and differentiate to avoid confusion.
In III-A, we discussed the interaction scenarios between
pairs of categories based on hazardous properties. Multiple
such categories can constitute an InoT. The graph in Figure
2 represents an example of InoT formed. The shaded nodes
represent some categories. They are connected by an edge if
they interact. The dotted edges represent interactions which
are unfavorable due to external conditions. One of the external
conditions were high temperature at the instance this snapshot
was drawn. Hence, the dotted edge encircled in the ﬁgure
representing an interaction under low temperature becomes
unfavorable. The ﬁrm edges represents favorable interactions,
41
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

which could be either the ﬁrst or second scenario described in
III-A. The shaded node with a self-loop represents the last
scenario of III-A, is favorable in this case as the external
condition is satisﬁed.
Fig. 2.
InoT formed
Finally, if a waste item belongs to one or more categories, it
would possess all their conditions. Hence, they could be used
for collective inferences also.
IV. SYSTEM DESIGN
In this section, we describe designing the system for making
inferences locally. It essentially means that all the information
required are available without referring to remote database
or knowledgebase. An alternative could be to distribute the
information partially among the waste items and a local knowl-
edgebase. The waste items are identiﬁed by the system before
inferring on incompatibilities. We have chosen a commonly
used architecture for our system, as shown in Figure 3 below.
Fig. 3.
Commonly used Architecture for Systems
We describe the components brieﬂy.
• Input: It is that point in the system where the waste items
are identiﬁed and added.
• Knowledge Base (KB): This contains all the required in-
formation to identify the items along with their properties.
It also updates its knowledge regarding the presence of
items that are being added to the system incrementally.
• Inference/Rules: This component of the model uses the
KB to reason out about the possible incompatibilities and
hazards. The inferences are added back to the KB.
• Output: It sends out notiﬁcations to communicate about
alerts and warnings to the users of the system.
Next we elaborate on how the system works based on the
architecture and uses the principle discussed earlier in Section
III.
A. Input
New waste items are added to the system. They are afﬁxed
with RFID tags only for the purpose of identiﬁcation by the
system, which contains a RFID reader for scanning. The tags
do not contain any such data that has privacy concerns. Mostly
they contain the category information.
B. Knowledge Base (KB)
Machines can be made to perform reasoning effectively
provided it has the necessary knowledge, which is machine
readable. In cases of large domain knowledge with lots of
factors inﬂuencing the reasoning, using machines should have
extra beneﬁts. Using ontologies are a very good way to serve
the purpose [7]. An ontology consists of common set of
vocabulary as shared information of a domain. It includes
machine-interpretable deﬁnitions of basic concepts in the
domain and relations among them [8]. Lately, the develop-
ment of ontologies has begun to ﬁnd many uses outside the
Artiﬁcial-Intelligence laboratories. They are being commonly
used on the World-Wide Web and ﬁnds applications for sharing
information widely in the ﬁeld of medicine.
The Web Ontology Language (OWL) is a World Wide
Web Consortium (W3C) Recommendation for representing
ontologies on the Semantic Web [6]. Presently, there are a lot
of ontology editors for OWL. Among them Prot´eg´e is a Java
based Open Source ontology editor. We used Prot´eg´e since we
found it to be an efﬁcient and user-friendly tool to prototype
our ontology rapidly. During the ontology development phase
we visualized the graphical representation of our OWL ontol-
ogy on the editor. The comprehensive Java API provided by
Prot´eg´e [12] was also an added advantage while developing
our stand-alone application in the later phase.
We have used an ontology based approach for the KB for
the reasons stated above. The properties causing incompati-
bilities must be described in the ontology. Apart from these,
other information like conditions in which the categories are
incompatible, possible hazards of incompatibility etc are also
stored in the ontology.
Due to the advantage for describing a domain easily, we
have used ontology based approach for describing the waste
domain. The ontology contains description of various cat-
egories with the conditions for hazardous properties. This
constitutes as the initial knowledgebase of the system, which
updates itself as new items are added.
42
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

For detailed demonstration, we have used a sample OWL
ontology using few hazardous properties, conditions including
an external condition to demonstrate the inference of incom-
patibilities between objects.
We start with building our KB using Object properties
of OWL ontology that would represent the conditions. As
mentioned earlier, a category is described to have various
properties under three different conditions. Mapping and com-
paring Figures 1 and 4 would make the idea very clear.
Fig. 4.
Object properties as mapped in OWL
Next we deﬁne two Data properties in the ontology namely
hasStatus and hasTemperature. While the ﬁrst one can store
values of type boolean and acts as a ﬂag, the other is used to
hold integer data as in Figure 5. They are used to express the
external conditions as explained subsequently.
Fig. 5.
Data property hasStatus
The left side of Figure 6 shows the representation of a
domain knowledge using hierarchy of classes in ontology. The
class Waste is the topmost level in our ontology structure and
hence, all its subclasses would represent information of this
domain. Following are the description of its subclasses and
the information it holds:
• Properties list the various instances representing the
hazardous properties of the domain. It also includes some
external ones like temperature, pressure etc.
• Categories represent the classiﬁcations of the waste do-
main. Each of these categories are represented as classes
in ontology along with the description of conditions.
The RFID tagged waste items added contains reference
to these categories. They are added to the system as
individuals of the referred subclasses.
• Hazardous contain all the incompatible or hazardous
items. It’s subclass selfHazardous holds items that could
pose hazardous by itself. They would be subsumed by
the upper class. The user can glance through all the
incompatible objects added to the ontology.
The right side of Figure 6 displays subclass Properties
containing the list of seven properties that are possible with
this domain. Examples of OWL individuals such as Explosion,
Flame etc. are some possible properties. None represents a
special kind of property, which indicates no conditions at all.
Fig. 6.
Sample Ontology with Classes and Conditions
The Figure 7, we have listed examples of ﬁve different
types of categories named A, B, C, D, E subclassed under
Categories as examples. It should be noted that each of these
ﬁve classes represent the types of categories possible in the
domain described with the conditions of hazardous properties.
They are described in form of relationships with individuals
of the class conditions using the OWL object properties.
Fig. 7.
Describing Categories
In Figure 8, shows an example to represent temperature as
an external condition for incompatibility of objects. In this
example, we have three individuals of the class Temperature
as LowTemp, ModerateTemp and HighTemp. They are linked
to the two data properties, hasStatus and hasTemperature.
The hasTemperature property basically deﬁnes the temperature
ranges it represents. The hasStatus property can be set to
true for any one of the instances which would indicate that
external temperature around the system. Hence, from this way
of representation we can indicate discretized levels of some
external conditions and the one prevailing around the system.
43
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

Fig. 8.
External Conditions
The class Hazardous consists of a subclass SelfHazardous.
SelfHazardous contains all the items that are self hazardous
which would be subsumed by the upper class as well. Addi-
tionally the class Hazardous holds all pairs of incompatible
items that are inferred hazardous. In ﬁg 9, we see there
are currently one pair of item c1, d1 that exhibit possible
incompatibility under an external condition of HighTemp.
Fig. 9.
Dashboard
C. Reasoning/Rules
Given the ontology, which acts as a KB in our architecture,
we are all set with having all the necessary information at hand
to reason out something useful i.e. the objective of inferring
incompatibility or hazards. In the recent years, rule languages
have been added on as a layer combined with ontology in
order to enhance the reasoning capabilities. Semantic web Rule
Language (SWRL) is used to write rules expressed in terms of
OWL concepts and for reasoning about OWL individuals. It
provides a deductive reasoning speciﬁcation that can be used
for inferring new knowledge from the Knowledge base.
We have used two SWRL rules to make selection of the
proper objects and classify them as members of speciﬁc class.
The ﬁrst rule is used to classify all the item pairs that may have
incompatibility considering if the the external conditions are
favorable. In that case they asserted as members of the class
Fig. 10.
SWRL Rules
Hazardous. The ﬁrst rule in ﬁg 10 performs this classiﬁcation.
The second rule veriﬁes if an item is self hazardous with
favorable external condition. If it’s so, the item is asserted
as member of class SelfHazardous.
V. APPLICATIONS
We have proposed the system using ontology as it’s local
knowledgebase to infer incompatibilities on the principle of
InoT. We think that it can be used to infer incompatibilities
among objects in various domains. “Bin That Thinks” is a
project, that aims to propose an intelligent waste management
solution based on item level identiﬁcation. The goals are to
improve recycling efﬁciency, reducing waste processing cost
and avoiding hazardous situations [16]. Though we have not
assessed for the ﬁnancial beneﬁts ﬁguratively for using our
system, our approach hints at the beneﬁts qualitatively. Sorting
wastes at the earliest retains the purity of the recyclables. This
reduces the cost of sorting at a later stage in processing plants
by waste management companies like Veolia, which is usually
passed on to the consumers as penalties on the cities.
Fig. 11.
Smart Bin
We have developed an application for the domain of waste
management using the system described in this paper. It can
be used to make inferences for incompatibilities and hazards
among the waste items present collectively at a place. They
may be situated inside a bin or a waste collecting vehicle
or at the processing plant. For very complex domains like
waste management, they are sometimes veriﬁed at every step
in the processing chain. Alternatively, when the processing is
performed at a single point, we consider the acceptance of
44
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

error up to some limit. Fig 11 shows the smart bin developed
that can identify the RFID tagged wastes and make inferences
from its contents. In ﬁg 12 below shows a screenshot of our
application. It shows the instance when an incompatibility is
detected with two items present locally in the bin and the last
item that was scanned. It also displays the inferred reasoning.
Fig. 12.
Hazard Detection Application for Waste
Another domain of application for our model can be in the
ﬁeld of medicine. Storing medicines together can sometimes
be potentially dangerous. It might also lead to confusion and
take wrong medications. The elderly people and children are
more vulnerable to such mistakes. Also some medicines might
react with each other (’interact’) if taken together and might
cause serious problems.
VI. COMPLEXITY
The OWL from the W3C has capabilities to describe con-
cept from very simple to quite complex ones. It provides with
a variety of features to express some domain of interest. OWL
ontology has has three different types of sub-languages namely
OWL-Lite, OWL-DL and OWL-Full. These sub-languages
differ in the amount of features incorporated in it and hence,
have varying degrees of expressiveness. W3C provides a
description of the features to be used for OWL-Lite compared
to OWL-DL or OWL-Full [6]. The proﬁle for our model gets
disqualiﬁed from being OWL-Lite as we have used OWL
individuals to occur in descriptions or class axioms i.e. by
using the value constraint owl:hasValue [6], [13], [15]. The
OWl-Lite has computational complexity of polynomial order
whereas the rest grows exponentially [14]. So, it essentially
means that the computational complexity of our model can be
calculated to grow exponentially with increase in the ontology
size. This is important in the context of pervasive computing
as the setup would be functioning on embedded computers,
which have limited memory and computational capabilities.
VII. CONCLUSION
In this paper, we demonstrated a system to infer the in-
compatibilities between collective waste items. As discussed
earlier, the model can have applications in various domains.
Presently, we have designed to make inferences particularly
for the domain of waste management. In the context of waste
management, the originality of our approach consists in repre-
sentation and processing of knowledge, and make inferences
at the item level, rather than container or bin level. And
more importantly, this can be done locally without referring to
external knowledge base. Privacy is also maintained in spite of
using RFID tags containing category information of the item
itself. This is a concern for pervasive computing applications.
Our future direction would be to ﬁne-tune the ontology further,
so that the complexity remains in the order of polynomial time.
Also, we are interested to keep greater amount of distributed
information to make our inferences better, precise and more
scalable. An approach would be putting more semantic data
into the RFID tags to describe the item as we have proposed in
[18]. It would make the system more distributed, thus reducing
the information in the knowledgebase and also the dependency
on it.
REFERENCES
[1] “The
EUs
approach
to
waste
management”,
available:
http://ec.europa.eu/environment/waste/index.htm [accessed 16 January
2013, 20h19].
[2] “European
waste
catalogue
and
hazardous
waste
list”,
available:
www.environ.ie/en/Publications/Environment/Waste/WEEE/ [accessed 14
March 2013, 10h28].
[3] B. Chowdhury and M.U. Chowdhury, “RFID-based real-time smart waste
management system”, Telecommunication Networks and Applications
Conference, 2007. ATNAC 2007. Australasian, 2-5 Dec. 2007, pp.175-
180.
[4] S. A. Weis, “RFID (Radio Frequency Identiﬁcation): Principles and
Applications”, MIT CSAIL, 2007.
[5] Association
for
Automatic
Identiﬁcation
and
Mobility,
“What
is
Radio-frequency
identiﬁcation
(RFID)?”,
available:
http://www.aimglobal.org/?page=rﬁd faq [accessed 16 January 2013,
22h16].
[6] World Wide Web Consortium (W3C), “OWL Web Ontology Language
Overview”, available: http://www.w3.org/TR/owl-features/ [accessed 16
January 2013, 22h25].
[7] C. Mathieu, E.S. Eltaher, P. Sarathy, and S. Gilles, “OWL Ontology
for Solar UV Exposure and Human Health”, Advances in Semantic
Computing, Eds. Joshi, Boley & Akerkar, Vol. 2, 2010, pp 32-51.
[8] T. R. Gruber, “A Translation Approach to Protable Ontology Speciﬁca-
tions”, Knowledge Acquisition, 5(2), 1993, pp. 199-220.
[9] N. F. Noy and D. L. Mcguinness, “Ontology Development 101: A Guide
to Creating Your First Ontology”, Technical Report KSL-01-05, Stanford
Knowledge Systems Laboratory, 2001.
[10] M. Strohbach, G. Kortuem, and H. Gellersen, “Cooperative artefacts: a
framework for embedding knowledge in real world objects”, Smart Object
Systems Workshop, UbiComp 2005.
[11] M. Strohbach et al., “Cooperative Artefacts: Assessing Real World
Situations with Embedded Technology”, Proc. Int’l Conf. Ubiquitous
Computing (Ubicomp 04), Springer, 2004, pp. 250267.
[12] H. Knublauch et al., “The Prot´eg´e OWL Experience”, Proc. OWL:
Experiences and Directions Workshop 2005.
[13] World Wide Web Consortium (W3C), “OWL Web Ontology Language
Reference”, available: http://www.w3.org/TR/owl-ref/ [accessed 16 Jan-
uary 2013, 22h10].
[14] C. Maria Keet and M. Rodrguez, “Toward using bio-ontologies in the
Semantic Web: trade-offs between ontology languages”, Proc. of the
AAAI Workshop on Semantic e-Science (SeS 2007), 2007, pp 65-68.
[15] F. Baader, “The description logic handbook: theory, implementation, and
applications”, Cambridge Univ Pr, 2003, pp. 479.
[16] Bin That Thinks, available: http://binthatthink.inria.fr/ [accessed 16
January 2013, 20h35].
[17] A.J. Jara, A.F. Alcolea, M.A. Zamora, A.F.G. Skarmeta, and M. Alsaedy,
”Drugs interaction checker based on IoT,” Internet of Things (IOT), Nov.
29 2010-Dec. 1 2010, pp 1-8, doi: 10.1109/IOT.2010.5678458.
[18] A. Sinha and P. Couderc,“Using OWL Ontologies for Selective Waste
Sorting and Recycling”, 9th OWL: Experiences and Directions Workshop,
OWLED, 2012.
45
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-257-8
ICAS 2013 : The Ninth International Conference on Autonomic and Autonomous Systems

