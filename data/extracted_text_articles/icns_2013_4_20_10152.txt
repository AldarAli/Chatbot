A Reconﬁguration Trial on the Platform of Allied Information for Wireless
Converged Networks
Jie Zeng, Xin Su, Yuan You, Lili Liu, and Xibin Xu
Tsinghua National Laboratory for Information Science and Technology
Research Institute of Information Technology, Tsinghua University
Beijing, China
e-mail: zengjie@tsinghua.edu.cn
Abstract—Platform of Allied Information (PAI) promotes
persistent innovation and application of the wireless technolo-
gies among different institutes, based on an open, safe and
controllable network architecture. The platform architecture,
uniﬁed interface, security mechanism, and reconﬁguration are
designed to achieve the convergence of various wireless experi-
mental resources. In this paper, the reconﬁguration mechanism
is designed and a reconﬁguration trial is implemented based
on the Platform of Allied Information, to verify the ability of
integrating experimental resources in the related units.
Keywords-wireless communication; reconﬁguration; conver-
gence; PAI.
I. INTRODUCTION
In recent years, wireless communications have had a
rapid development with the emerging of new wireless
technologies, including cognitive radio [1], network coding
[2], cooperation and coordinated transmission [3][4], self
organizing network [5], and so on. But, most of them are still
in the stage of theoretical research or small-scale validation
without large-scale trials veriﬁed which restricts their fur-
ther development. At the same time, wireless experimental
resources in different forms, such as the wireless devices,
simulation environment, experimental instruments, software
modules, scatter in different places with the lack of uniﬁed
usage. In order to meet the needs of resource sharing, these
different resources should be integrated to work for the
innovation and application research of wireless technology.
Thus, with the support of national Science and Technology
major project, Tsinghua University initiates and constructs
an environment, named Platform of Allied Information, as
shown in Fig. 1, for development and veriﬁcation of various
new wireless technology and new services with related
universities and companies.
One of the basic tasks of PAI is to build an open, safe
and controllable transmission platform. With PAI, the cross-
region and inter-unit remote collaborative researches and
developments of wireless technology can be achieved, and
the distributed experimental resources can be fully integrated
and utilized for experimental veriﬁcations researches of new
wireless technology and new services by more than one
allied unit.
Figure 1.
Resources sharing and collaborative development of PAI.
In this paper, the reconﬁguration mechanism is designed
and a reconﬁguration trial is implemented based on PAI.
Through appropriate resource conﬁguration and experiment
conﬁguration, wireless innovative experiment could be tested
to prove the feasibility of the proposed reconﬁguration
mechanism.
The rest of this paper is organized as follows. We will
introduce the major problems solved by PAI in Section II,
and then describe the design and implementation of PAI in
Section III. In Section IV, the reconﬁguration mechanism is
described. In Section V, we show the running of real-time
reconﬁguration, then give a conclusion in the last section.
II. MAJOR PROBLEMS SOLVED BY PAI
Considering the extensive ﬂexibility, the open platform
architecture is adopted. We use the China Education and
Research NETwork (CERNET) [6] as the wired transmission
backbone as well as dedicated gateway devices and uniﬁed
local interface as the access of the various experimental
resources. To ensure real-time control with high-speed data
transmission, there will be separate paths for data and control
signal. Resource management, user management, experiment
76
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

operation and other aspects are in-depth considered and
optimally designed.
A. Unifying Speciﬁcations of the Interface
The speciﬁcations of the interface between the platform
and experimental resources are clearly deﬁned. A scalable
universal interface is designed to support the access of
various wireless devices, simulation environments, exper-
imental instruments, and software modules. Some typical
experimental resources are given as follows.
• Wireless devices, such as Universal Software Radio
Peripheral (USRP) [7], WARP [8].
• Simulation environments, such as simulation platforms
based on MATLAB, OPNET and NS2.
• Experimental instruments, such as signal generators,
spectrum analyzers, and channel simulators that are
available to Internet.
• Software modules, such as software developed by
OSSIE [9] and GNU Radio [10].
B. Centralizing the Scheduling and Management
Since the experimental resources are highly distributed,
the uniﬁed management mechanism should be studied and
developed to support different experimental resources, end-
users and experimental procedures. A centralized manage-
ment system is established to achieve the following func-
tions.
• Convert the end-users’ instructions into local or remote
operations.
• Manage the data exchange between different experi-
mental resources.
• Submit results to end-users.
C. Improving the Security Mechanisms
The security mechanism is designed to ensure safety dur-
ing the access of hardware and software and implementation
of experimental veriﬁcation. The communications proce-
dures are completed by a collaboration of the hardware and
software modules, the security of the veriﬁcation platform
aim at software security and hardware security.
D. Keeping the Compatibility
The new wireless technologies are emerging continuously.
The high requirements for the veriﬁcation platform should be
satisﬁed, such as rate matching, adaptive access and experi-
mental approach selection. The core factors, parameters and
experimental needs of the mainstream wireless technologies
at present are analyzed and summarized. The basic interface
speciﬁcations, operating procedures guidelines and feasibil-
ity assessment methods are established to ensure regular
development of the experiments.
Figure 2.
Basic architecture of PAI.
E. Building the Experimental Resources Library
The experimental resources library is built with a variety
of commonly used hardware devices, unit components, soft-
ware modules, simulation functions, and system components
combined with the hardware and software. New components
developed by different users must meet certain speciﬁcations
before adding to the library. They must go through self
testing, system testing and multi-parameter testing, to ensure
proper functioning.
F. Brief Summary
In order to construct the platform, the major problems
mentioned above should be addressed based on the tech-
nology accumulation of the cooperative institutes. Because
this paper focuses on the scheduling and reconﬁguration of
wireless communication system, the interface, security and
library technologies would not be described in detail.
III. DESIGN AND IMPLEMENTATION OF PAI
A. Basic Architecture
PAI consists of four major parts: Experimental Resources,
End-Users, Control Center, and Backbone Networks, as
shown in Fig. 2.
All accessed Experimental Resources need to be repro-
grammed in accordance with the uniﬁed interface speciﬁca-
tions. End-Users are the operators of the experiments. The
Control Center works with reconﬁguration mechanism to
conﬁgure and manage all Experimental Resources; it pro-
vides further management functions such as authentication
and security management. Backbone networks is the basis
of the entire platform, using special network equipments to
provide a high-speed, stable and secure network access.
B. Interface Speciﬁcations
Interface speciﬁcations guide the Experimental Resources
transforming the private Application Program Interface
(API) into the public interface with the help of Web services.
77
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

Special access mechanism such as manually upload data by
End-User would be provided for the Experimental Resources
without suitable interface adaptation. Some typical Experi-
mental Resources are adapted as follows.
• USRP is a widely used software deﬁned radio test bed,
which provides RF, ADC/DAC and IF and customizes
the baseband processes. USRP is connected to the
proxy PC via the USB port; GNU Radio provides
a major modules library to operate USRP peripheral
devices. The common features are not difﬁcult to show
through the Web service like the basic ﬁle send / receive
applications.
• MATLAB is the most popular simulation tool; many
institutes have accumulated lots of MATLAB wire-
less communications simulation environments for many
years, which could be released to authorized end-users
through Web services. MATLAB demonstrations could
be adapted by the MATLAB engine. MATLAB engine
is a stand-alone C / C++ program, which can call the
MATLAB functions through COM objects, send com-
mands to the MATLAB process, transmit parameters
and receive results.
• The interfaces of Agilent instruments are GPIO, USB,
LAN, etc. A proxy PC is established to operate the
instrument through an adaptive process that is devel-
oped based on the Agilent VISA and SICL libraries.
The proxy PC needs to send the parameters assigned to
the reserved instrument, and capture the measurement
report.
C. Conﬁguration and Management
The Control Center showed in Fig. 3 allows End-Users
to reserve the Experimental Resources with permission,
after that various services provided by the Experimental
Resources could be called. Some experiments are carried
out with the interconnection of the data from different
Experimental Resources; others are carried out with the
cooperation of several End-Users. The experiments could
be operated not only by remote end-user but also at the
appropriate given time.
IV. RECONFIGURATION MECHANISM
Reconﬁguration can be realized by software reconﬁgu-
ration, research of software reconﬁguration is embodied in
software architecture description language and its support
system [11]. Related methods are software reconﬁguration
based on mapping rules, software reconﬁguration based on
hierarchical message bus architecture [12], software recon-
ﬁguration based on the C2 style software architecture [13],
etc. These software reconﬁguration mechanisms separate
the whole software system into modules, and architecture
description language is used to describe the connection
between modules and connectors. The modeled software
system increases system ﬂexibility, so the system became
Figure 3. Centralized conﬁguration and management of the Control Center.
enabled to refresh in order to meet new environments and
demands [14].
With the development of network, the reconﬁguration
mechanisms discussed above are not suited to the complex
distribution environment and ﬂexible application model. This
paper extends the application of reconﬁguration mecha-
nism into the real converged network environment, giving
a method of reconﬁguration on PAI. With the proposed
reconﬁguration mechanism, PAI can be conﬁgured into
appropriate applications according to different experimental
needs.
The reconﬁguration mechanism is realized by Resource
Management and Experiment Conﬁguration module in Con-
trol Center. Resource Management mainly solve the issue
of ”resources’accessibility”, while the Experiment Conﬁgu-
ration is mainly responsible for the scheduling of resources
and interaction between resources. Through appropriate Re-
source Management and Experiment Conﬁguration multiple
wireless innovations have integrated effectively, which pro-
motes the loach of wireless innovative experiment.
A. Resource Management
Resource Management starts from resource certiﬁcation.
In PAI, resources with a characteristic of wide distribution
are belong to different network nodes and connected through
the CERNET. These resources can be speciﬁc equipment,
software modules, virtual instruments, etc. They are highly
heterogeneous; typically do not have a uniﬁed interface to
the conﬁguration and management module. So the prime
problem to be solved is how to promote the sharing of
resources, providing a uniﬁed standard for resource descrip-
tion.
Web services [15] were deﬁned as the abstract form of
accessed resources and uniﬁed XML resource description
format as a resource certiﬁcation and identiﬁcation rule.
Through the adaptation, the private interface is released into
the public way for the Resources Management module API
78
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

Figure 4.
Resource commnication packet format.
calls. XML description ﬁles include some basic properties
and operation commands of resource, such as resource
name, functional description, the command name, command
description, the command parameters, return values and so
on.
In PAI, the main function of Resource Management is
carried out by the Resource Management module, in which
the XML ﬁle was analyzed to get related information,
identify resource function, and then provide users with the
ability of operating resources.
B. Experiment Conﬁguration
Experiment Conﬁguration schedules experiments and en-
sures the interaction between resources, which are completed
by the cooperation of Experiment Scheduling and Resource
Communication sub-module.
Experiment scheduling sub-module is responsible for the
initial conﬁguration. When users log in, they can create
a project on demand visually, ﬁnishing resources selec-
tion, topological link, command parameters conﬁguration
and other conﬁguration operations. The initial conﬁguration
information is programmed by Experiment Scheduling sub-
module and saved to the database for rechecking.
Resource Communication sub-module deﬁnes the com-
munication protocol between resources. It completes the
data interaction between resources and realizes the mapping
of resources to the actual function based on the initial
conﬁguration information. The protocol format is shown in
ﬁg.4. Msg length speciﬁes the length of the entire packet,
4Byte; Des add and Src add show the destination and
source address of the packet, each 6Byte; Trans identiﬁes
the process of communication between resources, starting
from 0, 1 to end, 1Byte; Mark identiﬁes whether the packet
has segments, 0 for no segment, others for the sequence
number of the segments, 1Byte; Command is used to store
a speciﬁc order of resources, 2Byte; Data holds the data
associated command; its length is variable according to
the corresponding order. A larger amount of data can be
transmitted by serial segments.
V. RUNNING OF REAL-TIME RECONFIGURATION
In this section, a trial is given to test the reconﬁguration
mechanism. As shown in Fig. 5, this experiment includes
two sets of USRP equipments (tagged as USRP1, USRP2),
Figure 5.
Scene graph of the reconﬁguration trial.
Figure 6.
USRP1 XML description ﬁle.
convolution coding module and Viterbi decoding module
(deployed in PC1), source coding and decoding modules
(deployed in PC2). All resources are deployed in network
and connected by special equipments. Through USER PC,
users get access to the Control Center (server) to conﬁgure
the whole experiment.
All the related resources access to PAI need to be recon-
ﬁgured as deﬁned in section IV, using Web services as a
public API to the Control Center and loading XML ﬁles to
describe the information of the resources. Take USRP1 as
an example, the XML description ﬁle is shown in Fig. 6. In
this case, the reconﬁgured parameters includes transmission
rate, transmit power gain and RF frequency.
Resource Management module veriﬁes the legitimacy of
XML documents, and parses out the relevant information,
79
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

Figure 7.
Initial conﬁguration interface.
then feedback a list of commands. When users log in,
select the relevant experiment resources, render the link
topology, and conﬁgure the appropriate experimental pa-
rameters, as shown in Fig. 7. We place the SourceCoder
and ChannelCoder modules in PC1 and send the coded
bitstream to USRP1, convert it to radio frequency and then
transmit, through the airinterface, USRP2 receive the radio
frequency signal and convert it to baseband signal, the
baseband signal is transported to PC2 and be processed with
the ChannelDecoder and SourceDecoder modules to get the
original bitstream.
After the initial conﬁguration is completed, Experiment
Scheduling sub-module generates conﬁguration ﬁle accord-
ing to the operations above and save it to the database.
Resource Communication sub-module follows the commu-
nication protocol deﬁned in Section IV to package the
data. Experimental data transmits via source coding and
convolution coding module to USRP1, where GMSK mod-
ulation and digital up conversion are completed, and then
the experimental data are transmitted. Correspondingly, in
the USRP2, data is received and digital down conversion
and demodulation will be done, the processed data will
be passed on to Viterbi channel decoding module and the
source decoding module to reconstruct the source data. The
reconstructive data as well as the source data is passed back
to the USER. All the input/output data streams mentioned
above are retransmitted by the Control Center; thus all the
intermediate results can be collected and observed.
VI. CONCLUSION
We have designed and developed PAI to meet the con-
vergence of various innovative wireless technologies. A
novel method of reconﬁguration has been proposed and a
reconﬁguration trial of wireless transmission has been done
based on the overall conﬁgurability of PAI. The distributed
Experimental Resources in related research units can be
fully integrated and utilized for experimental veriﬁcation of
new wireless technologies, such as cognitive radio, network
coding, cooperation and coordinated transmission, self or-
ganizing network and so on. PAI supports the research for
future broadband wireless technology effectively. More work
about security and user interface of PAI could be in-depth
studied to improve the safety and applied range.
VII. ACKNOWLEDGMENT
This work has been supported by National S&T Ma-
jor Project 2011ZX03003-002 and Beijing Natural Science
Foundation 4110001.
REFERENCES
[1] J. Mitola, “Cognitive radio: making software radios more
personal,” Personal Commun., IEEE, vol. 6, no. 4, 1999, pp.
13-18.
[2] S. Li, R. Yeung, and C. Ning, “Linear network coding,” IEEE
Trans. Inf. Theory, vol. 49, no. 2, 2003, pp. 371-381.
[3] J. Laneman, D. Tse, and G. Wornell, “Cooperative diversity
in wireless networks: efﬁcient protocols and outage behavior,”
IEEE Trans. Inf. Theory, vol. 50, no. 12, 2004, pp. 3062-3080.
[4] 3GPP, “Aspects of coordinated multi-point transmission for
advanced E-UTRA,” 3GPP TSG RAN WG1 Meeting#54, R1-
083530, Texas Instruments, Sept. 2008.
[5] J. L. van den Berg et al., “Self-organization in future mobile
communications networks,” ICT-Mobile Summit, Stockholm,
Sweden, 2008.
[6] JP. Wu, “Current state and future of China education and re-
search network,” New Technology of Library and Information
Service, 1997, pp. 9-11.
[7] Universal software radio peripheral: the foundation for com-
plete software radio systems. [Online]. Available: http://www.
ettus.com/downloads/ettus-ds-usrp
[8] K. Amiri, Y. Sun, P. Murphy, C. Hunter, J. R. Cavallaro, and
A. Sabharwal, “WARP, a uniﬁed wireless network test bed
for education and research,” IEEE Int. Conf. Microelectronic
Systems Education, San Diego, CA, USA, 2007, pp. 53-54.
[9] C. R. A. Gonzalez et al., “Open-source SCA-based core
framework and rapid development tools enable software-
deﬁned radio education and research,” IEEE Commun. Mag.,
vol. 47, no. 10, Oct. 2009, pp. 48-55.
[10] Free Software Foundation, Inc. (2009). GNU Radio - the
GNU software radio. [Online]. Available: http://www.gnu.org/
software/gnuradio
[11] N. Medvidovic and D. S. Rosenblum, “Domains of concern
in software architectures and architecture description lan-
guages,” in Proc. of USENIX conf. on DSL, Santa Barbara,
CA, USA, oct. 1997, pp. 199-212.
[12] C. Yu and S. Huang, “Real-time software reconﬁguration
based on software architecture,” Computer Engineering and
Applications, vol. 36, no. 3, 2000, pp. 47-54.
[13] S. Huang, Y. Fan, and Y. Zhao, “Research on generic adaptive
software architecture style,” Journal of Software, vol. 17, no.
6, 2006, pp. 1338-1348.
[14] Z. Wang and X. Xie, “Software reconﬁguration based on
component-oriented architecture,” Computer Development,
vol. 14, no. 7, 2004, pp. 8-15.
[15] C. Hu, J. Huai, and H. Sun, “Web service-based grid archi-
tecture and its supporting environment,” Journal of Software,
vol. 15, no. 7, 2004, pp. 1064-1073.
80
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

