Appliance Scheduling Optimization for Demand Response
Armin Ghasem Azar and Rune Hylsberg Jacobsen
Department of Engineering, Aarhus University, Denmark
Email: {aga, rhj}@eng.au.dk
Abstract—The paper studies the challenge of the electricity
consumption management in smart grids. It focuses on different
impacts of demand response running in the smart grid engaging
consumers to participate. The main responsibility of the demand
response system is scheduling the operation of appliances of
consumers in order to achieve a network-wide optimized per-
formance. Each participating electricity consumer, who owns a
set of home appliances, provides the desired expectation of his/her
power consumption scenario to the demand response system. It
is accompanied with time limits on the ﬂexibility of controllable
appliances for shifting their operational time from peak to off-
peak periods. The appliance scheduling optimization for demand
response is modeled as an optimization problem. It concentrates
on reducing the total electricity bills and CO2 emissions as well
as ﬂattening the aggregated peak demand at the same time.
This paper categorizes the appliances based on shiftability and
interruptibility characteristics. It uses information of dwellings
to determine an effective appliance scheduling strategy. This
strategy gets inﬂuenced by grid constraints imposed by distribu-
tion system operators. The simulations conﬁrm that scheduling
appliances of 100 consumers yields a signiﬁcant achievement in
the peak demand reduction while averagely satisfying the comfort
level of consumers.
Keywords–Smart grid, demand response, appliance scheduling,
knapsack problem, dynamic programming, multi-objective optimiza-
tion.
NOMENCLATURE
Constants
PDT
Peak Demand Threshold
PPD
Peak Power Demand
Ai
Number of appliances in Di
ai,j
Appliance j in dwelling i
Di
Dwelling i
G
Number of generations
N
Number of dwellings
pc
Crossover propability
pm
Mutation propability
pi,j
Priority of appliance ai,j
Q
Population size
T
Number of time intervals
DFi,j
Deadline ﬂexibility of appliance ai,j
TPDi,j
Total power demand of appliance ai,j
Indices
i
Index of dwellings
j
Index of appliances
t
Index of time intervals
Variables
xt
i,j
Decision variable of selecting PDt
i,j
CO2Et
Amount of CO2 emission at time interval t
EPt
Electricity price at time interval t
PDt
i,j
Power demand request of appliance ai,j at time
interval t
RPt
i,j
Number of remaining power requests of appliance
ai,j at time interval t
I.
INTRODUCTION
The smart grid has emerged as a novel infrastructure aiming
to transform the existing power system into a reliable and
consumer-centric one. It forms a distributed energy delivery
network using the electricity and information streams simul-
taneously. This network possesses a self-healing characteristic
toward facing unforeseen electricity outage circumstances. Its
reliability and stability are based on intelligent controllers,
in which they try to establish bilateral communication chan-
nels between consumers and Distribution System Operators
(DSOs). The demand side management service provides an
opportunity to energy actors for an active participation in coun-
terbalancing the demand response. It helps to ﬁnd the most
reliable and effective energy solutions in real-time. This paper
extends the work presented in [1]. Here, the key contributions
include the extended mathematical formulation and description
of the demand response system along with a presentation of
an extensive simulation performance analysis.
Demand response is one of the most challenging issues in
demand side management, which is responsible for providing
effective and comprehensive energy solutions [2]. From the
consumers’ point of view, demand response attempts to moti-
vate them to modify their electricity usage patterns, in response
to potential grid incentives. In contrast to this point of view,
DSOs intend to equilibrate demands with responses to reduce
peak power demands as much as possible [3]. These purposes
can be achieved through both curtailing the power demand and
controlling the activation time of electricity usages. However,
a mutual challenge behind these procedures is how to motivate
consumers to modify their power demand proﬁles [4][5].
One of the most pragmatic incentives for consumers to
modify their consumption behavior is electricity prices. Al-
though demand response includes efforts to change the elec-
tricity usage of consumers with respect to the alterations in
the electricity prices, however, reducing the peak demand
and CO2 emission also help to decrease the greenhouse gas
emissions [6]. This reduction results in a co-optimization
approach of power demand cost and CO2 emission. In some
peak hours, the demand response system has to shift some
power demand requests from diverse dwellings to another time
interval. This shifting can occur several consecutive/separate
times over a day. Obviously, this leads to some changes in the
daily power consumption of consumers. This causes a problem
named dissatisfaction of consumers. As a result, maximizing
the satisfaction of consumers is an essential objective as well.
50
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Consumers are also interested to reduce their electricity cost
while contributing to CO2 emission reduction program. From
the DSOs’ point of view, they aim to shave the peak period,
which results in ﬂattening the aggregated power demands over
time.
Figure 1 shows a conceptual view of various communica-
tions in the grid. Each dwelling has a speciﬁc scenario for its
own appliances. This scenario includes the desired timetable of
using appliances in a day. First, appliances are classiﬁed based
on the shiftability feature [7]. Second, shiftable appliances are
categorized by the interruptibility feature. These classiﬁcations
permit consumers to give a priority to appliances, which is
important for their starting time. Once the consumer chooses
to operate an appliance in demand response ready mode,
the consumer offers ﬂexibility to the grid and provides an
opportunity to the demand response system for reducing the
peak demand.
This paper proposes a local power scheduling algorithm
attempting to schedule power demand requests of appliances.
Here, local means receiving the power demand requests with
a speciﬁc time resolution and scheduling them accordingly.
As its principal novelty, the algorithm runs concurrently and
need not know the whole operating period of appliances.
The scheduler intends to schedule power demand requests
optimally once they arrive. At each time interval, its main
responsibility is to allow some appliances to operate and shift
the operating cycle of the remaining appliances to the future.
This shifting is enabled by utilizing Peak Demand Thresholds
(PDTs) imposed by DSOs. The scheduling algorithm attempts
to keep the aggregated power consumptions below PDTs
continuously.
This rest is organized as follows: Section II overviews the
related work. Section III presents the system model. Section IV
proposes the power scheduling algorithm. Section V discusses
the simulation setup and analysis. Finally, Section VI con-
cludes the paper and provides the possible future extensions.
II.
RELATED WORK
A considerable amount of literature is published on smart
grids due to concerns on the inefﬁcient structure of the
current electrical grid in responding to the growing demand
for electricity [8][9]. Farhangi [8] investigated the differen-
tial impacts of transforming the current electrical grid to
a complex system of systems, named the smart grid while
Fang et al. [9] surveyed the enabling technologies for data
communications in the smart grid. With the advent of smart
grids, new solutions are becoming available. To support these,
demand response programs endeavor to change the electricity
usage patterns of consumers in response to electricity prices
or other signals. These programs are considered as reliable
solutions to improve the energy efﬁciency and reduce the
peak demand [10]. To reach these goals necessitates demand
response service providers investing on proposing functional
and potential power scheduling services to the smart grid.
Most of the current research on the power scheduling
problem focuses on scheduling power demand requests of
appliances of consumers wrapping as a single-objective frame-
work while relying on historical data and forecasting ser-
vices [11][12]. Agnetis et al. [11] deﬁned the problem of
optimally scheduling a limited number of manageable appli-
ances of only one dwelling solving with a high computational
Figure 1.
Conceptual view of various communications in the grid
algorithm based on the mixed integer linear programming.
O’Brien [12] proposed a greedy algorithm for automatically
scheduling the shiftable appliances with completely predeter-
mined power proﬁles while missing to take any grid stability
constraint into account.
Nevertheless, far too little attention has been paid by
smart grid researchers to design a system model where power
scheduling is done near real-time. Jacobsen et al. [1] found this
gap and developed a simple but efﬁcient smart appliance power
scheduling mechanism based on the peak demand reduction
strategy. Consecutively, Azar et al. [13] followed a design
methodology that efﬁciently utilized a time-independent PDT
policy for decreasing the aggregated peak demand considering
the appliance reception minimization method. It successfully
ﬂattened the aggregated power consumption based on a cen-
tralized demand response system.
This paper advances the state of the art in formulating a
demand response service where appliances send their power
demand requests with a speciﬁc time resolution accompanying
the consumer’s time-limit ﬂexibilities. The DSO schedules the
incoming power demand requests according to the customers’
and its objectives. It attempts to keep the aggregated power
demands below PDTs over time.
III.
SYSTEM MODEL
This section clariﬁes the proposed system model, as Fig-
ure 2 illustrates its conceptual view. Consumers play a major
role in this system model since they provide their desired elec-
tricity consumption scenarios and corresponding ﬂexibilities
to the demand response system. In addition, DSOs impose
some grid stability constraints to maintain the electrical grid,
such as PDT. Electricity prices of a typical day with the
corresponding CO2 emission data are another system input.
The demand response system will receive these input data and
then, executes the scheduling algorithm attempting to schedule
appliances of dwellings with respect to the objectives and
constraints settled in the demand response system.
51
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 2.
System model of the appliance power scheduling
A. Consumers: Appliance Point of View
This paper assumes there are N ∈ N dwellings connected
to a feeder in the electrical grid. Each dwelling Di, where
i ∈ {1, 2, . . . , N}, possesses Ai ∈ N appliances. Each appli-
ance ai,j, where j ∈ {1, 2, . . . , Ai}, is a driver of residential
power demands. To guarantee the full operation of appliances,
the demand response system should check whether appliances
have completed their responsibilities during the day or not.
Therefore, Equation (1) shows this hard constraint.
T
X
t=1

Considering
the
aforementioned
descriptions,
each
dwelling Di
has a speciﬁc scenario showing how the
consumer intends to operate the appliances. Table I lists
a sample scenario of operating the appliances in a typical
dwelling. As described previously, deadline ﬂexibility in using
appliances means a ﬁrm deadline for ﬁnishing the related
activity. For example, the consumer provides two hours of
ﬂexibility to the demand response system for charging the
electric vehicle. More in details, it receives the ﬁrst power
demand request for charging the electric vehicle at the deﬁned
time. The demand response system has an opportunity to
deliver the charged electric vehicle later in time by utilizing
the provided deadline ﬂexibility. It is possible to both shift and
interrupt the charging process during the deﬁned time period
since the electric vehicle is a member of the interruptible
appliances. Here, the priorities are time-independent (static).
It is worthwhile emphasizing that the priority is applied to
only shiftable appliances. Hence, the refrigerator and lighting
will not undergo any scheduling procedure. They will receive
an inﬁnite priority since they are members of non-shiftable
appliances.
B. Distribution System Operator: Grid Constraint Point of
View
Currently, electricity producers generate more electricity
since they are experiencing an insufﬁciency of electricity gen-
eration capacity because of the power demands by consumers.
However, it can be avoided using demand shaping schemes.
DSOs currently apply a threshold policy, in order to shave
the peak, which results in shaping the demand proﬁles over
time [1]. From an electricity grid point of view, the upper limit
of the PDT may be enforced by the DSO by the installation
of fuses and other safety-related measures such as protective
relays. These devices may be dimensioned differently and the
subscription fee for a dwelling often depends on the installed
capacity. As a complement, adaptive schemes can be deployed
as a control loop between a DSO-controlled generator side and
individual dwellings [16]. Let
N
X
i=1
Ai
X
j=1

Algorithm 1: Power scheduling
Input : The scenarios, power proﬁles, classiﬁcation of appliances, PDT.
Output: Schedule of appliances of all dwellings.
1 Preprocessing the input data;
2 while receiving the power demand requests over time do
3
Allow the non-shiftable appliances to start or to continue;
4
Update PDT;
5
if there are uninterruptible appliances, which have started previously then
6
Allow them to continue;
7
Update PDT;
8
end
9
if there are appliances, which cannot be shifted due to their deadline ﬂexibility constraint then
10
Allow them to start or to continue;
11
Update PDT;
12
end
13
if there are some remaining power demand request then
14
if their total consumption is less than the remaining PDT then
15
Allow them to start or to continue;
16
Update PDT;
17
else
18
Refer to the single/multi-objective Knapsack procedure;
19
Allow the output power demand requests of the Knapsack procedure to start or to continue;
20
Shift the remaining power demand requests to the next time interval;
21
end
22
end
23 end
duties. Furthermore, if there is an uninterruptible appliance,
which has started at the previous time interval, it should
be allowed to continue. Finally, if there is a power demand
request, where shifting it to the next time interval violates its
provided deadline ﬂexibility, then, the same action of allowing
it to start takes place. After ﬁnishing these procedures, the
algorithm will check whether the total power demand of the
remaining requests is below the remaining PDT (capacity) or
not. If so, all will be permitted to start or to continue their
procedure. Otherwise, the algorithm refers to the Knapsack
procedure to select some requests from the remaining power
demand requests to enable them to start or to continue, and
shift the unselected requests to the next time interval.
Two challenging circumstances can occur during the
scheduling, and handling them conﬁrms the robustness of the
scheduling algorithm. If there is a sudden drop in the electric
power, indeed no appliance can send any power demand
request. Therefore, the scheduling algorithm waits until the
appliance sends its new power demand request. Furthermore,
if all appliances in all dwellings are conﬁgured as non-shiftable
with high priorities, the scheduling algorithm will allow all of
them to operate, when they send their power demand requests.
This is based on respecting the consumers who do not provide
any ﬂexibility to non-shiftable appliances. However, this is
considered to be an infeasible and greedy setup.
A. The Knapsack Problem
The Knapsack problem is one of the traditional problems of
computer science in combinatorial optimization literature [17].
Given F items, the Knapsack tries to pack the items to obtain
the maximum total value. Each item gets a weight and value.
The maximum weight that the Knapsack can tolerate is limited
by a ﬁxed capacity W. This problem has two versions: “0-1”
and “fractional”. In the former, items are indivisible meaning
it is possible to either take an item or not. In contrast, in
the fractional version, items are divisible and, therefore, the
Knapsack can take any fraction of an item.
This paper gets the beneﬁt from the ﬁrst version since the
remaining power demand requests are similar to the indivisible
items in “0-1” Knapsack problem. The “0-1” Knapsack prob-
lem is NP-Complete since the time complexity of solving it in
a brute-force approach is O(2F ). Time complexity measures
the time that an algorithm takes as a function of the size of
its input. Applying brute-force approach means calculating
the ﬁtness of 2M solutions to locate the optimal one. The
power scheduling problem is reducible to this version since
the demand response system should decide to allow those
indivisible power demand requests, which optimize the objec-
tive(s) and satisfy the constraints simultaneously. Therefore,
the discussing problem is also NP-Complete. Hereinafter, we
the scheduler needs to refer to the Knapsack problem, we name
it the Knapsack procedure.
Indeed, the Knapsack procedure requires not only to de-
cide, which power demand requests have to be processed now
and delay the others afterwards, but should also consider the
starting (ending) times of the latter. The latter is reﬂected in
the ﬂexibility that consumers provide.
Table II deﬁnes the equivalent parameters of the Knapsack
and power scheduling optimization problems according to
various objectives. As described previously, the Knapsack pro-
cedure receives the remaining power demand requests, which
their total power demand is indeed more than the remaining
capacity. It calculates the ﬁtness of produced feasible solutions,
in which each solution includes some power demand requests.
54
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE II.
EQUIVALENT PARAMETERS OF THE KNAPSACK PROCEDURE AND POWER SCHEDULING OPTIMIZATION PROBLEM
Values (items)
Objective(s)
Weights
Capacity
Single-objective
Electricity cost of power demand requests
Minimizing the total electricity costs
Power demand requests
PDT
CO2 emission of power demand requests
Minimizing the total CO2 emissions
Power demand requests
PDT
Priority of power demand requests
Maximizing the total allowed power demand requests
Power demand requests
PDT
Multi-objective
Electricity cost and priority of power demand requests
Minimizing the total electricity costs and
maximizing the total number of allowed power demand requests
Power demand requests
PDT
CO2 emission and priority of power demand requests
Minimizing the total CO2 emission and
maximizing the total number of allowed power demand requests
Power demand requests
PDT
As a result, the solution to this problem is a subset of received
power demand requests, which should be allowed to start or
to continue in this time interval. Then, there will most likely
be some remaining power demand requests, which cannot
successfully start or continue. These power demand requests
should be shifted to the future.
Depending on the number of objectives chosen by the
demand response system, different approaches can be used to
run the Knapsack procedure. On the one hand, if the demand
response system decides to run the scheduling with one ob-
jective, the scheduling problem turns into a single-objective
optimization problem. This is equal to run the single-objective
“0-1” Knapsack procedure with dynamic programming at each
time interval (if needed) [14]. On the contrary, if at least two
objectives are chosen, the scheduling algorithm corresponds
to a multi-objective optimization problem, which has to be
solved with relevant techniques [18]. It is worth noting that
these approaches are used at each time interval, if needed.
The following describes them.
1) Dynamic Programming: We utilize a dynamic program-
ming approach to solve single-objective power scheduling
problem. As Figure 3 demonstrates its principles, this approach
ﬁrst characterizes the structure of an optimal solution. Then,
it decomposes the problem into smaller problems. Meanwhile,
it ﬁnds a relationship between the structure of the optimal
solution of the original problem and solutions of the smaller
problems. It recursively expresses the solution of the original
problem in terms of optimal solutions to smaller problems,
which supports the optimality.
To this end, it follows a bottom-up computation approach.
The value of an optimal solution is computed in a bottom-
up manner using a table structure. This table is repeatedly
ﬁlled to use in each iteration [19]. The structure of an optimal
solution to the power scheduling problem is a subset of the
remaining power demand requests, which optimizes the rele-
vant objective. Algorithm 2 declares the dynamic programming
method for running the single-objective Knapsack procedure.
The time complexity of approaching the Knapsack procedure
using dynamic programming is O(M×PDT).
2) Multi-Objective Optimization:
Multi-Objective Opti-
mization (MOO) is an area of multiple criteria decision-
making, where mathematical optimization problems involving
more than one objective function should be optimized simul-
taneously [20]. Optimal decisions are taken in the presence
of trade-offs between two or more conﬂicting objectives.
Solving a MOO problem necessitates computing all or a
representative set of Pareto-optimal solutions. In this paper, a
Pareto solution comprises a subset of remaining power demand
requests. When decision-making is emphasized, the objective
of solving a MOO problem is to support a decision-maker in
Figure 3.
Principles of the dynamic programming approach
Algorithm 2: Approaching the Knapsack procedure:
Dynamic programming
Input : power demand requests, PDT.
Output: The optimal solution at the current time
interval.
1 Set F as the number of input power demand requests;
2 Create a (F + 1) × (PDT + 1) table named V ;
3 if the objective is minimization then
4
Set V [0, 0 : PDT + 1]=Inf;
5 else
6
Set V [0, 0 : PDT + 1]=0;
7 end
8 for i = 1 to F do
9
for j = 1 to PDT do
10
if PD[i] ≤ j then
11
if the objective is minimization then
12
V [i, j] =
min(V [i − 1, j], PD[i] + V [i − 1, j − PD[i]]);
13
else
14
V [i, j] =
max(V [i − 1, j], PD[i] + V [i − 1, j − PD[i]]);
15
end
16
else
17
V [i, j] = V [i − 1, j];
18
end
19
end
20 end
21 Return the V [F, PDT] as the ﬁnal solution;
ﬁnding the most preferred Pareto-optimal solution. Here, the
decision-maker is the demand response system, which should
decide to allow only a subset of the remaining power demand
requests to optimize the objectives and satisfy the constraints at
each time interval accordingly. The objective functions are in
55
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Algorithm 3: Approaching the Knapsack procedure; Multi-objective evolutionary algorithm
Input : Remaining power demand requests, PDT, population size (Q), number of generations (G), crossover (pc) and
mutation (pm) probabilities.
Output: A near-optimal solution at the current time interval.
1 Randomly produce initial solutions and combine them as the parent population;
2 Evaluate the parent population based on the objective functions;
3 Calculate the Pareto-fronts and the crowding distance of solutions inside the parent population;
4 c = 1;
5 while c ≤ G do
6
Apply the selection operator on the parent population and forward to the crossover operator;
7
Apply the crossover operator on the received solutions with a probability of pc and forward to the mutation operator;
8
Apply the mutation operator on the received solutions with a probability of pm and put them into the offspring
population;
9
Evaluate the offspring population based on the objectives;
10
Combine the parent and offspring populations into a temporary population;
11
Calculate the Pareto-fronts and crowding distances of solutions inside the temporary population;
12
Select solutions from the Pareto-fronts orderly while replacing them with solutions in the parent population until
reaching Q;
13 end
14 Return a Pareto-solution from the ﬁrst Pareto-front as a near-optimal solution;
conﬂict, when there exist an inﬁnite number of Pareto-optimal
solutions. A Pareto-optimal solution does not improve for one
objective unless it satisﬁes others. The main goal in MOO
problems is to ﬁnd a ﬁnite Pareto-front in the objective space
including a ﬁnite number of diverse Pareto-solutions.
Evolutionary Algorithms (EAs) are one of the most well-
known meta-heuristic search mechanisms utilized for the MOO
problems since their structure is free of search space and ob-
jective capacities [21]. EAs form a subset of evolutionary com-
putation, in which they generally involve techniques and im-
plementing mechanisms inspired by biological evolutions such
as reproduction, mutation, recombination, natural selection,
and survival of the ﬁttest. The main advantage of EAs, when
applied to solve MOO problems, is the fact that they typically
generate sets of solutions, allowing computation of the entire
Pareto-front. Currently, most Multi-Objective Evolutionary Al-
gorithms (MOEAs) apply Pareto-based ranking schemes such
as the Non-Dominated Sorting Genetic Algorithm-II (NSGA-
II) [22]. Algorithm 3 describes the procedure of running the
multi-objective Knapsack procedure using the NSGA-II. The
time complexity of approaching the Knapsack procedure using
the NSGA-II is O(G×M×Q2), where G is the number of
generations, M is the number of objectives, and Q is the
population size.
The
NSGA-II
randomly
generates
an
initial
Pareto-
population, and then, applies some evolutionary procedures
such as tournament selection with crossover and mutation op-
erators. Next, it generates an offspring population from parents
in each generation. It classiﬁes the temporary population, as
the combination of parent and offspring populations, based on
the dominance principle to some fronts f1, f2, f3 and so on. A
solution Sol1 dominates a solution Sol2, if Sol1 is better than
Sol2 in some objectives and perhaps equal to others. All the
solutions, which lie in one speciﬁc front are non-dominant. In
addition, for each solution Sola in fk, there exists a solution
Solb in fk′ such that Solb dominates Sola, where k′ < k. In
the last step, the NSGA-II ﬁlls the next generation’s population
starting from the ﬁrst front and continuing with solutions in
the next fronts. Since the size of the combined population
is twice the new one, all fronts, which could be unable to
accommodate are removed. However, it needs to handle the
last allowed fronts, in which some of its solutions are possibly
considered in the new population. In this situation, the NSGA-
II uses a niching strategy to choose solutions of the last allowed
fronts, which lie in the least crowded regions of the solution
space. To this end, it ﬁnds the distance between each solution
and its nearest left and right neighbors in the last allowed
fronts for each dimension in the objective hyperspace. Finally,
it sums up such distances for each solution as the largest
hypercube around it, which is empty from other solutions.
The largest hypercube shows a solution with the least crowd.
Figure 4 elaborates a conceptual view of Pareto-fronts and
Pareto-solutions with corresponding crowding distances.
V.
SIMULATION SETUP AND ANALYSIS
This section ﬁrst describes the simulation setup and sub-
sequently, analyzes the results.
A. Simulation Setup
This work has been implemented with Matlab R2014b on
a personal computer with an Intel Core i7-2.0 GHz CPU
and 6 GB memory. Power proﬁles of all appliances are
captured from the TraceBase open repository, which comprises
a collection of real power traces of electrical appliances [23].
The electricity prices in the Danish day-ahead market, known
as Elspot market, are provided by Nord Pool Spot with an
hourly resolution on the day before the power delivery [24].
CO2 emission intensity prognosis data are also provided in
an hourly resolution by the Danish transmission system op-
erator [25]. It is signiﬁcant to note that the demand response
system is set to receive the power demand requests at ﬁve-
minute time intervals until ﬁnishing all activities. At each hour,
it receives the power demand requests 12 times. As a result,
T has been set to 24 × 12. N = 100 dwellings are assumed
to provide their power demand requests over time.
A precise scenario for each dwelling is created randomly
based on power proﬁles of appliances. Corresponding power
56
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

(a). Pareto-fronts and solutions
(b). Crowding distance of the Pareto-solutions
Figure 4.
Conceptual view of Pareto-fronts and Pareto-solutions with
corresponding crowding distances
demand requests are established in each scenario. To stream-
line the model, each appliance is operated only one time.
Regarding ﬂexibilities, we generate a random ﬂexibility value
for each appliance. A lower bound for each ﬂexibility value
is the following time interval from the moment, at which the
operating cycles should ﬁnish without scheduling. An upper
bound for each ﬂexibility value is the end of the day.
It is considered that priorities are generated randomly.
Figure 5 shows the aggregated power demand of the appliances
of one dwelling in a typical day. Figure 6 shows the aggregated
power demands of 100 dwellings. Peak power demand occurs
at 20:30, which is 293 kW. Therefore, in order to allow all
requested power demands at each time interval without shifting
TABLE III.
SIMULATION CASE STUDIES INSPIRED FROM TABLE II
Objective(s)
Case study 1
1) Minimizing the electricity cost
Case study 2
1) Maximizing the comfort level of consumers
Case study 3
1) Minimizing the electricity cost
2) Maximizing the comfort level of consumers
or interrupting any of them, the PDT should be at least 293 kW
since it has been indicated that the PDT is constant and time-
independent. However, the demand response system desires
to ﬂatten the aggregated demand by shifting power demand
requests from on-peak periods to off-peak times. Therefore, it
modiﬁes the PDT to enable the shifting and interruption.
As described earlier, the MOEA includes some evolution-
ary parameters. As a selection operator, this paper utilizes the
tournament selection. Linear crossover and exchange mutation
are also utilized as the exploitation parameters. Their proba-
bilities are set to pc=80% and pm=20%, respectively. Finally,
the population size (Q) and the number of generations (G) are
both adjusted to 100.
B. Simulation Analysis
This section analyzes the results obtained based on three
simulation case studies, as Table III lists. The ﬁrst case study
is single-objective and aims to minimize the electricity cost
as its objective function (see Equation (5)). The second case
study is also single-objective and attempts to only maximize
the comfort level of consumers (see Equation (7)). Finally,
the third case study is multi-objective and intends to both
minimize the total electricity cost and maximize the comfort
level of consumers. We omit to show a case study including
minimization of the CO2 emission as an objective function
since it would be similar to minimizing the electricity cost.
The results will be analyzed based on variations of the PDT
as follows:
PDT = {(10% ∼ 100%) × PPD} ,
(8)
where PPD ∈ R+ (watts) denotes the peak power demand.
It is equal to 293 kW (see Figure 6). We change the PDT
from 10% to 100% to analyze the obtained results. Hereinafter,
when PDT is equal to R%, where 10% ≤ R ≤ 100%, it means
PDT=R×PPD. We examine the effects of these variations on:
•
Computation time of running the algorithm over time;
•
Number of referrals to the Knapsack procedure;
•
Computation time of the total number of referrals to
the Knapsack procedure;
•
Total electricity costs of the dwellings in a day;
•
Deviation between the reception and delivery times of
appliances;
•
Aggregated power demands of the scheduled scenarios
in a day.
Figure 7 analyzes the computation of running the schedul-
ing algorithms based on different case studies. In Figure 7(a),
according to Algorithm 1, non-shiftable power demand re-
quests will be allowed to start or to continue apart from the
assigned PDT. Considering computation time, when PDT is
equal to 10%, the remaining capacity for allowing the remain-
ing power demand requests is very low or even below zero.
57
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 5.
Aggregated power demand of appliances used in Table I
Figure 6.
Aggregated power demands of 100 dwellings based on randomly generated scenarios in a typical day
The reason is that the algorithm should satisfy Equations (1)
to (4). Therefore, it is not possible to run the Knapsack
procedure since the minimum consumption of the remaining
power demand requests is greater than the remaining capacity.
In the next intervals, the system, apart from the remaining
capacity, should allow some power demand requests to start
or to continue, for which shifting or interrupting them is
not possible due to their deadline ﬂexibility constraints. As
a result, the number of remaining power demand requests as
inputs to the Knapsack procedure will be few and, therefore,
computation time will be lowered accordingly. Nevertheless,
when PDT increases, the Knapsack procedure will allow more
power demand requests to start or to continue at each interval.
Some of these allowed power demand requests are members
of the uninterruptible set. Therefore, at the next intervals, the
system has to allow the corresponding appliances to continue
their operation apart from the PDT. The demand response
system will confront more remaining power demand requests
compared to lower assigned PDT in later time intervals. This
will increase the complexity and computation time of running
the Knapsack procedure.
We experience more complexity and higher computation
time, when assigned PDT increases. Nevertheless, the number
of intervals, in which the Knapsack procedure should run
decreases. Having some uninterruptible appliances and time
limit ﬂexibility constraints make this decreasing. If the system
allows an uninterruptible power demand request to start at a
certain time interval, it will be unable to interrupt it in the
following intervals. Therefore, it will have to shift more power
demand requests since the remaining capacity has decreased.
These shifted power demand requests will be accumulated and,
ﬁnally, the Knapsack procedure will face several remaining
requests. When PDT is 90%, we observe a noticeable decrease
in computation time compared to previous ﬁgures. The reason
is the reduced amount of the Knapsack procedure’s inputs.
Since the aggregated power demands of the remaining power
demand requests are less than the remaining capacity at most
of the time intervals, it is not necessary to run the Knapsack
procedure. Obviously, there is no need to run the Knapsack
procedure at any of the time intervals, when the threshold is
equal to 100%.
Figure 7(b) demonstrates the same analysis based on the
second case study. The description of this ﬁgure is almost
the same as Figure 7(a). However, there are some minor
differences, which are linked to the differences in the nature of
the objectives. The main reason is underlining the intention of
consumers to pay for the highest comfort as little as possible.
The computation time of running the third case study is
illustrated in Figure 7(c). In contrast to Figures 7(a) and 7(b),
here, the computation time is completely different. The main
reason is the repetitive manner of the MOEA in ﬁnding the
non-dominated near-optimal solution at each time interval.
As described previously, there is no exact solution for multi-
objective problems. Therefore, the near-optimal solutions ob-
58
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

(a). Computation time of running the scheduling algorithm based on the ﬁrst case study
(b). Computation time of running the scheduling algorithm based on the second case study
(c). Computation time of running the scheduling algorithm based on the third case study
Figure 7.
Computation time of running the scheduling algorithms based on different case studies
59
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

tained from running the algorithm at each time interval, affect
the computation time of subsequent intervals. Computation
times for the next intervals may change due to the randomized
nature of ﬁnding near-optimal solutions. If all scenarios and
relevant information are known before scheduling, it will
be possible to limit the computation time. However, in this
situation, when the system receives the power demand requests
with a speciﬁc time resolution, it is not possible to do it since
there is no future prediction or even forecasted data to learn
before scheduling.
According to Figure 7(c), the computation time decreases,
when PDT is 50% or more. The total power demand of
remaining requests at 22:00 is a bit more than the remaining
capacity. Also, most of the corresponding appliances are mem-
bers of the uninterruptible appliances. Therefore, the Knapsack
procedure’s output comprises most of them. The demand
response system should allow them to continue their duties at
the next time intervals apart from the remaining capacity. This
decreases the computation time at the next time intervals since
the number of inputs to the Knapsack procedure decreases. As
the ﬁnal note, in this analysis, only 35% of the CPU speed and
400 MB of memory have been employed by the local power
algorithm in all three case studies in the worst case.
Figure 8 analyzes the number of referrals to the Knapsack
procedure in Algorithm 1. Figure 9 studies the corresponding
computation time, when PDT changes. According to Figure 8,
the number of referrals to the Knapsack procedure in the ﬁrst
two case studies is different, when PDT is equal to 10%.
The reasons are ﬁrst the reductive nature of Equation (5)
and second the remarkable difference between the assigned
PDT and the power demand of the remaining requests. When
the threshold changes to at least 20%, uninterruptible power
demand requests will roughly be allowed to start or to continue
their work at the time they desire. Therefore, the number of
inputs to the Knapsack procedure will decrease and the total
number of referrals to the Knapsack procedure in the ﬁrst two
case studies will be almost the same. Now, due to the multi-
objective nature of the third case study, the total number of
referrals will also be more than previous case studies since
the outcome solutions of the Knapsack procedure at each time
interval are near-optimal.
According to Figure 9, the computation time of the total
referrals to the Knapsack procedure increases when the number
of referrals rises. However, this fact is applicable to only
the ﬁrst two case studies. The computation time of running
the multi-objective algorithm is decreased when the number
of referrals to the Knapsack procedure increases. Similar to
the provided descriptions to Figure 7(c), this algorithm does
not seek to obtain the optimal solution of the problem. As a
result, the near-optimal solutions contain a mix of interruptible
and uninterruptible power demand requests. Intuitively, the
uninterruptible power demand requests will not be shifted to
the next intervals and, therefore, the number of Knapsack
procedure’s inputs will decrease.
As the next analysis, Figure 10 displays the differences
between the total electricity costs in the three case studies
based on the variations in PDT. With respect to Figure 7,
computation time increases nearly linearly when PDT changes.
The total electricity cost is the same since the total number
of interruptions decrease when the threshold increases. Thus,
appliances start operating roughly at their desired time. This
causes the peak times to remain over the time (see Figure 6).
Nevertheless, with decreasing the PDT, some of the power
demand requests should be shifted to the low price intervals,
which result in decreasing the total electricity costs. As can be
easily seen, the electricity cost is reduced for 1%, when PDTs
are equivalent to 10% and 100%. Having almost low ﬂuctuat-
ing Danish electricity prices make this very low reduction.
The third case study performs better in terms of electricity
cost reduction. This is due to having a multi-objective problem.
For instance, in the second case study, the algorithms tries
to ﬁnd an optimal solution at each time interval. An optimal
solution should include the maximum number of possible
power demand requests. However, this is different in the
third case study since objectives are conﬂicting. Therefore,
the solution’s size is smaller, which causes the requests being
shifted to lower electricity price periods.
Table IV analyzes the actual required PDT and the differ-
ences at peak time intervals when the assigned PDT changes
based on Equation (8). The variation rates of PDT required for
scheduling the power demand requests in ﬁrst two case studies
are almost the same. If we compare the maximum needed PDT
in the ﬁrst case study with the second one when assigned PDT
rises, we observe that the gradients of maximum needed PDTs
are almost similar to one another. Nevertheless, the decreasing
gradient of PDT, when the system applies the third case study,
is lower than the other case studies. The time interval, at which
the peak demand happens, is equivalent in the ﬁrst two case
studies. This time interval is different in the third case study
due to its multi-objective nature.
According to Equation (7), consumers desire to receive
their appliances in the completed status at the time they expect.
This expected time for each appliance is the sum of the time
periods provided in the scenarios and the corresponding addi-
tional deadline ﬂexibility period. However, it is not possible
to satisfy all consumers due to some restrictions such as PDT.
The average deviation between reception and delivery times of
each appliance of each dwelling for all case studies is pictured
in Figure 11. These waiting times do not result in a violation of
the deadline ﬂexibility constraint. Assigning 60% is beneﬁcial
to minimize the deviation between delivery and reception times
of each appliance in the ﬁrst two case studies. Consumers
have to wait to receive their charged electric vehicle almost
30 minutes when PDT is 60%. For the multi-objective case
study, if PDT is 80%, consumers should wait averagely almost
20 minutes for receiving their charged electric vehicle. It is
worth emphasizing that these waiting times are in addition to
the time it takes to actually charge the EV.
As the ﬁnal analysis, Figures 12 demonstrates the ag-
gregated consumption of the scenarios after applying the
scheduling algorithm. The demand response system endeavors
to ﬂatten the aggregated power consumption over the day.
According to Figure 12(a), it shows the best condition of
aggregated power demand when PDT is equal to 60% (17
kW). If the system does not apply any scheduling algorithm
on the received power demand requests, i.e., PDT is 100%,
the total maximum consumption will be approximately 293
kW. It proves that the demand response system can reduce
the peak demand by 40%. This fact is also applicable to the
second case study shown in Figure 12(b). Finally, it is worthy
to note that since the complexity of the multi-objective case
study is high, it needs a high PDT. Figure 12(c) pictures the
60
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 8.
Total number of referrals to the Knapsack procedure in Algorithm 1
Figure 9.
The computation time of referrals to the Knapsack procedure in Algorithm 1
Figure 10.
Total electricity costs of dwellings in a day based on three case studies
61
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

(a). Deviation time between appliance delivery and reception times based on the ﬁrst case study
(b). Deviation time between appliance delivery and reception times based on the second case study
(c). Deviation time between appliance delivery and reception times based on the third case study
Figure 11.
Deviation time between appliance delivery and reception times based on different case studies
62
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE IV.
MAXIMUM NEEDED PDT AND CORRESPONDING PEAK TIME INTERVAL WHEN THE ASSIGNED PDT CHANGES
Assigned PDT
10%
20%
30%
40%
50%
60%
70%
80%
90%
100%
293 kW
586 kW
879 kW
117 kW
146 kW
175 kW
205 kW
234 kW
263 kW
293 kW
Maximum needed PDT
Case study 1
360 kW
282 kW
222 kW
218 kW
200 kW
175 kW
205 kW
234 kW
263 kW
293 kW
Case study 2
363 kW
287 kW
242 kW
192 kW
155 kW
175 kW
205 kW
234 kW
263 kW
293210
Case study 3
360 kW
322 kW
213 kW
300 kW
298 kW
291 kW
291 kW
234 kW
254 kW
293 kW
Peak time interval
Case study 1
23:35
23:05
22:30
22:30
22:30
11:05
20:20
20:35
11:20
20:30
Case study 2
23:35
23:05
23:05
23:05
22:35
11:20
11:05
20:35
11:20
20:30
Case study 3
23:35
23:05
23:05
23:05
23:05
23"05
23:05
20:35
12:30
20:30
(a). Aggregated power demand of 100 dwellings based on the ﬁrst case study
(b). Aggregated power demand of 100 dwellings based on the second case study
(c). Aggregated power demand of 100 dwellings based on the third case study
Figure 12.
Aggregated power demand of 100 dwellings based on different case studies
63
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

aggregated consumption of 100 dwellings when the system
applies the third case study. In this ﬁgure, the demand response
system will receive the minimum aggregated power demand,
when PDT is equal to 80%. In this status, the maximum power
demand is 234 kW and the achievement is 20%.
VI.
CONCLUSION AND FUTURE WORK
This paper developed a demand response system. It re-
ceived power demand requests of appliances continuously and
scheduled them accordingly. Appliances are classiﬁed based
on the shiftability and interruptibility features. The well-known
“0-1” Knapsack procedure has been applied to the scheduling
problem, when it is necessary to choose some requests to allow
them to start or to continue their duties at the current time
interval and shift the remaining to the future time intervals.
The objectives of the proposed scheduling algorithm are mini-
mizing the total electricity costs and CO2 emission intensities
coupling with maximizing the satisfaction of consumers. In
addition, as constraints, the system attempts to keep the total
power demands under a constant and time-independent power
demand threshold provided by distribution system operators
at each time interval. Consumers may provide time limits
of ﬂexibilities of electricity powers to the demand response
system. These time limit ﬂexibilities of power demand requests
vary among appliances. It helps the system to ﬁnd an optimal
or near-optimal solution (based on the approach used) to decide
when to shift or to interrupt power demand requests. The
results were analyzed based on changing the thresholds. It
was conﬁrmed that applying this kind of threshold led to a
reduction in the total electricity costs, a change in the daily
behavior of consumers in a beneﬁcial way, and additionally, a
ﬂattened aggregated power demand.
An investigation of reformulating the current power
scheduling algorithm to a hierarchical scheduling algorithm to
run in each dwelling is a promising future work. It would be
also interesting to investigate the sensitivity of the scheduling
algorithm to the stochasticity of power proﬁles. In practice, the
adaptation of power demand thresholds can be accomplished
by implementing a control loop between the demand response
system and a gateway deployed in each dwelling.
ACKNOWLEDGMENT
The work in this document has been funded by European
Union Seventh Framework program (FP7/2007-2013) under
grant agreement n◦ 619560 (SEMIAH).
REFERENCES
[1]
R. H. Jacobsen, A. G. Azar, Q. Zhang, and E. S. M. Ebeid, “Home
Appliance Load Scheduling with SEMIAH,” in the Fourth International
IARIA Conference on Smart Systems, Devices, and Technologies
(SMART), 2015, pp. 1–2.
[2]
J. Gao, Y. Xiao, J. Liu, W. Liang, and C. P. Chen, “A Survey of Com-
munication/networking in Smart Grids,” Future Generation Computer
Systems, vol. 28, no. 2, 2012, pp. 391–404.
[3]
A. Soares, Á. Gomes, and C. H. Antunes, “Categorization of Residential
Electricity Consumption as a Basis for the Assessment of the Impacts
of Demand Response Actions,” Renewable and Sustainable Energy
Reviews, vol. 30, 2014, pp. 490–503.
[4]
M. Rastegar, M. Fotuhi-Firuzabad, and F. Aminifar, “Load Commitment
in a Smart Home,” Applied Energy, vol. 96, 2012, pp. 45–54.
[5]
J. S. Vardakas, N. Zorba, and C. V. Verikoukis, “Scheduling Policies
for Two-State Smart-Home Appliances in Dynamic Electricity Pricing
Environments,” Energy, vol. 69, 2014, pp. 455–469.
[6]
P. Stoll, N. Brandt, and L. Nordström, “Including Dynamic CO2
Intensity With Demand Response,” Energy Policy, vol. 65, 2014, pp.
490–500.
[7]
X. He, L. Hancher, I. Azevedo, N. Keyaerts, L. Meeus, and J.-M.
GLACHANT, “Shift, Not Drift: Towards Active Demand Response and
Beyond,” 2013.
[8]
H. Farhangi, “The Path of the Smart Grid,” IEEE Power and Energy
Magazine, vol. 8, no. 1, 2010, pp. 18–28.
[9]
X. Fang, S. Misra, G. Xue, and D. Yang, “Smart grid-The New and
Improved Power Grid: A Survey,” IEEE Communications Surveys &
Tutorials, vol. 14, no. 4, 2012, pp. 944–980.
[10]
P. Palensky and D. Dietrich, “Demand Side Management: Demand
Response, Intelligent Energy Systems, and Smart Loads,” IEEE Trans-
actions on Industrial Informatics, vol. 7, no. 3, 2011, pp. 381–388.
[11]
A. Agnetis, G. Dellino, P. Detti, G. Innocenti, G. de Pascale, and A. Vi-
cino, “Appliance Operation Scheduling for Electricity Consumption
Optimization,” in Proceedings of 50th IEEE Conference on Decision
and Control and European Control Conference (CDC-ECC), 2011, pp.
5899–5904.
[12]
G. O’Brien and R. Rajagopal, “A Method for Automatically Scheduling
Notiﬁed Deferrable Loads,” in Proceedings of IEEE American Control
Conference (ACC), 2013, pp. 5080–5085.
[13]
A. G. Azar, R. H. Jacobsen, and Q. Zhang, “Aggregated Load Schedul-
ing for Residential Multi-Class Appliances: Peak Demand Reduction,”
in Proceedings of the 12th International IEEE Conference on the
European Energy Market-EEM, 2015.
[14]
O. A. Sianaki, O. Hussain, and A. R. Tabesh, “A Knapsack Problem
Approach for Achieving Efﬁcient Energy Consumption in Smart Grid
for End Users’ Life Style,” in IEEE Conference on Innovative Technolo-
gies for an Efﬁcient and Reliable Electricity Supply (CITRES), 2010,
pp. 159–164.
[15]
F. Rassaei, W.-S. Soh, and K.-C. Chua, “Demand Response for Resi-
dential Electric Vehicles With Random Usage Patterns in Smart Grids,”
IEEE Transactions on Sustainable Energy, vol. 6, no. 4, 2015, pp. 1367–
1376.
[16]
M. T. Beyerle, J. A. Broniak, J. M. Brian, and D. C. Bingham, “Manage
Whole Home Appliances/loads to a Peak Energy Consumption,” 2011,
US Patent App. 13/042,550.
[17]
H. Kellerer, U. Pferschy, and D. Pisinger, Knapsack Problems.
Berlin,
Heidelberg: Springer Berlin Heidelberg, 2004, ch. Introduction to
NP-Completeness of Knapsack Problems, pp. 483–493. [Online].
Available: http://dx.doi.org/10.1007/978-3-540-24777-7_16
[18]
K. Florios, G. Mavrotas, and D. Diakoulaki, “Solving Multi-objective,
Multi-constraint Knapsack Problems Using Mathematical Programming
and Evolutionary Algorithms,” European Journal of Operational Re-
search, vol. 203, no. 1, 2010, pp. 14–21.
[19]
R. E. Bellman and S. E. Dreyfus, Applied Dynamic Programming.
Princeton university press, 2015.
[20]
K. Deb, Search Methodologies: Introductory Tutorials in Optimization
and Decision Support Techniques.
Boston, MA: Springer US, 2014,
ch. Multi-objective Optimization, pp. 403–449. [Online]. Available:
http://dx.doi.org/10.1007/978-1-4614-6940-7_15
[21]
H. Ishibuchi, N. Akedo, and Y. Nojima, “Behavior of Multi-objective
Evolutionary Algorithms on Many-Objective Knapsack Problems,”
IEEE Transactions on Evolutionary Computation, vol. 19, no. 2, 2015,
pp. 264–283.
[22]
K. Deb, A. Pratap, S. Agarwal, and T. Meyarivan, “A Fast and Elitist
Multi-objective Genetic Algorithm: NSGA-II,” IEEE Transactions on
Evolutionary Computation, vol. 6, no. 2, 2002, pp. 182–197.
[23]
A. Reinhardt, P. Baumann, D. Burgstahler, M. Hollick, H. Chonov,
M. Werner, and R. Steinmetz, “On the Accuracy of Appliance Identiﬁ-
cation Based on Distributed Load Metering Data,” in Proceedings of the
2nd IFIP Conference on Sustainable Internet and ICT for Sustainability
(SustainIT), 2012, pp. 1–9.
[24]
Nord Pool Spot. Last access on May 4, 2016. [Online]. Available:
http://www.nordpoolspot.com
[25]
Energinet.
Last
access
on
May
4,
2016.
[Online].
Available:
http://www.energinet.dk/
64
International Journal on Advances in Intelligent Systems, vol 9 no 1 & 2, year 2016, http://www.iariajournals.org/intelligent_systems/
2016, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

