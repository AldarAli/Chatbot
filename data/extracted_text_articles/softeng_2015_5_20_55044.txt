Smart City Applications TestBed 
Towards a service based TestBed for smart cities applications 
 
Danilo Silva, Felipe Ferraz  
CESAR – Recife Center for Advanced Studies and 
Systems 
Recife, Brazil 
e-mail: {dls, fsf}@cesar.org.br 
Felipe Ferraz, Carlos Ferraz 
Informatics Center 
Federal University of Pernambuco 
Recife, Brazil 
e-mail: {fsf3, cagf}@cin.ufpe.br 
 
 
Abstract—Cities are facing a new challenge related to their 
population; it is the first time in history that most part of 
human population is now living in metropolis. Within this 
scenario, a city needs to deploy new solutions, presenting 
systems that answers to demands related to Security, Health, 
Resources, Government, Education and other urban daily 
systems to its citizens. In order to keep the creation of such 
solutions, it is vital to present developers with means to 
validate their projects. Focusing on this situation, this paper 
proposes the creation of a configurable testbed, where web 
services represent different systems of a smart city that could 
be consumed by applications in order to validate its 
implementation and features. 
Keywords -  Smart City; TestBed; Solutions; Platform; 
I. 
 INTRODUCTION 
With the fast increase of global urban population, cities 
now face risks in an unprecedented scale. Air pollution, 
lacking transportation infrastructure, uncertain economic 
landscapes, violence and unemployment – to name a few of 
the referred risks- are issues that nowadays can be addressed 
through the proper use of information and communication 
technology (ICT) 0 
Batty et al. [2] reinforce the notion that technology applied 
to the concept of smart cities can help building a future in 
which a city will be interconnected, and relations between 
citizen and services and services to services will create an 
environment with innovative possibilities. Dirks et al. [3] 
stress the importance of software solutions that help society 
interact more efficiently with essential systems of a city. The 
“systems” of the city, in the context used by the referred 
authors, are: water and energy supply, transportation, 
security and healthcare [4][5].  
Despite the fact that smart city applications can help 
society interact more efficiently with the available systems in 
the city, a great obstacle faced by developers, when creating 
new smart city solutions, stem from the difficulty of 
validating and testing their solutions [6][7]. This paper 
proposes a solution as an environment that could help on the 
construction of smart city solutions, with services and a data 
generator. 
This paper is presented as follows: Introduction describes 
the problem. Section II depicts about smart cities and their 
concepts; Section III presents differences between TestBed 
and simulators, also describes related works; Section IV 
explains the proposed solution; Section V has details of the 
proposed TestBed platform architecture, and finally; section 
VI, presents conclusions and future works. 
II. 
SMART CITIES 
Most concerns around the concept of smart cities arise 
because cities have become home of more than 50% of the 
population [3][4][6]. Even more, the cities being the home 
of the largest part of the population, they are the center of 
the modern economies [8].  
Despite the many challenges that branch from the increase 
of urban population, the amount of people that now live in 
big urban centers is still rising [9][10]. In fact, since 2008, 
for the first time in human history, the bigger part of the 
global population is now living in big cities [11][13]. 
In a previous work [5], it was possible to represent a city 
as an operational center that has a set of main services, 
which are vital for the city maintenance. Those services are 
categorized in the following way: Education, Security, 
Transportation, Energy and Water Supply, Healthcare, 
Government.  
Following the same line of development, a smart city is a 
representation of a system of systems. Such characteristic is 
due to the interoperability present in the systems that build 
the infrastructure and environment of the city. They tend to 
cooperate in a way that new solutions for the daily urban life 
are more possible and easier to follow. 
III. 
TESTBED 
A TestBed is a platform for experimentation of large 
projects [14]. It allows testing applications with difficulty in 
accessing inaccessible domains – such as the case with many 
smart city applications [15]. Since smart city applications 
depend on city data to operate, this ends up hindering many 
efforts to create new solutions. Often city data is not readily 
available, or, when they are available, they are not in a 
format that is easily consumable by the applications [14]-
[16]. The objective of this paper is to create a testbed, 
represented by different web services that represent city 
systems that will aid developers to create and test smart city 
applications in different urban landscapes [14][17]. 
A. Simulators vs. Testbeds 
A simulator represents a special case of testbed. The 
main difference is that simulators generate data in real time 
104
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-449-7
SOFTENG 2015 : The First International Conference on Advances and Trends in Software Engineering

while testbeds do not – in this case, data is pre-loaded in the 
storage of the solution [7][15].  
When a simulator is used as a data generator for a smart 
city application, the simulator will generate city data during 
runtime, which has the downside of unpredictability since 
subsequent tests will yield different results. Using a testbed 
has the advantage of allowing consistent ability of repeating 
the tests since the data it provides for the smart city 
application is not prone to change. 
B. Related works 
By relating tests environment with smart cities solutions, 
it is possible to list some projects, such as: SmartGridLab 
[17], I3ASensorBed [12] and SmartSantander [18]-[22]. The 
following section presents a brief explanation about some of 
those solutions: 
  
  SmartSantander - is a project emerged after the 
identification requirement for an experimental Internet of 
Things (IOT) platform, which occurred during a Real World 
Internet congress, in 2009 [20]. Based on those 
requirements, a proposal to create a testbed in Europe 
emerged. The objective was to support research and 
experimentation of architectures, technologies, services and 
applications for IOTs in the context of SmartCities [19].  
 
  I3ASESORBED - The purpose of I3ASENSORBED is to 
create an experimentation testbed for different types of 
demographics -not only for universities but also for anyone 
who intends to create applications or to improve 
communication protocols for Smart Cities [12]. 
 
  NetworkedCITY– An initiative derived from inside the 
IAAC –“Institute for Advanced Architeture of Catalonia” 
that combines physical computation, data visualization, and 
real 
time 
computing 
through 
interoperable 
devices, 
applications and models [23].  
 
  LOG-a-TEC – Conceived in JoJožef Stefan Institute in 
Slovenia, the initiative is an IOT testbed for small cities in 
Europe. Based on wireless sensor technology, its focus is in 
infrastructure of energy management and services [24]. 
 
  Testbed for smart technologies in London – Intel, along 
with Imperial College London and London College, with the 
intent of promoting sustainable and connected cities, started 
an initiative that would turn London into a testbed for smart 
technologies [25]. 
IV. 
PROPOSED SOLUTION 
The result of this work is a Smart City Testbed. A 
solution composed by two main components, an API set and 
a data generator. 
The API set is composed of systems commonly found on 
the environment of the cities. On the following list, we 
detail the main objective of each of those systems [5]. 
 
  Education: It is composed by services responsible for 
managing classes, grades and available courses [3][18] 
those services can help citizens and the government deploy 
or pay more attention to specific areas of expertise. 
 
  Healthcare: Is composed by units of treatment, Medical 
History of the patients with focus in providing a unique 
point of medical registers and hospitals specialties [4][10]. 
 
  Transportation: Promotes improvements in mobility in 
the urban environment. This system receives great attention 
in vehicle traffic research [7], and proposes mechanisms 
related to Traffic Light control and Traffic management. 
 
  Government: Allows more transparency in the way the 
City is managed, for example, how tax money is spent by its 
politics [11]. 
 
  Resources: Provides a way that enables to control the 
expenses of the city resources, such as water and energy 
[17]. 
 
  Security: Related to public safety issues such as reporting 
crime and tracking violent areas [16]. 
To choose and define the mentioned types, we followed 
the approach proposed in a previous work [5], and back on 
this proposal, we summarized the most common types of 
solutions for smart cities. In addition, to determine the main 
goal of each system on this paper, we summarized some 
expectations and comments of related works. 
Finally, Table I presents a compilation of the systems 
mentioned before along with different areas and testbed 
Services.  
 
TABLE I.  
TYPES OF SYSTEMS AND LIST OF SERVICES 
 System Type 
Area/Focus 
Testbed Services 
Education 
Unified Grades 
Register Grades 
View School Record 
Register Absent Days 
Courses 
Register Courses 
View Courses 
Healthcare 
Medical 
Records 
New Entry 
View Medical History of the 
Patient 
Assess Service 
Hospitals 
Add Hospital 
Search for special treatment units 
Rate Hospital 
Transportation 
Control Traffic 
Lights 
Open/Close Traffic Lights 
Detect malfunctioning of Traffic 
Lights 
Traffic control 
Inform Traffic Jams 
View Traffic 
Government 
Taxes 
Add Expenses 
View Expense History 
Registering of 
Occurrences 
Report Occurrence 
Check Occurrence 
Resources 
Consumption 
Register Consumption 
Consumption per Individual 
Consumption per Region 
Interruption of 
Service 
Turn Service Off/On 
Security  
Register 
Occurrences of 
Crime 
Report Crime Occurrence 
View History of Crime 
Occurrences 
Violence level 
per Area 
Add new Area 
Areas by Crime Occurrence 
Assign Police to Area 
105
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-449-7
SOFTENG 2015 : The First International Conference on Advances and Trends in Software Engineering

The model created for the testbed respects three different 
levels, the first one, already presented, is represented by 
systems; each system is divided accordingly to sub areas or 
focus groups. The area represents level two, where one can 
find some specific solutions. For instance, Educational 
System presents unified Grades and Available courses. 
Lastly, layer three presents services built in each area, for 
example, Educational System, which has a unified grade 
solution, that offers services related to: Register Grades, 
View School records, and register absent days. 
V. 
ARCHITECTURE 
In this section, the testbed architecture will be described 
with more details. In addition, the components that were 
used as well as the reason for their adoption will be 
explained.  
A. Application server 
Jetty [26] is the application server chosen because it 
presents the advantage of being easy to set and integrate in 
Eclipse IDE. Another advantage is the fact that it is possible 
to embed Jetty inside of the application (inside of a main 
class, opposed as being packaged in a .war file). The main 
class is responsible for initializing the application server and 
exporting RESTful endpoints (created using JAX-RS of 
Apache CXF project).  
B. Persistence Layer 
On the persistence layer, the Java Persistence API (JPA) 
[27] implemented by Hibernate ORM [28] was used. 
HSQLSDB [29] is the database management system used 
for the solution, it is the selected option because it allows 
memory execution along with our solution, creating a fast 
and flexible solution. It presents downsides related to its 
simplest implementation, however, it is possible to change 
the persistence layer and DataBase by changing a specific 
layer.  
However, the manual utilization of the persistence 
framework generates a repetition of the code, which is 
potentially dangerous due to the lack of appropriate 
persistence session management and JDBC transactions 
(Java’s database connectivity API). 
To overcome this code generation issue, we adopted the 
Spring framework [30] due to its dependency injection, 
persistence session management and JDBC transactions. By 
using Spring it was possible to minimize the code 
generation, speed up the development, reduce the amount of 
errors, and raise the overall quality of the solution. 
C. Architecture Overview 
The way each individual component communicates with 
one another is depicted in Figure 1. As it can be seen, the 
proposed solution follows the 4+1 architecture [31] of 
Philippe Kruchten.  
 
Figure 1.  Architectural components 
D. Generation of Data 
As briefly discussed in this section, a mechanism to 
generate data was created. This mechanism allows the 
creation of various scenarios based on input parameters.  
The parameters that the data generator accepts are the 
following: 
• City spot - latitude and longitude: those values serve as 
a reference to geographical locations of the city. 
• City size: values 1, 2, and 3 define, respectively, small, 
medium, and large cities. This parameter is used with the 
city spot to determine the size of the radius, which helps 
determining if a spot is part of the city. 
• Amount of inhabitants: works as a parameter to 
determine how many inhabitants the city possesses. 
• Amount of accesses per inhabitant of urban systems: 
a number that defines the amount of accesses that each 
system receives by the citizens of the city. 
• System rank index: the system (Resources, Security, 
Education, Healthcare, etc.) receives values from 1 to 5 
that ranks them from most to least accessed. 
Table II serves as an example of input values, passed to 
the generator in order to create a base scenario. 
TABLE II.  
VALUES USED TO CREATE A BASE SCENARIO 
Latitude and Longitude 
52,15 and 0,18 
City size 
1 
Inhabitants 
100 
Amount of accesses 
100 
Resources, Security, Education, Healthcare, 
Transportation, and Government 
1,2,3,1,2,3 
In an early round of tests, Table II represents a city with a 
central point near Cambridge, and its inhabitants will 
perform 10.000 daily accesses to the services API.  
To know how many accesses will be performed, one can 
sum up the “system rank” indexes of the systems. In the 
example previously presented, the result of the sum of 
indexes is 12. It means that, for instance, the Resources 
106
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-449-7
SOFTENG 2015 : The First International Conference on Advances and Trends in Software Engineering

system will be responsible for 1/12 of the total amount of 
accesses, whereas Government will be responsible for 3/12. 
Table III represents the total amount of accesses received 
by each service. 
TABLE III.  
AMOUNT OF SIMULATED ACCESSES BY SYSTEM TYPE 
Resources 
834 
Security 
1.667 
Education 
2.500 
Healthcare 
834 
Transportation 
1.667 
Government 
2.500 
Total 
10.002 
    The creation of a data generator able to create realistic 
data was not the focus of this work. Because of that, it is 
likely to have a scenario where a student enrolls in two 
classes (courses) that happen at the same time. Likewise, it 
is possible to report crimes in the middle of the ocean.  
VI. 
CONCLUSION 
Based on research pertaining testbeds and smart cities, it is 
possible to notice that there is a great demand for testing 
smart city solutions, and that most of the existing testing 
strategies are based on the use of sensors and IOTs.   
The advantage of the proposed solution is the possibility 
to create testing scenarios where validation of ideas and 
solutions for smart cities can be performed without having 
to rely on sensors and IOTs.  
As future works from this research, it is intended to 
improve the data generator creating realistic scenarios and 
to develop a feature that enables the re-execution of 
previously created scenarios. 
REFERENCES	  
[1] 
T. Nam and T. a. Pardo, “Conceptualizing smart city with dimensions 
of technology, people, and institutions,” Proc. 12th Annu. Int. Digit. 
Gov. Res. Conf. Digit. Gov. Innov. Challenging Times - dg.o ’11, 
2011, p. 282. 
[2] 
M. Batty et al., “Smart cities of the future,” Eur. Phys. J. Spec. Top., 
vol. 214, no. 1, Dec. 2012, pp. 481–518. 
[3] 
S. Dirks, C. Gurdgiev, and M. Keeling, “Smarter cities for smarter 
growth: How cities can optimize their systems for the talent-based 
economy”, 
IBM 
Inst. 
Bus. 
Value, 
2010. 
Available: 
http://public.dhe.ibm.com/common/ssi/ecm/en/gbe03348usen/GBE03
348USEN.PDF [Accessed: 15-Feb-2015]. 
[4] 
S. Dirks, M. Keeling, and J. Dencik, “How Smart is Your City?: 
Helping Cities Measure Progress,” IBM Inst. Bus. Value, 2009.  
[5] 
F. Ferraz et al., “Towards a Smart City Security Model Exploring 
Smart Cities Elements Based on Nowadays Solutions.”, ICSEA 2013, 
The Eighth International Conference on Software Engineering 
Advances, pp. 546–550, 2013. 
[6] 
W. M. da Silva, A. Alvaro, G. H. R. P. Tomas, R. a. Afonso, K. L. 
Dias, and V. C. Garcia, “Smart cities software architectures: a survey,” 
Proc. 28th Annu. ACM Symp. Appl. Comput. - SAC ’13, 2013, pp. 
1722–1727. 
[7] 
V. V. Filho, “RTSCUP  : Testbed For Multiagent Systems Evaluation”, 
Thesis, Federal University of Pernambuco, 2008. 
[8] 
J. M. Hernández-muñoz, J. B. Vercher, L. Muñoz, and J. A. Galache, 
“Smart Cities at the Forefront of the Future Internet”, 2011, pp. 447–
462. 
[9] 
 S. Dirks and M. Keeling, “A vision of smarter cities: How cities can 
lead the way into a prosperous and sustainable future,” IBM Inst. Bus. 
Value. June, 2009. 
[10] P. Hall, “Cities of tomorrow: An Intellectual History of Urban 
Planning and Design in the Twentieth Century”, Oxford: Blackwell 
Publishing, 3rd Edition, 2002.  
[11] M. Naphade, G. Banavar, C. Harrison, J. Paraszczak, and R. Morris, 
“Smarter Cities and Their Innovation Challenges,” Computer (Long. 
Beach. Calif)., vol. 44, no. 6, Jun. 2011, pp. 32–39. 
[12] T. Olivares, F. Royo, A. M. Ortiz, and I. Mines-telecom, “An 
Experimental Testbed for Smart Cities Applications”, Proceedings of 
the 11th ACM international symposium on Mobility management and 
wireless access, 2013, pp. 115–118. 
[13] A. Caragliu, C. Del Bo, and P. Nijkamp, “Smart Cities in Europe,” J. 
Urban Technol., vol. 18, no. 2, Apr. 2011, pp. 65–82. 
[14] E. Barreiros, A. Almeida, J. Saraiva, and S. Soares, “A Systematic 
Mapping Study on Software Engineering Testbeds,” 2011 Int. Symp. 
Empir. Softw. Eng. Meas., Sep. 2011, pp. 107–116. 
[15] P. Hanks, S. Pollack, M. Cohen, “Benchmarks, Testbeds, Controlled 
Experimentation and the Design of Agent Architectures,” AI Mag. 
13(4), 1993. 
[16] A. Hahn, A. Ashok, S. Sridhar, and M. Govindarasu, “Cyber-physical 
security testbeds: architecture, application, and evaluation for smart 
grid,” IEEE Trans. Smart Grid, vol. 4, no. 2, 2013, pp. 847–855. 
[17] G. Lu and D. D. W. Song, “SmartGridLab  : A Laboratory-Based Smart 
Grid Testbed,” no. I, 2010, pp. 143–148. 
[18] L. Sanchez, V. Gutierrez, J. A. Galache, P. Sotres, J. R. Santana, and J. 
Casanueva, “SmartSantander  : Experimentation and Service Provision 
in the Smart City”, WPMC 2013 16th International Symposium on, 
2013. 
[19] “SmartSantander.” [Online]. Available: http://www.smartsantander.eu/. 
[Accessed: 01-Apr-2015]. 
[20] “SmartSantanderRA: Santander Augmented Reality Application.” 
[Online]. 
Available: 
http://www.smartsantander.eu/index.php/blog/item/174-
smartsantanderra-santander-augmented-reality-application. [Accessed: 
02-Apr-2015]. 
[21] [“Participatory 
Sensing 
Application.” 
[Online]. 
Available: 
http://www.smartsantander.eu/index.php/blog/item/181-participatory-
sensing-application. [Accessed: 30-Mar-2015]. 
[22] “Smarter 
Travel.” 
[Online]. 
Available: 
http://www.smartsantander.eu/index.php/smart-travel. [Accessed: 01-
Apr-2015]. 
[23] “NetworkedCITY.” 
[Online]. 
Available: 
http://www.iaac.net/smart/?portfolio=networkedcity. [Accessed: 01-
Apr-2015]. 
[24] “LOG-a-TEX - A Smart City IoT testbed.” [Online]. Available: 
http://www.livingbitsandthings.com/in-the-spot-light/8-technology/45-
log-a-tec-a-smart-city-iot-testbed#.UzhUeNxq5fM. 
[Accessed: 
02-
Apr-2015]. 
[25] “Intel turns London into testbed for smart technologies.” [Online]. 
Available: 
http://news.techworld.com/green-it/3359881/intel-turns-
london-into-testbed-for-smart-technologies/. [Accessed: 30-Mar-2015]. 
[26]  “Jetty.” [Online]. Available: http://www.eclipse.org/jetty/. [Accessed: 
02-Apr-2015]. 
[27] “JPA 
- 
Java 
Persistence 
API.” 
[Online]. 
Available: 
http://www.oracle.com/technetwork/java/javaee/tech/persistence-jsp-
140049.html. [Accessed: 30-Mar-2015]. 
[28] “Hibernate ORM.” [Online]. Available: http://hibernate.org/orm/. 
[Accessed: 01-Apr-2015]. 
[29] “HSQLDB.” [Online]. Available: http://hsqldb.org/. [Accessed: 02-
Apr-2015]. 
[30] “Spring 
Framework.” 
[Online]. 
Available: 
http://projects.spring.io/spring-framework/. [Accessed: 02-Apr-2015]. 
[31] P. Kruchten, “Architectural Blueprints — The ‘ 4 + 1 ’ View Model of 
Software Architecture”, IEEE Software 12 (6), vol. 12, November, 
1995, pp. 42–50. 
 
107
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-449-7
SOFTENG 2015 : The First International Conference on Advances and Trends in Software Engineering

