Lifecycle Ontologies: Background and State-of-the-Art 
Alena V. Fedotova, Valery B. Tarassov 
CIM Department  
Bauman Moscow State Technical University  
Moscow, Russia 
e-mail: afedotova.bmstu@gmail.com, vbulbov@yahoo.com  
Dmitry I. Mouromtsev  
National Research University of Information Technologies, 
Mechanics and Optics 
Saint-Petersburg, Russia 
e-mail: mouromtsev@mail.ifmo.ru 
Irina T. Davydenko 
Belarusian State University of Informatics and Radioelectronics 
e-mail: davydenko@bsuir.by 
 
Abstract—The 
problems 
of 
creating 
Lifecycle 
Ontologies are discussed in the paper. The Ontology of 
Lifecycle (both as domain and upper ontology), in 
contradistinction to Lifecycle of Ontology, still remains 
underdeveloped. The interest in these problems is 
related to the need in various lifecycle representations 
and coverings for constructing advanced Product 
Lifecycle Management (PLM) systems. Such PLM-
systems are seen as a keystone for Enterprise 
Engineering (EE). First of all, some definitions and 
viewpoints on EE are discussed. Authors suggest an 
original pyramid of disciplines for EE. Moreover, the 
main goal is to develop a trans-disciplinary, synergistic 
approach to EE based on the integration of Ontological 
Engineering, 
Lifecycle 
Modeling 
and 
Knowledge 
Management. It requires the modeling and co-
ordination of (at least) three lifecycles: product (complex 
technical system) lifecycle, enterprise lifecycle and 
knowledge lifecycle. The problems of lifecycle modeling 
are faced.  
Keywords-Ontological engineering; granular meta-ontology;  
ontological system; lifecycle ontologies; enterprise engineering. 
I. 
 INTRODUCTION  
Nowadays the development of Lifecycle Ontologies for 
EE is of primary concern. Lifecycle specification and 
ontological modeling is a necessary prerequisite for 
deploying EE that becomes a fundamental paradigm for 
building new generation industrial enterprises.  
In this paper we suggest a new trans-disciplinary 
approach 
to 
EE 
that 
encompasses 
Ontological 
Engineering[16][21][24][25], Lifecycle Modeling[8][20]  
and Knowledge Management[13]. Moreover, lifecycle 
engineering is based on three lifecycles – Product Lifecycle, 
Enterprise Lifecycle and Corporate Knowledge Lifecycle.  
Among lifecycle ontologies we pay a special attention to 
granular lifecycle meta-ontology and upper (top-level) 
ontology. A general representation of lifecycle ontology by 
a mind map is given. Lifecycle granulation problems are 
elicited, fine-grained and coarse-grained lifecycle parts are 
specified. To model them, we use an extended Allen’s logic 
[18]. As a result, both abstract and visualized lifecycle 
representations are constructed: they encompass circular, 
sequential, incremental, parallel-sequential, spiral models. 
Abstract models are based on Maltsev’s algebraic system 
[19], ordinary and fuzzy partitions and coverings, 
Archimedean and logarithmic spiral equations [20]. 
The paper is organized as follows. 
In Section II, we present various viewpoints on EE. 
Some basic disciplines of EE are considered and the 
corresponding pyramid visual representation is depicted.  
Section III presents basic ideas of lifecycle engineering 
and lifecycle ontological modeling is seen as a basic 
instrument of lifecycle engineering.  
In Section IV, the formal prerequisites for spiral 
representations are given.  
The perspectives of developing and using formal 
ontological granulation models are discussed in the 
conclusion. 
II. 
INDUSTRIAL ENTERPRISE ENGINEERING: AN 
ONTOLOGICAL APPROACH 
Nowadays, an extremely broad multi-disciplinary area of 
EE has been developed based on systems engineering, 
organization 
theory 
strategic 
management, 
advanced 
information and communication technologies. The objective 
of EE is the design and creation of modern networked 
enterprise as an open sophisticated holistic system by 
modeling and integrating its products, processes, resources, 
organization structures, business operations, etc. In other 
words, EE considers the formation of enterprise as a sort of 
engineering activities. Moreover, it tends to examine each 
aspect of the enterprise, including various resources, 
business processes, information flows, organizational 
structures. 
A conventional consideration of enterprise as a family of 
business processes may break its systemic integrity; here, 
some other approaches are needed, such as constructing 
generalized enterprise architectures with using agent-
oriented technologies [1] and organization ontologies for 
industrial enterprise [2]. 
76
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

Let us discuss some viewpoints on the essence and basic 
disciplines for EE. EE is defined in [3] as a body of 
knowledge, principles, and practices having to do with the 
analysis, 
design, 
development, 
implementation 
and 
operation of an enterprise. It means the shift from Data 
Systems Engineering and Information Systems Engineering 
to Enterprise Ontological Engineering [2]. In [4], three main 
goals of EE are mentioned: intellectual manageability, 
organizational concinnity, social devotion. 
In [5], Martin focuses on seven disciplines of EE 
grouped around value framework: 1) strategic visioning 
viewed as ongoing cycle of value positioning; 2) enterprise 
redesign – discontinuous change in the value definition; 3) 
value stream reinvention – discontinuous change in the 
value offering; 4) procedure redesign –  discontinuous 
reinvention of value creation; 5) total quality management – 
continuing change in value creation; 6) organizational and 
cultural development – continuous value innovation; 7) 
information 
technology 
progress 
(continuous 
value 
enablement). 
According to Vernadat [6] EE is the art of 
understanding, 
defining, 
specifying, 
analyzing 
and 
implementing business processes for the enterprise entire 
life cycle, so that the enterprise can achieve its objectives, 
be cost-effective, and be more competitive in its market 
environment. Here, two basic disciplines for EE are 
enterprise modeling and enterprise integration. 
Below, we propose our pyramid of EE Activities (EEA-
pyramide; see Fig. 1). Our approach to EE is founded on the 
integration of System of Systems Concept [7], Ontological 
Engineering, 
Lifecycle 
Modeling 
and 
Knowledge 
Management. It supposes the specification and co-
ordination of (at least) three lifecycles: product (complex 
technical system), enterprise and knowledge lifecycles 
(Fig. 2). 
 
 
Figure 1. Pyramid of disciplines for EE 
On the one hand, a computer-based integration of 
product lifecycle and knowledge lifecycle leads to the 
fusion of Product Lifecycle Management (PLM) and 
Knowledge Management (KM) technologies. The concept 
of lifecycle represents a basic implementation of systemic 
approach to complex technical objects that consists in 
visualizing their state changes for a temporal interval. By 
the end of XXth century-the beginning of XXIst century the 
notion of lifecycle has become wider. Now it also 
encompasses the stage of recycling (getting back used 
products into a new production process) that underlies the 
idea of lifecycle conversion [8]. On the other hand, the 
participation of enterprise at some alliances or consortiums, 
as well as the formation of extended, virtual or intelligent 
enterprises [9][10] leads to the prolongation of enterprise 
lifecycle best stages such as enterprise growth and maturity.  
Product Specification
Preliminary Design
Conceptual Design
Birth
Usage
Manufacturing
Detailed Design
Formation
Dissolution
Decline
Maturity
Growth
Generation
Representation 
Distribution
Use
Co-Ordination of Product Lifecycle, Enterprise Lifecycle and 
Knowledge Lifecycle
Obsolescence (Modification)
Assessment
Knowledge 
Lifecycle
Enterprise 
Lifecycle
Product 
Lifecycle
KMS
PLM
 
Figure 2. Generalized lifecycle management: towards the integration of 
PLM and KM 
Let us recall that the term «Product Lifecycle» expresses 
the idea of a circulation of produced artifacts between the 
fields of design, production and usage (consumption). 
Product Lifecycle Management is the process of managing 
the entire lifecycle of a product from its conception, through 
design 
and 
manufacture, 
to 
service, 
disposal 
and 
dismantling [11][12]. It integrates data, processes, personnel 
and organizations to provide product’s information 
backbone for networked enterprises. The development of 
PLM-systems requires lifecycle modeling and engineering. 
It means incorporating a variety of key product lifecycle 
values into the most critical production and usage time 
intervals. 
Knowledge management [13] is often defined as the 
process of applying a systematic approach to the capture, 
structuring, dissemination and use of knowledge throughout 
an organization to work faster, reuse best practices, and 
reduce costs from project to project. It is evident that KM 
becomes more and more important for lifecycle knowledge 
in case of virtual enterprises. Thus, management of 
industrial enterprise cannot be generally reduced to 
resource-driven approach, i.e., Enterprise Resource Planning 
(ERP) systems of 1st or 2nd generations. Here an 
ontological approach to lifecycle knowledge management 
and meta-knowledge formation is of special concern, and 
PLM-systems are more suitable as a core of further IT-
77
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

hybrids and synergistic intelligent technologies [22]. Such 
systems generate and support a united information-
knowledge space in the course of product lifecycle (Fig. 2). 
III. 
LIFECYCLE ONTOLOGIES – A KEY TO ENTERPRISE 
ENGINEERING 
Currently, the concept of ontology lifecycle is 
thoroughly developed, but the problems of lifecycle 
ontology and lifecycle ontological modeling are still not 
sufficiently studied (some of them remain open).  
The lifecycle concept may be analyzed from various 
viewpoints; different variants of specifying its phases and 
activities were suggested. In marketing theory products 
follow such stages as introduction, growth, maturity, and 
decline. In industry, all products or systems have a 
particular life span considered as a sequence of stages, 
which is called product lifecycle (or complex system 
lifecycle). The aim of cyclic product definition is to realize 
both products and processes and economic solutions that are 
better and more intelligent by integrating lifecycle 
philosophy into technology and economy.  
Our ontological approach to lifecycle knowledge 
engineering supposes the construction of both visual and 
formal models of lifecycle ontologies. Here, formal models 
are based on Maltsev’s [19] concept of algebraic system, 
whereas visual representations encompass linear, circular 
and spiral models.  
In this paper, the main attention is paid to lifecycle 
ontology viewed as an upper ontology for EE. We also 
introduce the concept of granular lifecycle meta-ontology; it 
is based on such concepts as granule, level, hierarchy, 
relations between levels [14]. 
The 
term 
meta-ontology 
means 
«ontology 
over 
ontologies». 
Meta-ontology 
provides 
us 
with 
both 
appropriate mathematical specification of ontology and 
necessary tools for representing and merging various 
ontologies. The need in granular meta-ontology (opposite to 
conventional singular one) for lifecycle modeling is obvious 
[23].  
Generally, 
lifecycle 
granulation 
supposes 
the 
consideration of such problems as: 1) definition of basic 
granulation principles and criteria; 2) specification and 
interpretation of lifecycle granules; 3) analysis of lifecycle 
granulation approaches and techniques; 4) development of 
formal granular lifecycle models; 5) construction of 
mappings 
between 
various 
granularity 
levels; 
6) 
specification of quantitative parameters of both lifecycle 
granules and granulation process itself.  
It is worth stressing that an optimal granulation level 
does not exist; granule sizes are problem-oriented and 
depend on investigation context. Some lifecycle phases can 
be considered in a more detailed way and other – less 
thoroughly, with taking into account modeling objectives. 
We also envisage lifecycle representations with various 
abstraction degrees: a) rather simple circular representation 
based on either partition or covering; b) more sophisticated 
spiral representations showing interrelations between 
lifecycle phases, as well as between its phases and stages. 
Let us focus on various forms of representing lifecycle 
ontologies. Any cycle, as a whole, is characterized by the 
presence of finite and repetitive parts on some temporal 
intervals; here key parameters are durations. In case of 
complex system’s lifecycle, two basic granule types are 
lifecycle stages and phases. Lifecycle stages are coarse-
grained parts that are usually divided into lifecycle phases, 
fine-grained parts, where each phase corresponds to a 
specific system’s state.  
One of fundamental resources for lifecycle management 
is time. A specific lifecycle feature is its heterochronous 
character, i.e., irregularity related to the difference of 
temporal criteria and constraints on various stages. In fact, 
we try both to accelerate design and manufacturing time and 
slow down usage time. For instance, during the design stage 
a basic criterion is to decrease design time, e.g. by using 
concurrent design strategies [17]. Contrarily, on the usage 
stage we tend to keep or increase reglamentary period, for 
example, by improving maintenance system.   
Two well-known time metaphors – «time wheel» and 
«time arrow» – bring about lifecycle circular and 
consequent time models respectively. On the one hand, 
consequent linear models express such time properties as 
course, ordering facility, irreversibility.  On the other hand, 
circular time models make emphasis on alternations, 
reiterations, rhythms, self-sustaining processes. In our 
paper, we try to reconcile these opposite models by 
constructing and analyzing spiral lifecycle models. Basic 
time theories should be envisaged in the context of lifecycle 
modeling: substantial and relational, static and dynamic, 
pointwise and interval time. 
First of all, we shall represent lifecycle stages in the 
framework of set-theoretic approach as granules obtained by 
partition. Let us introduce natural denotations for complex 
systems’s lifecycle: D – design; M – manufacturing; U – 
use; R – recycling. Тhen, we have   
    LC1=DMU, DM=, MU=, UD=       (1) 
or    LC2 =MUR, MU=, UR=, RM=    (2) 
Here, the structure of LC2 (2) expresses the «ecological 
imperative» of modern manufacturing being tightly related 
to above mentioned Kimura’s lifecycle inversion concept. 
The first lifecycle partition LC1 (1) may be depicted by 
sectors of the circle (Fig. 3). 
 
M
U
D
M
U
D
 
Figure 3. A Circular representation of complex system’s lifecycle: an 
illustration of reducing lead  (design and manufacturing) time and 
increasing period of usage 
78
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

It is worth noticing that the representation of lifecycle by 
partition is rather simplistic and does not express many 
existing interrelations and co-operation links between 
partially overlapping stages. Moreover, this simultaneous 
work enables very important functions. For example, the 
specification is generated by using the information that 
circulates in both usage and design processes, production 
technologies ought to be discussed on the edge of design 
and manufacturing, whereas maintenance requires the 
collaboration of users and manufacturers. Taking into 
consideration such factors, we obtain the circular lifecycle 
model with fuzzy boundaries. For these cases, lifecycle 
granulation is based on covering (Fig. 4). Here, 
      LC1=DMU, but DM,MU,UD       (3) 
D
U
M
 
Figure 4. A Circular lifecycle representation on the basis of covering: the 
presence of collaborative works and fuzzy boundaries between stages 
Generally, our approach is based on relational time 
model and interval time primitives. We use a fuzzy 
extension of well-known Allen’s temporal logic [18] to 
model the links between lifecycle phases (or lifecycle stages 
and phases). These are mainly two types of relations: 
consequence and overlapping relations.    
Let us recall that fuzzy quantity is defined as a fuzzy set 
of the real line. Fuzzy quantities are more suitable to 
describe flexible requirements on lifecycle parts duration.  
We introduce a formal model of lifecycle ontologies 
ONTLC as a quadruple 
ONTLC  =  CLC, RLC, LC, TLC, 
      (4) 
 
where CLC is the set of concepts related to lifecycle, RLC is 
the set of relations between these concepts, LC is the set of 
operations over concepts and/or relations, TLC is the set of 
temporal characteristics for lifecycle. 
Basic concepts for lifecycle are its phases and stages; 
therefore, the triple below can be taken as lifecycle systemic 
kernel  
ONTS  = S, Rs, Os, 
 
      (5) 
 
where S is the set of lifecycle stages (phases), Rs is the set of 
relations between these stages (phases), Os is the set of 
operations used on these stages (phases).  
It is worth noticing that each lifecycle phase may be 
seen as an interval primitive s=[a, a], where a is the 
starting point and a is the end point of the interval. A fuzzy 
interval extending the concept of an interval is a special 
kind of fuzzy quantity that is represented by a convex fuzzy 
subset of a real line.  As a special case, we have  
ONTS1  = S,  f,   f ,   
 
      (6) 
 
where  f  is a fuzzy strict linear order relation that is non-
reflexive, asymmetric, transitive and linear,  f is a fuzzy 
simultaneity relation, i.e., fuzzy reflexive, symmetric 
relation.  
More generally, we can use the linguistic variable 
«Time» with a linguistically ordered term set such as 
{almost simultaneously, a bit later, later, much later, very 
much later}. 
IV. 
SPIRAL LIFECYCLE REPRESENTATIONS  
The essence of spiral lifecycle model consists in 
integrating two contrary time models: linear model and 
circular model. Linear time model expresses such time 
properties as irreversibility, directional character, ordering 
facility, course, whereas circular time model makes 
emphasis on alternations, reiterations, rhythms, self-
sustaining processes. Spiral time models tend to reconcile 
these two contrary cases.  
Let us recall that in polar coordinates each point on a 
plane is determined by a distance from a fixed point r,  r ≥ 0 
and an angle  [, +] from a fixed direction: M = (r, ). 
A spiral is a curve that winds around a fixed center point at 
a continuously increasing or decreasing distance from the 
point. Here, we consider two spirals, namely, Archimedean 
spiral and logarithmic spiral. The first one is the locus of 
points corresponding to the locations over time of a point 
moving away from a fixed point with a constant speed along 
a line which rotates with constant angular velocity. It is 
given by the equation  r = a + b, where modifying the 
parameter a will turn the spiral, while b controls the distance 
between successive turnings. In the context of lifecycle, we 
interpret these spiral parameters in the following way: φ is 
the time interval, a is the productivity index, b is the level 
and r is system’s state. 
The Archimedean spiral has the property that any ray 
from the origin intersects successive turnings of the spiral in 
points with a constant separation distance. Hence, such 
lifecycle features as time acceleration on early phases of 
lifecycle (for instance, decrease of design time) or time 
deceleration on later phases (increase of usage period) 
cannot be taken into account by using the Archimedean 
spiral (Fig. 5). Oppositely, in a logarithmic spiral these 
distances, as well as the distances of the intersection points 
measured from the origin, form a geometric progression 
(Fig. 6). 
 
79
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

 
O
y
x
a
 
Figure 5. Archimedean spiral 
Figure 6. Logarithmic spiral 
In particular, the spiral model is the most suitable 
approach to system’s lifecycle knowledge engineering. The 
amount of knowledge is not equal for different lifecycle 
phases. One possible pitfall of using the spiral model is the 
number of rounds needed in developing a complex system 
(such as an aircraft). The pitfall can be avoided by using as 
reliable as possible methods in knowledge acquisition and 
elicitation. Mostly this knowledge representing a level of 
lifecycle granulation is expressed by a sort of Zadeh’s 
generalized constraints [14] and circulates in a linguistic 
form, for instance, «to build a more detailed representation 
of maintenance phase» or «to take into account more 
knowledge about recycling».  
Let us give an example of spiral lifecycle representation 
(Fig. 7). The starting point in product’s evolution is a need 
formation in the usage (consumption) sector and the final 
state of the product is its disposal (elimination) interpreted 
as «a black hole». Spiral model phases are located in three 
sectors: design, manufacturing, usage.  
Let us describe the main lifecycle phases for aircraft. 
Numbers in the Fig.7 describes the lifecycle phases. At the 
beginning of the lifecycle we have the identification of 
social need for a new product and formulation of 
appropriate product functions (phase 1). This phase is drawn 
as a circle belonging to the exploitation sector. The second 
step is the evaluation of production scales (a number of 
possible users) and the assessment of plausible product’s 
price (phase 2) for the period of design solutions and 
specification of basic production indices. 
Design stage itself starts with forming a specification 
(phase 3) and performing its analysis to generate feasible 
design proposal (phase 4). This step is shown by a circle on 
the boundary between exploitation and design sectors, 
because basic product’s functions and a first draft of 
specification are given by a customer, whereas these 
specifications are converted into design proposal by a 
contractor. To illustrate the importance of this phase let us 
take the example of aircraft’s lifecycle (Fig. 7). Here, basic 
design characteristics are not reduced to such items as mass, 
center of mass co-ordinates, aerodynamic surfaces, central 
tensor of inertia, but also include manufacturability, 
maintenability, serviceability, etc.  
The design proposal ought to contain some technical and 
technico-economical justification of selected structures, 
their comparative estimation with taking into account 
product’s 
structural 
and 
maintenance 
characteristics 
(«Design for Maintenance»).  
A preliminary project supposes information search and 
retrieval concerning available prototypes and analogous 
systems (phase 5). 
 
 
Figure 7. Product lifecycle representation 
Phase 1. Formulation of product function;  
Phase 2. Evaluation of product scales and product's prices;  
Phase 3. Product specification;  
Phase 4. Specification analysis and formation of design proposal;  
Phase 5. Preliminary project;  
Phase 6. Basic project;  
Phase 7. Detailed project;  
Phase 8. Development of static mockup;  
Phase 
9. 
Generation 
of 
structural-technological 
solutions 
for 
manufacturing;  
Phase 10. Manufacturing pre-planning;  
Phase 11. Development of assembly technology;  
Phase 12. Design of technological equipment;  
Phase 13. Production management design;  
Phase 14. Manufacturing of technological equipment, fixtures and tools;  
Phase 15. Equipment spatial allocation;  
Phase 16. Elaboration of development batch;  
Phase 17. Model (ground) tests;  
Phase 18. Production management;  
Phase 19. Serial production;  
Phase 20. Product's maintenance;  
Phase 21. Product's disposal 
The phase of basic project supposes the justification of 
conceptual design solutions and specification of basic 
production indices (phase 6). Here, necessary data arc 
collected and calculations are made to specify the main 
product parameters, dimensions and form features. Various 
types of design analysis are executed: mass analysis, 
aerodynamic analysis including lift distribution, aerofoil 
design, 
aerodynamic 
performance 
estimation 
and 
confirmation. The construction layout and aerodynamic 
surfaces may be corrected many times to attain required 
aircraft properties. As a result, a detailed project is 
performed to obtain a final structure (phase 7). Here, a 
working documentation is made such as parts drawings, 
assembly drawings with appropriate technical solutions and 
technical requirements. The results of aerodynamic tests 
permit to fix aircraft form and to perform final strength 
analysis. Here, given temperatures and efforts on 
aerodynamic surfaces, so as fight accelerations, on vary 
80
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

possible a materials and reinforcement mode for load-
carrying constructions. One specifies all the dimensions and 
the forms of reinforcement elements, the skin thickness 
ensuring a necessary strength. The data and knowledge on 
mechanical loads are widely used to verify forms and 
dimensions. Here, we deal with an overall construction 
except some parts such as engine, control system with 
devices and drives, or transportable parts obtained through 
plants cooperation. As a result of detailed design, we get 
final technical solutions with all product parameters and 
specifications for manufacturing. Then a static mockup 
(phase 8) is built. The participation of technologists is 
required to generate complex structural-technological 
solutions (phase 9) and organize manufacturing pre-
planning (phase 10). 
The next phases of technological support are assembly 
technology 
development 
(phase 
11), 
technological 
equipment design (phase 12), and production management 
design (phase 13). Now, if the production technical-
economical indices are satisfactory, then we proceed to 
manufacturing of technological equipment; fixtures and 
tools (phase 14), their spatial allocation (phase l5), 
elaboration and assembly of product's development batch 
(phase 16).  
Because the processes of conceptual design and the 
enabling 
production 
technology 
and 
production 
management have rather approximate than precise nature, it 
is natural to expect that product's technical-economical 
indices and performances differ from specifications and 
requirements. Their correspondence to these preliminary 
requirements is specified through model (ground) tests (17) 
in the framework of exploitation sector.  
Basing on results of the model tests a comparison with 
initial specifications is made, and some new local 
specifications are formulated to correct both the product 
structure and the production technology and management 
(18). These steps 3–18 may be repeated on each new spire 
of 
lifecycle’s 
diagram 
(redesign 
and 
production 
modification) until product's performances begin to 
correspond 
to 
general 
specifications. 
Later 
on, 
a 
commercialization stage opens with the start of serial 
production (phase 19), followed by product's usage and 
maintenance (phase 20) and its disposal (phase 21) due to 
obsolescence with taking into consideration economic and 
ecological restrictions.  
Such a representation of product's lifecycle by 
logarithmic spiral simplifies the analysis of concurrent 
engineering problems and the development and adaptation 
of appropriate AI methods and tools. The number of spires 
of 
life-cycle 
diagram 
depend 
оn 
the 
level 
of 
informational/intelligent support and may be interpreted as a 
degree of simultaneous engineering.  
Uncertain and imprecise knowledge on products' 
structure and its manufacturing technology, imperfect 
design and simulation models necessitate a repeated passing 
of production stages followed by exploitation tests in order 
to verify how initial specifications are satisfied. According 
the estimates of Russian experts in aerospace technology 
[17], the duration of first life-cycle's spire until first 
exploitation tests is 15% and the cost of this first spire 
establishes 25% of the integral duration and cost 
respectively to compare with the whole product' refinement 
phase until meeting initial specifications/requirements. 
V. 
CONCLUSION 
The new approach to EE centered on various lifecycle 
models has been proposed. On the one hand, it provides a 
theoretical background for implementing various lifecycle 
ontologies to develop advanced knowledge-based PLM 
systems. On the other hand, a system of lifecycle ontologies 
seems to be a necessary tool for mutual understanding and 
join work of all enterprise actors - both human and artificial 
agents. Here, the main difficulties consist in different ways 
of information granulation along the whole lifecycle. 
Lifecycle Ontologies has been considered as a core of EE. 
Granular lifecycle meta-ontology and upper ontology are of 
special concern. Both abstract and visualized lifecycle 
representations have been constructed; they encompass 
circular, sequential and spiral models. The emphasis has 
been made on spiral representations with using the 
Archimedean and logarithmic spirals. 
Our future work will be focused on specifying basic 
indices for granular ontologies and developing an 
ontological sub-system for intelligent PLM-system.  
ACKNOWLEDGMENT 
 This work has been supported by Russian Foundation for 
Basic Research (Project No 15-57-04047, 15-07-05623, 16-
37-50025). 
 
REFERENCES 
[1] V. B. Tarassov, “From Multi-Agent Systems to Intelligent 
Organizations”, Moscow: Editorial URSS, 2002 (in Russian) 
[2] J. Dietz, “Enterprise Ontology–Theory and Methodology”, Berlin: 
Springer-Verlag, 2006. 
[3] D. Liles, M. E. Johnson, L. M. Meade, and D. Ryan,  “Enterprise 
Engineering: a Discipline?”, Proc. Society for Enterprise Engineering 
Conference, 1995, vol. 6, pp. 1196-1204. 
[4] J. Dietz, et al., “The Discipline of Enterprise Engineering”, 
International Journal of Organisational Design and Engineering, 
2013, vol. 3, no. 1, pp. 86-114. 
[5] J. Martin, The Great Transition: Using the Seven Principles of 
Enterprise Engineering to Align People, Technology and Strategy, 
New York: American Management Association, 1995. 
[6] F. Vernadat, Enterprise Modeling and Integration: Principles and 
Applications, London: Chapman and Hall, 1996. 
[7] System of Systems Engineering: Innovations for the Twenty-First 
Century, Ed. by M. Jamshidi, New York: Wiley, 2008. 
[8] F. Kimura and H. Suzuki, “Product Life Cycle Modeling for Inverse 
Manufacturing”, Proc. IFIP WG 5.3 International Conference on Life 
Cycle Modeling for Innovative Products and Processes (PROLAMAT 
95), Ed. by F.L. Krause, H. Hansen, Berlin: Springer-Verlag, 1996, 
pp. 81-89. 
[9] L. M. Camarinha-Matos and H. Afsarmanesh, “A Comprehensive 
Modeling Framework for Collaborative Networked Organization”, 
Journal of Intelligent Manufacturing, 2007, vol. 18, pp. 529–542. 
[10] V. B. Tarassov, “Special Session on Intelligent Agents and Virtual 
Organizations in Enterprise”, Proc. the 2nd IFAC/IFIP/IEEE 
Conference on Management and Control of Production and Logistics 
81
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

2000 (MCPL 2000), Ed. by Z.Binder, Amsterdam: Elsevier Science 
Publishers, 2001, vol. 2, pp. 475-478. 
[11] A. Saaksvuory and A. Immonen, Product Lifecycle Management, 
Berlin: Springer-Verlag, 2008. 
[12] J. Stark, Product Lifecycle Management: 21st Century Paradigm for 
Product Realization, 2nd ed., London: Springer, 2011. 
[13] K. Wiig, Knowledge Management Foundations, Arlington, TX: 
Schema Press, 1993. 
[14] L. Zadeh, “Toward a Theory of Fuzzy Information Granulation and 
its Centrality in Human Reasoning and Fuzzy Logic”, Fuzzy Sets and 
Systems, 1997, vol. 90, pp. 111-127. 
[15] A. Bargiela and W. Pedrycz, Granular Computing: an Introduction, 
Dordrecht: Kluwer Academic Publishers, 2003. 
[16] H. S. Pinto, S. Staab, C. Tempich, “DILIGENT: Towards a fine-
grained methodology for DIstributed, Loosely-controlled and 
evolvInG Engineering of oNTologies”, Proc. the 16th European 
Conference on Artificial Intelligence (ECAI), IOS Press, 2004, pp. 
393-397.   
[17] V. B. Tarassov, L. A. Kashuba, and N. V. Cherepanov, “Concurrent 
Engineering and AI Methodologies: Opening New Frontiers”, Proc. 
the IFIP International Conference on Feature Modeling and 
Recognition in Advanced CAD/CAM Systems, vol. 2, May 1994, pp. 
869-888. 
[18] J.F. Allen, “Maintaining knowledge about temporal intervals”, 
Communications of the ACM, 1983, vol.26, pp. 832-843. 
[19] A. Maltsev,  Algebraic systems, North-Holland Amsterdam, 1973.  
[20] A. V. Fedotova and V. B. Tarasov, “Development and Interpretation 
of Spiral Lifecycle’s Model: a Granular Computing Approach. Part 1. 
Lifecycle Granulation and Spiral Representation”, Proc. Seventh 
International Conference on Soft Computing, Computing with words 
and Perceptions in System Analysis, Decision and Control (ICSCCW 
13),  Sept. 2013, pp. 431-440. 
[21] S. F. Mari Carmen, A. Gómez-Pérez, M. Fernández-López, “NeOn 
Methodology for Building Ontology Networks: Specification, 
Scheduling and Reuse”, Applied Ontology, 2015, vol. 10, no. 2, pp. 
107-145 
[22] A. V. Fedotova, I. T. Davydenko, and A. Pförtner, “Design Intelligent 
Lifecycle Management Systems Based on Applying of Semantic 
Technologies”, Proc. the First International Scientific Conference 
“Intelligent Information Technologies for Industry” (IITI 16), 
Springer International Publishing Switzerland, vol. 1, May 2016, 
pp. 251-260, doi: 10.1007/978-3-319-33609-1_22. 
[23] V. B. Tarassov, A. V. Fedotova, and B. S. Karabekov “Granular 
Meta-Ontology, Fuzzy and Linguistic Ontologies: Enabling Mutual 
Understanding of Cognitive Agents”, Proc. the 5th International 
Conference on Control, Automation and Artificial Intelligence (CAAI 
2015), Lancaster PA: DEStech Publications Inc., Aug. 2015, pp. 253-
261. 
[24] M. Fernández-López, A. Gómez-Pérez, N. Juristo, “Methontology: 
From Ontological Art Towards Ontological Engineering”, Proc. 
Spring Symposium on Ontological Engineering of AAAI, AAAI 
Press, 1997, pp. 33-40.   
[25] S. Staab, et al., “Knowledge Processes and Ontologies”, IEEE 
Intelligent Systems, Los Alamitos, CA, USA, 2001, vol. 16, no. 1, pp. 
26–34.  
 
82
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

