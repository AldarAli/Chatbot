Adaptive Virtualisation for Multi Modal Learning Objects 
 
David Newell 
Software Systems Research 
Group 
Bournemouth University 
Bournemouth, UK 
dnewell@bournemouth.ac.uk 
 
 
Philip Davies 
Higher Education 
Bournemouth and Poole 
College 
Bournemouth, UK 
pdavies@bpc.ac.uk 
 
Suzy Atfield-Cutts 
Software Systems Research 
Group 
Bournemouth University 
Bournemouth, UK 
satfieldcutts@bournemouth.ac.uk 
 
 
Andrew Yearp 
Graduate School 
Bournemouth University 
Bournemouth, UK 
ayearp@bournemouth.ac.uk 
 
Abstract - Work by the writers has investigated 
validation methods for creation and manipulation of 
multi modal learning objects in an adaptive Virtual 
Learning Environment (VLE) presentation system. 
This paper investigates the requirements for a robust, 
autonomous, virtual infrastructure needed to simulate 
novel adaptive methods based on fragmentation and 
routing algorithms like OSPF. Evaluation is done of 
virtualised processes adapted on a software router in a 
known infrastructure. Adaption is achieved with 
operations performed on the metadata of learning 
object fragments rather than link states. Execution of 
such models in a 'Semantic Ontology Engine' is 
proposed as an approach to the creation of a cloud 
computing based semantic multimedia VLE, offering 
better personalisation. The findings emerge by means 
of a comparison of simulation results of virtual 
network components. 
 
Keywords – e-learning, adaptive, semantic, ontology. 
I. INTRODUCTION 
  
Previously, an Adaptive Multimedia Presentation 
System (AMPS) has been proposed with semi-automated 
tools for adapting stored computer based learning objects 
to students’ learning needs [1]. It was concluded that a 
novel, autonomous 'Semantic Ontology Engine' is needed 
as a key building block to process learning objects by 
performing 
decomposition, 
fragmentation 
and 
re-
composition. However, a very important research question 
remained unanswered - how to approach the validation of 
multimedia structures built by autonomous semantic 
processes in a VLE, without the services of a human tutor 
to evaluate ‘true’ fragments of learning. 
 
An experimental approach will be taken to verify the 
efficacy of the required semantic ontology function. The 
operational approach employed in this paper starts with a 
survey of various pre-existing virtual network simulation 
tools that are expected to offer at a partial solution to the 
problematic evaluation and verification of metadata 
models that satisfy these complex requirements [2]. The 
resulting tool promises to be an experimental virtual 
infrastructure capable of executing multiple, proposed 
semantic models of ontology engines, each capable of 
manipulating and validating learning objects in a Cloud-
based Adaptive Virtual Environment (CAVE) potentially 
without a human tutor. 
 
Hence, in this paper steps in our research programme 
are set out to provide robust evaluation of a suitable 
model for the semantic ontology engine based on an 
analogy 
with 
network 
routing 
protocols. 
In 
se
 
ction II, a comparison between computer 
networking routing concepts and the requirements for an 
ontology mapping based on an ontology calculus is set 
out. In section III, features of some virtual simulation 
tools are compared in detail. These are commercial 
products or open source from educational institutions, 
with a mixture of local and remotely accessible options. 
Although the review is far from exhaustive, it includes 
some well-known and recently introduced packages. After 
the review of features, one tool is selected for comparison 
with an actual physical network; Section IV gives the 
results of this comparison for two scenarios; Section V is 
an analysis of findings. Finally, Section VI gives 
conclusions about applications of virtualised networks 
simulators to learning objects. 
 
II. 
 A COMPARISON OF ROUTING CONCEPTS AND AN 
ONTOLOGY MAPPING  
  
One of the primary functions of the ontology engine 
will be to retrieve the learning objects for delivery to the 
student, in the sequence in which they will be presented. 
There is unresolved discussion about the most appropriate 
method to achieve this. One approach is the object 
oriented modelling approach of Lee & Chung [21]. We 
propose a new approach based on concepts which are 
already successfully used in computer networking. It 
suggests that the concepts used in the selection of the 
‘best path’ determined by router network devices in a 
computer network between two nodes carrying traffic on a 
digital network may be used as an appropriate analogy for 
learning object retrieval from an ontology network.  
 
A. Pathway Determination 
A key feature of an adaptive learning delivery system 
is a process for the selection of learning materials 
appropriate to the required learning, and suitable for the 
learning level and style of the individual student. In 
computer networking, the selection of the best path for 
traffic delivery is made according to metrics such as ‘hop 
count’ and ‘bandwidth’. This process is successful at 
delivering electronic data worldwide and operating at 
optimum speed within the constraints of the hardware 
available, whatever that may be. The hop count is the 
37
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

number of ‘hops’ to other routers required to reach the 
destination. As distance is measured in terms of hops, 
rather than physical distance, the shortest distance is that 
with the lowest hop count. Bandwidth is the data capacity 
of a link defined in terms of bits per second that can be 
transmitted over the medium. Both are useful indicators of 
speed of delivery. In a virtual learning environment 
similar metrics can be applied such as the distance 
attribute described in our developing ontology calculus. In 
networking, the selection of the path taken by data is 
determined by a device which connects separate networks 
together known as a router. This device makes decisions 
about routes for each packet of data it receives, and that 
decision making process is completed in fractions of a 
second. The high speed is made possible by the narrowing 
of options. Rather than determining the whole path at the 
beginning of the journey, only the next hop is selected. At 
each router the options are narrowed only to the other 
networks which are physically connected.  
 
In our model, the learning objects are likened to the 
nodes of a network that needs to be traversed by the 
student who is seeking to learn a particular subject 
domain. Learning objects are like the routers of a network. 
Though they have no physical connections they are 
connected logically through the ontology. In the same way 
as a network can be mapped, an ontology provides a map 
of the relationships between topics. A model of this is 
described in Davies et al. [22]. Rather than sifting through 
all available learning object segments for related material, 
using the metadata in the learning objects, their position 
within an ontology can be determined at the point of 
implementation. When required, the selection of learning 
objects for presentation can be narrowed down to other 
closely related material. Where selection by searching all 
materials may add a significant time delay, searching only 
closely related materials should be relatively fast. 
 
B. Delivery Methods 
Once materials have been selected, the next stage is 
delivery to students. E-learning should be extended so that 
it is deliverable anywhere and everywhere. This is called 
ubiquitous learning or u-learning. Delivery methods must 
take into account the destination client device when 
presenting learning objects for delivery in a virtual 
environment, for example, a pc or a mobile phone.  
 
In computer networks, routers handle packets 
containing data. The packets are conceptually an outer 
wrapper, allowing packets to be unwrapped and 
rewrapped with new addressing information without 
disturbing the data itself. In fact, there are many layers 
wrapped around the data in a networking scenario. Each 
layer contains different pieces of additional data and at 
several different layers there may be different kinds of 
addressing information. Since only the hop to the next 
router is determined when selecting a route through the 
network during transit, the outer layer is removed at a 
router and the data rewrapped with the address of the next 
destination device. The address of the final destination is 
kept at another layer undisturbed by this process.  
 
 
 
 
 
 
 
 
Figure ****  
 
The outermost layer contains addressing information 
and its format is determined by the media on which the 
frame has to travel. Similarly, in a course delivery system, 
a wrapper around the learning object would determine to 
whom it will be presented, when it will be presented and 
in which order it will be presented. If a learning object is 
to be presented to a particular student then the student 
signature represents the address to which that learning 
object is to be delivered.  
 
TABLE 1. ASSOCIATIONS BETWEEN GRAPH THEORY, NETWORKING 
AND ONTOLOGY DESCRIPTIONS 
 
C. Delivery format 
The format of the information is determined by the 
destination client platform. If the page is to be displayed 
on a pc then a full size web page constructed of html, xml 
and other web technologies is wrapped around the 
learning object. If the student is learning on a mobile 
phone then suitable technologies are required to display a 
page to suit the small screen size and these will wrap 
around the learning object before it is sent to the student’s 
learning platform of choice. Connection speeds may also 
be a metric for changing what is sent.  
Connection speeds may go so far as to affect the 
learning object itself. There is little point in trying to 
download a high resolution image of great size down a 
slow connection to a small phone screen. Perhaps 
enhanced versions (e.g., HD or 3D images) would benefit 
the student using a larger screen. Therefore, each learning 
object may be required to consist of different versions of 
the media file.  
 
Therefore, as when using the Transport Control 
Protocol in digital networking, an initial exchange of 
Graph 
Theory 
Networki
ng 
Ontology 
Node 
Router 
Learning Object 
Link 
Connecti
on 
Relationship 
Node 
location 
IP 
address 
Learning 
object 
identifier 
Algorithm 
Protocol 
Order 
of 
presentation 
n/a 
Wrapper 
Student Signature 
+ other determinants 
(metadata) 
Next hop (router) address information 
Destination address information 
Data 
Figure 1. Model of a frame and some conceptual 
layers in computer networking 
38
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

information between the client and server devices to 
request, and then supply client platform specification in 
terms of both hardware and software must take place. 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure **** -  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Possibilities for required different formats are 
enormous and ever changing, such as different resolutions 
for images and video, different compression rates for 
audio, and different formatting for text e.g., transforming 
a document from a word processor into html to improve 
compatibility. Generating these additional files for each 
object impacts the authorship work load significantly. The 
high level of investment required for production of quality 
learning objects has been an issue since they came about 
as discussed by Boyle [18]. Dynamically generating 
suitable versions from high quality originals is a preferred 
option to increasing storage requirements and second 
guessing possible future platforms.  
 
The investment in authorship workload will mean that 
writers are keen to reuse a learning object in more than 
one area and so its upload to the system requires 
additional consideration. Contextualization of the learning 
object becomes an important consideration if re-use is 
high. This will involve the creation of metadata categories 
to capture the contextualized data. The IEEE 1484.12.1 -
2002 Standard for Learning Object Metadata [3] is an 
internationally 
recognized 
open 
standard 
for 
the 
description of learning objects. Attributes of learning 
objects included could be the type of object, author, 
owner, terms of distribution, format, as well as 
pedagogical attributes, such as levels of difficulty or 
student learning styles. A set of these attributes need 
extension to include context. 
 
Indzhov et al. [19] explain users of such systems are 
often poor at completing metadata requirements. Being 
able to position the object in an ontology map of the 
knowledge domain would aid this process. Ideally, the 
metadata for a learning object, where possible should be 
automatically generated. Bauer et al. [17] discuss the 
possibility of collaborative tagging relying as it does on a 
large enough, and knowledgeable enough audience to 
complete the tagging before use of the semantics within 
the system becomes essential, and so time is required to 
carry out ‘tagging’ before the object itself is useable. 
Automatic metadata generation is a mature development 
area. For instance, if an object contains images much 
work has been done in the area of identifying objects in 
images by many including very recently Amir et al. [16]. 
As a result others have studied the composition of the 
resulting information into metadata that can be used with 
learning objects.  Cardinaels et al. [20] developed a 
indexing interface for automatic meta data generation, and 
more recently Bauer et al. [17] surveyed the tools 
available to do the job and compared them.  
 
Metadata can conceptually be perceived as another 
layer wrapped around the learning object. Indzhov et al. 
[19] discuss using the results of tests for calibrating the 
difficulty levels and usefulness of learning objects, as well 
as the possibility of assessment question generation from 
metadata. By using metadata as a wrapper on the outer 
layer of the learning object, it can be read and updated 
without disturbing the object itself. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
III. 
 NETWORK SIMULATION AND COMPARISON OF 
VIRTUAL ROUTERS 
 
We now turn to a network analogy in more detail and 
consider a closer examination of networking simulation 
tools provides insights into tools useful for modelling an 
1 
2 
3 
1 
2 
3 
1 Request for service – 
suggest communication 
protocols 
 
2 Acknowledge receipt 
– confirm/suggest new 
protocols 
 
3 Acknowledge receipt 
Server 
Client 
Time 
Figure 2. TCP 3 way handshake at start of communication session 
1 Request learning 
material 
 
2 Request for client 
platform details 
 
3 Client platform details 
Server 
Client 
Time 
Figure 3.  System 3 way handshake at start of learning session 
Next hop (router) address information 
Destination address information 
Data 
Figure 4.  Model of a frame and some conceptual 
layers in computer networking. 
When compared with other simulation tools, 
Packet Tracer provides a good range of options 
but is not as fully featured as some other 
packages but was never intended to be so. Its 
biggest advantage is its ease-of-use. It provides a 
very clear and fairly simple user experience 
making it ideal as a starting point for people new 
to both networking and the use of simulations 
within networking. In addition, by the provision 
of facilities like the command line interface it 
also makes it a useful additional tool for more 
advanced users; although it was not intended as a 
design tool it could be used in this way. From the 
usage point of view it's main drawback is the 
tendency to crash when working with larger 
networks or complex relative configurations.  It 
is possible to mitigate this problem by saving 
your work regularly and by maintaining multiple 
versions of this saved work as at times it may be 
valuable to be able to restart from a known point 
(Cisco Systems, 2010; Cisco Systems ).Client 
platform appropriate interface 
Meta Data 
Learning Object 
Figure 5. Model of the learning object wrapped in 
required implementation layers 
39
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

ontology engine to process ontology networks and 
determine the validity of learning pathways. 
 
Due to its nature, discrete event is a method of 
simulation 
suitable 
for 
modelling 
systems 
where 
processes act on discrete units, for example a data packet 
in a communications network, a job on a production line. 
This type of layered operation is important in most types 
of data communications and networked system. It has 
been acknowledged that networks such as these are 
complex in their design and operation. As such, 
simulation is an important tool for designing and 
operating these networks.  
 
For modelling computer networks discrete event 
simulation is the popular choice although other techniques 
are also used. There are many simulation tools for this 
task. For this reason there have been many papers written 
that have reviewed and compared these tools and 
packages. Most of these papers have studied the tools 
from the point of view of their usage and suitability for 
different tasks. This paper intends to look more closely at 
how some of these tools accomplish what they do, with a 
view to adapting network simulation techniques to 
adaptive learning techniques. 
 
Simulation tool packages are well represented in the 
literature and classified into four main branches shown in 
Figure 6. 
 
 
 
These categories are quite broad. This paper is 
concerned with tools for educational and learning 
activities in VLE. It has been acknowledged by a number 
of sources that learning the skills required to design and 
manage computer networks requires practical experience 
in addition to a theoretical base. 
 
The advantages of visualisation compared with 
providing physical facilities are well known.  Use of 
simulation tools to create virtual lab environments 
provides an opportunity to increase access at a lower cost 
than physical equipment, offering the possibility to carry 
out more complex experiments than would otherwise be 
possible.  
 
IV. 
 RESULTS OF THIS COMPARISON FOR SPECIFIC 
SIMULATORS  
 
We now examine two particular systems to illustrate 
the range of usage and properties available.  
D. Packet Tracer  
Cisco Systems has produced Packet Tracer [23] as an 
educational tool for their network academy program to 
assist students with their studies for qualifications such as 
CCNA. It provides many features to assist both students 
and instructors in the field of network design and 
maintenance/management. Features include the ability for 
the instructor to create lab scenarios for students to 
complete, also included within this is the ability to assess 
the students. Beyond these preconfigured networks and 
activities, Packet Tracer also allows the creation of any 
possible topology that can be built using the available 
pallet of hardware.  
 
When simulating the network that is being studied 
there are two options for interaction. The first is real-time; 
in this network reacts as a real-world system would, for 
example if you ping one device from another this would 
occur at realistic speed. The second option for simulation, 
described as simulation mode by Cisco, allows the user to 
slow down the operation of the network to see the 
movement of data packets that are visually displayed on 
the network diagram (Figure 21). The speed of this 
animation is controllable as is how quickly it moves to 
each event. This can occur automatically based on the 
speed or can be made manually, allowing students to see 
the movement of data packets within the network. 
 
E. OPNET 
OPNET 
[24] 
is 
a 
commercial 
research 
and 
development package developed by OPNET systems that 
is popular in both research and commercial applications. It 
provides the ability to model wired and wireless networks 
and their interactions using a large library of models 
provided, and also allows the user to modify or create 
their own. These models are created using C++ 
programming language and the source code is included 
for the models provided. 
 
Additionally, the ability to customise the models when 
running simulations in OPNET it is possible to vary the 
level of detail of each simulation run dependent on the 
requirements of the application. To accomplish this, 
OPNET provides three methods of simulation. 
 
The first option, giving the highest level, of detail uses 
discrete event driven simulation OPNET implementation 
of this comes in two forms. The first being sequential 
were all tasks performed a linear fashion on a single 
processor, the second form parallel distributes the tasks 
over multiple processors which can be part of the same 
system for distributing over multiple interconnected 
systems. This latter parallel system improves performance 
Figure 6.    Tool Packages 
                                  
40
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

TABLE 2.  COMPARISON OF NETWORK SIMULATORS 
by spreading the work allowing for faster simulations. 
There are also additional optimisation options provided 
for the discrete event simulation. The second option, flow 
analysis(tm) uses analytical modelling to provide a faster 
but less detailed simulation, ideal for the use with 
simulation large networks and repetitive scenarios such as 
modelling the effect of failures on traffic with the network 
where it is necessary to run many iterations of simulation. 
The third option is a hybrid of the first two techniques 
allowing for balance of speed and detail within one 
simulation. 
 
These methods coupled with the large library of 
simulation models allow the OPNET user to create 
networks varying from a small office all the way up to 
world-wide communication systems. 
 
F. GNS3 
 GNS3 [25] is an open source package created to allow 
users to practice configuring Cisco Systems networking 
devices in a realistic environment without the need to 
purchase 
expensive 
equipment. 
This 
has 
been 
accomplished by emulating the heart of a number of such 
devices. In turn this allows the user to run genuine 
software from the device on a normal computer system. 
Although the emulation provides a comprehensive set of 
hardware features it cannot provide the same speed of 
response times as the real equipment. The biggest 
drawback for this package is that it does not support many 
newer devices as these use proprietary integrated circuits 
that so far, and probably never will be emulated in 
software. There are moreover also changes occurring in 
the newer versions of Cisco's software that will change its 
licensing mechanism, requiring activation beforehand, 
thus preventing unauthorised installation and use . 
 
V. 
 ANALYSIS OF FINDINGS. 
Although the above systems by no means constitute an 
exhaustive c exploration of the available solutions, it has 
considered some of the most popular and new options. 
Each of these tools has its own advantages and in many 
cases its own niche in the market. It is not possible to 
make a sweeping conclusion about which tool is best as 
each tool has its own place and time. For example, for a 
beginner to networking Packet Tracer is ideal, but for a 
researcher studying performance of wireless networks 
OPNET could be the tool of choice.  
 
Table 2 shows a comparison of simulators including 
tools for which there was insufficient space to discuss in 
detail here. 
 
VI. 
 CONCLUSIONS AND FUTURE WORK  
 
Investigations into network simulation tools indicate 
that there is scope to consider the use of routing 
algorithms for suggesting analogous models for routing 
learning objects to determine a specific learning pathway 
to specific students. 
 
To take this work further we need to construct a full, 
robust tutor model to automate the learning object 
segmentation process, an investigation of structure of 
metadata and a detailed construction of the student model 
to include the student signature which will directly apply 
the learning-routing algorithm as a wrapper on the 
learning object. Our vision is to build this into a novel 
abstract conceptual data model encompassing all the 
properties that are needed to make explicit the qualities of 
an effective adaptive learning system. In this event 
Critical Success Factors (CSFs) would play a central role 
41
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

in determining the choice of the best network software 
tool needed for the simulation. The introduction of CSFs 
on which the best network simulation tool will be chosen 
is left to a future paper. 
 
It is acknowledged that this work is in its preliminary 
stages. The next step will involve a simulation for specific 
software tools and simulation in a real environment.  
 
Finally, although work discussed in this paper 
answered research questions posed in previous papers, it 
has indicated further questions with a different emphasis: 
What is the full specification of the ontology required and 
how is it captured? How should the ontology engine 
structure be modelled and evaluated? Can fuzzy logic or 
data mining techniques be candidates for a useful 
algorithm? And “What further adaptation features are 
required and how are they to be evaluated?” We leave 
these questions to a further paper. 
 
VII. REFERENCES 
 
[1] Cutts, S., Davies, P., Newell, D., and Rowe, N., 2009. 
Requirements for an Adaptive Multimedia Presentation 
System with Contextual Supplemental Support Media, 
Proceedings of the MMEDIA 2009 Conference, Colmar, 
France. 
 
[2] Rowe, N., Cutts, S., Davies, P., and Newell, D. 2010 
Implementation and Evaluation of an Adaptive 
Multimedia Presentation System (AMPS) with Contextual 
Supplemental Support Media. Proceedings of the 
MMEDIA 2010 Conference, Athens, Greece. 
 
[3] IEEE. 2001. IEEE Learning Technology Standards 
Committee (LTSC) IEEE P1484.12 Learning Object 
Metadata Working Group; WG12 Home page. 
 
[4] Boyle, T., 2003. Design Principles for Authoring 
Dynamic, Reusable Learning Objects. Australian Journal 
of Educational Technology. 
 
[5] McGreal, R. (Ed.), 2004. Online Education Using 
Learning Objects. London:Routledge, 59-70. 
 
[6] Protégé (2009) Protégé Ontology Editor, Stanford 
University California, USA. http://protege.stanford.edu/ 
[Accessed online April 2012] 
 
[7] Gruber, T., “A Translation Approach to Portable 
Ontology Specifications”, Knowledge 
Acquisition, 5(2), 199-220, 1993. 
 
[8] Newman, M. E. J. “Networks, An Introduction”,  
Oxford University Press, 2010 
 
[9] Codd, E. (1970). ‘Data Models in Database 
Management, ’ACM SIGMOD Record 11, No. 2 
 
[10] Date C. J. (2000). ‘WHAT not HOW: The Business 
Rules Approach to Application Development’ Addison-
Wesley. And Date, C. (2004). ‘Introduction to Database 
Systems’, 8th Ed., Pearson. 
 
[11] Progress (2010) Objectstore, 
http://documentation.progress.com/output/ostore/7.2.0/pdf
/user1/basicug.pdf (Last Accessed Dec 2010) 
 
[12] Lamb, C., Landis, G., Orenstein, J., and Weinreb, D., 
(1991). ‘The Objectstore Database System’, 
Communications of the ACM 34 (10): 50–63. 
 
[13] Date, C., Darwen, H., and McGoveran, D. (1998). 
‘Relational Database Writings 1994-1997’, Addison 
Wesley. 
 
[14] Chen, P. (1976), ‘The Entity-Relationship Model-
Toward a Unified  
View of Data’ (1976), ACM Transactions on Database 
Systems 1/1/1976, ACM-Press. 
 
[15] Chen, P. (2007). ‘Active Conceptual Modelling of 
Learning: Next Generation Learning-Base System 
Development’, with Leah Y. Wong (Eds.). Springer. 
 
[16] Amir, A., Amin M., Anang H. and Khan, A. I. (2011) 
P2P-Based Image Recognition for Component Tracking 
in a Large Engineering Domain. In: The Second 
International Conference on Parallel, Distributed, Grid 
and Cloud Computing for Engineering 2011 (PARENG 
2011), 12-15 April 2011, Ajaccio, Corsica, France. 
 
[17] Bauer, M., Maier, R., and Thalmann, S. 2010. 
Metadata Generation for Learning Objects 
An Experimental Comparison of Automatic and 
Collaborative Solutions 
In: Physica-Verlag HD, E-Learning 2010. 181-195. Isbn: 
978-3-7908-2355-4 
 
[18] Boyle, T. 2002. Design principles for authoring 
dynamic, reusable learning objects. In A. Williamson, C. 
Gunn, A. Young and T. Clear (Eds), Winds of Change in 
the Sea of Learning: Proceedings of the 19th Annual 
Conference of the Australasian Society for Computers in 
Learning in Tertiary Education, pp57-64. Auckland, New 
Zealand: UNITEC Institute of Technology. 
 
[19] Indzhov, H., Totkov, G. and Doneva, R. 2011. E = 
MA2 (e-learning in a Moodle-based adaptive and 
accumulative system). In Proceedings of the 12th 
International Conference on Computer Systems and 
Technologies (CompSysTech '11), Boris Rachev and 
Angel Smrikarov (Eds.). ACM, New York, NY, USA, 
498-503. DOI=10.1145/2023607.2023691 
http://doi.acm.org/10.1145/2023607.2023691 [Accessed 
online April 2012] 
 
[20] Cardinaels, K., Meire, M. and Duval, E. 2005. 
Automating metadata generation: the simple indexing 
42
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

interface. In Proceedings of the 14th international 
conference on World Wide Web (WWW '05). ACM, New 
York, NY, USA, 548-556. 
DOI=10.1145/1060745.1060825 
http://doi.acm.org/10.1145/1060745.1060825 [Accessed 
online April 2012] 
 
[21] Lee, M., Chung, Y. 2010 , "Using object-orientation 
to conceptualize an adaptive learning content management 
system modeling," Advanced Computer Control (ICACC), 
2010 2nd International Conference on , vol.3, no., pp.56-
60, 27-29 March 2010 
doi: 10.1109/ICACC.2010.5486741 
URL: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arn
umber=5486741&isnumber=5486614 [Accessed online 
April 2012] 
 
[22] Davies, P., Newell, D., Davies, A. and Karagözlü, D. 
(2012) Multi Connected Ontologies, (Pre-print)  
arXiv:1112.6090v1 [cs.DL] [Accessed online April 2012] 
 
[23] Cisco Systems, Packet Tracer, 
http://www.cisco.com/web/learning/netacad/course_catalo
g/PacketTracer.html [Accessed online April 2012] 
 
[24] Opnet Technologies Inc. http://www.opnet.com/ 
[Accessed online April 2012] 
 
[25] GNS3, http://www.gns3.net/ [Accessed online April 
2012]
 
43
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-195-3
MMEDIA 2012 : The Fourth International Conferences on Advances in Multimedia

