MDS-based Algorithm for Nodes Localization in 3D Surface Sensor Networks 
 
Biljana Risteska Stojkoska, Danco Davcev 
Faculty of Computer Science and Engineering 
University “Ss. Cyril and Methodius” 
Skopje, Macedonia 
biljana.stojkoska@finki.ukim.mk, danco.davcev@finki.ukim.mk 
 
 
Abstract— As Wireless Sensor Network (WSN) has become a 
key technology for different types of smart environment, nodes 
localization in WSN has arisen as a very challenging problem 
in the research community. Most of the applications for WSNs 
necessitate a priory known nodes positions. In this paper, we 
propose an algorithm for three dimensional (3D) nodes 
localization in surface WSN based on multidimensional scaling 
(MDS) technique. Using extensive simulations, we investigated 
in details our approach regarding different network topologies, 
various network parameters and performance issues. The 
results from simulations show that our algorithm produces 
small localization error and outperforms MDS-MAP in terms 
of accuracy. 
Keywords-wireless 
sensor 
networks; 
multidimensional 
scaling; 3D surface localization; nodes positioning. 
I. 
 INTRODUCTION 
A wireless sensor network (WSN) is a network of 
autonomous distributed sensor devices that obtain various 
measurements of different real-life occurrences [1][2]. After 
taking samples of physical or environmental conditions at 
different locations (light level, air temperature, humidity, 
etc.), each sensor sends data to its closest neighbor 
responsible for retransmitting the packets [3]. The final 
destination is the sink node responsible for storing data or for 
further processing. Although initially developed for military 
applications, today, WSNs are used in many industrial and 
civilian application areas, habitat monitoring, healthcare 
applications and traffic control [4].  
Nodes localization is the basis for many applications of 
WSN, such as event detection and target tracking. A manual 
disposition is impossible not only for large scale WSNs, but 
also when a WSN is deployed on inaccessible terrain. The 
most straightforward solution to the localization problem is 
to apply Global Positioning System (GPS) receivers to each 
node [5]. But it is an expensive solution and inapplicable for 
indoor environments [6][7]. 
Finding out accurate positions of the WSN nodes without 
GPS support has been studied for many years. Many 
different techniques [6][7] have been proposed for solving 
this problem, but most of them consider only two-
dimensional (2D) network. In this paper, we investigate 
multidimensional scaling technique [8] for nodes localization 
in three dimensional surface WSNs. We also propose a 
heuristic approach in distance matrix calculation that 
improves the accuracy compared with well known MDS-
MAP [9]. Henceforth, we will refer to our approach as 
Improved Multidimensional Scaling Algorithm (IMDS). 
The rest of this paper is organized as follows. The second 
section refers to the multidimensional scaling technique for 
nodes localization in 3D-WSN. The third section gives a 
detailed explanation of our IMDS algorithm. Section four 
presents the results provided from our simulations. Finally, 
we conclude this paper in section five. 
II. 
THREE DIMENSIONAL MDS 
Multidimensional scaling (MDS) is a set of analytical 
techniques 
that 
has 
been 
used 
for 
reducing 
the 
dimensionality 
of 
the 
data 
(objects), 
showing 
multidimensional data as points in 2D or 3D space [8]. MDS 
algorithm uses the distances between each pair of object as 
input and generates 2D-points or 3D-points as output. The 
input required by MDS should be presented as distance 
matrix, representing the distances between the objects that 
should be analyzed. The purpose of this method is to 
visualize dissimilarity data in order to better understand and 
comprehend it.  
MDS can be easily translated into WSN domain if the 
sensor network and distances between neighboring nodes are 
represented as a graph with its edges respectively. In WSNs, 
MDS performs as centralized, range-based localization 
algorithm. Distance measurements between each pair of 
neighboring nodes will be collected at the sink node. There, 
all available information will be used in order to obtain the 
unknown distances between non-neighboring nodes.  
There are a few well-known techniques for distance 
measurement between neighboring nodes [6][7][10], like 
Received Signal Strength Indicator (RSSI), Time of Arrival, 
Time Difference of Arrival (TDoA) and Angle of Arrival 
(AoA). RSSI [10] measurement of distances is often 
preferred as it does not require additional hardware. RSSI is 
based on the phenomenon that the intensity of emitted signal 
decreases as the distance from the signal source increases. If 
the function of the attenuation in dependence on a distance is 
known in advance, the distance between the emission source 
and the receiver can be easily estimated. The time needed for 
a message to travel from one node to another is used to 
provide range information in ToA and TDoA techniques, 
while AOA is defined as the angle between the propagation 
direction of the wave and some reference direction. 
The main advantage of using MDS is its ability to 
reconstruct the relative map of the network even when there 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
44

are no anchor nodes (nodes with a priori known location). If 
given sufficient portion of anchor nodes, MDS performs very 
accurate position estimation enabling local map to be 
transformed into an absolute map [9][11].  
There are different versions of MDS for nodes 
localization in a two dimensional WSN. The most popular is 
MDS-MAP, proposed by Yi Shang and Wheeler Ruml [9], 
where Dijkstra algorithm is used to calculate the unknown 
distances from the distance matrix. In [9] it is shown that 
MDS-MAP outperforms other techniques, especially when 
applied on density networks. Other approaches based on 
MDS-MAP exist [12], but most of them are complex and 
thus more computationally dependent. In [13], the authors 
introduce MDS-MAP(P), which is a decentralized version of 
the MDS-MAP.  MDS-MAP(P) outperforms MDS-MAP on 
irregular 
network 
topologies, 
but 
requires 
intensive 
computational resources at each node. It computes local 
maps at each node in the network and then merges local 
maps into a global map. Using absolute positions of the 
anchors, this global map can be easily transformed into an 
absolute map. 
Although a lot of research has been carried out regarding 
MDS-MAP for WSN localization, all of the algorithms 
proposed in the literature based on MDS-MAP consider only 
two dimensional networks. To the extent of our knowledge, 
this is the first research that extensively investigates three 
dimensional surface WSN localization based on MDS. 
A. Multidimensional scaling (MDS) for 3D-WSN 
MDS-MAP for 3D WSN consists of 3 steps: 
• 
Step 1: Calculate shortest distances between every 
pair of nodes (using either Dijkstra’s or Floyd’s all 
pairs shortest path algorithm). This is the distance 
matrix that serves as input to the multidimensional 
scaling in step 2. 
• 
Step 2: Apply classical multidimensional scaling to 
the distance matrix. The first 3 largest eigenvalues 
and eigenvectors give a relative map with relative 
location for each node. 
• 
Step 3: Transform the relative map into absolute 
map using sufficient number of anchor nodes (at 
least 4). 
B. Finding optimal rotation and translation between 
corresponding 3D nodes 
Generating an absolute map (step 3) of the WSN 
requires at least four anchor nodes.  
Let 
}
,
{
2,...,
1
pN
p
p
P =
 and 
}
,
{
2,...,
1
qN
Q = q q
be 
two sets of corresponding nodes, where N is the number of 
anchor nodes in the WSN. We wish to find a transformation 
that optimally aligns the two sets in terms of least square 
errors, i.e., we seek a rotation matrix R and a translation 
vector t such that 
.
)
(
arg min
, )
(
1
2
,
∑
=
−
+
=
N
i
i
i
R t
q
t
Rp
R t
 
 
(1) 
This transformation is also known as Euclidean or 
Rigid transformation, because it preserves the shape and the 
size.  
There are many algorithms purposed in the literature 
that compute a rigid 3D transformation [14]. The most 
explored are based on Singular Value Decomposition 
(SVD), as it is known to be the most stable [15]. Finding the 
optimal rigid transformation with SVD can be broken down 
into the following steps: 
• 
Compute the weighted centroids of both point sets  
,
1
=1∑
=
N
i
ip
N
p
,
1
=1∑
=
N
i
iq
N
q
 
 
(2) 
• 
Compute the centered vectors 
,
:'
p
p
p
i
i
−
=
,
:'
q
q
q
i
i
−
=
i=1,…,N 
(3) 
• 
Compute the 3x3 covariance matrix 
' ,
'
H = P Q T
 
 
 
(4) 
where P’ and Q’ are the 3xN matrices that have 
ip '
 and 
'iq
as their columns, respectively. 
• 
Compute the singular value decomposition 
U V T ,
H
Σ
=
 
 
 
(5) 
The rotation we are looking for is then 
R = VUT ,
 
 
 
(6) 
• 
Compute the optimal translation as 
 
          
Rp
q
t
−
=
. 
        
         (7) 
C. Time complexity of MDS-MAP for 3D-WSN 
In step 1, distance matrix construction using Dijkstra's or 
Floyd's algorithm requires 
( 3)
O n
, where n is the number of 
nodes in the network. In step 2, applying MDS to the 
distance matrix has complexity of 
( 3)
O n
 due to singular 
value decomposition. In step 3, the relative map is 
transformed through linear transformations. Computing the 
rigid transformation takes 
O(N)
time for computing P and Q, 
while computing SVD takes only 
3 )
O( 3
time (since the 
dimension of covariance matrix H is 3x3). Applying the 
transformation (rotation and translation) to the whole relative 
map takes O(n-N) time, where N is the number of anchors 
(N<<n). 
III. 
IMPROVED MDS-BASED APPROACH FOR WSN 
POSITIONING 
In this section, we will explain in details our improved 
multidimensional scaling algorithm (IMDS) for nodes 
localization in WSN. 
MDS is very accurate technique for dimensionality 
reduction. If the correct distance matrix is given as input, 
MDS algorithm will reconstruct the map of the network 
without error. But, calculating distance matrix for networks 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
45

where only distances between neighboring nodes are known 
is not a trivial task. This problem in MDS-MAP is solved by 
applying Dijkstra’s (or Floyd’s) all pairs shortest path 
algorithm. Dijksta’s algorithm is a graph search algorithm 
that solves the single-source shortest path problem. In WSN 
localization problem, the sensor network is represented as a 
graph with non-negative edge path costs, while the real, 
Eucledian distance between two non-neighboring nodes is 
replaced with the distance calculated using Dijksta 
algorithm. But the assumption that Dijkstra distance between 
two nodes correlates with their Euclidean distance is hardly 
true. This approximation produces an error, i.e., the positions 
obtained as MDS output usually differ from the correct 
positions. The difference between the real and the predicted 
positions is known as estimation error. The error is bigger 
when the nodes are in multi-hop communication range, 
which is a common case in obstructed environments. It is 
usually caused by the presence of obstacles or terrain 
irregularities that can obstruct the line-of-sight between 
nodes or cause signal reflections. Fig. 1 shows two examples 
when Dijksta algorithm will calculate much larger distance 
between non-neighboring nodes. Left side of the picture 
shows an example of two nodes A and B that are far from 
each other. The distance between A and B will be calculated 
as AB=a+b+c+d, which is much longer then the real 
Euclidian distance. This scenario is present when the 
network is deployed on vast regions where the radio range of 
the nodes is short compared with the length of the region. On 
the right side of Fig. 1, there is an example where two nodes 
can’t communicate directly although they are very close to 
each other. The reason for this is the presence of obstacle 
that obstructs the line-of-sight. In this scenario, Dijksta 
algorithm is completely inapplicable as it calculates a few 
times longer distance.  
 
 
Figure 1.  Distance approximation 
As it can be seen from the two examples presented in 
Fig. 1, the distance calculated using Dijksta algorithm always 
increase the real distance. In order to reduce this distance, in 
this paper, we propose an alternative heuristic approach. By 
reducing the distance matrix error, we intend to reduce the 
overall estimation error.  
A. Distance matrix calculation 
Consider there are three nodes in a network: A, B and C 
(Fig. 2), with known distances between nodes A and B 
(d1=AB), and between nodes B and C (d2=BC). Since 
distance matrix requires the distances between every pair of 
nodes in the network, the distance between nodes A and C 
has to be obtained. We will refer to this distance as a. 
If maximum radio range of the nodes in the network is R, 
then, we know for sure that node C can lay anywhere on the 
curve C1C2. If Dijkstra’s algorithm is used for this purpose, it 
will calculate the distance a as a=AB+BC, which is the 
longest possible theoretical distance between nodes A and C. 
More precisely, C will lay exactly on C2. On the other hand, 
if we calculate the shortest possible theoretical distance 
between nodes A and C, it will be very close to R. We can 
conclude that: 
R < a ≤ d1+ d2 . 
 
(8) 
 
Figure 2.  Distance approximation 
To minimize the possible error, we purpose a heuristic 
solution that assumes that the node C lies exactly in the 
middle of the curve C1C2. Hence, the distance a=AC can be 
calculated using cosine formula as: 
cos
2
2
1
2
2
2
1
2
⋅
⋅
⋅
−
+
=
d
d
d
d
a
(∢ ABC ). 
(9) 
In order to calculate the distance a, first, we need to find 
the angle using cosine formula: 
∢ ABC = ∢
1
ABC + ∢
C1BC
 
 
 
(10) 
The angle ∢
1
ABC  can be calculated again with the 
cosine formula: 
∢
)
2
arccos(
2
1
2
2
2
2
1
1
d
d
R
d
d
ABC
⋅
⋅
−
+
=
  
 
(11) 
Since  
∢
C1BC
=∢
2
CBC , 
 
 
 
(12) 
∢
C1BC
= 
2
1 ∢
C1BC2
, 
 
 
 
(13) 
∢
C1BC
= 
2
1  (− ∢
1
ABC ), 
 
 
(14) 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
46

∢ ABC  = ∢
1
ABC + 
2
1  (− ∢
1
ABC ), 
 
 
∢ ABC  = 
2
π + 
2
1 ∢
1
ABC   
 
 
(15) 
Finally, 
cos
2
2
1
2
2
2
1
2
⋅
⋅
⋅
−
+
=
d
d
d
d
a
(∢ ABC )= 
 =
cos
2
2
1
2
2
12
⋅
⋅
⋅
−
+
d
d
d
d
(
2
π
 
+ 
2
1 ∢
1
ABC )= 
=
sin
2
2
1
2
2
12
⋅
⋅
⋅
+
+
d
d
d
d
(
2
1 ∢
1
ABC ),  
(16) 
where 
)
2
arccos(
2
1
2
2
2
2
1
1
d
d
R
d
d
ABC
⋅
⋅
−
+
=
 
 
 
(17)
 
We note here that our algorithm preserves the time 
complexity of MDS-MAP algorithm. 
IV. 
PERFORMANCE EVALUATION 
The performance of the algorithms for WSN localization 
depends on different network parameters, such as the 
network topology, the number of anchors (i.e., the anchor-to-
node ratio), the radio range, the density of nodes, etc. Hence, 
the location estimation error is going to be evaluated as a 
function of different parameters. 
A. Network model 
We assume a typical sensor network composed of 
hundreds (or thousands) of sensor nodes deployed uniformly 
across three dimensional monitored area (valley or 
mountain). Each sensor is equipped with an omni-directional 
antenna and has limited resources (CPU, battery, memory, 
etc.). Since radio signals are omni-directional, only nodes 
within certain radio range R can communicate with each 
other. If two nodes are within each others transmission range 
they are called neighbors. Further, we made following 
assumptions: 
• 
Nodes are static and unaware of their location. 
• 
There is a path between every pair of nodes. 
• 
Nodes deployed in close proximity to each other 
exchange messages. 
• 
Each node uses RSSI (or any other) method for 
distance estimation. 
• 
RSSI provide accurate neighboring sensor distance 
estimation. 
We simulated both techniques (MDS-MAP and IMDS) 
on different surface WSNs with Matlab.  
We considered: 
• 
Different network topologies: 
o 
100 nodes randomly deployed on valley 
terrain (topology I) 
o 
100 
nodes 
randomly 
deployed 
on 
mountain terrain (topology II) 
• 
4, 6, 10 and 15 anchors for absolute map 
construction (for 3D rigid transformation SVD 
method was used) 
• 
Different radio ranges (R) that lead to different 
average connectivity (average number of neighbors).  
• 
Radio range error er (from er= 0%R to er=30% R 
with step 5% of R) 
Thus 280 different networks were simulated (2 x 4 x 5 x 
7) and each node location was discovered with both MDS-
MAP and IMDS technique. The connectivity parameter and 
the estimation error for each scenario represent average over 
30 trials for both algorithms. The average estimation error is 
normalized by the radio range R: 
100%
)
(
)
(
distance
1
)
(
)
(
⋅
⋅
−
−
= ∑
=
R
N
n
pos
pos
Error
n
i
true
i
i estimated
,  (18) 
where n is the number of nodes in the network, N is the 
number of anchor nodes, 
posi(estimated)
is the estimated 
location and 
posi(true)
 is the true location of the i-th node. 
B. Comparison of MDS-MAP and IMDS for 3D surface 
WSN 
It is expected that MDS-based algorithms for WSN 
localization will not work well for such scenarios, basically 
because of multi-hop distance between each pair of nodes. 
Our improved heuristic approach presented in this paper is 
expected to achieve more acceptable accuracy. 
Fig. 3 shows an example of two typical 3D surfaces. On 
the upper picture there is a surface, which represents a 
valley, while the lower surface represents a mountain.  In our 
simulations, two scenarios are constructed to emulate a 
terrain with a valley and a terrain with a mountain. 100 nodes 
are deployed randomly with a uniform distribution over 
these two surfaces.  
 
 
 
Figure 3.  Typical 3D surface, valley (upper) and mountain (lower) 
Fig. 4 and Fig. 5 compare the results of MDS-MAP and 
IMDS for topology I and topology II respectively.  
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
47

In the case of topology I (Fig. 4), when er is small, both 
IMDS and MDS-MAP produce very similar estimation error. 
This error is much more affected by the number of anchors. 
As er increases, IMDS performs much better than MDS-
MAP for all connectivity levels, regardless of the number of 
anchors. 
 
 
 
 
Figure 4.  Comparison of MDS-MAP and IMDS for topology I 
In case of topology II, for small er MDS-MAP has 
smaller estimation error than IMDS (Fig. 5). For large values 
of range error er, IMDS is better than MDS-MAP in terms of 
accuracy. 
The characteristics of IMDS to produce smaller 
estimation error than MDS-MAP for large range error er is 
very important, as range measurement in the real 
applications is prone to error. When adopting distance 
measurement based on RSSI, the range error measurement is 
at least 10%R. The results presented in [10] show average 
range error measurement between 5%R and 30%R for longer 
radio range R. Similar research that investigates RSSI is 
conducted in [16] and [17], reporting average error around 
20%R. 
 
Figure 5.  Comparison of MDS-MAP and IMDS for topology II 
The average performance of IMDS as a function of 
connectivity for valley WSN is given on Fig. 6. IMDS is 
very stable and predictive. Estimation error decreases as 
connectivity increases. The radio range error er affects the 
estimation error in a way that larger er deteriorates the 
performance of IMDS. 
As expected, the number of anchors affects the results, 
i.e., having more anchors slightly improves performance for 
all connectivity levels (Fig. 7). 
If we compare the results for topology I and topology II, 
we can notice that both MDS-MAP and IMDS show better 
performance for topology I (valley terrain). The main reason 
for this is the characteristic of the terrain. Valley terrain is 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
48

very regular because all nodes that are within radio range R 
can communicate with each other. Mountain terrain should 
be considered as an irregular topology. The mountain 
presents an obstacle that obstruct the radio propagation 
between the nodes, which means that sometimes nodes that 
are very close to each other cannot communicate, i.e., cannot 
measure the distance between each other. For terrains with 
obstacles, nodes localization problem should be solved 
differently. IMDS algorithm should manage hierarchical 
network organization based on cluster formation. This 
cluster-based approach, which is already developed and 
implemented for 2D networks in [18], should be considered 
for 3D surface networks. 
 
Figure 6.  The effect of range error on the estimation error for topology I 
 
Figure 7.  The effect of number of anchors on the estimation error for 
topology I 
V. 
CONCLUSION AND FUTURE WORK 
In this paper, we implemented improved MDS-based 
algorithm (IMDS) for nodes localization in 3D surface WSN. 
In IMDS, a novel technique for distance matrix refinement 
was introduced in order to reduce the estimation error. We 
investigated two surface network models (valley and 
mountain) and we showed that our approach outperforms 
MDS-MAP in terms of accuracy. IMDS performs much 
better than MDS-MAP especially when radio range error er 
is large. 
For future work, we intend to investigate our algorithm 
on network where nodes are deployed on more complex 3D 
terrains. It is also a challenge to simulate radio propagation 
model in such complex 3D terrains, which is not a trivial task 
due to the presence of obstacles.  
This way, we believe this work will contribute for future 
development of smart network technologies in different 
domains, especially for context- aware applications. 
REFERENCES 
[1] I. F. Akyildiz, S. Weilian, Y. Sankarasubramaniam, and E. Cayirci, A 
Survey on Sensor Network. IEEE Communications Magazine 40, 
2002, pp. 102–114. 
[2] F. L. Lewis, Wireless Sensor Networks, chapter 4  in D. J. Cook and 
S. K. Das, editors, Smart Environments: Technologies, Protocols, and 
Applications, John Wiley, New York, 2004. 
[3] K. Akkaya  and M. Younis, A survey of  routing protocols in wireless 
sensor networks, Elsevier Ad Hoc Network Journal, May 2005, 3(3), 
pp. 325–349. 
[4] C. F. Garcia-Hernandez, P. H. Ibarguengoytia-Gonzalez, and J. A. 
Perez-Diaz, Wireless Sensor Networks and Applications: A Survey, 
IJCSNS International Journal of Computer Science and Network 
Security, 7(3), (2007), pp. 264-273. 
[5] B. W. Parkinson, 1994. GPS eyewitness: the early years. GPS World, 
5(9), pp. 32-45. 
[6] J. Wang, R. K. Ghosh, and S. K. Das, A survey on sensor 
localization, Journal of Control Theory and Applications, 8(1):2-11, 
2010. 
[7] A. Pal, Localization Algorithms in Wireless Sensor Networks: 
Current Approaches and Future Challenges. In Network Protocols 
and Algorithms, 2010, Vol. 2, No. 1, pp. 45-74. 
[8] T. Cox and M. Cox, Multidimensional Scaling, Chapman & and Hall, 
London, 1994. 
[9] Y. Shang, W. Ruml, Y. Zhang, and M. P. J. Fromherz, “Localization 
from mere connectivity,” in Proceedings of ACM International 
symposium on mobile ad hoc networking and computing, June 2003, 
pp. 201-212. 
[10] Z. Jianwu and Z. Lu, ”Research on distance measurement based on 
RSSI of ZigBee,“ Computing, Communication, Control, and 
Management, 2009. CCCM 2009. ISECS International Colloquium 
on , vol.3, 8-9 Aug. 2009, pp. 210-212. 
[11] X. Ji and H. Zha, ”Sensor Positioning inWireless Ad-hoc Sensor 
Networks using Multidimensional Scaling,” Proceedings of 23rd 
Annual Joint Conference of the IEEE Computer and Communications 
Societies (INFOCOM 2004), March 2004, vol. 4, pp. 2662–2672. 
[12] B. R. Stojkoska and V.Kirandziska ”Improved MDS-based algorithm 
for nodes localization in wireless sensor networks,” IEEE 
EUROCON, July 2013, pp. 608-613. 
[13] Y. Shang and W. Ruml, “Improved mds-based localization,” in 
Twenty-third AnnualJoint Conference of the IEEE Computer and 
Communications Societies (INFOCOM), 2004, pp. 2640– 2651. 
[14] D. W. Eggert, A. Lorusso, and R. B. Fisher, “Estimating 3-D Rigid 
Body Transformations: A Comparison of  Four Major Algorithms,” 
Machine Vision and Applications (1997) Vol. 9, No. 5/6, pp. 272–
290. 
[15] A. Lorusso, D. Eggert, and R. Fisher, “A Comparison of Four 
Algorithms for Estimating 3-D Rigid Transformations”, In: 
Proceedings of the 4th British Machine Vision Conference (BMVC 
1995), Birmingham, England, (September 1995), pp. 237-246. 
[16] A. Awad, T. Frunzke, and F. Dressler, “Adaptive distance estimation 
and localization in WSN using RSSI measures,” in Proc. 10th 
Euromicro Conf. Digital Syst. Des. Architectures, Methods Tools 
(DSD) 2007, pp. 471–478.  
[17] A. Faheem, R. Virrankoski, and M. Elmusrati, “Improving RSSI 
Based Distance Estimation for 802.15.4 Wireless Sensor Networks,” 
in Conference Proceedings of the 2010 IEEE International 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
49

Conference on Wireless Technology and Systems (ICWIT 2010), 
Aug. 2010.  
[18] B. Stojkoska, D. Davcev, and A. Kulakov, “Cluster-based MDS 
Algorithm for Nodes Localization in Wireless Sensor Networks with 
Irregular Topologies”, Proceedings of The The Fifth ACM/IEEE 
International Conference on Soft Computing as Transdisciplinary 
Science and Technology (CSTST'08), Paris, France , October 26-30, 
2008, pp. 384-389. 
 
SENSORCOMM 2013 : The Seventh International Conference on Sensor Technologies and Applications
Copyright (c) IARIA, 2013. ISBN: 978-1-61208-296-7
50

