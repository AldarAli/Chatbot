288
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
A Visual Language for the Modelling of Service Delivery Processes to Support 
Business Processes Management
Eunji Lee, Amela Karahasanović, and Ragnhild Halvorsrud 
SINTEF ICT 
Oslo, Norway 
{eunji.lee; amela.karahasanovic; ragnhild.halvorsrud}@sintef.no 
 
 
Abstract—Business process management aims to align the 
business processes of an organisation with customers’ needs. 
Such alignment is of particular importance for services and 
requires a good understanding of the interactions among the 
actors involved. Although several process modelling languages 
and a service design technique called ‘service blueprint’ 
provide good support for modelling of service delivery 
processes, the actual execution of service and networked 
interactions among actors seem to have not been sufficiently 
considered. To overcome these limitations, we developed the 
Service Journey Modelling Language. Each version of the 
language has been evaluated, and the results were used as 
input for the next version. Results from our case studies show 
that our language might supplement the management of 
business processes for services by aligning business processes 
with customer perspectives and by supporting depiction of the 
actual service journeys with networked interactions of involved 
actors using appropriate visual representations.  
Keywords-business process management; service; process 
modelling; service design; visual language.  
I. 
INTRODUCTION 
 
This paper is an extended version of ‘Can Business 
Process Management Benefit from Service Journey 
Modelling Language?’ that was published in the proceedings 
of the Eighth International Conference on Software 
Engineering Advances [1]. While the original paper 
investigated if and how a visual language that presented the 
customer journey through a service might be useful for 
aligning the business processes of service providers with the 
expectations of customers, this paper extends the scope, 
investigating how such a language can support the modelling 
of a service delivery process characterised by many steps, 
actors, and interactions among them. In this paper, we 
distinguish 
services 
from 
products. 
Services 
have 
characteristics that are intangible, extended in time, and 
delivered across various interfaces.  
The importance of services in businesses has grown 
worldwide [2]. The same trend can be seen in the European 
Union (EU), where services generate approximately 70% of 
the EU’s GDP and employment [3].  
Business Process Management (BPM) is a systematic 
approach to support the design, enactment, management, and 
analysis of operational businesses processes [4]. It defines 
business processes, shows the interactions among them, and 
models the organisational structure [5]. The core concepts in 
BPM are efficiency and adaptability. BPM is a collaborative 
effort that involves people and their use of systems in an 
organisation in pursuit of the organisation’s goals. The main 
goal of BPM is to increase the productivity and efficiency of 
the organisation’s work.  
According to Verner [5], there is a lack of techniques for 
designing, analysing, and simulating business processes. She 
argued that process modelling languages are the key 
elements for solving this problem [5]. The importance of 
service in our economy emphasises the need for a good 
understanding of BPM in the context of services.  
Several process modelling languages have been used in 
practice. Basic flowchart, UML activity diagram, and 
Business Process Modelling Notation (BPMN) are some 
examples. However, the customer’s point of view does not 
seem to be included in most of these languages.  
Service blueprint, a process-based technique from service 
design, has been developed to illustrate the customer’s point 
of view, but the interactive and dynamic nature of service 
delivery processes are difficult to capture in the service 
blueprint model [6]. There is a lack of service design 
techniques in which the actual execution of a service, as 
opposed to a presumed or expected execution, can be 
represented or described.  
Moreover, most existing tools for business process 
modelling and service design are rooted in a dyadic 
relationship (one customer and one provider); whereas 
today’s fragmented service models have other relationships 
(one customer and many service providers or actors due to 
outsourcing, specialisation etc.). Tax et al. introduced the 
concept of a service delivery network (SDN) and defined it 
as ‘two or more organisations that, in the eyes of the 
customer, are responsible for the provision of a connected 
overall service experience’ [7]. This implies that there is a 
need for description formats that take a network perspective 
rather than a dyadic perspective. 
In addition, there is a need for a process modelling 
language with sufficient graphical capacity to support the 
description of service delivery processes. Service blueprint 
requires greater visualisation capacity to include more 
information in a service delivery process [6].  
In short, we believe that service providers need an 
appropriate process modelling language that i) takes into 
account the service customer’s point of view, ii) enables the 
presentation of the actual execution of the service delivery 
process, iii) considers the actor network perspective of 
service provision and consumption in the description format, 

289
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
and iv) has rich enough graphical capacity. We believe that 
such a language will eventually contribute to supplement 
BPM for services.  
We developed a visual domain specific language, called 
Service Journey Modelling Language (SJML). SJML aims to 
support the analysis of existing services and the design of 
new services [8]. SJML contains terminology (semantical 
attributes), 
graphical 
attributes 
(symbols), 
syntactical 
attributes, and grammar (rules). To evaluate the very first 
version of the language, we organised a workshop with the 
staff of a university library, focusing on describing and 
redesigning existing services [1]. The language has been 
further developed by project members through discussions 
and workshops, and it has been evaluated in two case studies 
involving an eMarketing company and an energy providing 
company [8].  
This paper extends our previous work by investigating 
how such a language can support the modelling of service 
delivery processes characterised by many actors and steps, 
and how to describe highly complex service delivery 
processes appropriately. To do this, we conducted a case 
study with a referral process. A referral process is the 
process of transferring the care of a patient from one 
medical expert to another [9]. We used our language to 
describe an electronic referral process in a Norwegian 
hospital. Several challenges were identified. To address 
them, we further extended the language.  
The rest of this paper is organised as follows: Section II 
describes the theoretical background and related work in the 
areas of business process modelling and service design 
techniques for process modelling. Section III presents the 
overall requirements for SJML and describes a case study 
with SJML v1.0. Section IV shows the development process 
of SJML v2.0 with details of a case study. In Section V, we 
present and discuss the results from our case studies. 
Section VI discusses the limitations of this study. Section 
VII concludes this paper and proposes future work. 
 
II. 
RELATED WORK 
 
Our work spans quite a number of different disciplines, 
and we have chosen to focus on the following: service 
design, information visualisation, communication theory, 
and modelling languages. In subsection A, we introduce the 
theoretical background of the abovementioned four 
disciplines that are related to our research. In subsection B, 
we describe some existing process modelling languages that 
demonstrate the sequence of steps in a business process. In 
subsection C, we introduce a service design technique that 
has been used to illustrate service delivery processes. In 
subsection D, we discuss the previous mentioned process 
modelling languages and the service design technique, 
concluding that there is a need to develop a new language. 
 
 
A. Theoretical Background 
 
In this subsection, we introduce the theoretical 
background of our research. Relevant knowledge from the 
areas 
of 
service 
design, 
information 
visualisation, 
communication theory, and modelling languages is 
explained. 
 
1) Service Design Phases 
 
Services 
are 
designed 
in 
an 
iterative 
manner 
[10][11][12]. The design of services consists of several 
phases. Dubberly and Evenson. introduced five steps 
(observe, reflect, make, socialise, and implement) [12], and 
Stickdorn 
and 
Schneider 
introduced 
four 
phases 
(exploration, creation, reflection, and implementation) [13]. 
The service delivery processes are specified prior to 
implementation. However, the ‘fuzzy front end’ in service 
design and development has been problematic; thus, there is 
a need for a methodologically structured way to present the 
service delivery processes [14]. 
We aim to research how to assist the activities of 
specifying, describing and analysing the service delivery 
processes to support the service design phases. Information 
visualisation, 
communication 
theory, 
and 
modelling 
languages have formed a theoretical basis for our research. 
 
2) Information Visualisation  
 
Visualisation originally meant forming a mental picture 
of something [15]. Information visualisation is a visual 
representation of abstracted data and concepts that include 
numerical and non-numerical data. A good example of 
information visualisation is weather forecasting. Moreover, 
information visualisation increases human cognition [16] by 
providing (interactive) visual representation of data or 
concepts. The term has slightly shifted in meaning from 
being an internal construct of the mind to an external 
artefact supporting understanding and decision-making.  
Pictures are routinely used to present information in 
different fields such as medicine, architecture, geography, 
statistics and design. One of the advantages of using 
pictures in this way is that a large amount of complex 
information can be quickly interpreted if presented 
effectively. Information visualisation helps people easily 
understand complex information and changes over time that 
would otherwise be difficult to comprehend [17]. Extensive 
research suggests that in many application domains like 
reverse engineering, software restructuring, and information 
retrieval, information visualisation may improve efficiency, 
accuracy, and user satisfaction when solving complex tasks 
[18][19].  
 
 
 

290
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
By 
adopting 
Ware’s 
advantages 
of 
information 
visualisations [20] and Bitner et al.’s gaps model of service 
quality [21], some expected advantages of information 
visualisation in the context of describing service delivery 
process could be: 
• Important information about the described service 
delivery process would be easy to understand.  
• Gaps between the expected or prescribed service 
delivery process and the actually delivered service 
process will be emphasised.  
• Identification 
of 
problem 
areas 
in 
need 
of 
improvement in a service delivery process will be 
facilitated.    
 
3) Communication Theory 
 
Communication is the process of sending and receiving 
messages or transferring information from a sender to a 
receiver. It is often described in accordance with the 
sender/receiver-model developed by Shannon and Weaver 
[22]. The model consists of eight key elements required for 
communication: 
source, 
encoder, 
message, 
channel, 
decoder, receiver, noise and feedback, see Figure 1. 
 
 
Figure 1. Shannon-Weaver's model of communication 
 
The source of communication is the initiator – an 
individual or group - with a message or specific intention to 
start the communication process. The 
message is 
communicated from the source to an intended receiver. The 
encoder provides the format of the message. The channel is 
the mediator of the message and makes sure it is transmitted 
to the receiver. To illustrate, the channel may be verbal, 
written, or electronic. Noise may disturb the transmission 
during the communication process. It could be physical 
noise, like in actual sound transmission. However, it can 
also be semantic noise, for example if the receiver cannot 
understand the message. Before reaching the destination, the 
message must be interpreted or decoded. Feedback indicates 
whether the message has been received and interpreted 
accurately. It ensures that the source knows whether the 
communication was successful. 
Although this linear model was developed in a time with 
no multimedia and interactive environments, it is still a 
widely 
accepted 
model 
when 
drilling 
down 
a 
communication process in its bits and bytes. However, the 
model lacks the relational and cultural factors, so it appeals 
more towards the technological perspectives such as in the 
development of information retrieval systems. Craig 
describes communication theory as a non-coherent field, 
distinguishing seven different traditions or approaches that 
contribute significantly with their characteristic ways of 
defining communication and related challenges [23]. These 
seven traditions are referred to as rhetorical (the practical art 
of discourse), semiotic (inter-subjective mediation by signs), 
phenomenological (experience of otherness and dialogue), 
cybernetic (information processing), socio-psychological 
(expression, interaction, and influence), socio-cultural 
(production of social order), and critical (discursive 
reflection) traditions. 
Semiotics is the study of signs, sign processes, and how 
signs take part in communication. Although semiotics and 
communication have a wide intersection in terms of the 
general phenomena they investigate, their perspectives on 
the underlying theory of communication are very different 
[24]. One semiotic interpretation of the Shannon-Weaver 
communication model was proposed by Jakobson [25]. This 
model consists of six related elements: context, sender, 
receiver, message, code, and channel. The sender and 
receiver may alternate their roles, and the message has a 
context.  
Adopting Jakobson’s semiotic interpretations of the 
Shannon-Weaver communication model [24] might be 
useful when applying information visualisation in service 
delivery process description. Considering the six elements 
of the model might be beneficial for modelling of service 
delivery processes. 
 
4) Modelling Languages 
 
      Modelling languages are artificial languages that show 
systems or information in a structure. A modelling language 
is composed of a description of its semantics and syntax 
[26]. Modelling languages define models that help us to 
understand how things are and how things behave. People 
model a language in order to communicate in a more 
effective and accurate manner and to exchange messages 
quickly and precisely without extraneous information. 
A domain specific language (DSL) is defined as a 
tailored language for particular application domain [27]. 
DSLs have evolved based on the needs for more effective 
communication among people in specific domains. The 
London metro map, which was pioneered by Beck in 1931 
[28], is a good example of DSL. Compared to general 
purpose languages, DSLs offer improved expressiveness 
and ease of use [27].  
A domain specific modelling language (DSML) allows 
description of models in a specific area. Thus, a good 
DSML can support better cooperation in that specific area.  
Developing a DSML might be a good solution for 
describing service delivery processes in order to support 
cooperation in service design. In addition, the DSML would 
support understanding information in service delivery 
processes 
and 
facilitate 
communication 
among 
the 
individuals involved in service design.   

291
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
B. Process Modelling Languages 
 
In this subsection, we present several depictions of a 
service delivery process created using some existing 
modelling languages in BPM. The applied languages are 
process modelling languages focused on representing the 
sequence of steps in BPM. 
We used a referral process as an example to examine 
different techniques. There are essentially two types of 
referrals in Norway: external and internal. An external 
referral indicates a referral from a primary care provider 
(general practitioner, GP) to a secondary care provider 
(specialist). An internal referral indicates a referral from a 
department in a hospital in which a patient is admitted to 
another department in the same hospital or to another 
hospital in the same health region. 
In our case study, we focused on the external referral 
process. The general activities of an external referral process 
in Norway are as follows. First, a patient referral letter (in 
paper or electronic form) from a GP is received in a 
hospital. Second, the letter is assessed by a medical expert. 
Third, depending on the result of the assessment, the patient 
gets an appointment with a specialist or is required to wait. 
Finally, the patient receives treatment, and the specialist 
sends an epicrisis, which is an analytical summary of a 
medical case history, to the GP who sent the referral letter. 
However, the referral process may vary among clinics, 
hospitals and regions. 
In this subsection, an example of the initial part of an 
external referral process to an outpatient clinic in a 
Norwegian hospital is described using different process 
modelling languages. The details of our case study are 
described in Section IV. A.  
Our example begins with a post document centre 
forwarding a referral letter. A specialist then screens the 
referral and, if another specialist group needs to assess the 
referral, returns it to the post document centre. Otherwise, 
the specialist assesses the referral. Depending on the content 
of the referral and the patient case history, the specialist 
assesses whether the patient needs prioritised medical 
assistance. If so, a nurse arranges an appointment for the 
patient. If not, the information is stored in an electronic 
health record (EHR) system for later scheduling. 
  
1) Flowchart 
 
The first process modelling language that was 
examined is a flowchart, which is a type of diagram that 
describes a process or workflow. The steps of the process 
are illustrated with various shapes and arrows that constitute 
the sequence of activities. Flowcharts are used in various 
fields to analyse, design, document or manage a process or 
program [29].  
 Figure 2 shows a basic flowchart describing the initial 
part of the previously mentioned referral process. The 
rounded rectangle on the top indicates the start of the 
process. The rectangle boxes indicate activities. The 
diamonds indicate decision points, and the arrows show the 
activity flow. 
 
Referral came to a 
right specialist group?
A specialist in the 
group screens the 
referral 
The patient has the 
right to be prioritised?
A specialist assesses 
the referral
A nurse arranges an 
appointment for the 
patient
The referral returns to 
the post document 
centre
Patient information is 
stored in the system 
for later scheduling
Yes
Yes
No
No
Post document centre 
forwards a referral to a 
specialist group
 
 
Figure 2. An initial part of a referral process illustrated by a basic flowchart 
 

292
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
2) Unified Modelling Language Swimlane Activity 
Diagram 
 
Unified Modelling Language (UML) is defined as ‘a 
graphical language for visualising, specifying, constructing, 
and documenting the artefacts of a software-intensive 
system’ [30]. UML consists of visual notations and the rules 
for the use. It includes many types of diagrams, such as class 
diagrams, use case diagrams, activity diagrams, etc. Eriksson 
and Penker claimed that the most important UML diagram 
for business process modelling is the activity diagram [31].
 
UML swimlane activity diagram is a type of activity 
diagram that can divide activities by roles or locations. 
Figure 3 shows the initial part of the referral process (the 
same part as Figure 2), which is described using a role-based 
swimlane activity diagram. Each swimlane (column) shows a 
different role participating in the process. The black circle on 
the top indicates the starting point. The diamonds show the 
decision points. The rectangular boxes indicate the activities, 
and the arrows show the transition flow from one activity to 
another. 
Referral process
Post document centre
Specialist
Nurse
Phase
Forward a 
referral 
The referral is 
returned
Screen the 
referral
Assess the 
referral
Arrange an 
appointment for 
patient
Save patient 
information for 
later scheduling
No
Yes
Right specialist group?
The patient has the right to be 
prioritised for medical assisstance?
Figure 3. An initial part of a referral process described with a UML swimlane activity diagram. 

293
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 
3) Business Process Modelling Notation 
 
       Business Process Modelling Notation (BPMN) is 
considered to be an ‘understandable graphical notation for all 
business users’, ranging from business analysts and technical 
developers to business managers, which can reduce the gap 
between business process design and process implementation 
[32]. It describes the steps in a business process using a 
flowchart that defines business process workflows [33]. 
       Figure 4 shows an example of the use of BPMN for the 
initial part of the referral process. Similar to UML swimlane 
activity diagram, BPMN allows for description of the 
swimlane, activity, decision point, event, data object and 
pool, and provides three types of connectors: sequence flow, 
message flow, and association. However, BPMN takes a 
process-oriented approach while UML takes an object-
oriented approach, and BPMN is designed to be more 
suitable for a business process domain so that it can better 
support BPM. In Figure 4, two locations are shown, the post 
document centre and the outpatient clinic in the hospital. In 
our example, there are two actors in the outpatient clinic: a 
nurse and specialist. 
 
C. Technique in Service Design 
 
In this subsection, we introduce a DSML equivalent 
service design technique that describes service delivery 
processes. 
 
 
 
 
 
1) Service Blueprint 
 
Service blueprint is a service design technique 
introduced by Shostack that has been widely used in service 
management and marketing [34]. It shows the series of 
service actions and the time flows that are related to the 
roles of the actors involved in a service delivery process.  
The actions that customers take as part of the service 
delivery process are separated from the actions of the 
contact person by the line of interaction. The line of 
visibility differentiates the actions of an on-stage/visible 
contact person (actions that are seen by the customer) from 
the actions of a back-stage/invisible contact person (actions 
that are not seen by the customer). Support processes, which 
include all the activities carried out by individuals or units 
in the company that are not contact persons, are separated 
from the actions of the contact person by the line of internal 
interaction. Physical evidences refer the media that 
customers come in contact with when they perform their 
actions.  
A service blueprint enables managers to have an 
overview of an entire process and provides useful 
information for the development and evaluation of new 
services [14]. Figure 5 shows the initial part of the referral 
process using the extended service blueprint introduced by 
Bitner et al. [14]. In Figure 5, the customer is a specialist in 
the hospital. 
Receive the 
referral letter 
and screen it
Arrange an 
appointment 
for patient
An outpatient clinic in a hospital
Nurse
Post document centre
A specialist
An referral letter 
arrives
Send the referral 
to a specialist 
group
Came to right 
specialist group?
Patient has the right 
to be prioritised?
Save the 
patient 
information in 
the system
Waiting list
Yes
No
No
Yes
Referral 
[Rejrcted]
Assess the 
referral
Figure 4. An initial part of a referral process illustrated by a BPMN diagram. 

294
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 
 
Figure 5. An initial part of a referral process drawn by a service blueprint 
 
D. Summary 
 
Flowcharts help us understand the overall processes [35], 
but the lack of visual notations to represent actors and their 
interactions might hinder the reader’s ability to clearly 
understand the service delivery process. UML swimlane 
activity diagram shows the sequence of activities with clear 
role definitions [35], but it still does not have any visual 
differentiator for actions and interactions. BPMN is an 
industry standard for process modelling and has visual 
notations for event, data object and various types of 
connectors (sequence flow, message flow and association). 
Nevertheless, it supports no visual differentiator for actions 
and interactions. Recker et al. argued that BPMN still 
requires more symbols with extended expressiveness to add 
sufficient consistency for making the models fit for use [36]. 
Afrasiabi et al. claimed that there is a lack of standard 
graphical notation for business process modelling languages 
[37]. The same applies to service blueprint. There is no 
standard service blueprint with common terminology and 
visual language [38]. Therefore, to include more information 
about a service delivery process, the service blueprint format 
must improve its visualisation capacity [6].  
Flowchart, UML swimlane diagram, and BPMN 
illustrate only the expected service delivery processes. They 
were developed to be used to prescribe planned processes. 
Service blueprint allows us to see the technical parts of the 
service delivery process that customers cannot see. However, 
it often only supports description of the expected service 
delivery processes, not the actually executed ones.  
In addition, service blueprint does not take a network 
view of services. Service blueprint does not support 
describing 
complex 
service 
structures 
that 
involve 
relationships among actors and events [6]. UML swimlane 
activity diagram, and BPMN can support the description of 
networked interactions among actors, but flowchart and 
service blueprint might not be able to do so.  
Table I summarises the different process modelling 
languages and the service design technique for BPM that 
have been described. The second column from the left 
indicates the purpose for using the language or technique. 
The third column indicates whether the language or 
technique considers a service providers’ and/or customers’ 
perspective. The fourth column indicates whether the 
language or technique supports the presentation of actually 
executed service delivery processes or the presentation of 
prescribed service delivery processes. The fifth column 
shows what kind of customer and service provider 
relationship the language or technique supports. 
Flowchart is used to describe a sequence of interactions, 
while UML swimlane activity diagram is used to illustrate a 
sequence of interactions and data. BPMN is used to 
demonstrate a sequence of interactions and data for business 
purpose, and service blueprint is used to draw a sequence of 
interactions for service design. The presented languages and 
technique mainly consider the service providers’ point of 
view. Flowchart, UML swimlane activity diagram, BPMN, 
and service blueprint can support the description of only the 
expected or prescribed execution of a service. UML 
swimlane activity diagram and BPMN can support the 
illustration of networked relationships among the customer, 
service provider, and third party, but flowchart and service 
blueprint support the illustration of the dyadic relationships.  
Therefore, there is a need for a process modelling 
language that includes service providers’ and customers’ 
perspectives, and can support the presentation of the actual 
execution of a service and the networked relationships 
among actors. A service domain specific process modelling 
language that satisfies these aspects will be introduced in 
Section III. This process modelling language was designed to 
address the weaknesses of the existing languages and 
technique by adopting information visualisation and 
communication theory. Thus, it aims to show the interactions 
among different actors in an easily understandable manner. 
In addition, the language was designed to have a rich enough 
graphical capacity to properly illustrate the service delivery 
process. 
 
 
 
 
 

295
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
TABLE I. PROCESS MODELLING LANGUAGES AND SERVICE BLUEPRINT 
 
 
III. 
SETTING THE SCENE: REQUIREMENTS AND EARLY 
VERSIONS OF THE SERVICE JOURNEY MODELLING 
LANGUAGE 
 
This section presents our first steps in developing the 
modelling language. Subsection A describes the overall 
requirements 
and 
the 
development 
procedure, 
and 
subsection B describes the elements of SJML v1.0. 
Subsection C describes the initial feedback on SJML v1.0 
while subsection D briefly describes SJML v1.1.  
 
A. Overall Requirements and Development Process 
 
We wanted to develop a language that supports 
specification, description and analysis of the service 
delivery processes for service design, as described in 
Section II.A. Our language is based on a customer journey 
mapping approach, which is introduced below.  
Customer journey maps (CJM) are widely used in 
service design to visualise service delivery processes from 
the end user’s perspective. CJM allows description of the 
details of service interactions and associated emotions in a 
highly accessible manner [13]. CJM is often structured 
around touchpoints and is confined to a certain period of 
time. A touchpoint corresponds to an interaction between a 
customer and a service provider, but may also denote a 
communication channel between the customer and service 
provider. CJM is one of the most commonly used 
visualisation techniques within service design, where it 
utilised to obtain an overview of the customer’s service 
consuming process. It communicates customer insight [39], 
which in turn can be used to identify problem areas and 
opportunities for innovation [13]. Using CJM, one can 
easily compare a service with its competitors [13].  
We expanded the concept of CJM by addressing the 
requirements that are explained in the next paragraph. The 
research was conducted according to the design science’s 
three phases (problem analysis, solution design, and 
evaluation) in an iterative manner to create artefacts, the 
language and knowledge in the research domain. 
The language we developed was designed to: 
• 
Strengthen customer orientation and facilitate 
collaboration among all actors through a common 
vocabulary and extensive use of visualisation 
• 
Support service design and development by means 
of a precise language for specifying actors, 
interactions among them, the timing of their 
interactions, and the communication channels used  
• 
Support the analysis of services to check  
consistency; in particular, it 
facilitates the 
monitoring of service execution by comparing it to 
the expected or prescribed service delivery process 
Table II provides an overview of the versions of SJML. 
The first column on the left shows the version. The second 
column presents the elements of the version. The third 
column describes the type of the study conducted for 
evaluation and further development. The fourth column 
shows whether the version was evaluated with existing or 
new services. The fifth column presents the degree of 
complexity of the service(s) it portrayed. The sixth column 
shows the place(s) where the version is described. 
A touchpoint is a point of interaction between a 
customer and a service provider, and it is a central element 
of our language. SJML v1.0 consisted of basic elements 
(touchpoint, channel, actor, and status) to describe a 
sequence of touchpoints for expected journeys (sequential 
view). SJML v1.1 added new diagram elements and a 
diagram type. Visual notations for action, decision point, 
concurrency, and un-ordered sequence were added, and a 
deviation view was introduced to describe the actual journey. 
SJML v2.0 added additional diagram elements and adjusted 
some elements. Diagram elements for system activity, 
touchpoint description, and time flow were added, and 
visual notations for touchpoint, action, actor, initiator, and 
recipient were modified. A new diagram type (swimlane 
view) was introduced to illustrate the service journeys of 
several actors to support the description of a networked 
perspective of the service journeys. The evaluations were 
performed by describing services using the three versions of 
our language. The earliest version of the language was 
evaluated by describing simple services (book loan services 
at a library). The results are described in the original paper 
[1]. More complicated services (customer enrolment 
services) from our research partner companies were 
described using SJML v1.1, and the findings were reported 
in a conference paper [8]. SJML v2.0 was developed and 
evaluated by describing an even more complicated service 
(a healthcare service) that involves many actors and the 
interactions among them. The results and findings are 
described in Section IV. 
 
Language/technique 
Purpose of the use 
Perspective of the 
presentation 
Presentation 
type 
Customer and service 
provider relationship 
Flowchart 
Sequencing of interactions 
Service provider–oriented 
Prescriptive 
Dyadic relationship 
UML swimlane activity diagram 
Sequencing of interactions and data 
Service provider–oriented 
Prescriptive 
Networked relationship 
BPMN 
Sequencing of interactions and data 
for business purpose 
Service provider–oriented 
Prescriptive 
Networked relationship 
Service blueprint 
Sequencing of interactions for service 
design 
Service provider–oriented  
(back-stage oriented) 
Mainly 
prescriptive 
Dyadic relationship 

296
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
TABLE II. CHARACTERISTICS OF THE DIFFERENT VERSIONS OF SJML 
 
 
B. Service Journey Modelling Language v1.0 
 
       The first version of SJML (SJML v1.0) consisted of 
terminology, symbols, graphical elements, visual syntax, 
and visualisation modes. As this subsection represents the 
first phase of our research, we wanted to investigate the 
needs of practitioners when designing new services or 
improving existing services; what information about 
customers and their interactions in the service journey is 
essential to be monitored to align business processes with 
customers’ needs.  
       Each touchpoint has a symbol inside a circle. The 
symbol shows a channel or device that is used for the 
touchpoint. The colour of a touchpoint’s boundary indicates 
the actor who initiates the touchpoint. The boundary style 
specifies the status of the touchpoint. The elements for 
SJML v1.0 are detailed below.  
 
• 
Touchpoint. Service journey consists of touchpoints 
that are described with circles.  
• 
Channel. Each touchpoint has a symbol inside a circle. 
The symbol shows a channel or device that is used for 
the touchpoint.  
• 
Actor. The colour of the touchpoint’s boundary 
indicates the actor who initiates the touchpoint.  
• 
Status. The boundary style indicates the execution 
status of the touchpoint (solid boundary: completed, 
dashed boundary: missing, and crossed touchpoint: 
failed). 
C. Evaluation of SJML v1.0 
  
       To obtain initial feedback on SJML v1.0, we organised 
a half-day workshop with library staff. The purpose was to 
investigate SJML v1.0’s feasibility and collect requirements 
for further development. The workshop was arranged for 
June 2013 as a service design seminar on the premises of the 
science library at the University of Oslo. It consisted of a 
lecture about service design and two practical sessions. 
SJML was presented and evaluated during one session.  
 
       The researchers collected data through participatory 
observation and a plenary discussion. Thematic coding [40] 
was used to analyse the field notes of the researchers and 
summarise the results.   
       The SJML session included a short introduction to the 
relevant 
terminology 
and 
visual 
notations, 
and 
a 
presentation of the various exercises to be performed by the 
participants. Twenty-six individuals participated. Seventeen 
were library employees, four were students, and five were 
researchers. The session lasted about 30 minutes and 
concluded with a group discussion. 
Participants were divided into four groups and were 
asked to construct a customer’s service journey of 
borrowing a paper or an electronic book at the library. One 
blank circle plus seventeen book-loan service-relevant 
symbols, which were selected from 32 SJML symbols, were 
given to each group as a set (Figure 6).  
 
 
 
In this workshop, we observed the use of the touchpoints. 
Pen and paper were provided to the groups in order to allow 
them to draw the sequence of the touchpoints. The members 
of the groups were allowed to create their own touchpoint 
with the blank circle in the event they do not find the 
touchpoint they needed. The actor and status attributes of a 
touchpoint were not adopted for this session.  
Version 
Language composition 
Evaluation 
Described 
in 
Type of study 
Service 
type 
Complexity 
SJML 
v1.0 
Basic attributes that form a basic diagram type 
Basic diagram elements (touchpoint, channel, actor, and status) 
supporting description of a basic diagram type (sequential view) 
Preliminary 
experience with  
library services  
Existing 
service and 
new service 
Simple 
service 
[1] and 
Section III. 
of this 
paper 
SJML 
v1.1 
SJML v1.0,  additional attributes, and a new diagram type  
New diagram elements (action, decision point, concurrency notation, 
and un-ordered sequence) and a new diagram type (deviation view) 
were added in SJML v1.0 
Two case studies 
with customer 
enrolment 
services  
Existing 
services 
More 
complicate
d service 
[8] and 
Section 
III.D. of 
this paper 
SJML 
v2.0 
Adjusted  and  additional attributes, and a new diagram type 
Adjusted elements (touchpoint, action, actor, initiator, and recipient),  
new diagram elements (system activity, touchpoint description, and  
time flow),  and a new diagram type (swimlane view) 
A case study with 
a referral process 
in healthcare 
service 
Existing 
service 
Even more 
complicate
d service 
Section IV. 
of this 
paper 
Figure 6. SJML symbols given at the workshop 

297
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
The first task was to construct the customer journey for 
borrowing a paper/electronic book (Figure 7). The process 
of borrowing a book included extension of the loan and 
finished when the book was returned. The second task was 
to construct the customer journey for ordering a 
paper/electronic book that the library did not have. The 
process included extension of the loan and finished when 
the book was returned. Participants were asked to make 
customer journeys for both existing (Figure 7) and desired 
book loan services. 
 
 
 
Figure 7. Participants are on the process of making service journeys for an 
existing book loan service (borrowing of an electronic book) 
 
Results 
We observed that the participants did not have any 
problems understanding SJML and using its symbols. 
Participants were able to construct and explain their service 
journeys using SJML. However, some participants were 
confused about using symbols that looked similar to each 
other, such as the symbols representing PC and web access 
via PC. During the feedback discussion, it became evident 
that the participants missed certain functionalities as 
directing the flow of the process through conditional 
gateways or decision points that occur repeatedly during 
such services. It was also found that more icons would be 
needed to illustrate the library services more precisely. 
D. Service Journey Modelling Language v1.1 
   
Based on the initial feedback on SJML v1.0 and the 
requirements that were subsequently discovered, we 
extended the language. Action was added as one of the main 
elements along with touchpoint, and more touchpoint 
attributes were added. SJML v1.1’s detailed description and 
our experience with the language can be found in [8]. The 
elements for SJML v1.1 are detailed below. 
 
• 
Touchpoint, channel, actor, and status are the same 
as in SJML v1.0. 
• 
Action. A service journey consists of touchpoints and 
actions. An action is an event or activity conducted by a 
customer or service provider as part of a customer 
journey. Unlike a touchpoint, an action does not include 
any form of communication between the customer, the 
service provider or a third party.  
• 
Decision point. A decision point refers to an expected 
customer journey being split into ‘sub-journeys’. It is 
illustrated using a square diamond.  
• 
Concurrency. In some situations, a touchpoint occurs 
at the same time as another touchpoint. We call this 
concurrency and describe it with two separated half-
dotted circles. A visual indicator (two clocks and a 
wave symbol) was introduced to represent the space 
between the two half-dotted touchpoints. 
• 
Unordered sequences. Brackets were introduced to 
describe unordered sequences of touchpoints. 
IV. 
ADDING COMPLEXITY: FURTHER DEVELOPMENT OF 
THE LANGUAGE 
    
       We wanted our language to be able to describe complex 
service journeys. Thus, SJML v1.1 was updated to present 
many actors and their interactions by adapting the swimlane 
approach. This section describes the use of SJML v2.0 for 
modelling complex service delivery processes and our 
experience with it in a hospital case.  
 
A. Case Study with Patient Referral Processes 
    
       To identify a set of requirements for a visual language 
related to modelling the processes of complex services, we 
conducted a case study involving the modelling of referral 
processes in health care services. We collected data 
regarding the referral process from a Norwegian hospital 
during the autumn of 2013 and used SJML to model the 
various aspects of the processes. 
       Due to the number of actors involved, interactions 
among them, and the number of steps in the process, the 
referral process is regarded as one of the most complicated 
services [41]. A referral process is a highly complex process 
because it often involves many actors (e.g., a patient, a 
healthcare provider who sent the referral like a GP, 
administrative personnel such as a receptionist, nurses and 
medical experts at the receiving facility) and their tasks are 
interrelated across different organisations, such as a GP’s 
office and a hospital.  
The external referral process in the Norwegian hospital 
where we collected data consists of the following steps: a 
health secretary receives referral letters and sorts them; a 
medical expert assesses the referral and makes a decision; a 
nurse or health secretary follows up the referral, sets a time 
for a patient visit and notifies the patient; the medical expert 
meets the patient; and the medical expert communicates 
with the healthcare provider who referred the patient. 
Patient-administrative systems are central to the referral 
process, and the EHR system is one of the core patient-
administrative systems used by the healthcare personnel. 

298
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
B. Data Collection 
   
       To understand how the referral process works and what 
it consists of in practice, we visited a surgical outpatient 
clinic at a hospital in Norway three times during September 
and October of 2013. We collected data using observations 
and semi-structured interviews during our visits. A 
researcher wrote down field notes during the observations 
and the interviews with administrative personnel, nurses, 
and medical experts. We also studied an E-learning’s 
module, documentation, and photos that are relevant to the 
referral process. The detailed data collection procedure is 
introduced below. 
       We first studied the hospital procedures and routines 
concerning referrals in general using an E-learning module 
for the EHR system. We then classified the procedures. 
After that, actual data from the referral processes were 
collected through observations. These data consisted of 
three detailed patient histories that were extracted from the 
EHR system. Photographs of screenshots were taken during 
the observations. Then, the data were supplemented by 
semi-structured interviews with a nurse, a medical 
specialist, and a health secretary. The interviews were 
audio-recorded. Relevant documents such as patient 
brochures and documentation explaining the referral process 
and internal routines were also obtained. In addition, we had 
telephone meetings with a nurse and asked her for some 
additional explanations via email.  
 
C. Data Analysis and Further Development of SJML 
 
       Reconstruction of the three patient cases formed the 
core of our analysis. The three patient histories were 
reconstructed by combining the patient journal with the 
referral module in the EHR system. A chief nurse 
anonymised the data from the patient journal and assisted in 
constructing the patient histories. To process the fragmented 
data from the interviews and the EHR system, each patient 
history was compiled and systemised using a preformatted 
spreadsheet template. The patient histories were organised 
by date, physical location, and events, and attributes such as 
initiator, recipient, task description, and communication 
channel were specified.  
       The results from the data analyses were used to describe 
the referral processes using SJML v1.1. We organised 
workshops in which three researchers sketched different 
approaches for visualising fragments of the referral process 
through trial, error, and exploration. When visualising the 
referral processes, we could also identify requirements for 
the further development of our visual language. We 
improved our language on the basis of the requirements 
through several iterations. Those requirements and our 
solutions are described as following. 
 
(1) Ability to visually describe and distinguish among 
several actors in a more appropriate way 
 
Using different colours to distinguish among actors 
might not be suitable in case many actors are involved. 
Thus, we needed a new way to describe several actors. 
Alternative representations were explored through trial 
and evaluation of various solutions. Finally, swimlanes 
with actor icons and titles were adopted. This approach 
seems applicable to account for all the actors involved. 
 
(2) Ability to describe and distinguish each actor’s 
touchpoints that connect the actors 
 
Since we adopted the swimlane approach, there was a 
need for a new way to describe touchpoints that 
involved communication among actors. The language 
should therefore have touchpoints for both the initiator 
and recipient. We adopted a sender-recipient concept. 
Each touchpoint was duplicated and placed in both the 
initiator’s and recipient’s swimlane so the readers could 
recognise each actor’s journey easily by following each 
swimlane. The boundary colour of a touchpoint showed 
if the touchpoint was sent or received by the actor. 
 
(3) Ability to distinguish among touchpoints mediated by 
the same channel, and thus having the same symbols 
 
Sometimes, several touchpoints occur through the same 
communication channel. For instance, a customer may 
receive two SMS messages from the service provider. 
We proposed a text area to allow for a detailed 
annotation of the touchpoint. The textual explanation, 
together with a symbol of the channel inside a 
touchpoint square box, would facilitate a detailed 
understanding of the touchpoint. 
 
(4) Ability to describe dataflow in the EHR system 
 
Some information is delivered from sender to receiver 
through the EHR system, such as when updating and 
saving information. Therefore, we needed a way to 
describe dataflow in the EHR system. We proposed 
adding the EHR system as an actor and using arrows to 
illustrate dataflow. 
 
(5) Ability to distinguish between the workflow of referral 
and dataflow 
 
Since we used an arrow for both workflow and 
dataflow, we needed a way to distinguish between these 
two types of flow. We proposed using differently 
shaped arrows for workflow and dataflow. Normal 
black arrows were adopted to describe workflow while 
dotted arrows were adopted to describe dataflow. 

299
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
D. Components for Visualisation 
 
Figure 8 shows SJML v2.0 representing process steps in 
the form of touchpoint or action. The text area enables 
annotation concerning the context of the process step. In 
SJML v2.0, a box was used to represent touchpoints and 
actions as its shape can contain text more economically than 
a circle. The colour of the touchpoint boundary indicates the 
initiator (blue) and recipient (green), and a symbol area 
carries information about the channel or device mediating 
the touchpoint. In contrast to touchpoints, actions have no 
sender or recipient, thus they do not need a colour to 
distinguish between sender and recipient, nor a symbol to 
represent the communication channel.  
 
 
Figure 8. Visual components for our expanded language 
 
Figure 9 presents an excerpt of SJML v2.0, showing two 
touchpoints in a patient’s journey. On the left is a symbol 
representing the patient along with a text label. The first 
touchpoint represents an interaction in which the patient 
receives a phone call from the hospital (a common 
procedure when scheduling an urgent appointment). The 
next touchpoint shows an interaction in which the patient 
receives the appointment letter with all necessary details 
about the imminent consultation and a brochure regarding 
patient rights. Here, the patient is the recipient of both 
touchpoints, signalled by the green colour. Correspondingly, 
the health secretary responsible for the telephone call and 
the letter is the initiator of both touchpoints. The 
corresponding touchpoints of the health secretary would 
appear with blue-coloured boxes in a separate swimlane.  
 
 
Figure 9. A part of a patient's journey 
 
E. Mapping in a Real Context  
 
Figure 10 shows a part of the real referral process 
described using SJML v2.0. Arrows indicate the workflow 
and dataflow. Black arrows represent the workflow in the 
process while grey dotted arrows represent the dataflow 
to/from the EHR system. Time flow with time stamps is 
shown by the black line on the bottom. This example is 
based on one of the real patient histories explained in 
subsection D.  
First, a GP transferred an electronic referral letter to a 
hospital for a patient with a lipoma who visited him/her. 
Second, a health secretary in the document centre of the 
hospital received, registered and forwarded the referral to a 
specialist in the hospital. Third, the specialist assessed the 
received referral and forwarded it to a health secretary in the 
clinic for follow-up. Fourth, the health secretary checked the 
received referral and sent a standby letter to the patient, and 
so on. The entire version of this referral process can be 
found in Appendix A. 
Figure 10. The result of the proposal for extension of the language 

300
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
F. Service Journey Modelling Language v2.0 
    
       SJML v2.0 consists of a sequence of touchpoints, 
actions, and system activities. The elements of SJML v2.0 
are detailed below. 
 
• 
Touchpoint. A touchpoint indicates a point of 
interaction between two actors. The shape of the 
touchpoint was changed from a circle to a rounded 
rectangle since more space was needed for text to 
add information concerning the touchpoint.  
• 
Action. An action indicates an event performed by 
an actor as part of a customer’s journey. It is 
represented by a rounded grey rectangle. 
• 
System activity. This is an activity performed by 
the EHR system. It is represented by a dotted grey 
rectangle. 
        
Attributes of touchpoints, including channel, status, initiator, 
and receiver, and touchpoint description were specified for 
SJML v2.0. 
 
• Channel. The symbol area for channel has been 
moved to the upper left of a rounded rectangle 
touchpoint. 
• Status. The way to describe the status of a 
touchpoint is the same as in SJML v1.0 and v1.1. 
• Initiator 
and 
recipient. 
Initiator 
(rounded 
rectangle with blue-coloured boundary) indicates 
an actor who initiates the touchpoint, and recipient 
(rounded rectangle with green-coloured boundary) 
indicates an actor who receives the touchpoint. 
We found through the case study that there could 
be more than one recipient of a touchpoint in some 
cases. 
• 
Touchpoint description. A text area has been 
added on the right side of the rectangle to describe 
the touchpoint in detail. 
        
Graphical notations have been modified for SJML v2.0. The 
swimlane approach was adapted to present several actors. 
Therefore, the way of presenting actors has been updated. 
One can see each actor’s journey by following each 
swimlane. An axis with time information for each 
touchpoint has been added to show the time flow of the 
service journey. 
 
• 
Swimlanes. The swimlane concept was adapted to 
describe the service journeys of several actors. 
Touchpoints, actions, and system activities for an 
actor are allocated inside a horizontal grey bar. 
Several bars are collocated vertically, and the 
interactions are described with arrows and the 
colours and descriptions of the touchpoints. 
• 
Actor. The boundary between customer and 
service provider has become ambiguous due to the 
involvement of many actors. All of them are 
actually customers of the EHR system. A symbol 
on the left side of a swimlane bar represents an 
actor. The text below the symbol specifies the role 
of the actor in the service journey.  
• 
Actor’s journey. An actor’s journey can be seen 
by following a swimlane bar. 
• 
Time flow. An axis with time stamps under the 
swimlane diagram represents the time flow and the 
occurrence dates of the touchpoints.  
 
G. Preliminary Experience  
   
       We verified the visualisation of the referral process 
using SJML v2.0 by communicating with the chief nurse via 
emails and telephone conversation. We then presented the 
visualisation to a small group of experts (five employees) 
who work at the eHealth system producing company that 
produces the EHR system through a remote workshop using 
Lync. After the presentation, a set of questions was sent to 
the participants via email to collect preliminary feedback. 
The questions investigated whether the referral process and 
visual elements described using SJML v2.0 
were 
understandable and whether the language would be helpful 
for creating a common understanding of the business 
process or workflow of the referral process. We received 
answers from two respondents. Thus, we have only 
anecdotal evidence of evaluation of the language based on 
this preliminary experience. The preliminary feedback from 
the participants regarding SJML v2.0 was analysed and 
summarised using thematic coding [40]. The summary is 
presented below.  
 
Description of the process and visual elements using SJML 
v2.0:  
 
• 
The language itself is relatively easy to understand  
• 
The swimlanes to distinguish actors are simple, 
straightforward and easy to understand 
• 
The symbols for actors and channels are easily 
understandable 
• 
The use of different colours to distinguish the initiator 
and receiver is helpful for identifying the initiator 
 
Creating a common understanding of the process and 
workflow using SJMLv2.0:  
 
• 
The representations of SJML v.2.0 are suitable for 
discussing and establish a common understanding of 
the workflow and relationships among actors  
• 
It would be better if the tool could also illustrate 
alternatives in a process. 
 

301
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
V. 
DISCUSSION 
 
       Through our analysis of the related work, we found 
some weaknesses in the existing process modelling 
languages and the service design technique describing 
service delivery processes. First, there is a need to focus on 
the customer’s perspective [1]. Second, there is a need to 
support the satisfactory description of the actual execution 
of the service delivery process [5][6]. Third, there is a need 
to sufficiently illustrate networked relationships in the 
service delivery process [7]. Fourth, there is a need for 
better visual expressiveness to describe the service delivery 
process explicitly [5][6][37]. Thus, there is a need for a new 
language or technique.    
       Relevant knowledge in the areas of service design, 
information visualisation, communication theory, and 
modelling languages have formed a theoretical basis for our 
approach to find a solution for these needs. Based on this 
approach, we developed a service domain specific process 
modelling language (Service Journey Modelling Language, 
SJML) to cover the aforementioned gaps in BPM for 
services. The language was developed and evaluated 
through case studies with partner companies, following the 
three phases of design science (problem analysis, solution 
design, and evaluation) in an iterative manner. For 
evaluations, we used each version of our language to 
describe existing or new services.  
       We evaluated the first version of our language (SJML 
v1.0) through a workshop with library staff by describing 
simple service journeys (book-loan services in a library) [1]. 
During the workshop we found that the participants did not 
have any problems in understanding SJML v1.0, and they 
could construct service journeys with our language. 
Feedback from the participants indicating the weakness of 
SJML v1.0 (a need for decisions points) was addressed 
when we developed the next version of our language (SJLM 
v1.1). SJML v1.1 was evaluated by describing more 
complicated service journeys from our research partner 
companies [8].  
       SJML v1.1 was updated by describing an even more 
complicated service journey (a referral process), which 
presents many actors and their interactions. The updated 
version of our language (SJML v2.0) adopted a sender-
recipient concept and a swimlane approach. We visualised a 
patient history that was extracted from an EHR system 
using SJML v2.0 and presented the result to a small group 
of people via a remote workshop. We received feedback 
from the participants that the visual elements and the 
language itself were easy to understand and suitable for 
creating a common understanding of the workflow and 
relationships among actors involved in the business process.  
To represent the customer’s perspective, our language 
was developed based on a customer journey mapping 
approach that introduced the touchpoint concept. SJML v1.0 
supported a sequential view to describe the expected 
journey. To support the description of the actual journey, 
SJML v1.1 added a deviation view. SJML v2.0 added a new 
diagram type (swimlane view) to support the illustration of 
the networked relationships of several actors in a service 
delivery process. Each version of SJML expanded the 
graphical 
elements 
to 
better 
support 
the 
visual 
expressiveness.  
VI. 
LIMITATIONS 
The library service and referral process can vary in 
practice, depending on the organisation. In this paper, we 
conducted our case studies on book loan services in a 
Norwegian university library and a referral process in a 
Norwegian hospital; thus, SJML might not meet all the 
challenges necessary to describe similar services in other 
organisations. 
For the case study on the referral process, we collected 
patient data based on existing patient care histories in an 
EHR system. Therefore, there might be a limitation in 
regards to covering all the touchpoints or actions that were 
not registered in the EHR system. 
The initial feedback on SJML v1.0 was gathered through 
observations and a group discussion. Audio recordings were 
not used, and thus the discussion was not transcribed. 
Observers took notes when the group members talked, and 
the results were based on those field notes. Therefore, the 
descriptive and interpretive validity might be limited. 
VII. CONCLUSION AND FUTURE WORK 
 
Services usually have complex structures with several 
actors whose interests are intertwined. Aligning business 
processes with the customer’s perspective is important for 
BPM, especially in the service field. To do this, a good 
understanding of interactions among the actors involved in 
service provision and consumption is needed. Several 
techniques for managing business processes to support the 
service delivery process were suggested in the context of 
process modelling and service design. However, there was a 
lack of support for describing the customer’s point of view, 
the actual execution of service and the networked perspective 
of the service delivery process. In addition, there is a need to 
improve the visual expressiveness of the existing techniques.  
Several versions of SJML were developed and evaluated 
in an iterative manner to strengthen the customer orientation, 
to facilitate collaboration among all involved actors and to 
support specification, description and analyses of service 
delivery processes. The requirements gathered from the 
evaluations provided useful input for further development of 
our language.   
We believe that SJML v1.0 supplements BPM for 
services by aligning business processes with the customer’s 
perspective [1]. SJML v2.0 supports the description of the 
actual journeys of actors and their networked interactions. 
Therefore, we expect that SJML will support BPM of 
complex services. Furthermore, the results from our 
preliminary experience support the contention that the visual 
representations of our language could be effective in creating 

302
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
a common understanding of workflows and relationships 
among various actors in the business processes of services.  
We intend to investigate the usefulness of SJML in BPM 
in future studies. Experiments or another case study with a 
larger number of participants would be used in further 
research.  
ACKNOWLEDGMENT 
 
The research presented here has been conducted within 
the VISUAL project (2012–2016, project number 219606) 
funded by the Research Council of Norway and industrial 
partner companies, and involved SINTEF ICT and the 
University of Linköping. Thanks to Ida Maria Haugstveit for 
her significant contribution in developing the language and 
creating the visual diagrams for the case study, to Alma 
Culén and Andrea Gasparini for organising the library 
workshop, to our industrial partners for their contribution, 
and to the participants of all the workshops. We thank the 
reviewers for their useful suggestions and comments. 
 
REFERENCES 
[1] 
E. Lee and A. Karahasanovic, “Can Business Process 
Management Benefit from Service Journey Modelling 
Language?,” The Eighth International Conference on 
Software Engineering Advances (ICSEA 2013) IARIA, 
Venice, Italy, Oct. 2013, pp. 579–581, ISSN: 2308-4235,  
ISBN: 978-1-61208-304-9. 
[2] 
T. P. Soubbotina and K. A. Sheram, Beyond economic 
growth: Meeting the challenges of global development. 
Washington, D.C., U.S.A.: World Bank Publications, 2000. 
[3] 
The statistical office of the European Union. Almost 70% of 
employed persons in the EU27 worked in the service sector 
in 2011 - Product - Eurostat. [Online]. Available from: 
http://ec.europa.eu/eurostat/en/web/products-press-
releases/-/3-05102012-AP, [Accessed: 2015.12.01]. 
[4] 
W. M. P. Van Der Aalst, A. H. M. Ter Hofstede, and M. 
Weske, “Business process management: A survey,” in 
Business process management, 2678 vols., Wil M. P. Van 
der 
Aalst 
and 
Mathias 
Weske., 
Eds. 
Eindhoven, 
Netherlands: Springer, pp. 1–12, 2003. 
[5] 
L. Verner, “BPM: The Promise and the Challenge,” Queue, 
vol. 
2, 
no. 
1, 
pp. 
82–91, 
Mar. 
2004, 
doi: 
10.1145/984458.984503. 
[6] 
T. Wreiner, I. Maartensson, O. Arnell, N. Gonzalez, S. 
Holmlid, and F. Segelström, “Exploring Service Blueprints 
for Multiple Actors: A Case Study of Car Parking 
Services,” The First Nordic Conference on Service Design 
and Service Innovation, Oslo, Norway, Nov. 2009, pp. 213–
223, ISSN: 1650-3740, ISBN: 978-91-7519-771-5. 
[7] 
S. S. Tax, D. McCutcheon, and I. F. Wilkinson, “The 
Service Delivery Network (SDN) A Customer-Centric 
Perspective of the Customer Journey,” Journal of Service 
Research, 
vol. 
16, 
no. 
4, 
pp. 
454–470, 
2013, 
doi:10.1177/1094670513481108. 
[8] 
R. Halvorsrud, E. Lee, I. M. Haugstveit, and A. Følstad, 
“Components of a Visual Language for Service Design,” 
The Fourth Service Design and Innovation Conference 
(ServDes. 2014), Lancaster, UK, Apr. 2014, pp. 291–300, 
ISSN: 1650-3740, ISBN: 978-91-7519-280-2. 
[9] 
WHO, “Referral Systems - a summary of key processes to 
guide health services managers.” The World Health 
Organisation, 2013. 
[10] 
L. J. Menor, M. V. Tatikonda, and S. E. Sampson, “New 
service 
development: 
areas 
for 
exploitation 
and 
exploration,” Journal of Operations Management, vol. 20, 
no. 2, pp. 135–157, Apr. 2002,        doi:10.1016/S0272-
6963(01)00091-2. 
[11] 
R. M. Saco and A. P. Goncalves, “Service Design: An 
Appraisal,” Design Management Review, vol. 19, no. 1, pp. 
10–19, 
Jan. 
2008, 
doi: 
10.1111/j.1948-
7169.2008.tb00101.x. 
[12] 
H. Dubberly and S. Evenson, “Designing for service: 
Creating an experience advantage,” in Introduction to 
Service Engineering, G. Salvendy and W. Karwowski, Eds.  
U.S.A: John Wiley & Sons, pp. 403–413, 2010. 
[13] 
M. Stickdorn and J. Schneider, This is service design 
thinking. Wiley, 2010. 
[14] 
M. J. Bitner, A. L. Ostrom, and F. N. Morgan, “Service 
blueprinting: a practical technique for service innovation,” 
California Management Review, vol. 50, no. 3, pp. 66–95, 
2008, doi:10.2307/41166446. 
[15] 
Oxford, The New Shorter Oxford English Dictionary. New 
York: Oxford University Press Inc, 1993. 
[16] 
S. K. Card, J. D. Mackinlay, and B. Shneiderman, Readings 
in information visualization: using vision to think. San 
Francisco, CA, USA: Morgan Kaufmann Publishers Inc., 
1999. 
[17] 
Y. Rogers, H. Sharp, and J. Preece, Interaction Design: 
Beyond Human - Computer Interaction. John Wiley & 
Sons, 2011. 
[18] 
C. Chen and Y. Yu, “Empirical studies of information 
visualization: a meta-analysis,” International Journal of 
Human-Computer Studies, vol. 53, no. 5, pp. 851–866, 
Nov. 2000, doi:10.1006/ijhc.2000.0422. 
[19] 
A. Karahasanovic, Supporting application consistency in 
evolving object-oriented systems by impact analysis and 
visualisation, Oslo, Norway: University of Oslo, 2002. 
[20] 
C. Ware, Information visualization: perception for design, 
3rd ed. Morgan Kaufmann, 2000. 
[21] 
M. J. Bitner, V. A. Zeithaml, and D. D. Gremler, 
“Technology’s impact on the gaps model of service 
quality,” in Handbook of Service Science, P. P. Maglio, C. 
A. Kieliszewski, and J. C. Spohrer, Eds. Springer, pp. 197–
218, 2010. 
[22] 
C. E. Shannon and W. Weaver, “A mathematical theory of 
communication,” Bell System Technical Journal, vol. 27, 
no. 
1, 
pp. 
379-423; 
pp. 
623-656, 
Oct. 
1948, 
doi:10.1145/584091.584093. 
[23] 
R. T. Craig, “Communication theory as a field,” 
Communication theory, vol. 9, no. 2, pp. 119–161, 1999, 
doi:10.1111/j.1468-2885.1999.tb00355.x. 
[24] 
C. S. Souza, The semiotic engineering of human-computer 
interaction. The MIT press, 2005. 
[25] 
R. Jakobson, “Linguistics and poetics,” in Style in 
language, T.A. Sebeok, Eds. Cambridge, MA, U.S.A.: 
Massachusetts Institute of Technology, pp. 350–377, 1960. 
[26] 
D. Harel and B. Rumpe, “Meaningful modeling: What’s the 
semantics of ‘Semantics’?,” The IEEE Computer Society, 

303
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
vol. 
37, 
no. 
10, 
pp. 
64–72, 
Oct. 
2004, 
doi:10.1109/MC.2004.172. 
[27] 
M. Mernik, J. Heering, and A. M. Sloane, “When and how 
to develop domain-specific languages,” ACM computing 
surveys, 
vol. 
37, 
no. 
4, 
pp. 
316–344, 
2005, 
doi:10.1145/1118890.1118892. 
[28] 
K. Garland, Mr Beck’s Underground Map. Capital 
Transport, 1994. 
[29] 
IEEE, Software and Systems Engineering Vocabulary. 
[Online]. 
Available 
from: 
http://pascal.computer.org/sev_display/search.action 
[Accessed: 2015.12.01]. 
[30] 
OMG, UML 2.5 - Review. [Online]. Available from: 
http://www.omg.org/spec/UML/2.5/, 
[Accessed: 
2015.12.01]. 
[31] 
H.-E. Eriksson and M. Penker, Business modeling with 
UML: Business Patterns at Work, vol. 1. New York, NY, 
USA: John Wiley & Sons, Inc., 1998. 
[32] 
OMG, “Business Process Model and Notation (BPMN).” 
The Object Management Group, Inc., 2011. 
[33] 
OMG, Business Process Management Initiative. [Online]. 
Available 
from: 
http://www.omg.org/bpmn/index.htm, 
[Accessed: 2015.12.01]. 
[34] 
G. L. Shostack, “Designing services that deliver,” Harvard 
business review, vol. 62, no. 1, pp. 133–139, 1984. 
[35] 
G. T. Jun, J. Ward, Z. Morris, and J. Clarkson, “Health care 
process modelling: which method when?,” International 
Journal for Quality in Health Care, vol. 21, no. 3, pp. 214–
224, 2009, doi: http://dx.doi.org/10.1093/intqhc/mzp016. 
[36] 
J. C. Recker, M. Indulska, M. Rosemann, and P. Green, 
“How good is BPMN really? Insights from theory and 
practice,” The Fourteenth European Conference on 
Information Systems (ECIS 2006), Göteborg, Sweden, Jun. 
2006, vol. 1, pp. 1–12. 
[37] 
A. Afrasiabi Rad, M. Benyoucef, and C. E. Kuziemsky, 
“An evaluation framework for business process modeling 
languages in healthcare,” Journal of theoretical and applied 
electronic commerce research, vol. 4, no. 2, pp. 1–19, 2009. 
[38] 
A. Polaine, L. Løvlie, and B. Reason, Service Design: From 
Insight to Implementation. Rosenfeld Media, 2013. 
[39] 
F. Segelström, Stakeholder Engagement for Service Design: 
How service designers identify and communicate insights. 
Linköping University Electronic Press, 2013. 
[40] 
R. Madden, Being ethnographic: A guide to the theory and 
practice of ethnography. Sage Publications, 2010. 
[41] 
D. F. Sittig, T. K. Gandhi, M. Franklin, M. Turetsky, A. J. 
Sussman, D. G. Fairchild, D. W. Bates, A. L. Komaroff, 
and J. M. Teich, “A computer-based outpatient clinical 
referral 
system,” 
International 
Journal 
of 
Medical 
Informatics, vol. 55, no. 2, pp. 149–158, Aug. 1999, doi: 
http://dx.doi.org/10.1016/S1386-5056(99)00027-1. 
 

304
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Appendix A. 
 

305
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 

306
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 

307
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 

308
International Journal on Advances in Software, vol 8 no 3 & 4, year 2015, http://www.iariajournals.org/software/
2015, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 

