Towards Task Allocation in Global Software Development Projects 
 
 
Sajjad Mahmood, Sajid Anwer, Waleed Umar, Mahmood Niazi, Mohammad Alshayeb 
Department of Information and Computer Science 
King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia 
Emails: {smahmood, g201303950, g201207040, mkniazi, alshayeb}@kfupm.edu.sa 
 
 
Abstract— Global Software Development (GSD) initiative aims 
to facilitate software development process by providing access 
to skilled workers at a relatively low cost and a 24/7 software 
development model. Previous work suggests that a significant 
number of companies that have tried GSD have failed to realize 
the anticipated benefits, which have resulted in poor 
outsourcing relationships, high costs and overall poor software 
products. Task allocation is one of the critical factor for a 
successful GSD project as project managers not only need to 
consider their workforce but also need to take into the account 
the characteristics of the geographically distributed sites 
involved in a project. In this paper, we present a task allocation 
process with an aim to utilize different geographically 
distributed sites for a GSD project. The task allocation process 
uses project scheduling techniques, e.g., Critical Path Method 
(CPM)/ Program Evaluation and Review Technique (PERT), 
and a multi-objective optimization technique to allocate GSD 
project tasks. We also present an application of the task 
allocation process to Obesity Health Clinic System (OHCS) case 
study.  
Keywords-global software development; task allocation; work 
distribution; software project schedules. 
I. 
 INTRODUCTION 
Global Software Development (GSD) occurs where a 
company (client) contracts out all or part of its software 
development tasks to another company (vendor), who 
provides services for remuneration [1]. GSD has been 
growing steadily as a large number of organizations aim to 
take advantage of using highly skilled workforce at a 
relatively reduced cost. Furthermore, GSD has the potential to 
reduce project’s time to market by using different time zones 
to organize a 24/7 development model. 
A good number of organizations that have tried GSD 
failed to realize the expected outcomes, which resulted in 
misunderstanding of requirements, poor global relationships 
among clients and vendors, high costs and overall poor 
services [2][3]. These failures are usually traced back to two 
main causes: insufficient abilities (e.g., absence of domain 
knowledge, high turnover rate, etc.) at different sites, and 
problems at the interfaces between two distributed sites due to 
cultural barriers.  
These issues are directly impacted by the decisions taken 
at the task allocation phase of a GSD project. Existing 
research suggests that tasks need to be allocated to different 
geographical sites based on a number of often conflicting 
objectives such as low cost [4][5], reduced development time, 
and increased productivity [6]; and minimum communication 
and coordination between different development sites [7]. For 
example, Tran and Latapie [8] have presented models for 
structuring teams and work in globally distributive projects by 
taking into account the dependencies between components at 
a higher abstraction level.   
In this paper, we present a task allocation process that 
takes into account the interdependencies between project tasks 
and geographically distributed sites’ capabilities. The task 
allocation process has two inputs, namely, GSD project tasks 
and number of geographically distributed sites, which have 
the required skills to complete the project tasks. The task 
allocation process uses either CPM [15] or PERT [15] to 
develop schedule of a GSD project. Next, the tasks are ranked 
based on the precedence requirements and these ranked tasks 
are used an input to a ‘goal program’, a multi-objective 
optimization technique, to select suitable geographical sites 
for a GSD project. 
The rest of this paper is organized as follows: Section II 
reviews the related literature. In Section III, we present the 
task allocation model and Section IV presents a case study. 
We conclude the paper and discuss future work in Section V. 
II. 
RELATED WORK 
This section presents different approaches that researchers 
adopt for task allocation in global software development. 
Setamanit et al. [6] propose a simulation model based on two 
factors of software process model development time and 
productivity and it compare different task allocation strategies 
proposed in research against these two factors. They consider 
different important properties of software, i.e., coupling 
between activities, sites capabilities and project plan for 
comparing different approaches. In fact this model is proposed 
for comparing different site allocation techniques not 
allocation tasks to different sites in GSD.    
328
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

Lamersdorf et al. [9] proposed qualitative approach 
intended for understanding and identifying different criteria 
that are practically used for task allocation in GSD. They 
conducted interviews from different industry peoples to 
collect data. They showed that type of required system and 
sourcing strategy mainly affects the task allocation criteria. 
Their study analysis shows that market proximity, turnover 
rate strategic planning and labor cost are main factors that 
need consideration during task allocation.  
Lamersdorf et al. [10] presented a risk driven customizable 
model to suggest different task allocation approaches based on 
the target system and software development process model 
and critically evaluated this model based on risks related to 
tasks allocation in GSD. They also evaluated proposed 
approach by interviewing different peoples from Information 
Technology (IT) industry that are related to software 
development in GSD. 
Narendra et al. [11] presented an integrated formal 
technique for analyzing all tasks and developed optimal tasks 
allocation model for GSD projects. The proposed model 
predicts estimated effort required for particular task based on 
the overall allocation of tasks over estimated effort and effort 
required to execute a particular task on particular site. 
Wickramaarachchi and Lai [5] proposed a method for 
work distribution to different locations with an aim to 
minimize overhead costs.  The method categorizes the 
offshore tasks based on software process model. It also 
proposes a method to distribute work to suitable tasks using 
work specific matrix, work dependency matrix and site 
dependency matrix. 
Mockus and Weiss [7] proposed an approach for task 
allocation in GSD that mainly addresses the communication 
problem between sites and ultimately reduced the overall 
overhead in distributed development and used optimization 
algorithms to implement this approach. Proposed approach is 
well understood and easily applicable in GSD but they only 
consider one factor that affects GSD. As there are other factors 
that can affect the distributed development like cost, site 
capabilities and tasks dependencies and due to this limitation 
this approach however, cannot be used for tasks allocation in 
GSD.   
Vathsavayi et al. [4] discuss the solution of work 
allocation problem in GSD using genetic algorithms. They 
proposed a model that take different activities of software 
development process as an input and find the near optimal 
solution. Their model is capable enough to accommodate the 
change management and other concerns related to project 
management. They considered only duration and cost factors 
of site for tasks allocation in GSD.   
Lamersdorf and Munch [12] proposed task allocation 
approach that considers different factors, i.e., time zone 
difference, sites capabilities, labor cost and cultural issues. 
They developed a tool named Task Allocation based on 
Multiple criteria (TAMRI) using Bayesian network [12]. This 
model is applicable across a number of products by just 
modifying the underlying Bayesian approach.  
Shen et al. [13] proposed approaches to solve the multi 
criteria task allocation problem using fuzzy numbers and 
linguistic scales. Linguistic scales are first used to measure 
quantitative properties like individual capabilities and then 
fuzzy numbers are used to measure and quantified these 
scales. Four criteria, namely, workload, familiarity with task, 
capability and social relationships with other team members 
are used to assess the individual that is suitable for this 
particular task. 
Tran and Latapie [8] proposed a task allocation model 
from architectural point of view and considered the 
dependencies between components as criteria for task 
allocation. They allocated architectural integration to one site 
and other activities to other sites based on dependencies exist 
between them while other sites coordinate with the main site. 
The main limitation of this approach is that they consider 
dependencies at component level (abstract level) and 
dependencies inside the component can cause delay. 
III. 
TASK ALLOCATION PROCESS 
In a traditional software development environment, a 
project manager typically distributes work tasks among its 
team members who are present at a single development site. 
However, in GSD projects, a project manager needs to assign 
tasks to teams who are usually present at different 
geographical locations. This introduces an extra complexity at 
the task allocation phase of a project as one GSD vendor can 
be cheaper than other while another vendor might have more 
skilled workers. We present the task allocation decision 
model, as shown in Figure 1, which acts as a tool that helps 
managers to assign tasks in a GSD project.  
The task allocation process has two inputs, namely, GSD 
project tasks and number of geographically distributed sites, 
which have the required skills to complete the project tasks. A 
project task is defined as a small manageable unit with a time 
requirement. Resource requirements for a task define the 
manpower required for the activity. Project tasks usually are 
not standalone and have precedence relationships with other 
tasks in a project. Furthermore, the precedence relationship 
also defines that what tasks can run concurrently with other 
tasks.  
 
329
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
Figure 1.  Task Allocation Process. 
The task allocation process uses either CPM or PERT to 
develop schedule of a GSD project. CPM or PERT allows a 
project manager to define various components of a schedule 
such as floats, early start time, early finish time and project 
completion date. The task allocation process uses PERT when 
the end date for the activities cannot be defined but can be 
represented by expected probabilistic durations.  
Next, the tasks are ranked based on the precedence 
requirements and these ranked tasks are used an input to a 
‘goal program’ to select suitable geographical sites for a GSD 
project. ‘Goal programming’ helps achieving an optimal or 
near optimal solution for a set of goals. 
In the following subsections, we present three models for 
task allocation, namely, ‘equal utilization of all sites’, 
‘optimal utilization of all sites’, and ‘constraints-based 
utilization of sites’, respectively.   
A. Equal utlization of all sites 
 
In this model, we aim to equally distribute GSD project 
tasks to all geographically distributed sites. We propose to use 
a genetic algorithm to assign GSD project tasks, such that the 
standard deviation of total man-hours required at all GSD sites 
is minimized. The mathematical form of the proposed model 
as follows: 
 
T.M.U at a site =  
 
∑
 (𝑎𝑐𝑡𝑖𝑣𝑖𝑡𝑦 𝑑𝑢𝑟𝑎𝑡𝑖𝑜𝑛) 𝑥 (𝑀𝑎𝑛 − ℎ𝑜𝑢𝑟𝑠 𝑟𝑒𝑞𝑢𝑖𝑟𝑒𝑑 𝑝𝑒𝑟 𝑑𝑎𝑦)
𝑛
𝑘=0
    (1) 
 
 
where T.M.U= Total Man-hours Utilized, n is the number of 
the tasks to be performed at a site. 
 
Mean =(∑
T. M. U at a site 
𝑚
𝑙=0
) / number of geographical 
sites  
 
where m is the number of total geographical sites involved in 
the project. 
 
Variance = ∑
[(T. M. U at a site) − (mean)]2
𝑚
𝑙=0
       (2) 
 
B. Optimal utilization of all sites 
The aim of this model is to assign the tasks to the sites so 
that the each site is optimally utilized. The model tries to 
assign the various tasks to a site based on the capacity of a site 
and the man-hours requirement of individual tasks. The 
mathematical form of the proposed model as follows: 
 
Minimize the Goal= (∑
S. D. S. U 
m
l=0
) 
        
(3) 
 
S.D.S.U=(∑
 S. D. Sites capabilities 
𝑑
𝑡=0
)                
(4) 
 
where S.D.S.U= Standard Deviation of Site Utilization, S.D. 
= Standard Deviation, d is the duration and m are the total 
geographical sites.  
 
C. Constraints-based utilization of sites 
In this model, we enhance the ‘equal utilization of all sites’ 
and ‘optimal utilization of all sites’ by introducing a set of 
constraints. The ‘utilization of sites based on constraints’ 
allows project managers to assign tasks to a certain site. 
Mathematically, the objective function is defined as follows: 
 
Minimize = √Variance + ∑
S. D. S. U 
m
l=0
 
        
(5) 
 
330
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

IV. 
CASE STUDY 
This section discusses an application of the proposed 
schedule ﬂexibility analysis to the Obesity Health Clinic 
System (OHCS). The OHCS allows health team members and 
patients to create obesity reducing health goals. The goals are 
added to the ‘bank of ideas’ and classiﬁed under the 
appropriate category (for example, physical, dietary, etc.). 
These goals can also be customized according to individual 
patient needs by the health team. The OHCS also has the ‘goal 
suggestion’ feature, which helps the health team to ﬁnd 
appropriate goals for a patient according to his health 
condition. 
Table I presents a list of OHCS tasks, planned durations in 
days and their respective dependencies. Figure 2 presents the 
CPM network of OHCS.  
 
 
Figure 2.  OHCS Activity Network. 
Furthermore, Table II shows available resources (in term 
of man hours per day) at four geographical development sites 
for the OHCS project.  
 
 
 
TABLE I.  
OHCS TASKS 
Task 
ID 
Activities 
Duration 
predecessors 
Man-
Hour 
Per Day 
1 
Source Node 
0 
 
 
 
0 
2 
Patient profile 
7 
1 
 
 
5 
3 
Health 
Team 
Profile 
11 
2 
 
 
4 
4 
Complete profile 
features 
5 
3 
5 
 
6 
5 
Database 
Implementation 
14 
1 
 
 
5 
6 
Profile 
Management 
Screen layout 
5 
1 
 
 
4 
7 
OHCS Reports 
9 
4 
 
 
3 
8 
Goal 
Management 
18 
4 
 
 
5 
9 
Goal Suggestion 
feature 
21 
8 
 
 
6 
10 
SQL Queries 
20 
5 
 
 
4 
11 
Implement Store 
procedures 
9 
10 
 
 
5 
12 
Complete 
database 
implementation 
5 
11 
 
 
5 
13 
Goal 
Management 
screen layout 
5 
6 
 
 
4 
14 
Complete OHCS 
Screen layouts 
14 
13 
 
 
6 
15 
Complete OHCS 
Feature 
and 
Database 
integration 
12 
7 
9 
1
2 
3 
16 
Complete system 
integration 
18 
14 
1
5 
 
6 
17 
OHCS 
Deployment 
6 
16 
 
 
6 
 
 
331
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
Figure 3.  OHCS Activity Network. 
TABLE II.  
OHCS GSD DEVELOPMENT SITES 
GSD Sites 
A 
B 
C 
D 
Resources Available (man-
hour/day) 
6 
4 
5 
3 
 
The OHCS project activates and project geographically 
distributed sites, presented in Tables I and II. OHCS project 
activities and the distributed sites are used as inputs such that 
all the GSD sites are optimally utilized. We used Evolver [14], 
a multi-objective optimization tool, to implement the three 
models for task allocation presented in Section III.  
 
 
Figure 4.  Equal Utilization of Four GSD Sites. 
 
Figure 5.  Optimal Utliziation of four GSD Sites. 
Figure 3 shows the task allocation of OHCS project to four 
geographical sites using ‘equal utilization of all sites’ model. 
Figure 4 shows the task allocation of OHCS project based the 
‘optimal utilization of all sites’ model. Similarly, Figure 5 
shows the task allocation under the ‘constraints based 
utilization of sites’ model such that project managers wants to 
use site A’s expertise in interface design and site D’s expertise 
in database implementation.  
 
 
Figure 6.  Utilization of four GSD Sites under Constraints. 
332
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

V. 
CONCLUSIONS AND FUTURE WORK 
Global software development approach is adopted by 
organizations with an aim to reduce development cost, 
improve overall software quality and increase productivity by 
having work carried out along the day using follow-the-sun 
concept. Task allocation is a key phase of GSD projects that 
directly impacts the benefits of adopting GSD. In this paper, 
we have presented a task allocation process to equally utilize 
different geographically distributed sites for a GSD project. 
The task allocation process uses a multi-objective 
optimization technique to allocate tasks of a GSD project. 
In the future, we aim at extending the task allocation 
process to handle complex objective functions and improve 
work distribution among different sites of a GSD project. We 
also aim to evaluate the presented model using larger case 
studies.  
ACKNOWLEDGMENT 
The authors would like to thank King Fahd University of 
Petroleum and Minerals (KFUPM) for its continuous support 
of research. This research is supported by the Deanship of 
Scientific Research at KFUPM under Research Grant 
IN131013. 
REFERENCES 
 
[1] T. Kern, and L. Willcocks, "Exploring information technology 
outsourcing relationships: theory and practice", Journal of 
Strategic Information Systems, vol. 9, pp. 321-350, 2000. 
[2] D. D. Bradstreet, and Bradstreet's Barometer of Global 
Outsourcing. 2000  [cited 2007 September]; Available from: 
<http://findarticles.com/p/articles/mi_m0EIN/is_2000_Feb_2
4/ai_59591405>. 
[3] S. Islam, M. M. A. Joarder, and S. H. Houmb, "Goal and risk 
factors in offshore outsourced software development from 
vendor's viewpoint", In Proceedings of IEEE International 
Conference on Global Software Engineering (ICGSE 09), pp. 
347-352, 2009.  
[4] S. Vathsavayi, O. Sievi-Korte, K. Koskimies and K. Systa, 
"Planning global software development projects using genetic 
algorithms", In Search Based Software Engineering, G. Ruhe 
and Y. Zhang, Editors. pp. 269-274, 2013. 
[5] D. Wickramaarachchi, and R. Lai, "A method for work 
distribution in Global Software Development", In Proceedings 
of IEEE 3rd International Advance Computing Conference, 
pp.1443-1448, 2013. 
[6] S. Setamanit, W. Wakeland, and D. Raffo, "Planning and 
improving global software development process using 
simulation", In Proceedings of the 2006 international workshop 
on global software development for the practitioner, pp.8-14,  
2006. 
[7] A. Mockus, and D. M. Weiss, "Globalization by chunking: a 
quantitative approach", IEEE Software, vol. 18, pp. 30-37, 
2001. 
[8] V. N. Tran, and H. M. Latapie, "Models for structuring teams 
and work in globally collaborative projects", In Proceedings of 
IEEE International Engineering Management Conference, pp. 
425-431, 2006. 
[9] A. Lamersdorf, J. Munch, and D. Rombach, "A survey on the 
state of the practice in distributed software development: 
criteria for task allocation", In Proceedings of 4th IEEE 
International Conference on Global Software Engineering, pp. 
41-50, 2009. 
[10] A. Lamersdorf, J. Munch, A. F. V. Torre, and C. R. R. Sanchez, 
"A risk-driven model for work allocation in global software 
development 
projects", 
In Proceedings 
of 
6th 
IEEE 
International Conference on Global Software Engineering, pp. 
15-24, 2011. 
[11] N. C. Narendra, K. Ponnalagu, Z. Nianjun and W. M. Gifford. 
"Towards a Formal Model for Optimal Task-Site Allocation 
and Effort Estimation", In Proceedings of Global Software 
Development Conference, pp. 470-477, 2012. 
[12] A. Lamersdorf, and J. Munch, "TAMRI: A Tool for Supporting 
Task Distribution in Global Software Development Projects", 
In Proceedings of 4th IEEE International Conference on Global 
Software Engineering, pp. 322-327, 2009. 
[13] M. Shen, G. Tzeng, and D. Liu., "Multi-criteria task 
assignment in workflow management systems", In Proceedings 
of the 36th Annual Hawaii International Conference on System 
Sciences, pp. 9-17, 2003. 
[14] www.palisade.com/evolver., last accessed June, 2014.  
[15] K. Schwalbe, "Information technology project management", 
Course Technology, 6th Edition, 2010. 
 
333
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

