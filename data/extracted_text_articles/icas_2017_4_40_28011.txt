Empirical Comparison of Fuzzy Cognitive Maps and Dynamic Rule-based Fuzzy 
Cognitive Maps 
 
Asmaa Mourhir 
Computer Science Department 
Al Akhawayn University in Ifrane 
Ifrane, Morocco 
email: a.mourhir@aui.ma 
Elpiniki I. Papageorgiou 
Computer Engineering Department 
Technological Education Institute (TEI) of Sterea Ellada, 
Lamia, Greece 
email: epapageorgiou@teiste.gr 
 
 
Abstract‚Äî Among the soft computing techniques that can be 
used effectively to model decision tasks in autonomous robotics 
are Fuzzy Cognitive Maps. Dynamic Rule-based Fuzzy 
Cognitive Maps (DRBFCMs) are a Fuzzy Cognitive Map 
variant that allows modeling of dynamic causal maps, where 
influence weights are determined dynamically at simulation 
time using Fuzzy Inference Systems, in order to adapt to new 
conditions. We aim in this work to compare and contrast 
DRBFCM to a conventional Fuzzy Cognitive Map in application 
of cotton yield in precision farming. The cotton yield model 
shows the relationships between soil properties like pH, K, P, 
Mg, N, Ca, Na and cotton yield. DRBFCM was evaluated for 360 
cases measured for three years (2001, 2003 and 2006) in a 5 ha 
experimental cotton field. The results revealed an accuracy of 
predictions of 85.55%, 87.22% and 73.33%, against 73.80%, 
67.20% and 69.65% for the conventional FCM model, and 
against 75.55%, 68.86% and 71.32% for the FCM model with 
the Nonlinear Hebbian Learning algorithm, for the years 2001, 
2003 and 2006 respectively. DRBFCM proved, in this case study, 
to predict more accurately the yield while being faithful to the 
real world model. 
Keywords‚Äî fuzzy cognitive maps; fuzzy inference systems; 
dynamic rule-based fuzzy cognitive maps; cotton yield prediction  
I. 
INTRODUCTION  
A Fuzzy Cognitive Map (FCM) is a soft computing 
technique and semi-quantitative technique that can be used as 
an intuitive elicitation tool to transfer individuals‚Äô tacit 
knowledge into a causal network. FCMs can be used 
effectively as an approach to bridge the gap between the 
design of causal loops and their effective use in any decision 
making process. FCM‚Äôs graph structure facilitates causal 
reasoning to study systems‚Äô dynamics in complex problems. 
FCMs also inherently support vagueness and ambiguities, and 
causal reasoning in FCMs allows handling of feedback loops. 
Moreover, FCM models produced by different individuals or 
groups can be combined to produce a larger and more reliable 
knowledge base, which can help solving knowledge 
inconsistencies 
by 
generating 
aggregated 
system 
complexities, using multiple participants or experts. FCM 
simulations can model the evolution of scenarios over time, 
and produce projections by evolving forward and letting 
concepts interact with one another. 
FCMs have been applied successfully in many scientific 
fields, including autonomous robotics. For example the 
authors in [1] used FCM causal inference as a mechanism to 
derive required control values from the FCM‚Äôs motion 
concepts and their interaction. The authors in [2] used a new 
FCM variant, named Event Driven-Fuzzy Cognitive Maps 
(ED-FCM), to model decision tasks in autonomous 
navigation. The authors in [3] [4] proposed Hybrid-Dynamic 
Fuzzy Cognitive Maps (HD-FCM) which incorporate 
different types of concepts and causal relations able to 
circumvent the main drawbacks of FCM modeling. In a recent 
work [5], the authors propose Dynamic Fuzzy Cognitive Maps 
(DFCM), with a multi-agent approach to develop an 
autonomous navigation system that has skills for learning, 
self-adaptation, behavior management and cooperative data 
sharing. A general review on FCMs‚Äô research during the last 
decade can be found in [6]. 
Many implementations of FCMs exist in the literature, but 
most of them focus on depicting causalities between system 
variables, rather than cause and effect relationships, and FCM 
inference allows drawing conclusions about what is caused 
and what is not caused, which is a major limitation in dynamic 
systems where reasoning is characterized by magnitudes of 
change and effects. Another shortcoming with FCMs is that 
the links‚Äô weights are forced into a static value in the range [-
1, 1]. In dynamic systems, the weight should be a function of 
other factors‚Äô influences, which allows modeling of non-
monotonic, nonlinear and dynamic relationships; in fact the 
effect of a variable X on Y should depend on the value of X. 
Moreover, variables in real models map to a universe of 
discourse within their minimum and maximum state limits; 
however, in FCM models, a threshold function normalizes all 
values between 0 and 1.  
A Dynamic Rule-based Fuzzy Cognitive Map (DRBFCM) 
is a FCM extension that allows reasoning in terms of 
deterministic magnitudes of effects. A major difference 
between DRBFCM and a conventional FCM model is that the 
weights are not fixed prior to running simulations, but are 
rather adapted dynamically during every step of a simulation, 
by using Fuzzy Inference Systems (FISs) [7].  
In this work, we will validate DRBFCM numerically, and 
compare the accuracy of its predictions to a conventional 
FCM model in application of cotton yield in precision 
farming, by building on the work of Papageorgiou et al. [8].  
The cotton yield model shows the relationships between 
soil properties, like Nitrogen (N), Phosphorus (P), Potassium 
(K), Sodium (Na), Clay (Cl), Sand (S), Calcium (Ca), 
Magnesium (Mg), pH, Electrical Conductivity (EC), Organic 
Matter (OM), and Cotton Yield (Y). DRBFCM is evaluated 
for 360 cases measured for three years (2001, 2003 and 2006) 
in a 5 ha experimental cotton yield.  
66
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
The paper is organized as follows. Section II presents a 
general background about FCM models, FCM models with 
Fuzzy Weights, and DRBFCM models. In Section III, we 
describe the cotton yield DRBFCM model, and we discuss the 
results of predicting cotton yield and compare them to the 
conventional FCM model. We highlight some conclusions 
and directions for future work in Section IV. 
II. 
MATERIALS AND METHODS 
In this section, we introduce the FCM soft computing 
technique, we also give background about the DRBFCM 
extension that leverages Fuzzy Logic inference to compute the 
system variables‚Äô states, using quantified perturbations 
produced by FISs. 
A. Fuzzy Cognitive Maps  
At the structural level, a FCM is a directed graph where 
nodes represent system concepts or variables, and links 
represent perceived causal relationships (caused or not) 
between concepts. According to Kosko [9], all the values are 
fuzzy; each edge between two concepts Ci and Cj is associated 
with a weight wij, which varies from -1 to 1. There are three 
different types of possible causalities between two concepts Ci 
and Cj:  
ÔÇ∑ 
A positive weight reflects an excitation relation. 
ÔÇ∑ 
A negative weight designates an inhibition relation.  
ÔÇ∑ 
A weight of zero indicates that Ci and Cj do not exert 
any influence on each other‚Äôs.  
These causal links (also called FCM connections) and 
their respective weights can be encoded into an NxN (N being 
the number of concepts) matrix, which is referred to as the 
Connection or Weight Matrix E.  
FCM‚Äôs graph structure facilitates causal reasoning; it is a 
decision support system where calculations can be made to 
perform an assessment of the consequences of a specific 
system state. FCM forward inference is very close to Artificial 
Neural Network (ANN) mechanisms, Kosko calculates each 
subsequent value of the causal state using previous state and 
weight matrix multiplication [9]. The concepts take values, 
which are also called activation levels, between 0 and 1, where 
zero means the concept being deactivated or not important, 
and 1 being activated or important. The State Vector of 
activations evolves in time according to the influences 
between concepts. By feeding the FCM with an initial 
stimulus S(t) (state vector at time (t)), it can model the 
evolution of a scenario over time by evolving forward and 
letting concepts interact with one another.  
The next state of the system S(t+1) is produced by 
multiplying previous state vector S(t) by the graph‚Äôs weight 
adjacency matrix E. In auto-associative ANNs, neurons are 
considered to have a memory with a self-feedback link weight 
of 1.  
The next state value of each concept Ci is hence 
elaborated, during simulation, by retrieving its value at the 
previous iteration, and adding it to the propagated weighted 
values of all concepts Cj that have a direct influence on the 
concept according to (1).  
ÔÄ†
Ci(k+1) ÔÄΩ ÔÄ†ÔÄ†F (Ci(k) ÔÄ´ ‚àë Cj(k) ÔÄ™ wji)ÔÄ†
ÔÄ®ÔÄ±ÔÄ©ÔÄ†
where Ci(k+1) is the activation value of concept Ci at iteration 
k+1, Ci(k) is the value of node Ci at iteration k, wji is the weight 
of the cause-effect link between Cj and Ci, and F is a threshold 
function like sigmoid used to normalize the values within the 
range [0, 1] as shown by (2) [10]. 
                           ùëÜ (ùë•) =
1
(1+ e(‚àíx) ) 
                     (2) 
In order to generate projections based on a given simulated 
scenario, a series of vector-matrix multiplications is 
performed, until a fixed point attractor; that is the vector-
matrix multiplication yields an equilibrium state, where the 
same vector is repeated over a number of iterations [9]. 
B. FCM Approach with Fuzzy Weights 
A variant of FCMs was proposed by Papageorgiou et al. 
[8]; it consists in generating weights using fuzzy linguistic 
terms, extracted from rules collected from domain experts. 
The approach consists in pooling domain knowledge from 
experts in the form of Fuzzy Rules [11] from experts for each 
interconnection of the FCM model. Thus, a number of 
linguistic weights are obtained for each interconnection by 
considering the consequent of the rule only, ignoring hence 
the antecedent part [8].  
In order to build the FCM weight matrix, the linguistic 
weights, obtained from all experts, are combined using Fuzzy 
Logic operators [12]. For every link connecting two concepts, 
the linguistic terms are aggregated by typically using the fuzzy 
Union operator [11]. The membership function of the Union 
of two Fuzzy Sets A and B, defined over the set X, with 
membership functions ÔÅ≠ÔÅÅ and ÔÅ≠ÔÅÇÔÄ†ÔÄ†respectively is defined by a 
T-conorm mapping. One of the most common used mappings 
is the maximum as shown by (3): 
ÔÅ≠ÔÅÅÔÉàÔÅÇÔÄ®xÔÄ©ÔÄ†ÔÄΩÔÄ†maxÔÄ†ÔÅõÔÅ≠ÔÅÅÔÄ®xÔÄ©ÔÄ¨ÔÄ†ÔÅ≠ÔÅÇÔÄ®xÔÄ©ÔÅùÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ®ÔÄ≥ÔÄ©ÔÄ†
Then, a defuzzification method is employed to calculate a 
single numerical weight value of the link. Several methods 
have been used in practice for defuzzification, the most 
popular method is the ‚Äúcentroid‚Äù method [11], which 
calculates the center of gravity of the aggregated fuzzy set as 
shown by (4): 
CoG =ÔÄ†‚à´ÔÅ≠ÔÅÅÔÄ†ÔÄ®xÔÄ©ÔÄ†x dxÔÄ†√∑ÔÄ†‚à´ÔÅ≠ÔÅÅÔÄ†ÔÄ®xÔÄ©ÔÄ†dxÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ†ÔÄ®ÔÄ¥ÔÄ©ÔÄ†
Thus, a numerical weight (wij) is calculated for the link 
between every pair of concepts Ci and Cj, prior to starting 
simulations. To demonstrate how the linguistic terms are 
aggregated, let us consider the relation between K (Potassium) 
and Y (cotton yield) using expert knowledge: 
1st Expert 
‚ÄúIF K IS med THEN Y IS med. Infer: influence 
IS med‚Äù 
2nd Expert 
‚ÄúIF K IS med THEN Y IS high. Infer: influence 
IS high‚Äù 
3rd Expert: 
‚ÄúIF K IS high THEN Y IS very high. Infer: 
influence IS very high‚Äù 
67
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
The linguistic influence terms (‚Äòmed‚Äô, ‚Äòhigh‚Äô and ‚Äòvery 
high‚Äô) are summed and an overall weight is produced, 
transforming hence the influence into the numerical constant 
weight WK-Y = 0.65. The process of aggregation and 
defuzzification for this example is shown by Figure 1. 
influence
Low
Low
Medium
High
First Expert
Medium
Second Expert
High
Third Expert
Membership 
function
Membership 
function
Membership 
function
influence
Membership 
function
influence
Centroid =0.65
Aggregation 
of linguistic 
variables
1
1
1
 
Figure 1. Aggregation and defuzzification of the three linguistic variables. 
In [8], FCMs were also enriched with the unsupervised 
Nonlinear Hebbian Learning (NHL) algorithm. The technique 
was used to overcome inadequate knowledge of experts or 
non-acceptable FCM simulation results. The weight 
adaptation procedure is based on the Hebbian Learning rule 
proposed in [13]. The nonlinear Hebbian-type rule for ANNs 
learning has been adapted and modified for FCM models as 
proposed by the authors in [14]. 
C. Dynamic Rule-based Fuzzy Cognitive Maps  
In this work, we build on the work of Mourhir et al. that 
proposes DRBFCM as an alternative to System Dynamics, 
using FCMs and Rule-based Systems [7]. DRBFCM models 
have three main properties. First, the fuzzy set theory adds true 
fuzziness to DRBFCM, and resolves ambiguities and 
subjectivity usually faced in complex real world problems 
[12]. Another main property is that the weights represent 
deterministic real values and not fuzzy binaries. The most 
fundamental property of a DRBFCM model is the ability to 
depict dynamic causalities between concepts, the influence 
induced on a given concept is not static, but depends on the 
initial state of influencing nodes. DRBFCM can adapt the 
weights dynamically by describing causal relationships using 
FISs.  
In DRBFCM, concepts represent causes or effects that 
collectively characterize a system state at a given time. Each 
concept, analyzed by experts in the model, is divided into a 
number of intervals to determine linguistically descriptions 
corresponding to threshold intervals, or possible states it can 
exist in using membership functions [11].  
A general Fuzzy variable called ‚ÄúVariation‚Äù is used 
consistently to represent the influence between concepts. The 
variation variable has the fuzzy sets like positively or 
negatively ‚Äòlow‚Äô, ‚Äòmedium‚Äô, ‚Äòhigh‚Äô or ‚Äòvery high‚Äô. DRBFCM 
model structure is shown by Figure 2. 
Expert knowledge map
Experts
Link
Fuzzy Inference System
Centroid
Sum
Fuzzification
Rules
Rule 2
Rule n
Rule 1
Inference Engine
Defuzzification
EC
Low
Medium
High
Very High
VAR
Low
Medium
High
Very High
Membership Functions
Knowledge base
 
Figure 2. DRBFCM model structure. 
The concepts‚Äô set of linguistic terms is used to describe the 
causal relationships and links between input concepts and 
outputs using fuzzy ‚Äúif-then‚Äù rules. A link between two 
concepts Ci and Cj, depicted by a connection in a DRBFCM 
model is represented by a FIS [11]. Each FIS is described 
using the Fuzzy Control Language (FCL) [15]. In FCL, a FIS 
inference system is usually composed of one or more Function 
Blocks (FB). In DRBFCM models, each FB has one input 
variable, and an output variable as well as a Rule Block (RB). 
The rule block is composed of a set of rules, as well as the 
aggregation, activation and accumulation methods [11]. In 
DRBFCM, the rules have a single antecedent related to a 
concept state a or concept‚Äôs variation, and output the variation 
strength which represents a perturbation in the target concept: 
IF Ci is A THEN Variation is Vij ON Cj 
IF Variation is Vi IN Ci THEN Variation is Vij ON Cj 
Since FCL supports only rules that map input concept 
states to output concepts states, the authors modified the FCL 
grammar to cope with rules describing concept variations by 
adding two clauses to the condition part and the conclusion 
part: (i) an in_clause: IN^ ID in the subcondition, that is used 
to specify the causal variation, where ‚ÄúIN‚Äù is a keyword and 
ID is the cause variable, and (ii) an on_clause: ON^ ID in the 
subconclusion, that is used to specify the effect variation, 
where ‚ÄúON‚Äù is a keyword and ID is the effect variable.  
Inference is carried according to an algorithm for 
combining effects on a given concept and dealing with 
feedback. In a given scenario, the concepts are activated with 
their real deterministic values.  
To run a simulation, the DRBFCM model is fed with the 
initial stimulus for a given scenario, and while the system does 
not converge or does not reach a minimum number of 
iterations, the inference algorithm is executed to update the 
activation value of each concept.  
68
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
To update the state value of a given concept, all the 
incoming connections on that concept are retrieved, and then 
the variation induced by every incoming connection is 
evaluated. Since every connection between two concepts is a 
FIS, fuzzy inference is used to compute the output variation. 
DRBFCM models make use of the Mamdani‚Äôs fuzzy 
inference process [16]. The implication method used is the 
‚ÄúMin‚Äù, the aggregation method is ‚ÄúMax‚Äù, and the 
defuzzification method used to quantify the variation is 
Centroid [11]. Once the different variations are obtained, the 
state of the concept is updated by using the sate vector and 
weight matrix multiplication. Concepts are considered to have 
memory with a self-feedback link weight equal to 1, so the 
activation value of the concept is updated by recalling its old 
value, and adding it to the summation of weighted input 
activations.  
Since DRBFCM models operate on real deterministic 
values, concepts are considered to have a maximum and a 
minimum state value. So when these are exceeded, the 
concept value is set to the maximum or the minimum value.  
III. 
NUMERICAL COMPARISON OF FCM AND DRBFCM 
MODELS IN A COTTON YIELD APPLICATION 
In this section, we compare and contrast DRBFCM to a 
conventional cotton yield FCM model, developed by 
Papageorgiou et al. [8] in a precision farming application. 
A. DRBFCM Cotton Yield Model 
We developed the cotton yield model, following the 
DRBFCM approach described in the previous section. 
However, in our work, although we use crisp real values to 
determine the influence, we stimulated the FCM model using 
normalized values in order to generate results that can be 
contrasted and compared consistently to the approach 
proposed by the authors in [8]. The initial values of concepts 
are transformed into the range [0,1] using a linear 
transformation based on the universe of discourse of fuzzy 
variables as shown by (5). 
             ùê∂ùëóùëõùëúùëüùëöùëéùëôùëñùëßùëíùëë = 
Cj‚àíCjmin
Cjmax ‚Äì Cjmin                               (5) 
Moreover, since there are no feedback loops in the cotton 
yield model, we simplified the inference algorithm by 
generating the weight matrix once for every record. Hence, 
simulations are carried according to the algorithm of Figure 3. 
The knowledge and data were obtained from the work of 
Papageorgiou et al. [8] to predict cotton yield data. Three 
experts contributed to the development of the cotton yield 
map, one experienced cotton farmer, and two experienced soil 
scientists, one from Technological Educational Institute of 
Larissa, Greece, and the other from the Laboratory of 
Regional Soil Analysis and Agricultural Applications of 
Larissa, Greece [8].  
The experts stated that there are elven soil parameters that 
can be used to determine cotton yield (t/ha) in precision 
farming, which are: Soil shallow Electrical Conductivity 
(mS/m), Magnesium (ppm), Calcium (ppm), Sodium (ppm), 
Potassium (ppm), Phosphorus (ppm), Nitrogen (ppm), 
Organic Matter (%), pH, Sand (%) and Clay (%). 
The experts described the soil parameters and their 
threshold values using membership functions as depicted in 
Table I. The experts were also requested to define the degree 
of influence exerted by one concept on another, using ‚Äúif-
then‚Äù rules, representing the causal relationships between soil 
parameters and the cotton yield.
Consider one record of cotton 
yield data: (C0, C1, ..C11, Y=0)
Squash the result between 0 and 1 
using sigmoid function:  
 
Update the concept value using: 
Ci
(t+1) = Ci
(t) + ‚àë Cj
(t) * Vji   
     ùëÜ (ùë•) =
1
(1+ e(‚àíx) ) 
 
no
Equilibrium?
yes
Classify the yield as ‚Äòhigh‚Äô or ‚Äòlow‚Äô
Generate weight matrix
yes
Compute variation weight Vji of Cj 
on Y using FISCj->y based on 
Mamdani‚Äôs inference
 More influencing   
concepts 
on Y ?
Yield classification
Yield category is 
low
Yield category is 
high
 Y>=0.85 ?
yes
no
Normalize concept values using the universe of 
discourse of fuzzy variables:
Cj=(Cj-Cjmin)/(Cjmax ‚Äì Cjmin)
Generate the weight 
matrix
More 
 records ?
Retrieve the aggregated 
fuzzy cognitive map
yes
 
Figure 3. Cotton yield inference algorithm. 
69
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
The list of fuzzy rules aggregated from the three experts is 
shown in Table II, where ‚ÄúVAR‚Äù is the variation fuzzy 
variable.  
TABLE I.  
CONCEPTS‚Äô MEMBERSHIP FUNCTION PARAMETERS. 
Concept  
Membership functions 
C1: Shallow 
EC (EC) 
VL := TRAPE 0 0 7.5 15; 
L := TRIAN 10 18 25; 
M := TRIAN 25 28 35; 
H := TRIAN 30 38 45; 
VH := TRAPE 40 45 100 100; 
C2: 
Magnesium 
(Mg) 
VL := TRAPE 0 0 60 120; 
L := TRIAN 60 140 240; 
M := TRIAN 160 290 360; 
H := TRIAN 300 500 1400; 
VH := TRAPE 700 950 1400 1400; 
C3: Calcium 
(Ca) 
VL := TRAPE 0 0 455 1000; 
L := TRIAN 545 1273 2000; 
M := TRIAN 1363 2455 3000; 
H := TRIAN 2637 3909 5000; 
VH :=TRAPE 4000 4380 5000 5000; 
C4: Sodium 
(Na) 
VL := TRAPE 0 0 26 59; 
L := TRIAN 32 70 123; 
M := TRIAN 80 140 200; 
H := TRIAN 156 250 600; 
VH := TRAPE 350 450 600 600; 
C5: 
Potassium 
(K) 
VL := TRAPE 0 0 24 65; 
L := TRIAN 30 81 135; 
M := TRIAN 88 152 230; 
H := TRIAN 190 275 600; 
VH := TRAPE 300 470 600 600; 
C6:Phosphor
ous (P) 
VL := TRAPE 0 0 5 10; 
L := TRIAN 5 12.5 20; 
M := TRIAN 12.5 22 31.5; 
H := TRIAN 25 38 50; 
VH := TRAPE 40 45 50 60; 
C7:Nitrogen 
(N) 
VL := TRAPE 0 0 3 8;  
L := TRIAN 5 8 17.5; 
M := TRIAN 12 20 27.5; 
H := TRIAN 22 32 45; 
VH := TRAPE 35 40 45 45; 
C8:Organic 
Matter (OM) 
L := TRAPE 0 0 0.6 1.1; 
M := TRIAN 0.5 1.5 2.5; 
H := TRAPE 1.8 2.1 3 3; 
C9: pH 
VL := TRAPE 0 0 4 5;  
SL := TRIAN 5 6 7;  
L := TRIAN 4 5 6; 
M := TRIAN 6 7 8;  
SH := TRIAN 7 8 9; 
H := TRIAN 8 9 10; 
VH := TRAPE 9 10 11 11; 
C10: Sand 
(S) 
L := TRAPE 0 0 15 30; 
M := TRIAN 20 45 70; 
H := TRIAN 60 75 90; 
VH := TRAPE 80 90 100 100; 
C11: Clay 
(Cl) 
L := TRAPE 0 0 12.5 20; 
M := TRIAN 10 22.5 35; 
H := TRAPE 30 37.7 60 60; 
TABLE II.  
COTTON YIELD FUZZY RULES. 
Concept  
If-then rules  
C1: Shallow 
EC (EC) 
IF EC IS VL THEN VAR IS PVL ON Y; 
IF EC IS M THEN VAR IS PL ON Y; 
IF EC IS H THEN VAR IS PM ON Y; 
IF EC IS H THEN VAR IS PH ON Y; 
IF EC IS VH THEN VAR IS PH ON Y; 
IF EC IS L THEN VAR IS PVL ON Y; 
C2: 
Magnesium 
(Mg) 
IF Mg IS VL THEN VAR IS NL ON Y; 
IF Mg IS L THEN VAR IS NL ON Y; 
IF Mg IS M THEN VAR IS NM ON Y; 
IF Mg IS H THEN VAR IS NM ON Y; 
IF Mg IS VH THEN VAR IS NM ON Y; 
C3: Calcium 
(Ca) 
IF Ca IS VL THEN VAR IS PM ON Y; 
IF Ca IS L THEN VAR IS PL ON Y; 
IF Ca IS M THEN VAR IS PM ON Y; 
IF Ca IS H THEN VAR IS PM ON Y; 
IF Ca IS VH THEN VAR IS PM ON Y; 
IF Ca IS VH THEN VAR IS PL ON Y; 
C4: Sodium 
(Na) 
IF Na IS VL THEN VAR IS NVH ON Y; 
IF Na IS VL THEN VAR IS NH ON Y; 
IF Na IS L THEN VAR IS NM ON Y; 
IF Na IS M THEN VAR IS NL ON Y; 
IF Na IS H THEN VAR IS NH ON Y; 
IF Na IS VH THEN VAR IS NH ON Y; 
IF Na IS VH THEN VAR IS NVH ON Y; 
C5: 
Potassium 
(K) 
IF K IS VL THEN VAR IS PVL ON Y; 
IF K IS L THEN VAR IS PVL ON Y; 
IF K IS M THEN VAR IS PM ON Y; 
IF K IS H THEN VAR IS PM ON Y; 
IF K IS VH THEN VAR IS PM ON Y; 
IF K IS VH THEN VAR IS PH ON Y; 
C6:Phosphor
ous (P) 
IF P IS VL THEN VAR IS PM ON Y; 
IF P IS L THEN VAR IS PM ON Y; 
IF P IS M THEN VAR IS PM ON Y; 
IF P IS H THEN VAR IS PM ON Y; 
IF P IS VH THEN VAR IS PM ON Y; 
C7:Nitrogen 
(N) 
IF N IS VL THEN VAR IS PVL ON Y; 
IF N IS L THEN VAR IS PL ON Y; 
IF N IS M THEN VAR IS PL ON Y; 
IF N IS H THEN VAR IS PL ON Y; 
IF N IS VH THEN VAR IS PM ON Y; 
IF N IS VH THEN VAR IS PL ON Y; 
C8:Organic 
matter (OM) 
IF OM IS L THEN VAR IS PL ON Y; 
IF OM IS M THEN VAR IS PL ON Y; 
IF OM IS H THEN VAR IS PM ON Y; 
C9: pH 
IF Ph IS VL THEN VAR IS PVL ON Y; 
IF Ph IS L THEN VAR IS PVL ON Y; 
IF Ph IS SL THEN VAR IS PVL ON Y; 
IF Ph IS M THEN VAR IS PVL ON Y; 
IF Ph IS SH THEN VAR IS PVL ON Y; 
IF Ph IS H THEN VAR IS PVL ON Y; 
IF Ph IS H THEN VAR IS PL ON Y; 
IF Ph IS VH THEN VAR IS PM ON Y; 
C10: Sand 
(S) 
IF S IS L THEN VAR IS NM ON Y; 
IF S IS M THEN VAR IS NM ON Y; 
IF S IS H THEN VAR IS NM ON Y; 
IF S IS VH THEN VAR IS NH ON Y; 
C11: Clay 
(Cl) 
IF Cl IS L THEN VAR IS PM ON Y; 
IF Cl IS M THEN VAR IS PM ON Y; 
IF Cl IS H THEN VAR IS PM ON Y; 
70
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
The degree of variation induced by one concept on another 
one is elaborated through the fuzzy variable ‚ÄúVar‚Äù of Figure 
4, with the following fuzzy sets (‚ÄúVVH: very very high‚Äù, 
‚ÄúVH: very high‚Äù, ‚ÄúH: high‚Äù, ‚ÄúM: medium‚Äù, ‚ÄúL: low‚Äù, ‚ÄúVL: 
very low‚Äù, ‚ÄúVVL: very very low‚Äù). The influence can be 
positive or negative. 
 
Figure 4.Variation fuzzy variable. 
B. Results and Discussion  
The used data consists of 360 entries measured for the 
years 2001, 2003 and 2006, as collected in a 5 ha field at 
Myrina, Karditsa prefecture, Central Greece. The FCM model 
has been developed based on raster data GIS approach, i.e., 
the data are stored in a two-dimensional matrix that represents 
the spatial distribution of every factor in the field. Each cell of 
the matrix corresponds to an area of 10 x 10 m, which is the 
spatial resolution of the yield data model. Measurements were 
collected in soil depth 0‚Äì30 cm. 
FCM simulations were run on cotton yield data till the 
model reached convergence. In order to discriminate between 
the different yield categories, we used the threshold of 0.85 as 
in [8]. If the estimated yield value is less than 0.85, which 
means that the yield production is less than the 85% of desired 
cotton production, then yield is categorized as ‚Äò‚Äòlow‚Äù. If the 
estimated yield value is higher than 0.85, then yield is 
considered as ‚Äò‚Äòhigh‚Äù.  
It can be seen from Table III that the predictions made by 
DRBFCM are actually better than the ones obtained by 
Papageorgiou et al. [8], even when the NHL algorithm is used. 
The results of DRBFCM inference revealed an accuracy of 
predictions of 85.55%, 87.22% and 73.33%, against 73.80%, 
67.20% and 69.65% for the conventional FCM model, and 
against 75.55%, 68.86% and 71.32% for the FCM model with 
the NHL algorithm, during the years of 2001, 2003 and 2006, 
respectively. 
TABLE III.  
PREDICTION ACCURACY RESULTS 
Year 
2001 
2003 
2006 
Conventional FCM accuracy 
73.80% 
67.20% 
69.65% 
FCM with NHL algorithm 
75.55% 
68.86% 
71.32% 
DRBFCM accuracy  
85.55% 
87.22% 
73.33% 
The DRBFCM modeling approach can hence enhance the 
results obtained by FCM modeling, while taking into 
consideration the ambiguities intrinsic to this type of 
applications. From the results of this case study, it can be also 
concluded that the simulations have proven DRBFCM to be 
more faithful with regards to the real world model structure. 
Indeed, in the traditional FCM, parts of the gathered rules are 
omitted. The antecedent of a rule would just be ignored, and 
the only thing that is used to draw a conclusion about the 
influence is the consequence: is the influence ‚Äúhigh‚Äù, 
‚Äúmedium‚Äù or ‚Äúlow‚Äù? Only those are used to generate weights. 
This results in building a complex dynamic model with 
nonlinear relationships, and not fully exploiting it in 
simulating the real world system. The DRBFCM model, on 
the other hand, is very authentic to the knowledge that has 
been aggregated. The consequences of the rules are also used, 
provided that the antecedent is fulfilled: which concept affects 
the yield, and to what extent?  
The differences in predictions are attributed to the 
generated weights. A recapitulation of weights for the 
traditional FCM model and DRBFCM are shown in Table IV, 
where we can clearly see that the influence of Potassium (K) 
is much lower in DRBFCM (WK-Y =0.22 ¬± 1.88E-04) 
compared to the traditional FCM (WK-Y =0.6).  
TABLE IV.  
FCM AND DRBFCM WEIGHTS 
 
Cotton yield (Y) 
Concept 
FCM 
DRBFCM a 
EC 
0.25 
0.22 ¬± 2.04E-04 
Mg 
-0.4 
-0.48 ¬± 4.27E-02 
Ca 
0.5 
0.48 ¬± 3.15E-02 
Na 
-0.7 
-0.7 ¬± 2.00E-15 
K 
0.6 
0.22 ¬± 1.88E-04 
P 
0.5 
0.49 ¬± 5.24E-02 
N 
0.4 
0.35 ¬± 1.51E-02 
OM 
0.4 
0.35 ¬± 8.23E-03 
pH 
0.1 
0.26 ¬± 2.37E-02 
S 
-0.6 
-0.5 ¬± 7.07E-16 
Cl 
0.5 
0.5 ¬± 5.47E-16 
a Mean values shown with standard deviation obtained 
using the 360 cotton yield cases. 
The low influence produced by DRBFCM seems to make 
sense as Potassium produces a ‚Äòhigh‚Äô variation when it is ‚Äòvery 
high‚Äô, nevertheless by looking at the 360 cases of cotton yield 
data, Potassium was classified as either ‚Äòmedium‚Äô or ‚Äòlow‚Äô all 
the time. Hence, DRBFCM seems to generate weights that are 
coherent with the model structure and collected knowledge, 
since it produces predictions that can be interpreted by tracing 
the rules that contributed to the results.  
IV. CONCLUSION AND FUTURE WORK 
DRBFCM is a rule-based FCM, where relationships 
between concepts are expressed in the form of fuzzy ‚Äúif-then‚Äù 
rules that dynamically determine the influence of one concept 
on another one, while running a simulation for a specific 
scenario. In this work, we evaluated DRBFCM numerically 
using cotton yield knowledge and data. We used 360 entries 
of measured data, collected during three years in an 
experimental cotton field in Central Greece. The results 
revealed an accuracy of predictions of 85.55%, 87.22% and 
73.33% for the years 2001, 2003 and 2006, respectively.  
In comparison to the conventional FCM approach with 
Fuzzy Weights, DRBFCM proved, in the cotton yield case 
study, to predict more accurately the yield while being faithful 
71
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

 
to the real world model. The knowledge collected from the 
experts is fed into a standard inference system to map 
adequately the input space into the output space. Hence, the 
generated projections are more coherent with the model‚Äôs 
collected knowledge, and the use of rules improves 
interpretation of the produced results. 
In this study, we used the inference parameters and 
membership functions as defined in [8]. As a future work, we 
would like to perform an uncertainty and a sensitivity analysis 
to gain insights into the factors that would have an impact on 
the produced predictions, and to attribute the uncertainty in 
the output to the uncertainties in the input.  
REFERENCES 
[1] O. Motlagh, S. H. Tang, N. Ismail, and A. R. Ramli, "An expert 
fuzzy cognitive map for reactive navigation of mobile robots," 
Fuzzy Sets and Systems, vol. 201, pp. 105-121, 2012. 
[2] M. Mendon√ßa, L. V. R. de Arruda, and F. Neves, "Autonomous 
navigation system using Event Driven-Fuzzy Cognitive 
Maps," Applied Intelligence, vol. 37, pp. 175-188, 2012. 
[3] M. Mendon√ßa, L. V. R. Arruda, I. R. Chrun, and E. S. d. Silva, 
"Hybrid Dynamic Fuzzy Cognitive Maps Evolution for 
autonomous navigation system," in 2015 IEEE International 
Conference on Fuzzy Systems (FUZZ-IEEE), 2015, pp. 1-7. 
[4] M. Mendon√ßa, B. A. Ang√©lico, L. V. R. de Arruda, and F. 
Neves, "A Subsumption Architecture to Develop Dynamic 
Cognitive 
Network-Based 
Models 
With 
Autonomous 
Navigation Application," Journal of Control, Automation and 
Electrical Systems, vol. 24, pp. 117-128, 2013. 
[5] M. Mendon√ßa, I. R. Chrun, F. Neves Jr, and L. V. R. Arruda, 
"A cooperative architecture for swarm robotic based on 
dynamic fuzzy cognitive maps," Engineering Applications of 
Artificial Intelligence, vol. 59, pp. 122-132, 2017. 
[6] E. I. Papageorgiou and J. L. Salmeron, "A Review of Fuzzy 
Cognitive Maps Research During the Last Decade," IEEE 
Transactions on Fuzzy Systems, vol. 21, pp. 66-79, 2013. 
[7] A. Mourhir, T. Rachidi, E. I. Papageorgiou, M. Karim, and F. 
S. Alaoui, "A cognitive map framework to support integrated 
environmental assessment," Environmental Modelling & 
Software, vol. 77, pp. 81-94, 2016. 
[8] E. I. Papageorgiou, A. Markinos, and T. Gemptos, 
"Application of fuzzy cognitive maps for cotton yield 
management in precision farming," Expert Systems with 
Applications, vol. 36, pp. 12399-12413, 2009. 
[9] B. Kosko, "Fuzzy Cognitive Maps," International Journal of 
Man-Machine Studies, vol. 24, pp. 65-75 1986. 
[10] A. K. Tsadiras, "Comparing the inference capabilities of 
binary, trivalent and sigmoid fuzzy cognitive maps," 
Information Sciences, vol. 178, pp. 3880-3894, 2008. 
[11] T. J. Ross, Fuzzy Logic with Engineering Applications. New 
York: Wiley, 2009. 
[12] L. A. Zadeh, "Fuzzy sets," Inform. Control, vol.8, pp. 338‚Äì353, 
1965. 
[13] E. Oja, H. Ogawa, and J. Wangviwattana, "Learning in 
nonlinear constrained Hebbian networks," in Artificial neural 
networks, T. Kohonen, K. Makisara, O. Simula., and J. Kangas, 
Eds., ed Amsterdam: North-Holland, 1991, pp. 385-390. 
[14] E. I. Papageorgiou and P. P. Groumpos, "A weight adaptation 
method for fuzzy cognitive map learning," Soft Computing, 
vol. 9, pp. 846-857, 2005. 
[15] IEC, "IEC 61131 - Programmable Controllers-Part 7: Fuzzy 
control 
programming," 
ed. 
Geneva: 
International 
Electrotechnical Commission technical committee industrial 
process measurement and control, 2000. 
[16] E. H. Mamdani, "Application of fuzzy algorithms for control 
of simple dynamic plant," Electrical Engineers, Proceedings of 
the Institution of, vol. 121, pp. 1585-1588, 1974. 
 
 
 
 
72
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-555-5
ICAS 2017 : The Thirteenth International Conference on Autonomic and Autonomous Systems

