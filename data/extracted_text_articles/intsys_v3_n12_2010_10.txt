Adaptation and Self-adaptation of Developmental Multi-Robot Systems
Serge Kernbach, Eugen Meister, Florian Schlachter, Olga Kernbach
Institute of Parallel and Distributed Systems, University of Stuttgart, Germany
Email: {Serge.Kernbach, Eugen.Meister, Florian.Schlachter, Olga.Kernbach}@ipvs.uni-stuttgart.de
Abstract—In this work we explore several adaptive and
self-adaptive processes in systems with a high degree of
developmental plasticity. It is indicated that such systems are
driven by two different forces: design goals and self-concept,
which deﬁne what the system “should be” and “may be”.
The paper discusses mechanisms, leading to adaptive and
self-adaptive behavior, as well as possible conﬂicts between
them. Bound and unbound self-concepts are introduced. The
discussed mechanisms are exempliﬁed by a collective locomo-
tion of reconﬁgurable multi-robot system, where several self-
organizing and evolutionary approaches are exploited.
Keywords-Collective robotics, artiﬁcial multi-robot organ-
isms, adaptation, self-adaptation, self-development, long-term
artiﬁcial evolution.
I. INTRODUCTION
Adaptability and self-adaptability represents an impor-
tant characteristic of systems working in real environ-
ments [1][2]. Different uncertainties, variation of parameters
or even an appearance of unknown situations require such
mechanisms, which allow the system to ﬁnd a compromise
between achieving the main goal, set by a designer, ﬂexible
behavior to ﬁt the environment and self-developmental fea-
tures, expressed by a self-concept. Finding this compromise
requires three important mechanisms: plasticity of the sys-
tem itself [3]; regulative mechanisms, which uses system’s
plasticity to perform adaptation [4][5]; and, ﬁnally, a goal
and self-concept, which drive the system along adaptive and
self-developmental changes.
Plasticity of the system can be achieved by exploiting the
principle of heterogeneous multicellularity [6]: each module
is compatible with other modules and they can assemble and
disassemble themselves into structures with different func-
tionality [7], see Figure 1. Not only structural functionality,
but also regulative and homeostatic mechanisms can be self-
developed; they are addressed by developmental robotics.
Multi-robot systems with high-developmental plasticity are
explored in several research projects, e.g., [8][9], in common
they are referred to as artiﬁcial organisms [10].
Structures and functionality of artiﬁcial organisms are
closely related to each other, by changing macroscopic
structure, the system also changes its own functionality and
correspondingly behavior [11]. Relation between structures,
functions and behavior can be represented as shown in Fig-
ure 2. We denote this relationship as “generating” because
the upper level generates the lower level, i.e., structures gen-
erate functions and functions generate behavior. Controllers
in functions and structures – they represent the regulative
level – allow some degree of ﬂexibility (adaptability) for
the system. The targeted behavior on the regulative level
is expressed by a ”goal”, which describes aims of the
system itself and the criteria for achieving adaptive behavior.
Adaptivity on this level depends on capabilities of a designer
to foresee possible environmental changes and to integrate
a reaction on these changes into the controllers. To react
on unpredictable changes on the design stage, the second
generating level is required, which can modify controllers.
The generating level contains different deriving and evolving
mechanisms, which can generate the regulative level and
essentially, when not completely, change the system. The
targeted behavior on the generating level is expressed by
a “self-concept”, which is deﬁned in a broader way than
a “goal”. It describes possible developmental changes and
determines what the system “may be”. When the behavior
on the regulative level is referred to “adaptive”, the gener-
ating level is associated with “self-adaptive”. Such changes
on the generating level, which are not directly related to
adaptation, but rather to ontogenetic self-modiﬁcation, can
be also associated with “self-development”, which originates
from the neuroscience community, e.g. [12]. Despite “self-
development” is a more general notion, targeting primar-
ily cognitive capabilities, the “self-adaptation” and “self-
development” overlap in several points since they are de-
veloped in parallel.
Technical systems possess goal-oriented behavior, but
should be also adaptive to uncertainties and changes in
the environment and have some degrees of freedom for
self-development. To some extent, these systems are driven
by two different forces: by a goal and by a self-concept.
When the degree of adaptation is low, there are no essential
conﬂicts between them. When the plasticity is high, the
system can be hindered by self-adaptive processes from
reaching the main goal. Here we are facing a new conceptual
problem about long-term controllability of self-adaptive and
self-developmental processes. Obviously, that either the goal
should be formulated in such an invariant way, which
allows multiple approaches for its achieving, or self-adaptive
processes should basically be limited.
This paper extends and generalizes several ideas expressed
in [1][13][14] and introduces a more detailed link between
a high-level notion of adaption and practical implemen-
tation of adaptive mechanisms. The rest of this work is
121
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

structured in the following way: ﬁrstly, a short introduction
into developmental robotics is made in Section II and
then different adaptive and self-adaptive mechanisms are
overviewed in Sections III and IV. Adaptation and self-
adaptation, as well as bound and unbound self-concepts
are discussed in Section V. To exemplify the mentioned
ideas, the Section VI introduces the problem of macroscopic
locomotion for artiﬁcial multi-robot organisms. Adaptabil-
ity of macroscopic locomotion is approached with four
main mechanisms: adaptive multi-functional local drivers
in Section VI-A, adaptive self-organization on the level of
interacting structures in Section VI-B, evolving by using a
global ﬁtness evaluation in Section VI-C and a generation
by using the bound self-concept in Section VI-D. Finally,
this paper is concluded in Section VII.
II. DEVELOPMENTAL ROBOTICS
Artiﬁcial developmental systems, in particular develop-
mental (epigenetic) robotics [3], are a new emerging ﬁeld
across several research areas – neuroscience, developmental
psychology, biological disciplines such as embryogenetics,
evolutionary biology or ecology, and engineering sciences
such as mechatronics, on-chip-reconﬁgurable systems or
cognitive robotics [15]. The whole research area (not only of
artiﬁcial systems) is devoted to an ontogenetic development
of an organism, i.e., from one cell to a multi-cellular adult
system [16].
A closely related ﬁeld is evolutionary robotics [17],
which uses the methodology of evolutionary computation
to evolve regulative structures of organisms over the time.
Evolutionary robotics tries to mimic biological processes of
evolution [18], but also faces challenges of embodiment [19],
reality gap [20], adaptation [21] or running on-line and on-
board on a smart microcontroller device [5].
In several points the developmental and evolutionary
methodologies differ from each other:
• “... should try to endow the [developmental] system
with an appropriate set of basic mechanisms for the
system to develop, learn and behave in a way that
appears intelligent to an external observer. As many
others before us, we advocate the reliance on the prin-
ciples of emergent functionality and self-organization
... ” [3];
• “evolutionary robotics is a new technique for the au-
tomatic creation of autonomous robots. Inspired by
the Darwinian principle of selective reproduction of
the ﬁttest, it views robots as autonomous artiﬁcial
organisms that develop their own skills in close in-
teraction with the environment and without human
intervention” [17].
Despite differences, evolutionary and developmental ap-
proaches share not only common problems, but also some
ways to solve them, it seems that both are merging into one
large area of self-developmental systems [10].
Both developmental and evolutionary methodologies im-
pose a set of prerequisites on a system; one of the most
important from them – it should possess a high degree of de-
velopmental plasticity. Only then an organism can be devel-
oped or evolved. Developmental plasticity requires a speciﬁc
ﬂexible regulative, homeostatic, functional and structural
organization – in this point evolutionary/developmental sys-
tems differ from other branches of robotics. Since collective
systems, due to their high ﬂexibility and cellular-like orga-
nization, can provide such a versatile and re-conﬁgurable
organization – collective robotics is a suitable object for
application of evolving and developmental approaches.
The approach, used in our work, is based on modularity
and reconﬁgurability of the robot platform, as shown in
Figure 1. Individual modules possess different functionality
(a)
(b)
(c)
(d)
Figure 1.
(a) Prove-of-concept: individual robots; (b) Prove-of-concept:
aggregated robots into an artiﬁcial organism; (c), (d) Real prototypes:
aggregated robots (images c⃝SYMBRION, REPLICATOR projects).
and can dock to each other. Changing the way of how they
are connected, an aggregated multi-robot system (organism)
possesses many degrees of structural and functional freedom.
Due to a capability of self-assembling, robots have a control
over their own structure and functionality; in this way they
can emerge different “self-*” features, such as self-healing,
self-monitoring or self-repairing. These self-* features are
related in many aspects to adaptability and evolve-ability, to
emergence of behavior and to controllability of long-term
developmental processes. The self-issues are investigated
in manufacturing processes [22], distributed systems [23],
control [24], complex information systems [25] or cognitive
sensor networks [26].
Flexibility and changeability of structures and functions
are one of the most important aspects of artiﬁcial multi-
122
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

robot organisms [11]. In Figure 2 we demonstrate the
dependencies between structures and functions, as well as
introduce a two-layers control architecture with regulative
and generating levels. The ﬁrst level is related to control,
Structures
Functions
Behavior
Emergence
Controllers:
- bio-inspired
- implicit-rule based (ANN)
- expliciet-rule based
- self-referred
Learning
evolving
algorithmic
decomposition
top-down
reductive
bottom-up
simulative
Structural rules
and int. param.
Functionanal rules
and int. param.
External
Parameters
External
Parameters
External
Parameters
Behavioral
feedback
Functional
feedback
Regulative Level
Generating Level
Emergence
Figure 2.
Functional scheme of regulative and generating levels in
structural systems (image from [14]).
we denote it as the regulative level. It contains different
controllers, such as explicit and implicit rule-based (arti-
ﬁcial neural networks), different bio-inspired, self-referred
or learning systems. These controllers inﬂuence structural
or functional rules as well as change parameters of the
corresponding level. All controllers work based on the
scheme: change of input parameters → changes of output
parameters/rules. The main goal of the regulative level is to
maintain an internal homeostasis of the system, to execute
different tasks or, more generally, to demonstrate purposeful
behavior depending on external conditions. Controllers at the
regulative level allow some degree of adaptability, deﬁned
by design goals.
In detail, it depends to which extent a designer of these
controllers was able to foresee possible changes of the
environment and to integrate a reaction on these changes
into the controllers. The controllers allow different degrees
of reaction on changes. However, the system at the regulative
level is able to react only to changes whose parameter
range was predicted in advance during the development of
controllers or learning mechanisms. When changes are not
predictable at the design stage, we need to introduce the
second level, which can modify regulative controllers – we
denote this as the generating level.
Deriving is primarily related to distributed problem solv-
ing and planning approaches, known in the multi-agent
community [27], symbolic tasks decomposition [28], struc-
tural decomposition [29], self-referred dynamics [30] and
others. These approaches are fast, deliver a predictable
behavior and can be applied when a new situation is at
least structurally known. Evolving is basically related to
evolutionary approaches, see e.g. [31], and can be applied
when the situation is completely unknown and a large search
space of possible solutions should be explored. Recently,
evolutionary approaches have been applied to a wide class
of robotic problems [32].
Collective systems with such a two-layered control ar-
chitecture and self-assembling capabilities possess extended
developmental plasticity and allow a wide range of adap-
tation and self-modiﬁcations. However, there are several
open questions about “driving forces” of adaptation and
self-adaptation. Since currently there are several theories
towards adaptive systems, we need ﬁrst to identify classes
and mechanisms of adaptation, as it is shown in the next
section.
III. THREE MAINSTREAMS IN ADAPTIVE SYSTEMS
Adaptability is often considered in biological terms of
natural evolution [33] or environmental uncertainty [34] as
well as in management and business processes [35]. There
have been several attempts to create a common theory of
adaptability, such as the approach suggested by Michael
Conrad [34]. Overviewing the vast literature on the ﬁeld of
adaptation, we can recognize three main streams driving fur-
ther development and representing different methodologies
and different approaches to adaptation. The ﬁrst and oldest
stream is related to the theory of adaptive control. Several
early works in adaptive control date from the late 50s - early
60s [36][37]. In the mid-late 70s several issues related to
temporary stabilities [38] appeared, which in turn led to iter-
ative control re-design and identiﬁcation, and contributed in
the mid-80s to robust adaptive control [39][40]. Overviews
of adaptive architectures can be found in textbooks [41][42],
which can be generalized as a high-level architecture, shown
in Figure 3(a) [43].
Controller
Plant
Identifier
Controller
Parameters
Adaptive part
Plant
Parameters
Disturbance
Output
Reference
+
-
Control law
calculation
(a)
Sensing
Learning
Actuation
Controller
Knowledge
Models
Reasoning
Planning
Environment
Reactive part
Deliberative part
(b)
Figure 3.
A high-level architecture for (a) adaptive control (b) adaptive
behavioral systems (images from [14]).
Adaptive control consists of two parts, a conventional
feedback-based control loop and an adaptive part, depicted
by the dashed line in Figure 3(a). The environment is not
explicitly integrated into this model, it is implicitly reﬂected
by introducing disturbances and by uncertainties in the plant.
The goal of the adaptive part is to estimate the behavior of
a plant (by the identiﬁer) and to calculate dynamically the
123
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

control law (by the control law calculator). When in optimal
control, a control law is designed off-line by a designer,
an adaptive controller does it on-line. Most challenges in
adaptive control theory are concentrated around adaptation
of control to parameters of a plant when these parameters
are unknown or changing.
The second mainstream of adaptation is located around
adaptive behavior, which ﬁrst arises within the AI commu-
nity, e.g. [44], and involves cognitive aspects of adaption
[45]. There appear a few new components in the scheme
from Figure 3(a): explicit environment, sensing and actua-
tion, as well as the deliberative cycle, shown in Figure 3(b).
When the reactive part of this scheme is in fact the optimal
controller from Figure 3(a), the deliberative part represents a
new AI component. The adaptive system is now embedded
into the unpredictable/dynamically changing environment;
these systems are often referred to as situated systems
[46]. Sensing and actuation represent a “body” of the
system, intelligence (and so adaptation) is treated in terms
of embodiment [47]. Achieving adaptivity in this context is
spread into several approaches: different learning techniques
in reactive and deliberative parts [48][49][50], behavior-
based approaches [51], adaptive planning and reasoning
[52], biological inspiration in cognition [53], evolutionary
approaches [54] and many others. The goal of adaption can
be formulated as achieving desired environmental responses
according to some selected ﬁtness/reward criteria.
The third mainstream towards adaptation is related to
the community around distributed and software-intensive
systems, computational, communication and sensor net-
works. With some degree of generalization, the business
applications can be also related to this mainstream [55].
The environment involves explicit users; the system itself
is separated into different levels (applications), which run
in parallel [56]. The goal of adaptation here is related to
scalability, self-optimization and self-protection, recognition
of context, as well as to the software-engineering issues
addressing reliability [57].
IV. MECHANISMS OF ADAPTATION IN COLLECTIVE
SYSTEMS
Three mainstreams in the theory of adaptive systems,
considered in the previous section, allow making several
conclusions towards their underlying adaptive mechanisms.
These mechanisms are closely related to three following
issues: developmental plasticity, capabilities to determine
desired modiﬁcations and, ﬁnally, mechanisms, allowing
reaction on changes by utilizing plasticity. Since adaptive
systems are approached from several independent directions
(see the ﬁrst bio-inspired work on adaptation by Ashby [58]),
understanding of these underlying mechanisms differs from
community to community.
Generalizing experience from the adaptive control the-
ory [42], AI domains [44] and the latest developments in
bio-inspired [32] and software intensive systems [59], there
are four classes of developmental plasticity:
Plasticity level 1. Fixed interactions. For several appli-
cations, mostly in industrial environment, collective agents
are expected to work in well-deﬁned environment, where
all possible environmental ﬂuctuations can be absorbed by
external mechanisms (e.g. by human personal). In this way,
it is much cheaper to make agents with fully or partially
predeﬁned behavior. Cooperative behavior of collectively
working robots includes some number of adaptive mech-
anisms, however is mostly preprogrammed [60].
Plasticity level 2. Tunable and reconﬁgurable cases.
These collective systems have several degrees of freedom re-
lated to developmental plasticity. Adaptivity here is achieved
in different ways: from parameter changing, feedback-based
mechanisms [61], adaptive self-organization [62] until fully
reconﬁgurable systems. Here also a multitude of learning
mechanisms can be applied [63].
Plasticity level 3. Bounded development. Adaptivity
is designed to be in some range of possible variations.
Normally, it is deﬁned by some structural mechanisms,
for example by a nature of reward. The limit of adaptive
systems is reached when a new structural change happens
or the system is not able to identify the required reward
(for reward-based mechanisms). In this case the system
needs to modify its own structure to absorb environmental
changes. We refer the systems, capable of structural changes
with ﬂexible reward/feedback mechanisms, to developmental
collective systems (see more in Section V).
Plasticity
level
4.
Unbounded
development. “Un-
bounded” means a very high degree of developmental
plasticity, similar to biological cellular systems. Such sys-
tems are potentially capable of unbound increasing of their
complexity, diversity or information capacity (see more in
Section V).
Considering capabilities to detect changes and to de-
termine desired modiﬁcations, we basically refer to three
following schemes:
1. Model-reference based detection. This is a widely
used scheme in e.g. adaptive control [64], machine learn-
ing [63], artiﬁcial evolutionary systems [17] and many other
areas, where the detection of changes represent an error
between a model and a system (“plant” in control theory).
Multiplicity of Feedback-, Reward-, and Fitness- based
mechanisms [61][65] originate from this model-reference
based approach. This is the main detection mechanism for
adaptive systems.
2. Self-tuning based detection. This is also very popular
approach, see e.g.[66], the ﬁrst ideas are referred to [67]. It
consists of a parameter estimator, a design calculation and a
regulator with adjustable parameters, the idea is to select “a
design for known plant parameter and to apply it to unknown
plant parameter, using recursively estimated values of these
parameters” [64, p.189]. Self-tuning mechanisms are often
124
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

used in terms of self-adaptive control, especially in the 60x
and 70x [68].
3. Concept-based detection. Self-developmental systems
with a high degree of plasticity cannot use model- or tuning-
based detection mechanisms – mechanisms of detection are
not plastic enough to follow these systems. Instead so-
called self-concept-based approach has been proposed (ﬁrst
in human psychology [69][70], see more in Section V). This
mechanism determines desired modiﬁcations based on in-
ternal stimuli, containing in the self-concept; in many cases
each self-modiﬁcation creates a new generation of adaptive
changes, which are absorbed by the model-reference based
detection. This mechanism is mostly utilized in self-adaptive
systems.
The mentioned developmental degrees of freedom, to-
gether with the detection mechanisms, can create different
combinations, which result in several adaptive and self-
adaptive mechanisms. Focusing now on adaptation, we in-
dicate three main classes of such mechanisms:
1. Parameter-based adaptive mechanisms. This kind
of adaptive mechanisms has a long tradition in the con-
trol theory, see e.g. [41]. Here the system is controlled
through control parameters, see Figure 3(a). By modifying
the values, the controlled system responses by changing its
behavior (in the terminology of control theory – the transfer
function). There exists a multitude of possible variations:
when the system is known, its analytical model can be used
for control purposes; when the environment is simple – it
is incorporated into the analytical model; when the system
is unknown (the black box approach) – different feedback
mechanisms can be utilized for control purposes. Different
ways of how to adapt the system are the focus of unsu-
pervised reward-based learning approaches. The parameter-
based adaptive mechanisms are very efﬁcient, however pos-
sess several drawbacks. First of all, the system is adaptive
only within such variations of a transfer function, which are
allowed by changes of control parameters. The second point
is related to the feedback mechanisms/analytical regulator –
this element represents a general bottleneck. For example,
a feedback mechanism expects only a temperature as a
feedback parameter. In a situation where not only a tem-
perature but also a light becomes a feedback parameter, the
predeﬁned regulator will not provide an adequate regulation.
2. Modularity-based adaptive mechanisms. To increase
ﬂexibility of the systems to react to environmental changes,
another principle has been suggested. This principle is
based on the so-called “atomic structure”, where the system
consists of modules, which can be dynamically linked to
each other. The linkage can be of binary as well as fuzzy
character, see Figure 4. Examples of such systems are arti-
ﬁcial neuronal networks (ANN) [71], Genetic Programming
(GP) [31], reconﬁgurable robotics [72] and others. Modular
structure has several dedicated issues, i.e., granularity of
modules – how large are changes of the transfer function
by re-linking only one elementary module. Developers are
trying to design the modules so that to make this change
as small as only possible – i.e., to provide possibly smaller
granularity. Not only the system itself, but also the regu-
lator can be based on a modular structure; this eliminates
drawbacks of parameter-based mechanisms related to a ﬁxed
structure of regulator.
(a)
(b)
Figure 4.
Simpliﬁed structure of (a) modularity-based adaptive mecha-
nisms ; (b) self-organized adaptive mechanisms.
3. Self-organized adaptive mechanisms. In contrast to
the two previous adaptive mechanisms, the self-organization
represents another approach for adaptation. Self-organizing
systems consist of many interacting elements with a high
degree of autonomy [73], see Figure 4. The transfer function
of such systems is “generated“ dynamically through interac-
tions. Usually, when these interactions are not synchronized,
the transfer function is irregular or even chaotic. However,
when these interactions become synchronized in some way,
we observe an appearance of “ordered transfer function”.
Self-organized adaptive mechanisms introduce a feedback
directly into the interactions among elements. In this way,
any changes in a local feedback modify the whole collective
behavior [74][75]. In many cases it happens without any
regulators at all; all interacting elements modify their own
interactions [76].
Since environmental changes require an adaptive reaction
from a system, which in turn requires speciﬁc control
mechanisms, we can divide changes and reactions into those
forecast in advance and correspondingly those not forecast
in advance. This division is relative, because in practical
situations each change has forecasted and not forecasted
components.
Now, based on the introduced concepts, we can deﬁne
adaptability [14]. Adaptability is closely related to envi-
ronmental changes and the ability of a system to react to
these changes and the capability of the designer to forecast
reaction of the environment to the system’s response. There-
fore adaptability is deﬁned in term of the triple-relation:
environmental changes→ system’s response → environmen-
tal reaction. In general, adaptability is the ability of a
collective system to achieve desired environmental reactions
in accordance with a priori deﬁned criteria by changing its
own structure, functionality or behavior initiated by changed
125
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table I
FOUR TYPES OF ENVIRONMENTAL CHANGES IN ROBOTIC APPLICATIONS
AND EXAMPLES OF CASES BOTH FORECAST AND NOT FORECAST IN
ADVANCE, FROM FROM [14].
Environmental
changes
leading to:
Examples: Forecast in Ad-
vance
Examples: Not Forecast in
Advance
Appearance
of
new
situations
Installation
of industrial
robots in a new workshop
Work in previously unex-
plored environment (e.g.
landing on Mars)
Changed
functional-
ity
Changing a type of loco-
motion (e.g. from wheeled
to legged), when changing
a terrain type
Search and rescue
sce-
nario
when
robots
en-
counter unknown obsta-
cles
Modiﬁed
behavioral
response
Gravitational perturbance
of ﬂying object in space
and ﬁnding new control
laws for engines
Distributed
control
of
legged
locomotion
for
obstacles
of
random
geometry
Optimization
of
parameters
Changing
of
day/night
light
and
adapting
intensity
of
additional
light
Adapting
locomotive
parameters for randomly
moving obstacles
environment. In Table I we roughly specify four different
categories of environmental changes.
According to environmental changes from this table, we
can identify ﬁve different classes of adaptability in collec-
tive systems, capable of structural phenomena: optimization
mechanisms; behavioral control; functional control; deriva-
tion of new regulatory functionality and, ﬁnally, evolving of
new regulatory functionality. These mechanisms are graphi-
cally represented in Figure 5. Since we involve in this ﬁgure
Class of
Adaptability
parameter
optimization
behavioral
control
functional
control
derivation of
regulatory
functionality
evolving of
regulatory
functionality
parametric
changes
required
behavioral
changes
required
functional
changes
new
situations
Environmental
Changes
adaptation as
variation of parameters
adaptation as
variation of structural rules
adaptation as self-derivation
of regulative mechanisms
adaptation as evolving of
regulative mechanisms
adaptation as
variation of functional rules
fixed controllers
changeable controllers
evolved controllers
Figure 5.
Different adaptivity mechanisms in collective systems, from
[14].
several evolutionary mechanism, we closely touch the issues
of self-adaptivity, considered in the next section.
V. ADAPTATION VS. SELF-ADAPTATION
The ideas, expressed in the previous sections are related to
adaptation. There are several differences between adaptation
and self-adaption. For example, B¨ack in [77] distinguishes
between dynamic parameter control, adaptive parameter
control and self-adaptive parameter control. Here “self-
adaptive” includes (evolutionary) mechanisms for chang-
ing regulative structures, whereas “adaptive” means merely
feedback-based regulative mechanisms. This and similar def-
initions of self-adaptivity is widely used in evolutionary [78]
and in autonomic [79] communities.
The theory of adaptive control also uses the term of self-
adaptation, however in another context. It is primarily related
to different variations of well-known self-tuning mechanisms
[67][66], where the detector and regulator uses iterative
approach for identiﬁcation of control laws. On the early
stage of 60x and 70x the term of self-adaptation was widely
used, e.g. [68], whereas modern literature refers self-tuning
approaches to adaptive systems [64].
Taking into account regulative and generating levels from
the Figure 2, the difference between adaptive and self-
adaptive seems to be more complex. We start from the
commonly accepted fact, that “adaptive” and “self-adaptive”
are placed on different levels of hierarchy. In Figure 6 we
draw these two levels (as two dashed boxes).
Collective System
parameter-based,
modularity-based,
self-organizing
regulative mechanisms
generating mechanisms
self-concept
design goals
adaptive
self-adaptive
Figure 6.
Adaptive and self-adaptive mechanisms.
The mechanisms in the ﬁrst box allow adaptive behavior,
related to the design goals of a system. These “goals” are
implicitly formulated as a transfer function, model-reference
and other mechanisms related to behavior in environment.
In the same manner, the self-adaptation needs also a “goal”,
however the self-adaptive goal should be expressed in a more
broad and ﬂexible way and should be related to the system
itself. It describes developmental goals as “what a system
may be”, instead of “what a system should be”. To explain
the difference between both, we can consider the case of
macroscopic locomotion for such an organism, as shown in
Figure 1(b).
This organism can have a series of speciﬁcations: legged
or wheeling principles of motion, speciﬁc limitations im-
posed on energy consumption or on a structural stability.
They can be formulated even broader, as e.g. “a system
capable to move from A to B”, and expressed as a ﬁtness
function of the traveled distance and constrained by e.g.
segmented (such as insects) construction of body, symmetric
movement of legs or humanoid-like structure of body. All
of them are different examples of design goals, which, when
126
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

touching with reality, produce some adaptive locomotive
structures and behavior. Obviously, that formulating design
goals more or less broad, we allow more or less degrees of
adaptability.
Now, we can assume, that driven by human developmental
history, we have a speciﬁc vision of how this organism
may be: complexity of regulative and homeostatic func-
tionality, degree of “intelligence”, ﬂexibility of structural
reconﬁguration, scalability. They can be also broader, such
as “increasing of information capacity”. These visions are
not directly related to locomotion, they express some desire
of how to see the whole systems. From these visions, it is
not always possible to obtain some locomotive structures
directly. Each change along the “vision axis”, requires
follow-up changes along “adaptive axis”. In other words,
“self-vision axis” and “adaptation axis” are different. Such
a “vision of itself” is expressed in terms of a “self-concept”.
The notion of self-concept originated in human psychologi-
cal research, e.g. [70], and is basically related to human self-
developmental processes, e.g. [69][70][80]. Recently, there
appear several works, which apply psychological ideas to
robotics, e.g. [81][82].
In self-adaptation we have to point out one principal
element, related to the bounded and unbounded character of
changes. When in adaptive processes, these driving forces
are mostly bounded, expressed e.g. by reward or ﬁtness,
the self-concept may include driving forces, which are of
unbounded character. Self-adaptation can be formulated as
a series of changes, undertaken by the system alone, and
intended to adapt to its own vision of itself.
When the self-concept has an unbound character, the
system is in fact continuously changing itself. In this context,
sell-adaptation can be related to another process – self-
development. The notion of self-development in robotics is
most probably originated from another community – neu-
roscience, e.g. [12][83], which through artiﬁcial neural net-
works (ANN), e.g. [84] and evolutionary communities ﬁnd
its own way to robotics, e.g. [82]. The development focuses
on ontogenetic processes related to cognitive science and
the concept of embodiment [3], whereas self-development
is understood more broadly as e.g. self-exploration, self-
supervision, self-learning and others. To be consistent with
the logic of these notions, the self-development is a more
general ontogenetic mechanism of continues changes, which
targets cognitive aspects and may be unlimited in time and
complexity, i.e., it possesses unbounded properties. Both
self-adaptation and self-development are related to the self-
concept.
In evolutionary community unbounded properties are of-
ten related to open-ended evolution, which is characterized
by a continued ability to invent new properties – so far only
the evolution of life on Earth (data partly from the fossil
record) and human technology (data from patents) have
been shown to generate adaptive novelty in an open-ended
manner [85]. We ﬁnd some ﬁrst ideas about open-ended
evolution in [86] and [87]. Open-ended evolution is also re-
lated to indeﬁnite growth of complexity [88] and unbounded
diversity [89]. Ruiz-Mirazo and co-authors expressed the
interesting idea that “the combination of both self-assembly
and self-organization processes within the same dynamic
phenomenon can give rise to systems with increasing lev-
els of molecular as well as organizational complexity”.
They also proposed to decouple genotype and phenotype
from each other. A similar idea of increase homeostatic
autonomy in macroevolution was proposed by [90], which
leads us to not-ﬁtness driven self-developmental processes.
Several implementations of open-ended evolutionary scenar-
ios, e.g. [91], do not use any explicit behavioral ﬁtness,
moreover, there is no complexity growth in such “classical”
artiﬁcial life simulator as Tierra and Avida [92]. In this work
Russell Standish proposed to improve these systems: “a key
step in doing this is to generate a process that adaptively
recognises complexity, since it will be impossible to include
humans in the loop, even when run on conventional com-
puting platforms”.
These works lead us to an interesting question about
the unbounded self-concept: which process can generate
complexity? One of the ﬁrst remarks is from von Neumann:
“synthesis of automata can proceed in such a manner that
each automaton will produce other automata, which are
more complex and of higher potentialities than itself” [86].
A similar approach is observed in L-Systems [93] (authors
used evolutionary process but human operator in the selec-
tive loop) as well as in self-referred dynamics [30]. It seems
that structural production can lead to growth of complexity
and diversity.
However, considering the Kolmogorov complexity of frac-
tal structures, which is equal to the shortest production
set of rules [94], we note the complexity of the whole
fractal is independent of its size – the self-similar structural
production does not increase complexity. Thus, we require
that production systems include parameters, which perturb
generating structures. In this way, structural production rules
parameterized by a random (environmental) value may lead
to inﬁnite growth of complexity and diversity, and are
candidates for the unbounded self-concept. In Table II we
collected several possible self-developmental processes in
structural collective systems with bounded and unbounded
self-concepts.
To conclude this section, we argue that adaptation and
self-adaptation are two different, hierarchically placed pro-
cesses, related to an origin of changes and not to the used
mechanisms (both processes can use the same mechanisms).
Related to the utilized degrees of plasticity and origin of
modiﬁcation, different adaptive and self-adaptive mecha-
nisms can be combined into three groups and represented
as shown in Figure 7.
Design goals and self-concept also differs from each
127
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table II
SEVERAL CHARACTERISTICS OF SELF-DEVELOPMENTAL PROCESSES IN
COLLECTIVE SYSTEMS, FROM [10].
Process
Developmental plasticity
Self-Concept
Regulatory
Structural and functional
plasticity of the system,
controllers
can
change
their
own
transfer
functions.
(bound)
Achieving
a
targeted goal in changing
environment.
(unbound)
Increasing
performance
characteristics.
Homeostatic
Like in the regulative case,
but related to maintaining
steady internal states in
changing environment.
(bounded)
Endogenous
steady state. (unbounded)
Achieving
best
possible
homeostasis
for
diverse
scalability metrics.
Learning
Changeable
structure
of
regulative system.
(bounded)
e.g.
positive
or
negative
rewards.
(unbounded) Fitting very
large (inﬁnite) parameter
space, e.g. by exploring
structural-functional
relations.
Planning-
driven
Structural, functional and
regulative plasticity.
(bounded)
Minimizing
deviations from a plan.
(unbounded) Self-referred
planning.
Fitness-driven
Structural, functional and
regulative plasticity.
(bounded) Explicit ﬁtness.
(unbounded) Implicit ﬁt-
ness
(optimizing
energy
balance, maximizing off-
springs).
Open-ended
Capability for unbounded
evolutionary activity.
(unbounded)
Unbounded
metrics.
Utilized
Plasticity
very low
very high
externally
driven
(environment)
internally
driven
(self-concept)
Origin of
Modification
parameter-based
adaptive mechanisms
rule-based
adaptive mechanisms
bound self-adaptation
unbound self-adaptation
open-ended evolution
fitness-/ reward- based
adaptive mechanisms
self-development
Figure 7.
Three groups of adaptive and self-adaptive mechanisms placed
along the used degrees of plasticity and origin of modiﬁcation.
other; self-concept is more “system common” description
and has more degrees of freedom. Normally, during adap-
tation, a system cannot change its own goal. However,
during self-adaptation, a system can potentially change the
design goals, i.e., self-adaption and goals can potentially be
conﬂicting. When the plasticity is high, and the system can
be hindered by adaptive processes from reaching the main
goal, we are facing a new conceptual problem of a long-term
controllability of adaptive and self-developmental processes.
There are several strategies to avoid conﬂicts between
achieving design goals and self-adaptation. One of them is to
formulate the self-concept invariant to possible adaptations.
There are several mechanisms expressing such an invariant
property of the generating level: symmetries, conservation
laws or e.g. “templates”. Templates are well-known in cog-
nitive science [95] (also as “schemas” or “prototypes”), in
topological research (in knot and braid theory) [96], as well
as known as “frames” in the AI community [97]. The self-
concept can be also expressed by symmetries, conservation
laws, be planning- or ﬁtness-driven or even have a character
of unbounded metrics for open-ended evolution.
VI. APPROACHING ADAPTABILITY OF ARTIFICIAL
ORGANISMS FOR COLLECTIVE LOCOMOTION
To exemplify the discussed concepts of adaptation, self-
adaptation and self-development, we consider the problem
of collective locomotion for multi-robot organisms. Figure 8
shows a top-down view on a hexapod organism. The whole
(a)
(b)
(c)
(d)
Figure 8.
Top-down view on a hexapod multi-robot organism from
Figure 9(a). Shown are four different positions of legs to illustrate a
complexity of collective locomotion.
organism represents a collection of aggregated modules,
which form the central vertebral column and six legs con-
nected to the spine. Since 1DoF modules are connected in
vertical and horizontal planes, legs as well as the vertebral
column possess multiple angular and dispositional degrees of
freedom, required for the legged locomotion. This organism
moves on a ﬂat surface without any obstacles; four different
frames of this movement are shown.
From these images it is well visible, that the regular
motion patterns (when there are no obstacles) can be split
onto three different parts:
128
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

(a) Periodical (or rhythmic) activation of “active joints”
(elements, which connect legs to the vertebral column).
(b) Motion of legs in a vertical plane. This patterns is
basically the same in all legs.
(c) “Rippling” of the vertebral column. The amplitude and
frequency of this motion should be synchronized with active
joints.
Basically, the motion without obstacles represents a classi-
cal controlling problem, which can be solved with e.g. kine-
matic analysis [98], evolved [32] or resolved by using bio-
inspired approaches [99]. The problem of adaptation appears
ﬁrst, when an organism should overpass some obstacle, and
this requires multiple co-depending changes of patterns (a)-
(b). Moreover, the works on CPG, e.g. [100], indicate that
any adaptive modiﬁcation of the macroscopic multi-cellular
behavior requires multiple correlations between individual
degrees of freedom and, in the worst case, may essentially
increase the complexity.
The need of multiple synchronization may be better
understood in Figure 9, which shows the 2D section of an ag-
gregated organism with several active joints in the front (two
front legs). We assume that this structure is already created
A
A
(a)
B
B
C
C
D
D
F
F
G
G
H
H
E
E
A
A
(b)
Figure 9.
(a) Artiﬁcial organism, front view; (b) 2D section of an
aggregated organisms (two front legs with a section from vertebral column),
circles are active joints. Shown are two kinematic states of this organism.
(or evolved) and represents some optimum of functionality
for a locomotion without obstacles. Each of the aggregated
modules possesses independent motors (degree of freedom,
displayed by a circle) and can actuate independently of each
other. In order to move as an organism, all these motors
should perform synchronized individual actuations. There
are several requirements, such as:
- the center of gravity should not overstep the nodes B
and H, other case the organism will be unstable;
- even in homogeneous case there are several non-
symmetries caused by differences in docking elements, or
more generally by different modules. This leads to non-
symmetrical positions of several active nodes, like C and
G;
- we require that some structural nodes are e.g. strongly
horizontal (vertical) as e.g. D, E and F.
- all nodes have different load. This is indicated by
different gray level of active nodes.
Each motor is controlled by a non-linear rhythmic driver,
whose control parameters depend on internal sensors (e.g.
torque of a motor). Without loss of generality, we say
this represents a simple adaptive control on the functional
level, where motors are ﬁrst not connected with each other.
This scheme is sketched in Figure 10. Now, we insert a
Fitness
Generator
Evolving
Bound Self-Concept
Unbound Self-Concept
Couplings
(information
and structural)
Behavioral
Level
Functional
Level
Structural
Level
Evolving
Level
Generating
Level
Actuator
Actuator
....
Local
feedback
Local
feedback
Global
Enviromental
Fitness
Non-linear driver
Non-linear driver
x(i,n+1)=F(a,x(i,n))+C(x(i  k,x(n-1)
c(1,1) c(1,2)  ... c(1,n)
c(2,1) c(2,2)  ... c(2,n)
...
c(m,1) c(m,2)  ... c(m,n)
x(i,n+1)=F(a,x(i,n))+C(x(i  k,x(n-1)
(
(
+
+
-
-
Figure 10.
Different levels of adaptive collective locomotion.
structural level, which depends on a morphology of the
organism. This level is represented by a coupling element
C, which creates “communication channels” between dif-
ferent nonlinear drivers (there are several different coupling
elements C on e.g. structural and information levels). Since
organisms create generally three dimensional structures, we
expect at least a coupling between three elements (as e.g.
a tensor of the third order). The coupling element contains
values like cijk = 1 (direct coupling between drivers i, j, k),
cijk = 0 (no coupling between drivers i, j, k), cijk = −1
(phase inversion between drivers i, j, k) or even any positive
(ampliﬁcation) or negative (decay) coefﬁcients. Collective
actuation depends on coefﬁcients in these coupling elements.
As mentioned above, any non-periodical perturbation, e.g.
motion with obstacles, requires multiple synchronization be-
tween elements, which ﬁrstly adapt the collective actuation
of all motors; secondly takes into account stability con-
straints. There are three different mechanisms, which can be
used in creating adaptive structure and functionality around
C. Firstly, individual rhythmic drivers use local adaptive
mechanisms, know in the theory of adaptive control, as
129
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

shown in Section VI-A. Secondly, drivers and C represent a
coupled map lattice (CML) [101]. As we can see from Fig-
ure 9, nodes B, C, D, F, G, H have the most intensive load,
which can lead to a more stronger synchronization in C,
where as other nodes do not need any synchronization and
their connection will disappear. In this way, synchronization
effects in CML represent an emerging adaptability created
by self-organizing processes between behavioral, functional
and structural levels. This effect is similar to the observation
in CPG with environmental coupling [102]. This approach
is sketched in Section VI-B. Then, a structure of C (and
so a collective locomotion) can be evolved, as described in
Section VI-C. Here we face the problem of deriving such
local and global ﬁtness functions, which adapt a collective
actuation within the framework of constrains.
The processes, mentioned above, lead to an adaptive
macroscopic locomotion, e.g. when an organism encounters
an obstacle. However, changes in collective actuation can
be occurred even when an organism does not encounter an
obstacle (just to remind this organism already reaches some
optimum in ﬁtness, i.e., these changes cannot be driven by an
“old ﬁtness”). To initiate such changes, we have to introduce
a new “driving force”, which is independent of particular
obstacles. This will be then a self-adaptation, which takes
place on the generating level, as shown in Figure 10. There
are several proposals for bound and unbound self-concepts
as shown in Section VI-D.
A. Multi-functional,
Locally
Adaptive
Rhythmic
Motor
Driver
As described in the previous section, individual motor
drivers should demonstrate diverse dynamic behavior. In
literature there are known different types of continuous
rhythmic generators, e.g. [102], however due to technolog-
ical reasons of controlling DC motors and running on a
small microcontroller, we prefer time-discrete systems. Each
time-step can be selected as small as possible, for example
a few µsec to guarantee a quality of control. Dynamic
variables, e.g. xn, represent voltage (current, phase), which
are applied directly to DC-DC convertor or H-bridges. To
obtain diverse dynamics, we use the idea of changing the
determinancy order of normal form (NF) and the following
perturbation of nonlinear terms [103]. This can be achieved
when to use hierarchical non-homogeneous coupling for any
well-know low-dimensional system, for example the logistic
map. This approach is very common in the community (e.g.
[104][105]). In our case, the map has the following form:
xn+1 = cyn + axn(1 − xn),
yn+1 = cxn + bxnyn(1 − yn),
(1)
where xn ∈ R, yn ∈ R, c is the coefﬁcient of the linear
coupling, b is the coefﬁcient of the nonlinear coupling,
a is the general bifurcation parameter. As turned out, the
dynamics of (1) in fact has little in common with the initial
logistic maps. The system (1) is denoted as the ordinary
logistic-logistic (OLL) map. Several examples of qualita-
tively different types of behavior are shown in Figure 11.
0
0.2
0.4
0.6
0.8
1
0
0.5
1
1.5
2
2.5
3
3.5
4
x[n]
a
(a)
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
x[n]
a
(b)
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
-0.4 -0.2
0
0.2 0.4 0.6 0.8
1
1.2
x[n]
a
(c)
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
1.4
-1
-0.5
0
0.5
1
1.5
2
x[n]
a
(d)
Figure 11.
Several examples of qualitatively different types of behavior of
the system (1). Bifurcation diagrams of the OLL map (1) at parameters: (a)
b = 1, c = 0.1, x0 = 0.1; (b) b = 2, c = 0.6, x0 = 0.4; (c) b = −1.5,
c = −1, x0 = 0.1; (d) b = −0.5, c = −1, x0 = 0.1.
As shown in [106], the non-homogeneous coupling in
(1) increases determinancy order of initial NF. This can be
understood as a perturbation of the original logistic map by
couplings. In order to obtain all possible perturbed nonlinear
terms, it needs to calculate the universal unfolding that is
given e.g. by
G(ϕn, λu) = α1 + λuϕn + α2ϕ2
n + α3ϕ3
n + α4ϕ4
n + ϕ5
n
(2)
with the codimension 4, where αi are coefﬁcients. We
can see that non-homogeneous coupling method of OLL
map changes the codimension of local bifurcation from 1
(transcritical bifurcation contained in the logistic map) to 4.
The approach (2) can be used for designing a pro-
grammable series of bifurcations so that to create a desired
dynamics of the system (1). This allows us to use this system
directly in the mechanisms of local adaptation. Coefﬁcients
a, b and c can be connected to locomotive sensors (for ex-
ample a torque sensor). When a load on motor is increased,
a local control mechanism (e.g. PID regulator [41]) adapts
the coefﬁcient a, e.g. to achieve the required torque on the
given load. In the next section we will see several adaptive
effects, which arise when many of individual motor drives,
like (1), are connected into one system.
B. Adaptive Mechanisms Based on Self-organization
Considering modular robots with the ability to dock to
each other and to build multi-robot organisms, the problem
130
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

occurs how to synchronize the behavior and especially the
collective locomotion for different organism’s topologies.
Traditionally, such problems have been treated by using
classical model-based methods. The developed controllers
either use such model-based approaches or utilize bio-
inspired or evolutionary algorithms. However, most of these
approaches are not fully applicable for a large scale modular
robotics because of a very high complexity, the huge amount
of exchanged data and limited hardware capabilities. Most
algorithms fail also due to the lack of scalability and adapt-
ability. The development of new techniques for adaptive
treatment of such problems is required.
In the last decades, several approaches from the ﬁeld of
non-linear dynamics have been applied to robotics, espe-
cially to solve the problems of locomotion in bipedal [107]
or multi-legged robots [108]. The big challenge is still the
synchronization between joints or legs so that the gener-
ated locomotive pattern become adaptive to environmental
changes. Stable attractors provide often the best way to
develop a system, which is able to generate several pat-
terns by low-dimensional coupled equations with only a
few control parameters. In multi-body systems with many
degrees of freedom such methods allow reﬂecting the real
dynamics only in a very limited way. Several attempts have
been undertaken to use feedbacks in time-delayed nonlinear
oscillators [109][110] or feedbacks based on resonance ef-
fects [111][112]. Such feedbacks can address several local
and global properties of the dynamics, however currently
achieved results target often very speciﬁc problems and
lack in generalization to other applications. In this section
we present an approach based on the Coupled Map Lat-
tices (CML) [101], which focus on synchronization effects
achieved in high-dimensional coupled equations.
Each site in the CML is considered as a unit (joint
angle, hinge motor, link), which can be coupled with their
neighbors through a coupling parameter. We use three
different coupling structures: unidirectional or bidirectional
coupled rings and four-connections-sites on a 2D lattice.
Synchronization between the robots appears through the
synchronization effect of spatiotemporal chaotic pattern,
modeled by oscillating nonlinear equations. When syn-
chronization appears in a region of the CML, this means
that the communication between robots in this region is
rapidly decreased and the corresponding part of the organism
performs a synchronized movement.
In the ﬁrst scenario we analyzed the one-dimensional ring-
coupled topology (Figure 12). As a “basic” system we use
the homogeneously coupled logistic map (Figure 11 (a)).
Each site can be additively coupled with their left and/or
right neighbor sites either in unidirectional or in bidirectional
way. Synchronization appears due to interactions between
non-identical systems, which leads to a locking of their
phases, whereas their amplitudes remain uncorrelated. As the
ﬁrst test system we take the unidirectional ring map lattices
of the length m:
xi
n+1
=
(1 − ε)f(xi
n) + ε(f(xi−1
n
))
xi+m
n
=
xi
n
(3)
where xn
∈
R, i
=
1, 2, ..., m and n represent the
dimensions of the CML. f(xi
n) is the logistic map
f(xi
n) = axi
n(1 − xi
n).
(4)
Important parameters are the small coupling parameter ε
that denotes the strength of nearest neighbor coupling and
the bifurcation parameter α.
Figure 12.
Multi-robot organism connected to a ring.
Experimental results show that the synchronization be-
tween sites occurs within 0.16 ≤ ε ≤ 0.19, observable as
bright areas in Figure 13. During the iteration process, in
order to simulate a disturbance, we apply a small ﬂuctuation
in the bifurcation parameter α, which can be e.g. associated
with a disturbance in the communication load. Such a
disturbance in turn can be referred to some disturbances
in the environment (i.e., obstacles, environmental changes
or sensorimotor disturbances). In Figure 13, the bifurcation
parameter was slightly disturbed for a short time period and
after few time steps when perturbation stopped, the system
becomes again synchronized (area in boxes).
Further analysis of the local and global impact has been
done by investigating the impact of disturbances in small
separated regions (Figure 13 (a)) or if the disturbances
appear in local neighborhoods (Figure 13 (b)). As it can
be observed in these ﬁgures, better synchronization effects
occur if a perturbation appears in the sites that are close to
each other (local impact). In a multi-robot organism, this
means that units in a local range (one leg, arm etc.) perform
better synchronization than robots far away from each other.
In the next test scenario we extended the model by
coupling the sites with both left and right neighbors (bidi-
rectional coupling). We took again a ring map lattice of the
length m
xi
n+1
=
(1 − ε)f(xi
n) + ε
2(f(xi−1
n
) + f(xi+1
n
))
xi+m
n
=
xi
n.
(5)
131
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

CML , Parameters: a_start =  3.89;    a__disturb =  4;       e =  0.16951
50
100
150
200
250
300
350
400
450
500
50
100
150
200
250
300
350
400
450
500
n
n
i
CML , Parameters: a_start =  3.89;    a__disturb =  4;       e =  0.16951
50
100
150
200
250
300
350
400
450
500
50
100
150
200
250
300
350
400
450
500
i
a)
b)
Figure 13.
One-way coupled map lattice. Initial conditions: xi
1 = 0.1 +
0.0000049i. Boundary conditions: xi
1 = xi
m; (a) disturbances (i.e. motor
voltage drops) are simulated in a large distance and do not signiﬁcantly
affect each other; (b) disturbed sites are in local range and affect more
each other than in (a).
In order to get a homogeneous coupling the coupling
parameter ε is divided by two. We observe similar synchro-
nization effects like in the previous experiment in sites that
are nearby or far away from each other.
n
n
i
i
CML , Parameters: a_start =  3.89;    a__disturb =  4;       e =  0.16951
50
100
150
200
250
300
350
400
450
500
50
100
150
200
250
300
350
400
450
500
CML , Parameters: a_start =  3.89;    a__disturb =  4;       e =  0.16951
50
100
150
200
250
300
350
400
450
500
50
100
150
200
250
300
350
400
450
500
a)
b)
Figure 14.
Two-way coupled map. Initial condition: xi
1
= 0.1 +
0.0000049i. Boundary condition: xi
1 = xi
m; (a) disturbances are simulated
in a large distance and do not signiﬁcantly affect each other; (b) disturbed
sites are in local range and affect more each other than in (a).
Open or closed chains are the basic structures in many
robotic systems since robots often consist of legs and arms.
In simulation above we analyzed and developed mechanisms
focusing on achieving a synchronized locomotive behavior
for multi-robot organisms with only chain-like structures.
Now we extend this idea for multi-legged robots with three
dimensional topologies. To achieve this, the dimensionality
of Equation 5 increased. In this case, the coupling can be
performed in all four directions
xi,j
n+1 =
(1 − ε)f(xi,j
n ) + ε
4(f(xi−1,j
n
)
+f(xi+1,j
n
) + f(xi,j−1
n
) + f(xi,j+1
n
))
xi+m,j+m
n
=
xi,j
n ,
(6)
where i, j = 1, 2, ..., m represent the system’s size. For each
time step we generate a separate 2D lattice and perform the
time analysis (Figure 15).
Figure 15.
Time evolution through 2D CML sites.
Like in experiments with serial couplings, in order to
analyze synchronization properties of 2D spatial lattices,
we temporary disturb the bifurcation parameter in a block-
shaped regions (Figure 16). It can be considered e.g. as a
disturbed part of a multi-robot organism (legs, arms etc.).
The results in Figure 16 show that a small perturbation of
α does not cause a chaotic behavior like in the previous
experiments for serial coupled sites, but leads instead to
a phase synchronization. The reason is the asynchronous
updating of the sites [113]. This approach not only syn-
chronizes locomotive behavior but also allow forcing the
organism to change the locomotion pattern. In Figure 17
different conceptual layers for the whole framework are
introduced: Couplings-, CML-, Actuator-, and the Organism
Layer.
In the Couplings Layer (Structural Level), we generate
the coupling matrix C mentioned in Section VI. This
matrix maps the topology of the multi-robot organism by
inserting ones and zeros as matrix elements. According to
the structure of the coupling matrix the corresponding areas
in the CML are activated (one) or not activated (zero). On
CML Layer (Functional Layer), we perturb the sites in the
activated areas from the Couplings Layer and can observe
phase propagation and as well as active phase shifting effects
if required (Figure 16). All non-activated sites in the CML
can be considered as virtual modules, which do not exist in
reality, however are required in order to generate the phase
synchronization patterns.
At the Actuator Layer (Behavioral Layer), standard con-
trollers (PI, PID control etc.) can be applied and are often
a part of servo motors. Such controllers are well-known
from the theory of control and enable motors to follow
the generated phase patterns. By learning the phase patterns
generated by different perturbations in α, we are able to
use this knowledge and actively apply it to generate desired
locomotion patterns. The bifurcation parameter α is hence
132
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 16.
Phase pictures of 2D CML with four disturbed regions.
a control parameter for the phase regulation and can be
adapted in runtime.
The activated sites in the Coupling Layer can be additively
coupled with other activated areas by additional terms and
with different coupling parameters (e.g. ε1, ε2). The coupled
sites represent four main links of each leg of the robot
organism. The idea behind this approach is to synchronize
all four links for achieving desired gaits (walking, trotting,
galloping etc.). Depending on the structure of gait, links can
be connected in parallel or crosswise, see Figure 18 (top),
and can also be adapted dynamically to different situations.
Therefore, additional coupling terms have been added to the
equation 6, here exemplary a weak coupling ε1 between
links one (upper left) and two (lower left) and between
links three (upper right) and four (lower right). The coupling
parameter between links one and four and between two and
three is ε2 and is in this example much stronger than the ε1
Figure 17.
Architecture of Active Phase Perturbation Approach for
Locomotion. This ﬁgure demonstrates how the CML based approach can
directly referred to real robotic applications.
xi,j
n+1
= (1 − ε)f(xi,j
n ) + ε
4(f(xi−1,j
n
) + f(xi+1,j
n
)+
f(xi,j−1
n
) + f(xi,j+1
n
)) + ε1f(xi+∆i,j
n
)
+ε2f(xi+∆i,j+∆j
n
)
xi+m,j+m
n
= xi,j
n ,
(7)
where ∆i and ∆j are distances between CML sites that
represent the links. In order to analyze temporal effects of
the phase propagation we need to pick the areas of interest
and go through the time steps of the 2D map (Figure 15).
By choosing different values of coupling parameters we
are able to synchronize the links for different locomotion
patterns. As it can be exemplary observed in the Figure
18, legs can be synchronized for instance pairwise and in a
cross-wise manner. It is of course not trivial to ﬁnd always
the suitable coupling parameter set, therefore evolutionary
and learning approaches can run in parallel and learn it for
achieving a good ﬁtness.
As a conclusion to this section, we summarize our re-
sults. Using methods from non-linear dynamics and self-
organization, we applied a CML-based approach for achiev-
ing synchronization between different limbs of a multi-
robot organism. We analyzed serial as well as 2D coupled
maps and also analyzed local and global impact of occurred
disturbances.
133
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

i
j
50
100
150
200
250
300
50
100
150
200
250
300
1e
1e
2e
2e
30
35
40
45
50
55
60
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
n
xn
Link2
Link2
Link1
Link4
Homogeneous gait, Phase synchronized
30
35
40
45
50
55
60
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
n
xn
Link1
Link4
Link2
Link3
Heterogeneous gait, Cross-link phase synchronized
Figure 18.
Time evolution of non-coupled (left image) and coupled (right
image) sites in the activated areas for the four main links of the robot
organisms. Coupling parameter are: ε1 = −0.01 and ε2 = −0.001. When
system gets synchronized it can be observed that links one and four (blue
and black lines) as well as the links two and three (red and green lines)
get synchronized crosswise.
C. Fitness Driven Adaptability
Because it is very hard, to break down a desired behavior
into the individual behavior of each robot in a swarm or in
a multi-robot organism [17], we support the adaptation pro-
cess with bio-inspired evolution. Especially, in unpredictable
environments, when robots are able to (dis-)aggregate or
modules may fail, pure classical approaches can perform
suboptimal. Therefore, in addition to the adaptive mecha-
nism based on self-organization from the previous section
and artiﬁcial evolution of controller design, we adapt the
robots by use of evolutionary concepts.
Figure 19 depicts the idea of the evolutionary concept.
The key element is the genome, which contains the codiﬁed
coupling matrix Cijk and control parameters. This genome
maps to the coupling of motors within the organism and
thus to the behavior of the organism. Based on the previous
section, the coupling strength can ﬂow into the equations
and extend the existing couplings. Detached from structural
coupling, even functional coupling of not physically linked
robots can evolve. For example the front left leg of a
hexapod-like robot is not physically linked with the left back
leg, but has to be synchronized in order to move. Even so,
the strength of the coupling of two individuals can vary.
Thereby, different strengths of the coupling lead to different
behaviors. In order to adapt to a certain structure, which
requires a non-trivial coupling, the strength of the couplings
evolves.
A crucial point for evolution is the feedback from the
Figure 19.
Evolutionary Concept: The genome contains the coupling
matrix and parameter of the robot organism. This genome can be evolved
over time and thus affects the behavior, respectively adapts the behavior.
Through environmental and local feedback, the current ﬁtness can be
measured and optional crossover operators with other organisms can be
applied.
environment. By evaluation of the current coupling structure
in respect to a desired task (e.g. locomotion), a ﬁtness value
measures the performance of an organism in the current
environment. In case of locomotion the ﬁtness function could
be inﬂuenced by multiple factors like power consumption,
number of couplings (high number of coupling may lead to
higher communication trafﬁc) or velocity of an organism.
To cover each point potentially in the search space,
mutational operators are used. This mutations can range
from a single random change of a coupling entry to com-
plete swapping of areas within the coupling matrix. In an
environment with multiple organisms, we can use the evolu-
tionary principle of cross-over. Two or more organisms can
exchange their coupling matrices to each other. Depending
on the ﬁtness value of both parents, a total or a partial
exchange of the genome can be done. The new structure
can be either placed in one individual or in both.
Figure 20.
Exemplary hexapod organism in simulation.
For the design of controllers and the evaluation we use the
Symbricator simulation [114]. Beside rings and caterpilar-
like organisms we are interessted in legged organisms (like
quadrupped or hexapod organisms, see Figure 20). The com-
parison of multiple (symmetrical and asymmetrical) shapes
and the corresponding coupling matrices with the reached
134
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

ﬁtness values (in simulation) can lead to very efﬁcient
organisms and locomotion patterns. In the ﬁnal stage, we
want to pre-evolve the controllers in the simulation and
deploy them afterwards to the real hardware. This will speed
up the time for development and prevent hardware of critical
damages. In a downstream step, the mechanism can adapt
the robot online and onboard to unpredictable environments
and changes during actual operating time.
D. Bound Self-concept and Structural Generation
Previous sections demonstrate examples of different adap-
tive processes on functional, structural and evolving levels.
In this section we brieﬂy introduce the generating level
and self-concepts. As mentioned, adaptive and self-adaptive
structures differ in two important points: adaptation uses
environment for generating changes, whereas self-adaptation
uses the self-concept for this purpose. Moreover, the self-
adaptation is formulated in a more broad way than adapta-
tion; to implement this, we need to integrate structural and
functional generators into the system’s architecture.
Thus, to utilize self-adaptive approach, we need to involve
bound or unbound self-concepts and a generating mecha-
nism. Several concrete examples of unbound self-concepts
based on information theory are introduced in [1][10].
The unbound self-concept initiates unlimited (open-ended)
growth of diversity and complexity; the treatment of this
issue oversteps the framework of this paper. To explain the
idea of self-concept for the structural generator, we focus
on the bound case. The bound self-concept is invariant to
adaptive processes. There are several mechanisms expressing
such an invariant character of self-adaptation on the gen-
erating level: symmetries, templates and conservation laws,
production, decomposition rules as well as self-reference. In
this work we can brieﬂy demonstrate the use of symmetries
and symmetry breaking [115] for structural generation as
well as ideas of developmental modularity [116] expressed
in the form of “templates” for functional generation.
The most obvious way to generate well-scalable structural
symmetries is to create a circulant [117] coupling
C =

T
0 c1
0
T 0
cn−1 0 T

,
(8)
where T is a Toeplitz band matrix [118]
T =
 c0 cn−1 cn−2
c1
c0
cn−1
c2
c1
c0

(9)
(taking into account dimensions n for C and for T). The
idea of introducing T consists in making topology and
kinematics scalable to the size of this body. In this way,
the basic building block is deﬁned by circulant coupling
C = circ(c0, c1, c2, ..., cn−1). Well-known property of cir-
culant coupling is a possibility of its diagonalization by the
Fourier matrix
F =
1
√n

1
1
1
1 w w2
1 w2 w4

,
(10)
where
w = cos(2π
n ) + i sin (2π
n ).
(11)
The eigenvalues can be calculated as
λj =
n
X
i=1
ci(wj−1)i−1.
(12)
Maximal eigenvalue λmax = λ1 = Pn
i=1 ci, i.e., when
circulant coupling has only a ﬁxed number of ci for any n,
the stability and several other properties of C are invariant
to the dimension of the whole system. Both, circulant and
Toeplitz band matrices demonstrate ideas of invariances in
the self-concept. From the view point of the group theory,
n × n circulant can be viewed as a cyclic group Z/nZ of
order n and can be generated by a generator gn in Z/nZ.
The generator gn can represent a particular example of the
bound self-concept, applied to generate scalable topological
structures of an artiﬁcial organism.
To integrate symmetry breaking constrains into the topo-
logical self-concept, we can use the approach [119] in the
form of [120]. Kiziltan and Milan in [120] deﬁned four
generators: Rf, Cf, which the ﬂip ﬁrst two rows/columns
of a matrix and Rs, Cs, which shift the ﬁrst row/column to
the last position. For any generators, the notation g ◦g = g2,
(e.g. Rf ◦Rf = R2
f) is used. Any two matrices are equivalent
when they are obtained from each other by applying any of
RnCn generators, e.g. 3×3 coupling C has 36 symmetrical
matrices. The idea of breaking a symmetry is to apply con-
strains, which order all symmetric objects, like the proposed
lexicographical order [119].
Another concept behind self-generation are so-called tem-
plates. They are well-known in cognitive science [95] (also
as “schemas” or “prototypes”), in topological research (in
knot and braid theory) [96], as well as known as “frames”
in AI community [97]. The idea of a template is to describe
most general “stereotypical” properties or features of some
common classes of situations/processes/objects. Concrete
instance of a template can be reconstructed or generated
by parametrization. There are several attempts to ﬁnd an
universal template, however it seems that different classes
of solutions need different templates.
Since we are focusing on dynamic properties of collective
actuation, we can assume each motor is driven by a periodic
control. In this way a collective actuation represents a
system of coupled oscillators with adaptive feedback, as e.g.
described in [102]. As known, such systems possess self-
adapting properties. Speciﬁc (desired, required) dynamic
motion pattern can be generated when to parameterize the
CML-driving-system with a speciﬁc set of control parame-
ters as well as to provide a way to change these parameters,
see Figure 21. Thus, we can map the problem of ﬁnding a
dynamic template to the problem of ﬁnding such a bifurca-
tion dynamics, which property reﬂects the needed changes.
Speaking more technically, we are looking for universal
135
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

OLL map
OLL map
motor
coupling
structural
and
functional
level
self-synchronization
templale
generating
level
motor
...
sets of control parametrs for OLL map
universal unfoldings
Figure 21.
Template for collective locomotion.
unfolding [103]. Obviously, that universal unfolding together
with parameter sets can be viewed as templates for collective
actuation. Unfolding can be explained in the following way:
let the normal forms of a local bifurcations be given by
qn+1
=
Λu({α}, {β})qn + g(2)(qn, {α}, {β}) +
+
... + O(g(r+1)),
(13)
where the term Λu presents the diagonal matrix of eigenval-
ues, g are the resonance terms, dependent on both {α} and
{β} and r is the determinancy order. Universal unfolding
includes all possible perturbations of this normal form,
which are equivalent to original bifurcation problem [103].
In this way, unfolding represents in some sense an invariance
to perturbations. Finding universal unfolding allows deﬁning
the most general form of the desired dynamics, i.e. template.
From the view point of dynamics, the universal unfolding
can represent a bound self-concept, applied to rhythmic gait
control.
VII. CONCLUSION
This paper has two main goals. The ﬁrst goal was to
demonstrate a common picture of adaptive processes and
to represent key differences to self-adaptive mechanisms,
which include bound and unbound self-concepts. Secondly,
it was intended to exemplify these high-level concepts by
one concrete example of collective locomotion in reconﬁg-
urable robotics.
The self-concept describes a goal of the system in some
invariant form, such as symmetries, optimization principles,
templates or information-based metrics. It can even gen-
erate an unlimited complexity and diversity, as proposed
by von Neumann, in L-Systems as well as in self-referred
dynamics [30]. It was argued that the origin of changes
should be considered as the main difference between adap-
tation and self-adaption, and not the application of concrete
approaches. Since self-adaptive mechanisms provide more
degrees of freedom for modiﬁcations of behavior, functions
or structures, corresponding generators should be integrated
into the system’s architecture. The self-adaptation and self-
development overlap in several points; both concepts are
driven in parallel by different communities. To provide
consistency in logic of these notions, the self-development
is considered to be more general ontogenetic mechanism,
related to cognitive structures and their embodiment.
The introduced ideas are exempliﬁed by the problem
of collective locomotion in aggregated multi-robot organ-
isms. Self-organizing and evolving adaptive mechanisms
for the motion with obstacles have been considered. The
synchronization of oscillators for motor drivers can reduce
complexity of adaptive mechanisms. It was indicated that for
performing further structural and functional changes without
obstacles, another driving mechanism on the generating level
should be used. Examples are given by symmetries and
symmetry-breaking effects in structural matrices, templates
or universal unfolding, which can represent a bound self-
concept for functional and structural cases.
Several problems remain unsolved. Firstly, the coupling
C in Figure 10 involves much more diverse structural and
functional elements. It seems there is a complex dependency
between structural and information couplings, which ﬁnally
emerges a collective functionality. The whole framework
around C requires more attention. Secondly, the structural
self-concept based on symmetries of C can regulate morpho-
dynamics of artiﬁcial organisms. However, it is completely
unclear, how this concept can work with a more “high-
level functionality”, e.g. cognitive or hemostatic regulation.
Finally, approaches in Sections VI-A – VI-D are only brieﬂy
sketched to indicate the used mechanisms. Experimental
results for these sections are omitted, since these do not
contribute to the main goal of this paper. It needs another
work, which concentrates on these approaches and on a
multitude of nonlinear effects appearing in them.
ACKNOWLEDGMENT
The “SYMBRION” project is funded by the European
Commission within the work programme “Future and Emer-
gent Technologies Proactive” under the grant agreement no.
216342. The “REPLICATOR” project is funded within the
work programme “Cognitive Systems, Interaction, Robotics”
under the grant agreement no. 216240. Additionally, we
want to thank all members of projects for fruitful discus-
sions.
REFERENCES
[1] S. Kernbach, P. Levi, E. Meister, F. Schlachter, and O. Kern-
bach, “Towards self-adaptation of robot organisms with a
high developmental plasticity,” in Proc. of the First IEEE
International Conference on Adaptive and Self-adaptive Sys-
tems and Applications (IEEE ADAPTIVE 2009), J. Guerrero,
Ed. Athens/Glyfada, Greece: IEEE Computer Society Press,
2009, pp. 180–187.
[2] K. Astrom and B. Wittenmark, Adaptive Control.
Addison
Wesley, 1989.
[3] M. Lungarella, G. Metta, R. Pfeifer, and G. Sandini, “Devel-
opmental robotics: a survey,” Connect. Sci., vol. 15, no. 4,
pp. 151–190, 2003.
136
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[4] S. Kernbach, E. Meister, O. Scholz, R. Humza, J. Liedke,
L. Ricotti, J. Jemai, J. Havlik, and W. Liu, “Evolutionary
robotics: The next-generation-platform for on-line and on-
board artiﬁcial evolution,” in Proc. of the IEEE Congress
on Evolutionary Computation (IEEE CEC-2009), A. Tyrrell,
Ed.
Trondheim, Norway: IEEE Press, 2009.
[5] G. Baele, N. Bredeche, H. Haasdijk, S. Maere, N. Michiels,
Y. Van de Peer, T. Schmickl, S. Ch., and R. Thenius, “Open-
ended on-board evolutionary robotics for robot swarms,”
E-Commerce Technology, IEEE International Conference,
vol. 0, pp. 1123–1130, 2009.
[6] S. Kernbach, L. Ricotti, J. Liedke, P. Corradi, and M. Rother-
mel, “Study of macroscopic morphological features of sym-
biotic robotic organisms,” in Proc. of the International
Conference on Intelligent Robots and Systems (IROS-08),
Workshop on Self-reconﬁgurable robots, Nice, France, 2008,
pp. 18–25.
[7] S. Kornienko, O. Kornienko, A. Nagarathinam, and P. Levi,
“From real robot swarm to evolutionary multi-robot or-
ganism,” in Proc. of the IEEE Congress on Evolutionary
Computation (CEC-2007).
Singapore: IEEE, 2007, pp.
1483–1490.
[8] SYMBRION, SYMBRION: Symbiotic Evolutionary Robot
Organisms, 7th Framework Programme Project No FP7-
ICT-2007.8.2.
European Communities, 2008-2012.
[9] REPLICATOR, REPLICATOR: Robotic Evolutionary Self-
Programming and Self-Assembling Organisms, 7th Frame-
work Programme Project No FP7-ICT-2007.2.1.
European
Communities, 2008-2012.
[10] P. Levi and S. Kernbach, Eds., Symbiotic Multi-Robot Or-
ganisms: Reliability, Adaptability, Evolution.
Springer-
Verlag, 2010.
[11] S. Kernbach, Structural Self-organization in Multi-Agents
and Multi-Robotic Systems.
Logos Verlag, Berlin, 2008.
[12] A. Schore, Affect Regulation And The Origin Of The Self:
The Neurobiology of Emotional Development.
Lawrence
Erlbaum Associates, Publishers, 1994.
[13] S.
Kernbach,
T.
Schmickl,
H.
Hamann,
J.
Stradner,
C. Schwarzer, F. Schlachter, A. Winﬁeld, and R. Matthias,
“Adaptive action selection mechanisms for evolutionary mul-
timodular robotics,” in Proc. of the 12th International Con-
ference on the Synthesis and Simulation of Living Systems
(AlifeXII).
Odense, Denmark: MIT Press, 2010.
[14] S. Kernbach, “Concepts of symbiotic robot organisms,” in
Symbiotic Multi-Robot Organisms, P. Levi and S. Kernbach,
Eds.
Berlin, Heidelberg, New York: Springer-Verlag, 2010,
pp. 5–24.
[15] M. Asada, K. Hosoda, Y. Kuniyoshi, H. Ishiguro, T. Inui,
Y. Yoshikawa, M. Ogino, and C. Yoshida, “Cognitive de-
velopmental robotics: A survey,” IEEE Transactions on
Autonomous Mental Development, vol. 1, no. 1, pp. 12–34,
April 2009.
[16] J. Spencer, M. Thomas, and J. McClelland, Toward a Uni-
ﬁed Theory of Development: Connectionism and Dynamic
Systems Theory Re-Considered.
Oxford University Press,
2008.
[17] S. Nolﬁ and D. Floreano, Evolutionary Robotics: The Bi-
ology, Intelligence, and Technology of Self-Organizing Ma-
chines.
Cambridge, MA. / London: The MIT Press, 2000.
[18] S. Elfwing, E. Uchibe, K. Doya, and H. Christensen,
“Biologically inspired embodied evolution of survival,” in
Proc. of the 2008 IEEE Congress on Evolutionary Com-
putation IEEE Congress on Evolutionary Computation,
Z. Michalewicz and R. G. Reynolds, Eds., vol. 3.
Hong
Kong: IEEE Press, June 2008, pp. 2210–2216.
[19] S. Ficici, R. Watson, and J. Pollack, “Embodied evolution:
A response to challenges in evolutionary robotics,” in Proc.
of the Eighth European Workshop on Learning Robots,
J. L. Wyatt and J. Demiris, Eds., 1999, pp. 14–22. [Online].
Available: citeseer.ist.psu.edu/article/ﬁcici99embodied.html
[20] C. Hartland and N. Bredeche, “Evolutionary robotics, antic-
ipation and the reality gap,” in ROBIO.
IEEE Press, 2006,
pp. 1640–1645.
[21] S. Haroun Mahdavi and P. J. Bentley, “Innately adap-
tive robotics through embodied evolution,” Auton. Robots,
vol. 20, no. 2, pp. 149–163, 2006.
[22] R. Frei, G. D. M. Serugendo, and J. Barata, “Designing self-
organization for evolvable assembly systems,” in Proc. of the
Second IEEE International Conference on Self-Adaptive and
Self-Organizing Systems (SASO-2008), 2008, pp. 97–106.
[23] A. Berns and S. Ghosh, “Dissecting self-* properties,” Self-
Adaptive and Self-Organizing Systems, International Con-
ference on, vol. 0, pp. 10–19, 2009.
[24] O. Brukman and S. Dolev, “Self-* programming: Run-time
parallel control search for reﬂection box,” Self-Adaptive
and Self-Organizing Systems, International Conference on,
vol. 0, pp. 481–482, 2008.
[25] O.
Babaoglu,
M.
Jelasity,
A.
Montresor,
C.
Fetzer,
S. Leonardi, A. van Moorsel, and M. van Steen, Self-star
Properties in Complex Information Systems: Conceptual and
Practical Foundations (Lecture Notes in Computer Science).
Springer-Verlag New York, Inc., 2005.
[26] P. Boonma and J. Suzuki, “Exploring self-star properties in
cognitive sensor networking,” in Proc. of the International
Symposium on Performance Evaluation of Computer and
Telecommunication Systems (SPECTS-2008), 2008, pp. 36–
43.
[27] E. Durfee, “Distributed problem solving and planning,” in
Multiagent Systems: A Modern Introduction to Distributed
Artiﬁcial Intelligence, G. Weiss, Ed.
MIT Press, 1999, pp.
121–164.
[28] S. Kornienko, O. Kornienko, and P. Levi, “Multi-agent
repairer of damaged process plans in manufacturing environ-
ment,” in Proc. of the 8th Conf. on Intelligent Autonomous
Systems (IAS-8), Amsterdam, NL, 2004, pp. 485–494.
137
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[29] B. Scassellati, “Building behaviors developmentally: A new
formalism,” in Proc. of the Fifteenth National Conference
on Artiﬁcial Intelligence (AAAI-98).
AAAI Press, 1998.
[30] N. Kataoka and K. Kaneko, “Functional dynamics i: Artic-
ulation process,” Physica D, vol. 138, pp. 255–250, 2000.
[31] J. R. Koza, Genetic Programming: On the Programming of
Computers by Means of Natural Selection.
Cambridge,
MA: The MIT Press, 1992.
[32] D. Floreano and C. Mattiussi, Bio-Inspired Artiﬁcial Intel-
ligence: Theories, Methods, and Technologies.
MIT Press,
Cambridge, Massachusetts, 2008.
[33] G. Williams, Adaptation and Natural Selection.
Princeton:
Princeton University Press, 1996.
[34] M. Conrad, Adaptability: The Signiﬁcance of Variability
from Molecule to Ecosystem.
New York: Plenum Press,
1999.
[35] J. Gurvis and A. Calarco, Adaptability: Responding Effec-
tively to Change.
iiffer, 2007.
[36] H. Whitaker, “An adaptive system for control of the dynam-
ics performances of aircraft and spacecraft,” Inst Aeronau-
tical Services, no. paper 59-100, 1959.
[37] P. Osbourne, H. Whitaker, and A. Kezer, “New developments
in the design of model reference adaptive control systems,”
Inst Aeronautical Services, no. paper 61-39, 1961.
[38] B. Egardt, Stability of Adaptive Controllers, ser. Lecture
Notes in Control and Information Sciences.
Berlin:
Springer-Verlag, 1979, vol. 20.
[39] B. Anderson, R. Bitmead, C. Johnson, P. Kokotovic, R. Ko-
sut, I. Mareels, L. Praly, and B. Riedle, Stability of Adaptive
Systems: Passivity and Averaging Analysis.
Berlin: MIT
Press, 1986.
[40] C. Rohrs, L. Valavani, M. Athans, and G. Stein, “Robust-
ness of continuous-time adaptive control algorithms in the
presence of unmodeled dynamics,” IEEE Transactions on
Automatic Control, vol. 30, no. 9, pp. 881–889, 1985.
[41] K. Narendra and A. Annaswamy, Stable Adaptive Systems.
Prentice Hall, 1989.
[42] S. Sastry and M. Bodson, Adaptive Control.
Prentice Hall,
1989.
[43] B. Anderson, “Failures of adaptive control theory and their
resolution,” Communications in information and systems,
vol. 5, no. 1, pp. 1–20, 2005.
[44] R. Beer, Intelligence as Adaptive Behaviour: An Experiment
in Computational Neuroethology.
Academic Press, 1990.
[45] F. Keijzer, “Making decisions does not sufﬁce for minimal
cognition,” Adaptive Behavior, vol. 11, no. 4, pp. 266–269,
2003.
[46] M. Mataric, “Situated robotics,” Encyclopedia of Cognitive
Science, Nature Publishers Group, Macmillian Reference
Ltd., 2002.
[47] R. Pfeifer, F. Iida, and G. Gomez, “Morphological compu-
tation for adaptive behavior and cognition,” International
Congress Series, no. 1292, 2006.
[48] L. Bull, M. Studley, A. Bagnall, and I. Whitley, “Learning
classiﬁer system ensembles with rule-sharing,” IEEE Trans-
actions on Evolutionary Computation, vol. 11, no. 4, pp.
496–502, August 2007.
[49] M. Butz, Anticipatory Learning Classiﬁer Systems, ser.
Genetic Algorithms and Evolutionary Computation. Kluwer
Academic Publisher, 2002.
[50] M.
Puterman,
Markov
Decision
Processes:
Discrete
Stochastic
Dynamic
Programming.
Wiley-
Interscience,
April
1994.
[Online].
Available:
http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-
20&amp;path=ASIN/0471619779
[51] S. Kernbach, R. Thenius, O. Kernbach, and T. Schmickl,
“Re-embodiment of honeybee aggregation behavior in ar-
tiﬁcial micro-robotic system,” Adaptive Behavior, vol. 17,
no. 3, pp. 237–259, 2009.
[52] G. Weiss, Multiagent systems. A modern approach to dis-
tributed artiﬁcial intelligence.
MIT Press, 1999.
[53] D. Cliff, “Biologically-inspired computing approaches to
cognitive systems: a partial tour of the literature,” Hewlett-
Packard Company, 2003.
[54] E. Alba and M. Tomassini, “Parallelism and evolutionary
algorithms,” IEEE Transactions on Evolutionary Computa-
tion, vol. 6, no. 5, pp. 443–462, 2002.
[55] SAP, Adaptive Manufacturing: enabling the lean six sigma
enterprises.
SAP, 2005.
[56] A. Ledeczi, G. Karsai, and T. Bapty, “Synthesis of self-
adaptive software,” in Proc. of the IEEE Aerospace Confer-
ence 2000.
Big Sky, MT, 2000.
[57] B. Cheng, H. Giese, P. Inverardi, J. Magee, and R. de Lemos,
Software Engineering for Self-Adaptive Systems.
Dagstuhl
Seminar 08031, 2008.
[58] W. R. Ashby, Design for a brain: the origin of adaptive
behavior.
New York,Wiley,, 1960.
[59] M.
Wirsing,
J.-P.
Banˆatre,
M.
M.
H¨olzl,
and
A. Rauschmayer, Eds., Software-Intensive Systems and
New Computing Paradigms - Challenges and Visions, ser.
Lecture Notes in Computer Science.
Springer, 2008, vol.
5380.
[60] H. Colestock, Industrial Robotics.
McGraw-Hill/TAB
Electronics, 2008.
[61] K. Astrom, “Adaptive feedback control,” Proceedings of the
IEEE, vol. 75, no. 2, pp. 185–217, 1987.
138
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[62] J. Vaario, “Modelling adaptive self-organization,” in In
Proceedings of the Fourth International Workshop on the
Synthesis of Living Systems, 1994, p. 314.
[63] T. M. Mitchell, Machine Learning.
New York: McGraw-
Hill, 1997.
[64] V. Chalam, Adaptive Control Systems: Techniques And Ap-
plications.
CRC, 1987.
[65] D. Fogel, Evolutionary Computation: Toward a New Philos-
ophy of Machine Intelligence.
Piscataway, NJ: IEEE Press,
1995.
[66] K. J. ˚Astr¨om, “Design principles for self-tuning regulators,”
in Methods and Applications in Adaptive Control, ser. Lec-
ture Notes in Control and Information Sciences.
Berlin:
Springer-Verlag, Jan. 1980, no. 24, pp. 1–20.
[67] R. Kalman, “Design of a self-optimizing control system,”
Transactions of the ASME, vol. 80, pp. 468–478, 1958.
[68] P. Hammond, Theory of Self Adaptive Control Systems.
Plenum Press, 1966.
[69] A. Maslow, Toward a Psychology of Being.
Hoboken, NJ:
Wiley, 1998.
[70] K. McLean, M. Pasupathi, and J. Pals, “Selves creating sto-
ries creating selves: A process model of self-development,”
Personality and Social Psychology Review, vol. 11, no. 3,
pp. 262–278, 2007.
[71] L. Fausett, Ed., Fundamentals of neural networks: architec-
tures, algorithms, and applications.
Upper Saddle River,
NJ, USA: Prentice-Hall, Inc., 1994.
[72] W.-M. Shen, M. Krivokon, H. Chiu, J. Everist, M. Ruben-
stein, and J. Venkatesh, “Multimode locomotion for recon-
ﬁgurable robots,” Autonomous Robots, vol. 20, no. 2, pp.
165–177, 2006.
[73] H. Haken, Synergetics: An introduction. Berlin, Heidelberg:
Springer-Verlag, 1977.
[74] J. Alvarenz-Ram´ırez, “Using nonlinear saturated feedback
to control chaos: H´enon map,” Physical Review, vol. E48,
no. 6, pp. 3165–3167, 1993.
[75] M. Basso, A. Evangelisti, R. Genesio, and A. Tesi, “On
bifurcation control in time delay feedback systems,” Int. J.
Bifurcation and Chaos, vol. 8, no. 4, pp. 713–721, 1998.
[76] A. Kolesnikov, Synergetic control theory (in russian).
Taganrog: Taganrog state university, 1994.
[77] T. B¨ack, “Introduction to the special issue: Self-adaptation,”
Evol. Comput., vol. 9, no. 2, pp. 3–4, 2001.
[78] H.-G. Beyer, “Toward a theory of evolution strategies: Self-
adaptation,” Evol. Comput., vol. 3, no. 3, pp. 311–347, 1995.
[79] M. Ibrahim, R. Anthony, T. Eymann, A. Taleb-Bendiab,
and L. Gruenwald, “Exploring adaptation & self-adaptation
in autonomic computing systems,” Database and Expert
Systems Applications, International Workshop on, vol. 0, pp.
129–138, 2006.
[80] A. Avstreih, “The emerging self: Psychoanalytic concepts of
self development and their implications for dance therapy,”
American Journal of Dance Therapy, vol. 4, no. 2, pp. 21–
32, 1981.
[81] A. Bonarini, A. Lazaric, M. Restelli, and P. Vitali, “Self-
development framework for reinforcement learning agents,”
in Proc. of the 5th International Conference on Development
and Learning (ICDL06), Bloomington, USA, 2006.
[82] P.-Y. Oudeyer and F. Kaplan, “Intelligent adaptive curiosity:
a source of self-development,” in Lund University Cognitive
Studies, 2004, pp. 127–130.
[83] J. Pujol, P. Vendrell, C. Junque, J. Marti’-Vilalta, and
A. Capdevila, “When does human brain development end?
evidence of corpus callosum growth up to adulthood,” An-
nals of Neurology, vol. 34, no. 1, pp. 71–75, 1994.
[84] T. Lee and A. Peterson, “Adaptive vector quantization us-
ing a self-development neural network,” IEEE Journal on
Selected Areas in Communications, vol. 8, no. 8, pp. 1458–
1471, Oct 1990.
[85] S.
Rasmussen,
L.
Chen,
D.
Deamer,
D.
Krakauer,
N. Packard, P. Stadler, and M. Bedau, “Evolution: Transi-
tions from nonliving to living matter,” Science, vol. 303, no.
5660, pp. 963–965, 2004.
[86] J. von Neumann, Theory of Self-Reproducing Automata.
Champaign, IL, USA: University of Illinois Press, 1966.
[87] C. Waddington, “Paradigm for an evolutionary process,”
in Towards a Theoretical Biology, C. Waddington, Ed.
Edinburgh University Press, 1969, vol. 2, pp. 106–128.
[88] K. Ruiz-Mirazo, J. Umerez, and A. Moreno, “Enabling con-
ditions for ”open-ended evolution”,” Biology & Philosophy,
vol. 23, pp. 67–85, 2008/01 2008.
[89] C. Maley, “Four steps toward open-ended evolution,” in
Proc. of the Genetic and Evolutionary Computation Confer-
ence (GECCO-99).
Morgan Kaufmann, 1999, pp. 1336–
1343.
[90] B. Rosslenbroich, “The theory of increasing autonomy in
evolution: a proposal for understanding macroevolutionary
innovations,” Biology & Philosophy, 2009.
[91] L. Spector, J. Klein, and M. Feinstein, “Division blocks
and the open-ended evolution of development, form, and
behavior,” in Proc. of the 9th annual conference on Genetic
and evolutionary computation (GECCO-07).
London,
England: ACM, 2007, pp. 316–323.
[92] R.
Standish,
“Open-ended
artiﬁcial
evolution,”
Int.
journal
of
computational
intelligence
and
application, vol. 3, p. 167, 2003. [Online]. Available:
http://www.citebase.org/abstract?id=oai:arXiv.org:nlin/0210027
[93] J. McCormack, “Interactive evolution of l-system grammars
for computer graphics modelling,” in Complex systems: from
biology to computation, D. Green and T. Bossomaier, Eds.
IOS Press, 1993, pp. 118–130.
139
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[94] K. Kouptsov, “Production-rule complexity of recursive struc-
tures,” in Unifying Themes in Complex Systems IV, Proc. of
the Fourth International Conference on Complex Systems,
A. Minai and Y. Bar-Yam, Eds.
Springer-Verlag Berlin,
Heidelberg, 2008, pp. 149–157.
[95] F. Gobet and H. Simon, “Templates in chess memory: A
mechanism for recalling several boards,” Cognirtive Psy-
chology, vol. 31, pp. 1–40, 1996.
[96] J.
Birman,
“Braids,
knots
and
contact
structures,”
2004.
[Online].
Available:
http://www.citebase.org/abstract?id=oai:arXiv.org:math/0403489
[97] M. Minsky, “Frame-system theory,” in Thinking. Readings
in cognitive science, P. N. Johnson-Laird and P. C. Wason,
Eds.
Cambridge: Cambridge University Press, 1977.
[98] R. Manseur and K. L. Doty, “A complete kinematic analysis
of four-revolute-axis robot manipulators,” ASME Mecha-
nisms and Machines, vol. 27, no. 5, pp. 575–586, 1992.
[99] D. Floreano, P. Husbands, and S. Nolﬁ, “Evolutionary
Robotics,” in Handbook of Robotics.
Berlin: Springer-
Verlag, 2008.
[100] G. Endo, J. Morimoto, T. Matsubara, J. Nakanishi, and
G. Cheng, “Learning cpg-based biped locomotion with a
policy gradient method: Application to a humanoid robot,”
Int. J. Rob. Res., vol. 27, no. 2, pp. 213–228, 2008.
[101] K. Kaneko., Theory and application of coupled map lattices.
John Willey & Sons, Inc., 1993.
[102] Y. Kuniyoshi and S. Sangawa, “Early motor development
from partially ordered neural-body dynamics: experiments
with a cortico-spinal-musculo-skeletal model,” Biological
Cybernetics, vol. 95, no. 6, pp. 589–605, 2006.
[103] M. Golubitsky and D. Schaeffer, Singularities and groups
in bifurcation theory.
New York: Springer-Verlag, 1985,
vol. I.
[104] Y. Gu, M. Tung, J.-M. Yuan, D. Feng, and L. Narducci,
“Crises and hysteresis in coupled logistic map,” Phys. Rev.
Letters, vol. 25, no. 9, pp. 701–704, 1984.
[105] Y. Maistrenko, V. Maistrenko, and A. Popovich, “Transverse
instability and riddled basin in a system of two coupled
logistic maps,” Phys. Rev. E, vol. 57, no. 3, pp. 2713–2724,
1998.
[106] O. Kernbach, The synergetic approach towards analysing
and controlling the collective phenomena in multi-agents
systems, PhD thesis.
University of Stuttgart: to be pub-
lished, 2010.
[107] Y. G.Taga and H. Shimizu, “Self-organized control of
bipedal locomotion by neural oscillators in unpredictable
environment,” Biological Cybernetics, vol. 65, pp. 147–159,
1991.
[108] S. Y. S. Yonekura and Y. Kawaguchi, “Adaptive body use of
multipede driven by coupled neural oscillators,” in 18th In-
ternational Conference on Artiﬁcial Reality and Telexistence
(ICAT 2008), 2008.
[109] K. Pyragas, “Control of chaos via extended delay feedback,”
Physical Letters A, vol. 206, pp. 323–330, 1995.
[110] K. Konishi and H. Kokame, “Time-delay-induced amplitude
death in chaotic map lattices and its avoiding control,”
Physical Letters A, vol. 366, pp. 585–590, 2007.
[111] M. L. A. Pitti and Y. Kuniyoshi, “Quantiﬁcation of emergent
behaviors induced by feedback resonance of chaos,” 2005.
[112] ——, “Generating spaciotemporal joint torque patterns from
dynamical synchronization of distributed patterns genera-
tors,” frontiers in neurorobotics, vol. 3, 2009.
[113] M. Mehta and S. Sinha, “Asynchronous updating of coupled
map leads to synchronization,” Chaos, vol. 10, 2004.
[114] L. Winkler and H. W¨orn, “Symbricator3d - a distributed
simulation environment for modular robots,” in Intelligent
Robotics and Applications, ser. Lecture Notes in Computer
Science, vol. 5928/2009.
Springer Berlin / Heidelberg,
2009, pp. 1266–1277.
[115] B. Johnston and F. Richman, Numbers and Symmetry: An
Introduction to Algebra.
CRC-Press, 1997.
[116] A. Karmiloff-Smith, Beyond Modularity: A Developmental
Perspective on Cognitive Science.
MIT Press, 1995.
[117] P. Davis, Circulant matrices.
John Willey & Sons, 1979.
[118] A. B¨ottcher and B. Silbermann, Introduction to large trun-
cated Toeplitz matrices.
New York: Springer-Verlag, 1999.
[119] P. Flener, A. Frisch, B. Hnich, Z. Kiziltan, I. Miguel, J. Pear-
son, and T. Walsh, “Breaking row and column symmetries in
matrix models,” in Proc. of the 8th International Conference
on Principles and Practice of Constraint Programming (CP-
02).
London, UK: Springer-Verlag, 2002, pp. 462–476.
[120] Z. Kiziltan and M. Milano, “Group-graphs associated with
row and column symmetries of matrix models: Some obser-
vations,” in Proc. of the Second International Workshop on
Symmetry in Constraint Satisfaction Problems (SymCon-02),
Ithaca, NY, USA, 2002.
140
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

