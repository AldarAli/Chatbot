Using Qualitative System Dynamics in the Development of an Agile Teamwork 
Productivity Model 
 
Israt Fatema 
Institute of Information Technology  
University of Dhaka 
Dhaka, Bangladesh 
email: mph001@iit.du.ac.bd 
Kazi Sakib 
Institute of Information Technology  
University of Dhaka 
Dhaka, Bangladesh 
email: sakib@iit.du.ac.bd 
 
 
Abstract— Improvement in agile software development will not 
be achieved without considering that there is a large number of 
factors affecting agile teamwork productivity. The objective of 
this study is to explore what factors influence agile teamwork 
productivity, and how these factors interacted. This is achieved 
through a two-phase approach. The first phase involves 
reviewing relevant literature, performing a set of in-depth 
interviews with agile team members and conducting a survey 
to identify productivity factors. The survey has been 
administered to 60 respondents from 18 agile software 
companies in Bangladesh. The second phase involves the 
construction of qualitative system dynamics model (causal loop 
diagrams) of agile teamwork productivity with the findings 
from the first phase to analyze the productivity influence 
factors. The findings from the first phase reveal the most 
perceived factors are motivation, team effectiveness and team 
management. Social hierarchy culture influences self- managed 
agile team from correct implementation of agile practice. 
Although, the most followed organizational structure is 
horizontal, Scrum is leading agile practice among the 
participating companies. Lack of management support is 
found to be the most mentioned reason for any failed agile 
project. The resulting qualitative model is expected to provide 
more insight into the agile teamwork dynamics and establish a 
basis for a further quantitative modelling.  
Keywords-agile teamwork productivity; influence factors; 
qualitative system dynamics; social hierarchy culture; team 
effectiveness; causal loop diagram. 
I. 
 INTRODUCTION 
The objective of any software company is to be efficient 
and productive by being cost effective and time optimum. 
Agile process places more emphasis on people factors in the 
project. Therefore, agile teamwork productivity is one of the 
most important aspects in achieving project success at 
different stages of a project. Improvement in agile software 
development will not be achieved without considering that 
there is a large number of factors affecting agile teamwork 
productivity. It is important to identify the most influential 
ones among the factors and develop policies to manage 
them. A better understanding of the factors influencing agile 
teamwork productivity can enable team management to 
determine where efforts are to be directed in order to 
improve productivity. 
This paper explores which factors influence agile 
teamwork productivity and how these factors impact 
productivity of agile team. It thereby revises and extends 
previous contribution [1], by an in-depth discussion of the 
complex inter-related structure of different factors. A 
System Dynamics (SD) based approach has been used to 
model agile teamwork productivity influence factors. SD 
introduced by Jay Forrester of the MIT in the 1960s as a 
modelling and simulation methodology for studying 
complex system [2].  
There are different factors that affect the productivity of 
traditional software development teams as pointed out by 
previous researchers [3][4]. Although agile approaches have 
become popular with a wide variety of organizations, there 
is insufficient evidence on the effect of agile productivity 
factors [5]. However, agile teamwork productivity is a 
function of various controllable and uncontrollable factors 
[6]. Software productivity across many projects, culture and 
practice varies extensively even if the same type of software 
is developed [7]. The software industry is also different 
from country to country as are the resource availability, the 
laws, which govern it and the developer’s cost [8]. In 
addition, actual productivity measurement becomes more 
difficult 
when 
agile 
software 
developers 
perform 
knowledge-related tasks (e.g., creating, storing, sorting, 
retrieving, applying and acquiring knowledge) where the 
product is usually intangible, rarely has single way of doing 
it, and it is difficult to quantify [6]. Since knowledge is 
complex and hard to evaluate, it is difficult to interpret the 
productivity of the agile team member’s simply by Source 
Line Of Code (SLOC) or function points produced per unit 
of time/cost [7]. Measuring the same code gives different 
results with different code counters since there is no 
universal standard for Line Of Code (LOC) [9]. Story 
points, used in agile software development, are very 
subjective and metrics based on story points cannot be used 
to compare between teams, units or organizations [10]. 
It would be helpful if the productivity influence factors 
can be controlled by the Project Manager (PM) when 
establishing and managing an agile project. “You cannot 
control what you cannot measure” [11]. Nevertheless, it is 
difficult to measure agile teams’ productivity [10]. In view 
of the fact that agile software development empowers self-
managing teams instead of forming traditional project 
management. Consequently, project has less control on the 
170
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

management level. To overcome this limitation and 
domination project activities, a clear list of influences on 
productivity in agile software development is needed. Agile 
team members also should learn to interpret and direct 
productivity factors regularly as they are self-managed. The 
researchers have highlighted the value of team learning to 
help organization achieving team effectiveness, better ways 
to resolve problem and improve productivity.  
In an earlier work [1], identification of agile teamwork 
productivity influence factors was conducted on seventeen 
software companies in Bangladesh. The study showed the 
main perceived factors impacting on agile team member’s 
productivity were team effectiveness, team management, 
motivation and customer satisfaction. Lack of management 
support was found to be the most mentioned reason for any 
failed agile project.  
This extension of the previous work added more 
software companies and survey respondents from agile 
teams to provide a better understanding of agile teamwork 
productivity influence factors. The qualitative model of 
agile teamwork productivity is developed from these 
sources using commanding cause and effect feedback loop. 
Moreover, if the cause-effect relationships between the 
factors can be clarified and quantified, quantitative models 
or formulations could be established. Therefore, the future 
contribution of this research shall provide a strategic 
(quantitative) model that tells the PM in advance about the 
degree of impact these factors will have on teamwork. 
Using the proposed model, PM may identify the origin of a 
decrease in productivity. As a result, the agile teamwork 
productivity may be improved by implementing of 
management strategies. 
The rest of this paper is organized as follows. Section II 
includes a literature review, Section III presents the research 
method and design. Section IV describes the survey results 
and Section V explores the structure of the qualitative SD 
model. Section VI presents causal loop diagram validation 
and Section VII describes some limitations of this work. 
Finally, Section VIII contains the conclusion and future 
work. 
II. 
LITERATURE REVIEW 
Agile adoption is growing within organizations for 
accelerating software delivery and productivity, it is 
essential to discern whether the factors influencing 
productivity remain the same in all context [6]. 
Dingsoyr et al. described agile software development as 
a sociotechnical system comprised of human (socio) and 
technical entities, the culture of the society in which the 
system works is crucial [12].  Technological interventions 
do not increase sociotechnical system effectiveness if they 
are not supported by social (self-managing team and group) 
components of the system. Thus, recent focus on agile 
software development has increased interest in analysing 
self-managing agile team and how to effectively make team 
productive [12].  
According to the Agile Manifesto, it focuses on 
individuals and interactions between people (teamwork) 
over processes and tools [13]. Therefore, agile software 
development is influenced by the underlying values and 
background of the people involved with development 
process. These personal characteristics of the people are 
very much influenced by their local tradition [14].  A survey 
study by Verner et al. reveals that teamwork productivity 
factors differ across countries and, culture influences 
teamwork’s decision-making process, problem solving 
approach, social interaction, satisfaction and expectation 
[15].    
There are several studies that attempted to assess the 
impact of some of the influencing factors on agile teamwork 
productivity. Besides, agile surveys have been conducted 
mostly on development process and overall view of agile 
practices [16][17][18]. However, these surveys do not 
elaborate much on productivity factors, and do not consider 
how they are related. Only Melo et al. analysed the major 
factors influencing agile teamwork productivity using the 
team’s perception as one potential dimension to understand 
their overall productivity [6][18]. Through perceptions, they 
found that team management is the most influencing factor 
on agile team productivity.  
SD technique has been applied in software engineering 
fields for modelling purposes, which is important for the 
organization and the project. SD is well suited for studying 
complex systems where unknown attributes of system 
properties are less visible [2]. There are few researches that 
attempted to evaluate the impact of some of the influencing 
factors on productivity separately using SD [5][19][20][21]. 
However, the complex inter-related structure of all the 
major factors influencing the teamwork productivity was not 
considered by the previous works. Abdel-Hamid and 
Madnick attempted to integrate system dynamics modelling 
and project dynamics insights with traditional software 
development processes [19]. In [21], Abdel-Ahmed 
investigated the effect of various management policies on 
development cycle time, quality and effort. However, his 
works adopt the waterfall method, which limits their 
applicability 
in 
recent 
software 
project 
and 
more 
importantly, does not focus on the agile principles.  
In another research, Rodrigues proposed methods by 
which system dynamics modelling can be integrated with 
principles of project management [22]. In [23], the authors 
discussed whether agile project will fit within the common 
system dynamics project management structures or it has a 
unique structure. An analysis of factors that impact on 
productivity during agile web development and maintenance 
phases was conducted by Kong et al. [5]. However, it does 
not explicitly show the interrelations of different variables 
that influence the effectiveness of teamwork. Cao et al. 
created an integrative system dynamics model of agile 
software development for investigating refactoring and its 
impact [24]. The authors investigated the dynamics of agile 
software development and the impact of agile practices on 
cycle time and customer satisfaction using SD [24]. 
Modelers have also investigated schedule pressure effects 
on the dynamics of iterative development cycles [25].  
 In addition, evaluation of individual productivity may 
not affect the productivity of other team members [18]. 
These ideas provide a motivation to study teams’ 
171
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

productivity, not individuals. A number of studies exist on 
teamwork in agile software development on a range of 
topics relevant to composition of team [26], task-effective 
norms in teams [27], team member’s motivation [28], and 
the importance of a team vision. Yet others have focused on 
how team uses daily stand-up meetings to communicate 
[26], how team makes decisions [29] and how to achieve 
self-management [26]. 
Another stream of research has focused on team 
performance in agile software development to analyse the 
teamwork. Team performance refers to evaluation of the 
results of the teamwork. Moe et al. used a team performance 
model to explain teamwork in a project adopting Scrum: 
The Dickenson McIntyre model [12]. Melo et al. used the 
‘Input Process Output’ model to identify team productivity 
factors in a multiple case study [6]. Boehm reported in his 
productivity estimation model, Constructive Cost Model 
(COCOMO), that productivity of a software development 
project is mostly affected by the development team and their 
team management [30]. Scacchi also identified that poorly 
managed or organized project’s productivity was mostly 
lower than those projects, which were well managed [26].  
Throughout the literature review, it has been observed 
that there is a lack of well-established dynamic theory about 
agile teamwork. This study seeks to fill this gap by 
developing an integrated model, which represents the inter-
related structure of productivity influence factors and how 
they impact (positively or negatively) agile teamwork’s 
productivity. In order to do so, this study applies a system 
dynamics approach, which can study complex system by 
exploring underlying associations and connections between 
the components of a system that normally are not discovered 
by the input-output-process type of models used in 
organizational studies. Focusing on people and teamwork 
aspects of agile team, this paper makes use of two team 
effectiveness models for better analysis of agile software 
development teamwork productivity. Two models, the Salas 
and the Dickenson McIntyre models are used, which focus 
on team effectiveness, and mainly on internal aspects of the 
team [12][23][26] 
III. 
RESEARCH METHODOLOGY 
The shortcoming of previous research studies lies in 
their not considering the complex inter-related structure and 
causal relationships of different factors (hard and soft) 
affecting the agile teamwork productivity. Thus, this study 
aims to develop a productivity model to analyse the 
interactions among the main factors of agile software 
development teamwork productivity. The research question 
in this study is therefore “which factors do have an 
influence on agile teamwork productivity, and in what way 
(positively or negatively)?” To answer this question, a 
qualitative system dynamics approach has been used to 
capture the interactions and causal relationship between the 
influencing factors. SD is a simulation methodology enables 
to model complex system considering all the influencing 
factors [31]. There are many modelling techniques 
developed and used so far, according to the modelling 
objective and perspective. However, system dynamics 
modeling chosen for this research because it provides a 
systematic 
method 
for description, exploration and 
inspection about the dynamic behavior of complex systems 
[32]. SD methodology has been applied by many 
researchers [31][33][34][35] for studying and managing 
complex feedback system, where feedback is understood as 
a closed sequence of causal relationships. The concept of a 
feedback loop reveals that any actor in a system will 
eventually be affected by its own action. 
Figure 1 presents a flowchart of the main stages and 
activities involved in creating and validating the qualitative 
(Causal Loop Diagrams CLD) model of the agile teamwork 
productivity. As it can be seen in this flowchart, model 
building in SD begins with identifying and listing (Step 1) 
those factors that have a major influence on the output.  
 
 
 
 
 
 
Figure 1.  The development stages of the proposed qualitative SD agile 
teamwork productivity model 
 
172
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

There are several methods established to identify those 
influences such as observation, discussion, interviews, 
existing data and survey [2]. This study chose to develop a 
questionnaire and conduct a semi-structured interview with 
responses based on the perception and observation of agile 
practitioners in Bangladeshi software companies. Survey 
research has been used because questionnaires are 
reasonable, completed within limited time and data can be 
interpreted through simple descriptive statistics [18]. 
Interviews were semi-structured in which interviewer did 
not strictly follow a specific set of questions. It allows more 
open-ended questions for a discussion with the interviewee 
[14]. Thus, semi-structured interview has been adopted to 
explore the views of the factors impacting agile productivity 
in the team’s perception and how they influenced. Team 
members are central to the software development and 
consequently, they directly influence the team’s productivity 
[36]. Therefore, team member perceptions used as a survey 
response in this study to analyse teamwork productivity 
influence factors. 
Step 2 involves selection of factors to be included in the 
CLD. Then the qualitative model of teamwork productivity 
is constructed (Step 3) using causal relationships (cause and 
effect feedback loops) among identified factors affecting 
teamwork productivity. Model validation is conducted (Step 
4) to ensure that the model adequately represents the real 
system. 
A. Identification of different factors affecting agile 
teamwork productivity 
Data collection: There are three important objectives of 
collecting information; to determine what factors affected 
productivity of agile team members, to determine how these 
factors impacting project productivity in the team’s 
perception and to determine the significance of the factors. 
1) Literature review: Keywords such as “productivity”, 
“agile productivity influence factors”, “system dynamics” 
and “agile teamwork” were used to search for related work 
in digital libraries. Significant findings from related work 
were not only helped in identifying some factors but also 
helped in the determination of the impact the factors have 
(positive or negative) on other variables in the project. The 
estimation of this impact would be vital in the calibration of 
the SD model. 
2) Interview: Primarily, to collect qualitative data, a set 
of semi-structured interviews and face-to-face discussions 
were conducted with twelve key project members from four 
software companies in Bangladesh. All of the respondents 
had experience in agile software development methods, 
such as XP and Scrum. The roles of the respondents 
included project managers, scrum masters, developers and 
project owners. The semi-structured interviews mainly 
focused on their working team, their team productivity 
influence factors and experience of introducing agile 
practices in Bangladesh. 
3) Questionnaire/survey: In an attempt to identify the 
perceived influencing factors and their impact on agile team 
members, data was collected with the help of online survey.  
a) Questionnaire design: Using the factors identified in 
literature review and interview, a questionnaire consisting of 
17 questions was developed [37]. Most of the questions 
were based on a previous global survey on agile methods 
conducted by [16] and country specific survey on 
agile productivity factors [18]. The questionnaire was 
structured in 4 parts. The first section was on demographic 
data, information about the project and organization. The 
respondents’ details included their experience with agile 
methods, current position, current working project and 
status, working team size and organization name. The 
organizational profile included details about its’ main 
activity, structure, size, mostly followed agile method, agile 
practice adopted and mostly used programming language. 
The second section was on perception of success/failed 
project and criterion for measuring/perceiving productivity. 
The third section was a set of 35 productivity influence 
factors. The last section was taken for any additional 
comments in order to allow the respondents to express their 
opinion more freely. To measure significance of agile 
teamwork productivity influence factors, the respondents 
were asked to indicate the strength (high, medium or low) 
for each factors that they perceived influenced their 
productivity.   
b) Questionnaire administration and selection of 
respondents: The questionnaire was emailed to a total of 25 
software 
companies 
in 
Bangladesh, 
requested 
for 
distribution within the organization through Human 
Resources departments. The company selection criteria for 
this preliminary study were: companies using agile methods 
for at least 1 year, developing software for both offshore and 
local market, and top listed software companies in 
Bangladesh [38]. Survey notifications were also sent to 
members of Agile-related group (Agile Bangladesh) with 
announcements on the Facebook group. 60 responses from 
18 companies responded to the questionnaire. In the online 
survey, respondents were requested to fill up the 
questionnaire based on ongoing project or they had 
completed recently (regardless whether the project outcome 
was positive or negative). Data were collected throughout a 
period of eight months in 2017 (January-August). In order 
to ensure the quality of data, team members were all self-
selected by their organization based on their work roles as 
members of existing agile teams. Therefore, respondents 
responded to survey questionnaires were already aware of 
agile team environment and mostly experienced. The filled-
in questionnaires were then analysed to identify factors, 
which 
have 
major 
influences 
on 
agile 
teamwork 
productivity. Currently, more software companies are being 
requested to participate in this survey, as the plan is to 
collect more than 150 responses from different agile teams. 
173
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

4) Author’s assumption: Where necessary, author’s 
assumptions are used in the development of the model. Such 
assumptions will be permitted and perhaps, moderated by 
experienced 
agile 
practitioners 
via 
interviews 
and 
questionnaire. 
B. Selection of factors for inclusion in the model 
Data analysis: Factors affecting agile teamwork 
productivity are rarely independent of the others, but a set of 
factors interacting with each other to build the final result 
[19]. The important factors identified in literature and 
interviews were taken as a starting point for the system 
approach in this research. In total, 35 factors were chosen 
for preliminary analysis. In order to create a system model 
to analyse the teamwork productivity, it is required to 
determine the importance of the individual factor, their 
correlation with one another and their effects on 
productivity itself. The agile team members were asked to 
fill in the questionnaire to indicate the strength (high, 
medium or low) of the factors that they perceived influenced 
their productivity [35]. 
The procedure followed to extract the agile team 
member’s perception of the influence factors affecting their 
productivity can be summarized in the following steps: 
1. Convert the qualitative scale to a quantitative one. 
The qualitative scale of high, medium or low was 
converted to a number scale of 3, 2, and 1, 
respectively. 
2. Find the total score of each factor for frequency 
analysis. Then, the arithmetic mean of the total 
counts was calculated to eliminate the factors below 
the average (Table I) mean 2.26. 
3. Cronbach’s Alpha (α) coefficient for internal 
consistency reliability was calculated for the 
identified factors [39]. Cronbach alpha (α) is widely 
used as an estimator for reliability tests [39]. In a 
good solution for indicating high internal construct 
validity, Cronbach alpha ranges between zero and 
one - the larger the value, the more stable the 
factors. Generally, the value of 0.70 is accepted as 
the minimum desired value of reliability [39]. In 
this study, the 35 factors were tested for internal 
consistency, using the 60 respondent’s data. The 
results, shown in Table I had values ranging from 
0.877 to o.887, all of which were considered 
acceptable (Cronbach’s alpha higher than 0.70) and 
Cronbach’s alpha for 35 factors was .885 
4. From step 2, twenty factors (Table I, highlighted) 
were selected as the most influential ones (above 
average mean) 
IV. 
SURVEY RESULTS 
This study used reliable survey instruments, that can be 
helpful for comparing new results with the previous studied 
results [16][18]. However, there is no data available on the 
state of agile development in Bangladeshi software 
companies to interpret this study sample representativeness. 
Interestingly, this study also found some similarities 
between Bangladesh and worldwide surveys [16][18]. 
 This section presents a summary of the results found in 
this research. Characteristics of the sample software 
companies and respondents can be found in Figure 2 to 
Figure 11. As can be seen from Figure 2 – Figure 4 
summarizes the respondents profile. The results show that 
35% of the respondents cover the range 2-5 years of 
experience of using agile methods.  
 
 
- 
 
 
 
 
 
Figure 2.       Agile practices experience 
The respondents were working in various positions in 
their organizations, ensuring diversity in the survey. Figure 
3 and Figure 4 present the team role of the respondents in 
their organizations and the respondent’s main team 
assignment. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3.  Team role in the project 
60% indicated themselves as developer, 17 % as team 
leader/ manager, 10% as QA engineer, while the remaining 
13% of the respondents are active in other roles, such as 
Scrum master, product owner and software architects. The 
majority of respondents (85%) are working on development 
project and 12% on maintenance project (Figure 4) 
 
 
 
 
 
 
 
 
 
 
Figure 4.  Main team assignment 
174
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE I.  
AGILE TEAMWORK PRODUCTIVITY INFLUENCE FACTORS-QUESTIONNAIRE RESULTS FROM FREQUENCY ANALYSIS:ARITHMETIC  MEAN, STD. 
DEV AND INTERNAL CONSISTENCY TEST 
 
Sl 
Factors 
Description 
Mean 
Std. 
Dev 
Cronbach’s 
Alpha 
1. 
 
Staffing  
The right persons should be selected 
2.73 
.482 
.882 
2. 
 
Size of team  
Small and mixed team 
1.93 
.362 
.885 
3. 
 
Project Complexity 
Database size, architecture, complexity of interface to other system, code, 
interface complexity to hardware and 
 software, logical problem 
1.97 
.551 
.883 
4. 
 
Team Leadership  
Shared leadership can be shown by several team members 
2.57 
.621 
.880 
5. 
 
Mutual 
performance 
monitoring  
Being aware of other team members’ performance 
2.37 
.637 
.881 
6. 
 
Backup Behavior  
Being available to assist other team members when needed 
2.32 
.651 
.879 
7. 
 
Team orientation  
Assigning high priority to team goals and participating willingly in all relevant 
aspects of the team 
2.48 
.651 
.881 
8. 
 
Adaptability  
Response to changing conditions, internal or external 
2.45 
.622 
.883 
9. 
 
Feedback  
Giving, seeking, and receiving of information among team members 
2.48 
.624 
.880 
10. 
 
Mutual trust  
Shared belief that team members will perform their roles and protect the 
interests of their team-mates 
2.62 
.524 
.881 
11. 
 
Coordination  
Team members executing their activities in a timely and integrated manner 
2.75 
.474 
.880 
12. 
 
Communication  
Exchange of information between two or more team members in the prescribed 
manner and using appropriate terminology 
2.65 
.606 
.882 
13. 
 
Team 
members 
are 
appreciated 
for 
working long hours 
Team incentive for working overtime to finish a job 
1.72 
.761 
.884 
14. 
 
Team reward  
Overtime reward for working extra time (then or later) 
1.93 
.733 
.882 
15. 
 
Adequate 
technical 
training for team 
Offering appropriate training for new technologies 
2.57 
.563 
.880 
16. 
 
Adequate team skills 
training for team  
Communication, organization, interpersonal, etc. 
1.78 
.415 
.885 
17. 
 
Turnover 
Staff leave or entry in the project team 
1.93 
.733 
.884 
18. 
 
Key personnel Stayed 
throughout the project 
Impact of personnel turnover on team 
2.37 
.610 
.882 
19. 
 
Reuse  
Software products, processes, artifacts, including components, frameworks, and 
software product line 
2.38 
.585 
.879 
20. 
 
Goals  
Establishment is critical for the success of the team 
2.37 
.637 
.879 
21. 
Intra  
group 
wage 
inequality  
Fair wage 
1.90 
.775 
.883 
22. 
 
Dealing 
Cultural 
differences 
Cultural differences among offshore organization 
2.15 
.659 
.882 
23. 
 
Self-management  
Most work-related decisions are made by the members of team rather than 
manager 
2.13 
.430 
.887 
24. 
Task  
variety 
and 
Innovation  
Team get chance to learn the different tasks the team perform to meet the 
workload needs of the team 
2.40 
.694 
.877 
25. 
 
External Dependencies  
Waiting for customer acceptance/for a component; interacting with external 
customers; publishing version of system/of data model across different 
environments 
1.90 
.511 
.884 
26. 
 
Tool Usage  
Use of CASE tools 
2.13 
.623 
.880 
27. 
 
Programming 
Language 
Programmer’s experience and skills 
2.13 
.747 
.883 
28. 
 
Schedule Pressure 
The impact of intangible project pressure 
1.95 
.429 
.884 
29. 
 
Pair Programming 
Two programmers working collaboratively to develop software 
1.80 
.514 
.883 
30. 
 
Resource constraints  
e.g. timing, reliability, storage, team size, and project duration 
2.37 
.637 
.878 
31. 
 
Team Management  
Quality of management, conflict management, task assignment, administrative 
and formal coordination 
2.55 
.565 
.880 
32. 
 
Motivation  
To work on the project and in the company 
2.57 
.593 
.880 
33. 
 
External project factors  
Customer involvement, Customer expectation, Customer satisfaction 
2.30 
.696 
.879 
34. 
 
Culture 
Agile requires a true cultural change from plan-based approach, not only a 
simple change in the processes used 
2.10 
.796 
.879 
35. 
 
Working environment  
Suitability of the workplace to do creative work, collocation, e.g., windows, 
natural light, size of room and desk, meals provided 
2.33 
.629 
.878 
 
 
175
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Majority 
of 
the 
respondents’ 
(42%) 
software 
organization’s size is small, between 30-50 people (see 
Figure 5). However, 30% of organizations employ 100-150, 
and 12% employ more than 150 people. 
 
 
Figure 5.  
Size  (people) of the software companies 
As can be seen from Figure 6, Scrum is extensively used 
by the software companies. 97% indicated Scrum and 3% 
chose Kanban and XP. Scrum is the most popular Agile 
methodology also in [16][18].  
 
 
Figure 6.       Most followed agile development method  
According to the respondents (50%), the frequently used 
programming language in their organization is C# and then 
JavaScript followed by Java (see Figure 7).  
 
 
Figure 7.  Programming languages use in software companies 
 Regarding the agile practices in use by the participating 
software companies, the results are well aligned with the 
results of similar survey [16]. Figure 8 presents the most 
adapted practices are daily standup meeting, release 
planning, stories and retrospective.   
 
 
Figure 8.  Agile practice adopted in software companies 
 Figure 9 shows that lack of management support (e.g., 
resource constraint, team design choice and motivation) is 
the main reason for failure in agile projects. In addition to 
this, respondents have mentioned another three more 
reasons in this extension of the previous study [1][40]. 
Integration failure, frequent change request and substantial 
funding crisis are mentioned by the survey respondents. 
 
 
Figure 9.  Main  reason for failure in agile project 
Lack of experience with Agile methods and the 
company culture are indicated as project failure reasons in 
similar surveys [16]. The most recent survey on Agile 
176
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

acceptance and success or failure project results indicate 
lack of experience with Agile methods and the company 
culture are main project failure reasons [16]. 
 In most of the interviews, the team members could not 
define productivity as their performance measurement. A 
large number of them mentioned that team management has 
their own ways of measuring productivity. Although at the 
end of the project, the management assessed their 
productivity on the basis of timeliness and quality. At the 
same time, ten interviewees and survey respondents (Figure 
10) also mentioned customer satisfaction as a criterion for 
measuring or perceiving productivity. Customer satisfaction 
is very important to software development companies in 
Bangladesh as a rising market for outsourced software 
destination. This study result also confirms latest worldwide 
survey studies that have shown customer/user satisfaction is 
the number one measure of an agile project’s success [16].   
 
 
Figure 10.  
Criterion for measuring or perceiving productivity 
 According the product owner interview, dealing with 
cultural differences among offshore organization influences 
teamwork productivity. Two main reasons behind this are 
time and culture differences. 
 
Figure 11.  Organizational structure 
Sometime it becomes difficult to keep contact with the 
offshore client on urgent issues due to time difference 
between places. Moreover, offshore client’s expectations are 
different, both in terms of their general culture and their 
views on life and work. Project developed within western 
cultures are different from eastern cultures. For example, 
daily traffic condition consumes most of the working time 
in Bangladesh, which makes the developers less motivated. 
Since staff are not rewarded enough for working long hours. 
However, schedule pressure can be easily dealt with 
overtime working because it is inexpensive in Bangladesh. 
Five 
interviewees 
(project 
leads 
and 
managers) 
mentioned that culture is a big barrier for working in an 
agile team. Even though it is not one of the most influential 
factors mentioned by survey respondents. The survey result 
shows 
(Figure 
11) 
that 
the 
participating 
software 
companies’ organizational structure and coordination are 
primarily horizontal (68%), where coordination processes 
are usually provided by an individual team member who 
communicates directly with other members or users on a 
one-to-one basis [18][41]. On the other hand, vertical 
coordination (32%) is usually implemented through project 
managers. The horizontal structure of agile involves self-
organizing teams that work in an iterative fashion and 
deliver continuous additional value directly to customers 
[41]. Although the practice of self-organized teams 
conflicted with the cultural responses of social hierarchy. 
According to Balasubramaniam et al., Social hierarchy 
recommends a top-down approach to decision making, 
which is different from a participatory approach and hinders 
teamwork [41]. In Eastern culture, workplace hierarchies are 
common practice of being superior to others in authority, 
power, or status that are commonly accepted by 
subordinates. Team members look for clear instructions and 
accept their supremacy, also their own dependency on the 
superiors.  
Based on results found in the interview and survey of 
this study, it is perceived that social hierarchy is embedded 
in Bangladeshi software organizations and affects the 
implementation of agile principle. In agile development, 
communication links together all other teamwork processes. 
Therefore, regular and informal meeting should take place 
among team members. The survey result shows that 
project/team 
management 
has 
more 
influence 
on 
productivity than the self-management. Beside that most 
popular agile practice among the participating companies is 
Scrum and there is no such role of project manager. In the 
agile approach, team should be self-managed and work is 
coordinated by the team members [23]. 
From this scenario, it is evident that, even though most 
followed organizational structure is horizontal, social 
hierarchy culture significantly influences agile teamwork 
productivity. It is because the way team members 
communicate with team and customers, and more often to 
respect official hierarchy/top management (cultural norm in 
Bangladesh), communication occurred between members at 
the same levels of the organizational hierarchy [41]. 
 In addition, sometimes language barrier hinders 
communication. Cultural transitioning from individual work 
to self-management team requires a reorientation not only 
by developers but also by management. This changeover of 
organizational culture and institutional process take time 
and resources. These begin from changes of individual 
perception and for this reason, project managers prefer 
fresher as a team member. Their software companies like to 
groom up with several activities such as training, 
community, and conference than changing traditional mind 
set up of the team members. 
177
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Stable teams are associated with higher productivity, so 
avoiding changing team members to keep key personal 
throughout the project has great influence on productivity 
(Table I and Figure 12). Sustainable pace is an essential part 
of agile development, and only by working regular hours at 
a reasonable level a team can produce good flow of work 
[6]. Productivity grows over time through the development 
of the teamwork practices by team learning process and not 
by doing overwork or compromising the quality to increase 
team’s productivity [18]. Moreover, teams are not rewarded 
enough for working long hours (Table I). This study 
findings also indicate that schedule pressure has less impact 
on productivity and; timeliness and work quality are the 
most mentioned criterion for measuring or perceiving 
productivity (Figure 12).  
 
 
Figure 12.  Agile team perception of productivity influence factors 
Figure 12 provides highlights of the most influencing 
productivity factors that are perceived by the agile team 
members. This study results show that agile teamwork is 
highly dependent on team effectiveness. Offshore clients’ 
satisfaction (external factors dependency) is very important 
for the organization.  Team leadership and team orientation 
are very important for teamwork motivation. The factors 
impacting on agile teamwork productivity mentioned by the 
team members suggested that feedback, team orientation, 
communication, coordination and mutual trust improve team 
effectiveness. Eventually, this will enable team to learn how 
to effectively manage relationship within team in order to 
become more productive.  
In sum, the study results show that some traditional 
productivity factors (from Table I) are still influential 
factors 
to 
agile 
software 
development 
teamwork 
productivity, even with the adoption of the agile practices. A 
transition to self-managing agile team is one of the biggest 
challenges 
when 
introducing 
agile 
development 
in 
Bangladeshi culture. Agile implementation needs the 
mindset change of all the team members; investment in 
training and learning oriented activities will make the Agile 
team members more productive. 
V. 
QUALITATIVE MODELLING OF AGILE SOFTWARE   
         DEVELOPMENT TEAMWORK PRODUCTIVITY  
Software development productivity is a function of 
complex set of “hard” and “soft” factors [2]. Most of the 
data required to understand the development and dynamics 
needed to determine the factors that influence agile 
teamwork productivity mainly are concerned with soft 
factors [4][13]. The SD approach is capable of incorporating 
the soft factors, which can have an important influence on 
the agile teamwork. Soft factors such as productivity, 
motivation, 
team 
management 
efficiency, 
customer 
satisfaction, skillfulness and team effectiveness may be 
included and represented visually as a CLD. In the 
following section, the complex inter-related structure of 
different influence factors is modelled using qualitative SD 
approach (CLD). Vensim [42], free SD modelling software 
package is used for this research work. 
A. Causal Loop Diagram (CLD) 
Each factor that affects agile teamwork productivity is 
itself affected by other factors [18]. Some factors may be the 
reaction of the same action [31].  In system dynamics, this 
reaction is called feedback. There are two types of feedback 
– reinforcing feedback and balancing feedback. Sometimes 
a feedback (or a reaction) does not occur immediately – the 
process contains delays. Dynamic system can be drawn as a 
model with circles of causality – including actions, 
feedbacks and delays [2]. 
Technically, a CLD consists of words or phrases, which 
are linked by curved arrows, each of which has attached 
sign (positive or negative) and occasionally a time delay 
symbol [2]. The arrow represents a causal relationship 
between two factors. The sign is symbolized by ‘+’ 
indicating the two related variables change in the same 
direction, or ‘-’ showing the two linked variables change in 
178
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

two different directions; and the time delay is shown by ‘//’ 
crossing the arrow. 
Overall conceptual model (influence diagram) of agile 
teamwork productivity is presented in Figure 13, which is 
developed by identified factors in research Step 1 and then 
linking these factors to show their influences. For each of 
these links, the relationship is indicated as positive in the 
case of the same variation for both connected factors and 
negative for the opposite case. 
The SD is based on the ground that these underlying 
influences are crucial to project management and need 
special attention [22]. This resulting model is used to 
understand and explain factors and feedback relationships 
between the influencing factors over time. 
B. Analysis of causal links between agile teamwork 
productivity influence factors 
A CLD of an identified research problem is developed 
by already established ideas and research in addition to the 
researcher’s mental model [2]. This section summarizes 
some of the most influential productivity factors based on 
causal loop diagrams developed by [5][21] for software 
development productivity. The elaborated relationships are 
presented with the help of CLD for some essential factors 
from Table I, in order to get a basic understanding of the 
feedback concepts. To keep the readability of CLD, it has 
been divided into two sub models (Figure 14 and Figure 
15). 
Starting with actual teamwork productivity in Figure 14, 
which is positively influenced by potential teamwork 
productivity and a number of complex factors as identified 
from the study. The proposed agile teamwork productivity 
model is based on the following state: 
Actual productivity = potential productivity – losses due 
to faulty processes [21]. Where losses due to faulty process 
mainly refer to communication overhead and motivational 
losses. Potential productivity represents the best possible 
use of resources and the maximum level of productivity the 
team can produce. 
As seen in Figure 14, team morale positively influences 
work quality, as highly motivated team generate fewer 
errors and less rework. Expecting higher quality and high 
team morale, in turn increase the customer satisfaction [34]. 
The result of increased customer satisfaction is a decrease in 
external factor’s influence on teamwork productivity and 
thus have an indirect (positive) effect on motivation. 
Customer satisfaction is one of the indicators of productivity 
[6] and less external factors along with team morale and 
motivation positively influence the overall teamwork 
productivity. Working environment, reward and salary 
directly 
influence 
motivation. 
Goals 
set 
by 
team 
management is a future condition to motivate them to work 
towards its accomplishment and morale development in the 
team [43]. High level of team morale to the project will 
increase the development motivation. The impact factors to 
the level of motivation include the relationships of the team, 
team management, individual salary, working environment, 
reward etc. 
Figure 15 compiles the cause-effect relationships 
connecting 
team 
effectiveness, 
team 
management, 
motivation, learning factors with teamwork productivity.  
Agile software development emphasizes teamwork in 
self-organizing teams more than traditional development 
methods do. It is useful to learn how team works effectively 
in order to better understand the factors, together, influence 
the productivity of agile teamwork. This study considers an 
adapted form of Salas Big Five teamwork theory [26] and 
the Dickinson and McIntyre model of team effectiveness 
[23] for the betterment of agile teamwork. These two 
models focus on team effectiveness, and mainly on internal 
components of teamwork. At the same time, both of the 
models consider the teamwork activity as a learning loop in 
which teams are identified as self-managed, adaptable and 
dynamically changing over time [23]. These self-managed 
agile teams are usually responsible for managing, 
monitoring and executing their own tasks. It also requires a 
double-loop learning, which is a characteristic of self-
managing agile teams to change underlying values and 
assumptions [26]. The findings from the survey include the 
productivity influence factors that also comply well with 
Salas [26] and Dickinson and McIntyre’s [23] teamwork 
components.   
Figure 15 shows how the team effectiveness is built 
within a team and how it affects the engagement of the team 
in learning-oriented activities (learning factors). 
Mutual trust concept is based on shared belief that the 
team members feel accepted and respected for their 
feedback. Without sufficient trust, team members will spend 
time and energy protecting, checking, and inspecting each 
other as opposed to mutual performance monitoring [44]. It 
is evident that trust is a prerequisite for shared leadership, 
feedback, and communication. Team members may not be 
willing to participate or share information if they fear being 
perceived for incompetent performance. The degree of the 
mutual trust, adaptability, team orientation, coordination and 
communication can be impacted by the experience of 
working together. More the team members understand each 
other, higher the ability of the team to identify problem in a 
short time frame and hence increase teams’ potential 
productivity [5]. 
The team inspiration to engage with the learning factors 
is positively related to the team effectiveness in regard to 
team orientation and mutual performance monitoring and 
feedback present in an agile team. This perception is 
represented in the CLD (Figure 15) by the factor motivation, 
which offers support to team members to overcome the fear 
that arises when they face difficult situations. Therefore, the 
higher the level of motivation, the more secure team 
members feel, and the more willing they become to involve 
in learning-oriented activities. As the project proceeds, the 
team members increasingly engage in learning activities, 
they interact and coordinate more, hence the potential team 
productivity increases.  
Dickinson and McIntyre model suggests that team 
leadership and team orientation promote team members’ 
capability to monitor their team members’ performance 
179
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[23]. Consequently, it enhances team effectiveness, which 
leads to improved team productivity. 
The team effectiveness, including team management 
efficiency, are both influenced by skillfulness and might be 
enhanced by training. Training strengthen the teams’ 
process knowledge, which in turn improves team members’ 
skills and capabilities. Teams’ expertise is further 
influenced by individual learning, which is characterized by 
individual work experiences [45]. Individual learning 
positively influences organizational learning, which can be 
further created through shared experiences [45]. 
The team motivation is also affected by the behavior of 
the team management. According to Melo, agile team 
management is the most important factor in achieving agile 
team productivity [5]. A supportive team management tends 
to provide constructive feedback and encourage team to 
involve on task variation. However, a team management, 
which follows social hierarchy, promote a top-down 
approach to decision making, as opposed to a participatory 
approach, significantly influenced the way team members 
communicated with each other. Under this kind of team 
management, agile team members will avoid any unwanted 
situation where they can face problem and restrain from 
learning-oriented activities. As a result, team productivity 
decrease, the team management efficiency decrease, 
indicating a perceived need for team/technical training, as 
represented in Figure 15. 
Another factor that influences skillfulness is pair 
programming, which is one of the key practices influencing 
team productivity [16][18]. However, this factor is not 
encouraged 
in 
Bangladeshi 
software 
companies. 
Management does not want to engage two resources for 
single work due to increase in expenses. It is mostly 
practiced by the developers when they need assistance to 
complete a difficult work. 
Getting the right person with suitable skills and 
knowledge for an agile team is a difficult job for the 
software companies in Bangladesh. Staffing (right person 
selected) happened to be as one of the most important 
factors impacting teamwork productivity, as Table I and 
Figure 12 show. Consequently, team design choice becomes 
a significant influencing factor for agile teamwork 
productivity (Figure 13). It affects the amount of knowledge 
that team members must apply to improve the team task 
(Figure 15). 
VI. 
CAUSAL LOOP DIAGRAM VALIDATION 
“All models are simplified representations of reality. 
Therefore, they are wrong by definition, yet they may be   
useful for particular purposes.” [2]. This qualitative model’s 
purpose is to provide a better understanding of the factors 
and mediators that influence agile teamwork productivity. 
At this stage, its validity is assessed based on how clearly it 
can explain insight dynamics of the system. Exact precision 
of SD forecasting models is not expected. For this reason 
and to recognize the rightness of the diagrams, the following 
criteria have been used to study the fitness of the causal 
diagrams to fulfil the objectives of the study (adapted from 
Coyle [46], p46): 
• 
Have the purpose and the target audience for the 
diagram carefully chosen? 
The target shown in all diagrams is the influence of 
the productivity factors. The diagrams show the 
linkage between the factors up to the stage where it 
influences the team productivity. 
• 
Are the factors, which it includes consistent with the 
purpose? 
 
All the factors included in the CLD affect the 
productivity of the agile teamwork, which is the 
purpose of the study (Table I). 
• 
The objective of system dynamics is policy analysis 
against a range of circumstances, so are the policies 
clearly 
shown 
in 
the 
diagram? 
The objective of the causal diagrams shown in this 
study is to show how the factors influence the 
productivity as a first step toward developing a 
complete quantitative model, which will quantify 
these relationships in future work. 
To clarify the causal relationship between the factors and 
teamwork productivity and as a step towards building the 
qualitative model, most influential factors have been 
concluded with two sub-causal analysis diagrams. That 
explains the relationship between the factors and the 
mediator(s), which have direct influence on the agile 
teamwork productivity using prior theoretical knowledge 
extracted from the literature, interviews and survey. 
VII. 
LIMITATIONS OF THE STUDY 
There are a number of limitations to this study. First, this 
study was limited to 60 respondents and 12 interviewees 
from 18 software companies. It was challenging to get 
access to more software companies due to time constraint 
and its access to appropriate resources was limited. 
Respondents were carefully chosen from different roles 
within the agile team in order to get different perspectives of 
productivity in the context of Bangladesh software Industry.  
Another limitation of this study is the agile team 
members’ perceptions used as a response. However, with 
survey, this study relies on what the respondents provided to 
the researcher. It is possible that the respondents’ perception 
may change and be different after the end of the project. To 
minimise the impact of this effect, the survey and 
interviewees’ responses were compared for factors selection 
to include in the model. The questionnaire used for this 
study had been used successfully in other research and was 
developed after a detailed literature review [15][18]. Some 
of the questions were included in the survey after getting 
knowledge about the working conditions of software 
companies in Bangladesh from the interview sessions.                                
This CLD models certainly contains inherent limitations 
and is not complete because it only focuses on a limited 
number of important soft factors and it does not present 
explicitly the reinforcing/ balancing loop and delay.  
The scope of this empirical findings considers the 
Bangladeshi software companies as a case study, which can 
180
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Team Productivity
Motivation
+
Team
Management
Reward
Culture
Team size
Coordination
Communication
Mutual trust
Leadership
Goal
Feedback
External Factor
WorkingEnvironment
Resource
constraint
Team
Effectiveness
Adaptibility
Task Variation
Turnover
+
++
+
+
+
-
Market salary
rates
Fair wage
-
unable to adjust to
the team
-
Team design
choice
Team diversity
Team collocation
Full time
allocation
+
++
+
Team Morale
Change in scope
Skillfulness
Training
Learning factor
Programming
language
Tools usage
External
dependency
-
Mutual performance
monitoring
Project
Complexitiy
Self management
Rework
Customer
satisfaction
Task Backlog
Undisovered
rework
Work completed
-
Desired workforce
Hiring rate
Discrepancy
Training rate
Experienced
workforce
Work quality
+
Actual work force
+
+
-
+
+
+
Team Orientation
Back-up behavior
+
+
+
+
+
+
+
+
+
+
++
+
+
+
+
+
+
+
Pair programming
+
Reuse
+
Overwork
Exhaustion
+
-
-
Time available
Error geneation
rate
+
+
+
-
-
+
error detection and
correction rate
+
+
+
-
+
+
Change in
Technology
Market condition
+
+
CONCEPTUAL MODEL OF AGILE TEAMWORK PRODUCTIVITY
Schedule pressure
Estimated time to
complete
+
+
+
+
Organization
growth
+
New project
+
+
+
+
-
+
-
-
-
<Turnover>
-
+
+
+
Figure 13.  Overall   conceptual  model of Agile   teamwork  productivity 
 
in turn make the research results beneficial to these 
companies. All the data used in this study is collected from 
the software companies who have voluntarily participated in 
this research. Therefore, findings from this study should be 
generalized with caution. While the findings may be specific 
to the contexts studied, analytic generalization could 
facilitate the application to other types of culture, 
background and environment. 
VIII. CONCLUSION AND FUTURE WORK 
The productivity of the development team is important 
for successful software project. The agile team, which is the 
most dynamic element and the human input in the software 
development industry, gain more interest to study their 
productivity. This research aimed to present a system 
dynamics based approach to model agile teamwork 
productivity. In order to achieve this, the main factors that 
affect teamwork productivity were determined via two-
phased approach, where in the first phase a systematic 
literature review, interview and survey of different agile 
teams were conducted to collect and select impacting 
factors, and they were evaluated and ranked to identify the 
most influential ones. The second phase involved the 
development of qualitative SD model (causal loop diagram) 
of agile teamwork highlighting the different influencing 
factors. The findings of this stage are the main influencing 
factors, which are motivation (external factors, customer 
satisfaction), 
team 
effectiveness 
(communication, 
coordination, 
mutual 
trust, 
leadership) 
and 
team 
management (staffing, Key personnel Stayed throughout the 
181
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

project, team design choice). Moreover, this study used two 
team effectiveness models- Salas [23] and the Dickenson 
McIntyre [12] model for better understanding and analyzing 
inter aspects of agile team. The most cited and influential 
factors were: Coordination, Communication, mutual trust 
and staffing (right person selected for the team). These 
factors 
were 
the 
most 
important 
for 
effective 
teamwork and team management in the agile teamwork 
productivity. 
According to study results, lack of management support 
is found to be the most mentioned reason for any failed agile 
project. The most followed organizational structure is 
horizontal and most followed agile method is Scrum. In 
addition, this study finds that due to social hierarchy culture 
influences, self-manage agile team may not fully fit in their 
organization. This factor also hinders agile transformation 
from plan driven to self-managed agile team. 
As a future work, survey (statistical) data will be used to 
estimate influencing factors (hard and soft) to quantify the 
effects of the factors on productivity. The outputs will be 
applied in quantitative modelling of team productivity via 
SD approach and assess the ability of the model to duplicate 
historical data when measurable data are available. 
The proposed CLD model will be used as a basis for 
developing stock and flow model of SD method. Further 
research need to be conducted for qualitative in-depth 
studies of the causes behind the results in regard to certain 
factors and the model against a real-world agile software 
development project. The proposed SD model of agile 
teamwork 
productivity 
will 
provide 
more 
strategic 
observance and competence about the effectiveness of 
different managerial policies based on non-straight forward 
cause-effect 
relationships 
hidden 
in 
the 
system.
 
 
 
 
 
 
 
 
 
Figure 14.  Causal loop diagram ‘the influence of  motivation on productivity’ sub-model 
 
Potential teamwork
productivity
Actual teamwork
Productivity
Effect of
Experience
Learning Factor
Effect of
Communication &
Coordination
Motivation
+
+
+
+
+
Working
enviornenment
Reward
Goal
Wage
Inequality
Turnover
Market
salary
Team
Management
External Factor
+
-
+
-
+
+
+
+
Unable to
adjust to the
team
Team morale
Schedule
pressure
overwork
Exhaustion
Customer
satisfaction
Work quality
+
-
-
+
+
-
-
-
+
+
182
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Actual Team
Productivity
Motivation
Team
Management
Team size
Coordination
Communicatio
n
Mutual trust
Leadership
Feedback
Resource
constraint
Team
Effectiveness
Adaptibility
Task Variation
Team design
choice
Team diversity
Team collocation
Key Personnel
stay full time
+
++
+
Skillfulness
Training
Programming
language
Tools usage
Mutual performance
monitoring
Project
Complexitiy
Self management
Team Orientation
Back-up behavior
+
+
+
+
+
+
+
+
+
+
+
+
++
+
+
+
+
Pair programming
+
Reuse
+
Potential Team
Productivity
Learning Factors
+
+
+
+
+
-
+
-
 
 
 
Figure 15.  Causal loop diagram ‘the influence of  team effectiveness and team management, on productivity’ sub-model 
 
ACKNOWLEDGMENT 
 
We would like to thank the companies and their 
employees who contributed to this research. This research is 
supported 
by 
ICT 
Division, 
Ministry 
of 
Posts, 
Telecommunications 
and 
Information 
Technology, 
Bangladesh. 56.00.0000.028.33.079.17-223, 20.06.2017. 
 
 
REFERENCES 
 
[1] I. Fatema and K. Sakib, “Analyse Agile Software 
Development Teamwork Productivity using Qualitative 
System Dynamics Approach,” The Twelfth International 
Conference on Software Engineering Advances (ICSEA 
2017), Oct. 2017, pp. 60-66, ISBN:  978-1-61208-590-6 
[2] J. D. Sterman, “Business Dynamics: System Thinking and 
Modeling for a Complex World,” Boston: The McGraw- Hill, 
2000. 
[3] A. Trendowicz and J. Münch, “Factors Influencing Software 
Development Productivity—State‐of‐the‐Art and Industrial 
Experiences,” Advances in computers, vol. 77, pp. 185-241, 
Dec. 2009. 
 
 
[4] G. P. Sudhakar, A. Farooq, and S. Patnaik, “Soft factors 
affecting the performance of software development teams,” 
Team 
Performance 
Management: 
An 
International 
Journal, vol. 17, no.3, pp. 187-205, 2011. 
[5] X. Kong, L. Liu, and D. Lowe, “Modeling an agile web 
maintenance process using system dynamics,” In 11th  
ANZSYS/Managing the Complex V conference, ISCE 
Publishing, Christchurch, NZ. Dec. 2005. 
[6] C. D. O. Melo, D. S. Cruzes, F. Kon, and R. Conradi, 
“Interpretative case studies on agile team productivity and 
management,” Information and Software Technology, vol. 55, 
pp.412-427, Feb.2013. 
[7] K. Petersen, “Measuring and predicting software productivity: 
A systematic map and review,” Information and Software 
Technology, vol. 53, pp.317-343, Apr.2011. 
[8] Y. Ramírez and D. Nembhard, “Measuring knowledge worker 
productivity: A taxonomy,” Journal of Intellectual Capital, 
vol. 5, no. 4, Dec. 2004, pp. 602–628. 
[9] How to estimate the required team size of agile teams? 
ISBSG. 
[Online]. 
Available 
from 
http://isbsg.org/wp-
content/uploads/2017/08/Estimate-Agile-team-size-v1.0.pdf 
[retrieved: May, 2018]. 
[10] Productivity measurement in Agile teams – why is it so 
difficult? [Online]. Available from http://isbsg.org/isbsg-
agile/ [retrieved: May, 2018]. 
[11] T. DeMarco and T. Lister. Peopleware. Productive Projects 
and Teams. Dorset House Publishing, 1987. 
183
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[12] T. Dingsøyr and T. Dybå, “Team effectiveness in software 
development: Human and cooperative aspects in team 
effectiveness models and priorities for future studies,” 
Proceedings of the 5th International Workshop on Co-
operative and Human Aspects of Software Engineering. IEEE 
Press, 2012, pp. 27-29.  
[13] V. Lalsing, S. Kishnah and S. Pudaruth, “People factors in 
agile 
software 
development 
and 
project 
management,” International Journal of Software Engineering 
and Applications, vol. 3, no. 1, pp. 117, 2012. 
[14] S. C. Misra, V. Kumar, and U. Kumar,“ Identifying some 
important success factors in adopting agile software 
development practices,”Journal of Systems and Software, vol. 
82, no. 11, pp. 1869-1890, 2009. 
[15] J. M. Verner, M. A. Babar, N. Cerpa, T. Hall, and S. 
Beecham, “Factors that motivate software engineering teams: 
A four country empirical study,”. Journal of Systems and 
Software, vol. 92, June. 2014,  pp. 115-127. 
[16] VersionOne: 12th annual state of Agile survey (2017). 
[Online]. 
Available 
from: 
https://explore.versionone.com/state-of-agile/versionone-
12th-annual-state-of-agile-report. [retrieved: May, 2018] 
[17] T. Dybå and T. Dingsøyr, “Empirical studies of agile software 
development: A systematic review”, Information and software 
technology, vol. 50, no. (9-10), pp. 833-859, 2008. 
[18] C.O. Melo, “Productivity of agile teams: an empirical 
evaluation of factors and monitoring processes,” Ph.D. 
dissertation, Universidade de São Paulo, 2015. 
[19] T.K. Abdel‐Hamid and S. Madnick, “Software productivity: 
potential, actual, and perceived,”. System Dynamics Review, 
5(2), pp. 93-113, June. 1989. 
[20] J. M. Lyneis and D. N. Ford, “System dynamics applied to 
project management: a survey, assessment, and directions for 
future research,” System Dynamics Review, vol. 23, no. 2‐3, 
pp. 157-189, Jun. 2007. 
[21] Abdel-Hamid, T. (1991) “Software Project Dynamics, an 
Integrated Approach”, Englewood Cliffs, NJ. Prentice-Hall, 
Inc., 1991. 
[22] A. Rodrigues and J. Bowers, “The role of system dynamics in 
project management,” International Journal of Project 
Management, vol. 14, no. 4, Aug. 1996, pp. 213-220. 
[23] N. B. Moe, T. Dingsøyr, and T. Dybå, “A teamwork model 
for understanding an agile team: A case study of a Scrum 
project,” Information and Software Technology, vol. 52, pp. 
480-491, May. 2010. 
[24] L. Cao, B. Ramesh, and T. Abdel-Hamid, “Modeling 
dynamics in agile software development,” ACM Transactions 
on Management Information Systems (TMIS), (1:1), p. 5, 
2010. 
[25] K.E. 
Van 
Oorschot, 
 
K. 
Sengupta, 
and 
L. 
van 
Wassenhove,“Dynamics of agile software development” 
In Proceedings of the 27th International Conference of the 
System Dynamics Society, Albuquerque, New, Mexico, USA. 
Dec. 2009. 
[26] T. Dingsøyr and Y. Lindsjørn, “Team performance in agile 
development teams: findings from 18 focus groups,” 
International Conference on Agile Software Development, 
Springer Berlin Heidelberg, June. 2013, pp. 46-60. 
[27] A. Teh, E. Baniassad, D. V. Rooy, and C. Boughton, “Social 
Psychology 
and 
Software Teams: Establishing Task-
Effective Group Norms,” IEEE Software, vol. 29, no.4, 
pp.53–58, Jul. 2012. 
[28] B. Tessem and F. Maurer, “Job Satisfaction and Motivation in 
a Large Agile Team,” In International Conference on Extreme 
Programming and Agile Processes in Software Engineering, 
Springer Heidelberg, vol. 4536, pp. 54–61., 2007. 
[29] N. B. Moe, A. Aurum, and T. Dybå, “Challenges of shared 
decision making: A multiple case study of agile software 
development,” Information and Software Technology, vol. 54, 
pp.853–865, Aug. 2012. 
[30] B. Barry, Software Engineering Economics, New York, vol. 
197, NY: Prentice-Hall, 1981. 
[31] F. Nasirzadeh and P. Nojedehi, “Dynamic modelling of 
labour productivity in construction projects,” International 
Journal of Project Management, vol. 31, no. 6, Aug. 2013, pp. 
903-911. 
[32] W. Scacchi, “Understanding and improving Software 
Productivity,” Advances in Software engineering and 
Knowledge engineering, 2005. 
[33] A. G. Rodrigues and  T. M. Williams, “System dynamics in 
project management: assessing the impacts of client 
behaviour on project performance,” Journal of the Operational 
Research Society, vol.49, no. 1, pp. 2-15, 1998. 
[34] L. L. R. Rodrigues, N. Dharmaraj, and B. R. Shrinivasa Rao, 
“System dynamics approach for change management in new 
product development,” Management Research News, vol. 29, 
no. 6, Aug. 2006, pp. 512-523. 
[35] M. J. Mawdesley and S. Al-Jibouri, “Modelling construction 
project productivity using systems dynamics approach,” 
International Journal of Productivity and Performance 
Management, vol. 59, no.1, Dec. 2009, pp. 18-36. 
[36] J.S. Lurey and M.S. Raisinghani, “ An empirical study of best 
practices in virtual teams,” Information and Management, vol. 
38, no. 8, pp. 523- 544, 2001. 
[37] I. Fatema, “Agile teamwork productivity influence factors,” 
Jan. 
2017. 
[Online] 
Available 
https://goo.gl/forms/I5xGdQGqFMk9he5f2. [retrieved: May, 
2018]. 
[38] A. S. Ami, A. Imran, A. U. Gias, and K. Sakib, “Effects of 
Internship on Fresh Graduates: A case study on IIT, DU 
students” doi: 10.13140/RG.2.2.13745.68967.     [Online]. 
Available 
from 
https://www.researchgate.net/publication/323393923_Effects
_of_Internship_on_Fresh_Graduates_A_case_study_on_IIT_
DU_students. [retrieved: May, 2018]. 
[39] V. Sridhar, D. Nath, R. Paul, and K. Kapur, “Analyzing 
factors that affect performance of global virtual teams,” 
In Second International Conference on Management of 
Globally Distributed Work, pp.159-169, July. 2009. 
[40] I. Fatema and K. Sakib, “Factors Influencing Productivity of 
Agile Software Development Teamwork: A Qualitative 
System Dynamics Approach,” In 24th  Asia-Pacific Software 
Engineering Conference (APSEC), IEEE, 2017, pp. 737-742, 
doi: 10.1109/APSEC.2017.95. 
[41] B Ramesh, L Cao, J Kim, and K Mohan, “Conflicts and 
complements between eastern cultures and agile methods: an 
empirical Investigation,” European Journal of Information 
Systems, vol. 2, pp. 26, May. 2017, doi:10.1057/s41303-016-
00230. 
[42] Ventana 
Systems 
Inc, 
 
[Online]. 
Avilable 
from 
http://vensim.com/ [retrieved: May, 2018]. 
[43] H. Tohidi,“Teamwork productivity and effectiveness in an 
organization base on rewards, leadership, training, goals, 
wage, size, motivation, measurement and information 
technology,” Procedia Computer Science, Vol. 3, pp. 1137-
1146. 2011. 
[44] N. B. Moe and T. Dingsøyr, “Scrum and team effectiveness: 
Theory and practice,” International Conference on Agile 
Processes 
and 
Extreme 
Programming 
in 
Software 
Engineering, Springer Berlin Heidelberg, Jun. 2008, pp. 11-
20. 
184
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[45] E. Lizeo, “A dynamic model of group learning and 
effectiveness,” In System Dynamics Society Conference. 
July. 2005. 
[46] R. G. Coyle, “System dynamics modelling: a practical 
approach,”  Chapman and Hall: London. vol. 1, 1996 
 
185
International Journal on Advances in Software, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

