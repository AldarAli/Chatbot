Security Capacity of the Fuzzy Fingerprint Vault
Johannes Merkle, Matthias Niesing, Michael Schwaiger
secunet Security Networks AG
D-45128 Essen, Germany
johannes.merkle@secunet.com,
matthias.niesing@secunet.com
michael.schwaiger@secunet.com
Heinrich Ihmor, Ulrike Korte
Bundesamt f¨ur Sicherheit in der Informationstechnik
D-53175 Bonn, Germany
heinrich.ihmor@bsi.bund.de
ulrike.korte@bsi.bund.de
Abstract—We investigate the security of a privacy
enhancing technique for ﬁngerprint authentication
known as fuzzy ﬁngerprint vault. This technique is
based on the fuzzy vault of Jules and Sudan, a scheme
that allows error tolerant authentication, while pre-
serving the privacy of the reference data. We explore
if and under what circumstances a secure fuzzy ﬁn-
gerprint vault can be implemented. We derive both
upper and lower security bounds for any attacks that
attempt to recover the template from the stored
reference data, and, at the same time, signiﬁcantly
improve the best known attack. Furthermore, we
show how to select optimal parameters and evaluate
both minimum minutiae match rates and minimum
number of minutiae needed to obtain an appropri-
ate security level. Our results quantify the security
capacity of the fuzzy ﬁngerprint vault and provide
important tools for selection of suitable parameters.
Keywords-biometric template protection; ﬁnger-
print; fuzzy vault; polynomial reconstruction
I. Introduction
Without any doubt, ﬁngerprints are the biometric
traits most widely deployed for authentication. How-
ever, the storage of biometric reference data introduces
considerable risks for biometric authentication systems
and raises serious concerns regarding privacy and data
protection. One of the most prominent solutions to solve
this issue is the fuzzy ﬁngerprint vault, which allows
error tolerant ﬁngerprint authentication while preserving
the privacy of the biometric features [1]. It belongs to
the class of biometric template protection techniques [2],
and is based on the fuzzy vault scheme [3] of Juels
and Sudan, which applies Reed-Solomon decoding to
redundantly bind the biometric template to a randomly
selected secret polynomial.
Fingerprint authentication is typically based on minu-
tiae, which are speciﬁc features of the ﬁngerprint pat-
tern. The variety and extent of errors in minutiae mea-
surements, particularly, frequent insertions, omissions
and re-ordering of the measured minutiae, pose a consid-
erable challenge to template protection schemes [4]. The
fuzzy vault is able to tolerate such errors and, hence,
is particularly interesting for minutiae-based authenti-
cation.
Several publications [5][6][7][8][9][10] report successful
implementation of the fuzzy vault scheme based on
minutiae. However, the subsequent publication of eﬃ-
cient attacks [11][12] demonstrates that the parameters
proposed do not provide adequate security.
For the fuzzy vault, theoretical results are known,
from which rigid security estimates could be deduced.
In particular, Dodis, et al. [13] proved upper bounds for
the information leakage by the stored data, which de-
termines the maximum success probability of an attack
trying to guess the template or the key from the stored
reference data, see Section IV-B for details. In addition,
an attacker’s success probability depends on the original
entropy of the biometric feature vector - or, equivalently,
its redundancy. Therefore, a realistic estimation of the
entropy of the biometric feature vector is a key aspect
for a sound security analysis.
On the other hand, these provable lower security
bounds are not sharp. Firstly, these bounds only es-
timate the success probability of attacks and do not
consider the eﬀort required for each trial. Secondly, the
proof techniques used in [13] overestimate the infor-
mation leakage. Achieving provable security may be a
very appealing objective, but it is also interesting to
determine how secure the scheme is in practice.
In this publication, we explore if and under what
circumstances a fuzzy ﬁngerprint vault can be secure
with respect to both provable security and real attacks.
In particular, we generalize the bounds of [13] to the
case where the minutiae and chaﬀ points are chosen
with a minimum distance to reduce false matchings, and
also give an exact estimate for the entropy of a feature
vector consisting of minutiae location data. On the other
hand, we estimate the eﬀort required for practical attack
methods and present an improvement of the best known
attack. Then, we show, how the parameters can be
optimized and determine minimum minutiae match rates
with respect to both provable security and practical
security.
146
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

This article is structured as follows. In Section III,
we give a description of the scheme. In Section IV, we
conduct a theoretical analysis of its security and error
robustness both with respect to information theoretical
results and practical attacks. Section V presents methods
for parameter optimization with respect to the deduced
security bounds, and Section VI provides results using
empirical data. A conclusion is given in Section VII.
II. Background
The fuzzy ﬁngerprint vault is one of many template
protection techniques that have been proposed in the
literature, for instance, the Biometric Encryption scheme
by Soutar et. al. [14], Cancelable Biometrics by Ratha
et. al. [15], robust bit extraction schemes based on
quantization, e.g. of Linnartz and Tuyls [16], of Chang
et. al. [17], and of Chen et. al. [18], and applications of
the fuzzy commitment scheme of Juels and Wattenberg
[19] to biometric templates, e.g., the constructions of
Martini and Beinlich [20] for ﬁngerprints, of Kevenaar
et. al. [21] for face recognition, of Hao et. al. [22] for iris,
and of Korte et. al. [23] for DNA ﬁngerprints. The fuzzy
vault has also been applied to iris recognition, e.g., in
[24].
A. The general fuzzy vault scheme
The fuzzy vault has been proposed by Juels and Sudan
in [3] and [25]. It is an error tolerant authentication
scheme based on the set of private attributes m1, . . . , mt,
e.g., biometric feature data. While the reference data
stored (the vault) allows performing the authentication
check, it does not reveal these attributes. The scheme
deploys a variant of Reed-Solomon decoding and hides
the private user data among a large number of random
chaﬀ points.
During enrollment of a user, her (pairwise distinct)
private attributes are encoded as elements x1, . . . , xt of
a ﬁnite ﬁeld Fq. Then a random secret polynomial P(z)
over Fq with degree smaller than k is chosen. Each of the
encoded attributes xi is evaluated over the polynomial,
resulting in a list of pairs (xi, yi) ∈ F2
q with yi = P(xi).
In order to hide the private attributes, r − t chaﬀ points
xt+1, . . . , xr ∈ Fq are randomly selected so that xi ̸= xj
for all 1 ≤ i < j ≤ r. For each chaﬀ point xi, a random
yi ∈ Fq with yi ̸= P(xi) is chosen. The list of all pairs
(x1, y1), . . . , (xr, yr), sorted in a predetermined order to
conceal, which points are genuine and which are the chaﬀ
points, is stored as the vault.
The redundant encoding of the polynomial using the
genuine points and its hiding among the chaﬀ points is
illustrated in Figure 1.
For authentication and recovery of the secret poly-
nomial, another set of attributes (the query set) has
to be presented. This set is compared with the stored
Figure 1. Illustration of the redundant encoding of the polynomial
using the genuine points ((a) and (b)) and its hiding among the
chaﬀ points ((c) and (d)).
fuzzy vault (x1, y1), . . . , (xr, yr), and those pairs (xi, yi)
are selected, for which xi corresponds to an attribute
in the query set. The selected points are then used to
try to recover the secret polynomial using Reed-Solomon
decoding.
If the number of genuine points among the identiﬁed
correspondences (correct matches) is at least k, the secret
polynomial can be recovered, either by Reed-Solomon
decoding or by polynomial interpolation. However, if the
set of correspondences also comprises chaﬀ points (false
matches), the number of correct matches must be greater
than k, or the decoding must operate on subsets of the
matches resulting in many trials. Details are given in
Section III-B3.
B. Previous results
In [3], Juels and Sudan already provided an informa-
tion theoretical security analysis for the general fuzzy
vault scheme by giving estimates for the number of
candidate polynomials that would ﬁt with a given vault.
A comprehensive information theoretic treatment of the
fuzzy vault was given by Dodis et. al. [26][13], who
proved upper bounds for the loss of entropy (information
leakage) by the stored data for the fuzzy vault, the fuzzy
commitment, and other schemes. In [1], we applied these
general results to the fuzzy ﬁngerprint vault and deduced
lower bounds for the number of required minutiae and
minutiae match rates, i.e., the fraction of minutiae in
the vault matching with the minutiae of the query
ﬁngerprint, were deduced.
147
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Implementations of the fuzzy vault for ﬁngerprints
were reported in many publications, the most notably
of which are described below.
Clancy et. al. [5] were the ﬁrst to propose a fuzzy
ﬁngerprint vault. Their construction uses only the loca-
tion information of the minutiae, i.e., their orientations
are neglected, and uses several measurements of the
minutiae during enrollment to ﬁlter out spurious or
unreliable minutiae. A drawback of their implementation
is that it assumes that the ﬁngerprints are already pre-
aligned. The security against brute force attacks that try
to unlock the vault, i.e. to determine the minutiae from
the vault, was analyzed based on theoretical analysis
and empirical data, and reasonable parameters were
deduced. However, no actual authentication system was
implemented and, consequently, the False Acceptance
Rate (FAR) and Genuine Accept Rate (GAR) were not
determined.
Uludag et. al. [6] also used minutiae location data
only, and encoded a Cyclic Redundancy Check (CRC)
into the secret polynomial in order to allow veriﬁcation
of correctness. A drawback of their construction is that
it relied on human expert for the detection of minutiae
in the ﬁngerprint image and the identiﬁcation of the
minutiae correspondences between ﬁngerprints. Based
on experiments, eligible parameters were determined, the
FAR and GAR as well as the security against brute force
attacks were determined.
In [7], Uludag and Jain reﬁned the construction of [6]
by an automatic ﬁngerprint alignment algorithm using
the locations of highest curvature of the friction ridge
as additional helper data stored in addition to the vault.
In experiments, the authors determined FAR and GAR
values for a single set of parameters.
Nandakumar et. al. [8] extended the ideas of the pre-
vious constructions. Their implementation of the fuzzy
ﬁngerprint vault used both minutiae locations and ori-
entations. Spurious or unreliable minutiae were ﬁltered
by quality indices computed from local properties of
the ﬁngerprint image, and the ﬁngerprint alignment and
minutiae matching method based on points of highest
curvature of [7] was improved. Experiments were con-
ducted on two diﬀerent databases and with several sets
of parameters, FAR and GAR values were reported, and
the complexity of brute force attacks was estimated.
In Li et. al. [9], an alternative ﬁngerprint alignment
method for the fuzzy vault was proposed, based on the
topological structures around the core of the ﬁngerprint.
Their implementation used both minutiae locations and
orientations. Experiments were conducted, and FAR and
GAR values were reported and compared to those from
[8].
In [10], the authors of the present article present
an implementation of the fuzzy ﬁngerprint vault using
minutiae locations of several ﬁngers per person. Sev-
eral optimizations were applied, for instance, ﬁltering
of spurious or unreliable minutiae was performed both
during enrollment and during authentication by several
measurements and by quality values of the feature ex-
traction algorithm, respectively. Fingerprint alignment
was performed without additional helper data but by a
minutiae matcher algorithm that optimized the number
of minutiae correspondences between the ﬁngerprints by
means of relative rotation and translation. A comprehen-
sive treatment of parameter selection criteria was given
with respect to security against brute force attacks, and
eligible parameters deduced by combining empirical data
with analytical and heuristic arguments.
Other constructions [27][28] did not use the absolute
location of the minutiae at all, but features deduced from
the relative topological structures around the minutiae.
These features are stable with respect to orientations,
and in the case of [28], even of translations. The FAR
and GAR values reported in [28] are better than those
from [8] at the cost of a larger template size.
In [29], Nagar et. al. propose a combination of
the fuzzy ﬁngerprint vault and the fuzzy commitment
scheme. The fuzzy commitment scheme is used to indi-
vidually protect the ordinate values in the vault corre-
sponding to the minutiae, i.e. the corresponding function
value of the polynomial, using minutiae descriptors,
topological properties of the minutiae’s neighborhood.
Thus, an attacker has to determine both, the minutiae
descriptors and their locations. The FAR and GAR
values reported are much better than that of [8].
In [12], Mihailescu et. al. presented an improved brute
force attack and showed that the parameters suggested
by Clancy et. al. in [5], and by Uludag and Jain in [7]
do not provide the claimed security.
In [30], Scheirer and Boult proposed three new attack
methods beyond the scenario of reconstruction of the
biometric template from a single vault. The most seri-
ous one is a correlation attack, where an attacker can
retrieve the private data from combining two indepen-
dently generated vaults of the same user. This attack
was implemented and proved to be very eﬃcient for
relevant parameters by Kholmatov and Yanikoglu [31]. A
potential countermeasure against the correlation attack
was proposed by Nandakumar et. al. [32].
A complete diﬀerent type of attack was proposed by
Chang et. al. [11], which tried to distinguish genuine
minutiae in the vault from chaﬀ points by the number
of pixels in their proximity with suﬃcient distance to
other points in the vault. This attack seems particularly
promising of the number of chaﬀ points used is close
to the maximum possible so that the minimum distance
enforced between the points constitutes a dense sphere
packing, as discussed in Section IV-C2.
148
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

III. The fuzzy vault for fingerprints
In this section, we deﬁne the fuzzy ﬁngerprint vault
scheme, on which our security analysis is based. This
scheme basically matches the implementations presented
in [5], [6], [7], [9] and [10].
A. Adaptation to ﬁngerprints
In order to implement the fuzzy vault for ﬁngerprints,
several adaptations are necessary.
1) Selection of biometric feature: In the fuzzy ﬁn-
gerprint vault, minutiae information is used as private
attributes. Minutiae are bifurcations and endings of the
ridges in a ﬁngerprint and these features are commonly
used for ﬁngerprint authentication. The error correcting
capacity of the fuzzy vault scheme ﬁts well with typi-
cal measurement errors of minutiae data, in particular
with insertions, deletions, and permutations of minutiae.
Whereas the constructions of the fuzzy ﬁngerprint vault
in [5], [6], [7] and [10] use minutiae locations only, [8]
uses both location and orientation of the minutiae.
A somewhat surprising ﬁnding is that using minu-
tiae orientations in addition to their locations does
not add signiﬁcant beneﬁt for the privacy protection
of the fuzzy ﬁngerprint vault. According to [8] “Using
minutia orientation in addition to the location attribute
has two advantages. During vault encoding, it increases
the number of possible chaﬀ points that can be added
because we can now add a chaﬀ point whose location is
close to a genuine template minutia but with a diﬀerent
direction. During vault decoding, it makes it easier to
ﬁlter out the chaﬀ points from the vault because it is
less probable that a chaﬀ point will match with the
query minutia in both location and direction.” While
we generally agree with this statement, we stress two
points. First, the number of possible chaﬀ points, as
the number of potential locations for genuine minutiae,
is irrelevant for the protection of the biometric data,
as an attacker only needs to determine the genuine
minutiae in the vault and, thus, can neglect potential
chaﬀ points that are not stored therein. Second, the
strong dependencies of a minutia orientation with the
corresponding location and with the orientation of other
minutiae [33][34] can facilitate distinction of genuine
minutiae from chaﬀ points in the vault. For instance
in [8], an example of a vault is depicted, where many
points can be visually identiﬁed as probable chaﬀ points
due to their predominantly radial directions, and many
pairs of spatially close points most likely contain at least
one chaﬀ point as the orientations diﬀer too much to
be in accordance with a plausible orientation ﬁeld of a
ﬁngerprint.
For these reasons we restrict our consideration to the
fuzzy ﬁngerprint vault using minutiae location infor-
mation only. Nevertheless, we stress that the method
proposed in [29] to utilize additional data of minutiae,
e.g. their orientations, in the fuzzy vault by means of
the fuzzy commitment scheme, can signiﬁcantly increase
security. However, analysis of this approach is beyond
the scope of this paper.
2) Tolerance of minutiae mapping: In the original
fuzzy vault scheme, correspondence between points in
the query set and the fuzzy vault means equality. For
the application of the fuzzy vault to ﬁngerprints, the def-
inition of minutiae correspondence is typically widened
to proximity with respect to the Euclidean distance to
provide tolerance with respect to small deviations in
the measured minutiae locations, which are introduced
by elastic skin distortions and the limitation of optical
and algorithmic accuracy of the measurement. We will,
therefore, assume that a minutia in a query ﬁngerprint
matches with a minutia or chaﬀ point in the vault if
both locations have an Euclidean distance of at most δ
and if there is no other point in the vault closer to the
minutia. In the case that several ﬁngers are used per
person, matching minutiae or chaﬀ point must be from
the same ﬁnger.
3) Fingerprint alignment: The position of a ﬁnger-
print varies between diﬀerent measurements, inducing
relative translations and rotations of the corresponding
minutiae sets. In order to identify correspondences be-
tween the minutiae in the query ﬁngerprints and the
minutiae stored in the vault, these minutiae sets must
be, at least roughly, aligned with respect to each other.
The ﬁngerprint alignment method is crucial for the fuzzy
ﬁngerprint vault, as an incorrect alignment results in a
relative rotation of the query minutiae set to the points
in the vault and, with very high probability, in an insuf-
ﬁcient number of identiﬁed support points of the polyno-
mial, which results in a failure to authenticate. Several
techniques have been proposed to ensure a suﬃciently
correct alignment. Some implementations use topologi-
cal information of the ﬁngerprint ridge patterns [7][9],
while others apply a minutiae matcher algorithm [10][8].
Early proposals [5][6] even relied on minutiae matching
by human experts, which is clearly not practical. We
do not impose any assumption on the method used for
alignment or the goodness of the relative alignment;
instead, we only consider the rate, at which the minutiae
in the vault are identiﬁed in the query ﬁngerprints (the
minutiae match rate), which in turn depends on the
alignment of these minutiae sets.
4) Combining several ﬁngers: According to [35], the
minutiae of a single ﬁnger do not provide suﬃcient
entropy to extract a secure cryptographic key. Therefore,
we allow to use minutiae from more than one ﬁnger.
The minutiae of the diﬀerent ﬁngers can be easily fused
on a feature level by storing with each minutia or chaﬀ
point an index of the corresponding ﬁnger. A general
149
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

discussion on approaches for multi-instance fusion in
template protection schemes and implications to security
can be found in [36]. Since we allow the biometric
templates to be taken from several ﬁngers of a person,
the minutiae, and likewise, the chaﬀ points, are not only
represented by their location but also by the ﬁnger code.
Subsequently, let both, minutiae and chaﬀ points, be
represented as points m = (a, l) ∈ Z2×{1, . . . , f}, where
a is a location in the ﬁngerprint image represented with
respect an arbitrary coordinate system, and l is an index
of the ﬁnger. We will deﬁne the distance ||mi − mj||
of minutiae or chaﬀ points as the Euclidean distance of
their locations ai and aj, if both points are from the
same ﬁnger, i.e., if li = lj, and as inﬁnite otherwise.
5) Embedding to ﬁnite ﬁeld: In order to evaluate the
polynomial, the minutiae data have to be embedded
into the ﬁnite ﬁeld. In previous implementations, the
minutia location was represented as ﬁeld element using
a suitable encoding function. For our analysis we use a
slight optimization and evaluate the polynomial not on
the minutiae data but on the indices of the minutiae in
the vault. This modiﬁcation minimizes the size of the
function values stored as part of the vault and thus the
loss of entropy. See Section IV-B for details. The ﬁnite
ﬁeld will be chosen larger than the number of points in
the vault and, consequently, injective encoding of the
indices to the ﬁnite ﬁeld is possible. For the ease of
reading, we will omit the encoding and treat the indices
as if they were ﬁeld elements.
6) Storage of a hash value of the polynomial:
In
contrast to the implementations in [6], [7], and [8] that
incorporate a CRC check sum into the polynomial’s coef-
ﬁcients to allow veriﬁcation of the recovered polynomial,
we store a hash value of the coeﬃcients, as it is done
(analogously) in the fuzzy commitment scheme [19]. This
approach has the advantage that it does not reduce the
search space for attackers due to the internal structure
of the secret. We assume that the hash value does not
leak any information; this assumption is frequently used
in cryptographic protocol analysis [37].
7) Selecting the feature space: Subsequently, let M be
the set of all possible minutiae and n = |M| the number
of possible values for a minutia or chaﬀ point. If the ﬁn-
gerprint images have a resolution of N ·M pixels (height
and width), we have M ⊆ [1, N] × [1, M] × {1, . . . , f},
when expressing locations in Cartesian coordinates. As
we will see in Section VI-A, it may be useful to restrict
the set M to a subset with high frequency of minutiae
occurrence.
B. Description of the scheme
As any biometric authentication system, the fuzzy
ﬁngerprint scheme comprises an enrollment and a veriﬁ-
cation step. In the context of the fuzzy vault, these steps
are also referred to as vault locking and vault unlocking.
1) Enrollment (Locking the Vault): Let q be prime
power and k < t < r ≤ q. For each user, a random poly-
nomial P of degree less than k over the ﬁnite ﬁeld Fq is
selected. The coeﬃcients of this polynomial represent the
secret key of the scheme. Then, a set T of t minutiae of
the user is determined. This set of minutiae is amended
by random chaﬀ points, resulting in a set of r points,
containing t genuine minutiae and r − t chaﬀ points. A
minimum distance of d is enforced among minutiae and
chaﬀ points to reduce errors during veriﬁcation by wrong
mapping of close points. Furthermore, in order to ensure
that minutiae and chaﬀ points within the vault are not
distinguishable by their index, they are lexicographically
ordered.
For all genuine minutiae mj, where j is its index after
applying the lexicographic order, yj = P(j) is computed.
For each chaﬀ point mj, where j is its index in the
lexicographic order, a random value yj ̸= P(j) is chosen.
The vault consists of the lexicographically ordered list of
minutiae and chaﬀ points, paired with the corresponding
yj values. The vault and a cryptographic hash value
of the concatenated coeﬃcients of P are stored in the
database.
To facilitate security analysis, we assume that the
chaﬀ points are chosen uniformly from the set M of
potential minutiae with the restriction that the mini-
mum distance is respected. However, since the locations
of genuine minutiae are not uniformly distributed in the
image area, see Section VI-A, selecting chaﬀ points with
a more natural distribution that resembles that of gen-
uine minutiae would make them less distinguishable from
the genuine minutiae in the vault. Nevertheless, since
the chaﬀ points are chosen after the genuine minutiae
in the vault have been determined, those points in the
vault that correspond to image locations, where minutiae
occur with particularly high frequency, are more likely
to be genuine minutiae anyway.
2) Veriﬁcation (Unlocking the Vault): We only con-
sider an authentication in the veriﬁcation scenario,
where the identity of the user is known a priori.
In order to verify the identity of a user, the minutiae
are measured from a query ﬁngerprint. Then the matches
between these minutiae and the minutiae and chaﬀ
points contained in the vault are identiﬁed. Precisely,
for each minutiae in the query ﬁngerprint, the closest
point in the vault with Euclidean distance smaller than
a threshold δ is identiﬁed, where δ is a tolerance pa-
rameter. The matching of the minutiae in the query
ﬁngerprint with those in the vault requires a (nearly)
correct alignment of the query ﬁngerprint with respect
to the minutiae in the vault. To accomplish this, either
vertical alignment of the ﬁngerprints prior to minutiae
extraction , e.g., using singular point detection [38],
150
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

can be used, or a minutiae matching algorithm can be
deployed that tries to ﬁnd the alignment, by which the
number of matches are maximized [10].
The indices of the matching minutiae and chaﬀ points
in the vault, along with the corresponding yi values, are
used to recover the secret polynomial P, see Section
III-B3 for details. If the number of genuine minutiae
among the matches is suﬃciently high the polynomial
can be recovered. See Section III-B3 for a discussion.
The correctness of the recovered polynomial is checked
using the stored hash value.
3) Recovery of the polynomial: The unlocking of the
vault during authentication requires the recovery of the
secret polynomial from a set of points (ji, yji), some
of which (those resulting from matches with minutiae)
lying on the polynomial P, while others (those result-
ing from matches with chaﬀ points) do not. For this
task, an Reed-Solomon decoder is needed that on in-
put (j1, yj1), . . . , (jℓ, yjℓ) ∈ F2
q with ℓ ≥ k, outputs
e0, . . . , ek−1 ∈ {0, . . . , q−1}, so that yji = P(ji) holds for
at least k of the points (ji, yji) with P(z) = Pk−1
i=0 eizi, if
such a polynomial exists. We assume that the Peterson-
Berlekamp-Massey-decoder is used as suggested in [3].
This technique is successful if (ℓ + k)/2 of the x points
handed over to the decoder are correct. Although there
are Reed-Solomon decoders that can decode with only
√
ℓk correct points, they do not oﬀer signiﬁcant advan-
tage for the fuzzy vault, because
√
ℓk is quite close to
(ℓ + k)/2 for typical parameters, and they are computa-
tionally much less eﬃcient [3].
IV. Security analysis
It is understood that there are diﬀerent threats for
the fuzzy ﬁngerprint vault and that the exposure of the
original template is just one of them. Three other types
of such attacks against the fuzzy vault are described in
[30], among which the correlation of two vaults from
independent enrollments (“record multiplicity” attack)
represents a serious threat to the fuzzy vault, which
is still not completely satisfactorily solved. However, a
comprehensive analysis of all potential attacks against
the fuzzy vault would go beyond the scope of this paper.
In this contribution we focus on the security of the
fuzzy ﬁngerprint vault with respect to attacks that try
to recover the template or the secret polynomial from
the vault. In this context, we will investigate both lower
bounds (given by information theoretical results) and
upper bounds (given by known attacks) of the security.
Throughout this article, let all logarithms be to the
base 2.
A. Provable Security
In this section, we provide lower bounds of security
with respect to attacks that aim to recover the template
or, equivalently, the secret polynomial from the vault.
Precisely, these results upper bound the probability
that an attacker, whatever strategy and computational
resources he deploys, determines the correct polynomial
or template from a given vault. The only way of the
attacker to increase his success probability is to check
the correctness of his output, e.g., using the hash value
stored in addition to the vault, and to repeat his guess-
ing. This “provable security” is achieved by a randomiza-
tion process during enrollment, which ensures that for
each given vault there are many “ﬁtting” templates and
polynomials that could have been used to generate it,
and the conditional probability of any assumed template
or polynomial is small.
The lower bounds on the security are given by secu-
rity proofs, which are deducted from information the-
oretical results. We admit that the term proof is not
completely exact here. Firstly, since the security of a
biometric scheme always depends on the distribution
of the biometric features within the considered popula-
tion, estimations based on empirical data are necessary.
Secondly, the minimum distance enforced during the
enrollment constitutes a sphere packing problem that
requires heuristic arguments. In the course of evaluating
optimal parameters with respect to the achieved security
bounds, we will use further approximations, e.g., to allow
a treatment of binomial coeﬃcients with calculus.
Following [26], we use the min-entropy H∞ to quan-
tify the security of the scheme. This measure has the
advantage that it expresses the (negative logarithm of
the) maximum probability of guessing, and thus, can be
used to deduct lower bounds on attacks (see Theorem
1). In contrast, some publication, e.g., [39] and [40],
use the Shannon entropy H to assess the security of
biometric template protection. The use of the Shannon
entropy might be appealing due to the rich underly-
ing mathematical theory, which allows to deduct quite
impressive results, e.g., see [41]. However, as shown in
[42], the Shannon entropy can, for certain probability
distributions, be very insigniﬁcant for assessing the min-
imum attack complexities. In general, the inequality
H∞(A) ≤ H(A) holds for any random variable A,
but, in the opposite direction, the Shannon entropy
can exceed the min-entropy (and thus the logarithm of
attack complexities) by any factor. Consequently, the
Shannon entropy is not the eligible measure to determine
the capacity of the fuzzy ﬁngerprint vault with respect
to provable security, i.e., to lower bounds for attack
complexities.
Subsequently, let P(X) denote the probability of an
event X and let Ea←A [f(a)] be the expectation of the
function value of a random variable A. The min-entropy
151
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

of a random variable A is given by
H∞(A) := − log(max
a (P(A = a))),
and the average min-entropy of A given B is deﬁned as
eH∞(A | B) := − log

Eb←B
h
2−H∞(A | B=b)i
For a biometric encryption scheme with feature vector
T and vault Y , we call H∞(T) − eH∞ (T | Y ) the loss of
entropy.
B. Minimum attack complexity
The following result shows that the security of the
fuzzy vault for ﬁngerprints can be lower bounded by
the average min-entropy of the biometric feature vector
given the vault. The result is a trivial adaptation of
Theorem 1 and Lemma 2 from [23], and follows imme-
diately from the deﬁnition of the min-entropy. It holds
(with according notations) for any biometric encryption
scheme, in which the secret key and the vault uniquely
determine the biometric feature vector.
Theorem 1. Any algorithm that takes as input the vault
Y and tries to output the secret polynomial P(x) =
P
i eixi or the set of minutiae T has an average success
probability of at most 2− e
H∞(T | Y ).
An attacker who has determined the original template
T of a user can recover the secret polynomial P by simu-
lating a veriﬁcation using T and the vault Y ; the stored
hash value allows checking, if the resulting polynomial is
correct. On the other hand, if an attacker has (somehow)
learned P, he can easily recover T from the vault Y ,
simply by determining all mj in Y with yj = P(j).
Therefore, it is equally diﬃcult to recover the template
T as to determine the secret polynomial P. In terms of
information theory, we obtain the following result:
Theorem 2. Given the stored reference data (vault
and hash value), recovering to biometric template T is
computationally equivalent to determination the secret
polynomial P. Moreover, eH∞(T | Y ) = eH∞(P | Y ).
On the other hand, the success probability of an
ﬁngerprint dictionary attack (see Section IV-E) trying
to recover the polynomial by choosing random templates
equals, by deﬁnition, the False Accept Rate (FAR), while
the min-entropy upper bounds the probability of any at-
tack. Therefore, we can state the following result, which
was presented already - for a larger class of schemes and
using diﬀerent mathematical notations - in [43].
Theorem 3. eH∞(P | Y ) ≤ − log (FAR).
Theorem 3 implies that the information content of
a cryptographic key extracted from P cannot exceed
− log (FAR). In [35], this conclusion was drawn for arbi-
trary schemes, in which biometric data is used to extract
a secret key. Since it is indeed possible to recover P
from Y in 1/FAR steps on average by the ﬁngerprint
dictionary attack (see Section IV-E), the length of any
cryptographic key secured by a fuzzy ﬁngerprint vault
should not exceed − log (FAR) bits. In order to extract
this number of bits from P while preserving all its
entropy, it can be used as a seed of a pseudo-random
number generator.
C. Loss of entropy
By deﬁnition, the average min-entropy of the bio-
metric feature vector given the vault is the diﬀerence
between the entropy of the feature vector and the loss of
entropy. We now turn to the estimation of the latter
quantity. We ﬁrst consider the case, where no mini-
mum distance is enforced among the minutiae and chaﬀ
points, i.e., the case d = 1, and then generalize these
results to the case d > 1.
1) The case of trivial minimum distance: In [13],
Lemma D.1, a lower bound for the loss of entropy in
the original fuzzy vault scheme has been given. In the
case d = 1, i.e., if the minimum distance is trivial and
the minutiae and chaﬀ points only need to be distinct,
the result can be directly applied to our implementation.
The proof is a simple adaptation of the proof of Lemma
D.1 in [13].
Theorem 4. If d = 1, the loss of entropy is at most
(t − k) log q − log

On the other hand, since the minutiae and chaﬀ points
in Y are in lexicographic order, we have 2λ =

tolerance of the minutiae matching algorithm and is
therefore not applicable for the determination of the raw
entropy H∞(T).
We model the probability distribution of T by a
probabilistic process Select T, where the t minutiae
are successively chosen. The ﬁrst minutia m1 is selected
according to a distribution D deﬁned over M. All subse-
quent minutiae mi are selected to the same distribution
D restricted to the areas in M not covered by the
d-spheres Bd(m1), . . . , Bd(mi−1) around the previously
chosen minutiae.
Like all previous models for the distribution of minu-
tiae, we do not assume any statistical dependency be-
tween the locations of the individual minutiae, except
that they have the minimum distance d. Although it is
known that minutiae tend to overdisperse on a small
scale (precisely, between 11 and 20 pixels for 500 dpi)
and to cluster on a large scale [46]. The overdispersion
on a small scale can be partially explained by mini-
mum distances typically enforced by minutiae extraction
algorithms to avoid ambiguous results, e.g., see [47],
but in [46] biological arguments taken from [48] are
used. Due to the enforcement of a minimum distance
d during template selection this eﬀect is in line with
our model, at least for suﬃciently large d. Furthermore,
the overdispersion reported in [46] is rather weak. On
the other hand, in [46] the observed clustering on a
large scale is explained by a higher minutiae frequency
around core or delta points. This eﬀect is addressed in
our model by using a non-uniform distribution D, in
which higher probabilities refer to such cluster points.
Of course, there could be more complex dependencies
between the location of individual minutiae. However,
to our knowledge, there are no observations or models
implying such dependencies (we refer to [49] for a de-
tailed discussion of this aspect).
Using our statistical model, we can show the following
result:
Theorem 6. If T is chosen according to the random pro-
cess Select T and the maximum likelihood of a minutiae
location is 1/ψ, then
H∞(T) ≥ log
ψ/Vd
t

+ t log Vd
Proof: Let P(A) denote the probability of random event
A. Furthermore, for i = 1, . . . , t let Mi let be the random
variable of the i-th point output by Select T. By M we
denote the random variable chosen according to D. Then
by deﬁnition
2−H∞(T ) = max (P ({M1, . . . , Mt} = {m1, . . . , mt}))
≤ t! max (P (M1 = m1, . . . , Mt = mt)) ,
(3)
where the maximum is taken over all m1, . . . , mt. The
latter probability P (M1 = m1, . . . , Mt = mt) can be ex-
panded to
tY
i=1
P (Mi =mi | ∀j < i : Mj =mj) .
The ﬁrst term has an empty condition and is limited
by 1/ψ, while the other factors can be estimated as
follows:
P (Mi =mi | M1 =m1, . . . , Mi−1 =mi−1)
= P (M =mi | M ̸∈Bd(m1) ∪ . . . ∪ Bd(mi−1))
= P (M =mi ∧ M ̸∈Bd(m1) ∪ . . . ∪ Bd(mi−1))
P (M ̸∈Bd(m1) ∪ . . . ∪ Bd(mi−1))
≤
P (M =mi)
1 − P (M ∈Bd(m1) ∪ . . . ∪ Bd(mi−1))
By assumption, the numerator is at most 1/ψ, while
the probability in the denominator is limited by the
term |Bd(m1) ∪ . . . ∪ Bd(mi−1)| /ψ, which is at most
(i − 1)Vd/ψ. This results in
P (Mi =mi | M1 =m1, . . . , Mi−1 =mi−1)
≤
1
ψ − i·Vd
(4)
Consequently, with (3) we obtain
2−H∞(T ) = t!
t−1
Y
i=0
1
ψ − i · Vd
.
The desired result now follows by elementary transfor-
mations.
Q.E.D.
By combining Theorem 5 with Theorem 6 we obtain
the following Theorem.
Theorem 7. For d ≥ 1, eH∞(T | Y ) ≥ E with
E ≈ log
ψ/Vd
t

−(t−k) log q+log
r
t

−log
n/Vd
t

−2,
where 1/ψ is the maximum likelihood of a minutiae
location.
E. Practical Security
In the previous sections, we have focused on provable
security in terms of lower bounds for the number of trials
for attacks. However, these bounds are not at all sharp,
as existing attacks are much less eﬃcient than these
bounds would allow. For this reason, we now consider
practical attacks and analyze the security of the fuzzy
vault with respect to these attacks.
154
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

For the recovery of the original template and the secret
polynomial from a single vault two kinds of brute force
attacks can be distinguished: exhaustive search on the
templates or exhaustive search on the polynomials.
1) Fingerprint dictionary attack: In the ﬁngerprint
dictionary attack an attacker collects a large number
of realistic templates, either from real ﬁngerprints or
artiﬁcially. For all these templates he simulates the
authentication procedure using the vault until the secret
polynomial has been found. Although it has been shown
in [3] that for typical parameters there is with high
probability a large number of polynomials “ﬁtting” the
vault, i.e., there are many polynomials of degree smaller
than k such that exactly t of the stored points lie on
the polynomial, the attacker can check the correctness of
the polynomial using the stored hash value (see Section
III-B2). If the templates are chosen with the same proba-
bility distribution as they occur within the group of users
of the biometric application, the success probability of
each attempt equals the False Accept Rate (FAR) and
the attacker needs FAR−1 trials on average. (For this
reason, this attack is also referred to as FAR attack [36].)
This results in an overall workload of Nv ·FAR−1, where
Nv is the eﬀort for a single veriﬁcation.
Usually, the FAR is determined empirically by per-
forming a suﬃciently large number of impostor matches,
i.e., matches with ﬁngerprints of other individuals. Of
course, the empirical determination has to be done for
every set of parameters separately. Subsequently, we
explore if the FAR can also be estimated theoretically
as a function in dependence of the parameters of the
scheme.
Let mc denote the number of correct matches, i.e., the
matches between the query ﬁngerprint and the genuine
minutiae, and let mf be the number of false matches, i.e.,
the matches between the query ﬁngerprint and the chaﬀ
points. According to Section III-B3, the reconstruction
of the polynomial is only possible if mc ≥ mf + k.
Therefore, we obtain
FAR =
t
X
a=k
b−k
X
mf=0
P(mc = a ∧ mf = b).
The probability P(mc = a ∧ mf = b) that there are
exactly a correct and b false matches depends on the
speciﬁc method used to identify minutiae correspon-
dences between the query ﬁngerprint and the vault.
This method usually searches for the correct relative
alignment of the minutiae set in order to compensate
global rotations and translations of the ﬁngerprints. The
precision and reliability of the alignment method has
great impact on the probability P(mc = a ∧ mf = b).
Therefore, a reasonably accurate theoretical estimation
of the FAR is unfeasible unless very simplifying as-
sumptions are made on the alignment, e.g., that the
ﬁngerprints are perfectly aligned.
2) Polynomial reconstruction: An attacker can try to
recover the polynomial from the stored points directly,
i.e., without exploiting knowledge about the distribution
of minutiae and the corresponding feature vectors. The
underlying computational problem is known as Reed-
Solomon decoding problem or polynomial reconstruction
problem. It is believed to be hard for k < t <
p
r(k − 1),
and it is known that random instances of this problem
are as hard as the worst case [50]. For very large ﬁelds
sizes, it is known to be NP-complete [51]. For these
reasons, it has been repeatedly suggested as a basis for
cryptographic constructions [50].
According to [52], two approaches are most eﬃcient
for the polynomial reconstruction: Either, after guessing
k genuine minutiae, the polynomial is reconstructed
using polynomial interpolation, e.g., by Lagrange in-
terpolation, or it is determined by Reed-Solomon list
decoding after guessing ∆ = r −
t2
k−1 + 1 of the chaﬀ
points. Let aside the fact that polynomial interpolation
is much more eﬃcient than Reed-Solomon list decoding,
for typical parameters (and all parameters suggested
so far), ∆ > k and therefore, it is more eﬃcient to
guess k genuine minutiae among the stored points.1 This
approach has been used by the attack of Mihailescu,
et. al. [12], which systematically searches through all
subsets {j1, . . . , jk} of {1, . . . , r}, computes the unique
polynomial P satisfying P(ji) = yji by polynomial inter-
polation, and checks the correctness of this polynomial.
Assuming (as done in [12]) that all points in the vault
are equally likely to be a genuine minutia, this attack
needs

oversimpliﬁcation. There are (at least) two eﬀects result-
ing in a non-uniform distribution of these probabilities,
which are subsequently discussed.
Firstly, it has been shown in [11] that since the
chaﬀ points are selected after the genuine minutiae in
the vault were determined, the average free area (not
occupied by the d-spheres Bd(m) of other points) in the
proximity of chaﬀ points is smaller than that around
genuine minutia. This tendency can be exploited to tell
apart genuine minutiae from chaﬀ points more eﬃciently
than by mere guessing. In [11], the method has been
shown to be eﬃcient in the case of a maximum number
of chaﬀ points; given a density 0.45 for random sphere
packings [5], the maximum number r of points in the
vault is 0.45 · n/V⌈d/2⌉. In this case, the polynomial
reconstruction attack can be sped up considerably by
preferring those points having more free area in their
neighborhood than others. However, it has been shown
in [5] that if the number of chaﬀ points is considerably
smaller than their maximum, the eﬀect exploited by the
attacker is much weaker. We assume that r is chosen
considerably smaller than its maximum value, i.e., that
r ≪ 0.45 · n/V⌈d/2⌉, and thus, this attack method is less
eﬃcient than the second approach for selecting points in
the polynomial reconstruction (see following paragraph).
We will critically review this assumption on the basis of
our results in Section VI-D.
Secondly, the locations of minutiae are not uniformly
distributed. Even if chaﬀ points were selected using a
“natural”distribution, i.e., a distribution resembling that
of minutiae, they were less likely to occupy frequent
minutiae locations than the genuine minutiae in the
vault, because the latter ones are selected before the
chaﬀ points are chosen. As we assumed that chaﬀ points
are selected according to a uniform distribution, this
eﬀect is even stronger. Subsequently, we discuss the
advantage an attacker can gain from this eﬀect.
Obviously, the best strategy for speeding up the poly-
nomial reconstruction is to try points mi ∈ R with
higher conditional probability P (mi ∈ T | mi ∈ R) ﬁrst.
In particular, an optimized attack would ﬁrst determine
the minutiae occurrence frequency for all locations in
M, sort the points m1, . . . , mr ∈ R according to the
frequency pi corresponding to their location so that
p1 ≥ . . . ≥ pr, and would then search through all
subsets {j1, . . . , jk} of {1, . . . , K} with increasing K ≥ k.
We call this optimized attack the smart polynomial
reconstruction. Up to our knowledge, this (quite obvious)
improvement of the polynomial reconstruction attack on
the fuzzy ﬁngerprint vault has not been proposed in
the literature so far, although in [32], the basic idea “to
exploit the non-uniform nature of biometric features and
develop attacks based on statistical analysis of points in
the vault” has already been phrased.
The following results enables us to deduct an approx-
imate upper bound for the success probability of this
attack method. As for the proof of Theorem 5, we assume
rVd ≪ n and use the approximation that, on average,
each point selected for R reduces the number of choices
for the subsequent points by Vd. We will critically review
this assumption on the basis of our results in Section
VI-D.
Lemma 8. Let rVd
≪ n and mj1, . . . , mjk be an
arbitrary subset of points from the vault R. Then, the
probability p that these points are all genuine minutiae,
is approximately upper bounded by
p ⪅
k
Y
i=1
(t−i+1)(n−tVd)
(r−t)ψi + (t−i+1)n − t(r−i+1)Vd
,
where 1/ψi is the probability of a minutiae occurrence at
position mji.
Proof: For the ease of reading, we use P(i−1)(A) to denote
a probability of an event A under the condition that
points mj1, . . . , mji−1 are genuine minutiae, i.e.,
P(i−1)(A) = P(A | mj1, . . . , mji−1 ∈ T).
The probability p that the points mj1, . . . , mjk are all
genuine minutiae is given by
p =
k
Y
i=1
P(i−1)(mji ∈ T | mji ∈ R).
(6)
We can estimate
P(i−1)(mji ∈ T | mji ∈ R)
= P(i−1)(mji ∈ T)
P(i−1)(mji ∈ R)
=

1 + P(i−1)(mji ∈ R \ T)
P(i−1)(mji ∈ T)
−1
(7)
For the estimation of P(i−1)(mji
∈ T), we again
assume that the t genuine minutiae in T are succes-
sively selected by the probabilistic process Select T
introduced in Section IV-D.
Since rVd ≪ n, we can approximate that, on average,
each point selected for R reduces the number of choices
for the subsequent points by Vd. This estimation is ac-
tually an upper bound, which holds independently from
our assumption rVd ≪ n, and we will use this bound
to obtain an exact upper bound for the denominator in
(7). For the nominator, however, we need a lower bound,
and therefore, we use this estimation on the reduction
of potential points as an approximation and not as a
bound.
156
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

By (4), the probability that minutia mji is chosen as
the i-th minutia if i − 1 genuine minutiae are already
ﬁxed is at most (ψi−(i−1)Vd)−1. If mji is not chosen as
the i-th minutia, it can be selected as (i+1)-th minutiae
only, if the i-minutiae has not been chosen from Bd(mji).
Thus, the probability, that mji is selected as (i + 1)-th
minutia, given that the ﬁrst i−1 minutiae in T are ﬁxed,
is at most

1 −
Vd
ψi − (i − 1)Vd

1
ψi − iVd
=
1
ψi − (i − 1)Vd
.
Analogously, for all m ≥ i, the probability that mji is
selected as m-th minutia in T given that the ﬁrst i − 1
minutiae are ﬁxed can be upper bounded by (ψi − (i −
1)Vd)−1. Thus, we obtain
P(i−1)(mji ∈ T) ≤
t − i + 1
ψi − (i − 1)Vd
.
(8)
For the estimation of the denominator of (7), we
observe that mji can be a chaﬀ point only if none
of the points in its d-sphere Bd(mji) is in T, i.e., if
Bd(mji) ∩ T = ∅. Thus, we have
P(i−1)(mji ∈ R \ T) = P(i−1)(Z) · P(mji ∈ R | Z), (9)
where we have abbreviated the event Bd(mji) ∩ T = ∅
by Z. Note, that the second probability does not depend
on the condition that points mj1, . . . , mjm are genuine
minutiae, because the speciﬁc conﬁguration of T is irrel-
evant for the chances of mji being selected as chaﬀ point,
as long as these points do not lie within the d-sphere of
mji.
Using (8), we obtain
P(i−1)(Z) ≥ 1 − (t − i + 1)Vd
ψi − (i − 1)Vd
=
ψi − tVd
ψi − (i − 1)Vd
.
(10)
On the other hand, we have
P (mji ∈ R | Z) =
r−t
X
l=1
P(Ml = mji | Z),
(11)
where Ml is the random variable deﬁned by the selection
of the l-th chaﬀ point. Since we assume that the chaﬀ
points are chosen according to a uniform distribution
and that each point selected for R reduces the number of
choices for the subsequent points by Vd, the probability
that the ﬁrst chaﬀ point chosen is mji, provided that
none of the points in its d-sphere is in T, is approxi-
mately (n − tVd)−1.
If mji is not chosen as the ﬁrst chaﬀ point, it can
be selected as second chaﬀ point only, if the ﬁrst chaﬀ
point has not been chosen from Bd(mji). Thus, the
probability, that mji is selected as second chaﬀ point,
given that none of the points in its d-sphere is in T, is
approximately

1 −
Vd
n − tVd

1
n − (t + 1)Vd
=
1
n − tVd
.
Analogously, for all m ≥ 1, the probability that mji
is selected as m-th chaﬀ point, given that none of the
points in its d-sphere is in T, can be approximated by
(n − tVd)−1. Thus, we obtain from (11)
P(mji ∈ R | Z) ≈
r − t
n − tVd
,
(12)
and with (10) and (9)
P(i−1)(mji ∈ R \ T) ⪆
ψi − tVd
ψi − (i − 1)Vd
·
r − t
n − tVd
.
(13)
Combining (7) with (8) and (13), we get
P(i−1)(mji ∈ T | mji ∈ R)
⪅
(t − i + 1)(n − tVd)
(r − t)ψi + (t − i + 1)n − t(r − i + 1)Vd
,
and with (6) this yields the desired result.
Q.E.D.
As in Theorem 6, let 1/ψ be the maximum likelihood
of a minutiae location within M. Then, by Lemma 8, the
success probability for each individual trial of the smart
polynomial reconstruction is approximately limited by
k
Y
i=1
(t−i+1)(n−tVd)
(r−t)ψ + (t−i+1)n − t(r−i+1)Vd
.
This general bound, together with the estimation of
117k log2(k) operations for a polynomial interpolation,
provides an approximate lower bound for the average
number of operations needed for the smart polynomial
reconstruction.
Theorem 9. For rVd ≪ n, the expected number W
of operations for the smart polynomial reconstruction
is W = 117k log2(k)S, where S is approximately lower
bounded by
S ⪆
k
Y
i=1
(r−t)ψ + (t−i+1)n − t(r−i+1)Vd
(t−i+1)(n−tVd)
(14)
Note, that the estimation (14) depends on the number
f of ﬁngers used per person, as both n and ψ scale
linearly with f. Precisely, the estimate for S decreases
with f, i.e., the estimated workload of the attack is
minimal for f = 1. This dependency may surprise at ﬁrst
sight, but indeed, with increasing number of minutiae
per ﬁnger they become more distinguishable from chaﬀ
points because less space in the area frequently assumed
by minutiae is left for chaﬀ points.
Estimating the probability ψi of minutiae occurrence
at location mji by ψ is of course quite rough. With
157
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

increasing K, the average of ψi for ji ≤ K will decrease
and so does the success probability. However, the rate
of this decrease depends on the speciﬁc distribution of
the minutiae locations and can only be determined on
the basis of extensive data evaluation, which would go
beyond the scope of this paper. Therefore, in Section
VI-D, we will use Theorem 9 as a lower bound for work-
load of the smart polynomial reconstruction attack and
complement this estimation by using the expected run
time (5) of the conventional polynomial reconstruction
as an upper bound.
3) Discussion: As explained in Section IV-E1, we
are not able to provide a reasonably accurate run time
estimation for the ﬁngerprint dictionary attack, because
theoretical analysis of the FAR is not possible without
very simplifying assumptions. Therefore, the FAR needs
to be determined empirically for each set of parameters
used. Unfortunately, determination of very small FAR
values is computationally very expensive: while the FAR
for the multi-ﬁnger setting can be extrapolated from the
FAR of a single-ﬁnger setting, determination of latter
one requires considerably more than FAR−1 matching
operations. Since security of the fuzzy ﬁngerprint vault
against the ﬁngerprint dictionary attack requires a very
low FAR, this task can be quite challenging.
A potential advantage of the ﬁngerprint dictionary
attack over polynomial reconstruction is that it takes
optimal advantage of the actual statistical distribution of
the feature vectors in the considered population. While
the smart polynomial reconstruction attack exploits the
non-uniformity of the minutiae locations in the con-
sidered area M, the ﬁngerprint dictionary attack can
also take advantage from statistical dependencies among
the minutiae locations. However, as discussed in Section
IV-D, the dependencies reported in the literature are
quite weak.
On the other hand, the eﬀort Nv for each trial in
the ﬁngerprint dictionary attack is computationally ex-
pensive, as it comprises feature extraction, minutiae set
alignment and Reed-Solomon decoding. For instance,
we have implemented a matching algorithm that aligns
the set of minutiae from the query ﬁngerprints with
the vault by determining the rotation and translation
for optimal alignment (see [10] for details). For typical
parameters the matching using this algorithm needs
between 0.3 and 1 second on a standard PC. Of course,
the matching process could be accelerated by using more
sophisticated methods, but the alignment is deﬁnitely a
complex task, which consumes considerable time. More-
over, the extraction of minutiae from (real or artiﬁcial)
ﬁngerprints requires extensive image pre-processing and
edge detection, which is also very time consuming. In
contrast, the run time estimations (5) and (14) of the
polynomial reconstruction attacks counts elementary op-
erations, i.e., additions, subtractions, multiplication or
division over Fq. In an implementation of the polynomial
reconstruction attack reported in [12], the number of
polynomials interpolated and tested per second of CPU
time on a standard PC was greater than 8000 for k = 14.
Based on the estimate 117k log2(k) for the number of
operations needed per polynomial interpolation, and an
optimistic estimate of 0.25 seconds of CPU time for a fea-
ture extraction and matching operation, we can roughly
estimate that a single trial in the ﬁngerprint dictionary
attack takes 50 million times more computation time
than the ﬁnite ﬁeld operations counted in (5) and (14).
In this paper, we will subsequently estimate the practi-
cal security of the fuzzy ﬁngerprint vault by the workload
W of smart polynomial reconstruction attack, for which
we use (5) as an upper and (14) as a lower bound.
Nevertheless, we stress, that a security assessment of a
concrete implementation of the fuzzy ﬁngerprint vault
should also comprise an empirical evaluation of the
FAR and a resulting estimation for the workload of the
ﬁngerprint dictionary attack.
V. Optimization of Parameters
In this section we try to determine criteria for the
optimal selection of parameters for both provable secu-
rity and security against existing attacks. Furthermore,
we derive estimates on the achievable security according
to Theorems 1 and 7. We do this by estimating the
maximum of E over t, k and r for a given decoding
complexity.
A. Minimizing the ﬁelds size
In order to maximize the approximate lower bound
for the remaining entropy according to Theorem 7, we
set q = r; this minimization of the ﬁnite ﬁeld has no
inﬂuence on the security against existing attacks. Fur-
thermore, since n > ψ ≫ tVd, we have

0.45 represents the maximum density of a random sphere
packing [5].
On the other hand, d should not be smaller than the
tolerance parameter δ used for minutiae matching, to
limit false matchings of minutiae in the query ﬁngerprint
with chaﬀ points during authentication. Setting d = 2δ
will already completely prevent such false matchings
with minutiae that are also present in T, but smaller
values might already reduce their number to a minimum.
According to [10], setting δ ≈ (3/2)d is a good compro-
mise. In the following, we base our analysis on this choice
for d and will use 0.45n/V⌈(3/4)δ⌉ as maximum value for
r.
C. Optimizing the degree of the polynomial
The parameter k must be set, so that with suﬃcient
probability the secret polynomial can be recovered eﬃ-
ciently from a genuine query ﬁngerprint. Subsequently
we analyze the expected complexity of this task. As in
Section IV-E1, we denote the number of correct matches,
i.e., the matches between the query ﬁngerprint and the
genuine minutiae, with mc, and the number of false
matches, i.e., the matches between the query ﬁngerprint
and the chaﬀ points, with mf. From Section III-B3 we
know that decoding is only possible if mc ≥ mf + k.
It has been shown in [5] that, on average, the Reed-
Solomon decoding of the polynomial using ℓ points
requires
mc + mf
ℓ




min(ℓ,mc)
X
i=max(⌈ ℓ+k
2 ⌉,ℓ−mf)
 mf
ℓ − i
mc
i




−1
trials, where the parameter ℓ must fulﬁll k ≤ ℓ ≤
min(2mc − k, mc + mf). This expression is diﬃcult to
analyze theoretically. Numerical evaluation shows that
for mc − k ≤ mf ≤ mc + 2mc/(mc − k), the decoding
complexity is minimized for ℓ = 2mc − k. In this case,
the sum collapses to the term for i = mc and hence the
minimum decoding complexity is
Cmin(mc, mf, k) =
mc + mf
2mc − k

mf
mc − k
−1
.
(16)
In the case mf = mc − k, we have ℓ = 2mc − k =
mc + mf and Cmin(mc, mf, k) evaluates to 1. For mf =
mc − k + i with i = 1, 2, . . . , mc/(mc − k) − 1 equation
(16) yields
Cmin(mc, mf, k) = (2mc − k + 1) · · · (2mc − k + i)
(mc − k + 1) · · · (mc − k + i) .
This equation shows that, for mc − k ≤ mf < mc −
k + mc/(mc − k), the minimum decoding complexity
increases exponentially with i
=
mf − mc + k
<
mc/(mc − k). Numerical evaluation reveals that the
exponential growth continues (with slowing pace) for
mf − mc + k ≥ mc/(mc − k). Consequently, we ﬁnd that
the decoding complexity is an exponential function in
mf − mc + k.
On the other hand, the number mc of correct matches
will typically disperse considerably between diﬀerent
authentications due to variations in the ﬁngerprint image
quality. Thus, if k is larger than the expectation of
mc − mf, the fraction of cases, in which decoding is
not feasible anymore, can become quite high. As a
consequence, we set k to the expectation of mc − mf in
order to optimize the remaining entropy while limiting
the decoding complexity.
Depending on the speciﬁc distribution of the number
of correct matches and the requirements on decoding
complexity imposed by the application scenario, it may
be appropriate to select smaller or larger values for k.
For instance, if the False Reject Rate (FRR) observed
for a certain k is too high, k must be decreased until
the FRR becomes acceptable. On the other hand, if the
FRR is very low, k could be carefully increased. We will
investigate the impact of increasing or decreasing k in
our numerical evaluation in Section VI-C.
We estimate the mean values for mc and mf as follows:
• It is reasonable to assume that the average number
of correct matches is a linear function of t, i.e., mc =
µt, where µ is the average match rate independent
of t.
• If rVδ ≪ n, the number of points in M covered
by the tolerance areas Bδ(mi) around the chaﬀ
points mi can be estimated as (r − t)Vδ. (Since
minutiae of the query ﬁngerprint that lie within the
tolerance area of a chaﬀ points can still be correctly
matched with a minutiae in T, this estimate is even
conservative.) Therefore, we can estimate the aver-
age number mf of false matches by sf(r − t)Vδ/n,
where s is the average number of surplus minutiae
per query ﬁngerprint, i.e., the average number of
minutiae in the query ﬁngerprints that do not match
with the stored minutiae, and f is the number of
ﬁngers used.
Remark: As the surplus minutiae are those not match-
ing with genuine minutiae, their number depends on the
match rate. Precisely, we could estimate the number s of
surplus minutiae per ﬁnger as s ≈ w−µt, where w is the
average number of (all) minutiae per query ﬁngerprint.
However, this would result in a term t2 in the estimation
of E, which would render analytical determination of
the maximum achievable entropy much more diﬃcult.
Furthermore, the number w of minutiae per ﬁnger is
also not constant but depends on the feature extraction
algorithm used and quality ﬁltering applied, and hence,
we would end up with the same number of variable
parameters in our results.
159
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

As we set k to the expectation of mc − mf, these
estimations yield
k = tµ − (r − t)sfVδ
n
.
(17)
Using approximation (15) this yields E ⪅ f(t, r) with
f(t, r) =

tµ − (r − t)sfVδ
n

log r
− t log
 nt
eψ

1 − t − 1
2r

− 1
2 log(2πt) − 2.
We also use (17) to eliminate parameter k from the
estimations (5) and (14) for the workload W of the poly-
nomial reconstruction attacks, which allows numerical
optimization of t and r with respect to practical attacks
in Section VI-D.
D. Maximizing the Bound for the Entropy
For ﬁxed δ, n, µ, s and f, we try to estimate the
maximum remaining entropy E by ﬁnding the maximum
of the function f(t, r) over r. The maximum is assumed,
where the ﬁrst derivation ∂f(t,r)
∂r
is zero. It is easy to see
that this is equivalent to t2+a(r)t+b(r) = 0 with a(r) =
2µnr +sfVδr(3+ln(r)) and b(r) = −2sfVδr2(ln(r)+1).
For r > 0, one of the two solutions is negative and can
thus be neglected. Consequently, for every r, f(t, r) takes
its maximum at
t0(r) = −a(r)/2 +
p
a(r)2/4 − b(r).
Consequently, the function f(t0(r), r) upper bounds
E for a given r, and the maximum of f(t0(r), r) over
r yields a general upper bound for E. Thus, we can
estimate the best provable security bound according to
Theorems 1 and 4 that can be achieved for given δ, n,
µ, s and f, by numerically determining the maximum
of f(t0(r), r) over the relevant range of r. As argued in
Section V-A, it is reasonable to set d = ⌈(3/2)δ⌉; hence,
the relevant range is given by 1 ≤ r ≤ 0.45n/V⌈(3/4)δ⌉
(see Section V-B), where the factor 0.45 represents the
density of a random sphere packing [5].
Since for ﬁxed t, r ≥ 1, the value f(t, r) is monotoni-
cally increasing with the match rate µ, we can determine
the minimum value µmin, for which the maximum of
f(t0(r), r) is greater than a certain security level S. Since
E ⪅ f(t0(r), r), this value µmin is an approximate lower
bound for the average match rate required to obtain a
scheme with security 2S according to Theorem 1 and
Theorem 7, so that in the average case the polynomial
can be recovered with one trial.
VI. Results
We evaluate whether and to what extent a (heuristi-
cally) provably secure fuzzy ﬁngerprint vault is feasible.
In particular, for diﬀerent values for δ and for typical
Figure 2.
Spatial distribution of minutiae extracted with feature
extractor MINDTCT [47] from 82800 ﬁngerprints and the ellipse E
from where minutiae are considered. The brightness of pixels cor-
responds to the frequency of minutiae occurrence at this position.
values for n, ψ and s we determine the minimum match
rates required to achieve a security of 250 according to
Theorem 1 and Theorem 7. We compare these minimum
match rates with match rates observed in practice.
A. Evaluation of Minutiae Distribution
In order to estimate n and ψ, we have empirically
determined the spatial distribution of minutiae within
the ﬁngerprint image. We evaluated the location of
5.8 million minutiae extracted with NIST’s MINDTCT
feature extraction algorithm [47] from 82800 imprints
that were taken from 9200 ﬁngers with 3 diﬀerent sensors
having 500 DPI. The ﬁngerprints were taken from a
non-public database set up in the course of a previous
project of the German Federal Oﬃce for Information
Security (Bundesamt f¨ur Sicherheit in der Information-
stechnik). For this evaluation, the ﬁngerprints had been
pre-aligned, so that the center of mass of all minutiae
coincides with the image center and the longest distance
between two minutiae locations was vertically aligned.
It turned out that 83% of all minutiae occurred in
an area deﬁned by an ellipse that covers approximately
87000 pixels, which roughly corresponds to 2.25 cm2.
Outside this ellipse, the density of minutiae decreases
drastically. Therefore, it is reasonable to restrict the
fuzzy vault to minutiae and chaﬀ points inside this area.
This gives an estimate n ≈ 87000 · f, where f is the
number of ﬁngers, from which the minutiae are gathered.
The distribution of the minutiae positions and the ellipse
are shown in Figure 2. This yields fs/n ≈ s/87000,
which makes our estimation E ⪅ f(t, r) for the max-
imum achievable entropy bound E independent of the
number f of ﬁngers.
160
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table I
Minimum match rates required to achieve a provable
security of 50 bits.
δ = 5
δ = 7
δ = 10
s = 20
82.2%
89.6%
97.0%
s = 35
87.9%
95.5%
-
s = 50
91.7%
99,1%
-
The maximum frequency of a minutiae location was
112, which corresponds to a maximum probability of
a minutiae location inside the ellipse of approximately
112/5800000/0.83 ≈ 2−15.4. This results in an approx-
imation n/ψ ≈ 2. This approximation is independent
from the number f of ﬁngers used for the fuzzy vault,
as both ψ and n scale linearly with f.
We stress that our estimate is valid for minutiae
extracted with the MINDTCT algorithm. As shown in
[54], other feature extractors exhibit considerably diﬀer-
ent minutiae placement density functions, and thus, the
maximum probability of a minutiae location may diﬀer
as well.
B. Estimating the number of surplus minutiae
According to [4], a good-quality live-scan ﬁngerprint
has 20–70 minutiae. Since f(t, r) decreases with an
increasing average number s of minutiae per query ﬁn-
gerprint not matching with genuine minutiae, it might
be a good idea to use only the most reliable minutiae of
the query ﬁngerprints, e.g., by evaluating minutiae qual-
ity indices output by the feature extraction algorithm.
However, the extent of the ﬁltering should be carefully
balanced with the match rates achieved with the reduced
number of minutiae. We will subsequently consider the
range 20 ≤ s ≤ 50.
C. Numerical Parameter Optimization for Provable Se-
curity
In the previous sections, we found the approxima-
tions n/ψ ≈ 2 and fs/n ≈ s/87000 from empirical
data. Using these estimations and various values for
δ and s, we applied the method described in Section
V-D to determine the minimum match rate required to
achieve a security level of 250 according to Theorem 1
and Theorem 7. We numerically computed the maxi-
mum value of the function f(t0(r), r) over the range
1 ≤ r ≤ 0.45n/V⌈(3/4)δ⌉ (see Section V-B) with the
maximum value n = 10 · 87000, i.e., for maximum range
of chaﬀ points possible for 10 ﬁngers, using the computer
algebra system PARI/GP. The minimum match rates,
at which this maximum exceeds 250, are listed in Table
I for diﬀerent values of δ and s. A “−” denotes that a
remaining entropy of 50 is not achieved at all.
The security bounds are very sensitive to changes of
the match rate. For instance, for the parameters given in
Table II
Linear factor, by which the minimum match rates given in
Table I decrease with increasing k.
δ = 5
δ = 7
δ = 10
s = 20
0.67%
0.54%
0.41%
s = 35
0.54%
0.38%
-
s = 50
0.45%
0.28%
-
Table I, a decrease of the match rate by only 2% results
in a reduction of the achievable security of 12 to 38 bits;
a larger reduction is observed for higher match rates.
As explained in Section V-C, under speciﬁc circum-
stances it may be reasonable to select k greater than
our choice k0 := tµ − (r − t)sfVδ/n, particularly if the
dispersion of the number of correct matches is small, or if
a larger decoding complexity is acceptable. On the other
hand, if the False Reject Rate (FRR) observed for k = k0
is too high or the decoding of the polynomial takes too
much time, k must be decreased. Any decrease of k from
the assumed optimal value k0 results in an increase of
the minimum match rate required for a certain security
level, and any increase of k results in a decrease of the
minimum match rate. In particular, setting k = k0 + ϵ
with ϵ > 0 increases the entropy estimation 15 by
ϵ log(r). For a given match rate µ, this results in the
same amount of entropy as setting k = k0 with match
rate µ + ϵ/t. Thus, for a given security level, decreasing
k by ϵ compensates an decrease of the match rate by ϵ/t.
As a consequence, the minimum match rates required for
a security level of 250 with k = k0 + ϵ can be estimated
by subtracting ϵ/tmax from the values given in Table I,
where tmax is the value of t0(r), for which f(t0(r), r) is
maximal. Analogously, the minimum match rates with
k = k0 − ϵ can be estimated by adding ϵ/tmax to the
values given in Table I. We give the respective values of
1/tmax in Table II.
We give an example how Table II can be used: Accord-
ing to Table I, for δ = 5 and s = 35, at least a match rate
µ = 87.9% is required to achieve a security of 250, given
that we set tµ−(r −t)sfVδ/n and select r and t = t0(r)
so that f(t, r) is maximized. However, if the False Reject
Rate (FRR) observed for these parameters is too high or
the decoding of the polynomial takes too much time, k
must be decreased. If setting k = tµ − (r − t)sfVδ/n − 3
results in an acceptable FRR and decoding performance,
we have ϵ = 3. This decrease of k implies that the match
rate has to be at least µ′ = 87.9% + 3 · 0.54% = 89.52%
to achieve the desired security of 250, where the value
0.54 is taken from Table II.
To get a feeling for the number of minutiae and thus
for the number of ﬁngers needed for a provable secure
scheme, we evaluate the minimum value t, for which we
still obtain a remaining entropy of 250 for a given µ. For
this evaluation we apply the following method.
161
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

First, we observe that t0(r) is continuous and un-
bounded for r > 0 and is zero for 1/e. Thus, for every
t′ > 0 there is a r′ with t′ = t0(r′); by deﬁnition of
t0(r), this pair (t′, r′) maximizes the function f(t, r′) over
t. Consequently, it suﬃces to search through all pairs
(t0(r), r) to ﬁnd the minimal t with f(t, r) ≥ 250.
On the other hand, the approximation of the remain-
ing entropy E by the continuous function f(t, r) will
result in an artiﬁcially smooth curve for the minimal t. In
particular, in the deﬁnition of f we have replaced k by a
real number, whereas in practice, k can only take integer
values. The small deviations of the truncated integer
k from its real valued optimum imply a corresponding
deviation of the achievable security E and hence, of the
minimal t required for a certain value of E. To obtain
a more realistic estimation of the minimal t, we set
k0(r) = ⌊t0(r)µ − (r − t0(r))sfVδ/n⌋ and determine the
minimal t0(r) for that (15) yields at least a value of
E ≥ 250 with t = t0(r) and k = k0(r).
Figure 3 shows the minimal number t of minutiae
required for a security of 250 as a function of the average
match rate µ for various parameters δ and s.
These curves also allow estimating the impact of
selecting a larger k to the minimum value t of minutiae.
As explained above, selecting k = k0(r)+ϵ compensates
a decrease of the match rate by ϵ/t, and analogously,
choosing k = k0(r) − ϵ equates an increase of the match
rate by ϵ/t. Therefore, for small ϵ, the minimum value of
t yielding a security of 250 with k = k0(r)±ϵ and a match
rate µ can be estimated as the value of t corresponding
to µ∓ϵ/t0 in Figure 3, where t0 is the value of t indicated
in Figure 3 for µ.
We give an example: for δ = 5 and s = 35, a
match rate µ = 0.9 requires at least t = 68 minu-
tiae in the template. If for this t, the corresponding
optimal r (maximizing function f(t, r), i.e., the r with
t = t0(r)) and k0 = ⌊tµ − (r − t)sfVδ/n⌋, the False
Reject Rate (FRR) observed is too high, k must be
decreased until the FRR becomes acceptable. If setting
k = ⌊tµ−(r−t)sfVδ/n⌋−3 results in an acceptable FRR,
we have ϵ = 3 and, using Table II, obtain a minimum
match rate of µ′ = 90% + 3 · 0.54% = 91.62%. For this
value, we get from Figure 3 that only a minimum of
t = 58 minutiae are required. We have taken the exact
values from our evaluation data, from which the curves
in Figure 3 have been drawn.
D. Numerical Parameter Optimization for Practical Se-
curity
In this section, we determine the minimal number
of minutiae required for a given match rate µ and
ﬁxed parameters δ and s, for which a security of 266
can be achieved against existing attacks. We do this
by numerically evaluating the estimates from (5) and
Theorem 9 for the expected number of operations needed
for polynomial reconstruction. Precisely, for each t we
maximize the estimates for W according to (5) and
Theorem 9, respectively, with respect to r over the
relevant range t + 1 ≤ r ≤ 0.45n/V⌈(3/4)δ⌉ (see Section
V-B), and identify the minimal t, for which an r from
this range exists so that the respective security exceeds
266. Again, we deploy the computer algebra program
PARI/GP.
Figure 4 shows the dependency of the minimal number
of minutiae in the template required to achieve a security
of 266 against the polynomial non-optimized attack pro-
posed in [12] according to (5). This estimation (5) also
provides an upper bound for the workload of the smart
polynomial reconstruction attack, and hence, the mini-
mum number of minutiae indicated in Figure 4 provides
a lower bound for the minimum number of minutiae
needed to ensure the same security level of 266 with
respect to the smart polynomial reconstruction, which
we consider as the best known attack. An approximate
lower bound of the security against this attack is given
by Theorem 9, and consequently, this estimation can
be used to determine an upper bound for the number
of minutiae needed to achieve a certain security level.
Figure 5 shows the dependency of the minimal number of
minutiae in the template required to achieve a security of
266 against the smart polynomial reconstruction attack
based on the estimation of Theorem 9. Since our empir-
ical results in [10] indicates that the number of minutiae
required according to Figure 4 can only be obtained by
used f ≥ 2 ﬁngers per person, and as the estimate of
Theorem 9 decreases with f, we will assume f = 2 (the
estimate (5) is independent of f).
For all considered parameters, the optimal value for
k is between 18 and 49. This implies that the num-
ber 117k log2 (k) of operations needed for a polynomial
interpolation (see Section IV-E2) is between 215.1 and
217.5, and thus, the 266 operations used as security
level roughly correspond to 250 trials. As a consequence,
our security bound considered for practical attacks is
comparable to the security bound used for provable
security in Section VI-C.
An interesting observation is that increasing the num-
ber of chaﬀ points does not generally increase security:
for each t, there is an optimal value for parameter r,
for which the estimates given by (5) and Theorem 9
are maximized. If r is increased further, the estimated
workload of the polynomial reconstruction attack for
optimally chosen k, decreases. This observation can
be explained by the inﬂuence of r on the number of
false matches. Speciﬁcally, the average number of false
matches increases linearly with the number (r−t) of chaﬀ
points. This increased number of false matches requires a
smaller value for parameter k in order to ensure eﬃcient
162
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 0
 20
 40
 60
 80
 100
 120
 140
 160
 0.82
 0.84
 0.86
 0.88
 0.9
 0.92
 0.94
 0.96
 0.98
 1
number of minutiae
match rate µ
δ=5
s=20
s=35
s=50
 0
 50
 100
 150
 200
 250
 300
 350
 0.88
 0.9
 0.92
 0.94
 0.96
 0.98
 1
number of minutiae
match rate
δ=7
s=20
s=35
s=50
Figure 3.
Dependency of the minimal number t of minutiae on the average match rate µ for a security of E ≥ 250, for (a) δ = 5 and (b)
δ = 7, respectively, and diﬀerent numbers s of surplus minutiae per ﬁnger.
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0.7
 0.75
 0.8
 0.85
 0.9
 0.95
 1
minimal number t of minutiae
match rate µ
δ=5
s=20
s=35
s=50
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0.7
 0.75
 0.8
 0.85
 0.9
 0.95
 1
minimal number t of minutiae
match rate µ
δ=7
s=20
s=35
s=50
Figure 4.
Dependency of the minimal number t of minutiae on the average match rate µ for δ = 5 and a security of 266 against the
non-optimized polynomial reconstruction attack of [12] for (a) δ = 5 and (b) δ = 7 and for diﬀerent numbers s of surplus minutiae per
ﬁnger.
decoding of the polynomial, and a smaller k reduces the
workload of the attack signiﬁcantly.
Our results allow a critical review of our assumptions
r ≪ 0.45n/V⌈d/2⌉ and r ≪ n/Vd used in Section IV.
For all parameters µ and s considered, the optimal r
fulﬁlls r < 408 for δ = 5 and r < 312 for δ = 5. This
implies that, for δ = 5 and f ≥ 2, the optimal r is by a
factor 4 smaller than the maximum value 0.45n/V⌈d/2⌉
with d ≈ (3/2)δ (see Section V-B), and for δ = 7 and
f ≥ 3, it is by a factor 3.5 smaller than the maximum
value. Consequently, at least for δ = 5 and f ≥ 2,
or for δ = 7 and f ≥ 3, respectively, our assumption
that the attack method of [11] is not very eﬃcient is
justiﬁed. Unfortunately, the validity of our assumption
rVd ≪ n used for the proof of Lemma 8 is less clear: for
δ = 5 and f = 2 as well as for δ = 7 and f = 3, the
fraction n/(rVd) is approximately 2.2. Thus, unless r is
chosen considerably smaller than its optimum, which is
possible by increasing the number t of minutiae, we must
expect some inaccuracy in our approximation that, on
average, each selected chaﬀ point reduces the number of
choices for the subsequent points by Vd. This inaccuracy
propagates to the estimation of Theorem 9. On the other
hand, our upper bound 1/ψ for the probability of a
minutiae occurring at location mji for all minutiae mji
processed by the smart polynomial reconstruction attack
is very conservative, because from Figure 2 we can see
that the area with the highest frequency of minutiae
occurrence, which is the bright area in the center, is quite
small. Therefore, we are very conﬁdent that Theorem 9
still underestimates the number of trials needed for the
smart polynomial reconstruction attack.
163
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 0
 10
 20
 30
 40
 50
 60
 70
 80
 0.7
 0.75
 0.8
 0.85
 0.9
 0.95
 1
minimal number t of minutiae
match rate µ
δ=5
s=20
s=35
s=50
 0
 10
 20
 30
 40
 50
 60
 70
 80
 0.7
 0.75
 0.8
 0.85
 0.9
 0.95
 1
minimal number t of minutiae
match rate µ
δ=7
s=20
s=35
s=50
Figure 5.
Dependency of the minimal number t of minutiae on the average match rate µ for δ = 5 and a security of 266 against the smart
polynomial reconstruction attack presented in Section IV-E2 for (a) δ = 5 and (b) δ = 7 and for diﬀerent numbers s of surplus minutiae
per ﬁnger.
E. Comparison with Empirical Data
The minimum match rates required for provable se-
curity are quite high. According to [4], matchings con-
ducted by a human expert results in rates of approxi-
mately 90%. Automatic matching algorithms only op-
erating on the minutiae data will yield considerably
lower rates, depending on the method, by which minu-
tiae correspondences are identiﬁed and the matching
tolerance applied. For instance, the distribution of the
distance of matching minutiae reported in literature (see
[55]) implies that a tolerance (with respect to Euclidean
distance) of δ < 10 will signiﬁcantly reduce the match
rates. The presence of chaﬀ points will further reduce
the performance of minutiae matcher algorithms.
On the other hand, the match rates can be greatly en-
hanced by using several minutiae measurements (per ﬁn-
ger) during enrollment to minimize measurement noise.
For instance, in [10], we present an implementation of the
fuzzy ﬁngerprint vault, which applies several minutiae
measurements per ﬁnger during enrollment and uses only
those minutiae that have been detected in all measure-
ments. Furthermore, the minutiae locations are set to
the mean value over the measurements. Empirical evalu-
ations show that this considerably increases the average
match rates, but, at the same, reduces the number of
minutiae available per ﬁnger. Hence, several ﬁngers must
be used to achieve the minimum values for t indicated
in Figure 3. Furthermore, the dispersion found in the
match rates is large so that, in order to limit the False
Rejection Rate, is seems necessary to choose k smaller
than the expectation of mc−mf (see Section V-C), which
further increases the required minimum match rates as
shown in Table II.
We found minutiae quality ﬁltering during authen-
tication using quality indices provided by the feature
extractor to be quite eﬀective to reduce the number s of
surplus (non-matching) minutiae per query ﬁngerprint
and, consequently, the number of false matches. How-
ever, the ﬁltering should not exceed a certain extent in
order to avoid disproportional reduction of the match
rate. Furthermore, the false match rates observed were
20% to 60% higher than our estimation sf(r −t)Vδ/n in
Section V-C predicts. This eﬀect is presumably due to
failures in the alignment of the query ﬁngerprint to the
vault.
Based on the observed statistics on match rates and
number of reliable minutiae, and given the results in
Table I, we conclude that provable security seems out
of reach, unless the average number of surplus minutiae
per query ﬁngerprint can be further reduced by improved
quality ﬁltering methods. Details on the empirical data
and our interpretation are given in [10].
On the other hand, our evaluation in [10] shows that
strong security (comparable to 64 bit keys) against the
(non-optimized) polynomial reconstruction attack can
be achieved using 2 ﬁngers per individual. Considering
our improvement by the smart polynomial reconstruc-
tion, an additional security margin should be added.
Based on the data provided in [10] we can estimate that
the same security can be achieved against our optimized
smart polynomial reconstruction attack using 3 ﬁngers
per user. As explained in Section IV-E, the number of
chaﬀ point should not be too close to the maximum
possible to render the attack method described in [11]
ineﬃcient, and the FAR should be determined for the
chosen parameters to allow estimation of the eﬀort for a
ﬁngerprint dictionary attack.
164
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

VII. Conclusions
Our analysis shows that a provably secure fuzzy ﬁn-
gerprint vault can hardly be achieved in practice. The
required rate of minutiae in the vault matching with
those in the query ﬁngerprints so high that it seems only
achievable by powerful quality ﬁltering during enroll-
ment. However, this ﬁltering approach conﬂicts with the
requirement for a large number of minutiae in the vault.
Given the empirical data on match rates in the literature,
in particular our analysis in [10], provable security seems
out of reach.
The usage of minutiae orientations as additional dis-
criminating data could surely increase the information
content of the templates. However, minutiae directions
bear strong dependencies with their spatial location and
with directions of nearby minutiae: according to [45],
“minutiae points in diﬀerent regions of the ﬁngerprint do-
main are observed to be associated with diﬀerent region-
speciﬁc minutiae directions”, and “minutiae points that
are spatially close tend to have similar directions with
each other”. Consequently, a template using both spatial
location and orientation of minutiae contains consider-
able redundancy and makes an analysis of the entropy
of the feature vector very diﬃcult. Moreover, since the
estimated entropy loss in the security bounds in Section
IV-C increases linearly with the number of bits in the
template, this decreases the percentage of entropy that
actually contributes to the provable security estimates.
On the other hand, our investigation of the most
eﬃcient attack methods indicates that the theoretical
lower bounds for security are far from being tight. The
underlying computational problem (polynomial recon-
struction) is believed to be hard and has been repeatedly
proposed as a basis for the security of cryptographic
techniques [52]. As a consequence, the match rates and
number of minutiae required to achieve security against
the existing attacks are much lower than the numbers
for provable security. Still, the empirical data presented
in [10] show that at least two ﬁngers per user must be
used to achieve a level of security equivalent to a 50 bit
cryptographic key. However, we stress that there is no
evidence that our optimized polynomial reconstruction
method is indeed the most eﬃcient attack. In particular,
before an implementation of the fuzzy ﬁngerprint vault
can be claimed to be secure, it must be veriﬁed that the
False Accept Rate (FAR) is in a range that ensures that a
ﬁngerprint dictionary attack is ineﬃcient. Unfortunately,
this requires a very large number of impostor matches,
precisely, in the range of 1/FAR. The numbers of ﬁngers
used in existing investigations for the fuzzy ﬁngerprint
vault, in particular in [6], [7], [8], [9] and [10], were far
too small to assess if an adequate security level against
the ﬁngerprint dictionary attack can be achieved.
Summarizing, our results seem to indicate that al-
though a provable secure fuzzy ﬁngerprint vault is out of
reach, it can provide suﬃcient security against practical
attacks if several ﬁngers are used.
Finally, secure biometric template protection schemes
may also be achievable using completely diﬀerent con-
structions. For instance, there exist approaches to apply
the fuzzy commitment scheme to ﬁngerprints. As shown
in [23], the entropy loss in the fuzzy commitment is much
lower than in the fuzzy vault. However, since the fuzzy
commitment scheme only tolerates errors that are small
with respect to the Hamming metric [13], sophisticated
encoding and signal processing techniques must be ap-
plied to compensate spatial rotations and translations of
the ﬁngerprint, as well as permutations, detections and
insertions of the detected minutiae. Several promising
techniques have been proposed, in particular, usage of
ﬁngerprint ridge patterns as biometric feature [20][56],
transformation of the minutiae data to the frequency do-
main [57] and using the characteristic vector of minutiae
occurrence with respect to a grid [58][59]. However, we
are not aware of any comprehensive security analysis for
these approaches based on estimations for the feature
vector’s entropy and the error correction required with-
out manual alignment of the ﬁngerprints.
Acknowledgments
This work was conducted as part of the project
“BioKeyS Pilot-DB” of the German Federal Oﬃce for
Information Security (Bundesamt f¨ur Sicherheit in der
Informationstechnik).
We would like to thank Patrick J¨ager for his assistance
in the numerical calculations and visualization.
References
[1] J. Merkle, M. Niesing, M. Schwaiger, H. Ihmor, and
U. Korte, “Provable security for the fuzzy ﬁngerprint
vault,”in Proceedings of the 5th International Conference
Internet Monitoring and Protection (ICIMP 2010), J. L.
Mauri and M. Popescu, Eds.
IEEE Computer Society,
2010, pp. 65–73.
[2] J. Breebaart, C. Busch, J. Grave, and E. Kindt, “A
reference architecture for biometric template protection
based on pseudo identities,” in BIOSIG 2008: Biomet-
rics and Electronic Signatures, ser. Lecture Notes in
Informatics, A. Br¨omme and C. Busch, Eds., vol. 137.
Gesellschaft f¨ur Informatik, 2008, pp. 25–38.
[3] A. Juels and M. Sudan, “A fuzzy vault scheme,” in
Proceedings of the 2002 IEEE International Symposium
on Information Theory.
IEEE, 2002, p. 408.
[4] U. Uludag, S. Pankanti, S. Prabhakar, and A. Jain,
“Biometric cryptosystems: Issues and challenges,” Pro-
ceedings of the IEEE, vol. 92, no. 6, pp. 948–960, 2004.
165
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[5] C. Clancy, N. Kiyavash, and D. Lin, “Secure smartcard-
based ﬁngerprint authentication,” in Proceedings of the
2003 ACM SIGMM Workshop on Biometrics Methods
and Applications (WBMA ’03).
ACM, 2003, pp. 45–52.
[6] U. Uludag, S. Pankanti, and A. Jain, “Fuzzy vault for
ﬁngerprints.” in Proceedings of the 5th International
Conference on Audio- and Video-Based Biometric Per-
son Authentication (AVBPA), ser. Lecture Notes in
Computer Science, vol. 3546.
Springer, 2005, pp. 310–
319.
[7] U. Uludag and A. Jain, “Securing ﬁngerprint template:
Fuzzy vault with helper data,” in Proceedings of the
2006 IEEE Conference on Computer Vision and Pattern
Recognition (CVPR 2006), Workshop on Privacy Re-
search In Vision, C. Schmid, S. Soatto, and C. Tomasi,
Eds.
IEEE Computer Society, 2006, pp. 163–169.
[8] K. Nandakumar, A. Jain, and S. Pankanti, “Fingerprint-
based fuzzy vault: Implementation and performance.”
IEEE Transactions on Information Forensics and Secu-
rity, vol. 2, no. 4, pp. 744–757, 2007.
[9] J. Li, X. Yang, J. Tian, P. Shi, and P. Li, “Topological
structure-based alignment for ﬁngerprint fuzzy vault,”
in Proceedings of the 19th International Conference on
Pattern Recognition (ICPR ’08).
Omnipress, 2008, pp.
1–4.
[10] J. Merkle, M. Niesing, M. Schwaiger, H. Ihmor, and
U. Korte, “Performance the fuzzy vault for multiple
ﬁngerprints (short version),” in BIOSIG 2010: Biomet-
rics and Electronic Signatures, ser. Lecture Notes in
Informatics, A. Br¨omme and C. Busch, Eds., vol. P-164.
Gesellschaft f¨ur Informatik, 2010, pp. 57–72.
[11] E.-C. Chang, R. Shen, and F. W. Teo, “Finding the
original point set hidden among chaﬀ,” in Proceedings
of the 2006 ACM Symposium on Information, Computer
& Communication Security (ASIACCS).
ACM, 2006,
pp. 182–188.
[12] P. Mihailescu, A. Munk, and B. Tams, “The fuzzy vault
for ﬁngerprints is vulnerable to brute force attack,” in
BIOSIG 2009: Biometrics and Electronic Signatures, ser.
Lecture Notes in Informatics, A. Br¨omme and C. Busch,
Eds., vol. 155.
Gesellschaft f¨ur Informatik, 2009, pp.
43–54.
[13] Y. Dodis, R. Ostrovsky, L. Reyzin, and A. Smith,“Fuzzy
extractors: How to generate strong keys from biometrics
and other noisy data.” SIAM Journal on Computing,
vol. 38, no. 1, pp. 97–139, 2008.
[14] C. Soutar, D. Roberge, A. Stoianov, R. Gilroy, and B. V.
Kumar, “Biometric encryption using image processing,”
in Proceedings of the SPIE, Optical Security and Coun-
terfeit Deterrence Techniques II, R. L. van Renesse, Ed.,
vol. 3314, 1998, p. 178˝U188.
[15] N. K. Ratha, J. H. Connell, and R. M. Bolle,“Enhancing
security and privacy of biometric-based authentication
systems,” IBM Systems Journal, vol. 40, 2001.
[16] J.-P. Linnartz and P. Tuyls, “New shielding functions to
enhance privacy and prevent misuse of biometric tem-
plates,”in Proceedings of the 4th international conference
on Audio- and video-based biometric person authentica-
tion (AVBPA’03).
Springer, 2003, pp. 393–402.
[17] Y. Chang, W. Zhang, and T. Chen, “Biometrics-based
cryptographic key generation,” in Proceedings of the
IEEE International Conference on Multimedia and Expo
(ICME ’04).
IEEE Computer Society, 2004, pp. 2203–
2206.
[18] C. Chen, R. Veldhuis, T. Kevenaar, and A. Akkermans,
“Multibits biometric string generation based on the like-
lyhood ratio,” in Proceedings of the IEEE Conference on
Biometrics: Theory, Applications and Systems (BTAS
’07).
IEEE Computer Society, 2007, pp. 1–6.
[19] A. Juels and M. Wattenberg, “A fuzzy commitment
scheme,” in Proceedings of the 6th ACM Conference on
Computer and Communication Security.
ACM, 1999,
pp. 28–36.
[20] U. Martini and S. Beinlich, “Virtual PIN: Biometric
encryption using coding theory,” in BIOSIG 2003: Bio-
metrics and Electronic Signatures, ser. Lecture Notes in
Informatics, A. Br¨omme and C. Busch, Eds., vol. 31.
Gesellschaft f¨ur Informatik, 2003, pp. 91–99.
[21] T. A. M. Kevenaar, G. J. Schrijen, M. van der Veen,
A. H. M. Akkermans, and F. Zuo,“Face recognition with
renewable and privacy preserving binary templates,” in
Proceedings of the Fourth IEEE Workshop on Automatic
Identiﬁcation Advanced Technologies.
IEEE Computer
Society, 2005, pp. 21–26.
[22] F. Hao, R. Anderson, and J. Daugman, “Combining
crypto with biometrics eﬀectively,”IEEE Transaction on
Computers, vol. 55, pp. 1081–1088, 2006.
[23] U. Korte, M. Krawczak, J. Merkle, R. Plaga, M. Niesing,
C. Tiemann, H. Vinck, and U. Martini,“A cryptographic
biometric authentication system based on genetic ﬁnger-
prints,” in Sicherheit 2008 - Sicherheit, Schutz und Zu-
verl¨assigkeit, ser. Lecture Notes in Informatics, A. Alka-
ssar and J. Siekmann, Eds., vol. 128.
Gesellschaft f¨ur
Informatik, 2008, pp. 263–276.
[24] Y. Lee, K. Bae, S. Lee, K. Park, and J. Kim, “Biometric
key binding: Fuzzy vault based on iris images,” in Ad-
vances in Biometrics, ser. Lecture Notes in Computer
Science, S.-W. Lee and S. Li, Eds.
Springer, 2007, vol.
4642, pp. 800–808.
[25] A. Juels and M. Sudan,“A fuzzy vault scheme,”Designs,
Codes and Cryptography, vol. 38, pp. 237–257, 2006.
[26] Y. Dodis, L. Reyzin, and A. Smith, “Fuzzy extractors:
How to generate strong keys from biometrics and other
noisy data,” in Advances in Cryptology - EUROCRYPT
2004, ser. Lecture Notes in Computer Science, C. Cachin
and J. Camenisch, Eds., vol. 3027.
Springer-Verlag,
2004, pp. 523–540.
166
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[27] S. Yang and I. Verbauwhede, “Automatic secure ﬁnger-
print veriﬁcation system based on fuzzy vault scheme,”
in Proceedings of the IEEE International Conference on
Acoustics, Speech and Signal Processing (ICASSP’05),
2005, pp. 609–612.
[28] P. Li, X. Yang, K. Cao, X. Tao, R. Wang, and J. Tian,
“An alignment-free ﬁngerprint cryptosystem based on
fuzzy vault scheme,” Journal of Network and Computer
Applications, vol. 33, pp. 207–220, 2010.
[29] A. Nagar, K. Nandakumar, and A. K. Jain, “Securing
ﬁngerprint template: Fuzzy vault with minutiae descrip-
tors,”in Proceedings of the 19th International Conference
on Pattern Recognition (ICPR ’08).
Omnipress, 2008,
pp. 1–4.
[30] W. J. Scheirer and T. E. Boult, “Cracking fuzzy vaults
and biometric encryption,”in Proceedings of the Biomet-
rics Symposium 2007, 2007, pp. 1–6.
[31] A. Kholmatov and B. Yanikoglu, “Realization of corre-
lation attack against the fuzzy vault scheme,” in Pro-
ceedings of the SPIE, Security, Forensics, Steganography,
and Watermarking of Multimedia Contents X, E. J. Delp,
Ed., vol. 6819, 2008, pp. 68 190O–68 190O–7.
[32] K. Nandakumar, A. Nagar, and A. K. Jain, “Hardening
ﬁngerprint fuzzy vault using password,”in Proceedings of
Advances in Biometrics, International Conference (ICB
2007), ser. Lecture Notes in Computer Science, S.-W.
Lee and S. Z. Li, Eds., vol. 4642.
Springer, 2007, pp.
927–937.
[33] J. Gu and J. Zhou,“A novel model for orientation ﬁeld of
ﬁngerprints,” in Proceeding of the 2003 IEEE Computer
Society Conference on Computer Vision and Pattern
Recognition (CVPR 2003).
IEEE Computer Society,
2003, pp. 2–493.
[34] S. C. Dass, Y. Zhu, and A. K. Jain, “Statistical models
for assessing the individuality of ﬁngerprints,” IEEE
Transactions on Information Forensics and Security,
vol. 2, pp. 391–401, 2007.
[35] R. Plaga, “Biometric keys: Suitable uses and achievable
information content,” International Journal on Informa-
tion Security, vol. 8, no. 6, pp. 447–454, 2009.
[36] T. Kevenaar, U. Korte, J. Merkle, M. Niesing, H. Ihmor,
C. Busch, and X. Zhou, “A reference framework for the
privacy assessment of biometric encryption systems,”
in BIOSIG 2010: : Biometrics and Electronic Signa-
tures, ser. Lecture Notes in Informatics, A. Br¨omme and
C. Busch, Eds., vol. P-164.
Gesellschaft f¨ur Informatik,
2010, pp. 45–56.
[37] R. Canetti, “Towards realizing random oracles: Hash
functions that hide all partial information,” in Advances
in Cryptology - CRYPTO ’97, ser. Lecture Notes in Com-
puter Science, B. S. Kaliski, Ed., vol. 1294.
Springer,
1997, pp. 455–469.
[38] M. Liu, X. Jiang, and A. C. Kot, “Fingerprint reference
point detection,” EURASIP Journal on Applied Signal
Processing, vol. 2005, pp. 498–509, 2005.
[39] P. Tuyls and J. Goseling, “Capacity and examples of
template-protecting biometric authentication systems,”
in Biometric Authentication: ECCV 2004 International
Workshop, BioAW 2004.
Springer, 2004, pp. 158–170.
[40] A. Bhargav-Spantzel, A. Squicciarini, and E. Bertino,
“Privacy preserving multi-factor authentication with
biometrics,” in DIM ’06: Proceedings of the Second ACM
Workshop on Digital Identity Management. ACM, 2006,
pp. 63–72.
[41] T. Ignatenko, “Secret-key rates and privacy leakage in
biometric systems,” Ph.D. dissertation, Eindhoven Uni-
versity of Technology, 2009.
[42] J. O. Pliam, “On the incomparability of entropy and
marginal guesswork in brute-force attacks,” in Progress
in Cryptology - INDOCRYPT 2000, B. K. Roy and
E. Okamoto, Eds.
Springer, 2000, pp. 67–79.
[43] I. R. Buhan, “Cryptographic keys from noisy data, the-
ory and applications,” Ph.D. dissertation, University of
Twente, 2008.
[44] S. Pankanti, S. Prabhakar, and A. Jain, “On the indi-
viduality of ﬁngerprints,” Proceedings of the 2001 IEEE
Computer Society Conference on Computer Vision and
Pattern Recognition (CVPR 2001), vol. 1, p. 805, 2001.
[45] Y. Zhu, S. C. Dass, and A. Jain, “Statistical models
for assessing the individuality of ﬁngerprints.” IEEE
Transactions on Information Forensics and Security,
vol. 2, no. 3-1, pp. 391–401, 2007.
[46] J. Chen and Y. S. Moon, “A statistical study on the
ﬁngerprint and minutiae distribution,” in Proceedings of
the 2006 IEEE International Conference on Acoustics,
Speech, and Signal Processing (ICASSP), P. Duhamel
and L. Vandendorpe, Eds.
IEEE Computer Society,
2006, pp. 169–172.
[47] C. Watson, M. Garris, E. Tabassi, C. Wilson, M. Mc-
Cabe, S. Janet, and K. Ko, User’s Guide to NIST
Biometric Image Software (NBIS), National Institute of
Standards and Technology, 2007.
[48] D. A. Stoney,“Distribution of epidermal ridge minutiae,”
American Journal of Physical Anthropology, vol. 77, pp.
367–376, 1988.
[49] S. Z. Li and A. K. Jain, Eds., Encyclopedia of Biometrics.
Springer US, 2009.
[50] A. Kiayias and M. Yung,“Cryptographic hardness based
on the decoding of reed-solomon codes,” IEEE Transac-
tions on Information Theory, vol. 54, no. 6, pp. 2752–
2769, 2008.
[51] V. Guruswami and A. Vardy, “Maximum-likelihood de-
coding of reed-solomon codes is NP-hard,” IEEE Trans-
actions on Information Theory, vol. 51, no. 7, pp. 2249–
2256, 2005.
[52] A. Kiayias and M. Yung, “Directions in polynomial re-
construction based cryptography,” IEICE Transactions
on Fundamentals of Electronics, Communications and
Computer Sciences, vol. E87-A, no. 5, pp. 978–985, 2004.
167
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[53] J. v. z. Gathen and J. Gerhard, Modern Computer
Algebra, 2nd ed.
Cambridge University Press, 2003.
[54] E. Tabassi, P. Grother, W. Salamon, and C. Watson,
“Minutiae interoperability,”in BIOSIG 2009: Biometrics
and Electronic Signatures, ser. Lecture Notes in Infor-
matics, A. Br¨omme and C. Busch, Eds., vol. P-155.
Gesellschaft f¨ur Informatik, 2009, pp. 13–30.
[55] A. Jain, S. Prabhakar, and S. Pankanti, “On the individ-
uality of ﬁngerprints,” in Proceedings of the 2001 IEEE
Computer Society Conference on Computer Vision and
Pattern Recognition (CVPR 2001).
IEEE Computer
Society, 2001, pp. I:805–812.
[56] P. Tuyls, A. Akkermans, T. Kevenaar, G. J. Schrijen,
A. Bazen, and R. Veldhuis, “Practical biometric authen-
tication with template protection.” in Proceedings of the
5th International Conference on Audio- and Video-Based
Biometric Person Authentication (AVBPA), ser. Lecture
Notes in Computer Science, T. Kanade, A. K. Jain, and
N. K. Ratha, Eds., vol. 3546.
Springer, 2005, pp. 436–
446.
[57] H. Xu and R. N. Veldhuis, “Spectral minutiae represen-
tations for ﬁngerprint recognition,” in Proceedings of the
Sixth International Conference on Intelligent Informa-
tion Hiding and Multimedia Signal Processing (IIHMSP
2010), I. Echizen, J.-S. Pan, D. Fellner, A. Nouak,
A. Kuijper, and L. C. Jain, Eds.
IEEE Computer
Society, 2010, pp. 341–345.
[58] A. Arakala, J. Jeﬀers, and K. Horadam, “Fuzzy extrac-
tors for minutiae-based ﬁngerprint authentication,” in
Advances in Biometrics: Proceedings of Second Interna-
tional Conference on Biometrics (ICB 2007).
Springer,
2007, pp. 760–769.
[59] S. Draper, A. Khisti, E. Martinian, A. Vetro, and
J. Yedidia, “Using distributed source coding to secure
ﬁngerprint biometrics,” in Proceedings of the 32nd In-
ternational Conference on Acoustics, Speech, and Signal
Processing (ICASSP), 2007, pp. II–129–II–132.
168
International Journal on Advances in Security, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

