Diffusion Approximation Models for Transient States
and their Application to Priority Queues
Tadeusz Czach´orski
IITiS PAN
Polish Academy of Sciences
44-100 Gliwice, ul. Baltycka 5, Poland
tadek@iitis.gliwice.pl
Tomasz Nycz
Centrum Komputerowe
Politechnika Slaska
44-100 Gliwice, ul. Akademicka 16, Poland
tomasz.nycz@polsl.pl
Ferhan Pekergin
LIPN
Universit´e Paris-Nord
93430 Villetaneuse, France
pekergin@lipn.univ-paris13.fr
Abstract—The article presents a diffusion approximation
model applied to investigate the behavior of priority queues.
We discusses the use of the diffusion approximation in transient
analysis of queueing models in the case of a single station and
of a queueing network presenting the solutions. We emphasize
the numerical aspect of the solution and analyze the errors.
In classical queuing theory, the analysis of transient states is
complex and practically does not go far beyond M/M/1 queue
and its modiﬁcations. However, the time dependent ﬂows in
computer networks and especially in Internet focus our interest
on transient-state analysis, which is necessary to investigate the
dynamics of TCP ﬂows cooperating with active queue manage-
ment or to see the changes of priority queues which assure the
differentiated QoS. With the use of G/G/1/N and G/G/1/N/PRIOR
models, we present the potentials of the diffusion approximation
and in conclusions we compare it with alternative methods:
Markovian queues solved numerically, ﬂuid-ﬂow approximation
and simulation. Diffusion approximation allows us to include
fairly general assumptions in queueing models. Besides the
transient state analysis, it gives us a tool to consider input streams
with general interarrival time distributions and servers with
general service time distributions. Single server models can be
easily incorporated into the network of queues. Here we apply the
diffusion approximation formalism to study transient and steady-
state behavior of G/G/1 and G/G/1/N priority preemptive models.
The models can be easily converted to non-preemptive queueing
discipline. The introduction of self-similar trafﬁc is possible as
well. The models can be useful in performance evaluation of
mechanisms to differentiate the quality of service e.g. in IP
routers, WiMAX, metro networks, etc.
Index terms — diffusion approximation, transient states,
priority queues.
I. INTRODUCTION
The paper extends results presented earlier in [11]. Classical
queueing models of priority queues are practically limited to
steady-state analysis of M/G/1 queues with non-preemptive or
preemptive resume priorities, see e.g. [18], [23], [19]. It is not
enough to analyze today mechanisms to ensure the quality
of service inside e.g. IP routers or in access networks where
the load is changing dynamically and the trafﬁc is entirely
different from Poisson streams. Therefore we adapt the method
of diffusion to consider transient states in the case of priority
queues. The method is based on Gelenbe’s model of G/G/1 and
G/G/1/N queue supplemented with our approach [5] to solve
transient states using this model. The single server models are
summarized in Section II, in Section III they are extended
to open network queueing models. We tested this approach
several times in other non-priority models, considering e.g. the
dynamics of FIFO queues in ATM routers [1], the dynamics
of queues in ATM multiplexers in the case of self-similar
trafﬁc [6], the stability of TCP connections in the presence
of AQM (RED queues) inside IP routers [8], investigating
transmission time in ad-hoc networks [9] or modeling trafﬁc
control by leaky-bucket algorithm [10]. Section IV presents
diffusion approximations of busy periods distributions which
are important for priority queues presented in Section V.
II. DIFFUSION APPROXIMATION OF A FIFO STATION
Let A(x), B(x) denote the interarrival and service time
distributions at a service station and a(x) and b(x) be their
density functions. The distributions are general but not spec-
iﬁed, the method requires only the knowledge of their ﬁrst
two moments. The means are denoted as E[A] = 1/λ,
E[B] = 1/µ and variances are Var[A] = σ2
A, Var[B] = σ2
B.
Denote also squared coefﬁcients of variation C2
A = σ2
Aλ2,
C2
B = σ2
Bµ2. N(t) represents the number of customers present
in the system at time t.
Diffusion approximation replaces the process N(t) by a
continuous diffusion process X(t), e.g. [25], the incremental
changes dX(t) = X(t + dt) − X(t) of which are normally
distributed with the mean βdt and variance αdt, where β, α
are coefﬁcients of the diffusion equation
∂f(x, t; x0)
∂t
= α
2
∂2f(x, t; x0)
∂x2
− β ∂f(x, t; x0)
∂x
.
(1)
This equation deﬁnes the conditional pdf of X(t):
f(x, t; x0)dx = P[x ≤ X(t) < x + dx | X(0) = x0].
The density of the diffusion process approximates the distri-
bution of N(t): p(n, t; n0) ≈ f(n, t; n0), and in steady state
p(n) ≈ f(n).
Both processes X(t) and N(t) have normally distributed
changes; the choice β = λ − µ, α = σ2
Aλ3 + σ2
Bµ3 = C2
Aλ +
C2
Bµ ensures that the parameters of these distributions grow
at the same rate with the length of the observation period.
More formal justiﬁcation of the use of diffusion approxi-
mation lies in limit theorems for G/G/1 system given e.g. in
[17]. If ˆNn is a series of random variables derived from N(t):
ˆNn = N(nt) − (λ − µ)nt
(σ2
Aλ3 + σ2
Bµ3)√n ,
205
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

then this series is weakly convergent (in the sense of distribu-
tion) to ξ, where ξ(t) is a standard Wiener process provided
that the system is overloaded and never attains equilibrium.
A. Unlimited queue: G/G/1 station, transient solution
The process N(t) is never negative, hence X(t) should be
also restrained to x ≥ 0. A simple solution is to put a reﬂecting
barrier at x = 0, see [22]. In this case
Z ∞
0
f(x, t; x0)dx = 1 ,
and
∂
∂t
Z ∞
0
f(x, t; x0)dx =
Z ∞
0
∂f(x, t; x0)
∂t
dx = 0 .
Replacing ∂f(x, t; x0)/∂t in the above integral by the right
side of the diffusion equation we obtain the boundary condi-
tion corresponding to the reﬂecting barrier at zero:
lim
x→0 [α
2
∂f(x, t; x0)
∂x
− βf(x, t; x0)] = 0 .
(2)
The solution of Eq. (1) with conditions (2) is, cf. [22]
f(x, t; x0) = ∂
∂x
h
Φ
x − x0 − βt
αt

− e
2βx
α Φ
x + x0 + βt
αt
i
where Φ(x) =
R x
−∞
1
√
2Π e−t2/2dt is the PDF of standard
normal distribution.
The reﬂecting barrier excludes the zero value of the process:
the process is immediately reﬂected. Therefore, this version
of diffusion process is a heavy-load approximation: it gives
reasonable results if the utilization of the investigated station
is close to 1, i.e. probability p(0) of the empty system is
negligible.
This inconvenience can be removed by the introduction of
another limit condition at x = 0: a barrier with instantaneous
(elementary) jumps [14]. When the diffusion process comes
to x = 0, it remains there for a time exponentially distributed
with a parameter λ0 and then returns to x = 1. The time
when the process is at x = 0 corresponds to the idle time of
the system.
The diffusion equation becomes
∂f(x, t; x0)
∂t
=
α
2
∂2f(x, t; x0)
∂x2
− β ∂f(x, t; x0)
∂x
+
λp0(t)δ(x − 1) ,
dp0(t)
dt
=
lim
x→0 [α
2
∂f(x, t; x0)
∂x
− βf(x, t; x0)] − λp0(t) ,
where p0(t) = P[X(t) = 0]. The term λp0(t)δ(x−1) gives the
probability density that the process is started at point x = 1
at the moment t because of the jump from the barrier. The
second equation makes the balance of the p0(t): the term
limx→0 [ α
2
∂f(x,t;x0)
∂x
− βf(x, t; x0)] gives the probability ﬂow
into the barrier and the term λp0(t) represents the probability
ﬂow out of the barrier.
Our approach, see [5], to obtain the function f(x, t; x0) of
the process with jumps from the barrier is to express it with
the use of another pdf φ(x, t; x0) for the diffusion process
with the absorbing barrier at x = 0. This process starts at
t = 0 from x = x0 and ends when it attains the barrier. Its
probability density function is easier to determine and has the
following form [4],
φ(x, t; x0) = e
β
α (x−x0)− β2
2α t
√
2Π αt

e− (x−x0)2
2αt
− e− (x+x0)2
2αt

. (3)
The density function of the ﬁrst passage time from x = x0 to
x = 0 is
γx0,0(t)
=
lim
x→0[α
2
∂
∂xφ(x, t; x0) − βφ(x, t; x0)] =
=
x0
√
2Π αt3 e− (βt+1)2
2αt
.
(4)
Suppose that the process starts at t = 0 at a point x with
density ψ(x) and every time it comes to the barrier it stays
there for a time given by a density function l0(x) and then
reappears at x = 1. The total stream γ0(t) of probability mass
that enters the barrier is
γ0(t)
=
p0(0)δ(t) + [1 − p0(0)]γψ,0(t) +
Z t
0
g1(τ)γ1,0(t − τ)dτ
(5)
where
γψ,0(t)
=
Z ∞
0
γξ,0(t)ψ(ξ)dξ ,
g1(τ)
=
Z τ
0
γ0(t)l0(τ − t)dt .
The density function of the diffusion process with instanta-
neous returns is
f(x, t; x0) = φ(x, t; ψ) +
Z t
0
g1(τ)φ(x, t − τ; 1)dτ .
(6)
For Laplace transforms of these equations we have
¯γ0(s)
=
p0(0) + [1 − p0(0)]¯γψ,0(s) + ¯g1(s)¯γ1,0(s) ,
¯g1(s)
=
¯γ0(s)¯l0(s)
(7)
where
¯γx0,0(s) = e−x0
β+A(s)
α
,
¯γψ,0(s) =
Z ∞
0
¯γξ,0(s)ψ(ξ)dξ ,
and then
¯g1(s) =
h
p0(0) + [1 − p0(0)]¯γψ,0(s)
i
¯l0(s)
1 − ¯l0(s)¯γ1,0(s) . (8)
Equation (6) in terms of Laplace transform becomes
¯f(x, s; x0) = ¯φ(x, s; ψ) + ¯g1(s)¯φ(x, s; 1) ,
where
¯φ(x, s; x0)
=
e
β(x−x0)
α
A(s)
h
e−|x−x0| A(s)
α
− e−|x+x0| A(s)
α
i
,
¯φ(x, s; ψ)
=
Z ∞
0
¯φ(x, s; ξ)ψ(ξ)dξ ,
A(s) =
p
β2 + 2αs .
The inverse transforms of these functions could only be found
numerically. For this purpose we use the Stehfest’s algorithm
206
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

[28]: for any ﬁxed argument t, the function f(t) is obtained
from its transform ¯f(s) as
f(t) = ln 2
2
N
X
i=1
Vi ¯f
ln 2
t i

,
(9)
where
Vi = (−1)N/2+i
min(i,N/2)
X
k=⌊ i+1
2 ⌋
kN/2+1(2k)!
(N/2 − k)!k!(k − 1)!(i − k)!(2k − i)!.
N is an even integer and its choice depends on a computer
precision; we used N = 12 − 40.
The above transient solution of G/G/1 model assumes
that the parameters of this model are constant. If they are
evolving, we should deﬁne the time-periods where they can
be considered constant and solve diffusion equation within
these intervals separately. A transient solution obtained at the
end of an interval serves as the initial condition for the next
interval.
B. Limited queue: G/G/1/N station, transient solution
In the case of G/G/1/N station, the second barrier should
be placed at x = N. When the process comes to this barrier,
it stays there for a time corresponding to the period when the
queue is full and incoming customers are lost and then, after
the completion of the current service, the process jumps to
x = N − 1.
The model equations become [14]
∂f(x, t; x0)
∂t
=
α
2
∂2f(x, t; x0)
∂x2
− β ∂f(x, t; x0)
∂x
+
+λ0p0(t)δ(x − 1) + λNpN(t)δ(x − N + 1) ,
dp0(t)
dt
=
lim
x→0 [α
2
∂f(x, t; x0)
∂x
− βf(x, t; x0)] − λ0p0(t) ,
dpN(t)
dt
=
lim
x→N [−α
2
∂f(x, t; x0)
∂x
+ βf(x, t; x0)] −
λNpN(t) ,
(10)
where δ(x) is Dirac delta function.
The density function f(x, t; x0) is obtained in the similar
way as previously. First we obtain the density φ(x, t; x0) of
the diffusion process with two absorbing barriers at x = 0 and
x = N, started at t = 0 from x = x0, cf. [4]
φ(x, t; x0) =
1
√
2Π αt
∞
X
n=−∞
(an − bn)
where
an
=
exp
βx′
n
α
− (x − x0 − x′
n − βt)2
2αt

bn
=
exp
βx′′
n
α
− (x − x0 − x′′
n − βt)2
2αt

and x′
n = 2nN, x′′
n = −2x0 − x′
n .
If the initial condition is deﬁned by a function ψ(x), x ∈
(0, N), limx→0 ψ(x) = limx→N ψ(x) = 0, then the pdf of
the process has the form φ(x, t; ψ) =
R N
0 φ(x, t; ξ)ψ(ξ)dξ.
Then the pdf f(x, t; ψ) of the diffusion process with ele-
mentary returns from both barriers is expressed as
f(x, t; ψ)
=
φ(x, t; ψ) +
Z t
0
g1(τ)φ(x, t − τ; 1)dτ +
Z t
0
gN−1(τ)φ(x, t − τ; N − 1)dτ .
Densities γ0(t), γN(t) of the probability that at time t the
process enters to x = 0 or x = N are
γ0(t)
=
p0(0)δ(t) + [1 − p0(0) − pN(0)]γψ,0(t) +
+
Z t
0
g1(τ)γ1,0(t − τ)dτ +
+
Z t
0
gN−1(τ)γN−1,0(t − τ)dτ ,
γN(t)
=
pN(0)δ(t) + [1 − p0(0) − pN(0)]γψ,N(t) +
+
Z t
0
g1(τ)γ1,N(t − τ)dτ +
+
Z t
0
gN−1(τ)γN−1,N(t − τ)dτ ,
where γ1,0(t), γ1,N(t), γN−1,0(t), γN−1,N(t) are the densities
of the ﬁrst passage times between corresponding points, e.g.
γ1,0(t) = lim
x→0[α
2
∂φ(x, t; 1)
∂x
− βφ(x, t; 1)] .
(11)
The functions γψ,0(t), γψ,N(t) denote densities of the proba-
bilities that the initial process, started at t = 0 at the point ξ
with density ψ(ξ), will end at time t by entering respectively
x = 0 or x = N.
Finally, we can express g1(t) and gN(t) with the use of
functions γ0(t) and γN(t):
g1(τ)
=
Z τ
0
γ0(t)l0(τ − t)dt ,
gN−1(τ)
=
Z τ
0
γN(t)lN(τ − t)dt ,
where l0(x), lN(x) are the densities of sojourn times in x = 0
and x = N; the distributions of these times are not restricted
to exponential ones.
The presented transient solutions tend as t → ∞ to the
known steady-state solutions, given by [14]:
f(x) =











λp0
−β (1 − ezx)
for
0 < x ≤ 1 ,
λp0
−β (e−z − 1)ezx
for
1 ≤ x ≤ N − 1 ,
µpN
−β (ez(x−N) − 1)
for
N − 1 ≤ x < N ,
(12)
where z = 2β
α and p0, pN are determined through normaliza-
tion
p0
=
lim
t→∞ p0(t) = {1 + ̺ez(N−1) +
̺
1 − ̺[1 − ez(N−1)]}−1 ,
pN
=
lim
t→∞ pN(t) = ̺p0ez(N−1) .
207
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

Customer classes. As proposed in [15], the input stream
λ can be composed of K classes of customers and λ =
PK
k=1 λ(k) (all parameters concerning class k have an upper
index with brackets) then the joint service time pdf is deﬁned
as
b(x) =
K
X
k=1
λ(k)
λ b(k)(x) ,
hence
1
µ =
K
X
k=1
λ(k)
λ
1
µ(k) ,
and
C2
B = µ2
K
X
k=1
λ(k)
λ
1
µ2
(k)
(C(k)
B
2 + 1) − 1 .
We assume that the input streams of different class cus-
tomers are mutually independent, the number of class k
customers that arrived within sufﬁciently long period of time
is normally distributed with variance λ(k)C(k)
A
2; the sum of
independent randomly distributed variables also has normal
distribution with variance which is the sum of composing
variances, hence
C2
A =
K
X
k=1
λ(k)
λ C(k)
A
2 .
(13)
The above parameters yield α, β of the diffusion equation;
function f(x) approximates the distribution p(n) of customers
of all classes present in the queue: p(n) ≈ f(n) and the
probability that there are n(k) customers of class k is
pk(n(k))
=
=
N
X
n=n(k)
"
p(n)

n
n(k)
 
λ(k)
λ
n(k) 
1 − λ(k)
λ
n−n(k)#
,
k = 1, . . . , K .
Numerical examples. We consider a G/G/1/30 queue (in
fact, it is M/M/1/30 queue, as we assume C2
A = C2
B = 1). In
Example 1 the input rate λ(t) is varying in time as presented in
Fig. 1. It represents a typical TCP ﬂow with additive increases
and multiplicative decreases in the case of packet losses, the
range of time is [0,100] time units. In computations, the values
of diffusion parameters are changed each 0.5 time unit. Figs.
2 - 5 present the main results of the diffusion model compared
with the simulation results (in the latter case it is the average
of 500 000 independent runs).
In Figs. 2 and 3 display the same numerical results con-
cerning the values of the mean queue. Fig. 2 displays them
in linear scale and Fig. 3 does it in logarithmic scale, to see
better the errors of the diffusion approximation: they become
visible for very small mean queue values, i.e. less then 0.001
at this model. Next ﬁgures present the probability p(0, t) of the
empty queue as a function of time, following time-dependent
 0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
 1.4
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
Input rate
Lambda
Fig. 1.
Example 1: Input trafﬁc intensity λ(t).
input, Fig. 4, and the probability p(N, t) that the queue is full,
i.e. saturated, and rejects the arriving customers, Fig. 5.
In Example 2 the input rate is periodically varying between
values 0.25 and 5. Figs. 6, 7, 8 display the same kind of results
as previously: the mean number of customers, the probability
of the empty and the probability of the saturated queue as a
function of time. All results prove an almost perfect match of
diffusion and simulation results. All simulations in the article
have been performed with the use of OMNET++ [26].
III. OPEN NETWORK OF G/G/1/N QUEUES
The diffusion steady state model of an open network of
G/G/1 or G/G/1/N queues was presented in [15]. Below we
present its short summary. Let M be the number of stations,
the throughput of station i is, as usual, obtained from trafﬁc
equations
λi = λ0i +
M
X
j=1
λjrji ,
i = 1, . . . , M,
(14)
where rji is routing probability between station j and station
i; λ0i is external ﬂow of customers coming from outside of
network.
The second moment of interarrival time distribution is
obtained from two systems of equations; the ﬁrst deﬁnes C2
Di,
the squared coefﬁcient of variation of interdeparture times
distribution at station i, as a function of C2
Ai and C2
Bi; the
second deﬁnes C2
Aj as another function of C2
D1, . . . , C2
DM :
1) The formula (15) deﬁning the density function di(x)
of interdeparture times at station i is exact for M/G/1,
M/G/1/N stations and is approximate in the case of non-
Poisson input [3]
di(x) = ̺ibx(t) + (1 − ̺i)ai(x) ∗ bi(x) ,
i = 1, . . . , M,
(15)
where * denotes the convolution operation. From (15) we get
C2
Di = ̺2
i C2
Bi + C2
Ai(1 − ̺i) + ̺i(1 − ̺i) .
(16)
208
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

 0
 1
 2
 3
 4
 5
 6
 7
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
G/G/1/N Model
Mean Queue Length E[N] Diffusion
Mean Queue Length E[N] Simulation
Fig. 2.
Example 1: The mean number of customers as a function of time;
diffusion approximation and simulation results. .
 0.0001
 0.001
 0.01
 0.1
 1
 10
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
G/G/1/N Model
Mean Queue Length E[N] Diffusion Logarithmic scale
Mean Queue Length E[N] Simulation Logarithmic scale
Fig. 3.
Example 1: The mean number of customers (logarithmic scale) as a
function of time; diffusion approximation and simulation results. .
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 1
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
G/G/1/N Model
p(0) Diffusion
p(0) Simulation
Fig. 4.
Example 1: The probability p(0, t) of the empty queue, diffusion
approximation and simulation results.
 0
 5e-005
 0.0001
 0.00015
 0.0002
 0.00025
 0.0003
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
G/G/1/N Model
Probability of saturated queue p(N), Diffusion
Probability of saturated queue p(N), Simulation
Fig. 5.
Example 1: The probability p(N, t) of the saturated queue, diffusion
approximation and simulation results.
 0
 2
 4
 6
 8
 10
 12
 14
 16
 18
 20
 0
 50
 100
 150
 200
 250
 300
G/G/1/N Model
Mean Queue Length E[N] Diffusion
Mean Queue Length E[N] Simulation
Fig. 6.
Example 2: The mean number of customers as a function of time;
diffusion approximation and simulation results. .
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 1
 0
 50
 100
 150
 200
 250
 300
G/G/1/N Model
Probability of empty queue p(0), Diffusion
Probability of empty queue p(0), Simulation
Fig. 7.
Example 2: The probability p(0, t) of the empty queue, diffusion
approximation and simulation results.
209
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 0
 50
 100
 150
 200
 250
 300
G/G/1/N Model
Probability of saturated queue p(N), diffusion
Probability of saturated queue p(N), simulation
Fig. 8.
Example 2: The probability p(N, t) of the saturated queue, diffusion
approximation and simulation results.
2) Customers leaving station i choose station j with proba-
bility rij: intervals between customers passing this way have
the pdf dij(x)
dij(x)
=
di(x)rij + di(x) ∗ di(x)(1 − rij)rij +
+ di(x) ∗ di(x) ∗ di(x)(1 − rij)2rij + · · ·
or, after Laplace transform,
¯dij(s)
=
¯di(s)rij + ¯di(s)2(1 − rij)rij +
+ ¯di(s)3(1 − rij)2rij + · · · =
rij ¯di(s)
1 − (1 − rij) ¯di(s) ,
hence
E[Dij] =
1
λirij
,
C2
Dij = rij(C2
Di − 1) + 1 .
(17)
E[Dij], C2
Dij refer to interdeparture times; the number of
customers passing from station i to j in a time interval t
has approximately normal distribution with mean λirijt and
variation C2
Dijλirijt. The sum of streams entering station j
has normal distribution with mean
λjt = [
M
X
i=1
λirij + λ0j] t
and variance
σ2
Ajt = {
M
X
i=1
C2
Dijλirij + C2
0jλ0j}t ,
hence
C2
Aj = 1
λj
M
X
i=1
rijλi[(C2
Di − 1)rij + 1] + C2
0jλ0j
λj
.
(18)
Parameters λ0j, C2
0j represent the external stream of cus-
tomers.
For K classes of customers with routing probabilities r(k)
ij
(let us assume for the sake of simplicity that the customers do
not change their classes) we have
λ(k)
i
= λ(k)
0i +
M
X
j=1
λ(k)
j r(k)
ji ,
i = 1, . . . , M; k = 1, . . . , K,
(19)
and
C2
Di
=
λi
K
X
k=1
λ(k)
i
µ(k)
i
2 [C(k)
Bi
2 + 1] + 2̺i(1 − ̺i) +
+(C2
Ai + 1)(1 − ̺i) − 1 .
(20)
A customer in the stream leaving station i belongs to class k
with probability λ(k)
i
/λi and we can determine C(k)
Di
2 in the
similar way as it has been done in Eqs. (17-18), replacing rij
by λ(k)
i
/λi:
C(k)
Di
2 = λ(k)
i
λi
(C2
Di − 1) + 1 ;
(21)
then
C2
Aj
=
1
λj
K
X
l=1
K
X
k=1
r(k)
ij λi
" 
λ(k)
i
λi
(C2
Di − 1)
!
r(k)
ij + 1
#
+
K
X
k=1
C(k)
0j
2λ(k)
0j
λj
.
(22)
Eqs. (16), (18) or (20), (22) form a linear system of
equations and allow us to determine C2
Ai and, in consequence,
parameters βi, αi for each station.
In the case of transient analysis, the time axis is divided
into small intervals (equal e.g to the smallest mean service
time) and at the beginning of each interval the Eqs. (14),
(16), (18) are used to determine the input parameters of each
station based on the values of ̺i(t) obtained at the end of
the precedent interval. A software tool was prepared and the
examples below, concerning 2 network topologies, see Fig. 9
a,b, are computed with its use.
Example 3. The network is composed of the source and
three stations in tandem, Fig. 9a. The source parameters are:
λ = 0.1 t ∈ [0, 10],
λ = 4.0 t ∈ [10, 20]. Parameters of all
stations are the same: Ni = 10, µi = 2, C2
Bi = 1, i = 1, 2, 3.
Fig. 10a presents mean queue lengths of stations in Model
1 as a function of time. Diffusion approximation is compared
with simulation.
Example 4. The network topology is as in Fig. 9b. The
characteristics of three sources and of one station are changing
with time in the following pattern:
source A: λA = 0.1 for t ∈ [0, 10], λA = 4.0 for t ∈ [10, 21],
λA = 0.1 for t ∈ [21, 40],
source B: λB = 0.1 for t ∈ [0, 11], λB = 4.0 for t ∈ [11, 20],
λB = 0.1 for t ∈ [20, 40],
source C: λC = 0.1 for t ∈ [0, 15], λC = 2.0 for t ∈ [15, 22],
λC = 4.0 for t ∈ [22, 30], λC = 2.0 for t ∈ [30, 31], λC = 0.1
for t ∈ [31, 40].
210
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

(a)
source
station 1
station 2
station 3
(b)
source A
station 2
station 4
station 5
station 6
station 3
source C
source B
station 1
Fig. 9.
Example 3 and 4 network topologies
Station 6: µ6 = 2 for t ∈ [10, 15] and t ∈ [31, 40]; µ6 = 4 for
t ∈ [15, 31].
Other parameters are constant: maximum queue lengths
N1 = N4 = 10, N3 = 5, N2 = N6 = 20, µ1 = · · · = µ5 = 2.
Routing probabilities are: r12 = r13 = r14 = 1/3, r64 = 0.8.
Initial state: N1(0) = 5, N1(0) = 5, N2(0) = 10, N3(0) = 10,
N4(0) = 5, N5(0) = 5, N6(0) = 10. The results in the
form of mean queue lengths are presented and compared with
simulation in Figs. 10, 11.
We observe that the output of queueing network models is
not as good as in the case of single station models, but still
reasonable.
IV. DIFFUSION APPROXIMATION OF THE G/G/1 AND
G/G/1/N BUSY PERIODS
Busy periods play an important role in the description
of priority queues. During a busy period of higher priority
customers, the sever is not available for lower priorities.
A. G/G/1 station
Let Γ(t) and γ(t) denote PDF and pdf of the busy period
duration; for the M/M/1 system the function γ(t) is known
explicitly [19]
γ(t) =
1
t√̺e(λ+µ)tI1(2tµ̺)
where I1(x) = x
2
P∞
k=0
1
k!(k+1)!

(a)
0
1
2
3
4
5
6
7
8
9
10
0
5
10
15
20
25
30
35
40
station 3, diffusion
station 3, simulation
station 4, diffusion
station 4, simulation
source A
source B
source C
(b)
0
2
4
6
8
10
12
14
16
18
20
0
5
10
15
20
25
30
35
40
station 5, diffusion
station 5, simulation
station 6, diffusion
station 6, simulation
source A
source B
source C
Fig. 11.
Example 4: The mean queue lengths of station3 and station4 (a)
and of station5 and station6 (b)
B. Busy period at G/G/1/N
As the process starting at x = 1 may visit the barrier at
x = N an unlimited number of times before coming to x =
0, the density function of the busy period is, preserving the
previously used notation
γ(t)
=
γ1,0(t) + γ1,N(t) ∗ lN(t) ∗ γN−1,0(t) +
+ γ1,N(t) ∗ lN(t) ∗ γN−1,N(t) ∗ lN(t) ∗ γN−1,0(t) + . . .
(25)
where * denotes the convolution operator, or
¯γ(s)
=
¯γ1,0(s) + ¯γ1,N(s)lN(s)¯γN−1,0(s) +
+ ¯γ1,N(s)¯lN(s)¯γN−1,N(s)¯lN(s)¯γN−1,0(s) + . . .
=
¯γ1,0(s) + ¯γ1,N(s)lN(s)¯γN−1,0(s)
1 − ¯γ1,N(s)lN(s)
.
(26)
Fig. 12 presents the comparison of busy period pdf given
by diffusion approximation and simulation.
 0.001
 0.01
 0.1
 1
 0
 5
 10
 15
 20
 25
G/G/1/N Model
Busy Periods Diffusion
Busy Periods Simulation 1879107 periods
Fig. 12.
M/M/1/20 queue, ̺ = 0.75, busy period diffusion approximation
compared with simulation (histogram of over 1.8 million samples).
V. DIFFUSION APPROXIMATION OF PREEMPTIVE - RESUME
PRIORITY SYSTEM
This paragraph introduces a diffusion model of a single
server with priority preemptive - resume queuing discipline.
Customers arriving to the system are divided into a certain
number, say K, of classes. Each class is distinguished by its
index k, k = 1, . . . , K, and has its own priority. The lower
the number of the index, the higher the priority of the class.
When a customer of class k is being served and a customer of
class l, l < k arrives, the current service is suspended and the
service of the newcomer begins. After the completion of this
service and the service of other, more privileged than class
k customers, who have arrived meanwhile, the interrupted
service is resumed at the point of suspension. Customers of
the same priority class are served in the order of arrival. The
presence of lower class customers is transparent to customers
of a given class. We assume that interarrival times in the
particular stream are characterized by parameters λ(k), σ(k)2
A
having the same meaning as λ, σ2
A in the case of one-class
system. The service time of customers of class k has mean
value 1/µ(k) and variance σ(k)2
B
.
Following exactly the same procedure as for the FIFO
system, we deﬁne: input process E(K)(t) as the total number
of customers of all K classes who arrived to the system during
the time period [0, t], and the output process H(K)(t) as the
number of customers of all K classes who left the system
in [0, t]. Applying the central limit theorem and using the
same arguments as for the ﬁrst-come-ﬁrst-served discipline,
we can prove that these processes have approximately normal
distributions if the period [0, t] is sufﬁciently long and within a
busy period of the server. The input process E(K)(t) consists
of separate input processes ε(k)(t) for each class of customers:
E(K)(t) =
K
X
k=1
ε(k)(t)
212
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

The output process H(K)(t) can be described as
H(K)(t)
=
K
X
k=1
η(k)(t)
̺(k)
1 − R(k−1) (1 − R(k−1))
1
R(k)
=
K
X
k=1
̺(k)
R(k) η(k)(t)
(27)
where η(k)(t) is the output process for the k-priority stream
in the absence of other classes, R(k) = P(k)
t=1 ̺(l) and ̺(l) =
λ(l)/µ(l). R(k) denotes the probability that the busy period for
customers of classes 1, ..., k taken altogether is in progress,
̺(k)
1−R(k) denotes the probability that a customer of class k is
present in the system. Class k has the 1 − R(k−1) part of the
server time at its disposal. 1 − R(k−1) denotes the probability
that there are no customers of priority higher than k present in
the system. The total number of customers of classes 1, ..., K
present in the system
N (K)(t) = E(K)(t) − H(K)(t)
is changing and its changes during the time period [0, t] have
the mean β(K)t and the variance α(K)t,
β(K)
=
K
X
k=1
λ(k) −
K
X
k=1
̺(k)
R(k) µ(k),
α(K)
=
K
X
k=1
λ(k)C(k)2
A
+
K
X
k=1
̺(k)
R(k) µ(k)C(k)2
B
,
C(k)2
A
=
λ(k)2σ(k)2
A
,
C(k)2
B
= µ(k)2σ(k)2
B
and are approximately normally distributed. We replace the
discrete-state process N (K)(t) by the continuous-state process
X(K)(t) whose inﬁnitesimal changes have normal distribution
with the mean βKdt and the variance αKdt. Solving the
diffusion equation with the same type of boundary condi-
tions as deﬁned earlier with the intensity of jumps from
x = 0: Λ(K) = PK
k=1 λ(k) we obtain the density function
f (K)(x, t; x0) for all classes considered together.
Let v(K)(n) denote the probability that n customers of class
K are present in the system and p(K−1)(N − n) denote the
probability that N−n customers of all other classes are present
in the system. Obviously,
p(K)(N) =
N
X
n=0
p(K−1)(N − n)v(K)(n)
and similarily,
p(k)(n) =
n
X
ν=0
p(k−1)(n − ν)v(k)(ν),
k = 2, ..., K
or
vk(n) = p(k)(n) − Pn−1
ν=0 p(k−1)(n − ν)v(k)(ν)
p(k−1)(0)
,
k = 2, ..., K.
For the highest priority class
v(1)(n) = p(1)(n).
Thus, we know the distribution vk(n), the mean number of
customers present in the system
E[n(k)] =
∞
X
ν=0
v(k)(ν)ν
and, by Little’s result, the mean time they spend in the system
E[T (k)] = E[n(k)]
λ(k)
k = 1, ..., K
for each class of customers.
The inconvenience of this approach is the propagation of
errors of the method. An alternative approach is to study the
diffusion processes corresponding to the number of each class
customers separately and to see the inﬂuence of higher classes
on the queues of lower classes through the probability that the
system is occupied by higher classes and thus is not able to
serve the lower ones.
For example, if we take two classes, the ﬁrst diffusion
process corresponding to the priority class has parameters
β(1) = λ(1) − µ(1) and α(1) = σ(1)2
A
λ(1)3 + σ(1)2
B
µ(1)3 and the
second one, corresponding to the lower class which is served
only in absence of the higher class, has the parameters
β(2)
=
λ(2) − µ(2)p(1)(0, t)
α(2)
=
σ(1)2
A
λ(1)3 + σ(2)2
A
λ(2)3 + σ(2)2
B
µ(2)3p(1)(0, t) +
+σ(1)2
B
µ(1)3.
Before the waiting time can be considered, we have to
deﬁne the distribution of the completion time. The completion
time is the time period between the beginning and the end
of the service of any customer. On the highest priority level
the completion time is equal to the service time, for the other
classes it additionally includes the breaks caused by the service
of more privileged customers. Let T be the service time of a
customer of class k. If n customers of classes 1, ..., k−1 arrive
during the time T, the service will be interrupted n times, n
has approximately normal distribution with the mean Λ(k−1)
and the variance Pk−1
l=1 λ(l)C(l)2
A T.
The duration of any of n breaks is distributed like the
busy period γ(k−1) of the system serving customers of classes
1, ..., k − 1. The total time of breaks in T has the pdf
ϕ(k)(t
 T) =
∞
X
n=0
pn|T γ(k−1)(∗n)(t)
where pn|T is the probability of n breaks in T, γ(k−1)(∗n)(t)
is the n-fold convolution of γ(k−1)(t) with itself. Thus the pdf
c(k)(t) of the completion time is
c(k)(t) =
Z ∞
0
b(k)(t)ϕ(k)(t − T
 T)1(t − T)dT,
where 1(t) = 0 for t < 0 and 1(t) = 1 for t ≥ 0, and from
its Laplace transform
c(k)(s) =
Z ∞
0
b(k)(T)e−sT
∞
X
n=0
{pn/T [¯γ(k)(s)]n}dT
213
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

we obtain its moments E = [c(k)] and E[(c(k))2]:
E = [c(k)]
=
− d
dsc(k)(s)s=0 = {E[γ(k−1)]Λ(k−1) + 1} 1
µ(k) ,
E[(c(k))2]
=
d2
ds2 c(k)(s)s=0 =
=
E[γ(k−1)]2h(k−1)
X
l=1
λ(l)C(l)2
A
 1
µ(k) +
−
Λ(k−1)
1
µ(k)
i
+ E[(γ(k−1))2]Λ(k−1)
1
µ(k) +
+
E[γ(k−1)]E[(b(k))2]Λ(k) ·
·{E[γ(k−1)]Λ(k−1) + 2} + E[(b(k))2].
When all input streams are Poisson, i.e. C(l)2
A
= 1, l =
1, ..., k the results are identical to the exact formula given for
this case in [18]. Finally, we can deﬁne the mean waiting time
for every priority level as
E[w(k)] = E[n(k)]
λ(k)
− E[c(k)].
If we intend to consider a network of servers, we are obliged
to determine the output stream of each server. In the case of
priority queues we extend the approach used previously for a
network of G/G/1/N stations, see Eqs. (16), (18) or (20), (22).
Let us denote d(k)(t) the pdf of interdeparture times in the
stream of class k customers, it can be expressed as
d(k)(t)
=
̺(k)
1 − R(k−1) c(k)(t) +

1 −
̺(k)
1 − R(k−1)

×[(1 − R(k−)1)a(k)(t) ∗ c(k)(t)
+R(k−1)a(k)(t) ∗ γ(k−1)(t) ∗ c(k)(t)].
(28)
The components of this expression correspond to three situa-
tions, possible after the departure of any customer of class k:
– the next customer of the class k is in the system (it
occurs with probability
̺(k)
1−R(k−1) ) and will leave it after its
completion time,
– there are no customers of this class in the system and
we shall wait the time described by a(k)(t), the interarrival
time pdf (when the input is non-Poisson it is merely an
approximation) until it appears and enters the server,
– no customer of class k is present in the system and a
customer of higher class comes before him, so the busy period
γ(k−1) must be terminated ﬁrst.
The mean interdeparture time is obviously the same as the
mean interarrival time and from the above (28), where in
turn the densities of busy periods at each priority level are
given by expressions of the type (25) and their moments are
obtained from (26), we calculate the squared coefﬁcient of the
variation of interdeparture times at each priority customers,
needed to integrate a single priority station into a network of
such stations. The ﬁnal formula is as follows:
C(k)
D
2 =
k
X
l=1
h(k,l)C(l)
A
2 + ψ(k)
(29)
where
h(k,l)
=
( 
ζ(k,l) +
1−R(k)
1−R(k−1) R(k−1)g(k−1,l)
(λ(k))2,
l < k,
1−R(k)
1−R(k−1) ,
l = k,
and
ζ(k,l)
=
λ(l)
µ(k)(β(k−1))2 + g(k−1,l) Λ(k−1)
µ(k) ,
g(k,l)
=
1
(β(k))3 ,
ψ(k)
=
χ(k)(λ(k))2 +
1 − R(k)
1 − R(k−1)
n
1 + R(k−1)e(k−1)(λ(k))2
+2̺(k)

1 − Λ(k−1)
β(k−1)

+
−λ(k)R(k−1)
β(k−1)

1 + 2̺(k)

1 − Λ(k−1)
β(k−1)
o
− 1,
χ(k)
=
C(k)
B
2 + 1
(µ(k))2
Λ(k−1)
β(k−1)

Λ(k−1)
β(k−1) − 2

−
Λ(k−1)
(β(k−1))2µ(k) + e(k−1) Λ(k)
µ(k)
C(k)
B
2 + 1
(µ(k))2 ,
e(k)
=
1
(β(k))2 −
1
(β(k))3
k
X
l=1
̺(l)
R(k) µ(l)C(l)
B
2.
The equation (29) corresponds to (16): it deﬁnes how the
variation of the interdeparture times of the class-k customers
depends on the variations of the interarrival times of all classes
that may inﬂuence the output of this class. The parameters of
service time distributions are hidden in the coefﬁcients of the
equation. Similarly, the extension of the equation (18) deﬁning
the squared coefﬁcient of variation of interarrival times in the
ﬂow of class-l customers coming to station j has the following
form
C(l)
Aj
2 =
1
λ(l)
j
M
X
i=1
K
X
k=1
r(kl)
ij λ(k)
i
[(C(k)
Di
2−1)r(kl)
ij +1]+
C(l)
0j
2λ(l)
0j
λ(l)
j
,
(30)
where r(kl)
ij
is the probability that a class-k customer leaving
station i goes directly to station j having there class-l priority.
Equations (29) and (30) taken together determine the input
ﬂow parameters for each class and each station, allowing us
to analyze each station separately. As usual, in the case of
transient states, all parameters should be considered constant
at small intervals and all model equations should be solved
for these parameters to deﬁne conditions at the beginning of
the next interval.
Numerical examples Consider a server with two priority
levels. In Example 5, the priority customers come with inten-
sity λ(1) = 0.4 during intervals t ∈ [0, 10], [20, 30], [40, 50],
etc. Otherwise λ(1) = 0. The intensity of non-priority cus-
tomers is constant, λ(2) = 0.4. In Example 6 the server utiliza-
tion is higher and the bursts of priority input stream are longer,
λ(1) = 1.2 during intervals t ∈ [0, 20], [40, 60], [80, 100],
214
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

and λ(1) = 0 between these intervals while the second class
intensity is constant, λ(2) = 0.5.
The queue capacities are in both cases limited: N (1) =
N (2) = 20. To validate the diffusion model by the comparison
of its results with the exact ones obtained with Markov chain
model solved numerically, we assume Poisson input streams
and exponential service time distributions for both types of
customers, µ(1) = µ(2) = 1. Figs. 13, 14 refer to the Example
5. Fig. 13 displays the mean number of customers of each
class as a function of time, given by diffusion model and by
the corresponding Markov model. Fig. 14 compares the total
number of customers of both classes.
Figs. 15, 16 give the same results for the Example 6.
Of course, diffusion approximation gives not only the mean
values but also the queue distributions; e.g. Fig. 17 presents,
for Example 5, exact and estimated probabilities p(1)(0, t),
p(2)(0, t) that the queues of class 1 or class 2 are empty. Fig.
18 presents for Example 6 exact and estimated probabilities
p(1)(N (1), t), p(2)(N (2), t) that the queues of class 1 or class
2 are saturated. For all computations we considered constant
parameters inside subintervals of the 0.1 time unit length. In all
cases the errors observed for priority queues are smaller then
for non-priority ones. It is natural, the errors of the second
class queue accumulate the errors of both classes.
VI. CONCLUSIONS
The article presents an adaptation of the diffusion approx-
imation model with absorbing barriers to the analysis of
transient states of queueing models. The method was applied
previously to G/G/1/N service stations, here we also present
the case of preemptive-resume priority queues.
In the article, we demonstrate how the diffusion approxi-
mation formalism is applied to study transient and behavior
of G/G/1 and G/G/1/N non-priority and preemptive-priority
models. The way we switch from one model to another
demonstrates the ﬂexibility of the method. Also the preemptive
discipline can be easily converted to non-preemptive queue-
ing discipline. Also the introduction of self-similar trafﬁc
is possible: as we change the diffusion parameters each
small time-interval, we can modulate them to reﬂect self-
similarity and long-term correlation of the trafﬁc. Some other
applications may be considered: recently we have used the
diffusion approximation to estimate transfer times inside a
sensor network [9], to model the performance of leaky-bucket
algorithm as well as to study the work of call centers [10], and
to investigate the stability of TCP connections with IP routers
having AQM queues [8]. In the ﬁrst case the diffusion process
reﬂects the distance deﬁned as the number of hops between
the transmitted packet and its destination (sink). Owing to
the introduction of the transient state analysis, the model
captures more parameters (time-dependent and heterogeneous
transmission, the presence of losses speciﬁc to each hop) of
a sensor network transmission time than the already existing
models of this type, also based on the diffusion approximation
[16]. It also gives more detailed results: the density function
of a packet travel time instead of its mean value. In the second
 0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
 1.4
 1.6
 1.8
 0
 20
 40
 60
 80
 100
"Priority queue, diffusion"
"non-priority queue, diffusion"
"priority queue, exact"
"non-priority queue, exact"
Fig. 13.
Example 5: Mean number of customers as a function of time for
the ﬁrst and second priority levels, diffusion approximation and exact results
 0
 0.5
 1
 1.5
 2
 2.5
 0
 20
 40
 60
 80
 100
"global mean, diffusion"
"global mean, exact"
Fig. 14.
Example 5: Global mean number of customers as a function of
time, diffusion approximation and exact results.
 0
 2
 4
 6
 8
 10
 12
 14
 16
 0
 20
 40
 60
 80
 100
"priority queue, diffusion"
"non-priority queue, diffusion"
"priority queue, exact"
"non-priority queue, exact"
Fig. 15.
Example 6: The mean number of customers as a function of time for
the ﬁrst and second priority levels, diffusion approximation and exact results.
215
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

 0
 5
 10
 15
 20
 25
 0
 20
 40
 60
 80
 100
"global mean, diffusion"
"global mean, exact"
Fig. 16.
Example 6: Global mean number of customers as a function of
time, diffusion approximation and exact results.
 0
 0.2
 0.4
 0.6
 0.8
 1
 0
 20
 40
 60
 80
 100
"priority queue p(0), diffusion"
"non-priority queue p(0), diffusion"
"priority queue p(0), exact"
"non-priority queue p(0), exact"
Fig. 17.
Example 5: Probabilities p(1)(0, t), p(2)(0, t) that the queues of
class 1 or class 2 are empty, diffusion approximation and exact results.
 1e-14
 1e-12
 1e-10
 1e-08
 1e-06
 0.0001
 0.01
 1
 0
 20
 40
 60
 80
 100
"priority queue, p(N1), diffusion"
"non-riority queue, p(N2), diffusion"
"priority queue p(N1), exact"
"non-priority queue p(N2), exact"
Fig. 18.
Example 6: Probabilities p(1)(N(1), t), p(2)(N(2), t) that the
queues of class 1 or class 2 are saturated, diffusion approximation and exact
results. Logarithmic scale is chosen for better presentation of very small
probabilities.
case, the introduction of state-dependent diffusion coefﬁcients
enables us to study transient states of parallel stations of
G/G/N/N type. The third position proposes a diffusion model
of a queue with RED (Random Early Detection) mechanism
and considers the dynamics of TCP connections having RED
queue in the congested router. Also the application of diffusion
approximation to model wireless networks based on IEEE
802.11 standard gives promising results, [12].
Numerical examples, where the quantitative results of dif-
fusion approximations are compared with simulations or the
numerical solutions of corresponding Markov chain models,
indicate acceptable level of errors of the proposed approach.
Of course, there are several ways we can analyze transient
states in queueing models. In recent years we have put a
considerable effort to master their use as efﬁcient tools that
give sound numerical results. Each of them has its advantages
and disadvantages. Firstly, we can use simulation models. In
this purpose we have developed an extension of OMNET++
(a popular simulation tool written in C++, [26]) allowing the
simulation of transient state models. In particular, random gen-
erators were modiﬁed to make the changes of their parameters
as a function of time possible, a new software was added
to collect the statistics of multiple runs and to aggregate it.
We used this module to validate the diffusion approximation
results. Basically, the simulation run in a transient state investi-
gation should be repeated sufﬁcient number of times (e.g. 500
000 in our examples) and the results for a ﬁxed time should be
averaged. As the number of repetitions is high, the estimation
of errors is easy (conﬁdence interval) on the basis of normal
distribution. However, the number of repetitions is related to
the value of the investigated probabilities and in the case of
rare events should be high and it increases the simulation time
(typically in some of our examples, 5 minuts of computations
for a diffusion model are compared to 24 hours of simulations,
on a standard PC station).
The other way to model transient states is to create a Markov
chain model and to solve it numerically. This approach,
also combined with the use of stochastic Petri nets, gained
already a considerable attention of researches, e.g. [13], [30],
[27] and a number of software tools, e.g. SHARP, PEPSY,
SNMP, MOSES [2] or XMARCA [20] was implemented. The
numerical problems of solving very large systems of equations
related to Markov models were thoroughly studied, e.g. [21].
This effort concerned mainly steady-state models. For several
years we have developed a software to construct and to solve
very large (having millions of states) Markov chains relating
to queueing models and we have adopted suitable numerical
methods and distributed algorithms. In the case of transient
states, the implementation is based on the reduction of state
space due to Arnoldi’s orthogonal projection into the Krylov
subspace [29]. We have also used Markov model to evaluate
the errors in the case of the priority model presented here.
Naturally, the usability of the approach depends on the size of
the considered model, and it is relatively easy to go beyond the
limit number, i.e. some tens of millions, of tractable states. We
are still working on more powerful Markovian modules using
216
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

distributed algorithms and run on a cluster architecture.
Another well-known approach of modeling is the ﬂuid-
ﬂow approximation where only the mean values of trafﬁc
intensity and service intensity are considered. Compared to the
diffusion approximation, the model is simple: instead of partial
differential equations of second order, the ordinary ﬁrst-order
linear differential equations are used. Due to its simplicity,
it gained much interest in the analysis of transient states in
Internet and in investigation of stability of its connections, e.g.
[24]. However, as we tested in [7], the errors of the ﬂuid-ﬂow
approximation in modeling queues dynamics are considerably
larger than in the case of diffusion approximation which is a
second-order approximation, where not only the mean values
but also the variances of ﬂow changes and of service times
are considered.
Therefore we consider the diffusion approximation as a very
convenient tool in the analysis of transient states queueing
models in performance evaluation of computer and communi-
cation networks.
VII. ACKNOWLEDGEMENTS
This research was partially ﬁnanced by the Polish Ministry
of Science and Education grant N517 025 31/2997. The
Authors thank the Referees for their valuable remarks.
REFERENCES
[1] T. Atmaca, T. Czach´orski, F. Pekergin, ”A Diffusion Model of the
Dynamic Effects of Closed-Loop Feedback Control Mechanisms in
ATM Networks”, 3rd IFIP Workshop on Performance Modelling and
Evaluation of ATM Networks, Ilkley, UK, 4-7th July 1995.
[2] G. Bolch, S. Greiner, H. de Meer, K. S. Trivedi, ”Queueing networks
and Markov chains: modeling and performance evaluation with com-
puter science applications”, Wiley-Interscience, New York, 1998.
[3] P.J. Burke, The Output of a Queueing System, Operations Research,
vol. 4, no. 6, pp. 699-704.
[4] R. P. Cox, H. D. Miller, The Theory of Stochastic Processes, Chapman
and Hall, London (1965).
[5] T. Czach´orski, ”A method to solve diffusion equation with instan-
taneous return processes acting as boundary conditions”, Bulletin of
Polish Academy of Sciences, Technical Sciences vol. 41 (1993), no. 4.
[6] T. Czach´orski, F. Pekergin, ”Transient diffusion analysis of cell losses
and ATM multiplexer behaviour under correlated trafﬁc”, 5th IFIP
Workshop on Performance Modelling and Evaluation of ATM Net-
works, Ilkley, UK, 21-23 july 1997.
[7] T. Czach´orski, J. M. Fourneau, F. Pekergin, ”The Dynamics of Cell
Flow and Cell Losses in ATM Networks Modelled by a Diffusion
Process”, Bulletin of Polish Academy of Sciences, Technical Sciences
vol. 43, no. 4, pp. 538-548, 1995.
[8] T. Czach´orski, K. Grochla, F. Pekergin, ”Stability and Dynamics of
TCP-NCR(DCR) Protocol”, LNCS no. 4396, Wireless Systems and
Mobility in Next Generation Internet, Springer-Verlag 2007.
[9] T. Czach´orski, K. Grochla, F. Pekergin, ”Un mod`ele d’approximation
de diffusion pour la distribution du temps d’acheminement des paquets
dans les r´eseaux de senseurs”
Proc. of CFIP’2008, Les Arcs, 25-
28 mars 2008, proceedings, edition electronique http://hal.archives-
ouvertes.fr/CFIP2008.
[10] T. Czach´orski, J.-M. Fourneau, T. Nycz, F. Pekergin, ”Diffusion
approximation model of multiserver stations with losses”, Proc. of
Third International Workshop on Practical Applications of Stochastic
Modelling PASM‘2008, Palma de Mallorca, 23rd September 2008, to
appear also as an issue of Elsevier’s ENTCS (Electronic Notes in
Theoretical Computer Science).
[11] T. Czach´orski, T. Nycz, F. Pekergin, ”Transient states of priority queues
– a diffusion approximation study”, Proc. of The Fifth Advanced
International Conference on Telecommunications AICT 2009 May 24-
28, 2009 - Venice/Mestre, Italy.
[12] T. Czach´orski, K. Grochla, T. Nycz, F. Pekergin, ”A diffusion approx-
imation model for wireless networks based on IEEE 802.11 standard”
submitted to COMCOM Special Journal Issue on Heterogeneous Net-
works: Trafﬁc Engineering and Performance Evaluation of Computer
Communications.
[13] J. B. Dugan, K. S. Trivedi, R. Geist, V. F. Nicola, ”Extended Stochastic
Petri Nets: Applications and Analysis”, in: E. Gelenbe(Hrsg.), Perfor-
mance, North-Holland, 1984.
[14] E. Gelenbe, ”On Approximate Computer Systems Models”, J. ACM,
vol. 22, no. 2, (1975).
[15] E. Gelenbe, G. Pujolle, ”The Behaviour of a Single Queue in a General
Queueing Network”, Acta Informatica, Vol. 7, Fasc. 2, pp.123-136,
1976.
[16] E. Gelenbe, ”‘Travel delay in a large wireless ad hoc network”’,
2nd Workshop on Spatial Stochastic Models of Wireless Networks
(SPASWIN), Boston, 7th April (2006).
[17] D. Iglehart, ”Weak Convergence in Queueing Theory”, Advances in
Applied Probability, vol. 5, pp. 570-594, 1973.
[18] K. N. Jaiswal, Priority Queues, Academic Press, New York 1968.
[19] L. Kleinrock, ”Queueing Systems”, vol. I: Theory, vol. II: Computer
Applications, Wiley, New York 1975, 1976.
[20] R. L. Klevans, W. J. Stewart, From queueing networks to Markov
chains: the XMARCA interface”, Performance Evaluation, vol. 24, no.
1-2, pp. 23-46, 1995.
[21] W. Knottenbelt, ”Distributed task-based solution techniques for large
Markov models”, Proc. of NSMC ’99 Zaragoza, Spain, 1999.
[22] H. Kobayashi, ”Modeling and Analysis: An Introduction to System
Performance Evaluation Methodology”, Addison Wesley, Reading,
Massachusetts 1978.
[23] S. S. Lavenberg, ”Computer Performance Modeling Handbook”, Aca-
demic Press, New York 1983.
[24] V. Misra, W.-B. Gong, D. Towsley: Fluid-based Analysis of a Network
of AQM Routers Supporting TCP Flows with an Application to RED,
ACM SIGCOMM 2000.
[25] G. F. Newell, Applications of Queueing Theory, Chapman and Hall,
London 1971.
[26] OMNET++ Community Site www.omnetpp.org.
[27] R. A. Sahner, K. S. Trivedi, A. Puliaﬁto, ”Performance and Reliability
Analysis of Computer Systems: An Example-Based Approach Using
the Sharpe Software Package”, Kluwer 1996.
[28] H. Stehfest, ”Algorithm 368: Numeric inversion of Laplace transform”,
Comm. of ACM, vol. 13, no. 1, p. 47-49 (1970).
[29] W. Stewart, Introduction to the Numerical Solution of Markov Chains,
Princeton University Press, Chichester, West Sussex 1994.
[30] K. S. Trivedi, A. Puliaﬁto, D. Logothetis, ”From Stochastic Petri Nets
to Markov Regenerative Stochastic Petri Nets”, in: P. W. Dowd (Hrsg.),
E. Gelenbe, (Hrsg.): Proc. of MASCOTS, IEEE Computer Society,
1995.
217
International Journal on Advances in Networks and Services, vol 2 no 2&3, year 2009, http://www.iariajournals.org/networks_and_services/

