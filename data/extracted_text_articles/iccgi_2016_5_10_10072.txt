Incremental Reasoning on Strongly Distributed
Fuzzy Systems
Elena V. Ravve and Zeev Volkovich
Software Engineering Department
Ort Braude College
Karmiel, Israel
Email: {cselena,vlvolkov}@braude.ac.il
Abstract—We introduce the notion of strongly distributed fuzzy
systems and present a uniform approach to incremental problem
solving on them. The approach is based on the systematic use
of two logical reduction techniques: Feferman-Vaught reductions
and syntactically deﬁned translation schemes. The fuzzy sys-
tems are presented as logical structures A’s. The problems are
presented as fuzzy formulae on them. We propose a uniform
template for methods, which allow (for a certain cost) evaluation
of formulae of fuzzy logic L over A from values of formulae over
its components and values of formulae over the index structure
I.
Keywords–Fuzzy systems; Incremental reasoning; Reduction
sequences; Syntactically deﬁned translation schemes; Translations;
Transductions.
I.
INTRODUCTION
Decomposition and incremental reasoning on switch sys-
tems comes back to early 60’s [1] [2]. Since Zadeh introduced
the fuzzy set theory in [3], by exploiting the concept of
membership grade, numerous attempts to investigate fuzzy
systems and their properties have been applied. In this context,
the theory of disjunctive decompositions of [1] [2] and others,
was shown to be insufﬁcient. From the pioneering works,
investigating the problem, we mention only [4], where an
approach for obtaining simple disjunctive decompositions of
fuzzy functions is described. However, the approach is not
scalable to large functions and hardly implemented. The sum-
mary of the ﬁrst results may be found in [5]. See [6] for the
next contributions in the ﬁeld.
Jumping to the 90’s, we mention [7], which deals with the
problem of general max-min decomposition of binary fuzzy
relations deﬁned in the Cartesian product of ﬁnite spaces. In
[8], a new method to derive the membership functions and
reference rules of a fuzzy system was developed. Using this
method, a complicated Multiple Input Single Output system
can be obtained from combination of several Single Input Sin-
gle Output systems with a special coupling method. Moreover,
it was shown how the decomposition and coupling method
reduces complexity of the network, used to represent the
fuzzy system. Theoretical results on structural decomposition
of general Multiple Input Multiple Output fuzzy systems are
presented in [9]. Some recent results on a decomposition
technique for complex systems into hierarchical and multi-
layered fuzzy logic sub-systems may be found in [10].
For α-decomposition of [11], originated from max − min
composition of [12], in [13], it was shown that every fuzzy
relation R is always generally effectively α-decomposable.
Moreover, calculating of ρ(R) = min{|Z| : R = QαT, Q ∈
F(X × Z), T ∈ F(Z × Y )} is an NP-complete problem. A
new concept for the decomposition of fuzzy numbers into a
ﬁnite number of α-cuts provided in [14].
In this paper, we propose a generalized purely theoretical
approach to incremental reasoning on fuzzy distributed sys-
tems. This approach allows us to give the precise deﬁnition
of locality. Moreover, we propose a template, such that if one
follows it successfully then it is possible to reduce evaluation
of a fuzzy formula on the composed structure to evaluation
of effectively algorithmically derived formulae on components
with a ﬁnal post-processing. We show two cases, when the
template may be successfully applied to two the most popular
semantics of fuzzy logic. Finally, we give some complexity
analysis of the method.
We consider fuzzy logic as a inﬁnite-valued (inﬁnitely-
many valued) logic, in which the law of excluded middle
does not hold. In fact, the truth function for an extension of a
First Order Logic (FOL) relation R with a fuzzy relation is a
mapping in the interval [0, 1]. History of many-valued logics
(a propositional calculus, in which there are more than two
truth values) comes back to early 20’s of the previous century
[15][16]. One of the ﬁrst formalizations of such a view may be
found in [17]. The approach leads to the following deﬁnition
of a fuzzy truth-value lattice [18]: A fuzzy truth-value lattice
is a lattice of fuzzy sets on [0, 1] that includes two complete
sublattices T and F such that:
1)
∀v1 ∈ T ∀v2 ∈ F : v1 and v2 incomparable, and
2)
∀S ∈ T : lub(S) ∈ T and glb(S) ∈ T, moreover
∀S ∈ F : lub(S) ∈ F and glb(S) ∈ F, and
3)
∀v ∈ T ∀ϵ ∈ [0, 1] : if ∃v∗ ∈ T : v∗ ≤l v + ϵ then
v + ϵ ∈ T, moreover
∀v ∈ F ∀ϵ ∈ [0, 1] : if ∃v∗ ∈ F : v∗ ≤l v + ϵ then
v + ϵ ∈ F, where
T and F respectively denote the set of all TRUE-characteristic
truth-values and the set of all FALSE-characteristic false-
values in the lattice; lub and glb are the labels of the least
upper bound and the greatest lower bound.
In a particular deﬁnition of a truth-value lattice, lub and glb
are interpreted by speciﬁc operations. There exists a variety of
fuzzy set intersection and union deﬁnitions [19], and lub and
glb can be deﬁned to be any corresponding ones of them.
Moreover, systems based on real numbers in [0, 1] having
truth-characteristics distinguished [17], commonly use 0.5 as
the splitting point between FALSE- and TRUE-characteristic
61
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

regions, where 0.5 is considered an UNKNOWN- character-
istic truth-value. In such a case, lub corresponds to max, glb
corresponds to min and ≤ is the usual real number less-than-
or-equal-to relation. For a possible connection of fuzzy logic
and graph grammars, see [20].
In
this
paper,
we
generalize
and
extend
the
coupling method of [8] by systematic application of two
logical reduction techniques to the ﬁeld of reasoning on fuzzy
distributed systems. The distributed systems are presented as
logical structures A’s. We propose a uniform template for
methods, which allow for certain cost evaluation of formulae
of fuzzy logic L (with a particular choice of lub and glb)
over A from values of formulae over its components and
values of formulae over the index structure I. In this paper,
we consider only relational structures. We assume that the
reader has general logical background as may be found in
[21], [22].
The logical reduction techniques are:
Feferman-Vaught reduction sequences (or simply, reduc-
tions) were introduced in [23]. Given logical structure A as
a composition of structures Ai, i ∈ I and index structure
I. Reduction sequence is a set of formulae such that each
such a formula can be evaluated locally in some site or index
set. Next, from the local answers, received from the sites,
and possibly some additional information about the sites, we
compute the result for the given global formula. In the logical
context, the reductions are applied to a relational structure A
distributed over different sites with structures Ai, i ∈ I. The
reductions allow the formulae over A to be computed from
formulae over the Ai’s and formulae over index structure I.
Translation schemes are the logical analogue to coordinate
transformations in geometry. The fundamental property of
translation schemes describes how to compute transformed
formulae in the same way Leibniz’ Theorem describes how
to compute transformed integrals. The fundamental property
has a long history, but was ﬁrst properly stated by Rabin [24].
General complexity analysis of incremental computations
in the proposed framework may be found in [25].
The paper is organized as follows. In Section II, we discuss
different ways of obtaining structures from components. Sec-
tion III introduces the notion of abstract translation schemes.
Section IV is the main section of the paper, where we state
and prove our main Theorem 4. Section VI summarizes the
paper.
II.
DISJOINT UNION AND SHUFFLING OF STRUCTURES
The ﬁrst reduction technique that we use is Feferman-
Vaught reductions [23]. In this section, we start to discuss
different ways of obtaining structures from components. We
mostly follow [26][27]. The Disjoint Union of a family of
structures is the simplest example of juxtaposing structures
over an index structure I with universe I, where none of the
components are linked to each other. In such a case the index
structure I may be replaced by an index set I.
We start our considerations from First Order Logic (FOL).
Second Order Logic (SOL) is like FOL but allows quantiﬁ-
cation over relations. If the arity of the relation restricted to
1 then we deal with Monadic Second Order Logic (MSOL).
We recall the following deﬁnitions:
Deﬁnition 1 (Quantiﬁer Rank of Formulae): Quantiﬁer
rank of formula ϕ (qr(ϕ)) is deﬁned as follows:
•
for ϕ without quantiﬁers qr(ϕ) = 0;
•
if ϕ = ¬ϕ1 and qr(ϕ1) = n1, then qr(ϕ) = n1;
•
if ϕ = ϕ1·ϕ2, where · ∈ {∨, ∧, →}, and qr(ϕ1) = n1,
qr(ϕ2) = n2, then qr(ϕ) = max{n1, n2};
•
if ϕ = Qϕ1, where Q is a quantiﬁer, and qr(ϕ1) = n1,
then qr(ϕ) = n1 + 1.
Deﬁnition 2 (Disjoint Union):
Let τi = ⟨Ri
1, . . . , Ri
ji⟩ be a vocabulary of structure Ai. In the
general case, the resulting structure is A = ˙F
i∈IAi = ⟨I ∪
˙S
i∈IAi, P(ı, v), Index(x), RI
j(1 ≤ j ≤ jI), Ri
ji(i ∈ I, 1 ≤
ji ≤ jı), ⟩ for all i ∈ I, where P(i, v) is true iff element a
came from Ai, Index(x) is true iff x came from I.
Deﬁnition 3 (Partitioned Index Structure):
Let I be an index structure over τind. I is called ﬁnitely
partitioned into ℓ parts if there are unary predicates Iα, α < ℓ,
in the vocabulary τind of I such that their interpretation forms
a partition of the universe of I.
The following classical theorem holds:
Theorem 1:
Let I be a ﬁnitely partitioned index structure. Let A = ˙F
i∈IAi
be a τ–structure, where each Ai is isomorphic to some
B1, . . . , Bℓ over the vocabularies τ1, . . . , τℓ, in accordance
to the partition (ℓ is the number of the classes). For every
φ ∈ MSOL(τ) there are:
•
a boolean function Fφ(b1,1, . . . , b1,j1, . . . , bℓ,1, . . . ,
bℓ,jℓ, bI,1, . . . , bI,jI)
•
MSOL–formulae ψ1,1, . . . , ψ1,j1, . . . , ψℓ,1, . . . , ψℓ,jℓ
•
MSOL–formulae ψI,1, . . . , ψI,jI
such that for every A, I and Bi as above with Bi |= ψi,j
iff bi,j = 1 and BI |= ψI,j iff bI,j = 1 we have
A |= φ iff Fφ(b1,1, . . . , b1,j1, . . . , bI,1, . . . , bI,jI) = 1.
Moreover, Fφ and the ψi,j are computable from φ, ℓ and
vocabularies alone, but are tower exponential in the quantiﬁer
rank of φ.
Note that in most real applications, Fφ and the ψα,j are single
exponential in the quantiﬁer rank of φ.
Proof: The proof is classical, see in particular [28].
Now, we introduce an abstract preservation property
of XX-combination of logics L1, L2, denoted by XX −
PP(L1, L2). XX may mean, for example, Disjoint Union.
The property says roughly that if two XX-combinations of
structures A1, A2 and B1, B2 satisfy the same sentences of L1
then the disjoint unions A1 ⊔A2 and B1 ⊔B2 satisfy the same
sentences of L2. The reason we look at this abstract property
is that the property XX − PP(L1, L2) and its variants play
an important role in our development of the Feferman-Vaught
style theorems. This abstract approach was initiated by [23]
and further developed in [29][30]. Now, we spell out various
ways in which the theory of a disjoint union depends on the
theory of the components. First, we look at the case, where
the index structure is ﬁxed.
62
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

Deﬁnition 4 (Preservation Property with Fixed Index Set):
For two logics L1 and L2 we deﬁne
Disjoint Pair
Input of operation: Two structures;
Preservation Property: if two pairs of structures A1, A2
and B1, B2 satisfy the same sentences of L1 then the disjoint
unions A1 ⊔ A2 and B1 ⊔ B2 satisfy the same sentences of
L2.
Notation: P − PP(L1, L2)
Disjoint Union
Input of operation: Indexed set of structures;
Preservation Property: if for each i ∈ I (index set) Ai and
Bi satisfy the same sentences of L1 then the disjoint unions
F
i∈I Ai and F
i∈I Bi satisfy the same sentences of L2.
Notation: DJ − PP(L1, L2)
The Disjoint Union of a family of structures is the simplest
example of juxtaposing structures where none of the compo-
nents are linked to each other. Another way of producing a new
structure from several given structures is by mixing (shufﬂing)
structures according to a (deﬁnable) prescribed way along the
index structure.
Deﬁnition 5 (Shufﬂe over Partitioned Index Structure):
Let I be a partitioned index structure into β parts, using unary
predicates Iα, α < β. Let Ai, i ∈ I be a family of structures
such that for each i ∈ Iα Ai ∼= Bα, according to the partition.
In this case, we say that F
i∈I Ai is the shufﬂe of Bα along
the partitioned index structure I, and denote it by UI
α<β Bα.
Note that the shufﬂe operation, as deﬁned here, is a special
case of the disjoint union, and that the disjoint pair is a special
case of the ﬁnite shufﬂe.
In the case of variable index structures and of FOL,
Feferman and Vaught observed that it is not enough to look at
the FOL-theory of the index structures, but one has to look
at the FOL-theories of expansions of the Boolean algebras
PS(I) and PS(J ) respectively. PS is used for Power Set.
Gurevich suggested another approach, by looking at the
MSOL theories of structures I and J . This is really the same,
but more in the spirit of the problem, as the passage from
I to an expansion of PS(I) remains on the semantic level,
whereas the comparison of theories is syntactic. There is not
much freedom in choosing the logic in which to compare the
index structures, so we assume it always to be MSOL.
Deﬁnition 6 (PP with Variable Index Structures):
For two logics L1 and L2 we deﬁne
Disjoint Multiples
Input of operation: Structure and Index structure;
Preservation Property: Given two pairs of structures A, B
and I, J such that A, B satisfy the same sentences of L1
and I, J satisfy the same MSOL-sentences. Then the disjoint
unions F
i∈I A and F
j∈J B satisfy the same sentences of L2.
Notation: Mult − PP(L1, L2)
Shufﬂes
Input of operation: A family of structures Bα : α < β and a
(ﬁnitely) partitioned index structure I with Iα a partition.
Preservation Property: Assume that for each α < β the pair
of structures Aα, Bα satisfy the same sentences of L1, and
I, J satisfy the same MSOL-sentences. Then the schufﬂes
UI
α<β Aα and UJ
α<β Bα satisfy the same sentences of L2.
Notation: Shu − PP(L1, L2) or for ﬁnite shufﬂes: FShu −
PP(L1, L2).
Observation 1:
Assume that for two logics L1, L2 we have the preservation
property XX −PP(L1, L2) and L′
1 is an extension of L1, L′
2
is a sub-logic of L2, then XX − PP(L′
1, L′
2) holds as well.
Observation 2:
For two logics L1, L2 the following implications between
preservation properties hold: DJ − PP(L1, L2) implies
P − PP(L1, L2) and, for ﬁxed index structures, Mult −
PP(L1, L2), Shu − PP(L1, L2) and FShu − PP(L1, L2).
Moreover, for variable index structures we have Shu −
PP(L1, L2) implies FShu − PP(L1, L2) and Mult −
PP(L1, L2).
Deﬁnition 7 (Reduction Sequence for Shufﬂing):
Let I be a ﬁnitely partitioned τind-index structure and L be
logic. Let A = UI
α<β Bα be the τ–structure which is the
ﬁnite shufﬂe of the τα-structures Bα over I. A L1-reduction
sequence for shufﬂing for φ ∈ L2(τshuffle) is given by
1)
a boolean function Fφ(b1,1, . . . , b1,j1, . . . , bI,jI)
2)
set Υ of L1–formulae Υ = {ψ1,1, . . . , ψβ,jβ}
3)
MSOL–formulae ψI,1, . . . , ψI,jI
and has the property that for every A, I and Bα as above
with Bα |= ψα,j iff bα,j = 1 and BI |= ψI,j iff bI,j = 1 we
have
A |= φ iff Fφ(b1,1, . . . , b1,j1, . . . , bβ,1, bI,jI) = 1.
Note that we require that Fφ and the ψα,j’s depend only on
φ,β and τ1, . . . , τβ but not on the structures involved.
Now, we list which Preservation Properties hold for which
fuzzy logics.
Theorem 2:
Let I be an index structure and L be a fuzzy logic with either
lub and glb, deﬁned as set intersection and union [19], or
lub corresponds to max, glb corresponds to min [20].
Then DJ − PP(L, L) and FShu − PP(L, L) hold.
Proof:
∩, ∪: The proof by analyzing and extension of the proof in
[23], [31].
max, min: The proof by analyzing and extension of the proof
in [31], [32].
III.
SYNTACTICALLY DEFINED TRANSLATION SCHEMES
The second logical reduction technique that we use is
the syntactically deﬁned translation schemes, which describe
transformations of logical structures. The notion of abstract
translation schemes comes back to Rabin [24]. They give rise
to two induced maps, translations and transductions. Transduc-
tions describe the induced transformation of logical structures
and the translations describe the induced transformations of
logical formulae.
Deﬁnition 8 (Translation Schemes Φ):
Let τ1 and τ2 be two vocabularies and L be a logic. Let
τ2 = {R1, . . . , Rm} and let ρ(Ri) be the arity of Ri. Let
Φ = ⟨ϕ, ψ1, . . . , ψm⟩ be formulae of L(τ1). Φ is κ–feasible
for τ2 over τ1 if ϕ has exactly κ distinct free variables and
each ψi has κρ(Ri) distinct free variables. Such a Φ =
⟨ϕ, ψ1, . . . , ψm⟩ is also called a κ–τ1–τ2–translation scheme
63
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

Φ∗
R-instance
−→
S-instance
Φ
R-formula
←−
S-formula
Φ#
A |= Φ#(θ)
iff
Φ∗(A) |= (θ)
Figure 1. Components of translation schemes and the fundamental property
or, shortly, a translation scheme, if the parameters are clear in
the context.
In general, Deﬁnition 8 must be adopted to the given fuzzy
logic L, if it is not straightforward. For a fuzzy logic L with
a translation scheme Φ we can naturally associate a (partial)
function Φ∗ from τ1–structures to τ2–structures.
Deﬁnition 9 (The induced map Φ∗):
Let A be a τ1–structure with universe A and Φ be κ–feasible
for τ2 over τ1. The structure AΦ is deﬁned as follows:
1)
The universe of AΦ is the set AΦ = {¯a ∈ Aκ : A |=
ϕ(¯a)}.
2)
The interpretation of Ri in AΦ is the set
AΦ(Ri) = {¯a ∈ AΦ
ρ(Ri)·κ : A |= ψi(¯a)}.
Note that AΦ is a τ2–structure of cardinality at most
| A |κ.
3)
The partial function Φ∗ : Str(τ1) → Str(τ2) is
deﬁned by Φ∗(A) = AΦ. Note that Φ∗(A) is deﬁned
iff A |= ∃¯xϕ.
For fuzzy logic L with a translation scheme Φ we can
also naturally associate a function Φ# from L(τ2)–formulae
to L(τ1)–formulae.
Deﬁnition 10 (The induced map Φ#):
Let θ be a τ2–formula and Φ be κ–feasible for τ2 over τ1. The
formula θΦ is deﬁned inductively as follows:
1)
For Ri ∈ τ2 and θ = R(x1, . . . , xm) let xj,h be
new variables with i ≤ m and h ≤ κ and denote by
¯xi = ⟨xi,1, . . . , xi,κ⟩. We put θΦ = ψi(¯x1, . . . , ¯xm).
2)
For the boolean connectives the translation dis-
tributes, i.e. if θ = (θ1 ∨ θ2) then θΦ = (θ1Φ ∨ θ1Φ)
and if θ = ¬θ1 then θΦ = ¬θ1Φ, and similarly for ∧.
3)
For the existential quantiﬁer, we use relativization, i.e.
if θ = ∃yθ1, let ¯y = ⟨y1, . . . , yκ⟩ be new variables.
We put θΦ = ∃¯y(ϕ(¯y) ∧ θ1Φ).
4)
For (monadic) second order variables U of arity ℓ
(ℓ = 1 for MSOL) and ¯v a vector of length ℓ of
ﬁrst order variables or constants we translate U(¯v)
by treating U like a relation symbol above and put
θΦ = ∃V (∀¯v(V (¯v) → (φ( ¯v1) ∧ . . . φ( ¯vℓ) ∧ (θ1)Φ))).
5)
The function Φ# : L(τ2) → L(τ1) is deﬁned by
Φ#(θ) = θΦ.
Observation 1: If we use MSOL and Φ∗ is over MSOL
too, and it is vectorized, then we do not obtain MSOL for
AΦ. In most of feasible applications, we have that Φ∗ is not
vectorized, but not necessarily.
Observation 2:
1)
Φ#(θ)
∈ fuzzy FOL (FFOL) provided θ
∈
FFOL, even for vectorized Φ.
2)
Φ#(θ) ∈ MSOL provided θ ∈ MSOL, but only for
scalar (non–vectorized) Φ.
The following fundamental theorem is easily veriﬁed for
correctly deﬁned L translation schemes, see Figure 1. Its
origins go back at least to the early years of modern logic
[33, page 277 ff]. See also [21].
Theorem 3:
Let Φ = ⟨ϕ, ψ1, . . . , ψm⟩ be a κ–τ1–τ2–translation scheme, A
a τ1-structure and θ a L(τ2)–formula. Then
A |= Φ#(θ) iff Φ∗(A) |= θ.
IV.
STRONGLY DISTRIBUTED FUZZY STRUCTURES
The disjoint union and shufﬂes as such are not very in-
teresting. However, combining them with translation schemes
gives as a rich repertoire of composition techniques. Now, we
generalize the disjoint union or shufﬂing of fuzzy structures to
Strongly Distributed Fuzzy Structures in the following way:
Deﬁnition 11 (Strongly Distributed Fuzzy Structures):
Let I be a ﬁnitely partitioned index structure and L be
FFOL. Let A = F
i∈IAi be a τ–structure, where each
Ai is isomorphic to some B1, . . . , Bβ over the vocabularies
τ1, . . . , τβ, in accordance with the partition. For a Φ be a
τ1–τ2 L–translation scheme, the Φ–Strongly Distributed Fuzzy
Structure, composed from B1, . . . , Bβ over I is the structure
Φ∗(A), or rather any structure isomorphic to it.
Now, our main Theorem 4 can be formulated as follows:
Theorem 4:
Let I be a ﬁnitely partitioned index structure, L be FFOL
such that Theorem 2 holds for it. Let S be a Φ–Strongly
Distributed Fuzzy Structure, composed from B1,. . . ,Bβ over
I, as above. For every φ ∈ L(τ) there are
1)
a boolean function FΦ,φ(b1,1, . . . , b1,j1, . . . , bI,jI),
2)
L–formulae ψ1,1,. . . ,ψ1,j1, . . . ,ψβ,1,. . . ,ψβ,jβ and
3)
MSOL–formulae ψI,1,. . . ,ψI,jI
such that for every S, I and Bi as above with Bi |= ψi,j
iff bi,j = 1 and I |= ψI,j iff bI,j = 1 we have
S |= φ iff FΦ,φ(b1,1, . . . , b1,j1, . . . , bI,jI) = 1.
Moreover, FΦ,φ and ψi,j are computable from Φ# and φ,
but are tower exponential in the quantiﬁer rank of φ.
Proof: By analyzing the proof of Theorem 2 with Theorem 3.
Now, we provide an example of the applicability of our
approach. Let us consider the following composition of two
input graphs H and G. G can be viewed as a display graph,
where on each node we want to have a copy of H, such
that certain additional edges between the copies are added.
In practice, this is an extended model on massage passing.
The nodes marked with Lj are the communication ports.
64
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
6
6
6

*

*
HHHHH
H
Y
HHHHH
H
Y

:
XXXXXXXXXXX
X
y
6
6
6

*

*
HHHHH
H
Y
HHHHH
H
Y

:
XXXXXXXXXXX
X
y
6
6
6

*

*
HHHHH
H
Y
HHHHH
H
Y

:
XXXXXXXXXXX
X
y
6
6
6
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
H
G
Figure 2. Uniform graph substitution.
Let G = ⟨VG, R⟩ and H = ⟨VH, S, Lj(j ∈ J)⟩ be two
relational structures (J is ﬁnite), then their composition
S = ⟨VS, L1
S, ..., L|J|
S , SS, Rj
S(j ∈ J)⟩
is deﬁned as follows, see Figure 2:
•
VS = ˙S
g∈GV g
H, where each V g
H is isomorphic to VH;
•
Lj
S(w) is true if w belongs to Lj;
•
SS = {(w, v) : w ∈ V g
H, v ∈ V g
H, S(w, v)};
•
Rj
S = {(w, v) : Lj(w), Lj(v), P(i, w), P(i′, v),
R(i, i′)}.
It is easy to see (Figure 2) that this construction can be ob-
tained from the Cartesian product G×H by a FOL translation
scheme without vectorization. However, the Cartesian product
cannot be obtained from
˙F
g∈GH without vectorization. S
can be obtained from the disjoint union ˙F
g∈GH by a FOL
translation scheme. The following proposition makes it precise.
Proposition 1:
S is isomorphic to Φ∗( ˙F
g∈GH) with
Φ = ⟨φ, ψL1
S, . . . , ψLJ
S, ψS, ψR1
S, . . . , ψRJ
S⟩, and
φ = ∃i(P(i, x) ∧ Index(i)),
ψLj
S = ∃i((P(i, x) ∧ Index(i)) ∧ Lj(x)),
ψS = ∃i((Index(i) ∧ (P(i, w) ∧ P(i, v))) ∧ S(w, v)),
ψRj
S = ∃i∃i′((((Index(i) ∧ Index(i′)) ∧ R(i, i′)) ∧ (Lj(w) ∧
Lj(v))) ∧ (P(i, w) ∧ P(i′, v))).
In this example, depending on the choice of the interpre-
tation of the Lj’s, more sophisticated parallel data communi-
cation systems can be modeled, but not all.
V.
OUTLINE OF THE METHOD
Our general scenario is as follows: given a strongly dis-
tributed fuzzy structure A with index structure I. Formula φ
of fuzzy logic must be evaluated on A.
The question is: What is the reduction sequence of φ if any?
Here, we propose a general approach to answer the ques-
tion and to compute the reduction sequences algorithmically.
The general template is deﬁned as follows:
A. Prove preservation theorems
Given fuzzy logic L.
1) Deﬁne disjoint union of L-structures: In the general
case, we use Deﬁnition 2 of Disjoint Union (DJ) of the
components: A = ˙F
i∈IAi.
2) Deﬁne a preservation property XX − PP for L: After
we introduced the appropriate disjoint union of structures, we
deﬁne the notion of a Preservation Property (PP) for the fuzzy
logic.
3) Prove the XX −PP for L: Results like Theorem 2 are
not always true as it was shown in [26].
B. Deﬁne Translation Schemes
Given fuzzy logic L. Deﬁnition 8 introduces the classical
syntactically deﬁned translation schemes [24]. Deﬁnitions 8
gives rise to two induced maps: translations and transductions.
Transduction Φ∗ describes the induced transformation of L-
structures and the translation Φ# describes the induced the
induced transformations of logical formulae. The fundamental
Theorem 3 should hold for correctly deﬁned L translation
schemes.
C. Strongly Distributed Fuzzy Structures
Given a L-structure A. At this step, we have deﬁned
disjoint unions (and shufﬂes) of L-structures. Using translation
scheme Φ, we introduce the notion of Strongly Distributed
Fuzzy Structures in Deﬁnition 11. Now, the proof of theorems
like Theorem 4 should pretty straightforward and provides
the desired reduction sequence. In fact, FΦ,φ and the ψi,j of
Theorem 4 are computable from Φ# and φ. However, we note
that they are tower exponential in the quantiﬁer rank of φ.
D. Incremental Reasoning on Strongly Distributed Fuzzy Sys-
tems
Finally, we derive a method for evaluating L-formula φ on
A, which is a Φ-strongly distributed fuzzy composition of its
components. The method proceeds as follows:
Preprocessing:
Given
φ
and
Φ,
but
not
a
A,
we
algorithmically construct a sequence of formulae ψi,j and an
evaluation function FΦ,φ as in Theorem 4.
Incremental Computation: We compute the local values bi,j
for each component of the A.
Final Solution: Now, Theorem 4 states that φ, expressible
in the corresponding fuzzy logic L, on A may be effectively
computed from bi,j, using FΦ,φ.
VI.
CONCLUSION AND OUTLOOK
In this work, we introduced the notion of strongly dis-
tributed fuzzy systems and presented a uniform approach
to incremental automated reasoning on such systems. The
approach is based on systematic use of two logical reduction
techniques: Feferman-Vaught reductions and the syntactically
deﬁned translation schemes.
Our general scenario is as follows: Given a fuzzy structure
A that is composed from structures Ai (i ∈ I) and index
structure I. A formula φ of fuzzy logic L describes a property
to be checked on A. The question is: What is the reduction
sequence for φ, if any such a sequence exists?
We showed that if we can prove preservation theorems for
L as well as if A is a strongly distributed composition of its
65
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

components, then the corresponding reduction sequence for A
can be effectively computed algorithmically. In such a case,
we derive a method for evaluating an L-formula φ on A, which
is a Φ-strongly distributed composition of its components.
First, given φ and Φ, but not a A, we algorithmically
construct a sequence of formulae ψi,j and an evaluation
function FΦ,φ. Next, we compute the local values bi,j for each
component of the A. Finally, our main theorems state that φ,
expressible in the corresponding logic L on A, is effectively
computed from bi,j, using FΦ,φ.
We plan to apply the proposed methodology to the in-
cremental reasoning, based on the promising variations of
WMSOL as introduced recently in [34] [35] [36] (see also
[37]).
REFERENCES
[1]
R. Ashenhurst, “The decomposition of switching functions,” Annals
Computation Lab., Harvard Univ., vol. 29, 1959, pp. 74–116.
[2]
H. Curtis, A new approach to the design of switching circuits.
Van
Nostrand, 1962.
[3]
L. Zadeh, “Fuzzy sets,” Information and Control, vol. 8, no. 3, 1965,
pp. 338 – 353.
[4]
A. Kandel, “On the decomposition of fuzzy functions,” IEEE Trans.
Computers, vol. 25, no. 11, 1976, pp. 1124–1130.
[5]
A. Kandel and H. Davis, The First Fuzzy Decade: (bibliography on
Fuzzy Sets and Their Applications), ser. Computer science report. New
Mexico Inst. of Mining and Techn., 1976.
[6]
A. Nola, E. Sanchez, W. Pedrycz, and S. Sessa, Fuzzy Relation
Equations and Their Applications to Knowledge Engineering. Norwell,
MA, USA: Kluwer Academic Publishers, 1989.
[7]
J. Vrba, “General decomposition problem of fuzzy relations,” Fuzzy
Sets and Systems, vol. 54, no. 1, 1993, pp. 69 – 79.
[8]
C. Zhong, “A new approach to generate Fuzzy system,” in Proceeding
of the IEEE Singapore International Symposium on Control Theory and
Application, 1997, pp. 250–254.
[9]
H. Ying, “Structural decomposition of the general MIMO fuzzy sys-
tems,” International Journal of Intelligent Control and Systems, vol. 1,
no. 3, 1996, pp. 327–337.
[10]
M. Mohammadian, “Supervised learning of fuzzy logic systems.” En-
cyclopedia of Artiﬁcial Intelligence, 1510-1517(2009), 2009.
[11]
Y. Yang and X. Wang, “On the convergence exponent of decomposable
relations,” Fuzzy Sets and Systems, vol. 151, no. 2, 2005, pp. 403 –
419.
[12]
E. Sanchez, “Resolution of composite fuzzy relation equations,” Infor-
mation and Control, vol. 30, no. 1, 1976, pp. 38 – 48.
[13]
Y. Yang and X. Wang, “The general α-decomposition problem of fuzzy
relations,” Information Sciences, vol. 177, no. 22, 2007, pp. 4922 –
4933.
[14]
A. Seibel and J. Schlattmann, “A generalized α-level decomposition
concept for numerical fuzzy calculus,” in Proceedings of the 16th World
Congress of the International Fuzzy Systems Association (IFSA), 2015.
[15]
J. Łukasiewicz, “O logice tr´ojwarto´ciowej,” Ruch Filozoﬁczny, vol. 5,
1920, pp. 170 – 171.
[16]
E. Post, Introduction to a General Theory of Elementary Propositions.
Columbia University, 1920.
[17]
P. Doherty and D. Driankov, “Nonmonotonicity, fuzziness, and multi-
values,” in Fuzzy Logic, R. Lowen and M. Roubens, Eds.
Dordrecht:
Kluwer Academic Publishers, 1993, pp. 3–15.
[18]
T. Cao and P. Creasy, “Fuzzy types: a framework for handling uncer-
tainty about types of objects,” International Journal of Approximate
Reasoning, vol. 25, no. 3, 2000, pp. 217 – 253.
[19]
G. Klir and B. Yuan, Fuzzy Sets and Fuzzy Logic: Theory and
Applications. Upper Saddle River, NJ, USA: Prentice-Hall, Inc., 1995.
[20]
J.-M. Hasemann, “Planning, behaviours, decomposition, and monitoring
using graph grammars and fuzzy logic,” in Proceedings of the Second
International Conference on Artiﬁcial Intelligence Planning Systems,
University of Chicago, Chicago, Illinois, USA, June 13-15, 1994, 1994,
pp. 275–280.
[21]
H. Ebbinghaus, J. Flum, and W. Thomas, Mathematical Logic, 2nd
edition, ser. Undergraduate Texts in Mathematics.
Springer-Verlag,
1994.
[22]
H. Ebbinghaus and J. Flum, Finite Model Theory, ser. Perspectives in
Mathematical Logic.
Springer, 1995.
[23]
S. Feferman and R. Vaught, “The ﬁrst order properties of products of
algebraic systems,” Fundamenta Mathematicae, vol. 47, 1959, pp. 57–
103.
[24]
M. Rabin, “A simple method for undecidability proofs and some
applications,” in Logic, Methodology and Philosophy of Science II, ser.
Studies in Logic, Y. B. Hillel, Ed.
North Holland, 1965, pp. 58–68.
[25]
E. Ravve and Z. Volkovich, “Four scenarios of effective computations
on sum-like graphs,” in Proc. of the The 9th Intern. Multi-Conference
on Computing in the Global Informationin Technology, 2014, pp. 1–8.
[26]
E. V. Ravve, Z. Volkovich, and G.-W. Weber, “A uniform approach
to incremental automated reasoning on strongly distributed structures,”
in GCAI 2015. Global Conference on Artiﬁcial Intelligence, ser.
EasyChair Proceedings in Computing, G. Gottlob, G. Sutcliffe, and
A. Voronkov, Eds., vol. 36.
EasyChair, 2015, pp. 229–251.
[27]
E. Ravve, Z. Volkovich, and G.-W. Weber, “Reasoning on strongly
distributed multi-agent systems,” in Proceedings of the 17th Interna-
tional Symposium on Symbolic and Numeric Algorithms for Scientiﬁc
Computing, 2015, pp. 251–256.
[28]
C. Chang and H. Keisler, Model Theory, 3rd ed., ser. Studies in Logic,
vol 73.
North–Holland, 1990.
[29]
J. Makowsky, “Compactness, embeddings and deﬁnability,” in Model-
Theoretic Logics, ser. Perspectives in Mathematical Logic, J. Barwise
and S. Feferman, Eds.
Springer Verlag, 1985, ch. 18.
[30]
——, “Some observations on uniform reduction for properties invariant
on the range of deﬁnable relations,” Fundamenta Mathematicae, vol. 99,
1978, pp. 199–203.
[31]
J. Makowsky and E. Ravve, “Incremental model checking for decom-
posable structures,” in Mathematical Foundations of Computer Science
(MFCS’95), ser. Lecture Notes in Computer Science, vol. 969. Springer
Verlag, 1995, pp. 540–551.
[32]
E. Ravve, Z. Volkovich, and G.-W. Weber, “Effective optimization
with weighted automata on decomposable trees,” Optimization Journal,
Special Issue on Recent Advances in Continuous Optimization on the
Occasion of the 25th European Conference on Operational Research
(EURO XXV 2012), vol. 63, 2014, pp. 109–127.
[33]
D. Hilbert and P. Bernays, Grundlagen der Mathematik, I, 2nd ed., ser.
Die Grundleheren der mathematischen Wissenschaften in Einzeldarstel-
lungn.
Springer Verlag, Heidelberg, 1970, vol. 40.
[34]
S. Kreutzer and C. Riveros, “Quantitative monadic second-order logic,”
in 28th Annual ACM/IEEE Symposium on Logic in Computer Science,
LICS 2013, New Orleans, LA, USA, June 25-28, 2013, 2013, pp. 113–
122.
[35]
N. Labai and J. Makowsky, “Weighted automata and monadic second
order logic,” in Proceedings Fourth International Symposium on Games,
Automata, Logics and Formal Veriﬁcation, GandALF 2013, Borca di
Cadore, Dolomites, Italy, 29-31th August 2013., 2013, pp. 122–135.
[36]
B. Monmege, “Sp´eciﬁcation et v´eriﬁcation de propri´et´es quantitatives:
Expressions, logiques et automates,” Ph.D. dissertation, Laboratoire
Sp´eciﬁcation et V´eriﬁcation, ´Ecole Normale Sup´erieure de Cachan,
Cedex, France, 2013.
[37]
N. Labai and J. Makowsky, “Logics of ﬁnite Hankel rank,” in Fields of
Logic and Computation II - Essays Dedicated to Yuri Gurevich on the
Occasion of His 75th Birthday, 2015, pp. 237–252.
66
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-513-5
ICCGI 2016 : The Eleventh International Multi-Conference on Computing in the Global Information Technology

