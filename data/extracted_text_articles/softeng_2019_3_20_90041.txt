User Characteristics Validation for User Scenario
Based on Use-Case Models in Requirements Analysis
Saeko Matsuura
Graduate School of Engineering and Science Shibaura Institute of Technology
Saitama, Japan
email: matsuura@se.shibaura-it.ac.jp
Abstract—Nonfunctional
requirements,
such
as
user
characteristics and system architecture, are factors that make
it difficult to acquire proper requirements when constructing a
system
for
business
improvement
by
Information
and
Communication Technology (ICT) for small-scale companies
that are behind other medium and large-scale companies. This
paper discusses an incremental requirement acquisition and
analysis method of a system based on a use-case model in
Unified Modeling Language (UML) with the experience of
requirements
analysis
for
a
small-scale
manufacturing
company as a joint lesson at our university.
Keywords—Nonfunctional requirements; Use-case analysis;
UML; validation.
I.
INTRODUCTION
It is well known that requirement analysis is a key to
success in developing high-quality systems in an efficient
manner.
Requirements specification must determine not
only
functional
requirements
but
also
nonfunctional
requirements.
Nonfunctional
requirements
include
the
system goal, external interfaces with the user, hardware,
software,
and
communications.
Moreover,
user
characteristics that are general characteristics of the intended
users of the product, including educational level, experience,
and technical expertise affect not only the system usage but
also the service quality.
As the system architecture and users become diverse, the
initial model of a system often depends on these features
with regard to nonfunctional requirements. These features
restrict the specification and need elaboration by considering
these features step by step at the early stage of system
development, as discussed in the Twin Peaks Model [1].
User characteristics and the system architecture are the
factors that make it difficult to acquire proper requirements
when constructing a system for business improvement by
Information and Communication Technology (ICT) for
small-scale companies that are behind other medium and
large-scale companies.
On the other hand, functional requirements can be
modeled as essential use cases [2] by a semiformal and
widely used
language such as the Unified Modeling
Language (UML) [3] in model-driven development. System
usage scenarios can be defined by a combination of these use
cases.
However,
the
abovementioned
architectural and
external factors in nonfunctional requirements strongly affect
this combination. Moreover, a change in the need for these
use
cases
may
occur.
Although
this
uncertainty
of
requirements is unavoidable at the early stage of system
development, it is important formally to manage the
traceability
of
requirements
related
to
nonfunctional
requirements in a system.
We
have
proposed
a
method
for
model-driven
requirements analysis [4] [5] using UML. We have also
presented an iterative cycle of analysis and verification in
which the requirements specification of a system was defined
incrementally [6].
If the user does not clearly recognize the effectiveness of
ICT, it is more difficult to acquire their requirements for a
system to improve their business by ICT. In this case, even if
a use-case model is useful to define an expected system, it is
difficult to extract and define suitable use cases. The basis of
a use case is a normal flow that consists of behaviors and
data
with
preconditions
and
postconditions.
Data
has
invariant conditions for a system, so it causes exceptional
flows
in
a
use
case.
To
acquire
user-centric
useful
requirements,
we
think
the following
two
things are
important points to specify in fundamental use cases at the
early stage of the requirement analysis phase:
· Essential data required in executing the domain tasks
must be clarified; however, these data often involve
the implicit knowledge of the user. Therefore, we
must obtain these data via a method, such as
ethnography [9] as sufficiently and as far as possible.
· As a system must not obstruct the task process in the
actual work site for the users, the requirements
should specify the behavioral flows by following a
traditional task process.
This paper proposes a method to acquire user-centric
useful requirements incrementally at the early stage of
system development. Fundamental scenario analysis based
on use-case components makes it possible to acquire user-
centric useful requirements by clarifying the confirmation
points on the models. These points can be used in analysis by
requirements elicitation methods such as the ethnography
method.
The rest of this paper is organized as follows. Section II
describes problems in improving the business of a small-
scale company that is behind in introducing ICT technology.
Section III explains how to define a UML requirements
analysis model and a way to validate user satisfaction using
UML models. Section IV explains a case study. Finally,
41
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

Section V discusses our results, conclusions, and future
research directions.
II. PROBLEMS IN IMPROVING BUSINESS OF SMALL-SCALE
COMPANIES
A. Barriers to Business Improvement by ICT
It is difficult to introduce a basic management system at
work sites, such as small manufacturing industries because
of the work environment, a low number of employees, or
inexperience in ICT. In such work sites, only responsible
people can manage the work process, and they use a
whiteboard and paper notes attached to the product parts for
process management. As a person’s knowledge of process
management is their implicit knowledge, this is not the
explicit and formal knowledge of the company. Forming
implicit knowledge into common specified knowledge is
important for business improvement by the utilization of
information technology; however, it is difficult to acquire
implicit knowledge from the users.
We
think
that
modeling
fundamental
use
cases
contributes to formulating implicit knowledge into common
specified knowledge that is related to the model elements.
B. Outline of Example Subject
In response to overseas industrial policies such as
“Industry 4.0,” in Japan, we make efforts to solve solutions
using the Internet of Things toward the future innovation of
industrial
structures.
However,
in
a
small-scale
manufacturing
company,
delays
in
IT
conversion
are
obstacles to such efforts.
This
study
covers
issues
in
nonmetal
products
manufacturing companies that are centered on casting
technology and are celebrating their centenary in 2018.
These companies primarily deal with construction hardware
ordered by building material manufacturers, who specialize
in small lots of various kinds. As there are fewer than 20
employees, it is a small factory. By using manufacturing
technology possessed by each cooperating factory scattered
in the area, we provide consistent services from product
manufacturing to processing. Cooperation with a factory
with a useful and a profit is a strength. However, as many
parts move between cooperating factories, leading to various
kinds of commercialization, it is difficult to manage these
work processes.
While manufacturing a product, it is necessary to request
multiple companies to cooperate in order to process many
parts to complete the product. Parts that are to be delivered
between the parent company and the cooperating companies
are placed in returnable boxes that are transported by full-
time
drivers.
The
transmission
of
information
about
processes and
products is carried out by telephones,
messages to drivers, and meetings. Although process and
product information are the basis of the work, they are
implicit knowledge possessed only by the responsible person
at the parent company. Sharing such important implicit
knowledge is the goal of introducing a system.
C. Difficulties in Requirements Analysis
Ethnography is a qualitative orientation of research that
emphasizes the detailed observation of people in naturally
occurring settings. It is drawing a considerable amount of
attention because it is useful in marketing. The ethnography
method is used for observation of work sites and in
interviews
with
the
person
in
the
company
who
is
responsible for requirements acquisition; however, it is
important that the interviews are carried out by whom which
has both domain knowledge and system knowledge.
It is
important that the project manager or developer is familiar
with information technology. However, few people are
familiar with both types of knowledge.
We
think
that
modeling
fundamental
use
cases
contributes to extracting useful observations and interview
questions for the person who use the ethnography method.
III.
USER CHARACTERISTICS VALIDATION IN USER
SCENARIO
A. Use-Case Component
A use-case analysis is an effective method to clarify
functional requirements. We propose a method for model-
driven requirements analysis using UML. A use-case model
is a fundamental component of the requirements defined
formally by UML. This method is defined based on a
requirements analysis model, as shown in Figure 1.
Figure 1 shows an outline of a requirements analysis
model. The relation between the use cases in the specified
use-case diagram is expressed by an activity diagram that
includes some subactivity nodes corresponding to the use
cases. An activity diagram defines each use case. An activity
diagram specifies not only normal and exceptional action
flows but also data flows that are related to these actions. An
action is defined by an action node, and data is defined by an
object node that is classified as a member of a class that is
defined in a class diagram. Accordingly, these two kinds of
diagrams enable us to specify application process flows in
connection with the data. The interaction between a user and
a system includes requisite flows and data on user input,
conditions, and output to execute a use case correctly.
The second feature of this model is an activity diagram
that has three types of partitions: user, interaction, and
system. These partitions enable ready identification of the
following activities: user input, interaction between a user
and system caused by the conditions for executing a use
case, and the resulting output. Object nodes in the user,
interaction, and system partitions represent input data, output
data, and entity data, respectively. The requirement analysis
model is defined using the modeling tool Astah*[7].
42
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

Figure 1. UML requirements analysis model
When user requirements are uncertain owing to users
who are unfamiliar with ICT, we must develop a system
from the fundamental use case to improve the business. To
introduce ICT into the company, it is important that
fundamental use cases need to be validated on the benefits.
The user scenario consists of these use-case components, and
we evaluate whether it satisfies the requirements of each
stakeholder by a state machine diagram that represents the
state of user recognition.
B. Use-Case Analysis Process
Based on Chapter 4, “Considerations for Producing Good
Software Requirements Specifications (SRS),” and Chapter
5, “The Parts of an SRS,” in IEEEstd.8300-1998 [8], we
focus on the following parts of nonfunctional requirements
and propose an iterative requirements analysis process, as
shown in Figure 2 [6].
Figure 2. Iterative requirements analysis process
The process indicates that the functional requirements of
a system can be specified by fundamental use cases that
satisfy “the effective and useful scenarios in the system
usage” in order to meet “the goals of the system.” We focus
on the following internal and external factors of the software:
1)
Goals of the stakeholders
2)
Overall product image based on the following two
external factors:
a)
External interfaces with the user, hardware,
software, and communications.
b)
User
characteristics
that
are
general
characteristics of the intended users of the
product, including educational level, experience,
and technical expertise, which affect the system
usage.
As mentioned in Section II, to solve the problems in a
small-scale company, the first factor is often not concrete,
and the second factor strongly affects the acceptable system.
In contrast to the standpoint of managers or workers, the
goals
of
stakeholders
are
significantly
different.
Furthermore, if there are parent-child relationships between
companies, the expected goals of the system are also
different. Therefore, first, we set the goals of the manager of
the parent company and build a basic scenario. We extract
use cases and data models for the fundamental goal, and an
activity diagram defines a scenario where all workers
operate their tasks using the target system.
C. Definition of Implicit Information
Based on nondigital information on a whiteboard or
paper notes attached to the product parts for process
management that are given by a responsible person, the
actual used information required for process management
can be defined by a class diagram, as shown in Figure 3.
Figure 3 shows the following things: a product consists of
several parts and a process treats one or more target
returnable boxes and the factory being in charge and the
Actor
System
Usecase1
Usecase2
Usecase3
<<include>>
System
Usecase1
Usecase2
Use case description
•
Actor
•
Pre-condition
•
Normal flow
•
Exceptional flow
•
Post-condition
Clarify a boundary between a useｒ and a system.
Clarify a role of an action and data.
Logic
Data
is referred from an actin
｜is created by an action
｜is deleted by an action
｜is updated by an action
Guard
Is conditioned on data
| is a relational expression
between attributes
| is data invariant
System
Interaction
User
Action in System
Request Input
Action
Input Action
Output Action
Action in System
[mormal]
[exceptional]
Reference Object : ClassＡ
Created Object : ClassＢ
pre-condition
post-condition
Input Item : Input
Output Item : Output
Input
Output
Entity Data
- field3 : String
ClassＢ
- field2 : String
- field1 : Integer
ClassＡ
UI
Use case
is a sequence of actions given each role.
43
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

eight date managed in the process. A task schedule is a
sequence of processes.
Figure 3. Class diagram
D. Fundamental Scenario
Next, consider a use case that is necessary to satisfy the
goal. The basic information for sharing implicit knowledge
is the process information and product information, as
shown in Figure 3. Based on the fundamental Create, Read,
Delete, and Update (CRDU) functions, a use case is
extracted, as shown in Figure 4. In this case, there are three
actors such as a worker in a parent company and a
cooperative company, and a driver.
Figure 4. Use-case diagram
Based on these use cases, we defined the workflow of
one step of work, as shown in Figure 5. A workflow
expresses a scenario where all workers actually operate their
tasks in the real world using the developed system. Here, we
have not yet assumed the hardware to use. As a premise of
the
workflow,
it
is
assumed
that
both
the
product
information and process information as a plan are already
registered.
The workflow scenario as shown in Figure 5 is defined
under the conditions that the other use cases are completed,
for example, that the registration is completed by the
“register process information” use case.
The partition represents each worker in this company.
That is, the action within the partition limits the action of
each worker. The action written in the behavior call action
of
“read
process
information”
and
“update
process
information”
represents
a
use
case.
Colored
actions
represent the following tasks:
· Work done by workers in each partition while using
the Process Management System with the use case
in Figure 4.
· Actual work regardless of the system.
Figure 5. Fundamental scenario
The part surrounded by a rectangle is the work of the
former
and
is
necessary
to
determine
the
hardware
configuration to create merits for the worker by using the
- notice : String
- fablicationTec : String
- number : String
- name : String
Product
- problem : String
Process
- hour : Integer
- day : Integer
- month : Integer
- year : Integer
Date
- telephoneNumber : String
- address : String
- name : String
Factory
- charge
- recieptSchedule
- deliverySchdule
- taskStart
- taskCompletion
- targwt
1..*1..*
- instruction : String
- quantity : Integer
- label : Integer
ReturnableBox
- number : String
- name : String
Parts
1..*
- transfer
- reciept
- next
- shipping
- delivery
Worker_in_Parent_Company
Driver
Register
Product Record
Delete Product
Record
Register Process
Record
Update Process
Record
Read Process
Record
Worker_in_Cooperative_Company
Update Product
Record
Read Product
Record
Delete Process
Record
Process Management System
Driver
Worker_in_Cooperative_Company
Worker_in_Parent_Company
Read Process Information
Read Process Information
Request shipping
Returnnable box
Transport
Returnnable box
Read Process Information
Working
Update Process Information
Update Process Information
Request shipping
Returnnable box
Read Process Information
Transport
Returnnable box
Check Product
Check Returnnable box
Check Returnnable box
Check Returnnable box
Check Returnnable box
Put parts in
Returnnable box
Pre-conditions : Product information
has been registerd. && Process
information has been registerd.
Check Returnnable box
Read Process Information
Working
Update Process Information
44
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

system. The merits for workers are their respective goals,
but it is important that the introduction of the system itself
does not harm their tasks. The user characteristics of the
workers need to be sufficiently considered.
Figure 5 shows a workflow in which the process control
function, which uses a computer, is introduced into the
present work done in the real world. The conditions for
satisfying the goals of stakeholders by process control are as
follows:
1)
Information required for process information (see
the class diagram in Figure 3) is valid. This means
that the entity in the real world and the information
in the system are consistent with each other.
2)
It is required to confirm the degree of satisfaction of
each goal. For example,
a)
If responsible people can acquire the dates
related to a process they want to know as
management information, they can “grasp the
work situation” by sharing information with
other workers.
b)
The efficiency improvement of information
transmission can be accomplished by sharing
information even without using a telephone so
that the next work can be started and the
instruction content of the work can be known.
c)
Regarding the driver’s goal, the responsible
person can confirm with the process chart that
the product was delivered to the correct place.
E. Use-Case Scenario Validation
The grasp of the work situation of the abovementioned
condition 2) in Section III-D is modeled using a state
machine diagram as shown at the upper left of Figure 6.
Figure 6. Relationship between work situation and workflow
An activity diagram and a state machine diagram express
the behavior of a system from different viewpoints. The
former expresses a sequence of actions, and the latter
expresses a graph of the system state. Thus, we can see that
the column of each state in the real world corresponds to
each partition of the workflow.
In the state of the real world at the upper left, we
modeled how we can recognize the work performance of
each worker in the system by the workflow task of each
worker. The part indicated by a red circle represents the state
that the worker of the cooperating company can recognize by
using the system. Considering the user characteristics, if we
do not introduce a system to cooperating companies, they
cannot recognize this achievement state, that is, the model in
the lower left will be understood in the real world when the
parent company uses the system. In the workflow after
introducing the system, by associating information that is
understandable by the user through the system with the state
machine diagram of the actual state arising from the work of
the workflow, it is possible to intuitively grasp the merit of
introducing the system and to evaluate the value of
systemization.
IV. CASE STUDY
We conducted a joint lesson in two master courses of
System
Engineering
&
Science
and
Engineering
Management at our university over two years. The students
in the Engineering Management course researched the
visualization and sharing method of technology and skill
succession by extracting tasks from an actual situation based
on field observations for small and medium manufacturing
companies.
A subject with a realistic problem was given to students
in the System Engineering & Science course who had some
system development skills with UML. They were given the
subject and the research results that were observed in the
workplace of a small manufacturing company based on the
ethnography method. Then, the students analyzed the
system by ICT to contribute to the improvement of the
business. The purposes of this lesson were as follows:
·
To understand that the analyst has to specify a useful
scenario that the user can accomplish by using the
system during the actual work. This is because they
make the users understand the merit of introducing
the system into their work.
·
To understand how to check the validity of the
requirements defined using the UML requirements
analysis method based on the use-case components
and the state machine diagrams. This is because it is
difficult for the user to confirm whether the assumed
scenario has satisfied the goal.
·
To understand and organize the viewpoints of
various requirements analyses by analyzing the
problems of a small-scale
metal
manufacturing
company as an example of a real problem.
V. CONCLUSION
This
paper
presented
a
method
for
the
user
characteristics validation of a UML requirements analysis
model. Regarding this experience in the master course
lecture, we discussed the problems in acquiring user-centric
45
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

requirements
considering
the
user
characteristics,
as
follows:
·
If the user cannot master the system convenience,
there are often discrepancies between the information
within the system and the states in the actual
workflow. This causes damage to the effectiveness of
the system. Thus, as there are workers unfamiliar
with the operation of IT equipment, that a suitable
confirmation function should be implemented with
the user characteristics is indispensable.
·
Although
it
seemed
to
some
extent
that
the
information
the
users
wanted
to
manage
was
gathered through investigation by ethnography, it
was not verified whether this is sufficient for
developing some functions to improve the current
work.
This
is
because,
when
interviewing
or
observing, there are times when the observer does
not see the points that the analyst wants to clarify
from the analyst's point of view.
·
As the users
may be unfamiliar
with the IT
environment, they tend to hesitate when introducing
a system into their work, and it is necessary to
consider the following measures:
*
First, present the initial system where the effects
are clear.
*
Consider a system configuration that makes the
walls of use as low as possible.
*
Although it is necessary to clarify the actual
work process, observation and interview alone
are not sufficient. Measures are needed to clarify
what the users want to achieve in their work, and
we need to develop a prototype that allows the
users to check the scenarios directly.
In
this
case,
a
requirements
analysis
model
and
incremental-model-driven
development
are
useful
for
generating a prototype efficiently and improving the system
gradually at the early stage of development. A fundamental
scenario is useful to analyze the system behaviors that are
strongly affected by the user characteristics and to present a
suitable usage of input and output devices such as sensors.
We implemented
a prototype system according to
a
validated UML requirement analysis model, and we are
planning to evaluate this prototype system with the users.
REFERENCES
[1]
B. Nuseibeh, “Weaving the Software Development Process Between
Requirements and Architectures”, IEEE Computer, Vol. 34(3), pp.
115–117, 2001.
[2]
I. Jacobson, M. Christerson, P. Jonsson, and G. Övergaard, “Object-
Oriented Software Engineering: A Usecase Driven Approach”,
Addison-Wesley Publishing, 1992.
[3]
OMG, “Unified Modeling Language”, http://www.uml.org/ (access
2018-11-21).
[4]
S. Ogata and S. Matsuura, “A UML-based Requirements Analysis
with Automatic Prototype System Generation”, Communication of
SIWN, Vol. 3, pp. 166–172, 2008.
[5]
Y. Aoki, S． Ogata, H． Okuda, and S． Matsuura,“Quality
Improvement of Requirements Specification Using Model Checking
Technique”, Proc of ICEIS 2012, Vol. 2, pp. 401–406,2012.
[6]
S. Matsuura, S. Ogata, and Y. Aoki, “Goal-Satisfaction Verification
to Combination of Use Case Component”, ENASE2018, pp. 343–
350, 2018.
[7]
ChangeVision,
Inc.,
"Astah
professional:
Perfect
for
Software
Development," http://astah.net/, (access 2018-11-21).
[8]
IEEE Computer Society, “IEEE Recommended Practice for Software
Requirements Specifications”, IEEE Std 830-1998.
[9]
L.
Naidoo,
“Ethnography:
An
Introduction
to
Definition
and
Method”, doi: 10.5772/39248, 2012.
46
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-701-6
SOFTENG 2019 : The Fifth International Conference on Advances and Trends in Software Engineering

