Designing Indicators to Monitor the Fulﬁllment of Business Objectives with
Particular Focus on Quality and ICT-supported Monitoring of Indicators
Olav Skjelkv˚ale Ligaarden∗†, Atle Refsdal∗, and Ketil Stølen∗†
∗ Department for Networked Systems and Services, SINTEF ICT
PO Box 124 Blindern, N-0314 Oslo, Norway
E-mail: {olav.ligaarden, atle.refsdal, ketil.stolen}@sintef.no
† Department of Informatics, University of Oslo
PO Box 1080 Blindern, N-0316 Oslo, Norway
Abstract—In this paper we present our method ValidKI
for designing indicators to monitor the fulﬁllment of business
objectives with particular focus on quality and ICT-supported
monitoring of indicators. A set of indicators is valid with
respect to a business objective if it measures the degree to
which the business or relevant part thereof fulﬁlls the business
objective. ValidKI consists of six main steps. We demonstrate
the method on an example case focusing on the use of electronic
patient records in a hospital environment.
Keywords-Indicator,
business
objective,
quality,
ICT-
supported monitoring, electronic patient record
I. INTRODUCTION
Today’s companies beneﬁt greatly from ICT-supported
business processes, as well as business intelligence and
business process intelligence applications monitoring and
analyzing different aspects of a business and its processes.
The output from these applications may be indicators which
summarize large amounts of data into single numbers. In-
dicators can be used to evaluate how successful a company
is with respect to speciﬁc business objectives. For this to
be possible it is important that the indicators are valid. A
set of indicators is valid with respect to a business objective
if it measures the degree to which the business or relevant
part thereof fulﬁlls the business objective. Valid indicators
facilitate decision making, while invalid indicators may lead
to bad business decisions, which again may greatly harm the
company.
In today’s business environment, companies cooperate
across company borders. Such co-operations often result in
sharing or outsourcing of ICT-supported business processes.
One example is the interconnected electronic patient record
(EPR) infrastructure. The common goal for this infrastruc-
ture is the exchange of EPRs facilitating the treatment of
the same patient at more than one hospital. In such an
infrastructure, it is important to monitor the use of EPRs
in order to detect and avoid misuse. This may be achieved
through the use of indicators. It may be challenging to
identify and compute good indicators that are valid with
respect to business objectives that focus on quality in general
and security in particular. Furthermore, in an infrastructure
or system stretching across many companies we often have
different degrees of visibility into how the cooperating par-
ties perform their part of the business relationship, making
the calculation of indicators particularly hard.
In [1] we presented the method ValidKI (Valid Key
Indicators) for designing indicators to monitor the fulﬁllment
of business objectives with particular focus on quality and
ICT-supported monitoring of indicators. ValidKI facilitates
the design of a set of indicators that is valid with respect to
a business objective. In this paper we present an improved
version of the method.
We demonstrate ValidKI by applying it on an example
case targeting the use of EPRs. We have developed ValidKI
with the aim of fulﬁlling the following characteristics:
• Business focus: The method should facilitate the de-
sign and assessment of indicators for the purpose of
measuring the fulﬁllment of business objectives with
particular focus on quality and ICT-supported monitor-
ing of indicators.
• Efﬁciency: The method should be time and resource
efﬁcient.
• Generality: The method should be able to support
design of indicators for systems shared between many
companies or organizations.
• Heterogeneity: The method should not place restric-
tions on how indicators are designed.
The rest of the paper is structured as follows: in Section
II we introduce our basic terminology and deﬁnitions. In
Section III we give an overview of ValidKI and its six
main steps. In Sections IV – IX we demonstrate our six-
step method on an example case addressing the use of EPRs
in a hospital environment. In Section X we present related
work, while in Section XI we conclude by characterizing our
contribution and discussing the suitability of our method.
II. BASIC TERMINOLOGY AND DEFINITIONS
Hammond et al. deﬁnes indicator as “something that
provides a clue to a matter of larger signiﬁcance or makes
perceptible a trend or phenomenon that is not immediately
detectable” [2]. For example, a drop in barometric pressure
175
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

may signal a coming storm, while an unexpected rise in
the trafﬁc load of a web server may signal a denial of
service attack in progress. Thus, the signiﬁcance of an
indicator extends beyond what is actually measured to a
larger phenomenon of interest.
Indicators are closely related to metrics. [3] deﬁnes metric
as “a quantitative measure of the degree to which a system,
component, or process possesses a given attribute,” while it
deﬁnes attribute as “the speciﬁc characteristic of the entity
being measured.” For the web server mentioned above, an
example of an attribute may be availability. An availability
metric may again act as an indicator for denial of service
attacks, if we compare the metric with a baseline or expected
result [4]. As we can see, metrics are not that different from
indicators. For that reason, indicators and metrics are often
used interchangeably in the literature.
Many companies proﬁt considerably from the use of
indicators [5] resulting from business process intelligence
applications that monitor and analyze different aspects of a
business and its processes. Indicators can be used to measure
to what degree a company fulﬁlls its business objectives and
we then speak of key indicators. Some business objectives
may focus on business performance, while others may focus
on risk or compliance with laws and regulations. We will
in the remainder of the paper refer to indicators as key
indicators, since we focus on indicators in the context of
business objectives.
A. The artifacts addressed by ValidKI
The UML [6] class diagram in Figure 1 relates the main
artifacts addressed by ValidKI. The associations between
the different concepts have cardinalities that specify how
many instances of one concept that may be associated to an
instance of the other concept.
As characterized by the diagram, one or more key indica-
tors are used to measure to what extent a business objective
is fulﬁlled with respect to a relevant part of the business.
Each key indicator is calculated based on data provided
by one or more sensors. The sensors gather data from the
relevant part of the business. A sensor may gather data for
more than one key indicator.
B. The models/descriptions developed by ValidKI
As illustrated by Figure 2, performing the steps of ValidKI
results in nine different models/descriptions each of which
describes one of the artifacts of Figure 1 from a certain
perspective.
A speciﬁcation, at a suitable level of abstraction, docu-
ments the relevant part of the business in question.
Business objectives are typically expressed at an enter-
prise level and in such a way that they can easily be
understood by for example shareholders, board members,
partners, etc. It is therefore often not completely clear what
Relevant Part 
of Business
Key Indicator
1
Business 
Objective
1..*
Sensor
1..*
1
1..*
1
1..*
1..*
Figure 1.
The artifacts addressed by ValidKI
Specification of relevant part of business
Key indicator
Business objective
Relevant part of business
Artifacts
Models/Descriptions
Precise business objective
Sensor
Sensor deployment specification
Key indicator requirements specification
Key indicator design specification
Risk acceptance criteria
Model capturing risk to fulfillment of 
precise business objective
Reformulated precise business objective
Model capturing risk to correctness of 
reformulated precise business objective
Figure 2.
The models/descriptions developed by ValidKI
it means to fulﬁll them. This motivates the need to capture
each business objective more precisely.
The fulﬁllment of a precise business objective may be
affected by a number of risks. We therefore conduct a risk
analysis to capture risk to the fulﬁllment of the precise
business objective. To evaluate which risks that are ac-
ceptable and not acceptable with respect to the fulﬁllment
of the precise business objective, we use risk acceptance
criteria. It is the risks that are not acceptable that we need
to monitor. The acceptable risks may be thought of to
represent uncertainty we can live with. In other words, their
potential occurrences are not seen to signiﬁcantly inﬂuence
the fulﬁllment of the business objective.
The degree of fulﬁllment of a precise business objective
is measured by a set of key indicators. To measure its
degree of fulﬁllment there is a need to express each precise
business objective in terms of key indicators. We refer to this
reformulation as the reformulated precise business objective.
Moreover, the correctness of key indicators will be affected
if they are not implemented correctly. This may again lead
to new unacceptable risks that affect the fulﬁllment of the
precise business objective. Since the reformulated precise
176
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

business objective is the precise business objective expressed
in terms of key indicators, we need to analyze risks to the
correctness of the reformulated precise business objective.
The computation of key indicators relies on different kinds
of data. To collect the data, sensors need to be deployed in
the relevant part of business. Thus, there is a need to specify
the deployment of different sensors.
For each key indicator we distinguish between two speci-
ﬁcations: the key indicator requirements speciﬁcation and
the key indicator design speciﬁcation. The ﬁrst captures
requirements to a key indicator with respect to the sensor
deployment speciﬁcations, while the second deﬁnes how the
key indicator should be calculated.
C. Validity
[7] deﬁnes validation as “conﬁrmation, through the pro-
vision of objective evidence, that the requirements for a
speciﬁc intended use or application have been fulﬁlled.”
Since an indicator is basically a metric that can be compared
to a baseline/expected result, the ﬁeld of metric validation is
highly relevant. There is however no agreement upon what
constitutes a valid metric [8]. In [8], Meneely et al. present a
systematic literature review of papers focusing on validation
of software engineering metrics. The literature review began
with 2288 papers, which were later reduced to 20 papers.
From these 20 papers, the authors extracted and categorized
47 unique validation criteria. The authors argue that metric
researchers and developers should select criteria based on
the intended usage of the metric. Even though the focus
in [8] is on validation of software engineering metrics, a
number of the validation criteria presented are general, thus
not speciﬁc to software engineering. In particular, following
[8] we deﬁne a set of key indicators to be valid with respect
to a business objective if it is valid in the following two
ways:
1) internal validity – the precise business objective
expressed in terms of the key indicators correctly
measures the degree to which the business objective
is fulﬁlled; and
2) construct validity – the gathering of the sensor mea-
surements of each key indicator is suitable with respect
to its requirements speciﬁcation.
III. OVERVIEW OF VALIDKI
Figure 3 provides an overview of the ValidKI method.
It takes as input a business objective and delivers a set of
key indicators and a report arguing its validity with respect
to the business objective received as input. When using
ValidKI in practice we will typically develop key indicators
for a set of business objectives, and not just one which we
restrict our attention to here. It should be noticed that when
developing key indicators for a set of business objectives, we
need to take into account that key indicators (i.e., software
Input:
A business objective
Step 1: 
Establish target
Step 1.1:
Express business objectives more precisely
Step 1.2:
Describe relevant part of business
Step 2: 
Identify risks to fulfillment of business objective
Step 2.1:
Specify risk acceptance criteria
Step 2.2:
Risk identification and estimation
Step 2.3:
Risk evaluation
Step 3:
Identify key indicators to monitor risks
Step 3.1:
Deploy sensors to monitor risks 
Step 3.2:
Specify requirements to key indicators wrt deployed 
sensors
Step 4:
Evaluate internal validity
Step 4.1:
Express business objective in terms of key indicators
Step 4.2:
Evaluate criteria for internal validity
Step 5:
Specify key indicator designs
Step 6:
Evaluate construct validity
Output:
A set of key indicators and a report arguing its validity 
with respect to the business objective received as 
input
Figure 3.
Overview of ValidKI
or infrastructure) developed for one business objective may
affect the validity of key indicators developed for another.
In the following we offer additional explanations for each
of the six main steps of the ValidKI method.
A. Establish target
The ﬁrst main step of ValidKI is all about understanding
the target, i.e., understanding exactly what the business
objective means and acquiring the necessary understanding
of the relevant part of business for which the business
objective has been formulated. We distinguish between two
sub-steps. In the ﬁrst sub-step we characterize the business
objective more precisely by formulating constraints that need
to be fulﬁlled. In the second sub-step we specify the relevant
part of the business.
B. Identify risks to fulﬁllment of business objective
The second main step of ValidKI is concerned with
conducting a risk analysis to identify risks to the fulﬁllment
of the business objective. We distinguish between three sub-
steps. In the ﬁrst sub-step the risk acceptance criteria are
speciﬁed. The criteria classify a risk as either acceptable or
unacceptable based on its likelihood and consequence. In the
second sub-step we identify how threats may initiate risks.
We also identify vulnerabilities and threat scenarios leading
up to the risks, and we estimate likelihood and consequence.
During the risk analysis we may identify risks that pull in the
same direction. Such risks should be combined into one risk.
The individual risks may be acceptable when considered
in isolation, while the combined risk may be unacceptable.
177
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

In the third sub-step we evaluate the identiﬁed risks with
respect to the speciﬁed risk acceptance criteria.
C. Identify key indicators to monitor risks
The third main step of ValidKI is concerned with iden-
tifying key indicators to monitor the unacceptable risks
identiﬁed in the previous step. We distinguish between two
sub-steps. In the ﬁrst sub-step we specify how sensors
should be deployed in the relevant part of business. The key
indicators that we identify are to be calculated based on data
gathered by the sensors. In the second sub-step we specify
our requirements to the key indicators with respect to the
deployed sensors. The two sub-steps are typically conducted
in parallel.
D. Evaluate internal validity
The fourth main step of ValidKI is concerned with evalu-
ating whether the set of key indicators is internally valid with
respect to the business objective. We distinguish between
two sub-steps. In the ﬁrst sub-step we reformulate the precise
business objective by expressing it in terms of the identiﬁed
key indicators. This step serves as an introductory step in
the evaluation of internal validity. In the second sub-step
we evaluate whether the set of key indicators is internally
valid by showing that the reformulated precise business
objective from Step 4.1 correctly measures the fulﬁllment
of the precise business objective from Step 1.1.
Internal validity may be decomposed into a broad category
of criteria [8]. In the following we list the criteria that we
take into consideration. For each criterion, we ﬁrst provide
the deﬁnition as given in [8], before we list the papers on
which the deﬁnition is based.
• Attribute validity: “A metric has attribute validity if
the measurements correctly exhibit the attribute that the
metric is intending to measure” [9][10]. In our case,
the key indicator needs to correctly exhibit the risk
attribute (likelihood or consequence) of the risk that it
is measuring. In addition, the key indicator is of little
value if it can only produce values that always result
in the risk being acceptable or unacceptable.
• Factor independence: “A metric has factor indepen-
dence if the individual measurements used in the metric
formulation are independent of each other” [11]. This
criterion applies especially to composite key indicators
that are composed of basic key indicators. A composite
key indicator has factor independence if the basic key
indicators are independent of each other, i.e., if they do
not rely on the same measurements.
• Internal consistency: “A metric has internal consis-
tency if “all of the elementary measurements of a
metric are assessing the same construct and are inter-
related”” [12]. This criterion also applies especially to
composite key indicators that are composed of basic
key indicators. If the basic key indicators measure
things that are not conceptually related, then the com-
posite key indicator will not have internal consistency.
For instance, let us say that we have a composite key
indicator that is composed of two basic key indica-
tors. The ﬁrst basic key indicator measures the code
complexity of a software product, while the second
measures the cost of shipping the software product to
the customers. In this case, the composite key indicator
does not have internal consistency, since the two basic
key indicators are not conceptually related.
• Appropriate continuity: “A metric has appropriate
continuity if the metric is deﬁned (or undeﬁned) for all
values according to the attribute being measured” [10].
An example of a discontinuity is fraction calculations
when the denominator is zero. To avoid discontinuity,
the key indicator should be deﬁned for that case.
• Dimensional consistency: “A metric has dimensional
consistency if the formulation of multiple metrics into a
composite metric is performed by a scientiﬁcally well-
understood mathematical function” [10][13]. Under
dimensional consistency, no information should be lost
during the construction of composite key indicators.
Loss of information may be experienced if different
scales are used for the basic and composite key indica-
tors.
• Unit validity: “A metric has unit validity if the units
used are an appropriate means of measuring the at-
tribute” [10][14]. For instance, the unit fault rate may
be used to measure the attribute program correctness
[10].
If the set is not internally valid, then we iterate by re-doing
Step 3.
E. Specify key indicator designs
In the ﬁfth main step of ValidKI we specify the designs of
the identiﬁed key indicators. Each design speciﬁes how the
key indicator should be calculated. The design also shows
how sensors, actors, and different components interact.
F. Evaluate construct validity
In the sixth main step of ValidKI we evaluate whether
the set of key indicators has construct validity with respect
to the business objective. As with internal validity, construct
validity may be decomposed into a broad category of criteria
[8]. In the following we list the criteria that we take
into consideration. For each criterion, we ﬁrst provide the
deﬁnition as given in [8], before we list the papers on which
the deﬁnition is based.
• Stability: “A metric has stability if it produces the same
values “on repeated collections of data under similar
circumstances”” [12][15][16]. A key indicator whose
calculation involves decisions made by humans, may
for example result in different values and thus lack of
stability.
178
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

• Instrument validity: “A metric has instrument validity
if the underlying measurement instrument is valid and
properly calibrated” [10]. In our case, this criterion
concerns the sensors that perform the measurements.
• Deﬁnition validity: “A metric has deﬁnition validity if
the metric deﬁnition is clear and unambiguous such
that its collection can be implemented in a unique,
deterministic way” [11][15][16][17][18]. This criterion
concerns the implementation of the key indicators. To
implement a key indicator correctly, the key indicator’s
design speciﬁcation needs to be clear and unambiguous.
To evaluate the different criteria, we re-do the risk analysis
from Step 2.2 with the precise business objective replaced
by the reformulated precise business objective, which is
the precise business objective expressed in terms of key
indicators. For each key indicator we identify risks towards
the correctness of the reformulated precise business objective
that are the result of threats to criteria for construct validity
that the key indicator needs to fulﬁll. If the risk analysis
does not result in any new unacceptable risks, then we have
established construct validity for each key indicator. If the
set does not have construct validity, then we iterate. We
will most likely be re-doing Step 5, but it may also be
the case that we need to come up with new key indicators
and new sensors. In that case, we re-do Step 3. If the set
of key indicators is both internally valid and has construct
validity with respect to the business objective, then we have
established that the set is valid.
IV. ESTABLISH TARGET
In the following we assume that we have been hired to
help the public hospital Client H design key indicators to
monitor their compliance with Article 8 in the European
Convention on Human Rights [19]. The article states the
following:
Article 8 – Right to respect for private and family life
1) Everyone has the right to respect for his private and
family life, his home and his correspondence.
2) There shall be no interference by a public authority
with the exercise of this right except such as is in ac-
cordance with the law and is necessary in a democratic
society in the interests of national security, public
safety or the economic well-being of the country, for
the prevention of disorder or crime, for the protection
of health or morals, or for the protection of the rights
and freedoms of others.
Client H needs to comply with Article 8 since it is
a public authority. The consequence for Client H of
not complying with Article 8 may be economic loss
and damaged reputation. One example [20] of violation of
Article 8 is from Finland. A Finnish woman was ﬁrst treated
for HIV at a hospital, before she later started working there
as a nurse. While working there she suspected that her
co-workers had unlawfully gained access to her medical
data. She brought the case to the European Court of Human
Rights in Strasbourg which unanimously held that the
district health authority responsible for the hospital had
violated Article 8 by not protecting the medical data of
the woman properly. The district health authority was held
liable to pay damages to the woman. Client H has therefore
established the following business objective:
Business objective BO-A8: Client H complies with Article
8 in the European Convention on Human Rights.
Client H wants to make use of key indicators to monitor
the degree of fulﬁllment of BO-A8, and now they have hired
us to use ValidKI to design them. In the rest of this section
we conduct Step 1 of ValidKI on behalf of Client H with
respect to BO-A8.
A. Express business objectives more precisely (Step 1.1 of
ValidKI)
Article 8 states under which circumstances a public au-
thority can interfere with someone’s right to privacy. One of
these circumstances is “for the protection of health,” which
is what Client H wants us to focus on. In the context of
Client H this means to provide medical assistance to patients.
The ones who provide this assistance are the health-care
professionals of Client H.
The medical history of a patient is regarded as both
sensitive and private. At Client H, the medical history of
a patient is stored in an electronic patient record (EPR). An
EPR is “an electronically managed and stored collection or
collocation of recorded/registered information on a patient
in connection with medical assistance” [21]. The main
purpose of an EPR is to communicate information between
health-care professionals that provide medical care to a
patient. To protect the privacy of its patients, Client H
restricts the use of EPRs. In order to comply with Article
8, Client H allows a health-care professional to interfere
with the privacy of a patient only when providing medical
assistance to this patient. Hence, the dealing with EPRs
within the realms of Client H is essential.
For Client H it is important that every access to
information in an EPR is in accordance with Article 8. A
health-care professional should only access a patient’s EPR
if he/she provides medical assistance to that patient, and
he/she should only access information that is necessary
for the medical assistance provided to the patient. The
information accessed can not be used for any other purpose
than providing medical assistance to patients. Accesses
to information in EPRs not needed for providing medical
assistance would not be in accordance with Article 8. Also,
employees that are not health-care professionals and work
within the jurisdiction of Client H are not allowed to access
179
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

EPRs. Based on the constraints provided by Client H, we
decide to express BO-A8 more precisely as follows:
Precise business objective PBO-A8: C1 ∧ C2 ∧ C3
• Constraint C1: Health-care professionals acting on
behalf of Client H access:
– a patient’s EPR only when providing medical as-
sistance to that patient
– only the information in a patient’s EPR that is
necessary for providing medical assistance to that
patient
• Constraint C2: Health-care professionals acting on
behalf of Client H do not use the information obtained
from a patient’s EPR for any other purpose than pro-
viding medical assistance to that patient.
• Constraint C3: Employees that are not health-care
professionals and that work within the jurisdiction of
Client H do not access EPRs.
As indicated by PBO-A8’s deﬁnition, all three constraints
must be fulﬁlled in order for PBO-A8 to be fulﬁlled.
B. Describe relevant part of business (Step 1.2 of ValidKI)
To design key indicators to monitor BO-A8 we need to
understand the part of business that is to comply with BO-A8
and therefore is to be monitored. “Public hospital Client H”
has outsourced some of its medical services to two private
hospitals. These two are referred to as “Private hospital X-
ray” and “Private hospital Blood test analysis” in Figure 4.
The ﬁrst hospital does all the X-ray work for Client H, while
the second hospital does all the blood test analyses. Client
H is not only responsible for its own handling of EPRs, but
also the outsourcing partners’ handling of EPRs, when they
act on behalf of Client H.
As can be seen in Figure 4, Client H outsources medical
tasks to the two private hospitals, and gets in return the
results from performing these tasks. All three health-care
institutions employs some kind of EPR system for handling
the EPRs. An EPR system is “an electronic system with
the necessary functionality to record, retrieve, present, com-
municate, edit, correct, and delete information in electronic
patient records” [21]. These systems use EPRs provided by
different health-care institutions. As shown in Figure 4, these
systems are only of interest when they handle EPRs where
Client H is responsible for their handling.
At the three health-care institutions, most of the medical
tasks that a health-care professional conducts during a work-
ing day are known in advance. It is known which patients
the professional will treat and what kind of information
the professional will need access to in order to treat the
different patients. Client H and the two outsourcing partners
maintain for each health-care professional an authorization
list documenting which patients the professional is treating
and what kind of information the professional needs for this
purpose. These lists are used by the EPR systems and they
are updated on a daily basis by the medical task management
systems. Many of these updates are automatic. For instance,
when Client H is assigned a new patient, then this patient is
added to the lists of the health-care professionals who will
be treating this patient.
Each EPR is owned by a patient, which is natural since
the information stored in the EPR is about the patient in
question. As already mentioned, the content of a patient’s
EPR is both considered sensitive and private. Moreover,
some of the EPRs may contain information that is considered
highly sensitive and private. Such information may for
instance describe medical treatment received by a patient
in relation to:
• the patient being the victim of a crime (e.g., rape,
violence, etc.);
• sexual transferable diseases or abortion; and
• mortal or infectious mortal diseases.
Information classiﬁed as highly sensitive and private is
handled with even more care than information that is just
classiﬁed as sensitive and private. To raise awareness of the
criticality of such information and to enable monitoring of
its use, the EPR systems at the three health-care institutions
tag highly sensitive and private information in EPRs based
on predeﬁned rules.
Accesses to information in EPRs can be classiﬁed as
authorized or unauthorized based on the authorization lists
of health-care professionals. An access is classiﬁed as au-
thorized if the professional needs the information to do a
planned task. Otherwise, the access is classiﬁed as unau-
thorized. If an access is classiﬁed as unauthorized then it
is possible to check in retrospect whether the access was
necessary. In an emergency situation, for instance when a
patient is having a heart attack, a health-care professional
often needs access to information in an EPR that he/she
was not supposed to access. By checking in retrospect
whether unauthorized accesses were necessary it is possible
to classify the unauthorized accesses into two groups; one for
accesses that were necessary, and one for those that were not.
The ﬁrst group is called approved unauthorized accesses,
while the second group is called not approved unauthorized
accesses. All accesses that are classiﬁed as not approved
unauthorized accesses are considered as illegal accesses.
At Client H and the two outsourcing partners, health-care
professionals use smart cards for accessing information in
EPRs. If a card is lost or stolen, the owner must report it as
missing, since missing cards may be used by other health-
care professionals or others to access EPRs illegally. When
the card has been registered as missing it can no longer be
used. When reporting it as missing, the last time the card
owner used it before noticing that it was missing is recorded.
All accesses to EPRs that have occurred between this time
and the time it was registered as missing are considered as
illegal accesses.
180
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Outsourced 
medical tasks
Results of performing 
outsourced medical tasks
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Outsourced 
medical tasks
Results of performing 
outsourced medical tasks
Requests to access info in EPRs 
Requests to access info in EPRs 
Requests to access info in EPRs 
Private hospital
X-ray
Public hospital
Client H
Private hospital
Blood test analysis
Figure 4.
Speciﬁcation of relevant part of business
181
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table I
CONSEQUENCE SCALE FOR THE ASSET “FULFILLMENT OF PBO-A8”
(TOP) AND LIKELIHOOD SCALE (BOTTOM)
Consequence
Description
Catastrophic
Law enforcement agencies penalize Client H after
having been notiﬁed about the incident
Major
Health authorities penalize Client H after having
been notiﬁed about the incident
Moderate
Health authorities are notiﬁed about the incident
Minor
Head of hospital is notiﬁed about the incident
Insigniﬁcant
Head of department is notiﬁed about the incident
Likelihood
Description
Certain
Five times or more per year [50, ∞⟩ : 10 years
Likely
Two to ﬁve times per year [20, 49] : 10 years
Possible
Once a year [6, 19] : 10 years
Unlikely
Less than once per year [2, 5] : 10 years
Rare
Less than once per ten years [0, 1] : 10 years
V. IDENTIFY RISKS TO FULFILLMENT OF BUSINESS
OBJECTIVE
For the sake of simplicity, we only show how we identify
risks to the fulﬁllment of constraint C1. Thus, we assume
that the precise business objective PBO-A8 only consists of
the constraint C1.
A. Specify risk acceptance criteria (Step 2.1 of ValidKI)
Before we specify the risk acceptance criteria, we need to
establish scales for measuring likelihood and consequence.
Table I presents these scales. We view “Fulﬁllment of PBO-
A8” as the asset to be protected. In Table II the risk
acceptance criteria for the asset “Fulﬁllment of PBO-A8”
are expressed in terms of a risk evaluation matrix. Risks
whose values belong to the white area of the matrix are
acceptable, while risks whose values belong to the gray area
are unacceptable.
B. Risk identiﬁcation and estimation (Step 2.2 of ValidKI)
Based on the information provided by the representatives
of Client H, we identify and estimate risk. For this purpose
we use the CORAS methodology [22]. However, other
approaches to risk analysis may be used instead. Using
CORAS we identify how threats may initiate risks that harm
the asset “Fulﬁllment of PBO-A8” if they occur.
The CORAS threat diagram in Figure 5 documents differ-
ent risks that may harm the fulﬁllment of the precise business
objective PBO-A8. The CORAS threat diagram contains
two human threats; one accidental (the white one) and one
deliberate (the black one). The accidental human threat
“Health-care professional” may initiate the threat scenario
“Unauthorized access to information in a patient’s EPR”
with likelihood “Likely” by exploiting the vulnerability
“No restrictions on what EPRs a health-care professional
can access.” We can also see that the deliberate human
threat “Health-care professional” may initiate this threat
scenario, and that the threat scenario occurs with likelihood
“Certain.” If the threat scenario occurs then it leads to the
threat scenario “Unauthorized access to sensitive and private
information” with conditional likelihood “0.7.” This threat
scenario leads to the risk “R1: Not approved unauthorized
access to sensitive and private information in an EPR, where
the owner of the EPR is a patient of the accessor” with
conditional likelihood “0.6” if it occurs. The risk occurs
with likelihood “Likely.” It impacts the asset “Fulﬁllment
of PBO-A8” with consequence “Insigniﬁcant” if it occurs.
The diagram documents that a health-care professional
can accidentally perform unauthorized accesses. It also
documents that a health-care professional can deliberately
perform unauthorized accesses, or use lost/stolen smart cards
to access information in EPRs. As can be seen in the
diagram, we distinguish between not approved unauthorized
accesses to information in EPRs where the owner of the EPR
is a patient and not a patient of the accessor. Client H ﬁnds
it most serious if the owner of the EPR is not a patient of the
accessor. We also distinguish between not approved unau-
thorized accesses to sensitive and private information and
not approved unauthorized accesses to highly sensitive and
private information. Naturally, Client H ﬁnds not approved
unauthorized accesses to the latter type of information the
most serious.
C. Risk evaluation (Step 2.3 of ValidKI)
The risk evaluation consists in plotting the risks into the
risk evaluation matrix according to their likelihoods and
consequences. As indicated in Table III, two out of the six
risks namely R4 and R6 are unacceptable with respect to
the fulﬁllment of the precise business objective PBO-A8.
VI. IDENTIFY KEY INDICATORS TO MONITOR RISKS
A. Deploy sensors to monitor risks (Step 3.1 of ValidKI)
Figure 6, which is a detailing of the target description in
Figure 4, speciﬁes the deployment of sensors in the relevant
part of business. This speciﬁcation corresponds to the sensor
deployment speciﬁcation referred to in Figure 2. An antenna-
like symbol is used to represent each sensor in Figure 6. The
different sensors monitor data messages exchanged within
the relevant part of business. The results from the monitoring
are to be used in the computation of key indicators.
The following sensors are deployed in the relevant part of
business:
• SCH-REG-MIS-SC,
SBTA-REG-MIS-SC,
and
SXR-REG-MIS-SC
monitor data messages related to the registration of
missing smart cards at Client H, Blood test analysis,
and X-ray, respectively.
• SCH-AUTH-LIST, SBTA-AUTH-LIST, and SXR-AUTH-LIST mon-
itor data messages related to the authorization lists
employed by the EPR systems at Client H, Blood test
analysis, and X-ray, respectively.
182
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table II
RISK EVALUATION MATRIX FOR THE ASSET “FULFILLMENT OF PBO-A8”
Likelihood
Consequence
Insigniﬁcant
Minor
Moderate
Major
Catastrophic
Rare
Unlikely
Possible
Likely
Certain
Health-care 
professional
Unauthorized 
access to 
information in 
a patient’s EPR
[Certain]
Unauthorized 
access to sensitive 
and private 
information
[Likely]
Unauthorized 
access to highly 
sensitive and private 
information
[Possible]
R1: Not approved unauthorized 
access to sensitive and private 
information in an EPR, where the 
owner of the EPR is a patient of 
the accessor
[Likely]
0.7
0.3
R3: Not approved unauthorized 
access to highly sensitive and 
private information in an EPR, 
where the owner of the EPR is a 
patient of the accessor
[Possible]
0.6
0.4
R2: Not approved unauthorized 
access to sensitive and private 
information in an EPR, where the 
owner of the EPR is not a patient 
of the accessor
[Possible]
R4: Not approved unauthorized 
access to highly sensitive and 
private information in an EPR, 
where the owner of the EPR is 
not a patient of the accessor
[Possible]
0.6
0.4
Fulfillment of 
PBO-A8
Minor
R5: Access to sensitive and 
private information in an EPR 
from a lost/stolen smart card
[Rare]
R6: Access to highly sensitive 
and private information in an 
EPR from a lost/stolen smart 
card
[Unlikely]
Health-care 
professional
Health-care 
professional uses a smart 
card that has been lost/
stolen to access 
information in an EPR
[Unlikely]
0.1
0.9
Major
Insignificant
Minor
Major
Catastrophic
Likely
No restrictions on what 
EPRs a health-care 
professional can access
Possible
No restrictions on what 
EPRs a health-care 
professional can access
Unlikely
A lost/stolen smart 
card can be used until 
registered as missing
Figure 5.
CORAS threat diagram documenting the result of the risk identiﬁcation and estimation
183
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table III
THE RISK EVALUATION MATRIX FROM TABLE II WITH THE ACCEPTABLE AND UNACCEPTABLE RISKS INSERTED
Likelihood
Consequence
Insigniﬁcant
Minor
Moderate
Major
Catastrophic
Rare
R5
Unlikely
R6
Possible
R2, R3
R4
Likely
R1
Certain
Outsourced 
medical tasks
Results of performing 
outsourced medical tasks
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Medical task 
management 
system
Health-care 
professionals
Medical tasks
Results of performing medical tasks
EPR 
system
Requests to access 
info in EPRs 
Info from EPRs 
EPRs provided by some health-care institution, 
where Client H is responsible for their handling
Authorization lists
Authorization 
lists for 
health-care 
professionals
Registration of missing smart cards
Authorization lists updates
Outsourced 
medical tasks
Results of performing 
outsourced medical tasks
SBTA-REG-MIS-SC
SBTA-AUTH-LIST
SBTA-ACC-INFO-EPR
SCH-REG-MIS-SC
SCH-AUTH-LIST
SCH-ACC-INFO-EPR
SXR-REG-MIS-SC
SXR-AUTH-LIST
SXR-ACC-INFO-EPR
Requests to access 
info in EPRs 
Requests to access 
info in EPRs 
Private hospital
X-ray
Public hospital
Client H
Private hospital
Blood test analysis
Figure 6.
Deployment of sensors in the relevant part of business
184
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table IV
KEY INDICATOR REQUIREMENTS SPECIFICATIONS FOR
KCH-NOT-APP-UNAUTH-ACC, KBTA-NOT-APP-UNAUTH-ACC, AND
KXR-NOT-APP-UNAUTH-ACC
Requirements for KX-NOT-APP-UNAUTH-ACC, where X ∈
{CH, BTA, XR}
In:
SX-AUTH-LIST : M∗
SX-ACC-INFO-EPR : M∗
Out:
KX-APP-UNAUTH-ACC : N
Description:
KX-NOT-APP-UNAUTH-ACC = “The number of not approved unautho-
rized accesses at X since the monitoring started to highly sensitive
and private information in EPRs, where the owners of the EPRs are
not patients of the accessors”
Table V
KEY INDICATOR REQUIREMENTS SPECIFICATIONS FOR KCH-ILL-ACC-SC,
KBTA-ILL-ACC-SC, AND KXR-ILL-ACC-SC
Requirements for KX-ILL-ACC-SC, where X ∈ {CH, BTA, XR}
In:
SX-REG-MIS-SC : M∗
SX-ACC-INFO-EPR : M∗
Out:
KX-ILL-ACC : R
Description:
KX-ILL-ACC-SC = “The number of illegal accesses at X since the
monitoring started to highly sensitive and private information in EPRs
from lost/stolen smart cards”
• SCH-ACC-INFO-EPR,
SBTA-ACC-INFO-EPR,
and
SXR-ACC-INFO-EPR
monitor
data
messages
where
each message is a request issued by health-care
professional to access information in an EPR at Client
H, Blood test analysis, and X-ray, respectively. It is not
necessary to monitor the actual information received,
since health-care professionals will always get the
information they request.
B. Specify requirements to key indicators wrt deployed sen-
sors (Step 3.2 of ValidKI)
Two key indicators KNOT-APP-UNAUTH-ACC and KILL-ACC-SC
are identiﬁed to monitor the likelihood values of the two
unacceptable risks R4 and R6, respectively. In Tables VI
and VII their requirements are given. The two key indicators
calculate likelihoods with respect to a ten year period,
because the likelihoods in the likelihood scale in Table I
are deﬁned with respect to a ten year period. Both key
indicators are composed of basic key indicators. Table IV
presents the requirements to the basic key indicators that
KNOT-APP-UNAUTH-ACC is composed of, while Table V presents
the requirements to the basic key indicators that KILL-ACC-SC
is composed of.
Table VI
KEY INDICATOR REQUIREMENTS SPECIFICATION FOR
KNOT-APP-UNAUTH-ACC
Requirements for KNOT-APP-UNAUTH-ACC
In:
SCH-AUTH-LIST, SBTA-AUTH-LIST, SXR-AUTH-LIST : M∗
SCH-ACC-INFO-EPR, SBTA-ACC-INFO-EPR, SXR-ACC-INFO-EPR : M∗
Out:
KNOT-APP-UNAUTH-ACC : R
Description:
KNOT-APP-UNAUTH-ACC = (10 · (KCH-NOT-APP-UNAUTH-ACC +
KBTA-NOT-APP-UNAUTH-ACC + KXR-NOT-APP-UNAUTH-ACC)) /
Number of years since the monitoring started
Table VII
KEY INDICATOR REQUIREMENTS SPECIFICATION FOR KILL-ACC-SC
Requirements for KILL-ACC-SC
In:
SCH-REG-MIS-SC, SBTA-REG-MIS-SC, SXR-REG-MIS-SC : M∗
SCH-ACC-INFO-EPR, SBTA-ACC-INFO-EPR, SXR-ACC-INFO-EPR : M∗
Out:
KILL-ACC : R
Description:
KILL-ACC-SC = (10 · (KCH-ILL-ACC-SC +
KBTA-ILL-ACC-SC + KXR-ILL-ACC-SC)) /
Number of years since the monitoring started
For each key indicator we specify required sensor data.
All of the key indicators rely on sequences of data messages
(M ∗) gathered by the different sensors. We also specify the
output type and requirements to output. For a key indicator
K we refer to its requirement description as Req(K).
VII. EVALUATE INTERNAL VALIDITY
A. Express business objective in terms of key indicators
(Step 4.1 of ValidKI)
The precise business objective PBO-A8’ is a reformula-
tion of the precise business objective PBO-A8 expressed in
terms of key indicators.
PBO-A8’ = KNOT-APP-UNAUTH-ACC ∈ [0, 5] ∧
KILL-ACC-SC ∈ [0, 1] ∧
Req(KNOT-APP-UNAUTH-ACC) ∧
Req(KILL-ACC-SC)
The precise business objective PBO-A8 is fulﬁlled if the
likelihood values of the two unacceptable risks R4 and
R6 change in such a way that the two risks becomes
acceptable. The risks R4 and R6 become acceptable if the
likelihoods change from “Possible” to “Unlikely” or “Rare”
and from “Unlikely” to “Rare,” respectively. The likelihoods
will change in such a way if the two composite key in-
dicators KNOT-APP-UNAUTH-ACC and KILL-ACC-SC, monitoring
185
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

these likelihoods, are contained in the interval [0, 5] (interval
capturing both “Rare: [0, 1] : 10 years” and “Unlikely: [2, 5] :
10 years”) and [0, 1] (“Rare: [0, 1] : 10 years”), respectively.
Moreover, the two composite key indicators need to measure
the likelihoods correctly in order to measure the fulﬁllment
of PBO-A8. This can be determined based on the require-
ments (Req(KNOT-APP-UNAUTH-ACC) and Req(KILL-ACC-SC))
to the two composite key indicators.
The reformulated precise business objective can also be
used to determine to what degree the precise business
objective is fulﬁlled. For instance, if KNOT-APP-UNAUTH-ACC
equals 6 while KILL-ACC-SC equals 0, then PBO-A8 is close
to being fulﬁlled. On the other hand, if KNOT-APP-UNAUTH-ACC
equals 10 instead, then PBO-A8 is far from being fulﬁlled.
B. Evaluate criteria for internal validity (Step 4.2 of
ValidKI)
To evaluate the internal validity of the set of key indica-
tors, we need to show that the reformulated precise business
objective PBO-A8’ measures the fulﬁllment of the precise
business objective PBO-A8. We evaluate the internal validity
of each composite key indicator based on the criteria given
in Section III-D. To evaluate attribute validity we need to
compare the deﬁnitions of the two risks R4 and R6 in Figure
5 with the requirements of the two composite key indi-
cators, which are given by Req(KNOT-APP-UNAUTH-ACC) and
Req(KILL-ACC-SC). In both cases there is a match between the
deﬁnition of the risk and the requirements to the composite
key indicator. We therefore conclude that the composite
key indicators measure the likelihoods of the two risks. In
addition, based on the requirements speciﬁed for the two
composite key indicators it is clear that the two composite
key indicators are not restricted to only producing values
that are always contained or not contained in the intervals
mentioned above. Thus, both acceptable and unacceptable
risks can be detected.
Moreover, both of the composite key indicators have fac-
tor independence. Each composite key indicator is calculated
based on three basic key indicators. These are independent of
each other, since they are computed by three different health-
care institutions. The two composite key indicators do also
have internal consistency, since the three basic key indicators
employed by each composite key indicator measure the same
thing, but at different health-care institutions. The three basic
key indicators are therefore conceptually related.
We continue the evaluation of internal validity by evalu-
ating whether the composite key indicators have appropriate
continuity. Both are discontinuous if “Number of years
since the monitoring started” equals zero. Client H does
not consider this to be a problem, since the denominator
will in both cases be a real number that is never zero.
We also show that the two composite key indicators have
dimensional consistency. Each composite key indicator adds
three likelihoods, where each is for the period of “Number
of years since the monitoring started” years, and transforms
the resulting likelihood into a likelihood which is for a period
of ten years. Thus, no information is lost when constructing
the composite key indicators from their respective basic
key indicators. The two composite key indicators do also
have unit validity. Both use the unit “likelihood per ten
years,” which is appropriate for measuring the two likelihood
attributes of the risks.
Based on the evaluation of the different internal validity
types of criteria above, we conclude that the set of key
indicators is internally valid. When the precise business
objective PBO-A8 is fulﬁlled, we get the risk evaluation
matrix in Table VIII. In this situation, both of the risks R4
and R6 are acceptable, and the risk R4 will either have the
likelihood “Rare” (R4′) or “Unlikely” (R4′′).
VIII. SPECIFY KEY INDICATOR DESIGNS
For the sake of simplicity, we only specify the design
of the key indicator KNOT-APP-UNAUTH-ACC and the basic
key indicators that it is composed of. We use the UML
[6] sequence diagram notation for the key indicator de-
sign speciﬁcations, but one may of course also use other
languages depending on the problem in question. The se-
quence diagram in Figure 7 speciﬁes how the key indica-
tor KNOT-APP-UNAUTH-ACC is calculated. Each entity in the
sequence diagram is either a component, a sensor, or an
employee at Client H, and it is represented by a dashed,
vertical line called a lifeline, where the box at its top speci-
ﬁes which entity the lifeline represents. The entities interact
with each other through the transmission and reception of
messages, which are shown as horizontal arrows from the
transmitting lifeline to the receiving lifeline. We can also
see that a lifeline can be both the sender and receiver of a
message. The sequence diagram contains one reference (ref)
to another sequence diagram. This reference can be replaced
by the content of the sequence diagram that it refers to. The
reference refers to the sequence diagram given in Figure 8,
which describes the calculation of the basic key indicator
KCH-NOT-APP-UNAUTH-ACC. We do not present sequence dia-
grams describing the calculations of the two other basic
key indicators, since these calculations are performed in
the same way as the calculation of KCH-NOT-APP-UNAUTH-ACC,
and since these calculations involve the same types of
sensors, actors, and components as the ones described in
Figure 8. For the two other basic key indicators we only
show that they are sent to “Component for calculating
KNOT-APP-UNAUTH-ACC,” and that they are used in the calcu-
lation of KNOT-APP-UNAUTH-ACC.
The sequence diagram in Figure 8 shows that the basic key
indicator KCH-NOT-APP-UNAUTH-ACC is updated each week. The
ﬁrst thing that happens is that “Component for calculating
KCH-NOT-APP-UNAUTH-ACC” sends the value that was computed
for the basic key indicator in the previous week to “Em-
ployee at Client H.” Afterwards, the component identiﬁes
186
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table VIII
THE RISK EVALUATION MATRIX WHEN THE PRECISE BUSINESS OBJECTIVE PBO-A8 IS FULFILLED
Likelihood
Consequence
Insigniﬁcant
Minor
Moderate
Major
Catastrophic
Rare
R4′, R5
R6
Unlikely
R4′′
Possible
R2, R3
Likely
R1
Certain
sd Calculation of KNOT-APP-UNAUTH-ACC
Component for 
calculating
KNOT-APP-UNAUTH-ACC
Sensor
SCH-AUTH-LIST
Sensor
SCH-ACC-INFO-EPR
Employee at 
Client H
Component for 
calculating
KCH-NOT-APP-UNAUTH-ACC
KCH-NOT-APP-UNAUTH-ACC
ref
Calculation of KCH-NOT-APP-UNAUTH-ACC
KBTA-NOT-APP-UNAUTH-ACC
KXR-NOT-APP-UNAUTH-ACC
KNOT-APP-UNAUTH-ACC = 
(10 · (KCH-NOT-APP-UNAUTH-ACC + 
KBTA-NOT-APP-UNAUTH-ACC + 
KXR-NOT-APP-UNAUTH-ACC))  ⁄  
Number of years since the monitoring started
Figure 7.
The sequence diagram “Calculation of KNOT-APP-UNAUTH-ACC”
“All unauthorized accesses at Client H in the period of one
week backwards to highly sensitive and private information
in EPRs, where the owners of the EPRs are not patients of
the accessors” based on input from the entities represent-
ing the sensors. The “Employee at Client H” performs a
manual inspection of each of these unauthorized accesses,
and classiﬁes each as approved or not approved. If the
unauthorized access is classiﬁed as not approved, then the
basic key indicator is incremented by one. After all the
unauthorized accesses have been inspected and classiﬁed,
“Employee at Client H” sends the basic key indicator to
the component which stores it. Afterwards, the component
sends the basic key indicator to “Component for calculating
KNOT-APP-UNAUTH-ACC,” as illustrated in the sequence diagram
in Figure 7.
IX. EVALUATE CONSTRUCT VALIDITY
To
evaluate
whether
the
key
indicator
KNOT-APP-UNAUTH-ACC
has
construct
validity,
we
re-do
the risk analysis from Step 2.2 with the asset “Fulﬁllment
of PBO-A8” replaced by the asset “Correctness of PBO-
A8’.” We have established that the monitoring infrastructure
described in Step 2–4 is suitable for monitoring the relevant
part of business. With the designs of the key indicators
speciﬁed in the previous step, we want to identify in
this step whether the proposed implementation of the
monitoring infrastructure results in any new unacceptable
187
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

sd Calculation of KCH-NOT-APP-UNAUTH-ACC
Sensor
SCH-AUTH-LIST
Sensor
SCH-ACC-INFO-EPR
Employee at 
Client H
Component for calculating
KCH-NOT-APP-UNAUTH-ACC
ACC_LIST: All accesses at Client H in the period of one week backwards to information in EPRs
AUTH_LISTS: All authorization lists used at Client H in the period of one week backwards
Perform manual inspection of 
UNAUTH_ACC and classify 
it as approved or not approved 
All unauthorized accesses UNAUTH_ACC_LIST at Client H in the 
period of one week backwards to highly sensitive and private 
information in EPRs, where the owners of the EPRs are not 
patients of the accessors
loop ( UNAUTH_ACC = 0, number of items in UNAUTH_ACC_LIST )
opt
[UNAUTH_ACC is classifed as not approved]
KCH-NOT-APP-UNAUTH-ACC = 
KCH-NOT-APP-UNAUTH-ACC + 1
KCH-NOT-APP-UNAUTH-ACC = ”The number of not approved 
unauthorized accesses at Client H since the start of the 
monitoring up to the end of the previous week to highly 
sensitive and private information in EPRs, where the 
owners of the EPRs are not patients of the accessors”
KCH-NOT-APP-UNAUTH-ACC
Store KCH-NOT-APP-UNAUTH-ACC
Figure 8.
The sequence diagram “Calculation of KCH-NOT-APP-UNAUTH-ACC”
risks. More precisely, we want to identify unacceptable
risks towards the correctness of the reformulated precise
business objective that are the result of threats to criteria
for construct validity that KNOT-APP-UNAUTH-ACC needs to
fulﬁll.
The result of the risk analysis is given in the CORAS
threat diagram in Figure 9. We evaluate the construct validity
of the composite key indicator based on the criteria given in
Section III-F. Client H is of the opinion that the correctness
of the key indicator KNOT-APP-UNAUTH-ACC referred to in the
reformulated precise business objective PBO-A8’ may be
affected if the employees who classify unauthorized accesses
as approved or not approved at X-ray and Blood test analysis
are incompetent and fraudulent, respectively. Both these
cases are examples of violation of the stability criterion,
since the classiﬁcation of unauthorized accesses as approved
or not approved involves human decisions.
Moreover,
Client
H
is
worried
that
the
sensor
188
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

SCH-ACC-INFO-EPR
(represented
as
a
non-human
threat)
may be unstable with respect to logging of accesses to
information in EPRs. This is an example of violation of
the instrument validity criterion. Besides the stability and
instrument validity criteria, deﬁnition validity should also
be evaluated. In our case, we say that a key indicator has
deﬁnition validity if its design is clear and unambiguous so
that the key indicator can be implemented correctly. The
only thing that is not clear and unambiguous with respect
to the design of KNOT-APP-UNAUTH-ACC is how unauthorized
accesses should be classiﬁed as approved or not approved.
Since this has already been covered during the evaluation
of the stability criterion, we do not pursue this issue further.
The different types of behavior affect the correctness of
the key indicator KNOT-APP-UNAUTH-ACC, which again affects
the correctness of PBO-A8’. In Table IX, two new risks R7
and R8 have been plotted according to their likelihoods and
consequences. As we can see from the table, none of the
new risks are unacceptable. We therefore conclude that the
key indicator KNOT-APP-UNAUTH-ACC has construct validity.
X. RELATED WORK
To the best of our knowledge, there exists no other
method for the design of valid key indicators to monitor
the fulﬁllment of business objectives with particular focus
on quality and ICT-supported monitoring of key indicators.
There is a tool-framework called Mozart [23] that uses a
model-driven approach to create monitoring applications that
employs key performance indicators. We do not focus on
the implementation of key indicators, but we specify what is
needed for implementing them. The work in [23] also differs
from our work by not designing indicators from scratch, but
by mining them from a data repository during the design
cycle.
An important part of our method is the assessment of the
validity of the key indicators we design. Our approach to
assessing validity is inspired by research conducted within
the software engineering domain. As previously explained,
there is however no agreement upon what constitutes a
valid software metric [8]. A number of the software metrics
validation approaches advocate the use of measurement
theory [24][25][26] in the validation (see e.g., [9][27][28]).
Measurement theory is a branch of applied mathematics that
is useful in measurement and data analysis. The fundamental
idea of this theory is that there is a difference between
measurements and the attribute being measured. Thus, in
order to draw conclusions about the attribute, there is a
need to understand the nature of the correspondence between
the attribute and the measurements. [29] is an example
of an approach that relies on measurement theory for the
validation of indicators. In [29], measurement theory is used
to validate the meaningfulness of IT security risk indicators.
Measurement theory has been criticized of being too rigid
and restrictive in a practical measurement setting. Briand
et al. [27] advocate a pragmatic approach to measurement
theory in software engineering. The authors show that
even if their approach may lead to violations of the strict
prescriptions and proscriptions of measurement theory, the
consequences are small compared to the beneﬁts. Another
approach that takes a pragmatic approach to measurement
theory is [28]. Here, the authors propose a framework
for evaluating software metrics. The applicability of the
framework is demonstrated by applying it on a bug count
metric.
There exist also approaches that assess the validity of
speciﬁc sets of key indicators. For instance, in [30] the
validity of indicators of ﬁrm technological capability is
assessed, while the validity of indicators of patent value is
assessed in [31].
There are several approaches that focus on measuring the
achievement of goals. One example is COBIT [32], which
is a framework for IT management and IT governance. The
framework provides an IT governance model that helps in
delivering value from IT and understanding and managing
the risks associated with IT. In the governance model,
business goals are aligned with IT goals, while metrics, in
the form of leading and lagging indicators [33], and maturity
models are used to measure the achievement of the IT goals.
In our approach we do not focus on the value that the use
of IT has with respect to the business objectives. On the
other hand, the risk that the use of IT has with respect to
the business objectives is important. In our context, IT is
relevant in the sense of providing the infrastructure necessary
for monitoring the part of business that needs to fulﬁll the
business objectives. In Step 6 of our method we identify risks
that may result from the use of the monitoring infrastructure
with respect to the business objectives.
Another way to measure the achievement of goals is
by the use of the Goal-Question-Metric [34][35] (GQM)
approach. Even though GQM originated as an approach for
measuring achievement in software development, it can also
be used in other contexts where the purpose is to measure
achievement of goals. In GQM, business goals are used to
drive the identiﬁcation of measurement goals. These goals
do not necessarily measure the fulﬁllment of the business
goals, but they should always measure something that is of
interest to the business. Each measurement goal is reﬁned
into questions, while metrics are deﬁned for answering each
question. No speciﬁc method, beyond reviews, is speciﬁed
for validating whether the correct questions and metrics
have been identiﬁed. The data provided by the metrics are
interpreted and analyzed with respect to the measurement
goal in order to conclude whether it is achieved or not. One
of the main differences between our method and GQM is
that we characterize precisely what it means to achieve a
goal/objective. In GQM, however, this may be a question of
interpretation.
In the literature, key indicators are mostly referred to
189
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Employee at 
X-ray
Employee at 
Blood test 
analysis
An unauthorized 
access to highly sensitive 
and private information in an 
EPR, where the owner of the 
EPR is a patient of the accessor, 
is unintentionally classified as 
approved when it should be 
classified as not approved
[Unlikely]
Unlikely
Unlikely
Rare
R8: The key indicator 
KNOT-APP-UNAUTH-ACC
is lower than it should be
[Unlikely]
An unauthorized 
access to highly sensitive 
and private information in an 
EPR, where the owner of the 
EPR is a patient of the accessor, 
is unintentionally classified as not 
approved when it should be 
classified as approved
[Unlikely]
An unauthorized 
access to highly sensitive 
and private information in an 
EPR, where the owner of the 
EPR is a patient of the accessor, 
is deliberately classified as 
approved when it should be 
classified as not approved
[Rare]
R7: The key indicator 
KNOT-APP-UNAUTH-ACC
is higher than it should be
[Unlikely]
0.5
0.5
0.3
Correctness of 
PBO-A8'
Minor
Moderate
Unstable sensor 
SCH-ACC-INFO-EPR
The sensor 
SCH-ACC-INFO-EPR fails to log 
a not approved unauthorized 
access to highly sensitive and 
private information in an EPR, 
where the owner of the EPR is a 
patient of the accessor
[Rare]
Rare
1.0
Insufficient competence 
in classifying unauthorized 
accesses as approved or 
not approved
Insufficient 
competence in 
classifying unauthorized 
accesses as approved or 
not approved
Lack of 
quality control
Lack of 
quality control
Lack of mechanisms 
for detecting fraud
Lack of 
maintenance
Figure 9.
CORAS threat diagram documenting risks resulting from the proposed implementation of the monitoring infrastructure for the composite key
indicator KNOT-APP-UNAUTH-ACC
Table IX
THE RISK EVALUATION MATRIX FROM TABLE VIII WITH THE RISKS R7 AND R8 INSERTED
Likelihood
Consequence
Insigniﬁcant
Minor
Moderate
Major
Catastrophic
Rare
R4′, R5
R6
Unlikely
R7
R8
R4′′
Possible
R2, R3
Likely
R1
Certain
190
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

in the context of measuring business performance. There
exist numerous approaches to performance measurement.
Some of these are presented in [36]. Regardless of the
approach being used, the organization must translate their
business objectives/goals into a set of key performance
indicators in order to measure performance. An approach
that is widely used [37] is balanced scorecard [5]. This
approach translates the company’s vision into four ﬁnancial
and non-ﬁnancial perspectives. For each perspective a set of
business objectives (strategic goals) and their corresponding
key performance indicators are identiﬁed. However, the
implementation of a balanced scorecard is not necessarily
straight forward. In [38], Neely and Bourne identify several
reasons for the failure of measurement initiatives such as
balanced scorecards. One problem is that the identiﬁed mea-
sures do not measure fulﬁllment of the business objectives,
while another problem is that measures are identiﬁed without
putting much thought into how the data must be extracted
in order to compute the measures. The ﬁrst problem can be
addressed in Step 4 of our method, while the second problem
can be addressed in Step 3 and Step 5 of our method. In Step
3 we identify the sensors to be deployed in the relevant part
of business, while in Step 5 we present the kinds of data that
needs to be extracted from these sensors in order to compute
the measures.
Much research has been done in the ﬁeld of data quality.
The problem of data quality is also recognized within the
ﬁeld of key indicators [39][40]. In [41] a survey on how data
quality initiatives are linked with organizational key perfor-
mance indicators in Australian organizations is presented.
This survey shows that a number of organizations do not
have data quality initiatives linked to their key indicators.
Data quality should be taken into account when designing
key indicators, since the use of key indicators based on poor
quality data may lead to bad business decisions, which again
may greatly harm the organization.
In [42][43] the problem of key indicators computed from
uncertain events is investigated. The motivation for this work
is to understand the uncertainty of individual key indicators
used in business intelligence. The authors use key indicators
based on data from multiple domains as examples. In these
papers a model for expressing uncertainty is proposed, and a
tool for visualizing the uncertain key indicators is presented.
XI. CONCLUSION
In [1] we presented the method ValidKI (Valid Key
Indicators) for designing key indicators to monitor the
fulﬁllment of business objectives with particular focus on
quality and ICT-supported monitoring of key indicators.
ValidKI facilitates the design of a set of key indicators that
is valid with respect to a business objective. In this paper
we have presented the improved and consolidated version of
the method.
To the best of our knowledge, there exists no other
method for the design of valid key indicators to monitor
the fulﬁllment of business objectives with particular focus
on quality and ICT-supported monitoring of key indicators.
The applicability of our method has been demonstrated on an
example case addressing the use of electronic patient records
in a hospital environment.
Even though ValidKI has been demonstrated on a realistic
example case there is still a need to apply ValidKI in a real-
world industrial setting in order to evaluate properly to what
extent it has the characteristics speciﬁed in the introduction
and to what extent it can be used to design key indicators for
systems shared between many companies or organizations.
By applying ValidKI in such a setting we will also gain
more knowledge regarding whether it is time and resource
efﬁcient.
ACKNOWLEDGMENTS
The research on which this paper reports has been car-
ried out within the DIGIT project (180052/S10), funded
by the Research Council of Norway, and the MASTER
and NESSoS projects, both funded from the European
Community’s Seventh Framework Programme (FP7/2007-
2013) under grant agreements FP7-216917 and FP7-256980,
respectively.
REFERENCES
[1] O. S. Ligaarden, A. Refsdal, and K. Stølen, “ValidKI: A
Method for Designing Key Indicators to Monitor the Fulﬁll-
ment of Business Objectives,” in Proceedings of First Inter-
national Conference on Business Intelligence and Technology
(BUSTECH’11).
Wilmington, DE: IARIA, 2011, pp. 57–65.
[2] A. Hammond, A. Adriaanse, E. Rodenburg, D. Bryant, and
R. Woodward, Environmental Indicators: A Systematic Ap-
proach to Measuring and Reporting on Environmental Policy
Performance in the Context of Sustainable Development.
Washington, DC: World Resources Institute, 1995.
[3] International Organization for Standardization, International
Electrotechnical Commission, and Institute of Electrical and
Electronics Engineers, “ISO/IEC/IEEE 24765 Systems and
Software Engineering – Vocabulary,” 2010.
[4] B. Ragland, “Measure, Metrics or Indicator: What’s the
Difference?” Crosstalk: The Journal of Defense Software
Engineering, vol. 8, no. 3, 1995.
[5] R. S. Kaplan and D. P. Norton, “The Balanced Scorecard
– Measures That Drive Performance,” Harvard Business
Review, vol. 70, no. 1, pp. 71–79, 1992.
[6] Object Management Group, “Uniﬁed Modeling Language
Speciﬁcation, Version 2.0,” 2004.
[7] International Organization for Standardization and Interna-
tional Electrotechnical Commission, “ISO/IEC 9126 Infor-
mation Technology – Software Product Evaluation – Quality
Characteristics and Guidelines for their Use,” 1991.
191
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[8] A. Meneely, B. Smith, and L. Williams, “Software Metrics
Validation Criteria: A Systematic Literature Review,” Depart-
ment of Computer Science, North Carolina State University,
Raleigh, NC, Tech. Rep. TR-2010-2, 2010.
[9] A. L. Baker, J. M. Bieman, N. E. Fenton, D. A. Gustafson,
A. Melton, and R. W. Whitty, “A Philosophy for Software
Measurement,” Journal of Systems and Software, vol. 12,
no. 3, pp. 277–281, 1990.
[10] B. Kitchenham, S. L. Pﬂeeger, and N. Fenton, “Towards
a Framework for Software Measurement Validation,” IEEE
Transactions on Software Engineering, vol. 21, no. 12, pp.
929–944, 1995.
[11] J. M. Roche, “Software Metrics and Measurement Principles,”
ACM SIGSOFT Software Engineering Notes, vol. 19, no. 1,
pp. 77–85, 1994.
[12] B. Curtis, “Measurement and Experimentation in Software
Engineering,” Proceedings of the IEEE, vol. 68, no. 9, pp.
1144–1157, 1980.
[13] B. Henderson-Sellers, “The Mathematical Validity of Soft-
ware Metrics,” ACM SIGSOFT Software Engineering Notes,
vol. 21, no. 5, pp. 89–94, 1996.
[14] N. E. Fenton, “Software Measurement: A Necessary Scientiﬁc
Basis,” IEEE Transactions on Software Engineering, vol. 20,
no. 3, pp. 199–206, 1994.
[15] K. El-Emam, “A Methodology for Validating Software Prod-
uct Metrics,” National Research Council of Canada, Ottawa,
ON, Tech. Rep. NCR/ERC-1076, 2000.
[16] J. P. Cavano and J. A. McCall, “A Framework for the
Measurement of Software Quality,” in Proceedings of the
Software Quality Assurance Workshop on Functional and
Performance Issues.
New York, NY: ACM Press, 1978, pp.
133–139.
[17] R. Lincke and W. Lowe, “Foundations for Deﬁning Software
Metrics,” in Proceedings of 3rd International Workshop on
Metamodels, Schemas, Grammars, and Ontologies (ateM’06)
for Reverse Engineering.
Mainz: Johannes Gutenberg-
Universit¨at Mainz, 2006.
[18] M. E. Bush and N. E. Fenton, “Software Measurement: A
Conceptual Framework,” Journal of Systems and Software,
vol. 12, no. 3, pp. 223–231, 1990.
[19] Council of Europe, “Convention for the Protection of Human
Rights and Fundamental Freedoms,” 1954.
[20] European Court of Human Rights, “Press Release – Chamber
Judgments 17.07.08,” 17. July 2008.
[21] Helsedirektoratet,
“Code
of
Conduct
for
Information
Security
–
The
Healthcare,
Care,
and
Social
Services
Sector,”
http://www.helsedirektoratet.no/
publikasjoner/norm-for-informasjonssikkerhet/Publikasjoner/
code-of-conduct-for-information-security.pdf,
Accessed:
2012-06-21, 2. June 2010.
[22] M. S. Lund, B. Solhaug, and K. Stølen, Model-Driven Risk
Analysis: The CORAS Approach, 1st ed.
Berlin/Heidelberg:
Springer-Verlag, 2010.
[23] M. Abe, J. Jeng, and Y. Li, “A Tool Framework for KPI
Application Development,” in Proceedings of the IEEE Inter-
national Conference on e-Business Engineering (ICEBE’07).
Los Alamitos, CA: IEEE Computer Society, 2007, pp. 22–29.
[24] D. H. Krantz, R. D. Luce, P. Suppes, and A. Tversky,
Foundations of Measurement, Vol. I: Additive and Polynomial
Representations.
New York, NY: Academic Press, 1971.
[25] P. Suppes, D. H. Krantz, R. D. Luce, and A. Tversky,
Foundations of Measurement, Vol. II: Geometrical, Threshold,
and Probabilistic Representations. New York, NY: Academic
Press, 1989.
[26] R. D. Luce, D. H. Krantz, P. Suppes, and A. Tversky,
Foundations of Measurement, Vol. III: Representation, Axiom-
atization, and Invariance.
New York, NY: Academic Press,
1990.
[27] L. Briand, K. El-Emam, and S. Morasca, “On the Application
of Measurement Theory in Software Engineering,” Empirical
Software Engineering, vol. 1, no. 1, pp. 61–88, 1996.
[28] C. Kaner and W. P. Bond, “Software Engineering Metrics:
What Do They Measure and How Do We Know?” in Pro-
ceedings of 10th International Software Metrics Symposium
(METRICS’04). Los Alamitos, CA: IEEE Computer Society,
2004.
[29] A. Morali and R. Wieringa, “Towards Validating Risk In-
dicators Based on Measurement Theory,” in Proceedings of
First International Workshop on Risk and Trust in Extended
Enterprises.
Los Alamitos, CA: IEEE Computer Society,
2010, pp. 443–447.
[30] T. Schoenecker and L. Swanson, “Indicators of Firm Techno-
logical Capability: Validity and Performance Implications,”
IEEE Transactions on Engineering Management, vol. 49,
no. 1, pp. 36–44, 2002.
[31] M. Reitzig, “Improving Patent Valuations for Management
Purposes – Validating New Indicators by Analyzing Applica-
tion Rationales,” Research Policy, vol. 33, no. 6-7, pp. 939–
957, 2004.
[32] IT Governance Institute, “COBIT 4.1,” 2007.
[33] W. Jansen, Directions in Security Metrics Research.
Darby,
PA: DIANE Publishing, 2010.
[34] V. R. Basili and D. M. Weiss, “A Methodology for Collecting
Valid Software Engineering Data,” IEEE Transactions on
Software Engineering, vol. SE-10, no. 6, pp. 728–738, 1984.
[35] R. V. Solingen and E. Berghout, The Goal/Question/Metric
method: A Practical Guide for Quality Improvement of Soft-
ware Development.
New York, NY: McGraw-Hill Interna-
tional, 1999.
192
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[36] A. Neely, J. Mills, K. Platts, H. Richards, M. Gregory,
M. Bourne, and M. Kennerley, “Performance Measurement
System Design: Developing and Testing a Process-based
Approach,” International Journal of Operation & Production
Management, vol. 20, no. 10, pp. 1119–1145, 2000.
[37] T.
Lester,
“Measure
for
Measure,”
http://www.ft.com/
cms/s/2/31e6b750-16e9-11d9-a89a-00000e2511c8.html#
axzz1ImHJOLmg, Accessed: 2012-06-21, 5. October 2004.
[38] A. Neely and M. Bourne, “Why Measurement Initiatives
Fail,” Measuring Business Excellence, vol. 4, no. 4, pp. 3–6,
2000.
[39] S. M. Bird, D. Cox, V. T. Farewell, H. Goldstein, T. Holt, and
P. C. Smith, “Performance Indicators: Good, Bad, and Ugly,”
Journal Of The Royal Statistical Society. Series A (Statistics
in Society), vol. 168, no. 1, pp. 1–27, 2005.
[40] D. M. Eddy, “Performance Measurement: Problems and So-
lutions,” Health Affairs, vol. 17, no. 4, pp. 7–25, 1998.
[41] V. Masayna, A. Koronios, and J. Gao, “A Framework for
the Development of the Business Case for the Introduction
of Data Quality Program Linked to Corporate KPIs & Gov-
ernance,” in Proceedings of the 2009 Fourth International
Conference on Cooperation and Promotion of Information
Resources in Science and Technology (COINFO’09).
Los
Alamitos, CA: IEEE Computer Society, 2009, pp. 230–235.
[42] C. Rodr´ıguez, F. Daniel, F. Casati, and C. Cappiello, “Com-
puting Uncertain Key Indicators from Uncertain Data,” in
Proceedings of 14th International Conference on Information
Quality (ICIQ’09).
Potsdam/Cambridge, MA: HPI/MIT,
2009, pp. 106–120.
[43] C. Rodr´ıguez, F. Daniel, F. Casati, and C. Cappiello, “Toward
Uncertain Business Intelligence: The Case of Key Indicators,”
Internet Computing, vol. 14, no. 4, pp. 32–40, 2010.
193
International Journal on Advances in Intelligent Systems, vol 5 no 1 & 2, year 2012, http://www.iariajournals.org/intelligent_systems/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

