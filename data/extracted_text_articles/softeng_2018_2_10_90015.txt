The Antecedents and Feedback Loops Contributing to Trust in Agile Scrum Teams 
 
Trish O’Connell  
School of Science & Computing 
Galway-Mayo Institute of Technology  
Galway, Ireland 
trish.oconnell@gmit.ie 
Owen Molloy 
Dept. of Information Technology 
National University of Ireland 
Galway, Ireland 
owen.molloy@nuigalway.ie
 
 
 
Abstract— Scrum has become the dominant Agile way of 
developing software products and systems. To ensure the team 
achieves the goals of the Sprint, the team needs to collaborate 
effectively and share knowledge optimally. To do this, 
McHugh, Conboy and Lang, amongst others, have claimed 
that trust is “of increased importance” to the Agile Scrum 
team. This paper describes the contributions to the academic 
discourse on trust and subsequently hypothesizes how these 
may apply to the Scrum team. Whilst some of the antecedents 
are straightforward contributors to building trust, others may 
function as reinforcing feedback loops. A preliminary 
conceptual model is presented, and further research is 
underway to refine and validate the model. 
 
Keywords-Agile; 
Scrum; 
Team; 
Trust; 
Collaboration; 
Knowledge-sharing. 
I. 
 INTRODUCTION  
Software development has always been a task-oriented 
activity. With the advent of Agile, it has become a task-
oriented, social activity. Moe, Dingsøyr and Dybå state, “the 
basic work unit in innovative software organizations is the 
team rather than the individual [1].” In Scrum (an Agile 
framework for managing the development process often 
referred to as a methodology), software development can be 
considered as a collective team effort, where teamwork 
requires cooperation and therefore, social interaction.  A 
fundamental characteristic of a good team is that the team 
members collaborate well. The co-creators of the Agile 
Manifesto [2] referred to the fact that Agile teams are 
characterized by “intense collaboration” where collaboration 
refers to “actively working together to deliver a work 
product or make a decision.”  It is through collaboration and 
knowledge-sharing that software development tasks may be 
accomplished successfully. Nerur concurs, “A cooperative 
social process characterized by communication and 
collaboration between a community of members who value 
and trust each other is critical for the success of agile 
methodologies [3].”   
Whereas cooperation between team members involves 
the “smooth transfer of work in progress, work products, 
and information from one member to another [4],” 
collaboration, by contrast, “elevates groups beyond 
cooperation, adding an essential ingredient for emergent, 
innovative, and creative thinking [4].” 
A. Collaboration 
To increase collaboration and facilitate knowledge 
sharing, Agile methods such as Scrum rely heavily on face-
to-face communication and a high degree of interaction 
between the team. The Agile Manifesto advocates 
“Individuals and interactions over processes and tools [2].” 
Highsmith states “Most traditional ‘methodologies’ place 80 
percent of their emphasis on processes, activities, tools, 
roles, and documents. Agile approaches place 80 percent of 
their emphasis on ecosystems—people, personalities, 
collaboration, conversations, and relationships [5].”  
Whilst the Agile software development framework 
referred to as XP promotes developers working together in a 
technique known as ‘pair programming’ to achieve this face-
to-face communication, the Scrum approach relies on the 
three key practices which McHugh, Conboy and Lang 
describe as “sprint/ iteration planning, daily stand-up, and 
sprint/iteration retrospective [6].” 
The iteration planning session is where the team 
collectively plans and agrees on what will be delivered at the 
end of the Sprint. 
The daily stand-up is a team status meeting where team 
members describe progress and obstacles (if any) to meeting 
commitments. 
The sprint retrospective is effectively a post-partum 
review of the sprint that has been completed. It is supposed 
to allow the team to collectively review what went well and 
what did not, during the sprint. It should serve as the 
baseline for improvement. [7] 
Ghobadi and Mathiassen posit, “Software development 
is a collaborative process where success depends on 
effective knowledge sharing [8].”     
B. Knowledge sharing  
  Liu and Phillips expound that trust and collaboration 
are “essential for effective knowledge sharing to occur [9].” 
It is essential that the Scrum team shares knowledge during 
all phases of the Sprint.  Park and Lee postulate, “The time 
spent on problem solving can be reduced significantly 
because the project participants' benefit from the shared and 
accumulated knowledge [10].” The three Agile practices 
which are used in Scrum all involve communication and 
sharing information, to varying degrees. Following their 
research study McHugh, Conboy and Lang conclude “All 
16
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

three practices provide an open forum for sharing 
knowledge and obtaining feedback [7].” The purpose of 
knowledge sharing in Scrum is that it moves the 
development process along. The team members do not need 
to pause in their development efforts due to obstacles. As 
Park and Lee explain, “more frequent communication 
creates opportunities to develop and enhance knowledge 
sharing. 10]” This “frequent communication” is the 
hallmark of Agile with the Agile Manifesto recommending. 
“Individuals and interactions over processes and tools [2].” 
For collaboration to be successful a climate of trust 
needs to exist in the team Ceschi, Sillitti, Succi, and De 
Panfilis, highlight the fact that “Knowledge sharing through 
communication requires a high level of mutual trust among 
team members and frequent interactions [11].” Indeed, it 
may be argued that trust is a vital component, and 
“important supporting mechanism of teamwork [12],” 
according to Weimar, Nugroho, Visser, Plaat and 
Goudbeek. 
Many authors have cited trust as being important to 
collaboration, with Mishra claiming, “trust has been found 
to be a critical factor facilitating collaboration [13].”  
 Park and Lee also see trust as imperative for knowledge 
transfer and successful team performance asserting, “the 
sharing of knowledge in an IS project has become a 
requirement for the completion of a successful IS project 
[10].” 
Whilst much has been written about the importance and 
need for trust in Agile teams, e.g. Mayer, Davis and 
Schoorman posit, “The emergence of self-directed teams 
and a reliance on empowered workers greatly increase the 
importance of the concept of trust, as control mechanisms 
are reduced or removed, and interaction increases [14],” 
there has been little to no direct research into trust in Agile 
teams.   As, McHugh, Conboy and Lang state, “Agile 
methods have been the subject of much research, as has 
trust, but the impact of trust on agile teams has not [6].” 
This paper attempts to fill this void in the trust construct 
as applied to Agile Scrum teams. 
The remainder of this paper is organized as follows: 
Section II of this paper briefly considers team formation and 
the development of interpersonal trust. Section III examines 
the notion of trust as presented in the academic discourse. 
Section IV addresses the application to the Scrum team and 
presents a conceptual model of how trust can be depicted in 
a Scrum team setting. Finally, the paper concludes with a 
brief discussion and plans for future work. 
II. 
TEAM FORMATION  
Depending 
on 
the 
context, 
there 
are 
many 
characterizations of trust. In terms of a team, the most crucial 
type of trust is likely to be interpersonal which facilitates and 
fosters collaboration and knowledge sharing between team 
members. Rotter defines interpersonal trust as, “an 
expectancy held by an individual or a group that the word, 
promise, verbal or written statement of another individual or 
group can be relied upon [15].” From a Scrum team 
perspective, it is imperative that a team member fulfils his 
commitment which is made at the Scrum Daily standup 
meeting. Another oft-quoted definition of trust is attributed 
to Mishra, “Trust is one party's willingness to be vulnerable 
to another party based on the belief that the latter party is 1) 
competent, 2) open, 3) concerned, and 4) reliable [13].” 
Interpersonal trust does not tend to just ‘happen’ in a 
team. The preeminent treatise on team formation was 
proposed by Tuckman in 1965. He proposed that teams 
progress through four distinct phases: “Forming, Storming, 
Norming and Performing [16].” 
“Forming” is the phase where team members are first 
brought together and whilst they may agree on goals they are 
predominantly working as individuals with no sense of the 
common purpose. Individuals assess each other’s boundaries 
in what Tuckman refers to as “testing”.  In addition, 
Tuckman expounds, “Coincident with testing in the 
interpersonal realm is the establishment of dependency 
relationships with leaders, other group members, or 
preexisting standards [16].” 
The second developmental phase in team development is 
termed “Storming” and it is often characterized by “conflict 
and 
polarization 
around 
interpersonal 
issues, 
with 
concomitant emotional responding in the task sphere. These 
behaviors serve as resistance to group influence and task 
requirements [16].” At this stage, trust is predominantly 
invested in the team leader. 
On exiting the preceding phase, the team comes to the 
realization that they have a common goal. Tuckman 
describes how “in-group feeling, and cohesiveness develop, 
new standards evolve, and new roles are adopted. In the task 
realm, intimate, personal opinions are expressed [16].” At 
this stage, referred to as “Norming,” interpersonal trust is 
beginning to develop.  Once the team norms are understood 
the team begins to develop trust in the process. 
“Performing” is the final and most crucial stage for the 
team. As Tuckman explains, “group energy is channeled into 
the task. Structural issues have been resolved, and structure 
can now become supportive of task performance [16].” At 
this stage, the team members should be sufficiently 
comfortable with each other that a degree of interpersonal 
trust is established. 
In Scrum, teams are often pulled together based on the 
projects requirements, the domain expertise needed, the 
availability and experience of personnel. Scrum teams will 
inevitably progress through the four phases as described 
above. 
Scrum teams are self-managing. Moe, Dingsøyr and Dybå 
describe how “a Scrum team is given significant authority 
and responsibility for many aspects of their work, such as 
17
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

planning, scheduling, assigning tasks to members, and 
making decisions [1].” 
It would not be possible for the team to function 
effectively, in pursuance of the above, without trust. 
III. 
TRUST IN THE ACADEMIC DISCOURSE 
Whilst many have written about trust it would still 
appear to be confusing, predominantly because much of the 
research 
has 
been 
context 
specific, 
ranging 
from 
sociological (Simmel [17], Luhmann [18], Barber [19], 
Lewis and Weigert [20], Mayer et al. [14], Dirks and Ferrin 
[21]) to psychological (Rotter [15], Rempel, Holmes and 
Zanna [22], McKnight and Chervany [23]).  Confusing, also, 
because for there to be trust between team members there 
must be conditions, which facilitate this trust to grow.   
Some authors refer to these as the antecedents of trust 
(Costa, [24]), but trust also gives rise to consequences. In 
this authors opinion, some of the consequences also function 
as reinforcing feedback mechanisms for enhancing trust in a 
team.  
Whilst Simmel [17] referred to trust as a mysterious 
“faith” of man in man. Deutsch [25] equated trust to a 
reciprocal, cooperative, relationship between people who 
make the decision to trust. By this he means that a person 
will meet the expectations of another, and in return, expect 
his/her expectations to also be fulfilled. Furthermore, 
Deutsch expounds that fulfilling another’s expectations also 
involves the notion of competence. There is nothing to be 
gained from trusting someone to do something in which 
they have no competence to succeed.   
Once a degree of mutual trust has been established, 
knowledge sharing and collaboration should follow. Zand 
concurs that persons who trust one another “will provide 
relevant, comprehensive, accurate, and timely information, 
and thereby contribute realistic data for problem-solving 
efforts [26].”  
Granovetter [27] refers to relationships between two 
individuals as “dyadic ties” and defines the strength of a tie 
as “a (probably linear) combination of the amount of time, 
the emotional intensity, the intimacy (mutual confiding), 
and the reciprocal services which characterize the tie. Each 
of these is somewhat independent of the other, though the 
set is obviously highly intracorrelated [27].” Gabarro 
highlighted the importance of “openness about task 
problems or task related issues [28]” as being highly 
influential in the development of trust. Moreover, Gabarro 
echoes Deutsch [25] in that he posits “competence, 
reliability and openness more than compensated for a lack 
of initial liking [28].”  
Furthermore, Gabarro listed integrity and judgement as 
being equally as important as competence in the perception 
one forms of another when considering whether to trust 
them [28]. 
Working from the premise that one trusts people with 
whom one is familiar, Luhmann [18] argued that familiarity 
serves as the “prerequisite for trust.” Another train of 
thought expounded by Luhmann concerns the motivations 
of the trustee in the trust situation. It seems to be the first 
mention of a rational calculation on which to base trust 
since Luhmann refers to “motivational structures” which 
can be focused on when we do not “know the future actions 
of the other party[18].” He postulates that “on the one hand 
he (the trustor) will find it worthwhile to ask himself with 
what prospects for gain and loss his partner (the trustee) can 
reckon, if he is trusted[18].” This harks back to Deutsch 
who referred to “behavior which the individual perceives to 
have greater negative motivational consequences if the 
expectation is not confirmed than positive motivational 
consequences if it is confirmed [25].” 
Ultimately, Luhmann acknowledges the situation in 
which trust is required and he further expounds on the role 
of 
uncertainty 
and 
ambiguity 
in 
building 
trust.  
Undoubtedly, this encompasses the realm of software 
development.   
 “There has to be defined some 
situation 
in 
which 
the 
person 
trusting 
is 
dependent 
on 
his 
partner; 
otherwise 
the 
problem 
doesn’t arise. His behaviour must 
then commit him to the situation and 
make him run the risk of his trust 
being betrayed. In other words, he 
must 
invest 
in... 
a 
‘risky 
investment’. 
One 
fundamental 
condition 
is 
that 
it 
must 
be 
possible for the partner to abuse 
the trust; indeed, it must not 
merely be possible for him to do so 
but he must also have a considerable 
interest in doing so. It must not be 
that he will toe the line on his own 
account – in the light of his 
interests. 
In 
his 
subsequent 
behaviour the trust put in him must 
be honoured and his own interests 
put to one side [18].” 
From this description, it is evident that trust occurs when 
there is an element of uncertainty in the relationship or task. 
The trust process as described by Luhmann evidences a two-
way street in terms of firstly the trustor must confer trust 
and then the trustee accepts and fulfils the trust proposition.  
Luhmann concludes that the process “demands mutual 
commitment and can only be put to the test by both sides 
becoming involved in it, in a fixed order, first the truster and 
then the trustee [18].” 
Barber reiterates Deutsch’s [25] position on the need for 
competence but goes further by including an expectation 
that “partners in interaction will carry out their fiduciary 
obligations and responsibilities [19].” 
18
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

In 1991, Butler postulated that trust is “multidimensional 
as a construct as well as being activated by a 
multidimensional set of conditions [29].” By reviewing the 
work of those that had contributed to the academic discourse 
on trust, Butler was able to develop and publish his content 
theory “consisting of a multidimensional set of conditions 
that activate and sustain trust in a specific person [29].” In 
1994, Butler and Cantrell ranked the conditions of trust in 
the following order of importance: “competence (technical 
and interpersonal skills required for one’s job), integrity 
(honesty 
and 
truthfulness), 
consistency 
(reliability, 
predictability, and good judgement), loyalty (having motives 
for protecting and making the target person look good, and 
openness (freely sharing ideas and information) [30].” 
Further research led to the identification of ten categories 
and from these ten conditions of trust were inferred: 
“availability, 
competence, 
consistency, 
discreetness, 
fairness, integrity, loyalty, openness, promise fulfilment, and 
receptivity.[30]” As Butler commented, “the inferred 
conditions were conceptually similar to most of the trust 
conditions identified by Jennings (1971) and Gabarro 
(1978) [29].” However, it should be noted that whilst 
promise fulfilment, fairness and receptivity were not 
specifically listed by the authors above they arose from 
either inferred/implied comments from respondents or from 
direct mention. 
Building on the work of Simmel [17], Luhmann [18], 
and Barber [19], Lewis and Weigert present trust as “a 
property of collective unit, not of isolated individuals [20].”  
These authors perceive trust as an attribute which is 
“applicable to the relations among people.” In this sense the 
academic discourse is moving closer to the social 
relationships present in teams.  
Similar to Butler [29], Lewis and Weigert acknowledge 
the “multifaceted character” of trust.  However, they differ 
insofar as they describe the facets as “distinct cognitive, 
emotional, and behavioural dimensions that are merged into 
a unitary social experience [20].” They explain the cognitive 
aspect of trust as discriminating “among persons and 
institutions that are trustworthy, distrusted, and unknown. In 
this sense, we cognitively choose whom we will trust in 
which respects and under which circumstances and we base 
the choice on what we take to be ‘good reasons’, 
constituting evidence of trustworthiness [20].” 
Deutsch hypothesizes that an increase in communication 
will increase ‘trust’ and also that “we can expect that there 
will be some tendency for trustworthiness to increase with 
trust [25].” 
Gabarro deviates from the academic discourse by 
theorizing that trust may be “better understood as a result 
rather than a precondition of cooperation [28].” Trust, 
according to Gabarro [28] would thus exist in groups simply 
because the group is successful and able to cooperate. It 
should be noted that Gabarro lays the foundation for much 
of the theory of trust that comes next when he states, “There 
is a sense in which trust may be a by-product, typically of 
familiarity and friendship, both of which imply that those 
involved have some knowledge of each other and some 
respect for each other’s welfare [28].” 
Shapiro, Sheppard and Cheraskin argue that “the 
benefits associated with establishing trust in the right 
conditions should result in increased quality of output, 
greater efficiency of process, more flexibility, and an 
enhanced strategic focus [31].” The authors promulgate 
three bases of trust as follows: deterrence based trust, 
knowledge based trust and identification-based trust. In 
situations where monitoring and control are used to ensure 
compliance, these form the basis of deterrence based trust. 
Knowledge based trust is also based on Deutsch’s [25] 
belief that trust is the underpinning or foundation of 
cooperative behaviour. Shapiro, Sheppard and Cheraskin 
postulate that if we know a person and how they will act or 
respond we have an element of predictability upon which 
we have a “basis of trust” since as the authors state “At its 
core, trust is simply dependability. The benefits of 
dependability are reduced uncertainty and less need for 
contingent planning [31].” Unsurprisingly, Shapiro et al. 
advocate regular communication as a method of achieving 
knowledge-based trust.  
The third base of trust according to the authors is 
identification based trust. This is explained as “the highest 
order of trust assumes that one party has fully internalized 
the other's preferences [31].” It is often mentioned in the 
literature on successful teams that having a shared goal or 
vision is crucial to success. 
Lewicki and Bunker expand on the theories of Shapiro et 
al. [26] by positing that “the three types of trust are probably 
linked and sequential [32].” Whereas Shapiro et al. identify 
the three types of trust as separate and independent. Lewicki 
and Bunker propose that this linkage is sequential and 
iterative, “achievement of trust at one level enables the 
development of trust at the next level [32].” 
Additionally, Lewicki and Bunker describe the process 
of trust beginning with calculus based trust. The authors 
describe how calculus based trust is arrived at in a stepwise 
process with each trusting endeavour being used as the basis 
for the next level. In this sense it is described as “tactical 
climbing [32].” Once a certain level of understanding has 
been achieved, it is possibly for knowledge based trust to 
evolve in that, having ‘tested the waters’ so to speak, the 
trustor has knowledge of the trustee and can reasonably 
predict their behaviour vis à vis a given expectation. Once 
this level of trust has been attained, slight breaches of trust 
may even be tolerated. Finally, the highest level of trust, 
identification based trust, occurs when the parties involved 
share the same wants and needs, what Lewicki and Bunker 
refer to as a “collective identity develops [32].” At this point 
a healthy degree of synergy has developed which facilitates 
cooperative and productive teamwork. 
The model of organizational trust proposed by Mayer, 
Davis and Schoorman in 1995 is one of the most cited 
models of trust in the literature. In their research, the authors 
19
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

examined “why a trustor would trust a trustee.” The authors 
view trust as “a trait that leads to a generalized expectation 
about the trustworthiness of others [14].” Mayer et al.  refer 
to this trait as “propensity to trust [14].” Continuing in this 
vein the authors’ state “People differ in their inherent 
propensity to trust.  Propensity might be thought of as the 
general willingness to trust others. Propensity will influence 
how much trust one has for a trustee prior to data on that 
particular party being available [14].” Thus, whilst Deutsch 
[25], Lewicki and Bunker [32] and Shapiro et al. [31] argue 
for the existence of a calculated decision to trust Mayer et 
al. [14] introduce the concept of a propensity to trust which 
the trustor may or may not have. According to Mayer et al. 
[14] the propensity to trust cannot be taken in isolation.  As 
if describing two sides of the same coin, the authors also 
argue for the trustee to possess the characteristic of 
trustworthiness. The trustee must show themselves as 
meriting or warranting trust being placed in them.  Mayer et 
al. describe three characteristics of a trustee as: “ability, 
benevolence and integrity [14].” Ability has already been 
introduced by Deutsch [25] but this time Mayer et al. argue 
that an individual may not have competence in all areas but 
often a specific area. In addition to this Mayer et al. 
introduced the ideas of a “willingness to be vulnerable to the 
actions of another [14]” and furthermore a trustee must have 
benevolence towards the individual who is trusting. The 
Mayer et al. model of trust is one of the first that clearly 
discriminates between trust and its antecedents.  
However, the authors themselves note that this particular 
model is limited to a unidirectional treatment of trust 
between a trustor and a trustee. Consequently, there is no 
mention of reciprocity in this model as it was not explicitly 
designed to examine trust relationships in a team context.  
Watson 
[33] 
describes 
McAllister’s 
work 
as 
“influential.” His work on trust recognises the importance of 
“developing and maintaining trust relationships [34].” 
Basing his theories on the work of the sociological 
researchers on trust (Barber, [19]; Lewis and Weigert, [20]; 
Luhmann, [18]; Shapiro et al. [31]; Mayer et al. [14];)  
McAllister 
distinguishes 
two 
principal 
forms 
of 
interpersonal trust  “cognition-based  trust,  grounded in 
individual  beliefs about  peer reliability and  dependability, 
and  affect-based trust,  grounded in reciprocated  
interpersonal care  and  concern [34].” The introduction of 
an affective or emotional component to the trust model 
proposed by McAllister was ground-breaking.  
Whilst Mayer et al. see trust as unidimensional and 
largely cognitive, based in so far as they advocate that one 
would judge the ability, benevolence and integrity of the 
person upon whom they would confer trust.  McAllister, by 
contrast, whilst conceding the cognitive aspect and its 
antecedents argues also for an affective basis on which to 
confer trust stating “emotional ties linking individuals can 
provide the basis for trust[34].” This reiterates Lewis and 
Weigert in their conclusion that trust is multifaceted with 
“distinct cognitive, emotional and behavioural dimensions 
that are merged into a unitary social experience [20].” 
Similarly, Johnson-George and Swap [35] referred to two 
dimensions of trust “Reliableness” and “Emotional Trust.”  
From having worked and led teams it is the author’s 
opinion that there is merit in all of the antecedents as listed.  
The next section reviews these antecedents with specific 
focus on Agile Scrum teams. Building on the work of 
Gabarro [28] it is hypothesized that the antecedents of trust 
effectively form a reinforcing feedback loop. 
IV. 
SCRUM TEAM TRUST 
Whilst the antecedents of trust have been described in 
Section III, it is somewhat surprising that there is a dearth of 
research in the domain of Agile Scrum teams. McHugh et 
al. clarify, “While there have been many studies of trust in 
software development teams few have examined trust in an 
agile context [6].” Although many authors cite trust as 
necessary, Moe et al. explain succinctly the rationale for this 
“without sufﬁcient trust, team members will expend time 
and energy protecting, checking, and inspecting each other 
as opposed to collaborating to provide value-added ideas 
[1].” What follows attempts to explain how the antecedents 
of trust might function in a Scrum team.  This is shown in 
Figure 1. At this point in the author’s research, Figure 1 
represents a first stage conceptual model of trust in the 
Scrum team. 
 
A. 
Perception 
In a team setting trust is initially most likely to be based 
on perception. How a new team member comports himself 
on day one will lead the rest of the team to make a 
calculated judgement based largely on observation. What 
the new team member says and also how he says it is all 
used to form a perception and consequently an initial 
judgement of the individual.  This initial phase closely 
resembles Tuckman’s seminal work on stages of group 
development. Tuckman describes how in the ‘Forming’ 
phase members engage in “ritual sniffing” in order to get to 
know a new member and make a preliminary determination 
of their credibility [16]. 
 
B. 
Reputation 
The new team member’s reputation, if this is known to 
the team, will also be brought to bear in forming an opinion 
as to whether the individual can be trusted. Stemming from 
this a degree of what Lewicki and Bunker [32] refer to as 
“calculus based trust” comes into play. This type of trust is 
predominantly what Lewicki and Bunker [32] describe as 
“deterrence based trust” in which the team member is 
effectively being evaluated to ascertain if they will do what 
they say they will do.  The authors argue that an individual 
will comply not only because of the fear of “punishment for  
violating the trust” but also due to the “rewards to be 
derived from preserving it [32].” Acceptance or rejection by 
the Scrum team would be of paramount importance to a new 
team member. 
20
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. Conceptual Model of Trust 
 
C. 
Integrity 
As time passes, the team member’s credibility is tested 
and retested during Sprints. If the team member keeps his 
commitments his integrity is acknowledged by the team. He 
becomes predictable insofar as he is known to keep his word  
on what he says he can deliver [25].  
 
D. 
Competence 
It should be noted, however that a team member’s 
technical competence in their team role is crucial to the 
Scrum team’s performance and success [19]. A competent 
Scrum team will succeed in delivering the Sprint backlog. 
As time passes and the new team member is proving/has 
proved himself as being trustworthy it is envisaged that the 
first reinforcing feedback loop becomes operational.  A 
team member who has proven himself to act with 
competence and integrity will find that both his reputation 
and his team mates’ perception of him and his ability to 
deliver is enhanced and they he trusted more than he was 
initially. 
By the time the team has progressed through Tuckman’s 
stage of ‘storming, norming and performing’ the Scrum 
team has hopefully learned to work well together.  
 
E. 
Familiarity 
Once team members have developed a good rapport, the 
team can move beyond calculus based trust to where they 
have developed what might be thought of as an emotional 
bond between each other. Santos et al. explain, “Agile 
values and principles foster changes in team members’ 
attitudes and strengthen their relationships. These changes 
happen as a result of greater trust and better communication 
and transparency in the relationships among team members 
[36].” Ideas may be shared without fear of ridicule and the 
team should be set for a degree of knowledge sharing and 
collaboration.  
Moving from working cooperatively to collaboratively is 
a key milestone for a Scrum team. Scrum teams work 
closely together and are frequently co-located. Given the 
emotional intensity involved in keeping commitments, 
delivering on time and helping each other to deliver 
artefacts from the Product backlog it is unsurprising that 
strong dyadic ties begin to develop among the team [27]. 
Team members become interdependent in order to realize 
the goals of the Sprint and rely on each other to a high 
degree. The familiarity that results reinforces the trust 
within the team.   
21
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

 
F. 
Openness 
As a consequence of this familiarity, Scrum team 
members tend to be open and act with integrity in their 
dealings with each other.  This level of “trusting behaviour 
invites the attributes of trustworthiness [29]” according to 
Butler. 
Allied to this level of familiarity and openness it is 
unsurprising that an affective bond begins to develop 
between the Scrum team members. They begin to know 
each other, and a degree of predictability ensues. This 
“knowledge based trust [32]” is the core of the second 
reinforcing feedback loop. As team members come to know 
each other better, trust is enhanced. 
The benefit of moving into this phase is postulated by 
Shapiro and Sheppard as the “primary advantage of 
knowing that a partner is reliable, i.e., will keep his/her 
word, is that it shifts one’s focus from monitoring to 
problem solving [31].”   
 
G. 
Reciprocity 
DeVries, Van Den Hooff and Ridder describe “a cycle of 
reciprocity, in which team members are more likely to 
exchange (i.e., both donate and collect) knowledge with 
each other [37].” As the team bonds become deeper, it 
would be expected that a Scrum team member would not 
feel exposed in asking for assistance on an aspect of the 
development with which difficulty was being experienced.                                   
In similar vein the team member who receives help would 
most likely be happy to help the individual who had given 
help. As a highly functioning team it is the team goal that is 
of paramount importance and the degree of benevolence 
(Mayer et al. [14]) that team members feel towards each 
other would ensure that help is both given and received in 
equal measure as required. 
In this stage yet more positive reinforcing feedback 
occurs. The team members can set aside the cognitive 
approach to trust and opt rather for an emotional connection 
between each other. McAllister, [34], Martin, [38], Lewicki 
and Wiethoff [39] have referred to this as “Identification 
based trust.” 
Once the team has moved into the ‘Identification based 
trust’ realm the team members fully identify with each other 
and with the common goals of the Sprint. 
 
V. 
CONCLUSION AND FUTURE WORK 
The academic literature on trust is vast as many studies 
have examined it from a variety of contexts. This paper has 
presented the findings of the main contributors to the 
academic discourse on trust and has attempted to apply their 
contributions to the Agile Scrum team in the form of a 
preliminary conceptual model.  
The next step in the research is to ascertain using a 
constructivist 
grounded 
theory 
methodology 
if 
this 
hypothesis is, indeed, valid or whether there are other 
elements of the trust equation which lead to successful 
Sprints. 
 
 
REFERENCES 
 
[1] N. B. Moe,  T. Dingsøyr, and T. Dybå,  “Overcoming 
barriers to self-management in software teams,” IEEE 
software,  vol. 26, no.6, pp.20-26, 2009. 
[2] K. Beck, M. Beedle, A. Van Bennekum, A. Cockburn, W. 
Cunningham, M. Fowler, and J. Kern, Manifesto for agile 
software development, 2001. 
[3] S. Nerur, R. Mahapatra, and G. Mangalaraj, “Challenges 
of migrating to agile methodologies,” Communications of 
the ACM, vol. 48 no.5, pp.72-78, 2005. 
[4] K. Collier,   Agile analytics: A value-driven approach to 
business intelligence and data warehousing. Addison-
Wesley, 2012. 
[5] J. 
Highsmith, 
Adaptive 
Software 
Development 
Ecosystems. Boston, MA: Pearson Education Inc,  pp. 
244-245, 2002.  
[6] O. McHugh, K. Conboy and  M. Lang, “Agile practices: 
The impact on trust in software project teams,” IEEE 
Software, vol. 29, no. 3, pp. 71-76, 2012. 
[7] O. McHugh, K. Conboy, and  M. Lang,  “Using agile 
practices to influence motivation within IT project 
teams,”  Scandinavian Journal of Information Systems 
vol.  23, no. 2, pp. 85–110 (Special Issue on IT Project 
Management), 2012. 
[8] S. Ghobadi, and L. Mathiassen, “Perceived barriers to 
effective 
knowledge 
sharing 
in 
agile 
software 
teams,” Information Systems Journal, vol. 2, no. 2, pp.95-
125, 2016. 
[9] Y. Liu, and J. S. Phillips, “Examining the antecedents of 
knowledge sharing in facilitating team innovativeness 
from a multilevel perspective.” International Journal of 
Information Management, vol. 31, no. 1, pp. 44-52, 2011. 
[10] J. G. Park, and  J. Lee, “Knowledge sharing in 
information systems development projects: Explicating 
the role of dependence and trust.” International Journal of 
Project Management, vol.32, no. 1, pp. 153-165, 2014. 
[11] M. Ceschi, A. Sillitti., G. Succi, and S. De Panfilis, 
“Project management in plan-based and agile companies,” 
IEEE software, vol. 22, no.3, pp. 21-27, 2005. 
[12] E. Weimar, A. Nugroho, J. Visser, A. Plaat, M. 
Goudbeek, and A. P. Schouten, “The Influence of 
Teamwork Quality on Software Team Performance,” 
Proc. 17th International Conference on Evaluation and 
Assessment, 2017. 
[13] A. Mishra,.”Organizational response to crisis: The 
centrality of trust,” In. R.Kramer,  and T. Tyler, (Eds.), 
Trust in organizations: Frontiers of theory and research, 
pp. 261-287, 1996. 
[14] R. C. Mayer, J. H. Davis. and F. D. Schoorman, The 
Academy of Management Review, Vol. 20, No. 3, pp. 
709-734,1995.  
[15] J. B. Rotter, “A new scale for the measurement of 
interpersonal trust,” Journal of Personality, vol. 35, no. 4, 
pp. 651-665, 1967. 
[16] B. W. Tuckman, “Developmental sequence in small 
groups,” Psychological bulletin, vol. 63, no. 6, pp. 384-
399, 1965. 
[17] G. Simmel, “The Sociology of  Georg Simmel”. K.H. 
Wolff (trans., ed. and intr.). New York: Free Press, 1950. 
22
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

[18] N. Luhmann, “Familiarity, Confidence, Trust:  Problems 
and Alternatives”, in D. Gambetta, (ed.) Trust: Making 
and Breaking Cooperative Relations, electronic edition, 
Department of Sociology, University of Oxford, chapter 
6, pp. 94-107, 2000. 
[19] B. Barber, The logic and limits of Trust, Rutgers 
University press, 1983. 
[20] J. Lewis,   and  A. Weigert,,  “Trust As a Social Reality,” 
Social Forces, Vol. 63, No. 4, pp. 967-985, 1985. 
[21] K. Dirks, and D. Ferrin, “The Role of Trust in 
Organizational Settings,” Organization Science, vol. 12, 
no. 4, pp. 450-467, 2001. 
[22] J. K. Rempel, J. G. Holmes, and M. P. Zanna, “Trust in 
close relationships,” Journal of personality and social 
psychology, vol. 49, no.1, pp. 95-98, 1985. 
[23] D. H. McKnight, and N. L. Chervany, “The Meanings of 
Trust,” Technical Report MISRC Working Paper Series 
96-04, University of Minnesota, Management Information 
Systems Research Center, 1996. 
[24] A. C. Costa, “ Understanding the nature and the 
antecedents of trust within work teams”, in B. Noteboom,  
(Ed.), The Trust Process in Organizations, Cheltenham 
und Northhampton, pp. 105‐24, 2003. 
[25] M. Deutsch, “Trust and suspicion,” Journal of conflict 
resolution, pp. 265-279, 1958. 
[26] D. E. Zand,“Trust and Managerial Problem Solving,” 
Administrative Science Quarterly, pp. 229-239, 1972. 
[27] M. S. Granovetter, “The Strength of Weak Ties,” 
American Journal of Sociology, pp. 1360-1380, 1973. 
[28] J. J. Gabarro, “The Development of Trust, Influence, and 
Expectations,” Interpersonal behavior: Communication 
and Understanding in Relationships, edited by Anthony 
Athos and John J. Gabarro. Englewood Cliffs: Prentice 
Hall, pp.290, 303,1978. 
[29] J. K. Butler, “Toward Understanding and Measuring 
Conditions of Trust: Evolution of a conditions of trust 
inventory,” Journal of Management, vol. 17, pp.  643-663, 
1991. 
[30] J. K. Butler Jr, and R. S. Cantrell, “A behavioral decision 
theory approach to modeling dyadic trust in superiors and 
subordinates,” Psychological reports, vol. 55, no. 1, pp. 
19-28, 1984. 
[31] D. L. Shapiro, B. H. Sheppard, and L. Cheraskin, 
“Business on a handshake,” Negotiation Journal, vol. 8, 
no. 4, pp. 365-377, 1992. 
[32] R. J. Lewicki, and  B. B. Bunker, “Trust in Relationships, 
Proc. 
19th 
Australian 
Conference 
on 
Software 
Engineering, IEEE 2008 pp.  76-84, 1995. 
[33] M. L. Watson, “Can there be just one trust? A cross-
disciplinary identification of trust definitions and 
measurement,” The Institute for Public Relations, 
Gainesville, Florida, pp. 1-25, 2005. 
[34] D. J. McAllister, Affect-and cognition-based trust as 
foundations 
for 
interpersonal 
cooperation 
in 
organizations. Academy of management journal, vol. 38, 
no. 1, pp. 24-59, 1995. 
[35] C. Johnson-George, and W. C. Swap, Measurement of 
specific interpersonal trust: Construction and validation of 
a scale to assess trust in a specific other. Journal of 
personality and social psychology, vol. 43, no. 6), p. 
130,1982. 
[36] V. Santos, A. Goldman, and C. R. De Souza, “Fostering 
effective inter-team knowledge sharing in agile software 
development,” Empirical Software Engineering, vol. 20, 
no. 4, pp.1006-1051, 2015. 
[37] R. E. De Vries, B. Van den Hooff, and  J. A. Ridder, 
Explaining knowledge sharing: The role of team 
communication styles, job satisfaction, and performance 
beliefs. Communication research, vol. 33 no. 2, pp. 115-
135, 2006. 
[38] D. Martin, “Towards a model of trust,” Journal of 
Business Strategy, vol. 35, no.4, pp.  45–51, 2014. 
[39] R. J. Lewicki, and C. Wiethoff,  “Trust, trust 
development, and trust repair,” The handbook of conflict 
resolution: Theory and practice, vol. 1 no. 1, pp.86-107, 
2000. 
 
 
 
 
 
23
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-632-3
SOFTENG 2018 : The Fourth International Conference on Advances and Trends in Software Engineering

