A Guideline for Supporting Agile Process Assessments
Teresa M. M. Maciel
Department of Statistic and Informatics
Federal Rural University of Pernambuco
Rua Dom Manoel de Medeiros, s/n,
Recife, Brazil
tmmaciel@gmail.com
Silvio R. L. Meira
Informatics Center
Federal University of Pernambuco
Av. Jornalista Anibal Fernandes, s/n
Recife, Brazil
srlm@cin.ufpe.br
Abstract—A critical factor in determining whether a company
achieves competitive advantage in the market is its ability to
deal with unexpected and continuous changes. This critical
determinant is addressed by the term “agility”. The current
paper proposes a methodology for assessing agility at the
organizational level, based around a reference model governed
by a set of agile capabilities. The capabilities were selected
from a review of the relevant literature in the manufacturing
and software development fields. Along with this capability set,
the reference model identifies an array of enablers and metrics,
which facilitate their implementation. Finally, a case study
discusses the experience of applying the proposal in the real
environment of an established software company.
Keywords: software agility evaluation; agile assessment.
I.
INTRODUCTION
A critical factor in determining whether a company
achieves competitive advantage in the market is its ability to
deal with unexpected and continuous changes. This critical
determinant is addressed by the term “agility”. Companies
must reconfigure all the various elements of which they are
composed (human, managerial, and technological) in order
to successfully adopt agile methodologies.
Both the manufacturing and software development fields
have faced similar challenges in recent years. Indeed, due to
the commonalities between the fields some authors assign
the core ideas in agile software development to trends in the
manufacturing area [4][6][23].
The concept of agility was first formalized in a report
entitiled ‘21st Century Manufacturing Enterprise Strategy’,
published by the Iacocca Institute in 1991 [3][11][10][15]. In
this work agility is defined as a strategic ability, suggesting
that
being
agile
means
being
proficient
at
change.
Consequently, a number of works were published in the
literature which focused on refining the meaning of the term
[14][8][10][20][21]. In software development context, new
proposals emerged in the 90s as Scrum [18], XP [1], Crystal
Clear [2], FDD [13], and DSDM [19].
Some authors promote ways for assessing agility, as in
[17]. However, few are concerned with assessing agility
from software organizations perspective.
This
paper
presents
a
model to
support
software
organizations assess their agility status. Section II shows a
brief overview about agility evaluation. Section III describes
a reference model proposed to serve as a basis to the
assessment process. Section IV reports a study applied in a
real organization. Finally, Section V presents the conclusions
of this work.
II.
AGILITY EVALUATION
Several efforts have been published in order to propose
ways to evaluate organizational agility. Sharifi and Zhang
[28][29] proposed a conceptual model with agility drivers,
capabilities and providers.
Meredith and Francis [6] defined a set of agility
components organized into four categories: agile strategies,
agile processes, agile linkages, and agile people. Maskell
[12] defined four elements of Agile Manufacturing: customer
prosperity; people and information; cooperation; and fitness
for change. Jin-Hai et al. [10] proposed a concept they called
“real agile manufacturing” based on the critical aspects of
strategic processing, multiple winners, integration, core
competence, and IT. Ramesh [15] presented a literature
review by identifying a set of criteria for attaining agility and
also suggested a procedure for its successful implementation.
Dove [4][27] stated that “Being Agile means being proficient
at change – and allows an organization to do anything it
wants to do whenever it wants to do”. Plonka [14] specifies
the critical attributes of an agile workforce: an attitude
towards learning and self-development; problem-solving
ability; being comfortable with change, new ideas and
technologies; the ability to generate innovative ideas; along
with
the
readiness
to
accept
new
responsibilities.
Gunasekaran [8] defined a set of characteristics for agile
teams: self-directed, containing IT-skilled workers with
knowledge
of
team
working,
negotiation,
advanced
manufacturing strategies and technologies, who are also
empowered, multifunctional and multilingual.
The assessment process proposed by this work is set
within
the
context
of
software
development
at
an
organizational level, and comprises the reference model,
assessment team, the company, and the evaluation process.
Figure 1 illustrates the assessment environment.
144
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

Figure 1.
Assessment Environment
III.
THE REFERENCE MODEL
As shown in Figure 1, the team assesses the software
company guided by the reference model and the evaluation
process, making discoveries and recommending actions to
increase agility levels within
the company.
Figure 2
illustrates the model in detail and lists the specific agile
attributes, enablers, and indicators on which the assessment
process is based.
Figure 2.
The Reference Model
As listed in the figure, the set of agile attributes includes
the following characteristics: responsiveness, learning and
improvement oriented; adaptability; lean; focus on people;
commitment to high quality; driven by customer needs; and
self-organization. It is this set of attributes that propels the
enablers to implement and improve the agile capabilities of
the company. At the same time, they establish the indicators,
which are first obtained from metrics or evaluation results
and then executed by accepted practices and tools.
A.
Software Agility Capabilities
To identify the common capabilities and attributes that
define an agile company, a literature review was conducted
in both the manufacturing and software fields. The review
considered works that contained the following keywords;
‘agile attribute’, ‘agile criterion’, ‘agile concept’, ‘agile
definition’, or ‘agile capabilities’. The search process
focused on articles from the following sources: ACM Digital
Library; IEEE Computer Society Digital Library; and
Google Scholar (in order to widen the search). The results of
the search, the majority of which came the manufacturing
research field, were combined to construct Table I, which
shows that agility converges into six common capabilities.
1)
Responsive
The quality of responsiveness can be defined as the
capability to easily accept and deal with changes; to identify
changes and respond to them both reactively and proactively;
and to recover from them [28].
2)
Fast
Since agility is a rapid and proactive adaptation to
continuous and unpredicted changes, speed is an essential
attribute of an agile organization. A fast organization gets to
the market quickly, with a production time that guarantees
the fast delivery of products and services. However, this
capability should not be limited to the time of production: it
must be evident throughout the company. Some authors,
Breu et al. [21] for example, cite the speeds of skill
development, adaptation to new work environments, and
information access as indicators for evaluating the agility of
a workforce.
TABLE I.
SOFTWARE AGILE ATTRIBUTES
Agile Capability
Author
Responsive
[1]; [3]; [4]; [9]; [12]; [18]; [21]; [23];
[24]; [26]; [28]; [30].
Fast
[1]; [3]; [4]; [7]; [9]; [18]; [21]; [24];
[27]; [28]; [30].
Adaptable
[1]; [3]; [4]; [18]; [23]; [24]; [27]; [28];
[30].
Knowledge-driven
[7]; [18]; [21]; [23]; [24]; [25]; [28]; [30].
Self-organized
[7]; [9]; [12]; [18]; [23]; [24]; [28]; [30].
Quality and
Improving
Committed
[1]; [7]; [9]; [18]; [23]; [24]; [30].
Management way
People profile
Processes
Client relationship
TEAM
ORGANIZATION
REFERENCE
MODEL
Agile atributes, enabels and indicators
EVALUATION
PROCESS
Lessons learned
Finds
Improvement
actions
INDICATORS
AGILE ATTRIBUTES
ENABLES
MANAGEMENT
PEOPLE
CLIENT
PROCESS
RESPONSIVENESS
LEARNING & IMPROVING
ADAPTABILITY
LEAN
PEOPLE FOCUS
HIGH QUALITY COMMITMENT
CUSTOMER NEEDS DRIVEN
SELF-ORGANIZATION
METRICS
SELF-EVALUATION
Direction
Improving
Direction
Visibility
Goals
Data
145
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

3)
Adaptable
Adaptability is commonly related to flexibility. To adapt
itself to the demands of the market, a company requires
flexible processes and structures, as well as flexible people.
The concept of organizational adaptability originated from
the contingency approach in organizational research, and the
theory that the organizing style is dependent on the
situational constraints of the environment in which the
company operates [30].
4)
Knowledge-Driven
According to the literature review, a focus on knowledge
represents a critical aspect of agility. Goldman et al. [25] for
example, link competitive agile environments to knowledge
and experience. Yusuf et al [23] cite that the best practices of
a knowledge-rich environment provide the means to produce
customer-driven products in a fast changing environment.
Sherehiy
[30]
states
decentralized
knowledge
as
a
characteristic
of
an
organic
organizational
design.
Knowledge management and change proficiency are co-
dependent relationships, and the enabling competencies of an
agile company [5]. The emphasis on short development
cycles, reviews, collaborative work and retrospectives found
in the Agile Manifesto, also agile practices such as XP and
Scrum, reflect the importance given to organizational
knowledge in software development.
5)
Self-organized
Organizational agility demands proactive and adaptive
responses, and thus certain key skills are required in an agile
workforce. Based on the evidence from the review, these
skills are directly linked to empowered and self-organized
teams. Particularly considering the environment of agile
software development, the requirement for a high level of
both
individual
and
team
autonomy
is
viewed
as
a
prerequisite attribute.The Agile Manifesto explicitly includes
this aspect in one of its 12 agile principles, affirming that the
best architectures, requirements, and designs emerge from
self-organizing teams.
6)
Quality and Improving Committed
As agility is a dynamic and competitive ability, its
institutionalization demands high quality with decreasing
lead time [4]. Retrospectives are recommended by agile
methods as a mechanism to discover means to increase
effectiveness. According to the Agile Manifesto, a team
tunes and adjusts its behavior driven by the desire to improve
its performance.
B.
Supporting Enablers
Agile
capabilities
represent
the
direction
of
organizational improvement, and are achieved through the
implementation of accepted practices and tools (enablers).
Institutionalized agile enablers are the clear indicators of the
agility journey during an agile assessment evaluation,
therefore agile companies must understand and identify
which enablers are appropriate for each project or program.
Table II presents a set of common enablers selected from the
results of the literature review and connects each capability
with its relevant agile capability as stated by the Agile
Alliance in its Agile Practices Guide [31].
TABLE II.
AGILE CAPABILITIES AND SUPPORTING
ENABLERS
Capabilities
Enablers
Responsive
Continuous deployment, Frequent
releases, Daily meeting, Incremental
development, Rules of simplicity
Fast
Automated build, Automated test,
Continuous delivery, Continuous
integration, Incremental development,
Planning Poker, Rules of simplicity
Adaptable
Automated test, Continuous
integration, Daily meeting, Frequent
releases, Incremental development,
Pair programming, Rules of simplicity
Knowledge-driven
Pair programming, Retrospectives,
reviews, Collective ownership,
Incremental development, Kanban
boards, Refactoring
Self-organized
Daily meeting, Retrospective, Kanban
boards, Planning Poker
Quality and
Improving Committed
Acceptance test, TDD, Daily meeting,
Retrospective, Incremental
development, INVEST, Kanban
boards, Pair programming, Refactoring,
Usability tests
C.
Supporting Metrics
In order to evaluate the improvement of agility, the
assessment guideline considers a set of metrics to be
monitoring.
Table III shows the list of metrics adopted.
Besides, the table presents the mapping between each
capability and the supporting metrics.
Table III helps software organizations to identify what to
consider to measure in order to monitoring its agile way.
Metrics listed should be collected and tracking at the
organizational level, and it can be a team, a project, a
department or the whole company.
Some of the metrics support directly one specific
capability. For example, Lead Time (the time between the
initiation and completion of a production process) is related
directly to capability fast. Throughput, on the other side, is
related to self-organized indirectly.
The evolution of each metric should be closely monitored
and analyzed during the assessment to identify both the
capabilities that are improving and the key areas that require
further work.
146
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

TABLE III.
AGILE CAPABILITIES AND SUPPORTING METRICS
METRIC
CAPABILITIES
RESPONSIVE
FAST
ADAPTABLE
KNOWLEDGE-DRIVEN
SELF-ORGANIZED
QUALITY AND
IMPROVEMENT COMMITED
Cost of change (effort)
X
X
X
X
Time to change
X
X
X
X
Improvement frequency
X
X
X
Lead Time
X
X
Throughput
X
X
X
Takt time
X
X
Team building speed
X
X
X
X
Client Satisfaction
X
X
Requirements or BV burn downs
X
X
X
X
Role variety
X
X
X
X
Cumulative Flow
X
X
Re-work measurement
X
X
Technical Debt
X
X
Defect Density
X
X
IV.
ASSESSMENT PROCESS APPLIED IN A REAL
CASE STUDY
The goal of the case study was to validate the suitability
of the proposal in a real situation. The assessment process
was applied to a small Brazilian company that produces
software in the industrial automation area and first adopted
agile and Lean approaches in 2011. At the beginning of the
process, the complete team consisted of 20 employees, of
whom 15 were directly involved in software development
and the remainder in administration, marketing and sales.
During the assessment period of 3 months a set of metrics
was collected at monthly intervals to verify the degree of
improvement in agile capabilities.
An analysis of the data available in the company was
performed to define a set of suitable metrics. These were:
lead time (the period of time between the beginning and the
end of user story development); throughput (number of user
stories divided by total time); takt time (the total time
divided by the number of user stories); improvement
frequency (the number of actions implemented as a result of
retrospectives); and client satisfaction (collected from a
systematic monthly survey made by the organization). Figure
3 is a selection of metrics for one small project over the three
month period.
According to Figure 3, throughput, takt time and lead
time all demonstrated improving curves during the study. 59
user stories (attributed by the team as smalls) were collected
and developed.
In the first month, the team produced a
thoughput of 0.5 user story, improving to 0.7 and 0.8 in the
consecutive months. Takt time values demonstrated a similar
improving behavior. This represents a good indicator of
capabilities
as
being
responsive
and
quality
and
improvement committed. Similar results were found in the
other collected metrics. It is important to state that during
this period the organization applied enablers in order to
improve its results.
Each
metric
was
analyzed
in
terms
of
its
institutionalization
as
well
as
its
application
for
improvement. Parallel observation and self-evaluation was
performed
by
the
team
to
verify
the
level
of
institutionalization of each agile metric or practice. Table IV
gives the results of the evaluation, where each agile enabler
or metric was evaluated by the team as Institutionalized (I),
In Progress (P), or Not Worked (N).
Figure 3.
Throughput, Lead Time and Takt Time collected from case
study
Figures 4 and 5 give a graphical view of the evaluation
results in terms of the degree of institutionalization for each
agile practice and the attendance of a capability.
The case study results highlight areas of improvement,
demonstrating the impact of these improvements in terms of
agile capabilities. It should be stated that it is not mandatory
for a company to implement all the recommended agile
practices. That is the reason that an agile capability being
worked through at least one enabler and metric was
classified as ‘In Progress’ in the evaluation.
0
5
10
15
20
25
0
10
20
30
40
50
60
Lead Time in 3 months (item x hour)
0,0
1,0
1
2
3
Througput (demand/day)
Througput
0,0
5,0
1
2
3
TaktTime (30days/demand)
TaktTime
147
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

TABLE IV.
AGILE CAPABILITIES ATTENDANCE ANALYSIS
METRIC
CAPABILITIES
RESPONSIVE
FAST
ADAPTABLE
KNOWLEDGE-DRIVEN
SELF-ORGANIZED
QUALITY AND
IMPROVEMENT COMMITED
Cost of change (effort)
N
N
N
N
Time to change
N
N
N
N
Improvement frequency
P
P
P
Lead Time
P
P
Throughput
P
P
P
Takt time
P
P
Team building speed
N
N
N
N
Client Satisfaction
I
I
Requirements or BV burn downs
P
P
P
P
Role variety
N
N
N
N
Cumulative Flow
P
P
Re-work measurement
N
N
Technical Debt
N
N
Defect Density
P
P
How we monitoring the agile capabilities
attendance?
P
P
P
P
P
P
ENABLER
Continuous deployment
P
P
P
Frequent release
I
P
I
Continuous delivery
I
I
I
Daily meeting
I
I
I
I
I
Incremental development
I
I
I
Rules of simplicity
N
I
N
Pair programming
N
N
N
N
N
Retrospectives, reviews
P
P
P
Collective ownership
P
P
P
Kanban boards
I
I
I
Refactoring
N
N
Automated test
P
P
P
Continuous integration
N
P
N
Acceptance test
I
N
I
TDD
N
N
INVEST
N
N
Planning Poker
P
P
P
Automated build
P
P
P
Usability tests
P
N
N
How we apply enablers to intensify agile
capabilities attendance?
P
N
P
P
P
P
Figure 4.
Agile Practices Institutionalization
V.
CONCLUSION
A proposal was presented for assessing organizational
agility which could be applied at company, department, and
team levels. The basis of the proposal is a reference model
that is driven by a set of agile capabilities selected from a
literature review carried out in the manufacturing and
software development fields. To accompany this set of
capabilities, the model offers an array of enablers and
metrics that can facilitate a company to achieve these agile
capabilities. Each agile enabler was linked to the capability
it supported and demonstrated the relationship between each
capability and its supporting metrics. Finally, a case study
was included to illustrate the experience of the proposal
being applied to a small Brazilian software company.
ACKNOWLEDGMENT
This work was (partially) supported by the National
Institute
of
Science
and
Technology
for
Software
Engineering (INES1), funded by CNPq and FACEPE, grants
573964/2008-4 and APQ-1037-1.03/08.
REFERENCES
[1]
K. Beck, “Extreme Programming Explained: Embrace Change”,
Addison-Wesley, ISBN 0-201-61641-6, 2000.
[2]
A. Cockburn, “Crystal Clear: A Human-Powered Methodology for
Small Teams”, Addison-Wesley, ISBN 0-201-69947-8, 2004.
[3]
R. Dove and R.N. Nagel, “21st Century Manufacturing Enterprise
Strategy:
An
Industry
Led
View”.
Iacocca
Institute,
Lehigh
University, Bethlehem, PA, 1991.
[4]
R. Dove, “Lean And Agile: Synergy, Contrast, And Emerging
Structure”.
Proceedings
of
the
Defense
Manufacturing
Conference’93, San Francisco, CA, 1993.
1 www.ines.org.br
Statusof PracticesInstitutionalization
I
P
N
148
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

[5]
R. Dove, “Response Ability: the Language, Structure, and Culture of
the Agile Enterprise. Wiley, New York, , 2001.
[6]
S. Meredith, D. Francis, "Journey towards agility: the agile wheel
explored", The TQM Magazine , 2001, vol.12 iss: 2, pp.137 – 143
[7]
M. Fowler and M. Highsmith, “The Agile Manifesto,” Software
Development, Aug. 2001, pp. 28-32.
[8]
A. Gunasekaran, “Agile Manufacturing: A Framework for Research
and Development”. International Journal of Production Economics,
1999, vol.62, pp.87–105.
[9]
J. Highsmith, A. Cockburn, “Agile Software Development: The
People Factor”, IEEE Computer Magazine, 2001, pp. 133-136.
[10] L. Jin-Hai, A. R. Anderson, and R. T. Harrison, “The evolution of
agile manufacturing”, Business Process Management Journal, 2003,
vol.9 No. 2, pp. 170-89.
[11] S. Izza, R. Imache, L. Vincent, and Y. Lounis, “An Approach for the
Evaluation
of
the
Agility
in
the
Context
of
Enterprise
Interoperability”, Enterprise Interoperability III, Springer, ISBN 978-
1-84800-220-3, 2008.
[12] B. Maskell, “The age of agile manufacturing”, Supply Chain
Management: An International Journal, 2001, vol.6 No. 1, pp. 5-11.
[13] S. R. Palmer, Felsing, J.M., “A Practical Guide to Feature-driven
Development”, Prentice Hall, Upper Saddle River, NJ, ISBN 0-13-
067615-2, 2002.
[14] F. S. Plonka, “Developing a lean and agile work force”. Human
Factors and Ergonomics in Manufacturing, 1997, vol.7 No.1, pp.11–
20.
[15] C. Ramesh, “Literature review on the agile manufacturing criteria”,
Journal of Manufacturing Technology Management, 2007, vol.18 No.
2, pp. 182-201.
[16] D. J. Reiffer, “How Good are Agile Methods?”, IEEE Software, 14–
17, 2002.
[17] B. Rumpe and A. Schroder, “Quantitative survey on extreme
programming projects”, Proceedings of International Conference on
Extreme
Programming
and
Flexible
Processes
in
Software
Engineering (XP2002) Alghero, Italy, (2002, pp. 95–100.
[18] K. Schwaber, M. Beedle, “Agile Software Development with Scrum”,
Prentice Hall, Upper Saddle River, 2001.
[19] J. Stapleton, “DSDM: Business Focused Development”, Second Ed.,
Pearson
Education,
ISBN
978-0321112248.Version
2.3,
Keele
University and University of Durham, EBSE Technical Report, 2007.
[20] J.
Sarkis,
“Benchmarking
for
agility”,
Benchmarking:
An
International Journal, MCB University Press, vol.8 No. 2, 2001, pp.
88-107.
[21] K. Breu, C. Hemingway, M. Strathern, “Workforce agility: The new
employee strategy for the knowledge economy”. J. Information
Technology, 2001, pp. 17 21–31.
[22] P. Kentunen, “Adopting key lessons from agile manufacturing to
agile
software
product
development—A
comparative
study”,
Technovation, 2008, vol.29 (2009) 408–422.
[23] Y. Yusuf, M. Sarhadi, A. Gunasekaran, “Agile manufacturing: the
drivers, concepts and attributes”. International Journal of Production
Economics, 1999, vol.62, pp. 33–43.
[24] P. T. Kidd, “Agile Manufacturing: Forging New Frontiers”. Addison-
Wesley Reading, 1994.
[25] S. L. Goldman, R. N. Nagel, and K. Preiss, “Agile Competitors and
Virtual Organizations: Strategies for Enriching the Customer”, Van
Nostrand Reinhold, 1995.
[26] A. Nelson and F. A. Harvey, “Technologies for Training and
Supporting Your Agile Workforce”, Proceedings 4th Agility Forum
Annual Conference, Bethlehem, PA, 1995.
[27] R. Dove, “The Meaning of Life and the Meaning of Agile”,
Production Magazine, 1994.
[28] H. Sharifi and Z. Zhang, “A Methodology For Achieving Agility In
Manufacturing
Organisations:
An
Introduction”,
International
Journal of Production Economics, 1999, vol.62, pp. 7–22.
[29] Z. Zhang and H. Sharifi, “A Methodology for Achieving Agility in
Manufacturing Organisations”, International Journal of Operations &
Production Management, 2000, vol.20, pp. 496-512.
[30] B. Sherehiy, K. Karwowski, J. K. Layer, “A Review of Enterprise
Agility: Concepts, Frameworks, and Attributes, International Journal
of Industrial Ergonomics”, 2007, vol.37, pp. 445–460.
[31] Agile
Alliance,
“Agile
Practices
Guide”,
accessible
through
http://guide.agilealliance.org/.
149
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

