Agent-based simulation validation: A case study in demographic simulation
Cristina Monta˜nola-Sales∗‡, Bhakti S. S. Onggo† and Josep Casanovas-Garcia‡
∗Computer Applications in Science and Engineering
Barcelona Supercomputing Center, Barcelona, Spain
Email:cristina.montanola@bsc.es
†Department of Management Science
Lancaster University Management School, Lancaster, UK
Email: s.onggo@lancaster.ac.uk
‡Department d’Estad´ıstica i Investigaci´o Operativa (DEIO)
Universitat Polit`ecnica de Catalunya (UPC), Barcelona, Spain
Email: josep.casanovas@upc.edu
Abstract—Two of the crucial parts in the process of per-
forming a simulation study are validation and veriﬁcation. The
reason is these techniques help on increasing the conﬁdence in
the model, since it is not possible to demonstrate its absolute
validity in all contexts. This paper presents the results of a
white-box validation performed in an agent-based simulator
for population dynamics. The tool provides a way to simulate
the demographic evolution of large populations in a parallel
environment. The purpose is to obtain population projections
that can be used afterwards for policy analysis. Although the
tool has been studied in terms of performance and scalability,
its validation hasn’t been addressed. With a white-box valida-
tion we expect to increase the conﬁdence of policy analysers
and social scientists in our simulation model.
Keywords-White-box Validation; Agent-based Simulation;
Parallel Simulation; Demography
I. INTRODUCTION
Agent-based modelling is a model that is formed by a set
of autonomous agents that interact with their environment
(including other agents) through a set of internal rules to
achieve their objectives [1]. An agent-based model, just
like other types of model, is used to represent a real world
system and to help us understand the system and to make
decisions. An agent-based model is commonly implemented
as a piece of computer code and run using a simulator.
Agent-based simulation is the computer implementation of
an agent-based model. Agent-based simulation has been
applied in the physical sciences as well as the social
sciences [2]. Many agent-based simulation tools have been
developed in the last years to explore the complexity of
social systems. Social phenomena are unpredictable and
changing (dynamic). For this reason, agent-based simulation
allows us to carry out experiments and studies that would
not be feasible otherwise [3].
Agent-based simulation is recognised as one of the
techniques which could contribute more in understanding
complex social systems [4]. One of the application areas
is demography. Onggo [5][6] has developed a parallel
simulation tool for demography. Demography is often used
as one of the important considerations in policy analysis and
planning. The parallel simulation tool (Yades) was built for
discrete-event simulation modelling paradigm [5][6]. In this
paper, we have refactored the tool to separate the modelling
component from the simulation execution component. The
objective is to allow users to model population dynamics
using agent-based simulation modelling paradigm. The
agent-based model will be run on top of the parallel
discrete-event engine. This paper reports the work that we
have carried out to evaluate the correctness of the refactored
simulation tool.
Validation and veriﬁcation (V & V) is a signiﬁcant
element of any simulation study. As pointed by Robinson
[7], “without V & V there are no grounds on which to
place conﬁdence in a (simulation) study’s results”. In
simulation, we often differentiate between veriﬁcation and
validation. Veriﬁcation is a process to determine whether
a conceptual model has been implemented correctly in its
computerized form. To borrow the computer programming
term, we debug the model. Validation is a process to
determine whether the model is an accurate representation
of the system being studied for a given set of modelling
objectives. Robinson states that it is not possible to prove
that a model is valid in all contexts, because a model is
only a simpliﬁed version of a real system. Consequently, a
model cannot describe all aspects of a real system. Hence,
the main objective of validation is to prove that a model
is sufﬁciently accurate for parts of reality that is being
studied. Indeed, one of the key aspects of validation is to
assess whether the outcomes of a model can explain the
real phenomenon under study [8]. This can be fulﬁlled by
performing as many validation methods as possible during
a simulation study until we (and users) can gain enough
conﬁdence in the model and accept its results. Edmonds
[9] describes validation as a continuous process. Validation
should also take into account the domain of the system
under study [10]. Therefore, a validated model may not be
valid for a set of different experimental conditions outside
101
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

its domain.
Robinson identiﬁes four different forms of validation in
simulation modelling: conceptual model validation, data
validation, white-box validation and black-box validation
[7]. Conceptual model validation deals with issues such
as the level of detail of the model and determines if it is
enough for the purpose it was developed. Data validation is
needed to determine whether the data used in the simulation
study is sufﬁciently accurate. The black-box validation
concerns with the relationship between inputs to the model
and its outputs, ignoring the elements inside a model. The
objective is to determine if the output of the model reﬂects
the real world observation for the same set of inputs.
Finally, white-box validation tries to answer the question
does each element of the model and the structure of the
model elements represent the real world with sufﬁcient
accuracy?
This paper reports our work in the validation of the
agent-based simulation tool which has not been reported in
our previous work. The validation is based on the white-box
validation methods described in Pidd [11]. The rest of
the paper is organised as follows. Section II presents an
overview of the demographic simulation model that is used
in this paper. Section III describes the simulation tool and
Section IV presents the veriﬁcation and validation work.
Finally, our concluding remarks and lines of further work
are described in Section V.
II. DEMOGRAPHIC AGENT-BASED MODEL
In demography the most commonly used paradigms
are microsimulation, system dynamics and discrete-event
simulation. In microsimulation, we need to specify a
random sampling process for each individual at every
simulation time point. On the other hand, in system
dynamics, we do not keep track changes in the state of each
individual but focuses on the population of individuals and
the rates of individuals moving from one state to another.
Similar to microsimulation, in discrete-event simulation,
we keep track the individuals starting from their arrival
in the system (through births and migrations) until they
leave the system (through deaths and migrations). However,
discrete-event simulation does not inspect each individual
at every simulation time point. It inspects an individual
only when the state of the individual changes.
It is commonly accepted that agent-based simulation
can help to better understand a complex system where
there is a need to model behaviours of many interacting
individuals [12]. Agent-based modelling paradigm allow
us to explicitly include human behavioural aspects into a
model. This is one of the main reasons that motivates us
to support the use of agent-based modelling paradigm in
our demographic simulation tool. At the very core of a
demographic model, we need to model key demographic
components that represent basic population dynamics, such
as: fertility (births), marital status, migrations, and mortality.
On top of this, we can add components depending on the
intended application of the demographic model. To take
one example, for the application in tax and beneﬁt systems,
we may need to add another component that represents the
change in economic status. With the agent-based modelling
paradigm, we can evaluate the effect of a certain behaviour
at the individual level on the population. This will make
our tool more useful to wider potential users.
In Yades modellers can specify a model for each
demographic component which will form a bigger model
that represents the interactions between all components in a
population. The detailed explanation on each demographic
component can be read from our previous reported works
[5] and [6]. The summary is as follows. The fertility
model concerns with the representation of the number of
children that a female individual may have, the age of the
female individual when her ﬁrst child is born, and the time
between two consecutive births for female individuals who
will have more than one child. The mortality model is used
to represent the lifetime of an individual. The migrations
model represents the mobility of individuals in a population.
The marital status model is used to model the change in
the marital status of individuals. Similarly, the economic
status model represents the change in the economic status
of individuals in the population.
III. YADES: A PARALLEL SIMULATOR FOR POPULATION
DYNAMICS
Our parallel demographic simulation tool is called Yades.
We have refactored the tool to allow modellers to model the
individuals in a society using the agent-based simulation
modelling paradigm and to run the model on top of a
DES engine. The idea of running an agent-based model
on top of a discrete-event simulator has been proposed
by some writers [1][2][13]. It is one of the approaches
that has been proposed to tackle the scalability issue
of large-scale agent-based simulation models. The main
advantage of this approach is that modellers who prefer to
use agent-based modelling paradigm, do not need to change
their modelling paradigm, and at the same time, a scalable
parallel discrete-event simulation engine can be used to
improve the overall simulation performance.
The simulation engine in Yades is implemented using µsik
parallel simulation library. µsik is a parallel discrete-event
simulation library that supports multiple synchronisation
algorithms such as: lookahead-based conservative protocol
and rollback-based optimistic protocol [14]. This library
adopts the process interaction world-view in which a
simulation model is formed by a set of interacting (logical)
processes. Logical processes (LPs) communicate through
events. Multiple LPs can be mapped onto a physical
102
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

Figure 1.
Software architecture
process (PP) that is run on top of a processing element
(PE). A machine can have more than one PE (e.g., in
multi-core architecture). The detailed description of the
implementation can be read from [5] and [6].
Yades maps each agent in the model onto an LP.
There are two types of agents in Yades. The ﬁrst type
of agent represents a family unit. In FRS data, a family
unit is deﬁned as a single independent individual or two
independent individuals living together (as married or in
cohabitation) and any dependent individuals (children).
Hence,
a
family
unit
may
represent
an
independent
individual, a single parent, a childless couple, a nuclear
family or an orphan. The main advantage of representing a
family unit as an agent is that many public policies may
apply to individuals as well as groups of related individuals,
such as households and single parents. The behaviour of a
family unit is deﬁned by the ﬁve demographic components,
i.e. fertility, mortality, change in economic status, change
in
marital
status,
and
migration.
Yades
provides
the
placeholders for each demographic components where
detailed behaviour can be speciﬁed by modellers. The
second type of agent represents an administrative area
where a number of families live. This agent will handle
migrations and changes in simulation parameters and
produce periodic reports. Yades allows users to model
administrative area with different population characteristics.
The main limitation of the current version is that it only
allows one processing element to run one administrative
area. The architecture of our tool is shown in Figure 1.
Yades allows users to provide data for the initial
population. The data used in the model in this paper
follows the structure of the UK Family Resources Survey
(FRS) data. FRS is sponsored by the UK Department for
Work and Pensions. It has been running since 1992 which
provides useful cross-sectional and longitudinal data for
the simulation. Hence, we can set the initial population
parameters from a readily available data.
IV. MODEL VERIFICATION AND VALIDATION
A. Model veriﬁcation
Although
conceptually
simple,
veriﬁcation
can
be
challenging,
especially
when
we
are
dealing
with
a
relatively complex computer program. Law [15] and Banks
et al. [16] lists a number of techniques that can be used
in a veriﬁcation process.The main technique that we use is
the structured walkthrough of the program. This includes
dividing the model into smaller components and test the
correctness of each component. It is suggested that we start
with the simplest possible behaviour so that the simulation
output can easily be understood. Hence, errors can be
easily spotted. This is the approach that we have used. We
have tested the implementation of a simple model for each
demographic component in our model. The explanation is
given in the following subsections.
Another technique that we have used is the structured
walkthrough
of
the
program.
The
program
developer
(second author) presented the code line-by-line to the
ﬁrst author. It was done in a small meeting room with a
projector showing the computer code. Before the structured
walkthrough session started, the ﬁrst author had been
briefed with the conceptual model. We have found this
technique very effective to uncover ﬂaws in the computer
implementation of the conceptual model. The most obvious
explanation is because the non-developer(s) are independent
and they may view the implementation from different
perspectives. Hence, they can challenge the developer(s)
on various implementation issues, such as the effectiveness
of an implementation, the possible settings that can cause
errors, and the correctness of the implementation. In the
context of agent-based simulation, we have found this
method especially effective, because of the many possible
combination of interactions between agents in the model.
When a conceptual model document was given to the
non-developer(s) before a structured walkthrough session
started, it gives a top level view of the model to the
non-developer(s). Hence, the non-developer(s) focus more
on the top-level view of the model and less distracted
with the implementation detail. This has the potential to
uncover the possible errors due to the combinations of
interactions between agents that might have been missed by
the model developer(s). We use Yades’ facility to produce a
trace to be examined to check any possible mistakes. This
was done by the ﬁrst author to minimize the developer’s bias.
B. Model validation
From the 1990s, agent-based simulation has become
increasingly popular [17]. However, according to the survey
conducted by Heath et al. [17] on the articles related to
agent-based models published between 1998 and 2008, 29%
of the articles did not discuss the validation of their models.
103
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

They further divide the validation reported in the articles
into two categories: conceptual (i.e. conceptual model
validation) and operational (i.e. comparing the simulation
result with the real observation). They found that 17% of
the articles used the conceptual validation only, 19% used
the operational validation only, and 35% used both. They
also noted the dominance of qualitative validation methods
in the validation of agent-based models. They provide a
conjecture that this might be because many agent-based
models
are
not
conducive
for
quantitative
validation
methods. Kl¨ugl noted that agent-based models often exhibit
behaviour that can be problematic for validation purposes,
such as non-linearities and multi-level properties [18]. In
addition, agent-based models often use signiﬁcantly more
assumptions which make the assessment of the validity
of assumptions more difﬁcult. Agent-based models also
require the ﬁner level of model detail in which data at that
level of detail may be difﬁcult to obtained.
Duong [19] also examines this issue and suggests that the
greater uncertainty in social sciences compare to others, the
lack of consensus on how to represent social environment,
and the lack of experimental controls in data collection
might contribute to the difﬁculties in the validation of
agent-based models. Windrum et al. [20] examines a set
of methodological problems in the empirial validation of
agent-based models. The problems seem to have arisen due
to, among other reasons, the lack of techniques to build and
analyse these models and the lack of comparability between
the ones which have already been developed. A number of
validation techniques have been proposed for agent-based
simulation modelling. Kl¨ugl [18] proposes a validation
process for ABS models combining face validation and
statistical methods. Moss et al. [21] use a declarative
formalism to address the validation and veriﬁcation of
ABM with cognitive agents. However, there seems to be
a general concern on the lack of validation framework or
methodology in agent-based simulation.
In this paper we present a white-box validation of our
simulation model based on the methods described in Pidd
[11], especially on the static logic and the dynamic logic of
the model. A white-box method focuses on the correctness
of the internal workings of a model. This includes the
correctness of the components and the interaction between
components. A white-box method assumes that we know
(and have access to) the components inside the model.
Balci [22] deﬁnes white-box method as a technique that
is intended to evaluate a model based on its execution
behaviour. It can be applied to the programmed model
(veriﬁcation) or to the experimental model (validation)
of the life-cycle process of a simulation study. We have
applied this method to asess the correctness of the internal
working of each component in the model introduced in
Section III.
We divide the model into smaller components and test
Figure 2.
Initial distribution of economic status in the population
Figure 3.
Initial distribution of marital status in the population
the correctness of each component. It is suggested that
we start with the simplest possible behaviour so that the
simulation output can easily be understood. Hence, errors
can be easily spotted. This is the approach that we have
used. We have tested the implementation of a simple model
for each demographic component in our model.
In the following subsections, we present the result of our
evaluation on each model component using the white-box
method. In the evaluation, we use a population of 110,000
family units. In each test, we run the simulation ﬁve times
and report the average results . The explanation on the
validation of each demographic components is as follows.
Figure 2 shows the proportion of different economic
statuses in the initial population by age group. Similarly,
Figure 3 shows the proportion of different marital statuses
in the initial population by age group.
1) Mortality:
Yades allows modellers to sample the
lifetime of individuals using two commonly used methods:
life table and survival function. In order to evaluate this
component, we disable all other demographic components.
This helps us to detect any error and to isolate the root
cause of the error easily. We vary the life tables. One of
104
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

Figure 4.
Simulation output and expected output for mortality model
the results is shown in Figure 4. In both cases, the Pearson
product moment correlation coefﬁcient of the original
distribution and the outputs is very high, 0.9870 for women
and 0.9783 for men. The same evaluation is repeated using
various life tables. They also produce high correlation
values. This has increased our conﬁdence that the mortality
component can produce the intended behaviour.
2) Fertility: Modellers can specify a number of fertility
models in Yades using age-speciﬁc fertility model, parity-
speciﬁc fertility model, birth spacing model and their com-
binations. To test the fertility model component, the rest
of demographic components are disabled in order to isolate
fertility results. To simplify the model, birth function is set
to follow a Poisson distribution with parameter λ = 2 in
women from 16 to 49 years old (assumed to be the repro-
ductive age). Birth function is calculated for every woman
regardless their marital status and birthspacing is uniformly
distributed. After running the simulation the accumulated
number of births by age group is obtained. In Figure 5
the percentages of births are represented according to the
number of children’s group. As we can see, the simulator
is producing the expected number of births in the fertility
interval. We repeat this experiment with different parameters
and all of them produced the expected results.
3) Marital status: Yades recognizes the following marital
statuses: single, married, cohabitation, separated, divorced
and widowed. Individuals will move from one marital
status to another during their lifetime. The transitions from
Figure 5.
Simulation output and expected output for fertility model
one status to another can be speciﬁed based on a simple
probability function, a regression function or a set of logical
rules. Likewise, time spent in one status can be sampled
using a distribution function, a regression function or a set
of logical rules. In the formation of a family unit (e.g.,
marriage and cohabitations), we need to specify a function
that matches a pair of individuals.
In the following evaluation we use a probability function
for the state transition and apply a simple matching criteria
where we choose the ﬁrst person that we ﬁnd in the
list regardless of his/her characteristics. Transitions are
uniformly distributed between 1 and 10 years. First, we
want to test the correctness of family unit formations.
Hence, we disable all other transitions. We also disable all
other life events (as fertility and mortality). The top chart
in Figure 6 shows the result. As expected, the number of
marriages and cohabitations increases with time while the
number of singles decreases progressively.
The second test has the same settings as before but we
enable the mortality in the model. The result can be seen
from the bottom chart in Figure 6. The ﬁgure shows that
the number of widowed increases with time. This is the
behaviour that we expect.
4) Economic status: As in the marital status, an individ-
ual may move from one economic status to another during
his/her lifetime. Yades recognizes the following economic
statuses: dependent, in employment, unemployed, in full-
time higher education, pension and economically inactive.
Modellers will need to model the transitions from one status
to another and the time spent in any of the status. In the
evaluations, the transitions are scheduled using a uniform
distribution between 1 and 5 years. The top chart in Figure 7
shows the changes in economic status. As expected, without
mortality, the number of pensioners increases steadily. At the
same time, the number of dependent individuals, individuals
in higher education, working individuals, and unemployed
individuals decreases over time.
105
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

Figure 6.
Validation results for marital status component model
In the second test, we use exactly the same setting but we
enable the mortality. This should produce a similar behaviour
as before but the proportion of retired individuals will be less
because some of them will die. The result can be seen from
the bottom chart in Figure 7.
5) Migrations: Yades provides a functionality for a mod-
eller to deﬁne a model that determines whether a family
unit is going to migrate. There are two types of migration:
domestic migration and international migration (emigration
and immigration). These models can be speciﬁed using a
constant probability, regression or a set of logical rules.
The destination region is determined using a probability
matrix where each row represents the originating region
and each column represents the destination. To validate this
component we tried two different scenarios using 4 regions.
In the ﬁrst scenario, we set the probability to migrate in
each regions to be the same. As expected, the number of
population in each regions are relatively the same [6]. In
the second scenario we set one of the regions (i.e., region
4) to be the most attractive, such that once people have
move to that region they will never leave the region. In this
example, we expect an increase in the population of region
4 while the rest of the regions experience a decrease in their
population. The result is shown in Figure 8.
Figure 7.
Validation results for economic status component model
Figure 8.
Evolution of population in a migration scenario
V. CONCLUSION AND FUTURE WORK
The validation of a complex agent-based model is chal-
lenging. This is partly due to the quality of the available
data that are needed to calibrate and to validate the model.
The large number of model parameters makes it even more
challenging. In this paper, we have presented the veriﬁcation
and validation of an agent-based demographic simulation
model implemented using Yades using white-box method.
This method allows us to assess the correctness of the model
components and their interactions. The results obtained in
this paper show that the ﬁve components of the simulator
are behaving correctly in terms of what the modellers should
expect from them for the given scenarios. To increase our
106
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

conﬁdent in the model, we need to conduct more testing
using different validation methods. At the moment, we
are implementing a graphical user interface to help users
specify the model more easily without having to write the
codes. This would help potential users who do not have any
programming experience to test their models and provide
feedback on the tool.
ACKNOWLEDGMENT
This research is supported by the Royal Society Interna-
tional Joint Project 2009/R2 grant number JP090402.
REFERENCES
[1] B. Onggo, “Running agent-based models on a discrete-event
simulator,” in Proceedings of the 24th European Simulation
and Modelling Conference.
Hasselt, Belgium: Eurosis-ETI,
October 25-27 2010, pp. 51–55.
[2] C. M. Macal and M. J. North, “Tutorial on agent-based mod-
eling and simulation,” in Proceedings of the 37th Conference
on Winter Simulation.
IEEE, Inc., 2005, pp. 2–15.
[3] J. Pavon, M. Arroyo, S. Hassan, and C. Sansores, “Agent-
based modelling and simulation for the analysis of social
patterns,” Pattern Recognition Letters, vol. 29, no. 8, pp.
1039–1048, 2008.
[4] G. Gilbert, Agent-based models, ser. Quantitative Applica-
tions in the Social Sciences.
Sage Publications, Inc., 2008.
[5] B. Onggo, “Parallel discrete-event simulation of population
dynamics,” in Proceedings of the 40th Conference on Winter
Simulation.
IEEE, Inc., 2008, pp. 1047–1054.
[6] B. Onggo, C. Monta˜nola-Sales, and J. Casanovas-Garcia,
“Performance analysis of parallel demographic simulation,” in
Proceedings of the 24th European Simulation and Modelling
Conference.
Hasselt, Belgium: Eurosis-ETI, 2010, pp. 142–
148.
[7] S. Robinson, “Simulation model veriﬁcation and validation:
increasing the users’ conﬁdence,” in Proceedings of the 29th
Conference on Winter Simulation.
IEEE Computer Society,
1997, pp. 53–59.
[8] P. Ormerod and B. Rosewell, “Validation and Veriﬁcation
of Agent-Based Models in the Social Sciences,” in EPIS-
TEMOLOGICAL ASPECTS OF COMPUTER SIMULATION
IN THE SOCIAL SCIENCES - SECOND INTERNATIONAL
WORKSHOP, EPOS 2006 , ser. Lecture Notes in Artiﬁcial
Intelligence, Squazzoni, F, Ed., vol. 5466, Lucchini Fdn;
European Social Simulat Assoc.
HEIDELBERGER PLATZ
3, D-14197 BERLIN, GERMANY: SPRINGER-VERLAG
BERLIN, 2009, Proceedings Paper, pp. 130–140, 2nd In-
ternational Workshop on Epistemological Perspectives on
Simulation, Brescia, ITALY, OCT 05-06, 2006.
[9] B. Edmonds, “The use of models - making MABS more
informative,” in Second International Workshop, MABS 2000.
SpringerVerlag, 2000, pp. 15–31.
[10] R. Sargent, “Veriﬁcation and validation of simulation mod-
els,” in Proceedings of the 37th Winter Simulation Confer-
ence.
IEEE, Inc., 2005, pp. 130–143.
[11] M. Pidd, Computer simulation in management science, 5th ed.
John Wiley & Sons, Inc. Chichester, England, 2004, chapter
10.
[12] P. Siebers, C. Macal, J. Garnett, D. Buxton, and M. Pidd,
“Discrete-event simulation is dead, long live agent-based
simulation!” Journal of Simulation, vol. 4, no. 3, pp. 204–
210, 2010.
[13] M. Hybinette, E. Kraemer, Y. Xiong, G. Matthews, and
J. Ahmed, “Sassy: A design for a scalable agent- based simu-
lation system using a distributed discrete event infrastructure,”
in Proceedings of the 36th Conference on Winter Simulation
(Monterey, California), 2006, pp. 926–933.
[14] K. Perumalla, “µsik: A Micro-Kernel for Parallel/Distributed
Simulation Systems,” in Proceedings of the 19th Workshop on
Principles of Advanced and Distributed Simulation.
IEEE
Computer Society Washington, DC, USA, 2005, pp. 59–68.
[15] A. Law and W. Kelton, Simulation modeling and analysis,
4th ed.
McGraw-Hill New York, 2007, chapter 5.
[16] J. Banks, J. Carson, B. Nelson, and D. Nicol, Discrete-event
simulation.
Prentice-Hall, 1999, chapter 10.
[17] B. Heath, R. Hill, and F. Ciarallo, “A survey of agent-based
modeling practices (january 1998 to july 2008),” Journal of
Artiﬁcial Societies and Social Simulation, vol. 12, no. 4, p. 9,
2009.
[18] F. Kl¨ugl, “A Validation Methodology for Agent-Based Simu-
lations,” in Proceedings of the 23rd Annual ACM Symposium
on Applied Computing, SIGSAC.
NY,USA: ACM, 2008,
Proceedings Paper, pp. 39–43, 23rd Annual ACM Symposium
on Applied Computing, Fortaleza, Brazil, Mar 16-20.
[19] D.
Duong,
“Veriﬁcation,
Validation,
and
Accreditation
(VV&A) of Social Simulations,” in Spring Simulation Inter-
operability Workshop, Orlando, April 12-16 2010, 2010.
[20] P. Windrum, G. Fagiolo, and A. Moneta, “Empirical Valida-
tion of Agent-Based Models: Alternatives and Prospects,” The
Journal of Artiﬁcial Societies and Social Simulation, vol. 10,
no. 2, 2007.
[21] S. Moss, B. Edmonds, and S. Wallis, “Validation and Ver-
iﬁcation of Computational Models with Multiple Cognitive
Agents,” Manchester Metropolitan University, Centre for Pol-
icy Modelling, Discussion Papers 97-25, 1997.
[22] O. Balci, “Validation, veriﬁcation, and testing techniques
throughout the life cycle of a simulation study,” Annals of
Operations Research, vol. 53, no. 1, pp. 121–173, 1994.
107
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

