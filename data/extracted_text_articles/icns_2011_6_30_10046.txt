One Approach to Improve Bandwidth Allocation Fairness in IP/MPLS Networks 
Using Adaptive Treatment of the Traffic Demands  
 
Tarik Čaršimamović 
Directorate for Information Technologies  
BH Telecom JSC 
Sarajevo, Bosnia and Herzegovina 
tarik.carsimamovic@bhtelecom.ba  
Enio Kaljić, Mesud Hadžialić 
Faculty of Electrical Engineering 
University of Sarajevo 
Sarajevo, Bosnia and Herzegovina 
enio.kaljic@etf.unsa.ba, mesud.hadzialic@etf.unsa.ba 
 
 
Abstract—In this paper, we propose an algorithm for 
adaptation layer in order to improve fairness in bandwidth 
allocation among different traffic classes in IP/MPLS networks 
under heavy traffic load. We propose a definition of the 
blocking frequency of traffic flows at the entry of autonomous 
network domain and proportional-priority coefficient per 
traffic class and use them as the input parameters of the 
adaptation mechanism. In order to evaluate the validity of the 
proposed algorithm, we need proper simulation tools and for 
that purposes we extend OPNET Modeler 14.5 with the 
modules for adaptation process. We also propose a 
development methodology for the design of modules for 
adaptation process within network simulators. The simulations 
results give us the proof of our hypothesis that with a proper 
adaptation layer we can improve the fairness of bandwidth 
allocation among different traffic classes under heavy network 
load and at the same time keep the required QoS conditions in 
the preferred boundaries. 
Keywords 
- 
Adaptation 
layer; 
algorithm; 
bandwidth 
allocation; blocking frequency; dynamic adaptation structure; 
development 
methodology; 
fairness; 
LSP; 
mpls; 
NGN; 
proportional-priority coefficient; RSVP.   
I. 
INTRODUCTION 
One of the key characteristics of the new generation 
network (NGN) environment is a necessity that the network 
is capable of handling an ever-increasing demand 
uncertainty, both in volume and time. In such environment, 
very often the total traffic demands exceed the available 
network capacity, and the traffic classes with higher priority 
could occupy the entire network capacity leaving no space 
for traffic flows with lower priority. Proper adaptation 
mechanisms could give acceptable results in adequate 
bandwidth allocation to the traffic variation and in fair 
treatment of all traffic classes. The fairness in the resource 
allocation among traffic flows depends on algorithm used 
during the process of adaptation to the real conditions of 
traffic load. The fairness of adaptation algorithm represents 
the ability of the model to distribute available resources in 
such manner that the probability of traffic blocking for any 
particular traffic class is the same as the overall blocking 
probability.  We can use ratio Pi of the allocated resources Gi 
to the requested resources Bi of the particular traffic flow 
demand 
100)
(
B x
G
P
i
i
i 
 as a measure of the algorithm 
fairness. Three types of fairness index are possible [15]:  
balanced fairness, max-min fairness and proportional 
fairness. According to the results shown in this reference, 
proportional type of fairness is the most suitable type in the 
case when the network resources are distributed among 
different traffic classes and when the adaptive method of 
resource allocation is used. In the same paper, fairness index 
J for the proportional type of fairness among n traffic classes 
is proposed as such: 
 





n
i
i
n
i
i
P
n
P
J
1
2
1
2)
(
 
(1) 
 
If the value of the fairness index J is higher than 0.9, or in 
an extreme situation higher than 0.8, one can say that the 
resource allocation mechanism is fair [3]. Otherwise, 
variations in resource distribution are significant and 
blocking percentage of the lower-priority traffic classes is 
outside of the acceptable margins.  
NGN is a packet-oriented network supporting Quality of 
Service (QoS) based on different type of transport 
technologies. The most preferred protocol in NGN is IP. 
There are different approaches for the QoS provisioning in 
IP 
based 
networks: 
Integrated 
Services 
(IntServ), 
Differentiated 
Services 
(DiffServ), 
combined 
IntServ/DiffServ, Multiprotocol Label Switching (MPLS), 
etc. MPLS is a popular transport technology that uses labels 
which are imbedded between layer two and layer three 
headers in order to forward packets. Packets are forwarded 
by switching packets on the basis of labels and not by 
routing packet based on IP header. One of the major 
advantages of MPLS networks is the inherent support to 
traffic engineering. We can also use a combination of MPLS 
and DiffServ and treat packets of the same Forward 
Equivalence Class (FEC) in accordance with the DiffServ 
procedure. Using MPLS Traffic Engineering (MPLS-TE) 
based on the network state detection we can balance traffic 
load among different Label Switched Paths (LSPs), but we 
cannot dynamically change allocated bandwidth to the LSPs.  
124
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

In order to adapt to dynamics of traffic demands and to 
allocate sufficient bandwidth to the LSPs, as well as to 
improve fairness in the resources allocation among traffic 
flows, we introduce adaptation layer, working in two 
regimes:  
 
fuzzy controller regime, when the overall traffic 
demand is elastic and in average less than network 
capacity. In this case the adaptation process is 
realized by the means of  fuzzy logic [19], 
 
proportional-priority regime, when the overall traffic 
demand is higher than the network capacity. In this 
case the adaptation process allocates bandwidth 
among traffic classes in such a manner that minimal 
bandwidth is guaranteed to each traffic class and the 
rest of network capacity is shared on the proportional 
basis among traffic classes, (equation 3). 
The adaptation layer supports dynamic exchange 
between fuzzy controller regime and proportional-priority 
regime depending on the ratio between traffic load and the 
network capacity C.  If the ratio is  
1
1



C
B
i
i
n
 we 
switch the adaptation layer algorithm to proportional-priority 
regime, and when it decreases below 1, we switch adaptation 
algorithm to the fuzzy controller again. 
In order to prove validity of our adaptation layer concept 
and sustainability of the fairness improvement concept of 
bandwidth allocation among traffic flows, we need proper 
simulation tools. Because there are no network simulators 
supporting the proposed adaptation layer algorithm and 
dynamics of this algorithm, we established a methodology 
for development of adaptation layer within network 
simulators and we also developed the adaptation layer code 
in C++ within OPNET core structure of node model (Label 
Edge Router - LER) and within core structure of process 
model of the Resource Reservation Protocol (RSVP-TE) 
used in the OPNET modeler. 
II. 
MECHANISMS AND ARCHITECTURES FOR 
ADAPTIVE TREATMENT OF TRAFFIC DEMANDS  
The goals of adaptive treatment of traffic demand in 
NGN are to: 
 
fulfill QoS requests of any traffic class, 
 
eliminate drops of any traffic flows, 
 
decrease congestion within network, 
 
Rise efficiency of network capacity.  
In order to successfully achieve those goals, appropriate 
mechanisms for the bandwidth allocation, for the routing 
optimization and for reaction to the failure conditions are 
needed.  During the research project COST 257 [4], several 
types of reactive and preventive approaches for network 
control are investigated: 
 
the flow control scheme  (fluid flow model, discrete-
time Markov model or control theory model) for 
reactive approach, 
 
the admission control method (Measurement Based 
Admission Control - MBAC, Traffic Description 
Based Admission Control - TDBAC, Experience 
Based Admission Control - EBAC or End-point 
Admission Control - EAC) for preventive approach, 
 
the active queue management or fuzzy congestion 
control as a new control trends. 
Preventive controls usually try to limit the number of 
connections or to enforce connection to use only a limited 
amount of resources.  In IP networks, the specifications of 
protocols such as RSVP or MPLS make admission control 
possible.  MPLS traffic engineering is aimed at optimizing 
the network path to ensure efficient allocation of network 
resources, thereby avoiding the occurrence of congestion on 
the links. [1] [2]. During the research project Traffic 
Engineering for QoS in Internet at Large Scale (Tequila) [6], 
it was shown that a combination of MPLS and DiffServ 
could be acceptable solution for load balancing in IP 
networks when multi-path routing is used. Also, during the 
research project COST 239 [5] it was shown that, in case of 
large traffic load, the highest efficiency of the resource usage 
is in the networks  which use border-to-border budget based 
network admission control (BBB NAC) as a budget-oriented 
method for allocation of virtual bandwidth. BBB NAC could 
be realized using RSVP extension for LSP tunnels 
establishing explicit LSPs with guaranteed bandwidth.  
Several research projects investigate possible architecture 
of dynamic provisioning of QoS to the particular traffic flow. 
The basic result of KING (Key Components for Internet of 
the Next Generation) project [18] includes development of 
adaptive architecture in which, by continuous monitoring of 
network conditions, the network parameters could be adapted 
to traffic demand. 
We combined the admission control method (MBAC – 
BBB NAC) with policy based control of adaptation layer to 
dynamically adapt budget of the NAC in order to decrease 
blocking frequency and to raise fairness of bandwidth 
allocation among traffic classes.   
III. 
DESIGN OF MODEL FOR ADAPTATION 
PROCESS 
A. Looking for a Simulation Tool for Validation of 
Designed Model 
The adaptation processes are capable of a continuous 
monitoring of the network parameters and performing their 
adaptation in accordance to the ever-changing traffic 
demands. Possible solution for such structure of adaptation 
process could be an active resource allocation based on the 
dynamic monitoring of their availability and of their 
sustainability to effectively transfer traffic.  
The efficiency of such structures should be evaluated and 
an adequate simulation model which can adequately 
represent mechanisms and architecture for adaptive treatment 
of traffic demand is needed. Therefore, in this chapter we 
investigated possibilities of existing network simulators to 
support structure of adaptation algorithm we used in this 
paper. The analysis is based on a review of scientific studies 
in this field and documentation available for the network 
simulators. 
In [8], a scheme for an adaptive bandwidth reservation in 
wireless multimedia networks was examined. For the 
125
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

purpose of validation of the proposed solution, necessary 
module for network simulator OPNET (Modeler 8.0) was 
developed. However, examination of the latest available 
version of the network simulator OPNET (Modeler 14.5) 
showed that these modules are not supported by the 
simulator manufacturers and as such is not included in the set 
of available modules. In [9], a solution for the adaptive 
bandwidth allocation in MPLS networks using a control with 
one-way feedback was given. The proposed solution was 
tested in a network simulator ns-2.27. But this solution is 
dedicated for particular problem and only in ns 2-27. 
Because of that it is inflexible for usage in general. 
Elwalid et al. [10] discussed adaptive traffic engineering 
in MPLS networks and their effort to develop their own 
simulator is the significant sign that there is a poor support 
for the dynamic adaptation structures in the available 
network simulators.  
Reviewing the documentation about the available 
network simulators we determined that none of those 
network simulators have built-in support for the dynamic 
adaptation structures. 
As the available simulators have no appropriate support 
for dynamic adaptation structures, and the same is necessary 
to test proposed structures, one of the objectives of this paper 
is to establish the methodological approach to development 
of adaptation layer in the network simulator. This 
methodology will be used for development of the adaptive 
layer modules within a chosen network simulator. 
B. One Possible Solution of Adaptation Layer 
 
In [11][12][13][14], an active queue management as 
network control mechanism is proposed. This approach 
requires execution of adaptation layer processes at every 
node in the network, so making it unsuitable for MPLS based 
networks. 
In this paper we use a different approach for solution of 
the adaptation layer algorithm in order to increase the 
resource usage efficiency, to provide proper QoS to any 
traffic class and to improve fairness in bandwidth allocation 
among traffic flows within MPLS based networks. The 
following will give a brief overview of the solution. A full 
description, that includes a detailed explanation of the 
algorithm, is given in [16]. In this paper, MPLS is used as a 
transport technology on the network layer. Network 
capabilities to provide sufficient resources at a given time for 
a given traffic class are controlled at ingress node. Instead of 
assigning bandwidth to a particular link, provisioning of QoS 
requirements is done by assigning a virtual budget at ingress 
node for all relations between ingress and egress nodes using 
BBB NAC. BBB NAC in MPLS for LSP with a guaranteed 
bandwidth can be established by RSVP extension for LSP 
tunnels and then managing the right to network access can be 
made for each stream. Adaptation layer collects statistical 
data from the network layer and uses that information to 
generate a global view of the current state in the network. 
Detection of the current state in the proposed architecture is 
based on the utilization of the budgets allocated to the NACs, 
the frequency of blocked reservation (e.g. blocking 
frequency) and on the utilization of links’ capacity. 
Adaptation process includes adjustment of the amount of 
available bandwidth for each traffic class separately and 
optimization of internal routing. 
Adaptation layer follows its own internal strategy and 
optimization algorithms in order to adapt network 
performance to the traffic load variations. Adaptation layer 
has two regimes:  
 
Fuzzy controller regime, which is realized by means 
of fuzzy logic, based on the blocking frequency of 
traffic flows. The adaptation process is executed in 
discrete cycles. Blocking frequency (FB) measured 
in particular cycle and difference in blocking 
frequency ((ΔFB) between two cycles are the input 
variables of triangle fuzzy membership function. 
This membership function and fuzzy rules, given in 
[16], are used for determination of the value of 
proportional coefficient (nij) to the bandwidth 
increment ΔBi of i-th traffic class within j-th cycle. 
The bandwidth increment ΔBi   is given in advance 
for every traffic class. To adjust amount of allocated 
bandwidth Gij of the i-th traffic class in j-th cycle to 
the actual traffic demand, adaptation algorithm 
changes allocated bandwidth of  i-th traffic class in j-
1st cycle with the value of  nij ΔBi in accordance with 
the following formula: 
 
i
ij
ij
ij
B
n
G
G



1
 
 (2) 
 
Proportional-priority regime, which is based on 
minimum bandwidth allocated to the i-th traffic class 
(minpi) and proportional-priority coefficient  δij of 
the i-th traffic class in j-th cycle, performs its 
functions in accordance with the following formula: 
 
 
(3) 
min )
(
min
1



n
i
pi
ij
pi
ij
C
G

The criterion for switching between the two regimes is 
fulfilled when the sum of requested capacity of traffic 
classes 
Bi 
 
is 
bigger 
than 
network 
capacity 
(C)
C .  
B
n
i
i 

1
In the previous studies [17], behavior of the overall 
system, 
which 
performs 
its 
control 
functions 
automatically, autonomously and in an adaptive manner, 
is usually described by means of the following 
parameters: 
 
blocking frequency of traffic flows (FB), 
 
fairness of the allocation of resources to the traffic 
flows (P, J), 
 
utilization of network capacity (γ). 
Blocking frequency of traffic flows (FB), we used as a 
key parameter for adaptation process, is defined as the total 
number of the rejected resource reservation (bmiTN) in all n 
classes of traffic within the determined time interval k. 
Measurement of rejected traffic flow is performed at the 
NAC any time new traffic flow (c(fnew
v,w ) added to the 
existing traffic flows (c(f)) requests capacity which is higher 
than the available capacity (C(BBB)). of the given resources 
126
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

between nodes v and w. While the frequency of blocking can 
be defined as the maximum blocking probability or a relative 
ratio of blocked and offered traffic, this definition of 
blocking frequency, which treats all traffic classes 
simultaneously and only at the input node, is simple to 
measure and easy to calculate: 
 
 
 (4) 






n
i
k
T
miT
i
i
N
N
b
FB
FB
FB
1
1
,


,
(
)
( )
(
N
new
miT
v w
b
countif
c f
c f
C BBB








)  
Fairness of resource allocation between traffic classes 
depends on the resource (bandwidth) allocation algorithm 
used during the process of adaptation to the actual traffic 
demands. Consideration of fairness makes sense only if the 
total amounts of requested resources exceed the capacity of 
available network resources. Otherwise, the problem boils 
down to utilization of network resources and to load 
balancing in order to assess the cost of depreciation and to 
even utilization of network resources. Fairness of the 
adaptive algorithm is the ability of the model to distribute the 
available resources in such a way that any traffic class does 
not give preference outside of the defined priority 
mechanism. The main goal of equitable allocation of 
resources assessment includes quantification of differences 
in distribution of resources between traffic classes by 
measuring variations in the ratio of allocated resources. We 
used equation 1 to evaluate fairness of proposed adaptation 
algorithm. We also compare the same fairness index 
achieved in the network architectures operating in adaptation 
mode and in the network architecture operating in non-
adaptation mode to evaluate improvement in fairness.  
Simulation model of network architecture we used 
consists of the adaptation and network layers. The adaptation 
layer performs a calculation of the new bandwidth budget for 
network admission controllers (NAC) and a calculation of 
new metrics on the links in order to adapt network 
performance to the actual traffic conditions. Measurements 
of blocking frequency (FB), accepted traffic (cai), rejected 
traffic (cri) and LSP load are performed in the regular time 
intervals at the ingress node in order to provide input data for 
operation 
of 
adaptation 
layer. 
The 
network 
layer 
autonomously executes forwarding functions of the packets 
and ensures QoS requirements using the capabilities of 
existing technologies and protocols. This type of network 
architecture represents the optimal set of available 
technologies with flexible topological landscape. Admission 
control functions, based on timely adjusted allocated 
bandwidth and load balancing functions by means of MPLS 
traffic engineering capabilities, are executed only at the 
ingress node of the autonomous network domain.  
IV. 
DEVELOPMENT METHODOLOGY OF AN 
ADAPTATION LAYER WITHIN NETWORK 
SIMULATOR 
In order to develop an adaptation layer which is 
independent of the adaptation mechanism of the used 
technology or of the network simulator, it is necessary to 
define a development methodology. We established a 
development methodology of an adaptation layer within 
network simulator which has eight steps shown in Fig. 1. 
Each of those steps will be explained in this chapter. 
 
 
Figure 1.  Development methodology of adaptation layer 
A. Design of the Adaptation Layer 
In the chapter III we explained the basic functions and 
principles of our adaptation layer. The detailed design of 
adaptation layer with adaptation algorithm, input and output 
variables, decision criteria and pseudo code of the adaptation 
layer components are given in [16]. 
B. Adaptation Layer Processes Identification 
For the purpose of execution of adaptation layer 
functions we identify next three processes: 
 
measurement of input variables, 
 
adaptation, and 
 
output parameters control. 
The first process is deterministic and it is performed in 
regular time intervals (TN). The task of this process is 
measurement of flow intensity of each traffic class and a 
measurement of blocking frequency at the entry into the 
MPLS domain.  
The process of adaptation is also deterministic, and it is 
performed in regular time intervals determined by the 
duration of discrete cycle of adaptation. The task of this 
process is to calculate a new budget based on input variables. 
The last process is a stochastic process and its execution 
is caused by the decision results of adaptation process. The 
task of this process is to allocate a new budget to the network 
admission controller. 
C. Selection of Process Model in Network Simulator 
A number of network simulators are available today. 
Some of them, used in scientific researches, are ns-2/3, 
OPNET, Omnet + +, GloMoSim, Nets, etc. Selection of 
adequate network simulator should be based on the 
127
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

characteristics of the simulators corresponding to the needs 
of adaptation layer developed as the target platform. We 
choose OPNET Modeler 14.5 as a proper network simulator 
considering next properties of the chosen simulator: 
 
simulation is based on the discrete network states 
(FSM-based approach), 
 
it supports traffic profile we intend to use during a 
simulation, 
 
it supports the  network technologies and protocols 
we selected for a simulation model, 
 
it is suitable for prototype research such as this 
simulation model, 
 
it is easy to configure, 
 
it has relatively good documentation and support, 
 
it can be extended for adaptation layer (supports C+ 
+). 
Since the proposed adaptive layer is a prototype of 
generic adaptation layer and as such does not exist in the 
selected network simulator, the whole adaptation layer 
should be developed based on the pseudo code given in [16], 
taking into account the constraints of simulator architecture. 
The architecture of the network simulator OPNET Modeler 
14.5, extended with necessary modules for adaptation layer, 
is presented in Fig. 2 below. 
 
 
Figure 2.  Hierarchical architecture of OPNET simulator  
Network 
simulator 
OPNET 
Modeler 
14.5 
is 
hierarchically organized. A network model is located at the 
highest level of hierarchy. The network model is composed 
of nodes and links connecting the nodes. Each node is 
defined by the node model (workstation, switch, router, 
server, etc.). Node model consists of processors that are 
described in process models. Process models are described in 
FSM's (Finite State Machine) and transfer functions written 
in C++ programming language. Transfer functions rely on 
the core functions of the simulator. The core simulator 
consists of pre-compiled libraries, whose source code is not 
available. The kernel is based on discrete event simulation. 
Node at which network admission control functions are 
performed is the ingress LER of the MPLS domain. 
Bandwidth control at the entry of the network is ensured by 
establishing an explicit path with guaranteed bandwidth. The 
protocol that is responsible for setting up LSPs is RSVP-TE. 
Therefore, the logical choice of process model within the 
simulator is RSVP process model. We used the network 
model which consists of five traffic sources nodes, the 
ingress edge router, four core MPLS routers, the egress edge 
router and five traffic destination nodes. 
D. Adaptation Layer Processes Implementation 
Ingress LER node model (Cisco 7600) consists of 
processors and queues associated with packet or statistic 
wires. We introduce the new statistical flows between the 
MAC (Media Access Control) queues and RSVP process 
model in order to take periodical measurements of the input 
variables, such as the mean intensity of flows, number of the 
rejected reservations, etc. 
Process models in the OPNET network simulator are 
based on FSM. Passing from one state to another is initiated 
by different types of interruptions (packet arrival, arrival of 
new statistics value, user-defined stop, etc.). 
During the transition stage different functions could be 
called. Besides the FSMs, the main components of a process 
model are the state variables, temporary variables, function 
block with headers, block functions, block for debugging and 
scheduling process block. Each process model also has 
attributes, interfaces, local and global statistics. Attributes 
and statistics can be promoted to a higher level, i.e. at the 
level of the node model. 
E. Initial Configuration of Adaptation Layer Parameters 
The initial parameters of adaptation layer, such as initial 
bandwidth per each traffic class (Bi), minimal bandwidth per 
traffic class (minpi,), proportional-priority coefficient (δi), 
bandwidth increment (ΔBi), are defined in [16]. Those initial 
parameters are subject to changes during the exploitation 
period (if the traffic environment changes dramatically) or 
during the simulation process (to be able to perform different 
simulation scenarios). For this purpose we need a proper 
structure within a simulator which offers changeability of the 
initial configuration settings and changeable setting of its 
parameters. The development process of that structure has 
the following steps: 
 
definition of the adaptation layer attributes within the 
set of  the existing process model attributes, 
 
promotion of the attributes from a process model 
level to the level of the node model, 
 
coding the input function in C++ to retrieve 
attributes when the simulation starts. 
F. Monitoring of Adaptation Layer Parameters 
In Sections I and III, we defined parameters which should 
be monitored such as blocking frequency (FB),), fairness 
index (J), difference of blocking frequency (ΔFB) used as 
input variable for fuzzy membership function, etc. Those 
parameters should be measurable and monitored in order to 
qualify adaptation process execution and to use them as the 
128
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

input parameters to the adaptation layer. For this purpose we 
need a structure within simulator which offers a possibility to 
measure and monitor the values of the adaptation layer 
parameters. The development process of that structure has 
the following steps: 
 
definition of the local statistics in the process model, 
 
promotion of statistics on the level of the node 
model, 
 
coding of the function in C++ to record statistics. 
G. Testing, Analysis and Result Validation 
Those two steps of the development methodology are 
explained in Section V. 
V. 
THE SIMULATION RESULTS 
The simulation model created for testing purposes of 
adaptation layer is shown in Fig. 3 below. All nodes in the 
access part of the network are connected using 10 Gbps 
links, while the core routers are connected using 1 Gbps 
links. OSPF protocol is used as an IGP, and RSVP-TE 
protocol is used for establishment of LSPs.  
 
 
Figure 3.  Simulation model for adaptation layer testing 
The detailed dynamics of traffic demand of traffic 
classes, presented in Table 1 and used during a simulation 
process, are given in the thesis [16]. The traffic generators 
are configured so that the average network load is 80%. The 
network capacity is 2 Gbps. The peak load of the network is 
about 2.5 Gbps. The initial values for those traffic classes, in 
the case that average network load is 80% of the network 
capacity, are given  in Table 1 below.  
TABLE I.  
INITIAL VALUES OF TRAFFIC SOURCES 
Traffic 
class 
Initial 
BW 
kbps 
Minimal 
BW 
kbps 
Maxima
l BW 
kbps 
BW 
incr. 
ΔBi 
Proportion
al-priority 
coefficient   
δi 
EF 
8,270 
5,990 
14,000 
125 

ij
ij
B
B
2.1
 
AF1 
465,110 
319,760 
700,000 
10,000 

ij
ij
B
B
 
AF2 
586,390 
403,140 
800,000 
22,000 

ij
ij
B
B
9.0
 
AF3 
5,690 
3,850 
14,000 
200 

ij
ij
B
B
9.0
 
BE 
431,310 
286,528 
700,000 
6,000 

ij
ij
B
B
8.0
 
During the simulation process we observe a distribution 
of requested bandwidth per each traffic class Bi and 
distribution of allocated bandwidth per each traffic class Gi 
in the same time window. We perform those observations in 
the adaptation mode of network architecture and in non-
adaptation mode of the same network architecture in order to 
validate the accurate of the adaptation layer processes and to 
evaluate improvement in resource utilization as well as in 
QoS satisfaction of the requests of any traffic class. 
We also observe values and distribution of fairness index 
(J) in both modes of network operation and values and 
distribution of ratio of the allocated resources to the 
requested bandwidth per each traffic class, in order to 
evaluate improvement of fairness in adaptation mode of 
network operation compared to the non-adaptation mode of 
operation. To justify the results of simulation process we 
repeated the simulation and the same measurements and 
observations in the case that the average network load is 
100% of the network capacity. During the simulation process 
we take measures every 10 seconds and average those 
measurement values in time window of one minute, using 
those average values to calculate parameters which are 
needed for adaptation process of our adaptation algorithm.  
By means of Figures 4 to 6 below, as a part of simulation 
results, we will show the outcomes of proposed adaptation 
algorithm, as well as of the extension of the OPNET 
structure. The whole scope of simulation results, from which 
we proof our entire concept, can be seen in [16].  
 
 
Figure 4.  Requested and allocated bandwidth for EF traffic class 
From the Fig. 4 we can see that allocated bandwidth G 
for EF traffic class pretty well follows the required 
bandwidth B. This confirms that the adaptation layer 
functions properly and accurately. We can see the same 
results for other traffic classes and for average load of 100%.  
Fig. 5 shows us that introduction of adaptation layer 
improves the fairness of resource allocation in the network. 
During the non-adaptive mode, the ratio (P) of the allocated 
resources to the requested resources for EF class was 
unstable and goes up to 200%, while during the adaptive 
mode of network operation this percentage was stabilized 
129
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

and dropped to 100%, as is the preferred value for all traffic 
classes. 
 
 
Figure 5.  Ratio of the allocated resources for the EF traffic class 
 
 
Figure 6.  Fairness index 
Fairness index (Fig. 6) is, in the adaptation mode of 
network operation, maintained above 0.96 with brief outages 
of up to 0.8, while the same index, in non-adaptation mode, 
is very unstable and drops up to 0.5. These results give us the 
proof of our hypothesis that with a proper adaptation layer 
we can improve the fairness of bandwidth allocation among 
different traffic classes under heavy network load and at the 
same time keep the required QoS conditions in the preferred 
boundaries.  We can also conclude that the proposed 
adaptation algorithm behaves properly. 
VI. 
CONCLUSION 
The simulation results have shown that the proposed 
adaptation algorithm can significantly improve the fairness 
of bandwidth allocation among different traffic classes under 
a heavy traffic load in IP/MPLS networks, while keeping the 
required QoS conditions to any traffic class within the 
boundaries as preferred. The bandwidth allocated to any 
traffic class follows the required one, and in the case of a 
sufficient bandwidth, the QoS requests are guaranteed. We 
see future work in researching the impact of different fuzzy 
algorithms and membership functions in the adaptation layer. 
REFERENCES 
[1] 
A. Farrel, "Network Quality of Service: Know It All. Burlington," 
Morgan Kaufmann Publishers, USA, 2009. 
[2] 
A. Stavdas, "Core and Metro Networks," John Wiley & Sons Ltd., 
2010. 
[3] 
C.A. Kamienski, "The Case of Inter-Domain Dynamic QoS based 
Service Negotiation in the Internet," Computer Communications, vol. 
27, pp. 622-637, 2007. 
[4] 
COST-257, Final Report, "Impact of New Services on the 
Architecture and Performance of Broadband Networks", 2000. 
[5] 
C. Hoodgendoorn, "KING Research Project Overview," 2005. 
[6] 
D. Godens, "Functional Architecture Definition and Top Level 
Design," Tequila Project, 2000. 
[7] 
G. Hasslinger and J. Mende, "Measurement and Characteristics of 
Aggregated Traffic in Broadband Access Networks," in Proceedings 
of ITC 20, pp. 998-1010, Ottawa, 2007. 
[8] 
X. Chen and Y. Fang, "An adaptive bandwidth reservation scheme in 
multimedia wireless networks," in IEEE Globecom, San Francisco, 
pp. 2830-2834, 2003. 
[9] 
T. Yokoyama, K. Iida, H. Koga, and S. Yamaguchi, "Proposal for 
Adaptive Bandwidth Allocation Using One-Way Feedback Control 
for MPLS Networks," IEICE TRANS. COMMUN., vol. E90-B, no. 
12, pp. 3530-3540, Dec. 2007. 
[10] A. Elwalid, C. Jin, S. Low, and I. Widjaja, "MATE: MPLS Adaptive 
Traffic Engineering," in IEEE INFOCOM, Anchorage, pp. 1300-
1309, 2001. 
[11] W.-S. Lai, C.-H. Lin, J.-C. Liu, and H.-C. Huang, "Using Adaptive 
Bandwidth Allocation Approach to Defend DDoS Attacks," 
International Journal of Software Engineering and Its Applications, 
vol. 2, no. 4, pp. 61-72, Oct. 2008. 
[12] A. Kamra, H. Saran, S. Sen, and R. Shorey, "Fair adaptive bandwidth 
allocation: a rate control based active queue management discipline," 
Computer Networks, no. 44, pp. 135-152, 2004. 
[13] Y. Zheng, M. Lu, and Z. Feng, "Performance Evaluation of Adaptive 
AQM Algorithms in a Variable Bandwidth Network," IEICE 
TRANS. COMMUN., vol. E86-B, no. 6, pp. 2060-2067, 2003. 
[14] R. Wang, M. Valla, M. Y. Sanadidi, and M. Gerla, "Using Adaptive 
Rate Estimation to Provide Enhanced and Robust Transport over 
Heterogeneous Networks," in Proceedings of the 10th IEEE 
International Conference on Network Protocols, Washington, DC, pp. 
206-215, 2002. 
[15] R. Jain, "The Art of Computer System performance Analysis," Wiley, 
New York, 1991. 
[16] T. Čaršimamović, "Selection of parameters for the adaptive treatment 
of traffic in next generation networks (NGN)," PhD Thesis, 
University of Sarajevo, Sarajevo, 2010. 
[17] T. Engel, E. Nikolouzou, A. Ricicato, "Analysis of Adaptive 
Resource Distribution Algorithms in the Framework of Dynamic 
DiffServ IP Network," Crete, 2001.  
[18] U. Walter, M. Zitterbart, "Architecture of a Network Control Server 
for Autonomous and Effective Operation of Next Generation 
Network," Institut fur Telematik, Karlsruhe, 2006. 
[19] Runtong Zhang, Yannis A. Phillis, Vassilis S. Kouikoglou, "Fuzzy 
Control of Queuing Systems," Springer, 2005. 
 
130
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

