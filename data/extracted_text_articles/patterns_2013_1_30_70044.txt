Project Planning Add-In based on Knowledge Reuse with Product Patterns
Fuensanta Medina-Dominguez, Maria-Isabel Sanchez-Segura, Arturo Mora-Soto, Antonio de Amescua Seco
Computer Science Department
Carlos III University
Leganes, Madrid, Spain
{fmedina, misanche, jmora, amescua}@inf.uc3m.es
Abstract—This work presents an approach that incorporates
knowledge reuse to the planning process. Project managers can
reuse knowledge using product patterns to learn project
management techniques. In addition, they can use the add-in
support tool proposed in this work to link information to the
Gantt chart; therefore, people assigned to each activity in the
Gantt chart can reuse existing product patterns that help
develop the assigned activity. The authors have corroborated
that the proposed solution improves the satisfaction of the
people involved in the development of a software project that
has been planned using the proposed solution.
Keywords-Knowledge Management; Project Management;
Software Aplication Component; Product Patterns.
I.
INTRODUCTION
Project planning has been recognized by the European
Commission as essential for a project's success and, as such,
is often considered the most important phase in project
management [1]. An immense benefit to planning is that, in
case a problem arises during the project development, it
functions as an alarm mechanism. Also, project planning is a
widely explained process in standards like PMBOK [2] and
is supported by a wide variety of software tools (analyzed
later, in Section II). Nevertheless, there is an aspect of
project planning performance that has not been addressed
properly, namely, how to incorporate software reuse while
project planning is being developed?
Software reuse is the area that studies how to use a
thousand times the same piece of software always in a
different way. Software reuse is being applied for products
developed in different phases of the software development
lifecycle by the use of analysis patterns [3], design patterns
[4], requirements patterns [5], etc., but in project planning
phase, software reuse has not already been incorporated.
It would be very useful to plan the activities to be
performed in a software project and, at the same time, plan
the potential pieces of software that could be reused on each
activity, or even the potential knowledge that could be reused
to develop an assigned activity. So, the authors believe that
there are at least two scenarios where reuse can be very
interesting while planning. One scenario that can occur is
when a project manager faces the challenge to develop a
project planning; he or she could reuse the knowledge about
project planning from experts in the field. Another scenario
could be when the project manager is planning the project
activities and would like to provide more information
regarding the activities the human resources are assigned to.
This information can include examples of this activity
developed in other projects, lessons learned while developing
this activity previously, or references where the person
assigned to the activity can learn more about how to develop
the activity assigned. The project manager has to always bear
in mind the context, the problem, and the forces of the
project under development.
Existing project planning tools do not cover these two
potential scenarios. This is why the authors propose the use
of reuse artifacts, called Product Patterns [6] and the use of a
software module that has been developed as a Microsoft
Project Add-in, which allows the management of product
patterns while developing project planning in the previously
described scenarios.
The reminder of this paper is structured as follows:
Section II describes an analysis of the most remarkable
software tools for project management. Section III presents
the solution, an add-in support tool based on knowledge
reuse with product patterns; this section describes the
product pattern, product patterns in project planning and the
add-in support tool architecture. Section IV presents the
description of the experiment and analysis of the results.
Finally, in Section V, the authors present their conclusions
and future works.
II.
ANALYSIS OF THE MOST REMARKABLE SOFTWARE
TOOLS FOR PROJECT MANAGEMENT
When a project manager wants to plan a project, there is
no doubt that the most common technique is the Gantt Chart
[7], which is typically drawn using a software application.
Among the wide variety of project management software
tools, according to International Data Corporation (IDC), one
of the most notable global providers of market intelligence
and analysis [8] is Microsoft Project (MS Project), as can be
seen below in Figure 1. MS Project is the most used project
manager software tool worldwide [9] and by this fact alone,
MS Project could be selected as the best tool to use since it
seems that it is the most popular and trustworthy application.
However, before choosing a software to implement the
authors’ knowledge of reuse solution for project planning, an
analysis of the most important tools available in the market
will be presented in this section, emphasizing whether or not
these tools support knowledge reuse to back up project tasks
execution.
Nowadays, the most remarkable project management
tools available are cloud-based applications or services [10].
In addition, there are software desktop applications that
could offer a sort of web synchronization service or feature
[9], [11] that include not only project management features,
but also, project portfolio features as well as collaboration
13
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

tools. Since the authors’ proposal is focused only to back up
a project manager in project planning, the authors only
analyzed those tools whose main purpose is project planning.
They also analyzed those that are mentioned as relevant by
IDC in [9] and by Gartner in its MarketScope for Project and
Portfolio Management Software Applications [11] and its
Magic Quadrant for Cloud-Based Project and Portfolio
Management Services [10]. The tools selected for this
analysis were the following:

Microsoft Project Professional 2010 [12]. This is the
most
popular
project
management
software,
it
is
developed and sold by Microsoft [13] and is designed to
assist a project manager in developing a plan, assigning
resources to tasks, tracking progress, managing the
budget, and analyzing workloads.

Augeo6 [14]. This is a software solution that organizes
and automates all activities related to the life cycle of
projects, from the initial evaluation of the project
proposal until the completion of the project.

Genius Project [15]. This is a web-based tool that
delivers a highly flexible and configurable portfolio and
project management software allowing for tailored
feature sets for a wide array of project teams and project
types.

Planisware 5 [16]. This is a web-based application that
supports
the
end-to-end
governance
of
company
portfolios; it offers a complete project management
capability with features such as project and resource
scheduling,
portfolio
reporting,
simulation,
comprehensive
project
reporting/cost
control,
and
collaboration tools.

Planview Enterprise [17]. Among its capabilities, this
tool delivers visibility into and control of project
portfolios, allowing to efficiently prioritize work and
make better decisions around request management,
planning, and resource capacity.

Project.net [18]. This is a web-based tool aimed to
maximize the performance of any organization tracking
a single project or a portfolio of projects.

Sciforma
5
[19].
This
is
project
and
portfolio
management software aimed to help project managers to
administer all aspects of project, resource, risk, and
change management.

AtTask [20]. This is a web-based tool that features task,
management, issue tracking, document management,
time tracking and portfolio management.
Table I
shows
the
criteria
defined
to
assess
the
knowledge reuse capabilities. Each criteria is defined by: the
criteria, the description and the phase of the knowledge
lifecycle supported. To analyze if a tool fulfills a criterion or
not, every tool was used to plan a simple software project,
looking if the capabilities depicted in the criteria were
present or not. The presence of a criterion was rated with the
following scale: (0) meant that the criterion was not present;
(1) meant that the criterion was partially present; (2) meant
that the criterion was completely present; the objective is that
the ideal tool could reach a rating of 10, meaning that it has
all the criteria completely present. The final results of the
analysis are shown in Table II, as can be seen MS Project,
Project.net, and AtTask obtained the best ratings. However it
is important to highlight that none of the tools analyzed
offered any formal knowledge representation mechanism,
such as the Product Pattern defined by the authors; all of
them
only
offered
basic
knowledge
representation
mechanisms such as notes, document attachments, blogs, or
wiki. This is an important contribution; nevertheless it is not
formal enough to accomplish the goals proposed by the
authors, especially to foster an accurate knowledge reuse in
project planning.
Figure 1 Marker share of project management tools according to IDC
This fact encourages authors to try to improve one of the
existing project management software tools, and implement
a mechanism to support Product Patterns to help project
managers improve their project planning activities.
After this analysis, and considering the results offered by
Gartner [10], [11] and IDC [9], the authors decided to choose
MS Project as the tool to be extended for incorporating a
new functionality to link Product Patterns and project plan
tasks. This decision was made due to Ms Project’s wide
adoption in the market, a key factor to spreading the use of
the solution presented by the authors in this paper, as well as
to the large amount of existing documentation to develop
new functionalities for this program using the programming
languages provided by Microsoft.
14
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

TABLE I.
CRITERIA DEFINED TO ASSES THE KNOWLEDGE REUSE CAPABILITIES OF PROJECT MANAGEMENT SOFTWARE TOOLS
Criteria
Description
Phase of the
Knowledge Lifecycle
supported
C1: Basic knowledge assets
representation mechanism.
This criterion is intended to identify if the tool offers an integrated mechanism to
represent basic knowledge assets related to project plan tasks. This kind of asset is
any piece of knowledge (an idea, a comment, best practices, or thoughts) that is
explicitly represented in natural language, which in turn can be stored in some
way that could be shared or used by any person (e.g. document attaching,
document sharing, notes, embedded documentation, etc.)
Create
C2: Formal knowledge
assets representation
mechanism.
This criterion is intended to identify if the tool offers and integrates mechanism to
represent formal knowledge assets related with project plan tasks. This kind of
asset is a piece of knowledge that is represented using a formal or standard
notation, such as a metamodel, a pattern language, or a graphical notation (like
UML or BPMN).
Create, Codify
C3: Knowledge-tasks
linking protocol.
This criterion is intended to identify if the tool offers rules to link the tasks of a
project plan with existing knowledge assets that could be helpful to perform them.
Knowledge assets could be basic or formal as described above in criteria C1 and
C2.
Embed, Diffuse
C4: Knowledge
improvement mechanism.
If the tool offers some of the characteristics depicted in criteria C1, C2 and C3,
this criterion is intended to identify if the tool offers a mechanism to improve
existing knowledge assets that were linked to project plan tasks, for example, by
adding new information that could complement the existing one.
Create, Codify,
Embed, Diffuse
C5: Tool extension
capabilities.
This is not a criterion related to knowledge reuse, but due to the authors’ desire to
extend the capabilities of the software tool, this criterion is intended to identify if
the tool’s features can be extended using a programing language.
This criterion does
not apply.
TABLE II.
RESULTS OF THE PROJECT MANAGEMENT SOFTWARE
TOOLS ANALYSIS
Criteria
MS Project
Professional 2010
Augeo6
Genius Project
Planisware 5
Planview
Enterprise
Project.net
Sciforma 5
AtTask
C1
2
2
2
1
2
2
2
2
C2
0
0
0
0
0
0
0
0
C3
1
1
1
1
1
1
1
1
C4
1
1
1
1
1
1
1
2
C5
2
0
0
0
1
2
0
1
Rating
6
4
4
3
5
6
4
6
III.
SOLUTION
This section describes the solution developed to reuse
knowledge
with
product patterns
in
project
planning,
therefore describing the product pattern concept, product
patterns in project planning and the add-in support tool
architecture.
A.
Product Pattern
Product Patterns are reusable artifacts that store the
experts’ knowledge and best practices to develop a product
[6]. Although product patterns can be used in different fields,
in this paper they have been applied in the software
engineering field, where the authors are experts.
For the authors, a software product is any product
obtained along the activities of the software project life cycle
(for example, requirement specification, data base, planning,
etc). Product patterns have been formalized in a wiki, which
is available at [21]
The Gantt Chart Product Pattern [22] is an example of
product patterns to perform project planning.
B.
Product Patterns in Project Planning
When a project manager has to perform a project
planning, he or she must think about the next question: Do I
have the needed knowledge to develop a project planning
based on the software engineering best practices?
Figure 2 illustrates the way authors propose to use
product patterns in projects planning. There are two
possibilities, that the project manager does not know how to
perform a project planning (which is illustrated in Block 1 in
Figure 2), or the project manager knows how to develop a
project planning and wants to perform it (which is illustrated
in Block 2, Figure 2).
15
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

Project
planning
learning
process
(Block
1
description): If the project manager does not know how to
develop a project planning, he or she can learn the software
engineering best practices and the experience of other
project managers. The project manager has to follow the
next two steps: STEP 1: Access to the product pattern wiki,
available at [21]. STEP 2: Look for the Gantt Chart Product
Pattern and learn its content. In the product pattern wiki, the
project manager should look for the "Project Planning
Product pattern". With this product pattern, the project
manager will learn step by step how to perform a project
planning.
Lessons
learned,
information
resources,
knowledge and skills to perform project planning are also
available.
Figure 2 Product Patterns in Project Planning
In this way, product patterns will be useful to the project
manager to learn the needed knowledge to perform project
planning, using the best practices of software engineering
and the experience of software managers who have used and
given
feedback
about
the
product
patterns
with
the
knowledge of using the Gantt Chart product pattern in
different projects.
Project
planning
development
process
(Block
2
description): If the project manager knows how to perform
the project planning and he or she wants to develop a Gantt
Chart, the project manager must follow the next steps: STEP
3: Create and identify the tasks to be performed during the
software project. STEP 4: Access the add-in support tool
developed by the authors. STEP 5: Select the context and
the forces of the project; the project manager will have to
select the context where the project will be developed and
the generic and specific forces that affect the project
planning
under
development,
such
as
the
kind
of
organization, team experience, etc. Figure 3 shows the
screenshot where project manager has to select the context
and forces. STEP 6: Select the activity you want to plan. As
can be seen see in Figure 4, once the context and the force
are selected, the project manager will have to select the
activity to be planned. STEP 7: The add-in suport tool will
create a column in the Gantt Chart where the selected
product patterns url will be stored (it can be seen in Figure
5).
Figure 3. Context and forces selection
Figure 4. Activities selection
Figure 5. Create URL Column
16
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

STEP 8: The add-in support tool will look for the product
patterns which comply with the context, forces and the
activity (problem) that the project manager wants to plan; so
the tool will execute the next rule:
If you find yourself in this context
(and) with this problem
(and) entailing these forces
then
map a product pattern in your project
(and) look for more product patterns
The product patterns that comply the rule will be shown in
the tool, this can be seen in Figure 6. STEP 9: The project
manager can select each product pattern and the add-in
support tool will show the description and the url of the
product pattern where the project manager will have access
to the best practices and the experiences of other software
engineers related to the activity being planned (time,
resources, lessons learned, etc).
Figure 6. Product pattern search and select
Figure 7. Update Gantt Chart
At this point, the project manager will have to select the
product pattern that best fits with the activity which is being
planned. STEP 10: Update Gantt Chart: the add-in suport
tool will update the Gantt Chart with the url of the selected
product pattern, this can be seen in Figure 7. STEP 11: Save
the changes. The add-in suport tool will save the updated
project planning.
C.
Add-in Support Tool Architecture
The architecture of the add-in consists of three modules
clearly identifiable:

The client (or component add-in) is embedded within
the Microsoft Project program. The add-in is installed
on client computers using a simple self-install, slightly
configurable, and outside the building application.

Web service: it works thanks to an application server;
both are located in a server computer. The Web Service
WSDL descriptor allows that the services can be public
and accessible for the customer.

Database manager: it is located in a server computer.
The database query manager handles the queries of the
project manager to obtain the knowledge needed to
perform the project planning.
IV.
EXPERIMENTATION
This section describes the experiment and the analysis
of results.
A.
Description of the experiment
This solution provides an add-in support tool for project
planning using product patterns. The authors validated the
time spent developing the project planning from the
satisfaction of project managers and teamwork involved in
the development of each planned project. The experiment
was conducted in two phases:
Phase I: Implementation of project planning without
using add-in support tool, and development of the projects
planned.
Phase II: Implementation of project planning using add-
in support tool developed by the authors and development of
the projects planned.
The authors believe that although the development time
using the add-in support tool will increase, the level of
satisfaction achieved will increase as well because it
provides the knowledge of the best practices and the
experience
and
knowledge
of
experts
in
software
engineering.
To
validate
this
goal,
six
software
projects
were
developed at Carlos III University in Spain. All the project
managers who participated in this validation had between 10
– 15 years’ experience, and a Bachelor’s degree in computer
science.
Each of the 6 projects that took part in the
validation included:

Two different project managers that participated in the
validation, one project manager to develop the planning
without using the add-in support tool, and another one
using the add-in.
17
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications


Two different teams, one team that used the planning
made by the project manager without using the add-in
support tool, and the other one that used the planning
made by the project manager using the add-in support
tool.
A survey was performed to value the level of satisfaction
of people involved in the experiment.
B.
Results Analysis
The data analysis results are shown in Figure 8. The
bubble figure shows a comparative: for each project (x-axis)
there are two bubbles with the development time (y-axis) and
a level of satisfaction (bubble area), within each bubble there
are numbers that represent "time; satisfaction".
As can be seen in Figure 8, the development time is
greater in phase 2 where the add-in support tool is used. This
increase is the result of the project manager learning the
knowledge provided by the product patterns to select the
ones that best fit with each project activity. Although for
each project the time spent in project planning is greater
when using the add-in support tool, the bubble area is larger
as well because the project planning is done with the
knowledge about how each activity affects the project
planning. Also, the project manager provides for each
activity, using the add-in support tool, a URL to the products
patterns wiki, where the person in charge of each activity can
access the knowledge on how to perform the assigned
activity.
Figure 8. Results Analysis (Phases – Development Time – Level of
Satisfaction)
V.
CONCLUSIONS AND FUTURE WORKS
The most important mission of this work was to focus on
the
scarce
reuse
being
done
in
general
in
project
management and specifically in project planning. The
authors proposed an easy way to incorporate into project
planning all the necessary information (i.e., activities to be
done, product to be obtained, people assigned, time schedule,
budget, etc.), but also the know-how the software engineers
have on developing software products, which can be reused a
thousand times and never in the same way to develop the
project activities. This has been done by using product
patterns, proposed by the authors as artifacts to gather the
know-how on how to develop software products and easily
accessed by the wiki [21], and an add-in support tool, that
can be easily developed by any project development
platform (in this case developed to be added to Microsoft
Project). The use of the proposed solution has demonstrated
that, although the time spent in the project planning
increased, the satisfaction of the teamwork while developing
their assigned activities also increased. The authors want to
demonstrate as future work that the productivity of the
teamwork increases as well.
Using this approach is an interesting way to ensure the
company which is developing software projects, that the
planning has been done by reusing the know-how of the
people working in the company and in this way it is easy to
assess how the know-how is giving a return of investment to
the company.
ACKNOWLEDGMENT
This work has been partially funded by the Spanish
Ministry of Science and Technology through the project
TIN2011-27244.
REFERENCES
[1]
European Commission. Managing projects. Available at:
http://ec.europa.eu/eahc/management/Fact_sheet_2010_01.ht
ml. [Accessed: 30-Jan-2013].
[2]
PMBOK A Guide to the Project Management Body of
Knowledge. Fifth Edition. PMI. 2013.
[3]
S. Ketabchi, N.K. Sani, and L. Kecheng, ”A Norm-Based
Approach
towards
Requirements
Patterns”.
Computer
Software and Applications Conference (COMPSAC), 1 IEEE
35th
Annual
Topics:
Computing
&
Processing
(Hardware/Software), 2011, pp: 590 – 595, Digital Object
Identifier: 10.1109/COMPSAC.2011.82
[4]
C. Larman. Applying Uml and Patterns: An Introduction to
Object-Oriented
Analysis and
Design,
and
the Unified
Process. 2002. Prentice Hall
[5]
L. Hagge, K. Lappe, and T. Schmidt, “REPARE: The
Requirements Engineering Patterns Repository”. 13th IEEE
International
Conference
on
Requirements
Engineering
(RE'05), 2005, pp. 489-490.
[6]
M. Sanchez Segura, F. Medina-Dominguez, A. Amescua and
A. Mora-Soto. “Improving the Efficiency of Use of Software
Engineering Practices Using Product Patterns”. Information
Sciences (Impact Factor: 3.291), Vol. 180, Issue 14, July 15,
2010, Pages 2721-2742.
[7]
H. Kerzner, Project management: a systems approach to
planning, scheduling, and controlling, 10th ed. Hoboken, NJ,
USA: Wiley, 2009, p. 1120.
[8]
USA IDC
Corporate,
“International
Data
Corporation.”
[Online]. Available: http://www.idc.com/. [Accessed: 24-Jan-
2013].
[9]
M. Ballou and J. C. Pucciarelli, “IDC MarketScape Excerpt:
IT Project and Portfolio Management 2010 Vendor Analysis.
Four Views to Enable Effective Evaluation,” Framingham,
MA, 2010.
[10] D. B. Stang and R. A. Handler, “Magic Quadrant for Cloud-
Based
Project
and
Portfolio
Management
Services”,
Stamford, CT, USA, 2012.
[11] D. B. Stang and R. A. Handler, “MarketScope for Project and
Portfolio Management Software Applications”, Stamford, CT,
USA, 2012.
18
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

[12] Microsoft Corporation, “Microsoft Project Professional 2010.
Product
Information.,”
2010.
[Online].
Available:
http://www.microsoft.com/project/en-us/project-professional-
2010.aspx. [Accessed: 26-Jan-2013].
[13] Microsoft Corporation, “About Microsoft,” 2013. [Online].
Available:
http://www.microsoft.com/about/en/us/default.aspx.
[Accessed: 25-Jan-2013].
[14] Augeo Software SAS, “Augeo6 Product Description,” 2012.
[Online].
Available:
http://www.augeo.com/page/augeo6.
[Accessed: 24-Jan-2013].
[15] Genius Inside, “Genius Project. Product Description.,” 2012.
[Online].
Available:
http://www.geniusinside.com/software/software.
[Accessed:
24-Jan-2013].
[16] Planisware, “Planisware 5 information.,” 2011. [Online].
Available:
http://www.planisware.com/main.php?docid=12420.
[Accessed: 24-Jan-2013].
[17] Planview Inc., “Planview Enterprise description.,” 2013.
[Online].
Available:
http://www.planview.com/products/enterprise/.
[Accessed:
24-Jan-2013].
[18] Project.net,
“Project.net
overview.,”
2013.
[Online].
Available: http://www.project.net/overview. [Accessed: 24-
Jan-2013].
[19] Sciforma Corporation,
“Sciforma 5.0 overview.,” 2012.
[Online]. Available: http://www.sciforma.com/page?id=927.
[Accessed: 24-Jan-2013].
[20] AtTask Inc., “attask product overview.,” 2012. [Online].
Available: http://www.attask.com/product. [Accessed: 24-Jan-
2013].
[21] Product
Pattern
Wiki.
Available
at:
http://kovachi.sel.inf.uc3m.es
[22] Gantt
chart
Product
Pattern.
Available
at:
http://kovachi.sel.inf.uc3m.es/800-
spanish/801_libreria_de_patrones_de_producto/Diagrama_de
_Gantt
19
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-276-9
PATTERNS 2013 : The FIfth International Conferences on Pervasive Patterns and Applications

