Integration of Condition Monitoring in Self-optimizing Function Modules Applied to
the Active Railway Guidance Module
Christoph Sondermann-W¨olke
University of Paderborn
Mechatronics and Dynamics
F¨urstenallee 11
33102 Paderborn, Germany
Email: chrisson@upb.de
Walter Sextro
University of Paderborn
Mechatronics and Dynamics
F¨urstenallee 11
33102 Paderborn, Germany
Email: walter.sextro@upb.de
Abstract—New mechatronic systems, called self-optimizing
systems, are able to adapt their behavior according to environ-
mental, user and system speciﬁc inﬂuences. Self-optimizing sys-
tems are complex and due to their non-deterministic behavior
comprise hidden risks, which cannot be foreseen in the design
phase of the system. Therefore, modiﬁcations of the ISO 17359
condition monitoring policy for being able to cope with this
new kind of systems are presented. Besides avoiding critical
situations evoked by self-optimization, the proposed concept
uses self-optimization to increase the dependability of the
system. This concept is applied to the active guidance module
of an innovative rail-bound vehicle. First test drives provide
information for the enhancement of the implementation of real-
time switching to appropriate control strategies. The different
control strategies are investigated in detail. It is illustrated
that inﬂuences on the system like different track sections or
the desired velocity of the RailCab effect the system and can
lead to a higher amount of ﬂange contacts, which indicate
higher wear and thus a reduction of the availability of the
system. Therefore, these inﬂuences should be minded within the
condition monitoring policy. Consequently, this article presents
the condition monitoring policy for self-optimizing function
modules and its application to the active railway guidance
module.
Keywords-dependability;
condition
monitoring;
self-
optimization; active railway guidance module
I. INTRODUCTION TO SELF-OPTIMIZING SYSTEMS
Classical mechatronic systems use knowledge of me-
chanical and electrical engineering as well as information
technology to open up new design concepts. Self-optimizing
systems, which are the focus of research at the collaborative
research center (CRC) at the University of Paderborn, aug-
ment these mechatronic systems with intelligent information
processing [1][2]. This “inherent intelligence” is able to
adapt the objectives of the system and hence the behavior
of the system to changing inﬂuences. As depicted in Figure
1 these inﬂuences on the technical system could arise from
the environment, the user or the system itself. Every self-
optimizing system features a system of objectives, whereas
different objectives could be pursued by the system depend-
ing on the current situation and inﬂuences. The choice of one
or more objectives leads to behavior adaptation. In general,
there are two options for behavior adaptation: parameter
or structural adaptation; whereas structural adaptation leads
to compositional adaptation or reconﬁguration. The deter-
mination of a suitable behavior is reﬂected by the self-
optimization process, which is subdivided into three actions.
In the ﬁrst action the situation is analyzed. Therefore, the
inﬂuences, the current system state and the current degree of
performance concerning the system objectives are collected.
From this the next objectives are deduced within the second
action. In the third action the system adapts its behavior with
respect to the chosen objectives.
System of Objectives
(Internal Objectives)
Technical System
O1.1 O1.2
O2.1 O2.2 O2.3
O1
O2
O
Influences on the Technical System
User
System
Environment
Behavior
Mathematical
Description of
the Behavior
Specialized Representation
of the System Structure
Specialized Representation
of System Parameters
x(t)=
y(t)=
A
C
.
.
x(t)+
x(t)+
B
D
.
.
u(t)
u(t)
Structure
Parameters
U(s)
Y(s)
+
+
+
..
X2
X1
Xn
C1
C2
Cn
l1
0
.
0
0
.
0
l2
0
0
0
.
...
...
...
...
0
0
.
ln
A =
,
1
1
.
1
C
= c
= c c
c
1
2
... n
D = 0
T
B
= b
=
1
s - l 1
1
s - l 2
1
s - l n
..
Figure 1.
Aspects of self-optimization
As every mechatronic system self-optimizing systems
comprise the physical system, sensors, actuators and the
information processing. The information processing of self-
optimizing systems is structured into three layers (see
Figure 2) and is called operator-controller-module (OCM).
65
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The self-optimization process takes place in the cognitive
operator. The optimization itself can be model-based or
behavior-based. Model-based techniques enable predictive,
time-independent optimization. Behavior-based techniques
provide planning and assessment functions with respect
to the current objectives. The cognitive operator processes
information in soft real time. On the contrary, the con-
troller works in hard real time. The controller supervises
the mechatronic system, reads sensor data and adjusts the
actuators. The reﬂective operator is situated in between these
two layers. It has the task to supervise the controller. The
chosen behavior adaptation of the system is passed from
the cognitive operator to the reﬂective operator, which has
to initiate the correct control strategy as well as controller
parameter variations. The conﬁguration control, a ﬁnite state
machine, is responsible for switching control strategies, but
has no direct impact on the actuators. Further information
about the operator-controller-module are given in [3].
Action Level
Planning Level
monitoring
sequencer
C
B
A
Reflective Operator
Controller
Operator-Controller-Module (OCM)
...
configuration-
control
emergency
soft real time
hard real time
Model-based Self-Optimization
Behavior-based Self-Optimization
cognitive information processing
Cognitive Operator
Cognitive Loop
Reflective Loop
reflective information processing
motor information processing
configurations
A
C
B
Motor Loop
sensors
actuators
physical system
Figure 2.
Operator-Controller-Module
Self-optimizing system are complex and due to their non-
deterministic behavior comprise hidden risks, which cannot
be foreseen in the design phase of the system. A condi-
tion monitoring policy is needed to supervise the system
behavior and avoid severe dependability-critical impacts of
self-optimization. Furthermore, self-optimization is able to
increase dependability by integrating the objectives reliabil-
ity, availability and safety in the system of objectives.
The paper is structured in ﬁve sections. This introduction
to self-optimizing systems is followed by a short survey of
related work regarding maintenance and condition monitor-
ing in Section II. Section III introduces the proposed condi-
tion monitoring policy for self-optimizing systems. Section
IV presents the active guidance module as an application for
the developed policy. Afterward Section V illustrates results
of ﬁrst test drives, which should enhance the implementation
of the proposed concept. Finally, Section VI presents a
conclusion and a gaze at future work.
II. RELATED WORK
According to the taxonomy proposed by Kothamasu et al.
maintenance strategies can be subdivided into reactive and
proactive maintenance, whereas the latter comprises preven-
tive and predictive approaches [4]. Reactive maintenance is
executed to correct a failure or avoid serious consequences,
but not to avoid failures in advance. The preventive methods
avoid failures, e.g., by ﬁxed maintenance intervals, but only
predictive maintenance monitors the current system behavior
continuously. Due to the non-deterministic behavior of self-
optimizing systems the latter strategy is preferable.
The two strategies, which are mentioned in the context of
predictive maintenance, are reliability centered maintenance
(RCM) and condition based maintenance (CBM). RCM is a
combination of several maintenance strategies with respect
to high reliability by minimum costs (cf. [5]). CBM is
applicable, when the parameters, which should be moni-
tored, are measurable by the system. Diverse techniques
and methodologies for condition monitoring are well inves-
tigated [6] and applied for example in the ﬁeld of advanced
manufacturing [7]. The measured parameter is compared to
an alarm value and if this value is exceeded the maintenance
action is initiated. That is why Ma et al. [8] point out
that condition monitoring in today’s complex systems is
mostly regarded as an alarm tool for maintenance. Even
the ISO 17359 deﬁnes mainly, how a condition monitoring
policy should look like to establish a successful maintenance
strategy [9]. For a good review on CBM including diagnosis
and prognostic techniques see, e.g., Jardine et al. [10].
None of these maintenance strategies inﬂuence the de-
pendability of the system in the operating phase. Instead
merely the next maintenance time is determined. Condition
monitoring is used to assess the current state of the moni-
tored system or component. The focus concentrates on the
short term prediction. As consequence Ma et al. [8] call for
a holistic view on the system and postulate that both, short
and long term prediction, are required .
A ﬁrst approach to calculate operational availability re-
garding optional machine conﬁgurations and technical ser-
vices is given by Fleischer et al. [11]. Reliability and
availability prognosis are established to optimize life cycle
performance of the investigated machine tool.
In the operating phase newer publications describe self-
healing, self-repairing and self-maintaining systems. As
66
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

physical systems are not capable of repairing components
like broken sensors, most of the concepts deal with software
systems (cf. [12][13]). In the domain of mechanical systems
Umeda [14] propose the development self-maintenance ma-
chines. The basis of these machines is functional redundancy
as fault-tolerant scheme. As a ﬁrst application a photocopier
is designed self-maintaining [15].
III. CONDITION MONITORING IN SELF-OPTIMIZING
SYSTEMS
Self-optimizing systems comprise the risk of unfore-
seen failures due to their complexity and inherent non-
deterministic behavior. Nevertheless self-optimization could
be used to increase the dependability of the technical system.
This section presents the established multi-level depend-
ability concept and highlights how this concept could be
embedded in an augmented condition monitoring policy.
A. Multi-level Dependability Concept
To reduce the risks and use the potentials of self-
optimization the multi-level dependability concept (MLDC)
has been developed (cf. [16]). This concept is situated in
the reﬂective operator and subdivided into four hierarchi-
cally ordered levels (see Figure 3). On the one hand the
concept offers well-directed measures to react on monitored
circumstances and on the other hand the importance of the
objective dependability is characterized and feed back to the
cognitive operator.
Figure 3.
Multi-level dependability concept
The levels of the dependability concept and the impacts
on the system of objectives are explained in detail in the
following:
• Level I: The system operates in a dependable way.
Dependability is one objective among others.
• Level II: An error has occurred. Self-optimization is
used to return to the ﬁrst level. Therefore, the priority
of the affected attribute of dependability is increased.
• Level III: A severe error has occurred. First emergency
mechanisms are triggered to reach a safer state. In the
system of objectives safety is the sole objective to avoid
the failure of the whole system and the consequences
involved. The other attributes of dependability may
occur as sub-objectives of safety.
• Level IV: The control over the system is lost. Mecha-
nisms, like emergency routines, are executed to reach
a fail-safe state.
In conjunction with the conﬁguration control the multi-
level dependability provides an interface between the fast
controller structure and the self-optimization process in the
cognitive operator.
B. Condition Monitoring Policy for Self-optimizing Systems
In this contribution the multi-level dependability is em-
bedded as one part of the proposed policy of establishing
condition monitoring. This policy is based on the common
ISO 17359 policy [9]. This standardized policy has to be
augmented and modiﬁed mainly in the operating phase
by steps and details that utilize the advantages of self-
optimization. In Figure 4 the steps of the adapted condition
monitoring policy are illustrated. New or modiﬁed steps
within the policy are highlighted in gray. The other steps
(white background) are consistent with the ISO 17359. The
policy is divided into three main phases: the design phase,
the operating phase and the maintenance phase.
1) Design phase: The design phase of the condition
monitoring policy should be parallel to the design phase
of the system. The development of the system should be
accompanied by the identiﬁcation of self-optimizing po-
tentials [17]. For self-optimizing systems the advantages
of self-optimization over well-established design solutions
must be exposed. This analysis highlights the variables and
structures, which can be inﬂuenced by self-optimization and
hence used for the condition monitoring proactive measures.
Furthermore, the inherent objectives of the system are de-
ﬁned in this stage and obviously dependability should be one
of them. Dependability in our case, as an abstract objective,
is deﬁned according to Laprie [18] by its four attributes
reliability, availability, safety and security, whereas the latter
plays a minor role in self-optimizing function modules.
In the subsequent reliability analysis several methods like
reliability block diagram, failure mode and effects analysis,
and fault tree analysis can be applied to classify the risks
and to reveal dependencies and fault propagation paths.
Being in parallel with the development process, an early
reliability audit is able to avoid misconstructions and to add
required system redundancy for critical functions. After the
reliability analysis highlights parameters, which inﬂuence
the dependability, these parameters should be mapped onto
67
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the dependability attributes safety, availability and reliability.
The attributes are described by corresponding mathematical
equations, e.g., failure rate or survival probability for relia-
bility or mean time between failure (MTBF) for availability
(cf. [19]). These steps make the function module comparable
with other modules or the whole system.
The required parameters should be measurable to install
proactive measures. As explained above, the preferable
maintenance strategy for self-optimizing systems is predic-
tive maintenance. As a consequence of this the proposed
decision step of the ISO 17359 to install corrective or
preventive maintenance is left out. Thus, in the current step
suitable measurement methods for the predictive mainte-
nance parameters are selected.
The next step in the proposed condition monitoring policy
is the implementation of multi-level dependability concepts,
which classify the current state on basis of the dependability
quantities. In most cases there is one multi-level depend-
ability concept for availability, safety and reliability. The
implementation and hence the speciﬁcation of the alarm
values and the priority of the quantities depend on the
investigated function module.
The next step is to set up the conﬁguration control, which
is also situated in the reﬂective operator. The conﬁguration
control choses the desired control strategy according to the
current situation and is deﬁned by a ﬁnite state machine. A
state machine consists of states and transitions. The states
arise from the different control concepts of the development
phase. For example, redundancy and degradation concepts
are reﬂected in this state machine. The transitions could be
derived from the reliability analysis. A fault tree analysis for
each state indicates the state transitions. The conﬁguration
control is a dependability-critical component and it has to be
guaranteed that the state machine itself processes faultlessly.
This can be done by model checking, which is extended for
real time mechatronic systems [20][21].
2) Operating phase: The ﬁrst step in the operation phase
is taking measurements of the monitored parameters and
calculate the resulting dependability quantities. This in-
formation is transmitted on the one hand to a hard real
time information processing (left branch in Figure 4). The
quantities are compared immediately with the multi-level
dependability concept. If the state of the system is still Level
I, the system is in a regular state. Otherwise the system per-
forms known diagnosis and short term prediction methods
to deduce the required action. This process step works in
hard real time, which is necessary to initiate emergency
routines. On the other hand the quantities are passed to
the cognitive operator, which works in soft real time (right
branch in Figure 4). On the basis of further knowledge the
long term progression of the system is analyzed and the
dependability quantities are updated for a point in time in the
future. Afterward the retrieved quantities are compared with
the multi-level dependability concept within the reﬂective
Review
Feed back results to history record
Perform diagnosis and
short-term prognosis
Take measurements and trend readings
Set up Configuration control
incl. Model Checking
Select measurement method
Perform long-term
prognosis
y
y
n
n
y
n
Design phase
Operating phase
Maintenance
Maintenance
required?
Level I ?
Level I ?
Dependability audit
System audit
Determine required action
Determine required maintenance action
Set initial alarm critteria/
Implementation of multi-level
dependability concept (MLDC)
Compare measurements with MLDC
Figure 4.
Condition Monitoring policy for self-optimizing function
modules – new or modiﬁed steps are highlighted in gray
operator and checked if the system will still be in Level I
for a ﬁnite horizon of time. If Level I is exceeded a suitable
proactive measure has to be taken. An example for planning
in combination with the multi-level dependability concept is
given in [22].
In the subsequent step – if Level I is exceeded – the
required action is determined. Basis of the decision is the
current classiﬁcation within the multi-level dependability
concept. If the system state is in Level IV a fast reaction
like an emergency routine is necessary. In Level II or Level
III the objective dependability is increased in the system
of objectives. Additionally, the conﬁguration control can be
triggered to change the control strategy. In a ﬁrst approach
the dependability Levels from the short term and long
term prognosis are compared. The worse Level is used and
fed back to the self-optimization process for weighting the
objective dependability.
68
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

3) Maintenance phase: If maintenance is required, which
should be the result of the short term and long term
prediction in the previous step, the designated maintenance
action is scheduled. As in the policy of the ISO 17359 the
results are fed back to history record and prepared for review.
IV. APPLICATION TO THE ACTIVE GUIDANCE MODULE
The main demonstrator of the CRC at the University
of Paderborn is an innovative railway system. Independent
vehicles, called RailCabs, are able to transport passengers
or goods non-stop from departure to destination. Moreover,
these RailCabs form convoys to take advantage of slipstream
and to reduce the energy consumption of the following
RailCabs. To dissolve these convoys at switches at high
velocities (intended maximum velocity is about 180km/h),
the switch remain passive and the single RailCab steers
in the desired direction. The responsible module for this
steering action is called active guidance module. The module
with its most important components is shown in Figure 5.
Besides steering in passive switches, the guidance module
reduces wear on wheels and rails by avoiding ﬂange contacts
on straight tracks as well as in curves by compensating
disturbances like track irregularities and side wind. Other
inﬂuences on the active guidance module could occur from
the RailCab itself, which, for example, restricts the energy
consumption of the module or varies the velocity. During
the operating phase the human has currently no inﬂuence
on the system of objectives and therefore is not considered.
center pivot axle
steering actuator
(hydraulic cylinder)
eddy-current sensors
axle-carrier
emergency brakes
Figure 5.
Active guidance module
In the following the proposed condition monitoring policy
(Figure 4) is applied to this active guidance module. Within
the system audit the potential of self-optimization should be
pointed out. The controlled parameter in the active guidance
module is the steering angle. This angle is calculated by
an optimized trajectory, which utilizes the track clearance
to adapt to the desired objective. In general, there are two
antagonistic objectives that the active guidance module can
pursue reasonably.
On one hand the objective is to reduce energy consump-
tion. This leads to the reduction of steering activity and
trajectories that somehow “cut curves”. This results in a
higher probability of ﬂange contacts and a reduction of the
availability of the system due to wear on wheels. Hence,
on the other hand the objective is to minimize the wear on
wheels, which leads to a trajectory near the center line of
the track clearance to avoid ﬂange contacts. This leads to a
conﬂict within the system of objectives and thus to a multi-
objective optimization which result is a Pareto set for the
chosen objectives. More information about the generation
of optimized trajectories using model-based optimization
within the guidance module can be found in [23].
In the dependability audit a ﬁrst failure mode and effects
analysis (FMEA) is conducted to ﬁnd non-tolerable risk and
measures like additional redundancy to secure the system.
This analysis is based on the principle solution of the
guidance module. One result of the FMEA is that the
determination of the lateral position, which is measured by
eddy currents sensors, is important for the control of the
guidance module as failures in the measurement can lead to
severe faults like the derailment of the RailCab. Therefore,
the eddy current sensors are attached in active redundancy.
Two pairs of sensors for each guidance module are installed,
whereas one pair requires that both sensors are working. If
both pairs of sensors are working well, the mean is used
to enhance the accuracy of the sensor signal. If one pair
of sensor fails, this leads to a deterioration of the signal.
For measuring the longitudinal position four incremental
sensors, each at a wheel, are used. The mean is calculated
to reﬁne the measurement. As the incremental sensors are
subjected to drift, the sensors are updated by proximity
switches every 15m.
The next step is to link the physical parameters to the
dependability attributes. Wear on wheels, for example, is
inversely proportional to the availability of the guidance
module. The accurate relation has to be determined experi-
mentally, whereas as a matter of fact ﬂange contacts lead to
higher wear. Considering the dependability attributes safety
the physical quantity to keep the system safe is the lateral
acceleration. The lateral acceleration should be low to avoid
derailment by hard ﬂange contact. Regarding reliability, the
state of each component required for the controlling actions
is monitored. Sensor failures could have an serious impact
on the reliability of control strategies.
A fault-tree analysis (FTA) is used to determine which
events have to occur to force system degradation. Addition-
ally, the quantitative FTA provides an indication of setting
the alarm values of the multi-level dependability concepts
regarding reliability. To set the alarm levels of the attribute
availability and investigate which parameter would support
undesired ﬂange contacts, several test drives are made.
Figure 6 shows the different control strategies, which are
also speciﬁed in the design phase, and the classiﬁcation con-
69
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

sidering the multi-level dependability concept with respect
to reliability. The control strategies include in most cases a
track position controller, which gets a desired trajectory as
set value, and a feed forward control based on the current
curvature of the track. In Level I the trajectory is generated
by the self-optimization process with a high priority on the
minimization of the energy consumption. If a failure in an
eddy current sensor occurs or the self-optimization process
produces inadequate results the system state is classiﬁed
into Level II. In the ﬁrst case the self-optimization process
assigns more priority on the dependability of the system
the reliability and availability of the system increases. In
the latter case the center line of the clearance is used as
fallback trajectory for the track position controller (track
position controller A - both sensors pairs working). If one
pair of sensors fails without having the possibility to use self-
optimization the state is sorted into Level III (track position
controller B). The map-based feed forward control is used,
if all eddy current sensors fail. In this control strategy the
steering angle is only set due to the curvature of the track.
The emergency routine in the fourth level is ﬁxing the axle
to avoid uncontrolled behavior. So only in the ﬁrst two levels
self-optimization is used to enhance the dependability.
Figure 6.
Interrelation Conﬁguration Control and FTA
Figure 6 illustrates that these different control strategies
are utilized as states in the state chart of the conﬁguration
control. As the states are derived from the given control
structure the transitions could be derived from the FTA by
choosing the failure of every control strategy as top event.
For the determination of the transitions every fault tree is
divided into minimal cut sets. The exact policy is descibed
in DIN EN 61025 [24]. At the moment, expert knowledge
is used to determine which minimal cut set belongs to
which transition. One example of such a cut set is shown
in Figure 6, which is linked to the transition manually.
The condition of the transition could be derived by the
Boolean Algebra, which is given by the fault tree notation.
As explained above, the four redundant eddy current sensor
(ecs) are ordered in the following way. Two sensors work
together as a pair. If one sensor fails then the whole pair
fails. So this relation is indicated by an OR-Gate. The other
pair is still working. If also the second pair fails the track
position controller is not able to work anymore (AND-Gate)
and the transition of the state chart is triggered and the
state switches to the map-based feed forward control. The
adequate Boolean expression, which is deduced from the
fault tree is
(ecs1 ∨ ecs2) ∧ (ecs3 ∨ ecs4).
(1)
Regarding the guidance module the attributes reliability
and availability are investigated. The reliability is reduced,
if, e.g., certain failures in the hardware occur. The paper
focuses on sensor failures, which handicap the control of
the guidance module. Availability is quite similar as it is
assumed that the number of ﬂange contacts rises if a failure
occurs. So the number of ﬂange contacts could be used to
assess the current availability of the system, respectively,
to calculate the residual life time. As mentioned above, the
established state chart refers to the fault tree analysis of
the different control strategies. The ordering of the different
control strategies to a certain alarm level is based on expert
knowledge. It is depicted that only degradation processes are
possible. The repair of the system takes place in the mainte-
nance phase of the system. To avoid undesired behavior of
the system, an advanced model checking is conducted on the
state chart (cf. [25]). The model checking has to guarantee,
for example, that the fail-safe state could be reached from
every current state if a severe failure occurs. This concept
is implemented on the active guidance module. To validate
and enhance this concept it is necessary to take a closer look
on the operating phase of the system. Therefore, several test
drives were made to examine which parameter has got a
relevant inﬂuence on the system behavior. In the next section
selected results of the test drives are shown.
V. EXPERIMENTAL RESULTS
The test drives were conducted on the test track next to the
University of Paderborn. In Figure 7 the test bed is shown.
On the left side the RailCab is depicted. The RailCab on
a scale of 1:2.5 is able to drive on the test track with a
maximum velocity of about 10 m/s. The oval test track
70
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

(a) RailCab on a scale of 1:2.5
(b) Test track next to the University of Paderborn
Figure 7.
Test bed
is 450m in length. The described multi-level dependability
concept and the conﬁguration control are programmed with
Matlab/ Simulink and transferred to the dSPACE real time
hardware on the RailCab.
In the following three sections the results of different test
drives are illustrated, whereas each section has a different
focus. In the ﬁrst section the control strategies are investi-
gated. Besides driving with the track position controller in
energy-optimized and dependability-optimized mode failures
are induced to gain knowledge about the behavior in the
case of a failure. For a comparison also the map-based feed
forward control is investigated. In the second section the
inﬂuence of different track sections is examined. The test
track is subdivided into straights, clothoids and curves. The
third section shows results for driving at different velocities.
The assessment parameter of all test drives is the summed
length of the ﬂange contacts qfc. The ﬂange contacts are
calculated by the relation between the clearance c and the
lateral position ry
qfc = 2ry
c .
(2)
If qfc ≥ 1 a ﬂange contact is detected. The length of
the ﬂange contact is calculate by the determination of the
beginning and end of each ﬂange contact.
A. Comparison of different control strategies
The failure mode and effects analysis within the design
phase of the proposed policy points out that the eddy
current sensors are dependability-critical components. As
consequence they are built up in hardware redundancy. This
offers the option to use the mean of both sensor pairs
to get an more accurate signal. But if one pair fails this
leads to a reduction of the signal quality. If both pairs
fail, the map-based feed forward control is the last possible
control strategy. This section shows a comparison between
the different control strategies and the impact of failures
of the eddy current sensors. Table I lists the different test
drives, which are investigated. All test drives were done at a
velocity of 5m/s. The track sections of the passive switch are
neglected in the evaluation because in the passive switch the
active guidance module steers the RailCab next to the left
or right rail to pass the switch. So a lot of ﬂange contacts
are expected, which would bias the results.
Table I
TEST DRIVES WITH DIFFERENT CONTROL STRATEGIES
Test drive
Control strategy
failure
of
eddy
current sensors
1
Dependability-optimized
+ track position controller
no failure
2
Energy-optimized + track
position controller
no failure
3
Energy-optimized + track
position controller
failure one pair
4
Dependability-optimized
+ track position controller
failure one pair
5
map-based feed forward
control
failure both pairs
The results of the ﬁrst test drives are depicted in Figure 8.
The ﬂange contacts are shown in m. The complete track
without the passive switch sections is about 350m in length.
Comparing the two rounds it is obvious that the test drives
are highly reproducible. The comparison of drive number
one and two shows that the dependability-optimized trajec-
tory leads to lesser ﬂange contacts in m than the energy-
optimized trajectory. This is expected as the dependability-
optimized trajectory tries to keep the RailCab next to the
center line of the clearance, whereas the energy-optimized
trajectory gets quite close to the rails to reduce the energy
consumption. This could result in ﬂange contacts due to the
underlying controller of the hydraulic actuator. Furthermore,
71
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the ﬁgure illustrates that the ﬂange contacts in m increase
if one pair of eddy current sensor fails (drive number three
and four compared to drive number one and two). For the
availability of the system it is an option to change to the
dependability-optimized trajectory in the case of a failure.
The ﬁfth test drive shows that the summed length of ﬂange
contacts increase signiﬁcantly if the guidance module has to
switch to the map-based feed forward control.
1
2
3
4
5
0
10
20
30
40
50
60
70
Test drive
Sum of flange contacts [m]
First Round
Second Round
Figure 8.
Flange contact in different control strategies
As these results show, self-optimization, e.g., different
objectives like energy-optimized or dependability-optimized,
leads to signiﬁcant different amounts of ﬂange contacts.
Furthermore, it is illustrated, that in the case of a sensor fail-
ure the amount of ﬂange contacts increases in both modes.
But a change in the objectives from energy-optimized to
dependability-optimized could decrease the number of ﬂange
contacts and thus the wear on the wheels. For the comparison
the objectives have either high priority on energy or high
priority on dependability. A compromise of both objectives
as calculated within the multi-objective optimization could
be more appropriate.
B. Comparison of track sections
In the preceding section is discussed, that sensor failures
can lead to higher ﬂange contacts. A higher number of
ﬂange contacts can lead to an adaptation of the behavior.
For the condition monitoring it plays a decisive role which
factors or inﬂuences can also lead to an increased amount
of ﬂange contacts. In this and the following section two
inﬂuences are discussed: the inﬂuence of the current track
section and the inﬂuence of the velocity of the RailCab. If
the impact of these inﬂuences is known we are able to use
it for the analysis of the current situation. Considering long-
term prognosis we are able to adapt the behavior in advance.
The test track consists of three different track sections:
straights, clothoids and curves. Figure 9 shows the results for
driving two rounds with 5m/s on the test track. The ﬁrst three
bars refer to drives with the dependability-optimized control
strategy (two of them cannot be seen due to the ﬂange
contacts are zero) and the second three bars refer to drives
with the energy-optimized control strategy. It is illustrated
by comparing both strategies, that in every track section type
the dependability-optimized strategy counts lesser ﬂange
contacts (cf. preceding section). The comparison of the track
section is given in percent. This is due to the different length
of the track sections. The length of the straight and clothoid
is 50m, whereas the length of the curve is 77m. Within the
dependability-optimized drives only in curves were some
ﬂange contacts (0.18%). It is depicted that driving a straight
road in the energy-optimized way leads to lesser ﬂange
contacts that in the clothoid and driving a clothoid produces
lesser ﬂange contacts than driving a curve. This is due to the
lateral accelerations, which forces the RailCab to drive more
on the outer rail. The ﬂange contacts increase from straight
to curved track because the trajectory has to compensate the
curvature in addition to the track irregularities.
dependability
energy
0
2
4
6
8
10
Objective of controller strategy
Sum of flange contacts [%]
Straight
Clothoid
Curve
Figure 9.
Comparison of different track sections
The showed effect leads to several consequences. First of
all it is obvious that the current track type has to be con-
sidered while analyzing the current situation. Furthermore,
the track type could be one parameter regarding the long-
term prognosis of the guidance module. If it is desirable
to increase the availability by reducing the wear on wheels
and rails, it is preferable to assign a higher priority on the
objective dependability in curves.
C. Comparison of different velocities
The comparison of different velocities is important, be-
cause a measure to react on failures and thus to lower the
amount of ﬂange contacts could be the reduction of the
velocity of the RailCab. Figure 10 illustrates the results of
72
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the test drives regarding the velocity. Again, the ﬁrst three
bars refer to the dependability-optimized and the second
three bars refer to the energy-optimized control strategy. The
test drives were executed at 3m/s, 5m/s and 7m/s.
dependability
energy
0
5
10
15
20
25
30
35
40
Objective of controller strategy
Sum of flange contacts [m]
3m/s
5m/s
7m/s
Figure 10.
Comparison of different velocities
As it can be seen in Table II the results are highly
reproducible. The change in ﬂange contacts regarding the
velocity is low. Only in the ﬁrst round driving with 3m/s
the resulting ﬂange contacts (17.954m) are higher than
expected. Overall it could be stated that the higher the
velocity the higher is the amount of ﬂange contacts in m.
The difference between the optimization control strategies
is again signiﬁcant. Driving in the dependability-optimized
control strategy always leads to lesser ﬂange contacts.
Table II
FLANGE CONTACTS [M] AT DIFFERENT VELOCITIES
control strategy
round
3m/s
5m/s
7m/s
Dependability-optimized
+ track position controller
1
0.953
1.184
1.249
Dependability-optimized
+ track position controller
2
0.474
1.159
1.558
Energy-optimized + track
position controller
1
17.954
17.869
18.042
Energy-optimized + track
position controller
2
16.612
17.354
18.507
In the end, reducing the velocity could be a mean to
reduce ﬂange contacts. In combination with a change in
the control strategy from energy-optimized to dependability-
optimized the ﬂange contacts could be lowered even more.
In our test cases the effect of reducing the velocity is small.
Even smaller than setting the priority of the optimization
more to dependability strategy. This difference will be more
signiﬁcant at higher velocities.
VI. CONCLUSION AND FUTURE WORK
This contribution shows a policy for increasing the de-
pendability of self-optimizing systems. The ISO 17359 con-
dition monitoring process is modiﬁed to combine condition
monitoring and self-optimization. In today’s applications
condition monitoring is seen as a tool for the succeeding
maintenance action, whereas the policy proposed in this
contribution focuses on the operating phase. The multi-level
dependability concept is embedded in this policy to avoid
risks from self-optimization and to increase the objectives
availability, reliability and safety. So systems with a self-
optimizing component constitute a new kind of redundancy
to reach the highest reliability or availability level that is
feasible. The proposed policy is applied to the active self-
optimizing guidance module of an innovative rail-bound
vehicle.
On one hand the experimental results illustrate that self-
optimization is able to compensate sensor failures by chang-
ing the objective from “minimizing energy consumption”
to “maximize dependability”. Additionally, the difference
in driving the established control strategies considering the
ﬂange contact are pointed out. For the comparison of test
drives the test drives were conducted with a high priority
on dependability or a high priority on reducing energy
consumption. It is preferable to use a smooth or continuous
modiﬁcation of the priorities in the future. On the other hand
the results give ﬁrst advices for the integration of prognosis.
The current track section and the current velocity should
be considered. The gained information could also be use to
enhance the long-term prognosis of the residual life time
of the guidance module. So the next step in testing will
be the use of diagnostics as well as short and long term
prediction. The combination of both is already destined in
the proposed condition monitoring policy. As the long term
prediction is also done within the cognitive operator by the
planning component this is an interesting point of research
for the integration of condition monitoring in self-optimizing
systems.
At the current point of research the work is explicit
for mechatronic function modules like the active railway
guidance module. A further step is to interlink the diverse
function modules of the RailCab and examine the whole
system with respect to reliability-centered condition moni-
toring.
ACKNOWLEDGMENT
This contribution was developed in the course of the Col-
laborative Research Center 614 “Self-Optimizing Concepts
and Structures in Mechanical Engineering” funded by the
German Research Foundation (DFG). The authors would
also like to thank Jens Geisler who accompanied the test
drives.
73
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

REFERENCES
[1] C. Sondermann-W¨olke and W. Sextro, “Towards the inte-
gration of condition monitoring in self-optimizing function
modules,” in 2009 Computation World: Future Computing,
Service Computation, Cognitive, Adaptive, Content, Patterns,
Nov. 15-20, 2009, Athens, Greece, 2009, pp. 15–20.
[2] J. Gausemeier, S. Kahl, and S. Pook, “From mechatronics
to self-optimizing systems,” in Self-optimizing Mechatronic
Systems: Design the Future, 7th International Heinz Nixdorf
Symposium, Feb. 20-21, 2008, Paderborn, Germany, 2008,
pp. 3–32.
[3] T. Hestermeyer, O. Oberschelp, and H. Giese, “Structured
information processing for self-optimizing mechatronic sys-
tems,” in Proc. of 1st International Conference on Informatics
in Control, Automation and Robotics (ICINCO 2004), Se-
tubal, Portugal, 2004, pp. 230–237.
[4] R. Kothamasu, S. Huang, and W. VerDuin, “System health
monitoring and prognostics–a review of current paradigms
and practices,” The International Journal of Advanced Man-
ufacturing Technology, vol. 28, no. 9, pp. 1012–1024, 2006.
[5] M. Rausand, “Reliability centered maintenance,” Reliability
Engineering & System Safety, vol. 60, no. 2, pp. 121–132,
1998.
[6] A. Davies, Ed., Handbook of Condition Monitoring – Tech-
niques and Methodology.
Chapman and Hall, 1998.
[7] L. Wang and R. X. Gao, Eds., Condition Monitoring and
Control for Intelligent Manufacturing, ser. Advanced Manu-
facturing.
Springer London, 2006.
[8] L. Ma, “Condition monitoring in engineering asset manage-
ment,” in 12th Asia-Paciﬁc Vibration Conference, August 6-9,
2007, Sapporo, Japan, 2007.
[9] DIN ISO 17359, “Condition monitoring and diagnostics of
machines – general guidlines,” 2003.
[10] A. Jardine, D. Lin, and D. Banjevic, “A review on machinery
diagnostics and prognostics implementing condition-based
maintenance,” Mechanical Systems and Signal Processing,
vol. 20, no. 7, pp. 1483–1510, 2006.
[11] J. Fleischer, S. Niggeschmidt, and M. Wawerla, “Optimizing
the Life-Cycle-Performance of Machine Tools by Reliabil-
ity and Availability Prognosis,” in Advances in Life Cy-
cle Engineering for Sustainable Manufacturing Businesses:
Proceedings of the 14th Cirp Conference on Life Cycle
Engineering, Waseda University, Tokyo, Japan, June 11th-
13th, 2007.
Springer, 2007, p. 329.
[12] D. Garlan, J. Kramer, and A. L. Wolf, Proceedings of the First
Workshop on Self-Healing Systems, WOSS 2002, Charleston,
South Carolina, USA, November 18-19, 2002.
ACM, 2002.
[13] S. Takata, F. Kirnura, F. Van Houten, E. Westkamper, M. Sh-
pitalni, D. Ceglarek, and J. Lee, “Maintenance: changing
role in life cycle management,” CIRP Annals-Manufacturing
Technology, vol. 53, no. 2, pp. 643–655, 2004.
[14] Y. Umeda, T. Tomiyama, H. Yoshikawa, and Y. Shimomura,
“Using functional maintenance to improve fault tolerance,”
IEEE Expert, vol. 9, no. 3, pp. 25–31, 1994.
[15] Y. Shimomura, S. Tanigawa, Y. Umeda, and T. Tomiyama,
“Development of self-maintenance photocopiers,” AI Maga-
zine, vol. 16, no. 4, pp. 41–53, 1995.
[16] C. Sondermann-W¨olke, J. Geisler, T. M¨uller, A. Tr¨achtler,
and J. B¨ocker, “The active guidance module of a rail-bound
vehicle as an application for the dependability oriented design
in self-optimizing systems,” in ASME2008 - International
Design Engineering Technical Conferences & Computers and
Information in Engineering Conference, New York, 2008.
[17] J. Gausemeier, U. Frank, and D. Steffen, Reconﬁgurable Man-
ufacturing Systems and Transformable Factories.
Springer,
2006, ch. 36: Intelligent Systems, Self-optimizing Concepts
and Structures, pp. 719–742.
[18] J.C. Laprie, Ed., Dependability: Basic Concepts and Termi-
nology in English, French, German, Italian, and Japanese.
Wien: Springer, 1992.
[19] A. Birolini, Reliability Engineering – Theory and Practice,
3rd ed.
Springer Berlin, 2003.
[20] H. Giese, S. Burmester, W. Schafer, and O. Oberschelp,
“Modular design and veriﬁcation of component-based mecha-
tronic systems with online-reconﬁguration,” ACM SIGSOFT
Software Engineering Notes, vol. 29, no. 6, pp. 179–188,
2004.
[21] H. Giese and M. Hirsch, “Modular Veriﬁcation of Safe
Online-Reconﬁguration for Proactive Components in Mecha-
tronic UML,” Lecture Notes in Computer Science, vol. 3844,
pp. 67–78, 2006.
[22] B.
Kl¨opper,
C.
Sondermann-W¨olke,
C.
Romaus,
and
H. V¨ocking, “Probabilistic planning integrated in a multi-
level dependability concept for mechatronic systems,” in 2009
IEEE Symposium on Computational Intelligence in Control
and Automation, Mar. 30 - Apr. 2, 2009.
IEEE, 2009, pp.
104–111.
[23] J. Geisler, K. Witting, A. Tr¨achtler, and M. Dellnitz, “Multi-
objective optimization of control trajectories for the guidance
of a rail-bound vehicle,” in Proceedings of the 17th World
congress The International Federation of Automatic Control,
2008, pp. 4380–4386.
[24] IEC 61025:2006, “Fault tree analysis (FTA); German version
EN 61025:2007,” August 2007.
[25] C.
Sondermann-W¨olke,
J.
Geisler,
M.
Hirsch,
and
T. Hemsel, “Verl¨asslichkeit im aktiven selbstoptimierenden
Spurf¨uhrungsmodul eines schienengebundenen Fahrzeugs,”
in
6.
Paderborner
Workshop
Entwurf
mechatronischer
Systeme, Apr. 2-3, 2009, 2009, pp. 231–243.
74
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

