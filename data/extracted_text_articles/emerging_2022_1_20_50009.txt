Calculations of the Packet Loss Ratio in Finite-Buffer Queues
Andrzej Chydzinski and Blazej Adamczyk
Department of Computer Networks and Systems
Silesian University of Technology
Gliwice, Poland
email: andrzej.chydzinski@polsl.pl
Abstract—In most packet networks and the Internet, packets
are queued at routers’ output interfaces before being sent to next
nodes. As the buffers for these queues are ﬁnite and the incoming
trafﬁc is unpredictable, with possible bursts, a fraction of arriving
packets is lost, due to the buffer overﬂow. The packet loss ratio
is thus one of the most important performance characteristics,
widely studied via actual network measurements, simulations and
mathematical modeling. The purpose of this paper is to discuss
the methods of computing the loss ratio using queueing models
and to collect the results obtained via the empty queue probability
method. Various queuing models are taken into account, with
general service time distribution and different assumptions on
the arrival stream (Poisson, group structure, autocorrelated).
Index Terms—Internet, performance evaluation, packet losses,
queueing model, loss ratio
I. INTRODUCTION
Contemporary networks are usually organized according to
the ”best effort” concept, which means that there is no resource
reservation on the path from the sender to the destination.
Moreover, statistical multiplexing of streams of packets in
routers causes occasional bursts of trafﬁc arriving to routers’
output interfaces. As a consequence, the buffer of the interface
is overﬂowed for some time, and the newly arriving packets
are lost. Obviously, these losses have a deep impact on
the performance of the network and the overall quality of
communication.
The single, most important characteristic describing packet
losses is the loss ratio, denoted herein by L. Obviously, L is
deﬁned as the number of packets lost at an interface, divided
by the total number of packets arriving to it in a long time
interval. The loss ratio and other characteristics of the loss
process have been widely studied using mathematical mod-
eling, (e.g., [1]–[9]), discrete-event simulators (like Omnet++
and Ns-3, [10], [11]) and actual network measurement (e.g.,
[12]–[18]).
In this paper, we deal with computations of the loss
ratio using analytical approach. As queues of packets at
routers’ output interfaces are simple single-server queues, the
appropriate analytical model is the classic queueing model
with the single service station and a ﬁnite buffer, possibly
with various assumptions on the arrival stream. In particular,
we are interested in M/G/1N, MX/G/1/N, MMPP/G/1/N and
BMAP/G/1/N queueing models, in Kendall’s notation.
The loss ratio in a queueing model can be computed using
direct and indirect methods. In the direct method, M(t) is
computed ﬁrst. It denotes the average number of losses in an
interval (0, t). Then, the loss ratio is obtained as a limit of
M(t) divided by the average number of packets arriving in
(0, t), which is equal to λt. We have:
L = lim
t→∞ L(t) = lim
t→∞
M(t)
λt ,
(1)
where λ is the intensity of the arrival process. For examples
of computations of the loss ratio using the direct method, the
reader is referred to [6]–[8]. The important advantage of this
method is that it gives not only the stationary characteristic,
L, but also its transient counterpart, L(t). Thus, the evolution
of the loss ratio in short time periods can be studied. However,
obtaining the distribution of M(t) may be not easy. This is an
important drawback of the method.
As an alternative to the direct method, the indirect method
based on the empty queue probability can be used. Let p0
denote the stationary probability that the queue is empty. It
is well-known that he following relation holds true (see, e.g.,
[1]):
L = ρ − ρ′
ρ
,
(2)
where ρ is the offered load of the queue and ρ′ is the carried
load of the queue. Moreover, we have:
ρ′ = 1 − p0.
(3)
Thus, from (2) and (3) it follows that L is simply a function
of p0 and ρ:
L = 1
ρ(ρ − 1 + p0).
(4)
Formula (4) is more friendly than (1), as it does not involve any
transient sub-characteristics. In addition to that, the stationary
distribution of the queue size, which contains p0, is one
of the most commonly studied and derived characteristics.
Therefore, several ready-to-use results for p0 are available in
the literature.
Moreover, formula (4) is general in the sense that it holds
for any type of the arrival process and service time distribution.
It holds also for more complicated packets dropping schemes,
like those based on the dropping function, [19], used in active
queue management. (For more information about active queue
management, see [20]–[22]) and the references given there).
Finally, it holds even in the case of the queue with vacations
(see e.g., [23]).
In the remaining sections, it will be shown how the loss
ratio can be calculated using known results on the empty queue
probability.
7
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

Namely, in Section II, the M/G/1/N model with Poisson
arrivals and general service times will be considered, while
in Section III – the MX/G/1/N model, with batch Poisson
arrivals and general service times. Then, Section IV will
be devoted to MMPP/G/1/N model, with autocorrelated ar-
rivals of Markov-modulated Poisson type. In Section V, the
BMAP/G/1/N model will be considered, with the most general
arrival process, incorporating both the autocorrelation and the
batch structure. In Section VI, two numerical examples will
be presented. Finally, in Section VII remarks concluding the
paper will be gathered.
II. LOSS RATIO IN THE M/G/1/N MODEL
In this model, the arrival stream is Poisson with intensity
λ. The service time has distribution function F(t), which is
not further speciﬁed, and the buffer size is N, including the
service position. The offered load of the system is:
ρ = λ
∫ ∞
0
tdF(t).
The formula for p0 in this model can be taken, for instance,
from chapter 5 of [1]. Namely, we have:
p0 =
1
ρ ∑N−1
k=0 ξk + 1
,
(5)
where
ξ0 = 1,
ξ1 = 1 − a0
a0
,
(6)
ξk+1 = 1
a0
[
ξk −
k−1
∑
i=0
ak−i+1ξi − ak
]
,
k ≥ 1,
(7)
ak =
∫ ∞
0
e−λu(λu)k
k!
dF(u),
k ≥ 0.
(8)
Therefore, from (4) we obtain:
L = 1
ρ
[
ρ − 1 +
1
ρ ∑N−1
k=0 ξk + 1
]
,
(9)
which is easy to deal with in numerical calculations.
III. LOSS RATIO IN THE Mx/G/1/N MODEL
In this model, the arrival stream is batch Poisson with
intensity of batches equal to λ. The size of an arriving batch
has distribution {b1, b2, . . . , }, where bi denotes the probability
of a batch of size i. The service time has distribution function
F(t), which is not further speciﬁed, and the buffer size is N,
including the service position.
The offered load of the system is now:
ρ = λb
∫ ∞
0
tdF(t).
where b is the average batch size:
b =
∞
∑
k=1
kbk.
(10)
In section 5.6 of [1], it is shown that:
p0 =
π0
π0 + ρ/b,
(11)
where π0 is the stationary probability that the queue is empty
just after a packet departure.
The value of π0 can be calculated in the following way. Let
π∞
k
denote the probability that the system is empty just after
a packet departure in the MX/G/1 model, i.e., with inﬁnite
buffer. In [24], section III.2.3, it was shown that:
q(z) =
∞
∑
k=0
π∞
k zk = 1 − ρ
b
· (1 − b(z))f(λ − λb(z))
f(λ − λb(z)) − z
,
(12)
where
f(s) =
∫ ∞
0
e−stdF(t),
(13)
b(z) =
∞
∑
k=1
bkzk.
(14)
From (12), the values of π∞
k can be easily extracted using one
of the available methods for generating function inversion.
For instance, using the method of [25], we obtain:
π∞
k ≈
1
2klrk
[
a0(k, l, r) + (−1)kak(k, l, r)
+ 2
k−1
∑
j=1
(−1)jRe(aj(k, l, r))
]
,
(15)
with
aj(k, l, r) =
l−1
∑
n=0
e−πin/lq(reπi(n+lj)/lk),
and the following values of method parameters: l = 1, r =
10−4/k.
Finally, the value of π0 can be obtained from π∞
k
values,
namely:
π0 =
π∞
0
∑N−1
j=0 π∞
j
,
(16)
(see section 5.6 of [1]).
Therefore, from (4) we have:
L = 1
ρ
[
ρ − 1 +
π∞
0
π∞
0 + ∑N−1
j=0 π∞
j ρ/b
]
.
(17)
IV. LOSS RATIO IN THE MMPP/G/1/N MODEL
In this model, the arrival stream is the Markov-Modulated
Poisson Process (MMPP), [26]. The service time has distri-
bution function F(t), which is not further speciﬁed, and the
buffer size is N, including the service position.
The MMPP process is usually parametrized by two m ×
m matrices: Q, which is an inﬁnitesimal generator of a
continuous-time Markov chain, and
Λ = diag(λ1, . . . , λm),
(18)
where λi is a temporary arrival rate.
The important advantage of the MMPP process is that it
enables mimicking the shape of the autocorrelation function
8
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

of interarrival times, together with their marginal distribution
(see, e.g., [27]).
The average arrival intensity for MMPP is:
λ = πΛ1,
(19)
where
1 = (1, . . . , 1)T
(20)
and π is the stationary vector for matrix Q, i.e., such that:
πQ = (0, . . . , 0),
π1 = 1.
(21)
Therefore, the load of the system equals:
ρ = πΛ1
∫ ∞
0
tdF(t).
(22)
The MMPP trafﬁc has the following characteristics. The k-
th moment of the interarrival time is equal to:
mk(Ti) = k! p (Λ − Q)−(k+1)Λ · 1,
(23)
while the variance of the interarrival time:
V ar = m2(Ti) − 1
λ2 .
The k-lag autocorrelation of interarrival times equals:
Corr(k) = Cov(k)
V ar
,
with
Cov(k) =p (Λ − Q)−2Λ
[(
(Λ − Q)−1Λ
)k−1
− 1 p
]
(Λ − Q)−2Λ 1,
where
p = 1
λπΛ.
Finally, the generating function for the counting function is
equal to:
P ∗(z, t) = e(Q−(1−z)Λ)t,
|z| ≤ 1,
(24)
where
P ∗(z, t) =
∞
∑
n=0
P(n, t)zn,
and Pi,j(n, t) = P(N(t) = n, J(t) = j|N(0) = 0, J(0) = i)
is the counting function for the MMPP, N(t) is the number of
arrivals in interval (0, t] and J(t) is the state of the modulating
chain at time t.
In what follows, we will use the following matrices of size
m × m:
0 = [0]i,j ,
I = identity matrix,
Ak(s) =
[∫ ∞
0
e−stPi,j(k, t)dF(t)
]
i,j
,
An(s) =
∞
∑
k=n
Ak(s),
Bn(s) = An+1(s) − An+1(s)(A0(s))−1,
Z(s) =
[ Qij(1 − δij)
s + λi − Qii
]
i,j
,
E(s) =
[
Λij
s + λi − Qii
]
i,j
,
R0(s) = 0,
R1(s) = A−1
0 (s),
Rk+1(s) =R1(s)(Rk(s)−
k
∑
i=0
Ai+1(s)Rk−i(s)), k ≥ 1,
where δij is the Kronecker symbol.
In [28], it was shown that:
p0 = lim
s→0+ sϕN(s),
(25)
where
ϕN(s) = M −1
N (s)lN(s),
(26)
and
MN(s)
= (I − Z(s))[RN+1(s)A0(s) +
N
∑
k=0
RN−k(s)Bk(s)]
− E(s)[RN(s)A0(s) +
N−1
∑
k=0
RN−1−k(s)Bk(s)],
(27)
lN(s) = E(s)
N−1
∑
k=0
RN−1−k(s)gk(s)
− (I − Z(s))
N
∑
k=0
RN−k(s)gk(s) + z(s),
(28)
gk(s) = Ak+1(s)(A0(s))−1rN(s) − rN−k(s),
rn(s)= (rn,1(s), . . . , rn,m(s))T ,
rn,i(s)=



0 if
n > 0,
∑m
j=1 d0,i,j(s) if n = 0,
dk,i,j(s) =
∫ ∞
0
e−stPi,j(k, t)(1 − F(t))dt,
z(s)=((s + λ1 − Q11)−1, . . . , (s + λm − Qmm)−1)T.
It must be stressed that all the aforementioned functions and
matrices can be computed numerically. In particular, the most
9
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

demanding Ak(s) and dk,i,j(s) can be obtained using the well-
known uniformization method (see, e.g., [29]). In particular,
we can obtain the following formulas for Ak(s) and Dk =
[dk,i,j(s)]i,j:
Ak(s) =
∞
∑
j=0
Kk,j
∫ ∞
0
e−(θ+s)t(θt)j
j!
dF(t),
Dk(s) =
∞
∑
j=0
Kk,j
∫ ∞
0
e−(θ+s)t(θt)j
j!
(1 − F(t))dt,
where
K0,0
=
I,
Kn,0
=
0,
n ≥ 1,
K0,j+1
=
K0,j(I + θ−1(Q − Λ)),
Kn,j+1
=
θ−1ΛKn−1,j + Kn,j(I + θ−1(Q − Λ)),
θ = max
i {(Λ − Q)ii}.
All the remaining quantities are simple functions of Ak(s),
dk,i,j(s) and system parameters. Thus, (4) and (25) yield:
L = 1
ρ
[
ρ − 1 + lim
s→0+ sM −1
N (s)lN(s)
]
.
(29)
where M −1
N (s) and lN(s) can be effectively computed from
(27) and (28).
V. LOSS RATIO IN THE BMAP/G/1/N MODEL
In this model, the arrival stream is the Batch Markovian
Arrival Process (BMAP), [29]–[31]. The service time has
distribution function F(t), which is not further speciﬁed, and
the buffer size is N, including the service position.
The BMAP process is a 2-dimensional Markov process
(N(t), J(t)) on the state space {(i, j) : i ≥ 0, 1 ≤ j ≤ m}
with an inﬁnitesimal generator Q in the form:
Q =


D0
D1
D2
D3
· ·
D0
D1
D2
· ·
D0
D1
· ·
·
· ·

 ,
where Dk, k ≥ 0, are matrices of size m×m, D0 has nonneg-
ative off-diagonal elements and negative diagonal elements,
Dk, k ≥ 1, are nonnegative, and the sum
D =
∞
∑
k=0
Dk
(30)
is an irreducible inﬁnitesimal generator.
The arrival intensity is equal to:
λ = π
∞
∑
k=1
kDk1,
(31)
where π is the stationary vector fulﬁlling equations:
πD = (0, . . . , 0),
π1 = 1.
(32)
Therefore, the system load is now:
ρ = π
∞
∑
k=1
kDk1
∫ ∞
0
tdF(t).
(33)
The BMAP process has very powerful modeling capabil-
ities. It not only enables mimicking the shape of the auto-
correlation function of interarrival times together with their
marginal distribution (as in MMPP), but also many other
properties, like the batch structure and the correlation between
the current intensity and the batch size.
The BMAP process has the following characteristics. The
intensity of arrivals of batches is:
λg = π(−D0)1,
while the average batch size:
η = λ
λg
.
The variance of the time between consecutive batches is:
V ar = − 2
λg
πD−1
0 1 − 1
λ2g
;
while the k-lag autocorrelation of interarrival times (for
batches):
Corr(k) = p D−1
0 C(Ck−1 − 1 p)D−1
0 C 1/V ar,
where
C = −D−1
0 (D − D0),
and p is a vector fulﬁlling the system:
p(C − I) = (0, . . . , 0),
p 1 = 1.
Finally, the generating function for the counting function is:
P ∗(z, t) =
∞
∑
n=0
P(n, t)zn = eD(z)t,
with
D(z) =
∞
∑
k=0
zkDk,
|z| ≤ 1.
For the BMAP/G/1/N queueing model, it was proven in [32]
that:
p0 = lim
s→0+ sφN(s),
(34)
where
φN(s) = H−1
N (s)mN(s, l),
(35)
and
HN(s) =RN+1(s)A0(s) +
N
∑
k=0
RN−k(s)Bk(s)
−
∞
∑
k=N+1
Yk(s),
(36)
10
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

mN(s) =
N
∑
k=0
YN−k(s)
k
∑
i=0
Rk−i(s)gi(s)
−
N
∑
k=0
RN−k(s)gk(s) + y(s),
(37)
Yk(s) =
[λipi(k, j)
s + λi
]
i,j
,
λi = −(D0)ii,
1 ≤ i ≤ m,
pi(0, i) = 0,
0 ≤ i ≤ m,
pi(0, k) = 1
λi
(D0)ik,
1 ≤ i, k ≤ m,
k ̸= i,
pi(j, k) = 1
λi
(Dj)ik,
1 ≤ i, k ≤ m,
j ≥ 1,
y(s)=((s + λ1)−1, . . . , (s + λm)−1)T ,
and the remaining functions, i.e., Ak, Ak, Bk, Rk, gk and rk
are deﬁned in the same way as in the previous section.
Again, all the needed quantities can be computed numer-
ically using the uniformization method of [29]. Namely, the
following formulas for Ak(s) and Dk = [dk,i,j(s)]i,j can be
obtained for the BMAP process:
Ak(s) =
∞
∑
j=0
Kk,j
∫ ∞
0
e−(γ+s)t(γt)j
j!
dF(t),
Dk(s) =
∞
∑
j=0
Kk,j
∫ ∞
0
e−(γ+s)t(γt)j
j!
(1 − F(t))dt,
where
K0,0
=
I,
Kn,0
=
0,
n ≥ 1,
K0,j+1
=
K0,j(I + γ−1D0),
Kn,j+1
=
γ−1
n−1
∑
i=0
Ki,jDn−i + Kn,j(I + γ−1D0).
γ = max
i {(−D0)ii},
Finally, from (4) and (34) we obtain:
L = 1
ρ
[
ρ − 1 + lim
s→0+ sH−1
N (s)mN(s)
]
,
(38)
where H−1
N (s) and mN(s) can be effectively computed from
(36) and (37).
VI. EXAMPLES
We will present now two examples, devoted to MMPP and
BMAP trafﬁc, respectively. In both examples the buffer size
will be N = 40.
A. MMPP example
In this example, we assume constant service time equal to
1 and use MMPP parameters obtained in [33], namely:
Λ =
[ 1.0722
0
0
0.48976
]
,
(39)
Q =
[ −8.4733 · 10−4
8.4733 · 10−4
5.0201 · 10−6
−5.0201 · 10−6
]
.
(40)
Firstly, by means of (21) we can compute the stationary
vector for matrix Q. We obtain:
π = (0.005889, 0.994110).
Then, using (19), we obtain the arrival rate and the load:
λ = ρ = 0.493190.
Exploiting (25) with s = 10−9, we can calculate the empty
queue probability:
p0 = 0.507129.
Finally, from (29) we obtain the loss ratio:
L = 0.0006493.
B. BMAP example
In this example, we assume contant service time equal to
0.1 and use BMAP parameters from [34], i.e.:
D0 =


−45.5935855
1.95261616
0.19526161
0.01952616
−4.55935855
0.19526161
0.00195261
0.01952616
−0.45593586

 ,
D2 =


0.06508720
0.52069762
5.20697622
0.52069762
0.00065087
0.05792761
0.05076801
0.00650872
0.00065087

,
D4 =


0.06508720
0.52069762
5.20697622
0.52069762
0.00065087
0.05792761
0.05076801
0.00650872
0.00065087

 ,
D8 =


0.35797962
2.86383692
28.6383692
2.86383692
0.00357979
0.31860186
0.27922410
0.03579796
0.00357979

 .
Firstly, using (32) we can calculate the stationary vector for
matrix D = D0 + D2 + D4 + D8. We get:
π = (0.010598, 0.028056, 0.961345).
Then, using (31), we can compute the arrival rate:
λ = 6.666666.
Therefore, from (33) it follows that:
ρ = 0.666666.
Using (34) with s = 10−9, we can obtain the empty queue
probability:
p0 = 0.377399.
Finally, from (38) we obtain the loss ratio:
L = 0.066099.
11
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

VII. CONCLUSIONS
In this paper, the methods of computing the loss ratio in the
single-server queueing model were discussed and the formulas
for the loss ratio obtained via the empty queue probability were
collected. Various queuing models were taken into account,
with general service time distribution and different assump-
tions on the arrival stream. Namely, the following models
were considered: M/G/1N, MX/G/1/N, MMPP/G/1/N and
BMAP/G/1/N. This allows the reader to choose an appropriate
model, depending on the assumptions on the trafﬁc in the
considered network.
ACKNOWLEDGEMENT
This research was funded by National Science Centre,
Poland, grant number 2020/39/B/ST6/00224.
REFERENCES
[1] H. Takagi, “Queueing analysis - Finite Systems”, North-Holland Amster-
dam, (1993.
[2] H. Sheng and S. Li, “Spectral analysis of packet loss rate at a statis-
tical multiplexer for multimedia services”, IEEE/ACM Transactions on
Networking, vol. 2, issue 1, pp. 53–65, 1994.
[3] F. N. Gouweleeuw, “The loss probability in ﬁnite-buffer queues with
batch arrivals and complete rejection”, Probab. Eng. Inform. Sci., vol. 8,
pp. 221–227, 1994.
[4] P. Dube, O. Ait-Hellal and E. Altman, “On loss probabilities in presence
of redundant packets with random drop”, Performance Evaluation 53(3-
4), pp. 147–167, 2003.
[5] D. Fiems and H. Bruneel, “On the packet loss process at a network node”,
Lecture Notes in Computer Science 4003, pp. 11–20, 2006.
[6] A. Chydzinski, R. Wojcicki and G. Hryn, “On the Number of Losses
in an MMPP Queue”, Lecture Notes in Computer Science, vol. 4712,
pp. 38–48, 2007.
[7] A. Chydzinski, “Packet Loss Process in a Queue with Markovian Ar-
rivals”, Proc. of International Conference on Networking ’08, pp. 524-
529, Cancun, April 2008.
[8] A. Chydzinski and B Adamczyk, “Transient and stationary losses in
a ﬁnite-buffer queue with batch arrivals”, Mathematical Problems in
Engineering, vol. 2012, ID 326830, pp. 1–17, 2012.
[9] M. Bratiychuk and A. Chydzinski, “On the loss process in a batch arrival
queue”, Applied Mathematical Modelling, vol. 33, Iss. 9, pp. 3565–3577,
2009.
[10] https://omnetpp.org/, accessed 21 August 2022.
[11] https://www.nsnam.org/, accessed 21 August 2022.
[12] I. Cidon, A. Khamisy and M. Sidi, “Analysis of packet loss processes
in high-speed networks”, IEEE Transactions on Information Theory vol.
39, no. 1, pp. 98–108, 1993.
[13] P. Benko and A. Veres, “A passive method for estimating end-to-end TCP
packet loss”, Proc. of IEEE GLOBECOM’02, pp. 2609–2613, 2002.
[14] J. Bolot, “End-to-end packet delay and loss behavior in the Internet”,
Proc of ACM SIGCOMM’93, pp. 289–298, 1993.
[15] M. Coates and R. Nowak, “Network loss inference using unicast end-to-
end measurement”, Proc. of ITC Conference on IP Trafﬁc, Measurement
and Modeling, pp. 282–289, 2000.
[16] N. Dufﬁeld, F. L. Presti, V. Paxson and D. Towsley, “Inferring link loss
using striped unicast probes”, Proc. of IEEE INFOCOM’01, pp. 915–923,
2001.
[17] J. Sommers, P. Barford, N. Dufﬁeld and A. Ron, “Improving accuracy
in end-to-end packet loss measurement”, ACM SIGCOMM Computer
Communication Review, vol. 35(4), pp. 157–168, 2005.
[18] M. Arai, A. Chiba and K. Iwasaki, “Measurement and modeling of burst
packet losses in Internet end-to-end communications”, Proc. of Paciﬁc
Rim International Symposium on Dependable Computing, pp. 260–267,
1999.
[19] A. Chydzinski and P. Mrozowski, “Queues with dropping functions and
general arrival processes”, PLoS ONE 11(3), pp. 1–23, 2016.
[20] L. Chrost and A. Chydzinski, “On the deterministic approach to active
queue management”, Telecommunication Systems 63(1), pp. 27–44,
2016.
[21] L. Chrost, A. Brachman and A. Chydzinski, “On the performance of
AQM algorithms with small buffers”, Communications in Computer and
Information Science 39, pp. 168–173, 2009.
[22] L. Chrost and A. Chydzinski, “On the Evaluation of the Active Queue
Management Mechanisms”, Proc. of International Conference on Evolv-
ing Internet (INTERNET’09), pp. 113-118, Cannes, August 2009.
[23] A. Chydzinski and B. Adamczyk, “Analysis of a scheduler for virtu-
alization of links with performance isolation”, Applied Mathematics &
Information Sciences 8, No. 6, pp. 2653-2666, 2014.
[24] J. W. Cohen, “The Single Server Queue. Revised edition”, North-
Holland Publishing Company, Amsterdam, 1982.
[25] J. Abate, G. L. Choudhury and W. Whitt, “An introduction to numerical
transform inversion and its application to probability models”, Chapter
in Computational Probability, pp. 257–323, W. Grassman (ed.), Kluwer,
Boston, 2000.
[26] Fischer W. and Meier-Hellstern K. “The Markov-modulated Poisson
process (MMPP) cookbook”, Performance Evaluation 18, No.2, 149–171,
1992.
[27] P. Salvador, R. Valadas and A. Pacheco, “Multiscale Fitting Procedure
Using Markov Modulated Poisson Processes”, Telecommunication Sys-
tems 23:1-2, pp. 123–148, 2003.
[28] A. Chydzinski, “Transient Analysis of the MMPP/G/1/K Queue”,
Telecommunication Systems, vol. 32, no. 4, pp. 247–262, 2006.
[29] D. M. Lucantoni, “New results on the single server queue with a batch
Markovian arrival process”, Commun. Stat., Stochastic Models 7, no. 1,
pp. 1–46, 1991.
[30] D. M. Lucantoni, G. L. Choudhury and W. Whitt, “The transient
BMAP/G/1 queue”, Commun. Stat., Stochastic Models 10, no. 1, pp. 145-
182, 1994.
[31] D. M. Lucantoni, “Further transient analysis of the BMAP/G/1 queue”,
Commun. Stat., Stochastic Models 14, no. 1-2, pp. 461–478, 1998.
[32] A. Chydzinski, “Queue Size in a BMAP Queue with Finite Buffer”,
Lecture Notes in Computer Science, vol. 4003, pp. 200–210, 2006.
[33] A. Baiocchi and N. Blefari-Melazzi, “Steady-state analysis of the
MMPP/G/1/K queue”, IEEE Trans. Commun. 41, no. 4, pp. 531–534,
1992.
[34] A. Chydzinski, “Burst ratio for a versatile trafﬁc model”, PLoS ONE
17(8): e0272263, 2022.
12
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-993-5
EMERGING 2022 : The Fourteenth International Conference on Emerging Networks and Systems Intelligence

