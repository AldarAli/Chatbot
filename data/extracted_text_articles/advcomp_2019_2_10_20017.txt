Code Verification of PECM with Strongly Discontinuous Flows
Zhibo Ma
Institute of Applied Physics and Computational Mathematics
Beijing, China
e-mail: mazhibo@iapcm.ac.cn
Abstract—The simulation of compressible flows with strong
discontinuities is necessary to verify meshfree methods. In
order to eliminate inconsistencies between mathematics and
physics of existing meshfree methods exposed especially when
discontinuities exist,
a
different
set
of
kernel
functions,
modularizing factors and discrete equations is put forward by
a new meshfree method named Physics Evoked Cloud Method
(PECM). In this paper, PECM is briefly introduced and is
verified by posteriori assessments based on comparisons
between numerical and exact solutions. The assessments show
that PECM has overcome shortcomings of existing meshfree
methods and is able to accommodate various kinds of strong
discontinuities including large density ratio, from which we see
that PECM has an excellent robustness and a high accuracy.
Keywords—PECM; RKPM; meshfree method; code verification.
I.
INTRODUCTION
The ability and accuracy of numerical computation are
the most important credibility indices for modeling and
simulations [1][2]. For discontinuous problems such as
shock waves or contact between different materials, spatial
derivatives of pressure, density, and velocity etc. may not
exist. Consequently the numerical methods are usually
constructed according to the ideas put forwarded by Von
Neumann or Godunov [3][4]. Neumann method captures
physical discontinuities by adding artificial viscosity terms,
whereas Godunov method does that by Riemann solutions.
In this paper, we call the artificial terms modularizing factors
in simulations, as they represent the microscopic phenomena
through physical quantities corresponding to macroscopic
discrete bodies and time steps.
As a purely Lagrangian meshfree method, Smoothed
Particle Hydrodynamics (SPH) based on Neumann idea has
undergone a long-term development and has earned very
wide attentions [5][6]. Since it was put forward in 1977,
efforts have been made to improve its accuracy, therefrom
some derivative methods of SPH were proposed, such as
Reproducing Kernel Particle Method (RKPM), Corrective
Smoothed Particle Method (CSPM) and Modified Smoothed
Particle Hydrodynamics (MSPH) [7]-[9]. Unfortunately,
SPH and its derivative methods narrated above still display
obvious shortcomings especially when they are applied in
dynamic problems where strong discontinuities exist.
According to the idea of Taylor’s series expansion, an
arbitrary function can be approximated by polynomials. As
the polynomial and its derivative are easily to be constructed,
correction functions formed as polynomial
have been
generally used to modify the kernel functions of SPH. All the
derivative methods including RKPM, CSPM, and MSPH use
this mechanism to improve the accuracy of kernel estimation.
However,
these
improvements
originated
just
from
mathematical ideas, so the physics laws have not been fully
reflected by the numerical algorithms. For problems such as
explosions or impacts with multi-materials, in which many
kinds of discontinuity exist, these improvements are not
remarkable, and the meshfree simulations are still difficult to
avoid the large uncertainties, numerical oscillations or even
nonphysics solutions.
In order to eliminate the deficiencies firmly tangled in the
existing
meshfree
methods
and
greatly
enhance
the
adaptability of numerical method, the author of this paper
proposed a new method named Physics Evoked Cloud
Method (PECM) and developed a software named How Are
Universes Cuddling (HAUC) based on PECM [10]-[14]. In
fact, PECM is a meshfree hierarchical methodology built
according to the classification of multifarious materials.
PECM has no specific restriction on the approach of
meshfree
approximation
but
six
principles
should
be
generally satisfied, one of which says that PECM should
correctly reflect objective physics laws. At present, PECM
temporarily use the approach of kernel approximation but the
numerical algorithms were rearranged deeply in order to
satisfy its general principles.
In this paper, RKPM is selected as a representative of
SPH and its derivative methods. Preceding with description
of governing equations and time stepping scheme in section
II, RKPM and PECM for fluid dynamics are briefly
described in section III and section IV. Section V addresses
code verification aims to assess the credibility of PECM by a
posteriori approach. Section VI gives conclusions and the
article is closed with an acknowledgement. All the numerical
and exact results were produced by HAUC.
II.
GOVERNING EQUATIONS AND TIME STEPPING
SCHEME FOR SIMULATIONS
For fluid flows without external force, heat conduction
and physics viscosity, the Lagrangian forms of differential
governing equations are:
Mass
  v

t
ρ
d
d

Momentum
p
t

 

1
d
dv
(2)
Energy
 v


p
t
e
d
d
(3)
Where ρ, v, p, e and t indicate density, velocity, pressure,
internal energy and time, respectively.
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences

During the time stepping as solving the unsteady flows
corresponding (1) – (3), a two-step scheme consists of
prediction and correction is adopted as in (4) – (5).
Prediction:


n
n
n
/ t
t
.
d
d
0 5
2
1







(4)
Correction:


2
1
1
d
d


 

n
n
n
/ t
t



(5)
Where  generally refers to ρ, e, v, r, h, and r is the position
coordinates of discrete body, h is smoothing length for kernel
approximation. By sound speed c and a factor τ related to
CFL conditions, we have time step

 v 
 
h / c
t

, and p is
obtained via equation of state

e, 
p
p


in each time step.
In this paper, the numerical simulations with RKPM or
PECM are all based on the governing equations and time
stepping scheme narrated above.
III.
DESCRIPTION OF RKPM
The ideas and schemes of RKPM are as follows.
A.
Kernel Estimation
Kernel estimation of SPH for an arbitrary function
 r
f
can be described as
 
 







r
r
r
r
r
d
(SPH)
, h
W
f
f
 
-
(6)
Where

, h
W
r - r  

(SPH)
is a compact kernel function with its
support domain Ω and smoothing length h. r and
dr
are
respectively, the coordinates and volume of discretized
micro-bodies, which is centered by coordinates r in Ω. With
integration by part and Gaussian formula, estimations of
derivatives can be shifted to the kernel function, such as
 
 

 r
r
r
f r
r
f
r


 



d
,
SPH
h
W
 
-
）
（
(7)
Where the operator
r
represents the derivation with r .
RKPM has inherited all the SPH algorithms except the
kernel function, which is corrected as





h
h W
C
h
W
 
-
 
-
 
-
,
,
,
(SPH)
(RKPM)
(RKPM)
r
r
r
r
r
r




(8)
Briefly noting
j
i
ij
r
r
r


and
jb the volume of particle j,
the
cn -order correction

i 
ij
ij
, h
C
C
 
r
(RKPM)
(RKPM) 
in form of
polynomial is solved by the consistency conditions as
 1


N
j
ij
j ij
W
C
b
1
(SPH)
(RKPM)
(9)
 0


k
ij
N
j
ij
j ij
W
b C
r
1
(RKPM) (SPH)
,
c
2
1
n
,
,
k


(10)
B.
Modularizing Factors
Modularizing factors of RKPM are the same of those in
SPH, such as artificial pressure












0
0
0
)
(
2
SPH
ij
ij
ij
ij
ij
ij
ij
ij
ij
/
c
Π
r
v
r
v


 
(11)
And artificial heat flux is












0
0
0
)
(
)
(
2
2
2
SPH
ij
ij
ij
ij
ij
ij
ij
ij
j
i
ij
ij
h
e
e
r
v
r
v
r
r
H



(12)
Where particle j is in the support domain
i
of particle i,
and
j
i
ij
v
v
v


,

 2
/
h
h
h
j
i
ij


,

 2
c /
c
c
j
i
ij


,

 2
/
j
i
ij





,
)
(
2
2
ij
ij
ij
ij ij
ij
h
h





r
v r
,

 2
/
j
i
ij





,

v
v
  
 


2
2
1
g h
g hc

,
 ,  , , ,
1
g ,
g2
are constants.
C.
Discrete Equations
The standard discrete equations of RKPM for mass,
momentum and energy, are written in (13) – (15).
(RKPM)
1
d
d
ij
i
ij
N
j
j
i
W
m
t



v

(13)


)
(RKPM
SPH
2
2
1
d
d
ij
i
ij
j
j
i
i
N
j
j
i
W
Π
p
p
m
t









 



v
(14)




(RKPM)
SPH
SPH
2
2
2 1
1
d
d
ij
i
ij
ij
ij
j
j
i
i
N
j
j
i
W
Π
p
p
m
t
e


















 

H
v


(15)
Where

i 
ij
ij
h,
W
W
r
(RKPM)
(RKPM) 
, N is the total particle number
in
i
 , the operator
i
 means the derivation with
ir .
IV.
DESCRIPTION OF PECM
The ideas and schemes of PECM are as follows.
A.
Kernel Estimation
PECM calls the micro-body as cloud other than particle
in SPH, and uses a new kernel for momentum equation as





, h
, h W
C
, h
W
 
-
 
-
 
-
r
r
r
r
r
r




(SPH)
(PECM)
(PECM)
(16)
The correction
(PECM)
Cij
observes new consistencies
1


N
j
ij
ij
j
j
W
C
b
1
(SPH)
(PECM)

(17)
 0


k
ij
N
j
ij
ij
j
j
W
C
b
r
1
(SPH)
(PECM)

,
c
2
1
n
,
,
k


(18)
B.
Modularizing Factors
PECM has two pressure factors as












0
0
0
)
(
2
PECM
1
ij
ij
ij
ij
ij
ij
ij
ij
,
ij
c
Π
r
v
r
v


 
(19)












0
0
0
)
(
2
PECM
2
ij
ij
ij
ij
ij
ij
ij
ij
,
ij
ˆ
c
Π
r
v
r
v


 
(20)
The heat flux factor is modified as












0
0
0
)
(
2
2
PECM
ij
ij
ij
ij
ij
ij
ij
j
i
ij
ij
ij
h
e
e
r
v
r
v
r
r
H

 
(21)
A new velocity factor is leaded in as


ij
ij
ij
ij
ij
j
i
ij
ij
/ c /
h
/
p
p
h



)
(
)
(
2
2
PECM



r
r
Φ
(22)
Here  ,  ,
ijc ,
 ij
,
ijh ,
ij
 ,
 ij
are the same in SPH,
 , are constants and
)
(
j
i
j
i
ij
/
ˆ


 



.
C.
Discrete Equations
The discrete equations of PECM for mass, momentum
and energy, are written in (23) – (25).


(RKPM)
(PECM)
1
d
d
ij
i
ij
ij
N
j
j
i
i
W
b
t


 

Φ
v


(23)
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences











N
j
ij
i
ij
j
j
i
W
Π
b p
t
1
(PECM)
PECM
1,
d
dv
(24)









(RKPM)
PECM
(PECM)
PECM
2
1
1
d
d
ij
i
ij
ij
ij
ij
i
N
j
j
i
i
W
Π
b p
t
e







H
Φ
v
，

(25)
D.
Better Consistencies with Physics
Aimed at essentially improving the consistencies of
mathematics
with
physics,
from
which
an
intensive
robustness and a high accuracy can be expected, the
numerical
scheme
of
PECM
has
been
reconstructed.
Comparing with SPH and its derivative methods, PECM has
three kinds of modifications such as:
1)
Kernel functions: Kernels for equations of mass and
energy keep unchanged, whereas for momentum equation, a
new kernel is introduced considering the harmonious
movements
of
the
material
cluster
comprised
of
neighbouring clouds, which may have great differences in
density with each other. In fact, there is an equation of strain
compatibility for continuous mediums, but it does not
appear in the governing equations. For mesh-based methods,
it is automatically observed as the moving of meshes is
dominated by nodes. For the existing meshfree methods like
SPH, the particles with smaller density have greater trend to
change their velocities than those with larger density, so the
equation of strain compatibility is easily to be destroyed
especially when strong gradients of density and pressure
exist. With the new kernel, containing density, PECM does
not update velocity of each cloud in an isolated manner, but
felicitously
reflets
the
moving
consistency
of
the
neighboring clouds, this may be the uppermost contribution
for PECM to have exellent performances in robustness and
accuracy.
2)
Modularizing factors: Being firstly created by PECM,
the velocity factor and the second pressure factor were
designated according to the laws of interaction between
clouds, in which the pressure and velocity should keep
continuity
macroscopically
and
the
impact
force
that
contribute to inner energy should be dominated mainly by
the matter with lower density. These two factors can
effectively
eliminate
the
nonphysics
results
such
as
numerical oscillations and wall heating.
3)
Discrete equations: In equations of mass and energy,
variables like mass, density and pressure of clouds are
withdrawed out of the acting domain of kernel operator.
This can help PECM to prevent numerical dissipations in
density or energy etc., and the numerical computations can
accurately predict the flow fields even they objectively have
very abrupt distributions in space.
V.
CODE VERIFICATION OF PECM
The code verification of PECM is depicted as follows.
A.
Techniques of Code Verification
Stability and accuracy are the most important concerned
of numerical methods. In code verification, we assess the
credibility of PECM with three modes: the first is to observe
the computing stability based on the dynamic videos formed
by numerical results at different times; the second is to
inspect the accuracy by comparison between numerical and
exact results, good agreement means high accuracy; the third
is to quantify the accuracy order based on the decreasing
trends of numerical errors when discrete scales diminish. As
the space limit, this paper just shows the agreements between
the numerical and exact results via static figures.
B.
Results of Code Verification
In this paper, five models are typically selected to exhibit
the advantages of PECM by comparing its numerical results
with those of RKPM and the exact solutions. The parameters
for initial states in entity models, physics models and
numerical computations
are listed in
Table
Ⅰ -
Ⅲ ,
respectively, where X is the initial discrete scale of clouds
and EOS is the abbreviation for equation of state. The
numerical results corresponding these parameters are showed
in Figure 1-5, where different colors are just used to help the
readers easily distinguishing the left or right district each
cloud belongs to.
Model 1 aims to verify if the codes are correctly
compiled. As all the left and right districts are of same
material forming a properly symmetric impact, this model is
fit to diagnose code bugs as it is not apt to deeply reveal
shortcomings of numerical methods. Figure 1 shows both
RKPM and PECM give results that generally agree with
exact results, but PECM is more accurate than RKPM,
especially in the space near impact interfaces where the
shock may lead to discontinuities in density and pressure.
Although discontinuity exists just in velocity, we can still
observe the deficiencies of RKPM from the numerical results,
in which the density decline induced by the wall heating
could not be compensated quickly, and the effect of energy
smearing
made
by
artificial
heat
flux
can
lead
to
overestimated energy
behind
the shock wave. In the
numerical results, we also see that the velocity factor in (22)
can help PECM to eliminate wall heating where strong
impact exists.
Model 2 corresponds to a state of dynamic equilibrium
and based on physics theory, this equilibrium will keep
unchanged forever. This model is built aiming to prove the
PECM kernel is more reasonable than RKPM kernel for
momentum equation and, the kernel approximation should
not act on mass, density and pressure in equations of mass
and energy like RKPM does. As the initial state has unified
distributions in pressure and velocity, there is no driving
force to make material accelerated, so the discontinuities
exist in density, energy and EOS can be used exclusively to
assess if the numerical schemes have the ability to restrain
the errors from generating and developing. Figure 2 shows
that PECM gives results free of any errors whereas RKPM
leads to illusive error waves.
Model 3 imitates a high pressure explosive impacting a
low pressure heavy metal, which is a typical situation in anti-
armor weapons or detonation systems especially when
nuclear fissions exist. In this model the initial ratio between
pressure and density, namely p0/0, is (3.51010)/(2.5103)=
21
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences

1.4107 for left district and 0/(2.0104) = 0 for right district,
the ratio of p0/0 between the two sides is 1.4107/0=. The
extremely large discrepancy of p0/  0 across the material
interfaces may induce severe instability for RKPM. We have
tried many ways to control the evolution of smoothing length
in RKPM but interface separation occurs inevitably. In
Figure 3 we can see the interface separation and very large
errors of RKPM, whereas PECM gives the results well
agreed with exact solutions. The new kernel for momentum
equation contributes the most to improve the stability and
accuracy of PECM; in addition, the modularizing factor for
velocity in (22) benefits the PECM to restrain the numerical
oscillations.
Model 4 imitates a high pressure heavy metal impacting a
low pressure thin gas, which is another typical situation in
detonation systems especially when nuclear fusions exist. In
this model the ratio of  0 between the two sides reaches
1.0105. The extremely strong discontinuity with density and
pressure calls out another baptism for meshfree methods. For
this model, RKPM is not able to keep the computation going
on as the acute numerical oscillation makes the density and
energy less than zero. The numerical results of RKPM in
Figure 4 were obtained by the help of artificial controls in
time steps and smoothing lengths. Despite the artificial
measures used by RKPM, the computation was still unstable
and many particles flew off the computational domain, and
that the particles left in the domain presented a disordered
distribution which implied very large deviations with exact
solutions. Simulations of this model are very difficult to keep
stable and accurate even for the numerical methods with
meshes, but PECM still exported results according well with
the exact solutions. Numerical tests of this model indicate
that the kernel function in (16) ensures PECM to be stable
and accurate, and the second pressure factor in (20) is
absolutely necessary to eliminate the nonphysics wall
heating especially when very large density ratio exists.
In Model 5, the discontinuity of the initial velocity makes
the materials of the two districts rapidly moving apart from
each other. As the velocities are high enough, the materials
are expanded entirely and vacuum occurs between the two
districts. Owing to instability, RKPM gives the results as in
Figure 5 by constraining the evolution of smoothing length
within 3 times the initial value, from which we still see the
large deviations with exact solutions, whereas PECM can
exactly predict the interface separation that exists in reality.
As the modularizing factors for pressure and heat flux do not
work in this situation, the reform of discrete equations, in
addition with the newly introduced kernel and velocity factor
may be the most important contributors for PECM to keep
excellent stability and accuracy.
Through a large number of numerical tests with various
models, we have got adequate evidences indicating that
PECM is of super stability and accuracy even with series
kinds of strong discontinuities and, the accuracy order is the
second for continuous models or lower than the first for most
discontinuous problems.
VI.
CONCLUSIONS
The deficiencies of SPH and its derivative methods may
be easily exposed when they are applied in the models with
strong detonations and shock waves. As there are no
concrete geometries of the discrete bodies in meshfree
methods, it is very difficult to construct mathematic schemes
which can sufficiently reach the physical mechanisms hided
between the discrete bodies disorderly scattered in space. So
it is very important to unearth these potential mechanisms
and reflect them in the meshfree numerical schemes.
The practice to add density into kernel function for
momentum equation may contribute the most for PECM to
make
clouds
moving
harmoniously,
and
this
is
very
important in developing meshfree schemes, for which no
vertexes of micro-bodies could be described to prevent the
undefined boundaries from splitting and overlapping.
The modularizing factors and the forms of discrete
equations in PECM also have great contributions for
computing stability and accuracy, which are designed
according
to
the
physical
mechanisms
apparently
or
recessively existed in the arbitrarily spread clouds which
have no perfect geometries.
The properties such as consistency, stability and accuracy
are usually difficult to be theoretically proved but, by
posteriori assessments in this paper, PECM has achieved
enough evidences for its excellent properties.
ACKNOWLEDGMENT
The author thanks CAEP Foundation (CX2019026) to
partially support the works in this paper.
TABLE I.
PARAMETERS FOR INITIAL STATES IN ENTITY MODELS
District
Model
Density/kg.m-3
Energy/J.kg-1
Pressure/Pa
Velocity/m.s-1
Left
1
2.500103
6.496106
3.5001010
1.500103
2
2.000103
5.000106
2.0001010
2.000103
3
2.500103
7.000106
3.5001010
0.000
4
2.00010-1
1.000107
1.000106
0.000
5
2.500103
6.496106
3.5001010
-7.000103
Right
1
2.500103
6.496106
3.5001010
-1.500103
2
2.000104
2.500105
2.0001010
2.000103
3
2.000104
0.000
0.000
0.000
4
2.000104
2. 500105
2.0001010
-1.500103
5
2.000103
2. 400106
2.5001010
7.000103
22
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences

TABLE II.
PARAMETERS OF PHYSICS MODELS
District
Model
EOS Form
c02/m2.s-2
ρ0/kg.m-3
γ
Left
1




2
0
0
1
p
c
e








3.600106
1.800103
3.000
2




2
0
0
1
p
c
e








2.250106
2.000103
3.000
3

1
p
e




0.000
0.000
3.000
4

1
p
e




0.000
0.000
1.500
5




2
0
0
1
p
c
e








3.600106
1.800103
3.000
Right
1




2
0
0
1
p
c
e








3.600106
1.800103
3.000
2




2
0
0
1
p
c
e








2.500107
2.000104
5.000
3




2
0
0
1
p
c
e








1.500107
2.000104
5.000
4




2
0
0
1
p
c
e








2.500107
2.000104
5.000
5




2
0
0
1
p
c
e








2.500106
1.600103
6.000
TABLE III.
PARAMETERS OF NUMERICAL COMPUTATIONS
X/mm
h0/mm
nc




g1
g2
η

θ
1.00
1.5
0.00
0.10
1.00
2.00
0.01
1.00
1.00
0.01
0.10
0.01
X(m)
Density(kg/m
3
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
2000
2500
3000
3500
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Energy(J/kg)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
5E+06
1E+07
1.5E+07
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Pressure(Pa)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0.0E+00
2.0E+10
4.0E+10
6.0E+10
8.0E+10
1.0E+11
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Velocity(m/s)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-2000
-1500
-1000
-500
0
500
1000
1500
2000
RKPM
PECM
Exact
Time = 50.00 s
Figure 1.
Numerical results about model 1.
X(m)
Density(kg/m
3)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
2000
4000
6000
8000
10000
12000
14000
16000
18000
20000
22000
24000
RKPM
PECM
Exact
Time = 50.00 s
Time = 100.00 s
X(m)
Energy(J/kg)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0.0E+00
1.0E+06
2.0E+06
3.0E+06
4.0E+06
5.0E+06
6.0E+06
RKPM
PECM
Exact
Time = 50.00 s
Time = 100.00 s
Time = 100.00 s
X(m)
Pressure(Pa)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
1E+10
2E+10
3E+10
4E+10
5E+10
RKPM
PECM
Exact
Time = 50.00 s
Time = 100.00 s
X(m)
Velocity(m/s)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
1900
1950
2000
2050
2100
RKPM
PECM
Exact
Time = 50.00 s
Time = 100.00 s
Figure 2.
Numerical results about model 2.
X(m)
Density(kg/m
3)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
2500
5000
7500
10000
12500
15000
17500
20000
22500
25000
27500
30000
RKPM
PECM
Exact
Nonphysics separation
Time = 50.00 s
X(m)
Energy(J/kg)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
5E+06
1E+07
1.5E+07
2E+07
2.5E+07
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Energy(J/kg)
0
0.1
0.2
0.3
0.4
-2.0E+05
-1.5E+05
-1.0E+05
-5.0E+04
0.0E+00
5.0E+04
1.0E+05
X(m)
Pressure(Pa)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
1E+11
2E+11
3E+11
RKPM
PECM
Exact
Time = 50.00 s
Time = 50.00 s
X(m)
Velocity(m/s)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-200
-100
0
100
200
300
400
500
RKPM
PECM
Exact
Time = 50.00 s
Figure 3.
Numerical results about model 3.
23
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences

X(m)
Density(kg/m
3)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-30000
-20000
-10000
0
10000
20000
30000
Density(kg/m
3)
RKPM
PECM
Exact
Time = 100.00 s
X(m)
Density(kg/m
3)
-0.75
-0.5
-0.25
0
-1.2
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
X(m)
Energy(J/kg)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-1E+08
-5E+07
0
5E+07
RKPM
PECM
Exact
Time = 100.00 s
X(m)
Energy(J/kg)
-0.25
0
0.25
0.5
0.75
1
2.1E+05
2.2E+05
2.3E+05
2.4E+05
2.5E+05
2.6E+05
X(m)
Pressure(Pa)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-5E+10
-4E+10
-3E+10
-2E+10
-1E+10
0
1E+10
2E+10
3E+10
RKPM
PECM
Exact
Time = 100.00 s
X(m)
Pressure(Pa)
-0.5
-0.25
0
0.25
0.5
0.75
1
-5.0E+12
0.0E+00
5.0E+12
1.0E+13
X(m)
Velocity(m/s)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-3000
-2000
-1000
0
1000
2000
3000
RKPM
PECM
Exact
Time = 100.00 s
Figure 4.
Numerical results about model 4.
X(m)
Density(kg/m
3)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
500
1000
1500
2000
2500
3000
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Energy(J/kg)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0.0E+00
1.0E+06
2.0E+06
3.0E+06
4.0E+06
5.0E+06
6.0E+06
7.0E+06
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Pressure(Pa)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
0
1E+10
2E+10
3E+10
4E+10
RKPM
PECM
Exact
Time = 50.00 s
X(m)
Velocity(m/s)
-1
-0.75
-0.5
-0.25
0
0.25
0.5
0.75
1
-10000
-8000
-6000
-4000
-2000
0
2000
4000
6000
8000
10000
RKPM
PECM
Exact
Time = 50.00 s
Figure 5.
Numerical results about model 5.
REFERENCES
[1]
W. L. Oberkampf and C. J. Roy, “Verification and validation
in
science
computing,”
Cambridge,
UK:
Cambridge
University Press, 2010.
[2]
Z. B. Ma, Y. T. Sun, and J. W. Yin, “QMU Decision based on
modeling & simulation,” Chinese Journal of Computational
Physics, vol. 33, no. 6, pp. 661-670, 2016.
[3]
J. VonNeumann and R. D. Richtmyer, “A method for the
numerical calculation of hydrodynamic shocks,” Journal of
Applied Physics, vol. 21, no. 3, pp. 232-237, 1950.
[4]
S.
K.
Godunov,
“A
finite
deference
method
for
the
computation of discontinuous solutions of the equations of
fluid dynamics,” Mathematics of the USSR-Sbornik, vol. 47,
pp. 357-393, 1959.
[5]
R. A. Gingold and J. J. Monaghan, “Smoothed particle
hydrodynamics: Theory and application to non-spherical
stars,” Monthly Notices of the Royal Astronomical Society,
vol. 181, no. 2, pp. 375-389, 1977.
[6]
L. B. Lucy, “A numerical approach to the testing of the
fission hypothesis,” Astronomical Journal, vol. 82, no. 12, pp.
1013-1024, 1977.
[7]
W. K. Liu, S. Jun, and S. F. Li, “Reproducing kernel particle
methods for structural dynamics,” International Journal for
Numerical Methods in Engineering, vol. 38, no. 10, pp. 1655-
1679, 1995.
[8]
J. K. Chen, J. E. Beraun, and C. K. Jih, “An improvement for
tensile instability in smoothed particle hydrodynamics,”
Computational Mechanics, vol. 23, no. 4, pp. 279-287, 1999.
[9]
G. M. Zhang and R. C. Batra, “Modified smoothed particle
hydrodynamics method
and
its application
to
transient
problems,” Computational Mechanics, vol. 34, no. 2, pp. 137-
146, 2004.
[10] Z. B. Ma, “Physics evoked cloud method: a versatile
systematic
method
for
numerical
simulations,”
Chinese
Journal of Computational Physics, vol. 34, no. 3, pp. 261-272,
2017.
[11] Z. B. Ma and Y. Z. Zhao, “Code verification of mesh free
method
with
computation
of
derivatives,”
Journal
of
Aerospace Power, vol. 32, no. 8, pp. 1886-1899, 2017.
[12] Z. B. Ma and Y. Z. Zhao, “Physics evoked cloud method,”
International Journal of Computational Method, vol. 15, no. 3,
pp. 1846006.1-1846006.20, 2018.
[13] Z. B. Ma and Y. Z. Zhao, “Verification and validation of
common
derivative
terms
approximation
in
meshfree
numerical scheme,” Journal of Applied and Computational
Mechanics, vol. 4, no. 3, pp. 231-244, 2018.
[14] Z. B. Ma, L. Shi, M. Yu, and H. Zheng, “Code verification of
physics
evoked
cloud
method
for
compressible
fluid
dynamics,” Journal of Aerospace Power, vol. 34, no. 6, pp.
1253-1272, 2019.
24
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-737-5
ADVCOMP 2019 : The Thirteenth International Conference on Advanced Engineering Computing and Applications in Sciences

