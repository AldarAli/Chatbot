Enhanced Survivable Topology Redesign of Optical Broadband Networks with
Biconnectivity
Rong Zhao
Detecon International GmbH
53227 Bonn, Germany
rong.zhao@detecon.com
Christian Minge
Dimension Data Germany AG&Co.KG
61440 Oberursel, Germany
christian.minge@eu.didata.com
Mathias Schweigel
Detecon International GmbH
01187 Dresden, Germany
mathias.schweigel@detecon.com
Abstract
This paper presents an efﬁcient strategy for the optimal
network redesign with a biconnectivity-oriented topology
(both edge and vertex biconnected). It helps re-designing
existing networks or generating new networks consider-
ing practically relevant constraints (such as leased lines
with long running contracts to remain, maximum number
of ports per device) typically found in these phases. The
proposed strategy is composed of Reduction, Augmentation,
and Fine-Tuning Reduction. Empirical tests using several
IP network topologies showed the robustness and applica-
bility of the method. Its application to other optical back-
bone (or access) network redesign problems is possible.
Keywords - Optical Networks, Redesign, Broadband
Networks, Survivability, Biconnectivity
1
Introduction
When designing/redesigning telecommunications net-
works, we have to face up to two opposing objectives:
high survivability and low costs.
The former leads to a
fully meshed topology (expensive and highly redundant),
whereas the latter results in a minimum spanning tree topol-
ogy (cheap with no redundancy). The main idea of this
approach is to redesign a network by retaining essential
network links (reduce network migration costs), improving
their utilization (but not to overload), and ensuring network
survivability. If necessary, only a few links are allowed to
be added into networks subject to minimum costs. Simul-
taneously, some constraints are considered, such as routing,
maximal hop number, and node degree. A part of this work
was presented at AICT2008 conference [1].
Some prior approaches addressed the topological de-
sign for backbone networks by [2][3][4][5][6] and access
networks by [7][8][9][10][11]. Generally, network struc-
tures are illustrated by hierarchical star-star, tree-star, or
mesh-star topology. Most of these optimization problems
are NP-hard [12]. Due to the complexity of the tasks dif-
ferent methodologies were investigated, such as the linear
programming, Simulated Annealing(SA), Tabu search(TS),
Genetic Algorithms(GA). A detailed formulation for gen-
eral network design problems with connectivity require-
ments was introduced in [13][14]. Furthermore, the net-
work redesign is discussed in [15][16].
IP networks reportedly suffer from node failures as fre-
quently as from link failures [17]. To avoid service degra-
dation (and related penalties) the design of reliable com-
munication networks is a signiﬁcant problem for network
providers. The general planning problem is ﬁnding the best
positions of components and their links subject to minimal
costs and a high reliability [18]. An essential summary of
approaches to different reliability problems, such as con-
strained reliability measures and reliability optimization, is
provided in [19]. A general deﬁnition of reliability of net-
work components is the probability that the network is func-
tioning [20]. In comparison with reliability, survivability
is to describe the resilient ability of networks when one or
more network components fails. More precisely, the surviv-
ability analysis is to make a conservative assumption of fail-
ures and study how to prevent them. Typical network sur-
vivability techniques are based on well designed networks
and network restoration [21][22], e.g. link restoration or
link/node protection.
A possible solution for the above mentioned design prob-
lem is a two-connected topology that can be described by
means of graph theory. Graph connectivity properties are
meaningful for transport network designs. In order to sur-
vive all single edge failures, a graph must be at least two-
edge connected. Furthermore, it has been shown that ev-
ery two-vertex connected graph is also two-edge connected,
while the reverse is not valid [23]. In this work a redesigned
network has to be at least two-vertex connected. In the fol-
lowing we characterize the two-vertex connected graph as
biconnected graph.
The proposed strategy for network topology redesign to
1
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

improve network reliability and to ﬁnd out a cost-effective
structure is composed of three parts: Reduction, Augmen-
tation and Fine-Tuning Reduction. An approximation algo-
rithm for the Augmentation problem was introduced in 1981
in [24]. In 1993 another heuristic for the same problem with
better time complexity was proposed in [25]. Later, this ap-
proach has been improved [26] and it has been solved by
applying a Genetic Algorithm [27]. In [28] Hackbarth et
al. introduced a heuristic that covered the whole problem of
telecommunications network design from a totally meshed
network to a two-edge connected topology solving the Re-
duction and Augmentation problem. This contribution ex-
tended their approach:
• The problem is extended to a two-vertex connected
topology;
• An additional step is proposed to remove redundant
edges through (Fine-Tuning Reduction) for the ﬁnal
solution set;
• Time complexity and efﬁciency of the Augmenta-
tion are improved by applying a modiﬁed Depth First
Search (DFS)[29] and classifying the candidate edges
before Augmentation;
• Links are classiﬁed for efﬁcient manipulation of the
optimization considering practically relevant network
optimization constraints.
The paper is organized as follows: ﬁrstly, it provides a
mathematical formulation of the considered problem and
a discussion of the related work. In terms of biconnectiv-
ity, several relevant concepts of graph theory are introduced
and analyzed. Next, a detailed description of the algorithm
is given. Furthermore, the efﬁciency of algorithm by means
of the presentation of optimization results of AT&T back-
bone network and G-WiN network is shown. Finally, some
parameters of the redesign algorithm are analyzed.
2
Problem Statement
2.1
Objective Function
The existing telecommunications network can be de-
scribed as an undirected Graph G(V, E, W) with node v ∈
V , edge e ∈ E and weight w ∈ W. The weight W is a
problem-speciﬁc parameter. In this approach the weight of
edges is not the same for all calculation steps. For calculat-
ing network costs, it is based on bandwidth and length. But
for other redesign steps, different functions are deﬁned to
represent the weight of an edge. This will be discussed in
detail by the introduction of the redesign procedure.
The objective is to minimize total network costs by re-
designing the network structure.
Some links can be re-
moved or added to the network considering the given con-
straints at all the time. All network nodes are ﬁxed without
any change and their costs are ignored in this work. The
objective function is deﬁned as:
Cnet =

e∈E
xece
(1)
where e is an edge in E; xe is a binary variable to check if
edge e is accepted or not. ce is the leasing cost of edge e,
see Eq.2.
ce = f(le, μe) + Ce,k
(2)
where f(le, μe) is the leasing cost function of edge (optical
cable) e depending on edge length le and bandwidth (i.e.
capacity) μe. Ce,k is the ﬁxed cost for different edge (link)
types k in terms of bandwidth μe. A practical example will
be introduced in the section IV.
2.2
Constraints
A packet transmitted over an asynchronous, time–
multiplexed, packet switched network (like IP networks)
undergoes a queuing and serialization delay at the
end/beginning of a link (router entrance/exit respectively)
which depends on the link utilization [30][31]. Mean packet
delay depends on the trafﬁc rate λe and capacities of links
μe, i.e. utilization ρe = λe/μe. In this work the maximum
link utilization is taken as the ﬁrst constraint. Therefore,
we ﬁrstly study the relationship between link utilization and
delay. A number of systems models have been proposed
to describe different characterized IP networks in the last
years. Here each edge is modeled as an independent M/M/1
queuing system [32]. To apply this queueing model in this
work, the following assumptions are used: 1) each queue
has an exponentially distributed mean service time; 2) an
average arrival rate of new packets, which follows a Poisson
distribution; 3) the packet length is also exponentially dis-
tributed; 4) the network structure should have a ﬁxed rout-
ing, where the channels are error-free, etc. If mean packet
length is E[lP ], mean packet delay is derived as Eq.3.
tM/M/1 = E[lP ]
μe
·
1
1 − ρe
(3)
If ρe increases, mean packet delay will be incremented,
too. The maximum link utilization allows us to keep the
expected delay low.
The second constraint in this approach is the maximum
hop number between source and destination, which inﬂu-
ences delay, reliability and survivability of networks. The
hop number is given as number of links one packet has to
pass on its way from the source to the destination node. A
2
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

network solution is only valid, if the maximum hop number
is not exceeded by any relevant source-destination combi-
nation. Thus, by limiting the maximum number of used
edges per routed path an additional indirect constraint for
a low end-to-end delay is given. Generally, every link has
a certain reliability. By limiting the maximum hop number
also the end-to-end reliability is manipulated, because along
one path the single link reliabilities affect the total end-to-
end reliability. Moreover, too high hop number makes it
difﬁcult to apply some routing protocols, such as Distance-
vector Routing Protocol. The actual propagation delay on
the edges is not directly incorporated in the optimization al-
gorithm, which can be studied as further work.
In addition, the proposed algorithm also takes into ac-
count the maximum node degree (maximum number of links
which are connected to a node). For some network planning
tasks the maximum node degree was a limiting requirement
in [8][33][34].
Furthermore, network survivability should be fulﬁlled
during the redesign. The link restoration assumes single,
total failures of individual links and restores the entire (or
partial) capacity of the failed link on one or several paths
between two end nodes of the link [6]. In this work the
edge/node-biconnectivity is applied to protect single link or
node failures during the network redesign.
3
Graph Analysis
3.1
Node/Edge-Connectivity
A graph is connected, if there exists at least one path
from any point to any other point in the graph; otherwise
the graph is called disconnected. The edge (or node) con-
nectivity of a graph G is the minimum number of edge (or
node) deletions sufﬁcient to disconnect G, which is char-
acterized by Menger’s theorem [35]. In view of the dis-
joint paths, an undirected graph G = (V, E) is deﬁned as
k-edge-connected, if there are k paths between two nodes
v, v′ ∈ V and these paths do not share any edge. If these
paths do not have node between v and v ′ in common, graph
G is deﬁned as k-node-connected. Two connected graphs
are shown in Fig.1, where the left tree-topology is a 1-
edge/node-connected graph (or edge/node-connected) and
the right mesh-topology is 3-edge/node-connected.
The
term mesh does not imply that the network topology is a
full mesh, but rather that the network is at least two (edge)
connected [36][23]. Therefore, the mesh structure has a
higher survivability than the tree structure in telecommuni-
cations networks, but is more expensive due to additional
edges.
There is a close relationship between edge- and
node-connectivity. The node connectivity is never smaller
than the edge connectivity, since deleting one node inci-
dent on each edge in a cut set succeeds in disconnecting
the graph [37][38].
Figure 1. Connected graph: tree and mesh
3.2
Biconnectivity
A
graph
is
called
two-edge
connected
(edge-
biconnected),
if there are at least two edge-disjoint
paths between every pair of nodes. Similarly, a graph is
called two-node connected (node-biconnected), if there are
at least two node-disjoint paths between each pair of nodes.
An example is shown in Fig.2. Every node-biconnectivity
graph is also edge-biconnectivity, while the reverse is not
valid [23]. A biconnected topology can effectively ensure
the network survivability. If an efﬁcient method is applied
to change a graph from one-connectivity to biconnectivity,
the network cost will not be signiﬁcantly incremented. For
instance, adding only a few necessary links can make a
tree topology biconnected. Hence, this work addresses the
node-biconnectivity to improve the network survivability,
where two node-disjoint paths can be available for the
ﬂows between source and destination.
Figure 2. Two-node/edge-connected topology
3.3
Block Structure and Articulation
The articulation of a connected graph is a node whose
removal will disconnect the graph [39]. Fig.3 shows two
graphs with articulation nodes, which are depicted with
gray color.
The right graph represents a graph with 1-
node-connectivity, but 3-edge-connectivity for more than
two edge-disjoint paths for any pair of nodes.
3
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 3. Examples with only 1-node-connectivity
A block is deﬁned as a maximal biconnected subgraph
for an undirected graph G = (V, E). If this graph is bicon-
nected, G itself is called a block. If graph G has N blocks
and i, j ∈ [1, N], Gi = (Vi, Ei) is deﬁned as block i with
(a) |Vi ∩ Vj| ≤ 1 for i ̸= j;
(b) articulation node a ∈ V , if |Vi ∩ Vj| = {a} for i ̸= j.
Figure 4. Graph G and its block graph B(G)
The block structure is deﬁned as a block graph B(G) =
(V’,E’) of graph G. B(G) is made up of blocks and articula-
tion nodes, which can be found by a modiﬁed Depth First
Search (DFS) [29] based on the method of Tarjan [40]. In
Fig.4, the left graph presents a 10-nodes-topology with 5
subnets (SNs), the right graph presents a block graph with
5 blocks (square) and articulation nodes 4, 6, 9.
4
Description of the Algorithm
4.1
Notation
In the following an overview of the used notations is
given:
E0 Set of edges representing the existing links (active);
ER Set of edges representing the links (active) after the Reduc-
tion;
EA Set of edges representing the links (active) after the Augmen-
tation;
EF Set of edges representing the links (active) after the Fine-
Tuning Reduction → Solution set;
EF IX Set of edges representing the ﬁxed links (active);
EP OT Set of edges representing the potential links (inactive);
ERED Set of edges representing the reduced links (inactive) dur-
ing the Reduction;
EAUG Set of edges representing the augmented links (active) dur-
ing the Augmentation;
EF T R Set of edges representing the Fine-Tuning reduced links
(inactive) during the Fine-Tuning Reduction;
wcost Weight of cost for calculating cost-metric;
wcapacity Weight of capacity for calculating cost-metric during
the Reduction;
wflow Weight of ﬂow for calculating cost-metric during the Aug-
mentation;
wutilization Weight of utilization for calculating cost-metric dur-
ing the Fine-Tuning Reduction.
Note: The active edges are a part of the current network
and thus they are used during the network calculation. The
inactive edges are not a part of the current network.
4.2
Redesign Strategy
The complete redesign procedure consists of Reduction,
Augmentation, Fine-Tuning-Reduction, as shown in Fig.5.
Graph theory helps us to formulate the problem as fol-
lows (nodes are represented by vertices and links by edges):
Let E0 ⊂ E be a ﬁxed set of operational edges (repre-
senting the existing links), such that G(V, E0) is connected.
And Let EP OT ⊂ E be a ﬁxed set of given edges (repre-
senting the potential links), such that E0 ∪EP OT = E. The
biconnectivity problem can be subdivided as follows:
1. The ﬁrst step (Reduction) is to ﬁnd a set ERED ⊂ E0
with ER = E0 − ERED which reduces the number of
edges (the network costs) to a minimum without vio-
lating the constraints.
2. The second step (Augmentation) is to ﬁnd a set
EAUG ⊂ (EP OT ∪ ERED) of augmenting edges
with minimal costs, such as the biconnected graph
G(V, EA, W) with EA = EAUG ∪ ER.
3. On augmenting ER to EA it is possible that edges
from ER become redundant for the graph biconnec-
tivity. Hence, the third step (Fine-Tuning-Reduction)
is to further reduce the network cost by ﬁnding a set
EF T R ⊂ ER. Then the number of edges are decre-
mented to EF = EA − EF T R subject to constraints
and biconnectivity.
4
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 5. Flow chart of the redesign strategy
It is assumed that the network consisting of initial links (E0)
and potential links (EP OT ) must fulﬁll the constraints and
guarantee the biconnectivity.
The advantage of our edge redesign is that the history
of the network and the experience of the network planner
is taken into consideration because Reduction bases on the
set of edges E0 which represents the real existing links.
Moreover, we introduce another possibility to further in-
ﬂuence the direction of optimization by implementing the
set EF IX ⊂ E0. Edges of the set EF IX are not allowed
to be reduced by the algorithm and hence they constitute a
deﬁnitive part of the solution set EF . EF IX makes it possi-
ble to consider practical relevant situation, e.g. a long term
of a leased line link. (Note that real existing links as well
as potential links can be assigned to the set EF IX at the
beginning of the optimization.)
4.3
Reduction
Suppose E0 is the set of edges in a graph G. The objec-
tive of the Reduction is to ﬁnd a set ERED that decreases
the set of edges E0 to a minimum ER (ER, ERED ⊂ E0
and ER ∪ ERED = E0) such that ER is a graph with min-
imal number of edges (costs) still fulﬁlling the constraints
(maxHop, maxUtil, maxNodeDegree). Ideally, this graph
is a minimal spanning tree. Any edge e ∈ E0 is evaluated
by a cost metric MetricRED
e
with normalized cost ce and
bandwidth μe:
MetricRED
e
= wcost · min{ce,e∈E0}
ce
+ wcapacity · μe
max{μe,e∈E0}
(4)
with constraints:
wcapacity + wcost = 1
0 ≤ wcapacity ≤ 1
0 ≤ wcost ≤ 1
0 < MetricRED
e
≤ 1
The normalized values are used to efﬁciently represent
the cost metric. The cost and capacity weights inﬂuence the
evaluation of the cost metric. We assumed a cost function
for the links, which is derived and estimated from basis net-
work rate for leased lines of the Deutsche Telekom (2004)
[41]. Depending on the link capacity and length, the costs
consist of a base rate and a piecewise linear increasing cost
function (CU: Cost Unit), as shown in Fig. 6. In a sense,
the leasing cost of 10 Gbit/s is less than the leasing cost of
2.5 Gbit/s multiplied by 4. Therefore, the edges with high
cost (long optical cable) and low capacity will be preferably
removed. The smaller MetricRED
e
is, the earlier the edge e
is reduced. During the Reduction the constraints have to be
fulﬁlled, such as capacity, utilization, etc.
Figure 6. Cost function for calculation of leased line
link cost per year in terms of link capacity and link
length
We suppose that all demands are routed, and the edge
loads, edge utilizations are calculated. The Reduction algo-
rithm can then be described as follows:
5
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

1. The edge weights composed of a weighted standard-
ized sum of real edge cost and load, are calculated for
all edges of E0.
2. On basis of the edge weights one edge is selected and
temporarily added to the set ERED: Thus, the selected
edge is deactivated.
3. The demands are rerouted and then edge loads and
edge utilizations are calculated considering all edges
belonging to the sets E0 and ER.
4. If all constraints are fulﬁlled, the selected edge is
reduced, which means it is ﬁnally added to the set
ERED. If a constraint is not fulﬁlled, the selected edge
is marked as required, which means it is added to the
set ER.
5. The algorithm recalculates the edge weights and se-
lects the next edge.
This process is repeated until all edges from E0 are trans-
ferred to the sets ERED or ER. The program ﬂow chart
(PFC) of the Reduction is depicted in Fig. 7.
Figure 7. Program ﬂow chart of the Reduction
Note that the Reduction algorithm solution depends on
the sequence of selected edges. Hence, a unique branch of
the complete combinatorial solution tree is calculated.
4.4
Augmentation
The objective of the Augmentation is to ﬁnd out a set
EAUG from sets ERED and EP OT so that the graph G
Figure 8. Program ﬂow chart of the Augmentation
with the edges EA = ER ∪ EAUG between vertices is bi-
connected. In Fig. 8 the PFC of the Augmentation is de-
picted. At ﬁrst the graph is analyzed by means of the modi-
ﬁed Depth First Search (DFS) mentioned in the last section.
The DFS ﬁnds all articulation points of G, marks them, and
splits the graph into its biconnected components (subnets).
If the graph is biconnected without any articulation point),
the Augmentation will be stopped, otherwise the next Aug-
mentation step is done.
Figure 9. Augmentation network example:
DFS
marks articulation points and divides network into
subnets: In black are the edges of the set ER and in
gray (dashed lines) are the edges depicted of the sets
ERED and EP OT (potential candidates for the Aug-
mentation). The three articulation points are marked
with a dark color and the different subnets are sur-
rounded by dashed lines.
Figure 9 shows an example of a not biconnected graph
after the DFS. Next, we classify the potential candidate
edges in a way that only edges between vertices of different
6
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 10. Augmentation network example: Classi-
ﬁcation of the potential candidate edges (EP OT and
ERED) depending on source and destination vertex
subnets are accepted as candidates for the Augmentation,
while no vertex is an articulation point (Inter-Subnet). In
Figure 10, the edge classiﬁcation is shown for our network
example. Due to the classiﬁcation Intra-Subnet edges like
{2,3} or {1,4} are not considered. Furthermore, we disre-
gard Intra-Articulation edges like {4,9}, since their intro-
duction would not improve the network situation regarding
to the Augmentation problem. As a rule, we do not consider
edges between different subnets, if one vertex is an articula-
tion point (Inter-Subnet-Articulation), e.g. {7,9} or {10,6},
because in comparison with the Inter-Subnet edges they are
only the second best option. Only in case that the graph
is not biconnected, and no Inter-Subnet edge is left, these
edges are accepted.
After that, a special cost metric MetricAUG
e
is used to
evaluate edge e subject to edge cost, subnet ﬂow and node
degree:
MetricAUG
e
= wcost · min{ce,e∈(EP OT ∪ERED)}
(dv + dv′) · ce
+
wflow · f sn−sn
e
(dv + dv′) · max{f sn−sn
e,e∈(EP OT ∪ERED)}
(5)
with constraints:
wflow + wcost = 1
0 ≤ wflow ≤ 1
0 ≤ wcost ≤ 1
0 < MetricAUG
e
≤ 0.5
where v and v′ are end nodes of edge e between two
blocks (unbiconnected subnets). dv and dv′ are node de-
grees of v and v′, respectively. f sn−sn
e
is the ﬂow over
edge e between two subnets. min{ce,e∈(EP OT ∪ERED)} and
max{f sn−sn
e,e∈(EP OT ∪ERED)} present the minimal cost metric
and maximal ﬂow for e ∈ (EP OT ∪ ERED)}. The exist-
ing network topology is connected so that dv and dv′ are
no less than 1. Hence, MetricAUG
e
is between 0 and 0.5.
Edges are preferably introduced when they are not costly,
highly loaded (due to a high subnet-subnet-ﬂow) and where
the average degree of source and destination vertex is small.
More precisely, the edges with a high cost metric preferably
added.
Regularly for each edge a single routing has to be done
where all other candidates are deactivated. Due to the time
complexity of calculating the edge loads, an estimator is
used. Therefore, all candidates are temporarily added to
EAUG. Then a routing of the demands and a load calcula-
tion is done considering the edges of EAUG and ER. On ba-
sis of the weights, one edge is selected and then deﬁnitively
added to the set EAUG, the remaining temporarily added
edges are retransferred to their former sets. The described
procedure is repeated until the DFS algorithm conﬁrms bi-
connectivity of the graph.
4.5
Fine-Tuning Reduction
Figure 11. Fine-Tuning Reduction example:
a)
shows graph after Reduction b) shows that due to the
Augmentation one edge from ER becomes mathemat-
ically redundant for the biconnectivity of the graph
On augmenting ER to EA it is possible that edges from
ER become redundant for the graph biconnectivity of E A.
The example in Fig.
11 shows a graph, where ER has
the shape of a tree structure (Fig. 11a). The Augmenta-
tion added the minimal number of two edges {1,3}, {1,4}.
Hence, EA is biconnected. From the viewpoint of graph
theory, the graph would still be biconnected, if we dis-
card the edge {1,2} of the former tree structure (Fig. 11b).
Thus, objective of the Fine-Tuning Reduction is to ﬁnd a
set EF T R ⊂ ER that reduces the number of edges to
EF = EA − EF T R with a minimum total cost, consider-
ing constraints and graph biconnectivity at any time. How-
ever, we only consider edges of the set ER as candidates
for the Fine-Tuning Reduction, because if the Augmenta-
tion performs well hardly edges from EAUG will become
7
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

redundant.
The PFC of the Fine-Tuning Reduction is in general the
same as the PFC of the Reduction (Fig.7). At the begin-
ning we have a set of edges EA. At each loop one edge
out of the former set ER is selected and temporarily added
to the set EF T R. Then this edge is deactivated. Then the
network is calculated, such as routing of the demands, cal-
culation of edge loads and edge utilizations. After that, the
selected edge is either deﬁnitely assigned to the set EF , if
a constraint is not fulﬁlled or the remaining graph is not bi-
connected. Or it is assigned to the set EF T R, if the graph
is still valid. This procedure is repeated until all edges of
the former set ER have been tested. The sequence of tested
edges is deﬁned by the edge weights, which are recalculated
in every cycle. The cost metric MetricF T R
e
is composed of
a weighted, standardized sum of edge leasing cost ce and
edge utilization ρe in Eq.6. The edges with a low cost met-
ric will be ﬁrstly considered to be reduced.
MetricF T R
e
= wcost · min{ce,e∈ER}
ce
+ wutilization · ρe
max{ρe,e∈ER}
(6)
with constraints:
wcost + wutilization = 1
0 ≤ wcost ≤ 1
0 ≤ wutilization ≤ 1
0 < MetricF T R
e
≤ 1
4.6
Random Selection
To avoid trapping into local optima, a random pro-
cess is applied to determine which edges are removed or
added. In addition, we assume pT hresRED, pT hresAUG,
pT hresF T R as potential thresholds for Reduction, Aug-
mentation and Fine-Tuning-Reduction to efﬁciently limit
the search space. The random selection is described as fol-
lowing:
1. Evaluate cost metrics for all candidate edges and sort
metrics from the minimal metric (Min Metric) to the
maximal metric (Max Metric);
2. Find all edges with metric ≥
Min Metric(1 +
pT hresRED) for Reduction, or all edges with met-
ric ≤ Min Metric(1 − pT hresAUG) for Augmen-
tation, or all edges with metric ≥ Min Metric(1 +
pT hresF T R) for Fine-Tuning-Reduction;
3. Select one edge by means of a uniformly distributed
random number.
5
Results and Analysis
5.1
Redesign Environment
The algorithm is implemented in C++ and applied using
a commercial network planning tool - NetWorks [42], de-
signed for optimizing large scale telecommunications and
IP networks. We studied the practical behavior of the algo-
rithm on a set of real network examples. Two test networks
will be introduced in this section. The optimization envi-
ronment is based on a standard PC (Pentium III with 800
MHz and 384 Mbyte RAM). Each scenario with different
parameters has been tested for at least 10 times.
We estimated demands between the nodes by applying
the gravity coefﬁcient method [43]. Therefore, for each pair
of nodes the demands were calculated in direct proportion
to the population of the corresponding area, and in indi-
rect proportion to the distance between the individual nodes.
Furthermore, the edge cost is derived from the leasing lines,
see Fig. 6 and Eq. 2.
The information on the following networks has been
collected from public sources. Since the trafﬁc matrices
haven’t been available, the previously mentioned gravity
model was used to generate one. This means that the fol-
lowing results are not absolutely applicable to the studied
networks. But this is not the intention of the study. The
idea is to show the application of the algorithm using real
life topologies.
5.2
Test Network I: G-WiN
G–WiN was a part of Germany Research Education Net-
works by DFN-Association [44], which connects 42 core
nodes by 75 links at two levels. The bandwidth of links
ranges from 622 Mbit/s to 10 Gbit/s. In this approach we
focus on the 10 core nodes (level 1) and their connecting
21 links (see Fig. 12). The potential edges are assumed to
have a capacity of 2.5 Gbit/s. Furthermore, the maximal
edge utilization is 99.9999% without limit of maximal hop
number and node degree.
Fig. 12 shows the original links used for G–WiN. As re-
sult of the redesign redundant and high capacity (expensive)
edges are successfully removed in Fig. 13. During the re-
design all constraints have to be fulﬁlled.
More details are presented in the Tab. 1. The cost and
number of links are signiﬁcantly reduced. Mean edge uti-
lization is increased, which should be taken into account.
However, the original average link utilization was low. Af-
ter the redesign the maximum utilization value is decreased.
Hence, this increment of the edge utilization has no remark-
able inﬂuence on the redesigned G–WiN. The reduced node
degree can save the ports of core nodes.
8
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 12. Original G–WiN (level 1)
Table 1. Optimization results of G–WiN
G–WiN
Original
Average
Cost in cost unit (CU)
1 402 247.49
671915.49
Number of edges
21
13
Mean edge utilization
17.5%
41%
Max. edge utilization
97%
93%
Mean hop number
1.64
2.29
Max. hop number
3
5
Mean node degree
4.2
2.6
Max. node degree
6
4
5.3
Test Network II: AT&T
The level one and two of the AT&T backbone network
(shown in Fig. 14a) is applied to redesign, which is com-
prised of 37 nodes in major US cities and 58 links (10 Gbit/s
or 2.5 Gbit/s link capacities) interconnecting them [42].
Figure 14 shows the procedure of the algorithm from the
initial network with the existing links (set E0) and the po-
tential links (set EP OT ) and to the ﬁnal biconnected solu-
tion with the following settings and constraints:
• all links of the set EP OT have a capacity of 2.5 Gbit/s
• maximum link utilization = 99%
• maximum hop number = 16
• maximum node degree = 4
Figure 14b) depicts the network after the Reduction (ER =
37 links). The algorithm almost achieves a pure tree struc-
ture, only the 10 Gbit/s link {Chicago, New York} can not
Figure 13. G–WiN after the redesign
be reduced due to the effect of a too high utilization result-
ing from its removal. During the Augmentation 18 links
(with dashed lines marked links in Fig. 14c) are added to
the network in order to make it biconnected, whereupon the
Fine-Tuning Reduction discards 15 links again (set EF T R
in Fig. 14d) taking into account the constraints and bicon-
nectivity. Figure 15 compares the network topology before
and after the optimization. The corresponding optimization
results are summarized in Table 2.
Table 2. Optimization results of AT&T backbone
network
AT&T
Original
Best
Average
Cost in CU
8 901599
3 712 977
4 259874
Number of edges
58
40
42.1
Mean edge util.
16%
51%
41.8%
Max. edge util.
54%
96%
92.4%
Mean hop number
3.47
6.59
6.1
Max. hop number
9
16
15.5
Mean node degree
3.13
2.14
2.25
Max. node degree
9
3
3.5
As mentioned, the solution depends on the sequence of
edges (selected during Reduction, Augmentation and Fine-
Tuning Reduction).
If the edge with the best weight is
always selected, the same unique branch of the complete
combinatorial solution tree will be generated again and
9
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 14. AT&T backbone network redesign: Suc-
cessive depiction of the network after every optimiza-
tion step. a) initial network, b) after Reduction, c)
after Augmentation, d) after Fine-Tuning Reduction
again. But the deterministic solution is not always the best.
Therefore, we implemented a random function that controls
edge selection such that not always the best one is selected,
but also the second or third best. For the AT&T network op-
timization we generated 50 solution sets (EF ) with an indi-
vidual set of parameters. Afterward a statistical analysis has
been performed and evaluated the efﬁciency of the chosen
parameter. The algorithm took about 30 seconds calculat-
Figure 15. AT&T backbone network: Link capac-
ities a) before and b) after optimization (maxHop =
16). The optimization process is illustrated in Fig. 14
ing one AT&T network parameter set (one EF ). The result
presented in Table 2 (column Best) and Fig. 15 is the best
one out of ﬁfty solution sets. The average values of the ﬁfty
solution sets are shown in column Average of Tab. 2.
Finally network cost are reduced to less than 50%. But
the price is high: the mean link utilization, mean hop num-
ber and maximum hop number are increased. This results
from a weakly restricted optimization. Hence, what we see
is the potential saving of cost, if the network is operated at
the limit and in consequence with a higher probability of
having bad quality of service (QoS). This can be improved
by tightening up the constraints. The degree of meshing
can be decreased by adjusting the maximum hop number or
the maximum link utilization. Our tests showed, that the
hop number constraint is a better control because routing
algorithm mostly ﬁnds the shortest path (with the least hop
number), but does not consider link utilization. So a maxi-
mum utilization constraint can be easily exceeded and thus
disturb the success of the optimization result (network could
be not valid), although trafﬁc engineering methods like load
sharing or routing metric optimization [45] could balance
network utilization situation.
In Fig. 16 an optimization result is shown with the same
parameters like in the previous example, but with a maxi-
mum node degree of 5 and a maximum hop number of 9.
Thus, the maximum hop number is as big as in the original
AT&T network. This optimized network has 51 active links
and costs 4 284 965 CU. The average link utilization is 31%.
10
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Figure 16. AT&T backbone network: Link capaci-
ties after optimization with constraints: max. Hop =
9; max. link utilization = 99%; max. node degree = 5
Although maximum utilization is still high (96%), the net-
work performs much better, since only one link is utilized
with more than eighty percent and the average hop number
is 4.59. However, too high utilization has negative inﬂu-
ence on the network operation. Therefore, the maximum
utilization can be decreased from 99% to a lower threshold,
or the mechanism of sharing load can be applied to reduce
the link utilization. This paper provides only some results
based on the predeﬁned scenarios to show the characteris-
tics of three-steps algorithms.
An interesting effect is the counter balancing behavior of
the three optimization steps. Imagine an unfavorable Aug-
mentation, adding a more than necessary number of edges
to the graph. This does not necessarily lead to a bad over-
all result, because the supplementary edges also introduce
additional optimization potential to the Fine-Tuning Reduc-
tion. In this case Fine-Tuning Reduction can compensate
the bad Augmentation performance.
Besides the described directed optimization (network re-
design) also the opposite is possible (designing new net-
works) by assigning all potential and real existing edges to
the initial set E0. Thus, the algorithm has all degrees of
freedom to create a completely new solution set. Applying
the new design method, our tests show e.g. for the AT&T
network (Fig. 15, same constraints) a best solution set with
minimal cost of over again 10% less compared to the best
redesign method.
5.4
Parameter Studies
Different parameters inﬂuence the overall performance
of the proposed algorithm. This paper presents some re-
sults of cost metrics, maximal hop number and potential
threshold for network calculation and redesign. The points
in the following ﬁgures are derived from 50 trials with con-
ﬁdence level 95%. Furthermore, a speciﬁed new-design is
deﬁned. Only one difference from the redesign is that this
new-design takes all active and potential edges as opera-
tional edges, i.e. E0 is extended. Referring to empirical
results, both design processes are similar. Hence, the new-
design of AT&T network is fulﬁlled to evalute the parame-
ters mentioned above. The new-design has no limitation of
node degree, but with maximal hop number and maximal
edge utilization.
5.4.1
Reduction–Metric
By evaluating the cost metric for Reduction, wcost and
wcapacity play an important role.
As mentioned in Re-
duction, the metrics with low values will be removed with
a higher probability. In addition, the weight of cost has
more positive inﬂuence in the redesign than the weight of
capacity. Namely, the expensive edges are preferably re-
moved. In terms of wcost and wcapacity, Fig. 17 presents op-
timization results after Reduction, Augmentation and Fine-
Tuning-Reduction. A high weight of cost can lead to a better
optimization solution, e.g. the right side of the ﬁgure w Cost
close to 1.0. Several unusual slight increment on the curves,
such as Fine-Tuning-Reduction, stand the reason that the
setting of wcost and wcapacity also depends on other param-
eters and could lead local optima.
3000000
3500000
4000000
4500000
5000000
5500000
6000000
6500000
7000000
0.0-1.0
0.1-0.9
0.2-0.8
0.3-0.7
0.4-0.6
0.5-0.5
0.6-0.4
0.7-0.3
0.8-0.2
0.9-0.1
1.0-0.0
Network Cost in CU
Weight of Reduction-CostMetric (Cost - Capacity)
Influence of Reduction-CostMetric (Capacity)
Reduction
Augmentation
FT-Reduction
Figure 17. Inﬂuence of wcost and wcapacity for
Reduction–Metric on overall network cost:
Constraints:
max.Hop = 20
max.Util. = 99.999%
Random in %:
pThresRED = 20
pThresAUG = 10
MetricAUG
e
:
wcost = 0.7
wflow = 0.3
MetricF T R
e
:
wcost = 0.7
wutilization = 0.3
5.4.2
Augmentation– and FT–Reduction-Metrics
Instead of wcapacity, the cost metrics of Augmentation–
and FT–Reduction-Metrics take advantage of wflow and
wutilization.
Subject to hard constraints during the de-
sign, the candidate edges for both steps are strictly lim-
ited.
Hence, Augmentation– and FT–Reduction-Metrics
11
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

have similar characteristics in terms of optimization results.
Hereby, only the optimization results of Augmentation-
Metrics are presented and analyzed. Fig. 18 compares wcost
and wflow of the Augmentation–Metric for three steps. The
change of weights wcost and wflow has no explicit improve-
ment for network design. However, the solutions with w cost
close to 1 are a little better than those with wcost near 0.
2800000
3000000
3200000
3400000
3600000
3800000
4000000
4200000
4400000
0.0-1.0
0.1-0.9
0.2-0.8
0.3-0.7
0.4-0.6
0.5-0.5
0.6-0.4
0.7-0.3
0.8-0.2
0.9-0.1
1.0-0.0
Network Cost in CU
Weight of Augmentation-CostMetric (Cost - Flow)
Influence of Augmentation-CostMetric
Reduction
Augmentation
FT-Reduction
Figure 18. Inﬂuence of wcost and wflow for
Augmentation–Metric on overall network cost:
Constraints:
max.Hop = 20
max.Util. = 99.999%
Random in %:
pThresF T R = 10
pThresAUG = 10
MetricRdkt
e
:
wcost = 1.0
wcapacity = 0.0
MetricF T R
e
:
wcost = 1.0
wutilization = 0.0
5.4.3
Maximal Hop Number
The maximal number of hops has been mentioned for AT&T
network redesign. More test results are shown in Fig. 19
for AT&T network new–design. The lower the maximal
number of hops is, the more expensive the designed network
topology is. In this case more links are required to save
hops for point–to–point connections and the node degree
(maximal and mean) can increase. Therefore, maximal hop
number signiﬁcantly inﬂuences design results. However, if
the node degree is limited, the inﬂuence of the maximal hop
number could be changed.
5.4.4
Potential Threshold
Fig. 20 provides an overview of the optimization results in
terms of different potential thresholds for Reduction, i.e.
pT hresRED ∈ [0%, 700%] with constant pT hresAUG and
pT hresF T R. The lower thresholds can lead to better so-
lutions. Due to limited candidate edges, different potential
thresholds of pT hresAUG and pT hresF T R have no large
change. Hence, they are disregarded in this paper.
2500000
3000000
3500000
4000000
4500000
5000000
5500000
15
14
13
12
11
10
9
8
7
Network Cost in CU
Maximum Hop Number
Influence of Maximum Hop Number
Reduction
Augmentation
FT-Reduction
Figure 19. Inﬂuence of maximal hop number on net-
work cost:
Constraints:
max.Util. = 99.999%
Random in %:
pThresRED = 10
pThresAUG = 10
MetricRED
e
:
wcost = 1.0
wcapacity = 0.0
MetricF T R
e
:
wcost = 1.0
wutilization = 0.0
2500000
3000000
3500000
4000000
4500000
5000000
5500000
0
100
200
300
400
500
600
700
Network Cost in CU
Threshold in %
Influence of the Upper Border for Selecting Links Randomly
Reduction
Augmentation
FT-Reduction
Figure 20. Inﬂuence of potential thresholds on over-
all network cost:
Constraints:
max.Hop = 20
max.Util. = 99.999%
Random in %:
pThresAUG = 0
pThresF T R = 0
MetricRED
e
:
wcost = 1.0
wcapacity = 0.0
MetricF T R
e
:
wcost = 1.0
wutilization = 0.0
5.4.5
Summary
With the different conﬁguration of parameters, several net-
works have been investigated. Tab. 3 summarizes the most
useful parameter set, found empirically during the study.
6
Conclusion
In this paper we proposed a three-steps algorithm for
network redesign problems to ﬁnd a new fully biconnected
12
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

Table 3. The best found parameter setting for IP–
Network design
Parameters
Values
Reduction:
MetricRED
e
wcost = 0.9
wcapacity = 0.1
pT hresRED
10%
Augmentation:
MetricAUG
e
wcost = 0.8
wflow = 0.2
pT hresAUG
0% ↔ 10%
FT–Reduction:
MetricF T R
e
wcost = 0.8
wutilization = 0.2
pT hresF T R
0%
cost-effective network topology. Hard constraints, such as
hop number, edge utilization and node degree, are consid-
ered. In terms of numerical simulation results, the algo-
rithm was veriﬁed to be ﬂexibly applicable for redesign
existing networks and creating new networks. The imple-
mented algorithm has successfully applied to different net-
work topologies, fulﬁlling the constraints and considering
the biconnectivity, particularly with two-vertex connectiv-
ity.
The redundant edges can be efﬁciently removed by
the third step - Fine-Tuning Reduction, which improves the
quality of network redesign in comparison with the previous
work. A parameter study helps understanding the sensitiv-
ity of the results on algorithm settings.
In real network design situations, keeping the network
operational is the most important task. A cost saving of e.g.
5% will always be critically examined by the network oper-
ator, since the occurrence of critical transition states during
the migration has to be taken into consideration. Further-
more, network requirements continuously change, due to
new services, new customers and new technologies. Thus,
for a network operator it is not crucial to have (a temporar-
ily) optimal network, but it is more important to know the
optimal network. This knowledge helps making the right
(most cost efﬁcient) decision for necessary network exten-
sions. The presented strategy supports network planners in
these situations. Its high transparency and the possibility to
closely interact by adjusting intermediate results manually
assures its applicability.
References
[1] C. Minge, R. Zhao, M. Schweigel, “Improved Opti-
cal Network Topology Redesign Ensuring Biconnectiv-
ity”, The Fourth Advanced International Conference on
Telecommunications (AICT2008), p.398–403, Athens,
Greece, June, 2008
[2] G.M. Schneider, M.N. Zastrow, “An Algorithm for the
Design of Multilevel Concentrator Networks”, Com-
puter Networks, vol.6(1), p.1–11, 1982
[3] B. Gavish, “Topological design of Telecommunica-
tion Networks-the Overall Design Problem”, European
Journal of Operations Research, vol.58(2), p.149–172,
1992
[4] J. Petrek, V. Siedt, “A Large Hierarchical Network Star-
Star Topology Design Algorithm”, European Trans-
actions on Telecommunications, vol.12(6), p.511–522,
2001
[5] A. Bley, T. Koch, R. Wessaely, “Large-scale hierarchi-
cal networks: How to compute an optimal architec-
ture?”, Proceeding of Networks 2004, p.13–16, Vienna,
Austria, 2004
[6] M. Pioro, Deepannkar Medhi, “Routing, Flow, and Ca-
pacity Design in Communication and Computer Net-
works”, Elsevier Inc. America, 2004
[7] B. Gavish, Topological design of Telecommunication
Networks-local Access Design Methods”, Annals of
Operations Research, vol.33(1), p.17–71, 1991
[8] S. Chamberland, B. Sanso, O. Marcotte, “Topolog-
ical Design of Two–Level Telecommunication Net-
works with Modular Switches”, Operations Research,
vol.48(5), p.745–760, 2000
[9] A. Girard, B. Sanso, L. Dadjo, “A Tabu Search Algo-
rithm for Access Network Design”, Annals of Opera-
tions Research, vol.106(1–4), p.229–262, 2001
[10] I. Godor, G. Magyar, “Cost-optimal Topology Plan-
ning of Hierarchical Access Network”, Computers &
Operations Research, vol.32, p.59–86, 2005
[11] R. Zhao, S. Goetze, R. Lehnert, “A Visual Planning
Tool for Hybrid Fiber-VDSL Access Networks with
Heuristic Algorithms”, The 5th International Work-
shop on Design of Reliable Communication Networks
(DRCN 2005), p.541–548, Island of Ischia (Naples),
Italy, 2005
[12] M.R. Garey, D.S. Johnson, “Computers and In-
tractability:
A
Guide
to
the
Theory
of
NP-
completeness”, San Francisco, CA, Freeman, 1979
[13] S. Chopra, “Polyhedra of the Equivalent Subgraph
Problem and Some Edge Connectivity Problems”,
SIAM Journal on Discrete Mathematics, vol.5, p.321–
337, 1992
13
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

[14] T.L. Magnanti, S. Raghavan, “Strong Formulations for
Network Design Problems with Connectivity Require-
ments”, Networks, vol.45(2), p.61–79, 2005
[15] T.L. Magnanti, S. Raghavan, “Redesigning network
topology with technology considerations”, Interna-
tional Journal of Network Management, vol.18(1), p.1–
13, 2008
[16] M. Weiss, F. Zeyer, “Redesign of Local Area Net-
works Using Similarity-based Adaption”, Proc. 10th
Conference on AI for Applications, p.284–290, San
Antonia, TX, USA, 1994
[17] W.D. Grover, “Mesh–Based Survivable Networks”,
Prentice Hall, New Jersey, 2004
[18] R.H. Jan, F.J. Hwang, S.T. Chen, “Topological Opti-
mization of A Communication Network Subject to A
Reliablity Constraint”, IEEE Transactions on Reliabil-
ity, Vol.42, p.63–70, 1993
[19] S. Rai, D.P. Agrawal, “Distributed Computing Net-
work Reliability”, IEEE Computer Society Press Tuto-
rial, USA, 1990
[20] T.G. Robertazzi, “Planning Telecommunication Net-
works”, IEEE Press, USA, 1999
[21] L. Nederlof, K. Struyue, C. Shea, H. Misser, Y. Du,
B. Tamayo, “End-to-End Survivable Broadband Net-
works”, IEEE Commun. Mag., vol.9, p.63-70, 1995
[22] Y. Liu, D. Tipper, P. Siripongwutikorn, “Approximat-
ing Optimal Spare Capacity Allocation by Successive
Survivable Routing”, IEEE/ACM Transaction on Net-
working, vol. 13, No. 1, p.198-211, February 2005
[23] R. Diestel, “Graph Theory”, 2.ed, vol. 173, Graduate
Textbooks in Mathematics, Spring-Verlag, 2000
[24] G. N. Fredericson, J. Jaja, “Approximation Algo-
rithms for Several Graph Augmentation Problems”,
SIAM Journal on Computing, vol.10(2), p.270–283,
1981
[25] S. Khuller, R. Thurimella, “Approximation Algo-
rithms for Graph Augmentation”, Journal of Algo-
rithms, vol.14(2), p.214–225, 1993
[26] S. Khuller, B. Raghavachari, A. Zhu, “A Uniform
Framework for Approximating Weighted Connectivity
Problems”, Proc. 10th Annual SODA (ACM-SIAM),
p.937–938, Baltimore (short paper), 1991
[27] I.D. Ljubic, J.J. Kratica, “A Genetic Algorithm for
the Biconnectivity Augmentation Problem”, Proceed-
ings of the 2000 Parallel Problem Solving from Nature
VI Conference, vol.1917, p.641–650, 2000
[28] K.-D. Hackbarth, A. Men`endez, C. Diaz, A.J. Por-
tilla, “An approximative algorithm for fully biconnec-
tivity and its application to network design”, Euro-
NGI.–D.JRA 3.1.2, p.95–106, 2004
[29] T. Erlebach, “Ausfallsicherheit von Netzen (reliability
of networks)”, Lecture manuscript, ETH Z¨urich, 2003
[30] S. Pracht, D. Hardman, W. Horneff, “Echotest in IP-
Netzwerken (echo test in IP-networks)”, vol.1, p.44–46,
2001
[31] J. Evans and C. Filsﬁls, “Deploying Diffserv at the
Network Edge for Tight SLAs (Part 1)”, IEEE Internet
Computing”, vol.Jan, p.61–65, 2004
[32] L. Kleinrock, “Queueing Systems, Volume II: Com-
puter Applications”, John Wiley & Sons, Canada, 1976.
[33] R. Zhao, H.J. Liu, R. Lehnert, “Topology Design
of Hierarchical Hybrid Fiber-VDSL Access Networks
with ACO”, The Fourth Advanced International Con-
ference on Telecommunications (AICT2008), p.232–
237, Athens, Greece, June, 2008
[34] R. Zhao, Y. Zhang, R. Lehnert, “Topology Design
of Hierarchical Hybrid Fiber-VDSL Access Networks
with Enhanced Discrete Binary PSO”, The Third In-
ternational Conference on Access Networks (Access-
Nets08), Las Vegas, Nevada, USA, October, 2008
[35] K. Menger, “Zur Allgemeinen Kurventheorie”, Fun-
damenta Mathematicae, vol.10, p.96–115, 1927
[36] R. Sedgewick, “Algorithms”, 2.ed, Princeton Univer-
sity, Addison-Wesley, 1988
[37] R.K. Ahuja, T.L. Magnanti, J.B. Orlin, “Network
Flows: Theory, Algorithms, and Applications”, Pren-
tice Hall, United States Ed edition, 1993
[38] D.
Jungnickel,
“Graphenm,
Netzwerke
und
Algorithmen”,
3.ed,
BI-Wissenschaftsverlag,
Mannheim/Leipzig/Wien/Zuerich, 1994
[39] G. Chartrand, “Introductory Graph Theory”, p.45-49,
New York, Dover, 1985.
[40] R.E. Tarjan, “Depth First Search and Linear Graph Al-
gorithms”, SIAM Journal on Computing, vol.1, p.146–
160, 1972
[41] M. Weinkopf, D. Reimer, “Entgeldantrag fuer digi-
tale Standard- und Carrier-Festverbindungen, fuer den
Comfort-Service (dSFV) und die Express-Entstoerung
(CFV)”, Technical Report, 2004
[42] NetWorks,
http://www.networks.detecon.com/en/,
2008
14
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

[43] R. Baessler, A. Deutsch, “Nachrichtennetze (Telecom-
munications Networks)”, VEB Verlag Technik Berlin,
Berlin, 1989
[44] Germany National Research and Education Network,
http://www.dfn.de/, 2008
[45] A. Gous, A. Afrakhteh, “Trafﬁc Engineering through
automated optimisation of routing metrics”, Case
Study, Cariden Technologies, 2002
15
International Journal On Advances in Telecommunications, vol 2 no 1, year 2009, http://www.iariajournals.org/telecommunications/

