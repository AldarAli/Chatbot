Optmized Preflight Planning for Successful Surveillance Missions of Unmanned 
Aerial Vehicles 
Carlo Di Benedetto, Domenico Pascarella, Gabriella 
Gigante, Salvatore Luongo, Angela Vozella 
Integrated Software, Verification and Validation Laboratory 
CIRA (Italian Aerospace Research Centre) 
Capua, Italy 
e-mail: c.dibenedetto@cira.it, d.pascarella@cira.it, 
g.gigante@cira.it, s.luongo@cira.it, a.vozella@cira.it 
Francesco Martone 
Software Development and Virtual Reality Lab 
CIRA (Italian Aerospace Research Centre) 
Capua, Italy 
e-mail: f.martone@cira.it
 
 
Abstract—This paper investigates the flight planning for 
surveillance missions of unmanned aerial vehicles. It proposes a 
prototype of preflight planner for different operative scenarios. 
The planner is able to provide an optimized route planning 
taking into account several constraints (e.g., the vehicle 
dynamics, the no fly zones, the endurance, the feasibility of the 
mission objectives, the terrain separation, etc.). It also provides 
a quantitative estimation of the air data link coverage and of the 
National Imagery Interpretability Rating Scale (NIIRS) index 
for the image quality. An overview of the prototype and of the 
planning approach is reported and some significant test results 
are discussed in order to show its features. 
Keywords-UAV; 
surveillance 
mission; 
optimal 
flight 
planning; payload management; NIIRS. 
I. 
 INTRODUCTION 
This paper is an extended version of [1]. Compared with 
the previous work, here we provide a detailed survey of the 
background for the surveillance missions of Unmanned Aerial 
Vehicles (UAVs) and we add the design of a new functionality 
of the Route Planner module implementing the optimal 
allocation strategy of the sequence of targets. 
UAVs are suitable to accomplish the D-cube (dull, 
dangerous and dirty) missions [2]. Dull operations are too 
monotonous or require excessive endurance for human 
occupants. Dirty operations are hazardous and pose a health 
risk to a human crew. Dangerous operations could result in the 
loss of life for the onboard pilot. 
The D-cube terminology was originally defined within the 
military field, but is also applied to the civil sector. Examples 
of military applications include ISTAR (Intelligence, 
Surveillance, Target Acquisition and Reconnaissance) 
missions, such as visual detecting of enemy tanks and troop 
movements and surface-to-air missile launcher suppression. 
Civil applications include investigation in post-disaster areas 
for search and rescue operations and monitoring of 
environmental phenomenon in harsh scenarios (e.g., 
monitoring nuclear radiation). Moreover, recent advances in 
UAVs’ technology allowed the emergence of a wide range of 
applications, such as for military operations [3], for disaster 
management [4], for urban terrain surveillance [5], and for 
agricultural surveillance [6].  
A UAV is an aircraft with no human pilot onboard. It is 
the central element of an Unmanned Aerial System (UAS), 
which is the set of the aircraft and all the other elements 
supporting its service, including the Ground Control Station 
(GCS) and the payload. 
Nowadays, UAVs are mostly Remotely Piloted Vehicles 
(RPVs) since their operations are performed by large teams of 
human operators, who remotely pilot the aircraft and control 
its actions. For RPVs, ground operators must be endowed with 
the proper expertise and this represents a substantial 
constraint, especially concerning costs. Dull missions 
particularly 
stress 
the 
training 
requirements. 
These 
considerations push the necessity to extend aerial platform 
capability related to autonomous flight. Therefore, one the 
main objectives of UAV research is to reduce the reliance on 
human operators in order to make UAVs a more economical 
and scalable technology. Indeed, tedious and repetitive tasks 
could relieve the task load of the remote pilots if they were 
autonomously performed and could provide a formal 
guarantee of the mission success. This approach would reduce 
the operators' workload with regard to system specific tasks, 
that are usually detailed and monotonous. Besides, it would 
allow the operator to focus on global situation awareness and 
emergency decision-making actions and it would limit their 
fatigue and lack of attention. A reduction of operational costs 
would also be achieved since the number of necessary 
members of the ground human team would be minimized. 
This is also true for the tasks relating to mission preflight 
operation, such as the design of the flight path. In general, an 
integral part of UAV operation is the design of a flight path 
that attains the mission objectives. Flight planning shall 
ensure that the UAV operates in a safe and efficient way. 
Moreover, the mission effectiveness shall be ensured by 
verifying that all the required objectives are fulfilled by means 
of the design route. 
This work deals with an offline flight planner, named 
PreFlight Planner (PFP), wherein the mission objectives 
concern the proximal sensing of geographical targets. The 
PFP is a Java software prototype, which is in charge of the 4D 
flight planning for different samples of UAVs. The 4D flight 
planning problem is concerned with finding a path that links a 
specified initial state and several goal states. These states are 
14
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

four-dimensional (three spatial and one time dimension). It is 
also a constrained problem. Thus, the proposed PFP is able to 
take into account the vehicle dynamics, the no-fly zones, the 
endurance, the data link coverage, the feasibility of the 
mission objectives, the terrain separation, etc. 
The proposed software is an innovative UAV flight 
planner since it permits: 
• 
a planning that is jointly based on the mission targets and 
the payloads; 
• 
the insertion of emergency and termination routes; 
• 
the verification of performances and constraints 
complying with surveillance mission objectives; 
• 
an optimal allocation of the sequence of targets to cover. 
The rest of this paper is organized as follows. Section II 
discusses the background. Section III provides an overview of 
the prototype and its software architecture. Section IV 
addresses a detailed analysis of the approaches for the flight 
plan verification. Section V details the approach for the route 
planning. Section VI presents some significant test results. 
II. 
BACKGROUND 
This section provides some essential introductive 
concepts for the description of the PFP, such as the 
surveillance missions of UAVs, the related planning, the 
possible support tools and the image quality metrics for the 
evaluation of surveillance tasks. 
A. Surveillance Missions of UAVs 
A UAS is made up of [7]: 
• 
Airframe – It is the mechanical component of the 
vehicle. It consists in the propeller(s) and the servos that 
actuate the control surfaces. 
• 
Flight Control System (FCS) – It collects aerodynamic 
information by means of a set of sensors and controls the 
propulsion system and the servos. 
• 
Payload – It is the specific equipment to accomplish a 
given mission. It may include cameras, infrared sensors, 
synthetic aperture radars, etc. 
• 
Ground Control Station (GCS) – It is a network of 
computer systems on the ground, which monitor and 
control UAS operation. 
• 
Communications infrastructure – It is the set of data 
links enabling communication between the aircraft and 
the GCS. 
• 
Launch and recovery systems – They are special means 
to launch and recover the vehicle. 
One of the most common applications of UAVs are 
surveillance missions or observations missions, which employ 
the UAS as an observation platform in order to locate a target 
entity within a Region of Interest (ROI). Thus, the UAS has to 
scan a given area, to track a fixed or mobile entity, to detect a 
predefined event and to monitor its evolution, etc. The 
surveying and reconnaissance capabilities of the vehicle 
depend on the sensor payload features. 
A typical surveillance mission of a UAV includes a 
mission scenario with a number of geographically distributed 
targets in a given ROI. Hence, the UAV is in charge of visiting 
these targets and to perform the needed manoeuvres and the 
sensing activities for their observation, according to the 
requirements of the specific surveillance mission. Each target 
shall be observed for the UAV to accomplish the mission. 
 
Start
Finish
Terminal point
Waypoint
Target area
No-Fly Zone
Threat
ROI
 
Figure 1.  Two-dimensional graphical representation of a UAV 
surveillance mission. 
Figure 1 graphically illustrates a two-dimensional 
description of the required mission. 
Actually, the considered surveillance mission is an 
exploration mission since the UAV shall cover all targets 
once. Other instances of surveillance mission exist, such as the 
persistent surveillance mission (wherein all targets shall be 
continuously visited) and the coverage mission (wherein a 
certain ROI shall be completely covered). Anyway, the 
solution approach for the exploration mission may be easily 
extended to the other instances of surveillance mission. 
In order to partially automatize the preflight operation for 
a surveillance mission of a UAV, an offline planner shall be 
introduced. Generally speaking, a planner is an abstract and 
explicit deliberative process that chooses and organizes 
actions by anticipating their expected outcomes. This process 
aims to achieve some predefined objectives as best as 
possible. Then, the planning of a surveillance mission of a 
UAV needs to generate a surveillance strategy for the vehicle 
that fulfills the requested mission objectives in an optimal 
way. 
The planning of a surveillance strategy shall usually 
process two types of plans [8]: 
• 
the flight plans, that allow the vehicle to reach the targets 
requested by the operator and to perform the manoeuvre 
for the successful sensing of the targets; 
• 
the activity plans, that allow the boarded payloads to 
execute the necessary activities on a target for the 
successful fulfilment of the mission. 
The proposed problem should be stated as an optimization 
problem since the planning is expected to produce plans which 
15
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

somehow maximize the mission effectiveness, accruing an 
utility and optimizing a convenient cost function. This 
optimization problem has to be constrained because the plans 
shall respect a set of constraints, which may be explicit (i.e., 
related to the mission definition) or implicit (i.e., related to the 
operative scenario, such as the configuration of the vehicle 
and the external context). Constraints may be further 
classified in: 
• 
mission constraints, that are related to mission objectives; 
• 
system constraints, that are related to the system 
configuration and state (the adopted vehicle model, the 
ground control station, the payloads, etc.); 
• 
path constraints, that are related to the features of the 
region of interest (e.g., no fly zones). 
Concerning the targets allocation for the flight planning, 
different approaches may be used. The spatial queue approach 
treats the target allocation problem as “customer” representing 
spatially distributed demands. Formally, spatial queues 
assume that a model of the exogenous component of the 
process exists, such as a stochastic model of the spatio-
temporal distribution of the arrivals of customers. The graph 
theoretic approach, instead, represents the allocation problem 
as a search of the optimal path on the graph. 
B. Support Tools for UAVs Missions 
A UAV mission may be divided in two main parts: the 
flight and the fulfillment of the assigned objectives. 
Objectives are reached by means of onboard payloads. A 
typical UAV mission starts with the assignment of the 
objectives, goes on with the definition of the flight plan to 
reach them and the execution and control of the flight from 
take-off to landing, and it ends with the post flight analysis of 
collected data. 
All such phases are supported by different types of 
software, that may be categorized in:  
• 
UAV Activities Management – Software to manage the 
different activities of UAV fleets and related projects at 
business level, maintenance plans and pilot workload. 
Different platforms providing such services are going to 
be developed in Europe. 
• 
Flight Management – Software allowing the execution 
of the flight from take-off to landing. This includes both 
Ground Control Station (GCS) software and onboard 
guidance, navigation and control software (autopilot). 
The autopilot works according to the flight plan and by 
means of sensing and actuating. The typical UAV ground 
control software receives telemetry data from the UAV 
and sends telecommands to it. It allows the aircraft 
operator to communicate the flight plan to onboard 
autopilot and/or to remotely control the UAV. It may 
support First-Person View (FPV) equipment to enhance 
the situational awareness of the remote pilot. In these 
fields, much research effort has been focusing on relevant 
aspects such as the perceptual and cognitive issues related 
to the interface of the UAV operator, including the 
application of multimodal technologies to compensate for 
the dearth of available sensory information. GCS 
software products usually allow to manage one UAV and 
they are combined to the UAV autopilot. For example, 
APM (ArduPilotMega) is the GCS of all UAVs with 
ArduPilot, a 3D robotics autopilot. Paparazzi GCS is the 
software employed in projects using the UAV Paparazzi 
platform [9]. It allows the design of the flight plan as well 
as the system configuration by means of a TCP-IP aircraft 
server. DJI provides a PC ground station for multi-rotor 
UAVs and manages the no-fly zones by means of a global 
list with a safety margin of 8 km [10]. The KopterTool is 
the ground software for the platform MikroKopter [11], 
whereas OpenPilot is an open platform [12]. Currently, it 
is possible to find commercial GCSs for multi-UAV 
systems ranging from the advanced proprietary and 
closed solution by Boeing for the X-45, Parrot SDK 
systems of PrecisionHawk, Draganfly, and Aeryon to 
open source solutions as QGroundControl Station and 
others [13]-[23]. 
• 
UAV Payload Management – Software enabling the 
management of the onboard payloads during the flight. 
This class allows the fulfillment of the assigned mission 
objectives. Payload management products may be 
integrated into ground control software or not. They 
strictly depend on the payload model and type. The 
payload usually provides its own control software. 
• 
UAV Post Flight Analysis – Software producing 
evidences on the basis of data collected by the UAV 
during the flight. In the photogrammetry domain, 
companies such as Erdas or Inpho have been proposing 
solutions for UAV. APS from Menci Software has been 
one of the first platforms for UAV in Italy. It provides 
some additional functionalities, such as StereoCAD and 
Terrain Tools to enhance the cartographic data, and 
APSCheck for the check of the collected images. It also 
allows to validate and classify the collected data [24]. 
Pix4D from Pix4D Switzerland (a spin-off of Swiss 
university) provides Pix4Dmapper Capture App, which 
allows to display on tablets or smartphones the images 
from commercial UAVs, like the DJI Phantom. 
ENSOMosaic Suite and PIEneering ([25], [26]) offer 
different and integrated solutions from flight planning 
software to post flight photogrammetric analysis, 
including 3D models. The PhotoScan platform from 
Agisoft proposes the SFM (Structure For Motion) 
innovative approach. PhotoScan Professional and 
Standard Edition products are cheap and are open enough 
to accomplish the growing needs from applications [27]. 
Cloud services for UAV (like REDcatch GmbH [28], 
Agribotix [29], and the Maps Made Easy project [30]) 
may support UAV not only for planning, but especially 
for post flight elaboration of geo data. Additionally, a 
transversal category may be considered regarding the 3D 
modeling and vision digitalizing to realize 3D model and 
advanced visualization applications. 
16
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

• 
UAV Flight Planning – Software implementing: the 
strategic planning, which occurs before take-off and 
takes a priori information about the environment and the 
mission goals to construct an optimal path for the given 
objectives; the tactical planning, which involves re-
evaluation of the flight plan during flight. 
Table I summarizes the types of support tools for UAVs 
missions and the related examples. 
TABLE I.  
SUPPORT TOOLS FOR UAVS MISSIONS 
Category 
Tools Description 
Activities Management 
Management of the UAVs fleet 
Flight Management 
Execution of the flight from take-off to 
landing (APM, Paparazzi, KopterTool, 
OpenPilot, QGroundControl Station) 
Payload Management 
Management of the onboard payloads 
Post Flight Analysis 
Production of evidences on the basis of 
collected data (APS, Pix4D, ENSOMosaic 
Suite, PIEneering, PhotoScan, REDcatch 
GmbH, Agribotix, Maps Made Easy) 
Flight Planning 
Strategic and tactical planning of the UAV 
flight 
 
Such software enables each UAV to properly flight 
followed by its own GCS, but two point seems to need further 
studies: 
• 
to guarantee a successful mission, what about the flight 
plan and the clear sight of the targets associated to 
mission objectives? 
• 
to guarantee the UAV flight according to airworthiness 
requirements, which ground station will cover the UAV? 
A careful study of the market and of the existing products 
shows that very few products combine these aspects. 
C. Images Quality Metrics 
As regards the mission objectives, the first issue in 
devising a surveillance planner is to agree what it means to 
do a good surveillance job and to define a surveillance 
performance requirement. In particular, in any application 
where proximal sensing on a specific target is required, a 
variable that plays an important role is the quality of the set 
of pictures. Many image quality metrics have been proposed 
in the recent years [31]. 
The quality of images is expressed by several technical 
parameters, such as ground sampling distance (GSD), 
modulation transfer function (MTF), signal to noise ratio 
(SNR) and National Imagery Interpretability Rating Scale 
(NIIRS). However, these parameters may partially address 
interpretability. GSD is related to the spatial resolution of 
images and is probably the most popular parameter. This is 
not the ultimate parameter to describe quality of images. For 
example, images with a same GSD may have very different 
interpretability. MTF and SNR may specify some aspects of 
image quality. 
For this reason, the NIIRS index has been proposed as a 
measure of image quality in terms of interpretability criteria. 
It has been applied with multiple types of imagery and offers 
a robust approach to developing an evaluation scale. It was 
formerly defined for intelligence and military use and 
extended to civilian use later on. The general approach is to 
use image analysis tasks to indicate the level of 
interpretability for imagery based on the detection of the 
object. The scale is defined so that when more information 
may be extracted from the image, the NIIRS rating increases. 
A set of standard image analysis tasks or “criteria” defines 
the levels of the scale. The NIIRS consists of 10 graduated 
levels (0 to 9), with several interpretation tasks or criteria 
forming each level. These criteria indicate the level of 
information that may be extracted from an image of a given 
interpretability level. All NIIRS rating levels are described in 
Table II. 
TABLE II.  
NIIRS LEVELS [32] 
Rating Level 
Description 
0 
Interpretability of the imagery is precluded by 
obscuration, degradation or very poor resolution. 
1 
It is possible to: distinguish between major land use 
classes; detect a medium-sized port facility; distinguish 
between runways and taxiways at a large airport; 
identify large area drainage patterns by type. 
2 
It is possible to: identify large fields; detect large 
buildings; identify major road patterns; detect ice-
breaker tracks; detect the wake from large ships. 
3 
It is possible to: detect large area contour ploughing, 
individual houses in residential areas, trains or strings of 
rolling stock; identify inland waterways navigable by 
barges; distinguish between natural forest and orchards. 
4 
It is possible to: identify farm buildings as barns, silos 
or residences; detect basketball or tennis courts in urban 
areas; identify individual tracks, rail pairs and control 
towers; detect jeep trails through grassland. 
5 
It is possible to: identify individual rail wagons by type; 
detect open bay doors of storage buildings; identify 
tents at recreational camping areas; distinguish between 
coniferous and deciduous trees during leaf-off 
conditions; detect large animals in grasslands. 
6 
It is possible to: identify cars as saloon or estate types; 
identify individual electricity or telephone posts in 
residential areas; detect footpaths through barren areas; 
distinguish between grain crops and row crops. 
7 
It is possible to: identify individual railway sleepers; 
detect individual steps on a stairway; detect tree-stumps 
and rocks in forest clearings and meadows. 
8 
It is possible to: identify vehicle grille detailing and/or 
the license plate on a truck; identify individual water 
lilies on a pond; identify the windscreen wipers on a 
vehicle; count individual lambs. 
9 
It is possible to: identify individual barbs on a barbed-
wire fence; detect individual grain heads on small grain 
crops; identify an ear tag on livestock. 
 
Because of different types of imagery support different 
types of interpretation tasks, individual NIIRS indexes have 
been developed for four major imaging types: Visible, Radar, 
Infrared, and Multispectral. It provides a simple, yet 
powerful, tool for assessing and communicating image 
quality and sensor system requirements and it has been used 
for our purposes to provide a direct criterion to validate the 
waypoint and the relative legs associated to mission targets 
objectives. In other words, a target will be considered 
successfully acquired or observed if the related payload 
image exhibits at least the requested NIIRS value. 
17
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

III. 
HIGH-LEVEL DESCRIPTION OF THE UAV PREFLIGHT 
PLANNER 
This section provides a high-level description of the PFP, 
by detailing the concepts behind the prototype and the 
software architecture. 
A. PFP Concepts 
This work concerns the PFP, that is a strategic planner 
allowing the mission controller to plan (edit), validate and 
then upload the flight plan to the UAV. It proposes a solution 
of an offline flight plan validated against aspects related both 
to mission objectives (acquisition of targets) and path 
constraints (such as no fly zones) and system constraints 
(such as data link coverage). The effectiveness of the 
acquisition of targets is enabled by a quantitative assessment 
of the NIIRS index. The PFP does not include the planning of 
payload activities. 
Research has focused on the identification of approaches 
and optimization algorithms which select the best route to 
guarantee 
the 
feasibility 
according 
to 
the 
vehicle 
performances, the compliance with the safety objectives, the 
endurance, the ability to return to base, and the terrain profile. 
The problem of flight planning is an instance of the 
generic path and motion planning problem, regarding the 
synthesis of a geometric path from a starting position to one 
or more targets and of a control trajectory along that path that 
specifies the state variables in the configuration space of a 
mobile system. The adopted approach for the optimal targets 
allocation is graph theoretic. 
B. PFP Software Architecture 
The PFP is a Java software prototype which allows to plan 
a mission of a UAS, namely, to identify the mission 
objectives and to design the mission path to observe them. 
Furthermore, the PFP ensures the success of the planned 
mission. The success assurance of the mission is attained by 
guaranteeing the following properties for the designed plan: 
• 
the dynamic feasibility from a 4D point of view by 
means of the selected vehicle; 
• 
the terrain separation; 
• 
the compliance with the no-fly zones, i.e., the 3D regions 
that shall not be entered by the UAV; 
• 
the compliance with the safe zones, i.e., the 3D regions 
that are reserved for the UAV flight and that shall not be 
left by the UAV; 
• 
the endurance, which requires that the boarded fuel level 
is enough to accomplish the mission; 
• 
the air data link coverage at any point of the route; 
• 
the visibility of the targets at the related route points. 
The preflight verification of these properties is necessary 
to avoid potential and expensive mission aborts due to 
neglected offline checks. In particular, the visibility check of 
the targets is profitable in order to avoid online changes of 
the UAV flight plan for the achievement of the mission 
objectives. In this way, the PFP provides a flight plan that is 
entirely verified and approved to guarantee the success of the 
designed mission. 
In detail, the PFP operation has been structured in three 
main phases, as shown in Figure 2: 
• 
the setup phase, which allows for the setting of all the 
configuration data that are required for the planning; 
• 
the planning phase, which identifies all the mission 
parameters and the actual route taken by means of the 
waypoints positioning; 
• 
analysis, which allows for the necessary checks in order 
to verify and approve the designed plan and shows the 
related numerical results and diagrams. 
Moreover, the software structure of the PFP is split into 
five modules: 
• 
User Database; 
• 
Mission Data; 
• 
Route Planner; 
• 
Analysis; 
• 
Export. 
 
Planner
Analyzer
Configuration Data
Mission Data
WP
Target
Setup
Planning
Analysis  
Figure 2.  Operation phases of the PreFlight Planner. 
The User Database and the Mission Data modules are 
employed in the setup phase, the Route Planner is used in the 
planning phase and the Analysis module performs the 
analysis phase. 
Figure 3 shows a block diagram of the software 
architecture of the PFP. It also graphically depicts the data 
flow amongst the different modules.  
 
Route Planner
Mission Data
User Database
Analysis
Export
 
Figure 3.  Data flow diagram of the PreFlight Planner. 
18
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

1) User Database Module 
The User Database is the module for the management of 
the database of the reusable data. Such data refer to objects 
that are used for the planning of a mission, but are not specific 
of a single mission. On the contrary, they may be defined and 
reused without modification in order to simplify the operator 
throughout the generation of a mission plan. 
Some of the reusable entities are: aircrafts; airports; 
payloads that may be boarded; point targets, i.e., mission 
objectives without a significant size; area targets, i.e., mission 
objectives with a significant size; user waypoints, which are 
defined by the user; standard waypoints, which are standard 
aeronautic 
waypoints; 
air 
data 
links, 
i.e., 
the 
transmission/reception instruments that may be boarded; no-
fly zones and safe zones; patterns, i.e., waypoint sequences 
that define significant route segments; contingency routes, 
i.e., standard routes that may be reused in case of failure in 
the air data link. 
The databases used are described in Table III. 
TABLE III.  
DESCRIPTION OF THE DATABASES 
Database 
Description 
Aircraft 
Database of the vehicles. 
Payload 
Database of the sensors that may be boarded on the 
vehicle. 
Point Target 
Database of the punctual targets, i.e., the mission 
objectives of interest that do not have a significant 
extension. 
Area Target 
Database of the extended targets, i.e., the mission 
objectives of interest that have a significant extension. 
User 
Waypoint 
Database of reference waypoints that are defined by the 
user. 
Standard 
Waypoint 
Database of reference aeronautical waypoints. 
Map 
Database of georeferenced images, which may be 
displayed in overlay on the map during the mission 
planning. 
Air Data 
Link 
Database of transmission/reception devices that may be 
boarded on a vehicle. 
Data Link 
Station 
Database of transmission/reception devices that may be 
used in the GCS. 
No Fly Zone 
Database of the regions that mark prohibited airspace 
for the flight of a vehicle. 
Safe Area 
Database of the reserved areas for the flight of a vehicle 
and from which the exit is prohibited. 
Pattern 
Database of waypoint sequences, which define 
reference route segments that may be reused for 
different missions. 
Contingency 
Database of standard routes, which have to be used in 
case of failures of the radio link between the vehicle and 
the GCS. 
Airport 
Database of the airports. 
 
In detail, the Aircraft database contains the models of the 
vehicles that may be used for a mission. These models allow 
to verify that the planned route belongs to the flight envelope 
of the selected vehicle. The parameters of the models are 
grouped for homogeneous classes, which define the vehicle 
performances throughout the different flight phases: 
acceleration, cruise, climb, descent, take-off and landing. 
The acceleration parameters describe the vehicle 
performances during the transition from a flight condition to 
another one (e.g., during a turn or during the passage from an 
altitude level to another one). Table IV reports the 
acceleration parameters of an aircraft model. 
The cruise performance model includes a set of 
parameters which define the behaviour of the vehicle during 
the levelled flight phase. Table V reports the cruise 
parameters of an aircraft model. 
TABLE IV.  
ACCELERATION PARAMETERS OF AN AIRCRAFT MODEL 
Parameter 
Description 
Turn Rate 
Turn rate of the vehicle in a levelled and coordinated 
turn. 
Pull Up 
Orthogonal acceleration with respect to the motion 
vector, which is used during a flight transition from a 
levelled flight or a dive to a nose-up. 
Push Over 
Orthogonal acceleration with respect to the motion 
vector, which is used during a flight transition from a 
levelled flight or a nose-up to a dive. 
Roll Rate 
Change rate of the bank angle of the vehicle during a 
turn. 
Pitch Rate 
Change rate of the pitch angle of the vehicle during a 
manoeuvre. 
Yaw Rate 
Change rate of the yaw angle of the vehicle during a 
manoeuvre. 
The cruise performance model includes a set of 
parameters which define the behaviour of the vehicle during 
the levelled flight phase. Table V reports the cruise 
parameters of an aircraft model. 
TABLE V.  
CRUISE PARAMETERS OF AN AIRCRAFT MODEL 
Parameter 
Description 
Ceiling 
Altitude 
Maximum altitude for the vehicle to hold up a levelled 
flight without resorting to accelerations. 
Default 
Altitude 
Cruise default altitude of the vehicle. 
Minimum 
Speed 
Minimum cruise speed (true airspeed), with the related 
fuel consumption. 
Maximum 
Speed 
Maximum cruise speed (true airspeed), with the related 
fuel consumption. 
Maximum 
Endurance 
Cruise speed (true airspeed) that allows for the 
maximum endurance of the flight, with the related fuel 
consumption. 
Maximum 
Range 
Cruise speed (true airspeed) that allows for the longest 
path of the flight, with the related fuel consumption. 
 
Table VI reports the performance parameters of a vehicle 
for the climb flight phase and the descent flight phase. 
TABLE VI.  
CLIMB/DESCENT PARAMETERS OF AN AIRCRAFT MODEL 
Parameter 
Description 
Airspeed 
Vehicle speed (true airspeed) in the climb/descent 
phase. 
Altitude Rate 
Altitude rate of climb/descent of the vehicle. 
Fuel Flow 
Fuel consumption during the climb/descent manoeuvre. 
 
Table VII reports the performance parameters of a vehicle 
for the landing flight phase. 
Table VIII reports the performance parameters of a 
vehicle for the take-off flight phase. 
19
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE VII.  
CLIMB/DESCENT PARAMETERS OF AN AIRCRAFT MODEL 
Parameter 
Description 
Airspeed 
Vehicle speed (true airspeed) that is kept during the 
descent path towards the landing track. 
Ground Roll 
Covered on-ground distance until the stop. 
Fuel Flow 
Fuel consumption during the landing manoeuvre. 
TABLE VIII.  CLIMB/DESCENT PARAMETERS OF AN AIRCRAFT MODEL 
Parameter 
Description 
Airspeed 
Vehicle speed (true airspeed) during the taxiing. 
Ground Roll 
Covered on-ground distance until the take-off. 
Departure 
Speed 
Vehicle speed (true airspeed) at the take-off. 
Climb Angle 
Climb angle at the take-off. 
Acceleration 
Fuel Flow 
Fuel consumption during the acceleration for the take-
off. 
Departure 
Fuel Flow 
Fuel consumption at the take-off speed. 
 
As regards the point targets, they are generally objects 
(natural or artificial structures), with a negligible extension or 
non influential for the purposes of the planning. These targets 
shall be acquired by means of one or more payloads that are 
boarded on the vehicle. Table IX reports the parameters of a 
point target. 
TABLE IX.  
PARAMETERS OF A POINT TARGET 
Parameter 
Description 
Latitude 
Target latitude. 
Longitude 
Target longitude. 
Altitude 
Target latitude. 
NIIRS Level 
Requested minimum NIIRS for the target acquired 
image by the sensors. 
Date From 
Starting validity date of the target. 
Date To 
Ending validity date of the target. 
Info 
Description of the target. 
 
Besides, the managed waypoints are compliant with the 
ARINC (Aeronautical Radio INCorporated) 424 standard, 
which is the international standard file format for aircraft 
navigation data. 
 
2) Mission Data Module 
The Mission Data carries out the management and the 
insertion of the set of data that characterize a given mission 
throughout the planning phase. The module is invoked both 
for the creation and for the change of a mission. 
It collects the following data from the user: 
• 
the mission vehicle; 
• 
the mission payloads; 
• 
the air data links for the mission; 
• 
the fuel level; 
• 
the start time; 
• 
the safe zone; 
• 
the ground control stations that are active. 
The Mission Data receives the contents of the following 
databases from the User Database: aircraft, safe area, 
payload, airport and data link station. and sends its own data 
to the Route Planner. The data that the operator submits by 
means of the Mission Data module are then sent to the Route 
Planner module in order to allow for the creation for the 
mission scenario. 
 
3) Route Planner Module 
The Route Planner is the module that accomplishes the 
flight planning (or route planning) phase. In the following, 
flight planning and route planning will be used with the same 
meaning. 
Moreover, the Route Planner module performs the 
following functions by means of the interaction with a 
georeferenced 2D map: 
• 
insertion of a new waypoint, both as a last waypoint of 
the route and as an intermediate waypoint between two 
preexisting waypoints; 
• 
change of a the position and/or of the attributes of a 
previously inserted waypoint; 
• 
removal of a previously inserted waypoint. 
The crossing order of the waypoints may be also 
modified. 
Each waypoint may be related to one or more targets, 
which shall be observable (i.e., shall exhibit a minimum 
specified NIIRS) along the route section between two 
consecutive waypoints. The user may request that a target is 
observable by means of one or more payloads within the set 
of boarded payloads. 
Besides, every waypoint may be optionally related to one 
or two contingency routes, that shall be selected within the 
User Database. One contingency route may be defined as 
emergency route, whereas the other may represent a 
termination route: the former is the route to follow if the air 
data link is lost along the course starting from the chosen 
waypoint, while the system is waiting for the link recovery; 
the latter is the route to follow if the air data link is lost along 
the course starting from the chosen waypoint and it cannot be 
recovered. Hence, the match between a waypoint and the 
contingency routes is static. 
During the insertion and the change/removal of the 
waypoints, the Route Planner executes some validity checks 
in order to ensure that the following two conditions always 
hold: 
1. the vehicle is able to perform the necessary manoeuvres 
to reach the waypoints; 
2. there are no ground impacts (i.e., collisions with the 
terrain). 
If the first condition is violated, the system does not agree 
to the proposed modification of the route. If the second 
condition is violated, the system signals the problem to the 
user, who may also continue the planning without automatic 
modifications to the route. The module also handles a 3D 
view of the Earth, that may be invoked anytime and allows a 
realistic visualization of the mission execution. 
Section V deepens the approach for the route planning. 
 
20
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

4) Analysis Module 
The Analysis module is in charge of the analysis of the 
flight (or route) plans as a function of the mission objectives. 
It verifies that all the mission constraints are fulfilled and 
ensures the success of the plan. 
In detail, the following properties of the computed plan 
are checked: 
• 
the vehicle never leaves the coverage region of the air 
data links, which is computed by taking into account the 
positions of the GCSs and the land orography; 
• 
the targets are always visible along the route sections, by 
taking into account the boarded payloads and the land 
orography and by envisaging a minimum level of quality 
of the captured image; if some variable confocal optics 
are boarded, the visibility check is carried out with four 
different focal lengths, namely, minimum, 1/3 of the 
maximum, 2/3 of the maximum and maximum; 
• 
the vehicle never leaves the safe zone, if this is included 
in the mission planning; 
• 
there are no ground impacts; a minimum distance with 
the terrain is guaranteed for each point of the route along 
vertical, frontal and lateral directions; 
• 
the boarded fuel is enough for the accomplishment of the 
whole flight plan. 
The checks are performed starting from the data of the 
aircraft (i.e., its model parameters), of the payload and of the 
mission. The results of each check may be displayed both on 
a 2D map and on a 3D view, by highlighting the route 
segments wherein the test has passed and the ones wherein 
the test has failed. 
The approach for the flight plan verification carried out 
by the Analysis module is examined in depth in Section IV. 
 
5) Export Module 
The Export module exports one or more planned missions 
in order to upload them in the Flight Management System 
(FMS) of the reference UAV. 
The interchange format is based on XML (eXtensible 
Markup Language) and has been implemented by a 
configurable XML schema. 
IV. 
FLIGHT PLAN VERIFICATION IN THE UAV PREFLIGHT 
PLANNER 
Section III reports the high-level requirements of the 
Analysis module for the verification of a flight plan. 
In detail, the coverage limit of the air data link is 
computed starting from the link budget equation, i.e. 
 
 =  +  − 	 − 	
 − 	 +  , 
(1) 
wherein   is the power of the signal that arrives at the 
receiver,  is the transmitted power,  is the gain of the 
transmitter antenna, 	 is the transmitter loss, 	
 is the loss 
due to the signal propagation in space, 	 is the safety link 
margin, and  is the gain of the receiver antenna. All these 
parameters are known and are stored as data of the air data 
links in the User Database, except 	
. The latter depends on 
the distance  that is covered by the wave and the wave 
length  , which is derivable from the frequency of the 
transmission channel (also stored in the User Database). In 
detail, the relation between 	
,  and  is 
 
	
 = 20 ln
  

 . 
(2) 
In order to receive a signal, the condition  > 0 must 
hold. This condition is equivalent to 
 
20 ln
  

<  +  − 	 − 	 +  =  , (3) 
wherein  is equal to  +  − 	 − 	 + . 
Hence, the maximum coverage distance  is 
 
 =

 

 . 
(4) 
As regards the NIIRS quantitative assessment, the first 
step is the computation of the GSD, which is the dimension 
of the ground projection of a sensor pixel. If we assume the 
pixels to be square with dimension  and the acquisition to 
occur with an elevation angle that is different from  2
⁄ , the 
ground projection of the pixel is distorted in a rectangle. 
Starting from Figure 4, the following equations hold 
 
" =
#∙%
&  , 
(5) 
 
' =
#∙%
&∙()* +,+- , 
(6) 
 
GSD = 1" ∙ ' =
#∙%
&∙√()* +,+- . 
(7) 
The expected NIIRS may be computed as 
 
NIIRS = 6 + 7 ∙ log:;GSD, 
(8) 
wherein 6 and 7 are two constants, whose values have been 
set as 6 = 10.251 and 7 = −3.32 [33]. 
The structure of eq. (8) and the values of 6 and 7 are 
coherent with the General Image Quality Equation (GIQE). 
The GIQE is an empirical formula for calculating the image 
quality that is expected for a given optical system [33]. It is a 
model that was developed using statistical analysis of 
imagery analyst responses. 
The coefficients 6 and 7 and the logarithmic structure 
were obtained by regression to fit the results of an image 
evaluation study. In detail, the logarithmic structure of eq. (8) 
embodies the notion that NIIRS changes by 1.0 for each 
factor of two in the spatial resolution is equivalent to one unit 
on the NIIRS scale, namely, a change of ±1 of the NIIRS is 
equivalent to halving or doubling the distance between the 
sensor and the observation point. This relationship was 
confirmed by visual observations [33]. 
More broadly, the GIQE predicts the NIIRS value as a 
function of other parameters in addition to the GSD (which is 
directly 
related 
to 
the 
spatial 
resolution). 
These 
21
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

supplementary parameters are: the Relative Edge Response 
(RER), which is indirectly associated to the point spread 
function and that estimates the effective slope of the imaging 
system’s edge response; the SNR and the system post-
processing noise gain, which quantify the noise in the post-
processed imagery; the system post-processing edge 
overshoot factor, that measures the amount of edge ringing 
resulting from post-processing. Within this work, we 
consider only the spatial resolution (i.e., the GSD) as a 
parameter for the NIIRS estimation, whereas the other criteria 
are not considered since they are related to the post-
processing phase and the aperture configuration. 
 
 
Figure 4.  NIIRS quantitative estimation in the PreFlight Planner. 
V. 
ROUTE PLANNING IN THE UAV PREFLIGHT PLANNER 
As stated in Section III, the problem of flight planning has 
to be stated as a constrained optimization problem, whose 
solution is generally challenging from a computational point 
of view. A possible solution of this issue is the adoption of a 
hierarchical decomposition. Indeed, the original problem is a 
monolithic planning problem, namely, it consists of a single 
large problem and may be solved only by means of a single 
large algorithm, which examines all the factors at once. By 
contrast, a hierarchical decomposition splits the monolithic 
problem into smaller sub-problems, which are arranged in a 
hierarchical fashion. The decomposition is usually performed 
by reducing the degree of detail or the range of the single 
problems, which is named problem horizon. For instance, the 
top-level sub-problems may consist of the whole problem 
range with a small degree of detail, whereas the bottom-level 
sub-problems may have a small horizon with a high degree 
of detail. The hierarchical decomposition of the original 
problem in sub-problems is established by fixing a criterion 
for the problems horizon (i.e., the range of the single 
problems). Common horizons are temporal or spatial, 
wherein the problem is broken down by units of time or 
distance. 
In our case, we use a temporal hierarchical decomposition 
for the partition of the joint mission planning problem. 
Therefore, a root planning problem is provided for the 
planning over the entire mission time and it acts over the total 
temporal horizon, but with a coarse degree of detail. Instead, 
the child sub-problems work on shorter temporal horizons 
and supply accurate plans. As regards the coordination of the 
hierarchical decomposition, given that the planning problem 
has to be stated as an optimization problem, we employ the 
multilevel optimization principle [8] in order to ensure that 
the system-wide objectives and constraints are respectively 
optimized and satisfied along the hierarchy. 
In particular, the global optimization problem is broken 
in simpler problems, which are independently solved. 
Moreover, the upper levels coordinate the solutions of the 
decoupled problems of lower levels. In our case, the flight 
planning problem for the surveillance mission of a UAV is 
decomposed in the following sub-problems: 
• 
the task planning problem, which works over the whole 
temporal horizon and aims at an optimal scheduling 
(assignment and ordering) of the targets to cover and at 
the generation of an optimal high-level (i.e., with a 
coarse degree of detail) trajectory; 
• 
the trajectory planning problem, which works over a 
small temporal horizon and consists in the actual flight 
planning (i.e., the real trajectory) of the vehicle. 
In the case of PFP, the trajectory planning problem has to 
generate a trajectory that allows the aircraft to reach the 
targets safely and on schedule. This problem is solved by the 
Route Planner module, which carries out the computations of 
the flight plan for the specific aircraft. It employs the 
performance model of the aircraft in order to ensure the 
realistic and optimized route. The performance model 
includes some well-known characteristic parameters, such as 
cruise airspeed, climb rate, roll rate, etc. The route is modeled 
by means of a sequence of curves and the state of the vehicle 
may be analytically computed at any given time. Moreover, 
this module provides a software geometry engine that 
accurately illustrates dynamic objects. 
The Route Planner module is based on the STK (Systems 
Tool Kit) product of AGI (Analytical Graphics Inc.). It is a 
physics-based software geometry engine that accurately 
displays and analyzes dynamic objects in real or simulated 
time. It models moving objects and the dynamic relationships 
of those objects in space. Moreover, it provides the platform 
and tools for solving system level problems of motion and 
time. 
Instead, as regards the task planning problem, it may be 
seen as a task allocation problem. Indeed, it produces the 
selection and the ordering of the waypoints (i.e., the reference 
points for navigation) for the mission accomplishment and it 
22
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

establishes the optimal ordered sequence of targets to cover. 
The produced list of waypoints is the reference input for the 
trajectory planner. 
By taking into account the constraints that are handled by 
the PFP, the stated problem about the task planning for a 
UAV surveillance mission is surely NP-hard. Indeed, the 
Travelling Salesman Problem (TSP) and the Vehicle Routing 
Problem (VRP) are known to be NP-hard [34] and they may 
be regarded as a special case for the surveillance task 
planning. 
Hence, we firstly make the following further assumptions 
to enable an approximate resolution: the UAV moves only in 
a plane (i.e., at a constant altitude); the targets always 
coincide with a single waypoint; the durations of an 
acquisition activity on a target by means of the payloads are 
left out. Under these assumptions, the stated task planning 
problem is a topological planning problem is a topological 
planning problem [35]. Here, the landmarks and the gateways 
are represented by the targets and some distinctive points for 
the no fly zones, such as their polygonal vertices. The search 
space may be built by orientation regions, which are defined 
by landmark pair boundaries. Every landmark pair boundary 
is a link between two landmarks and it partitions the world 
into orientation regions. Then, orientation regions are 
conceptually similar to neighbourhoods and typify the search 
space as a graph. 
Figure 5 shows a graphical depiction of the topological 
view for task planning problem of a surveillance mission by 
means of a UAV. 
 
Start
Terminal point
Cross waypoint
Mission waypoint
No-Fly Zone
Threat
ROI
 
Figure 5.  Topological view of the task planning problem for a 
surveillance mission of a UAV. 
In light of these reflections, the total cost of a surveillance 
itinerary @ will be related to the assessed time AB  for its 
completion. The itinerary @ is a sequence of allocated tasks 
(i.e., waypoint) for the UAV and can be described as an 
ordered sequence of points in the space domain (i.e., the 
region of interest) C that are assigned to the vehicle, i.e., 
 
@ = D@;, @:, @F, … H,     @I ∈ C, K ∈ ℕ . 
(9) 
The single points may coincide with the target areas and 
may be scheduled for their visitation or may be used for the 
avoidance of no fly zones. Furthermore, the times to targets 
are a decision variable and they should be coupled with the 
itinerary points @I. We ignore this and we assume that the 
UAV moves at a constant speed. Thus, the times to targets 
are only a consequence of the itinerary scheduling. 
The task planning problem for the surveillance mission of 
a UAV may be formally stated as the search of a surveillance 
itinerary @MNO such that 
 
@MNO = argmin
@
 A@ . 
(10) 
Each itinerary may be described by a structure with the 
following attributes: the sequence of the traversed waypoints; 
the temporal cost AB. The behaviour of the planning algorithm 
has been designed with an iterative approach. At every step, 
the target with the shortest time to reach (from the current 
planned position) is selected as a next candidate for the 
itinerary. If more targets have the same shortest time to reach, 
they are all selected and an alternative itinerary is processed 
for each of them. 
A new itinerary is computed for every candidate target 
with the shortest time to reach by invoking the same 
algorithm with different inputs, which plans an itinerary 
starting from the current candidate target. The pseudo-code 
for the task planning algorithm is the following: 
 
1. 
function task_planning(route_id, residual_scans, start_visit_times, M) 
2. 
root ← null 
3. 
do 
4. 
   if root ≠ null 
5. 
      route_id ← root.id 
6. 
      start_visit_times ← root.start_visit_times 
7. 
      residual_scans ← root.residual_scans 
8. 
      root ← root.next 
9. 
   end 
10.    next_targets ← findTargetsWithShortT(start_visit_times) 
11.    start ← last(route_id) 
12.    for k=1 to size(next_targets) 
13. 
current_next_target ← next_targets(k) 
14. 
route_to_current_target ← Dijkstra(start, current_next_target, M) 
15. 
new_start_r_times ← update_visit_times(start_visit_times) 
16. 
new_route_id ← update_route_id(itineraries, route_id) 
17. 
update_itineraries(route_id, route_to_current_target) 
18. 
if residual_time > 0 
19. 
   new_root.route_id ← new_route_id 
20. 
   new_root.start_visit_times ← new_start_visit_times 
21. 
   new_root.residual_scans ← residual_scans – 1 
22. 
   if root = null 
23. 
      new_root.next ← null 
24. 
   else 
25. 
      new_root.next ← root 
26. 
end 
27. while root ≠ null 
28. end 
23
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The VWXY_K variable is the identifier of the local route 
into the planned itineraries set and start_visit_times is the 
array of targets local visit times. If there are some residual 
scans (residual_scans) to schedule, the planning strategy 
schedules the execution of a child process (planning spawns), 
which will look for an itinerary starting from the current 
candidate (i.e., the local next target). The candidates are 
saved on a linked list implementing a stack. The VWXY_K 
needs to be updated because the planning could overwrite the 
current itinerary or could allocate a new itinerary depending 
on the number of candidates for the spawn point. Besides, the 
itinerary update involves the update of the related costs. The 
route for the next target is processed by the Dijkstra 
algorithm, which operates according to the adjacency matrix 
M of the topological graph. 
The adopted search strategy is: 
• 
best-first, because every spawn selects the next candidate 
among the most promising targets (the ones with the 
shortest time to reach); 
• 
breadth-first, because the graph structure is explored 
starting from the current root node and by inspecting its 
neighbour nodes (the targets with the shortest times to 
reach). 
The function may be used also in case of re-planning by 
updating the matrix M. 
VI. 
TEST RESULTS 
We have conducted a series of tests to verify the correct 
implementation of the software. The main entities have been 
tested by creating, modifying and deleting records in different 
databases and also checking their correct visualization during 
the planning process. The verification of the analysis has 
required the creation of a number of flight plans to test the 
software behavior on different situations. In the following, 
two test cases are reported.  
The first test and the related check results are depicted in 
Figure 6. The flight takes place in a segregated area (the azure 
line), the route (the yellow line) consists of eight waypoints, 
three of which are loiter. The no-fly zone is reported in red. 
There is a single GCS, but the link coverage is not visible 
because the area of operations is much less extensive. Two 
targets are associated to loiter waypoints. As shown by the 
right side of Figure 6, the flight plan validation fails on two 
aspects: the targets visibility and the boundaries overcome of 
segregated flight zone. The PFP analysis module is able to 
provide other graphic evidences: the non compliance with 
safety objectives, the issues on target visibility (highlighted 
red path) and the report on the fuel consumption. 
In the second test, the flight plan of the first test has been 
modified in order to violate the data link coverage, the fuel 
consumption and the terrain obstacles on a linear target. The 
outcomes of the analysis are shown in Figure 7, which 
provides: the evidence that the flight plan is not feasible due 
to the overcoming of all the considered constraints; finally, 
the evidence of the link coverage analysis, the problems of 
visibility on the linear target (a river). 
It may be noted that the previous test cases have been 
discussed in order to highlight the verification and the 
analysis capabilities of the PFP. Indeed, the checking phase 
of the PFP is able to verify the compliance of the computed 
flight plan with all the reference constraints and to guarantee 
the success of the designed mission. However, some of these 
constraints are previously taken into account by the Route 
Planner, which processes the actual flight plan in order to 
reach the prescribed waypoints by means of the selected 
aircraft (i.e., the related dynamic model). Clearly, the other 
constraints are not considered in the planning phase since 
they do not directly involve the trajectory elaboration. Thus, 
they may be only evaluated by means of the PFP checks. 
As regards the route planning algorithm, some specific 
tests have been performed in order to exclusively solicit it and  
to evaluate the time required for the processing of a route 
plan. The Arduino MEGA 2560 has been used as testing 
platform. It is a microcontroller board, based on the 
ATmega2560 microcontroller, with 16 MHz clock speed, 8 
kB of SRAM and 2560 kB of flash RAM. Different scenarios 
have been used, with an increasing number of targets. Table 
X reports the test results of the route planning algorithm. 
TABLE X.  
TEST RESULTS OF THE ROUTE PLANNING ALGORITHM 
Number of Targets 
Planning Time [µs] 
5 
90728 
10 
195136 
15 
299200 
20 
366048 
25 
427223 
 
VII. CONCLUSION AND FUTURE WORK 
This work proposes some new perspectives on UAV 
preflight panning by pursuing the idea that a flight plan 
should not only guarantee a successful flight, but also a 
successful mission. It analyses the typical UAV surveillance 
missions where proximal sensing is requested and their main 
requirements. Here, the quality of images is a critical aspect 
and an approach for its measurement is implemented in the 
PFP as a criterion to validate the flight plan. Once assured the 
achievements of the mission targets, the inclusion of other 
kind of constraints such as the link coverage, the no fly zones 
avoidance, the evaluation of the emergency and termination 
routes, etc., guarantees the safety of the produced plan.  
The integration of the task allocation optimization in the 
Route Planner module enables the capability to support the 
operator in the waypoints identification.  
Future enhancement will consider the planning of the 
route of a fleet of UAVs jointly cooperating to perform a 
surveillance mission.  
REFERENCES 
[1] C. Di Benedetto, D. Pascarella, G. Gigante, S. Luongo, A. 
Vozella, and F. Martone, “A Preflight Planner for Succesful 
Missions of Unmanned Aerial Vehicles,” In: Proceedings of 
The Twelfth International Conference on Autonomic and 
Autonomous Systems (ICAS 2016), IARIA, Lisbon, Portugal, 
26-30 June 2016, pp. 18—24. 
24
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[2] L. A. Ingham, “Considerations for a roadmap for the operations 
of Unmanned Aerial Vehicles (UAV) in South African 
Airspace,” PhD thesis, Electrical and Electronic Engineering, 
Universiteit Stellenbosch University, 2008. 
[3] C. Schumacher, P. R. Chandler, M. Pachter, and L. S. Pachter, 
“Optimization of Air Vehicles Operations Using Mixed-
Integer Linear Programming,” CMU/SEI-95-TR-021 ESC-TR-
95-021, Air Force Research Laboratory, 2006. 
[4] M. Quaritsch, “Agent-oriented programming,” Elektrotechnik 
& Informationstechnik, vol. 127, no. 3, 2010, pp. 56–63. 
[5] D. Gross, S. Rasmussen, P. Chandler, and G. Feitshans, 
“Cooperative operations in urban terrain (COUNTER),” 
Proceedings of Society of Photo-Optical Instrumentation 
Engineers Conference, Vol. 6249, 2006, pp. 1–11. 
[6] M. Israel, “A UAV-based roe deer fawn detection system,” 
International Archives of the Photogrammetry, Remote 
Sensing and Spatial Information Sciences, Volume XXXVIII-
1/C22, 2011, ISPRS Zurich 2011 Workshop, 14-16 September 
2011, Zurich, Switzerland, pp. 51–55. 
[7] E. S. Barnadas, “Formal Mission Specification and Execution 
Mechanisms for Unmanned Aircraft Systems,” PhD thesis, 
Department of Computer Architecture, Technical University of 
Catalonia, 2010. 
[8] S. E. Kolitz and R. M. Beaton, “Overall System Concepts in 
Mission Planning,” In: New Advances in Mission Planning and 
Rehearsal Systems. Vol. 192. AGARD Lecture Series. Neuilly 
Sur Seine, France: Advisory Group for Aerospace Research & 
Development, 1993. 
[9] P. Brisset, A. Drouin, M. Gorraz, P. S. Huard, and J. Tyler, 
“The Paparazzi Solution,” Proceedings of MAV (Micro Air 
Vehicles) 2006. 
[10] DJI, 
Fly 
Safe, 
[Online], 
Available 
from 
http://www.dji.com/fly-safe [retrieved: 02, 2017]. 
[11] MikroKopter, MikroKopter Tool, [Online], Available from 
http://www.mikrokopter.de/ucwiki/MikroKopterTool 
[retrieved: 05, 2016].  
[12] OpenPilot, 
[Online], 
Available 
from 
https://www.openpilot.org [retrieved: 05, 2016]. 
[13] Easy Map UAV, Specification, [Online], Available from 
http://www.easymapuav.com/specification 
[retrieved: 
02, 
2017]. 
[14] APM, Mission Planner Home, [Online], Available from 
http://planner.ardupilot.com [retrieved: 02, 2017]. 
[15] 3DR, Free Groun Station Application, [Online], Available 
from http://3dr.com/download_software [retrieved: 02, 2017].  
[16] mdCockpit, 
UAV 
Control, 
[Online], 
Available 
from 
http://www.microdrones.com/en/products/software/mdcockpit
/flight-planning [retrieved: 02, 2017].  
[17] UAV Navigation, Visionair GCS Software, [Online], 
Available 
from 
http://www.uavnavigation.com/products/visionair-ground-
control-station-software [retrieved: 02, 2017].  
[18] UAV-EA, Mission Planner Autopilot Software, [Online], 
Available from http://uaveastafrica.wordpress.com/mission-
planner-autopilot-software [retrieved: 02, 2017]. 
[19] Orbit Logic, UAV Planner, [Online], Available from 
http://www.orbitlogic.com/products/uav.php [retrieved: 02, 
2017]. 
[20] MAVinci, MAVinci Desktop, [Online], Available from 
http://www.mavinci.de/en/completesys/desktop [retrieved: 02, 
2017]. 
[21] FAS, Tactical Control Station (TCS), [Online], Available from 
http://fas.org/irp/program/collect/uav_tcs.htm [retrieved: 02, 
2017]. 
[22] Micropilot, Micropilot Ground Control Station, [Online], 
Available from http://www.micropilot.com [retrieved: 02, 
2017]. 
[23] SAGEM, SAGEM Mission Planning Systems, [Online], 
Available from http://www.sagem.com/aerospace/military-
aircraft/mission-planning-systems [retrieved: 02, 2017]. 
[24] Menci 
Software, 
Photogrammetry 
Software, 
[Online], 
Available from http://www.menci.com [retrieved: 02, 2017]. 
[25] MoasicMill, EnsoMOSAIC photogrammetry software and 
hardware for aerial image processing, [Online], Available from 
http://www.ensomosaic.com [retrieved: 02, 2017]. 
[26] PIEnnering, Parallel Image Engineering, [Online], Available 
from http://www.pieneering.fi [retrieved: 02, 2017]. 
[27] Agisoft, Ahisoft PhotoScan, [Online], Available from 
http://www.agisoft.com [retrieved: 05, 2016]. 
[28] REDcatch, 
Photogrammetric 
Cloud 
Service, 
[Online], 
Available from http://www.redcatch.it [retrieved: 05, 2016]. 
[29] Agribotix, Agricultural Intelligence Drone-Enabled, [Online], 
Available from http://www.agribotix.com [retrieved: 05, 
2016]. 
[30] Maps Made Easy, Aerial Map Processing & Hosting, [Online], 
Available from http://www.mapsmadeeasy.com [retrieved: 05, 
2016]. 
[31] R. Reulke and A. Eckardt, “Image quality and image 
resolution,” In 2013 Seventh International Conference on 
Sensing Technology (ICST), 2013, pp. 682-68. 
[32] The National Imagery Interpretability Rating Scale (NIIRS), 
[Online], 
Available 
from 
http://ncap.org.uk/sites/default/files/NIIRS.pdf [retrieved: 05, 
2016]. 
[33] S. T. Thurman and J. R. Fienup, “Analysis of the general image 
quality equation,” Proceedings of SPIE, Vol. 6978, Visual 
Information Processing XVII, 2008. 
[34] J. K. Lenstra and A. R. Kan, “Complexity of the vehicle routing 
and scheduling problems,” Networks, Volume 11, Issue 2, 
1981, pp. 221–227 
[35] J. Giesbrecht, “Global Path Planning for Unmanned Ground 
Vehicles,” Technical Memorandum DRDC Suffield TM 2004-
272, Defence R&D Canada – Suffield, 2004. 
 
25
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
 
Figure 6.  Results of the first test on the PFP. 
 
Figure 7.  Results of the second test on the PFP. 
26
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

