Development Framework for Distributed Agile Software Development 
 
Abdullah Saad Alqahtani, John David Moore, David K Harrison, and Bruce M Wood 
School of Engineering and Built Environment, Glasgow Caledonian University, Glasgow, United Kingdom 
{abdullah.alqahtani, j.d.moore, d.harrison,  b.wood} @gcu.ac.uk 
 
 
Abstract—There is a growing interest in applying Agile 
development methods alongside global software development 
in order to reap the benefits of both approaches. With this said 
however, research has shown that software companies are 
encountering significant challenges when attempting this, due 
to the contradiction between Agile values and the global 
development environment. This paper focuses on the 
challenges encountered with this kind of development, and 
discusses several techniques via which these challenges can be 
addressed. It proposes a framework for distributed Agile 
development. Data has been collected from 85 participants 
from all around the world using both a self-completed 
questionnaire and face-to-face interviews. From this study it 
was found that communication barriers are the biggest 
development 
challenge. 
In 
order 
to 
ameliorate 
this, 
development teams and product owners need to work hard to 
improve the level of communication between them, by 
adopting a regimented communication schedule.  The co-
located development strategy “Scrum of Scrums”, where 
distributed isolated teams integrate together using one of the 
Agile methods, was found to be the most suitable strategy for 
distributed Agile development. 
Keywords—distributed 
Agile; 
development 
framework; 
Scrum; Lean and Kanban methods. 
I. 
 INTRODUCTION  
Increased globalization has led to greater competition 
between software development companies around the world. 
The software development industry is seeing a shift from co-
located 
software 
development 
to 
Global 
Software 
Development (GSD), which involves multiple distributed 
development teams in different locations. GSD facilitates 
competitive software development prices by using teams 
from countries that have an abundance of IT developers 
available at relatively low cost [1]. In addition, research has 
shown that software companies are interested in applying 
Agile Software Development (ASD) to develop the software 
by global teams, in order to have the combined advantages 
of ASD and GSD [2][3]. The combination of Agile 
development methods and GSD is known as Distributed 
Agile Software Development (DASD). Venkatesh defines 
Distributed Agile Development as “a model in which 
projects execute an Agile Methodology with teams that are 
distributed 
across 
multiple 
geographies” 
[4]. 
This 
combination has shown signs of providing IT companies 
with the ability to meet the critical success factors of the 
software industry, such as quality, time, and cost. Sutherland 
et al. [5] detail their experience of applying a distributed 
Scrum approach and report several advantages, such as a 
high increase in team productivity, an increase in the 
transparency between team members, better building of trust, 
and increased project visibility. However, although the 
potential advantages of GSD are clear, research has shown 
that software companies are encountering significant 
challenges by applying this approach. Developers are not 
always able to apply Agile practices successfully due to 
challenges introduced through the global development 
environment, including distance and time zone differences 
[6].  
This paper presents the results of a mixed methodology 
study. The initial, quantitative part aims to study the impact 
that the projects’ settings make to the DASD. Inferential 
statistics will be used to investigate the differences between 
the development challenges, which have been reported by 
the study participants, with regards to the demographic 
information of their projects’ settings.  The second, 
qualitative part involves one specific company, which 
employs the DASD approach.  The study focuses on the 
challenges of adopting DASD and discusses some possible 
techniques to address and minimize those challenges. 
Finally, the results will be integrated to form a development 
framework to guide users towards a better adoption of 
DASD. 
This paper is structured as follows: first, the related work 
will be reported. Following this, the research method will be 
discussed. The results and discussion will be presented in 
Sections IV and V. Section VI will then address the study 
validation. Section VI will report the proposed development 
framework, whilst the final section will contain the summary 
and conclusion. 
II. 
RELATED WORK 
Venkatesh [4] reports some results from surveys by the 
DH2A Institute. Their data shows that 30% of respondents 
are using distributed Agile, 40% use local Agile 
development, and about 85% of them have distributed teams. 
In addition, the 30% of respondents that stated they are using 
distributed Agile explained their use of this approach by the 
advantages and successes they achieved from this kind of 
development, such as reducing the development cost, 
accessing the talent pool and resources, increasing team 
productivity, and decreasing the cost of having high quality 
software. 
However, Software companies are likely to encounter 
significant challenges and large obstacles when they adopt 
DASD. Developers may not be able to apply the Agile 
methods and practices successfully due to the global 
development environment. The lack of communication and 
differences in culture and time zones could create huge 
challenges for Agile methods [7], [8]. 
 A systematic review studied the application of Scrum 
practices in global software development using 27 literature 
211
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

studies, and analyzed the challenges into three categories: 
communication, coordination, and control [9].  
The challenges of using Agile with distributed national 
teams can be categorized into three types of deficiency: 
communication, trust, and control [3].  
Ensuring effective communication within DASD is a 
huge challenge. The reasons behind these communication 
challenges could be summarized into four categories: a lack 
of communication tools, time zone differences, a lack of 
English language, and a lack of teamwork. These barriers 
may limit and decrease communication levels in a distributed 
development [10]. 
There is a current need for more studies to improve our 
understanding of how best to adopt Agile methods within 
global software development. There is a lack of theoretical 
models of distributed Agile. More studies are needed to 
address the literature gap by investigating the geographical, 
cultural, and temporal challenges involved [11]. 
Previously, we conducted a systematic literature review 
focusing on the challenges of applying DASD [12]. One of 
the significant findings of that review was that most of the 
DASD studies cover the technical perspective of the 
development but lack coverage of the human perspective. 
The review also reported that: “The human perspective needs 
to immediately search to explore the effect of the cultural 
differences on the relationship between the stakeholders and 
the development process” [12]. This paper aims to address 
this issue by exploring the challenges and techniques of 
applying DASD from the developers’ point of view (i.e., the 
human perspective).  Moreover, the systematic literature 
review classified the development challenges under a four-
dimensions model (Communication, Culture, Management, 
and Agile). This study will provide further investigation into 
this model and will aim to propose a development 
framework for this development approach. 
III. 
RESEARCH METHOD 
This paper presents a mixed methodology study 
including both quantitative and qualitative data. This study 
has been applied to a simple random sample from the study 
population. According to Kumar [13], the simple random 
sample is the most popular way to ensure randomization, as 
each element in the study population has an equal chance of 
selection. The questionnaire was distributed online to 45 
online LinkedIn Agile groups from around the world and 
many IT organizations were invited to get involved in this 
investigation. Further collaboration came from two Agile 
conferences, who sent the questionnaire to their attendees: 
Lean Agile Scotland Conference 2012 and Agile Worlds - 
Distributed Agile Conference 2012. Moreover, some 
software companies agreed to distribute the questionnaire to 
their staff, although only one global IT development 
company agreed to let one of its teams be interviewed. All 
the team members have applied the distributed Agile 
development and have had a good experience with this kind 
of development approach.  
The questionnaire was configured as a web-based online 
questionnaire because of the need to gather information from 
a large number of participants, from a sample study 
distributed across a number of continents. In addition, the 
participants were all IT professionals, meaning they were not 
going to have any difficulties in completing an online 
questionnaire. The participants were invited to answer the 
questionnaire online. It ran for five months, from July 2012 
to December 2012. Over 120 responses were collected by the 
end of the data collection stage, including the self-completed 
questionnaire and the face-to-face interviews; 85 of these 
were eligible and reliable enough to be investigated. The 
excluded responses included incomplete responses or 
responses with “fake” answers (e.g. putting the same answer 
for all the questionnaire points).   
This section addresses the data collection and analysis 
procedures. It will report the quantitative part first, and then 
the qualitative one. 
A. The quantitative data 
The main content of the questionnaire can be classified 
into two groups of items: 
1) The demographic items – “Categorical variables”: 
This section aims to collect information about the 
background of the participants, such as the number of 
developers involved and the Agile method applied. This 
section will contribute to a better understanding of the 
correct setting for the application of the DASD approach. 
2) The development challenges – Likert scales: This 
section will use the four-dimensions model, in the form of 
Likert scales, to evaluate a list of challenges within each 
dimension. It aims to provide a better understanding of the 
level of expected issues with this development, by showing 
what the participants think about the listed points.   
This paper will investigate the differences between these 
responses, with regards to differences between the 
participants’ 
demographic 
information. 
Several 
null-
hypotheses need to be formulated which assume no 
significant differences between the tested variables until the 
inferential statistics can prove significant differences. In this 
case, the alternative hypotheses will be accepted, otherwise 
the null-hypotheses will be accepted [14]. Estler et al. [15] 
used the null-hypotheses technique in similar work, in order 
to study the differences between Agile and structure 
development.  This paper has 10 main null-hypotheses, 
based on the number of the demographic variables that will 
be investigated as follow:  
H1: There are no significant differences between the responses of the 
respondents to the development challenges scales due to the location of the 
Product owner. 
H2: There are no significant differences in the development challenges 
scales due to differences in the Number of Developers in the development 
teams. 
H3: There are no significant differences in the development challenges 
scales due to the Agile development method adopted. 
H4: There are no significant differences in the development challenges 
scales due to the Number of different time zone areas amongst development 
teams. 
H5: There are no significant differences in the development challenges 
scales due to the Number of distributed teams. 
H6: There are no significant differences in the development challenges 
scales due to differences in participants’ Agile experience. 
H7: There are no significant differences in the development challenges 
scales due to having development participants from different cultures. 
212
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

H8: There are no significant differences in the development challenges 
scales due to the Number of different time zone areas that the teams are 
placed into. 
H9: There are no significant differences in the development challenges 
scales due to differences in the participants’ Distributed Agile experience. 
H10: There are no significant differences in the development challenges 
scales due to differences in the applied Distributed development strategy. 
Each one of these null-hypotheses has four sub null-
hypotheses for each development scale. The development 
challenges scales data within this study are Likert scale data, 
so they need to be treated as nonparametric data [16], [17], 
[18], [19]. The Mann-Whitney U Test needs to be applied to 
test the differences for the variables with two groups, and the 
Kruskal Wallis Test for the variables with three groups [14]. 
Moreover, the median, mean rank and effect size need to be 
reported to show whether the differences are significant 
cases or not. Pallant [14] also reports Cohen’s  criteria [20] 
to describe the effect size: 0.1 is considered a small effect 
size, 0.3 a medium effect size and 0.5 a large effect size. 
B. The qualitative data 
The qualitative data was collected through structured 
interviews. The interviews were face-to-face and recorded 
with a voice recorder. Also, notes of the main ideas and 
answers were taken during the interviews. The data was 
transcribed from verbal form to textual form. The transferred 
documents were then compared to the notes from the 
interviews, to ensure the reliability of the data. Following 
this, a thematic analysis was applied, which is an approach to 
identify the themes and patterns from the collected 
qualitative data [21], [22]. In addition, the data-driven 
method was selected for the thematic analysis of this study. 
The data-driven method, regarding to Asnawi, can be 
summarized in five steps, as follows: “(i) reducing the raw 
information, (ii) identifying themes within subsamples, (iii) 
comparing themes across subsamples, (iv) creating a code, 
and (v) determining the reliability of the code” [23].  
The interviews were carried out at a large, global IT 
development company. The company has 27 offices 
distributed through 11 countries around the world: Australia, 
Brazil, Canada, China, Germany, India, Singapore, South 
Africa, Uganda, the United Kingdom and the United States. 
The company provides software design and delivery 
services, as well as development consulting services. It also 
produces customized software products as tools to support 
distributed Agile software development, thus helping the 
development teams to communicate, share information and 
track progress. The company applies Agile methods in order 
to develop its global software projects and has been involved 
in the software industry for the past 20 years. The company 
requested to remain anonymous within this study. 
Three interviewees with good experience of Agile 
methods and the distributed development approach agreed to 
participate in this study. Participant-1 had experience 
working with over 15 teams spanning the entire globe, both 
East and West, including teams from countries such as India, 
USA, the UK and Australia. Participant-2 had 4 years of 
experience, including a special course in Agile development 
during his master’s degree, as well as significant experience 
when it came to working with stakeholders from different 
cultures, including people from China, Europe, the UK, the 
USA and the Middle East. Participant-3 acquired a vast 
amount of experience before joining the company, since he 
developed a project while both the product owner and 
business analyst were away from the development team. He 
also had experience working with customers from different 
countries including New Zealand, Australia and the USA.  
IV. 
QUANTITATIVE RESULTS AND DISCUSSION 
This section presents the quantitative inferential analysis 
of the study’s null-hypotheses that were reported earlier. The 
following subsections present the results of each null- 
hypothesis and its sub-hypotheses in detail, in those cases 
where there is a significant difference.  
A. Product owner location 
This demographic variable explores whether the product 
owner (key stakeholder) was located with one of the 
development team on-site. It has two answer groups: Yes 
(i.e. the product owner was located with one of the 
development teams), and No (i.e. the product owner was not 
located with one of the development teams).  
TABLE I: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE PRODUCT 
OWNER VARIABLE 
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
685.000 
715.500 
772.000 
515.000 
Wilcoxon W 
1813.000 
1796.500 
1900.000 
1596.000 
Z 
-1.395 
-0.781 
-0.515 
-2.797 
Asymp. Sig. (2-
tailed) 
0.163 
0.435 
0.606 
0.005 
Table I above illustrates the U test results. It shows that 
the difference is highly significant within the Agile scale, 
with p =0.005 (<=0.01) as a high significant level, so in this 
case the null-hypothesis for this scale will be rejected and the 
alternative 
hypothesis 
accepted. 
To 
investigate 
the 
significant differences further, the median and the mean rank 
are recorded in Table II. The first group has a higher mean 
rank value of 48.3 while the second group has a value of 
34.7. The effect size in this case is r = 0.31. This would be 
considered a medium effect size, based on Choen’s  criteria 
[20]. 
TABLE II: RANKS FOR THE AGILE SCALE BASED ON THE PRODUCT OWNER 
Product owner 
N 
Mean Rank 
Median Sum of Ranks 
No 
34 
48.35 
3 
1644.00 
Yes 
46 
34.70 
3 
1596.00 
Total 
80 
 
Table II shows the median and the mean rank. The first 
group has a higher mean rank value of 48.3 while the second 
group has a value of 34.7. The effect size in this case is r = 
0.31. This would be considered a medium effect size. It is 
recommended that the product owner is placed onshore with 
one of the development teams. Having the product owner 
located on-site with one of the development teams 
213
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

significantly reduces the risk of any Agile development 
problems, in terms of the distributed Agile approach. This 
ensures good levels of communication between the 
developers and the customers, as well as enabling the 
development teams to receive rapid feedback. The result 
shows that having the product owner (key stakeholder) 
located with one of the on-site development teams could 
reduce the challenges to the Agile dimension by 31%. 
B. Number of developers 
This demographic variable has two answer groups: 1) 
there were 15 developers or fewer within the development 
team, and 2) there were more than 15 developers within the 
development team.  Table III illustrates the U test results. It 
shows that the difference is highly significant within the 
Agile scale, with p =0.006 (<=0.01) as a significant level. In 
this case, the null-hypothesis for this scale will be rejected 
and the alternative hypothesis accepted.  
TABLE III: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
NUMBER OF DEVELOPERS VARIABLE 
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
786.000 
661.000 
671.000 
532.500 
Wilcoxon W 
1689.000 
1441.000 
1491.000 
1312.500 
Z 
-.542 
-1.608 
-1.706 
-2.766 
Asymp. Sig. (2-
tailed) 
0.588 
0.108 
0.088 
0.006 
Table IV reports that the first group has a higher mean 
rank value of 47 while the second group has a value of 33.6. 
The effect size in this case is r = 0.30, which would be 
considered a medium effect size. This indicates that having a 
greater number of developers does not create more 
difficulties for the Agile practices. The group with 15 
developers or fewer had more Agile dimension issues. 15 
members or more had fewer challenges with regard to the 
Agile dimension – specifically, problems were reduced by 
30%. This hypothesis shows that an increase in team 
members could reduce Agile issues.  In other words, a larger 
number of development participants will help to improve 
communication and will provide a better environment for 
Agile adoption. For instance, regarding DASD challenges 
such as language barriers, members could help each other to 
communicate better with other team members when they 
experience communication difficulties. Agile philosophies 
and values support the idea of having more team members to 
provide a better environment for sharing information and 
collaboration as applied with XP programming practices. 
TABLE IV: RANKS FOR THE AGILE SCALE BASED ON THE NUMBER OF 
DEVELOPERS 
Number of developers 
N 
Mean Rank Median 
Sum of Ranks 
15 developers or less 
41 
47.01 
3 
1927.50 
More than 15 developers 
39 
33.65 
3 
1312.50 
Total 
80 
C. Agile methods 
There are 7 variables representing the Agile methods, 
with each variable checking one of the applied development 
methods (Agile approach in general, Scrum, eXtreme 
Programming (XP), Scrum/XP hybrid, Lean and Kanban, 
and Feature-Driven Development (FDD)). Some of the 
questionnaire participants chose more than one of the Agile 
methods so this section will investigate each Agile method 
separately in order to identify any significant differences 
between the respondents who used or did not use that 
particular Agile method. The U test results show several 
significant differences regarding the adopted Agile method. 
Firstly, the Scrum method has significant differences to the 
management scale, with p =0.006 (<=0.05) as a significant 
level. Table V shows the U test results for applying the 
Scrum approach.  
 TABLE V:  THE RESULT OF THE MANN-WHITNEY U TEST WITH USING 
SCRUM METHOD  
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
625.000 
655.500 
516.500 
671.500 
Wilcoxon W 
1900.000 
1880.500 
1791.500 
1847.500 
Z 
-1.583 
-0.965 
-2.734 
-0.786 
Asymp. Sig. (2-
tailed) 
0.113 
0.335 
0.006 
0.432 
To investigate the significant differences further, the 
median and the mean rank are recorded in Table VI. The first 
group has a higher mean rank value of 49.3, while the second 
group has a value of 35.8. The effect size in this case is r = 
0.30 (medium effect size). Applying the Scrum method 
within the DASD may decrease the risk of challenges 
arising, with regard to the management and control 
dimension, by 30%. 
TABLE VI: RANKS FOR THE MANAGEMENT SCALE BASED ON USING SCRUM 
METHOD 
Use Scrum method N Mean Rank Median Sum of Ranks 
No 
31 
49.34 
3 
1529.50 
Yes 
50 
35.83 
2 
1791.50 
Total 
81 
Secondly, the Scrum/XP hybrid method has significant 
differences to the communication scale, as shown within 
Table VII (with p =0.006 (<=0.05) as a significant level), and 
also to the Agile scale (with p =0.03 (<=0.05) as a significant 
level).  
TABLE VII:  THE RESULT OF THE MANN-WHITNEY U TEST WITH USING 
SCRUM/XP HYBRID METHOD  
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
415.500 
558.000 
520.500 
439.000 
Wilcoxon W 
2245.500 
2269.000 
2350.500 
2209.000 
Z 
-2.770 
-1.040 
-1.588 
-2.124 
Asymp. Sig. (2-
tailed) 
0.006 
0.298 
0.112 
0.034 
To investigate the significant differences further, the 
median and the mean rank are recorded in Table VIII and 
Table IX. The effect size with regards to the communication 
scale is r = 0.30 (medium effect size), and to the Agile scale 
it is r = 0.23 (small effect size). 
214
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE VIII: RANKS FOR THE COMMUNICATION SCALE BASED ON USING 
SCRUM/XP HYBRID METHOD 
Use Scrum/XP 
hybrid method N Mean Rank 
Median 
Sum of Ranks 
No 
60 
37.43 
3 
2245.50 
Yes 
22 
52.61 
3 
1157.50 
Total 
 82 
The research result suggests that applying the Scrum/XP 
hybrid method to DASD may increase the challenges faced, 
with regard to the communication and collaboration 
dimensions, by 30%. So it is therefore better not to adopt this 
development method in DASD. 
TABLE IX: RANKS FOR THE AGILE SCALE BASED ON USING SCRUM/XP 
HYBRID METHOD 
Use Scrum/XP 
hybrid method 
N Mean Rank 
Median 
Sum of Ranks 
No 
59 
37.44 
3 
2209.00 
Yes 
21 
49.10 
3 
1031.00 
Total 
80 
The research result shows that applying the Scrum/XP 
hybrid method with DASD may increase the challenges with 
regard to the Agile dimension by 23%. Applying this 
methodology within DASD is not sufficient where the 
setting of the distributed development is concerned, so it is 
therefore better not to adopt this development method with 
DASD. 
Furthermore, Table X illustrates the U test results for the 
use of the Lean/Kanban method. This development method 
has significant differences to the culture scale (with p =0.016 
(<=0.05) as a significant level), and also to the Agile scale 
(with p =0.00 (<=0.05) as a significant level). 
TABLE X:  THE RESULT OF THE MANN-WHITNEY U TEST WITH USING 
LEAN/KANBAN METHOD  
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
702.000 
529.500 
601.500 
305.500 
Wilcoxon W 
1108.000 
935.500 
1007.500 
683.500 
Z 
-0.572 
-2.415 
-1.644 
-4.490 
Asymp. Sig. (2-
tailed) 
0.568 
0.016 
0.100 
0.000 
 
To investigate these significant differences further, the 
median and the mean rank are reported in Table XI and 
Table XII. The effect size with regards to the culture scale is 
r = 0.26 (small effect size), and to the Agile scale it is r = 
0.50 (large effect size).  
TABLE XI: RANKS FOR THE CULTURE SCALE BASED ON USING 
LEAN/KANBAN METHOD 
Use Lean/Kanban method N 
Mean Rank Median 
Sum of Ranks 
No 
52 
44.32 
3 
2304.50 
Yes 
28 
33.41 
2 
935.50 
Total 
80 
 
TABLE XII: RANKS FOR THE AGILE SCALE BASED ON USING LEAN/KANBAN 
METHOD 
Use Lean/Kanban method 
N 
Mean Rank Median Sum of Ranks 
No 
53 
48.24 
3 
2556.50 
Yes 
27 
25.31 
2 
683.50 
Total 
80 
The research result would suggest the use of the 
Lean/Kanban method to be highly recommended. Applying 
the Lean/Kanban method within DASD may decrease the 
challenges to both dimensions: the culture dimension by 
26%, and the Agile dimension by 50%. 
The U test results show no significant differences within 
the rest of the development methods, including the Agile 
approach in general, eXtreme Programming (XP), and 
Feature-Driven Development (FDD). 
The result indicates that there are significant differences 
from the Agile methods variables for all four scales 
(communication, culture, management and Agile), so the 
null-hypotheses will be rejected and all of the alternative 
hypotheses accepted.  
D. Number of time zone areas between development teams 
This demographic variable has two answer groups: 1) 
there are no time zone “spaces” between teams (the “space” 
[gap] here represents one time zone that has no stakeholders 
placed in it), and 2) there are one or two time zone spaces 
between development teams.  Table XIII illustrates the U test 
results. It shows that the difference is significant within the 
communication scale with p =0.031 (<=0.05) as a significant 
level, so in this case the null-hypothesis for this scale will be 
rejected and the alternative hypothesis is accepted. 
TABLE XIII: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
NUMBER OF SPACES VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
527.500 
669.000 
692.500 
630.000 
Wilcoxon W 
2123.500 
1020.000 
2288.500 
2170.000 
Z 
-2.163 
-0.409 
-0.385 
-0.642 
Asymp. Sig. (2-
tailed) 
0.031 
0.683 
0.700 
0.521 
 
To investigate the significant differences further, the 
median and the mean rank need to be reported. Table XIV 
shows that the first group has a lower mean rank value of 
37.9 while the second group has a value of 49.2. The effect 
size in this case is r = 0.23. This would be considered a small 
effect size. 
TABLE XIV: RANKS FOR THE COMMUNICATION SCALE BASED ON THE 
NUMBER OF SPACES 
Number of the space 
between time zones 
N Mean Rank Median Sum of Ranks 
No space between teams 56 
37.92 
3 
2123.50 
There is a space 1 or 2 
spaces 
26 
49.21 
3 
1279.50 
Total 
82 
 
Having no “space” means that there is less than 5 hours 
time difference between any given development team and 
215
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the next closest team, which would mean they have at least 3 
overlapping working hours. Having one or two spaces could 
allow time differences of between 5 and 11 hours. Teams 
with these time differences could have no overlapping 
working hours between them, which could bring on many 
communication challenges to the development. It can 
increase the challenges with regard to the communication 
and collaboration dimensions by 23%. It is therefore 
recommended to maintain a time zone difference of less than 
5 hours. 
E.  Number of distributed teams 
This demographic variable has two answer groups 
presenting the number of distributed teams: 1) less than three 
distributed teams, and 2) three distributed teams or more.  
TABLE XV: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
NUMBER OF DISTRIBUTED TEAMS VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
832.500 
728.500 
749.500 
745.500 
Wilcoxon W 
1693.500 
1589.500 
1610.500 
1606.50
0 
Z 
-0.080 
-0.824 
-0.918 
-0.559 
Asymp. Sig. (2-
tailed) 
0.936 
0.410 
0.358 
0.576 
Table XV above illustrates the U test results. It shows 
that there are no significant differences with all the four 
scales (communication, culture, management and Agile), so 
the null-hypothesis will be accepted. 
F. Agile years of experience 
This demographic variable has two answer groups 
representing the years of experience with Agile: 1) four years 
of experience or less, and 2) more than four years of 
experience.  
TABLE XVI:  THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
AGILE YEARS OF EXPERIENCE VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
662.500 
686.000 
674.000 
639.500 
Wilcoxon W 
1158.500 
1961.000 
2000.000 
1914.500 
Z 
-1.325 
-0.767 
-1.212 
-1.182 
Asymp. Sig. (2-
tailed) 
0.185 
0.443 
0.225 
0.237 
Table XVI above illustrates the U test results. It shows 
that there are no significant differences with all the four 
scales (communication, culture, management and Agile), so 
the null-hypothesis will be accepted as below. 
G.  Multi cultures 
This demographic variable has two answer groups: 1) the 
development teams include participants from different 
cultures, and 2) the development teams do not include 
participants from different cultures.   
  
 
TABLE XVII: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
MULTI-CULTURES VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
177.500 
148.000 
208.500 
226.000 
Wilcoxon W 
205.500 
169.000 
236.500 
254.000 
Z 
-1.527 
-1.631 
-0.975 
-0.541 
Asymp. Sig. (2-
tailed) 
0.127 
0.103 
0.330 
0.589 
Table XVII above illustrates the U test results. It shows 
that there are no significant differences with all the four 
scales (communication, culture, management and Agile), so 
the null-hypothesis will be accepted. 
H.  Number of time zone areas that the teams are placed 
into 
This demographic variable has two answer groups: 1) all 
the development teams are placed into one time zone, and 2) 
the development teams are placed into more than one time 
zone (2-4). 
TABLE XVIII: THE RESULT OF THE MANN-WHITNEY U TEST WITH THE 
NUMBER OF TIME ZONES VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Mann-Whitney U 
674.000 
660.000 
775.500 
760.000 
Wilcoxon W 
1377.000 
1695.000 
1810.500 
1750.000 
Z 
-1.599 
-1.492 
-0.0578 
-0.333 
Asymp. Sig. (2-
tailed) 
0.110 
0.136 
0.563 
0.739 
Table XVIII illustrates the U test results. It shows that 
there are no significant differences with all the four scales 
(communication, culture, management and Agile), so the 
null-hypothesis will be accepted. 
I.  Distributed Agile experience 
This demographic variable has three answer groups, 
representing the level of distributed Agile experience: 1) less 
than one year of experience, 2) between one and four years’ 
experience, and 3) more than four years of experience.  
TABLE XIX: THE RESULT OF THE KRUSKAL WALLIS TEST WITH THE 
DISTRIBUTED AGILE EXPERIENCE VARIABLE   
 
Communication 
scale  
Culture 
scale  
Management 
scale  
Agile 
scale  
Chi-Square 
5.222 
3.519 
3.916 
0.927 
Df 
2 
2 
2 
2 
Asymp. Sig. 
0.073 
0.172 
0.141 
0.629 
Table XIX illustrates the Kruskal Wallis test results. It 
shows that there are no significant differences with all the 
four scales (communication, culture, management and 
Agile), so the null-hypothesis will be accepted. 
J. Distributed development strategies 
This demographic variable has three answer groups 
exploring the development strategy: isolated development 
(teams are distributed geographically but are not cross-
216
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

functional), co-located development (distributed isolated 
teams integrate together using one of the Agile methods), 
and fully integrated development (teams are distributed 
geographically and work cross-functionally, using Agile 
development). Table XX illustrates the Kruskal Wallis test 
results. It shows that the difference is significant within the 
management scale, with p =0.038 (<=0.05) as a significant 
level, so in this case the null-hypothesis for this scale will be 
rejected and the alternative hypothesis accepted.  
TABLE XX: THE RESULT OF THE KRUSKAL WALLIS TEST WITH THE 
DEVELOPMENT STRATEGY VARIABLE   
 
Communication 
scale 
Culture 
scale 
Management 
scale 
Agile 
scale 
Chi-Square 
0.128 
2.623 
6.562 
0.317 
Df 
2 
2 
2 
2 
Asymp. Sig. 
0.938 
0.269 
0.038 
0.854 
To investigate this result further, there is a need to apply 
the Mann-Whitney U test as a follow-up test to identify the 
differences between each pair groups. The table below shows 
that the significant differences are between the first and the 
second group based on the U test results.  
TABLE XXI: THE RESULT OF THE MANN-WHITNEY U TEST THE 
DEVELOPMENT STRATEGY VARIABLE AND THE MANAGEMENT CHALLENGES 
SCALE   
 
Management scale  
Mann-Whitney U 
167.000 
Wilcoxon W 
728.000 
Z 
-2.199 
Asymp. Sig. (2-
tailed) 
0.028 
Table XXI shows that there are statistically significant 
differences between the isolated development strategy and 
the co-located development strategy on the management 
scale, with p =0.028 (<=0.05) as a significant level which is 
less than the alpha level of .05. The effect size is considered 
as a medium effect, with r = 0.31 (medium effect size). Table 
XXII below shows that the isolated development strategy 
group has a higher mean rank value of 31, while the second 
group (co-located development) has 22. 
TABLE XXII:  RANKS FOR THE MANAGEMENT SCALE BASED ON THE 
DEVELOPMENT STRATEGY 
Development strategy  
N Mean Rank Median 
Sum of Ranks 
Isolated 
16 
31.06 
3 
497.00 
co-located  
33 
22.06 
2 
728.00 
Total 
49 
Having the development teams isolated and not cross-
functional may lead to a lack of management and control. 
Development teams may have problems when combining 
their developed functions. The study result shows that the 
isolated development strategy increases the challenges faced, 
with regard to the management and control dimension, by 
31%. The co-located development “Scrum of Scrums” was 
found to be the most suitable strategy for DASD. 
V. 
QUALITATIVE RESULTS AND DISCUSSION 
This section presents the results of the qualitative data by 
investigating the challenges and the mitigation techniques 
under the four dimensions model: communications, cultural 
differences, management and control, and Agile skills 
A. Communication and Collaboration Challenges 
1) Lack of communication and losing the ability to make 
immediate 
decisions 
(A1): 
Agile 
methods 
require 
interactive, daily communication among stakeholders. This 
is difficult to provide within the global environment. The 
lack of communication and collaboration is a significant 
issue within the DASD approach [24]. Team members were 
not able to make immediate decisions, because of the 
distance between the participants and the lack of 
communication. As mentioned by Participant-3: “We lose 
the ability to have an immediate decision. If we were here at 
11am and we wanted to know something straightaway the 
earliest we could hear from our product owner will be 3pm 
and that's only if he's got up very early.”  
2) Time zone differences (A2): The time zone 
differences is one of the main reasons that cause DASD’s 
communication challenges [8]. The distance and time zone 
differences among stakeholders could reduce the available 
overlap of working hours of distributed teams. Participant-3 
reported the issue of having no overlap of working hours by: 
“I think if you had two teams where their working days 
didn't overlap at all, so if you had the UK and the East 
Coast of Australia where there's something like a 10 hour 
difference, I don't think that would work”. 
3) The lack of English language skills (A3): In most 
cases, the English language is not the mother tongue of the 
offshore team members. The lack of proficiency in English 
could pose a major challenge for the development teams. 
The different levels of English among the stakeholders 
could create misunderstandings [25], in the event of people 
trying to express or indicate meaning by a hint and 
expecting the others to understand them. Participant-3 
reported that: “If you're having a discussion and there’s a 
thing that you don't say and you assume the other person 
knows and it's implied, that's where you get the chance for 
errors”. 
Participant-2, who is not a native English Language speaker, 
described his experience with communication with people 
with different level of English as hard. Participant-2 stated 
that:  “The other thing which might be hard is that different 
people have different levels of English knowledge.”. Also, 
Participant-2 
mentioned 
some 
difficulties 
with 
understanding native speakers who are speaking with a 
difficult accent or speaking in a fast way: “Sometimes it's 
hard to understand people who are speaking English as 
their mother language, as well”. 
217
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

B. Communication and Collaboration Techniques 
1) Find 
a 
time 
and 
a 
way 
for 
synchronised 
communication (B1): It is important to create an overlap of 
working hours among the distributed teams. The overlap 
hours will be used as available time for synchronised 
communication. Participant-3 reported there should be at 
least 2 hours of overlapping: “If you have two teams in 
different time zones their working days have to have some 
overlap and if they don't have some overlap and if they don't 
have some overlap then you need to change the working 
hours of one of those teams so there is an overlap. I think 
there needs to be, I would say, at least two hours overlap 
between those two teams so they can talk face-to-face”. 
With some cases that require staying late, the project 
manager and the business analyst could stay late to 
communicate with the other stakeholders. Participant-1 
stated that: “PM or BA or whoever needs to showcase 
something to the client, they need to stay for a while.”. 
2) Flexibility regarding working from home (B2): 
Working hours should be flexible; therefore, the team 
members should be able to work from home when 
necessary. This flexibility could help to create overlapping 
hours among teams. Participant-1 reported that: “Yeah so 
the company gives you the opportunity and flexibility to 
work from home.  They also provided the broadband.  ”. 
Participant-2 stated as well: “The people are free to do and 
people are getting flexible times to do work from home or 
work from somewhere else when they are away from the 
office”. 
3) The communication schedule should be regimented 
(B3): The development stakeholders should have a daily, 
regimented communication schedule (i.e., Communication 
Road Map CRM). Such a schedule would help to increase 
the communication level.  Participant-3 reported that: “I 
think you need to do what we're doing here at this company 
and have a very regimented communication schedule”. The 
product 
owner 
should 
make 
himself 
available 
to 
communicate with the development team as Participant-3 
said: “I'd say from our product owner's point of view he's 
got to make sure that he's very involved and he keeps 
himself aware with what we're up to”. Communication, as 
reported earlier, is the main issue with the DASD 
development, so it is necessary to increase the level of 
communication among the distributed teams. Participant-3 
summarised that by: “You've got to make sure that you 
communicate well with the stakeholders”. 
4) Ask people to speak clearly and be explicit (B4): 
Regarding the different levels of English skills among the 
stakeholders, there is a need to speak clearly and to be 
explicit about what is wanted. Participant-3 mentioned that: 
“It's much better to be explicit and to really make clear what 
you want”. 
5) Apply multi-channels for communication (B5): There 
is a need to have multi-channels for communication. There 
should be a choice of method and use of the one best suited, 
such as phone calls, video Skype calls, voice over IP and 
texting. Participant-2 reported that: “We are using voice 
over IPs and the video services.  We use Skype, we use 
GoToMeeting, we have an internal voice over IP device 
here”, and reported as well: “we use our own internal 
service for chatting”. In addition, software to share the 
screen and knowledge helps teams to share information and 
increase the visibility of the development. Participant-2 
mentioned that: “So, I can say, tools are really important in 
distributed systems”. 
 
Fig. 1  
Communication with DASD challenges and techniques 
Fig. 1 illustrates the recommended techniques to address 
communication and collaboration challenges. It links the 
challenges with the techniques in order to provide better 
understanding of them.  For example, to address challenge 
A1, techniques B3 and B5 can be employed. Finally, the 
CRM must identify a main communication channel that 
should be selected, based on the project setting and 
infrastructure. The communication costs with the selected 
channel need to be considered. The plan should report 
synchronous and asynchronous channels with an explanation 
of how to use them. 
C. Cultural Differences Challenge 
The cultural differences of the stakeholders could create 
certain misunderstandings [25]. Participant-2 reported that: 
“There are a lot of different things in a culture.  Like, in 
some countries, people really like to talk about politics”. 
Cultural differences could limit the communication between 
development 
participants 
in 
order 
to 
avoid 
any 
misuderstandings. Participant-2 stated: “I feel I know, if 
somebody from a different culture joins our team, how to 
behave and then how to find the limits on paid 
programming, how to speak to people, what sort of 
questions to ask, what sort of questions not to ask.  So, these 
are the things which we learn”.  
D. Techniques to Address the Cultural Differences  
1) Creating an open culture within the development 
teams (D1): There is need to promote an open culture 
among the project’s stakeholders, encouraging people to be 
free, flexible and liberal. Team members should accept 
other cultures and try to understand them. Participant-1 
A1 
A2 
A3 
 
B1 
B2 
B3 
B4 
B5 
B- Techniques 
A- Communication 
Challenges 
 
218
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

mentioned that: “our culture rules are very liberal, free, 
there is no dress code. The people are free to do and people 
are getting flexible times to do work from home or work 
from somewhere else when are they away from the office. So 
this flexibility provides a lot of appreciation to the 
developers and all the people”. Participant-2 also stated that 
there is need to be flexible within the people from different 
cultures: “people who are working in a distributed team, I 
guess should be more flexible than people who are working 
on a one - centralised process”.  
2) Move the developers between the teams (D2): 
Providing the team members with the opportunity to move 
between global offices could help them to discover and 
explore other cultures. Participant-1 mentioned that by: 
“there is a global assignment program which runs every 
year and it gives a chance to people to work round in any 
office in the world. So it's a very diverse culture in the 
company”.   
3) A training course for new members (D3): New team 
members should have a special training course to provide 
them with the required Agile skills and make them aware of 
other cultures. The investigated company has a multi-
cultural training centre in Bangalore, India. This could help 
new members to understand different cultures as reported by 
Participant-1: “Once you hire anyone, if it's a fresh then he's 
a graduate.  We send them to a university.  There is a 
university which runs in India, in the Bangalore office”. 
And Participant-1 mentioned as well: “All the students 
around the world gather with a different culture in India.  
They do works together on the same project for three 
months.  After that we send them across different global 
assignments”. 
4) Choose people who fit in with the distributed 
development culture (D4): Before hiring new people, they 
should be interviewed to ensure that they fit in with the 
open culture of the DASD. Participant-1 stated that: 
“Always choose the people who actually fit with the culture. 
We don't choose people who don't fit with the culture”. 
In addition, new members should have a qualifying 
period of a few months, to make sure they fit in with the 
development culture and environment as reported by 
Participant-1: “Even after that, there is a probation of three 
months, okay. So in the three months itself it is enough time 
to know the person's attitude and whether - how he is 
behaving in all the steps. So if he doesn't fit in the culture 
then we don't extend their assignment”. 
5) Flexible working hours and places (D5): This 
practice was mentioned when addressing communication 
issues and could also help to increase trust between the 
company and its employees, one of the cultural issues 
within the DASD. Participant-1 stated that: “They do - they 
know all right that the company the flexibilities providing to 
them it come with a trust. So the company's putting trust on 
them so they, of course, need to do the work properly and 
they also need to put the trust in the company”. 
 
Fig. 2  
Cultural differences with DASD challenges and techniques 
Fig. 2 illustrates the recommended techniques to address 
the cultural differences challenges. Techniques D1 to D5 
have been applied by the company to minimize the impact of 
the cultural differences to the development. The cultural 
differences could reduce the communication as reported 
early within this section and limit the collaboration between 
the team members. 
E. Management and Control Challenges  
1) Updating the developed story on the online wall (E1): 
Development participants with the DASD approach usually 
apply an online story wall to track progress. In some cases, 
they have issues with not updating the developed story on 
the online wall. This could lead to duplication when 
developing the required functions/stories. Participant-2 
declared that: “So, sometimes, you - when you get into a 
story and then it finishes the phase and you start another 
story, you may forget to move it on the electronic wall”. 
2) Estimation difficulties (E2): The second management 
challenge is with estimation. Large teams could have 
difficulties with estimating their stories. Participant-2 
explained this issue by: “Estimation for example is one 
thing that it's hard.  So when you have 20 people online and 
you have 20 people here and you want to estimate stories!!”. 
F. Management and Control Techniques 
1) Increase communication (F1): There is a need to 
increase the level of communication in order to manage the 
work and to resolve any misunderstandings. Participant-3 
mentioned that the communication is required to better 
apply DASD: “If we do a lot of communication then we can 
apply all the practice of Agile globally”. Participant-2 
reported that as well: “There should be a lot of 
communications between the teams as well”. In addition, 
Participant-1 stated the same thing to manage the distributed 
Agile development: “Any company you go there would be 
the challenge to manage such a vast distributed work, right?  
It requires a lot of communications; it requires a lot of co-
ordinations between all the offices to work together right”. 
C- Cultural 
differences 
challenges 
D1 
D2 
D3 
D4 
D5 
D- Techniques 
219
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

2) Use software management tools (F2): Using software 
management tools is required to apply different Agile 
practices within the distributed development environment. 
Those tools support the development, make it more visible 
and easier to track. The tools usually have an online wall for 
the development stories, which is required to keep it 
coordinated with the normal story wall. Participant-3 
declared that: “So we have story wall, but that's all 
replicated in an online tool and we make sure that we keep 
those two in sync so that the product owner at any time can 
look at our entire story wall and see what's in progress”. 
And Participant-2 mentioned the same as well: “is really 
important and there are not - and you should be able to first 
of all, be responsible for updating the electronic wall”. 
3) Split large teams (F3): Having a large number of 
participants could make it difficult to apply some Agile 
practices, such as estimation. Therefore, splitting large 
teams could be a solution. However, this requires a lot of 
communication and coordination between the divided 
teams. Participant-2 agreed with that by: “You split the 
team, you have two PM, you split the number of developers, 
you will add a new BA.  But there should be a lot of 
communications between the teams as well”.  
4) Estimation cards (F4): This practice aims to address 
the estimation issue. The participants would have a card to 
estimate each story and they would then show their cards 
and discuss issues. Participant-2 mentioned that technique 
by: “we talk about the story and we count to three and 
everybody should show a card, or show their hands”. 
 
Fig. 3  
Managment with DASD challenges and techniques 
Fig. 3 links the management challenges with the 
recommended techniques in order to provide better 
understanding of them. 
G. Agile Level Challenges 
1) Lack of a close relationship (G1): The distributed 
development could result in losing the main aspect of Agile, 
which is the close relationship between the development 
participants. Participant-3 mentioned that by: “I think the 
main problem with global is - with Agile it's very important 
to maintain a close relationship to your customers”. 
2) Working with traditional organisations/ customers 
(G2): Traditional organisations/customers may not accept 
the Agile way of development. They may be used to 
traditional development approaches, such as the waterfall 
model [5]. This could decrease the Agility level of the 
development. For instance, traditional organisations may 
take their time to allow the developers access to their 
database or to the necessary information. Participant-2 
reported that:  “We speak a lot with tech team, with 
manager's team, with anyone who can - but they are 
traditional companies.  They have a lot of paperwork for 
just getting one server, access to one server, or access to a 
database.  But, in an agile company you just ask for 
something.  In our company if you need to access 
anything…we just ask and we get it as soon as we can.  But 
it's sometimes in other, in client side, in the companies 
which we are working for they have their own database 
team which we - a manager should give you permission”. 
And Participant-2 stated that as well: “There have been 
problems with those things.  Like database is the obvious 
one that we can say, you don't get the access to them.  You 
need to go through their process”. 
3) Difficulty in applying some Agile practices (G3): The 
global development setting could make it difficult to apply 
some Agile practices [22]. For example, the stand up daily 
meeting 
is 
difficult 
within 
the 
distributed 
Agile 
development, because of the large number of participants 
and the lack of visibility among the meeting attendees. 
Participant-2 reported that by: “I guess the whole point of 
stand up is visibility so that you can see somebody and you 
can ask a question”, and by: “So imagine if 100 people want 
to talk for one minute each, it would be a bout two hours 
while people are standing”. 
Furthermore, applying the retrospective practice with the 
distributed development is difficult as well. Participant-2 
stated that: “Retrospectives are getting affected.  Because 
retrospectives in an agile team are, I guess I feel it's the most 
physical thing happens because what we do is that we 
practice different type of  RETROS.  So what we do is that 
every iteration that we have RETROS we change them.  So 
we try a lot - because we don't want to make it boring”  
H. Techniques for the Agility Level  
1) Use software tools to enable some Agile practices 
(H1): Usually, development teams adopt various software 
tools to help them to apply Agile practices. Participant-3 
reported that: “We've done some remote pair programming 
with him. We use tmux which is a UNIX tool for sharing 
terminals and we used a VNC client called Chicken and we 
also use Skype and SSH to set up the connection. So with a 
combination of those we can have a live pair programming 
session and that worked quite well”. In addition, Participant-
2 stated that as well: “Tools are really important,, learning 
how to work with tools are taking time.  You may need more 
efforts”.  
2) Dealing with the issues of traditional organisations 
(H2): Sometimes, IT development companies avoid 
working with a traditional product owner who is not able to 
E1 
E2 
 
F1 
F2 
F3 
F4 
F- Techniques 
E-Management 
Challenges 
 
220
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

understand Agile values. Sometimes, they try to provide the 
traditional product owner with some training about the 
Agile approach before the project begins.  Participant-2 
mentioned that: “So the way that we work is that we try not 
to accept projects in our company that clients don't give us 
the chance of working in a way that we want.  But some 
projects it happens that we try - so in some projects when 
the clients accept that we work for them, but they are not 
working in agile way.  So usually we try to teach, teach the 
team which we are going to work with them.  We 
communicate a lot, we talk a lot, we have lots of meetings in 
our team.  So we try to settle these things before accepting a 
project”.   
3) Practice for the stand up daily meeting (H3): Practice 
includes throwing a ball during the meeting. The member 
who has the ball is the one who is allowed to speak. This 
practice aims to manage the meeting by allowing one person 
to speak at a time. In addition, they hold computer tablets, 
such as iPads, during the meeting to see the distributed 
members.  This practice reported by Participant-2 as: “we 
use iPad and we ask them to be online and they talk about 
it.  So we have a ball as a token.  We throw it to each other 
when someone is going to talk.”. 
4) Apply simple documentation (H4): One of the 
techniques in the DASD approach is doing simple reports to 
share information from the meetings with participants who 
were not able to attend. Participant-2 declared that by: 
“Usually one person writes a simplify - a very simple report 
that this happens, this decision has been made.  This is the 
reason that we make this decision.  So we just read that 
email every night for example and we get updated about 
what's happening.  If we don't like it, we can state it the day 
after, or we can send an email and discuss it”.  
 
Fig. 4  
Agile challenges and techniques with DASD 
Fig. 4 reports the Agile challenges and links them with 
the recommended techniques to award better apply for Agile 
methods with the distributed development. 
VI. 
VALIDATION 
This section addresses the study validation, which could 
be classified into two categories: the validation of the 
qualitative data, and the validation of the quantitative data. 
A. Validation of the qualitative data 
To ensure the validity and the reliability of the study’s 
qualitative analysis and to identify any elements of bias from 
the researcher, two procedures were applied. Firstly, after the 
final code was developed, it was tested by other researchers, 
who applied it to the raw data to ensure that the code and 
theme analyses were correct. The second procedure was to 
have the transcripts rigorously checked by other researchers, 
comparing them to the verbal records and the notes that had 
been taken. The aim of this was to identify any transcription 
errors or mistakes [23]. 
B. Validation of the quantitative data 
To ensure the validity of the quantitative data, the 
questionnaire has been piloted by experts in the field of 
Agile software development. The aim of this was to check 
whether the questions are measuring what they aim to 
measure in an appropriate way. In addition, with multiple-
item scales such as the Likert Scale, variables of internal 
reliability need to be tested. One robust method of achieving 
that is to apply Cronbach's alpha coefficient. This shows the 
correlation among all items in the scale. The ideal 
Cronbach's alpha level is above 0.7 [14]. Table XXIII shows 
the Cronbach's alpha values for the study scales.  
TABLE XXIII: CRONBACH'S ALPHA FOR THE QUESTIONER SCALES 
 
Scale 
Reliability 
N of 
Items 
1 
The level of communication and 
collaboration barriers with Distributed 
Agile Software Development (DASD) 
0.888 
10 
2 
The cultural differences (organizational 
and region culture) barriers with 
Distributed Agile Software Development 
(DASD) 
0.875 
6 
3 
The lack of management and control 
within Distributed Agile Software 
Development (DASD) 
0.700 
5 
4 
The lack of Agile with skills within 
Distributed Agile Software Development 
(DASD) 
0. 748 
5 
5 
Total for the challenges scales 
0.765 
26 
Table XXIII shows the Cronbach's alpha values for each 
scale. The first four scales represent the challenges scales. 
The Cronbach's alpha values for those scales are all above 
0.7. In addition, the alpha value for the all challenge scales is 
0.765. That means the scales and their items are internally 
consistent.  
VII. DEVELOPMENT FRAMEWORK FOR DASD 
This section integrates the development strategy of the 
company under investigation with the study findings in order 
to provide a standard development framework for DASD. 
Fig. 5 and Fig. 6 illustrate the proposed framework and it can 
be organize into four development phases.   
The earliest phase is the startup phase, which aims to 
ensure readiness for the DASD on the development teams’ 
side, and on the product owner’s side as well. The 
communication between product owner and development 
G1 
 
G2 
 
G3 
 
H1 
 
H2 
 
H3 
 
H4 
 
 
H- Techniques 
 
G- Agile Challenges 
 
 
221
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

teams will be established during this phase. A training course 
for new members is recommended, as reported within D3. 
D4 and H2 are also recommended techniques for this phase.  
The next stage is the design phase, which includes the 
gathering of all participants in one place for a few days, to 
finalize the requirements and estimate the deadline of the 
project. One of the main techniques that need to be identified 
within this stage is the design of the CRM. The mitigation 
techniques for this stage include B1, B3 and B5
 
 
Fig. 5  
Startup and Design phases of the development framework 
The next phase is the inspection and analysis phase, 
which aims to break the requirement and development tasks 
into small development stories. These stories will then be 
organized and linked to each other. Applying an estimation 
card can help within this stage, as reported earlier. 
 
Fig. 6  
 Inspection and Development phases of the development 
framework 
 The final stage is the development phase. Most of the 
mitigation techniques and study recommendations are linked 
to this phase, including: D2, F1, F2, F3, F4, H1, H2, and H4. 
Firstly, teams should have a daily meeting and weekly 
iteration to increase the level of communication. It is 
recommended that the product owner be located within one 
of the development teams. Teams need to have a local 
meeting and then Scrum of Scrum practice should be 
applied, to link teams together. In other words, the co-located 
strategy should be adopted to manage the development 
teams.  In addition, it is recommended to use Scrum or Lean/ 
Kanban practices as an Agile development method to reduce 
the development challenges. To reduce the challenges 
presented by time zone differences, it is not recommended 
that teams have more than a 5-hour time difference between 
them and their next closest development team. 
Other techniques, such as B2, B4, D1, and D5, are 
recommended during all the development phases. 
VIII. SUMMARY AND CONCLUSION 
This paper has presented a mixed methodology study. It 
has explored the significant differences between the 
demographic variables and the development challenges 
scales. The Kruskal Wallis test and the Mann-Whitney U test 
have been applied as inferential statistics to investigate 10 
null-hypotheses. Five of these were rejected and their 
alternative hypotheses were accepted. 
The reported results suggest that communication barriers 
are the biggest challenge faced when employing the DASD 
approach. A number of techniques were reported by the 
participants to address the known communication issues 
affecting this approach. Most of the issues related to the lack 
of communication between stakeholders. The development 
teams and product owners need to work hard to increase the 
level of the communication between them.  
The other main issue encountered was the lack of Agile 
skills and knowledge from the developers and the product 
owners.  A global setting makes this issue all the more 
pronounced, 
because 
of 
the 
distance 
between 
the 
stakeholders. In these cases, there is a need to improve 
knowledge of Agile by providing training courses and Agile 
coaching, to ensure the sufficient application of Agile 
practices.  
The management issues are also related to the distance 
and the size of the development teams. Improving the 
communication level and Agile skills could reduce these 
management difficulties. Splitting teams may be with a 
solution for teams with a large number of developers.  
The issue of cultural differences is the least important 
problem because most of the stakeholders are aware of each 
other’s cultures and have the ability to work with different 
people. However, some misunderstanding could arise, 
particularly through a lack of communication. Thus, it is 
essential that the development participants are clear, flexible, 
and open with those from other cultures.  The experience 
with DASD from the investigated company helped develop a 
clearer understanding of the challenges of cultural 
differences. The application of techniques such as training 
courses can help to minimize these cultural differences 
issues. Moving the team members between the various 
development teams throughout the world will also help them 
222
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

to better understand other cultures and could address this 
issue.  
In conclusion, this case study has highlighted some of the 
major challenges of applying DASD. It has also proposed a 
development framework that outlined several development 
practices to achieve a more effective application of this 
development approach. The discussion has shown that the 
study findings are in agreement with existing literature on 
most of the investigated points. 
 Future work will involve further investigation into the 
proposed framework in order to understand its impact on the 
DASD approach.  
IX. 
ACKNOWLEDGMENT 
This work is supported by the University of Dammam, 
the Ministry of Higher Education, Kingdom of Saudi Arabia, 
(PhD scholarship). 
REFERENCES 
[1] A.S. Alqahtani, J. Moore, D. Harrison, and B. Wood, 
“Distributed Agile software development challenges and 
mitigation techniques: A Case Study,” ICSEA 2013, The 
Eighth International Conference on Software Engineering 
Advances, 2013, pp. 352-358. 
[2] M. Nisat and T. Hameed, “Agile methods handling offshore 
software development issues,” 8th  International: Multitopic 
Conference, Proceedings of INMIC, 2004, pp. 417-422. 
[3] A. Szőke, "Optimized feature distribution in distributed agile 
environments," 
Product-focused 
software 
process 
improvement,  2010, pp. 62-76. 
[4] U. Venkatesh, Distributed Agile: DH2A - The proven Agile 
software development approach and toolkit for geographically 
dispersed teams. New Jersey: Technics publications LLC., 
2011. 
[5] J. Sutherland, G. Schoonheim, N. Kumar, V. Pandey, and S. 
Vishal, "Fully distributed scrum: Linear scalability of 
production 
between 
San 
Francisco 
and 
India," Agile 
conference, IEEE, 2009, pp. 277-344. 
[6] E. Hossain, M. Babar, and H. Paik, “Using Scrum in global 
software development: A systematic literature review,” 
Fourth IEEE International Conference on Global Software 
Engineering, 2009, pp.175-184. 
[7] S. Modi, and P. Abbott, "Understanding Collaborative 
Practices in Distributed Agile Development: Research 
Proposal," 8th International Conference Global Software 
Engineering Workshops (ICGSEW), IEEE, 2013, pp. 74-77. 
[8] S. Jalali, and C. Wohlin, “Global Software Engineering and 
Agile Practices: A systematic review,” Journal of Software 
Maintenance and Evolution: Research and Practice. 2011, pp. 
643–659. 
[9] E. Hossain, P. Bannerman, and D. Jeffery, "Scrum practices 
in global software development: A research framework," 
Product-focused software process improvement, pp. 88-102., 
2011. 
[10] S. Dorairaj, J. Noble, and P. Malik, “Bridging cultural 
differences: A grounded theory perspective,” Proceedings of 
the 4th India Software Engineering Conference, ACM, 2011, 
pp. 3-10. 
[11] D. Smite, N.B. Moe, and P.J. Agerfalk, "Agility Across Time 
and Space: Summing up and Planning for the Future," Agility 
Across Time and Space. Springer Berlin Heidelberg, 2010, 
pp. 333-337. 
[12] A.S. Alqahtani, J. Moore, D. Harrison, and B. Wood, “The 
challenges 
of 
applying 
distributed 
Agile 
software 
development: A systematic review,” International Journal of  
Advances in Engineering & Technology, Vol. 5, Issue 2, 
2013, pp. 23-36. 
[13] R. Kumar, Research methodology: A step-by-step guide for 
beginners. 4th ed. SAGE publications, 1 Olive’s Yard, 55 
City Road, London. 2014. 
[14] J. Pallant, The SPSS survival manual: A step by step guide to 
data analysis using IBM SPSS. Open University Press 
McGraw-Hill Education, England, 2013. 
[15] H. Estler, M. Nordio, C.A. Furia, B. Meyer, and J. Schneider, 
"Agile vs. structured distributed software development: A 
case study", Global Software Engineering (ICGSE), IEEE 
Seventh International Conference, 2012,  pp. 11-20. 
[16]  A. Garth, Analysing data using SPSS: A practical guide for 
those unfortunate enough to have to actually do it, Sheffield 
Hallam University. 2008. 
[17] S. Jamieson, "Likert scales: how to (ab) use them", Medical 
education, vol. 38, no. 12,  2004,  pp. 1217-1218. 
[18] D. Bertram, "Likert scales", Matematicki fakultet, University 
of Beogradu, 2007.  
[19] J.R. Boone, and D.A. Boone, "Analyzing Likert Data", 
Journal of Extension, vol. 50, no. 2. 2012. 
[20] J.W. Cohen, Statistical power analysis for the behavioral 
sciences. Hillsdale, NJ: Lawrence Erlbaum Associates, 1988.  
[21] R. Boyatzis, Transforming qualitative information: Thematic 
analysis 
and 
code 
development. SAGE 
publications 
incorporated. 1998. 
[22] C. Dawson, Introduction to research methods: A practical 
guide for anyone undertaking a research project. Oxford: How 
To Books Ltd. 2009. 
[23] A. Asnawi, A. Gravell,  and G. Wills, “Emergence of Agile 
methods: 
Perceptions 
from 
software 
practitioners 
in 
Malaysia,” AGILE India, 2012, pp. 30-39.  
[24] M. Paasivaara and C. Lassenius, “Using Scrum Practices in 
GSD Projects,” Agility Across Time and Space. Springer 
Berlin Heidelberg, 2010. pp. 259-278. 
[25]  M. Kajko-Mattsson, G. Azizyan, and M.K. Magarian, 
“Classes of distributed agile development problems,” 
The Agile 2010 Conference, IEEE, 2010, pp. 51-58. 
 
 
223
International Journal on Advances in Software, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/software/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

