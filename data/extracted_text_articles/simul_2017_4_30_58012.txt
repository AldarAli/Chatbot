A Coupled CFD-FEM Analysis to Simulate Blast Effects on High Security Vehicles 
Using Modern Hydrocodes 
 
Arash Ramezani, Burghard Hillig, Hendrik Rothe 
Chair of Measurement and Information Technology 
University of the Federal Armed Forces  
Hamburg, Germany 
Email: ramezani@hsu-hh.de, burghard.hillig@hsu-hh.de, rothe@hsu-hh.de 
 
 
Abstract—The present time is shaped by a variety of religious, 
political and military conflicts. In times of asymmetric warfare 
and constantly changing sources of danger from terrorist 
attacks and other violence based crimes, the personal need for 
protection continues to rise. Aside from military applications, 
there is a large area for the use of high security vehicles. 
Outwardly almost indistinguishable from the basic vehicles, 
security vehicles are used for protecting heads of state, as well 
as individuals. To remain state of the art it is necessary for 
security vehicles to permanently continue to develop protection 
against modern weapons and ammunition types. It is 
enormously cost intensive to check any new technology by 
firing or blasting of real vehicles. Therefore, more and more 
calculations of new security concepts and materials are carried 
out by numerical computer simulations. However, product 
simulation is often being performed by engineering groups 
using niche simulation tools from different vendors to simulate 
various design attributes. The use of multiple vendor software 
products creates inefficiencies and increases costs. This paper 
will present the analysis and development of an interface 
between the most common Computer Aided Engineering 
(CAE) applications ANSYS Autodyn and Abaqus to exploit the 
advantages of both systems for the simulation of blast effects. 
Keywords-CFD-FEM coupling methods; fully automatic 
structure analysis; high-performance computing techniques; 
blast loading; vehicle structures. 
I. 
INTRODUCTION  
Since the 1960’s, the simulation of physical processes 
has been a steadily growing and integral part of CAE. 
Especially, the Computational Fluid Dynamics (CFD) and 
the discretization of complex models using the Finite 
Element Method (FEM) have made an impressive 
development from individual highly specialized applications 
to the standard of industrial product development. This 
process was supported by the progressive development of 
increasingly powerful and less expensive computer 
hardware. Together with specialized software, a triumph of 
the simulation of physical processes in everyday technical 
work has emerged. Positive effects due to the use of 
simulation tools have been shorter development times, 
lower production costs, more innovative products, improved 
security and higher quality. The previous modelling of 
components and objects of the real world by Computer 
Aided Design (CAD) software is an important prerequisite 
for the efficient use of the simulation tools. This has been 
established as a standard in the automotive industry, so that 
almost every part of a vehicle can be constructed by using 
CAD. These complete and realistic vehicle models can be 
analyzed virtually by available simulation software. 
The two leading software providers for CFD / FEM 
calculations are ANSYS (Canonsburg, USA) and Abaqus 
FEA 
from 
Dassault 
Systèmes 
(Vélizy-Villacoublay, 
France). Although both providers offer software with 
similar features available, their performance is characterized 
by different spreads and focuses. For example, Abaqus and 
CATIA, a CAD software, which is also distributed by 
Dassault Systèmes, is predominantly used by the automotive 
industry and provides excellent opportunities for the 
simulation and modelling of complete vehicles. This 
includes screwed and adhesive connections. On the other 
hand, ANSYS offers a wide range of sophisticated 
simulation capabilities in the field of CFD, which includes 
the modelling and simulation of explosive detonations and 
the subsequent propagation of shock waves. The different 
focuses of the performance of ANSYS and Abaqus yield to 
a mixed, demand-based use of the software in the research 
and development area, so that different software is used 
even within the same company on the same project in 
different areas of activity. This circumstance is amplified by 
the fact that product simulations are performed by 
engineering groups using niche simulation tools from 
different vendors to simulate various design attributes. 
Unfortunately the leading software providers avoid the 
effective interaction of their simulation tools due to mutual 
competition. This complicates the development effort and 
results in longer development times in research and 
industry.  
Particularly, in the area of armored security vehicles, it 
is necessary to remain state of the art and to constantly 
consider the ongoing development of modern weapon and 
ammunition types. Experimental tests of the harmful effects 
of new technologies by blast or impact is associated with 
enormous time and financial costs. 
In order to exploit the full potential of ANSYS and 
Abaqus, we have developed an interface between these two 
software platforms [1]. This interface allows an iterative 
transfer of the blast simulation of ANSYS to the structural 
74
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

mechanic solver of Abaqus, which simulates the effects on 
the vehicle model and vice versa. 
This paper reports on the development of this interface 
between ANSYS and Abaqus, which will enable combining 
the strengths of the two leading software providers with the 
aim of generating synergies that result in short development 
times and lower costs. 
After a brief introduction and description of the different 
methods of space discretization in Section III, there is a 
short section on ballistic trials where the experimental set-
up is depicted, followed by Section V describing the 
analysis with numerical simulations. The paper ends with a 
concluding paragraph in Section VI.  
II. 
STATE-OF-THE-ART 
A first step in developing an interface between ANSYS 
and Abaqus has already been reported in [1]. The developed 
interface allows accessing a set of data and passing them to 
Abaqus. Python was used as a programming language. 
ANSYS provides the data records for the interface as .txt 
files. These files contain data points with Cartesian 
coordinates, which describe the propagation of shock waves 
after blasting. The interface takes this data and splits it into 
separate information. In a further step, the data is stored in a 
list, linked with the corresponding time points, pressure data 
and coordinates. It is also possible to use a set of data and to 
interpolate between the time points to produce a larger data 
set. After the data has been written and saved in a linked 
form, the interface retrieves the CAD model. Subsequently, 
the explosion data can be projected onto a selectable surface 
of the model. Then, an iterative loop realizes the coupling 
between CFD and FEM simulations. This approach for a 
coupled CFD-FEM analysis is called “strong coupling.” In 
another approach, the “semi-strong coupling,” a smaller 
amount of data is used and mathematically interpolated for a 
sufficient approximation. The third concept is a “weak 
coupling” solution. Here, neural networks and deep learning 
can be used to replicate blast effects on different vehicle 
structures. Until now, the basic functionality of the interface 
could be validated on different models, including the model 
of a safety vehicle. 
III. 
FUNDAMENTALS OF SIMULATION 
In the security sector, the partly insufficient safety of 
people and equipment due to failure of industrial 
components are ongoing problems that cause great concern. 
Since computers and software have spread into all fields of 
industry, extensive efforts are currently being made in order 
to improve the safety by applying certain computer-based 
solutions. To deal with problems involving the release of a 
large amount of energy over a very short period of time, 
e.g., explosions and impacts, there are three approaches, 
which are discussed in [2].  
As the problems are highly non-linear and require 
information regarding material behavior at ultra-high 
loading rates, which are generally not available, most of the 
work is experimental and may cause tremendous expenses. 
Analytical approaches are possible if the geometries 
involved are relatively simple and if the loading can be 
described through boundary conditions, initial conditions, or 
a combination of the two. Numerical solutions are far more 
general in scope and remove any difficulties associated with 
geometry [3].  
For structures under shock and impact loading, 
numerical simulations have proven to be extremely useful. 
They provide a rapid and less expensive way to evaluate 
new design ideas. Numerical simulations can supply 
quantitative and accurate details of stress, strain, and 
deformation fields that would be very expensive or difficult 
to reproduce experimentally. In these numerical simulations, 
the partial differential equations governing the basic 
physical principles of conservation of mass, momentum, 
and energy are employed. The equations to be solved are 
time-dependent and nonlinear in nature. These equations, 
together with constitutive models describing material 
behavior and a set of initial and boundary conditions, define 
the complete system for shock and impact simulations.  
The governing partial differential equations need to be 
solved in both time and space domains. The solution over 
the time domain can be achieved by an explicit method. In 
the explicit method, the solution at a given point in time is 
expressed as a function of the system variables and 
parameters, with no requirements for stiffness and mass 
matrices. Thus, the computing time at each time step is short 
but may require numerous time steps for a complete 
solution. The solution for the space domain can be obtained 
utilizing different spatial discretization, such as Lagrange 
[4], Euler [5], Arbitrary Lagrange Euler (ALE) [6], or mesh 
free methods [7]. Each of these techniques has its unique 
capabilities, but also limitations. Usually, there is not a 
single technique that can cope with all the regimes of a 
problem [8]. The crucial factor is the grid that causes 
different outcomes. More details are discussed in Section 
IV. 
Due to the fact that all engineering simulations are 
based on geometry to represent the design, the target and all 
its components are simulated as CAD models. Real-world 
engineering commonly involves the analysis and design of 
complicated geometry. These types of analysis depend 
critically on having a modeling tool with a robust geometry 
import capability in conjunction with advanced, easy-to-use 
mesh generation algorithms [9]. It often is necessary to 
combine different simulation and modeling techniques from 
various CAE applications. However, this fact can lead to 
major difficulties, especially in terms of data loss and 
computational effort. Particularly the leading software 
providers prevent an interaction of their tools with 
competing products. But to analyze blast loading and its 
effects on vehicle structures, different CAE tools are 
needed. Therefore, it is important that an interface is 
provided that allows a robust interaction between various 
applications. Using a CAD neutral environment that 
75
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

supports direct, bidirectional and associative interfaces with 
CAE systems, the geometry can be optimized successively 
and analysis can be performed without loss of data [10].  
IV. 
MATERIALS AND METHODS 
Various approaches are possible when it comes to 
solving problems that involve the release of large amounts 
of energy in very short periods of time, which then 
propagate as shock waves or act as impact on structures. 
Analytical solutions offer a very powerful way to describe 
such a process. Unfortunately, their applicability is 
restricted to problems with simple geometries and few 
boundary and initial conditions. In contrast, numerical 
simulations offer much more general applications with 
complex structures and feasible solutions.  
The 
underlying 
physical 
model 
of 
numerical 
simulations is provided by physical conservation laws, the 
equation of state and the constitutive model. Partial 
differential equations for the conservation of energy, 
momentum, and mass form the physical conservation laws. 
Furthermore, the equation of state combines the internal 
energy or temperature and the density or volume of a 
material with the pressure. As a result, changes in the 
density and irreversible thermodynamic processes such as 
shock-like heating can be considered. In addition, the 
constitutive model includes the influence of the material to 
be simulated and describes the effect of deformation, i.e. 
changes in shape and material strength properties.  
Together, these equations form a set of coupled, time- 
and location-dependent, highly non-linear equations, which 
can be solved by computer calculations. The governing 
partial differential equations need to be solved in both time 
and space domains. The solution over the time domain can 
be obtained by an explicit method, which is an iterative 
method and leads to a step by step solution in the time 
domain. Software for numerical simulation of shock and 
impact processes is called a hydrocode [11]. 
A. Methods of Space Discretization 
All existing structural dynamics and wave propagation 
codes obtain solutions to the Differential Equations (DEs) 
governing the field by solving an analogous set of algebraic 
equations. The governing DEs are not solved directly, 
because currently only a handful of closed-form solutions 
for DEs are available. The equations of structural dynamics, 
being a coupled set of rate equations, which account for the 
effects of severe gradients in stress, strain and deformation, 
material behavior ranging from solid to fluid to gas, 
temperatures from room temperature to melt temperature are 
highly nonlinear and do not lend themselves to closed-form 
solutions in the general case.  
To get a solution over the spatial domain a discretization 
of the material with a mesh is necessary. FEM uses such a 
discretization by dividing the problem space into separate 
elements. These elements can have different shapes: In two 
dimensions, the shape of quadrilaterals or triangles, in three 
dimensions hexahedrons and tetrahedrons are usually used. 
Even complicated geometries can be formed with these 
elements. Each FEM element has a certain number of nodes, 
which are located at its corners and have known spatial 
coordinates. The displacement of these nodes represents the 
unknowns of the partial differential equations to be solved. 
There are multiple, different spatial discretization methods 
related to FEM, such as Lagrange, Euler, Arbitrary 
Lagrange Euler (ALE) or mesh free methods. Each of these 
methods can be used independently, but some specific 
problems need a combination of different discretization 
methods.  
1) Lagrange 
The Lagrange method divides an object into a spatial grid 
where the grid is fixed to the object and moves with it. The 
material components within an element do not change. If 
forces are acting on a node, it is displaced, and thus the 
forces are transmitted to its neighboring nodes, similar to a 
spring-mass system. This results in deformations of the grid. 
The nodes of the edge elements of an object remain 
unchanged so that the boundary and interface conditions can 
be easily applied. Clear material boundaries are also 
available so that space outside the material does not require 
an extra grid and therefore the conservation of mass is 
automatically satisfied. Figure 1 shows two objects with its 
mesh as an example of the Lagrange method. Two objects 
consisting of different materials represented by the colors 
blue and green before (left side) and after impact (right side). 
The green object has an initial velocity in the direction of the 
blue object. The right side of the figure shows the 
discretization dependent deformation after the impact with 
the Lagrange solver. The mesh is bound to the objects and 
divides them into multiple elements. After an impact the 
objects deform due to the deformation of the elements. A 
weak point of the Lagrange method is a strong distortion of 
the mesh in heavily loaded regions, as shown in Figure 1. in 
the area adjacent to the green and blue object. In general, the 
Lagrange method is best suited for complex geometries and 
structures, projectiles and other solids. A disadvantage of 
Lagrange is the occurrence of strong distortions of mesh 
element at high loads. Such a distorted element can adversely 
affect the temporal solution of the simulation since the time 
step is proportional to the size of the smallest element. 
 
Figure 1.  Lagrange method example. 
76
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

In general the Lagrange method is best suited for 
complex geometries and structures, projectiles and other 
solids. A disadvantage of Lagrange is the occurrence of 
strong distortions of mesh element at high loads. Such a 
distorted element can adversely affect the temporal solution 
of the simulation since the time step is proportional to the 
size of the smallest element.  
2) Euler 
In the Euler method the coordinates of the nodes are 
fixed and form the entire mesh of the region to be solved. 
The material flows through the mesh as a function of time 
and changes the value of the element, while the spatial 
coordinates and the nodes remain fixed. This is the reason 
why no element distortion is possible in the Euler method. In 
contrast to Lagrange, boundary nodes do not necessarily 
coincide together with material boundary conditions. 
Thereby difficulties can arise with the application of 
boundary and interface conditions. Figure 2. shows two 
objects and the mesh as an example of the Euler method. 
Two objects consisting of different materials represented by 
the colors blue and green before (left side) and after impact 
(right side). The mesh fills the whole space. The green object 
has an initial velocity in the direction of the blue object. The 
right side of the figure shows the discretization dependent 
deformation after the impact with the Euler solver. The mesh 
is not bound to the objects like in the Lagrange frame. 
Instead the mesh fills the whole space with the objects and 
empty space between them. During the simulation the 
material of the objects is transported through the mesh of the 
space. After an impact the mesh stays clear but its content is 
partly deformed.  
In general the Euler method is used to model the 
propagation of gases and fluids as a result of an explosion or 
impact. In the investigation of solids, the Euler method has a 
disadvantageous effect, since additional calculations are 
needed to transport the stress tensor and the history of the 
material through the lattice. In this case Euler needs more 
computing performance and smaller elements to resolve the 
occurring shock waves. 
 
 
Figure 2.  Euler method example. 
3) ALE  
The Arbitrary Lagrange Euler (ALE) method is a mix of 
Lagrange and Euler method. ALE allows an arbitrary 
redefinition of the mesh on each calculation step. Different 
predefined grid motions can be specified, such as free 
(Lagrange), fixed (Euler), equipotential, equal spacing and 
others. As an advantage distortions can be avoided. On the 
other hand, additional computation steps are necessary to 
move and to convert the grid. An example of ALE is shown 
in Figure 3.  Two objects consisting of different materials 
represented by the colors blue and green before (left side) 
and after impact (right side). The blue object has an initial 
velocity in the direction of the green object. The right side of 
the figure shows the discretization dependent deformation 
after the impact with the ALE solver. In comparison to the 
pure Lagrange method (Figure 1. ), no lattice distortions 
occur here. 
4) SPH 
Smoothed Particle Hydrodynamics is a method which is 
not based on a fixed topological lattice but on a finite set of 
particles. These particles are embedded to the material 
similar to the nodes of the Lagrange method, but their 
connections are not fixed. However, the particles represent 
not only mass points, but also interpolation points for the 
calculation of the physical variables. The calculations are 
based on the data of the neighboring particles and are scaled 
by a weighting function. Unlike Lagrange, no grid distortion 
can occur at SPH, since no grid exists. Related to the Euler 
method, SPH has the advantage that all material boundaries 
and interfaces are clearly defined. Figure 4 illustrates two 
objects consisting of different materials in the SPH frame 
represented colored particles before (left side) and after 
impact (right side). The green object has an initial velocity in 
the direction of the blue object. The right side of the figure 
shows the discretization dependent deformation after the 
impact with the SPH solver. As seen in Figure 4.  two 
objects consist of small particles in the SPH frame. Their 
behavior before and after an impacts differs from the 
solutions in the Lagrange, Euler or ALE frame.   
 
Figure 3.  ALE method example.  
77
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

 
Figure 4.  SPH method example. 
The SPH method has proven especially useful in the 
simulation of impact processes on brittle materials [2]. It 
should be noted that the modelling of the material as 
particles leads to significantly higher computing effort per 
time step. 
For problems of dynamic fluid-structure interaction 
and impact, there typically is no single best numerical 
method which is applicable to all parts of a problem. 
Techniques to couple types of numerical solvers in a single 
simulation can allow the use of the most appropriate solver 
for each domain of the problem.  
One of the more important issues, which have to be 
carefully considered is the issue of mesh size. Different 
results are obtained if the number of cells per unit length is 
not adequate. For example, it was found that for penetration 
studies with eroding long rods, the number of cells on the 
rod’s radius should be at least eleven. The same density of 
cells should be kept in the target, at least for several 
projectile radii around its symmetry axis. In order to save 
computing time, the cell size at farther zones can be 
gradually increased according to their distance from the 
symmetry axis. The mesh cell size depends on the specific 
problem. As an example, a small cell size should be 
considered in cases where there is a fracture in the projectile 
or target. It is recommended that while preparing the code 
for its final runs, the numerical convergence with respect to 
mesh cell size should be checked. Another important issue, 
especially when material elements are expected to deform 
considerably, is the issue of erosion with Lagrangian codes. 
At large deformations the code may run into trouble when 
treating heavily deformed elements. The use of the erosion 
threshold condition is then necessary in order to eliminate 
elements at a predetermined value of the plastic or 
geometric deformation. The erosion should be monitored 
constantly, and when it is too high one should replace the 
Lagrangian with an Eulerian code. 
The goal of this paper is to evaluate an interface 
between different hydrocodes, computational tools for 
modeling the behavior of continuous media. In its purest 
sense, a hydrocode is a computer code for modeling fluid 
flow at all speeds. For that reason, a structure will be split 
into a number of small elements. The elements are 
connected through their nodes (see Figure 5. ). The mesh 
divides the object into small elements connected by its 
nodes. 
The behavior (deflection) of the simple elements is 
well-known and may be calculated and analyzed using 
simple equations called shape functions. By applying 
coupling conditions between the elements at their nodes, the 
overall stiffness of the structure may be built up and the 
deflection/distortion of any node – and subsequently of the 
whole structure – can be calculated approximately [12]. 
Therefore, several runs are necessary: From modeling to 
calculation to the evaluation and subsequent improvement 
of the model.  
Hydrocodes, or wave propagation codes, are a 
valuable adjunct to the study of the behavior of metals 
subjected to high-velocity impact or intense impulsive 
loading. The combined use of computations, experiments 
and high-strain-rate material characterization has, in many 
cases, supplemented the data achievable by experiments 
alone at considerable savings in both cost and engineering 
man-hours.  
A large database exists of high-pressure Equation-Of-
State (EOS) data. Considerable data on high rate deviatoric 
behavior exists as well although, unlike EOS data, it is not 
collected in a few compilations but scattered throughout a 
diverse literature. Experimental techniques exist for 
determining either EOS or strength data for materials not yet 
characterized under high-rate loading conditions.  
By contrast, computations with non-metallic materials 
such as composites, concrete, rock, soil and a variety of 
geological materials are, in effect, research tasks. This is 
due to several reasons: lack of definitive computational 
models for high strain rate–temperature–pressure response; 
lack of a database for EOS and high rate strength data for 
such materials; lack of test methodologies for anisotropic 
materials subjected to high-rate loading. 
 
Figure 5.  The left side shows the cross-section of a bullet over millimeter 
paper, which could theoretically divide the bullet into multiple elements. 
The right side shows an example of a mesh in the numerical simulation. 
Different parts are color coded in the representation of the bullet.  
78
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

A large number of ad hoc models exist for explosives, 
geological materials, concrete and other non-metallics. 
Many of these lack a firm theoretical foundation. This is an 
area where considerable research is required, both to devise 
appropriate test techniques to measure material response 
under high strain rates, elevated temperatures and high 
pressures as well as to develop appropriate constitutive 
models. 
B. Interface 
In general, an interface connects systems that have 
different properties with the purpose of exchanging 
information. For computers, this is mainly the case between 
software, hardware, peripheral devices and humans. 
Communication at the interface can be either in one 
direction, such as a remote control or keyboard, or in both 
directions, such as a touch screen or a network adapter [13]. 
In the context of numerical simulation of blast and 
impact processes, an interface is necessary to ensure an 
effective coupling of CFD / FEM simulations between the 
software Abaqus and ANSYS. For our research, ANSYS is 
to be used to provide data from simulated explosions using 
Euler-Lagrange coupling. On the other hand, the structure, 
which is affected by the blasting is simulated by Abaqus. 
The developed Interface has the task of conveying the data 
between ANSYS and Abaqus, so that the individual 
simulation steps can be performed successively with respect 
to the successive transfer of data.  
V. 
EXPERIMENTAL SECTION 
In computing, an interface is a shared boundary across 
two separate components of a computer system exchange 
information. The exchange can be between software, 
computer hardware, peripheral devices, humans and 
combinations of these. Some computer hardware devices 
such as a touchscreen can both send and receive data 
through the interface, while others such as a mouse, 
microphone or joystick operate one way only [13]. 
Coupled FEA/CFD analysis is an alternative technique, 
where separate FEA and CFD codes are used for solid and 
fluid regions, respectively, with a smooth exchange of 
information between the two codes to ensure continuity of 
blast loading data. The main merit of the approach is to 
enable users to take full advantages of both CFD and FEA 
capabilities. 
The objective of this work is to develop an interface 
between ANSYS Autodyn and Abaqus. The software 
ANSYS is used to solve linear and non-linear problems of 
structural 
mechanics, 
computational 
fluid 
dynamics, 
acoustics and various other engineering sciences [14]. Here, 
ANSYS will provide data from the simulation of blast 
effects. The capability to couple Eulerian and Lagrangian 
frames in ANSYS is helpful in blast field modeling. The 
Eulerian frame is best suited for representing explosive 
detonations, because the material flows through a 
geometrically constant grid that can easily handle the large 
deformations associated with gas and fluid flow. The 
structure is modeled with the Lagrangian frame in Abaqus. 
Abaqus 
supports 
familiar 
interactive 
computer-aided 
engineering concepts such as feature-based, parametric 
modeling, interactive and scripted operation, and GUI 
customization [15].  
First, every possibility of transferring the data from 
ANSYS outputs to Abaqus inputs has to be detected. A 
summary of this process is shown in Figure 6.  
ANSYS will provide the data by generating a data set 
for the blast loading. Figure 7.  shows the color coding of 
the shock wave goes from low pressures (0 hPa) in blue to 
high pressures in red (> 3500 hPa). The last picture shows 
the shock wave when the simulated vehicle is reached. This 
data set will include snapshots of given points in time. At 
this stage there is a data set of five points in time, between 
0.0291s and 0.0475s (after detonation). Related to the points 
in time this data set includes the pressure values with 
Cartesian coordinates based on the simulation of the spread 
of explosive materials. A script is coded to read the blast 
loading data in Abaqus. This script, coded in Python, uses 
the line interface in Abaqus directly. First, a blast loading 
data is generated in ANSYS and saved as a normal text file 
in .txt format. The data set will be split to separate the 
different types of information. After that, a list will be 
created to save the data and connect the related time points 
to the coordinates and pressure values. At this point, there is 
a possibility to use linear interpolation between the five time 
points to generate a larger data base. After reading and 
saving the data set, the script will load the model used for 
impact tests in Abaqus. A surface of the model must be 
selected to project the blast data on it.  
The goal is to investigate the impact of the blast data on 
a full vehicle model in Abaqus. This work (in progress) 
starts with a less complex model to validate the function of 
the script and the interface itself. The first model was a 
basic rectangle to be strained by the pressure data. 
Afterwards, two more complex models were tested 
successfully. This approach will lead to a surface similar to 
the silhouette of high security vehicles (see Figure 8. ).  
 
 
Figure 6.  Inputs and outputs for an interface between Ansys and Abaqus. 
Blast data consisting of several files is exported by Ansys and read via a 
python script in Abaqus. 
79
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

 
Figure 7.  Progressive expansion of a blast in ANSYS Autodyn with a 
repr-esentation fo a vehicle on the rigth side.  
  
 
Figure 8.  Testing structure in Abaqus with the coarse appearance of a 
vehicle. 
The coupling is realized through an iterative loop 
between 
the 
FEA 
and 
CFD 
simulations, 
with 
communications ensuring continuity of shock compression 
data across the coupled boundaries between the FEA and 
CFD models. In the coupling process, intermediate 
individual FEA and CFD solutions are obtained in turn with 
dynamically updated boundary conditions.  
To avoid exceptional deadlock of the individual CFD 
simulations, appropriate maximum numbers of iterations are 
assigned for each CFD model. 
Testing means that the spatially discretized model is 
loaded with pressure. The change over time is decisive. An 
example is shown in Figure 9. . The unarmored SUV model 
was loaded with a typical explosive charge. The load on the 
vehicle is made visible by color coding from low strain 
(blue) to very high strain (red). The deformation on the 
sheet metal body parts is clearly shown. This data can be 
used to simply analyze vulnerabilities. The goal is, however, 
to use complete vehicle models and to carry out realistic 
investigations. 
 
 
Figure 9.  Simulated test structure (unarmed SUV) and deformation 
process after 3, 5, 10 and 20 ms (images arranged from top to bottom in 
order of increasing time).  
80
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

VI. 
OUTLOOK 
There are a variety of approaches in implementing the 
coupled FEA/CFD analysis. One is generally called “strong 
coupling,” where data have to be transferred between 
ANSYS Autodyn and ABAQUS in every single time step. 
A “semistrong coupling” can get along with a smaller set of 
date, using mathematical interpolation for a sufficient 
approximation. The third concept is a “weak coupling” 
solution. Here, neural networks and deep learning can be 
used to replicate blast effects on different vehicle structures. 
These approaches are going to be tested in a next step.  
Furthermore, a larger blast loading data set has to be 
created in ANSYS. This will allow a more accurate 
illustration of blast effects on vehicle structures. Smaller 
time steps will enable a linear interpolation with a higher 
accuracy. Different explosives are going to be tested to 
expand the data base. The next step will be a model for the 
reflection of blast waves and dynamic changes of pressure 
values. Using a full vehicle model will provide important 
information about the behavior of armored structures under 
blast effects. But to validate the results of the simulation, 
more ballistic trials are needed. Based on the difficulties of 
full vehicle model simulations, the implementation of an 
automatic surface detection has to be taken into 
consideration. This could be helpful if a large number of 
different vehicles are investigated. In order to create a user-
friendly interface it is possible to generate the script as a 
plug-in which can be started from the Abaqus user surface 
directly.  
By using pre-defined blast data to create forces as 
vectors on our vehicle structures, the proposal can be 
generalized. Then, FEA analysis can be done with other 
software suites as well. Right now, the concept is not 
applicable to other systems. This is a major disadvantage 
and part of our future work. Furthermore, a parallelization 
of the problem should be considered.  
VII. CONCLUSION AND FUTURE WORK 
A technique for efficiently coupling FEA/CFD for the 
simulation of blast effects is described. An interface 
between ANSYS and Abaqus was created to provide blast 
data sets. The data sets from ANSYS include snapshots 
from the blast simulation saved at different points in time. 
The interface is coded in Python and also contains the 
possibility to use linear interpolation on the data sets.  
A good agreement of blast load test data and simulation 
results was observed. Furthermore, it is shown that the 
coupled solutions can be obtained in sufficiently short turn-
around times for use in design. These solutions can be used 
as the basis of an iterative optimization process. They are a 
valuable adjunct to the study of the behavior of vehicle 
structures subjected to high-velocity impact or intense 
impulsive loading. The combined use of computations, 
experiments and high-strain-rate material characterization 
has, in many cases, supplemented the data achievable by 
experiments alone at considerable savings in both cost and 
engineering man-hours. 
 
REFERENCES 
[1] E. Hansen, N. Ehlers, A. Ramezani, and H. Rothe, 
“Developing an Interface between ANSYS and Abaqus to 
Simulate Blast Effects on High Security Vehicles,” The 
Eighth International Conference on Advances in System 
Simulation (SIMUL 2016) IARIA, Aug. 2016, pp. 73-76, 
ISBN 978-1-61208-442-8. 
[2] A. Ramezani and H. Rothe, “Investigation of Solver 
Technologies for the Simulation of Brittle Materials,” The 
Sixth International Conference on Advances in System 
Simulation (SIMUL 2014) IARIA, pp. 236-242, Oct. 2014, 
ISBN 978-61208-371-1. 
[3] J. Zukas, “Introduction to Hydrocodes”. Elsevier Science, 
2004. 
[4] A. M. S. Hamouda and M. S. J. Hashmi, “Modelling the 
impact and penetration events of modern engineering 
materials: Characteristics of computer codes and material 
models,” Journal of Materials Processing Technology, vol. 
56, pp. 847-862, Jan. 1996. 
[5] D. J. Benson, “Computational methods in Lagrangian and 
Eulerian hydrocodes,” Computer Methods in Applied 
Mechanics and Engineering, vol. 99, pp. 235-394, Sep. 1992, 
doi:        10.1016/0045-7825(92)90042-I. 
[6] M. Oevermann, S. Gerber, and F. Behrendt, “Euler-
Lagrange/DEM simulation of wood gasification in a bubbling 
fluidized bed reactor,” Particuology, vol. 7, pp. 307-316, Aug. 
2009, doi:    10.1016/j.partic.2009.04.004. 
[7] D. L. Hicks and L. M. Liebrock, “SPH hydrocodes can be 
stabilized with shape-shifting,” Computers & Mathematics 
with Applications, vol. 38, pp. 1-16, Sep. 1999, doi: 
10.1016/S0898-1221(99)00210-2. 
[8] X. Quan, N. K. Birnbaum, M. S. Cowler, and B. I. Gerber, 
“Numerical Simulations of Structural Deformation under 
Shock and Impact Loads using a Coupled Multi-Solver 
Approach,” 5th Asia-Pacific Conference on Shock and Impact 
Loads on Structures, Hunan, China, Nov. 2003, pp. 152-161. 
[9] N. V. Bermeo, M. G. Mendoza, and A. G. Castro, “Semantic 
Representation of CAD Models Based on the IGES 
Standard,” Computer Science, vol. 8265, pp. 157-168, Dec. 
2001, doi: 10.1007/ 978-3-642-45114-013. 
[10] J. Sarkar, “Computer Aided Design: A Conceptual 
Approach,” CRC Press, December 2014. 
[11] C. E. Anderson, “An overview of the theory of hydrocodes,” 
International journal of impact engineering, 5.1-4, pp 33-59, 
1987. 
[12] G.-S. 
Collins, 
“An 
Introduction 
to 
Hydrocode 
Modeling,” Applied Modelling and Computation Group, 
Imperial College London, 2002. 
[13] IEEE 100 – “The Authoritative Dictionary Of IEEE Standards 
Terms,” NYC, NY, USA: IEEE Press, 2000, pp. 574-575, 
ISBN 0-7381-2601-2. 
[14] ANSYS. CAE. Structures: FEA Simulation. [Online]. Available 
from: http://www.ansys.com [retrieved: May, 2017]. 
[15] Abaqus Complete Solutions for Realistic Simulation. [Online]. 
Available 
from: 
http://www.3ds.com/products-
services/simulia/products/abaqus/abaquscae/ [retrieved: June, 
2017] 
81
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-594-4
SIMUL 2017 : The Ninth International Conference on Advances in System Simulation

