Pair-wise Similarity Criteria for Flows Identiﬁcation in P2P/non-P2P Trafﬁc
Classiﬁcation
Jos´e Camacho, Pablo Padilla, F. Javier Salcedo-Campos, Pedro Garc´ıa-Teodoro, Jes´us D´ıaz-Verdejo
Dpt. of Signal Theory, Telematics and Communications,
CITIC - Faculty of Computer Science and Telecommunications - University of Granada,
C/ Periodista Daniel Saucedo Aranda s/n 18071 GRANADA (Spain).
josecamacho@ugr.es, pablopadilla@ugr.es, fjsalc@ugr.es, pgteodor@ugr.es, jedv@ugr.es
Abstract—There is a growing interest in network trafﬁc
classiﬁcation without accessing the packets payload. A main
concern for network management is peer-to-peer (P2P) trafﬁc
identiﬁcation. This can be performed at several levels, including
packet level, ﬂow level and node level. Most current trafﬁc
identiﬁcation approaches rely on ﬂow level identiﬁcation, being
highly demanding and time consuming procedures. This paper
introduces a similarity-based method to pair ﬂows up, which is
aimed at reducing the cost of identifying P2P/non-P2P trafﬁc
ﬂows. For that, different similarity measures for ﬂows pairing
are proposed and analyzed.
Keywords-Trafﬁc
classiﬁcation;
peer-to-peer;
k-Nearest
Neighbors
I. INTRODUCTION
The increasing popularity and expansion of peer-to-peer
(P2P) networks and applications has raised some engineering
issues related to trafﬁc and security. On the one hand,
Internet service providers need to handle the large volume
of trafﬁc yielded by P2P activities to assure the minimal
impact to other network services. Moreover, the exchange of
any kind of information between the so-called peers, most
of them anonymous, is a security risk. This risk affects users
in particular, since the information exchanged might contain
viruses, worms and malware. It also affects the network
infrastructure, since P2P applications can be used to support
other harmful activities such as coordinated DoS attacks,
botnets, etc.
In this context, there is a clear interest in P2P trafﬁc
identiﬁcation. This paper introduces a new method aimed at
reducing the cost of identifying P2P/non-P2P trafﬁc ﬂows.
The rest of the article is organized as follows: Section
II reviews the state of the art of trafﬁc classiﬁcation and
P2P trafﬁc identiﬁcation. Section III introduces the data-
sets used in the experimentation. Section IV motivates the
use of macro-ﬂows built upon pairs of ﬂows. In Section V
some strategies for ﬂows pairing are presented. Section VI
is devoted to compare the results obtained by these different
strategies, and ﬁnally, the conclusions are drawn in Section
VII.
II. STATE OF THE ART
The recognition of P2P trafﬁc is part of a more general
problem, namely the identiﬁcation of network trafﬁc [1].
Three main problems arise in the identiﬁcation of the trafﬁc
on a network:
1) Characterization: There are many features that have
been proposed in the literature to represent and classify
network trafﬁc. The information used includes a wide
variety of parameters, from statistical data of connec-
tions from SNMP routers reports [2] (low granularity)
to information obtained from TCP headers, including
the signaling bits and the ﬁrst bytes of payloads (high
granularity) [3].
2) Identiﬁcation level: Once the trafﬁc has been param-
eterized, three levels are considered to perform the
identiﬁcation [1], [4]: node level, packet level and ﬂow
level. In the ﬁrst case, the objective is to identify nodes
that generate a certain type of trafﬁc [5]. The aim of
packet-based identiﬁcation is to classify each packet
individually. In the ﬂow-based identiﬁcation, the goal
is to determine the application protocol that generates
each trafﬁc ﬂow.
3) Identiﬁcation process: A wide variety of recognition
systems are used to perform the identiﬁcation, ranging
from heuristic or signature-based [1], [6], [7] to data
mining or pattern recognition algorithms [4], [8].
P2P ﬂow recognition has been attempted by using a num-
ber of techniques. Among them, the k-Nearest Neighbors
(kNN) technique is remarkable because of its simplicity and
high recognition rate reported. Jun et al. [9] performed a
comparison between a number of techniques including Na¨ıve
Bayes, decision trees, kNN and other methods to classify
ﬂows from 12 different application protocols, where some
of them are P2P (BitTorrent and Gnutella) and the rest non-
P2P (HTTP, DNS, POP3, etc.). The results show that kNN is
the best technique in terms of precision rate. Lim et al. [10]
proposed a discretization of standard parameters of trafﬁc
ﬂows (ports, package sizes, number of packets, duration
of ﬂow, etc..) and assessed four classiﬁcation techniques:
support vector machines (SVMs), kNNs, Na¨ıve Bayes and
59
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

decision trees. The results indicate that the performance of
kNN is similar to SVMs, which yielded the best perfor-
mance. Salcedo-Campos et al. [11] proposed a kNN-based
technique called MVC (Multiple Vector Classiﬁcation) for
P2P trafﬁc identiﬁcation. This method combines three kNNs
applied over different sets of parameters obtained from the
ﬂows.
Most current trafﬁc classiﬁcation approaches rely on ﬂow
level techniques. Despite the good classiﬁcation performance
usually obtained by them, the general process is highly time
consuming. In order to overcome such limitation, this paper
introduces several similarity measures for ﬂows pairing in
order to identify groups of ﬂows likely to be generated
by the same protocol/service. This way, once a ﬂow is
identiﬁed with a well-known procedure (e.g., DPI tools),
all the ﬂows which are similar to it according to the ﬂows
pairing will also be (quickly) identiﬁed. The proposed pair-
wise approach for ﬂows classiﬁcation takes advantage of the
good performance exhibited by kNN classiﬁers.
III. NETWORK TRAFFIC DATA FOR THE
EXPERIMENTATION
In order to evaluate the approach and methods described
in this work, an experimental setup with two steps has been
considered. The ﬁrst one includes the capture of a great
amount of real network trafﬁc, in this case, acquired in an
academic institution network. The second one consists of the
automatic classiﬁcation of all the captured trafﬁc packets and
ﬂows by means of a deep packet inspection (DPI) tool. In
this scenario, the ground truth data-set is constituted taking
into account the analysis and identiﬁcation of each trafﬁc
ﬂow and its associated trafﬁc packets with a DPI tool, in
this case openDPI [12], with a negligible percentage of
classiﬁcation errors.
The database used in this work contains the data captured
during three days of network inspection in an academic
institution. The acquisition was performed in the access
router in order to control the incoming and outgoing trafﬁc
of the inner nodes of the network. The trafﬁc ﬂows and their
packets are captured in both communication ways.
The original data-set has been divided into a calibration
subset of 100,000 ﬂows and a test subset with 100,000
ﬂows. It should be remarked that the ﬂows are sequentially
organized so that the period corresponding to the calibration
subset is previous to the one of the test subset, with no time
period overlapping. Table I shows the amount of P2P trafﬁc
in both calibration and test subsets. OpenDPI tool found 35
and 41 different protocols in the calibration and test subsets,
respectively.
The openDPI classiﬁcation shows that HTTP is the pro-
tocol with the highest number of ﬂows, while the portion
of P2P protocols is close to 9%. Although this P2P frac-
tion could be considered reduced, the P2P trafﬁc volume
associated is high, due to the size of each P2P ﬂow. A
Table I
BASIC TRAFFIC DESCRIPTION OF THE CALIBRATION AND TEST SUBSET.
Flows
Subset
Total
P2P ﬂows
non-P2P ﬂows
Calibration
100,000
8,897
91,103
Test
100,000
8,916
91,084
Total
200,000
17,813
182,187
more detailed analysis shows that only a reduced number of
network nodes generate or receive P2P trafﬁc, being more
relevant videostreaming related protocols, which contribute
to the HTTP trafﬁc (i.e., YouTube trafﬁc). The rest of non-
P2P ﬂows include mainly habitual protocols, such as DNS,
SSL or email protocols. The majority of the P2P ﬂows
are related to BitTorrent, meanwhile Gnutella and others
are found in a lower proportion. This proportion may be
considered a consequence of the particular features of the
protocols. The relation between the P2P trafﬁc and the non-
P2P trafﬁc is similar in both calibration and test data-sets.
Please, refer to [11] for a more detailed description of the
protocols in the data set.
The feature vector representing each ﬂow is composed
of 61 variables, as Table II depicts. The feature vectors
contain all the information needed for posterior analysis,
including the ﬂow identiﬁcation label in the database, the
protocol detected by openDPI and some trafﬁc information
concerning the ﬂow. The IP addresses of each ﬂow have been
sorted by number. The term UP (ascending) points out that
the packet is going towards the machine with the highest IP,
and the term DOWN (descending) indicates that the packet
is going towards the machine with the lowest IP.
In the rest of the text, the terms observation and feature
vectors are used interchangeably. Two levels of classiﬁcation
are established: the ﬁrst one considering all the protocols
in the subsets and the second one considering only two
classes indicating if the ﬂows are related to P2P or non-P2P
protocols.
IV. MOTIVATION
In kNN classiﬁcation, an object is assigned to the most
common class amongst its k nearest neighbors. In this
section, the kNN technique in its simplest form (k=1) will
be applied to the calibration data-set in order to motivate the
approach adopted in this paper. From here onwards, let us
call this the NN technique. The NN classiﬁes an observation
(feature vector or ﬂow) within the same class of the nearest
observation in the calibration data. To establish the nearest
observation to a given one, a closeness functional needs to be
deﬁned, typically based on well-known distances. An often
used distance is the normalized Euclidean distance, where
all variables have been normalized in variance:
d(x, y) =
√
(x − y)t · S−1 · (x − y)
(1)
60
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

Table II
VARIABLES OF THE FEATURE VECTOR FOR EACH FLOW.
Value
Description
Flow identiﬁcation
ID FLOW
Flow ID
IP LOW
Lower IP of the session tuple
IP UPPER
Highest IP of the session tuple
PORT1
Port related to the lowest IP (IP LOW)
PORT2
Port related to the highest IP (IP UPPER)
PROT UDP
Transport protocol UDP
PROT TCP
Transport protocol TCP
PROT UNK
ICMP
DIR
Direction of the ﬁrst observed packet (UP or DOWN)
FIRST TIME
Timestamp of the ﬁrst packet (µs)
LAST TIME
Timestamp of the last packet (µs)
Related to transfer
NPACKETS
Number of packets in ﬂow
NPACKETS UP
Idem way UP
NPACKETS DOWN
Idem way DOWN
PACKETS SIZE
Complete size of all the packets in the ﬂow
PACKETS SIZE UP
Idem way UP
PACKETS SIZE DOWN
Idem way DOWN
PAYLOAD SIZE
Complete size of payloads
PAYLOAD SIZE UP
Idem way UP
PAYLOAD SIZE DOWN
Idem way DOWN
MEAN PACK SIZE
Mean packet size
MEAN PACK SIZE UP
Idem way UP
MEAN PACK SIZE DOWN
Idem way DOWN
SHORT PACKETS
Number of short packets
SHORT PACKETS UP
Idem way UP
SHORT PACKETS DOWN
Idem way DOWN
LONG PACKETS
Number of large packets
LONG PACKETS UP
Idem way UP
LONG PACKETS DOWN
Idem way DOWN
MAXLEN
Maximum packet size
MAXLEN UP
Idem way UP
MAXLEN DOWN
Idem way DOWN
MINLEN
Minimum packet size
MINLEN UP
Idem way UP
MINLEN DOWN
Idem way DOWN
Related to time
DURATION
Flow duration (µs)
MEAN INTERAR
Mean time between consecutive packets
MEAN INTERAR UP
Idem only UP
MEAN INTERAR DOWN
Idem only DOWN
MAX INTERAR
Maximum time between consecutive packets
MAX INTERAR UP
Idem only UP
MAX INTERAR DOWN
Idem only DOWN
MIN INTERAR
Minimum time between consecutive packets
MIN INTERAR UP
Idem only UP
MIN INTERAR DOWN
Idem only DOWN
Signaling
N SIGNALING
Number of packets containing ﬂags
N SIGNALING UP
Idem way UP
N SIGNALING DOWN
Idem way DOWN
NACKS
Number of packets with ACK ﬂag active
NFIN
Idem FIN
NSYN
Idem SYN
NRST
Idem RST
NPUSH
Idem PSH
NURG
Idem URG
NECE
Idem ECE
NCWD
Idem CWD
NACK UP
Number of packets UP with ACK ﬂag active
NACK DOWN
Idem way DOWN
NFIN UP
Idem FIN & UP
NFIN DOWN
Idem FIN & DOWN
NRST UP
Idem RST & UP
NRST DOWN
Idem RST & DOWN
where S is a diagonal matrix containing the sampling
variances of the variables.
In Figure 1, the performance of the NN technique for
trafﬁc classiﬁcation (Figure 1(a)) and P2P trafﬁc identiﬁ-
cation (Figure 1(b)) is assessed with the calibration data
following two different approaches. The ﬁrst approach con-
siders the trafﬁc corresponding to the ﬁrst hour as the
calibration data for NN. Then, trafﬁc classiﬁcation and P2P
identiﬁcation are performed over the rest of the ﬂows up
to the 20th hour. Notice that the ﬁrst 20 hours correspond
to the calibration subset introduced in the previous section.
The test subset is only employed in the experiments of
Section V. The second approach considers a sliding window
of one hour as the calibration data for NN. Thus, to classify
an observation the nearest neighbor is obtained from the
immediate preceding observations within one hour interval.
Both methods are compared to a 95% conﬁdence level for
statistical signiﬁcance, computed using permutation tests,
a.k.a. randomization tests [13], [14]. The conﬁdence level
is useful to assess the expected performance of a random
classiﬁer in a given data-set, in order to test whether the
performance of the present classiﬁer is beyond what it is
expected just by chance. Thus, in Figure 1(b), the expected
accuracy of a random classiﬁer is high (between 50% and
95%) due to the low percentage of P2P ﬂows in the data in
comparison with non-P2P ﬂows. The random performance
also changes over time due to changes in the percentage of
P2P trafﬁc. The good performance of NN is evidenced in the
ﬁgures since both approaches are far above the conﬁdence
level. Also, the sliding window approach outperforms the
static window in the ﬁrst hour.
Another interesting question is how the similarity between
ﬂows is affected by the coincidence of IP addresses. An
experiment to check this is shown in Figure 2. The 20th hour
interval of trafﬁc from a speciﬁc IP (the most common one)
was classiﬁed using the NN technique from two different
data-sets obtained from the previous 19 hours: trafﬁc from
the same IP and trafﬁc from the rest. For a fair comparison,
both data-sets had the same number of ﬂows and non
statistical differences on time stamp. According to the ﬁgure,
most of the correct trafﬁc classiﬁcation and P2P trafﬁc
identiﬁcation is obtained for trafﬁc with the same IP.
V. STRATEGIES FOR FLOWS PAIRING
The results in the previous sections show that the good
performance of NN is almost restricted to trafﬁc with the
same IP. This represents a severe limitation for the general
application of NN to on-line trafﬁc classiﬁcation, since
it cannot be applied to trafﬁc coming from new IPs not
previously considered. Furthermore, the performance of NN
is expected to degrade with the time separation between
calibration ﬂows and test ﬂows. Finally, taking into account
that calibration ﬂows need an additional classiﬁcation me-
chanism to perform NN, for instance payload-based classi-
ﬁcation, the direct application of NN in trafﬁc classiﬁcation
is not recommended.
Nevertheless, ﬂows identiﬁcation methods based on
pairing can take advantage of this good performance of
NN. From the previous results, a convenient approach for
61
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

5
10
15
20
0
20
40
60
80
100
Hours
% Accuracy
 
 
First hour
Sliding window
95% confidence
(a)
5
10
15
20
0
20
40
60
80
100
Hours
% Accuracy
 
 
First hour
Sliding window
95% confidence
(b)
Figure 1.
Percentage of accuracy for the calibration data-set in (a) trafﬁc
classiﬁcation and (b) P2P trafﬁc identiﬁcation. The conﬁdence level is
computed using randomization tests.
Traffic Classification
P2P Identification
0
20
40
60
80
100
% Accuracy
 
 
Same IP
Different IP
Figure 2.
Percentage of accuracy in trafﬁc classiﬁcation and P2P trafﬁc
identiﬁcation for the 20th hour trafﬁc from a given IP. The performance of
NN using past trafﬁc from the same IP is compared to that of NN using
past trafﬁc from different IPs.
ﬂows pairing is to use a time sliding window, where only
those ﬂows which share at least one IP with the current ﬂow
are considered as potential candidates for pairing. This ap-
proach has been combined with payload-based classiﬁcation
methods by the authors in some preliminary experiments,
yielding less than 5% of payloads inspection to identify cor-
rectly close to 100% of ﬂows. This low payload inspection
level and the fact that only a time window of trafﬁc data is
stored for classiﬁcation, makes this approach specially suited
for on-line trafﬁc classiﬁcation in network monitoring.
A main decision within this approach is the similarity
or closeness functional considered in NN for ﬂows pairing.
Here, two types of functional are compared: those based on
traditional distances and a parametric functional, referred
to as similarity rule. The similarity rule has been designed
from ﬁrst principles by the authors, taking into account the
general behavior of network protocols.
A. Distance-based approaches
Two distances have been considered: the normalized Eu-
clidean distance in Eq. (1) and the Mahalanobis distance
[3]:
dM(x, y) =
√
(x − y)t · Σ−1 · (x − y)
(2)
where Σ stands for the covariance matrix. The difference
between normalized Euclidean and Mahalanobis distances
is that in the latter the weight of the eigenvalues of the
covariance matrix in the resulting distance are normalized.
This may be convenient when eigenvectors of low variance
(low eigenvalue associated) contain relevant information for
classiﬁcation.
B. Similarity rules
The most similar ﬂow to a given one can be found as the
one which maximizes a similarity functional. The proposed
parametric deﬁnition of the similarity functional for a pair
of ﬂows is the following:
F = |NIP − 1| +
1
dp1 + k1
+
1
dp2 + k1
+
1
dt + k2
(3)
where NIP is the number of coincident IPs between the
two ﬂows, which is at least 1 (Recall that at least one
coincident IP is assumed for ﬂows pairing), dp1 and dp2
are the 1-norm distances between ports (ordered according
to the coincident IP), measured in tens of ports, dt is the
1-norm distance between time stamps at the beginning of
the ﬂow (ﬁrst packet), measured in seconds, and k1 and k2
are the functional parameters.
The deﬁnition of the functional in Eq. (3) answers to
the behavior of typical network protocols. Thus, servers
typically use one or a reduced number of ports to accept
service requests. Also, the Operating Systems in the clients
typically use consecutive dynamic port numbers for the con-
secutive connections established. For example, this would be
the behavior of a web client when connecting to a number
of web pages. In particular, if these pages are hosted in the
same server, the ﬂows share the same two IPs and close
ports. Finally, related ﬂows should be close in time. Eq. (3)
has been designed so that close ports and time stamps have
a signiﬁcant impact on the functional but it is not so much
penalized by large distances. For this, 1-norm distances
62
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

10
−1 10
0
10
1
10
2
10
3
10
4
10
−1
10
0
10
1
10
2
10
3
10
4
97.5
98
98.5
99
99.5
100
k2
k1
% Accuracy
Figure 3.
Parameters ﬁtting for the similarity functional using the
calibration data. Parameters k1 and k2 take values between 0.1 and 10.000
and are presented in a logarithmic scale
are considered instead of 2-norm distances, and they are
included in inverse form in the functional.
The deﬁnition of the functional is also convenient from
the practical point of view. The ﬁve variables (2 IPs, 2 ports
and beginning time stamp) considered in the functional are
obtained from the ﬁrst packet in a ﬂow. Therefore, one single
packet is enough for ﬂows pairing. Unlikely, distance-based
approaches with the feature vector in Table II can only be
applied once the ﬂows have ﬁnished.
The calibration data will be used to ﬁt the parameters of
the similarity functional. Figure 3 shows the result of the
calibration for k1 and k2 values between 0.1 and 10,000, in
logarithmic scale. According to the results, the parameters
are set to k1 = 1 and k2 = 1. It should be noted that the
results are quite stable for a large interval of the parameters.
In particular, the time closeness (k2) does not seem to be
relevant or even positive for certain values of k1.
VI. COMPARISON
This section is devoted to compare the performance of
distance-based approaches and similarity rules for ﬂows
pairing. The accuracy of each approach is deﬁned as the
percentage of ﬂow pairs belonging to the same class. Al-
though this work is focused on P2P classiﬁcation, the pairing
strategy can be used for trafﬁc classiﬁcation in general.
This accuracy for trafﬁc classiﬁcation and P2P trafﬁc iden-
tiﬁcation for the calibration and test data-sets is presented
in Figure 4. Notice that all the calibration decisions, such
as the normalization in Euclidean distance, the covariance
in the Mahalanobis distance, and the values of k1 and k2
parameters in the similarity rules, are set from the calibration
data and then applied to the test data.
TC
P2P/nP2P
nP2P
P2P
60
70
80
90
100
% Accuracy / % True Positives
 
 
Euclidean
Mahalanobis
Sim. Rules
(a) Calibration data
TC
P2P/nP2P
nP2P
P2P
60
70
80
90
100
% Accuracy / % True Positives
 
 
Euclidean
Mahalanobis
Sim. Rules
(b) Test data
Figure 4.
Comparison of strategies for ﬂows pairing in terms of the
coincidence of classes within a pair. Percentage of accuracy in trafﬁc
classiﬁcation (TC) and P2P trafﬁc identiﬁcation (P2P/nP2P) and percentage
of true positives in no P2P (nP2P) and P2P (P2P) trafﬁc. The percentage
of true positives of P2P trafﬁc in the calibration data is 13%.
Figure 4 shows that the similarity rules outperform the
other two approaches, being the Mahalanobis distance the
worst choice. Figure 5 shows the ﬁrst 30 eigenvalues of the
covariance matrix in the normalized calibration data. The
ﬁrst four eigenvalues contain more than the 50% of the
variability within the data, which evidences the collinearity
of the variables considered in the feature vectors (Table II).
The Mahalanobis distance normalizes the weights of the
eigenvectors in the distance. This is negatively affecting the
performance, showing that the eigenvectors of highest eigen-
value associated contain the relevant similarity information
for classiﬁcation. This is also convenient from the practical
point of view, since it means that the useful similarity
information is manifesting in a high number of variables.
This result is coherent with those in [11]. In particular, the
similarity information useful for classiﬁcation is manifesting
in the ﬁve variables considered in the similarity rules, which
yield the best performance. This is especially convenient
considering that a ﬂow can be paired from the ﬁrst packet
using the similarity rules.
Finally, a comparison of the mean time between pairs
has been performed for Euclidean-based pairs and similarity
rules pairs. A t-test showed that this mean time is lower for
63
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

0
5
10
15
20
25
30
0
2
4
6
8
10
12
14
Eigenvalues
Figure 5.
First 10 eigenvalues of the covariance matrix in the calibration
data.
the similarity rules pairs (p-value < 1−12) for both calibra-
tion and test data-sets. Pairs of ﬂows with less difference in
time are expected to be more reliable.
VII. CONCLUSION
This paper is devoted to introduce and compare different
strategies for trafﬁc ﬂows pairing based on similarity mea-
sures. This strategy is used for fast P2P trafﬁc classiﬁcation
in network monitoring, although it can be applied to trafﬁc
classiﬁcation in general.
According to the results presented, ﬂows pairing can be
effectively performed using only ﬁve parameters for each
ﬂow: the IPs and port numbers and the beginning time
stamp. These ﬁve parameters are combined in what has been
named similarity rule. The pairing based on similarity rules
outperforms the application of other traditional distances,
such as the Euclidean distance, in several ways:
• The parameters in the similarity rule are available from
the ﬁrst packet in a ﬂow, so that a ﬂow can be paired
only with the information in the ﬁrst packet. Distance-
based pairing needs the completeness of the ﬂows.
• Similarity rules are faster to compute than distance-
based pairing, since only 5 parameters are used. Also,
they require less storage space.
• Classiﬁcation based on similarity rules outperforms
classiﬁcation based on traditional distances.
• Similarity rules provide closer ﬂow pairs in time than
distance-based pairing.
ACKNOWLEDGMENT
Research in this paper is partially supported by the
Spanish Ministry of Science and Technology through grant
TEC2008-06663-C03-02.
REFERENCES
[1] A. Callado, C. Kamienski, G. Szabo, B.P. Gero, and J. Kelner,
“A Survey on Internet Trafﬁc Identiﬁcation,” IEEE Commu-
nications Surveys & Tutorials, vol. 11, n. 3, pp. 37-52, 2009.
[2] S. Sen and J. Wang, “Analyzing Peer-to-Peer TrafﬁcAcross
Large Networks,” IEEE/ACM Transactions on Networking,
vol. 12, n. 2, pp. 219-232, 2004.
[3] A. Madhukar and C. Williamson, ”A Longitudinal Study
of P2P Trafﬁc Classiﬁcation”, Proc. of Int. Symposium on
Modeling, Analysis and Simulation, pp. 179-188, 2006.
[4] R. Keralapura, A. Nucci, and C. Chuah, “A Novel Self-
Learning Architecture for P2P Trafﬁc Classiﬁcation in High
Speed Networks,” Computer Networks, vol. 54, pp. 1055-
1068, 2010.
[5] L. Xuan-min, P. Jiang, and Z. Ya-jian, ”A New P2P Trafﬁc
Identiﬁcation Model Based on Node Status”, In Int. Confer-
ence on Mangement and Service Science, pp. 1-4, 2010.
[6] X. Li and Y. Liu, “A P2P Network Trafﬁc Identiﬁcation Model
Based on Heuristic Rules,”. Int. Conference on Computer
Application and System Modeling, vol. 5, pp. 177-179, 2010.
[7] W. JinSong, Z. Yan, W. Qing, and W. Gong, “Connection
Pattern-based P2P Application Identiﬁcation Characteristic,”
Proc. of Int. Conference on Network and Parallel Computing
Workshops, pp. 437-441, 2007.
[8] M. Soysal and E.G. Schmidt, “Machine Learning Algo-
rithms for Accurate Flow-Based Network Trafﬁc Classiﬁca-
tion: Evaluation and Comparison,” Performance Evaluation,
vol. 67, n. 6, pp. 451-467, 2010.
[9] L. Jun, Z. Shunyi, L. Yanqing, and Z. Zailong, “Internet trafﬁc
classiﬁcation using machine learning,” Second International
Conference on Communications and Networking in China
(CHINACOM’07), pp 239-243, 2007.
[10] Y. Lim, H. Kim, J. Jeong, C. Kim, T.T. Kwon, and Y. Choi,
“Internet trafﬁc classiﬁcation demystiﬁed: on the sources of
the discriminative power,” Proceedings of the 6th Interna-
tional Conference On Emerging Networking Experiments And
Technologies (CoNEXT’10), 2010.
[11] F.J. Salcedo-Campos, J.E. D´ıaz-Verdejo, and P. Garc´ıa-
Teodoro, ”Multiple Vector Classiﬁcation for P2P Trafﬁc Iden-
tiﬁcation”, In Proc. of Int. Conference on Data Communica-
tions and Networking (DCNET), 2011.
[12] OpenDPI, 2011. Available at http://www.opendpi.org
[13] F. Lindgren, B. Hansen, W. Karcher, M. S. ostr om, and
L. Eriksson, “Model validation by permutation tests: Applica-
tions to variable selection,” Journal of Chemometrics, vol. 10,
pp. 521–532, 1996.
[14] S. Wiklund, D. Nilsson, L. Eriksson, M. S. ostr om, S. Wold,
and K. Faber, “A randomization test for pls component
selection,” Journal of Chemometrics, vol. 21, pp. 427–439,
2007.
64
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-173-1
AP2PS 2011 : The Third International Conference on Advances in P2P Systems

