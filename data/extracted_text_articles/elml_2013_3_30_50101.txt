AmI-RIA: Real-Time Teacher Assistance Tool for an Ambient Intelligence 
Classroom 
Georgios 
Mathioudakis1 
Asterios 
Leonidis1 
Maria 
Korozi1 
George 
Margetis1 
Stavroula
Ntoa1 
Margherita 
Antona1 
Constantine 
Stephanidis1,2 
1 Institute of Computer Science, 
Foundation of Research and Technology – Hellas (FORTH) 
Heraklion, GR-70013, Greece 
2 Department of Computer Science, University of Crete 
{gmathiou, leonidis, korozi, margetis, stant, antona, cs} @ ics.forth.gr 
 
 
Abstract— This paper discusses a learner-centric approach 
towards supporting instructors on improving the learning 
process in ambient educational environments. The proposed 
system introduces an intelligent multi-agent infrastructure that 
monitors unobtrusively the students’ activities and notifies the 
teacher, in real-time, about potential learning weaknesses and 
pitfalls that need to be addressed. For that to be achieved 
several applications have been developed: (i) a real-time 
classroom activity visualizer, (ii) a behavioral reasoner that 
aims to identify common behaviors by analyzing classroom 
statistics records, and (iii) various mini-tools like the classroom 
attendance record, the schedule manager, etc. Following the 
system’s description, findings of the preliminary expert-based 
evaluation are presented and future extensions are proposed.  
Keywords- ambient intelligence; education; smart classroom; 
teacher assistance; student monitoring. 
I. 
 INTRODUCTION 
Ambient intelligence (AmI) is an emerging technological 
paradigm that defines sensitive digital environments that 
monitor their surroundings through pervasive sensorial 
networks and automatically adapt (i.e., AI) to facilitate daily 
activities [1], [2]. AmI initially benefited mainstream areas 
such as home and office automation. During the past few 
years remarkable efforts have been made towards applying 
AmI in a variety of domains such as education, health, etc.  
In a “Smart Classroom”, typical classroom activities are 
enhanced with the use of pervasive and mobile computing, 
artificial intelligence, multimedia content and agent-based 
software [3]. Traditional artifacts like the desks and 
whiteboards are replaced by technologically enhanced 
equivalents aiming to support the educational process. The 
most prevalent realizations of the Smart Classroom paradigm 
include applications for automatic adaptation of the 
classroom environment according to the context of use [4], 
automatic capturing of lectures and teacher’s notes [5], 
enhancement of the learner’s access to information and 
personalization of the classroom’s material [6] and finally, 
supporting collaboration among the participants in the 
classroom [7]. However, the majority of current research 
approaches address issues focusing on the learner’s 
activities, without much attention to the role of the teacher. 
Among others, teacher’s duties include: (i) implementation 
of a designated curriculum, (ii) maintenance of lesson plans, 
(iii) assignment of tasks and homework, (iv) monitoring of 
performance, and most importantly (v) assistance provision 
when necessary. In general, curriculum activities outweigh 
monitoring and assistance tasks, especially in crowded 
classrooms, thus an automated method of observing 
students’ behavior and identifying common problems is 
needed to enable effective and personalized tutoring [8]. 
Towards this end, a tool named AmI-RIA has been 
implemented, targeted to support the teacher in the context of 
a learner-centric ambient intelligence classroom. The AmI-
RIA system monitors and analyzes students’ activities in 
real-time so as to identify potential difficulties, either at a 
personal or at a classroom level, and notify the teacher 
accordingly (e.g., through the teacher's frontend application). 
The teacher can therefore concentrate on the lecture and rely 
on the system to monitor the classroom and prompt for an 
intervention only when necessary (e.g., a student is out of 
task or performed poorly in a quiz). In addition to real-time 
monitoring, AmI-RIA offers a performance analysis tool that 
provides extensive metrics of students’ progress (based on 
previously collected data) that the teacher can use to identify 
topics that require further studying or even adaptation of the 
teaching methodology. Finally, AmI-RIA integrates tools 
that automate common procedures like attendance record 
keeping, quiz assessment and preparation of lesson's 
curriculum. 
The rest of the paper is structured as follows: Section 2 
presents related work on student monitoring in real 
classrooms or e-learning environments, Section 3 provides a 
description of the AmI-RIA system design, Sections 4 and 5 
present system implementation details, Section 6 reports the 
evaluation results, and finally Section 7 summarizes the 
described 
work 
and 
highlights 
potential 
future 
enhancements.  
II. 
RELATED WORK 
The widespread use of ICT in learning environments has 
urged researchers to take advantage of the presence of 
technological equipment inside classrooms in order to 
enhance the learning and teaching process. Towards this 
objective, various intelligent systems that monitor students’ 
activities and report valuable insights to the teacher have 
37
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

been developed, aiming to enhance either real or virtual (i.e., 
e-learning environments) classrooms.  
A. Student monitoring in real classrooms 
Retina [9] aims to assist instructors that offer computer 
science courses to improve their curriculum by reporting the 
difficulties that students are facing during programming. To 
that aim, Retina collects information about students’ 
programming activities (e.g., compilation and run-time 
errors, time spent for each assignment, etc.) and generates 
informative reports for students (i.e., self-evaluation) and 
instructors, whereas live monitoring enables instructors to 
either address issues immediately during a lecture or adjust 
forthcoming assignments. In [10] a system that aims to 
improve programming courses is presented. It monitors 
students’ behavior within a learning environment on 
introductory programming (e.g., compilation errors, error 
messages, source code, etc.) in order to detect students’ 
frustration -a potential factor for disengagement- and notify 
instructors to intervene providing help.  
In [11] it is argued that teachers working in robotic 
classes have problems in keeping track of students’ 
activities. As they claim, the real challenge for the instructors 
is to know when and how to intervene. Thus, they propose a 
system that collects data from the robotic environment and 
inform the teacher about what students are doing and how 
they are progressing. The design of the system relies on the 
LeJOS programming platform for Lego Mindstorms, where 
two agent modules are used for the data collection, one 
embodied into the robot and the other deployed on the 
programming environment. 
MiGen [12] is a related intelligent environment designed 
to support students learning algebraic generalisations. The 
system aims to assist the teaching process by informing 
teachers 
of 
students’ 
progress, 
the 
appearance 
of 
misconceptions and disengaged students. To do so, MiGen 
visualizes the students’ progress based on their attainment of 
specific landmarks as they are working on mathematics 
generalisation tasks. 
The aforementioned systems can partially provide real-
time information to the instructor, however they have two 
major drawbacks: (i) they are targeted to specific contexts of 
use (e.g., programming course) and (ii) they offer rather poor 
user interfaces, in terms of usability, that hinder information 
extraction. 
B. Student monitoring in e-learning environments 
Similarly, 
various 
approaches 
exist 
that 
support 
instructors within e-learning environments through student 
monitoring. In [13] a web-based environment is proposed, 
capable of collecting students’ traces during interaction in 
order to visualize the virtual classroom and help teachers 
keep classroom control. Participants are represented by 
Chernoff faces, whose facial characteristics evolve over time 
according to their activities.  
In [14] the CourseVis tool is presented, which generates 
graphical representations of what is happening in the 
classroom (i.e., social, cognitive and behavioral aspects of 
the learners) by analyzing students’ activities data collected 
in a course management system (CMS).  
Likewise, [15] is an intelligent agent system that supports 
teachers in supervising learners in LAMS (Learning Activity 
Management System). It is capable of notifying the 
instructor for common problems about participation and 
contribution of students during their activities. However, for 
that to be achieved, the instructor is required to determine 
expectations for the attendance and contribution of the 
learners for each activity (e.g., typical execution time, 
contribution level on collaborative activities, expected score, 
etc.). Finally, a notification agent is used to deliver messages 
and information to the supervisor of the lesson and to the 
learners as well. 
The systems discussed above either lack intuitive user-
interfaces (i.e., Chernoff faces are a useful tool for indicating 
student 
inactivity, 
but 
in 
complex 
situations 
their 
expressiveness is limited) or they do not offer an effective 
real-time assessment method needed in such intelligent 
learning environments [16]. Thus, there is a clear need for a 
system that can: (i) be deployed in a real classroom, (ii) 
monitor unobtrusively the students, (iii) produce valuable 
insights about their behavior in real-time, and (iv) deliver 
them through an intuitive, yet rich, user interface to the 
teacher.     
III. 
SYSTEM DESIGN 
The teacher assistance tool proposed in this paper aims to 
inform the teacher about students’ activities and identify 
potential weaknesses by monitoring interaction and 
generating classroom-wide performance metrics. For that to 
be achieved, a distributed architecture (Figure 1) is 
introduced that consists of two major components: (i) an 
intelligent agent deployed on the students’ desks to monitor 
interaction named Desk Monitor, and (ii) an intuitive 
frontend application deployed at the teacher’s desk named 
the Teacher Assistant, that facilitates monitoring overview 
and 
simplifies 
classroom 
control 
(e.g., 
assignment 
submission, exam distribution, etc.). 
 
Figure 1.  AmI-RIA overall architecture 
Every Desk Monitor agent collects the monitoring traces 
that students generate when working on their desks and 
through a reasoning process draws conclusions about 
students’ behavior. Both the collected and the inferred 
knowledge is transmitted in real-time to the Teacher 
Assistant application, which is responsible to present them 
appropriately (e.g., highlight inactive students, prompt 
38
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

teacher action, etc.). Data exchange is performed through a 
generic services interoperability platform, named FAMINE 
(FORTH’s AMI Network Environment).  
A. Data Collection 
The proposed system is employed in a Smart Classroom 
[3] and is supported by the classroom’s backbone 
infrastructure 
named 
ClassMATE 
[17]. 
ClassMATE 
monitors the classroom environment and orchestrates its 
various artifacts (e.g., augmented school desks [18], 
interactive whiteboards, etc.). The augmented desk is an 
enhanced school desk, which uses computer vision 
technology in order to recognize books and book pages and 
provide physical and unobtrusive interaction without 
requiring any special device. The ClassMATE infrastructure 
in collaboration with the PUPIL framework [19] controls the 
augmented desks and the whiteboard (e.g., SMARTboard) 
and provides the required facilities to monitor the students’ 
interactions during the learning sessions.  
The activities of interest for the AmI-RIA system 
include: (i) login when a student sits on a desk, (ii) course 
book page fanning, (iii) launch of an exercise session, (iv) 
answer submission, (v) use of contextual help provided by 
the learning system and finally, (vi) browsing and sharing of 
multimedia galleries. These activities along with related data 
become available to the Desk Monitor agent by ClassMATE 
through a FaMINE-enabled bridge interface.  
B. Data Management and Reasoning 
Ontologies are widely accepted as a tool for modeling 
contextual information about pervasive applications [20], as 
they not only address the problem of data heterogeneity 
between applications and support data interconnection using 
external vocabularies, such as FOAF and Dublin Core 
metadata, but also enable knowledge inference using 
semantic reasoners whose rules are implemented by means 
of ontologies. 
AmI-RIA aims to exploit those features thus it makes 
extensive use of ontologies. An RDFS schema has been 
implemented that defines classes for the relevant entities 
(e.g., Teacher, Student, Book) and the activities (e.g., Open 
book, Start exercise) that can potentially take place in a 
classroom environment, while a set of taxonomies has been 
defined, based on RDFS properties, to associate classes and 
create activity hierarchies (e.g., Submit_Exercise isA 
Student_Act). Collected data are stored internally in the 
form of RDF triplet statements.  
The reasoning process of the AmI-RIA system is 
supported by the SemWeb library for .NET. SemWeb 
supports SPARQL queries for information retrieval over the 
data and incorporates the Euler engine, a popular backward 
chaining inference engine. The rules used by the Euler 
engine are written in external files using the Notation3 
syntax, an RDF syntax designed to be human friendly. Rule 
decoupling facilitates system maintenance and scalability as 
insertion of new rules or modification of existing rules can 
be done without affecting the core of the AmI-RIA system.  
IV. 
DESK MONITOR AGENTS 
The Desk Monitor agents constitute the core components 
of the AmI-RIA system, as they execute the inference rules 
over the collected interaction data to identify potential 
troublesome situations (e.g., inactive or off-task students, 
etc.). To that end, the agents make use of the developed 
taxonomies that describe such situations and through a goal-
driven method (i.e., backward chaining inference) try to 
confirm their existence based on contextual knowledge. The 
list of currently detected situations include: (i) off-task 
students, (ii) inactive students, (iii) students that face 
difficulties during exercise solving, (iv) students that face 
difficulties during exercise submission and (v) students that 
misuse the contextual-help of the learning system. 
A. Off-task 
According to Caroll’s Time-On-Task hypothesis [21], 
the longer students engage with the learning material, the 
more opportunities they have to learn. Therefore, if students 
spend a greater fraction of their time engaged in behaviors 
where learning is not the primary goal, they will spend less 
time on-task and as a result learn less. In [22] the authors 
argue that off-task behavior indeed has a negative impact on 
students’ performance. To identify off-task students, the 
system checks the material displayed on a student’s desk 
(e.g., the currently opened book, the opened pages, etc.) to 
determine if it is relevant to the topic discussed in the 
classroom based on the activity in hand.  
B. Inactivity 
During classroom activities, especially exercise solving, 
it is common for students to start working on an exercise 
and after a while give up because they get bored or 
distracted. Inactivity is defined as a type of off-task 
behavior where the student does not interact with the 
learning object at hand. According to [22], inactivity 
indicates that a student is disengaged with a certain task and 
can be used as a quite accurate performance predictor. AmI-
RIA exploits the typical learning time describing the amount 
of time that a student is expected to work with or through a 
learning object [23], to specify if and when a student’s 
interaction is taking too long to be executed. For that to be 
achieved, AmI-RIA gets notified by ClassMATE about the 
actions that a student performed when interacting with a 
learning object (e.g., an exercise, a text passage, etc.). 
C. Problems during an Exercise 
The PUPIL framework offers personalized tutoring in 
the form of contextual help (i.e., hints) for each question of 
an exercise to help students find the right answer, where the 
last hint provides the maximum amount of help that can be 
provided. AmI-RIA monitors the amount of help asked and 
the selection made afterwards to calculate student’s 
performance. In case a student uses the maximum amount of 
help, but still does not answer correctly, then the system 
infers that the student has difficulties regarding this question 
and the concept it refers to. 
39
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

D.  Problems on Exercise Completion 
Identifying whether a student faces difficulties during 
exercise solving is quite challenging, since a single pass/fail 
indicator does not always reveal the actual progress of a 
learner on a specific topic. To this end, instead of 
generalizing conclusions based merely on the score of the 
exercise in hand, the student’s previous performance on 
relevant topics/similar exercises is taken into consideration. 
Thus, detecting sparse declines of a learner’s statistics does 
not necessarily indicate a weak student. 
E. Misusing the Learning System 
Sometimes students interact with exercises according to 
a set of non-learning-oriented strategies described in [22] 
known as “gaming the system”. Such strategies involve 
behaviors aimed at systematically misuse the help provided 
by the system in order to advance in exercise instead of 
actually making use of the material of the intermediate 
hints. A set of rules has been created to track students who 
repeatedly ask for help within a small time frame until they 
get the maximum one. 
 
Figure 2. The Teacher Assistant User Interface 
V. 
TEACHER ASSISTANT 
As aforementioned, AmI-RIA offers an intuitive 
frontend application (Figure 2) deployed at the teacher’s 
computer (or portable tablet device) named Teacher 
Assistant, through which the instructor can monitor at real-
time via live feed the activities that take place in the 
classroom and identify occurring issues. For that to be 
achieved, every Desk Monitor Agent propagates its 
inferences through the classroom’s middleware to the 
Teacher Assistant application to present them accordingly. 
In terms of design, Teacher Assistant adheres to the 
natural mapping rule [24] that leads to immediate 
understanding because it takes advantage of physical 
analogies. As such, each student present in the classroom is 
represented by a Student Card, non-occupied desks are 
represented by semi-transparent empty cards, whereas the 
layout resembles the layout of the physical desks. As a 
result, the teacher can easily locate a student in the 
classroom through the virtual class map or access the 
attendance record to see the absent students. 
A. The Student Card 
The Student Card contains both personal information, 
such as the name and the profile picture, and information 
regarding the current activities and status of the student. 
During the course the student might be engaged with 
various activities such as reading a passage from a book, 
solving an exercise, browsing a multimedia gallery, etc. 
Providing specific details on such classroom tasks would 
allow the teacher to be constantly informed about the 
students’ attention levels and potential learning difficulties. 
To this end, each Student Card adjusts to represent the 
learner’s status at any given moment. For instance, when a 
student is reading, the card displays the book title and the 
respective page numbers; during an exercise, additional 
information is displayed regarding the topic, difficulty and 
the student’s progress, finally when a student launches a 
multimedia gallery, a small set of relevant keywords is 
displayed on the card.  
However, during a lecture the students might lose 
interest and deviate from the teacher’s suggestions. This 
kind of information could ideally prompt the teacher to 
investigate the reasons of such attention lapses and try to 
maintain the student’s interest. For that purpose, the Student 
Cards are enriched with visual cues (e.g., different border 
color of the cards, intuitive icons) to mark on-task, off-task 
and inactive behaviors. Finally, since the implemented 
system targets large and crowded classrooms, the visual 
information may become too large to be handled easily. To 
overcome this difficulty, a filtering mechanism that allows 
the teacher to focus on specific student groups is 
incorporated. 
B. Assesment 
Exercises are considered to be a key aspect of the 
learning process in a classroom as through performance 
monitoring potential learning gaps can be revealed and the 
domains where the teacher should focus on are highlighted. 
AmI-RIA ensures that the teacher will be able to watch 
students’ progress during exercise sessions by adjusting the 
student card appropriately to display the exercise’s name, 
the related topic and the student’s current score, whereas 
more detailed information about student’s performance is 
available through two special-purposed windows. 
The first one presents in more detail aspects of the 
exercise at hand; in particular, (i) the type (e.g., multiple 
choice quiz, fill-in the gap, etc.), (ii) the difficulty level 
(e.g., easy, medium, hard), and (iii) the typical learning time 
as defined in the LOM metadata. The second window 
(Figure 3) presents a complete log of student’s actions 
regarding that exercise: (i) the number of answers given, (ii) 
the number of hints used per question, (iii) the current score, 
(iv) the ratio of correct and wrong answers, and optionally 
(v) a problem indicator as generated by the Desk Monitor.  
40
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

 
Figure 3. The exercise progress window 
In addition to exercises, tests are also integral part of the 
learning process. Tests are a type of exercise where every 
student is obliged to answer and no help is provided. As 
soon as a test is initiated from the Teacher Assistant 
application, it automatically launches on every desk while 
the use of any other application [19] is prohibited (e.g., 
Thesaurus, Multimedia, etc.). During tests, the teacher can 
monitor students’ progress as with common exercises and is 
able to request its submission at any time. At that point, any 
tests that have not been submitted yet are automatically 
collected and a summarizing report is presented with an 
average score for the entire classroom and a precise score 
for each student.  
C. The Classroom Monitor 
Individual statistics are automatically generated for each 
student by the respective Desk Monitor agent; however, 
accumulated statistics for the entire classroom are 
invaluable tools for teachers as through them behavioral 
patterns can be identified; an activity is considered to be a 
pattern if it is observed in a certain number of students in 
the classroom. For instance, if 85% of the students faced 
difficulties and performed poorly in an exercise, then either 
that particular exercise is too difficult or the teacher has to 
adapt the class’ schedule to further elaborate on the related 
concepts. Similarly, if more that 80% of the students are off-
task at the same time, then either a break might be helpful or 
the teacher should attract their attention and enhance their 
motivation. In any case, when AmI-RIA identifies a pattern, 
a special alert is generated to notify the teacher. 
D. Statistics 
 The information gathered about the students’ activities 
is used to build a rich history record, which combined with 
the defined RDFS schema constitutes a vast source of 
semantic information. This information is exploited to 
generate statistics for the progress and performance of the 
students during short or long periods of time. Based on 
these statistics the teacher detects the topics that need to be 
revisited or adapted and identifies the thematic areas that 
seemed to have troubled each student.  
The statistics component offers two alternative views, 
one for the classroom and another one for individuals 
(Figure 4). Both provide information about performance, 
topics with the highest/lowest scores and rankings on 
students and lessons. The generated statistics can be printed 
and handed-out to parents as an unofficial progress report 
for students.  
 
Figure 4. The individual statistics component 
VI. 
EVALUATION 
As a first step towards the evaluation of the system, an 
expert-based heuristic evaluation was conducted in order to 
identify usability errors. The heuristic evaluation requires a 
small set of evaluators (3-5) to examine the interface and 
judge its compliance with a set of recognized usability 
principles. An observer notes down the issues and creates an 
aggregated list which is delivered at the end to the 
evaluators in order to provide severity ratings on each issue.  
Four evaluators took part in the evaluation of Ami-RIA 
and identified 22 usability problems, out of which 11 were 
marked as severe (rated above 2.5 on a 0-4 scale). The 
identified usability errors were related mostly to the 
flexibility in access to the several components (e.g., the 
attendance 
access 
button) 
and 
the 
perceived 
user 
friendliness when operated on touch-enabled devices (e.g., 
the sidebar option buttons were difficult to press due to their 
size). Additionally, some issues were identified regarding 
the aesthetic design and accessibility of the user-interface 
such as the insufficient color contrast between the main 
visual components (e.g., the main menu buttons and the 
footer’s information). The released prototype of AmI-RIA 
effectively addresses all the identified errors.  
VII. CONCLUSIONS AND FUTURE WORK 
This paper presents AmI-RIA, a real-time system that 
aims to assist teachers in the context of an intelligent 
classroom by exploiting the available ambient technology 
from their perspective. The proposed system monitors the 
students’ activities in an unobtrusive way and generates 
valuable insights in order to assist teachers keep track of the 
classroom’s performance. Thereby, the teacher is supplied 
with the needed information to decide when and how to 
provide help or adapt the teaching strategy. For that to be 
achieved a statistics component performs queries across the 
entire history record and retrieves information regarding the 
students’ progress and performance. Furthermore, a set of 
tools have been developed and deployed on the teacher’s 
desk, targeted to enhance typical procedures that can be 
found in conventional classrooms (e.g. class attendance 
record, tasks assignment, etc.). 
41
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

The next step of this work will be to conduct a full-scale 
user-based evaluation in a real classroom. The evaluation is 
planned to include 20 different teachers and their students 
[25], where typical classroom activities will be observed to: 
(i) 
assess 
whether 
AmI-RIA 
recognizes 
problems 
successfully, and (ii) determine how instructors use the 
system to identify problems and provide assistance. The 
evaluation’s findings are foreseen to extend the currently 
implemented rule set and improve the user interface of the 
teacher’s frontend application in terms of usability.  
Additionally, some relevant topics are being investigated 
for future upgrades. A great addition to the system would be 
to make the students’ desks aware about the inferences 
produced during the reasoning process. This way, the 
students will be informed about their performance during the 
various learning activities and will feel more comfortable 
with the monitoring process. The feedback provided could be 
used by the students to adjust their activities accordingly, 
while communication between the teacher and the students 
could be also enhanced with an application that blends 
seamlessly with student activities application. For example, 
the teacher using the application could reward some students 
for achieving great scores on a task or provide extra material 
to those who had problems in a topic. Finally, an important 
extension to the system would be the development of a 
graphical tool that will facilitate the intuitive modification of 
the rules used to identify students’ states or create new ones.  
REFERENCES 
[1]  J. C. Augusto and P. J. McCullagh, "Ambient Intelligence: 
Concepts and applications.," Comput. Sci. Inf. Syst., vol. 4, 
no. 1, pp. 1-27, 2007.  
[2]  D. J. Cook, J. C. Augusto and V. R. Jakkula, "Ambient 
intelligence: Technologies, applications, and opportunities.," 
Pervasive and Mobile Computing, vol. 5, no. 4, pp. 277-298, 
2009.  
[3]  M. Antona, A. Leonidis, G. Margetis, M. Korozi, S. Ntoa and 
C. Stephanidis, "A Student-Centric Intelligent Classroom.," in 
AmI, 2011.  
[4]  R. Ramadan, H. Hagras, M. Nawito, A. Elfaham and B. El-
Desouky, "The Intelligent Classroom: Towards an 
Educational Ambient Intelligence Testbed.," in Intelligent 
Environments, 2010.  
[5]  Y. Shi, W. Xie, G. Xu, R. Shi, E. Chen, Y. Mao and F. Liu, 
"The smart classroom: merging technologies for seamless 
tele-education," IEEE Pervasive Computing, vol. 2, no. 2, pp. 
47-55, 2003.  
[6]  G. Margetis, A. Leonidis, M. Antona and C. Stephanidis, 
"Towards Ambient Intelligence in the Classroom.," in HCI 
(8), 2011.  
[7]  L.-K. Soh, N. Khandaker and H. Jiang, "I-MINDS: A 
Multiagent System for Intelligent Computer- Supported 
Collaborative Learning and Classroom Management.," I. J. 
Artificial Intelligence in Education, vol. 18, no. 2, pp. 119-
151, 2008.  
[8]  H. McLellan, Situated learning perspectives, Educational 
Technology, 1996.  
[9]  C. Murphy, G. E. Kaiser, K. Loveland and S. Hasan, "Retina: 
helping students and instructors based on observed 
programming activities.," in SIGCSE, 2009.  
[10] M. M. T. Rodrigo and R. S. J. de Baker, "Coarse-grained 
detection of student frustration in an introductory 
programming course.," in ICER, 2009.  
[11] I. Jormanainen, Y. Zhang, E. Sutinen and Kinshuk, "Agency 
Architecture for Teacher Intervention in Robotics Classes.," 
in ICALT, 2006.  
[12] D. Pearce-Lazard, A. Poulovassilis and E. Geraniou, "The 
Design of Teacher Assistance Tools in an Exploratory 
Learning Environment for Mathematics Generalisation.," in 
EC-TEL, 2010.  
[13] L. France, J.-M. Heraud, J.-C. Marty, T. Carron and J. Heili, 
"Monitoring Virtual Classroom: Visualization Techniques to 
Observe Student Activities in an e-Learning System.," in 
ICALT, 2006.  
[14] R. Mazza and V. Dimitrova, "CourseVis: A graphical student 
monitoring tool for supporting instructors in web-based 
distance courses.," International Journal of Man-Machine 
Studies, vol. 65, no. 2, pp. 125-139, 2007.  
[15] T. Chronopoulos and I. Hatzilygeroudis, "An Intelligent 
System for Monitoring and Supervising Lessons in LAMS.," 
in INCoS, 2010.  
[16] S. Kalyuga, "Rapid cognitive assessment of learners' 
knowledge structures," Learning and Instruction, vol. 16, no. 
1, pp. 1-11, 2006.  
[17] A. Leonidis, G. Margetis, M. Antona and C. Stephanidis, 
"ClassMATE: Enabling Ambient Intelligence in the 
Classroom," World Academy of Science, Engineering and 
Technology, vol. 66, pp. 594-598, 2010.  
[18] M. Antona, G. Margetis, S. Ntoa, A. Leonidis, M. Korozi, G. 
Paparoulis and C. Stephanidis, "Ambient Intelligence in the 
classroom: an augmented school desk," in Proceedings of the 
2010 AHFE International Conference (3rd International 
Conference on Applied Human Factors and Ergonomics), 
Miami, Florida, USA, 2010.  
[19] M. Korozi, S. Ntoa, M. Antona, A. Leonidis and C. 
Stephanidis, "Towards building pervasive UIs for the 
intelligent classroom: the PUPIL approach," in Proceedings 
of the International Working Conference on Advanced Visual 
Interfaces, 2012.  
[20] R. Krummenacher and T. Strang, "Ontology-based context 
modeling," in Proceedings Third Workshop on Context-
Aware Proactive Systems (CAPS 2007)(June 2007), 2007.  
[21] J. Carroll, "A model of school learning," The Teachers 
College Record, vol. 64, no. 8, pp. 723-723, 1963.  
[22] R. S. Baker, A. T. Corbett, K. R. Koedinger and A. Z. 
Wagner, "Off-task behavior in the cognitive tutor classroom: 
when students" game the system"," Proceedings of the 
SIGCHI conference on Human factors in computing systems, 
pp. 383-390, 2004.  
[23] {. T. S. C. o. t. IEEE}, "Draft standard for learning 
technology - Learning Object Metadata," Institute of 
Electrical and Electronics Engineers, Inc., New York, 2002. 
[24] D. A. Norman, The design of everyday things, [New York]: 
Basic Books, 2002.  
[25] J. Nielsen, "Quantitative studies: How many users to test," 
Alertbox, June, vol. 26, p. 2006, 2006.  
42
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-253-0
eLmL 2013 : The Fifth International Conference on Mobile, Hybrid, and On-line Learning

