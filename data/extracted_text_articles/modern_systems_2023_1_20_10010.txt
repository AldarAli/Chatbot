Evaluation of different Systems Engineering Approaches as Solutions to Cross-
Lifecycle Traceability Problems in Product Development: A  Survey
Sina Hajiaghapour 
Department of Product Safety and Quality 
University of Wuppertal 
Wuppertal, Germany 
e-mail: hajiaghapour@uni-wuppertal.de 
Nadine Schlueter 
Department of Product Safety and Quality 
University of Wuppertal 
Wuppertal, Germany 
e-mail: Schlueter@uni-wuppertal.de
 
 
Abstract— Requirements traceability is an essential Systems 
Engineering (SE) task that is critical in areas such as software 
development, product development, and safety engineering. It 
involves linking requirements to all system elements, including 
test cases, to improve test coverage, product quality, and 
communication among stakeholders. Due to limitations in SE 
approaches underlying traceability methods, this area faces 
challenges such as an imbalance between cost and quality or 
insufficient system understanding for different disciplines. In 
this paper, we examine several universal SE approaches for 
their efficiency in addressing traceability issues in product 
development. Through a literature review, we identified 
methods based on these approaches and evaluated their 
effectiveness in solving traceability problems. This survey 
demonstrates the potential of Generic Systems Engineering 
(GSE) based methods to address identified gaps by creating a 
universal system understanding. However, the modelling 
method and procedure concept used in these approaches 
requires the inclusion of test processes and the associated 
information for system testing. 
Keywords-System Engineering; Requirement Engineering; 
Traceability; System Test; Product Development. 
I. 
 INTRODUCTION  
According to the definition of INCOSE (International 
Council on Systems Engineering), System Engineering (SE) 
is an approach that aims to enable system designers to capture 
and meet customer and stakeholder requirements for the 
system throughout its life cycle, through better traceability of 
issues and more efficient coordination in an interdisciplinary 
team [1]. This definition makes it clear that capturing, 
structuring, and implementing requirements for the system 
and its elements are also part of SE. Thus, "Requirement 
Engineering (RE)" is referred to as a subdiscipline of SE 
[1][2]. RE includes all activities necessary to elicit, analyze, 
and document (product and project) requirements. In the RE 
process, requirements are not only developed but also 
iteratively managed [3]. Thus, this process can be divided into 
two parts, i.e., Requirement Development and Requirement 
Management (RM) [4][5]. 
System requirements are constantly changing due to 
changes in the needs of system stakeholders (including 
customers), changes in the environment, changes in the 
business, changes in laws and regulations, etc. [4][6]. RM is 
primarily the process of controlling these "changes" to system 
requirements. In this respect, however, RM is facing new 
challenges. The current high level of globalization is closing 
to Enterprise Networks (EN) with multidisciplinary teams. A 
short reaction time to the changes and thus the fulfillment of 
customer requirements needs a more complex cooperation 
between the different internal departments as well as external 
companies [4][7]. Minimization of failure, adherence to 
schedules, and high product quality require not only a 
common understanding of the system design, but also 
information about the required quality standards and the 
current data situation among all team members [8]. 
Nevertheless, this cannot be realized without the creation of 
efficient interdepartmental data exchange mechanisms and 
communication capabilities or interfaces for recording 
information. An essential necessity is the capability to trace 
requirements in both retrospective manners (such as 
identifying the source of a requirement) and prospective 
manners (like associating test cases). In other words, 
traceability in a system should include the relationship 
between requirement and all system elements including 
components, processes, functions, and test cases [2][4].  
Finally, in order to capture and map responsibilities for 
various system elements in the EN, the requirements and the 
above mentioned system artifacts should be linked to the 
responsible persons [9][10].  
As mentioned above, requirements traceability should 
also be used to link requirements to test specifications and 
methods. It is important to know which requirement is 
covered by which test or test cases. In addition to mentioning 
important benefits of merging requirements and test cases, 
Kukkanen et al. have illustrated the important relationships 
between the processes of RE and System Testing (ST) in their 
work [11]. In [12]-[15], further advantages of linking 
requirements and testing are mentioned.  
A. Traceability Challenges and Problems  
Requirements traceability can be influenced by several 
factors. Ramesh identifies three factors that affect the 
implementation of requirements traceability in a company, 
namely the environment (technologies), the organization 
(business strategies), and the context of system development 
(policies, people) [16]. These three factors can in turn be 
divided into two coarser categories of methods and (tracing) 
tools [17][18].  
Appropriate and practical methods are needed to track 
requirements, including their linkage to test methods, which 
at the same time allow a cost-quality trade-off [19]. Graham 
7
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

has also identified the absence of the physical end system 
prior to the development and planning of the test methods as 
one of the seven problems in linking requirements and testing 
[20]. The development process of complex meta-systems or 
more specifically “system of systems (SoS)” consisting of 
various components, is an interplay of various specialist 
disciplines. Here, in addition to bringing these disciplines 
together and linking the respective experts for the purpose of 
smooth communication and information transfer, methods 
and measures are also required to master the complexity of 
the multi-structural design of the overall system for effective 
uniform system understanding among the stakeholders [21]. 
However, such standardized procedures with a trade-off 
between cost (including time) and quality for analyzing 
requirements and translating them into a clear model do not 
yet seem to be widely used in industry [14][22]-[26].  
Finally, the appropriate model-based method should be 
implemented in a computer-based tool, namely tracing tool, 
which plays an important role in the context of traceability 
[27]-[29]. A lack of suitable tools also leads to a mismatch 
between requirements and customer needs, which affects 
customer satisfaction 
with the 
final product 
[30]. 
Nevertheless, the efficiency of traceability and thus RM in 
the state of the art is limited due to lack of tool support 
[11][12][16][24][25][31]-[37]. The willingness of corporate 
employees to learn and use the tool depends heavily on the 
degree to which the tool is user-friendly [17]. This can be a 
particular barrier for Small and medium-sized enterprises 
(SMEs) that have limited infrastructure for using complex 
tools and organizing the necessary training [38]-[43]. 
The above factors show the need for a method that 
improves system understanding through an appropriate 
metamodel in an efficient and cross-lifecycle manner, as well 
as a smooth flow of information in EN through a powerful 
tool. This is exactly the main goal of SE mentioned earlier in 
this paper, where the system model should not only enable an 
interdisciplinary 
product 
view, 
but 
also 
support 
communication and cooperation between users and provide a 
link between different system data [10]. By linking the 
system model to a procedure concept, SE is also intended to 
represent the temporally logical linking of problem-solving 
steps to solve a complex task. Nevertheless, due to limitations 
in SE approaches underlying traceability methods, the 
identified challenges remain unsolved. The main problem is 
the loss of the original idea of SE over time, i.e., the merging 
of different disciplines due to the increasing focus on specific 
areas instead of universality of methods [44]. This can 
degrade communication in a multidisciplinary team, for 
example between requirements and test engineers, which is 
one of the important problems of traceability. In addition to 
briefly presenting various SE approaches, the following part 
introduces some of these constraints. 
B. Different SE Approaches  
The approaches developed for SE can be categorized as 
either universal or specific [45]. The specific SE approaches, 
e.g., for software engineering focus on their own disciplines 
and not on the universal transdisciplinary use that should 
characterise SE. This makes it difficult to communicate 
between disciplines and to identify commonalities in their 
methods. The methodological differentiation of such 
approaches hinders transferability between different product 
domains and slows down the product development process 
[46]-[48]. However, this is of great importance for the 
development process of meta-systems, which represent a 
multitude of different technical subsystems from the various 
domains, as mentioned above. 
The universal approaches can be divided into System of 
Systems 
Engineering 
(SoSE), 
Model-Based 
System 
Engineering (MBSE) and Generic System Engineering 
(GSE) [49]. Various descriptions of SoSE or SoS have been 
produced in the literature, but to date there is no universally 
accepted definition [50]-[54]. In the absence of a general 
system definition, the domains, relationships and attributes 
cannot be represented in a uniform way, which hinders the 
creation of a unified system model [45]. 
INCOSE defines Model-Based Systems Engineering 
(MBSE) as a "formalized application of modelling to support 
system requirements, design, analysis, verification, and 
validation that begins in the conceptual phase and extends 
throughout development and later life cycle phases“ [55]. 
Within the context of MBSE, numerous modeling languages 
are utilized. In practice, the models based on the "Unified 
Modeling 
Language 
(UML)" 
and 
"System 
Markup/Modelling Language (SysML)" have become the 
most popular in the MBSE application. These are capable of 
representing the relationships between system elements and 
requirements, but exhibit a high level of abstraction, 
primarily stemming from their limited graphical notation 
[56]. Moreover, this approach lacks interaction between the 
system model and the procedure model at each step of the 
development process. This is of course needed for updating 
the system model as well as for traceability of elements over 
time, as dynamic environmental factors need to be taken into 
account [2][57]. According to Morkevicius et al. many 
methods in the context of MBSE remain too abstract for 
solving concrete real-world problems because they do not 
provide a framework for organizing the modelling work [58]. 
Such methods show a mismatch between the model created 
and the expectations of customers, as understanding the 
system is difficult for different stakeholders due to the high 
model complexity [59]. Another limitation of MBSE 
methodologies is finding a common language for defining 
stakeholder needs and bringing together a wide range of 
stakeholder views into a single model [60][61]. In addition, 
INCOSE cites inherent difficulties in integrating models 
across organizational, lifecycle and other boundaries, and 
limitation of model/data sharing capabilities within 
modelling tools as other problems of MBSE [55][60][62]. 
Moreover, the high implementation costs of MBSE 
approaches compared to traditional SE approaches and the 
still limited life-cycle management tools for managing 
MBSE models [59][62]-[65] can be particularly challenging 
for SMEs. In the case of highly complex technical systems, 
the lack of a transdisciplinary focus and the difficulties in 
managing a large amount of generated data are further 
problems of the MBSE approach [2][66].  
8
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

"Generic System Engineering (GSE)" developed by 
Winzer and Sitte [67] is considered a state-of-the-art and 
proven approach that satisfies the new dimensions of 
complexity, thus reviving the lost original universal approach 
of SE [45][46][49][57]. GSE proposes a common thinking 
model to derive a unified system model. For this purpose, it 
consists of a standardized approach divided into the 
"analysis" (problem identification and system analysis), the 
"target definition" (problem localization), and the "design" 
(recommendations), which can be problem-specific [46]. 
GSE standardizes SE in both system modeling and approach. 
GSE is thus a general problem-solving framework that 
provides different modules and a system model to ensure 
adaptation to a variety of specific problems [2][46][67]. One 
major advantage of the GSE approach over MBSE and SoSE 
is the clearly defined interface to project management 
[44][68]. This can contribute to a fast response to changes in 
system design or properties.  
There are many different methods for building the system 
model for the technical systems and collaborative SoS in 
GSE, including Demand Compliant Design (DeCoDe), 
which provides a technique for system definition, 
description, modeling, and progressive refinement. The four 
views of the DeCoDe product model,  i.e., requirement, 
component, function, process, are related to each other via a 
matrix to describe technical product systems [69]. An 
"enhanced 
Demand 
Compliant 
Design" 
(e-DeCoDe) 
integrates the social level of the SoS into the model through 
a fifth person view and thus enables the capture and mapping 
of responsibilities for different system elements in the EN 
[9][10]. All e-DeCoDe elements can also be represented 
hierarchically, with the requirements view. The unified 
matrix representation of the system in e-DeCoDe model can 
improve the understanding of the system for different 
disciplines by representing the system and the interaction 
between its elements in a simple but comprehensive manner. 
The low level of complication of the modeling method can be 
a promising factor in reducing implementation costs, as less 
training is required. Compared to the other modeling 
approaches, e-DeCoDe provides a clear delineation between 
system and environment and methodical handling of 
requirements in EN [44]. 
After introducing the different SE approaches and their 
general strengths and limitations, the different traceability 
methods offered in the state of the art according to the 
introduced universal SE approach will be surveyed in the next 
sections. Section II explains the methodology used in this 
research. Finally, the identified papers are evaluated and 
summarized in Section III. 
II. 
RESEARCH DESIGN 
In this section, the aim of the study is formulated. In addition, 
the research questions and the methodology of the literature 
review are described here. 
A. Objective and Research Questions 
In the last section, traceability challenges were divided 
into two broad categories: Tools and Methods. Here, the 
necessary training costs for the tools and their limited 
functionality are the subordinate problems of the first 
category, i.e., traceability tools, while the trade-off between 
cost and quality of the approaches resulting from the 
complexity of the methods belong to the second category. 
Therefore, the objective of this work is to evaluate the 
existing methods in terms of their efficiency and the 
applicability of the tools used. This goal will be concretized 
in the form of different research questions (Q). 
Q1: Which approach is able to define the system more 
comprehensively by covering the different views of it (e.g. 
requirements, processes, etc.) including its socio-technical 
levels?  
Q2: Which approach is focused on managing complexity 
through a generic modeling methodology applicable in 
transdisciplinary teams?  
Q3: Which approach establishes the link between 
requirements and testing to improve RE and ST processes? 
Q4: Which approach has a structured procedure concept 
connected to the system model that maps the lifecycle of a 
system from requirements elicitation through design and 
construction to testing?  
Q5: Which programs are used to implement traceability 
methods and how do they contribute to reducing complexity? 
Q6: To what extent is the necessary information available 
to the system developer during requirements elicitation, 
system design and testing integrated into the implemented 
approach?  
B. Methodology 
By analyzing the current developed SE based methods to 
digital requirements management, including traceability in 
product development, the practical potential of the different 
approaches can be overlooked. The focus of these evaluations 
is on the ability of these approaches to robustly link test 
methods and requirements, as well as other key system 
elements, 
manage 
complexity 
and 
enabling 
system 
understanding across a multidisciplinary team. At the same 
time, the implementation of the method and the level of 
integration of the system data and information into an 
appropriate functional tool will be examined. Based on the 
challenges identified in Section I and the derived research 
questions in Section II, six different topic areas (T) to be 
considered are defined. The derived topics serve to more 
clearly distinguish these methods from the others and to better 
highlight the scientific gap. Subsequently, a literature review 
is conducted in December 2022 considering the following 
narrowing of the subject: 
- Only the application of SE in the field of engineering is 
considered. 
- Of these, only the methods from the field of product 
development are then considered.  
- Of the various SE approaches applied in product 
development, only the universal SoSE, MBSE and GSE based 
methods are considered and analyzed. 
The research is conducted via scientific databases such as 
GEPRIS, Google Scholar, IEEE Xplore, ScienceDirect, and 
SpringerLink during the observation period from 2015 to 
2022. Based on this, 26 international and 4 national research 
projects or papers are picked out. Finally, the identified 
9
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

researches are evaluated based on the six topic areas. The 
methodology of the literature review is shown graphically in 
Figure 1:  
  
 
Figure 1.  Graphical representation of the applied methodology in the 
present paper. 
Based on the stated challenges and required solutions for 
each topic area, the studies were scored from 1 (lowest score) 
to 5 (highest score), with specific point awarded for each need 
covered. The important issues and needs for which a specific 
score was given are underlined in the following description of 
the topics with the corresponding score in parentheses. The 
assessment of the tools used in T5 is based on [63][70]-[72].   
T1 (System Definition and Delimitation): The approach 
developed shall primarily address the linkage of requirements 
(1p) to key system parts and artifacts, including processes (1p) 
and components (1p). Functional requirements shall be linked 
to the corresponding functions (1p) that the system is intended 
to perform. The approach should provide a clear boundary 
between the system and the environment and methodically 
support their interaction. To enable the treatment of 
requirements in EN, the approach should also include roles 
and liability through a person view (1p). 
T2 (System Modeling): The developed approach should 
consist of a model that graphically establishes a linkage (1p) 
between the above-mentioned system elements. Generality, 
comprehensibility and universality of the model should be 
observed as well (1p). By representing the interactions 
between these artifacts, the unified model shall enable 
traceability of requirements during the system development 
life cycle (1p) while handling system complexity (1p). In 
addition, the model shall account for independent attributes 
and represent EN in a unified manner (1p). 
T3 (Integration of Test cases): The importance and 
benefits of linking tests to requirements have already been 
explained in this paper. The model developed should be 
intended to enable the integration of test specification and 
methods by providing a link between requirements and test 
cases (1p). However, this should not lead to an increase in 
system complexity (1p). The important relationships between 
the RE process and the ST process shown in [11] should also 
be included in the model. In particular, these relationships 
include data on changes made or to be made to the 
requirements (0.5p) or test cases (0.5p), comments on the 
requirements design (0.5p), test results (1p), and information 
on defects resolved (0.5p). 
T4 (Structured Procedure Concept): In addition to the 
comprehensive generic system model, the developed 
approach must include a structured procedure concept (1p). 
The procedure model should have an iterative periodically 
recurring form (1p) and also represents the time course of 
system development (1p). This should be cross-lifecycle and 
include the development steps up to system testing (1p).  The 
procedure concept must also follow the rules of SE and should 
accordingly be modular and universally applicable (1p). In 
this way, the procedure model can enable EN a company- and 
product-specific use of RE methods, as well as the tracing and 
specification of requirements [10]. 
T5 (Model Implementation): As already mentioned, the 
model should be implemented in a suitable software tool to 
realize system modeling (1p). The program must visibly and 
transparently represent the system elements and their 
interrelationships (1p). In addition, it must have filtering and 
focusing functions that enable concentration on the essentials 
or certain elements and thus systematically reduce the 
complexity of the modeled system (1p). Even more, the 
software must enable the time-logical arrangement of 
functions and processes (1p) as well as the storage of system 
states in order to be able to track phases of project 
management (1p). 
T6 (System Information Integration): The most 
important system information, which is particularly relevant 
for tracing the test results and their corresponding product 
characteristics and requirements, shall be implemented with 
the model in the program or tracing tool. We have listed some 
of this information, which is shown in the Figure 2 (each 
information 0.5p).  
 
Figure 2.  Important information for precise requirements and test 
engineering. 
10
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

This information, such as measurement parameters, 
contact details of the person responsible for the test, the 
measuring device used, etc., should be accessible in the 
program at all times. This allows the tracing tool to serve as a 
means of communication and information exchange for the 
parties involved in the requirement and the test. These 
information are to be implemented with the model in a 
practical program. Depending on the context of use, further 
information may be required. 
III. 
RESULTS 
The results of the evaluation of the research works are 
listed in relation to their underlying SE approach in Table I. 
The results of the survey show the lack of a generic, cross-
discipline RE approach that considers the linkage of 
requirements with testing. This problem has been solved in 
the developed GSE approaches, but the RE methods based on 
this approach do not consider the integration of inspection 
characteristics and procedures into the model as well as into 
the procedure concept. As discussed earlier, the SoSE-based 
methods seem to have the least ability to fulfil the identified 
demands, as evidenced by the results of this literature review. 
In general, the lowest score belonged to T6 by all three 
approaches, which addresses the integration of the 
information listed in Figure 2 into the traceability tool. 
TABLE I.  
EVALUATION OF THE STATE OF THE ART FOR 
REQUIREMENTS TRACEABILITY METHODS AND THEIR LINKAGE 
TO TEST CASES. 
Evaluation 
Topics 
 
System Definition and 
Delimitation 
System Modeling 
Integration of Test 
Cases 
Structured Procedure 
Concept 
Model Implementation 
System Information 
Integration 
No. 
Reference 
T1 
T2 
T3 
T4 
T5 
T6 
MBSE 
1 
[73] 
4 
2 
3 
3 
3 
0,5 
2 
[74] 
4 
3 
3 
1 
3 
1,5 
3 
[75] 
5 
3 
2 
2 
3 
0 
4 
[76] 
4 
3 
3 
0 
3 
1 
5 
[77] 
4 
3 
2 
3 
3 
1 
6 
[78] 
5 
3 
2 
3 
3 
0 
7 
[79] 
3 
2 
1 
4 
5 
4 
8 
[80] 
5 
3 
2 
5 
4 
1 
9 
[81] 
3 
2 
1 
4 
5 
4 
10 
[82] 
3 
3 
3 
5 
3 
1 
11 
[83] 
3 
2 
3 
5 
2 
3 
12 
[84] 
3 
3 
0 
2 
3 
1 
13 
[85] 
5 
3 
3 
3 
2 
2,5 
14 
[86] 
4 
3 
4 
1 
1 
2 
15 
[87] 
3 
2 
0 
0 
3 
1 
16 
[88] 
5 
4 
3 
4 
3 
4 
17 
[89] 
2 
3 
0 
1 
2 
2 
18 
[90] 
2 
3 
1 
1 
2 
1 
19 
[91] 
5 
1 
3 
3 
3 
2,5 
20 
[92] 
4 
2 
0 
2 
4 
0 
21 
[93] 
4 
4 
4 
4 
3 
5 
22 
[94] 
4 
4 
4 
5 
2 
4 
23 
[95] 
3 
0 
0 
4 
3 
1 
24 
[96] 
4 
4 
3 
1 
5 
1 
GSE 
25 
[97] 
5 
5 
0 
3 
4 
2 
26 
[98] 
5 
5 
0 
4 
4 
2 
27 
[99] 
4 
5 
0 
4 
4 
2 
SoSE 
28 
[100] 
2 
2 
0 
3 
3 
1 
29 
[101] 
2 
2 
0 
2 
3 
0,5 
30 
[102] 
2 
2 
0 
3 
2 
1 
The highest score among the MBSE-based methods is 
achieved by Mandel et al. [93] with 24 scores out of 30, which 
not only shows a consideration of the system environment 
and its delineation from the system in the model, but also 
integrates a lot of information relevant for testing into the 
implemented model. However, the method does not consider 
roles. In addition, the procedure model does not fully include 
the steps for developing and managing the requirements [93]. 
Second among the highly rated MBSE approaches are the 
methods of Kremer et al. and Steimer et al., which both 
achieved a score of 23 out of 30. The presented method of 
Kremer et al. [88] used an iterative, overarching procedure 
model. In addition, the use cases and all major system 
elements are linked in the model. However, different tools 
were used to link and create the model, resulting in a tool 
chain in the end. In addition, the information relevant to the 
test could be more comprehensively included in the tool [88]. 
The MBSE-based approach of Steimer et al. [94] aims to 
better integrate production system planning with product 
development in the early design phases through a model-
based planning process. This approach has an iterative V-
model as a process concept. The authors pointed out that the 
method they developed makes models with a larger scale 
rather confusing. They also mentioned that the mostly 
abstract graphical representations in SysML, such as 
rectangles, circles and lines, require expert knowledge for 
their interpretation [94]. Pessa et al. [80] applied MBSE to an 
industrial test case to perform the functional design of an 
innovative control and maintenance system to be integrated 
into the aircraft fuel system. In their model, the requirements 
were linked to the use cases, but the system functions were 
derived directly by inferring the use dependencies between 
the system and the use case. The model shows the interactions 
between these elements, but gives no indication of the 
important data from the test process [80]. Bougain and 
Gerhard [81] have also developed a product development aid 
using SysML that helps designers make decisions using 
examples from previous or similar or other domains, 
including associated requirements, specifications, use cases, 
test cases, and other system information [81]. Huth et al. [85] 
presented an integrated approach that offers the possibilities 
of model-based requirements and variant modeling. In their 
work, in addition to test criteria, test cases, features, use cases 
and stakeholders, they have also linked the goals or targets 
with the requirements. However, a new sub-model, called the 
feature model, was created for modeling features, which 
Research 
Topic 
11
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

affects the unified form of the model. In the presented 
procedure model is also no chronological sequence of the 
product development process recognizable [85]. The lowest 
point belongs to the work of Berges et al. [87], where an 
approach for coupling MBSE and simulation models was 
presented. 
The 
approach, 
which 
was 
exemplarily 
demonstrated on the development models for the virtual 
development of wind turbines, has a SysML system model 
that contains the relevant development information about the 
wind turbine and is linked to the simulation model in 
MATLAB Simulink to check the technical solutions for 
individual functions against the requirements. In this work, 
the focus is not on the universal representation of the system 
using the SE approach, but on the linking of the system model 
with simulation model for the purpose of subsequent 
automation of change processes [87]. In this approach the test 
cases are not integrated in the model as well as the methods 
in [84][92][89][90][95]. Moreover, it can be generally said 
that all observed MBSE-based methods exhibit high 
complexity, which complicates the understanding of the 
system due to the previously mentioned characteristics of 
MBSE. 
The GSE based traceability methods evaluated in Table I 
offer a generic usability and a universal understanding of the 
considered systems. In [97], the authors presented an 
approach based on the e-DeCoDe model for consistent 
tracking of requirements from complaints. In this way, the 
identification of failure causes in product development is 
made possible. As a procedure, the authors developed a four-
step process for deriving requirements from complaints. A 
new RE approach is presented in another work [98] based on 
e-DeCoDe that supports engineers in R&D Business 
Networks (BN) in a flexible and customizable way. This 
approach merges the three dimensions of RE, RM and BN 
into a structured procedure based on GSE, which enables a 
high level of understanding of the complex system, for the 
different partners in the EN. Finally, Bielefeld et al. [99] use 
the DeCoDe modeling method to analyze fault chains for a 
complex mechatronic system. In this method, organizational 
complexity is not considered and the focus is only on the 
technical complexity of the mentioned system [99].  
The use of e-DeCoDe modeling based on the simple 
matrix format in  [97] and [98] facilitates the understanding 
of the system by defining the essential system artifacts, i.e., 
requirements, 
components, 
functions, 
processes, 
and 
responsible parties. In addition, the interaction between the 
individual artifacts and the relationship between the system 
and its environment is captured in these methods. The tool 
(iQUAVIS) used for the implementation of the RE methods 
developed by Mistler et al. [97] allows the entire display to 
be filtered or narrowed to any system element, reducing 
complexity and providing a better overview of system 
components [97]. However, none of these approaches, nor 
any of the SoSE-based approaches explored, consider the 
linkage of the test methods with the system elements, 
including the requirements. This also means that the 
developed procedure concepts, despite their iterative modular 
structure, lack the relevant development steps for system 
testing. 
IV. 
CONCLUSION AND FUTURE WORK 
In this paper, we have presented the challenges in 
traceability of requirements and their linkage to test 
specifications and test methods. According to the studies, 
existing traceability approaches lack the appropriate methods 
and tools that offer a cost-quality balance in addition to an 
even understanding of the system and reduction of 
complexity.  
Based on the aforementioned problem areas, we evaluated 
the different SE approaches, including specific and universal 
approaches, in terms of their potential for requirements 
traceability throughout the product development cycle up to 
system testing. In this context, the three universal SE 
approaches, i.e., SoSE, MBSE, and GSE, were presented as 
the most commonly used solutions for requirements 
traceability. In a next step, the different traceability methods 
available in the literature were evaluated through a systematic 
literature review with respect to their corresponding SE 
approach. 
The results of the literature review show that MBSE 
enables traceability of requirements and their linkage to 
system tests, but they have limitations in terms of generic 
model structure, which limits the equal understanding of the 
system for the different stakeholders. In addition, some of the 
developed MBSE methods found in the literature review did 
not fully consider the important system elements, which 
should be connected with requirements. Some methods also 
did not take into account the person view, which enables 
social level interconnectedness in EN. The developed GSE-
based methods that use (e)-/DeCoDe modeling provide a 
comprehensive view of the key system elements through a 
simple matrix view that keeps the model complexity low, but 
none of these methods consider the integration of the test 
processes into the system model. In addition, the necessary 
information listed in Figure 2 is not included in the tools used 
in most of the analyzed works. Compared to the MBSE and 
GSE approaches, the SoSE-based methods have reached the 
lowest score with regard to the observed topics. 
Based on the identified gaps in the state of the art, we have 
started to develop an information pool as a data basis for 
tracing the requirements of a sample product (chemical 
protective clothing) using the GSE approach. In addition to 
integrating the system test into an e-DeCoDe model, our 
database should enable the capture of the system information 
in a suitable available software tool, e.g., iQUAVIS. Thanks 
to the integration of the person view in the e-DeCoDe model, 
this method can lead to a dynamic flow of data and 
information and an improvement of communication in the 
multidisciplinary teams. The unified structure of the e-
DeCoDe model should allow for a better understanding of the 
system by different stakeholders without requiring a high level 
of training, which can be an important factor for SMEs. These 
benefits can be further explored and evaluated in upcoming 
research. 
 
12
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

REFERENCES 
[1] INCOSE, Ed. Systems Engineering Handbook: A Guide for 
System Life Cycle Processes and Activities, 3rd ed., 2006. 
[2] N. Schlüter, Generic Systems Engineering: A Methodical 
Approach to Complexity Management, 3rd ed. Berlin: Springer 
Berlin; Springer Vieweg, 2023. 
[3] R. S. Wahono, "Analyzing Requirements Engineering 
Problems,", IECI Japan Workshop, pp. 55–58, 2003. [Online]. 
Available: 
https://www.semanticscholar.org/paper/
ANALYZING-REQUIREMENTS-ENGINEERING-
PROBLEMS-Wahono/
b076ea67d29396394ec23a4f38843c740a05d4b0 
[4] G. Kotonya and I. Sommerville, Requirements Engineering: 
Processes and Techniques, 1st ed. (Worldwide series in 
computer science). Chichester: John Wiley & Sons, 1998. 
[Online]. Available: http://www.loc.gov/catdir/description/
wiley031/98016175.html 
[5] D. Pandey, U. Suman, and A. K. Ramani, "An Effective 
Requirement Engineering Process Model for Software 
Development and Requirements Management," in Advances in 
Recent Technologies in Communication and Computing 
(ARTCom), 2010 International Conference on, Kottayam, 
India, 2010, pp. 287–291, doi: 10.1109/ARTCom.2010.24. 
[6] I. Gräßler, "A New V-Model for Interdisciplinary Product 
Engineering,", Universitätsbibliothek Ilmenau, 2017. [Online]. 
Available: https://www.semanticscholar.org/paper/A-new-V-
Model-for-interdisciplinary-product-
Gr%C3%A4%C3%9Fler/
e662dd9ed86b991300dcf715f6935aa267faa3a2 
[7] H.-D. Haasis and T. Kriwald, Knowledge Management in 
Production and Environmental Protection. Berlin: Springer 
Berlin Heidelberg, 2013. [Online]. Available: https://
ebookcentral.proquest.com/lib/kxp/detail.action?docID=
6438475 
[8] T. Pfeifer, Ed. Knowledge-Based Systems in Quality 
Assurance: Methods for the Use of Distributed Knowledge 
(Quality Management). Berlin, Heidelberg: Springer Berlin 
Heidelberg, 1996. 
[9] J.-P. G. Nicklas, "Approach for a Model-Based Requirements 
Management for Enterprise Networks," Dissertation, Faculty 
of Mechanical Engineering and Safety Engineering, University 
of Wuppertal, Wuppertal, 2015. [Online]. Available: https://
www.shaker.de/Online-Gesamtkatalog-Download/
2023.01.13-16.39.18-132.195.144.198-rad7F822.tmp/3-8440-
4556-2_INH.PDF 
[10] N. Schlüter, "Redesign of Requirements Engineering in 
Networks for Smart Products," in Potentials of Artificial 
Intelligence 2020, Springer Vieweg, Berlin, Heidelberg, 2020, 
pp. 89–108. [Online]. Available: https://link.springer.com/
chapter/10.1007/978-3-662-60692-6_6 
[11] J. Kukkanen, K. Väkeväinen, M. Kauppinen, and E. Uusitalo, 
"Applying a Systematic Approach to Link Requirements and 
Testing: A Case Study," in 2009 16th Asia-Pacific Software 
Engineering Conference, Batu Ferringhi, Penang, Malaysia, S. 
Sulaiman, 
Ed., 
2009, 
pp. 
482–488, 
doi: 
10.1109/APSEC.2009.62. 
[12] E. J. Uusitalo, M. Komssi, M. Kauppinen, and A. M. Davis, 
"Linking Requirements and Testing in Practice,", 2008 16th 
IEEE International Requirements Engineering Conference, 
2008. 
[Online]. 
Available: 
https://www.academia.edu/
15266452/Linking_Requirements_and_Testing_in_Practice 
[13] Z. A. Barmi, A. H. Ebrahimi, and R. Feldt, "Alignment of 
Requirements Specification and Testing: A Systematic 
Mapping Study," in 2011 IEEE Fourth International 
Conference on Software Testing, Verification and Validation 
workshops (ICSTW 2011), Berlin, Germany, 2011, pp. 476–
485, doi: 10.1109/ICSTW.2011.58. 
[14] S. Siegl, K.-S. Hielscher, and R. German, "Model Based 
Requirements Analysis and Testing of Automotive Systems 
with Timed Usage Models," in Requirements Engineering 
Conference (RE), 2010 18th IEEE International, Sydney, 
Australia, 2010, pp. 345–350, doi: 10.1109/RE.2010.49. 
[15] S. M. Ooi, R. Lim, and C. C. Lim, "An Integrated System for 
End-to-End Traceability and Requirements Test Coverage," in 
Software Engineering and Service Science (ICSESS), 2014 5th 
IEEE International Conference on, Beijing, China, 2014, pp. 
45–48, doi: 10.1109/ICSESS.2014.6933511. 
[16] B. Ramesh, "Factors Influencing Requirements Traceability 
Practice,", Commun. ACM, 1998. [Online]. Available: https://
www.semanticscholar.org/paper/Factors-influencing-
requirements-traceability-Ramesh/
a09e302f21091e29d62a13f2e81a38fd1df7d505 
[17] M. Kolla and M. Banka, "Merging Functional Requirements 
with Test Cases," Master Thesis, School of Technology - 
Department of Computer Science, Malmö University, Malmö-
Schweden, 
2015. 
[Online]. 
Available: 
https://
www.semanticscholar.org/paper/Merging-Functional-
Requirements-with-Test-Cases-Kolla-Banka/
d2d5b7869b87cd1872250d98c1cda805efd2986e 
[18] V. Katta and T. Stålhane, "A Conceptual Model of Traceability 
for Safety Systems," in Proceedings of the Complex Systems 
Design & Management Conference, 2011. [Online]. Available: 
https://www.academia.edu/19138950/A_Conceptual_Model_
of_Traceability_for_Safety_Systems 
[19] A. Egyed, S. Biffl, M. Heindl, and P. Grünbacher, 
"Determining the Cost-Quality Trade-Off for Automated 
Software Traceability," in The 20th IEEE/ACM International 
Conference on Automated Software Engineering : Long Beach, 
California, USA, November 7-11, 2005, Long Beach CA USA, 
D. Redmiles, T. Ellman, and A. Zisman, Eds., 2005, pp. 360–
363, doi: 10.1145/1101908.1101970. 
[20] D. Graham, "Requirements and Testing: Seven Missing-Link 
Myths,", IEEE Softw., vol. 19, no. 5, pp. 15–17, 2002, doi: 
10.1109/MS.2002.1032845. 
[21] F. A. Salim, H. Ali, G. Muller, and K. Falk, "User-centered 
Data Driven Approach to Enhance Information Exploration, 
Communication and Traceability in a Complex Systems 
Engineering Environment," in MODERN SYSTEMS 2022: 
International Conference of Modern Systems Engineering 
Solutions., Alan Martin Redmond, Ed., pp. 39–44. [Online]. 
Available: 
https://openarchive.usn.no/usn-xmlui/handle/
11250/3019183 
[22] J. Cleland-Huang, "Just Enough Requirements Traceability," in 
Proceedings, 
Chicaco, 
IL, 
2006, 
pp. 
41–42, 
doi: 
10.1109/COMPSAC.2006.57. 
[23] V. Kirova, N. Kirby, D. Kothari, and G. Childress, "Effective 
Requirements Traceability: Models, Tools, and Practices,", 
Bell Labs Tech. J., vol. 12, no. 4, pp. 143–157, 2008, doi: 
10.1002/bltj.20272. 
[24] S. R. Aleixo, C. Campese, and J. Mascarenhas, "Identification 
and Classification of Barriers and Benefits of Requirements 
Traceability in Project Development,", World J. Adv. Eng. 
Tech. Sci., vol. 4, no. 1, pp. 22–39, 2021, doi: 
10.30574/wjaets.2021.4.1.0080. 
[25] F. Lin and H. Chen, "Comparative Study of Requirements 
Traceability in Facing Requirements Change: Systematic 
Literature Study and Survey,", 2019. [Online]. Available: 
https://www.diva-portal.org/smash/record.jsf?pid=
diva2:1305894 
[26] M. Tukur, S. Umar, and J. Hassine, "Requirement Engineering 
Challenges: A Systematic Mapping Study on the Academic and 
the Industrial Perspective,", Arab J Sci Eng, vol. 46, no. 4, pp. 
3723–3748, 
2021. 
doi: 
10.1007/s13369-020-05159-1. 
[Online]. Available: https://link.springer.com/article/10.1007/
s13369-020-05159-1 
13
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

[27] J. A. Estefan, "Survey of Model-Based Systems Engineering 
(MBSE) Methodologies,", Incose MBSE Focus Group, 2007, 
Art. no. 8. [Online]. Available: https://edisciplinas.usp.br/
pluginfile.php/5348231/mod_resource/content/1/mbse_
methodology_survey_revb.pdf 
[28] T. Weilkiens, Systems Engineering with SysML/UML: 
Modeling, 
Analysis, 
Design 
(The 
MK/OMG 
Press). 
Amsterdam: Morgan Kaufmann, 2011. [Online]. Available: 
https://ebookcentral.proquest.com/lib/kxp/detail.action?
docID=331984 
[29] H. Aboutaleb and B. Monsuez, "Towards a Seamless 
Requirements Management in System Design Using a 
Higraph-Based Model," in 2016 Annual IEEE Systems 
Conference 
(SysCon), 
2016, 
doi: 
10.1109/syscon.2016.7490663. 
[30] G. Sabaliauskaite et al., "Challenges in Aligning Requirements 
Engineering and Verification in a Large-Scale Industrial 
Context," in Requirements Engineering Conference (RE), 2010 
18th IEEE International, Sydney, Australia, 2010, pp. 128–
142, doi: 10.1007/978-3-642-14192-8_14. 
[31] M. W. Boota, N. Ahmad, and A. H. Masoom, "Requirement 
Engineering Issues and Their Solutions,", International 
Journal of Engineering and Technical Research (IJETR), pp. 
50–56, 2014. 
[32] E. Bjarnason et al., "Challenges and Practices in Aligning 
Requirements with Verification and Validation: A Case Study 
of Six Companies,", Empir Software Eng, vol. 19, no. 6, pp. 
1809–1855, 2014. doi: 10.1007/s10664-013-9263-y. [Online]. 
Available: 
https://link.springer.com/article/10.1007/s10664-
013-9263-y 
[33] P. Mason, "On Traceability for Safety Critical Systems 
Engineering," in Software Engineering Conference, 2005. 
APSEC '05. 12th Asia-Pacific, Taipei, Taiwan, 2005, 8 pp, doi: 
10.1109/APSEC.2005.85. 
[34] G. Regan, F. McCaffery, K. McDaid, and D. Flood, "The 
Barriers to Traceability and their Potential Solutions: Towards 
a Reference Framework," in 2012 38th Euromicro Conference 
on Software Engineering and Advanced Applications (SEAA 
2012): Cesme, Izmir, Turkey, 5-8 September 2012, Cesme, 
Izmir, Turkey, V. Cortellessa, Ed., 2012, pp. 319–322, doi: 
10.1109/SEAA.2012.80. 
[35] D. Viapiana, G. Riggio, L. Barbieri, and F. Bruno, "An 
Integrated Approach to Ensure Requirements Traceability 
During the Product Development Process," in Design Tools 
and Methods in Industrial Engineering II, Rom, Italien, 2022, 
pp. 328–335, doi: 10.1007/978-3-030-91234-5_33. 
[36] R. Wohlrab, E. Knauss, J.-P. Steghöfer, S. Maro, A. Anjorin, 
and P. Pelliccione, "Collaborative Traceability Management: a 
Multiple Case Study from the Perspectives of Organization, 
Process, and Culture,", Requirements Eng, vol. 25, no. 1, pp. 
21–45, 2020. doi: 10.1007/s00766-018-0306-1. [Online]. 
Available: 
https://link.springer.com/article/10.1007/s00766-
018-0306-1 
[37] J. Krause, A. Kaufmann, and D. Riehle, "The Code System of 
a Systematic Literature Review on Pre-Requirements 
Specification Traceability,", 2020, doi: 10.25593/ISSN.2191-
5008/CS-2020-02. 
[38] F. Stallinger, R. Neumann, Robert Schossleitner, and Stephan 
Kriener, "Migrating Towards Evolving Software Product 
Lines: Challenges of an SME in a Core Customer-Driven 
Industrial Systems engineering context,", 2011. [Online]. 
Available: https://www.semanticscholar.org/paper/Migrating-
towards-evolving-software-product-lines%3A-Stallinger-
Neumann/d927e4708f032ee75c5cb7f5be6099f6f5ca4bcc 
[39] D. Pérez Ferreira Chaves and T. Peter, The use of traceability 
systems in industry - results of a study. Kassel: Kassel 
University Press, 2018. 
[40] N. Wittine, S. Wenzel, C. Kern, R. Refflinghaus, and T. 
Trostmann, Introduction of Traceability into the Continuous 
Improvement Process of SMEs. Hannover : publish-Ing, 2020. 
[Online]. 
Available: 
https://www.repo.uni-hannover.de/
handle/123456789/9703 
[41] C. Schröder, The Challenges of Industry 4.0 for Small and 
Medium-Sized Enterprises (A good society - social democracy 
#2017 plus). Bonn: Friedrich-Ebert-Stiftung, Division for 
Economic and Social Policy, 2016. 
[42] U. Nikula, J. Sajaniemi, and H. Kälviäinen, "A State-of-the-
Practice Survey on Requirements Engineering in Small- and 
Medium-Sized Enterprises,", Telecom Business Research 
Center Lappeenranta, Lappeenranta University of Technology, 
Lappeenranta, Rep. Research Report 1, 2000. [Online]. 
Available: https://www.semanticscholar.org/paper/A-State-of-
the-Practice-Survey-on-Requirements-in-Nikula-Sajaniemi/
5f8f57e19c54448eb37f4ff1464c83b74ee4e8b9 
[43] United Nations Global Compact, "A Guide to Traceability for 
SMEs,", United Nations Global Compact, New York, 2016. 
Accessed: May 2, 2023. [Online]. Available: https://
unglobalcompact.org/library/4381 
[44] M. Mistler, "Development of a Process Concept for Model-
Based Agile Requirements Management (Requirements 
Engineering 
and 
Requirements 
Management) 
for 
Organizations - REMOt," Dissertation, Product Safety and 
Quality, University of Wuppertal, Wuppertal, 2021. 
[45] S. Marchlewitz, J.-P. Nicklas, and P. Winzer, "Using Systems 
Engineering for Improving Autonomous Robot Performance,", 
2015 10th System of Systems Engineering Conference (SoSE), 
2015. [Online]. Available: https://www.semanticscholar.org/
paper/Using-systems-engineering-for-improving-autonomous-
Marchlewitz-Nicklas/
d54f8a9df40d920941c2e92d9aa401110684adfd 
[46] P. Winzer, "Generic System Description and Problem Solving 
in Systems Engineering,", IEEE Systems Journal, vol. 11, no. 
4, pp. 2052–2061, 2017, doi: 10.1109/JSYST.2015.2428811. 
[47] R. 
Haberfellner, 
Systems 
Engineering;: 
Basics 
and 
application, 14th ed. [S.l.]: Orell Füssli Verlag, 2018. [Online]. 
Available: 
https://ebookcentral.proquest.com/lib/kxp/
detail.action?docID=6795525 
[48] A. T. Bahill and B. Gissing, "Re-Evaluating Systems 
Engineering Concepts Using Systems Thinking,", IEEE Trans. 
Syst., Man, Cybern. C, vol. 28, no. 4, pp. 516–527, 1998, doi: 
10.1109/5326.725338. 
[49] J.-P. Nicklas, M. Mamrot, P. Winzer, D. Lichte, S. 
Marchlewitz, and K.-D. Wolf, "Use Case Cased Approach for 
an Integrated Consideration of Safety and Security Aspects for 
Smart Home Applications," in 2016 11th System of Systems 
Engineering Conference (SoSE 2016): Kongsberg, Norway, 
12-16 June 2016, Kongsberg, Norway, 2016, pp. 1–6, doi: 
10.1109/SYSOSE.2016.7542908. 
[50] M. Jamshidi, "Introduction to System of Systems," in System 
of Systems Engineering: Innovations for the 21st century, M. 
Jamshidi, Ed., Hoboken, N.J.: Wiley, 2009, pp. 1–20. 
[51] A. P. Sage and C. D. Cuppan, "On the Systems Engineering 
and Management of Systems of Systems and Federations of 
Systems,", 
INFORMATION 
KNOWLEDGE 
SYSTEMS 
Management, vol. 2, no. 4, pp. 325–345, 2001. [Online]. 
Available: 
https://www.deepdyve.com/lp/ios-press/on-the-
systems-engineering-and-management-of-systems-of-
systems-and-BKxxGlOrUD 
[52] A. Gorod, R. Gove, B. Sauser, and J. Boardman, "System of 
Systems Management: A Network Management Approach," in 
2007 IEEE International Conference on System of Systems 
Engineering: SoSE'07, San Antonio, TX, USA, 2007, pp. 1–5, 
doi: 10.1109/SYSOSE.2007.4304218. 
[53] A. Gorod, B. Sauser, and J. Boardman, "System-of-Systems 
Engineering Management: A Review of Modern History and a 
14
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

Path Forward,", IEEE Systems Journal, vol. 2, no. 4, pp. 484–
499, 2008, doi: 10.1109/JSYST.2008.2007163. 
[54] I. Cherfa, N. Belloir, S. Sadou, R. Fleurquin, and D. Bennouar, 
"Systems of Systems: From Mission Definition to Architecture 
Description,", Syst. Engin., vol. 22, no. 6, pp. 437–454, 2019, 
doi: 10.1002/sys.21523. 
[55] INCOSE, Ed. Systems Engineering Vision 2020 (2.03), 2007. 
[56] M. Sollfrank, E. Trunzer, and B. Vogel-Heuser, "Graphical 
Modeling of Communication Architectures in Network Control 
Systems with Traceability to Requirements," in IECON 2019 - 
45th Annual Conference of the IEEE Industrial Electronics 
Society, Lisbon, Portugal, 2019, pp. 6267–6273, doi: 
10.1109/IECON.2019.8927246. 
[57] M. Mamrot, S. Marchlewitz, J.-P. Nicklas, and P. Winzer, 
"Using Systems Engineering for a Requirement-Based Design 
Support for Autonomous Robots," in 2014 IEEE International 
Conference on Systems, Man, and Cybernetics (SMC), 2014, 
doi: 10.1109/smc.2014.6974406. 
[58] A. Morkevicius, A. Aleksandraviciene, D. Mazeika, L. 
Bisikirskiene, and Z. Strolia, "MBSE Grid: A Simplified 
SysML-Based Approach for Modeling Complex Systems,", 
INCOSE International Symposium, vol. 27, no. 1, pp. 136–150, 
2017, doi: 10.1002/j.2334-5837.2017.00350.x. 
[59] A. Madni and S. Purohit, "Economic Analysis of Model-Based 
Systems Engineering,", Systems, vol. 7, no. 1, p. 12, 2019. doi: 
10.3390/systems7010012. 
[Online]. 
Available: 
https://
www.mdpi.com/415220 
[60] M. Ryan, S. Cook, and W. Scott, Application of MBSE to 
Requirements Engineering-Research Challenges. University 
of 
Wollongong, 
2013. 
[Online]. 
Available: 
https://
ro.uow.edu.au/eispapers/6335/ 
[61] A. M. Madni, B. Boehm, R. G. Ghanem, D. Erwin, and M. J. 
Wheaton, Eds. Disciplinary Convergence in Systems 
Engineering Research, 1st ed. (Springer eBook Collection 
Engineering). Cham: Springer International Publishing, 2018. 
[62] INCOSE, System Engineering Vision 2035: Engineering 
Solutions for a Better World, 2021. 
[63] H. Rosenow, "Trade Off Evaluation Methodology for Tool and 
Method Decisions for Virtualization and Model-Based 
Development,", Chair of Astronautics, Munich University of 
Technology, München, 2018. [Online]. Available: https://
mediatum.ub.tum.de/1449514 
[64] K. G. Young, "Defense Space Application of MBSE - Closing 
the Culture Chasms," in SPACE Conferences and Exposition: 
AIAA SPACE 2015 Conference and Exposition, Pasadena, 
California, 2015, doi: 10.2514/6.2015-4620. 
[65] A. Albers, R. Dumitrescu, J. Gausemeier, K. Lindow, O. 
Riedel, and R. Stark, The Advanced Systems Engineering 
Strategy: A central Initiative for the Future of Germany as an 
Engineering and Innovation Hub. Munich, 2022. 
[66] L. Boggero, P. D. Ciampa, and B. Nagel, "An MBSE 
Architectural Framework for the Agile Definition of System 
Stakeholders, Needs and Requirements," in AIAA AVIATION 
2021 FORUM, Reston, Virginia, 2021, doi: 10.2514/6.2021-
3076. 
[67] P. Winzer and J. Sitte, "Systems Engineering: Old Ideas, New 
Potential," in 2004 IEEE International Conference on Systems, 
Man and Cybernetics (IEEE Cat. No.04CH37583), 2004, pp. 
2150–2155, doi: 10.1109/icsmc.2004.1400645. 
[68] J. Heinke and M. Mistler, "Agile and Model-Based Project 
Management in Product and Service Development," in 
Challenges in Dealing with Requirements in Times of 
Industrial Change (Generic Management Reports Band 
2019,1), M. Reiche and N. Schlüter, Eds., Düren: Shaker, 2019, 
pp. 1–26. 
[69] P. Winzer, S. Schlund, S. Kulig, and J. Rosendahl, "Methodical 
Approach for the Development of Networked Mechatronic 
Systems in Intralogistic Plants According to Requirements," in 
Forderungsgerechte 
Auslegung 
von 
intralogistischen 
Systemen, H. A. Crostack and M. t. Hompel, Eds., Dortmund: 
Verl. Praxiswissen, 2007. 
[70] M. Mistler, N. Schlüter, and M. Lower, "Analysis of Software 
Tools for Model-Based Generic Systems Engineering for 
Organizations Based on e-DeCoDe," in 2021 IEEE 
International Systems Conference (SysCon), Vancouver, BC, 
Canada, 
2021, 
pp. 
1–8, 
doi: 
10.1109/SysCon48628.2021.9447081. 
[71] A. Khandoker et al., "Towards a Logical Framework for Ideal 
MBSE Tool Seselection Based on Discipline Specific 
Requirements,", Journal of Systems and Software, vol. 189, p. 
111306, 2022. doi: 10.1016/j.jss.2022.111306. [Online]. 
Available: https://www.sciencedirect.com/science/article/pii/
S0164121222000553 
[72] J. Ma, G. Wang, J. Lu, H. Vangheluwe, D. Kiritsis, and Y. Yan, 
"Systematic Literature Review of MBSE Tool-Chains,", 
Applied Sciences, vol. 12, no. 7, p. 3431, 2022, doi: 
10.3390/app12073431. 
[73] R. Plateaux, O. Penas, S. Mule, P. Hehenberger, S. Patalano, 
and F. Vitolo, "SCRUM++ Framework Concepts,", ISSE 2020 
- 6th IEEE International Symposium on Systems Engineering, 
Proceedings, 
pp. 
1–8, 
2020. 
doi: 
10.1109/ISSE49799.2020.9272233. 
[Online]. 
Available: 
https://pure.fh-ooe.at/de/publications/scrum-framework-
concepts 
[74] J. L. Arockia Irudayaraj, "Functional Driven Product 
Development Using MBSE," Master´s Thesis, Department of 
Industrial and Material Science, CHALMERS UNIVERSITY 
OF TECHNOLOGY, Gothenburg, Sweden, 2020. [Online]. 
Available: 
https://odr.chalmers.se/items/d8684009-4e24-
4021-ad6e-a063ef87acee 
[75] P. Ciampa, B. Nagel, and G. Rocca, "A MBSE Approach to 
MDAO Systems for the Development of Complex Products,", 
AIAA AVIATION 2020 FORUM, 2020. [Online]. Available: 
https://www.semanticscholar.org/paper/A-MBSE-Approach-
to-MDAO-Systems-for-the-Development-Ciampa-Nagel/
e6beeea35d624e95b889230188200ad60e3b2259 
[76] Y. Huang, B. Hu, W. Diao, and Z. Xia, "Research on Satellite 
Modeling and Real-time Simulation Monitoring Based on 
MBSE," 
in 
2022 
2nd 
Asia-Pacific 
Conference 
on 
Communications Technology and Computer Science: ACCTCS 
2022 : proceedings : 25-27 February 2022, Shenyang, China, 
Shenyang, 
China, 
2022, 
pp. 
257–262, 
doi: 
10.1109/ACCTCS53867.2022.00060. 
[77] S. Gebreyohannes, A. Karimoddini, and A. Homaifar, 
"Applying 
Model-Based 
Systems 
Engineering 
to 
the 
Development of a Test and Evaluation Tool for Unmanned 
Autonomous Systems," in 2020 IEEE International Systems 
Conference (SysCon), Montreal, QC, Canada, 2020, pp. 1–7, 
doi: 10.1109/SysCon47679.2020.9275894. 
[78] S. Subarna, A. K. Jawale, A. S. Vidap, S. D. Sadachar, S. 
Fliginger, and S. Myla, "Using a Model Based Systems 
Engineering Approach for Aerospace System Requirements 
Management," in 2020 AIAA/IEEE 39th Digital Avionics 
Systems Conference (DASC), San Antonio, TX, USA, 2020, 
pp. 1–8, doi: 10.1109/DASC50938.2020.9256589. 
[79] S. Bougain and D. Gerhard, "Supporting Product Design 
Decision with a SysML Design History Assistant,", Procedia 
CIRP, 
vol. 
91, 
pp. 
255–260, 
2020, 
doi: 
10.1016/j.procir.2020.02.174. 
[80] C. Pessa, M. Cifaldi, E. Brusa, D. Ferretto, K. M. Malgieri, and 
N. Viola, "Integration of Different MBSE Approaches within 
the Design of a Control Maintenance System Applied to the 
Aircraft Fuel System," in 2016 IEEE International Symposium 
on Systems Engineering (ISSE), Edinburgh, United Kingdom, 
2016, pp. 1–8, doi: 10.1109/SysEng.2016.7753138. 
15
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

[81] S. Bougain and D. Gerhard, "Integrating Environmental 
Impacts with SysML in MBSE Methods,", Procedia CIRP, vol. 
61, pp. 715–720, 2017. doi: 10.1016/j.procir.2016.11.196. 
[Online]. Available: https://www.sciencedirect.com/science/
article/pii/S2212827116313567 
[82] J. Marshall, R. Ferguson, D. Matthes, and L. Assadzadeh, 
"Transitioning Model-Based Systems Engineering to Onboard 
Spacecraft Electronics," in 2017 IEEE Aerospace Conference : 
4-11 March 2017, Big Sky, MT, USA, M. (. IEEE Aerospace 
Conference 
Big 
Sky, 
Ed., 
2017, 
pp. 
1–15, 
doi: 
10.1109/AERO.2017.7943873. 
[83] A.-L. Bruggeman, B. van Manen, T. van der Laan, T. van den 
Berg, and G. La Rocca, "An MBSE-Based Requirement 
Verification Framework to Support the MDAO Process," in 
AIAA AVIATION 2022 Forum, Chicago, IL & Virtual, 2022, 
doi: 10.2514/6.2022-3722. 
[84] N. Bursac, "Model Based Systems Engineering to Support 
Modular Development in the Context of the Early Phase of 
Product Generation Development," Dissertation, Institute for 
Product 
Development 
(IPEK), 
Karlsruhe 
Institute 
of 
Technology (KIT), Karlsruhe, 2016. [Online]. Available: 
https://publikationen.bibliothek.kit.edu/1000054484 
[85] T. Huth, D. Inkermann, and T. Vietor, "An Approach for 
Integrated, Model-based Requirements and Variant Modeling," 
in 
Science 
Forum: 
Intelligente 
Technische 
Systeme 
(WInTeSys), Paderborn, E. Bodden et al., Eds., 2017, pp. 169–
182. 
[86] J. Roßmann et al., "Integrated Model-Based System 
Specification and Simulation: A Case Study of Sensor Design 
in Space Travel," in Science Forum: Intelligente Technische 
Systeme (WInTeSys), Paderborn, E. Bodden et al., Eds., 2017, 
pp. 281–294. 
[87] J. M. Berges, J. K. Berroth, Y. Zhang, G. Höpfner, and G. 
Jacobs, "Networking of Simulation Models and Model-Based 
Systems Engineering for Virtual Product Development," in 
NAFEMS DACH Regionalkonferenz, Bamberg, Deutschland, 
2022, 
pp. 
263–267. 
[Online]. 
Available: 
https://
publications.rwth-aachen.de/record/856273 
[88] M. Kremer, S. Christiaens, C. Granrath, and M.-A. Meyer, 
"Scenario and Model-Based Systems Engineering for Highly 
Automated Driving,", ATZ Automobiltech Z, vol. 122, no. 12, 
pp. 16–21, 2020. doi: 10.1007/s35148-020-0354-y. [Online]. 
Available: 
https://link.springer.com/article/10.1007/s35148-
020-0354-y 
[89] M. Jackson and M. Wilkerson, "MBSE-Driven Visualization 
of Requirements Allocation and Traceability," in 2016 IEEE 
Aerospace Conference, Big Sky, MT, USA, 2016, pp. 1–17, 
doi: 10.1109/AERO.2016.7500593. 
[90] R. Brahmi, I. Belhadj, M. Hammadi, N. Aifaoui, and J.-Y. 
Choley, "CAD-MBSE Interoperability for the Checking of 
Design Requirements Based on Assemblability Indicators,", 
Applied Sciences, vol. 12, no. 2, p. 566, 2021. doi: 
10.3390/app12020566. 
[Online]. 
Available: 
https://
www.mdpi.com/2076-3417/12/2/566 
[91] R. Tsui, D. Davis, and J. Sahlin, "Digital Engineering Models 
of Complex Systems using Model-Based Systems Engineering 
(MBSE) from Enterprise Architecture (EA) to Systems of 
Systems (SoS) Architectures & Systems Development Life 
Cycle (SDLC),", INCOSE International Symposium, vol. 28, 
no. 
1, 
pp. 
760–776, 
2018, 
doi: 
10.1002/j.2334-
5837.2018.00514.x. 
[92] J. Suryadevara and S. Tiwari, "Adopting MBSE in 
Construction Equipment Industry: An Experience Report," in 
2018 25th Asia-Pacific Software Engineering Conference 
(APSEC 2018): Nara, Japan, 4-7 December 2018, Nara, Japan, 
2018, pp. 512–521, doi: 10.1109/APSEC.2018.00066. 
[93] C. Mandel, J. Boning, M. Behrendt, and A. Albers, "A Model-
Based Systems Engineering Approach to Support Continuous 
Validation in PGE - Product Generation Engineering," in 2021 
IEEE International Symposium on Systems Engineering 
(ISSE), 
Vienna, 
Austria, 
2021, 
pp. 
1–8, 
doi: 
10.1109/ISSE51541.2021.9582475. 
[94] C. Steimer, J. Fischer, and J. C. Aurich, "Model-based Design 
Process for the Early Phases of Manufacturing System 
Planning using SysML,", Procedia CIRP, vol. 60, pp. 163–168, 
2017. doi: 10.1016/j.procir.2017.01.036. [Online]. Available: 
https://www.sciencedirect.com/science/article/pii/
S2212827117300379 
[95] M. Lukei, B. Hassan, R. Dumitrescu, T. Sigges, and V. 
Derksen, "Modular Inspection Equipment Design for Modular 
Structured Mechatronic Products – Model Based Systems 
Engineering Approach for an Integrative Product and 
Production System Development,", Procedia Technology, vol. 
26, pp. 455–464, 2016. doi: 10.1016/j.protcy.2016.08.058. 
[Online]. Available: https://www.sciencedirect.com/science/
article/pii/S2212017316304054 
[96] E. Windisch, C. Mandel, S. Rapp, N. Bursac, and A. Albers, 
"Approach for Model-Based Requirements Engineering for the 
Planning 
of 
Engineering 
Generations 
in 
the 
Agile 
Development of Mechatronic Systems,", Procedia CIRP, vol. 
109, pp. 550–555, 2022. doi: 10.1016/j.procir.2022.05.293. 
[Online]. Available: https://www.sciencedirect.com/science/
article/pii/S2212827122007429 
[97] M. Mistler, N. Schlueter, M. Loewer, and V. Rafalczyk, 
"Methodology for a Model-based Traceability of Requirements 
from Complaints in Business Networks Using e-DeCoDe," in 
2021 
IEEE 
International 
Conference 
on 
Industrial 
Engineering 
and 
Engineering 
Management 
(IEEM), 
Singapore, 
Singapore, 
2021, 
pp. 
1255–1259, 
doi: 
10.1109/IEEM50564.2021.9673054. 
[98] N. Schlüter, M. Mistler, M. Heinrichsmeyer, A. Ansari, and O. 
Bielefeld, "ReMaiN-Concept for Requirements Management 
and Engineering in R&D Business Networks in Germany," in 
2019 14th Annual Conference System of Systems Engineering 
(SoSE 2019): Anchorage, Alaska, USA, 19-22 May 2019, 
Anchorage, 
AK, 
USA, 
2019, 
pp. 
308–312, 
doi: 
10.1109/SYSOSE.2019.8753875. 
[99] O. Bielefeld, H. Dransfeld, and N. Schlüter, "Development of 
a Procedure for Analysis of Failure Chains in Complex 
Mechatronic Systems to Improve Sustainability,", Procedia 
Manufacturing, 
vol. 
21, 
pp. 
870–877, 
2018. 
doi: 
10.1016/j.promfg.2018.02.195. [Online]. Available: https://
www.sciencedirect.com/science/article/pii/
S235197891830235X 
[100] Melanie 
L. 
Grande, 
"Modeling 
Architectures 
and 
Parameterization of Spacecraft with Application to Persistent 
Platforms," Master Thesis, Purdue University, Indiana, USA, 
2020. [Online]. Available: https://www.semanticscholar.org/
paper/Modeling-Architectures-and-Parameterization-of-with-
Grande/03ed84c8a4d5bd388fddac471377c09d60aaae22 
[101] L. Knöös Franzén, I. Staack, C. Jouannet, and P. Krus, "An 
Ontological Approach to System of Systems Engineering in 
Product Development," in Proceedings of the 10th Aerospace 
Technology Congress, October 8-9, 2019, Stockholm, Sweden, 
2019, pp. 35–44, doi: 10.3384/ecp19162004. 
[102] W. Power, M. Wylie, P. Mellen, and P. van Bodegom, "A 
Hybrid between Model-Based Systems Engineering and Agile 
Methodologies for Simulation of Complex Weapon Systems of 
Systems," in 2021 IEEE Aerospace Conference (50100), Big 
Sky, 
MT, 
USA, 
2021, 
pp. 
1–15, 
doi: 
10.1109/AERO50100.2021.9438152. 
16
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-088-9
MODERN SYSTEMS 2023 : International Conference of Modern Systems Engineering Solutions - 2023

