A Robust Distributed Notch Filtering Algorithm for Frequency Estimation
Over Sensor Networks
Wael Bazzi
Electrical and Computer Engineering Department
American University in Dubai
Dubai, UAE
Email: wbazzi@aud.edu
Amir Rastegarnia, Azam Khalili, Mahtab Bahrami
Department of Electrical Engineering
Malayer University
Malayer, Iran
Email: {rastegarnia,khalili,bahrami}@malayeru.ac.ir
Abstract—In this paper, we consider the distributed frequency
estimation problem where nodes of a network collaborate with
each other to estimate the frequency of a single-frequency
signal from measurements corrupted by impulsive noise. In the
proposed algorithm, we reduce the impulsive noise effect by using
the maximum correntropy criteria (MCC). The MCC is a robust
optimality criterion for non-Gaussian signal processing. In the
proposed algorithm, each node employs an adaptive notch ﬁlter
to ﬁlter the input noisy measurements. The nodes collaborate
with each other to optimize a cost function (given in terms of
the MCC) in such a way that the ﬁlter output resembles as
closely as possible, the desired signal. To derive the algorithm,
we ﬁrst formulate the distributed frequency estimation problem
in terms of the MCC. Next, we use the iterative gradient ascent
approach in our solution. The developed approach will be referred
to as the diffusion notch ﬁlter-MCC (dNF-MCC) algorithm.
The effectiveness of the proposed algorithm is demonstrated by
computer simulations.
Keywords–Adaptive networks; frequency estimation; diffusion;
notch ﬁlter.
I.
INTRODUCTION
The frequency estimation problem appears in many prac-
tical applications, such as biomedical engineering, power sys-
tems, radar detection, source localization, and speech pro-
cessing [1]. Several methods have been introduced in the
literature for frequency estimation and tracking. In the absence
of measurement noise, Pronys method can be applied [2].
For noisy environments, different algorithms such as linear
prediction (LP) methods have been developed [3]. When SNR
is low and limited (short data length) is available, the principal
eigenvector (PE) method is a proper solution [4]. For the men-
tioned case, the total least squares (TLS) method can provide
better frequency estimation performance [5]. Adaptive notch
ﬁltering based methods are also developed for the frequency
estimation problem to track the time-varying frequencies.
All mentioned methods have been developed for single
processing node. However, in many practical applications, such
as radar, power systems, sensor networks we need to solve
frequency estimation problems in a fully distributed manner.
Recently, distributed estimation has become an important topic
in signal processing research due to the developments in
wireless networking and computer and sensor technologies.
Several useful distributed solutions for the estimation problem
have been developed, such as consensus strategies [6]–[8],
adaptive networks (i.e., incremental strategies and diffusion
strategies). It has been shown in [9] that adaptive networks are
more stable than consensus networks and they provide better
steady-state error performance. In this paper, we focus on an
adaptive network based solution.
We adopt the term adaptive networks from [10] to refer to
a collection of nodes that interact with each other and function
as a single adaptive entity that is able to track statistical
variations of data in real-time. The two major classes of adap-
tive networks are incremental strategy [11]–[14] and diffusion
strategy [15]–[19]. Comparing the two, incremental algorithms
require less communication among nodes of the networks
while diffusion algorithms are scalable and more robust to link
and node failure. In general, diffusion based algorithms consist
of two steps including the adaptation step, where the node
updates the weight estimate using local measurement data, and
the combination step where the information from the neighbors
are aggregated. Based on the order of these two steps, diffusion
algorithms can be categorized into two classes known as the
Combine-then-Adapt and Adapt-then-Combine (ATC).
In [20], a diffusion LMS algorithm for frequency estima-
tion over sensor networks have been introduced. Although the
algorithm works well in noisy environments, as we will show
in this paper, it performs poorly when the data are disturbed
by impulsive noises. To address this issue, we need to move
beyond mean squared error (MSE) and exploit higher order
moments of the error. To this end, we propose a new ATC
diffusion algorithm which relies on the maximum correntropy
criteria. MCC is a robust optimality criterion for non-Gaussian
signal processing and has recently been successfully applied
in adaptive ﬁltering [21]–[23]. In the proposed algorithm,
each node employs an adaptive notch ﬁlter to ﬁlter the input
noisy measurements and generate the output signal. The nodes
collaborate with each other to optimize a cost function (given
in terms of the MCC) in such a way that the ﬁlter output
resembles as closely as possible, the desired signal. To derive
the proposed algorithm, we ﬁrst formulate the distributed
frequency estimation problem in terms of the MCC. Then,
we resort to iterative gradient ascent approach to solve it and
derive the proposed algorithm, which will be referred to as
the diffusion notch ﬁlter-MCC (dNF-MCC) algorithm. We also
present simulation results to show the effectiveness of the new
proposed algorithm.
The remainder of this paper is organized as follows. Section
95
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-572-2
ICWMC 2017 : The Thirteenth International Conference on Wireless and Mobile Communications

Re{ }

Im{ }

0
w
Figure 1. Pole-zero plot for the IIR notch ﬁlter with transfer function (2).
II brieﬂy reviews the notch ﬁlter and the maximum correntropy
criteria. In Section III, the proposed algorithm is introduced.
In Section IV, we present simulation results to verify our
theoretical analysis, and we conclude in Section V.
II.
PRELIMINARY KNOWLEDGE
To make the paper self-contained, in this section, we
introduce the notch ﬁlter and maximum correntropy criteria.
A. Notch Filter
The transfer function for an M order IIR can be expressed
as
H(z) =
M
P
i=0
aiz−i
PP
i=0
biz−i
=
M
Q
i=1
(z − zi)
PQ
i=1
(z − pi)
(1)
where in (1) {zi}, i = 1, 2, · · · , M and {pi}, i = 1, 2, · · · , P
denote the zeros and poles of H(z) respectively. As H(z)
reaches zero at {zi} and inﬁnity at {pi}, then we can obtain the
transfer function of a notch ﬁlter with desired properties, by the
appropriate placement of poles and zeros. In [24], the transfer
function for a notch ﬁlter has been introduced as follows
H(z) = Y (z)
X(z) =
1 + θz−1 + z−2
1 + ρθz−1 + ρ2z−2
(2)
where θ = −2 cos(ω0T) (T is the sampling period used to
generate a discrete-time sinusoidal signal from a continuous
time signal) and 0 ≪ ρ < 1. The idea is to place constrained
pole-zero pairs with their angles equal to ω0 relative to the
horizontal axis on the pole-zero plot [24] (See Figure 1).
Taking the inverse Z transform of (2), we can obtain the input-
output relation for the notch ﬁlter as
y(n) = −ρθy(n−1)−ρ2y(n−2])+x(n)+θx(n−1)+x(n−2)
(3)
In this paper, we consider the given notch ﬁlter model in (2)
to develop our proposed algorithm.
B. Maximum Correntropy Criteria
For two scalar random variables X and Y the Correntropy
is deﬁned by [21]
Cσ(X, Y ) ≜ E [κσ(X − Y )]
= κσ(x − y)fX,Y (x, y)dxdy
(4)
where κσ(·) is a shift-invariant Mercer kernel, with the kernel
width σ > 0 and fX,Y (x, y) denotes the joint probability
distribution function of X and Y . The most widely used kernel
in correntropy is the complex Gaussian kernel which is given
by
κσ(ζ) =
1
√
2πσ exp
−|ζ|2
2σ2

(5)
Comparing correntropy with MSE, we note that Correntropy
is a local similarity measure, whereas MSE is global; meaning
that all the samples in the joint space contribute appreciably
to the value of the similarity metric, while the locality of
correntropy means that the value is primarily dictated by the
kernel function along the x = y line. Thus, we can use the
localization provided by the kernel width to reduce the effects
of outliers in the measured data. Note that the metrics, such
as MSE that rely only on the second order moment can easily
get biased in such conditions.
Remark 1. It must be noted that in practice, the joint pdf
fX,Y (x, y) is unknown and only ﬁnite number of samples
{xt, yt}, t = 1, 2, . . . , L from X and Y are available. Thus,
a sample estimator for correntropy can be deﬁned as
ˆCσ(X, Y ) = 1
L
L
X
t=1
κσ(xt − yt)2
(6)
Remark 2. In general, a larger kernel size makes a kernel-
based algorithm less robust to the outliers, while a smaller
kernel size makes the algorithm stall. Note that as σ → ∞ the
MCC approximately becomes equivalent to the MSE criterion.
III.
PROPOSED ALGORITHM
We consider a connected sensor network with N sensors
(nodes) and denote it by a set N = {1, 2, · · · , N}. We denote
by Nk the neighborhood nodes of node k where, by deﬁnition,
we have k ∈ Nk. The network is deployed to estimate the
frequency of a sinusoidal signal s(t) = A sin(ω0t+φ) through
the collected measurements by its nodes. We can assume that at
any discrete time instant n, the observed discrete measurement
by the node can be expressed by
xk(n) = Ak sin(ω0nT + φk) + ϵk(n)
(7)
where Ak and φk are the amplitude and initial phase respec-
tively and ϵk(n) denotes the observation noise term which is
modelled as zeros mean Gaussian with variance σ2
ε,k. Note that
the input-output relation for the notch ﬁlter embedded in node
k is given by
yk(n) = −ρθk(n)yk(n − 1) − ρ2yk(n − 2)
+ xk(n) + θk(n)xk(n − 1) + xk(n − 2)
(8)
where θk(n) denotes the local estimate of θ at time instant n
at node k. We can estimate θ at every node by an adaptive
ﬁlter algorithm as follows: at time instant n, every node k
uses xk(n) as the ﬁlter input and updates θk(n) to generate
the output yk(n) such that as time evolves, θk(n) converges to
−2 cos(ω0T). To this end, we need to consider a suitable cost
function. Using the MCC, we can formulate the estimation of
parameter θ as the following optimization problem:
argmax
θk(n) J(θk(n))
(9)
96
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-572-2
ICWMC 2017 : The Thirteenth International Conference on Wireless and Mobile Communications

with
J(θk(n)) = J0
N
X
k=1
n
X
m=n−L+1
exp
 
−(dk(n) − yk(n))2
2σ2
!
(10)
where J0 =
1
Lσ
√
2π. Note that once θk(n) → −2 cos(ω0T), the
notch ﬁlter will reject the single-frequency signal sin(ω0nT +
φk), so the desired output is dk(n) = 0. Hence, the cost
function in (10) will change to
J(θk(n)) =
1
σ
√
2π
N
X
k=1
exp
−y2
k(n)
2σ2

(11)
Obviously the cost function in (11) can be expressed by the
following equivalent form
J(θk(n)) =
N
X
k=1
Jk(θk(n))
(12)
where
Jk(θk(n)) =
1
σ
√
2π exp
−y2
k(n)
2σ2

(13)
Problems of the form in (11) can be solved by diffusion
adaptive networks. The general adapt-then-combine (ATC)
diffusion strategy solution for (11) is given by
φk(n) = θk(n − 1) + µ (∇θJk(θk(n − 1)))
θk(n) =
N
X
ℓ=1
cℓkφℓ(n)
(14)
where φk(n) denotes an intermediate estimate at node k,
µ > 0 is the step-size parameter and ∇θ denotes the gradient
J(θk(n−1) with respect to θk(n−1). Moreover, nonnegative
coefﬁcients cℓk satisfy the following conditions



cℓk = 0,
ℓ /∈ Nk
N
P
k=1
cℓk = 1
k ∈ Nk
(15)
Substituting yk(n) in (11) and taking the gradient with respect
to θk(n − 1) yields
∇θJk(θk(n − 1)) = −yk(n)
√
2πσ3

− ρyk(n − 1)
+ xk(n − 1)

exp
−y2
k(n)
2σ2

(16)
Replacing (16) in (14) gives the update equation for our
proposed algorithm as follows
φk(n) = θk(n − 1)
−
µ
√
2πσ3 yk(n)

−ρyk(n − 1) + xk(n − 1)

× exp
−y2
k(n)
2σ2

θk(n) =
N
X
ℓ=1
cℓkφℓ(n)
(17)
The pseudo code for the proposed algorithm is given in
Algorithm 1.
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
Figure 2. The network topology.
IV.
SIMULATION RESULTS
In this section, we present the simulation results to show
the effectiveness of the proposed algorithm. To this end, we
consider a network with N = 15 nodes as shown in Figure
2. The frequency of the sinusoidal signal is ω0 = 100 and
the sampling rate is 600 Hz. So, the observed signal by every
node k can be expressed as
xk(n) = sin(2π100nT + φk) + εk(n)
(18)
where φk is selected randomly for every node. To generate
the impulsive noise at node k, we can assume that the
measurement noise term is given by
εk(n) = gk,1(n) + bk(n)gk,2(n)
(19)
where gk,1(n) and gk,2(n) are independent, zero mean Gaus-
sian noise with variances σ2
g,1 and σ2
g,2, respectively, and bk(n)
is a switch sequence of ones and zeros which is modeled as
an independent and identically distributed Bernoulli random
process with occurrence probabilitiesprob(bk(n) = 1) = pr .
Note that the variance of gk,2(n) is chosen to be very much
larger than that of gk,1(n) so that when bk(n) = 1, a large
amplitude impulse is generated. In our simulations we set
σ2
g,1 = 0.001, σ2
g,2 = 5000σ2
g,1and pr = 0.02. For the notch
ﬁlter, we set ρ = 0.95. For the given algorithm in [20], we
select the step-size as 0.01, while for the proposed algorithm
we set µ = 0.2 and kernel size σ = 1.5. Note that these
parameters are selected for the mentioned algorithms such that
when the observation noise is Gaussian, their performance
is similar. In Figure 3, the learning curves, in terms of the
network mean-square deviation (MSD) metric, for both algo-
rithms are presented. Note that the network MSD is deﬁned
as
MSD ≜ 1
N lim
n→∞ E

|θk(n) − θ|2
From Figure 3, we can see that the proposed algorithm
achieves lower steady-state MSD than the dNF-LMS algo-
rithm. The stead-state frequency for node k = 4 for both
algorithms are plotted in Figure 4, where it is clear that the
proposed algorithm provided more robust estimates than those
of the dNF-LMS algorithm.
V.
CONCLUSIONS
In this paper, we proposed a diffusion MCC-based notch
ﬁltering algorithm for the distributed frequency estimation
problem. We resorted to iterative gradient ascent approach to
derive the proposed algorithm. Simulation results showed that
the proposed algorithm outperforms the available dNF-LMS
algorithm when data are corrupted by impulsive noise.
97
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-572-2
ICWMC 2017 : The Thirteenth International Conference on Wireless and Mobile Communications

Algorithm 1 Proposed Distributed Stackelberg Algorithm
1: Initialization
2: for n = 3, 4, · · · do
3:
For k ∈ Nk initialize θk(1), θk(2),θk(3), µ
4:
Adaptation
5:
Every node updates φk(n) as φk(n) = θk(n − 1) −
µ
√
2πσ3 yk(n) (−ρyk(n − 1) + xk(n − 1)) exp

−y2
k(n)
2σ2

6:
Combination
7:
Every node updates θk(n) as θk(n) =
N
P
ℓ=1
cℓkφℓ(n)
8: end for
0
500
1000
1500
2000
−45
−40
−35
−30
−25
−20
−15
−10
−5
iteration
MSDk
 
 
dNF−LMS
Proposed
Figure 3. The network MSD learning curves for dNF-LMS and the proposed
algorithm.
200
400
600
800 1000 1200 1400 1600 1800 2000
50
60
70
80
90
100
110
120
130
140
iteration
Steady−state frequency
 
 
dNF−LMS
Proposed
Figure 4. steady-state frequency estimations for dNF-LMS and the proposed
algorithm.
REFERENCES
[1]
B. G. Quinn and E. J. Hannan, The Estimation and Tracking of
Frequency, ser. Cambridge Series in Statistical and Probabilistic Math-
ematics.
Cambridge University Press, 2001.
[2]
V. Slivinskas and V. ˇSimonyt´e, “Cram´er-rao bound for estimates of
frequencies and damping factors of real superimposed signals with
multiple poles in noise,” Acta Applicandae Mathematica, vol. 38, no. 1,
1995, pp. 55–78.
[3]
T. J. Ulrych and R. W. Clayton, “Time series modelling and maximum
entropy,” Physics of the Earth and Planetary Interiors, vol. 12, no. 2,
1976, pp. 188 – 200.
[4]
D. Tufts and R. Kumaresan, “Singular value decomposition and im-
proved frequency estimation using linear prediction,” IEEE Transactions
on Acoustics, Speech, and Signal Processing, vol. 30, no. 4, Aug 1982,
pp. 671–675.
[5]
M. D. Rahman and K.-B. Yu, “Total least squares approach for
frequency estimation using linear prediction,” IEEE Transactions on
Acoustics, Speech, and Signal Processing, vol. 35, no. 10, Oct 1987,
pp. 1440–1454.
[6]
R. Olfati-Saber and R. M. Murray, “Consensus problems in networks
of agents with switching topology and time-delays,” IEEE Transactions
on Automatic Control, vol. 49, no. 9, Sept 2004, pp. 1520–1533.
[7]
A. Nedic, A. Ozdaglar, and P. A. Parrilo, “Constrained consensus and
optimization in multi-agent networks,” IEEE Transactions on Automatic
Control, vol. 55, no. 4, April 2010, pp. 922–938.
[8]
L. Chen and J. Frolik, “Active consensus over sensor networks via
selective communication,” in 2012 9th Annual IEEE Communications
Society Conference on Sensor, Mesh and Ad Hoc Communications and
Networks (SECON), June 2012, pp. 389–397.
[9]
S. Y. Tu and A. H. Sayed, “Diffusion strategies outperform consensus
strategies for distributed estimation over adaptive networks,” IEEE
Transactions on Signal Processing, vol. 60, no. 12, Dec 2012, pp. 6217–
6234.
[10]
A. H. Sayed, “Adaptive networks,” Proceedings of the IEEE, vol. 102,
no. 4, April 2014, pp. 460–497.
[11]
C. G. Lopes and A. H. Sayed, “Incremental adaptive strategies over
distributed networks,” IEEE Transactions on Signal Processing, vol. 55,
no. 8, Aug 2007, pp. 4064–4077.
[12]
L. Li, J. A. Chambers, C. G. Lopes, and A. H. Sayed, “Distributed
estimation over an adaptive incremental network based on the afﬁne
projection algorithm,” IEEE Transactions on Signal Processing, vol. 58,
no. 1, Jan 2010, pp. 151–164.
[13]
C. G. Lopes and A. H. Sayed, “Randomized incremental protocols
over adaptive networks,” in 2010 IEEE International Conference on
Acoustics, Speech and Signal Processing, March 2010, pp. 3514–3517.
[14]
A. Khalili, M. A. Tinati, and A. Rastegarnia, “An incremental block
lms algorithm for distributed adaptive estimation,” in 2010 IEEE
International Conference on Communication Systems, Nov 2010, pp.
493–496.
[15]
C. G. Lopes and A. H. Sayed, “Diffusion least-mean squares over
adaptive networks: Formulation and performance analysis,” IEEE Trans-
actions on Signal Processing, vol. 56, no. 7, July 2008, pp. 3122–3136.
[16]
F. S. Cattivelli, C. G. Lopes, and A. H. Sayed, “Diffusion recursive
least-squares for distributed estimation over adaptive networks,” IEEE
Transactions on Signal Processing, vol. 56, no. 5, May 2008, pp. 1865–
1877.
[17]
R. Nassif, C. Richard, A. Ferrari, and A. H. Sayed, “Multitask diffusion
adaptation over asynchronous networks,” IEEE Transactions on Signal
Processing, vol. 64, no. 11, June 2016, pp. 2835–2850.
[18]
X. Zhao and A. H. Sayed, “Distributed clustering and learning over
networks,” IEEE Transactions on Signal Processing, vol. 63, no. 13,
July 2015, pp. 3285–3300.
[19]
Z. J. Towﬁc and A. H. Sayed, “Stability and performance limits of
adaptive primal-dual networks,” IEEE Transactions on Signal Process-
ing, vol. 63, no. 11, June 2015, pp. 2888–2903.
[20]
C. Li and H. Wang, “Distributed frequency estimation over sensor
network,” IEEE Sensors Journal, vol. 15, no. 7, July 2015, pp. 3973–
3983.
98
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-572-2
ICWMC 2017 : The Thirteenth International Conference on Wireless and Mobile Communications

[21]
A. Singh and J. C. Principe, “Using correntropy as a cost function in
linear adaptive ﬁlters,” in 2009 International Joint Conference on Neural
Networks, June 2009, pp. 2950–2955.
[22]
A. Khalili, A. Rastegarnia, M. K. Islam, and T. Y. Rezaii, “Steady-state
tracking analysis of adaptive ﬁlter with maximum correntropy criterion,”
Circuits, Systems, and Signal Processing, vol. 36, no. 4, 2017, pp. 1725–
1734.
[23]
A. Khalili, A. Rastegarnia, and S. Sanei, “Robust frequency estimation
in three-phase power systems using correntropy-based adaptive ﬁlter,”
IET Science, Measurement Technology, vol. 9, no. 8, 2015, pp. 928–
935.
[24]
L. Tan and J. Jiang, “Novel adaptive iir ﬁlter for frequency estimation
and tracking [dsp tips tricks],” IEEE Signal Processing Magazine,
vol. 26, no. 6, November 2009, pp. 186–189.
99
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-572-2
ICWMC 2017 : The Thirteenth International Conference on Wireless and Mobile Communications

