Autonomic Pulse Communications for Adaptive Transmission Range in 
Decentralised Robot Swarms
Liam McGuigan, Roy Sterritt, Glenn Hawe 
School of Computing, Faculty of Computing, Engineering and the Built Environment 
Ulster University 
Jordanstown, N. Ireland 
email: mcguigan-l8@ulster.ac.uk, r.sterritt@ulster.ac.uk, gi.hawe@ulster.ac.uk 
 
Abstract— Robot swarms, consisting of large numbers of 
individual robots collectively working towards a common goal, 
must be autonomous in order to carry out their task without 
regular human input. Further, there is a requirement that such 
swarms be autonomic, capable of self-management to enable 
operation in distant, complex or changing environments. 
Underpinning the ability of the swarm to cooperate and adapt 
is the communication between individual robots. Wireless 
communication relying on a fixed transmission range may be 
subject to connectivity loss, restrain robot motion, or be an 
inefficient use of energy. This research makes use of robot 
swarm simulation to develop Autonomic Pulse Communication 
as a means of adaptively selecting a transmission range, based 
on the existing concept of Pulse Monitoring to allow 
individuals within the swarm to estimate the local swarm 
density. The system is able to successfully share data 
originating in a single robot with the rest of the swarm within 
an allotted time period. It is also found to be extremely robust 
to communications loss, completing the task when the chance 
of a successful message receipt is as low as 5%. 
Keywords- Swarm robotics; Self-adaptation; Autonomic 
Computing; Swarm communication; Simulation. 
 
I. 
 INTRODUCTION 
Swarm robotics, the study of how individual behaviours 
within a group of robots may combine through local 
interactions to create a more complex set of behaviours [1], 
has potential applications in fields such as space exploration 
[2], precision agriculture [3], and disaster response [4], 
where many small, simple robots can cover a much larger 
area than a single monolithic craft. 
The size of the swarm, its decentralised nature, and the 
conditions in which it may potentially operate mean that a 
swarm should be able to act on its own, adjusting its 
behaviour according to a changing situation without the need 
for any external guidance [5]. Autonomic Computing 
concepts [6][7] can assist in achieving swarm self-
adaptation, making use of a Monitor, Analyse, Plan and 
Execute loop, with a shared Knowledge base, known as 
MAPE-K, as described in [6] to assess the situation, identify 
any changes necessary, and implement them. 
As swarms are decentralised, their ability to adapt 
depends on their cooperation through sharing information on 
which to base decisions and come to an agreement on actions 
to be taken. When the swarms are reliant on local 
communication with neighbouring robots, the effective range 
of that communication matters. Too small, and robot 
behaviour may need to be constrained to maintain 
communication links with other members of the swarm. Too 
large, and it may be an inefficient use of battery power, lead 
to communication interference, or even be detrimental to 
overall performance. 
In previous work, a decentralised swarm made use of an 
autonomic system to help adjust a range over which robots 
would broadcast for help in a foraging task [8]. This worked 
by using a fixed range pulse message between robots to help 
estimate the density, but it was found that the range of this 
pulse message needed to be set for differing swarm densities. 
If this is not initially known, performance would be 
degraded. 
The objective of this work is to implement an adaptive 
system for setting the range over which a robot broadcasts 
information, according to the local density of the swarm, 
detected at run-time. 
The rest of this paper is structured as follows. Section II 
discusses related work in swarm self-adaptation and 
autonomic systems used to develop the Autonomic Pulse 
Communication (APC) system presented. Section III 
discusses the design of the APC system and how it estimates 
local density. Section IV describes the data sharing task 
used, Section V describes the test scenarios used to evaluate 
the system, and Section VI presents the results of those tests. 
Section VII discusses the results, and Section VIII concludes 
the paper with a summary and directions for future research. 
II. 
RELATED WORK 
In the context of a robot swarm, a distinction can be made 
between the adaptation of individual robots, and that of the 
swarm as a whole. This can be related to the idea of self-
expression [9][10], in which the swarm at large can be 
reconfigured. Such swarm-level adaptation can then take 
advantage of wider knowledge to make changes to swarm 
composition [11], or cooperative strategies [12]. 
To achieve swarm-level adaptation, however, cooperation 
and communication becomes essential. Individuals must 
share data in order to collectively recognize the need to 
adapt, and then to decide on the new course of action. 
Consensus problems, typified in swarm research as the best-
of-n problem [13], in turn require some means of 
communicating the currently held opinion of any one robot 
to neighbours. 
Direct communication between neighbours requires a 
degree of connectivity between the robots in the swarm. All-
15
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

time connectivity uses approaches such as control laws to 
balance both the task at hand and the need for connectivity 
[14][15]. Such approaches necessarily restrict the movement 
of individual robots, and may be detrimental to performance 
[16]. Relay approaches may help with this, by delegating the 
job of providing connectivity to only some portion of the 
swarm [17][18]. 
Relaxing the need for all-time connectivity, path planning 
approaches [16] or ferries [19] may allow for an intermittent 
approach, but add complexity to swarm behaviour and 
require some or all robots to halt their task periodically. 
The 
absence 
of 
explicit 
attempts 
to 
maintain 
communications link may be described as opportunistic, 
with robots transferring data to others in range when their 
paths happen to cross. This is the least restrictive approach 
and does not require dedicated roles or periodic rendezvous, 
but at the expense of guaranteed connectivity. 
A crucial factor, regardless of the approach taken, is the 
communication range. The further apart any two robots may 
be when maintaining a communication link between them, 
the freer the robots are to move, and the fewer the number 
of robots that may be critical to network connectivity. As 
higher ranges may require more power and result in network 
interference [20], and lower ranges may decrease 
connectivity, finding a suitable broadcast range becomes 
desirable. 
The mechanism for achieving this, described in the next 
section, is based on the existing concept of Pulse 
Monitoring (abbreviated to PBM due to its extension of 
Heart Beat Monitoring, HBM) [21], in which a periodic 
heartbeat message has a pulse encoded within it, allowing a 
component in a system to indicate its current health status. 
The concept has been explored in applications such as 
personal computers [22], telecommunications [23], and 
cluster management [24]. In order to support a reflexive 
reaction by minimising the processing required by a 
recipient, health-related data may be included in the 
message [23]. 
Pulse monitoring may be applied to a robot swarm, such 
as in [25], where it may be a means for a ruler craft during 
the Prospecting Asteroid Mission to monitor the health of 
workers under their control. However, another perspective 
may be used. In a dynamic swarm, where there is a need for 
scalability, it may be undesirable for one robot to track 
another’s health over a significant period of time, and it 
cannot be expected that any one robot would rely upon 
another specific robot to assist in a task. Instead, pulses 
received during a small interval may represent the health of 
the local neighbourhood, allowing a robot to determine if its 
own status is abnormal, or provide early-warning of danger 
by noting problems developing in neighbouring robots. 
Pulse monitoring is typically concerned with reporting on 
the health of whatever aspect is being monitored, as a form 
of failure management. In this paper, the concept is adapted 
to allow an individual robot to measure the local density of 
the swarm through the receipt of pulse messages from 
neighbouring robots that contain information about the 
source robots’ positions. In this way, the “I am healthy” 
signal is replaced with one saying “I am here”. The design 
of the APC system is described in the next section. 
III. 
AUTONOMIC PULSE COMMUNICATIONS 
The goal of the APC system described in this paper is to 
provide a mechanism for the adaptive adjustment of the 
transmission range used for inter-robot communication, in 
order to avoid the pitfalls that come with needing to set the 
range used at the start of the mission. 
To achieve this, the concept of PBM described in the 
previous section is adapted to repurpose the regular signal 
sent by each robot. In the Decentralised Autonomic 
Manager described in [8], robots used periodic pulses to 
determine the local density of the swarm, but the pulse 
required a fixed transmission range used by each robot. If 
different transmission ranges were to be used, the density 
could not be easily calculated. 
This problem is resolved by having each pulse also 
contain the position of the sending robot, allowing the 
distance from the pulse origin to the receiving robot to be 
calculated. Alternatively, situated communication [26] may 
be used to derive distance information from the received 
signal. Whichever approach is taken, the distance may be 
used to estimate the local density. 
Fig. 1 (a) shows a case in which Robot A has a number of 
neighbours, all broadcasting pulse messages at different 
ranges, each of which is transmitted far enough to reach the 
robot. To simplify the example, all robots are shown to be 
sending their messages simultaneously, but the same 
process applies as long as all messages are received within 
the same short period of time. Each pulse contains the 
position of its sending robot. 
By totalling the measured ranges of the received pulses, 
the APC system is able to calculate the average distance of 
pulse messages received. The local density, ρ, is then 
calculated as: 
 
ρ = n / πd̅ 2, 
(1) 
where n is the number of received pulses in the time period, 
and d̅  is their mean distance. 
Given a density, the APC system may then use a density-
pulse range relationship provided in its knowledge base, 
 
 
(a) 
(b) 
Figure 1.  A robot receives pulse messages from neighbours, and uses 
them to calculate a suitable range for its own pulse. 
16
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

calculated based on the needs of the task. In Fig. 1 (b), 
Robot A sends out its own pulse, with the range determined 
by that relationship, enabling its pulse message to reach its 
neighbours. 
The APC system is only able to calculate a suitable local 
density if it receives pulse messages during the period 
between sending its own pulses. If none are received, the 
robot is considered to be isolated from the rest of its swarm, 
and so it gradually increases its broadcast range on 
subsequent pulses. This increases the chance that the robot 
will later reconnect with the other robots, in turn influencing 
future selections of the transmission range. 
In addition to the distance information required by the 
APC system, pulse messages may also share arbitrary data, 
sent on each broadcast, for the purpose of spreading 
information throughout the swarm. In this work, the data 
packet is small and does not grow with size, so a simple 
strategy of sharing data with neighbouring robots is used, in 
which no individual robot needs to care about which robots 
receive a broadcast. This approach scales with the swarm 
size, as the underlying behaviour of the robots does not need 
to change for larger swarms. 
IV. 
DATA SHARING TASK 
This research employs a time-stepped simulation of a 
homogeneous swarm of agents tasked with sharing a piece 
of data throughout the swarm. The purpose of this task is to 
determine how well a swarm of robots may share a single 
piece of information, initially held by only one robot in the 
swarm, with the rest of the members. The swarm of robots, 
each using an APC system configured with a pulse period of 
10 simulation ticks, and a fixed pulse range of 10 units, is 
placed in a circular map. 
Each robot stores a Boolean flag, initially set to false. At 
the start of each run, a robot is selected at random from the 
swarm and their flag is set to true. Any robot whose flag is 
true will share this data via the APC system. Receipt of the 
flag will cause a robot to set its own flag to true, and 
commence its own sharing. 
During the test, the robots may wander freely throughout 
the map. Each tick of the simulation, a robot picks a random 
direction in two dimensions. If the robot is able to move 
forward one unit distance without leaving the map, the robot 
moves to that location, otherwise it will not move in this 
simulation update. 
The test is left to run for 250 simulation ticks, and at the 
end, the success of the swarm in sharing the data is scored 
by the percentage of robots with their flag set to true. The 
test duration used will impact the density-range calculation, 
as the ideal range data used will be that which enables the 
swarm to reliably share the data with all members within 
250 ticks. 
All tests were run with the APC system set to stagger 
pulse 
times, 
rather 
than 
having 
all 
robots 
pulse 
simultaneously. This removes any requirement of the APC 
system to synchronise robot behaviour, while also avoiding 
flooding the available bandwidth with messages sent 
simultaneously. 
V. 
TEST SCENARIOS 
The following subsections describe the particular test 
scenarios run. Each test was run 50 times, and the results 
averaged across all runs. 
A. Density-Pulse Range Relationship 
To determine the relationship between the swarm 
density and the ideal pulse range to use, a set of simulations 
was run, for swarm sizes of 50, 100, 200, 500 and 1,000 
robots, and maps with radii of 25, 50, 75 and 100 units. 
The ideal pulse range for a given combination was 
determined by taking the lowest pulse range for which over 
99.5% of the swarm, on average, received the data. 
B. Pulse Period 
This test explores how the APC pulse period affects the 
ability of the swarm to share the data. A map with a radius 
of 100 units was used, with the pulse range fixed at 10 units. 
The test was repeated with the five swarm sizes from the 
previous test, and pulse periods of 2, 5, 10, 15, 20 and 25 
ticks. Each combination of swarm size and pulse period was 
tested, and the scores from each scenario are compared to 
evaluate the effects. 
C. Adaptive Pulse Range 
The equation relating density and pulse range derived 
from the previous test is now used in the APC system to 
adaptively adjust the pulse range, based on the local swarm 
density. This test looks at the ability of this adaptive APC 
system to set an appropriate pulse range, and therefore share 
the data throughout the swarm. 
The maps and robot counts are the same as those listed 
from the Density – Pulse Range tests. Each APC system 
starts with a pulse range of one unit, and uses a period of 10 
ticks. The score for each combination of map and swarm 
size is measured, and compared against the best performing 
fixed range communication established in the previous test. 
D. Communications Loss 
To explore the impact of communications no longer 
being guaranteed to arrive, a swarm of 200 robots is tested 
in a map with a radius of 100 units. The simulation is 
configured with a probability of any robot receiving a 
broadcast range, and the test is run with probabilities of 
20%, 15%, 10%, 5%, 4%, 3%, 2% and 1%, together with a 
test of the fixed range communications with a probability of 
communication success set to 5%. Every 10 ticks, the 
number of robots that have the flag set to true are recorded, 
and the results compared. 
VI. 
RESULTS 
The following subsections discuss the results of the tests 
described above. 
17
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

A. Density-Pulse Range Relationship 
Table I shows the best performing ranges and their 
respective scores for each combination of map radius and 
swarm size, while Fig. 2 shows the relationship between 
swarm density and best performing pulse range. 
 
Fitting a trend line to the plot leads to an equation for 
determining the pulse range to use, given the density of the 
swarm: 
 
r = 0.5884 × ρ-0.652, 
(2) 
where r is the pulse range, and ρ is the swarm density. 
B. Pulse Period 
Fig. 3 shows the performance for each size of swarm, as 
the pulse period is increased. Increasing the period results in 
a drop in the score achieved, which is less prominent in the 
largest swarms, and is most clearly seen with a swarm of 
200 robots. 
 
C. Adaptive Pulse Range 
Table II shows the performance of the swarm, and 
average pulse range used, for each combination of map 
radius and swarm size. All scenarios achieved greater than 
the 99.5% score used as a benchmark in the fixed range 
tests, and all but three of the scenarios received a perfect 
score. The average pulse range used by the swarm can be 
compared against the ideal fixed ranges shown in Table I, 
and shows that higher density swarms make use of shorter 
range pulses on average. 
D. Communications Loss 
Fig. 4 shows the performance of the swarm of 200 
robots on a map with a 100-unit radius, in scenarios where 
the probability of a communications broadcast being 
received by a robot was 20% or lower. In addition, the chart 
shows the performance of the APC system running with a 
fixed pulse range, where communications have a 5% 
probability of succeeding. 
 
Figure 3.  Score achieved by the swarm for each pulse period tested. 
TABLE I.  
IDEAL PULSE RANGES FOR EACH MAP AND SWARM SIZE 
Swarm Size 
Map Radius 
25 
50 
75 
100 
 
Range 
Score 
Range 
Score 
Range 
Score 
Range 
Score 
50 
5 
99.84% 
15 
99.72% 
25 
99.67% 
38 
99.88% 
100 
3 
99.82% 
10 
99.62% 
17 
99.54% 
24 
99.60% 
200 
2 
99.97% 
7 
99.94% 
11 
99.57% 
17 
99.53% 
500 
1 
99.96% 
4 
99.94% 
7 
99.90% 
10 
99.74% 
1,000 
1 
100% 
3 
100% 
5 
99.95% 
7 
99.87% 
TABLE II.  
PULSE RANGES AND SCORES WHEN USING APC 
Swarm Size 
Map Radius 
25 
50 
75 
100 
 
Range 
Score 
Range 
Score 
Range 
Score 
Range 
Score 
50 
7.28 ± 0.32 
100% 
16.27 ± 0.33 
100% 
23.34 ± 0.47 
99.96% 
29.42 ± 0.51 
99.64% 
100 
4.61 ± 0.14 
100% 
10.68 ± 0.21 
100% 
16.50 ± 0.18 
100% 
21.63 ± 0.26 
99.98% 
200 
3.04 ± 0.07 
100% 
7.14 ± 0.13 
100% 
11.06 ± 0.17 
100% 
14.87 ± 0.19 
100% 
500 
1.89 ± 0.02 
100% 
4.02 ± 0.08 
100% 
6.35 ± 0.07 
100% 
8.98 ± 0.11 
100% 
1,000 
1.38 ± 0.00 
100% 
2.65 ± 0.03 
100% 
4.18 × 0.05 
100% 
5.82 ± 0.06 
100% 
 
 
Figure 2.  Plot of ideal pulse range against swarm density. 
18
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

 
VII. DISCUSSION 
The results show that a relationship may be established 
between the performance of the swarm and the pulse range 
used for transmitting the data, as seen in Fig. 2. This 
relationship is specific to the task employed, in this case the 
sharing of data to at least 99.5% of the swarm within 250 
ticks. Different tasks, with different requirements for 
success, will necessarily result in a different relationship 
being established. 
Increasing the pulse period has a detrimental effect on 
swarm performance, although it would reduce the energy 
used as fewer pulses would be sent. Balancing the 
performance needs of the swarm with the energy cost is an 
important factor, so a pulse period of 10 ticks was chosen 
for the adaptive APC and communications loss tests. 
Halving the period to 5 ticks would double the expected 
energy usage for only a small gain in performance, as seen 
in Fig. 3. Any performance decrease from using a longer 
period can be balanced through pulse range selection in the 
adaptive APC system. 
The results in Table II show that the adaptive APC 
system, when starting with an initial pulse range of just one 
unit, is able to determine an appropriate range for a robot to 
broadcast at and enable the sharing of the data throughout 
the swarm within the allotted 250 ticks. 
When comparing the average pulse range in Table II to 
the best fixed ranges in Table I, the adaptive APC system is 
found to have a slightly higher range on average in lower 
density swarms, but in higher density swarms it can reduce 
the average pulse range, allowing the swarm to expend less 
energy. In the more dense swarms, not every robot will 
detect the same local density, so the APC system enables the 
robots to reduce their pulse range while in higher density 
areas. 
The APC system was also found to be extremely robust 
to communications loss, being able to successfully share the 
data within 250 ticks even when the probability of a 
successful message is as low as 5%, and it performs much 
better than the fixed pulse range at that level. A lower 
number of pulses being successfully received will result in a 
lower density estimate being made by the APC system, and 
a corresponding increase in the pulse range to reach more 
robots. While this system balances, increasing pulse ranges 
will increase energy usage. 
It may be preferable for the swarm in cases of extremely 
high message loss to recognise the problem and find an 
alternative solution, perhaps contracting the swarm or 
temporarily increasing the period between pulses. Adaptive 
adjustment of the pulse period may help reduce energy 
usage overall, and this may be a topic for future work. 
VIII. CONCLUSION AND FUTURE WORK 
This research presented a system for adaptively adjusting 
the range of communications between robots based on the 
density of the swarm, by adapting the existing concept of 
Pulse Monitoring. By replacing the “I am healthy” message 
with one saying “I am here”, a receiving robot can use the 
aggregate data presented by multiple received pulses to 
estimate the local density of the swarm. 
In a task to share a piece of data with the rest of the 
swarm, the Autonomic Pulse Communications system was 
able to adaptively determine the pulse range to use to achieve 
excellent results, ensuring that 100% of the swarm received 
the data within the allotted time in all but three scenarios. 
The results show the system selecting shorter pulse ranges 
when the swarms are denser, and compare favourably with 
the best performing fixed pulse ranges used to establish the 
relationship between density and pulse range that the system 
uses. Further, the APC system was shown to be extremely 
robust to communications loss, as the system adapts to a 
decrease in the number of received messages by increasing 
the pulse range, thus increasing the chances of the message 
being received by some robots. 
The APC system therefore shows promise, allowing a 
swarm to maintain communication links between its 
members while imposing fewer restrictions on the behaviour 
of the robots. Should the swarm suffer loss of robots over the 
course of the mission, the resulting lower density of the 
swarm may be compensated for automatically by the system. 
Individual pulse messages used in this work were 
simplified, by considering them to be atomic actions. Larger 
amounts of data may take longer to broadcast than small 
packets, and this will impact the ability of a robot to 
successfully receive all of the data in a single broadcast. The 
motion of the robots may result in a recipient moving out of 
range before the transmission is completed. Additionally, 
 
(a) 
up to 20% 
 
(b) up to 5%, with fixed pulse range 
Figure 4.  Performance of swarm under communication loss. 
19
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

communications failure was simply modelled as a random 
chance of failure, not taking into account the operating 
conditions or physical obstructions in the path. 
Future work may investigate the impact of those aspects 
on the system, as well as applying the APC system in a more 
complex task, such as the foraging scenarios used in [8], or a 
collective decision-making task, where the data being 
transferred has a specific use that impacts performance of the 
wider task. Another avenue of interest may be the 
mechanism by which data is shared. As information grows in 
complexity, it may be desirable to selectively share only a 
portion of data in order to minimise the time and energy 
costs of data transfer, keeping the pulse messages short. 
Further work may also investigate the impact of other 
factors in the ability of the swarm to share data. In this work, 
the data to be shared was fixed, so a changing data set that 
requires frequent reporting should be investigated. Also of 
note is the movement of the swarm, which supports data 
sharing through changing the set of neighbours receiving a 
robot’s pulse. Different robot speeds, more limited mixing, 
and the absence of motion altogether may impact the 
performance of the system. 
REFERENCES 
[1] 
E. Sahin, ‘Swarm robotics: From sources of inspiration to 
domains of application’, in Swarm Robotics, vol. 3342, E. 
Sahin and W. M. Spears, Eds. 2005, pp. 10–20. 
[2] 
M. G. Hinchey, R. Sterritt, and C. Rouff, ‘Swarms and 
Swarm Intelligence’, Computer, vol. 40, no. 4, pp. 111–113, 
Apr. 2007. 
[3] 
V. Trianni, J. IJsselmuiden, and R. Haken, ‘The SAGA 
concept: Swarm Robotics for Agricultural Applications’, 
Technical Report, 2016. Accessed: Dec. 21, 2022. [Online]. 
Available: 
http://laral.istc.cnr.it/saga/wp-
content/uploads/2016/09/saga-dars2016.pdf. 
[4] 
L. Abraham, S. Biju, F. Biju, J. Jose, R. Kalantri, and S. 
Rajguru, ‘Swarm Robotics in Disaster Management’, in 
2019 International Conference on Innovative Sustainable 
Computational Technologies (CISCT), Oct. 2019, pp. 1–5. 
[5] 
G. Beni, ‘From Swarm Intelligence to Swarm Robotics’, in 
Swarm Robotics, Berlin, Heidelberg, 2005, pp. 1–9. 
[6] 
J. O. Kephart and D. M. Chess, ‘The vision of autonomic 
computing’, Computer, vol. 36, no. 1, pp. 41–50, Jan. 2003. 
[7] 
E. Vassev, R. Sterritt, C. Rouff, and M. Hinchey, ‘Swarm 
Technology at NASA: Building Resilient Systems’, IT 
Prof., vol. 14, no. 2, pp. 36–42, Mar. 2012. 
[8] 
L. McGuigan, R. Sterritt, G. Wilkie, and G. Hawe, 
‘Decentralised Autonomic Self-Adaptation in a Foraging 
Robot Swarm’, Int. J. Adv. Intell. Syst., vol. 15, no. 1 & 2, 
pp. 12–23, 2022. 
[9] 
M. Puviani, G. Cabri, and L. Leonardi, ‘Enabling Self-
Expression: The Use of Roles to Dynamically Change 
Adaptation Patterns’, in 2014 IEEE Eighth International 
Conference on Self-Adaptive and Self-Organizing Systems 
Workshops, Imperial College, London, United Kingdom, 
Sep. 2014, pp. 14–19. 
[10] 
F. Zambonelli, N. Bicocchi, G. Cabri, L. Leonardi, and M. 
Puviani, ‘On Self-Adaptation, Self-Expression, and Self-
Awareness in Autonomic Service Component Ensembles’, 
in 2011 Fifth IEEE Conference on Self-Adaptive and Self-
Organizing Systems Workshops, Ann Arbor, MI, USA, Oct. 
2011, pp. 108–113. 
[11] 
J. Zelenka, T. Kasanický, and I. Budinská, ‘A Self-adapting 
Method for 3D Environment Exploration Inspired by 
Swarm Behaviour’, in Advances in Service and Industrial 
Robotics, Cham, 2018, pp. 493–502. 
[12] 
C. Saunders, R. Sterritt, and G. Wilkie, ‘Autonomic 
Cooperation Strategies for Robot Swarms’, in Adaptive 
2016: The Eighth International Conference on Adaptive and 
Self-Adaptive Systems and Applications, Rome, Italy, Mar. 
2016, pp. 20–27. 
[13] 
G. Valentini, E. Ferrante, and M. Dorigo, ‘The Best-of-n 
Problem in Robot Swarms: Formalization, State of the Art, 
and Novel Perspectives’, Front. Robot. AI, vol. 4, 2017, 
Accessed: 
Jan. 
03, 
2023. 
[Online]. 
Available: 
https://www.frontiersin.org/articles/10.3389/frobt.2017.000
09. 
[14] 
B. Capelli and L. Sabattini, ‘Connectivity Maintenance: 
Global and Optimized approach through Control Barrier 
Functions’, in 2020 IEEE International Conference on 
Robotics and Automation (ICRA), May 2020, pp. 5590–
5596. 
[15] 
B. Capelli, H. Fouad, G. Beltrame, and L. Sabattini, 
‘Decentralized Connectivity Maintenance with Time Delays 
using 
Control 
Barrier 
Functions’, 
in 
2021 
IEEE 
International Conference on Robotics and Automation 
(ICRA), May 2021, pp. 1586–1592. 
[16] 
Y. Kantaros, M. Guo, and M. M. Zavlanos, ‘Temporal 
Logic Task Planning and Intermittent Connectivity Control 
of Mobile Robot Networks’, IEEE Trans. Autom. Control, 
vol. 64, no. 10, pp. 4105–4120, Oct. 2019. 
[17] 
N. Majcherczyk, A. Jayabalan, G. Beltrame, and C. 
Pinciroli, 
‘Decentralized 
Connectivity-Preserving 
Deployment of Large-Scale Robot Swarms’, in 2018 
IEEE/RSJ International Conference on Intelligent Robots 
and Systems (IROS), Oct. 2018, pp. 4295–4302. 
[18] 
V. S. Varadharajan, D. St-Onge, B. Adams, and G. 
Beltrame, 
‘Swarm 
Relays: 
Distributed 
Self-Healing 
Ground-and-Air Connectivity Chains’, IEEE Robot. Autom. 
Lett., vol. 5, no. 4, pp. 5347–5354, Oct. 2020. 
[19] 
P. Smith, R. Hunjet, A. Aleti, and J. Barca, ‘Data Transfer 
via UAV Swarm Behaviours’, J. Telecommun. Digit. Econ., 
vol. 6, pp. 35–57, Jun. 2018. 
[20] 
P. Gupta and P. R. Kumar, ‘The capacity of wireless 
networks’, IEEE Trans. Inf. Theory, vol. 46, no. 2, pp. 388–
404, Mar. 2000. 
[21] 
R. Sterritt, ‘Pulse monitoring: extending the health-check 
for the autonomic grid’, in IEEE International Conference 
on Industrial Informatics, 2003. INDIN 2003. Proceedings., 
Banff, AB, Canada, 2003, pp. 433–440. 
[22] 
R. Sterritt and S. Chung, ‘Personal autonomic computing 
self-healing tool’, in Proceedings. 11th IEEE International 
Conference and Workshop on the Engineering of Computer-
Based Systems, 2004., May 2004, pp. 513–520. 
[23] 
R. Sterritt, D. Gunning, A. Meban, and P. Henning, 
‘Exploring 
autonomic 
options 
in 
an unified 
fault 
management architecture through reflex reactions via pulse 
monitoring’, in Proceedings. 11th IEEE International 
Conference and Workshop on the Engineering of Computer-
Based Systems, 2004., Brno, Czech Republic, 2004, pp. 
449–455. 
20
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

[24] 
W. Truszkowski, M. Hinchey, and R. Sterritt, ‘Towards an 
Autonomic Cluster Management System (ACMS) with 
Reflex Autonomicity: Workshop on Reliability and 
Autonomic Management in Parallel and Distributed 
Systems (RAMPDS-05) at ICPADS-2005’, Unkn. Host 
Publ., pp. 478–482, Jul. 2005. 
[25] 
E. 
Vassev 
and 
M. 
Hinchey, 
‘Self-Awareness 
in 
Autonomous Nano-Technology Swarm Missions’, in 2011 
Fifth IEEE Conference on Self-Adaptive and Self-
Organizing Systems Workshops, Ann Arbor, MI, USA, Oct. 
2011, pp. 133–136. 
[26] 
K. Støy, ‘Using Situated Communication in Distributed 
Autonomous Mobile Robotics’, SCAI, vol. 1, pp. 44–52, 
Feb. 2001. 
 
21
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-110-7
EMERGING 2023 : The Fifteenth International Conference on Emerging Networks and Systems Intelligence

