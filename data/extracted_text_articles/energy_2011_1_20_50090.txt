Energy-Aware Routing in the Cognitive Packet
Network
Erol Gelenbe and Toktam Mahmoodi
Intelligent Systems & Networks Group
Department of Electrical & Electronic Engineering
Imperial College, SW7 2BT London UK
{e.gelenbe, t.mahmoodi}@imperial.ac.uk
Abstract—An energy aware routing protocol (EARP) is pro-
posed to minimise a performance metric that combines the total
consumed power in the network and the QoS that is speciﬁed
for the ﬂows. The algorithm uses source routing based on the
functionalities provided by the Cognitive Packet Network (CPN),
running autonomously at each input node to the network based
on smart packets which gather relevant information throughout
the network using reinforcement learning at each of the interme-
diate nodes. Measurements on an experimental test-bed that uses
EARP are presented and they indicate that it offers a reduction
in power consumption, as compared to a purely QoS driven
approach, and also respects the requested QoS level.
Index Terms—Energy Efﬁciency, Routing Protocol, Cognitive
Packet Network
I. INTRODUCTION
Energy efﬁcient protocols have been extensively studied
for wireless networks, because energy savings for battery
powered nodes is crucial [1], [2]. However research on energy
consumption is relatively new in wired networks even though
the amount consumed on a day to day basis is a signiﬁcant
fraction of the total energy used for ICT systems. Surprisingly
the total energy consumption for ICT and for air travel are
comparable [3]. Since wired networks form the backbone
of all of the world’s ICT, the energy consumption in this
area is bound to rise unless serious efforts are made to
achieve signiﬁcant savings in wired networks and computer
systems. Thus recent research on wired energy aware network
management includes [4][5][6][7][8].
The most thorough measurement studies that have been
performed in [9] which quantify the energy consumed by
many network devices, ranging from the core switches to
wireless access points, and including different vendors. These
measurements are carried out under various trafﬁc and net-
work conﬁgurations, together with an index associated with
each network device so that the proportionality of power
consumption to the device’s trafﬁc load can be evaluated. As
investigated by [9], the ratio of the actual power consumed
by a networking device on average to its maximum power
consumption, varies widely across different device families.
The impact of the hardware processing rate and trafﬁc load
on power consumption is also examined in [4]. Moreover,
research work in [10] introduces a generic model for router
power consumption.
However because there does not seem to be a single uniﬁed
model that captures the power characteristics of a wide class
of network devices, in the experiments we conducted in this
paper, we use ofﬂine power measurements that have been
conducted on our own experimental testbed’s nodes, and which
have been previously reported in [11]. In particular, we will
rely on the measurements reported in Figure 1 for a single
core router to relate router trafﬁc rates in packets per second
to the power consumed by each of our routers.
In this paper we propose an energy aware routing protocol
(EARP) that not only attempts to minimise the total consumed
power in the network but also respects the requested QoS by
each incoming ﬂow. EARP relies on the underlying Cognitive
Packet Network (CPN) [12] for the information it requires, and
uses it to minimise power consumption. CPN’s smart packets
are used to gather information about the power usage at the
nodes, and EARP is run in a fully distributed manner using
CPN’s source routing scheme that is modiﬁed to include power
consumption as a decision criterion.
The remainder of this paper is organised as follows. We
ﬁrst give a brief overview of CPN and its existing routing
protocol. Section II elaborates the proposed energy-aware
routing protocol. The implementation is summarised and then
we detail some performance results in Section III. Conclusions
and further work are discussed in Section IV.
A. Background
The Cognitive Packet Network (CPN) is an experimental
protocol that allows a network with an arbitrary topology to
observe its state in a distributed manner and exploit the data
being gathered to improve different QoS metrics [13]. The
CPN routing algorithm runs autonomously at each node using
Reinforcement Learning with a recurrent Random Neural Net-
work [14][15][16], and measurement results for this protocol
are summarised in [17]. CPN makes use of three types of
packets: smart packets (SP) for discovery, source routed dumb
packets (DP) to carry payload, and acknowledgements (ACK)
to bring back information that has been discovered by SPs.
Conventional IP packets can also tunnel through CPN, so
as to seamlessly operate mixed IP and CPN networks. The
SPs are constantly generated by each of the source users
of CPN as a fraction of the total number of DPs that are
7
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

−5
0
5
10
15
20
x 10
4
75
80
85
90
95
100
105
110
115
120
node sending+receiving rate (pps)
power usage (W)
single core − forwarder
 
 
1F 16B
1F 128B
1F 1024B
2F 16B
2F 128B
2F 1024B
1F RX 128B
1F RX 1024B
SCfd
Figure 1.
Power consumption as a function of packet rate for a single core
router and for different packet sizes (16, 128, and 1024 Bytes) [11]
sent forward, in order to seek paths to the destination that
minimise the desired QoS. In addition, they update the QoS
information about different paths used by the source and hence
allow it to make informed decisions. Since DPs are source
routed, the choice of the path that is used to convey the
DPs to the destination, is made at the source on the basis
of the information it receives from ACKs sent back by the
successful SPs. In previous work CPN has been proposed
as a means to optimise energy consumption [5][6], and this
paper is a continuation of this previous research. However here
we will use a decision scheme that attempts to minimise the
power consumed provided the overall end-to-end packet delay
remains below a predetermined value.
II. ENERGY AND QOS AWARE ROUTING
At each node i, let us denote by Ti, the trafﬁc this node
carries in packets/sec (pps). Assuming that a ﬂow l carries
trafﬁc of rate tl pps, then Ti can be computed as,
Ti =
∑
l∈F (i)
tl
(1)
where F(i) denotes the set of ﬂows that use node i. Let pi(T)
and Qi(T) the power consumption and QoS of node i when
the trafﬁc it carries is T, so that adding a new ﬂow k to node
i will result in a change of power consumption and QoS at
that node.
Let pi(x) be the instantaneous power consumption at node i
when it carries x packets per seconds, in watts, that include all
aspects of packet processing, including storing packets, routing
them, and forwarding them through appropriate link drivers. It
is of course possible to detail these different elements of power
expenditure. In modern routers pi(x) will increase with x,
but because of the increasing use of multi-cores in processing
elements, the increase may have a step-like behaviour.
Let us denote the Power Cost associated with the k − th
ﬂow at node i by M k
i (tk, Ti), and deﬁne it as a combination
of the ﬂow’s own power consumption, and of the impact it
has on other ﬂows which are using the node:
M k
i (tk, Ti) = atk
pi(Ti + tk)
Ti + tk
+ bTi[pi(Ti + tk)
Ti + tk
− pi(Ti)
Ti
]
(2)
where a, b ≥ 0. Here the ﬁrst term is the power (watts) total
used by the k − th ﬂow, multiplied by some constant a. The
second term represents the increase in wattage for the other
ﬂows, multiplied by some constant b. Note that if a = b = 1
both of these elements have an equal weight, while if b = 0
then we are ignoring the effect on the other ﬂows that are using
the node. However this metric assumes that the k − th ﬂow
is concerned with a form of payment of “wattage per packet”
that may be paid. In fact, a ﬂow may also be concerned just
with the total wattage itself, in which case a more appropriate
metric may be:
mk
i (tk, Ti) = cpi(Ti + tk) + d[pi(Ti + tk) − pi(Ti)]
(3)
for c, d ≥ 0. Note that for any quality of service function
Qk
i (tk, Ti) we can adopt similar forms as (2) and (3), but
generally a simpliﬁed version of the latter may be adopted for
quantities such as node delay and packet loss.
The power related cost functions for the k-th trafﬁc ﬂow of
rate tk on a path π(i) originating at node i is written as:
M k
π(i)(tk, Tπ(i)) =
∑
n∈π(i)
M k
n(tk, Tn),
(4)
or we can choose the simpler form:
mk
π(i)(tk, Tπ(i)) =
∑
n∈π(i)
mk
n(tk, Tn),
(5)
Similarly, we would have the QoS criterion, such as loss, delay
or some other metric:
Qk
π(i)(tk, Tπ(i)) =
∑
n∈π(i)
Qk
n(tk, Tn)
(6)
where Tπ(i) = (Tn1, ... , Tn|π(i)|) where n1 = i, and the nj,
with 1 ≤ j ≤ |π(i)| are the successive nodes of path π(i).
The main drawbacks of using the metric M k
π(i)(tk) are
twofold. (a) Because of the factor tk/(tk + Ti), the ﬁrst term
may be quite small, and the second term may also be small be-
cause we compute a difference in energy consumption. Small
values compounded with the effect of inevitable statistical
ﬂuctuations in measurements make this metric unattractive.
(b) The need to measure three quantities at each node plus the
trafﬁc rate tk can lead to excessive overhead and measurement
delays. Thus it appears more attractive and much simpler to
use mk
π(i)(tk, Tπ(i)) as the energy criterion to be optimised.
A. Reinforcement Learning in EARP
In CPN, each router stores a speciﬁc Random Neural
Network (RNN) for each ﬂow that is active at that node.
Each RNN has as many neurons as there are outgoing links
in the node. The arrival of an SP will trigger the interrogation
of the RNN to determine the next hop for the SP; this is
done by computing the current state of the RNN and selecting
8
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

the output port of the node that corresponds to the neuron
of the RNN which is the most excited. On the other hand,
the arrival of an ACK back from the destination of that ﬂow,
will trigger the execution of the reinforcement learning (RL)
process [15]. Since EARP is expected to minimise the overall
cost of power while satisfying the requested QoS, the goal Gi
to be optimised will combine the power consumption with the
QoS constraint. All quantities of interest for some ﬂow k will
relate to the forward path from any node i to the destination
node of that ﬂow. Thus the goal will take the form:
Gi = mk
π(i)(tk, Tπ(i))
(7)
+β1[Qk
π(i)(tk, Tπ(i)) − Qk
o > 0](Qk
π(i)(tk, Tπ(i)))ν
where:
• mk
π(i)(tk, Tπ(i)) is the total power cost function on the
path going from the i − th node to the destination of
ﬂow k, with the corresponding trafﬁc loads on each of
the intermediate nodes,
• 1[X] is the function that takes the value 0 if X is true,
and takes the value 1 if X is false.
• ν ≥ 1, and β > 0 is a constant meant to match the delay
units with respect to power, while Qk
o is the QoS value
that should not be exceeded for ﬂow k, e.g. the maximum
tolerated path delay,
• Qk
π(i)(tk, Tπ(i))) is the total QoS value measured from
this node to the destination by the SPs.
CPN uses the reward function R = G−1 as follows. If the
Rθ are the successive measured values of the reward function
R at some node, then the RNN weights are updated based on
the threshold Θθ, which captures a historical sliding window
average of the reward:
Θθ = αΘθ−1 + (1 − α)Rθ,
(8)
where he constant value 0 ≤ α ≤ 1 tunes the responsiveness
of the algorithm. Weights are increased or reduced or based on
the difference between the current reward Rθ and the previous
threshold Θθ−1; if Rθ is larger than Θθ−1 then this results
in a signiﬁcant increase in the excitatory weights from all
neurons to that neuron, with a slight increase in the inhibitory
weights leading to other neurons. Otherwise, if Rθ is smaller
than Θθ−1, all excitatory weights leading to all neurons are
moderately increased, except for the previous winner, and the
inhibitory weights leading to the previous winning neuron are
signiﬁcantly increased, in order to “punish” it for not being
successful. Θθ−1 is ﬁrst computed, and then the network
weights are updated as follows. In the following expression
that, the neurons i, j, n correspond to output links of the node
where the update is being conducted, and none of these output
links can be identical to the link from which the connection
(for which the updates are being carried out) has entered this
particular node. Thus, if the node has N links, one of them is
excluded because the input link for the connection cannot be
re-used as the output link (i.e. packets cannot be sent back
along the link through which they entered), j denotes the
output link that was most recently used by the connection, and
hence there are N − 2 alternate output links to be considered:
Θθ−1 ≤ Rθ :
{ w+(i, j)
←
w+(i, j) + Rθ,
w−(i, n)
←
w−(i, n) +
Rθ
N−2, ∀n ̸= j,
Θθ−1 > Rθ :
{ w−(i, j)
←
w−(i, j) + Rθ,
w+(i, n)
←
w+(i, n) +
Rθ
N−2, ∀n ̸= j.
(9)
III. EXPERIMENTS
Our experimental testbed consists of 46 nodes, which are
Pentium IV-machines with up to ﬁfteen Ethernet interfaces
running Linux Kernel 2.6.15. These nodes are connected using
a topology depicted in Figure 2, with full-duplex links at 10
Mbps Mega-bits-per-second). The topology we have selected
resembles that of the Swiss Education and Research Network,
and artiﬁcial delays are used to replicate the link-level delays
of the real network. We further assume that all the nodes have
the same power consumption characteristic as a function of
trafﬁc rate as in Figure 1 that was measured for the single
core routers that are used in our network test-bed, and the
function pi, that relates trafﬁc rate to power consumption in
node i is approximated by a piecewise linear function. In the
EARP, we have chosen a maximum value of acceptable end-
to-end delay of Qk
o = 80ms. The constants ν = 8 and β = 1
so that the second term in (8) tends to become very large
when the end-to-end delay approaches 80ms, so that this delay
is never exceeded. All delays are expressed and measured
in milliseconds. In Equation (8) α = 0.8 that represents an
“average sliding window” over the ﬁve past values of Rθ.
A. Experiments with three source-destination pairs and no
background trafﬁc
We ﬁrst chose three source and destination nodes, as indi-
cated in Figure 2, and set up three ﬂows: from node 19 to 3,
from node 30 to 2 and from node 33 to 14. The three ﬂows
have the same data rate, which was varied with four values 0.5,
1, 1.5 and 2 Mbps. There was no other trafﬁc in the network
in this ﬁrst experiment.
All the experiments were based on UDP trafﬁc, and packet
size was ﬁxed at 1024 bytes. Each experiment ran for 600 secs,
and measurements were collected from each node every ﬁve
seconds. Additional background trafﬁc at a rate of 200 kbps
(2% of the link capacity) was also set up to run alternately
every other 100 seconds over all the links between nodes
45-24, 35-10, and 46-38 in both directions, so as to create
a time varying power load as well as a time-varying power
consumption pattern in the network.
With this conﬁguration, we compare the performance of
EARP with that of the CPN protocol which aims to minimise
end-to-end delay. We thus measured the power consumption
in all the nodes of the network and the round trip delay
experienced by the active ﬂows.
All three ﬂows were ﬁrst run at a data rate of 0.5 Mbps,
which was then increased in steps of 0.5 Mbps for each
successive round of the experiment simultaneously for all
9
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

Figure 2.
Network topology.
three ﬂows, up to the maximum value of 2 Mbs. Experiments
were conducted separately with the EARP, and also with
conventional CPN that was using delay only as the QoS goal.
On the other hand, as would be expected, EARP results in
higher end-to-end delays as shown in Figure 3, mainly due
to the longer paths taken by EARP to avoid nodes that carry
more trafﬁc and hence which consume more power per packet.
To detail this point, the average length of the end-to-end paths
used by each of the two schemes are plotted in Figure 4.
It can be seen that the routes selected by CPN with delay
minimisation are on average 40% shorter than those selected
by EARP. Furthermore, Figure 3 also reveals that although
delay may increase with EARP, each ﬂows’ round trip delay
remains within the prescribed limit. This suggests that we
could also modify EARP to include other QoS bounds, such
as loss, a combination of loss and delay, and jitter.
B. Network-wide Energy Savings
We repeated the previous experiments with three ﬂows,
but also additional background trafﬁc was added running
throughout all the network links, in each direction at a constant
rate of 200 kbps.
The resulting measured total power consumption over all
nodes is shown in Figure 5 for routing based on energy, on
delay and on shortest path, and for the different trafﬁc rates
on each connection. As expected, the routing based on energy
(EARP) results in the lowest energy consumption, while
routing based on shortest path which is insensitive to load
conditions results in the highest energy consumption because
energy consumption itself depends on load. Also as expected,
we see that delay based routing provides a compromise since at
low trafﬁc levels it results in comparable energy consumption
to EARP, while at high trafﬁc loads it does not do as well as
EARP.
(a) Routing based on energy with delay constraint
(b) Routing based on delay
Figure 3.
Average round trip delay for the three ﬂows with different trafﬁc
levels
Figure 6 compares the average route length in number of
hops, averaged over all trafﬁc levels for the three connections,
for EARP on the one hand, and CPN that is based on using the
number of hops as the QoS criterion. Note that the averages
that are taken ar not “per packet”, but rather per experiment.
We see that EARP can result in signiﬁcantly longer path
lengths being taken, so that short path lengths obviously will
not in general lead to lower overall energy consumption per
path.
Figure 7 on the other hand examines the average round-trip
delay experienced by packets, where again the average is taken
over all the different trafﬁc intensities and experiments for all
of the three connections, where we compare EARP with the
CPN protocol that attempts to minimise delay. We see that
EARP can lead to signiﬁcantly higher delays in its attempt to
minimise energy consumption.
C. Experiments with nine connections
In a second set of experiments, we take nine (rather than
three) source-destination pairs. Three ﬂows are initially acti-
vated in the network, and then during the experiment three
additional connections are launched, followed by three more.
The three ﬂows activated at the start of the experiment go from
node 23 to 12, 30 to 14 and 33 to 2. Another three ﬂows are
10
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

(a) Routing based on energy with delay constraint
(b) Routing based on delay.
Figure 4.
Average length of the end-to-end path taken by the three active
ﬂows.
initiated 100 secs later (from node 20 to 26, from node 28
to 10 and from node 35 to 7), and the ﬁnally three ﬂows are
activated 200 secs after the start from node 11 to 8, node 13 to
24 and node 29 to 6. Each ﬂow’s lifetime is 400 secs, and the
total experiment lasts for 600 secs. All nine ﬂows are ﬁrst run
at a data rate of 0.5 Mbps, and the data rate is then increased
to 1, 1.5, 2, and 2.2 Mbps in successive steps. In addition we
have 200 kbs of background trafﬁc being conveyed in both
directions over every link in the network.
The instantaneous power consumed by the network for ﬂow
rates of 1Mbps and 2Mbps is shown in Figure 8 during the
ﬁrst 400 secs of the experiment while all the nine ﬂows are
still active, as well as the step increases in power consumption
at 100sec and 200secs, when three new ﬂows are initiated each
time. We observe the saving in power consumption when the
EARP is used for both ﬂows’ rates 1 Mbps and 2 Mbps, as
compared to shortest and delay based routing.
On the other hand, in Figure 9 we observe average values
over the whole experiment (rather than instantaneous values)
of power for ﬁve different data rates of the nine ﬂows, and
we see that using EARP always results in savings in power
consumption. The irregularity in the curve for the power
consumed using shortest path routing with CPN just indicates
0.5
1
1.5
2
2.5
3.5
4
4.5
5
5.5
Examined flows data rate (Mbps)
Total consumed power in the network (kW)
 
 
Routing based on Energy
Routing based on Delay
Routing based on Shortest Path
Figure 5.
Experiment with three ﬂows: total power consumption in the
network vs. trafﬁc rate all connections.
1
2
3
0
2
4
6
8
10
12
Flow number
Average length of the end−to−end Path
 
 
Routing based on Energy
Routing based on Shortest Path
Figure 6.
Experiment with three ﬂows: average length of the paths taken by
the connections.
that CPN shortest path routing can actually use different paths,
and these different paths can result in different levels of
energy consumption that do not necessarily result in an overall
increase when trafﬁc rates increase on each ﬂow.
IV. CONCLUSIONS
This paper introduces a novel energy-aware routing protocol
(EARP) that is based on the autonomic network routing
protocol CPN that was described in several other papers.
EARP attempts to minimise the total power consumption of
each ﬂow in a packet network, while trying to keep the
“damage” to the delay experienced by packets principal QoS
metric to a value which is below an acceptable upper bound.
We have implemented EARP on a large network test-bed,
conducted measurements with different loads for long periods,
and observed the network as the number of connections varies
with time. In future work we plan to address QoS metrics
which incorporate energy, as well as loss, jitter and delay.
11
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

1
2
3
0
10
20
30
40
50
60
Flow number
Average round trip delay (ms)
 
 
Routing based on Delay
Routing based on Energy 
Figure 7.
Experiments with three ﬂows: average round trip packet delay for
the three connections.
0
50
100
150
200
250
300
350
400
0
2
4
6
8
10
12
14
16
Experiments Elapsed Time (s)
Total consumed power in the network (kW)
 
 
Routing based on Energy (Rate = 1Mbps)
Routing based on Delay (Rate = 1Mbps)
Routing based on Shortest Path (Rate = 1Mbps)
Routing based on Energy (Rate = 2Mbps)
Routing based on Delay (Rate = 2Mbps)
Routing based on Shortest Path (Rate = 2Mbps)
Figure 8.
Scenario two: Total power consumption in the network Vs. the
experiment’s elapsed time.
REFERENCES
[1] S. Cui, R. Madan, A. Goldsmith, and S. Lall, “Joint routing, mac, and
link layer optimization in sensor networks with energy constraints,” in
IEEE International Conference on Communications (ICC ’05), pp. 725–
729, May 2005.
[2] E. Gelenbe and R. Lent, “Power-aware ad hoc cognitive packet net-
works,” Ad Hoc Networks, vol. 2, no. 3, pp. 205–216, 2004.
[3] A. Berl, E. Gelenbe, M. D. Girolamo, G. Giuliani, H. de Meer, M. Q.
Dang, and K. Pentikousis, “Energy-efﬁcient cloud computing,” The
Computer Journal, vol. 53, no. 7, pp. 1045–1051, 2010.
[4] S. Nedevschi, L. Popa, G. Iannaccone, S. Ratnasamy, and D. Wether-
all, “Reducing network energy consumption via sleeping and rate-
adaptation,” in the 5th USENIX Symposium on Networked Systems
Design and Implementation (NSDI ’08), pp. 323–336, April 2008.
[5] E. Gelenbe and S. Silvestri, “Reducing power consumption in wired
networks,” in the 24th International Symposium on Computer and
Information Sciences (ISCIS ’09), pp. 292–297, IEEE, September 2009.
[6] E. Gelenbe and S. Silvestri, “Optimisation of power consumption in
wired packet networks,” in the 6th International ICST Conference
on Heterogeneous Networking for Quality, Reliability, Security and
Robustness (QSHINE ’09), vol. 22 of Lecture Notes of the Institute
for Computer Sciences, Social Informatics and Telecommunications
Engineering (LNICST), pp. 717–729, Springer, November 2009.
[7] C. Panarello, A. Lombardo, G. Schembra, L. Chiaraviglio, and M. Mel-
lia, “Energy saving and network performance: a trade-off approach,”
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
2.2
2.4
6
6.5
7
7.5
8
8.5
9
9.5
Examined flows data rate (Mbps)
Total consumed power in the network (kW)
 
 
Routing based on Energy
Routing based on Delay
Routing based on Shortest Path
Figure 9.
Scenario two: Total power consumption in the network vs. trafﬁc
rate of the connections
in the 1st International Conference on Energy-Efﬁcient Computing and
Networking (e-Energy ’10), pp. 41–50, ACM, April 2010.
[8] A. Cianfrani, V. Eramo, M. Listanti, M. Marazza, and E. Vittorini, “An
energy saving routing algorithm for a green ospf protocol,” in IEEE
Conference on Computer Communications (INFOCOM ’10), Workshops,
March 2010.
[9] P. Mahadevan, P. Sharma, S. Banerjee, and P. Ranganathan, “A power
benchmarking framework for network devices,” in the 8th International
IFIP-TC 6 Networking Conference (Networking ’09), pp. 795–808,
Springer-Verlag, May 2009.
[10] J. Chabarek, J. Sommers, P. Barford, C. Estan, D. Tsiang, and S. Wright,
“Power awareness in network design and routing,” in the 27th Con-
ference on Computer Communications (INFOCOM ’08), pp. 457–465,
IEEE, April 2008.
[11] R. Lent, “Simulating the power consumption of computer networks,” in
the 15th IEEE International Workshop on Computer Aided Modeling,
Analysis and Design of Communication Links and Networks (CAMAD
’10), pp. 96–100, December 2010.
[12] E. Gelenbe, “Cognitive packet network,” U.S. Patent 6,804,201, October
11 2004.
[13] E. Gelenbe, R. Lent, and A. Nunez, “Self-aware networks and qos,”
Proceedings of the IEEE, vol. 92, no. 9, pp. 1478–1489, 2004.
[14] E. Gelenbe, “Learning in the recurrent random neural network,” Neural
Computation, vol. 5, no. 1, pp. 154–164, 1993.
[15] E. Gelenbe, E. S¸eref, and Z. Xu, “Simulation with learning agents,”
Proceedings of the IEEE, vol. 89, no. 2, pp. 148–157, 2001.
[16] U. Halici, “Reinforcement learning with internal expectation for the
random neural network,” European Journal of Operational Research,
vol. 126, no. 2, pp. 288–307, 2000.
[17] E. Gelenbe, “Steps toward self-aware networks,” Communications of the
ACM, vol. 52, no. 7, pp. 66–75, 2009.
12
ENERGY 2011 : The First International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-136-6

