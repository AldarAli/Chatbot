Development of Real-time Simulation Models 
Integration with Enterprise Information Systems 
 
Konstantin Aksyonov, Eugene Bykov, Olga Aksyonova, Anna Antonova 
Dept. of Information Technology 
Ural Federal University 
Ekaterinburg, Russia 
wiper99@mail.ru, speedmaster@inbox.ru, K-36398@planet-a.ru, bpsim.dss@gmail.com  
 
 
Abstract—The paper discusses the integration method of 
simulation models used within the enterprise information 
system. The integration problem is presented on one sample 
class of models – the real-time models that are used in control, 
diagnostics and decision making processes. The suggested 
method is based on multi-agent approach with distributed 
knowledgeable agents. The dynamic model consists in the 
multi-agent resource conversion process model that supports 
multi-approach modeling, including discrete-event, agent-
based, queuing systems. To substantiate suggested technical 
decision of the integration module existing message brokers 
were analyzed. The subject area ontology is presented. It is 
used for semantic data integration that is required for 
simulation modeling of technological processes, business 
processes and logistical processes. In order to achieve a cross-
platform system, the Java language is used for development. 
Keywords-model integration; resource conversion process. 
I. 
 INTRODUCTION 
Currently, multi-agent approach is among the perspective 
directions of enterprise management systems [1][2]. The 
paper deals with the representation of distributed corporate 
information systems of a metallurgical enterprise in form of 
a multi-agent system. Such systems consist of multiple 
interacting agents that solve the goals, set by analysts [3]. 
Development of state-of-the-art technologies allows large 
industrial enterprises to obtain and store vast data volumes 
that define technological, logistical and commercial 
problems of an enterprise. These data may be used for 
simulation modeling of various aspects of its activity. 
Simulation results may be used for quality control of 
manufactured products, defect prevention, optimization of 
logistical and commercial schemes. Integration of these 
models into the enterprise control circuit by interaction with 
the corporate information system and development of unified 
software is a pressing task. 
After the introduction in section 2 we start from the state 
of the art overview for the area of simulation modeling tools 
with real-time capabilities. We identify the richest systems 
from the functionality point of view. In part 3 we present the 
architecture of suggested system, describing role of the 
agents. We move on to application of the system to 
metallurgical production. Here we present and discuss the 
ontology of the metallurgical enterprise. We get to the role of 
each agent within the system and discuss their interaction. In 
part 4 we present our research on how the developed models 
interact with each other. In part 5 we describe the integrating 
data model. Part 6 presents the mechanisms for semantic 
integration of data sources. In part 7 we compare our 
approach to similar implementations in other simulation 
systems in terms of performance. Finally in part 8 we present 
the conclusions from our research. 
II. 
CURRENT STATE OF TOOLS 
The development trend of enterprise information systems 
focuses on wide application of Internet technologies. 
Currently the commercial simulation systems available on 
the market, including AnyLogic [4], ARIS [5], G2 [6], are all 
desktop applications. Additional requirements for simulation 
modeling tools for team development of comprehensive 
simulation 
models 
include 
support 
for 
multi-user 
environment, availability of model access on the Internet and 
running simulation experiments on the Internet.  
A comparison of systems [7] showed that the most part 
of the functionality is included in AnyLogic [4] and BPsim 
[8] products. Only G2 is developed focusing on the direction 
of service oriented architecture [7]. At the moment the SaaS 
(software-as-a-service) technology [9] is the most convenient 
in use, optimal in performance and client software 
requirements. The end user in this case is the analyst or 
decision making person. Thus, the pressing problem is 
development of the model integration software for 
simulation modeling servers, using service oriented 
approach.  
III. 
SYSTEM ARCHITECTURE 
A multi-agent system architecture will further be 
discussed based on a sample integration system of automated 
system models of metallurgical production. It contains the 
following software agents: 
• 
Data exchange agent. It is used for actualization of 
model parameters and data transfer (including 
experiment results) into corporate information 
system, 
• 
Modeling agent. It is used to solve process control 
tasks in real-time on the basis of real-time models,  
• 
Message exchange agents. It provides interaction 
between data exchange and modeling agents. This 
45
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

agent decides when to activate real-time model, 
based on occurring events and activation rules, and 
also 
transfers 
messages 
into 
the 
corporate 
information system, e.g., into a MES-system or to a 
corresponding analyst’s (specialist, technologist) 
workstation.  
The method of design, development and operation of 
real-time models is based on the methodology of business 
process analysis and development of information systems. It 
includes integration of structural and object-oriented 
approaches, simulation and multi-agent modeling [10] and 
consists of the following stages: 
• 
Design of simulation model in the model definition 
module, 
• 
Running experiments for model verification and 
adequacy checks in simulation module. BPsim.MAS 
system is used for this task at the stage of schematic 
design [10]-[11], 
• 
Design of real-time model for its further use in 
model integration module and interaction with other 
sub-systems of the corporate information system. 
BPsim.SD tool [12] is used for this task at the stage 
of schematic design. It implements the following 
design stages: 
o 
Design of architecture for the model 
integration modules by dataflow diagrams, 
use-case diagrams and sequence diagrams 
of unified modeling language, 
o 
Subject area ontology representation in 
form of class diagram, 
o 
User interface modeling, 
o 
Testing and debugging the real-time model 
in corporate information system, 
o 
Operation. 
Use of real-time models means that modeling time must 
be less or equal to a set value, and modeling must be 
completed before the next portion of data is received from 
the corporate information system. Thus, the following 
features need to be considered during the models integration: 
• 
Performance. Architecture of automated system for 
metallurgical production must be oriented towards 
maximum use of server resources, 
• 
Scalability. 
Models 
must 
be 
able 
to 
run 
simultaneously on multiple computers, as well as 
effectively use multi-core and multi-CPU computers. 
To provide these features each model needs to be 
executed as a standalone process. Special mechanisms, 
included with the integration module should be used for the 
interaction of processes.  
Integration is suggested to be performed at the data level. 
Each model performs analysis of data, received from the data 
storage. Modeling results are transferred either into the data 
storage or immediately into the corporate information 
system.  
In general case, the following data integration levels may 
be distinguished [13]: physical, logical and semantic. A 
Is located
Customers
Behavior 
model
Agents
Agents goals
Situation 
analysis rules
Agents activity
Inputs
Decisions
Frame-based 
knowledge base
Activities
Goals
Outputs
MRCP
Resources
Convertors
Teams
Transacts
Tools
Receivers
Processes
Junctions
Sources
Operations
Consists of
Call
Initiate
Consists of
Inheritance
Part-whole
Part-whole
Parameters
Part-whole
System time
Inheritance
Initiate decision search
Analyze state
Consist of
Наследование
Generate
Are
Part-whole
Use
Inheritance
Type
Correct
Modify state of resources and tools,
goals and parameters, MRCP structure,
transact routes
KPI of logistics
Object
Physical object
Supply chain 
location
Warehouse 
(storage)
Shop
Crane
Railroad
Highway
Truck
Train
Inheritance
Inheritance
Inheritance
Way of delivery
Way of delivery
Use
Use
Inheritance
Transportation type
Product unit
Moves
Is located
Boxcar
Crane
Вид
Orders
Consists of
Personnel
Defines
Controls
Incidents
Enterprise
Departments
Aggregates
Modifications
Activity type
Product unit
Process
Process 
parameters
Part-whole
Part-whole
Part-whole
Documents
Contracts
Inheritance
Defines
Information 
system
Use
Use
Use
 
Figure 1. Subject area ontology 
46
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

single ontology of subject area needs to be developed for 
consideration of semantic properties.  
Ontologies are defined as a result on subject area 
analysis. In our case, the approach suggested by Girardi et al. 
[14] has been used. It is based on the Chen’s model “entity-
relation”, since all data is suggested to be stored in relational 
database. The model has been extended in a way to be able 
to store other “entity-relation” models and related data. 
The method has been extended with such features as 
availability to process cause-and-effect relations and 
knowledge of decision making people. Semantic model of 
the multi-agent resource conversion processes [11] was used 
for this. It was further extended with the elements of 
logistical projects ontology, presented by Kowalski et al. 
[15], and adapted to specific features of logistical problems, 
related to metallurgical production. Also, the ontology 
included elements of technological and business process. 
The designed ontology is presented on Figure 1.  
Model integration method focuses on several problems 
[13]. They are briefly discussed further. 
The automated system for monitoring, control, modeling, 
analysis, and optimization of the full production cycle of 
metallurgical production, due to specific requirements of the 
automation object, consists of a large number of various 
modules, each of which performs a specific task. Together 
they monitor state of the industrial objects, check parameter 
validity, 
model 
consistency, 
analyze 
and 
prepare 
recommendations for optimization of the full production 
cycle of metallurgical production. These recommendations 
are based on integration of mathematical models of 
technological, logistical, and business processes of an 
enterprise. Thus, the automated system for metallurgical 
production may be considered a distributed multi-agent 
system. Separate modules are represented with software 
agents 
with 
complex 
behavior 
and 
communicative 
capabilities.  
Automated system for metallurgical production is an 
open multi-agent system. This consists in bi-directional 
interaction with multiple information systems of a 
metallurgical enterprise, related to such classes of 
information systems as ERP (Enterprise Resource Planning) 
[16], MES (Manufacturing Execution System) [17], 
automated 
technological 
process 
control 
systems, 
technologists’ automated workstations.  
An automated system for metallurgical production 
consists of the following modules (or main agent types): 
1. Enterprise automated systems data exchange. 
Technically this corresponds to the enterprise 
services bus 
2. Data preparation 
3. Enterprise processes optimization 
4. Models integration – allows use of models in 
decision making tasks in real-time.  
Certain problems make use of data storage, query 
constructor, and model design modules that are also included 
in the automated system of metallurgical production.  
Architecture of the automated system is implemented in 
the way that load ration of specific agents may result in 
copying of these agents in order to distribute and balance 
load. 
One of the applied directions of multi-agent technologies 
is planning. The concept of an agent corresponds to 
hardware or software implemented entity, which is capable 
of acting for the benefit of goal achievement set by the 
owner or user. Agents possess certain intelligent capabilities 
[18][19]. 
A sample application of the multi-agent system for 
planning operation of a flexible production system is 
discussed in [18]. We may name the following advantages of 
the multi-agent system: 
1. Formalization of decision making points in form of 
the agents. The points include specific situation 
processing scenarios. Technically this process is a 
part of knowledge formalization stage. 
2. Planner is dynamically embedded by means of 
interaction of specific element of the multi-agent 
system and thus is ready to modify the plan in case 
of delays or unexpected (unintended) situations. The 
planner works in real-time.  
3. Agent network, interconnected with relations, self-
coordinates its activity. 
An additional benefit of multi-agent planning is the 
capability of automated information sharing between process 
individuals about changes of controlled object, which 
introduces control transparency. Subject area knowledge is 
being formalized during development and deployment of the 
planning multi-agent system, the decision making process is 
automated. Thus we ease activity, related to decision 
making. 
Agents may be separated into three following types: 
reactive, intelligent and hybrid [18][19]. Reactive agents 
make decisions on the basis of “Situation-Response” rules. 
Intelligent agents solve the set tasks according to its goals, 
using common limited resources and knowledge of external 
world. Hybrid agents have features of both classes.  
Agents of the automated system for metallurgical 
production, that are immediately operating in control and 
decision making tasks, may have goals presented on Figure 
2. Intersection of their goals may be present. Thus, agents 
have to co-operate. In order to achieve a common goal, 
agents use messaging.  
Interaction of agents of the metallurgical enterprise 
corporate system introduces problems, related to identifiers 
of the very same objects and parameters in different data 
storages. In addition, there is a dis-synchronization of single 
object-related processes in time.  
In order to fix such problems, the data exchange agent is 
capable of transforming its internal identifiers into identifiers 
of other agents and vice-versa. Apart from this, the messages 
are dispatched, which help other agents to fix the problems, 
related to process arrangement in time.  
 
47
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

Data exchange 
with enterprise 
automated systems
Collection and 
transition of 
process parameters
Raise enterprise 
processes quality
Monitoring 
enterprise 
processes
Monitoring process 
parameters
Process modeling
Analyze process 
parameters
Generating 
recommendations 
for decision 
support
Data preparation
Model 
integration
Enterprise 
processes 
optimization
Generation of 
control impacts
 
Figure 2. Agent goals 
 
The development of the automated system for 
metallurgical production is based on decision support 
method for information system development. This method, 
in turn, is based on multi-agent approach. The method is 
supported by the products of BPsim family [11][12], which 
allows definition of hybrid agents on production and frame-
based knowledge bases. 
IV. 
MODEL INTERACTION 
The most effective way of interaction of model 
integration system and automated information system of an 
enterprise consists in automated obtaining the data required 
for modeling directly from the automated information system 
(Figure 3). In order to implement this method, we suggest 
using the Messages queue system, which itself constitutes 
the architecture and intermediate level software, which 
collects, stores and distributes messages between subscribers. 
Existing message brokers have been analyzed during 
research. All of them provided guaranteed message delivery 
between applications. Analysis results are presented in  
Table 1. 
Since implementation, based on REDIS [20] and 
Socket.IO message exchange [21], is simpler, they were 
selected for data exchange between the automated 
information system and automated system of metallurgical 
production.  
 
Automated 
information 
system
Model n
. . .
Model 2
Model 1
Automated system of 
metallurgical production
Fi
gure 3. Interaction of integration module with the corporate information 
system 
V. 
DESIGN OF INTEGRATING DATA MODEL 
Integrating data model represents the basis of the 
common user interface in the integration system. Since the 
web-interface is suggested for model integration system, a 
decision, based on JSON (JavaScript Object Notation) [22] 
and XML (eXtensible Markup Language) standards for the 
integration model seems reasonable.  
The MVC (Model-View-Controller) [23] concept is 
suggested as the main concept of the model integration 
system development. The concept utilizes several design 
templates, which allows the application data model, user 
interface and user interaction are distributed between three 
specific components, when modification of just one 
component has minimum impact on other ones. Model 
integration system includes common classes that implement 
typical procedures for data obtaining from the automated 
information system, as well as presentation of modeling 
results (parameter values, graphs, etc.). 
Since the integration module has the multi-agent 
structure, the agent elements need to correspond to certain 
elements of MVC. To make things easier, consider a reactive 
agent with a single rule: “if a>b, then a=a-b”. Figure 4 shows 
the dataflow diagram that presents operation of such agent. 
Data storages correspond to work memory, which is required 
to store the variable. Operations on the diagram are all If-
Then rules. The agent formulae in software implementation 
that are stored in “If” and “Then” rules of an agent, are 
transferred into method definition of the corresponding class.  
Thus, from the MVC point of view, work memory 
represents the Model, while the logical output machine 
together with agent rules form the Controller. When 
visualization of modeling results is required by the user, 
corresponding classes would represent the View.  
 
TABLE I. COMPARISON OF QUEUING BROKERS 
Criteria 
Redis 
RabbitMQ 
ActiveMQ 
Socket.IO 
Performance 
high 
high 
high 
high 
Scalability 
high 
high 
high 
high 
Clustering 
no 
yes 
yes 
no 
Java support 
yes 
yes 
yes 
yes 
Ease of use 
high 
average 
average 
high 
 
48
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

VI. 
DEVELOPMENT OF MECHANISMS FOR SEMANTIC 
INTEGRATION OF DATA SOURCES 
Object-relational mapping is used as a means of data 
sources semantic integration. This is a programming 
technology, which allows conversion of incompatible model 
types between relational data storage and programming 
objects. Such technology is implemented in ORM (Object-
Relational Mapping) systems [24]. After analysis, two 
systems have been selected for further development, namely, 
Morphia [25] and Cayenne [26] due to the following factors: 
 
• 
Their features fully satisfy the requirements of 
model integration system, 
• 
Cayenne has a convenient feature of visual 
development of connection of software classes and 
entities in the database. This reduces the time 
required for development and debugging. 
The prototype of model integration module for automated 
information system of metallurgical production has been 
developed after analysis. Since at this stage, some models of 
the system are yet to be implemented, testing and running the 
experiments used the emulated parameter inflow from the 
technological process. Data required for the simulation 
model integration module were forwarded to corresponding 
models for analysis and result output. Model results transfer 
into the corporate information system for further processing 
has also been emulated. 
VII. PERFORMANCE COMPARISON  
An enterprise uses its own quality assurance software, 
which includes the enterprise process definition module for 
design of simulation models of processes under research, 
and process optimization module for experimenting with the 
models and searching for management decisions. These two 
modules are based on multi-agent modeling and the concept 
of 
big 
data. 
Authors 
compare 
the 
metallurgical 
manufacturing process model definition with the enterprise 
software and the popular simulation tools Plant Simulation 
[27], Simio [28], and AnyLogic [4]. The description of the 
model itself goes beyond the scope of this work, and only 
the comparison results are presented.  
We assume that models are equivalent and produce 
averagely the same output. As an effectiveness criterion we 
use the duration of experiment on the same hardware with 
animation set to off (Figure 5).  
 
 
Figure 5. Experiment duration and number of processed product units  
 
 
The analyzed simulation modeling tools may be 
separated into fast tools (Simio, PS) and slow tools 
(AnyLogic and enterprise process optimization module). 
Optimization module speed is related to detailed journaling 
of log tables and statistics on model variables and entity 
instances. No other simulation tool provides these statistics. 
Resource-based model works faster in the same simulation 
system. This fact is related to computational resources being 
spent on queues processing in the process optimization 
module. The slowest experiment duration was 2 hours and 
13 minutes, which may be applicable in case of non-real-
time decision making. 
 
After analyzing simulation results we may conclude: 
1. All models are adequate to logistical processes of a 
metallurgical enterprise, 
2. Simulation speed is applicable for all simulation 
systems for various production volumes, 
Checking the “If’ condition of the 
rule
Executing “If” condition, 
that results in work 
memory modification
Work memory
Work memory
Work memory
Work memory
Agent actions 
“Then”
Modeling rule execution delay with 
time offset
Work memory
Work memory
Work memory
t
t0
Tend
 
Figure 4. Sample DFD diagram for the reactive agent with one rule 
 
49
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

3. Simio and PS have an advantage in simulation speed 
for simulation of logistical processes of an 
enterprise, 
4. CPU and RAM load are applicable for a short (under 
10 
minutes) 
simulation 
experiment 
without 
animation in all systems, 
5. CPU and RAM load are applicable for a long non-
animation experiment (over 1 hour) for all systems, 
except PS (due to hang up) and Simio (due to high 
RAM load), 
6. Advantage of the enterprise optimization module 
from the RAM load point of view for “short” and 
“long” non-animated experiments. 
VIII. CONCLUSION 
Use 
of 
simulation 
modeling 
for 
analysis 
of 
technological, logistical and business problems of an 
enterprise is a perspective direction. The discussed method 
of simulation models integration has been implemented in 
practice and has successfully passed the tests. 
The automated system for metallurgical production may 
assist in the following areas: 
1. Collection and storage of information about 
enterprise products and processes, 
2. Analysis of quality of products, diagnosis of 
production stages with most faulting operations, with 
full information of production cycle, 
3. Application of models in decision making and 
control tasks. In case a model used in control process 
diagnoses a significant deviation from quality 
indicators for a product unit, it generates a signal and 
forwards in to a MES system, in order to reassign 
routes for further processing.  
ACKNOWLEDGMENT 
Research is conducted under the terms of contract  
№ 02.G25.31.0055 (project 2012-218-03-167). 
REFERENCES 
[1] 
L. Cao, V. Gorodetsky, and P. A. Mitkas, Guest Editors' Introduction: 
Agents and Data Mining, IEEE Intelligent Systems, vol. 24, no. 3, pp. 
14-15, May/June, 2009 
[2] 
P. Sridhar, S. Sheikh-Bahaei, S. Xia, and M. Jamshidi, Multi-agent 
simulation using discrete event and soft-computing methodologies, 
Proceeding of: Systems, Man and Cybernetics, 2003. IEEE 
International Conference on, Volume: 2 
[3] 
V. Gorodetsky, O. Karsaev, V. Konushy, W. E. Matzke, E. Jentzsch, 
V. Ermolayev, Multi-agent Software Tool for Management of Design 
Process in Microelectronics, Intelligent Agent Technology, IEEE / 
WIC / ACM International Conference on, pp. 773-776, 2006 
IEEE/WIC/ACM International Conference on Intelligent Agent 
Technology (IAT'06), 2006  
[4] 
http://www.anylogic.com  
[5] 
http://www.softwareag.com/corporate/products/new_releases/aris9/ov
erview/default.asp  
[6] 
http://www.gensym.com/en/product/G2 
[7] 
O. P. Aksyonov a, K. A. Aksyonov, V. D. Kamelsky, and  
A. L. Nevolina, Analysis of organization of distributed multi-user 
work in business processes simulation modeling systems // Modern 
problems of science and education. – 2012. – № 5; URL: 
http://www.science-education.ru/105-6936 [retrieved: 05, 2014] 
[8] 
http://www.bpsim.ru 
[9] 
http://en.wikipedia.org/wiki/Software_as_a_service 
[10] K. A. Aksyonov, A. S. Antonova, and I. A. Spitsina, Analysis and 
synthesis of resource conversion processes based on simulation 
modeling and intelligent agents. // Science and technology news, St. 
Petersburg State Technical University, № 1 (115) 2011. Informatics. 
Telecommunication. Control. St. Petersburg, pp.13-20. 
[11] K. A. Aksyonov, Theory and practice of decision support tools. 
Germany, Saarbrucken: LAP LAMBERT Academic Publishing 
GmbH & Co. KG, 2011.  
[12] K. 
Aksyonov, 
I. 
Spitsina, 
E. 
Bykov, 
E. 
Smoliy, 
and  
O. Aksyonova, Computer-supported software development with 
BPsim products family – integration of multiple approaches // 
Proceedings of the 2009 IEEE International Conference on 
Information and Automation (ICIA). (22-25 June 2009). - 
Zhuhai/Macau, China, 2009, pp. 1532-1536. 
[13] M. R. Kogalovsky, Methods of data integration in information 
systems. 
Moscow, 
2010. 
http://www.cemi.rssi.ru/mei/articles/ 
kogalov10-05.pdf  [retrieved: 05, 2014] 
[14] D. Girardi, J. Dirnberger, and J. Trenkler, A Meta Model-Based Web 
Framework for Domain Independent Data Acquisition // ICCGI 2013: 
The Eighth International Multi-Conference on Computing in the 
Global Information Technology. Nice, France, 2013, pp. 133-138. 
[15] M. Kowalski, S. Zelewski, D. Bergenrodt, and H. Klupfel, 
Application of new techniques of artificial intelligence in logistics: an 
ontology-driven case-based reasoning approach // Proceedings of 
European Simulation and Modelling Conference 2012 (October 22-
24, 2012, FOM University of Applied Sciences). — Essen, Germany, 
2012, pp. 323-328. 
[16] http://en.wikipedia.org/wiki/Enterprise_resource_planning 
[17] http://en.wikipedia.org/wiki/Manufacturing_Execution_Systems 
[18] N. R. Jennings, On agent-based software engineering // Artificial 
Intelligence. — 2000, vol. 117, — P. 277-296. - URL: 
http://www.agentfactory.com/~rem/day4/Papers/AOSE-Jennings.pdf 
[retrieved: 05, 2014].  
[19] M. Wooldridge, Agent-based software engineering // IEEE Proc. 
Software Engineering, no. 144 (1), 1997, pp. 26–37.  
[20] http://redis.io/ 
[21] http://socket.io/  
[22] http://www.json.org/ 
[23] http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93c
ontroller 
[24] http://en.wikipedia.org/wiki/Object-relational_mapping 
[25] https://github.com/mongodb/morphia 
[26] http://en.wikipedia.org/wiki/Cayenne_(programming_language) 
[27] http://www.plm.automation.siemens.com 
[28] http://www.simio.com 
 
 
 
50
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-346-9
ICCGI 2014 : The Ninth International Multi-Conference on Computing in the Global Information Technology

