Node Movement Control Based on Swarm Intelligence for a Mobile Medium Ad hoc 
Network 
Hanin Almutairi, John DeDourek, Przemyslaw Pochec  
Faculty of Computer Science 
University of New Brunswick 
Fredericton, Canada 
e-mail: {hanin.almutairi, dedourek, pochec}@unb.ca 
 
 
Abstract—A Mobile Ad hoc Network (MANET) is a network of 
wireless mobile devices capable of communicating with one 
another without any reliance on a fixed infrastructure. A Mobile 
Medium Network is a set of mobile forwarding nodes 
functioning as relays for facilitating communication between the 
users of this Mobile Medium. The performance of the Mobile 
Medium depends on the Mobile Medium node density, 
distribution and movement. In the proposed new paradigm for 
node movement control based on swarm intelligence, the 
movement is determined based on whether the nodes are at the 
locations where data forwarding activity recently took place or 
not.   Simulation results show that directing the nodes to the 
locations where the forwarding activity has recently happened 
significantly affects the delivery rates in the Mobile Medium 
networks. For some networks, with a few forwarding nodes 
initially dispersed in a large region, applying the swarm 
intelligence algorithm increases the delivery ratio by up to 50%. 
 
Keywords-mobility models; self-organizing mobile network; 
swarm intelligence; Mobile Medium; M2ANET  
I. 
INTRODUCTION 
A MANET is a set of mobile devices that cooperate with 
each other by exchanging messages and forwarding data 
[1][2]. A Mobile Medium Ad hoc Network (M2ANET) 
proposed in [3] is a particular configuration of a typical 
MANET where all mobile nodes are divided into two 
categories: (i) the forwarding only nodes forming the so 
called Mobile Medium, and (ii) the communicating nodes, 
mobile or otherwise, that send data and use this Mobile 
Medium for communication. The advantage of this M2ANET 
model is that the performance of such a network is based on 
how well the Mobile Medium can carry the messages 
between the communicating nodes and not based on whether 
all mobile nodes form a fully connected network. An example 
of a M2ANET is a cloud of autonomous drones released over 
an area of interest facilitating communication in this area. 
The movement of nodes in a M2ANET can be predefined by 
the user, selected at random or purposefully controlled for the 
best performance. When the mobile nodes select for 
themselves their movement, we call to such a network  a Self-
organizing Mobile Medium Ad hoc Network (SMMANET). 
A sample node movement control for a SMMANET based on 
attraction/repulsion paradigm was proposed by Almutairi et 
al. [4]. There, the mobile nodes can move in any direction, 
except when they get too far apart: then they turn back to stay 
together. This type of autonomous control was shown to 
improve the mobile network performance. 
Recently, a number of projects that match the M2ANET 
model have been announced; they include Google Loon 
stratospheric balloons [5] and Facebook high altitude solar 
powered planes [6] for providing Internet services to remote 
areas, and the Swarming Micro Air Vehicle Network 
(SMAVNET) project where remote controlled planes are 
used for create an emergency network [7]. 
In Section II, we present background on self-organizing 
systems and swarm intelligence. The new movement pattern 
based on ant colony control is discussed in Section III. 
Simulation experiments of this movement under different 
scenarios are in Section IV. Finally, we present the 
experimental results in Section V, followed by the conclusion 
and future work. 
II. 
STATE OF THE ART 
A 
M2ANET 
is 
mobile 
network 
comprised 
of 
interconnected mobile nodes, which make wireless multi-hop 
communication possible for mobile users. M2ANETs exhibit 
a fault-resilient nature, given that they are not operating with 
a single point of failure and are very flexible. The deletion 
and addition of new nodes, forming new links are a normal 
part of operation of a M2ANET [1][8][9]. This paper focuses 
on applying the self-organization principles for controlling 
the movement of nodes in the Mobile Medium, aka 
M2ANET. 
W. Ross Ashby formulated the original principle of the 
system of self-organization in 1947, although it was not 
published until 1962. In his paper, Ashby explained the 
fundamental concept of organization, and the integration of 
machines, and how they lead to what he referred to as a 
system of self-organization [10]. Later, in 1999, Bonabeau et 
al. defined the concept of self-organization relating to 
“Swarm Intelligence”. Self-organization can be defined as a 
set of dynamic spontaneous global structures that appear out 
of the local interactions between lower-level components of 
an initially disordered system [11][12]. Spontaneous means 
that the process is not controlled by any agent inside or 
outside the system. Based on purely local information, an 
agent chooses which rules the process and its initial 
conditions should follow. This is distributed across all the 
agents in the system, which follow the same process in 
1
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

parallel. As a result of this, the organization is very robust, 
and self-repairs any damage or perturbations. Any 
elimination or replacement of individual agents will not 
affect the system. In such a complex system, the agents 
directly interact locally with other agents near them, by visual 
contact, chemical contact or by exchanging messages 
wirelessly, and affect the remote agents indirectly by 
changing the environment around them. The agents are goal-
directed and select one outcome over another during the 
evolution of the system [12][13]. Self-organization can be 
found in many different areas of science, e.g., physics, 
chemistry, biology, and telecommunication. Swarming in 
groups of animals, flocks of birds, schools of fish, and 
colonies of insects are common examples of self-
organization in nature. Individuals in swarms behave in a 
simple way that collectively create more complex behaviors. 
They interact locally with each other and with the 
environment around them to create a self-organization 
system able to solve complex problems [12][13].  
Implementing a swarm system with self-organization 
features in wireless networks is a real challenge. Bonabeau et 
al. [11] present self-organization in swarms through positive 
feedback, negative feedback, fluctuations and multiple 
interactions. Positive feedback as a simple behavior may be 
presented as a recruitment and reinforcement. For example, 
the dancing of bees, or laying of pheromone and following 
these trails of ants, are kinds of recruitment for their fellow 
species to reach a food source. On the other hand, negative 
feedback represents a way of balancing positive feedback and 
stabilizing the collective pattern. Fluctuations, such as 
random searches and errors, are important for self-
organization in swarms in order to create creativity, 
innovation and discover new solutions. Finally, multiple 
interactions appear from sharing and spreading information 
between agents in the swarm [11][13]. 
Swarm Intelligence (SI) is an artificial-intelligence 
approach to problem-solving using algorithms based on the 
self-organized collective behavior of social insects such as 
ants, bees, birds, fish, wasps, and termites that follow very 
basic rules [11]. Beni and Wang introduced the expression 
"Swarm Intelligence" in 1989 in the context of cellular 
robotic systems [14]. Natural swarm systems made up of 
millions of flexible individual agents following simple rules 
demonstrate complicated group behavior. Such systems can 
be found in ant and bee colonies, flocks of birds, and schools 
of fish [15][16]. SI based on the nature of insects provides a 
basis on which it is possible to explore collective (or 
distributed) problem-solving methods without centralized 
control or the provision of global models such as MANETs 
[16][17][18]. Swarm Intelligence algorithms can be used in 
MANETs and in M2ANETs to control the movement of the 
nodes in order to follow an optimal forwarding path during 
the network run time. Nodes using an SI algorithm have the 
same ability to connect as any other mobile nodes, except that 
they move dynamically and are called agents. The agents 
follow very simple rules, although there is no centralized 
control structure dictating how individual agents should 
behave. These interactions between agents may lead to 
"intelligent" global behavior, unrecognized by the individual 
agents [19][20][21]. 
The Particle Swarm Optimization (PSO) algorithm was 
introduced to solve nonlinear function optimization based on 
swarm intelligence by Kennedy, Eberhart and Shi in 1995 
[22]. Particle Swarm Optimization is an Artificial 
Intelligence (AI) technique, related to both genetic 
algorithms and evolutionary programming, to model group 
movement behavior inspired by flocks of birds and schools 
of fish. An example is birds flying randomly searching for 
food in different places, until one of the birds is close to the 
food source. The other birds then need to learn which bird is 
nearest to the food and how far away the food is. At this point, 
the bird shares the information about the position of the food 
with the other birds in the flock. Transference of the correct 
information will enable the flock to follow the bird closest to 
the food to reach the food [23] [24]. In this example, the flock 
represents the swarm solution and the food source represents 
the optimal solution. 
Ant Colony Optimization (ACO) is a type of optimization 
algorithm modeled on the actions of an ant colony using a 
swarm intelligence method. In 1996 Marco Dorigo, Vittorio 
Maniezzo and Alberto Colorni proposed the ACO approach 
based on their observation of ant behavior in nature [25]. 
ACO methods are useful in problems that need to find paths 
to goals. The first ACO algorithms aimed to solve the NP-
complete Travelling Salesman Problem [TPS] with the goal 
of finding the shortest round trip between a series of cities 
[25][26][27]. In nature, ants without vision (almost blind) 
explore the environment around the colony searching 
randomly for a food source. When an ant finds food, it leaves 
a chemical pheromone trail on the path taken returning to the 
colony carrying that food. The other ants start following that 
pheromone trail to reach the food source [28] [29]. 
Pheromone is not permanent, it evaporates over time and 
distance. The pheromone evaporates from the longer paths 
faster than the shortest one and in this way ants always find 
the shortest path to the food source. Artificial 'ants' as 
simulation agents locate optimal solutions by moving 
through a parameter of space representing all possible 
solutions to solve a problem [30][31][32]. 
Colorni, Dorigo and Maniezzo developed the first and 
simplest Ant Colony Optimization algorithm, called Ant 
System (AS) [25]. The Ant System algorithm was inspired by 
the parallel search over different paths for real ants in nature. 
Real ants take several ways to solve their problems based on 
the data and information stored in their memory about 
previously obtained results [25][33]. The AS transition 
probability was modified to include heuristic information. 
Also, a tabu list was added to the AS implementation as a 
memory capacity. In AS, a set of agents (Ants) follows local 
decisions to move through nodes (places) to solve a problem 
[34][35]. The probability rule used by the ant to move from 
place 𝑖 to place 𝑗 during iteration is:  
2
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

𝑝𝑖𝑗
𝑘 = {
𝜏𝑖𝑗
𝛼 𝜂𝑖𝑗
𝛽
∑
𝜏𝑖𝑘
𝛼 𝜂𝑖𝑘
𝛽
𝑘∉𝑡𝑎𝑏𝑢𝑘
             𝑖𝑓 𝑗 ∉ 𝑡𝑎𝑏𝑢𝑘
0                                     𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒
             (1) 
                                                                       
𝜏𝑖𝑗- amount of pheromone trail, 
𝜂𝑖𝑗- visibility (0 ≤ 𝜂𝑖𝑗 ≤ 1), 
𝛼- impact of trail defined by the user (0 ≤ 𝛼 ≤ 1), 
𝛽- attractiveness defined by the user (0 ≤ 𝛽 ≤ 1), 
𝑡𝑎𝑏𝑢𝑘- tabu list contain the visited cities by antk during 
current iteration. 
 
The visibility value represents the heuristic information, 
which can be calculated by using the following expression: 
𝜂𝑖𝑗 =
1
𝑑𝑖𝑗                                        (2)   
                                                                                                                             
𝑑𝑖𝑗- distance between place 𝑖 to place 𝑗. 
 
Each ant leaves a trail called pheromone 𝜏 after 
completing a solution to attract the other ants. This 
pheromone trail 𝜏 can be modified by other ants moving 
along the same path or it can just evaporate over time [35]. 
The pheromone 𝜏𝑖𝑗 laid on the connected edge between place 
𝑖 and place 𝑗 is updated by using the following equations: 
𝜏𝑖𝑗(𝑡 + 1) = (1 − 𝜌)𝜏𝑖𝑗(t) + ∑
∆𝜏𝑖𝑗
𝑘
𝑚
𝑘=1
            (3)  
                                                                                          
             ∆𝜏𝑖𝑗 = ∑
∆𝜏𝑖𝑗
𝑘
𝑚
𝑘=1
                                   (4)                                                                                                         
  
                                                     
∆𝜏𝑖𝑗
𝑘 = {𝑄 𝐿𝑘   𝑖𝑓 𝑎𝑛𝑡𝑘 𝑢𝑠𝑒𝑑
⁄
 𝑝𝑎𝑡ℎ(𝑖, 𝑗)
0       𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒                                    (5)                                                        
                              
𝜌- the evaporation coefficient defined by the user 
(0 ≤ 𝜌 ≤ 1), 
𝑚-the number of ants, 
∆𝜏𝑖𝑗
𝑘 - the pheromone quantity laid by antk on the path (i,j), 
𝑄- constant, often 1, 
𝐿𝑘-the tour length of the solution obtained by antk. 
 
The ant agents use the pheromone trail information to 
control movement through the search operation to find the 
optimal solution for the problem [32][33][35]. 
III. 
ANT COLONY MOVEMENT CONTROL IN MOBILE 
MEDIUM 
M2ANET is a high dynamic network, also called Mobile 
Medium, where all the mobile nodes are moving in many 
directions at different speeds. This rapid movement of the 
mobile nodes causes changes in the M2ANET topology, 
which increase the rerouting and possibly disconnections 
between the source node and the destination node. This 
continual rerouting affects network performance and 
decreases packet transmission rates. In order to improve 
M2ANET performance, a dynamic-movement node-control 
algorithm based on SI is proposed to control the mobile node 
movement according to the node's awareness of the traffic 
condition. The proposed Ant System Node Control (ASNC) 
algorithm is implemented to control the mobile node 
movements in M2ANET according to the traffic condition in 
the network. The proposed ASNC is adapted from the ACO 
algorithm, and more specifically from the AS algorithm [35]. 
In this paper the proposed ASNC algorithms is used for 
movement control of mobile nodes in a Mobile Medium, and 
not simply for routing. It should be noted here that a variety 
of related SI studies and algorithms are already used 
specifically 
for 
routing: 
Ant-colony-based 
Routing 
Algorithm (ARA) [36], Simple Ant Routing Algorithm 
(SARA) [37], Ad-hoc Networking with Swarm Intelligence 
(ANSI) [38], AntHocNet hybrid algorithm [39], AntNet 
routing algorithm [40], and HOPNET routing algorithm [41].  
At the start, the mobile nodes are moving randomly in a 
M2ANET without any control. A stationary source node 
represents the ant colony while the destination node 
represents the position of the food source. The mobile nodes 
act like Ant-agents, they explore the simulation area 
randomly until the routing protocol detects the first 
forwarding path between the source and the destination. At 
this time, each active forwarding node, ant-agent, leaves a 
pheromone trail at its position, and the accumulation of the 
deposited pheromone shows the forwarding path that the 
packets transmit through from the source to the destination. 
Next, the other mobile nodes, ant-agents, start moving 
towards these pheromone trail positions deposited by the 
forwarding ant-agents. Each time a forwarding path is 
detected in the M2ANET, the active forwarding ant-agents 
deposit new pheromone trails at their forwarding positions. 
The pheromone trails are not permanent, they evaporate over 
time. Regarding a possible implementation of the ASNC 
approach in a M2ANET, while depositing the actual 
pheromone at a particular location may be possible in a 
biological system, the actual mobile network would have to 
use different means for marking and communicating the 
pheromone locations. While the means of implementing this 
pheromone marking is beyond the scope of this paper, one 
might consider having each node broadcast the intensity and 
the location of deposited pheromone trail to all other nodes in 
the network. 
In the ASNC approach, the deposited pheromone 
locations are modified by ant-agents, mobile nodes, moving 
toward new forwarding positions, otherwise the pheromone 
evaporates from the forwarding position over time as 
specified in the AS update equation (Equation 3). The ant-
agents follow the pheromone trail and move from one 
position to another using the AS probability rule (Equation 
1). A sample evolution of the pheromone trail recorded in our 
sample experiments is illustrated in Figures 1 and 2. The 
pheromone trail marks the locations the forwarding activity 
took place recently and, we hypothesize, where the 
forwarding activity is likely to take place again. The size of 
each circle indicates the pheromone intensity, different 
colours are used to better visualize separate pheromone 
deposits. Circles at locations (50, 400) and (950, 600) mark 
the location of the data source and the destination, and not the 
pheromone deposits.  
3
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

 
Figure 1. Initial pheromone trail. 
 
Figure 2. Evolved pheromone trail showing preferred node locations. 
 
The pheromone trail is deposited based on the traffic 
condition of M2ANET and is used to control the movement 
of ant-agents during the simulation allowing them to find a 
position on a forwarding path between the communicating 
nodes, the source and the destination, and consequently to 
improve the network performance. 
IV. 
SIMULATION EXPERIMENT 
We used simulation in ns2 to test the new proposed ASNC 
algorithm that aims to control the mobile node movement in 
M2ANET based on awareness of the traffic condition in the 
network. ASNC used to control the random movement of 
mobile nodes is adapted from the AS algorithm, which is one 
of the existing ACO algorithms. For comparison, we used the 
random mobility model as a reference case scenario, mostly 
because it is a standard model used in network simulation. 
The base case model used is the Random Way Point (RWP) 
model available in ns2 [42]. In RWP, nodes are moved in a 
piecewise linear fashion, with each linear segment pointing 
to a randomly selected destination and the node moving at a 
constant, but randomly selected speed. 
All ASNC experiments simulated in ns2 initially utilized 
the RWP model in a restricted area of 1000x1000 meters. The 
mobile nodes, representing the ant agents, move toward 
random destinations at random speeds with an average speed 
of 4 m/s. In the experiments based on ASNC, two stationary 
nodes, the source and destination nodes located at (50,400) 
and (950,600) coordinates respectively, are communicating 
with each other using the CBR traffic generator over UDP. 
The experiments run over two different ad-hoc network 
routing protocols, Ad hoc On-demand Distance Vector 
(AODV) and Destination Sequenced Distance Vector 
(DSDV), on simulated mobile networks with five different 
node densities: 5, 10, 20, 30, and 40 nodes. Node density 
indicates the total number of mobile nodes in the 1000 m by 
1000 m square region modelled in the experiments. Each 
mobile network scenario has been simulated three times for 
500 second simulation run time and the average results taken; 
simulation details are summarized in Table 1. 
TABLE I.  
SIMULATION PARAMETERS 
Parameters 
Simulator 
NS-2.34 
Channel Type 
Channel / Wireless Channel 
Network Interface Type 
Phy/WirelessPhy 
Mac Type 
Mac/802.11 
Radio-Propagation Type 
Propagation/Two-ray ground 
Interface Queue Type 
Queue/Drop Tail 
Link Layer Type 
LL 
Antenna 
Antenna/Omni Antenna 
Maximum Packet in ifq 
50 
Area (n * n) 
1000 x 1000m 
Source node location 
(50, 400) 
Destination node location 
(950, 600) 
Source Type 
CBR over UDP 
packetSize_ 512 
interval_ 0.05 
Simulation Time 
500 s 
Routing Protocol 
AODV and DSDV 
 
At the beginning of each experiment, the mobile nodes 
move randomly to explore the simulation area without any 
control. The traffic of the network is observed during the 
entire simulation run time, waiting for the routing protocol to 
detect a forwarding path. The control mechanism starts when 
the first forwarding path is detected by the routing protocol. 
At this moment the information about the forwarding path 
becomes available including the ids of the active forwarding 
nodes and their positions. At the same time each forwarding 
node deposits a pheromone trail 𝜏 marking the location where 
the forwarding activity took place. (In the experiment, the 
simulator kept the locations of the pheromone deposits and 
made them available to all the network nodes.) The amount 
of the deposited pheromone trail 𝜏 on a new forwarding 
position is initially equal to one. These pheromone trails 
demonstrate the forwarding path that has been used to 
transmit data packets between the communicating nodes. For 
the ant agents, the source node represents the ant colony 
while the destination node represents the food source in the 
simulation. Rather than moving randomly, the nodes, ant-
agents, move toward the positions where the pheromone 
deposits are the strongest marking the locations where the 
forwarding activity took place recently. The closest 
pheromone trail position to the current position of the mobile 
node with the highest pheromone amount will be selected.  
The decision about where to move next during the 
4
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

simulation is taken by applying the probability rule, which is 
also adapted from the AS algorithm (Equation 1). In ASNC 
the values of the probability rule parameters for 𝛼, the impact 
of the trail, and 𝛽, the attractiveness, were set to 0.5 while the 
distance value in the visibility 𝜂𝑖𝑗 =
1
𝑑𝑖𝑗 (Equation 2) was 
calculated based on the distance between the communication 
nodes and the forwarding position. Changing the values of  𝛼 
and 𝛽 in the experiments did not affect 
the 
Packet 
Delivery Ratio (PDR) results. When the mobile nodes reach 
their destination positions, they pause for three seconds 
before determining again where to move next. 
A pheromone trail deposited on a forwarding position is 
modified when another mobile node moves toward this 
forwarding position, otherwise the pheromone evaporates 
over time. To update the pheromone trail 𝜏 the update 
equation (Equation 3) has been adapted from the AS 
algorithm where the evaporation coefficient 𝜌 value is equal 
to 0.01 and the constant 𝑄 is equal to 1. Also, changing the 
values of 𝑄 and 𝜌 did not affect the PDR result of the 
experiments. The update equation increases the pheromone 
amount on the visited forwarding positions and reduces 
and/or evaporates the pheromone amount on the unvisited 
forwarding positions. A new pheromone trail 𝜏 is deposited 
by the forwarding nodes each time the routing protocol 
detects a new forwarding path in M2ANET. The mobile 
nodes visit several forwarding positions before they find the 
perfect positions to transmit packets between communicating 
nodes.  
V. 
RESULTS AND ANALYSIS OF ASNC 
The performance of a Mobile Medium network 
implementing the ASNC node movement control algorithm 
was investigated using the simulated networks with varying 
number of nodes and running two different routing protocols 
AODV and DSDV. The experiments were conducted using 
the ns2 simulator and the performance of a M2ANET was 
measured in terms of PDR, End-to-End Delay and Forward 
Path Time Detection (FPTD).  
A. AODV performance: PDR 
Attracting the mobile nodes to move toward the best 
forwarding positions based on the deposited pheromone trails 
resulted in a significant increase in the delivery ratio in 
M2ANET (Figure 3). At a very low density, with only five 
mobile nodes, no forwarding paths were detected by the 
routing protocol AODV during the entire simulation run 
time. As a result, zero packets have been delivered in these 
experiment. Increasing the mobile node density to 10 showed 
a PDR of 26% for ASNC, compared with 4% in the Random 
movement experiment. The experiment with 20 mobile nodes 
in ASNC showed the most interesting results and the best 
benefit of controlling the node movements based on the 
behavior of ants in nature. With 20 mobile nodes, 89% of the 
data packets have been successfully delivered to the 
destination resulting in an improvement of 57% over the 
Random movement. The network with 30 or 40 mobile node, 
i.e., at high node density, performed very well at any 
circumstances giving a delivery ratio of 90% and 97% in 
ASNC compared with 74% and 88% with the Random 
movement, respectively.  
 
 
Figure 3. AODV performance: delivery ratio. 
 
B. AODV performance: end to end delay 
At five mobile nodes density, no packets have been delivered 
to the destination, (Figure 4). The longest packet delay, 
observed in the network with 10 mobile nodes, dropped from 
786 ms in the Random scenario to 239 ms in ASNC. For a 
network with 20 mobile nodes, the packet delay decreased to 
73 ms (together with the increase in the PDR) from 583 ms 
in Random movement. For the high mobile node densities of 
30 and 40 nodes, the end to end delays were 70 ms and 69 ms 
in ASNC and  201 ms and 125 ms in the Random scenario. 
 
 
Figure 4. AODV performance: delay. 
 
C. AODV performance: FPTD 
For the experiments with 10 mobile nodes, the average FPTD 
for AODV was 279 seconds, reduced to 87 seconds by 
increasing the number of the mobile nodes to 20, (Figure 5). 
With high mobile node densities, the AODV routing protocol 
was able to detect the first forwarding path in a very short 
time, less than 10 seconds, which also improved the overall 
delivery ratio during the experiments.  
N
1 
5
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

D. DSDV performance: PDR 
As expected, no packet were delivered in the very low mobile 
node density experiments (Figure 6). For 10 mobile nodes, 
1.3% of the total packets have been delivered, compared with 
0.6% delivery ratio in the Random movement over the DSDV 
routing protocol. These result changed when more mobile 
nodes are added in the experiments, i.e., when using 20 
mobile nodes rather than just 10 nodes. The PDR reached 
55% during the experiments with only 20 mobile nodes, 
almost 50% higher than the Random movement even with 40 
nodes. In all previous experiments using either DSDV or 
AODV, scenarios with 20 mobile nodes showed the best 
absolute improvement in performance when using the  ASNC 
algorithm for controlling the movements of mobile nodes in 
M2ANET. With a density of 30 mobile nodes, the PDR in the 
Random movement was 21% of packets delivered, which 
improved to 55% with ASNC. The density of 40 mobile 
nodes resulted in the PDR of 58%, which is higher than in the 
Random scenario. 
 
 
 
Figure 5. AODV performance: path detection. 
 
 
Figure 6. DSDV performance: delivery ratio. 
E. DSDV performance: end to end delay 
No packets were delivered in a network with only five nodes. 
The packet delay for a network with 10 mobile nodes and 
when ASNC was used improved to 208 ms, compared with 
760 ms in the Random movement, (Figure 7). Increasing the 
mobile node density to 20 nodes decreased the delay to 49 
ms, which was half the delay experienced in the Random 
movement. The packet delay at the high mobile node density 
of 30 and 40 nodes reached 39 ms and 50 ms respectively, 
while in the Random movement the results were above 80 
ms.  
 
 
Figure 7. DSDV performance: delay. 
F. DSDV performance: FPTD 
Unlike in AODV, detecting a forwarding path in DSDV 
proactive routing protocol took a considerable time. In the 
ASNC experiments with 10 mobile nodes, it DSDV took 299 
seconds to find a good route for transmitting data packets 
between the communication nodes, which was 20 seconds 
longer than in the experiments with AODV (Figure 8). The 
FPTD for the network with 20 mobile nodes utilizing DSDV 
was 90 seconds, followed by 71 seconds for 30 nodes and 50 
seconds for 40 nodes. For ASNC over AODV experiments 
(Figure 5), the FPTD with 20 mobile nodes was 87 seconds, 
then dropped significantly for the high mobile node densities, 
showing a difference of at least 50 seconds compared to the 
DSDV results. The DSDV delay in detecting forwarding 
paths, which was larger than the delay in AODV, negatively 
affected the PDR network performance, Figures 3 and 6. 
 
 
Figure 8. DSDV performance: path detection. 
 
Please note again, that in the experiments with five 
mobile nodes, no forwarding paths were detected during the 
entire 500 second simulation experiments with either AODV 
or DSDV routing protocol. 
VI. 
CONCLUSION AND FUTURE WORK 
The new proposed ASNC algorithm is an adaptive ACO 
algorithm that aims to control the movement of mobile nodes 
in M2ANET. The adaptive ASNC algorithm is a complex 
N
1 
6
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

self-organization paradigm used for controlling the 
movement of mobile nodes and make them behave in a way 
similar to a swarm of ants in nature. The ASNC algorithm 
observes the traffic condition in the network, waiting for the 
right moment to move the mobile nodes in the direction of 
where the forwarding activity is taking place. The mobile 
nodes in ASNC represent the ant-agents; they leave a trail in 
their path, called the pheromone trail, to attract other ant-
agents to move toward the places they marked. These marked 
locations are the positions in the network where forwarding 
activity took place recently, and moving toward these 
positions was shown to improve the network performance. 
The ASNC experiments were simulated for different mobile 
node densities over AODV and DSDV routing protocols. The 
ASNC PDR results showed significant improvements over 
the scenarios with the Random movement, at all the mobile 
node densities. As expected, the experiments with the low 
mobile node densities showed a low delivery ratio compared 
with the PDR results for the high mobile node densities, for 
both AODV and DSDV. Moreover, the experiment with 20 
mobile nodes demonstrated the highest benefit of using 
ASNC in M2ANET for controlling the movement of the 
mobile nodes.  In ASNC, the networks running AODV 
routing protocol performed better than the ones with DSDV. 
AODV performed better in a highly dynamic network, such 
as M2ANET, due to its quick discovery and maintenance of 
the routes. In the experiment with high mobile node densities, 
AODV was able to detect the first forwarding path in less 
than 10 seconds, while it took DSDV between 50 and 70 
seconds. The performance of ASNC in M2ANET over 
AODV showed better delivery ratio results, where 10% to 
50% more packets were delivered than in the experiments 
with the Random movement. DSDV experiments showed 
performance improvements of 20-50 percent when compared 
to the reference Random movement.  
In future, other scenarios may be considered in 
experiments, such as changing the source and destination 
positions during the simulation rather than keeping them 
stationary for the entire time. In addition, a scenario with 
multiple communication nodes, two senders and one receiver 
or one sender communicating with different receivers may 
provide interesting results. Also, as the ASNC approach 
requires that all mobile network nodes have access to the 
locations indicating where the pheromones have been 
deposited, the means of distributing this information to all 
nodes may need to be developed. The obvious means of 
accomplishing this would be to use broadcast messages sent 
by each node at the time when it deposits a pheromone trail, 
however, the effectiveness of broadcasting in a network like 
M2ANET, and any delays involved in this process would 
require further investigation.  Other routing protocols may 
also be considered, e.g., Dynamic Source Routing (DSR), in 
order to compare the performance over different routing 
protocols. As the ASNC algorithm adapts the AS from the 
ACO algorithms in order to control the movement of mobile 
nodes, other SI algorithms could also be considered to control 
the movement of the mobile nodes, for example Rank-Based 
Ant System, Max-Min Ant System and Best-Worst Ant 
System. Algorithms from BCO rather than ACO could also 
be explored using, for example, the Artificial Bee Colony 
approach. 
ACKNOWLEDGMENT 
This work was sponsored and funded by the Ministry of 
Higher Education of Saudi Arabia through the Saudi Arabian 
Cultural Bureau in Canada. 
REFERENCES 
[1] S. Basagni, M. Conti, S. Giordano, and  I. Stojmenovic (Eds.), Mobile 
Ad Hoc Networking, New York, Wiley-IEEE Press, 2001. 
[2] F. Bei and A. Helmy, A survey of mobility models in wireless Ad hoc 
Networks, University of California, USA,2004. 
[3] J. DeDourek and P. Pochec, "M2ANET: a Mobile Medium Ad Hoc 
Network", Wireless Sensor Networks: Theory and Practice, WSN 2011, 
Paris, France, Feb. 2011, pp. 1-4.  
[4] H. Almutairi, J. DeDourek, and P. Pochec, "Dynamic Node Movement 
Control in a Mobile Medium Ad hoc Network", The Seventh International 
Conference on Emerging Networks and Systems Intelligence, EMERGING 
2015, Nice, France, July 2015, pp. 50-54. 
[5] H. Hodson, "Google's Project Loon to float the internet on balloons", 
New Scientist, October 2013.  
[6] J. Brustein, "Facebook’s Flying Internet Service, Brought to You by 
Drones", Bloomberg Businessweek, March 4, 2014. 
[7] A. J. Pacheco, D. Bouhired, Y. Gasser, J-C. Zufferey, D. Floreano and B. 
Rimoldi, "Implementation of a Wireless Mesh Network of Ultra Light 
MAVs with Dynamic Routing", IEEE GLOBECOM 2012, 3rd International 
IEEE Workshop on Wireless Networking & Control for Unmanned 
Autonomous Vehicles 2012, Anaheim, California, USA, 2012. 
[8] D. P. Agrawal and Q. A. Zeng, Introduction to Wireless and Mobile 
Systems, Thomson Engineering, 2010, 1591-1596. 
[9] S. K. Sarkar, T. G. Basavaraju, and C. Puttamadappa,  Ad Hoc Mobile 
Wireless Networks, Principles, Protocols, and Applications, Auerbach 
Publications Taylor & Francis Group, 2007. 
[10] W. R. Ashby, "Principles of the self-organizing system", Principles of 
Self-Organization, Transactions of the University of Illinois Symposium, H. 
Von Foerster and G. W. Zopf, Jr. (eds.), Pergamon Press: London, UK, 1962, 
pp. 255-278. 
[11] E. Bonabeau, M. Dorigo, and G. Théraulaz, Swarm Intelligence: From 
Natural to Artificial Systems, Oxford, UK: Oxford University Press, 1999. 
[12] S. Camazine, J. Deneubourg, N. R. Franks, J. Sneyd, G. Théraulaz, and 
E. Bonabeau, Self-Organization in Biological Systems, Princeton 
University, 2001. 
[13] Z. Zhang, K. Long, J. Wang, and F. Dressler, "On Swarm Intelligence 
Inspired Self-Organized Networking: Its Bionic Mechanisms, Designing 
Principles and Optimization Approaches", Communication Surveys & 
Tutorials, IEEE, Volume 16, Issue 1, July 2013, pp. 513-537.  
[14] G. Beni and J. Wang, "Swarm intelligence in cellular robotics systems", 
Proceeding of NATO Advanced Workshop on Robots and Biological 
System, 1989, pp. 1–9. 
[15] A. Jevtic and D. Andina, Swarm Intelligence and Its Applications in 
Swarm Robotics, 6th WSEAS Int. Conference on Computational 
Intelligence, Man-Machine Systems and Cybernetics, Tenerife, Spain, 
December 14-16, 2007, pp. 41-46. 
[16] A. K. Mishra, M. N. Das, and T. C. Panda, Swarm Intelligence 
Optimization: Editorial Survey, International journal of Emerging 
Technology and Advanced Engineering, Volume 3, Issue 1, January 2013, 
pp. 217-230.  
[17] S. Ziane and A. Mellouk,  A Swarm Intelligent Multi-path Routing for 
Multimedia Traffic over Mobile Ad hoc Networks, Q2SWinet’05, Montreal, 
Quebec, Canada, October 2005, pp. 55-62. 
[18] C. Grosan, A. Abraham, and M. Chis, Swarm Intelligence in Data 
Mining, Studies in Computational Intelligence (SCI) 34, 2006, pp. 1–20. 
7
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

[19] D. Floreano and C. Mattiussi, Bio-inspired Artificial Intelligence: 
Theories, Methods, and Technologies, The MIT Press, e-ISBN: 
9780262272858, August 2008. 
[20] J. Kennedy, R. C. Eberhart, and Y. Shi, Swarm Intelligence, Elsevier, 
ISBN 1-55860-595-9, 2001. 
[21] D. P. Buus, Constructing Human-Like Architecture with Swarm 
Intelligence, Aalborg University, Project Library, Aalborg, Denmark, 
August 2006. 
[22] J. Kennedy and R. Eberhart, Particle Swarm Optimization, IEEE 
Conference on Neural Networks, Perth, WA, Nov./Dec. 1995, pp. 1942-
1948. 
[23] Qinghai Bai, "Analysis of Particle Swarm Optimization Algorithm", 
CCIS Computer and Information Science, Vol. 3, No. 1, February 2010, pp. 
180-184. 
[24] J. van Ast, R. Babusˇka, and B. De Schutter, "Particle Swarms in 
Optimization and Control", Proceedings of the 17th IFAC World Congress, 
Seoul, Korea, July 2008, pp. 5131– 5136,. 
[25] M. Dorigo, V. Maniezzo, and A. Colorni, "The Ant System: 
Optimization by a colony of cooperating agents", IEEE, Transactions on 
Systems, Man, and Cybernetics-Part B, Vol. 26, No. 1, 1996, pp.1-13. 
[26] M. Dorigo and T. Stutzle, Ant Colony Optimization, MIT Press, ISBN 
0-262-04219-3, June 2004. 
[27] S. Dehuri, S. Ghosh, and S. Cho, Integration of Swarm Intelligence and 
Artificial Neural Network, World Scientific, ISBN: 978-981-4467-31-5, 
June 2011. 
[28] L. P. Walters, Application of Swarm Intelligence, Chapter 7 & 10, ISBN 
978-1-61728-813-5, Nova Science Publishers, 2011.    
[29] S. Prasad, Y.P.Singh, and C.S.Rai, "Swarm Based Intelligent Routing 
for MANETs", International Journal of Recent Trends in Engineering, Vol 
1, No. 1, May 2009, pp. 153-158. 
[30] R. Singh, D. K. Singh and L. Kumar, "Swarm Intelligence Based 
Approach for Routing in Mobile Ad Hoc Networks", International Journal 
of Science and Technology Education Research Vol. 1(7), December 2010, 
pp. 147–153. 
[31] S. Binitha and S. S. Sathya, "A Survey of Bio inspired Optimization 
Algorithms", International Journal of Soft Computing and Engineering 
(IJSCE), ISSN: 2231-2307, Vol. 2 (2), May 2012, pp. 137-151. 
[32] S. D. Shtovba, "Ant Algorithms: Theory and Applications", 
Programming and Computer Software, Vol. 31, No. 4, 2005, pp. 167-178. 
[33] A. P. Engelbrecht, Computational Intelligence An Introduction, John 
Wiley & Sons, Ltd, ISBN 978-0-470-03561-0, Chapter 17, 2007.  
[34] G. C. Onwubolu and B. V. Babu, New Optimization Techniques in 
Engineering, Studies in Fuzziness and Soft Computing, Springer, Vol. 141, 
Chapter 5, ISBN 978-3-540-39930-8, 2004. 
[35] P. Guo and Z. Liu, "An Ant System based on Moderate Search for TSP", 
ComSIS, Vol. 9, No. 4, Special Issue, December 2012, pp. 1533-1552. 
[36] M. Gunes, U. Sorges, and I. Bouazizi, "ARA – The Ant-Colony Based 
Routing Algorithm for MANETs", IWAHN, Vancouver, British Columbia, 
Canada, August 2002, pp. 1-7. 
[37] F. Correia and T. Vazao, "Simple Ant Routing Algorithm", ICOIN, 
IEEE, January 2008, pp. 1-8. 
[38] S. Rajagopalan and C. Shen, ANSI: A swarm intelligence-based unicast 
routing protocol for hybrid ad hoc networks, Elsevier, 2006. 
[39] G. Di Caro, F. Ducatelle, and L. M. Gambardella, "AntHocNet: an Ant-
Based Hybrid Routing Algorithm for Mobile Ad Hoc Networks", Proc. 8th 
International Conf. on Parallel Problem Solving from Nature, 2004, pp. 461-
470. 
[40] G. Di Caro and M. Dorigo, "AntNet: A Mobile Agents Approach to 
Adaptive Routing in Communication Networks", unpublished presentation, 
Ninth Dutch Conference on Artificial Intelligence (NAIC '97), November 
1997.  
[41] J. Wang, E. Osagie, P. Thulasiraman, and R. K. Thulasiram, "HOPNET: 
A hybrid ant colony optimization routing algorithm for mobile ad hoc 
network", Journal of Ad Hoc Networks, Elsevier, Vol. 7, No. 4, June 2009, 
pp. 690-705. 
[42] H. Ekram and T. Issariyakul, Introduction to Network Simulator ns2, 
Springer, 2009. 
 
 
 
 
8
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-491-6
AFIN 2016 : The Eighth International Conference on Advances in Future Internet

