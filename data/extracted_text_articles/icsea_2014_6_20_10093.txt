 
 
Usage of Kanban in Software Companies 
An empirical study on motivation, benefits and challenges  
 Muhammad Ovais Ahmad, Jouni Markkula, Markku Oivo, Pasi Kuvaja  
Department of Information Processing Science 
University of Oulu  
Finland  
e-mail: {Muhammad. Ahmad, Jouni. Markkula, Markku. Oivo, Pasi. Kuvaja}@oulu.fi 
 
  
Abstract— There is a growing interest in applying Kanban in 
software development to reap the proclaimed benefits 
presented in the literature. The goal of this paper is to provide 
up-to-date knowledge of the current state of Kanban usage in 
software companies, regarding the motivation for using it as 
well as the benefits obtained and challenges faced in its 
adoption. In addition, we investigate how the challenges 
identified in the study can be addressed. For this purpose, an 
empirical study was conducted consisting of a survey and 
complementing thematic interviews. The empirical study was 
carried out in November-December 2013 within large Finnish 
software companies, which extensively use Agile and Lean 
approaches. The obtained results are largely in line with the 
findings of earlier research reported in the literature. 
Generally, the experiences of using Kanban are rather 
positive; however, challenges in adoption identified include a 
lack of specialised training and usage experience, and a too 
traditional organisational culture. 
 Keywords- Kanban; Lean; Agile; Software development. 
I. 
 INTRODUCTION 
Today, Agile and Lean are used in most global industries 
including the software industry. The Lean approach has been 
developed and found successful in the manufacturing 
industry [1], and it was later adopted by the software 
engineering field.  
The key trait of Lean is to eliminate all kinds of waste 
from the development. Poppendieck and Poppendieck [1] 
transformed Lean manufacturing principles for use in the 
software engineering field. In order to eliminate and manage 
waste Poppendieck and Poppendieck [1] proposed the 
following set of principles:  
 
 
Build quality in 
 
Create knowledge  
 
Defer commitment  
 
Deliver fast  
 
Respect people  
 
Optimise the whole  
 
In software development, all things that do not produce 
value for the customer are considered “waste”. For example, 
partially completed work, extra processes, extra features, 
task switching and defects are also considered a waste [1].  
Kanban is one way to execute Lean thinking, used for 
decades in managing production operations at Toyota [2]. It 
is the most recent addition to the Agile and Lean software 
development. In recent years, Kanban has become more 
popular in software development. A strong practitioner-
driven movement emerged to supporting it [3][4]. Currently, 
Kanban method is being increasingly adopted to complement 
Scrum and other Agile methods in software processes.  
Despite the recent increasing interest in Kanban among 
practitioners, existing scientific literature addresses it 
infrequently in the context of software development. Only a 
few studies on Kanban usage, how it is carried out in practice 
and its effects in software development have been published 
[5]. With the goal of providing up-to-date results that can be 
utilised by organisations implementing or planning to 
implement Agile and Lean methods, we have conducted an 
empirical study on the current state of Kanban usage in 
software companies. We carried out the study in the Cloud 
software and Need for Speed program, which is a large 
Finnish national program aiming at improving the 
competitive position of the Finnish software intensive 
industry in global markets by pioneering the building of new 
cloud business models, a Lean software enterprise model and 
open cloud software infrastructure. The program involves 
more than 30 research organisations and enterprises, 
including most of the major Finnish software companies that 
are actively using and researching Agile and Lean [5].  We 
conducted a survey and a set of interviews addressing the 
following questions: 
 
 
Why is Kanban used in software companies? 
 
What are the benefits, of using Kanban? 
 
What are the challenges in adopting Kanban and its 
solutions?  
 
The rest of the paper is structured as follows: Section II 
reviews the current literature on Kanban usage. Section III 
describes the research setting, including the process for 
collecting the empirical data as well as the design of the 
survey and interviews. Section IV present the results of the 
study and compares them with the findings from earlier 
research. 
Finally, 
Section 
V 
concludes 
the 
paper 
summarising the results and discussing the limitations of the 
study. 
150
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
 
II. 
KANBAN BACKGROUND 
Kanban, developed by Taiichi Ohno, was introduced in 
the Japanese manufacturing industry in the 1950s. Kanban 
literally means signboard or visualisation of inventory used 
in the scheduling system for just in time (JIT) production. 
The idea behind the development of Kanban was to find a 
system to maintain and improve production. It is a flow 
control mechanism for pull-driven JIT production, in which 
the upstream processing activities are triggered by the 
downstream process demand signals [2][7]. Kanban runs the 
production system as a whole, and it has proven an excellent 
way of promoting improvement. It was successfully used in 
practice by Toyota. The basic idea behind Kanban usage is to 
execute Lean thinking in practice; however Lean is more 
than Kanban [7][8][9].  
Present-day understanding of Lean and Kanban in 
software development is largely driven by practitioner’s 
books [1][6][10]. The Lean and Kanban principles appear to 
be largely overlapping, reflecting the same grounding. Table 
I shows the Lean software development principles [1] and 
Kanban principles [10], which are known to the Agile 
community.  
TABLE I.  
LEAN AND KANBAN PRINCIPLES 
Lean software development 
principles [1] 
Kanban Principles [9] 
Eliminate waste 
Build quality in 
Create knowledge 
Defer commitment 
Deliver fast 
Respect people 
Optimise the whole 
Visualise the workflow 
Limit work in progress 
Measure and manage flow 
Make process policies explicit 
Improve collaboratively   
 
Kanban in software development originated in 2004, 
when David J. Anderson [10] was assisting a small IT team 
at Microsoft that was operating poorly. Anderson [10] 
introduced Kanban to the team to help the team members 
visualise their work and put limits on their work in progress 
(WIP). The motivation behind visualisation and limiting 
WIP was to identify the constraints of the process and focus 
on a single item at a time. This technique promotes the pull 
approach. In traditional software development, the work 
items are given i.e. “pushed” to each team member, who are 
then instructed to finish as many of them as quickly as 
possible. The traditional development work is in the form of 
a chain in which one team member’s work item is handed 
over to another i.e. from developer to tester. This causes 
delays in the whole process when the next member in the 
line is overloaded or has a problem with his/her work. 
Kanban works in an alternative way. Instead of pushing 
work items, it promotes a pull system. Each member of a 
team has one item to work on at a time. When he/she finishes 
it, he/she will automatically pull the next item to work on. 
In brief, Kanban aims to provide visibility to the software 
development process, communicate priorities and highlight 
bottlenecks [5], which results in a constant flow of releasing 
work items to the customers, as the developers focus only on 
those few items at a given time [6]. Figure 1 shows the 
typical structure of a Kanban board and its principles in 
action. 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. Kanban board and principles in action  [12] 
 
The Kanban method in software development drives 
project teams to visualise the workflow, limit WIP at each 
workflow stage, and measure the cycle time [11]. The key 
motivation for the usage of Kanban is to focus on flow and 
the absence of obligatory iterations.  
Kanban implementation has been relatively successful in 
the manufacturing industry yielding various advantages. 
Successful histories of the manufacturing industry have 
convinced software engineers to adopt this approach; thus, 
151
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
 
the adoption of Kanban in software development has gained 
strong practitioner-driven support.  
The proliferation of the Kanban method in software 
engineering boomed after the first books were published 
[10][12]. The most popular of these books include David J. 
Anderson’s “Kanban” [10], in which he introduced the 
concept of Kanban in systems and software development, 
and Corey Lada’s “Scrumban” [12], in which he discusses 
the fusion of Scrum and Kanban.  
A recent systematic literature review [6] on Kanban in 
software development shows certain benefits and challenges 
in the adoption of Kanban. The main benefits of using 
Kanban in software development are a better understanding 
of 
the 
whole 
process, improved quality 
of 
team 
communication and coordination with stakeholders, and 
better coverage of customer satisfaction [14][15][16]. 
According to [17], the use of Kanban in software 
development improved the lead-time to deliver software by 
37%, the consistency of delivery rose by 47%, and defects 
reported by customers fell by 24% compared to the 
previously used Agile method. Because of the WIP limit, 
highest priority items are pulled to optimise value, resulting 
in improved customer satisfaction [14][15][17]. As Kanban 
does not involve any fixed plans, it helps to avoid 
requirement cramming. 
According to [6], Kanban needs other supporting Agile 
practices to work effectively. However, this mixed approach 
has been problematic for many teams [18]. Motivating staff 
members to use Kanban has been challenging because of 
organisational culture and the stickiness of people to other 
familiar software development methodologies [14][16][18]. 
Additionally, a lack of specialised skills and training, and the 
misunderstanding of core principles have been reasons for 
failing to adopt Kanban [14][16][18].  
III. 
RESEARCH SETTING 
Empirical data was collected from software companies 
participating in a Cloud Software program. The empirical 
study was carried out in two stages. In the first stage, the 
Kanban usage survey was conducted among the participant 
companies’ representatives. The survey was conducted in 
November 2013 using an Internet survey tool. The survey 
included questions on Kanban usage, motivation to use it, 
benefits achieved through its usage, and challenges faced in 
the Kanban adoption stage.  
In 
the 
second 
stage, 
the 
survey 
results 
were 
complemented with semi-structured thematic interviews in 
December 2013, for which the survey respondents 
volunteered. The themes in the interview consisted of 
benefits and challenges of Kanban usage and methods to 
address and tackle the faced challenges. 
In the first stage, an Internet survey request was emailed 
to the company representatives to identify and rate the 
importance of their usage motivations, the benefits achieved 
and challenges faced, while adopting Kanban in their unit. A 
five-point scale was used to assess the rate. The survey was 
open for two weeks. During this time, 21 persons, 
representing 10 different large software intensive companies, 
responded to the survey.  
 In the second stage, eight managerial level company 
representatives were interviewed. The purpose of the 
interviews was to complement the survey results by 
discovering the interviewees’ views on Kanban usage in 
their teams or units. The duration of the interviews varied 
between 60 and 90 minutes (average 70 minutes). All 
interviews 
were 
recorded 
and 
transcribed 
by 
the 
interviewers, and the transcriptions were checked by the 
interviewees to ensure consistency. 
IV. 
RESULTS 
This section presents the results of the Kanban usage 
survey and the thematic interviews. The results of the survey 
are compared with results of earlier studies on Kanban. 
A. Survey results 
Table II and Table III present the positions of the 
respondents in their organisations and the respondents’ 
experiences in software development. 
TABLE II.  
RESPONDENTS BACKGROUND 
Positions 
n 
President/CEO/CTO/Director 
1 
Program Manager/R&D Manager 
3 
Project Manager/Product owner/Agile coach 
7 
Analyst/Developer/Designer 
8 
Consultant/Trainer 
2 
Total  
21 
TABLE III.  
EXPERIENCE IN SOFTWARE DEVELOPMENT 
Years of experience 
n 
% 
1-5 
4 
19 
6-10 
1 
5 
More than 10 
16 
76 
Total  
21 
100 
 
The respondents were working in various positions in 
their organisations. The main organisational roles of the 
respondents were mid-level management (project managers, 
program managers, agile coaches, and analysts), and 76% 
had more than 10 years of software development experience. 
The typical sizes of working teams in the respondents’ 
organisational units are presented in Table IV below.  
TABLE IV.  
TEAM SIZE 
Team size 
n 
% 
1-3 
1 
5 
4-6 
5 
24 
7-9 
11 
52 
10-12 
3 
14 
13 and above 
1 
5 
Total  
21 
100 
 
The teams mostly comprise less than 10 persons. Only 
one company has teams with more than 13 persons. 
Of the respondents, 57% reported that Kanban was used 
in their organisation. Most of the organisations using Kanban 
152
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
 
had been using it for more than one year. The respondents of 
these organisations considered themselves competent in their 
knowledge of Kanban. 
The Kanban users were requested to identify and rate the 
importance of motivation factors, achieved benefits and 
faced challenges while adopting Kanban in their unit. The 
results are presented in Tables V–VII.  
 
TABLE V.  
KANBAN USAGE MOTIVATION 
Motivation for choosing Kanban 
Mean Median 
To improve team communication 
4.4 
5 
To reduce development cycle times & time-to-market 
4.2 
5 
To improve development flow 
4.1 
4 
To increase productivity 
4.1 
4 
To create transparency within the organisation 
3.8 
4 
To improve product and service quality 
3.8 
4 
To improve understanding of the whole value stream 
3.5 
4 
To improve process quality 
3.5 
4 
To improve stakeholders' satisfaction 
3.3 
4 
To remove excess activities 
3.3 
3 
To increase the ability to adapt to changes in the 
business environment 
3.8 
3 
To decrease development costs 
2.9 
3 
To improve organisational learning 
2.6 
3 
To improve the management of business/ product value 
2.5 
3 
To improve customer understanding 
2.6 
2 
 
The results in Table V show the highest motivation 
factors in Kanban adoption are to improve team 
communication, reduce development cycle times and time-
to-market, improve development flow, increase productivity, 
and create transparency within the organisation (with means 
of 4 or higher). According to [11], Kanban usage is 
motivated by its adaptability, ease of management by 
visualising the progress, and driving team members to 
cooperate and communicate. The motivation factors for 
using Kanban in software processes are aligned with what 
Anderson explained [6][10].  
The respondents were also requested to indicate the 
achieved benefits of using Kanban. Those benefits are 
presented in Table VI.  
 
 
 
 
 
 
 
 
 
 
 
TABLE VI.  
ACHIEVED BENEFITS  OF USING KANBAN 
Achieved benefits 
Mean Median 
Better visibility of work 
4.9 
5 
Improved transparency of work 
4.5 
5 
Improved communication 
4.3 
4 
Better flow controls 
4.2 
4 
Better focus on your work 
4.1 
4 
Better control on WIP 
4.0 
4 
Enhanced efficiency 
3.9 
4 
Better understanding of the whole process 
3.7 
4 
Help in building trust 
3.6 
4 
Help in predictability 
3.6 
4 
Decrease in context switching 
3.5 
3 
Enhanced quality 
3.1 
3 
Assist leadership in strategic decision making 
2.7 
3 
 
Table VI shows that the achieved benefits of using 
Kanban are similar to those in the literature. Better visibility, 
improved transparency of work and communication, better 
control of flow and WIP were the most common benefits 
experienced by the respondents of the survey. Such positive 
results correspond to the literature [4][6][7][10][12][19].  
The results in Table VII show the order of significance of 
various challenges in Kanban adoption. 
 
TABLE VII.  
CHALLENGES IN  KANBAN ADOPTION 
Challenges  
Mean Median 
Lack of experience with the Kanban method 
4.0 
4 
Hard to manage WIP limit  
3.9 
4 
Hard to select tasks according to priority 
3.3 
3 
Organisational culture was too traditional 
3.2 
3 
Lack of knowledge and specialised training 
3.1 
3 
No clear vision/roadmap for product(s) 
3.0 
3 
Team members tend to fall back on using old methods 
2.9 
3 
Teams were lacking decision-making ability & authority 
2.6 
3 
Lack of customer/supplier collaboration 
2.5 
3 
Unwillingness of team to follow Kanban 
2.5 
2 
Incomplete planning for Kanban method adoption 
2.4 
2 
Lack of management sponsorship 
2.4 
3 
Decreased predictability 
2.4 
3 
Burden of communication between teams or with in team  
2.3 
3 
Inappropriateness of existing Kanban technologies/tools 
2.3 
3 
Lack of customer presence 
2.3 
3 
Lack of support from the management 
2.2 
2 
Customer was not ready for increased communication 
2.2 
2 
Incompatibility of business domain with Kanban method 
1.9 
2 
 
153
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
 
Lack of experience with Kanban is the main challenge in 
adopting Kanban. Other major challenges are the difficulty 
managing the WIP limit and selecting tasks according to 
priority. Organisational culture, no clear vision or roadmap 
for product and team members tending to fall back on using 
old methods are other challenges that software companies 
face when adopting Kanban. All these challenges could be 
linked to one challenge: a lack of knowledge and specialised 
training.   
B. Interview results 
In this section, the results obtained from the interviews 
are described. The results of the thematic interview analysis 
can be classified into three main themes: benefits obtained, 
challenges faced, and solutions to the challenges in Kanban 
usage.  
 
1) Benefits obtained 
All of the interviewees reported that Kanban works well 
in their teams. Referring to the achieved benefits claimed in 
the survey, one interviewee mentioned, “In our company, 
this is the default way of working in any team that has any 
support or operations type of work when the next two weeks 
just cannot be planned beforehand. I see the enhanced 
customer feedback loop as one of the main benefits”.  
In line with the survey results regarding Kanban effects 
on their teamwork, an interviewee elaborated, “Kanban 
works perfectly; the team can see the bigger picture of work 
and it brings realism to the work. Many tasks become 
clearer, especially high priority ones, and easier to justify, 
and we always find the balance between the demand and the 
capability. The team analysed their performance and 
velocity quite well, they understand the WIP limit and now 
they avoid taking too much work on”.  
To explain the benefits of Kanban and the areas of 
successful implementation, one interviewee mentioned that 
in their “testing team”, “Kanban is beneficial because it puts 
limits on various things in each release and makes certain 
things visible which were not visible before Kanban 
adoption. Kanban makes work visible inside and outside the 
team and visualises customer needs. It helps in collecting 
new kinds of issues and a good example is the test area”.  
All the interviewees reported that, with Kanban usage, 
the essence of collaborative work is visible and more and 
more work is collectively completed in the development 
team. Interviewees reported, “Kanban helps to make bonds 
in teams and to start getting things done successfully. 
Kanban helps those team members who are in trouble to get 
the work done collaboratively”. Additionally, “the team 
starts looking to where more and more things are actually 
waiting, and they start identifying root causes of why the 
flow is not working and make those blockers visible. To 
maintain the flow, the whole team starts solving them”. 
Furthermore, one interviewee mentioned, “Kanban helps 
with flexibility when organising the work and efficiency, and 
so on”. 
 
 
 
2) Challenges in Kanban usage 
One of the bigger challenges found in the survey was the 
lack of experience using Kanban, which leads to some other 
challenges, e.g., difficulty managing the WIP limit and 
selecting tasks according to priority. An interviewee 
explained these challenges in this way: “In a company, not 
all business lines and top level management are familiar 
with Kanban. There are a few people who have knowledge 
but they also like to build their confidence to use the new 
Kanban approach. So, there is much resistance to change. 
The company lacks awareness about the existing mind-set 
issue. For example, for us, the release cycle is quite big; we 
are dealing with a huge requirement. In such a scenario, we 
need confidence that this can be done and delivered 
efficiently with this new Kanban thing. Nobody is willing to 
take the risk and start doing things the Kanban way. 
Everyone in the company knows that if we lose one release, 
we are out of the market, which means there's no company. 
The risk level is clear. It makes you feel safer to stay with 
what you already have.”  
Additionally, an interviewee agreed and reported “The 
lack of training is a big challenge while using Kanban at 
both the portfolio and team level. The purpose and theory 
behind Kanban is misunderstood. The common question is 
raised, what is the problem we are trying to solve with 
Kanban?” That is the reason why, when Kanban was 
implemented in the work without proper knowledge and 
training, an interviewee mentioned, “Many times you don't 
actually necessarily look at the flow (of inflow and outflow of 
things) and the team don't actually use the WIP limits. When 
asking from where these WIP limits come, they guessed that 
the WIP limits were set without any planning.” 
Apart from knowledge and proper training, mind-set is 
equally important for the adoption of Kanban. With limited 
knowledge and experience, it is hard to motivate and change 
people’s mind-sets to work using the Kanban method. This 
is also a reason for teams reverting to their previous way of 
working. Most of the companies interviewed agreed on this 
issue. One interviewee mentioned, “People always want to 
stick with the way they work; it requires a lot of effort to 
change the mind-set”. 
 
3) Solutions to challenges 
The interviewees were asked what kind of solution they 
would propose or use to tackle the challenges they are facing 
in adopting Kanban. From the study, the following solutions 
were obtained to cope with the challenges:  
 
 
Provide proper training to the teams.  
 
Allow teams to experiment or pilot the method and 
get some experience using Kanban. Such piloting 
helps to learn the Kanban way of working by doing. 
 
Educating people help to change the mind-set so that 
the resistance to change will be easier to tackle. 
When people are educated and the expected benefits 
of Kanban are communicated, they will more likely 
be convinced to adopt it in their work. 
154
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

 
 
 
Commitment and awareness is required from the 
top-level management down through the company. 
V. 
CONCLUSION   
The goal of this study was to investigate the adoption and 
usage of Kanban in large software companies. The study was 
conducted in large multinational Finnish companies that 
have premises in several other countries. Using a survey and 
thematic interviews, the study aimed to analyse the 
motivations of Kanban usage, the obtained benefits, and the 
faced challenges when adopting Kanban. Additionally, 
solutions to the challenges were identified.  
In this study, the identified main motivation factors for 
adopting Kanban were to improve team communication, and 
development flow, reduce time to reach the market, increase 
productivity, and create transparency in organisation. 
Furthermore, the most common achieved benefits of using 
Kanban 
were 
better 
visibility 
of 
work, 
improved 
transparency of work and communication and better control 
of flow.   
Regarding the challenges faced, the most common one is 
lack of experience with Kanban, which makes it hard for 
teams to manage WIP limits and select tasks according to 
priority. Furthermore the traditional culture of the 
organisation was reported a challenge in the adoption of 
Kanban. Because of these challenges, team members tend to 
fall back on using old methods or previous ways of working. 
The literature and the results indicated that with proper 
training, the challenges could be handled to some extent. 
The study subjects were representatives of large Finnish 
software companies, which provide a good general view of 
Kanban usage in advanced software companies utilising 
Agile and Lean approaches. However, the subjects of this 
study represent only a limited view of the participant 
companies. Therefore, to study more comprehensively the 
usage of Kanban throughout organisations, more extensive 
research involving all teams using Kanban in the 
organisation should be conducted. Future investigation 
would also be needed to gain a better understanding of the 
application of Kanban at different levels in the organisations, 
e.g., at the portfolio and team levels.  
Despite a limited view of the participant companies, this 
study provides valuable descriptive information about the 
contemporary state of Kanban usage in software companies.  
The contributions of this paper are 1) up-to-date results on 
the current state of Kanban usage, based on first-hand 
industry insight on why Kanban is being used in software 
development as well as its benefits and challenges, 2) the 
first explorative study analysing the Kanban usage in 
software development, and 3) grounding for future research 
based on the identified main benefits and challenges on using 
Kanban.  
ACKNOWLEDGMENT 
The authors would like to thank the companies and their 
employees for participating to this research. This research 
has been carried out in Digile Need for Speed program, and 
it has been partially funded by Tekes (the Finnish Funding 
Agency for Technology and Innovation). 
REFERENCES 
[1] M. Poppendieck and T. Poppendieck, Lean Software 
Development: 
An 
Agile 
Toolkit, Addison-Wesley 
Professional, 2003. 
[2] J. Liker, The Toyota Way, USA: McGraw-Hill, 2004.  
[3] K. Hiranabe, Kanban applied to software development: From 
agile to lean, InfoQ. [Online] Available from: http://www. 
infoq. com/articles/hiranabe-lean-agile-kanban 2014.05.04 
[4] A. Shalloway, B. Guy, and R. James Trott, Lean-agile 
Software 
Development: 
Achieving 
Enterprise 
Agility, 
Pearson Education, 2009. 
[5] Cloud Software Finland, General Brochure. [Online] 
Available 
 
from: 
http://www.n4s.fi/en/ 
, 
http://www.cloudsoftwareprogram.org/general-brochure 
2014.05.13 
[6] M. O. Ahmad, J. Markkula, and M. Oivo, “Kanban in 
Software Development: A Systematic Literature Review,” 
39th Euromicro Conference on Software Engineering and 
Advanced Applications (SEAA), 2013, pp. 9-16. 
[7] L. Chai, “E-based Inter-enterprise Supply Chain Kanban for 
Demand and Order Fulfilment Management,” International 
Conference 
on Emerging 
Technologies 
and 
Factory 
Automation, 2008, pp. 33-35. 
[8] M. Becker and H. Szczerbicka, “Modeling and Optimization 
of Kanban Controlled Manufacturing Systems with GSPN 
including QN,” International Conference on Systems, Man, 
and Cybernetics, 1998, vol. 1, pp. 570-575. 
[9] M. Ikonen and P. Abrahamsson, “Anticipating Success of a 
Business-Critical Software Project: A Comparative Case 
Study of Waterfall and Agile Approaches", In Proc. ICSOB, 
2010, pp. 187-192. 
[10] D. Anderson, Kanban – Successful Evolutionary Change for 
Your Technology Business. Blue Hole Press, 2010.  
[11] H. Kniberg and M. Skarin, “Kanban and scrum – Making the 
most of both,” InfoQ, 2010. 
[12] C. Ladas, Scrumban – Essays on Kanban Systems for Lean 
Software Development, Modus Cooperandi Press, 2009.  
[13] J. Boeg, Priming Kanban, A 10 Step Guide to Optimizing 
Flow in Your Software Delivery System, Trifork Agile 
Excellence Mini Book Series, 2nd ed., Denmark at 
Chronografisk A/S, 2012. 
[14] M. Senapathi, P. Middleton, and G. Evans, “Factors Affecting 
Effectiveness of Agile Usage – Insights from the BBC 
Worldwide Case Study,” In Proc. XP, 2011, pp. 132-145. 
[15] M. Ikonen, E. Pirinen, F. Fagerholm, P. Kettunen, and P. 
Abrahamsson, “On the Impact of Kanban on Software Project 
Work: 
An Empirical Case Study Investigation,” In 
Proceedings of ICECCS, 2011, pp. 305-314. 
[16] N. Nikitina and M. Kajko-Mattsson, “Developer-driven big-
bang process transition from Scrum to Kanban,” In 
Proceedings of ICSSP, 2011, pp. 159-168. 
[17] P. Middleton, and D. Joyce, “Lean software management: 
BBC 
Worldwide 
case 
study,” IEEE 
Transactions 
on Engineering Management, 2012, vol. 59(1), pp. 20-32.  
[18] V. G. Stray, N. B. Moe, and T. Dingsøyr, “Challenges to 
Teamwork: A Multiple Case Study of Two Agile Teams,” In 
Proceedings of XP, 2011, pp. 146-161. 
[19] M. O. Ahmad, K. Liukkunen, J. Markkula, “Student 
perceptions and attitudes towards the software factory as a 
learning environment,” In Proceedings of IEEE EDUCON, 
2014, pp. 422,428. 
 
155
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

