Multi-dimensional Ontology Model to Support Context-aware Systems 
A Mobile Application to Search and Invoke Semantic Web Services 
 
José Rodríguez 
Computing Department 
CINVESTAV-IPN 
DF, Mexico 
rodriguez@cs.cinvestav.mx 
Maricela Bravo 
Systems Department 
UAM-Azcapotzalco 
DF, Mexico 
mcbc@correo.azc.uam.mx 
 
Rafael Guzmán 
Computing Department 
CINVESTAV-IPN 
DF, Mexico 
rguzman@computacion.cs.cinvestav.mx 
 
Abstract— Computing has evolved in such a way that has left 
behind the limitation of being static and local, promoting the 
emergence of the new era of computing called Ubiquitous 
Computing. To maximize the use of this new computing 
platform, it is necessary to develop new and improved 
structures for knowledge and information representing, in 
order support the implementation of new intelligent searcher 
and recommendation systems. Thus, recommendations and 
search results will be fully based on contextual information 
and user profiles. This paper describes an architecture based 
on a multi-dimensional ontology model to represent mobile 
user contexts, Web services and application domains. A mobile 
application is also presented to show the benefits of this 
approach in a mobile computing environment. 
Keywords-mobile computing; ontologies; semantic Web 
services; context-aware systems. 
I. 
 INTRODUCTION 
Computing has evolved in such a way that has left behind 
the limitation of being static and local, that is, not being able 
to easily carry computing resources from one place to 
another due to its large size and energy demand. Currently 
this limitation has been solved with the reduced size, weight 
and power consumption of computing devices, resulting in 
the 
emergence 
of 
mobile 
computers, 
enabling 
communications between mobile devices and people 
anywhere in the world [1]. The mobile computing has 
become a reality, thanks to the evolution of wireless 
communication technologies and the Internet. Mobile 
computing is rapidly gaining importance because there is an 
incremental daily demand for information access from 
anywhere and at any time with multiple purposes. 
Nowadays, information is distributed around the world in 
multiple servers and databases, therefore to discover and 
gather this information accurately in mobile devices 
represents a big computational challenge. 
Web services (WS) [2] represent an important 
technological trend for distributing software resources 
around the world. WS are software component interfaces 
based on a set of XML-based standards, languages and 
protocols and are executed through the exchange of XML 
messages, allowing different applications to communicate 
across multiple platforms. WS enable reutilization of legacy 
software and integration of more complex systems which can 
be of major interest in mobile environments. 
Currently, there is a trend towards digital convergence, 
so it is possible to access information (voice, video or data) 
with any mobile devices via the Internet, which allows use 
and consumption of Web services. Emergent technologies 
for mobile phones are expected to offer full support for the 
Web, all telephone devices will have Internet access 
(generation 4G) [3]. 
These advances in telecommunications in turn promote 
the increased use of mobile devices in everyday life, so that 
computing power is distributed throughout the environment, 
becoming an invisible and integral part of our lives. This 
situation gives rise to the new era of computing called 
Ubiquitous Computing, which is considered the third 
generation of computing [4]. The main goal of Ubiquitous 
Computing is to integrate computers and devices in a 
physical environment of users trying to fully exploit the 
services offered by this new computing paradigm. 
To maximize the use of this new ubiquitous computing 
platform, it is necessary to develop new and improved 
structures for representing information and knowledge to 
support the implementation of new intelligent search and 
recommendation systems. Thus, recommendations and 
search results will be fully based on contextual information 
and user profiles. Context is defined as "any information that 
can be used to characterize the situation of a person, place, or 
object that is considered relevant to the interaction between a 
user and application" [5]. In this way, systems that are able 
to extract, interpret and use information from the 
environment are known as context-aware systems. 
It is therefore necessary to create a solution capable of 
taking into account the distribution of information, user 
mobility and consequently the context information of the 
user, enabling access to Web services offered on the 
network. 
The rest of the paper is organized as follows: Section II 
presents a motivation example; in Section III, related work is 
presented; in Section III, the multi-dimensional ontology 
model is described; in Section IV, a Web service semantic 
registry is presented; Section V, describes a context-aware 
mobile application; in Section VI, experiments and results 
are presented; and finally, in Section VII, conclusions are 
described. 
80
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

II. 
MOTIVATING EXAMPLE 
To provide an example of the approach presented in this 
article, consider a mobile application that allows any user to 
connect to a public Semantic Web Service Registry (SWSR) 
to search for web services and invoke them as needed. 
During the registration of the mobile user, the SWSR obtains 
the mobile user data (full name, gender, birth date, 
occupation, mobile device brand, model, phone number, 
interest list and interest ranking). Once that the user is 
registered, the SWSR extracts the mobile user position 
(longitude and latitude data from the mobile device) every 
time when the user starts a session with the SWSR. Using all 
information, the SWSR creates an ontology instance of the 
user context, the mobile device and the user interests. 
Using this application, any registered mobile user can 
search, select and invoke Web services according to his/her 
needs. Search of Web services starts when the user selects to 
view the list of Web services classified according to a given 
application domain. The Web service list is dynamically 
generated as a result of executing a query to the ontology 
model. The user has the option to search for Web services 
considering his geographical position at the time of the 
request. Once the user selects an application domain, the 
mobile application displays the interface, where the user can 
select from a list of recommend services based on the 
selected domain and user context. This recommendation is 
done through an inference rule, which is executed 
dynamically with user data. Let's assume that the user 
requested the address of any restaurant located at Lindavista 
district, as a result the mobile application returned a map 
location of a restaurant at Lindavista, recommended based on 
the users interests. The mobile application described in this 
work shows that the development of a multi-dimensional 
representation using ontologies and semantic Web services 
facilitates the generation of intelligent and dynamic 
recommendations of relevant services to end users. This 
result is mainly due to the incorporation of the user's context 
shaped by his interests and his geographical context. 
This paper describes a multi-dimensional ontology model 
which represents three dimensions: user context information, 
Web services and application domain classifications. Using 
ontological representation enables semantic representation of 
concepts (classes), relations between concepts, individuals 
and inference rules to discover and produce new knowledge. 
In particular, the model reported in this paper allows the 
combination of different ontologies to offer a more complex 
representation 
of 
contextual 
variables 
and 
software 
resources. Using a multidimensional ontology modeling 
approach has the following benefits [6]: 
a) Ontologies are managed as modules that can be 
expanded, reduced and maintained individually by 
their owners. 
b) The multi-dimensional ontology model is itself 
another ontology, which imports ontologies as 
modules. In this multi-dimensional ontology model, 
an integrator defines semantic relationships across 
ontology modules regarding application interests. 
c) Through the use of inference and query rules, the 
multi-dimensional ontology model can be used to 
answer questions traversing dimensions. 
 
III. 
RELATED WORK 
In the last years several projects concerning web services 
and mobile computing have been developed and reported. Of 
particular interest, are those related context-aware systems 
that incorporate multiple ontologies, use Web services for 
attending mobile user demands, incorporate a semantic Web 
service model and use reasoning and inference facilities for 
recommendations. This section presents an overview of these 
related work. 
In 2004 Weißenberg et al. [7] presented FLAME2008, a 
platform for service customization through the use of 
information based on individual situations and personal 
demands of users. This proposal tries to determine the most 
appropriate set of web-based information and services 
through the semantic descriptions of situations and services. 
The main objective of FLAME2008 is to implement a Web-
Based information system for large users groups and large 
service sets. In FLAME2008, services and information are 
sent to the mobile device, based on the current situation and 
profile of each user. The situation of user is obtained through 
the use of sensors and the information on user’s profile. 
Ontologies are responsible of matching demands and offers. 
Offers are composed of situation, profiles and bound services 
for the situations. Description of situations and services are 
based on profiles, they contain a set of attributes 
characterizing the situation. The values for the attributes are 
instantiated by the ontology. Sensor data and user’s profile 
are used to infer a demand. As a result, an ontology is 
created, where instances are used to construct a situation 
request profile semantically matched with all the situations 
known by the system. In this way a service request profile is 
constructed and matched against all the registered service 
profiles i.e. inferences are made on situations and services. 
Interests and preferences are specified in profiles. Besides of 
location, time and situation, the user’s context history is 
considered in the personalization of services and the 
information delivered to the mobile device. In FLAME2008 
contexts are handled in a dynamic way, they are obtained 
from information of sensors and help to identify the situation 
of user; under this perspective the parameters of the situation 
define the context, giving the possibility of having a large 
range of contexts.  
Ontologies in FLAME2008 are structured in layers: 
upper ontologies, which are used for processing generic and 
abstract concepts; domain ontologies, used to model 
concepts form different application domains; task ontologies, 
which model service ontology and situation ontology; and 
application ontology. In particular, the service ontology 
adhering to the OWL-S specification defines services using: 
profile for advertising and finding services, process model 
for describing cooperation between services and grounding 
81
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

for the execution of services. The situation ontology is 
defined by user’s context and profile, this ontology is 
composed of several sub-ontologies for all the different 
context dimensions.  
In 2004 Sheshagiri et al. [8] presented myCampus, a 
project where users subscribe with a set of task-specific 
agents to develop different tasks. These agents require the 
knowledge of contextual attributes of users. The sources of 
contextual information are modeled as Semantic Web 
Services that can be automatically discovered by agents. The 
static knowledge about users is stored in the form of rules 
that map contextual attributes onto service invocations, in 
this way the ontology can identify and activate the resources 
in response to the context of the users’ queries. Sources of 
contextual information are defined as Semantic Web 
Services; it means that every source has a profile with the 
description of its functional properties. The ontology makes 
use of rules for local and global service identification, to 
identify one or more relevant sources of contextual 
information. Service discovery is carried out through these 
profiles. 
FLAME2008 and MyCampus were two of the first 
projects that incorporated a semantic Web service approach 
by using OWL-S. However, the main drawback of OWL-S 
model is that it makes difficult the automatic incorporation 
of existing Web services (legacy WSDL files) requiring their 
semantic extension with OWL-S. 
In 2005 Gu et al. [9] presented SOCAM, one of the first 
ontology-based models to represent contexts; SOCAM 
includes person, location, and activity and computer entity. 
SOCAM is a middleware architecture for rapidly building 
context-aware services. It provides support for discovering, 
acquiring, interpreting and accessing context information. 
Although SOCAM uses the concept of services, these are not 
defined by standardized languages such as WSDL or OWL-
S. Limiting the possibility of incorporating existing Web 
services from different vendors on different platforms. 
In 2005 Kim et al. [10] described a framework to search 
products and services through the use of a real-time ontology 
mapping mechanism between heterogeneous ontologies and 
taxonomies. This proposal is based on Web services and 
Semantic Web and is composed of: service client, service 
providers and search agent. The service client installed on a 
mobile device allows the specification of a product and a 
search intention. When a search is specified the information 
from de GPS is automatically considered. If a response is 
produced the client service is responsible for communicating 
results to the user. The service client uses a specific ontology 
to store user’s specific categories and attributes related to 
ontologies. The service provider component allows the 
description of products and services through the providers’ 
ontologies. When products and services are published 
providers must specify the meta-data of documents, they are 
needed by the ontology to find the description of services.  
The main component of this proposal is the Service 
Search Agent, it is responsible of harvest the service 
providers through the use of a semantic web robot. The 
information collected is integrated into the ontology of 
products and services. The search agent receives the search 
request from client; it searches for relevant service providers, 
evaluates the obtained results and recommends the most 
adequate services for the user. The search agent is composed 
of four main components: an information integrator it uses a 
semantic robot for collecting the category and attribute 
information about products and services from various 
providers. When the request from client arrives the location 
processor defines the range of regions to be searched 
according to the location of user. Then with the information 
on the client’s request and his location the query generator 
generates the query for the products and services ontology. 
The last component is the service evaluation agent that 
evaluates the retrieved results according to the intent on the 
user’s search and recommends the most relevant products 
and services. This framework has a disadvantage, it requires 
services providers to describe their services using their own 
ontologies, leaving aside the use of interoperable Web 
service description languages. Another disadvantage is that it 
does not incorporate the reasoning services for deducing and 
generating recommendations.  
In 2008 Dickson et al. [11] presented the use of Multi-
Agent Systems, Semantic Web and Ontologies (called 
MAIS) for the implementation of an ubiquitous touristic 
service. Their objective was to provide coordination and 
integration of information and service resources anytime 
anywhere and provisioning personalized assistance to 
tourists. In the MAIS architecture tourist inquiries are sent to 
an ontology, results are produced according to the 
requirements and preferences of users. Through the use of 
the ontology the system can propose tour plans, formulate 
itinerary plans and connections between transport routes. The 
ontology organizes tourism-related information and concepts 
allowing the interoperability through the use of a shared 
vocabulary and meaning of terms. In this way all the agents 
in the system have a common basis for searching, 
interpreting and reasoning. The ontology was populated by 
extracting information and services from Web pages, using 
Web crawlers. Moreover this proposal has a Matchmaking 
mechanism to select and compose the packages that better 
correspond to the needs and preferences defined in the 
tourist’s profile.  
In 2009 Amel Bouzeghoub et al. [12] presented a 
context 
aware 
semantic 
recommender 
system. 
Recommendations are based on a multidimensional 
ontology which models persons, buildings, events and 
available 
resources. 
The 
recommender 
system 
was 
implemented for mobile users in a campus environment. 
Recommendations are proactively generated considering 
user context, geographic position and recommendation logs. 
Authors suggest that context is a multi-dimensional space, 
82
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

where each dimension is represented as a specific ontology. 
In particular, the set of ontologies incorporated into the 
multi-dimensional space are: domain ontology, user 
ontology, activity ontology, location ontology, and time 
ontology. 
In 2009 Cadenas et al. [13] described mIO, an ontology 
network to represent knowledge related to context. The mIO 
ontology consists of a core ontology which interlinks 
different ontology modules needed for modeling context. 
They introduce the concept of modularization for 
ontologies, to allow using only the modules that are 
involved in a given case, instead of using the whole 
ontology network. Their ontology network contains ten 
modular ontologies: User, Role, Environment, Location, 
Time, Service, Provider, Device, Interface and Network. 
Authors also propose using context logs for better 
recommendation results. 
Despite the use of an ontological model in Dickson [11], 
Bouzeghoub [12], and Cadenas [13] projects, their main 
drawback is that they do not incorporate semantic Web 
service representation and reasoning. 
In 2009 Sousa [14] presented ICAS, an architecture that 
allows creation of context aware services, and SeCoM, a 
semantic model to represent contexts. Authors present a 
study case applied to a university campus, where the 
objective is to identify pedagogic characteristics of 
documents and persons. SeCoM model consists of six main 
ontologies and six supporting ontologies. Main ontologies 
are: Actor ontology, Time ontology, Temporal Event 
ontology, Space ontology, Spatial Event ontology, Device 
ontology, and Activity ontology. Secondary ontologies are: 
Contact ontology, Relationship ontology, Role ontology, 
Project ontology, Document ontology and Knowledge 
ontology. Inference is based on user preferences, user 
context, and user interests to identify relevant services. In 
this approach, services are classified in categories, adding 
preconditions and post conditions for each service, allowing 
search and selection of services by comparing input and 
output compatibilities. This work also maintains action logs, 
which are used for recommendation. 
In 2009, Woerndl and Hristov [15] described an 
approach for personal information management in mobile 
devices, using a recommender system based on ontologies. 
The system recommends documents and articles considering 
time and location context and the user personal ontology. 
Authors 
implemented 
a 
PDA 
Semantic 
Desktop 
(SeMoDesk). Recommendations are obtained from the 
interest of a user in a topic or document, considering user 
schedule and location. SeMoDesk is a desktop application 
for mobile devices, for this reason has some limitations 
regarding the ontology model and does not support semantic 
Web service invocations. 
In 2009 Liiv [16] describe SMARTMUSEUM, a 
platform for recommendations in the cultural domain of a 
museum. SMARTMUSEUM uses a combined approach 
based on rules, collaboration and content personalization, 
where content is semantically enabled by an ontology. 
Recommendations are about cultural objects allocated in the 
museum and content related with those objects. User profile 
includes abilities and interests of user, and a log of visited 
places. 
In 2010, Gómez-Pérez presented SEEMP [17] a project 
aiming at facilitating employment services in Europe. 
SEEMP consists of an ontology network which describes 
employs and employees from human resource perspective. 
SEEMP reference ontology consists of the following 
ontologies: Job Seeker Ontology, Job Offer Ontology, 
Compensation 
Ontology, 
Driving 
License 
Ontology, 
Economic 
Activity 
Ontology, 
Occupation 
Ontology, 
Education 
Ontology, 
Geography 
Ontology, 
Labour 
Regulatory Ontology, Language Ontology, Skill Ontology, 
Competence Ontology, and Time Ontology. 
These 
reported 
proposals 
are 
based 
on 
similar 
technological mechanisms, such as context-awareness, 
incorporating multiple ontologies (multi-dimensional space), 
use Web services for attending mobile user demands, 
incorporate a semantic Web service model and use reasoning 
and inference facilities for recommendations. However, the 
main difference between related work and the approach 
described in this paper, is the implementation of a multi-
dimensional ontology model with adaptable and extendible 
ontology modules; and the incorporation of a semantic Web 
service representation capable of acquiring legacy WSDL 
files. As a result, the approach reported in this paper offers 
an innovative contribution for dynamic and changing mobile 
environments. 
 
IV. 
MULTI-DIMENSIONAL ONTOLOGY MODEL 
The core solution of this work consists of a multi-
dimensional ontology model, for which the following design 
objectives were established:  
a) Build a model capable of representing multiple 
dimensions with changing attributes. 
b) Design the model using a semantic formalism which 
allows the description of classes (concepts), class 
hierarchies, semantic relationships between those 
concepts, and axioms. 
c) Design and implement dimensions as self-contained 
ontologies to enable modularization. Modularization 
of ontologies in turn facilitate individual ontology 
maintenance, update and expansion. 
d) Design the model to allow the integration of multi-
dimensional ontology models to face and solve 
multi-disciplinary problems. 
83
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

e) Enable the definition of query functions to extract 
information using any number of dimensions and 
any number of attributes. 
f) 
Enable the definition of inference rules which allow 
the generation of new semantic connections between 
concepts across all dimensions.  
g) Enable automated inclusion of pure WSDL service 
descriptions into a ontological representation of 
services. Without imposing Web service providers a 
new requirement for augmenting their services with 
very specific models such as OWL-S. 
 
In order to achieve the afore-mentioned design 
objectives, 
a 
multi-dimensional 
space 
model 
was 
implemented with ontologies. OWL [18] was chosen as the 
ontological language, because it is based on description 
logics (DL) allowing the description of concepts and 
semantic relations between concepts. For inference rules 
definition, SWRL was selected, because it is fully 
compatible and importable into OWL ontologies, so through 
a set SWRL rules new semantic relations can be deduced 
logically. To query the model, SQWRL [19]  was used. 
SQWRL (Semantic Query-enhanced Web Rule Language) 
is built based on the well known SWRL which allow 
extensions by built-ins. SQWRL defines a set of built-ins 
operators that can be used to construct more specialized 
functions for querying ontologies. The multi-dimensional 
ontology model consists of three dimensions: the user 
context, the application domain and the set of available 
services; each of these dimensions define multiple and 
changing attributes. For instance, to model the interest of the 
user, it is necessary to consider a wide range of possibilities, 
depending on the subject of interest.  
 
The architecture depicted in Figure 1 shows the multi-
dimensional ontology model and mobile applications which 
exploit the information modeled and represented in the 
ontological model. Representing multiple dimensions of 
semantic information using Web-based ontologies is a 
promising trend from the area of knowledge representation 
that has proven good results. An important benefit of using 
multi-dimensional ontologies is the feasibility of maintaining 
each ontology and the possibility of exchanging and 
extending parts of the model.  
In the following sub-sections each ontology is briefly 
described: 
A. User Context Ontology 
The user can define his context through the use of his 
mobile device. First the user must define his profile; the 
application 
for 
user’s 
profile 
definition 
has 
been 
implemented with the Framework JSF and the PrimeFaces 
components. The first step in the profile definition is to 
specify the name, birth date, sex, and occupation of user. 
This information it is stocked into the users context 
ontology (Figure 2). 
 
After the user supplies the information for profile 
creation a connection with the users context ontology is 
established and a primary list of interests is generated for the 
user. In this list the user can select the services where he is 
interested. Every item in the list has a level of interest 
property, which is used to assign a weight to the item. This 
weight means the level of interest of user on that service and 
he can change it through the mobile device. 
 
The user context ontology represents the semantic 
information of the user context, incorporating his general 
data, occupation, interests and information from the mobile 
device used to interact with the system. In particular, the 
information required is related to its geographical position. 
Figure 2 shows classes of the User Context ontology, which 
are described next. 
 
Interest, this class defines a hierarchy of concepts of 
interest to the user; Interest Record, this class represents the 
interaction between users and their reported interests 
(interest level defines a property that that takes values in a 
range from 1 to 10, indicating the level of interest that a user 
has in a given period of time over a specific concept), when 
the individuals for the Interest class are created they are 
assigned with an interest level of five, that is an intermediate 
value (see inference rule 1) that can be changed by the user. 
User, describes the general user characteristics represented 
by user name, date of birth and gender; Occupation, 
occupation defines a job or profession of the user, Device, 
describes the characteristics of the mobile device of the 
user; Position, defines the geographic coordinates of latitude 
and longitude obtained through the mobile device. 
 
 
Figure 1. General architecture 
 
84
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

 
 
Figure 2. User Context Ontology 
B. Web Service Ontology 
The Web services ontology shown in Figure 3 shows the 
common components that any Web service describes. This 
ontology is populated automatically when a service provider 
is registered in the system and publishes Web service 
interfaces using WSDL files. This ontology allows Web 
services to be semantically annotated with more functional 
information. This ontology consists of the following classes: 
Provider, defines the individual Web services published by 
supplier name, password, email and a URL; Service defines a 
Web service provider entered by using a service name and a 
access URL, Type, defines complex data types used within 
the service using a type name, a base class and a boolean flag 
that determines if a data type is comparable with 
geographical longitude and latitude, Operations, defines the 
operations defined in the service description; Variable 
defines the input and output values of an operation, in 
addition to describing the components of a complex data 
type; Value samples, defines a set of values that can be used 
as a reference for assigning value a given input variable. 
 
Figure 3. Web Service Ontology 
C. Application Domain Ontology 
The application domain ontology (Figure 4) defines a 
class hierarchy for classifying Web services according with a 
taxonomy of concepts related to various domains of interest 
to the user and applications that consume Web services. 
Through this ontology it is possible to find intersections 
between services functionalities and users' interests. This 
ontology can be continuously updating and adapting to new 
user requirements and new service providers offers. 
The application domain ontology defines the class 
Domain, that defines a classification of possible fields of 
application of Web services and user interests. 
D. Integrating the Multi-dimensional Ontology 
This ontology imports all the definitions, concepts and 
semantic relations from the user context ontology, the Web 
service ontology and the application domain ontology.  
In order to semantically relate the three models and 
produce new knowledge from them, it is important to 
establish semantic relationships between the concepts. 
However, these relationships are not defined arbitrarily, 
relations are decided based on a particular intention. In this 
case, the objective of putting the three ontological models 
together is to find related information with the user domain 
of interest and the Web service application domain. 
Therefore, the following relations are defined into the multi-
dimensional ontology model: 
 
Figure 4. Application Domain Ontology 
 
Based on the user context ontology internal relation 
hasOccupation (meaning: a user has a job or profession) the 
external relation hasLevel (meaning: an occupation has 
socioeconomical level) links the Occupation class with Level 
class from the application domain ontology. The semantic 
relation interestHasDomain (meaning: interest has an 
application domain) between the Interest class from the user 
context ontology and the Domain class from the application 
domain ontology correlates the user interest with application 
domains. 
The semantic relation serviceHasLevel (meaning: a Web 
service has a socioeconomical level) correlates the Service 
class from the Web service ontology with the with Level 
class from the application domain ontology. And the 
semantic relation serviceHasDomain (meaning: a Web 
Interest
Device
Position
User
Occupation
Interest
Record
Int
string
string
string
string
string
string
hasInterestRecord
hasInterest
interest_level
hasUser
hasOccupation
occupation_description
user_birthday
user_name
user_sex
coordinate_x
coordinate_y
hasPosition
hasDevice
Provider
Service
Type
Operation
Variable
Value
Sample
Boolean
String
String
String
String
String
String
String
String
String
String
String
String
provider_name
provider_email
provider_password
provider_url
operation_name
inputVariable
outputVariable
hasValue
hasType
hasVariable
variable_format
variable_name
variable_data_type
is_geolocated
type_base
type_name
belongsToService
service_url
service_name
hasProvider
hasService
hasOperations
Transport
Consumption
Tourism
Domain
Technology
Food
Shops
Translation
Site
Hosting
Activity
Belongs to
85
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

service has an application domain) correlates the Service 
class from the Web service ontology with the with Domain 
class from the application domain ontology, enabling with 
these relations to annotate semantically Web service 
definitions. Annotated Web services facilitate other service-
related tasks such as Web service discovery and Web service 
matchmaking. 
Finally, among an important semantic relation is the 
userHasRecommendation (meaning: a user has a context-
based recommendation to consume a specific Web service). 
This relation enables the final user to get recommendations 
based on his/her interests and context. Figure 5 shows all 
semantic relationships between the three ontological models. 
E. Inference and Query Rules 
In order to discover and produce new semantic relations 
between individuals from the multi-dimensional ontology 
population, a set of inference rules are defined and executed. 
 
Inference Rule 1. If a user u, is related to an interest i, 
through a record of interest x, and also the interest i has an 
application domain d, and service s also has the same domain 
d and the interest level n of the user u is greater than 5; then 
the inference engine makes the recommendation of the 
service s to the user u. 
 
Figure 5. Multi-dimensional Ontology Model 
 
contexto:Usuario(?u) ^ contexto:Intereses(?i) ^ 
dominios:Dominio(?d) ^ servicios:Servicio(?s) ^ 
contexto:RegistroInteres(?x) ^ contexto:tieneUsuario(?x, ?u) ^ 
contexto:tieneInteresesRegistrados(?x, ?i) ^ 
interesTieneDominio(?i, ?d) ^ servicioTieneDominio(?s, ?d) ^ 
contexto:nivel_interes(?x, ?n) ^ swrlb:greaterThan(?n, 5)  ->         
tieneRecomendacion(?u, ?s) 
(1) 
To facilitate external applications to query and search 
over the concepts and relations, a set of query rules are also 
defined and included into this multi-dimensional ontology. 
 
Query Rule 2. This rule allows to search for services 
related with a specific Web service provider. 
dominios:Dominio(?d) ^ servicios:Servicio(?s) ^ 
servicios:tieneProveedor(?s, ?prov) ^       
servicioTieneDominio(?s, ?d) ^          
servicios:nombre_servicio(?s, ?nombre) ^ 
servicios:url_servicio(?s, ?url) ->                             
sqwrl:select(?s, ?nombre, ?url, ?d) 
(2) 
Query Rule 3. This rule allows obtaining information 
about a particular user device. 
contexto:Dispositivo(?dispositivo) ^   
contexto:tieneDispositivo(?u, ?dispositivo) ^ 
contexto:marca_dispositivo(?dispositivo, ?marca) ^ 
contexto:modelo_dispositivo(?dispositivo, ?modelo) ^ 
contexto:numero_telefono_dispositivo(?dispositivo, ?tel) -> 
sqwrl:select(?dispositivo, ?marca, ?modelo, ?tel) 
(3) 
Query Rule 4. This rule obtains the interest level of a 
given user, with respect to the interest defined in the 
ontology. 
contexto:RegistroInteres(?r) ^ 
contexto:tieneInteresesRegistrados(?r, ?i) ^ 
contexto:tieneUsuario(?r, ?u) ^                
contexto:nivel_interes(?r, ?nivel) ->                         
sqwrl:select(?r, ?i, ?nivel) 
(4) 
This multi-dimensional ontology can be enhanced by 
defining more inference and query rules to extract interesting 
information across dimensions. 
Reasoning performance depends on the number of 
axioms and population of ontologies. In particular, in the 
multi-dimensional model reported in this paper, each 
ontology is maintained consistent by manually running 
checks periodically. So far, the number of individuals and 
axioms in ontologies remain low, so performance problems 
with reasoning tasks have not been faced. However, it is 
highly likely that when the number of Web services grows 
scaling problems will arise. To cope with this problem, there 
is the plan to manage interchangeable service ontologies. 
In the case of rule-based reasoning, until now, no 
performance problems have been faced, this is mainly 
because the model uses few inference rules, most of the rules 
are query-rules, which consume less resources. 
V. 
WEB SERVICE SEMANTIC REGISTRY APPLICATION 
In order to populate, modify and query the multi-
dimensional ontology model described in Section III, a Web 
Service Semantic Registry (WSSR) was implemented (see 
Figure 6). 
 
Figure 6 shows the use case diagram of the WSSR 
application. This application interacts with two main actors: 
the Web service provider and the ontology manager. The 
former is the person responsible for registering provider data 
and Web services. The ontology manager is a sub-system 
which offers administrative functions, such as: automatic 
Web service parsing, to extract relevant Web service data; 
automatic Web service recording into the ontology; 
automatic link between application domains and context; and 
execution of inference rules to produce recommendations for 
Web service consumption. 
 
Service
Domain
Level
User
Occupation
Interest
serviceHasLevel
serviceHasDomain
interestHasDomain
occupationHasLevel
hasOccupation
hasInterest
hasRecommendation
86
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

 
Figure 6. Use cases and associations of WSSR application 
The WSSR was implemented as a Web application to 
enable Web service providers around the world to access the 
system and perform any of the following tasks: registration 
of new Web service providers, publication of Web services, 
semantic classification of Web services, and Web service 
lists. In this section these functionalities are described. 
 
A. Registration of Web Service Providers 
To gain access to the WSSR and make use of the registry 
functions, service providers must be registered first. Every 
new service provider is required to enter the following data: 
full name, URL of provider´s website and email address. He 
is also asked to create a username and password to access his 
account. All this information is stored in the multi-
dimensional ontology model. In this study case, a total of 45 
different Web service providers were registered in the 
ontology. In turn, each of these providers published different 
Web services.  
B. Registering Web Services 
The application for Web services registration, requires 
the provider to enter the URL of the WSDL file. The 
application connects to the specified URL, parsers the 
WSDL file to extract the relevant Web service information.  
Registering Web services is an automated procedure 
which is executed through the following tasks: 
1. Data types information extraction, this task consists 
of retrieving XML-Schemas from the WSDL file to 
obtain detailed information of complex and simple 
data types defined in the Web service interface. 
2. Extraction of service name and operations, this task 
gets the name attribute of the service tag and the 
names of service operations. It also reads the 
elements that describe input and output parameters 
of each service operation. 
3. Registration of Web service information in the web 
services ontology, this task creates a new individual 
instance in the Service class, using the specified 
URL and service name as data type attributes. It also 
establishes 
a 
semantic 
relation 
between 
the 
registered service and its corresponding provider 
using the hasProvider and hasService relations. 
4. Registration of parameters individuals for complex 
data types into the Parameter class, establishing a 
new semantic relation between the new service 
instance and its parameters. 
5. Registration of operations individuals in the class 
Operation, establishing respective semantic links 
with input and output parameters and parameters 
samples. Furthermore entity relationships are created 
among those individuals. There is a particular case 
when the return data type of a service operation is 
classified as geographically locatable. With this data 
type, it is possible to display the results on a map. 
 
Using this facility, a set of 20 Web services were 
registered in the WSSR. Figure 7 shows the Web interface 
listing deployed Web services. These Web services are 
related with transportation, hotel reservation, flight booking, 
tours, and general offers. Table 2 shows a classification of 
implemented Web services. 
 
 
Table 1 Implemented Web Services 
Transport 
Hotel 
Booking 
Flight 
Booking 
Tours 
Restaurant 
Metro 
Fiesta Inn 
Aviacsa 
Travelocity 
Sanborns 
Metrobús 
Fiesta 
Americana 
Aeroméxico 
Turissste 
Chili´s 
Tren 
suburbano 
Crowne 
Plaza 
Volaris 
Turística 
2000 
Sam´s Club 
 
Emporio 
Inter Jet 
 
Toks 
 
Sheraton 
 
 
Steren 
 
C. Web Services Classification 
Once the provider has registered his Web services (one at 
a time), he must classify them, this is done by using the 
classification tool of the WSSR application, where the 
provider of web services has to select an application domain, 
a sub-domain and a type from the domain ontology to. It is 
also necessary to define a socioeconomic level, depending on 
the target market where the provider wants to offer his Web 
services. Classification of services is extremely important 
because if a service is not classified, it will not be possible to 
link it with any consumer request. It is also important to note 
that this classification can be extended or even exchanged 
with another application domain or domains if required. 
Currently domain-based classification of Web services is 
done semi-automatically. However, one of future extensions 
of this work is to implement fully automated classification of 
published Web services. 
 
Provider
1. Service provider 
register
2. Web Service 
register
4.Recording Web 
Service data into 
ontology
3. Web service parsing 
and data extraction
5. Web service application 
domain classification
6. Linking application 
domain with context
7. Web service recommendation, 
consumption according to context
Ontology 
manager
<include>
<include>
<include>
87
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

 
Figure 7. Web service semantic registry showing deployed services 
VI. 
CONTEXT-AWARE MOBILE APPLICATION 
To evaluate the proposed model, a mobile application 
was implemented. This mobile application allows any user to 
register into the WSSR to search for web services and invoke 
them as requested. This section describes the mobile 
application modules implemented. 
A. Mobile user registration 
All new mobile users are requested to register into the 
system before making use of its facilities. This registration 
task is executed as follows: 
a) Obtaining mobile user data, this task requires the 
user to interact with the mobile application to enter 
the following data: full name, gender, birth date, 
occupation, mobile device (brand, model and phone 
number), interest list and interest ranking. 
b) Extracting mobile user position, this task is executed 
as many times as the user logins the system through 
the mobile application. Therefore, position is the 
dynamic value which encapsulates longitude and 
latitude data from the mobile device. 
c) Registration of mobile user data and context, this 
task registers a new user individual into the user 
context ontology. Also a new individual is created 
into the ontology to represent the mobile device 
characteristics. Occupation is established as a 
semantic relation between the user individual and the 
occupation class. The list of interests is also recorded 
in the ontology with their respective semantic 
associations with the user. Figure 8 shows the 
graphical user interface of the mobile application. 
 
B. Web Services Search and Invocation 
Search, selection and consumption of Web services are 
among the most demanded application tasks related with 
Web services. This functionality was implemented in the 
mobile application (see Figure 9). Search of Web services 
starts when the user selects to view the list of Web services 
classified according to their application domain. The 
classified Web service list is dynamically generated as a 
result of executing a query to the ontology model. The user 
has the option to search for Web services considering his 
geographical position at the time of the request. 
 
 
Figure 8. User registers interests in the mobile application 
Once the user selects an application domain, it displays 
the interface, where the user can select from a list of 
recommend services based on the selected domain and user 
context. This recommendation is done through an inference 
rule, which is executed dynamically with user data. 
 
 
Figure 9. Search, selection and invocation of Web Services 
Figure 9 shows the result of invocating a location Web 
service. In particular, in this case the user requested the 
address of any restaurant located at Lindavista district, as a 
result the mobile application returned a map location of a 
restaurant at Lindavista, recommended based on the users 
interests. 
The mobile application described in this work shows that 
the development of a multi-dimensional representation using 
ontologies and semantic Web services facilitates the 
generation of intelligent and dynamic recommendations of 
relevant services to end users. This result is mainly due to the 
incorporation of the user's context shaped by his interests and 
his geographical context. 
Consumption
Consumption
Consumption
88
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

VII. CONCLUSIONS 
This paper describes a multi-dimensional ontology model 
which incorporates the user context information, semantic 
Web services interface modeling and application domain 
classifications. The work reported in this paper incorporates 
various technological paradigms, such as: semantic Web 
services, mobile computing and ontologies. The main 
objective of integrating these technologies was to support the 
development of more complex and intelligent mobile 
context-aware applications. 
In this paper we reported the implementation of a mobile-
based architecture for the use of Semantic Web Services 
trough a multi-dimensional ontology. We present the initial 
results. Performance results are going to be obtained once the 
automatic mechanism for populating the ontologies from 
web pages is finished. 
The use of multi-dimensional models implemented with 
ontologies offers significant advantages: the ability to 
exchange, expand, extend and maintain the individual 
ontologies. An example is the application domain ontology, 
which can be interchanged as needed to adapt to new 
application needs. 
The incorporation and exploitation of Web services 
through ontological models is a clear trend that promises to 
improve the automatic selection and invocation of legacy 
and new Web services. 
All these technologies together (Web services and 
ontologies) are key facilitators for the wise management of 
context-based systems based on mobile computing. 
ACKNOWLEDGMENT 
This work has been supported by CONACyT, México. 
REFERENCES 
 
[1] 
Y. Park and F. Adachi (eds.), Enhanced Radio Access 
Technologies for Next Generation Mobile Communication, 
pp. 1–37. 2007 Springer. 
[2] Mobile Web Initiative. The Web and Mobile Devices. 2010. 
http://www.w3.org/Mobile/. March 2012 
[3] K. Chen and J. de Marca, Mobile Wimax Wiley 2008. 
[4] M. Weiser ”The Computer for the 21st Century”, ACM 
Mobile Computing and Communication Review, vol. 3, issue 
3, pp. 3-11, 1999, doi: 10.1145/329124.329126 
[5] N. Blefari-Melazzi, E. Casalicchio, and S. Salsano, “Context-
aware 
Service 
Discovery 
in 
Mobile 
Heterogeneous 
Enviroments”, 
Proc. 
IEEE 
Mobile 
and 
Wireless 
Communications Summit, 2007, 16th IST, septembre 2007 
pp. 1-5, Budapest, doi: 10.1109/ISTMWC.2007.4299226 
[6] M. Horridge, H. Knublauch, A. Rector, R. Stevens, and Ch. 
Wro, A Practical Guide To Building OWL Ontologies Using 
The Protégé-OWL Plugin and CO-ODE Tools, Edition 1.0, 
The University Of Manchester,  March 2012 
[7] N. Weißenberg, A. Voisard, and  R. Gartmann “Using 
Ontologies 
in 
Personalized 
Mobile 
Applications”, 
Proceedings of the 12th annual ACM international workshop 
on Geographic Information Systems (GIS 04), November 
2004, pp. 2-11,  doi: 10.1145/1032222.1032225 
[8] M. Sheshagiri, N. Sadeh, and F. Gandon “Using Semantic 
Web Services for Context-Aware Applications”, Proceedings 
of Mobisys2004 Workshop on Context Awareness, June 
2004. 
[9] T. Gu, H. Pung, and D. Zhang, "A service-oriented 
middleware for building context-aware services", Journal of 
Network and Computer Applications, vol. 28, issue 1, january 
2005, pp. 1-18, doi: 10.1016/j.jnca.2004.06.002. 
[10] W. Kim, S. Lee, and D. Choi “Semantic Web Based 
Intelligent Product and Service Search Framework for 
Location-Based Services”, Lecture Notes in Computer 
Science Springer, Computational Science and Its Applications 
(ICCSA 2005) Part IV, may 2005,  pp. 103-112, Singapore, 
doi: 10.1007/11424925_13 
[11] K. Dickson, W. Chiu, T. Yves, F. Yueh, L. Ho-fung. C. 
Patrick, and K. Hung “Towards ubiquitous tourist service 
coordination and process integration: A collaborative travel 
agent system architecture with semantic web services” ACM 
Information Systems Frontiers, Volume 11, Number 3, July 
2008, pp. 241-256, Bradford, UK., doi: 10.1007/s10796-008-
9087-2 
[12] A. Bouzeghoub, K. Ngoc, and L. Krug, "Situation-Aware 
Adaptive Recommendation to Assist Mobile Users in a 
Campus Environment", Proceedings IEEE International 
Conference on Advanced Information Networking and 
Applications (AINA-09), May 2009, pp. 503-509, doi: 
/10.1109/AINA.2009.120 
[13] A. Cadenas, C. Ruiz, I. Larizgoitia, R. Garcia, C. Lamsfus, I. 
Vázquez, M. González, D. Martín, and M. Poveda, “Context 
Management in Mobile Environments: a Semantic Approach”  
ACM Proceedings of 1st Workshop on Context, Information 
and Ontologies, CIAO 2009, June 2009, Heraklion, Grecia, 
doi: 10.1145/1552262.1552264 
[14] P. Sousa, E. Carrapatoso, B. Fonseca, M. Campos, and R. 
Bulcão-Neto, “Composition of context aware mobile services 
using a semantic context model”, International Journal On 
Advances in Software, volume 2, numbers 2 and 3, December 
2009, pp. 275-287. 
[15] W. Woerndl and A. Hristov, “Recommending Resources in 
Mobile 
Personal 
Information 
Management”, 
IEEE 
Proceedings of the Third International Conference on Digital 
Society, (ICDS 2009), February 2009, pp. 149-154, doi: 
10.1109/ICDS.2009.21. 
[16] I. Liiv, T. Tammet, T. Ruotsalo, and A. Kuusik, "Personalized 
Context-Aware Recommendations in SMARTMUSEUM: 
Combining Semantics with Statistics," IEEE Procedings of 
Third International Conference on Advances in Semantic, 
October 
2009, 
pp. 
50-55, 
2009, 
doi: 
10.1109/SEMAPRO.2009.25. 
[17] M.C. Suárez-Figueroa, A. Gómez-Pérez, and B. Villazón-
Terrazas, “How to Write and Use the Ontology Requirements 
Specification Document”, ACM Procedings Confederated 
International Conferences, CoopIS, DOA, IS, and ODBASE 
2009 on On the Move to Meaningful Internet Systems: Part II 
OTM’09, November 1009, pp. 966-982, 10.1007/978-3-642-
05151-7_16 
[18] S. Bechhofer, M. Dean, F. Van Harmelen, J. Hendler, I. 
Horrocks, D. McGuinness, P. Patel-Schneider, G. Schreiber, 
and L. Stein,: OWL Web Ontology Language Reference, 
W3C 
Proposed 
Recommendation. 
http://www.w3.org/TR/owl-ref/. March,2012. 
[19] Semantic 
Query-Enhanced 
Web 
Rule 
Language. 
http://protege.cim3.net/cgibin/wiki.pl?SQWRL March 2012 
 
 
89
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-200-4
ICIW 2012 : The Seventh International Conference on Internet and Web Applications and Services

