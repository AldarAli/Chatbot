Mapping Architectural Concepts to SysML Profile for Product Line Architecture 
Modeling 
 
Shahliza Abd Halim, Mohd Zulkifli Mohd Zaki, Noraini Ibrahim, Dayang N. A. Jawawi and Safaai Deris 
Software Engineering Department 
Faculty of Computer Science and Information Systems, 
Universiti Teknologi Malaysia, 
81310 Skudai, Johor, Malaysia. 
shahliza@utm.my, zulkiflizaki@utm.my, noraini_ib@utm.my, dayang@utm.my, safaai@utm.my 
 
 
Abstractâ€” There are different proposals for modelling Product 
Line Architecture. To model the Product Line Architecture 
(PLA), the most important elements are the explicit treatment 
of its commonality and variability representation. This paper 
concentrates on the use of Architecture Description Language 
(ADL) and its integration with object oriented modeling, for 
the representation of architecture in order to model PLA 
architecture construct and variability construct effectively. 
Consequently, the possibility of integration which involves the 
mapping between the xADL and SysML a UML2 based profile 
extension to enable the profile to be incorporated to an existing 
UML commercial tool was investigated. The result of the 
mapping is proposed extension to SysML profile. The profile is 
then applied to a case study of Autonomous Mobile Robot 
Product Line. Based on the case study evaluation, the profile 
has shown a significant improvement to the existing SysML for 
modelling PLA.  
Keywords-product line architecture (PLA); autonomous 
mobile robot (AMR),architecture description language,  xADL 
I. 
INTRODUCTION 
Product line architecture (PLA) is the first artifacts 
which realise the requirements for the Software Product 
Line (SPL) and also is the abstraction for detail design. PLA 
modelling differs from other single system architecture 
modelling where PLA should be able to express 
commonality and variability explicitly in its architecture.  
Thus, in addition for modelling the basic architectural 
strucutre, PLA has to model variability information such as 
optional and variants  structure and the rule in choosing 
between different variants and optional stuctures as it will 
affect the derivation of product specific architecture.  
Therefore, it is essential to model architecture in a 
formal manner which ensures a better tool support and also 
a comprehensive architecture description. A consistent, 
complete and correct architecture description is by using 
Architecture Description Language (ADL) [1]. Nevertheless 
ADL is reported to not integrate well with software 
development methodology and tools [2]. Another paradigm 
for representing architecture is with UML which has been 
used as an architecture modelling language and also a de 
facto modelling language used in the industry, even so there 
are arguments concerning its modelling  notations 
inadequacy for representing architecture [3, 4]. 
Integrating both languages, ADL and UML can be 
considered as having a synergistic relationships where the 
combination enables a precise and explicit architecture 
description and at the same time having a wider usage 
among UML users in commercial tool. Among the proposed 
integration approaches are from [2, 5]. This paper 
concentrates on how to map architecture concept from xADL 
to one of UML profile, SysML for an explicit representation 
of architectural and variability construct for modelling PLA.  
SysML is a profile targeted for system engineering where 
the strength of SysML compared to UML 2.0 is based on its 
new addition of requirements and parametric diagram as well 
as its additional constructs in architecture modelling. xADL 
is chosen due to its specialised schema targeted for product 
line architecture description [6]. 
The remainder of this paper is organised as follows: In 
Section II, the paper discusses the problem background 
which motivates the focus of this paper. Section III discusses 
on the methodology of the mapping and the profile proposed 
based on the mapping. Section IV demonstrates the 
applicability 
of 
the 
proposed 
profile 
in 
modeling 
Autonomous Mobile Robot (AMR) Product Line case study. 
Section V discusses on the feasibility of the results. Lastly, 
Section VI discusses on the conclusion and recommendation 
for future work. 
II. 
BACKGROUND 
There are two extension mechanisms in customising 
UML metamodel. First class extension mechanism is by 
adding or removing metaclasses in Metamodel Object 
Facility (MOF) or can be referred as heavyweight extension. 
Another mechanism is by using profile which does not 
allow any modification of existing metamodel other than by 
adjusting the metamodel with constructs suitable for the 
particular domain, platform or method [7]. Profile extension 
is also known as lightweight extension. Thus, the latter 
option is opted as SysML is already an establish profile for 
modelling System Engineering applications. Thus, by 
extending the profile, the best aspect of SysML can be 
leveraged while lowering the learning curve. Furthernore, 
the profile extension is conformed to standard UML hence 
can also be supported by existing UML tool. 
510
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) The Government of Malaysia, 2011. Used by permission to IARIA.     ISBN: 978-1-61208-165-6

The first notions of modelling architecture by using UML 
in a formal manner by mapping it to ADL were done in [3, 
8] Nonetheless, both researchers do not concentrate on UML 
2.0. Even so, they both highlight a useful consideration to be 
acknowledged in the mapping. Garlan, Cheng and 
Kompanek [8] discuss the pros and cons of using different 
metaclasses 
for 
representing 
architectural 
concepts. 
Medvidovic and Rosenblum [2] describe a more detailed 
mapping between C2 and Wright architecture style and UML 
which involved two strategies of either using UML "as is" or 
by using stereotypes with restrictions by means of OCL. The 
moves towards mapping of UML 2.0 with ADL were done 
in [9-11]. Only one of the researchers proposed on using 
UML 2.0 in order to model variability in architecture. 
Nonetheless, the concentration of Choi [11]  is on 
representing variability in PLA behavior  through connector . 
There is also a research done by Maga and Jazdi [12] on 
extending variability in SysML profile. Although the 
researchers have proposed a variety of variants in their 
extension, however they do not specifically address the PLA 
and its constructs in the extension. This research 
concentrates on filling in the gap in the PLA modelling by 
concentrating on a formal architectural and variability 
construct based on xADL and its mapping to SysML for 
profile extension. 
III. 
MAPPING STRATEGY FROM ARCHITECTURE 
DESCRIPTION TO SYSML 
The mapping strategy is basically divided into three 
steps: Mapping basic architecture construct; Mapping 
variability construct and mapping the constrain. However, 
the third strategy is not the focus for this paper hence is not 
being elaborated. The mapping steps are as shown in Figure 
1. Each step is described in detail as follows: 
A. Mapping Basic Architectural Construct 
The corresponding elements of the mapping are between 
the Structure and Types schema in xADL which can be 
mapped into two corresponding packages in SysML, Blocks 
package and Ports&Flows package. The first mapping is 
between component from xADL and block from SysML. 
Block is equivalent to component where block is an 
extension of class metaclass in SysML. The same notion is 
also used by Medvidovic and Rosenblum [3] where their 
component is an extension of UML class metaclass instead 
of extending from component metaclass. In the case of 
mapping between Connector, Interface, Link, Point and 
Group from xADL Structure and Types schema, roughly all 
the elements are also present in SysML Ports&Flow 
package. Nonetheless, construct such as connector is not 
explicitly specified. Instead it can only be identified when a 
relationships between two roles in SysML are specified. 
Therefore, stereotypes were explicitly added for both 
connector and role. Signature schema in xADL construct is 
also added as stereotype extending an interface metaclass.  
B. Mapping Variability Construct  
The schema in xADL has to be in an equivalent 
metamodel form before the mapping to SysML can be done. 
Thus, for Variants package and Options package in xADL 
which do not have a corresponding matching in SysML, a 
package called Variability package is extended from the 
original SysML profile to support variability as shown in 
Figure 1. The added stereotype is extended from the class 
metaclass. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1.  Mapping Strategy 
C. Mapping results 
Based on the specified strategy, the proposed profile for 
representing architecture based on the mapping is as shown 
in Figure 2. The profile is divided into three sections, the 
metaclass section which consists of UML classes reused in 
SysML known as UML4SysML. The architectural construct 
section which shows the extension of stereotype classes 
shaded in grey. The variability construct section which 
shows the extension of stereotype to represent variability, 
variants and option can be applied to the architecture 
construct since both the variability constructs extends from 
class metaclass. Another variability construct, representing 
guard in xADL schema is added as a stereotype extension 
from ConstrainBlock stereotype. 
IV. 
CASE STUDY 
In order to validate the applicability of the extended 
modelling in SysML, the extended model was applied to 
product line of Autonomous Mobile Robots (AMR). The 
product line consists of five different but similar applications 
of AMR. Four of the AMR are AMR for research, AMR for 
teaching, i-wheelchair and intelligent scooter based on the 
research collaboration done at Embedded Real Time and 
511
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) The Government of Malaysia, 2011. Used by permission to IARIA.     ISBN: 978-1-61208-165-6

Software Engineering Research Lab (ERetSEL), Universiti 
Teknologi Malaysia. The fifth  AMR is the parking assistant 
based on the work of Polzer, Kowalewski and Botterweck 
[13]. The five AMR product line (AMRPL) are as shown in 
Figure 3. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
In order to identify the commonality and variability of 
the AMRPL requirements, approach by Abd Halim, Jawawi 
and Safaai [14] is used. However, in order to simplify this 
paper, the common and variable function is represented in 
use case diagram as shown in Figure 4. 
 
 
 
 
 
 
 
 
The focus to model the architecture of the AMRPL is  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
The proposed profile is used in modelling general 
architecture, the block definition diagram (bdd) in SysML. 
The bdd diagram shows the structure of the components in 
the form of noncomposite relationships which will explicitly 
shows the common and variable blocks involved in the 
system. Other than noncomposite relationships, another 
relationships that can be shown in bdd is the whole-part 
relationships [15]. However, in PLA, a noncomposite 
relationship is more suitable as the block can either be 
selected or not selected based on its variability and 
commonality and it would not affect the block which it 
related to. The whole-part relationships is not chosen as it 
will affect the relationships between blocks which is not 
being selected for composition.  
Furthermore, the profile will then be used for modelling 
specific architecture, which is shown in SysML internal 
block diagram (ibd). In this diagram the component which 
are modelled as having a part component in the bdd will be 
elaborated further, which will explicitly show the variability 
in the connectors and the internal components relationships. 
Both bdd and ibd diagram can be referred at Figure 5 and 
Figure 6 respectively. 
 
 
 
 
 
 
 
 
Figure 2.  xADLUMLProfile 
 
Figure 4. AMRPL Use Case 
 
 
Figure 3. AMR Product Line (AMRPL) 
512
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) The Government of Malaysia, 2011. Used by permission to IARIA.     ISBN: 978-1-61208-165-6

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 5. Block Definition Diagram for AMRPL 
 
Figure 6. Internal Block Diagram for Motor Controller Part 
513
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) The Government of Malaysia, 2011. Used by permission to IARIA.     ISBN: 978-1-61208-165-6

V. 
DISCUSSION 
From the case study, PLA modelling can be seen in 
different granularity based on the SysML bdd and ibd 
diagram. In both diagrams, the proposed xADLUML profile 
is used to augment the diagram with commonality and 
variability stereotypes and also with a more concrete 
architectural construct. From the case study, bdd diagram in 
Figure 5 shows common and optional stereotype in the 
AMRPL such as Motorcontoller block which have the option 
of using PID, PI or PD as a controller. The Motorcontroller 
blocks and its parts is further refined in ibd diagram in 
Figure 6 where the common and variable connectors are 
clearly shown by the stereotypes. Nonetheless, there are few 
constructs in the profile that is not being applied to the case 
study such as the use of delegation and assembly and the use 
of signature for representing interface. However, the case 
study did reflect a significant potential in modelling PLA in 
both bdd and ibd diagram thus helps in the understanding of 
the PLA for an easier product specific derivation for 
AMRPL.  
According to our experience with this case study, the 
profile can explicitly show the commonality and variability 
in the AMRPL. The mapping from xADL to SysML profile 
further helps in formalising the architectural concepts of the 
modelling. Nonetheless, rule is essential to ensure 
consistency between the model elements. Therefore, OCL 
rule should be added in the profile to constraint metaclasses 
between the bdd and ibd diagram. The constraint will 
determine the consistency between the different views of the 
block diagram. Consequently, it is essential to understand 
how the rule in xADL Guard can be translated into OCL rule 
for the purpose.  
VI. 
CONCLUSION 
This paper concentrates on how to map architecture 
concept from xADL to one of UML profile, SysML for an 
explicit representation of architectural and variability 
construct for modeling PLA. From the case study, it did 
show a noteworthy contribution in modelling PLA in terms 
of its blocks and its connector and also in terms of the 
granularity of the modelling. A more extensive case study 
should be done in the future in order to fully validate the 
proposed profile. Furthermore, rules to infuse consistency of 
the metaclasses and its instance should be further explored. It 
is hoped from the explicit modelling of PLA commonality 
and variability can further help reuser to derive a product 
specific application in the application engineering phase. 
ACKNOWLEDGMENT 
This research is fully funded by the Research University 
Grant (RUG) from the Universiti Teknologi Malaysia 
(UTM) and Ministry of Higher Education (MOHE) under 
Cost Center No.Q.J130000.7128.03J23. Our profound 
appreciation also goes to ERetSEL lab members for their 
continuous support in the working of this paper. 
REFERENCES 
 
[1] Taylor, R.N., N. Medvidovic, and E.M. Dashofy, Software 
Architecture: Foundations, Theory and Practice.John Wiley & 
Sons, Inc.) 2009. 
[2] KandÃ©, M.M. and A. Strohmeier. Towards a UML profile for 
software architecture descriptions. 2000: In Springer-Verlag, 
pp. 513-527. 
[3] Medvidovic, N., et al., Modeling software architectures in the 
Unified Modeling Language. ACM Transactions on Software 
Engineering and Methodology (TOSEM), 2002. vol 11, pp. 2-
57. 
[4] Medvidovic, N., E.M. Dashofy, and R.N. Taylor, Moving 
architectural description from under the technology lamppost. 
Information and Software Technology, 2007. vol 49, pp. 12-
31. 
[5] Cheng, S.W. and D. Garlan. Mapping Architectural Concepts 
to UML-RT. in Proceedings of the Parallel and Distributed 
Processing Techniques and Applications Conference. 2001. 
[6] Dashofy, E.M., A. Hoek, and R.N. Taylor, A comprehensive 
approach for the development of modular software 
architecture description languages. ACM Transactions on 
Software Engineering and Methodology (TOSEM), 2005. 
14(2): pp. 199-245. 
[7] SysML. OMG SysML Specification v. 1.0. Retrieved from 
http://www.sysml.org. 2006. Last accessed on 21.7.2011. 
[8] David, G., C. Shang-Wen, and J.K. Andrew, Reconciling the 
needs of architectural description with object-modeling 
notations. Sci. Comput. Program., 2002. 44(1): pp. 23-49. 
[9] GoulÃ£o, M. and F.B. e Abreu, Bridging the gap between 
Acme and UML 2.0 for CBD. SAVCBS 2003 Specification 
and Verification of Component-Based Systems, 2003: pp. 75-
79. 
[10] Meister, J., R. Reussner, and M. Rohde. Applying patterns to 
develop a product line architecture for statistical analysis 
software. in Software Architecture, 2004. WICSA 2004. 
Proceedings. Fourth Working IEEE/IFIP Conference, 2004. 
[11] Choi, Y., et al. An approach to extension of UML 2.0 for 
representing variabilities. Fourth Annual ACIS International 
Conference, IEEE, 2005, pp. 258-261. 
[12] Maga, C.R. and N. Jazdi, Survey, Approach and Examples of 
Modeling Variants in Industrial Automation. Journal of 
Control Engineering and Applied Informatics, vol.13, pp. 54-
61. 
[13] Polzer, A., S. Kowalewski, and G. Botterweck. Applying 
Software Product Line Techniques in Model-based Embedded 
Systems Engineering. in MOMPES 2009, Vancouver, 
Canada, pp. 2-10. 
[14] Halim, S.A., D.N.A. Jawawi, and S. Deris. Requirements 
Identification and Representation in Software Product Line. In 
Asia Pacific Software Engineering Conference (APSEC'09),  
IEEE, Pulau Pinang, Malaysia, pp. 340-346. 
[15] Friedenthal, S., A. Moore, and R. Steiner, A Practical Guide 
to SysML: The Systems Modeling Language. (The OMG 
Press) , Morgan Kaufmann, 2008. 
 
514
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) The Government of Malaysia, 2011. Used by permission to IARIA.     ISBN: 978-1-61208-165-6

