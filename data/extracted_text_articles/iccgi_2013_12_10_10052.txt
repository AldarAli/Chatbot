Multiagent Genetic Optimisation to Solve the Project Scheduling Problem 
 
Konstantin Aksyonov, Anna Antonova  
Department of Information Technologies 
Ural Federal University, UrFU 
Yekaterinburg, Russia 
wiper99@mail.ru, antonovaannas@gmail.com
 
 
Abstract—This paper considers a project scheduling problem 
belonging to a class of multiobjective problems of complex 
systems 
control, 
whose 
decision 
search 
time 
grows 
exponentially depending on the problem dimension. In this 
paper, a survey of a modified genetic algorithm application to 
the project scheduling problem is presented. We propose a 
multiagent genetic optimisation method based on evolutionary 
and multiagent modelling by implementing different decision 
searching strategies, including a simulation module. The 
multiagent simulation module is intended to evaluate 
chromosome fitness functions and describe the dynamic nature 
of own and subcontracted resources allocation. The proposed 
multiagent genetic optimisation method, the MS Project 
resource reallocation method, and a heuristic simulation 
method have been compared whilst addressing a real-world 
scheduling problem. The comparison has shown: firstly, the 
unsuitability of the MS Project planning method to solve the 
formulated problem; and secondly, both the advantage of the 
multiagent genetic optimisation method in terms of economic 
effect and disadvantage in terms of performance. Some 
techniques to reduce the impact of the method’s disadvantage 
are proposed in the conclusion, as well as the aims of future 
work. 
Keywords-project 
scheduling; 
genetic 
algorithms; 
simulation; subcontract work optimisation. 
I. 
INTRODUCTION 
The scheduling problem is one of the key problems in the 
management of organisational and technical systems. 
Inefficient scheduling can lead to financial losses, quality of 
service losses, and loss of competitiveness for the company. 
Companies from various scopes are faced with the 
scheduling problem, e.g. industrial and project companies, 
shopping centres, hospitals, and call centres. 
There are several scheduling problem statements 
depending on the application sphere: operations calendar 
planning [1]–[5], limited resources assignment to a set of 
tasks [6]–[8], and the traveling salesman problem [9]. 
Classical scheduling problem solving methods have a 
number of disadvantages. Thus the use of combinatorial 
methods and mathematical programming leads to high 
computational resources utilisation when addressing large-
scale problems. In addition, these methods are applied poorly 
to the problem with dynamically changing constraints. 
Simulation takes into account the dynamic nature of the 
problem, but leads to a random search process, which does 
not guaranteed optimal decision finding. The use of genetic 
optimisation allows the shortcomings of the previous 
methods to be overcome [9]. The application of genetic 
optimisation to the scheduling problem with defined 
constraints is widely considered in the literature [1]–[9]. 
This paper focuses on the project scheduling problem 
with the use of evolutionary computation [12] and 
simulation. The remainder of the paper is organised as 
follows: Section 2 provides an overview of the application of 
the genetic algorithm to the scheduling problem. Section 3 
formulates the project scheduling problem with time 
constraint. Section 4 introduces the genetic algorithm based 
on an annealing simulation and novelty search. Section 5 
presents the algorithm of the multiagent genetic optimisation 
program 
based 
on 
the 
integration 
of 
evolutionary 
computation and multiagent simulation. Section 6 evaluates 
the practical implementation of the multiagent genetic 
optimisation program to solve the real-world scheduling 
problem. Section 7 concludes this paper and explores future 
work. 
II. 
RELATED WORK 
In general, the scheduling problem is connected to the 
problem of seeking an operations sequence that satisfies the 
constraints and optimises the objective functions. The 
renewable resources (such as staff or equipment) are usually 
considered when studying the scheduling problem. For 
certain tasks (for example production planning) non-
renewable resources should additionally be determined [1]. 
In the various scheduling problem studies different 
constraint sets are considered depending on the specific task. 
Four constraint types were identified in [3]: resource, 
precedence, physical layout, and information constraints. 
The time constraint type should be added to the constraint 
types list when analysing workflow inside a project 
development company. Time limitation is associated with a 
time frame for the early and late starts of the operations.  
All constraints, except precedence ones, were studied by 
Brezuliani et al. [6]. Precedence and resource constraints 
were considered by Okada et al. [1], Klimek [2], Abdel-
Khalek et al. [4], and Dhingra and Chandna [7]. Resource 
and information constraints were studied by Yang and Wu 
[8]. Resource, precedence, and time constraints were 
considered by Karova et al. [5]. Scheduling with a resource 
constraint to determine a public transport route was 
presented by Osaba et al. [9].  
237
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

The optimisation objects are also different in the studies 
reviewed. The classical objective function of working time 
(makespan) minimisation was considered by Sriprasert and 
Dawood [3] and Osaba et al. [9]. The objective function of 
constraints violation penalty minimisation was considered by 
Karova et al. [5], and Yang and Wu [8]. Both mentioned 
objective functions were considered by Okada et al. [1], 
Brezuliani et al. [6], and Dhingra and Chandna [7]. 
There are different ways of conducting an objective 
function evaluation: analytical methods, simulation, artificial 
neural networks, fuzzy systems, and component modelling. 
Analytical methods are the most widely used; the drawback 
of this approach being the lack of the analysis of the complex 
system dynamic behaviour. This drawback is overcome by 
using a simulation model to evaluate the objective function 
by Osaba et al. [9]. The integration of evolutionary 
modelling and simulation can limit the random search space 
and enhance heuristic optimisation by taking into account the 
dynamically changing constraints of the scheduling problem. 
The reviewed studies do not consider subcontracted 
workforce optimisation, while this problem is real to 
developers and even to mass production enterprises. The 
subcontracted 
workforce’s 
optimisation 
problem 
is 
connected to subcontracted scheduling in order to maximise 
the utilisation of the company’s own resources. In the 
literature, a problem regarding the appropriate selection of 
subcontractors using artificial intelligence methods was 
studied by Chen et al. [10]. A subcontract optimisation 
technique based on a simulation and heuristics was 
suggested by Aksyonov and Antonova [11]. The current 
article considers new subcontract optimisation techniques 
with the use of a genetic algorithm. 
III. 
PROBLEM STATEMENT 
Let us consider the problem of unique projects 
scheduling aimed at the calendar planning of operations. All 
project operations have to be carried out in combination with 
a set of time constraints. The set of time constraints is 
defined through negotiations with customers. In the case of 
the organisation’s own lack of resources, subcontracted 
resources have to be involved to meet the time constraints. 
The objective functions of the considered problem are: 1) 
subcontract cost minimisation; and 2) minimisation of own 
resources total downtime. The second objective function is 
associated with the fixed labour cost in the project 
companies. If the salary is fixed then downtime is also paid, 
which is not profitable for the company. 
For the project scheduling problem considered in this 
study, the following assumptions have been made:  
1. A single project consists of a number of operations with 
a known processing time, early and late start dates, 
labour input, and labour cost. 
2. The operation requires the availability of renewable 
resources (own or subcontracted workforces). 
3. Non-renewable resources are not considered in the 
scheduling. 
4. Operations cannot be interrupted. 
5. Subcontractors can be involved to perform part of the 
operation. 
6. Subcontractors can be interrupted and the operation can 
continue with the use of the company’s own resources in 
the event of the appearance of own available resources. 
7. Subcontractors are available every day on request in 
unlimited quantities (for example when working with 
different subcontractors). 
Let us describe the problem of the project portfolio 
scheduling with the use of the following designations. 
Indices: 
 
i: 
project index, i=1, 2, …, P. 
 
j: 
operation index, j=1, 2, …, Opi. 
 
w: department index, w=1, 2, …, V. 
 
t: 
time index, t=0, 1, 2, …, T. 
Decision variables: 
TB(i,j): set of start dates of operations. 
Initial parameters: 
ES(i,j): 
early start date of the operation (i,j). 
LS(i,j): 
last start date of the operation (i,j). 
SLw: 
amount of persons in the department w. 
SLO(i,j,w): amount of workforces (persons) needed in 
department w to fulfil the operation (i,j). 
SS(i,j): 
operation (i,j) subcontract cost per day. 
Parameters obtained in the decision-making process: 
 
Active(i,j,t): 
a sign of the operation (i,j) execution 
at the time t. 


= 
otherwise
is executed at the moment t
i j
operation
if
Active i j t
,0
( , )
,1
, , )
(
 
RD(t,w): 
resources from department w demand to 
fulfil the active operations at the time t.  
[
]
∑∑
=
=
⋅
=
P
i
Op
j
i
SLO i j w
Active i j t
t w
RD
1
1
( , , )
( , , )
( , )
  
VF(t,w): 
amount of free workforces of department 
w at the time t. 



≤
−
=
otherwise
SL
RD t w
if
RD t w
SL
VF t w
w
w
,0
( , )
( , ),
( , )
 
 
VSC(i,j): 
volume of subcontracting workforces on 
operation (i,j). 
Problem description: 
∑∑
=
=
→
⋅
=
P
i
Opi
j
SC
i j
SS i j V
OF
1
1
1
min
( , ))
( , )
(
,            (1) 
min
)
,
(
0
1
2
→
⋅
= ∑∑
=
=
V
T
VF t w
OF
T
t
V
w
,                     (2) 
j
i
LS i j
ES i j
TB i j
∀ ∀
∈
,
( , )]
( , );
[
( , )
                (3) 
Objective function (1) minimises the total subcontracting 
cost. Objective function (2) minimises the own resources 
total downtime. Constraint (3) saves the time frame of the 
operations start. 
238
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

IV. 
GENETIC ALGORITHM BASED ON ANNEALING 
SIMULATION AND NOVELTY SEARCH 
The genetic algorithms (GA) is one of the evolutionary 
approaches that can be used to solve complex system 
management problems in a short time [12]. The technique of 
the GA application includes the following steps: 1) selecting 
the method of encoding the problem decision (phenotype) 
into a chromosome (genotype); 2) definition of the 
evaluation method of the chromosome fitness function (FF); 
3) the genetic operator’s description; and 4) the initial 
population generation and GA work. The modification of the 
GA on the basis of an annealing simulation and novelty 
search is considered in the article in order to enhance the 
quality of the scheduling problem’s decisions. 
A. Chromosome Encoding 
There are various techniques for decision encoding 
presented in the literature: operations sequence encoding 
[2][5][9], operations precedence encoding [1][3], operations 
start dates encoding [4][6], the resource assignments on the 
operation encoding [6]–[8]. We use the encoding of the 
operation start dates shifting because this technique supports 
time constraints, is not redundant, and is simple to 
implement. 
The GA chromosome encodes the operations’ start dates 
shifting from the initial work plan to the right or left on the 
time axis via binary code (0/1). The shifting range is two 
weeks on either side of the initial operation start date. The 
chromosome size is 5r genes, where r – number of analysed 
operations, 5 – number of the genes needed to encode a 
single operation shifting (4 genes to encode 24=16 shifting 
days and 1 gene to encode the shifting direction). 
B. Genetic Algorithm Modification 
A novelty concept is a major GA concept. This concept is 
connected with the emergence of new elements and 
interactions in the environment during evolution. Two 
novelty types are distinguished in [13]: 1) combinatorial 
novelty when the new species emerge by combining the 
existing species; and 2) creative novelty when the new 
species are not reproducible by a combination of the species. 
The validity of the fundamental feasibility of the second 
novelty type is still open. 
Let us consider the case of a combinatorial novelty 
search as an adaptation mean in an open system. To 
implement this approach we modify a simple GA by 
introducing the concept of "decision originality" as a 
measure of the decision fitness to the environmental 
conditions [13]. The decision-chromosome’s originality in 
the 
population 
is 
determined 
via 
the 
numerical 
transformation of the Hamming distance matrix. 
Let us define the Hamming distance matrix as follows: 
( )
N
j
ijh i
H
1
,1
= =
=
, 
               (4) 
where hij – Hamming distance between the i-th and j-th 
chromosomes (Chi and Chj), equal to the number of positions 
at which the corresponding gene values are different in 
chromosomes Chi and Chj; N – number of chromosomes.  
We associate the matrix H with the matrix of originality 
weights W defined as follows: 
(
)
N
j
wij i
W
= ,1 =1
=
,  
                  (5) 
where wij – weight of the corresponding value of the 
Hamming distance determined as a quadratic function, 
increasing in the range from 1 to R as element hij is changed 
in the range 0 to L: 
1
1
+
− ⋅
=
ij
ij
h
L
R
w
,                           (6) 
where L – the chromosome size; R – the maximum 
weight of the chromosome in the pair, R>0. 
The two strategies of chromosome crossing have been 
described using the concept of originality. The first strategy 
– the originality search strategy (OSS) [14] – focuses on the 
combinatorial search for the new decisions in the population 
by crossing chromosomes that have different encoding. The 
second strategy – the maximum search strategy (MSS) [12] – 
focuses on the targeted search for the best chromosomes by 
crossing chromosomes that are the most adapted to the 
environment. The fitness of the i-th chromosome to the 
environment is evaluated by the fitness function FFi, i=1..N. 
Let us define the chromosome crossing probability 
matrices on the basis of the proposed strategies as follows: 
(
)
N
j
i
OSS
ij
OSS
p
P
1
,1
= =
=
, 
∑
=
=
N
j
ij
ij
OSS
ij
w
w
p
1
,                (7) 
(
)
N
i
MSS
i
MSS
p
P
=1
=
, 
∑
=
=
N
i
i
i
iMSS
FF
FF
p
1
.                (8) 
In formulas (7) and (8) the matrices cells are filled by 
probabilities values in accordance with the roulette law [12]. 
In the case of OSS strategy, the weight of the chromosome 
originality serves as a measure of chromosome importance. 
In the case of MSS strategy, the chromosome FF serves as a 
measure of chromosome importance. 
An annealing simulation algorithm (ASA) [15] is 
intended to implement the proposed chromosome crossing 
strategies during the GA work. This algorithm is based on 
the analogy of the metal annealing process, which results in 
the appearance of new metal properties. The technique for 
ASA and GA integration is proposed below. 
Step 1. Set 
the 
annealing 
simulation 
algorithm 
parameters: the initial value of the parameter tZ; the value of 
the parameter α, that controls the rate of annealing 
temperature decrease, 0≤α≤1. 
239
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

Step 2. Set the GA parameters: the number of 
generations K; the chromosome size L; the likelihood of the 
genetic operators being applied. Set the number of the 
current population Z: Z=1. Generate the initial population. 
Step 3. Apply the genetic operators to the current 
population Z with a probability depending on the value of 
parameter tZ. Increase the number of the current population 
Z=Z+1. Change the value of parameter tZ [15]: 
Z
Z
Z
t
t
t
⋅
+
+ =
α
1
. 
                  (9) 
Step 4. Check the condition of the GA ending: Z>K. If 
the condition is satisfied then go to Step 5, otherwise return 
to Step 3. 
Step 5. Stop. 
The probability of the genetic operator’s application is 
defined on the basis of the annealing simulation, in order to 
reflect the operator’s dynamic nature. 
C. Crossover Operator 
The probability of selecting the first and second parents 
from the current population Z for the crossover operator 
(CO) is described below. The probability of selecting the 
first parent has to take into account both random selection 
and targeted selection based on the MSS strategy (8). The 
probability of random selection should be reduced in the 
population’s evolution, and the probability of the MSS 
strategy should be increased. This fact is reflected in the 
probability formula of selecting the first parent i  in the 
population Z: 





−
⋅
 +










−
−
⋅
=
Z
MSS
i
Z
iZ
t
p
t
N
CO
P
1
exp
1
exp
1
1
)
(
.      (10) 
The probability of selecting the second parent has to take 
into account the OSS and MSS strategies. The probability of 
the OSS applying (7) should be reduced in the population’s 
evolution, and the probability of the MSS applying (8) 
should be increased. This circumstance is reflected in the 
probability formula of selecting the second parent j for the 
first parent i in population Z: 





−
⋅
 +










−
−
⋅
=
Z
MSS
j
Z
OSS
ij
jZ
t
p
t
p
CO
P
1
exp
1
exp
1
)
(
.   (11) 
D. Mutation and Inversion Operators 
The applied probability of the mutation operator (MO) in 
population Z is described below. This formula has to take 
into account the probability reducing during evolution in 
order to save genetic material [14]: 











−
−
⋅
=
Z
Z
t
P MO
MO
P
1
exp
1
)
(
)
(
0
,            (12) 
where P0(MO) – the initial value of the mutation operator 
applied probability. 
The applied probability of the inversion operator in 
population Z is described by an analogy with the mutation 
operator applied probability. 
E. Fitness Function 
The following fitness function considers both objective 
functions (1) and (2) described in Section 3: 
max
)
(
)
(
2
2
2
1
1
1
→
⋅
+
⋅
=
OF
OF
OF
OF
FF
Init
Init
ω
ω
,    (13) 
where ω1, ω2 – weight coefficients, ω1+ω2=1; OF1
Init, 
OF2
Init – objective functions initial values obtained by expert 
evaluation of the operation start date.  
Used FF is described with the use of the linear 
convolution of normalised heterogeneous criteria (1) and (2). 
The multi-agent resource conversion processes (MRCP) 
model described in [16] is used to evaluate the chromosome 
FF. The MRCP model is proposed to perform the decision-
making process. The decision variables and input parameters 
described in Section 3 are fed at the model input. The 
parameters obtained in the decision-making process are the 
model output. In the MRCP model we use agents in order to 
implement the resource allocation algorithm and use 
simulation in order to perform the operations execution. The 
resource allocation algorithm is described in [13] and allows 
executors of operations to be appointed in accordance with 
the assumptions made in Section 3. 
V. 
MULTIAGENT GENETIC OPTIMISATION PROGRAM  
The multiagent genetic optimisation (MGO) program has 
been developed on the basis of a BPsim.MAS dynamic 
situations modelling system and BPsim.MSN technical and 
economic development system [16]. The MGO program is 
intended to solve the problem of simulation and evolution 
modelling integration. BPsim.MAS supports the MRCP 
model description via graphical notation of the resource 
conversion processes. BPsim.MSN [16] ensures the 
development of the decision search information technology 
(IT) based on the UML sequence diagrams [17] and 
Transact-SQL database management language [18]. 
A genetic optimisation IT has been designed on the basis 
of BPsim.MSN. The genetic optimisation IT is intended to 
aid GA parameters setting and GA execution. The MRCP 
model is intended to conduct chromosomes FF evaluation by 
carrying out an experiment with the model. The decoded 
chromosome phenotype (operations calendar planning) is fed 
to the model input. The FF evaluation in accordance with 
(13) is obtained in the model output. Agents in MRCP model 
are used to allocate the renewable resources (both own and 
subcontracted). 
The decision maker carries out the problem statement 
and solution choice among the solutions obtained by the use 
of the MGO program. The algorithm of interaction between 
the decision maker and MGO program during the decision-
making process is shown in Figure 1. 
240
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

 
Figure 1.  Interaction between decision maker and MGO program 
The MGO program designed has a number of advantages 
compared to existing evolutionary scheduling optimisation 
software [2][4][8][9]. 
1. The integration of simulation, expert, multiagent, 
conceptual, and evolutionary approaches. 
2.  Description of the system models using MRCP and 
UML graphical notation. 
3. The evolutionary and simulation models integration 
via wizard technology. 
VI. 
EXPERIMENTAL RESULTS 
The application of the MGO program to solve the project 
scheduling problem is presented in this section. Let us 
consider a company «Telesystems» that consists of the 
project, manufacturing, and supply departments. The goal is 
the minimisation of the company department’s total 
downtime and the total cost of the subcontract. 
A detailed statement of the problem is given in [11]. The 
MRCP model has been developed in order to evaluate the 
chromosome FF (13). The MRCP model implements the 
resources allocation model, which satisfies the assumptions 
determined in Section 3. The model adequacy has been 
proven in [11] through the evaluation of 5 projects. The 
following input information have been used in the model: 1) 
number of projects – 10 with 35 operations; 2) time interval 
T=430 days (1 year and 3 months); and 3) time limit early 
and late start of the operations is determined by the shift in 
the provisional operations start dates for 2 weeks to the right 
or left along the time axis.  
The following GA parameters have been determined in 
the course of the genetic optimisation IT work: 1) the 
population size – 10 chromosomes; 2) the chromosome size 
– 175 genes (5 genes to encode the 35 project operations); 3) 
the following genetic operators – reproduction based on 
roulette, five-point crossover with probabilities determined 
by (10) and (11), five-point mutation with an initial 
probability equal to 10% and dynamic probability 
determined by (12), inversion with initial probability equal to 
5%; 4) algorithm stopping criterion – a change of 10 
populations; 5) random initial population; and 6) following 
the ASA parameters values – tZ0=1, α=0.9, K=10. 
The dependencies of the chromosome FF and scheduling 
problem objective functions values from the population 
number have been obtained as a result of genetic 
optimisation using the developed MGO program. The 
change in the minimum value of the objective function (1) 
during genetic optimisation is shown in Figure 2.a. The 
change in the maximum value of the fitness function (13) 
during genetic optimisation is shown in Figure 2.b. The best 
decision has been achieved in the seventh generation. 
The project scheduling problem for the «Telesystems» 
company also has been solved by use of the MS Project 2007 
resources reallocation method and heuristic-simulation (HS) 
method described in [11]. 
MS Project 2007 provides the opportunity for resource 
reallocation (with smoothing) in order to avoid exceeding the 
own renewable resources availability. The percentage 
utilisation of the manufacturing department for the initial 
work plan for the «Telesystems» company is shown in 
Figure 3 via means of MS Project visualisation. 
 
 
a. 
 
 
 
 
 
 
b. 
Figure 2.  Dependencies of the fitness function and objective function values from the population number 
241
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

 
Figure 3.  Percentage utilisation of the manufacturing department for 
initial work plan in MS Project 
The initial work plan has been formed by decision 
making person. In the figure, the x-axis shows the time 
intervals (each of which lasts 12 days); the y-axis shows 
percentage 
utilisation. 
The 
resources 
availability 
overallocated (time intervals where the use of subcontract is 
necessary) is shown in figure as dark stripes above the 
horizontal line at the 100% utilisation level. The application 
of the MS Project resources reallocation method has allowed 
to reduce the total subcontract cost down to zero (that is the 
objective functions (1) and (2) have reached their optimal 
values). But the time constraints (3) have not been satisfied 
with the use of this method. In this way, the MS Project 
resources reallocation method is not suitable to considered 
scheduling problem. 
The HS method is based on the analysis of the MRCP 
model output parameters. In the HS method, the following 
steps are performed [11]: 1) modelling results analysis – the 
subcontract cost and company resources utilisation; 2) search 
for bottlenecks associated with the operations that require 
high costs of subcontract; 3) shifting the start dates of 
operations on the period determined by HS information 
technology; 4) transfer the adjusted model at the experiments 
stage and experiments results evaluation. 
Histograms of the objective functions (1) and (2) 
obtained by the MGO and HS methods are shown in Figures 
4.a and 4.b compared with the initial work plan. The total 
subcontract cost and total downtime of the manufacturing 
department has been consistently reduced with the use of HS 
and MGO methods. All time constraints have been satisfied. 
The total downtime indicates on a reserve of own resources 
to implement additional projects. 
Based on the analysis of the results it was concluded that 
the MGO method is more effective than the HS method in 
addressing the project scheduling problem in terms of 
economic effect. The total subcontract cost of the project 
portfolio has been reduced by 30% and the total downtime of 
the manufacturing department has been reduced by 1.5% for 
a six month period using the MGO method compared to the 
HS method. The total subcontract cost has been reduced by 6 
times using the MGO method compared with the initial work 
plan. Applying the genetic optimisation based on the 
simulation and evolutionary modelling integration enhances 
the efficiency of the decision established by taking into 
account the dynamic resources allocation model in the 
simulation model and the fulfilment of the direct search in 
the decisions space by GA. The economic effect of applying 
the MGO program to solve the scheduling problem for the 
«Telesystems» company will be 405000 rubles per year, 
which is 9% higher than the economic effect from the use of 
the HS method to solve the same problem. 
Let us compare the HS and MGO methods in terms of 
performance by measuring CPU time. The CPU time for the 
HS method THSM consists of the sum of the HS IT runtime 
THSIT and the model MRCP runtime TMRCP. The sum is 
multiplied by the number of experiments XIterations conducted 
during the HS technology work. Thanks to the fact that 
THSIT<<TMRCP we can neglect the term THSIT and define THSM 
time as follows: THSM=XIterations⋅TMRCP. 
The CPU time for the MGO method TMGO consists of the 
sum of the genetic optimisation IT runtime TGOIT and model 
MRCP runtime TMRCP, which is multiplied by the 
chromosome number N. The sum is multiplied by the 
generations number K. Thanks to the fact that TGOIT<<TMRCP 
we can neglect the term TGOIT and define TMGO time as 
follows: TMGO=K⋅N⋅TMRCP. 
For the real-world scheduling problem the following 
parameter values have been used: XIterations=3, K=10, N=10. 
In this case the HS method is more desirable in terms of 
performance and consumes 33 times less CPU time than the 
MGO method. This fact is connected to the use of the 
simulation model in GA for fitness function evaluation, 
which performed K⋅N times. The CPU time of the MGO 
method is equal to 30 minutes for the real-world scheduling 
problem. 
 
 
 
a. 
 
 
 
 
 
 
b. 
Figure 4.  Dependencies of the objective functions values from the decision seeking method 
242
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

VII. CONCLUSION AND FUTURE WORK 
In this paper a multiagent genetic optimisation method 
used to solve the project scheduling problem has been 
described on the basis of the annealing simulation algorithm, 
novelty search algorithm, genetic algorithm, and multiagent 
simulation. The method combines three different decision 
seeking strategies: a random search strategy, originality 
search strategy, and maximum search strategy, in order to 
reflect the dynamic nature of the genetic operators applied. 
The proposed integration of evolutionary modelling and 
simulation limits the search space and adequately evaluates 
the dynamic fitness functions of the chromosomes. The 
method described has been implemented in a MGO program 
built on the basis of the BPsim.MAS multiagent modelling 
system and BPsim.MSN development system. The program 
integrates simulation, expert, multiagent, conceptual, and 
evolutionary modelling. The MGO method application to a 
real-world project scheduling problem has been compared 
with MS Project and HS methods. The MS project resource 
reallocation method has been found unsuitable for the 
scheduling problem considered because of the lack of 
constraints consideration. As a result of the comparison 
between MGO and HS methods, an improvement in decision 
quality under the constraints considered has been achieved 
using the MGO method. 
The disadvantage of the MGO method is the high CPU 
time, which is 33 times higher than that of the HS method. 
This fact imposes constraints on the GA generation size (no 
more than 10 chromosomes) and GA iteration number (no 
more than 10 generations). Different ways to enhance the 
GA convergence applied should be considered in future 
work in order to meet the described constraints. 
The aim of future research is to improve the rate of the 
proposed genetic algorithm convergence by applying elitism 
and taboo algorithms. The dependency between the decision 
search time and problem dimensions is assumed to be 
established. A comparison of the MGO method with the 
branch and bound method adapted to the problem considered 
is planned. Also consideration of non-renewable resources 
allocation in the simulation model is planned. 
ACKNOWLEDGEMENT 
This 
work 
was 
performed 
under 
contract 
№ 
02.G25.31.0055 (project 2012-218-03-167). 
REFERENCES 
[1] I. Okada, X. F. Zhang, H. Y. Yang, and S. Fujimura, “A random key-
based genetic algorithm approach for resource-constrained project 
scheduling problem with multiple modes,” Proc. Int. MultiConf. 
Engineers and Computer Scientists, vol. 1, Hong Kong, 17–19 March, 
2010. 
[2] M. Klimek, “A genetic algorithm for the project scheduling with the 
resource constraints,” Annals UMCS Informatica, vol. 10, issue 1, pp. 
117–130, 2010. 
[3] E. Sriprasert and N. Dawood, “Genetic algorithms for multi-
constrained scheduling: an application for the construction industry,” 
Proc. CIB W78's 20th International Conf. Construction IT, 
Construction IT Bridging the Distance, CIB Report 284, Waiheke 
Island, New Zealand, 23–25 April 2003, pp. 341–353. 
[4] H. Abdel-Khalek, M. H. Sherif, A. M. el-Lacany, and Y. Abdel-
Magd, “Financing – scheduling optimization for construction projects 
by using genetic algorithms,” Proc. World Academy of Science, 
Engineering and Technology, 2011, pp. 289–297. 
[5] M. Karova, J. Petkova, and V. Smarkov, “A genetic algorithm for 
project planning problem,” Proc. Int. Scientific Conf. Computer 
Science, 2008, pp. 647–651. 
[6] A. Brezuliani, L. Fira, and M. Fira, “A genetic algorithm approach for 
scheduling of resources in well-services companies,” International 
Journal of Advanced Research in Artificial Intelligence, vol. 1, no. 5, 
2012. 
[7] A. Dhingra and P. Chandna, “A bi-criteria M-machine SDST flow 
shop scheduling using modified heuristic genetic algorithm,” 
International Journal of Engineering, Science and Technology, vol. 2, 
no. 5, pp. 216–225, 2010. 
[8] F.-C. Yang and W.-T. Wu, “A genetic algorithm based method for 
creating impartial work schedules for nurses,” International Journal of 
Electronic Business Management, vol. 10, no. 3, pp. 182–193, 2012. 
[9] E. Osaba, R. Carballedo, and F. Diaz, “Simulation tool based on a 
memetic algorithm to solve a real instance of a dynamic TSP,” Proc. 
IASTED Int. Conf. Applied Simulation and Modelling, Napoli, Italy, 
25–27 June, 2012, pp. 27–33. 
[10] M.-Y. Chen, H.-C. Tsai, and E. Sudjono, “Evaluating subcontractor 
performance using evolutionary fuzzy hybrid neural network,” 
International Journal of Project Management, pp. 349–356, 2001. 
[11] K. A. Aksyonov and A. S. Antonova, “Application of simulation and 
intelligent 
agents 
to 
solve 
project 
management 
problem,” 
International Journal of Computer Science Engineering and 
Information Technology Research, vol. 3, no. 1, pp. 321–330, 2013. 
Available from: 
http://www.tjprc.org/view_archives.php?year=2013&id=14&jtype=2
&page=3. [Retrieved: June 2013] 
[12] D. Goldberg, Genetic Algorithms, Addison Wesley, 1989. 
[13] J. Lehman and K. Stanley, “Exploiting open-endedness to solve 
problems through the search for novelty,” Proc. Eleventh Intern. 
Conf. Artificial Life (ALIFE XI), Cambridge, MA, 2008. 
[14] L. A. Zinchenko, V. M. Kureichik, and V. G. Redko (Ed.), Bionic 
Information Systems and their Practical Applications, Moscow, 
FIZMATLIT, 2011. 
[15] W. L. Goffe, G. D. Ferrier, and J. Rogers, “Global optimization of 
statistical 
functions 
with 
simulated 
annealing,” 
Journal 
of 
Econometrics 60, 1994, pp. 65–99. 
[16] K. Aksyonov et al., “Decision Support Systems Application to 
Business Processes at Enterprises in Russia,” in Efficient Decision 
Support Systems - Practice and Challenges in Multidisciplinary 
Domains, C. Jao, Ed., InTech, 2011, pp. 83–108. ISBN: 978-953-307-
441-2. Available  from: 
http://www.intechopen.com/articles/show/title/decision-support-
systems-application-to-business-processes-at-enterprises-in-russia. 
[Retrieved: June 2013] 
[17] The official UML web site, Available from: http://www.uml.org. 
[Retrieved: June 2013] 
[18] SQL 
Server 
language 
reference, 
Available 
from: 
http://msdn.microsoft.com/en-us/library/ms166026(v=sql.90).aspx. 
[Retrieved: June, 2013] 
243
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-283-7
ICCGI 2013 : The Eighth International Multi-Conference on Computing in the Global Information Technology

