The Impacts of Dynamic Broadcast Schemes on the Performance of 
Routing Protocols in MANETs 
Dimitrios Liarokapis 
School of Engineering and Computing  
Glasgow Caledonian University 
Glasgow, UK 
e-mail: Dimitrios.Liarokapis@gcu.ac.uk 
Ali Shahrabi  
School of Engineering and Computing  
Glasgow Caledonian University 
Glasgow, UK 
e-mail: A.Shahrabi@gcu.ac.uk
 
Abstract—In this paper, a new implementation of AODV, 
called AODV-ProbA, is presented that substitutes SF with the 
Probability-based Adaptive (ProbA) broadcast algorithm. 
AODV-ProbA is compared against normal AODV and another 
proposed enhancement for AODV, called DP-AODV. An 
algorithmic comparison between AODV-ProbA and DP-
AODV shows minor but critically important differences in the 
use of local density knowledge and adjustment of the 
probability threshold. The simulation results also confirm our 
hypothesis that AODV-ProbA performs considerably better 
than AODV and DP-AODV in highly mobile dense networks 
under moderate to heavy traffic load. 
Keywords-dynamic; adaptive; probability; broadcasting; 
MANETs 
I. 
 INTRODUCTION  
Over the past few years many studies have been 
conducted to develop broadcast mechanisms to alleviate the 
effects of SF [1], [2]. The focus of the early works was on 
the schemes where the mobile nodes make the rebroadcast 
decision based on fixed and preconfigured thresholds. 
Despite the fact that these schemes have been shown to 
considerably improve the overall performance of the 
network, they have been found to highly depend on the 
combination of threshold selected, density and load. The 
degree of dependency is such that in certain network 
topologies even SF performs better than these schemes [3]. 
Adaptive schemes have consequently been proposed to 
alleviate these dependencies. In such schemes the threshold 
used for the broadcast operation changes according to the 
local density of the network, within the transmission range of 
the sender (number of one hop neighbors) or within an 
expanded neighborhood area (number of two hops 
neighbors). To determine the density of the network locally, 
most of these schemes either exchange HELLO packets [4], 
[5] or use a positioning system such as GPS [6]. These 
schemes either introduce more overhead traffic to the 
network or demand the existence of expensive, and in many 
cases not very reliable, positioning systems. There are also 
adaptive schemes that decide upon the local density of the 
network based on duplicate receptions of a packet for the 
duration of a random or fixed period of time [7], [8]. 
A wide variety of broadcasting algorithms are being 
proposed under different assumptions. However, the 
credibility of simulation results and conclusions made when 
the network is only under broadcast traffic is very 
questionable as such scenarios are highly unrealistic. This 
approach 
ignores 
the 
dynamic 
interactions 
between 
broadcasting algorithms and other components of networks.  
Hence, it is critical that when proposing a new algorithm, we 
evaluate it with accurate modelling of the underlying routing 
protocols and communication mechanisms. Clearly, after 
using such models a comprehensible understanding of the 
factors that affect the performance of a network emerges. 
In this paper, we evaluate the performance of SF, ProbA 
[7] and DP [8] as broadcast mechanisms that take part in the 
route discovery process of the AODV routing protocol. In 
order to assess network performance, three performance 
metrics, namely packet delivery ratio, end to end delay and 
throughput, are used. This is attributed to the fact that the 
level of network performance visible to the end user is more 
important than that of internal network components.  
The rest of this paper is organized as follows. Section 2 
presents the related work for broadcasting in MANETs 
including a brief description of ProbA and DP. The 
algorithmic comparison of ProbA and DP is presented in 
Section 3. The results of extensive simulation study are 
presented in Section 4. Finally, Section 5 concludes this 
paper. 
II. 
RELATED WORK 
Over the past years some probability-based (PB) 
algorithms have been proposed for broadcasting in 
MANETs. Probability-based algorithms are those which 
decide upon relaying a broadcast message using a probability 
value. ProbA and DP are two probability-based (PB) 
algorithms which have been proposed recently.  
A. Probability-based Adaptive (ProbA) Scheme 
This approach introduces an extra step in the PB 
algorithm. According to PB, the receiving node applies the 
fixed probability threshold for the broadcast decision exactly 
after the packet is received. In ProbA, the mobile node falls 
into a listening mode for a random number of time slots upon 
reception of a new broadcast message. 
ProbA takes advantage of this listening period and 
calculates the number of duplicate packets received, using a 
simple counter which is initialized to a value of 1 when a 
broadcast packet is received for the first time. The number of 
identical packets arriving at the mobile node is closely 
connected to the number of neighboring nodes. Each time 
the value of the counter increases, the probability threshold is 
tuned 
according 
to 
a 
pattern 
that 
is 
introduced 
administratively. This pattern is a scaled “if” statement, 
where the probability threshold changes its value depending 
on the current counter value. The number of possible values 
260
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

for the probability threshold is a parameter that is set by 
default but needs to follow an exponential and not a linear 
trend [9]. The value of the probability threshold could 
change multiple times during the listening period and every 
time a duplicate broadcast packet is received. The details of 
the ProbA algorithm are presented in Fig. 1 where P is the 
probability threshold, count is the counter described above, 
P1, P2, …, Pn are the pre-determined probability threshold 
values and c1, c2, …, cn are the pre-determined counter 
values. 
ProbA’s primary goal is not to accurately calculate the 
number of neighboring nodes, but to decide upon the active 
density level of the network locally inside the transmission 
radius. This feature gives an extra advantage to ProbA in 
comparison to other adaptive schemes. An algorithm which 
is based on HELLO packets or a GPS system cannot 
properly estimate the number of active nodes retransmitting a 
broadcast message. For instance, grey node (GN) in Fig. 2 
calculates the exact number of nodes inside the transmission 
radius. Either using GPS or HELLO packets, the end result 
of the calculation will be very close to 12, the total of all 
white nodes (WN) and black nodes (BN). As a result, GN 
will decide that the network is very dense locally and tune 
the probability threshold to be low (for example 10%), in 
order to avoid rebroadcasting that may cause collisions and 
contention. As the threshold is now very low, it is very likely 
that GN will not rebroadcast. Thus, none of the WNs will 
receive the broadcast packet. 
In ProbA, GN will wait for a random period of time 
counting duplicate packets, Fig. 3. As GN has received a 
message once the counter will be set to 1 requiring a very 
high threshold value (for example 90%). It is highly possible 
at this point, as the threshold is very high, that GN will 
rebroadcast the packet and all WNs will receive it. 
B. Dynamic Probabilistic (DP) Broadcasting 
DP also uses a packet counter in order to estimate the 
density of the network locally. A counter is maintained in 
every node for every broadcast packet received. The counter 
increases by 1 every time a duplicate packet is received. A 
high counter value implies high local density and, on the 
contrary, a low counter value represents a low level of local 
density. The probability threshold is increased in case that 
the counter is very low and decreased if it is high.  
The decision of a node to increase or decrease the 
probability threshold and consequently to rebroadcast the 
packet or not has an effect on the neighboring nodes counter, 
as a rebroadcast will in turn increase their counters. 
According to the [8], “this kind of adaptation causes a 
dynamic equilibrium between rebroadcast probabilities and 
packet counter values among neighboring nodes”. This 
equilibrium state should lead to optimal results, although it is 
hard to reach that state as the mobile nodes may be 
constantly moving. For that reason, the probability threshold 
needs to be adjusted as quickly as possible. In addition, 
according to DP drastic changes in the probability threshold 
should be avoided. 
DP dictates that a node should rebroadcast a packet 
depending on the current probability P if the packet is 
received for the first NC times, where NC is the threshold 
value to indicate whether enough duplicate packets were 
received or not. The probability P is decreased by a small 
constant d when an additional copy beyond NC of an existing 
packet is received. The probability P is increased by another 
small constant d1 if a node has not heard anything within a 
time interval t. An upper Pu and a lower Pl bounds are also 
set.  The algorithm is presented in Fig. 4. 
Setting the value of t and the initial value of P is critical. 
If t is set too low, the counter may be checked too often and 
the packet counter may remain low. In this case, the 
probability value could remain the same. If t is set too high 
the counter may be checked too less and the packet counter 
may exceed the threshold often and the probability could be 
set too low.  
The value of Nneighbour is calculated using the formula: 
 
(
)
2
neighbour
1
R
N
N
A
π
=
−
.  
(1) 
The initial value of P is set as follows. 
Algorithm: ProbA 
Input: broadcast message (msg) 
Output: decides whether to rebroadcast msg or not  
 
1: if ( msg is heard for the first time ) { 
2:   count = 1; 
3:   Generate a random number rand between 1 and 100; 
4:   while (wait for a random number of slots){ 
5:     if (msg is heard again) 
6:       count++;} 
7:   if (count < c1) 
8:     P = P1; 
9:   else if (count < c2) 
10:       P = P2; 
11:     else if (… 
…:     … … … 
n+1:   else if (count > cn) 
n+2:     P = Pn; 
n+3:   if (P > rand) 
n+4:     exit; 
n+5:   else { submit msg for transmission; 
n+6:            exit;}} 
Fig. 1: ProbA algorithm.  
 
BN TR 
GN TR 
10% 
Fig. 2: HELLO-GPS 
BN TR 
GN TR 
Fig. 3: ProbA 
90% 
261
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

 
neighbour
neighbour
neighbour
neighbour
6
1,                 where 
1
6
6
,    where 
1
6
0,                 where 
0
N
P
N
N
N

≥



=
<




≤

. 
(2) 
III. 
PROBA VS DP 
The core of both ProbA and DP algorithms is to 
adaptively make decision to rebroadcast a packet or not 
depending on the local density of the network. A node starts 
a timer to enter a listening (or learning) mode upon reception 
of a new broadcast packet. During listening period, duplicate 
packets are counted. A high value reflects high number of 
active neighbouring nodes requiring a lower value for 
probability threshold. On the contrary, if the counter value is 
low, the probability threshold value needs to have a high 
value as a rebroadcast will provide a significantly large extra 
coverage area and thus the broadcast operation will most 
likely not die out. It should be remembered that the local 
density of the network is not calculated accurately. The 
counter value is just an indication of the number of active 
neighbouring nodes. This is not an algorithmic weakness as 
the counter value is proportional to the node density in the 
surrounding area for a given rebroadcast probability 
distribution among neighbouring nodes. 
Despite the fact that both algorithms are based on the same 
logic of implementing adaptivity, they differ in two critical 
points; how the listening period is accommodated inside the 
broadcast algorithm and what is followed when adjusting 
the probability threshold. 
A. Listening Period 
According to the DP algorithm, a node does not wait for 
the timer to expire before making the rebroadcast decision. It 
immediately decides whether to rebroadcast or not. The 
timer is used to accumulate knowledge for future decisions. 
The counter increases when a duplicate packet is received 
and in turn the probability threshold is decreased. If nothing 
is heard during the listening period the counter is constantly 
set to 1 and the probability threshold is increased. Whereas, 
the ProbA algorithm dictates that the node can only decide 
upon the rebroadcast of the packet after the timer has 
expired, thus it makes its decision based on freshly obtained 
knowledge upon the local density of the network. DP would 
perform poorly when the network topology changes fast, as 
the node would base its decision on some stale knowledge. 
This laziness may lead to poor performance in highly mobile 
networks.  
DP may look faster than other timer-based algorithms, as 
pointed out in [8]. However, this could only be true if the 
timer value is greater than 5-10% of the total end to end 
delay of the entire process. For example, a waiting time of 
30ms does not have a significant effect on a process that 
could last 300ms or even longer in case of high traffic load in 
the network where delay can exceed the value of 1sec. 
Furthermore, a small waiting time could also aid to avoid 
further collisions and consequently a rather lengthy back-off 
process. 
B. Probability Threshold Adjustment 
The increase or decrease of the probability threshold is 
closely related to the potential additional coverage area that 
could be achieved when the broadcast packet is transmitted. 
If a large extra area is predicted to be covered by 
rebroadcasting of a packet, the probability threshold should 
be set to a high value. That is the case when the counter 
value is low. On the contrary, if the predicted coverage area 
is small, the probability threshold should be adjusted to a low 
value. This is also the case when the counter value is high. It 
is obvious that counter value, probability threshold and extra 
coverage area greatly affect one another in that order. 
Algorithm: DP 
Input: broadcast message (msg) 
Output: decides whether to rebroadcast msg or not  
 
1:   if (msg is received){ 
2:     if (msg is in the received message list) 
3:       if (count > NC){ 
4:         P = P – d; 
5:         if (P < Pl) 
6:           P = Pl; 
7:       } 
8:       count = count + 1; 
9:   else { 
10:   count = 1; 
11:   Add msg ID to the received packet list with an 
expiration time; 
12: Submit msg for transmission with probability P; 
13: ######################################### 
14: for (every time interval t) 
15:   if (no msg is received within t) 
16:     if (count < NC){ 
17:       P = P + d1; 
18:       if (P > Pu) 
19:         P = Pu; 
20:       Remove msg ID from received message list;} 
 
Fig. 4: DP algorithm.  
 
A 
B 
d 
r 
r 
Fig. 5: Extra area analysis 
262
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

The DP algorithm uses a linear pattern for the adjustment 
of the probability threshold. For every increase of the counter 
value, the probability threshold is decreased by a small 
constant [8]. Furthermore, for every time interval that there 
are no duplicate broadcast packets received, the probability 
increases by another small constant. The ProbA algorithm 
makes use of a scaled if statement for the adjustment of the 
probability [7]. This should lead to an exponential decrease 
of the probability depending on the counter value. An 
example of the scaled if statement is as follows: 
if(count = 1) 
 P = 90%; 
else if(count < 4) P = 50%; 
else 
 
P = 10%; 
In order to conclude which of the two patterns is more 
suitable, we need to take into consideration the redundant 
rebroadcast analysis performed in [9]. Consider the scenario 
in Fig. 5. Node A sends a broadcast packet and node B 
decides to rebroadcast it. Let SA and SB denote the circle 
areas covered by the transmission ranges of nodes A and B 
respectively. The gray area represents the additional area that 
will be covered by B’s rebroadcast named SB-A. We can 
derive that: 
 
2
( )
SB A
r
INTC d
π
−
=
−
, 
(3) 
where INCT(d) is the intersection area of the two circles 
centered at two points distanced by d. 
 
2
2
/2
( )
4
r
d
INTC d
r
x dx
=
−
∫
. 
(4) 
The extra coverage area gets the maximum value when r 
= d and is equal to: 
 
2
2
2
3
( )
0.61
3
2
r
INTC r
r
r
π
π
π


−
=
+
≈






. 
(5) 
Thus, B’s rebroadcast can cover an extra area of 61% of 
the area covered by the previous transmission. The average 
extra coverage area can be obtained by integrating the above 
value over the circle of radius x centered at A for x in [0, r]: 
 
2
2
2
0
2
( )
0.41
r
x
r
INTC x
dx
r
r
π
π
π
π


⋅
−


≈
∫
. 
(6) 
A rebroadcast can cover an additional of 41% area in 
average. Following the same pattern, the extra area covered 
can be calculated depending on the number of transmissions 
heard for the broadcast packet. The result is shown in the 
graph of Fig. 6. 
This analysis confirms ProbA’s hypothesis that the 
probability 
threshold 
adjustment 
should 
follow 
an 
exponential and not a linear decrease pattern proving the 
superiority of ProbA over DP. 
IV. 
PERFORMANCE ANALYSIS 
In this section, we present the simulation results of our 
performance comparison study that will confirm the findings 
of the algorithmic comparison performed in the previous 
section. The algorithms of normal AODV with AODV-
ProbA and DP-AODV are compared. The performance 
metrics for comparison include the packet delivery ratio 
(PDR), end to end delay, and throughput. 
A. Simulation Setup 
The simulator used for the experiments is NS-2. All 
experiments are grouped into 3 different categories 
depending on node density, traffic load (number of 
connections) and mobility. For the first group of scenarios 
node density increases from 20 nodes up to 200 nodes with a 
constant step of 20. The second group includes the results 
against traffic load starting from 20 TCP connections and 
reaches the maximum of 60 connections, again with a 
constant increase step of 10 connections. The last group 
evaluates the performance of the three algorithms against 
mobility. The starting point for the node speed is 10m/s and 
increases by 5m/s until it reaches the maximum value of 
30m/s. 
All nodes are placed randomly within a network topology 
of 1000x1000 square meters. Transmission range for all 
nodes is set to 250m and channel capacity is 2Mbps. Each 
simulation run is executed for 800sec of simulation time. 
Nodes move inside the network with a maximum speed of 
20m/sec for the first two groups and 0 pause time for all. 
Node movement is generated using the setdest command 
provided by NS-2, following the random waypoint model. 
Every scenario is run 3 times with different random 
movement of nodes, in order to avoid any extremes that 
could compromise the reliability of our results. Final results 
are calculated as the average of the 3 repetitions. Default 
AODV parameters are used for all protocols, as our 
implementations only dealt with the broadcast mechanism 
used. The type of traffic used in our experiments is Constant 
Bit Rate (CBR). The number of connections per scenario 
was kept the same with a value of 50 connections for the first 
and third group of experiments. Packet generation rate is set 
to 1.0 packet per second. Data payload is 512 bytes. 
AODV-ProbA uses 3 different probability thresholds 
depending again on the density of the network locally. 
Values for the probability thresholds used are, 10% for 
counter value of 1, 50% for counter values of 2 and 3 and 
90% for counter values of 4 and higher. Probabilities are set 
following an exponential pattern as described in III.B. The 
algorithm of DP-AODV requires the set of 5 additional 
parameters. They are summarized in the table below: 
P e r c e n t a g e  o f  A d d i t i o n a l  C o v e r a g e  A r e a
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
1
2
3
4
5
6
7
8
9
10
11
12
N umbe r  of  T r a ns mi s s i ons  H e a r d
Fig. 6: Analysis of Redundancy 
263
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

TABLE I.  
DP-AODV PARAMETERS 
Probability Decrease Constant d 
1% 
Probability Increase Constant d1 
2% 
Time interval t 
35msec 
Upper Probability Bound 
90% 
Lower Probability Bound 
10% 
 
The initial probability threshold P is calculated using the 
formula presented is Section II.B. The justification for the 
values of d and d1 is that the authors of DP argue in favor of 
non-drastic changes in the probability. Low values of 1% 
and 2% are chosen respectively. The value of d1 is double the 
value of d in order to reach an equilibrium state. The 
probability P decreases more times in average as in our 
dense scenarios it is more likely for a node to receive the 
broadcast packet more than once during the simulation time. 
For reasons of fairness the time interval t for DP is set to 
35msec. That is the average listening time for AODV-ProbA 
as well.  Upper and lower probability bounds are set to the 
same values for both algorithms. 
The following performance parameters are considered for 
our simulation experiments. It is noted that all metrics are 
concerned with both TCP and AODV traffic. 
Packet Delivery Ratio (PDR) – The percentage of 
successful packet deliveries throughout the simulation time. 
End to End Delay – The amount of time elapsed from the 
time a packet was originated from the source node until the 
time it as successfully delivered to the destination node. 
Throughput – The average rate of successful data 
delivery in the network measured in kbps. 
B. Packet Delivery Ratio 
A mobile node will miss a packet if all of its neighbors 
decide to suppress rebroadcast in case of an AODV packet or 
if there is a collision and the TCP packet never reaches its 
destination. 
Fig. 7 shows the packet delivery ratio for a network 
against node density. All three algorithms perform in a 
similar way for sparse topologies of up to 60 nodes. For 
medium and high node density topologies, AODV-ProbA 
performs better than both AODV and DP-AODv. Fig. 8 
shows the PDR percentage for a network against traffic load. 
Once again, for low traffic density of 20 and 30 connections, 
all algorithms produce the same results. In case of more 
connections, AODV-ProbA and DP-AODV perform better 
than normal AODV, with the latter been slightly 
outperformed. The PDR level of a network when node speed 
is increased is presented in Fig. 9. AODV-ProbA produces 
higher PDR for all average node speeds. Normal AODV 
performs poorly reaching down to 35% of PDR. 
C. End to End Delay 
In general, the metric of end to end delay is found to 
produce very similar trends with the results for PDR or 
reachability. Especially in scenarios with high levels of node 
and traffic load densities, back-off and medium detection 
mechanisms may delay the transmission of packets in 
addition to the high probability of the packet never reaching 
its destination. 
As shown in Fig. 10, when AODV-ProbA is used, a 
packet travels from source to destination with high speed. 
The performance of DP-AODV is average when delay is 
measured and normal AODV produces unacceptable delay 
for medium and high node density networks. Fig. 11 shows 
the end to end delay for a network against traffic load. Both 
DP-AODV and AODV-ProbA perform better than normal 
AODV with the latter producing slightly lower average delay 
for all scenarios. End to end delay against mobility is 
presented in Fig. 12. Normal AODV with simple flooding 
causes delay to be on average 150% higher than the other 
two algorithms. Once again, AODV-ProbA slightly 
outperforms the Dynamic Probabilistic algorithm. 
D. Throughput 
Throughput is an important metric that represents a 
network’s ability to transmit data. It is a very popular metric 
in QoS performance comparison studies in MANETs and is 
defined as the number of bits or kbits transmitted per time 
unit. 
In Fig. 13 we compare the network throughput for 
different node densities. Normal AODV is outperformed for 
medium and high density levels. Despite the fact that 
performance for DP-AODV is slightly higher for sparse and 
average node density networks when compared against 
AODV-ProbA, when the network becomes extremely dense 
Packet Delivery Ratio
20
30
40
50
60
70
80
90
100
20
40
60
80
100
120
140
160
180
200
Number of Nodes
Percentage %
AODV
AODV-ProbA
DP-AODV
Fig. 7: PDR vs Density 
Packet Delivery Ratio
20
30
40
50
60
70
80
90
10
20
30
40
50
Speed m/s
Percentage %
AODV
AODV-ProbA
DP-AODV
Fig. 9: PDR vs Mobility 
Packet Delivery Ratio
20
30
40
50
60
70
80
90
100
20
30
40
50
60
Number of Connections
Percentage %
AODV
AODV-ProbA
DP-AODV
Fig. 8: PDR vs Tr. Load 
264
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

its performance rapidly decreases. The performance of a 
network in terms of throughput when different traffic loads 
are configured is shown in Fig. 14. All algorithms perform 
almost identical for 20, 30 and 40 connections. When the 
number of connections increases, throughput for normal 
AODV begins to decrease sharply. AODV-ProbA performs 
better than DP-AODV for very high traffic loads once again. 
Fig. 15 confirms the superiority of AODV-ProbA for 
scenarios with different node speeds, as it constantly 
produces higher throughput than AODV and DP-AODV. 
V. 
CONCLUSION 
In this paper, a comparison between the effects of two 
probabilistic adaptive schemes, ProbA and DP in AODV 
routing protocol has been presented. Two key differences 
between these two algorithms have been highlighted; the role 
of the listening period as part of the adaptivity mechanism 
and the way this is implemented in addition to the different 
mathematical 
pattern 
followed 
when 
adjusting 
the 
probability threshold. The result of this comparison has led 
us to the fact that ProbA should outperform DP in dense 
networks with highly mobile nodes. The experimental results 
presented in this work have confirmed the superiority of 
ProbA against DP in almost all simulation scenarios used in 
terms of packet delivery ratio, end to end delay, and 
throughput under various network sizes and traffic loads as 
well as different node speeds. 
REFERENCES 
[1] S. Leng, L. Zhang, L. W. Yu, and C. H. Tan, “An efficient broadcast 
relay scheme for MANETs,” Com. Com. 28, 5, pp. 567-476, 2005. 
[2] R. Purtoosi, H. Taheri, A. Mohammadi and F. Foroozan, “Improving 
broadcast performance by traffic isolation in wireless ad hoc 
networks,” Res. Art. Int. J. Com. Syst. 19, 9, pp. 1029-1043, 2006. 
[3] B. Williams, and T. Camp, “Comparison of broadcast techniques for 
mobile ad hoc networks,” In Proceedings of Mobile Ad Hoc 
Networking and Computing, MOBIHOC, pp. 194-205, 2002. 
[4] M. D. Colagrosso, “Intelligent Broadcasting in Mobile Ad Hoc 
Networks: Three Classes of Adaptive Protocols,” In Proceedings of 
EURASIP, pp. 25-25, 2007. 
[5] Y. Tseng, S. Ni, and E. Shih, “Adaptive Approaches to Relieving 
Broadcast Storms in a Wireless Multihop Mobile Ad Hoc Network,” 
In IEEE Transactions on Computers, pp. 545-557, 2003. 
[6] D. Young-Ching, S. Ching-Chi, and L. Ferng-Ching, “An Adaptive 
Medium Access Control Protocol for Reliable Broadcast and Unicast 
in Ad Hoc Networks,” In Proceedings of IEICE – Tran. on Inf. & Sys, 
pp. 527-535, 2006. 
[7] D. Liarokapis and A. Shahrabi, “A probability-based adaptive scheme 
for broadcasting in MANETs,” In Proceedings of the 6th 
international Conference on Mobile Technology, Application & 
Systems, ACM Mobility, Nice, France, 2009. 
[8] Q. Zhang and D. P. Agrawal,  “Dynamic probabilistic broadcasting in 
MANETs,” In J. Par. Distrib. Comput. 65, 2, pp. 220-233, Feb. 2005. 
[9] S. Ni, Y. Tseng, Y. Chen and J. Sheu, “The broadcast storm problem 
in a mobile ad hoc network,” In Proceedings of the 5th Annual 
ACM/IEEE int. Conf. on Mobile Comp. and Networking, MobiCom 
’99, pp. 151-162, Seattle, Washington, United States, 1999. 
Throughput
30
50
70
90
110
130
150
170
20
40
60
80
100
120
140
160
180
200
Number of Nodes
kbps
AODV
AODV-ProbA
DP-AODV
Fig. 13: Throughput vs Density 
Throughput
50
70
90
110
130
150
170
20
30
40
50
60
Number of Connections
kbps
AODV
AODV-ProbA
DP-AODV
Fig. 14: Throughput vs Tr. Load 
Throughput
50
70
90
110
130
150
170
10
20
30
40
50
Speed m/s
kbps
AODV
AODV-ProbA
DP-AODV
Fig. 15: Throughput vs Mobility 
Delay
0
500
1000
1500
2000
2500
3000
10
20
30
40
50
Speed m/s
msec
AODV
AODV-ProbA
DP-AODV
Delay
0
500
1000
1500
2000
2500
3000
3500
20
40
60
80
100
120
140
160
180
200
Number of Nodes
msec
AODV
AODV-ProbA
DP-AODV
Delay
0
500
1000
1500
2000
2500
3000
20
30
40
50
60
Number of Connections
msec
AODV
AODV-ProbA
DP-AODV
Fig. 11: Delay vs Tr. Load 
Fig. 12: Delay vs Mobility 
Fig. 10:  Delay vs Density 
265
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

