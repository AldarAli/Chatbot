Toward a Global File Popularity Estimation in
Unstructured P2P Networks
Manel Seddiki∗, Mahfoud Benchaiba‡
∗,‡ University of Sciences and Technology Houari Boumediene
Computer Science Department, LSI laboratory
Algiers, Algeria
∗ e-mail: sed.manel@gmail.com
‡ e-mail: benchaiba@lsi-usthb.dz
Abstract—In unstructured P2P networks, replicating most
popular ﬁles is one of mechanisms, which improve ﬁle lookup
performances, such as lookup delay and success rate. However,
measuring global ﬁle popularity is a challenging task because
this estimation must consider requests of all peers for this ﬁle
whereas in unstructured P2P networks like Gnutella, the peer has
no global view of the network. Some researches have been done to
measure this parameter. Nevertheless, this estimation is still away
from reality because the peer, which calculates ﬁle popularity,
doesn’t consider ﬁle popularity estimations of the other peers.
In this paper, we try to deﬁne a way to calculate a global ﬁle
popularity based on local estimation of the peer and estimations
done by the other peers participating in the network. Our ﬁrst
simulation results reinforce our theoretical formulas and show
that our measurement is closer to the real one. More details will
be provided and simulation tests will be added in our future
contributions.
Keywords—Unstructured P2P networks, global ﬁle popularity,
ﬁle lookup,request packets, replication.
I.
INTRODUCTION
Peer-to-peer
(or
P2P)
networks
came
to
replace
client/server
systems
and
were
developed
over
Internet
in recent years. The basic idea of P2P is to link users in order
to exchange information without using any intermediate server.
Thus, P2P network is a distributed system of interconnected
peers, which are both clients and servers. The P2P paradigm
was ﬁrstly used for ﬁle-sharing applications such as Napster
[1] and Gnutella [3], which allow users to lookup, share and
download ﬁles.
Napster uses a server which indexes all the information
about peers and their ﬁles. If a peer wants to lookup for
a ﬁle, it sends a request to the server, which connects it
directly with peers storing this ﬁle. The server facilitates the
lookup procedure and improves the lookup latency, but it is
the weakness of the system because if it breaks down, the
whole system stops. Gnutella came after Napster and erased
centralization idea. Indeed, Gnutella works on an unstructured
P2P network architecture, where there is no server and each
peer must know the other peers participating in the P2P
network and their shared content by itself. A peer wishing
to lookup for a shared content, such as a ﬁle, broadcasts its
request to all its neighbors, which do the same with their
neighbors until the ﬁle is found or the Time To Life (TTL)
expires. This technique is denoted as ﬂooding [3]. However,
the ﬂooding main drawback is the high overhead that causes
a scalability issue. Many alternatives to ﬂooding have been
proposed to make ﬁle lookup technique more efﬁcient, such
as using probability based on previous lookup results ([4] and
[5]), using progressive TTL called Expending Ring such as [6]
or using Random walk technique such as [7].
Another way to improve ﬁle lookup performances in P2P
unstructured networks is replication, as presented in [8], [9],
[10], and [11], which consists in the replication of most popular
ﬁles in other peers to ensure their availability, increase lookup
success rate and decrease lookup hops and delay. Performances
of these replication strategies depend on the popularity param-
eter precision. Indeed, the closer is the popularity estimation
from reality, the better is the replication strategy performance.
As a consequence and for our point of view, the ﬁle popularity
measurement in such replication strategies is then crucial to
decide which ﬁles have to be replicated. However, most of
these strategies don’t focus on this measurement and brieﬂy
deﬁne ﬁle popularity calculation based only on local estimation
of the peer. This is maybe due to the fact that in P2P unstruc-
tured architectures, the peer is blind and has no global view
of the network and this makes global popularity estimation a
challenging task. In this paper, we focus completely on this
issue and try to deﬁne the ﬁle popularity notion and four
evident criteria that the ﬁle popularity estimation must respect.
After that, we propose a way to calculate the ﬁle popularity
according to and respecting those creteria. This calculation is
based both on local estimation of the peer and estimations
done by the other peers participating in the network. Indeed,
considering the estimations of the other peers allows having a
global-like estimation of the popularity which is closer to the
reality than the local estimation.
This paper is organized as the following: In Section II,
we introduce some interesting researches which calculate ﬁle
popularity used in variety of contexts, such as content replica-
tion strategies and ﬁle lookup enhancement. In Section III, we
describe our approach in detaills. We begin ﬁrst by describing
the P2P network architecture and environment that we consider
in our approach then, we describe our ﬁle cache structures and
deﬁne the popularity notion according to our point of view.
After that, we explain our ﬁle popularity measurement and
ﬁnally, we discuss some points. In Section IV, we introduce
simulation environnement, describe the different simulation
tests and compare our estimated popularity with the real
popularity. In the end of this paper, we give a brief summary
of this paper’s content and next contributions to ﬁnalize our
77
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-305-6
ICSNC 2013 : The Eighth International Conference on Systems and Networks Communications

work.
II.
RELATED WORK
Despite of the ﬁle popularity importance in the replication
and ﬁle lookup area, there are no consistent investigations in
calculating a global ﬁle popularity, which is close to the real
popularity. However, many replication strategies, such as those
in [8], [9], [10], and [11] proposed some simple popularity
measurments. In [9], the ﬁle popularity measurement is simply
obtained by counting the number of accesses of each ﬁle f as
follows: Peer P2 asks for a ﬁle f from the peer P1 ; P1 is able
to provide ﬁle f or its index; P2 accesses P1 to retrieve ﬁle f
; P1 increments f popularity as follows:
Pf = Pf + 1
(1)
In [8], the Q-replication strategy deﬁnes a popular ﬁle as
a ﬁle which is frequently accessed. Each peer maintains a
table containing the ﬁle name and the ﬁle popularity. The ﬁle
popularity for each ﬁle f is calculated as follows:
Pf(t + 1) = Pf(t) + η Rf(t)
N(t) ∗ 100
(2)
Rf(t) is the number of requests seen by the peer for the
ﬁle f at time t , N(t) is the total number of requests received by
the peer at time t and η is a constant variable. The popularity is
updated according to (2) after a ﬁxed total number of requests
received.
Another way to estimate ﬁle popularity is described in [10].
In this paper, the popularity is deﬁned as the request rate for
a ﬁle f and it is calculated as follows:
Pf = Rf
T
(3)
Rfis the number of requests peer have seen for the ﬁle
f and T is the amount of time the peer has been up. The
popularity is updated each time the peer receives a request for
ﬁle f.
In [11], a dynamic data replication strategy is propsed.
Indeed, to improve grid system performances, authors propose
a dynamic strategy to replicate data in several sites of the
grid considering crash failures in the system. The strategy is
based on 2 parameters: Availibility and popularity of data. The
popularity of the data f is calculated in this paper as follows:
Pf = Rf
N
(4)
Rf(t) is the number of requests demanding f and N is the
total number of all requests.
In our opinion, ﬁle popularity estimation has to respect four
criterions:
•
The popularity value is a rate and must be between 0
and 1.
•
As the popularity depends on external actors (in our
case, ﬁle requests), it must increase when request rate
for this ﬁle is high and decrease when it is low. Let
us take for example an artist-painter: His popularity
depends on its fans (external actors) , it increases when
its fans request highly its paintings and it decreases
when not.
•
Popularity value must be inﬂuenced explicitly or im-
plicitly by time and this criterion is related to the
previous point.
•
Popularity must be based on global knowledge of
requests circulating in the network.
All of [8], [9], [10], and [11] are based only on local
estimations of the peer in popularity measurement. They don’t
acquire a global knowledge about the ﬁle popularity. In [8] and
[9] and according to (1) and (2), the popularity measurement
is cumulative, which means that the value will never decrease.
Moreover, it is not between 0 and 1. In [8] and according
to (1), popularity is not inﬂuenced by time and in [10], the
popularity is deﬁned as the number of requests for the ﬁle f by
time unit. This leads to simply request rate and not popularity
estimation. We conclude that criteria mentionned above are not
all respected by [8], [9], [10], and [11]. In this paper, we try to
consider all those criteria to provide a ﬁle popularity deﬁnition
and calculate its estimation in order to make it close to the real
value.
III.
OUR CONTRIBUTION
In this section, we describe our ﬁle popularity measurment
which is based on both local popularity measurment of the
node and popularity measurement of its neighbors. The idea
is to have a global-like knowledge about the ﬁle by using
neighbors which did the same with their neighbors and so on.
A. P2P network environement
We consider unstructured P2P architecture where peers
index their own ﬁles and have no knowledge about the other
shared ﬁles in the network and their locations at the beginning.
Our ﬁle popularity measurement operates during ﬁle lookup
phase and each peer is supposed to have at minimum, one
neighbor.
B. Files cache
Each peer X participating in the P2P network maintains
2 structures denoted by S1 and S2 as shown in Figure.1. The
ﬁrst structure S1 stores local ﬁles and ﬁles discovered from ﬁle
request packets passed through X. Each entry of S1 contains
information that the peer knows about the ﬁle which, are the
ﬁle key, number of requests passed through X for this ﬁle,
local popularity and global popularity calculated by X. All
explanation about how to calculate local and global popularity
will be given in next section. The second structure S2 stores all
the ﬁles’s popularities of X’s neighbors. S1 and S2 will be used
to extract all necessary information needed in the computation
of ﬁle popularity. S1 is initialized by adding local ﬁles of peer
X with number of requests=0, local popularity=0 and global
popularity=0. New entries in S1 are added when the peer X
discovers new information about a ﬁle in the request packet
passed through it and increment number of request by 1 for
the concerned ﬁle. Moreover, peer X exchanges periodically
its ﬁle list with its neighbors. S2 is initialized and updated
when X receives this list.
78
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-305-6
ICSNC 2013 : The Eighth International Conference on Systems and Networks Communications

Figure. 1: File cache structure
C. File popularity deﬁnition
For the best of our knowledge, a ﬁle is popular if it is highly
requested in the network. Several deﬁnitions of ﬁle popularity
have been disscussed in the related work section. We deﬁne
the ﬁle popularity as the ratio between the number of requests
for the ﬁle f and total number of requests in the entire network
formulated as follows:
P(f, X) = number of requests for the file f
total number of all requests
(5)
The real ﬁle popularity estimation presented in (4) can
be only calculated by a global observer, which has a global
view of the entire P2P network. However, peers have no
global view in unstructured P2P network. Indeed, each peer
is blind and has only local knowledge about the ﬁle. This
local information is not enough to have a real estimation
of ﬁle popularity. Thus, our goal is to ﬁnd a way to bring
global-like information about ﬁles and include it with local
information to have ﬁle popularity estimation closer to the real
estimation. In our approach, peers beneﬁt from the knowledge
of the other participating peers through neighbors. In fact, the
peer calculates ﬁle popularity based on its own knowledge
and knowledge of its neighbors. Knowledge of neighbors is
obtained based on the own knowledge of neighbors and the
one of their neighbors, and so on, as it shown in Figure. 2 . In
this way, all peers cooperate to provide a global view of the
ﬁle in the network and thus, estimate a ﬁle popularity closer
to the real one.
D. File popularity estimation
In this section, we deﬁne our ﬁle popularity measurement.
It is composed of two major steps. The ﬁrst step is the local
popularity estimation, which is based on the local knowledge
of the peer about the ﬁle. Local knowledge is obtained by
exploiting ﬁle request packets passed through the peer. The
second step is global popularity estimation, which is based on
the local popularity estimated in the ﬁrst step and the global
popularity estimated by direct neighbors. At the beginning, the
local and global ﬁle popularities are deﬁned by 0 for each ﬁle
f. Local ﬁle popularity is updated when the peer receives a
request packet form its neighbors and global ﬁle popularity is
updated when the peer receives a ﬁle list from its neighbors.
Figure. 2: Global popularity estimation scheme for peer X
1) Local ﬁle popularity estimation: It consists on calculat-
ing ﬁle popularity based on local knowledge of the peer. The
local popularity of the ﬁle f for the peer X denoted by Pl(f, X)
is deﬁned as the ratio of known requests for the ﬁle f denoted
by Rf to all known requests denoted by R. It is formulated as
follows:
Pl(f, X) = Rf
R
(6)
R and Rf are obtained from structure S1. The local popularity
is updated each time a peer receives a request packet.
2) Global ﬁle popularity estimation: Local popularity es-
timation is not enough to reﬂect the real value. Indeed,
we need to have a global estimation of f’s popularity by
considering both the local estimation formulated in (5) and
global estimations of neighbors. It is calculated as follows:
Pg(f, X) =
(Pl(f, X) + P|V |
j=1 Pg(f, Vj)
(|V | + 1)
(7)
Where |V | is number of neighbors of peer X which, have cal-
culated global popularity of ﬁle f , Pl(f, X) is local popularity
of the ﬁle f for the peer X and Pg(f, Vj) is global popularity
of the ﬁle f for the neighbor Vj such as 1 ≤ j ≤ |V | . |V | and
Pg(f, Vj) are obtained from S2.
E. Discussion
The global popularity is calculated when the peer receives
ﬁle list from its neighbors. This calculation is done in two
ways:
•
The ﬁrst way (which, we consider in this paper) is the
periodic list reception from neighbors. In this case,
the challenge is to select the suitable delay because if
it is too small, the overhead increases in the network
due to high exchange of ﬁle lists and if this delay it is
too large, this may result in imprecision on popularity
estimation and lack of updates concerning ﬁle requests
and peers disconnections.
•
The second way is the on-demand list reception, which
means that if the peer wants to calculate ﬁle popularity
for replication or for other purpose, it requests its
neighbors for the ﬁle list. The advantage on asking
for ﬁle list on-demand is that neighbors send only the
79
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-305-6
ICSNC 2013 : The Eighth International Conference on Systems and Networks Communications

TABLE I: Simulation parameter
Simulation time
1000s
Average neighbors
3
Number of nodes
100
File list delay
40s
Node join and departure
Lifetime churn with lifetime=600s
request load
1 request for random ﬁle per 60s
concerned ﬁle and not all ﬁles and this will decrease
ﬁle list size but the drawback is the time wasted on
waiting for the ﬁle information to be received.
Our popularity estimation is based both on local knowl-
edge of the peer and global-like knowledge acquired through
neighbors as explained in previous sections. This estimation
is bounded by 0 and 1. Moreover, it increases when request
number for the concerned ﬁle is high comparing with the
other requests and decreases when not and time inﬂuences the
estimated value implicitly through those requests. Hence, the
four criterions are respected.
IV.
SIMULATION
In order to compare our ﬁle popularity estimation with
the real popularity value, we implemented our ﬁle popularity
algorithm and a global observer algorithm on OverSim [12]
with Omnet++ [2]. The P2P network is composed of 100 peers,
which may join and leave according to lifeTimeChurn=600s
as shown in table I. Each peer in the network has a random
number of local ﬁles limited to 100 maximum and enriches its
structures S1 and S2 through ﬁle list exchanged between neigh-
bors and request packets passed through the peer. A peer sends
a request for a ﬁle choosen rondomly every 60s. We chose one
ﬁle with key=E88 from the network to observe its popularity
evolution. Our initial results are obtained by comparing our
popularity estimations with the global observer estimations. In
Figure.3, the thick line with square symbols represents real
ﬁle popularity evolution calculated by the global observer and
the other thin lines represent ﬁle popularity estimated by some
peers participating on the network according to our approach.
Thus, Figure.3 shows that all peers estimate popularity values
that match closely with the real popularity calculated by the
global observer. This is due to the cooperation between all
peers in order to allow having to each single peer, a global-
like view of the ﬁle. A best view of this match is represented in
Figure.4 where the general bahaviour of the system represented
with triangle symbols match closely with the global observer
behaviour represented with square symbols. These simulation
results reinforce our theoretical formulas and prove that our
ﬁle popularity estimation is efﬁcient in an unstructured P2P
network.
V.
CONCLUSION
Estimating real ﬁle popularity in unstructured P2P net-
works is a hard task because peers are blind and have no
global view of the network resources. In our point of view,
calculating ﬁle popularity value, which is close to reality must
respect four criterions : It must be bounded by 0 and 1; it must
increase and decrease according to external actors; it must be
inﬂuenced by time implicitly or explicitly; it must be based
on a global-like knowledge about the concerned ﬁle. Several
Figure. 3: Real popularity vs estimated popularity of ﬁle E88
Figure. 4: Real popularity vs estimated popularity of ﬁle E88
researches proposed to measure the ﬁle popularity, but not all
the four criteria were considered.
In this paper, we deﬁne ﬁle popularity and we propose
a measurement for it respecting the four criteria. Our ﬁrst
simulation results reinforce our theoretical formulas and show
that our measurement matches closely with the real one. These
initial results prompt us to investigate more about this rate.
More details will be provided and simulation tests will be
added, such as the impact of the search rate on the popularity
deviation in our future contributions.
REFERENCES
[1]
(1999)
Napster.
[retrieved:march
,
2013].
[Online].
Available:
http://www.napster.co.uk.
[2]
(2002)
Napster.
[retrieved:april
,
2013].
[Online].
Available:
http://www.omnetpp.org.
[3]
M. Ripeanu and I. Foster, ”Mapping the gnutella network, Internet
Computing,” IEEE, vol. 6, 2002, pp. 5057.
[4]
R. Gaeta and M.Sereno, ”Generalized probabilistic ﬂooding in unstruc-
tured peer-to-peer networks, Parallel and Distributed Systems,” IEEE
Transactions, vol. 22, December. 2011, pp. 2055 2062.
[5]
S. Margariti, ”A novel probabilistic ﬂooding strategy for unstructured
peer-to-peer networks, 15th Panhellenic Conference, ” September. 2011,
pp. 149153.
[6]
Q. Lv, P. Cao, E. Cohen, K. Li and S. Shenker, ”Search and replication
in unstructured peer-to-peer networks, Proceedings of the International
Conference on Supercomputing,” June 2002, pp.22-26.
[7]
C. Gkantsidis and A. Saberi, ”Random walks in peer-to-peer networks,
Proc. of IEEE INFO-COM,” vol. 1, March. 2004, pp. 130140.
[8]
SM.Thampi and K. Sekaran, ”Review of replication schemes for unstruc-
tured P2P networks,”’ arXiv preprint arXiv:0903.1734, no. March. 2009,
pp. 67.
[9]
S. Mohammadi, H. Pedram, and A. Farrokhian, ”An enhanced data
replication method in p2p systems, Journal Of Computing,” vol. 2,
November 2010, pp. 7882 .
[10]
J. Kangasharju, W. Ross, and D. Turner, ”Optimal content replication
in p2p communities, Manuscript” 2002.
80
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-305-6
ICSNC 2013 : The Eighth International Conference on Systems and Networks Communications

[11]
B. Meroufel and G. Belalem, ”Dynamic replication based on avail-
ability and popularity in the presence of failures, Journal of Information
Processing Systems,” Vol.8. June. 2012, pp. 263278.
[12]
I. Baumgart and S. Krause, ”Oversim: A ﬂexible overlay network
simulation framework, 2007 IEEE Global Internet Symposium,” May.
2007, pp. 7984.
81
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-305-6
ICSNC 2013 : The Eighth International Conference on Systems and Networks Communications

