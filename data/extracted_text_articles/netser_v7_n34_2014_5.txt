173
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Energy Based Analytical Modelling of ANCH
Clustering Algorithm for Wireless Sensor Networks
Morteza M. Zanjireh, Hadi Larijani, and Wasiu O. Popoola
School of Engineering and Built Environment
Glasgow Caledonian University
Glasgow, UK
{Morteza.Zanjireh, H.Larijani, Wasiu.Popoola}@gcu.ac.uk
Abstract—Wireless Sensor Networks (WSNs) have had re-
markable advances in the past couple of decades due to their fast
growth and ﬂexibility. In order to supervise an area, hundreds
or thousands of sensors can be established and collaborate with
each other in the environment. The sensors’ sensed and collected
data can be delivered to the base station. Energy optimisation
is crucial in WSN’s efﬁciency. Organising sensor nodes into
small clusters helps save their initial energy and thus increases
their lifetime. Also, the number and distribution of Cluster
Heads (CHs) are fundamental for energy saving and ﬂexibility of
clustering methods. Avoid Near Cluster Heads (ANCH) is one of
the most recent energy-efﬁcient clustering algorithms proposed
for WSNs in order to extend their lifetime by uniform distributing
of CHs through the network area. In this manuscript, we suggest
an analytical approach to model the energy consumption of the
ANCH algorithm. The results of our comprehensive research
show a 95.4% to 98.6% accuracy in energy consumption estima-
tion using the proposed analytical model under different practical
situations. The suggested analytical model gives a number of
indications concerning the impact of different factors on the
energy depletion pattern of the ANCH clustering algorithm.
Keywords—Wireless Sensor Networks, ANCH, Energy Efﬁ-
ciency, Clustering, Analytical Model.
I. INTRODUCTION
A Wireless Sensor Network (WSN) is a network of tiny
and on-board battery operated sensors with limited power
of processing and radio data transmission. They can collect
and send their sensed data to a base station to monitor a
remote area and perhaps to send the collected data to a remote
centre. WSNs can be employed in different applications, be-
cause of their low-cost and adaptable nature, including health-
care, emergency response, weather forecasting, commercial,
smart trafﬁcs, surveillance and volcanic earthquakes [1]–[6].
Moreover, WSNs can be used in an ad-hoc manner and in
harsh environments in which a human presence is hard or
impossible [7], [8].
Energy efﬁciency is essential for WSN lifetimes because
there is usually no opportunity for battery replacement or
recharging. Therefore, developing energy-efﬁcient algorithms
is of high importance in WSNs. A large amount of research
has been conducted over the past few years to optimise the
energy consumption in this area [9]–[12].
Clustering is a widely accepted approach for organising a
high number of sensors spread over a large area in an ad-
hoc manner [13]. This is useful when we consider that in
most cases, neighbouring sensors sense similar data. If each
sensor directly sends its data to the base station using long-
distance transmission, its energy drains quickly. Moreover,
this might also lead to some other issues, such as trafﬁc
congestion and data collision. In clustering, all sensors are
grouped into a number of clusters and in each cluster, one
sensor is elected as the Cluster Head (CH). Transmitting data
in each cluster from each sensor to its CH is accomplished
using short-distance radio transmission, whereas transmitting
data from CHs to the base station is carried out using long-
distance radio transmission. In addition, CHs can combine and
aggregate similar transmitted data to reduce the length of the
messages passed. In this way, CHs consume more energy than
other sensors and, therefore, periodic CH election across the
network is a suitable approach to balance energy consumption
among sensor nodes [14].
The appropriate number and size of the clusters is essential
for increasing the network lifetime. For a low number of
clusters, a large amount of the energy is consumed to send data
from Cluster Members (CMs) to CHs. On the other hand, if
the number of clusters is high, a large number of the CHs
will be elected and consequently a large number of nodes
will operate using long-distance transmission to communicate
with the base station. Therefore, a trade-off should be made
between these two factors to optimise energy consumption
across the network [15].
Over the past few years, a number of clustering algorithms
have been proposed. Hence, it is critical that when proposing
a new algorithm, we specify its scope and evaluate it with
accurate modelling of the underlying organisation and commu-
nication mechanisms. Clearly, after using such models, a com-
prehensive understanding of the factors that affect the potential
performance of a network emerges and this makes it easier
to evaluate different algorithms and select the best one for
practical implementations. Employing physical experiments is
impractical for a large number of conﬁgurations and running a
network simulator for a large number of conﬁgurations takes
an unacceptable amount of time. Analytical modelling, in
contrast, offers a cost-effective and versatile tool that can help
to assess the merits of an algorithm [16], [17].
Avoid Near Cluster Heads (ANCH) is a new energy efﬁcient
clustering algorithm proposed recently for WSNs to prolong

174
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
network lifetimes by uniformly distributing the CHs [12].
In this manuscript, an analytical model for predicting the
energy consumption of ANCH is proposed. The model details
the factors affecting and analyses energy consumption under
various operational conditions. The accuracy of the proposed
model is evaluated using simulation.
The remainder of this manuscript is organised as follows.
In Section II, related work is discussed. The ANCH clustering
algorithm is brieﬂy presented in Section
III. The proposed
analytical model of ANCH and its validation are presented in
Section IV and Section V, respectively. Finally, Section VI
contains our concluding remarks and future work.
II. RELATED WORK
Over the past few years, a number of clustering algorithms
for WSNs have been proposed such as Low Energy Adaptive
Clustering Hierarchy (LEACH) [9], Hybrid Energy-Efﬁcient
Distributed (HEED) [18], Low Energy Adaptive Clustering
Hierarchy with Sliding Window and Dynamic Number of
Nodes (LEACH-SWDN) [19], ANCH [12], and Activity-
aware ANCH (A-ANCH) [20]. One of the most popular
clustering algorithms for WSNs is LEACH. LEACH is popular
not only for its simplicity, but also for the idea of rotating CHs
to efﬁciently balance energy consumption among nodes [9].
The lifetime of the LEACH is divided into a number of rounds
in which every round includes a set-up and a steady phase. In
set-up phase, clusters are organised, while in steady phase,
sensed data are transferred from sensors to CHs. Election of
CHs is carried out in a distributed manner and independent
from each other. CHs collect sensed data from sensors and
aggregate and forward them to the base station in each round.
To decide whether to become a CH, each sensor chooses a
random number x, which is a number between 0 and 1, in
each round. A sensor decides to be a CH in a round if its
generated random number is less than the threshold below [9]:
T (n) =
(
p
1−p(r mod 1
p)
if n ∈ G
0
otherwise
(1)
where n is the number of each sensor in the network, r is the
current interval’s round number, p is a predeﬁned percentage
of CHs in each round, 1
p is called the interval, and G is the
set of sensors which have not yet been CHs in the current
interval. An example of CHs and CMs formed after a set-up
phase in a round according to the LEACH algorithm is shown
in Figure 1.
In LEACH, p percent of sensors are elected as CHs on
average in each round and also each sensor is elected as a
CH only once in an interval. The probability of each node
becoming a CH is p in the ﬁrst round. This probability is
p/(1 − p) and p/(1 − 2p) for the second and third rounds and
ﬁnally this probability reaches 1 for the last round. Thus all
of the remaining sensors will be CHs in the last round. Each
sensor that has decided to be a CH in a round, advertises itself
Fig. 1: An example of CHs and CMs arrangement in the
LEACH algorithm. CHs are shown by red diamonds and CMs
are shown by black circles.
to all of the other sensors throughout the network. Using the
received signal’s strength, all non-CH sensors can ﬁnd the
closest CH to themselves and join that cluster as a CM.
A centralised version of LEACH, called LEACH-C, is
proposed by the authors of LEACH, Heinzelman et al. [21],
in which each sensor knows its position in the network and
consequently the number and position of CHs are selected
in an optimum manner per round. It has been demonstrated
that LEACH-C shows up to 40% greater performance than
LEACH. Another centralised version of LEACH is Base sta-
tion Controlled Dynamic Clustering Protocol (BCDCP), which
was proposed by Muruganathan et al. [22]. BCDCP uses
multi-level clustering so that each CH serves an approximately
equal number of sensors. In the BCDCP algorithm all CMs
send their sensed data to their CHs and CHs conduct a CH-
to-CH multi-hop routing to deliver their data to a higher
level CH, which is selected randomly. Finally, only one CH
communicates directly with the base station. It has been shown
that BCDCP in this way outperforms LEACH and LEACH-C.
Two distributed variations of LEACH have been proposed
by Nam et al. [23] and Handy et al. [24]. In the ﬁrst algorithm,
a number of messages are exchanged between sensors to
ﬁnd out their position across the network. Thus, more equal
clusters are shaped by choosing appropriate CH positions.
They compared their algorithm with LEACH and LEACH-C
and their experiments showed that their algorithm outperforms
LEACH but not LEACH-C, which is a centralised algorithm.
On the other hand, Handy et al. [24] believe that a stochastic
CH election might not lead to an efﬁcient energy consumption
model in a network. Therefore, they involved the sensor’s
residual energy when computing the threshold T(n) as an
effective parameter in deciding whether or not to stand as
a CH. Their experiments showed that their algorithm can
prolong network lifetime by up to 30%.
Heterogeneity of sensors energy in the network has been

175
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
treated by Smaragdakis et al. [25]. They proposed the Stable
Election Protocol (SEP) algorithm, in which a number of
sensors are equipped with more energy than others to prolong
the stable time of the network, which is when all the network’s
sensors are alive. SEP is a distributed algorithm and sensors
are not aware of other sensors’ residual energy. Their exper-
iments showed that SEP can increase the stable time of the
network and this increment depends on the percentage and the
initial energy levels of the network’s powerful sensors.
Two centralised fuzzy algorithms for WSNs have been
proposed by Gupta et al. [26] and Ran et al. [27]. They
assumed that each sensor knows its position in the network
and sends its local information to the base station. Appropriate
sensors are then elected by the base station to act as CHs. In
both algorithms, three parameters are used as the algorithm
input. In [26] these parameters are
sensor residual energy,
sensor density, and sensor centrality in the clusters whereas
in [27] the sensor centrality is replaced by distance of sensors
from the base station. The performance evaluations of both
studies showed the superiority of their algorithms over the
LEACH clustering algorithm.
Wireless Sensor Network Clustering with Artiﬁcial Bee
Colony (WSNCABC) has been proposed by Karaboga et
al. [28]. In WSNCABC each sensor calculates its distance
from other sensors using message transferring advertisement
and sends this information to the base station. The base station
then selects CHs using an Artiﬁcial Bee Colony algorithm and
broadcasts them back to the network. Finally, each sensor joins
the closest elected CH. Their performance study showed that
the proposed algorithm considerably outperforms the LEACH
clustering algorithm, by up to 70% in some scenarios, when
the base station is very close to the edge of the network.
However, as there is a large amount of communication between
sensors and the base station in the set-up phase, WSNCABC
appears to be inefﬁcient when the base station is located far
away from the network area.
HEED [18] is a distributed clustering algorithm for WSNs
which takes into account sensors residual energy and commu-
nication cost during CH election. In HEED, the transmission
power of every node is set to a constant value and each sensor
considers other nodes as its neighbouring nodes if they are
within its transmission range. Moreover, two neighbouring
sensors, which are within the transmission range of each other,
are not elected as CHs simultaneously, trying to uniformly
distribute CHs across the network. In order to ﬁnd its CH,
each sensor launches an iterative procedure in each round. A
node nominates itself as a CH if it has either no neighbouring
node or has not received a CH advertisement.
ANCH also, similar to HEED, takes the advantage of
uniform distribution of CHs in order to achieve optimised,
or close to, network energy consumption. Nevertheless, it
has a few key advantages over HEED. Firstly, the set-up
phase overhead of ANCH is much less than that of HEED
because HEED executes a procedure to ﬁnd neighbouring
sensors. Also, in this phase, each sensor in HEED executes
a complicated iteration including some message passing to
select its CH. Secondly, by the end of each iteration in HEED,
a node elects itself as a CH if no other CH advertisement has
been received. Thus, in many rounds, the number of formed
clusters is much more than that of the ANCH algorithm where
all sensors receive CH advertisement if there exists at least
one CH in the network. Finally, ANCH and LEACH are two
scalable algorithms both with processing time and message
exchange complexity of O(1) and O(N), respectively [29].
Whereas, HEED has O(N) complexity for both processing time
and message exchange complexity [30], [31].
In order to design an energy efﬁcient algorithm for WSNs,
it is important to make a trade-off between different param-
eters involved in a speciﬁc application to ensure that the
optimum conﬁguration has been applied to maximise the
network lifetime. In particular, it is quite critical to balance
the energy costs of individual nodes in order to obtain the
best overall network energy cost. Simulation study of the
effects of different parameters on the performance of a network
under various network circumstances is difﬁcult because of
the time consuming feature of these kinds of tools. Analytical
modelling, in contrast, is beneﬁcial as it offers a cost-effective
tool to estimate the network energy consumption accurately
within an acceptable amount of time. Therefore, in addition
to the research on proposing efﬁcient algorithms for WSNs,
a number of studies have also been conducted to develop
analytical models [15]–[17], [21], [32].
The ﬁrst analytical model for the LEACH algorithm has
been proposed by Heinzelman et al. [21]. In this study, it
has been shown that the energy consumption in a network is
proportional to the square of transmission distance in clusters.
This can be obtained for each sensor using the following
expression:
E

d2
toCH

= ρ
Z 2π
θ=0
Z
M
√
πk
r=0
r3drdθ = M 2
2kπ
(2)
where E

d2
toCH

is the expected square distance of sensors
from their CH, ρ =
k
M 2 and is called sensors’ density, k is the
number of clusters, and M is one side of the network area.
However, some non-realistic assumptions have been made
when developing the model; the area of all clusters are disc-
shaped with radius r, all clusters are assumed to be formed
equally, and also the area of the network is covered by these
k non-overlapping clusters.
In [33], Bandyopadhyay and Coyle have proposed a mathe-
matical model for hierarchical clustering algorithms for WSNs.
They assumed that the sensors are very simple and all sensors
transmit at a ﬁxed power level. Their model analytically
suggests the number of CHs at each level of clustering. They
conducted a set of experiments to show the optimum number
of CHs in different levels of hierarchy in dense networks, with
up to 25,000 nodes. Nevertheless, their proposed model is not
general enough due to a number of unrealistic assumptions on
the ﬁxed power level transmitting ability of nodes.
In [15], Islam et al. have argued that a complete analytical
model to ﬁnd the best conﬁguration on LEACH is beneﬁcial to

176
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
prolong network lifetimes. They therefore proposed a complete
mathematical model for LEACH to ﬁnd the optimum number
of CHs. Their experiments showed the reasonable accuracy
of their model against original LEACH in order to compute
the optimal number of CHs. Although, their model takes into
account all steps of the LEACH algorithm, it does not show
a considerable advantage over the model presented in [21].
The issues raised in [21] have been addressed in another
model proposed by Choi et al. [34]. This model can estimate
the energy consumption and determine the optimal number of
clusters to minimise the energy spent in the network for the
LEACH algorithm. In this research, it has been shown that
the energy consumption in a network is proportional to the
summation of square of transmission distance in clusters. This
can be obtained for each cluster using the following equation:
E


X
node∈cluster(j))
d2
toCH

 =
2πλCM
Z ∞
0
r3exp(−λCHπr2)dr
(3)
where E
hP
node∈cluster(j)) d2
toCH
i
is the expected sum of the
square distance of sensors from their CH, λCM is the density
of the CMs in the network area and is given by N−k
M 2 , λCH
is the density of the CHs in the network area and is given by
k
M 2 , N is the number of nodes, k is the number of clusters,
and M is one side of network area.
Using a simulation software, their experiments showed
that their model has over 80% accuracy with the LEACH
algorithm and is considerably superior to [21].
Details of the ANCH algorithm are described in the next
section.
III. THE ANCH CLUSTERING ALGORITHM
The proper position of CHs is essential in the energy
efﬁciency of clustering algorithms. This has been neglected in
the LEACH algorithm and consequently there might be some
CHs which are located too close or too far from each other.
In either case, some waste of energy might occurred for data
transferring from sensors to the base station.
To overcome this, the ANCH algorithm tries to uniformly
distribute CHs across the network as much as possible. To
do so, a parameter d is deﬁned as the closeness depending
on the region size and also network density. If two CHs are
found too close to each other in a particular round, closer
than d, one of them should stand as the CH. Thus once the
ﬁrst CH is selected following normal LEACH procedure, the
next potential CH checks its distance from the ﬁrst CH before
advertising itself to other sensors as a CH. If the distance is
less than d, it cancels its decision to be a new CH in the current
round and remains a CH candidate for the future rounds. The
same procedure is applied for all of other potential CHs in the
current round.
This action is applied and can be considered as the ﬁrst
attempt to shape clusters with about the equal size. Figure 2
demonstrates an example of CH selection according to the
ﬁrst step of the ANCH algorithm.
Fig. 2: An example of CHs and CMs in ﬁrst step of ANCH
algorithm. CHs are shown by red diamonds and CMs are
shown by black circles.
Also, at the end of each interval, the number of the CHs
is most likely more than the optimum amount. Thus, the
number of clusters probably increase and more CHs have to
send their packets to the base station by using long-distance
communication. Figure 3 demonstrates an example of CHs
and CMs at the end of each interval.
Fig. 3: An example of CHs and CMs at the end of each interval
in the ANCH algorithm. CHs are shown by red diamonds and
CMs are shown by black circles.
Since all sensors have to be a CH in an interval, all of the

177
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
remaining sensors will be elected as CHs in the last round
regardless of their closeness to each other.
A further improvement in ANCH is also obtained by con-
sidering the optimum number of CHs in the network. Imagine
p is the optimum percentage of CHs among all sensors. So far
in the ANCH algorithm, apart from the intervals’ last rounds,
the number of selected CHs in each round is most likely less
than p percent. This is because a number of potential CHs
might cancel their decision of being a CH due to their close
position to other CHs. Therefore, the number of clusters would
be less than the optimum number suggested in the LEACH
algorithm. This leads to the bigger cluster size and more
energy consumption over the intra-cluster transmission.
On the other hand, in the last rounds of intervals, the
percentage of CHs would be much more than the optimum
number p. Consequently, the number of clusters might increase
and more CHs have to send their data to the base station
directly using long-distance transmission. This issue is ad-
dressed in the ANCH algorithm by increasing the threshold
T(n) and consequently increasing the number of potential
CHs in each round. As a result, in every round more than
p percent of sensors will be nominated as CHs, on average,
to become closer to the optimum value, p, after dropping a
number of them because of the closeness issue. After setting
the new threshold, close to p percent of sensors are eventually
selected as the CHs in every round which are more uniformly
distributed compared with LEACH. The new threshold, T ′(n),
in ANCH is deﬁned as follows:
T ′(n) = T(n) + (1 − T(n)) × a.
(4)
T(n) is the threshold value of the LEACH algorithm [9] and
a, the add-on coefﬁcient, is a constant, whose value depends
on the network conﬁguration and also on the closeness value,
d. This value plays an essential role in the ANCH algorithm’s
efﬁciency.
The ANCH algorithm signiﬁcantly improves network en-
ergy consumption and, consequently, prolongs the network
lifetime compared with the LEACH algorithm. An example
of the positions of CHs and CMs in ANCH is shown in
Figure 4. Comparing this arrangement with the one presented
in Figure 1 reveals more uniform distribution of CHs in the
ANCH algorithm.
The analytical model of the ANCH clustering algorithm is
proposed in the next section.
IV. ANCH ANALYTICAL MODELLING
In this section, our proposed analytical model for the energy
consumption in the ANCH clustering algorithm is presented.
Using the model, a comprehensive understanding of the factors
affecting the performance of a network emerges. Since a
clustering approach is employed in the ANCH algorithm, the
total network energy consumption can be derived when the
energy consumed by one cluster is calculated.
Fig. 4: An example of CHs and CMs arrangement in the
ANCH algorithm. CHs are shown by red diamonds and CMs
are shown by black circles.
Let us assume that N sensor nodes are randomly distributed
in a M × M area and the number of clusters, on average, is
k during the lifetime of the network. As a result, there are N
k
sensors, on average, per cluster with ( N
k ) − 1 sensors as CMs
and also one node as the CH.
The energy required for a CM to send its data to a CH can
be calculated using the following expression [9]:
ECM = lEelec + lϵampd2
toCH
(5)
Also, for all nodes in a cluster, this energy can be calculated
as follows:
ECluster = lEelec(k − 1)
+lϵampE
"
X
nodes∈Cluster
d2
toCH
#
(6)
where l is the length of messages, Eelec is the transmission
electronics, ϵamp is the transmission ampliﬁer, dtoCH is the
distance between a CM and its CH, and E
P d2
toCH

is the
expected sum of square distance of CMs from their CH. Except
for E
P d2
toCH

, all other parameters in (6) are known with
constant values. Therefore, by calculating E
P d2
toCH

we
are able to calculate all the energy spent in the network.
E
P d2
toCH

can be calculated using the following expres-
sion for LEACH [34]:
E


X
node∈cluster(j)
d2
toCH

 = 2πλCM×
Z ∞
0
r3.P {(r, j) ∈ cluster(j)} dr
(7)
where λCM represents the density of the CMs in the network
and is given by N−k
M 2 . P {(r, j) ∈ cluster(j)} is the proba-

178
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
bility of a sensor node becoming a member of cluster j. The
distance between the node and the head of cluster j is also
represented by r. According to [35], P {(r, j) ∈ cluster(j)}
can be derived from the palm distribution as follows:
P {(r, j) ∈ cluster(j)} = exp

−λCHπr2	
(8)
where λCH represents the density of the CHs in the network
and is given by
k
M 2 . In ANCH, the distance between any two
CHs is not less than d. Each cluster area is divided into two
different parts, which are treated separately in our model. The
ﬁrst part is the circular area with the radius of d/2 from the
CH. All sensors in this area securely belong to that cluster.
The second area covers those sensors whose distance from
the current CH is more than d/2. For the ﬁrst part, (7) with
the probability P {(r, j) ∈ cluster(j)} = 1 can be used. Thus,
the expected sum of the square distance of CMs, located in
the ﬁrst part of the cluster area, from their CH can be obtained
using the following expression:
E


X
node∈cluster(j)
d2
toCH

 = 2πλCM
Z d/2
0
r3dr
(9)
On the other hand, all sensors whose distance from
other CHs is less than d/2 are secure members of other
CHs and are not members of the current CH. Thus,
P {(r, j) ∈ cluster(j)} = 0 for those nodes. Consequently,
the value of (7) for those nodes is 0. To calculate the second
part of the cluster area, we must subtract the cluster areas
whose nodes’ distance from a CH is less than d/2.
The second part of each cluster area can be calculated by
E


X
node∈cluster(j)
d2
toCH

 =
2πλCM
Z ∞
R1
r3.P {(r, j) ∈ cluster(j)} dr
(10)
In the above expression, R1 can be calculated as follows:
πR2
1 = kπ(d
2)2 ⇒ R1 = (d
2)
√
k
(11)
Using (9) and (10), the ﬁrst and second parts of each cluster
area can be merged. Thus, the expected sum of the square of
each CM from its CH can be obtained from the following
expression:
E


X
node∈cluster(j)
d2
toCH

 = 2πλCM.
"Z d/2
0
r3dr +
Z ∞
( d
2)∗
√
k
r3.exp

−λCHπr2	
dr
#
(12)
Also we know that
Z
d
2
0
r3dr =
d4
64

(13)
and we can imagine
u = λCH.π
(14)
The expression (10) can be simpliﬁed to the following
expression:
Z ∞
( d
2 )∗
√
k
r3.exp{−ur2}dr = 2πλCM.

e− d2ku
4
d2k
8u +
1
2u2

(15)
Consequently, expression (12) can be simpliﬁed to the
following expression:
E


X
node∈cluster(j)
d2
toCH

 = 2πλCM.
d4
64 + e− d2ku
4
d2k
8u +
1
2u2

(16)
Fig. 5: An example of the ﬁrst and second parts of cluster
areas deﬁned in the analytical model for ANCH.
The
ﬁrst
and
second
parts
of
the
network
areas
can
be
shown
in
Figure
5.
In
this
ﬁgure,
the
inner
circle
shows
the
ﬁrst
part
of
each
cluster
in
which
P {(r, j) ∈ cluster(j)}
=
1.
The
area
between
inner
and outer circles demonstrates the ﬁrst part of the other
clusters in which P {(r, j) ∈ cluster(j)} = 0. The area
beyond the outer circle shows the second part of the current
cluster in which P {(r, j) ∈ cluster(j)} = exp

−λCHπr2	
.
The accuracy of the proposed analytical model for ANCH
is evaluated in the next section.

179
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
V. MODEL VALIDATION
The accuracy of the described analytical model has been
veriﬁed by comparing it with simulation results. Extensive
validation experiments have been performed for several com-
binations of cluster size, network dimension, different values
of closeness, density of sensors in the network, and the number
of messages which are sent from CMs to their CHs during the
steady phase, called MNumbers. In order to select parameter a,
different values including a = 0.02, 0.05, 0.15, 0.25, ..., 0.75
have been considered and the most effective value has been
selected. Each simulation scenario is run for 100 different
randomly generated topologies and the average results are pre-
sented. In our experiments, the sensors’ inner computational
procedures do not consume energy: all of their energy is used
for message passing only. The energy model in all of our
experiments is precisely the same as the one employed in [9].
As in the ﬁrst experiment, the effects of varying the
number of clusters on the accuracy of our proposed model is
compared against the results obtained from simulation. The
network area is considered to be 50×50 square metres when
the base station is 100 metres away from the network’s edge.
Moreover, d = 15 metres and the initial energy of each node
is 10 J. Finally, the number of clusters in this experiment
varies from 4 to 15 clusters. The results are presented in
Figures 6 and 7. In these ﬁgures, the horizontal axis shows
the number of clusters where the vertical axis represents the
total consumed energy. Figure 6 shows the accuracy of our
model for three different networks with different numbers of
nodes, N = 50, 100, and 200, when MNumber is considered
to be 25. Also, Figure 7 shows the accuracy of our model
for three different MNumbers, MNumber = 25, 50, and 100
messages per round, when the number of nodes is N = 100.
96.3% accuracy in Figure 6 and 97.1% in Figure 7 show that
the simulation results closely match those predicted by the
analytical model.
In the second experiment, we aim at observing the impact
of network size on our analytical model. Different network
dimensions from 10 to 100 metres are examined while the
value of d is 30% of one dimension. Moreover, the initial
energy of each node is 10 J and the number of clusters, k,
is 5. These are depicted in Figures 8 and 9, highlighting that
the proposed model on average presents an accuracy of 95.4%
and 98.6%, respectively. Figure 8 shows the accuracy of our
model for three different networks with different numbers of
nodes, N = 50, 100, and 200, when MNumber is considered
to be 25. Also, Figure 9 shows the accuracy of our model
for three different MNumbers, MNumber = 25, 50, and 100
messages per round, when the number of nodes is N = 100.
In the third experiment, we aim at observing the impact of
the closeness parameter, d, on our analytical model. Different
closeness values from 5 to 25 metres are examined where
the network area is considered to be 50×50 square metres
and the base station is 100 metres away from the network’s
edge. Moreover, the initial energy of each node is 10 J and
Fig. 6: Accuracy of the model comparing against simulation
results varying the number of clusters for three networks with
different numbers of nodes, N = 50, 100, and 200.
Fig. 7: Accuracy of the model comparing against simulation
results for three values of MNumber, MNumber = 25, 50, and
100 messages per round.
the number of clusters is 5. This is depicted in Figures 10
and 11, highlighting very close agreement between the model
and the simulation in these ﬁgures, with 95.8% and 95.6%
similarity on average. Figure 10 demonstrates the accuracy of
the proposed model for three different networks with different
numbers of nodes, N = 50, 100, and 200, when MNumber
is considered to be 25. Also, Figure 11 shows the accuracy
of our model for three different MNumbers, MNumber = 25,
50, and 100 messages per round, when the number of nodes
is N = 100.
In the fourth experiment, we aim at observing the impact of
network density on our analytical model. In this experiment,
different numbers of sensors, from 40 to 500, are examined.

180
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fig. 8: Accuracy of the model comparing against simulation
results varying the network dimension for three networks with
different numbers of nodes, N = 50, 100, and 200.
Fig. 9: Accuracy of the model comparing against simulation
results for three values of MNumber, MNumber = 25, 50, and
100 messages per round.
Moreover, the network area is 50×50 square metres when the
base station is 100 metres away from the network’s edge, d
= 15 metres, the initial energy of each node is 10 J, and the
number of clusters is 5. The results are presented in Figure 12
for three different conﬁgurations, MNumber = 25, 50, and 100.
These results show a close agreement, an accuracy of
95.4% on average, between the proposed model and simulation
results.
Finally, in the last experiment, we aim at observing the
impact of steady phase duration on our analytical model by
varying the number of MNumbers from 5 to 1000 messages
per round. The network area is 50×50 square metres when
the base station is 100 metres away from the network’s edge,
Fig. 10: Accuracy of the model comparing against simulation
results varying parameter d for three networks with different
numbers of nodes, N = 50, 100, and 200.
Fig. 11: Accuracy of the model comparing against simulation
results for three values of MNumber, MNumber = 25, 50, and
100 messages per round.
d = 15 metres, the initial energy of each node is 10 J, and the
number of clusters is 5. In Figure 13, the comparison of the
model and the simulation results for three different networks
with N = 50, 100, and 200 nodes are presented, achieving
95.6% accuracy on average.
Overall, our extensive validation study shows the credible
accuracy of our proposed analytical model in predicting the
total energy spent by the ANCH algorithm.
Using the proposed model, a number of factors have been
revealed. First, the energy consumed by the ANCH algorithm
is almost insensitive to the optimum number of clusters,
k, proposed by the LEACH algorithm. This is due to the
important role of the add-on coefﬁcient, a, in balancing the

181
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fig. 12: Accuracy of the model comparing against simulation
results for three values of MNumber, MNumber = 25, 50, and
100 messages per round.
Fig. 13: Accuracy of the model comparing against simulation
results for three networks with different numbers of nodes, N
= 50, 100, and 200.
energy consumption of each cluster. By increasing the value
of k, the optimum value of a is also increased to protect
the network from forming a large number of clusters with
smaller numbers of nodes in each cluster and hence to avoid
wasting energy. Concomitantly, the optimum value of a is also
decreased to block the negative effects of smaller numbers of
clusters.
In the same way, the energy consumed by the ANCH
algorithm is almost insensitive to the closeness parameter. This
is again due to the balancing role of the add-on coefﬁcient,
a. By increasing the value of the closeness parameter, the
optimum value of a is also increased to increase the number
of potential CHs, avoiding smaller numbers of clusters. It
also prevents the formation of large numbers of clusters when
the closeness value is decreased.
VI. CONCLUSIONS AND FUTURE WORK
Energy efﬁciency is essential in the design of practical
WSNs. One of the most recent suggested distributed energy-
efﬁcient algorithms for them is the ANCH algorithm. ANCH
extends the network lifetime by uniform distributing CHs
throughout the network environment. In this manuscript, an
analytical model for ANCH has been presented which demon-
strates the impact of different factors in ANCH energy con-
sumption and which can estimates its energy consumption in
different situations. Our comprehensive research has shown a
95.4% to 98.6% accuracy in energy consumption estimation
using the suggested analytical model compared to simulations.
Also, the suggested analytical model has shown that the
energy depletion of the ANCH algorithm is unresponsive to
the closeness parameter and the number of clusters due to
the adjusting role of the add-on coefﬁcient in optimising the
total energy depletion of clusters. In our future work, we are
going to adapt the ANCH algorithm and its analytical model
for mobile sensors and evaluate them using other simulation
softwares.
REFERENCES
[1] M. M. Zanjireh, H. Larijani, W. O. Popoola, and A. Shahrabi, “An-
alytical Modelling of ANCH Clustering Algorithm for WSNs,” in 13
International Conference on Networks (ICN), (Nice, France), pp. 68–
73, IARIA, February 2014.
[2] I. F. Akyildiz, S. Weilian, Y. Sankarasubramaniam, and E. Cayirci, “A
Survey on Sensor Networks,” IEEE Communications Magazine, vol. 40,
no. 8, pp. 102–114, 2002.
[3] C. Jong-Moon, N. Yeonghun, l. P. Kyucheo, and J. C. Hyoung, “Ex-
ploration time reduction and sustainability enhancement of cooperative
clustered multiple robot sensor networks,” IEEE Network, vol. 26, no. 3,
pp. 41–48, 2012.
[4] G. Liu, R. Tan, R. Zhou, G. Xing, W. Z. Song, and J. M. Lees,
“Volcanic Earthquake Timing Using Wireless Sensor Networks,” in 12th
ACM/IEEE Conference on Information Processing in Sensor Networks
(IPSN), pp. 91–102, ACM, 2013.
[5] C. Perera, A. Zaslavsky, P. Christen, and D. Georgakopoulos, “Sensing
as a Service Model for Smart Cities Supported by Internet of Things,”
Transactions on Emerging Telecommunications Technologies, vol. 25,
no. 1, pp. 81–93, 2014.
[6] M. M. Zanjireh, A. Kargarnejad, and M. Tayebi, “Virtual Enterprise
Security: Importance, Challenges, and Solutions,” WSEAS Transactions
on Information Science and Applications, vol. 4, no. 4, pp. 879–884,
2007.
[7] K. Sohrabi, J. Gao, V. Ailawadhi, and G. J. Pottie, “Protocols for Self-
Organization of a Wireless Sensor Network,” IEEE Personal Communi-
cations, vol. 7, no. 5, pp. 16–27, 2000.
[8] C. Tselikis, S. Mitropoulos, N. Komninos, and C. Douligeris, “Degree-
Based Clustering Algorithms for Wireless Ad Hoc Networks Under
Attack,” IEEE Communications Letters, vol. 16, no. 5, pp. 619–621,
2012.
[9] W. R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, “Energy-
Efﬁcient Communication Protocol for Wireless Microsensor Networks,”
in 33rd Annual Hawaii International Conference on System Sciences,
2000.
[10] S. Selvakennedy and S. Sinnappan, “An energy-efﬁcient clustering
algorithm for multihop data gathering in wireless sensor networks,”
Journal of Computers, vol. 1, no. 1, pp. 40–47, 2006.
[11] A. Maizate and N. El Kamoun, “Efﬁcient Survivable Self-Organization
for Prolonged Lifetime in Wireless Sensor Networks,” International
Journal of Computer Applications, vol. 58, no. 16, pp. 31–36, 2012.

182
International Journal on Advances in Networks and Services, vol 7 no 3 & 4, year 2014, http://www.iariajournals.org/networks_and_services/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[12] M. M. Zanjireh, A. Shahrabi, and H. Larijani, “ANCH: A New Clus-
tering Algorithm for Wireless Sensor Networks,” in 27th International
Conference on Advanced Information Networking and Applications
Workshops (WAINA), pp. 450–455, IEEE, 2013.
[13] I. Baidari, H. B. Walikar, and S. Shinde, “Clustering Wireless Sensor
and Wireless Ad Hoc Networks using Dominating Tree Concepts,”
International Journal of Computer Applications, vol. 58, pp. 6–9,
November 2012.
[14] P. Kumarawadu, D. J. Dechene, M. Luccini, and A. Sauer, “Algorithms
for Node Clustering in Wireless Sensor Networks: A Survey,” in 4th
International Conference on Information and Automation For Sustain-
ability (ICIAFS), pp. 295–300, 2008.
[15] A. Al Islam, C. S. Hyder, H. Kabir, and M. Naznin, “Finding the Optimal
Percentage of Cluster Heads from a New and Complete Mathematical
Model on LEACH,” Wireless Sensor Network, vol. 2, no. 2, pp. 129–140,
2010.
[16] L. S. Bai, R. P. Dick, P. H. Chou, and P. A. Dinda, “Automated
Construction of Fast and Accurate System-Level Models For Wireless
Sensor Networks,” in Design, Automation Test in Europe Conference
Exhibition (DATE), pp. 1–6, 2011.
[17] I. Beretta, F. Rincon, N. Khaled, P. R. Grassi, V. Rana, and D. Atienza,
“Design Exploration of Energy-Performance Trade-Offs for Wireless
Sensor Networks,” in 49th ACM/EDAC/IEEE Design Automation Con-
ference (DAC), pp. 1043–1048, 2012.
[18] O. Younis and S. Fahmy, “HEED: A Hybrid, Energy-Efﬁcient, Dis-
tributed Clustering Approach for Ad Hoc Sensor Networks,” IEEE
Transactions on Mobile Computing, vol. 3, no. 4, pp. 366–379, 2004.
[19] A. Wang, D. Yang, and D. Sun, “A clustering algorithm based on energy
information and cluster heads expectation for wireless sensor networks,”
Computers & Electrical Engineering, vol. 38, no. 3, pp. 662–671, 2012.
[20] M. M. Zanjireh, H. Larijani, and W. O. Popoola, “Activity-aware
Clustering Algorithm for Wireless Sensor Networks,” in 9th IEEE/IET
International Symposium on Communication Systems, Networks, and
Digital Signal Procesing (CSNDSP), (Manchester, UK), pp. 132–137,
July 2014.
[21] W. B. Heinzelman, A. P. Chandrakasan, and H. Balakrishnan, “An
Application-Speciﬁc Protocol Architecture for Wireless Microsensor
Networks,” IEEE Transactions on Wireless Communications, vol. 1,
no. 4, pp. 660–670, 2002.
[22] S. D. Muruganathan, D. C. F. Ma, R. I. Bhasin, and A. Fapojuwo,
“A Centralized Energy-Efﬁcient Routing Protocol for Wireless Sensor
Networks,” IEEE Communications Magazine, vol. 43, no. 3, pp. 8–13,
2005.
[23] N. Choon-Sung, J. Hee-Jin, and S. Dong-Ryeol, “The Adaptive Cluster
Head Selection in Wireless Sensor Networks,” in IEEE International
Workshop on Semantic Computing and Applications (IWSCA), pp. 147–
149, 2008.
[24] M. J. Handy, M. Haase, and D. Timmermann, “Low Energy Adaptive
Clustering Hierarchy with Deterministic Cluster-Head Selection,” in
4th International Workshop on Mobile and Wireless Communications
Network, pp. 368–372, 2002.
[25] G. Smaragdakis, I. Matta, and A. Bestavros, “SEP: A Stable Election
Protocol for clustered heterogeneous wireless sensor networks,” tech.
rep., Boston University Computer Science Department, 2004.
[26] I. Gupta, D. Riordan, and S. Sampalli, “Cluster-head Election using
Fuzzy Logic for Wireless Sensor Networks,” in 3rd Annual Research
Conference on Communication Networks and Services, pp. 255–260,
2005.
[27] G. Ran, H. Zhang, and S. Gong, “Improving on LEACH Protocol of
Wireless Sensor Networks Using Fuzzy Logic,” Journal of Information
& Computational Science, vol. 7, no. 3, pp. 767–775, 2010.
[28] D. Karaboga, S. Okdem, and C. Ozturk, “Cluster based wireless sensor
network routing using artiﬁcial bee colony algorithm,” Wireless Net-
works, vol. 18, no. 7, pp. 847–860, 2012.
[29] A. A. Aziz, Y. A. Sekercioglu, P. Fitzpatrick, and M. Ivanovich, “A
Survey on Distributed Topology Control Techniques for Extending
the Lifetime of Battery Powered Wireless Sensor Networks,” IEEE
Communications Surveys Tutorials, vol. 15, no. 1, pp. 121–144, 2013.
[30] L. Chengfa, Y. Mao, C. Guihai, and W. Jie, “An Energy-Efﬁcient
Unequal Clustering Mechanism for Wireless Sensor Networks,” in IEEE
International Conference on Mobile Adhoc and Sensor Systems, pp. 598–
604, 2005.
[31] Z. Qi, R. H. Jacobsen, and T. S. Toftegaard, “Bio-inspired Low-
Complexity Clustering in Large-Scale Dense Wireless Sensor Net-
works,” in IEEE Global Communications Conference (GLOBECOM),
December 2012.
[32] J. Gupchup, A. S. Terzis, R. Burns, and A. Szalay, “Model-based event
detection in wireless sensor networks,” arXiv preprint arXiv:0901.3923,
2009.
[33] S. Bandyopadhyay and E. J. Coyle, “An Energy Efﬁcient Hierarchical
Clustering Aalgorithm for Wireless Sensor Networks,” in 22nd Annual
Joint Conference of the IEEE Computer and Communications (INFO-
COM), pp. 1713–1723, 2003.
[34] C. Jin-Chul and L. Chae-Woo, “Energy Modeling for the Cluster-Based
Sensor Networks,” in 6th IEEE International Conference on Computer
and Information Technology (CIT), pp. 218–223, 2006.
[35] S. Foss and S. A. Zuyev, On a certain segment process with Voronoi
clustering. France: Institut national de recherche en informatique et en
automatique, 1993.

