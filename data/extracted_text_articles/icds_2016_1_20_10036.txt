Name-Based Dynamic Routing in Ad-Hoc Networks
Hayato Suzuki, Noriko Matsumoto, Norihiko Yoshida
Graduate School of Science and Engineering
Saitama University
Saitama, Japan
Emails: {suzuki, noriko, yoshida}@ss.ics.saitama-u.ac.jp
Abstract—The ad-hoc network technology is an indispensable
infrastructure for the digital society, and an IP-based routing
scheme for ad-hoc networks is important to integrate with
the Internet. Ad-hoc networks can work in the same routing
scheme as the Internet using AutoIP and mDNS. However, they
cause excessive power consumption and delay before establishing
communication. In order to address these issues, we propose a
new method of name-based dynamic routing based on Intentional
Naming System (INS) and InterPlanetary Network (IPN.) In this
paper, we show that our routing scheme is feasible through some
simulation experiments.
Keywords—ad-hoc networks; routing; naming
I.
INTRODUCTION
Wireless mobile communication devices, such as laptops
or smartphones, are increasingly used in every day commu-
nication. Recently, ad-hoc networks, which are composed of
such devices, called nodes, have attracted increased attention
[1]. In ad-hoc networks, communication between nodes is
realized by multihop message forwarding, so that it does
not require any infrastructure such as base stations or access
points. For this reason, ad-hoc communication is used in
various ﬁelds. The most important feature of ad-hoc networks
is their dynamic topology. Most nodes have mobility and a
possibility of disconnection because of their battery shortage,
so the network topology changes continuously. Therefore, ad-
hoc networks have problems in routing schemes and power
consumption.
Ad-hoc networks can work in the same routing scheme
as the Internet using AutoIP and multicast DNS (mDNS) [2].
AutoIP assigns an IP address to a node automatically, and
mDNS realizes name resolution without Domain Name System
(DNS). Using AutoIP, each node obtains an IP address when
joining the ad-hoc network. Using mDNS, when each node
communicates with each other, it requests name resolution to
all nodes in the network as follows:
1)
A node sends a request packet containing a name to
be resolved to all the other nodes in the network.
2)
The destination node sends back its IP address to the
requesting node, when it receives the packet whose
name matches its own.
3)
The requesting node communicates with the destina-
tion node using the IP address obtained in 2.
However, this method causes some problems:
•
Increase of trafﬁc in the network,
•
Delay before establishing communication,
•
Excessive power consumption.
These problems are caused by the routing scheme that many
packets are exchanged among the requesting node and the
other nodes.
In order to address these issues, we propose a new scheme,
name-based dynamic routing. Our proposal applies Intentional
Naming System (INS), which was proposed for the Internet,
and realizes routing without resolving a name of a node to its
IP address. Additionally, in order to realize the dynamically
adaptive routing corresponding to the change of network
topology, we use the step-by-step routing scheme proposed
in InterPlanetary Network (IPN). It does not require any
name resolution. Our proposal aims at realizing reduction of
trafﬁc load and suppression of power consumption, as well as
avoidance of delay before establishing communication.
Over time, there have been various naming schemes pro-
posed for Wireless Sensor Networks (WSNs,) Delay Tolerant
Networks (DTNs,) and so on. For example, Amoretti et al.
[3] proposed a method based on tree-structured networks for
WSNs. Bovet et al. [4] proposed a name resolution method
for networks in smart buildings. Schildt et al. [5] proposed a
name-based routing method based on Chord [6] for DTNs. Our
routing scheme focuses on small ad-hoc networks, and this is
a preliminary study to realize a routing scheme which replaces
AutoIP and mDNS in a dynamic manner.
We built a simulator which makes virtual ad-hoc networks
on a single computer, and we veriﬁed the effectiveness of
our proposal through some experiments. The results conﬁrmed
that our name-based dynamic routing could work on ad-hoc
networks, and our routing scheme reduced power consumption
and delay.
This paper is organized as follows: we summarize some
related works in Section 2. In Section 3, we describe our pro-
posed method. Subsequently, we evaluate our method through
some simulation experiments in Section 4. Finally, Section 5
contains some concluding remarks and future work.
II.
RELATED WORK
In this section, we summarize some related works: INS and
the routing scheme in IPN.
A. INS
INS is a resource discovery and service location system
for dynamic and mobile networks of devices and computers
[7]. Communication between nodes in INS is realized using a
name of service without performing name resolution.
INS realizes routing without name resolution by intro-
ducing nodes called Intentional Name Resolvers (INRs) in a
7
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

: INR
: Service node
Service name
Name of a relay node
Service/Camera
host_A
Service name
Name of a relay node
Service/Camera
INR_A
: Sending a name of service
INR_B
INR_A
host_A
Service/Camera
Service/Camera
: Routing table
Figure 1. Registration of service.
network. INRs manage a routing table in which the following
contents are kept.
•
The name of service (called service name)
•
The name of a relay node
In this manner, INS realizes suppression of trafﬁc on a network
and reduction of delay before establishing communication.
This is because there is no need of resolving names by
communicating with name resolution nodes such as DNS.
INS is implemented in two processes called registration of
service and searching of service. The registration of service
means that INRs update their routing tables, and the searching
of service means that any nodes searches a node which
provides service.
Here we describe registration of service. The following
operation is repeatedly performed (Figure 1).
1)
Any node which provides service (called a service
node) sends a service name to a near INR.
2)
Upon receiving the above message, the INR writes
the service name and a name of a relay node in its
routing table.
3)
The INR transfers the name information to neighbor-
ing INRs.
In this manner, the INRs manage routing information for
reaching any node which provides service.
Next, we describe searching of service. Communicating
between a requesting node and a service node is realized by
the request node simply sending a service name to any INR.
Searching of service has a variety of features, as follows, that
are different from the ones for the Internet.
•
No node must convert a name of a destination node
to an IP address.
•
Relay nodes do not tell location information of the
service node to the requesting node.
In this manner, INS eliminates the use of IP addresses.
B. Routing scheme in IPN
IPN aimed at implementing reliable communication be-
tween a node on a planet and a node on another planet
through satellites. The issue was that it takes an enormous
amount of time to perform communication, and the destination
node often moves elsewhere during communication. Moreover,
TABLE I. Example of a routing table managed by each node.
Name of a destination node
Name of a relay node
Earth, host A
host A
Earth, host B
host B
Mars
host C
delay before establishing communication causes communica-
tion failure. Therefore, a step-by-step routing scheme using
a hierarchical naming was introduced in order to address the
issue [8].
A hierarchical name is assigned to each node and the name
is a combination of two names as follows.
•
Region : the name of a range in which node exists.
•
Region-speciﬁc-part : the name which has been given
to a node from the beginning.
For example, the name “Earth, host A” is assigned to the node
if the node has the name “host A” and is placed on the Earth.
Now we describe the step-by-step routing scheme. Each
node has a routing table as shown in Table I. First, a node
sends a request packet toward a destination node. When a relay
node receives the packet, the node checks the region of the
destination node. On this step, there can be two scenarios: one
is the case in which the region of the destination node is the
same as the region where the requesting node is placed, and
the other is the case in which the region of the destination
node is different from the region where the requesting node is
placed.
1) The ﬁrst case: The node checks the region-speciﬁc-part
of the destination node, and sends the packet to a relay node.
2) The second case: The node checks only the region of
the destination node and sends the packet to a relay node. If
the packet reaches the region where the destination node is
placed, the node that received the packet checks the region-
speciﬁc-part of the destination node, and sends the packet to
a relay node.
In this way, each node sends a packet to a relay node closer
to a destination node gradually. The routing scheme in IPN
overcomes failures in the communication in an ever-changing
and unreliable network.
III.
PROPOSED METHOD
As described in Section I, this study introduces INS-based
name-based dynamic routing, and also IPN-based step-by-step
name-based routing to ad-hoc networks. More speciﬁcally, we
perform registration of service and searching of service similar
to INS, and step-by-step routing similar to IPN. This is to
handle dynamic changes of a network topology and to improve
communication availability.
However, it is difﬁcult to apply the INS scheme to ad-hoc
networks as they are. Most nodes in ad-hoc networks have
mobility, so it is difﬁcult to arrange stable nodes to behave as
INRs. Therefore, it is necessary to select nodes to manage a
routing table in place of INRs. Moreover, it is necessary to
conﬁgure regions on a network and each node must belong to
any region. Below is our proposal to address the above two
issues.
8
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

: CH
: ON
: SCH
cluster
SC
Figure 2. Example of a SC and a cluster.
TABLE II. Example of a routing table managed by each CH.
Name of a destination node
Name of a relay node
SC A/Cluster A/host A
host A
SC A/Cluster A/host B
host B
SC A/Cluster B
host C
SC B
host D
A. Selection of nodes which manage a routing table in place
of INRs
We conﬁgure clusters and super-clusters (SCs), which are
aggregations of some clusters shown in Figure 2. Cluster-
Heads (CHs) and SC-Heads (SCHs) manage routing tables
respectively: a CH is a representative of a cluster, and an SCH
is a representative of an SC. Routing information as below is
written in a routing table. Example of a routing table is shown
in Table II.
1)
Information on a relay node to reach another cluster
or another SC
2)
Information on a relay node to reach another node
belonging to the same cluster
B. Setting of regions
The name of each region is the name of a cluster or an
SC. The name of each node is concatenation of “the name of
its SC, the name of its cluster, and the name of itself”.
C. Participation in a region
Participation of each node except for SCHs in any regions
is realized with the following procedure (Figure 3).
: CH
: ON
Cluster_A
: Sending a packet
(1)
(2)
(3)
: Routing table
Destination node
Relay node
Cluster_A, host_A
Cluster_A, host_B
host_A
host_B
Figure 3. Participation in a region and creation of a routing table.
1)
A node sends a packet to neighboring nodes when
the node joins the network.
2)
When a CH or an SCH receives the packet, it replies
with a packet to the request node and updates its
routing table.
3)
The requesting node joins the region when the node
receives the reply packet, and the node is named
based on the name of the region where the node joins.
D. Searching a node
When a node communicates with a destination node, the
node sends a packet called query packet to its CH or SCH.
The CH or SCH which receives the query packet checks its
routing table and transfers the packet to a relay node.
Something to be investigated is that the difference of con-
tents in the routing tables affects the searching cost. Therefore,
we consider four candidates based on the difference of contents
and compare the four. After the comparative experiments, we
will recommend one approach which achieves the best result.
E. Four candidates
We describe contents written in the routing table in detail,
and four method candidates searching a node.
1) First approach: This is the simplest approach which
does not consider congestion. This approach is designed so
that routing information in the table is minimal.
In particular, SCHs manage two pieces of routing informa-
tion: one is information on a relay node to reach each cluster
in the same SC, and the other is information on a relay node to
reach other SCs. CHs manage routing information on a relay
node to reach a SCH of the SC it belongs. Nodes except for
the CHs and SCHs, which are called ordinary nodes (ONs,)
: CH
: Request node
: Destination node
: ON
: Sending a packet
: SCH
Figure 4. A communication path in the ﬁrst approach.
Require: ON, CH, SCH, DEST
while DEST does not receive the packet do
if ON receives the packet then
ON sends the packet to CH or SCH
else if CH receives the packet then
if DEST belongs to the CH’s cluster then
CH sends the packet to DEST
else
CH sends the packet to the relay node to reach SCH
end if
else if SCH receives the packet then
SCH sends the packet to the relay node to reach DEST
end if
end while
Figure 5. Pseudo code of the ﬁrst approach
9
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

have routing information to reach the CH of the cluster they
belong.
In this approach, searching a node is performed as shown
in Figure 4 and 5. Communication between SCs or clusters is
realized via SCHs.
2) Second approach: This is an approach which aims at
suppressing congestion of the network, although it increases
load of the CHs. The amount of routing information in the table
is larger than the one in the ﬁrst approach. In particular, the
CHs manage routing information on a relay node to reach each
cluster in its SC in addition to the CHs’ in the ﬁrst approach.
In this approach, searching a node is performed as shown in
Figure 6 and 7. Communication between clusters in the same
SC is realized without the SCHs.
3) Third approach: This is an approach which aims an
suppressing congestion of the network by removing distinction
between SCHs and CHs. In particular, CHs manage routing
information on a relay node to reach each SC in addition to
: CH
: Request node
: Destination node
: ON
: Sending a packet
: SCH
Figure 6. A communication path in the second approach.
Require: ON, CH, SCH, DEST
while DEST does not receive the packet do
if ON receives the packet then
ON sends the packet to CH or SCH
else if CH receives the packet then
if DEST belongs to the CH’s cluster then
CH sends the packet to DEST
else if DEST and CH belong to same SC then
CH sends the packet to the relay node to reach DEST
else
CH sends the packet to the relay node to reach SCH
end if
else if SCH receives the packet then
SCH sends the packet to the relay node to reach DEST
end if
end while
Figure 7. Pseudo code of the second approach
: CH
: Request node
: Destination node
: ON
: Sending a packet
: SCH
Figure 8. A communication path in the third approach.
Require: ON, CH, SCH, DEST
while DEST does not receive the packet do
if ON receives the packet then
ON sends the packet to CH or SCH
else if CH or SCH receives the packet then
if DEST and the CH (SCH) belong to the same cluster then
CH (SCH) sends the packet to DEST
else
CH (SCH) sends the packet to the relay node to reach
DEST
end if
end if
end while
Figure 9. Pseudo code of the third approach
CHs’ in the second approach. Therefore, routing information
managed by SCHs and CHs are the same.
In this approach, searching a node is performed as shown
in Figure 8 and 9. Communication between SCs is realized
without SCHs.
4) Fourth approach: This is an approach which aims at
suppressing congestion of the network by adding routing
information managed by ONs.
In ad-hoc networks, broadcast communication is performed
when a node communicates to any node. In short, each node
sends a packet to all nodes which exist in its wireless commu-
nication range and all nodes except for a relay node discard the
packet. Therefore, ONs can obtain routing information towards
neighboring ONs by these packets.
In this approach, searching a node is performed as shown
in Figure 10 and 11. Communication between a node and a
: CH
: Request node
: Destination node
: ON
: Sending a packet
: SCH
Figure 10. A communication path in the fourth approach.
Require: ON, CH, SCH, DEST
while DEST does not receive the packet do
if ON receives the packet then
if ON has a routing information to reach DEST then
ON sends the packet to DEST
else
ON sends the packet to CH or SCH
end if
else if CH or SCH receives the packet then
if DEST and the CH (SCH) belong to the same cluster then
CH (SCH) sends the packet to DEST
else
CH (SCH) sends the packet to the relay node to reach
DEST
end if
end if
end while
Figure 11. Pseudo code of the fourth approach
10
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

destination node is realized without the CH.
F. Loop elimination
Our routing scheme takes measures to loop of packets.
Each packet has a unique identiﬁer (ID), and if a node receives
the packet with the same ID twice, the node discards the
second one.
IV.
EVALUATION
We implemented a simulator in Java and built a virtual
ad-hoc network on a single computer. In simulation-based
experiments, we examined and compared the effectiveness of
the four method candidates and mDNS.
•
The average number of packets which each node
processes
•
The average number of hops
•
The success rate of searching
The environment of the simulation is shown in Table III.
In mDNS, the following operation is repeatedly performed.
When the simulator creates 300 query packets, the simulation
is completed.
1)
50 query packets are created, and each packet is given
to a node respectively.
2)
Each node sends the query packet P1 toward a
destination node.
3)
When the destination node receives P1, the node
replies the packet R1 to the request node.
4)
When the request node receives R1, the node sends
a packet P2 to the destination node again.
5)
When the destination node receives P2, the node
replies the packet R2 to the request node.
6)
When all packets on the network are processed, each
node moves elsewhere.
In the proposed method, the following operation is repeat-
edly performed in a single simulation. When the simulator
creates 300 packets, the simulation is completed.
1)
CHs and SCHs are selected at random out of nodes,
and clusters and SCs are formed in the network. (This
operation is performed only once in one simulation.)
2)
50 query packets are created, and each packet is given
to a node respectively.
3)
Each node sends the query packet P1 toward a
destination node.
4)
When the destination node receives P1, the node
replies the packet R1 to the request node.
5)
When all packets on the network are processed, each
node moves elsewhere. (And CHs and SCHs send
control messages to update their routing tables.)
TABLE III. Environment of the simulation
Parameter
Value
Number of nodes
500
Number of query packets
300
Time to live of a query packet
20
Communication range
150
Experimental area
1000*1000
Number of the simulation
10
0
1000
2000
3000
4000
5000
6000
7000
mDNS
First
approach
Second
approach
Third
approach
Fourth
approach
The number of packets
Figure 12. The the average number of packets which each node has
processed.
0
2
4
6
8
10
12
14
16
18
mDNS
First
approach
Second
approach
Third
approach
Fourth
approach
The number of hops
Figure 13. The average number of hops.
A. The average number of packets which each node processes
The result of the experiment is shown in Figure 12. The
proposed approaches, except for the ﬁrst approach, improved
the number of packets compared to mDNS. In the ﬁrst
approach, each node must send a query packet to SCHs
many times. We consider that the number of packets increases
consequently. Therefore, the candidate approaches except for
the ﬁrst one will realize suppression of trafﬁc in the network
and power consumption.
B. The average of number of hops
The result of the experiment is shown in Figure 13. All
the proposed method improved the number of hops compared
to mDNS. In mDNS, each node must send a packet to a
destination node twice. However, in the proposed method, each
node must send a packet to a destination node only once.
We consider that the number of hops decreases consequently.
Therefore, all the proposed method will realize suppression of
delay before establishing communication.
C. The success rate of searching
The success rate of searching is expressed in the following
equation.
The success rate of searching = NUMRP
NUMSP ∗ 100
NUMRP represents the number of nodes which receive a
packet from a destination node, and NUMSP represents the
number of nodes which sent a query packet. The result of
the experiment is shown in Figure 14. The success rate of
searching of the proposed methods is worse than mDNS. We
consider that some clusters may be isolated to each other in
the experiment.
11
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

0
10
20
30
40
50
60
70
80
90
100
mDNS
First
approach
Second
approach
Third
approach
Fourth
approach
The success rate of searching
Figure 14. The success rate of searching.
V.
CONCLUSION AND FUTURE WORK
Ad-hoc networks can use the same routing scheme as
the Internet with such technologies as AutoIP and mDNS.
However, using these technologies will cause delay before
establishing communication and excessive power consumption.
In this study, we aimed at introducing name-based dynamic
routing based INS and IPN in order to address these issues.
The result of the experiment proves that name-based dynamic
routing can be realized on ad-hoc networks. It is also conﬁrmed
that our routing scheme, especially the fourth approach, can
achieve the best result.
Issues to address in further studies are as follows.
1. Reselection of CHs and SCHs
CHs and SCHs consume more power than ONs
because these nodes often become a relay node.
Moreover, in a real world network, CHs or SCHs
may be disconnected from the network due to
movement or failure. Therefore, it is necessary to
add a mechanism to reselect them to the proposed
method.
2. Measures to duplication of a node name
In this study, we assume that each node is as-
signed a unique name. However, the name of any
node may conﬂicte to each other in a real network.
Therefore, it is necessary to take measures on
duplication of the node name.
3. Selection of the routing scheme
In this study, it is revealed that the fourth approach
is better than the other approaches. However, the
size of a routing table managed by each node
in the fourth approach is larger than the other’s.
The fourth approach can not be realized if the
performance of each node on the network is poor.
Therefore, it is necessary to select one of the four
proposed approaches based on the performance of
each node.
4. Application to Content Centric Networking
Recently, a content-oriented architecture has at-
tracted increased attentions for a next-generation
Internet [9]. Especially, Content Centric Network-
ing (CCN) [10], which realizes routing using the
name of contents only, is expected to solve some
problems of the current Internet. We are now
investigating relevance and applicability of our
routing scheme to such architectures.
REFERENCES
[1]
C. K. Toh, “Ad-hoc mobile wireless network —protocol and system—”,
Kyoritsu Publisher, 2003.
[2]
Multicast DNS, http://www.multicastdns.org/, 2016.
[3]
M. Amoretti, O. Alphand, G. Ferrari, F. Rousseau, and A. Duda,
“DINAS: a DIstributed NAming Service for All-IP Wireless Sensor Net-
works”, Proceedings IEEE Wireless Communications and Networking
Conference, 2014, pp. 2781–2786.
[4]
G. Bovet and J. Hennebert, “A Distributed Web-based Naming System for
Smart Buildings”, Proceedings 2014 IEEE 15th International Symposium
on a WoWMoM, 2014, pp. 1–6.
[5]
S. Schildt, W-B. Pottner, O. Ohneiser, and L. Wolf, “NASDI - Naming
and Service Discovery for DTNs in Internet Backbones”, Proceedings
Mobilware 5th International Conference, 2012, pp. 108–121.
[6]
I. Stoica, R. Morris, D. Liben-Nowell, D. R. Karger, M. F. Kaashoek,
F. Dabek, and H. C. Balakrishnan, “Chord: A Scalable Peer-to-peer
Lookup Service for Internet Applications”, Proceedings of the 2001
Conference on Applications, Technologies, Architectures, and Protocols
for Computer Communications, 2001, pp. 149–160.
[7]
W. A. Winoto, E. Schwartz, H. Balakrishnan, and J. Lilley, “The
design and implementation of an intentional naming system”, 17th ACM
Symposium on Operating Systems Principles, 1999, pp. 186–201.
[8]
L. Clare and S. Burleigh, “Endpoint Naming for Space Delay / Disruption
Tolerant Networking”, Aerospace Conference, 2010, pp. 1–10.
[9]
A. A. Barakabitze, T. Xiaoheng, and G. Tan, “A Survey on Naming,
Name Resolution and Data Routing in Information Centric Networking
(ICN)”, International Journal of Advanced Research in Computer and
Communication Engineering, 2014, pp. 8322–8330.
[10]
V. Jacobson, D.K. Smetters, J.D. Thornton, M.F. Plasee, N. Briggs, and
R. Braynard, “Networking named content”, Proceedings of the 5th ACM
Int. Conf. on Emerging Networking Experiments and Technologies, 2009,
pp. 1–12.
12
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-521-0
ICDS 2016 : The Tenth International Conference on Digital Society and eGovernments

