Data Loss in RAID-5 and RAID-6
Storage Systems with Latent Errors
Ilias Iliadis
IBM Research – Zurich
8803 R¨uschlikon, Switzerland
Email: ili@zurich.ibm.com
Abstract—Storage systems employ redundancy and recovering
schemes to protect against device failures and latent sector
errors, as well as to enhance reliability. The effectiveness of
these schemes has been evaluated based on the Mean Time to
Data Loss (MTTDL) and the Expected Annual Fraction of Data
Loss (EAFDL) metrics. The reliability degradation due to device
failures has been assessed in terms of both these metrics, but the
adverse effect of latent errors has been assessed only in terms of
the MTTDL metric. This article addresses the issue of evaluating
the amount of data losses caused by latent errors. It presents a
methodology for obtaining MTTDL and EAFDL of RAID-5 and
RAID-6 systems analytically in the presence of unrecoverable
or latent errors. A theoretical model capturing the effect of
independent latent errors and device failures is developed, and
closed-form expressions are derived for the metrics of interest.
Keywords–Storage; Unrecoverable or latent sector errors; Reli-
ability analysis; MTTDL; EAFDL; RAID; MDS codes; stochastic
modeling.
I.
INTRODUCTION
Today’s large-scale data storage systems use data redun-
dancy schemes to recover data lost due to device and com-
ponent failures as well as to enhance reliability [1]. Erasure
coding schemes are deployed that provide high data reliability
as well as high storage efﬁciency. Special cases of erasure
codes are the replication schemes and the Redundant Arrays
of Inexpensive Disks (RAID) schemes, such as RAID-5 and
RAID-6, which have been deployed extensively in the past
thirty years [2-5]. The effectiveness of these schemes has been
evaluated based on the Mean Time to Data Loss (MTTDL)
[2-11] and, more recently, the Expected Annual Fraction
of Data Loss (EAFDL) reliability metrics [12][13][14]. The
latter metric was introduced because Amazon S3 considers
the durability of data over a given year [15], and, similarly,
Facebook [16], LinkedIn [17] and Yahoo! [18] consider the
amount of lost data in given periods.
The reliability of storage systems is also degraded by the
occurrence of unrecoverable sector errors, that is, errors that
cannot be corrected by the standard sector-associated error-
correcting code (ECC) nor by the re-read mechanism of hard-
disk drives (HDDs). These sector errors are latent because their
existence is only discovered when there is an attempt to access
them. Once an unrecoverable or latent sector error is detected,
it can usually be corrected by the RAID capability. However, if
this is not feasible, these sectors are permanently lost, leading
to an unrecoverable failure. Consequently, unrecoverable errors
do not necessarily lead to unrecoverable failures. The effect of
latent errors is quite pronounced in higher-capacity HDDs and
storage nodes because of the high frequency of these errors
[19-23]. The risk of permanent loss of data rises in the presence
of latent errors.
Analytical reliability expressions for MTTDL that take
into account the effect of latent errors have been obtained
predominately using Markovian models, which assume that
component failure and rebuild times are independent and
exponentially distributed [8][21][22][24]. The effect of latent
errors on MTTDL of erasure-coded storage systems for the
practical case of non-exponential failure and rebuild time
distributions was assessed in [23].
In this article, we consider the effect of latent errors not
only on MTTDL, but also on the amount of lost data for the
case of non-exponential failure and rebuild time distributions.
Clearly, when a data loss occurs, the amount of data lost
due to a device failure is much larger than the amount of
sectors lost due to latent errors. We present a non-Markovian
methodology for deriving the MTTDL and EAFDL metrics
analytically for the case of RAID-5 and RAID-6 systems. We
extend the methodology developed in prior work [12][13] to
assess MTTDL and EAFDL of storage systems in the absence
of latent errors. The validity of this methodology for accurately
assessing the reliability of storage systems was conﬁrmed
by simulations in several contexts [4][9][12][25]. It has been
demonstrated that theoretical predictions of the reliability of
systems comprising highly reliable storage devices are in good
agreement with simulation results. Consequently, the emphasis
of the present work is on theoretically assessing the effect of
latent errors on system reliability. This is the ﬁrst work to study
the effect of latent errors on EAFDL.
The key contributions of this article are the following.
We consider the reliability of RAID storage systems that was
assessed in our earlier work [1] for RAID-5 systems. We now
extend our previous work by considering RAID-6 systems,
which tolerate two device failures. We derive analytically
the MTTDL and EAFDL reliability metrics. We subsequently
establish that, for typical frequencies of sector errors, the
probability of encountering an unrecoverable failure is much
greater than that of encountering a device failure, which
degrades MTTDL, but the EAFDL is practically unaffected
in this range.
The remainder of the article is organized as follows. Sec-
tion II describes the storage system model and the correspond-
ing parameters considered. Section III considers the unrecov-
erable or latent errors and the frequency of their occurrence.
Section IV presents the general framework and methodology
259
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

for deriving the MTTDL and EAFDL metrics analytically for
the case of RAID systems and in the presence of latent errors.
Closed-form expressions for relevant reliability metrics, such
as the probability of data loss and the amount of data loss,
are derived in Sections V and VI for RAID-5 and RAID-6
systems, respectively. Section VII presents numerical results
demonstrating the effectiveness of the RAID-5 and RAID-6
schemes for improving system reliability and the adverse effect
of unrecoverable or latent errors on the probability of data loss
and on the MTTDL and EAFDL reliability metrics. Section
VIII provides a discussion concerning the results obtained.
Finally, we conclude in Section IX.
II.
STORAGE SYSTEM MODEL
The storage system considered here comprises n storage
devices (nodes or disks), where each device stores an amount
c of data such that the total storage capacity of the system is
n c. User data is divided into blocks (or symbols) of a ﬁxed
size s (e.g., sector size of 512 bytes) and complemented with
parity symbols to form codewords.
A. Redundancy
We consider an (m, l) = (N, N − 1) maximum distance
separable (MDS) erasure code, which is a mapping from N −1
user-data symbols to a set of N symbols, called a codeword,
having the property that any subset containing N −1 of the N
symbols of the codeword can be used to decode (reconstruct,
recover) the codeword. A single parity symbol is computed
by using the XOR operation on l = N − 1 user-data symbols
to form a codeword with m = N symbols in total. Such a
scheme can tolerate a single erasure anywhere in the codeword.
The N symbols of each codeword are stored on N distinct
devices. More speciﬁcally, this scheme is used by the popular
RAID-5 system, in which the n devices are arranged in groups
(or arrays) of N devices, one of which is redundant [2][3].
The storage system therefore comprises n/N RAID-5 arrays,
where each array has the ability to tolerate one device failure.
We also consider an (m, l) = (N, N − 2) MDS erasure
code, which is a mapping from N − 2 user-data symbols to
a set of N codeword symbols having the property that any
subset containing N − 2 of the N symbols of the codeword
can be used to decode (reconstruct, recover) the codeword.
A codeword contains l = N − 2 user-data symbols and two
parity symbols for a total of m = N symbols. Such a scheme
can tolerate two erasures anywhere in the codeword. The N
symbols of each codeword are stored on N distinct devices.
More speciﬁcally, this scheme is used by the popular RAID-
6 system, in which the n devices are arranged in groups
(or arrays) of N devices, two of which are redundant [3].
The storage system therefore comprises n/N RAID-6 arrays,
where each array has the ability to tolerate two device failures.
The storage efﬁciency se(RAID) of the system is [11][13]
se(RAID) =
l
m =
 N−1
N
,
for RAID 5
N−2
N
,
for RAID 6
(1)
and the amount of user data U stored in the system is [13]
U = se(RAID) n c = l n c
m
.
(2)
TABLE I.
NOTATION OF SYSTEM PARAMETERS
Parameter
Deﬁnition
n
number of storage devices
c
amount of data stored on each device
l
number of user-data symbols per codeword (l ≥ 1)
m
total number of symbols per codeword (m > l)
(m, l)
MDS-code structure
s
symbol size
N
number of devices in a RAID array (N = m)
b
average reserved rebuild bandwidth per device
R
time required to read (or write) an amount c of data at an average
rate b from (or to) a device
FR(.)
cumulative distribution function of R
Fλ(.)
cumulative distribution function of device lifetimes
Pbit
Probability of an unrecoverable bit error
se(RAID)
storage efﬁciency of RAID redundancy scheme (se(RAID) = l/m)
U
amount of user data stored in the system (U = se(RAID) n c)
C
number of codewords stored in a RAID array (C = c/s)
µ−1
mean time to read (or write) an amount c of data at an average rate
b from (or to) a device (µ−1 = E(R) = c/b)
λ−1
mean time to failure of a storage device
(λ−1 =
R ∞
0 [1 − Fλ(t)]dt)
Ps
Probability of an unrecoverable sector (symbol) error
Figure 1.
Rebuild for a RAID-5 array with N = m = 8 and l = 7.
Also, the number C of symbols in a device or, equivalently,
the number of codewords in a RAID array is
C = c
s .
(3)
Our notation is summarized in Table I. The parameters are
divided according to whether they are independent or derived,
and are listed in the upper and lower part of the table,
respectively.
B. Codeword Reconstruction
When a storage device of an array fails, the C codewords
stored in the array lose one of their symbols. Subsequently, the
system starts to reconstruct the lost codeword symbols using
the surviving symbols of the affected codewords. We assume
that device failures are detected instantaneously, which imme-
diately triggers the rebuild process. A certain proportion of
the device bandwidth is reserved for data recovery during the
rebuild process, where b denotes the actual average reserved
rebuild bandwidth per device. This bandwidth is usually only
a fraction of the total bandwidth available at each device, the
remaining bandwidth being used to serve user requests.
The rebuild process attempts to restore the codewords of
the affected array sequentially. The lost symbols are recon-
structed directly in a spare device as shown in Figure 1.
Decoding and re-encoding of data are assumed to be done
on the ﬂy, so the reconstruction time is equal to the time
taken to read and write the required data to the spare device.
Consequently, the time required to recover the amount c of
260
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

lost data is equal to the time R required to read (or write)
an amount c of data from (or to) a device. In particular, 1/µ
denotes the average time required to read (or write) an amount
c of data from (or to) a device, which is deﬁned by
1
µ ≜ E(R) = c
b .
(4)
C. Failure and Rebuild Time Distributions
We adopt the model and notation considered in [13]. The
lifetimes of the n devices are assumed to be independent and
identically distributed, with a cumulative distribution function
Fλ(.) and a mean of 1/λ. We consider real-world distributions,
such as Weibull and gamma, as well as exponential distribu-
tions that belong to the large class deﬁned in [25]. The storage
devices are characterized as highly reliable in that the ratio of
the mean time 1/µ to read all contents of a device (which
typically is on the order of tens of hours), to the mean time
to failure of a device 1/λ (which is typically on the order of
thousands of hours) is very small, that is,
λ
µ = λ c
b
≪ 1 .
(5)
We consider storage devices whose cumulative distribution
function Fλ satisﬁes the condition
µ
Z ∞
0
Fλ(t)[1 − FR(t)]dt ≪ 1,
with λ
µ ≪ 1 ,
(6)
where FR(.) is the cumulative distribution function of the
rebuild time R. Then the MTTDL and EAFDL reliability
metrics tend to be insensitive to the device failure distribution,
that is, they depend only on its mean 1/λ, but not on its density
Fλ(.) [13].
III.
DATA LOSS DUE TO UNRECOVERABLE ERRORS
The reliability of RAID systems is affected by the oc-
currence of unrecoverable or latent errors. Let Pbit denote
the unrecoverable bit-error probability. According to the spec-
iﬁcations, Pbit is equal to 1×10−15 for SCSI drives and
1×10−14 for SATA drives [8]. Assuming that bit errors occur
independently over successive bits, the unrecoverable sector
(symbol) error probability Ps is
Ps = 1 − (1 − Pbit)s ,
(7)
with s expressed in bits. Assuming a sector size of 512 bytes,
the equivalent unrecoverable sector error probability is Ps ≈
Pbit × 4096, which is 4.096×10−12 in the case of SCSI and
4.096×10−11 in the case of SATA drives. However, empirical
ﬁeld results suggest that the actual values can be orders of
magnitude higher, reaching Ps ≈ 5×10−9 [26].
IV.
DERIVATION OF MTTDL AND EAFDL
The MTTDL metric assesses the expected time until some
data can no longer be recovered and therefore is lost forever,
whereas the EAFDL assesses the fraction of stored data that
is expected to be lost by the system annually. We brieﬂy
review the general methodology for deriving the MTTDL and
EAFDL metrics presented in [12]. This methodology does not
involve Markovian analysis and holds for general failure time
distributions, which can be exponential or non-exponential,
such as the Weibull and gamma distributions that satisfy
condition (6).
At any point in time, the system can be thought to be
in one of two modes: normal or rebuild mode. During normal
mode, all devices are operational and all data in the system has
the original amount of redundancy. Any symbols encountered
with unrecoverable or latent errors are usually corrected by the
RAID capability. However, it may no be possible to recover
multiple unrecoverable errors in a codeword, which therefore
leads to data loss. A transition from normal to rebuild mode
occurs when a device fails; we refer to the device failure that
causes this transition as a ﬁrst device failure. During rebuild
mode, an active rebuild process attempts to restore the lost data
in a spare device, which eventually leads the system either to
a data loss (DL) with probability PDL or back to the original
normal mode by restoring initial redundancy, which occurs
with probability 1 − PDL.
Let T be a typical interval of a fully operational period,
that is, the interval from the time t that the system is brought to
its original state until a subsequent ﬁrst device failure occurs.
For a system comprising n devices with a mean time to failure
of a device 1/λ, the expected duration of T is [12]
E(T) = 1/(n λ) ,
(8)
and MTTDL is
MTTDL ≈ E(T)
PDL
=
1
n λ PDL
.
(9)
The EAFDL is obtained as the ratio of the expected amount
E(Q) of lost user data, normalized to the amount U of user
data, to the expected duration of T [12, Equation (9)]:
EAFDL ≈
E(Q)
E(T) · U
(8)
= n λ E(Q)
U
(2)
= m λ E(Q)
l c
,
(10)
with E(T) and 1/λ expressed in years.
The expected amount E(H) of lost user data, given that
data loss has occurred, is determined by [12, Equation (8)]:
E(H) = E(Q)
PDL
.
(11)
It follows from (9) and (10) that the derivation of the
MTTDL and EAFDL metrics requires the evaluation of PDL
and E(Q), respectively. These quantities are derived using the
direct path approximation [4][25][27], which, under conditions
(5) and (6), accurately assesses the reliability metrics of
interest [11][12][25][28].
V.
RAID-5 SYSTEMS
Here we derive the reliability metrics for a RAID-5 sys-
tem. When a storage device of a RAID-5 array fails, the
C codewords stored in the array lose one of their symbols.
Using the direct-path-approximation methodology, we proceed
by considering only the subsequent potential data losses and
device failures related to the affected array.
261
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE II.
NOTATION OF VARIABLES
Parameter
Deﬁnition
I
number of codeword symbols with unrecoverable errors
L
number of codeword symbols lost
q
probability that a codeword can be restored
PDL
probability of data loss
PUF
probability of unrecoverable failures
S
number of lost symbols
Q
amount of lost user data
H
amount of lost user data, given that data loss has occurred
A. One Device Failure
The rebuild process attempts to restore the C codewords
of the affected array sequentially. Let us consider such a
codeword and let L1 be the number of symbols permanently
lost and I1 be the number of symbols in the codeword
with unrecoverable errors, as listed in Table II, where the
subscript denotes the number of device failures. Owing to
the independence of symbol errors, I1 follows a binomial
distribution with parameter Ps, the probability that a symbol
has a latent (unrecoverable) error. Thus,
P(I1 = i) =
m − 1
i

P i
s(1−Ps)m−1−i, for i = 0, . . . , m−1 ,
(12)
such that
E(I1) =
m−1
X
i=1
i P(I1 = i) = (m − 1) Ps .
(13)
Clearly, the symbol lost due to the device failure can be
corrected by the RAID-5 capability only if the remaining m−1
symbols can be read. Thus, L1 = 0 if and only if I1 = 0. Using
(12), the probability q1 that a codeword can be restored is
q1 = P(L1 = 0) = P(I1 = 0) = (1 − Ps)m−1 ,
(14)
which for very small values of Ps implies that
q1 ≈
(
1 − (m − 1) Ps ,
for Ps ≪
1
m−1
0 ,
for Ps ≫
1
m−1 .
(15)
Note that if a codeword cannot be restored, then at least one
of its l user-data symbols is lost. We now deduce that the
conditional probability PUF|1 of encountering an unrecoverable
failure during the rebuild process of the C codewords given
one device failure is
PUF|1 = 1 − qC
1
(16)
(14)
= 1 − (1 − Ps)(m−1) C .
(17)
Furthermore, such an unrecoverable failure entails the loss of
user data. Let us denote by NUF|1 the number of codewords
that cannot be recovered owing to unrecoverable failures,
referred to hereafter as corrupted codewords. Owing to the
independence of symbol errors, codewords are independently
corrupted. Therefore, NUF|1 is binomially distributed with
parameter 1 − q1, such that
E(NUF|1) = C (1 − q1) .
(18)
Remark 1: For very small values of Ps, it follows from
(17) that
PUF|1 ≈
(
(m − 1) C Ps ,
for Ps ≪ P (2)
s
1 ,
for Ps ≫ P (2)
s
.
(19)
where P (2)
s
is obtained from the approximation (19)
PUF|1 ≈ (m − 1) CP (2)
s
= 1
(20)
as follows:
P (2)
s
≜ 1
C ·
1
m − 1 .
(21)
Note also that from (15) and (18), it follows that
E(NUF|1) ≈ C (m − 1) Ps ,
for Ps ≪
1
m − 1 .
(22)
In particular, for Ps = P (2)
s
, it holds that E(NUF|1) ≈ 1 and
this, combined with the fact that PUF|1 ≈ 1, implies that one
of the C codewords is almost surely corrupted.
The expected number E(NUF|1|NUF|1 ≥ 1) of the number
of corrupted codewords, given that such codewords exist, is
E(NUF|1|NUF|1 ≥ 1) =
E(NUF|1)
P(NUF|1 ≥ 1) = E(NUF|1)
PUF|1
(23)
(19)(22)
≈
(
1 ,
for Ps ≪ P (2)
s
C (m − 1) Ps ,
for P (2)
s
≪ Ps ≪
1
m−1 . (24)
When I1 > 0, the number L1 of lost symbols is I1 + 1.
Consequently, the expected number E(L1) of lost symbols is
E(L1) =
m−1
X
i=1
(i + 1) P(I1 = i) = E(I1) + 1 − P(I1 = 0) ,
(25)
which using (12), (13), and (14) yields
E(L1) = 1−q1 +(m−1)Ps = 1−(1−Ps)m−1 +(m−1)Ps .
(26)
Remark 2: For small values of Ps, it follows from (15)
that
E(L1) ≈ 2 (m − 1) Ps ,
for Ps ≪
1
m − 1 .
(27)
In particular, the expected number E(L1|L1 > 0) of lost
symbols, given that the codeword is corrupted, is
E(L1|L1 > 0) =
E(L1)
P(L1 > 0) =
E(L1)
1 − P(L1 = 0)
(14)
=
E(L1)
1 − q1
(15)(27)
≈
2 ,
for Ps ≪
1
m − 1 .
(28)
A subsequent (second) device failure may occur during
the rebuild process, which is triggered by the initial device
failure. The probability PDF2|R of data loss due to two device
failures, that is, the probability that one of the m−1 remaining
devices in the array fails during the rebuild process, depends
on the duration of the corresponding rebuild time R and the
aggregate failure rate of these m − 1 highly reliable devices,
and is determined as follows [25]:
PDF2|R ≈ (m − 1) λ R .
(29)
In particular, it was shown in [29, Lemma 2] that, for highly
reliable devices satisfying conditions (5) and (6), the fraction
of the rebuild time R still remaining when another device fails
is approximately uniformly distributed between 0 and 1. This
implies that the probability P(j|DF2, R) that the second device
262
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

failure occurs during reconstruction of the jth (1 ≤ j ≤ C)
codeword does not depend on the rebuild duration R and is
P(j|DF2, R) = 1
C ,
for j = 1, 2, . . . , C ,
(30)
such that for large C, we have
E(J) =
C
X
j=1
j P(j|DF2, R) =
C
X
j=1
j 1
C = C + 1
2
≈ C
2 ,
(31)
which implies that when the second failure occurs, on average
half the codewords have already been considered for recon-
struction.
The probability PDF2(j|R) that a device failure occurs
during reconstruction of the jth (1 ≤ j ≤ C) codeword,
and given a rebuild time of R, is equal to the product of
P(j|DF2, R) and PDF2|R, which, using (29) and (30), yields
PDF2(j|R) ≈ (m − 1) λ R
C
,
for j = 1, 2, . . . , C .
(32)
The probability PDF2 of data loss due to two device failures,
that is, the probability of a device failure during the rebuild
process, is obtained by unconditioning (29) on R, that is,
PDF2 = E(PDF2|R) ≈ (m − 1) λ E(R)
(4)
= (m − 1) λ
µ . (33)
Consequently, the probability PDF,1 of one device failure, that
is, the probability of no subsequent device failure during the
rebuild, is
PDF,1 = 1 − PDF2
(33)
≈
1 − (m − 1) λ
µ .
(34)
Similarly, the probability PDF2(j) of a subsequent device
failure during reconstruction of the jth (1 ≤ j ≤ C) codeword
is obtained by unconditioning (32) on R, that is,
PDF2(j) = E(PDF2(j|R)) ≈ (m − 1) λ E(R)
C
(4)
= (m − 1)
C
λ
µ .
(35)
The probability PUF,1 of data loss due to a unrecoverable
failures during rebuild in the case of one device failure is
obtained by unconditioning the probability PUF|1 of unrecov-
erable failure during rebuild given one device failure, that is,
PUF,1 = PUF|1 PDF,1
(34)
=
(1 − PDF2) PUF|1
(36)
(16)(33)
≈

1 − (m − 1) λ
µ

(1 − qC
1 ) ,
(37)
where q1 is determined by (14).
Corollary 1: It holds that
PUF,1 ≈ PUF|1
(16))
=
1 − qC
1 .
(38)
Proof: Immediate from (36) given that, according to (5),
it holds that PDF,1 = 1 − (m − 1) λ/µ ≈ 1 for small values of
λ/µ .
Corollary 2: It holds that
PUF,1 ≈
(
PDF,1 (m − 1) C Ps ,
for Ps ≪ P (2)
s
PDF,1 ,
for Ps ≫ P (2)
s
,
(39)
where PDF,1 and P (2)
s
are given by (34) and (21), respectively.
Proof: Immediate by substituting (19) into (36).
Substituting (17) into (37) yields
PUF,1 ≈

1 − (m − 1) λ
µ
 h
1 − (1 − Ps)(m−1) Ci
.
(40)
We now proceed to assess the amount of data loss. The
expected number E(SU|1) of symbols lost due to unrecoverable
failures during rebuild, given one device failure, is
E(SU|1) = C E(L1) .
(41)
Substituting (26) into (41) yields
E(SU|1) = C [1 − (1 − Ps)m−1 + (m − 1)Ps] .
(42)
Remark 3: For small values of Ps, E(L1) is approximated
by (27). Consequently, it follows from (41) that
E(SU|1) ≈ 2 C (m − 1) Ps ,
for Ps ≪
1
m − 1 .
(43)
The expected number E(SU,1) of symbols lost due to
unrecoverable failures during rebuild in conjunction with one
device failure is obtained by unconditioning the conditional
expected number E(SU|1) of symbols lost due to unrecoverable
failures during rebuild given one device failure, that is,
E(SU,1) = E(SU|1) PDF,1
(34)
=
(1 − PDF2) E(SU|1) .
(44)
Corollary 3: It holds that
E(SU,1) ≈ E(SU|1) = C E(L1)
(45)
(27)
≈ 2 C (m − 1) Ps ,
for Ps ≪
1
m − 1 .
(46)
Proof: Immediate from (44) given that, according to (5),
it holds that PDF,1 = 1 − (m − 1) λ/µ ≈ 1 for small values of
λ/µ, and also using (41).
Substituting (34) and (41) into (44) yields
E(SU,1) = C E(L1)

1 − (m − 1) λ
µ

(47)
(26)
≈ C [1 − (1 − Ps)m−1 + (m − 1)Ps]

1 − (m − 1) λ
µ

.
(48)
B. Two Device Failures
As discussed in Section V-A, a subsequent (second) device
failure may occur during the rebuild process, which is triggered
by the ﬁrst device failure. In particular, such a failure may
occur during reconstruction of the jth (1 ≤ j ≤ C) codeword
with a probability of PDF2(j) determined by (35). This device
failure divides the C codewords into two sets:
S1,j : the set of j − 1 codewords already considered for
reconstruction, and
S2,j : the set of remaining C−j+1 codewords, none of which
can be reconstructed.
Note that the occurrence of the second device failure does
not exclude the possibility of unrecoverable failures being
263
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

encountered prior to its occurrence. More speciﬁcally, the
probability that no unrecoverable failures occur in S1,j is qj−1
1
,
which implies that the probability PUF in S1,j|2 that one or more
unrecoverable failures occur in S1,j is
PUF in S1,j|2 = 1 − qj−1
1
.
(49)
Furthermore, such unrecoverable failures entail loss of user
data. Let us denote by NUF in S1,j|2 the number of such
corrupted codewords. Then it holds that
E(NUF in S1,j|2) = (j − 1) (1 − q1) .
(50)
Also, each of the C − j + 1 codewords in S2,j can no
longer be reconstructed. In particular, the two symbols of
the jth codeword that are stored on the two failed devices
can no longer be recovered and are lost. Furthermore, any of
its remaining m − 2 symbols encountered with unrecoverable
errors will also be lost, leading to unrecoverable failure. Thus,
the probability p2 of not encountering an unrecoverable failure
due to unrecoverable errors in the remaining m − 2 symbols
is
p2 = (1 − Ps)m−2 ,
(51)
which for very small values of Ps implies that
p2 ≈
(
1 − (m − 2) Ps ,
for Ps ≪
1
m−2
0 ,
for Ps ≫
1
m−2 .
(52)
The same applies for the remaining C−j codewords. Therefore
the probability that no unrecoverable failures occur in S2,j is
pC−j+1
2
, which implies that the probability PUF in S2,j|2 that an
unrecoverable failure occurs in S2,j is
PUF in S2,j|2 = 1 − pC−j+1
2
.
(53)
Furthermore, such unrecoverable failures entail the loss of
user data. Let us denote by NUF in S2,j|2 the number of such
corrupted codewords. Then it holds that
E(NUF in S2,j|2) = (C − j + 1) (1 − p2) .
(54)
Also, the probability PUF|2(j) that an unrecoverable failure
occurs, given two device failures, is
PUF|2(j) = 1 − qj−1
1
pC−j+1
2
.
(55)
The second device failure divides the C codewords into
two sets:
S1 : the set of the codewords already considered for recon-
struction when the second device failure occurs, and
S2 : the set of the remaining codewords, none of which can
be reconstructed.
The probability PUF in S1|2 that an unrecoverable failure
occurs in S1 is obtained by unconditioning (49) on j as
follows:
PUF in S1|2 =
C
X
j=1
PUF in S1,j|2P(j|DF2, R)
(30)
≈
C
X
j=1
(1 − qj−1
1
) 1
C = 1 −
1 − qC
1
C (1 − q1) ,
(56)
which does not depend on the rebuild duration.
Corollary 4: It holds that
PUF in S1|2 ≈



(C − 1)(m − 1)
2
Ps ,
for Ps ≪ 2 P (2)
s
1 ,
for Ps ≫ 2 P (2)
s
,
(57)
where P (2)
s
is determined by (21).
Proof: See Appendix A.
Remark 4: For Ps ≪ P (2)
s
, and considering that C is large,
it follows from (19) and (57) that
PUF in S1|2 ≈ 1
2 PUF|1 ,
for Ps ≪ P (2)
s
.
(58)
This is intuitively obvious because, according to (31), when
the second failure occurs, on average half the codewords have
already been considered for reconstruction, that is, E(|S1|) ≈
C/2.
The expected number E(NUF in S1|2) of corrupted code-
words in S1 is obtained by unconditioning (54) on j as follows:
E(NUF in S1|2) =
C
X
j=1
E(NUF in S1,j|2)P(j|DF2, R)
(30)
≈
C
X
j=1
(j − 1)(1 − q1) 1
C = C − 1
2
(1 − q1)
(59)
(15)
≈
C
2 (m − 1) Ps , for Ps ≪
1
m − 1 . (60)
The probability PUF in S2|2 that an unrecoverable failure
occurs in S2 is obtained by unconditioning (53) on j as
follows:
PUF in S2|2 =
C
X
j=1
PUF in S2,j|2P(j|DF2, R)
≈
C
X
j=1
(1 − pC−j+1
2
) 1
C = 1 − p2
C
1 − pC
2
1 − p2
, (61)
which does not depend on the rebuild duration.
Corollary 5: It holds that
PUF in S2|2 ≈



(C + 1)(m − 2)
2
Ps ,
for Ps ≪ P (2)
s∗
1 ,
for Ps ≫ P (2)
s∗ ,
(62)
where P (2)
s∗
= 2/[C (m − 2)]. Note that by virtue of (21), it
holds that P (2)
s∗ = [(m − 1)(m − 2)] 2 P (2)
s
> 2 P (2)
s
.
Proof: See Appendix B.
The probability PUF|2 of data loss due to unrecoverable
failures, given two device failures and a rebuild duration of
R, is obtained by unconditioning (55) on j and using (30) as
264
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

follows:
PUF|2 =
C
X
j=1
PUF|2(j) P(j|DF2, R)
≈
C
X
j=1

1 − qj−1
1
pC−j+1
2
 1
C = 1 − p2
C
pC
2 − qC
1
p2 − q1
,
(63)
which does not depend on the rebuild duration.
Corollary 6: It holds that
PUF|2 ≈



C − 1
2
+ (m − 2) C

Ps ,
for Ps ≪ P (2)
s
1 ,
for Ps ≫ P (2)
s
,
(64)
where P (2)
s
is determined by (21).
Proof: See Appendix C.
The probability PUF,2 of data loss due to unrecoverable
failures in conjunction with two device failures is obtained by
unconditioning (63) via (33) as follows:
PUF,2 = PUF|2 PDF2 ≈

1 − p2
C
pC
2 − qC
1
p2 − q1

(m − 1) λ
µ , (65)
where q1 and p2 are determined by (14) and (51), respectively.
Corollary 7: It holds that
PUF,2 ≈
( C−1
2
+ (m − 2) C

(m − 1) λ
µ Ps , for Ps ≪ P (2)
s
PDF2 ≈ (m − 1) λ
µ ,
for Ps ≫ P (2)
s
,
(66)
where P (2)
s
is determined by (21).
Proof: Immediate by substituting (64) and (33) into (65).
Remark 5: From (39) and (66), it follows that
PUF,1 ≫ PUF,2 ,
(67)
because PUF,2 is of the order O(λ/µ), which by virtue of (5)
is very small, whereas PUF,1 is not.
We now proceed to assess the amount of data loss. As
discussed above, the two symbols of each of the C − j + 1
codewords in S2,j that are stored on the two failed devices can
no longer be recovered and are lost. Thus, the total number
SD(j) of symbols in these C −j +1 codewords that are stored
on the two failed devices and are therefore lost is
SD(j) = 2 (C + 1 − j) .
(68)
Also, the expected total number E(S+
U,2 | DF2 at j) of sym-
bols stored in these C − j + 1 codewords and lost due to
unrecoverable failures is
E(S+
U,2 | DF2 at j) = (C + 1 − j) (m − 2) Ps .
(69)
Furthermore, each of the j − 1 codewords in S1,j loses
an expected number of E(L1) symbols. Consequently, the
expected total number E(S−
U,2 | DF2 at j) of symbols stored in
these j − 1 codewords and lost due to unrecoverable failures
is
E(S−
U,2 | DF2 at j) = (j − 1) E(L1) .
(70)
Unconditioning (68), (69), and (70) on the event of a device
failure during reconstruction of the jth codeword, and using
(35), yields
E(SD) ≈
C
X
j=1
2 (C + 1 − j) (m − 1)
C
λ
µ
(71)
= (C + 1) (m − 1) λ
µ ,
(72)
E(S+
U,2) ≈
C
X
j=1
(C + 1 − j) (m − 2) Ps
(m − 1)
C
λ
µ
(73)
= C + 1
2
(m − 1) (m − 2) λ
µ Ps ,
(74)
and
E(S−
U,2) ≈
C
X
j=1
(j − 1) E(L1) (m − 1)
C
λ
µ
(75)
(26)
= C − 1
2
[1 − (1 − Ps)m−1 + (m − 1)Ps](m − 1) λ
µ
(76)
(27)
≈ (C − 1) (m − 1)2 λ
µ Ps , for Ps ≪
1
m − 1 . (77)
In particular, from (72) and considering that, for large
values of C, C + 1 ≈ C, it holds that
E(SD) ≈ C (m − 1) λ
µ .
(78)
The expected total number E(SU,2) of symbols lost due to
unrecoverable errors in conjunction with two device failures is
E(SU,2) = E(S+
U,2) + E(S−
U,2) ,
(79)
where E(S+
U,2) and E(S−
U,2) are determined by (74) and (76),
respectively.
Remark 6: From (48), (74), and (76), it follows that
E(SU,1) ≫ E(S−
U,2) > E(S+
U,2). The ﬁrst inequality follows
from the fact that E(S−
U,2) is of the order O(λ/µ), which is
very small, whereas E(SU,1) is not. The second inequality
follows from the fact that, for large values of C, we have
E(S−
U,2)/E(S+
U,2) ≈ [ 1 − (1 − Ps)m−1 + (m − 1)Ps ]/[(m −
2)Ps] > 1. As discussed above, it follows that E(SU,1) ≫
E(SU,2). Consequently, the symbols lost due to unrecoverable
errors are predominately encountered during a rebuild that is
completed without experiencing an additional device failure.
From (43), (45), and (78), it follows that
E(SU,1) ≪ E(SD) ⇔ 2 C (m − 1) Ps ≪ C (m − 1) λ
µ
⇔ Ps ≪ P (3)
s
,
(80)
where
P (3)
s
≜ 1
2 · λ
µ .
(81)
Remark 7: From (72), it follows that the expected number
E(SD) of symbols stored on the two failed devices and lost
265
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

is of the order O(λ/µ). Note that the above analysis does
not exclude the possibility that additional device failures occur
during rebuild. However, the corresponding expected number
of the additional lost symbols can be ignored because it is of
the order O((λ/µ)2), which is much smaller than O(λ/µ).
This is conﬁrmed by (218), which is derived in Section
VI-C and obtains the expected number of lost symbols in
conjunction with three device failures.
C. Data Loss
Data loss during rebuild may occur because of another
(second) device failure or an unrecoverable failure of one or
more codewords, or a combination thereof.
Let PDL denote the probability of data loss. Then, the
probability 1−PDL of the rebuild being completed successfully
is equal to the product of 1 − PDF2, the probability of not
encountering a device failure during rebuild, and 1 − PUF|1,
the probability of not encountering an unrecoverable failure
during rebuild, namely, 1 − PDL = (1 − PDF2)(1 − PUF|1).
Consequently,
PDL = PDF2 + (1 − PDF2) PUF|1
(36)
=
PDF2 + PUF,1 .
(82)
This expresses the fact that a data loss during rebuild may
occur either because of two device failures or unrecoverable
failures in the case of one device failure. These are two
mutually exclusive events. Substituting (17) and (34) into (82)
yields
PDL ≈ (m−1) λ
µ +

1 − (m − 1) λ
µ
 h
1 − (1 − Ps)(m−1) Ci
.
(83)
Corollary 8: For small values of λ/µ, it holds that
PDL ≈ PDF2 + PUF|1
(84)
(33)(17)
≈
(m − 1) λ
µ + 1 − (1 − Ps)(m−1) C
(85)
(33)(19)
≈
(
(m − 1)

λ
µ + C Ps

,
for Ps ≪ P (2)
s
1 ,
for Ps ≫ P (2)
s
,
(86)
where P (2)
s
is determined by (21).
Proof: Immediate from (82) because PDF2 ≪ 1 due to (5).
Remark 8: When Ps increases and approaches 1, the PDL
obtained by (84) and (85) approaches 1 + (m − 1)λ/µ and
therefore exceeds 1.
Remark 9: It follows from (19), (33), and (38) that the
range [0, P (1)
s
) of Ps in which the probabilities PUF,1 and PUF|1
are much smaller than the probability PDF2 of encountering a
device failure during rebuild is obtained by
PUF|1
(38)
≈ PUF,1 ≪ PDF2
⇔ (m − 1) C Ps ≪ (m − 1) λ
µ ⇔ Ps ≪ P (1)
s
, (87)
where
P (1)
s
≜ 1
C · λ
µ .
(88)
Also, it follows from (86) and (87) that
PDL ≈





(m − 1) λ
µ ,
for Ps ≪ P (1)
s
(m − 1) C Ps ,
for P (1)
s
≪ Ps ≪ P (2)
s
1 ,
for Ps ≫ P (2)
s
,
(89)
where P (1)
s
and P (2)
s
are determined by (88) and (21), respec-
tively. Note that PDL, as a function of Ps, exhibits two plateaus
in the intervals [0, P (1)
s
) and (P (2)
s
, 1], respectively.
Unrecoverable failures may occur in the cases of one device
failure and two device failures. Consequently, the probability
PUF of encountering one or more unrecoverable failures during
rebuild is
PUF = PUF,1 + PUF,2
(90)
(67)
≈ PUF,1
(40)
≈

1 − (m − 1) λ
µ
 h
1 − (1 − Ps)(m−1) Ci
(91)
(38)
≈ PUF|1
(19)
≈
(
(m − 1) C Ps ,
for Ps ≪ P (2)
s
1 ,
for Ps ≫ P (2)
s
, (92)
where PUF,1 and PUF,2 are given by (40) and (65), respectively.
D. Amount of Data Loss
As discussed in Section V-C, data loss during rebuild
may occur because of another (second) device failure or
an unrecoverable failure of one or more codewords, or a
combination thereof. Note that in all cases, data loss cannot
involve only parity data, but also loss of user data.
Data loss during rebuild may occur because of unrecover-
able failures in the cases of one device failure or two device
failures. Consequently, the expected number E(SU) of symbols
lost due to unrecoverable errors is obtained as follows:
E(SU) = E(SU,1) + E(SU,2) ,
(93)
where E(SU,1) and E(SU,2) are determined by (48) and (79),
respectively. Moreover, according to Remark 6, it holds that
E(SU) ≈ E(SU,1)
(94)
(46)
≈ 2 C (m − 1) Ps ,
for Ps ≪
1
m − 1 .
(95)
The expected total number E(S) of lost symbols is
E(S) = E(SD) + E(SU) ,
(96)
where E(SD) and E(SU) are determined by (72) and (93),
respectively.
Remark 10: It follows from (45), (78), (94), and (96) that
E(S) ≈ C

(m − 1) λ
µ + E(L1)

(97)
(27)
≈ C (m − 1)
 λ
µ + 2 Ps

, for Ps ≪
1
m − 1 , (98)
where E(L1) is determined by (26). In particular, for Ps = 0,
it holds that E(S) = E(SD) ≈ C (m − 1) λ/µ.
Remark 11: When Ps increases and approaches 1, it fol-
lows from (48), (72), (74), (76), (93), and (96) that E(S)
approaches C m. This is intuitively obvious because when
266
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Ps = 1, all C m symbols stored in the the RAID-5 array
are lost owing to unrecoverable errors.
We now proceed to derive E(Q), the expected amount of
lost user data. First, we note that the expected number of lost
user symbols is equal to the product of the storage efﬁciency
and the expected number of lost symbols. Consequently, it
follows from (1) that
E(Q) = l
m E(S) s
(3)
=
l
m
E(S)
C
c ,
(99)
where E(S) is given by (96) and s denotes the symbol size.
Similar expressions for the expected amounts E(QDF2) and
E(QUF) of user data lost due to device and unrecoverable
failures are obtained from E(SD) and E(SU), respectively, as
follows:
E(QDF2) =
l
m E(SD) s
(3)
=
l
m
E(SD)
C
c ,
(100)
(78)
≈
l
m (m − 1) λ
µ c
(101)
and
E(QUF) = l
m E(SU) s
(3)
=
l
m
E(SU)
C
c
(102)
(95)
≈ 2 l
m (m − 1) c Ps ,
for Ps ≪
1
m − 1 , (103)
where E(SD) and E(SU) are determined by (72) and (93),
respectively.
Substituting (97) and (98) into (99) yields
E(Q) ≈
l
m

(m − 1) λ
µ + E(L1)

c
(104)
≈
l
m (m − 1)
 λ
µ + 2 Ps

c, for Ps ≪
1
m − 1 ,
(105)
where E(L1) is given by (26). In particular, for Ps = 0, it
holds that E(Q) = E(QDF2), which is determined by (101).
From (96), (99), (100), and (102), it holds that
E(Q) = E(QDF2) + E(QUF) .
(106)
Also, the expected amounts E(QUF,1) and E(QUF,2) of
user data lost due to unrecoverable failures in the cases of one
device failure and two device failures are
E(QUF,1) = l
m
E(SU,1)
C
c
(107)
and
E(QUF,2) = l
m
E(SU,2)
C
c ,
(108)
where E(SU,1) and E(SU,2) are determined by (48) and (79),
respectively.
Remark 12: From (94), (102), and (107), it follows that
E(QUF) ≈ E(QUF,1) .
(109)
Remark 13: From (80), (94), (100), and (102), it follows
that
E(QUF) ≪ E(QDF2) ⇔ Ps ≪ P (3)
s
,
(110)
where P (3)
s
is determined by (81).
Also, from (101), (103), (106), and (110), it follows that
E(Q) ≈
(
E(QDF2) ,
for Ps ≪ P (3)
s
E(QUF) ,
for Ps ≫ P (3)
s
(111)
≈
(
l
m (m − 1) λ
µ c ,
for Ps ≪ P (3)
s
2 l
m (m − 1) c Ps , for P (3)
s
≪ Ps ≪
1
m−1 .
(112)
Remark 14: When Ps increases and approaches 1, from
(99) and according to Remark 11, it follows that E(Q) ap-
proaches c l. This is intuitively obvious because when Ps = 1,
upon the ﬁrst device failure, the entire amount c l of user data
stored in the RAID-5 array is lost owing to unrecoverable
errors.
E. Reliability Metrics
The MTTDL normalized to 1/λ is obtained by substituting
(83) into (9) as follows:
λ MTTDL ≈
1
n
n
(m − 1) λ
µ +
h
1 − (m − 1) λ
µ
i 
1 − (1 − Ps)(m−1) Co ,
(113)
where C and λ/µ are determined by (3) and (5), respectively.
In particular, substituting (86) into (9) yields
λ MTTDL ≈







1
n (m − 1)

λ
µ + C Ps
,
for Ps ≪ P (2)
s
1
n ,
for Ps ≫ P (2)
s
.
(114)
Note that MTTDL is insensitive to device failure and
rebuild time distributions; it depends only on their means 1/λ
and 1/µ, respectively. In particular, the normalized MTTDL
depends only on the ratio λ/µ of their means. Also, for
λ/µ ≪ 1 and n = m = N, the MTTDL derived in (113)
is approximately equal to
MTTDL ≈
1 + (2N − 1) λ
µ
N λ
n
(N − 1) λ
µ +

1 − (1 − Ps)(N−1) Co ,
(115)
which is Equation (43) derived in [21]. Furthermore, for Ps =
0 and n = m = N, (113) yields
MTTDL ≈
µ
N (N − 1) λ2 ,
(116)
which is the same result as the one derived in [2, 3] (for a
single array, namely, nG = 1).
The EAFDL is obtained by substituting (99) into (10).
In particular, the EAFDL normalized to λ is obtained by
substituting (105) into (10) as follows:
EAFDL/λ ≈ (m − 1)
λ
µ + 2 Ps

,
for Ps ≪
1
m − 1 .
(117)
where λ/µ is determined by (5). Note that EAFDL is insensi-
tive to device failure and rebuild time distributions; it depends
only on their means 1/λ and 1/µ, respectively. In particular,
267
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the normalized EAFDL only depends on the ratio λ/µ of their
means. Also, for Ps = 0, (117) is in agreement with Equation
(74) of [14] (with c/b = 1/µ and φ = 1).
The value of E(H) is obtained by substituting (83) and
(99) into (11). In particular, the E(H) normalized to c is
obtained by substituting (83) and (105) into (11) as follows:
E(H)/c ≈
l
m(m − 1)

λ
µ + 2 Ps

(m − 1) λ
µ +
h
1 − (m − 1) λ
µ
i 
1 − (1 − Ps)(m−1) C ,
for Ps ≪
1
m − 1 , (118)
where C and λ/µ are determined by (3) and (5), respectively.
Note that E(H) does not depend on the device failure nor
the rebuild time distributions; it only depends on the ratio of
their means λ/µ. Also, for Ps = 0, (118) yields E(H)/c =
l/m, which is in agreement with Equation (75) of [14].
Similar to (11), the expected amounts E(HDF2) and
E(HUF) of user data lost due to device and unrecoverable
failures, given that such failures have occurred, are
E(HDF2) = E(QDF2)
PDF2
,
and
E(HUF) = E(QUF)
PUF
,
(119)
respectively.
From (11), (106), and (119), we deduce that the following
relation holds
E(H) = PDF2
PDL
E(HDF2) + PUF
PDL
E(HUF) .
(120)
Note that this is not a weighted average of E(HDF2) and
E(HUF) because a subsequent device failure and unrecover-
able failures during rebuild are not mutually exclusive, and
therefore, and according to (82) and (90), the sum of weights
is not equal to but close to 1.
Remark 15: According to (21), (81), and (88), it holds
that P (1)
s
≪ min(P (2)
s
, P (3)
s
) and P (2)
s
≶ P (3)
s
⇔ λ/µ ≷
2/[C (m − 1)]. From (89) and (112), it follows that
E(H)/c
≈











l
m ,
for Ps ≪ P (1)
s
l
m
λ
µ
1
C Ps ,
for P (1)
s
≪ Ps ≪ P (2,3)
min
2 l
m max( m−1
2
λ
µ, 1
C ) ,
for P (2,3)
min
≪ Ps ≪ P (2,3)
max
2 l
m (m − 1)Ps ,
for P (2,3)
max
≪ Ps ≪
1
m−1 ,
(121)
where
P (2,3)
min
≜ min(P (2)
s
, P (3)
s
) and P (2,3)
max
≜ max(P (2)
s
, P (3)
s
) .
(122)
Note that E(H), as a function of Ps, exhibits two plateaus in
the intervals [0, P (1)
s
) and (P (2,3)
min , P (2,3)
max ), respectively.
Substituting (33), (91), (101), and (103) into (119) yields
E(HDF2)/c ≈
l
m ,
(123)
and
E(HUF)
c
≈
2 l
m (m − 1) Ps
h
1 − (m − 1) λ
µ
i 
1 − (1 − Ps)(m−1) C ,
for Ps ≪
1
m − 1 .
(124)
where C and λ/µ are determined by (3) and (5), respectively.
Remark 16: Substituting (92) and (103) into (119) yields
E(HUF)
c
≈
(
2 l
m
1
C ,
for Ps ≪ P (2)
s
2 l
m (m − 1)Ps ,
for P (2)
s
≪ Ps ≪
1
m−1 .
(125)
Remark 17: When Ps increases and approaches 1, it fol-
lows from (11), (83), and Remark 14 that E(H) approaches
c l. This is intuitively obvious because when Ps = 1, the entire
amount c l of user data stored in the system is lost owing to
unrecoverable errors.
VI.
RAID-6 SYSTEMS
Here we derive the reliability metrics for a RAID-6 sys-
tem. When a storage device of a RAID-6 array fails, the
C codewords stored in the array lose one of their symbols.
Using the direct-path-approximation methodology, we proceed
by considering only the subsequent potential data losses and
device failures related to the affected array.
A. One Device Failure
The rebuild process attempts to restore the C codewords
of the affected array sequentially. Let us consider such a
codeword and let L1 be the number of symbols permanently
lost and I1 be the number of symbols in the codeword with
unrecoverable errors. The probability distribution of I1 is
determined by (12). Clearly, the symbol lost due to the device
failure can be corrected by the RAID-6 capability only if at
least m−2 of the remaining m−1 symbols can be read. Thus,
L1 = 0 if and only if I1 ≤ 1. Using (12), the probability q1
that a codeword can be restored is
q1 = P(L1 = 0) = P(I1 ≤ 1)
(12)
= [1+(m−2)Ps](1−Ps)m−2,
(126)
which for very small values of Ps implies that
q1 ≈



1 − (m − 1)(m − 2)
2
P 2
s ,
for Ps ≪
q
2
(m−1)(m−2)
0 ,
for Ps ≫
q
2
(m−1)(m−2) .
(127)
Note that, if a codeword is corrupted, then at least one of its l
user-data symbols is lost. We now deduce that the conditional
probability PUF|1 of encountering an unrecoverable failure
during the rebuild process of the C codewords in the case
of one device failure is
PUF|1 = 1 − qC
1
(126)
=
1 − [1 + (m − 2)Ps]C(1 − Ps)(m−2) C ,
(128)
Remark 18: For very small values of Ps, q1 is approxi-
mated by (127). Consequently, it follows from (128) that
PUF|1 ≈



C (m − 1)(m − 2)
2
P 2
s ,
for Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ .
(129)
268
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

where P (4)
s∗
is obtained from the approximation (129)
PUF|1 ≈ (m − 1)(m − 2)
2
C P 2
s = 1
(130)
as follows:
P (4)
s∗ ≜
s
2
C(m − 1)(m − 2) .
(131)
Note also that, for Ps ≪
q
2
(m−1)(m−2) and from (18) and
(127), the expected number E(NUF|1) of corrupted codewords
is
E(NUF|1) ≈ C (m − 1)(m − 2)
2
P 2
s .
(132)
In particular, for Ps = P (4)
s∗ , it holds that E(NUF|1) ≈ 1 and
this, combined with the fact that PUF|1 ≈ 1, implies that one
of the C codewords is almost surely corrupted.
The expected number E(NUF|1|NUF|1 ≥ 1) of corrupted
codewords, given that such codewords exist, is derived using
(23), (129), and (132) as follows:
E(NUF|1|NUF|1 ≥ 1) =
E(NUF|1)
P(NUF|1 ≥ 1) = E(NUF|1)
PUF|1
≈
(
1 ,
for Ps ≪ P (4)
s∗
C (m−1)(m−2)
2
P 2
s , for P (4)
s∗ ≪ Ps ≪
q
2
(m−1)(m−2) .
(133)
When I1 > 1, the number L1 of lost symbols is I1 + 1.
Consequently, the expected number E(L1) of lost symbols is
E(L1) =
m−1
X
i=2
(i + 1) P(I1 = i)
= E(I1) + 1 − P(I1 = 0) − 2 P(I1 = 1)
(12)(13)
=
1 − (1 − Ps)m−1 + (m − 1) Ps [1 − 2(1 − Ps)m−2 ] .
(134)
Remark 19: From (134), it follows that
E(L1) ≈ 3
2 (m − 1) (m − 2) P 2
s ,
for Ps ≪
1
m − 1 . (135)
In particular, the expected number E(L1|L1 > 0) of lost
symbols, given that the codeword cannot be restored, is
E(L1|L1 > 0) =
E(L1)
P(L1 > 0) =
E(L1)
1 − P(L1 = 0)
(126)
=
E(L1)
1 − q1
(127)(135)
≈
3 ,
for Ps ≪
1
m − 1 .
(136)
The probability PUF,1 of data loss due to unrecoverable
failures during rebuild in the case of one device failure is
obtained from (37), that is,
PUF,1 ≈

1 − (m − 1) λ
µ

(1 − qC
1 ) ,
(137)
where q1 in the case of RAID-6 is determined by (126).
Corollary 9: It holds that
PUF,1 ≈



PDF,1
(m − 1)(m − 2)
2
C P 2
s ,
for Ps ≪ P (4)
s∗
PDF,1 ,
for Ps ≫ P (4)
s∗ ,
(138)
where PDF,1 and P (4)
s∗ are given by (34) and (131), respectively.
Proof: Immediate by substituting (129) into (36).
We now proceed to assess the amount of data loss. The
expected number E(SU|1) of symbols lost due to unrecoverable
failures during rebuild, given one device failure, is determined
by (41). Substituting (134) into (41) yields
E(SU|1) = C {1−(1−Ps)m−1+(m−1) Ps [1−2(1−Ps)m−2 ]} .
(139)
Remark 20: For small values of Ps, E(L1) is approxi-
mated by (135). Consequently, it follows from (41) that
E(SU|1) ≈ 3
2 C (m−1) (m−2) P 2
s ,
for Ps ≪
1
m − 1 .
(140)
The expected number E(SU,1) of symbols lost due to
unrecoverable failures during rebuild, in the case of one device
failure during rebuild, is determined by (44), and consequently
by (47), that is,
E(SU,1) ≈ C E(L1)

1 − (m − 1) λ
µ

,
(141)
where E(L1) is determined by (134).
Remark 21: The relations given in (38) and (45), that is,
PUF,1 ≈ PUF|1 = 1 − qC
1
(142)
and
E(SU,1) ≈ E(SU|1) = C E(L1) ,
(143)
hold for both RAID-5 and RAID-6 redundancy schemes, where
q1 is given by (14) and (126), respectively, and E(L1) by
(26) and (134), respectively. In fact, these two relations are
general because they apply to any redundancy scheme with the
corresponding q1 and E(L1) measures evaluated accordingly.
Remark 22: From (135) and (143), it follows that
E(SU,1) ≈ 3
2 C (m − 1) (m − 2) P 2
s ,
for Ps ≪
1
m − 1 .
(144)
B. Two Device Failures
As discussed in Section V-B, a subsequent (second) device
failure may occur during the rebuild process, which is triggered
by the ﬁrst device failure. In particular, such a failure may
occur during reconstruction of the jth (1 ≤ j ≤ C) codeword
with a probability of PDF2(j) determined by (35).
The rebuild process attempts to restore the jth codeword
as well as the remaining C −j codewords of the affected array
sequentially. Let us consider such a codeword and let L2 be
the number of symbols permanently lost and I2 be the number
269
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

of symbols in the codeword with unrecoverable errors. Clearly,
I2 is binomially distributed with parameter Ps, that is
P(I2 = i) =
m − 2
i

P i
s(1−Ps)m−2−i, for i = 0, . . . , m−2 ,
(145)
such that
E(I2) =
m−2
X
i=1
i P(I2 = i) = (m − 2) Ps .
(146)
The symbols lost due to the two device failures can be
corrected by the RAID-6 capability only if the remaining m−2
symbols can be read. Thus, L2 = 0 if and only if I2 = 0. Using
(145), the probability q2 that a codeword can be restored is
q2 = P(L2 = 0) = P(I2 = 0) = (1−Ps)m−2 (51)
= p2 , (147)
which for very small values of Ps implies that
q2 ≈
(
1 − (m − 2) Ps ,
for Ps ≪
1
m−2
0 ,
for Ps ≫
1
m−2 .
(148)
When I2 > 0, the number L2 of lost symbols is I1 + 2.
Consequently, the expected number E(L2) of lost symbols is
E(L2) =
m−2
X
i=1
(i + 2) P(I2 = i)
= E(I2) + 2
m−2
X
i=1
P(I2 = i) = E(I2) + 2 (1 − q2)
(146)(147)
=
(m − 2) Ps + 2 [1 − (1 − Ps)m−2 ] .
(149)
Remark 23: From (149), it follows that
E(L2) ≈ 3 (m − 2) Ps ,
for Ps ≪
1
m − 2 .
(150)
In particular, the expected number E(L2|L2 > 0) of lost
symbols, given that the codeword cannot be restored, is
E(L2|L2 > 0) =
E(L2)
P(L2 > 0) =
E(L2)
1 − P(L2 = 0)
(147)
=
E(L2)
1 − q2
(127)(135)
≈
3 ,
for Ps ≪
1
m − 1 .
(151)
As discussed in Section V-B, the C codewords are divided
into two sets: S1,j, the set of j − 1 codewords already con-
sidered for reconstruction, and S2,j, the set of the remaining
C −j +1 codewords. In contrast to RAID-5, the codewords in
S2,j could be reconstructed by the RAID-6 capability. There-
fore, the probability that no unrecoverable failures occur in
S2,j is qC−j+1
2
, which implies that the probability PUF in S2,j|2
that an unrecoverable failure occurs in S2,j is
PUF in S2,j|2 = 1 − qC−j+1
2
.
(152)
Furthermore, such unrecoverable failures entail the loss of
user data. Let us denote by NUF in S2,j|2 the number of such
corrupted codewords. Then it holds that
E(NUF in S2,j|2) = (C − j + 1) (1 − q2) .
(153)
Also, the probability PUF|2(j) that an unrecoverable failure
occurs, given two device failures, is
PUF|2(j) = 1 − qj−1
1
qC−j+1
2
.
(154)
As discussed in Section V-B, the second device failure
divides the C codewords into two sets: S1, the set of codewords
already considered for reconstruction when the second device
failure occurs, and S2, the set of the remaining codewords. The
probability PUF in S1|2 that an unrecoverable failure occurs in
S1 is given by (56), where q1 is determined by (126).
Corollary 10: It holds that
PUF in S1|2 ≈



(C − 1)(m − 1)(m − 2)
4
P 2
s ,
for Ps ≪ Ps∗
1 ,
for Ps ≫ Ps∗ ,
(155)
where Ps∗ is obtained from the approximation (155)
PUF in S1|2 ≈ (C − 1)(m − 1)(m − 2)
4
P 2
s = 1
(156)
and considering that C is large, as follows:
Ps∗ =
2
p
C(m − 1)(m − 2)
≈ P (4)
s∗ .
(157)
Proof: See Appendix D.
Remark 24: For Ps ≪ P (4)
s∗ , and considering that C is
large, it follows from (129) and (155) that
PUF in S1|2 ≈ 1
2 PUF|1 ,
for Ps ≪ P (4)
s∗ .
(158)
This is intuitively obvious because, according to (31), when the
second failure occurs, half the codewords on the average have
already been considered for reconstruction, that is, E(|S1|) ≈
C/2.
The probability PUF in S2|2 that an unrecoverable failure
occurs in S2 is obtained by unconditioning (152) on j as
follows:
PUF in S2|2 =
C
X
j=1
PUF in S2,j|2P(j|DF2, R)
(30)
≈
C
X
j=1
(1 − qC−j+1
2
) 1
C = 1 − q2
C
1 − qC
2
1 − q2
, (159)
which does not depend on the rebuild duration.
Corollary 11: It holds that
PUF in S2|2 ≈



(C + 1)(m − 2)
2
Ps ,
for Ps ≪ P (2)
s∗
1 ,
for Ps ≫ P (2)
s∗ ,
(160)
where P (2)
s∗
is obtained from the approximation (160)
PUF in S2|2 ≈ (C + 1)(m − 2)
2
Ps = 1
(161)
and is
P (2)
s∗ ≜ 1
C ·
2
m − 2 .
(162)
270
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Proof: Immediate from Corollary 5 and by recognizing
that PUF in S2|2 derived by (159) is equal to the corresponding
measure obtained in the case of RAID-5 as expressed by (61)
because, according to (147), q2 = p2.
Remark 25: From (148) and for Ps ≪ 1/(m − 2), it
follows that q2 ≈ 1. Furthermore, log(q2) = −(1 − q2) +
O((1 − q2)2) ≈ −(1 − q2) ≈ −(1 − q2)/q2. Consequently,
substituting the term q2/(1 − q2) on the right-hand side of
(159) with −1/ log(q2) yields
PUF in S2|2 ≈ 1 +
1 − qC
2
C log(q2) = 1 + 1 − qC
2
log(qC
2 ) ,
(163)
where q2 is determined by (147).
The expected number E(NUF in S1|2) of corrupted code-
words in S1 is determined by (59). Also, the expected number
E(NUF in S2|2) of corrupted codewords in S2 is obtained by
unconditioning (153) on j as follows:
E(NUF in S2|2) =
C
X
j=1
E(NUF in S2,j|2)P(j|DF2, R)
(30)
≈
C
X
j=1
(C − j + 1)(1 − q2) 1
C
= C − 1
2
(1 − q2) ≈ C
2 (1 − q2)
(164)
(148)
≈
C
2 (m − 2) Ps , for Ps ≪
1
m − 2 . (165)
In particular, for Ps = P (2)
s∗
as determined by (162), it holds
that E(NUF in S2|2) ≈ 1 and this, combined with the fact
that PUF in S2|2 ≈ 1 as derived by (160), implies that one of
the codewords in S2 is almost surely corrupted. Also, (127)
implies that 1−q1 = 2(m−1)/[(m−2)C2]. Thus, from (59),
it follows that E(NUF in S1|2) ≈ (m − 1)/[(m − 2)C], which
is negligible compared with E(NUF in S2|2).
The expected number E(NUF in S2|2|NUF in S2|2 ≥ 1) of
corrupted codewords in S2, given that such codewords exist,
is
E(NUF in S2|2|NUF in S2|2 ≥ 1) = E(NUF in S2|2)
PUF in S2|2
(166)
(160)(165)
≈
(
1 ,
for Ps ≪ P (2)
s∗
C
2 (m − 2) Ps , for P (2)
s∗ ≪ Ps ≪
1
m−1 . (167)
The probability PUF|2 of a data loss due to unrecoverable
failures given two device failures and a rebuild duration of R
is obtained by unconditioning (154) on j and using (30) as
follows:
PUF|2 =
C
X
j=1
PUF|2(j) P(j|DF2, R)
≈
C
X
j=1

1 − qj−1
1
qC−j+1
2
 1
C = 1 − q2
C
qC
1 − qC
2
q1 − q2
,
(168)
which does not depend on the rebuild duration.
Corollary 12: It holds that
PUF|2 ≈



(C + 1)(m − 2)
2
Ps ,
for Ps ≪ P (2)
s∗
1 ,
for Ps ≫ P (2)
s∗ ,
(169)
where P (2)
s∗
is determined by (162).
Proof: See Appendix E.
Remark 26: It
follows
from
(155)
and
(160)
that
PUF in S1|2 ≪ PUF in S2|2 because the former is of the order
O(P 2
s ), whereas the latter is of the order O(Ps). Consequently,
in conjunction with two device failures, an unrecoverable
failure is more likely to be encountered after the second device
failure and not before. This in turn implies that
PUF|2 ≈ PUF in S2|2 ,
(170)
which is conﬁrmed by comparing (160) with (169).
A subsequent (third) device failure may occur during the
rebuild process of the remaining C−j codewords, the duration
of which is equal to [(C −j)/C]R. The probability PDF3(j|R)
that one of the m−2 remaining devices in the array fails during
this rebuild depends on its duration and the aggregate failure
rate of the m − 2 highly reliable devices, and is
PDF3(j|R) ≈ C − j
C
(m − 2) λ R .
(171)
Consequently, for a rebuild time duration of R, the probability
PDF,2(j|R) of encountering a second device failure during
reconstruction of the jth codeword and not encountering a third
device failure during the remaining rebuild time is determined
by the product of PDF2(j|R) and 1 − PDF3(j|R), that is,
PDF,2(j|R) ≈(m − 1) λ R
C

1 − C − j
C
(m − 2) λ R

,
for j = 1, 2, . . . , C . (172)
Therefore, the probability PDF,2(j) of encountering a second
device failure during reconstruction of the jth codeword and
not encountering a third device failure during the remaining
rebuild time is obtained by unconditioning (172) on R using
(4) as follows:
PDF,2(j) ≈(m − 1)
C
λ
µ

1 − C − j
C
(m − 2) λ
µ fR

,
for j = 1, 2, . . . , C ,
(173)
where
fR ≜ E(R2)
[E(R)]2 ≥ 1 .
(174)
Thus, the probability PDF,2 of two device failures during
rebuild is obtained by (173) as follows:
PDF,2 ≈
C
X
j=1
PDF,2(j)
(175)
≈ (m − 1) λ
µ

1 − C − 1
C
(m − 2) λ
µ fR

(176)
(5)
≈ (m − 1) λ
µ
(33)
≈
PDF2 .
(177)
271
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The probability PUF,2 of data loss due to unrecoverable
failures in conjunction with two device failures is obtained by
unconditioning (154) on j and using (173) as follows:
PUF,2 =
C
X
j=1
PUF|2(j) PDF,2(j)
≈
C
X
j=1
(1 − qj−1
1
qC−j+1
2
) (m − 1)
C
λ
µ
·

1 − C − j
C
(m − 2) λ
µ fR

=

1 − q2
C
qC
1 − qC
2
q1 − q2

(m − 1) λ
µ
−
"
C (C − 1)
2
− q2
2
qC
1 − C q1 qC−1
2
+ (C − 1) qC
2
(q1 − q2)2
#
·
· (m − 1)(m − 2)
C2
λ
µ
2
fR ,
(178)
where fR is determined by (174).
Corollary 13: It holds that
PUF,2 ≈
(
A Ps ,
for Ps ≪ P (2)
s∗
PDF,2 ,
for Ps ≫ P (2)
s∗ ,
(179)
where
A = C + 1
2

1 − 2
3
C − 1
C
(m − 2) λ
µ fR

(m − 1)(m − 2) λ
µ
(180)
≈ C
2

1 − 2
3 (m − 2) λ
µ fR

(m − 1)(m − 2) λ
µ
(181)
(5)
≈ C
2 (m − 1)(m − 2) λ
µ ,
(182)
and PDF,2 and P (2)
s∗ are given by (176) and (162), respectively.
Proof: See Appendix E.
Remark 27: Note that the minuend of the difference shown
on the right-hand side of (178) is much greater than the
subtrahend because the former is of the order O(λ/µ), whereas
the latter is of the order O((λ/µ)2) and is also further reduced
owing to division by the large number C2. Consequently, from
(178), it follows that
PUF,2
≈

1 − q2
C
qC
1 − qC
2
q1 − q2

(m − 1) λ
µ
(183)
(33)(168)
≈
PUF|2 PDF2
(184)
(170)
≈
PUF in S2|2 PDF2
(185)
(33)(163)
≈

1 + 1 − qC
2
log(qC
2 )

(m − 1) λ
µ ,
(186)
where q1 and q2 are given by (126) and (147), respectively.
Remark 28: According to (131) and (162) and for large
values of C, it holds that P (2)
s∗
≪ P (4)
s∗ . Consequently, from
(142), (129), (179), and (182), and given that P (2)
s∗ ∼ 1/C ≪
λ/µ, it holds that
PUF,1 ≪ PUF,2 ,
for Ps ≪ P (2)
s∗ .
(187)
We now proceed to assess the amount of data loss. As
discussed above, each of the C −j +1 codewords in S2,j loses
an expected number of E(L2) symbols. Thus, the expected
total number E(S+
U,2 | DF2 at j) of symbols stored in these
C − j + 1 codewords and lost due to unrecoverable failures is
E(S+
U,2 | DF2 at j) = (C − j + 1) E(L2) ,
(188)
where E(L2) is determined by (149). Furthermore, each of
the j − 1 codewords in S1,j loses an expected number of
E(L1) symbols. Consequently, the expected total number
E(S−
U,2 | DF2 at j) of symbols stored in these j −1 codewords
and lost due to unrecoverable failures is
E(S−
U,2 | DF2 at j) = (j − 1) E(L1) ,
(189)
where E(L1) is determined by (134). Unconditioning (188)
and (189) on the event of a device failure during the recon-
struction of the jth codeword, and using (173), yields after
some manipulations
E(S+
U,2) =
C
X
j=1
E(S+
U,2 | DF2 at j)PDF,2(j)
=
C
X
j=1
(C − j + 1) E(L2) PDF,2(j)
≈ 1
2 (C + 1) E(L2) (m − 1) λ
µ
− (C + 1) E(L2)
3
· C − 1
C
(m − 1) (m − 2)
λ
µ
2
fR ,
(190)
and
E(S−
U,2) =
C
X
j=1
E(S−
U,2 | DF2 at j)PDF,2(j)
=
C
X
j=1
(j − 1) E(L1) PDF,2(j)
≈ 1
2 (C − 1) E(L1) (m − 1) λ
µ
− (C − 2) E(L1)
6
· C − 1
C
(m − 1) (m − 2)
λ
µ
2
fR ,
(191)
where E(L1), E(L2), and fR are determined by (134), (149),
and (174), respectively.
The expected total number E(SU,2) of symbols lost due to
unrecoverable errors in conjunction with two device failures is
E(SU,2) = E(S+
U,2) + E(S−
U,2) ,
(192)
where E(S+
U,2) and E(S−
U,2) are determined by (190) and
(191), respectively.
Remark 29: From
(135)
and
(150),
it
follows
that
E(L1) ≪ E(L2) because the former is of the order O(P 2
s ),
whereas the latter is of the order O(Ps). From (190) and (191),
it follows that E(S+
U,2) ∼ E(L2) and E(S−
U,2) ∼ E(L1),
respectively. Thus,
E(S+
U,2) ≫ E(S−
U,2) .
(193)
272
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Corollary 14: It holds that
E(SU,2) ≈ E(S+
U,2) .
(194)
Proof: Immediate from (192) and (193).
Remark 30: For small values of Ps and large values of C,
from (190) and (194), and using (5) and (150), it follows that
E(SU,2) ≈ 1
2 C E(L2) (m − 1) λ
µ
(195)
≈ 3
2 C (m − 1)(m − 2) λ
µ Ps , for Ps ≪
1
m − 2 .
(196)
Remark 31: From
(143)
and
(191),
it
follows
that
E(SU,1) ≫ E(S−
U,2) because E(S−
U,2) is of the order O(λ/µ),
which is very small, whereas E(SU,1) is not. Furthermore,
from (144) and (196), it follows that
E(SU,1) ≪ E(SU,2)
⇔ 3
2 C (m − 1) (m − 2) P 2
s ≪ 3
2 C (m − 1)(m − 2) λ
µ Ps
⇔ Ps ≪ P (5)
s∗ ,
(197)
where
P (5)
s∗ ≜ λ
µ .
(198)
Consequently, for very small values of Ps, the symbols lost
due to unrecoverable failures are predominately encountered
during the rebuild phase after a second device failure.
C. Three Device Failures
As discussed in Section VI-B, after a second device failure
during reconstruction of the jth (1 ≤ j ≤ C) codeword,
a subsequent (third) device failure may occur during the
rebuild process of the remaining C −j codewords, which form
the S2,j set. In particular, such a failure may occur during
reconstruction of the ith (j + 1 ≤ i ≤ C) codeword, which
divides the codewords of the S2,j set into two subsets:
S−
2,j,i : the set of i − j codewords in S2,j already considered
for reconstruction prior to the third device failure, and
S+
2,j,i : the set of the remaining C − i + 1 codewords in S2,j,
none of which can be reconstructed.
Analogous to (32), the probability PDF3(i|R) that a third
device failure occurs during reconstruction of the ith (j + 1 ≤
i ≤ C) codeword during the rebuild process in conjunction
with two device failures, and given a rebuild time of R, is
PDF3(i|j, R) ≈ (m − 2) λ R
C
,
for i = j + 1, j + 2, . . . , C .
(199)
Consequently, the probability Pj,i(R) of a second device
failure during reconstruction of the jth codeword and a third
device failure during reconstruction of the ith codeword, and
given a rebuild time of R, is the product of PDF2(j|R) and
PDF3(i|R) obtained from (32) and (199) as follows:
Pj,i(R) ≜PDF2(j|R) PDF3(i|j, R) ≈ (m − 1)(m − 2)
C2
λ2 R2 ,
for j = 1, 2, . . . , C and i = j + 1, j + 2, . . . , C .
(200)
Therefore, the probability Pj,i of a second device failure
during reconstruction of the jth codeword and a third device
failure during reconstruction of the ith codeword is obtained by
unconditioning (200) on R and using (4) and (174) as follows:
Pj,i =E(Pj,i(R)) ≈ (m − 1)(m − 2)
C2
λ
µ
2
fR ,
for j = 1, 2, . . . , C and i = j + 1, j + 2, . . . , C .
(201)
Also, the probability PDF3(j|R) that, during reconstruction of
the codewords in S2,j, one of the m − 2 remaining devices in
the array fails is obtained from (199) as follows:
PDF3(j|R) =
C
X
i=j+1
PDF3(i|j, R) ≈
C
X
i=j+1
(m − 2) λ R
C
= (C − j) (m − 2) λ R
C
,
(202)
which is in agreement with (171).
The probability PDF3(R) of encountering three device
failures given a rebuild duration of R is obtained by uncondi-
tioning (202) on j and using (32) as follows:
PDF3(R) ≈
C
X
j=1
PDF3(j|R) PDF2(j|R)
≈
C
X
j=1
C − j
C2
(m − 1)(m − 2) λ2 R2
≈ C − 1
2 C
(m − 1)(m − 2) λ2 R2 .
(203)
The probability PDF3 of data loss due to three device
failures, that is, the probability of two device failures during
the rebuild process is obtained by unconditioning (203) on R
and using (4) and (174) as follows:
PDF3 ≈ C − 1
2 C
(m − 1)(m − 2)
λ
µ
2
fR .
(204)
In particular, for large values of C, it holds that
PDF3 ≈ (m − 1)(m − 2)
2
λ
µ
2
fR ,
(205)
Note that the occurrence of the third device failure does not
exclude the possibility of unrecoverable failures being encoun-
tered prior to its occurrence. Also, each of the C −i+1 code-
words in S+
2,j,i can no longer be reconstructed. In particular,
the three symbols of the ith codeword stored on the three failed
devices can no longer be recovered and are lost. Furthermore,
any of its remaining m − 3 symbols with unrecoverable errors
will also be lost, leading to unrecoverable failure. Thus, the
probability p3 of not encountering an unrecoverable failure due
to unrecoverable errors in the remaining m − 3 symbols is
p3 = (1 − Ps)m−3 ,
(206)
which for very small values of Ps implies that
p3 ≈
(
1 − (m − 3) Ps ,
for Ps ≪
1
m−3
0 ,
for Ps ≫
1
m−3 .
(207)
273
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The same applies for the remaining C − i codewords. There-
fore, the probability that no unrecoverable failures occur in
S1,j is qj−1
1
, the probability that no unrecoverable failures oc-
cur in S−
2,j,i is qi−j
2
, and the probability that no unrecoverable
failures occur in S+
2,j,i is pC−i+1
3
. Consequently, the probability
PUF|3(j, i) that an unrecoverable failure occurs, given three
device failures, is
PUF|3(j, i) = 1 − qj−1
1
qi−j
2
pC−i+1
3
.
(208)
The probability PUF,3 of data loss due to unrecoverable
failures in conjunction with three device failures is determined
by the following proposition.
Proposition 1: It holds that
PUF,3 =
C (C − 1)
2
−
q2 p3
p3 − q2
qC
1 − pC
3
q1 − p3
− qC
1 − qC
2
q1 − q2

·
· (m − 1)(m − 2)
C2
λ
µ
2
fR .
(209)
Proof: See Appendix F.
Corollary 15: It holds that
PUF,3 ≈
(
B Ps ,
for Ps ≪ P (2)
s∗
PDF3 ,
for Ps ≫ P (2)
s∗ ,
(210)
where
B = (C − 1)(C + 1)
6 C
(2m − 5)(m − 1)(m − 2)
λ
µ
2
fR
(211)
≈ C
6 (2m − 5)(m − 1)(m − 2)
λ
µ
2
fR ,
(212)
and PDF3 and P (2)
s∗ are given by (205) and (162), respectively.
Proof: See Appendix G.
Remark 32: From (210), it follows that for Ps ≫ P (2)
s∗ ,
PUF|3 = PUF,3/PDF3 ≈ 1, which implies that a third device
failure leads to data loss owing to unrecoverable failures. In
this case, the probability of data loss is equal to that of a RAID-
6 system in the absence of latent errors, that is, PUF,3 = PDF3.
Remark 33: From (179) and (210), it follows that
PUF,2 ≫ PUF,3 .
(213)
According to (182) and (212), it holds that A ≫ B because
the former is of the order O(λ/µ), whereas the latter is of the
order O((λ/µ)2), and similarly, according to (177) and (205),
PDF,2 ≈ PDF2 ≫ PDF3.
We now proceed to assess the amount of data loss. As
discussed above, the three symbols of each of the C − i +
1 codewords in S+
2,j,i stored on the three failed devices can
no longer be recovered and are lost. Thus, the total number
SD(j, i) of symbols stored on the three failed devices and lost
is
SD(j, i) = 3 (C + 1 − i) .
(214)
Also, the expected number E(S+
U,3 | DF2 at j and DF3 at i) of
symbols stored in these C − i + 1 codewords and lost owing
to unrecoverable errors is
E(S+
U,3 | DF2 at j and DF3 at i) = (C + 1 − i) (m − 3) Ps .
(215)
Moreover, each of the i − j codewords in S−
2,j,i loses an
expected number of E(L2) symbols. Consequently, the ex-
pected total number E(S−
U,3 | DF2 at j and DF3 at i) of sym-
bols stored in these j − i codewords and lost due to unrecov-
erable errors is
E(S−
U,3 | DF2 at j and DF3 at i) = (i − j) E(L2) .
(216)
Furthermore, each of the j − 1 codewords in S1,j loses an
expected number of E(L1) symbols. Consequently, the ex-
pected total number E(S⊙
U,3 | DF2 at j and DF3 at i) of sym-
bols stored in these j − 1 codewords and lost due to unrecov-
erable errors is
E(S⊙
U,3 | DF2 at j and DF3 at i) = (j − 1) E(L1) .
(217)
Unconditioning (214), (215), (216), and (217) on the event of
two device failures during the reconstruction of the jth and ith
codewords, and using (201), yields
E(SD) =
C
X
j=1
C
X
i=j+1
SD(j, i) Pj,i
≈ (C − 1) (C + 1)
2 C
(m − 1) (m − 2)
λ
µ
2
fR , (218)
E(S+
U,3) =
C
X
j=1
C
X
i=j+1
E(S+
U,3 | DF2 at j and DF3 at i) Pj,i
≈ (C − 1) (C + 1)
6 C
(m − 1) (m − 2) (m − 3)
λ
µ
2
fR Ps ,
(219)
E(S−
U,3) =
C
X
j=1
C
X
i=j+1
E(S−
U,3 | DF2 at j and DF3 at i) Pj,i
≈ (C − 1) (C + 1)
6 C
(m − 1) (m − 2)
λ
µ
2
fR E(L2) ,
(220)
and
E(S⊙
U,3) =
C
X
j=1
C
X
i=j+1
E(S⊙
U,3 | DF2 at j and DF3 at i) Pj,i
≈ (C − 1) (C − 2)
6 C
(m − 1) (m − 2)
λ
µ
2
fR E(L1) ,
(221)
where E(L1), E(L2), and fR are determined by (134), (149),
and (174), respectively.
In particular, from (218) and considering that, for large
values of C, C + 1 ≈ C, it holds that
E(SD) ≈ C
2 (m − 1) (m − 2)
λ
µ
2
fR .
(222)
274
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The expected total number E(SU,3) of symbols lost due to
unrecoverable errors in conjunction with two device failures is
E(SU,3) = E(S+
U,3) + E(S−
U,3) + E(S⊙
U,3) ,
(223)
where E(S+
U,3), E(S−
U,3), and E(S⊙
U,3) are determined by
(219), (220), and (221), respectively.
Remark 34: From (219), (220), and (221), and by virtue
of (135) and (150), it follows that E(S−
U,3) > E(S+
U,3) and
E(S−
U,3) > E(S⊙
U,3). Also, from (195) and (220), it follows
that E(SU,2) ≫ E(S−
U,3) because E(SU,2) is of the order
O(λ/µ), whereas E(S−
U,3) is of the order O((λ/µ)2). From
the discussion above, it follows that E(SU,2) ≫ E(SU,3).
From (140), (143), (196), and (222), it follows that
E(SU,1) ≪ E(SD) ⇔ Ps ≪
r
fR
3 P (5)
s∗ ,
(224)
E(SU,2) ≪ E(SD) ⇔ Ps ≪ fR
3 P (5)
s∗ ,
(225)
where P (5)
s∗
is determined by (198).
Remark 35: From (81) and (198), it follows that P (3)
s
and
P (5)
s∗
are of the same order.
Remark 36: From (218), it follows that the expected num-
ber E(SD) of symbols stored on the three failed devices and
lost is of the order O((λ/µ)2). Note that the above analysis
does not exclude the possibility that additional device failures
occur during rebuild. However, the corresponding expected
number of additional lost symbols can be ignored because
it is of the order O((λ/µ)3), which is much smaller than
O((λ/µ)2).
D. Data Loss
Data loss during rebuild may occur because of an unrecov-
erable failure of one or more codewords in case of one, two
or three device failures. These three mutually exclusive events
imply that
PDL = PUF,1 + PUF,2 + PDF3 .
(226)
Substituting (137), (178), and (204) into (226) yields
PDL ≈

1 − (m − 1) λ
µ

(1 − qC
1 )
+

1 − q2
C
qC
1 − qC
2
q1 − q2

(m − 1) λ
µ
−
"
(C − 1) C
2
− q2
2
qC
1 − C q1 qC−1
2
+ (C − 1) qC
2
(q1 − q2)2
#
·
· (m − 1)(m − 2)
C2
λ
µ
2
fR ,
+ C − 1
2 C
(m − 1)(m − 2)
λ
µ
2
fR .
(227)
Thus, after some manipulations, (227) yields
PDL ≈ 1 − qC
1

1 − (m − 1) λ
µ

− q2
C
qC
1 − qC
2
q1 − q2
(m − 1) λ
µ
+ q2
2
qC
1 − C q1 qC−1
2
+ (C − 1)qC
2
(q1 − q2)2
(m − 1)(m − 2)
C2
λ
µ
2
fR ,
(228)
where q1 and q2 are given by (126) and (147), respectively.
Substituting (126) and (147) into (228) yields
PDL ≈ 1 − (1 − Ps)C(m−2)
·

[1 + (m − 2)Ps]C
+
m − 1
C (m − 2) Ps
λ
µ

[1 + (m − 2)Ps]C[1 − C(m − 2)Ps]
− [1 + (m − 2)Ps]C − C(m − 2)Ps − 1
C Ps
λ
µ fR

.
(229)
Corollary 16: For Ps ≪ P (2)
s∗ , it holds that
PDL ≈ PDF3 + PUF,2
(179)
≈
PDF3 + A Ps
(230)
(205)(182)
≈
(m − 1)(m − 2)
2
λ
µ
 λ
µ fR + C Ps

, (231)
where PDF3 and A are given by (204) and (180), respectively.
Proof: Immediate from (226) by considering (187).
Remark 37: It follows from (179), (182), and (205) that
the range [0, P (1)
s∗ ) of Ps in which the probability PUF,2 is
much smaller than the probability PDF3 of two device failures
occurring during rebuild is obtained by
PUF,2 ≪ PDF3 ⇔ A Ps ≪ (m − 1)(m − 2)
2
λ
µ
2
fR
⇔ Ps ≪ P (1)
s∗ ,
(232)
where
P (1)
s∗ ≜ 1
C · λ
µ · fR .
(233)
From the above, it follows that PUF,2 ≫ PDF3 for Ps ≫ P (1)
s∗
and, therefore, PDL is dominated by PUF,2.
Remark 38: From (169), it follows that PUF|2 ≈ 1 for
Ps ≫ P (2)
s∗ , which implies that a second device failure leads
to data loss owing to unrecoverable failures. In this case, the
probability of data loss is equal to that of a RAID-5 system in
the absence of latent errors, that is, PUF,2 = PDF2, as derived
in (179) and (177).
Remark 39: From (131) and (162), it follows that P (2)
s∗ ≪
P (4)
s∗ . Consequently, the range [0, P (3)
s∗ ) of Ps in which proba-
bility PUF,2 is much greater than probability PUF,1 is obtained
from (129), (142), and (179) as follows:
PUF,1 ≪ PUF,2
⇔
(
C (m−1)(m−2)
2
P 2
s ≪ A Ps ,
for Ps ≪ P (2)
s∗ ≪ P (4)
s∗
C (m−1)(m−2)
2
P 2
s ≪ PDF,2 , for P (2)
s∗ ≪ Ps ≪ P (4)
s∗
(234)
(177)(182)
⇔
(
C (m−1)(m−2)
2
P 2
s ≪ C
2 (m − 1)(m − 2) λ
µ Ps
C (m−1)(m−2)
2
P 2
s ≪ (m − 1) λ
µ
(235)
⇔ Ps ≪ P (3)
s∗ ,
(236)
275
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

where, by virtue of (162),
P (3)
s∗ ≜







λ
µ ,
for λ
µ ≤ 1
C ·
2
m − 2 = P (2)
s∗
s
2
C(m − 2)
λ
µ ,
for λ
µ ≥ 1
C ·
2
m − 2 = P (2)
s∗
.
(237)
From the above discussion, it follows that for Ps ≫ P (3)
s∗ , PDL
is dominated by PUF,1.
Corollary 17: For Ps ≫ P (2)
s∗ , it holds that
PDL ≈ PUF,1 + PUF,2
(238)
(138)(179)
≈
(
PDF,2 + PDF,1
(m−1)(m−2)
2
C P 2
s , for Ps ≪ P (4)
s∗
PDF,2 + PDF,1 ,
for Ps ≫ P (4)
s∗
(239)
(34)(177)
≈



(m − 1)
 λ
µ + C (m − 2)
2
P 2
s

, for Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ ,
(240)
where PDF,1 and PDF,2 are determined by (34) and (176),
respectively.
Proof: Immediate from (226) by considering (232) and
Ps ≫ P (2)
s∗ ≫ P (1)
s∗
and PDF,1 ≈ 1.
Corollary 18: For small values of λ/µ, it holds that
PDL ≈ PUF|1 + PUF,2 + PDF3
(241)
(184)
≈ PUF|1 + PUF|2 PDF2 + PDF3
(242)
(128)(186)(205)
≈
1 − qC
1 +

1 + 1 − qC
2
log(qC
2 )

(m − 1) λ
µ
+ (m − 1)(m − 2)
2
λ
µ
2
fR .
(243)
where q1, q2, and fR are determined by (126), (147), and (174)
respectively.
Proof: Immediate by substituting (142) into (226).
According to (162) and (237), it holds that P (2)
s∗
⋚ P (3)
s∗
⇔ λ/µ ⋛ 2/[C (m − 2)] = P (2)
s∗ . Depending on the values of
λ/µ, m and C, we consider the following two cases:
Case 1: λ
µ ≥ 1
C ·
2
m−2 = P (2)
s∗ . From (233), (162), (237),
and (131), it holds that P (1)
s∗
≪ P (2)
s∗
≤ P (3)
s∗
< P (4)
s∗ . Also,
from (241), and considering (129), (177), (179), (182), and
(205), it follows that
PDL ≈

















(m−1)(m−2)
2

λ
µ
2
fR ,
for Ps ≪ P (1)
s∗
C (m−1)(m−2)
2
λ
µ Ps ,
for P (1)
s∗ ≪ Ps ≪ P (2)
s∗
(m − 1) λ
µ ,
for P (2)
s∗ ≪ Ps ≪ P (3)
s∗
C (m−1)(m−2)
2
P 2
s ,
for P (3)
s∗ ≪ Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ ,
(244)
where P (1)
s∗ , P (2)
s∗ , P (3)
s∗ , and P (4)
s∗
are determined by (233),
(162), (237), and (131), respectively.
Case 2: λ
µ < 1
C ·
2
m−2 = P (2)
s∗ . From (233), (162), (237),
(131), and (198), it holds that P (1)
s∗ ≪ P (3)
s∗ = P (5)
s∗ = λ/µ <
P (2)
s∗ < P (4)
s∗ . Also, from (241), and considering (129), (179),
(182), and (205), it follows that
PDL ≈











(m−1)(m−2)
2

λ
µ
2
fR ,
for Ps ≪ P (1)
s∗
C (m−1)(m−2)
2
λ
µ Ps ,
for P (1)
s∗ ≪ Ps ≪ P (5)
s∗
C (m−1)(m−2)
2
P 2
s ,
for P (5)
s∗ ≪ Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ ,
(245)
where P (1)
s∗ , P (2)
s∗ , P (4)
s∗ , and P (5)
s∗
are determined by (233),
(162), (131), and (198), respectively.
Remark 40: In the ﬁrst case, that is, when λ/µ
≥
2/[C (m − 2)], (244) implies that PDL, as a function of Ps,
exhibits three plateaus in the intervals [0, P (1)
s∗ ), (P (2)
s∗ , P (3)
s∗ ),
and (P (4)
s∗ , 1], respectively. However, in the second case, that
is, when λ/µ < 2/[C (m − 2)], it holds that P (3)
s∗
< P (2)
s∗
and therefore the second plateau vanishes. In this case, (244)
degenerates to (245).
Unrecoverable failures may occur in conjunction with one,
two or three device failures. Consequently, the probability PUF
of one or more unrecoverable failures during rebuild is
PUF = PUF,1 + PUF,2 + PUF,3
(246)
(213)
≈ PUF,1 + PUF,2
(247)
(142)
≈ PUF|1 + PUF,2
(248)
(128)(186)
≈
1 − qC
1 +

1 + 1 − qC
2
log(qC
2 )

(m − 1) λ
µ ,
(249)
where PUF,1, PUF,2, and PUF,3 are obtained by (137), (178),
and (209), respectively. Also, q1 and q2 are determined by
(126) and (147), respectively. We proceed by considering the
previous two cases:
Case 1: λ
µ ≥ 1
C ·
2
m−2 = P (2)
s∗ . From (248) and considering
(129), (177), (179), and (182), it follows that
PUF ≈











C (m−1)(m−2)
2
λ
µ Ps ,
for Ps ≪ P (2)
s∗
(m − 1) λ
µ ,
for P (2)
s∗ ≪ Ps ≪ P (3)
s∗
C (m−1)(m−2)
2
P 2
s ,
for P (3)
s∗ ≪ Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ ,
(250)
where P (1)
s∗ , P (2)
s∗ , P (3)
s∗ , and P (4)
s∗
are determined by (233),
(162), (237), and (131), respectively.
Case 2: λ
µ < 1
C ·
2
m−2 = P (2)
s∗ . From (248) and considering
(129), (179), and (182), it follows that
PUF ≈





C (m−1)(m−2)
2
λ
µ Ps ,
for Ps ≪ P (5)
s∗
C (m−1)(m−2)
2
P 2
s ,
for P (5)
s∗ ≪ Ps ≪ P (4)
s∗
1 ,
for Ps ≫ P (4)
s∗ ,
(251)
where P (4)
s∗ and P (5)
s∗ are given by (131) and (198), respectively.
276
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

E. Amount of Data Loss
As discussed in Section VI-D, data loss during rebuild
may occur because of two additional (second and third) device
failures or an unrecoverable failure of one or more codewords,
or a combination thereof. Note that in all cases, data loss
cannot involve only parity data, but also loss of user data.
Data loss during rebuild may occur because of unrecov-
erable failures in conjunction with one, two or three device
failures. Consequently, the expected number E(SU) of symbols
lost due to unrecoverable failures is obtained as follows:
E(SU) = E(SU,1) + E(SU,2) + E(SU,3) ,
(252)
where E(SU,1), E(SU,2), and E(SU,3) are determined by
(141), (192), and (223), respectively. Moreover, according to
(197) and Remark 34, it holds that
E(SU) ≈
(
E(SU,2) ,
for Ps ≪ P (5)
s∗
E(SU,1) ,
for Ps ≫ P (5)
s∗
(253)
(144)(196)
≈
(
3
2 C (m − 1)(m − 2) λ
µ Ps
for Ps ≪ P (5)
s∗
3
2 C (m − 1) (m − 2) P 2
s , for P (5)
s∗ ≪ Ps ≪
1
m−1,
(254)
where P (5)
s∗
is determined by (198).
The expected total number E(S) of symbols lost is
E(S) = E(SD) + E(SU) ,
(255)
where E(SD) and E(SU) are determined by (218) and (252),
respectively.
Remark 41: It follows from (143), (195), (222), and (252)
that
E(S) ≈ C

E(L1) + 1
2 E(L2) (m − 1) λ
µ
+ (m − 1)(m − 2)
2
λ
µ
2
fR

(256)
(135)(150)
≈
C (m − 1)(m − 2)
2
"λ
µ
2
fR + 3 λ
µ Ps + 3 P 2
s
#
,
for Ps ≪
1
m − 1 ,
(257)
where E(L1), E(L2), and fR are determined by (134), (149),
and (174), respectively. In particular, for Ps = 0, it holds that
E(S) = E(SD) ≈ (1/2) C (m − 1) (m − 2) (λ/µ)2 fR.
Remark 42: When Ps increases and approaches 1, from
(134), (141), (149), (190), (191), (192), (218), (219), (220),
(221), (252), and (255), it follows that E(S) approaches C m.
This is intuitively obvious because when Ps = 1, all C m
symbols stored in the system are lost owing to unrecoverable
errors.
We now proceed to derive E(Q), the expected amount of
lost user data. First, we note that the expected number of lost
user symbols is equal to the product of the storage efﬁciency to
the expected number of lost symbols. Consequently, it follows
from (1) that
E(Q) = l
m E(S) s
(3)
=
l
m
E(S)
C
c ,
(258)
where E(S) is given by (255) and s denotes the symbol size.
Similar expressions for the expected amounts E(QDF3) and
E(QUF) of lost user data due to device and unrecoverable
failures are obtained from E(SD) and E(SU), respectively, as
follows:
E(QDF3) =
l
m E(SD) s
(3)
=
l
m
E(SD)
C
c
(259)
(222)
≈
l
m
(m − 1)(m − 2)
2
λ
µ
2
fR c
(260)
and
E(QUF) = l
m E(SU) s
(3)
=
l
m
E(SU)
C
c
(261)
(254)
≈
(
3 l
m
(m−1)(m−2)
2
λ
µ c Ps ,
for Ps ≪ P (5)
s∗
3 l
m
(m−1)(m−2)
2
c P 2
s ,
for P (5)
s∗ ≪ Ps ≪
1
m−1 ,
(262)
where E(SD), E(SU), and P (5)
s∗
are determined by (218),
(252), and (198), respectively.
Substituting (256) and (257) into (258) yields
E(Q) ≈
l
m

E(L1) + 1
2 E(L2) (m − 1) λ
µ
+ (m − 1)(m − 2)
2
λ
µ
2
fR

c (263)
≈
l
m
(m − 1)(m − 2)
2
"λ
µ
2
fR + 3 λ
µ Ps + 3 P 2
s
#
c ,
for Ps ≪
1
m − 1 , (264)
where E(L1), E(L2), and fR are obtained by (134), (149),
and (174), respectively. In particular, for Ps = 0, it holds that
E(Q) = E(QDF3), which is determined by (260).
From (255), (258), (259), and (261), it holds that
E(Q) = E(QDF3) + E(QUF) .
(265)
Also, the expected amounts E(QUF,1), E(QUF,2), and
E(QUF,3) of lost user data due to unrecoverable failures in
conjunction with one, two, and three device failures are as
follows:
E(QUF,1) = l
m
E(SU,1)
C
c ,
(266)
E(QUF,2) = l
m
E(SU,2)
C
c ,
(267)
and
E(QUF,3) = l
m
E(SU,3)
C
c ,
(268)
where E(SU,1), E(SU,2), and E(SU,3) are determined by
(141), (192), and (223), respectively.
Remark 43: From (253), (261), (266), and (267), it follows
that
E(QUF) ≈
(
E(QUF,2) ,
for Ps ≪ P (5)
s∗
E(QUF,1) ,
for Ps ≫ P (5)
s∗ .
(269)
277
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Remark 44: Note that the inequalities derived in Remark
34 together with (224) and (225), and by virtue of (259) and
(261), imply that
E(QUF) ≪ E(QDF3) ⇔ Ps ≪ P (5)
s∗ ,
(270)
where P (5)
s∗
is determined by (198).
Also, from (260), (262), (269), and (270), it follows that
E(Q) ≈
(
E(QDF3) ,
for Ps ≪ P (5)
s∗
E(QUF) ,
for Ps ≫ P (5)
s∗
(271)
≈



l
m
(m−1)(m−2)
2

λ
µ
2
fR c , for Ps ≪ P (5)
s∗
3 l
m
(m−1)(m−2)
2
c P 2
s ,
for P (5)
s∗ ≪ Ps ≪
1
m−1 ,
(272)
where P (5)
s∗
is determined by (198).
Remark 45: When Ps increases and approaches 1, from
(258) and according to Remark 42, it follows that E(Q) ap-
proaches c l. This is intuitively obvious because when Ps = 1,
upon the ﬁrst device failure, the entire amount c l of user data
stored in the RAID-6 array is lost owing to unrecoverable
errors.
F. Reliability Metrics
The MTTDL is obtained by substituting (229) into (9).
From (229), it follows that MTTDL is insensitive to device fail-
ure distribution, but it depends on the rebuild time distribution
through fR and on their means 1/λ and 1/µ, respectively. In
particular, the normalized MTTDL depends only on fR and the
ratio λ/µ of their means. Note that for Ps = 0, n = m = N,
and for an exponential rebuild time distribution, for which it
holds that fR = E(R2)/[E(R)]2 = 2, (231) implies that
MTTDL ≈
µ2
N(N − 1)(N − 2) λ3 ,
(273)
which is the same result as that reported in [3]. Also, for small
values of Ps, (231) yields
MTTDL ≈
µ2
N(N − 1)(N − 2) λ2 
The value of E(H) normalized to c is obtained by substi-
tuting (245) and (272) into (11) as follows:
E(H)
c
≈









l
m ,
for Ps ≪ P (1)
s∗
l
m
λ
µ fR
1
C Ps ,
for P (1)
s∗ ≪ Ps ≪ P (5)
s∗
3 l
m
1
C ,
for P (5)
s∗ ≪ Ps ≪ P (4)
s∗
3 l
m
(m−1)(m−2)
2
P 2
s ,
for P (4)
s∗ ≪ Ps ≪
1
m−1 ,
(282)
where P (1)
s∗ , P (4)
s∗ , and P (5)
s∗
are determined by (233), (131),
and (198), respectively. Note that E(H), as a function of Ps,
exhibits two plateaus in the intervals [0, P (1)
s∗ ) and (P (5)
s∗ , P (4)
s∗ ),
respectively.
Analogous to (119), the expected amounts E(HDF3) and
E(HUF) of user data lost due to device and unrecoverable
failures, given that such failures have occurred, are
E(HDF3) = E(QDF3)
PDF3
,
and
E(HUF) = E(QUF)
PUF
,
(283)
respectively. Also, analogous to (120), the relation between
E(H), E(HDF3), and E(HUF) is
E(H) = PDF3
PDL
E(HDF3) + PUF
PDL
E(HUF) .
(284)
Substituting (205) and (260) into (283) yields
E(HDF3)/c ≈
l
m .
(285)
Also, depending on the values of λ/µ, m and C and for the
two cases considered in Section VI-D, the E(HUF) normalized
to c is obtained by substituting (250) or (251), and (262) into
(283) as follows:
Case 1: λ
µ ≥ 1
C ·
2
m−2 = P (2)
s∗ .
E(HUF)/c
≈





















3 l
m
1
C ,
for Ps ≪ P (2)
s∗
3 l
m
m−2
2
Ps ,
for P (2)
s∗ ≪ Ps ≪ P (3)
s∗
3 l
m
λ
µ
1
C Ps ,
for P (3)
s∗ ≪ Ps ≪ P (4,5)
min
3 l
m max

(m−1)(m−2)
2
λ
µ Ps ,
1
C

,
for P (4,5)
min
≪ Ps ≪ P (4,5)
max
3 l
m
(m−1)(m−2)
2
P 2
s ,
for P (4,5)
max
≪ Ps ≪
1
m−1 ,
(286)
where P (1)
s∗ , P (2)
s∗ , P (3)
s∗ , P (4,5)
min
and P (4,5)
max
are determined by
(233), (162), (237), and (280), respectively. Note that E(HUF)
generally increases with Ps, but in the interval (P (3)
s∗ , P (4,5)
min )
decreases with Ps.
Case 2: λ
µ < 1
C ·
2
m−2 = P (2)
s∗ .
E(HUF)
c
≈
(
3 l
m
1
C ,
for Ps ≪ P (4)
s∗
3 l
m
(m−1)(m−2)
2
P 2
s , for P (4)
s∗ ≪ Ps ≪
1
m−1 ,
(287)
where P (4)
s∗
is determined by (131).
VII.
NUMERICAL RESULTS
A. A RAID-5 System
We consider a RAID-5 array comprised of n = 8 devices
with N = m = 8, l = 7, λ/µ = 0.001, capacity c = 1TB,
and symbol size s equal to a sector size of 512 bytes, such
that the number of codewords stored in a device is C = c/s =
1.9×109.
The probability of data loss PDL is determined by (83)
as a function of the unrecoverable error probability Ps of a
symbol (sector), and shown in Figure 2. According to (33), the
probability PDF2 of a device failure occurring during rebuild
is independent of the unrecoverable symbol error probability,
as indicated by the horizontal dotted blue line in Figure
2. It follows from (82) and (87) that, for Ps ≪ P (1)
s
, an
unrecoverable failure most likely occurs in the case of one
device failure with the corresponding probability PUF,1 being
much smaller than the probability PDF2 of encountering a
device failure during rebuild, as shown in Figure 2. However,
when Ps is in the range (P (1)
s
, P (2)
s
), PUF,1 becomes greater
than PDF2, which implies that a data loss is most likely caused
by an unrecoverable failure that occurs in the case of one
device failure. In particular, for Ps ≪ P (2)
s
, and according
to (39), PUF,1 increases linearly with Ps, as indicated by the
dotted green line in Figure 2. It follows from (88) and (21),
and for the parameters considered here, that P (1)
s
= 5×10−13
and P (2)
s
= 7×10−11, as shown in Figure 2. For Ps ≫ P (2)
s
,
and according to (89), (91), and (92), it follows that PUF,1, PUF
and, in turn, PDL approach 1 and are essentially independent
of Ps. In this range and according to (19), a device failure
leads to data loss because one of the codewords is almost
surely corrupted. Note that this also holds in the case when
a subsequent (second) device failure occurs during rebuild.
Consequently, and according to (66), PUF,2 approaches PDF2, as
indicated by the dotted magenta line in Figure 2. As expected,
and according to (86), the total probability of data loss PDL
increases monotonically with Ps and exhibits two plateaus in
the intervals [0, P (1)
s
) and (P (2)
s
, 1], respectively.
The normalized λ MTTDL measure is obtained from (113)
and is shown in Figure 3 as a function of the unrecoverable
symbol error probability. The various regions and plateaus are
also depicted and correspond to the ranges discussed above
regarding the probability of data loss.
The normalized expected amount E(Q)/c of lost user
data relative to the amount of data stored in a device is
obtained from (99) as a function of the unrecoverable symbol
error probability Ps, and shown in Figure 4. According to
(101), the normalized expected amount E(QDF2)/c of user
data lost due to a subsequent device failure during rebuild is
independent of the unrecoverable symbol error probability, as
indicated by the horizontal dotted blue line in Figure 4. The
normalized expected amount E(QUF)/c of user data lost due
to unrecoverable failures, and according to (109), is roughly
equal to E(QUF,1)/c, which is determined by (107) and shown
in Figure 4. In particular, for small values of Ps, and according
to (103), it increases linearly with Ps, as indicated by the
dotted green line in Figure 4. Also, the expected amount
E(QUF,2) of user data lost due to unrecoverable failures in
conjunction with two device failures, and according to Remark
279
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−8
10
−6
10
−4
10
−2
10
0
 5e−13  7e−11
Unrecoverable Symbol Error Probability ( Ps )
Probability of Data Loss
 
 
PDL
PDF2
PUF,1
PUF,2
Figure 2.
Probability of data loss PDL for a RAID-5 array with latent errors
(λ/µ = 0.001, m = N = 8, l = 7, c = 1TB, and s = 512 B).
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−1
10
0
10
1
10
2
10
3
10
4
Unrecoverable Symbol Error Probability ( Ps )
λ MTTDL
Figure 3.
Normalized MTTDL for a RAID-5 array with latent errors (λ/µ =
0.001, m = N = 8, l = 7, c = 1TB, and s = 512 B).
6, is much smaller than E(QUF,1), as indicated by the dotted
magenta line in Figure 4. According to (110), E(QUF) exceeds
E(QDF2) when Ps ≫ P (3)
s
= 5×10−4. As expected, and
according to (105), the total expected amount E(Q) of lost
user data increases monotonically with Ps. In particular, when
Ps approaches 1 and according to Remark 14, the normalized
expected amount E(Q)/c of lost user data approaches l = 7,
as all user data in the array is lost.
The normalized EAFDL/λ measure is obtained by substi-
tuting (99) into (10) and is shown in Figure 5 as a function
of the unrecoverable symbol error probability. Equation (10)
suggests that this measure is proportional to E(Q), which im-
plies that the above discussion regarding the behavior of E(Q)
also holds here and therefore EAFDL increases monotonically
with Ps.
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−10
10
−5
10
0
 5e−04
Unrecoverable Symbol Error Probability ( Ps )
E(Q) / c
 
 
Q
QDF2
QUF,1
QUF,2
Figure 4.
Normalized amount of data loss E(Q) for a RAID-5 array with
latent errors (λ/µ = 0.001, m = N = 8, l = 7, c = 1TB, and s = 512 B).
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−5
10
−4
10
−3
10
−2
10
−1
10
0
10
1
Unrecoverable Symbol Error Probability ( Ps )
EAFDL / λ
Figure 5.
Normalized EAFDL for a RAID-5 array with latent errors (λ/µ =
0.001, m = N = 8, l = 7, c = 1TB, and s = 512 B).
The normalized expected amount E(H)/c of lost user
data, given that a data loss has occurred, relative to the
amount of data stored in a device is obtained from (118)
as a function of the unrecoverable symbol error probability
Ps and shown in Figure 6. In contrast to the PDL, EAFDL,
and E(Q) measures that increase monotonically with Ps, we
observe that E(H) does not do so. Data losses occur because
of a subsequent device failure or unrecoverable failures of
codewords, or a combination thereof. According to (123), the
expected amount E(HDF2) of lost user data associated with a
subsequent device failure, given that such a device failure has
occurred during rebuild, is independent of the unrecoverable
symbol error probability, as indicated by the horizontal dotted
blue line in Figure 6. Such a device failure causes the loss
of a large number of symbols as opposed to a small number
of additional symbols that may be lost owing to unrecoverable
failures. The expected amount E(HUF) of user data lost due to
280
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−10
10
−5
10
0
 5e−13  7e−11
 5e−04
Unrecoverable Symbol Error Probability ( Ps )
E(H) / c
 
 
H
HDF2
HUF
Figure 6.
Normalized E(H) for a RAID-5 array with latent errors (λ/µ =
0.001, m = N = 8, l = 7, c = 1TB, and s = 512 B).
unrecoverable failures, given that such failures have occurred,
is obtained from (124) and shown in Figure 6. According to
Remark 1, (24), and (28), when Ps ≪ P (2)
s
= 7×10−11,
an unrecoverable failure is most likely caused by a single
corrupted codeword that loses two symbols. Consequently,
and according to (125), for Ps ≪ P (2)
s
, the expected amount
E(HUF) of user data lost due to unrecoverable failures, given
that such unrecoverable failures have occurred, is independent
of Ps, as indicated by the horizontal part of the dotted
green line in Figure 6. Also, the amount of lost data, which
corresponds to the two lost symbols, is negligible compared
with the amount of data lost due to a subsequent device
failure, that is, E(HUF) ≪ E(HDF2). According to (24) and
(28), when Ps ≫ P (2)
s
, unrecoverable failures are most likely
caused by multiple corrupted codewords that each loses two
symbols. Moreover, (24) and (125) imply that the number of
the corrupted codewords and the corresponding amount of lost
data increase linearly with Ps, as indicated by the dotted green
line shown in Figure 6.
The combined expected amount E(H) of lost user data,
given that data loss has occurred, is an average of E(HDF2)
and E(HUF) with the weights determined in (120). For Ps ≪
P (1)
s
= 5×10−13, a data loss is most likely attributed to two
device failures, which results in the ﬁrst plateau obtained in
(123). However, for values of Ps in the range (5×10−13,
7×10−11), this is reversed, meaning that an unrecoverable
failure is more likely to occur than a device failure, and this
causes PDL to increase as shown in Figure 2. Consequently,
as the weight of the E(HDF2) component decreases, so does
E(H). Subsequently, as Ps increases further, this weight along
with E(H) can no longer decrease because PDL has reached
its maximum value of 1. But, E(H) cannot increase either
because, although E(HUF) increases, it still remains negligible
compared with E(HDF2). As a result, E(H) stabilizes at the
second plateau level at (l/m) (m − 1) (λ/µ) c, as obtained by
(121). As Ps increases further and exceeds P (3)
s
= 5×10−4,
according to (110), the increasing amount of data lost due to
unrecoverable failures E(QUF) far exceeds E(QDF2), which in
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−8
10
−6
10
−4
10
−2
10
0
 1e−12  2e−10
 4e−07
 5e−06
Unrecoverable Symbol Error Probability ( Ps )
Probability of Data Loss
 
 
PDL
PDF3
PUF,1
PUF,2
PUF,3
Figure 7.
Probability of data loss PDL for a RAID-6 array with latent errors
(λ/µ = 0.001, fR = 2, m = N = 8, l = 6, c = 1TB, and s = 512 B).
turn leads E(H) to be essentially equal to E(HUF) and there-
fore to increase with Ps. In particular, when Ps approaches
1, and according to Remark 17, the amount l c of user data
stored in the array is lost owing to unrecoverable errors, which
in turn implies that the normalized expected amount E(H)/c
of lost user data approaches l = 7.
B. A RAID-6 System
We consider a RAID-6 array with the same characteristics
as the RAID-5 array considered in the previous section, except
that the parameter l is now equal to 6. Also, in contrast to a
RAID-5 system, some of the reliability metrics for a RAID-6
system depend on the rebuild time distribution. We consider
a rebuild time distribution, such as the exponential one, for
which it holds that E(R2) = 2 [E(R)]2, which implies that
fR = 2.
The probability of data loss PDL is determined by (229)
as a function of the unrecoverable error probability Ps of
a symbol (sector), and shown in Figure 7. According to
(204), the probability PDF3 of two device failures occurring
during rebuild is independent of the unrecoverable symbol
error probability, as indicated by the horizontal dotted blue
line in Figure 7. It follows from (230) and (232) that, for
Ps ≪ P (1)
s∗ , an unrecoverable failure most likely occurs in
conjunction with two device failures with the corresponding
probability PUF,2 being much smaller than the probability PDF3
of three device failures, as shown in Figure 7. However, when
Ps is in the range (P (1)
s∗ , P (2)
s∗ ), PUF,2 becomes greater than
PDF3, which implies that data loss is most likely caused by
an unrecoverable failure that occurs in conjunction with two
device failures. In particular, for Ps ≪ P (2)
s∗ , and according
to (179), PUF,2 increases linearly with Ps, as indicated by the
dotted cyan line in Figure 7. It follows from (233) and (162),
and for the parameters considered here, that P (1)
s∗ = 1×10−12
and P (2)
s∗
= 2×10−10, as shown in Figure 7. It follows from
(230) and (232) that, for Ps ≫ P (1)
s∗ , the probability PUF of
encountering an unrecoverable failure is much greater than that
281
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−1
10
0
10
1
10
2
10
3
10
4
Unrecoverable Symbol Error Probability ( Ps )
λ MTTDL
Figure 8.
Normalized MTTDL for a RAID-6 array with latent errors (λ/µ =
0.001, fR = 2, m = N = 8, l = 6, c = 1TB, and s = 512 B).
of encountering a data loss due to three device failures. In
particular, from (169), (177), and (179), it follows that, when
Ps ≫ P (2)
s∗ , PUF|2 approaches 1 and, in turn, PUF,2 approaches
PDF2 and they are essentially independent of Ps. In this range
and according to Remark 38, a second device failure leads to
data loss because one of the remaining codewords is almost
surely corrupted, which implies that the probability of data loss
is equal to that of a RAID-5 system in the absence of latent
errors. Note that this also holds in the case when a subsequent
(third) device failure occurs during rebuild. Consequently, and
according to (210), PUF,3 approaches PDF3, as indicated by the
dotted magenta line in Figure 7.
Subsequently, according to Remark 39, when Ps ≫ P (3)
s∗ ,
the probability PUF,1 of data loss due to unrecoverable failures
in the case of one device failure becomes greater than PUF,2,
which implies that a data loss is most likely caused by an
unrecoverable failure in conjunction with one device failure.
In particular, for Ps ≪ P (4)
s∗ , and according to (138) and
(129), PUF,1 increases quadratically with Ps, as indicated by the
dotted green line in Figure 7. It follows from (81) and (131),
and for the parameters considered here, that P (3)
s∗ = 4×10−7
and P (4)
s∗
= 5×10−6, as shown in Figure 7. For Ps ≫ P (4)
s∗ ,
and according to (187), (244), (247), and (250), it follows that
PUF,1, PUF and, in turn, PDL approach 1 and are essentially
independent of Ps. In this range and according to (129), a
device failure leads to data loss because one of the codewords
is almost surely corrupted. As expected, the total probability
of data loss PDL increases monotonically with Ps and exhibits
three plateaus in the intervals [0, P (1)
s∗ ), (P (2)
s∗ , P (3)
s∗ ), and
(P (4)
s∗ , 1], respectively.
The normalized λ MTTDL measure is obtained by substi-
tuting (229) into (9) and is shown in Figure 8 as a function
of the unrecoverable symbol error probability. The various
regions and plateaus are also depicted and correspond to the
ranges discussed above regarding the probability of data loss.
The normalized expected amount E(Q)/c of lost user data
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−10
10
−5
10
0
 1e−03
Unrecoverable Symbol Error Probability ( Ps )
E(Q) / c
 
 
Q
QDF3
QUF,1
QUF,2
QUF,3
Figure 9.
Normalized amount of data loss E(Q) for a RAID-6 array with
latent errors (λ/µ = 0.001, fR = 2, m = N = 8, l = 6, c = 1TB, and
s = 512 B).
relative to the amount of data stored in a device is obtained
from (258) as a function of the unrecoverable symbol error
probability Ps, and shown in Figure 9. According to (260), the
normalized expected amount E(QDF3)/c of user data lost due
to two subsequent device failures during rebuild is independent
of the unrecoverable symbol error probability, as indicated by
the horizontal dotted blue line in Figure 9. The normalized
expected amount E(QUF)/c of user data lost due to unrecov-
erable failures, when Ps ≪ P (5)
s∗
= 10−3 and according to
(262) and (269), is roughly equal to E(QUF,2)/c and increases
linearly with Ps, as indicated by the dotted cyan line in Figure
9. For Ps ≫ P (5)
s∗
= 10−3, E(QUF)/c is roughly equal to
E(QUF,1)/c and increases quadratically with Ps, as indicated
by the dotted green line in Figure 9. Also, the expected amount
E(QUF,3) of user data lost due to unrecoverable failures
in conjunction with three device failures, and according to
Remark 34, is much smaller than E(QUF,2), as indicated by the
dotted magenta line in Figure 9. According to (270), E(QUF)
exceeds E(QDF3) when Ps ≫ P (5)
s∗
= 10−3. As expected,
the total expected amount E(Q) of lost user data increases
monotonically with Ps. In particular, when Ps approaches 1
and according to Remark 12, the normalized expected amount
E(Q)/c of lost user data approaches l = 6, as all user data in
the array is lost.
The normalized EAFDL/λ measure is obtained by substi-
tuting (258) into (10) and is shown in Figure 10 as a function
of the unrecoverable symbol error probability. Equation (10)
suggests that this measure is proportional to E(Q), which
implies that the preceding discussion regarding the behavior
of E(Q) also holds here and therefore EAFDL increases
monotonically with Ps.
The normalized expected amount E(H)/c of lost user data,
given that a data loss has occurred, relative to the amount of
data stored in a device is obtained from (279) as a function of
the unrecoverable symbol error probability Ps and shown in
Figure 11. In contrast to the PDL, EAFDL, and E(Q) measures
that increase monotonically with Ps, we observe that E(H)
282
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−5
10
−4
10
−3
10
−2
10
−1
10
0
10
1
Unrecoverable Symbol Error Probability ( Ps )
EAFDL / λ
Figure 10. Normalized EAFDL for a RAID-6 array with latent errors (λ/µ =
0.001, fR = 2, m = N = 8, l = 6, c = 1TB, and s = 512 B).
does not do so. Data losses occur because of two subsequent
device failures or unrecoverable failures of codewords, or a
combination thereof. According to (285), the expected amount
E(HDF3) of lost user data associated with two subsequent
device failures, given that such device failures have occurred
during rebuild, is independent of the unrecoverable symbol
error probability, as indicated by the horizontal dotted blue
line in Figure 11. Such device failures cause the loss of a
large number of symbols as opposed to a small number of
additional symbols that may be lost owing to unrecoverable
failures. The expected amount E(HUF) of user data lost due to
unrecoverable failures, given that such failures have occurred,
is determined by (286) and shown in Figure 11. According
to (236), when Ps ≪ P (3)
s∗ , PUF,2 is much greater than PUF,1,
which implies that an unrecoverable failure most likely occurs
in conjunction with two device failures. According to Corollary
11, (151), and (167), when Ps ≪ P (2)
s∗
= 2×10−10, an
unrecoverable failure is most likely caused by a single cor-
rupted codeword that loses three symbols and is encountered
after the second device failure. Consequently, and according
to (286), for Ps ≪ P (2)
s∗ , the expected amount E(HUF) of
user data lost due to unrecoverable failures, given that such
unrecoverable failures have occurred, is independent of Ps, as
indicated by the horizontal part of the dotted green line in
Figure 11. Also, the amount of lost data, which corresponds
to the three lost symbols, is negligible compared with the
amount of data lost due to a subsequent device failure, that
is, E(HUF) ≪ E(HDF2). According to (151) and (167), when
Ps ≫ P (2)
s
, unrecoverable failures are most likely caused by
multiple corrupted codewords that each loses three symbols
and are encountered after the second device failure. Moreover,
(167) and (286) imply that the number of corrupted codewords
and the corresponding amount of lost data increase linearly
with Ps in (P (2)
s∗ , P (3)
s∗ ), as indicated by the dotted green line
in Figure 11. Subsequently, when Ps ≫ P (3)
s∗ , and according to
(133) and (136), unrecoverable failures may also be caused by
a single corrupted codeword that is encountered in conjunction
with one device failure and loses three symbols. This in turn
10
−18 10
−16 10
−14 10
−12 10
−10 10
−8 10
−6 10
−4 10
−2
10
0
10
−10
10
−5
10
0
 1e−12  2e−10
 4e−07
 5e−06
 1e−03
Unrecoverable Symbol Error Probability ( Ps )
E(H) / c
 
 
H
HDF3
HUF
Figure 11.
Normalized E(H) for a RAID-6 array with latent errors (λ/µ =
0.001, fR = 2, m = N = 8, l = 6, c = 1TB, and s = 512 B).
results in a reduction of the amount of lost data, as expressed
by (286). When Ps ≫ P (4)
s∗ , and according to (129), (133), and
(136), the expected number of corrupted codewords in the case
of one device failure also increases. In particular, unrecover-
able failures are more likely encountered in conjunction with
one device failure, but although E(hufo) increases, it remains
negligible compared with E(huft), which also increases. This
in turn results in an increase of the amount of lost data, as
expressed by (286).
The combined expected amount E(H) of lost user data,
given that data loss has occurred, is an average of E(HDF3)
and E(HUF) with the weights determined in (284). For Ps ≪
P (1)
s∗ = 1×10−12, a data loss is most likely attributed to three
device failures, which results in the ﬁrst plateau obtained in
(285). However, for higher values of Ps, this is reversed, in that
it becomes more likely to encounter an unrecoverable failure
than a device failure. As in the case of RAID-5, E(H) initially
decreases, but in the case of RAID-6 it exhibits three plateaus,
as obtained in (279). As Ps increases further and exceeds
P (5)
s∗
= 10−3, according to (270), the increasing amount of
data lost due to unrecoverable failures E(QUF) far exceeds
E(QDF3), which in turn leads E(H) to be essentially equal to
E(HUF) and therefore to increase with Ps. In particular, when
Ps approaches 1, and according to Remark 45, the amount l c
of user data stored in the array is lost owing to unrecoverable
errors, which in turn implies that the normalized expected
amount E(H)/c of lost user data approaches l = 7.
VIII.
DISCUSSION
As discussed in Section III, ﬁeld results suggest that the
probability of unrecoverable sector errors lies in the range
(4.096×10−11, 5×10−9). Figures 3 and 8 show that MTTDL is
signiﬁcantly degraded by the presence of latent errors, whereas
Figures 5 and 10 reveal that EAFDL is practically unaffected
in this range. When the probability of unrecoverable sector
errors lies in the range of practical interest, the probability
of an unrecoverable failure is much greater than that of a data
loss due to device failures, which degrades MTTDL. However,
283
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the amount of data corresponding to sectors lost due to latent
errors is negligible compared with the amount of data lost due
to device failures, which in turn implies that EAFDL remains
practically unaffected. In contrast, Figures 6 and 11 reveal that
the expected amount E(H) of lost user data, given that data
loss has occurred, decreases in the range of practical interest.
This is because when a data loss occurs, it is more likely
caused by unrecoverable failures that involve the loss of a small
number of sectors rather than by multiple device failures that
result in a signiﬁcantly greater amount of lost data.
It follows from (88) and (81) that
P (1)
s
= 1
C · λ
µ
≪
1
2 · C + 1
C
· λ
µ = P (3)
s
.
(288)
Similarly, from (233) and (198), it holds that
P (1)
s∗ = 1
C · λ
µ · fR
≪
λ
µ = P (5)
s∗ .
(289)
Consequently, increasing Ps ﬁrst affects PDL, MTTDL, and
E(H) and then E(Q) and EAFDL.
IX.
CONCLUSIONS
The effect of latent sector errors on the reliability of
RAID-5 and RAID-6 data storage systems was investigated.
A methodology was developed for deriving the Mean Time
to Data Loss (MTTDL) and the Expected Annual Fraction of
Data Loss (EAFDL) reliability metrics analytically. Closed-
form expressions capturing the effect of unrecoverable latent
errors were obtained. Our results demonstrate that RAID-6
storage systems achieve a higher reliability than that of RAID-
5 storage systems. We established that the reliability of storage
systems is adversely affected by the presence of latent errors.
The results demonstrated that the effect of latent errors depends
on the relative magnitudes of the probability of a latent error
versus the probability of a device failure. It was found that,
for actual values of the unrecoverable sector error probability,
MTTDL is adversely affected by the presence of latent errors,
whereas EAFDL is not.
Extending the methodology developed to derive the
MTTDL and EAFDL reliability metrics of erasure-coded sys-
tems in the presence of unrecoverable latent errors is a subject
of further investigation.
APPENDIX A
Proof of Corollary 4.
For small values of x, it holds that
(1 + x)n ≈ 1 + nx + n(n − 1)
2
x2 + n(n − 1)(n − 2)
6
x3
+ n(n − 1)(n − 2)(n − 3)
24
x4 .
(290)
Consequently, for x = −Ps and n = (m − 1) C, (290) yields
qC
1
(14)
= (1 − Ps)(m−1)C
≈ 1 − (m − 1)C Ps + (m − 1)C[(m − 1)C − 1]
2
P 2
s . (291)
By setting C = 1, (291) yields
q1 ≈ 1 − (m − 1) Ps + (m − 1)(m − 2)
2
P 2
s .
(292)
Substituting (291) and (292) into (56) yields
PUF in S1|2 ≈ 1 − (m − 1)C Ps − (m−1)C[(m−1)C−1]
2
P 2
s
C [(m − 1) Ps − (m−1)(m−2)
2
P 2s ]
= 1 − 1 − [(m−1)C−1]
2
Ps
1 − m−2
2
Ps
≈ (C − 1)(m − 1)
2
Ps .
(293)
This approximation holds when (1/2)(C − 1)(m − 1) Ps ≪ 1
or, equivalently, Ps ≪ 2/[(C − 1)(m − 1)], which is roughly
twice the value of P (2)
s
as given by (21).
APPENDIX B
Proof of Corollary 5.
For x = −Ps and n = (m − 2) C, (290) yields
pC
2
(51)
= (1 − Ps)(m−2)C
≈ 1 − (m − 2)C Ps + (m − 2)C[(m − 2)C − 1]
2
P 2
s . (294)
By setting C = 1, (294) yields
p2 ≈ 1 − (m − 2) Ps + (m − 2)(m − 3)
2
P 2
s .
(295)
Substituting (294) and (295) into (61) yields
PUF in S2|2 ≈ 1 − [1 − (m − 2)Ps] 1 − C(m−2)−1
2
Ps
1 − m−3
2
Ps
≈
(C+1)(m−2)
2
Ps
1 − m−3
2
Ps
≈ (C + 1)(m − 2)
2
Ps . (296)
This approximation holds when (1/2)(C + 1)(m − 2) Ps ≪ 1
or, equivalently, Ps ≪ 2/[(C + 1)(m − 2)], which for large C
is roughly equal to 2/[C(m − 2)].
APPENDIX C
Proof of Corollary 6.
From (14) and (51) it follows that
q1 = (1 − Ps) p2 .
(297)
Then it holds that
p2
C
pC
2 − qC
1
p2 − q1
(297)
=
p2
C
[1 − (1 − Ps)C]pC
2
Ps p2
= [1 − (1 − Ps)C]
C Ps
pC
2
(52)
≈ [1 − (1 − CPs + C(C−1)
2
P 2
s )]
C Ps
[1 − (m − 2) Ps]C
≈

1 − (C − 1)
2
Ps

[1 − C (m − 2) Ps]
= 1 −
C − 1
2
+ (m − 2) C

Ps + O(P 2
s )
(298)
Substituting (298) into (63) yields (64).
284
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

APPENDIX D
Proof of Corollary 10.
For x = (m − 2) Ps and n = C, (290) yields
[1+ (m − 2) Ps]C
≈ 1 + C(m − 2) Ps + C(C − 1)
2
[(m − 2) Ps]2
+ C(C − 1)(C − 2)
6
[(m − 2) Ps]3
+ C(C − 1)(C − 2)(C − 3)
24
[(m − 2) Ps]4 . (299)
Also, for x = −Ps and n = (m − 2) C, (290) yields
(1 − Ps)(m−2) C
≈ 1 − (m − 2) CPs + (m − 2) C[(m − 2) C − 1]
2
P 2
s
− (m − 2) C[(m − 2) C − 1][(m − 2) C − 2]
6
P 3
s
+ (m − 2) C[(m − 2) C − 1][(m − 2) C − 2][(m − 2) C − 3]
24
P 4
s .
(300)
From (126), (299), and (300), it follows that
qC
1 ≈ 1 − C(m − 1)(m − 2)
2
P 2
s + C(m − 1)(m − 2)(m − 3)
3
P 3
s
+ C(m − 1)(m − 2)
8
[C(m − 1)(m − 2) − 2(m2 − 5m + 7)]P 4
s .
(301)
By setting C = 1, (301) yields
q1 ≈ 1 − (m − 1)(m − 2)
2
P 2
s + (m − 1)(m − 2)(m − 3)
3
P 3
s
− (m − 1)(m − 2)(m − 3)(m − 4)
8
P 4
s .
(302)
Substituting (301) and (302) into (56) yields
PUF in S1|2 ≈ 1
− 12 − 8(m − 3)Ps − 3[C(m − 1)(m − 2) − 2(m2 − 5m + 7)]P 2
s
12 − 8(m − 3)Ps + 3(m − 3)(m − 4)P 2
s
=
3(C − 1)(m − 1)(m − 2)P 2
s
12 − 8(m − 3)Ps + 3(m − 3)(m − 4)P 2
s
≈ (C − 1)(m − 1)(m − 2)
4
P 2
s .
(303)
APPENDIX E
Proof of Corollaries 12 and 13.
From (126) and (147) it follows that
q1 = (1 + x) q2 ,
(304)
where
x ≜ (m − 2)Ps .
(305)
Then it holds that
q2
C
qC
1 − qC
2
q1 − q2
(304)
=
q2
C
[(1 + x)C − 1]qC
2
x q2
= [(1 + x)C − 1]
C x
qC
2
(148)(305)
≈
[(1 + Cx + C(C−1)
2
x2 − 1]
C x
(1 − x)C
≈

1 + C − 1
2
x

(1 − C x)
= 1 − C + 1
2
x + O(x2)
= 1 − C + 1
2
(m − 2) Ps + O(P 2
s )
(306)
and
q2
2
qC
1 − C q1 qC−1
2
+ (C − 1)qC
2
(q1 − q2)2
(304)
=
q2
2
[(1 + x)C − C (1 + x) + (C − 1)]qC
2
(x q2)2
≈ [(1 + Cx + C(C−1)
2
x2 + C(C−1)(C−2)
6
x3 − Cx − 1)]
x2
qC
2
(148)(305)
≈
C(C − 1)
2
+ C(C − 1)(C − 2)
6
x

(1 − x)C
≈ C(C − 1)
2

1 + C − 2
3
x

(1 − C x)
= C(C − 1)
2
− C (C − 1) (C + 1)
3
x + O(x2)
(305)
=
C(C − 1)
2
− C (C − 1) (C + 1)
3
(m − 2) Ps + O(P 2
s )
(307)
Substituting (306) into (168) yields the ﬁrst part of (179).
Given that PUF,2 = PUF|2 PDF,2 ≤ PDF,2, this part is valid when
PUF,2 = A Ps ≤ PDF,2 or, equivalently, Ps ≤ PDF,2/A, which
by virtue of (162), (177), and (182) implies that Ps ≤ P (2)
s∗ .
For Ps ≫ P (2)
s∗ , PUF,2 ≈ PDF,2, which is the second part of
(179).
APPENDIX F
Proof of Proposition 1.
The probability PUF,3 of data loss due to unrecoverable
failures, given that three device failures have occurred, is
obtained by unconditioning (208) on i and j, and using (201)
as follows:
PUF,3 =
C
X
j=1
C
X
i=j+1
PUF|3(j, i) Pj,i
≈
C
X
j=1
C
X
i=j+1
“
1 − qj−1
1
qi−j
2
pC−i+1
3
”(m − 1)(m − 2)
C2
„ λ
µ
«2
fR .
(308)
It holds that
C
X
j=1
C
X
i=j+1
1 =
C
X
j=1
(C − j) = C (C − 1)
2
,
(309)
285
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

and
C
X
j=1
C
X
i=j+1
qj−1
1
qi−j
2
pC−i+1
3
=
C
X
j=1
qj−1
1
q2 pC−j
3
C
X
i=j+1
qi−j−1
2
pj−i+1
3
=
C
X
j=1
qj−1
1
q2 pC−j
3
C−j
X
k=0
q2
p3
k
=
C
X
j=1
qj−1
1
q2 pC−j
3
1 −

q2
p3
C−j
1 − q2
p3
=
q2 p3
p3 − q2
C
X
j=1
qj−1
1

pC−j
3
− qC−j
2

=
q2 p3
p3 − q2
qC
1 − pC
3
q1 − p3
− qC
1 − qC
2
q1 − q2

.
(310)
Substituting (309) and (310) into (308) yields (209).
APPENDIX G
Proof of Corollary 15.
For small values of Ps, and from (127) , (148), and (207),
it follows that
qj−1
1
≈ 1 − (j − 1)(m − 1)(m − 2)
2
P 2
s ,
(311)
qi−j
2
≈ 1 − (i − j)(m − 2) Ps ,
(312)
pC−i+1
3
≈ 1 − (C − i + 1)(m − 3) Ps .
(313)
Consequently,
qj−1
1
qi−j
2
pC−i+1
3
≈ 1 − [(i − j)(m − 2) + (C − i + 1)(m − 3)]Ps + O(P 2
s )
≈ 1 − [(C + 1)(m − 3) − (m − 2)j + i ] Ps .
(314)
Therefore,
C
X
j=1
C
X
i=j+1
“
1 − qj−1
1
qi−j
2
pC−i+1
3
”
≈
C
X
j=1
C
X
i=j+1
[(C + 1)(m − 3) − (m − 2)j + i ]Ps
≈
C
X
j=1
(C − j) [(C + 1)(m − 3) − (m − 2)j ]Ps+
C
X
j=1
C
X
i=j+1
i Ps
≈ [(C + 1)(m − 3) ]Ps
C
X
j=1
(C − j)
− (m − 2)
C
X
j=1
[(C − j) j] Ps +
C
X
j=1
C−j−1
X
k=0
(k + j + 1) Ps
≈ [(C + 1)(m − 3) ]Ps (C − 1) C
2
− (m − 2)
C
X
j=1
[(C − j) j] Ps +
C
X
j=1
C−j−1
X
k=0
(k + j + 1) Ps
≈ (C − 1) C (C + 1)
2
(m − 3) Ps − (m − 2)
C
X
j=1
[(C − j) j] Ps
+
C
X
j=1
»
(C − j)(j + 1) + (C − j − 1)(C − j)
2
–
Ps
≈ (C − 1) C (C + 1)
2
(m − 3) Ps − (m − 3)
C
X
j=1
[(C − j) j] Ps
+ 1
2
C
X
j=1
(C − j) Ps + 1
2
C
X
j=1
(C − j)2 Ps
≈ (C − 1) C (C + 1)
2
(m − 3) Ps
− (m − 3) (C − 1) C (C + 1)
6
Ps
+ 1
2
(C − 1) C
2
Ps + 1
2
(C − 1) C (2 C − 1)
6
Ps
≈ (C − 1) C (C + 1)
3
(m − 3) Ps
+ 1
2
(C − 1) C
2
Ps + 1
2
(C − 1) C (2 C − 1)
6
Ps
≈ (C − 1) C
6
»
2 (C + 1)(m − 3) + 3
2 + 2 C − 1
2
–
Ps
≈ (C − 1) C (C + 1)
6
(2 m − 5) Ps
(315)
Substituting (315) into (308) yields the ﬁrst part of (210).
Given that PUF,3 = PUF|3 PDF3 ≤ PDF3, this part is valid when
PUF,3 = B Ps ≤ PDF3 or, equivalently, Ps ≤ PDF3/B, which
by virtue of (205) and (212) implies that Ps ≤ 3/(C (2m−5)),
which is of the same order as P (2)
s∗ . For Ps ≫ P (2)
s∗ , PUF,3 ≈
PDF3, which is the second part of (210).
REFERENCES
[1]
I. Iliadis, “Data loss in RAID-5 storage systems with latent errors,” in
Proceedings of the 12th International Conference on Communication
Theory, Reliability, and Quality of Service (CTRQ), Mar. 2019, pp.
1–9.
[2]
D. A. Patterson, G. Gibson, and R. H. Katz, “A case for redundant arrays
of inexpensive disks (RAID),” in Proceedings of the ACM SIGMOD
International Conference on Management of Data, Jun. 1988, pp. 109–
116.
[3]
P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson,
“RAID: High-performance, reliable secondary storage,” ACM Comput.
Surv., vol. 26, no. 2, Jun. 1994, pp. 145–185.
[4]
V. Venkatesan, I. Iliadis, C. Fragouli, and R. Urbanke, “Reliability of
clustered vs. declustered replica placement in data storage systems,” in
Proceedings of the 19th Annual IEEE/ACM International Symposium
on Modeling, Analysis, and Simulation of Computer and Telecommu-
nication Systems (MASCOTS), Jul. 2011, pp. 307–317.
[5]
I. Iliadis, D. Sotnikov, P. Ta-Shma, and V. Venkatesan, “Reliability of
geo-replicated cloud storage systems,” in Proceedings of the 2014 IEEE
20th Paciﬁc Rim International Symposium on Dependable Computing
(PRDC), Nov. 2014, pp. 169–179.
[6]
M. Malhotra and K. S. Trivedi, “Reliability analysis of redundant arrays
of inexpensive disks,” J. Parallel Distrib. Comput., vol. 17, Jan. 1993,
pp. 146–151.
[7]
A. Thomasian and M. Blaum, “Higher reliability redundant disk arrays:
Organization, operation, and coding,” ACM Trans. Storage, vol. 5, no. 3,
Nov. 2009, pp. 1–59.
[8]
I. Iliadis, R. Haas, X.-Y. Hu, and E. Eleftheriou, “Disk scrubbing versus
intradisk redundancy for RAID storage systems,” ACM Trans. Storage,
vol. 7, no. 2, Jul. 2011, pp. 1–42.
286
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[9]
V. Venkatesan, I. Iliadis, and R. Haas, “Reliability of data storage
systems under network rebuild bandwidth constraints,” in Proceedings
of the 20th Annual IEEE International Symposium on Modeling,
Analysis, and Simulation of Computer and Telecommunication Systems
(MASCOTS), Aug. 2012, pp. 189–197.
[10]
J.-F. Pˆaris, T. J. E. Schwarz, A. Amer, and D. D. E. Long, “Highly
reliable two-dimensional RAID arrays for archival storage,” in Pro-
ceedings of the 31st IEEE International Performance Computing and
Communications Conference (IPCCC), Dec. 2012, pp. 324–331.
[11]
I. Iliadis and V. Venkatesan, “Most probable paths to data loss: An
efﬁcient method for reliability evaluation of data storage systems,” Int’l
J. Adv. Syst. Measur., vol. 8, no. 3&4, Dec. 2015, pp. 178–200.
[12]
——, “Expected annual fraction of data loss as a metric for data storage
reliability,” in Proceedings of the 22nd Annual IEEE International
Symposium on Modeling, Analysis, and Simulation of Computer and
Telecommunication Systems (MASCOTS), Sep. 2014, pp. 375–384.
[13]
——, “Reliability evaluation of erasure coded systems,” Int’l J. Adv.
Telecommun., vol. 10, no. 3&4, Dec. 2017, pp. 118–144.
[14]
I. Iliadis, “Reliability evaluation of erasure coded systems under rebuild
bandwidth constraints,” Int’l J. Adv. Networks and Services, vol. 11,
no. 3&4, Dec. 2018, pp. 113–142.
[15]
Amazon
Simple
Storage
Service.
[Online].
Available:
http://aws.amazon.com/s3/ [retrieved: January 2019]
[16]
D. Borthakur et al., “Apache Hadoop goes realtime at Facebook,”
in Proceedings of the ACM SIGMOD International Conference on
Management of Data, Jun. 2011, pp. 1071–1080.
[17]
R. J. Chansler, “Data availability and durability with the Hadoop
Distributed File System,” ;login: The USENIX Association Newsletter,
vol. 37, no. 1, 2013, pp. 16–22.
[18]
K. Shvachko, H. Kuang, S. Radia, and R. Chansler, “The Hadoop
Distributed File System,” in Proceedings of the 26th IEEE Symposium
on Mass Storage Systems and Technologies (MSST), May 2010, pp.
1–10.
[19]
Hitachi Global Storage Technologies, Hitachi Disk Drive Product
Datasheets. [Online]. Available: http://www.hitachigst.com/ [retrieved:
January 2019]
[20]
E. Pinheiro, W.-D. Weber, and L. A. Barroso, “Failure trends in a large
disk drive population,” in Proceedings of the 5th USENIX Conference
on File and Storage Technologies (FAST), Feb. 2007, pp. 17–28.
[21]
A. Dholakia, E. Eleftheriou, X.-Y. Hu, I. Iliadis, J. Menon, and K. Rao,
“A new intra-disk redundancy scheme for high-reliability RAID storage
systems in the presence of unrecoverable errors,” ACM Trans. Storage,
vol. 4, no. 1, May 2008, pp. 1–42.
[22]
I. Iliadis, “Reliability modeling of RAID storage systems with latent
errors,” in Proceedings of the 17th Annual IEEE/ACM International
Symposium on Modeling, Analysis, and Simulation of Computer and
Telecommunication Systems (MASCOTS), Sep. 2009, pp. 111–122.
[23]
V. Venkatesan and I. Iliadis, “Effect of latent errors on the reliability
of data storage systems,” in Proceedings of the 21th Annual IEEE
International Symposium on Modeling, Analysis, and Simulation of
Computer and Telecommunication Systems (MASCOTS), Aug. 2013,
pp. 293–297.
[24]
I. Iliadis and V. Venkatesan, “Rebuttal to ‘Beyond MTTDL: A closed-
form RAID-6 reliability equation’,” ACM Trans. Storage, vol. 11, no. 2,
Mar. 2015, pp. 1–10.
[25]
V. Venkatesan and I. Iliadis, “A general reliability model for data
storage systems,” in Proceedings of the 9th International Conference
on Quantitative Evaluation of Systems (QEST), Sep. 2012, pp. 209–
219.
[26]
I. Iliadis and X.-Y. Hu, “Reliability assurance of RAID storage sys-
tems for a wide range of latent sector errors,” in Proceedings of the
2008 IEEE International Conference on Networking, Architecture, and
Storage (NAS), Jun. 2008, pp. 10–19.
[27]
V. Venkatesan and I. Iliadis, “Effect of codeword placement on the
reliability of erasure coded data storage systems,” in Proceedings of the
10th International Conference on Quantitative Evaluation of Systems
(QEST), Sep. 2013, pp. 241–257.
[28]
I. Iliadis and V. Venkatesan, “An efﬁcient method for reliability evalu-
ation of data storage systems,” in Proceedings of the 8th International
Conference on Communication Theory, Reliability, and Quality of
Service (CTRQ), Apr. 2015, pp. 6–12.
[29]
V. Venkatesan and I. Iliadis, “Effect of codeword placement on the
reliability of erasure coded data storage systems,” IBM Research Report,
RZ 3827, Aug. 2012.
287
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

