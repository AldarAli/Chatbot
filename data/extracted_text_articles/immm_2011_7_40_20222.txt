Review of Shape-based Similarity Algorithms and Design Retrieval Methods  
for Computer-aided Design and Manufacturing  
 
Leila Zehtaban and Dieter Roller 
Institute of Computer Aided Product Development Systems 
Universität Stuttgart, Stuttgart, Germany 
Email: zehtaban@informatik.uni-stuttgart.de, roller@informatik.uni-stuttgart.de 
 
 
Abstract— Reusing engineering data has opened a new 
opportunity to improve product quality, shorten design lead-
time and reduce costs using existing know-how within the 
design process. Geometrical aspects or 3D shape information 
of a product is an essential data which can be reused in CAD 
software. In order to compare and retrieve the existing 3D 
models, having a precise computational representation of a 
shape, so-called shape index or shape signature, is a main 
challenge. The shape signature is often used for the shape 
similarity comparison. There are several specifications for a 
shape signature like quick to compute, easy to index, invariant 
under transformation, independent of 3D representations, 
tessellation, genus or topology. The algorithms or the methods 
which decompose a shape into a signature can be classified into 
seven main classes.  This paper aims to focus on the discussion 
of the first three methods, i.e., Invariant-based methods, 
Harmonics-based methods, and Graph-based methods, and 
provide the related literature review on their underlying 
approaches with highlighting methodologies, advantages and 
disadvantages. 
Keywords-shape signature; shape similarity comparison; 3D 
shape retrieval; reused design. 
I. 
 INTRODUCTION  
New technological progress has enabled Computer-aided 
Design (CAD) software to incorporate engineering know-
how into the design process in order to improve product 
quality, shorten design lead-time and reduce costs. Any 
manufacturer has an accumulated amount of know-how 
related to design, production and performance of existing or 
previously manufactured products. Accessibility and the 
possibility of reusing this accumulated knowledge is a key 
factor for optimizing design and performance of a new 
product. Using a capable procedure for identifying similarity 
between a new possible product with items listed in the 
existing product data-bases enables a design engineer to find 
a professional base to design a new product. The new design 
can be well optimized using existing know-how of the 
existing product in design, production and performance.  
The similarity comparison between two objects could 
include diverse similarity aspects like similarity in shape 
(structure), 
design 
intent 
(functionality), 
production 
specifications, etc. However, the shape similarity comparison 
is one of the most important bases for any comprehensive 
similarity comparison in product design. The complexity of 
shape similarity comparison arises from the challenge of 
finding a computational representation (signature) for a 
shape which can be applied for the shape similarity 
comparison. The current shape similarity methods can be 
classified 
as 
follows 
[1]: 
Invariant-based 
methods, 
Harmonics-based 
methods, 
Graph-based 
methods, 
Statistics/probability-based methods, 3D object recognition-
based methods, Feature recognition-based methods and 
Group Technology-based methods.  
In this paper, we highlight the first three classes by 
having a literature review on their different underlying 
methods. Although the methods which are classified under 
the same classification, originally apply an identical concept 
to decompose a shape into a signature, nevertheless there are 
still differences regarding the utilized techniques. In the 
following, Section II describes the invariant-based methods, 
Section III describes the harmonics-based methods, Section 
IV describes the graph-based methods, and finally, Section V 
summaries the paper. 
II. 
FIRST CLASSIFICATION: INVARIANT-BASED 
METHODS 
These approaches use invariants or descriptors of the 3D 
shape such as volume, surface area, aspect ratio, higher order 
moments or moment invariants as signatures [1]. At the 
following four methods which belong to the category of 
invariant-based will be briefly discussed. These methods 
include: RTS-invariants, Moments and relevance feedback, 
Non-dimensional and scale-independent features, and 
Elementary-shape-based features and active learning will be 
explained.  
A. RTS-invariants 
In the method from Cybenko et al. [2], solid objects 
given in a standard digital representation like the IGES file 
format are converted into a surface triangular mesh 
representation. 
Afterwards, 
the 
triangular 
mesh 
representation is converted into a voxel model representation 
using a flood filling method. For the shapes represented by 
voxel model, geometrical moments are calculated and used 
to normalize the object into a canonical form. Shape features 
are computed by calculating variant volumetric invariants. 
They are called RTS-invariants because these features are 
invariant against rotation, translation and scaling. The 
following RTS-invariants can be calculated: second-order 
149
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

3D 
moments 
invariants, 
spherical-kernel 
moments 
invariants, axis aligned bounding box and centroid of the 
object, and the surface area of the objects. In the first step of 
similarity measurement, feature vectors are used to compute 
a set of best candidate objects. On this set of the best 
candidates a voxel-by-voxel comparison is performed as the 
second step of similarity measurement. This step allows a 
detailed comparison between voxel model representation of 
objects and is based on template matching. 
B. Moments and relevance feedback 
Elad et al. [4][5], used moments as shape features of 3D 
models and relevance feedback as an iterative and interactive 
method to improve the performance retrieval. For the models 
given in VRML file format (Virtual Reality Modeling 
Language), the geometrical moments are calculated and 
approximated up to the third-order and used to normalize the 
object in a canonical form. For the normalized objects 
moments are approximated again (up to forth-to-seventh-
order is sufficient) and used as a feature vector of objects.  
In the first step of similarity measurement a set of the 
best candidates is presented to the user by computing the 
Euclidean distance between feature vectors of the primary 
object and objects from the database. After that the user has 
the ability to influence the future search results by applying 
the method of relevance feedback. The user can mark a 
subset of presented results as relevant or as irrelevant. Based 
on these markings, which capture the user-perceived 
similarity between objects, the distance measure can be 
adapted and a new search results calculated. The adaption of 
the distance measure is based on Support Vector Machine 
(SVM) learning algorithms and can be repeated until the user 
is satisfied with the search results. 
C. Non-dimensional and scale-independent features 
Rea et al. [6] and Corney et al. [7], used various non-
dimensional and scale-independent features as signature for 
3D CAD models in an internet search engine. Most of these 
features are computed using object characteristics such as 
volume, surface area and convex hull of objects.  
For example, the features like crinkliness, compacness, 
hull crumbliness, etc. are calculated as following [7]: 
Crinkliness is defined as the surface area of the model 
divided by the surface area of the sphere having the same 
volume as model. Compactness is defined as a ratio of the 
volume squared over the cube of the surface area and used as 
a non-dimensional feature. Hull crumbliness is defined as a 
ratio of objects surface area to the surface area of its convex 
hull. Hull packaging is defined as the percent of the convex 
hull volume not occupied by the original object. Hull 
compactness is defined as ratio of the convex hull’s surface 
area cubed over the volume of the convex hull squared. 
Further features being used are: ratio of the longest edge 
to the shortest edge of the bounding box, number of the holes 
of the object and number of the facets of the object. User can 
specify combination of features which are used in the 
similarity search and tolerance values for these features. 
D. Elementary-shape-based features and active learning 
The method from Zhang et al. [8][9], describes that 
features such as volume, surface area, moments and Fourier 
transform coefficients can be well extracted from a mesh 
representation and be considered as the signature of an 
object. The inspiration of this method is to compute features 
for elementary shapes such as triangles and tetrahedrons in 
advance and sum up the feature values of the elementary 
shapes in order to get the feature value of the whole object. 
Annotation of the object was used as a method to improve 
the performance retrieval. The hidden annotation has to be 
performed as a learning stage before a database can be used 
for the similarity search. By using an active learning method 
the system determines the sample objects to the annotator. 
The sample objects are selected so that annotation of the 
object can provide the maximum information or knowledge 
gain to the system.  
Using this method reduces the number of training 
samples by selecting the most informative ones to the 
annotator.  
E. Evaluation of invariant-based methods 
All invariant-based methods have the advantage of being 
robust to small changes in shape.  The disadvantage of these 
methods refers to the improbable partial matching.  
The method from Cybenko et al., suffers from the 
requirement of a huge storage requirement for every object 
and its different models. In addition, the voxelization of 
models is a time and memory consuming process. [2] 
In the method from Elad et al., with using the relevance 
feedback, not only the geometrical similarity is being 
computed between the objects, but also the user-perceived 
similarity can be incorporated in the similarity search 
process. Hence, the retrieval performance is being improved 
by retrieving more objects than user has in mind. [4][5] 
The method from Corney et al. and Rea et al., can be 
useful as a coarse filter in huge databases. However, to 
perform a finer comparison between objects when the sets of 
retrieved objects are large, combination of this method with 
further methods might be necessary. [6][7] 
The disadvantage of the method from Zhang et al., lies 
on the requirement of an explicit routine to compute a feature 
value for elementary shape. Nevertheless, it is difficult to 
develop explicit routine to compute the high order moments 
for triangles and tetrahedrons. Zhang et al., used the method 
of hidden annotation and active learning to improve the 
retrieval performance of the system. In practice, an 
annotation of large databases can hardly be performed 
because of the manual effort. Besides, with applying partial 
annotation, it is difficult to decide how much annotation is 
sufficient for specific database. [8][9] 
III. 
SECOND CLASSIFICATION: HARMONIC-BASED 
METHODS 
These methods use a set of harmonic functions of a shape 
as signature. Spherical or Fourier functions are usually used 
to decompose a discrete 3D model into an approximate sum 
of its (first n) harmonis components [1]. The four methods of 
this category will be discussed in the following sections: 
150
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

Ray-based SH-descriptor, Rotation-invariant SH-descriptor, 
Layered depth sphere-based SH-descriptor; and Concrete 
radialized spherical projection descriptor. 
A. Ray-based SH-descriptor (Spherical Harmonics) 
In the method from Vranic [10][11], 3D models 
represented by polygon meshes are normalized to achieve 
invariance against rotation, translation and scaling. For that 
purpose a Principal Component Analysis (PCA) which can 
be applied to a discrete set of points, as well as the union of 
all polygons of the mesh with infinitely number of points.  
After normalization, the 3D models are characterized by 
defining a function on a sphere which measures the 
extension of an object in different directions.  
 
 
 
Figure 1. Multi-resolution representation used to derive feature vectors from 
Fourier coefficients for spherical harmonics [10] 
 
For each direction a ray is casted from the center of mass 
in order to compute the last point of the intersection with the 
polygonal mesh which is used as a sample of the function. 
After sampling the function Fast Fourier Transformation 
(FFT) is performed to obtain the Fourier coefficients to be 
applied as feature vector. Figure 1 represents reconstruction 
of the different levels of a primary object when using three 
different spherical harmonics coefficients.  
B. Rotation-invariant SH-descriptor   
Kazhdan et al. [3] claim that the methods using PCA are 
unstable referring to the multiplicity of eignevalues and its 
sensitivity to outliers.  
 
 
 
Figure 2. Computing the Harmonic Shape Representation [3] 
 
As a solution a new method [12][13], to compute the 
harmonic shape representation is proposed. In this method, 
the model polygon is rasterized into a 64× 64× 64 voxel 
grid. The voxel grid is decomposed into 32 functions on 
concentric spheres by restricting the voxel grid to spheres 
with radii 1 to 32. By decomposing each of these functions 
as a sum of its first 16 harmonic components, analogous to a 
Fourier decomposition into different frequencies and define 
the signature of each spherical function as a list of these 16 
norms and combining the different signatures, a 32 × 16 
signature for 3D model is obtained. In order to compare two 
harmonic presentations, the Euclidean distance between 
them should be computed. An example of the explained 
method is shown in Figure 2. 
C. Layered Depth Spheres (LDS)-based SH-descriptor 
Vranic [14][15], described a further harmonics-based 
method which captures information about internal structure 
of objects. The shape descriptor is extracted from a triangle 
mesh representation of the objects. Invariance against 
translation and scaling is achieved using Continues PCA 
(CPCA). 3D model is decomposed into a family of function 
on the sphere restricting function values by lower and upper 
bounds which describe a bounded area of the model. Using 
ray cast method for rays emanating from the origin in many 
directions all points of intersection with the polygonal mesh 
are computed. 
 
 
 
Figure 3. Concept of Layered depth Sphere with an example in 2D [15] 
 
For intersection points the closest sphere and a set of 
corresponding value of the function on that sphere is 
determined. If two intersection points of the same ray belong 
to the same sphere then the larger distance determines the 
function value. On each sampled function on the sphere Fast 
Fourier Transformation (FFT) is performed to obtain a set of 
coefficients. The PCA method can be performed during the 
normalization step or the properties of spherical harmonics 
can be used to achieve rotation invariance. 
D. Concrete Radialized Spherical Projection Descriptor 
(CRSP) 
In the method from Papadakis et al. [16], a shape 
descriptor is extracted from a triangle mesh representation of 
3D models. In this method, scaling and axial flipping 
invariance is achieved referring the properties of spherical 
harmonics.  
Original 
8² harmonics 
16² harmonics    
24² harmonics 
151
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

Rotation and translation invariance is achieved by 
applying CPCA and Principal Component Analysis on the 
model’s Normal (NPCA). This algorithm, results in two 
versions of an object and, therefore, two descriptors for an 
object. For each version of the object a set of functions on 
spheres is defined, which are sampled by casting rays from 
the origin of the object. 
 
 
 
 
Figure 4. The stage of the shape matching using CPCA and NPCA [16]  
 
A function on a sphere represents intersection points of the 
models surface with rays and also all points in the direction 
of each ray that are closer to the origin than the furthest 
intersection point. For every function Short-time Fourier 
Transform (SFT) is performed to obtain the Fourier 
coefficients. Scaling invariance of the descriptor is achieved 
using properties of spherical harmonics. Figure 4 illustrates 
the stages of the shape decomposition and matching as well 
as obtaining the shape descriptor/signature respectively. 
E. Evaluation of Harmonics-based methods 
All harmonics-based methods have an advantage which 
feature extraction and similarity measurements are efficiently 
performed. Drawbacks of these methods are as following: 
first; specific details of shape can not be captured, and 
second; partial matching is not possible in these methods. [1]   
Kazhdan used a coarse voxel grid to achieve robustness 
against small changes of shape. However, coarse voxel grid 
causes  loss of many details. [11] Voxelization also affects 
efficiency of feature extraction.  
The ray-based method allows an embedded multi-
resolution representation of the descriptor. This means that a 
descriptor contains all descriptors having lower dimension. 
[11]  
Unlike the ray-based method, LDS-based method 
captures information about the internal structure of objects 
by defining several functions on spheres instead of only one.  
The CRPS method improves the invariance properties of 
the descriptor by applying two normalization methods, 
CPCA and NPCA.  Thus, the retrieval performance of the 
descriptor is improved. Although this process increases the 
complexity of descriptor, since for each object two 
descriptors are extracted. [16] 
IV. 
THIRD CLASSIFICATION: GRAPH-BASED 
METHODS 
In Graph-based approaches sub-graph isomorphism is 
used in order to match B-Rep graphs, or to match 
eigenvalues of a model signature graph which is constructed 
from the B-Rep graph.  Five different methods belonging to 
the graph category are briefly explained in the following [1]. 
These five methods include:  Model signature graphs, 
Attributed graphs, Reeb graphs and Skeletal graph with 
parameter-controlled thinning. 
A. Model signature graphs 
McWherter et al. [17][18][19][20], developed Model 
Signature Graph (MSG) for similarity measurement between 
3D CAD models. MSGs are labeled, undirected graphs, 
which are generated using the Boundary Representation (B-
Rep) on CAD models. The boundary representation consists 
of a set of edges and a set of faces. For the definition of 
MSGs every face of the model is represented as a graph 
vertex and every edge in the B-Rep is represented as a graph 
edge. Labels of edges and vertices contain attributes of faces 
and edges in B-Rep, such as topological identifier, 
underlying geometrical representation, etc. For every MSG 
the eigenvalue spectrum and Invariant Topology Vector 
(ITV) are extracted and used to perform similarity 
comparison. ITV contains graph invariants, such as vertex 
and edge counts, maximum, minimum, mode degrees graph 
diameter, etc.  
 
 
 
 
 
Figure 5. A model and its transformation into a Model Signature Graph [19]   
 
(a) Solid Model 
(b) Model Signature Graph 
152
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

The spectrum of a graph is sorted as the eigenvalues of 
its adjacency matrix, which holds information related to the 
graph structure. In addition, the eigenvalues of the graphs 
can be used to partition the graph into two or more sub-
graphs in order to compare substructure of the graphs.  
B. Attributed graphs 
In the approach of El-Mehalawi und Miller [21][22], 
attributed graphs are used as signature of 3D CAD models, 
which are extracted from STEP files of these models. 
Attributed graphs are quite similar to MSGs, hence, graph 
nodes describe the faces of CAD components and graph 
edges describe the edges of CAD components. In addition, 
the node attribute correspond to the surface attribute, such as 
type of surface and direction of the normal. Edge attributes 
correspond to the edge attributes in B-Rep, such as type of 
the edge, direction of the normal and length of the edge.  
For the retrieval process, abstract information is extracted 
from attributed graphs and used in the first step of the 
retrieval process. The abstract data is the total number of 
nodes, number of nodes representing plan, cylindrical and 
conical surfaces. These data are used as an index, where the 
set of graphs candidate similar to the query graph can be 
calculated very quickly. In addition, a more accurate 
comparison is applied for the set of candidate graphs. To 
finalize the method and to complete the retrieval procedure, 
inexact graph matching algorithm based on an integer 
programming model is applied. This algorithm has a 
polynomial computational complexity. 
C. Skeletal graphs with thinning 
Sundar et al. [23][24], used skeletal graphs as signature 
of 3D models for similarity measurement as figure 6 present 
it.  
 
 
Figure 6. Skeletal graphs based on the thinning algorithm [23]   
 
To extract the skeletal graph of an object, the belonging 
3D model ought to be converted into a voxel model. In the 
next step, for the skeletonization process, a parameter-
controlled thinning algorithm is used to calculate a subset of 
voxels. In this thinning method the thickness of the skeleton 
is determined by the parameter given the user. Hence, a 
family of the different voxel sets can be calculated, each one 
is thinner than its parent. The thinness parameter classifies 
the importance of the voxels for the boundary coverage by 
comparing the distance transform of the voxel with its 26 
neighbors. After skeletonization the Minimum Spanning 
Tree (MSN) algorithm is applied in order to generate an 
undirected acyclic graph out of unconnected skeletal points. 
For every node in the graph Topological Signature Vector 
(TSV) is defined which holds information related to the node 
underlying sub-graphs structure. 
TSV contains the eigenvalues of the sub-graph’s 
adjacency matrix and is used as an index to fast 
determination of a set of best candidate graphs. On the set of 
candidate graphs a graph matching algorithm is performed 
by reformulating the problem of largest isomorphic sub-
graph as the problem of finding the “maximum cardinality, 
minimum weight matching” in a bipartite graph. To preserve 
the hierarchical structure of the graph a greedy form of the 
above bipartite formulation is combined with a recursive 
depth search.  
D. Skeletal graphs with parameter-based thinning 
In the method from Iyer et al. [25][26][27], skeletal 
graphs and feature vectors jointly present the signature of 3D 
models. 3D models are normalized into a canonical form and 
converted into voxel model. In the skeletonization process, 
iterative thinning algorithm is applied by deleting border 
points satisfying conditions of topology preservation. On the 
generated skeleton, the skeleton-marching algorithm is 
performed to identify the basic entities and construct the 
skeletal graph. Basic skeletal entities are vertex, edge and 
loop.  
For the definition of feature vectors the following shape 
descriptors are extracted from the voxel model: moments, 
geometry parameters such as volume and surface area, 
voxelization parameters such as voxel size, and graph 
parameters such as number of loops edges and nodes. For the 
similarity measurements the Euclidean distance of the 
feature vectors, as well as the distance between skeletal 
graphs are calculated. For the graph matching a decision-tree 
based algorithm developed by Messmer et al. [28] is applied.  
 
 
 
Figure 7. Decision tree for the related (above) adjacency matrix [28] 
153
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

 
In this algorithm all graphs in a database are indexed in 
the form of a decision tree using the different permutations 
of the adjacency matrix as described in Figure 7. The space 
requirements are exponential, but the search requirement is 
sub-polynomial in the number of query graph nodes. 
E. Reeb Graphs 
Hilaga et al. [29] developed Multiresolutional Reeb 
Graphs (MRGs) for similarity measurements between 3D 
models. MRG describes the skeletal and topological 
structure of a 3D model. A reeb graph is generated using a 
continuous scalar function on the 3D model. In this method, 
geodetic distance is used because of the translation and 
rotation invariance of this function. Because the reeb graph 
might contain many nodes, a MRG is constructed as a row of 
reeb graphs at several levels of detail. 3D object is divided 
into a number of ranges using values of the scalar function. 
A graph node represents a connected component in a 
particular range, and graph edge represent connected 
components of the adjacent ranges that contact each other.  
 
 
 
Figure 8. Multiresolutional Reeb graph [29] 
 
The construction starts with the generation of a reeb 
graph having the finest resolution. Construction of the MRGs 
with coarser resolution is followed by merging adjacent 
ranges and unifying connected nodes form this ranges into 
one. For every node attributes are calculated and used to 
estimate similarity between nodes in the similarity 
measurements process. The calculation of node attributes is 
based on shape features such as area of triangles, area of 
whole object and certain values of continuous function. The 
similarity measurement is performed using a coarse-to-fine 
strategy, while preserving the consistency of the graph 
structure. 
F. Evaluation of graph-based methods 
The advantage of all graph-based methods is description 
of the topology of 3D models which is an important shape 
feature. In addition, representation of 3D models as 
topological graphs which facilitate the abstraction of these 
models at different levels of detail and description of local 
geometry at each node. [1] Other advantage of the graph-
based methods is possibility of partial matching between 3D 
models. (Except for MRG method) 
MSGs are efficient despite the large and complex graphs 
in the database. This method is considered insufficient for 
fine discrimination between 3D models, referring to the 
disability of capturing all properties of the adjacency matrix 
by the eigenvalues. [17][20] 
Although skeletal graphs with using simplification of 3D, 
are stable to small changes in shape, but the simplification 
causes a loss of information affecting the discrimination 
power of the method. [27] 
The advantage of MRG refers to the fact that geodesic 
distance as a continuous function is invariant against rotation 
and translation. Exponential computational complexity of 
this method has been avoided by applying coarse-to-fine 
strategy in the retrieval process. [29][30]  
V. 
CONCLUSION AND FUTURE WORK 
In this paper, shaped-based similarity and design retrieval 
methods have been discussed. Each of the discussed methods 
has advantages as well as disadvantages. Which method 
should be used in a particular application depends on the 
desired discrimination power of descriptor or the required 
efficiency of the similarity search. If only general 
classification of objects in a database is needed then 
harmonics-based or invariant-based is good choice. If partial 
matching between objects should be possible, then one of the 
graph-based methods is good choice. As a conclusion, the 
combination of different methods may help to achieve high 
discrimination power as well as efficient similarity search.    
The next step will be review and discussion of the rest of 
the methods and classes, which decompose a shape into a 
signature, i.e., Statistics/probability-based methods, 3D 
Object Recognition-based methods, Feature Recognition 
(FR)-based methods, and Group Technology (GT)-based 
methods. 
REFERENCES 
 
[1] N. Iyer, S. Jayanti, K. Lou, Y. Kalyanaraman, and K. Ramani, 
“Shape-based searching for product lifecycle applications”,  
Computer-Aided Design, vol. 37, issue 13, pp. 1435-1446, 
November 2005 
[2] G. Cybenko, A. Bhasin, and K. Cohen, “Pattern recognition 
of 3D CAD objects”, Smart Engineering System Design, vol. 
1, pp. 1-13, 1997 
[3] M. Kazhdan and T. Funkhouser, “Harmonic 3D Shape 
Matching”, SIGGRAPH Sketches and Applications, pp. 191-
191, July 2002 
[4] M. Elad, A. Tal, and S. Ar, “Content based retrieval of 
VRML objects -an iterative and interactive approach” 
Eurographics multimedia workshop; pp. 97-108, 2001 
[5] M. Elad, A. Tal, and S. Ar, “Directed search in a 3D objects 
database using SVM”, Technical Report, HPL-2000-20(R.1), 
HP Laboratories Israel, 2000 
[6] H. Rea, J.R. Corney, D. Clark, J. Pritchard, M. Breaks, and R. 
MacLeod, “Part sourcing in a global market”, Concurrent 
Engineering: Research and Applications, 10 (4), pp. 325-334. 
ISSN 1063-293X, 2002 
[7] J.R. Corney, H. Rea, D. Clark, J. Pritchard, M. Breaks, and R. 
MacLeod, “Coarse filters for shape matching”, IEEE 
Computer Graphics and Applications, vol. 22, issue 3, pp. 65-
74, 2002 
154
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

[8] C. Zhang, and T. Chen, “Efficient feature extraction for 
2D/3D objects in mesh representation” Proc. ICIP2001, vol.3, 
pp. 935-938, doi: 10.1109/ICIP.2001.958278   
[9] C. Zhang, and T. Chen, “Active Learning for Information 
Retrieval: Using 3D Models As An Example”, Technical 
Report AMP 01-04, pp. 01-04, Electrical and Computer 
Engineering, Carnegie Mellon University, Pittsburgh, 2001  
[10]  D. Vranic, D. Saupe, and J. Richter, “Tools for 3D-object 
retrieval: 
Karhunen-Loeve 
transform 
and 
spherical 
harmonics”, Proc. IEEE MMSP workshop, 2001, pp. 293-
198, doi: 10.1109/MMSP.2001.962749  
[11] D. Saupe and D. V. Vranic, “3D Model Retrieval With 
Spherical Harmonics and Moments”, Proc. DAGM 2001 
(editors B. Radig and S. Florczyk), Munich, Germany, pp. 
392-397, September 2001  
[12] M. Kazhdan, T. Funkhouser, and S. Rusinkiewicz, “Rotation 
invariant spherical harmonic representation of 3D shape 
descriptors” 
Proc. 
ACM/eurographics 
symposium 
on 
geometry processing, pp. 167-175, 2003 
[13] T. Funkhouser, P. Min, M. Kazhdan, J. Chen, A. Helderman, 
and D. Dobkin, “A Search Engine for 3D Models”, ACM 
Transaction on Graphics, vol. 22, pp. 83-105, 2003 
[14]  D. Vranic, “An Improvement of rotation invariant 3D shape 
descriptor based on function on concentric spheres”, IEEE 
International Conference on Image Processing Barcelona, vol. 
3, pp. 757-760, 2003 
[15] D. Vranic, “3D model retrieval”, Ph. D. Dissertation, 2004, 
University of Leipzig, Department of Computer Science 
[16] P. Papadakis, I. Pratikakis, S. Perantonis, and T. Theoharis, 
“Efficient 3D shape matching using a concrete radialized 
spherical projection  representation”, Pattern Recognition, 
vol. 40, issue 9, pp. 2437-2452,  2007 
[17] D. McWherter, M. Peabody, W. C. Regli, and A. 
Shokoufandeh, “An approach to indexing databases of 
graphs”, Technical Reports DUMCS-01-01, Philadelphia, PA: 
Department of Mathematical and Computer Science, Drexel 
University, Juni 2001  
[18] D. McWherter, M. Peabody, W. C. Regli, and A. 
Shokoufandeh, “Transformation invariant shape similarity 
comparison of solid models”,  ASME Design Engineering 
Technical Conference, American Society of Mechanical 
Engineers, ASME Press.  DETC 2001/DFM-21191, 2001  
[19] D. McWherter, M. Peabody, W. C.  Regli, and A. 
Shokoufandeh, “Solid Model databases: techniques and 
empirical results”. Journal of Computing and Information 
Science in Engineering, Vol. 1, No. 4, pp. 300-310, 
2001, doi:10.1115/1.1430233 
[20] M. Peabody and W. C. Regli, “Clustering techniques for 
databases of CAD models”. Technical Report DU-MCD-01-0. 
Philadelphia, PA: Department of Mathematical and Computer 
Science, Drexel University, 2001 
[21] M. El-Mehalawi and R. Miller, “A database system of 
mechanical components based on geometric and topological 
similarity. Part I: Representation”,  Journal of Computer-
Aided Design, vol. 35 (1), pp. 83-94, 2003 
[22] M. El-Mehalawi and R. Miller, “A database system of 
mechanical components based on geometric and topological 
similarity. Part II: indexing, retrieval, matching and similarity 
assessment”, Journal of Computer-Aided Design, vol. 35, 
issue1, pp. 95-105, 2003 
[23] H. Sundar, D. Silver, N. Gagvani, and S. Dickson, “Skeleton 
based shape matching and retrieval”, Proceedings of Shape 
Modeling and Application, Korea , pp. 130 – 139, 2003 
[24] N. Gagvani and D. Silver, “Parameter Controlled Volume 
Thinning”, Graphical Models and Image Procesing, vol. 61, 
issue3, pp.149-164, May 1999 
[25] N. Iyer, Y. Kalyanaraman, K. Lou, S. Jayanti, and K. Ramani, 
“A reconfigurable 3D engineering shape search system Part I: 
shape representation”, Proc. ASME DECT 03 Computers and 
Information in Engineering (CIE) Conference, pp. 89-98,  
Chicago, IL, 2003 
[26] K. Lou, N. Iyer, Y. Kalyanaraman, K. Ramani, and S. 
Prabhakar, “A reconfiguable 3D engineering shape search 
system. Part II: database indexing, retrieval and clustering”, 
Proc. ASME DECT 03 Computers and Information in 
Engineering (CIE) Conference, pp. 169-178,  Chicago, IL, 
2003 
[27] N. Iyer, K. Lou, S. Jayanti, Y.  Kalyanaraman, and K. 
Ramani, 
“A 
Multi-Scale 
Hierarchical 
3d 
Shape 
Representation for Similar Shape Retrieval”, TMCE 2004, 
Lausanne, Switzerland, pp. 1117-1118, 2004 
[28] B. Messmer and H. Bunke, “Subgraph isomorphism in 
polynomial time”, Technical Report TR-IAM-95-003, 1995 
[29] M. Hilaga, Y. Shinagawa, T. Kohmura, and T.L. Kunii, 
“Topology matching for fully automatic similarity estimation 
of 3D shapes”, SIGGGRAPH, ACM Press, pp. 203-212, 2001 
[30] D. Bespalov, W.C. Regli, and A. Shokoufandeh, “Reeb 
graph-based shape retrieval for CAD”, Proceeding of the 
ASME DECT 03 Computers end Information in Engineering 
(CIE) Conference, pp. 229-238, Chicago, IL, 2003 
155
IMMM 2011 : The First International Conference on Advances in Information Mining and Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-162-5

