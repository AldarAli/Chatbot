Digital Brain as a Service: An Approach For
Achieving Organic Web Services
Islam Elgedawy
Computer Engineering Department,
Middle East Technical University, Northern Cyprus Campus
99738 Kalkanli, Guzelyurt, Mersin 10, Turkey,
Email: Elgedawy@metu.edu.tr
Abstract—To be able to build self-managing services, services
should not be only autonomic, but also organic. This is be-
cause autonomic services can lead to services’ failure when
new unpredicted situations arise, as they are currently built
using predeﬁned sets of rules and policies manually tailored
for speciﬁc situations and contexts. Hence, autonomic services
need to support organic properties, such as self-learning and
self-explanation in order to handle such unpredicted situations.
Currently, all existing works focus on making services autonomic,
but not organic. To overcome such limitation, this paper proposes
a novel approach to build organic web services. The proposed
approach aims to build digital brains as a service, which will
be responsible for all cognition, thinking, learning, planning, and
decision making tasks, such that any ordinary service can become
organic just by plugging it to the corresponding digital brain
service. The proposed approach builds the digital brain service as
a composite web service, realizing the components of the adopted
Starzyk-Prasad machine consciousness computational model. The
proposed approach opens the doors for a new era, where digital
brains for software systems can be created, trained, and rented.
Keywords–Digital
Brains;
Machine
Consciousness;
Self-
Managing systems; Organic Services.
I.
INTRODUCTION
The vision of organic computing [1] was introduced to
create self-managing software systems, such that different
organic properties (such as self-learning, self-explanation,
adaptability, steady growth, and evolution) are needed to
be supported. Organic computing is an extended version of
the autonomic computing vision, where software systems
are required to support autonomic self-managing properties
(namely, self-conﬁguration, self-optimization, self-healing, and
self-protection) [2]. Currently, existing approaches for creating
autonomic systems (such as the works discussed in [3][4][5])
are limited and can lead to systems’ failure [5]. This is because
the design of autonomous systems is mainly based on prede-
ﬁned static rules and policies given by service designers during
design and/or run times [5]. Hence, any situation that is not
covered by such predeﬁned rules and policies will jeopardize
the system, the users, and the embodying environment to all
types of problems. To overcome such problems, self-managing
systems should not be only autonomic, but also organic.
Being organic means the systems will be able to learn and
explain unknown concepts to themselves and to others. It also
means systems should be able to sense their internal states
as well as their embodying environment, rationalize about the
perceived facts, predict future actions and events, decide on
best actions in given situations, grow their knowledge, and
able to communicate like humans. All these requirements are
needed to be done without having static predeﬁned rules and
policies. The software systems after a period of training should
be able to explore and learn by itself exactly as humans.
This motivates the work in this paper that shows how we
can create organic web services satisfying these challenging
requirements.
In humans, consciousness is responsible for handling all
the high-level tasks, such as cognition, thinking, learning,
planning, and decision making. As these tasks are essential
for having any organic property, we argue that services must
have “consciousness” to be able to perform such high-level
tasks. Currently, there exist many computational models for
machine consciousness that try to mimic human consciousness
[6][7][8]. We argue that such computational models are rich
enough to model services’ consciousness, as services have
speciﬁc ﬁnite functionalities, and ﬁnite number of goals, which
is much less complex than humans’ functionalities and goals.
We previously proposed to capture machine consciousness as
a service (MCaaS) in [9], in which we proposed to realize
the Starzyk-Prasad machine consciousness model [8]. Such
MCaaS service should be able to accomplish all the cognition
and thinking tasks.
In this paper, we propose a novel approach to build organic
web services, as shown in Figure 1.
Figure 1. The proposed approach for achieving organic web services
The ﬁgure shows a digital brain service is created to
directly manage the targeted services, where the digital brain
service will be connected to the MCaaS service to accomplish
all the cognition and thinking tasks. Adopting service-oriented
computing to build software systems facilitates creation of
autonomic and organic software systems, as systems’ com-
ponents can be encapsulated as loosely-coupled services that
19
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

can be monitored and replaced at run time, as shown in the
previously proposed CRESCENT framework [3]. However, to
be able to realize the proposed approach, many problems need
to be solved, such as the representation problem, the memory
modeling problem, the planning and thinking problem, and
the motivation and learning problem. We proposed different
solutions for every problem adopting a collection of existing
techniques; details are given in Section IV. The proposed
approach for achieving organic web services opens the doors
for a new era, where digital brains for software systems can
be created, trained, and rented.
The rest of the paper is organized as follows. Section II
summarizes the adopted Starzyk-Prasad machine conscious-
ness model. Section III discusses the challenges for achieving
organic services. Section IV provides the proposed approach
for creating digital brains for organic services and provides
solutions for the discussed challenges. Section V demonstrates
a use case for the proposed approach. Finally, Section VI
concludes the paper and provides the directions for future
work.
II.
BACKGROUND
This section provides the background required for the
proposed approach. It summarizes the adopted Starzyk-Prasad
machine consciousness model [8], providing their deﬁnitions
for machine consciousness. The work in [7] categorized ex-
isting machine consciousness models into ﬁve categories: a
global workspace, information integration, an internal self-
model, higher-level representations, and attention mechanisms.
As shown in [8], the Starzyk-Prasad model characteristics
explicitly and implicitly cover all the above categories. This is
why we chose it to model service consciousness. The Starzyk-
Prasad consciousness model follows the functionalism perspec-
tive, and sees consciousness as an emergent property resulting
from “the interactions between interconnected modules with
attention switching mechanism helping to select a cognitive
experience and managing a sequential cognitive process.” [8].
They deﬁne machine consciousness as follows:
“A machine is conscious if besides the required
mechanisms for perception, action, learning and as-
sociative memory, it has a central executive that con-
trols all the processes (conscious or subconscious) of
the machine; the central executive is driven by the
machine’s motivation and goal selection, attention
switching, semantic and episodic memory and uses
cognitive perception and cognitive understanding of
motivations, thoughts, or plans to control learning,
attention, motivations, and monitor actions [8].”
Figure 2 depicts the architecture of the Starzyk-Prasad
machine consciousness model. The ﬁgure shows that the model
consists of three main modules: the sensory-motor module,
the episodic memory and learning module, and the central
executive module. We summarize these modules functionalities
as follows:
•
Sensory-Motor Module. It is the module responsible
for collecting different sensory data. It uses such data
for “concept formation”, which will be used to build
different types of associative memories. For example,
semantic memory will store the gained knowledge
about the environment), while a procedural memory
Figure 2. The Starzyk-Prasad Machine Consciousness Model [8]
will build a hierarchy of motor skills (i.e., learnt
and basic actions). The module is also responsible
for motor actuation , and generation of emotional
and reward signals. Such signals govern the learning
process and serve as an interface to other units. The
sensory-motor module is composed of three parts:
sensory processors integrated with semantic memory,
motor processors integrated with motor skills, and
sub-cortical processor integrated with emotions and
rewards. In other words, it is the module responsible
for the “subconscious”, that automatically takes care
of the actions and internal states that are previously
learnt. However, it will contact the other higher con-
sciousness modules if a conscious action is required.
The sensor-motor module is connected to sensory and
motor units via data encoders and decoders. Motor
processor receives feedback from sensory processors.
The sensory processers are the orchestrators of the
sensory-motor module. They receive the inputs, con-
tacts the semantic memory and subcortical processing
modules to decide on the actions to be taken. Then,
they contact the motor processors to execute the taken
actions if no thinking is required.
•
Episodic Memory and Learning Module. It is the
module responsible for storing and recalling expe-
riences, and responsible for recognizing the novel
events/patterns in various processes and their semantic
relationships. It is composed of two parts, episodic
memory unit and learning unit. Episodic memory
unit is a collection of smaller functional blocks, each
dedicated to capture spatial and temporal semantic
relationships of different data sequences. It stores
and manages data as episodes collected from all the
units including perceptions, motivations and interpre-
tations of cognitive experiences and their signiﬁcance
from the central executive. Learning about speciﬁc
events/patterns is directed by the central executive
module.
•
Central Executive Module. It is the module responsi-
20
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

ble for thinking, planning, coordination and selective
control of all the other units. Its tasks include cog-
nitive perception, focusing attention, attention switch-
ing, motivation, goal creation and selection, thoughts,
planning, learning, etc. For this purpose, it needs the
capability to dynamically select and direct execution
of programs that govern attention, motivation, episodic
memory and action monitoring. In addition, central
executive can activate semantic memory and control
emotions. Central executive module does not have a
centralized decision making center. Instead, its deci-
sions are result of competition between signals gener-
ated from units. Such signals vary in intensity based on
internal or external aspects at a given moment. Once a
winner is established, central executive provides cog-
nitive interpretation of the result, providing top down
activation for perception, planning, internal thought or
motor functions.
The model adopts an attention switching mechanism that
takes into consideration both internal and external observa-
tions. Internal observations result from changes in internal
motivation, planning tasks, and components status. External
observations result from opportunities, threats, and failures of
the embodying environment. The cognitive realization of inter-
nal processes states decides the central executive s decision of
what is observed, planning how to respond, and evaluating
the created action plans. Once an action is selected to be
performed, its consequences must be taken into consideration
before the actual execution of the action. The model imple-
ments both attention focusing and attention switching. Selec-
tion between signals is not via a competition rather than via a
conscious decision to select the signal that fulﬁlls the current
goals, based on their priorities (e.g., survival is considered the
highest priority goal). Once an attention switching occurs, the
system focuses its cognitive attention on the selected issue.
III.
CHALLENGES FOR ACHIEVING ORGANIC WEB
SERVICES
There are four main challenges for achieving organic web
services, namely, the representation problem, the memory
modeling problem, the motivation and learning problem, and
the planning and thinking problem. We summarize these
problems as follows.
A. The Representation Problem
Representation is one of the most controversial problems in
machine consciousness [10]. How do we represent a concept?
How do we get its meaning knowing the physical world cannot
possess any semantics? How to assign meaning to mental
states?
In neuroscience, empirical evidence demonstrates that ev-
ery region of the neocortex represents a given piece of informa-
tion using a speciﬁc sparse activity pattern of large collection
of neurons. This sparse activation pattern is grounded, which
means the same group of neurons are activated every time
the same symbol/concept is identiﬁed. This indicates that the
current best way forward of the representation problem is
to adopt distributed sparse encoding techniques [11]. Finding
the suitable data representation is crucial for building the
encoders/decoders, memory modules, the learning and thinking
units. Currently, there exist many sparse autoencoders (SAE),
for example, the work in [12] proposed different generic SAEs,
for scalar data, categorical data, and date-time data. However,
the work in [13] proposed a sparse encoder that learns sparsity
connections rather than enforcing them as in traditional SAEs.
Currently, there does not exist an SAE that performs well in
all applications domains, hence the question of which sparse
encoding technique should be chosen for a given application
domain is left for empirical research.
B. The Memory Modeling Problem
The Starzyk-Prasad model uses different types of associa-
tive memories (e.g., semantic, episodic, and procedural). Every
associative memory type is different in terms of its purpose,
functionality, and architecture. Hence, a different model is
needed for every memory type. In what follows, we provide a
quick overview of the existing models.
•
For semantic memory modeling, we can ﬁnd models,
such as the ones proposed in [14][15][16]. For exam-
ple, the work in [14] proposed a well-known simple
model for semantic memory adopting a feed-forward
neural network, in which activation propagates from
the inputs (concepts and relations) to the outputs
(attributes) with hidden layers in between. Each unit in
the input layer corresponds to an individual concept in
the environment. Each unit in the relation layer repre-
sents contextual constraints on the kind of information
to be retrieved. The network is trained to turn on all
those units that represent correct completions of the in-
put query. The work in [15] proposed a more complex
neural model using pain networks, where sensory data,
biases, pains, and actions are connected via neural
network, such that each pain neuron is associated with
its corresponding pain detection and learning unit, and
motivates the machine to act. It adopts both forward
and backward connections to determine the weights of
the connections. While, the work in [16][17] proposed
a new model known as hierarchial temporal memory
(HTM), which is a hierarchical deep neural model
adopting the human cortex structure.
•
For episodic memory modeling, the work in [18]. is
one of the recent proposed model, it propose to use
a neural model based on fusion adaptive resonance
theory. The proposed model learns episodic traces in
response to a continuous stream of sensory input and
feedback received from the environment. It extracts
key events and encodes spatial and temporal relations
between events by dynamically creating cognitive
nodes. It also supports a mechanism of gradual for-
getting.
•
For procedural memory modeling, the work in [19]
adopts a contention scheduling model that uses dis-
crete, hierarchically-organized goal and action repre-
sentations.
As we can see, each memory type has its own model that
facilitate its purpose. Hence, we need to decide on the suitable
model for each needed memory type, encapsulate it as service,
and let it accessed via a suitable memory manager service to
store and retrieve information.
21
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

C. The Motivation and Learning problem
Motivations are related to either cognitively recognized
or unconscious needs and desires, emotional changes, and
internally set abstract goals, hence motivation is essential
for determining attention focus and attention switching tasks.
Learning is essential to achieve two major tasks:
•
Concept identiﬁcation: Concept identiﬁcation learn-
ing is a process that aims to extract the space-temporal
relations from different internal and external sensory
data. Then, it uses such information to identify differ-
ent concepts and their relationships.
•
Action selection: Action selection learning is about
choosing the suitable actions to optimize different
objectives originated by the adopted motivation model.
Reinforcement learning is a very well known and
established scheme for action selection that is only
motivated by making gains (rewards). However, the
work in [20] showed that the motivational learning
(ML) approach proposed in [15] outperformed many
of the well-known reinforcement learning approaches.
D. The Planning and Thinking Problem
One of the possible signs of having consciousness is the
ability to switch attention to attend to emerging situations.
Response to emerging situation depends on the adopted mo-
tivation and goal models. As per the Starzyk-Prasad model,
the digital brain service needs to determine the attention
spotlight in every situation in a way that reduces its pains
and increases its rewards. An object/concept in the spotlight
needs to be determined (usually, it is the one with the most
salient features), and the most suitable action (retrieved from
the corresponding associative memories) should be performed.
If there is lack of certain resources needed to execute the
action, the digital brain service has to search for it and plan to
get it, which creates sub-goal(s) for the current goal. Hence,
a suitable action plan needs to be created to fulﬁll the current
goal and its subgoals.
IV.
THE PROPOSED APPROACH FOR ACHIEVING
ORGANIC WEB SERVICES
This section ﬁrst summarizes the proposed approach for
achieving organic web services, then it introduces solutions
for the discussed challenges, and ﬁnally it proposes a road
map for the approach realization.
To make an ordinary service “organic”, the proposed
approach aims to build a digital brain service, which will
be plugged into the ordinary targeted service in order to
directly manage it, provided that the digital brain service will
be plugged into a machine consciousness service in order to
accomplish all the cognition and thinking tasks, as shown in
Figure 1. We require any service that wants to use the digital
brain service, to expose the suitable interfaces that enable
reading the sensory data and executing the required actions.
Like any machine learning approach, digital brains require
some training ﬁrst, before releasing them to real-life. Hence,
once the digital brain is created, it should be attached to the
embodying service to learn from the service interactions.
To create digital brain as a service, every module in the
Starzyk-Prasad model needs to be realized and encapsulated
as a service. The high-level components will be added to the
machine consciousness service such as the central executive
unit and different memory units, while the low-level com-
ponents will be added to the digital brain service such as
the sensory and motor units, as seen in Table I. Hence, we
need ﬁrst to create encoder/decoder services, different memory
services (i.e., episodic, semantic, and procedural), sensory and
motor services, monitoring service, sub-cortical and emotion
management services, attention switching service, motivation
management service, and planning service. Then, we need to
compose the brain and machine consciousness services from
these components. We believe choreography is the suitable
coordination style for these components services, as central
orchestration will degrade the overall performance and limits
possibilities for parallelization. We summarize the approach
realization as follows:
•
For building decoders/encoders services, different
sparse encoders should be adopted for each data type
such as the ones discussed in [12]. Decoders/encoders
services pass the data from sensory units to sensory
processors, and the decoders will pass the data from
the motor processors to the motor units.
•
For building memory services, we propose to build the
episodic memory service adopting the model proposed
in [18], and the procedural memory service adopting
the model proposed in [19] (which realizes the motor-
skills component in the Starzyk-Prasad model). This
is because these models represent the state of the art
for modeling episodic and procedural memories. The
work in [21] showed that HTM outperformed many of
the well-known neural models, such as ELM, ESN and
LSTM. Additionally, HTM requires little or no hyper-
parameter tuning. HTM is very suitable for concept
identiﬁcation and predictions. Hence, we propose to
build the semantic memory service using HTM to
represent learnt concepts/beliefes. Then, we need to
integrate such concepts/beliefes with the pain-network
to be able to learn the action suitable for every learnt
concept/belief.
•
For building the motivation service, we propose to
adopt the motivation model of the the Starzyk-Prasad
model [22], in which motivation is modelled via a pain
network (i.e., connections between different sets of
sensory, pains, biases, and actions neurons). The pain-
network model is always changing according to the
responses of different actions. We also propose to use
ML as the digital brain action selection approach [15]
because ML compromises between making gains and
relieving pains using the pain network model. ML
extends the well-known reinforcement learning ap-
proach, and use it when curiosity-based learning is
needed. A current goal is selected based on a dominant
pain signal, and it represents an intended action that
the agent wants to perform.
•
For building the planning and thinking service, we
propose to use the attention switching approach pro-
posed in [22] that is based on mental saccade mecha-
nism. A “mental saccade is a concept created to mimic
the well-established concept of “visual saccade [22].
The mental saccade identiﬁes the object with the most
salient features from all the collected information and
makes it the attention spotlight. Then, it retrieves all
22
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

TABLE I. THE ROADMAP FOR REALIZING THE PROPOSED APPROACH
Implementing Service
Component
Realizing Solution
Digital
Decoders/Encoders Services
Adopt different sparse encoders for each data type such as the ones discussed in [12].
Brain
Sensory Processing Service
Handle the reﬂexive actions (retrieved from semantic and procedural memories).
Service
Motor Processing service
Execute action plans over different motor units (i.e., straightforward operations calls).
Machine
Episodic Memory Service
Adopt the most recent model proposed in [18].
Consciousness
Procedural Memory Service
Adopt the well-known model proposed in [19].
Service
Semantic Memory Service
Integrate the cortical earning algorithm (CLA) of HTM model [21] with the pain network model [15].
Sub-Cortical Service
Adopting the pain-network and ML mechanism proposed in [15].
Action Monitoring Service
Compare between predicted and actual actions’ resposnes.
Central Executive Service
Adopt the mental saccade, attention switching, and cognition techniques discussed in [22].
the corresponding information about this object to start
the cognition and identiﬁcation processes. This is done
by adopting the well-established concept of a global
workspace (summarized in [7]), where all the infor-
mation of the activated processes are collected in one
global space (i.e., an associative memory). This space
is known as the “mental workplace. The operation
of searching this mental workspace is known as a
“mental saccade. Once the perceived input activates
an object in the mental workspace, its corresponding
information in the episodic memory and semantic
memory are activated and uploaded to the mental
workspace. Such updated mental workspace will be
researched for a new mental saccade. The mental
saccade mechanism adopts a simple winner-take-all
approach to choose the attention spotlight among
competing signals. A successful execution of a given
action triggers the memorization of the discovered
solution in the procedural memory, which in turn train
itself to remember the best performing actions. This
is needed to create rhythmic actions to avoid future
planning for the same situations appeared before [15].
Table I indicates the major components of the machine
consciousness model, and their proposed realizing solutions.
It also shows the suggested implementing service for every
component. This table provides the roadmap for building
organic web services. By realizing the components indicated in
this table, we can easily build the digital brain and the machine
consciousness services from those components, as shown in the
use case discussed in Section V.
V.
A USE CASE
This sections shows how the proposed approach could be
adopted in real-life, and discusses a corresponding use case.
In our previous work in [3], we proposed the CRESCENT
framework for managing composite web services. CRESCENT
aimed to be autonomous, so it is designed to be self-healing,
self-optimizing, and self-organizing. Therefore, it has modules
for SLA management, workﬂow management, adaptive com-
position, capacity planning management, components provi-
sioning, components discovery, dispatchers and monitors. Fig-
ure 3 depicts the main modules of the CRESCENT framework
and their interactions. Unfortunately, CRESCENT is designed
based on pre-deﬁned rules and policies for detecting and re-
placing bad performing components. Hence, CRESCENT can
ensure the managed composite web service to be autonomous,
but not organic.
Given that we have a composite web service that realizes
a given real-life business process, and we want to make this
composite web service organic using the proposed approach,
the CRESCENT framework should be extended to to create
the digital brain service. This should be done by adding
all the low-level components of the machine consciousness
model (shown in Table I) to CRESCENT, where the other
CRESCENT modules appear as different functional units in
the digital brain service. Then, we need to create the machine
consciousness service, which will have all high-level compo-
nents of the machine consciousness model. Once the digital
brain and the machine consciousness services are created, we
connect the composite web service to be managed into the
digital brain service, as in Figure 1. Then, we start the training
process until all neural models converge. Finally, we release
the digital brain and machine consciousness services to manage
the composite web service in real-life situations, and let them
grow and evolve.
VI.
CONCLUSION AND FUTURE WORK
This paper argued that to be able to build self-managing
services, services are needed to be autonomic and organic.
Therefore, this paper proposed a novel approach for building
organic web services, in which a digital brain service is created
to transform any ordinary service into an organic service. This
is done by connecting the ordinary service to the digital brain
service, which in turn is connected into a machine conscious-
ness service to accomplish all cognition, thinking, learning,
planning, and decision making tasks. The paper proposed
to adopt the Starzyk-Prasad machine consciousness model
to build both the digital brain and machine consciousness
services, showing the mapping between the model’s modules
and the implementing services. The paper also discussed
different problems that create obstacles for building the digital
brain service (i.e., the representation problem, the memory
modeling problem, the planning and thinking problem, and the
motivation and learning problem), then it proposed solutions
for every problem, creating a roadmap for building digital
brains for software systems.
Future work will focus on implementing a prototype for
the digital brain service, then training different instances of the
digital brain service for different application domain business
services. We believe extending the CRESCENT framework to
include machine consciousness components is the way forward
to build a digital brain prototype.
23
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

Figure 3. CRESCENT Architecture [3]
REFERENCES
[1]
C. M¨uller-Schloer, “Organic computing: On the feasibility of controlled
emergence,” in Proceedings of the 2nd IEEE/ACM/IFIP International
Conference on Hardware/Software Codesign and System Synthesis,
2004, pp. 2–5.
[2]
J. O. Kephart and D. M. Chess, “The vision of autonomic computing,”
Computer, vol. 36, no. 1, Jan 2003, pp. 41–50.
[3]
I. Elgedawy, “CRESCENT: A reliable framework for durable composite
web services management,” Computer Journal, vol. 58, no. 2, Feburary
2015, pp. 280–299.
[4]
A. Lam, J. J. Q. Yu, Y. Hou, and V. O. K. Li, “Coordinated autonomous
vehicle parking for vehicle-to-grid services: Formulation and distributed
algorithm,” IEEE Transactions on Smart Grid, vol. PP, no. 99, 2017,
pp. 1–1.
[5]
S. Singh and I. Chana, “Qos-aware autonomic resource management in
cloud computing: A systematic review,” ACM Comput. Surv., vol. 48,
no. 3, Dec. 2015, pp. 42:1–42:46.
[6]
D. Gamez, “Progress in machine consciousness,” Consciousness and
Cognition, vol. 17, no. 3, 2008, pp. 887 – 910.
[7]
J. A. Reggia, “The rise of machine consciousness: Studying conscious-
ness with computational models,” Neural Networks, vol. 44, 2013, pp.
112 – 131.
[8]
J. A. Starzyk and D. K. Prasad, “A computational model of ma-
chine consciousness,” International Journal of Machine Consciousness,
vol. 03, no. 02, 2011, pp. 255–281.
[9]
I. Elgedawy, “Machine consciousness as a service (MCaaS): a
roadmap,” to appear, Iran Journal of Computer Science, Oct 2017.
[10]
A. Chella and R. Manzotti, “Machine consciousness: A manifesto for
robotics,” International Journal of Machine Consciousness, vol. 01,
no. 01, 2009, pp. 33–51.
[11]
S. Ahmad and J. Hawkins, “Properties of sparse distributed represen-
tations and their application to hierarchical temporal memory,” CoRR,
vol. abs/1503.07469, 2015.
[12]
K. Gupta and A. Majumdar, “Sparsely connected autoencoder,” 2016
International Joint Conference on Neural Networks (IJCNN), 2016, pp.
1940–1947.
[13]
S. Purdy, “Encoding data for htm systems,” CoRR, vol. abs/1602.05925,
2016.
[14]
T. T. Rogers and J. L. McClelland, “Prcis of semantic cognition:
A parallel distributed processing approach,” Behavioral and Brain
Sciences, vol. 31, no. 6, 2008, p. 689714.
[15]
J. A. Starzyk, J. T. Graham, P. Raif, and A.-H. Tan, “Motivated learn-
ing for the development of autonomous systems,” Cognitive Systems
Research, vol. 14, no. 1, 2012, pp. 10 – 25.
[16]
J. Hawkins and D. George, “Hierarchical temporal memory concepts,
theory, and terminology,” in Technical report, Numenta, 2006.
[17]
J. Hawkins, D. George, and J. Niemasik, “Sequence memory for
prediction, inference and behaviour.” Philosophical transactions of the
Royal Society of London. Series B, Biological sciences, vol. 364 1521,
2009, pp. 1203–9.
[18]
W. Wang, B. Subagdja, A. H. Tan, and J. A. Starzyk, “Neural modeling
of episodic memory: Encoding, retrieval, and forgetting,” IEEE Trans-
actions on Neural Networks and Learning Systems, vol. 23, no. 10, Oct
2012, pp. 1574–1586.
[19]
F.
P.
Tamborello,
“A
computational
model
of
routine
procedural memory,” Ph.D. dissertation, 2009. [Online]. Available:
https://search.proquest.com/docview/304989696?accountid=13014, [re-
trieved: 12, 2017]
[20]
J. Graham, J. A. Starzyk, Z. Ni, H. He, T. H. Teng, and A. H. Tan,
“A comparative study between motivated learning and reinforcement
learning,” in 2015 International Joint Conference on Neural Networks
(IJCNN), July 2015, pp. 1–8.
[21]
Y. Cui, C. Surpur, S. Ahmad, and J. Hawkins, “A comparative study
of htm and other neural network models for online sequence learning
with streaming data,” 2016 International Joint Conference on Neural
Networks (IJCNN), 2016, pp. 1530–1538.
[22]
J. A. Starzyk, “Mental saccades in control of cognitive process,” in
The 2011 International Joint Conference on Neural Networks, 2011,
pp. 495–502.
24
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-606-4
SERVICE COMPUTATION 2018 : The Tenth International Conference on Advanced Service Computing

