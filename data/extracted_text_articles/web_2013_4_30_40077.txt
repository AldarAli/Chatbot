eRaUI: An Adaptive Web Interface for e-Research Tools 
 
Farhi Marir, Sahithi Siva, Yango Jing 
Knowledge Management Research centre, 
School of Computing, London Metropolitan University, London N7 8DB 
f.marir@londonmet.ac.uk , s.siva@londonmet.ac.uk, y.jing@londonmet.ac.uk 
 
 
Abstract— This paper presents the design and development of 
E-Research Adaptive User Interface (ERaUI) portable widget 
which uses case-based paradigm to learn web user profiles to 
enhance the usability and learnability of its host and adapt its 
content to that user profile. First, it uses click and mouse 
movement heat map techniques to track and record both user 
browsing behavior and the services provided by the host web 
site into text format which will be analysed by a text mining 
algorithm to form browsing patterns including changes in the 
web site content. Then, case-based reasoning paradigm and 
inductive learning algorithms analyse and index these 
browsing patterns into groups of web user profiles and store 
them into a case base memory from which most similar cases 
will be retrieved by ERaUI to identify and classify new users or 
discover new group of users. These web user profiles will be 
used by ERaUI to provide personalised services like content 
and collaborative search facilities useful for each web user 
profile, 'live help' box enabling the user to seek support and 
guidance from the admin feature of the host web site and 
display minimum content and a concise list of web site services 
that are  most appropriate to individual web user profiles. This 
paper also discusses user evaluation of NaCTeM web site with 
and without ERaUI widget, and presents improvements 
identified through a series of usability tests.  
Keywords-Web User Modelling; Adaptive user interface; 
Learnability; Usability; Heat map; Widget 
I. 
 INTRODUCTION 
Adaptation refers to the notion of changing something to 
meet some specific requirements or purposes [1]. Adaptive 
systems are described as tools  that generate new information 
about how to do the task better by analysing past experience 
and relating it to performance criteria set by humans [2]. It is 
also stated that an adaptive system adapts its behaviour to 
individual users based on information about them which can 
be either explicitly gathered or implicitly obtained during 
user-system interaction, and the adaptive system performs 
the adaptation using some form of learning, inference or 
decision making [3].  
While it is recognised that adaptive interfaces improve 
usability, users’ experiences and learnability and that they 
bring potential gains and a cost-benefit trade-off for 
usability, critics argue that autonomous user interface 
adaptation may disorient users and reduce its usability. Most 
critics relate these limitations with the unpredictable nature 
of the adaptive user interfaces and lack of accuracy [4, 5, and 
6].  Learnability here refers to the system's support of the 
user's efforts to learn how a system or an application has to 
be used 
This paper looks at adaptive user interfaces from two 
viewpoints i.e. usability and learnability. The research 
considers two approaches in designing adaptive interfaces 
that address the above mentioned limitations: (i) those 
adaptive (static) user interfaces designed based on usability, 
learnability principles and methods, and user feedback are at 
the design level only and (ii) those adaptive (dynamic) user 
interfaces designed based on similar principles and methods 
but are different in that they keep on learning about users in 
dynamically adapting themselves to the needs of current and 
prospective users.  
Case-based reasoning and inductive learning methods are 
used in profiling users and these user profiles are used in 
dynamically 
customising 
the 
web 
interface. 
The 
customisation comprises highlighting useful web page 
content and providing a list of selectable links to the content 
that is most appropriate to an individual user.  
A number of methods have been used in the design of 
static adaptive user interfaces. For instance, analysis of the 
user interface using inspection methods such as heuristic 
evaluation, 
cognitive 
walkthroughs, 
GOMS 
(Goals, 
Operators, Methods, and Selection rules) analysis, and so on 
[7]. Also, empirical usability and learnability methods which 
involve user testing in a laboratory environment, could be 
either as formative or summative [8].  Formative studies are 
carried out during the product development process with the 
aim of fixing problems found during the product 
development process whereas summative studies are carried 
out after completion of the development and are used more 
as a basis for reflection and future work and base lining a 
product [9]. The activities undertaken include auto-
recorded/measured user performed tasks, interviews, and 
analysis of experimental data.  
However, dynamic adaptive user interfaces are enhanced 
with learning user profiles which could be either Informative 
interfaces that focus on filtering information the user finds 
interesting or useful, or Generative interfaces that generate 
some useful knowledge structures to support the user in their 
experience with the user interface [10]. 
In this paper, we present a dynamic e-Research adaptive 
user interface (ERaUI) widget. It is portable and is easy to 
add-on to any web site by adding a few lines of code to the 
header of the host web pages. It uses case-based reasoning 
paradigm and machine learning algorithms to learn from web 
user profiles that are generated whilst the users navigate 
through the website. ERaUI widget is an extension of a JISC 
93
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

project commissioned to develop an adaptive interface to 
improve usability and learnability of NaCTeM e-Research 
tool [29]. The main focus of the eRaUI project is to 
customize the content of the host web site and highlight 
appropriate resources (e.g., menu options) according to the 
user’s profile. 
The paper is divided into five sections. Section II focuses 
on previous work pertaining to static and dynamic adaptive 
user interfaces. Section III describes usability and 
learnability methods used in the design and development of 
ERaUI widget. Section IV evaluates the usability and 
learnability features of ERaUI, and finally Section V 
presents the research findings and future work. 
II. 
PREVIOUS WORK ON ADAPATIVE INTERFACES 
Several recent projects have been sponsored by Joint 
Information Systems Committee (JISC) to develop usable 
and learnable user interfaces [30]. Most of these could be 
considered as static adaptive interfaces as usability and 
learnability are dealt with at the design level only. ALUIAR 
project [30] ranks the results of a user group feedback 
through interviews and “walk throughs” to improve the 
usability and learnability of the user interface of Synote [30], 
the open source web based video and audio annotation tool.  
Rave in Context project [30] developed usable, 
accessible, learnable and adaptable W3C widget templates 
and widgets for MyExperiment, Simal and OpenDOAR web 
sites.  
USeD project [30] developed a new user interface to 
improve the usability of Digimap data downloader, making it 
easier for a range of subscribers to use. It was designed by 
creating a number of stereotypical user Personas, which are 
based on the actual Digimap user requirements, their 
expectations of the service and their knowledge of spatial 
data.  
ReScript Usability/Learnability Enhancement project 
[30] improved usability and learnability of the user interface 
of ReScript, a prototype of digital editing and research 
environment originally developed to support collaborative 
work on historical texts.  Feedback compiled from a series of 
online surveys and interviews with editors and researchers 
was used to make changes to the ReScript interface to meet 
the needs of a variety of researchers working with very 
different texts, and with differing levels of expertise.  
 The Word Tree Corpuce Interface [30] had the goal of 
providing an alternative interactive user interface to 
traditional text-analytical tools like KeyWords In Context 
(KWICs).  The website produced allows users to generate 
word trees for individual terms, starting from the searched 
term at the leftmost edge with branches of proceeding words 
extending to the right. To develop a usable and learnable 
user interface, the Word Tree Corpus team undertook a 
combination of quantitative and qualitative studies through 
surveys and video interviews of stakeholders. They also used 
Google analytics to analyse user behaviour and to further 
improve their new user interface to reflect the users’ needs. 
The literature review revealed a significant number of 
studies on dynamic adaptive interfaces. Pazzani and Billsus 
[11] reported the development of  SySKILL & WEBERT 
adaptive web user interface, which recommends web pages 
on a given topic that the user is likely to find interesting. The 
user marks suggested pages as desirable and undesirable and 
the system uses naive Bayesian classifier [32] for this task, 
and demonstrates that it can incrementally learn profiles 
from user feedback on how interesting web sites are. 
Furthermore, the Bayesian classifier may easily be extended 
to revise user provided profiles.  
Another web user interface, NEWSWEEDER system 
[12], recommends stories to the user using each word in the 
story to predict whether the user finds the story interesting or 
not.   
P-TIMS [13] is a commercial financial management 
system and was revised to add an adaptive and adaptable 
interface using a simple user model and rule set. As the user 
spends more time using the system and uses more complex 
functions, the system reveals a more extensive interface. The 
user model is explicitly exposed by providing a 
"preferences" dialog box, which the user can adjust at any 
time.  
AVANTI [14] is a hypermedia information system about 
a metropolitan area and uses an initial interview to create the 
initial primary assumptions (i.e., user profile), draws 
inferences to generate additional assumptions, and uses 
stereotypes for certain subgroups of users (e.g., tourists, 
blind users). It then customises the web pages presented to 
the user accordingly.  
Interbook [15] is an adaptive system which derives much 
of its data for the user model from the user interface 
component, and which can track user actions and report them 
in detail to the application user model. Interbook addresses 
these problems by tracking what the users have seen, rather 
than what they have done, and using that to infer what the 
users know. 
Most recently, Lee et al. [16] developed a user interface 
prototype for the Android smartphone, which recommends a 
number of applications to best match the user's context based 
on five variables; time, location, weather, emotion, and 
activities. The developed system derives the best three 
recommended applications based on a probabilistic learning 
and inference algorithm named "Spatiotemporal Structure 
Learning" [33], which extends Naive Bayesian Classifier 
[32]. 
It can be noticed that most of the above dynamic adaptive 
interfaces require explicit input from the user to be able to 
model web user profiles and adapt web user interfaces to 
satisfy individual user profiles. ERaUI which is also a 
dynamic adaptive web user interface implements an 
intelligent and portable widget, which provides both explicit 
and implicit input from the user to build web user profiles. In 
the implicit input, ERaUI uses automatic tracking 
mechanisms to track and record the user behaviour whilst 
browsing the web site on which ERaUI widget is hosted. It 
also uses inductive learning algorithms to identify or 
discover new web user profiles and enhances the host web 
site’s usability and learnability capabilities. Furthermore, it 
detects changes in hosted web site content in terms of 
functionalities and resources while tracking the user 
94
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

browsing and reflecting that in the adaption of the web user 
interface and also the services presented to the user.  
III. 
DEVELOPMENT PROCESS OF ERAUI ADAPTIVE USER 
INTERFACE  
A. 
ERaUI Web User Interface  Design 
In ERaUI project, adaptive web user interface is seen as 
an interactive software system that improves its usability and 
learnability in its interaction with a user based on partial 
experience with that user. The formal definition of usability 
by the International Standards for HCI and Usability [31] is 
that usability is concerned with the “effectiveness, efficiency 
and satisfaction with which specified users achieve specified 
goals in particular environments.” Effectiveness means how 
accurately and completely users can achieve their goal. 
Efficiency means the effort required to achieve a goal. 
Satisfaction means the comfort and acceptability of using the 
system to achieve the goal. These definitions are in 
agreement with [7] who also stressed the importance of 
learnability as an important aspect of usability. 
  According to the Usability First glossary and reference 
[17] learnability is a measure of the degree to which a user 
interface design can be learned quickly and effectively. 
Learning time is the typical measure. User interfaces are 
usually easier to learn when they are familiar to the user 
and/or designed to be easy to use based on core 
psychological properties. Through literature reviews the 
learnability of a user interface design can be broken down 
into five types: Familiarity, Consistency, Generalizability, 
Predictability, and Simplicity. It is also stressed that although 
learnability could be   part of usability, little is shown that an 
increase of ease of use (usability) can be realised without 
actually improving the user’s mental model (learnability) of 
adaptive systems. 
Several methods have been used in the design of usable 
and learnable user interfaces. Analytical usability studies 
involve analysis of the system using inspection methods such 
as heuristic evaluation, cognitive walkthroughs, GOMS 
analysis, and so on [7]. Empirical usability involves people 
using test methods and traditionally conducted as either 
formative or summative studies [8].  Formative studies are 
carried out during the product development process with the 
aim of fixing problems found during the product 
development process whereas summative studies are carried 
out after completion of the development and are used more 
as a basis of deciding lessons learned and base lining a 
product [7]. The activities undertaken generally include 
recorded/measured usability evaluation, interviews, and 
laboratory-based experiments and so on. Nielsen and Phillips 
[18] research on “estimating the relative usability of two 
interfaces” concluded that the most reliable way of 
determining the relative performance was through the use of 
empirical usability studies rather than analytical usability 
studies although those empirical studies are more expensive 
to perform. 
ERaUI was designed based on a methodology 
commonly found in usability studies and recommended by 
[7]. It uses personas and scenarios as a way of 
contextualising the what, where, how, when and why of the 
use of an application so that in essence it shows to the 
targeted users. Power of personas is that all stake holders 
involved in the design process are much more likely to 
engage with other people, real or fictional, than they are 
with statistical information [19].  
We conducted an experiment within the university 
research community on the impact of usability methodology 
of personas and scenarios that led to the design of the 
ERaUI interface as an intelligent and portable widget that 
we deployed on the left hand side of NaCTeM web interface 
as shown in Figure 1. 
 
Figure 1.  
ERaUI Widget hosted by NaCTeM Web Site. 
  
As shown in Figure 1, ERaUI can be hosted on any web 
site by adding few lines of code to the host website header 
files. The widget is comprised of a free-text / autocomplete 
search box which offers enhanced search capabilities for 
host websites. The learners can also specify explicitly their 
profile (e.g., skill level) for NaCTeM host web site, and can 
additionally choose from a variety of links which are 
recommended according to their user level. At the bottom of 
the widget, a ‘live help’ for  users browsing the host website 
to communicate with the website administrator in real-time. 
B. 
ERaUI Learning Web User Profile   
ERaUI project uses case-based reasoning (CBR) 
paradigm [20, 21] to learn about the user’s profile and in 
developing the ERaUI adaptive web user interface. CBR 
uses machine algorithms to solve new problems by adapting 
solutions of previous similar problems following the cycle 
Retrieve, Reuse, Revise and Retain, as shown in Figure 2.  
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 2.  CBR Cycle [21] 
RETRIEVE 
REUSE 
RETAIN 
New Pattern/User Profile 
Retrieved User Profiles 
REVISE 
Proposed Profile 
Retained 
Profile 
95
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

For example, CBR systems CLAVIER [22], which are 
developed as advisory systems to recommend loads and 
layout for aircraft parts to be cured in an autoclave, and 
CBRefurb [23], which retrieves previous similar refurbished 
buildings to estimate the cost of new refurbishment. Both use 
inductive learning algorithms within CBR to index and 
retrieve and revise/adapt most similar past cases from their 
case libraries.  
 
1) ERaUI Case Representation 
ERaUI case is represented by two data structures 
which will be initially set by the administrator of the host 
web site: a user categories structure in which the admin can 
set initial known categories of web user profiles like for 
instance Novice, Student and Expert category of users of 
NaCTeM e-Research tool. A second keyword structure of 
the host web site and links in which the admin can set 
keywords, web page links and external web sites and assign 
them to the categories already set. Once set, these two 
structures are automatically managed by ERaUI learning 
system. That means ERaUI case-based learning system can 
automatically make changes to the content of either 
structure by adding or removing categories of users in the 
category structures or adding or removing keywords in the 
keyword structures to reflect the changes in both the user 
behaviour and the changes in the content or functionalities 
in the host web site itself. 
  
2) ERaUI Case Indexing and Populating 
 
ERaUI use click / mouse movement heat maps 
techniques to tracks the user interaction with the host 
website as shown in Figure 3.  
 
 
Figure 3.  ERaUI Click & Mouse Movement Heat Map. 
The results of click heat maps tracking are translated by 
ERaUI into text format and stored as a personal user record 
in ERaUI database as shown in Figure 4.  
 
 
Figure 4.  User Records and brpwsing patterns 
The ERaUI text mining tool analyses the collected user 
text records to derive user patterns (clicked key words, 
functions, webs site links, etc.) which will be represented as 
new case (vector) of the current user updating the case base.  
This new case will be further analysed by the ERaUI case-
based inductive algorithm to determine whether it is a new 
or an existing web user profile and therefore updating if 
necessary the content of the category structure 
 
3) ERaUI Machine Learning Algorithm 
 
Given a description of a problem, a retrieval algorithm, 
using the indices in the ERaUI case-memory, should retrieve 
the most similar cases to the current problem or situation. 
The retrieval algorithm relies on the indices and the 
organisation of the memory to direct the search to potentially 
useful cases. 
The issue of choosing the best matching case has been 
addressed by research into analogy [24]. This approach 
involves using heuristics to constrain and direct the search.  
Case-based reasoning will be ready for large scale 
problems only when retrieval algorithms are efficient at 
handling thousands of cases. Unlike database searches that 
target a specific value in a record, retrieval of cases from the 
case-base must be equipped with heuristics that perform 
partial matches, since in general there is no existing case that 
exactly matches the new case. 
In order to retrieve or generate suggestions on the web 
user profile which are relevant to the given browsing pattern 
we had to consider amongst well-known methods for case 
retrieval like nearest neighbour, induction, knowledge guided 
induction and template retrieval. We found that the most 
effective algorithm to match users with results according for 
instance to their skill level in NaCTeM was Nearest 
Neighbour Algorithm (NNA) because it is more effective 
when the case base is not huge.  
NNA involves the assessment of similarity between 
stored cases and the new input case, based on matching a 
weighted sum of features. A typical algorithm for calculating 
nearest neighbour matching is the one reported in [25]  
where w is the importance weighting of a feature (key word, 
web link, etc…), sim is the similarity function, and fI and fR 
are the values for feature i in the input and retrieved cases 
respectively. 
  
96
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

 
 
Figure 5.  
Nearest Neigbour Algorithm 
Furthermore, Induction algorithms ID3 [26], which 
determine the dominant, are used to discriminate cases based 
on these features; they generate a decision tree type structure 
to organise and categorise ERaUI cases of web user profiles 
in memory. 
IV. 
ERAUI USABILITY AND LEARNABILITY FEATURES 
 
In addition to its design using an iterative design 
methodology 
that 
focuses 
on 
usability, 
learnability, 
participatory 
design 
suitable 
for 
service-based 
implementations, ERaUI widget uses case-based reasoning 
and inductive learning methods to learn about both the user 
profile and the host web user interfaces in deducing and 
displaying needful information for the user.  
ERaUI has addressed most of the common issues 
reported in the literature that arise in developing adaptive or 
advisory 
interfaces 
including 
information 
filtering, 
supporting the user in his/her experience with the web site 
and also visual changes to the user interface itself.  
 
1) ERaUI Filtering Information 
 
ERaUI implements advanced filtering algorithm(s) for 
extracting digital content of the host web site like NaCTeM 
to match user needs. Content and collaborative based 
filtering methods [27, 23] have been used as the basis for 
selection and learning about the content of NaCTeM web 
site. Content methods suggest topics similar to the ones a 
user group with similar profile has liked in the past as shown 
in Figure 6: 
 
 
Figure 6.  Results of content filtering method 
However, as shown in Figure 7, collaborative filtering 
methods suggest items outside the user's normal area that the 
user will still find interesting, as the basis for selection and 
learning.  
 
 
Figure 7.  Panes of similar pages from collaborative filtering 
2) ERaUI Web User Interface Adaptation 
 
Also, based on the identified web user profile, ERaUI 
recommends choices on some aspects of the research 
processes as desirable or undesirable, rating them on a scale 
and giving some similar form of evaluation to help the user 
in his/her selection of retrieved information. An instance of 
ERaUI user interface adapting itself to a category of users is 
shown in Figure 8. This screenshot suggests to the user 
currently browsing the host web site a few links 
in yellow colour, normally used by users with similar web 
user profiles. 
 
 
 
Figure 8.  Suggesting useful links for a category of users 
3) ERaUI Live User Support 
 
As shown in Figure 9, ERaUI interface also provides live 
communication facilities through ‘live help' box enabling the 
user to seek support and guidance from the NaCTeM host 
web site administrator. 
 
 
Figure 9.  
ERaUI live help box 
97
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

 
4) ERaUI Widget Evaluation 
 
In a recent study, the investigation undertaken in Lazar et 
al. [28] found that users lose up to 40% of their time due to 
“frustrating experiences” with the application interfaces, 
with one of the most common causes of these frustrations 
being missing, hard to find, and unusable features of the 
software application.  
In order to assess the frustration of the users and evaluate 
the ERaUI widget based on some usability and learnability 
criteria, we invited around fifty researchers and students with 
different skills to run NaCTeM web user interface with and 
without ERaUI widget.  The users are divided into two 
groups. Each user has been given identical tasks to complete 
in a given time. The measure we used for evaluating ERaUI 
widget usability and learnability features were based on 
completion of tasks on time, accuracy in providing 
information to the user and also predictability of user 
interface. 
 They were asked to complete a series of simple tasks using 
the widget. Different researchers were asked to complete a 
series of tasks without the widget. We compared the results 
of the two groups to get an idea of how effective ERaUI is at 
enhancing the experience of users. We set the following 
tasks: 
 
Write down the postcode of the National Centre for 
Text Mining. 
 
Write down the name of one member of Core Staff 
working at NaCTeM 
 
Write down the name of the only listed Visiting 
Researcher at NaCTeM. 
 
Write down the closing date for applying for PhD 
studentship advertised on NaCTeM website (3 year 
studentship based at the School of Computer 
Science, University of Manchester). 
 
Post some simple feedback to NaCTeM. Write down 
the keyword which appears when you do this. 
 
The results of this evaluation have shown that all users 
who used NaCTeM with ERaUI widget completed all the 
tasks on time compared to 80% when using NaCTeM without 
ERaUI widget.  
Another evaluation carried out in this research is the 
accuracy of the actions predicted by the ERaUI widgets. For 
this, we conducted a second evaluation test with 45 
researchers and students to assess predictability and 
accuracy of ERaUI through the following predictability and 
accuracy tests:   
 
Set you user profile (skills) in the ERaUI Interface 
for NaCTeM and check if the web links list in the 
widget and those highlighted in yellow in NaCTeM 
resources predict and match the profile you selected 
 
Browse through NaCTeM web site for five minutes 
without setting your user profile and check if ERaUI 
is predicting and highlighting in yellow colour a 
number of web page links and/or functionalities 
within NaCTeM web content which are useful to 
you 
 
Make a search using ERaUI Interface and another 
search using original NaCTeM and compare which 
one is more accurate and useful for the user, 
 
Check the accuracy of results by comparing the 
results of the same functions of the original 
NaCTeM (like search and browse through some of 
NaCTeM functionalities) with the same functions 
and searches provided by ERaUI 
Results on predictability and accuracy test have shown that 
75% reported that the ERaUI widget predicted what they are 
looking for and 85% reported that ERaUI provided accurate 
information they asked for. This is compared to around 15% 
predictability and 75% accuracy when using NaCTeM 
interface without ERaUI respectively. 
 
V.  CONCLUSION AND FUTURE WORK 
In this paper, we presented an initial design and 
development of an adaptive web user interface in the form of 
an intelligent and portable widget named ERaUI that could be 
hosted on top of any web site user interface to enhance its 
usability and learnability features.  
The research proposed two approaches to the design and 
development of adaptive user interfaces. In both the cases the 
adaptive features are set either by using usability and 
learnability methods and elicitation of the users’ needs at the 
design level only or by requiring explicit input from the user 
whilst browsing through the web site interface to be able to 
build user profiles and use it to adapt the web user interface.  
 ERaUI uses usability and learnability methods like 
persona and scenarios customising web user interface with or 
without explicit input from the user. This is achieved by 
learning user’s profile through the following methods: (i) 
observe mouse click or mouse movement to track and collect 
user browsing behaviour, (ii) text mining to analyse the tracks 
and identify user browsing patterns/features, and (iii) case-
based reasoning paradigm to index and store user profiles in 
case-based memory and nearest neighbour and ID3 inductive 
learning algorithm to retrieve or discover and also to classify 
web user profiles in the case-base memory.   Each user 
profile will then be used to customise suitable web content.  
   ERaUI has used user profiles to implement some of the 
usability and learnability features like advanced search and 
filtering algorithms to provide useful information to user, 
adapting the content of the host web site to show only 
appropriate resources and functional features that meet the 
user profile and also support the user through communication 
tools. 
One of the key approaches to assessing usability and 
learnability of a user interface will be via real users’ 
evaluation and testing of the interface. For this, we conducted 
an initial evaluation and testing of ERaUI by inviting around 
fifty researchers and students to experiment with NaCTeM 
web site, with and without ERaUI widget. Although these 
98
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

evaluation tests are not comprehensive in that they do not 
include comprehensive usability and learnability measures, 
they have shown that there are significant improvements of 
the users’ experience when using ERaUI widget based on 
testing usability and learnability measures like completing 
tasks on time, accuracy of returned information and 
prediction of users’ expectations. Further work will be 
undertaken to experiment and improve the ERaUI widget.  
ACKNOWLEDGEMENT 
The authors would like to thank JISC for their funding of this 
research and the JISC main committee members and the 
reviewers for supporting the work. The authors acknowledge 
the work of Eamonn Ramsay, the Software Developer of this 
project.  
REFERENCES 
[1] Victor M.G.B, “Personalization in Adaptive E-Learning 
Systems, A Service-Oriented Solution Approach for Multi-
Purpose user Modelling Systems,” Faculty of Computer 
Science, Graz University of Technology, Graz, Austria, May 
2007 
[2] Werbos, P.J. , “Building and understanding adaptive systems: 
A statistical/numerical approach to factoryautomation and 
brain research”. IEEE Transactions on Systems, Man, and 
Cybernetics, 1987, vol 17(1), pp 7-20. 
[3] Anthony J. and Krzysztof Z. G.,”The human-computer 
interaction handbook: Fundamentals, evolving technologies 
and emerging applications” In Systems That Adapt to Their 
Users J. A. Jacko (Ed.) (3rd ed.), 2012 Boca Raton, FL: CRC 
Press.  
[4] Tim F. P., Jasper L. and Mark N. "Usability trade-offs for 
adaptive user interfaces: ease of use and learnability" 
Proceedings of the 9th International Conference on Intelligent 
User Interface IUI’04, Jan. 13–16, 2004, Madeira, Funchal, 
Portugal. ACM 1-58113-815-6/04/0001. 
[5] Krzysztof Z. Gajos, Katherine E., Desney S. Tan, Mary C., 
and Daniel S.W. "Predictability and accuracy in adaptive user 
interfaces." In CHI '08: Proceeding of the twenty-sixth annual 
SIGCHI conference on Human factors in computing systems, 
pages 1271-1274, New York, NY, USA, 2008. ACM. 
[6] Talia L., Joachim M., "Benefits and costs of adaptive user 
interfaces" Int. J. Human-Computer Studies 68, pp. 508–524, 2010 
Elsevier. 
[7] Nielsen, J. “Usability Engineering” Book published by 
Morgan Kaufman, San Francisco 1993, ISBN 0-12518406-9 
1993 
[8] Holzinger A., “Application of Rapid Prototyping to the User 
Interface Development for a Virtual Medical Campus”. IEEE 
Software, Volume 21, Issue 1, pp92-99, 2004 (ISSN 0740-
7459) [Software Engineering, Rapid Design, Graphical User 
Interface (GUI)] 
[9] Barnum C., “Preparing for usability testing” In Usability 
testing essentials ready, set—test!” Burlington, 2010, pp 188-
229, MA. Morgan Kaufmann Publishers. 
[10] Langley, P. “Machine learning for adaptive user interfaces”. 
Proceedings of the 21st German Annual Conference on 
Artificial Intelligence (pp. 53-62), 1997, Freiburg, Germany: 
Springer. 
[11] Pazzani M.,& Billsus D.,"Learning and Revising User 
Profiles: The identification of the interesting web sites", 
Machine Learning, 27, 313 331, 1997. 
[12] Lang, K., "NewsWeeder:Learning to filter news". Proceeding 
of the twelfeth International Conference on Machine  
Learning, pp331-339. Lake Taboe, CA, Morgan Kaufmann 
(1995) 
[13] Strachan, L., Anderson, J., Sneesby, M., and Evans, M. 
"Pragmatic User Modelling in a Commercial Software 
System." In Anthony Jameson, Cécile Paris, and Carlo Tasso 
(Eds.), User Modeling: Proceedings of the Sixth International 
Conference, UM97. Vienna, New York: Springer Wien New 
York, 1997. Available from the World Wide Web: 
http://www.um.org 
[14] Fink, J., Kobsa, A., and Nill, A. "User-oriented Adaptivity 
and Adaptability in the AVANTI Project." Conference 
Designing for the Web: Empirical Studies. Microsoft 
Usability Group, Redmond, WA, 1996. Available from the 
World 
Wide 
Web: 
http://fit.gmd.de/hci/projects/avanti/publications/ms96.html. 
(last accessed on 2/1/13) 
[15] Fink, J., Alfred K., and Andreas N., "Adaptable and Adaptive 
Information Access for All Users, Including the Disabled and 
the Elderly." In Anthony Jameson, Cécile Paris, and Carlo 
Tasso (Eds.), User Modeling: Proceedings of the Sixth 
International Conference, UM97. Vienna, New York: 
Springer Wien New York, 1997, pp. 171-173. 
[16] Hosub L., Young S.C and  Yeo-Jin K., "An adaptive user 
interface based on spatiotemporal structure learning" 
Communications Magazine, IEEE, June 2011, vol. 49 , Issue 6, 
pp. 118 – 124. 
[17] Louis T. “Usability 101: Leranability” published online June 
2003 
available 
in 
http://www.tnl.net/blog/2003/06/17/usability-101-learnability/ 
(last accessed on 2/1/13) 
[18] Nielsen, J., and Phillips, V. L. "Estimating the relative 
usability of two interfaces: Heuristic, formal, and empirical 
methods compared" Proc. ACM INTERCHI'93 Conf. 
(Amsterdam, the Netherlands, 24-29 April), 214-221, 1993. 
[19] Grudin, J., ‘Why personas work – the psychological 
evidence.’ In: Pruitt, J., Adlin, T. (Eds.), The Persona 
Lifecycle, Keeping People in Mind Throughout Product 
Design, Elsevier, pp. 642–663, 2006. 
[20] Marir, F. and Watson, I.D. ‘A Categorised Bibliography of 
Case-Based Reasoning’, Knowledge Engineering Review 
Journal, 1994, Vol. 9:4, 355-381, 1994 
[21] Watson, I.D and Marir, F. (1994) ‘Case-Based Reasoning: An 
Overview’, Knowledge Engineering Review Journal, 1994, 
Vol. 9.4, pp. 32 7-354. 
[22] Hinkle, D. and Toomey, C.N. (1994). CLAVIER: Applied 
case-based 
Reasoning 
to 
composite 
part 
fabrication. 
Proceeding of the sixth Innovative Applications of Artificail 
Intelligence Conference, 1994,  pp 55-62, WA: AAAI Press 
[23] Marir F. & Watson I.D. (1995) “Representing and indexing 
building refurbishment cases for multiple retrieval of 
adaptable pieces of cases”. 1995, In, Manuela Voloso and 
Agnar Aamodt (Ed.). In, Lecture Notes in Artificial 
Intelligence: 
Case- 
Based 
Reasoning 
Research 
and 
Development. Berlin Heiderberg: Springer Verlag, LNAI 
1010, pp. 55-66. 
[24] Falkeneheimer, B., Forbus, K.D. and Gentner, D. (1986). The 
structure mapping engine. In, Proceeding of the Sixth 
National Conference on Artificial Intelligence, Philadelphia, 
PA, US.  
[25] Kolodner, J.L., (1993). Case-Based Reasoning. Morgan 
Kaufmann. 
[26] Quinlan, J.R. (1979). Induction over large databases. Rep. No. 
HPP-79-14, Heuristic Programming Project, Computer 
Science Dept., Stanford University, US. [26, Quinlan, 79] 
99
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

[27] Haouam, K. and Marir, F. (2006) ‘A Dynamic Weight 
Assignment Approach For Index Terms and Rhetorical 
Relations ”. Journal of Computer Science 2(3): 261-268.   
[28] Lazar, J., Jones, A. and Shneiderman, B., (2006). Workplace 
user frustration with computers: An exploratory investigation 
of the causes and severity. Behaviour and Info. Technology. 
25(3):239-251. 
[29] NaCTeM, (2013). The National Centre for Text Mining 
(NaCTeM) 
Homepage, 
http://www.nactem.ac.uk/ 
(last 
accessed on 2/1/13) 
[30] JISC 
(2013) 
http://www.jisc.ac.uk/whatwedo/programmes 
/researchinfrastructure.aspx (last accessed on 2/1/13) 
[31] International Standards for HCI and Usability (2013) 
http://www.usabilitynet.org/tools/r_international.htm 
(last 
accessed on 2/1/13) 
[32] Baysian 
Calssifier 
http://www.autonlab.org/tutorials 
/naive.html (last accessed on 2/1/13) 
[33] Walter 
F.B. 
and 
Terry 
C. 
Learning 
Spatio-
TemporalRelational 
Structures, 
Applied 
Artificial 
Intelligence, 15:707-722, 2001, Edited by Taylor & Francis. 
100
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-248-6
WEB 2013 : The First International Conference on Building and Exploring Web Based Environments

