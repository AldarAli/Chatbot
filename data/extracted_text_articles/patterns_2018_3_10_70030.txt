Control Transition Interfaces in Level 3 Automated Vehicles
Four Preliminary Design Patterns
Alexander G. Mirnig and Manfred Tscheligi
Center for Human-Computer Interaction
University of Salzburg
Salzburg, Austria
Email: alexander.mirnig@sbg.ac.at, manfred.tscheligi@sbg.ac.at
Abstract—Automated driving technology is rapidly progressing,
which causes increasingly complex in-vehicle systems and simi-
larly complex in-vehicle interaction contexts in need of appro-
priate solutions. One such context is initiating or conﬁrming
control transitions between manual and automated modes in
semiautomated level 3 vehicles, which is a particularly challenging
context due to the combination of potentially inattentive drivers
who need to take back control in emergency situations. In this
paper, we present some of the results from a review analysis of
academic and industry publications as four preliminary patterns
for transition designs in level 3 vehicles.
Keywords–Automated vehicles; SAE level 3; Design patterns;
Control transitions; Interface design.
I.
INTRODUCTION
Recent years have seen a rapid development and constant
increase of automated systems in vehicles. High automation in
vehicles is not merely a by-product of advances in automation
design but is pursued as a primary goal with the intent to
reduce accidents and casualties by reducing the human element
and, thus, human error. Currently, the vehicle industry is right
in the middle on the road from fully manual to fully automated
operation. This so-called transition phase bears a number of
particular challenges to overcome, caused by a necessity for
both human and automated system to interact and conduct parts
of the dynamic driving task.
One particularly challenging context is that of SAE (So-
ciety of Automotive Engineers) level 3 [1]. At this level of
automation, also called “conditional automation” the vehicle
can execute all aspects of a dynamic driving tasks while the
driver is still required to intervene and take back control,
either if he/she chooses to do so or if the system is unable to
handle a certain situation and requests a driver intervention.
While a level 3 vehicle is driving in an automated mode,
the driver is only required to be receptive to system output
relevant to a request to take back control. The monitoring of the
driving environment, which includes assessment of the driving
situation, is also performed by the vehicle.
This combination of factors can lead to extended response
times in case of emergency transition requests. In such an
emergency, the vehicle might decide to transition control back
to the driver, either due to difﬁcult trafﬁc conditions or system
failure. The driver, however, can not be expected to be ready
to take control in the same way a driver of a manual vehicle
would, as environment monitoring up to that point was handled
by the vehicle. Thus, the driver is likely to require additional
time to react to the transition request and then assess the
driving situation – time, which he/she might not have in an
emergency situation. Some have expressed a desire to skip
this level altogether and shorten the transition phase as much
as possible [2]. It is doubtful, however, that this skip will be
as effective or short as intended and not extended by, e.g.,
unforeseen technical difﬁculties or setbacks in development,
which are known to happen frequently in virtually any area
of research and development. It is sensible to try and provide
effective transition interface solutions for this transition phase,
long or short as it may be, as these solutions will increase
driver safety during that phase.
In order to provide a guide for level 3 transition design, we
conducted a review of available literature from academia and
industry, with the aim of identifying holes and potentials in
automotive design and research. The results of this review are
reported in Mirnig et al. 2017 [3]. While analyzing the results
of this review, we also identiﬁed a number of consistencies
among interface designs, which could serve as a further useful
basis for designing automated vehicle interfaces. We decided
to compile these consistencies in the form of preliminary
design patterns. In this paper, we present the ﬁrst four of
these patterns. After this introduction, in Section II, we brieﬂy
outline related work regarding design patterns and vehicle
automation levels. The patterns themselves are presented in
Section III. We discuss these patterns in Section IV and provide
a conclusion and future outlook in Section V.
II.
RELATED WORK
In the following, we provide an overview of automation
levels in Subsection II-A and design patterns in Subsection
II-B
A. Levels of Vehicle Automation
The extent to which a vehicle is capable of automated
operation is usually expressed via levels of automation. The
three most common deﬁnitions for automation levels come
from SAE International, the National Highway Trafﬁc Safety
Administration (NHTSA), and the German Federal Highway
Research Institute (Bundesanstalt fur Straenwesen
BASt).
While having differences in level of detail and focus on
vehicle functions, all three standards describe automation as
incremental steps from a basic, nonautomated, to a fully
automated level. On an international level, the SAE standard
is the most widely used one, to the point where the NHTSA
abandoned their automation level deﬁnitions and decided to
25
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

adopt the SAE’s at the end of 2016 [4]. For the sake of
consistency and clarity, we will also use these levels in this
paper.
According to the SAE J3016 standard, vehicle automation
ranges from across six levels: level 0 (no driving automa-
tion), level 1 (driver assistance), level 2 (partial driving au-
tomation), level 3 (conditional driving automation), level 4
(high driving automation, and level 5 (full driving automa-
tion). Level 3 is deﬁned as “The sustained and ODD-speciﬁc
(ODD=Operational Design Domain) performance by an ADS
(Automated Driving System) of the entire DDT (Dynamic
Driving Task) with the expectation that the DDT fallback-
ready user is receptive to ADS-issued requests to intervene,
as well as to DDT performance-relevant system failures in
other vehicle systems, and will respond appropriately,” and
represents a critical breakpoint between levels 2 and 3. On
level 2, monitoring of the environment is still on the part of the
driver, which means that a transition of control from automated
driving mode to an unprepared driver does not occur under
normal circumstances. On level 4, fallback performance, i.e.,
handling of the driving task in case of driver’s inability to
take control or system failure, is to be handled by the vehicle.
This means that from level 4 onwards, transition requests
from the vehicle are never mandatory to be responded to.
Level 3 combines environment monitoring by the vehicle with
mandatory fallback performance by the human driver, which
is the cause for the likely scenario of control transition to an
unprepared driver, making level 3 a particularly challenging
design space.
B. Design Patterns
Christopher Alexander is considered by many as the
“founder” of contemporary pattern approaches. He initially
developed the concept of patterns for architecture, his home
domain. According to him, constructing a building consists
of a string of solutions to individual and context-dependent
problems. It is these problems and their solutions that make
up the conceptual building blocks. In his classic work on
patterns [5] [6], he described both the basic pattern approach
and developed a collection of patterns for the construction of
buildings.
His ideas were later adopted by other disciplines as a
problem solution documentation method. One of the most
well-known of these adaptations is the work of Gamma et al.
[7], who provided a pattern structure and pattern collection
for software engineering. Human-Computer Interaction, of
which automotive interface design is a subdomain [8], has also
adopted patterns as a method to document working interface
design solutions as design patterns. Patterns, which describe
working solutions to reoccurring problems, have a counterpart
in the so-called antipatterns. Antipatterns describe solutions
that might look like they should work at ﬁrst but do not in
practice [9]. There is also a third type of patterns, called
dark patterns, which describe solutions intended to deceive
or trick users. Since the focus of these patterns is on the
intention behind a solution and less on the implementation and
its reproducibility, they can be seen as outside of the “classic”
pattern spectrum inhabited by patterns and antipatterns [10].
Pattern writing is an iterative process, which starts with
the initial pattern mining [11] [12]. Pattern mining is the act
of looking for repeated, working solutions within a pool of
available data and deciding, whether or the solution is worth
making into a pattern. Once a solution has been mined, the
actual writing begins. This writing usually follows a standard
pattern template or structure, which ensures that the problem
and its surrounding context are captured in enough detail to
make the solution reproducible, and allow easier sorting and
referencing of a pattern in a later pattern collection. According
to the minimal pattern structure described in [10], a successful
pattern should at least always contain a means of reference,
a description of the problem, a description of the context
the problem occurs in, the solution in detail, and at least
one (although ideally more than one) example. Initial (and
intermediate after the ﬁrst cycle) pattern versions are then
iterated by other pattern authors or domain experts, either
on a one-to-one basis or in the form of writer’s workshops.
Once the patterns have reached a high enough level of quality
and equally sufﬁcient number, they are published as a pattern
collection, either in print or in an online repository.
III.
CONTROL TRANSITION INTERFACE PATTERNS
This work is based on a literature review conducted for
the purpose of identifying holes and/or weaknesses in current
control transition interaction designs. The review was based
on a total number of 469 scientiﬁc publications (via IEEE
Xplore, ScienceDirect, and the ACM Digital Library) and
200 industry patents (via Depatisnet and Google Patents).
After initial analysis regarding the presence of actual interface
implementation descriptions, the papers were reduced down
to 35 academic papers and 22 industry patents, which were
analysed in detail. The full analysis procedure and results can
be found in Mirnig et al. 2017 [3]
In this paper, we focus on some of the design regularities
that were found as an additional result of the analysis. We
use the minimal pattern structure described in [10] for the
pattern format. Each pattern consists, thus, of a unique name,
a problem statement, a context description, a solution descrip-
tion, and several examples. The set of patterns presented are
preliminary patterns, which have not undergone a full iteration
cycle. Thus, future extensions will require iteration and further
validation of the current patterns as well. The pattern content
is mostly based on the literature reviewed in Mirnig et al.
2017 [3]. Explicit references are made when other sources are
cited or concrete examples are provided in the corresponding
Subsection of each pattern.
A. Pattern 1: Interaction Method to respond to or initiate
transition requests
Problem: Control transitions require adequate means for
the human driver to either initiate a request for the vehicle
to drive in autonomous mode or respond to a request by the
vehicle to take control. Since control transitions represent a
fundamental change in driving task performance and delega-
tion, such controls should not be easily confused with other
controls and be difﬁcult to activate by accident.
Context: In accordance with the taxonomy proposed by
McCall et al. [13], control transitions can occur in ﬁve dif-
ferent conﬁgurations: scheduled, non-scheduled system initi-
ated, non-scheduled user initiated, non-scheduled system initi-
ated emergency, and non-scheduled user initiated emergency.
Scheduled transitions allow longer preparation times for both
driver and vehicle (depending on the transition direction).
26
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

Nonscheduled transitions, especially in emergency situations,
require quick, efﬁcient and error-free input and should, thus,
be the focus when designing transition controls.
Solution: Since a transition means either assuming or
relinquishing control, it can be assumed that the driver will be
physically connected to the standard physical vehicle controls
(steering wheel and pedals) at some point during the transition
by necessity. Thus, a sensible position for both initiation
and conﬁrmation of transitions is near the physical vehicle
controls. Since actuating controls on or near the steering wheel
does not inhibit using the wheel’s primary control means
(turning), proximity to the wheel should be preferred over the
pedals. Physical transition controls (switches, knobs, levers,
etc.) should, therefore, be placed close to the steering wheel
to enable faster execution of driving maneuvers after the
transition while (in case of driver to vehicle transitions) simul-
taneously guiding the driver’s attention towards the primary
vehicle controls and the road ahead.
Examples: There are numerous implementations for phys-
ical transition controls close to the steering wheel. Cullinane
et al. [14] describe a button to press on the left side of the
steering wheel. Boehringer et al. [15] and Gazit [16] specify
actuation of the steering wheel as a transition initiation from
vehicle to driver. Coelingh [17] describes actuation of either
steering wheel or pedals as transition initiation. Note that
such direct approaches increase the likelihood of accidental
transitions initiations if no additional conﬁrmatory steps are
present. The Tesla S (see Figure 1, which is used, e.g., in a
study setup by Dikmen et al. [18], uses the cruise control lever
(pull twice towards the driver) for control transitions initiated
by the driver.
Figure 1. Tesla S cruise control lever [19]
B. Pattern 2: Consistent Visual Metaphor to Signal Transition
Requests
Problem: Due to the novelty of automated vehicles, there
are few to no common visual concepts that a driver would
naturally associate with a control transition. Thus, it is difﬁcult
to use appropriate visual indicators that evoke familiarity in the
driver and are unambiguous in their meaning.
Context: There is a multitude of indicators in the cockpit
the driver needs to monitor and/or be receptive to. While
Advanced Driver Assistance Systems (ADAS) of levels 1 and
2 usually have their own indicators to show whether they are
active or inactive, level 3 automation constitutes a different
degree of autonomy that allows the driver to perform a pri-
mary task other than driving. This means that existing ADAS
indicators are not, by default, suitable for also displaying
control transitions. A suitable visual metaphor must focus on
the essential process of resuming or relinquishing the vehicle’s
controls.
Solution: The primary interaction means when operating
a vehicle are the pedals and steering wheel. Of these two, the
steering wheel shape is most easily recognizable and, therefore,
presents a robust visual metaphor for assuming or relinquishing
control. Since the wheel itself represents controllability by a
human, a simple way to use this metaphor is displaying a
steering wheel when control by the driver is requested and not
displaying it when control is to be relinquished.
Examples: In a simulator setup by van den Beukel et al.
[20], transition requests are communicated via a steering wheel
icon with superimposed hands grasping the wheel (see Figure
2). When no hands and only the steering wheel are displayed,
no transition request is taking place. While the display also
contains color coded information, the transition requests are
only communicated via displaying the steering wheel with
hands on or off.
Figure 2. Wheel icon with hands on or off
In a setup by van der Meulen et al. [21], the steering wheel
is displayed as a semitransparent icon in the middle of the
screen together with a verbal message at the bottom of the
screen, whenever a transition is requested by the simulator
(see Figure 3). In a real vehicle, displaying an icon in the
middle of the screen would require a windshield display or
projection, which might not be feasible. In general, the icon
is best positioned where the driver’s primary visual attention
lies while performing driving (manual mode) or nondriving
(automated mode) tasks.
Figure 3. Semitransparent steering wheel icon in screen center
The Google patent by Cullinane et al. [14] describes a
steering wheel icon with one hand on the wheel (in the same
27
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

position, where the button to conﬁrm the request is located).
The icon is accompanied by a verbal message to push said
button when ready to respond to the transition (see Figure 4).
Figure 4. Wheel icon with one hand and verbal message
The Tesla Model S similarly displays transition requests as
a verbal message in a box at the bottom of the navigation
display with a blue steering wheel icon to the left of the
message (see Figure 5).
Figure 5. Coloured steering wheel with verbal message
C. Pattern 3: Priority of transitions
Problem: Control transitions can occur in two directions
– from driver to vehicle or from vehicle to driver. Depending
on which of the two directions is prioritized, different design
implications arise for the in-vehicle controls. The problem is
deciding which of these (or if neither) should be prioritized
and which design implications they entail.
Context: In line with McCall et al. [13], the ﬁrst distinction
to be made is between scheduled and unscheduled transitions.
Scheduled transitions put emphasis on planning of the tran-
sition, more so on the driver’s than the vehicle’s side as the
initiator. Unscheduled transitions put emphasis on reaction to
transition requests, suggesting a focus on the driver as the
recipient of the transition request. Depending on whether the
nonscheduled transition is an emergency or not, this emphasis
might be different.
Solution: vehicle to driver: Scheduling a transition from
vehicle to driver can depend on trafﬁc or road conditions
that the vehicle is not equipped to handle or the vehicle
reaching the limits of its operational design domain in any
other way. Since the scheduling of these transitions is on the
vehicle’s side, the driver only needs to be able to respond
to such requests in time without necessarily requiring further
information or input means. If the scheduled transition is
known well ahead in advance, then an additional output
with an estimated time indicator would be beneﬁcial. At a
basic level, however, an interface design for responding to
unscheduled transition requests from driver to vehicle is as
also suitable for scheduled ones. Thus, when an interface
needs to accommodate scheduled transitions, vehicle-driver
transitions should be prioritized during design with designs for
unscheduled transitions being usable for scheduled transitions
as well.
Driver to vehicle: An effective interface for scheduled
transitions from driver to vehicle requires support for the driver
to plan the transition ahead of time. This would ideally occur
in a navigational interface, where the driver can not only input
the planned route but also points (e.g., motorway exits), where
they intend to assume or relinquish control. A minimal solution
would leave the planning to the driver with no possibility to
input the actual transition request ahead of time, which would
have to be made manually once the planned point is reached.
Such an implementation would be functionally identical to
an implementation for unscheduled driver-vehicle transitions,
where no planning/scheduling support is needed. Thus, when
designing, ﬁrst priority should be put on a working solution for
unscheduled driver-vehicle solutions with possible additional
support for more effective scheduled transitions.
Examples: Most implementations, both from academia
and industry, focus on transitions from vehicle to driver.
Examples for such transitions can be found in Funakawa,
Ebina, Hegemann, Forster et al., and Melcher. Examples for
implementations focusing on transitions from driver to vehicle
can be found in Cullinane [14], Goldman-Shenhar [22], and
Albert [23].
D. Pattern 4: Visual Driving Mode Indicators
Problem: In a semiautomated vehicle, the vehicle and
driver essentially share the controls. In order to reduce the
possibility of involuntary transition of control in either direc-
tion, it should at all times be clear who is in control and who
is not.
Context: Demonstrators and simulator implementations are
often limited in their temporal dimension, mostly focusing on
the period brieﬂy before and after the transition but not on
a full journey in a vehicle. When the context is extended to
a full journey from anywhere to ten minutes to several hours
with more than one control transition in-between, an additional
complicating factor arises: It might not at all times be clear
who is in control of the vehicle. This phenomenon is particu-
larly pronounced in shared or partial control scenarios, where
e.g., activated adaptive cruise control can be indistinguishable
from full automation. If, in such a scenario, the driver were
to falsely assume that both horizontal and lateral automation
are engaged, when in reality they are not, and actuates the
steering wheel, the vehicle could leave its lane and cause an
accident. Generally speaking, the longer a journey is and the
more transition occur, the more likely it is that such a mode
confusion might occur.
Solution: Beyond appropriate output to signal transition
requests, a permanent indicator of the current driving mode is
required. The driving mode indicator needs to be displayed per-
manently, so that its information can be accessed on demand.
This permanency requirement means that one of the best ways
to signal the current driving mode is via a visual indicator,
which is less distracting than an auditory or haptic solution. It
is not necessary for it to be in the driver’s direct ﬁeld of view
while driving and can also be located in the middle console,
on a side display, or anywhere else that is either in front or to
the side of the driver, so that it can be reached with a quick
glance.
28
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

The driving mode indicator needs to be expressive enough
to meet the functionalities of the vehicle’s automation, i.e.,
if there is only a binary distinction between fully manual or
fully automated control, then the interface only needs to be
able to display two different modes. If there are several mixed
or shared modes, then the display must be able to clearly
distinguish between these. Indicators that are effective and
easy to implement are icons or color coding (or a combination
thereof). In case of a binary system, showing the driving mode
via a single icon as being displayed or not displayed is an
acceptable solution. Visual indicators can be accompanied by
text messages, although should ideally not consist of text only,
as this takes longer to process cognitively.
Figure 6. Color coded icon in upper right corner
Examples: Politis et al. [24] have implemented an icon-
based driving mode indicator, which displays the current
driving mode in the upper right corner (see Figure 6, a-d. The
image displayed in e shows the secondary task tablet game and
is not part of the mode indicator). In this setup, the transition
requests are separate from the driving mode indicators and are
displayed in the top center as color coded text messages.
Figure 7. Vehicle being shown as either on or off autodrive lane
The patent by Cullinane et al. [14] divides vehicle lanes
into regular/manual and autodrive lanes. The current driving
mode is indicated via constantly displaying the lane the vehicle
is on and indicating, whether that lane is an autodrive lane or
not. This is done via color coding the lanes and an additional
text message at the top of the lane indicator (see Figure 7).
IV.
DISCUSSION
In the following, we discuss some interesting aspects and
limitations of the presented patterns. One concerns the status
of the solutions presented and whether or not they could
be extended to or with antipatterns, the other the constant
improvements in automation technology and associated dif-
ﬁculties of documenting working solutions in an endurable
format.
A. Patterns and Antipatterns
All four of the solutions presented in this paper are
presented as regular patterns, i.e., working solutions. However,
while patterns 2 and 4 are clearly presenting working solu-
tions without visible drawbacks, pattern 1 contains a certain
antipattern potential. In the case of pattern 1, it is true that
most implementations focus on physical input for good reasons
and that a dual button setup is one of the more effective
solutions to design a safe physical transition interface. The
problem, however, lies in the premise of the superiority of
physical controls for transition interfaces. As argued in our
prior work [3], this is not necessarily the case and might, in
fact, be one of the contributing factors to the often perceived
impossibility of designing safe and effective control transitions
for level 3. Thus, pattern 1 will require further research
regarding the suitability of different interaction modes, which
could eventually change the part about physical input into an
antipattern, if it should turn out that physical input is one of
the less suitable modes. Regardless, in its current form as a
regular pattern, it properly represents the status quo in driver
interaction design.
Pattern 3 is, in itself, presenting working solutions but
might be best accompanied by an antipattern in the future.
Beyond the priorities based on scheduled versus unscheduled
transitions described in pattern 3, there is a strong trend
towards putting emphasis and focus on designing vehicle-
driver transitions, with driver-vehicle transitions often being an
afterthought, if implemented at all. Similar to pattern 1, this
limits the exploratory potential in interaction design and might
be another contributing factor to the difﬁculty of designing
for level 3 systems. If the design focus is only on in-time
notiﬁcations for driver-vehicle transitions, this leaves out more
nuanced approaches that could, e.g., allow the driver to plan
transitions ahead of time and decide (perhaps even before
beginning to drive), when to relinquish and assume control
and plan their cognitive attention accordingly. Thus, exclusive
focus on vehicle-driver transitions might be an antipattern,
which is not reﬂected in the current iteration of pattern 3
B. A Rapidly Evolving Environment
The automotive industry is currently seeing rapid technical
developments, which is especially pronounced regarding au-
tomated vehicle research and development. It becomes, thus,
difﬁcult to consider anything an established or proven solution
that goes beyond automation level 2 (which includes advanced
driving assistance systems such as adaptive cruise control or
lane keeping assistance). Furthermore, even scoping the avail-
able technologies themselves is difﬁcult in a comprehensive
manner, as automation technologies of levels 3 and above are
frequently limited to concept vehicles or industry showcases,
which are open to a limited audience within an equally limited
timeframe.
29
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

Thus, it is difﬁcult to provide time-tested and proven
solutions not only for the automotive domain in general but
for automated driving technologies in particular. As the reviews
and resulting patterns could show, it is still possible to extract
commonalities and bring them into a pattern format even in
this rapidly evolving subdomain. But it should be expected that
such patterns will be outdated faster than patterns from other
domains and that the pool of working solutions to draw from
will be smaller. This does not mean that a pattern approach is
to be considered impossible or unsuitable for interaction design
in automated vehicles but the resulting patterns are likely more
limited than they would be in a more static domain.
V.
CONCLUSION AND FUTURE WORK
In this paper, we presented commonalities of control
transition interaction designs in level 3 automated vehicles,
which had emerged in the process of a literature review and
analysis of academic and industry implementations. These
commonalities concerned (a) interaction modes to activate
transitions or respond to transition requests, (b) a suitable
visual metaphor for control transitions, (c) priority of transition
direction depending on transition types, and (d) visual indica-
tors to display driving modes. These results were presented
in the form of four patterns, with the intention to make the
information contained therein easier to access and (re-)apply.
The patterns presented are initial versions, which have not yet
undergone a full iterative cycle.
Future work will need to focus on reﬁne and iterate the
presented patterns further as well as extend the amount of
patterns, as there are far more commonalities to be found in
existing transition design implementations than what is covered
by the patterns presented above. Maintaining an up to date
pattern collection in the rapidly evolving automated driving
domain will require a joint effort from within the automotive
community and this initial pattern set shall serve as a functional
basis for the automotive community to collect design best
practices for interaction design in automated vehicles.
ACKNOWLEDGMENT
The ﬁnancial support by the Austrian Science Fund (FWF):
I 2126- N15 is gratefully acknowledged. The authors thank
Magdalena G¨artner, Arno Laminger, Alexander Meschtscher-
jakov, Sandra Tr¨osterer, Rod McCall and Fintan McGee for
their contributions to the original work this publication is based
on.
REFERENCES
[1]
I. SAE, “Taxonomy and deﬁnitions for terms related to on-road motor
vehicle automated driving systems,” Standard J3016, 2016.
[2]
Wired, “Ford’s skipping the trickiest thing about self-driving cars,”
Online Article, October 2015, retrieved: January, 2018 from https:
//www.wired.com/2015/11/ford-self-driving-car-plan-google/.
[3]
A. G. Mirnig, M. G¨artner, A. Laminger, A. Meschtscherjakov,
S. Tr¨osterer, M. Tscheligi, R. McCall, and F. McGee, “Control transition
interfaces in semiautonomous vehicles: A categorization framework
and literature analysis,” in Proc. of the 9th International Conference
on Automotive User Interfaces and Interactive Vehicular Applications
(AutomotiveUI ’17).
New York, NY, USA: ACM, 2017, pp. 209–220.
[4]
N. H. T. S. Administration, “Federal automated vehicles policy,” Ofﬁcial
Policy, 2016.
[5]
C. Alexander, The Timeless Way of Building. New York, USA: Oxford
University Press, 1979.
[6]
C. Alexander, S. Ishikawa, and M. Silverstein, A Pattern Language:
Towns, Buildings, Construction.
New York, USA: Oxford University
Press, 1997.
[7]
E. Gamma, R. Helm, R. Johnson, and J. Vlissides, Design Patterns:
Elements of Reusable Object-Oriented Software.
Pearson, 1994.
[8]
A. Mirnig, T. Kaiser, A. Lupp, N. Perterer, A. Meschtscherjakov,
T. Grah, and M. Tscheligi, “Automotive user experience design patterns:
An approach and pattern examples,” International Journal On Advances
in Intelligent Systems, vol. 9, 2016, pp. 275–286.
[9]
J. O. Coplien, Software Patterns. New York, USA: SIGS Books, 1996.
[10]
A. Mirnig and M. Tscheligi, “(dont) join the dark side: An initial
analysis and classiﬁcation of regular, anti-, and dark patterns,” in 9th Int.
Conf. Pervasive Patterns and Applications (PATTERNS 2017). IARIA,
2017, pp. 65–71.
[11]
S. K¨ohne, A Didactical Aproach towards Blended Learning: Conception
and Application of Educational Patterns. Orig. title: Didaktischer Ansatz
f¨ur das Blended Learning: Konzeption und Anwendung von Educational
Patterns.
Hohenheim, Germany: University of Hohenheim, 1995.
[12]
K. Quibeldey-Cirkel, Design Patterns in Object Oriented Software
Engineering. Orig. title: Entwurfsmuster: Design Patterns in der ob-
jektorientierten Softwaretechnik.
Berlin, Germany: Springer, 1999.
[13]
R. McCall, F. McGee, A. Meschtscherjakov, N. Louveton, and T. Engel,
“Towards a taxonomy of autonomous vehicle handover situations,” in
8th Int. Conf. Automotive User Interfaces and Interactive Vehicular
Applications.
ACM, 2016, pp. 193–200.
[14]
B. Cullinane, P. Nemec, M. Clement, R. Mariet, and L. Jonsson,
“Engaging and disengaging for autonomous driving,” 2017, retrieved:
January, 2018 from https://depatisnet.dpma.de/DepatisNet/depatisnet?
action=bibdat\&docid=EP000002906453B1.
[15]
M. Boehringer, S. Dubiella-Zimmermann, S. Jansen, J. Lockhart,
E. Sengewald, and F. Stiebert, “Method and device for automatically
operating a vehicle in an autonomous driving mode requiring no user
action,” 2012, retrieved: January, 2018 from https://depatisnet.dpma.de/
DepatisNet/depatisnet?action=bibdat\&docid=US020120277947A1.
[16]
R. Gazit, “Steering wheels for vehicle control in manual and
autonomous
driving,”
2013,
retrieved:
January,
2018
from
https://depatisnet.dpma.de/DepatisNet/depatisnet?action=bibdat\
&docid=US020130002416A1.
[17]
E. Coelingh and J. Ekmark, “Method and arrangement for allow-
ing secondary tasks during semi-automated driving,” 2016, retrieved:
January, 2018 from https://depatisnet.dpma.de/DepatisNet/depatisnet?
action=bibdat\&docid=EP000003109119A1.
[18]
M. Dikmen and C. M. Burns, “Autonomous driving in the real world:
Experiences with tesla autopilot and summon,” in Proceedings of the 8th
International Conference on Automotive User Interfaces and Interactive
Vehicular Applications.
ACM, 2016, pp. 225–228.
[19]
“Tesla S Ofﬁcial Press Materials,” retrieved: January, 2018 from https:
//teslamotors.box.com/pressﬁles.
[20]
A. P. van den Beukel, M. C. van der Voort, and A. O. Eger, “Supporting
the changing driver’s task: Exploration of interface designs for super-
vision and intervention in automated driving,” Transportation research
part F: trafﬁc psychology and behaviour, vol. 43, 2016, pp. 279–301.
[21]
H. van der Meulen, A. L. Kun, and C. P. Janssen, “Switching back
to manual driving: How does it compare to simply driving away
after parking?” in Proceedings of the 8th International Conference
on Automotive User Interfaces and Interactive Vehicular Applications.
ACM, 2016, pp. 229–236.
[22]
C.
Goldman-Shenhar
and
E.
Raphael,
“Fahrzeug-benutzer-
interaktionssystem,”
2017,
retrieved:
January,
2018
from
https://depatisnet.dpma.de/DepatisNet/depatisnet?action=bibdat\
&docid=DE102016117428A1.
[23]
M. Albert, A. Lange, A. Schmidt, M. Wimmer, and K. Bengler, “Au-
tomated driving–assessment of interaction concepts under real driving
conditions,” Procedia Manufacturing, vol. 3, 2015, pp. 2832–2839.
[24]
I. Politis, S. Brewster, and F. Pollick, “Language-based multimodal
displays for the handover of control in autonomous cars,” in Proceedings
of the 7th International Conference on Automotive User Interfaces and
Interactive Vehicular Applications.
ACM, 2015, pp. 3–10.
30
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-612-5
PATTERNS 2018 : The Tenth International Conference on Pervasive Patterns and Applications

