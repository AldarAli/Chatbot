An Empirical Study of Web and Distributed Software Risks from Three 
Perspectives: Project, Process and Product 
 
Ayad Ali Keshlaf 
School of Computing Science  
Newcastle University  
Newcastle, UK 
a.a.a.keshlaf@ncl.ac.uk 
Steve Riddle 
School of Computing Science  
Newcastle University  
Newcastle, UK  
steve.riddle@ncl.ac.uk
 
 
Abstract—Web and Distributed software development is 
vulnerable to risks, which may apply to any of three 
perspectives: Project, Process and Product. However, existing 
software 
risk 
management 
approaches 
are 
mainly 
concentrating on the Project and only very few of them have 
touched the Process perspective. Our WeDRisk approach has, 
as one of its main objectives, coverage of Web and Distributed 
risks from all three perspectives. The work presented in this 
paper is a result of an experiment to evaluate some aspects of 
WeDRisk.  This paper is mainly focused on the evaluation of a 
clustering of the risks from the three perspectives, and the 
criteria used for the clustering. The result of the experiment 
illustrated the importance and usefulness of clustering and 
considering of the risks from the three perspectives as a way of 
reducing the effort and time in managing the risks and then 
increasing the efficiency of risk management in web and 
distributed developments.  
Keywords- Web and Distributed risk perspectives; Software  
risk mangement; Clustering of risks 
I. 
INTRODUCTION  
The development of the Web and Distributed (W-D) 
software industry is sharply accelerating over the last five 
years. This high rate of growth is due to the incremental 
demand on software applications in all today’s activities and 
technologies as well as the ubiquity of the Internet, which 
has increased the deployment and development over it [1]. 
However, with these developments come new problems: a 
higher management complexity, new challenges and risks 
such as: Insufficient competence; Wage and cost inflation; 
Inadequate informal communications; Lack of trust; Culture 
differences (e.g., different language, different corporate 
culture and different developers’ background); Time-zone 
difference 
(leading 
to 
ineffective 
synchronous 
communication); 
Development 
process 
differences; 
Knowledge management challenges (most of the existing 
management approaches are designed for co-located teams); 
Security 
issues 
(Ensuring 
electronic 
transmissions 
confidentiality and privacy) [2][3][4]. 
     The above-mentioned challenges and risks attack all 
perspectives (project, process and product, hereafter called 
“3P”) of W-D software industry. However, there are diverse 
definitions for the 3P perspectives and it is difficult to find a 
clear and unique definition for any of them. The following 
definitions are used for the purpose of this study [5][6]:  
Project perspective concerns aspects such as budgets, 
plans, goals, responsibilities and schedules.  
Process perspective concerns the methods, tasks and 
activities of producing the software. 
Product perspective concerns the final product aspects 
such as its functionality, maintenance, market competence 
and security.    
    Looking at these perspectives it is expected that each one 
of them includes, or could be affected by, different types of 
risks. Risk management is, therefore, an important issue 
from these three perspectives [5][6]. 
   The paper gives a background on related work (Section 
II), problem and approach (Section III), and then it 
describes the experiment (Section IV), presenting and 
analyzing the result of the experiment (Section V). The 
paper discusses the experiment results in Section VI and 
then presents the   conclusions and suggested future work in 
Section VII. 
II. 
RELATED WORK 
     Many software risk management approaches exist such 
as WinWin Spiral model [5]; GRisk-Mode and tool [7]; 
GSRM model [8]; Riskit method [9]; GLM Model[10]; 
GDPS RM Framework [11]. However, the software risk 
management issue has got only scant attentions in 
distributed development [1]. A review of software risk 
management for selection of best tools and techniques, 
which has been concentrated on recommended approaches 
(SEI, SER, SoftRisk, TRM, ARMOR, Riskit)  has concluded 
that no one tool or technique alone can be considered as a 
perfect for managing risks in software development [12]. 
Gorski and Miler in [13] have introduced a concept (DS-
RM-Concept) and a tool called Risk-Guide for risk 
management in distributed software development projects, 
with emphasis on the role of open communication.  Kuni 
and Bhushan [14] introduced the Wipro Offshore 
Outsourcing Methodology (WOOW), which takes the risks 
in the account through a model called Risk Management 
Model.  
     Keshlaf and Riddle [3] reviewed the existing approaches 
and highlighted a number of weaknesses in them, especially 
38
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

in managing W-D development risks. One of the 
weaknesses is “… the existing approaches concentrate on 
project perspective of software development and they do not 
pay enough attention to other perspectives (Process and 
Product)”. 
 
III. 
PROBLEM AND APPROACH 
     In order to tackle the weaknesses of the existing 
approaches in managing W-D development risks we 
introduced a new approach called WeDRisk [15]. It consists 
of five layers (Project, Stakeholder, Risk Management 
Customization, 
Implementation, 
and 
Evaluation 
& 
Auditing) and two supporter components (Communication 
& Plug-In Controller and Evolution Regulator). The layers 
consist of components, which contain steps, techniques and 
guidelines [15]. WeDRisk maps risks dependencies during 
the risk management operation in order to reduce undesired 
consequences. 
 
 
Figure 1: Perspectives Clustering Criteria 
 
WeDRisk includes several concepts, which could help in 
tackling some of the identified weaknesses. One of these 
concepts is the consideration of the risks from the 3P 
perspectives. This concept depends on a clustering strategy 
(using special criteria factors) to deal with the risk from 
these three perspectives.  
The clustering strategy is intended to save time and 
effort. It locates fewer resources at each perspective as the 
managing of risks will focus on the relevant perspective 
risks each time. WeDRisk suggests some factors that could 
help for clustering the risks from the 3P perspectives. These 
factors are shown in Figure 1. 
     The suggested criteria groups the risks based on some 
characteristics and nature of the perspectives. The proposed 
criteria are identified based on experience, available 
literature and previous research results.  Following sections 
describe controlled experiment, which was used to evaluate 
the clustering strategy. 
IV. 
THE EXPERIMENT 
This experiment is a part of PhD research at Newcastle 
University, UK which aims to build a software risk 
management approach to manage W-D development risks. 
The approach is called WeDRisk and it is currently under 
development. The aim of this experiment is to test some 
hypotheses, which are prepared in order to validate the 
significance of a list of proposed W-D risks and the 
usefulness of clustering them from the 3P perspectives 
(project, process and product). The experiment is also used 
to examine W-D vulnerability to atypical risks and the 
usefulness of absorbing their side effects.   
      The experiment has been designed to test four 
hypotheses (H1-H4).  H1 evaluates the importance of 
potential risks to W-D development. H2, H3 evaluate the 
consideration of the 3P perspectives and H4 evaluates the 
atypical risks absorbing strategy. This paper focuses on H2 
and H3, which validate the clustering strategy (and our 
proposed clustering criteria) as a way of considering the 
risks from the 3P perspectives. The two hypotheses are: 
 
Hypothesis H2: “If the developers use the proposed 
clustering criteria then the clustering time of W-D risks 
from three perspectives will be shorter and the effort will be 
saved” 
Hypothesis 
H3: 
“Clustering 
the 
risks 
from 
three 
perspectives (project, process and product) saves time and 
effort” 
 
The choice of the controlled experiment to test these 
hypotheses was due to the following reasons: 
 
Difficulties of getting a suitable case study, as many 
software developers have high confidentiality 
restrictions for their projects data.  
 
Unavailability of suitable subjects who have the 
required experience or education.  
 
Emulating the real working environment conditions, 
which are significant to the study. 
 
It was difficult to ensure the same working 
environment for all the subjects (to avoid the 
difference in resources such as internet and computer 
39
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

speeds, as time is one of the measurements as well as 
to observe the real effort). 
 
To avoid any outside influence on the participant, 
which could be different from one participant to 
another, as this could lead to some bias in the 
experiment. 
 
In such experiment the participants need some 
clarifications from time to time, which should be 
provided equally to all participants to avoid any bias. 
 
It is difficult to get all the participants at the same 
time in the same room and it is difficult to provide 
the same support and clarification to a group of 
subjects who are doing the same tasks at the same 
time. If so there will be some biases. 
 
To ensure the exact implementation sequence of the   
tasks during all experiment stages.  
A. Experiment Method 
Our experiment design was highly inspired by works in 
[16][17][18], especially in the way of structuring the 
experiment, preparing the hypotheses, avoiding bias, 
collecting, analyzing the data, discussing the result and 
describing 
the 
experiment. 
Before 
conducting 
the 
experiment we discussed the experiment design with 
expertise from Carnegie Mellon University and other 
researches in Newcastle University, who provided us with 
valuable comments.  Based on the provided comments we 
made some modification to improve the experiment. The 
modifications included changing the method of recording 
the time during the experiment and giving more freedom to 
subjects, in order to reduce the time pressure on them. One 
other modification related to the arrangement and sequence 
of handling the experiment material. This also helped in 
estimating the required time for each participant to perform 
the experiment: we found 30-35 minutes suitable. We made 
the required improvement on the experiment material and 
measurement then we started the real experiment. 
In order to give a chance for more replication of this 
experiment we provide hereafter full details of the 
experiment so it can be replicated easily for any research 
reasons.   
B. Subjects (Participants) 
We recruited 30 participants (male and female) for this 
experiment. They were PhD students, researchers and MSc 
students at School of Computing Science, Newcastle 
University-UK.  The majority of them were PhD students or 
researchers. All of them either have experience with 
software development or at least participated in software 
projects in their studies. The subjects were recruited by 
emails. We sent email to all MSc students, PhD students and 
researchers at the school and we got a positive response 
from about 35 of them, but we have chosen only 30 subjects 
based on specific experience and education criteria.   
     This set of participants has been selected as we expected 
that they had enough knowledge or experience with 
software development and many of them had participated in 
software development projects as part of their courses. We 
compensated the participants who performed the experiment 
with £10 Amazon vouchers for their time. Instead of using 
the participants’ real names or numbers we assigned a 
special reference number so that it can be used 
anonymously for future research after this experiment.  
C. Introductory  
At the beginning of the experiment each participant was 
asked to fill in and sign a consent form. Then the 
participants were briefed with the necessary information 
(e.g., description of the experiment, software risks and 
proposed list of risks, W-D development, software risk 
management, software perspectives). After that their 
assigned tasks in the experiment were explained to them. 
Each subject was told by the experimenter that he has the 
right to stop at any time if he feels not happy to continue for 
any reason and he has to try to be accurate as possible. 
Participants were told that they have the right to ask any 
question related to the experiment at any time if need be. 
Printed versions of all experiment related information, 
tasks and instructions were supplied to support the 
participants’ understandings.  
In some stages of the experiment the participants were 
randomly divided into two groups (control and experimental 
group) based on the nature of the task and needed 
measurements.  
D. Apparatus & Instrumentation 
The apparatus, which were used in the experiment 
include computer for data entry and office environment, 
normal stationery, hard copies of the experiment material 
and forms and sport watch (on a mobile). 
E. Subjects (Participants) Tasks 
The participants’ tasks can be summarized as follows: 
 
Understanding their roles in the experiment.  
 
Performing the assigned roles. 
 
Clustering the W-D risks from three perspectives 
(project, process and product). For this task the 
participants are divided into groups (control and 
experimental groups): Control group members 
perform the clustering operation based on their own 
knowledge whereas, the experimental group use a 
specific criteria for clustering the risk from the three 
perspectives. 
 
Searching twice for certain perspectives risks before 
and after the clustering 
All the participants were told that they had the right to 
ask for any clarifications during the experiment and they 
could stop at any stage of the experiment 
F. Avoiding Bias 
Experiments are very sensitive to errors. Many errors 
could arise due to bias in the experiment. In order to avoid 
bias the required information and instructions were provided 
to all of the participants as hard copies. However, the 
40
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

criteria factors were provided to experimental group 
members only as it is used by them only. Moreover, the 
dividing of the participants into control and experimental 
groups was on a random basis. This is also to avoid 
contradiction in the experiment result.  
On all the data documents we used only the participants’ 
reference numbers rather than the names or numbers. This 
anonymity makes the analysis of the data more reliable and 
saves the privacy of the participants.   
Bias is also avoided at the result analysis. This is 
achieved by sending the gathered data to a third party to 
help us with the analysis without giving him any 
information about the subjects.  
G. Data Confidentiality 
The collected data are strictly confidential to the 
experimenter and his supervisor. It is only used for research 
purposes and not for other intention. The participants 
bibliographic data (e.g., subjects name and number) were 
only used for providing the free Amazon vouchers (through 
the school administration) and were discarded afterwards. 
V. 
RESULT AND ANALYSIS  
The collected data from the experiment were in the form 
of tables and question answers, to test the research 
hypothesis. Several tasks were designed to test each 
hypothesis. For this reason, we introduce the results and 
analysis of the data arranged in order of the hypotheses. In 
this section each hypothesis is stated and followed by the 
related result and analysis. 
A. Hypothesis H2 
In order to test Hypothesis H2 we have divided the 
subjects into two “control” and “experimental” groups (15 
in each).  In order to avoid bias and contradictions we used 
a randomization strategy. The randomization in this case 
was done on the subjects, when they were divided into the 
two groups (control and experimental).  
The subjects of both control and experimental groups 
have been asked to cluster the risks in Table I from the 3P 
perspectives. The control group completed their task 
without giving them any clustering criteria; whereas the 
experimental group has been given clustering criteria. 
     There is a significant difference between the time taken 
by the two groups shown by the Mann-Whitney U statistical 
test at (p-value = 0.0079, U = 168.0).   
Generally the total time used by control group 
participants for the clustering (56 minutes) of the risks was 
less than the time that was used by the experimental group 
(108 minutes). This could be for reasons such as:  
 
Actual time for reading the criteria, poor design of 
the criteria design or it is hard to understand the 
criteria. 
 
The speed of answering from the control group 
could be because there is no restriction on their 
clustering. This raises questions about the accuracy 
of their clustering.   
 
Without the criteria the selections and answers could 
be different from one cycle to another and from one 
developer to another. This also applies to the 
required time for the clustering. 
       In fact using the criteria first time may take some time 
from the developer for understanding and reading but it is 
expected that the next cycles will take a shorter time. More 
training and improvement on the criteria will make it much 
easier to understand and use the criteria. 
TABLE I.  
 NON CLUSTERED POTENTIAL W-D RISKS 
Risk  
No. 
Risk Name 
1 
Unfamiliarity with international and foreign contract law 
2 
Inadequate customer requirement (see and change strategy) 
3 
Poor documentation 
4 
Low visibility of project process 
5 
Inadequate process development 
6 
Not enough measurement and estimations 
7 
Lack of security precautions 
8 
Weaknesses in protection procedures for Intellectual Property 
rights  
9 
Vendor feasibility 
10 
Insufficient competence 
11 
Communication failures 
12 
Poor sites management control 
13 
Failure to  manage user expectations 
14 
Insufficient project stakeholder involvement 
15 
Process instability 
16 
Poor performance 
17 
Poor UI 
18 
Insecure of communication channels 
19 
Lack of requirement specification 
20 
Inadequate user involvement 
21 
Difficulties in ongoing support and maintenance 
22 
Unrealistic estimation of the number of  users 
23 
Differences in the development methodologies and processes 
24 
Weak or inadequate contracts 
25 
Complicated development dependencies between project sites 
26 
A Cross cultural differences / influence  
27 
Poor product functionality  
28 
Market fluctuations 
29 
Scalability limitations 
30 
Poor availability 
31 
Lack of top management commitment 
32 
Instability in other project sites 
33 
Lack of Face-To-Face meetings 
34 
Lack of Management availability and efficiency 
35 
Unfamiliarity with customer type 
36 
Constraints due to time zone differences 
B. Hypothesis H3  
To test Hypothesis H3, data was collected from different 
tasks (2, 3, 7, 8, 3, 4 and 9), which are stated below. The test 
uses the difference in time and effort between using 
clustered and non-clustered risks to test this hypothesis. The 
used time was obtained from tasks 2, 3, 7 and 8 whereas 
answers for some questions in task 4 (Q2 and Q3) and task 9 
(Q1) were used to evaluate the effort.  In order to avoid any 
influence or bias the tasks 7 and 8 were performed 
41
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

separately from tasks 2 and 3 (in both time and sequence).  
The following sections describe how the used time and 
effort are obtained and estimated: 
 
1) Used Time:  
Used time can give a preliminary indication of whether 
the task is easy, difficult or complicated. Task 2 and task 7 
were the same, except that task 2 was on non-clustered risks 
and task 7 was on pre-clustered risks. In these two tasks the 
subjects have been asked to specify two risks for each one 
of the three perspectives.   
Task 3 and task 8 were also the same but task 3 was on 
non- clustered risks and task 8 was on pre-clustered risks. In 
these two tasks the subjects have been asked to specify the 
perspectives for three pre-ticked risks by the experimenter.  
While the subject was implementing the tasks (2, 3, 7 
and 8) the experimenter was monitoring and recording the 
time. Table II shows the total of the used time during the 
tasks 2, 3, 7 and 8. The illustrated values in Table II are for 
the time used by the subjects for both non-clustered and pre-
clustered risks. As shown on Table II the subjects spent less 
time with the pre-clustered risks compared with non-
clustered risks for the above tasks, suggesting that clustering 
from three perspectives reduces the required time for 
dealing with the risks.  
TABLE II.  
TOTALS OF USED TIME FOR TASKS 2, 3, 7 AND 8 
Non Clustered Risks 
Pre-Clustered Risks 
Task No. 
∑  Used Time 
Task No. 
∑ Used Time 
T 2 
128.92 
T 7 
42.13 
T 3 
26.76 
T 8 
8.29 
 
2) Effort: 
It is not easy to evaluate effort. We used a set of 
questions, which were distributed among the tasks in a 
specific order to gather subjects’ feedback and opinions 
about the usefulness of clustering of the risks from the three 
perspectives 
and 
the 
spent 
effort. 
Moreover, 
the 
experimenter monitored the subjects while they were 
performing the tasks. For this purpose Q2 and Q 3 in task 4 
and Q1 in task 9 were designed and asked to the 
participants. The questions and the answers are shown 
below:  
Task 4/Q2:  Was it easy for you to specify the risks or 
perspectives? ( Yes /  No) 
This question was answered by 29 participants, 13 of 
them answered Yes with percentage 44.8 % and 16 of them 
answered No with percentage 55.1 %.  
 
Task 4/Q3: Do you agree with the idea that the above tasks 
will be much easier and the time and effort can be saved if 
risks were clustered from the three perspectives?  
 
 Strongly    Agree     Neutral        Disagree       Strongly                     
Agree                                                                        Disagree 
 1                2               3                    4                      5 
As shown in Figure 2 the number of subjects who voted 
to Strongly Agree, Agree, Neutral, Disagree and Strongly 
Disagree are 4, 22, 3, 0, 0 respectively. This means that the 
majority of the subjects are in agreement (or strong 
agreement) in their answers for this question.  
 
Task 9/ Q1: To what extent do you agree with the idea 
statement that “concentrating only on the risks of the 
appointed perspective saves time and effort” 
 
Strongly    Agree       Neutral        Disagree         Strongly 
Agree                                                                     Disagree 
1                   2                3                  4                     5 
Figure 3 illustrates the subjects’ answers for Q1 in task 
9, as shown on the figure the number of answers on the 
“agree” side (Strongly Agree and Agree = 20) is higher 
than the “disagree” side (Disagree and Strongly Disagree 
= 2), with 6 subjects answering Neutral. This means that the 
idea of “concentrating only the risks of the appointed 
perspective to save time and effort” has strong support from 
the subjects in the experiment.  
4
22
3
0
0
0
5
10
15
20
25
Strongly Agree  
Agree 
Neutral 
Disagree 
Strongly Disagree 
 
Figure 2: Voting for used effort (clustered and none clustered) 
 
7
13
6
2
0
0
2
4
6
8
10
12
14
Strongly Agree
Agree
Neutral
Disagree
Strongly Disagree 
 
Figure 3: Concentrating on appointed perspective risks saves time & effort 
 
From the above result following points can be remarked: 
1- From tasks 2,3,7 and 8 as it can be seen on Table II the 
total used time for the tasks, which were performed on non-
clustered risks was higher than the one, which were 
performed on  pre-clustered risks.  
42
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

2- After performing tasks 2 and 3 on non-clustered risks the 
participants were asked “Was it easy for them to specify the 
risks or perspectives?” More than 55% of them answered 
No to this question. They were asked another question after 
performing these two tasks, “Do you agree with the idea 
that the above tasks will be much easier and the time and 
effort can be saved if risks were clustered from the three 
perspectives?” with 5 options (Strongly Agree, Agree, 
Neutral, Disagree and Strongly Disagree) to select from 
them. As can be seen in Figure 2 the majority of participants 
agreed or strongly agreed. 
3- After performing tasks 7 and 8 the subjects were asked 
the same questions but in a different way and in only one 
question: To what extent do you agree with the idea 
statement that “concentrating only on the risks of the 
appointed perspective saves time and effort” with the same 
options to answer this question (Strongly Agree, Agree, 
Neutral, Disagree and Strongly Disagree). Only two 
subjects disagreed. The rest of subjects agreed (including 
those who strongly agreed), see Figure 3. 
C. The Support of Our Pre-Clustered list 
As a side product of the experiment we compared our 
clustering of the W-D potential list of risks with the 
clustering of the two groups (control and experimental). The 
result of that will be used to improve the pre-clustered risks. 
Table III summarizes the result. 
We found that some participants have categorized some 
risks under more than one perspective. 
TABLE III.  
 SUPPORT TO OUR CLUSTERING 
Supported                             
By:        
Cluster  
Both 
Groups 
Control 
Group 
only 
Experimental 
Group only 
No 
One 
Project Risks  
10/13  
- 
1/13 
2/13 
Process Risks 
4/9 
- 
1/9 
4/9 
Product Risks 
10/14 
- 
0/14 
4/14 
Totals 
24/36 
0 
2/36 
10/36 
 
As can be seen in Table III, our clustering of risks has 
higher support from both control and experimental groups 
together. In total 66.6 % of our clustering of risks from the 
3P perspectives were supported and only 27.7 % were not 
supported. This is understandable from the numbers shown 
in Table III. Our clustering for the project and product risks 
has stronger support from the groups. For the clustering 
project risks only 2 risks out of 36 were not supported by 
the groups. Our clustering for the product risk was also 
strongly supported by the groups as only the clustering of 4 
risks out 14 were not supported. By contrast, the support of 
process risks was medium as the clustering of 4 risks out of 
9 was not supported. 
VI. 
DISCUSSION 
A. Study Limitation 
It would have been preferred if the experiment had been 
undertaken at one of the software development houses or 
projects, but this was not feasible as most software 
companies have restrictions with data security. Several local 
web development companies were conducted but they were 
not able to participate.  
B. Study Reflection 
The following three points summarize the experiment 
result: 
 
The result of the experiment was against the 
Hypothesis H2, the opposite of what was expected. 
This was clear as the used time by the experimental 
group was higher than in the case of control groups. 
The experiment result showed the need for revising 
and modifying the criteria in order to improve and 
rectify them. 
 
Hypothesis H3 is strongly supported by the 
experiment result.  
 
The experiment results show the clustering has a 
significant impact by reducing the time and effort. 
This result supports the concept of managing the 
risks from the 3P perspectives in W-D development, 
because the risks are distributed between the three 
perspectives and none of them can be ignored. 
Previous approaches have considered all the risks 
from the project perspective or, in the best cases 
(very rare), they might see them from the process 
perspectives [3]. This wastes developers’ time, effort 
and leads to them locating more resources for one 
perspective’s risks and ignoring others.  
 
Our pre-clustered risks list of the risks, which is used 
in the experiment has gained significant support 
from control and experimental groups. In general the 
support came from both groups and only in two 
cases did it come from the experimental group only. 
However, the clustering of a few risks were not 
supported by the groups.   
 
Some risks could affect more than one perspective. 
 
VII. CONCLUSION AND FUTURE WORK 
Since it is difficult to find a suitable project and wait for 
the risks to actually happen, we emulate such a situation 
pro-actively in an experimental based setting. We have 
presented the results of the experiment, which is designed to 
validate some aspects of our research into the WeDRisk 
approach. The results that were presented in this paper cover 
usefulness of clustering risks from the three “3P” 
perspectives (project, process and product) and evaluate our 
criteria factors that can be used for the clustering. The 
experiment has taken place at School of Computing 
Science/ Newcastle University, UK. The recruited subjects 
were 30 participants (MSc, PhD and Post-doctoral 
43
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

researchers) who either have experience and worked in 
software development projects or at least have appropriate 
knowledge with software engineering and software 
development. The result of the experiment shows the 
following: 
 
The clustering of the risks from the three 
perspectives has got a high degree of support from 
the subjects.  
 
It seems that using the criteria for clustering takes 
more time than clustering without the criteria but: 
- It supports standardization. 
- In the long run, using criteria will take shorter time 
when the developer becomes familiar with it. 
-Using criteria avoids subjective judgments, which 
could be different from one practitioner to another.  
Without the criteria it is very difficult to decide, which 
perspective the risk could apply to, particularly if the 
developer does not have enough experience. In real 
applications it is expected that developers may have some 
training on how to use the criteria. The following 
contributions are made by this work: 
 
Risks 
should 
be 
considered 
from 
the 
3P 
perspectives. 
 
Clustering identified risks is effective in saving time 
and effort. 
The result of the experiment confirm the importance and 
usefulness of clustering, considering of the risks from the 3P 
perspectives as a way for reducing the effort and time in 
managing the risks and then increasing the efficiency of risk 
management in W-D developments.  
The experiment result also raised the need for updating 
and improving our proposed clustering criteria to make it 
more understandable and less time consuming for 
developers and managers. The result of this experiment will 
be used to revise and rectify our pre-clustered risks list. 
Finally, some risks could affect more than one perspective. 
The experiment has been designed to be ready for any 
replications in the future if need be. 
VIII. REFERENCES  
[1] Mishra, D. and A. Mishra, Distributed Information System 
Development: Review of Some Management Issues, in Proceedings of 
the Confederated International Workshops and Posters on On the 
Move to Meaningful Internet Systems, Springer-Verlag:, 2009, pp. 
282 - 291.   
[2] Jim´enez, M., M. Piattini, and A. Vizca´ıno, Challenges and 
Improvements in Distributed Software Development: A Systematic 
Review. Hindawi Publishing Corporation Advances in Software 
Engineering Volume 2009, 2009, pp. 1-14.  
[3] Keshlaf, A. and S. Riddle, Risk Management for Web and Distributed 
Software Development Projects, in 2010 Fifth International 
Conference on Internet Monitoring and Protection ICIMP2010,  IEEE 
Computer Society, 2010, pp. 22-28. 
[4] Ebert, C., B. Murthy, and N. Jha, Managing Risks in Global Software 
Engineering: 
Principles 
and 
Practices, 
IEEE 
International 
Conference on global software engineering ICGSE'08, 2008, pp. 131-
140. 
[5] Boehm, B., A. Egyed, J. Kwan, D. Port, A. Shah, and R. Madachy, 
Using the WinWin Spiral Model: A Case Stud, IEEE Computer, 1998, 
pp. 33 - 44. 
[6] Misra, S., U. Kumar, V.Kumar, and M. Shareef, Risk Management 
Models in Software Engineering. International Journal of Process 
Management and Benchmarking (IJPMB), 2007. 2(1): pp.  59-70. 
[7] Kirner, T. and L. Goncalves, Software Risk Management: a Process 
Model and a Tool, in Software Engineering Techniques: Design for 
Quality, Springer Boston, 2007, pp. 149-154. 
[8] Islam, S., Software Development Risk Management Model – A Goal 
Driven Approach, in ESEC/FSE Doctoral Symposium’09 2009, 
ACM: Amsterdam - The Netherlands. 
[9] Kontio, J., The Riskit Method for Software Risk Management, Version 
1.00 CS-TR-3782 / UMIACS-TR- 97-38, in CS-TR-3782 / UMIACS-
TR- 97-38, Computer Science Technical Reports, C.-T.-U.-T.-. 97-
38, Editor. 1997, University of Maryland: Maryland. 
[10] Fewster, R. and E. Mendes, Measurement, Prediction and Risk 
Analysis for Web Application, in Proceedings of 7th International 
Software Metrics Symposium, METRICS-2001, IEEE Computer 
Society, 2001, pp. 338 - 348. 
[11] Presson, J., L. Mathiassen, J. Boeg, T. Madsen, and F, Steinson., 
Managing Risks in Distributed Software Projects: An Integrative 
Framework. IEEE Transaction on Software Engineering, 2009. 56(2): 
pp. 508-532. 
[12] Rabbi, M. and K. Mannan, A Review of Software Risk Management 
for Selection of Best Tools and Techniques, in Proceedings of 9th 
ACIS International Conference on Software Engineering, Artificial 
Intelligence, Networking, and Parallel / Distributed Computing, IEEE 
Computer Society, 2008, pp. 773 - 778. 
[13] Gorski, J. and J. Miler, Towards an Integrated Environment for Risk 
Management in Distributed Software Projects, in Proceedings of 7th 
European Conference on Software Quality ECSQ2002. 2002. 
[14] Kuni, R. and N. Bhushan, IT Application Assessment Model for 
Global Software Development, in IEEE International Conference on 
Global Software Engineering (ICGSE'06). 2006, IEEE Computer 
Society, 2006, pp. 92 - 100.  
[15] Keshlaf, A. and S. Riddle, Web and Distributed Software 
Development Risks Management: WeDRisk Approach. International 
Journal On Advances in Software, vol. 3&4 2010. Unpublished. 
[16] Dunphy, P., A. Heiner, and N. Asokan, A closer Look at Recognition-
Based Graphical Passwords on Mobile Devices, in Proceedings of the 
Sixth Symposium on Usable Privacy and Security SOUPS'10, ACM,  
2010, pp. 1-12. 
[17] Maxion, R. and K. Killourhy, Keystroke Biometrics with Number-Pad 
Input, In IEEE/IFIP International Conference on Dependable Systems 
& Networks (DSN-10), 2010,  pp. 201-210. 
[18] Kitchenham, B., S. Pfleeger, L. Pickard, P. Jones, K. Elemam, and J. 
Rosenberg., Preliminary Guidelines for Empirical Research in 
Software Engineering. IEEE Transactions on Software Engineering, 
2002. 28(8): pp. 721 - 734. 
44
ICIMP 2011 : The Sixth International Conference on Internet Monitoring and Protection
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-125-0

