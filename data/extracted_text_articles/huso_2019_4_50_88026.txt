Adaptive Personalized Network Relationships
in the CHUNK Learning Environment
Mario Andriulli, Maria Smith,
and Shane Smith
Department of Applied Mathematics,
Naval Postgraduate School,
Monterey, CA
Ralucca Gera
Department of Applied Mathematics,
Associate Provost for Graduate Education,
Teaching and Learning Commons,
Naval Postgraduate School, Monterey, CA
Email: rgera@nps.edu
Michelle L. Isenhour
Department of Operations Research,
Naval Postgraduate School,
Monterey, CA
Email: mlisenho@nps.edu
Abstract—How can learner proﬁles support personalized
online learning? Our current research analyzes a personalized
adaptive system for education called CHUNK Learning. The
CHUNK Learning system builds on a network of modules,
and a learner proﬁle, both tagged with keywords. CHUNK
Learning currently utilizes simple keyword relationships to
suggest a tailored, personalized, adaptive learning plan guid-
ing the learner through the network of modules. However,
supervised machine learning methods may be more suitable to
enable the implementation of an iterative algorithm for reﬁned
learning plans. In this paper, we investigate the relationship
between learner proﬁle and adaptive learning plans. Learners
ﬁrst create a proﬁle in CHUNK Learning which establishes
their baseline learning plan. Then, as learners begin to interact
with the learning environment, the CHUNK Learning system
updates the learning plan based on learner activities (learned,
viewed, tested), keyword searches, and content ratings by
increasing or reducing the strength of the connection between
the learner proﬁle and activities. Additionally, we demonstrate
that by connecting all learners within an academic program,
we create a stronger bond between learners, which results in a
reduced path between activities. We conclude that by reducing
the path length between activities, we strengthen connections in
the CHUNK Learning environment resulting in a more concise
academic plan for learners.
Keywords—education; adaptive learning; learning systems;
network theory (graphs); adaptive algorithms.
I. INTRODUCTION AND MOTIVATION
Institutions design current educational experiences in a
manner which presents learning material to students through
a very formal and rigid structure. This structure forces all
students, regardless of personal academic backgrounds or
capabilities, through an academic pipeline where they must
complete topics in a sequential order to move forward to the
next topic. At the Naval Postgraduate School in Monterey,
California, USA, a web-based software application known
as CHUNK Learning explores potential methods to relieve
some of the rigor of this standard academic environment [1].
The Curated Heuristic Using a Network of Knowledge
for Continuum of Learning (CHUNK Learning) environment
is an educational platform that draws information from a
learner proﬁle to recommend a tailored educational expe-
rience for them [1]. The CHUNK Learning environment
(Fig. 1) consists of courses, CHUNKs, CHUNKlets, and ac-
tivities. Courses are generally added by instructors and typi-
cally align with a course offered in the academic curriculum.
A CHUNK is a topic within a course, equivalent to a section
in a textbook. A CHUNK is divided into smaller pieces
called CHUNKlets. CHUNKlets are recommended experi-
ences to maximize learning comprehension for each learner,
within a particular CHUNK. Finally, activities are the base
level of interaction within the CHUNKlets. Activities are
the ﬁnal link to videos, PowerPoint presentations, and other
media which may be accessed by the learner. Throughout
the paper, “user” and “learner” are used interchangeably.
Fig. 1. A Snapshot of the CHUNK Learning Environment.
We desire to implement a web-based program which
recommends educational experiences to learners. Our mo-
tivation in conducting this research is to analyze links
within the learner proﬁle to develop an adaptive network
that recommends activities to the learners based on their
recent keyword searches, content ratings, and common con-
nections between them. The desired end state is to have
reﬁned algorithms in the CHUNK Learning environment
to provide recommendations similar to methods currently
used in industry. For example, if someone conducts a search
engine inquiry regarding a potential product purchase, then
commercial services like Amazon will take that information
80
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

and return not only suggestions for that product, but also
additional items which are closely related to the original
search [2]. This method has been proven to generate ad-
ditional revenue in sales, and in our research we would
apply the same concept to translate commercial potential
into increased academic potential.
To develop the relationship between learners and activi-
ties, CHUNK Learning analyzes learner proﬁles and links
activities with the learner based on a simplistic count of
keyword matches. Proﬁle information includes information
such as military branch of service, course enrollments, prior
education, and experience. To conduct our research, we
develop a network model linking learners to activities using
adaptive keyword weighting based on CHUNK Learning
use (viewed, tested, liked) data. As the CHUNK Learning
environment does not currently contain this network model,
we compare the network relationships for the initial static
proﬁle and an adaptive proﬁle to determine overall impacts
on the learner’s educational experience.
We organize the remainder of this paper as follows.
Section II provides an overview of related work. We then
establish the deﬁnition of our network model and introduce
the methodology for comparing and contrasting the existing
CHUNK Learning structure to a novel one in Section III.
In Section IV, we present the experimental setup, followed
by the results and interpretation in Section V. Finally, we
conclude and present recommendations for future research
in Section VI.
II. RELATED WORK
Existing recent approaches to a personalized adaptive
learning methodology include research using web-based
services [3]–[6], personalized learning models [7]–[9], the
creation of e-learning environments combined with web-
based services [10]–[12] and the creation of user interfaces
based on user behavior episode identiﬁcation [13]–[16].
While all methodologies have beneﬁts and limitations, we
narrow our focus towards the creation of a user interface
based on episode identiﬁcation, analysis of user feedback,
and the creation of an adaptive learner proﬁle.
Prior CHUNK Learning research at the Naval Postgrad-
uate School by MAJ Jan-Daniel Cleven (German Army)
introduces a multi-layer network model relating classes to
learners through interests [17]. The nodes represent classes
and learners in the Operations Research curriculum and the
edges represent keyword relationships between the classes
and learners. This model incorporates learner feedback by
weighting the connection between the nodes. Course syllabi
are ﬁltered by metadata tagging to extract the top ten relevant
keywords for each course offered, assigned to the nodes.
The system uses weighted feedback to provide recommen-
dations for the learner’s future coursework. This feedback
diminishes the presence of unfavorable courses and brings
preferred courses to the top of the recommended list. We
are particularly interested in the feedback component of this
research and its inclusion in our experiment as a feedback
methodology.
Previous research on adaptive user interfaces is of par-
ticular interest to our area of study. The approach taken by
Jiming Liu, Chi Kuen Wong, and Ka Keung [16] is a design
that reacts to different situations and requirements, then
records user’s behavior. Their approach is based on Episodes
Identiﬁcation and Association (EIA), which recognizes the
learner’s patterns by tracing the learner’s action sequences.
The episodes can be thought of as a record of learner
behavior used to predict the best educational experience.
One of the limitations of this approach is the possibility of
losing data due to limitations in the types of recorded events.
For example, a user could initiate typing in a search bar,
but then select an auto-generated recommendation without
recording that search in the action sequence. The goal of
their interface is to help learners according to adaptive
learning plans. The authors recognized the need to develop
learner proﬁles to enable personalized interactions. Their
approach discovers rules that can best describe and predict
learner’s behavior by ﬁnding frequently occurring episodes
in the learner’s action sequences. They distinguish two types
of interface events: text input events and mouse click events.
We believe that focusing on both text input events and
mouse click events to update an adaptive keyword list will
be valuable to improving our network model of an adaptive
educational environment.
Another existing approach to personalized learning pub-
lished by KK Thyagharajan and Ratnamanjar Nayak [5]
involves implementing a web-service to ensure the residual
validity of learning content. The authors use dynamic meth-
ods based on the learner’s needs and preferences to fulﬁll
learning objectives. Systems such as Intelligent Tutoring
Systems (ITS) [13] and Adaptive Hypermedia (AH) [11] are
also possible solutions to personalize the learning experience
for the student. Such systems may tailor the educational
offerings to the learner’s objectives, prior knowledge, learn-
ing style, experience, and many other characteristics. The
downfall is that these existing systems remain criticized
for believing that the embedding of expert knowledge is
sufﬁcient for efﬁcient learning to occur. Although beneﬁcial,
our model does not include this approach. We do, however,
recommend it for consideration in future research.
In our study, we focus on an adaptive network science
methodology to propose an improved learner experience in
the CHUNK Learning environment. The aim is to improve
the educational experience recommendations to the learner
through a dynamic proﬁle. The adaptive network studies the
effect of a learner feedback loop as well as learner proﬁle
updates based on his/her behavior in the CHUNK Learning
environment, similar to the study completed by Liu, Wong
and Keung [16]. Additionally, we focus on connecting
learners based on academic curricula to determine effects
to the individual learner in the educational environment.
81
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

III. NETWORK MODEL & METHODOLOGY
In this research, we develop a network model for an
adaptive, personalized educational environment for CHUNK
Learning tailored to enhance each student’s educational ex-
perience. Our network model includes two elements: nodes
and edges. The nodes are learner proﬁles and activities,
while the edges are tuples consisting of keywords from a
learner’s proﬁle that link him/her to an activity.
Our methodology focuses on comparing and contrasting
the existing structure of user-to-activity connections based
on static keywords within CHUNK Learning, to a more
dynamic structure that updates a keyword list within a
learner proﬁle based on his/her CHUNK Learning use. In
the existing structure, the learner’s proﬁle has a static and
adaptive component. The static proﬁle consists of keywords
derived from initial data input when each learner establishes
his/her initial proﬁle. The keyword tuples in the static
proﬁle do not change, unless the learner manually edits the
proﬁle. In contrast, the learner’s adaptive proﬁle consists of
a proﬁle where the keyword tuples dynamically update by
capturing data from learner’s use of the CHUNK Learning
environment. We focus on one adaptive category, activities,
which are one level below a CHUNKlet in the CHUNK
Learning network, to determine the effectiveness of the
keyword relationships. This dynamic network process can
be iterated multiple times to further reﬁne the keyword
relationships.
The baseline methodology uses the existing structure
of the CHUNK Learning curriculum. That is, the nodes
in the network are learners and activities. The edges in
this network connect learners to activities through keyword
matches found in the learner’s initial proﬁle. Based on a
weighted sum of keywords, the learning system presents
the learner with activities that match keywords from their
proﬁle. In order to model this network, we develop a
small sample of ﬁve learner proﬁles generated with pseudo-
random keywords from the available keywords list. We then
use this information to generate a network model for the
initial static network.
We then modify the simulated learner proﬁles in such a
way as to replicate the effects that an adaptive, personalized
education environment may have on a learner. We apply
this adaptive concept to generate our second network model,
taking into account the new adaptive proﬁle data. The nodes
still represent the learners and the activities, and the edges
are still the keywords linking the learners to an activity,
but now the methodology focuses on an adaptive proﬁle
approach. The combination of the initial static proﬁle with
randomly updated keyword relationships generates the new
adaptive network. Using this method, we expect that edges
between activities and learners will evolve based on the
learners perceived quality of the available activities. Some
activities may become disconnected as lower valued edges
diminish, while other activities may gain relevance as they
accumulate stronger connections.
In addition to an adaptive learner proﬁle based on key-
word updates, we update the adaptive network to include
additional edges that connect learners with similar academic
curricula in order to analyze the effectiveness of con-
necting learners sharing similar characteristics within their
proﬁles. These relationships form a completely connected
sub-network between learners with similar academic back-
grounds. This sub-network shows learners with similar aca-
demic curricula having a shared relationship with activities
which are prevalent in their academic ﬁeld. These improved
relationships reduce the distance between the learner and
content that is relevant to their peers, and additionally, they
can be used to pre-compile future learner proﬁles as new
learners begin using the CHUNK Learning system.
Lastly, we analyze the effects that a feedback loop could
have on the personalized learning environment. Utilizing the
adaptive network model that we create, we use an average
learner rating to determine whether or not an activity should
be available within the learner environment. We expect our
simulation to show the effects of feedback, such as learner
activity rating, on the learner’s experiences within CHUNK
Learning.
Our methodology of comparing and contrasting the ef-
fects of two different learning experiences should offer us
valuable information on the type of educational environment
that is more beneﬁcial to a user.
IV. EXPERIMENTAL SET UP
In order to set up our experiment, we ﬁrst analyze existing
CHUNK Learning data to ﬁnd data that links learners to
activities through keywords. The initial set of keyword
relationships from the current database resulted in more
than 4200 potential relationships for sources and targets. In
order to see the effects on the individual learner, we pare
down this available data to create ﬁve virtual learner proﬁles.
The decision to create only ﬁve learner proﬁles provides us
with a potential advantage. Five is a small number, but still
signiﬁcant in our case, allowing us to visually see changes
that we would expect to happen given a larger pool of
proﬁles. We use the sources and targets to generate and
investigate a directed network in both R-project [18] and
Gephi [19].
We model the ﬁve virtual learners with a list of keywords
and activities for both the static and adaptive networks.
The learners are the same for each network. Only the list
of keywords change in the adaptive version. In our static
network model, each learner begins with between three to
ﬁve randomly selected activities each with between one
to ﬁve keywords for a total of seven to ten total entries.
Multiple keywords matching to the same activity provides
an integer value for weighted edges.
In order to set up our adaptive proﬁle network simulation,
we set some parameters. First, we limit a learner’s keyword
list to their top eight keywords. Our goal is to strengthen
learner connections to activities without creating a network
overpopulated with activities due to a long list of keywords.
82
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

Also, a long list of keywords could potentially provide too
many recommendations to a learner, therefore lessening the
beneﬁt of a personalized learning environment. Although the
number of keywords is adjustable, we maintain the keyword
list to a maximum of eight for our simulation. Another
deﬁning parameter is that a learner’s established connection
to activities is through a minimum of two keywords. The
purpose of this parameter is to, once again, strengthen the
link between learners and activities. In the static version of
the network, these parameters do not exist. There are some
edges of weight one, linking a learner to activities by one
keyword such as “video”. However, the keyword “video”,
provides no information as to the content most relevant
to the learner. Therefore, in order to improve the learner
experience, we implement the minimum of two keywords
to link a learner to an activity. We update the learner
keywords at random to simulate word searches related to
their academic activities. We update all learners similarly,
each gaining one new keyword. If the learner’s keyword list
exceeds eight, the simulation removes a keyword from the
list at random until the learner proﬁle reaches the number
eight. We do not provide a ranking for keywords in our
simulation.
We run this experiment in both Gephi and R in order to
provide multiple visualizations. As no network visualization
is the same, we analyze different things about our two
networks by looking at them from different perspectives. We
believe that analysis from multiple viewpoints is valuable to
this experiment.
After running our initial experiment, we continue working
with the adaptive network. The ﬁrst experiment we conduct
connects learners based on their academic curriculum in
the adaptive network. Of our ﬁve learners, we select two
different academic curricula. We assign two learners to
the “math” curriculum and two learners to the “operations
research” curriculum. We then assign one learner to two cur-
ricula as a ”double major,” in both “math” and “operations
research”. The experiment connecting learners allows us to
analyze a path to an activity that does not exist without the
learner-to-learner connection. In addition to path length, the
learner connection allows us to analyze the impact of certain
learners on the centrality of the overall network.
The last evaluation conducted for this experiment is a
feedback simulation. Although we do not create a feedback
loop, we want to see possible effects of learner ratings on
activities. Therefore, we set a minimum average activity
rating within the system. For an activity to be available to
a learner, the minimum rating is three. However, sensitivity
can be modiﬁed to change the weight of feedback at any
time. We randomly assign activity ratings to each activity.
If an activity has an average rating of less than three, it
does not populate the network simulation. We use the results
of this simulation to analyze the impacts and effectiveness
of a feedback loop in an adaptive, personalized learning
environment.
After completing the simulations of our network exper-
iment, we compare and contrast the initial static proﬁle
model against the adaptive proﬁle model, without learner
connections. Each simulation provides us unique and differ-
ent information regarding edge weights, number of nodes,
number of edges, average out degree, path length, and
centralities. We then use this information to analyze our
network.
V. RESULTS AND ANALYSIS
After completing our experiment by running simulations
of our static and adaptive networks in R and Gephi, we
review and analyze our results. Our results focus on struc-
tural elements, speciﬁcally path lengths, path diameters, and
network centralities, as well as how suitable a node is for
spreading information.
A. Graph Composition
The following ﬁgures and tables include the results from
the incremental changes in our CHUNK Learning environ-
ment simulations. Fig. 2 and Table I demonstrate the results
from the baseline, static network which models the existing
methods of the CHUNK Learning system.
Fig. 2. Initial Static Network without Connected Learners
TABLE I. STATIC NETWORK RESULTS.
Number of Vertices
19
Number of Edges
59
Average Path Length
3.321
Diameter Length
6
In Fig. 3, learners are connected to activities through a list
of keywords and to each other. This model is our baseline,
which we use to compare to the adaptive network model
simulations. As can be seen in Table II, connecting the
learners reduces the average path length between learners
and activities immediately.
Fig. 4 is our adaptive proﬁle network simulation. This
network shows what would happen if each of our ﬁve
83
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

Fig. 3. Initial Static Network with Connected Learners
TABLE II. STATIC NETWORK RESULTS - CONNECTED LEARNERS.
Number of Vertices
19
Number of Edges
71
Average Path Length
2.397
Diameter Length
4
simulated Learners had their keyword lists updated with
one new keyword, their keyword lists restricted to eight
keywords, and a minimum of two keywords required to
link a learner to an activity. Through this change in the
simulation, the updated keyword list generated new edges,
linking learners to new activities with the addition of one
new keyword (Table III). As expected, these new connec-
tions increased the total number of nodes in the network.
The number of learners did not change, but new activities
populated based on their updated keyword lists. We found
it valuable to determine if the average out-degree of a
learner changed when comparing the static proﬁle to the
adaptive proﬁle network. The average out-degree increased
by two in the adaptive model. We expected this result as
we added the requirement for a minimum of two keywords
to connect a learner to an activity. These results tell us
that the small changes made have enhanced the educational
experience for the learner. The more edges linking a learner
to an activity strengthens the learner’s experience in this
educational environment.
TABLE III. ADAPTIVE NETWORK RESULTS.
Number of Vertices
24
Number of Edges
67
Average Path Length
4.06
Diameter Length
8
Fig. 5 depicts the simulation which connects learners to
each other through academic disciplines such as ”Mathemat-
ics” and ”Operations Research.” This simulation increased
the number of edges in the overall network, and we analyze
this a bit further by focusing on path lengths. Fig. 6 and
Fig. 4. Adaptive Network without Connected Learners.
Fig. 7 present the results of this analysis and next we discuss
the conclusions drawn from our analysis in more detail.
Fig. 5. Adaptive Network with Connected Learners.
TABLE IV. ADAPTIVE NETWORK RESULTS - CONNECTED LEARNERS.
Number of Vertices
24
Number of Edges
79
Average Path Length
2.452
Diameter Length
4
Fig. 6 again shows us the adaptive network without
connected learners. This time we highlight the path a user
would have to take to arrive at a non-recommended activity.
In order for Learner 6 to get to the highlighted course not
recommended to him/her, he/she would have a path of length
three to get to that course. After reviewing these results, we
predict that this path would shorten if we connected learners.
Fig. 7 depicts an alternate view of the adaptive proﬁle
network with connected learners. We connect the learners
84
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

Fig. 6. Adaptive Network Path Showing Disconnected Learners.
through academic disciplines such as mathematics and op-
erations research. What we ﬁnd is that the minimum path
Learner 6 requires to get to the same highlighted course
as in Fig. 6, shortens due to the inter-learner connectivity.
Therefore, we ﬁnd it valuable to the educational environment
to connect learners with similar qualities. This connection
makes activities available to the learner even though they
may not have in their proﬁle keywords related to such
activities.
Fig. 7. Adaptive Network Path Showing Connected Learners.
This concept is similar to what Amazon.com users see
when shopping on Amazon’s App or website. After a user
purchases item “W”, Amazon connects users who brought
item “W” then shows additional items through a section
called “Customers who bought item “W” also bought “Y”,
“X”, and “Z”.” The adaptive concept offers predictive op-
tions given past user behavior. In the CHUNK Learning
environment, students may see Learners who completed
activity “A” also completed activity “B”.
The ﬁnal incremental change we make to our CHUNK
Learning environment network simulation includes analyz-
ing the effects of feedback. We perform this analysis through
a simulated activity rating. We randomly assign average
ratings to each activity. If the rating is less than three,
the activity becomes no longer available in the learner’s
educational environment.
Fig. 8. Path Connecting Learners to Activities Meeting Minimal Ratings.
Fig. 8 is an example of the network with the same path
length as found in Fig. 7. As shown in Fig. 8, however,
activities with average learner feedback of less than three
are no longer present. Since the path from Learner 2 to
“Derivatives–Crash Course” meets the required minimum
rating value, the connection holds. We ﬁnd this simulation
valuable as feedback provides the CHUNK Learning envi-
ronment with the ability to continually monitor and update
its content to provide the best educational environment for
individual learners, concluding that a feedback loop, in the
form of average activity rating, enhances a learner’s educa-
tional experience in the CHUNK Learning environment.
In Fig. 8, three activities fail to meet the rating threshold.
As a result, the adaptive simulation disconnects the activity
from the network but does not delete the activity from the
CHUNK Learning environment. Activities may continue to
hold educational value after review and remain within the
system. Disconnecting activities from the network inside the
CHUNK Learning environment may signal the activity needs
maintenance due to a faulty hyperlink, or the delivery of the
material fails to resonate with learners. In other words, the
activity may be “boring” or the instructor “uninteresting”
and the activity should be revamped. Moreover, merely
deleting the activity would prevent the analysis of trends for
poorly rated content and inhibit overall CHUNK Learning
environment improvement and growth.
This concept is similar to Amazon’s product review.
In the CHUNK Learning environment, learners provide
85
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

direct feedback for each activity. Amazon rarely offers its
shoppers poorly rated products. In turn, CHUNK Learning
users would only see exceptional-to-average rated learning
activities.
Fig. 9. Normalized Closeness Centrality Network with Unconnected
Learner.
B. Network Centralities
Lastly, after running all of our simulations, we ﬁnd it
valuable to analyze centralities on our network. The close-
ness centrality and eigenvector centrality help measure the
effectiveness of node information dissemination. By examin-
ing centralities, different node characteristics come into play.
These node characteristics are essential when determining
how to improve the CHUNK Learning experience.
The network simulations shown in Fig. 9 and Fig. 10
depict the closeness centrality of the adaptive graph without
and with learner connections, respectively. While differences
exist, the differences yield no signiﬁcant results which can
drastically improve the CHUNK Learning environment.
Fig. 11 depicts the eigenvector centrality of the adaptive
network, while Fig. 12 shows the eigenvector centrality of
the adaptive network with connected Learners. As expected,
Fig. 12 is more densely connected. Our ﬁndings indicate
that the learner connected adaptive network has advantages
over the unconnected network.
Signiﬁcant to the eigenvector centralities is the shufﬂe of
Learner eigenvalues rankings once learners were connected
within the network. The learners’ eigenvalues are ranked in
Table V.
TABLE V. LEARNER EIGENVALUES.
Unconnected Learner Eigenvalues
Connected Learner Eigenvalues
Learner 1
1.0000
Learner 2
1.0000
Learner 2
0.7540
Learner 1
0.8370
Learner 4
0.4003
Learner 4
0.6612
Learner 6
0.2206
Learner 5
0.6347
Learner 5
0.1831
Learner 6
0.6249
Fig. 10. Normalized Closeness Centrality Network with Connected
Learners.
Fig. 11. Scaled Eigenvector Centrality Network with Unconnected
Learner.
Fig. 12. Scaled Eigenvector Centrality Network with connected Learners.
86
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

Eigenvector centrality measures the impact that neighbor-
ing nodes have on one another. There are three signiﬁcant
results when comparing unconnected learners to connected
learners using eigenvector centralities. First, all but one
of the eigenvalues increase, meaning connecting learners
results in a signiﬁcant impact from the weight of the neigh-
boring learner and activity. Second, the re-ranking of eigen-
values showing a learner’s individual network connections
is imperative during analysis. Learners who connect to other
active Learners connect to more information. Moreover,
and lastly, by design Learner 2 is a “double major” in
Mathematics and Operations Research. Between Learner 2’s
connected activities and it’s neighbors connected activities,
Learner 2 is only a maximum of three moves away from
any Mathematical or Operational Research activity in the
simulated CHUNK Learning environment. This “double
major” concept could be applied to a variety of adaptive
network characteristics such as learner personal interest,
undergraduate degree information, or favorite instructional
video.
VI. CONCLUSIONS AND FUTURE DIRECTIONS
After reviewing and analyzing the results of the network
simulations, we believe more work can be done to enhance
the personalized educational experience in the CHUNK
Learning environment. Limitations to our experiment were
scaling and iterating. We based our analysis on a small
sample of randomly simulated learners. To further improve
results and provide additional justiﬁcation for a personalized
learning environment, experiments should focus on a much
larger scale with real data. Iterating the process over time
would also show the effects on learning in the educational
environment. Knowing these limitations led to a list of
recommendations for future work.
First, feedback is essential to an adaptive, personalized
learning environment. A learner rating from one to ﬁve could
provide a measurable weight to the adaptive list of keywords
in a learner’s proﬁle. Although a learner may search a
particular keyword or use a speciﬁc activity, it is possible
they may not have an interest in that topic. Therefore, the
feedback loop would be a valuable tool to keep the keyword
list weighted and updated based on learner ratings.
In addition to a learner activity rating, another area for
future work would be to implement statistics in the form
of a dashboard within a learner proﬁle. This dashboard will
allow the learner to see the derivation of recommendations
for certain activities as well as the progress they are making
on completing their academic goals.
While we found that connecting learners can be valuable
by providing a shortened path to an activity, in the future,
it would be useful to analyze the possibility of learner’s
sharing keywords through their connections. This sharing
of information can provide a direct path from a learner to
activities through a shared keyword or keywords.
While there is still much work to be done, the results
of small scale simulations in an adaptive, personalized edu-
cational environment provide valuable insight. An adaptive
network within the CHUNK Learning environment would
enhance the learner’s educational experience by recommend-
ing activities most relevant and exciting to the user.
ACKNOWLEDGMENTS
The authors would like to thank the U.S. Department of
Defense for partially funding this work.
REFERENCES
[1] R. Gera, M. Isenhour, D. Bartolf, and S. Tick, “CHUNK:Curated
Heuristic Using a Network of Knowledge,” in The Fifth International
Conference on Human and Social Analytics.
HUSO, July 2019.
[2] B. Smith and G. Linden, “Two decades of recommender systems at
Amazon.com,” IEEE Internet Computing, vol. 21, no. 3, pp. 12–18,
May 2017.
[3] A. Grewal, S. Rai, R. Phillips, and C. C. Fung, “The e-learning
lifecycle and its services: the web services approach,” in Second
International Conference on e Learning for Knowledge-Based Society,
August 2005, pp. 4–1.
[4] M. ˇSimko, M. Barla, and M. Bielikov´a, “ALEF: A framework for
adaptive web-based learning 2.0,” in IFIP International Conference
on Key Competencies in the Knowledge Society.
Springer, 2010,
pp. 367–378.
[5] K. Thyagharajan and R. Nayak, “Adaptive content creation for per-
sonalized e-learning using web services,” Journal of Applied Sciences
Research, vol. 3, no. 9, pp. 828–836, 2007.
[6] Z. Xu, Z. Yin, and A. E. Saddik, “A web services oriented frame-
work for dynamic e-learning systems,” in CCECE 2003-Canadian
Conference on Electrical and Computer Engineering. Toward a Caring
and Humane Technology (Cat. No. 03CH37436), vol. 2. IEEE, 2003,
pp. 943–946.
[7] C.-M. Chen, “Intelligent web-based learning system with personalized
learning path guidance,” Computers & Education, vol. 51, no. 2, pp.
787–814, 2008.
[8] T. Vengattarman and P. Dhavachelvan, “An agent-based person-
alized e-learning environment: Effort prediction perspective,” in
2009 International Conference on Intelligent Agent & Multi-Agent
Systems.
IEEE, 2009, pp. 1–6.
[9] T.-C. Yang, G.-J. Hwang, and S. J.-H. Yang, “Development of
an adaptive learning system with multiple perspectives based on
students’ learning styles and cognitive styles,” Journal of Educational
Technology & Society, vol. 16, no. 4, pp. 185–200, 2013.
[10] L. Aroyo, P. Dolog, G.-J. Houben, M. Kravcik, A. Naeve, M. Nilsson,
and F. Wild, “Interoperability in personalized adaptive learning,”
Journal of Educational Technology & Society, vol. 9, no. 2, pp. 4–18,
2006.
[11] P. Brusilovsky, J. Eklund, and E. Schwarz, “Web-based education for
all: a tool for development adaptive courseware,” Computer networks
and ISDN systems, vol. 30, no. 1-7, pp. 291–300, 1998.
[12] M. Rani, R. Nayak, and O. Vyas, “An ontology-based adaptive
personalized e-learning system, assisted by software agents on cloud
storage,” Knowledge-Based Systems, vol. 90, pp. 33–48, 2015.
[13] H. J. Cha, Y. S. Kim, S. H. Park, T. B. Yoon, Y. M. Jung, and J.-
H. Lee, “Learning styles diagnosis based on user interface behaviors
for the customization of learning interfaces in an intelligent tutoring
system,” in International Conference on Intelligent Tutoring Systems.
Springer, 2006, pp. 513–524.
[14] G.-J. Hwang, H.-Y. Sung, C.-M. Hung, I. Huang, and C.-C. Tsai,
“Development of a personalized educational computer game based
on students’ learning styles,” Educational Technology Research and
Development, vol. 60, no. 4, pp. 623–638, 2012.
[15] S. V. Kolekar, S. Sanjeevi, and D. Bormane, “Learning style recog-
nition using artiﬁcial neural network for adaptive user interface in e-
learning,” in 2010 IEEE International Conference on Computational
Intelligence and Computing Research.
IEEE, 2010, pp. 1–5.
[16] J. Liu, C. K. Wong, and K. K. Hui, “An adaptive user interface based
on personalized learning,” IEEE Intelligent Systems, vol. 18, no. 2,
pp. 52–57, March 2003.
[17] J.-D. Cleven, “A MULTILAYER NETWORK APPROACH FOR
REAL-TIME ADAPTIVE PERSONALIZED LEARNING,” Master’s
thesis, Monterey, CA; Naval Postgraduate School, 2018.
87
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

[18] R Core Team, R: A Language and Environment for Statistical
Computing, R Foundation for Statistical Computing, Vienna, Austria,
2013. [Online]. Available: http://www.R-project.org/
[19] M. Bastian, S. Heymann, and M. Jacomy, “Gephi: An open
source software for exploring and manipulating networks,” in Third
international AAAI conference on Weblogs and Social Media, 2009.
[Online]. Available: http://www.aaai.org/ocs/index.php/ICWSM/09/
paper/view/154
88
Copyright (c) The Government of USA, 2019. Used by permission to IARIA.     ISBN:  978-1-61208-725-2
HUSO 2019 : The Fifth International Conference on Human and Social Analytics

