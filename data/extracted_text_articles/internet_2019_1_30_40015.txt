BeamMaP: Beamforming-based Machine Learning for Positioning
in Massive MIMO Systems
Chong Liu, Hermann J. Helgert
School of Engineering and Applied Science, The George Washington University,
Washington, DC 20052
Email: cliu15@gwu.edu, hhelgert@gwu.edu
Abstract—Existing positioning techniques can mostly overcome
problems caused by path loss, background noise and Doppler
effects, but multiple paths in complex indoor or outdoor environ-
ments present additional challenges. In this paper, we propose
BeamMaP that can instantaneously locate users after training
input data and steer the beams efﬁciently in a distributed massive
Multiple-Input Multiple-Output (MIMO) system. To simulate
a realistic environment, we evaluate the positioning accuracy
with channel ﬁngerprints collected from uplink Received Signal
Strength (RSS) data, including Line-of-Sight (LoS) and Non-Line-
of-Sight (NLoS), in the training data sets. Based on the adaptive
beamforming, we employ the Rice distribution to sample the cur-
rent mobile users locations in the testing data sets. Our simulation
results achieve Reduced Root-Mean-Squared Estimation Error
(RMSE) performance with increasing volume of training data.
We prove our proposed model is more efﬁciency and steady in
the positioning system compared with kNN and SVM. The results
also demonstrate the effectiveness of the adaptive beamforming
model in the testing process.
Keywords–outdoor localization; machine learning; data train-
ing; beamforming.
I.
INTRODUCTION
The future developing technologies, such as autonomous
vehicles, Virtual Reality (VR) and the Internet of Things
(IoT), are relying on more efﬁcient bandwidth distribution
and higher speed transmission [1] [2] [3] [4]. The next
generation of wireless networks 5G should provide more
accurate localization of the connected mobile devices and
distribute the limited bandwidth in a more efﬁcient way.
Some new technologies employed in localization, especially
including the massive Multiple-Input Multiple-Output (MIMO)
and beamforming technologies, are explored in the 5G system
[5]. The innovative design of massive MIMO disclosed in
some publications utilizes a large number of upgraded array
antennas (more than one hundred) to multiplex messages for
several devices simultaneously. This component, implemented
in future Base Stations (BSs), has been shown to play an
essential role in positioning of Mobile Users (MUs) in cellular
networks, including increased spectral efﬁciency, improved
spatial diversity, and low complexity [6]. More importantly, a
distributed design for massive MIMO is beneﬁcial for position-
ing due to the better spatial diversity, which will be employed
in this paper. Some proposed solutions applying the MIMO
positioning techniques are mainly focused on the received
signal information from the users, such as the Angle-of-Arrival
(AoA), Time-of-Arrival (ToA), and Received Signal Strength
(RSS) [7] [8] [9]. These features, singly or in combination,
can be used in the localization of mobile users in indoor or
outdoor environments.
Even though positioning in cellular networks widely uses
the Global Positioning System (GPS) in urban or rural areas,
the method becomes unreliable when the Line-of-Sight (LoS)
and Non-Line-of-Sight (NLoS) are difﬁcult to distinguish,
such as in highly cluttered multipath scenarios (tens meters
error) [10]. In some conventional method using the two-step
localization techniques, the received LoS signals are processed
at different base stations and AoA and/or ToA of each user can
be obtained. Then the position of the user can be found by
triangulation calculation [8]. However, the LoS path may be
damped or obstructed, leading to large positioning errors, as
is often the case in complex scenarios. Also, [8] is exploiting
channel properties to distinguish LoS from NLoS signal paths,
resulting in an improvement of performance. However, a large
data gain with a combination of LoS and NLoS signal paths
will require high computational complexity.
A. Related work
Big data collections combined with machine learning meth-
ods have been mentioned in solving the MUs localization in
some of the literature [9] [11] [12]. For example, through
collecting RSS, AoA and/or ToA, we typically provide efﬁcient
supervised or unsupervised techniques to estimate the coordi-
nates of MUs. Some unsupervised methods, such as k-Nearest
Neighbors (kNN), assume that there are many reference users
at which vectors of RSS are obtained, and the target MU can be
located as a weighted average of the closest k reference posi-
tions [11]. Although kNN is able to provide good performance
in uniformly distributed references, we have to choose a better
regression under the different k dimension, which will generate
the large number of input training data and cause higher
computational complexity. Additionally, supported machine
learning methods, such as Support Vector Machines (SVM)
[12] and deep learning methods [9], are explored to predict the
coordinates of MUs after collecting amounts of RSSs and/or
AoAs through different base stations. However, the method in
[9] [12] will cause the estimation to be degraded when the
number of MUs increases and interference between cells in
the cellular networks becomes dramatically higher.
Based on the features of raw data sets, such as RSS
mentioned below in the system, we employ a Gaussian Process
Regression (GPR) model to estimate the locations of MUs,
discussed in [7]. GPR is a generic supervised learning method
designed to solve regression and probabilistic classiﬁcation
problems. Under this method, an unknown nonlinear function
is assumed to be random, and to follow a Gaussian Process
(GP). In contrast to kNN and SVM, GPR is able to provide
probabilistic output, for example, the posterior distribution of
16
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

the MU position, after given an online measurement and a
set of ﬁngerprints with RSS vectors. Besides, without LoS
and NLoS identiﬁcation, this machine learning approximation
method can efﬁciently identify MUs positions after training
with limited reference users, and it signiﬁcantly decreases the
computational complexity as well.
B. Our Approach and Contributions
In this paper, we propose a novel positioning technique,
called Beamforming-based Machine Learning for Positioning
(BeamMaP) to meet the above challenges. BeamMaP employs
a machine learning regression technique based on the efﬁcient
beamforming transmission patterns in order to estimate the
location of MUs. BeamMaP can instantaneously predict the
locations of MUs after generating the Machine Learning
(ML) regression network model and help the base stations to
distribute beams in an efﬁcient way. Moreover, BeamMaP can
implement the real-time detection to update the input data sets
including LoS and NLoS multipath channels.
Data
base
Cellular Network
Edge Servers
Cloud Servers
MIMO
Figure 1. BeamMap positioning system in cellular networks.
The BeamMaP design is illustrated in Figure 1. The
beamforming system in each BS installed massive MIMO
antennas serves more than one MU. When a MU transmits
on the uplink, we can obtain a vector of RSS (or a ﬁngerprint)
comprising LoS and NLoS multipaths measured by the massive
antennas array in the BS. The detected uplink signals or RSS
information are collected and submitted to the edge servers or
cloud servers for calculation. Then the adaptive array systems
can formulate a single or more beams with different weights
to different directions according to the demands of MUs.
Furthermore, MUs can process signals from a single MIMO
base station, provided the BS and users were synchronized,
which can be easily implemented by a two-way protocol by
adding some additional overheads [13]. Besides, in order to
avoid the pilot contamination occurred in massive MIMO
system between cells, some reuse pilot schemes and partic-
ular modulation technology, such as Orthogonal Frequency-
Division Multiplexing (OFDM) or Code-Division Multiple
Access (CDMA) should be applied in our system [14]. Further-
more, massive MIMO systems combined with beamforming
antenna technologies are considered to play a key role in the
next generation wireless communication systems [15]. Optimal
beamforming techniques, such as adaptive beamforming, are
mentioned to be employed in localization and provide energy
saving of the MIMO systems. BeamMaP employs adaptive
beamforming as a candidate in building the testing process.
Compared with switched beamforming, adaptive beamforming
can cover a larger area of MUs when the number of beams
and bandwidths range shared are the same, and it also offers
more comprehensive interference rejection [15]. Therefore,
BeamMaP not only can improve the efﬁciency of coverage
for users, but can also result in signiﬁcant reduction in energy
consumption of base stations.
The following contributions are made in this paper:
•
We employ a supervised machine learning regression
approach to accurately locate the MUs in a single
cellular system.
•
We present extensive performance results from simu-
lations exploring the effects of various componential
parameters.
•
We prove our proposed machine learning method is
more efﬁciency and steady in the positioning system
compared with kNN and SVM.
•
We use an adaptive beamforming method to build the
testing users model to increase the efﬁciency of the
ML model.
The rest of this paper is organized as follows: Section II
presents the BeamMaP positioning system design, including
the input data sets collected for training, the machine learning
model and testing process. In Section III, we present perfor-
mance evaluation results to analyze the impact factors. Section
IV presents our conclusions.
II.
BEAMMAP POSITIONING SYSTEM DESIGN
Driven by the above motivations, the BeamMaP framework
is illustrated in Figure 2.
We ﬁrstly need to collect the ﬁngerprints (RSS vectors)
to generate the training data sets. Due to the unknown direc-
tions of MUs, we assume the beams weights in a uniform
distribution trying to cover more MUs in comparison with the
random distribution in the beginning status. Then, BeamMaP
starts to explore the GPR method to train the collected raw
data arrays, which include the RSSs of LoS and NLoS in the
scenario. Some parameters set up in the ML regression model
are able to be estimated in the training process. Furthermore,
in order to avoid the overﬁtting in the training process, we
follow the K∗-fold cross-validation to partition a sample of
input data sets into complementary subsets, performing one
subset as the training set (the orange blocks in the ﬁgure), and
validating the analysis on the other subset as the testing set (the
blue blocks in the ﬁgure). Multiple rounds of cross-validation
are performed using different partitions, and the validation
results are combined (e.g., averaged) over the rounds to give
an estimate of the model’s predictive performance. Moreover,
we choose the Root-Mean-Square Estimation Error (RMSE) as
the metric, which will be introduced in the experiment section.
We set up a threshold σ to analyze the training process of the
ML model. If the RMSE in the model is larger than σ, it will
back up to the beginning of the ML process, requiring that
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

Start
RMSE>!
Generate beam weights in a 
uniform distribution
Collect uplink RSS as 
fingerprints
Machine learning 
training to do regression  
Set up beams to adapt MUs 
under their requirements
Y
Fingerprints subset as a 
test for prediction
Training sets
Testing sets
N
Figure 2. BeamMap’s positioning system framework (adaptive σ chosen)
the ML process continue the training process. If the RMSE
is less than or equal to σ, the parameters in the model have
been generated successfully in the estimation, and we should
adjust the system to set up beams to cover the mobile users
under their requirements. The detailed model is designed in
the following part.
A. Input Data Sets for Training – Uplink Transmission in 5G
MIMO Model
In this section, we build a wireless network model to locate
Mobile Users (MUs) in a single cellular 5G network system.
We assume one Base Station (BS) with K (K ⩾ M) antennas
to serve M single-antenna MUs in the cell. We consider MUs
simultaneously transmit M symbols, s = (s1, ..., sM)T , the
massive MIMO antennas array in the base station can receive
the sum signal strength vectors r = (r1, ..., rK)T :
r = √ρHs + n
(1)
Here ρ is a constant denoting the transmission power of
each mobile user; H is the K × M channel matrix, with
hk,m = αk,m√qk,m, ∀k = 1, ..., K and m = 1, ..., M as the
transmission channel element for mth mobile user uplink to the
kth antenna in the base station. αk,m and qk,m are respectively
the small-scale and large-scale fading coefﬁcients. The large-
scale fading qk,m (related to shadowing noise variance) is
assumed to be a constant in the urban or suburban environ-
ment, and the small-scale fading αk,m is considered to be
an independent and identically distributed complex Gaussian
distribution (Rayleigh distribution), with αk,m ∼ CN(0, 1).
In addition, n = (n1, ..., nK)T represents the additive white
Gaussian noise vector given by nk ∼ N(0, 1). We list the
basic notations in Table I.
From (1), we are considering the sum signal strength
vectors from all users to antennas. In order to separate the
TABLE I. BASIC NOTATIONS REPRESENTATIVE.
Notation
Corresponding meaning
K, k
the number of antennas in BS, antenna index
M, m
the number of MUs, MU index
ρ
the transmission power of each mobile user
S
the number of training reference MUs
sm
s
the symbol vector transmitted by the mth mobile user,
the sum symbol vectors transmitted by all MUs
rk
r
the received symbol vector at the kth antenna in BS,
the sum signal strength vectors in BS
hk,m
H
fading uplink channel between mth MU and kth antenna ,
the uplink channel matrix between all MUs and BS antennas
αk,m
qk,m
small-scale fading coefﬁcient between mth MU and kth antenna ,
large-scale fading coefﬁcient between mth MU and kth antenna
nk
n
the additive white Gaussian noise vector received in the antenna k
the sum additive white Gaussian noise vectors in the BS
pk,m
pm
RSS of mth MU at kth antenna in BS
uplink RSS vectors of MU in all antennas of BS
n
the Path Loss Exponent (PLE) for LoS or NLoS channel
σs
the shadow fading in dB
epa
eP
the uplink RSS vector for the ath training MU
the training data matrix for S coordinates of MUs chosen
bpm
the uplink RSS vector of the mth testing MU
(bxm, bym)
(exm, eym )
the coordinate of the mth testing user in vector (bx, by)
the coordinate of the mth training user in vector (ex, ey)
[µx]m
[σx]m
the estimation value of the mth testing user bxm-coordinate
the variance for errors of user bxm-coordinate
multiple users RSS in r, we have different schemes to extract
the kth user RSS rk. In order to capture the effective signals,
the pilot signal vector sk should be modulated as mutually
orthogonal during transmission so that it can satisfy sH
i ·sj = 0
(i ̸= j) [14]. Particular modulation techniques, such as OFDM
or orthogonal CDMA employed as the coded schemes in the
transmission systems. Minimum Mean Square Error (MMSE)
being an appropriate solution, we can simply extract each user
signal strength from the combination signals of all MUs and
then distinguish the signals and noise by setting a threshold in
the receiving part.
sHr = √ρH + sHn
(2)
Taken all assumptions into account, we can acquire the single
user’s RSS as pk,m in:
pk,m =
sH
mrk
2 = ρ |hk,m|2 = ρα2
k,m |qk,m|
(3)
Also, we accumulate all MU uplink power vectors from
all antennas in BS: pm = [pdB
1,m, pdB
2,m, ..., pdB
K,m]. Established
on the received power model, we can acquire the power data
sets by converting (3) to the log distance path-loss model but
they are limited in the lower frequency and small cellular
environment [16]. Additionally, through our experiment, we
observe the COST Hata model (COST is a radio propagation
model that extends the urban Hata model to cover a more
elaborate range of frequencies, which is developed by a
European Union Forum for cooperative scientiﬁc research)
also cannot adapt the different higher frequency 5G network
system, even though it is popularly employed in the urban
cellular network [17]. Also, the path loss models currently
employed in the 3GPP 3D model is the ABG model form
but without a frequency dependent parameter and additional
dependencies on base station or terminal height, and only used
in LoS scenario [18]. Therefore, we are considering to employ
the Close-in (CI) free space reference distance Path Loss (PL)
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

model, which is noted multi-frequency and covers the 0.5-100
GHz band [18]. The CI-PL model is also transferred from (3)
to adapt LoS and NLoS realistic scenarios through adding the
free space path loss and optimizing the parameters:
Ploss(fc, d)[dB] = FS(fc, 1m) + 10nlog10( d
1m) + σs
(4)
Here fc is the carrier frequency in Hz, n is the Path Loss
Exponent (PLE) describing the attenuation of a signal passing
through a channel, d is the distance between MU and each
antenna in BS and σs is the shadow fading in dB. The Free
Space Path Loss (FS) in (4) is standardized to a reference
distance of 1 m. FS with frequency fc is given by:
FS(fc, 1m) = 20log10(4πfc
ν
)
(5)
In (5), ν denotes the speed of light. The CI-PL model is
represented as the relationship between propagation path loss
and TX-RX distance based on a straight line drawn on a two-
Dimensional (2D) map, passing through obstructions, and used
in both LoS and NLoS environment. While we are considering
CI-PL in the urban cellular network of 5G system model, the
parameters are measured as n = 2.0, σs = 4.1dB in LoS and
n = 3.0, σs = 6.8dB in NLoS using omnidirectional antennas
[18]. Due to the same transmission power assumed for each
MU, we can use the CI-PL model as the RSS parameters to
acquire the training data sets.
Additionally, for each MU’s uplink transmission, multi-
paths signals can be received by multiple antennas, some of
them are LoS and the others are NLoS responses. So we
consider the LoS probability model in the current 3GPP/ITU
model in the MIMO receiving part when setting up the training
data. It means the uplink response array of MIMO antenna
includes LoS and NLoS components for each MU. From [18],
in terms of Mean Squared Error (MSE) between the LoS
probability from the data and the models, we choose the d1/d2
model as follows:
p(d) = min(d1
d2
, 1)(1 − e− d
d2 ) + e− d
d2
(6)
where d is the 2D distance between MU and antennas in meters
and d1, d2 can be optimized to ﬁt a scenario of parameters (we
choose d1 = 20, d2 = 39 because it acquires minimum MSE
in adapting the urban scenario).
B. Machine Learning Model
Given the RSS vector pm = [pdB
1,m, pdB
2,m, ..., pdB
K,m], our
goal is to ﬁnd the position of the mth MU in the two di-
mensional plane, denoted by (xm, ym). We build the functions
fx(.) and fy(.) which take the uplink RSS vector pm of a given
user m as input and provide the user’s location coordinates
(xm, ym) as output, and try to learn as follows:
xm = fx(pm)
and
ym = fy(pm), ∀xm, ym
(7)
Derived from CI-PL model for the input training model, the
learning functions can be classiﬁed as a nonlinear regression
problem. We follow GPR as a supervised machine learning
approach, with a training phase and a test phase, to learn
fx(pm) and fy(pm). In the training level, we consider RSS
vector pm derived from the CI-PL model in both LoS and
NLoS conditions. Prior to it, we need to acquire the antennas
coordinates, the training users coordinates, and some other
parameters. In the testing phase, the RSS vectors of the testing
users will be chosen distributed according to a Rice distribution
to satisfy the adaptive beamforming pattern, whose location
coordinates are unknown.
C. Training and Beamforming-based Prediction Phase
GPR uses the kernel function to deﬁne the covariance
over the objective functions and uses the observed training
data to deﬁne a likelihood function. Gaussian processes are
parameterized by a mean function µx and covariance function
K(pi, pj), which means fx(.), fy(.) ∼ N(µ, σ2). Usually
the mean matrix function is equal to 0, and the covariance
matrix function, also known as kernel matrix function, is
used to model the correlation between output samples as a
function of the input samples. The kernel matrix function
K(., .) contains k(pi, pj), ∀i, j = 1, ..., M as the entries to
deﬁne the relationship between the RSS of the users. We
usually use a weighted-sum of squared exponential and linear
functions, which servers the stationary component and non-
stationary component respectively, to generate the regression
function:
k(pi, pj) = υ0e− 1
2 A∥pi−pj∥2 + ν1pT
i pj
(8)
Here A = diag(ηk), ∀k = 1, ...K. It will cover the LoS
and NLoS matching with each MU. So the parameters vector
Λ = [υ0, A, υ1] = [υ0, η1..., ηK, υ1] can be estimated from the
training data. In order to learn the target vector Λ, we choose
S coordinates of MUs as the training data matrix eP denoted
eP = [f
p1, f
p2...f
pS] and use the maximum-likelihood method
to predict the (ex, ey)-coordinates. According to the property
of a Gaussian process, we can acquire the learned vector Λ
by employing the maximum-likelihood of the S × 1 training
ex-coordinate vector:
Λ = argmax
Λ
log(p(ex|eP, Λ)) ∼ N(ex; 0, eK)
(9)
The parameter vector follows as GP, which is a non-convex
function as shown in the [7], and can not be solved well in
the training process. Several methods introduced in [19], such
as stochastic gradient descent, mini-batching or momentum,
can help to solve the non-convex problem. Established on the
ML method in the training problem, we decided to employ
stochastic gradient descent method [19] to obtain the optimum
vector Λ in convergence to a local maximum.
In
the
prediction
phase,
the
predictive
distribution
p(bxm|eP, ex, bpm) in terms of posteriori density function, is
applied as estimation of the testing user bxm-coordinate, which
also follows the Gaussian distribution with mean [µx]m and
variance [σx]m, bxm|eP, ex, bpm ∼ N([µx]m, [σx]m):
[µx]m =
S
X
a=1
k(bpm, epa)[eK
−1ex]a,
[σx]m = k(bpm, bpm) −
S
X
a=1
S
X
b=1
k(bpm, epa)[eK
−1]ab · k(epb, bpm)
(10)
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

where the mean [µx]m indicates the estimation value of test
user bxm-coordinate and the variance [σx]m represents the
variance for errors of user bxm-coordinate. bpm denotes the
received power vector of the mth testing MU, and epa denotes
the ath power vector in the received training power matrix eP.
For the computational complexity of GPR, we observe from
(10), [µx]m needs to sum up S operations for eK
−1ex, which
requires O(S2). In total, [µx]m incurs a time complexity of
O(S3).
Subsequently, we choose the locations of test MUs based
on the beamforming pattern. Beams can be optimized to
distribute and spread with the demand users. In the real
scenarios, some hot spot areas need large bandwidth and some
other areas only need small bandwidth to satisfy with few
mobile users. The locations of MUs always follow a Rice dis-
tribution. Therefore, the coordinates of test users in positions
prediction can be chosen from input ﬁngerprints following a
Rice distribution, which will satisfy with the beams distribution
in an adaptive way. BeamMaP being as a prediction assistant, it
will cooperate with a better beamforming scheme to distribute
the bandwidths in efﬁciency. During the experiments, we will
compare with switched beamforming patterns which beams are
distributed uniformly in the system. Furthermore, we employ
the same proposed regression method to estimate the bym-
coordinate of test user. Also, we can acquire the mean [µy]m
and variance [σy]m as the predictive parameters.
III.
PERFORMANCE EVALUATION
In this section, we conduct simulations to evaluate the
performance of BeamMaP as the machine learning method in
estimating the locations of testing MUs. In order to simulate
a realistic environment, we set up the parameters of path loss
model based on the 5G 3GPP/ITU Micro-Urban model [18].
TABLE II. PARAMETERS FOR SIMULATION.
Description
Value
Path loss parameters
(5G 3GPP/ITU Micro-Urban model [18])
n = 2.0, σs = 4.1dB for LoS,
n = 3.0, σs = 6.8dB for NLoS,
d1 = 20, d2 = 39
Modulation Scheme
OFDM (Orthogonal CDMA)
MU transmit power
23 dBm (200 mW)
Minimum SNR for
channel estimation
1 dBm
Number of antennas in BS
64(8×8),100(10×10),144 (12×12)
Maximum number of training ﬁngerprints
90000
Number of testing MUs
100
The space between antennas
0.12, 0.3, 0.48 m
The space between training MUs
1 m
Threshold to control the training process (σ)
[5, 35] m
A. Parameters Set Up
The parameters used in the simulation are shown in Table
II. According to the analysis of different environment in
Section II-A, the path loss parameters n and σs are chosen
for adapting the crowded urban area. The MU transmit power
is chosen as per LTE standards to be 23 dBm [20]. In
practice testing, the minimum SNR required is determined by
the normalized mean squared error of the channel estimates
[18]. For our simulations, we set the minimum required SNR
to 1 dB. Considering that currently the number of MIMO
antennas of the BS can be designed from 64 to 156, we
assume K = 64, 100, 144 antennas uniformly distributed as
a 8 × 8, 10 × 10 and 12 × 12 squares. We assume that
the MIMO antennas are installed at the center of a cellular
network which can distribute the beams in each direction with
the same maximum reach. Figure 3 shows an example of the
deployment of the base station antennas and the surrounding
reference MUs consisting of a squared antennas array with 16
antennas covering x ∈ [5, 30] and y ∈ [10, 70] area (meters
in unit). The ﬁngerprints for MUs are distributed in a grid
covering dimensions x ∈ [50, 130] and y ∈ [20, 140]. We split
the ﬁngerprints into a training part and a testing part, then
follow the K∗-fold cross-validation method (i.e., K∗ = 10) to
do the regression and average the result over several runs.
0
20
40
60
80
100
120
140
160
0
20
40
60
80
100
120
140
160
Y-coordinate[m]
X-coordinate[m]
.
.
.
.
. . . .
. . . .
. . . .
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X Fingerprint
. BS antennas
Figure 3. The deployment example of MIMO antennas (BS antennas) and
reference MUs (Fingerprint)
The coordinates of MUs and antennas are selected as posi-
tive values in the simulation. In order to reduce the interference
between the uplink received signals in the massive MIMO,
the spacing between antennas can be selected from 0.12 to
0.5 m, which is based on the function of the OFDM signal
wavelength [21]. If without considering the inﬂuence of the
other parameters, we assume the space between antennas be
0.5 m to better differentiate the RSS vectors in the simulation.
In addition, we choose S = 90000 as the maximum number
of ﬁngerprints with 1 meter spacing between MUs in a grid
covering about 300 m × 300 m, which covers 95% of LoS
components in the single cellular system. In practice, for
example, we can install a cellular BS with a 12 × 12 square
antennas on the top roof of our engineering building located
in Washington DC of United States. Each antenna equipped
with one transceiver can receive and/or send the signals from
and/or to each MU. The coordinates of references MUs will
be chosen in a grid around the building, the spaces between
MUs are set up as 1 meter. We can use a moving MU in each
chosen locations to send the signals to all the receivers in BS
each time. The computers as a RSS reader in BS will calculate
each RSS vector from the signals of the reference MUs and
accumulate all the uplink RSSs as the training data sets. Due
to lack of hardware support, the RSS vector pm for each MU
in antennas is generated from the CI-PL model in (4) and (5),
which is proved in the Aalborg, Denmark environment [18].
Meanwhile, each antenna in MIMO can receive LoS or
NLoS from the different direction. In order to model the
real-life scenario including LoS and NLoS, the RSS matrix
eP as the ﬁngerprints collected from all antennas follows the
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

LoS and NLoS distribution in (6). We calculate them through
generating a probability function in the simulation. During the
training phase, while we are learning the parameter vector
Λ, we run the training locations on randomly choosing the
start points, so as to avoid the convergence to a bad optimal
solution. We assume the threshold σ ∈ [5, 35] m, which needs
to be feasibly chosen depending on the different training data
sets to ﬁt in the experiment. In the testing phase, we choose
the Rice distribution of 100 testing users from RSS vectors
in ﬁngerprints to efﬁciently steer beams in a ﬂexible way.
The Rice distribution is selected as R ∼ Rice(50, 1) through
experiments because of the maximum coverage of a single cell
network and variance of spacing in 1 m.
B. Performance on Metrics
After RMSE is reaching less than σ, we test the accuracy of
the simulation model in using the linear sampling coordinates,
which are convenient to observe. For example, we use a 12
× 12 antenna array located in x ∈ [40, 46] and y ∈ [100, 106]
area as reference locations. In order to observe the tracking
locations in a ’linear’ status, we initialize to employ a linear
log-function (y = 50logx) to sample the positions of 100
testing mobile users from ﬁngerprints. We can then track
the MUs and compare with their true positions, as shown
in Figure 4. It is simple to ﬁnd the estimated position of
testing users not far from the linear true positions ’line’, where
the interval between them can not exceed 8.5 m. Due to the
limitation of test users and sampling, we are not able to decide
other impact factors for the accuracy of estimation.
0
20
40
60
80
100
X-coordinate [m]
50
100
150
200
250
Y-coordinate [m]
ML Estimation
True Positions
Figure 4. Position estimation in a linear distribution of Testing MUs
Furthermore, we use the Root-Mean-Squared Estimation
Error (RMSE) as the metric to analyze the performance of the
estimation methods. RMSE is formulated as:
RMSE =
sPc
M
m=1(bxm − [µx]m)2 + (bym − [µy]m)2
c
M
(11)
where [µx]m and [µy]m are the estimation of test user’s
coordinates bxm and bym, respectively. c
M is the number of
testing MUs. We limit the analysis to the RMSE metric.
In Figure 5, we are trying to determine the inﬂuence of
training samples for different number of antennas in the base
station. As the antennas are installed in a ﬁxed space, some of
them will receive the LoS signals and others will receive the
NLoS signals. The distribution between LoS and NLoS follows
the probability function of LoS in (6), as assumed previously.
We show 95% conﬁdence intervals from 30 trials for each data
point. As observed from Figure 5, we know when the sampling
in training locations increases, the RMSE keeps decreasing
with ﬁxed antennas size, which means acquiring the higher the
accuracy of estimation. When the sampling is the same, more
LoS signals will be received in the large size antenna array,
which will help to decrease the interference, while fewer NLoS
signals will be identiﬁed as LoS in the receiver. For example,
RMSE in 12×12 antennas is almost half of 8 × 8 in the same
sampling condition. Also, the higher dimension of ﬁngerprints
for training will acquire more accuracy estimation in the terms
of the increase number of antennas.
10
20
30
Number of training samples (x1000)
0
5
10
15
20
25
30
35
RMSE[m]
Antenna 8x8
Antenna 10x10
Antenna 12x12
Figure 5. RMSE vs. number of training samples for different size of
antennas array
In order to know the effect of antenna size in a MIMO
system, we change the spacing between antennas as in Fig-
ure 6. The RMSE for different spacing but the same number
of antennas shows no signiﬁcant change. When the space is
changed from 0.12 m to 0.30 m, the differential in RMSE
for 8 × 8, 10 × 10 and 12 × 12 antennas is 5 m on
average. However, comparing the spacing in 0.12 m and 0.48
m, the RMSE is dramatically decreased, caused by the ability
of identiﬁcation between LoS and NLoS, and the size of
sampling.
We compare the running time performance and RMSE
metric of different machine learning approaches (BeamMaP,
kNN and SVM) in the dynamic environments. The shadowing
noises for LoS and NLoS are set up to change from 1 dB
to 4 dB, which can be regarded as different scenarios in
practice. The same training data sets are generated through CI-
PI model. We run the simulations simultaneously on the three
same workstations (Ubuntu 16.04 LTS system on 3.6GHZ Intel
Core i7-4790 CPU with eight cores). The results are shown in
Table III. In general, with the increase of shadowing noise,
the RMSE (in meters) for all approaches gradually becomes
larger. Compared with kNN and SVM, RMSE for the proposed
BeamMaP is obviously smaller. Although the training time for
kNN is much less than BeamMaP and SVM, the testing time
for our proposed is averaged as 0.35 s which is far less than the
21
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

Figure 6. RMSE vs. different spacing between antennas for different size of
antennas array
others. The testing time is calculated from 100 testing samples
in average.
TABLE III. COMPARISON BETWEEN DIFFERENT APPROACHES.
Shadowing
Noise
BeamMap
kNN
SVM
RMSE[m]
1 dB
3.5
8.5
10.2
2 dB
8.4
13.2
15.5
3 dB
15.6
20.2
20.4
4 dB
22.3
27.4
30.8
Phase
Running time
Training
20.30 hours
8 hours
21 hours
Testing
0.35 s
1.20 s
0.874 s
kNN being as a unsupervised method, is served as posi-
tioning the target MU through collecting and analyzing the
closest k reference neighbors. The time complexity known as
O(KS + kS) is depended on the S cardinality of the training
data set and the K (the number of antennas) dimension of
each sample [11]. Despite SVM is mostly used in the linear
condition, our nonlinear problem needs to be transferred into
the quadratic problem directly, which involves inverting the
kernel matrix. It has complexity on the order of O(S3) same
with our proposed model. The estimation of this method is
based on a subset of the training samples (known as support
vectors). However, these two models can only choose LoS
signals in the RSS vector of training data sets, the NLoS
elements have to be removed and become 0. The imbalance
of the training data sets (no distinguishment between LoS and
NLoS in the vectors) will degrade the performance of kNN and
SVM. The original data sets can inﬂuence the RMSE which
reaches two times larger than recent simulation. For example,
while the shadowing noise is 2 dB, the RMSE for kNN and
SVM will become 25 and 30 m. Therefore, the shortest testing
time spent and smallest RMSE in the simulation will prove
that our proposed model is steadier and better optimized in
the much noisy or highly cluttered multipath scenarios; also
the gap of the training time between them can be shortened in
the future advanced hardware.
Furthermore, even though we choose the testing users from
ﬁngerprints in Rice distribution for the estimation process,
the adaptive beamforming pattern in BS appears not to be
necessary in the machine learning localization. In order to
compare adaptive beamforming with switched beamforming,
we assume the number of antennas as 12 × 12 to maximize
the sampling ratio. During the testing phase, we model the
switched beamforming as a uniform distribution with the same
mean and variance as the Rice distribution in adaptive beam-
forming. In Figure 7, we conclude that adaptive beamforming
or Rice distribution in the regression system plays a better role,
it only can reach the half of RMSE compared with uniform
distribution with the same sampling training index.
10
20
30
Number of training samples (x1000)
0
5
10
15
20
25
RMSE[m]
Adaptive
Switched
Figure 7. RMSE vs. number of samples for different beamforming patterns
More efﬁciency for adaptive beamforming is achieved by
randomly selecting the testing users similar to Monte-Carlo
sampling. The reason is that more testing users are gathered
together in one direction for the adaptive pattern, but testing
users in uniform distribution (switched pattern) are separately
localized, which will accumulate the estimation errors and
lead to the increase of RMSE. In addition, the slow ofﬂine
machine learning process can help to speed up the distribution
of bandwidth in adaptive beamforming after employing the
faster online testing system. The testing process only needs
less than 0.35 s.
IV.
CONCLUSION AND FUTURE WORKS
In this paper, we present a BeamMaP positioning method,
combined with a supervised machine learning approach and
an online adaptive beamforming testing process, to estimate
the position of mobile users. BeamMaP can estimate the
location of the MUs within 5 meters deviation, which is
much better than some conventional methods like GPS and
also is sufﬁcient for beam signals to cover the channels
between MU and BS. Numerical results show the accuracy
of positioning, as determined by the size of sampling, the
dimension of antennas, their quantity and distance, and the
number of received LoS and NLoS signals. In comparison
with kNN and SVM, our proposed machine learning method
is proved more efﬁciency and steadier for positioning in highly
cluttered multipath system. Furthermore, we conclude that the
adaptive beamforming pattern can increase the accuracy and
efﬁciency of position estimation in comparison with switched
beamforming. However, the RSS ﬁngerprinting methods may
fail in changeable environments (e.g., rainy or windy weather)
22
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

due to the long online training time, and more training data
sets in different dimensions should be collected to increase the
adaption of positioning system. Moreover, some deep learning
or hybrid machine learning methods can be explored and make
some improvements in the future research.
REFERENCES
[1]
C. Liu, M. Xu, and S. Subramaniam, “A reconﬁgurable high-
performance optical data center architecture,” in 2016 IEEE Global
Communications Conference (GLOBECOM).
IEEE, 2016, pp. 1–6.
[2]
M. Xu, C. Liu, and S. Subramaniam, “Podca: A passive optical data
center network architecture,” Journal of Optical Communications and
Networking, vol. 10, no. 4, 2018, pp. 409–420.
[3]
M. S. Leeson, “Introductory chapter: The future of mobile commu-
nications,” in The Fifth Generation (5G) of Wireless Communication.
IntechOpen, 2019.
[4]
S. K. Routray, P. Mishra, S. Sarkar, A. Javali, and S. Ramnath, “Com-
munication bandwidth for emerging networks: Trends and prospects,”
arXiv preprint arXiv:1903.04811, 2019.
[5]
F. Boccardi, R. W. Heath, A. Lozano, T. L. Marzetta, and P. Popovski,
“Five disruptive technology directions for 5G,” IEEE Communications
Magazine, vol. 52, no. 2, 2014, pp. 74–80.
[6]
L. Lu, G. Y. Li, A. L. Swindlehurst, A. Ashikhmin, and R. Zhang, “An
overview of massive MIMO: Beneﬁts and challenges,” IEEE journal of
selected topics in signal processing, vol. 8, no. 5, 2014, pp. 742–758.
[7]
S. Kumar, R. M. Hegde, and N. Trigoni, “Gaussian process regression
for ﬁngerprinting based localization,” Ad Hoc Networks, vol. 51, 2016,
pp. 1–10.
[8]
N. Garcia, H. Wymeersch, E. G. Larsson, A. M. Haimovich, and
M. Coulon, “Direct localization for massive MIMO,” IEEE Transactions
on Signal Processing, vol. 65, no. 10, 2017, pp. 2475–2487.
[9]
J. Vieira, E. Leitinger, M. Sarajlic, X. Li, and F. Tufvesson, “Deep
convolutional neural networks for massive MIMO ﬁngerprint-based
positioning,” arXiv preprint arXiv:1708.06235, 2017.
[10]
B. Hofmann-Wellenhof, H. Lichtenegger, and J. Collins, Global posi-
tioning system: theory and practice.
Springer Science & Business
Media, 2012.
[11]
L. M. Ni, Y. Liu, Y. C. Lau, and A. P. Patil, “LANDMARC: indoor
location sensing using active RFID,” Wireless networks, vol. 10, no. 6,
2004, pp. 701–710.
[12]
M. Brunato and R. Battiti, “Statistical learning theory for location
ﬁngerprinting in wireless LANs,” Computer Networks, vol. 47, no. 6,
2005, pp. 825–845.
[13]
H. Wymeersch et al., “5G mm wave downlink vehicular positioning,” in
2018 IEEE Global Communications Conference (GLOBECOM), 2018,
pp. 206–212.
[14]
A. Gorokhov, A. F. Naguib, A. Sutivong, D. A. Gore, and J. Tingfang,
“Pilot signal transmission for an orthogonal frequency division wireless
communication system,” Oct. 4 2016, US Patent 9,461,859.
[15]
E. Ali, M. Ismail, R. Nordin, and N. F. Abdulah, “Beamforming
techniques for massive MIMO systems in 5G: overview, classiﬁcation,
and trends for future research,” Frontiers of Information Technology &
Electronic Engineering, vol. 18, no. 6, 2017, pp. 753–772.
[16]
S. Jung, C. Lee, and D. Han, “Wi-Fi ﬁngerprint-based approaches
following log-distance path loss model for indoor positioning,” in
Intelligent Radio for Future Personal Terminals (IMWS-IRFPT), 2011
IEEE MTT-S International Microwave Workshop Series on.
IEEE,
2011, pp. 1–2.
[17]
M. Hata, “Empirical formula for propagation loss in land mobile radio
services,” IEEE transactions on Vehicular Technology, vol. 29, no. 3,
1980, pp. 317–325.
[18]
K. Haneda et al., “5G 3GPP-like channel models for outdoor urban mi-
crocellular and macrocellular environments,” in Vehicular Technology
Conference (VTC Spring), 2016 IEEE 83rd.
IEEE, 2016, pp. 1–7.
[19]
P. Jain and P. Kar, “Non-convex optimization for machine learning,”
Foundations and Trends® in Machine Learning, vol. 10, no. 3-4, 2017,
pp. 142–336.
[20]
P. Joshi, D. Colombi, B. Thors, L.-E. Larsson, and C. T¨ornevik, “Output
power levels of 4g user equipment and implications on realistic rf emf
exposure assessments,” IEEE Access, vol. 5, 2017, pp. 4545–4550.
[21]
“Cisco
1250
dipole
antenna
spacing,”
2019,
available
online:
https://community.cisco.com/t5/other-wireless-mobility-subjects/specs-
on-distance-between-antennas/td-p/1030478 [retrieved: May, 2019].
23
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-721-4
INTERNET 2019 : The Eleventh International Conference on Evolving Internet

