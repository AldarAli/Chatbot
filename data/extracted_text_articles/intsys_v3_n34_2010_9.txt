Complex Navigation Systems - Some Issues and Solutions
Vladislav Mart¬¥ƒ±nek and Michal ÀáZemliÀácka
Dept. of Software Engineering
Charles University in Prague
Prague, Czech Republic
martinek@ksi.mff.cuni.cz, zemlicka@ksi.mff.cuni.cz
Abstract‚ÄîNavigation is a kind of application widespread
especially in mobile devices. We can Ô¨Ånd complex navigation
systems that combine two or more types of navigation. This
can lead to a complex service which can increase the efÔ¨Åciency
and comfort of user‚Äôs movement. The user and even the path
can be characterized by a large number of variables. This
fact opens a problem of Ô¨Ånding a path that will satisfy
chosen variables. We tried to point out interesting issues
concerning combined navigation. For some of the issues, we
propose possible solutions. The solutions are based either on
solutions from existing products or on our own experience from
the JRGPS project supporting combination of public transport
and walk. The path reliability is one of the important factors
for connection planning. We propose several different points of
view at path reliability under the condition of public transport
network. Using detailed data from the connection provider,
we can see how the characteristic features of public transport
networks involve this path parameter.
Keywords-navigation; complex navigation; pedestrian navi-
gation; public transportation; mobile device; GPS device
I. INTRODUCTION
Path searching applications (navigation systems) can be
built in cars, they can be run on mobile devices to navigate
walkers or even bikers. They can be used for search-
ing connection in timetables of public transport networks.
The usability in human transportation is various.
There are two main kinds of navigation. First, there are
applications, where the movement is depending mostly on
the user itself (walkers, cars, bikers and so on). Second,
there are applications dealing with the scheduled movement
while using different transport services. The border between
scheduled movement and individual movement do not have
to be always strict. We suppose that good navigation system
should be able to combine both the above mentioned ap-
proaches. Furthermore, there can be restrictions on the path
found (reliability, safety, price, usability for people with
limited movement abilities, or given movement speed).
The good navigation should also take into account individual
preferences and limitations of the user in the context of
the planned path.
Complex navigation systems combine several types of
navigation to increase the overall effectiveness and comfort
of users movement. Providing complex path planning leads
to the problems of connection between transport networks.
This paper is based on our experience in the development
of an application for mobile devices that search the shortest
path combining public transport and walking. We worked
with timetables and map base for the city of Prague. This
paper is an extended version of a paper [1].
In the following text, we will outline several problems and
issues connected with developing complex navigation. We
will also propose solutions used in our prototype application.
All the screenshots introduced in the paper are from this
application. Finally, we will summarize advantages and
disadvantages of combined navigation and propose intention
of our future work.
II. STATE OF ART
In the area of pedestrian navigation used in urban location,
there are at least two different approaches. The Ô¨Årst one
is a tourist guide which is able to plan point-to-point path
using walk exclusively. While navigating through the path,
the navigation is able to highlight points of interest along
the path [2]. The second one is a navigation that combines
the walk with other types of transportation suitable for
pedestrians. This application can still serve as a tourist guide,
but the aim is often to serve as a path planning tool for
everyday use.
On the other hand, the navigation systems can be cate-
gorized according to their dependency on a connection to
a mobile operator. The off-line navigation system is able
to work in areas where the connection is not available. For
example, it can happen in a subway train going between two
neighbor stations. The path plan is computed by the mobile
device itself in off-line navigation. The on-line navigations
system can have more actual data than the off-line ones.
The cost of data transfers from the operator can increase
the cost of on-line navigation.
The complex navigation systems, that combine several
types of transportation of pedestrians, are often implemented
as on-line services. For example, ‚ÄúGoogle Maps Naviga-
tion‚Äù [3] or ‚ÄúNavitime‚Äù [4] are a kind of on-line services.
On the other hand, ‚ÄúNokia Maps‚Äù [5] provides an off-
line navigation for pedestrians, but the complexity is so far
limited for a combination of car and walk. The situation is
similar in ‚ÄúTomTom‚Äù [6] , ‚ÄúNavigon‚Äù [7] , ‚ÄúMio‚Äù [8].
273
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

III. ISSUES
When creating complex navigation, there are several prob-
lems that should be challenged to reach certain quality of
resulting application.
A. Navigation in a Scheduled Network
The services in a public transport (scheduled) network
should follow a valid timetable. The separate parts of path
in this network are therefore predetermined in space and
time. These parts can have a Ô¨Åxed starting moment or they
can start periodically.
Path planning in a scheduled network has one important
property: The plan of the entire path can vary in space
according to the starting time value. The consequence is
that the path plan may differ signiÔ¨Åcantly for two relatively
close moments. See Figure 1.
t
:
s
s

:
s

*
s

D. Path Reliability
Beside the path length, the reliability of path found might
be the important parameter which involves usability of
the path. To determine the reliability of public transport
services, we may require an additional data from the carrier.
On the other hand, the reliability of the connection can be
viewed as the frequency of services at the particular section.
Some Ô¨Åxed sections can be repeated in a relatively short
periods of time. This behavior is similar to the behavior
of free sections. For example, tube in the rush hour when
the arrivals are relatively frequent. If the user misses such
planned service, it does not have to be necessary to re-plan
the entire path.
An interesting challenge might be planning a path, where
the user may miss some of the services or even all of them.
Respectively, missing a service will lead to a minimal delay
in following path sections.
When dealing with unreliable network, one of the ap-
proaches is to use approximative methods of Ô¨Ånding optimal
path. Two such methods are compared in [11].
Response to Failures in the Network: The failures of
certain parts of network can occur in both public trans-
port network and network of walk paths. Downtime can
be known in advance and then it should be included in
the update.
The failure may occur suddenly and then the user should
have a possibility to change planning options to bypass
actually unreachable part of network.
E. Appropriate Map Data
One of the major problems is the unavailability of ap-
propriate map data for the planning of pedestrian paths.
Most of the existing map data is not sufÔ¨Åciently detailed to
pedestrians. First, the map base should include actual data
for pedestrians ‚Äì sidewalks, crosswalks, pedestrian zones,
footpaths and other routes applicable to pedestrians. Spatial
data should be in vector format, which can be easily used
to create search structures.
1) Crosswalks: The map data should contain details of
the crosswalks, or crosswalks with the signaling device
where it is necessary to calculate the speciÔ¨Åc interval for
the path section. The crosswalks are essential for legal
crossing of the roads. In most countries, pedestrians are not
allowed to cross the road in places close to the crosswalks.
The situation is more complicated when the sidewalk is bor-
dered by a railing or other such barrier. To determine where
the crossing of the road is acceptable outside the crosswalk
is a separate problem. However, if the map data are not
detailed enough, we cannot solve this problem anyway.
2) Spatial Data: The map data should contain infor-
mation about elevation. Due to the variable dispositions
of walkers the map data should contain information about
various barriers. It is particularly important to distinguish
the high thresholds of sidewalks or stairs, because for some
user, it is an obstacle, for some users it is not.
3) Grade-separated Crossings: Important information is
the grade-separated crossings like bridges and subways. In
the cases, where it is not possible to move freely between
the levels of path, the incorrectly labeled crossings could
lead to mistakes in navigation. The various levels of path
need to be distinguished also when entering the starting
point.
This information is relevant for the navigation in public
transport itself. The path between refuges of one stop is often
realized by a special crossing, like underpass or stairway. It
is necessary to know the properties of the path connecting
these refuges to determine correctly the length of the transfer
within the stop.
F. Combining Pedestrian and Public Transport Networks
Another problem is the combination of data for pedes-
trians and public transport network. Combination must be
done in both directions.
1) Street Refuges in the Map: It is necessary to determine
the nodes in the pedestrian network from where the walkers
can get in the public transport services. The ideal situation
is when the map data contains the street refuges connected
to the public trafÔ¨Åc network. If the refuges are not in map
data, it is necessary to add the node representing refuge
including the path connecting the refuge with the surround-
ing pedestrian network. The connection of the refuge into
the pedestrian network is also important for the search of
transfers between public trafÔ¨Åc services.
2) Mapping the Stops in Public Transport Network on
the Street Refuges: The network of public transport is
typically created on the basis of routes of individual lines.
Each stop in the itinerary of the line is identiÔ¨Åed by the name
of the refuge where the service stops. If there are several
refuges of the same name, there is a problem of how to
create a unique mapping between the names of refuges in
the timetable and the refuges in the map. This problem
does not occur if the street refuges from timetables are
identiÔ¨Åed by geographical coordinates. The carrier should
know the position of refuges, where its services stop.
G. Searching a Network of Public Transport
Paths search in the network of public transport is com-
plicated by the fact that the value of each edge depends on
the current time. Precise value of the edge is unknown until
it is planned in some path.
1) Unreliable Transfers: If a transfer is realized within
a
single
refuge,
the
following
problem
may
occur.
The timetable speciÔ¨Åes only the expected time of departure
from the refuge. In real trafÔ¨Åc, there are deviations from
the schedule. It has consequences especially for the line
changing: If two services are scheduled at the same time at
the same station, it is not possible to guarantee which service
275
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

arrives Ô¨Årst in the real situation. If we consider the transfer
between these services at the same minute, the transfer from
the Ô¨Årst service to the second one is possible, but the transfer
in the opposite direction cannot be guaranteed. The timetable
does not determine the order of arrival of the services.
2) Length of Platform: Until now, we were considering
stop refuge as a point. However, the length of platform can
be noticeable. If the passenger has to walk across a long
platform, it can lead into several minutes of delay against
the planned path.
It is appropriate to walk across the entire platform only
in the case, when the passenger is getting in the service on
the opposite side than he is getting off. By walking across
the platform into the appropriate position, the passenger can
spare some time. This can lead into a faster transfer and
the passenger can catch earlier following connection.
The problem of passenger position at the platform makes
sense only if the passenger arrives at the platform just in time
of service departure. If the passenger comes earlier, then he
is able to cross the platform into the appropriate position
during his waiting for the service arrival. Likewise, if
the passenger will be waiting for the following connection in
the planned path, then the time needed to cross the platform
after getting off the previous service could be subtracted
from the waiting time.
IV. SOME SOLUTIONS
When implementing a prototype of a complex navigation
for pedestrians, we applied some solutions to problems
mentioned in section III.
A. Linking the network of walk paths and public transport
network
In order to move freely between search network of
the public transport and search network of walk paths, it
is necessary to connect both networks in certain nodes.
The connecting nodes should be the street refuges, where
the passengers are getting in and off the services of public
transport.
1) Street Refuges in the Map: The street refuges were
missing in the map base available to us. We get the posi-
tions of street refuges from other source. It was therefore
necessary to correct the coordinates of refuges and it was
necessary to connect the refuges into existing network of
walk paths.
2) Mapping Stops in the Network of Public Transport to
the Street Refuges: In our case, we did not have mapping
of the street refuges of public transport to the places in map
base. Nodes in the network of public transport are identiÔ¨Åed
only by the stop names. For each stop, we had several
refuges, representing different places in the map base. It was
therefore necessary to distinguish the stops in the network
of public transport, according to a service of public transport
that is stopping at the given street refuge.
It was not possible to separate various street refuges of one
stop in the public transport network. On the basis of practical
experience, we know that the lines of public transport stop
at different refuges. To be able to perform the mapping,
we had to manually record a set of services that passes
the given street refuge. So, we have assigned a line and
direction to each refuge. However, this was not enough for
unique mapping.
More complex situations may appear if one line is going
through more refuges of one stop. We had to add a lookout
for one stop forward and one stop backward on the line
route. Still more complicated situations may appear where
this approach will not work. The mapping created by
matching refuges to stops requires maintenance in the case
when the route of some line is changed. It is preferred
that positions of the street refuges are identiÔ¨Åed directly in
the data from the carrier.
B. Searching a Network of Walk Paths
On the basis of map data, we had available, we created
a search graph for the network of walk paths. The vertices
of this graph are crossing or closing of some polyline.
SpeciÔ¨Åc nodes of this graph are the street refuges, which
hold the identiÔ¨Åcation of corresponding stop in the public
transport network. So it is possible to move continuously
from the walk paths search network to the search network
of public transport.
Each polyline is represented by two oriented edges being
to each other in opposite directions. The value of the edges
determines the duration of walking, which usually depends
on the walking speed and segment length. The problem
occurs in sections with superelevation or some kind of
barrier and at the crossings. The edge value may vary
depending on the direction and can be even dynamic. In
these cases, the details from map base are very important,
because they determine the duration of walking in the given
section. The duration should be parameterized by the actual
dispositions of the user.
1) Network Reduction: When converting vector data to
a network, it is possible to make a simple reduction of
the vertices, where there is no branching of the graph.
2) Entering
Position
on
the
Map:
When
entering
the starting and target position on the map, it is necessary
to determine precisely the walk path that is closest to
the user. We do not know the path from general position
to the closest walk path, so we approximate it by a direct
line. The selection of the closest walk path is given up to
the user (see Figure 2). This choice can be complicated,
and if the automatic approximation fails, the user can make
a correction immediately according to his knowledge of
the current location. In the worst case, the user will rely
on the automatic choice.
276
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 2.
Starting position selection
The cross marks the selected starting position. The nearby
walk paths are highlighted. The chosen section of walk
path is the one closest to the starting position.
C. Searching a Network of Public Transport
We have created the search graph for the network of public
transport from available timetables. Vertices represent stop
refuges, each refuge has its position on the map from where
the user can continue in walk path.
Each edge represents a possibility to take a service to
the next stop on the route of the line. The edges are
characterized by a value, which determines the duration of
travelling to the neighboring refuge. But if the user should
get on a service in the planned path, then it is necessary
to add a waiting time to the value of currently planned
path. This time is derived from the current time (when
the user gets to the stop according to the path plan) and
valid timetable of the service he is waiting for.
Other approach could be representing every departure of
a service as a vertex. This approach is robust for complex
scenarios but not necessary in our case. Moreover this ap-
proach shows signiÔ¨Åcantly lower performance as described
in [12].
Graph Reduction: An interesting method of rail net-
work reduction is described in [13]. Under certain condi-
tions, it can be used to reduce the network of city public
transport and so speed up the planning signiÔ¨Åcantly. Fortu-
nately, it is possible to solve the task in acceptable time [14].
Such reduction is generally an NP-hard problem [15]. Using
approach based on this reduction the computational com-
plexity will decrease to the level, where the path planning
itself can be computed on portable devices in reasonable
time [16].
The timetables determines the dynamic part of the graph.
The representation of timetables should deal with the irreg-
ularities of a real world. One of the interesting approaches
is described in [17].
Unreliable Transfers: If the planned path includes
a transfer inside one refuge between two lines, which are
leaving in the same minute, we are not able to ensure
the order of services in most cases. We handle the situation
by searching the departure time of the following service from
the next minute from actual time. So, it cannot happen that
we plan a transfer, which the user cannot make.
D. Path Planning in Combined Network
If we consider the task in general case, we are given
the starting and the target position on the map and we want
to Ô¨Ånd a path to connect them. When planning, we start
planning of walking routes from the starting position to all
public transport stops in a particular area. Similarly, we plan
walking routes for the target position. Walk paths should
be searched in the opposite direction if, for example, super
elevation has to be taken into account.
The general task of Ô¨Ånding combined path is reduced
to the task of planning connection in the public transport
network. When planning transfer between services, it is still
needed to use the walking graph to determine the transfer
duration.
Searching Walk Path to the Stop: When searching for
walking path from the starting position, all stop refuges
in a given area are relevant to us. The passenger can use
public transport service after reaching the refuge. The user
can adjust the size of area, according to the distance he is
willing to walk. Due to this limitation it is not necessary to
search the entire network of walk paths, but only a relatively
small part.
Due to the breadth Ô¨Årst search, we are able to Ô¨Ånd all paths
from the starting position to all street refuges in the area at
once. The following search is made in the network of public
transport, where the starting positions are the street refuges
reached by walk, and their initial estimation of shortest path
length is duration of the walk from the starting point.
Precomputation of Transfers: To avoid searching over
both networks simultaneously, we performed precomputa-
tion of walk transfers and added special edges representing
transfers into the network of public transport. As a result,
we do not have to leave the search graph for public trans-
portation during the search, so the overall branching of
computation is decreased.
As it is a precomputation, it is necessary to specify
the maximum length of walk transfer between services while
creating search graphs. If we do not limit the length of
walk transfer, it would lead to unbearable increment of
branching of public transport search graph. It is unreliable
for both computational and memory demands. On the other
hand, if we choose the limit of walk transfers too strict,
the path planning possibilities would be reduced. Some of
the transfers would not get into the search graph due to
precomputation. The limit of walk transfer is determined
during the compilation of data, mostly based on experience
and tests.
277
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
 
Figure 3.
Precomputed Transfers Limit
The number of precomputed edges in dependency of
the limit of maximum walk transfer distance.
The Figure 3 shows the growth of the number of pre-
computed edges with the increasing limit of walk transfers.
For higher values, the number of edges in search network
rises more than twice after adding the precomputed transfer
edges.
Searching Connection in Public Transport: Due to pre-
vious steps, the planning of path is reduced into the search-
ing path in the enriched graph of public transport. A speciÔ¨Åc
part of this search is that in addition to previously found
paths it is necessary to remember the current time. The wait-
ing time for a service changing is determined according to
the current time and timetable that is currently valid. On
the basis of the current time other parameters of the dynamic
network could be determined.
The user parameters and preferences should be taken into
account when planning the path. In particular, the maximum
number of transfers, the maximum length of walk section
(the user is willing to walk continuously only for a certain
distance), walk speed and more.
E. User Preferences
Users may have very different movement dispositions.
This can signiÔ¨Åcantly affect planning of the path. We tried
to take at least basic user parameters into account.
1) Walk Speed: All walk edges in search graphs are
valued by the duration rather than length. Except special
edges, this value is a walking time. The walking time
is determined by the length of walk section, which is
represented by the edge, and the default walking speed,
for example, 5km/h. The appropriate correction of length
of the walk section is performed only if the user changes
the default walking speed.
Special edges are distinguished by additional indication
of the character of the section, which is represented by
the given edge. The value of special edges is not affected
by walking speed.
Figure 4.
User DeÔ¨Åned Starting Position
The user deÔ¨Åned position is connected to the search
network. The connection planning mechanism starts from
all the assigned starting positions simultaneously counting
in the initial path length estimation.
2) The Maximum Length of Continuous Walking Section:
This parameter is added especially for precomputation of
walking transfers, which are theoretically limiting possibil-
ities of walk transfer. The parameter will lose effect if it is
set to a value higher than the limit of precomputed walk
transfers. At the same time, this parameter limits the size
of the area for searching walk paths to the closest street
refuges.
F. User Places
In everyday use of our navigation, some set of places will
be used frequently as starting or target points of path search.
These places can represent home, work, school, etc. In these
cases, most users already know the walking path, and know
the time that it takes to the stops in certain area. Therefore,
we have introduced a possibility to predeÔ¨Åne these places,
including duration of walk paths to the stops. PredeÔ¨Åned
positions reduce the time needed for user input and increase
user comfort of the application.
G. Reliability of the Network
A sudden reduction of the transport network may occur
during the travel, for example, due to a technical fault of
the route or vehicle. In this case, the current path plan
may be irrelevant and needs to be recomputed according
to the new situation.
1) Excluding Line: In our application, we allow the user
to react to a situation similar to the exclusion of a particular
line, which is affected by the failure. Any number of lines
can be excluded from the search. After that, the path will
be planned using other routes.
2) Excluding Section: Failure of a part of the network
can affect both public transport and walk paths network.
In both cases, it is necessary to allow the user to identify
the affected part of the network and reschedule path plans
another way. This action may require experienced user, and
we do not solve it in our application.
278
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

V. RELIABILITY OF THE CONNECTION IN PUBLIC
TRANSPORT NETWORK
In this section, we will consider the reliability of the con-
nection in public transport network as a probability that
the service will not be delayed. With increasing value of
the delay, the reliability will decrease.
The reliability of the connection found can be one of
the user requirements on the path plan. But it can also be
an additional information for planning the robust connection.
For example, if we plan the path using not the fastest but
reliable services it could be better than planning a slightly
faster path using unreliable services. It is probable that
the fast but unreliable path will fail, and the reliable path
will be faster in the real situation.
The public transport service provider has often detailed in-
formation about the real movement of the vehicles. The dif-
ferences between schedule and real situation are important
for setting the path reliability.
A. Real-time Information about the Delay
The ideal condition for planning the path to minimize
the delay is to know the real position of the services. In that
case, the path plan does not have to be based on the schedule,
but can be directly assembled according to the actual situ-
ation in public transport network. The complication is that
the situation can change during the realization of the path. It
would be necessary to recompute the path plan dynamically
in order to reÔ¨Çect the actual situation.
This solution puts high requirements on connection be-
tween public transport services provider and target appli-
cation. It also requires a higher computation capacity to
manage the dynamic path recomputation.
B. Delay Dependency on a Daytime
The delay of the service can be caused by a periodically
repeated event, for example, morning trafÔ¨Åc jams. To detect
these events, it is necessary to analyze the detailed data from
the public transport network provider in a certain time range.
Based on the analysis, the prediction of the delays can be
propagated into the path planning mechanism. This analysis
can be useful for the public transport provider as well.
The Figure 5 shows values of delay measured between
two check points in public transport network for a single line
in a three different days of week. The delays are measured
according to time of a day. Negative values indicates that
the delay is decreased in given pass of the section.
Furthermore, if we consider the path reliability as a fre-
quency of services, we can recognize the dependency on
the day time. The frequency of services is derived from
the schedule, so it apparently has a periodical character.
C. Delay Dependency on a Path Section
There is a question on where to count the delay prediction.
It can be count for every combination of a stop refuge,
05:00
06:00
06:41
07:09
07:33
07:57
08:20
08:46
09:12
09:41
09:56
10:21
10:52
11:21
11:52
12:21
12:51
13:21
13:54
14:21
14:45
15:09
15:35
15:57
16:13
16:37
17:02
17:25
17:49
18:14
18:41
19:02
19:31
20:01
20:37
21:22
22:00
23:00
00:00
-200
-100
0
100
200
300
400
500
600
700
Mo
Tu
We
Figure 5.
Section Delay for Various Days
Vertical axis shows the time of a day, horizontal axis
shows the value of section delay in seconds.
service, and time of a day separately. This will lead to a large
set of data. We can use the results of network reduction
described in [16].
The principles of network reduction come from the similar
279
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

behavior of several services in certain path section. This
corresponds to the delay prediction. It is probable that
the services running in a certain section will have similar
results on the delay prediction. The events causing the delay
would affect all the services same way in the certain section.
This could reduce the problem to setting the delay prediction
for whole path section.
Let us have a certain delay predicted for the given section
in a given time of a day. It means that if the service arrives
the section with some delay, it is probable that the value
of the delay of a service after leaving the section will be
increased by the value predicted for the section.
The Figure 6 shows values of delay measured between
two check points in public transport network for three
different lines.
It can be seen that in the early morning and late in
the night, the delays are minimal. During the morning and
in the afternoon the delays increase. The character of delay
shows some similarities during the day among the services
in the given section.
D. The View of Public Transport Service Provider and
the Passenger
The public service provider often watches every service
instance separately. That means that the delays are counted
in absolute value. In contrary, the passenger does not care
about the certain instance of a service. He counts the delay
of a service against the schedule.
For example, if the delay of some service is higher than
the interval between two following services of the same
designation, the passenger will count the delay against
the previous scheduled service. In contrary for the service
provider, the delay will be counted against the real scheduled
instance of given service.
This situation can lead into misinformation of a passenger,
which can think that the service arrives even sooner that it
is scheduled. Nevertheless, the travel time will be increased
in consequence of the delay.
VI. USE CASES
A. Path Plan Dependency on Starting Time
The following example of a path plan shows two paths
between the same places. The only difference on the input
of planning is the starting time. The Ô¨Årst path starts only
one single minute earlier. This situation shows, how critical
is the current time and reliability of schedule of public
transport services for the resulting path plan. See Figure 1.
In the case of failure in the network, the situation will be
similar. The new recomputed path will have a signiÔ¨Åcantly
different plan in comparison with the original path plan
leading through the unavailable part of network.
05:00
05:40
06:16
06:41
07:00
07:16
07:32
07:50
08:04
08:20
08:36
08:52
09:11
09:31
09:43
09:56
10:11
10:32
10:51
11:11
11:31
11:51
12:13
12:31
12:52
13:11
13:31
13:51
14:11
14:29
14:45
15:03
15:17
15:33
15:49
16:05
16:21
16:37
17:01
17:17
17:33
17:50
18:06
18:22
18:31
18:52
19:01
19:21
19:41
20:01
20:22
20:52
21:22
21:45
22:20
23:02
23:40
-150
-100
-50
0
50
100
150
200
250
300
line no.12
line no. 20
line no. 22
Figure 6.
Section Delay for Various Services
Vertical axis shows the time of a day, horizontal axis
shows the value of section delay in seconds.
B. Example of Advantageous Walk Transfer
BeneÔ¨Åts of combination of walk paths with the public
transport will appear in situations where it is better to walk
to a distant stop concerning the overall length of path.
280
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 7.
Advantageous Walk Transfer
For overall path length, it is advantageous to consider
the possibilities of travelling from all stops in certain area.
Sometimes the long initial walk section could lead to
a shorter path, especially in town areas separated by river
or other obstacles.
The Figure 7 shows initial walk segment of path plan leading
from the starting position to a remote stop.
VII. PRACTICAL ISSUES
When implementing real navigation system, the develop-
ers may face to many issues. Let us mention some of them.
A. User Interface
A basic interface usable for most people can be described
as graphic screen with maps and menu where users may
use pointing device (touch screen, mouse, or joystick) and
occasionally also enter some textual input. But what can we
do if our users are unable to look at the map and follow
the displayed hints?
One can propose voice navigation using hands-free. It is
used in car navigation system, so it is a proven technology.
For people able to watch the trafÔ¨Åc well, it is usable to listen
to the navigation system. When the visibility is worse, it
can be useful (and for pedestrian moving in dark or fog or
being blind it is quite common to behave so) to listen to
the surrounding sounds very carefully. Even in the day, it
can be important to know that some car is getting closer
from behind. So, we must be very careful in using voice
navigation. At least, the user must be able to state when
it is possible to listen to the navigation and when to other
sources.
B. Data Precision
Most cars behave similarly and can use most of the paths
in the same way. The problems may arose by large or very
heavy vehicles. This issue can be solved when they occur (it
is not possible to go through, let us go around) or in advance
by extending the system by some additional information.
Most limitations of the path are somehow indicated by
special signs. The vehicles are divided into classes according
to its characteristics. The characteristics of the class must
satisfy the limitation of the selected path.
Also pedestrians may have different characteristics and
movement limitations. Some of them cannot see. Others
use wheelchair. Others have baby-coach. Others simply have
problems with using stairs or very steep roads.
So, the limitations for pedestrian navigation may be binary
(wheelchair are not able to go upstairs), sometimes it is not
so strict and should be solved in a broader context (is it
sometimes better to elevate the baby-coach a few stairs than
go around for several minutes). Similarly, with baby-coach
it is usually possible to use high-Ô¨Çoor bus but it is less
comfortable than going by (getting in and out) a low-Ô¨Çoor
vehicle. Then the hint must take into account how big time
and price penalty the user is willing to pay for restricting
himself to low-Ô¨Çoor vehicle. The users must be able to
specify their quite complex preferences and the system must
be able to evaluate more possible paths according different
restrictions.
Support for wheelchairs and baby-coaches require more
precise data than necessary for general users. It must be
ensured that the way is wide enough and smooth enough to
be used by the users. The data have to contain such details
like, for example, the height of the sidewalk above the road
if we want to navigate user through a crosswalk.
C. Data Cleansing
A question arise how to keep the data with all the de-
tailed information actual. There are many subjects that can
change the path properties. Some of the subjects announces
the changes, so the data provider can propagate the change
into the actual data set.
There is an option to keep the data up to date and
furthermore to make the data more precise. We expect
the navigation is running on a mobile device equipped
with GPS receiver. Then it is technically possible to collect
the real data as the user is moving along the path found
by the navigation. The problem is that the user position is
a kind of private information.
The user himself should directly decide if he wants to
record his position while walking or not. The recorded data
could be used locally. The application can make the path
planning more accurate if the same path is overtaken re-
peatedly. The user himself should directly decide if he wants
to share this recorded data with other users and/or the data
provider.
The data collected by volunteers represent the real move-
ment of certain types of users. This opens the whole area on
how to utilize this data and how to verify their authenticity.
This comes to another thought. The data provider does not
have to be only a central authority. The collected data can
be shared peer-to-peer by users itself. For example, the Ô¨Årst
281
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

user that encounters an unexpected obstacle in the path can
propagate it to the others. Then the navigations of other users
can adapt the path plan to this obstacle. The problem how
to verify the authenticity of an information about obstacle
arises again.
D. Data Timeliness
According to our experience, the original data from
their owners are changing only rarely ‚Äì correspondingly to
the data owners‚Äô needs. The proper service of the navigation
system requires data to be always up-to-date.
Another issue is that the users update their local copies of
the navigation data only time to time. It is therefore required
to mark the data with validity intervals (sometimes it is, for
example, known how long a diversion will be valid).
Moreover, it can be necessary to adapt to changes faster
than they arrive from the data owners ‚Äì a data update
mechanism. It is possible to make some updates using data
measured by system maintenance team. Such solution has
some limitations and brings additional costs. On the other
hand usability of such system is then higher.
E. Data Sources
When creating complex service, the data set could come
from several different data sources. We have described
the problems of combining the data for the search procedures
and what kind of data can be needed for the Ô¨Ånal application.
It is probable that the data are owned and/or managed by
different authorities.
Several problems arises. First, the distributing responsi-
bility for keeping the data updated. Second, the ownership
of the data created by combining different search networks
or the ownership of the changes in available data.
The availability of data is not given only by technical
issues, but can also depend on the willingness of authorities
managing and/or owning the data.
The usability of the Ô¨Ånal application depends on available
data and on the ability to maintain the data. When con-
cerning multiple different data sources and entities, which
provide the data, a service-orientd architecture can be an
advantageous solution. At least it will be advantageous for
the part of application handling the data set preparation.
VIII. SYSTEM STRUCTURE
When creating complex navigation system, it is necessary
to handle a large amount of data from various sources.
Several tasks can be done repeatedly (for example, when
preparing updates of navigation data.) It is advantageous to
separate the task into several independent processes.
Reasonable complex navigation systems would share at
least some of the requirements and can have similar struc-
ture.
A. System Requirements
It could be advantageous (depending on the business
model) to equip the system with both on-line and off-line
access. The system should therefore have on-line access
point, client software and data distribution subsystem.
Usually there are more sources (owners) of the needed
data. We would need data integration.
The data from original sources may be distributed once
upon a time. The system is expected to have the latest
data possible. There must be an opportunity to incorporate
changes in the environment that happen between the source
data updates. A tight cooperation with trafÔ¨Åc control centers
can be an advantage.
The system should cover at least these parts:
‚Ä¢ import data from their owners,
‚Ä¢ data synchronization/integration,
‚Ä¢ data management/maintenance (including information
on changes),
‚Ä¢ data modiÔ¨Åcation to match navigation system needs,
‚Ä¢ on-line navigation service,
‚Ä¢ data distribution,
‚Ä¢ client software for off-line navigation,
‚Ä¢ interface for collection of data changes.
Import
?
Data from various sources
?
Data integration
?
Integrated data
?
Navigation data creation, pre-computation
?
Navigation data
?
Data distribution
Figure 8.
SimpliÔ¨Åed system structure
282
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

map and timetable owners
?
Import
?
A
g
operator
Imported data
?
other cooperating institutions and users
?
Retrieving, validation,
and transformation
of irregular data
?
A
g
operator
Primary data integration
A
g
operator
?
Update suggestions
?
Integrated primary data
-
?
Validation, integration, mapping
A
g
operator
?
Integration of trusted and current data
@
@
R
Irregularities/updates

?
Complete spatial a timetable data
@
@
R
Navigation data creation
@
@
R
-
A
g
operator
Navigation data

9
XXXXXXXX
z
Data distribution
?
off-line systems data updates
On-line navigation
6
?
on-line users
Figure 9.
Navigation system architecture overview
B. Necessary Parts
Considering overall design, there are parts necessary
to ensure certain quality of provided navigation service.
The Figure 8 shows the basic sequence of processes and
data stores. The result of this sequence is a navigation
service provided on-line or data sets for distribution to off-
line clients.
The on-line service can take advantage from access to
the actual data updates. So, it is possible to offer temporary
or unveriÔ¨Åed data updates directly to the user. The Figure 9
shows the basic solution including the update mechanism.
C. Update Sources
One of the problematic parts is the creation of data
updates. The suggestion for the updates can come from
different sources. In the case of an unreliable source of
suggestion, the updated data should be veriÔ¨Åed before
propagating to the end user. The other option is to mark
the unveriÔ¨Åed data and leave the decision to the end user.
IX. FUTURE PLANS
A. Multicriterial Path Search
So far, we discussed only Ô¨Ånding the time shortest path
with some restrictive conditions. Requirements on the Ô¨Ånal
path plan may vary and may not always be strict conditions.
To be able to take into account various preferences it will be
necessary to perform multicriterial search on a combination
of networks. One of the promising approach, is to Ô¨Ånd
Pareto-optimal solution for multicriterial path search, which
is studied for railway networks in [18].
283
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

A computational complexity may exceed the possibilities
of portable devices. It is therefore appropriate in the context
of this approach to consider a different approach to the over-
all solution.
1) Reliability of the Path Found: One of the characteristic
features of planning in public transport is the fact that
the timetables are only a prescription for service scheduling.
In real cases, the services can be delayed or cancelled. In
the case, some of this situation is frequent, we can count
on a certain probability that the service comes on time or
will have a certain delay. If we know these probabilities,
we can take the reliability of the connection into account
when planning the path. Alternatively, if the user requires
a reliable path, we can adjust the planning to handle the most
probable delays.
Moreover, the following situation may arise. A service
with less frequent intervals can occur in the path. Missing
this service would mean a serious time loss for the user.
In this case, it is appropriate to plan the route so that
even in bad trafÔ¨Åc conditions with high probable delays, it
would be possible to guarantee a high probability of catching
the critical service.
2) Points of Interest: Like in the case of ordinary tourist
navigation, we should also be able to add points of interest.
So the route plan could be adapted to the requirement to
visit a point of interest or a category of points of interest,
which is located closest to the direction of the planned path.
These ideas are based on the assumption of multicriterial
path planning.
X. CONCLUSION
The combination of different types of navigation can bring
advantages as well as disadvantages. Moreover, the com-
bination of different networks can bring us into speciÔ¨Åc
situations.
A. Advantages of Combination of Two Different Types of
Navigation
1) Path EfÔ¨Åciency: Combining the two networks gives
us much more scheduling options than using only one
type of navigation. Moreover, for walk sections we have
far more information than if we use only the navigation
in public transport. The resulting path plan does not have
to estimate the transfers‚Äô duration, but is more accurate,
because the transfer path is known. This allows us to plan
more efÔ¨Åcient and more reliable paths.
2) Environmental Aspect: We are trying to offer comfort-
able and accurate planning in the city using public transport
to a wide range of users. This way we are increasing
the comfort of the use of public transport and the level of
transport-related services. The more users will prefer public
transport over less ecological alternatives, the smaller will
be the impact of urban transport on the environment.
B. Disadvantages of Combination of Two Different Types of
Navigation
1) Different Planning: We try to combine two very differ-
ent networks. Each of them has different rules and heuristics,
which can be successfully applied in one network, but may
not be valid in the other one. It is therefore necessary to
separate the search. On the other hand, the whole travel plan
should meet the common criteria. To achieve this, it is often
necessary to use a different mechanism in each network.
2) Different Sources of Data: For a network of public
transport we need data of timetables and data of the positions
of stops refuges. Walk network needs map data, including
details needed for navigation of walkers. The application
needs data from two different entities. In the case of com-
mercial deployment of applications, the question ‚Äùhow to
split the proÔ¨Åt?‚Äù arises.
C. Available Data
While developing our application, we had data for the city
of Prague available. Map data provided to us ‚Äúthe Czech
OfÔ¨Åce for Surveying and Mapping‚Äù. Although the map data
were not initially designed for the operation of navigation,
we managed to adapt mechanisms working with them, so
that our application was able to bring reasonable results.
The available data have shown that the operation of the ap-
plication is not limited by memory or computing capabilities
of portable devices. In addition, a limited connectivity is
sufÔ¨Åcient to keep the data updated. For most European cities,
the search parameters should be comparable, excluding
much larger cities like Paris, London, or Moscow.
Later on, we had data of the real movement of public
transport services in the city of Prague. The comparison of
real positions of services against the schedule brings us new
pieces of knowledge and also new questions.
D. Real Life Consequences
Using the JRGPS application, we learned that it can be
reasonable to change slightly our habits: In some cases, it is
better to go on foot instead of waiting for public transport
and in some other cases, it can be advantageous to change
entry or leaving stop.
ACKNOWLEDGMENT
This paper was partially supported by the Czech Science
Foundation by the grant number 201/09/0983 and by the
Grant Agency of Charles University under project 157710.
REFERENCES
[1] V. Martinek and M. Zemlicka, ‚ÄúSome issues and solutions
for complex navigation systems: Experience from the jrgps
project,‚Äù in Systems (ICONS), 2010 Fifth International Con-
ference on, 2010, pp. 92 ‚Äì98.
284
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

[2] L. de Marcos, R. Barchino, J.-M. Guti¬¥errez, J.-J. Mart¬¥ƒ±nez,
S. Ot¬¥on, F. Giner, and R. Buend¬¥ƒ±a, ‚ÄúCiceron-e: Interactive
tourism for smes,‚Äù in Best Practices for the Knowledge
Society. Knowledge, Learning, Development and Technology
for All, ser. Communications in Computer and Information
Science, M. D. Lytras, P. Ordonez de Pablos, E. Damiani,
D. Avison, A. Naeve, and D. G. Horner, Eds., vol. 49.
Springer Berlin Heidelberg, 2009, pp. 420‚Äì429, url source
last checked 20.1.2011. [Online]. Available: http://dx.doi.org/
10.1007/978-3-642-04757-2 45
[3] Google Maps Navigation, http://www.google.com/mobile/
navigation/, url source last checked 20.1.2011.
[4] Navitime, http://www.navitime.com/, url source last checked
20.1.2011.
[5] Nokia Maps, http://maps.nokia.com/, url source last checked
20.1.2011.
[6] TomTom, http://www.tomtom.com/, url source last checked
20.1.2011.
[7] Navigon, http://www.navigon.com/, url source last checked
20.1.2011.
[8] Mio, http://www.mio.com/, url source last checked 20.1.2011.
[9] P. Sanders and D. Schultes, ‚ÄúEngineering fast route planning
algorithms.‚Äù in WEA, ser. Lecture Notes in Computer
Science, C. Demetrescu, Ed., vol. 4525.
Springer, 2007,
pp. 23‚Äì36, url source last checked 20.1.2011. [Online].
Available: http://dx.doi.org/10.1007/978-3-540-72845-0 2
[10] D. Delling, P. Sanders, D. Schultes, and D. Wagner, ‚ÄúHighway
hierarchies star,‚Äù in 9th DIMACS Implementation Challenge,
2006.
[11] J.
Koszelew,
‚ÄúTwo
methods
of
quasi-optimal
routes
generation in public transportation network,‚Äù in CISIM ‚Äô08:
Proceedings of the 2008 7th Computer Information Systems
and
Industrial
Management
Applications.
Washington,
DC, USA: IEEE Computer Society, 2008, pp. 231‚Äì236,
url source last checked 20.1.2011. [Online]. Available:
http://dx.doi.org/10.1109/CISIM.2008.43
[12] E. Pyrga, F. Schulz, D. Wagner, and C. Zaroliagis, ‚ÄúEfÔ¨Åcient
models for timetable information in public transportation
systems,‚Äù J. Exp. Algorithmics, vol. 12, pp. 1‚Äì39, 2008,
url source last checked 20.1.2011. [Online]. Available:
http://doi.acm.org/10.1145/1227161.1227166
[13] K. Weihe, ‚ÄúCovering trains by stations or the power of data
reduction,‚Äù in Proceedings of ‚ÄúAlgorithms and Experiments‚Äù
(ALEX98), R. Battiti and A. A. Bertossi, Eds., 1998, pp. 1‚Äì8.
[14] A. Liebers and K. Weihe, ‚ÄúRecognizing bundles in time table
graphs - a structural approach,‚Äù in Algorithm Engineering,
ser. Lecture Notes in Computer Science, S. N¬®aher and
D. Wagner, Eds., vol. 1982.
Springer, 2000, pp. 87‚Äì98, url
source last checked 20.1.2011. [Online]. Available: http://link.
springer.de/link/service/series/0558/bibs/1982/19820087.htm
[15] A. Liebers, D. Wagner, and K. Weihe, ‚ÄúOn the hardness
of recognizing bundles in time table graphs,‚Äù in WG, ser.
Lecture Notes in Computer Science, P. Widmayer, G. Neyer,
and S. Eidenbenz, Eds., vol. 1665.
Springer, 1999, pp. 325‚Äì
337, url source last checked 20.1.2011. [Online]. Available:
http://dx.doi.org/10.1007/3-540-46784-X 31
[16] V. Mart¬¥ƒ±nek and M. ÀáZemliÀácka, ‚ÄúSpeeding up shortest path
search in public transport networks,‚Äù in DATESO 2009,
K. Richta, J. Pokorn¬¥y, and V. Sn¬¥aÀásel, Eds.
Prague, Czech
Republic: Czech Technical University in Prague, 2009, pp.
1‚Äì12, url source last checked 20.1.2011. [Online]. Available:
http://ceur-ws.org/Vol-471/paper1.pdf
[17] R. Kasperovics, M. H. B¬®ohlen, and J. Gamper, ‚ÄúRepresenting
public transport schedules as repeating trips,‚Äù in TIME ‚Äô08:
Proceedings of the 2008 15th International Symposium
on Temporal Representation and Reasoning.
Washington,
DC, USA: IEEE Computer Society, 2008, pp. 54‚Äì58,
url source last checked 20.1.2011. [Online]. Available:
http://dx.doi.org/10.1109/TIME.2008.26
[18] M. M¬®uller-Hannemann and K. Weihe, ‚ÄúOn the cardinality
of the pareto set in bicriteria shortest path problems.‚Äù
Annals OR, vol. 147, no. 1, pp. 269‚Äì286, 2006, url
source last checked 20.1.2011. [Online]. Available: http:
//dx.doi.org/10.1007/s10479-006-0072-1
285
International Journal on Advances in Intelligent Systems, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, ¬© Copyright by authors, Published under agreement with IARIA - www.iaria.org

