A Preflight Planner for Succesful Missions of Unmanned Aerial Vehicles 
Carlo Di Benedetto, Domenico Pascarella, Gabriella 
Gigante, Salvatore Luongo, Angela Vozella 
Integrated Software, Verification and Validation Laboratory 
CIRA (Italian Aerospace Research Centre) 
Capua, Italy 
e-mail: c.dibenedetto@cira.it, d.pascarella@cira.it, 
g.gigante@cira.it, s.luongo@cira.it, a.vozella@cira.it 
Francesco Martone 
Software Development and Virtual Reality Lab 
CIRA (Italian Aerospace Research Centre) 
Capua, Italy 
e-mail: f.martone@cira.it
 
 
Abstract—This paper investigates the flight planning for 
unmanned aerial vehicles. It proposes a prototype of preflight 
planner for different models of unmanned aircrafts. The 
planner is able to take into account several constraints (e.g., 
the vehicle dynamics, the no-fly zones, the endurance, the 
feasibility of the mission objectives, the terrain separation, 
etc.). It also provides a quantitative estimation of the air data 
link coverage and of the National Imagery Interpretability 
Rating Scale (NIIRS) index for the images quality. An 
overview of the prototype is reported and some significant test 
results are discussed in order to show its features. 
Keywords-UAV; flight planner; payload management; 
NIIRS. 
I. 
 INTRODUCTION 
An Unmanned Aerial Vehicle (UAV) is an aircraft with 
no human pilot onboard. It is the central element of an 
Unmanned Aerial System (UAS), which is the set of the 
aircraft and all the other elements supporting its service. 
Recent advances in UAVs’ technology allowed the 
emergence of a wide range of applications, such as military 
operations [1], disaster management [2], and urban terrain 
surveillance [3]. Without the need of an onboard pilot, a 
vehicle may be designed to accomplish the D-cube (dull, 
dangerous and dirty) missions [4]. Nowadays, UAVs are 
mostly Remotely Piloted Vehicles (RPVs) since their 
operations are performed by large teams of human operators, 
who remotely pilot the aircraft and control its actions. For 
RPVs, ground operators must be endowed with the proper 
expertise and this represents a substantial constraint, 
especially concerning costs. Dull missions particularly stress 
the training requirements. Nevertheless, tedious and 
repetitive tasks relating also to mission preflight operation 
(such as the design of the flight path) could relieve the 
remote pilots if they were autonomously performed and 
could provide a formal guarantee of the mission success.  
Indeed, an integral part of UAV operation is the design of 
a flight path that attains the mission objectives. Flight 
planning shall ensure that the UAV operates in a safe and 
efficient way. Moreover, the mission effectiveness shall be 
ensured by verifying that all the required objectives are 
fulfilled by means of the designed route. 
This work deals with an offline flight planner, named 
PreFlight Planner (PFP), wherein the mission objectives 
concern the proximal sensing of geographical targets. The 
PFP is a Java software prototype, which is in charge of the 
4D flight planning for different samples of UAVs. The 4D 
flight planning problem is concerned with finding a path 
that links a specified initial state and several goal states. 
These states are four-dimensional (three spatial and one 
time dimension). It is also a constrained problem. Indeed, 
the proposed PFP is able to take into account various 
mission constraints for the planning, such as the vehicle 
dynamics, the no-fly zones, the endurance, the data link 
coverage, the feasibility of the mission objectives, the 
terrain separation, etc. The proposed software is an 
innovative UAV flight planner since it permits: a planning 
that is jointly based on the mission targets and the payloads; 
an integrated insertion of emergency and termination routes; 
the verification of the performances and the constraints for 
the achievability of the waypoints and the mission 
objectives. 
In the following sections, the background, an overview of 
the prototype and some significant test results are discussed. 
II. 
BACKGROUND 
An UAV mission may be divided in two main parts: the 
flight and the fulfillment of the assigned objectives. 
Objectives are reached by means of onboard payloads. A 
typical UAV mission starts with the assignment of the 
objectives, goes on with the definition of the flight plan to 
reach them and the execution and control of the flight from 
take-off to landing, and it ends with the post flight analysis 
of collected data. All such phases are supported by different 
types of software, that may be categorized in:  
1. UAV Activities Management – Software to manage the 
different activities of UAV fleets and related projects at 
business level, maintenance plans and pilots work. 
Different platforms providing such services are going to 
be developed in Europe. 
2. Flight Management – Software allowing the execution 
of the flight from take-off to landing. Such class 
includes both Ground Control Station (GCS) software 
and onboard guidance, navigation and control software 
(autopilot). The autopilot works according to the flight 
plan and by means of sensing and actuating. The typical 
UAV ground control software receives telemetry data 
from UAV and sends telecommands to it. It allows the 
aircraft operator to communicate the flight plan to 
onboard autopilot and/or to remotely control the UAV. 
18
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

It may support First-Person View (FPV) equipment to 
enhance the situational awareness of the remote pilot. In 
these fields, much research effort has been focusing on 
relevant aspects such as the perceptual and cognitive 
issues related to the interface of the UAV operator, 
including the application of multimodal technologies to 
compensate for the dearth of available sensory 
information. GCS software products usually allow to 
manage one UAV and they are combined to the UAV 
autopilot. For example, APM is the GCS of all UAVs 
with Ardupilot, a 3D robotics autopilot. Paparazzi GCS 
is the software employed in projects using the UAV 
Paparazzi platform [5]. It allows the design of the flight 
plan as well as the system configuration by means of a 
TCP-IP aircraft server. DJI provides a PC ground station 
for multi-rotor UAVs and manages the no-fly zones by 
means of a global list with a safety margin of 8 km [6]. 
The KopterTool is the ground software for the platform 
MikroKopter [7], whereas OpenPilot is an open 
platform [8]. Currently, it is possible to find commercial 
GCSs for multi-UAV systems ranging from the 
advanced proprietary and closed solution by Boeing for 
the X-45, Parrot SDK systems of PrecisionHawk, 
Draganfly, and Aeryon to open source solutions as 
QGroundControl Station and others [9]-[19]. 
3. UAV Payload Management – Software enabling the 
management of the onboard payloads during the flight. 
This class allows the fulfillment of the assigned mission 
objectives. Payload management products may be 
integrated into ground control software or not. They 
strictly depend on the payload model and type. The 
payload usually provides its own control software. 
4. UAV Post Flight Analysis – Software producing 
evidences on the basis of data collected by the UAV 
during the flight. In the photogrammetry domain, 
companies such as Erdas or Inpho have been proposing 
solutions for UAV. APS from Menci Software has been 
one of the first platforms for UAV in Italy. It provides 
some additional functionalities, such as StereoCAD and 
Terrain Tools to elaborate the cartographic data, and 
APSCheck for the check of the UAV shoots. It also 
allows to validate and classify the collected data [20]. 
Pix4D from Pix4D Switzerland (a spin-off of Swiss 
university, born in 2011) provides Pix4Dmapper 
Capture App, which allows to display on tablets or 
smartphones the images from commercial UAVs, like 
the DJI Phantom. ENSOMosaic Suite and PIEneering 
([21],[22]) offer different and integrated solutions from 
flight planning software to post flight photogrammetric 
analysis, including 3D models. The PhotoScan platform 
from Agisoft proposes the SFM (Structure For Motion) 
innovative approach. PhotoScan Professional and 
Standard Edition products are cheap and are open 
enough to accomplish the growing needs from 
applications [23]. Cloud services for UAV (like 
REDcatch GmbH [24], Agribotix [25], and the Maps 
Made Easy project [26]) may support UAV not only for 
planning, but especially for post flight elaboration of 
geo data. Additionally, a transversal category may be 
considered regarding the 3D modeling and vision 
digitalizing to realize 3D model and advanced 
visualization applications. 
5. UAV Flight Planning – Software implementing: the 
strategic planning, which occurs before take-off and 
takes a priori information about the environment and 
the mission goals to construct an optimal path for the 
given objectives; the tactical planning, which involves 
re-evaluation of the flight plan during flight. 
In this paper, we will refer to the strategic planning 
allowing the mission controller to plan (edit), validate and 
then upload the flight plan to the UAV. Research has 
focused on the identification of approaches and optimization 
algorithms obtaining the best route to guarantee the 
feasibility according to the vehicle performances, the 
compliance with the safety objectives, the endurance, the 
ability to return to base, and the terrain profile. Such 
software enables each UAV to properly flight followed by 
its own GCS, but two point seems to need further studies: 
• 
to guarantee a successful mission, what about the flight 
plan and the clear sight of the targets associated to 
mission objectives? 
• 
to guarantee the UAV flight according to airworthiness 
requirements, which ground station will cover the 
UAV? 
A careful study of the market and of the existing 
products shows that very few products combine these 
aspects. The purpose of this work is to extend the 
capabilities of a UAV mission planner by proposing a 
solution of an offline flight plan validated against aspects 
related to mission objectives and data link coverage. 
A. Images Quality Metrics 
In any application where proximal sensing on a specific 
target is required, a variable that plays an important role is 
the quality of the set of pictures. Many image quality 
metrics have been proposed in the recent years [27]. The 
quality of images is expressed by several technical 
parameters, such as ground sampling distance (GSD), 
modulation transfer function (MTF), signal to noise ratio 
(SNR) and National Imagery Interpretability Rating Scale 
(NIIRS). However, these parameters may partially address 
interpretability. GSD is related to the spatial resolution of 
images and is probably the most popular parameter. This is 
not the ultimate parameter to describe quality of images. For 
example, images with a same GSD may have very different 
interpretability. MTF and SNR may specify some aspects of 
image quality. For this reason, the NIIRS index has been 
proposed as a measure of image quality in terms of 
interpretability criteria. It has been applied with multiple 
types of imagery and offers a robust approach to developing 
a scale. It was formerly defined for intelligence and military 
use and extended to civilian use later on. The general 
approach is to use image exploitation tasks to indicate the 
level of interpretability for imagery basing on the detection 
19
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

of the object. The scale is defined so that when more 
information may be extracted from the image, the NIIRS 
rating increases. A set of standard image exploitation tasks 
or “criteria” defines the levels of the scale. The NIIRS 
consists of 10 graduated levels (0 to 9), with several 
interpretation tasks or criteria forming each level. These 
criteria indicate the level of information that may be 
extracted from an image of a given interpretability level. All 
NIIRS rating levels are described in Table I. 
Because of different types of imagery support different 
types of interpretation tasks, individual NIIRS indexes have 
been developed for four major imaging types: Visible, 
Radar, Infrared, and Multispectral. It provides a simple, yet 
powerful, tool for assessing and communicating image 
quality and sensor system requirements and it has been used 
for our purposes to provide a direct criterion to validate the 
waypoint and the relative legs associated to mission targets 
objectives. In literature, many tools to predict NIIRS have 
been proposed. This work addresses a possible approach for 
a quantitative assessment of the NIIRS index. 
TABLE I.  
NIIRS LEVELS [28] 
Rating Level 
Description 
0 
Interpretability of the imagery is precluded by 
obscuration, degradation or very poor resolution. 
1 
It is possible to: distinguish between major land use 
classes; detect a medium-sized port facility; distinguish 
between runways and taxiways at a large airport; 
identify large area drainage patterns by type. 
2 
It is possible to: identify large fields; detect large 
buildings; identify major road patterns; detect ice-
breaker tracks; detect the wake from large ships. 
3 
It is possible to: detect large area contour ploughing, 
individual houses in residential areas, trains or strings 
of rolling stock; identify inland waterways navigable 
by barges; distinguish between natural forest and 
orchards. 
4 
It is possible to: identify farm buildings as barns, silos 
or residences; detect basketball or tennis courts in 
urban areas; identify individual tracks, rail pairs and 
control towers; detect jeep trails through grassland. 
5 
It is possible to: identify individual rail wagons by 
type; detect open bay doors of storage buildings; 
identify tents at recreational camping areas; distinguish 
between coniferous and deciduous trees during leaf-off 
conditions; detect large animals in grasslands. 
6 
It is possible to: identify cars as saloon or estate types; 
identify individual electricity or telephone posts in 
residential areas; detect footpaths through barren areas; 
distinguish between grain crops and row crops. 
7 
It is possible to: identify individual railway sleepers; 
detect individual steps on a stairway; detect tree-
stumps and rocks in forest clearings and meadows. 
8 
It is possible to: identify vehicle grille detailing and/or 
the license plate on a truck; identify individual water 
lilies on a pond; identify the windscreen wipers on a 
vehicle; count individual lambs. 
9 
It is possible to: identify individual barbs on a barbed-
wire fence; detect individual grain heads on small 
grain crops; identify an ear tag on livestock. 
III. 
THE UAV PREFLIGHT PLANNER 
The PFP is a Java software prototype that allows to plan 
a mission of a UAS, namely, to identify the mission 
objectives and to design the mission path to observe them. 
Furthermore, the PFP ensures the success of the planned 
mission. The success assurance of the mission is attained by 
guaranteeing the following properties for the designed plan: 
• 
the dynamic feasibility from a 4D point of view by 
means of the selected vehicle; 
• 
the terrain separation; 
• 
the compliance with the no-fly zones, i.e., the 3D 
regions that shall not be entered by the UAV; 
• 
the compliance with the safe zones, i.e., the 3D regions 
that are reserved for the UAV flight and that shall not 
be left by the UAV; 
• 
the endurance, which requires that the boarded fuel 
level is enough to accomplish the mission; 
• 
the air data link coverage at any point of the route; 
• 
the visibility of the targets at the related route points. 
The preflight verification of these properties is necessary 
to avoid potential and expensive mission aborts due to 
neglected offline checks. In particular, the visibility check 
of the targets is profitable in order to avoid online changes 
of the UAV flight plan for the achievement of the mission 
objectives. In this way, the PFP provides a flight plan that is 
entirely verified and approved to guarantee the success of 
the designed mission. 
A. Software Architecture 
The PFP operation has been structured in three main 
phases: the setup phase, which allows for the configuration 
of all the mission parameters that are required for the 
planning; the planning phase, which is in charge of the route 
design by means of the waypoints positioning; analysis, 
which allows for the necessary checks in order to approve 
the designed plan. 
The software structure of the PFP is split into five 
modules: User Database (setup phase); Mission Data (setup 
phase); Route Planner (planning phase); Analysis (analysis 
phase); Export. The data flow diagram of the PFP is shown 
in Figure 1. 
 
Route Planner
Mission Data
User Database
Analysis
Export
 
Figure 1.  Data flow diagram of the PreFlight Planner. 
The User Database is the module for the management of 
the database of objects that may be applied for different 
missions (e.g., vehicles, no-fly zones, safe areas, etc.). 
These objects may be defined and reused without 
modifications in order to simplify the operator throughout 
20
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

the generation of a mission plan. Some of the reusable 
entities are: aircrafts; airports; payloads that may be 
boarded; point targets, i.e., mission objectives without a 
significant size; area targets, i.e., mission objectives with a 
significant size; user waypoints, which are defined by the 
user; standard waypoints, which are standard aeronautic 
waypoints; air data links, i.e., the transmission/reception 
instruments that may be boarded; no-fly zones and safe 
zones; patterns, i.e., waypoint sequences that define 
remarkable route segments; contingency routes, i.e., 
standard routes that may be reused in case of failure to the 
air data link. The managed waypoints are compliant with the 
ARINC (Aeronautical Radio INCorporated) 424 standard. 
The Mission Data carries out the management and the 
insertion of the set of data that characterize a given mission 
throughout the planning phase. The module is invoked both 
for the creation and for the change of a mission. It collects 
the following data from the user: the mission vehicle, 
payloads and air data links; the fuel level; the start time; the 
safe zone; the ground control stations that are active. The 
Mission Data receives the list of user entities from the User 
Database and sends its own data to the Route Planner. 
The Route Planner is the module that accomplishes the 
planning phase. Moreover, it performs the following 
functions by means of the interaction with a 2D map: 
insertion of a new waypoint; change of a previously inserted 
waypoint; removal of a previously inserted waypoint. Each 
waypoint may be related to one or more targets, which shall 
be observable (i.e., shall exhibit a minimum specified 
NIIRS) along the route section between two consecutive 
waypoints. The user may request that a target is observable 
by means of one or more payloads within the set of boarded 
payloads. 
Besides, every waypoint may be optionally related to 
one or two contingency routes, that shall be selected within 
the User Database. One contingency route may be defined 
as emergency route, whereas the other may represent a 
termination route: the former is the route to follow if the air 
data link is lost along the course starting from the chosen 
waypoint, while the system is waiting for the link recovery; 
the latter is the route to follow if the air data link is lost 
along the course starting from the chosen waypoint and it 
cannot be recovered. Hence, the match between a waypoint 
and the contingency routes is static. 
During the insertion and the change/removal of the 
waypoints, the Route Planner executes some validity checks 
in order to ensure that the following conditions always hold: 
the vehicle is able to perform the necessary manoeuvres to 
reach the waypoints; there are no ground impacts. If one of 
these conditions is violated, the system does not agree to the 
modification of the route. The module also handles a 3D 
view of the Earth, that may be invoked anytime. 
In more detail, the Route Planner carries out the 
computations of the flight plan for the specific aircraft. It 
employs the performance model of the aircraft in order to 
ensure the realistic and optimized route. The performance 
model includes some well-known characteristic parameters, 
such as cruise airspeed, climb rate, roll rate, etc. The route is 
modeled by means of a sequence of curves and the state of 
the vehicle may be analytically computer at any given time. 
Moreover, this module provides a software geometry engine 
that accurately illustrates dynamic objects.  
The Analysis module is in charge of the analysis of the 
flight plans as a function of the mission objectives. It is 
examined in depth in the following section. 
The Export module exports one or more planned 
missions in order to upload them in the Flight Management 
System (FMS) of the reference UAV. The interchange 
format is based on XML (eXtensible Markup Language) 
and has been implemented by a configurable XML schema. 
B. Flight Plan Verification 
The Analysis module verifies that all the mission 
constraints are fulfilled and ensures the success of the plan. 
In detail, the following properties are checked: 
• 
the vehicle never leaves the coverage region of the air 
data links, which is computed by taking into account 
the positions of the GCSs and the land orography; 
• 
the targets are always visible along the route sections, 
by taking into account the boarded payloads and the 
land orography and by envisaging a minimum level of 
quality of the captured image; if some variable confocal 
optics are boarded, the visibility check is carried out 
with four different focal lengths, namely, minimum, 1/3 
of the maximum, 2/3 of the maximum and maximum; 
• 
the vehicle never leaves the safe zone, if this is included 
in the mission planning; 
• 
there are no ground impacts; a minimum distance with 
the terrain is guaranteed for each point of the route 
along vertical, frontal and lateral directions; 
• 
the boarded fuel is enough for the accomplishment of 
the whole flight plan. 
Furthermore, the coverage limit of the air data link is 
computed starting from the link budget equation, i.e. 
 
ܲோ௑ ൌ ்ܲ௑ ൅ܩ்௑ െܮ்௑ െܮிௌ െܮெ ൅ܩோ௑ , 
(1) 
wherein ܲோ௑ is the power of the signal that arrives at the 
receiver, ்ܲ௑ is the transmitted power, ܩ்௑ is the gain of the 
transmitter antenna, ܮ்௑ is the transmitter loss, ܮிௌ is the 
loss due to the signal propagation in space, ܮெ is the safety 
link margin, and ܩோ௑ is the gain of the receiver antenna. All 
these parameters are known and are stored as data of the air 
data links in the User Database, except ܮிௌ . The latter 
depends on the distance ܴ that is covered by the wave and 
the wave length ߣ, which is derivable from the frequency of 
the transmission channel (also stored in the User Database). 
In detail, the relation between ܮிௌ, ܴ and ߣ is 
 ܮிௌ ൌ 20 ln
ସ గ ோ
ఒ ܲோ௑ . 
(2) 
In order to receive a signal, the condition ܲோ௑ ൐ 0 must 
hold. This condition is equivalent to 
 
20 ln
ସ గ ோ
ఒ
൏ ்ܲ௑ ൅ܩ்௑ െܮ்௑ െܮெ ൅ܩோ௑ ൌߙ . (3) 
21
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

Hence, the maximum coverage distance ܴெ஺௑ is 
 
ܴெ஺௑ ൌ
ఒ
ସగ ݁
ഀ
మబ . 
(4) 
As regards the NIIRS quantitative assessment, the first 
step is the computation of the GSD, which is the dimension 
of the ground projection of a sensor pixel. If we assume the 
pixels to be square with dimension ݀ and the acquisition to 
occur with an elevation angle that is different from ߨ2⁄, the 
ground projection of the pixel is distorted in a rectangle. 
Starting from Figure 2, the following equations hold 
 ݔ ൌ
ௗ·௥
௙  , 
(5) 
 ݕ ൌ
ௗ·௥
௙·ୱ୧୬ ௘௟௘௩ , 
(6) 
 
GSD ൌ ඥݔ·ݕ ൌ
ௗ·௥
௙·√ୱ୧୬ ௘௟௘௩ . 
(7) 
The expected NIIRS may be computed as 
 
NIIRS ൌܣ൅ܤ· logଵ଴GSD, 
(8) 
wherein ܣ and ܤ are two constants, whose values have 
been set as ܣ ൌ 10.251 and ܤ ൌ െ3.32. 
The structure of eq. (8) and the values of ܣ and ܤ are 
coherent with the General Image Quality Equation (GIQE). 
The GIQE is an empirical formula for calculating the image 
quality that is expected for a given optical system [29]. It is 
a model that was developed using statistical analysis of 
imagery analyst responses. 
The coefficients ܣ and ܤ and the logarithmic structure 
were obtained by regression to fit the results of an image 
evaluation study. In detail, the logarithmic structure of eq. 
(8) embodies the notion that NIIRS changes by 1.0 each 
factor of two in the spatial resolution is equivalent to one 
unit on the NIIRS scale, namely, a change of ±1 of the 
NIIRS is equivalent to halving or doubling the distance 
between the sensor and the observation point. This 
relationship was confirmed by visual observations [29]. 
More broadly, the GIQE predicts the NIIRS value as a 
function of other parameters in addition to the GSD (which 
is directly related to the spatial resolution). These 
supplementary parameters are: the Relative Edge Response 
(RER), that is indirectly associated to the point spread 
function and that estimates the effective slope of the 
imaging system’s edge response; the SNR and the system 
post-processing noise gain, which quantify the noise in the 
post-processed imagery; the system post-processing edge 
overshoot factor, that measures the  amount  of  edge  
ringing  resulting  from  post-processing. Within this work, 
we consider only the spatial resolution (i.e., the GSD) as a 
parameter for the NIIRS estimation, whereas the other 
criteria are not considered since they are related to the post-
processing phase and the aperture configuration. 
 
 
Figure 2.  NIIRS quantitative estimation in the PreFlight Planner. 
C. Test Results 
We have conducted a series of tests to verify the correct 
implementation of the software. The main entities have been 
tested by creating, modifying and deleting records in 
different databases and also checking their correct 
visualization during the planning process. The verification 
of the analysis has required the creation of a number of 
flight plans to test the software behavior on different 
situations. In the following, two test cases are reported.  
The first test and the related check results are depicted in 
Figure 3. The flight takes place in a segregated area (the 
azure line), the route (the yellow line) consists of eight 
waypoints, three of which are loiter. The no-fly zone is 
reported in red. There is a single GCS, but the link coverage 
is not visible because the area of operations is much less 
extensive. Two targets are associated to loiter waypoints. As 
shown by the right side of Figure 3, the flight plan 
validation fails on two aspects: the targets visibility and the 
boundaries overcome of segregated flight zone. The PFP 
analysis module is able to provide other graphic evidences: 
the non compliance with safety objectives, the issues on 
target visibility (highlighted red path) and the report on the 
fuel consumption. 
In the second test, the flight plan of the first test has been 
modified in order to violate the data link coverage, the fuel 
consumption and the terrain obstacles on a linear target. The 
outcomes of the analysis are shown in Figure 4, which 
provides: the evidence that the flight plan is not feasible due 
to the overcoming of all the considered constraints; finally, 
the evidence of the link coverage analysis, the problems of 
visibility on the linear target (a river). 
It may be noted that the previous test cases have been 
discussed in order to highlight the verification and the 
22
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

analysis capabilities of the PFP. Indeed, the checking phase 
of the PFP is able to formally verify the compliance of the 
computed flight plan with all the reference constraints and 
to guarantee the success of the designed mission. However, 
some of these constraints are previously taken into account 
by the Route Planner, which processes the actual flight plan 
in order to reach the prescribed waypoints by means of the 
selected aircraft (i.e., the related dynamic model). Clearly, 
the other constraints are not considered in the planning 
phase since they do not directly involve the trajectory 
elaboration. Thus, they may be only evaluated by means of 
the PFP checks. 
IV. 
CONCLUSION AND FUTURE WORK 
This work proposes some new perspectives on UAV 
preflight panning by pursuing the idea that a flight plan 
should not only guarantee a successful flight, but also a 
successful mission. It analyses the typical UAV missions 
where proximal sensing is requested and their main 
requirements. Here, the quality of images is a critical aspect 
and an approach for its measurement is implemented in the 
PFP as a criterion to validate the flight plan. 
In addition, the verification of data link coverage 
encourages future enhancements by considering a fleet of 
UAVs with different GCSs. Other possible improvements 
cannot overlook the research issues concerning the 
waypoints scheduling optimization. 
 
REFERENCES 
[1] C. Schumacher, P. R. Chandler, M. Pachter, and L. S. Pachter, 
“Optimization of Air Vehicles Operations Using Mixed-
Integer Linear Programming”, CMU/SEI-95-TR-021 ESC-
TR-95-021, Air Force Research Laboratory, 2006. 
[2] M. Quaritsch, “Agent-oriented programming”, Elektrotechnik 
& Informationstechnik, vol. 127, no. 3, 2010, pp. 56–63. 
[3] D. Gross, S. Rasmussen, P. Chandler, and Greg Feitshans. 
“Cooperative operations in urban terrain (COUNTER)”, 
Proceedings of Society of Photo-Optical Instrumentation 
Engineers Conference, Vol. 6249, 2006, pp. 1-11. 
[4] L. A., Ingham, “Considerations for a roadmap for the 
operations of Unmanned Aerial Vehicles (UAV) in South 
African Airspace”, PhD thesis, Electrical and Electronic 
Engineering, Universiteit Stellenbosch University, 2008. 
[5] P. Brisset, A. Drouin, M. Gorraz, P. S. Huard, and J. Tyler, 
“The Paparazzi Solution”, Proceedings of MAV (Micro Air 
Vehicles) 2006, pp. xxxx. 
[6] DJI, 
Fly 
Safe, 
[Online], 
Available 
from 
http://www.dji.com/fly-safe [retrieved: 05, 2016]. 
[7] MikroKopter, MikroKopter Tool, [Online], Available from 
http://www.mikrokopter.de/ucwiki/MikroKopterTool 
[retrieved: 05, 2016].  
[8] OpenPilot, 
[Online], 
Available 
from 
https://www.openpilot.org [retrieved: 05, 2016]. 
[9] Easy Map UAV, Specification, [Online], Available from 
http://www.easymapuav.com/specification 
[retrieved: 
05, 
2016]. 
[10]  APM, Mission Planner Home, [Online], Available from 
http://planner.ardupilot.com [retrieved: 05, 2016]. 
[11] 3DR, Free Groun Station Application, [Online], Available 
from http://3dr.com/download_software [retrieved: 05, 2016].  
[12] mdCockpit, 
UAV 
Control, 
[Online], 
Available 
from 
http://www.microdrones.com/en/products/software/mdcockpit
/flight-planning [retrieved: 05, 2016].  
[13] UAV Navigation, Visionair GCS Software, [Online], 
Available 
from 
http://www.uavnavigation.com/products/visionair-ground-
control-station-software [retrieved: 05, 2016].  
[14] UAV-EA, Mission Planner Autopilot Software, [Online], 
Available from http://uaveastafrica.wordpress.com/mission-
planner-autopilot-software [retrieved: 05, 2016]. 
[15] Orbit Logic, UAV Planner, [Online], Available from 
http://www.orbitlogic.com/products/uav.php [retrieved: 05, 
2016]. 
[16] MAVinci, MAVinci Desktop, [Online], Available from 
http://www.mavinci.de/en/completesys/desktop [retrieved: 05, 
2016]. 
[17] FAS, Tactical Control Station (TCS), [Online], Available 
from http://fas.org/irp/program/collect/uav_tcs.htm [retrieved: 
05, 2016]. 
[18] Micropilot, Micropilot Ground Control Station, [Online], 
Available from http://www.micropilot.com [retrieved: 05, 
2016]. 
[19] SAGEM, SAGEM Mission Planning Systems, [Online], 
Available from http://www.sagem.com/aerospace/military-
aircraft/mission-planning-systems [retrieved: 05, 2016]. 
[20] Menci 
Software, 
Photogrammetry 
Software, 
[Online], 
Available from http://www.menci.com [retrieved: 05, 2016]. 
[21] MoasicMill, EnsoMOSAIC photogrammetry software and 
hardware for aerial image processing, [Online], Available 
from http://www.ensomosaic.com [retrieved: 05, 2016]. 
[22] PIEnnering, Parallel Image Engineering, [Online], Available 
from http://www.pieneering.fi [retrieved: 05, 2016]. 
[23] Agisoft, Ahisoft PhotoScan, [Online], Available from 
http://www.agisoft.com [retrieved: 05, 2016]. 
[24] REDcatch, 
Photogrammetric 
Cloud 
Service, 
[Online], 
Available from http://www.redcatch.it [retrieved: 05, 2016]. 
[25] Agribotix, Agricultural Intelligence Drone-Enabled, [Online], 
Available from http://www.agribotix.com [retrieved: 05, 
2016]. 
[26] Maps Made Easy, Aerial Map Processing & Hosting, 
[Online], Available from http://www.mapsmadeeasy.com 
[retrieved: 05, 2016]. 
[27] R. Reulke, and A. Eckardt, “Image quality and image 
resolution”, In 2013 Seventh International Conference on 
Sensing Technology (ICST), 2013, pp. 682-68. 
[28] The National Imagery Interpretability Rating Scale (NIIRS), 
[Online], 
Available 
from 
http://ncap.org.uk/sites/default/files/NIIRS.pdf [retrieved: 05, 
2016]. 
[29] Thurman, S. T., and  Fienup, J. R., “Analysis of the general 
image quality equation”,   Proceedings of SPIE, Vol. 6978, 
Visual 
Information 
Processing 
XVII, 
2008.
 
23
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

 
 
Figure 3.  Results of the first test. 
 
Figure 4.  Results of the second test. 
24
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-483-1
ICAS 2016 : The Twelfth International Conference on Autonomic and Autonomous Systems

