Services for Legacy Software Rejuvenation: A Systematic Mapping Study 
 
Manuel Gonçalves da Silva Neto, Walquiria Castelo Branco Lins, Eric B. Perazzo Mariz 
Recife Center for Advanced Studies and Systems (CESAR) 
Recife – PE, Brazil  
Emails: { manuel.neto, wcbl, eric.perazzo}@cesar.edu.br 
 
 
Abstract— One of the promises of Service-Orientation and 
Service-Oriented Architecture (SOA) is the ability to revitalize 
legacy systems and gain a significant return of efforts and 
investments. SOA has gained significant attention from 
academic and industry as a promising architectural style 
enabling legacy applications to expose and reuse their 
functionalities. When a research area matures, there is a sharp 
increase in the number of searches and results available and it 
is important to summarize and provide a more comprehensive 
overview of this area. The goal of this work is to investigate the 
use of services in the modernization of legacy software, 
gathering 
information 
of 
rejuvenation 
techniques 
and 
technologies adopted. To achieve this goal, a systematic 
mapping study was performed covering papers recently 
published in journals, conferences, and workshops, available at 
relevant electronic databases. This study also presents the 
characteristics of the selected research divided into six 
research questions. As a result, 47 studies were selected 
presenting strategies and solutions for legacy rejuvenation. The 
results indicate that Java or Object-Oriented systems 
represent a significant number of legacy systems in operation 
today, which are adopted migration techniques to become 
more service oriented. The study also showed a growing 
number of validations with real use cases in enterprise 
environment. 
Keywords- Systematic Mapping; SOA; Legacy Systems. 
I. 
 INTRODUCTION  
Nowadays, many companies have systems that have been 
implemented for some time. These systems must interact 
with those that are developed nowadays requiring constant 
adjustment and maintenance to meet new needs and remain 
aligned with business rules [1]. 
One of the challenges faced by information technology 
today is the continuous adaptation and migration of legacy 
systems to more flexible and modern platforms [2]. With the 
fast development of business logic and information 
technology, today´s best solutions are tomorrow´s legacy 
systems [3].  
The legacy systems or existing working systems of 
enterprise usually contain a mixture of different techniques 
and protocols which is hard to maintain and update. 
However,  Legacy systems carry out the enterprise’s most 
crucial 
business 
information 
together 
with 
business 
processes and many organizations have leveraged the value 
of their legacy systems by exposing parts of it as services [4]. 
Rapid changes in hardware and software technologies 
combined with the changing requirements require the use of 
new methods that enable the evolution of these systems 
efficiently [5]. 
Service-Orientations and Service-Oriented-Architecture 
(SOA) are presented as alternatives to the modernization of 
legacy systems, recovering investments applied in these 
systems over the years. Almonaies et al [6] list some of the 
features that ease modernization of these systems, including 
loose coupling, the implementation of logical abstraction, 
agility, flexibility and reusability. Migrating legacy systems 
to services enables the reuse of software components already 
established, as well as its integration with new services to 
support changing business needs [1]. Modernizing legacy 
systems using Services may be accomplished in several ways 
which vary from the creation of intermediate layers for 
insertion of new features to the development of a completely 
new system [7]–[9]. 
When a research area matures there is a sharp increase in 
the number of search results available and thus it is important 
to summarize and provide a more comprehensive overview 
of this area [10]. Secondary studies as the Systematic 
Reviews and Mappings have been proposed and defended as 
the main methods of conducting reviews at primary studies 
and have become pillars in the practice of evidence-based 
research [11]. Based on this premise, in order to better 
understand the area and to identify the shortcomings on it, 
this paper presents a systematic mapping study of the use of 
Services to modernize legacy software. 
The Mapping Study (MS) reported here follows the 
guidelines from Kitchenham [12], Petersen [10] and the 
process proposed by Biolchini et al. [13], in which the work 
was divided into three phases, namely, i) Planning, ii) 
Conducting, and iii) Reporting results. Its main focus is to 
identify and classify the techniques and legacy systems that 
are currently rejuvenated with SOA use. For that, it collects 
evidence on how research are structured according to 
modernization strategy, implementation technology, legacy 
system 
features, 
feasibility 
analysis 
and 
the 
main 
contribution of each study.   
This paper is organized as follows: Section 2 presents the 
systematic mapping process undertaken in this study; Section 
3 presents the main findings and analyzes them; Section 4 
presents related works relevant to this research; Section 5 
presents the conclusions as well as threats to validity of this 
research and directions for future works. 
II. 
SYSTEMATIC MAPPING STUDY PLANNING  
This 
section 
presents 
how 
the 
mapping 
study 
methodology has been planned, including the research 
184
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

questions, 
search 
strategy, 
inclusion, 
exclusion 
and 
classification criteria used to provide a structure of the 
primary studies. Additional process details can be found at 
Silva Neto [14]. 
A. Research Questions 
The goal of this study is to identify and classify primary 
research addressing the use of Service-orientation in legacy 
modernization by the following main question:  “What are 
the approaches used in the adoption of Services to modernize 
legacy systems and how these approaches differ from each 
other?” 
In [15], they recommend that as a research question has 
different focuses, it must be divided into sub questions in 
order to facilitate the mapping process. The overall goal and 
question are divided into the following research questions 
(RQ): 
 
RQ1 - What modernization strategy is 
adopted? The main purpose of this question is 
to identify the modernization strategies used to 
choose SOA for legacy modernization. 
 
RQ2 
- 
What 
Service-orientation 
implementation technology is used? The 
purpose of this question is to identify which 
Service implementation technologies are used 
for the modernization of legacy software. 
 
RQ3 – What is the type of modernized legacy 
system? This question has as objective to 
identify the type of legacy system modernized 
through Services. 
 
RQ4 – Were there feasibility analysis? This 
question has as main objective to identify how 
feasibility analysis was carried out when 
selecting the use of Services to modernize 
legacy software. We intended to map the 
methodologies and techniques used in the 
feasibility analysis or the complete lack of this 
kind of activity. 
 
RQ5 - What was the proposed contribution? 
This question has as objective to identify the 
type of contribution left by primary research, 
through which possible gaps and research areas 
still open on the subject can be mapped out. 
 
RQ6 - How was the proposal validated? This 
question is intended to identify how primary 
research is being validated, the topics of 
interest are the research populations where the 
experiments were applied qualitatively and 
quantitatively. 
 
B. Search Strategy 
Considering the search questions, therea set of  keywords 
was identified. The main keywords for search expression are 
legacy, modernization and SOA with the following related 
terms: 
 
Service-Orientation 
and 
SOA: 
Service-
Oriented Architecture , Webservice, Web 
Service, RESTful. 
 
Modernization: Migration, Reengineering, re-
engineering, evolution 
 
Legacy System:  Legacy  Software,  Legacy 
Information 
Thus, the following search expression was obtained after 
refinements: 
((legacy AND (system OR software OR information)) 
AND (migration OR modernization OR evolution OR 
reegineering OR {re-engineering}) AND 
(SOA OR webservice OR {web service} OR {Service-
Oriented Architecture} OR RESTful) ) 
In addition to research questions and search strategy, we 
stablished the search sources to find primary studies. In [15]–
[20], relevant research bases in the areas of architecture and 
software engineering in general were found, so we used 
these works to choose the sources of research in this 
systematic mapping. Kitchenham[21] recommends including 
alternative sources of research manually to avoid biasing the 
research including, among others, a list of search results of 
the primary research and the Internet itself. Thus they added 
secondary research bases to perform manual search. Follow 
the databases chosen: 
 
TABLE I. SELECTED SOURCES 
Source 
Address 
IEEE Xplore 
Compendex 
Web of Science 
Scopus 
Public Domain 
References  
www.ieeexplore.ieee.org 
www.engineeringvillage.com 
www.isiknowledge.com 
www.scopus.com  
www.dominiopublico.gov.br 
Reference List of primary 
Studies 
 
The last two rows of Table 1, are secondary research 
bases to perform manual search. 
C. Inclusion/Exclusion criteria 
Criteria should be defined to exclude primary research 
that have no relevance to the research question, as well as 
ensuring that the relevant work is analyzed [10]. The search 
of primary studies was divided into three phases or stages, 
where only selection criteria for excluding non-relevant 
primary study to the research questions were adopted. The 
publications that do not fit in any of the exclusion criteria are 
automatically inserted in the next stages of evaluation.  
We named each step and applied the selection criteria as 
follows on Table II: 
 
 
Step one (E1); 
 
Step two (E2); 
 
Step three (E3). 
 
 
 
 
 
 
 
 
185
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

 
 TABLE II. INCLUSION/EXCLUSION CRITERIA 
Inclusion Criteria 
1 ) Articles published in English from January 2010 to February 
2014 for searches in primary research bases 
2 ) Articles in English and Portuguese published from January 
2006 to February 2014 for manual searches in the secondary 
research bases 
3 ) Articles that focus on legacy modernization with services or 
SOA. 
Exclusion Criteria 
CS1: repeated publications or already cataloged. 
CS2: Very short papers, less than 4 pages. 
CS3: Publications that have no direct relation to the main 
research question and at least one (1) of the sub questions. 
CS4: Secondary Studies 
CS5: Folders, Books and Catalogues 
 
It was also used the Kitchenham’s [21] recommendation 
that in case of the existence of the same publication in more 
than one event,the latest one is cataloged.  
Quality assessment criteria were defined for the selected 
studies after the application of exclusion and inclusion 
criteria. We followed the recommendations in [22], which 
the evaluation of quality was not used for purposes of 
exclusion or inclusion, quality assessment was carried out to 
enhance the quality of the assessed studies. 
III. 
SEARCH CONDUCTION AND CLASSIFICATION: 
OVERVIEW OF THE RESULTS 
This section presents details of search conduction and 
classification of the studies. 
A. Procedure Selection 
As shown, the conduct of research was carried out in 
three steps :  
Step one (E1): Selection and preliminary registration of 
publications using primary research bases with the 
application of the search expression. 
Step two (E2):  Selection of relevant publications based 
on the title and summary and application of the first filtering 
based on exclusion criteria. 
Step three (E3): Selection of relevant publications based 
on their full text and application of the second filtering based 
on exclusion criteria. 
Figure 1. Conduction summary 
 
Initially the search was executed expression in primary 
search bases selected publications passed through filters as 
E1, E2 and E3, finally, the search was performed on the 
secondary databases following the possible exclusion criteria 
for each base. In [14] there is the complete list of 
publications. The Appendix A presents Table IX with items 
chosen after the selection steps.  
B. Overview of the results 
The completion of the search gives an overview of the 
subject importance, the publications were classified 
according to each research question, we also obtained 
relevant data on authors, events and temporal distribution of 
publications. 
The authors with highest number of selected publications 
are respectively: Khadka, Patricia Lago and Harry Sneed.  
We used the Scholar to survey the number of citations 
received by each publication selected. The most cited 
publication was the S38: SOMA:A method for developing 
service-oriented solutions. 
In order to answer the research questions, there was the 
classification of selected publications for each research 
question separately. 
RQ1:  This research question investigates what strategy 
or modernization approach was used and heavily mentioned 
in the selected research. They used the classifications in [9] 
to group publications in three (3) main types of strategies: 
Redevelopment (i), Wrapping (ii) and Migration (iii). 
The first category, Redevelopment, comprises a complete 
rewrite of the system in a new technology or language. The 
second category, encapsulation or Wrapping, also known as 
the integration is to maintain the legacy system with minimal 
changes to the source code where a new software layer is 
added to express the functionality through services. The third 
category, migration, operates in the restructuring and 
transformation of legacy systems to more flexible platforms 
keeping its data and key features, it resembles the first 
category but there is a less extreme character compared to 
the level of structural changes.  
Table III summarizes the publications according to Q1.1, 
it used the classifier N/A (No Answer) to identify 
publications that lacked connection with this research 
question. 
TABLE III. Q1.1 CLASSIFICATION 
APPROACH 
% 
SELECTED PUB 
REDEVELOPMENT 
6,38% 
S17;S30;S40 
MIGRATION/ENCAPSULAT
ION 
2,12% 
S15 
MIGRATION ONLY 
48,94% 
S2;S5;S6;S7;S8;S10;S19;S25;S2
6;S35;S47;S23;S12;S22;S42;S1;
S18;S29;S32;S34;S36;S39;S45 
ENCAPSULATION ONLY 
23,41% 
S3;S14;S21;S31;S33;S37;S41;S1
1;S16;S20;S27 
N/A 
19.15% 
S4;S9;S24;S44;S46;S43;S28;S13
;S38 
 
RQ2: This research question investigates which SOA 
implementation technology was used or heavily mentioned 
in research. Although SOA and the term "Services Oriented" 
are initially agnostic about the technology, they tried to sort 
through the analysis of primary studies the technology that 
186
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

allowed the realization of SOA concepts and the 
modernization of legacy systems through service orientation.  
Table IV summarizes the publications according to Q1.2, 
it used the classifier "N/A" (No Answer) to identify 
publications that lacked connection with this research 
question. 
TABLE IV. Q1.2 CLASSIFICATION 
TECHNOLOGY 
% 
SELECTED PUB 
OSGi 
2,12% 
S1 
SOAP 
46,81
% 
S2;S3;S14;S5;S6;S7;S10;S15;
S24;S33;S37;S41;S47;S42;S1
1;S16;S18;S20;S27;S30;S32;
S45 
RESTFul 
4,26% 
S19;S36 
N/A 
46,81
% 
S4;S8;S9;S17;S21;S25;S26;S
31;S35;S44;S46;S23;S12;S22;
S43;S28;S13;S29;S34;S38;S3
9;S40 
 
Regarding publications not receiving classification from 
the point of view of this question of search, they had focused 
on general aspects of legacy modernization SOA ranging 
from indication to migration aid of processes (S4), by 
comparing the level of maintainability between two 
approaches (S17), these publications did not address any 
implementation techniques and received for this reason the 
classification N / a (no Answer) for this research question. 
RQ3: This research question investigates the main 
features of the legacy system that has undergone 
modernization, this information is relatively useful in 
decision making for new projects with similar characteristics 
to those presented here.  
The main features of the rejuvenated systems were 
grouped according to the programming language when the 
author stressed to this feature, regarding the type of system 
in which such languages are grouped, for example: Web 
Applications (WEBAPP). We also used the general 
characteristic of the system when the author took black-box 
methods and language used in the original system was not 
addressed. 
TABLE V. Q1.3 CLASSIFICATION 
LEGACY FEATURE 
% 
SELECTED PUB 
JAVA 
23,41
% 
S14;S8;S9;S10;S33;S41;S23;
S1;S18;S29;S45 
ITERACTIVE/FORM 
BASED 
2,12% 
S27 
FORTRAN 
2,12% 
S47 
COBOL 
21,28
% 
S5;S15;S24;S25;S26;S42;S16
;S20;S30;S40 
C++ 
4,26% 
S11;S13 
WEBAPP 
17,02
% 
S2;S6;S19;S35;S37;S12;S22;
S32 
N/A 
29,79
% 
S3;S4;S7;S17;S21;S46;S31;S
44;S43;S28;S34; 
S36;S38;S39 
 
Regarding publications classified as N/A (No Answer) in 
Table V, they addressed these processes or methodologies in 
general or the type of system have not made clear who would 
be modernized, receiving so this classification. 
RQ4: This research question investigates the feasibility 
analysis performed in the SOA option for legacy system 
modernization. The goal here was to determine whether the 
projects or research that addressed legacy modernization 
SOA presented some technical or business justification. 
Justifying a project that involves major changes to existing 
software is an important task that usually involves the 
analysis of the software, the maintenance process and the 
business value that the application adds [23]. 
In Table VI, the studies were classified and grouped 
according to the practice or approach used to justify the 
project or indicative of an absence in any case. This research 
question has the particularity to make explicit that the 
absence of criteria or feasibility reasons for this fact in itself 
is relevant to this issue. 
TABLE VI. Q1.4 CLASSIFICATION 
METHODOLOGY 
% 
SELECTED PUB 
SOMA 
6,38% 
S21;S33;S38 
OWN METHOD 
23,41
% 
S3;S14;S5;S8;S9;S10;S25;S3
5;S44;S1;S40 
SAAM 
2,12% 
S17 
INTERNAL COMITE 
2,12% 
S26 
SMART 
2,12% 
S13 
CODE INSPECTION 
2,12% 
S16 
NOT USED 
61,70
% 
S2;S4;S6;S7;S15;S19;S24;S3
1;S37;S41;S46;S47;S23;S12;
S22;S43;S42;S28;S11;S18;S2
0;S27; 
S29;S30;S32;S34;S36;S39;S4
5 
 
Publications that have proposed some kind of process in 
which there were steps or activities responsible for 
determining the feasibility received the rating OWN. 
Publications that showed no indications of feasibility 
analysis, whether technical or business, were classified as 
NOT USED. Approximately 61.7% of the publications fit 
into this category. 
RQ5: This question is intended to identify and quantify 
the contributions provided by selected studies in order to 
provide information to those who wish to expand or 
contribute to them. For classification purposes, the works 
were grouped according to the characteristic that the authors 
have given greater emphasis to describe the contributions of 
their research. 
TABLE VII. Q1.5 CLASSIFICATION 
CONTRIBUITION 
% 
SELECTED PUB 
OVERVIEW 
6,38% 
S15;S17;S43 
PROCESS 
40,43
% 
S2;S3;S4;S5;S6;S8;S9;S10;S2
5;S26;S35;S37; 
S44;S22;S1;S13;S36;S38;S40 
ARCHITECTURE 
6,38% 
S14;S31;S47 
METHODOLOGY 
42,55
% 
S7;S19;S21;S24;S33;S41;S46
;S23;S12;S42;S28;S18;S20;S
27;S29;S30;S32;S34;S39;S45 
TOOL 
4,26% 
S11;S16 
 
In the analysis of publications that contributed to some 
kind of methodology on table VIII, (S12 and S24) there are 
proposed methodologies for business rules extraction 
through legacy code (S41 and S42) they have proposed 
methodologies for generation or improvement of the 
extracted services. In (S7 and S39), the focus of the 
methodology was the extraction of information that would 
187
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

help the process of modernization. In (S32, S34, S45, S29, 
S18, S28, S46 and S19) they have proposed methodologies 
to identify services from legacy systems, and (S28) 
emphasized the need to identify the "right" services that 
actually represent value for Business. Finally, still in relation 
to methodologies, in publications (S30, S27, S20, S23, S33 
and S21), methods or techniques that help the legacy 
modernization processes have been proposed. 
RQ6: This question is intended to identify how the 
publications were validated and where the study was applied. 
These ratings on Table VIII are useful to researchers who 
wish to extend the study area to new research. 
 
TABLE VIII. Q1.6 CLASSIFICATION 
VALIDATION 
% 
SELECTED PUB 
BUSINESS 
ENVIRONMENT 
51,06
% 
S1;S3;S14;S7;S9;S15;S17;S2
5;S26;S35;S37;S41;S44;S47;
S23;S12;S42;S13;S16;S20;S3
0;S34; 
S38;S40 
ACADEMIC 
36,17
% 
S2;S4;S5;S6;S8;S10;S19;S24;
S33;S46;S22;S11;S18;S27;S2
9;S32;S45 
THEORETICAL 
12,77
% 
S21;S31;S43;S28;S36;S39 
 
For classification purposes, the names "business 
environment" and "academic environment" where adopted 
for primary studies that used cases studies. The first term 
was used in studies that validated their experiments in 
companies or through business experiences. The second term 
joins studies that were validated in academic environments, 
through simulation or implementation in a highly controlled 
environment. Studies that confirmed its assumptions based 
on literature with no explicit use of cases of use were 
classified as theoretical. 
IV. 
RELATED WORK 
There are others researches addressing the modernization 
of legacy systems using SOA or services. In a domain where 
a number of systematic reviews exist already it may be 
possible to conduct a tertiary review, in order to answer 
wider research questions [21]. Although this is not the focus 
of this paper, this section briefly introduces some of these 
works. 
Laguna et al [18], conducted a systematic mapping 
addressing the evolution of software product lines ranging 
from legacy systems to reengineer product line. The work 
was conducted in three stages and conducted by two experts. 
The first step occurred in 2010, the second and third in 2011 
and 2012 respectively. At the end of the research they got 74 
selected primary studies which were classified regarding the 
following perspectives: Focus of research, type of 
contribution and type of validation. These classifications 
assisted in the formulation of research questions used in the 
systematic mapping subject of current research.  
Razavian and Lago [24], conducted a systematic review 
addressing the migration of legacy systems to service-
oriented systems. The main objective of the review was the 
classification of the main migration strategies existing in this 
area , which they called SOA Migration Families. 
Khadka et al [25], also conducted a systematic review 
addressing the evolution of legacy systems through SOA. 
They investigate primary studies produced from 2000 to 
2011 getting 121 selected primary studies for classification. 
The focus of the research took place in the identification and 
classification methodologies, techniques and approaches 
relevant to the evolution of legacy to SOA. A framework to 
guide the rejuvenation process was also developed and used 
as a guide in their review. 
Comparing the work proposed here with the ones already 
conducted, they were driven around the validation or 
proposal of a migration process or order to classify the 
approaches in general. The approach proposed in this 
systematic mapping aims to present an updated classification 
based on academic and technological aspects. To achieve 
this purpose the research questions were adapted to 
encompass both aspects. A more detailed comparison can be 
made in a tertiary study. 
V. 
CONCLUSIONS AND FUTURE WORK   
The aim of this study was to classify and give an 
overview of SOA use in the rejuvenation of legacy software. 
919 primary studies obtained in search databases widely 
used in the field of Software Engineering were analyzed. 17 
other publications were obtained through manual searches on 
a reference list in conjunction with conducting searches on 
Brazilian Public Domain Portal. 
From 936 publications found, 47 were selected for 
analysis which were classified according to six research 
questions to establish technical and scientific overview 
updated of the use of SOA in legacy modernization. 
The results indicate that migration strategies are the most 
commonly used, followed by encapsulation techniques. The 
results also showed that in studies that addressed migration 
the predominant theme in the studies is to propose processes 
or methodologies that support or guide the migration 
projects.  
Regarding the type of system or language in which the 
modernized system was developed, most publications that 
presented this information were related to systems developed 
in the Java programming language, the second largest 
representation was developed in COBOL systems, followed 
by legacy web. This may indicate the difficulty in disposing 
of old COBOL systems, justifying the investment in its 
rejuvenation. 
On the feasibility analysis in research involving 
rejuvenating legacy systems using SOA, it was found that 
approximately 23.4% of publications used a process or 
method owned by the author to perform feasibility studies 
indicating a concern with these activities. However, a critical 
result is that approximately 61.70% of the total publications 
made no reference to analysis or feasibility study to choose 
SOA to modernize legacy software. 
On the analysis of each contribution, the results show 
that the publications that contributed to some kind of 
process, prioritized guides for modernization tasks, being 
followed by publications to assist in decision-making on 
188
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

technical feasibility and the identification of services from 
legacy 
systems, 
while 
publications 
that 
contributed 
methodologies have mostly focused on identifying services. 
Regarding the validation of each study, the results 
showed that those who used the business environment to 
implement the use cases, chose majoritary banking and 
financial sectors while the experimental validations 
dominates the use cases on open source projects in general. 
The results showed that the applications in Java or 
object-oriented already represent a significant number of 
legacy systems in operation. Migration techniques are easily 
applied to make this systems service oriented.  
The following itens are the main threats to the validity of 
the results of  this study:  
(i) Although recommended, manual searches depend on 
too the opinion of mapping drivers and may lead to biased 
results. 
(ii) A decrement factor in the validity of the research lies 
in the limitations imposed by the search engines of digital 
research sources that limiting the replication for future work. 
The related studies have shown the presence of other 
secondary studies on similar topics. Thus, it is proposed for 
future work, to conduct a tertiary review to take a more 
global result of the use of services in the rejuvenation of 
legacy systems. 
REFERENCES 
[1] 
A. Fuhr, T. Horn, V. Riediger, and A. Winter, “Model-
driven 
software 
migration 
into 
service-oriented 
architectures,” Comput. Sci. …, vol. 49, no. 261, pp. 65–
84, Jun. 2013. 
[2] 
M. Book, S. Grapenthin, and V. Gruhn, “Risk-aware 
Migration of Legacy Data Structures,” 2013 39th 
Euromicro Conf. Softw. Eng. Adv. Appl., pp. 53–56, Sep. 
2013. 
[3] 
Z. Zhang, D.-D. Zhou, H.-J. Yang, and S.-C. Zhong, “A 
service composition approach based on sequence mining 
for migrating e-learning legacy system to SOA,” Int. J. 
Autom. Comput., vol. 7, no. 4, pp. 584–595, Nov. 2010. 
[4] 
Y. 
Liu, 
Q. 
Wang, 
M. 
Zhuang, 
and 
Y. 
Zhu, 
“Reengineering Legacy Systems with RESTful Web 
Service,” 2008 32nd Annu. IEEE Int. Comput. Softw. 
Appl. Conf., no. 2100219007, pp. 785–790, 2008. 
[5] 
J. Guo, “Software reuse through re-engineering the legacy 
systems,” Inf. Softw. Technol., vol. 45, no. 9, pp. 597–609, 
Jun. 2003. 
[6] 
A. A. Almonaies, J. R. Cordy, and T. R. Dean, “Legacy 
system evolution towards service-oriented architecture,” 
in International Workshop on SOA Migration and 
Evolution, 2010, pp. 53–62. 
[7] 
R. Khadka, A. Saeidi, S. Jansen, and J. Hage, “A 
structured legacy to SOA migration process and its 
evaluation in practice,” 2013 IEEE 7th Int. Symp. Maint. 
Evol. Serv. Cloud-Based Syst., pp. 2–11, Sep. 2013. 
[8] 
M. Razavian and P. Lago, “A lean and mean strategy for 
migration to services,” Proc. WICSA/ECSA 2012 
Companion Vol. - WICSA/ECSA ’12, p. 61, 2012. 
[9] 
S. Ali and S. Abdelhak-Djamel, “Evolution approaches 
towards a Service oriented architecture,” 2012 Int. Conf. 
Multimed. Comput. Syst., pp. 687–692, May 2012. 
[10] 
K. Petersen, R. Feldt, S. Mujtaba, and M. Mattsson, 
“Systematic mapping studies in software engineering,” 
12th Int. Conf. Eval. Assess. Softw. Eng., pp. 71–80, 2008. 
[11] 
F. da Silva, A. Santos, and S. Soares, “A critical appraisal 
of systematic reviews in software engineering from the 
perspective of the research questions asked in the 
reviews,” Proc. 2010 ACM-IEEE Int. Symp. Empir. Softw. 
Eng. Meas. - ESEM ’10, p. 1, 2010. 
[12] 
B. Kitchenham, T. Dybå, and M. Jørgensen, “Evidence-
based software engineering,” Int. Conf. Softw. Eng., vol. 
26, 2004. 
[13] 
J. Biolchini, P. G. Mian, Ana Candida Cruz Natali, and G. 
H. Travassos, Systematic Review in Software Engineering, 
no. 
May. 
Technical 
Report 
RT 
- 
ES 
679/05: 
COPPE/UFRJ/Programa de Engenharia de Sistemas e 
Computação/Rio de Janeiro-RJ, 2005. 
[14] 
M. G. D. S. Neto, SOA on Legacy Software 
Modernization: A Systematic Mapping Study. CESAR-
edu/MPES/Recife-PE: Master Thesis, 2014. 
[15] 
R. L. Novais, A. Torres, T. S. Mendes, M. Mendonça, and 
N. Zazworka, “Software evolution visualization: A 
systematic mapping study,” Inf. Softw. Technol., vol. 55, 
no. 11, pp. 1860–1883, Nov. 2013. 
[16] 
A. Shahrokni and R. Feldt, “A systematic review of 
software robustness,” Inf. Softw. Technol., vol. 55, no. 1, 
pp. 1–17, Jan. 2013. 
[17] 
H. P. Breivold, I. Crnkovic, and M. Larsson, “A 
systematic review of software architecture evolution 
research,” Inf. Softw. Technol., vol. 54, no. 1, pp. 16–40, 
Jan. 2012. 
[18] 
M. a. Laguna and Y. Crespo, “A systematic mapping 
study on software product line evolution: From legacy 
system reengineering to product line refactoring,” Sci. 
Comput. Program., vol. 78, no. 8, pp. 1010–1034, Aug. 
2013. 
[19] 
M. P. Barcelos, “A strategy for software measurement and 
evaluation of base measures to control statistical software 
processes in high-maturity organizations,” Doctoral 
Dissertation, UFRJ/COPPE/Systems Engineering and 
Computing Program, Rio de Janeiro - RJ, 2009. 
[20] 
M. A. Montoni, “An investigation on the critical success 
factors in software process improvement initiatives,” 
Doctoral 
Dissertation, 
UFRJ/COPPE/ 
Systems 
Engineering and Computing Program, Rio de Janeiro - RJ, 
2010. 
[21] 
B. Kitchenham, Guidelines for performing systematic 
189
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

literature reviews in software engineering. Technical 
Report RT - EBSE-2007-01: Keele University and 
Durham University Joint Report, 2007. 
[22] 
F. Q. B. da Silva, M. Suassuna,  a. C. C. França, A. M. 
Grubb, T. B. Gouveia, C. V. F. Monteiro, and I. E. dos 
Santos, “Replication of empirical studies in software 
engineering research: a systematic mapping study,” 
Empir. Softw. Eng., vol. 19, no. 3, pp. 501–557, Sep. 
2012. 
[23] 
H. Sneed, “Planning the reengineering of legacy systems,” 
Software, IEEE, no. January, 1995. 
[24] 
M. Razavian and P. Lago, “A frame of reference for SOA 
migration,” Towar. a Serv. internet, pp. 150–162, 2010. 
[25] 
R. Khadka, A. Saeidi, and A. Idu, “Legacy to SOA 
Evolution: A Systematic Literature Review,” Migrating to 
SOA …, 2012. 
 APPENDIX A. PRIMARY STUDY 
TABLE IX. SELECTED PAPERS 
ID 
PUBLICATION 
S1 
Cuadrado, Félix, et al. "A case study on software evolution towards service-oriented 
architecture." Advanced Information Networking and Applications-Workshops, 2008. 
AINAW 2008. 22nd International Conference on. IEEE, 2008. 
S2 
Almonaies, Asil A., et al. A framework for migrating web applications to web 
services. Springer Berlin Heidelberg, 2013. 
S3 
Baghdadi, Youcef, and Wisal Al-Bulushi. "A guidance process to modernize legacy 
applications for SOA." Service Oriented Computing and Applications9.1 (2015): 41-
58. 
S4 
Razavian, Maryam, and Patricia Lago. "A lean and mean strategy for migration to 
services." Proceedings of the WICSA/ECSA 2012 Companion Volume. ACM, 2012. 
S5 
Khadka, Ravi, et al. "A method engineering based legacy to SOA migration 
method." Software Maintenance (ICSM), 2011 27th IEEE International Conference 
on. IEEE, 2011. 
S6 
Sosa, Encarna, et al. "A model-driven process to modernize legacy web applications 
based on service oriented architectures." Web Systems Evolution (WSE), 2013 15th 
IEEE International Symposium on. IEEE, 2013. 
S7 
Zhang, Zhuo, et al. "A service composition approach based on sequence mining for 
migrating e-learning legacy system to SOA." International Journal of Automation 
and Computing 7.4 (2010): 584-595. 
S8 
Alahmari, Saad, Ed Zaluska, and David De Roure. "A service identification 
framework for legacy system migration into SOA." Services Computing (SCC), 2010 
IEEE International Conference on. IEEE, 2010. 
S9 
Zhang, Zhuo, et al. "A soa based approach to user-oriented system migration." 
Computer and Information Technology (CIT), 2010 IEEE 10th International 
Conference on. IEEE, 2010. 
S10 
Khadka, Ravi, et al. "A structured legacy to SOA migration process and its 
evaluation in practice." Maintenance and Evolution of Service-Oriented and Cloud-
Based Systems (MESOCA), 2013 IEEE 7th International Symposium on the. IEEE, 
2013. 
S11 
Chenghao, Guo, Wang Min, and Zhou Xiaoming. "A wrapping approach and tool for 
migrating legacy components to web services." Networking and Distributed 
Computing (ICNDC), 2010 First International Conference on. IEEE, 2010. 
S12 
Li, Han, et al. "AN EVOLUTION SCHEME FOR BUSINESS RULE BASED 
LEGACY SYSTEMS." Journal of Theoretical & Applied Information 
Technology 47.1 (2013). 
S13 
Lewis, Grace, Edwin Morris, and Dennis Smith. "Analyzing the reuse potential of 
migrating legacy components to a service-oriented architecture.l. IEEE, 2006. 
S14 
LARENTIS, Andrêsa Vargas. Aruba: Uma Arquitetura para Geração de Serviços a 
partir de Sistemas Legados de forma não intrusiva. 2007. 135 f. Universidade do 
Vale do Rio dos Sinos, 2007. 
S15 
Rodriguez, Juan Manuel, et al. "Bottom-up and top-down Cobol system migration to 
web services." Internet Computing, IEEE 17.2 (2013): 44-51. 
S16 
Sneed, Harry M. "COB2WEB a toolset for migrating to web services." Web Site 
Evolution, 2008. WSE 2008. 10th International Symposium on. IEEE, 2008. 
S17 
Leotta, Maurizio, et al. "Comparing the Maintainability of two Alternative 
Architectures of a Postal System: SOA vs. non-SOA." Software Maintenance and 
Reengineering (CSMR), 2011 15th European Conference on. IEEE, 2011. 
S18 
Zhang, Zhuopeng, Hongji Yang, and William C. Chu. "Extracting reusable object-
oriented legacy code segments with combined formal concept analysis and slicing 
techniques for service integration." Quality Software, 2006. QSIC 2006. Sixth 
International Conference on. IEEE, 2006. 
S19 
Athanasopoulos, Michael, and Kostas Kontogiannis. "Identification of rest-like 
resources from legacy service descriptions." Reverse Engineering (WCRE), 2010 
17th Working Conference on. IEEE, 2010. 
S20 
Sneed, Harry M. "Integrating legacy software into a service oriented 
architecture." Software Maintenance and Reengineering, 2006. CSMR 2006. 
Proceedings of the 10th European Conference on. IEEE, 2006. 
S21 
Zhou, Nianjun, et al. "Legacy asset analysis and integration in model-driven soa 
solution." Services Computing (SCC), 2010 IEEE International Conference on. 
IEEE, 2010. 
S22 
Huang, Yen-Chieh, and Chih-Ping Chu. "Legacy System User Interface 
Reengineering Based on the Agile Model Driven Approach." Recent Advances in 
Computer Science and Information Engineering. Springer Berlin Heidelberg, 2012. 
309-314. 
S23 
Matos, Carlos, and Reiko Heckel. "Legacy transformations for extracting service 
components." Rigorous software engineering for service-oriented systems. Springer 
Berlin Heidelberg, 2011. 604-621. 
S24 
Sneed, Harry M., Stefan Schedl, and Stephan H. Sneed. "Linking legacy services to 
the business process model." Maintenance and Evolution of Service-Oriented and 
Cloud-Based Systems (MESOCA), 2012 IEEE 6th International Workshop on the. 
IEEE, 2012. 
S25 
Gedela, Ravi Kumar, et al. "Maximizing the business value from silos: Service based 
transformation with service data models." India Conference (INDICON), 2011 
Annual IEEE. IEEE, 2011. 
S26 
Khadka, Ravi, et al. "Migrating a large scale legacy application to SOA: Challenges 
and lessons learned." Reverse Engineering (WCRE), 2013 20th Working Conference 
on. IEEE, 2013. 
S27 
Canfora, Gerardo, et al. "Migrating interactive legacy systems to web 
services." Software Maintenance and Reengineering, 2006. CSMR 2006. 
Proceedings of the 10th European Conference on. IEEE, 2006. 
S28 
Alahmari, Saad, Ed Zaluska, and David De Roure. "Migrating Legacy Systems to a 
Service-Oriented Architecture with Optimal Granularity." (2010). 
S29 
Matos, Carlos, and Reiko Heckel. "Migrating legacy systems to service-oriented 
architectures." Electronic Communications of the EASST 16 (2009). 
S30 
Millham, Richard. "Migration of a legacy procedural system to service-oriented 
computing using feature analysis." 2010 International Conference on Complex, 
Intelligent and Software Intensive Systems. IEEE, 2010. 
S31 
Sheikh, M. A. A., Hatim A. Aboalsamh, and Ahmed Albarrak. "Migration of legacy 
applications and services to Service-Oriented Architecture (SOA)." Current Trends in 
Information Technology (CTIT), 2011 International Conference and Workshop on. 
IEEE, 2011. 
S32 
Aversano, Lerina, Luigi Cerulo, and Ciro Palumbo. "Mining candidate web services 
from legacy code." Web Site Evolution, 2008. WSE 2008. 10th International 
Symposium on. IEEE, 2008. 
S33 
Fuhr, Andreas, et al. "Model-driven software migration into service-oriented 
architectures." Computer Science-Research and Development 28.1 (2013): 65-84. 
S34 
Vemuri, Prasad. "IEEE TENCON-2008 Modernizing a legacy system to SOA-
Feature analysis approach." TENCON 2008-2008 IEEE Region 10 Conference. IEEE, 
2008. 
S35 
Knight, Daniel P. "Overhauling legacy enterprise software applications with a 
Concept Refinement Process Model." (2013). 
S36 
Liu, Yan, et al. "Reengineering legacy systems with RESTful web service."Computer 
Software and Applications, 2008. COMPSAC'08. 32nd Annual IEEE International. 
IEEE, 2008. 
S37 
Pérez‐Castillo, Ricardo, et al. "Software modernization by recovering Web services 
from legacy databases." Journal of Software: Evolution and Process25.5 (2013): 
507-533. 
S38 
Arsanjani, Ali, et al. "SOMA: A method for developing service-oriented 
solutions." IBM systems Journal 47.3 (2008): 377-396. 
S39 
Razavian, Maryam, et al. "The SAPIENSA approach for service-enabling pre-
existing legacy assets." SOAME 2010 (2010): 21-30. 
S40 
Zillmann, Christian, et al. "The SOAMIG Process Model in Industrial 
Applications." CSMR. 2011. 
S41 
Bellini, Alexandre, Antonio Francisco do Prado, and Luciana Aparecida Martinez 
Zaina. "Top-down approach for web services development." Internet and Web 
Applications and Services (ICIW), 2010 Fifth International Conference on. IEEE, 
2010. 
S42 
Salvatierra, Gonzalo, et al. "Towards a computer assisted approach for migrating 
legacy systems to SOA." Computational Science and Its Applications–ICCSA 2012. 
Springer Berlin Heidelberg, 2012. 484-497. 
S43 
Razavian, Maryam, and Patricia Lago. "Towards a conceptual framework for legacy 
to soa migration." Service-Oriented Computing. ICSOC/ServiceWave 2009 
Workshops. Springer Berlin Heidelberg, 2010. 
S44 
Kijas, Szymon, and Andrzej Zalewski. "Towards Evolution Methodology for 
Service-Oriented Systems." New Results in Dependability and Computer Systems. 
Springer International Publishing, 2013. 255-273. 
S45 
Marchetto, Alessandro, and Filippo Ricca. "Transforming a java application in an 
equivalent web-services based application: toward a tool supported stepwise 
approach." 2008 10th International Symposium on Web Site Evolution. 2008. 
S46 
Fuhr, Andreas, Tassilo Horn, and Volker Riediger. "Using dynamic analysis and 
clustering for implementing services by reusing legacy code." Reverse Engineering 
(WCRE), 2011 18th Working Conference on. IEEE, 2011. 
S47 
Sonntag, Mirko, et al. "Using services and service compositions to enable the 
distributed execution of legacy simulation applications." Towards a Service-Based 
Internet. Springer Berlin Heidelberg, 2011. 242-253. 
 
190
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

