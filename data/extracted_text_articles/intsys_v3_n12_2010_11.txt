Distributed Smart Spaces M3 Platform for Building Professional Social Networks
with Seamless PCs and Mobile Access
Sergey Balandin, Ian Oliver, and Sergey Boldyrev
Ubiquitous Architectures team, Helsinki lab
Nokia Research Center, Nokia
Itamerenkatu 11-13, 00180 Helsinki, Finland
{Sergey.Balandin, Ian.Oliver, Sergey.Boldyrev}@nokia.com
Abstract — this paper proposes the social network solution
that has been designed to fit equally well for use at mobile
devices, PCs and even other types of consumer electronics.
This solution is targeted to become a core element of the
personal knowledge space and the design has be been done on
top of M3 smart space. Target of this paper is to improve and
to expand the understanding of the Smart Spaces concept by
the R&D community. Through the identification of key
properties based on an analysis of evolving trends brought to
us by the great convergence in the ICT industry. Based on that
we show how this trend will affect adoption of Smart Spaces. It
is especially important to understand how Smart Spaces can
change the whole services ecosystem and the role that mobile
and other types of user surrounding devices will play. The
Smart Space concept can be described as a permanent robust
infrastructure to store and retrieve information of various
types from a
broad spectrum of
different
environment
participants. This concept can provide better user experience
by allowing a user to bring flexibly to the new devices and
access all the information in the multi device system from any
device. Based on that the resulting social network solution will
be able to pre- and post-process the collected information and
perform efficient reasoning over and organization of the data.
Another key advantage of the proposed social network is that it
is
primary
targeted
to
support
professional
social
communications within a geo-distributed teams working on the
same project. For that the solution proposes a flexible and
easily extendable set of additional services, such as a variety of
conference call and virtual meeting services with logging
service, sharable whiteboard, automatic maintenance of action
point lists and calendars and so on. As a result the service
provides users with completely new experience.
Keywords-social networks for mobile devices, smart spaces;
M3; supporting distributed R&D projects.
I.
INTRODUCTION
This paper is based on the conference paper presented at
Ubicomm
2009
conference
[1].
Social
networks
are
attracting more and more Internet users and soon the
absolute
majority
of
the
Internet
users
will
have
a
membership at least in one social network and so social
networks become the most demanded type of service in the
Internet. Also we have to take into account that in Japan
already in 2005 the number of mobile users exceeded PC
connections [2] and starting from second half of 2008, the
world-wide number of new users connected to Internet
through mobile devices is growing faster than users with a
classical access from the PCs. This creates a strong demand
for a social network solution that equally well fits for use
from PCs and mobile devices.
At the same time the new information age mandates
development of a permanent robust infrastructure to store
and retrieve information of various types from a broad
spectrum
of
different
network
participants.
The
environments that fulfill such requirement are called “smart
spaces” and assume presence of a number of devices that use
shared view of the resources and services. The smart spaces
can provide better user experience by allowing a user to
bring flexibly to the new devices and access all the
information in the multi device system from any device. The
challenge of providing consistent information in a smart
space is that the resources are distributed over several
physical devices and the information consumption is not
always happening at the same device where the information
is located.
Recently we observed an emergence of the smart space
technologies, which are truly mobile by the definition of
their nature and allow equally efficient design of applications
for PC and mobile devices. An example of such smart spaces
platform is Multipart, Multidevice and Multivendor (M3)
platform
[3][4][5],
which
has
been
developed
by
a
consortium of companies lead by Nokia. It gives the user a
great flexibility in design and easy to use tools for
personalizing the user account and access application as
much as user wants. We believe that by designing social
network platform on top of M3 we will provide a user with
the new truly mobile social network experience and allow
integration of social network’s information flow with other
information flows going via the mobile device and PCs of
the user, while keeping all personal data under full physical
control of the owner.
Despite a huge number of mobile Internet users,
nowadays there is no widely known social network solution
that has been specifically designed for mobile use. So when
nowadays the mobile user wants to be socially networked
he/she cannot get this service or in the best case is forced to
use the PC client adopted for mobile device. As a
consequence
this
creates
a
lot
of
problems
and
inconveniences for the user.
The most visible problem is inefficient User Interface
(UI), which is usually the scaled down version of PC client
UI with some functional cuts comparing to the PC version.
141
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Moreover
this
UI
cannot
take
into
account
personal
preferences and restrictions of the user and as a result most
social network users use the mobile client rarely and only
when they do not have other alternatives, which definitely is
an unacceptable situation. It would be great if the user gets a
possibility to easily build personalized client UI out of the
provided library of blocks and when needed easily to make
even completely new blocks or blocks with the inherited
functionality.
Some other key problems are placed deeply in the
architectural principles of the currently available social
network solutions. All of them have been designed as stand
alone applications for usage on PC, with client-server
principles in mind and data archive stored as a repository of
short text messages. It has resulted in the monolithic
architecture
of
the
social
network
client,
platform
dependency, lack of flexibility in selecting location of the
data repository, and over-complicated (often even fully
forbidding) schemes of information sharing, reasoning over
and joint use of the collected data in cooperation with other
services.
For example, nowadays people share a lot of personal
information via social networks and the fact that this
information belongs to the social network host makes more
and more people to consider limiting their activities in social
networks, even if they see a value of the service, but at some
point the privacy issues start to dominate. Another pity fact
is that the huge amount of personal and community
information is stored in the system without efficient use,
while by applying to it methods of automatic data reasoning
would open door for provision of a number of additional
services.
In order to further support growth of social network
services and allow their equally efficient use from all types
of devices, a new solution has to be proposed. The next
section provides general description of Smart-M3 smart
space reference model. After that we give the basic definition
of the new social networks solution, which is followed by a
description of one possible implementation of it on top of
Smart-M3. At the end of paper we provide a set of key
conclusions of this study and a list of references.
II.
M3 SMART SPACE REFERENCE MODEL
In the book by Diane Cook and Sajal Das the following
formal definition of Smart Spaces is given: “Smart Space is
able to acquire and apply knowledge about its environment
and to adapt to its inhabitants in order to improve their
experience in that environment” [6][7]. This definition
assumes
continues
interaction
of
the
user
with
the
surrounding environment that is targeted in continuous
adaptation of the services to the current needs of the user.
This interaction is enabled by sensing functionality that
gathers information about the space and the user; adaptation
functionality for reacting to the detected changes; and
effecting functionality for changing the surrounding space to
benefit the user. Based on the definition the main focus of
Smart Spaces is on the user. The general view of the Smart
Spaces hierarchy is depicted by Figure 1.
Figure 1.
Hierarchical layers of Smart Spaces with user in the center.
Obvious key concepts for any Smart Space are mobility,
distribution and context awareness. These are addressed by
the recent advances in wireless networking technologies as
well as processing and storage capabilities, which have
moved mobile and consumer electronics devices beyond
their traditional areas of applications and allow their use for
a broader scope of services. The significant computing
power and high-speed data connections of the modern
mobile
devices
allow
them
to
become
information
processing and communication hubs that perform rather
complex computations locally and distribute the results.
This lets multiple devices interact with each other and form
ad-hoc
dynamic,
distributed
computation
platforms.
Together, they form a space where via a number of wireless
technologies the users can access a huge variety of services.
Similarly, existing and future services form spaces that cater
for a variety of needs ranging from browsing to interactive
video conversations. These services surround the user all the
time and have access to large amounts of data. Over time
they can learn the users’ needs and personal preferences,
making it possible to build even more advanced services
that proactively predict those needs and propose valuable
services in the given environment before the users realize it
themselves. These layers, each of which can utilize a
number of technologies form a smart environment (Smart
Space). A further important aspect is that Smart Spaces
improve the interaction between users and their physical
environments, allowing more efficient consumption of
available resources such as energy. Examples of the existing
smart space solutions can be found in [8][9].
Based
on
the
analysis
of
existing
smart
space
environments one can notice that the essential features
demanded from all these systems is that they should provide
permanent
robust
infrastructure
to
store
and
retrieve
information of different kinds from the multitude of
142
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

different types of the environmental actors. For example one
can see the personal space as a framework to interact,
manipulate and share information represented using own
local semantics.
For the later discussed class of the smart space solutions
the following assumptions have been made.
-
The
key
concepts
for
smart
space
are
mobility,
distribution and context awareness.
-
The user interacts with a space using multiple agents,
where
each
agent
implements
certain
atom
of
functionality and services and applications are built as a
combined functionality of one or more agents.
-
The core of space is information storage A, on top of
which reasoning and deductive closure methods create
corpus R(A).
-
The space information storage and agents are distributed
and located on a multitude of devices.
-
The user can simultaneously interact with many discrete
spaces.
Based on the above defined principles the high-level
definition of the target smart space reference model can be
illustrated by Figure 2.
Figure 2.
The reference model of Smart-M3 smart space.
On top of this reference model the Smart-M3 solution
has been created. Smart-M3 is an interoperability platform
that provides mechanisms to share information expressed
using
RDF.
The
platform
consists
of
a
Semantic
Information Broker (SIB) that stores the information, and
Knowledge Processors (KP) that acts as agents and can
insert, remove, query and subscribe to information. Figure 3
shows a simple functional architecture of Smart-M3.
Figure 3.
The model of simple functional architecture of Smart-M3.
The information is stored in Smart-M3 according to
some standardized or otherwise agreed ontology. But it is
important to note that Smart-M3 doesn’t require global
ontological alignment, instead only local alignment is
required. Information sharing helps the participating KPs in
gathering relevant context information, which leads to more
efficient operation and allows innovative multi-device use
cases. During the lifetime SIBs goes through multiple cycles
of merge and split operations and the user at the same time
could
participate
in
multiples
spaces.
The
physical
representation of Smart-M3 reference model is shown by
Figure 4.
Figure 4.
Physical representstion of the reference model of Smart-M3.
Where:
I/F is an interface - that provides information exchange
between the nodes and information storages. The interface is
considered to be fully reliable and does not create additional
delay and energy overheads. In this reference model the
interface performs a technical function of connecting nodes
to information storages. It does not implement logical
functions and does not affect information transfer costs. For
this
reason
the
interface
is
not
considered
in
the
mathematical model.
Information storages - are also logical units that can be
located at several devices and several information storages
can be located on one device.
Nodes - are logical elements capable to perform certain
actions. One node can be located at several physical devices
and several nodes can be located at one device.
Information is described by information units (IU) -
represented as logical expressions: “subject”-“predicate”-
“object” = [true | false], where subject is an actor (human or
node that performs certain actions), predicate is an action
that is being performed or supposed to be performed (e.g.,
“playing music”) and object is what the action is performed
with (e.g., a song being played). The nodes have predefined
behavior rules defining their actions in line with the
received information units.
Based on that the Smart-M3 smart space can consist of
the
multiple,
individual
autonomous
spaces,
with
information distributed over multiple devices, including
embedded solutions, OVI, PC, mobile, etc., as is shown in
Figure 5
143
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 5.
The extended reference model of Smart-M3 smart space.
In a nutshell, the Smart-M3 smart space consists of one
or several SIBs. The rules of information usage (user
applications) are implemented in KP connected to the smart
space via SIBs. The SIBs are responsible for storing smart
space information and its sharing. As soon as an information
unit becomes available for the SIB, it becomes available for
every KP.
As it is mentioned earlier, Knowledge Processors (KPs)
are responsible for information processing. In fact the
Smart-M3 applications emerge as a combination of one or
multiple KPs connected to the corresponding information in
the SIBs as illustrated by Figure 6.
Figure 6.
Smart-M3 applications emerge as a combination of KPs
connected to SIBs.
It is important to note that the same KP might contribute
to the functionality of more than one application. This
architecture allows developing new and multiplying existing
application with functionality needed for solving current
user needs. Also this solution gives developers the great
flexibility for deep customization of the application with the
minimum overhead, as in most cases the functionality of
question can be achieved by changing only one or few KPs,
without touching the rest of the application. Altogether the
above described features provides the great basis for
developing efficient and flexible solutions for different
types of user devices, which is exactly what is needed when
one think about social network solutions.
III.
DESCRIPTION OF THE PROPOSED SOLUTION
To start let’s see what are the main differentiators and
advantages of building social network on top of Smart-M3
comparing to the traditional social network architectures:
1) The internal structure of social network node can be
illustrated by the scheme presented in Figure 7.
Figure 7.
Organization of personal smart space: structure of the social
network node.
The proposed social network solution is organized based
on peer-to-peer principle (note that here peer-to-peer only
refers to the general architectural principle, as oppose to
client-server architecture), when all personal data is stored in
the space that is under physical control of the owners. So
every peer node can be seen as a personal space of the user,
which could be physically distributed over a number of
devices of different types, e.g., PCs, mobile devices, public
and personal data storages, etc. The key feature of each node
is that the underlying platform provides a user with the same
access capabilities to all elements of the personal data from
any device that he/she entered to the personal Smart Space.
2) The social network solution is based on use of
Semantic Information Brokers (SIB), which integrates it with
other services and information available in the SIB and
makes it equally efficient for use from PC and mobile
device. Every user has his/her own space, called Personal
Smart Space, as is shown in Figure 7. When users decide to
become friends in the social network, they not just exchange
view/edit access rights to the information pages of each
other, but allow real sharing of a certain part of personal
space with the new friend peer. This way a group Social
Space is created as a merge of certain parts of the personal
spaces of group members, where the group members could
KP 3
Information
KP 1
KP 4
Application 1
Application 2
KP 2
KP 3
Information
KP 1
KP 4
Application 1
Application 2
KP 2
144
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

be individuals and other already existing user groups, as it is
illustrated in Figure 8.
Figure 8.
Building social spaces of the friend users as a merge of their
personal smart spaces.
Within Smart-M3 definitions the new Social Space is
created as a merge of projections of the information sets that
the users have decided to share with a given peer (on Figure
4 these spaces are shown by dashed lined ovals). Note that
the proposed solution allows user to differentiate friends as
much as he/she wants, not restricted by the rules defined by
the social network’s host. The user can share a lot of
personal data with best friends, work related materials with
colleagues and the sets of shared information could be
completely isolated from each other, or have partial or full
overlapping. Also the social space can be expanded to as
many users as needed and so the larger group’s social space
will be created, or alternatively the peers’ social spaces can
enter into a larger group’s space still preserving autonomy.
3) The proposed solution provides great flexibility in
defining social network client. The client application is a
combination of the M3 applications (hereafter, knowledge
processor or KP), which can be seen as a bricks for providing
users
with
the
exact
functionality
that
is
demanded.
Remember that physically any KPs can be located at any
device. It is only demanded that they all are connected to the
personal social space, i.e., to the user node. Such architecture
gives great flexibility for adoption to the actual capabilities
of the host device, personalization of the social network
client, which includes functional and UI parts. The basic
architecture and work principles of the resulting client
application can be illustrated by Figure 9.
Figure 9.
Architecture of the social network client application.
For example, the set of basic configuration definitions of
the social network client application can be provided as a
part of default distribution package. Then on top of this basic
functionality every user can personalize the client by adding
KPs that customize functionality and UI. For examples, the
additional KPs can be visible on UI, as it is illustrated on
Figure 9 by KPs that implement and output “Calendar,
Reminder” and “BBC News RSS” functionality for User 1
and “List of friends online” and “switch to another active
chat” for User 2. Other KPs can be invisible and used for
performing some background actions with the collected data.
For example, the user can add KP for performing reasoning
over information extracted from SMS and chat engine of the
social network, to define what social events in the town
might be of a mutual interest for the selected group of
friends. Another KP might take care of the smart delivery of
important messages to the selected friends, i.e., taking into
account all user preferences, especially those that have not
been explicitly specified, but obtained from reasoning over
user’s behavior using all devices and applications in Smart-
M3, and so on.
Taking into account the above described advantages of
Smart-M3 as a platform for social network we decided to
make the first social network application of this type as a
framework for establishing professional social networks and
supporting all-time cooperation in the distributed R&D
projects. This idea comes to our mind, while looking for a
solution to facilitate joint work in multi-site projects, we
have discovered that none of the existing solutions cover this
niche. In fact all the basic modules as in place, e.g., VOIP
and shared data repositories, social networks of friends, like
LinkedIn and Facebook, but you will not be able to find
efficient and easy-to-use framework that bridges all these
145
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

modules for not only getting all these services via the same
application, but most importantly to benefit from data flows
and capabilities of all involved modules. Nowadays in most
cases such bridging is performed by the user, but the
automated intelligent solution is strongly demanded. The
required solution should be easily accessible from all user
devices, e.g., PCs and mobile devices and the state of project
activities including UI and database settings must follow
user’s migration between the devices. Also a lot of new
services such as short voice messages, shared touch-screen
whiteboard for participants of teleconference and so on, have
to be introduced.
An important feature of target system is that by
introducing additional KPs the user should be able to link
accounts and services of other social networks into the
created framework. So the developed social network client
(similarly as it is illustrated in Figure 6 for BBC News RRS)
can be an interface and the data processing module for all
social networks where the user is registered. As a result the
user can use one application and smoothly move his/her
social life to the most personalized and appropriate form.
IV.
IMPLEMENTATION
As it is described in the previous section, the Social
Spaces are defined as a merge of the projections of
information sets that the users have decided to share with the
given sets of peer nodes. The main consequence of it is that
the solution does not require social network-wide definition
of the data ontology. Instead every user can stay within the
scope of the personal smart space ontology definition and the
required commonality will be achieved at the level of joint
use of the projections.
The social network client is defined as a Smart-M3
application
and
consists
of
a
number
of
knowledge
processors
that
perform
designated
operations
over
information in the personal and groups’ social spaces and
allow access to the service from PCs, and Symbian and
MAEMO mobile devices. In this chapter we define only the
basic set of KPs and provide high level description of the
corresponding operational sequence diagrams required for
the service. But as it has been discussed before, one of the
key benefits of the proposed solution is that any user will be
able to personalize social network client as much as he/she
wants and correspondingly the number and variety of the
related KPs will grow with the time and even the below
described basic set is a subject for continuous updates and
modifications.
And before diving into details of the social network
solution implementation it is important to say a few words
about the underlying development platform. Currently
available Smart-M3 open source release contains KP APIs
for C/GLib, Python, and Qt/C++. The KPs can be connected
to SIB by using either TCP/IP or NoTA H_IN protocol.
Eventually
more
support
for
different
programming
languages and connectivity mechanisms are in the to-be-
added plan. There is also an ontology library generator for
C/GLib API that allows developers to program using
ontology
concepts
instead
of
using
Smart-M3
basic
operations and RDF. Ontology library generators for other
languages are also forthcoming.
The most recent version of Smart-M3 M3/Sedvice
services development platform is available to all developers
under open license [10].
The default package of the developed Smart-M3 social
network
client
consists
of
the
following
Knowledge
Processors:
1) Manager of Social Spaces. This KP is responsible for
creating new social spaces for user groups and maintaining
the list of available social spaces. This is a key functionality
as it allows any user create personalized hierarchy of the
social spaces around. For example, one can have space for
family, elementary school classmates, university classmates,
work colleagues and so on. It is clear that these spaces can
have certain overlapping, as the same person could be your
university classmate and wife. Also when a new peer is
identified the user needs to define whether to add it to the
existing social space, or create a new space from the scratch
or as an extension of another already existing space. On top
of this KP allows to search the space by using either peer-to-
peer principle or via special “open communities formation”
registration servers, which contain only user ID details and
basic details how to contact user, but all actual content is on
the user side. The example implementation of this KP is
presented in the sequence diagram format in Figure 10.
Figure 10. Sequence diagram of the Manager of Social Spaces.
2) Social Space communicator. This KP defines all basic
queries, subscription methods, handling of collisions and
information access rights in a given social space for each
person and group. It also provides the user with a set of basic
“must to have” services, e.g., the chat client, sharable
calendar and organizer, file exchange, image sharing, white
board, etc. In fact this client defines the basic common set of
services that should be available for all members of the smart
space
and
guaranties
that
the
basic
communication
mechanisms are in place. One can see it as an internal
translator KP that transforms complex functionalities of
146
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

various services into a sequence of primitive queries. The
sequence diagram for the corresponding KP implementation
is presented in Figure 11.
Figure 11. Sequence diagram of the Social Space communicator.
3) Social Space client UI for PC. This KP defines the
default user interface of the developed social network client
for PCs. It handles recognition of the user requests and
actions and forwards corresponding commands to the service
processing KPs. The sequence diagram of the corresponding
implementation of PC UI KP is presented in Figure 12.
Figure 12. Sequence diagram of the Social Space Client UI for PCs.
Please note that the set of basic services defined in the
figure above is just an initial basic set, which later based on
users’ feedback will be extended by the new services.
4) Social Space client UI for mobile devices, e.g., for
Symbian/MAEMO. The KP defines the default user interface
layout of the developed social network client for Symbian
mobile devices. Similar KP for MAEMO platform is
currently under development and the solution can be easily
extended to any other mobile platforms, which requires
implementing only more of the same type of KPs, which will
better adopt UI restrictions of the other OS. The sequence
diagram of the corresponding
KP
implementation for
Symbian OS is presented in Figure 13.
Figure 13. Sequence diagram of the Social Space Client UI for Symbian
mobile devices.
5) Gateway interface to the user accounts in other social
networks, e.g., Facebook. This class of KPs provides
interface to user’s accounts in other social networks, e.g.,
Facebook, and saves in SIB structure the information flows,
which are coming through our social network client to the
extend authorized by the user, the simplest example is by
extracting some user-relevant information from analysis of
chat messages. Later similar KPs for all popular social
networks will be developed and integrated into the default
distribution of the package. In Figure 14 you can find the
sequence
diagram
of
the
corresponding
KP
gateway
implementation for Facebook.
Figure 14. Sequence diagram of Facebook gateway.
147
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

6)
Gateway
to
the
large
service
provision
platforms/servers, e.g., OVI. This class of KPs provide
interface for easy and efficient access to the large external
service repositories, e.g., Nokia OVI services repository [11].
Through this KP the user gets access to the huge variety of
different services and so can use them to form the basic set
of pre-provided services in the personal smart space. The
similar solutions will be later created to interface other
service provision platforms. The sequence diagram of the
corresponding OVI gateway KP implementation is presented
in Figure 15.
Figure 15. Sequence diagram of the OVI gateway.
The above listed set of KPs forms the very basic group of
elements required to define the Smart-M3 social network
client
functionality.
The
first
implementation
of
the
corresponding application is currently in pilot testing phase.
This project is run within scope of the Finnish-Russian
University Cooperation in Telecommunication (FRUCT)
program [12], which is nowadays one of the largest Open
Innovation Academia-to-Industry communities in the Baltic
region. The first publicly available solution is expected to be
released by the next FRUCT seminar that will take place in
the end of April 2010 in Saint-Petersburg, Russia. More
information about the project progress can be found from the
FRUCT website [12].
V.
DISCUSSION AND CONCLUSIONS
This paper introduces the Smart-M3 platform that allows
development of smart space solutions for seamless operation
from PCs and mobile devices. The paper gives an overview
of main issues that one should take into account in smart
spaces
design,
defines
main
principles
and
provides
reference model of our Smart-M3 solution, gives general
idea about the provided developer’s platform and in details
discusses one application implemented on top of Smart-M3.
An interesting conclusion that one can derive from this
study is about the role of mobile device in the future smart
spaces. It is natural for mobile devices to become the
personalized access point and interface to the surrounding
Smart Spaces due to their availability to the users and their
significant processing and storage capabilities. For example,
the management functionality should inform the Smart Space
about the user preferences and see how to obtain the favorite
service of the user from the modules available in the given
space. By having access to a large amount of personal
information (e.g., calendar, email, etc.) and being carried by
the
user,
the
device
can
learn
about
the
individual
preferences and thus find or build up new services and offer
them to the user at the most convenient time.
This is especially true when thinking about the social
networking application area. This application area is very
relevant and important, especially nowadays when more and
more joint distributed project are initiated and there is clear
understanding that industry and academia must collaborate
closely.
Creation
of
a
social
network
for
supporting
distributed project work, with a feature of automatic data
processing and reasoning would be of a great help. The
closest nowadays available solution is Ning [13] online
platform for creating own social networks. This solution is
implemented on top classical web interface, but it is
appealing to people who want to create their own social
networks around specific interests with design, choice of
features and member data. The Ning allows anyone to create
own social network for a particular topic or need, catering to
specific membership bases. Ning does allow developers to
have source level control of their social networks, enabling
them to change features and underlying logic. However,
despite the significant step towards highly flexible and
personalized social network, this solution has a number of
critical limitations. It is implemented centralized principle of
data storage and web access, which is not suitable for many
commercial projects, as it is a key to keep full control over
the data and preferably physically have the data only on the
devices of member organizations. Secondly, Ning service
does not provide good internal tools for data analysis and
reasoning, so its integration into smart spaces solution is
related to a number of problems. Finally, Ning service is PC
platform oriented and porting it to mobile devices will face
most of the problems mentioned in Introduction section.
In this paper we propose the new type of social networks
solution that makes proactive analysis and reasoning of the
going through information flow and derives new knowledge
entities and relations for the personal smart spaces of the
user. The solution provides a user with flexibility in selecting
services and way of UI representation for each access device
that the user might want to use. In addition a toolkit for easy
development of new personalized modules is provided as a
part of standard M3/Sedvice platform. Thanks to the great
flexibility we can create equality efficient service clients for
PC and mobile devices. Independently of the access device
type, the service guaranties access to the same pool of data
and
preserving
successive
user
experience.
Also
the
proposed architecture maximizes application efficiency,
decrease use of all resources, including energy and network
148
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

traffic, and improves usability of UI. The key here is that the
application does not need to contain redundant modules,
which are not demanded by a given user. Also thanks to
underlying Smart-M3 platform, the solution not only makes
reasoning over collected data, but allows easy information
exchange with other services. Another important feature for
the users is that the solution allows use of the proposed
social network together with other popular social networks,
which only requires development of the corresponding
knowledge processors. We believe that with the time, the
social network solutions build on top of smart spaces
platform will replace current web-based solutions and
become dominant social network solution.
ACKNOWLEDGMENT
The authors would like to acknowledge input of the
Sedvice/M3 group of Nokia Research Center, Helsinki and
Smart-M3 FRUCT social network implementation team
located at Saint-Petersburg State University of Airspace
Instrumentation.
This study has been partially funded by TEKES ICT
SHOK DIEM (www.diem.fi) project.
REFERENCES
[1]
S. Balandin, I. Oliver, S. Boldyrev, “Distributed architecture of a
professional social network on top of M3 smart space solution made
in PCs and mobile devices friendly manner,” Procedings of 3rd Int.
Conference on Mobile Ubiquitous Computing, Systems, Services and
Technologies (UBICOMM 2009). IEEE Computer Society, 2009, pp.
318–323.
[2]
M. Williams. InfoWorld: More mobile Internet users than wired in
Japan. http://www.infoworld.com/d/networking/more-mobile-internet
-users-wired-in-japan-259. 2006.
[3]
I. Oliver. Design and Validation of a Distributed Computation
Environment for Mobile Devices. Proceeding of European Simulation
Multiconference: Modelling and Simulation 2007. Malta. 2007.
[4]
I. Oliver, J. Honkola. Personal Semantic Web Through A Space
Based Computing Environment. Proceedings of Middleware for
Semantic Web 08 at ICSC'08. Santa Clara, USA. 2008.
[5]
A. Smirnov, N. Shilov, A. Krizhanovsky, A. Lappetelainen, I. Oliver,
S. Boldyrev. Efficient distributed information management in smart
spaces. ICDIM, pp. 483-488. 2008.
[6]
D. Cook and S.K. Das. Smart environments: Technology, protocols
and applications. John Wiley & Sons. ISBN: 0-471-54448-5, 2004.
[7]
S.K. Das. Designing Smart Environments: Challenges, Solutions and
Future
Directions.
Proceedings
of
ruSMART
conference,
St.
Petersburg, Russia, 2008.
[8]
I. Oliver, E. Nuutila, T. Seppo. Context gathering in meetings:
Business processes meet the Agents and the Semantic Web.
Proceedings of the 4th International Workshop on Technologies for
Context-Aware Business Process Management, 2009.
[9]
J. Jantunen, I. Oliver, S. Boldyrev, J. Honkola. Agent/Space-Based
Computing and RF memory Tag Interaction. Proceedings of the 3rd
International
Workshop
on
RFID
Technology
-
Concepts,
Applications, Challenges, 2009.
[10] Sedvice/M3 group of NRC. Smart-M3 download page for developers.
At SourceForge. http://sourceforge.net/projects/smart-m3. 2009.
[11] Nokia.
The
official
webpage
of
OVI
service
platform.
http://www.ovi.com/services/. 2009.
[12] A. Dudkov, S. Balandin. The official webpage of Finnish-Russian
University Cooperation in Telecommunications (FRUCT) Open
Innovation program. http://www.fruct.org. 2009.
[13] M. Andreessen, G. Bianchini. The official webpage of NING – online
platform for creating own social network. http://www.ning.com.
2009.
149
International Journal on Advances in Intelligent Systems, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/intelligent_systems/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

