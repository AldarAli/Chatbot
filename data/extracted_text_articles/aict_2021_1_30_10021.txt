Optimization of Cloud Model Based on Shifted N-policy M/M/m/K Queue
Zsolt Saffer
Institute of Statistics and Mathematical Methods in Economics
Vienna University of Technology
Vienna, Austria
Email: zsolt.saffer@tuwien.ac.at
Abstract—In this paper, we present the performance analysis
and cost optimization of an Infrastructure-as-a-Service (IaaS)
cloud model with a capacity control policy. The Virtual Machines
(VM) are modeled as parallel resources, which can be either
in active or in standby state. The capacity of the cloud is
controlled by changing the number of active VMs. We deﬁne
a cost model, that the cloud provider encounters. It takes into
account both energy consumption and performance measures.
The major objective of the work is to provide a tractable analytic
model, which is suitable for practical use. For this purpose,
we model the cloud services by an M/M/m/K queue. We
propose a simple control policy, in which a predeﬁned portion
of VMs are always active. The remaining ones are activated
simultaneously when the number of requests reaches a threshold
and deactivated when the number of requests falls below the
predeﬁned portion of active VMs. We call it as shifted N-
policy. We provide the stationary analysis of the model. We
derive closed form results for the distribution of the number of
requests and for several performance measures. The cost model
leads to a discrete optimization task, which we approximate by a
nonlinear continuous optimization task. After applying numerous
approximations, we reduce the problem to a nonlinear equation
with a speciﬁc structure including factorial terms. We provide
the approximate solution of the optimization task. The major
result of the work is the closed form approximate solution
formula, which gives the optimal threshold under the most
relevant range of parameters. The formula gives insight into the
dependency of the optimum on the model and cost parameters.
We provide also illustrating examples for the most important
approximations and validate the approximate solution formula
by numeric optimization.
Keywords—optimization; cloud model; queueing model; N-policy
I. INTRODUCTION
Cloud computing [1] [2] is a distributed computing
paradigm gaining more importance in the last decade. This is
driven by rapidly growing demand for computational resources
needed by applications in many areas, like e.g., business,
science or web-applications. In this work, we deal with
Infrastructure-as-a-Service (IaaS) type Cloud service, in which
computing resources are delivered to customers. One of the
key attribute of Cloud services is the virtualization which
enables to decouple the computing resources from the physical
hardware and deliver them to customers as Virtual Machines
(VM).
Performance evaluation of Cloud services plays a central
role for Cloud service providers to get insights into the
relationships among the used resources and the performance
in order to meet the performance requirements of the user.
The users want guaranteed performance and probably will
also require Service Level Agreements (SLAs) on Cloud
performance in a later, mature phase of business models for
Cloud service. However, Cloud depends on many factors,
which makes its performance evaluation to a complex issue.
Analytic models are either too simpliﬁed to obtain meaningful
relationships or lead to rather complex numeric solution,
which does not provide an explicit relationships among the
used resources and the performance. There are many research
works on performance modeling of Clouds. In [3], a multi-
level interacting stochastic sub-models approach is proposed,
which provides a numeric method to compute the performance
measures. For an overview on research works on performance
evaluation of clouds the reader is referred to the survey [4]
and the references herein.
Cloud cost optimization enables the Cloud service provider
the service provisioning at minimum cost. It requires an energy
efﬁcient resource management technique. Such resource man-
agement and allocation policies for Clouds are summarized in
[5] [6]. One efﬁcient resource control mechanism for Clouds is
the threshold based activation and deactivation of VMs, which
can be modeled by hysteresis queue. Such resource control is
proposed in [7], in which computational algorithms are pro-
vided for computing the optimal thresholds. Another numerical
approaches to cloud cost optimization are presented in [8] and
[9]. Optimization of Clouds is even more complex issue than
its performance evaluation. Hence it is not surprising, that the
vast majority of works on Cloud cost optimization proposes a
computational solution.
In this paper, we present a performance evaluation and
optimization of an IaaS Cloud model with a proposed simple
threshold based resource control, but in contrast to the vast
majority of relevant works we provide an approximate explicit
formula for determining the only threshold of the control
mechanism. The formula holds in most relevant range of
parameters. The newly introduced resource control is called
as shifted N-policy. According to this policy, a predeﬁned
portion of VMs are always active. The remaining ones are
activated simultaneously when the number of requests reaches
a threshold (like in N-policy) and deactivated when the
number of requests falls below the predeﬁned portion of active
VMs. This explains the name of the policy. The cloud is
modeled by multi-server M/M/m/K queue. Note that, as
pointed out in [10], the M/M/m queue can be an acceptable
approximation of the GI/GI/m queue until the coefﬁcient of
variations of both the interarrival and the service times are not
far from 1.
11
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

We present closed form results for the stationary distribu-
tion of the number of requests and for several performance
measures in the shifted N-policy M/M/m/K model. The
cost model leads to a discrete optimization task, which can be
approximated by a nonlinear continuous optimization task. It
turns out that the objective function is not convex everywhere
on its deﬁnition range. After applying several approximations,
including Stirling’s formula, we reduce the problem to a
nonlinear equation with a speciﬁc structure including factorial
terms. We provide the approximate solution of the optimiza-
tion task for a bounded range of parameters. The major contri-
bution of the work is the proposed shifted N-policy resource
control and the closed form approximate solution formula for
the optimal value of the threshold N under the most relevant
range of parameters. The secondary contribution of the work
is the stationary analysis of the shifted N-policy M/M/m/K
model. The advantage of using the proposed shifted N-policy
is that it makes the cloud resource management very simple
due to the approximate analytic formula for the optimal
threshold, i.e., no need for computational algorithm. On the
other hand it leads to somewhat higher optimal cost than other
more complex computational solutions, like e.g., the hysteresis
policy with multi-thresholds. The proposed optimization can
be used for example for the use case ”Enabling add-on services
on top of the infrastructure”, like e.g., computing-as-a-service,
analytics or Business Intelligence(BI)-as-a-service.
We also provide illustrating examples for the most important
approximations and validate the approximate solution formula
by numeric optimization in the relevant range of parameters.
The rest of this paper is organized as follows. Section II is
devoted to the description of the model. The stationary analysis
of the queueing model is given in Section III. In Section IV, we
construct the cost function to be optimized. The approximate
minimization is discussed in Section V. In Section VI, we give
illustrative examples for the approximations and provide the
numeric validation of the approximate solution formula. The
work is concluded in Section VII.
II. CLOUD MODEL DESCRIPTION
A. IaaS cloud model
The IaaS Cloud delivers low-level computational resources
to the users. The Physical Machines (PMs) are grouped into
two pools: active (running) and standby machines. The PMs
in standby can represent either turned-on (but not ready) or
turned-off machines. The computational resources are pro-
vided to users in the form of VMs. Total number of available
VMs is M > 100, from which 0.1M ≤ L ≤ 0.5M VMs are
always active. The resource control is realized by threshold
based activation and deactivation of the remaining M − L
VMs. The model has buffer with capacity for K − M ≥ 1
VMs. When all active VMs are busy upon arrival of a new
request then the request is directed into the buffer, where it
waits until getting an access to a VM becoming free. When
the buffer is full upon arrival of a new request, then the request
is lost.
B. Shifted N-policy queueing model
The queueing system modeling the IaaS cloud is an
M/M/m/K queue with shifted N-policy. In the queueing
context the VMs are called as servers. The request arrive
according to Poisson process with rate λ > 0 and the service
times are exponentially distributed with parameter µ > 0.
The arrival process and the service process are assumed to be
mutually independent. The system has m = M ≥ 1 servers
and buffer capacity for K − M ≥ 1 requests.
The control of the VMs is realized by the newly proposed
shifted N-policy. According to this policy L < M servers
are always active. When the queueing system is empty then
the remaining M − L servers are in standby. They will be
activated simultaneously when the number of requests in the
system reaches the threshold L + 1 ≤ N ≤ M. After having
all the M servers active, M − L servers will be deactivated
simultaneously, when the number of requests in the system
reaches again L. This policy has hysteresis-like characteristic
upwards (in number of requests), which makes it suitable to
be used for energy efﬁcient resource control. However, it is
much simpler than the hysteresis queue, which could facilitate
the developing of analytically tractable approximation.
The queue is always stable, since it can be modeled by
a ﬁnite state Continuous-Time Markov chain (CTMC). The
utilization of the system, denoted by ρ is given by
ρ =
λ
Mµ.
(1)
C. Cost model
The cloud provider encounters different type of costs with
different weights. These are taken into account by the help of
cost parameters, which are deﬁned by
• Con - cost of an active VM/time unit,
• Coff- cost of a standby VM/time unit,
• CW - cost of waiting of a request (=holding a request in
the buffer)/time unit ,
• CR - cost of loss of an arriving request,
• CA - activation cost of a VM (changing from standby to
active state),
• CD - deactivation cost of a VM (changing from active to
standby state).
Using these parameters the cloud cost can be speciﬁed by
the following function
Ccloud = E[ number of active servers ] Con
(2)
+ E[ number of standby servers ] Coff
+ E[W] CW + ploss λ CR,
+ ( activation rate of standby VMs ) (M − L) CA
+ ( deactivation rate of active VMs ) (M − L) CD.
where E[ ] stands for the expected value of a random
variable, W is the waiting time of the requests in the buffer
and ploss is the probability of loss.
12
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

Note that the operation of N-policy implies that one of the
major trade-off of the model is the relation Con −Coff versus
CW , which in fact appears also in the approximate formula for
computing the threshold N (via parameter A see in subsection
V-D).
III. ANALYSIS OF THE QUEUING MODEL
Let n ≥ 0 be the number of requests in the system. The
process {n(t), t ≥ 0} is a ﬁnite state CTMC.
A. State diagram
The state diagram of the M/M/m/K queue with shifted
N-policy can be seen in Figure 1.
r
r+1
.
.
.
.
.
.
.
.
.
.
.
.
.  .  .
.  .  .
.  .  .
.  .  .
0
i 
i+1
L
-(N-L-1)
N-1
-1
-(j+1)
-j
L+1
k
k+1
N
t
t+1
.
.
.
.
.
.
L
K
N
M
µ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
Lµ 
(L+1)µ 
λ 
λ 
λ 
λ 
λ 
λ 
λ 
iµ 
(i+1)µ 
(i+2)µ 
Lµ 
Lµ 
Lµ 
Lµ 
Lµ 
Lµ 
0
(L+2)µ 
kµ 
(k+1)µ 
(k+2)µ 
(N-1)µ 
Nµ 
λ 
(N+1)µ 
rµ 
(r+1)µ 
(r+2)µ 
Mµ 
Mµ 
Mµ 
Mµ 
Mµ 
1
2
3
4
5
6
7
Figure 1. State diagram.
Basically the states are denoted according to the number of
requests in the system. However, the notation of the states,
in which the L < n < N, depends on the number of active
servers. If there are L active servers then the states are denoted
by the number −(N − n). Otherwise (i.e., there are M active
servers) the default numbering, n are used. On this way the
states can be described as a contiguous range [−(N − L −
1), . . . , K].
B. Stationary analysis
We perform the stationary analysis rather by utilizing the
principle of global balance equations instead of applying the
standard way by means of equilibrium equations. This results
in shorter derivations for the stationary distribution of the
number of requests in the system. We deﬁne the stationary
probability, pi as the probability that the system is in state i,
for −(N − L − 1) ≤ i ≤ K.
1) Global balance equations: We marked the selected set
of states used for the balance equations on the state diagram.
Each case is marked by a separator line and an associated
number in small square, which is used to identify the case.
1) (i + 1)µpi+1 = λpi, i = 0, . . . , L − 1,
2) Lµp−(N−L−1) + λp−1 = λpL,
3) Lµp−j +λp−1 = λp−(j+1), j = −(N −L−2), . . . , −1,
4) (L + 1)µpL+1 = λp−1,
5) (k + 1)µpk+1 = λpk + λp−1, k = L + 1, . . . , N − 1,
6) (r + 1)µpr+1 = λpr, r = N, . . . , M − 1,
7) Mµpt+1 = λpt, t = M, . . . , K − 1.
2) Stationary distribution of the number of requests: By
solving the balance equations we get the stationary distribution
of the number of requests as
pk =
( λ
µ)k
k! p0, for k = 0, . . . , L,
pk = ( λ
Lµ)N−L
( λ
Lµ)k − 1
1 − ( λ
Lµ)N−L pL,
for k = −(N − L − 1), . . . , −1,
pk =
k−1
X
i=L
i!
k!(λ
µ)k−ip−1, for k = L + 1, . . . , N,
pk = N!
k! (λ
µ)k−NpN, for k = N + 1, . . . , M,
pk = ( λ
Mµ)k−MpM, for k = M + 1, . . . , K.
(3)
The probabilities pL, p−1, pN and pM are probabilities of
events representing some boundary in the operation of the
considered queueing model. They are given by
PL =
( λ
µ)L
L! p0,
p−1 = α pL, where α = ( λ
Lµ)N−L−1
1 −
λ
Lµ
1 − ( λ
Lµ)N−L ,
pN =
N−1
X
i=L
i!
N!(λ
µ)N−ip−1 =
( λ
µ)N
N! sL,N α pL,
where sL,N =
N−1
X
i=L
i!
( λ
µ)i ,
pM = N!
M!(λ
µ)M−NpN,
(4)
3) Performance measures:
The performance measures
ploss, ps1 = P { the number of active VMs = L } and E[W]
inﬂuence the cloud cost. They are given by
13
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

ploss = pK = ( λ
Mµ)K−MpM = ( λ
Mµ)K M M
M!
N!
( λ
µ)N pN.(5)
ps1 =
L
X
k=0
pk +
−1
X
k=−(N−L−1)
pk
(6)
=
L
X
k=0
( λ
µ)k
k! p0 +
−1
X
k=−(N−L−1)
( λ
Lµ)N−L
( λ
Lµ)k − 1
1 − ( λ
Lµ)N−L pL
=
L
X
k=0
( λ
µ)k
k! p0 +
N−L−1
X
k=1
( λ
Lµ)k − ( λ
Lµ)N−L
1 − ( λ
Lµ)N−L
pL
=
L
X
k=0
( λ
µ)k
k! p0 +
λ
Lµ −( λ
Lµ )N−L
1− λ
Lµ
− (N − L − 1)( λ
Lµ)N−L
1 − ( λ
Lµ)N−L
pL.
E[W] =
−1
X
k=−(N−L−1)
(k + N − L)pk +
K
X
k=M
(k − M)pk
=
N−L−1
X
k=1
k p−(N−L)+k +
K
X
k=M
(k − M)pk
= τpL + σpM,
(7)
where
τ =
λ
Lµ
(1 − ( λ
Lµ)2
(8)
− (N − L)
( λ
Lµ)N−L
1 − ( λ
Lµ)N−L
 
1
1 −
λ
Lµ
+ N − L − 1
2
!
,
σ =
λ
Mµ
1 − ( λ
Mµ)K−M+1
(1 −
λ
Mµ)2
− (K − M + 1)
( λ
Mµ)K−M+1
1 −
λ
Mµ
.
IV. COST FUNCTION
A. Constructing the cost function
The cost function, to be optimized, can be constructed by
applying the cost model (2) to the shifted N-policy queue. The
so far unknown terms arising in (2) can be expressed with the
help of parameters, stationary probabilities and performance
measures of the shifted N-policy queue as follows.
E[ number of active servers ] = L + (1 − ps1)(M − L),(9)
E[ number of standby servers ] = ps1(M − L),
( activation rate of standby VMs ) = p−1λ,
( deactivation rate of active VMs ) = pL+1(L + 1)µ.
Substituting the expressions (9) into (2) we get the cost
function, F1 as
F1 = p−1λ (M − L) CA + pL+1(L + 1)µ (M − L) CD
+ (L + (1 − ps1)(M − L)) Con + ps1(M − L) Coff
+ E[W] CW + ploss λ CR.
(10)
After performing several rearrangements on (10) and using
the balance equation (L+1)µpL+1 = λp−1 as well as (4), (5)
and (7) we get the cost function in terms of pL and ps1 as
F1 = ((λ(CA + CD)(M − L) + η sL,N)α + CW τ) pL
− (Con − Coff)(M − L)ps1 + MCon, where
(11)
η
=
 
CRλ( λ
Mµ)K M M
M! + CW σ
( λ
µ)M
M!
!
.
B. Approximating the cost function
The optimization of (11) with respect to N seems not to
be tractable on analytic way due to the complex dependency
of several of its terms on N, like sL,N or ps1. Therefore
we establish approximation for (11), which on the other hand
restricts the parameter range, for which it holds.
1) Approximations for α, τ and ps1: When N−L ≫ 1 then
( λ
Lµ)N−L ≫ 1 holds for the trafﬁc range
λ
Lµ > 1 and thus
the term 1 − ( λ
Lµ)N−L and (N − L − 1) can be approximated
by −( λ
Lµ)N−L and (N − L), respectively. Utilizing it in
the expression of α, τ and ps1 ((4), (8) and (6)) gives the
approximation α∗, τ ∗ and p∗
s1, respectively as
α∗ ≈ 1 − Lµ
λ ,
τ ∗ ≈
Lµ
λ
1 − Lµ
λ
 
1
1 − Lµ
λ
− (N − L)
!
+ (N − L)(N − L)
2
,
p∗
s1 ≈ (N − L)pL,
(12)
where at evaluating p∗
s1 we also used the upper limit
PL
k=0
( λ
µ )k
k!
≤
1
1− Lµ
λ
( λ
µ )L
L!
for L ≫ 1.
2) Utilizing the approximately N independent regions of p0:
Unfortunately p0, which is involved in almost every term of
(11) via the expression of pL, depends on N. Now we identify
parameter regions, in which p0 is approximately independent
of N. This leads to further restriction on the parameter range.
By deﬁning the probability sums
ps1w = 1
p0
ps1
ps2w = 1
p0
N
X
L+1
pk =
N
X
L+1
( λ
µ)k
k!
k−1
X
i=L
i!
( λ
µ)i αpL
p0
,
ps3w = 1
p0
M
X
N+1
pk =
N!
( λ
µ)N
M
X
N+1
( λ
µ)k
k!
pN
p0
=
M
X
N+1
( λ
µ)k
k!
N−1
X
i=L
i!
( λ
µ)i α pL
p0
,
ps4w = 1
p0
K
X
M+1
pk.
p0 can be given by p0 =
1
psw with psw = ps1w + ps2w +
ps3w + ps4w. It can be seen by taking the difference of ps2w
14
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

and ps3w with respect to N that the sum ps2w + ps3w is ap-
proximately independent of N and equals to PM
i=L+1
( λ
µ )k
k!
α∗.
Furthermore it can be seen that the magnitude of ps2w + ps3w
increases rapidly with ρ and for M/L ⪆ 2 with ρ ⪆ 1.2 L
M
it is much higher than the one of ps1w, which depends on N
approximately linearly due to ps1w ≈ (N − L) pL
p0 . Moreover
the term ps4w is independent of N in this parameter range. We
omit the details here due to the limitation on the size of the
paper. Summarizing all the above, if M/L ⪆ 2 and ρ ⪆ 1.2 L
M
then psw and therefore also p0 is approximately independent
of N. For this case the minimizing task reduces to ﬁnd the
minimum of the function F2, which can be obtained from (11)
by omitting the N independent term MCon and dividing it by
pL. This results in
F2 = ((λ(CA + CD)(M − L) + η sL,N)α + CW τ)
− (Con − Coff)(M − L)ps1
pL
.
(13)
3) Applying the approximations for α, τ and ps1: The
minimizing task can be further reduced to ﬁnd the minimum
of the objective function F2app, which can be obtained by
applying the approximations (12) in (13). This leads to
F2app = (λ(CA + CD)(M − L) + η sL,N) (1 − Lµ
λ )
+ CW
Lµ
λ
1 − Lµ
λ
 
1
1 − Lµ
λ
− (N − L)
!
+ CW
(N − L)(N − L)
2
− (Con − Coff)(M − L)(N − L).
(14)
C. Approximate equation for determining the local minimum
We obtain an approximate equation for determining the local
minimum of (13) by taking its difference with respect to N
and setting ∆NF2app ≈ 0. Using ∆NsL,N =
(N−1)!
( λ
µ )N−1 and
∆(N − L)(N − L) ≈ 2(N − L) this leads to the equation
η(1 − Lµ
λ )(N − 1)!
( λ
µ)N−1 = (Con − Coff)(M − L)
(15)
+ CW
Lµ
λ
1 − Lµ
λ
− CW (N − L).
V. APPROXIMATE MINIMIZATION OF THE COST FUNCTION
In order to get closer to the solution of equation (15) ﬁrst
we investigate its structure.
A. Structure of the equation
To identify the structure of equation (15), we simplify its
form by applying further approximations. The relation K −
M − 1 >> 1 holds usually under practical settings. Hence
the term ( λ
Mµ)K−M+1 can be neglected due to ρ =
λ
Mµ < 1,
which gives an approximation for σ as
σ =
λ
Mµ
1 − ( λ
Mµ)K−M+1
(1 −
λ
Mµ)2
− (K − M + 1)
( λ
Mµ)K−M+1
1 −
λ
Mµ)
≈
ρ
(1 − ρ)2 .
(16)
Applying again the negligibility of the term ( λ
Mµ)K−M in
the expression of η and further rearrangement leads to an
approximation for η as
η =
 
CRλ( λ
Mµ)K−M ( λ
µ)M
M!
+ CW σ
( λ
µ)M
M!
!
≈ CW
ρ
(1 − ρ)2
( λ
µ)M
M! .
(17)
Using (17) in the equation (15) and further rearrangement
gives the simpliﬁed form of the equation as
( λ
µ)M
M!
(N − 1)!
( λ
µ)N−1 u0(ρ) = r(ρ, N), where
(18)
u0(ρ) = CW
ρ
(1 − ρ)2 (1 −
1
ρ M
L
)
and
r(ρ, N) = CW
 
A(M − L) +
1
ρ M
L − 1 − (N − L)
!
with A = Con − Coff
CW
.
The term
( λ
µ )M
M!
(N−1)!
( λ
µ )N−1 on the left hand side (lhs) of (18)
constitutes the structure of the equation. Its magnitude varies
in a huge range for larger M and N depending on the value
of the parameters. Therefore we also use its natural logarithm
in the course of the analysis. By introducing the notation
p(ρ, N) =
( λ
µ)M
M!
(N − 1)!
( λ
µ)N−1 ,
(19)
the equation (18) can be given in a short form as
p(ρ, N)u0(ρ) = r(ρ, N).
(20)
B. Properties of function p(ρ, N)
The approximate global solution of the considered mini-
mization task requires the knowledge of several properties of
function p(ρ, N).
1) Dependency on ρ: Applying the Stirling formula n! ≈
√
2πn(n+1/2)e−n to both M and N −1 in the expression (19)
gives an approximation for p(ρ, N) as
p(ρ, N) =
( λ
µ)M
M!
(N − 1)!
( λ
µ)N−1 = ( λ
µM )(M−N+1) M M
M!
(N − 1)!
M N−1
≈ ρ(M−N+1)e(M−N+1)
r
N − 1
M
(N − 1
M
)N−1. (21)
15
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

It can be seen from (21) that the dependency of p(ρ, N)
on ρ is exponential. This leads to rapid changes under the
typical model parameter settings, e.g., increasing ρ by 2.5%
at M − N + 1 = 95 leads to 10 times multiplication due to
1.02595 ≈ 10.
2) Dependency of p(ρ, N) on N: Taking the natural loga-
rithm of (21) we get
ln(p(ρ, N)) = (M − N + 1) (ln(ρ) + 1)
+

(N − 1) + 1
2

ln(N − 1
M
).
By introducing the notation
β = N − 1
M
.
(22)
this can be rewritten as
ln(p(ρ, β)) =
M

(1 − β)(ln(ρ) + 1) + (β +
1
2 ∗ M ) ln(β)

.
(23)
Taking its ﬁrst derivative with respect to β gives
d ln(p(ρ, β))
dβ
= M

ln(β
ρ ) +
1
2 ∗ M ∗ β

≈ M ln(β
ρ ),(24)
since in the typical model parameter ranges M
>>
100 and thus the term
1
2∗M∗β can be neglected. The ﬁrst
derivative of (p(ρ, N) with respect to N comes by us-
ing
d(p(ρ,N))
dN
=
d(eln(p(ρ,N)))
dN
= p(ρ, N) d ln(p(ρ,β))
dβ
dβ
dN
=
p(ρ, N) 1
M ∗ d ln(p(ρ,β))
dβ
, which yields
d(p(ρ, N))
dN
≈ p(ρ, N) ln(β
ρ ).
(25)
The ln( β
ρ ) divides the β−ρ plane into two disjunct subareas
regarding the characteristic of p(ρ, N) with respect to N as
p(ρ, N) is

monotone decreasing, if β < ρ
monotone increasing, if β ≥ ρ

.
(26)
Hence the dependency of p(ρ, N) on N is faster than ex-
ponential, since | ln( β
ρ )| is increasing with decreasing N and
increasing N in the range β < ρ and β > ρ, respectively.
3) The ”low magnitude range”: We investigate the case
when p(ρ, N) = econst holds, where const is a given real
constant. With the notation of β this equation can be given by
M

(1 − β) (ln(ρ) + 1) + (β +
1
2 ∗ M ) ln(β)

= const.
(27)
Observe that this equation implicitly deﬁnes a boundary
function β(ρ), which separates the ”low magnitude range”
p(ρ, N) ≤ econst from the complementer range, in which
p(ρ, N) > econst. In the range p(ρ, N) ≤ econst the mag-
nitude of p(ρ, N) is less than const, which explains the name
”low magnitude range”. We say that a β−ρ point is inside and
outside of the ”low magnitude range” if p(ρ, β) ≤ econst holds
and does not hold for that point, respectively. By rearranging
(27) we get the expression of ln(ρ) along the boundary
function as
ln(ρ) =
const
(1 − β) ∗ M −
β
1 − β ln(β) − 1
−
1
(1 − β) ∗ 2 ∗ M ln(β).
(28)
Therefore, the sensitivity of ln(ρ) with respect to the const,
ζ is given by
ζ =
1
(1 − β) ∗ M .
(29)
An upper limit for the factor ln( β
ρ ) determining the relation
between p(ρ, N) and its ﬁrst derivative with respect to N (see
(25)) along the boundary function can be obtained as
ln(β
ρ ) = ln(β) − ln(ρ) = ln(β) +
β
1 − β ln(β) + 1
−

const
(1 − β) ∗ M −
1
(1 − β) ∗ 2 ∗ M ln(β)

≤
1
1 − β ln(β) + 1 ≤ −1
2(1 − β) < 0.
(30)
where we used the inequality ln(β) ≤ −(1−β)− 1
2(1−β)2
and that the term in the brackets is non-negative. Hence the
boundary curve lies under the line separating the β − ρ plane
into parts with monotone decreasing and increasing p(ρ, N)
with respect to N. The relevant region of the β − ρ plane
is restricted by β > βlow =
L
M and ρ ≥ βlow due to the
limitations N > L ⇔
N
M >
L
M and λ
µ > L ⇔ ρ >
L
M ,
respectively. The cross point of the horizontal β = βlow and
the boundary curve is called boundary ρ and denoted by ρb.
All these are shown on the illustrating example Figure 2.
C. Constructing the approximate minimization
1) Solution regimes: For the sake of better understanding
the idea of the solution, ﬁrst we consider a modiﬁed form of
the equation (20) as
p(ρ, N) = r(ρ, N).
(31)
The idea of the approximate solution is based on the concept
of ”low magnitude range”. When setting the r.h.s of (31)
to 0 and the solution of r(ρ, N) = 0, let us say Ns, falls
inside of the ”low magnitude range” with const = ln(CW ),
then it ensures that the value of r(ρ, N) reaches the value of
p(ρ, N) ≤ econst = CW by decreasing N not more than 1,
since d(r(ρ,N))
dN
= −CW and both the value of p(ρ, N) and
its ﬁrst derivative are << CW in a large portion of the ”low
magnitude range” (up to close to its boundary). Therefore, Ns
can be considered as approximate solution of (31).
More precise speciﬁcation of the inside area of the needed
boundary requires both p(ρ, N) < CW and
d(p(ρ,N))
dN
≈
16
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
utilization (ro)
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
beta ((N-1)/M)
The beta - ro boundary function
const =10
separator of sign of 1st derivative of p(ro,N)
beta_low line (beta_low = L/M)
ro boundary line (ro boundary = L/M)
boundary ro (ro_b)
Figure 2. The β − ρ boundary function, const = 10, M=200,
L=50.
p(ρ, N) ln( β
ρ ) > −CW to be hold. However, the second con-
dition leads to curve on β−ρ plane very close to the boundary
curve of the ”low magnitude range” with const = ln(CW ).
This is because
M

(1 − β) (ln(ρ) + 1) + (β +
1
2 ∗ M ) ln(β)

+ ln(− ln(β
ρ )) = ln(CW )
(32)
leads to a change in ln(ρ) in absolute value as
ln(− ln( β
ρ ))
(1−β)∗M ,
which is very small under the most relevant range of parame-
ters. For example it is ≤ 0.04 in absolute value for M ≥ 100
and −2.3 ≤ ln( β
ρ ) ≤ −0.35 due to 0.1 ≤ β
ρ for βlow ≥ 0.1 as
well as using β ≤ 0.7, which can be shown from the properties
of this second β − ρ curve. Therefore, the second curve can
be neglected from the speciﬁcation of the required inside area
and hence it is enough to specify the needed boundary by
p(ρ, N) = const for any const.
We denote the boundary ρ under the speciﬁc condition
const = ln(CW ) by ρ0. Approximately at N = L, the
ﬁrst derivative of p(ρ0, N) equals to −CW . At this point
r(ρ0, L) > p(ρ0, L). By decreasing N, from that point the ﬁrst
derivative of p(ρ0, N) is in absolute value greater than that one
of r(ρ0, N), and hence an other cross point of the functions
p(ρ0, N) and r(ρ0, N) must arise, let us say at N = N1. This
is a maximum point of the cost function, since (in N) below
this point the sign of p(ρ, N)−r(ρ, N) changes from negative
to positive. Further decreasing N it reaches the point N = N2,
where the value of the cost function is less then at Ns. The
situation is illustrated on Figure 3.
The above discussed decrease in any range of N, in which
p(ρ0, N) is monotone decreasing with respect to N, causes an
increase in the value of p(ρ0, N), which equivalently can be
N_2
N
cost
N_s
N_1
value
L
Figure 3. Example cost function.
also considered as a change in const of (27) while keeping
N unchanged. This change in const corresponds to a shift
of the boundary curve to right. If ρ > ρ0 then the point in
β corresponding to N1 can fall over the βlow line. Until N2
falls still below the βlow line, the value of the cost function
at βlow is still higher than at βs (corresponding to Ns), and
therefore the global minimum of the cost function is still at
Ns. However, if N2 also falls above βlow line then the global
minimum of the cost function is at βlow (corresponding to
N=L+1). If ρ > ρ0, it can also happen that βs falls outside of
the ”low magnitude range” (= under the boundary curve). In
this case | d(p(ρ,N))
dN
| > CW and there is no cross point at all,
the cost function is monotone increasing with respect to N
and hence the global minimum at βlow. Note that in the range
N > Ns there can not be any cross point of the functions
p(ρ, N) and r(ρ, N), since p(ρ, N) > 0 and r(ρ, N) < 0 in
that range.
It follows from the above argumentation that the global
minimum of the cost function is approximately at Ns in the
range of ρ < ρ0 and βlow ≤ βs < 1. Above ρ0 there is a gap
in ρ until a speciﬁc point, ρs, at which N2 reaches the βlow
line and hence the global minimum of the cost function is still
at Ns (for βlow ≤ βs < 1). Finally above ρs the position of the
global minimum of the cost function changes to N = L + 1.
The position of ρs depends on ∆const, which is the change
in const causing a shift of the boundary ρ from ρ0 to ρs.
2) The magnitude of ∆const: The solution of r(ρ, N) = 0,
Ns can be given from (18)) as
Ns = A(M − L) +
1
ρ M
L − 1 + L.
(33)
We use the notation
∆N = Ns − L = A(M − L) +
1
ρ M
L − 1.
(34)
The magnitude of ∆const is about 2 ln(∆N). The ﬁrst
ln(∆N) stands for the increase p(ρ0, L)
→
p(ρ0, N1),
i.e., from Cw up to (Ns − N1)CW
≈ (Ns − L)CW
=
17
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

∆NCw (= the value of r(ρ0, N) at βlow), on ln level
which is ln( ∆NCw
Cw
). The second one stands for increase
p(ρ0, N1) → p(ρ0, N2), on ln level. During N1 → N2
the cost function F2app
decreases so much as its in-
creases during Ns → N1, which is approximately (Ns −
N1) × | maximum value of d F2app
dN
in [Ns, N1]| = (Ns −
N1)|p(ρ0, L) − r(ρ0, L)| ≈ (Ns − N1)|Cw − (Ns − L)Cw| ≈
(Ns − N1)∆NCw. On the other hand the change of the cost
function F2app during N1 → N2 is in the magnitude of
p(ρ0, N2) − p(ρ0, N1) (again due to the exponential character
of function p(ρ0, N), but we omit the details here due to the
limitation on the size of the paper). Putting all these together
ln p(ρ0,N2)
p(ρ0,N1)
=
ln( (Ns−N1)∆NCw
(Ns−N1)Cw
+ 1)
≈
ln(∆N). Note
that (Ns − N1) × | maximum value of d F2app
dN
in [Ns, N1]|
overestimates the increase of the cost function F2app during
Ns → N1 and hence 2 ln(∆N) also overestimates ∆const.
In order to estimate 2 ln(∆N), we impose a condition on A,
which ensures that the term A(M −L) dominates over
1
ρ M
L −1.
For this purpose an upper bound is set on
1
ρ M
L −1, which can
be obtained by setting a lower bound for ρ as βlowξ < ρ < 1.
With ξ = 1.2 this gives
1
ρ M
L −1 ≤ 5. We set A(M −L)/(A (M-
L)+
1
ρ M
L −1) ≥ 0.9, which causes a difference of 2 ln(0.9) =
−0.2 in the value of ∆const corresponding to difference of
−0.2
(1−0.5)100 = 0.004 on ln(ρ) level when assuming M ≥ 100
and βlow < 0.5. With this setting we get A(M − L) ≥ 45
which implies the condition on A as
A ≥
45
M − L,
(35)
under which A(M − L) +
1
ρ M
L −1 ≈ A(M − L).
Now we can estimate 2 ln(∆N) as
2 ln(∆N) ≈ ln(A(M − L))
= 2 ln(A) + ln(M) + ln(1 − β).
(36)
3) Relation for ρs: So far we discussed the way of solution
without considering the term u0(ρ) on the lhs of equation (20).
Now taking into account also the term u0(ρ), the relation for
the boundary curve crossing the βlow line at ρs can be given
by
M

(1 − βlow) (ln(ρs) + 1) + (βlow +
1
2 ∗ M ) ln(βlow)

+ ln(u0(ρs)) = ln(CW ) + 2 ln(∆N).
(37)
By substituting the expression of u0(ρ) from (18) and using
(1 −
1
ρs M
L ) = (1 − βlow
ρs ) = βlow
ρs ( ρs
βlow − 1) we get
M

(1 − βlow) (ln(ρs) + 1) + (βlow +
1
2 ∗ M ) ln(βlow)

+ ln(CW ) + ln(ρs) + ln(
1
(1 − ρs)2 ) + ln(βlow) − ln(ρs)
+ ln( ρs
βlow
− 1) = ln(CW ) + 2 ln(∆N).
Rearranging yields
M

(1 − βlow) (ln(ρs) + 1) + (βlow +
1
2 ∗ M ) ln(βlow)

= 2 ln(∆N) − ln(βlow) − ln(
1
(1 − ρs)2 ) − ln( ρs
βlow
− 1).
(38)
We approximate the term
1
(1−ρs)2 ( ρs
βlow − 1) by setting 1,
which gives an uncertainty of ≈ 7 on right hand side (rhs) of
(38) (1 ≤
1
(1−ρs)2 ≤ 100 for ρs ≤ 0.9 and 0.28 ≤ ( ρs
βlow −
1) ≤ 9 for βlow ≥ 0.1 and
ρs
βlow ≥ 1.28 following from (30)
with βlow ≤ 0.5 and thus ln(9 × 100) < 7) corresponding to
difference of
7
(1−0.5)200 ≈ 0.07 on ln(ρs) level when assuming
M ≥ 200 and again βlow < 0.5. The relation ρs ≤ 0.9 can
be justiﬁed by the approximate solution of (38) for ρs by
assuming that its rhs ≤ 14 and setting β = max (βlow) = 0.5,
since the solution in ρs is monotone increasing with respect
to βlow. Using the above approximation and (36 ) we get the
ﬁnal form of the relation for ρs as
M

(1 − βlow) (ln(ρs) + 1) + (βlow +
1
2 ∗ M ) ln(βlow)

= 2 ln(A) + ln(M) + ln(1 − βlow) − ln βlow,
(39)
D. Approximate solution formula
Now putting all together we get the approximate solution
formula.
Conditions
1) 100 ≤ M,
2) 0.1 ≤ βlow ≤ 0.5 with βlow = L
M ,
3) ρ ≥ βlowξ with ξ = 1.2,
4) N − L >> 1, practically N > L + 10,
5) K − M >> 1, practically K > M + 10,
6) A ≥
45
M−L
Solution formula
If Conditions 1-6 hold, then
Nopt
=
(
min(⌊A(M−L)+
1
ρ M
L −1 +L⌋,M) if ρ ≤ ρs,
L + 1
if ρs < ρ < 1,
)
where
ln(ρs) = 2 ln(A) + ln(M) + ln(1 − βlow) − ln βlow
(1 − βlow) ∗ M
−
βlow
1 − βlow
ln(βlow) − 1
−
1
(1 − βlow) ∗ 2 ∗ M ln(βlow).
(40)
Observe that the approximate optimal N does not depend
on CA, CD and CR. This is because they have no impact on
N in the considered range of parameters. The cost parameters
CA, CD inﬂuence N only via p0 and hence they effect the
optimal N in the range, in which p0 depends on N. The cost
parameter CR has impact on the optimal N via η and hence
it is effective only for small values of K − M.
18
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

VI. NUMERICAL COMPARISONS
In this Section, we illustrate the approximations and validate
the approximate solution formula by numeric optimization.
The setting Con = 50, Coff = 15 Ca = 30, Cd = 20
and CR = 20 was used for all experiments. The parameters
Coff, Con have impact to the solution formula only via the
parameter A, which was varied through CW . The parameters
Ca, Cd and CR have no impact on the approximate solution
formula in the considered range of (other) parameters. We
applied 100 < M < 1000 for all experiments.
A. Illustrating the approximations
1) N independent region of p0: Figure 4 shows the depen-
dency of p0 for the parameter setting M = 300, L = 100,
K = 350 and ρ = 0.6. It can be seen on the ﬁgure that
p0 is independent of N for N ⪆ 120, which corresponds to
N − L ≈ 20 ≫ 1.
0
50
100
150
200
250
300
parameter N
6.5
6.55
6.6
6.65
6.7
6.75
p0
10-79
The value of p0 - as dependency of N
p0
Figure 4. Probability p0 in dependency of threshold N.
2) Approximation of F2 by F2app: Figure 5 illustrates the
approximation of the cost function F2 (without taking into
account p0) by F2app in dependency of threshold N for the
parameter setting M = 300, L = 100, K = 350, CW = 50,
µ = 1 and ρ = 0.6. The ﬁgure shows a very good match. The
mismatch on the left side of the curve is caused by violating
the condition N − L >> 1 as N becomes close to L.
B. Illustration of the approximate solution formula
The comparison of the exact and approximate optimal N
of F2 can be seen in Figure 6 in dependency of ρ for the
parameter setting M = 400, L = 100, K = 450, CW = 50,
µ = 1 and ρ > 0.25 = L
M .
Figure 7 shows the exact and approximate optimal value
of F1 in dependency of ρ for different values of M with the
parameter setting L = 50, K = M + 100, CW = 50, µ = 1
and ρ > 0.25 = L
M .
Both ﬁgures show a very good match. The small bias
between the exact and approximated ρs in Figure 6 can
0
50
100
150
200
250
300
parameter N
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
cost
106
Cost function F2 - approximated and exact
approx
exact
Figure 5. Exact and approximate values of the cost function
F2 in dependency of threshold N.
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
ro
100
150
200
250
300
350
400
optimum N
Optimum N - approximated and exact
approx
exact
Figure 6. Exact and approximate optimal N (F2) in depen-
dency of ρ.
be explained by the uncertainity introduced by setting
1
(1−ρs)2 ( ρs
βlow − 1) to 1.
C. Validation of the approximate formula
We validated the approximate solution formula by numeric
optimization in the considered range of parameters. Figure 8
shows the ratio of the approximated and the exact optimal
value of F1 for the range of parameters 100 ≤ M ≤ 700 and
ρ >
L
M with the parameter setting L = 50, K = M + 100,
CW = 50, µ = 1.
Similarly Figure 9 shows the ratio of the approximated and
the exact optimal value of F1 for the range of parameters
19
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
ro
0.4
0.6
0.8
1
1.2
1.4
1.6
optimum cost val
104
       Optimum cost F1 - analytically approximated and exact
analitic approx M=100
exact M=100
analitic approx M=200
exact M=200
analitic approx M=300
exact M=300
Figure 7. Exact and approximate optimal value (F1) in depen-
dency of ρ for different values of M.
Figure 8. Ratio of the approximated and exact optimal value
(F1) for 100 ≤ M ≤ 700 and
L
M < ρ.
0.1 ≤ CW ≤ 100 and ρ > 0.25 =
L
M with the parameter
setting L = 50, M = 200, K = 300, µ = 1.
Both ﬁgures show a very good match until approaching the
ρ boundary L
M , where the condition 3, does not hold any more.
VII. CONCLUSION
In this paper, we proposed shifted N-policy for a simple,
but energy efﬁcient control of number of active VMs in the
IaaS cloud. Besides of the stationary analysis of the underlying
queueing model, we provided an approximate formula for
computing the optimal threshold N, which minimizes the
cloud provider’s cost, in the most relevant parameter range.
The validation of the approximate solution formula by means
of numeric optimization shows a good match in the consid-
ered parameter range. The closed form approximate solution
Figure 9. Ratio of the approximated and exact optimal value
(F1) for 0.1 ≤ CW ≤ 100 and
L
M = 0.25 < ρ.
formula enables a simple management of the cloud and gives
an insight into the dependency of the optimal threshold N on
the model and cost parameters.
A future research work is to investigate an approximate so-
lution also for the remaining parameter ranges not considered
in this work. Another, more difﬁcult future research topic is
the joint optimization of parameters L and N.
REFERENCES
[1] F. Durao, J. Fernando, S. Carvalho, A. Fonseka and V. C. Garcia, “A
systematic review on cloud computing,” J. Supercomput., vol. 68, no.
3, pp. 1321–1346, 2014.
[2] C. Chapman, W. Emmerich, F. G. Mrquez, S. Clayman and A. Galis,
“Software architecture deﬁnition for on-demand cloud provisioning,”
Cluster Comput., vol. 15, no. 2, pp. 79–100, 2011.
[3] R. Ghosh, F. Longo, V.K. Naik, and K.S. Trivedi, “Modeling and
performance analysis of large scale IaaS clouds Future Generation
Computer Systems,” Future Generation Computer Systems, vol. 29, pp.
1216–1234, 2013.
[4] Q. Duan, “ Cloud service performance evaluation: status, challenges, and
opportunities a survey from the system modeling perspective,” Digital
Communications and Networks, vol. 3, no. 2, pp. 101–111, 2017.
[5] F. Nzanywayingoma and Y. Yang, “Efﬁcient resource management
techniques in cloud computing environment: a review and discussion,”
International Journal of Computers and Applications, vol. 41, no. 3, pp.
165–182, 2019.
[6] T. Ma, Y. Chu, L. Zhao and O. Ankhbayar, “Resource Allocation
and Scheduling in Cloud Computing: Policy and Algorithm,” IETE
TechnicalReview, vol. 31, no. 1, pp. 4–16, 2014.
[7] T. Tournaire, H. Castel-Taleb, E. Hyon, and T. Hoche, “ Generating
optimal thresholds in a hysteresis queue: application to a cloud model,”
MASCOTS 2019: 27th International Symposium on Modeling, Analysis,
and Simulation of Computer and Telecommunication Systems, Rennes,
France, Oct 2019, pp.283–294.
[8] B. Wan, J. Dang, Z. Li, H. Gong, F. Zhang and S. Oh, “Modeling
Analysis and Cost-PerformanceRatio Optimization of Virtual Machine
Scheduling in CloudComputing,” IEEE Transactions on Parallel and
DistributedSystems, vol. 31, no. 7, pp. 1518–1532, 2020.
[9] Y. Mansouri, A. N. Toosi and R. Buyya, “Cost Optimization for Dynamic
Replication and Migration of Data in Cloud Data Centers,” in IEEE
Transactions on Cloud Computing, vol. 7, no. 3, pp. 705-718, 2019.
[10] W. Whitt, “Approximations for the GI/G/m queue,” Production Oper.
Management, vol. 2, pp. 114–161, 1993.
20
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-860-0
AICT 2021 : The Seventeenth Advanced International Conference on Telecommunications

