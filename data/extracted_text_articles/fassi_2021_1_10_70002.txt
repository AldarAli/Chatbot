Analyzing Hyperonyms of Stack Overﬂow Posts
L´aszl´o T´oth
Software Engineering Department
University of Szeged
Szeged, Hungary
email: premissa@inf.u-szeged.hu
L´aszl´o Vid´acs
MTA-SZTE Research Group on Artiﬁcial Intelligence
Department of Software Engineering
University of Szeged
Szeged, Hungary
email: lac@inf.u-szeged.hu
Abstract—Communication among people is often a challenging
task due to the different interpretations of the terms they use. The
way people interpret the terms highly depends on the semantic
context, where the notions were acquired. The different contexts
provide somewhat distinct meanings to the terms used. In soft-
ware development and integration, requirements engineering and
customer support are primarily affected by the difﬁculties stem-
ming from communication obstacles. The necessary information
is often inadequately forwarded to developers resulting in poorly
speciﬁed software requirements or misinterpreted user feedback.
The communication difﬁculties mentioned can be solved by
clarifying the meanings of the concepts used. Semantic networks
built on different contexts are suitable tools for this purpose.
This paper presents a formal description of the semantic network
and the semantic space needed for the algorithmic treatment of
the concepts. It provides a model for extracting hyperonymy and
hyponymy relations from text corpora created in speciﬁc semantic
domains. The model was applied on a corpus acquired from Stack
Overﬂow containing conversations among the software developers
to solve programming issues.
Keywords-semantic network; semantic space; lexico-syntactic
patterns; noun phrases; NLP; Stack Overﬂow.
I. INTRODUCTION
Communication among people is, in general, often fraught
with difﬁculties and misunderstandings. Information exchange
is inﬂuenced by factors such as cultural background, so-
cial environment, the available communication channels, the
personality and mental state of the participants, and their
communication intention, even when a common language is
used. The cultural background and the social environment
have paramount importance because they can affect the actual
meanings of the words used in the communication. However,
the participants can only understand each other if they use
communication elements in the same sense.
Although communication disruptions can cause problems
in everyday life, they may also have unforeseeable conse-
quences in business life, especially if the communication
among the participants does not go smoothly. Primarily in
larger or sometimes in medium-sized companies, there is a
remarkable diversiﬁcation between the individual departments
in the organizational culture, often reﬂected in their language
usage. This phenomenon, called the communication silo [1],
is increasingly present in communication between IT and the
business area [2][3]. The success of a software project de-
pends signiﬁcantly on the fact that requirements and business
rules are communicated to developers accurately. Although
accumulated experiences exist to support the requirements
engineering process, the collection of requirements is usually
incomplete [4]. The principal cause of this deﬁciency is the
same silo phenomena that generate impediments in exchanging
information between units within a given organization.
The difference in the meaning of terms used in various
semantic contexts plays a vital role in the silo phenomenon.
Semantic networks [5] built on different contexts can provide
signiﬁcant support in solving this problem. This paper presents
research that proposes an expandable semantic network based
on discourses in the software development domain, relying on
a chosen type of association called the hyperonymy-hyponymy
relationship. In addition to the graph-based semantic database,
the contributions of our research are the formal deﬁnitions
of the concepts of semantic network and semantic space, as
well as the development of a novel phrase structure grammar
along with the automation supporting the recognition of noun
phrases needed to build the database.
The paper is structured as follows. Section II introduces the
theoretical background behind this study. Section III presents
the elements participating in our research, such as the Stack
Overﬂow, noun phrases, and the lexico-syntactic patterns. In
Section IV, we introduce the technical details about the extrac-
tion process, along with the pre- and post-processing phases.
In Section V, the results of the experiment are presented and
discussed. A few aspects of threats to validity are examined in
Section VI. Section VII provides a literature review of related
works. Finally, Section VIII concludes the paper.
II. THEORETICAL BACKGROUND
The formation of the conceptual system of humans depends
on several factors. One such important factor is the presence
of common characteristics of perception. These properties
inﬂuence the order of language acquisition and also have
effects on the usage of various languages [5]. The very ﬁrst
linguistic elements acquired by young children relate to nouns
denoting objects and verbs connecting to simple movements.
These lexical elements carry the same meaning for everyone
within a given language; using them in communication does
not cause misunderstandings. The more abstract concepts are
built from already known lexical elements, and many of
them are context-dependent. Similarly, the actual meaning of
multi-meaning words is determined by their context. When
1
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

the context is asymmetric in the communication, context-
dependent words can introduce misunderstandings.
The meaning of an abstract concept in a given context
marked by a particular term is determined by its relation to
other concepts valid in the same context. Processing concepts
marked with their terms by a computer program requires
awareness of these relationships, which, in turn, can help
clarify the actual meaning of a given term.
Concepts are abstract elements referring to the things of
the world and their relationships. Concepts are mental objects,
and also, according to Frege [6], they are abstract objects and
can be organized in a hierarchical structure. According to our
knowledge about the functioning of the human mind, each
concept is stored in our memory with its relationships, forming
a structure called a semantic network [5].
Deﬁnition 1: A semantic network is a
G = (C,R,Σ1,Σ2,s,d,l1,l2)
labeled, directed multigraph, where C is the set of nodes
representing the concepts of a given domain, and R is the set
of edges representing the relationships between the elements
of C. Σ1 and Σ2 are the alphabets of the labels corresponding
to the nodes and edges, respectively. The s,d : R → C are the
source and destination functions:
∀r ∈ R, ∃(X,Y ∈ C) : r = (X,Y)∧X = s(r)∧Y = d(r).
Similarly, l1 : Σ1 → C and l2 : Σ2 → R are the two labeling
functions for the nodes and the edges, respectively.
The connection between the world and the concepts has
a third component, without which communication would be
impossible. This part is the marker associated with concepts,
most often a linguistic phrase. Ideally, the relationship between
concepts and linguistic markers in a given language is injec-
tive, but this is not the case in reality. Injection exists only in
a narrower context called semantic space.
Deﬁnition 2: Let C be an n-element set of concepts and
Ck ⊆ C its k-element subset (k ≤ n). Let
S = (c1, f1),(c2, f2),...,(ck, fk)
ci ∈ Ck , fi ∈ F(i = 1,...,k ≤ n) be a series, where
F := {f|f : C ×Ck → [0,1]}
is a set of membership functions designating those c j ∈ Ck
( j = 1,...,k) concepts that participate in deﬁning a particular
ci ∈C concept (i = 1,..,.n). Let V = Rk be a vector space over
R and Ψ : C → V surjective mapping as follows:
1) ∀c ∈ C : Ψ(c) = v(v1,v2,...,vk) ∈ V.
2) vi = fi(c,ci) ∈ [0,1], (i = 1,...,k), where (ci, fi) ∈ S
and (c,ci) ∈ C ×Ck, a fuzzy relationship between c and
ci, (i = 1,...,k).
Given S, the vector space V is called the semantic space of C
if the mapping Ψ is bijective.
Semantic networks restricted to various semantic spaces
provide a comprehensive and tractable way for examining the
semantic relationships among the concepts denoted by various
word phrases. These relationships can be deﬁned in various
ways. We focus on generalization and specialization, which
are called hypernymy and hyponymy relations in linguistics.
Deﬁnition 3: Let C be the set of concepts and let L be a
natural language with the alphabet Σ. Let Σ∗ be the constraint
of the set of words over L for the valid words and word
phrases of L. Let X,Y ∈ Σ∗, and let M : Σ∗ → C be a mapping
from the word phrases to the set of concepts. Let P be the
set of properties describing the objects of the world, and let
Π : C → P be a mapping from the set of concepts to the set of
properties. Hyponymy relation between X and Y is deﬁned as
Hyponym(X,Y) ⇐⇒ Π(M(Y)) ⊂ Π(M(X)).
Hyperonymy relation, denoted as Hyperonym(X,Y), is the
inverse relation of the hyponymy.
Note: Other linguistic relationships, such as meronymy,
holonymy, synonymy, and antonymy, can be deﬁned similarly.
III. MINING LINGUISTIC RELATIONSHIPS FROM STACK
OVERFLOW POSTS
Stack Overﬂow is an extensive knowledge repository in
the software development and engineering ﬁeld. The phrases
found in its posts might serve as a base to build a semantic
network for the software development domain. Nevertheless,
some critical issues need to be considered upon using this
dataset. The posts often contain code fragments or special
character strings used in programming. Besides, many posts
are written by non-English speakers; therefore, they might
contain smaller or bigger grammatical errors.
In terms of content value, tacit knowledge in Stack Overﬂow
posts can be trusted to be high quality because of the site’s
strict community control. Posts that fail to meet requirements
established by the SO community are to be closed and
eventually deleted [7]. The SO community has been making a
signiﬁcant effort to maintain the quality and the professionality
of the site [8]; therefore, the information in posts with positive
scores can be considered trustworthy.
Hyponymy and hyperonymy relations can be extracted from
free texts using lexico-syntactic patterns proposed by Hearst
[9]. These relationships represent the canonical is-a relation-
ship, which can also be interpreted as the specialization and the
generalization in object-oriented modeling. The collection of
lexico-syntactic patterns have been gradually expanded since
Hearst established the base models. The momentum of this
expansion comes from the rapid spread of web-based text
mining. Our work adopted the patterns introduced in [10].
These patterns were slightly modiﬁed to avoid collision with
the extraction process of noun phrases from the text and write
more compact code.
In computer-based language processing, we need to give a
formal deﬁnition to the examined linguistic structures, which
approximates the set of the structures used in reality. For this
purpose, the phrase structure grammar [11] is a suitable choice
due to its algorithmic manageability.
For matching lexico-syntactic patterns on the input text
identifying noun phrases [12] in the original text is required.
2
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

TABLE 1
GRAMMAR DEFINED FOR NP RECOGNITION
⟨NP⟩
|=
(PDT) (DET (CD) | PRP$)
(⟨ADJPS⟩) ⟨HEAD⟩ (⟨GERS⟩) (⟨PPS⟩) (⟨REL⟩)
⟨ADJPS⟩
|=
(⟨ADVS⟩) ⟨ADJ⟩ (⟨CONJ⟩ ⟨ADJ⟩)∗
⟨ADVS⟩
|=
⟨ADV⟩ (⟨CONJ⟩ ⟨ADV⟩)∗
⟨ADJ⟩
|=
JJ | JJR | JJS
⟨ADV⟩
|=
RB | RBR | RBS
⟨HEAD⟩
|=
NN(POS)
|
NNP(POS)
|
NNPS(POS)
|
NNS(POS) | PRP | SYM | FW
⟨GERS⟩
|=
⟨GER⟩ (⟨CONJ⟩ ⟨GER⟩)∗
⟨GER⟩
|=
VBG (⟨NP⟩)
⟨PPS⟩
|=
IN ⟨NP⟩ | TO VB (⟨CONJ⟩ VB)∗
⟨CONJ⟩
|=
, | CC
⟨REL⟩
|=
WDT | WP | WP$ | WRB ⟨VP⟩
For this purpose, a phrase structure grammar was developed,
which is shown in Table 1. The ⟨.⟩ symbols denote the non-
terminals, whereas the symbols without brackets denote the
terminals based on the POS (parts-of-speech) tags deﬁned
in The Penn Treebank [13]. Parentheses denote the optional
elements.
Note: Although the relative clauses are presented in the
grammar, they are omitted from the current implementation.
IV. TECHNOLOGY USED IN MINING
This section describes the technical background of the
mining process applied to the Stack Overﬂow posts presented
in Figure 1.
The preprocessing phase follows the same steps as deﬁned
in our previous work [14]. The dataset used is the Stack
Overﬂow dump was created on March 4, 2019, and migrated
locally to a PostgreSQL 10.10 database. From this dataset,
posts that received non-negative scores from the Stack Over-
ﬂow community were selected.
The HTML tags were removed from the selected posts,
and the code blocks and hyperlinks were replaced with code
example and link strings, respectively. Some characters,
such as the +, |, and \ were replaced with a single space
character, but punctuation characters were retained. C++,
C#, F#, and their lowercase counterparts were replaced with
cplusplus, csharp, and fsharp, respectively. The re-
sulting text was split into sentences.
The sentences need further processing steps before the NP
(noun phrase) recognition can be performed. All characters
were converted into lowercase. Non-alphabetic characters were
transformed into a single space, but those characters that play a
vital role in recognizing the patterns, or have a distinctive role
in the text, such as comma, apostrophe, colon, were retained.
Additionally, the recognition process needs the parts-of-speech
tags; therefore, the sentences were converted into a series of
(word, POS tag) tuple pairs.
The NP parser is based on the automation presented in
Figure 2. The automation utilizes the POS tags to compute
Getting body of
posts
Text cleaning
and
preprocessing
Tagging NP
components
Extracting "is-a"
relationships
Post
processing "is-
a" pairs
Creating "is-a"
graph
Importing graph
into Neo4J
PgSQL
Neo4J
File of
sentences
"is-a" pairs
"is-a" graphs
Figure 1. Creating semantic network
the proper transition. Although recognizing NPs and lexico-
syntactic patterns is a separate procedure, the lexical elements
(such as some, any, kind, sort) used in lexico-syntactic patterns
should be considered when recognizing NPs.
The POS tagging does not always produce the appropriate
tag, which requires manual work to correct it. In our experi-
ments, two important cases were detected and corrected. In the
expressions sound/s like, the POS tag of sound was corrected
to VB (verb), and in the case of the phrase operating system,
the POS tag of operating was corrected to JJ (adjective).
By running the procedure described above, the noun phrases
recognized by the algorithm are tagged using <NP > and
</NP > tags in the string containing the original tokens. For
example, the sentence ”Flour or any other grain can be found
in the kitchen” is transformed to ”<NP > ﬂour </NP > or
any other <NP > grain </NP > can be found in <NP >
the kitchen </NP >” series of tokens.
The token series obtained in the NP recognition process was
the input for the extraction of relations ﬁtted to lexico-syntactic
patterns presented in Table 2 . The extractor was written using
regular expressions carefully designed to identify the patterns.
From the recognized terms, the pairs of related NPs were
written in a CSV ﬁle. The ﬁrst part of the pair is the more
speciﬁc NP (hyponym part), and the second part is the more
general one (hyperonym part). The pairs were only saved if
neither of the two parts of the pairs was a single pronoun.
The lexico-syntactic patterns used in the extraction process
assume an input text written with proper English grammar.
However, Stack Overﬂow posts are often written by non-
English speaking users who sometimes make grammatical
errors. These errors might result in a wrong relation extracted
from the text. Therefore, a few post-processing steps have been
introduced to reduce the number of mismatched pairs.
During the post-processing, pairs in which one part is empty
or contains a single character other than c, f, and b, and those in
which both parts are the same, have been deleted. If only one
part of the relation is a proper noun, that part was considered
the hyponymy part. If both parts of the relationship are proper
nouns, or neither of them, the relationship was checked against
WordNet [15] and was corrected according to it.
After the post-processing phase, the extracted pairs are
ready for graph building. These pairs provide the set of edges
of the semantic graph. Unfortunately, duplications can also
occur among these pairs, which are to be removed during the
graph building process. For building the graph, the networkx
Python package was utilized. The resulting graph was then
imported into a Neo4J [16] database.
3
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

BASE STATE
PDT STATE
DET STATE
CD STATE
PRN STATE
ADV STATE
ADJ STATE
CON1 STATE
HEAD STATE
POS STATE
INTERRUPT
SUMMARY
PPIN STATE
PPTO STATE
GER STATE
VERB STATE
CON2 STATE
CON3 STATE
EPSILON
EPSILON
EPSILON
INCOMPLETE
PP
EOF
Figure 2. NP Extractor Automation
V. EXAMINATION OF THE EXTRACTED SEMANTIC NET
This section provides the investigation results of the ex-
tracted semantic network and some statistical data describing
the various outcomes of the whole process.
The total number of imported posts from the dump created
on March 4, 2019, is 43,872,992. Only posts with non-negative
scores were considered for further processing, the number of
which is 42,160,482; this is 96.1 % of the original posts. From
this dataset, 137,440,998 sentences were created during the
sentence-based tokenization process; 7,583,195 hyponymy and
hyperonymy relations were extracted. The ratio is quite small;
approximately only 5.5 % of the sentences contain the studied
relations. It is important to note that the amount of relations
imported into the semantic graph is smaller due to the ﬁltering
and merging method applied during the graph creation. Table 2
presents the distribution of the extracted relations from this
set. According to the distribution, the following three lexico-
syntactic patterns are used the most dominantly in Stack
Overﬂow posts: NPt is|are|was|were (a|an) NPh, NPt as NPh
and NPh like NPt. In turn, the occurrence of the following
patterns is marginal: NPh example of this is|are NPt and
NPt or the many NPh.
The statistical results were compared to those of Seitner et
al [10]. They applied a similar lexico-syntactic pattern-based
mining on the dataset obtained from CommonCrawl [17] using
a slightly different grammar for NP identiﬁcation and, there-
fore, a slightly different set of patterns. Despite the differences,
we found that the occurrence of patterns followed a similar
trend. Interestingly, according to Seitner et al., the most com-
monly occurring pattern is a sub-pattern of the most frequent
pattern found in our study (NPt is|are|was|were (a|an) NPh).
The incidence of the other patterns is similar, although there
are some differences as well. For example, the frequency of
the pattern NPt as NPh is signiﬁcant in our case, while in
Seitner’s study, this is not typical.
Our semantic graph contains 3,926,617 nodes and 7,413,639
relationships. The considered is-a relationship is directed. The
natural direction is deﬁned by the order of the input pairs
and points from the more speciﬁc term to the more general
one. The natural degree of a given node indicates how many
examples of different higher-order concepts can be represented
with that same node. In the opposite direction, the degree of a
TABLE 2
DISTRIBUTION OF THE PATTERNS IN THE EXTRACTION RESULTS
Lexico-syntactic pattern
Number of cases
NPt is|are|was|were (a|an) NPh
3,490,476
NPt as NPh
2,143,334
NPh like NPt
1,033,497
NPh such as NPt
278,078
NPt and|or (any|some) other NPh
207,079
NPh especially|esp(.)|including|inc(.) NPt
117,151
NPh for example NPt
66,968
NPh except NPt
44,766
NPh e.g.|i.e. NPt
44,295
NPh other than NPt
33,956
NPt (is) one o f the|these|those|this|that NPh
30,996
NPt which look(s)|sound(s) like NPh
28,589
such NPh as NPt
14,969
compare NPt with NPh
10,992
NPh compared to NPt
8,106
NPh which is|are similar to NPt
6,385
NPh in particular NPt
5,671
NPh mainly|mostly|notably NPt
3,866
NPh particularly|principally NPt
3,035
NPh which is called|named NPt
2,924
NPh whether NPt or
1,957
NPt is|was|are|were a kind o f|kinds o f NPh
1,936
NPt like other NPh
1,813
NPt is|was|are|were a form o f|forms o f NPh
799
NPt is|are example(s) o f NPh
623
NPt is|was|are|were a sort o f|sorts o f NPh
620
examples o f NPh is|are NPt
276
NPt or the many NPh
21
NPh example o f this is|are NPt
17
node indicates the number of possible subtypes related to the
generality or speciﬁcity of the concept denoted by that node.
The distribution of the degree in the normal direction is
presented in Figure 3. Looking at the relationship in the
opposite direction, we get a similar distribution. It can be seen
in the ﬁgure that the degree of the node code example excels
from the distributions. The difference between the degree of
this node and that of the second-highest is 106,653 in the
normal (hyponymy → hyperonymy) direction and 208,263 in
reverse (hyperonymy → hyponymy) direction. The node with
the second highest degree in the normal direction is the node
below, with a score of 148,435. This result seems to be a
mistake because the word below can be a preposition or an
adverb. The expected results, however, should only be NPs.
However, this particular word, below, can sometimes behave
like a noun as well as an adjective [18]. Consider the following
example from a Stack Overﬂow post: ”and below is the python
interpreter setting on pycharm...”. In this case, the NLTK POS
tagger recognizes below as a noun; therefore, the NP extractor
also recognizes it as a noun phrase. The extracted relationship
is ”the python interpreter setting on pycharm | below” in
this case. The culprit is the phrase ”below is.” The tagger
recognizes all similar occurrences as nouns.
The node below and similar adverbs, such as before, after,
following, next, and above, are not interpretable without their
actual context. Therefore, nodes representing these words can
be removed securely from the semantic network, including
their counterparts with either deﬁnite or indeﬁnite articles.
4
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

Figure 3. Distribution of degree in hyponym-hyperonym direction
Similarly, placeholders, such as the phrase code example or
the word link, are replacing speciﬁc objects – code snippets
or hyperlinks, respectively – and they neither provide a re-
ﬁnement nor a more general meaning of any terms. These
nodes can also be discarded from the semantic network. After
discarding the nodes mentioned above, 3,926,609 nodes and
6,059,017 relationships remained in the resulting graph.
The degree distribution of the resulting graph was also
examined. Considering the distance in the square of skew-
ness and kurtosis space of the actual distribution from some
theoretical distributions indicates that a specialized gamma
distribution can be ﬁtted. The analysis results show that in the
case of the hyponymy → hyperonymy direction, the distribu-
tion follows the Box-Cox Power Exponential distribution [19],
whereas in the case of the opposite direction, the distribution
follows the power-law distribution.
The average clustering coefﬁcient is 0.017, meaning that
only 1.7% of the concepts tend to form triadic closures.
A possible explanation of this small number can be that
large degree nodes connect the communities formed in the
knowledge graph. This phenomenon can be interpreted as the
concepts being deﬁned based on a few core concepts. Further
studies are needed to conﬁrm this conjecture.
VI. THREATS TO VALIDITY
The methods presented in this paper, along with the results
of the evaluation, have some limitations:
• The automation that recognizes noun phrases is not com-
plete. Relative clauses are omitted from the automation.
These parts are built on additional structures like verb
phrases, allowing for the recognition of more complex
noun phrases. Building the knowledge graph, we do not
need such complex terms; therefore, omitting this part of
the grammar does not cause any loss regarding the results.
• Lexico-syntactic patterns used in the extraction process
do not fully cover possible relationships, and collision
with the NP grammar might occur. During the implemen-
tation, we considered the structures found in the literature,
and we avoided those that arise in other relation-type in
terms of the substructure. Our tool considers the special
terms used in the lexico-syntactic patterns and reduces
errors resulting from collisions with grammar.
• In some special cases, the NLTK POS tagger assigns
an incorrect tag to some terms. These mistakes can
be corrected using manual inspection or applying other
taggers and examining the differences. We focused only
on crucial cases and corrected the mistagged terms.
• The patterns used in the implementation are based on
text with proper English grammar. However, grammatical
errors are common, which has a detrimental effect on
the extraction process. We have effectively mitigated this
effect using various post-processing steps.
VII. RELATED WORK
The graph structure of semantic databases was exploited
after the 2000s, thanks to increased storage and computa-
tional capacities. Steyvers and Tenebaum [20] investigated
the structure of two famous semantic networks, WordNet and
Roget’s Thesaurus. They found that these databases have a
small world structure and the distributions of the number of
connections follow the power-law distribution. Seitner et al.
[10] have extracted hyperonym relations from the Common-
Crawl web corpus. Itto et al. [21] focused on subtracting
meronymy relationships from texts created in product devel-
opment and customer service relations, whereas Yildiz and
his workmates studied the meronym relationships in Turkish
raw text, applying lexico-syntactic patterns [22]. Vizcaino et
al. [23] focused on establishing a standard vocabulary among
the participants of global software development to overcome
the communication barriers. Futia and his workmates have
developed a tool called SeMi to build large-scale Knowledge
Graphs from structured sources semi-automatically [24].
NLP methods, such as the usage of ontologies and machine
learning in requirements engineering, are also intensively ex-
amined. Falessi et al. [25] investigated the usage of NLP tech-
niques in requirements classiﬁcation. Holter [26] developed
methods based on NLP techniques to translate requirements
given in natural language into a structured semantic database.
A systematic literature review of using machine learning
methods and NLP in requirements engineering is presented in
the paper of Ahmad et al. [27]. The ontology-based approach
of extracting functional or non-functional requirements from
the original texts has also been applied successfully. Li and
Chen [28] and Alrumaih et al. [29] applied an ontology-based
approach for classifying requirements.
VIII. CONCLUSION
A signiﬁcant proportion of communication difﬁculties
among people and organizations stem from distinct interpre-
tations of the linguistic elements used in communication. The
only way to deal with semantic differences caused by different
contexts is to clarify the meanings of the terms used, for which
semantic networks are suitable tools.
5
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

In this paper, we have examined the structure of semantic
networks and given a precise deﬁnition of both networks and
the concept of semantic space. We have provided a grammar
that can recognize complex noun phrases and presented an
expandable process based on lexico-syntactic patterns to ex-
tract hyperonym relations from written texts. The process was
applied on the posts of StackOverﬂow, which plays the role
of semantic space of the software development.
The investigation of the yielded semantic graph shows that
relatively few sentences from the available textual corpus
contained structures ﬁtting the relationships examined. The
distribution of patterns also shows that the users prefer the
usage of some particular patterns to others. The semantic
network structure suggests that the concepts in the studied
environment are built from a small number of basic concepts.
This phenomenon can be seen on the graph; several nodes are
connected to these nodes representing the basic concepts. This
phenomenon, however, needs further investigation.
As a continuation of the research, our goals include ex-
tracting other relationships, such as meronymy-holonymy and
incorporating them into the structure of the existing semantic
network. Our further aim is to investigate learning methods in
extracting these relationships and applying the methods stud-
ied to build semantic networks in different semantic domains.
ACKNOWLEDGMENT
The research presented in this paper, carried out by Univer-
sity of Szeged was supported by the Ministry of Innovation
and the National Research, Development and Innovation Ofﬁce
within the framework of the Artiﬁcial Intelligence National
Laboratory Programme. This research was supported by grant
NKFIH-1279-2/2020 of the Ministry for Innovation and Tech-
nology, Hungary.
REFERENCES
[1] S. Bundred, “Solutions to silos: joining up knowledge,” Public Money &
Management, vol. 26, no. 2, pp. 125–130, 2016, DOI: 10.1111/j.1467-
9302.2006.00511.x.
[2] H. Enquist and N. Makrygiannis, “Understanding misunderstandings
[in complex information systems development],” in Proceedings of the
thirty-ﬁrst Hawaii International Conference on System Sciences, vol. 6.
Los Alamitos, CA, USA: IEEE Computer Society, 1998, pp. 83–92,
DOI: 10.1109/HICSS.1998.654762.
[3] T. Mohapeloa, “Effects of silo mentality on corporate ITC’s business
model,” in Proceedings of the International Conference on Business
Excellence, vol. 11, no. 1, 2017, pp. 1009–1019, DOI: 10.1515/picbe-
2017-0105.
[4] D. Firesmith, “Common requirements problems, their negative conse-
quences, and the industry best practices to help solve them.” Jour-
nal of Object Technology, vol. 6, no. 1, pp. 17–33, 2007, DOI:
10.5381/jot.2007.6.1.c2.
[5] P. Csaba and L. ´Agnes, Pszicholingvisztika I-II.
Budapest: Akad´emiai
kiad´o, 2014, ISBN: 978-963-05-9499-8.
[6] G. Frege, P. T. Geach, and M. Black, “On concept and object,” Mind,
vol. 60, no. 238, pp. 168–180, 1951, ISSN: 0026-4423.
[7] L. T´oth, B. Nagy, T. Gyim´othy, and L. Vid´acs, “Why will my question
be closed? NLP-based pre-submission predictions of question closing
reasons on stack overﬂow,” in Proceedings of the ACM/IEEE 42nd
International Conference on Software Engineering: New Ideas and
Emerging Results.
New York, NY, USA: Association for Computing
Machinery, 2020, p. 45–48, DOI: 10.1145/3377816.3381733.
[8] D. Correa and A. Sureka, “Fit or unﬁt: Analysis and prediction of
’closed questions’ on stack overﬂow,” in Proceedings of the First ACM
Conference on Online Social Networks, ser. COSN ’13.
New York,
NY, USA: ACM, 2013, pp. 201–212, DOI: 10.1145/2512938.2512954.
[9] M. A. Hearst, “Automatic acquisition of hyponyms from large text
corpora,” in COOLING ’92: The 14th International Conference on
Computational Linguistics.
USA: Association for Computational
Linguistics, 1992, DOI: 10.5555/992133.
[10] J. Seitner, C. Bizer, K. Eckert, S. Faralli, R. Meusel, H. Paulheim,
and S. P. Ponzetto, “A large database of hypernymy relations extracted
from the web,” in Proceedings of the Tenth International Conference
on Language Resources and Evaluation.
Portoroˇz, Slovenia: European
Language Resources Association (ELRA), 2016, pp. 360–367.
[11] N. Chomsky and D. W. Lightfoot, Syntactic Structures. Berlin, Boston:
Walter de Gruyter, 2009, ISBN: 978-3-11-021832-9.
[12] D. Crystal, A Dictionary of Linguistics and Phonetics, Sixth Edition.
Wiley-Blackwell, 2008, ISBN: 9781444302776.
[13] A. Taylor, M. Marcus, and B. Santorini, “The Penn Treebank: An
Overview,” in Treebanks: Building and Using Parsed Corpora, ser. Text,
Speech and Language Technology, Dordrecht, 2003, pp. 5–22, DOI:
10.1007/978-94-010-0201-1 1.
[14] L. T´oth, B. Nagy, T. Gyim´othy, and L. Vid´acs, “Mining hypernyms se-
mantic relations from stack overﬂow,” in Proceedings of the IEEE/ACM
42nd International Conference on Software Engineering Workshops.
New York, NY, USA: Association for Computing Machinery, 2020, p.
360–366, DOI: 10.1145/3387940.3392160.
[15] G. A. Miller. Wordnet: A lexical database for english. [Online]. Avail-
able: https://wordnet.princeton.edu/ 2021.10.26.
[16] Graph modeling guidelines - developer guides. [Online]. Available:
http://neo4j.com/developer/guide-data-modeling/ 2021.10.26.
[17] CommonCrawl website. [Online]. Available: https://commoncrawl.org/
2021.10.26.
[18] Merriam-Webster
dictionary:
bellow.
[Online].
Available:
https://www.merriam-webster.com/dictionary/below/ 2021.10.26.
[19] R. A. Rigby and D. M. Stasinopoulos, “Smooth centile curves for
skew and kurtotic data modelled using the Box-Cox power exponential
distribution,” Statistics in Medicine, vol. 23, no. 19, pp. 3053–3076,
2004, DOI: 10.1002/sim.1861.
[20] M. Steyvers and J. B. Tenenbaum, “The large-scale structure of
semantic networks: statistical analyses and a model of semantic
growth,” Cognitive Science, vol. 29, no. 1, pp. 41–78, 2005, DOI:
10.1207/s15516709cog2901 3.
[21] A. Ittoo, G. Bouma, L. Maruster, and H. Wortmann, “Extract-
ing meronymy relationships from domain–speciﬁc, textual corporate
databases,” in Lecture Notes in Computer Sciences, vol. 6177.
Berlin,
Heidelberg: Springer, 2010, pp. 48–59, DOI: 10.1007/978-3-642-13881-
2.
[22] T. Yıldız, S. Yıldırım, and B. Diri, “A study on turkish meronym
extraction using a variety of lexico–syntactic patterns,” in Human
Language Technology. Challenges for Computer Science and Linguistics.
Cham: Springer International Publishing, 2016, pp. 386–394, DOI:
10.1007/978-3-319-43808-5 29.
[23] A. Vizca´ıno, F. Garc´ıa, M. Piattini, and S. Beecham, “A vali-
dated ontology for global software development,” Computer Stan-
dards & Interfaces, vol. 46, no. C, pp. 66–78, may 2016, DOI:
10.1016/j.csi.2016.02.004.
[24] G. Futia, A. Vetr`o, and J. C. De Martin, “SeMi: A semantic modeling
machine to build knowledge graphs with graph neural networks,” Soft-
wareX, vol. 12, p. 100516, Jul. 2020, DOI: 10.1016/j.softx.2020.100516.
[25] D. Falessi and G. Cantone, “The effort savings from using nlp to classify
equivalent requirements,” IEEE Software, vol. 36, no. 1, pp. 48–55, 2019,
DOI: 10.1109/MS.2018.2874620.
[26] O. M. Holter, “Semantic parsing of textual requirements,” in The Seman-
tic Web: ESWC 2020 Satellite Events.
Cham: Springer International
Publishing, 2020, pp. 240–249, DOI: 10.1007/978-3-030-62327-2 39.
[27] A. Ahmad, C. Feng, M. Khan, A. Khan, A. Ullah, S. Nazir, and A. Tahir,
“A systematic literature review on using machine learning algorithms for
software requirements identiﬁcation on Stack Overﬂow,” Security and
Communication Networks, 2020, dOI: 10.1155/2020/8830683.
[28] T. Li and Z. Chen, “An ontology-based learning approach for auto-
matically classifying security requirements,” Journal of Systems and
Software, vol. 165, p. 110566, 2020, DOI: 10.1016/j.jss.2020.110566.
[29] H. Alrumaih, A. Mirza, and H. Alsalamah, “Domain ontology
for requirements classiﬁcation in requirements engineering context,”
IEEE Access, vol. 8, pp. 89 899–89 908, 2020, DOI: 10.1109/AC-
CESS.2020.2993838.
6
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-923-2
FASSI 2021 : The Seventh International Conference on Fundamentals and Advances in Software Systems Integration

