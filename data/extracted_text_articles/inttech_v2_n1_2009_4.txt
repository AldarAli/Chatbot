Performance Analysis of a Priority Queue with Session-based Arrivals and its
Application to E-commerce Web Servers
Joris Walraevens, Sabine Wittevrongel and Herwig Bruneel
Department of Telecommunications and Information Processing (IR07)
Ghent University - UGent
Sint-Pietersnieuwstraat 41, B-9000 Gent, Belgium.
E-mail: {jw,sw,hb}@telin.UGent.be
Abstract
In this paper, we analyze a discrete-time priority queue
with a session-based arrival process. We consider an in-
ﬁnitely large user population, where each user can start
and end sessions. Sessions belong to one of two classes and
generate a variable number of ﬁxed-length packets which
arrive to the queue at the rate of one packet per slot. The
lengths of the sessions are generally distributed. Packets
of the ﬁrst class have transmission priority over packets of
the other class. The model is motivated by E-commerce
web servers and web servers handling delay-sensitive and
delay-insensitive content. By using probability generating
functions, performance measures of the queue such as the
moments of the packet delays of both classes are calculated.
The impact of the priority scheduling discipline and of the
session nature of the arrival process is demonstrated. We
furthermore use our analysis to provide speciﬁc results for
an E-commerce web server.
Keywords-priority; session arrivals; E-commerce; web
server; queueing analysis
1
Introduction
We analyze a two-class discrete-time Head-Of-the-Line
(HOL) priority queue with a session-based arrival process.
HOL priority scheduling is one of the main scheduling
types in network buffers to diversify the delays of trafﬁc
streams with different delay requirements [24].When delay-
sensitive high-priority packets (packets of voice and video
streams, gaming . . . ) are present in the buffer, they are
transmitted. Best-effort low-priority packets can thus only
be transmitted when no high-priority trafﬁc is present. An-
other reason why one would like to diversify the delay char-
acteristics of different applications is the following: one ap-
plication might provide revenues for the provider while an-
other does not (or to a lesser extent). It is then natural (and
proﬁtable) to give priority to the packets of the ﬁrst applica-
tion.
Besides priority scheduling, there are numerous other
scheduling types proposed in the literature to diversify
the Quality-of-Service (QoS) of different applications. A
(theoretical) scheduling discipline is Generalized Processor
Sharing (GPS). With this discipline, the ‘transmission unit’
spends weighted fractions of its capacity on the different
classes.
Delay-sensitive trafﬁc gets a larger weight than
delay-insensitive trafﬁc, so that it gets some kind of pref-
erential treatment. One possible implementation of GPS is
Weighted Fair Queueing. For a further overview of such
scheduling disciplines, we refer to [12]. However, priority
scheduling is still one of the most popular scheduling types,
since it is relatively easy to implement and to operate.
In the current paper, we further consider an arrival pro-
cess induced by a two-layered structure. Sessions are started
and terminated by users on the higher layer. These sessions
inject trains of packets in the network. Since we perform a
discrete-time analysis, we assume time is divided into slots
of equal length and we assume that packets of a session ar-
rive to the queue at the rate of one packet per slot. Note
that this two-layered structure introduces time correlation
in the packet arrival process. Indeed, since the packets in
a session arrive in consecutive slots, the number of packet
arrivals in one slot depends on the number of arrivals in
previous slots. Session-based arrival processes are an ade-
quate choice to model, e.g., the common segmentation of
data ﬁles into packets before their transmission through a
telecommunication network [14,17].
In particular, the suggested arrival process is an ideal
candidate to model the output buffer of a web server [15].
A web server is a computer system that accepts requests
from users for a certain web page or embedded ﬁle and that
responds by sending the requested ﬁle to the user. Trafﬁc
generated by a web server towards its output buffer can be
46
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

described by a session-based arrival process. In the case
of an E-commerce web server, it makes sense to prioritize
the downloads on a (potential) revenue base [27], that is,
to give priority to the transmission of packets of content
that is likely to provide (large) revenues. Furthermore, most
web pages contain content that is delay-sensitive, for in-
stance multimedia content. Priority can then also be given
to the transmission of ﬁles containing this content over other
downloads [37].
From a queueing-analysis point of view, the combina-
tion of a priority scheduling discipline and a session-based
arrival process with generally distributed session lengths
forms the main novelty of this paper. We thereby extend
previous analyses [5, 32] where the session lengths were
assumed to have a speciﬁc distribution (deterministic and
geometric respectively). The distributions of the session
lengths may further be class-dependent, which reﬂects that
different priority classes represent different applications.
We analyze the buffer contents (i.e., the number of packets
in the buffer) as well as the packet delays (i.e., the num-
ber of slots a packet stays in the buffer) of both the high-
priority and low-priority class using probability generating
functions (pgfs). In contrast with the speciﬁc session-length
distributions studied in the past (see [5, 32]), an inﬁnite-
dimensional state vector has to be deﬁned when dealing
with generally distributed session lengths. This combined
with the priority scheduling makes the analysis of the low-
priority buffer content and packet delay far from straightfor-
ward. Nevertheless, closed-form formulas for the means of
these stochastic variables (and in most cases also for higher
moments) can be found by means of the analysis technique
developed in this paper. From a networking point of view,
the added value lies in the application of our results to an
E-commerce web server. We ﬁnally note that this paper is
the extended version of [1].
The remainder of the paper is structured as follows. In
the next two sections, we describe some related literature
and present the mathematical model respectively. In section
4, we construct a functional equation. This functional equa-
tion is the starting point of the analysis of the steady-state
number of arrivals per slot, the steady-state buffer content
and steady-state packet delay, described in sections 5, 6 and
7, respectively. Numerical examples are treated in section
8, while we apply our results to an E-commerce web server
in section 9. We ﬁnally conclude this paper in section 10.
2
Related literature
A ﬁrst property of our model is the HOL priority
scheduling.
There have been a large number of contri-
butions in the related literature with respect to the per-
formance analysis of HOL priority queues.
In particu-
lar, discrete-time HOL priority queues with determinis-
tic service times equal to one slot have been studied in
[4, 9, 11, 13, 19, 20, 22, 25, 26, 28, 30, 31, 35]. Hashida and
Takahashi [13] analyze a two-class priority system, where
the high-priority arrivals and low-priority arrivals are gov-
erned by a two-state Markov-modulated Batch Bernoulli
Process and a Batch Bernoulli Process respectively. The
numbers of per-slot arriving high-priority packets are gov-
erned by an underlying Markov chain and the numbers of
per-slot low-priority arrivals are independent and identi-
cally distributed (i.i.d.). Application of a conservation law
leads to expressions for the mean delays of both classes.
Takine et al. [26] analyze the same model as in [13] by
means of matrix-analytic techniques.
Moments of high-
priority, low-priority and total system contents and mo-
ments of high-priority and low-priority delay are calculated.
In [25], bounds for the delay distribution are given in a
multi-server queue with a rather general arrival process. Xa-
bier Albizuri et al. [35] study the delay of the low-priority
trafﬁc in a multi-server queue by assuming that the number
of servers available for the low-priority trafﬁc is variable
(depending on the number of high-priority packets served at
the time). Mehmet Ali and Song [22] analyze a queue with
the arrival process existing of a number of two-state Marko-
vian sources and by using probability generating functions.
In [19], priority queueing systems with a general number of
priority classes are analyzed. The distribution of the num-
ber of per-slot arrivals depends on the state of a two-state
Markov chain. In [4, 20], two-class multiserver queues are
analyzed with the number of arrivals i.i.d. from slot to slot.
The joint pgf of the system contents of both classes is cal-
culated in both papers (although the analysis in [4] is more
tedious than in [20]). The pgfs of the delays of both types
of packets are also calculated in [20]. From these pgfs, mo-
ments of the analyzed stochastic variables are calculated in
both papers. In [4], the corresponding probabilities are fur-
thermore numerically determined using Fast Fourier Trans-
forms, while these probabilities are analytically approxi-
mated for high values of the stochastic variable (tail proba-
bilities) in [20]. Walraevens et al. [30,31] study the steady-
state buffer content and packet delay in the special case of
an output-queueing switch with Bernoulli arrivals and the
transient buffer content respectively. Finally, in [9, 11, 28],
different queueing models with ﬁnite buffer size are studied.
A second important characteristic of our model is the
session-based nature of the arrival process. First-In-First-
Out (FIFO) queues with session-based arrivals are ana-
lyzed in [2, 3, 8, 33, 34].
Bruneel [2, 3] and Wittevron-
gel [33] analyze different aspects of FIFO queues with a
session-based arrival process and geometrically distributed
session lengths. This model is further extended to gener-
ally distributed session lengths by Wittevrongel and Bruneel
[33, 34]. De Vuyst et al. [8] further added a second corre-
lation in the model (besides the session nature of the arrival
47
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

process) by introducing a two-state environment that deter-
mines the number of starting sessions. Somewhat related
on/off-type arrival models are considered in [10,18,36], also
for the FIFO case. Further in [6], sessions consisting of a
ﬁxed number of packets are considered in case of an uncor-
related packet arrival process.
In view of the importance of priority scheduling, HOL
priority queues with session-based arrivals have been stud-
ied as well. Daigle [7] calculates mean session delays in a
continuous-time priority queue with session-based arrivals.
Our current analysis is a direct extension of the analyses
in [5] and [32] where discrete-time HOL priority queues are
analyzed with deterministic and geometric session lengths
respectively.
3
Framework and queueing model
We make extensive use of probability generating func-
tions (pgfs) in this paper. The pgf of a generic discrete
random variable X is deﬁned as X(z) ≜ E[zX] with
E[.] the expected-value operator.
There is a one-to-one
map between the probability mass function (pmf) x(n) ≜
Prob[X = n], n ≥ 0 and its pgf X(z), as X(z) is the z-
transform of the sequence {x(n), n ≥ 0}:
X(z) =
∞
X
n=0
x(n)zn.
(1)
X(z) thus completely characterizes the random variable.
Note that X(1) = 1. Furthermore, moments of the ran-
dom variable are easily calculated by means of the moment-
generating property of pgfs. For instance, the mean value
of a random variable is given by taking the derivative of its
pgf in 1: E[X] = X′(1). It is straightforward to extend
the notion of pgfs to the joint pgf of more than one random
variable.
We consider a discrete-time single-server system with in-
ﬁnite buffer space. Time is assumed to be slotted. There are
two types of sessions, namely sessions of class 1 and ses-
sions of class 2. The numbers of newly generated class-j
sessions during consecutive slots are independent and iden-
tically distributed (i.i.d.). The numbers of newly generated
class-1 and class-2 sessions during slot k are denoted by
b1,k and b2,k respectively. Their joint pgf is deﬁned as
B(z1, z2) ≜ E
h
zb1,k
1
zb2,k
2
i
.
(2)
Note that the numbers of sessions of both classes gener-
ated during a slot may be correlated. The corresponding
marginal pgfs are denoted by Bj(z) (j = 1, 2) and are given
by B(z, 1) and B(1, z) respectively.
Each class-j session lasts a random number of slots
which is assumed generally distributed with pgf Lj(z) and
pmf lj(i), j = 1, 2, i ≥ 1. The packets of a session arrive
back to back at the rate of one packet per slot. For further
use, we deﬁne pj(n) as the probability that a class-j session
that is going on for n slots continues at least one more slot,
i.e.,
pj(n) ≜ 1 − Pn
i=1 lj(i)
1 − Pn−1
i=1 lj(i)
.
(3)
The total numbers of class-1 and class-2 packets arriving
during slot k are denoted by a1,k and a2,k respectively and
their joint pgf is deﬁned as
Ak(z1, z2) ≜ E

za1,k
1
za2,k
2

.
(4)
The transmission times of the packets equal one slot and per
slot one packet is transmitted (if there is any).
Packets of class 1 have HOL priority over packets of
class 2. This means that as long as there are class-1 packets
in the buffer, they are transmitted. A class-2 packet can only
be transmitted when there are no class-1 packets present.
On average, B′
j(1) class-j sessions are started in a ran-
dom slot, each generating, on average, L′
j(1) packets (the
mean value of a random variable is given by the ﬁrst deriva-
tive in 1 of the pgf of the variable). Therefore the load gen-
erated by class-j packets equals
ρj =B′
j(1)L′
j(1),
(5)
j = 1, 2. We assume a stable system, i.e., the total load ρT
is smaller than 1:
ρT ≜ ρ1 + ρ2 = B′
1(1)L′
1(1) + B′
2(1)L′
2(1) < 1.
(6)
4
Start of the analysis
In this section, we ﬁrst give a Markov-chain description
of the system. In a second part, we construct a functional
equation that summarizes this Markov chain and that is the
starting point of further calculations in the next sections.
4.1
Markov-chain description
The arrival process is fully described by the random vari-
ables ej,n,k, representing the number of class-j sessions that
deliver their n-th packet during slot k. Indeed, the following
relationships hold:
ej,1,k = bj,k;
ej,n+1,k = Pej,n,k−1
i=1
c(i)
j,n,k−1,
n ≥ 1,
(7)
j = 1, 2. For a given n, the c(i)
1,n,k−1’s are i.i.d. random vari-
ables with values 0 or 1. The same holds for the c(i)
2,n,k−1’s.
The random variable c(i)
j,n,k−1 equals 1 if and only if the i-th
48
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

e1,2,k = 1, e1,4,k = 1 ⇒ a1,k = 2
e2,2,k = 2 ⇒ a2,k = 2
c(1)
2,2,k = 0, c(2)
2,2,k = 1
slot k
c(1)
1,2,k = 1, c(1)
1,4,k = 0
Figure 1. Example illustrating the involved
random variables of the arrival process. Dur-
ing slot k two high-priority sessions (red, on
top) and two low-priority sessions (blue, bot-
tom) are sending a packet. All non-zero ran-
dom variables concerning slot k are given.
active session of class j that has sent the n-th packet during
slot k − 1 continues to send a packet in the next slot. The
equations (7) can then be understood as follows: ej,1,k rep-
resents the number of class-j sessions that deliver their ﬁrst
packet during slot k and therefore equals the new number
of sessions that start in that slot. The variable ej,n+1,k cor-
responds to the number of class-j packets that deliver their
(n+1)-st packet and therefore equals the number of class-j
packets that delivered their n-th packet in the previous slot
(ej,n,k−1) and that are still sending a packet during the cur-
rent slot.
The variable aj,k, the total number of class-j packets ar-
riving during slot k, can be expressed as
aj,k =
∞
X
n=1
ej,n,k,
j = 1, 2.
(8)
The above deﬁned variables are illustrated in Figure 1.
We further denote the buffer content of class-1 packets
and class-2 packets at the beginning of slot k by u1,k and
u2,k respectively. The following system equations then di-
rectly follow from the HOL priority scheduling of class-1
packets over class-2 packets:
u1,k+1 = [u1,k − 1]+ + a1,k;
u2,k+1 = [u2,k − 1u1,k=0]+ + a2,k,
(9)
where [.]+ denotes the maximum of the argument and 0 and
with 1X the indicator function of X (1 if X is true and 0 if
X is false).
A Markovian state description of the system is given by
(e1,1,k−1, e1,2,k−1, . . . , u1,k, e2,1,k−1, e2,2,k−1, . . . , u2,k)
and equations (7)-(9) fully describe the behavior of the
system.
4.2
Construction of the functional equa-
tion
We introduce the joint pgf of the state vector:
Pk(x1,1, x1,2, . . . , z1,x2,1, x2,2, . . . , z2)
≜E


2
Y
j=1
 ∞
Y
n=1
xej,n,k−1
j,n
!
zuj,k
j

 .
(10)
It follows that
Pk+1(x1,1, x1,2, . . . , z1, x2,1, x2,2, . . . , z2) =
E




2
Y
j=1
∞
Y
n=1
(xj,nzj)ej,n,k

 z[u1,k−1]+
1
z
[u2,k−1u1,k=0]+
2


= E
h
(x1,1z1)b1,k (x2,1z2)b2,ki
×


E




2
Y
j=1
∞
Y
n=2
ej,n−1,k−1
Y
i=1
(xj,nzj)c(i)
j,n−1,k−1


× z[u2,k−1]+
2
1u1,k=0
#
+ E




2
Y
j=1
∞
Y
n=2
ej,n−1,k−1
Y
i=1
(xj,nzj)c(i)
j,n−1,k−1


× zu1,k−1
1
zu2,k
2
1u1,k>0
#)
= B(x1,1z1, x2,1z2)
×


E




2
Y
j=1
∞
Y
n=1
(Cj,n(xj,n+1zj))ej,n,k−1


× z[u2,k−1]+
2
1u1,k=0
#
+ E




2
Y
j=1
∞
Y
n=1
(Cj,n(xj,n+1zj))ej,n,k−1


× zu1,k−1
1
zu2,k
2
1u1,k>0
#)
,
(11)
by using the law of total probability, using system equa-
tions (7)-(9) and by taking into account that b1,k and b2,k
are statistically independent of the other random variables
involved. Here,
Cj,n(z) ≜E
h
zc(i)
j,n,k−1
i
= 1 − pj(n) + pj(n)z,
(12)
n ≥ 1, j = 1, 2.
This follows from the fact that the
c(i)
j,n,k−1’s are Bernoulli-distributed random variables as
49
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

mentioned before (see Figure 1). We now use the prop-
erty that a system void of class-j packets at the beginning
of a slot implies that no class-j packets arrived in the sys-
tem during the previous slot. Or in other words, using that
aj,k−1 = 0 - or equivalently that ej,n,k−1 = 0 for all n - if
uj,k = 0, we ﬁnd
Pk+1(x1,1, x1,2, .., z1, x2,1, x2,2, .., z2)
= B(x1,1z1, x2,1z2)
z1z2
[z1(z2 − 1)Pk(0, . . . , 0) + z2×
Pk(C1,1(x1,2z1), C1,2(x1,3z1), .., z1, C2,1(x2,2z2), .., z2)
+ (z1 − z2)Pk(0, .., 0, C2,1(x2,2z2), C2,2(x2,3z2), .., z2)].
(13)
In steady state, Pk and Pk+1 both converge to the same lim-
iting function P. It then follows from equation (13) that this
function must satisfy the following functional equation:
P(x1,1, x1,2, .., z1, x2,1, x2,2, .., z2)
= B(x1,1z1, x2,1z2)
z1z2
[z1(z2 − 1)P(0, . . . , 0) + z2×
P(C1,1(x1,2z1), C1,2(x1,3z1), .., z1, C2,1(x2,2z2), .., z2)
+ (z1 − z2)P(0, .., 0, C2,1(x2,2z2), C2,2(x2,3z2), .., z2)].
(14)
The functional equation (14) contains all information con-
cerning the steady-state behavior of the system, although
not in transparent form. Nevertheless, several explicit re-
sults can be derived from it, which is the subject of the fol-
lowing sections.
For future reference, we end this section with the deﬁni-
tion of some joint pgfs concerning the class-1 and the total
system content:
P1(x1, x2, .., z) ≜P(x1, x2, .., z, 1, .., 1),
(15)
PT (x1,1, x1,2, ..,x2,1, x2,2, .., z)
(16)
≜P(x1,1, x1,2, .., z, x2,1, x2,2, .., z),
that is, P1 equals P with arguments x2,j (for all j ≥ 1) and
z2 equal to 1 and PT equals P with arguments z1 and z2
both equal to z. The corresponding functional equations are
P1(x1, x2, .., z) =B1(x1z)
z
[(z − 1)P1(0, .., 0)
(17)
+ P1(C1,1(x2z), C1,2(x3z), .., z)],
PT (x1,1, x1,2, .., x2,1, x2,2, .., z)
=B(x1,1z, x2,1z)
z
[(z − 1)PT (0, .., 0)
(18)
+ PT (C1,1(x1,2z), C1,2(x1,3z), .., C2,1(x2,2z), .., z)].
5
Number of arrivals
Deﬁne the joint pgf E(x1,1, x1,2, .., x2,1, x2,2, ..) as fol-
lows:
E(x1,1, x1,2, .., x2,1, x2,2, ..) ≜ lim
k→∞ E


2
Y
j=1
∞
Y
n=1
xej,n,k
j,n

 ,
(19)
i.e., it is the joint pgf of the numbers of class-1 and class-2
sessions that deliver their n-th packet (for all n ≥ 1) during
an arbitrary slot in steady state. This pgf is given by
E(x1,1,x1,2, .., x2,1, x2,2, ..)
=P(x1,1, x1,2, .., 1, x2,1, x2,2, .., 1)
=B(x1,1, x2,1)
× E(C1,1(x1,2), C1,2(x1,3), .., C2,1(x2,2), ..).
(20)
The last step is found by putting z1 = z2 = 1 in (14).
Successive applications of (20) then lead to the following
explicit result for E:
E(x1,1,x1,2, .., x2,1, x2,2, ..)
=
∞
Y
n=0
B(g(n)
1
(x1,n+1), g(n)
2
(x2,n+1)),
(21)
with
g(n)
j
(x) ≜
n
X
i=1
lj(i) + x
 
1 −
n
X
i=1
lj(i)
!
,
(22)
j = 1, 2. To obtain (21), we have used the following rela-
tionships, which can easily be derived from (3) and (12):
Cj,1(Cj,2(..Cj,n(x)..))
=
n
X
i=1
lj(i) + x
 
1 −
n
X
i=1
lj(i)
!
,
(23)
lim
n→∞Cj,i(Cj,i+1(..Cj,n(x)..)) = 1,
i ≥ 1, (24)
j = 1, 2.
The joint pgf of the total numbers of arrivals of both
classes during a random slot in steady state is given by
A(z1, z2) =E(z1, z1, .., z2, z2, ..)
=
∞
Y
n=0
B(g(n)
1
(z1), g(n)
2
(z2)),
(25)
which is found from (21). Taking the necessary derivatives
of this expression delivers all moments of the class-1, class-
2 and total numbers of arrivals per slot in steady state. We
ﬁnd, for instance, that
E[aj] = B′
j(1)L′
j(1),
(26)
as expected.
50
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

6
Buffer content
For general (x1,1, x1,2, .., z1, x2,1, x2,2, .., z2), the func-
tional equation (14) is hard to solve. Therefore, we solve it
for a speciﬁc set of these arguments and discuss how mo-
ments of the steady-state buffer content are calculated. We
also comment on the consequences of the fact that we are
not able to solve the functional equation for general argu-
ments.
6.1
Solving the functional equation
We here select only those values of xj,n and zj, n ≥
1, j = 1, 2, for which the P-functions on both sides of equa-
tion (14) have identical arguments (when non-zero), i.e., we
choose xj,n = Cj,n(xj,n+1zj) for j = 1, 2, n ≥ 1. By
using (3) and (12) in this expression, xj,n can be solved in
terms of zj. Denoting this solution by χj,n(zj), we ﬁnd
χj,n(zj) =
P∞
i=n lj(i)zi−n
j
1 − Pn−1
i=1 lj(i)
,
n ≥ 1.
(27)
In particular, we have that χj,1(zj) = Lj(zj)/zj and
χj,n(1) = 1, n ≥ 1. Choosing xj,n = χj,n(zj) in (14),
we obtain
P(χ1,1(z1), χ1,2(z1), .., z1, χ2,1(z2), χ2,2(z2), .., z2)
=
B(L1(z1), L2(z2))
z2 [z1 − B(L1(z1), L2(z2))][z1(z2 − 1)P(0, .., 0)
+ (z1 − z2)P(0, .., 0, χ2,1(z2), χ2,2(z2), .., z2)].
(28)
P(χ1,1(z1), χ1,2(z1), .., z1, χ2,1(z2), χ2,2(z2), .., z2)
can
be fully determined by applying Rouch´e’s theorem and the
normalization condition, as is e.g. done in [32]. This leads
to
P(0, .., 0, χ2,1(z2), χ2,2(z2), .., z2)
=Y (z2)(z2 − 1)P(0, .., 0)
z2 − Y (z2)
,
(29)
P(0, .., 0) =1 − ρT
(30)
and ﬁnally
P(χ1,1(z1), χ1,2(z1), .., z1, χ2,1(z2), χ2,2(z2), .., z2)
=(1 − ρT )B(L1(z1), L2(z2))(z2 − 1)
z1 − B(L1(z1), L2(z2))
z1 − Y (z2)
z2 − Y (z2),
(31)
with Y (z) implicitly deﬁned as
Y (z) ≜B(L1(Y (z)), L2(z)),
|Y (z)| < 1 if |z| < 1.
(32)
We note that Y (z) is a pgf. As a result Y (1) = 1 and all
derivatives of Y in 1 can be calculated from (32). The ﬁrst
derivative for instance is given by
Y ′(1) =
ρ2
1 − ρ1
.
(33)
By putting z1 = z in (31) and by substituting z2 by 1 and
z respectively, we ﬁnd
P1(χ1,1(z), χ1,2(z), .., z) = (1 − ρ1)B1(L1(z))(z − 1)
z − B1(L1(z)) ,
(34)
PT (χ1,1(z), χ1,2(z), .., χ2,1(z), χ2,2(z), .., z)
=(1 − ρT )B(L1(z), L2(z))(z − 1)
z − B(L1(z), L2(z)) , (35)
with P1 and PT deﬁned in (15) and (16), respectively. Note
that in order to obtain (34) from (31), l’Hˆopital’s rule has to
be applied. This calculation further needs expression (33)
for Y ′(1). Expressions (34) and (35) will be used in the
next subsection and the following sections.
6.2
Calculation of moments
By substitution of x1,n and x2,n (n ≥ 1) by 1 in ex-
pression (14), a functional equation is found for the joint
pgf of the buffer contents of both classes. It does not seem
to be possible to derive an explicit expression for this pgf
from this functional equation. However, all moments of the
class-1 and the total buffer content as well as the mean of the
class-2 buffer content can be calculated from the results of
subsection 6.1. The moments of the class-1 content can be
calculated from (17) and (34) by taking appropriate deriva-
tives (for more details on this we refer to [34]). Similarly,
the moments of the total buffer content are calculated from
(18) and (35). The mean class-2 buffer content is ﬁnally
calculated as the difference between the mean total buffer
content and the mean class-1 content.
Obtaining higher moments of the class-2 buffer content
is still an open issue at the moment, since the dependency
between the class-1 and class-2 buffer contents inﬂuences
these. As discussed before, we are not able to character-
ize this dependency. However, we show in the following
section that this does not prohibit us from obtaining the mo-
ments of the low-priority packet delay.
7
Packet delay
The delay of a packet is deﬁned as the number of slots
between the end of the packet’s slot of arrival and the end of
its departure slot (thus excluding its arrival slot and includ-
ing its departure slot). Within each class, we assume that
packets are transmitted in the order of their arrival. Recall
51
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

that class-1 packets have HOL priority over class-2 packets.
We analyze the class-1 and class-2 packet delays separately
in the remainder of this section.
7.1
Class-1 packet delay
The analysis of the class-1 packet delay is rather easy
once the observation is made that transmission of class-1
packets is not inﬂuenced by class-2 packets in the system,
due to the HOL priority scheduling discipline. Due to a dis-
tributional form of Little’s law being applicable here [29],
D1(z), the pgf of the class-1 packet delay in steady state, is
expressed in terms of the pgf P1(1, .., z) of the buffer con-
tent of class 1 at the beginning of a random slot, as follows:
D1(z) =P1(1, .., z) − 1 + ρ1
ρ1
.
(36)
We may thus derive the moments of the class-1 packet delay
from the moments of the class-1 system content. We argued
in the previous section that we are able to calculate the latter.
The mean class-1 packet delay E[d1] is given by
E[d1] = D′
1(1) = 1 + ρ1B′
1(1)L′′
1(1) + B′′
1 (1)(L′
1(1))2
2ρ1(1 − ρ1)
.
(37)
The mean delay of a high-priority packet is thus inﬂuenced
by the mean values and the second moments of the class-
1 session lengths and of the number of starting sessions of
class 1 in a slot.
7.2
Class-2 packet delay
The analysis of the steady-state class-2 packet delay is
more involved, because of the HOL priority discipline. We
tag a random class-2 packet and denote it by Q2. We de-
note the slot during which Q2 arrives by S2. We ﬁrst make
the following key observation: if a class-1 packet is trans-
mitted before Q2, all packets of the same session of this
class-1 packet are transmitted before Q2 as well. Indeed,
only other class-1 packets can be transmitted between the
transmissions of two randomly chosen packets of a same
class-1 session.
Furthermore, we denote the number of class-1 sessions
that have sent their n-th packet during slot S2 by e∗
1,n, and
the total system content at the beginning of the following
slot by u∗
T . Furthermore, let r2 indicate the number of pack-
ets arriving during slot S2 and to be transmitted after packet
Q2. Before writing down an expression for and analyzing
the delay of Q2, we ﬁrst concentrate on the virtual delay w2
of Q2. This virtual delay is here deﬁned as the delay when
no new sessions are generated after slot S2. Then w2 equals
w2 =u∗
T − r2 +
∞
X
n=1
e∗
1,n
X
i=1
l+
1,n,i,
(38)
with l+
1,n,i the number of packets arriving after slot S2 of
the i-th class-1 session that generated its n-th packet during
slot S2. The virtual delay thus equals the superposition of
the buffer content just after slot S2 and to be transmitted
no later than Q2 and the packets that arrive after slot S2
of class-1 sessions which were already generating a packet
during slot S2. Note that the l+
1,n,i’s are all independent of
the system state just after slot S2. Their pgf is given by
χ1,n(z) (see (27)). With the deﬁnition
Q(x1, x2, .., y, z) ≜E
" ∞
Y
n=1
x
e∗
1,n
n
!
yr2zu∗
T
#
,
(39)
expression (38) leads to the pgf of w2:
W2(z) ≜E[zw2] = Q(χ1,1(z), χ1,2(z), .., 1/z, z).
(40)
Relating the buffer content distribution just after the arrival
slot of a random class-2 packet to the buffer content distri-
bution at the beginning of a random slot (i.e., a manifesta-
tion of the typical renewal-theory paradox, see e.g. [23]),
we ﬁnd
Q(x1, x2, .., y, z)
=PT (x1, x2, .., 1, .., z) − PT (x1, x2, .., y, .., z)
ρ2(1 − y)
,
(41)
with PT the function analyzed in section 6.
We now relate the delay d2 and the virtual delay w2 of
packet Q2. Obviously, the virtual delay is an integral part
of the delay. During the transmission of a certain packet
belonging to the virtual delay workload, say packet P, new
class-1 sessions may be generated, the transmission of their
packets adding to the delay of Q2. During the transmission
of the packets of these class-1 sessions new class-1 sessions
may in turn be generated, which further add to the delay of
Q2, etc. The total number of all packets of all these sessions
(including packet P itself) is called the sub-busy period ini-
tiated by P. Summarizing, we can write
d2 =
w2−1
X
i=1
v1,i + 1,
(42)
with v1,i the sub-busy period added by the i-th packet of
the virtual delay workload. Note that these v1,i’s are all
i.i.d. and their common pgf is denoted by V1(z). By z-
transforming expression (42), we then obtain
D2(z) ≜E[zd2] = zW2(V1(z))
V1(z)
.
(43)
Using (40), we ﬁnd
D2(z) =zQ(χ1,1(V1(z)), χ1,2(V1(z)), .., 1/V1(z), V1(z))
V1(z)
.
(44)
52
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

The use of (41) in the latter expression provides us with an
expression for D2(z) in terms of the PT -function and V1(z).
The PT -function is characterized by (18) and (35). So what
remains is the calculation of the function V1.
In order to do this, we note that the v1,i’s in expression
(42) can be expressed as
v1,i =1 +
b1,i
X
m=1
l(m)
1,i
X
n=1
v(m,n)
1,i
,
(45)
with b1,i the number of new class-1 sessions generated dur-
ing the transmission of the i-th packet of the virtual delay
workload, l(m)
1,i
the number of packets the m-th session of
b1,i contains and v(m,n)
1,i
the sub-busy period initiated by the
n-th packet of the m-th session of b1,i. Indeed, a sub-busy
period initiated by a packet consists of the transmission slot
of that packet and the sub-busy periods of all packets of all
sessions that are generated during that slot. Note that the
v(m,n)
1,i
’s are i.i.d. having the same pgf as the v1,i’s, i.e., V1.
Expression (45) then leads to the following implicit expres-
sion for V1:
V1(z) =zB1(L1(V1(z))).
(46)
Although this does not lead to an explicit formula for V1,
its derivatives in 1 can be explicitly calculated due to the
knowledge that V1(1) = 1, since V1 is a pgf.
Expression (44) combined with expressions (41) and
(46) enables us to calculate the moments of the class-2
packet delay as functions of (partial) derivatives of the PT -
function, evaluated for all arguments equal to 1. We have
argued in the previous section that these derivatives can be
calculated. In general, the calculations of the moments of
the class-2 delay are however highly complex, since several
partial derivatives of PT have to be calculated, which is a
non-trivial task. For instance, the ﬁrst derivative of expres-
sion (44) evaluated in z = 1 leads to an expression contain-
ing (partial) derivatives of χ1,m, V1 and PT . These deriva-
tives can in turn be calculated from expressions (27), (46)
and (18) and (35) respectively. The following ﬁnal expres-
sion for the mean class-2 packet delay can then be obtained
E[d2] = D′
2(1) = 1 +
ρT L′′
2(1)
2L′
2(1)(1 − ρT ) +
B′′
2 (1)L′
2(1)
2B′
2(1)(1 − ρT )
+
∂2B
∂z1∂z2
(1, 1)L′
1(1)
B′
2(1)(1 − ρT )
+ B′
1(1)L′′
1(1) + B′′
1 (1)(L′
1(1))2
2(1 − ρ1)(1 − ρT )
.
(47)
The mean low-priority packet delay is thus inﬂuenced by
the mean values and the second moments of the class-1 and
class-2 session lengths and of the number of starting ses-
sions of class 1 and class 2 in a slot. It further depends on
the covariance between the number of class-1 and class-2
starting sessions in a slot (through
∂2B
∂z1∂z2
(1, 1)).
Higher moments of the class-2 packet delay can be cal-
culated as well.
8
Numerical examples
Our results can be used by practitioners to estimate the
(mean) delay that high- and low-priority packets sustain in
a particular network node. The inﬂuence of the correlation
in the arrival process on the mean delays can also be char-
acterized.
We illustrate our ﬁndings by means of a numerical ex-
ample. We assume that class-1 and class-2 sessions are both
generated according to independent Poisson processes with
means λ1 and λ2 respectively. We thus have
B(z1, z2) =eλ1(z1−1)eλ2(z2−1).
(48)
We are primarily interested in the inﬂuence of the variability
of the session lengths on the performance of the system, i.e.
on the mean packet delays of both classes (for the inﬂuence
of the mean session lengths we refer to [5,32]). Therefore,
we ﬁrstly consider the example of negative binomially dis-
tributed class-j session lengths with parameters mj and pj,
i.e., with pgf
Lj(z) =

pjz
1 − (1 − pj)z
mj
.
(49)
By decreasing mj while keeping E[lj] = L′
j(1) = mj/pj
constant, the variance of the session lengths Var[lj] =
mj(1 − pj)/p2
j can be increased while the mean value is
kept constant. It may be noted that mj = 1 corresponds
to a geometric distribution, while pj = 1 corresponds to
deterministic session lengths.
Throughout this section, we consider the high-priority
load to be a quarter of the total load, i.e., α ≜ ρ1/ρT =
0.25. The means of the session lengths equal 16 slots for
both classes.
In Figure 2 (Figure 3 respectively), we depict the mean
delays of packets of both classes as functions of the total
load ρT when m2 = 2 (m1 = 2 respectively) and for vary-
ing m1 (m2 respectively). Firstly, it can be concluded from
these ﬁgures that priority scheduling indeed differentiates
the delay characteristics of both classes. Secondly, we see
that the mean delays of packets are inﬂuenced by the vari-
ance of the session lengths of their own class. Thirdly, it is
shown that the mean delay of low-priority packets is also in-
ﬂuenced by the variance of the high-priority session lengths,
although not as much as by the variance of the lengths of
53
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

 0
 5
 10
 15
 20
 0
 0.2
 0.4
 0.6
 0.8
 1
ρT
m1 =
E[d1]
E[d2]
1
2
4
8
16
Figure 2. Mean packet delays of both classes
versus the total load for α = 0.25, E[l1] = 16,
E[l2] = 16 and m2 = 2. Higher m1 means a
lower variance of the session lengths of class
1.
the sessions of its own class. Obviously, the high-priority
packet delay does not depend on the low-priority arrival
process.
In the ﬁrst two ﬁgures, we showed the mean delays when
the variance of the session lengths was less than or equal
to the variance of geometrically distributed session lengths
(with the same mean value). To conclude, we show the im-
pact of higher variances of the session lengths in Figures
4 and 5. In Figure 4, the class-2 session lengths are geo-
metrically distributed, while the variance of the class-1 ses-
sion lengths is assumed to equal K1(162 − 16). The rela-
tive deviation of the mean class-2 packet delay, deﬁned as
(E[d2]K1=K − E[d2]K1=1)/E[d2]K1=1, is plotted for sev-
eral values of K. Note that the reference case K = 1 cor-
responds to the geometric distribution. The case K = 0
corresponds to the deterministic case while K > 1 cor-
responds to distributions that have a larger variance than
the geometric one. Note that a variance with K > 1 can
easily be constructed by using a mix of geometric distri-
butions. In Figure 5, the class-1 session lengths are geo-
metrically distributed and the variance of the class-2 ses-
sion lengths is assumed to equal K2(162 − 16). Now, the
relative deviation (E[d2]K2=K − E[d2]K2=1)/E[d2]K2=1 of
the mean class-2 packet delay is plotted for several val-
ues of K.
From both plots, it is once again concluded
that the variances of the class-1 and class-2 session lengths
have a non-negligible impact on the mean class-2 delay.
Furthermore, we conclude from Figure 5 that in this case
E[d2]K2=K = C(K).E[d2]K2=1, with C(K) nearly inde-
pendent of the total load when the load is high. This is not
the case when the high-priority lengths are varied. A linear
relation between the relative deviation and K can still be
 0
 5
 10
 15
 20
 0
 0.2
 0.4
 0.6
 0.8
 1
ρT
m2 =
E[d1]
E[d2]
1
2
4
8
16
Figure 3. Mean packet delays of both classes
versus the total load for α = 0.25, E[l1] = 16,
E[l2] = 16 and m1 = 2. Higher m2 means a
lower variance of the session lengths of class
2.
envisaged though.
9
Performance of an E-commerce web server
We consider an E-commerce web server. Users request
ﬁles and the web server responds by sending the requested
ﬁles to the users. Two types of content are stored on the web
server, content that provides revenues (class 1) and content
that does not (class 2). We apply our model on the situation
described in [16] and depicted in Figure 6. The web server
is connected to the Internet through a gateway, which is con-
sidered the bottleneck. In the gateway, a buffer is therefore
installed and packets of class 1 are transmitted, via the out-
put channel, with priority over class-2 packets. Our analysis
is used to calculate the mean delay that packets sustain in
the gateway.
We use the model from this paper to analyze the per-
formance of the web server.
Therefore, we ﬁrst assign
values to some relevant model parameters.
We assume
that the output channel of the gateway has a bandwidth
of 100 Mbit/s. Likewise, the packets of each session are
transferred by the web server to the gateway at the rate
of 100 Mbit/s. We assume further that each packet con-
tains 100 bytes. Since it takes exactly one slot to trans-
mit a packet, the slot length equals 8 µs.
Sessions cor-
respond to the requested ﬁles.
The session length (i.e.,
the ﬁle sizes) distribution is taken from a real trace. The
trace can be found at http://ita.ee.lbl.gov/html/contrib/EPA-
HTTP.html1, and contains the recordings of web requests of
one day. We have rounded the byte sizes to the nearest mul-
tiple of 100 Bytes. The mean session size then equals 8502
1The logs were collected by Laura Bottomley (laurab@ee.duke.edu)
54
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

-0.2
-0.1
 0
 0.1
 0.2
 0.3
 0.4
 0
 0.2
 0.4
 0.6
 0.8
 1
ρT
K =0
1
2
3
4
Figure 4. Relative deviation of the mean
class-2 delay versus the total load for α =
0.25, E[lj] = 16, Var[lj] = Kj(162 − 16),
j = 1, 2 and K1 = K, K2 = 1.
-0.4
-0.2
 0
 0.2
 0.4
 0.6
 0.8
 1
 1.2
 0
 0.2
 0.4
 0.6
 0.8
 1
ρT
K =0
1
2
3
4
Figure 5. Relative deviation of the mean
class-2 delay versus the total load for α =
0.25, E[lj] = 16, Var[lj] = Kj(162 − 16),
j = 1, 2 and K1 = 1, K2 = K.
Figure 6. Conceptual scheme of a web server
connected to the Internet through a gateway
E[d1]
E[d2]
FIFO
α = 0.25
9.724
16.622
14.897
α = 0.5
11.448
18.347
14.897
α = 0.75
13.173
20.072
14.897
Table 1. Mean class-1 and class-2 packet de-
lays (in µs) in the E-commerce web server for
some values of α. The packet delay in case
of FIFO is included as reference value.
Bytes, with a variance of 5.004e9. We assume that the num-
bers of requests during a slot are distributed according to a
Poisson process. The trace exists of 36677 (valid) requests
over 24 hours, which leads to a mean number of 3.396e-6
requests per slot. Finally, we assume that each request is
of class 1 with probability α and of class 2 with probability
1 − α (independent of other requests).
In a ﬁrst scenario, we assume that the ﬁle sizes of both
classes have the same distribution, i.e., the distribution cal-
culated from the trace. In Table 1, some values of the mean
packet delays of both classes are given for three different
values of α. As a reference value, we have also added the
mean packet delay when FIFO scheduling is implemented
instead of priority scheduling. In the latter case, the mean
delay is independent of the class and of α, and equals about
7 µs more than the transmission time of a packet (8 µs).
Thus, on average, a packet has to wait 7 µs in the gateway.
It is seen that this value can be reduced to about 2 µs by
giving priority to requests that provide revenues if these re-
quests are only a small part (a quarter) of the total number
of requests, and to about 5 µs if it constitutes a big part (3/4)
of the requests. Of course, the price to pay is an increase of
the mean low-priority packet delay, namely about 2 µs more
for α = 0.25 and more than 5 µs extra for α = 0.75.
In a second scenario, we split the trace into two groups:
group A contains all request ﬁles with size smaller than or
equal to 1900 Bytes and group B consists of the request ﬁles
that are larger than 1900 Bytes (1900 Bytes is the median
of the request ﬁle size distribution, so groups A and B ap-
proximately exist out of the same number of requests). The
request ﬁle sizes of group A have a mean of 734 Bytes and
a variance of 2.453e5, while those of group B have a mean
of 16369 Bytes and a variance of 9.950e9. In Table 2, we
show the mean delay of both priority classes for two dif-
ferent cases: (a) class 1 equals group A and class 2 equals
group B (small request ﬁles have priority), and (b) class 1
equals group B and class 2 equals group A (large request
ﬁles have priority). We conclude that the advantage of a
priority scheduling is much larger when the high-priority
request ﬁles are generally small. Furthermore, giving pri-
ority is especially advantageous to packets of small request
55
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

E[d1]
E[d2]
class 1 = group A
8.001
15.254
class 1 = group B
14.897
14.912
Table 2. Mean class-1 and class-2 packet de-
lays (in µs) in the E-commerce web server for
some class-dependent distributions of the
packet sizes.
ﬁles: there is a difference of almost 7 µs between both cases
for the mean packet delay of group-A packets, while there
is only a minor difference of .4 µs for the mean packet delay
of packets of group B.
10
Conclusion
In this paper, we studied a discrete-time two-class pri-
ority queue with a two-layered arrival process. Packets of
variable-length sessions of both classes arrive to the system
at the rate of one packet per slot. The session lengths of
both classes can have general distributions and these dis-
tributions can be different for both classes. Since the ar-
rival process is fairly general, the analysis is obviously non-
trivial.
Using probability generating functions, we have
shown that explicit closed-form expressions for the mean
values of the system contents and packet delays of both
classes can be derived, as well as higher moments for the
packet delays of both classes. We have shown the inﬂuence
of the variance of the session lengths of both classes on the
mean (low-priority) packet delay through numerical exam-
ples. We have ﬁnally applied our results to an E-commerce
web server and showed how the performance of such a web
server can be predicted by means of the results of our anal-
ysis.
Our main qualitative conclusions are: (i) give priority
to only a small fraction of the requests to the web server,
i.e., only to those applications that generate the largest rev-
enues, and (ii) giving priority to applications with small re-
quest ﬁle sizes is more effective than giving priority to time-
consuming applications.
This research can be extended in different ways. A non-
exhaustive list is a) the calculation of tail probabilities of
the packet delay, which is non-trivial for priority queues,
see e.g. [20,21]; b) the extension to more than two priority
classes; and c) the analysis of a model where the packets
in a session do not necessarily arrive back to back, which
would highly complicate the analysis since we used this as-
sumption several times in this paper.
Acknowledgment.
The ﬁrst author is Postdoctoral Fel-
low with the Research Foundation, Flanders (F.W.O.-
Vlaanderen), Belgium.
References
[1] J. Walraevens, S. Wittevrongel, and H. Bruneel. Analysis of
priority queues with session-based arrival streams. In Pro-
ceedings of the Seventh International Conference on Net-
working (ICN 2008), pages 503–510, Cancun, April 2008.
[2] H. Bruneel. Packet delay and queue length for statistical
multiplexers with low-speed access lines. Computer Net-
works and ISDN Systems, 25(12):1267–1277, 1993.
[3] H. Bruneel.
Calculation of message delays and message
waiting times in switching elements with slow access lines.
IEEE Transactions on Communications, 42(2/3/4):255–259,
1994.
[4] J. Chang and Y. Harn. A discrete-time priority queue with
two-class customers and bulk services. Queueing Systems,
10:185–212, 1992.
[5] B. Choi, D. Choi, Y. Lee, and D. Sung.
Priority queue-
ing system with ﬁxed-length packet-train arrivals.
IEE
Proceedings-Communications, 145(5):331–336, 1998.
[6] I. Cidon, A. Khamisy, and M. Sidi. Delay, jitter and thresh-
old crossing in ATM systems with dispersed messages. Per-
formance Evaluation, 29(2):85–104, 1997.
[7] J. Daigle. Message delays at packet-switching nodes serving
multiple classes. IEEE Transactions on Communications,
38(4):447–455, 1990.
[8] S. De Vuyst, S. Wittevrongel, and H. Bruneel. Statistical
multiplexing of correlated variable-length packet trains: an
analytic performance study. Journal of the Operational Re-
search Society, 52(3):318–327, 2001.
[9] T. Demoor, J. Walraevens, D. Fiems, and H. Bruneel. Mixed
ﬁnite-/inﬁnite-capacity priority queue with interclass cor-
relation.
In Proceedings of the 15th International Con-
ference on Analytical and Stochastic Modelling Techniques
and Applications (ASMTA 2008), LNCS 5055, pages 61–74,
Nicosia, 2008.
[10] K. Elsayed and H. Perros. The superposition of discrete-time
Markov renewal processes with an application to statistical
multiplexing of bursty trafﬁc sources. Applied Mathematics
and Computation, 115(1):43–62, 2000.
[11] D. Fiems, J. Walraevens, and H. Bruneel. Performance of
a partially shared priority buffer with correlated arrivals. In
Proceedings of the 20th International Teletrafﬁc Congress
(ITC20), LNCS, volume 4516, pages 582–593, Ottawa,
2007.
[12] R. Gu´erin and V. Peris. Quality-of-service in packet net-
works: basic mechanisms and directions. Computer Net-
works, 31(3):169–189, 1999.
[13] O. Hashida and Y. Takahashi. A discrete-time priority queue
with switched batch Bernoulli process inputs and constant
service time.
In Proceedings of ITC 13, pages 521–526,
Copenhagen, 1991.
[14] G. Heijenk, M. E. Zarki, and I. Niemegeers. Modelling of
segmentation and reassembly processes in communication
networks. In Proceedings of ITC14, pages 513–524, An-
tibes, 1994.
56
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

[15] L. Hoﬂack, S. De Vuyst, S. Wittevrongel, and H. Bruneel.
Analytic trafﬁc model of web server. Electronics Letters,
44(1), 2008.
[16] L. Hoﬂack, S. De Vuyst, S. Wittevrongel, and H. Bruneel.
Modeling web server trafﬁc with session-based arrival
streams.
In Proceedings of the 15th international con-
ference on analytical and stochastic modelling techniques
and applications (ASMTA 2008), LNCS 5055, pages 47–60,
Nicosia, 2008.
[17] H. Inai and J. Yamakita. A two-layer queueing model to pre-
dict performance of packet transfer in broadband networks.
Annals of Operations Research, 79:349–371, 1998.
[18] F. Kamoun. Performance analysis of a discrete-time queuing
system with a correlated train arrival process. Performance
Evaluation, 63(4-5):315–340, 2006.
[19] A. Khamisy and M. Sidi. Discrete-time priority queues with
two-state markov modulated arrivals.
Stochastic Models,
8(2):337–357, 1992.
[20] K. Laevens and H. Bruneel.
Discrete-time multiserver
queues with priorities. Performance Evaluation, 33(4):249–
275, 1998.
[21] T. Maertens, J. Walraevens, and H. Bruneel. Priority queue-
ing systems: from probability generating functions to tail
probabilities. Queueing Systems, 55(1):27–39, 2007.
[22] M. Mehmet Ali and X. Song. A performance analysis of
a discrete-time priority queueing system with correlated ar-
rivals. Performance Evaluation, 57(3):307–339, 2004.
[23] I. Mitrani. Modelling of Computer and Communication Sys-
tems. Cambridge University Press, Cambridge, 1987.
[24] J. Roberts. Internet trafﬁc, QoS, and pricing. Proceedings
of the IEEE, 92(9):1389–1399, 2005.
[25] S. Shakkottai and R. Srikant. Many-sources delay asymp-
totics with applications to priority queues. Queueing Sys-
tems, 39(2-3):183–2000, 2001.
[26] T. Takine, B. Sengupta, and T. Hasegawa. An analysis of
a discrete-time queue for broadband ISDN with priorities
among trafﬁc classes. IEEE Transactions on Communica-
tions, 42(2-4):1837–1845, 1994.
[27] T. Tan, K. Moinzadeh, and V. Mookerjee. Optimal process-
ing policies for an e-commerce web server. INFORMS Jour-
nal on Computing, 17(1):99–110, 2005.
[28] J. Van Velthoven, B. Van Houdt, and C. Blondia. The impact
of buffer ﬁniteness on the loss rate in a priority queueing
system. Lecture Notes in Computer Science, 4054:211–225,
2006.
[29] B. Vinck and H. Bruneel. A note on the system contents
and cell delay in FIFO ATM-buffers. Electronics Letters,
31(12):952–954, 1995.
[30] J. Walraevens, D. Fiems, and H. Bruneel. Time-dependent
performance analysis of a discrete-time priority queue. Per-
formance Evaluation, 65(9):641–652, 2008.
[31] J. Walraevens, B. Steyaert, and H. Bruneel.
Perfor-
mance analysis of a single-server ATM queue with a pri-
ority scheduling.
Computers & Operations Research,
30(12):1807–1829, 2003.
[32] J. Walraevens, S. Wittevrongel, and H. Bruneel. A discrete-
time priority queue with train arrivals. Stochastic Models,
23(3):489–512, 2007.
[33] S. Wittevrongel. Discrete-time buffers with variable-length
train arrivals. Electronics Letters, 34(18):1719–1721, 1998.
[34] S. Wittevrongel and H. Bruneel. Correlation effects in ATM
queues due to data format conversions. Performance Evalu-
ation, 32(1):35–56, 1998.
[35] F. Xabier Albizuri, M. Gra˜na, and B. Raducanu. Statistical
transmission delay guarantee for nonreal-time trafﬁc multi-
plexed with real-time trafﬁc. Computer Communications,
26(12):1365–1375, 2003.
[36] Y. Xiong and H. Bruneel. Buffer behavior of statistical mul-
tiplexers with correlated train arrivals. International Journal
of Electronics and Communications (AE ¨U), 51(3):178–186,
1997.
[37] T. Yu and K. Lin.
QCWS: an implementation of QoS-
capable multimedia web services.
Multimedia Tools and
Applications, 30(2):165–187, 2006.
57
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

