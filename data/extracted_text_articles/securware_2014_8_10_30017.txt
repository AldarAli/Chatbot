Managed Certiﬁcate Whitelisting – A Basis for Internet of Things Security in
Industrial Automation Applications
Rainer Falk and Steffen Fries
Siemens AG
Corporate Technology
Munich, Germany
Email: {rainer.falk|steffen.fries}@siemens.com
Abstract—Device authentication is a basic security feature
for automation systems and for the future Internet of Things.
The design, setup and operation of a practically usable security
infrastructure for the management of required device credentials
– as cryptographic device keys and device certiﬁcates – is a
huge challenge. Also, access permissions deﬁning authorized
communication peers have to be conﬁgured on devices.
The set-up and operation of a public key infrastructure PKI
with registration authority (RA) and certiﬁcation authority (CA),
as well as the management of device permissions has shown to
be burdensome for industrial application domains.
A recent approach is based on certiﬁcate whitelisting. It is
currently standardized for ﬁeld device communication within
energy automation systems by IEC 62351 in alignment with
ITU-T X.509. This new approach changes the way how digital
certiﬁcates are used and managed signiﬁcantly.
After describing the new approach of managed certiﬁcate
whitelisting and giving a summary of ongoing standardization
activities, an example for the application in a real-world appli-
cation domain is described. Needs for further technical work are
derived, and solution options are presented.
Keywords—Digital certiﬁcate, certiﬁcate whitelisting, credential
management, PKI, device authentication, Internet of Things.
I. INTRODUCTION
Industrial automation systems, e. g., for energy automation,
railway automation or process automation, use open com-
munication protocols as Ethernet, wireless local area net-
work (WLAN) IEEE 802.11 [1], transmission control protocol
(TCP), user datagram protocol (UDP), and hypertext transfer
protocol (HTTP) [2]. The communication can be protected us-
ing standard security protocols like IEEE 802.1X/MACsec [3],
Internet key exchange (IKE) [4] with Internet protocol security
(IPsec) [5], secure shell (ssh) [6], secure sockets layer (SSL)
[7], and transport layer security (TLS) [8]. Often, asymmetric
cryptographic keys and corresponding device certiﬁcates are
used. Symmetric keys would not not scale well for the huge
number of involved devices.
In a common realization of a public key infrastructure PKI,
digital certiﬁcates are issued by a trusted certiﬁcation authority
(CA). This allows to authenticate devices. Additionally, access
permissions are deﬁned for authorized communication peers.
While this technology could be the basis for a global, uniform
secure communication, in reality, the deployment and adoption
of PKIs is often limited to HTTP server authentication. A
reason for that is the signiﬁcant effort required to set-up,
maintain, and use a PKI.
The problem addressed in this paper is the practical manage-
ment of device certiﬁcates for ﬁeld-level automation devices.
A certiﬁcate infrastructure is required that is suitable for an
operational automation environment. Main considerations are
the demand for extremely high system availability, requiring
that the automation system can continue to operate in an
autonomous island mode, and the fact that many automation
systems are set-up as separate network segments that have no
or only limited connectivity with general ofﬁce networks or
even the public Internet. Moreover, the fact that these systems
are typically engineered, e.g., that the communication relations
are known up front, can be leveraged for certiﬁcate and access
management.
A self-contained certiﬁcate management tool (command line
tool, or with GUI) can be well suited for a small number of
devices, but it does not scale well to scenarios with a larger
number of devices. A full-blown PKI infrastructure could be
efﬁcient for an extremely huge number of devices, but these
go beyond the scale of a common single automation systems.
The problem can be summarized that a solution is needed
that can be set-up and operated autonomously within a cer-
tain automation environment without relying on a globally
accepted certiﬁcation authority, and that scales well for “mid-
size” automation environments, for which a self-contained
certiﬁcate tool is too small, and a full PKI solution would
be too complex and costly. It may be also advantageous to
avoid the need for deploying a separate identity and access
management infrastructure.
The remainder of this paper if structured as follows: Af-
ter summarizing background work in Section II, Section III
describes certiﬁcate whitelists as a new paradigm for using
digital certiﬁcates. The management of certiﬁcate whitelists is
described generically in Section IV, and a speciﬁc adaption
into energy automation systems is outlined in Section V. An
outlook to possible future extensions is given in Section VI.
II. BACKGROUND AND PREVIOUS WORK
Secure communication protocols, digital certiﬁcates, and
public key infrastructure PKI [9], [10] have been dealt with
intensively for years. An introduction is given in common
text books on IT security [11]. The remainder of this section
summarizes shortly major aspects that are relevant to managed
certiﬁcate whitelists.
167
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

Subject Entity associated with certificate 
Validity Period of validity 
Serial Number 31748 
Subject Public Key  
 
Issuer 
 
Name of certificate issuer 
Signature 
digital signature 
Subject has a corresponding  
private key 
 
Private 
Public 
Public Key Certificate 
Fig. 1. Digital Certiﬁcate (X.509)
A. Device Communication Security Technologies
Digital device certiﬁcates are the basis for device commu-
nication security as used in industrial automation systems, and
in the future Internet of Things (IoT). Major communication
security protocols are available for the different layers of
the communication protocol stack that support digital device
certiﬁcates for authentication:
• Link layer: The standard 802.1X [3] provides Network
Access Control to restrict access to a network only for
authenticated devices. It is also possible to encrypt the
communication link using the MACsec of 802.1X.
• Network layer: The communication can be protected with
IPsec [5] on the network layer. The required security
associations can be established by the IKE [4] protocol.
• Transport layer: With TLS [8], the successor of the SSL
protocol [7], communication can be protected on the
transport layer.
• Application layer: SSH or WS-Sec are available to pro-
tect application layer protocols as HTTP, SOA (REST,
SOAP), CoAP, XMPP, or MQTT.
B. Digital Certiﬁcates
The main purpose of a digital certiﬁcate is to reliably assign
information about the subject, i. e., the owner, of a public key.
The owner may be identiﬁed by its name or email address
in case of a person, or by its network name (DNS name)
or IP address of a server. Additional information encodes
usage information about the public key respectively the digital
certiﬁcate, as validity period, and allowed key usages as user
authentication or email encryption. For device certiﬁcates, it is
possible to encode the device manufacturer, the device model,
and the serial number within a device certiﬁcate.
The
most
commonly
used
certiﬁcate
format
is
ISO
X.509 [9]. Figure 1 shows the format and some examplary
ﬁelds. The main purpose of a digital certiﬁcate is to bind a
public key (Subject Public Key Info) of an entity to
the name of the entity (Subject). Additional information as
the validity period, the issuer, and usage restrictions can be
included as well.
When a digital certiﬁcate of a subject is validated by a
communication peer, it is veriﬁed that the certiﬁcate has a
valid digital signature of a trusted certiﬁcation authority. It is
furthermore veriﬁed that the entries of the certiﬁcate match the
intended usage. It may also be veriﬁed whether the certiﬁcate
has been revoked. A revocation check may verify whether
a given certiﬁcate is included in a certiﬁcate revocation list
(CRL), or an online revocation status check may be performed
using the open certiﬁcate status protocol (OCSP) [12]. In either
case, at least partial online access to a PKI entity that is issuing
certiﬁcates and providing revocation information is needed at
least from one component in an automation network or cell.
This component may further distribute the information within
the automation cell.
C. Certiﬁcate Root Key
A digital certiﬁcate has to be validated before it is accepted.
This includes a check whether the digital signature protecting
the certiﬁcate is trusted. The standard approach is to use a set
of trusted root certiﬁcates for certiﬁcation authorities CA. A
certiﬁcate is accepted if its signature chain can be veriﬁed back
to a trusted root certiﬁcate. The root certiﬁcate may belong to
a globally recognized CA, or to a local CA that is accepted
only within an administrative domain, e. g., within a single
operator network. If no PKI with CA is available, it is also
possible to use self-signed certiﬁcates. This means that each
certiﬁcate is signed with the private key associated with the
public key contained in the certiﬁcate. Such certiﬁcates have
to be conﬁgured as trusted in the same way as trusted root
certiﬁcates, i. e., the (self-signed) certiﬁcates of trusted peers
have to be conﬁgured explicitly. This requires to store the
trusted peer information (root CA, or self signed certiﬁcates)
in a secure manner, as this information is crucial for system
security.
D. Certiﬁcate Whitelisting
The basic concept of certiﬁcate whitelists is well-known.
The underlying idea is to enumerate explicitly all authorized
certiﬁcates. A certiﬁcate is validated successfully only if it is
contained in the certiﬁcate whitelist. The whitelist may contain
the certiﬁcates directly, or reference the certiﬁcates by their
serial number and issuer, by the certiﬁcate ﬁngerprint, or by
the public key. The latter avoids issuing a new whitelist, when
a certiﬁcate is updated.
Such a certiﬁcate whitelist can be considered and used
also as an access control list that contains the certiﬁcates
of all authorized subjects. Without using speciﬁc certiﬁcate
extensions, the different operations cannot be distinguished,
however. The conﬁguration of the set of trusted root certiﬁcates
is also a form of certiﬁcate whitelists. It is known to check
whether the certiﬁcate of a communication peer is included
in a certiﬁcate whitelist [13]. Also, the Microsoft Digital
Rights Management License Protocol is using a certiﬁcate
whitelists [14].
As these certiﬁcate whitelists have been used as a propri-
etary means for conﬁguring a list of trusted certiﬁcates, or to
be more precise a set of trusted certiﬁcates, the approach has
been rather limited as general means for certiﬁcate manage-
ment.
168
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

III. CERTIFICATE MANAGEMENT AND VALIDATION USING
CERTIFICATE WHITELISTS
The set-up and operation of a public key infrastructure
has shown to require signiﬁcant effort and costs. This has
been a limiting factor for the practical usage of public key
cryptography. Ongoing standardization activities deﬁne the
technological basis for simpler usage of public key cryptog-
raphy for industrial automation environments and the future
Internet of Things.
While a certiﬁcate whitelist has been used so far as pro-
prietary means for conﬁguring some digital certiﬁcates as
trusted, a certiﬁcate whitelists format is currently standard-
ized for the smart energy grid environment. It has been
acknowledged that the application of certiﬁcate whitelists in
restricted environments supports the long term administration
of security parameters. Hence, standardizing the format is the
next consequent step to ensure interoperability of different
vendor products.
A certiﬁcate whitelist is a data structure containing re-
spectively referencing a set of trusted digital certiﬁcates. A
certiﬁcate can be referenced by its serial number and issuer,
or by a ﬁngerprint of the certiﬁcate (hash value). The certiﬁcate
whitelist is signed using a whitelist root key of trust (WROT).
A certiﬁcate is validated successfully if it is contained
in a corresponding certiﬁcate whitelist. Further checks on
the contents of the certiﬁcate as the name of the subject,
the certiﬁcate extensions, and the certiﬁcate signature are
performed in the usual way.
Certiﬁcate whitelists can be used with certiﬁcates issued by
a CA, or with self-signed certiﬁcates. A common technological
basis is provided for smaller environments using self-signed
certiﬁcates as well as environments using a PKI for issuing
certiﬁcates. So, a smooth migration from self-signed certiﬁ-
cates to a local PKI and even towards global PKI is provided.
A certiﬁcate can be revoked easily by not including it
anymore in the certiﬁcate whitelists. However, it is also
possible to check the certiﬁcation revocation status using
certiﬁcate revocation lists [9] or using the online certiﬁcate
status protocol OCSP [12].
1) Standardization Activities: Currently ongoing standard-
ization activities performed by ISO/IEC 62351 [15] in align-
ment with ITU-T X.509 [9] deﬁne the usage of certiﬁcate
whitelists for energy automation systems. Currently, a format
is deﬁned for a certiﬁcate whitelist. Figure 2 shows a recent
proposal for a certiﬁcate whitelist. It is based on the format
of a certiﬁcate revocation list CRL, but its assigned type
(CertificateWhiteList) distinguishes it from a CRL.
Also, the intended scope of a certiﬁcate whitelist is deﬁned by
a speciﬁc attribute scope. It allows a client to verify whether
a certain certiﬁcate whitelist has in fact been intended for a
speciﬁc purpose. For example, the IP addresses or DNS names
of devices for which the whitelist is intended to be used can
be included.
The target scope of a certiﬁcate whitelist can be explicitly
encoded in a certiﬁcate whitelist. Therefore, a certiﬁcate
CertificateWhiteList
::=
SEQUENCE
{
tbsCertWhiteList
TBSCertWhiteList,
signatureAlgorithm
AlgorithmIdentifier,
signatureValue
BIT STRING
}
TBSCertWhiteList
::=
SEQUENCE
{
version
Version OPTIONAL,
-- if present must be v1
signature
AlgorithmIdentifier,
issuer
Name,
thisUpdate
Time,
nextUpdate
Time OPTIONAL,
scopedList
SEQUENCE OF SEQUENCE {
scope
ScopeConstraints,
-- geographic,organizational
authorizedCertificates
SEQUENCE OF SEQUENCE
{
fingerprint
AlgorithmIdentifier, -- for FP creation
certIdentifier::== CHOICE {
serialCert
[0] CertificateSerialNumber,
fingerprintCert [1] OCTET STRING -- FP of certificate
fingerprintPK
[2] OCTET STRING -- FP of public key
}
certificateIssuer
Name OPTIONAL,
cwlEntryRestriction
[0] EXPLICIT Extension OPTIONAL
-- further restrictions of cert. usage
}
}
cwlExtensions [0] EXPLICIT Extensions OPTIONAL
{- for future use
}
Fig. 2. Certiﬁcate Whitelist Format [15]
START
Verify Certificate 
Success
yes
no
Error Message
White list 
extension 
Not present 
present
Fetch white list if necessary. 
Verify signature on white list 
Apply certificate in application
Verification 
successful? 
yes
no
certificate on  
whitelist ?
yes
no
Error Message
Apply certificate in application
Error Message
Fig. 3. Validation of a Certiﬁcate with Certiﬁcate
whitelist cannot be used unintentionally for a different purpose
as the intended purpose at time of compilation. Certiﬁcate
whitelists can be compiled once during as part of engineering.
Alternatively, end devices can pull a certiﬁcate whitelist from a
whitelist certiﬁcate server in deﬁned time intervals. The CWL
can also be pushed to the ﬁeld devices.
A digital certiﬁcate may be intended to be used only
within a certiﬁcate whitelisting environment. To ensure that
a certiﬁcate is in fact validated successfully only together
with a corresponding whitelist, it is possible to include a
corresponding extension in the certiﬁcate. The extension marks
it explicitly to be accepted only if it is included in a certiﬁcate
whitelist. A corresponding certiﬁcate extension is currently
deﬁned by ISO/IEC 62351 [15].
The validation of a certiﬁcate depends on whether it con-
tains a certiﬁcate whitelist extension. Figure 3 shows the rele-
vant checks. If a certiﬁcate includes the whitelisting extension,
it is required that the corresponding whitelist is available and
that the certiﬁcate is in fact included in the whitelist.
169
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

IV. MANAGED CERTIFICATE WHITELISTS
The introduction of certiﬁcate whitelisting implies the need
for a management system for certiﬁcate whitelists. Managed
certiﬁcate whitelists are a new approach for using public key
cryptography in a practical, efﬁcient and effective way. It is
particularly suited for systems with well-known set of de-
vices and their communication relationships, as it is common
for networked automation systems. As the management of
whitelists can be fully automated, it scales well to larger num-
ber of devices, although due to the increasing size of whitelists
the targeted application environment is characterized by a
number of devices within a range up to some 100 to some 1000
devices. It integrates well within existing industrial workﬂows
for installing or exchanging devices, as device conﬁguration
databases are kept up-to-date within automation systems. So,
the information that is required to generate updated certiﬁ-
cate whitelists is already available. Once certiﬁcate whitelists
have been generated and installed on the target devices, the
target devices can operate autonomously even if the security
infrastructure is not available. This is an important property for
automation environments with high availability requirements
to ensure that the automation system can continue to operate
even if backend systems are temporarily unavailable.
A. Whitelist Generation and Distribution
The basic concept for automatic whitelist management is
rather straightforward. Using information which is available
in common automation systems about the devices and their
communication relationships within a networked automation
system, several purpose-speciﬁc – and also device-speciﬁc if
needed – certiﬁcate whitelists are generated automatically. The
whitelists are distributed to the target devices using remote
conﬁguration protocols. For example, secure copy scp [6],
HTTPS [16], or OPC-UA [17] can be used to distribute
conﬁguration ﬁles securely to the target devices.
Figure 4 shows the main components involved in the auto-
matic management of certiﬁcate whitelists. A central device
management component accesses a device database including
all registered devices of a networked automation system and
their associated device certiﬁcates. Using automation sys-
tem conﬁguration data, the communication relationships are
determined. Based on this information, certiﬁcate whitelists
can be compiled for the different communication purposes
as automation control communication, supervisory control
communication, remote service access and diagnostic access.
Depending on policy, device-speciﬁc certiﬁcate whitelists can
be compiled, or certiﬁcate whitelists for deﬁned purposes and
target device classes. The certiﬁcate whitelists are created
and provided to a device management system that conﬁgures
the relevant certiﬁcate whitelists on the target devices. As
important difference to a certiﬁcation revocation list CRL, a
certiﬁcate whitelist will usually be provided and be signed
by the operator, not by the certiﬁcation authority (CA). This
has the advantage that an automation system operator can use
managed certiﬁcate whitelists easily with certiﬁcates issued by
different CAs, and even with self-signed certiﬁcates.
Configuration Database
- device inventory
- plant configuration data
Certificate 
Whitelist 
Compiler
Certificate 
Whitelist
Distribution
Point
Automation 
Network
Field Devices
FD
FD
FD
Certificate Database
- CA keys
- device certificates
Whitelist 
Signing Key
Fig. 4. Certiﬁcate Whitelist Management System
For networked automation systems with a typical size of
some 100 to some 1000 devices, such a certiﬁcate management
system based on whitelisting provides several advantages for
the application in real-world industrial usage scenarios: A
local PKI or even self-signed certiﬁcates can be used, so
that a deployment with a very limited security infrastructure
is possible. For the operation of the automation system,
no continous reachability or availability of the whitelisting
security infrastructure is required. So, the availability of the
automation system availability does not depend on the avail-
ability of the security infrastructure. A commonly availably
device management infrastructure can be extended easily for
automatically creating and distributing certiﬁcate whitelists.
It is possible to use a certiﬁcate whitelist only for authen-
tication. Authorization checks would then be performed in
addition, e. g., by checking an access control list. However, a
certiﬁcate whitelist can be used directly as access control list
as well. Different certiﬁcate whitelists would be conﬁgured
for the different types of access (e. g., control communication,
service access, diagnosis). The current proposal for a CWL
structure considers this by supporting the encoding of a list
of lists. Moreover, within the CWL, further certiﬁcate usage
restrictions may be encoded. One example is the deﬁnition of
dedicated applications or communication protocols which are
allowed to utilize a dedicated certiﬁcate. Using this approach,
the communication peer could refuse to accept a certiﬁcate
included on the CWL if it is not associated within the CWL
with the currently used communication protocol.
This has the advantage that no separate identity and access
management infrastructure is needed, and that access control
decisions can be performed by a ﬁeld device when the backend
systems are not available. These properties make certiﬁcate
whitelisting a very interesting approach for managing digital
certiﬁcates in typical industrial automation systems.
B. Example Usage Scenarios
Typical workﬂows in industrial automation systems are the
initial installation, the replacement, and removal of devices. As
170
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

device conﬁguration databases are already maintained as part
of these workﬂows, the information for updating certiﬁcate
whitelists is available without any extra effort required from
the service personnel. As changes in the conﬁguration are
detected by the certiﬁcate whitelisting system, the generation
of updated certiﬁcate whitelists is started and the deployment
to affected target devices is triggered.
V. APPLICATION WITHIN ENERGY AUTOMATION
SYSTEMS
The general approach of using managed certiﬁcate whitelists
as described in the previous section can be applied for energy
automation systems (smart grid). Figure 5 shows a substation
automation system. A substation typically transforms voltage
levels, and includes power monitoring and protection func-
tions. Figure 5 shows separate network zones of the substation
communication network. The ﬁeld devices that perform the
actual ﬁeld level functionality of monitoring and acting on
the electric power are called intelligent energy devices (IED).
They are monitored and controlled by a substation controller,
realizing a realtime automation system. Energy automation
protocols are deﬁned by the standard IEC61850 [18] which de-
ﬁned the Generic Object Oriented Substation Events (GOOSE)
protocol. Additional network zones are available for local and
remote service access, for integrating intelligent ﬁeld devices
with serial interfaces, and for support functions (ﬁle server,
historian server for logging, remote access server, terminal
server). A substation is connected to the utility communication
network providing backend services like supervisory control
and data acquisition (SCADA). Firewalls are used to control
the trafﬁc ﬂow between zones.
A hierarchical creation and distribution of certiﬁcate
whitelists to a substation may be realized in the following
way: A utility operator creates a substation-speciﬁc certiﬁcate
whitelist (substation cert whitelist) based on the engineering
information for this substation and distributes it to the substa-
tion controller. The speciﬁc substation is encoded in the CWL
by the scope restriction. Using engineering information that is
available at the substation controller, the substation controller
creates device-speciﬁc certiﬁcate whitelists for the ﬁeld de-
vices, i. e., intelligent energy devices (IED), of the substation.
The device-speciﬁc certiﬁcate whitelists are conﬁgured by the
substation controller on the differend IEDs.
An alternative approach would be to compile a CWL for a
substation, and to distribute this CWL to all components in
the substation via the substation controller. Through the en-
gineering information, each IED will only communicate with
other IEDs by means of the engineering data and the CWL.
This means that the access control decision is made by an IED
by checking both the CWL and the engineering information.
This saves the additional effort for creating device speciﬁc
CWLs, but has the disadvantage that each IED needs to search
a larger CWL, and has to check two pieces of conﬁguration
information separately. It is a validation perfomance decision
which approach is more appropriate in a target environment.
The generic deﬁnition of CWLs allows for both approaches.
A further usage scenario for certiﬁcate whitelisting within
energy automation systems would be integration of decentral-
ized energy resources. Here, a smart grid operator could realize
a (managed) certiﬁcate pinning by using certiﬁcate whitelists.
A smart grid operator would deﬁne which certiﬁcates are ac-
ceptable by including these certiﬁcates in a whitelist. Thereby,
the smart grid operator would use certiﬁcate whitelists to
restrict the set of certiﬁcates issued by a larger PKI. The
possibility to misuse broken certiﬁcates or CAs is reduced
as the set of accepted certiﬁcates is limited.
Fig. 5. Managed Certiﬁcate Whitelisting in Energy Automation Substations
VI. CONCLUSION AND OUTLOOK
Explicitly designating trusted certiﬁcates in certiﬁcate
whitelists has been recently put forward within standardiza-
tion for industrial energy automation communication [15].
It promises to provide a cost-efﬁcient, easily deployable,
and operable approach for digital device certiﬁcates even if
self-signed certiﬁcates are used. It is intended for mid-sized
industrial automation domains, while providing a migration
path to more ﬂexible PKI and access management structures. It
allows in particular to avoid the usage of simple manually con-
ﬁgured pre-shared secrets, that would be difﬁcult to migrate
to more complex and managed security infrastructures that are
expected to be advantageous for large scale deployments.
The usage of certiﬁcate whitelisting can be supported with
automatic whitelist generation and distribution. A format for
certiﬁcate whitelists is currently being standardized to pro-
vide an interoperable format. Speciﬁc extensions can mark a
certiﬁcate explicitly for being used only in combination with
a certiﬁcate whitelist. Several additional extensions may be
introduced. It may be possible to indicate usage restrictions
within a certiﬁcate whitelist associated with a certain certiﬁ-
cate entry. This could be used to limit the authorized usage
of a certiﬁcate on a certiﬁcate-by-certiﬁcate basis. Certiﬁcate
171
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

whitelists may be encoded efﬁciently by including matching
criteria of included certiﬁcates. Alternatively to the explicit
enumeration of certiﬁcates, a ﬁlter can be included in a
certiﬁcate whitelist that deﬁnes matching criteria of included
certiﬁcates, i. e., that deﬁnes required properties of certiﬁcate
ﬁelds. A Bloom ﬁlter [19] may be used, combined with a
check on false match. Bloom ﬁlters are a probabilistic data
structure for membership queries which allow for an efﬁcient
encoding, but for which a wrong positive match may occur.
As the set of all issued certiﬁcates is known in typical usage
scerarios, a checking for a false match is easily possible. Also,
certiﬁcates can be designated within a whitelist. Also, a PKI
gateway can be deployed for secure interworking with external
network domains using a standard public key infrastructures.
Also,
the
logical
combination
of
multiple
certiﬁcate
whitelists is possible in general. A combination of certiﬁcate
whitelists may be advantageous for instance in an inter-
substation communication scenario. Here, a ﬁrst certiﬁcate
whitelist may be provided for the substation internal com-
munication, and a second one for inter-substation communi-
cation. The ﬁnal certiﬁcate whitelist for each purpose may
be deﬁned by a logical combination of whitelists to ease the
certiﬁcate whitelist administration and the handling for the
ﬁeld device. This might be done by logical OR, AND, or XOR
combinations of the certiﬁcate whitelists. This logical combi-
nation can be realized in different ways: The ﬁeld devices
themselves can check against multiple certiﬁcate whitelists.
A logical expression is conﬁgured that deﬁnes the logical
combination of the certiﬁcate whitelists to be applied. As the
deﬁned certiﬁcate whitelist structure shown in Fig. 2 allows
the encapsulation of multiple certiﬁcate whitelists within a
single data structure, an enhancement of this data structure
could indicate the logical combination of the whitelist entries
using the extension option. A further alternative would be
the preparation of device speciﬁc certiﬁcate whitelists by a
centralized infrastructure component that determines the result
of the logical combination of different certiﬁcate whitelists
before distributing the actual certiﬁcate whitelist to the end
points. This puts more effort on the centralized component,
but keeps the effort low for the ﬁeld device. The assumption
here is that the certiﬁcate whitelist for a single endpoint is
rather short compared to substation wide certiﬁcate whitelists
containing all allowed (engineered) combinations of communi-
cation associations. The structure deﬁned in Fig.2 also allows
to use different matching criteria for the certiﬁcate. While the
serial number and issuer or the ﬁngerprint are straight forward,
the utilizatin of the public key ﬁngerprint provides another
degree of freedom. This approach allows even for updating
certiﬁcates (assumed the public key stays the same) without
changing the CWL. This decouples the certiﬁcate life cycle
management from the access security policy management of
certiﬁcates in automation environments.
REFERENCES
[1] IEEE
802.11,
“IEEE
Standard
for
Information
Technology–
Telecommunications and Information Exchange Between Systems,
Local
and
Metropolitan
Area
Networks–Speciﬁc
Requirements
Part
11:
Wireless
LAN
Medium
Access
Control
(MAC)
and
Physical
Layer
(PHY)
Speciﬁcations.”
[Online].
Available:
http://standards.ieee.org/about/get/802/802.11.html [accessed: 2014-09-
01]
[2] R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P. Leach,
and T. Barners-Lee, “Hypertext Transfer Protocol – HTTP/1.1,”
1999, Internet Request for Comments RFC2696. [Online]. Available:
https://tools.ietf.org/html/rfc2696 [accessed: 2014-09-01]
[3] IEEE 802.1X-2010, “IEEE Standard for Local and metropolitan area
networks–Port-Based Network Access Control,” . [Online]. Available:
http://standards.ieee.org/ﬁndstds/standard/802.1X-2010.html [accessed:
2014-09-01]
[4] C.
Kaufmann,
P.
Hoffman,
Y.
Nir,
and
P.
Eronen,
“Internet
Key
Exchange
Protocol
Version
2
(IKEv2),”
Sep.
2010,
Internet
Request
for
Comments
RFC5996.
[Online].
Available:
https://tools.ietf.org/html/rfc5996 [accessed: 2014-09-01
[5] S. Kent, and K. Seo, “Security Architecture for the Internet Protocol,”
Dec. 2005, Internet Request for Comments RFC4301. [Online].
Available: https://tools.ietf.org/html/rfc4301 [accessed: 2014-09-01]
[6] T. Ylonen, and C. Lonvick, “The Secure Shell (SSH) Protocol
Architecture,” Jan. 2006, Internet Request for Comments RFC4251.
[Online]. Available: https://tools.ietf.org/html/rfc4251 [accessed: 2014-
09-01]
[7] Netscape,
“SSL
3.0
speciﬁcation,”
Nov.
1996.
[Online].
Available:
http://web.archive.org/web/20080208141212/
http://wp.netscape.com/eng/ssl3/ [accessed: 2014-09-01]
[8] T. Dierks, and E. Rescorla, “The Transport Layer Security (TLS)
Protocol Version 1.2,” Aug. 2008,
Internet Request for Comments
RFC5246.
[Online].
Available:
https://tools.ietf.org/html/rfc5246
[accessed: 2014-09-01]
[9] ITU-T
X.509,
“X.509
Information
technology
–
Open
Systems
Interconnection -– The Directory: Public-key and attribute certiﬁcate
frameworks,” 2012, version 3 corrigendum 3. [Online]. Available:
http://www.itu.int/rec/T-REC-X.509-201210-S!Cor3/en [accessed: 2014-
09-01]
[10] D. Cooper, S. Santesson, S. Farrel, S. Boeyen, R. Housley, and
W.
Polk,
“Internet
X.509
Public
Key
Infrastructure
Certiﬁcate
and
Certiﬁcate
Revocation
List
(CRL)
Proﬁle,”
May
2008,
Internet
Request
for
Comments
RFC5280.
[Online].
Available:
https://tools.ietf.org/html/rfc5280 [accessed: 2014-09-01
[11] J. Buchmann, E. Karatsiolis, and A. Wiesmaier, “Introduction to Public
Key Infrastructures,” 2013.
[12] S. Santesson, M. Myers, R. Ankney, A. Malpani, S. Galperin, and C.
Adams, “X.509 Internet Public Key Infrastructure Online Certiﬁcate
Status Protocol - OCSP,” Jan. 2013, Internet Request for Comments
RFC6960.
[Online].
Available:
https://tools.ietf.org/html/rfc6960
[accessed: 2014-09-01]
[13] eTutorials.org, “C/C++ Secure Programming – Chapter 10.9 Using a
Whitelist to Verify Certiﬁcates,” 2014, eTutorials.org. [Online]. Avail-
able: http://etutorials.org/Programming/secure+programming/ [accessed:
2014-09-01]
[14] Microsoft, “Digital Rights Management License Protocol – Retrieving
Revocation Data from the Enrollment Server,” 2014. [Online]. Avail-
able: http://msdn.microsoft.com/en-us/library/dd644914.aspx [accessed:
2014-09-01]
[15] ISO/IEC
62351,
“Power
systems
management
and
associated
information exchange Data and communication security,” 2014, IEC
TC57. [Online]. Available: http://tc57.iec.ch/index-tc57.html [accessed:
2014-09-01]
[16] E. Rescorla, “HTTP Over TLS,” 2000, Internet Request for Comments
RFC2818.
[Online].
Available:
https://tools.ietf.org/html/rfc2818
[accessed: 2014-09-01]
[17] OPC Foundation, “OPC Uniﬁed Architecture Speciﬁcation Part 1:
Overview and Concepts, Release 1.02,” Jul. 2012. [Online]. Available:
http://www.opcfoundation.org/ua/ [accessed: 2014-09-01]
[18] ISO/IEC
61850,
“IED
Communications
and
Associated
Data
Models in Power Systems,” 2014, IEC TC57. [Online]. Available:
http://tc57.iec.ch/index-tc57.html [accessed: 2014-09-01]
[19] Wikipedia,
“Bloom
Filter.”
[Online].
Available:
http://en.wikipedia.org/wiki/Bloom ﬁlter [accessed: 2014-09-01]
172
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

