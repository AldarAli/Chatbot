Implementation Design of UPCON-based 
 Traffic Control Functions working with vEPC
Megumi Shibuya, Atsuo Tachibana and Teruyuki Hasegawa 
KDDI R&D Laboratories, Inc. 
Saitama, JAPAN 
e-mail: {shibuya, tachi, teru}@kddilabs.jp 
Abstract—To resolve the Radio Access Network (RAN) 
congestion issue, 3GPP is standardizing a mechanism named 
User Plane Congestion Management (UPCON) which notifies 
congestion status information on RANs to Evolved Packet Core 
(EPC) or behind EPC for efficient traffic control of Long Term 
Evolution (LTE). This paper presents the implementation 
design of the traffic control functions (we call them “TCFs”) 
working with virtualized EPC (vEPC). TCF can control traffic 
in accordance with congestion status information on RANs, 
which is supposed to be notified by Evolved Node B (eNB) to 
EPC and its behind systems based on UPCON. We 
implemented the proposed system as virtual machines working 
with commercial vEPC software, which includes EPC functions, 
such as Serving/Packet data network GateWay (S/P-GW) and 
Policy and Charging Rules Function (PCRF). Through the 
experimental system, we evaluated the feasibility of TCFs. In 
addition, we discuss the applicability of TCF to Mobile Network 
Operators (MNOs).  
Keywords - UPCON; Congestion Control; vEPC; Traffic 
Control; DIAMETER  
I.
INTRODUCTION
Since introducing the Long Term Evolution (LTE), the 
Radio Access Network (RAN) capacity of cellular networks
has been expanding dramatically. On the other hand, rich 
applications, such as high-definition audio/video streaming, 
image sharing, and online-games have been wide-spreading 
by which mobile users download rich content via cellular 
networks. So the traffic volume per user has been increasing 
dramatically. According to a forecast in [1], from 2013 to 
2018, the number of smartphone devices is expected to grow 
at 18% compound annual growth rate (CAGR) while the 
mobile data traffic volume is expected to grow at 63% 
CAGR, i.e., 3.5 times larger. In other words, the growth in 
traffic volume per user outpaces the growth in the number of 
devices. Therefore, RAN congestion still remains as a critical 
issue even if LTE migration is going well [2].  
To resolve this issue, the following two solutions easily 
come up with. First, expanding RAN bandwidth capacity, 
e.g., by small sizing cells and/or using higher radio 
frequency is an intuitive and essential solution. However, it 
requires some processes consuming much time and cost, 
such as redesign of cells, which may be required again and 
again corresponding to traffic changes. Second, applying 
traffic control to congested cells is another solution that just 
shares the limited bandwidth capacity more reasonably. 
Although the total capacity does not change, it can improve 
each user’s Quality of Experience (QoE) by preferentially 
handling critical communications from the other ones and it 
can more flexibly cope with congestion corresponding to 
traffic changes. Therefore we focus on the latter solution in 
this paper. 
As for the concrete solutions of traffic control in response 
to congestion status information on RANs, we roughly 
categorize them into the following three types. First is that in 
transport level, e.g., TCP controls the traffic for avoiding 
congestion in wireless network with lower layer information, 
where TCP adjusts to the most suitable transmission rate 
dynamically in accordance with channel status [3]. Second is 
that based on packet-level QoS scheduling, such as priority 
queuing. It can provide higher priority communications to 
users by prioritizing packets generated from specific 
applications related to the communications [4]. Third is that 
so-called traffic offload, where (all or a part of) the traffic is 
redirected to surrounding cells or other types of networks to 
reduce the traffic in the target cell. For example, Coordinated 
Multi-Point (CoMP) is standardized by 3GPP release 11 [5], 
where the congestion level on each Evolved Node B (eNB) 
is monitored in real time to avoid congestion by load 
balancing the traffic with surrounding eNBs. In regard to the 
other types of networks, Wi-Fi or wired network (e.g., 
FTTH) is used in general.  
From the fairness viewpoint between users in a congested 
cell, traffic control mitigating congestion should not be 
applied on a per-flow (e.g., TCP connection) basis but per 
user (e.g., UE: User Equipment) basis. Moreover, when a 
UE attaches Wi-Fi, all the traffic from/to the UE had better 
be offloaded to Wi-Fi, which is another reason for applying 
per user basis traffic control. In addition, since such other 
types of networks are being accommodated in Evolved 
Packet Core (EPC) or behind EPC, traffic control should 
work in or behind EPC. Hence, a certain mechanism is 
required by which EPC (or the systems behind it) knows the 
congestion status information on RANs. 3GPP is now 
standardizing such a mechanism named “User Plane 
Congestion Management (UPCON)” [6]. Some use cases of 
UPCON are proposed in [7][8], such as controlling the traffic 
at peak time during commuting time, and giving priority 
accesses for premium users who pay a premium (and 
expensive) fee. However, feasibility studies on their designs 
and implementations have not yet been carried out enough. 
In this paper, we propose an implementation design of 
the traffic control functions (hereinafter called “TCFs”) 
122
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

working with virtualized EPC (vEPC). TCF can control the 
traffic in accordance with congestion status information on 
RANs (hereinafter called “RAN congestion status”), which 
is supposed to be notified by eNB to EPC and its behind 
systems based on UPCON. Specifically, our implementation 
design covers the executions of multiple (and different types 
of) TCFs independently based on RAN congestion status, 
which can be retrieved from each TCF with a reasonable 
overhead. Furthermore, we implemented the experimental 
system as virtual machines working with a commercial 
vEPC software [9], which includes EPC functions, such as 
Serving/Packet data network GateWay (S/P-GW) and Policy 
and Charging Rules Function (PCRF) [10]. We also 
evaluated the feasibility of TCFs through the system.  
This paper is organized as follows. Section II summarizes 
the framework of LTE system and UPCON. Section III 
explains the proposed implementation design of the traffic 
control functions (TCFs). In Section IV, we evaluate the 
feasibility of the proposed system, then discuss the 
applicability of TCF to Mobile Network Operators (MNOs) 
in Section V. Finally, we conclude the work in Section VI.  
II.
FRAMEWORK OF LTE SYSTEM AND UPCON 
Figure 1 shows an example of LTE system configuration. 
LTE system consists of UE, eNB, and EPC. EPC includes 
Mobility Management Entity (MME) and PCRF at Control 
Plane (C-Plane), and includes Serving data network 
GateWay (S-GW) and Packet data network GateWay (P-
GW) at User Plane (U-Plane). PCRF sets policy rules related 
to QoS and charging as QoS Class Identifiers (QCIs) and 
sends them to S/P-GW. Traffic control is conducted based on 
QCIs. Behind EPC, Application Function (AF) exists in the 
Packet Data Network (PDN) (e.g., Internet, IMS). Rx 
interface [11] based on DIAMETER protocol [12] is 
prescribed between PCRF and AF.  
Figure 1. Example of LTE system configuration. 
Recently, although the traffic can be controlled in 
accordance with QCIs set at PCRF in EPC, there has been no 
standardized mechanism for EPC to grasp the RAN 
congestion status. In addition, since other types of networks 
for traffic offload are being accommodated in or behind EPC, 
traffic control should work behind the accommodation point. 
Hence, the mechanism called “UPCON” by which the RAN 
congestion status is notified to EPC or its behind is now 
being standardized in 3GPP.  
In order to further discuss the concrete implementation 
issues, we suppose that RAN congestion statuses are notified 
by each eNB, which forms a cell as shown in Fig. 1, and we 
set the TCFs at AF located behind EPC. In addition, we 
assume that RAN congestion levels are defined based on 
each MNO’s service operation policy. Since the RAN 
congestion will occur at the network between an eNB and 
UEs, i.e., inside a cell, RAN congestion status will vary on a 
per-cell basis (hereinafter called “per-cell basis”).
III.
TRAFFIC CONTROL FUNCTIONS
As discussed in Section I, TCF should be applied on a 
per-user basis, while RAN congestion status will vary on a 
per-cell basis as described in Section II. Thus, we carefully 
established our design principals of TCF implementation 
considering how TCF handles relationships between UE and 
eNB with a reasonable overhead in terms of the data volume 
and processing time. It should be noted as beyond the scope 
of this paper that how PCRF obtains RAN congestion 
statuses from eNBs. 
A. Design Principles  
First, we established the following design principles. 
1.
RAN congestion occurs on a per-cell basis. In 
contrast, TCF assumes that the traffic is controlled 
on a per-user basis (hereinafter called “per-UE
basis”), which is practically identified by UE IP 
addresses. Namely, TCF needs to grasp the RAN 
congestion level on a per-UE basis. We compared 
the following notification methods of RAN 
congestion statuses from PCRF to TCF; 
y
Method-1: notify the RAN congestion statuses 
and information of all the visited UEs in an 
eNB on a per-cell basis.  
y
Method-2: notify the RAN congestion status of 
each UE accommodated in the TCF, i.e., on a 
per-UE basis. 
We selected Method-2 because, 1) all the visited 
UEs in the eNB do not always use the TCF, and 2) 
when multiple TCFs exist and different UEs are 
accommodated independently, some overheads on 
redundant extractions of UEs in the same eNB will 
occur in all the TCFs if per-cell based notification is 
applied. 
2.
RAN congestion statuses are exchanged between 
PCRF and TCF in accordance with Rx interface. So 
as to be available for multiple TCFs, a unique Rx 
session ID, e.g., which is created from the UE’s IP 
address and TCF identifier, is assigned to each UE 
and TCF pair as a unit. 
3.
Since each TCF will accommodate different UEs 
when multiple TCFs exist, a congestion status 
database (hereinafter called “CDB”) for maintaining 
the congestion statuses of UEs is created in each 
TCF to keep the size of each CDB as small as 
possible. The details of CDB are explained in 
Section III B.
4.
We consider two types of the notification trigger 
about RAN congestion status changes in eNBs;  
y
Trigger-A: TCF requests RAN congestion 
status to PCRF periodically. 
y
Trigger-B: TCF notifies the status only of UEs 
relevant to TCF anytime when the RAN 
congestion status changes in an eNB. 
Since Trigger-A needs to request the RAN 
congestion status of all UEs registered in CDB,
123
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

Figure 2. Sequence flow of TCF. 
we select Trigger-B, by which a lower volume of 
RAN congestion status notifications are expected. 
5.
In the case that the IP address of a certain UE is 
changed or reallocated to another UE, the CDB 
ends up storing the invalid RAN congestion status. 
Therefore, UE data without access for a certain 
period T are deleted from CDB. 
6.
Whenever the RAN congestion status of UE in 
CDB is accessed, the corresponding access time t
on the CDB is updated. 
B. Congestion Status Database (CDB)  
Table I shows an example of CDB at each TCF. Each 
record in CDB consists of the UE’s IP address, Rx session 
ID to identify TCF, RAN congestion level C at the eNB that 
UE is now visiting, access time t, Cell ID that identifies the 
eNB, International Mobile Subscriber Identity (IMSI), and 
Mobile Station International Subscriber Directory Number 
(MSISDN). When reading a record, the UE’s IP address is 
used as a search key. The values of Cell ID, IMSI, and 
MSISDN are set based on the obtained information from 
PCRF.  
TABLE I. 
EXAMPLE OF CONGESTION STATUS DATABASE (AT TCF1) 
* CDB key
IP 
Address*
Rx Session
ID 
Congestion 
Level C
Access 
Time t
Cell ID IMSI MSISDN
IPa 
TCF1+IPa 
3 
t1 
1 
00 
aaa 
IPb 
TCF1+IPb 
1 
t2 
2 
11 
bbb 
IPc 
TCF1+IPc 
2 
t3 
1 
22 
ccc 
: 
: 
: 
: 
: 
: 
: 
The CDB accesses occur at three timings (and actions) as 
shown below. 
y
E1: when a UE accesses TCF (read record and update 
t, or,insert new record) 
y
E2: when a TCF receives a RAN congestion status 
change at an eNB from PCRF (update t)
y
E3: when a certain period T passes from the last access 
time (delete record) 
Note that, at E2 and E3 timings, multiple CDB accesses will 
occur at the same time in proportion to the number of 
corresponding UEs. 
C. Sequence Flow of TCF 
The sequenceflow of TCF is as follows (see Fig. 2); 
1)
After a TCP connection between TCF and PCRF is 
established, a DIAMETER session is established to 
exchange its identification and functional information 
(such as protocol version, supported DIAMETER 
application, and security mechanism) by Capabilities-
Exchange-Request/Answer 
DIAMETER 
messages 
(CER/CEA). 
2)
When a UE accesses a server on the Internet via a TCF, 
the TCF checks whether the IP address of the UE has 
already been registered in its CDB. If yes, the TCF 
updates access time t and goes to 5). 
3)
If no, the TCF sends the UE information (IP address 
and Rx session ID) to PCRF. The PCRF replies with 
the congestion status of the eNB that the UE is visiting 
by AA-Request/Answer Rx messages (AAR/AAA). 
Then, the Rx session for the UE is established between 
TCF and PCRF. 
4)
The TCF registers the UE information, received the 
congestion level C, and access time t at CDB. 
5)
The TCF controls the traffic to the UE based on the 
congestion level C.
6)
When the PCRF detects the congestion level changes 
at the eNB, it sends the corresponding information of 
the UE and its congestion level to the TCF by Re-
Auth-Request/Answer Rx messages (RAR/RAA), and 
the TCF updates the congestion level C of the UE and 
access time t.
7)
The TCF finds records in each of which time T has 
been passed from the last access at a constant period T,
then deletes the matched records from its CDB. In 
addition, the TCF and the PCRF exchange the 
termination 
command 
by 
Session-Termination-
Request/Answer Rx messages (STR/STA) in order to 
terminate the relevant Rx session. 
124
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

IV.
EXPERIMENTAL EVALUATION
In order to validate the effectiveness and feasibility of 
our proposal, we set up an experimental traffic control 
system on a physical PC (HP DL380p Gen8, 16 core (Intel 
Xeon E5-26600@2.20GHz), 128GB memory, 400GB HDD, 
VMware ESXi 5.1), where a commercial vEPC software is 
running as S/P-GW+PCRF [9] and two types of our 
developed software are running as TCF1 and TCF2, 
respectively. We arranged three Virtual Machines (VMs) for 
S/P-GW+PCRF, TCF1, and TCF2 as shown in Fig. 3. The 
resources allocated to both TCFs are equivalent, but OSes 
are different as shown in Table II. The CDB on each TCF is 
implemented with SQLite3 [13]. The experimental network 
has two cells. Each cell holds two UEs attached to two types 
of networks; emulated LTE and Wi-Fi.  
Figure 3. Experimental setup. 
TABLE II. 
VM CONFIGURATION OF EACH TCF 
Parameter 
TCF1 
TCF2 
CPU 
4vCPU 
4vCPU 
Memory 
28GByte 
28GByte 
HDD 
68GByte 
68GByte 
OS
(Kernel) 
Debian 7.1 
(3.2.0-4-amd64) 
CentOS 6.4 
(2.6.32-358.el6.x86_64) 
A summary of the traffic control functions is as follows; 
TCF1 aggregates two types of networks between UE and 
TCF1, i.e., LTE and Wi-Fi, to obtain higher bandwidth 
and/or offload the traffic [14]. TCF1 controls the traffic for 
LTE (it is the target network) based on RAN congestion 
status C. Meanwhile, TCF2 provides a proxy function to 
aggressively pre-fetch a web content that the UE is expected 
to access next [15] only when (LTE) RAN is not congested 
(pre-fetching ON). When (LTE) RAN is congested, such a 
pre-fetching is not applied (pre-fetching OFF). Note that, we 
verified the pre-fetching ON/OFF whether the pre-fetch tags 
are included or not at the header in the downloaded web 
content. 
We set the routing in S/P-GW so that UE1 and UE3 can 
access the Internet via TCF1, and so that UE2 and UE4 can 
do it via TCF2. 
A. Verification of TCF Behavior based on Congestion 
Status 
First, we verify that the implemented TCFs can control 
the traffic based on the congestion status C. In order to 
confirm it, each UE accesses the web server on the Internet 
via the corresponding TCF while the congestion level C is 
varied from 1 to 3 (3 is the most congested) as shown in 
Table III. In this experiment, UE1 and UE3 via TCF1 start 
downloading a big size file (763MB) from the web server, 
UE2 and UE4 via TCF2 access the web server 5 times each 
in total while C changes 1→2→3→1 at eNB1 every 60 
seconds.
TABLE III. 
TCF PARAMETERS AND ACCESS SCENARIOS
TCF
#
Function
Congestion level C and 
function ON/OFF 
Download files and  
access timing 
1 
Control LTE 
bandwidth 
C=3 : ON (0.4Mbps)  
C=1, 2: OFF (no control) 
Download a file (763MB) 
from a web server while 
changing C.
2 
Pre-fetching C=1: ON 
C=2, 3: OFF 
Download Google web 
content 5 times each in total.
1) Per-UE and per-TCF based traffic control 
 Figure 4 shows the traffic control results of UE1 and 
UE2 measured at each TCF when C changes in eNB1. In Fig. 
4 (a) and (b), the X-axis expresses the elapsed time [sec] and 
C was changed at the times indicated by red arrows.  
Figure 4. Example of traffic control. 
From these plots, TCF can control the traffic based on C.
As shown in Fig. 4 (a), with UE1 via TCF1, the throughput 
of LTE changes approximately 2.0→2.0→0.4→2.0 [Mbps]. 
The LTE bandwidth of UE1 is limited and traffic is 
offloaded toward Wi-Fi, i.e., traffic control is ON when C is 
3, while that of UE2 changes to OFF when C is 2 and 3. This 
proves that TCF can control the traffic on a per-UE basis. 
In addition, according to the result of UE2 via TCF2 as 
shown in Fig. 4 (b), the pre-fetching is ON when C is 1 and 
OFF when C is 2 and 3, while the throughput of TCF1 in Fig. 
4 (a) is almost the same when C is varied from 1 to 2, 
irrespective of the ON/OFF change of TCF2. This proves 
that TCF1 and TCF2 can control the traffic independently. 
2) Per-cell based traffic control 
Table IV shows the change of the traffic control status at 
each UE in cell#1 and cell#2 while C changes in cell#1 only. 
When C is varied from 3 to 1, the traffic control statuses at 
UE1 and UE2 are changed, while those at UE3 and UE4 are 
kept the same in both ON/OFF cases. Note that there are two 
cases of OFF→OFF in cell #1 as indicated by red italic 
characters in Table IV. This reason is that TCF1 is OFF 
when C is 1 and 2, and TCF2 is OFF when C is 2 and 3 as 
shown in Table III. Hence, the TCFs in cell#1 can control the 
traffic based on C in these cases. This proves TCF can 
control the traffic based on a per-cell basis. 
0
2
4
6
8
10
0
40
80
120
160
200
240
Throughput [Mbps]
0
40
80
120
160
200
240
ON
OFF
Elapsed Time [sec]
125
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

These results including 1) indicate that our proposed 
implementation design of the traffic control functions is 
feasible for controlling the traffic based on the RAN 
congestion status of corresponding UEs by each TCF. 
TABLE IV. 
CHANGE OF THE TRAFFIC CONTORL STATUS AT EACH UE
AND CELL (VARIED C AT CELL#1)
B. Performance Evaluation of CDB 
As our proposed system accesses its CDB on a per-UE 
basis, it is important to perceive the processing performance 
of the CDB for the number of UEs. To evaluate it, the 
processing time of CDB at each TCF is measured in four 
cases; read, insert, delete, and update. Specifically, we 
measure the processing time for accessing L records 10 times 
in each case, where L denotes the registration number of UEs 
(= the number of records in CDB). 
Figure 5 shows the processing time at TCF1 and TCF2 
when the number of UEs is changed. The processing time is 
increased in the following the order, read < insert < delete < 
update.
Figure 5. CDB processing time of UEs. 
In the case of TCF1, the processing time is (almost) 
linearly increased as L increases. On the other hand, in the 
case of TCF2, it is also linearly increased when the number 
of UEs is smaller (L<=600,000), but it is rapidly increased 
when the number of UEs is larger. Specifically, when L is 
1,000,000, read and update in TCF1 are 17.17 and 35.85 
seconds, respectively, and those of TCF2 are 14.88 and 
46.34 seconds, respectively. 
According to [16], the system performance of the 
commercial PCRF is approximately 25,000 [TPS] per server. 
The processing times of read and update in TCF are 58,241 
and 27,894 [TPS], respectively. This indicates that the 
performance of TCF is acceptable for practical use. 
The update processing time is approximately from 2 to 
2.5 times longer than read. Furthermore, the processing 
times in TCF1 is shorter than TCF2 at L<600,000, whereas it 
is reversed in delete and update at L>800,000. We assume 
that this is due to the kernel version because it is the only 
differential factor between TCF1 and TCF2. This result 
implies that CentOS is suitable for lower L, and that Debian 
is suitable for larger L.
These experimental results indicate that the performance 
of our proposed system is affected by the update, which 
requires the longest processing time. In addition, the OS (or 
kernel) selection seems important for achieving good 
performance at the CDB.  
V.
DISCUSSION
Based on the results in Section IV B, we discuss the 
applicability of UPCON to MNO. As one example, we refer 
to Japanese MNO data that indicates the penetration rate in 
the population of LTE is in the top 3 in the world. Table V 
shows the number of eNBs and subscribers (i.e., UEs) that 
MNOs announced in March 2014 [17][18] and the number 
of UEs per eNB in the Japanese top 3. We analyze how CDB 
load is carried in regard to the number of UEs and eNBs. We 
focus on update that requires the longest processing time. 
For simplicity, we assumed that each MNO has one EPC, the 
number of UEs per eNB is equal in each MNO, a uniform 
time interval is required to notify the congestion status, and 
all UEs use the same TCF.  
TABLE V. 
JAPANESE MNOS’ DATA 
MNO (Mi) 
1 
2 
3 
#eNBs (Ni)  
97,755 
61,062 
34,048
#UEs (Hi)  
40,522,000 
63,105,200 
35,924,800
#UEs per eNB (Ki=Hi/Ni)
414.53 
1033.46 
1055.12
In Table V, Mi (i=1, 2, 3) denotes each MNO. Ni and Hi
denote the number of eNBs and UEs at Mi, respectively. Ki
indicates Hi per Ni. Let pij denote the update processing time 
of one million UEs at TCFj (j=1, 2), the per-eNB update
processing time is given by Kiڄ pij/1,000,000, which we 
denote as vij. From the result of Section IV B, v11=0.015, 
v21=0.037, and v31=0.038 seconds at TCF1 and v12=0.019, 
v22=0.048, and v32=0.049 seconds at TCF2, respectively.  
Assuming that the congestion status is notified every r
seconds from each eNB to PCRF (we call r “notification 
interval”), TCFj at Mi needs to finish the update process 
within ui=r/Ni seconds on average, i.e., vij<ui.
First, we analyze the effect of r. Figure 6 shows the 
relationships between r, ui, and vij. For instance at M1, u1 is
0.037 seconds when r is 3,600 seconds. Here, TCF1 can 
process update because it satisfies v11<u1. In contrast in the 
case of r is 600, the update cannot be finished within the 
given time because of v11>u1. Let Rij denote the threshold 
value of r by which TCFj at Mi could process update, we 
can easily obtain R11 as 1,452 seconds. In the case of TCF2, 
R12 is 1,877 seconds. 
Furthermore, for instance at TCF1, in the case of M2 and 
M3, although u3 is two times as much time as u2 in order to 
finish the update process, v21 and v31 are almost the same 
value because vij depends on Ki. In addition, in the case of M1
and M3, although N1 is three times larger than N3, R11 and R31
are almost the same value because Rij depends on Hi.
Cell# eNB#
UE#
TCF#
C1→C2
C2→C3
C3→C1
1
1
1
1
OFF → OFF OFF → ON
ON → OFF
2
2
ON → OFF OFF → OFF OFF → ON
2
2
3
1
OFF → OFF OFF → OFF OFF → OFF 
4
2
ON → ON 
ON → ON 
ON → ON 
: Changed traffic control status. 
Italic : Same traffic status in cell#1.
0
10
20
30
40
50
0
200,000
400,000
600,000
800,000
1,000,000
Processing Time [sec]
The number of UEs (=L)
126
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

Figure 6. Notification interval of the RAN congestion status from eNB to 
PCRF vs. update processing time. 
Next, when the congestion statuses are notified more 
frequently than Rij, more processing resources are required 
for TCF, e.g., arranging multiple physical (and/or virtual) 
machines (we call them “units”) for TCF. Hence, we analyze 
the relationships between r and the number of units for TCFj.
Let sij denote the number of units for TCFj at Mi, and it is 
given by sij=vijڄNi/r.
For instance, at M1 in the case of TCF1, s11 is 24.4 units 
when r is 60 seconds. In contrast, in the case of r is 600 
seconds, s11 is 2.44 units. Therefore, sij is an extremely large 
number when r is short. In the case of TCF2, s12 is 31.0 units 
when r is 60 seconds. In contrast in the case of r is 600 
seconds, s12 is 3.10 units. Hence, the selection of r and sij is 
important.  
As one example according to [16], many millions of 
subscribers are handled by a single PCRF server composed 
of many blades. Hence, arranging multiple physical 
machines for TCF seems a practical solution. We leave the 
effective configuration of multiple servers/blades as future 
work. 
VI.
CONCLUSION
In this paper, we propose an implementation design of 
the TCF working with vEPC. It controls the traffic in 
accordance with RAN congestion status, which is supposed 
to be notified by eNB to EPC and its behind systems based 
on UPCON. Our implementation design covers the 
executions of multiple TCFs independently based on the 
RAN congestion status, which can be retrieved from each 
TCF with a reasonable overhead. We implemented the 
proposed system with commercial vEPC software, which 
includes EPC functions, such as S/P-GW and PCRF. The 
experimental results show that the proposed system can 
control the traffic based on the RAN congestion status, and 
demonstrate the performance of CDB. Furthermore, we 
discuss the applicability of TCF to MNOs about the 
relationship with the notification time from eNB to PCRF 
and the number of TCFs. As future work, we will verify that 
achieving good performance at the CDB to select some OSes 
(or kernels) and the effective configuration of multiple 
servers/blades. In addition, we will evaluate the performance 
of the CDB by varying the number of eNBs and UEs.  
REFERENCES
[1]
Cisco Systems Inc, “Cisco Visual Networking Index: Global 
Mobile 
Data 
Traffic 
Forecast 
Update, 
2013-2018,” 
http://www.cisco.com/c/en/us/solutions/collateral/service-
provider/visual-networking-index-vni/white_paper_c11-
520862.html.  
[2]
D. Kutscher, H. Lundqvist, and F. G. Mir, “Congestion 
Exposure in Mobile Wireless Communications,” Proc. 
GLOBECOM, Dec. 2010. 
[3]
A. Shadmand and M. Shikh-Bahaei, “TCP Dynamics and 
Adaptive MAC Retry-Limit Aware Link-Layer Adaptation 
over IEEE 802.11 WLAN,” in Proceedings of CNSR 2009, 
pp.193-200, May 2009. 
[4]
A. Zolfaghari and H. Taheri, “Queue-Aware Scheduling and 
Congestion Control for LTE,” Proc. ICON 2012, pp.131-136, 
Dec. 2012. 
[5]
3GPP TR 36.819, “Coordinated multi-point operation for 
LTE 
physical 
layer 
aspects,” 
http://www.3gpp.org/DynaReport/16819.htm. 
[6]
3GPP TS 23.705, “System Enhancements for User Plane 
Congestion 
management,” 
http://www.3gpp.org/DynaReport/23705.htm. 
[7]
M. Shehada, “Overview of 3GPP Study Item UPCON,” 
http://www.ikr.uni-
stuttgart.de/Content/itg/fg524/Meetings/2012-03-13-
Muenchen/01_ITG524_Munich_Shehada.pdf. 
[8]
A, Maeder, S. Schmid, and Z. Yousaf, “Towards User-plane 
Congestion 
Management 
in 
LTE 
EPS,” 
http://www.slideshare.net/zahidtg/towards-userplane-
congestion-management-in-lte-eps. 
[9]
ANMCC, 
http://affirmednetworks.com/products/mobileContentCloud.p
hp.
[10] 3GPP TS 23.203, “Technical Specification Group services 
and System Aspects; Policy and charging control architecture,” 
http://www.3gpp.org/DynaReport/23203.htm. 
[11] 3GPP TS 29.214 “Technical Specification Group Core 
Network and Terminals; Policy and Charging Control over Rx 
Interface 
Point 
(Release11),” 
http://www.3gpp.org/DynaReport/29214.htm. 
[12] P. Calhoun, J. Loughney, E. Guttman, G. Zorn, and J. Arkko, 
“Diameter Base Protocol,” IETF, Informational RFC 3588, 
Sep. 2003, http://tools.ietf.org/html/rfc3588. 
[13] SQLite, http://www.sqlite.org/download.html. 
[14] A. Tachibana, T. Yoshida, M. Shibuya, and T. Hasegawa, 
“Implementation of a Proxy-based CMT-SCTP Scheme for 
Android Smartphones,” Proc. IEEE WiMob 2014, pp.664-669, 
Oct. 2014. 
[15] T. Goto, A. Tachibana, and T. Hasegawa, “A Study on 
Prefetching Control Method for Web Traffic based on 
Congestion Information of Base Stations,” Proc. IEICE 
Spring Conference, B-11-14, Sep. 2013. 
[16] Broadband Traffic Managment, “PCRF Performance: Opnet 
vx. 
Comverse 
Vs. 
Others,” 
http://broabandtrafficmanagement.blogspot.jp/2013/01/pcrf-
performance-openet-vs-comverse-vs.html.
[17] Ministry 
of 
Internal 
Affairs 
and 
Communications, 
“Information & 
Communications Statistics Database,” 
http://www.tele.soumu.go.jp/j/musen/toukei/index.htm 
(in 
Japanese).  
[18] Telecommunications Carriers Association, “Number of 
Subscribers,” http://www.tca.or.jp/english/index.html.
0.0
0.020
0.040
0.060
0.080
0.10
0.12
0
600
1,200
1,800
2,400
3,000
3,600
Update Processing Time [sec]
Notification Interval (r) [sec]
Threshold value of r could process update at Mi
at TCF1 䕧 R11 䕧 R21 䕧 R31
at TCF2 䕱 R12 䕱 R22 䕱 R32
Per-eNB update processing time at Mi
at TCF1
v11
v21
v31
at TCF2
v12
v22
v32
Update processing time of r at Mi
u1
u2
u3
R32
R31
R11
R12
R21
R22
127
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-398-8
ICN 2015 : The Fourteenth International Conference on Networks

