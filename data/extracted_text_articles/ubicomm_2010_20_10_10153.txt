Information Dissemination in WSNs  
Applied to Physical Phenomena Tracking 
 
María Ángeles Serna, Eva María García, Aurelio Bermúdez, Rafael Casado 
Instituto de Investigación en Informática de Albacete (I3A) 
Universidad de Castilla-La Mancha 
02071 Albacete, Spain 
{angeles.serna, evamaria.garcia, aurelio.bermudez, rafael.casado}@uclm.es
 
 
Abstract— Several works suggest the use of wireless sensor 
networks to manage crisis situations. An example of such 
scenarios is forest fire fighting. In these situations, it is 
necessary to use efficient mechanisms for disseminating the 
environmental information captured by sensors. This paper 
analyzes the behavior of some representative broadcasting 
techniques when they are used to disseminate to the entire 
network the occurrence of multiple simultaneous events. The 
performance evaluation carried out shows that a moderate 
resource consumption in network devices can reduce the 
operation overhead. 
Keywords-wireless sensor networks; dissemination; performance 
evaluation 
I. 
INTRODUCTION 
One of the most promising applications of wireless 
sensor networks (WSNs) is its application to what is recently 
being referred to as situation management [10]. Situation 
management 
deals with 
dynamic and unpredictable 
scenarios, where a complex distributed system deployed over 
a wide area captures real time data from a large number of 
heterogeneous information sources. The final goal of this 
system is to provide support for decisions making. 
An example of these applications is the EIDOS system 
(EquIpment Destined for Orientation and Safety) [4], in 
which a large (and dense) WSN is deployed over the area 
affected by a wildfire by using aerial vehicles. The mission 
of the network in this case is to directly provide the fire-
fighters critical information that can improve their safety and 
efficiency. Basically, the WSN consists of a set of devices 
(also called “motes”) that are able to capture certain physical 
magnitudes (temperature, pressure, humidity, etc.) in the 
environment where they have been deployed, and process 
and transmit the data acquired through a RF channel. 
The most important technical objective in the EIDOS 
system is the development of a distributed collaborative 
processing mechanism. Starting from the sensed data, this 
mechanism allows the network nodes to obtain a simplified 
representation of the active fire fronts (a fire model), which 
informs about their localization, shape, speed, etc. This 
mechanism 
necessarily 
relies 
on 
an 
efficient 
data 
dissemination technique for propagating the information 
captured by the sensors. 
In this sense, several proposals can be found in the 
literature to perform the information dissemination in WSNs. 
In most cases, these techniques have been designed to 
propagate the occurrence of a single event of interest. 
However, in phenomena tracking applications (such as the 
one described), it may occur that, at a given time, several 
nodes in a dense WSN detect and spread multiple events 
simultaneously (or almost simultaneously). In our case, 
every individual event could mean the approach of a fire 
front to a given location. 
In this paper we analyze the behavior of different 
dissemination mechanisms when they are employed in 
physical phenomena monitoring tasks. In particular we are 
interested in evaluating their efficiency in spreading multiple 
events, the amount of resources required in network devices, 
and the overhead introduced in the wireless shared medium. 
The rest of this paper is organized as follows. First, 
Section 2 presents some related work in the area of 
information dissemination in sensor networks. Then, Section 
3 details the techniques that we have selected for this study. 
After that, Section 4 shows some simulation results that 
allow us to analyze the selected mechanisms. Lastly, Section 
5 presents the conclusions of our research and outlines the 
future work. 
II. 
WSN DISSEMINATION TECHNIQUES 
Dissemination (or diffusion) refers to the way in which 
the information is routed from the place where it is obtained 
(the sensor nodes) to the nodes who are interested in it [11]. 
In many situations the information flows to a single node, 
which plays the role of network base station. In this case we 
use the term collection or gathering. On the other hand, 
when all the nodes in the network are interested in receiving 
the information being disseminated (as in our case) the term 
broadcast is used. In [1] and [19], two classifications for 
these algorithms can be found. The simplest broadcast 
mechanism is blind flooding. Here, each node which owns 
(or receives) the information to be disseminated transmits it 
to the medium, so that it can be heard by all its direct 
neighbors. Thus, this technique ensures, at least in theory, 
that the information will reach its destination. 
However, it is well known that an uncontrolled flooding 
can be very inefficient, mainly because a given node can 
receive the same information from multiple neighbors [15]. 
This phenomenon is known as the broadcast storm problem. 
458
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

Some probabilistic-based techniques, such as Gossiping [6], 
apply probability to control this redundancy. An alternative 
is that nodes do not rebroadcast the information if they 
received the same data more than a predefined number of 
times (counter-based techniques) [1]. Another option is to 
discard a broadcast message if the distance to the transmitter 
node is less than a threshold, in order that only the furthest 
nodes from the transmitter retransmits, in turn, the data 
(distance-based techniques). Another possibility is to 
retransmit if and only if the additional area that would be 
covered after forwarding the message is large enough (area-
based techniques) [13]. 
In many cases, the decision of rebroadcasting the 
received information is postponed to a later time. This 
waiting period is usually called RAD (random assessment 
delay) [19]. In this way, if the node receives a new copy of 
the same message before the RAD ends, the rebroadcasting 
is canceled, thus avoiding redundant transmissions. The 
delay can be established randomly, or depending on the 
distance to the sending node (the greater the distance, the 
shorter the delay) [20]. The delay can also be calculated 
according to the area covered by all the copies of the same 
message received [7], or depending on the perimeter covered 
by these copies [16]. In the latter two cases, the transmission 
is canceled when it is no longer necessary. 
Other techniques assume a priori knowledge of the 
geographical location of direct neighbors (location-based 
techniques). Then, information is transmitted if and only if 
the additional area that will be covered is greater than a 
certain threshold [15]. Another way to control flooding is to 
use the hierarchy established by clustering algorithms, so 
that the cluster head in each group is the only node that 
forwards the message (cluster-based techniques) [15]. Other 
proposals based on one- or two-hop neighbor knowledge 
(neighbor-knowledge-based techniques) can be found in 
[17], [18], and [19]. Many authors have also proposed to use 
hybrid schemes. Some examples are [9] and [12]. In large 
networks the techniques introduced in this paragraph involve 
a considerable control overhead, making them less suitable. 
Finally, some dissemination mechanisms assume that 
only a subset of network nodes is interested in receiving the 
information. For example, in the directed diffusion 
mechanism [8], an initial phase is executed before the 
information is sent, in which a node propagates to the rest of 
the network its interest in a particular event. Then, the node 
that can provide that information answers with the requested 
data, using the best possible route. 
III. 
MECHANISMS ANALYZED 
The EIDOS system described in the introduction section 
requires the propagation of a large amount of fire detection 
events to all nodes in a large (and dense) WSN. Therefore, 
among the discussed dissemination techniques, we have 
considered the simplest one (flooding), and three delayed 
mechanisms (random delay, distance-based delay, and area-
based delay). In this section we detail the implementation 
carried out for each of the chosen mechanisms. Before this, 
some common assumptions are presented. 
We assume that every node in the network knows its 
location, which can be obtained either through a built-in 
Global Positioning System (GPS) receiver, or through a 
previous localization process (outside the scope of this 
paper). This location must be broadcasted to the entire 
network when the node sensor detects an approaching fire 
front. In addition, all nodes receiving the broadcast message 
will store the initiator position in some internal data 
structure, along with a time reference. 
To minimize control overhead, we also assume that 
network nodes neither maintain any hierarchy nor have 
information about the amount of neighbors or their location. 
Finally, regarding to the radio, we assume the use of 
omni-directional ideal antennas, resulting in circular 
coverage areas. In all the cases it is used the same 
transmission power, so these areas will have the same size. 
A. Instantaneous Dissemination 
This is a classic blind flooding mechanism [15]. When a 
node receives a message for the first time, it instantaneously 
retransmits to all its neighbors and, in turn, they transmit the 
message immediately. The only restriction that we have 
imposed is not to allow more than one retransmission of the 
same message by the same node. 
The Algorithm 1 shows the actions carried out by a 
network node after receiving a message (M). 
 
Algorithm 1. Instantaneous dissemination 
1: 
if first copy of M then 
2: 
 
forward M 
3: 
end if 
 
B. Random Delay 
This is an improvement over the instantaneous 
dissemination mechanism, in which the received message is 
not transmitted immediately, but after a waiting period [19]. 
The duration of this period (d) is randomly chosen between 0 
and a predetermined value (dmax). In order to avoid redundant 
transmissions, if a node receives a new copy of the message 
before the waiting period ends, the retransmission is 
canceled. Moreover, as in the previous case, a node only 
retransmits once the same message. 
The pseudo-code shown in Algorithm 2 shows the 
behavior of a node upon the reception of a message (M). 
 
Algorithm 2. Dissemination by random delay 
1: 
if first copy of M then 
2: 
 d = random(0, dmax) 
3: 
 forward M in tcurrent + d 
4: 
else 
5: 
 if transmission of M is still pending then 
6: 
  
cancel transmission 
7: 
 end if 
8: 
end if 
 
459
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

Note that, at a given time, a node may have several 
pending messages to send, which forces it to maintain a list 
to store information related to its pending retransmissions. 
C. Distance-Based Delay 
This mechanism also introduces a waiting period (from 0 
to dmax seconds) before forwarding the information received. 
However, in this case the delay is set according to the 
distance to the sending node [20]. Specifically, the waiting 
period is inversely proportional to this distance, so that 
remote nodes will forward the message first, thus covering a 
larger area. 
As before, the reception of a new copy of the message 
before the waiting period ends results in the cancellation of 
the retransmission. This is because it is no longer necessary 
that this node forwards the information due to another node 
further from the original one has done it before. Furthermore, 
no node forwards the same message more than once. 
In the example of Fig. 1, node A starts the event 
dissemination. Then nodes B, F, G, H, and I (located on the 
perimeter of the coverage area) forward the information. The 
rest of nodes under coverage decide to cancel their own 
broadcasts after the reception of a second copy of the 
message. 
Note that nodes do not have information about the 
location of their neighbors, so this technique requires that the 
sensor nodes incorporate some mechanism that allows them 
to measure (or estimate) the distance to the message sender. 
One possibility would be to use the power of the received 
message, assuming that it will be lower at a greater distance 
to the sender. 
Thus, when a node receives the first copy of a message, it 
could set the length of the waiting period by using the 
following expression: 

–  
 
 
 –  
R
min
max
max
min
P
P
d
x d
P
P


 





where PR is the receive signal power, which varies between 
Pmax (transmission power) and Pmin (minimum reception 
power). 
The Algorithm 3 describes the actions performed by a 
node after the arrival of a message (M). 
 
Algorithm 3. Dissemination by distance-based delay 
1: 
if first copy of M then 
2: 
 d = [ (Pr – Pmin) / (Pmax – Pmin) ] × dmax 
3: 
 forward M in tcurrent + d 
4: 
else 
5: 
 if transmission of M is still pending then 
6: 
  
cancel transmission 
7: 
 end if 
8: 
end if 
 
In the same that way the algorithm that uses random 
delays, the implementation of this technique requires 
managing a list of pending retransmissions. 
D. Area-Based Delay 
Among the techniques proposed in this category, we have 
implemented the ABBA algorithm [16]. As in the two 
previous cases, after the arrival of the first copy of a 
message, the receiving node establishes a waiting period. 
However, the copies received before the period ends do not 
cancel the message broadcast, but serve to adjust its length. 
In particular, the delay is set according to the coverage area 
of the receiving node that has already been covered by all the 
copies of the same message. Thus, the bigger area covered, 
the longer waiting periods. 
Assuming an ideal case where coverage areas are 
circular, we can compute the area covered by obtaining the 
covered arc. For example, in Fig. 2, node C has received a 
message from node A. The perimeter portion of C covered 
by the transmission of A is given by the intersection of two 
circles, and can be expressed through the difference between 
the initial and final angles. Moreover, the fact of using the 
same radio circles ensures that at most two segments will 
remain uncovered within that perimeter, which reduces the 
amount of information to store at each node. 
Note that to allow the updating of the perimeter covered 
at a receiving node, the received message needs to explicitly 
include the transmitter position. Obviously, this introduces 
an additional communication overhead. 
 
Figure 1.  Example of dissemination through the distance-based delay. 
 
Figure 2.  Perimeter of node C covered by a message received from A. 
A
B
F
G
C
D
E
H
I
B
A
α
β
gc = β ‐ α
0
460
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

Upon receiving a message, and after updating the 
perimeter portion which has been covered by previous 
copies, the node establishes a temporary delay for 
forwarding the message, according to the following 
expression: 

 
 
 
 
 
c
max
g
d
d
360










where gc is the angle (in degrees) covered. However, the 
forwarding of a message is cancelled if, before the expiration 
of the corresponding delay, the whole perimeter has been 
covered by other transmissions.  
The actions to be carried out after receiving a message 
(M) are detailed in Algorithm 4. 
 
Algorithm 4. Dissemination by area-based delay 
1: 
if M has not been forwarded yet then 
2: 
 
compute gc for M  
3: 
 
if  gc has changed then 
4: 
 
 
if gc = 360º then 
5: 
 
 
 
cancel transmission 
6: 
 
 
else 
7: 
 
 
 
d = (gc / 360) × dmax 
8: 
 
 
 
forward M in tcurrent + d 
9: 
 
 
end if 
10: 
 
end if 
11: 
end if 
 
Obviously, this algorithm requires that each node 
maintains a list to store the messages waiting to be 
broadcasted, along with the perimeter not covered yet by 
previous copies if those messages. 
IV. 
PERFORMANCE EVALUATION 
This section analyzes the performance of the four 
dissemination techniques detailed, from the point of view of 
their efficiency, resource consumption associated, and 
overhead introduced. 
A. Simulation Environment and Methodology 
We have used a simulation environment [5] developed 
for the EIDOS system. This tool is composed of several 
independent and interconnected modules, which share 
information by means of a global MySQL database. In short, 
first we use FARSITE [3] to simulate a wildfire over a 
particular area, by using real geographical, environmental 
and vegetation data. After that, a WSN simulator (developed 
in Python/TOSSIM [14]) executes the EIDOS application in 
each network node. 
In order to obtain realistic results, the simulator 
incorporates a noise and interference model and the Friis 
free-space signal propagation model. We have modeled the 
Crossbow Iris radio [2], applying a transmission power of 3 
dBm and a minimum reception power of -90 dBm. Under 
these conditions, we obtain an approximate radio range of 87 
meters. The simulated protocol for media access control is 
basic CSMA [14]. 
In each simulation run, network nodes were distributed 
randomly in a square area of 400 × 400 meters. We have 
considered network sizes of 100, 300, 500, 600, 800 and 
1000 nodes, with an associated density or connectivity 
degree (average number of direct neighbors) of 11.9, 35.77, 
62.93, 71.87, 97 805 and 124.09, respectively. 
For each experiment, we simulate the spreading of a 
forest fire in the deployment area, so that the fire reaches all 
the nodes of the network (without burning them). Every time 
a node detects the proximity of a fire (by a sudden rise in the 
sensed temperature), it broadcasts its position to the entire 
network. For localization purposes, we have assumed that all 
network nodes are equipped with a GPS receiver. For the 
execution of random-, distance- and area-based mechanisms 
the value of dmax parameter has been set to 5 seconds. 
Finally, in order to increase the representativeness of the 
results shown, each experiment was repeated several times 
for each of the dissemination techniques studied, showing 
here the average values. 
B. Simulation Results 
First of all, Fig. 3 (a) shows the efficiency of the 
dissemination mechanisms analyzed, expressed as the 
average number of events received by each node, in function 
of the network degree. As the upper bound of this statistic 
matches the network size, Fig. 3 (b) shows the same results, 
but normalized according to that bound. 
Note that, in general, an increment in network density 
penalizes all mechanisms. In particular, the instantaneous 
algorithm is quite efficient at a low network density, but its 
benefits are quickly reduced as the density increases. The 
random algorithm has a lower efficiency in a low density 
network, but it is not as sensitive to an increment in density 
 
(a) 
 
(b) 
Figure 3.  Efficiency of the dissemination mechanisms. 
0
100
200
300
400
500
600
700
800
900
0
50
100
150
Detected events (avg)
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
20
40
60
80
100
120
0
50
100
150
Detected events (%)
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
461
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

as the previous algorithm is. The distance-based algorithm 
behaves like the last one, although slightly worse because it 
produces more collisions (this issue is discussed later). 
Finally, 
the 
area-based 
algorithm 
obtains 
the 
best 
performance, being optimal at low and medium densities. 
Next, Fig. 4 shows the amount of events pending to be 
forwarded at each node, for the different evaluated 
mechanisms, and in function of the network degree. Note 
that the storage of these pending retransmissions consumes 
memory resources at the devices. Fig. 4 (a) shows average 
values, and Fig. 4 (b) shows the same results, but normalized 
according to the number of events propagated during the 
complete simulation run. 
Obviously, the instantaneous algorithm does not 
consume any resource at the nodes. In the remaining 
algorithms, the total amount of outstanding retransmissions 
tends to stabilize as the network degree increases (a), thus 
the relative percentage tends to decrease (b). It may be noted 
that the random- and distance-based algorithms have a 
similar behavior, while the area-based has slightly higher 
requirements. 
Finally, Fig. 5 shows the effect of the dissemination 
mechanisms on the wireless medium, through the amount of 
sent messages, duplicates and collisions per node, and in 
function of the network degree. It can be seen that the 
instantaneous algorithm generates a high overhead in the 
channel (a), producing a large number of collisions (b). This 
leads to a very few duplicated messages (c), and a low 
redundancy in the information transmitted (d). This 
algorithm forwards (once) all the information received, 
getting the worst possible efficiency of the performed 
transmissions (e). 
The random algorithm is the one which transmits less 
information, keeping a low level of collisions and duplicated 
messages. With a moderate redundancy, it gets the highest 
efficiency of the information transmitted in low density 
networks.  
The distance-based algorithm behaves like the former 
one, except that it has a slightly higher number of collisions. 
This is because the random distribution in time of the 
broadcasts is uniform, while the spatial distribution tends to 
increase with distance. The consequence is that the distance-
based algorithm gets a slightly lower efficiency. 
Finally, in the area-based algorithm, the amount of 
messages sent is not so sensitive to the network density, 
being the best starting from certain degree. Moreover, the 
number of collisions is negligible (b), so that the amount of 
duplicated messages is higher than the obtained by other 
algorithms (c), obtaining a redundancy that increases linearly 
(d). Finally, this algorithm presents the best efficiency in the 
transmissions made for dense networks (e). 
V. 
CONCLUSIONS AND FUTURE WORK 
In this work, we have studied the behavior of some 
representative dissemination techniques when they are used 
to broadcast multiple events in a dense WSN during the task 
of monitoring a physical phenomenon. 
From the analysis carried out it is shown that the 
technique that uses transmission delays based on area is the 
most efficient, in terms of the amount of events that it 
spreads. Moreover, from the point of view of the media 
access level, this mechanism exhibits the best behavior, at 
the expense of certain resource consumption in network 
devices. However, we found that the use of a reliable 
broadcast on a not reliable access level does not guarantee 
the propagation of all the events. 
As future work, we plan to consider using fusion 
techniques in order to reduce the amount of information to 
propagate. Our goal is to define some kind of representation 
which allows grouping a large number of geo-referenced 
events in a single data structure to spread. 
ACKNOWLEDGMENT 
This work was supported by the Spanish MEC and 
MICINN, as well as European Commission FEDER funds, 
under Grants CSD2006-00046 and TIN2009-14475-C04. It 
was also partly supported by the JCCM under Grants PREG-
07-25, PII1C09-0101-9476, and PII2I09-0067-3628. 
REFERENCES 
[1] 
Z.-Y. Cao, Z.-Z. Ji, and M.-Z. Hu, “An energy-aware broadcast 
scheme for directed diffusion in wireless sensor network,” Journal of 
Communication and Computer, vol. 4(5), pp. 28–35, 2007. 
[2] 
Crossbow Technology, Inc. http://www.xbow.com, 2010. 
[3] 
Fire.org, http://fire.org/, 2010 
[4] 
E. M. García, A. Bermúdez, R. Casado, and F. J. Quiles, 
“Collaborative data processing for forest fire fighting,” In 4th 
European Conference on Wireless Sensor Networks, Adjunct 
poster/demo proceedings, pp. 3–5, 2007. 
[5] 
E. M. García, M. A. Serna, A. Bermúdez, and R. Casado, “Simulating 
a WSN-based Wildfire Fighting Support System,” In IEEE 
International Symposium on Parallel and Distributed Processing with 
Applications, pp. 896–902, 2008. 
 
(a) 
 
(b) 
Figure 4.  Amount of pending retransmissions at each node. 
0
2
4
6
8
10
12
14
16
18
0
50
100
150
Pending retransmissions (avg)
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
0,5
1
1,5
2
2,5
3
3,5
4
0
50
100
150
Pending retransmissions (%)
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
462
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

[6] 
Z. J. Haas, J. Y. Halpern, and L. Li, “Gossip-Based Ad Hoc Routing,” 
IEEE/ACM Transactions on Networking, vol. 14(3), pp. 479–491, 
2006. 
[7] 
M. Heissenbüttel, T. Braun, M. Wälchli, and T. Bernoulli, 
“Optimized stateless broadcasting in wireless multi-hop networks,” In 
IEEE Infocom, 2006. 
[8] 
C. Intanagonwiwat, R. Govindan, and D. Estrin, “Directed Diffusion: 
A Scalable and Robust Communication Paradigm for Sensor 
Networks,” In 6th Annual International Conference on Mobile 
Computing and Networks, pp. 56–67, 2000. 
[9] 
S. Izumi, T. Matsuda, H. Kawaguchi, C. Ohta, and M. Yoshimoto, 
“Improvement 
of 
Counter-based 
Broadcasting 
by 
Random 
Assessment Delay Extension for Wireless Sensor Networks,” In 
International Conference on Sensor Technologies and Applications, 
pp. 76–81, 2007. 
[10] G. Jakobson, J. F. Buford, and L. Lewis, “Guest Editorial: Situation 
Management,” IEEE Communications Magazine, vol. 48(3), p. 110, 
March 2010. 
[11] H. Karl and A. Willig, “Protocols and Architectures for Wireless 
Sensor Networks,” Wiley, 2005. 
[12] K.-W. Kim, K.-K. Kim, C.-M. Han, M. M.-O. Lee, and Y.-K. Kim, 
“An Enhanced Broadcasting Algorithm in Wireless Ad-hoc 
Networks,” In International Conference on Information Science and 
Security, pp. 159–163, 2008. 
[13] J. Kim, Q. Zhang, and D. P. Agrawal, “Probabilistic broadcasting 
based on coverage area and neighbor confirmation in mobile ad hoc 
networks,” In IEEE Global Telecommunications Conference 
Workshops, pp. 96–101, 2004. 
[14] P. Levis, N. Lee, M. Welsh, and D. Culler, “TOSSIM: accurate and 
scalable simulation of entire TinyOS applications,” In 1st ACM 
Conference on Embedded Networked Sensor Systems, pp. 126–137, 
2003. 
[15] S.-Y. Ni, Y.-C. Tseng, Y.-S. Chen, and J.-P. Sheu, “The broadcast 
storm problem in a mobile ad hoc network,” In 5th Annual 
ACM/IEEE International Conference on Mobile Computing and 
Networking, pp. 151–162, 1999. 
[16] F. J. Ovalle-Martínez, A. Nayak, I. Stojmenovic, J. Carle, and D. 
Simplot-Ryl, “Area-based beaconless reliable broadcasting in sensor 
networks,” International Journal on Sensor Networks, vol. 1(1/2), pp. 
20–33, 2006. 
[17] A. Qayyum, L. Viennot, and A. Laouiti, “Multipoint Relaying for 
Flooding Broadcast Messages in Mobile Wireless Networks,” In 35th 
International Conference on System Sciences, pp. 298–307, 2002. 
[18] P. Wei and L. Xicheng, “AHBP: An efficient broadcast protocol for 
mobile ad hoc networks,” Journal of Computer Science and 
Technology, vol. 16(2) pp. 114–125, 2001. 
[19] B. Williams and T. Camp, “Comparison of broadcasting techniques 
for mobile as hoc networks,” In 3rd ACM International Symposium 
on Mobile Ad Hoc Networking & Computing, 194–205, 2002. 
[20] C. Zhu, M.J. Lee, and T. Saadawi, “A border-aware broadcast scheme 
for 
wireless 
ad 
hoc 
network,” 
In 
1st 
IEEE 
Consumer 
Communications and Networking Conference, 134–139, 2004. 
 
 
 
 
(a) Sent messages 
(b) Collisions 
 
 
 
 
 
(c) Duplicates  
(d) Redundancy in transmissions 
 
 
 
(e) Efficiency of the transmissions 
Figure 5.  Channel overhead caused by the dissemination mechanisms. 
0
100
200
300
400
500
600
0
50
100
150
Sent messages per node
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
50
100
150
200
250
300
350
400
0
50
100
150
Collisions per node/Detected
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
2
4
6
8
10
12
14
16
18
20
0
50
100
150
Duplicates  per node/Detected
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
10
20
30
40
50
60
70
80
90
100
0
50
100
150
Duplicates/Sent
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
0
0,2
0,4
0,6
0,8
1
1,2
0
50
100
150
Sent/Detected
Degree
AREA BASED
DISTANCE BASED
RANDOM
FLOODING
463
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

