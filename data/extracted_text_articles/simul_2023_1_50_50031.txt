Crowdshipping with Dynamic Workers Availability
– Restless-Bandit-Based Prioritization
Amin Karimi
School of Mathematics and Statistics
The University of Melbourne
Melbourne, Australia
Email: karimia@student.unimelb.edu.au
Jing Fu
School of Engineering
Royal Melbourne Institute of Technology
Melbourne, Australia
Email: jing.fu@rmit.edu.au
Lele Zhang
School of Mathematics and Statistics
The University of Melbourne
Melbourne, Australia
Email: lele.zhang@unimelb.edu.au
Hadi Ghaderi
School of Business, Law & Entrepreneurship
Swinburne University of Technology
Melbourne, Australia
Email: hghaderi@swin.edu.au
Abstract—Exponential growth for last mile delivery demand
has created several challenges for retailers and couriers, at the
same time forcing the development of efficient and sustainable
delivery solutions. One of the emerging solutions is crowd-sourced
delivery, also known as crowdshipping. In a crowdshipping
system, the general public participates in parcel delivery (known
as crowdshippers) and then rewarded with remunerations. To
develop sustainable and commercially viable crowdshipping so-
lutions, capable of handling large-scale delivery tasks, effective
assignment of tasks to crowdshippers is critical. Particularly
when both tasks and crowdshippers dynamically arrive and
depart the system, it becomes challenging to complete deliveries,
while maximizing the total profit of the platform. This paper
models the dynamic crowdshipping system using a Markov
decision process and proposes a restless-bandit-based capacity
relaxation technique to facilitate the task-to-crowdshipper as-
signment. Simulation results show that the proposed technique
is superior over two baseline policies with respect to higher
average profits and lower task rejection rates. The learning of
this research provides important directions for the design and
development of crowdshipping systems that are subject to both
crowdshipper and task uncertainty.
Index Terms—stochastic process; restless bandits; crowdsourc-
ing; task assignment; crowdshipping; parcel delivery
I. INTRODUCTION
Fueled by exponential growth in e-commerce, more con-
sumers are opting to purchase goods and services online [1].
This tendency has led to a surge in urban freight activity,
particularly the Last Mile Delivery (LMD) of parcels to
the doorstep of customers [2]. Furthermore, changing con-
sumer expectations for fast, convenient and low-cost delivery
options have forced retailers and logistics organizations to
further expand their service configurations through increased
coverage, frequency and speed, all of which lead to higher
numbers of trips and vehicle activity in highly populated urban
areas
[3]. In tandem with these developments, efforts are
being made to leverage digital technologies that could lead
to efficient logistics operations, while minimizing negative
environmental impacts [4]. One example of such advance-
ments is the widespread use of mobile devices and app-
based solutions that allow logistics works to be outsourced
to individuals, also known as crowd logistics [5]. In the past
decade, crowd logistics has received substantial momentum as
an innovative solution that could potentially address some of
the infrastructure and resource constraints of business logistics
[6] [7]. In this paper, we study a form of crowd logistics
service known as crowdshipping (CS). Despite the absence of
a uniform conceptualization, crowdshipping can be defined as
a decentralized logistics system, in which individuals from
the general public perform parcel delivery for an agreed
compensation amount [8]. Predominantly, in such systems, the
assignment of tasks to individuals, information sharing, and
financial transactions are facilitated by a digital platform [9]
[10].
Crowdshipping is inherently a complex and multifaceted
problem that involves disciplines such as mathematics, com-
puter science and transport engineering [11]. For example,
the many-to-many nature of crowdshipping presents model
complexity when considering the temporal and spatial con-
siderations of delivery tasks and the pool of available crowd-
shippers [12]. Specifically, crowdshippers’ mobility pattern is
subject to constant variations. Second, crowdshipping relies
on a pool of individuals who are connected via mobile de-
vices that produce large mobility data, requiring sophisticated
trajectory tools to understand and predict movement patterns
[13]. Therefore, constant capturing and analyzing mobility
data from a large number of individuals is computationally
difficult. Third, the literature shows that crowdshippers are
noticeably sensitive to their reimbursement
[14] [15]. More
specifically, crowdshipping platforms employ a wide range
of people with varying compensation sensitivity. Therefore, a
successful crowdshipping system should utilize compensation
and pricing strategies that are fair to the crowd, yet, yield profit
for the platform [16]. More specifically, higher compensations
25
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-102-2
SIMUL 2023 : The Fifteenth International Conference on Advances in System Simulation

could attract more crowdshippers, while leaving little revenue
for the platform. On the other hand, low compensation could
discourage participation and eventually lead to lower revenue.
Finally, relevant to the objective of this research, effectively
assigning jobs to crowdshippers remains a key decision-
making process to the long-term sustainability of crowdship-
ping platforms [17]. Optimized assignments could not only
minimize operational costs by identifying the right crowd with
lower compensation amounts, but they also have important
implications for service quality (e.g., reliability, availability
and speed) and customer retention [18]. For example, an
effective task assignment mechanism is capable of identifying
crowdshippers that are more aligned with the delivery task
requirement, temporally and spatially, leading to a quicker and
cost-effective process.
In light of the above considerations, we study a large-
scale crowdshipping assignment problem with a long-run
optimization objective, considering dynamic assignments of
available and eligible crowdshippers to different delivery
requests. In contrast to static optimization approaches that
aim to maximize profit at one point in time, we aim to
maximize average profit over a period of time with dynamic
parameters. Specifically, we take into account the dynamic
registration and de-registration of crowdshippers and the dy-
namic arrivals of delivery requests with various service levels.
Such assumptions substantially complicate the formulation of
the problem and prevent conventional optimization techniques
from being applied here. We formulate the crowdshipping
assignment problem as a stochastic system consisting of
parallel bandit processes. In a special case with a fixed
number of crowdshippers at all the time, the Restless-Bandit-
Based (RBB) resource allocation technique studied in [19]
leads to near-optimal results without consuming excessive
computational power. However, for the general case with a
dynamic crowdshippers pool, extended or new techniques are
required. In this paper, we propose the Restless-Bandit-Based
Capacity Relaxation (RBB-CR) technique to approximate the
marginal profit of assigning an incoming delivery request to
a registered crowdshipper. Then we develop and evaluate an
assignment strategy, referred to as the RBB-CR policy, that
always prioritizes the assignments of crowdshippers with the
highest approximated marginal profits. Extensive numerical
results demonstrate that the RBB-CR always outperforms two
baseline policies with respect to the average revenue, cost,
profit, and customer satisfaction. Such superiority is consistent
for a variety of system sizes and loads. After a brief literature
review in Section II, we explain the crowdshipping assignment
problem and its model in Section III and then discuss strategies
applied in Section IV. We discuss the settings and results of
the numerical study in Section V, which is followed by a brief
conclusion in Section VI.
II. RELATED WORK
While the literature on crowdshipping has grown substan-
tially in recent years, the task assignment remains a topical
area among researchers [20]. Compared to the ride-sharing
task assignment, where the temporal considerations of the trip
are simplified by the traveler’s origin and destination points,
in crowdshipping both sender’s and receiver’s availability are
subject to variations [21]. Similarly, delivery requests could
arrive at an unknown pace, a feature comparable to passenger
travel requests in ride-sharing systems [22]. On the supply
side, many crowdshipping platforms rely on a pool of casual
workers with varying temporal and spatial availability [8]. In
other words, the properties of the crowdshippers pool vary
dynamically in terms of size, temporal and spatial availability,
but also their ability to move goods considering the weight
and size [23].
Various modeling and solution techniques have been ap-
plied to solve the crowdshipping task assignment problems in
mainly three settings, deterministic, dynamic and stochastic
[17]. In the deterministic environment when all information
is deterministic and available in advance, methods such as
mixed-integer programming and benders decomposition are
widely used to find the optimal assignment [24] [17]. Efforts
have been made to study the stochasticity in crowdshippers’
availability or willingness to deliver [25] [26]. For example,
Mousavi et al. [25] developed a two-stage stochastic integer
program and decomposition algorithms to match crowdship-
pers to delivery tasks and demonstrated the superiority of the
stochastic approach over the deterministic. The crowdshipping
system is essentially a dynamic system as delivery requests
and crowdshippers dynamically arrive in and leave the system.
Nevertheless, the literature on the dynamic crowdshipping
problem is limited. Similarly, Ghaderi et al. [24] followed a
mixed-integer programming approach, in which the objective
was to maximize the profit of the platform by minimizing
the reimbursement, while minimizing the trip detour required
by crowdshippers to complete parcel delivery. In this work,
authors relied on normal people accepting to deliver a parcel
as part of their daily travels, therefore, relying on extensive
trajectory analytics to understand mobility patterns for opti-
mized task assignment. Farazi et al. [27] applied heuristics-
embedded Deep Q-Network (DQN) algorithms to assign dy-
namically arriving requests to available crowdshippers. Agent-
based simulations are another useful way to model the crowd-
shipping system as they can easily incorporate the dynamic
arrivals and departures of delivery requests and resources as
well as the intelligent, stochastic decision-making processes of
crowdshippers [28]. Nevertheless, compared to the proposed
approach, agent-based simulations would be limited by their
convergence, scalability, transparency and interpretability.
III. A CROWDSHIPPING ASSIGNMENT PROBLEM
Define N+ and N0 as the sets of positive and non-negative
integers, respectively, and for any N ∈ N+, let [N] represent
the set {1, 2, . . . , N}. Let R, R+ and R0 be the sets of all,
positive and non-negative real numbers, respectively.
Consider L different types of customers that are character-
ized by their origins (i.e., parcel collection points), destinations
(i.e., delivery addresses), parcel sizes (weights and/or vol-
umes), and other specific requirements of the delivery services
26
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-102-2
SIMUL 2023 : The Fifteenth International Conference on Advances in System Simulation

(e.g., delivery urgency – same day, next day, etc.). The cus-
tomers keep generating delivery requests to a crowdshipping
system (platform) with various registered crowdshippers, also
correspondingly classified into L types. Each delivery request
may include multiple parcels. Crowdshippers are divided into
M different classes based on their locations and eligibility of
serving certain requests. For instance, big parcels can only
be carried by crowdshippers equipped with vans or trucks;
urgent parcels prefer nearby crowdshippers; and crowdshippers
in different locations only agree to detour within certain
geographical distances. For ℓ ∈ [L], let Mℓ represent the class
set of crowdshippers that are eligible and willing to deliver
parcels for type-ℓ requests.
When a delivery request arrives, an available crowdshipper
will be selected to deliver the associated parcel(s); if there is
no such crowdshipper, the delivery request will be rejected.
In this research, crowdshippers are not allowed to decline the
offer as long as they are available and eligible for a certain
type of delivery task. While this could present a limitation
for this study, at the same time, it allows for a higher level
of service quality and system profitability. A crowdshipper
may be able to serve more than one delivery request. We
consider a delivery weight, wℓ,m ∈ [0, 1], for a type-ℓ request
matched with a class-m crowdshipper, meaning that the wℓ,m
proportion of the crowdshipper’s carrying capacity, such as
vehicle’s storage space, is used and occupied for the delivery
request. For example, if a crowdshipper in class m is able
to take three delivery requests of type ℓ, then we can set
wℓ,m =
1
3 to formulate this case. In this case, the wℓ,m
proportion of the crowdshipper’s capacity is occupied and
becomes unavailable for future requests until all the asso-
ciated parcels are delivered. Upon successful delivery of a
request, the crowdshipper becomes partially/fully available
again to serve other requests. The crowdshippers dynamically
join and leave the crowdshipping system, resulting in time-
varying numbers of registered crowdshippers in each class.
In other words, crowdshippers declare their availability for
work randomly. Once a crowdshipper has been occupied by
request(s), he or she will not leave the crowdshipping system
until all the requests are fully completed.
Let ¯Cm(t) represent the number of class-m crowdshippers
that are assigned with some delivery requests at time t, and let
¯C(t) := ( ¯Cm(t) : m ∈ [M]). Furthermore, for m ∈ [M], let
Cm(t) represent the total number of registered crowdshippers
of class m in the system at time t ≥ 0, which is affected
by both people’s willingness of becoming crowdshippers (i.e.,
signing up for crowdshipping) and the underlying strategies of
matching them with different delivery requests. Formally, we
define
Cm(t) := Em(t) + ∆m(t),
(1)
where Em(t) is a random variable considered as a hyper-
parameter reflecting people’s willingness of staying in and
joining the crowdshipping system at time t, and ∆m(t) :=
max{0, ¯Cm(t)−Em(t)} is used to ensure that Cm(t) ≥ ¯Cm(t)
all the time. In particular, Em(t) is bounded and takes values
in N+. While some crowdshippers, who are on the way
to deliver parcels, may wish to leave the system, causing
Em(t) < ¯Cm(t) for some t, adding the second item ∆m(t)
in (1) aims to keep Cm(t) = ¯Cm(t) when Em(t) < ¯Cm(t)
so that these crowdshippers are required to finish their jobs
before de-registration. Assume that Cm(t) is observable all
the time and is uniformly bounded for all t ≥ 0. Let
C(t) := (Cm(t) : m ∈ [M]).
As mentioned in Section I, the long-run optimization prob-
lem proposed in this research is essential for operating a
real-world crowdshipping system. Such an assumption signif-
icantly complicates the task assignment module and related
analysis. To model the delivery requests with different types,
we consider mean rates λℓ (ℓ ∈ [L]), each arriving with
pre-determined origin, destination, parcel profiles, and some
delivery preferences. Delivery time for each request is a ran-
dom time that formulates uncertainties along the travel route.
Request arrivals follow a Poisson distribution (see [29]). In
Section V, extensive numerical results will be presented with
time-variant Poisson arrivals that further capture the dynamic
features of the system workloads in both busy and idle hours.
For ℓ ∈ [L] and m ∈ Mℓ, the duration of serving a type-ℓ
request by a crowdshipper in class m is independently and
identically distributed with mean 1/µℓ,m, where µℓ,m ∈ R+.
For m /∈ Mℓ, define µℓ,m ≡ 0.
We make decisions upon the arrival of requests in an online
manner without assuming given requests that will come in the
future. Define Nℓ,m(t) as the number of type-ℓ requests that
are being served by a class-m crowdshipper at time t. Let
N(t) :=

Cm(t) = ¯Cm(t) at time t (i.e., all registered crowdshippers
are occupied by earlier arrived parcels), then (3) enforces
aℓ,m

of the crowdshipping assignment problem
max
ϕ∈˜Φ
lim
T →+∞
1
T E
Z T
0
X
ℓ∈[L]
X
m∈[M]
Rℓ,m

indices η. We refer to such crowdshipping assignment strategy
as the RBB-CR policy.
At time t ≥ 0, we observe the variables N RBB-CR(t) and
CRBB-CR(t) and determine the action variables
aaaRBB-CR
cost for a crowdshipper of class m to deliver an ℓ-parcel is
equal to the cost rate cℓ,m multiplying the delivery time Dℓ
vm .
For ℓ-requests, the eligibility of crowdshippers is based on
• the distance between the origin location of the parcel and
the geographical center of the crowdshippers; and
• the relationship between the delivery type and the work-
ing modes of the crowdshippers.
In particular, urgent delivery requests can only be served
by crowdshippers with vehicles while regular requests can
be served by crowdshippers in either working mode. The
exact settings of the eligibility between different requests and
crowdshippers, specified as Mℓ (ℓ ∈ [L]), are provided in
Appendix A, together with the instance values of all the above
mentioned random variables for the simulations. The model
was coded using the C++ language and implemented on the
high performance computing platform, Spartan [30], offered
by The University of Melbourne.
B. Performance Evaluation
We demonstrate the effectiveness of the RBB-CR policy
by comparing it to two baselines policies: Highest-Price (HP)
and Shortest-Distance (SD). The HP and SD policies are
greedy policies that always prioritize RCS pairs (ℓ, m) with
the highest monetary incomes pℓ and the shortest travel
distances, respectively. The travel distance for an RCS pair
(ℓ, m) is defined as the sum of the expected delivery distance
and the distance between the geographical center (xm, ym)
of the crowdshipper class and the mean origin (¯xℓ, ¯yℓ) of
the ℓ-requests. Tie cases are broken by selecting smaller
N ϕ
ℓ,m(t) for ϕ =HP and SD. The HP and SD policies are
constructed through the same steps as RBB-CR (with pseudo-
code provided in Fig. 1) except that the RCS pairs (ℓ, m)
should be ranked according to the descending order of the
monetary incomes pℓ and the ascending order of the travel
distances, respectively.
In Fig. 2, we demonstrate the effectiveness of the three
policies, with respect to the average revenue, average cost,
average profit, and rejection rate, against the time horizon,
when ρ = 5. More precisely, the average revenue and average
cost of a policy ϕ ∈ Φ with time horizon T ∈ R+ are
Rϕ
T := 1
T E
Z T
0
X
ℓ∈[L]
X
m∈[M]
pℓµℓ,mN ϕ
ℓ,m(t)dt,
(16)
and
Cϕ
T := 1
T E
Z T
0
X
ℓ∈[L]
X
m∈[M]
cℓ,mN ϕ
ℓ,m(t)dt,
(17)
respectively. The revenue Rϕ
T is the amount of money that
the crowdshipping platform receives from the senders for
successfully delivering parcels, while the cost is what the
platform pays the crowdshippers for performing deliveries
until time T. The average profit Pϕ
T is defined as the difference
Rϕ
T − Cϕ
T . The rejection rate Jϕ
T is the ratio of the number of
rejected requests to the total under the policy ϕ during the time
period [0, T]. It is an indicator of customer dissatisfaction; a
higher rejection rate implies more rejected requests and lower
customer satisfaction. The objective function in (4) is equal to
limT →+∞ Pϕ
T .
In Fig. 2, RBB-CR always outperforms all the other policies,
and the performance quickly becomes stable as T increases;
that is, PRBB-CR
T
is already close to its long-run average profit
for relatively small T. RBB-CR achieves significantly better
performance with respect to the four criteria. In particular,
it achieves over 25% higher average profits compared to the
other policies, implying its effectiveness with respect to the
crowdshipping assignment problem described in (4), (2) and
(3).
(a) Average revenue
(b) Average cost
(c) Average profit
(d) Average rejection rate
Fig. 2: Performance measures under different policies against
time horizon, where the error bars are the standard deviations.
C. Performance Evaluation in Scaled Systems
Consider a scaling parameter h ∈ N+. For class m ∈ [M],
re-consider the number of crowdshippers willing to stay at
time t and the arrival rates as Em(t) = h ¯E0
m + ∆m(t)
and λm = hλ0
m, respectively, where ¯E0
m, λ0
m ∈ R+ are
given parameters set equal to ¯Em and λm for the simulations
discussed in Section V-B. All the other system parameters
remain unchanged as those for Section V-B. In this context,
we can scale the size of the crowdshipping system with
compatibly many delivery requests through h. We refer to such
a crowdshipping system scaled with parameter h as the scaled
system, and the system discussed in Section V-B is a special
case with h = 1.
In Fig. 3, we compare the long-run average profits normal-
ized by the scaling parameter h (that is, limT →+∞ Pϕ
T /h)
under the three policies ϕ =RBB-CR, HP, and SD for ρ = 5
and 8, respectively. Similarly, in Fig. 4, we present the long-
run average rejection rates of all the policies for both offered
traffic intensities. From the definition, higher ρ implies longer
delivery distances for the parcels and a heavier workload for
31
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-102-2
SIMUL 2023 : The Fifteenth International Conference on Advances in System Simulation

(a)
(b)
Fig. 3: Normalized profits under different policies against the
scaling parameter: (a) ρ = 5; and (b) ρ = 8.
(a)
(b)
Fig. 4: Rejection rates under different policies against the
scaling parameter: (a) ρ = 5; and (b) ρ = 8.
the crowdshipping system. The higher delivery distances lead
to higher costs and lower profits, and the heavier workload
means higher probabilities of rejecting arriving requests, which
is consistent with the observations in Figures 3 and 4.
In Figs. 3(b) and 4(b), the normalized average profit and
the rejection rate of RBB-CR becomes relatively stable as
the scaling parameter h increases. In particular, the rejection
rate significantly decreases as h increments from 1 to 10 and
maintains almost no change when h ≥ 10. The normalized
profit of RBB-CR in Figs. 3(b) varies similarly with increasing
h. It implies that the underlying stochastic system N RBB-CR(t)
has already reached the neighborhood of a stable point–it
has already been close to its asymptotic behavior–when h is
relatively small. In Figs. 3 and 4, RBB-CR maintains its clear
advantages against all the tested baseline policies with respect
to both the long-run average profit and the rejection rate.
VI. CONCLUSIONS
Effective task assignment is essential for the long-term sus-
tainability of crowdshipping systems. While the extant body of
the literature demonstrates several works aiming to maximize
the profit of crowdshipping systems [24] [31] [32], they are
mainly focused on a point in time. In other words, real-time
assignment for profit maximization remains an area for further
research. In this paper, we proposed a restless-bandit-based
capacity relaxation technique to approximate the marginal
profit of the crowdshipping system. We further developed a
task assignment strategy, referred to as the RBB-CR policy,
that prioritizes the assignment of work to crowdshippers that
yield to highest approximated marginal profits. This technique
allows for maximizing profits of large-scale crowdshipping
problems in real time. Furthermore, we note that most crowd-
shipping systems consider a single type of delivery. The
model proposed in this work accommodates multiple types
of deliveries, which brings additional complexity to the model
and computation.
To evaluate the performance of the proposed RBB-CR ap-
proach, we tested performance indicators of average revenue,
cost, profit, and rejection rate, against two baseline greedy
policies that prioritize the highest reimbursement and shortest
travel distance. Our experimental results demonstrate that the
RBB-CR policy outperforms two baseline policies, Highest
Price and Shortest Distance, in some cases resulting in 25%
higher average profit for the crowdshipping platform. In large-
scale testing, similarly, the RBB-CR policy outperforms other
baseline policies in terms of long-run average profit and the
rejection rate. This performance is attributed to the unique
mechanism of RBB-CR to approximate the marginal profit of
assigning incoming delivery tasks to available crowdshippers.
Our work also comes with limitations that provide directions
for future research. In this research, once the platform assigns
a task to crowdshippers, they are not allowed to decline it.
Such a feature is not commonly practized in modern crowd
logistics systems. This limitation could significantly hinder
the willingness of crowdshippers to participate in the system.
Therefore, we suggest future research to incorporate task
rejection into the model and policy design and further exam-
ine how such features could impact profitability and service
quality. This consideration could also examine whether higher
compensation rates could offset the non-rejection restriction.
APPENDIX A
SIMULATION PARAMETERS
For the simulations presented in this paper, as described in
Section V-A, we take instances of the random variables for
the system parameters. In particular,
• v1 = 1, (x1, y1) = (27.00, 47.67), ¯E1 = 5.48, and ¯c1 =
0.47;
• v2 = 2.5, (x2, y2) = (12.97, 38.87), ¯E2 = 5.83, and
¯c2 = 8.82;
• v3 = 2.5, (x3, y3) = (30.17, 41.09), ¯E3 = 9.64, and
¯c3 = 8.82;
• v4 = 1, (x4, y4) = (46.79, 34.25), ¯E4 = 9.25, and ¯c4 =
0.47;
• v5 = 1, (x5, y5) = (16.93, 19.47), ¯E5 = 7.13, and ¯c5 =
0.47;
• v6 = 2.5, (x6, y6) = (7.38, 42.54), ¯E6 = 8.23, and ¯c6 =
8.82;
• v7 = 2.5, (x7, y7) = (9.78, 30.39), ¯E7 = 9.53, and ¯c7 =
8.82;
• v8 = 1, (x8, y8) = (42.71, 1.42), ¯E8 = 5.15, and ¯c8 =
0.47;
• v9 = 1, (x9, y9) = (9.41, 17.13), ¯E9 = 9.33, and ¯c9 =
0.47;
32
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-102-2
SIMUL 2023 : The Fifteenth International Conference on Advances in System Simulation

• and v10 = 2.5, (x10, y10) = (24.92, 31.34), ¯E10 = 9.63,
and ¯c10 = 8.82.
The urgent delivery request (type-1 requests) have λ1 = 1.49,
p1 = 276.34, w1,m = 4.25 for all m ∈ M1, (¯x1, ¯y1) =
(7.38, 42.54), and M1 = {2, 3, 6, 7, 10}; and, for the regular
requests (type-2 requests), we set λ2 = 1.17, p2 = 101.36,
w2,m = 1.56 for all m ∈ M2, (¯x1, ¯y1) = (30.17, 41.09),
and M2 = {1, 2, 3, 4, 6, 7, 10}. Recall that, as described in
Section V-A, all the above listed numbers are instances of
pseudo-random numbers.
REFERENCES
[1] A. Risberg. and H. Jafari, “Last mile practices in e-commerce: frame-
work development and empirical analysis of swedish firms,” Interna-
tional Journal of Retail & Distribution Managemen, vol. 50, no. 8/9,
pp. 942–961, 2022.
[2] A. Pahwa and M. Jaller, “Assessing last-mile distribution resilience
under demand disruptions,” Transportation Research Part E: Logistics
& Transportation Review, vol. 172, p. 103066, 2023.
[3] S. Pan, L. Zhang, R. G. Thompson, and H. Ghaderi, “parcel network flow
approach for joint delivery networks using parcel lockers,” International
Journal of Production Research, vol. 59, no. 7, pp. 2090–2115, 2021.
[4] S. Wicaksono, X. Lin, and L. Tavasszy, “Market potential of bicycle
crowdshipping: A two-sided acceptance analysis,” Research in Trans-
portation Business & Management, vol. 45, no. Part A, p. 100660, 2022.
[5] H. Buldeo Rai, S. Verlinde, J. Merckx, and C. Macharis, “Crowd
logistics: an opportunity for more sustainable urban freight transport?”
European Transport Research Review, vol. 9, no. 3, pp. 1–13, 2017.
[6] A. Alnaggar, F. Gzara, and J. Bookbinder, “Crowdsourced delivery: A
review of platforms and academic literature,” Omega, vol. 98, p. 102139,
2021.
[7] A. Fessler, M. Thorhauge, S. Mabit, and S. Haustein, “. a public
transport-based crowdshipping concept as a sustainable last-mile so-
lution: Assessing user preferences with a stated choice experiment,”
Transportation Research Part A: Policy and Practice, vol. 158, pp. 210–
223, 2020.
[8] H. Ghaderi, L. Zhang, P. Tsai, and J. Woo, “Crowdsourced last-
mile delivery with parcel lockers,” International Journal of Production
Economics, vol. 251, p. 108549, 2022.
[9] A. Punel and A. Stathopoulos, “Modeling the acceptability of crowd-
sourced goods deliveries: Role of context and experience effects,”
Transportation Research Part E: Logistics and Transportation Review,
vol. 105, pp. 518–38, 2017.
[10] V. Castillo, D. Mollenkopf, J. Bell, and T. Esper, “Designing technology
for on-demand delivery: The effect of customer tipping on crowdsourced
driver behavior and last mile performance,” Journal of Operations
Management, vol. 68, pp. 424–453, 2022.
[11] S. S. Mohri, H. Ghaderi, N. Nassir, and R. Thompson, “Crowdshipping
for sustainable urban logistics: A systematic review of the literature,”
Transportation Research Part E: Logistics and Transportation Review,
p. 178, 2023.
[12] M. Behrend, F. Meisel, K. Fagerholt, and H. Andersson, “A multi-period
analysis of the integrated item-sharing and crowdshipping problem,”
European Journal of Operational Research, vol. 292, no. 2, pp. 483–499,
2021.
[13] H. Shen and J. Lin, “Investigation of crowdshipping delivery trip pro-
duction with real-world data,” Transportation Research Part E: Logistics
and Transportation Review, vol. 143, p. 102106, 2020.
[14] L. Kung and G. Zhong, “The optimal pricing strategy for two-sided
platform delivery in the sharing economy,” Transportation Research Part
E: Logistics and Transportation Review, vol. 101, pp. 1–12, 2017.
[15] T. Le, S. Ukkusuri, J. Xue, and T. Van Woensel, “Designing pricing
and compensation schemes by integrating matching and routing models
for crowd-shipping systems,” Transportation Research Part E: Logistics
and Transportation Review, vol. 149, p. 102209, 2017.
[16] A. Ermagun and A. Stathopoulos, “To bid or not to bid: An empirical
study of the supply determinants of crowd-shipping,” Transportation
Research Part A: Policy and Practice, vol. 116, pp. 468–483, 2018.
[17] N. Boysen, S. Emde, and S. Schwerdfeger, “Crowdshipping by em-
ployees of distribution centers: Optimization approaches for matching
supply and demand,” European Journal of Operational Research, vol.
296, no. 2, pp. 539–556, 2022.
[18] Y. Lan, F. Liu, W. Ng, M. Gui, and C. Lai, “Multi-objective two-echelon
city dispatching problem with mobile satellites and crowd-shipping,”
IEEE Transactions on Intelligent Transportation Systems, vol. 23, no. 9,
pp. 15 340–15 353, 2022.
[19] J. Fu, B. Moran, and P. G. Taylor, “A restless bandit model for resource
allocation, competition and reservation,” Operations Research, vol. 70,
no. 1, pp. 416–431, 2022.
[20] M. Simoni and M. Winkenbach, “Crowdsourced on-demand food de-
livery: An order batching and assignment algorithm,” Transportation
Research Part C: Emerging Technologies, vol. 149, p. 104055, 2023.
[21] H. Akeb, B. Moncef, and B. Durand, “Building a collaborative solution
in dense urban city settings to enhance parcel delivery: An effective
crowd model in paris,” Transportation Research Part E: Logistics and
Transportation Review, vol. 119, pp. 223–233, 2018.
[22] J. Fu, L. Zhang, K. Huang, and Z. Liu, “A large-scale multi-rider match-
ing problem with reneging passengers: Single source case,” in the 24th
International Congress on Modelling and Simulation (MODSIM2021),
Sydney, Australia, Dec. 2021, pp. 792–798.
[23] F. Torres, M. Gendreau, and W. Rei, “Vehicle routing with stochastic
supply of crowd vehicles and time windows,” Transportation Science,
vol. 56, no. 3, pp. 631–653, 2022.
[24] H. Ghaderi, P. Tsai, L. Zhang, and A. Moayedikia, “An integrated
crowdshipping framework for green last mile delivery,” Sustainable
Cities and Society, vol. 78, p. 103552, 2022.
[25] K. Mousavi, M. Bodur, and M. J. Roorda, “Stochastic last-mile deliv-
ery with crowd-shipping and mobile depots,” Transportation Science,
vol. 56, no. 3, pp. 612–630, 2022.
[26] K. Gdowska, A. Viana, and J. P. Pedroso, “Stochastic last-mile delivery
with crowdshipping,” Transportation research procedia, vol. 30, pp. 90–
100, 2018.
[27] N. P. Farazi, B. Zou, and T. Tulabandhula, “Dynamic on-demand
crowdshipping using constrained and heuristics-embedded double du-
eling deep q-network,” Transportation Research Part E: Logistics and
Transportation Review, vol. 166, p. 102890, 2022.
[28] J. D¨otterl, R. Bruns, J. Dunkel, and S. Ossowski, “Evaluating crowd-
shipping systems with agent-based simulation,” in Multi-Agent Systems
and Agreement Technologies, N. Bassiliades, G. Chalkiadakis, and
D. de Jonge, Eds.
Cham: Springer International Publishing, 2020, pp.
396–411.
[29] G. Lee, W. Saad, and M. Bennis, “An online secretary framework for fog
network formation with minimal latency,” in 2017 IEEE International
Conference on Communications (ICC), May 2017, pp. 1–6.
[30] The University of Melbourne, “Spartan,” May 2023. [Online]. Available:
https://dashboard.hpc.unimelb.edu.au/
[31] L. Dahle, H. Andersson, M. Christiansen, and M. Speranza, “The
pickup and delivery problem with time windows and occasional drivers,”
Computers and Operations Research, vol. 109, pp. 122–133, 2019.
[32] C. Triki, “Using combinatorial auctions for the procurement of occa-
sional drivers in the freight transportation: A case-study,” Journal of
Cleaner Production, vol. 304, p. 127057, 2021.
33
Copyright (c) IARIA, 2023.     ISBN:  978-1-68558-102-2
SIMUL 2023 : The Fifteenth International Conference on Advances in System Simulation

