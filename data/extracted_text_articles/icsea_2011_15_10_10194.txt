E-FOTO: Development of an Open-Source Educational Digital Photogrammetric 
Workstation
   
 
Jorge Luís Nunes e Silva Brito, Rafael Alves de Aguiar, Marcelo Teixeira Silveira, Luiz Carlos Teixeira Coelho 
Filho, Irving da Silva Badolato, Paulo André Batista Pupim, Patrícia Farias Reolon, João Araújo Ribeiro, Jonas 
Ribeiro da Silva, Orlando Bernardo Filho, Guilherme Lucio Abelha Mota 
School of Engineering 
Rio de Janeiro State University 
Rio de Janeiro, Brazil 
jsilvabr@gmail.com, rafael.kamui@gmail.com, marts@ele.puc-rio.br, luizcoelho@luizcoelho.com, 
irvingbadolato@gmail.com, pandreengineer@gmail.com, patricia.reolon@gmail.com, joao.araujo@gmail.com, 
jonas.xiko.ribeiro@gmail.com, orlandobernardof@yahoo.com.br, guimota@gmail.com 
 
 
Abstract—The 
E-FOTO 
project 
aims 
to 
develop 
an 
educational, digital photogrammetric workstation, under the 
General Public License (GNU/GPL). E-FOTO software does 
not intend to overcome commercial software solutions in its 
field. Its main purpose is to provide a software solution that 
could be used by anyone who is interested in learning digital 
photogrammetry. E-FOTO users are offered access to practical 
software applications of theoretical issues and concepts in the  
field of Digital Photogrammetry. The project also has an 
Internet home page from which aerial photographs, camera 
calibration certificates and other technical data can be 
downloaded, thus allowing users to fully experience the 
software. The webpage also provides access to different articles 
and publications derived from the project development. This 
paper will report the experiences and results of the 
development of E-FOTO, which is, to the best of our 
knowledge, 
the 
only 
academic, 
GNU/GPL 
software 
development initiative for Digital Photogrammetry in the 
world. 
Keywords-Digital Photogrammetry; Digital Photogrammetric 
Workstation; Education in Photogrammetry; Open-source code 
for geospatial applications; Extreme Programming; Agile 
Methods. 
I. 
 INTRODUCTION 
Photogrammetry is the science that studies methods for 
reconstructing  3D objects, e.g., Earth's surface, from a set of 
2D stereoscopic images. Remote Sensing techniques are 
typically used for the acquisition of photogrammetric 
imagery. Currently, it is possible to find a reasonable number 
of imaging satellites orbiting around the Earth. These devices 
have achieved spatial resolutions as low as 0.50m per pixel.  
Airborne remote sensors which use optical devices coupled 
with Global Navigation Satellite Systems (GNSS) receivers 
and Inertial Measurement Units (IMU) also play a very 
important role in topographic mapping activities. Those 
activities include the production of digital surface models 
(DSM), the production of ortho-images, and the generation 
of 3D spatial databases. These products are typically named 
“cartographic products”. 
A digital photogrammetric workstation is a set of 
hardware and software that is able to generate cartographic 
products. Hardware components include a digital computer 
and other devices such as topomouses, digitizing tablets and 
stereoscopic glasses. Some examples of computer software 
developed for a digital photogrammetric workstation are 
photogrammetric algorithms for automatic DSM extraction 
and digital ortho-image rectification. 
The cost of a digital photogrammetric workstation ranges 
from US$ 25,000.00 for educational versions up to US$ 
100,000.00 for professional solutions. These prices are too 
expensive for educational institutions in developing 
countries.  
As a response to such high prices, Coelho Filho [1], 
proposed the development of a digital photogrammetric 
softcopy kit for educational purposes. His solution was 
designed and implemented under the General Public License 
(GNU/GPL) of the Free-Software Foundation.  The kit was 
named “E-FOTO”, which stands for “Educational Digital 
Photogrammetric Workstation” in Portuguese. 
There were many free software solutions for geospatial 
applications. 
One 
could 
mention 
POSTGRES,  
MAPSERVER, GvSIG and GRASS GIS, among others. 
However a digital photogrammetric workstation with a free 
GNU/GPL license did not exist yet.  In addition to providing 
users free access to photogrammetric software, a free 
softcopy kit would allow developers to examine and improve 
its source code and produce derived projects. Consequently, 
users would be able to understand photogrammetric 
algorithms and techniques, while also using their code for 
various purposes. 
It is worth mentioning that the E-FOTO Project was not 
designed for competition with its commercial counterparts. 
E-FOTO's main objective is to provide access to Digital 
Photogrammetry to anyone who is interested in learning 
about that subject. As a result, E-FOTO users will better 
understand and practice the theoretical concepts taught in 
formal classrooms. 
A paperback book on Digital Photogrammetry [2] was 
published parallel to E-FOTO's project development. This 
book, which is available only in Portuguese, covers most 
theoretical concepts used for the development of the E-
FOTO software. It is currently in its first edition, published 
356
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

in 2007, even though a provisional e-book version of it had 
been available since 2002, when the project started. 
The development of Photogrammetric software is a 
complex task. In fact, it involves a multidisciplinary team of 
professionals with different backgrounds and skills, mostly 
dealing with Geomatics and Computer Science. In 2004, the 
project was granted sponsorship by the National Council for 
Scientific and Technological Development of Brazil (in 
Portuguese, CNPq), which allowed it to be reallocated to the 
School of Engineering of The Rio de Janeiro State 
University. With proper funding, its software development 
was carried out in a more consistent way. It was supported 
by both Masters Dissertations and Undergraduate Final 
projects. In 2008, after having completed all of its modules, 
the E-FOTO development team  started their integration. 
Finally, in November 2010, the first fully integrated version 
of E-FOTO was published on the project's website 
(www.efoto.eng.uerj.br). 
This article is organized according to the following 
structure: Section II presents experiences of the E-FOTO 
team during the development of the aforementioned 
software; Section III reports the project's benefits; Section IV 
envisions future work to be done and Section V concludes 
this paper. 
II. 
THE E-FOTO DEVELOPMENT EXPERIENCE 
E-FOTO's team has dealt with many issues which arose 
from the development of such a complex system. This 
section reports E-FOTO's development approaches and 
experiences.  
A. Academic Work and the development of E-FOTO's 
Photogrammetric Modules 
E-FOTO was originally designed in 2002 as a system 
composed of eight modules: (a) image rectification, (b) 
interior orientation, (c) exterior orientation, (d) bundle block 
adjustment, (e) image normalization, (f) photogrammetric 
stereoplotting, (g)  extraction of digital elevation models and 
(h) ortho-rectification. 
In accordance with free software principles, a free digital 
photogrammetric workstation should not contain any part of 
its code based upon proprietary solutions. Thus, it was 
decided that the project would be developed using free 
environments such as GCC/G++ (C++) and the Qt graphic 
user interface for easy multiplatform porting. At first, an 
interior orientation module was implemented as a proof of 
concept in 2002. 
After E-FOTO was granted sponsorship in 2004, an 
official schedule was proposed, which aimed to complete the 
proposed modules in two years, with the possibility of a one 
year extension. Development effectively began at its new 
venue, The Rio de Janeiro State University. 
Initially, photogrammetric modules were developed as 
part of undergraduate and graduate students' academic work, 
often counting on proprietary software, such as Mathcad and 
Matlab. This step allowed the team to test if algorithms were 
fully functional and correctly produced desired results. The  
digital image rectification [3][15][20], exterior orientation 
[4][22] and bundle block modules [5][22] were developed in 
the Mathcad environment. An image ortho-rectification 
module [8][22] was developed with Matlab.  
Some other modules were implemented from the 
beginning in C++. For example, a digital airborne imagery 
stereo-visualization and measurement module [7][14][24] 
was developed and used for stereoplotting and digital 
elevation model extraction. An image normalization module 
[6][20] 
was 
also 
developed. 
Figure 
1 
shows 
photogrammetric stereoplotting using E-FOTO. 
 
 
Figure 1. The photogrametric stereoplotting module. 
Modules initially developed with mathematical software 
were gradually reprogrammed by team members. The first 
rewritten module was the image rectification module. Next, 
the stereoplotting module was integrated with an ortho-
rectification solution. With the release of these first modules, 
it was possible to assign students to test the software and 
write down their impressions about its ease of use. This 
helped find bugs and adapt E-FOTO's interface so it would 
be more user-friendly. New modules were built based on 
these impressions. So, programs for exterior orientation,  
bundle block adjustment and normalization were developed 
according to this new philosophy and look and feel while 
earlier models were adapted to conform to an easier graphic 
interface. Figure 2 shows the exterior orientation module 
after the proposed modifications. 
In early 2007, the deadline for the creation of the 
modules was successfully met by the team. However, their 
integration was not yet desirable. Thus, the need for 
integration among these modules using techniques of 
systems analysis became evident. Additionally, another 
problem arose: in early 2006, Trolltech (Qt's former 
developer) migrated it from version 3 to version 4. The latter 
introduced several changes which turned it incompatible 
with earlier Qt versions. The project's development team 
decided that porting all modules from Qt3 to Qt4 would be 
counterproductive at that moment. So, it was decided that all 
modules would continue to be implemented in Qt3, and then 
ported as a whole to Qt4. 
 
 
357
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

 
Figure 2. The exterior orientation module. 
B. Migration from Qt3 to Qt4 
After Trolltech stopped providing support for its Qt3 
framework, in July 2007, E-FOTO developers were forced to 
start porting its code to Qt4, to continue benefiting from 
future Qt updates. Initially, it was expected that the 
conversion could be done without major problems, by using 
automated migration tools provided by Trolltech. However, 
due to certain incompatibilities between the two versions, 
this migration has been very difficult. The main problems 
experienced throughout the porting process were related to 
interface and graphic content conversions, since the main 
resources used for these developments in the previous 
version, such as bit block transfer (bit-blt), were 
discontinued. Thus, modules that used these resources, such 
as the photogrammetric stereoplotting module, had to be 
more intensely reworked. As a consequence of this migration 
process, interfaces for currently finished modules had their 
appearance and functionality slightly changed. Drastic 
changes were minimized in order to reduce their impact to 
the end user [12]. 
  One of the most unexpected changes the Qt4 graphics 
engine brought was the adoption of the Scalable Vector 
Graphics (SVG) format as the basis for its main graphic 
elements display system. Even though this format has been 
widely used in the development of graphics applications, 
especially as the basis of the widely-used Flash format,  it 
has a notable disadvantage: it needs some support from the 
operating system to deliver expected results. This does not 
pose a problem when using a Windows OS, but when a 
Linux distribution is used, serious performance issues can be 
experienced, especially when working with images displayed 
outside of their standard resolution, i.e. with a different scale 
factor than 1:1.   
Since one of the main goals of the E-FOTO project is to 
provide an easily portable software, both in terms of 
operating system and hardware resources, the development 
team sought alternatives to Qt4's native graphics display 
system. OpenGL was finally picked as the ultimate solution, 
both because of its performance, since it was created 
specifically for the direct use of the resources present in 
commercially available graphics cards, and because of its 
easy integration with most frameworks for developing 
graphical user interfaces (GUIs). Qt provides support for 
displaying processed graphics through the OpenGL standard, 
so the team chose to keep it for other graphical elements 
(windows, menus, buttons, etc.), thus avoiding the extra 
effort of adapting the code to redraw those elements. Also, it 
helped keep the look and feel of the programs similar to their 
earlier versions [13]. 
E-FOTO's 1.0 version already had a couple models fully  
converted to Qt4: interior and exterior orientation modules. 
Those two were picked not only because they are central to 
implementing the first stages of the photogrammetric 
process, but also because they were the ones in which users 
were not commonly able to work with their own set of data, 
being limited to examples already provided by the software. 
The remnant modules are currently being ported from Qt3 to 
Qt4. Figure 3 shows the results of the interior orientation 
module migration from the Qt3 to Qt4. 
 
 
Figure 3. Interior orientation module after having been  ported to Qt4. 
C. The Integration of  E-FOTO Modules 
An important characteristic of the photogrammetric 
process is its division into smaller, sequential steps. This 
makes software organization in modules fairly intuitive. 
Therefore, the implementation of initial versions of E-FOTO 
followed that modular architecture. But, in these versions, 
the sequential characteristic of the process was overlooked, 
and so each module was developed independently of the 
others, without any concern about data exchange among 
them. Since it was known that the software would get a 
major overhaul due to the porting from Qt3 to Qt4, the 
development team took this opportunity to restructure the 
entire system architecture, and to offer a solution according 
to which all modules would be able to communicate through 
a common language. 
This common language was implemented through a 
specification of the XML (eXtensible Markup Language) 
358
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

standard created by the project's development team, called E-
FOTO Photogrammetric Project, and given the ".epp" file 
extension [9][10][23]. The choice for this implementation 
was based upon the extensibility offered by the language and 
the possibility to view and audit the project without the need 
to develop complex solutions, since most Internet browsers 
can understand XML files. To interpret these files, the 
development team implemented a solution based on  the 
DOM (Document Object Model) approach, and incorporated 
it in all re-factored modules so that they are able to obtain the 
information required for their part of the process from a 
common data source [12][19].   
Concerning the general structure of the software, the 
whole process required one change in relation to the older 
versions: the addition of another module to the system. Until 
then, the software contemplated all the stages of the 
mathematical process, but lacked a module to represent the 
stage of structuring the photogrammetric project. To solve 
this problem, a photogrammetric project management 
module was created, with a set of registration forms [11] and 
the duties of giving the user an overview of the current state 
of software and allowing the selection of the next step to be 
executed. Figure 4 shows the main window of the photo-
grammetric project management module. 
 
 
Figure 4. The E-FOTO project management module. 
To finish the basic architecture of the system, a "central" 
manager to the whole system was developed, responsible for 
memory management and the main control flow. The 
existence of this manager is what actually characterizes the 
software's integration, since it is this manager which ensures 
that the various modules are accessing the same data set, thus 
keeping the integrity of the project throughout the execution 
of the software. 
III. 
LESSONS LEARNED 
Due to some of E-FOTO's characteristics, such as the 
constant presence of a client-like figure in the development 
team (in this case, the project's lead manager) and the 
experimental research scenario in which it is included, the 
developers decided to try out a different approach to the 
development process during this new phase of the project's 
development cycle. After some research, it seemed 
reasonable to adopt a development process based on the agile 
methods [17], since their foundations apparently fit very well 
into the project's context. Out of all the agile methods, the 
developers chose to adopt the basis of agile modeling [18] 
and eXtreme Programming [19], mainly due to the fact that 
some of the developers already had some experience with 
them. 
At first, everything seemed to run smoothly as expected. 
However, as time passed, the project's own development 
environment proved itself a big problem to be solved. Since 
E-FOTO is developed inside a University, with many of its 
working hands being teachers and students, it became 
increasingly harder to keep up with XP's so-called "good 
practices". Everyone had their own schedules, making 
whole-team meetings very hard; this affected the whole 
communication effectiveness very badly, since more 
meetings were needed, costing much more of the developer's 
time, and not everyone was always to pairing with the latest 
decisions. This even managed to get worse during exam 
periods - the teachers needed to design and grade exams, and 
the students needed to study, effectively slowing down the 
development to almost a halt. After these periods, the 
production rate slowly started to rise again, eventually 
reaching the ideal point, just to be ruined again by another 
battery of exams. This cycle went on until the first concrete 
results were achieved - much later than the developers 
thought they would. 
As such, one of the project's greatest lessons learned in 
the last few years is that developing software in an academic 
context is very different from the scenario usually found 
outside the university walls. Sure, enterprise workers also 
have other things to do, and some of them could even be 
students or teachers. However, inside the academy these 
problems present themselves in much higher levels, possibly 
reaching the point where some of today's more well-known 
development processes lose much of their effectiveness. The 
project's development team still tries to apply some of the 
Agile concepts into their everyday work, but is still trying to 
find the point where the academic context will present itself 
not as a problem, but as one of E-FOTO's major advantages 
in its development process. 
Another big lesson that the project's development team 
learned came from the troubles experienced in the migration 
from Qt3 to Qt4. As a defensive move to avoid having 
similar problems in the future, the project received a major 
architectural overhaul: not only was it to be developed 
according to the photogrammetric process' modularity, but 
also following some architecture that could minimize the 
effects that another framework change could have. The 
solution found was to follow a scheme based on MVC 
(Model-View-Controller), where the whole Model and 
Controller layer were to be developed without the aid of any 
external libraries/frameworks, isolating these on the View 
layer. Even then, the communication between the Controller 
and View layers should be done according to a pure-C++ 
359
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

interface, so that any "low-level-code" changes in the View 
implementation would not affect the other layers at all. 
So far, this architecture has proven itself very successful 
at its job, allowing the developers to meddle with many of 
the software's "high-level" aspects while keeping the core 
business intact, such as the addition of different image 
visualization components. As a bonus, the development of 
new modules has proven to be very simple, since the 
modules are now connected to the same model, with the 
addition of a new controller and user interface to interact 
with it. Therefore, it can be said that this MVC-based 
structure is the greatest reason for the success of E-FOTO's 
integration process. 
IV. 
BENEFITS OF THE PROJECT 
E-FOTO 
has 
been 
tested 
mainly 
in 
Digital 
Photogrammetry classes, both in the Masters program in 
Geomatics, 
and 
in 
the 
undergraduate 
program 
of 
Cartographic Engineering at the Rio de Janeiro State 
University. It has also been used in many academic 
institutions over the world. Anyone can access the E-FOTO 
software by downloading its versions from the E-FOTO´s 
home page on the Internet [16]. The software runs in both 
Windows 
and 
Linux 
environments. 
The 
following 
photogrammetric data and training material is also available 
in the E-FOTO´s home page: (a) a set of three digitized-
frame, 9”x9” aerial images; (b) a pdf file containing a 
photogrammetric camera calibration certificate; (c) a set of 
twelve ground control point coordinates for photogrammetric 
processing; (d) a set of seven tutorials about the 
functionalities of the E-FOTO solutions, and (e) the 
academic works and the publications generated as a 
consequence of the E-FOTO development. Another point 
that is worth mentioning is the statistics about the visits to 
the E-FOTO´s home page: those statistics show the daily and 
monthly accesses to the E-FOTO´s Home page. It also has 
the tracking of the geographical source of the accesses. 
Figure 5 shows examples of such statistics. 
 
 
Figure 5. E-FOTO home page accesses statistics. Source: ShinyStat. 
The graphic at the top of Figure 5 shows the visits to the 
E-FOTO home page in May 2011, with an average of 30 
visits.  The pie chart on the bottom of Figure 5 depicts the 
percentage of  visits to the E-FOTO home page by country in 
the same period.  
V. 
FUTURE PLANS 
E-FOTO's educational software is being currently used in 
many different countries, which brings to the development 
team great responsibility. There is still much work to be 
done. In fact the team is currently preparing a new integrated 
version of the software with many improvements. These 
improvements deal with the correction of systematic effects 
from earth curvature, lens distortions, and atmospheric 
refraction. Another improvement is the extension of the E-
FOTO´s source code for dealing with optical satellite 
imagery, through the use of the Rational Polynomial 
Functions model.  The development of the bundle adjustment 
phototriangulation algorithm is undergoing. Stereoscopic 
visualization capabilities with either passive or active shutter 
glasses is another topic of research. The E-FOTO team is 
also translating the tutorials about the use of the integrated 
version of the software into English and Spanish. 
VI. 
CONCLUSIONS 
Digital Photogrammetry has manifold applications of 
potential interest for users of geographical information. In 
developing countries, such as Brazil, there is a great need of 
proper formation of new professionals who will work in this 
field. The  motivation and goal of the E-FOTO project is to 
make available a GNU/GPL free software platform for 
education in Digital Photogrammetry. E-FOTO does not 
intend to replace commercial photogrammetric solutions. 
However, it does intend to provide a software solution that 
could be used anytime, anywhere by anybody who is 
interested in learning about photogrammetric principles. 
Because of that, E-FOTO could be extremely useful for 
those people and institutions that cannot afford to acquire 
digital photogrammetry software solutions, even when 
purchased for educational purposes.  
ACKNOWLEDGMENTS 
We would like to thank the Brazilian National Council 
for Scientific and Technological Development  (CNPq), 
which provided financial support to the E-FOTO project. 
Also, we would like to thank those who have contributed 
voluntarily to E-FOTO's development, especially Prof. 
Eddison José Araya Morales, from Costa Rica, who 
translated  E-FOTO tutorials into Spanish. 
 
REFERENCES 
[1] L. C. T. Coelho Filho, "Estação Fotogramétrica Digital 
Educacional," Undergraduate Technical Report, Instituto 
Militar de Engenharia, Brazil, 2002. 
[2] L. C. T. Coelho Filho and J. L. N. S. Brito, Fotogrametria 
Digital, 2nd ed. Brazil: EdUERJ, 2007. 
[3] S. A. Lima, "Estratégias para Retificação de Imagens 
Digitais," Undergraduate Technical Report, Universidade do 
Estado do Rio de Janeiro, Brazil, 2003.  
360
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

[4] F. J. C. Silveira, "Fototriangulação pelo Método dos Feixes 
Perspectivos," Undergraduate Technical Report, Universidade 
do Estado do Rio de Janeiro, Brazil, 2004. 
[5] F. J. C. Silveira, "Fototriangulação Pelo Método dos Feixes 
Perspectivos 
com 
Auto-calibração," 
Master 
Thesis, 
Universidade do Estado do Rio de Janeiro, Brazil, 2007. 
[6] G. J. Sokal, "Normalização de Imagens Fotogramétricas 
Digitais," unpublished. 
[7] M. T. Silveira, "Visualização e Medição Estereoscópicas de 
Imagens 
Fotogramétricas 
Digitais," 
Master 
Thesis, 
Universidade do Estado do Rio de Janeiro, Brazil, 2005.  
[8] G. J. Oliveira and F. Cardoso, "Ortorretificação de Imagens 
Digitais," Undergraduate Technical Report, Universidade do 
Estado do Rio de Janeiro, Brazil, 2004. 
[9] R. J. M. Fonseca, "Estação Fotogramétrica Digital: Uma 
abordagem Sistêmica sob as Óticas de Aspectos de objetos," 
Master Thesis, Universidade do Estado do Rio de Janeiro, 
Brazil, 2008. 
[10] R. P. Silva, "Arquivo XML de Projeto Fotogramétrico e sua 
Auditoria no Ambiente E-FOTO," Undergraduate Technical 
Report, Universidade do Estado do Rio de Janeiro, Brazil, 
2008. 
[11] M. V. Meffe, "Adaptação da Arquitetura Model-View do Qt 
para a Apresentação e Edição de Dados Compostos na GUI da 
EFD E-Foto," Undergraduate Technical Report, Universidade 
do Estado do Rio de Janeiro, Brazil, 2010. 
[12] I. S. Badolato and R. A. Aguiar, "A Integração do Software 
E-Foto em um Ambiente de Desenvolvimento XP," 
Undergraduate Technical Report, Universidade do Estado do 
Rio de Janeiro, Brazil, 2010. 
[13] S. L. C. Santos, "Reengenharia da Visualização de Imagens 
de Alta Resolução no Projeto E-Foto," Undergraduate 
Technical Report, Universidade do Estado do Rio de Janeiro, 
Brazil, 2010. 
[14] V. Silva and R. M. A. Fonseca, "Módulo de Visualização da 
Modelos Numérico de Superfície 
da EFD E-Foto," 
Undergraduate Technical Report, Universidade do Estado do 
Rio de Janeiro, Brazil, 2009. 
[15] D. L. Bastos, "Uma Métrica para Dimensionamento de 
Software Científico Aplicada à Fotogrametria Digital," 
Master Thesis, Universidade do Estado do Rio de Janeiro, 
Brazil, 2007. 
[16] E-FOTO, "E-FOTO: A free GNU/GPL educational digital 
photogrammetric 
workstation", 
available 
at 
<http://www.efoto.eng.uerj.br>. (Retrieved: August 2011). 
[17] K. Beck et al., "Manifesto for Agile Software Development" 
Available at <http://agilemanifesto.org>. (Retrieved: August 
2011). 
[18] S. Ambler, Modelagem Ágil: práticas eficazes para a 
programação eXtrema e o processo unificado, 1st ed. Brazil: 
Bookman, 2004. 
[19] K. Beck and C. Andress, Extreme Programming Explained: 
Embrace Change, 2nd ed. USA: Addison-Wesley, 2004. 
[20] T. Schenk, Digital Photogrammetry, 1st ed., vol.1. USA: 
Terra Science, 1999. 
[21] E. M. Mikhail, J. S. Bethel, and J. C. McGlone, Introduction 
to Modern Photogrammetry, 1st ed. USA: Willey, 2001. 
[22] K. Kraus, Photogrammetry: Fundamentals and Standard 
Processes, 1st ed. vol.1. Germany: Dümmlers, 1993. 
[23] J. Blanchette and M. Summerfield, C++ GUI Programming 
with Qt4, 1st ed. USA: Prentice Hall, 2006. 
[24] T. Lillesand, R. W. Kiefer, and J. Chipman, Remote Sensing 
and Image Interpretation, 6th ed. USA: Willey, 2007. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
361
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

