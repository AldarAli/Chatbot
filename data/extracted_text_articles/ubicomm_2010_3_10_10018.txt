Link Stability in MANETs Routing Protocols
Crescenzio Gallo, Michele Perilli, and Michelangelo De Bonis
Dept. of Economics, Mathematics and Statistics
University of Foggia, Italy
c.gallo@ieee.org, m.perilli@unifg.it, m.debonis@ieee.org
Abstract—Mobile ad hoc networks (MANETs) is a promising
communication paradigm for the emerging collaborative envi-
ronments, which do not need an underlying stable, centralized
routing and management infrastructure. In this paper we
propose a particular approach for the design of a mobile
routing protocol focused on the stability (measured as the
transmission intensity change rate) of network links instead of
speed and path length, and simulate its adoption in a random
network analyzing the corresponding communication graphs.
Keywords-MANET, routing protocol, link stability.
I. INTRODUCTION
Starting from the routing protocols developed in the
seventies, valuable work has recently been done in the ﬁeld
of routing protocols for mobile ad hoc networks (consisting
of interconnected mobile hosts with routing capabilities),
especially since the advent of wireless networks based on
UMTS/LTE and WiFi/WiMAX protocols [5] where it is
possible to deal with a variable-speed link going from 1 to
about 300 Mbps up to 120 Km/h. Because mobile networks
can have very unstable links, stability of routes (instead of
the only link speed/intensity and path length) becomes a
main target in the development of a mobile routing protocol.
In the following section the state-of-the-art is examined,
pointing out the fundamental routing protocol issues. Next,
Section III introduces the link stability concept in high
mobility networks. In Section IV we present the best-path
analysis related to link stability, then stating our proposal of
an algorithm for route discovery in Section V. A practical
network simulation is illustrated in Section VI together with
some relevant parameters. Finally, Section VII summarizes
and provides some directions for future work in this area.
II. BACKGROUND AND RELATED WORK
In mobile (and hence wireless) ad hoc networks, instead
of wireline networks, every node acts both as a router and
a host, so the classical “wired” routing protocols are not
applicable at all to MANETs.
Existing routing protocols may be classiﬁed based on:
• the logical organization through which the protocol
“describes” the network. From this point of view they
may be divided in uniform (all nodes have the same
function) and non uniform (the way nodes generate
and/or answer path control messages may be different
for different group of nodes) routing protocols;
• the way routing information is obtained. From this point
of view, protocols may be divided in “Proactive”, or
Table-Driven (such as DSDV Destination-Sequenced
Distance-Vector [10] and WRP Wireless Routing Proto-
col [11]), “Reactive”, or On-Demand (such as AODV
Ad hoc On-Demand Distance Vector [10], DSR Dy-
namic Source Routing [11], and TORA Temporally
Ordered Routing Algorithm [11]), and “Hybrid” (such
as ZRP Zone Routing Protocol [12]);
• how the routing path is created.
There can be a considerable network overhead and com-
puting resource use in a MANET in order to keep track
of frequent changes in topology. Protocols of reactive type
were designed for these environments, with the aim of not
keeping track of network topology [9]. If a node needs
to reach a destination, it starts a discovery process [8] to
ﬁnd the path by transmitting broadcast messages of Route
Request (RREQ) type, with TTL set to 1 [13]. Each message
has a sequence number, so that only the ﬁrst message is
considered, while its subsequent copies are discarded. When
a node receives the ﬁrst copy of a RREQ from a source
node, it stores the address, thereby establishing a return path
(reverse route). When the ﬁrst RREQ reaches the destination,
a reply message of type Route Reply (RREP) is sent to
the source through the return path. This type of protocol
is generally efﬁcient for a single rate network; in a multi-
rate network, however, what counts is not to minimize
the number of jumps to reach a destination, but the total
throughput on a given routing.
An existing technique taking into account, instead of the
number of hops, the throughput is the MTM (Medium Time
Metric) [1]. In this technique a cost inversely proportional
to the speed of the link is established; hence, the minimum
cost link is chosen. Instead of considering only the cost of
the link, its stability should also be considered [4].
A simple model for computing link stability and route
stability based on received signal strengths is proposed in
[7]. A comparison of various proposed link stability models
is made in [8], stressing route lifetime. A different approach
is carried out by [4], where signal stability is used to deﬁne
link’s connection strength. In [2] a mobility metric (link
duration) is deﬁned, attempting to quantify the effect of
node movement in order to develop an adaptive ad hoc
network protocol. This last idea is in part also adopted in the
41
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

present paper, going further towards the more comprehensive
concept of link stability, taking into account transmission
intensity rate change, too.
III. ROUTING INSTABILITY IN MOBILE NETWORKS
Although existing routing techniques are of indisputable
validity, as a result of lengthy trials conducted in wired
networks, a problem causing the performance loss in wire-
less ad hoc networks (and impacting on the route discovery
processes) is the same routing instability, given that we
are dealing with high mobility networks. What is “routing
instability”? Let us consider a node represented by a mo-
bile phone transmitting while in movement and think how
variable is the signal received from a surrounding node as
the issuer node moves in a closed or open environment. The
level of the received signal, changing constantly, causes a
continuously variable ratio of Signal-to-Noise (S/N), altering
the bit-rate and consequently the “cost” of the link. This
variability would lead to a continuous instability of routing,
causing a continuous search of the “best path”. This implies
an increase in transmission overhead, impacting greatly on
the entire network performance and throughput. A technique
that keeps track of link stability is now presented, so as to
avoid too unstable links in the route discovery process.
A. Keeping track of routing stability
Keeping memory of stability means understanding how
stable are connections between nodes; the idea is to have
a table maintaining information associated with each link
on its state transitions. With the word “transition” you can
consider the link’s moving from one transmission intensity
(measured in dBm and equal to the signal/noise ratio) to
another. Table I illustrates each link associated with its
number of transitions.
Table I
LINK TRANSITIONS
Link #
No. of transitions
L1
n1
L2
n2
L3
n3
...
...
B. Stability index and thresholds
Let us now analyze what causes the increase in the number
of transitions associated with the link. In order to record
link’s stability, omit all transitions lying within a deﬁned
tolerance (those without a signiﬁcant loss in link perfor-
mance). The key idea is to record a transition whenever
the link’s transmission intensity “oscillates too much”, i.e.,
the difference between the new Ii and the previous Ii−1
sampled transmission intensity relative to Ii−1 (in absolute
value) falls outside a predeﬁned threshold τ. So you keep
track of a transition when

Ii − Ii−1
Ii−1
 > τ
In order to correctly keep track of transition frequency,
it is advisable to sum the number of transitions of a link
compared to an observation period. For example, if C is the
number of transitions in the time interval ∆T, the frequency
F will be
F = C
∆T
C. Observation’s time interval
To establish a statistical time interval ∆T is not simple.
You can guess it to be inversely proportional to the mobility
rate of nodes and directly proportional to the number of
nodes. Thus, given a network of N nodes, with average
nodes’ mobility rate µ, you can say that
∆T = k · N
µ
After this interval the various counters (column “No. of
transitions” in Table I) are zeroed.
At the end, a maximum threshold Cmax for the number of
transitions in the time interval remains to be deﬁned. Con-
sider, for example, a time interval ∆T = 300 milliseconds
and a possible maximum value Fmax for the transition fre-
quency F of one transition every 60 milliseconds. From that,
you may establish for example Cmax = 3 < ∆T · Fmax = 5.
In a nutshell, if there are more than three transitions within
an observation period of 300 milliseconds (i.e., C > Cmax)
you will say that the network link is unstable.
In order to practice an effective implementation of the
mechanisms given above, one can follow two approaches.
The ﬁrst is to monitor the stability of the link, the second
provides for the updating of the link stability table only after
a route discovery request. Given the high overhead required
by the ﬁrst approach, it seems preferable to implement the
second as better detailed later.
IV. BEST PATH CHOICE IN ROUTE DISCOVERY
When deciding on the best path, two alternative ap-
proaches called “Link Stability” and “Link Rate” are con-
sidered and described below in detail.
A. Link Stability
This technique – as the term shows – prefers link stability,
and then in the choice of the route to be built it excludes
a priori all links having a transition frequency F above a
certain threshold. Returning to our example, if Fmax =
1
60
is the threshold corresponding to a transition every 60
milliseconds, all links having F >
1
60 will be excluded from
the choice. Note that, albeit being true that the stablest link
has to be chosen, a stable link could also be one with a zero
(i.e., not working) signal intensity. Therefore a minimum
42
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

threshold Imin should be set for the link intensity, below
which the choice cannot be done even if the link is very
stable. So, considering threshold values Fmax and Imin, a
network link is stable when Ii ≥ Imin (for all i = 1 . . . n,
being n = ∆T · Fmax the total number of samples) and
F ≤ Fmax.
B. Link Rate
In this technique, stability becomes of secondary impor-
tance: link speed is in any case to be preferred. So, when
choosing routes for the construction of the best path, the
stablest link will be chosen only within those of equal cost
(at an equal speed). But what does equal speed mean? First,
it should be noted that from a practical point of view having
two links of the same speed may not correspond to reality,
if not for a purely random case. Therefore, two links are of
equal speed if the difference in speed between them is no
more than 20%. E.g., if the link L1 has a bit rate V1 = 100
Mbps you can say that a second link L2 has the same speed
V2 if 80 Mbps ≤ V2 ≤ 120 Mbps.
Coming back to the above sketched technique the algo-
rithm, among two links of equal speed, will choose (only
under such conditions) the stablest one. To deﬁne this
stability the same considerations outlined in the previous
technique can be done.
V. OUR PROPOSAL
From what said, the focus is here on the approach
called link stability, where the characteristic parameters for
network monitoring are highlighted, i.e., the transition fre-
quency of the received signal intensity (dBm) and the signal
intensity itself. In the protocol design and implementation a
crucial role is played by the link stability table. To optimize
efﬁciency, the table will be updated at the beginning of every
route discovery process, and used in the same process to
identify the route.
A. The routing process
Each node manages a routing-path table keeping track of
all incoming and outgoing connections. The table contains,
with respect to a classic routing table, not the mere next
hop off an interface but the entire route (that is, all node
addresses belonging to the route to destination) and a time-
stamp ﬁeld used to delete the obsolete routes not used for
more than a threshold time limit, as shown below.
Observing Figure 1, the application layer sends a route
request to the network layer. The routing protocol (interior
protocol) checks if the destination address already exists in
the device routing-path table. If it does not, the route dis-
covery process is activated in order to enter the destination
node address and its path in the routing-path table. If the
destination address exists in the device routing-path table,
the relative path (included in the routing-path table) will
be used and updated by the real time-stamp value of the
sender. In MANETs, the paths included in the routing-path
table cannot be static since the network topology changes
very frequently; the responsibility of route availability is
demanded to the upper layer (because there may be an
expired timeout waiting for an acknowledgment). The upper
layer must still decide whether to delete a route from the
table, even if its time limit has not expired: this means
that it will request a route discovery every time a packet
nondelivery happens.
Physical
Data Link
Network
Transport
Session
Presentation
Application
Source Node
Physical
Data Link
Network
Transport
Session
Presentation
Application
Destination Node
Encapsulation
Bits
Frame
Packet
Segment
Data
PDU
Bits
Frame
Packet
Segment
Data
PDU
1
Frame
Header
Network
Header
Data
Network
Header
Application
Data
Data
Data
Data
Data
Frame
Trailer
0
1
0
0
1
1
1
0
0
1
Bits
Figure 1.
Encapsulation process in communication between nodes
B. Identiﬁcation of stablest links
To deﬁne the stablest links during the route discovery
process, a node must collect n transmission intensity values
Ii (expressed in dBm) during a statistical time interval ∆T.
During this interval, the minimum value IS of the sampled
data Ii will be stored, and the transition counter C will
be updated every time the absolute value of the relative
difference between the two last observed values is outside
the predeﬁned percentage threshold τ.
These values, at the end of ∆T, will be used to check that
the received signal intensities Ii are all greater than or equal
to a minimum acceptable threshold Imin and if they overcome
the percentage threshold τ not too often (i.e., C ≤ Cmax).
If the link is declared stable, a better indicator could be
given by a “stability index” 0 < s ≤ 1 given by 1 minus
the ratio between the transition counter C with respect to
the total number of samples n
s = 1 − C
n
where s = 1 means “highly stable” (s > 0 being C < n).
If the link is unstable, put s = 0.
In the example of Table II we assume a maximum
transition frequency Fmax =
1
60 and an observation period
∆T = 300 milliseconds. Five intensity signal measurements
in dBm are sampled over ∆T (being ∆T ·Fmax = 300· 1
60 =
5) and checked against a predeﬁned minimum acceptable
intensity Imin = −85 dBm and a relative transition percent-
age threshold τ = 20%. A maximum acceptable transition
counter Cmax = 3 < 5 is also established. The transition
counter C is increased every time the absolute value of the
43
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

relative transition percentage (determined by the last two
transmission intensities) overcomes the threshold τ.
Note that the minimum intensity Imin is never violated
(i.e., IS = −80 > Imin = −85). So, the link is stable
because the transition counter C = 3 does not exceed the
maximum Cmax too, and its stability index is s = 1 − 3
5 =
0.4.
Should the transmission intensity Ii of the current sample
fall under the predeﬁned minimum acceptable intensity Imin,
then no more samples are collected and the link can be
declared “unstable”, as shown in Table III.
Table II
LINK STABILITY TABLE – A STABLE LINK
S#
Link
transmission
intensity Ii
(dBm)
Minimum
intensity IS
(dBm)
Relative
transition %

Ii − Ii−1
Ii−1

Transition
counter C
1
−50
−50
–
0
2
−70
−70
40.00%
1
3
−80
−80
14.29%
1
4
−40
−80
50.00%
2
5
−70
−80
75.00%
3
Imin = −85 dBm, τ = 20%, Cmax = 3, s = 0.4
Table III
LINK STABILITY TABLE – AN UNSTABLE LINK
S#
Link
transmission
intensity Ii
(dBm)
Minimum
intensity IS
(dBm)
Relative
transition %

Ii − Ii−1
Ii−1

Transition
counter C
1
−50
−50
–
0
2
−70
−70
40.00%
1
3
−90
−90
21.43%
2
Imin = −85 dBm, τ = 20%, Cmax = 3, s = 0
C. Route Discovery packet ﬁelds
The Route Discovery packet contains the following ﬁelds:
• destination node address;
• sender node address;
• sender node time-stamp;
• hop-count (number of links, or nodes, passed through);
• number of stable links;
• pointer to a stack containing addresses of nodes tra-
versed from the sender (bottom) to the recipient (top).
D. Route Discovery algorithm
The Route Discovery process can be summarized as
follows.
1) Every node initiating a transmission activates a route
discovery process.
2) The transmitter node sends a packet including the
destination address and the above mentioned ﬁelds.
3) Every node receiving the packet checks if the destina-
tion address matches itself.
Matching. The receiving node stores the return
path, and the percentage of stable links over all
links traversed. Later, after receiving the ﬁrst
packet, it waits for any other route discovery
packet related to the pair sender-timestamp for a
speciﬁed time ∆TB. If in this time another route
discovery packet arrives, the node compares the
percentage of stable links over all links passed
through with the previous stored percentage. If
it is higher, the new relative path and new per-
centage will be stored, otherwise the packet will
be ignored. All other arriving route discovery
packets will be treated the same manner until
∆TB expires. The recipient, after selecting the
best route among all considered in the above said
interval:
a) sends an ACK using the ﬁnal reverse route.
This acknowledgment will be uniquely associ-
ated with the route discovery packet transmit-
ted by sender with its time-stamp included;
b) inserts the reverse route (the winning route)
in its routing-path table, binding it to a local
time-stamp.
Reverse-route will be used as long as the routing
is valid, i.e., while the recipient is reachable.
We can consider an improvement in despite of
two paths with same percentage value of stable
links. In fact, the best path can be better chosen
based on the sum of the costs of the links of
every path (column “Cost” of path of Table VI).
The link’s cost is the stability index s previously
deﬁned and showed in column Weight of Table
IV. We remember that a link is unstable if s = 0.
So, the best path will be chosen based on the
maximum value of all path costs considered. For
this solution, besides the percentage of stable
links, the node will store the sum of costs for
every path too, and the Route Discovery packet
will have a further ﬁeld reserved for the path cost.
No Matching. The receiving node checks whether
its address is in the stack of traversed nodes:
a) if yes, it drops the packet, since it is a broad-
cast route discovery packet previously handled
by itself, so the broadcast storm effect will be
excluded;
b) if not, it sends a broadcast route discovery
packet to the same destination address adding
the node address from which the packet is
coming, plus a stable link counter increased
44
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

by 1 (in case the receiving node has detected
a stable link) and a counter storing all links
traversed.
4) Return to Step 3.
VI. NETWORK SIMULATION
In order to test the assumptions made in our proposed
mobile routing protocol we adopted a software network
simulator, CNET [3], implementing in the internal layer the
route discovery behavior (see Figure 2). CNET employs a
simple free-space-loss (FSL) model of signal propagation,
with the signal’s propagation loss determined by the trans-
mission frequency and the distance between nodes as shown
by the formula
FSL = 20 log(f) + 20 log(d) + 92.467
where f is the transmission frequency (in GHz) and d is the
distance (in km).
Sender
Application layer
Errors introduced
LOOP-
BACK
!"#$%#&&'()#*(+,-./
0!(*"%&123()#'-./
!"#$%&123()#'-./
4(,5(,6+789
4(,5(,6+7:9
4(,5(,6+7;9
4(,5(,6+7<9
0!(*"%&123()#'%!"'(#='"-./
0!(*"%#&&'()#*(+,-./
WAN
interior (user-written) protocols
LAN
WLAN
Receiver
Application layer
Errors introduced
LOOP-
BACK
!"#$%#&&'()#*(+,-./
0!(*"%&123()#'./
!"#$%&123()#'-./
4(,5(,6+789
4(,5(,6+7:9
4(,5(,6+7;9
4(,5(,6+7<9
0!(*"%&123()#'%!"'(#='"-./
0!(*"%#&&'()#*(+,-./
WAN
interior (user-written) protocols
LAN
WLAN
Figure 2.
CNET simulation model
We carried out a simulation of a mobile ad hoc network
with 18 links and 20 nodes transmitting at 2.45 GHz, with
a Tx power of 14.771 dBm and a receiver signal-to-noise
ratio of 16.0 dBm. After the simulation, we obtained a set
of routes as the result of the route discovery processes ran-
domly generated by the hosts of the mobile network. These
routes are represented in the undirected weighted graph
shown in Figure 3, where edge weight (obtained through
a simulation of the transition counter depending on the FSL
and Rx values) corresponds to link’s stability index as shown
in Table IV. The simulated network’s properties have been
analyzed with the graph utilities available in Mathematica
(http://www.wolfram.com/products/mathematica/) and Net-
workX (http://networkx.lanl.gov/), according to the indica-
tors introduced by Hanneman [6] and are illustrated in Tables
V and VI (note that node M16 has been excluded in the
connectivity analysis of the graph). In Table VI, we show
the list of paths (routes) for a speciﬁc node (M11) along
with the “cost” of path, i.e., the sum of edge (link) weights,
where an higher value means a better (more stable) path.
In Table V, the parameter average shortest path length
summarizes the “stability” behavior of the entire network.
The average shortest path length is the sum of path lengths
d(u, v) between all pairs of nodes (assuming the length is
zero if v is not reachable from u) normalized by n·(n−1),
where n is the number of graph nodes.
M11
M04
M08
M13
M00
M15
M19
M16
M12
M06M01
M14
M18
M05
M10
M17
M03
M07
M09
M02
cnet v3.1.1
Figure 3.
A route discovery simulation with CNET
Table IV
SIMULATED NETWORK LINKS
Link
Distance
FSL
Rx
Weight
(km)
(dBm)
(stability index)
{M00, M01}
0.146
83.561
-64.510
0.184
{M00, M06}
0.128
82.449
-63.398
0.259
{M00, M08}
0.126
82.281
-63.230
0.271
{M00, M12}
0.047
73.760
-54.709
0.848
{M00, M13}
0.132
82.668
-63.617
0.245
{M00, M14}
0.084
78.801
-59.750
0.506
{M00, M15}
0.145
83.484
-64.433
0.189
{M00, M18}
0.171
84.950
-65.899
0.090
{M00, M19}
0.107
80.880
-61.829
0.366
{M01, M07}
0.106
80.771
-61.720
0.373
{M01, M09}
0.108
80.964
-61.913
0.360
{M02, M18}
0.162
84.441
-65.390
0.125
{M03, M18}
0.172
85.001
-65.950
0.087
{M04, M08}
0.128
82.458
-63.407
0.259
{M04, M11}
0.095
79.878
-60.827
0.433
{M05, M18}
0.060
75.904
-56.853
0.702
{M10, M18}
0.066
76.753
-57.702
0.645
{M17, M18}
0.086
79.033
-59.982
0.491
VII. CONCLUSION
The simple techniques exposed here are suited to any
type of mobile ad hoc network and any kind of speed,
45
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

Table V
SIMULATED NETWORK’S GRAPH: NETWORK PARAMETERS
Network density
0.105
Network diameter
1.811
Network radius
0.963
Edge-connectivity
0.087
Degree histogram
0:0, 1:14, 2:2, 3:1, 4:0, 5:0, 6:1, 7:0, 8:0, 9:1
Neighbor connectivity
1:2.556, 2:0.389, 3:0.306, 6:0.389, 9:0.472
Average shortest path
length
0.813
Center nodes
M00
Peripheral nodes
M11, M12
Articulation nodes
M00, M01, M04, M08, M18
Table VI
SIMULATED NETWORK’S GRAPH: PATHS FOR NODE M11
From
Path
To
“Cost” of path
(sum of weights)
M11
M04, M08, M00
M19
1.329
M11
M04, M08, M00
M15
1.152
M11
M04, M08, M00, M01
M09
1.507
M11
M04, M08, M00, M01
M07
1.520
M11
M04, M08, M00
M06
1.222
M11
M04, M08, M00
M14
1.469
M11
M04, M08, M00, M18
M03
1.140
M11
M04, M08, M00, M18
M10
1.698
M11
M04, M08, M00, M18
M05
1.755
M11
M04, M08, M00, M18
M02
1.178
M11
M04, M08, M00
M13
1.208
M11
M04, M08, M00
M12
1.811
by the deﬁnition of the indicated parameters. Therefore,
this methodology can probably be implemented in any
type of network environment, even in networks with very
high density of nodes, as wireless networks in delimited
environments such as university campus, airports, shopping
malls, etc.
It would be useful to conduct proper simulations to test
the described algorithm and obtain signiﬁcant values for the
following parameters:
• the statistical time interval ∆T;
• the number n of samples considered in the time inter-
val;
• the minimum acceptable signal intensity Imin in dBm;
• the percentage threshold τ of transmission intensity
variation;
• the allowed frequency oscillatory limit Fmax to deﬁne
a stable link;
• the % of stable links over total traversed links for
routing-path table;
• the sender node (waiting for acknowledgement) time-
out to initiate a new route discovery;
• the time-out to declare an “old” route in the routing-
path table;
• the recipient node wait-time ∆TB to receive the route
discovery.
It would also be useful to study how these techniques,
when implemented, impact on the energy consumption of
nodes (as a percentage of the generated network overhead).
REFERENCES
[1] B. Awerbuch, D. Holmer, and H. Rubens. The medium time
metric: High throughput route selection in multirate ad hoc
wireless networks. Mobile Network and Applications, 253–
266 (2007).
[2] J. Boleng, W. Navidi, and T. Camp. Metrics to enable adaptive
protocols for mobile ad hoc networks. In Proceedings of the
International Conference on Wireless Networks (ICWN ’02),
293–298, Las Vegas, Nev, USA, June 2002.
[3] The CNET network simulator (v3.2.1). School of Com-
puter Science and Software Engineering, University of West-
ern
Australia,
http://www.csse.uwa.edu.au/cnet/index.html,
accessed 7/Jul/2010.
[4] R. Dube, C. Rais, K. Wang, and S. Tripathi. Signal Stability-
Based Adaptive Routing (SSA) for Ad Hoc Mobile Networks.
IEEE Personal Communications, 36–45, February 1997.
[5] M. Ergen. Mobile Broadband – Including WiMAX and LTE.
Springer, NY, ISBN 978-0-387-68189-4 (2009).
[6] R.A.
Hanneman
and
M.
Ridle.
Introduction
to
So-
cial Network Methods. University of California, River-
side, http://faculty.ucr.edu/∼hanneman/nettext/index.html, ac-
cessed 7/Jul/2010.
[7] M.-G. Lee and S. Lee. A Link Stability Model and Stable
Routing for Mobile Ad-Hoc Networks. Lecture Notes in Com-
puter Sciences, Springer Berlin–Heidelberg, Vol.4096:904–
913 (2006).
[8] G. Lim. Link stability and route lifetime in ad-hoc wire-
less networks. In ICPPW ’02: Proceedings of the 2002
International Conference on Parallel Processing Workshops.
Washington, DC, USA: IEEE Computer Society, 116 (2002).
[9] R. Paoliello-Guimaraes and L. Cerda-Alabern. Adaptive QoS
reservation scheme for ad hoc networks. Lecture Notes in
Computer Science, 102–112 (2007).
[10] A.H.A. Rahman and Z.A. Zukarnain. Performance Compar-
ison of AODV, DSDV and I-DSDV Routing Protocols in
Mobile Ad Hoc Networks. European Journal of Scientiﬁc
Research, 31(4):566–576 (2009).
[11] E.M. Royer and Chai-Keong Toh. A Review of Current
Routing Protocols for Ad Hoc Mobile Wireless Networks.
IEEE Personal Communications, pp. 46–55, April 1999.
[12] P. Sinha, S. Krishnamurthy, and S. Dao. Scalable Unidirec-
tional Routing with Zone Routing Protocol (ZRP) extensions
for Mobile Ad-Hoc Networks. In Proceedings of IEEE Wire-
less Communications and Networking Conference (WCNC),
September 2000.
[13] S. Zou, S. Cheng, and Y. Lin. Multi-rate aware topol-
ogy control in multi-hop ad hoc networks. In Proceedings
IEEE Wireless Communications and Networking Conference
(WCNC’05), 2207–2212 (2005).
46
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

