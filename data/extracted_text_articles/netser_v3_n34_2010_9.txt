Simulation and Analysis of a QoS multipath Routing Protocol for Smart Electricity 
Networks 
Agustin Zaballos, Alex Vallejo, Guillermo Ravera and Josep Maria Selga 
Computer Science Department 
Enginyeria i Arquitectura La Salle – URL (University Ramon Llull) 
Barcelona, Spain 
{zaballos, avallejo, gjravera, jmselga}@salle.url.edu 
 
 
Abstract— This paper presents several considerations that 
must be taken into account in the design of a QoS multipath 
routing protocol suitable for Smart Electricity Networks 
(SENs). The main goal is to analyze the routing requirements 
that will facilitate the future formal specification of a QoS-
aware multipath routing algorithm for the coming SEN’s data 
networks in the high voltage segment where long-distance 
mesh data networks will be a future challenge for engineering 
and research. In this paper, the study is focused on 
requirement specification regarding distance-vector routing 
algorithms that reduce the overall overhead of routing 
information needed in the network, thus preserving the 
scalability feature. In order to obtain a detailed study of the 
performance of these protocols, the proposal “Distributed path 
computation with Intermediate Variables” and several 
proposed improvements have been modeled using OPNET 
modeler in an aim to evaluate the performance of this protocol 
in different SEN domain-related situations. 
Keywords- Multipath routing; Quality of Service; Smart 
Electricity Networks. 
I. 
 INTRODUCTION 
The future of the utilities walks hand in hand with Smart 
Electricity Networks (SENs) and its advantages [1][2]. SENs 
saves energy and can cope better with the unpredictable 
supply from renewable energies [3][4]. Actually, utilities 
require to be prepared to face the upgraded needs of its 
telecommunications infrastructure. Although it is known that 
this is a long term process and the prediction is that smart 
grids will be implanted in 2030. 
One of the main challenges of SENs is to redesign its 
network architecture. Nowadays, a utility grid has been 
deployed according to a centralized scheme in which the 
different 
elements 
of 
the 
grid 
are 
logically 
and 
geographically located. This fact is due to the one-way 
power flow from the generation to dispersed loads. Current 
grid scheme is easy to operate but the SEN has an opposite 
point of view. The architecture is based on a decentralized 
scheme with elements logically identified but 
not 
geographically located. For example, the increment in 
renewable generators in the customer’s premises will change 
the way the energy is generated. All customers will be able 
to generate energy, to consume it and finally to give the 
remaining part to the SEN. Because of this, communications 
must be upgraded and meet new goals [3][4] such as the 
necessity of several application protocols, the specification 
of new data models needed by the applications, the 
exploitation of the currently deployed communications 
infrastructure and the adoption of robust and QoS-aware 
routing protocols to satisfy the requirements of the network. 
This paper presents and analyses a thorough study of the 
characteristics that must be considered in a QoS multipath 
distance-vector routing protocol, in the way to get a protocol 
that could be implemented in a SEN. In [1], authors have 
studied the issues on the design of a multipath protocol that 
could be implemented in a real smart grid. The first task of a 
QoS multipath routing protocol is to find several suitable 
loop-free paths from the source to the destination with the 
necessary available resources to meet the QoS requirements 
of the desired service. It has to take advantage of the 
topology of the utility network (partial mesh) by making the 
network resilient to failures. Moreover, the few requirements 
of bandwidth are another advantage of these protocols which 
allow to use the available bandwidth efficiently. There are a 
lot of implementations of multipath routing, for example: 
DASM [5], MDVA [6], MPDA [7], MPATH [8] or DIV [9]. 
These kind of protocols obtain the maximum redundancy of 
the network finding more than one path to a destination. All 
these protocols define the behavior of the algorithm but let 
undefined important aspects such as the routing metric or the 
load balancing method. These aspects must be defined in the 
final implementation of a routing protocol to operate 
properly. 
The remainder of this paper is organized as follows: 
Section II describes the fundamental topics involved with the 
domain of Smart Electricity Networks. Characteristics and 
QoS requirements of SENs are presented and the need for a 
better communication architecture is also explained. Section 
III briefly details the proposed network model suitable for 
further formal specification of a QoS-aware multipath 
routing algorithm for SENs. Section IV introduces the 
fundamental topics involved in our analysis needed to 
understand the principles of multipath routing. Section V 
discusses the routing considerations and covers all the 
important design issues. Section VI presents the second part 
of the study with the implementation of a routing protocol 
based on the theoretical study done in [1]. This 
implementation has been done over the OPNET MODELER 
12.0 simulator [10] and it allows to compare the results of 
some aspects defined in the theoretical study. Finally, in 
section VII, conclusions are outlined. 
417
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

II. 
SMART ELECTRICITY NETWORK’S COMMUNICATION 
REQUIREMENTS 
Current power grid is defined as a system made up of 
electrical 
generators, 
transformers, 
transmission 
and 
distribution lines used for delivering electricity power to 
final users. Monitoring and smart grid network control are 
very important features in order to provide continuity, QoS 
and security. Nevertheless, at the time, most of these 
functions are only carried out in high voltage and, 
sometimes, in the medium voltage grid. The future SEN 
must be distinguished by self-healing and automation taking 
into account that should support thousands of clients and all 
the energy providers. Actually, international organizations, 
governments, utilities and standardization organisms are 
becoming aware that the grid needs a modernization.   
Many companies which belong to different sectors have 
seen a great business opportunity and are currently working 
to make themselves room in the SEN’s market. The change 
towards the so-called Smart Grid or SEN promises to be a 
change in the whole business model involving utilities, 
regulation entities, service providers, technology suppliers 
and electricity consumers. In fact, this transformation 
towards an intelligent network is possible by importing the 
philosophy, concepts and technologies from the Internet 
ambit. 
Nowadays, utility grid is used to transport energy from 
generators to end users. Currently, in most countries the grid 
is old and has several problems of inefficiencies and low 
robustness due to the lack of automation [11]. The grid could 
be improved to overcome these deficiencies by coordinating 
processes between Intelligent Electric Devices (IEDs). Thus, 
well-known problems such as those described in [11] could 
be avoided. SENs will manage lots of real-time information 
through a data network and they will collect information 
from established IEDs for the purpose of control. This kind 
of data networks is not exempt from the growing need of 
Quality of Service (QoS). SENs are expected to meet a 
drastic increasing demand of information, communication 
and miscellaneous data such as voice, data, image, video and 
multimedia communications, which can be accessed 
anywhere at any time. 
SENs need to communicate many different types of 
devices, with different needs for QoS over different physical 
media. Availability is also crucial for the correct operation of 
the network. The elements of a SEN, the so-called IEDs, can 
have very different QoS necessities. For example, real-time 
communications are required in the case of fault detection, 
service 
restoration 
or 
quality 
monitoring; 
periodic 
communications are used in Automatic Meter Reading 
systems (AMR); bulk data transfers are useful to read logs 
and energy quality information. SENs would not be possible 
without the existence of the IEDs which can play as sensors 
and/or actuators. There exist many types of IEDs depending 
on the function carried out. The IEDs involved in these 
functions can be situated in different locations due to the 
pursued decentralized architecture. For example, electrical 
substation elements are connected to the substation’s 
Ethernet network; sensors can be installed along electrical 
cables 
communicated 
through 
wireless 
standards. 
Communication from the control center to energy meters and 
between substations can be carried out via a high variety of 
technologies such as Power Line Communication (PLC) or 
WiMAX. 
Due to these circumstances, SEN will be supported by 
data network with strict constraints of QoS. Therefore, one 
of the most important needed specifications for the SEN are 
those regarding its communications. A framework for 
management of end-to-end QoS for all communications in 
the grid will be a must in the future [12][13]. In fact, a 
suitable communications infrastructure allows increasing the 
efficiency of the electric system further than what is possible 
with automation without communication capacities. 
Furthermore, automation of distributed generation 
requires new protections and supersedes the actual one way 
generation flow. The control and monitoring of these new 
flows could not be done with the same scheme used in the 
past, but can be done with the aid of a new and more flexible 
communication network. 
Some of the new communication goals faced by SENs 
are listed below:  
• 
New application protocols will be needed to meet 
the new network requirements. 
• 
New data models will be required by the 
applications. 
• 
It is essential to take full advantage of the 
communication infrastructure deployed. 
• 
To adopt robust and quality aware protocols to 
satisfy the restrictive QoS requirements of the 
network. 
III. 
NETWORK MODEL AND NOTATION 
In this section, the network model and the used notation 
for the routing algebra and policies are described. This 
notation is used to formally define the routing protocol 
behavior and it is based on Sobrinho’s routing algebra 
[14][15]. An algebraic approach is very useful for both 
understanding existing protocols and for exploring the design 
space of future Internet routing protocols. 
A. Routing policy 
The routing policy defines the elements used by the 
routing protocol to carry out the routing process. The routing 
policy is formed by [14][15]: 
 
 
 
𝐴 =< Σ, ⨁, L, ≼>  
 
(1) 
 
Each element of this array (1) is defined in Table I. In 
addition to this, two logical operators are necessary: AND 
(∧) and OR (∨) operators. In this paper, the following model 
of a cost computation based on [15] is used. It is outlined in 
Fig.1, where node j is the destination of the routing 
information and node v is the origin. 
418
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
Figure 1.  Example of the routing algebra where (𝜆 ∈ 𝐿) ∧ (𝜎 ∈ Σ) 
TABLE I.  
ELEMENTS OF THE ROUTING POLICY 
Element 
Description 
Σ 
It is the cost associated to a path and it is known 
as the signature. 
⨁ 
It defines the way to add the cost of a link to a 
path and to calculate the total cost. It is known as 
the operator. 
L 
It represents the cost associated to a link and it is 
known as the label of the link. 
≼ 
It is the precedence relationship and it is used to 
decide which path is the best one. 
 
B. Representation of the routing information 
In this section, it is described the proposed notation in 
order to define the information used and stored by the 
routing protocol. The objective is to avoid any confusion 
when different routing schemes and metrics will be 
explained. Actually, a routing protocol is an algebra together 
with a distribution mechanism (such as link-state or vector-
distance) for computing routing solutions. 
• 
i: It represents the origin node. 
• 
k: It represents a neighbor of node i, which has sent a 
routing advertisement to node i (k ∈ N୧). 
• 
j: It represents the advertised destination of the routing 
information received. 
• 
𝜆௜௞: It is the cost of the link from node i to node k. 
• 
𝜎௞௝: It is the cost of the path from node k to node j 
advertised by k. 
• 
𝜎ො௞௝
௜ : It stands for the estimated cost of the path from 
node k to node j stored on the routing table of node i. 
• 
𝜎ො௜௞௝
௜ : It stands for the estimated cost of the path from 
node i to node j through the neighbor k stored in the 
routing table of node i. 
• 
𝜎ො௜௝
௞: It is the cost estimated of the path from node i to 
node j that node i guesses that is known by node k. 
• 
𝑆௜௝: It is a set of all the neighbor nodes of the node i that 
are feasible successors to node j. 
• 
𝑁௜: It is a set of all the neighbor nodes of the node i. 
 
A node can store two cost values from its neighbors: the 
actual values and the estimated values. Estimated values are 
the information received from the neighbors that can be 
potentially outdated due to network changes which have not 
been notified yet as the routing protocol has not converged. 
IV. 
MULTIPATH ROUTING IN SENS 
The number of nodes in a SEN can range from a few 
hundred to thousands depending on the deployment. SENs 
with thousands of nodes can become common in the future. 
Therefore, the routing algorithm needs to be distributed, 
decentralized and scalable.  
Multipath routing can use disjoint paths or non disjoint 
paths. The problem with disjoint path is the dependence on 
the physical topology of the network and the difficulty in 
being allocated by the routing algorithm because any of the 
paths to a certain destination node can share any link [16]. 
For this reason, our study in this paper focuses on non 
disjoint path distance-vector multipath routing protocols. 
Multipath routing let obtain some benefits for the 
network performance, such as: reduction of the average 
delay [7], more security against network attacks [8] or 
reduction in the overall convergence time when a link fails. 
The latter benefit introduces two extra advantages, the 
reduction of the communication overhead in the network and 
a convergence time close to 0 s. in some cases. On the other 
hand, the routing loops can exist with higher probability than 
in shortest-path routing.  
A. 
Mechanisms for successors selection 
Multipath routing algorithms maintain a group of vectors 
to the same destination called successors ( 𝑆௜௝ ). These 
neighbor nodes are used to route the packets to a certain 
destination. The most difficult problem that must be solved is 
the selection of these successors avoiding loops in the 
network. This problem has different solutions: 
1) Using loop-free paths with the same cost: 
This is the simplest multipath mechanism based on 
selecting the paths with the same cost than the shortest path 
to a certain destination. An example of a protocol that uses 
this type of multipath is OSPF. 
𝑆௜௝ = ቄ𝑘ቚ𝜎ෝ௜௞௝
௜
= min 𝜎௜௝  , ∀ 𝑘 ∈ 𝑁௜ቅ  
(2) 
The main advantage is the simplicity because it does not 
require modifying the baseline protocol behavior but it is 
pretty unlikely to find paths with the same cost. 
2) Using loop-free paths with a variation over the 
minimum: 
This mechanism is used, for example, by EIGRP. It is 
based on selecting the paths with a variance of 𝛾 in the 
shortest path. 
𝑆௜௝ = ቄ𝑘ቚ𝜎ෝ௜௞௝
௜
< ൫min 𝜎௜௝ ∙ 𝛾൯, ∀ 𝑘 ∈ 𝑁௜ቅ | 𝛾 > 1  
(3) 
The main disadvantages are that the probability of using 
a path with a loop depends on 𝛾 parameter and the inability 
to avoid bouncing effects due to a bad configuration of this 
parameter. 
3) Using loop-free paths in a pseudostationary network: 
This mechanism is based on the Loop Free Invariance 
(LFI) conditions [17] with the difference that multipath 
routing pursues a group of successors greater than one. The 
condition that must be satisfied in order to avoid loops is the 
following: 
419
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

𝑆௜௝ = ൛𝑘ห𝜎ො௞௝
௜ < 𝜎௜௝ , ∀ 𝑘 ∈ 𝑁௜ൟ | 𝜎௜௝ = min൫𝜆௜௩⨁𝜎ො௩௝
௜ ൯ , ∀ 𝑣 ∈ 𝑁௜             (4) 
If this condition is satisfied, it can be affirmed that there 
are no loops in the network when the routing protocol has 
converged. But during the convergence of the network it is 
possible that a loop is originated. To satisfy this condition 
even when the network is converging, it is necessary a 
synchronization mechanism. 
4) Using loop-free paths with second-to-last-hop 
information: 
This mechanism shares the information of the 
penultimate hop. With this information, the routing protocol 
knows all hops in the path and can calculate whether a new 
link added to a path is originating a loop or not. MPATH [8] 
is an example of this type of multipath routing protocol. 
Although this mechanism is robust, it also needs a 
synchronization mechanism to maintain the information 
updated on all nodes in the network. 
B. Synchronization mechanism 
LFIs can be used to avoid loops in a converged network 
but not during convergence time. The reason is the 
distributed nature of the distance-vector algorithms. This 
nature does not assure that the LFIs are accomplished by all 
the nodes in the network because each one maintains his own 
routing information and can make wrong decisions based on 
outdated routing information. For this reason, it is necessary 
a mechanism to state that the information is correct in all 
nodes of the network. This mechanism must update the 
routing information within a finite period of time and must 
have a beginning and an end. Moreover, it is necessary to 
bear in mind that only the metric’s increasing needs to be 
synchronized because it is critical. A decrease in the metric 
cannot create a loop. 
There are different methods of synchronization but most 
of them are based on the diffusing computations studied by 
Dijkstra [19]. The first multipath algorithm incorporating the 
diffusing computations was DASM [5], which uses a variant 
of the LFI used in the EIGRP’s Diffusing-Update Algorithm 
(DUAL). This variant only initiates the synchronization 
when the Loop-free Routing Condition (LRC) is violated. 
LRC is a relaxed condition of the LFI and it reduces 
convergence time of DUAL and also the number of routing 
messages needed. The evolution of DASM is MDVA [6] 
which accelerates the diffusing computations. 
The main problem of diffusing computations is the 
overhead 
and 
the 
delay 
needed 
in 
end 
to 
end 
synchronization. That is the reason why the synchronization 
proposed in MPDA [7] and MPATH [8] is only for a one 
hop scope. The advantage of this synchronization is that the 
originator of the update can receive an acknowledgement 
faster. DIV routing protocol [9] has been recently defined. 
This LFI-based protocol provides normal and alternate 
synchronization. Normal synchronization is similar to 
MDVA synchronization and alternate is similar to MPATH 
or MPDA synchronization. A difference in DIV is the 
treatment of a decrease in the cost metric. DIV produces a 
message that supersedes any increment process to the same 
destination and, thus, it can stop a diffusing computation that 
is taking place in the network. This difference, combined 
with the two possible synchronization mechanisms, gives 
more flexibility to the protocol. For these reasons, this 
protocol could be chosen for its use in SEN data networks.  
C. Constraint- based protocols 
The routing protocols based on constraints find one or 
more paths that satisfy a subset of QoS conditions imposed 
by the user. It is also necessary to define the QoS constraints 
scope. They can be applied to a single link or to the whole 
path [18]. The first problem solved was finding a path using 
two constraints, which is a NP-complete problem [18][20]. 
The problem with two constraints can be generalized to z 
constraints. MPOR routing protocol [20] is able to solve the 
Multiple Constraint Problem (MCP) over a group of z 
restrictions, furthermore this protocol uses an optimization 
function to select the path. The method applied to solve the 
problem is the limited path heuristic proposed in [21]. In 
order to avoid the loops, the algorithm uses LFIs with the 
synchronization mechanism proposed in DUAL. The 
disadvantage of this type of algorithms is the dependency on 
global parameters to solve the routing problems, thus 
limiting the possibilities of the algorithm. Moreover, the 
heuristic solution can fail to find the path even when this 
path exists. 
V. 
CONSIDERATIONS IN THE DESIGN FOR A QOS 
MULTIPATH ROUTING PROTOCOL FOR SENS  
The study from the different multipath algorithms, such 
as DASM, MDVA, MPDA, MPATH, MPOR or DIV among 
others has concluded that the most robust way to solve the 
multipath routing problem is applying a scheme based on the 
diffusing computations and use LFIs to avoid loops. Even 
though our initial studies were focused on solving the routing 
loops and bouncing problems using techniques such as split 
horizon, split horizon with poison reverse, triggered updates, 
hold down timers, the use of the second-to-last-hop 
information or legacy synchronization methods.  
On the other hand, there are other aspects that must be 
defined to obtain an algorithm that could be implemented in 
a real SEN. Some of these aspects are: the detection of 
neighbors, the hierarchy of the network, the definition of 
which synchronization mechanism is used, the addressable 
elements in the network or the address scheme used by the 
protocol to identify the nodes in the network. Furthermore, if 
the protocol is oriented to provide QoS, additional aspects 
have to be defined, such as the QoS metric, the specification 
of the protocol to minimize the amount of bandwidth needed 
and the load balancing scheme. These aspects are treated in 
each of the following parts. 
A. 
Neighbor detection 
The neighbor detection has two primary objectives in a 
routing protocol: establish neighbor adjacencies and detect 
the failure/recovery of a direct connected link. 
The distance-vector routing protocols do not need to 
establish 
adjacencies 
between 
neighbors, 
but 
the 
failure/recovery of a link is critical because it can force the 
synchronization of the routing algorithm which is crucial to 
420
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

maintain the stability of the network. In case of 
synchronization need, the most critical event is the increment 
in the metric because it can create a loop in the network. If 
the failure of a link is not detected quickly, all the packets 
routed across the failed link will be discarded decreasing the 
performance of a SEN. A failure in the detection could 
compromise the detection of the end of a diffusing 
computation and it is known as Stuck In Active process or 
SIA. The cause of a failure in the neighbor detection could 
be the physical medium. For example, Ethernet or PLC is a 
shared medium and it is not always possible to detect a 
neighbor failure if a switch or bridge is in the middle. This 
behavior is likely to be usual in the future SENs’ PLC and 
wireless hybrid networks. 
The solution to that problem is to implement a keep-alive 
mechanism controlled by the routing protocol, consequently 
incrementing the message overhead of the routing protocol. 
On the other hand, the possibility of using BFD protocol [22] 
could be very interesting for our purposes. BFD, which is a 
much more efficient solution, establishes a connection with 
neighbors through a three way-handshake and it monitors 
them with hello messages. In case of failure, it is 
immediately notified to the routing protocol.  
B. 
Hierarchy of the network 
The network hierarchy is the distribution in areas of the 
nodes in the network. Some examples of hierarchic protocols 
are OSPF or IS-IS which are link-state protocols. Hierarchy 
mechanism is applied to solve the scalability problem of the 
link-state protocols, although it can be used on distance-
vector to reduce the amount of traffic inside an area. 
The information maintained by a node in the network is 
updated depending on the number of changes in the network. 
The routing table size of flat networks increases linearly by 
limiting the scalability of the protocol due to the amount of 
information that is needed to be shared. When the routing 
protocol uses hierarchy techniques, a group of nodes are 
treated as a unique addressable entity from the top of the 
hierarchy (e.g., OSPF areas). An example of hierarchic 
routing protocol is HIPR [23] which is based on the Loop-
free Path-finding Algorithm (LPA). The three most 
important advantages derived from this mechanism are the 
reduction in the number of routing messages needed to 
converge, the reduction of the size on the route table 
(reducing the memory needed by the node) and also the 
reduction of the convergence time. 
When a hierarchic protocol is used, it is necessary to 
define the hierarchy scheme used because it settles for the 
direction of the information flow. For example, OSPF forces 
all areas to be in contact with the backbone area by 
addressing all the traffic through it. On the other hand, it is 
the ALVA algorithm [24], which implements a more flexible 
scheme. 
C. 
Algorithms based on sequence numbers 
The sequence numbers are introduced in the routing 
messages in order to allow the routing protocol to identify 
the updates. For example, DIV numbers the increment 
updates for identifying to which diffusing computation 
belongs to. This number also let identify out of order 
messages or detect duplicated messages.  
An important issue that must be taken into account when 
sequence numbers are used is that they are part of a finite 
group of numbers. For this reason, it would be necessary to 
define the maximum possible value and the mechanism to 
synchronize them when that maximum is reached. Another 
aspect that must be defined is the scope of a sequence 
number, it can identify a local sequence number between two 
neighbors (this is the case of DIV) or it can be global to the 
entire network (this is the case of AODV [25]). The AODV’s 
option is the most difficult to synchronize because the 
sequence number must be synchronized across the entire 
network [26]. The last topic that must be defined is the 
behavior of a new node in the network because it would not 
be synchronized with the network. It is related with the 
neighbor detection mechanism that must also synchronize 
new nodes reached in the network. 
D. 
QoS metrics 
Several routing protocols are oriented to provide QoS. 
All of them provide the QoS based on the metric used by the 
routing protocol, which give much more information than the 
number of hops. This is the reason why the metric chosen is 
an important parameter when a routing protocol is designed. 
The metric is the value used to select which path is the best 
one. Moreover, it is necessary to define the optimization 
functions which define the objective of the routing policy.  
The metrics could be subdivided into two flavors: static 
and dynamic. Static metrics represent a stable vision of the 
network. The variation of these metrics is usually caused by 
disconnected links. On the other side, by using dynamic 
metrics, the stability of the network could be compromised 
depending on how frequently the metric is updated. Its main 
problem is that they can change frequently, making 
necessary to apply hysteresis cycles or the average of the 
metric value. In order to promote network stability, such 
metrics have been dismissed for SEN networks in this paper. 
A metric classification is depicted below. 
1) Single metrics 
These are the simplest ones and they only represent a 
single characteristic of a path. Examples of routing protocols 
that use these metrics are RIP or IS-IS, using the number of 
hops as a path metric. Another useful metric example for 
SENs is the Bandwidth-inversion Shortest Path (BSP) [27] 
or the Enhanced Bandwidth-inversion Shortest Path (EBSP) 
[28] with better performance in heterogeneous network (see 
Table II and Table III). 
2) Combined metrics 
These metrics also represent a characteristic of a link 
using one value. But this value is obtained from a 
combination of metrics by avoiding NP-complete problem 
[13]. The metric proposed in [29] is an example of a metric 
with a combination of bandwidth, delay and reliability of the 
link (Table IV). 
3) 
Multiple metrics 
This metric scheme represents a link with more than one 
cost value. The entire network exchanges this information 
and then the node could combine this information in order to 
421
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

decide the best path to the destination. The most known 
examples of this type of metrics are de Widest Shortest Path 
(WSP) [30] and the Shortest Widest Path (SWP) [29]. Other 
examples are [31] and [32]. The former divides bandwidth 
between numbers of hops and the latter divides delay 
between bandwidth. The main difference between them is 
how they prioritize the importance among all metrics to 
obtain the preferred path. Another example is the metric 
proposed on [33], whose metric scheme uses the number of 
hops, link bandwidth and total bandwidth of the path. It 
establishes a hierarchy to evaluate all the metrics, first it is 
evaluated the number of hops; if both paths have the same 
metric, the minimum bandwidth is evaluated and so on. It is 
known as lexicographic order [14] (Table V). 
TABLE II.  
BSP METRIC 
Σ 
𝜎 ∈ 𝑅ା 
⨁ 
𝜆⨁σ = 𝜆 + σ 
L 
𝜆 ∈ 𝑅ା , 𝜆 =
1
𝐵𝑊 
≼ 
≤
TABLE III.  
EBSP METRIC 
Σ 
𝜎 ∈ 𝑅ା 
⨁ 
𝜆⨁σ = 𝜆 + 2 ∙ σ 
L 
𝜆 ∈ 𝑅ା, 𝜆 =
1
𝐵𝑊 
≼ 
≤
TABLE IV.  
EXAMPLE OF COMBINED METRIC 
Σ 
𝜎 ∈ 𝑅ା 
⨁ 
𝜆⨁σ = 𝜆 + σ 
L 
𝜆 ∈ 𝑅ା, 𝜆 = 𝑏𝑎𝑛𝑑𝑤𝑖𝑡ℎ 𝑑𝑒𝑙𝑎𝑦 ∙ 𝑟𝑒𝑙𝑖𝑎𝑏𝑖𝑙𝑖𝑡𝑦
ൗ
 
≼ 
≤ 
TABLE V.  
EXAMPLE OF MULTIPLE METRIC (LEXICOGRAPHIC ORDER) 
Σ 
Σ୦୭୮ × ΣBWౢ౟౤ౡ × ΣBW౪౥౪౗ౢ: < 𝜎௛, 𝜎௕௟, 𝜎௕௧ > 
⨁ 
 
(𝜆௕௟, 𝜆௕௧)⨁(𝜎௛, 𝜎௕௟, 𝜎௕௧) =
< 𝜎௛ + 1, 𝜆௕௟ + 𝜎௕௟, 𝜆௕௧ + 𝜎௕௧ > 
 
L 
 
𝜆௕௟ ∈ 𝑅ା,
𝜆௕௟ = 𝑙𝑖𝑛𝑘 𝑏𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ 
𝜆௕௧ ∈ 𝑅ା,
𝜆௕௟ = 𝑡𝑜𝑡𝑎𝑙 𝑏𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ 
 
≼ 
 
(𝜎௛, 𝜎௕௟, 𝜎௕௧) ≼ (𝜎௛
ᇱ, 𝜎௕௟
ᇱ , 𝜎௕௧
ᇱ )   𝑖𝑖𝑓 
 (𝜎௛ < 𝜎௛
ᇱ) ∨ (𝜎௛ = 𝜎௛
ᇱ  ∧ 𝜎௕௟ < 𝜎௕௟
ᇱ ) ∨ 
(𝜎௛ = 𝜎௛
ᇱ  ∧ 𝜎௕௟ = 𝜎௕௟
ᇱ ∧ 𝜎௕௧ ≥ 𝜎௕௧
ᇱ ) 
 
4) Metrics based on constraints 
This metric strategy also represents the cost value of a 
link with many different values [34]. The difference resides 
in the way to select the best path. This selection is based on a 
subset of constraints that defines a range of values. If the 
metric of a path is between these values, it is considered as a 
feasible path. Therefore, this strategy does not have the 
objective to minimize or maximize a path metric to a 
destination. An issue to be solved is the method used to 
manage n constraints. There are situations in which this 
method cannot find a correct path [35] even though it exists.  
E. 
Efficiency and routing overhead 
A routing protocol has to miss the minimum bandwidth 
by reducing the communication overhead. If this requisite is 
not accomplished, the traffic of the SEN could be affected by 
the routing updates causing the failure of the QoS 
agreements. Communication overhead could be caused by 
too large periodic updates or due to too frequent updates (for 
example when dynamic metrics are used). One possible 
solution is to apply a hierarchical routing protocol to reduce 
the information advertised inside an area. The best solution 
could be the use of triggered updates instead of periodic 
updates, if the network topology does not change frequently 
and it is almost stable. In this case, periodic updates are a 
waste of bandwidth because there is no change to announce. 
On the other hand, in case of a frequently changing network, 
the use of triggered updates can result in a misleading 
operation. If a node generates a lot of triggered updates it can 
saturate the network because of the domino effect. This can 
be avoided applying a timer when the triggered updates are 
received; the expected behavior is the reduction of the 
overhead by waiting enough time to receive and retransmit 
subsequent updates. 
Another solution is used, for example by EIGRP, by 
limiting the amount of bandwidth that can be used by the 
routing protocol. This approach is efficient but it can affect 
the performance of the routing protocol when more 
bandwidth than the assigned is needed and so leading some 
nodes to lose the connectivity with some destinations. 
F. 
Load balancing schemes 
A load balancing scheme is not a requisite of a routing 
protocol, but it is necessary to specify it when multipath 
routing protocol is used in order to take advantage of the 
multiple paths to a single destination. The efficiency of the 
load balancing scheme would rely partially on the metric 
used by the routing protocol because this information is used 
by some load balancing algorithms. Otherwise, if more than 
one path is used simultaneously, there is the possibility of 
introducing variable delays. This delay variation affects 
dramatically to transmissions based on TCP protocol, by 
activating the Fast-Retransmit method and wasting more 
bandwidth. This behavior could increase the number of lost 
packets thus reducing the actual throughput. 
Load balancing could be carried out in a flow-based or 
packet-based strategy. The flow-based mechanism is based 
on information such as IP address or a hash of the 
information of the flow. The advantage of this approach is 
that the packet reordering is not needed because a single flow 
uses a unique path. Obviously, its main disadvantage is 
inefficiency using the bandwidth of the network. For 
422
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

example, an intensive flow can congest a single path whereas 
another data flow could be using a better uncongested path as 
the load balancing scheme cannot cope with this situation. 
When packet-based load balancing is used, the bandwidth of 
the network is efficiently allocated but reordering is needed 
in the destination. 
VI. 
MULTIPATH ROUTING PROTOCOL ANALYSIS 
BEHAVIOR 
A. Study groups for simulations 
In this section, DIVs behavior is defined and also a brief 
description of the random scenario used to run the 
simulations is given. Even though Distributed Bellman Ford 
(DBF) has been studied, the behavior of this protocol is not 
described in this section because it is a well-known protocol 
and is the base of a standard protocol (RIP). 
The modeled routing protocol is based on DIV [9] which 
is the most evolved distance vector routing protocol studied 
in [1]. DIV has two types of synchronization mechanism, 
one called local and another called alternate. Both 
mechanisms have been modeled in this paper. The local 
method only synchronizes the routing information with one 
hop when an increase in the metrics is detected. On the other 
hand, there is the alternate method: this type of 
synchronization is a common synchronization method that 
notifies all nodes affected by the metric increment (L). The 
local method is the fastest one but the stability of the 
network could be compromised because it could happen that 
a node cannot reach another node in the network when the 
routing is converging. The alternate method is more robust 
because the old path affected by the metric increment is 
maintained until all the nodes have been informed of the 
metric increment and have made the correct changes. 
In our approach, we have changed the addressing of the 
routing protocol to maintain a hierarchy of 16 SEN’s areas 
with a maximum of 256 nodes per area. This hierarchy was 
applied to limit the routing information exchanged inside an 
area, improving the efficiency of the protocol in terms of 
bandwidth. The other decision that has to be taken is the 
metric used in order to implement a QoS-aware protocol: this 
metric has been EBSP. EBSP metric has a better response 
than BSP [27] and fits correctly in heterogeneous networks 
which are typical in SENs. Another advantage of this metric 
is its representation with a single value, reducing the amount 
of bandwidth needed to distribute the routing information. 
To understand the model implemented in the simulator, 
we have represented the implementation with an activity 
diagram in UML. Fig. 2 represents the general behavior of 
the protocol. 
This protocol has been implemented in the OPNET 
simulator and it has been generated a subset of scenarios to 
study the protocol. These scenarios were randomly generated 
according to two criteria: 
 
• 
The average number of links per node. 
• 
The number of nodes in the network.  
 
Figure 2.  General behavior of the routing protocol [9] 
423
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

For this study, 4 study groups of 5 scenarios have been 
generated. The average number of links per node for each 
study group is: 2 links for the study group number 1, 3 links 
for the study group number 2, 4 links for the study group 
number 3 and 5 links for the study group number 4. The 
number of nodes is 256 and this number is the same for each 
scenario. 
B. OPNET simulator 
The OPNET simulator [10] is an event oriented 
simulator. The language used to program a new node is a 
proto-C language specifically designed for this simulator. 
The behavior of the node is modeled through different 
phases. The first phase is the node model, which consists in 
designing the flows of information into the node. These 
flows are modeled among modules and each module 
contains processes. These processes are modeled in the 
second phase, which consists in specifying the Finite State 
Machine (FSM) that rules the behavior of the module. 
Finally, the third phase consists in programming the different 
states modeled into the FSM. 
This section describes the two parts of the model done 
over OPNET modeler. The first part is the design of the node 
to implement the two variants studied in this paper: DBF and 
DIV. The second part introduces the automatic scenario 
generation tool created specifically for this study. 
The node model designed is very simple. It contains 
sixteen transmitters and sixteen receivers, all connected to a 
simple queue module. The node has sixteen point-to-point 
receivers and transmitters because it is the maximum number 
of neighbors allowed in the design of the protocol. The 
module selected to interconnect all the transmitters and 
receivers was a queue because it can manage different 
queues and is easier to store, receive and transmit the 
messages. This queue contains the process model shown in 
Fig. 3. 
    
  
Figure 3.  FSM of the models to study the protocols DBF and DIV in the 
OPNET simulator 
The behavior of the machine state can be extracted from 
the UML diagram shown in Fig. 2. Nevertheless, the tasks 
done in each state of the finite state machine are briefly 
described. 
• 
The AUTO_ASSIGN state assigns an address to the 
node and also initializes some variables used in the 
INIT state. 
• 
The INIT state focuses on the initialization of all the 
variables used by the node including all the variables 
used by the routing protocol. 
• 
The WAIT state waits for the arrival of a packet or 
the disconnection of the lower level which means 
that a failure of the link or the node has taken place. 
• 
The RX_PQT is the main state of the process model. 
It processes all types of packets that can be received: 
metric increment, metric decrement or acknowledge. 
In this state is where all the actions derived from a 
metric increment or decrement are programmed (Fig. 
4-6). 
• 
The EXCEP_N2 state is a simple state to detect if 
the failure is from a link or from a node and initialize 
the variables according to the type of failure and 
send 
the 
corresponding 
messages 
of 
metric 
decrement or increment to the rest of the neighbors. 
The advantage of this design is the generic states, which 
allow to model different behaviors with the same FSM and 
reduce the time wasted to implement the DBF and DIV 
algorithms. 
C. Automatic scenario generation 
One of the objectives of the study done in this paper is to 
analyze a range of similar scenarios to extract the correct 
results which allow to support the conclusions over them. 
The scenario is characterized with two parameters: the 
number of nodes and the average number of interconnections 
per node. Nevertheless, the automatic scenario generation 
tool within OPNET does not allow creating a scenario only 
based on these two parameters. OPNET has a powerful 
automatic scenario generator which allows creating full-
mesh, partial-mesh, tree or bus topologies, but none of these 
topologies fit in our goal. 
For this reason, an application that generates an xml file 
which can be imported into OPNET with the designed 
scenarios has been created. The main found problem when 
programming the application was to find out how to write an 
xml file to import it into the OPNET simulator. The second 
problem was the type of topology, which must connect 
physically all the nodes in the same network, without any 
isolated node. The other point of the generated network is the 
average of interconnections. The number of interconnections 
cannot exceed the maximum specified to the application. 
 
 
424
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

  
Figure 4.  Metric incrementation algorithm 
 
  
Figure 5.  Metric decrementation algorithm  
 
425
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
Figure 6.  Acknowledgment process
Finally, the most relevant point of the automatic 
generated network by the simulator tool is the random 
interconnection of the nodes, which allows to generate five 
scenarios with the same specifications but with completely 
different physical interconnections among the nodes. This is 
the main advantage of this application, the possibility of 
generating a variety of scenarios with the same definition 
(number of nodes and average number of interconnections). 
This variety of scenarios gives the possibility of studying 
different physical topologies similar to those provided by 
SENs with the two implementations of the analyzed routing 
protocols. 
D. Simulations and analysis 
First of all, it is described the study on the number of 
found paths in the four groups of simulated scenarios (study 
groups), which depends on the average number of links in 
each scenario. Fig. 7 shows the number of paths found by the 
routing protocol where the x-axis represents the number of 
found paths and the y-axis represents the percentage of nodes 
with this number of paths to the destination. In Fig. 7, it can 
be seen that all nodes in the network find a minimum of one 
path to its destination, moreover, the scenario with an 
average of two links per node have a 10% of nodes with 2 
paths which is the maximum in the network. When the 
number of links per node is increased to an average of five 
links, the 50% of the nodes in the network has more than two 
paths. This behavior gives a lot of stability to the protocol 
because a node has an alternative path to the destination if 
the primary fails. 
 
Figure 7.  Number of paths found 
The second topic that must be analyzed is the delay of an 
IP packet when there is traffic in the network. To simulate 
this, the same traffic pattern in all the nodes in the network 
has been configured. The configured pattern transmits 510 
packets per node, which is enough to compare the delay in 
the network with 2, 3, 4 and 5 links per node. Each packet is 
transmitted to a different destination in the network and each 
node has 255 destinations configured, this makes two 
packets per destination. 
This study presents the performance of DBF, which is a 
basic implementation of a Bellman Ford algorithm based on 
426
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

a hop count metric. In addition to this, in order to evaluate 
the performance of the multipath routing, DIV has been 
modeled with a limitation in the number of feasible shortest 
paths used to route the traffic. This limitation allows us to 
study the improvement introduced when multiple found 
paths for the protocol are used. 
 
 
Figure 8.  Delay vs. Hop count in the scenario with an average of 2 links 
per node 
  
Figure 9.  Delay vs. Hop count in the scenario with an average of 5 links 
per node 
Fig. 8 and Fig. 9 show the results of the delay with a 
confidence interval of 98%. The implementations shown are 
DBF and DIV with limitations of 1, 2, 3 or 4 feasible shortest 
paths. Fig. 8 shows the delay (y-axis) according to the hop 
count (x-axis). The graph presents the results in the 2-link 
per node scenario where the x-axis represents the number of 
hops done by the analyzed IP packets and the y-axis 
represents the delay of IP packets. Fig. 9 presents the results 
in the 5-link per node scenario where the x-axis represents 
the number of hops done by the analyzed IP packets and the 
y-axis represents the delay of IP packets. 
The results exposed in Fig. 8 and Fig. 9 show an 
interesting conclusion: when the scenario has 2 links per 
node, the best result is obtained by DBF with a metric of hop 
count; whereas the DIV implementation in the scenario with 
5 links per node, which is supposed to be more prone to 
multipath routing, can take advantage of the network 
topology by reducing the overall delay of the packets. 
When the difference between using 1, 2, 3 or 4 feasible 
shortest paths on DIV is evaluated, there is no much 
difference, the only conclusion is that the more paths are 
used, the more delay is introduced; but this delay is very low.  
 
 
Figure 10.  Packet delay vs. Hop count in the scenario with 5 data packets 
generated per node 
  
Figure 11.  Packet delay vs. Hop count in the scenario with 10 data packets 
generated per node 
427
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

  
Figure 12.  Packet delay vs. Hop count in the scenario with 20 data packets 
generated per node 
The last study done is about the behavior of the routing 
protocol when the network is congested. The traffic pattern 
used to congest the network was slightly different. This new 
pattern configures the transmission of 2, 3, 5, 10 and 20 data 
packets per node and per destination. Again, the study is 
focused on the implementations of DBF and DIV, but in the 
case of DIV the study focuses only on the limitation of 1 and 
4 feasible shortest paths. The results obtained with the 
pattern of 5, 10 and 20 packets are shown in Fig. 10-12 with 
98% confidence interval. For example, Fig. 10 shows the 
average packet delay (y-axis) in function of the hop count 
metric of the path (x-axis). This graph presents the pattern 
with 5 packets per node.  
The results obtained show that DBF has a very bad 
performance, whereas DIV can take advantage of the 
multipath routing. It is, in this situation of congestion, when 
a protocol oriented to provide QoS must react better and this 
is the case of DIV. 
VII. CONCLUSION 
Multipath routing protocols based on distance-vector 
have emerged as the evolution of its predecessor (shortest-
path routing protocols). The study has concluded that these 
enhanced protocols improve a lot of aspects such as the 
increment of the network capacity and they improve the 
redundancy. The main advantage is the increment of the 
network efficiency, increasing the practicable bandwidth 
with the same resources and minimizing the delay of the 
packets. 
The design of a multipath protocol is more demanding 
than a shortest-path routing protocol. The reason is the 
increase in the number of usable paths. That increase is 
proportional to the potential loop problems. On the other 
hand, the amount of routing information to transmit is greater 
and the mechanism to synchronize all this information is 
harder to design. All the mechanisms applied on shortest-
path such as poison reverse, hold down timers and triggered 
updates do not fit enough multipath routing. The mechanism 
with better performance is the use of LFI in order to avoid 
loops and to synchronize the routing information. From our 
point of view, DIV-based routing algorithm is the best 
protocol to use as a baseline in the design of a multipath 
routing protocol for SENs. 
A correct metric must be selected if it is needed to focus 
the design on QoS providing. Avoiding combined metrics 
and metrics based on constraints seems to be a good practice, 
although the last one is a widespread practice to provide 
QoS-aware routing. Another aspect that the metric must 
accomplish is to have the enough granularity to find multiple 
paths, this is the case of the metric used in EBSP which 
effortlessly finds multiple paths easier than other metrics 
strategy.  
The OPNET simulator is a powerful tool to model a 
protocol from scratch, giving the possibility of customizing 
the node behavior. From the point of view of an 
implementation, it brings the possibility to test the feasibility 
of a design and study its performance. The practical study 
has shown that the multipath protocol can find more paths 
even when there are only two links per node. The increase in 
paths allows to reduce the overall delay in a transmission and 
allows to orient the protocol to provide QoS as well. To sum 
up, the protocol studied in generated scenarios (e.g., Fig. 13) 
together with the EBSP metric are a good option to 
implement a QoS-aware routing protocol for SENs. 
 
  
Figure 13.  Example of an automatic generated scenario 
Finally, an important conclusion is the relevance of the 
load balancing scheme. This scheme is not usually a part of 
the routing protocol but there exist different possible 
implementations that can take more advantage of the 
multiple paths found by the routing protocol. 
 
428
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
ACKNOWLEDGMENT 
This work was supported in part by EU’s seventh 
framework funding program FP7 (INTEGRIS project ICT-
Energy-2009 under grant 247938). Authors  would  like  to  
thank  “Enginyeria  i  Arquitectura  La  Salle”  (University  
Ramon  Llull)  for  their encouragement and assistance. 
REFERENCES 
 
[1] 
Zaballos, A., Vallejo, A., and Ravera, G. “Issues of QoS multipath 
routing protocol for SEN’s data networks”. Proceedings of the Sixth 
Advanced International Conference on Telecommunications, pp. 364 
- 369 (AICT 2010). 
[2] 
Corinex Communications Corp. “Broadband over Powerline for 
Smart Grids Technology Brief”. [Available online] [Consulted: Dec 
2010] http://www.corinex.com/. 
[3] 
EPRI's IntelliGrid initiative, Electric Power Research Institute. 
[Available online] [Consulted: Dec 2010] http://intelligrid.epri.com. 
[4] 
European SmartGrids Technology Platform. “Vision and Strategy for 
Europe’s Electricity Networks of the Future”. [Available online] 
[Consulted: Dec 2010] http://www.smartgrids.eu/. 
[5] 
Zaumen, W.T. and Garcia-Luna-Aceves, J.J. “Loop-free Multipath 
routing Using Generalized Diffusing Computations”. Proceedings of 
the IEEE INFOCOM 2008, pp. 1-10. 
[6] 
Vutukury, S. and Garcia-Luna-Aceves, J.J. “MDVA: A distance-
vector multipath routing protocol”. Proceedings of the IEEE 
INFOCOM 2001, vol.1, pp: 557-564. 
[7] 
Vutukury, S. and Garcia-Luna-Aceves, J.J. “A simple approximation 
to minimum-delay routing”. Proceedings of the ACM SIGCOMM 
1999, pp.227-238. 
[8] 
Vutukury, S. and Garcia-Luna-Aceves, J.J. “MPATH: A Loop-free 
Multipath Routing Algorithm”. Elsevier Journal of Microprocessors 
and Microsystems (1995). 
[9] 
Ray, S., Guerin, R.A., and Sofia, R. “Distributed Path Computation 
without Transient Loops: An Intermediate Variables Approach”. 
Proceedings of International Teletraffic Congress (2007). 
[10] OPNET Technologies, Inc. OPNET University Program. [Online] 
http://www.opnet.com/services/university/. 
[11] Pritchard, J. K. “Energy Security: Reducing Vulnerabilities to Global 
Energy Networks,” 2009. [Online]. Available: http://www.dtic.mil. 
[12] Zaballos, A., Vallejo, A., Jimenez, J., and Selga, JM. “QoS Broker 
based management for heterogeneous Smart Electricity Networks”. 
Proceedings 
of 
the 
IEEE 
symposium 
on 
Computers 
and 
Communications (ISCC 2010), pp. 295-297. 
[13] Vallejo, A., Zaballos, A., Vernet, D., Orriols, A., and Dalmau, J. “A 
Traffic Engineering proposal for ITU-T NGNs using Hybrid Genetic 
Algorithms”. The International Journal On Advances in Internet 
Technology Edited by IARIA (2009) vol. 2, pp: 162-172. 
[14] Sobrinho, J. L. "Algebra and Algorithms for QoS Path Computation 
and Hop-by-Hop Routing in the Internet". IEEE/ACM Transactions 
on Networking (2002), vol. 10, num. 4, pp. 541-550. 
[15] Sobrinho, J. L. "An Algebraic Theory of Dynamic Network Routing". 
IEEE/ACM Transactions on Networking (2005), vol. 13, num. 5, pp. 
1160-1173. 
[16] Orda, A. and Sprintson, A. "Efficient algorithms for computing 
disjoint QoS paths". Proceedings of the IEEE INFOCOM 2004, vol. 
1, pp.730 – 738. 
[17] Garcia-Luna-Aceves, J.J. “Loop-free routing using diffusing 
computations”. IEEE/ACM Transactions on Networking (1993), 
vol.1, num. 1, pp.130-141. 
[18] Yuan, X. “On the extended Belman-Ford algorithm to solve two-
constrained quality of service routing problems”. Proceedings. Eight 
International Conference (1999), pp. 304-310. 
[19] Dijkstra, E.W. and Scholten, C.S. “Termination detection for 
diffusing computations”. Inform process lett, vol. 11, num. 1, pp. 1-4. 
(1980). 
[20] Li, Z. and Garcia-Luna-Aceves, J.J. “A distributed approach for 
multi-constrained 
path 
selection 
and 
routing 
optimization”. 
Proceedings of the 3rd international conference on Quality of service 
in heterogeneous wired/wireless networks, ACM International 
Conference Proceeding (2006), vol.191. 
[21] Turgay, K., Marwan, K., and Spyros, T. “An Efficient Algorithm for 
Finding a Path Subject to Two Additive Constraints”. Proceedings 
of ACM SIGMETRICS 2000, vol.28, num.1, pp.318-327. 
[22] Katz, D. and Ward, D. “Bidirectional Forwarding Detection”. 
Request for Comments: 5880 of Internet Engineering Task Force 
(IETF - 2010). 
[23] Murthy, S. and Garcia-Luna-Aceves, J.J. “Loop-free Internet routing 
using hierarchical routing trees”. Proceedings of the IEEE INFOCOM 
1997, vol.1, num.7, pp.101-108. 
[24] Behrens, J. and Garcia-Luna-Aceves, J.J. “Hierarchical routing using 
link vectors”. Proceedings of the IEEE INFOCOM 1998, vol.2, 
pp.702-710. 
[25] Perkions, C., Belding-Royer, E. and Das, S. “Ad hoc On-Demand 
Distance Vector (AODV) Routing”. Request for Comments: 3561 of 
Internet Engineering Task Force (IETF-2003). 
[26] Rangarajan, H. and Garcia-Luna-Aceves, J.J. “Making on-demand 
routing protocols based on destination sequence numbers robust”. 
Proceedings 
of 
the 
IEEE 
International 
Conference 
on 
Communications (ICC 2005), vol.5, pp.3068 – 3072. 
[27] Gokhale, S.S and Tripathi, S.K. “Routing metrics for best-effort 
traffic”. 
Eleventh 
international 
conference 
on 
computer 
communications and networks (2002), pp: 595-598. 
[28] Wang, J. and Nahrstedt, K. “Hop-by-hop routing algorithms for 
premium-class traffic in DiffServ networks”. Proceedings of the IEEE 
INFOCOM 2002, vol.2, pp.705-714. 
[29] Wang, Z. and Crowcroft, J. “Quality-of-Service Routing for 
Supporting Multimedia Applications”. IEEE Journal on selected areas 
in communications (1996), vol.14, num.7, pp.1228-1234. 
[30] Apostolopoulos, G., Kama, S., Williams, D., Guerin, R., Orda, A., 
and Przygienda, T. “QoS Routing Mechanisms and OSPF 
Extensions”. Request for Comments: 2676 of Internet Engineering 
Task Force (IETF-1999). 
[31] Ming-Hong, S., Si-Bing, W., and Ying-Cai, B. “A bandwidth 
constrained QoS routing optimization algorithm”. Proceedings of the 
International Conference on Communication Technology (ICCT 
2003), vol.1, pp.491-494. 
[32] Yang, Y., Zhang, L., Muppala, J., and Chanson, S.T. “Bandwidth-
delay constrained routing algorithms”. Computer Networks: The 
International 
Journal 
of 
Computer 
and 
Telecommunications 
Networking (2003), vol.42, num.4, pp.503-520. 
[33] Yuen, M.; Cheung, C. “Efficient path selection for QoS routing in 
load balancing”. Proceedings of the 9th Asia-Pacific Conference on 
Communications (APCC 2003), vol.3, pp.988-992. 
[34] Shigang, C. and Nahrstedt, K. “On finding multi-constrained path”. 
Proceedings 
of 
the 
IEEE 
International 
Conference 
on 
Communications (ICC 1998), vol.2, pp.874-879. 
[35] Korlmaz, T. and Krunz, M. “Multi-Constrained Optimal Path 
Selection”. Proceedings of the IEEE INFOCOM 2001, vol.2, pp.834-
843. 
 
429
International Journal on Advances in Networks and Services, vol 3 no 3 & 4, year 2010, http://www.iariajournals.org/networks_and_services/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

