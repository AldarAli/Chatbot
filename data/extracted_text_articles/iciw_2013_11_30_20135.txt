Monitoring Activities in an E-Learning 2.0 Environment  
A multi-agents system 
 
Henda Belaid-Ajroud 
LIPAH 
Faculté des Sciences de Tunis,  
Le Belvédère, Tunisie 
henda.ajroud@fst.rnu.tn  
Bénédicte Talon, Insaf Tnazefti-Kerkeni 
LISIC 
University of Littoral-Côte d’Opale (ULCO)  
Calais, France 
{Benedicte.Talon/Insaf.Kerkeni}@univ-littoral.fr
 
Abstract—This paper deals with the monitoring of students 
and teacher’s activities in a collaborative pedagogical 
environment. The specificity is that the learning platform is an 
E-Learning 2.0 environment. It is complex to track activities 
because the E-Learning 2.0 environments are adaptive and the 
tracking is not easy to be anticipated. This paper first presents 
the general context. Then, it describes the specific pedagogical 
method and environment and the studio used to generate the 
pedagogical environment. It continues with the architecture 
proposed to track activities. Then, the collected traces and 
provided indicators are presented.  
Keywords-Collaborative environments; E-Learning 2.0; Web 
2.0; Monitoring of activities, Multi-agents Systems 
I. 
 INTRODUCTION 
There are various forms of collaborative learning 
platforms. Among them, environments reflected in the 
literature under the name E-Learning 2.0 [1], allow teachers 
to exploit Web 2.0 applications to construct educational 
environments. They are a combination of specific features of 
Web 
2.0 
applications: 
Forum, 
Wiki, 
documents 
management, Blog, etc. The advantage is that Web 2.0 tools 
are directly available, generally free and they can easily be 
used in an educational setting [2][3]. The empowerment of 
teachers is at the heart of these solutions because the Web 
2.0 tools runs on all browsers. The actors may be released 
from the administration constraints generally associated with 
traditional architectures and easily share access to their 
resources. 
Researchers of the University of Littoral Côte d’Opale 
(ULCO) and the University of Picardie Jules Verne (UPJV) 
work on a Pedagogical Engineering Studio (PES) called 
MACADDAM (MAui for Computer Aided pedagogical 
Design bAsed on MAETIC) [4]. MAui is an acronym for 
“Méthode de conception de dispositifs pédAgogique 
Utilisant l’ethnographIe” derived from [5] and MAETIC for 
“Méthode pédAgogique instrumEntée par les Technologies 
d’Information et de Communication” [6]. This PES assists 
teachers in their efforts to design educational systems. 
Environments generated by MACADDAM are dedicated to 
education through collaborative projects. 
However, in the current version, services offered by the 
generated pedagogical environments have a lack of 
monitoring. However, in the field of collaborative learning, 
management of traces is important because it is necessary to 
analyze information about actors and their activities [7]. It 
provides the trainer with accurate and adequate information 
to track individual and collective participation. 
Tracking systems collect traces and interpret them with 
the computation of indicators. In fact, the indicators enable 
the evaluation of the learner. This evaluation can be 
individual or collective which is the evaluation of the 
learner’s group. Different types of indicators can be defined 
such as indicators to know acquired knowledge during the 
learning activity or to know the communication and the 
interaction between the learners of the same group. 
Tracking systems have already been developed such as 
APLUSIX [8], ACOLAD [9], aLF [10], SPLACH [11], 
TrAVis [12] and other ones.  However, each tracking system 
has a different target. All of these tracking systems are 
platforms-specific and none of them can be used with a Web 
2.0 learning platform. This is the reason that led us to 
develop a system dedicated to tacking activities in an E-
learning 2.0 environment. This developed system is a multi-
agents system (MAS) [13] and is coupled to the 
MACADDAM studio and implements functionalities to keep 
detailed history of students’ actions, group of students’ 
actions and teachers’ actions performed on the E-Learning 
2.0 platform. 
Section II describes MAETIC, the MACADDAM studio, 
specifies the requirements, and explains the choice of a 
multi-agent system coupled to this studio to track activities 
before discussing some related works. 
Section III describes this collaborative learning-oriented 
agent system. Section IV deals with collected traces and 
provided indicators. The last section concludes and presents 
some perspectives. 
II. 
THE MACCADAM STUDIO 
In this paragraph, we describe MAETIC method and the 
specificities of the MAETIC environments. 
A. MAETIC and its pedagogical environments 
Teachers of ULCO and UPJV have designed educational 
environments using Web 2.0 tools. A study of these 
environments allowed to extract a pedagogical method called 
MAETIC. MAETIC is dedicated to the management of 
project-based pedagogy in-group. It was validated through 
successive evaluations [14]. MAETIC aims at developing 
professional skills (transverse and domain skills) and guides 
groups of students in all stages of the project. The part of the 
260
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

system dedicated to students is called "MAETIC e-suitcase". 
The concept of e-suitcase refers to an environment "which is 
not bound to a fixed place of education." The e-suitcase 
includes access to the teacher’s logbook (important 
information, activities of the session, etc.), access to 
teacher’s resources (course materials, exercises to do, etc.) 
and access to student’s logbook. The teacher is informed on 
the progress of the project via the group’s logbook. The 
logbook describes the life of the project. The developed 
deliverables, the report of the activities and information on 
the project are available to the teachers and other members. 
The logbook is managed regularly. The method is described 
in [6]. 
The part of the pedagogical environment dedicated to the 
teacher is called "MAETIC Toolbox". A toolbox provides 
mechanisms to fill the teacher’s logbook, to check students' 
logbooks, to comment on their work, to assess their work, 
etc. 
So, in a MAETIC environment, the teacher: 
• 
Uploads articles and resources on his/her logbook. 
This logbook informs students about the life of the 
teaching unit.  
• 
Posts general comments about the work and about its 
progress.  
• 
Handles tools that enable him/her to communicate 
with students, 
• 
Oversees the work of the groups. Thus, he/she can 
view, download and comment the activities of the 
groups via the groups’ logbook. 
The student 
• 
Consults or download resources.  They are available 
and accessible via the teacher’s logbook. Each 
student must consult the teacher’s logbook before 
each session. 
• 
Uses tools allowing him to communicate with other 
students or with the teacher. 
• 
Realizes activities related to the planned project. The 
teacher helps to define these activities. The report 
and implementation of these activities are recorded 
on the group’s logbook. 
Fig. 1 synthetizes the different interactions. 
The next paragraph describes the aim and structure of the 
MACCADAM studio. 
B. MACCADAM  
MACADDAM is a Pedagogical Engineering Studio 
(PES). It helps teachers to deploy their own educational 
environments dedicated to the implementation of MAETIC. 
The studio assists them in the formulation of needs (design 
support) and releases them of repetitive and tedious tasks 
associated with the deployment of a teaching environment 
(development support). The environments are designed and 
are instrumented using Web 2.0 tools [4]. 
The PES assists the teacher in the formation of the 
pedagogical script and generates the e-suitcases and the 
toolbox.  
An assistance module drives the teacher throughout the 
design process. A generator module generates either a 
generic environment or a customized one (according to the 
teacher profile and the target skills). The studio offers the 
ability to select and identify activities to be implemented in 
the script. However, resources and activities appropriated to 
the training area are under the teacher’s responsibility. 
The next paragraph describes the needs in term of 
activities tracking and justifies the choice of a multi-agent 
architecture. 
C. PES needs and contribution of multi-agent systems 
Communication between teachers and students in a 
MAETIC environment is mainly done via Weblogs. Weblog 
technology was chosen for its usability. The weblog is 
accessible to everyone. In addition, weblogs can create a 
social relationship between students and seem to facilitate 
the students’ writing through the "posts" [15]. However, 
Weblog technology provides a very consistent material, easy 
to collect but more difficult to analyze. The time spent by the 
teacher to monitor and analyze the activities of the student is 
higher than the time spent in the traditional classroom [16]. 
The statistics about interaction enable the evaluation of 
the group’s life and its evolution. We are particularly 
interested in the status indicators of progress and 
sustainability of the group. 
Among indicators, one can cite:  
• 
Identification of work overload for a given student 
so he/she can be exempted to perform some 
activities,  
• 
Possibility of extending or shorting completion 
deadlines of an activity (change the training 
schedule),  
• 
Assessment of the state of completion of an activity 
or a task,  
• 
Evaluation of social relationships and productivity of 
a student, and so on. 
Our main goal is to provide a relevant assistance for the 
progress of the project activity. On one hand, we want to 
help students in the realization of the project in collaborative 
learning, and on the other hand, we also want to assist the 
teacher in the monitoring of both individual and collective 
activities. 
 
Figure 1. Users interactions in MAETIC 
261
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

Our goal is to develop a system that is able to collect and 
analyze data from the project activities. The system must be 
able to analyze the use of the environment and the data 
generated in this environment (forum, mail, meetings, etc.). 
To design the observation and assistance system, we have 
opted for an incremental and iterative approach. The 
environments generated by the MACADDAM studio will be 
equipped with this system. It is based on a multi-agent 
architecture described in the next section. 
The choice of a multi-agent architecture for the 
observation and assistance system is motivated by several 
reasons: 
• 
From a programming point of view, it is possible to 
add new agents or modify the behavior of existing 
agents without affecting the overall structure. In a 
research context, the possibility of change is a 
considerable advantage because it allows an iterative 
and incremental development. 
• 
We are interested in providing the ability to solve 
distributed problems in a multi-agent architecture. 
To meet the specifications outlined in the previous 
section, we propose to identify agents that are 
specialized in observation tasks and others that are 
specialized in assistance tasks. 
Moreover, in our case, we are faced with a distributed 
environment. The multi-agent approach allows to have 
distributed agents being able to communicate. 
D. Related Works 
Before discussing the proposed architecture, we review 
the approaches presented in the literature that provide multi-
agents platforms for collaborative learning. In the field of 
Artificial Intelligence and education, several approaches 
have been developed. 
For example, Guizzardi and al. [17] have developed a 
Peer-to-peer system called “Help & Learn”. This system was 
modeled using an agent-oriented language called AORML 
[18]. It is an open system that is designed to support the 
extra-class interactions between learners and tutors. “Help & 
Learn” is limited to providing assistance to learners who 
request it. Other systems have been developed. Fougeres and 
Ospina [19] have proposed a based-agent mediation system 
for the project management platform called iPdagogique. 
This system, modeled in AUML, serves as an interface 
between the human and the application to enhance their 
relationship and is used to promote collaboration among 
users. Recently in [20], the authors presented a model for an 
adaptive multi-agent system for dynamic routing of the 
grant’s activities from a learning environment. This model 
allows the assignment of activities taking into account the 
specialization of learners, their experience and the 
complexity of activities already taken. None of these three 
systems cares of monitoring learning and therefore, cannot 
trace user’s activities. 
Mbala and al. [21] have developed a multi-agent system 
called SIGFAD to support users in remote education. 
SIGFAD is modelled using the MASE methodology and 
uses the JAM model for building agents. It is interested in 
monitoring learning. 
However, it is not sufficiently independent and does not 
start up alerts to prevent tutors if there’s a problem with a 
learner or group.  
In the next section, the architecture of the tracking system 
is described.  
III. 
PROPOSED ARCHITECTURE 
The system uses tools to perform the following functions: 
• 
Give information on the process, the resources and 
the learning modalities (databases, catalogues, etc.); 
• 
Communicate and coordinate the actors (forum, 
chat, email, etc.); 
• 
Adjust the schedule of activities during the training; 
• 
Monitor, guide and control (logbook, support the 
link between learning, support resource allocation, 
etc.). 
We are interested in providing observation and support 
tools to ensure the following functions: 
• 
Course 
construction 
and 
management 
(self-
diagnostic tools, course management software, etc.);  
• 
Review and validation (assistance to individual and 
collective reviewing, etc.). 
Thus, we have identified three spaces: a teacher’s space, 
a student’s space and a group of students’ space. Each space 
has 
a 
descriptive 
name, 
functionalities, 
educational 
resources, technological tools (Web 2.0 tools) and functional 
tools for the observation of use. 
The MACADDAM studio generates the following tools 
to create the pedagogical environment: 
• 
Technological tools are based on web 2.0 
technologies. They are tools that the actors need to 
perform activities in their space. These include, for 
example, the student’s logbook and the teacher’s 
toolbox. 
• 
Functional agents are tools for the observation of 
use. These tools mark out the behavior of students, 
groups of students and teachers. They analyze traces 
too. 
We present in Fig. 2 an overview of our environment, 
with the different agents present in the system. We 
distinguish two types of user, namely the student and the 
teacher, and three workspaces, namely, the teacher’s space, 
the student’s space and the group’s space. We associate an 
agent to every user. The agent is located on the server. This 
agent migrates on the user’s workstation as soon as he/she 
connects. The agent is coded as a Java program; applets are 
programs living on the server which run on the client. This 
technology allows a user to run his/her agent directly from 
his/her client. The agent superintendent of the space groups 
lives on the server. It is active as soon as one of the students 
of the group is connected. This agent is in charge of 
providing the environment meta-information on the activities 
(beginning date, end date, concerned persons, used tools, 
etc.) and on the forums (beginning date, end date, etc.). We 
were also interested in the supervision of the interactions 
between the various users during the formation. We have 
defined an agent overseeing every communication tool 
(email, forum, chat, blog). This agent supervises all the 
262
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

actions of a user during the session. Every event is dated and 
commented. 
An agent manages the group’s space. It aggregates 
information 
about 
connections, 
activities 
and 
communication. This information allows to appreciate the 
life of the group, the productivity of the members and the 
level of realization of the educational activities. An 
evaluation agent analyses this information to estimate the 
lifecycle of the formation. This agent can make objective 
decisions about modifications of the calendar of activities. 
The main agents of the system are the following ones: 
• 
A-LEARN: It supervises the student’s space. It 
allows the supervision of all activities of a student 
and provides an overall evaluation of his behavior 
during a training session; 
• 
A-TEACHER: It supervises the teacher’s space. It 
supervises educational resources loaded in his/her 
logbook, access to group’s logbooks and used tools 
to communicate with students. 
• 
A-GROUP: It supervises the group’s space during a 
session. It supervises actors' activities during a 
session. It indicates the degree of respect, the success 
rate, the start date and end date of an activity. This 
agent provides the list of present and absent students 
and statistics concerning the progression of each 
activity. It reminds students about deadlines and 
notifies the late groups by sending alerts. 
• 
A-TOOL: It supervises tools and provides statistics 
about their use (Email, Chat, Forum, blog, CVS, 
etc.). 
• 
A-EVAL: This agent aggregates the information 
collected in order to structure them and to present it 
to the Evaluation module of MACADDAM studio 
IV. 
TRACES 
The management of the interactions taking place within 
the educational system is done thanks to the collected traces. 
Generally, a trace represents the interaction of the user 
with the system. As it was defined by G. Dyke [122], 
“informally, the traces of an activity are the marks which that 
activity leaves on the environment”. In this educational 
platform, we adopt the definition of a trace given by K. Lund 
and A. Mille in [23]. According them1, “a trace is a sequence 
of observations located in time. The observation is either an 
interaction between humans mediated in various ways by 
computer, or a sequence of actions and reactions between a 
human and a computer”. 
When using the educational platform, traces are 
collected. The processing of traces (traces observed from 
various sources - from server-side as well as from client side) 
provides knowledge about the activity called learning 
indicators. 
A. Collecting traces 
Each action of the learner or of the teacher can be traced 
through the agents defined in the system as shown in Fig. 1. 
The traces are dealing with synchronous or asynchronous 
interactions of the user with the system. 
For example, to facilitate the control of emails between 
learners, we defined five types of messages: 
• 
Proposition: A proposes something to B (for 
example, to become a member of the group, to 
perform a task, etc.) 
• 
Proposition rejection: B uses it when he rejects the 
received proposition. 
• 
Acceptance of proposition: B uses it when he 
accepts the received proposition. 
                                                             
1 Translation under authors’ responsibility 
 
Figure 2. An overview of the environment 
263
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

• 
Information: It is used to communicate information 
or a result. Reply to this message type is optional. 
• 
Help: It is used when A wants some help from B. 
Therefore, the trace observed after transmitting an email 
includes: the subject, the date and time, the sender, the 
receiver and the content. When observing the blog of a 
group, the A-TOOL agent notes for each access of the blog: 
the date and time, the acceded resource, the learner who 
acceded, the operation done. 
B. Providing indicators 
Indicators allow to know: 
• 
Who are the people interacting with the system? 
• 
What has been handled? 
• 
When (time or duration). 
• 
How: through which tool? 
The two main roles of the indicators in the platform are 
alert and appreciation. Table 1 presents some indicators. 
 
TABLE I.  
SOME INDICATORS 
Indicator 
Purpose 
Target user 
Percentage of activities carried out per learner 
Alert 
Learner/ Group 
of learners 
Sleeping learner 
Alert 
Learner/ Group 
of learners 
Duration of the consultation of each resource 
per learner 
Appreciation 
Teacher 
Duration of the realization of each activity 
per learner 
Appreciation 
Teacher 
 
C. Use of the defined indicators 
The alert indicators are used by A-LEARN agent and by 
A-GROUP agent. They inform the learner and the group of a 
problem. Communication between members allows to see 
what is happening and to find a solution. If no solution is 
found, the group can inform the teacher. The appreciation 
indicators are used by A-EVAL to evaluate the educational 
session. The teacher uses this information to correct his/her 
pedagogical scenario. 
V. 
CONCLUSION AND PERSPECTIVES 
We have designed an Agent Based System generated by 
MACADDAM during the generation phase. 
All agents of this assistance system have not been yet 
fully developed. Several issues remain to be explored and 
implemented. We especially want to make MACADDAM 
more autonomous and proactive. Thus, the environment 
should be able to alert the teacher and the students when a 
group presents a bursting risk or is in a position of 
educational failure.  
The proposed system was coupled to the Learning 
Management System (LMS) ILIAS and can be adapted to 
other LMS such as Moodle.  However, the number of 
defined indicators in the system is not very important. We 
intend to define an indicator library and let each tutor select 
the indicators that interest him. 
Several tools were developed recently for the agent-
oriented programming, such as JADE [24], Zeus [25], 
MadKit [26], Agent Builder [27]. We deploy the system on 
the multi-agents platform Madkit because MadKit is 
intended for the development and the execution of multi-
agents systems and more particularly for multi-agents 
systems based on organizational criteria. 
REFERENCES 
[1] 
S. 
Downes, 
“E-learning 
2.0”, 
eLearn 
Magazine, 
http://elearnmag.acm.org/featured.cfm?aid=1104968, October 2005, 
[retrieve: 05, 2013] . 
[2] 
B. J. Williams and J. Jacobs, “Exploring the use of blogs as learning 
spaces in the higher education sector”, Australasian Journal of 
Educational Technology (AJET), Vol. 20, n°2, pp. 232-247, 2004. 
[3] 
P. A. Caron, “Web services plug-in to implement "Dispositives" on 
Web 2.0 applications”, Proc. Second European Conference on 
Technology Enhanced Learning (EC-TEL 07), Springer LNCS Crete, 
Greece, pp. 457-462, 2007. 
[4] 
B. Talon and D. Leclet, “Towards a computer aided pedagogical 
engineering”, Proc. 3rd International Conference on Computer 
Supported Education (CSEDU 11), Noordwijkerhout. Netherlands. pp 
159-164, 6-8 may, 2011. 
[5] 
D. Leclet, “Environnements Interactifs d’Apprentissage dans des 
contextes professionnels. Des Tuteurs Intelligents aux Systèmes 
Supports d’Apprentissage à Distance“, HDR Thesis, Amiens, 
University Picardie Jules Verne, 2004. 
[6] 
D. Leclet and B. Talon, “La méthode pédagogique MAETIC ». In 
Libro Veritas (Eds), 2008 . 
[7] 
L. Settouti, N. Guin, A. Mille and V. Luengo, “A Trace-Based 
Learner Modelling Framework for Technology-Enhanced Learning 
Systems”, Proc. 10th IEEE International Conference on Advanced 
Learning Technologies (ICALT 10). Sousse, Tunisia. pp. 73-77, 
2010. 
[8] 
D. Bouhineau, J.F. Nicaud, H. Chaachoua, M. Bittar, M. and A. 
Bronner, “Two Years Of Use Of The Aplusix System”,. 8th IFIP 
World Conference on Computer in Education, Cape Town, South 
Africa 2005. 
[9] 
A. Jaillet., « Peut-on repérer les effets de l'apprentissage collaboratif à 
distance? », Distances et savoirs, Vol. 3, pp. 49-66.  DOI : 
10.3166/ds.3.49-66 (2005) 
[10] O. C. Santos, A. Rodríguez, E. Gaudioso and J.G.  Boticario, 
“Helping the tutor to manage a collaborative task in a web-based 
learning environment.”, AIED2003 Supplementary Proceedings, Vol. 
4, pp. 153-162, 2003.  
[11] S. Georges., “Apprentissage collectif à distance, SPLACH: un 
environnement informatique support d'une pédagogie de projet”. 
Doctoral dissertation, Université du Maine, 2001 
[12] M. May, S. George and P Prévôt, “TrAVis to Enhance Students’ Self-
monitoring in Online Learning Supported by Computer-Mediated 
Communication 
Tools”,. International 
Journal 
of 
Computer 
Information Systems and Industrial Management Applications 
(IJCISIM), 3, pp. 623-634, 2011. 
[13] J. Ferber, 1999, “Multi-Agent Systems. An Introduction to 
Distributed Artificial Intelligence”, Vol. 1, Reading: Addison Wesley, 
London, 1999. 
[14] D. Leclet and B. Talon, “MAUI Experiment:a Method for Designing 
E-Learning Environments in Project Management Training”, 
Proceedings of World Conference on Educational Multimedia, 
Hypermedia and Telecommunications, ED-MEDIA, Vienna, Austria, 
AACE/ Springer-Verlag (Ed.), pp. 1-8, 2008. 
[15] S. Fiedler, “Personal Webpublishing practices and conversational 
learning”, Symposium on introducing disruptive technologies for 
learning: Personal, Webpublishing and Weblogs. ED-MEDIA, 
Lugano, 2004. 
[16] I. Serguievskaia and H. Al-Sakran, “Framework Architecture of e-
Loan Negotiation System”, Information and Communication 
Technologies: From Theory to Applications (ICTTA), pp. 1-6, 2008. 
264
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

 
[17] R. Guizzardi-Silva, LM. Aroyo, G. Wagner, “Help&Learn: A peer-to-
peer architecture to support knowledge management in collaborative 
learning communities”. Revista Brasileira de Informatica na 
Educac¸ao, 12 (1). pp. 29-36, 2004. 
[18] G. Wagner : “The Agent-Object-Relationship Meta-Model: Towards 
a Unified View of State and Behavior”. Information Systems 28:5, 
pp. 475504, 2003. 
[19] A.J. Fougères, P. Canalda : “iPédagogique : un environnement 
int´egrant la gestion assist´ee de projets d’´etudiants”. Colloque TICE 
2002, Lyon. 
[20] D. Simian, C. Simian, I. Moisil, I. Pah : Computer Mediated 
Communication and Collaboration in a Virtual Learning Environment 
Based on a Multi-agent System With Wasp-Like Behavior in Large-
Scale Scientific Computing book 2008, pages 618-625. 
[21] A. Mbala, C. Reffay, T. Chanier : “SIGFAD : un système multi-
agents pour soutenir les utilisateurs en formation `a distance”, 2003. 
[22] G. Dyke, “A model for managing and capitalizing on the analyses of 
traces of activity in collaborative interaction”, PhD dissertation, 
French, 2009. 
[23] K. Lund and A. Mille, “Traces, traces d'interactions, traces 
d'apprentissages : définitions, modèles informatiques, structurations, 
traitements et usages”, (Eds. J.C. Marty & A. Mille). Analyse de 
traces et Personnalisation des EIAH dans la collection Traité 
Informatique et Systèmes d'Information (dir. J-C Pomerol & J-M 
Labat). Lavoisier-Hermes : Paris, pp. 21-56, 2009. 
[24] G. Rimassa, F. Bellifemine and A. Poggi, « JADE - A FIPA 
Compliant Agent Framework”, Proc PMAA 99, pp. 97-108, London, 
April 1999. 
[25] L. C. Lee, D. T. Ndumu and H. S. Nwana, 1998. ZEUS: An 
Advanced Tool-Kit for Engineering Distributed Multi-Agent 
Systems, In Proceedings of the Practical Application of Intelligent 
Agents and Multi-Agent Systems (PAAM 98), pp. 377-392, London, 
1998. 
[26] O. Gutknecht and J. Ferber, 2000. Madkit: a Generic Multi-Agent 
Platform, Proc. 4th International conference on Autonomous Agents 
(AGENTS 2000), Barcelona, ACM Press, pp. 78-79, 2000. 
[27] AgentBuilder U.G., An Integrated Toolkit for Constructing Intelligent 
Software 
Agents, 
AgentBuilder, 
User’s 
Guide, 
April 
2000
 
265
Copyright (c) The Government of Bénédicte TALON, 2013. Used by permission to IARIA.     ISBN:  978-1-61208-280-6
ICIW 2013 : The Eighth International Conference on Internet and Web Applications and Services

