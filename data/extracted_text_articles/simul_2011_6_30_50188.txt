Simulation hypotheses 
A proposed taxonomy for the hypotheses used in a simulation model 
 
Pau Fonseca i Casas 
Universitat Politècnica de Catalunya 
Statistics and Operations Research department 
Barcelona, Spain 
pau@fib.upc.edu 
 
 
Abstract— Defining a simulation model implies the use of 
different knowledge of the system we are going to model. 
Often, this knowledge is not complete or lacks in the needed 
detail in order to fully explain the behavior and the structure 
of the system. In that case, different hypotheses must be used 
in order to constrain the reality, or allow the needed complete 
and unambiguous definition of the model. However, all the 
hypotheses used do not lie in the same category. In this paper, 
we propose taxonomy for the hypotheses used in a simulation 
model in order to detect, previously to any implementation or 
model definition the possible lacks in the model construction.  
Keywords-simulation hypotheses; validation; verification; 
formal languages. 
I. 
DEFINING A SIMULATION MODEL 
Building a simulation model is an iterative process where 
usually different personnel are involved. This process starts 
always describing the system we want to represent, and what 
are the key elements that must be taken in consideration in 
order to define the model.  Once we have the definition of 
what is “my system” we can go further to describe what is 
the problem we try to solve. As is stated by Professor George 
Box, “all models are wrong, but some models are useful.” It 
is interesting to keep this present in order to assure that we 
are performing a good validation process of the model as we 
can see next. Our model, although maybe is not correct, must 
be useful to our purposes, a good cite of this can be found on 
[1]: “A simulation model should always be developed for a 
particular set of objectives. In fact, a model that is valid for 
one objective may not be for another.” 
Regarding to the process of Validation, Verification and 
Accreditation (VV&A) of a simulation model, the phases are 
based on the definition of “my system”, the conceptual 
model, and the implementation of the model. Sargent [2] 
proposes the Figure 1 as the cycle that a simulation project 
follows until its completion. As we can see in Figure 1, data 
validation is assumed to be a central point in the whole 
simulation process. In the next sections we explore how the 
different model hypotheses work in each one of the different 
stages of the model validation that accomplishes the 
“Conceptual 
Model 
Validation”, 
the 
“Operational 
Validation” and the “Data Validity”. 
 
Figure 1. Validation and Verification process in a simulation model [2]. 
II. 
WORKING WITH THE HYPOTHESIS 
Often the system is a complex reality. Even though we 
can work with simple systems, we need to use hypotheses in 
order to constrain what is “my system”. From this definition 
of “my system”, the scope of my experimental framework, 
we need to go further defining a model that represents the 
hypotheses, the structure and the behavior of the elements 
that compose “my system”. 
This 
model 
must 
be 
defined 
using 
a 
formal 
representation, independent of the tool selected to perform 
any implementation. The need of define a formal 
representation of the system is widely exposed in several 
books and papers, but maybe three key aspects must 
convince us of the need of use a formal representation of the 
model.  
First, the formal representation of a model, as is stated on 
[3], can be considered a product by itself. This is quite 
interesting since sometimes the representation of the 
knowledge that rules the different processes in a system (for 
example an industry) can be more interesting than the 
simulation by itself. The formal representation of a model 
helps to understand how the model behaves, and 
consequently how the system is constructed. Second, the 
formal 
representation 
of 
the 
model 
simplifies 
its 
implementation and enhances its maintainability. And third, 
a formal representation of a model simplifies the 
understanding of the model by all the different actors that are 
involved 
in 
the 
simulation 
project, 
improves 
the 
communication. 
114
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

The formal representation of any simulation model starts 
by the definition of a hypotheses document that represents 
how I understand the behavior and the structure of “my 
system”. The formal representation of a simulation model is 
the formal representation of the simulation model 
hypotheses, hence the correspondence between the model 
and the hypotheses must be cleared understood, and this is 
often unusual. The main concern here is that in simulation 
literature, usually do not exist any classification between all 
the different hypotheses that can take part in the definition of 
the formal model. Not all the hypotheses have the same 
effect on the simulation model, and not all the hypotheses are 
needed on all the stages of the simulation model 
development. For that reason we propose to classify the 
hypotheses in three different categories as is explained next. 
This helps the model validation, because the modelers can 
focus its attention on the hypotheses related to each stage of 
validation. Also this taxonomy helps to understand the 
implications on the modifications on the knowledge we have 
of the system, or in the technology we use to implement the 
simulator. 
III. 
HYPOTHESES TAXONOMY 
First are those hypotheses that allow defining how the 
system behaves. Those hypotheses usually describe the 
system. In some papers related to VV&A are known as 
structural hypotheses. Mainly we want to add as many as we 
can of these hypotheses, since helps us in the description of 
the model. If we have a deeper knowledge of the system we 
can use a lot of these hypotheses describing its behavior. We 
know (or believe) that these hypotheses are true. We propose 
to name these hypotheses Systemic, since they describe the 
behavior of the system. These hypotheses can also be 
divided in two categories, those who are related with the data 
of the model, representing the flow of the elements of the 
system, and those related with the structure of the model, 
representing the underlying elements of the system. 
Systemic Data hypotheses are those related with the 
data assumptions, which define the different probability 
distributions that rule the behavior of the model elements. 
Systemic Structural hypotheses can be those that represent 
the relations between the different elements that compose the 
model, the model behavior. 
The other category is composed by the hypotheses that 
simplify the model we are going to build, named 
Simplification hypotheses. These hypotheses are useful in 
order to reduce the complexity of the model. Always, 
because the resources, the time we have to implement the 
model, and the knowledge we have of the system are limited, 
we must use this kind of hypotheses.  
These three categories of hypotheses encompass all the 
hypotheses that can be used in a simulation project, with the 
main objective of simplify and help in the VV&A process 
and to help in the understanding of the nature the decisions 
taken during the modeling process. 
IV. 
VALIDATING A SIMULATION MODEL 
Validated means that the hypotheses are assumed as true 
by all the parts involved in the simulation project. However, 
we cannot assure that a model obtained from a set of 
hypotheses is true; we can only assure that a model is false. 
Also modeling can be useful for many other reasons but 
predict [4], we can assume that a model is valid, and for that 
the applied hypotheses are valid, for a specific purpose. In 
order to conduct the Validation process in a simulation 
project, Naylor and Finger [5] proposed combining the three 
historical methods of rationalism, empiricism, and positive 
economics into a multistage process of validation. This 
validation method consists of: 
1. Developing the model’s assumptions on theory, 
observations, and general knowledge. 
2. Validating the model’s assumptions where possible 
by empirically testing them. 
3. Comparing (testing) the input-output relationships of 
the model to the real system. 
Figure 1 mainly shows this process, and as we can see on 
it we must validate three aspects: 
1. Data validation. 
2. Conceptual model validation: logical structure and 
hypothesis. Conceptual model validity is determining 
that (i) the theories and assumptions underlying the 
conceptual model are correct and (ii) the model’s 
representation of the problem entity and the model’s 
structure, logic, and mathematical and causal 
relationships are “reasonable” for the intended 
purpose of the model. 
3. Operational validity: In this step, see if the outputs of 
the model have the accuracy required in accordance 
with the problem. 
Also we can validate according [6]. 
1. Experimental validation: analyze if the experimental 
procedures used to obtaining the results are sufficient 
accurate. 
2. Solution validation: in this validation the focus is on 
the accuracy of the results obtained from the model of 
the proposed solution. This validation is useful for the 
modellers in order to learn. 
In this paper we are focused on the three first aspects and 
we avoid analyzing the experimental validation and the 
solution validation.  
Since the validation process is the process of comparing 
the behavior of the model and the behavior of the real system 
in order to assure that we build the correct model, we focus 
in the formal representation of the model, although some 
techniques to test the model validity (as we can see next) 
uses a specific implementation of the model. This implies 
that we accept that the implementation of the model is 
correct (verification is done correctly). We avoid in this 
paper of talking about the verification of the tool that 
implements the simulation model. 
Also, since the formal representation of the model lies on 
the hypotheses, the process of validate a model is the process 
of validate the different hypotheses used to build the formal 
representation of the simulation model. 
In the next table, we define what kind of hypotheses must 
be validated for each one of the different aspects that must be 
validated. 
115
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

TABLE I.  
HYPOTHESES VALIDATED IN EACH ASPECT. 
 
Systemic / 
Structural  
Systemic 
/ 
Data  
Simplification 
Validation 
of data 
 
X 
 
Validation 
of the 
conceptual 
model 
X 
 
X 
Operational 
validity 
X 
X 
X 
 
In order to validate the data, we must focus our efforts in 
the Systemic Data hypotheses. This implies that the nature of 
the tests that can be performed must focus on analyze the 
data we are going to use in the model. Here, we propose to 
distinguish between two aspects related to the data, the 
structure and the nature. The structure represents the shape 
that the data follows, while the nature means the source of 
this data,  where the data lives. In that case, we can perform 
Chi-square tests in order to assure that the structure of the 
data is correct [7], [8]. To analyze the nature of the data, we 
must detect if this data will be always up to date, often 
assuring that an institution or research center take care of this 
work. This is usually a key aspect in order to perform 
environment simulation models. As an example a wildfire 
model needs information regarding of the vegetation, the 
digital terrain model (DTM), the winds, etc. All the 
validations tests proposed, related with the Systemic Data 
hypotheses, focuses on the data structure. The validity of the 
nature of the data is based on assure that the institutions 
(structures, enterprises, etc.) needed in order to obtain the 
data and keep this data up to date during the life of the 
simulator, exists. The validation of data structure is the 
validation of the Systemic Data hypotheses. 
The conceptual model represents the structural relations 
of the different model elements and the behavior of the 
different element that compose the model. To validate the 
conceptual 
model 
we 
must 
focus 
on 
the 
formal 
representation of the model or in the implementation of this 
formal representation in order to validate mainly, the 
Structural Systemic and the Simplification hypotheses.  
In brief, to validate the conceptual model we must 
validate Structural Systemic hypotheses and Simplification 
hypotheses. This implies that we must define techniques in 
order to assure that (i) the Structural Systemic hypotheses are 
correct for our purposes, and (ii) the Simplifications 
hypotheses do not transform the model in a caricaturing of 
the reality. 
The Operational validity is focused in the results that we 
can obtain from an implementation of the model. Some of 
the methodologies presented here, like Black Box validation 
among many others, imply the use of all the model 
hypotheses, since the modeler try to validate the whole 
behavior of the computer program that implements the 
model. In that case we often cannot distinguish if the results 
(in case that the results are wrong) are due to an incorrect 
(Data or Structural) Systemic hypotheses, due to a wrong 
Simplifying 
hypotheses, 
or 
due 
to 
an 
incorrect 
implementation of the model introducing the verification 
phase into account. 
In order to detect the sort of hypotheses that is validated 
depending on the validation methodology used, we propose a 
classification of some of well-known validation methods, 
and what are the hypotheses that they try to validate. In that 
case we are focused on the validation of a specific class of 
hypotheses, instead to try to validate the whole model. 
V. 
VALIDATING THE HYPOTHESES 
Different papers and books describe several tests related 
to the model validation  [1] [2] [7] [8] [9]. Taking some of 
the tests described on [2] we are going a little further trying 
to define what are the hypotheses that are tested on each test. 
This will help us to define what are the batteries of tests we 
must use in order to build a good model, since as we can see 
next, not all the tests are focused on the same kind of 
hypotheses. The tests we analyze are (i) Validation face (ii) 
Black Box validation, (iii) Turing tests, (iv) Comparing with 
other models, (v) Degenerate tests, (vi) Extreme Condition 
tests, (vii) Event Validity and (viii) Variability of the 
Parameters and Sensitivity Analysis. For each one of these 
test we propose a classification depending on the hypotheses 
that we argue that mainly check. 
In Face validation, the experts analyze the results 
obtained from the simulation model. From this analysis they 
can recognize the correctness of a model. One example could 
be to test if a simulation model of a specific machine 
behaves similar to the system machine. In this case, like in 
Black Box validation, the model is seen as a whole, 
implying that the validation is done over the complete set of 
hypotheses. Other similar case is Turing tests; in that case, 
the simulator generates fake documentation that is merged 
with real documentation. Again, the experts determine, 
examining the documentation that contains real and fake 
documents, what are the fake documents generated by the 
simulator. Finally, in this category, the comparison of the 
model outputs with Historical Data, allows to understand if 
the model is behaving as expected, at least for a scenario that 
is reproducing the behavior of an existing system. Looking 
these tests we can argue that the model is tested as a whole, 
for that the hypotheses tested are all, the Structural and the 
Simplification hypotheses. This family of validation tests is 
related with the Operation validity. 
On the tests based on the comparison with other 
models, the underline idea is that if other models work fine, 
its outputs must be similar. As an example, if we have an 
analytical model, we can compare the outputs of this model 
with a new simulation model. On this kind of test we can 
chance the input data used and the model parameters in order 
to validate if both models follows the same patterns for the 
results. This allows determining if the structural relations of 
the models are correct. This test focuses on the structure of 
the model, we modify the data and we assume that the data is 
correct. For that in this kind of tests often only Systemic 
Structural hypotheses are tested, although the Simplification 
hypotheses can be tested too, since some of the decisions on 
the structure of the model rely on them. 
116
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

On the Degenerate Tests is analyzed the model’s 
behavior modifying the values of input and some selected 
internal values. The objective is to test if the modification of 
these parameters is coherent with the expected result. As an 
example if we increase the service time of a server we expect 
that the number of elements in the queue increases. Similar 
to this on Extreme Condition Tests is supposed that the 
model structure and outputs should be credible although 
using any extreme and unlikely combination of values for the 
variables. On Fixed Values tests we analyze the outputs for 
a well know values for the parameters of the model. In this 
test we look the outputs in order to compare them with the 
expected results. On these tests we are focused on understand 
if the relation between the elements are correctly described, 
for that these tests focuses on the Systemic Structural 
hypotheses. Note that in these tests we assume that the model 
is valid and we look the model to understand if the relations 
between the model elements are correct, no Simplification 
hypotheses are tested here. 
Comparison with other models, Degenerate, Extreme 
Condition and Fixed Values tests are related with the 
validation of the conceptual model. 
Variability of the parameters and sensitivity analysis 
allows analyzing the factors that have greatest impact on the 
performance measures. This allows determining what 
elements must be modeled carefully and detecting possible 
errors on the definition of the relations of the model 
elements. In this sort of tests we are focused on the Systemic 
Structural and Data hypotheses. We can detect if the 
probability distributions are correctly represented and if the 
relations between the different elements are correctly 
implemented. As an example, if we add between two model 
elements a causal relation when in the system only a 
correlative relation exists, we are introducing an error that 
can be detected with this test. This test is related with the 
validation of the conceptual model and the validation of the 
data. 
On the Event Validity we compare the occurrences of 
some events with the real occurrence of those events in the 
system. As an example, the number of “broken” event 
occurrences in a specific machine of the model. This kind of 
test can be useful to test the Systemic Data hypotheses since 
usually the events that rule the behavior of a simulation 
model are defined using known probability distribution or an 
empirical distribution obtained from a database. This test is 
related with the data validation. 
Other methods exists to validate the model, like Internal 
Validation, Predictive Validation, the use of Traces or the 
use of the Animation to understand if the model behaves as 
expected [2]. In Table II the description of the hypotheses 
tested on each one of the tests is shown. Subsequent to this 
table, if we want to validate our simulation model, at least is 
needed to test once all the hypotheses. This implies that we 
must select the tests that allow doing this, for instance 
selecting Compare with other models and Events tests, or 
Degenerative, Variability of the parameters and Black Box 
tests. 
 
TABLE II.  
HYPOTHESES VALIDATED ON SOME TYPICAL TESTS 
 
Systemic / 
Structural 
Systemic 
/ Data 
Simplify 
Validation “Face” 
+ 
+ 
+ 
Turing tests 
+ 
+ 
+ 
Black box 
+ 
+ 
+ 
Historical data 
+ 
+ 
+ 
Compare with other 
models 
+ 
 
+ 
Degenerative 
+ 
 
 
Extreme conditions 
+ 
 
 
Fixed values 
+ 
 
 
Variability of the 
parameters, 
sensitivity analysis 
+ 
+ 
 
Events 
 
+ 
 
 
Following the approach proposed by Naylor and Finger, 
and understanding that we need to validate all the 
hypotheses, we can start with the validation related to the 
Data, then continue with the conceptual model and finally 
perform an operational validity once a preliminary version of 
the model is constructed. We can use Table I to understand 
the hypotheses that must be validated on each validation, and 
Table II to select the appropriate test. We can start 
performing the goodness tests for the distributions we are 
going to use in our simulation model, and selecting some test 
that allows validating the Structural Data hypotheses, like the 
Events test. These tests are focused on the structure of the 
data. It is also needed to assure the validity of the nature of 
the data, or at least that is enough for our project purpose. As 
we said previously that means that an institution or enterprise 
assures that we have the data up to date in order to use it in 
our simulation model. Once we have the validation of the 
data we can perform the validation of the conceptual model. 
We can select some of the test that verifies this. Since we 
have the Systemic Data hypotheses validated, we can focus 
our efforts in the validation of the Systemic Structural 
hypotheses, using as an example the Degenerative test. Also, 
we can use the compare with other models test to test again 
the Systemic Data hypotheses (note that comparing with 
other models can be time demanding due to we need to have 
other models to perform this comparison). 
Finally, we can perform the Operational validation. Note 
that in this stage, if we have all the hypotheses tested (we 
previously have been performed an Events and Compare 
with other models tests) we can argue that our model have all 
the hypotheses validated, hence the Operational validation is 
done. However, since the validation process never assure that 
we have a model correct (the validation can only assure that 
we have an invalid model) we can perform here some of the 
tests that works with all the hypotheses, like the Turing tests 
to improve our confidence in the model. Remark that since 
not all the tests are focused on the same typology of 
hypotheses we can argue that it is interesting to test first the 
model with tests that are focused on certain hypotheses in 
order to detect possible mistakes. It is more difficult to find 
an error in our model if we test all the hypotheses using 
117
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

Black box test that if we are testing only the Structural 
hypotheses using the Extreme conditions test. 
VI. 
USING NOT VALIDATED HYPOTHESES 
Validate a simulation model is a time demanding task, 
and often we need to work with models that have some of 
the hypotheses not validated (as an example to analyze 
extreme conditions or to validate Systemic Structural 
hypotheses). Since not all the hypotheses have the same 
effect on the model, we can select what are the more 
interesting tests to be performed first in order to validate the 
more critical hypotheses first, always depending on the 
purpose on the model. Again, remark that we are looking for 
a useful model, often we can assume to work with non-
validated hypotheses. In the table III we show if usually is 
desirable or not working with no validated hypotheses 
because the effects that this can imply to the model, again 
regarding to achieve a specific result. Wanted means the 
desired state of the hypotheses, Useful states means that, 
although it is not a desirable state, can be useful for the 
model construction, as an example to perform the validation 
of some model hypotheses, or to obtain some values from a 
hypothetical data. It is interesting to remark here that the use 
of Simplification hypotheses can be Useful, but never is 
desirable. The final objective of a simulation model is to 
work without simplifications. We must note that the 
simplification hypotheses are always false. That means that 
we know for sure that the reality is more complex that the 
structure that we are depicting on the model. Lastly 
Unwanted means that this state of the hypotheses is 
undesired for any purpose of the simulation model. 
TABLE III.  
 EFFECTS OF USING NO VALIDATED HYPOTHESES. 
 
Systemic / 
Structural 
Systemic / 
Data 
Simplification 
Validated 
Wanted 
Wanted 
Useful 
Non 
validated 
Unwanted 
Useful 
Unwanted 
 
As we said previously, Systemic Structural hypotheses 
depict the relations between the different elements that 
compose the model. If these relations are not well defined, 
the model is not correct. For that, using no validated 
systemic structural hypotheses is an unwanted state, since we 
need to incorporate the knowledge of the client, and the 
client must assume that the relations depicted in the model 
are the relations that exist in the system, assuming the 
Simplification hypotheses as true. 
On the case of Systemic Data hypotheses, using no 
validated data can be useful for testing purposes. As we said 
previously, Systemic Data hypotheses are those related with 
the data assumptions, which often define the different 
probability distributions that rule the behavior of the model 
elements. In some cases it is needed to use no validated data 
in order to analyze the behavior of the model in some 
specific circumstances, or as we see in Table II to test that 
the Systemic Structural hypotheses are correct. For this, 
using no validated Systemic Data hypotheses can be useful.  
Finally, if we are using validated Simplification 
hypotheses on our model, we are assuming that they are 
useful in order to achieve our expected result with the project 
constrains (technology, time, resources, knowledge, etc.). 
Like in the case of the Systemic Structural hypotheses, if 
these simplification hypotheses are not validated, often 
implies that we are using some simplifications in or model 
that the client maybe cannot assume. This is dangerous for 
the project, and often reflects a bad communication with the 
client. As is stated in [1], the communication with the client 
from the beginning of the project, and the definition of a 
good hypotheses document is a key element for the success 
of a simulation project. Again, note that the desired state (all 
in wanted) implies to avoid the use of simplification 
hypotheses. 
VII. 
WORKING WITH THIS TAXONOMY, WRITING THE 
HYPOTHESES DOCUMENT 
As is stated on [1], the hypotheses document is a key 
element in the success of a real simulation project. Starting 
with some initial meetings, it is needed to start the redaction 
of this document that describes in detail the model 
assumptions and main objectives. This document is simple 
but clear, and we propose to use the template shown next. In 
this template we categorize, for each one of the different 
elements of the model the hypotheses used. Also, since we 
need to describe the Systemic Structural hypotheses we can 
use a formal language to describe the structure and the 
behavior of the model in a complete and unambiguous 
manner. A formal language like SDL [10] [11], DEVS [12] 
or Petri Nets [13] [14] [15] among others, becomes a 
powerful tool to represent the Systemic Structural 
hypotheses. In the diagrams of the model, we show the 
elements we are going to represent and the relation between 
all the elements. Remember that using a formal language to 
represent the model allows using some static methods to 
validate the correctness of the Structural Systemic 
hypotheses [2]. The proposed outline of the document has 
the next sections: 
1. Description of the system. 
2. Purpose of the model. 
3. Simplification hypotheses for the external view of the 
model. Showing for each one if has been validated by 
the client or not. 
4. Systemic Data hypotheses for the external view of the 
model, again showing if have been validated each one 
of them by the client. 
5. Systemic Structural hypotheses for the external view 
of the model, using a formal language. This helps to 
the understanding of what are the key elements of the 
model that we are going to simulate. 
6. For each one of the different elements of the model 
we detail its hypotheses. Again the Systemic 
Structural hypotheses can be represented (and we 
support this) using a formal language. 
In our projects, we write in red the hypotheses that have 
not been validated. This simplifies the understanding by the 
client and by the modeler teams of the need to validate the 
118
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

hypotheses in order to achieve the desired result, and clearly 
shows what the state of the model construction is. In an 
iterative construction of a simulation model, once all the 
hypotheses of the document have been validated by the client 
and by the modelers, we have a simulation model that can be 
used to take decisions and can be prepared for its final step; 
believe in the model, the accreditation. 
VIII. CONCLUSIONS AND FUTURE WORKS 
The hypotheses are the key element that rules the 
definition of the model. However, not all the hypotheses 
used in a simulation model have the same effect on the 
model definition. Also the tests used to prove the validity of 
a simulation project not are focused on the same typology of 
hypotheses, for that is needed a taxonomy in order to focus 
our efforts in a selected subset of the tests that validates 
those hypotheses. In our taxonomy, three classes of 
hypotheses exist, Systemic Structural hypotheses, Systemic 
Data hypotheses and Simplification hypotheses. Regarding 
the data, we note that two aspects must be validated, the 
nature, that means that the data will be correct during the life 
of the simulation model, and the structure, that means the 
usual validation process for the data (for example, test if the 
inputs follow an exponential distribution). The Systemic 
Data hypotheses are focused on the structure of the data, 
since the nature can be assured if an institution take care of 
this data or we have the knowledge that the nature of the data 
do not change during the life of our simulation model, this is 
usual in an industrial simulation model, but unusual in an 
environmental model where the climatic data can change day 
to day and we need an institution that take care of this data. 
We showed in this paper how this taxonomy can help in 
the validation process of a simulation model, thanks to 
improve the selection mechanism of the tests in order to 
achieve a complete (if needed) validation of the model. 
Also we show the implications of work with no validated 
hypotheses. Sometimes it could be desirable to work with no 
validated Systemic Data hypotheses in order to validate the 
Systemic Structural hypotheses, or to obtain data related to 
extreme conditions situations. From this taxonomy, we can 
clearly understand that the Systemic hypotheses must grow 
in order to represent better and with more detail the relations 
and the data assumptions of the system, and the 
simplification hypotheses must decrease in order to represent 
the deeper understanding of the system. 
The improvement on the perception of the system, or the 
improvement on the tools we can use to implement the 
model can modify the hypotheses. Often an improvement on 
the tools imply the use of less Simplification hypotheses, but 
an improvement on the system knowledge implies the use of 
more Systemic hypotheses, implying a detailed description 
of the model. This taxonomy helps to understand the 
implications on the modification in the system knowledge, or 
on the tools used to implement the model or in our needs, in 
order to define faster a new model and perform a new 
implementation. 
The future work is focused in develop a methodology to 
systematize not only the validation but also the verification 
of the hypotheses, combining some existing methods to 
define the appropriate tools to implement a simulation model 
[16]. This can help us to understand the limitations of our 
simulation model, due to the hypotheses used, before any 
implementation. 
BIBLIOGRAPHY 
[1] Averill M. Law, "How to build valid and credible simulation 
models," in Proceedings of the 2009 Winter Simulation 
Conference, 2009, pp. 24-33. [Online]. http://www.informs-
sim.org/wsc09papers/003.pdf (accessed 2011/09/21) 
[2] Robert G. Sargent, "Verification and Validation of 
simulation models," in Proceedings of the 2009 Winter 
Simulation Conference, 2009, pp. 162-176. [Online]. 
http://www.informs-sim.org/wsc09papers/014.pdf (accessed 
2011/09/21) 
[3] Dirk 
Brade, 
"Enhancing 
modeling 
and 
simulation 
accreditation by structuring verification and validation 
results," in Winter Simulation Conference, 2000, pp. 840 - 
848. 
[4] Joshua M. Epstein, "Why Model?'," Journal of Artificial 
Societies and Social Simulation, vol. 11, no. 4, pp. , 2008. 
[5] Thomas. H. Naylor and J. M. Finger., "Verification of 
computer simulation models," Management Science, vol. 14, 
no. 2, 1967. [Online]. http://www.jstor.org/pss/2628207 
(accessed 2011/09/21) 
[6] Stewart Robinson, "Simulation Verification,Validation and 
Confidence: A Tutorial," TRANSACTIONS of The Society for 
Computer Simulation International, vol. 16, no. 2, pp. 63-69, 
1999. 
[7] Antoni Guasch, Miquel Àngel Piera, Josep Casanovas, and 
Jaume Figueras, Modelado y simulación. Barcelona, 
Catalunya/Spain: Edicions UPC, 2002. 
[8] Averill M. Law and W. David Kelton, Simulation Modeling 
and Analysis.: McGraw-Hill, 2000. 
[9] Robert G. Sargent, "Verification, validation and accreditation 
of simulation models," in Proceedings of the 2000 Winter 
Simulation Conference, 2000, pp. 50 - 59. 
[10] Lauren Doldi, Validation of Communications Systems with 
SDL: The Art of SDL Simulation and Reachability Analysis.: 
John Wiley & Sons, Inc., 2003. 
[11] Telecommunication standardization sector of ITU. (2002) 
Series Z: Languages and general software aspects for 
telecommunication 
systems. 
[Online]. 
http://www.itu.int/ITU-
T/studygroups/com17/languages/Z100.pdf 
(accessed 
2011/09/11) 
[12] Bernard P. Zeigler, Herbert Praehofer, and Tag Gon Kim, 
Theory of Modeling and Simulation.: Academic Press, 2000. 
[13] Carl A. Petri, Kommunikation mit Automaten. Bonn: 
University of Bonn, 1962. 
[14] Manuel Silva Suárez, Las Redes de Petri: en la Automática y 
la Informática. Madrid: Editorial AC, D.L., 1985. 
[15] James Lyle Peterson, Petri Net Theory and the Modeling of 
Systems.: Prentice-Hall, 1981. 
[16] Gladys Rincon, Marinelly Alvarez, Maria Perez, and Sara 
Hernandez, "A discrete-event simulation and continuous 
software evaluation on a systemic quality model: An oil 
industry case," Information & Management, vol. 42, pp. 
1051-1066, 2005. 
119
Copyright (c) IARIA, 2011.     ISBN:  978-1-61208-169-4
SIMUL 2011 : The Third International Conference on Advances in System Simulation

