Visualizations for Hierarchical Data:
Analyzing User Behavior and Performance with Eye Tracking
Nicholas H. M¨uller∗, Benny Liebold†, Daniel Pietschmann†, Peter Ohler†, and Paul Rosenthal‡
∗Faculty of Computer Science and Business Information Systems,
University of Applied Sciences W¨urzburg-Schweinfurt, W¨urzburg, Germany
Email: nicholas.mueller@fhws.de
†Institute for Media Research, Chemnitz University of Technology, Chemnitz, Germany
Email: {benny.liebold, daniel.pietschmann, peter.ohler}@phil.tu-chemnitz.de
‡Institute of Computer Science, University of Rostock, Rostock, Germany
Email: research@paul-rosenthal.de
Abstract—Visualizing hierarchical structures is of great impor-
tance in many economic and scientiﬁc applications. Many dif-
ferent approaches have been developed and enhanced in the last
decades. Each of them claims speciﬁc advantages over competing
methods, usually referring to visual or structural properties.
Although several user studies investigated the usefulness of
speciﬁc approaches, for practitioners it often remains unclear
what the practical advantages of the approaches are and in which
contexts they are useful. In our user study, we systematically
investigated the value of three frequently used visualization types
for the intuitive understanding of hierarchical data: treemap,
icicle plot, and nodelink. We measured user performance in terms
of correctness and time and tracked eye movements for each par-
ticipant. The results regarding the user performance revealed that
nodelink and icicle plot performed well, whereas treemap only
exceeded chance level in one easy task. Still, the analysis of eye-
tracking measures suggests that treemaps draw visual attention
better to relevant elements. However, treemap visualizations built
up less inﬂuential visual gaze patterns, compared to nodelinks and
icicle plots. Finally, implications for facilitating human intuition
and problem solving strategies are discussed.
Keywords–User Study; Hierarchy Visualization; Perception;
Eye-tracking; Eye-gaze Patterns.
I.
INTRODUCTION
This paper is an extended version of a work, recently
presented at the International Conference on Advances in
Computer-Human Interactions (ACHI) [1]. First results of
the reported study were already presented at the EuroVis
Workshop on Reproducibility, Veriﬁcation, and Validation in
Visualization (EuroRV3) [2]. In this paper, we report an ex-
tended and more thorough analysis, including the investigation
of eye-gaze patterns. The main objective of the study was
the research of visualizing hierarchical data, which has a
long tradition going back to the drawings of medieval family
trees. A wide research ﬁeld with very different visualization
approaches developed over the last three decades, investigating
a multitude of different visualization properties and aiming at
all kinds of different applications. However, despite this long
tradition there are still new developments in the ﬁeld through
new applications and demands [3], [4], [5], [6].
A comprehensive overview over most of the proposed hier-
archy visualization techniques is maintained by treevis.net [7],
[8]. Every approach was published with several advantages in
mind and was at the time of publication an advancement to
the state of the art. However, apart from their professional
experiences, practitioners have no objective benchmarks to
decide, which new (or even older) visualization ﬁts their needs
best.
This issue becomes even more eminent considering the
importance of hierarchical data structures in science [9], [10]
and economy [11], [12], where visualizations can signiﬁcantly
inﬂuence large-scale decisions [13]. For example, Vliegen et
al. [14] presented different applications of treemaps to business
data. They found that in general there are too many parameters
to set and tune in standard visualizations and concluded
that users need custom solutions, speciﬁcally designed by
visualization experts. Especially in this environment, where
decisions can have drastic consequences and frequently have
to be made in a short time frame, users need to understand the
properties and shortcomings of visualizations to be aware of
possible implications.
In this paper, we make a step towards studying which
visualizations are intuitively understandable by non-experts. To
this end, we investigate how different visualization techniques
impact the users’ understanding of the data. Since we treat
visualizations as objectively as possible, our goal is not to
show which visualization is superior, but to understand what
problems and pitfalls arise when non-experts use different
visualizations to solve typical tasks.
We restricted our study to static and non-interactive vi-
sualizations. Apart from being much easier to interpret, es-
pecially when analyzing problem solving patterns, they are
highly relevant, since many practitioners mainly rely on static
visualizations on paper or digital presentations to convey their
data. In most cases, it would be just too cumbersome for
non-visualization scientists or managers to run an interactive
session with a visualization software just to understand their
data and results of related scientists or competitors. Therefore,
we also excluded all pure visualizations heavily relying on
3D metaphors. They always require at least basic interaction
capabilities to produce meaningful results. Since Burch et
al. [15] showed that radial techniques [16] for the visualiza-
tion of hierarchies are understood less intuitively, we further
restricted our study to linear visualization techniques. After
a thorough analysis of several well-established reporting and
385
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

analysis software packages, we decided to compare nodelinks,
treemaps, and icicle plots, because they represent the most
common visualization techniques.
In addition, we restrict our considerations to the area of
visualizing hierarchical data with additional scalar dimension,
which is highly relevant especially in the business environ-
ment. More precisely, the data consists of a rooted tree
T = (V, E, vroot), where V is the non-empty set of data
elements (nodes), E is a subset of V × V representing the
hierarchy relations (edges), and vroot ∈ V is the root node of
the hierarchy. Additionally, a function f : V → R+ is given,
which assigns each node a speciﬁc positive value and respects
the hierarchy. More precisely, the sum of function values of all
children of a node is always smaller or equal than the function
value of the node. One example for such data is a company
structure with annual expenses.
In Sections III and IV, we present background about the
tackled visualizations and the relations to cognitive science.
We give a precise description of our study setup in Section V.
In Section VI, we present a detailed analysis of the results of
the user study with respect to participants’ performance and
eye-gaze data.
II.
RELATED WORK
General design rules for good visualizations have been
intensively discussed in the last decades and are often based
on the investigation of visual attention [17], [18] and the
understanding of the human cognitive system. In this regard,
the effects of colors in visualizations received much research
attention, because they represent a particular powerful visual
cue [19], [20], [21], [22]. A comprehensive overview about
those design rules and general strategies was presented by
Ware [23].
One of the most-used practical examples when visualizing
hierarchies with an additional scalar component is the ﬁle
system of computers. Stasko et al. [24] evaluated the two
visualization techniques treemap [25] and sunburst [26] with
respect to their capabilities for standard ﬁle-management tasks,
like locating ﬁles or comparing ﬁle sizes. They measured user
performance by logging their number of correct answers and
their reaction times. They found that sunburst signiﬁcantly
outperforms the treemap representation, presumably because
of the more explicit representation of hierarchy relations in
sunburst.
In a very similar study, Bladh et al. [27] evaluated the
usefulness of encoding the depth of nodes in a treemap
using the third dimension in comparison to a traditional
treemap visualization. Again, users had to complete typical
ﬁle-management tasks. It turned out that both visualizations
were not signiﬁcantly different in most tasks, i. e., the third
dimension did not result in a performance loss due to the
additional navigational and cognitive efforts. However, users’
performance was signiﬁcantly better with the 3D visualization
when having to identify the node with the highest depth in the
hierarchy.
Wang et al. [28] had a similar experimental setting by com-
paring a standard ﬁle browser to rings [29] and treemap [25].
They evaluated the effectiveness of the methods based on
complex questions, such as ﬁnding two similar directories
or the most homogeneous directory. The users’ performance
was measured by assessing their answering time. Additionally,
they were asked to rate the difﬁculty of each question with
the respective visualization. In summary, the ﬁle explorer
performed signiﬁcantly worse than both other methods with
no signiﬁcant difference between rings and treemap.
Ziemkiewicz and Kosara [30] showed that the methaphoric
presentation of tasks inﬂuences users’ performance during the
work with hierarchy visualizations. In our study, we followed
this ﬁndings and extended the scope by formulating the tasks
abstractly with respect to the hierarchy.
Borkin et al. [31] presented a new method for visualizing
ﬁlesystem provenance data, which relies on a combination of a
radial-based tree layout and a time-based node grouping. The
system was evaluated with domain experts and compared to a
state-of-the-art nodelink tool [32] by measuring accuracy and
efﬁciency. Results show that the new tool outperforms the state
of the art. A very interesting additional ﬁnding was that there
was a signiﬁcant gender effect in the state-of-the-art method,
which was not the case for the proposed method.
Teets et al. [33] stressed the need for evaluation of the
effectiveness of visualizations especially in the business envi-
ronment. They analyzed a very speciﬁc application in the ﬁeld
of process monitoring, which was based on production data of
a can factory. Their evaluation relied on cognitive ﬁt theory,
i. e., they investigated how good the visualizations and induced
mental models ﬁt to the problem solving strategies. They found
no information loss when not displaying accurate values in a
tabular fashion as well as a signiﬁcantly faster solution time
when using visual representations.
While most studies rely on user performance data in terms
of the number of correct answers and reaction times, eye-
tracking studies have been the exception. However, Burch
et al. [15] investigated the impact of different layouts of
nodelinks using eye-tracking. They used one question type
and an explanatory task. The users were confronted with two
different linear layouts with four different placements of the
root node and a radial layout of the nodelink. Burch et al.
assessed both eye-movements and performance data, allowing
to systematically compare the results from different measure-
ment approaches. The users performed much better with the
axis-aligned layouts than with the circular one, which might be
a result of the typically linear fashion of information display,
the users are familiar with. In line with this argument, the
traditional layout with the root node at the top performed best,
which further emphasizes the role of individual experience
with visualizations in understanding them intuitively and using
them for problem solving.
A recent variation of the treemap design is the angular
treemap [34] with the goal to enhance comprehension of
hierarchy levels by rotating parts of the treemap. Liang et
al. [35] conducted an experiment comparing traditional and
angular treemaps. The study mainly investigated search tasks
and measured completion time. While it turned out that the
new design was signiﬁcantly better, the ﬂexible method needs
several well-tuned parameters and, thus, should be set up by
visualization experts to achieve comparable results.
III.
VISUALIZATIONS FOR HIERARCHICAL DATA
The need for visualization expertise is true for many
new and sophisticated visualization techniques. However, there
386
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

low
complexity
high
complexity
nodelink
treemap
icicle plot
Figure 1.
Example stimuli that where used for the user study. For each of the four questions, we presented three different visualization types (nodelink, treemap,
icicle plot) of equivalent hierarchies with additional scalar values per node. In addition, we varied the complexity of the hierarchies, resulting in visualizations
with low (height two, maximum three children per node) and high complexity (height three, maximum ﬁve children per node).
is an ever growing demand for easily usable and reliable
visualization techniques for hierarchical data in practice that
can be used without much prior knowledge. Therefore, we
wanted to investigate the properties of three of the most-used
and practice-relevant visualization techniques for hierarchies
with additional scalar dimension. We intended to investigate
these visualizations with respect to fast and accurate data
comprehension for users with low visualization knowledge and
only a short time of familiarization with the type of visualiza-
tion. After elaborate inspection of the treevis repository [8] and
several software packages for productive use [36], [37], [38],
[39], we decided to compare nodelinks, treemaps, and icicle
plots. Illustrations of the investigated visualization methods are
given in Figure 1.
The use of nodelinks for drawing trees is very intuitive
since it replicates the structure of botanical trees. Conse-
quently, nodelinks have already been used for ages to represent
hierarchies and the research on optimal drawing of nodelinks
has a long tradition [40]. The strengths of the nodelink rep-
resentation are its intuitiveness and clear representation [41].
However, many competing techniques produce less empty
space and allow a more integrated visualization of the addi-
tional scalar dimension.
The concept of treemaps, as one of these presumably
superior techniques, has been introduced by Johnson and
Shneiderman [25]. Since then a lot of different modiﬁcations,
additions, and enhancements were proposed [42], [43], [44],
[45], still respecting the initial idea of maximizing screen space
usage and implicit encoding of the hierarchy. These aspects
are often referred to as the main advantages of the concept.
Problematic properties, which are nowadays still constant
topic of further research [46], are the inherent overplotting,
problems with hierarchy perception, and complications with
node distribution.
The icicle plot is another concept with a long tradition
and was originally proposed by Kruskal and Landwehr [47]
for the display of cluster hierarchies and based on the trees
and castles of Kleiner and Hartigan [48]. Although it has
been shown that users perform worse, when using radial
layouts
[15], icicle plots are used less often in practical
applications [49], [50], [51] than their radial counterpart, the
sunburst diagram [26], [52], [53], [54]. Sometimes not even
the correct name for this linearized sunburst is used. Still, the
icicle plot combines two strengths of nodelink and treemap,
namely the intuitive top-down design and the implicit hierarchy
encoding. In addition, it inherently features a one-dimensional
encoding of the additional scalar dimension. On the other hand,
the screen-space usage is less efﬁcient compared to treemaps.
IV.
COGNITIVE PROCESSING OF VISUALIZATIONS
Assessing the effectiveness of visualizations, requires to
distinguish between the visual search phase and the stage of
central information processing. In the visual search phase, the
user has to identify relevant elements of a visualization. During
this process the user constantly reallocates the attention to
different elements of a visualization. Following Schneider and
Shiffrin [55], [56], this process can be characterized as an
interplay of bottom-up (automatic) and top-down (controlled)
attention allocation.
Our visual ﬁeld can be considered as an assembly of
387
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

elements competing for our attention [57]. Bottom-up pro-
cesses are triggered by elements, which stand out from their
environment. A node of a visualization could for example be
colored differently or have a different shape compared to other
elements. This type of attention allocation is highly automated.
Top-down attention, on the other hand, is moderated by the
user’s intention and previous knowledge. For example, when
the user’s goal is to compare two elements of a visualization,
the user employs a strategy of visual search, during which
the positions of all relevant entities are identiﬁed. The search
process itself can be carried out both by chaotically searching
for relevant elements (bottom-up) or deducting the relative
position of an element from other elements through previous
knowledge about the type of visualization (top-down) [58].
The ﬁrst strategy is suited for users without any previous
knowledge and its efﬁciency depends on the visualization’s
complexity. The latter strategy, however, can be employed by
users, who understood the basic principles of a visualization,
and should result in a more efﬁcient use.
As we can only observe eye movements by users, we are
usually not able to distinguish between bottom-up and top-
down attention allocation. Both mechanisms directly impact
which elements our eyes ﬁxate. Additionally, the mere fact
that users ﬁxate an element of a visualization does not imply
that this element is being processed centrally. Moreover, it does
not even imply that the user is looking at the element, because
attention can also be allocated towards elements outside of
central vision [59]. Although we are not able to see elements
as clearly when using peripheral vision, humans are still
able to estimate object shape and size rather accurately when
distributing visual attention over a larger area of the visual
ﬁeld. If, however, we were able to observe reoccurring patterns
of eye-movements, both within users and between users, we
can be sure that these patterns represent phases of top-down
attention allocation. Visualizations that produce this kind of
reoccurring patterns can be considered as an efﬁcient means of
data display. Thus, one important goal of the current study was
to extend existing research by employing eye-tracking not only
to count and compare ﬁxations, but to investigate transitions
between visualization elements as well as reoccurring ﬁxation
patterns.
When the relevant elements of a visualization are identiﬁed,
the user enters the stage of central information processing.
The success and the efﬁciency of a visualization depend both
on user and visualization properties. User properties affecting
visualization processing are most likely previous knowledge
about the type of visualization, general intelligence compo-
nents, especially those related to visual-spatial information
processing, and possible impairments (e.g., color or stereo
blindness). In terms of information processing, nearly all
properties of a visualization, like color usage, descriptiveness,
intuitiveness, alignment, or visual data preparation affect suc-
cess and efﬁciency. In this paper, we assess indicators for both
phases of visualization processing. While performance data
allow the empirical investigation of the information processing
phase, eye-tracking and reaction times enable the investigation
of the visual search phase.
V.
METHOD
We conducted a laboratory experiment, during which par-
ticipants had to solve problems using different visualization
techniques. For each participant, the performance in terms of
accuracy and completion times as well as eye movements were
recorded.
A. Stimulus Materials
We employed a 3 × 4 × 2 within-subjects factor design
with visualization type, task, and hierarchy complexity as
independent variables.
1) Visualization Types: All hierarchies with additional pos-
itive scalar values per node were visualized using three differ-
ent visualization types, illustrated in Figure 1. The nodelinks
were generated using Reingold and Tilford’s algorithm [40].
The additional scalar value per node was indicated by the area
of each node’s circle. As for all three different visualization
types, each non-root node was annotated with an alphanumeric
code to allow for unique identiﬁcation by the users. The
treemaps were generated using the squariﬁed approach [44],
again encoding each node’s scalar value by area. To enhance
the perception of different hierarchy levels, nodes were color
coded in different grey scales and, following Bladh et al. [27],
stacked in a 2.5D fashion. The icicle plots were generated in
the top-down fashion that is used most often. Screen space was
divided in rows of equal height, depending on the height of
the hierarchy. The root node’s width was set to the full width.
For each node, all children were drawn below the node with
a width proportional to the scalar values, respectively.
2) Tasks: We interviewed several researchers from different
ﬁelds of economics and social sciences, who regularly deal
with hierarchical data. In most cases, they seek to understand
the hierarchical structure, which means understanding the
relation between nodes, comparing the values of different
nodes, or counting nodes or leaves of trees or subtrees. We
identiﬁed four tasks, which are commonly performed when
confronted with the given visualizations. From these tasks,
three are hypothesized to favor one of the visualization types,
respectively. For the fourth tasks, we could not ﬁnd any strong
indications on what visualization might be favored and added
it as an exploratory task. In detail, the tasks were:
T1:
Count all leaf nodes of the hierarchy.
T2:
Count all nodes of the hierarchy.
T3:
Compare the combined area of two pairs of nodes
within one level of the hierarchy.
T4:
Compare the combined area of two pairs of nodes
across different levels of the hierarchy.
The tasks differ in difﬁculty: Counting leaves and nodes is less
cognitive exertive than comparing the sizes of nodes. However,
this does not affect our main goal, the analysis of differences
between the visualization methods.
3) Hierarchy Complexities: As base data set we used two
artiﬁcial hierarchies with different levels of complexity. The
hierarchy with low complexity had height two and had a
maximum of three children per node. In contrast, the height of
the hierarchy with high complexity was three with a maximum
number of ﬁve children per node. An illustration of the
different complexities can be seen in Figure 1.
Since the hierarchy for all visualizations was initially equal
per complexity level and question, it could have happened
that participants remembered their choice from a different
visualization and just replicated it. To overcome this problem,
we slightly changed hierarchies (changed size of one node
388
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

or added/removed one node/leaf) for each visualization of one
complexity-task combination. Consequently, tasks and answers
were not equal per visualization but still comparable in terms
of difﬁculty. Participants were informed that similar hierarchies
might not always result in the same answers.
B. Hypotheses
From a review of relevant literature and recommendations
in software packages, we extracted several claims of what
beneﬁts the used visualizations should have. Together with the
tailored questions, this resulted in the following hypotheses,
which we wanted to check with our experiment.
H1:
Task T1 favors the treemap over both other visu-
alization types.
Counting leaves on a treemap reduces the task
to simply counting all non-occluded rectangles.
Users have to traverse the whole hierarchy to
count the leaves in both other visualizations.
H2:
Task T2 favors the nodelink over both other
visualizations.
Counting nodes is reduced to simply counting
all circles in the nodelink visualization, which
are, even in contrast to the icicle plot, clearly
distinguishable from background and auxiliary
lines.
H3:
Task T3 favors the icicle plot over both other
visualizations.
Comparing sizes of nodes within one level of
the hierarchy should be easier when comparing
lengths on one straight line using the icicle-plot
visualization. In contrast, users have to sum up
and compare areas of different proportions when
using a treemap and, even more difﬁcult, sum up
differently-sized circular areas in the case of the
nodelink.
H4:
Treemap performs worst in the tasks T1, T3, and
T4 due to overplotting.
H5:
When only varying hierarchy complexity, users
perform better with the low complex hierarchy
compared to high complexity.
C. Sample
We recruited N = 69 second year university students of
the local communication studies program (age: M = 21.09,
SD = 2.40, female = 53). The students were well-skilled
in reading academic publications and working with statistical
analyses and charts. Apart from their general experience,
they had no speciﬁc knowledge in either of the presented
visualization methods nor in visualization of hierarchies in
general. They received study credit for their participation.
D. Procedure
To control for sequence effects, we generated two different
pre-randomized sequences respecting a non-repetition restric-
tion. Each participant was assigned to one of the sequences
in which the combinations were presented, respectively. Both
sequences did not differ in their performance (t(67) = −0.238,
n.s.). The hierarchies were presented on a 19” computer screen
with a resolution of 1280 × 1024 pixels via E-Prime 2.0.
An SMI RED eye-tracker from SensoMotoric Instruments
was installed below the screen and recorded eye movements
at 50 Hz. The stimuli were presented at a head distance
of about 700 mm. However, due to the contact-free setup,
slight variations of the distance during the experiment were
possible, which should not affect the results due to the within-
subjects factor design, and the SMI hardware being able to
compensate for movements. All participants were calibrated
using a ﬁve point matrix according to the standard SMI RED
setup procedure. Each event in E-Prime was logged within the
eye-tracking data ﬁle, which allowed to synchronize stimulus
presentation and eye-tracking data. In the ﬁrst part of the in-
structions, the deﬁnition of a hierarchy, the difference between
leaves and nodes, and the different types of visualizations were
explained to the participants by showing examples. They also
received a speed-accuracy instruction (i. e., “Please answer as
quickly and accurately as you can!”).
During the experiment, participants were ﬁrst shown a tex-
tual description of the task (e. g., “How many leaves does the
hierarchy have?”) as well as the possible answers and then had
to press a key to proceed. This allowed each participant to read
and understand the task and the answers at her own pace. Next,
the hierarchy visualization was presented in addition to the task
and the answers. Participants then had to respond by pressing
one of three answer keys, with one correct answer and two
distractors, resulting in a chance level of p = 0.33. E-Prime
automatically logged the participant’s answer and completion
time, i. e., the time of stimulus onset until the participant’s
response. In average, the response time for an item was M =
19.6 sec (SD = 5.9). This procedure allowed us to be able
to judge users reaction times without the delay of having
them typing in the correct number. First, all participants were
shown a training sequence of the visualizations. Afterwards, all
three visualizations in both the high and low complexity were
presented. Nodes to be compared were named in the question
before the visualization was shown and remained visible during
the task until an answer was given. The whole procedure took
less than 25 minutes per participant. After the computer test,
participants ﬁlled out an electronic questionnaire with items
concerning manipulation checks and demographic data.
VI.
RESULTS
We recruited undergraduate students from Chemnitz Uni-
versity of Technology, and therefore, conducted the study with
a very homogeneous set of participants. Thus, demographic
assessments did not show any correlations or other interesting
variables regarding age, gender, or occupation. A plot of
the participants’ performance with respect to the independent
variables is shown in Figure 2.
To test our hypotheses, we used a 3 × 4 × 2 repeated
measures ANOVA (analysis of variance) with participants’
performance as dependent variable. Alpha levels for all cal-
culations were set to p < 0.05. Due to the violation of the
sphericity assumption, Greenhouse-Geisser-corrected df s are
reported, when necessary. We found a signiﬁcant main effect
for the type of visualization (F(2, 136) = 53.77, p < 0.001,
η2
part = 0.442). More speciﬁcally, performance was signiﬁ-
cantly lower when using treemap compared to nodelink and
icicle plot, whereas the latter two did not differ signiﬁcantly.
Participants performed well above chance level with both
nodelink (M = 0.55, t(68) = 8.73, p < 0.001) and icicle-plot
visualizations (M = 0.54, t(68) = 9.03, p < 0.001). However,
participants did not perform above chance when presented the
389
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

T1: Count Leaves
T2: Count Nodes
T3: Compare in Level
T4: Compare Between Levels
Figure 2.
Plot of the average correctness of participants’ answers to the four
questions with respect to visualization type and hierarchy complexity. Chance
level is at 0.33.
treemap (M = 0.33, t(68) = −0.332, n.s.). These ﬁrst results
validate hypothesis H4. Furthermore, we found that partici-
pants were able to perform above chance level only in task T2
when using a treemap, i. e., counting nodes at low complexity
(M = 0.48, t(68) = 2.40, p < 0.05). This discovery directly
opposes hypothesis H1 and lets the treemap stand out as the
worst choice for all tasks. Even at its best performing task
T2, nodelink and icicle plot performed signiﬁcantly better
(F(1, 74) = 50.02, p < 0.001, η2
part = 0.403).
Results did not show a signiﬁcant main effect for com-
plexity of hierarchies, (F(1, 68) = 2.607, n.s.). Consequently
it seems that, in the current setting, hypothesis H5 can not
be conﬁrmed. However, revisiting the stimuli and analyzing
the after-test feedback resulted in at least two possible fac-
tors inﬂuencing the results with respect to this hypothesis.
One surprising fact is that participants performed signiﬁcantly
better with the complex nodelink compared to the less com-
plex nodelink for task T2, counting nodes (t(74) = −4.32,
p < 0.001, η2
part = 0.20). It is apparent that some participants
were uncertain if the root node is also counted as a node
and, consequently, counted one node less. In the high complex
stimulus, this was compensated, because, as all answering
options were above their count, the participants simply chose
the lowest possible answer, which was the right one. In the
low complex stimulus, this strategy did not work, as indicated
in Table I. Due to this occurrence, it is not possible to validate
hypothesis H2 although the performance of the nodelink is still
signiﬁcantly better than both other visualizations when only
using the complex hierarchy (F(1, 74) = 32.85, p < 0.001,
η2
part = 0.307).
TABLE I.
OBSERVED RELATIVE FREQUENCIES FOR TASK T2
USING NODELINK REPRESENTATION. FOR LOW AND HIGH
COMPLEX HIERARCHIES, THE CORRECT ANSWER IS
RESPECTIVELY HIGHLIGHTED WITH GREY.
Answer
Low Compl.
Answer
High Compl.
7
6.8%
22
84.7%
8
34,7%
23
13.6%
9
58.5%
24
1.7%
We encountered another surprising result when we com-
pared icicle plots of high and low complexity for task T3.
Again, the less complex hierarchy is performing signiﬁcantly
worse than the complex hierarchy (t(74) = −5.11, p <
0.001). The performance is even signiﬁcantly below chance
level (t(74) = −2.52, p < 0.05), leading to the conclusion
that the participants were conﬁdent in their (wrong) answers.
After carefully inspecting the stimulus for the low complex
hierarchy, illustrated in Figure 3, we assume that participants’
conﬁdence was based on a wrong assumption about the
pictorial information. The Gestalt-laws [60] suggest certain
cognitive grouping tendencies when confronted with images.
Based on the Gestalt-laws of proximity, closure, and common
region, the nodes da, db, and dc are perceived as belonging
together. The task, however, asks to judge the combined size of
the ﬁrst two (da + db) against the other node and an “external
one” (dc+ea). Due to this, we assume a misleading perception,
which lets the participants underestimate the size of da + db.
The cognitive process of “moving” area dc over to ea (or
reverse) might be inﬂuenced by the distance between the two
because of the impression that both nodes together (a gestalt)
require more space due to the empty space between them. This
overestimation could be the reason, why hypothesis H3 cannot
be supported, although in the high complex setting icicle plot
performed, as predicted, signiﬁcantly better than nodelink and
treemap at T3 (F(1, 74) = 22.57, p < 0.001, η2
part = 0.234).
Figure 3.
Close-up view of the stimulus for task T3 using the low complex
hierarchy and the icicle-plot visualization. The area da + db is actually larger
than dc + ea but the latter is overestimated due to the empty space between
both areas.
390
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

A. Heatmaps
Beyond looking into the participants’ performance, we also
recorded the eye-movement of all participants during the tasks.
For the analysis, the areas of interest were deﬁned with respect
to each task of the study. Fixations were detected, based on
80 ms duration. After careful inspection of the heatmaps for
each task, we decided to enlarge each area of interest by
20 pixels beyond the actual node to account for measurement
error and peripheral vision when looking at rather small nodes
(see for example Figure 6). As a ﬁrst approach we analyzed
the heatmaps of different tasks and visualizations and their
evolution over time to gain insight into the participants’ general
search strategies and visual foci. The heatmaps were generated
by accumulating ﬁxations over a speciﬁed period of time and
the calculation of the smoothed average density of ﬁxations for
each pixel. The resulting density function was color-coded in
the range between minimum and maximum using the built-in
color scheme of the eye-tracking software, depicted below:
In Figure 4, we illustrate the heatmaps for different subse-
quent periods of time for nodelink and icicle plot of the high
complex hierarchy and task T2. The heatmaps suggest a top-
down and left-right movement of participants’ ﬁxations, which
is consistent with the top-down screen-space structure of the
visualizations. This coincides with the expected gaze direction
that is deeply rooted into cultural education. Eye-tracking
research regarding reading and comprehension in Saudi-Arabia
revealed ﬁxation patterns from right to left [61], in contrast to
the typical ﬁndings in western countries. Li and Briley [62],
therefore, differentiate between a habitual eye movement and
a situational one, which, on occasions, might be in conﬂict.
Since the participants for the presented study were all
from Germany, we assume homogeneous habituated reading
patterns: Since most of their reading materials in everyday
life are dextrograde, a gaze movement pattern from left to
right and top to bottom was to be expected. One of the most
prominent indications for this habituated behavior is visible in
the ﬁxations on the answer options at the bottom of the screen
moving from left to right on every visualization within this
study.
A very similar habitual top-down pattern in the heatmaps
is encountered when visualizing the same hierarchy with a
treemap (Figure 5), although this visualization does not imply
an inherent top-down screen-space structure. Because treemaps
do not explicitly follow this structural order with several
clearly distinct hierarchy levels, participants might have to
reorient repeatedly and remember which elements were already
processed. This discrepancy might be partially responsible for
the participants’ bad performance with treemaps. The same
applies to task T1 where participants again followed a top-
down strategy, as illustrated in Figure 6.
Another interesting, but unexpected ﬁnding with respect to
the treemap visualization was that participants’ performance at
T3 with the complex hierarchy was signiﬁcantly worse than
chance level (t(74) = −4.54, p < 0.001). This again indicates
that participants were conﬁdent in giving a wrong answer.
When inspecting the respective heatmap for the whole task
processing time (Figure 7), it becomes apparent that ﬁxations
concentrate mainly in the upper parts of the relevant regions.
t= 0...4 sec
t= 4...8 sec
t= 8...25 sec
Figure 4.
Accumulated heatmaps for the task T2 and the complex hierarchy
for three subsequent periods of time. Note the apparent top-down and left-right
pattern of participants’ gazes when counting the nodes of the hierarchy.
t= 0...7 sec
t= 7...21 sec
t= 21...30 sec
Figure 5.
Accumulated heatmaps for the task T2, counting all nodes of the
hierarchy, and the complex hierarchy. For three subsequent periods of time, we
indicate the heatmaps of the treemap visualization. Although treemaps feature
only limited top-down characteristics in screen space, the typical European
pattern of top-down processing is apparent.
391
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

t= 0...5 sec
t= 5...10 sec
t= 10...40 sec
Figure 6.
Accumulated heatmaps for the task T1, counting all leaves
of the hierarchy, and the complex hierarchy. The heatmaps of the treemap
visualization are depicted for three subsequent periods of time. Again, the
top-down tendency of processing, although the screen space design of the
treemap has no such component, is apparent.
Due to the self-occluding design of treemaps, these are the
only parts of occluded regions that are directly observable.
When only concentrating on the non-occluded parts the areas
of nodes l and k are quite equal, although the area of node
k is in fact much larger than the area of l. This might have,
in combination with the very small area of node o and the
relatively large, but mostly occluded area of n, led to the
impression that the area of l+n is smaller than the area of k+o.
Thus, the participants might have followed a misconception of
the treemap visualization. The same explanation can account
for the signiﬁcantly lower-than-chance performance of the less
complex treemap at T4 (t = −2.52; p < 0.05).
Figure 7.
Accumulated heatmap for the whole time of T3 using the treemap
visualization for the complex hierarchy. Participants’ ﬁxations concentrated
mainly on the upper, non-occluded, parts of the relevant regions, making it
hard to correctly estimate the areas.
B. Odds Ratios
In addition to inspecting the heatmaps, we performed sta-
tistical analyses for the participants’ ﬁxations. When ﬁxations
in task-relevant areas of interest are succeeded by task-relevant
ﬁxations, the participant’s visual attention remains at task-
relevant nodes, which is an important feature of effective
visualizations. For this, we computed odds ratios, which com-
pare the odds of remaining at task-relevant nodes of two
visualizations for each task. We ﬁrst divided the chance of
task-relevant ﬁxations by the chance of irrelevant ﬁxations after
looking at relevant areas of interest. This gives us an odd of
relevant follow-up ﬁxations for each visualization. We then
divided the odds of one visualization by the odds of another
visualizations to get the respective odds ratio. This allows to
compare two visualizations directly regarding their ability to
keep users focused on relevant areas. We used the nodelink
visualization as a baseline for the other two visualizations,
because it is the most established one. Respective conﬁdence
intervals (95%) for the odds ratios allow comparisons of the
suitability of a given visualization to promote ﬁxations that
remain within task-relevant areas. Odds ratios of around 1.0
indicate that the chance of hitting an important area of interest
is not signiﬁcantly different for both visualizations. Conﬁdence
intervals of different visualization combinations not overlap-
ping with 1.0 indicate a signiﬁcant difference between them.
A plot of the different odds ratios and conﬁdence intervals with
respect to task and visualization type combinations is given in
Figure 8.
T1: Count Leaves
T2: Count Nodes
T3: Compare in Level
T4: Compare Between Levels
Figure 8.
Plots of odds ratios and conﬁdence intervals. For each task and
combination of visualizations (N = nodelink, T = treemap, I = icicle plot), the
respective odds ratio is indicated together with its 95% conﬁdence interval.
T1 produced signiﬁcant differences between all visualiza-
tions in their ability to draw user attention to task-relevant areas
of interest. Within this particular task, the treemap visualization
outperforms the other visualizations, regarding its chance to
draw attention to task-relevant areas. The odds of looking
at important areas of a treemap during the task are four
times higher compared to a nodelink (∆oddsT/N = 4.22; CI:
[3.36, 5.30]). Comparing icicle plots and treemaps also indi-
392
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

TABLE II.
DESCRIPTIVE STATISTICS FOR IDENTIFIED PATTERNS. FOR EACH VISUALIZATION WE INDICATE THE NUMBER OF
PATTERNS WITH RESPECT TO THE NUMBER OF INVOLVED EVENTS, THE TOTAL NUMBER OF OCCURRED PATTERNS, THE MEAN
NUMBER OF OCCURRENCES FOR ALL PATTERNS WITH RESPECTIVE STANDARD DEVIATION, AND MEAN PROPORTION OF THE
SESSION TIME IN SECONDS FOR EACH PATTERN WITH RESPECTIVE STANDARD DEVIATION.
Visualization
Number of Patterns
Total Number of
Mean Number
Mean Proportion
According to Complexity
Occurred Patterns
of Occurrences
of Session Time
per Pattern
per Pattern
2 Events
3 Events
4 Events
nodelink
7
6
0
1227
94.38 (22.63)
8.46 (5.17)
icicle plot
6
7
1
1643
123.07 (50.70)
5.29 (2.34)
treemap
5
4
0
1099
122.11 (69.61)
3.11 (1.45)
cates a one-to-two advantage for the treemap (∆oddsI/T =
0.51; CI: [0.42, 0.63]). Furthermore, the odds for the icicle-
plot visualization are twice as high compared to the nodelink
(∆oddsI/N = 2.17; CI: [1.71, 2.75]). These results can be
explained by the ratio of relevant to irrelevant screen space,
which is highest for the treemap and lowest for nodelink.
However, the signiﬁcant advantage of the icicle plot over
the nodelink cannot be explained by the small difference in
relevant screen space, but might be a result of the eye-trackers
resolution.
T2 presents a similar pattern, but with overall higher odds
ratios. The improvement in odds for treemap compared to
icicle plot relative to nodelink, however, is only marginally
signiﬁcant. Still, both perform again better than the nodelink in
keeping the participants’ attention within task-relevant areas.
However, when counting nodes, the ratio of relevant screen
space to overall screen space is nearly one for the treemap
and close to one for the icicle plot. Consequently, participants
have only few chances to actually look at non task-relevant
positions, directly explaining the very high odds.
The tasks of comparing the volume of two groups of areas
T3 and T4 reveal rather different odds ratios. Within one
level of the hierarchy there is almost no difference between
the treemap and the nodelink visualization (∆oddsT/N =
1.07; CI: [0.88, 1.3]), but a slightly higher odds ratio for
the icicle plot compared to nodelink (∆oddsI/N = 1.47;
CI: [1.19, 1.81]) and the treemap (∆oddsI/T = 1.37; CI:
[1.13, 1.66]). When looking at comparisons between different
levels of hierarchy, however, both treemap (∆oddsT/N =
2.32; CI: [1.93, 2.79]) and icicle plot (∆oddsI/N = 1.64;
CI: [1.37, 1.97]) again outperform the nodelink visualization.
Additionally, the treemap is again signiﬁcantly better than the
icicle plot (∆oddsI/T = 0.71; CI: [0.6, 0.84]).
These results suggest that the treemap visualization is
indeed effective in promoting task-relevant ﬁxations due to
its maximization of screen space. Additionally, the icicle plot
performs better in guiding user gaze compared to nodelinks.
However, these beneﬁts in visual perception are not reﬂected
in the user performance measure, because nodelinks still
perform rather good compared to the visually more efﬁcient
visualization techniques. This could be seen as an indicator of
the high relevance of previous experience with visualization
techniques compared to their visual arrangement. Also, this
ﬁnding suggests that the sometimes quoted principle of more
efﬁcient use of screen space automatically results in higher
value of the visualization for the user.
C. Eye-gaze Patterns and Problem Solving Strategies
Another indicator of the visual efﬁciency of different visu-
alizations is their ability to offer stable problem solving pat-
terns. Following this approach, visually efﬁcient and intuitive
visualizations have beneﬁts compared to other visualizations,
because of their inherent design. This results in problem
solving strategies that are interpersonally invariant. Less in-
tuitive visualizations, however, provoke individualistic prob-
lem solving strategies, which highly depend on interpersonal
differences and, thus, depend on the user’s prior experience
rather than intuitive understanding of the visualization. The
ability to invoke interpersonally stable gaze patterns can be
considered as an indicator of top-down attention allocation
due to the visualization’s affordances that is closely linked to
problem solving, i. e. the user’s eyes are guided by the intuitive
understanding of the hierarchy’s visualization.
In order to investigate, whether nodelinks, icicle plots, and
treemaps lead to differences in the employed problem solving
strategies, it is necessary to ﬁrst identify these strategies. In-
terestingly, empirical research on problem solving only rarely
examined behavioral data on a temporal scale. This is also
true for eye-tracking data, which are usually analyzed using
aggregated data, such as frequencies and durations, of single
areas of interest. Because problem solving requires the user to
gather information from multiple sources, which then have to
be integrated, we added an additional layer into our analysis:
Apart from analyzing single areas of interest, we identiﬁed
repeating patterns of eye movements to investigate the involved
problem solving processes.
Automated pattern detection software is able to detect
patterns within observations that elude the human eye. To
identify problem solving strategies of our participants, we used
Theme 6 by PatternVision, which is based on the T-pattern
analysis introduced by Magnuson [63] to analyze categorical
data on a time scale. A T-pattern is deﬁned by two events
happening in signiﬁcantly similar time intervals. We analyzed
the hardest task (T4) and ran separate T-pattern analyses on the
nodelink, icicle-plot, and treemap visualizations. The pattern
search parameters were identical for all three analyses: We
only analyzed task-relevant areas of interest to identify only
patterns that are relevant to the problem solving process. The
criterion for the pattern detection was set to p < 0.005 (sig-
niﬁcance levels for the time intervals) and univariate patterns
(follow-up ﬁxations within the same area of interest) were
excluded from the analysis. Furthermore, we restricted the
analysis to patterns being present in at least 50% of the sample.
This way, the T-pattern analysis only identiﬁed patterns with a
high degree of interpersonal stability. We identiﬁed 13 patterns
for nodelink, 14 patterns for icicle plot and 9 patterns for
treemap. The patterns involved mostly two or three events,
only the icicle-plot visualization caused a signiﬁcant pattern
with four events, see Table II.
The identiﬁed patterns can be grouped into two categories:
393
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

a) Number of Occurrences per Pattern
b) Standard Deviations of the
c) Duration of Problem Solving Time
Number of Occurrences
in Percent
Figure 9.
Bias corrected and bootstrapped 95% conﬁdence intervals for three measures resulting from the pattern detection.
First, across all visualizations participants showed patterns
containing nodes whose areas needed to be summed (n = 17).
Interestingly the majority of these patterns (n = 14) involved
only the group of nodes that is mentioned second in the task
description, but rarely nodes of the other group (n = 3).
Second, participants showed patterns comparing nodes be-
tween the two groups (n = 19). Only icicle plot elicited a
pattern containing four events. Otherwise, the types of patterns
appear to be evenly distributed between the three types of
visualizations. Overall we found no evidence for effects of the
type of visualization on the number of different pattern types
(Fisher’s exact test: χ2(4) = 4.20, n.s.). We also found no
signiﬁcant relation between the type of visualization and the
number of identiﬁed patterns of different complexities (Fisher’s
exact test: χ2(4) = 1.85, n.s.).
To compare the properties of the identiﬁed patterns, we
analyzed the number of occurrences of the patterns, see
Figure 9 a), and the share of time devoted to each pattern
between the types of visualization, see Figure 9 c). To test
for effects of the type of visualization on both outcomes,
we calculated two separate ANOVAs. The ANOVA on the
number of occurrences revealed no signiﬁcant effect of the
type of visualization (Brown-Forsythe: F(2, 16.55) = 1.20,
n.s.). The ANOVA on the share of time devoted to the
identiﬁed patterns reveals a signiﬁcant effect of the type of
visualization (Brown-Forsythe: F(2, 18.98) = 7.29, p < 0.01).
Planned contrasts indicate that nodelinks and icicle plots lead
to signiﬁcantly more time devoted to stable patterns compared
to treemaps, (t(1, 24.15) = 7.29, p < 0.01, η2 = 0.38). The
difference between nodelink and icicle plot was marginally not
signiﬁcant, (t(1, 16.43) = −2.03, n.s., η2 = 0.13).
The analysis of T-patterns within the eye gaze behavior of
participants revealed no signiﬁcant differences for the types
of elicited gaze patterns. This might be a result of the low
test power due to the low number of identiﬁed patterns. The
test power could be raised easily by lowering the criterion of
pattern distribution across the samples to a value below 50%,
which would reveal a higher number of patterns. However, the
resulting patterns would then represent more individualistic
approaches to problem solving, which was not our focus of
analysis. However, when we analyzed the parameters of the
identiﬁed patterns, we found that although the number of
occurrences of the patterns was not different between the three
types of visualization, the standard deviations of the number
of occurrences was most homogeneous for nodelinks. This
could be interpreted as an indicator of the fact that users
are already accustomed to work with nodelinks, because their
required number of interpersonally stable pattern ﬁxations is
less dependent on the type of pattern than for icicle plot. Both
visualizations should elicit patterns with similarly homoge-
neous occurrences, because both differ only slightly in their
representation format and should, therefore, allow similar gaze
patterns, yet their gaze pattern occurrences are signiﬁcantly
more heterogeneous.
A signiﬁcant effect was found for the share of time devoted
to the identiﬁed patterns. Nodelink and icicle plot elicited
patterns with signiﬁcantly more devoted time than treemap.
This is both in line with our analysis of the performance
data as well as the analysis of odds ratios to look at relevant
elements and with our assumption that intuitive visualizations
would produce interindividually stable gaze patterns, which are
helpful for the process of problem solving. Overall, our data
partially support our ﬁndings on the differences of nodelink,
icicle plot, and treemap in their visual efﬁciency. Another
approach to analyze identiﬁed patterns would be a qualitative
comparison between patterns, which, however, is only feasible
for more complex patterns, which again would shift the focus
of analysis to individualistic problem solving approaches.
For example, we identiﬁed a signiﬁcant pattern containing
17 events for icicle plots, but it was only shared by three
participants and occurred only once for each of them.
VII.
CONCLUSIONS AND FUTURE WORK
We presented a user study, which allowed us to analyze
three of the most commonly used visualizations for hierarchi-
cal data with additional scalar dimension, namely nodelink,
treemap, and icicle plot. These three visualization techniques
of two hierarchy complexities (high, low) were tested at four
tasks that are common for these types of visualizations. In
addition to measuring completion time and correctness of
responses, we analyzed the participants eye movements during
problem solving. The statistical analysis of the participants’
performance revealed that the treemap visualization performed
worst. It barely exalted chance level and never performed better
than ﬁfty percent. For nodelink and icicle plot, our hypotheses
were mostly supported due to well-known properties of both
visualizations.
However, we also found some puzzling effects: The anal-
ysis of gaze heatmaps revealed that the 2.5D representation
format of treemaps was possibly misleading participants during
area judgments of occluded nodes. Additionally, we found
that the use of icicle plots, with a better screen-space usage
394
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

compared to nodelinks, might come along with the problem
that areas might be judged differently simply because of their
mutual distance, i. e., the sum of closely spaced nodes is
perceived smaller than nodes with a higher distance. Further,
we showed that participants used typical top-down and left-
right gaze patterns during the counting tasks, which are better
supported by the general structure of nodelinks and icicle plots.
A deeper analysis of the eye-tracking data enabled us to
calculate the odds of continued visual attention at relevant
nodes. Here, treemaps performed superior in most tasks, which
can be seen as proof of its optimized screen-space usage. How-
ever, the user performance contradicts this ﬁnding: Optimized
screen-space usage is no guarantee for good user performance.
Interestingly, icicle plots outperformed nodelinks in both com-
parison tasks with respect to odds ratios, suggesting that icicle
plots concentrate participants’ attention to the relevant areas by
omitting unimportant structures. Moreover, our data revealed
that participants devote more time to stable problem solving
strategies when using nodelink or icicle plot visualizations. In
a future study, one could further investigate the users’ problem
solving strategies with the help of more complex tasks.
In sum, we were able to replicate several ﬁndings from
earlier studies, especially about the problematic properties
of treemaps. Visualization designers should be aware of the
possible misinterpretation of areas of occluded areas. Also the
correct identiﬁcation of the number of inner nodes is often
complicated by the occlusion problem. We enriched previous
work by recording detailed eye-gaze data, allowing for in-
depth inspection and interpretation of the users’ processes.
Our analyses revealed several pitfalls for visualization design
as well as for visual user-study planning and execution,
particularly dealing with the powerful Gestalt-laws. Those
ﬁndings facilitate different directions for future analyses, for
example if the choice of nodes’ positions plays a crucial role
for area perception or if area shape, circular or squared, is
a signiﬁcant factor for good counting, ﬁnding, or comparing
performance. In general, it seems that classical visualizations
are very efﬁcient in most of the practice-oriented cases and
that many of the well-known rules of thumb for visualizations
have to be investigated much more in the future.
REFERENCES
[1]
N. H. M¨uller, B. Liebold, D. Pietschmann, P. Ohler, and P. Rosenthal,
“Hierarchy visualization designs and their impact on perception and
problem solving strategies,” in Proceedings of the International Confer-
ence on Advances in Computer-Human Interactions, 2017, pp. 93–101.
[2]
——, “Gaze into hierarchy: A practice-oriented eye tracking study,” in
Proceedings of the EuroVis Workshop on Reproducibility, Veriﬁcation,
and Validation in Visualization, 2013, pp. 9–10.
[3]
D. Auber, C. Huet, A. Lambert, B. Renoust, A. Sallaberry, and
A. Saulnier, “Gospermap: Using a gosper curve for laying out hier-
archical data,” IEEE Trans. Vis. Comput. Graphics, vol. 19, no. 11,
2013, pp. 1820–1832.
[4]
E. Bakke, D. Karger, and R. Miller, “Automatic layout of structured
hierarchical reports,” IEEE Trans. Vis. Comput. Graphics, vol. 19,
no. 12, 2013, pp. 2586–2595.
[5]
J. Bernard, N. Wilhelm, B. Kruger, T. May, T. Schreck, and J. Kohlham-
mer, “Motionexplorer: Exploratory search in human motion capture data
based on hierarchical aggregation,” IEEE Trans. Vis. Comput. Graphics,
vol. 19, no. 12, 2013, pp. 2257–2266.
[6]
W. Dou, L. Yu, X. Wang, Z. Ma, and W. Ribarsky, “Hierarchicaltopics:
Visually exploring large text collections using topic hierarchies,” IEEE
Trans. Vis. Comput. Graphics, vol. 19, no. 12, 2013, pp. 2002–2011.
[7]
H. Schulz, “Treevis.net: A tree visualization reference,” IEEE Computer
Graphics and Applications, vol. 31, no. 6, 2011, pp. 11–15.
[8]
H.-J. Schulz, S. Hadlak, and H. Schumann, “The design space of
implicit hierarchy visualization: A survey,” IEEE Trans. Vis. Comput.
Graphics, vol. 17, no. 4, 2011, pp. 393–411.
[9]
A. M. Cuadros, F. V. Paulovich, R. Minghim, and G. P. Telles, “Point
placement by phylogenetic trees and its application to visual analysis
of document collections,” in Proceedings of the IEEE Symposium on
Visual Analytics Science and Technology, W. Ribarsky and J. Dill, Eds.
IEEE Computer Society, 2007, pp. 99–106.
[10]
D. M. Kidd, “Geophylogenies and the map of life,” Systematic Biology,
vol. 59, no. 6, 2010, pp. 741–752.
[11]
W. N. Dilla, D. J. Janvrin, and C. Jeffrey, “The impact of graphical
displays of pro forma earnings information on professional and non-
professional investors’ earnings judgments,” Behavioral Research in
Accounting, vol. 25, no. 1, 2012, pp. 37–60.
[12]
A. S. Kelton, R. R. Pennington, and B. M. Tuttle, “The effects of
information presentation format on judgment and decision making: A
review of the information systems research,” Journal of Information
Systems, vol. 24, no. 2, 2010, pp. 79–105.
[13]
E. Tufte, The visual display of quantitative information, 2nd ed.
Cheshire, Conn: Graphics Press, 2001.
[14]
R. Vliegen, J. van Wijk, and E.-J. van der Linden, “Visualizing business
data with generalized treemaps,” IEEE Trans. Vis. Comput. Graphic,
vol. 12, no. 5, 2006, pp. 789–796.
[15]
M. Burch, N. Konevtsova, J. Heinrich, M. Hoeferlin, and D. Weiskopf,
“Evaluation of traditional, orthogonal, and radial tree diagrams by an
eye tracking study,” IEEE Trans. Vis. Comput. Graphics, vol. 17, no. 12,
2011, pp. 2440–2448.
[16]
G. Draper, Y. Livnat, and R. Riesenfeld, “A survey of radial methods for
information visualization,” IEEE Trans. Vis. Comput. Graphics, vol. 15,
no. 5, 2009, pp. 759–776.
[17]
C. G. Healey, K. S. Booth, and J. T. Enns, “High-speed visual estimation
using preattentive processing,” ACM Trans. Comput.-Hum. Interact.,
vol. 3, June 1996, pp. 107–135.
[18]
C. G. Healey and J. Enns, “Attention and visual memory in visualization
and computer graphics,” IEEE Trans. Vis. Comput. Graphics, vol. 18,
no. 7, 2012, pp. 1170–1188.
[19]
C. Healey, “Choosing effective colours for data visualization,” in
Proceedings of IEEE Visualization, 1996, pp. 263–270.
[20]
D. Keim, “Designing pixel-oriented visualization techniques: theory and
applications,” IEEE Trans. Visual. Comput. Graphics, vol. 6, no. 1,
2000, pp. 59–78.
[21]
S. Lin, J. Fortuna, C. Kulkarni, M. Stone, and J. Heer, “Selecting
semantically-resonant colors for data visualization,” Computer Graphics
Forum, vol. 32, no. 3pt4, 2013, pp. 401–410.
[22]
M. Stone, “In color perception, size matters,” IEEE Computer Graphics
and Applications, vol. 32, no. 2, 2012, pp. 8–13.
[23]
C. Ware, Information Visualization: Perception for Design.
Morgan
Kaufmann Publishers Inc., 2004.
[24]
J. Stasko, R. Catrambone, M. Guzdial, and K. McDonald, “An evalua-
tion of space-ﬁlling information visualizations for depicting hierarchical
structures,” International Journal of Human-Computer Studies, vol. 53,
no. 5, 2000, pp. 663–694.
[25]
B. Johnson and B. Shneiderman, “Tree-maps: a space-ﬁlling approach to
the visualization of hierarchical information structures,” in Proceedings
of IEEE Visualization, 1991, pp. 284–291.
[26]
K. Andrews and H. Heidegger, “Information slices: Visualising and
exploring large hierarchies using cascading, semi-circular discs,” in
Proceedings of the IEEE Information Visualization Symposium, 1998,
pp. 9–12.
[27]
T. Bladh, D. Carr, and J. Scholl, “Extending tree-maps to three
dimensions: A comparative study,” in Computer Human Interaction,
ser. Lecture Notes in Computer Science, M. Masoodian, S. Jones, and
B. Rogers, Eds.
Springer Berlin Heidelberg, 2004, vol. 3101, pp.
50–59.
[28]
Y. Wang, S. T. Teoh, and K.-L. Ma, “Evaluating the effectiveness of
tree visualization systems for knowledge discovery,” in Proceedings of
EuroVis, 2006, pp. 67–74.
395
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[29]
S. Teoh and M. Kwan-Liu, “Rings: A technique for visualizing large hi-
erarchies,” in Graph Drawing, ser. Lecture Notes in Computer Science,
M. T. Goodrich and S. G. Kobourov, Eds.
Springer Berlin Heidelberg,
2002, vol. 2528, pp. 268–275.
[30]
C. Ziemkiewicz and R. Kosara, “The shaping of information by visual
metaphors,” IEEE Trans. Vis. Comput. Graphics, vol. 14, no. 6, 2008,
pp. 1269–1276.
[31]
M. Borkin, C. Yeh, M. Boyd, P. Macko, K. Gajos, M. Seltzer, and
H. Pﬁster, “Evaluation of ﬁlesystem provenance visualization tools,”
IEEE Trans. Vis. Comput. Graphics, vol. 19, no. 12, 2013, pp. 2476–
2485.
[32]
P. Macko and M. I. Seltzer, “Provenance map orbiter: Interactive
exploration of large provenance graphs,” in Proceedings of the 3rd
USENIX Workshop on the Theory and Practice of Provenance, 2011.
[33]
J. Teets, D. Tegarden, and R. Russell, “Using cognitive ﬁt theory to
evaluate the effectiveness of information visualizations: An example
using quality assurance data,” IEEE Trans. Vis. Comput. Graphics,
vol. 16, no. 5, 2010, pp. 841–853.
[34]
J. Liang, Q. V. Nguyen, S. Simoff, and M. L. Huang, “Angular treemaps
- a new technique for visualizing and emphasizing hierarchical struc-
tures,” in Proceedings of the International Conference on Information
Visualisation, 2012, pp. 74–80.
[35]
J. Liang, M. L. Huang, and Q. V. Nguyen, “Perceptual user study for
combined treemap,” in Proceedings of the International Conference on
Machine Learning and Applications, vol. 1, 2012, pp. 300–305.
[36]
R. L. Sallam, C. Howson, C. J. Idoine, T. W. Oestreich, J. L. Richardson,
and J. Tapadinhas, “Magic quadrant for business intelligence and
analytics platforms,” Gartner, 2017.
[37]
P. Hand and N. Kharpate, Qlik Sense Cookbook.
Packt Publishing,
2015.
[38]
T. Lachev and E. Price, Applied Microsoft Power BI: Bring Your Data
to Life!, 1st ed.
Prologika Press, 2015.
[39]
J. Stirrup, A. Nandeshwar, A. Ohmann, and M. Floyd, Tableau: Creating
Interactive Data Visualizations.
Packt Publishing, 2016.
[40]
E. M. Reingold and J. Tilford, “Tidier drawings of trees,” IEEE Trans.
Software Eng., vol. SE-7, no. 2, 1981, pp. 223–228.
[41]
C. Plaisant, J. Grosjean, and B. B. Bederson, “Spacetree: Supporting
exploration in large node link tree, design evolution and empirical
evaluation,” in Proceedings of IEEE Information Visualization, 2002,
pp. 57–64.
[42]
M. Balzer and O. Deussen, “Voronoi treemaps,” in Proceedings of the
IEEE Symposium on Information Visualization, 2005, pp. 49–56.
[43]
R. Blanch and E. Lecolinet, “Browsing zoomable treemaps: Structure-
aware multi-scale navigation techniques,” IEEE Trans. Vis. Comput.
Graphics, vol. 13, no. 6, 2007, pp. 1248–1253.
[44]
M. Bruls, K. Huizing, and J. van Wijk, “Squariﬁed treemaps,” in
Proceedings of the Joint Eurographics and IEEE TCVG Symposium
on Visualization, 1999, pp. 33–42.
[45]
J. van Wijk and H. Van de Wetering, “Cushion treemaps: visualization
of hierarchical information,” in Proceedings of the IEEE Symposium
on Information Visualization, 1999, pp. 73–78.
[46]
S. Tak and A. Cockburn, “Enhanced spatial stability with hilbert and
moore treemaps,” IEEE Trans. Vis. Comput. Graphics, vol. 19, no. 1,
2013, pp. 141–148.
[47]
J. B. Kruskal and J. M. Landwehr, “Icicle plots: Better displays for
hierarchical clustering,” The American Statistician, vol. 37, no. 2, 1983,
pp. 162–168.
[48]
B. Kleiner and J. A. Hartigan, “Representing points in many dimensions
by trees and castles,” Journal Am. Stat. Assoc., vol. 76, no. 374, 1981,
pp. 260–269.
[49]
F. Beck, M. Burch, C. Vehlow, S. Diehl, and D. Weiskopf, “Rapid serial
visual presentation in dynamic graph visualization,” in Proceedings
of the IEEE Symposium on Visual Languages and Human-Centric
Computing, 2012, pp. 185–192.
[50]
C. Gouveia, J. Campos, and R. Abreu, “Using html5 visualizations
in software fault localization,” in Proceedings of the IEEE Working
Conference on Software Visualization, 2013, pp. 1–10.
[51]
J. Zhao, F. Chevalier, C. Collins, and R. Balakrishnan, “Facilitating
discourse analysis with interactive visualization,” IEEE Trans. Vis.
Comput. Graphics, vol. 18, no. 12, 2012, pp. 2639–2648.
[52]
S. Elsen, “Visgi: Visualizing git branches,” in Proceedings of the IEEE
Working Conference on Software Visualization, 2013, pp. 1–4.
[53]
C. Rohrdantz, M. Hund, T. Mayer, B. W¨alchli, and D. A. Keim, “The
world’s languages explorer: Visual analysis of language features in
genealogical and areal contexts,” Computer Graphics Forum, vol. 31,
no. 3pt1, 2012, pp. 935–944.
[54]
J. Stasko and E. Zhang, “Focus+context display and navigation tech-
niques for enhancing radial, space-ﬁlling hierarchy visualizations,” in
Proceedings of IEEE Information Visualization, 2000, pp. 57–65.
[55]
W. Schneider and R. M. Shiffrin, “Controlled and automatic human
information processing: Detection, search, and attention,” Psychological
Review, vol. 84, no. 1, 1977, pp. 1–66.
[56]
R. M. Shiffrin and W. Schneider, “Controlled and automatic human
information processing: Perceptual learning, automatic attending and a
general theory,” Psychological Review, vol. 84, no. 1, 1977, pp. 127–
190.
[57]
R. Desimone and J. Duncan, “Neural mechanisms of selective visual
attention,” Annual Review of Neuroscience, vol. 18, no. 1, 1995, pp.
193–222.
[58]
A. Torralba, A. Oliva, M. S. Castelhano, and J. M. Henderson, “Con-
textual guidance of eye movements and attention in real-world scenes:
The role of global features in object search,” Psychological Review, vol.
113, no. 4, 2006, pp. 766–786.
[59]
J. Intriligator and P. Cavanagh, “The spatial resolution of visual atten-
tion,” Cognitive Psychology, vol. 43, no. 3, 2001, pp. 171–216.
[60]
J. Wagemans, J. H. Elder, M. Kubovy, S. E. Palmer, M. A. Peterson,
M. Singh, and R. von der Heydt, “A century of gestalt psychology in vi-
sual perception: I. Perceptual grouping and ﬁgure-ground organization,”
Psychol Bull., vol. 138, no. 6, 2012, pp. 1172–1217.
[61]
A. Al-Edaily, A. Al-Wabil, and Y. Al-Ohali, “Interactive screening
for learning difﬁculties: Analyzing visual patterns of reading arabic
scripts with eye tracking,” in HCI International 2013 - Posters Extended
Abstracts, ser. Communications in Computer and Information Science,
C. Stephanidis, Ed.
Springer Berlin Heidelberg, 2013, vol. 374, pp.
3–7.
[62]
E. Li and D. Briley, “Attitudes shaped by eye movements: The reading
direction effect,” Advances in Consumer Research, vol. 39, 2011, pp.
666–667.
[63]
M. Magnusson, “Discovering hidden time patterns in behavior: T-
patterns and their detection,” Behavior Research Methods, Instruments,
& Computers, vol. 32, no. 1, 2000, pp. 93–110.
396
International Journal on Advances in Software, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/software/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

