Distributed Agile Software Development Challenges and Mitigation Techniques: A 
Case Study 
 
Abdullah Saad Alqahtani, John David Moore, David K Harrison, and Bruce M Wood 
School of Engineering and Built Environment, Glasgow Caledonian University, Glasgow, United Kingdom 
{abdullah.alqahtani, j.d.moore, d.harrison,  b.wood} @gcu.ac.uk 
 
 
Abstract—There is a growing interest in applying Agile 
development methods alongside global software development 
in order to reap the benefits of both approaches. With this said 
however, research has shown that software companies are 
encountering significant challenges when attempting this due 
to the contradiction between Agile values and the global 
development environment. This paper focuses on the 
challenges encountered with this kind of development and 
discusses several techniques via which these challenges can be 
addressed. It presents a case study and applies interviews with 
a software development company adopting the distributed 
Agile approach. From this study it can be seen that the 
communication 
barriers 
are 
the 
biggest 
development 
challenge. The development teams and product owners need to 
work hard to increase the level of communication between 
them by having a daily, regimented communication schedule.  
Flexibility with the working hours and location is an important 
practice with regards to limiting the barriers of the distributed 
development. 
Keywords-distributed Agile; global Agile; global software 
engineering; Agile software development. 
I. 
 INTRODUCTION  
Increased globalization has led to greater competition 
between software development companies around the world. 
The software development industry is seeing a shift from co-
located 
software 
development 
to 
Global 
Software 
Development (GSD), which involves multiple distributed 
development teams from different locations. GSD facilitates 
competitive software development prices by using teams 
from countries that have an abundance of IT developers 
available at relatively low cost. In addition, research has 
shown that software companies are interested in applying 
Agile Software Development (ASD) to develop the software 
by global teams to have the combined advantages of ASD 
and GSD [1][2]. The combination of Agile development 
methods and GSD is known as Distributed Agile Software 
Development (DASD). Venkatesh defined Distributed Agile 
Development as: “Distributed Agile, as the name implies, is 
a model in which projects execute an Agile Methodology 
with teams that are distributed across multiple geographies” 
[3].  This combination has shown signs of providing IT 
companies with the ability to meet the critical success factors 
of the software industry, such as quality, time, and cost. 
Sutherland et al. [4] detail their experience of applying a 
distributed Scrum approach and report several advantages 
such as the high increase of team productivity, an increase in 
the transparency between team members, better building of 
trust, and increased project visibility. However, although the 
potential advantages of GSD are clear, research has shown 
that software companies are encountering significant 
challenges by applying this approach. Developers are not 
always able to apply Agile practices successfully due to 
challenges introduced through the global development 
environment including distance and time zone differences 
[5].  
This paper presents the results of a qualitative study 
involving a company which employs the DASD approach.  
The study focuses on the challenges of adopting the DASD 
and discusses some possible techniques to address and 
minimise those challenges.  
This paper is structured as follows: first, the related work 
will be reported. Following this, the research method will be 
discussed and explained. Section III will describe the 
investigated company, before the strategy of development 
for the investigated company is reported. Results and 
discussion will be presented in Section VI, whilst the final 
section contains the summary and conclusion. 
II. 
RELATED WORK 
A systematic review studied applying Scrum practices in 
global software development using 27 literature studies and 
analyzed 
the 
challenges 
into 
three 
categories: 
communication, coordination, and control [6].  
The challenges of using Agile with distributed national 
teams can be categorized into three types of lack: 
communication, trust, and control [2].  
The effective communication within distributed Agile 
software development is a huge challenge. The reasons that 
create the communication challenges could be summarized 
into four categories: a lack of communication tools, time 
zone differences, a lack of English language, and a lack of 
teamwork. Those barriers may limit and decrease the 
communication in a distributed development [7]. 
There are current needs for more studies to understand 
how to adopt Agile methods with global software 
development. There is a lack of theoretical models of 
distributed Agile. More studies are needed to address the 
literature gap by investigating the geographical, cultural, and 
temporal challenges [8]. 
Previously, we conducted a systematic literature review 
focused on the challenges of applying DASD [9]. One of the 
significant findings of that review was that most of the 
DASD studies cover the technical perspective of the 
development and lack coverage of the human perspective. 
The review also reported that: “The human perspective needs 
to immediately search to explore the effect of the cultural 
differences on the relationship between the stakeholders and 
352
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

the development process” [9]. The present case study aims to 
address this issue by exploring the challenges and techniques 
of applying DASD from the developers’ point of view (i.e., 
human perspective).   
III. 
RESEARCH METHOD 
The research presented in this paper is from a single 
descriptive case study. Data was collected by structured 
interviews. The interviews were face-to-face and were 
recorded with a voice recorder. Also, notes of the main ideas 
and answers were taken during the interviews. The data was 
transcribed from verbal form to textual form. The transferred 
documents were then compared to the notes from the 
interviews, to ensure the reliability of the data. Following 
this, a thematic analysis was applied, which is an approach to 
identify the themes and patterns from the collected 
qualitative data [10], [11]. In addition, the data-driven 
method was selected for the thematic analysis of this study. 
The data-driven method regarding Asnawi can be 
summarized into five steps, as follows: “(i) reducing the raw 
information, (ii) identifying themes within subsamples, (iii) 
comparing themes across subsamples, (iv) creating a code, 
and (v) determining the reliability of the code” [12]. Finally, 
to ensure the validity and the reliability of the study’s 
qualitative analysis and to identify any elements of bias by 
the researcher, two procedures were applied. Firstly, after the 
final code was developed, it was tested by other researchers, 
who applied it to the raw data to ensure that the code and 
theme analyses were correct. The second procedure was 
having the transcripts rigorously checked by other 
researchers, comparing them to the verbal records and the 
notes that had been taken. The aim was to identify any 
transcription errors or mistakes [12]. 
IV. 
THE INVESTIGATED COMPANY 
The interviews were carried out at a large, global IT 
development company. The company has 27 offices 
distributed throughout 11 countries around the world: 
Australia, Brazil, Canada, China, Germany, India, Singapore, 
South Africa, Uganda, the United Kingdom and the United 
States. The company provides software design and delivery 
services, as well as development consulting services. It also 
produces customized software products as tools to support 
distributed Agile software development, thus helping the 
development teams to communicate, share information and 
track progress. The company applies Agile methods in order 
to develop its global software projects and has been involved 
in the software industry for the past 20 years. The company 
required to be anonymous within this study. 
Three interviewees with good experience of Agile 
methods and the distributed development approach agreed to 
participate in this study. Participant-1 has experience 
working with more than 15 teams from the entire world 
covering the east and the west side including countries such 
as India, USA, UK, and Australia. Participant-2 has 4 years 
of experience including a special course in Agile 
development during his Master degree, and significant 
experience when it comes to with working with stakeholders 
from different cultures including people from China, Europe, 
UK, USA, and Middle East. Participant-3 acquired a vast 
amount of experience before joining this company as he 
developed a project while both the product owner and 
business analyst were away from the development team. He 
also has experience working with customers from different 
countries including New Zealand, Australia, and USA.  
V. 
THE DEVELOPMENT STRATEGY 
The investigated company applies a development 
strategy which goes through different stages before starting 
to develop the software. The first phase is the design phase. 
The project starts with meetings and the gathering of all 
participants in one place for a few days to finalize the 
requirements and estimate the deadline of the project. The 
inspection phase will come next where all the tasks should be 
broken into small stories. This involves the Project Manager 
(PM), the Quality Assurance (QA), the Business Analyst 
(BA) and software developers. The next stage is the analysis 
phase. The development stories need to be investigated 
during this stage to provide a better understanding of these 
tasks and create links between them. The BA plays a main 
role in this phase. The development then begins, by applying 
a weekly iteration to show the development case and update 
the other stakeholders. Each development team needs to have 
a daily meeting to track the development and identify any 
development issues.  
VI. 
RESULTS AND DISCUSSION 
The results of the thematic analysis classify the 
development 
challenges 
into 
four 
main 
themes: 
communications, cultural differences, management and 
control, and Agile skills 
A. Communication and Collaboration Challenges 
1) Lack of communication and losing the ability to make 
immediate 
decisions 
(A1): 
Agile 
methods 
require 
interactive, daily communication among stakeholders. This 
is difficult to provide within the global environment. The 
lack of communication and collaboration is a significant 
issue within the DASD approach [13]. Team members were 
not able to make immediate decisions, because of the 
distance between the participants and the lack of 
communication. As mentioned by Participant-3: “We lose 
the ability to have an immediate decision. If we were here at 
11am and we wanted to know something straightaway the 
earliest we could hear from our product owner will be 3pm 
and that's only if he's got up very early.”  
2) Time zone differences (A2): The time zone 
differences is one of the main reasons that cause DASD’s 
communication challenges [7]. The distance and time zone 
differences among stakeholders could reduce the available 
overlap of working hours of distributed teams. Participant-3 
reported the issue of having no overlap of working hours by: 
“I think if you had two teams where their working days 
didn't overlap at all, so if you had the UK and the East 
353
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

Coast of Australia where there's something like a 10 hour 
difference, I don't think that would work”. 
3) The lack of English language skills (A3): In most 
cases, the English language is not the mother tongue of the 
offshore team members. The lack of proficiency in English 
could pose a major challenge for the development teams. 
The different levels of English among the stakeholders 
could create misunderstandings [14], in the event of people 
trying to express or indicate meaning by a hint and 
expecting the others to understand them. Participant-3 
reported that: “If you're having a discussion and there’s a 
thing that you don't say and you assume the other person 
knows and it's implied, that's where you get the chance for 
errors”. 
Participant-2 who is not a native English Language speaker 
described his experience with communication with people 
with different level of English as hard. Participant-2 stated 
that:  “The other thing which might be hard is that different 
people have different levels of English knowledge.”. Also, 
Participant-2 
mentioned 
some 
difficulties 
with 
understanding native speakers who are speaking with a 
difficult accent or speaking in a fast way: “Sometimes it's 
hard to understand people who are speaking English as 
their mother language, as well”. 
B. Communication and Collaboration Techniques 
1) Find 
a 
time 
and 
a 
way 
for 
synchronised 
communication (B1): It is important to create an overlap of 
working hours among the distributed teams. The overlap 
hours will be used as available time for synchronised 
communication. Participant-3 reported there should be at 
least 2 hours of overlapping: “If you have two teams in 
different time zones their working days have to have some 
overlap and if they don't have some overlap and if they don't 
have some overlap then you need to change the working 
hours of one of those teams so there is an overlap. I think 
there needs to be, I would say, at least two hours overlap 
between those two teams so they can talk face-to-face”. 
With some cases that require staying late, the project 
manager and the business analyst could stay late to 
communicate with the other stakeholders. Participant-1 
stated that: “PM or BA or whoever needs to showcase 
something to the client, they need to stay for a while.”. 
2) Flexibility regarding working from home (B2): 
Working hours should be flexible; therefore, the team 
members should be able to work from home when 
necessary. This flexibility could help to create overlapping 
hours among teams. Participant-1 reported that: “Yeah so 
the company gives you the opportunity and flexibility to 
work from home.  They also provided the broadband.  ”. 
Participant-2 stated as well: “The people are free to do and 
people are getting flexible times to do work from home or 
work from somewhere else when they are away from the 
office”. 
3) The communication schedule should be regimented 
(B3): The development stakeholders should have a daily, 
regimented communication schedule. Such a schedule 
would 
help 
to 
increase 
the 
communication 
level. 
Participant-3 reported that: “I think you need to do what 
we're doing here at this company and have a very 
regimented communication schedule”. The product owner 
should make himself available to communicate with the 
development team as Participant-3 said: “I'd say from our 
product owner's point of view he's got to make sure that he's 
very involved and he keeps himself aware with what we're 
up to”. Communication, as reported earlier, is the main issue 
with the DASD development, so it is necessary to increase 
the level of communication among the distributed teams. 
Participant-3 summarised that by: “You've got to make sure 
that you communicate well with the stakeholders”. 
4) Ask people to speak clearly and be explicit (B4): 
Regarding the different levels of English skills among the 
stakeholders, there is a need to speak clearly and to be 
explicit about what is wanted. Participant-3 mentioned that: 
“It's much better to be explicit and to really make clear what 
you want”. 
5) Apply multi-channels for communication (B5): There 
is a need to have multi-channels for communication. There 
should be a choice of method and use of the one best suited, 
such as phone calls, video Skype calls, voice over IP and 
texting. Participant-2 reported that: “We are using voice 
over IPs and the video services.  We use Skype, we use 
GoToMeeting, we have an internal voice over IP device 
here”, and reported as well: “we use our own internal 
service for chatting”. In addition, software to share the 
screen and knowledge helps teams to share information and 
increase the visibility of the development. Participant-2 
mentioned that: “So, I can say, tools are really important in 
distributed systems”. 
 
Figure 1.  Communication with DASD challenges and techniques 
Figure 1 illustrates the recommended techniques to 
address communication and collaboration challenges. It links 
the challenges with the techniques in order to provide better 
understanding of them.  For example, to address challenge 
A1, techniques B3 and B5 can be employed. 
A1 
A2 
A3 
 
B1 
B2 
B3 
B4 
B5 
B- Techniques 
A- Communication 
Challenges 
 
354
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

C. Cultural Differences Challenge 
The cultural differences of the stakeholders could create 
certain misunderstandings [14]. Participant-2 reported that: 
“There are a lot of different things in a culture.  Like, in 
some countries, people really like to talk about politics”. 
Cultural differences could limit the communication between 
development 
participants 
in 
order 
to 
avoid 
any 
misuderstandings. Participant-2 stated: “I feel I know, if 
somebody from a different culture joins our team, how to 
behave and then how to find the limits on paid 
programming, how to speak to people, what sort of 
questions to ask, what sort of questions not to ask.  So, these 
are the things which we learn”.  
D. Techniques to Address the Cultural Differences  
1) Creating an open culture within the development 
teams (D1): There is need to promote an open culture 
among the project’s stakeholders, encouraging people to be 
free, flexible and liberal. Team members should accept 
other cultures and try to understand them. Participant-1 
mentioned that: “our culture rules are very liberal, free, 
there is no dress code. The people are free to do and people 
are getting flexible times to do work from home or work 
from somewhere else when are they away from the office. So 
this flexibility provides a lot of appreciation to the 
developers and all the people”. Participant-2 also stated that 
there is need to be flexible within the people from different 
cultures: “people who are working in a distributed team, I 
guess should be more flexible than people who are working 
on a one - centralised process”.  
2) Move the developers between the teams (D2): 
Providing the team members with the opportunity to move 
between global offices could help them to discover and 
explore other cultures. Participant-1 mentioned that by: 
“there is a global assignment program which runs every 
year and it gives a chance to people to work round in any 
office in the world. So it's a very diverse culture in the 
company”.   
3) A training course for new members (D3): New team 
members should have a special training course to provide 
them with the required Agile skills and make them aware of 
other cultures. The investigated company has a multi-
cultural training centre in Bangalore, India. This could help 
new members to understand different cultures as reported by 
Participant-1: “Once you hire anyone, if it's a fresh then he's 
a graduate.  We send them to a university.  There is a 
university which runs in India, in the Bangalore office”. 
And Participant-1 mentioned as well: “All the students 
around the world gather with a different culture in India.  
They do works together on the same project for three 
months.  After that we send them across different global 
assignments”. 
4) Choose people who fit in with the distributed 
development culture (D4): Before hiring new people, they 
should be interviewed to ensure that they fit in with the open 
culture of the DASD. Participant-1 stated that: “Always 
choose the people who actually fit with the culture. We don't 
choose people who don't fit with the culture”. 
In addition, new members should have a qualifying 
period of a few months, to make sure they fit in with the 
development culture and environment as reported by 
Participant-1: “Even after that, there is a probation of three 
months, okay. So in the three months itself it is enough time 
to know the person's attitude and whether - how he is 
behaving in all the steps. So if he doesn't fit in the culture 
then we don't extend their assignment”. 
5) Flexible working hours and places (D5): This 
practice was mentioned when addressing communication 
issues and could also help to increase trust between the 
company and its employees, one of the cultural issues 
within the DASD. Participant-1 stated that: “They do - they 
know all right that the company the flexibilities providing to 
them it come with a trust. So the company's putting trust on 
them so they, of course, need to do the work properly and 
they also need to put the trust in the company”. 
 
Figure 2.  Cultural difrencess with DASD challenges and techniques 
Figure 2 illustrates the recommended techniques to 
address the cultural differences challenges. Techniques D1 to 
D5 have been applied by the company to minimize the 
impact of the cultural differences to the development. The 
cultural differences could reduce the communication as 
reported early within this section and limit the collaboration 
between the team members. 
E. Management and Control Challenges  
1) Updating the developed story on the online wall (E1): 
Development participants with the DASD approach usually 
apply an online story wall to track progress. In some cases, 
they have issues with not updating the developed story on 
the online wall. This could lead to duplication when 
developing the required functions/stories. Participant-2 
declared that: “So, sometimes, you - when you get into a 
story and then it finishes the phase and you start another 
story, you may forget to move it on the electronic wall”. 
2) Estimation difficulties (E2): The second management 
challenge is with estimation. Large teams could have 
difficulties with estimating their stories. Participant-2 
explained this issue by: “Estimation for example is one 
C- Cultural 
differences 
challenges 
D1 
D2 
D3 
D4 
D5 
D- Techniques 
355
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

thing that it's hard.  So when you have 20 people online and 
you have 20 people here and you want to estimate stories!!”. 
F. Management and Control Techniques 
1) Increase communication (F1): There is a need to 
increase the level of communication in order to manage the 
work and to resolve any misunderstandings. Participant-3 
mentioned that the communication is required to better 
apply DASD: “If we do a lot of communication then we can 
apply all the practice of Agile globally”. Participant-2 
reported that as well: “There should be a lot of 
communications between the teams as well”. In addition, 
Participant-1 stated the same thing to manage the distributed 
Agile development: “Any company you go there would be 
the challenge to manage such a vast distributed work, right?  
It requires a lot of communications; it requires a lot of co-
ordinations between all the offices to work together right”. 
2) Use software management tools (F2): Using software 
management tools is required to apply different Agile 
practices within the distributed development environment. 
Those tools support the development, make it more visible 
and easier to track. The tools usually have an online wall for 
the development stories, which is required to keep it 
coordinated with the normal story wall. Participant-3 
declared that: “So we have story wall, but that's all 
replicated in an online tool and we make sure that we keep 
those two in sync so that the product owner at any time can 
look at our entire story wall and see what's in progress”. 
And Participant-2 mentioned the same as well: “is really 
important and there are not - and you should be able to first 
of all, be responsible for updating the electronic wall”. 
3) Split large teams (F3): Having a large number of 
participants could make it difficult to apply some Agile 
practices, such as estimation. Therefore, splitting large 
teams could be a solution. However, this requires a lot of 
communication and coordination between the divided 
teams. Participant-2 agreed with that by: “You split the 
team, you have two PM, you split the number of developers, 
you will add a new BA.  But there should be a lot of 
communications between the teams as well”.  
4) Estimation cards (F4): This practice aims to address 
the estimation issue. The participants would have a card to 
estimate each story and they would then show their cards 
and discuss issues. Participant-2 mentioned that technique 
by: “we talk about the story and we count to three and 
everybody should show a card, or show their hands”. 
 
Figure 3.  Mmanagment with DASD challenges and techniques 
Figure 3 links the management challenges with the 
recommended techniques in order to provide better 
understanding of them. 
G. Agile Level Challenges 
1) Lack of a close relationship (G1): The distributed 
development could result in losing the main aspect of Agile, 
which is the close relationship between the development 
participants. Participant-3 mentioned that by: “I think the 
main problem with global is - with Agile it's very important 
to maintain a close relationship to your customers”. 
2) Working with traditional organisations/ customers 
(G2): Traditional organisations/customers may not accept 
the Agile way of development. They may be used to 
traditional development approaches, such as the waterfall 
model [4]. This could decrease the Agility level of the 
development. For instance, traditional organisations may 
take their time to allow the developers access to their 
database or to the necessary information. Participant-2 
reported that:  “We speak a lot with tech team, with 
manager's team, with anyone who can - but they are 
traditional companies.  They have a lot of paperwork for 
just getting one server, access to one server, or access to a 
database.  But, in an agile company you just ask for 
something.  In our company if you need to access 
anything…we just ask and we get it as soon as we can.  But 
it's sometimes in other, in client side, in the companies 
which we are working for they have their own database 
team which we - a manager should give you permission”. 
And Participant-2 stated that as well: “There have been 
problems with those things.  Like database is the obvious 
one that we can say, you don't get the access to them.  You 
need to go through their process”. 
3) Difficulty in applying some Agile practices (G3): The 
global development setting could make it difficult to apply 
some Agile practices [14]. For example, the stand up daily 
meeting 
is 
difficult 
within 
the 
distributed 
Agile 
development, because of the large number of participants 
and the lack of visibility among the meeting attendees. 
Participant-2 reported that by: “I guess the whole point of 
stand up is visibility so that you can see somebody and you 
can ask a question”, and by: “So imagine if 100 people want 
E1 
E2 
 
F1 
F2 
F3 
F4 
F- Techniques 
E-Management 
Challenges 
 
356
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

to talk for one minute each, it would be a bout two hours 
while people are standing”. 
Furthermore, applying the retrospective practice with the 
distributed development is difficult as well. Participant-2 
stated that: “Retrospectives are getting affected.  Because 
retrospectives in an agile team are, I guess I feel it's the most 
physical thing happens because what we do is that we 
practice different type of  RETROS.  So what we do is that 
every iteration that we have RETROS we change them.  So 
we try a lot - because we don't want to make it boring”  
H. Techniques for the Agility Level  
1) Use software tools to enable some Agile practices 
(H1): Usually, development teams adopt various software 
tools to help them to apply Agile practices. Participant-3 
reported that: “We've done some remote pair programming 
with him. We use tmux which is a UNIX tool for sharing 
terminals and we used a VNC client called Chicken and we 
also use Skype and SSH to set up the connection. So with a 
combination of those we can have a live pair programming 
session and that worked quite well”. In addition, Participant-
2 stated that as well: “Tools are really important,, learning 
how to work with tools are taking time.  You may need more 
efforts”.  
2) Dealing with the issues of traditional organisations 
(H2): Sometimes, IT development companies avoid 
working with a traditional product owner who is not able to 
understand Agile values. Sometimes, they try to provide the 
traditional product owner with some training about the 
Agile approach before the project begins.  Participant-2 
mentioned that: “So the way that we work is that we try not 
to accept projects in our company that clients don't give us 
the chance of working in a way that we want.  But some 
projects it happens that we try - so in some projects when 
the clients accept that we work for them, but they are not 
working in agile way.  So usually we try to teach, teach the 
team which we are going to work with them.  We 
communicate a lot, we talk a lot, we have lots of meetings in 
our team.  So we try to settle these things before accepting a 
project”.   
3) Practice for the stand up daily meeting (H3): Practice 
includes throwing a ball during the meeting. The member 
who has the ball is the one who is allowed to speak. This 
practice aims to manage the meeting by allowing one person 
to speak at a time. In addition, they hold computer tablets, 
such as iPads, during the meeting to see the distributed 
members.  This practice reported by Participant-2 as: “we 
use iPad and we ask them to be online and they talk about 
it.  So we have a ball as a token.  We throw it to each other 
when someone is going to talk.”. 
4) Apply simple documentation (H4): One of the 
techniques in the DASD approach is doing simple reports to 
share information from the meetings with participants who 
were not able to attend. Participant-2 declared that by: 
“Usually one person writes a simplify - a very simple report 
that this happens, this decision has been made.  This is the 
reason that we make this decision.  So we just read that 
email every night for example and we get updated about 
what's happening.  If we don't like it, we can state it the day 
after, or we can send an email and discuss it”.  
 
Figure 4.  Agile challenges and techniques with DASD 
Figure 4 reports the Agile challenges and links them with 
the recommended techniques to award better apply for Agile 
methods with the distributed development. 
VII. SUMMARY AND CONCLUSION 
The reported results suggest that communication barriers 
are the biggest challenge faced when employing the DASD 
approach. A number of techniques were reported by the 
participants to address the known communication issues with 
this approach. Most of the issues related to the lack of 
communication between stakeholders. The development 
teams and product owners need to work hard to increase the 
level of the communication between them.  
The other main issue was the lack of Agile skills and 
knowledge from the developers and the product owners.  The 
global setting makes this issue more clear because of the 
distance between the stakeholders. There is need to improve 
the Agile knowledge by applying training courses and Agile 
coaching to ensure the sufficient application of Agile 
practices.  
The management issues are also related to the distance 
and the size of the development teams. Improving the 
communication level and Agile skills could reduce the 
management difficulties. Splitting the team may be applied 
with teams which have a large number of developers.  
The issue of cultural differences is the least important 
problem because most of the stakeholders are aware of the 
other cultures and have the ability to work with different 
people. However, some misunderstanding could arise, 
particularly with the lack of communication. Thus, it is 
essential that the development participants are clear, flexible, 
and open with other cultures.  The experience with DASD 
from the investigated company helped to understand the 
cultural differences challenges. The applied techniques such 
as training courses help to minimize the cultural differences 
issues. Moving the team members around the development 
teams throughout the world will help them to better 
understand the other cultures and could address this issue.  
In conclusion, this case study highlighted some of the 
major challenges of applying DASD. It has also listed 
development practices to award a more effective application 
of this development approach. The discussion showed that 
G1 
 
G2 
 
G3 
 
H1 
 
H2 
 
H3 
 
H4 
 
 
H- Techniques 
 
G- Agile Challenges 
 
 
357
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

the study findings are in agreement with existing literature 
for most of the investigated points. 
 Future work will involve further investigation in order to 
develop a better understanding and guidance towards 
applying Agile practices within a global setting.  
VIII. ACKNOWLEDGMENT 
This work is supported by the University of Dammam, 
the Ministry of Higher Education, Kingdom of Saudi Arabia, 
(PhD scholarship). 
REFERENCES 
[1] M. Nisat and T. Hameed, “Agile methods handling offshore 
software development issues,” 8th  International: Multitopic 
Conference, Proceedings of INMIC, 2004, pp. 417-422. 
[2] A. Szőke, "Optimized feature distribution in distributed agile 
environments," 
Product-focused 
software 
process 
improvement,  2010, pp. 62-76. 
[3] U. Venkatesh, Distributed Agile: DH2A - The proven Agile 
software development approach and toolkit for geographically 
dispersed teams. New Jersey: Technics publications LLC., 
2011. 
[4] J. Sutherland, G. Schoonheim, N. Kumar, V. Pandey, and S. 
Vishal, "Fully distributed scrum: Linear scalability of 
production 
between 
San 
Francisco 
and 
India," Agile 
conference, IEEE, 2009, pp. 277-344. 
[5] E. Hossain, M. Babar, and H. Paik, “Using Scrum in global 
software development: A systematic literature review,” 
Fourth IEEE International Conference on Global Software 
Engineering, 2009, pp.175-184. 
[6] E. Hossain, P. Bannerman, and D. Jeffery, "Scrum practices 
in global software development: A research framework," 
Product-focused software process improvement, pp. 88-102., 
2011. 
[7] S. Dorairaj, J. Noble, and P. Malik, “Bridging cultural 
differences: A grounded theory perspective,” Proceedings of 
the 4th India Software Engineering Conference, ACM, 2011, 
pp. 3-10. 
[8] D. Smite, N.B. Moe, and P.J. Agerfalk, "Agility Across Time 
and Space: Summing up and Planning for the Future," Agility 
Across Time and Space. Springer Berlin Heidelberg, 2010, 
pp. 333-337. 
[9] A.S. Alqahtani, J. Moore, D. Harrison, and B. Wood, “The 
challenges 
of 
applying 
distributed 
Agile 
software 
development: A systematic review,” International Journal of  
Advances in Engineering & Technology, Vol. 5, Issue 2, 
2013, pp. 23-36. 
[10] R. Boyatzis, Transforming qualitative information: Thematic 
analysis 
and 
code 
development. SAGE 
publications 
incorporated. 1998. 
[11] C. Dawson, Introduction to research methods: A practical 
guide for anyone undertaking a research project. Oxford: How 
To Books Ltd. 2009. 
[12] A. Asnawi, A. Gravell,  and G. Wills, “Emergence of Agile 
methods: 
Perceptions 
from 
software 
practitioners 
in 
Malaysia,” AGILE India, 2012, pp. 30-39.  
[13] M. Paasivaara and C. Lassenius, “Using Scrum Practices in 
GSD Projects,” Agility Across Time and Space. Springer 
Berlin Heidelberg, 2010. pp. 259-278. 
[14]  M. Kajko-Mattsson, G. Azizyan, and M.K. Magarian, 
“Classes of distributed agile development problems,” 
The Agile 2010 Conference, IEEE, 2010, pp. 51-58. 
 
 
358
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

