An Artiﬁcial Intelligence Approach Towards Sensorial Materials
Florian Pantke, Stefan Bosse, Michael Lawo, Dirk Lehmhus
ISIS Sensorial Materials Scientiﬁc Center
University of Bremen
Bibliothekstrasse 1, 28359 Bremen, Germany
{fpantke, sbosse, mlawo}@informatik.uni-bremen.de,
dirk.lehmhus@uni-bremen.de
Matthias Busse
Fraunhofer IFAM
Wiener Strasse 12, 28359 Bremen, Germany
matthias.busse@ifam.fraunhofer.de
Abstract—Sensorization aims at equipping technical struc-
tures with an analog of a nervous system by providing a
network of sensors and communication facilities that link
them. The objective is that, instead of having been designed
to loads and tested to conditions, a structure can experience
and report design constraint violations by means of real-time
self-monitoring. Specialized electronic components and com-
putational algorithms are needed to derive meaning from the
combined signals of integrated sensors. For this task, artiﬁcial
intelligence approaches constantly gain importance; the more
so as the trend of ever increasing sensor network size and
density suggests that sensor and structure may soon become
one, forming a sensorial material. Current simulation tech-
niques capture many aspects of sensor networks and structures.
For decision making and communication, the intelligent agent
paradigm is an accepted approach, as is ﬁnite element analysis
for structural behavior. To gain knowledge how sensorial
structures can most effectively be built, an artiﬁcial intelligence
based process for the design of such structures was developed
that uses machine learning methods for fast load inference. It is
presented in this paper, along with evaluation results obtained
in experiments using a ﬁnite element model of a strain gauge
equipped plate, which demonstrate the general practicability.
Keywords-sensorial material; ﬁnite element method; sensor
network; machine learning; multi-agent system
I. INTRODUCTION
Adopting principles from nature, sensorization aims at
equipping technical structures with an analog of a nervous
system by providing a network of sensors and communica-
tion facilities that link them. Specialized electronic com-
ponents as well as suitable computational algorithms are
needed to derive meaningful information from the sensor
signals. The main objective is to build structures that—
instead of being designed once and tested for health based
on externally observable exceptional events or in predeﬁned
intervals—constantly monitor themselves during operation
by means of sensors attached to the structure’s surface,
directly printed on it [1], or embedded inside the material
[2]. Such structures will be able to infer facts about their cur-
rent loading state, e.g., autonomously detect overloading, as
well as permanently record and carry with them their entire
mechanical and/or thermal loading history. In order to attain
high sensor densities, i.e., to embed hundreds or thousands
of sensors into one single structure, all sensors and electronic
circuits need to be miniaturized to a maximum degree. As
these components usually have no signiﬁcant load-bearing
capabilities, the volume they consume within the structure
directly affects the latter’s mechanical stability. Thus, in
the sensor integration process, avoiding the introduction of
evident macrostructural defects is imperative [3] [4].
An additional requirement, particularly in mobile applica-
tions, is a low power consumption proﬁle of the electronic
components. It simply is not feasible in most cases to
equip the structure with a high-performance microprocessor
unit along with sufﬁcient RAM that would be necessary
for inferring facts about the applied load cases from the
sensor signals by employing the ﬁnite element method
(FEM) during operation, for instance. Less computation- and
resource-intensive approaches are called for. Especially if
smart structures reacting to stimuli from their environment
[5] are desired, a spatial distribution of numerous simple,
miniaturized, low-power evaluation units over the entire
structure seems advisable. As is the case for a human acci-
dentally touching a hot plate, fast locally conﬁned reactions
preventing (further) damage may be vital for an engineered
structure, while calculating, e.g., the millimeter-precise lo-
cation of load introduction along with the global geometric
state of the entire structure may be an unaffordable luxury.
For long-term availability, the respective sensor nodes should
ideally draw on local energy sources [6].
This article presents a conceptual approach to designing
sensorial structures and implementing their self-monitoring
capabilities utilizing basic methods from the ﬁeld of artiﬁcial
intelligence (AI). The central aim is to derive useful infor-
mation despite having to cope with limited computational
power and with noise in sensor signals. Lack of calibration
as well as of matching between sensors and the possibility
of drift pose additional major challenges in this task. The
evaluation results presented in this article suggest that simple
machine learning models created once at design time and
then embedded into the structure for real-time querying can
already yield acceptable load identiﬁcation precision without
having to rely on a ﬁnite element model of the structure to
be available at runtime.
62
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

The remainder of this paper is organized as follows:
Section II provides an overview of the basic AI approach
towards creating sensorial structures. Section III presents
a robust sensor network developed for reliable sensor data
assessment and Section IV introduces a functional mockup
system, which will serve to implement and evaluate dif-
ferent approaches to sensor data assessment and load case
inference. An overview of two simple machine learning
methods that were used for ﬁrst trials with strain data
from FEM simulation is given in Section V. Evaluation
results are presented in Section VI. Section VII portrays
how the intelligent agent paradigm can be employed for
monitoring more complex structures in a distributed fashion.
Section VIII closes with a conclusion and outlook.
II. AN AI APPROACH TOWARDS SENSORIAL
STRUCTURES
The AI-based process model for the design and realization
of sensorial structures is depicted in Figure 1. First, a
geometric CAD model of the desired technical structure is
created. Based on the model, a library of standard load cases
that are expected during operation as well as exceptional
overloading or misuse cases is deﬁned. This library can in
principle comprise several hundred load cases, e.g., various
forces and temperatures applied at various positions. FEM
simulations then are run on the model, generating a large
database of effect data (e.g., displacements, strains, stresses,
temperature values etc.), which, depending on the complex-
ity of the FEM model and the number of deﬁned load cases,
can be several gigabytes in size and may take several days
to compute. It is, of course, impractical to directly run load
case inference algorithms on such a large amount of pre-
calculated data during actual operation of the structure, let
alone to embed it into the structure using ROM circuits.
Therefore, data compaction and data mining algorithms [7]
[8] need to be applied to the FEM input and output in an
ofﬂine preprocessing step to yield a considerably reduced
dataset of key ﬁgures much fewer in count but of high
informative value in terms of reliable load case estimation
and overload detection. The simplest solution here would
be to let a human expert choose selected sensor positions
based on the geometric characteristics of the structure and
manually rig the model with a desired distribution of sensors
for assessing strain, pressure, temperature or similar effects
that are present in the FEM calculation output. Mathematical
optimization methods [9] [10] can be used to aid ﬁnding
optimal sensor distributions at this stage. If a good sensor
distribution has been found, a physical prototype equipped
with real sensors is built, to which (a subset of) the pre-
viously deﬁned load case library is physically applied in a
series of training experiments. The sensor signals resulting
from these load cases are recorded and stored along with
the respective FEM results in the effects database. The same
data reduction procedures that are performed on the FEM
Figure 1.
Artiﬁcial intelligence approach for the design of sensorial
structures
output variables can be executed on the measured sensor
values. For example, key ﬁgure calculation rules producing
statistics (e.g., minimum, maximum, average value, standard
deviation, or much more complex computations) over se-
lected groups or multilevel hierarchies of sensors could be
deﬁned or automatically learned using machine learning and
data mining techniques. It is an open research topic how
such calculation rules can be automatically generated from
the effects and sensor value database in the most beneﬁcial
way with respect to a given load case inference problem.
The resulting compact dataset is fed as training data into
suitable machine learning algorithms [8] [11] [12]. The focus
in this step lies on algorithms whose learned models as well
as respective model evaluation procedures are simple and
small enough to be directly transformed into miniaturized
low-power hardware circuits. Embedding these circuits into
the material yields a sensorial structure, which is able to
constantly monitor its loading state during operation and
issue alerts to its user when overloading is detected.
III. A ROBUST SENSOR NETWORK
When building structures that monitor their own health
state by means of spatially distributed sensors, it is important
that the introduction of local defects in the communication
links between evaluation nodes, e.g., caused by overloading
or misuse, does not result in entire regions of the structure
being cut off from communication and, consequently, global
monitoring processes. Hence, the communication infrastruc-
ture for sending sensor values and issued alerts across the
structure must be robust with respect to sudden failure of
communication links. For this purpose, we have imple-
mented a sensor network capable of dynamically routing
data packets across irregular sensor node topologies, e.g.,
caused by damage of communication links. Such an irregular
network topology is shown in Figure 2. Network nodes are
numbered from 0 to 12; communication links are depicted
as arrows.
Each sensor node in the network processes the signals of
a small local group of physical sensors (e.g., two to eight
in count) and is connected to spatially neighboring nodes
63
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

Figure 2.
Irregular sensor network topology
via point-to-point serial links that deﬁne the network topol-
ogy. A node provides analog signal conditioning, analog-
to-digital conversion (ADC), and digital data processing.
To enable the usage of unmatched and uncalibrated sets
of sensors, the signal processing is implemented with a
zooming window ADC approach. Spatial proximity rela-
tions among the physical sensors are directly translated to
proximity relations in the network topology. With respect to
communication, all nodes simultaneously act as routers and
communication endpoints, with unique topological coordi-
nates assigned to each of them. Communication is message
based using the Simple Local Intranet Protocol (SLIP) [13],
which employs dynamic routing strategies to forward data
packets from their source nodes to desired destination nodes
in the network. For this purpose, each packet contains a
discrete multi-dimensional vector specifying the packet’s
destination in terms of remaining distance in the network
topology. All routing information is held in the packets
without any additional routing tables maintained by the
sensor nodes. The SLIP communication protocol stack is im-
plemented in hardware as a System-on-a-Chip architecture
using FPGA/ASIC target technologies, and in software using
the C and ML programming languages. Both Hardware and
software implementation are automatically generated from
the same high-level programming model using the ConPro
synthesis framework [14]. The communication protocol is
freely scalable in the network’s size and topological dimen-
sionality.
IV. FUNCTIONAL MOCKUP SYSTEM
To practically evaluate the described approach, a func-
tional mockup system was developed, which allows to
experiment with different sensor assessment, data mining,
and machine learning methods. As an evaluation scenario,
we use a simple plate mounted with a ﬁxture along one
short side and a movable single point support at the bottom
face. Different weights can be placed on the top face. The
objective is to estimate the locations and masses of the
weights and recognize overload situations only by examining
a few strain values measured at the plate’s bottom face
using machine learning algorithms. For this purpose, pairs of
orthogonally aligned strain gauges are attached to the bottom
face of the plate at selected positions. Each pair measures the
strain in the X and Y direction of the local face coordinate
system and is connected to a miniaturized sensor node as
described in Section III. The physical framework built for
this scenario permits the installation of plates with different
dimensions, material properties, and sensor distributions.
Each possible sensor conﬁguration consists of sensor nodes
arranged in a topologically two-dimensional mesh network
with each node having direct connections to up to four
neighbors.
Initial trials using a nitrile rubber plate with glued-on
commercial constantan strain gauges showed that the high
load-induced strains occurring in the material lead to accept-
able signal levels and satisfactory load identiﬁcation results.
Since the long-term objective is to integrate the sensors and
electronic circuits into load-bearing structures, comparable
load identiﬁcation accuracy also needs to be attained for
other common materials such as steel and for application
cases with considerably smaller load-induced strains during
standard operation—as is the case with steel loaded within
its elastic range.
Figure 3 shows the experimental setup equipped with a
St37 steel plate, on which four pairs of Ag strain gauges
have been printed in an Aerosol Jet R
⃝ printing process [15]
using commercial pure silver ink. With material combina-
tions permitting the increase of sintering temperatures, a
future switch to CuNi alloys, which show signiﬁcantly lower
temperature dependence of resistivity, is envisaged. In the
depicted setup, insulation between the printed conductive
paths and the steel substrate was provided by a silicone-
based coating layer, once more applied by means of Aerosol
Jet R
⃝ printing. However, in measurement tests with this plate
and the sensor nodes’ ADC components, the signal quality
attained with the printed Ag strain gauges was not yet
suitable for a reliable identiﬁcation of loads limited to the
elastic range.
Figure 3.
Metal plate setup
64
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

Hence, with a revision of the physical metal plate setup
pending, the evaluation presented in this paper uses com-
pletely noise-free strain values from the FEM simulation
step (cf. Figure 1) to gain a ﬁrst set of reference success
rates for the model of a 200 × 300 × 1 mm St37 steel plate.
For each examined machine learning method, the obtained
results represent the best-possible prediction accuracy that
theoretically could be achieved with (physically nonexistent)
perfect sensors and ADC components. As the prediction
accuracy can be viewed as an indicator for the general
practicability of our approach, the success rates obtained
in this evaluation will be used as benchmarks for further
improvement of the hardware prototype (such as ADC
components, sensor printing processes etc.) as well as devel-
opment of more sophisticated machine learning approaches.
The FEM load case library used in the evaluation is de-
ﬁned by dividing the top face of the plate into a 20×20 mm
grid of 176 equidistant load positions. At each position
weights of 100 g and 200 g are separately applied, resulting
in 352 different load cases with a single weight each. As the
sensor inputs directly depend on the strains occurring in the
material, overloading is deﬁned in terms of displacements
instead of strains. This adds a further complication to the
evaluation scenario: We aim at investigating how good the
tested machine learning algorithms perform at expressing
correlations between different types of mechanical effects.
Thus, overloading is deﬁned to occur if and only if at least
one point on the plate’s surface moves downward in global
Z direction more than a given threshold tz. To prevent
a bias towards positive or negative classiﬁcations in the
training set, which may cause misleadingly higher success
rates in the cross-validation examined in Section VI, the
load case library is partitioned into 50 % overload and
50 % non-overload situations. This is done by obtaining the
maximum Z displacement for each load case from the FEM
output and setting the threshold to the median of these 352
values, yielding tz = 130.6 µm for this particular scenario.
Here, the desired result from the machine learning stage is
a—preferably simple—mapping from the measured sensor
values to estimated X and Y coordinates of the applied
load (in the local surface coordinate system), an estimated
mass of the weight in grams, and a yes/no classiﬁcation
whether the displacement threshold tz has been exceeded
by any point of the plate. Accordingly, the desired physical
result is an actual low-power microchip that implements this
mapping in hardware.
V. K-NEAREST-NEIGHBOR AND DECISION TREE
LEARNING
Adhering to the design constraints imposed by the appli-
cation scenario, experiments were started with an implemen-
tation of two of the most basic classiﬁcation and regression
algorithms. Namely, C4.5 decision tree learning [11] and the
simple k-Nearest-Neighbor algorithm [12] were examined.
The training set contains all correct load positions, masses
and classiﬁcation results for every load case in the load
case library along with the respective 8-dimensional strain
vector determined via either sensor measurement or FEM
simulation. To answer a query with k-Nearest-Neighbor (k-
NN), the k entries closest to the query strain vector are
selected and combined into a single estimation for the target
variables. Numerical regression of the load position and
mass can be achieved by calculating the weighted average,
whereas discrete (e.g., Boolean) classiﬁcation is possible by
means of weighted voting. For a ﬁxed k, let E1, . . . , Ek
denote the k nearest points in the training set, (xi, yi, mi)
the load coordinates and mass of Ei, and Q ∈ R8 the query
vector. The estimated load position and mass (xQ, yQ, mQ)
for Q is calculated using inverse distance weighting, i.e.,


xQ
yQ
mQ

 =
k
X
i=1
w(Ei) ·


xi
yi
mi


with w(Ei) = 1/(dist2(Q, Ei) · wsum),
wsum = Pk
i=1 1/(dist2(Q, Ei))
(1)
and dist2(Q, Ei) being the squared Euclidean distance be-
tween points Q and Ei in 8-dimensional strain space.
Weighted voting is done by adding the weighting factors
w(Ei) of all Ei that have the same classiﬁcation and then
assigning to Q the classiﬁcation that gained the largest sum,
defaulting to a “safe” answer (yes) in case of a tie.
In our ﬁrst experiments, the C4.5 decision tree learning
is employed for classiﬁcation only as its reliable extension
to multivariate numerical regression is more elaborate.
VI. EVALUATION RESULTS
Since only values from FEM simulation are used in the
evaluation, i.e., no comparison with measured values from
the physical prototype is made, the spike placed under the
plate’s bottom face was modeled as a roller support in the
FEM model for sake of simplicity. For C4.5 and k-NN with
1 < k < 10, a leave-one-out cross-validation (LOOCV) was
conducted on the training set described in Section IV: Each
singleton subset of the training set was used exactly once
for querying the machine learning models constructed from
its complementary set and comparing the result with the
known correct values. In addition, the models obtained from
the entire 352 element training set were queried using an
intermediate test set INT consisting of 150 g weights placed
exactly at the midpoints between the previously deﬁned grid
positions, resulting in further 10 × 15 load cases neither
the coordinates nor masses of which appear anywhere in
the training set. Depending on the value chosen for k,
the percentage of correct classiﬁcations achieved with k-
NN varies between 89.77 % and 90.91 % in LOOCV and
between 92 % and 93.33 % for INT. The C4.5 decision
tree attained 94.32 % correct classiﬁcations in LOOCV and
65
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

Figure 4.
Classiﬁcation results obtained with leave-one-out cross-
validation on the training set
96.22 % for INT. The locations where false positives and
false negatives were returned in LOOCV by C4.5 and k-NN
with k = 4 are shown in Figure 4. While at each position
a 100 g and a 200 g load case were tested, no position
produced wrong classiﬁcations for both masses.
The numerical regression results obtained for the test set
INT by k-NN with k = 4 are illustrated in Figure 5. The
difference vectors from the actual to the estimated load
positions are shown in the bottom vector ﬁeld (median length
9.09 mm, average length 15.88 mm), whereas the absolute
error in load mass estimation is visualized in the upper
plot (median 20.39 g, average 25.38 g). Among all tested
values for k, the median difference vector length of the load
coordinate regression was smallest with k = 4, while the
average was smallest with k = 2. In Figure 4 and 5, the
locations of the strain sensors and the roller support are
indicated with diamond and circle symbols, respectively.
The ﬁxture is located on the Y coordinate axis. It is clearly
noticeable that the regression error is largest in the vicinity
of the supports.
Figure 5.
Regression error for 150 g weights placed at intermediate
positions
VII. MONITORING MORE COMPLEX STRUCTURES WITH
INTELLIGENT AGENTS
While the evaluation results suggest that the tested ma-
chine learning methods are, in principle, suitable for load
case estimation on simple structures like a metal plate, it is
not clear how these methods can successfully be utilized for
monitoring much more complex technical structures as well,
e.g., objects that comprise many, possibly movable, parts.
Several problems arise in such application scenarios. Firstly,
the deﬁnition of a comprehensive and adequate load case
library is more difﬁcult for these structures as the number
of relevant load cases might increase exponentially with
the number of constituent substructures and the mechanical
effects might depend on the movable parts’ positions and
orientations. Secondly, even if the load case library or FEM
effects database does not already reach a prohibitive size due
to combinatorial growth, the more complicated the cause-
effect relations reﬂected in the produced datasets become,
the less fruitful an identiﬁcation and extraction of these
patterns into a proper model may prove in the data mining
and machine learning stages. As a consequence, higher error
66
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

rates are to be expected in the actual load case inference.
Finally, the machine learning model for the entire structure
may grow to a size where it neither can be created or queried
as a whole in reasonable time with the available resources
nor ﬁt on a single chip. To circumvent these difﬁculties,
we propose an intelligent agent based approach to solving
the global monitoring problem by splitting it into multiple
spatially constrained subproblems and solving these in a
distributed fashion. Such multi-agent systems have already
been successfully applied to acoustic detection of high-
velocity impacts [4].
Generally, an agent can be viewed as a hardware and/or
software entity that receives perceptions from an environ-
ment it is situated in and reacts to them, either reﬂex-based
[16] or deliberately [17], in order to perform one or more
speciﬁc tasks [18]. Applied to the task of monitoring a
sensorial structure, the agent may be physically situated on
the latter, with its perceptions coming from different groups
of sensor nodes and communication with other agents. If
the agent has access to a knowledge base of facts about
the structure’s geometric and mechanical characteristics as
well as cause-effect relations with respect to load introduc-
tion, it can draw conclusions about the current state of its
environment based on its sensory input, i.e., make sense
of the sensor signals. It is the presence of this semantic
level that distinguishes intelligent agents from nodes of
the sensor network described in Section III: While the
latter only provide the infrastructure for routing measured
sensor data across the physical object and have no way of
interpreting this data, the agents are capable of incrementally
constructing a mental model of their surroundings over time.
In our approach [19], the structure is partitioned into
connected substructures, which can be further partitioned
into regions. To each region an individual monitor agent is
assigned that regularly adjusts its internal model of the re-
spective region according to its perceptions. Communication
among agents covering directly neighboring regions enables
the construction of a (simpliﬁed) distributed global view of
the entire structure. For this purpose, each monitor agent
requires an appropriate description of how loads and their
effects are transmitted across the boundaries between the
agent’s region and each of the adjacent regions. That way,
an agent can infer from its local sensory input the structural
state at these boundaries and send the results to its topo-
logical neighbors, which in turn update their local models
by combining their own sensor data with the boundary state
information they received from their respective neighbors,
and, again, pass the updated boundary states on to these, and
so forth. Establishing a multilevel hierarchy of agents and
incorporating (to a manageable extent, given the available
resources) equation-based knowledge from the FEM domain
into the reasoning process may yield a distributed load infer-
ence algorithm that is adaptive in terms of desired temporal
resolution and predictive precision, depending on the number
of communication rounds performed per time unit. Thus,
one of the next logical steps in our research will be the
development of such algorithms along with the necessary
agent communication protocols and their evaluation in the
functional mockup system.
VIII. CONCLUSION AND FUTURE WORK
This article presented a novel AI-based process for the
design of self-monitoring sensorial structures that utilizes
machine learning methods for resource-constrained real-time
load case inference. A distributed sensor network architec-
ture and a functional mockup system using a simple steel
plate as evaluation scenario was introduced. The general
practicability of the machine learning approach was shown
for this scenario using noise-free data from FEM simulation
only. In the evaluation very simple algorithms like k-NN
and decision tree learning already yielded over 90 % correct
classiﬁcations in the detection whether the plate’s maximum
displacement vector exceeded a given length due to load
introduction. Also numerical regression of the load locations
and masses with k-NN attained a prediction quality that may
be acceptable in many practical application cases. It seems
likely that the results can be improved by employment of
more advanced machine learning methods and, in particular,
by incorporation of speciﬁc domain knowledge from the
ﬁeld of applied mechanics into these. The focus here should
lie on the best possible elimination of false negatives, which
correspond to unrecognized overload situations, and on the
increase of prediction quality for sensor signals with a low
signal-to-noise ratio. On the hardware side, further improve-
ment of functional printing processes as well as miniature
ADC components is expected to lead to better signal quality
and, thus, more accurate load identiﬁcation results. In addi-
tion to this, one of the next steps in our research will be
the development and implementation of multi-agent based
approaches that enable monitoring of geometrically much
more complex structures. When the viability of this has been
shown, the machine learning models need to be enhanced
to automatically accommodate to structural aging while in
operation, e.g., in materials like polymers or textiles, where
this aspect is of particular importance.
ACKNOWLEDGMENT
The authors gratefully acknowledge the ﬁnancial support
by the State and University of Bremen in the framework
of the ISIS (Integrated Solutions in Sensorial Structure
Engineering) Sensorial Materials Scientiﬁc Center (fund
numbers 54416906, 54416918, and 54416919).
REFERENCES
[1] M. Maiwald, C. Werner, V. Z¨ollmer, and M. Busse, “INKtel-
ligent Printing
R
⃝ for sensorial applications,” Sensor Review,
vol. 30, no. 1, pp. 19–23, 2010.
67
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

[2] D. Mayer, T. Melz, C. Pille, and F.-J. W¨ostmann, “CAST-
TRONICS – direct integration of piezo ceramic materials in
high pressure die casting parts for vibration control,” in Pro-
ceedings of Actuator 2008 – 11th International Conference
on New Actuators, Bremen, Germany, June 9th-11th 2008,
pp. 61–66.
[3] W. Lang, F. Jakobs, E. Tolstosheeva, H. Sturm, A. Ibragi-
mov, A. Kesel, D. Lehmhus, and U. Dicke, “From embed-
ded sensors to sensorial materials – the road to function
scale integration,” Sensors and Actuators: A Physical, 2011,
doi:10.1016/j.sna.2011.03.061.
[4] W. H. Prosser, S. G. Allison, S. E. Woodard, R. A. Wincheski,
E. G. Cooper, D. C. Price, M. Hedley, M. Prokopenko, D. A.
Scott, A. Tessler, and J. L. Spangler, “Structural health man-
agement for future aerospace vehicles,” in Proceedings of the
2nd Australasian Workshop on Structural Health Monitoring,
Melbourne, Australia, 2004.
[5] V. K. Wadhawan, Smart Structures: Blurring the Distinction
between the Living and the Nonliving.
Oxford Univ. Press,
2007.
[6] R. J. M. Vullers, R. van Schaijk, I. Doms, C. Van Hoof,
and R. Mertens, “Micropower energy harvesting,” Solid State
Electron., vol. 53, no. 7, pp. 684–693, 2009.
[7] O. Maimon and L. Rokach, Eds., The Data Mining and
Knowledge Discovery Handbook.
Springer, 2005.
[8] A. J. Izenman, Modern Multivariate Statistical Techniques:
Regression, Classiﬁcation, and Manifold Learning. Springer,
2008.
[9] R. Jedermann and W. Lang, “The minimum number of
sensors - interpolation of spatial temperature proﬁles,” in
Proceedings of the 6th European Conference on Wireless
Sensor Networks (ESWN), U. Roedig and C. Sreenan, Eds.
Springer, 2009, pp. 232–246.
[10] A. R. M. Rao and G. Anandakumar, “Optimal placement
of sensors for structural system identiﬁcation and health
monitoring using a hybrid swarm intelligence technique,”
Smart. Mater. Struct., vol. 16, no. 6, pp. 2658–2672, 2007.
[11] J. R. Quinlan, C4.5: Programs for Machine Learning.
Mor-
gan Kaufman Publishers, Inc., 1993.
[12] T. M. Mitchell, Machine Learning.
McGraw-Hill, 1997.
[13] S. Bosse and D. Lehmhus, “Smart communication in a wired
sensor- and actuator network of a modular robot actuator sys-
tem using a hop-protocol with delta routing,” in Proceedings
of Smart Systems Integration 2010 - 4th European Conference
and Exhibition on Integration Issues of Miniaturized Systems,
T. Gessner, Ed., Como, Italy, March 23st-24rd 2010, CD-
ROM.
[14] S. Bosse, “Hardware-software-co-design of parallel and dis-
tributed systems using a unique behavioural programming and
multi-process model with high-level synthesis,” in Proceed-
ings of SPIE Microtechnologies Conference 2011, Session
EMT 102 VLSI Circuits and Systems, Prague, Czech Republic,
April 18th-21th 2011.
[15] M.
Maiwald,
C.
Werner,
V.
Z¨ollmer,
and
M. Busse,
“INKtelligent
R
⃝ printed strain gauges,” in Proceedings of
the Eurosensors XXIII conference, Lausanne, Switzerland,
September 6th-9th 2009, pp. 907–910.
[16] R. A. Brooks, “Elephants dont play chess,” Robot. Auton.
Syst., vol. 6, no. 1&2, pp. 3–15, 1990.
[17] A. S. Rao and M. P. Georgeff, “Decision procedures for BDI
logics,” J. Logic Comput., vol. 8, no. 3, pp. 293–343, 1998.
[18] N. R. Jennings, “On agent-based software engineering,” Artif.
Intell., vol. 117, no. 2, pp. 277–296, 2000.
[19] M. Lawo, H. Langer, D. Lehmhus, M. Busse, A. Burblies,
and W. Lang, “Simulation techniques for the description of
smart structures and sensorial materials,” J. Biol. Phys. Chem.,
vol. 9, pp. 143–148, 2009.
68
FUTURE COMPUTING 2011 : The Third International Conference on Future Computational Technologies and Applications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-154-0

