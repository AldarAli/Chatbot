Using HTML5 for M-Learning Environments 
 
Sandra Sendra1,2, Jaime Lloret2, Ana Isabel Túnez-Murcia1, Laura Garcia2,3 
1Departamento de Teoría de la Señal, Telemática y Comunicaciones (TSTC), Universidad de Granada. Granada, Spain 
2Instituto de Investigación para la Gestión Integrada de zonas Costeras, Universitat Politècnica de València, Valencia, Spain 
3University of Haute Alsace, Mulhouse-Cedex, France 
 
e-mail: ssendra@ugr.es, jlloret@dcom.upv.es, anatunez@correo.ugr.es, laugarg2@teleco.upv.es 
 
Abstract—Currently, there are several remote learning 
platforms based on video streaming. In most situations, these 
multimedia resources are displayed using smartphones that 
can be wirelessly connected to networks with deficient 
capabilities. In this scenario, the levels of Quality of Service 
(QoS) and Quality of Experience (QoE) perceived by users can 
be very low. Therefore, with the aim of finding the most 
efficient combination of Web browsers, codecs and containers, 
this paper presents a study to analyze how the encoding used in 
videos can affect the network performance in terms of data 
transfer rate, transmission delays, transmission errors and 
throughput. The tests are performed using mobile devices with 
Android as the operating system. Different Web browsers, 
containers and codecs supported by HyperText Markup 
Language V.5 (HTML5) are also included in this study. The 
browsers used in this study are Google Chrome, Firefox and 
Opera while the containers considered to carry out our tests 
are MP4 and WebM. Results show that MP4 could be a good 
option to transmit high resolution videos while WebM would 
be the best option for low quality videos. 
Keywords- 
HyperText 
Markup 
Language 
(HTML5); 
multimedia; m-learning; audio; video; live streaming; codecs. 
I. 
INTRODUCTION 
The constant evolution of the industry sector and the 
Information and Telecommunications Technology (ICT) has 
led society to require better skilled graduates [1]. This fact is 
changing the way of teaching. It is changing from traditional 
methods, based on magisterial classes, to a new way of 
teaching based on new technologies. Today, electronic 
devices are an essential part our daily life and they are 
present in our day-to-day tasks in home environments, the 
workplace or in the academic field [2]. 
Blended and remote learning [3] is a new way of 
understanding teaching. It is characterized by accessing 
teaching resources from the Internet and personalizing the 
learning systems, which are designed for either personal 
computers (e-learning) or mobile devices (m-learning) [4]. 
Furthermore, e-learning and m-learning are characterized by: 
• 
Their simplicity of use. 
• 
There is no distance between professors and 
students. 
• 
Their price is affordable for the students. 
• 
They permit the interactivity between professors 
and students. 
• 
They allow the ubiquity and the access to 
courses anywhere. 
Among digital resources, m-learning, the use of video 
tutorials and live streaming videos with teaching purposes 
[5] [6] could be the ones that require knowledge of the 
network architecture and the features of end devices.  
Historically, these platforms have been designed using 
Adobe Flash to allow the compatibility of this type of 
content on a greater number of devices. However, many 
mobile devices are not capable of supporting this technology. 
HyperText Markup Language V.5 [7] is the fifth major 
revision of the basic language of the World Wide Web. It is 
supported on a wide range of platforms and browsers which 
allows a greater number of devices to be able to access the 
contents of these learning platforms. The use of this kind of 
resources implies focusing part of the effort in guarantying 
the correct reception of content, i.e., reaching good levels of 
quality of service and quality of experience [8]. Issues in 
network capacity limit the volume of data the users can 
receive and thus the quality of video [9]. So, it is important 
to know the most adequate way of encoding the video to be 
transmitted. 
So, considering the aforementioned arguments, this paper 
presents a practical study on how the encoding used in 
videos can affect network parameters such as data transfer 
rate, transmission delays, transmission errors and throughput 
when distributing and playing multimedia content in mobile 
devices, using Android as the operating system. Different 
Web browsers, containers and codecs supported by HTML5 
are also included in this study. The browsers used in this 
study are Google Chrome, Firefox and Opera while the used 
containers are MP4 and WebM. 
The rest of this paper is structured as follows. Section 2 
presents some interesting previous works related to proposals 
of m-learning tools based on new technologies and practical 
tests to improve the efficiency in video transmission. The 
scenario, tools and the videos used to carry out or test bench 
are presented in Section 3. Section 4 presents the obtained 
results and a discussion regarding to the results. Finally, 
Section 5 shows the conclusion and future work. 
II. 
RELATED WORK  
This section presents some interesting works related to 
the use of HTML5 for teaching purposes and different 
practical experiments where the use of containers and codecs 
is analyzed for achieving the best QoS and QoE. 
65
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

The current trend in academic and professional training is 
the implementation of distance and blended courses [3]. 
Many of these courses are based on the use of remote labs, 
video-tutorials [10] and live streaming of videos [11] that 
students can play on any type of device, i.e., laptops, tables, 
personal computers and even smartphones. Between all these 
devices, the one that can present the greatest limitations are 
smartphones because the connection to access to these 
teaching resources may be deficient. 
Considering these issues, there are several studies related 
to the optimization of video transmission. One of the most 
important aspects, regarding these optimization tasks, is the 
enhancement of QoS and QoE with the use of the most 
suitable codecs and containers for the type of device and, 
even the restrictions of the networks. In this sense, I. Mateos-
Cañas et al. [12] presented the design and test of an 
autonomous decision algorithm that was able to analyze 
video content and network constraints. According to the 
measurements results, the system extracted the predominant 
color of the requested video and determined the most optimal 
compression codec for transmitting the video through that 
network. The proposal was tested with videos of different 
resolutions and predominant colors to measure the levels of 
QoS and QoE. The results showed that codecs, such as H264 
(MPEG-4) would be a good option when the predominant 
color of videos were black or white while XVID [13] would 
be the best codecs to transmit videos with red, green or blue 
as predominant colors.  
A. López-Herreros et al. [14] presented an analysis about 
the characteristics of some video compression codecs 
included in HTML5. The authors analyzed several 
parameters such as the type of browser, frame rate, bitrate, 
encoding time and final quality of the video. The results 
showed that values registered for PAL (Phase Alternating 
Line) [15] are better than the ones obtained in NTSC 
(National Television System Committee) [16] system in 
terms of compressed file size, being very similar in both 
MP4 (H.264) and Ogg (Theora) for PAL systems while 
WebM (VP8) results are identical in PAL and NTSC. 
Another important front in the field of m-learning is the 
development of platforms that make easy the access to 
teaching resources or remote laboratories. N. Wang et al. 
[17] presented a mobile-optimized application architecture 
for incorporating remote laboratory practices in M-Learning 
environments.  Through the developed platform, students can 
perform different experiments in a similar way as they would 
physically in a laboratory. The system has been developed 
for different mobile platforms, such as iOS, Android, 
Windows Mobile and Blackberry. To test the system, authors 
proposed the realization of practices of proportional–
integral–derivative controls. The system was tested using the 
Baidu mobile cloud testing bed with interesting and 
successful results.  
Finally, M. Truebano and C. Munn [10] evaluated the use 
of a video tutorial during active learning laboratory-based 
sessions. The performed study comprised undergraduate 
students divided into three groups, one that received face-to-
face training, one that received training only through the 
videos and one that received a mix of both methodologies. 
The tests were performed in terms of behavior, the end result 
of the procedure and the answers to a questionnaire. Results 
showed that a blended approach yielded the greatest success 
when performing the procedure alone. So, video tutorials can 
be considered as a good tool to complement a blended 
learning to teach practical skills. 
As we have seen through these works, there is a great 
interest in the development of systems to facilitate the 
implementation of remote and blended learning. However, 
none of the proposals and others we have read, present real 
experiments on video streaming on mobile devices. 
Therefore, this article tries to collect these values. We think 
this study can serve as a reference for the development of 
future remote learning platforms. 
III. 
TOOLS AND EQUIPMENT USED IN TEST BENCH. 
This section presents the different pieces equipment as 
well as the tools used to carry out our test benches. 
A. Scenario 
In order to perform our experiments and test bench, we 
have implemented the network shown in Figure 1. It is 
composed by 2 different mobile Android devices with very 
similar characteristics but different operating systems. 
Videos were stored in the server and were transmitted 
wirelessly to the smartphones. Both devices are connected to 
a router (192.168.0.1/24), which establishes the link between 
the end devices and the video server (192.168.0.10/24). 
Wireless devices are connected using the IEEE 802.11n 
standard and the connection between the router and server is 
a Cat5e link. 
192.168.0.10
Server
192.168.0.1
Wireless Router
(DHCP Server)
Cat. 5e
Smartphone 
Client
Smartphone 
Client
IEEE 802.11n
 
Figure 1.  Scenario used during the test bench.  
The hardware features of these devices are shown in 
Table 1.  
B. Videos used to perform to tests 
In order to carry out our test benches, we have selected a 
free distribution video developed by the Blender Institute 
called Big Buck Bunny [18]. The original features of this 
video are shown in Table 2. 
When transmitting videos through Web pages, they are 
usually adapted to the different devices that requested them. 
This fact gives us videos with different resolutions. In mobile 
devices, the kind of networks that give them Internet access 
should also be considered when video is streamed. 
Therefore, in order to consider the final quality of the 
displayed videos, we have encoded the video with different 
66
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

codecs. In this case, H.264 [19] and WEBM [20] has been 
considered in this paper. Regarding to the video resolutions, 
we have used video resolutions of 360p, 480p, 720p and 
1080p. Table 3 shows the characteristics of the encoded 
videos. 
C. Web browsers and mobile operating systems  
In order to decide which operating systems and browsers 
we want to include in our study, it is interesting to firstly 
analyze their uses. As Figure 2 shows, the number of users of 
mobile devices (44.2%) is almost the same of Desktop users 
(52%) in contrast to the number of users of tables which is 
very low (< 4%) [21]. Regarding the most used operating 
system (see Figure 3) [22], it is easy to see the predominant 
domain of Android as a mobile operating system with a 
percentage of users of 72.23% followed by iOS with a 
percentage of users near to 24%. Finally, regarding the use of 
Web browsers [23], Figure 4 shows that Chrome is the Web 
browser that presents the biggest percentage (47.20%). So, it 
will be included in our experiments. Firefox and Opera 
which are also included in our tests present a percentage of 
3.35% and 5.01%, respectively.  
TABLE I.  
FEATURES OF SMARTPHONES USED DURING THE TESTS 
Device 
Smartphone features 
Model 
Processor 
Graphic Card 
O. S. 
Max. Resolution 
Xiaomi Mi A1 
Snapdragon 625 
octa-core 2.2GHz 
Android 8 
One 
Android 8 One 
5.5” 
1920 x 1080 
Samsung 
Galaxy S4 
Snapdragon 400 
dual-core 1.7 GHz 
Android 4.2.2 
Jelly bean 
Android 4.2.2 
Jelly bean 
4.3” 
540 x 960 
TABLE II.  
FEATURES OF THE ORIGINAL VIDEO USED IN OUR TESTS 
Video 
Original video features 
Size 
Original Container 
Video format 
Audio format 
Duration 
Overall bit 
rate 
Width x Height 
(pixels) 
Original 
85.5 MiB 
MPEG-TS 
AVC 
MPEG Audio 
56” 382ms 
12.7 Mbps 
4000x2250 
TABLE III.  
 FORMATS, RESOLUTION, FRAME RATE, BITRATE AND SIZE OF THE DIFFERENT VIDEOS USED IN OUR TESTS 
Codec 
Features 
Video 
Resolution 
FPS 
Bitrate (KBPS) 
Size (MIB) 
Video Format 
Audio Format 
None 
Original 
2250 
60 
127000 
85.5 
AVC 
MPEG Audio 
 
 
2160 
30 
3950 
77.4 
AVC/AAC 
MPEG Audio / AC-3 
MP4 
 
720 
30 
1992 
13.4 
AVC/AAC 
MPEG Audio / AC-3 
MP4 
 
480 
30 
965 
6.41 
AVC/AAC 
MPEG Audio / AC-3 
MP4 
 
360 
30 
774 
5.16 
AVC/AAC 
MPEG Audio / AC-3 
WebM 
 
1080 
30 
0.167 
12 
VP8 
Vorbis 
WebM 
 
720 
30 
0.055 
5.69 
VP8 
Vorbis 
WebM 
 
480 
30 
0.021 
2.21 
VP8 
Vorbis 
WebM 
 
360 
30 
0.036 
2.61 
VP8 
Vorbis 
 
52.07%
44.19%
3.74%
0.00%
10.00%
20.00%
30.00%
40.00%
50.00%
60.00%
Desktop Devices
Mobile Devices
Tablet Devices
Percentage of users(%)
 
Figure 2.  Desktop vs Mobile vs Tablet Market Share Worldwide 
72.23%
24.55%
1.12%
0.62%
0.39%
0.32%
0.00%
10.00%
20.00%
30.00%
40.00%
50.00%
60.00%
70.00%
80.00%
Percentage of users(%)
 
Figure 3.  Mobile Operating System Market Share Worldwide 
67
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

47.20%
21.17%
13.00%
6.03% 5.01% 4.24% 3.35%
0.00%
5.00%
10.00%
15.00%
20.00%
25.00%
30.00%
35.00%
40.00%
45.00%
50.00%
Percentage of users(%)
 
Figure 4.  Browser Version Market Share Worldwide 
After considering the statistics shown in this section, we 
decided to use Android as the mobile operating system and 
Chrome, Opera and Firefox as Web browsers because all of 
them are capable of supporting the requirements of HTML5 
videos. 
IV. 
RESULTS 
This section presents the results obtained after 
performing our tests for both devices using different Web 
browsers and containers. Results have been divided by 
operating system, showing the average value of the studied 
parameter.  
A. Results for Android One 
Figure 5 shows the values of data transfer rate as a 
function of the video resolution on Android One devices 
wirelessly connected to an IEEE 802.11n network. As we 
can see, the browser that, in general, registers a higher data 
transfer rate is Firefox when using MP4 container, reaching 
values of 3 Mbps in 720px video resolution. Opera browser 
in combination to MP4 registers the biggest value of data 
transfer rate for 720px videos. Comparing the behavior of the 
three browsers, the one that presents the best values is 
Chrome with values around 1Mbps for the videos with the 
highest resolution.  
Figure 6 shows the delay (in ms.) as a function of the 
video resolution for Android One devices. In this case, the 
browser that presents the worst results is Chrome when 
videos are encoded using WebM. The combinations that 
show the best results are the use of Firefox and Opera, using 
a MP4 container.  
Regarding the error rate (see Figure 7), the behavior of all 
Web browsers and containers present values of error rate 
lower than 2% being the Chrome-WebM combination the 
one that presents the worst results with a percentage error of 
1.58%. 
Finally, Figure 8 shows the throughput registered for 
Android One devices as a function of the selected browsers 
and containers. As we can see, the general trend is that the 
average throughput is between 0.5 and 1.3 Mbps, 
highlighting the case of Opera- MP4 for 720px videos which 
presents a value of 5 Mbps.  
 
0
1
2
3
4
5
6
1080
720
480
360
Data Transfer Rate  (Mbps)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
0
10
20
30
40
50
60
1080
720
480
360
Delay (ms)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
Figure 5.  Data transfer rate as a function of the video resolution on 
Android One 
Figure 6.  Delay as a function of the video resolution on Android One 
0.00%
1.00%
2.00%
3.00%
4.00%
1080
720
480
360
Error Rate  (%)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
0
1
2
3
4
5
6
1080
720
480
360
Throughput  (Mbps)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
Figure 7.  Error rate as a function of the video resolution on Android One 
Figure 8.  Throughput as a function of the video resolution on Android  
 
68
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

0
0.5
1
1.5
2
1080
720
480
360
Data Transfer Rate  (Mbps)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
0
20
40
60
80
100
1080
720
480
360
Delay (ms)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
Figure 9.  Data transfer rate as a function of the video resolution on Android 
Kit Kat 
Figure 10.  Delay as a function of the video resolution on Android Kit Kat. 
0.00%
1.00%
2.00%
3.00%
4.00%
1080
720
480
360
Error rate  (%)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
0
0.5
1
1.5
1080
720
480
360
Throughput  (Mbps)
Video Resolutions (px)
Chrome MP4
Firefox MP4
Opera MP4
Chrome Webm
Firefox Webm
Opera Webm
 
Figure 11.  Error rate as a function of the video resolution on Android Kit Kat. 
Figure 12.  Throughput as a function of the video resolution on Android Kit 
Kat 
 
B. Results for Android Kit Kat 
Figure 9 shows the values of data transfer rate in Mbps 
for different video resolution and Web browsers for Android 
Kit Kat devices wirelessly connected to an IEEE 802.11n 
network. As Figure 9 shows, the browser that registers the 
highest data transfer rate for high resolution videos is 
Chrome, reaching values of 1.1 Mbps when a WebM 
container is used. Firefox registers the biggest value of data 
transfer rate when 480px videos are transmitted using MP4 
containers. Finally, Opera browser in combination to MP4 
registers the biggest value of data transfer rate for 720px 
videos. Comparing the behavior of the three browsers, the 
one that presents the best values is Opera with values around 
0.33 Mbps for the videos with the highest resolution.  
Figure 10 shows the delay (in ms.) as a function of the 
video resolution for devices running Android Kit Kat. In this 
case, the browser that presents the worst results is Chrome 
when videos are encoded in any of the containers under 
study, with values higher than 80 ms. For transmitting videos 
with the highest resolution, the best option is to use Opera in 
combination to WebM containers, with average values of 
delay lower than 5ms. 
Regarding the error rate (see Figure 11), we can see that 
the worst cases present values of error rate lower than 3%. 
Opera in combination with WebM is the combination that 
presents the best results, reaching values lower than 0.2% in 
the worst case (values for videos of 720px). 
Finally, Figure 12 shows the throughput registered for 
devices running Android Kit Kat as a function of the selected 
browsers and containers. As we can see, MP4 is the 
container that presents the best results for high resolution 
videos although it is the worst option for transmitting low 
resolution videos. In contrast to this fact, WebM presents the 
best results for low resolution videos. Finally, Opera in 
combination with WebM is the combination that presents the 
best results for 720px videos, reaching values higher than 
1.35 Mbps. 
V. 
CONCLUSION AND FUTURE WORK 
The growing interest in the development of remote 
learning platforms has led to the need of improving the 
capabilities of networks to facilitate the access of users to 
multimedia resources and to improve their QoE. To this end, 
one of the strategies is the choice of the most appropriate 
codec and container for transmitting multimedia files such as 
video. Therefore, this paper has presented a practical test 
bench to analyze the network parameters when videos are 
processed with different containers for finally reproducing 
them in different Web browsers based on HTML5. The 
videos have been reproduced using smartphones running 
Android One and Android Kit Kat operating systems. After 
carrying out our tests, we extract the following conclusions: 
For the Chrome browser, MP4 is presented as the best 
container in terms of lower data transfer rate. In terms of 
delay and error rate, MP4 presents better statistics in high 
resolution videos while WEBM is the best option for low 
69
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

quality videos. In the case of Firefox, MP4 appears as the 
container with the highest data transfer rate and throughput. 
However, it has a greater delay and error rate. WEBM is the 
container that presents the better delay, although the values 
of throughput and error rate are high. Finally, the use of 
Opera in combination with the WEBM container presents the 
best results in terms of delay and throughput while MP4 has 
better behavior in terms of error rate and data transfer rate 
for high resolution videos. 
As future work, we want to perform similar tests to other 
kind of devices and operating systems and finally, we think it 
could be interesting to consider the design of an intelligent 
algorithm for real-time transcoding [24] to transmit video in 
different media and platforms based on HTML5 through the 
new generation of networks (5G) [25].  
ACKNOWLEDGMENT 
This work has been partially supported by the European 
Union through the ERANETMED (Euromediterranean 
Cooperation through ERANET joint activities and beyond) 
project ERANETMED3-227 SMARTWATIR, by the 
“Ministerio de Economia, Industria y Competitividad”, 
through the “Convocatoria 2016 - Proyectos I+D+I - 
Programa Estatal De Investigación, Desarrollo e Innovación 
Orientada a los retos de la sociedad” (Project TEC2016-
76795-C6-4-R), through the “Convocatoria 2017 - Proyectos 
I+D+I - Programa Estatal de Investigación, Desarrollo e 
Innovación, convocatoria excelencia” (Project TIN2017-
84802-C2-1-P) and by the “Ministerio de Ciencia, 
Innovación y Universidades” through the “Ayudas para la 
adquisición 
de 
equipamiento 
científico-técnico, 
Subprograma estatal de infraestructuras de investigación y 
equipamiento científico-técnico (plan Estatal I+D+i 2017-
2020)” (project EQC2018-004988-P). 
REFERENCES 
[1] S. Aronowitz, Technoscience and cyberculture. Francis and 
Taylor Group, 1st Edition, 2014. 
[2] K. Oshima and Y. Muramatsu, “Current situation and issues 
related to ICT utilization in primary and secondary 
education,” Fujitsu Scientific & Technical Journal, vol. 51, 
no. 1, pp.3-8, 2015. 
[3] S. Sendra, J. M. Jimenez, L. Parra Boronat, and J. Lloret, 
“Blended Learning in a Postgraduate ICT course,”. Proc. 1st 
International Conference on Higher Education Advances 
(HEAD' 15). June 24-26, 2015. Valencia, Spain. pp. 516-525. 
[4] P. Nedungadi and R. Raman, “A new approach to 
personalization: integrating e-learning and m-learning,”, 
Education Tech Research Dev, vol. 60, no. 4 ,pp. 659–678, 
2012. 
[5] A-R. Bartolomé-Pina and K. Steffens, “Are MOOCs 
Promising Learning Environments?”, Comunicar, vol. 22, no. 
44, pp. 91-99, 2015. 
[6] A. J. Estepa, R. Estepa, J. Vozmediano, and P. Carrillo, 
“Dynamic VoIP codec selection on smartphones”, Network 
Protocols and Algorithms, vol. 6, no. 2, pp. 22-37, 2014. 
[7] G. 
Anthes, 
“HTML5 
leads 
a 
web 
revolution”. 
Communications of the ACM, vol. 55, no. 7, pp. 16-17, 2012. 
[8] J. Lloret, M. García, and F. Boronat, “IPTV: the television on 
the Internet”, Editorial Vértice, Málaga (Spain), 1st Edition, 
2008. 
[9] L. Fabrega and T. Jove, “A review of the architecture of 
admission control schemes in the Internet”, Network 
Protocols and Algorithms, vol. 5, no. 3, pp.1-32, 2013. 
[10] M. Truebano and C. Munn, “An evaluation of the use of video 
tutorials as supporting tools for teaching laboratory skills in 
biology”. Practice and Evidence of the Scholarship of 
Teaching and Learning in Higher Education, vol. 10, no. 2, 
pp. 121-135, 2015. 
[11] T. C. Thang, H. T. Le, A. T. Pham, and Y. M. Ro, "An 
Evaluation of Bitrate Adaptation Methods for HTTP Live 
Streaming," in IEEE Journal on Selected Areas in 
Communications, vol. 32, no. 4, pp. 693-705, 2014. 
[12] I Mateos-Cañas, S Sendra, J. Lloret, and JM Jimenez, 
“Autonomous video compression system for environmental 
monitoring”, Network Protocols and Algorithms, vol. 9, no. 
1&2, pp. 48-70, 2017. 
[13] Xvid Web site. Available at: https://www.xvid.com/ [Last 
access: March 13, 2019] 
[14] A. López-Herreros, A. Canovas, J. M. Jiménez, and J. Lloret, 
"A new IP video delivery system for heterogeneous networks 
using HTML5," Proc.2015 IEEE International Conference on 
Communications (ICC), London, UK, June 8-12, 2015, pp. 
7053-7058. 
[15] PAL ITU-R recommendation web site. Available at: 
https://www.itu.int/rec/R-REC-BT.1197/en 
[Last 
acess: 
March 13, 2019] 
[16] NTSC ITU-R recommendation web site. Available at : 
https://www.itu.int/rec/R-REC-BT.1298/en 
[Last 
access: 
March 13, 2019] 
[17] N. Wang, X. Chen, G. Song, Q. Lan, and H. R. Parsaei, 
“Design of a New Mobile-Optimized Remote Laboratory 
Application Architecture for M-Learning”, IEEE Transactions 
On Industrial Electronics, vol. 64, no. 3, pp. 2382-2391, 2017. 
[18] Big Buck Bunny video. In Blender Foundation Web site. 
Available 
at: 
https://peach.blender.org/download/ 
[Last 
access: Dec. 5, 2018] 
[19] Y.-K. Wang, R. Even, T. Kristensen, and R. Jesup, “RTP 
Payload Format for H.264 Video (RFC 6184)”. In Internet 
Engineering Task Force (IETF) Web site. Available at: 
https://tools.ietf.org/html/rfc6184 [Last access: Dec. 5, 2018] 
[20] WebM codec features Project. In WebMproject Web site. 
Available 
at: 
https://www.webmproject.org/docs/container/[Last 
access: 
Dec. 5, 2018] 
[21] Statistics of worldwide use of electronic devices. In 
Statcounter 
Web 
site. 
Available 
at: 
http://gs.statcounter.com/platform-market-share/desktop-
mobile-tablet#monthly-201707-201707-map 
[Last 
access: 
Dec. 5, 2018] 
[22] Statistics of worldwide mobile operating systems users. In 
Statcounter 
Web 
site. 
Available 
at: 
http://gs.statcounter.com/os-market-
share/mobile/worldwide#monthly-201707-201707-map [Last 
access: Dec. 5, 2018] 
[23] Statistics of worldwide  mobile web browser users. In 
Statcounter 
Web 
site. 
Available 
at: 
http://gs.statcounter.com/browser-version-market-share [Last 
access: Dec. 5, 2018] 
[24] H. Wu and H. Ma, “An Optimal Buffer Management Strategy 
for Video Transmission in Mobile Opportunistic Networks”, 
AHSWN Volume 34, Number 1-4 (2016).  p. 129-146. 
[25] C. Lai, R. Hwang, H. Chao, M. M. Hassan, and A. Alamri, "A 
buffer-aware HTTP live streaming approach for SDN-enabled 
5G wireless networks," in IEEE Network, vol. 29, no. 1, pp. 
49-55, 2015. 
 
70
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-697-2
MMEDIA 2019 : The Eleventh International Conference on Advances in Multimedia

