An Empirical Study Identifying High Perceived Value 
Requirements Engineering Practices in Global Software 
Development Projects 
 
Mahmood Niazi a, b, c, Mohamed El-Attar a,  
a Department of Information and Computer Science, King 
Fahd University of Petroleum and Minerals, Saudi Arabia 
b Faculty of Computing, Riphah International University 
Islamabad, Pakistan 
c Keele University, Keele, ST5 5BG, UK 
{mkniazi, mettar}}@kfupm.edu.sa 
 
Muhammad Usman d and Naveed Ikram c 
c Faculty of Computing, Riphah International University 
Islamabad, Pakistan 
d International Islamic University Islamabad, Pakistan 
naveed.ikram@riu.edu.pk, m.usman@iiu.edu.pk  
 
 
Abstract—Requirements-related problems are reported to be 
the main reason in failures of global software development (GSD) 
projects. There is not much work done to improve requirements 
practices for GSD projects. In this paper, we report results of a 
study conducted in an ongoing project whose aim is to develop a 
framework for the requirements engineering process of global 
software development projects. The objective of this paper is to 
report a recent empirical study which was aimed in identifying 
high perceived value RE practices in the GSD projects. We used 
an online survey questionnaire to collect data from 39 RE 
practitioners of GSD organizations. We have identified 11 
frequently cited high value RE practices that should be planned 
and implemented in GSD projects to avoid frequently occurring 
requirements related problems.  
Keywords - Global Software Engineering; Requirements 
Engineering.  
I. INTRODUCTION 
In global software development (GSD), software or part 
of software is developed by geographically dispersed teams 
and companies whereby the vendor company in one country 
provides its services at low costs to the client company in 
another country. GSD has been growing steadily and an 18-
fold increase in the outsourcing of IT-enabled business 
processes is projected [21]. Over the last decade, many firms 
in Europe have outsourced software development projects to 
other countries such as India, China and Russia. Low cost, 
time saving, access to global IT talent are main reasons for 
software development outsourcing for the client companies 
[2]. Moreover, offshore vendors improve their skills and 
service quality with the experience of offshore outsourcing 
projects, learning new ways to satisfy the clients’ needs.  
GSD, however, has many challenges and risks [9]. 
Significant failure rates have also been reported in GSD 
projects [4]. Nam et al. [12]  investigated 93 client companies 
and found that 36 did not intend to continue their relationships 
with vendors. King [10] reports that JP Morgan decided to 
perform many software activities that it previously outsourced, 
and did not renew its $5 billion contract with IBM. At the root 
of many failures is the increased complexity that outsourcing 
brings to development projects. This complexity results in: 
high coordination costs, information security problems, lack of 
direct communication [19], perceived loss of expertise in the 
outsourced activity [5], cultural misunderstandings [11] and 
infrastructure problems [1]. 
Although a variety of software development tasks are 
outsourced, previous work suggests that most of the factors 
contributing to the failure of outsourcing are related to 
requirements [17]. This is not surprising given that the 
requirements engineering (RE) process has a huge impact on 
the effectiveness of all software development processes [20]. 
A previous UK study of non-outsourced projects found that 
out of 268 documented development problems, requirements 
problems accounted for 48% of all software problems [6]. In 
another study of GSD projects, RE problems in multi-site 
software development organisations were identified [3]. The 
evidence is clear: problems in the requirements phase have a 
wide impact on the success of software development projects 
[6, 20] and an even greater impact on the success of GSD 
projects [3].  
In order to improve the RE process Sommerville and 
Ransom [20] have suggested 66 RE practices. All of these RE 
practices were designed for non-GSD projects and it is hard to 
know if these practices can also be used in the GSD projects. 
Despite the importance of RE in the GSD projects, no 
empirical study has been conducted to observe the perceived 
benefit RE practices in the GSD projects.  
We propose to adapt and customize these 66 RE practices 
specifically for GSD projects. The objective of this paper is to 
report a recent empirical study which was aimed in identifying 
high perceived value RE practices in the GSD projects. To 
achieve this we address the following Research Question 
(RQ): 
RQ: Which RE practices can be effectively used in the GSD 
projects? 
In order to address this RQ we will: 
• 
Determine what the most important of all the RE practices 
advocated by Sommerville and Ransom are for GSD 
projects. 
• 
Identify any additional RE practices important for GSD 
projects that may lack from the list of Sommerville and 
Ransom [20] practices. 
283
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

In earlier research works [15], we discussed preliminary 
results based on a pilot study with five GSD organisations. In 
this paper, we discuss the findings of a broader survey of 39 
RE experts of GSD projects. 
This paper is organised as follows. In Section II 
background is provided. Section III describes the research 
methodology. In Section IV the findings of this work are 
presented and analysed with some discussion. Section V 
describes the summary of results. Section VI provides the 
conclusion and future work. 
 
II. BACKGROUND 
A. RE practices designed by Sommerville and Ransom  
Sommerville et al. [20] suggested a requirements 
framework that includes 66 requirements practices that can 
lead to RE process improvement and ultimately business 
benefits [20]. The 66 requirements practices are classified as 
basic, intermediate and advanced. There are 36 basic practices 
concerned with the fundamental activities required to gain 
control of the RE process; 21 intermediate practices mostly 
concerned with the use of methodical approaches and tools; 
and 9 advanced practices concerned with methods such as 
formal specification used typically for critical systems 
development. The 66 RE practices are grouped into 8 major 
categories [20].  
Thus far, no research has considered using these 66 
practices in global software development projects. Few studies 
have used these practices for non-outsourced projects such as 
[14] and [20]. It is important to identify best RE practices for 
GSD projects as previous work suggests that half of the 
companies that have tried GSD have failed to realize the 
anticipated outcomes, the root cause of which is often related 
to RE problems [17, 18]. 
B. Perceived Benefits. 
We assert that “perceived benefits” of a particular RE 
practice can be used as a judgement criterion for determining 
the degree of importance (value) placed on a RE practice by 
requirements stakeholders. This is because where requirements 
stakeholders from different organisations perceive a RE 
practice as having a high-perceived or medium-perceived 
benefits then that practice should be considered for its 
importance in a RE process of GSD projects. The information 
about relative “perceived benefits” can help researchers and 
requirements stakeholders to better understand various RE 
practices within the GSD initiatives. 
III. RESEARCH METHODOLOGY 
A. Data Collection 
Based on the available resources and nature of this 
research, we set up an online survey questionnaire to collect 
data from RE practitioners of GSD organizations. A pilot 
study was conducted with five RE experts to validate the 
questionnaire. We invited 150 RE experts from different 
software companies involved in GSD projects via emails. 
Basic information about the software companies was available 
on their respective websites. Besides request for participation, 
emails contained the link of the survey site. Out of 150 
invitations, only 39 RE experts agreed to participate so the 
response rate is 26%.  
Each requirements stakeholders was asked to choose and 
rank 66 RE practices against four types of assessments that 
have been developed previously [13, 20]. These assessments 
were: 
• 
High Perceived Benefits (H): A practice has a 
documented standard and is always followed as part of 
the organisation’s GSD process i.e., it is mandatory. 
• 
Medium Perceived Benefits (M): This means that the 
practice is widely followed in the organisation’s GSD 
process but is not mandatory. 
• 
Low Perceived Benefits (L): Some GSD projects may 
have introduced the practice only for that project. This 
practice is described as ‘low’ perceived benefit. 
• 
Zero Perceived Benefits (Z): The practice is never or 
rarely applied to any GSD projects. 
From this list, we have the ‘perceived benefit’ associated 
with each RE practice, i.e. the degree of importance placed on 
a RE practice by requirements stakeholders based on their 
experience from previous GSD projects. 
We received responses from 39 RE practitioners working 
in software companies involved in GSD. Participants were RE 
practitioners with experience ranging from 1 year (minimum) 
to 13 years (maximum) with average experience equal to 6 
years. 70% of participants were from multinational companies. 
Most of the participants’ companies develop business 
applications and data processing applications. Few participants 
also work in the domain of real time, safety critical and 
embedded systems. The majority of the participants work in 
large sized companies having staff sizes greater than 200. 
B. Data Analysis 
In order to analyse the perceived benefit of each identified 
RE practice, the occurrence of a perceived benefit (high, 
medium, low, zero) in each response was counted. By 
comparing the occurrences of one RE practice’s perceived 
benefits obtained against the occurrences of other RE 
practices’ perceived benefits, the relative benefit of each RE 
practice was identified. We have also used this approach to 
identify high and low valued RE practices and software 
process improvement de-motivators in our previous research 
[13]. For most of the data analysis, we have used statistical 
analysis. We believe that the presentation of data using 
statistical analysis is an effective mechanism for comparing 
and contrasting within, or across groups of variables. 
IV. RESULTS AND ANALYSIS 
This section is divided into 8 sub-sections, each of which 
corresponds to one of the eight Sommerville and Ransom 
categories of RE practices. 
284
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

A. Requirements Document Practice 
This category has eight practices which are labelled RD1 
to RD8. Table 1 shows the participant responses for this 
category. RD1 ‘define a standard document structure’ is 
frequently cited high value requirements document practice.  
Because of temporal, geographical and cultural barriers in 
GSD, communication and coordination becomes challenging 
[8]. This leads to problems caused by a lack of shared 
understanding and other knowledge management issues. Use 
of 
predefined 
document 
structure 
improves 
shared 
understanding and helps the readers in reading, following and 
updating the document. Our results indicate that using agreed 
upon standard documents can assist in reducing many issues in 
GSD projects. RD4 ‘include a summary of the requirements’ is 
also one of the frequently cited high value practices in this 
category. This practice can help readers of the requirements 
documents to get the overview of the whole requirements 
document.  
TABLE I. REQUIREMENTS DOCUMENT PRACTICES 
ID 
Requirements Documents Practice 
Type 
of 
Assessment 
(n=39) 
H 
M 
L 
Z 
RD1 
Define a standard document structure 
20 
13 
5 
1 
RD2 
Explain how to use the document 
15 
11 
11 
2 
RD3 
Include summary of the requirements 
19 
13 
5 
2 
RD4 
Make a business case for the system 
15 
18 
4 
2 
RD5 
Define specialized terms 
14 
15 
9 
1 
RD6 
Make document layout readable 
17 
16 
5 
1 
RD7 
Help readers find information 
11 
20 
5 
3 
RD8 
Make the document easy to change 
11 
21 
4 
3 
 
B. Requirements Elicitation Practices 
There are 13 practices in this category which are labelled 
RE1 to RE13 as shown in Table 2. The results show that the 
most common ‘high’ value requirements elicitation practice is 
RE3 ‘Identify and Consult System Stakeholders’. It is an 
interesting result as GSD system stakeholders are usually not 
directly available to the vendor team. They are available on the 
client side. To overcome this problem different tools are used 
ranging from asynchronous communication media (email, 
blogs etc.) to synchronous media (instant messaging, video 
conferencing etc.).  System stakeholders are the domain 
experts and if they are not available for consultation because 
of different GSD barriers then the requirements related issues 
will not be resolved. Other most common (19 out of 39) high 
value practice is RE5 ‘define the proposed system’s operating 
environment’. Many GSD organisations define the proposed 
system’s operating environment during or before requirements 
elicitation. It is critical to determine the scope of the 
environment where the system will be deployed [7]. 
It is interesting to see in Table 2 that 12 out of 39 
participants consider RE10 ‘prototype poorly understood 
requirements’ as a low and zero value practice. This is not in 
line with the general view in RE literature about prototyping 
misunderstood requirements. One probable reason can be the 
cost and effort associated with prototyping of misunderstood 
requirements. 
TABLE II. REQUIREMENTS ELICITATION PRACTICES 
ID 
Requirements Elicitation Practices 
Type of Assessment 
(n=39) 
H 
M 
L 
Z 
RE1 
Assess System Feasibility 
17 
17 
4 
1 
RE2 
Be sensitive to organizational /political 
consideration 
16 
13 
8 
2 
RE3 
Identify, consult system stakeholders 
27 
11 
0 
1 
RE4 
Record requirements sources 
16 
17 
5 
1 
RE5 
Define 
system’s 
operating 
environment 
19 
15 
3 
2 
RE6 
Use 
business 
concerns 
to 
drive 
elicitation 
14 
18 
5 
2 
RE7 
Look for domain constraints 
18 
14 
5 
2 
RE8 
Record requirements rationale 
11 
13 
3 
2 
RE9 
Collect reqs. from multiple viewpoints 
14 
19 
4 
2 
RE10 
Prototype 
poorly 
understood 
requirements 
8 
19 
9 
3 
RE11 
Use scenarios to elicit requirements 
12 
17 
8 
2 
RE12 
Define operational processes 
15 
15 
6 
2 
RE13 
Reuse requirements 
9 
16 
11 
3 
 
C. Requirements Analysis and Negotiation 
This category contains 8 practices; labelled as RA1 to 
RA8. Table 3 presents the participants’ responses for the 
practices in this category. RA1 ‘Define system boundaries’ is 
rated as most common high value practice. Clear definition of 
the system boundary early in the project helps clarify the 
system scope and identifying the interfaces and dependencies 
with other systems. Early definition of the system boundary 
also helps in effort and size estimation. RA3 ‘Use software to 
support negotiation’ and RA7 ‘Use interaction matrices’ are 
frequently cited low value practices. It seems as if they are not 
commonly understood and used practices in GSD projects. 
TABLE III. REQUIREMENTS ANALYSIS AND NEGOTIATION 
PRACTICES 
ID 
Requirements 
Analysis 
and 
Negotiation Practices 
Type 
of 
Assessment 
(n=39) 
H 
M 
L 
Z 
RA1 
Define system boundaries 
20 
14 
3 
2 
RA2 
Use checklists for analysis 
13 
12 
12 
2 
RA3 
Use software to support negotiation 
6 
11 
17 
5 
RA4 
Plan for conflict resolution 
14 
12 
9 
4 
RA5 
Prioritise requirements 
19 
17 
2 
1 
RA6 
Classify 
requirements 
using 
a 
multi-dimensional approach 
11 
12 
13 
3 
RA7 
Use interaction matrices to find 
conflicts and overlaps 
5 
10 
17 
7 
RA8 
Assess requirements risks 
15 
12 
10 
2 
 
D. Describing Requirements Practices 
This category has five practices which are named as DR1 
to DR5 as shown in Table 4. The most common high value 
practices are DR1 ‘Define standard templates for describing 
requirements’ and DR3 ‘Use diagrams appropriately’. The 
high value of DR1 corresponds well with the high value of 
RD1 ‘Define a standard document structure’ described in 
285
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

section IV (A). Use of standard templates for describing 
requirements in GSD facilitates shared understanding and 
handles differences in the organizational culture. Templates 
help reduce the ambiguities of natural language as it poses a 
control and structure on the form the requirements are 
expressed. RE practitioners also see high value in using 
diagrams for describing requirements. Diagrams and models 
help visualize and understand requirements quickly. The high 
value for DR3 is indicative of the desire of RE practitioners to 
have a clear, common and unambiguous view of system 
requirements before the design and development of system 
commences. DR5 ‘Specify requirements quantitatively’ and 
DR4 ‘Supplement natural language with other description of 
requirement’ are the most common medium value practices in 
this category.   
TABLE IV. DESCRIBING REQUIREMENTS PRACTICES 
ID 
Describing Requirements Practices 
Type of Assessment 
(n=39) 
H 
M 
L 
Z 
DR1 
Define standard templates for describing 
requirements 
19 
12 
7 
1 
DR2 
Use languages simply and concisely 
17 
15 
5 
2 
DR3 
Use diagrams appropriately 
19 
10 
4 
5 
DR4 
Supplement natural language with other 
description of requirement 
13 
19 
5 
2 
DR5 
Specify requirements quantitatively 
9 
19 
10 
1 
 
E. System Modelling Practices 
This category has six practices labelled SM1 to SM6. The 
results show that the most common high value requirements 
modelling practices are SM5 ‘Use a data dictionary’ and SM3 
‘Model the system architecture’. Appropriate use of data 
dictionary 
helps 
in 
removing 
the 
ambiguities 
and 
inconsistencies in the requirements document. It is also an 
important practice in building the same understanding of 
different terms, concepts and definitions. Modelling the system 
architecture (SM3) early is important for the realization of 
non-functional requirements of a system. Non-functional 
requirements are vital for the success of a system. We see SM3 
as an important practice as it prompts the consideration of 
non-functional requirements on board as early as the 
requirements phase. 
TABLE V. SYSTEM MODELLING PRACTICES 
ID 
System Modelling Practices 
Type 
of 
Assessment (n=39) 
H 
M 
L 
Z 
SM1 
Develop 
complementary 
system 
models  
9 
15 
11 
4 
SM2 
Model the system’s environment 
9 
15 
13 
2 
SM3 
Model the system architecture 
14 
17 
6 
2 
SM4 
Use structured methods for system 
modelling 
13 
14 
9 
3 
SM5 
Use a data dictionary 
15 
12 
10 
2 
SM6 
Document links between stakeholder 
requirements and system models 
11 
13 
12 
3 
 
F. Requirements Validation Practices 
There are eight practices in this category (Table 6). RV1 
‘Check that requirements document meets your standards’ is 
the most frequently cited high value practice. This practice 
corresponds well with other similar practices in our study, i.e. 
RD1 and DR1. GSD practitioners believe that the compliance 
with standard document structure or template is important and 
should be ensured. RV7 ‘Propose requirements test cases’ is 
another common high value practice. One of the criteria of 
writing better requirements is that they should be testable and 
verifiable. If test cases are written for requirements then this 
will improve the quality of the requirements. Prototyping is 
generally considered to be an important and useful validation 
technique. However, prototyping was a low value practice in 
the requirements elicitation section. The cost and effort 
associated with prototyping seem be the inhibitors of using it 
as an elicitation or validation technique. 
TABLE VI. REQUIREMENTS VALIDATION PRACTICES 
ID 
Requirements Validation Practices 
Type of Assessment 
(n=39) 
H 
M 
L 
Z 
RV1 
Check that  requirements document 
meets your standards 
21 
10 
5 
3 
RV2 
Organise formal reqs. inspections 
13 
11 
12 
3 
RV3 
Use multi-disciplinary teams to review 
requirements 
16 
11 
8 
4 
RV4 
Define validation checklists 
14 
14 
6 
5 
RV5 
Prototyping to animate requirements  
7 
15 
13 
4 
RV6 
Write a draft user manual 
13 
13 
10 
3 
RV7 
Propose requirements test cases 
17 
12 
7 
3 
RV8 
Paraphrase system models 
5 
14 
12 
5 
 
G. Requirements Management Practices 
There are nine practices in this category as shown in Table 
7. RM1 ‘Uniquely identify each requirement’ and RM7 
‘Identify global system requirements’ are most frequently cited 
high value practices. Unique identification of each requirement 
helps in traceability and management of all requirements. 
Identification of global system requirements establishes the 
required system level properties. They are concerned with the 
system architecture and should be appropriately handled in 
early stages of the requirements phase. 
TABLE VII. REQUIREMENTS MANAGEMENT PRACTICES 
ID 
Requirements 
Management 
Practices 
Type of Assessment 
(n=39) 
H 
M 
L 
Z 
RM1 
Uniquely identify each requirement 
20 
12 
5 
2 
RM2 
Define policies for reqs. management 
16 
11 
8 
4 
RM3 
Define traceability policies  
16 
12 
5 
6 
RM4 
Maintain a traceability manual  
13 
10 
8 
8 
RM5 
Use database to manage requirements  
14 
9 
7 
9 
RM6 
Define change management policies 
16 
12 
7 
4 
RM7 
Identify global system requirements 
17 
10 
8 
4 
RM8 
Identify volatile requirements 
9 
14 
10 
6 
RM9 
Record rejected requirements 
7 
8 
16 
8 
 
286
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

H. RE for Critical Systems Practices 
There are nine practices in this category that are labelled 
CS1 to CS9. Most of the practices in this category have similar 
frequency. This category of practices seems less relevant to 
GSD as critical systems are usually not developed in GSD or 
outsource setting. 
TABLE VIII. RE FOR CRITICAL SYSTEMS PRACTICES 
ID 
RE for Critical Systems Practices 
Type of Assessment 
(n=39) 
H 
M 
L 
Z 
CS1 
Create safety requirement checklists 
14 
10 
8 
7 
CS2 
Involve external reviewers in the 
validation process 
9 
14 
9 
7 
CS3 
Identify and analyse hazards  
14 
10 
9 
6 
CS4 
Derive safety requirements from 
hazard analysis 
14 
12 
7 
6 
CS5 
Cross-check 
operational 
and 
functional reqs. against safety reqs. 
16 
7 
11 
5 
CS6 
Specify systems using a formal 
specification 
11 
14 
10 
4 
CS7 
Collect incident experience 
12 
13 
9 
5 
CS8 
Learn from incident experience 
16 
11 
8 
4 
CS9 
Establish an organizational safety 
culture. 
11 
15 
7 
6 
 
V. SUMMARY OF RESULTS 
In this section, we summarise our results and also give 
recommendations to RE practitioners about high perceived 
value RE practices which can be used in GSD projects. These 
high valued practices should be planned and implemented in 
GSD projects to avoid frequently occurring requirements 
related problems. Table 9 lists the most commonly cited high 
value practices in each category. Implementation of RD1, DR1 
and RV1 will help reduce inconsistencies and ambiguities in 
the requirements document. It will also help to build a shared 
understanding of system requirements. Client and vendor 
organisations, being in different countries, usually have 
different nomenclatures. Promoting the use of standard 
templates will help dealing with the issues related to cultural 
differences of client and vendor sides. RE3 has the highest 
frequency count in elicitation. In GSD, vendor teams usually 
do not have direct access to the system stakeholders. We 
recommend that managers should plan to compensate for this 
limitation in GSD projects. GSD managers can use technology 
(e.g. video conferencing) or occasional visits to allow 
development 
team 
representative(s) 
to 
have 
direct 
communication with system stakeholders. The system 
boundaries (RA1) should be defined as it will help in clear 
definition of scope, identification of system interfaces with 
other systems and in project estimation and scheduling. When 
it comes to the requirements descriptions, we recommend that 
the diagrams should be used appropriately (DR3) as many 
concepts or processes are better explained with diagrams. This 
also increases the understanding of a problem domain and 
facilitates knowledge transfer. Use of data dictionary (SM5) is 
also a recommended practice for system modelling as 
appropriate use of data dictionary helps the readers in better 
understand different documents. It also avoids the inconsistent 
use of terms and concepts. 
TABLE IX. MOST COMMONLY CITED HIGH VALUE RE PRACTICES 
ID 
Practice 
Category 
RD1 
RD3 
Define a standard document structure 
Include summary of the requirements 
Documentation 
RE3 
RE5 
Identify and consult system stakeholders 
Define system’s operating environment 
Elicitation 
RA1 
RA5 
Define system boundaries 
Prioritise requirements 
Analysis 
& 
Negotiation 
DR1 
Define standard templates for describing 
requirements 
Description 
DR3 
Use diagrams appropriately 
Description 
SM5 
Use a data dictionary 
Modelling 
RV1 
Check that the requirements document 
meets your standards 
Validation 
RM1 
Uniquely identify each requirement 
Management 
 
VI. CONCLUSION AND FUTURE WORK 
 
To the best of our knowledge, this is the first attempt to 
investigate the most relevant RE practices for GSD 
organizations. We have identified frequently cited high value 
RE practices which should be used in GSD projects to avoid 
frequently occurring requirements related problems. We have 
observed that not all 66 RE best practices are perceived as high 
value practices for GSD projects 
Our ultimate goal is to develop a framework for 
improving RE in GSD projects (GlobReq). The proposed 
GlobReq will be an easy to use framework which will be 
accompanied by a website and tool support to facilitate its use 
in industry. The aim is to help companies avoid randomly 
implementing promising new models and frameworks just to 
see them discarded. 
The following two research questions are our future work 
in this project: 
RQ1. How can we develop GlobReq? 
The basis of the GlobReq framework will be Sommerville and 
Ransom’s framework of requirements practice, empirical study 
with GSD organisations and our questionnaire based survey. 
We will collect detailed empirical data from GSD 
organisations and practitioners to construct and validate the 
GlobReq frameworks. The following initial criteria will be 
used for the development of the GlobReq framework. We have 
used this approach successfully in previous empirical research 
with software development organisations [13; 16].  
• 
User satisfaction: stakeholders need to be satisfied with 
the results of the GlobReq framework. Stakeholders (e.g. 
requirements engineers, systems analysts, outsourcing 
project staff) should be able to use the GlobReq to 
achieve specified goals according to their needs and 
expectations without confusion or ambiguity.  
• 
Ease of use: complex models and standards are rarely 
adopted by organisations as they require resources, 
training and effort. The structure and contents of GlobReq 
should be simple, flexible and easy to follow. 
287
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

• 
Better requirements: GlobReq should aid the development 
of high quality requirements (e.g. less ambiguous, more 
comprehensive, consistent and feasible). 
Based on the empirical data, Sommerville’s Requirements 
Framework will be rationalised to GSD environments. 
GlobReq framework will be developed from the rationalised 
Sommerville Framework together with additional empirical 
data collected from GSD collaborators. The frequently cited 
RE practices with ‘high’ and ‘medium’ perceived value’ will 
be the basis of the GlobReq framework. 
 
RQ2. How can we evaluate the effectiveness of GlobReq? 
The evaluation of the end product is important in order to 
show up areas where the end product has deficits. The 
evaluation assists in future planning and decision making. In 
the evaluation process the lessons learned and results are used 
to enlighten future projects. We will use an expert panel 
review to seek the opinions of software outsourcing experts 
about the GlobReq framework. The criteria described in 
“GlobReq framework development” will be used, i.e. ease of 
use, user satisfaction and better requirements as the basis of 
this evaluation. 
We will identify GSD experts for the evaluation of the 
GlobReq framework. These experts will be selected on the 
basis of their practical and/or academic experience of GSD 
projects. These experts will be from other organisations (i.e. 
not from organisations who participated in the data collection 
process). We have made preliminary discussions with these 
experts and we are in the process of explaining their role in 
this project. 
  
ACKNOWLEDGEMENT 
 
We are thankful to King Fahd University of Petroleum and Minerals, 
Saudi Arabia for supporting this research project via a project 
number IN111030. 
REFERENCES 
 
[1] Barthelemy, J. The hidden cost of IT outsourcing, Sloan 
Management Review 42 (3). 60-69. 2001 
[2] Bush, Ashley A. , Tiwana, Amrit and Tsuji, Hiroshi. An 
Empirical Investigation of the Drivers of Software Outsourcing 
Decisions in Japanese Organizations, Information and Software 
Technology Journal, 50(6), 499-510, 2008 
[3] Damian, D., E. and Zowghi, D. Requirements Engineering 
challenges in multi-site software development organizations, 
Requirements Engineering Journal, published by Springer Verlag. 8 
(3). 149-160. 2003 
[4] Foote, D. Recipe for offshore outsourcing failure: Ignore 
organization, people issues, ABA Banking Journal 96 (9). 56-59. 
2004 
[5] Gonzalez, R., Gasco, J.  and Llopis, J. Information systems 
outsourcing risks: a study of large firms, Industrial management and 
data systems 105 (1). 45–62. 2005 
[6] Hall, Tracy, Beecham, Sarah  and Rainer, Austen. Requirements 
Problems in Twelve Software Companies: An Empirical Analysis, 
IEE Proceedings - Software (August). 153-160. 2002 
[7] Jackson, M. Software Requirements and Specifications. Addison-
Wesley / ACM Press. 1995 
[8] Khan, Siffat Ullah, Niazi, M. and Rashid, Ahmad. Barriers in the 
selection of offshore software development outsourcing vendors: an 
exploratory study using a systematic literature review, Journal of 
Information and Software Technology 53 (7). 693-706. 2011 
[9] Khan, Siffatullah, Niazi, Mahmood and Rashid, Ahmad. Critical 
Barriers for Offshore Software Development Outsourcing Vendors: 
A Systematic Literature Review. 16th IEEE Asia-Pacific Software 
Engineering Conference, APSEC09. Penang, Malaysia. 2009 
[10] King, W. Outsourcing becomes more complex, IT Strategy and 
Innovation - ISM Journal 22 (2). 89 - 90. 2005 
[11] Kobitzsch, Werner, Rombach, Dieter and Feldmann, Raimund, 
L. Outsourcing in India, IEEE Software March/ April 2001 78-86. 
2001 
[12] Nam, K., Chaudhury, A., Rao, Raghav and H., Rajagopalan, S. 
A Two-Level Investigation of Information Systems Outsourcing, 
Communications of ACM 39 (7). 36-44. 1996 
[13] Niazi, M, Cox, K. and Verner, J. An empirical study identifying 
high perceived value requirements engineering practices. Fourteenth 
International Conference on Information Systems Development 
(ISD´2005) Karlstad University, Sweden August 15-17. 2005 
[14] Niazi, M and Shastry, Sudha. Role of Requirements Engineering 
in Software development Process: An empirical study. IEEE 
International Multi-Topic Conference (INMIC03). 402-407. 2003 
[15] Niazi, M., El-Attar, Mohamed, Usman, Muhammad and Ikram, 
Naveed. GlobReq: A Framework for Improving Requirements 
Engineering in Global Software Development Projects: Preliminary 
Results. International Conference on Evaluation & Assessment in 
Software Engineering (EASE 2012)  Spain. 2012 
[16] Niazi, Mahmood, Cox, Karl and Verner, June. A Measurement 
Framework for Assessing the Maturity of Requirements Engineering 
Process, Software Quality Journal: in press for publication 16 (2). 
157-298. 2008 
[17] Oza, Nilay V. and Hall, Tracy. Difficulties in managing offshore 
outsourcing relationships: An empirical analysis of 18 high maturity 
Indian software companies, Journal of Information Technology Case 
and Application Research 7 (3). 25-41. 2005 
[18] Oza, Nilay V. and Hall, Tracy. Difficulties in managing offshore 
outsourcing relationships: An empirical analysis of 18 high maturity 
Indian 
software 
companies. 
4th 
International 
Outsourcing 
Conference, Washington DC. 2005 
[19] Pyysiainen, J. Building trust in global inter-organizational 
software development projects: problems and practices. International 
Conference on Software Engineering: Global Software Development 
Workshop. 2001 
[20] Sommerville, Ian and Ransom, Jane. An empirical study of 
industrial 
requirements 
engineering 
process 
assessment 
and 
improvement, ACM Transactions on Software Engineering and 
Methodology 14 (1). 85-117. 2005 
[21] United-Nations. World Investment Report. The shift towards 
services, New York and Geneva. 2004 
 
288
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

