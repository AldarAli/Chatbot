New Method for Designing Binary 8×8 Matrices With Branch Number 5
Using Quasigroups
Vesna Dimitrova
Faculty of Computer Science
and Engineering
Ss. Cyril and Methodius
University, Skopje
Republic of N. Macedonia
email: vesna.dimitrova@ﬁnki.ukim.mk
Verica Bakeva
Faculty of Computer Science
and Engineering
Ss. Cyril and Methodius
University, Skopje
Republic of N. Macedonia
email: verica.bakeva@ﬁnki.ukim.mk
Zlatka Trajcheska
Faculty of Computer Science
and Engineering
Ss. Cyril and Methodius
University, Skopje
Republic of N. Macedonia
email: zlatka.trajcheska@gmail.com
Abstract—Quasigroups are algebraic structures, which are useful
for application in cryptography and coding theory. Their speciﬁc
properties and Boolean representations open a lot of scientiﬁc
questions and new ideas for research. In this paper, we investigate
the application of Boolean representation of quasigroups. We
propose a new method for designing of binary matrices of order
8 × 8, which have the highest branch number.
Keywords–quasigroup; Boolean functions; branch number; bi-
nary matrices.
I.
INTRODUCTION
We start by providing deﬁnitions of quasigroups, their
Boolean representation and their properties.
The groupoid (Q, ∗), where ∗ is a binary operation, is
called a quasigroup if it satisﬁes the following:
(∀ a, b ∈ Q)(∃! x, y ∈ Q)(x ∗ a = b ∧ a ∗ y = b)
(1)
meaning that the equations x∗a = b and a∗y = b have unique
solutions for any a, b ∈ Q. These simple algebraic structures
are suitable for application in cryptography, especially because
of their large, exponentially growing number and their prop-
erties.
In this paper, we will consider the quasigroups of order
4. Their total number is 576, but not all of them are suitable
for cryptographic purposes. Therefore, classiﬁcations of ﬁnite
quasigroups are very important for choosing good quasigroups
for designing cryptographic primitives. There are several clas-
siﬁcations of quasigroups of order 4, for example, in [1][2].
Here, quasigroups are numbered according to their lexi-
cographic ordering. Namely, this ordering is made such that
each quasigroup is presented as an array of n2 symbols,
obtained by concatenation of the rows of the Latin square that
represents the quasigroup operation. After that, the sorting of
quasigroups is done by lexicographic ordering of the obtained
arrays. Finally, a number is assigned to each quasigroup of the
ordering starting with 1, and increasing by 1 sequentially until
the last quasigroup is assigned a number.
Each quasigroup of order 2n can be represented as a vector
valued Boolean function [3][4]. It is done so that each element
from the quasigroup x ∈ Q can be represented as a binary
vector x = (x1, x2, ..., xn) ∈ {0, 1}n. In short, x is presented
as a vector of n binary digits, which are its binary represen-
tation. Now, if we consider two elements from the quasigroup
x, y ∈ Q with their vector representations x = (x1, x2, ..., xn)
and y = (xn+1, xn+2, ..., x2n) the quasigroup operation can
be presented as:
x ∗ y ≡ f(x1, ..., x2n) = (f1(x1, ..., x2n), ..., fn(x1, ..., x2n))
where
fi : {0, 1}2n → {0, 1}
are the components of the vector valued Boolean function f.
The quasigroups of order 4 are represented with pair of
Boolean functions (f1(x1, x2, x3, x4), f2(x1, x2, x3, x4)).
A quasigroup (Q, ∗) with Boolean representation
f(x1, ..., x2n) = (f1(x1, ..., x2n), ..., fn(x1, ..., x2n))
(2)
is linear by Boolean representation if fi is a linear Boolean
polynomial for each i = 1, 2, 3, ..., n. The quasigroup is
generally called nonlinear if there is at least one nonlinear
fi for i = 1, 2, 3, ..., n. The quasigroup is pure nonlinear if fi
is a nonlinear Boolean polynomial for each i = 1, 2, 3, ..., n.
A important property that we will strongly consider in the
further text is the linearity by Boolean representation. The
classiﬁcation of order 4 by linearity was previously done in
[5]. According to this, from 576 quasigroups of order 4, 144
are linear quasigroups and 432 are nonlinear quasigroups (144
of them are pure nonlinear).
Lets assume that binary matrices with suitable properties
are also important for designing cryptographic primitives.
There are several constructions of binary matrices with cer-
tain properties. In [6], the authors give an efﬁcient way for
generating circulant binary matrices with a prescribed number
of ones which are invertible over Z2.
In [7], the authors investigate all binary matrices of order
8×8 and come to the conclusion that the Hamming weight of
all matrices with branch number 5 varies from 33 to 44.
Our goal in this research is the construction of binary matri-
ces of order 8×8 with linear and differential branch numbers
5 using Boolean representations of quasigroups, which have
the maximal Hamming weight.
The rest of the paper is organized as follows. In Section II,
we give deﬁnitions of linear and differential branch number.
The new method for designing of branch number is given in
Section III. Section IV presents the conclusions and ideas for
future work.
7
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-732-0
INFOCOMP 2019 : The Ninth International Conference on Advanced Communications and Computation

II.
BRANCH NUMBER
In this paper, we give a new method for constructing 8×8
nonsingular matrices with branch number 5. In [8], Kang
has proved that the branch number of any 8 × 8 invertible
binary matrix is less than or equal to 5, so the 8 × 8 binary
matrices with branch number 5 are optimal. It is known that
the diffusion layers of Camellia in [9] and E2, which are 8×8
binary matrices, have branch number 5. Kanda et al. in [10]
found 10080 8 × 8 binary matrices with branch number 5 by
using a searching algorithm, and for all candidate matrices, the
total Hamming weight was 44 with 4 column (row) vectors
with Hamming weight 6 and 4 column (row) vectors with
Hamming weight 5.
At ﬁrst, we give some deﬁnitions and principles in order
to introduce the branch number of matrices.
Confusion in cryptography is a principle that indicates
the lack of clarity in the relation between the plaintext and
ciphertext. In the ciphers, this means that the key is not related
to the ciphertext in a simple manner. It is usually made by
substitution. Blocks that are used in ciphers for substitution are
S-boxes. S-boxes are transformation units, which take m bits as
input and give n bits as output. They are usually implemented
with a lookup table [11][12].
Diffusion in cryptography means that, by changing of a
single bit in the plaintext, approximately half of the bits in the
ciphertext should be changed. It is usually implemented with
a permutation of symbols.
Ciphers that have confusion and diffusion layer are called
Substitution-Permutation Networks (SPNs). We are interested
in the diffusion layer in order to apply quasigroups there.
Deﬁnition 1: [13] If a block cipher has n S-boxes in its
structure, where each S-box has input and output of m bits,
then the diffusion layer can be represented as:
A : ({0, 1}m)n −→ ({0, 1}m)n
(3)
or with this linear transformation:
A(x) = A · xT =


a11
a12
...
a1n
a21
a22
...
a2n
...
...
...
...
an1
an2
...
ann

 ·


x1
x2
...
xn

 , (4)
where ai ∈ {0, 1}m, x = (x1, x2, ..., xn), xi ∈ {0, 1}m, i =
1, 2, ..., n.
From this point on, we will only consider binary matrices
and binary vectors.
The Hamming weight of a binary vector x is denoted by
wt(x) and represents the number of non-null components in
x.
There are two different branch numbers – linear and differ-
ential. As their names indicate, one represents the resistance
to the linear, and the other to the differential cryptanalysis.
Deﬁnition 2: Let A be a binary matrix of order n × n.
i)
The linear branch number of A is deﬁned by:
βl(A) = min{wt(x)+wt(AT ·xT )|x ∈ {0, 1}n, x ̸= 0}.
(5)
ii)
The differential branch number of A is deﬁned by:
βd(A) = min{wt(x)+wt(A·xT )|x ∈ {0, 1}n, x ̸= 0}.
(6)
The design blocks in the ciphers should have good linear
and differential properties, which means that the values of both
branch numbers are high.
In our research, we consider only nonsingular binary matri-
ces since the encryption and decryption are inverse processes.
Example 1: Let us calculate the branch number of the
matrix A =

0
1
1
1

. We consider all not-null binary vectors
of order 2:
x1 = (0, 1),
x2 = (1, 0),
x3 = (1, 1).
Their Hamming weights are, respectively:
wt(x1) = 1,
wt(x2) = 1,
wt(x3) = 2.
The products yi = A · xT
i , i = 1, 2, 3 are
y1 = (1, 1),
y2 = (0, 1),
y3 = (1, 0),
whose Hamming weights are
wt(y1) = 2,
wt(y2) = 1,
wt(y3) = 1,
respectively. The values of β(d)
i
= wt(xi)+wt(yi), i = 1, 2, 3
are
β(d)
1
= 3,
β(d)
2
= 2,
β(d)
3
= 3.
The minimal value of β(d)
i
(i = 1, 2, 3) is the differential
branch number, in this case βd(A) = 2.
The linear branch number is calculated similarly.
III.
CONSTRUCTING BINARY MATRICES 8×8 WITH
BRANCH NUMBER 5
Our goal in this research is the construction of binary ma-
trices of order 8×8 with linear and differential branch numbers
5 using Boolean representations of quasigroups. Namely, the
maximal branch number for a binary matrix of order 8 × 8
is 5. These matrices are important in block ciphers and they
are used in the design of a few ciphers in the lightweight
cryptography, for example Camellia.
Before explaining the method of construction, we will di-
vide the linear quasigroups into subclasses. Firstly, we choose
a quasigroup that is linear by Boolean representation and take
the algebraic normal forms of their Boolean functions. Since
the quasigroup is linear by Boolean representation, the Boolean
functions are also linear, i.e.,
fj(x1, x2, x3, x4) = aj0 + aj1x1 + aj2x2 + aj3x3 + aj4x4,
where aji ∈ {0, 1}, i = 0, 1, 2, 3, 4, j = 1, 2. Firstly, we
discard the constants aj0 and obtain two linear polynomials of
the Boolean representation
fj(x1, x2, x3, x4) = aj1x1 + aj2x2 + aj3x3 + aj4x4,
for j = 1, 2. This way, the class of 144 linear quasigroups
can be divided into 36 subclasses, each containing 4 quasi-
groups whose Boolean representations differ only by a constant
(const = 1):
•
Qi(f1, f2)
•
Qj(f1 + const, f2)
•
Qk(f1, f2 + const)
•
Ql(f1 + const, f2 + const)
In each subclass, all 4 quasigroups produce the same binary
matrix. Therefore, the constants aj0 do not have inﬂuence on
the ﬁnal results and can be discarded. Further on, we will
8
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-732-0
INFOCOMP 2019 : The Ninth International Conference on Advanced Communications and Computation

use one representative quasigroup from each subclass. The
lexicographic numbers of quasigroups in each subclass and
corresponding representative are given in Table I.
TABLE I. SUBCLASSES OF LINEAR QUASIGROUPS AND REPRESENTATIVE.
No.
Quasigroups in the subclass
Representative
1
1, 172, 405, 576
1
2
4, 169, 408, 573
4
3
11, 189, 388, 566
11
4
14, 192, 385, 563
14
5
21, 179, 398, 556
21
6
24, 182, 395, 553
24
7
26, 147, 430, 551
26
8
27, 146, 431, 550
27
9
37, 163, 414, 540
37
10
40, 166, 411, 537
40
11
43, 157, 420, 534
43
12
46, 160, 417, 531
46
13
51, 246, 331, 526
51
14
54, 243, 334, 523
54
15
57, 259, 318, 520
57
16
60, 262, 315, 517
60
17
70, 252, 325, 507
70
18
71, 253, 324, 506
71
19
77, 272, 305, 500
77
20
80, 269, 308, 497
80
21
82, 284, 293, 495
82
22
83, 285, 292, 494
83
23
92, 274, 303, 485
92
24
93, 275, 302, 484
93
25
100, 197, 380, 477
100
26
101, 196, 381, 477
101
27
110, 212, 365, 467
110
28
111, 213, 364, 466
111
29
113, 203, 374, 464
113
30
116, 206, 371, 461
116
31
126, 223, 354, 451
126
32
127, 222, 355, 450
127
33
132, 234, 343, 445
132
34
133, 235, 342, 444
133
35
138, 228, 349, 439
138
36
139, 229, 348, 438
139
Let us explain the method of construction of the binary
matrices. We choose two linear quasigroups by Boolean rep-
resentation from different subclasses. Then, we take the cor-
responding linear polynomials based on the algebraic normal
form of the four (two by two) Boolean functions that represent
the chosen quasigroups. Let us denote these linear polynomials
provided from the ﬁrst quasigroup by Q1 : f1 and Q1 : f2, and
from the second quasigroup by Q2 : f1 and Q2 : f2. Firstly,
we ﬁll two matrices A1 and A2 of order 8 × 4 and after that
we form the matrix A (of order 8 × 8) as concatenation by
rows. In the following, we give the method of construction.
•
For each not-null a1i in Q1 : f1, the cell in the
row 1 and column i in A1 is ﬁlled with 1, and for
each null a1i the corresponding cell is ﬁlled with 0
(i ∈ {1, 2, 3, 4}). Then, we ﬁll the third row in A1 by
shifting the bits from the ﬁrst row on left with offset
1, the ﬁfth row by shifting the bits from the third row
on left with offset 1 and the seventh row by shifting
the bits from the ﬁfth row on left also with offset 1.
•
For each not-null a1i in Q2 : f1, the cell in the row
2 and column i in A1 is ﬁlled with 1, and for each
null ai the same cell is ﬁlled with 0 (i ∈ {1, 2, 3, 4}).
Then, we ﬁll the fourth row by shifting the bits from
the second row on left with offset 1, the sixth row
by shifting the bits from the fourth row on left with
offset 1 and the eight row by shifting the bits from
the sixth row on left also with offset 1.
•
The same method is applied for construction of
matrix A2 using the polynomials Q1 : f2 (for odd
rows) and Q2 : f2 (for even rows).
•
We form the matrix A = [A1|A2].
This construction will be denoted as Q1f1 − Q1f2 − Q2f1 −
Q2f2, referring to the order of the Boolean functions that are
used in the construction. A graphical presentation of the ex-
plained construction using the quasigroups with lexicographic
numbers 4 and 14 is given in Figure 1.
Figure 1. An example of binary matrix constructed using the Boolean
function obtained from quasigroups 4 and 14.
Using this method, we obtain 384 nonsingular matrices
such that:
•
160 matrices have branch number 3
•
192 matrices have branch number 4 and
•
32 matrices have branch number 5.
All 32 matrices with branch number 5 obtained by our
method have the Hamming weight of 44, which is the maximal
weight according to [7].
In our investigation, we consider a similar construction
where the right shift is used instead of the left shift. The
results were very similar and the distribution of matrices based
on their branch number was the same. Also, the construction
Q1f1 − Q2f1 − Q1f2 − Q2f2 was analyzed, either using left
and right shift, and the results also were the same.
The complete results can be found in [14].
IV.
CONCLUSION
Quasigroups are algebraic structures, which are useful for
application in cryptography and coding theory. In this paper,
using quasigroups of order 4, we propose a new way of
constructing binary matrices of order 8×8 with branch number
5. These matrices are very useful for designing cryptographic
primitives, especially in the ﬁeld of lightweight cryptography.
Our research opens some questions that will be subjects
for future investigation. Some of them are the following:
•
Check if there is something speciﬁc and try to ﬁnd a
pattern in the matrices, which would lead to better
9
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-732-0
INFOCOMP 2019 : The Ninth International Conference on Advanced Communications and Computation

understanding of their design or simplifying their
generation.
•
Check all possible combinations of the constructions
and try to ﬁnd a theoretical dependency between them.
It is very important to check why all constructions lead
to the same results and if these results depend on the
quasigroup properties in some way.
ACKNOWLEDGMENT
This research was partially supported by Faculty of
Computer
Science
and
Engineering
at
”Ss
Cyril
and
Methodius” University in Skopje, Republic of N. Macedonia.
REFERENCES
[1] V. Dimitrova and S. Markovski, ”Classiﬁcation of Quasigroups
by Image Patterns”, Proceedings of 5th International Con-
ference for Informatics and Information Technology, Bitola,
Macedonia, pp. 152–160, 2007.
[2] V. A. Artamonov, S. Chakrabarti and S. K. Pal, ”Characteri-
zation of polynomially complete quasigroups based on Latin
squares for cryptographic transformations”, Discrete Applied
Mathematics, vol. 200, pp. 5–17, 2016.
[3] D. Gligoroski, V. Dimitrova and S. Markovski, ”Quasigroups as
Boolean functions, their equation systems and Groebner bases”,
In: Groebner Bases, Coding, and Cryptography, Springer 2009,
pp. 415-420, 2009.
[4] I.S.M. Sala, ”An algebraic description of Boolean functions”,
Proceedings of WCC07, pp. 343–349, 2007.
[5] S. Markovski, V. Bakeva, V. Dimitrova and A. Popovska-
Mitrovikj, ”Representation of algebraic structures by Boolean
functions and its applications”, In: D. Trajanov, V. Bakeva
(eds.): ICT-Innovations 2017, Data-Driven Innovation, Commu-
nications in Computer and Information Science Series (CCIS)
Vol.778, Springer, Cham, pp. 229–23, 2017.
[6] T. Fabsic, O. Grosek, K. Nemoga and P. Zajac, ”On generating
invertible circulant binary matrices with a prescribed number of
ones”, Cryptography and Communications, vol. 10, no. 1, pp.
159–175, 2018.
[7] Y. Gao and G. Guo, ”Uniﬁed approach to construct 8x8 binary
matrices with branch number 5”, In: Proceedings of the 2010
First ACIS International Symposium on Cryptography, and
Network Security, Data Mining and Knowledge Discovery,
E-Commerce and Its Applications, and Embedded Systems,
CDEE ’10, IEEE Computer Society, Washington, DC, USA,
pp. 413–416, 2010.
[8] J. Kang, ”Practical and provable security against differential
and linear cryptanalysis for substitution-permutation networks”,
ETRI journal, vol. 23, no. 4, pp. 158-167, 2001.
[9] K. Aoki et al., ”Camellia: A 128-bit block cipher suitable for
multiple platforms - design and analysis”, In: D. R. Stinson, S.
Tavares (eds.) SAC 2000. LNCS, vol. 2012, Springer, Heindel-
berg, pp. 39–56, 2001.
[10] M. Kanda, Y. Takashima, T. Matsumoto, K. Aoki and K. Ohta,
”A strategy for constructing fast round functions with practical
security against differential and linear cryptanalysis”, Selected
Areas in Cryptography, LNCS 1556, pp. 264–279, 1999.
[11] I. Vergili and M. Yucel, ”Avalanche and bit independence
properties for the ensembles of randomly chosen n×n S-
boxes”, Turkish Journal of Electrical Engineering and Computer
Sciences, vol. 9, no. 2, pp. 161–176, 2001.
[12] D. Loebenberger and M. Nsken, ”A family of 6-to-4-bit S-boxes
with large linear branch number”, Cryptology ePrint Archive,
Report 2013/188, pp. 1–11, 2013.
[13] D. Kwon, S. H. Sung, J. H. Song and S. Park, ”Design of
block ciphers and coding theory”, Trends in Mathematics”,
Information Center for Mathematical Sciences, vol. 8, no. 1,
pp. 13–20, 2005.
[14] https://goo.gl/vbtvuM, Last access: 22.07.2019
10
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-732-0
INFOCOMP 2019 : The Ninth International Conference on Advanced Communications and Computation

