Creating an Intelligent, Integrated Mobility Assistance:
The Elastic Trip-Chain Construction Problem
Philip Wette, Emre Cakar, Lutz Bersiner
Robert Bosch GmbH
31139 Hildesheim, Germany
Email: {firstname.lastname}@de.bosch.com
Abstract—The number of transport modes and mobility services
has increased signiﬁcantly over the last decades. To support travel-
ers, trip planning tools are required, which can take into account
not only the broad spectrum of available transport modes but also
personalized user requirements and their complete daily schedule.
We present the architecture of a personal mobility-assistance
service taking into account daily schedules to compute multimodal
journeys and we identify the Elastic Trip-Chain Construction
Problem as an important optimization problem for modern trip
planning. We describe and analyze the optimization problem and
model it as a Mixed Integer Quadratically Constrained Program.
Keywords–Elastic Trip-Chain Construction Problem; Mobility
Assistance; Travel Planning Service; Trip-Chain Composition
I.
INTRODUCTION
Mobility behavior has always been subject to change.
Today’s changes seem to be mainly governed by increasing
mobility demand, exhaustion of transport capacities, and
an increasing consciousness of the environmental changes
caused by trafﬁc. At present, and especially in metropolitan
areas, user’s willingness and ability to employ a variety of
transportation means apart from private owned cars can be
observed [1]. On the one hand, this tendency is strongly
supported by the ubiquitous availability of real-time services for
nearly all kinds of transportation. Some transportation modes,
e.g., ride sharing, even depend on such real-time services.
On the other hand, real-time services offer the opportunity to
inﬂuence and shape mobility behavior.
To efﬁciently assist (and inﬂuence) users traveling with
this new variety of transport modes, new personal mobility
assistance tools need to be employed. In the context of this
work, we investigate a mobility assistant that plans trips along
multiple activities, minimizing travel efforts on a per-user basis.
Those trips usually start and end at a user’s home location
and interlink daily activities, such as going to work, (grocery-)
shopping, or leisure activities. We call a trip including multiple
activities a trip chain. Also, in the course of one single trip
chain, the use of multiple different transportation modes to
move from one activity to another is allowed.
The main two contributions of this paper are a) to sketch
the function of a travel planner service as part of an integrated
mobility assistance, the latter to be investigated with respect to
its effect on mobility within the publicly funded joint project
BiE (evaluation of integrated electric mobility) [2], and b) to
describe and analyze the underlying optimization problem of
computing valid and effective trip chains.
The rest of this paper is structured as follows: In Section II a
short overview about trip-planning problems is given. Section III
introduces our mobility assistance service, along with a detailed
description of the integrated travel planning sub-service. The
Elastic Trip-Chain Construction Problem is formulated and
analyzed in Section IV. Moreover, a mathematical formulation
of the problem in form of a Mixed Integer Quadratically
Constrained Program is given. Section V concludes this paper.
II.
RELATED WORK
Existing commercial mobility assistance is usually conﬁned
to more or less elaborate choice of the opportunities to get from
location a to location b at a given time. Recently, a few efforts
have been made to develop context related (i.e., to the purpose
of the trip) support for multiple activities on one journey, such
as eCOMPASS [3].
Various trip planning related computation problems can
be found in the literature; the closest ones to the problem at
hand are the so-called Tourist Trip Planning Problems (for
a survey, see [4]) and the Traveling Purchaser Problem [5].
These problems are NP-hard, hence very hard to solve. The trip
planning problem studied in this work differs from the already
known problems mainly in the fact that activities (that are to
be executed along the trip) do not have a single, ﬁxed location
where they should be executed, but a set of alternative locations
to choose from. Timing constraints inferred by the activities are
partly covered by some of the Tourist Trip Planning Problems
but not to the same extent as in this work. Furthermore, in our
case different transportation modes are taken into consideration,
which increases the complexity of the problem considerably.
III.
ARCHITECTURE MOBILITY ASSISTANCE SERVICE
A. Mobility Assistance Service
The architecture of the integrated mobility assistance service
is shown in Fig. 1. This work focuses on a travel planning
service as part of such an integrated system. Hence, Fig. 1
only depicts the essential parts from the travel planning
point–of–view; the rest of the components are left out. The
mobility assistant is designed as a distributed system aiming
on efﬁcient horizontal scaling. To this end, we use Vert.X
[6]: an event-driven Java framework to create distributed
systems. Vert.X provides an Event-Bus which is used as
the communication medium by the system’s components.
The most important components for travel planing are Orga-
nizer, UserPreferenceService, CalendarService, AssistanceApp,
and TravelPlanningService.
45
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-517-3
COLLA 2016 : The Sixth International Conference on Advanced Collaborative Networks, Systems and Applications

External REST Interfaces
Vert.x Event Bus
AssistanceApp
UserPreferencesService
TravelPlanningService
TCP
PT Timetables & 
Live Information
Car Sharing
Live Traffic 
Information
TCP/HTTP
Non-Mobility Domains
Calendar
CalendarService
TCP/calDav
Organizer
…
Figure 1. Architectural Overview of the Mobility Assistance Service
Both AssistanceApp and the CalendarService are the
system’s interfaces to external domains. The Assistance-App
controls communication with the (human) users of the system.
Among others, it proposes trips to the user, asks for preferences,
and keeps track of the user’s position. The CalendarService, on
the other hand, interfaces directly with user’s cloud-based digital
calendars. Whenever there is a new entry in a calendar, this entry
is compiled into an activity (the mobility assistance service’s
equivalent of a calendar entry) which is further analyzed and
possibly annotated with additional information by the Organizer.
The UserPreferenceService is the system’s central component
for storing and retrieving any sort of user preferences. If a
user’s proﬁle is not completely ﬁlled out, it uses reasoning
techniques to imply reasonable preferences. Those preferences
are subsequently used by the TravelPlanningService to compute
trip chains for all activities retrieved from external domains.
The TravelPlanningService computes routes based on live trafﬁc
data. In addition, it uses REST interfaces to query for public
transport information (such as time tables) and live information
from car-sharing partners, for example availability of cars or
the position of car-sharing stations.
B. Travel Planning Service
The travel planning service itself consists of multiple
components, the most important ones for the scope of this
work are Trip-Chain Store, Trip-Chain Monitor, Trip-Chain
Composer, and Routing Engine.
The trip-chain store is the component responsible for
efﬁcient storage and retrieval of computed trip chains. It is
used as a hub for other services of the integrated mobility
assistance, as well as the central internal storage used by other
components of the travel planning service.
The trip-chain monitor is used to keep trip chains up–to–
date. The trafﬁc situation undergoes constant change (e.g., due
to unpredicted trafﬁc jams). Hence, all trip chains have to
be checked for feasibility under the projected future trafﬁc
situation. In the cases where they have been rendered infeasible
by recent events, the trip-chain monitor triggers recomputation
of the corresponding trip chains.
A routing engine is used to compute journeys. For any
journey, all available modes of transportation are considered.
Necessary real-time trafﬁc information (public and private) is
gathered via REST interfaces. These journeys are concatenated
to trip chains by the trip-chain composer. To this end, the
composer keeps a list of activities that need to be included into
a trip chain and then creates journeys to connect the sites at
which those activities are to be executed, making sure that no
constraints, imposed by either the activities themselves or the
user’s preferences, are violated.
The trip-chain composer emerges as the crucial component
with respect to the behavior of the travel planning service
and thus of the integrated mobility assistance as a whole. As
the trip-chain composer is also the component presenting the
greatest challenges w.r.t. solving algorithms, it will be discussed
and analyzed in more detail in the remainder of the paper.
IV.
THE ELASTIC TRIP-CHAIN CONSTRUCTION PROBLEM
The Elastic Trip-Chain Construction Problem is the core
problem solved by the Trip-Chain Composer. It asks for a
series of journeys interlinking one or more activities of a user
such that the user arrives at the site of the activity in time (i.e.,
not too late). The activities in question have, apart from their
durations, elastic timing constraints deﬁning a time interval
in which they need to start. This section further deﬁnes the
underlying activity model, formally states the Elastic Trip-Chain
Construction Problem, discusses its complexity and ends with
a Mixed Integer Quadratically Constrained Program (MIQCP)
modeling the problem.
A. Model and Problem Statement
Deﬁnition 1 An activity a is deﬁned to be the 4-tuple a =
(d, se, sl, lpos) where d is the duration of the activity, se is the
earliest possible point in time where the activity can be started,
sl is the latest possible point in time where the activity can be
started, and lpos is a non-empty set of locations where it is
possible to execute the activity.
To travel from one location where an activity is executed to
another location where the next activity is executed, we deﬁne
a journey.
Deﬁnition 2 A journey j is deﬁned as the 5-tuple j
=
(src, dest, tdep, tarr, m) where src is the location to start the
journey , dest is the destination of the journey, tdep is the point
in time when the journey starts, tarr is the time when the journey
ends (when it arrives at dest), and m is the transportation
mode on the journey.
In the remainder, we use src, dest, tdep, tarr, and m as
functions on journeys and d, se, sl, and lpos as functions on
activities to describe the corresponding property (e.g., d(ai)
describes the duration of activity ai).
Deﬁnition 3 A trip chain t is an ordered tuple of n journeys
t = (j1, j2, ..., jn) where dest(ji) = src(ji+1) ∀ 0 < i < n.
Let A = {a1, a2, ..., an−1} be a set of n − 1 activities. We
say a trip chain t is valid for A, if t interlinks each activity
a ∈ A such that one of a’s locations from lpos is visited before
or on se and at least d time between se and sl + d is spent
at the location. In addition, it must be possible to make all
journeys without any overlap. Hence, for all journeys jl ∈ t
46
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-517-3
COLLA 2016 : The Sixth International Conference on Advanced Collaborative Networks, Systems and Applications

there must not exist another journey jk ∈ t, jk ̸= jl, such that
(tdep (jl) , tarr (jl)) overlaps with (tdep (jk) , tarr (jk)).
The Elastic Trip-Chain Construction Problem (ETCCP)
Given a set of activities A
=
{a1, a2, ..., aN}, a lo-
cation l, an earliest time s to start and latest time
o to arrive (each at l), and a set of available trans-
port modes, the elastic trip-chain construction problem
asks for a valid trip chain t
=
(j1, j2, ..., jN+1) in-
terconnecting all activities in A for which holds that
l = src(j1) = dest(jN+1), s ≤ tdep(j1), and tarr(jN+1) ≤ o.
It is worth noting that such a trip chain t does not always exist.
B. Notes on Complexity
The optimization variant of ETCCP not only asks for a
valid trip chain that interlinks a set of activities but for the trip
chain with least travel time or, in a general sense, travel cost.
The Traveling Salesperson Problem (TSP) can be reduced
in polynomial time to the optimization variant of ETCCP.
Reduction is done by assigning to each activity
•
a time interval of unlimited size to be executed in,
•
a duration of zero, and
•
only one possible location to be executed at.
Due to space limitations, we omit the full construction
here. However, it follows that TSP is a special case of the
optimization variant of ETCCP meaning the optimization
variant of our problem at hand is NP-hard.
C. Mathematical Formulation
There is a variety of possible optimization criteria when
constructing tripchains including shortest travel time, cheapest
trip chain, or ecologically friendliest trip chain.
To keep the model description short, in the following we
concentrate on computing trip chains with shortest travel time
only. Note that the model can simply be adapted to meet the
other optimization criteria by introducing additional model
variables and using a different objective function.
1) Model variables: Our model features the following model
variables as an input, describing a set of activities and their
corresponding properties in detail.
In the description, with A = {a1, a2, ..., aN}, we denote
the set of activities to include in the trip chain. origin denotes
the origin (and ﬁnal destination) of the trip chain. Time is
modeled as a discrete series of equally spaced numbers on a
time line analogous to UNIX timestamps where the spacing
(i.e., the granularity) can be chosen arbitrarily.
L ∈ N +
Number of distinct possible locations
from lpos over all activities and the origin
of the trip chain

transportation mode of journeys
M
X
m=1
modei,m = 1
∀i ∈ [1, N + 1]
(8)
ﬁxing a location for each activity
L
X
k=1
loci,k = 1
∀i ∈ [1, N]
(9)
potloci,k >= loci,k
∀i ∈ [1, N]
∀k ∈ [1, L]
(10)
do not start trip chain before S
O
X
t=S
M
X
m=1
N
X
i=1
L
X
k=1
loci,k·f A
1,k,t,m·modei,m·ordi,1·starti,t
(11)
<
N
X
i=1
ti · ordi,1 − S
do not arrive after O
O
X
t=S
M
X
m=1
N
X
i=1
L
X
k=1
loci,k · f D
k,1,t,m · modei+1,m · ordi,N ·
termi,t
(12)
<
O −
O
X
t=S
termN,t · t
travel times between activities
ttj =
∀j ∈ [1, N −1]
(13)
M
X
m=1
N
X
u=1
N
X
v=1
L
X
k=1
L
X
l=1
O
X
t=S
ordu,j · ordv,j+1 ·
locu,k · locv,l ·
f D
k,l,t,m · termj,t ·
modeu,m
travel time from origin to ﬁrst activity
O
X
t=S
starti,t = 1
∀i ∈ [1, N]
(14)
O
X
t=S
starti,t · t = ti
∀i ∈ [1, N]
(15)
ttf =
(16)
O
X
t=S
M
X
m=1
N
X
i=1
L
X
k=1
ordi,1 · loci,k · modei,m · f A
1,k,t,m · starti,t
travel time from ﬁrst activity back to origin
ttl =
(17)
O
X
t=S
M
X
m=1
N
X
i=1
L
X
k=1
ordi,N · loci,k · modei+1,m ·
f D
k,1,t,m · termi,t
The optimization objective to minimize travel time is:
min


N
X
j=0
ttj + ttf + ttl


As this mathematical formulation contains products of decision
variables in both its constraints and its objective function, it is
a Mixed Integer Quadratically Constrained Program.
V.
CONCLUSION
We described the architecture of a travel planning service as
part of an integrated mobility assistance system, emphasizing
that the crucial component of such a service is the trip-chain
composer. This component computes the concatenation of
journeys and determines when to execute which activity at
what location such that travel time (or travel cost in general)
is minimized. We call the underlying optimization problem the
Elastic Trip-Chain Construction Problem and argued that it is
NP-hard. To solve the problem for small instances and to act
as a benchmark for future approximation algorithms and meta
heuristics, we formulated a MIQCP computing trip chains with
least travel time.
Solving the MIQCP is—even for small instances—
computational expensive. This not only holds for the MIQCP
itself, which has a non-linear objective function but also for
pre-computing the model variables. Prior to solving an instance
of the problem using the MIQCP, we need to compute f D
k,l,t,m
and f A
k,l,t,m which denote travel times between all locations for
all departure and arrival times. As this is not practical for larger
instances, future work will focus on ﬁnding fast and accurate
heuristic algorithms. Further work of practical interest will
address an extension of the Elastic Trip-Chain Construction
Problem, which will yield multiple trip chains for a set of
given activities. This will address those cases where activities
are spaced so far from each other (on the time line) that one
single trip chain would lead to unacceptably long waiting times
between arriving at a site and starting the activity.
ACKNOWLEDGMENT
This work is being partially funded by the German Fed-
eral Ministry of Education and Research (BMBF) within
the project ,,Bewertung integrierter Elekromobilit¨at”, grant
identiﬁer 16EMO0046. The authors would like to thank Mark
Andrew and Peter Engel for all the fruitful discussions.
REFERENCES
[1]
C. Hoffmann et al.
Bewertung integrierter Mobilit¨atsdienste mit
Elektrofahrzeugen aus Nutzerperspektive. InnoZ-Baustein, 11, 2012.
[2]
BIE - Bewertung integrierter Elektromobilit¨at.
http://www.emobil-
sw.de/de/aktivitaeten/aktuelle-projekte/projektdetails/new-content-2.html,
[retrieved: 09, 2016].
[3]
D. Gavalas et al.
A personalized multimodal tourist tour planner.
In Proceedings of the 13th International Conference on Mobile and
Ubiquitous Multimedia, pages 73–80, New York, NY, USA, 2014. ACM.
[4]
Wouter Souffriau and Pieter Vansteenwegen.
Tourist trip planning
functionalities: State–of–the–art and future. In In Proceedings of the 10th
International Conference on Web Engineering ICWE 2010 Workshop,
pages 474–485, Heidelberg, Germany, 2010. Springer.
[5]
Fayez F Boctor, Gilbert Laporte, and Jacques Renaud. Heuristics for
the traveling purchaser problem. Computers & Operations Research,
30(4):491–504, 2003.
[6]
Vert.X. http://www.vertx.io, [retrieved: 09, 2016].
48
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-517-3
COLLA 2016 : The Sixth International Conference on Advanced Collaborative Networks, Systems and Applications

