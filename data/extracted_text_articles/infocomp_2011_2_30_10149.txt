A Flexible Suite of Software Tools for Medical Image Analysis 
 
 
Alexander Nedzved  
United Institute of Informatics Problems of the National 
Academy of Sciences of Belarus 
Minsk, Belarus 
Nedzveda@tut.by  
Valery Starovoitov  
United Institute of Informatics Problems of the National 
Academy of Sciences of Belarus 
Minsk, Belarus 
valerys@newman.bas-net.by
 
 
Abstract— A new methodology of an intelligent software 
development for medical image analysis is proposed. The 
kernel of this software is a script interpreter that may be 
supported by an intellectual script generator. Commands of 
the interpreter are basic functions of image processing. The 
script generator forms new image processing scripts after 
analysis of image properties. This allows to change a 
processing sequence and the software interface. Software of 
such type may be self-transformed for different classes of 
medical images and various tasks in real time 
Keywords-medical image processing; intelligent software; 
script generator 
I. 
 INTRODUCTION 
  
 Computer engineering includes many different parts that 
influence to properties of software, for example, organization 
of functional support in the software affects the presentation 
of the user interface, and so on. Medical software has 
specifically requirements to software organizations. Such 
requirements depend of condition of solving tasks, 
knowledge of software user, and environment of user’s work 
place. Therefore, the modern requirements to medical 
software is dynamic organization of functional, user interface 
and data managing for medical radiological methods, optical 
microscopy, endoscopy and ophthalmology, etc. 
Any software may be divided into compiled programs 
and interpreters. Sometimes, software is represented as 
mixture of these variants. Such software for science has a 
compiled kernel that includes GUI (graphical user interface), 
basic functions and calculations, and different types of data 
representation. An interpreter usually is used as saved history 
of operations applied to a new image processing. In this case, 
the interpreter allows to create additional simple functions on 
base kernel possibilities but can not change the software [1]. 
We propose to use an interpreter as a kernel for our software. 
In this case the interpreter is used as a manager of action. It 
supports by performance of the functions, calculations, and 
GUI events. So, we can change the software design and 
organization by correction of interpreter scripts without a 
compilation stage. In other side, complex function and 
calculation are realized in external public compiled modules. 
This will keep the speed of calculation such as the 
compilation software. Today, similar software organization 
is used for web and game development. It is named an "open 
software architecture".  
Our software is based on a mixture of a compiled library 
and an interpreter with many image processing functions. In 
result the software may be divided into two parts: for the 
professional software developers and the software designers 
or users. The interpreter has possibilities for including 
additional functions from a compiled dynamical library. It 
allows to change software properties and software 
applications without a compiling stage. On other side users 
can change the graphical interface for improvement comfort 
conditions for development and easy evolution of software. 
We apply such a technique for developing histology image 
analysis software [3]. 
Modern computer support and facilities in microscopy 
bring new perspectives in studying of cell structures. At the 
same time, the most commonly used method for a tissue 
analysis is still the well known morphological method, which 
allows to get reasonable biological conclusions after an 
image analysis. Group of morphological features, which are 
used for detection of similar types of cells and for organ and 
tissue fragment analysis, is noticeably extended. Usually, 
there is no any relation between different types of features. 
Therefore, types of histological tissue fragments are 
separated from each other by their morphological features. 
Systematization of histological objects is very important in 
order to provide a morphological analysis and oncologist 
diagnosis.  
There are different approaches to segmentation of 
biomedical images. One of the most popular of them is based 
on mathematical morphology. Many morphology algorithms 
for cell segmentation have been proposed through the last 
years [3]. The initial image segmentation is determined by 
classifying the image local variation information obtained 
with dilation and erosion operations. A median filter may be 
used to smooth the segmented image. It removes small 
regions of misclassiﬁed pixels while avoiding signiﬁcant 
changes to the cell proﬁles. The erosion operation is ﬁnally 
used to restore the cell areas. An edge-based segmentation 
may be divided into two independent stages: edge detection 
and edge linking. The obtained edges are used to determine 
the cell locations and contour model is further used to select 
the set of edges involved in the cell locations. Nedzved, et al. 
[4] have proposed an edge-based potential aimed at the 
elimination of local minima due to undesired edges. This 
36
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

approach integrates knowledge about features of the desired 
boundaries apart from gradient strength and eliminates local 
minima, which make the segmentation results less sensitive 
to initial contours. Color is an important feature in the 
histological image segmentation. There are several effective 
algorithms for automatic detection of cells and other 
histological objects [5]. However, these algorithms work 
under certain conditions to solve particular problems. 
In addition, the new workplace is changing the software 
requirements. It is necessary to estimate functionality and 
compatibility of existed tools and data of software 
development to define a dynamical system of medical 
software developing. It has to be revised tasks, initial data, 
diagnostic features and characteristics.  
The rest of the paper is organized as follows. In Section 
II we review properties of two different classes of medical 
images: histological and radiological ones. In Section III we 
describe a variant of software development which may be 
self-transformed after preliminary image analysis. In Section 
IV we describe testing of the presented software generation 
for various medical images. 
II. 
FEATURES OF MEDICAL IMAGE ANALYSIS 
In this section, basic features of image for determination of 
a way of processing are described. 
A. Common processing sequence for image analysis of 
histological samples 
Usually processing of histological images may be divided 
into several steps:  
1) Input and image enhancement;  
2) Segmentation; 
3) Object detection (identification);  
4) Measuring;  
5) Analysis. 
Every step consists of execution of a set of functions. 
Application of functions depends on properties or image 
estimations. It is possible to define such  estimations in many 
cases, for example, for contrast, noise or blurring. We can  
construct table of image processing functions and image 
estimations. 
For example, for histological images application of 
segmentation methods depends on many image conditions. 
Usually, an image is decomposed to separate regions to 
analyze the histological sample. Therefore, the segmentation 
process (i.e., extraction of homogeneous regions in image) is 
considered as a basic step for a formal scene description. It is 
necessary to deﬁne a correct set of features and feature 
characteristics for a suitable choice of segmentation methods.  
Histological objects may be deﬁned according to tasks of 
image analysis. Automated histological specimen analysis is 
based on topological  features of images. It allows to define 
the whole procedure of study for object extraction. However, 
automatic analysis of histological specimen depends on the 
optical magniﬁcation of the image. In each magniﬁcation 
there is a certain group of topological features of tissue and 
its components. This fact has prompted to consider 
histological objects over magniﬁcation of histological 
specimens. 
Fig. 1 presents a general scheme of hierarchical analysis 
of objects in histological images.  
Different tissue fragments, which are composed of group 
of homogeneous cells and ﬁbers, form an entire image of 
histological sample. Usually these fragments or objects are 
represented by a certain texture. Therefore, a region growing 
can be used for extraction. 
From initial image conditions it is possible to define 
function for quality image processing and analysis (Fig. 2). 
As a result, a table of connection function and image 
estimation are constructed.  
In each step, functions are indicated by priorities. For 
example, for the image improving step the higher priority is 
defined for noise removal, next priority level contain a 
contrast enhancement and correction of the borders. 
Priorities determine the order of the functions and the need 
for re-analysis using neural network. 
 
 
 
Figure 1.  Hierarchical scheme of histological objects. 
 
 
 
Figure 2.  Scheme of segmentation methods definition from image 
conditions. 
Global Image Analysis 
Brightness 
and color 
analysis 
Contrast 
analysis 
Noise 
distribution 
analysis 
Texture 
analysis 
Global 
objects 
analysis 
Border 
regions 
extraction 
Local pixels 
analysis 
Templete comparing 
and feature extraction 
Global – 
local 
methods 
Cluste-
risation 
Fuzzy 
cluste-
risation 
Morphol
ogical 
methods 
Histo-
gram  
methods 
Stati-
stical 
methods 
Neural 
net-
works 
 
… 
37
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

Image processing functions relate to basic computer 
vision topics. This is corresponding to its application for 
image changing. Every function changes properties of image 
and is applying for specific processing cases. Every function 
introduces in an interpreter table and can be supported by 
additional  information. 
B. Requirements for a radiological investigation software 
Requirements for software are defined by a team of the 
basic users which will use achievements of this work. This 
team consists of physicians and medical workers of 
following specialists: the attending physician the oncologist, 
the physician of radiodiagnostics, workers of registry. They 
define the basic requirements to software They define the 
basic requirements of users to a complex.  
Input, loading and presentation of images it should be 
carried out by means of following possibilities: 
 
Possibilities of operations with raster, vector 
formats (including DICOM); 
 
Possibilities of generation and presentation of 
synthesized 3D images on the basis of contours, which 
are prepared by processing 2D layers. 
 
Possibilities of generation of graphic reports 
documents. 
 
Presentation through system for visualization 2D 
and 3D images on the monitor screen, and also for 
reports. 
The analysis and processing of medical images of tumors 
includes: 
 
Image improving; 
 
Interactive function for objects selection; 
 
Automated function for objects detection; 
 
Measurements and calculation characteristics from 
images. 
The analysis and processing of angiography images and 
data are expansion of the previous requirements by 
specificity of objects - vessels and their network. In this case 
it is necessary to take into consideration morphological and 
textural features of vascular system. 
The monitoring first of all require to the ease of general 
interface of a complex:  
 
Possibilities of synchronous work with different 
investigations of patients, 
 
The organization of storage of the information 
focused on many cases of  patient, 
 
Possibility of preservation of data for the further 
statistical analysis. 
The above described requirements of users form 
functional requirements. Functional requirements define 
functionality software. developers should construct it for 
users  tasks. Functionality defines efficiency of working out. 
The efficiency increase is reached by: 
1) 
The developing of modular system of interaction 
program modules with loading different functionally, 
2) 
Using of ready software packages of the simple 
level of initial functions, 
3) 
The software complex should include following 
modules: 
 
The global module of synchronisation including 
universal principles, structures and the data for  
providing interaction with other modules. 
 
Loadings 
of 
the 
digital 
information 
and 
management of  processing and analysis of medical 
images technology; 
 
The automated allocation and the analysis of slice 
images (for example CT); 
 
Volume restoration of formation and definition of 
volume characteristics; 
 
Definitions of topological features of vessels for 
angiographic investigation; 
 
Statistical comparison of results of analysis of 
images for different time; 
 
Generation of graphic documents; 
 
Measuring and analytical functions. 
In result, the software for the radiological methods of 
investigation should be accompanied by additional display 
capabilities, and presentation and image, not only preparing 
the general scheme of image analysis in histological 
methods. 
III. 
DEVELOPMENT OF MEDICAL IMAGE ANALYSIS 
SOFTWARE  
This section shows foundations of a flexible suite of 
software tools for medical image analysis that was 
developed. For elaboration of structural scheme of software 
basis 
interface 
an 
estimation 
of 
functionality 
and 
compatibility of existed software development tools were 
done. Tasks which may be solved with software to be 
developed, initial data, diagnostic features and characteristics 
have been observed. For software developing we use  
C-language from Microsoft Visual Studio. 
Based on material posted by Guillaume Marceau [1], 
who in his study used parameters of 72 implementations of 
programming languages, and compared them to 19 special 
tests, prepared by the project "The Computer Language 
Benchmarks Game" as a kernel chosen interpreter LUA [6]. 
In the first case data are processed using temporary file, 
which allow to analyze records (images). In another case a 
transfer by calling a run-time library is performed (Fig.  3). 
Our software is based on the interpreter of Lua language. 
It was elaborated as the main module based on an interaction 
of complex modules. It includes a graphical interface, global 
variables and image storage structure. Architecture of the 
graphical interface was carried out by linking the Highgui 
library [7] from the OpenCV package [7]. The image 
processing and function analysis are supported by OpenCV 
library but connection Lua with OpenCV are realized by 
Lua-binding interface for a connection function of OpenCV 
with Lua. 
An image structure is determined by a module of 
graphical interface into OpenCV library which is responsible 
for visualization and representation of images. Headers of 
image structures are global variables-pointer of interpreter 
38
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

Lua. They have special type - userdata. Userdata corresponds 
to a pointer in the computer address space. This module also 
includes image read/write functions, basic functions of image 
processing and interactive contouring. All interactive 
functions return values in the event block, which changes 
global variables of the interpreter. A simultaneous usage of 
several modules is required for tasks of monitoring space-
occupying lesion. In this case an interaction has been 
performing by using global variables of the Lua interpreter 
and properties of the userdata type of Lua interpreter.  
 
 LUA + GDI + Global descriptions
Histological image 
analysis software
Developer’s functions 
(image and data 
analysis)
Additional interface 
support
Scripts for 
function 
control 
and design
User’s 
interface
Event service 
block 
(mouse, 
keyboard)
Intelligent script 
generator
Data of dependence of  image and functions
Lua Binding Library
Highgui
(interface)
Cxcore
(image data 
structure)
Cv200
(Image 
processing)
 
 
Figure 3.  Scheme of flexible suite of software tools for medical image 
analysis. 
Short sequences of functions are called in nodes for 
solving basic problems. During image processing a node of 
Lua can provide image exchange through Lua-outlets. First 
it sends images to the highest Lua-outlet identificator. After 
that the processing is done if the state of Lua-outlet was 
changed. The node changes the sequence of the processing 
functions and their parameters in accordance with his 
notifications. Loop notifications are sent eventually from a 
slow thread at the end of the scripts processing.  The 
observer notification is required during the path through the 
each of the nodes.  It is called the notify event-slot. This slot 
calls node’s state method to get a dictionary with the node’s 
attributes. Also it sends these attributes to the observers. 
Communication between nodes in the same script is done 
through a direct function. This function is called by event-
slots, either using a virtual method bang for the first inlet or a 
function pointer for other inlets. Images are processed by 
reference. 
Adding new complex functions of processing and 
analysis is carrying out by group of developer’s function. As 
an input new functions may get any global variable or text 
and numerical constants from the LUA interpreter. 
All internal controlling of software is carrying out by text 
scripts of LUA, which are divided into two categories: 
1. 
scripts for image sequences analysis; 
2. 
scripts for operative functionality and setting up of 
software at workplace of medics.  
All scripts are stored in a text form and easily accessible. 
However they are not for changing by user and may be 
edited for by developers only. 
Scripts manage to software organization and create new 
additional function for image analysis and processing. 
Preprocessing analysis of images sets of image allow to 
define processing functions. Module of scripts generation 
defines such sets. It includes intelligent components for 
connections results of image functions processing and image 
characteristics. Of course such task can be solved only for 
particular task in our case for histology image analysis.  
Every interpreter defines function through a specific 
table. We use it for definition connection images 
characteristics with a function in our software. It includes a 
set of feature vectors and variable of priority. The set of 
feature vectors defines the utility function. The variable of 
priority determines the position of function in the generated 
script. In result such software has intelligent self-
programming possibilities. 
In the analysis the first step is determining of global 
characteristics of images and defining the type of image. 
Single-channel grayscale image often correspond to the 
radiological methods of investigation in medicine. If the 
depth of the pixel brightness over the eight-bit image is 
defined as CT scans. The color image is composed of three 
or more channels. It is defined as histological. It remains 
uncertain class for eight-bit grayscale images, which can be 
classified as partially processed images of histology and 
radiological medicine. The difference halftone radiological 
images from histology most often lies in the way of 
formation of objects in images. Color histological image is 
formed on the basis of color in the preparation of amino 
acids. As a result, objects in an image composed of small 
specks, which form additional local boundaries. The 
boundaries correspond to local extremes of the brightness 
intensity. Therefore, a Sobel filter is performed to determine 
such characteristics (Fig. 4). The result is a gradient image. 
The distribution of brightness in this image is similar to a 
Gaussian distribution. 
Based on the characteristics of the asymmetry and the 
eccentricity of histogram is determined type of images, that 
is belonging to the histological or radiological class. 
The image type defines processing scripts and user 
interface. System generate separate user interface on base 
type definition for histological images (Fig. 5) and 
radiological images (Fig. 6). 
A script generation module consists of two parts: image 
analysis and script construction. The fist part started from 
global image analysis that include histogram analysis and 
basic statistical analysis for pixels distributions, fractal and 
texture analysis. On the base such analysis as estimation of 
noise, blurring, image characteristics are calculated. From 
the interpreter function table image preprocessing script are 
generated for image improving by such estimation. 
39
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

 
 
a) 
 
 
d) 
 
b) 
 
 
e) 
 
c) 
 
 
f) 
 
Figure 4.  Examples of the results of image classification stages: a) 
radiological image, b) gradient of radiological image, c) histogram of 
radiological image gradient, d) histological image, b) gradient of 
histological image, c) histogram of histological image gradient. 
 
 
 
  
 
Figure 5.  Screenshot of user interface generated for histological image 
analysis. 
 
  
 
Figure 6.  Screenshot of user interface generated for radiological image 
analysis. 
Than local image analysis is going by convolution and 
statistical analysis of line-profile characteristics. This 
analysis allows to estimate characteristic of cells borders and 
contrast. Such estimation defines functions for image 
contrasting and border emphasis. After generation result 
image is tested for quality of processing. If the image quality 
is low stage of image analysis and function definition should 
be repeated. Such procedure generates image improving 
scripts that can be change by a user or developer. This script 
is only proposition and need to user control. The same 
mechanism of image analysis and function definition works 
for stages of segmentation and postprocessing. 
As result our software constructs common script for 
every generation stages. Such script corresponds to function 
sequence for object extraction. It can be used for extraction 
of histological objects on the image. We use it for extraction 
of nuclei from histological images. Then characteristics of 
objects are calculated. It is necessary to detect type of objects 
that present at the image. We divide objects for five basic 
types: blobs, front, needles, dendrites and nets. Such 
procedure of object detection is spending by functions 
through script generation. Using global fractal, texture 
characteristics software detect geometrical type of objects 
and formed characteristics sets for object description. 
For definition image processing function in scripts we try 
to use Kohonen neural network (self-organizing map, SOM) 
[8, 9].  It is a class of neural networks, the main element of 
which is a layer of Kohonen. The Kohonen layer consists of 
adaptive linear combiners. Estimations of global conditions 
on the image are used as weights in neural network. 
Adjusting of the input weights and vector signals 
quantization is closely related to a simple basic algorithm for 
cluster analysis (method of dynamic cores, K-means). 
System is supported by script generator module. This 
module uses LUA-metatable of function for image 
processing and corresponding table with estimations of 
image. Thorough such table, definition of function sets going 
by Kohonen neural network. As a result, the module 
40
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

proposed scripts for image processing as text file. Users can 
spend analysis of this script and change some in it. 
The software is supported by uses control and changing. 
There are a few version of user interface for managing of 
image processing and choosing of analysis type. Also the 
software has sets of interactive function for image 
processing. Оn the basis of these tests in the fifth section 
draws conclusions about the effectiveness of the proposed 
scheme, software analysis of medical images 
IV. 
TESTING 
Now, the software has stage of developing. But we spend 
a few tests for determination of basic possibilities.  
This software was tested on different types of 
histological and radiological images. We are used three types 
of histological images and two type of radiological image 
(Tab. 1). Histological images were divided by cells density: 
high density - more than 70% image area for cells, middle 
density - between 40% and 70% image area for cells, low 
density - less than 40% image area for cells. Tested 
radiological images are divided into CT and MRI images. 
We spend tests for image improving stage. After testing was 
constructed table with probability values of success image 
processing by generated scripts..  
A rate of success probability was defined by empirically 
way. The software was testes by 248 medical images. 
 
TABLE I.  
TABLE OF SOFTWARE TESTING 
Image type 
probability of 
type definition 
probability 
values of success 
image 
processing 
Histological images with high 
density of cells 
98% 
83% 
Histological images with middle 
density of cells 
99% 
90% 
Histological images with low 
density of cells 
87% 
90% 
CT images 
100% 
93% 
MRI images 
100% 
95% 
 
We take good marks for radiological images. For 
histological images marks are insufficient. 
V. 
CONCLUSION 
In this paper, we proposed a scheme of automatic  
generation of image processing function sets for analysis of 
histological tissue and described software for it. This 
software based on principles of open architecture and allows 
to change design and possibilities of it in real time on 
physician work place without compilation stage. In other 
side the speed of the program remains the same as in the 
compiled 
version. 
Developed 
software 
architecture 
simplifies the development of model programs for image 
analysis of histological images (Fig. 5) and radiological 
images (Fig. 6). 
Marks that we take are unsatisfactory for histological 
images. It depends on a high complexity of images. We 
consider that it is necessary to change intelligent agent for 
script generator.  
But in this paper we describe nice path for developing 
software for image processing. Basic possibilities of such 
software are possibilities of dynamical changing of interface 
and sequences of processing functions.  
 
 
ACKNOWLEDGMENT 
This work is supported by ISTC project #B-1682 and #B-
1636. 
REFERENCES 
 
[1] 
G. Marceau “The speed, size and dependability of programming 
languages”, Blog “Square root of x divided by zero”, 2009 
(http://blog.gmarceau.qc.ca/2009/05/speed-size-and-dependability-
of.html,   accessed 2011-06-06) 
[2] 
G. Reitmayr and D. Schmalstieg. “An Open Software Architecture  
for Virtual Reality Interaction”, proc of VRST’01, November 15-17, 
2001, 
Banff, 
Alberta, 
Canada. 
(http://citeseerx.ist.psu.edu/ 
viewdoc/download?doi=10.1.1.22.6256&rep=rep1&type=pdf,  
accessed 2011-06-06) 
[3] 
T. Kanade, Z.Z. Yin, R. Bise, S. Huh, S. Eom, M.F. Sandbothe, and 
M. Chen “Cell image analysis: Algorithms, system and applications”, 
Proceedings of WACV11, 2011, pp. 374-381  
[4] 
A. Nedzved, A. Belotserkovsky, T.M. Lehmann and S. Ablameyko 
“Morphometrical Feature Extraction On Color Histological Images 
For Oncological Diagnostics”, 5th International Conference on 
Biomedical Engineering, 14-16 February, 2007, Innsbruck: Proc. - 
P.379-384. 
[5] 
L. He, L. R. Long, S. Antani, and G. Thoma, “Computer assisted 
diagnosis in histopathology”, Z. Zhao ed., Sequence and Genome 
Analysis: Methods and Applications, ch. 11, iConcept Press, 2010. 
(http://www.iconceptpress.com/books/publicationContent.php?public
ation id=B00003, accessed 2011-05-28) 
[6] 
R. Ierusalimschy “Programming in Lua”, (second edition)  Lua.org, 
ISBN 85-903798-2-5, p. 328, 2006 
[7] 
G. Bradski and A. Kaehler “Learning OpenCV: Computer Vision 
with the OpenCV Library”, O’Reilly, p. 555, 2008 
[8] 
S.. Kaski, “Data exploration using self-organizing maps”, Acta 
Polytechnica 
Scandinavica, 
Mathematics, 
Computing 
and 
Management in Engineering Series No. 82, Espoo, p. 57, 1997 
[9] 
A Ultsch “U*-Matrix: a tool to visualize clusters in high dimentional 
data” University of Marburg, Department of Computer Science, 
Technical Report Nr. 36: 2003. pp.1-12 
 
 
 
41
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

