Delay Optimization for URLLC in Software Deﬁned Networks:
A Case Study on Platooning
M¨uge Erel- ¨Ozc¸evik∗, Berk Canberk∗†, V. C¸ a˘gri G¨ung¨or‡, Yes¸im Bayramlı§
∗Computer Engineering Department of Istanbul Technical University, Istanbul, TURKEY
† Electrical and Computer Engineering Department of Northeastern University, Boston, USA
‡Computer Engineering Department of Abdullah G¨ul University, Kayseri, TURKEY
§Havelsan, Ankara, TURKEY
Emails: erelmu@itu.edu.tr, canberk@itu.edu.tr, cagri.gungor@agu.edu.tr, yesimb@havelsan.com.tr
Abstract—The autonomous driving in a platoon network requires
reliable data transfer and strict latency on downlink trafﬁc. These
two requirements have been addressed in 5G under the Ultra-
Reliable Low Latency Communication (URLLC) speciﬁcation. In
this study, we focus on this 5G service, and we design a novel
Software-Deﬁned Platoon Network (SDPN) to optimize the end-
to-end Delay (e2eDelay). Our SDPN deﬁnes the e2eDelay in a
closed-form expression that covers Data and Control planes. To
optimize e2eDelay, we propose a Mixed Integer Linear Problem
(MILP) that jointly considers the constraints in the vehicle to
vehicle (V2V) and the vehicle to infrastructure (V2I) links. Due
to the NP-hard characteristic of our MILP optimization and to
reduce the computational complexity of the optimization at the
same time, we propose a novel Centralized Set Cover algorithm
that ﬁnds the optimum set cover of vehicles by building platoons.
According to the results, our SDPN serves e2eDelay under 3.5
msecs with a 45% improvement over the conventional approach.
Keywords–SDN; URLLC; e2eDelay; Platooning; MILP.
I.
INTRODUCTION
According to the European Commission, the carbon emis-
sion has been aimed to decrease the fuel-consumption in
transportation by 60% level by 2050 [1]. To reduce it, ”eco-
driving” is newly deﬁned as avoiding aggressive acceleration,
keeping optimal space, driving in steady-state speed according
to road dynamics [2]. Therefore, this has led us to investigate
a new Intelligent Transport Systems (ITS) with higher fuel
efﬁciency in highways with an approach: Platooning.
In a platoon, there is one leader and there are also followers
just behind it. Thanks tothe vehicle to infrastructure (V2I)
link, a leader takes the dynamic rules for trafﬁc ﬂow control
and accident data from the remote control center in virtual
Evolved Packet Core (vEPC). By vehicle to vehicle (V2V)
link, the leader forwards these rules to the following vehicles
[2]-[4].Therefore,it decreases fuel consumption in different
road dynamics enhances trafﬁc efﬁciency and ensures safety
by controlling the space between vehicles [2]. Such a fully
automated driving in a platoon requires reliable data transfer
and strict latency in downlink trafﬁc ﬂow during mobility.
Here,this ﬂow is called Ultra-Reliable Low Latency Commu-
nication (URLLC) in 5G services [3].
According to International Mobile Communications (IMT-
2020), URLLC services require a radio-latency of 1 msec
and an end-to-end Delay (e2eDelay) of a few msecs [4]
[5]. E2eDelay is measured by the concatenation of V2V and
V2I communications in the downlink URLLC service from a
remote source to a vehicle. Therefore,by considering both edge
before
after
Approach
AdHoc
Centralized
Comm. Tech.
DSRC, IEEE 802.11p
4G+5G, OpenFlow with SDN
Trafﬁc Type
Reliable Data Transfer
URLLC
Figure 1. The Comparison of Vehicle Platooning Approaches.
and core in the platoon networks, we study e2eDelay into two
parts as V2V and V2I.
A. Problem Deﬁnition
For V2V case, Figure 1 showstwo proposed approaches
for platooning. Before,there has been an AdHoc approach
that vehicles communicate with each other by Dedicated
Short-Range Communication (DSRC) over IEEE 802.11p. A
vehicle platoon has been built locally according to the vehicle-
centric decision. There are many studies that try to build a
platoon via an AdHoc approach [6] [7]. However,there have
been such challenges as frequency reuse and interference
between vehicles during the V2V communication and platoon
building. Under extremely increased 5G background trafﬁc
[8], these challenges cause many packet retransmissions and
this negatively affects the e2eDelay of URLLC service [9].
Therefore,the platoon should be built as long as possible by de-
creasing the number of independent vehicles exempliﬁed as V3
in the ﬁgure. However,the size of the platoon cannot increase
after a certain level because of depending AdHoc approach.
To overcome these problems, the centralized orchestration of
platooning and control of the vehicles are required.
Thanks to the global view of the centralized controller, an
optimal platoon can be built that offers such advantages: The
fuel efﬁciency is increased for the whole vehicular network.
The frequencies per vehicle can be assigned to them previ-
ously from a centralized pool, and therefore,the data transfer
would become reliable without any packet retransmission in a
platoon [10]. Therefore,a centralized approach for the vehicle
platooning is taken into consideration.
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

User Type
Application
5G Trafﬁc
Velocity
Mobility Characteristic
Platoon Vehicle
Fully Automated Driving
URLLC
50-130 km/h
Fluid-Flow Direction
Independent Vehicle
Fully Automated Driving
URLLC
50-130 km/h
Fluid-Flow Direction
Cellular User
Video Content Apps
eMBB
0-2 km/h
Random Way Point
Figure 2. System Architecture and User Types in Proposed SDPN.
However,the centralized approach is only seen in 3% of
the recent studies that try to solve such platooning challenges
in the literature. The main reason for it is the lack of V2I
technology investments in 5G [11]. Therefore,to keep the
advantages of the centralized approach, we investigate also
the V2I part of URLLC services in the platoon networks. In
V2I part,the load in vEPC has increased because there is huge
trafﬁc intensity on core network [8] and the whole signaling
of the platoon is now routed over V2I as mentioned in Figure
1. Therefore,the closed-form expression of e2eDelay is also
proposed with a trafﬁc load effect due to increasing the queuing
and processing delay in the core devices.
B. Contributions
We propose a Software-Deﬁned Platoon Networks (SDPN)
that considers both Data and Control parts of URLLC services.
It optimizes e2eDelay (D) with a Mixed Integer Linear Prob-
lem (MILP) for platoon networks by jointly considering V2V
and V2I constraints. Thanks to the global view of SDPN, it
builds an optimal platoon as long as possible. The decisions
are embedded in each dummy devices without touching the
physical plane with open source OpenFlow(OF) protocol. The
whole contributions can be found below:
• A novel closed-form expression of e2eDelay (D) by
covering Data and Control Planes,
• A MILP that jointly considers the constraints in both V2V
and V2I links,
• A novel Centralized Set Cover for Platooning algorithm
to optimize e2eDelay.
The rest of the paper is organized as follows: Section II
gives the proposed system architecture of SDPN by consider-
ing the mathematical model of e2eDelay in terms of Data and
Control Planes. Section III shows the comparison of proposed
and conventional model in terms of e2eDelay (D). Finally,
Section IV concludes the paper by giving summary.
II.
PROPOSED SYSTEM ARCHITECTURE OF SDPN
The system architecture of SDPN is shown in Figure 2. The
Data and Control planes are separated from each other. Data
plane includes two tiers. In small cells and macrocells, end-
users are served over RSUs (5G) and eNodeBs (4G), respec-
tively. There is a Dense-Urban (eMBB-UMx) [12] topology
in Data Plane. It is based on four outdoor small cells per
macrocells. The end-users have Control and Data signals to
keep communications alive. Control signals, shown in dashed
line,are routed over macrocells; whereas, Data signal shown
in solid line, can be served over small cells.
A. Data Plane
In this paper, there are three user types named as platoon
vehicle, independent vehicle and cellular user. A vehicle can
be a platoon vehicle as either a platoon leader or follower in
a platoon.The cooperative automation system in a platoon re-
quires highly reliable service and ultra-low latency during this
communication. Then,we assume predecessor-leader controller
strategy in V2V communication. The leader communicates
via V2I to take fully automated driving data over URLLC
trafﬁc type and also forwards it to the followers via V2V links
in a platoon. Follower vehicle only communicates with the
preceding one to know its relative position and to take road
characteristics. For those vehicles, we only consider vehicle
communication by ignoring end-user in a car who can generate
multimedia trafﬁc; i.e., eMBB.
In highways, the velocities are assumed as uniformly
distributed between 50-130 km/h. In this study,we consider
the speed limits in the German Autobahn road network (130
km/h). Then,the mobility characteristic is determined as Fluid-
Flow direction. The reason for it is that the fuel-efﬁciency
of platooning only makes sense in highways. According to
Larsson et al. [1],the long and low-trafﬁc roads are mostly
suitable for platooning. Therefore, it is not preferred to use
in the dynamic road characteristics with multi-lane scenarios.
Moreover,the independent vehicle is a vehicle that communi-
cates via V2I to take fully automated driving data over URLLC
trafﬁc. Here, it has no V2V communication around. Its velocity
and mobilitycharacteristics are the same as platoon vehicles
on highways. On the other hand,there are cellular users as
background trafﬁc in Core. They run video content applications
over mobile-devices, which generates eMBB trafﬁc. Due to be-
ing pedestrian, the velocity is assumed as uniformly distributed
between 0-2 km/h. The mobility characteristic is determined
as Randow WayPoint. The total number of the users is deﬁned
as N.
Each vehicle, macrocells, and small cells have also Open-
Flow (OF) switch capability to communicate with Control
plane via OF protocol. In the Data plane, each OF device
has two main layers, such as Radio Resource Control (RRC)
and OF table. Control signaling is performed via the RRC
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

TABLE I. AN EXAMPLE OPENFLOW SWITCH TABLE IN SDPN.
Match Fields
ACTION
STATISTICS
IN PORT
IP PROTO
IP SRC
IP DST
Output
TX Packets
port1
6 (URLLC)
10.0.0.1
10.0.0.3
port3
5260759
port2
17 (eMBB)
10.0.0.2
10.0.0.4
port4
34506
layer for assigning to radio resources. The resources for RSUs,
eNodeBs, and vehicles are previously allocated from a resource
pool. Especially in a platoon, it enables short inter-vehicle
distance and low transmission power to enable spatial reuse
of V2V links [13]. Moreover,the handover is only performed
during inter-macrocell transitions.
URLLC and eMBB trafﬁcs are routed according to em-
bedded rules in OF table as exempliﬁed in Table I. The match
ﬁelds of OF table include 44 components in OF basic class
that can be matchable with the incoming packet header. This
part is in OpenFlow Extensible Match (OXM) format, which
is also deﬁned as type-length-value (TLV) format and it has
5 to 259 bytes long [14]. In each OF table as exempliﬁed in
Table I, we consider statistics parts to take data periodically;
such as user type, trafﬁc load (ρ), current position and velocity.
Firstly,the user type is deﬁned according to the protocol type of
the matched ﬁeld which is directly mapped with URLLC and
eMBB services. We differentiate the trafﬁc ﬂows according to
the protocol number of IP packet (IP Proto=6 for TCP based
URLLC, IP Proto=17 for UDP based eMBB). These ﬂows
should also match with such ﬁelds: Ethernet type (0x800 IP
packet), different Ethernet source, destination, and different
IPv4 source, the destination address in OF table. Secondly, the
counter of TX packets is directly used to calculate trafﬁc load
(ρ) per OF switch. Thirdly, the current position of a mobile
user is determined if the related ﬂow is matched with speciﬁc
OF switch (The static position of RSUs is already known).
Finally, the velocity of end-user can be easily calculated by
using periodically taken statistics, which will be used while
building a platoon.
B. Control Plane
Control plane has centralized SDPN controller. It calculates
proposed e2eDelay (D) per URLLC services and runs the
proposed e2eDelay optimization algorithm by considering the
whole topology thanks to the global view. It takes statistics
via OpenFlow protocol 1.5.1 for each period of time. As a
result; according to the output of SDPN decisions, OF rules
are embedded to speciﬁc OF switches. The details of SDPN
controller can be found into following subsections:
1) E2eDelay (D) Calculation: A novel e2eDelay(D) for
SDPN is deﬁned by considering two planes in the following
equation:
D =
Control Plane Delay
z
}|
{
X
Pmm′ · Ws +
Data Plane Delay
z
}|
{
X
Pj · Wj
∀ j ∈ (m, s)
(1)
where Pj is serving probability over OFj, Wj is queuing and
processing delay per macro or smallcells which are also OF
switch. j is an index of macro (m) or smallcell (s). Ws is
delay caused by SDPN Controller processing and is executed
for each macrocell to macrocell transition (Pmm’=1) called
handover procedure. Here,the propagation delay is ignored. It
is calculated by using d/s equation where d is the distance
in meters and s is the speed of light (3x109 m/sec) [15]. By
considering 10 m distances between vehicles in a platoon, the
delay becomes at most 3x10-8secs. This can be disregarded
even if the length of the platoon may be increased too much
(≤105 vehicles). Moreover,such an increase on platoon length
is not realistic. It enables V2V communication in platoon
simultaneously [11]. On the other hand, the propagation delay
between eNB and a centralized SDN controller is taken as 1
msec. This propagation delay is calculated by the coverage of
the SDN controller that is responsible for a highway. In this
study,we assumed that 600 km long highway is orchestrated
by a centralized controller. By using the speed of light and
d/s equation, the propagation delay is measured as 1 msec
[16]. Moreover, because of only controlling URLLC trafﬁc
which has a packet size equal to approximately one-tenth of
the eMBB packets, the processing time can be kept under 5G
requirements (1 sec response time).
a) Control Plane Delay: The control part of e2eDelay
(D) is triggered when the macrocell to macrocell transition
(Pmm’) occurs, which calls a handover procedure when the
probability is 1. For the whole topology, the distribution
function for the topology is calculated for all type of user
such as Pedestrian, Platoon or Independent Vehicle as in the
following equation:
Pmm′ =
P Pmm′(t < T)
N
(2)
whereN is the total number of usersand Pmm’(t) is discrete
probability of the handover execution between macrocells at
simulation time t and T is the total period of time as follows:
Pmm′(t) =
1,
macrocell transition
0,
otherwise
(3)
On the other hand,there is an extra delay (Ws) caused by
the handover execution in centralized SDPN controller. The
handover procedure is taken as 15 msecs for each requirement
of inter macrocell transitions [15] [16]. Therefore,the Pmm’ per
vehicle should be minimized by platooning them as long as
possible. We mapped this part with Control part of e2eDelay.
b) Data Plane Delay: In Level 2 of the proposed
equation, e2eDelay (D) is performed per URLLC ﬂow by
considering each packet process. To understand where the ﬂow
is performed at a speciﬁc time t, the match of OFj table should
be checked. If a ﬂow is matched with OFj table, that means
it is served over this cell which can be either macrocell or
small cell. This is mathematically formalized as in following
discrete probability function:
Pj =
1,
flow matches in OFj table
0,
otherwise
(4)
On the other hand,in each OF switch, Data packets of end-user
are directly affected by the load in Core due to queuing and
processing delay (W (sec)). Wemodel each cell by queuing
theory. In M/M/c/K Markov model, the probability density
function (Pn) has a Poisson distribution for 0 ≤ n < c and
a Geometric distribution for c ≤ n ≤ K. As in general aspect,
the summation of each probability (Pn) should be equal to 1.
Here, the computation is nearly the same as the M/M/c (inﬁnite
queue) Markov model. However, both Poisson and Geometric
series of M/M/c/K are ﬁnite; Therefore,in the computation,
there is no constraint such that ρ deﬁning as
λ
c·µ must be less
than 1 [17]. Thanks to that, the waiting time in a queue while
1 ≤ ρ can be also analytically calculated. While working on
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

D =



























PM
0 Pmm′ · Ws+
P Pj ·
rj(1−
(rj )K
(cj )(K−cj )cj !
P0)+
P0(rj )(cj )ρj
cj !(1−ρj )2 ·[1−(ρj)(K−cj +1)−(1−ρj)·(K−cj+1)(ρj)(K−cj ))]
λj(1−
(rj )K
c
(K−cj )
j
cj !
P0)
, (∀j ∈ (m, s)), (ρj ̸= 1)
PM
0 Pmm′ · Ws+
P Pj ·
rj(1−
(rj )K
(cj )(K−cj )cj !
P0)+
P0(rj )(cj )
cj !
·
(K−cj )(K−cj +1)
2
λj(1−
(rj )K
(cj )(K−cj )cj !
P0)
, (∀j ∈ (m, s)), (ρj = 1)
(7)
Dense Urban topology, this case should be also considered.
Therefore,each macrocell and small cells are modeled with
M/M/c/K Markov model. The probability density function of
this model is given in (5) [17].
Pn =
 rn
n! · P0
, 0 ≤ n < c
rn
cn−c·c! · P0
, c ≤ n ≤ K
(5)
where r is calculated as λ
µ, c is channel number of small cell
or macro cell and K-c is the length of the queue. With the
help of P Pn = 1 general aspect, P0 is calculated as in [17].
By implementing L’Hospital rule on P n · Pn, the number of
packets that are waiting in a queue (Lq) is calculated. Then,the
number of packets in the whole system (L) is performed by
using L = Lq + r · (1 − PK) formula. PKis the probability of
being a drop from the queue. The total waiting time (W) in
the whole M/M/c/K system is calculated as [17]:
W =
L
λ · (1 − PK)
(6)
where λ is dynamically changed in the Data Plane, which
also alters trafﬁc load (P ρ) per cell. Therefore,e2eDelay (D)
optimization should consider the trafﬁc load in Core. We
mapped the Data part of e2eDelay (D) analytical formula with
Level 2. The whole formula of proposed D is shown in (7).
2) E2eDelay (D) Optimization: The e2eDelay optimization
problem in SDPN is deﬁned as follows:
min e2eDelay (D):
(8a)
s.t.
|Vj| > 1,
Vj ∈ Platoon
(8b)
∀ |VjV ′
j | < 20 m,
Vj ∈ Platoon (8c)
X
Wj < 4 msecs, ∀j ∈ (m, s)
(8d)
The objective function is minimizing average D as in (7). It
is calculated by considering all end-users in a platoon. Due to
having both discrete and continues variables in the constraints,
this problem is called a Mixed Integer Linear optimization
problem (MILP). In the ﬁrst constraint in (8b), the number of
vehicles in a platoon should be higher than 1. Otherwise,a
vehicle is called an independent vehicle because it cannot
build a platoon alone. In the second constraint in (8c), the
inter-vehicle spacing in a platoon should be under 20 m while
considering optimal SINR values and path-loss models to keep
V2V communication alive [13] [18] . In the third constraint in
(8d), the data part of D should be under 4 msecs.
The optimal solution of this problem can be found by
using the Branch and Bound algorithm, however, it is NP-
hard. The spent time can reach up to 20 mins for German
Autobahn as mentioned in [1]. In our scenario, the proposed
optimization algorithm should be met by 5G requirements:
Require: Graph G
Ensure: Set of Platoons P and the size of it M
1: Initialize empty set for the platoons P = {{}}
2: while Platoon P is feasible do
▷ Check (8d)
3:
while Graph G is not empty do
4:
for Each Vehicle v in G do
5:
Find v′ where |vv’| <20+penalty
6:
Add v′ into the platoon of v in P
7:
Remove v from G
8:
M ←Calculate the size of P
9: return P, M
Figure 3. Centralized Set Cover for Platooning.
e2eDelay should be kept under a few msecs for URLLC
trafﬁc and SDPN controller should give dynamic decisions
under 1 sec period [4] [19]. Therefore,we propose a greedy
algorithm called Centralized Set Cover for Platooning that
builds a platoon as long as possible. The pseudocode is given
in Figure 3.
This algorithm ﬁnds minimum set cover in a graph G where
all vehicles are platooned in a set P. However, the response
time of the set cover is not acceptable because it exceeds
1 sec.. Therefore,we use the indirect constraint handling in
e2eDelay(D) optimization. The static penalty function violates
the constraint in (8c)enabling local search on infeasible solu-
tions. In the proposed SDPN, these infeasible solutions would
be feasible by dynamic alteration on velocities and positions of
the vehicles in a platoon for the next period of the controller.
It takes graph G including all vehicles in a highway as an
input and returns the number of sets M and the minimum
set covers as platoons P. After initializing empty set P, it
checks the feasibility of the decision of the algorithm in terms
of third constraint in (8d)in line 2. Between lines 3-7, there
is a loop executing until there is no vehicle in a Graph G.
Between lines 4-7, there is another loop for each vehicle v in
dynamically reduced graph G. In line 5, the algorithm tries
to ﬁnd another vehicle v′ of which euclidian distance to v is
lower than 20+penalty. In this study, the penalty function is
selected as 80 m and the performance evaluation is executed
by using this value.If there is such v′, it is added to the platoon
of v in set P as in line 6 and the vehicle v is removed from
graph G due to already being in a platoon as in line 7. Finally,
the size of P is calculated as M in line 8 and the algorithm
returns a greedy platoon P in line 9.
III.
PERFORMANCE EVALUATION
The performance of the proposed SDPN is evaluated by
a simulation environment shown in Figure 4. It is separated
into two parts: Level 1 and Level 2. Firstly,in MATLAB©2018a,
the Data Plane of SDPN is built by using uniformly random
generation for mobility data according to Level 1 parameters in
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

(A). MOBILITY PARAMETERS.
LEVEL 1 Parameters
Values
Random Way Point
Pedestrains
Speed Interval
[0 2 km/h]
Pause Interval
[0 1 sec]
Walk Interval
[2.00 6.00 sec]
Direction Interval
[-180 180 degree]
Fluid Flow Direction
Vehicles
Highway Length
[0 24200 m]
Highway Exit Interval
2000 m
Speed of Vehicles
110 km/h
Cell Ranges
Macrocell (Rm):
200 m
Smallcell (Rs)
100 m
Per macrocell
4 smallcells
Simulation Time
200 secs
(B). MARKOV PARAMETERS, AND THE DETAILS OF URLLC AND EMBB.
LEVEL 2 Parameters
Values
Spectrum, Bandwidth
Macrocell:
4GHz, 200MHz
Smallcell:
30GHz, 1000MHz
V2V:
5.9GHz, 100 Mhz
Channels in Macro/Smallcell:
20, 7
Serving Rates
of Macrocell 1/µm:
6,00E-005 secs/packet
of Smallcell 1/µs:
1,20E-005 secs/packet
Flow Parameters
Packet generation
Poisson Trafﬁc
λ per URLLC ﬂow:
60 packets/sec
λ per eMBB ﬂow:
1000 packets/sec
Total λ per macrocell:
33333 - 8333333 packets/sec
Queue size
10000
(C). TOTAL NUMBER OF URLLC AND EMBB WHEN TOPOLOGY UTILIZATION γ IS INCREASED.
γ
N
10 % URLLC
90 % eMBB
50%URLLC
50 % eMBB
90%URLLC
10 % eMBB
0.005
121
12
108
60
60
108
12
0.5
12100
1210
10890
6050
6050
10890
1210
1
24200
2420
21780
12100
12100
21780
2420
1.5
36300
3630
32670
18150
18150
32670
3630
Figure 4. Simulation Environment and Dense Urban (eMBB-UMx) [12] Topology Parameters in Platoon Network.
20
40
60
80
100
120
140
160
180
200
0
5
10
15
Number of 
Platoon   
Before
SDPN
20
40
60
80
100
120
140
160
180
200
0
10
20
30
40
50
Number of   
Independent 
Vehicle     
20
40
60
80
100
120
140
160
180
200
Simulation Time (sec)
0.04
0.06
0.08
0.1
0.12
0.14
Pmm'
Figure 5. Pmm’ when γ = 0.005, 50% URLLC, and 50% eMBB Trafﬁc.
sub-table 4a. Then,the mobility data is given to Control Plane
which runs algorithm in Figure 3. These results are interpreted
in the following Level 1 sub-section. Secondly,the data analysis
is executed in Level 2 part by using Simulink and StateFlow
libraries of MATLAB. The Level 2 parameters are given in
sub-table 4b. The results are shown in the following Level 2
sub-section. Moreover,the trafﬁc types during simulation are
differentiated as given in sub-table 4c. Here, γ is the topology
utilization changing by the total number of the users (N).
A. Level 1
In Level 1 of performance evaluation, two methods are
compared: Before (conventional AdHoc platooning) and SDPN
(proposed centralized platooning). In AdHoc platooning, each
vehicle locally decides to enter or exit a platoon in terms of
(8c). In Centralized platooning, SDPN executes Centralized
Set Cover for Platooning algorithm in Figure 3 that globally
tries to ﬁnd minimum set cover of vehicles. In the Figure 5,
the number of platoons and the effect on Pmm’ are shown by
comparing Before and SDPN approaches. When the topology
utilization is γ = 0.005, there is 50% URLLC and 50% eMBB,
i.e., 60 URLLC (vehicles) and 60 eMBB (pedestrian). Initially,
all vehicles are active in the highway, and after a randomly
determined duration per vehicle, they leave the topology. In
the ﬁrst sub-graph, in Y-axis the number of platoons and in X-
axis the simulation time are shown. Initially, SDPN builds 50%
more platoons than Before. During the simulation, the number
of leaving from the highways increase. Therefore,the number
of platoons decreases. In the middle graph, there are further
20 independent vehicles in Before that create a handover
request to SDPN controller per macrocell transition. It directly
increase Pmm’. Thanks to SDPN, Pmm’ can be decreased by
approximately 0.04 (33%) as given in third sub-graph. This
directly decreases Control part of D, as in (1).
B. Level 2
In Level 2 of performance evaluation, the effect of Level
1 is studied on e2eDelay (D). As seen in Figure 6, e2eDelay
(msec) is given according to different topology utilization (γ)
during a ﬁrst 15 seconds of the simulation. In each sub-
graph,left one shows the results of the Before (conventional)
and SDPN (proposed) approaches when γ
= 0.005 and
γ = 0.5, whereas,the right one shows the outputs when γ = 1
and γ = 1.5. Before performs AdHoc platooning, the SDPN
executes proposed Centralized Set-Cover algorithm in Figure
3. In each case when γ <= 0.5, the SDPN can decrease
21
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

(a) 10% URLLC, 90% eMBB.
(b) 50% URLLC, 50% eMBB.
(c) 90% URLLC, 10% eMBB.
Figure 6. e2eDelay, D (sec) for different Topology Utilization γ.
e2eDelay nearly 2.5 msecs from 5.5 to 3. The ﬂuctuationsare
caused by the handover request during macrocell transition
(Pmm’=0.3) to SDPN controller where Ws takes approximately
15 msecs as in (1). As the rate of eMBB services is increased
from 10% to 90% in Figures 6a-6c, the URLLC service is
further squeezed by the background trafﬁc. In the right sub-
graph of Figure 6a, Before cannot serve URLLC services and
e2eDelay increases up to 3 secs,whereas the proposed one can
keep it under 3.5 msecs. As a result,thanks to centralized view
SDPN improves e2eDelay 45% by keeping it under 3.5 msecs
even if the topology utilization is too high (γ >> 1).
IV.
CONCLUSION AND FUTURE WORK
In this paper, we proposed a Software-Deﬁned Platoon
Network (SDPN) dynamically optimizing e2eDelay of URLLC
services. A closed-form expression of e2eDelay (D) was newly
deﬁned by considering Data and Control planes. This objective
function was optimized via Mixed Integer Linear Programming
(MILP) by jointly considering the constraints in V2V and V2I
links of a platoon. Due to being NP-hard and to reduce the
computational complexity of the optimization, we proposed a
novel Centralized Set Cover for Platooning algorithm that built
a platoon as long as possible. According to the performance
evaluation, e2eDelay was improved by 45% by keeping it
under 3.5 msecs even if the topology utilization was too high.
As future work, the load effect of the core on platoon networks
will be investigated due to the lack of V2I investments in 5G.
ACKNOWLEDGMENT
This work is supported by TUBITAK TEYDEB 1501
program with project no 3180114.
REFERENCES
[1]
E. Larsson, G. Sennton, and J. Larson, “The vehicle platooning problem:
Computational complexity and heuristics,” Transportation Research
Part C: Emerging Technologies, vol. 60, pp. 258 – 277, 2015.
[2]
K. Y. et al., “Model Predictive Control for Hybrid Electric Vehicle
Platooning Using Slope Information,” IEEE Trans. on Intelligent Trans-
portation Systems, vol. 17, no. 7, pp. 1894–1909, July 2016.
[3]
C. Campolo, A. Molinaro, G. Araniti, and A. O. Berthet, “Better
Platooning Control Toward Autonomous Driving : An LTE Device-
to-Device Communications Strategy That Meets Ultralow Latency Re-
quirements,” IEEE Vehicular Tech. Magazine, vol. 12, no. 1, pp. 30–38,
March 2017.
[4]
E. Hossain and M. Hasan, “5G cellular: key enabling technologies and
research challenges,” IEEE Instrumentation Measurement Magazine,
vol. 18, no. 3, pp. 11–21, June 2015.
[5]
S. Y. Lien, S. C. Hung, D. J. Deng, and Y. J. Wang, “Efﬁcient Ultra-
Reliable and Low Latency Communications and Massive Machine-Type
Communications in 5G New Radio,” in IEEE Global Communications
Conference, Dec 2017, pp. 1–7.
[6]
S. Santini, A. Salvi, A. S. Valente, A. Pescap, M. Segata, and R. L.
Cigno, “Platooning Maneuvers in Vehicular networks: A Distributed and
Consensus-Based Approach,” IEEE Transactions on Intelligent Vehicles,
vol. 4, no. 1, pp. 59–72, March 2019.
[7]
A. Bibeka, P. Songchitruksa, and Y. Zhang, “Assessing environmental
impacts of ad-hoc truck platooning on multilane freeways,” Journal of
Intelligent Transportation Systems, vol. 0, no. 0, pp. 1–12, 2019.
[8]
“Visual Networking Index Report: Global Mobile Data Trafﬁc Forecast
Update, 2016-2021,” Cisco, Tech. Rep. C11-738429-00, Feb. 7, 2017.
[9]
R. Hall and C. Chin, “Vehicle sorting for platoon formation: Impacts
on highway entry and throughput,” Transportation Research Part C:
Emerging Technologies, vol. 13, no. 5, pp. 405 – 420, 2005.
[10]
J. B. et al., “Road Side Unit Deployment: A Density-Based Approach,”
IEEE Intelligent Transportation Systems Magazine, vol. 5, no. 3, pp.
30–39, Fall 2013.
[11]
K. T. E., “A Comparison of Approaches for Platooning Management,”
Master’s thesis, Vorgelegt am Lehrstuhl fr Wirtschaftsinformatik II,
Universitt Mannheim, 24 February 2017.
[12]
“Recommendations for NGMN KPIs and Requirements for 5G,”
NGMN Alliance, Tech. Rep. P1 WS#3 BBTS, June 2016.
[13]
J. Karedal, N. Czink, A. Paier, F. Tufvesson, and A. F. Molisch, “Path
Loss Modeling for Vehicle-to-Vehicle Communications,” IEEE Trans.
on Vehicular Technology, vol. 60, no. 1, pp. 323–328, Jan 2011.
[14]
“OpenFlow Switch Speciﬁcation, Version 1.4.0 (Wire Protocol 0x05),”
Open Networking Foundation, Tech. Rep., October 2013.
[15]
J. Prados-Garzon, O. Adamuz-Hinojosa, P. Ameigeiras, J. J. Ramos-
Munoz, P. Andres-Maldonado, and J. M. Lopez-Soler, “Handover
implementation in a 5G SDN-based mobile network architecture,” in
2016 IEEE 27th Annual International Symposium on Personal, Indoor,
and Mobile Radio Communications (PIMRC), Sept 2016, pp. 1–6.
[16]
J. P.-G. et al., “Modeling and Dimensioning of a Virtualized MME for
5G Mobile Networks,” IEEE Tran. on Vehicular Technology, vol. 66,
no. 5, pp. 4383–4395, May 2017.
[17]
D. Gross, J. F. Shortle, J. M. Thompson, and C. M. Harris, Funda-
mentals of Queueing Theory, 4th ed.
New York, NY, USA: Wiley-
Interscience, 2008.
[18]
T. Zeng, O. Semiari, W. Saad, and M. Bennis, “Joint Communication
and Control for Wireless Autonomous Vehicular Platoon Systems,”
CoRR, vol. abs/1804.05290, 2018.
[19]
C. Chen, Y. T. Lin, L. H. Yen, M. C. Chan, and C. C. Tseng, “Mo-
bility management for low-latency handover in SDN-based enterprise
networks,” in 2016 IEEE Wireless Communications and Networking
Conference, April 2016, pp. 1–6.
22
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-753-5
ICSNC 2019 : The Fourteenth International Conference on Systems and Networks Communications

