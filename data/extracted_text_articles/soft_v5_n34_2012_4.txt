191
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Benchmarking Data as a basis for Choosing a Business Software Systems 
Development and Enhancement Project Variant – Case Study 
 
Beata Czarnacka-Chrobot 
Department of Business Informatics  
Warsaw School of Economics 
 Warsaw, Poland 
e-mail: bczarn@sgh.waw.pl 
 
 
Abstract—Execution of Business Software Systems (BSS) 
Development 
and 
Enhancement 
Projects 
(D&EP) 
is 
characterised by the exceptionally low effectiveness, leading to 
the considerable financial losses. Thus, it is necessary to 
rationalize investment decisions made with regard to the 
projects of this type. Each rational investment decision should 
meet two measurable criteria: effectiveness and economic 
efficiency. In order to make ex ante evaluation of these criteria, 
being key to the decision-making process, one may successfully 
use ever richer resources of benchmarking data, having been 
collected in special repositories that were created with 
improvement of software processes and products in mind. The 
goal of this paper is to present possibilities of employing 
benchmarking data in the rationalization of investment 
decision concerning the choice of BSS D&EP execution variant 
on the basis of a case study. Thanks to the rational investment 
decisions made on the basis of reliable and objective 
benchmarking data it is possible to reduce losses caused by the 
low effectiveness of BSS D&EP. These issues classify into 
economics problems of software engineering. 
   Keywords-software 
engineering 
economics; 
business 
software systems development and enhancement projects 
variants; rational investment decision; effectiveness; efficiency; 
benchmarking data; case study 
I. 
INTRODUCTION 
In practice, execution of Business Software Systems 
(BSS) Development and Enhancement Projects (D&EP) is 
characterised by the exceptionally low effectiveness, leading 
to the considerable financial losses (the paper is an extended 
version of [1]). This may be proved by numerous analyses. 
As indicated by the results of the Standish Group studies 
success rate for application software D&EP has never gone 
beyond 37% [2], while products delivered as a result of 
nearly 45% of them lack on average 32% of the required 
functions and features, the estimated project budget is 
exceeded by approx. 55% on average and the planned 
project time − by nearly 80% on average [3] (for more 
details see [4]). Analyses by T.C. Jones plainly indicate that 
those software D&EP, which are aimed at delivery of 
business software systems, have the lowest chance to 
succeed [5]. The Panorama Consulting Group, when 
investigating in their 2008 study the effectiveness of ERP 
(Enterprise Resource Planning) systems projects being 
accomplished worldwide revealed that 93% of them were 
completed after the scheduled time while as many as 68% 
among them were considerably delayed comparing to the 
expected completion time [6]. Merely 7% of the surveyed 
ERP projects were accomplished as planned. Comparison of 
actual versus planned expenses has revealed that as many as 
65% of such projects overran the planned budget. Only 13% 
of the respondents expressed high satisfaction with the 
functionality implemented in final product while in merely 
every fifth company at least 50% of the expected benefits 
from its implementation were said to be achieved. Three 
years later, the respondents of Panorama Consulting Group 
study indicated that there were significantly more 
companies with ERP project overruns in 2010 than in 2009 
[7].  
Similar data, proving unsatisfactory effectiveness of 
BSS D&EP, are brought by the studies carried out in 2011 
among providers of such projects in Poland [8]. According 
to the results, 80% of the surveyed organizations admit that 
the projects exceed the planned budget, 79% - that they 
exceed the planned execution time while  64% - that the 
quality assumptions for software products are not being met. 
In this case it results from the fact that slight percentage of 
providers manages the software systems development 
processes properly. What is interesting, all those numbers 
increase if  the so-called expert methods are used to estimate 
project attributes – instead of estimates being based on 
standards and benchmarking data (most preferably own 
ones).  
Meanwhile BSS are not only one of the fundamental IT 
application areas; also their development/enhancement often 
constitutes serious investment undertaking: spending on 
BSS may considerably exceed the expense of building even 
50-storey skyscraper, roofed football stadium, or cruising 
ship with a displacement of 70.000 tons [9]. Yet quite often 
client spends these sums without supporting his decision on 
getting engaged in such investment by proper analysis of the 
costs, based on the rational, sufficiently objective and 
reliable 
basis. 
What 
is 
more, 
in 
practice 
COTS 
(Commercial-Off-The-Shelf) BSS rarely happen to be fully 
tailored to the particular client business requirements 
therefore their customization appears vital (see also [4]). 
Exceptionally low effectiveness of BSS D&EP as 
compared to other types of IT projects (i.e., maintenance, 
support, package acquisition, implementation projects, 
projects delivering other types of software), especially with 

192
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
their costs being considered, leads to the substantial 
financial losses, on a worldwide scale estimated to be 
hundreds of billions of dollars yearly, sometimes making 
even more than half the funds being invested in such 
projects. The Standish Group estimates that these losses – 
excluding losses caused by business opportunities lost by 
clients, providers losing credibility or legal repercussions – 
range, depending on the year considered, from approx. 20% 
to even 55% of the costs assigned for the execution of the 
analysed projects types (see e.g., [10], [11]). If direct losses 
caused by abandoning the BSS D&EP result from erroneous 
allocation of financial means, usually being not retrievable, 
in the case of overrunning the estimated cost and/or time, 
however, they may result from delay in gaining the planned 
return on investment as well as from decreasing it (necessity 
to invest additional funds and/or cutting on profits due to the 
overrunning of execution time and/or delivery of product 
incompatible with requirements) (for more details see [12]). 
On the other hand, analyses of The Economist Intelligence 
Unit, which studied the consequences of BSS D&EP delay 
indicate that there is strong correlation between delays in 
delivery of software products and services and decrease in 
profitability of a company therefore failures of BSS D&EP, 
resulting in delays in making new product and services 
available and in decreasing the expected income, represent 
threat also to the company’s business activity [13].  
What is more, the Standish Group studies also indicate 
that ”the costs of these (...) overruns are just the tip of the 
proverbial iceberg. The lost opportunity costs are not 
measurable, but could easily be in the trillions of dollars. 
[For instance - B.C.C.] the failure to produce reliable 
software to handle baggage at the new Denver airport is 
costing the city $1.1 million per day” [14]. These losses 
result from the insufficient level of the delivered product 
compatibility with the client’s requirements as to the 
functions and features: over 1994-2010 an average 
conformity of this type never went beyond 70%, which 
means that the delivered applications lacked at least 30% of 
the specified functions and features [3]. Incompatibility of 
the delivered product with the required one proves to be the 
highest for large projects, in case of which the delivered 
product lacks on average even 60% of the required functions 
and features. While for medium- and small-sized projects 
such incompatibility amounts to approx. 35% and approx. 
25% of functions and features, respectively. 
The above studies unequivocally indicate there is a 
significant need to rationalize investment decisions made 
with regard to BSS D&EP. To do so, one may successfully 
use ever richer resources of benchmarking data, having been 
collected with the intention to support improvement of 
various IT projects, including BSS D&EP, in special 
repositories (for more details see [15]). The goal of this 
paper is to present possibilities of BSS D&EP investment 
decision rationalization with the use of benchmarking data, 
illustrated with an example taken from development 
practice. This decision concerns choosing variant of BSS 
D&EP execution – since each project of this type may be 
executed using one of the three variants, namely: (1) 
developing new BSS from scratch, (2) customization of 
COTS BSS, and (3) modernization of BSS being currently 
used. 
The paper is structured as follows: in Section 2 the 
author presents the criteria of rational investment decision in 
the context of BSS D&EP along with the selected results of 
studies concerning ex ante evaluation of these criteria. 
Section 3 is devoted to the presentation of the considered 
case study problem. In Section 4 the main conclusions 
coming from the benchmarking data analysis are pointed 
out, while in Section 5 the effectiveness and efficiency 
factors for the recommended BSS D&EP variant are 
analyzed. Finally, in Section 6 the author draws conclusions 
and some open lines about future work on the usefulness of 
benchmarking data, not only in the context of rationalization 
of BSS D&EP investment decision. 
II. 
RATIONAL INVESTMENT DECISION CRITERIA FOR 
BUSINESS SOFTWARE SYSTEMS DEVELOPMENT AND 
ENHANCEMENT PROJECTS 
Each rational investment decision should meet three 
criteria, which in the context of BSS D&EP should be 
interpreted as follows: 
• 
Criterion of consistency, which means that the 
project 
undertaken 
should 
comply 
with 
the 
environment (economic, organizational, legal and 
cultural) – unlike the other two criteria, this criterion 
is not subject to quantitative assessment therefore it 
is skipped in this paper.  
• 
Criterion of economic efficiency, meaning that the 
decision should benefit to the maximisation of the 
relationship between the effects to be gained as a 
result of project execution and the costs being 
estimated for the project.  
• 
Criterion of effectiveness, meaning that such 
decision should contribute to achieving the assumed 
result, in the case of BSS D&EP usually being 
considered as delivering product meeting client’s 
requirements with regard to functions and features 
without budget and time overruns.  
Generally speaking, in the case of economic efficiency 
evaluation, effects are compared against costs necessary to 
achieve these effects while in the case of effectiveness 
evaluation these are only the results that are of significance. 
Thus, economic efficiency is measured by relating total 
effects to total costs. Meanwhile, effectiveness is measured 
by the ratio of the achieved result to the assumed result, 
which is being conveniently expressed as a percentage.  
Both 
economic efficiency 
criterion 
as 
well 
as 
effectiveness criterion are based on the obvious assumption 
that the effects, costs and results are measurable. However, 
in the case of BSS D&EP this assumption is often treated as 
controversial. Numerous studies indicate that evaluation of 
BSS D&EP economic efficiency is made relatively rarely 
while fundamental reason for this status quo are difficulties 
related to identification, and most of all quantitative 
expression, of benefits resulting from the execution of such 
projects (see e.g., [16], [17], [18], [19], [20]). These studies 
reveal that difficulties related to identification and 

193
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
quantitative expression of BSS D&EP costs too are of 
significance, which also is of importance to the evaluation 
of their effectiveness.  
Key conclusions coming from the above mentioned 
studies have also been confirmed by the results of studies 
carried out by the author of this paper in two research cycles 
among Polish dedicated BSS providers (for more details see 
[21]). They revealed that at the turn of the years 2005/2006 
the results obtained with the use of the effort estimation 
methods, employed only by approx. 45% of the respondents, 
were designed for estimating BSS D&EP costs and time 
frame while relatively rarely they were used to estimate 
economic efficiency − such use of these methods was 
indicated by only 25% of those using effort estimation 
methods. Heads of IT departments in Polish companies, for 
which BSS D&EP are executed, still explain the 
sporadically required calculation of this type of investments 
efficiency mostly by the necessity to undertake them – most 
often due to the fact that without such solutions they lack 
possibility to match competition from foreign companies, as 
well as to match foreign business partners requirements. 
While Polish public administration institutions in practice 
still do not see the need for the BSS D&EP economic 
efficiency evaluation, in most cases as an argument giving 
the non-economic purposes of systems being implemented 
in this type of organizations. On the other hand, at the turn 
of the years 2008/2009 the results obtained with the use of 
the BSS D&EP effort estimation methods (approx. 53% of 
BSS providers surveyed in this cycle declared they 
commonly employed such methods) were more often used 
to estimate efficiency: there was an increase to approx. 36% 
of those using effort estimation methods. This applies to 
internal IT departments of Polish companies yet still it does 
not comprise public administration institutions. This 
increase may be explained first of all by stronger care about 
financial means in the times of recession, however it still 
leaves a lot to be desired. Meanwhile, to rationalize various 
BSS D&EP investment decisions, one may successfully use 
benchmarking data, having been collected in special 
repositories with intention to support effective and efficient 
execution of such projects. 
III. 
CASE STUDY: DESCRIPTION OF THE PROBLEM 
A company that was facing the need to choose an 
appropriate variant of BSS D&EP execution collects and 
processes, as a part of its basic activity, orders for certain 
goods from all over the world in a 24-hour mode, 7 days a 
week through: website, client service centres, fax and 
electronic mail (description of the case study taken from 
[22]). All those channels cooperate with the application, 
having been functioning in the company for a dozen or so 
years already, designed for orders processing and which is 
no longer able to satisfy present requirements since:  
• 
Large part of processes is not automated, which 
requires additional work for registering orders and 
that generates losses. 
• 
Current status of orders is not known therefore they 
are being lost; as a result of this other losses are also 
borne, which together with earlier mentioned losses 
are estimated to be approx. USD 5000 a day.    
• 
System is expensive and difficult to maintain, with 
frequent malfunctions as it employs obsolete 
technology. 
• 
System extends the time of delivering new products 
to the market, increases the risk of losing clients and 
lack of compliance with their requirements, slows 
down the growth of competitive advantage. 
Thus, the company has faced a decision on choosing 
variant of BSS D&EP execution that would:  
• 
Eliminate the above mentioned drawbacks of the 
existing solution.   
• 
Contribute to short- and long-term profits – that’s 
why the costs and duration of project are of great 
significance. 
• 
Reduce the costs of functioning of both company 
and technology. 
• 
Contribute to the reduction of risk, both in terms of 
business and technology.   
Offers for each BSS D&EP variant were submitted, 
having approximate average values as shown in Table I.  
Since each variant was backed by certain part of the 
board and key users, an analysis aimed at supporting 
decision-making process was carried out.  
IV. 
CONCLUSIONS FROM THE BENCHMARKING DATA 
ANALYSIS 
The analysis used benchmarking data for BSS D&EP 
having been collected in the following repositories:  
• 
Standish Group, featuring data about over 70 
thousands of the accomplished application software 
D&EP, which were analysed using the tool called 
VirtualADVISOR [22]. 
• 
Software Productivity Research (SPR), containing 
data from approx. 15 thousands of the accomplished 
application software D&EP, which were used to 
verify conclusions coming from Standish Group 
repository analysis with the use of SPR Knowledge 
Plan tool [23]. 
TABLE I.  PARAMETERS OF OFFERS CONCERNING 
EXECUTION OF PARTICULAR VARIANTS OF BSS D&EP 
CONSIDERED 
Variant 
BSS D&EP variant 
Execution 
cost 
offered 
Execution 
time 
offered 
1 
Development of new 
BSS from scratch 
using modern 
technologies  
USD 10 
million  
3 years 
2 
Customization of BSS 
purchased 
USD 5 
million 
2 years 
3 
Modernization of BSS 
used currently 
USD 3,5 
million 
1,5 years 
Source: Author’s analysis based on [22, p. 2].  

194
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
• 
International Software Benchmarking Standards 
Group (ISBSG), having collected data from approx. 
5 thousands of the accomplished application 
software D&EP [24], also used to verify findings 
coming from Standish Group repository analysis and 
also with the use of SPR Knowledge Plan tool, 
which at its present version offers possibility to 
import data from the ISBSG repository. 
Priority was given to the Standish Group data and this 
being not only due to the size of this repository, objectivity 
of data (they come solely from clients) or the fact of IT 
branch appreciating its practical value [10] but also because 
they take into account an appropriate kind of client (in terms 
of branch and size of a company), appropriate kinds and size 
of BSS D&EP as well as appropriate type and size of 
application. Thus, using the Standish Group repository made 
it possible to match all three kinds of BSS D&EP against the 
profile, with 90% match of the 120 attributes of more than 
100 projects [22].  
What is also important, in their analyses the Standish 
Group 
employ 
clearly 
defined 
criteria 
of 
project 
classification, dividing projects into the following three 
groups  (see e.g., [3], [11], [25]):  
• 
Successful projects – that is projects completed with 
delivery of product having functions and features 
being in accordance with client requirements 
specification and within the estimated time and 
budget.  
• 
Challenged projects – that is projects completed with 
delivery of product that is operating yet has fewer 
vital functions/features comparing to the client 
requirements specification and/or with overrun of the 
planned budget and/or duration.  
• 
Failed projects – that is projects that were abandoned 
(cancelled) at some point of their life cycle or were 
completed with delivery of product that had never 
been used. 
The Standish Group conducts its researches mostly from 
the point of view of the so-called success coefficient, which 
describes the share of successful projects in the total number 
of analysed projects completed during given year. What 
represents counterbalance to the projects comprised by the 
success coefficient are projects that ended with total or 
partial failure, i.e., failed and challenged projects. In case of 
challenged projects, this is also degree of fitness of the 
delivered product to the functions and features required by a 
client. Since the mid-1990s these numbers have shaped as 
shown in Table  II. 
In the analysis of the Standish Group data, the following 
criteria were employed as equivalent for particular variants 
of the BSS D&EP considered:  
1) 
Criterion of expected BSS D&EP effectiveness, 
including:  
a) chance to succeed  
b) level of planned costs overrun  
           c) level of planned duration overrun. 
2) 
Criterion of expected BSS D&EP efficiency, 
including:  
     a) return on investment (ROI) 
           b) payback period. 
 
TABLE II. AVARAGE EFFECTIVENESS OF APPLICATION 
SOFTWARE D&EP EXECUTION OVER 1994-2010 
Data 
for 
Success 
coefficient 
(in %) 
Partial 
failure 
(in %) 
Total 
failure 
(in %) 
Partial and 
total failure 
(in %) 
1994 
16 
53 
31 
84 
1996 
27 
33 
40 
73 
1998 
26 
46 
28 
74 
2000 
28 
49 
23 
72 
2002 
34 
51 
15 
66 
2004 
29 
53 
18 
71 
2006 
35 
46 
19 
65 
2008 
32 
44 
24 
68 
2010 
37 
42 
21 
63 
Source: [2] and [3]. 
Data presented in Table III clearly indicate that in the 
case being considered the highest chance to succeed is held 
by modernization variant, for which success coefficient is 
several times higher than that characteristic of variant 
consisting in development of new application, being only 
4% (sic!), and significantly higher than that of COTS 
customization variant. Also in case of variant 3 the lowest 
percentage of projects ends with being abandoned – it is 
several times lower than in case of variant 1 and two times 
lower than in case of variant 2. What seems interesting, the 
highest percentage of projects that ended in partial failure 
(challenged projects) occurs in case of the customization of 
COTS application. What is more, the average expected 
overrun of both costs (see Table IV) and project duration 
(see Table V) is also the highest in case of this project 
variant.  
 
Moreover, data in Table IV clearly indicate that the 
average expected overrun of the planned costs for projects 
that ended in partial failure too is the lowest in case of 
variant 3. Also the lowest percentage of such projects 
overruns the costs by more than 50%. If offered costs and 
average expected overrun of these costs are taken into 
consideration when calculating the expected cost then it 
appears evident that the lowest expected cost of project 
execution applies to modernization variant.  
TABLE III. EXPECTED CHANCE TO SUCCEED FOR 
PARTICULAR VARIANTS OF BSS D&EP CONSIDERED 
Resolution 
Variant 1 
Variant 2 
Variant 3 
Successful 
4% 
30% 
53% 
Challenged 
47% 
54% 
39% 
Failed 
49% 
16% 
8% 
Source: [22, p. 4].  

195
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Analogous conclusions may be drawn on the basis of the 
analysis of data presented in Table V. Again, the average 
expected overrun of the planned duration for projects that 
ended in partial failure proves being the lowest for variant 3. 
Also the lowest percentage of such projects overruns the 
duration by more than 50%. If we take into account the 
offered duration and average expected overrun of this 
duration then we can see that the lowest expected duration 
of project execution applies to modernization variant too.  
 
TABLE V. EXPECTED LEVEL OF PLANNED DURATION 
OVERRUN FOR PARTICULAR VARIANTS OF BSS D&EP 
CONSIDERED (CHALLENGED PROJECTS) 
Duration 
overrun 
Variant 1 
Variant 2 
Variant 3 
0% to 50% 
57% 
59% 
80% 
51% to 50% 
43% 
41% 
20% 
Average  
44% 
45% 
29% 
Offered 
duration 
36 months 
24 months 
18 months 
Estimated 
duration 
52 months 
35 months 
23,5 months 
Source: Author’s analysis based on [22, p. 4].  
 
Data shown in Table VI clearly indicate that the highest 
percentage of projects characterised by the highest ROI can 
be found in case of variant 3 again.  On the other hand, what 
is interesting is that projects with average ROI most often 
are projects consisting in developing new application from 
scratch while the lowest percentage of projects characterised 
by the lowest ROI can be found in case of customization 
variant.  
 
TABLE VI. EXPECTED ROI FOR PARTICULAR VARIANTS OF 
BSS D&EP CONSIDERED  
ROI 
Variant 1 
Variant 2 
Variant 3 
High 
11% 
34% 
52% 
Average 
66% 
57% 
37% 
Low 
23% 
9% 
11% 
Source: [22, p. 5].  
 
In Table VII both ROI and payback period for particular 
variants of the considered project were estimated in 
optimistic and pessimistic version. In the optimistic version 
it was assumed that the costs were identical with the offered 
costs while in the pessimistic version - that the costs were 
exceeded by the average values being expected for each 
variant analysed (see Table IV). Based on these 
assumptions, both in optimistic and in pessimistic version, 
the highest 5-year gain applies to the modernization variant; 
also in case of that variant the payback period proves the 
shortest. It is worth noting that project in variant consisting 
in developing the new application would pay off after nearly 
5 and half years in the optimistic version and after nearly 7 
and half years in the pessimistic version.  
 
TABLE VII. EXPECTED ROI AND PAYBACK PERIOD FOR 
PARTICULAR VARIANTS OF BSS D&EP CONSIDERED  
 
Optimistic version 
Pessimistic version 
Variant 
Costs 
(in $ 
millions) 
5-year 
gain 
(in $ 
millions) 
Payback 
period 
(in 
years) 
Costs 
(in $ 
millions) 
5-year 
gain 
(in $ 
millions) 
Payback 
period 
(in 
years) 
1 
10 
0 
5,4 
14,4 
0 
7,3 
2 
5 
7,25 
3,2 
7,35 
2,8 
4,4 
3 
3,5 
10,6 
2,4 
4,69 
7,9 
3,1 
Source: Author’s analysis based on [22, p. 5].  
 
The above analysis clearly indicates that what in the 
considered case would be the best of the three BSS D&EP 
variants both from the perspective of the expected 
effectiveness and from the perspective of the expected 
efficiency is variant consisting in modernization of the 
application being used (variant 3).  
V. 
THE EFFECTIVENESS AND EFFICIENCY FACTORS FOR 
THE RECOMMENDED VARIANT 
In the analysed case, BSS D&EP consisting in 
modernization of application being used proves the most 
effective as well as the most efficient, what results, among 
others, from (see also [22]):  
• 
Undertaking of such projects as a rule is a result of 
clearly defined needs of users therefore their goals 
are comprehensible, what undoubtedly promotes 
users’ engagement in the project and the board’s 
support for the project, which, according to the list of 
success factors having been developed by the 
Standish Group since 1995, are still the two most 
important success factors [25].  
• 
The fact that modernization projects do not require 
extensive analysis of requirements, numerous 
agreements, long-time training, changes of processes 
that would be destabilizing the work. 
• 
Commonness of such projects thus, the skills of 
executing them are high; what is more, projects of 
this type do not require additional skills in terms of 
project management, they rather require technical, 
the so called „hard”, skills. 
• 
Present structure of project costs in terms of 
development activities, which due to the increased 
complexity of projects and ever more developed 
tools has changed and is now in inverse proportion 
TABLE IV. EXPECTED LEVEL OF PLANNED COST OVERRUN 
FOR PARTICULAR VARIANTS OF BSS D&EP CONSIDERED 
(CHALLENGED PROJECTS) 
Cost overrun 
Variant 1 
Variant 2 
Variant 
3 
0% to 50% 
64% 
58% 
75% 
51% to 50% 
36% 
42% 
25% 
Average  
44% 
47% 
34% 
Offered cost 
USD 10 
million 
USD 5 
million 
USD 3,5 
million 
Estimated cost  
USD 14,4 
million 
USD 7,35 
million 
USD 4,7 
million 
Source: Author’s analysis based on [22, p. 4].  

196
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
to the structure as it was 25 years ago: now 
programming costs make up approx. 20% while 
other development works make up approx. 80% of 
the total cost.  
• 
The 
fact 
that 
modernization 
projects 
are 
characterised by the lowest hidden cost (mainly 
user’s time), estimated to be 15% of project costs 
versus 55% for variant 2 and versus 35% for variant 
1. 
• 
The discussed projects do not have redundant 
requirements – as this is the case of the COTS 
customization where, according to the Standish 
Group data, less than 5% (sic!) of the features and 
functions get used [22], and of the development of 
new products (see Figure 1).  
 
 
Figure 1.   Average use of functions and features in the 
implemented software systems - custom development applications 
Source: Author’s analysis based on [22, p. 15]. 
• 
Products smaller than those in case of developing 
application from scratch are developed as a result of 
the modernization projects and this is what increases 
their chance to succeed. Smaller products are usually 
delivered as a result of smaller projects. 
• 
The discussed projects may be successfully carried 
out using agile approach, which also ranks high in 
the current list of Standish Group success factors 
[25]. The main objective of agile models is to 
quickly develop software that would be working 
correctly and this being thanks to focusing on strictly 
construction activities and keeping other activities 
down to a minimum, and not methodologically 
correct execution of that process instead [26]. Agile 
models were mostly developed for small and 
medium projects and they are used in rather small 
teams wherein there is no communication problem. 
They also require diverse and extensive knowledge 
and experience of the team members, and stable 
teams, located and working in one place throughout 
the project. Permanent accessibility of client’s 
representatives is also necessary. The Software 
Productivity Research study found that in the area of 
construction models usage there are some trends 
associated with industries and forms of software, 
e.g., business software systems and web applications 
are more likely to use agile models than are systems 
software projects and military projects [27, pp. 6-7]. 
As far as the two last mentioned factors are concerned, it 
should be stressed that according to the analyses of Standish 
Group [11, p. 4], Software Productivity Research [28], and 
ISBSG [29, p. 2] this is minimisation of project size, first of 
all caused by the agile models having been used more and 
more often over time, that is responsible for the improvement 
of the application software D&EP effectiveness over 1994-
2010: during that time the success coefficient has increased 
from 16% to 37% as both partial and total failure have 
decreased (see Table II). Failure to deliver functions and 
features required by a client also decreased (from 40% to 
32%), as did the planned time overrun (from 164% to 79% - 
more than doubly) as well as planned budget overrun (from 
180% to 55% - over three times) ([2], [14]). Thus, the losses 
resulting from the low scale of application D&EP 
effectiveness have shrunk considerably: from approx. USD 
140 million to approx. USD 55 million, which accounts for 
the decrease of loss level from approx. 55% of the means 
invested in considered projects to approx. 20-25% of such 
means. Conclusion on the positive influence of the project 
sizes minimisation on their effectiveness gets confirmed by 
the data shown in Tables VIII and IX. 
 
TABLE VIII. THE EFFECTIVENESS OF APPLICATION SOFTWARE 
D&EP EXECUTION BY PROJECT SIZE  
Project size – 
measured by the 
work cost  
(in USD millions) 
Success 
coefficient 
(in %) 
Partial  
failure 
(in %) 
Total 
 failure 
(in %) 
Over 10  
0 
11 
19 
6 – 10 
6 
20 
28 
3 – 6 
13 
36 
39 
0,75 – 3 
19 
18 
8 
Under 0,75 
62 
15 
5 
Total 
100 
100 
100 
Source: [25, p. 21]. 
As it may be seen in Table VIII, over 80% of the 
successful projects demonstrate having work cost up to USD 
3 million whereas the work cost in nearly 20% of such 
projects ranges from USD 3 to 10 million. On the other hand, 
data in Table IX indicate that for application D&EP costing 
below USD 750 000, the chance to succeed is as high as 71% 
while for projects having work cost over USD 10 million it is 
barely 2%. 
Meanwhile, comparison of the effectiveness of projects 
execution using agile models versus that using waterfall 
model (see Table X) leads to the conclusion that in case of 
agile projects the success coefficient is significantly higher 
yet still far from being regarded as satisfactory – even if we 
take into account that in this case it is above the average 
success coefficient. Partial failure too is lower in case of 
agile approach, however it almost equals its average value. 
Also, what definitely is worth pointing out is the fact that 
total failure both in case of agile and waterfall model is 
significantly lower than the average: for agile models – 
twice. In case of waterfall model smaller scale of total failure 
Always 
7% 
Often 
13% 
Rarely 
19% 
Never 
45% 
Sometimes 
16% 

197
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
does not have influence on increasing success coefficient but 
it does on increasing partial failure instead (such kind of 
failure, however, generates smaller losses than total failure 
does).   
TABLE IX. THE APPLICATION SOFTWARE D&EP SIZE BY THE 
PROJECT EXECUTION EFFECTIVENESS  
Project 
size – 
measured 
by the 
work cost  
(in USD 
millions) 
Success 
coefficient 
(in %) 
Partial  
failure 
(in %) 
Total 
 failure 
(in %) 
Total 
Over 10  
2 
50 
48 
100 
6 – 10 
11 
51 
38 
100 
3 – 6 
14 
54 
32 
100 
0,75 – 3 
38 
49 
13 
100 
Under 
0,75 
71 
24 
5 
100 
Source: [25, p. 30]. 
TABLE X. THE EFFECTIVENESS OF APPLICATION SOFTWARE 
D&EP EXECUTION – WATERFALL VS. AGILE MODEL  
Effectiveness 
Waterfall 
model 
Agile 
model 
Average 
in 2010  
Success coefficient 
(in %) 
26 
43 
37 
Partial failure (in %) 
59 
45 
42 
Total failure (in %) 
15 
12 
21 
Source: [2], [25, p. 21]. 
However, modernization variant recommended in the 
discussed case is not devoid of drawbacks though. Most of 
all, it evidently is not suitable for organizations where BSS 
had not functioned so far (in Poland approx. 95% of small 
companies do not use BSS – comparing to 50% in 
developed 
countries), 
for 
new 
organizations, 
new 
departments, and in case of fusion the modernization often 
ends in failure too. Moreover in modernization variant there 
are limited possibilities to implement fundamental business 
changes. What is more, the use of obsolete technologies is 
being continued, what makes cooperation with modern 
applications difficult, reduces usability, portability and 
maintainability of the modified application; performance is 
usually lower too. It is worth stressing that these attributes 
are the software product quality attributes of the ISO/IEC 
9126 norm [30]. Thus, what appears to be open to doubt is 
reduction of costs and difficulties in maintaining the system 
as well as technological risk - this being one of the major 
goals of the solution variant to be chosen (see Section 2). It 
is also worth mentioning that the ISBSG data indicate lower 
productivity of such projects: in case of BSS D&EP 
consisting in developing new BSS from scratch it ranges on 
average from 9 (for 4GL) to 24.5 (for 3GL) work hours for 
developing 
1 
function 
point 
whereas 
in 
case 
of 
modernization projects it takes approx. 27 work hours on 
average to develop 1 function point [31].  
VI. 
CONCLUSION AND FUTURE WORK 
Based on the analysis of benchmarking data coming 
from the Standish Group repository, having been carried out 
with the use of VirtualADVISOR tool, it was concluded that 
what proves the best among the three BSS D&EP variants in 
the discussed case is variant consisting in modernization of 
application being used. Data analysis indicates that choosing 
the above mentioned variant is rational due to the criterion 
of both expected effectiveness and expected efficiency of 
project. This conclusion has been confirmed by the 
verification based on the repository of the SPR and ISBSG 
data, having been carried out with the use of SPR 
Knowledge Plan tool.  
From the point of view of effectiveness and efficiency, 
modernization variant has many advantages yet it is not 
devoid of drawbacks though. What is more, this does not 
have to be the best solution in other cases, e.g., for real time 
systems, 
for 
small 
software 
product 
development/ 
enhancement projects, or for organizations that specialise in 
developing specific kind of new software systems where 
there is possibility to use the already written code.  It should 
be also mentioned that projects of higher risk, i.e., those 
having lower chance to succeed, often happen to be more 
efficient.  
As indicated by the study results discussed in this paper, 
in view of exceptionally low effectiveness of BSS D&EP it 
is necessary to rationalize investment decisions being made 
with regard to such projects. To do so one may successfully 
use ever richer resources of benchmarking data having been 
collected in repositories with intention to support effective 
and efficient BSS D&EP execution. In the opinion of T.C. 
Jones: "For many years the lack of readily available 
benchmark data blinded software developers and managers 
to the real economics of software.  Now (…) it is becoming 
possible to make solid business decisions about software 
development practices and their results (…). [Benchmarking 
– B.C.C.] data is a valuable asset for the software industry 
and for all companies that produce software" [32]. 
Appropriate benchmarking data most of all mean data 
pertaining to the type of software projects considered, being 
representative of this type. Undoubtedly the best solution is 
a situation when organizations use their own benchmarking 
data yet in practice it still happens that they rarely collect 
such data in a reliable and systematic manner, necessary to 
derive dependencies being specific to them. What reveals in 
this case is usefulness of repositories collecting general 
benchmarking data, created with improvement of software 
processes and products in mind. Repositories collecting 
general benchmarking data about software systems D&EP 
completed in the past include, apart from the information on 
mean values, also more precise data, dependent, among 
others, on the specificity of project and its product. Such 
repositories, which should be standardised according to the 
ISO/IEC 15939 norm [33], recent and representative of 
current technologies, may also support, among others (for 
more details see [15] and [34, pp. 3-4]): 
• 
Proper software systems D&EP planning through:  

198
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
– verification 
of 
the 
product 
requirements 
completeness,  
– early and reliable estimation of the product size 
as well as project effort, cost and time,  
– determining product size in a way so that it 
would ensure possibility of completing project 
on time and within the planned budget,  
– determining optimum size of project team,  
– finding balance among project attributes yet 
with priorities being taken into account (e.g., 
quality versus productivity),  
– considering the outsourcing option,  
– defining components of project environment,  
– determining the influence of the chosen 
development tools and methods on the project, 
– pricing of the product based on the cost per 
functional unit (i.e., function point - for more 
details see [12]). 
• 
Proper management of the project risk through the 
verification of estimates for the project attributes 
reliability. 
• 
Early and reliable control of project attributes 
throughout its accomplishment. 
• 
Evolution of software D&EP organizations through 
possibility of:  
– comparing characteristics typical of given 
organization 
with 
characteristics 
in 
organizations having similar business profile 
(e.g., insurance, manufacturing, banking),  
– building organizational own database on project 
productivity,  
– increasing productivity of project activities,  
– reducing “time to market”, that is reducing time 
of developing and launching new products to 
the market. 
On the other hand, this paper presented the possibility of 
using benchmarking data by a client in the rationalization of 
investment decision concerning the choice of the BSS 
D&EP execution variant, illustrated on the basis of a case 
study. Thanks to the rational investment decisions made on 
the basis of reliable and objective benchmarking data it is 
possible to reduce losses caused not only by abandoned 
projects but also by the large scale of overrunning the time 
and costs of BSS D&EP execution. 
Collecting and analysis of the benchmarking data 
concerning software projects most of all is aimed to 
discover and understand regularities applying to various 
projects of this type. It will be possible only on the 
condition that repositories containing benchmarking data 
about software projects will continue to be extended – with 
particular emphasis put on these projects, which are 
characterised by the exceptionally low effectiveness, i.e., 
business software systems development and enhancement 
projects. 
REFERENCES 
[1] 
B. Czarnacka-Chrobot, “Choosing a business software 
systems development and enhancement project variant on 
the basis of benchmarking data - case study”, Proc. of the 
6th International Conference on Software Engineering 
Advances (ICSEA 2011), 23-28 October 2011, Barcelona, 
Spain, Luigi Lavazza, Luis Fernandez-Sanz, Oleksandr 
Panchenko, Teemu Kanstrén, Eds., International Academy, 
Research, and Industry Association, Wilmington, Delaware, 
USA, 2011, pp. 453-458. 
[2] 
Standish 
Group, 
“CHAOS 
manifesto 
2011”, 
West 
Yarmouth, Massachusetts, 2011, pp. 1-48. 
[3] 
Standish Group, “CHAOS summary 2009”, West Yarmouth, 
Massachusetts, 2009, pp. 1-4. 
[4] 
B. Czarnacka-Chrobot, “The economic importance of 
business software systems size measurement”, Proc. of the 
5th International Multi-Conference on Computing in the 
Global Information Technology (ICCGI 2010), 20-25 
September 2010, Valencia, Spain,  M. Garcia, J-D. Mathias, 
Eds., IEEE Computer Society Conference Publishing 
Services, Los Alamitos, California-Washington-Tokyo, 
2010, pp. 293-299.  
[5] 
T. C. Jones, Patterns of software systems failure and 
success, International Thompson Computer Press, Boston, 
MA, 1995. 
[6] 
PCG, “2008 ERP report, topline results”, Panorama 
Consulting Group, Denver, 2008, pp. 1-2. 
[7] 
PCG, “2011 ERP report”, Panorama Consulting Group, 
Denver, 
2011, 
pp. 
1-15: 
http://panorama-
consulting.com/Documents/2011-ERP-Report.pdf 
(10.12.2012). 
[8] 
L. Tartanus and E. Kinczyk, “Projekty poza budżetem i 
harmonogramem” [“Projects going beyond budget and 
schedule”], 
Copmuterworld 
Poland, 
22.11.2011; 
http://www.computerworld.pl/artykuly/ 
377447/Projekty.poza.budzetem.i.harmonogramem.html?ut
m_source=mail&utm_campaign=newsletter%20-
%20Computerworld&utm_medium=Wiadomosci 
%20Computerworld%20(html) (26.11.2011). 
[9] 
T. C. Jones, “Software project management in the twenty-
first century”, Software Productivity Research, Burlington, 
1999. 
[10] J. Johnson, “CHAOS rising”, Proc. of 2nd Polish 
Conference on Information Systems Quality, Standish 
Group-Computerworld, 2005, pp. 1-52.  
[11] Standish Group, “CHAOS summary 2008”, West Yarmouth, 
Massachusetts, 2008, pp. 1-4. 
[12] B. Czarnacka-Chrobot, “The economic importance of 
business software systems development and enhancement 
projects functional assessment”, International Journal on 
Advances in Systems and Measurements, vol. 4, no 1&2, 
International Academy, Research, and Industry Association, 
Wilmington, Delaware, USA, 2011, pp. 135-146. 
[13] Economist Intelligence Unit, “Global survey reveals late IT 
projects linked to lower profits, poor business outcomes”, 
Palo 
Alto, 
California, 
2007: 
http://www.hp.com/hpinfo/newsroom/press/2007/070605xa.
html (10.12.2012). 

199
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[14] Standish Group, “The CHAOS report (1994)”, West 
Yarmouth, 
Massachusetts, 
1995; 
http://www.ics-
support.com/download/StandishGroup_CHAOSReport.pdf 
(10.12.2012). 
[15] B. Czarnacka-Chrobot, “The role of benchmarking data in 
the software development and enhancement projects effort 
planning”, in New Trends in Software Methodologies, Tools 
and Techniques, Proc. of the 8th International Conference 
SOMET’2009, H. Fujita, V. Marik,  Eds., Frontiers in 
Artificial Intelligence and Applications, vol. 199, IOS Press, 
Amsterdam-Berlin-Tokyo-Washington, 2009, pp. 106-127. 
[16] A. Brown, “IS evaluation in practice”, The Electronic 
Journal Information Systems Evaluation, vol. 8, no. 3, 2005, 
pp. 169–178. 
[17] E. Frisk and A. Plantén, “IT investment evaluation – a 
survey of perceptions among managers in Sweden”, Proc. of 
the 11th European Conference on Information Technology 
Evaluation, Academic Conferences, 2004, pp. 145–154. 
[18] Z. Irani and P. Love, “Information systems evaluation: past, 
present and future”, European Journal of Information 
Systems, vol. 10, no. 4, 2001, pp. 183–188. 
[19] S. Jones and J. Hughes, “Understanding IS evaluation as a 
complex social process: a case study of a UK local 
authority”, European Journal of Information Systems, vol. 
10, no. 4, 2001, pp. 189–203. 
[20] A. J. Silvius, “Does ROI matter? Insights into the true 
business value of IT”, The Electronic Journal Information 
Systems Evaluation, vol. 9, issue 2, 2006, pp. 93–104. 
[21] B. Czarnacka-Chrobot, “Analysis of the functional size 
measurement methods usage by Polish business software 
systems providers”, in Software Process and Product 
Measurement, A. Abran, R. Braungarten, R. Dumke, J. 
Cuadrado-Gallego, J. Brunekreef, Eds., Proc. of the 3rd 
International Conference IWSM/Mensura 2009, Lecture 
Notes in Computer Science, vol. 5891, Springer-Verlag, 
Berlin-Heidelberg, 2009, pp. 17–34.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
[22] Standish Group, “Modernization – clearing a pathway to 
success”, West Yarmouth, Massachusetts, 2010, pp. 1-16. 
[23] Software Productivity Research: http://www.spr.com/ spr-
knowledgeplanr.html (10.12.2012). 
[24] ISBSG, “Data demographics release 11”, International 
Software Benchmarking Standards Group, Hawthorn, 
Australia, June 2009, pp. 1-24. 
[25] Standish Group, “The CHAOS manifesto”, West Yarmouth, 
Massachusetts, 2009, pp. 1-54. 
[26] M. Cohn, Agile estimating and planning, Prentice Hall 
Professional Technical Reference, Upper Saddle River, NJ, 
2006. 
[27] ISBSG, “Techniques & tools – their impact on projects”, 
International Software Benchmarking Standards Group, 
Hawthorn, Australia, 2010, pp. 1-7. 
[28] T.C. Jones, Applied software measurement: global analysis 
of productivity and quality, 3rd edition, McGraw-Hill 
Osborne Media, 2008. 
[29] ISBSG, “Software project characteristics or events that 
might impact development productivity”, International 
Software Benchmarking Standards Group, Hawthorn, 
Australia, 2007, pp. 1-2. 
[30] ISO/IEC 9126 Software Engineering – Product Quality – 
Part 1-4, ISO, Geneva, 2001-2004.  
[31] Ch. Symons, “The performance of real-time, business 
application and component software projects”, Common 
Software 
Measurement 
International 
Consortium 
(COSMIC) and ISBSG, September 2009, pp. 1-45. 
[32] ISBSG: http://www.isbsg.org (10.12.2012). 
[33] ISO/IEC 15939 Systems and software engineering -- 
Measurement process, ISO, Geneva, 2007. 
[34] Practical Project Estimation (2nd edition): A toolkit for 
estimating software development effort and duration, P.R. 
Hill, Ed., International Software Benchmarking Standards 
Group, Hawthorn,  Australia, 2005. 
 
 
 

