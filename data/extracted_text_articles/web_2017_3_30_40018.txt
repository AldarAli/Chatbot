ModRef Project: from Creation to Exploitation of CIDOC-CRM Triplestores
Pascaline Tchienehom
Universit´e de Paris 10 - Labex ”Les pass´es dans le pr´esent”
Nanterre, France
Email: pkenfack@u-paris10.fr
Abstract—ModRef is a project from the laboratory Labex ”Les
pass´es dans le pr´esent”, which coordinates various projects on
digital humanities. ModRef focuses more precisely on the seman-
tic web and linked open data. The goal is to move heterogeneous
data into triplestores also called data warehouses or collections of
RDF ﬁles in order to improve the sharing, exchange and discovery
of new knowledge. For this purpose, the CIDOC-CRM norm
has been chosen since it is, at present, the reference for the
semantic description of museographic data or cultural heritage
data. In order to realise the proof of concept of ModRef, a general
architecture has been deﬁned, a semantic modelling and data
mapping of selected sub-projects of ModRef have been proposed,
triplestores have also been created. A web application has been
implemented and deployed. This web application describes the
ModRef project, as well as it enables visualising, querying and
exploring created triplestores.
Keywords–Digital Humanities; Semantic Web; Linked Open
Data; Triplestores; CIDOC-CRM.
I.
INTRODUCTION
The laboratory Labex ”Les pass´es dans le pr´esent” accom-
panies several projects in Social and Human Sciences (SHS) on
issues related to digital humanities [1]: from dematerialisation
of data to their structural description and even to their seman-
tic description as well. ModRef (Modelling, References and
Digital Culture) is a project from Labex that gather together
a set of sub-projects with the goal of migrating their data
into triplestores or data warehouses or collections of RDF
(Resource Description Framework) ﬁles in order to improve
the sharing, exchange and discovery of new knowledge. For
this purpose, the CIDOC-CRM (International Committee for
DOCumentation-Conceptual Reference Model) norm [2] has
been chosen because it is currently the reference for the
semantic description of museographic data or cultural heritage
data [3]. The aim is globally to move from non-structured or
semi-structured data to structured data and afterwards from
structured data to semantic data. The semantic web then
provides a solution to perform these data migrations.
The semantic web [4][5] is not only a concept but also
an architecture [6], which is increasingly used in several
applications. The semantic web architecture is a set of inde-
pendant layers that collaborate to perform various tasks. This
architecture describes data from their representation to their
exploitation by applications or semantic web agents. Hence,
various norms of data representation exist. The CIDOC-CRM
is an example of semantic norm and more precisely a con-
ceptual reference model. The aim of semantics and also the
aim of the various metadata languages or semantic norms
that deﬁne semantics is to provide an homogenous framework
for representing and querying heterogenous data in order to
reduce information silence and therefore improve the discovery
of knowledge. Hence, ModRef project aims at realising a
migration of data towards CIDOC-CRM triplestores using
core data originally from heterogenous data sources where
heterogeneity is based on contents and initial logical structure
(spreadsheets, relational databases, XML ﬁles) as well.
In this paper, we present the ModRef project through: a
general description of the CIDOC-CRM norm, in section 2;
the general architecture of the ModRef project, in section 3; a
CIDOC-CRM semantic modelling and data mapping of the
three pilot sub-projects of ModRef with the CIDOC-CRM
graph, in section 4; a migration of data into CIDOC-CRM
triplestores, in section 5; a visualisation and exploitation of
triplestores through the web application [7] that has been de-
velopped and deployed, in section 6; the evaluation procedure
and results, in section 7.
II.
CIDOC-CRM GENERAL PRESENTATION
There are various data representation models based on
semantics [8][9] that use metadata languages to describe con-
cepts and/or links (properties or predicates) between concepts
or instances of concepts (Dublin Core, RDF, RDFS, OWL,
FOAF, Wordnet, CIDOC-CRM). The CIDOC-CRM [2] is a
conceptual reference model for describing museographic data
or cultural heritage data. The version of the CIDOC-CRM
norm that we have worked with is the version 6.2 of may
2015. It describes 94 classes and 168 properties. In 2006, the
CIDOC-CRM has become a norm ISO 21127:2006 but work
on that norm has started since 1996. This norm describes gen-
eral characteristics of objects (identiﬁer, type, title, material,
dimension, note) but also history of objects through events
or activities (transfer of custody -former localisations, current
localisation-, origin, discovery, curation, attribute assignement,
measurement), as well as relations between objects or parts
of objects (bibliography, composition, similarity, other repre-
sentation -photo, drawing, painting-, inscription). An OWL
implementation of the CIDOC-CRM by the University of
Erlangen-Nuremberg is available [10] and the namespace of
that implementation of CIDOC-CRM is usually preﬁxed by
”ecrm”.
The general structure of the CIDOC-CRM is described in
Figure 1. The root class of all CIDOC-CRM entities is the
class E1 CRM Entity and it is subdivided in direct sub-classes,
among which the two main classes are:
1)
E77 Persistent Item, which is the generic class of
persistent entities. A persistent entity is an entity
that can survive over an indeterminate time, such as:
52
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

Figure 1. General Structure of CIDOC-CRM Entities.
persons, objects, ideas, concepts. Those entities can
have a beginning or an end of existence;
2)
E2 Temporal Entity, which is the generic class of
temporal entities. A temporal entity is an entity
bounded by time (with a beginning and an end
time), such as: event, beginning of existence, end of
existence, activity, creation, production, modiﬁcation,
transfer of custody, curation, attribute assignement,
measurement.
The other direct sub-classes of the root class E1 CRM
Entity are the classes E52 Time-Span, E53 Place, E54 Di-
mension, E92 Spacetime Volume. In general, the CIDOC-CRM
describes entities but also interactions that can exist between
entities: interactions between persistent entities; interactions
between temporal entities; interactions between persistent and
temporal entities; general interactions between entities (for
instance, interactions that exist between persistent or temporal
entities and other general entities describing time-span, place,
dimension). There also exists interactions between entities and
primitive values (string, number, date time).
Besides, various projects around the world work on the
migration of data into triplestores (CIDOC-CRM or not):
1)
The British Museum [11], which is a museum on
history and culture and that uses the CIDOC-CRM;
2)
Arches [12], which is a collaboration between the
Getty Conservation Institute (GCI) and the World
Monuments Fund (WMF) on immovable cultural her-
itage (monuments, bridges) and that uses the CIDOC-
CRM;
3)
DBPedia [13], which is an online encyclopedia
widely used [14] and that does not use the CIDOC-
CRM norm but various metadata languages, such as:
dbpedia, foaf, umbel, schema.org, dublin core, geo;
4)
Nakala [15], which is an online service to upload,
document and exhibit (museographic) data and that
does not use the CIDOC-CRM norm but various
metadata languages, such as: foaf, skos, dublin core,
vcard.
The speciﬁcity of our web application is that it deals
with heterogeneous data sources according to the contents
and the logical structures (spreadsheets, relational databases,
XML ﬁles) of data. Data migrated into triplestores are opened
through our web application. This application provides a visu-
alisation service of triplestores under three differents formats:
rdf, triples, attribute-value summary. The web application also
allows querying triplestores seperately or together by using
Figure 2. Architecture of ModRef project.
”Endpoint Sparql” (interface for typing and executing Sparql
query, where Sparql is a querying language for RDF ﬁles)
and general query forms that are useful for those who do not
know the Sparql query language [16] and the CIDOC-CRM
language.
III.
ARCHITECTURE OF THE MODREF PROJECT
The architecture of the ModRef project, illustrated in
Figure 2, describes the various processes of data digitisation
from the creation of digital data based on an expert knowledge
for instance to the visualisation and querying of data by
a user. Data can go through several transformations before
being available in triplestores. Hence, we can move from non-
structured or semi-structured data (notes, reports, books, web
sites) to structured data described by logical structure. This
logical structure can be a ﬂat structure of the form attribute-
value or spreadsheet, but it can also be more structured using
relational databases or XML ﬁles that are, in our context,
XML-EAD (Encoded Archival Description) ﬁles [17]. These
various descriptions usually make use of thesaurus (controlled
vocabulary of descriptive terms or not). From those structural
descriptions, we can build a semantic description of data with
a semantic RDF graph which relies on standards or norms. In
our context, we have used the CIDOC-CRM norm to generate
triplestores through a mapping between data and the CIDOC-
CRM graph. These triplestores can then be used by semantic
web applications or ”Endpoint Sparql”. The ﬁrst stage of data
transformation (from non-structured or semi-structured data
towards structured data) is performed within each sub-project
of ModRef whereas ModRef project itself focuses more on the
second stage of data transformation (from structured data to
semantic data).
Therefore, to realise the proof of concept (POC) of Mod-
Ref, three pilot projects have been selected:
1)
CDLI (Cuneiform Digital Library Initiative): Digital
museum on antique documents in cuneiform writing
[18];
2)
ObjMythArcheo: corpus of antique archaeological ob-
jects with mythological iconography [19];
3)
BiblioNum: Digital library on history of France dur-
ing the 20th century [20].
Table I compares data of the three pilot projects of ModRef
based on 5 criteria: descriptive texts size, number of objects,
logical structure type, number of elements of the logical
structure and data description language.
53
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

TABLE I. DATA COMPARISON.
CDLI
ObjMythArcheo
BiblioNum
Texts size
300 Mo
100 Mo
100 Mo
Number of objects
313 332 objects
17 424 objects
77 collections -
62 392 ﬁles
Logical
Database of
Relational
XML-EAD
Structure
type Spreadsheet
Database
Number of elements
1 table
59 tables
146 XML-EAD
of the structure
with 61 attributes
elements
Language
English
French-English
French
IV.
MODREF CIDOC-CRM MODELLING AND DATA
MAPPING
We have identiﬁed the useful CIDOC-CRM classes, for
which at least one path leads to a non-null value, for the data
modelling of our three pilot projects. This modelling represents
extracts related to the four following themes or subjects:
1)
general characteristics of objects (identiﬁer, type,
title, material, dimension, note or description), bib-
liography, composition and similarity of objects;
2)
events of beginning of existence (origin) and end of
existence;
3)
miscellaneous activities (transfer of custody, attribute
assignement, measurement);
4)
inscriptions and other representations (photo, draw-
ing, painting).
In general, those extracts are constant because with the
CIDOC-CRM, it is possible to identify all potential paths
that lead to a given information. A semantic graph is thus
a set of nodes and oriented arrows that fulﬁll some constraints
and rules (shortcut, entailment, inverse). These constraints and
rules deﬁne the consistency and validity of the model.
In the following sections, we will describe the four different
themes (graph’s extracts) for the CIDOC-CRM modelling of
our pilot projects and also an instance of data mapping with
the corresponding CIDOC-CRM semantic graph snippet. Note
that the mapping or alignment principle is globally the same
for all themes and for all pilot projects.
A. Modelling of general characteristics
General characteristics of an object is deﬁned more often
by interactions through short graph’s paths. Those charac-
teristics describe for an object various information, such as:
identiﬁer, type (categorisation), title, material, dimension, note
or general description.
The modelling of the general characteristics of objects of
the ModRef project is illustrated in Figure 3. In this ﬁgure,
there are two different graph’s paths for deﬁning the dimension
of an object:
1)
a short path or shortcut path that links class E70
Thing to class E54 Dimension with the property P43
has dimension by the triple [E70 Thing, P43 has
dimension, E54 Dimension];
2)
a long path with more nodes to ﬁll. This path is
described by the following triples: [E1 CRM Entity,
P39i was measured by, E16 Measurement], [E16
Measurement, P40 observed dimension, E54 Dimen-
sion]. With this path, we can ﬁll more information
related to the activity of measurement E16 Measure-
ment. Actually, the class E16 Measurement is a type
of activity because classes E13 Attribute Assignment,
E7 Activity and E5 Event belong to its hierarchy (see
Figure 4).
Besides, it is authorised to ﬁll various paths leading to
the same information in a CIDOC-CRM graph. Therefore, we
sometimes have to choose between the different possibilities
when we do not have the necessary information to describe a
given path. This is the case mostly when a temporal entity is
used in the path.
On the other hand, Figure 3 also illustrates other interac-
tions between persistent entities, such as: P70i is documented
in for bibliographic references, P46 is composed of for objects
composition, P130 shows features of for objects similarity,
P128 carries for relation between an object and an entity
carried by or engraved on the described object, such as an
inscription for example.
B. Modelling of events of beginning and end of existence
An important activity on museographic data is the de-
scription of their origin (beginning of existence) in order to
deﬁne their date of origin, their place of origin and eventually
the participants to their origin or creation. The modelling of
beginning and end of existence events of objects in the ModRef
project is illustrated in Figure 4. The CIDOC-CRM allows to
deﬁne for each event three main information: date or period,
place and participants.
For the beginning of existence (origin), we use the event
E63 Beginning of Existence and the following patterns of
triples: [E77 Persistent Item, P92i was brought into existence
by, E63 Beginning of Existence], [E2 Temporal Entity, P4 has
time-span, E52 Time-Span], [E52 Time-Span, P78 is identiﬁed
by, E49 Time Appellation], [E4 Period, P7 took place at, E53
Place], [E53 Place, P87 is identiﬁed by, E44 Place Appella-
tion], [E5 Event, P11 had participant, E39 Actor], [E63 Be-
ginning of Existence, rdfs : subClassOf, E5 Event], [E5 Event,
rdfs : subClassOf, E4 Period], [E4 Period, rdfs : subClassOf,
E2 Temporal Entity]. Besides, for the beginning of existence
(origin) we may also start from activities E65 Creation or
E12 Production, which have as super-classes the classes E63
Beginning of Existence and E7 Activity (see Figure 4).
For the end of existence, we use the class E64 End of
Existence or any of its sub-classes and we will then be able
to deﬁne the date, the place and the participants to the end of
existence of an object.
C. Modelling of miscellaneous activities
Figure 5 illustrates an extract of our model for the de-
scription of activities in general, and for the description of
the activity transfer of custody in particular. Hence, to link
an object to an activity of transfer of custody, we use the
property P30 transferred custody of (or its inverse P30i custody
transferred through) between the target activity (E10 Transfer
of Custody) and the physical object (E18 Physical Thing).
Moreover, for a transfer of custody, we can describe the various
protagonists of the transfer (P29 custody received by, P28
custody surrendered by) and also describe eventually a history
of the different transfers of custody related to a speciﬁc object
or document. Note that, there also exists a shortcut path that
does not use the transfer of custody activity but that allows to
deﬁne the current or former keepers or owners of an object
54
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

Figure 3. Modelling of general characteristics.
Figure 4. Modelling of events of beginning and end of existence.
(P49 has former or current keeper, P50 has current keeper,
P51 has former or current owner, P52 has current owner).
Generally, for an event or an activity, we can describe
the date (or period), the place and the participants (or actors)
of the event or activity. Speciﬁcally, for an activity (transfer
of custody, attribute assignement, measurement, curation), we
will be able to deﬁne more information, such as: the procedure
or technique used (P33 used speciﬁc technique, P32 used
general technique), the various objects used (P16 used speciﬁc
object, P125 used object of type), the purpose of the activity
(P20 had speciﬁc purpose, P21 had general purpose).
D. Modelling of inscriptions and other representations
Figure 6 illustrates a snippet of the model for the descrip-
tion of inscriptions engraved on objects or the description
of other representations (photo, drawing, painting) of these
objects (physical or conceptual). Hence, to link an object to
its inscription, we use the property P128 carries between a
physical object (E18 Physical Thing) and a symbolic objet
(E90 Symbolic Object) that is inscribed on the target described
object. This will then help to ﬁnd, for instance, all objects
engraved with a given inscription (seal, signature).
Besides, to link a photo or drawing or painting to an object
(physical or conceptual), we can use a set of properties:
1)
P62 depicts for describing the link between the photo
or drawing or painting (here, E24 Physical Man-
Made Thing) and the target entity E1 CRM Entity
(physical or conceptual object) represented by the
photo, drawing or painting. This property does not
describe inscriptions or other information engraved
55
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

Figure 5. Modelling of miscellaneous activities.
Figure 6. Modelling of inscriptions and other representations of an object.
directly on objects;
2)
P65 shows visual item that links the photo or drawing
or painting to a visual representation (E36 Visual
item) of the described object represented by the photo
or drawing or painting;
3)
P138 represents that links a visual representation
(E36 Visual item) of an object to the target described
object (E1 CRM Entity).
Note that, the property P62 depicts is a shortcut of prop-
erties P65 shows visual item and P138 represents. The photo
or drawing or painting is usually described with the class E24
Physical Man-Made Thing.
E. Data Mapping or Alignment
Data migration into triplestores requires an alignment stage
of data with extracts of the CIDOC-CRM graph proposed. This
mapping is essential due to the heterogeneity of initial data
structured description and also due to the diversity of pilot
projects. This matching is not properly a programmatic task
but relies on logical structure details speciﬁc to the structural
descriptive model chosen by each sub-project. It is a task
halfway between modelling and programming that it enables
to oversee more clearly. Note that, this task should not be
confused with the alignment between ontologies or owl/rdf
ﬁles [21][22] since here it is rather an alignment between the
CIDOC-CRM ontology and raw data from databases or XML
ﬁles (in our context, XML-EAD ﬁles).
Primarily, the mapping consists in ﬁlling a semantic graph’s
nodes. Terminal nodes will be ﬁlled with values extracted
from data logical structures of the corresponding sub-projects
whereas non-terminal or intermediary nodes will be ﬁlled with
URIs and will then deﬁne by that means paths to terminal
nodes. Note that a particular attention must be drawn to the
construction of URIs for their readability, as well as for the
consistency of graph’s paths in order to avoid paths’ conﬂicts
and warrant the uniqueness of a given path compared to
another.
Figure 7 illustrates an extract of data mapping, initially
in XML-EAD [17] and that corresponds to the ﬁrst theme
of our semantic modelling (see Figure 3). In XML-EAD,
for instance, dimensions of an object is obtained with xpath
/ead/archdesc/did/physdesc/dimensions
56
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

or /ead/archdesc/dsc/c/did/physdesc/dimensions, according to
the target information level that can be either the collection
level or the document level.
Hence, to describe the dimensions of an object, we use a
sequence of triples of the form:
[http://www.modref.org/biblionum/document id/e70 thing,
rdf : type, ecrm : E70 Thing],
[http://www.modref.org/biblionum/document id/e70 thing,
ecrm : P43 has dimension,
http://www.modref.org/biblionum/document id/e54 dimension],
[http://www.modref.org/biblionum/document id/-
e54 dimension, rdf : type, ecrm : E54 Dimension],
[http://www.modref.org/biblionum/document id/-
e54 dimension,
rdfs
:
label,
”/ead/archdesc/dsc/c/did/physdesc/dimensions”],
[http://www.modref.org/biblionum/document id/e71 man-
made thing,
owl
:
sameAs,
http://www.modref.org/biblionum/document id/e70 thing].
Finally, the mapping realised will be translated into a
programmatic data structure that will be then used to auto-
matically generate ﬁles that follow RDF and CIDOC-CRM
syntax: it is the data migration into triplestores or the creation
of triplestores.
V.
DATA MIGRATION INTO TRIPLESTORES
Efﬁciently migrating data into triplestores involves various
skills. The sustainability of the whole procedure implies to
deﬁne a general and rigorous architecture for the workﬂow
of the different types of data handled. This architecture ex-
plicits the global method applied to all projects that wish to
move their data into triplestores. This method is subdivided
in different well-identiﬁed steps: data preparating (study and
structural description), semantic modelling and data mapping
from structural to semantic description and at last creating
and exhibiting triplestores that can then be visualised and
queried by users or semantic web applications. Initially, data
are often non-structured or semi-structured (notes, reports,
books, html) and ﬁrst need to be converted into a structured
representation (spreadsheets, databases, XML ﬁles) in order to
easily construct their semantic representation thereafter. This
continuum of steps requires several skills and needs some
of in-between proﬁles skills to enable moving data from one
format to another: (1) non-structured data or semi-structured
data to structured data; (2) structured data to semantic data.
Besides, the key element of the architecture for migrating
data into triplestores is the modelling and mapping of data
with the semantic graph model chosen. In order to achieve data
migration of ModRef project, we have performed an alignment
between their data structural description and their semantic
description by ﬁlling some nodes of the semantic graph with
data retrieved from databases or collections of XML-EAD
ﬁles. This migration into triplestores implies at the same time
the reading of databases and the parsing of XML-EAD ﬁles
(see Table I). Nodes ﬁlled with values are terminal nodes and
non-terminal nodes are ﬁlled with URIs.
The proof of concept of ModRef or the validation of data
migration into triplestores is a set of tasks uphill (preparating
and structuring of data, semantic modelling, alignment of data)
and downhill (publishing, visualising, querying and exploring
triplestores) the migration process. Hence, exploiting triple-
stores by querying and exploring them and the avantages that
can be got through triplestores is the other major aspect around
those new data warehouses of RDF documents.
VI.
VISUALISATION AND EXPLOITATION OF
TRIPLESTORES
Created triplestores are available for visualising (under
three different ways: rdf, triples and attribute-value summary)
and querying through our web application. The interest of
triplestores is that we have a public and published model of
information representation that enables querying triplestores
indifferently with the same procedures. We have deﬁned two
procedures for exploiting triplestores: interfaces similar to
”general query forms” and ”Endpoint Sparql” (see Figure 8).
As they are really close to natural language, ”general query
forms” are simple and intuitive means for querying triplestores.
Special knowledge is not necessary, all that is needed is to ﬁll
target ﬁelds on a given form and launch the query execution.
A Sparql query is automatically constructed using values of
ﬁlled ﬁelds and the query obtained is then used to retrieve
information from triplestores. At the end of query execution,
a list of objects is selected and returned as results to the user
who can then visualise them in three ways: rdf, triples and
attribute-value summary.
Besides, we can also query triplestores by using ”Endpoint
Sparql”. This second query mode requires Sparql query lan-
guage knowledge that is, at present, the reference language
for querying RDF documents. Sparql is a simple language
but not always at everyone’s comprehension level. Hence,
”general query forms” can be seen as a ﬁrst query step
for triplestores whereas ”Endpoint Sparql” guarantee a more
complete exploitation of triplestores by a free formulation of
Sparql ”Select” query type.
Our web application allows to visualise, query and explore
triplestores separately for each pilot project of ModRef but also
together by using the LOD (Linked Open Data) of ModRef.
The web application provides, for each project and for the
LOD of ModRef, a service to visualise triplestores data under
three forms but also provides a service to query triplestores
by using either ”general query forms” or ”Endpoint Sparql”.
Hence, as results to a query, the LOD allows to retrieve various
information (statue, tablet) coming from different triplestores
(see Figure 8). Several Sparql queries have been executed to
validate data migration and a list of queries samples is provided
with the web application. We have developped our own web
application ”Endpoint Sparql” and we also provide a Virtuoso
”Endpoint Sparql” (Virtuoso is a software that allows to create
an instance of ”Endpoint Sparql”) [23].
Note that, the notion of exploiting triplestores refers to
notions of querying and exploring semantic graphs. Hence,
querying triplestores is executing Sparql queries that are
pre-deﬁned (general query forms) or free (Endpoint Sparql)
whereas exploring triplestores is a kind of querying only
performed through ”Endpoint Sparql” for it allows to discover
various paths in a semantic graph towards a given data. Ac-
tually, different paths can lead to the same information inside
a graph (by the use of various notions: shortcut, reﬁnement,
entailment, inverse) even if those paths are not always all ﬁlled.
We can then write Sparql queries to discover if different paths
that lead to a given data exist or write queries to know paths
57
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

Figure 7. Data mapping snippet between XML-EAD and CIDOC-CRM.
that lead to terminal nodes associated to values. Exploring is
then very important to master a speciﬁc triplestore.
VII.
EVALUATION PROCEDURE AND RESULTS
We have perform several Sparql queries types to validate
the various datasets of our triplestores. The queries can be
divided into two groups, one group related to the general RDF
syntax schema (list of concepts or predicates used, list of
terminal triples (see Table II), list of triples of a given resource,
extracts of paths leading to non-empty terminal nodes) and
another group related to the CIDOC-CRM schema (checking
instanciation of a given class, checking labels of given entity
or resource (see Table III), characteristics of a given object
(see Table IV), information on origin or custody of a given
object).
TABLE II. LIST OF TERMINAL TRIPLES WHERE THE TERMINAL
NODE IS NON-EMPTY.
SELECT Distinct ?subject ?predicate ?object
WHERE
{
?subject ?predicate ?object .
Filter ( isLiteral(?object) && ?object != ”” )
}
Moreover, triplestores are subdivided into constant parts
(number of objects or triples) and queries are executed each
time on one part and gradually on the other parts if the
user asks so. The results are then progressively merge. The
user chooses to execute its queries bit by bit and can stop
TABLE III. LIST OF TYPES OR CATEGORIES OF OBJECTS.
PREFIX ecrm: <http://erlangen-crm.org/150929/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT Distinct ?type
WHERE
{
?type uri rdf:type ecrm:E55 Type .
?type uri rdfs:label ?type .
Filter ( ?type != ”” )
}
the execution on any part of the triplestore. The current part
number (on which the current query has been executed) and the
total number of parts are always shown. Figure 9 shows that
queries average time execution (in seconds) is rather constant
on a given triplestore’s part (1000 objects, approximately 100
000 triples) and the execution speed of these queries is quite
good for the users. Therefore, the cumulative time execution
increases as triplestore’s parts are combined.
Once the modelling and alignment tasks were done, we
proceeded to the implementation of the architecture of the
migration process and thereafter we implemented the modules
for visualising and querying (General Query Form, Endpoint
Sparql) triplestores. All these implementations took about one
year. The time execution of the migration process itself, on a
2.13 GHz processor with 4 GB RAM, takes: 6 hours for the
project CDLI involving one long SQL query; 30 minutes for
the project ObjMythArcheo involving 32 SQL queries; 2 hours
58
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

Figure 8. ModRef Project Web Application: Endpoint Sparql.
TABLE IV. LIST OF CHARACTERISTICS THAT COME FROM ROOT
ENTITY ”E1 CRM Entity”.
PREFIX ecrm: <http://erlangen-crm.org/150929/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT Distinct ?id1 ?id2 ?type ?description
WHERE
{
?e1 obj ecrm:P48 has preferred identiﬁer ?id1 uri .
?id1 uri rdfs:label ?id1 .
?e1 obj ecrm:P1 is identiﬁed by ?id2 uri .
?id2 uri rdfs:label ?id2 .
?e1 obj ecrm:P2 has type ?type uri .
?type uri rdfs:label ?type .
?e1 obj ecrm:P3 has note ?description .
}
Figure 9. Queries Execution for ModRef Project.
for the project BiblioNum involving 36 XML-EAD paths.
Table V describes general statistics of the migration results
for the three pilot projects of ModRef based on the follow-
ing criteria: number of logical structure queries, number of
TABLE V. MIGRATION PROCEDURE GENERAL STATISTICS.
CDLI
ObjMythArcheo
BiblioNum
Number of Logical
1
32
36
Structure Queries
SQL query
SQL queries
XML-EAD paths
Number of Resources
36 000 000
840 000
6 300 000
Number of Literal
5 300 000
280 000
930 000
Values
Number of Concepts
36
36
36
Number of Predicates
39
39
39
resources, number of literal values, number of concepts and
predicates.
VIII.
CONCLUSION
The ModRef project allows to realise the proof of con-
cept (POC) of data migration into CIDOC-CRM triplestores
through: a general architecture that identiﬁes the various steps;
modelling and data mapping with the CIDOC-CRM semantic
graph; data migration into triplestores; publishing of triple-
stores through a bilingual ”English-French” web application
[7] that provides services for visualising, querying and explor-
ing triplestores.
Further work is directed towards:
1)
improving the sharing, exchange and discovery of
knowledge at a greater scale by integrating other
internet LOD (Linked Open data) [24][25]. LOD
should increase the discovery of new knowledge,
because of the amount and diversity of linked data but
mainly due to the use of semantic web formalisms,
metadata languages, thesaurus published, standard-
ised and even normalised;
2)
comparison of various triplestores that describe sim-
ilar data [26] (similar objects, objects of same histor-
ical period, objects of same type, identical objects) in
a LOD context. This will lead to mutual enrichment
of the various actors of the LOD.
59
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

ACKNOWLEDGMENT
The author would like to thank the laboratory Labex ”Les
pass´es dans le pr´esent” of the University of Paris 10 and the
ANR project ModRef referenced by ANR-11-LABX-0026-01.
REFERENCES
[1]
D. Oldman, M. Doerr, G. de Jong, B. Norton, and T. Wik-
man, “Realizing lessons of the last 20 years : A manifesto for
data provisioning and aggregation services for the digital humani-
ties. http://www.dlib.org/dlib/july14/oldman/07oldman.html [retrieved:
March, 2017],” D-Lib Magazine, vol. 20, no. 7/8, 2014.
[2]
P. L. Boeuf, M. Doerr, C. E. Ore, and S. Stead, “Deﬁnition of
the cidoc conceptual reference model, version 6.2,” Produced by the
ICOM/CIDOC Documentation Standards Group, Continued by the
CIDOC CRM Special Interest Group. http://www.cidoc-crm.org/ [re-
trieved: March, 2017], May 2015.
[3]
S. V. Hooland and R. Verborgh, Linked Data for Libraries, Archives
and Museums. How to Clean, Link and Publish Your Matadata, A. L.
Association, Ed., 2014.
[4]
N. Shadbolt, T. Berners-Lee, and W. Hall, “The semantic web revisited,”
IEEE Intelligent Systems, vol. 21, no. 3, 2006, pp. 96–101.
[5]
T. Berners-Lee, J. Hendler, and O. Lassila, “The semantic web,”
Scientiﬁc American, 2001, pp. 34–43.
[6]
T. Berners-Lee, “Axioms, architecture and aspirations,” W3C all-
working group plenary Meeting. https://www.w3.org/2001/Talks/0228-
tbl/slide1-0.html [retrieved: March, 2017], 2001.
[7]
“Modref cidoc-crm project,” http://triplestore.modyco.fr [retrieved:
March, 2017].
[8]
R. Heartﬁeld and G. Loukas, “A taxonomy of attacks and a survey
of defence mechanisms for semantic social engineering attacks,” ACM
Computing Surveys (CSUR) - DL (Digital Library), vol. 48, no. 3,
2016.
[9]
J. Scarinci and T. Myers, “A semantic web framework to enable
sustainable lodging best management practices in the usa,” Information
Technology and Tourism, vol. 14, no. 4, 2014, pp. 291–315.
[10]
“Cidoc-crm implementation,” http://www.erlangen-crm.org/ [retrieved:
March, 2017], 2015.
[11]
“British
museum
cidoc-crm
project,”
http://collection.britishmuseum.org/ [retrieved: March, 2017].
[12]
“Arches cidoc-crm project,”
http://www.getty.edu/conservation/our projects/ﬁeld projects/arches/
[retrieved: March, 2017].
[13]
“Dbpedia project,” http://www.dbpedia.org/sparql [retrieved: March,
2017].
[14]
T. Ruan, Y. Li, H. Wang, and L. Zhao, “From queriability to informa-
tivity, assessing ”quality in use” of dbpedia and yago,” In proceedings
of the 13th Extended Semantic Web Conference ESWC’16, 2016, pp.
52–68.
[15]
“Nakala project,” http://www.nakala.fr/sparql [retrieved: March, 2017].
[16]
P. Haase, J. Broekstra, A. Eberhart, and R. Volz, “Comparison of rdf
query languages,” In proceedings of the third International Semantic
Web Conference ISWC’04, 2004, pp. 502–517.
[17]
“Xml-ead elements,” https://www.loc.gov/ead/tglib/element index.html
[retrieved: March, 2017].
[18]
“Cdli cidoc-crm project,” http://www.cdli.ucla.edu [retrieved: March,
2017].
[19]
“Objmytharcheo cidoc-crm project,” http://www.limc-france.fr and
http://medaillesetantiques.bnf.fr [retrieved: March, 2017].
[20]
“Biblionum cidoc-crm project,” http://www.argonnaute-u.paris10.fr [re-
trieved: March, 2017].
[21]
D. Faria, C. Martins, and A. Nanavaty, “Agreementmakerlight results
for oaei 2014,” ISWC Workshop on Ontology Matching - Proceedings
of the 9th International Conference on Ontology Matching (OM’14),
vol. 1317, 2014, pp. 105–112.
[22]
D. Faria, C. Pesquita, E. Santos, M. Palmonari, I. Cruz, and F. Couto,
“The agreementmakerlight ontology matching system,” The 12th In-
ternational Conference on Ontologies, DataBases, and Applications of
Semantics (ODBASE), 2013, pp. 527–541.
[23]
“Modref
virtuoso
endpoint
sparql,”
http://3s-passespresent.huma-
num.fr/sparql [retrieved: March, 2017].
[24]
W. Beek, L. Rietveld, S. Schlobach, and F. van Harmelen, “Lod
laundromat: Why the semantic web needs centralization (even if we
don’t like it),” IEEE Internet Computing, vol. 20, no. 2, 2016, pp. 78–
81.
[25]
E. Daga, M. d’Aquin, A. Adamou, and S. Brown, “The open university
linked data - data.open.ac.uk. semantic web,” Semantic Web, vol. 7,
no. 2, 2016, pp. 183–191.
[26]
W. Beek, S. Schlobach, and F. van Harmelen, “A contextualised se-
mantics of owl:sameas,” In proceedings of the 13th Extended Semantic
Web Conference ESWC’16, 2016, pp. 405–419.
60
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-557-9
WEB 2017 : The Fifth International Conference on Building and Exploring Web Based Environments

