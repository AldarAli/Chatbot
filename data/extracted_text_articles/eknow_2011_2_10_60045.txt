Semantic-enabled Efficient and Scalable Retrieval of Experts
Witold Abramowicz, Elżbieta Bukowska, Monika Kaczmarek, Monika Starzecka
Department of Information Systems, Faculty of Informatics and Electronic Commerce, Poznan University of Economics, 
Poznań, Poland
{w.abramowicz; e.bukowska; m.kaczmarek; m.starzecka}@kie.ue.poznan.pl
Abstract—Nowadays,  efficient  utilization  of  knowledge 
became a key to the success of an organization. The need to 
identify experts within or outside an organization has been 
for a long time inspiration for various initiatives undertaken 
by academia and industry. The eXtraSpec system developed 
in Poland is an example of such initiatives. In order to realize 
its tasks, the eXtraSpec system needs not only to be able to 
acquire and extract information from various sources, but 
also  requires  an  appropriate  information  representation 
supporting  reasoning  over  person  characteristics.  The 
considered mechanism should allow for precise identification 
of  required  data,  but  simultaneously,  be  efficient  and 
scalable.  The  main  goal  of  this  paper  is  to  present  the 
reasoning scenario we applied within the eXtraSpec project 
and  discuss  the  underlying  motivation,  which  led  to  the 
development  of  pre-reasoning  mechanism.  The  system 
architecture  and  developed  ontology  together  with 
implementation details are also discussed.
Keywords - Expert finding system; knowledge representation; 
expert characteristic
I.
INTRODUCTION
Efficient  utilization  of  knowledge  is  a  key  to  the 
success  of  an  organization.  Knowing  the  skills  and 
expertise of employees as well as a proper recruitment are 
of major importance. More and more often organizations 
take advantage of data available on the Internet to locate 
experts they require. As the data available is very dispersed 
and of distributed nature, a need appears to support the 
human  resources  management  process  using  IT-based 
solutions,  e.g.,  information  extraction  and  retrieval 
systems. 
Within an information retrieval (IR) process a single 
query is executed on a set of resources to identify the 
relevant  data [1].  In general,  a typical retrieval  system 
encompasses three components: a module responsible for 
collecting data and creating its representation in the form of 
an  index;  an  interface  allowing  formulating  queries 
consisting of a set of keywords and finally, a mechanism 
matching a query to the created indexes. 
These components affect the quality of the retrieval 
process i.e., values of the precision and recall metrics. 
The  traditional  expert  retrieval  systems  face  well 
known  IR  problems  caused  by  application  of different 
keywords and various levels of abstraction by users while 
formulating  queries  or  by  using  different  words  and 
phrases  while creating  a description  of a phenomenon, 
based on which indexes are created. Thus, to ensure that in 
a response to a query an expert retrieval system returns 
documents, which do not contain words included in the 
query, but are still relevant, very often semantics is applied. 
There are many research  and commercial  initiatives 
aiming  at  development  of  expert  retrieval  systems 
supported by semantics. They are to provide interested 
parties with detailed information on people’s experience 
and skills. One of such initiatives is the on-going Polish 
project  eXtraSpec  [23].  Its  main  goal  is  to  combine 
company’s internal electronic documents and information 
sources available on the Internet to provide an effective 
way of searching experts with competencies in the given 
field.  The  system  is  to  support  three  main  scenarios: 
finding experts with desired characteristic, defining teams 
of experts and verifying data on a person in question. In 
order to support these scenarios,  the eXtraSpec  system 
needs not only to be able to acquire and extract information 
from  various  sources,  but  also  requires  an  appropriate 
information  representation  supporting  reasoning  over 
person’s characteristics. In addition, the mechanism should 
allow on the one hand for precise identification of required 
data and, on the other hand, be efficient and scalable. 
The main goal of this paper is to present the reasoning 
approach we followed within the eXtraSpec project and 
discuss  the  underlying  motivation,  which  led  to  the 
development of a semantic-based mechanism to retrieve 
experts  in  its  current  state.  In  addition,  the  ontology 
developed to describe expert characteristics is presented. 
In order to fulfill the mentioned goals, the paper is 
structured as follows. First, the related work in the area of 
expert finding systems is discussed. Next, the ontology 
developed for the needs of the eXtraSpec project to support 
retrieval of experts is presented. Then, the short description 
of the considered scenarios regarding the application of the 
reasoning  infrastructure  follows.  Finally,  the  system 
architecture as well as implementation details are given. 
The paper concludes with final remarks. 
II.
RELATED WORK 
The need to find expertise within an organization has 
been for a long time inspiration for initiatives aiming at 
development of a class of search engines called expert 
finders [2]. There are several aspects connected with expert 
finding, for instance, following McDonald and Ackerman 
30
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

[3]  those  may  be:  expertise  identification  aiming  at 
answering a question: ‘who is an expert on a given topic’ 
and  expertise selection  aiming  at answering  a question 
‘what does X know’? Within our research, we focus on the 
first  aspect  i.e.,  identifying  a  relevant  person  given  a 
concrete need. 
First systems focusing on expertise identification relied 
on a database like structure containing a description of 
experts’ skills (e.g., [4]). However,  such systems faced 
many problems, e.g., how to ensure precise results given a 
generic  description  of  expertise  and  fine-grained  and 
specific queries [5] or how to guarantee the accuracy and 
validity of stored information given the static nature of a 
database. To address these problems other systems were 
proposed focusing on automated discovery of up-to-date 
information  from  specific  sources  such  as  e.g.,  email 
communication [6]. In addition, instead of focusing only on 
specific  document  types,  systems  that  index  and  mine 
published  intranet  documents  were  proposed  [7].  An 
example may be the Spree project [8] aiming at providing 
automatic expert finding facility, able to answer a given 
question.  The  system  automatically  builds  qualification 
profiles from documents and uses communities and social 
software in order to provide efficient searching capabilities. 
In addition, currently the Web itself offers many other 
possibilities to find information on experts, as there are a 
number of contact management portals or social portals 
where users can look for experts, potential employees or 
publish  their  curricula  in  order  to  be  found  by  future 
employers (some examples may be [24] [25], [26]). 
When  it  comes  to  the  algorithms  applied  to  assess 
whether a given person is suitable to a given task, at first, 
standard IR techniques to locate an expert on a given topic 
were applied [9][10]. Usually, expertise of a person was 
represented in a form of a term vector and a query result 
was represented as a list of relevant persons. If matching a 
query  to  a  document  relies  on  a  simple  mechanism 
checking whether a document contains the given keywords, 
then the well-known IR problems occur: (1) low precision 
of returned results (there is a word, but not in this context); 
(2) low value of recall (relevant documents described with 
another set of keywords are not identified); (3) a large 
number of documents returned by the system (especially in 
response to a general query) the processing of which is 
impossible (e.g., due to the time limit). Therefore, few 
years  ago,  the  Enterprise  Track  at  the  Text  Retrieval 
Conference  (TREC)  was  started  in  order  to  study  the 
expert-finding topic. It resulted in further advancements of 
the expert finding techniques and application of numerous 
methods  such  as  probabilistic  techniques  or  language 
analysis  techniques  to  improve  the  quality  of  finding 
systems (e.g., [11] [12] [13] [14]). 
As the Semantic Web technology is getting more and 
more popular, it is not surprising that it has been used to 
enrich  descriptions  within  expert  finding  systems.  The 
introduction of semantics into search systems may take two 
forms: the use of semantics in order to analyze indexed 
documents or queries (query expansion), or operating on 
semantically described resources (e.g., RDF files) with use 
of reasoners. 
Within  the  expert  finding  systems,  both  approaches 
have been applied and a number of ontologies to represent 
competencies and skills was developed. For instance, a 
Single European Employment Market-Place project [15] 
aiming  at  providing  interoperable  architecture  for  e-
Employment services. used an ontology in order to create a 
semantic description of job offers and CV. The ontology is 
called “Reference Ontology” and it consists of thirteen sub-
ontologies: Competence, Compensation, Driving License, 
Economic Activity, Education, Geography, Job Offer, Job 
Seeker, Labour Regulatory, Language, Occupation, Skill 
and  Time.  It  was  built  based  on  the  commonly  used 
standards,  e.g.,  ISO  4217 [27],  ISCO-88  (COM[28]), 
ONET [29], DAML ontology [30]. 
In turn, in [16], authors describe requirements and a 
process  of  ontology  creation  for  the  needs  of  HR 
management. They developed an ontology used by a meta-
search engine searching jobs in job portals [17] and by a 
university  competence  management  system  [18].  The 
ontology was created in the OWL formalism. It consists of 
sub-ontologies for competencies, occupations and learning 
objects.  Another  example  is  an  ExpertFinder  [19] 
framework enabling application of existing vocabularies in 
semantically supported systems. It provides terms and best 
practices for describing web pages, persons, institutions, 
events, areas of expertise or educational aspects. It uses 
such vocabularies as: FOAF [31], SIOC [32], vCard [33] or 
Dublin Core [34]. 
In  addition,  numerous  ontologies,  taxonomies  and 
classifications have been created in the HR management 
area, e.g., the Standard Occupational Classification (SOC) 
[35] of the US Federal statistical agencies or taxonomy of 
skills in the KOWIEN project [20]. 
The  system  discussed  in  this  paper  relates  to  the 
semantic-based expert finding. However, our setup is a bit 
different. The eXtraSpec system acquires information from 
outside and assumes that one can build an expert profile 
based  on the gathered  information. The system gathers 
information on a large set of experts. More experts imply 
bigger  topic  coverage  and  increased  probability  of  a 
question being answered. However, it also causes problems 
connected with the heterogeneity of information as well as 
precision  and  recall  of  the  system.  The  application  of 
semantics may help to normalize the gathered data and 
ensure appropriate level of precision and recall; however, it 
generates problems with scalability and efficiency of the 
designed  mechanisms.  In  addition,  the  ontology  itself 
developed for the needs of the eXtraSpec system differs 
from other projects: (1) it is not limited to hierarchical 
relations; (2) it has been developed for the Polish language 
and relate to Polish standards;  (3) it has been built in 
accordance to the Simple Knowledge Organization System 
(SKOS) [36] standard.
31
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

III. ONTOLOGIES IN THE EXTRASPEC PROJECT
One  of  the  most  important  functionalities  of  the 
eXtraSpec system is the identification of persons having 
the desired expertise. As already discussed, in order to 
ensure the quality of returned results, the decision to apply 
Semantic  Web  technologies  to  retrieve  and  describe 
profiles  was  taken.  The  eXtraSpec  system  acquires 
automatically data from dedicated sources, both company 
external and internal ones. The extracted content is saved 
as  an  extracted  profile  (PE),  which  is  an  XML  file 
compliant with the defined structure of an expert profile 
(Figure  2)  based  on  the  European  Curriculum  Vitae 
Standard [37]. Vocabulary in the extracted content is then 
processed and normalized using the developed ontology. 
The result of the normalization process is a normalized 
profile  (PN).  Every  normalized  profile  provides 
information  on  one  person,  but  one  person  may  be 
described  by  a  number  of  normalized  profiles  (e.g., 
information on a given person at different points in time or 
information  acquired  from  different  sources).  Thus, 
normalized profiles are analysed and then aggregated, in 
order to create an aggregated profile (PA) of a person. 
Finally, the reasoning mechanism is fed with the created 
aggregated profiles and answers user queries on experts. 
The above-mentioned steps impose requirements on the 
ontology.  It  should  enable  semantic  annotation  of  all 
elements of profiles as well as support the normalization 
and discovery process. The basic element of the eXtraSpec 
system is an already mentioned profile of an expert. Each 
expert is described with series of information, e.g., first and 
last  name,  history  of  education,  career  history,  hobby, 
skills,  obtained  certificates.  To  make  the  reasoning 
possible, the following attributes from the profile of an 
expert should be linked to ontology instances: 
•
Educational organization – name of organization 
awarding  the  particular  level  of  education  or 
educational title;
•
Certifying organization – name of an organization 
that issued particular certificate;
•
Client, employer and role – those three attributes 
are used to describe history of an employment. A 
single step in the employment history is described 
as a business relation. Each relation consists of 
three basic elements: client – employer and a role 
(i.e.,  profession)  that  an  expert  played  in  this 
relation; 
•
Scope of education – the domain of education (for 
example: IT, construction, transportation);
•
Topic  of  education  –  for  a  higher  education 
description, it will be a name of the specialization, 
for trainings or courses etc. – their topic;
•
Result of education – the obtained title;
•
Skill – an ability to do an activity or job well, 
especially because someone has practiced it;
•
Name of a certificate; 
•
Degree of a skill.
Performed analysis of the requirements imposed on the 
ontology for the needs of reasoning, concluded with the 
definition of a set of relations that should be defined:
•
subConceptOf – to represent hierarchical relations 
between concepts, 
•
isPartOf – for representation  of composition of 
elements, for example: ability of using MSWord is 
a  part  of  ability  of  using  MSOffice  (however, 
knowing MSWord does not imply that a person 
knows the entire MSOffice suit),
•
isRequired – connection between two concepts, for 
example: to have a role – doctor, one must have 
graduated from some medical school. 
•
implies – from one fact, or set of facts, another fact 
can be concluded. For example, if one has skills A 
and B, then he also has skill C. 
As the result of the conducted analysis of different 
formalisms and data models, the decision was taken to use 
the OWL language as the underlying formalisms and the 
SKOS model as a data model. The criteria that influenced 
our choice were as follows: (1) relatively easy translation 
into other formalisms; (2) simplicity of representation; (3) 
expressiveness of used ontology language; (4) efficiency of 
the  reasoning  mechanism.  Many  knowledge 
representations,  such  as  thesauri,  taxonomies  and 
classifications share some structure elements and are used 
in  similar  applications.  SKOS  gathers  most  of  those 
similarities  and  explicitly  enables  data  and  technology 
exchange between different applications. The SKOS data 
model enables low cost migration that will allow making a 
connection  between  existing  SKOS  and  the  semantic 
Internet. Ontologies developed in accordance to the SKOS 
model can be expressed in any known ontology language. 
Because of the strong software support and a wide usage of 
OWL, we decided to use that formalism within our work. 
As a result of the conducted work, the data structure 
was  designed  having  one  SKOS  ontology  with  eight 
concept schemas for each area of interest: Organizations 
(for organizational organizations, certifying organizations, 
Employer and Client), SkillName, SkillDegree, Certificate, 
Role,
 
EducationScope,
 
EducationTopic
 
and 
EducationResult. While building the ontology for the needs 
of the eXtraSpec system, a wide range of taxonomies and 
classifications has been analyzed in order to indentify best 
practices and effective solutions. As the eXtraSpec system 
is a solution designed for the Polish market, so is the 
developed ontology. For instance, during the development 
of  Concept  Schemas  for  Organizations  information 
provided by the Polish Ministry of Science and Higher 
Education [38] was used while for Role organization the 
official Polish Classification of Occupations [39] published 
by the Polish Ministry of Labor and Social Policy was 
utilised. 
IV. CONSIDERED SEARCHING SCENARIOS 
One  of  the  most  important  functionalities  of  the 
eXtraSpec system is the identification of persons having 
the desired expertise. The application of Semantic Web 
32
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

technologies  in  order  to ensure  the quality  of returned 
results implies application of a reasoning mechanism to 
answer  user queries.  In  addition,  the strict  requirement 
towards the performance and scalability of the developed 
system  was  formulated.  Therefore,  a  design  decision 
needed to be taken on how to apply semantics and at the 
same time ensure the required quality of the system during 
the discovery process.
Given the above criteria (precision and recall on the one 
hand, and efficiency and scalability on the other), three 
possible  scenarios  were  considered.  The  first scenario 
involves using the fully-fledged semantics by expressing 
all expert profiles as instances of an ontology, formulating 
queries using the defined ontology, and then, executing a 
query  using  the  reasoning  mechanism.  This  approach 
involves the need to load all ontologies into the reasoning 
engine and representing all individual profiles as ontology 
instances. Performed experiments showed that querying the 
reasoning infrastructure, even while using only a small set 
of  gathered  profiles,  is  resource  (large  memory 
consumption)  and  time  consuming  task  (up  to  a  few 
minutes). Therefore, although having a high precision and 
recall, it has poor performance and scalability. 
The  second scenario relies on query expansion using 
ontology, i.e., adding keywords to the query by using an 
ontology to narrow or broaden the meaning of the original 
query. It allows to get answers faster than the previous 
scenario, however, it could not take into account additional 
relations expressed in the ontology, and therefore, did not 
always allow for increased precision. In addition, each user 
query needs to be normalized and then expanded using 
ontology,  therefore,  application  of  a  reasoner  was 
necessary.  The experiments showed that it affected  the 
values of system performance and scalability. 
The  third scenario called pre-reasoning involves two 
independent  processes:  creation  of  enriched  profiles 
(indexes), to which additional information reasoned from 
the ontology is added and saved within the repository as 
syntactic  data;  formulating  query  with  the  help  of  the 
appropriate GUI using the defined ontology serving as a 
controlled vocabulary. Then, the query is executed directly 
on a set of profiles using the traditional mechanisms of IR. 
There  is  no  need  to  use  the  reasoning  engine  while 
executing a query. This approach allows circumventing the 
drawbacks associated with the first approach, shifting the 
burden of an operation on the stage of indexing using 
ontologies. 
Summarizing,  our experiments  proved  that  applying 
fully-fledged semantics is a precise but neither efficient nor 
scalable  solution.  Query  expansion  provides  increased 
precision of the results (in comparison to traditional IR 
mechanisms) and has better scalability and efficiency than 
the fully-fledged semantics, however, does not allow to 
take  full  advantage  of  the  developed  ontologies  and 
existing relations between concepts. Only application of 
the third considered scenario allows taking advantage of 
the mature IR mechanisms while increasing the accuracy 
and completeness of the returned results by: introducing a 
preliminary stage called pre-reasoning in order to create 
enriched indexes and the minimum use of the reasoning 
engine during the search. 
The short overview of the constituents of the proposed 
mechanism follows.
V.
SEMANTIC-ENABLED RETRIEVAL OF EXPERTS
The eXtraSpec system consists of a number of modules 
specialized for different tasks. Its architecture is described 
in  [22],  here  we  focus  on  the  REA  component 
(REAsoning) presented in Figure 1. It consists of indexing 
mechanism  (indexer),  searching  mechanism  (searcher), 
composition  mechanism  (composer)  and  a  reasoning 
engine with set of ontologies loaded. 
Figure 1. REA overview
The  selected  scenario  requires  the  support  of  two 
independent  processes.  First,  creating  profiles’  indexes 
optimized for search, i.e., structured so as to enable a fast 
search based on criteria preset by a user, and enriched with 
additional information using an ontology (pre-reasoning). 
The  second  process  that  needs  to  be  supported  is 
defining the query matching mechanism on the enriched 
indexes - this process is initiated by a user formulating 
queries using a graphical interface. 
To perform the IR side of the mechanism, the open-source 
java  library  Lucene  [40],  supported  by  the  Apache 
Software Foundation, was selected. Fields in the Lucene 
documents  cannot  be  grouped  together  nor  stored  as 
hierarchical  structures.  However,  within  an  aggregated 
profile (PA), which is a base profile for searching, some 
hierarchies  and  groups  might  be  found.  Since  explicit 
mapping from PA to the Lucene document is not possible, 
during the indexing process profiles are divided into a 
33
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

number  of  separate  documents  as  shown  in  Figure  2. 
Concurrently  with  the  indexing  process,  pre-reasoning 
takes place, in order to complete profile with implied facts. 
Documents  contain  fields  generated  directly  from  PA 
(marked with +) as well as the additional fields (marked 
with #). In the simplest case, the reasoning engine returns a 
list  of  all  superconcepts  for  the  given  element  to  the 
indexing  module.  The  hierarchy  of  superconcepts  is 
preserved. Superconcepts are indexed as additional values 
for the given document field: these values are saved as next 
array elements and it is assumed that the higher array index 
number, the smaller weight the concept has. The assigned 
weight  affects  the  ranking  procedure.  If  returned 
superconcepts  do  not  correspond  with  PA  elements 
conceptually, additional fields are added to the document 
being indexed. For example, PA element „address” might 
be divided into data that are more detailed, i.e., zip code, 
city, street, etc. Based on the zip code it is possible to 
specify county and province and search for experts using 
the  spatial  criteria.  Since  PA  does  not  contain  such 
elements, we add fields to the personal data document 
during  the  indexing  process.  In  turn,  documents  that 
contain  information  about  education  history  have  been 
expanded by field „catOfEduOrganization”. Hierarchy of 
superconcepts for each education organization is acquired 
from ontology and indexed. This enables, e.g., searching 
people who graduated from a desired type of educational 
organization,  e.g.,  any  technical  university.  In  the 
document  that  contains  data  about  skills,  the  field 
„skillName”  was  expanded  in  order  to  contain  all 
superconcepts from the ontology for a given skill. The 
same expansion was made in the document about history of 
employment, were the field „role” was expanded using the 
hierarchy of superconcepts for occupied positions.
Figure 2. Data model overview
Lucene  provides  a  very  flexible  but  simple  query 
structure. Therefore, in the eXtraSpec system it had to be 
extended in order to correspond to the PA structure and 
searching scenarios. In order to execute more sophisticated 
queries  encompassing  several  criteria  from  various 
documents, a QueryObject structure needed to be defined. 
It stores information on fields’ names, required values as 
well as logical operator that should be fulfilled. 
The performed tests have shown that the system fulfils 
the defined requirements. Application of semantics in the 
form of a pre-reasoning phase allowed to achieve precise 
results, simultaneously allowing to take advantage of the 
matured IR mechanisms guaranteeing scalability and good 
performance of the system. 
VI. CONCLUSIONS AND FUTURE WORKS
The main goal of the eXtraSpec project is to develop a 
system  supporting  analysis  of company  documents  and 
selected Internet sources for the needs of searching for 
experts from a given field or with specific competencies. 
The provided system focuses on processing texts written in 
the Polish language. The obtained information is stored in 
the system in the form of experts’ profiles and may be 
consolidated when needed. The system aims to offer a user 
friendly interface to perform  queries that allow to find 
persons with specific characteristics.  Realisation of this 
goal requires interconnection between developed interface 
and  underlying  ontologies.  Within  this  paper,  we  have 
discussed the concept and considered scenarios regarding 
the implementation of the reasoning mechanism for the 
needs  of  the  eXtraSpec  system.  We  argue  that  by 
introducing  the  pre-reasoning  phase,  the  application  of 
semantics may be used to achieve precise results when 
searching  for experts and at the same time, ensure the 
proper performance and scalability. 
The set of developed ontologies discussed within this 
paper  was  designed  specially  for  the  Polish  language, 
however, the main structure and model as well as defined 
relations  may  be  reused  also  for  other  languages.  As 
mentioned,  the  ontology  in  question  is  still  under 
development, however, in the current state of affairs the 
reasoning  about  competencies  in  order  to  complete 
person’s profile with additional data on education, work 
experience  is  successfully  performed  by  the  REA 
component described within this paper. Our future work 
focuses  on  the  implementation  of  the  second  scenario 
supported by the eXtraSpec system i.e., composition of 
teams of experts using the developed ontology. 
ACKNOWLEDGMENT
The work published in this article was supported by the 
project titled: “Advanced data extraction methods for the 
needs  of  expert  search”financed  under  the  Innovative 
Economy Framework and partially supported by European 
Union  in  the  European  Regional  Development  Fund 
programme (contract no. UDA-POIG.01.03.01-30-150/08-
01).
34
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

REFERENCES
[1]
van  Rijsbergen,  C.  J.;  “Information  Retrieval  and  Information 
Reasoning”. Computer Science Today 1995,pages 549-559 
[2]
Yimam, D.; “Expert finding systems for organizations: Domain 
analysis and the demoir approach” in: ECSCW 999 Workshop: 
Beyond  KNowledge  Management:  Managing  Expertise,  pages 
276–283, New York, NY, USA, 1996. ACM Press
[3]
McDonald, D. W. and Ackerman, M. S.; “Expertise recommender: 
a flexible recommendation system and architecture” in: CSCW ’00: 
Proceedings of the 2000 ACM conference on Computer supported 
cooperative work, pages 231–240. ACM Press, 2000.
[4]
Yimam-Seid,  D.  and  Kobsa,  A.  “Expert  finding  systems  for 
organizations:  Problem  and  domain  analysis  and  the  demoir 
approach”. Journal of Organizational Computing and Electronic 
Commerce, 13(1):1–24, 2003
[5]
Kautz,  H.,  Selman,  B.,  and  Milewski,  A.;  “Agent  amplified 
communication”  in:  Proceedings  of  the  Thirteenth  National 
Conference on Artificial Intelligence (AAAI-96), pages 3–9, 1996
[6]
Campbell, C. S., Maglio, P. P.,  Cozzi, A., and Dom, B.; “Expertise 
identification  using  email  communications”  in:  CIKM  ’03: 
Proceedings of the twelfth international conference on Information 
and knowledge management, pages 528–531. ACM Press, 2003
[7]
Hawking, D.; “Challenges in enterprise search” in: Proceedings 
Fifteenth Australasian Database Conference, 2004
[8]
Metze, F., Bauckhage, Ch., and Alpcan, T., “The "Spree" Expert 
Finding System“ in: Proceedings of the First IEEE International 
Conference on Semantic Computing (ICSC 2007), September 17-
19, 2007, Irvine, California, USA, pp. 551--558
[9]
Ackerman,  M.S., Wulf, V. and Pipek, V.;  “Sharing Expertise: 
Beyond Knowledge Man-agement”; MIT press, (2002).
[10] Krulwich, B. and Burkey, C.; “ContactFinder  agent: answering 
bulletin  board  questions  with  referrals”  in:  Proceedings  of  the 
National Conference on Artificial Intelligence, pages 10-15, 1996
[11] Balog, K., Azzopardi L. and De.  Rijke, M.; “Formal models for 
expert finding in enterprise corpora” in: Proceedings of the ACM 
SIGIR, pages. 43-50, 2006.
[12] Fang, H. and Zhai, C.; “Probabilistic models for expert finding” in: 
Proceedingsof the ECIR, pages 418-430, 2007
[13] Petkova,  D. and  Croft,  W.; “Hierarchical language  models  for 
expert finding in enterprise corpora” in: Proceedings of the 18th 
IEEE  International  Conference  on  Tools  with  Artificial  Intel-
ligence, pages 599-608, 2006
[14] Serdyukov, P. and Hiemstra, D.; “Modeling documents as mixtures 
of persons for expert finding” in: Proceedings of the ECIR, pages 
309-320, 2008.
[15] Gómez-Pérez,  A.,  Ramírez,  J.,  and  Villazón-Terrazas,  B.,  “An 
Ontology for Modelling Human Resources Management Based on 
Standards”  in: B. Apolloni et al. (Eds.): KES 2007/WIRN 2007, 
Part I, LNAI 4692, pp. 534–541, 2007
[16] Dorn, J., Naz, T., and Pichlmair, M., “Ontology Development for 
Human  Resource  Management”  in:  "Proceedings  of  4rd 
International Conference on Knowledge Management", Ch. Stary, 
F.  Barachini,  and  S.  Hawamdeh  (Hrg.);  Series  on 
Information&Knowledge Management, 6 (2007), ISBN: 978-981-
277-058-5; pp. 109 - 120.
[17] Dorn,  J.  and  Naz,  T.;  “Meta-search  in  Human  Resource 
Development”,  in:  Proceedings  of  4th  Int.  Conference  on 
Knowledge Systems, Bangkok, Thailand, 2007
[18] Dorn, J. and Pichlmair, M.; “A Competence Management System 
for  Universities”,  in:  European  Conference  on  Information 
Systems, St. Gallen, 2007, pp.759 - 770
[19] Aleman-Meza, B., Bojars, U., Boley, H., Breslin, J.G., Mochol, M., 
Nixon, L.JB., Polleres, A., and Zhdanova, A.V.,  “Combining RDF 
Vocabularies  for  Expert  Finding”.  In:  Proceedings  of  the  4th 
European  conference  on  The  Semantic  Web:  Research  and 
Applications ESWC '07, 2007, pp. 235--250
[20] Dittmann,  L.;“Towards  Ontology-based  Skill  Management, 
Projektbericht  zum  Verbundprojekt  KOWIEN”,  Universität 
Duisburg-Essen, 2003.
[21] Abramowicz, W.,  Wieloch, K.; “Raport podsumowujący wyniki 
prac przeprowadzonych w ramach zadań Z1.1, Z1.2 oraz Z2.1”, 
Technical  report  of  the  eXtraSpec  project,  Department  of 
Information Systems, Poznan University of Economics, 2009
[22] Abramowicz, W., Kaczmarek, T., Stolarski,  P., Węcel, K.,  and 
Wieloch,  K.;  “Architektura  systemu  wyszukiwania  ekspertów 
eXtraSpec”,  in:  Proceedings  of  “Technologie  Wiedzy  w 
Zarządzaniu Publicznym”, Hucisko, 19-21 September 2010
[23] http://extraspec.kie.ue.poznan.pl/
 
 , last access date: 3.12.2010
[24] http://www.bizwiz.com, last access date:3.12.2010
[25] http://www.xing.com
 
 , last access date: 3.12.2010
[26] http://linkedin.com
 
 . last access date: 3.12.2010
[27] http://www.iso.org/iso/en/prods-
 
 
services/popstds/currencycodeslist.html, last access date: 3.12.2010
[28] http://ec.europa.eu/eurostat/ramon/index.cfm?
 
 
TargetUrl=DSP_PUB_WELC, last access date: 3.12.2010
[29] http://online.onetcenter.org/
 
 , last access date: 3.12.2010
[30] http://cs.yale.edu/homes/dvm/daml/time-page.html
 
 ,  last  access 
date: 3.12.2010
[31] http://www.foaf-project.org/
 
 , last access date: 3.12.2010
[32] http://sioc-project.org/
 
 , last access date: 3.12.2010
[33] http://www.imc.org/pdi/
 
 , last access date: 3.12.2010
[34] http://dublincore.org/
 
 , last access date: 3.12.2010
[35] http://www.bls.gov/soc
 
 , last access date: 3.12.2010
[36] http://www.w3.org/TR/swbp-skos-core-spec
 
 ,  last  access  date: 
3.12.2010
[37] http://www.europa-pages.com/jobs/europass.html
 
 , last access date: 
3.12.2010
[38] http://www.nauka.gov.pl/szkolnictwo-wyzsze/system-szkolnictwa-
 
 
wyzszego/uczelnie/, last access date: 3.12.2010
[39] http://www.praca.gov.pl/pages/klasyfikacja_zawodow2.php
 
 ,  last 
access date: 3.12.2010
[40] http://lucene.apache.org
 
 ,   last access date: 3.12.2010
35
eKNOW 2011 : The Third International Conference on Information, Process, and Knowledge Management
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-121-2

