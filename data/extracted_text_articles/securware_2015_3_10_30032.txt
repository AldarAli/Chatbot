An Improved Threshold Proxy Signature Scheme
Akanksha Gupta, Prakash D.Vyavahare, Manish Panchal
Department of Electronics and Telecommunication Engineering
S. G. S. Institute of Technology and Science, Indore, India
Email: akkuregister.90@gmail.com, prakash.vyavahare@gmail.com, hellopanchal@gmail.com
Abstract—Threshold proxy signature schemes allow original
signer to delegate his signing capability to a group of n proxy
signers in which t, (1 < t ≤ n) or more proxy signers out of
n can generate a valid proxy signature on behalf of original
signer. The ﬁrst Rivest, Shamir and Adleman (RSA) based
threshold proxy signature scheme was proposed by Hwang et.
al. . Later on Wang in his paper, commented on the security
weakness in Hwang’s scheme. In this paper, we propose a new
RSA based scheme that removes weakness of Hwang’s scheme.
The proposed scheme employs efﬁcient generation of shared
RSA key using algorithm proposed by Boneh and Fanklin and
RSA threshold cryptosystem of Nguyen. The proposed scheme
provides secrecy, unforgeabilty, nonrepudiation, proxy protection
and removes the need of trusted combiner. Therefore, it can
be a potential candidate for implementation of electronic proxy
signature system.
Keywords– Proxy Signature; Threshold Signature; Secret Shar-
ing; RSA.
I.
INTRODUCTION
Digital signature is a cryptographic scheme used to au-
thenticate the identity of the sender of a message and sender
can not repudiate the message once it is signed by him. It
also assures the recipient for the integrity of message. Many
practical applications implement it either directly or in some
other form. Proxy signature is one such example, where digital
signature on a message is performed by proxy signer on behalf
of original signer in his absence, to whom original signer has
delegated his signing power.
Mambo et. al. [1] in 1996 ﬁrst proposed the concept of proxy
signature and classiﬁed it on the basis of delegations namely,
full delegation, partial delegation and delegation by warrant.
Full delegation was not secure and hence was not used in
practical systems. In such a case, original signer gives his
private key to proxy signer. Therefore, proxy signature is
indistinguishable from original signature. Partial delegation
and delegation by warrant are more secure than full delegation
scheme.
In 1997, Kim [2] combined the idea of secret sharing
and threshold crypto system to proxy signature scheme with
less trust on single proxy signer. Initially proposed threshold
proxy signature schemes were based on principle of discrete
logarithm cryptosystem [3][4]. In (t, n) threshold scheme, t
number of proxy signers (1 < t ≤ n) can cooperatively
generate valid proxy signature on a message, but (t − 1) or
less proxy signers can not generate valid sign on the document.
Threshold proxy signature scheme is more secure and practical
than conventional proxy signature scheme. Number of publica-
tions of threshold proxy signature based on discrete logarithm
have been reported [5][6][7][8]. Hwang et. al. [9] proposed the
ﬁrst RSA based threshold proxy signature scheme in which
author described six requirements that should be satisﬁed by
a secure (t, n) threshold proxy signature scheme.
1)
Secrecy: Original signer’s private key must be kept
secret with original signer and it should not be
possible to derive it by any proxy signer, not even
by cooperation among them.
2)
Proxy protected: Partial proxy signature of a des-
ignated proxy signer can only be generated by him.
Even original signer can not be masquerade partial
proxy signature. Partial proxy signature key must not
known to original signer.
3)
Unforgeability: Only t or more designated proxy
signers can cooperatively generate valid proxy sig-
nature.
4)
Non repudiation: Once t or more proxy signers
cooperatively generate valid proxy signature, they can
not deny their signatures and original signer also can
not deny delegating the signing power to the proxy
signers.
5)
Time constraint: The proxy signature key can be
used during the delegation period. After this period,
proxy signature generated by proxy signer will be
considered to be invalid.
6)
Known signers: Scheme must be able to identify the
actual group of signers from proxy group in threshold
scheme.
Wang [10] analyzed the security aspects of Hwang’s
scheme and commented that Hwang’s scheme was unable to
fulﬁll the security requirements of threshold proxy signature
system. Number of publications of the threshold proxy signa-
ture scheme based on RSA has been reported [11][12][13][14],
that modiﬁed the Hwang’s scheme and removed various se-
curity weakness. The most recent publication [15] adds a
new feature by allowing n proxy signers, renew their own
proxy shares periodically without changing the secret. In
the proposed scheme the combiner need not be trusted. The
veriﬁer can independently verify if the combiner has done
untrustworthy operation on proxy signature. All the above
proposed schemes require trusted combiner and trusted original
signer for generation and veriﬁcation secret shares.
In this paper, we propose an improved threshold scheme
based on RSA algorithm [16]. In the proposed scheme, n
proxy signers execute the Boneh and Franklin protocol [17]
to generate RSA based signature scheme modulo N, whose
prime factors are not known to proxy signers and they do not
49
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

TABLE I. CONVENTION AND NOTATION
C
Combiner
D
Proxy signature key to generate proxy signatures
Di
Additive share of D for Si
E
Proxy veriﬁcation key to verify proxy signatures
N
RSA modulo
S
Proxy signature on message m
Ri
Random number
S0
Original signer
Si
ith Proxy signer (1 ≤ i ≤ n)
T
Subset of n Proxy Signers who cooperatively generate
signature on message m
V
Veriﬁer
d0
Original signer’s private key
di
ith Proxy signer’s private key
e0
Original signer’s public key
ei
ith Proxy signer’s public key
ki
Partial proxy signature key of Si to generate partial
proxy signature
m
message to be signed
n
Number of proxy signer
ri
Random number
si
Partial signature of Si on message m
t
Threshold number, (1 < t ≤ n) of proxy signers
require to generate proxy signature on message m
w
warrant generated by S0
φ(N)
Euler totient function
∥
concatenation of bit strings
know φ(N). Each proxy signer will derive its additive share
Di for Proxy signature key D without revealing it to others,
such that D = D1 + D2 + ... + Dn. These shares are used to
compute partial proxy signature, which are used to generate
proxy signature S later on the need of trusted combiner has
been removed in the proposed scheme.
The rest of the paper is organized as follows. Hwang’s
scheme is reviewed in Section II. Section III describes the
weakness of Hwang’s scheme. In Section IV proposed im-
proved threshold proxy signature scheme is presented which
is analyzed in Section V. Finally, the paper is concluded in
section VI.
II.
REVIEW OF HWANG’S SCHEME
Let S0 denote the original signer and S1, S2.....Sn be n
proxy signers. C is a signature combiner and V is a signature
veriﬁer. Let Ni = pi ∗ qi be a public RSA modulus for Si,
where pi and qi are two secret large prime numbers for i= 1,
2, 3,..., n. Each of the proxy signers Si has its own public
key ei and private key di such that di ∗ ei = 1modφ(Ni).
Let d0 and e0 be the private and public key of original signer
and w is be a warrant generated by S0. The warrant includes
delegation period for validity of proxy signature, the proxy
signers’ identities and identity of the original signer. Other
notations and conventions are shown in Table I.
Hwang’s scheme consists of three phases which are shown in
Figure 1 :
A.
Proxy sharing phase: The original signer generates
share of proxy signature key D.
B.
Proxy signature issue phase: Proxies generate partial
proxy signatures which, after combining, will create
proxy signature on message and
C.
Veriﬁcation phase: Proxy signature is veriﬁed by
proxy veriﬁcation key E.
A. The Proxy Sharing Phase
The original signer S0 delegates his signing capability to
n proxy signers as follows:
Figure 1. Three phase of Hwang’s Scheme
1)
S0
computes
D
=
dw
0 modφ(N0)
and
E
= ew
0 modφ(N0) as proxy signature key and
proxy veriﬁcation key respectively. S0 publishes w,
E, and (w ∥ E)d0modN0.
2)
S0 generates partial proxy signature key ki, shares
of secret D for corresponding proxy signer Si, using
Shamir’s secret sharing scheme [18]. For this, S0
selects a polynomial
f(x) = D + R1x + .... + Rt−1xt−1modφ(N0) (1)
of degree (t−1), where R1, R2, .....Rt−1 are random
numbers chosen by S0. Then, S0 computes
ki = f(i)
(2)
for
Si,
where
i
=
1, 2, ...n
and
sends
(ki
d0modN0∥ki)eimodNi to Si on public channel.
3)
After receiving the data from S0, Si computes
ki
by
ﬁrst
decrypting
it
with
its
private
key
di and then by public key e0 of S0 as ki
=
(((ki
d0modN0∥ki)eimodNi)dimodNi)e0modN0,
where i = 1, 2, .....n.
B. The Proxy Signature Issue Phase
To sign a the message m on behalf of original signer S0,
any t or more proxy signers form a subset T of proxy signers.
They generate proxy signature as follows:
1)
Each proxy signer of subset T computes its partial
proxy signature si on message m as follows:
si = mLikimodN0
(3)
where, i indicates the ith proxy signer from subset
T. Li is Lagrange interpolation coefﬁcient given by
Li =
Y
i,jϵT,j̸=i
−j
i − j
(4)
and sends si∥sidimodNi to combiner C.
50
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

2)
Combiner veriﬁes si using public key ei of Si and
then computes proxy signature S as follows:
S =
n
Y
i=1
simodN0 = mDmodN0
(5)
C. The Veriﬁcation Phase
After receiving proxy signature S, the veriﬁer V veriﬁes it
as follows:
1)
V receives w, E, (w ∥ E)d0modN0 from S0 and ver-
iﬁes it using (w∥E) = ((w∥E)d0modN0)e0modN0.
V ﬁrst checks the validity of E by checking the
valid period mentioned in the warrant. If the period
has expired then E is invalid and it can not be used
for veriﬁcation.
2)
If E is valid, then V
computes SEmodN0 and
checks whether it is equal to m.
SEmodN0 = m
(6)
Since
SEmodN0 = (mD)
EmodN0
= md0
we0
wmodN0
= m(d0e0)wmodN0 = m
, and
3)
The actual proxy signers identity can be identiﬁed
using his public key ei on sidimodNi.
III.
SECURITY ANALYSIS BY WANG
Wang [10] claimed that Hwang’s scheme was not able to
satisfy the security requirements of threshold proxy signature
scheme and indicated various security weaknesses in it, such
as:
•
Secrecy:
Proxy
signers
from
the
set
T
can
cooperatively
compute
proxy
signature
key
D
and (DE − 1), factors of φ(N0). Knowing these
factors is equivalent to factoring N0 [21]. Finally,
with the factors of N0, the proxy signers can
compute the value of φ(N0). Once factors of φ(N0)
are calculated, it is easy to calculate d0 by using
d0e0 = 1modφ(N0). Hence, private key of original
signer will not remain secret.
•
Proxy Protected: Original signer knows the partial
signing key ki of corresponding proxy signer Si.
Therefore, he can create the partial proxy signature
si on message m on behalf of Si as ki is just the
share of D created by S0 himself. Another security
weakness is that the proxy signers have to trust on
original signer that given partial proxy signature key
ki is correct for generating valid proxy signature S.
•
Unforgeability: Hwang’s scheme is weak in yet
another aspect that an unauthorized third person can
compute proxy signature S as he can calculate factors
of N0 because (e0w − E) is also a factor of φ(N0).
Using similar strategy as mentioned above, he can
compute d0 as well as D = dw
0 modφ(N0). However,
it is a time consuming process.
•
Non
Repudiation:
D
is
generated
by
original
signer. Therefore, he can create proxy signature
S on message m as mDmodN0 by surpassing
the combiner. Moreover, t proxy signers can also
cooperatively
compute
proxy
signature
without
combiner.
In
such
cases
Veriﬁer
will
accept
a
signature S by checking (SEmodN0 = m). In future,
if such a valid proxy signature S causes dispute
on the identity of signer of message, it can not be
found out as who was responsible for generating
signature, whether the original signer or proxy signers.
•
Known Signer: In Hwang’s scheme, a trusted com-
biner is required. Otherwise, partial proxy signature si
can be altered, replaced or deleted by the combiner.
IV.
PROPOSED SCHEME
The proposed scheme consists of four phases namely (A).
Initialization phase, (B). Proxy sharing phase, (C). Proxy
signature issue phase, (D). Veriﬁcation phase. These phases
are described as follows in Figure 2:
Figure 2. Four phases of the proposed scheme
A. Initialization Phase
1)
All n proxy signers combinedly generate a number
N, which is the product of two large primes by
employing Boneh and Franklin protocol [17]. N is
made public but nobody knows the factors of N at
the end of protocol. Following steps are followed to
generate N :
Participants secret and Distributed Sieving:
a)
Each proxy signer Si randomly picks up two
secret numbers xi, yi.
b)
All proxy signers determine whether or not
the sums X = Pn
i=1 xi , Y = Pn
i=1 yi are
not divisible by any prime number between
0 and some bound B1.
51
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

Computation of N: All proxy signers will compute N
without reveling any information about their secrets
xi and yi . They agree on a big prime number M >
N and an element g of high order in Z∗
N and use
BGW protocol [19] as follows to generate N.
N =
n
X
i=1
xi
n
X
i=1
yi = X ∗ Y modM
(7)
Trial Division: This is required to ensure that N is not
divisible by any number between B1 and B2, numbers
which are agreed by all the parties.
Primality Test: Extended Fermat’s Primality test is
performed to check whether N is a product of two
prime numbers or not. If it is not, then protocol is
repeated from the ﬁrst stage with new values of xi,
yi until it passes the primality test.
2)
Computation of φ(N)
a)
Each proxy signer Si will calculate φi, the
share of φ(N) as follows:
φi = {N−xi−yi+1
if i=1
−xi−yi
if i>1
(8)
and
sends
it
to
S0
as
(φi∥φdi
i modNi)e0modN0.
b)
After receiving data from all Si, the original
signer extracts φi by decrypting it with the
private key d0 of original signer and public
key ei of corresponding ith proxy signer. S0
then computes φ(N) as:
φ(N) = Pn
i=1 φi
= N − Pn
i=1 xi − Pn
i=1 yi + 1
= (X − 1)(Y − 1)
Note that proxy signers can not determine
φ(N) unless all proxy signers combine their
shares φi for the generation of φ(N). There-
fore φ(N) is (n-1) private.
B. Proxy Sharing Phase
This phase involves generation of proxy signature key D
and its corresponding veriﬁcation key E, by S0 and generation
of partial proxy signature key ki by Si. Note that ki is
generated by S0 in Hwang’s scheme.
Proxy Signature Key Generation:
1)
S0 chooses a random number a, where aϵZM and
gcd(a, φ(N)) = 1, and calculates b = a−1modφ(N)
using Euclids extended algorithm.
2)
Original signer then computes proxy signature key D
and proxy veriﬁcation key E, as follows:
D = bwmodφ(N), E = awmodφ(N)
(9)
DE = 1modφ(N)
3)
S0 will compute ψ = φ(N)modE and ψ−1modE.
4)
Proxy signature key D remains secret with original
signer, Corresponding veriﬁcation key E is made
public for the veriﬁcation of proxy signature.
5)
S0 publishes w, E, a, ψ, (w∥E∥a∥ψ)d0modN0,
Proxy Signature Key Sharing:
1)
Each
Proxy
signer
Si
receives
the
published
w, E, a, ψ, (w∥E∥a∥ψ)d0modN0,
from
original
signer,
and
veriﬁes
that
(w∥E∥a∥ψ)
=
((w∥E∥a∥ψ)d0modN0)e0modN0
using
public
key e0 of original signer.
2)
Si gets proxy veriﬁcation key E and warrant w,
Therefore, each proxy signer can check the validity of
E by checking the valid period mentioned in warrant
w. If E ﬁnds it to be valid, then proxy signer will
accepts it to derive shares of proxy signature D.
Otherwise, he will reject it and request S0 for a valid
warrant and signature. Else, he stops this protocol.
3)
Each Si will calculate the additive share Di of proxy
signature key D using Boneh and Franklin protocol
[17].
Each Si will compute Di as follows:
Di = {(1−φ1ψ−1)/E
if i=1
−(φiψ−1)/E
if i>1
(10)
Finally, D is calculated by S0 as follows:
D = Pn
i=1 Di =
(1 − φ1ψ−1)/E + Pn
i=2(−φiψ−1)/E.
Calculated value of D is kept secret with S0.
Partial Proxy Signature Key Generation: Proxy signers
compute their own partial proxy signature keys ki, as the share
of actual proxy signature key D. However, D is not known to
the proxy signers. ki is calculated by Si using following steps:
1)
Each Si selects a random polynomial fi(x)ϵZM of
degree (t − 1), with fi(0) = Di. Let fi(x) be
fi(x) = Di + ri,1x + ..... + ri,t−1xt−1
(11)
Si
proxy
signer
computes
fi,j
=
fi(j)
which
is
the
share
of
Di
for
Sj
and
sends
(fi,j ∥ fi,j
dimodNi)
ejmodNj
to
Sj
for
1 ≤ j ≤ n on the public channel. Si broadcasts
ci,j = gri,jmodN for j = 0, 1...., (t-1) to others.
2)
Sj veriﬁes validity of the share fi,j received from Si,
using following formula :
gfi,j = gfi(j) = gDi+ri,1j+....+ri,t−1jt−1modN
= gDi.gri,1j.....gri,t−1jt−1modN
= Qt−1
k=0 cjk
i,kmodN
If veriﬁcation fails, then Sj sends error message to
the original signer.
3)
Partial proxy signature key ki for Si is calculated as
ki =
n
X
j=1
fj(i)
(12)
ki is kept as secret by Si.
4)
The above computation of ki, as done by correspond-
ing proxy signer Si, is same as the one obtained by
original signer S0 in Hwang’s scheme from polyno-
mial f(x) = D + R1x + .... + Rt−1xt−1 of degree
(t-1) having f(0) = D and ki = f(i). The group of
n proxy signers can obtain a polynomial f(x) of at
most (t − 1) degree in the following form :
52
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

f(x)
= Pn
j=1Di + (Pn
j=1rj,1)x + ...........
.. + (Pn
j=1rj,t−1)xt−1
= D + R1x + ...... + Rt−1xt−1
ki = f(i)
C. Proxy Signature Issue Phase
1)
Each proxy signer Si computes
σi = Li ∗ kimodM
(13)
for i = 1, 2, ..., n. Li is Lagrange interpolation
coefﬁcient which is calculated as follows:
Li =
Y
i,jϵT,j̸=i
−j
i − j modM
(14)
σi is kept secret by corresponding proxy signer Si.
2)
To sign the message m, proxy signers Si, from the set
T, will sign on behalf of original signer by generating
his partial proxy signatures si on m as follows:
si = mσimodN
(15)
where iϵT
3)
Each proxy signer computes hi = gσimodN, which
will be used to verify the signature shares generated
by proxy signers at veriﬁcation stage.
4)
Si
publishes
its
partial
signature
si,
hi
and
(si∥hi)dimodNi.
5)
Now a combiner (not necessary to be a trusted one)
or any one proxy signer from group of n proxy
signers, will combine all partial signatures to generate
proxy signature S by collecting si’s, and calculates as
follows:
S =
Y
iϵT
simodN
(16)
=
Q
iϵT mLikimodN
=
m
P
iϵT DimodN
=
mDmodN The combiner publishes message m with
its signature S and (si∥hi)dimodNi(iϵT) to the
veriﬁer.
D. Veriﬁcation Phase
To verify the signature S on message m, the veriﬁer V will
carry out the following steps:
1)
The
veriﬁer
V
receives
w, E, a, ψ, (w∥E∥a∥ψ)d0modN0,
from
S0
and
veriﬁes
that
(w∥E∥a∥ψ)
=
((w∥E∥a∥ψ)d0modN0)e0modN0.
Veriﬁer
will
also check the validity of E by checking the valid
period mentioned in the warrant. If the period
has expired, E is invalid and can not be used for
veriﬁcation.
2)
The veriﬁer V also receives (si∥hi)dimodNi(iϵT).
He retrieves si by decrypting with the public key ei
of Si and veriﬁes partial signatures as
Dlogmsi = σi
(17)
= Dlogg(gsi)
= Dlogg(hi)
3)
After verifying partial signature, V will verify proxy
Signature S using E. Finally, the message m is
retrieved as
SEmodN = mDEmodN = m
(18)
V.
SECURITY ANALYSIS
In this section, it is shown that the proposed scheme
satisﬁes all security requirements of threshold proxy signature
scheme.
1)
Secrecy: In Hwang’s scheme, proxy signature key D
is computed with the original signer’s private key d0,
as
D = dw
0 modφ(N0)
which can be cooperatively computed by proxy sign-
ers. Wang explained that knowing D and (DE − 1),
it is easy to calculate d0 with d0e0 = 1modφ(N0).
In our scheme, proxy signature key D is computed
with a new randomly selected number b by S0 as
follows.
D = bwmodφ(N)
Original signer’s private key d0 remains secret with
original signer and it is not shared with others in any
phase in the proposed scheme.
2)
Proxy Protected: Proxy protection requires that only
a designated proxy signer Si can generate his partial
proxy signature si. However, in Hwang’s scheme it
was found that partial proxy signature key ki was just
a share of D generated by the original signer S0 and
it not derived from private key di of proxy signer Si.
Hence, ki is known to original signer. Therefore, he
can compute si which is partial signature of ith proxy
signer. In Hwang’s scheme, original signer needs to
be trusted one for sending signing key to proxy signer
Si. The proposed scheme does not require a share of
D from trusted original signer.
In the proposed scheme, no one else can generate
valid partial proxy signature si because it is computed
using ki as si
= mLi∗kimodN, which remains
secret with respective proxy signer Si. In our scheme
partial proxy signature key ki is derived by ith proxy
signer and ki remains unknown to original signer.
The proposed scheme require n(n − 1) + n addi-
tional transmission for generation of ki. In Hwang’s
scheme, n transmission are required for generation
of ki. Hence, original signer can not forge the partial
proxy signature of Siin our scheme.
3)
Unforgeability: A valid proxy signature is generated
by the cooperation of t or more proxy signers. A non
designated third party can not forge proxy signature
S as he can not derive D. In the Hwang’s scheme,
original signer S0 (who knows D), can forge a signa-
ture on message m as S = mDmodN. Veriﬁer will
accept a proxy signature S just by checking whether it
satisﬁes the equation SEmodN = mDEmodN = m
or not.
In the proposed scheme, the veriﬁer V needs si
for veriﬁcation of the partial proxy signature of
the corresponding proxy signer at veriﬁcation stage.
53
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

Hence, scheme collects all partial proxy signature si
at veriﬁcation stage from a combiner. The combiner
need not be trusted party. The veriﬁer at later stage
can ﬁnd out if the combiner has modiﬁed or delete
any partial signature. Original signer can not compute
partial signature si because he does not know ki
to calculate si
= mki∗Li, which is required at
veriﬁcation stage.
4)
Non Repudiation: Each proxy’s partial signature si
is encrypted by its private key di which is com-
puted by proxy signer Si. Hence he can not deny
the existence of proxy signature on signed message.
Original signer can not deny delegating the sign-
ing right as he publishes warrant w in the form
(w∥E∥a|ψ)d0modN0 which is encrypted using its
private key d0.
5)
Known Signer: For internal auditing, combiner need
not be trusted in the proposed scheme. It combines
partial signatures of proxy signers. If combiner tries
to modify or delete si, it will be detected by verifer at
veriﬁcation phase, as it is encrypted with the proxy’s
private key.
6)
Time Constraint: Original signer publishes war-
rant w with proxy veriﬁcation key E in the form
(w∥E∥a|ψ)d0modN0. Verifer will check the validity
of E in the delegation period provided in warrant w
to check whether E is the valid proxy veriﬁcation key.
VI.
PERFORMANCE COMPARISON
The performance comparison of the proposed scheme with
the Hwang’s scheme is shown in Table II. It can be noted that
proposed scheme has merits of proxy protection since only
a designated proxy signer Si can generate his partial proxy
signature si; non designated third party can not forge proxy
signature This also achievers non-repudiation. In addition,
the proposed scheme does not require trusted original signer
and trusted combiner. However, the proposed scheme requires
additional initialization phase. Thus, it can be seen that the
TABLE II. COMPARISION OF PROPOSED SCHEME WITH HWANG’S
SCHEME
S.No
Security
Requirement
Hwang’s
Scheme
Our
Scheme
1
Secrecy
No
Yes
2
Proxy Protected
No
Yes
3
Unforgeabilty
No
Yes
4
Non Repudiation
No
Yes
5
Time Constraint
Yes
Yes
6
Known Signer
Yes
Yes
7
Trusted Combiner
Yes
No
8
Secure Channel
No
No
proposed scheme has numerous cryptoanalytical merits as
compared to that of Hwang’s method.
VII.
CONCLUSION
In this paper, we have proposed a new threshold proxy
signature scheme based on RSA, which uses the Boneh and
Franklin protocol and Hguyens scheme for generation of
shared RSA keys. It has been shown that the proposed scheme
signiﬁcantly removes the weaknesses found by Wang in the
Hwang’s scheme which is also based on RSA. The marginal
increase in computational complexity in the proposed scheme
is compensated by reduction in the cost of trusted combiner
required during signature generation phase. Therefore, the
proposed scheme can be used as potential candidate for impli-
mentation in proxy signature applications.
REFERENCES
[1]
M. Mambo, K. Usuda and E. Okamoto , ” Proxy signature: delegation
of power to sign message” IEICE Transaction on Fundamental, vol
E79-A, pp.1338-1353, 1996.
[2]
S. Kim, S. Part and D. Won, ” Proxy signature, revisited,”International
Conference on Information and Communication Security ICICS’97,
China Beijing, pp. 223-232, 1997.
[3]
T. Elgamal, ” A public key cryptosystem and signature scheme based on
discrete logarithms,” IEEE Transaction on Information Theory, Vo1.31,
pp. 469-472, 1985.
[4]
C. Schnoor, ” Efﬁcient signature generation by smart card,” Cryptogra-
phy, vol.4, pp. 161-174, 1991.
[5]
K. Zang, ” Threshold proxy signature schemes”, Information Security
Workshop ISW97, California, USA, pp.282-290, 1997.
[6]
H. M. Sun, ” Threshold proxy signatures,” Computer and Digital
Techniques, vol. 146, pp.259-263, IEE preceedings, 1999.
[7]
M. S. Hwang, I. C. Lin and J. L. Lu,” A secure nonrepudiable threshold
proxy signature scheme with known signers”, International Journal
Informatica, Vol. 11, pp. 1-8, 2000.
[8]
Z. Shao, ” Improved threshold proxy signature schemes”, Computer
Standards and Interfaces, vol. 27, pp. 53-59 , 2004.
[9]
M. S. Hwang, J. L. Lu and I. C. Lin, ” A practical (t, n) threshold proxy
signature scheme based on the RSA cryptosystem”, IEEE Transactions
on Knowledge and Data Engineering, Vol. 15, pp.1552-1560. 2003.
[10]
G. Wang, F. Bao, J. Zhou and R. H. Deng,” Comments on a practical (t,
n) threshold proxy signature scheme based on the RSA cryptosystem,”
IEEE Transactions on Knowledge and Data Engineering, Vol. 16,
pp.1309-1311, 2004.
[11]
Y. J. Geng, H. Tian and F. Hong, ” A modiﬁed and practical threshold
proxy signature scheme based on RSA”, Advance Communication
Technology, 9th conference Vol. 3, pp. 1958-1960, 2014.
[12]
Y. Zhang, D. W. Yue and H. Zhang, ” An improved (t, n) threshold
proxy signature scheme with fault tolerance based on RSA”, JICIC,
Vol 6, pp. 3205-3218 2010.
[13]
Z. W. Tan and Z. J. Liu, ” Cryptanalysis and Improvement on a
Threshold Proxy Signature Scheme” Journal of Information Science
and Engineering, vol. 25, pp. 619-631 2009.
[14]
Samaneh Mashhadi, ”A Novel Non-repudiable Threshold Proxy Signa-
ture Scheme with Known Signers”, International Journal of Network
Security, Vol.15, No.4, pp.274-279, July 2013.
[15]
Raman Kumar, Harsh Kumar Verma and Renu Dhir, ” Analysis and
Design of Protocol for Enhanced Threshold Proxy Signature Scheme
Based on RSA for Known Signers” Wireless Personal Communications,
vol. 80 pp. 1281-1345. 2014.
[16]
R.L. Rivest, A. Shamir and L.M. Adleman,” A method for obtaining
digital signatures and public-key cryptography” Communication of the
ACM, Vol. 21, pp. 120-126, 1978.
[17]
D. Boneh and Matthew Franklin. ,”Efﬁcient generation of shared RSA
keys,”, Advances in Cryptography-CRYPTO ’97, Springer- Verlag 1233
pp: 425-439, 1997.
[18]
A. Shamir, ”How to share a secret?” Communication of the ACM, Vol.
22, pp. 612-613, 1979.
[19]
Ben-Or, M. Goldwasser and Wigderson , ” Completeness theorems for
noncryptographic fault-tolerant distributed computation,” Proceeding of
the 20th Annual ACM Symposium on Theory of Computing Chicago,
I11, May 2-4, Newyork, pp. 1-10, 1998.
[20]
H. L. Hguyen,” RSA threshold cryptography” Dept. of Computer
Science, University of Bristol, UK, 2005
[21]
N. Koblitz, ” A Course in Number Theory and Cryptography”, Springer-
Verlag, 1994.
54
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-427-5
SECURWARE 2015 : The Ninth International Conference on Emerging Security Information, Systems and Technologies

