A Distributed Scheduling Algorithm to Improve Lifetime in Wireless Sensor 
Network based on Geometric Placement of Sensors with Coverage and 
Connectivity Constraints 
 
Diery Ngom + *                     Pascal Lorenz +                   Bamba Gueye * 
                  diery80@yahoo.fr                lorenz@ieee.org                  bamba.gueye@ucad.edu.sn 
 
University of Cheikh Anta Diop *             University of Haute Alsace + 
Dakar, Senegal                         
           Colmar, France 
 
 
Abstract – Wireless Sensors Network (WSN) are 
generally used in hostile environment and have several 
resource constraints such as limited energy, limited 
memory, limited communication capacities, etc. These 
limitations can cause changes in topology, isolation of 
sensors nodes, network partitioning, and loss of 
communication links. The results are the reduction of 
network lifetime and the deterioration of the coverage 
and 
network 
connectivity. 
Therefore 
placement 
strategies of sensors nodes and sleep/wake-up policy 
should be planed in a way to improve their lifetime 
while maintaining full coverage of the monitored 
region and optimal network connectivity. This paper 
proposes a novel algorithm that reduces the energy 
consumption under coverage and network connectivity 
constraints. The obtained results show that sensors 
nodes can save up to 30% of their energy with respect 
to previous works. 
 
Keywords 
– Wireless Sensor Network; network 
lifetime; coverage; network connectivity. 
I. 
INTRODUCTION 
   WSN has inspired tremendous research in the scientific 
and industrial communities in recent years. Advances in 
wireless communication and microelectronic mechanical 
systems have enabled the development of low cost, low 
power, multi-functional, tiny sensor node which can sense 
the 
environment, 
perform 
data 
processing 
and 
communicate each other over short distances. A WSN is 
an ad hoc network composed of many sensors nodes 
deployed either randomly or deterministically over a 
geographical region of interest and communicating via 
wireless links. Theses sensors can also collect data from 
the environment, do local processing and transmit the data 
to a sink node or base station via multipath routing. A 
wide range of potential applications have been envisioned 
using WSN such as environmental conditions monitoring, 
wildlife 
habitat 
monitoring, 
security 
surveillance, 
industrial diagnostic, agricultural of precision, improve 
health care, etc. Given their small size, low cost and 
deployment generally in hostile or difficult access areas, 
the sensors have severe resource constraints such as a 
limited energy, so a network lifetime limited, limited 
memory, limited bandwidth, limited computation and 
communication capacities, etc. These effects generate 
changes in topology, isolation of nodes, network 
partitioning, etc., so that they can reduce the network 
lifetime and degrade the coverage of the monitored 
region, and the network connectivity. Many related works 
are proposed in recent years to address these issues. The 
most important concern issues for optimizing network 
lifetime, sensors placement, coverage, and network 
connectivity. Placement methods, coverage and network 
connectivity problem are primarily aimed at ensuring full 
or acceptable coverage and optimal network connectivity. 
The optimization of the network lifetime methods focalize 
more on the extension of the lifetime while minimizing 
the energy consumption in the network; and especially not 
allow at the same time to ensure a total coverage of the 
monitoring area and a network connectivity. However, 
issues for optimizing the network lifetime, guaranteeing 
full coverage of the monitored region, and maintaining 
optimal network connectivity are usually conflicting in 
many applications of WSN such as security surveillance, 
agricultural of precision, habitat monitoring, etc. These 
applications require full coverage of the monitored region 
and optimal network connectivity while maximizing the 
network lifetime.  
We propose in this paper a Distributed Scheduling 
Medium Access Control (DSMAC) algorithm to optimize 
the network lifetime while maintaining a full coverage of 
the monitored region and optimal network connectivity. 
First, we propose a novel network placement method 
which minimise the number of require sensors to ensure: 
the entire coverage of the monitored region and optimal 
network connectivity.  Then, based on the geometric 
properties of our placement method, we implement a 
sleep/wake-up policy to improve the network lifetime 
while saving the full coverage of the monitored region and 
the optimal network connectivity. Our proposal is based 
on duty cycle techniques, redundancy of sensing coverage 
and beacon frames sent by each source node before the 
transmission of its data packets. Firstly, we present the 
analytical proof of the full coverage and the network 
connectivity. Secondly, we validate our proposal by 
simulations and compare it with the “TunableMAC” 
protocol [12]. The simulation results show that with 
DSMAC the nodes save about 30% of their energy and 
the received packets by the Sink node is improved relative 
to TunableMAC protocol. 
The remaining of this paper is organized as follows. 
Section II surveys the related works. Section III presents 
our geographic placement method based on grids. Section 
IV presents the DSMAC algorithm and the analytical 
57
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

evaluation. Section V presents the validation of the 
DSMAC algorithm by simulations. Finally, Section VI 
concludes the paper and discusses future works. 
II. 
RELATED WORKS 
   Network lifetime, placement methods, coverage, and 
network connectivity problem are critical issues in WSN. 
A lot of works have been done in recent years by the 
researchers for addressing these issues.  
Akewar et al. [1] discuss the different deployment 
strategies such as forces, computational geometry and 
pattern based deployment. However, they don’t address 
the lifetime issues in their study. With the same goal, 
Ankur et al. [2] present different placement strategies of 
sensors nodes in WSN taking into account the lifetime 
issues. They note that the most objective of placement 
techniques have focused on increasing the area coverage, 
obtaining strong network connectivity and extending the 
network lifetime. A more study of coverage and 
connectivity issues in WSN are presented in a survey by 
Khou et al. [3]. In this survey, the authors motivate their 
study by giving different use cases corresponding to 
different coverage, connectivity, latency and robustness 
requirements of the applications considered. They present 
also a general and detailed analysis of deployment 
problems in WSN. In their analysis, different deployment 
algorithms for area coverage, barrier coverage, and 
coverage of points are studied and classified according to 
their characteristics and properties. Note that, this survey 
is good references to have an overall view of coverage 
and connectivity issues in WSN. However, note that in 
their survey the network lifetime problem are not 
addressed while this problem is often in conflict with the 
coverage and connectivity problems. Zhu et al. [4] address 
the issues of coverage, connectivity, and lifetime in WSN; 
and they distinguish two coverage problems: static 
coverage and dynamic coverage. After the study of 
coverage problem, they propose a scheduling mechanism 
for sensors activities in order to reduce the energy 
consumption in the network and they analyze at the same 
time the relationship between coverage and network 
connectivity. Nevertheless, note that placement problem is 
not study and take account in their proposal. With the 
same goal, another approach which take account the 
sensors placement method based on territorial predator 
scent marking behavior is proposed by Abidin et al. [5]. 
The main goals of their proposal are: to achieve maximum 
coverage, to reduce the energy consumed and to guaranty 
network connectivity. However, note that in their 
approach the full coverage of the monitored region is not 
guaranteed. Also in this context, Mulligan et al. [6] 
present different coverage protocols that try to maximise 
the number of sensor which put into sleep mode while 
guaranteeing k-coverage and network connectivity. 
Singaram et al. [7] present also a recent study in which 
they propose a self-scheduling algorithm that extends the 
network lifetime while minimizing the number of active 
sensors. Note that in these two studies, connectivity issues 
are also not addressed by these authors. A recent survey 
for sensors lifetime enhancement techniques in WSN is 
presented by Ambekar et al. [8]. Nevertheless, as some 
previous authors in the related works, coverage and 
connectivity issues are not addressed by these authors.  
With the same goal for optimizing the network lifetime in 
WSN by scheduling the sensors activities, more energy 
efficient MAC protocols based on duty cycle are 
developed. In fact, the duty cycle approach is the main 
feature of synchronous and asynchronous MAC protocols 
where any node can alternate between active and sleep 
states in order to save its energy. In this approach, nodes 
can only communicate when they are in active state. 
Several MAC protocols such as “S-MAC”, “T-MAC”, 
“B-MAC”, and “X-MAC” based on duty cycle approach 
were proposed respectively by Kaur et al. [9], Kakria et al. 
[10], and Ullah et al. [11]. In the S-MAC protocol, nodes 
alternates between active and sleep periods. During active 
periods, the node radios are turned ON to communicate 
and during sleep periods the node radios are turned OFF 
to save energy. However this protocol has some 
limitations. Firstly, nodes broadcast their schedule to all 
neighbor nodes using the synchronization packet; so that 
this mechanism is not efficient in energy consumption. 
Another limitation of this protocol is that, all the border 
nodes incorporate the schedules and keep their radios ON 
during all their active periods. T-MAC extends S-MAC 
and provides several improvements. In T-MAC, the S-
MAC limitations were overcome by including an adaptive 
duty cycle where the length of the active period is varied 
according to traffic. Therefore, this protocol significantly 
increases the network lifetime by downsizing the length of 
the active periods. However, such as S-MAC, in this 
protocol 
nodes 
broadcast 
their 
schedule 
to 
all 
communication neighbors using the synchronization 
packet. Thus, this mechanism is not efficient in energy 
consumption and is not suitable in a network with 
redundancy coverage. B-MAC is a MAC protocol which 
adopts the LPL (Low Power Listening) technical. In this 
technical, the nodes periodically switches between active 
and sleep periods. The active period is usually very short, 
just allows the node to sense the channel. B-MAC 
provides good energy efficiency. Nevertheless, since this 
protocol uses CSMA/CA (Carrier Sense Multiple 
Access/with Collision Avoidance) for the medium access, 
it suffers flow problem at the high load due to the 
collisions and the random backoff periods. Another 
problem of B-MAC is the over-listening of the preamble 
by all neighbor nodes because even if the packet is 
intended only for a particular node (next hop), all other 
neighbor nodes must still active to listen the preamble. X-
MAC is another MAC protocol based on duty cycle 
approach. This protocol is an improvement of B-MAC to 
solve the over-listening problem. Instead of transmitting a 
long preamble, X-MAC divides it into a series of small 
packets preamble, each of them containing the receiver's 
address packet to be transmitted. Compared to B-MAC, 
X-MAC improves energy efficiency and reduces the time 
using the shortcut preamble. However, X-MAC may 
choose only one next hop (router) to move the packet to 
its destination, even if there are multiple paths in the 
network whose exploitation could make robustness in the 
58
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

transmission. Another limitation of X-MAC is the low 
flow problem. Indeed, when the load is high this remains 
no resolved due to the use of CSMA/CA mechanism for 
the medium access.  
Furthermore, Boulis [12] proposes the TunableMAC 
protocol based also on the duty cycle approach. As in 
other MAC protocols note that, in TunableMAC the 
CSMA/CA mechanism is used for the medium access. It 
is worth noticing that with his protocol all the nodes are 
not aligned in their active period, so that each sender 
transmit an appropriate train of beacon frames to wake up 
potential receivers before transmitting each data packet. 
Thus, with respect to this mechanism all neighbour that 
act as potential receivers of a given sender will be 
awakened when they received the beacon frame from the 
sender. Therefore, a lack of efficiency is noted in term of 
energy consumed. However, TunableMAC is very 
flexible and can be used to make comparisons with new 
distributed MAC algorithms developed for WSN.  
III. 
GOEGRAPHIC PLACEMENT OF SENSOR NODES 
A. Asymptions and notations 
We represent the WSN by a graph


,
G
 V E
where V
represents all vertices (nodes of the network) and 
2
E
V

represents the set of edges giving all possible 
communications. There is an ordered pair 

2
,
u v
 E
if the 
sensor node u is physically capable to transmit messages 
to the sensor node v . In this case, sensor node v is located 
in the communication range of sensor node u . Thus, each 
node has its key communication range noted
RC
that 
allows it to communicate with others sensor nodes. We 
assume that all sensor nodes have equal communication 
ranges. Each sensor node also has a sensing range noted
RS
that allows it to sense and capture data from the 
environment. We also assume that all sensor nodes have 
the same sensing ranges. All the sensor nodes v located 
inside the communication range of a given sensor node u
are called neighbour nodes of sensor node u   and are 
noted
N  
u . A bidirectional wireless link exists between a 
sensor node u and every neighbour
 
v
N
u

and is 
represented by the directed edges 
, 
u v
and 
,v u 
 E
. 
Note that all the neighbour nodes can communicate 
directly 
each 
other. 
In 
the 
following 
we 
note 


1
2
,
,...,
M
M
S
S
S

the set of sensor nodes in the WSN. 
We note also    the cardinality of the set M that 
also represents the number of sensor nodes in the WSN. In 
other hand, we assume in our study that all the sensor 
nodes transmit their captured data to a Sink node which is 
the only receiver.  
In this part, we will give the modelling of the wireless 
channel. The performances of a wireless communication 
system are determined based on the communication 
channel in which it operates. In a WSN, modelling of 
communication is very difficult because the sensor nodes 
communicate in low power, and therefore radio links 
nodes are very unreliable. The unit disk model is the 
simplest deterministic model of communication that 
illustrates a unidirectional link between two sensor nodes.  
This model assumes that each sensor node is able to 
transmit its data to any sensor node being in its 
communication range. The communication range of each 
sensor node varies depending on the level of its 
transmission power. Therefore, we can say that two sensor 
nodes u and v can communicate each other if and only if 
the Euclidean distance noted

, 
d u v
between the two 
sensor nodes is less than the communication range
C
R of 
these two sensor nodes. Thus, two nodes
,
u v
 M
can 
communicate if: 


,
C
d u v
 R
 
Regarding the modelling of coverage, we consider in this 
paper coverage of point and coverage of area (region). 
Thus, we say that a sensor node
iS covers a point q
 A
 if 
and only if:  


i ,
S
d
S
q
 R
 
A coverage of surface (sensing coverage) means the total 
surface lying below the range of capture of data at least of 
a given sensor node. Let
iS
 M
a sensor node and note

C Si 
the surface cover by the sensor node
iS , then: 






,
i
i
S
C S
q
A d S
q
R

 

 
The surface covered by a subset of sensor nodes


1
2
,
,...,
C
C
S
S
S
S
M


is then: 




1
C
S
C
i
i
C S
C S




 
For the coverage of area, we say that a sensor node
iS
covers a region A  if and only if for each point q
 A
then: 


i ,
S
d
S
q
 R
 
We finish this part for the modelling of network 
connectivity. Two sensor nodes are said to be connected if 
and only if they can communicate directly (one-hop 
connectivity) or indirectly (multi-hop connectivity) [3]. In 
WSN, the network is considered to be connected if there 
is at least one path between the sink and each sensor node 
in the considered area. Thus, connectivity essentially 
depends on the existence of routes. It’s affected by 
topology changes due to mobility, the failure of nodes, the 
attacks, etc. The results are the loss of communication 
links, the isolation of nodes, the network partitioning, thus 
the coverage of the monitored area can be degrade and/or 
the network lifetime can be decrease. Therefore, 
understanding the network connectivity of a WSN allows 
adapting the communication mechanisms to ensure the 
smooth running of applications. To study it, we will use 
the 
following 
notations 
and 
definitions. 
The 
neighbourhood
N  
u of a sensor node u represents the set 
of neighbour nodes that are within the communication 
range of node u . It is defined by: 
 






2
,
,
C
N u
u v
V
u
v
d u v
R


 


 
59
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

A graph is called k-connected if there are at least k 
disjoint paths between two nodes of this graph. Coverage 
is often related to connectivity in WSN. In order to satisfy 
the conditions of coverage and connectivity, we consider 
in this paper that the communication range
C
R is twice the 
sensing range
S
R . 
B. Sensors placement model based on grids 
We consider the following placement method. 
 
 
 
Figure 1.  Sensor placement model in the monitoring region 
 
According to the deployment of sensors described in the  
Figure 1, the geographical area is partitioned into 
contiguous square grids having the same dimensions that 
equal to c . The sensor node
iS is placed at a given area of 
a grid such that the entire area of the monitoring region is 
covered and the number of necessary sensors is 
minimized. Our geographic placement of sensors presents 
the following advantages:  
1. The number of sensor nodes required to cover 
the whole area is minimized;  
2. The position and the surface cover by each 
sensor node are known and can be respectively 
determined by its coordinates (X, Y) and/or its 
sensing range
S
R . 
3. A 
full 
coverage 
and 
optimal 
network 
connectivity are ensured; 
4. There are redundancies on the sensing coverage 
which will be exploited by our proposal for 
scheduling sensors activities.  
Now, the optimal length of c to ensure full coverage and 
network connectivity of our network placement model can 
be determined based on the sensing range
RS
. This 
sensing range depends on the communication range
C
R
based on our assumptions. Furthermore, 
C
R is determined 
by the transmission power noted TX power and others 
parameters of the radio communication model. Based on 
geometric properties of squares and the placement model 
in Figure 1, the sensing range
S
R can be computed using 
the following equation: 
2
2
2
2
2
S
S
S
R
R
c
c
R
c
c






 
Now, let


1
2
,
,...,
M
M
S
S
S

the set of sensor nodes in the 
WSN and note that each sensor node
iS has (X, Y) 
coordinate in the coordinate system (O, X, Y) as shown in 
the Figure 1, where O is the originate of this coordinate 
system and X, Y represent respectively the X axis and the 
Y axis of the coordinate system. For instance: 
1
3
,
2
2
c
c
S 





,
2
7
,
2
2
c
c
S 





,
3
3
,
2
2
c
c
S 





, and
4
3
5
,
2
2
c
c
S 





. 
We show that, according to our placement method an area 
may be covered by many sensor nodes at the same time; 
this is due to overlapping coverage areas of neighbour 
sensor nodes. To optimize the energy consumption in the 
network, it is necessary to apply sleep/wakeup strategies 
by scheduling sensor nodes activities while maintaining 
the full coverage of the monitored region and optimal 
network connectivity to ensure robustness in the 
communication. 
IV. 
PRESENTATION 
OF 
DSMAC 
AND 
ANALYCAL 
EVALUATION 
A. Overview of DSMAC algorithm 
DSMAC algorithm (Algorithm 1) includes the placement 
method described in Figure 1 and a sleep/wakeup policy 
based on duty cycle approach. It enables to minimize the 
energy consumed by the overall network while 
maintaining a full coverage and network connectivity with 
respect to all sensors. The DSMAC algorithm exploits the 
redundancy of sensing coverage due to our geographic 
placement method. Indeed, according to TunableMAC 
protocol, each sender should transmit a train of beacons 
frames in order to wake up its entire neighbourhood 
before sending any data packets. However, according to 
our DSMAC deployment of sensor nodes, where we have 
sensing coverage redundancies due to our placement 
strategy of sensor nodes, we do not need to wake up all a 
given sensor’s neighbourhood. It is worth noticing that in 
TunableMAC, the set of sensor nodes has equal sleep 
interval and equal listening interval. Put simply, DSMAC 
wakes up only few sensor nodes among a well-chosen 
sensor’s neighbourhood in order to reduce the energy 
consumed during transmission and reception as well as 
mitigates the number of collisions between sensor nodes.  
According to DSMAC, each sensor node uses a 
neighbourhood’s table that contains the ID of neighbour’s 
nodes which is determined by the communication range
RC
. Also, the sensor nodes have different sleep and 
listening intervals. DSMAC addresses the following two 
issues noted in previous studies:  
(i) The set of sender’s neighbours that should wake up 
according to its neighbour’s table;  
(ii) The scheduling of sleeping and listening intervals 
according to the parameters of the duty cycle. 
In order to choose the best possible neighbours of a sensor 
node that enable to minimize the energy consumption 
during transmission while guaranteeing full coverage and 
network connectivity, to taking into account the two 
issues raised above, we consider two types of neighbours 
for each sensor node: “close neighbours” located at a 
60
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

maximum distance of
c 2
from the sender and “remote 
neighbours” located at a distance strictly greater than
c 2
. For a given sender, its neighbour’s receivers are 
only its remote neighbours. Therefore, remote neighbours 
must be woken up and all the remaining sensor nodes 
within its close neighbourhood must be set in sleeping 
mode (line 8 to line 14 of Algorithm 1). If they receive 
other beacons frame, they can decide whether they should 
wake up again to relay packets. Thus, our algorithm 
enables the following benefits: 
1. Save the energy consumed in the network, so that 
the network lifetime will be improved; 
2. Ensure full coverage and network connectivity; 
3. Balance energy consumption in the network; 
4. Reduce collisions that may be due to the CSMA/CA 
mechanism, so that the rate of received packets will 
be improved. 
The Algorithm 1 above describes the DSMAC algorithm 
in pseudo code. 
 
 
Inputs: 
   “c” represents the length c of a given grid 
   “d(X,Y)” represents the Euclidean distance between  X and Y 
   “Neighbor_Table” represents the node’s neighbours table  
   “ID” represents the ID of a given sensor node 
    “
i
B ” represents the beacon frame sent by the source
iS  
Output: 
     A set of active sensor to relay packets and a set of sensor in      
      Sleep mode to save energy 
1: for each sensor node
iS
 M
do 
2:   for each sensor node
j
j
i
S
M
S
S



do 
3:           if


,
2
2
i
j
d
S
S
c

then 
4:             




j ,
i
Insert ID S
Neigbor Table S


 
5:           end if 
6:     end for 
7: end for 
8: for each sensor
iS
 M
which broadcast a beacon
i
B do 
9:   if
S j
 M
receives
i
B and


j
i
ID S
Neigbor Table S



then 
10:            if


,
2
i
j
d S
S
 c
then 
11:           Make
j
S in sleep state until it receive a next beacon
k
B  
12:            end if 
13:      end if 
14: end for 
 
 
Algorithm 1. DSMAC algorithm 
 
As shown in the Algorithm 1 that describes the DSMAC 
algorithm, the lines 1 to 7 of this algorithm enable to 
compute the neighbour table for each sensor node
iS
M

by inserting all the
ID
of its sensors neighbour
j
j
i
S
M
S
S



. After this step, each sensor node 
S j
 M
neighbour of a given sender
iS
 M
will decide if 
it will be switched in Active or Sleep mode based on the 
beacon frame received by this sender (which precede the 
data transmission of the source) and its neighbour table 
(lines 8 to 14). Therefore, the sensor nodes will alternate 
in Sleep and Active mode to save their energy; so that the 
network lifetime will be improved. Note that the full 
coverage and network connectivity will be preserved 
during all the network lifetime. We will give in the 
following part the analytical proof of the full coverage and 
the network connectivity. 
B. Analysis of the full coverage and  network connectivity 
in DSMAC 
In this part, we will present respectively the mathematical 
proof of the full coverage and the network connectivity 
regarding to DSMAC algorithm.  
Consider a sender


,
iS
x y
 M
. As we mentioned in the 
previous sections, before this source
iS transmits its data 
packets, then it broadcast a train of beacon frames noted 
respectively
1
2
,
,...,
i
i
ik
B
B
B
to wake up all the nodes
j
S
belonging to its neighbour table and located at a distance 
strictly greater than
c 2
. These nodes are all the remote 
neighbours of the sender


,
iS
x y
. According to the 
placement method described in the Figure 1 and the 
illustration of remote/close neighbour described in the 
Figure 2, then the coordinate of these remote neighbours 
of 


,
iS
x y are the nodes of the following coordinate:  

 
 
 

,
2
,
,
2
,
2 ,
2
,
2 ,
,
x y
c
x y
c
x
c y
c
x
c y





 

 
 
 

2 ,
2
,
2 ,
2
,
2 ,
,
2 ,
2
x
c y
c
x
c y
c
x
c y
x
c y
c







The coordinate of other close neighbour of the sender


,
iS
x y
which must be making in sleep mode are the 
nodes of the following coordinates: 

 
 
 

,
,
,
,
,
,
,
x
c y
c
x
c y
c
x
c y
c
x
c y
c








. 
Let us consider the sensor node


7
,
S
x y shown in Figure 
2. Its neighbourhood’s table contains ID of the set of the 
following sensor nodes: 


1
2
3
4
5
6
8
9
10
11
12
13
,
,
,
,
,
,
,
,
,
,
,
S
S
S
S
S
S
S
S
S
S
S
S
. 
 
Figure 2.  Illustration of close and remote neighbours of 


7
,
S
x y  
If the sensor node


7
,
S
x y wants to transmit, then the set 
of sensors located to its neighbourhood table which must 
wake up after receiving the beacon frames sent by the 
61
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

sensor node
7
S are: 

1
2
3
6
8
11
12
13
,
,
,
,
,
,
,
S
S
S
S
S
S
S
S
and the 
following sensor nodes 

4
5
9
10
,
,
,
S
S
S
S
should be put in 
sleep mode. According to the Figure 2, the sensor nodes
4
5
9
,
,
S
S
S and
S10
are in sleep modes at the same time 
whereas other sensor nodes belonging to
7
S ’s neighbour 
table are in active mode and maintain the full coverage of 
the network. We show that the areas covered by the 
following sensor nodes
4
5
9
10
,
,
,
S
S
S
S
which are in sleep 
mode, and the one covered by the four active sensor nodes 
located at the vicinity of these sleeping sensors are fully 
covered by the active sensors. Let us consider the sensor 
node
4
S which is in sleep mode (Figure 2), then according 
to the definition of the sensing coverage of this sensor 
node noted

4 
C
S
, we have: 






4
4 ,
2
C S
q
A d S
q
c

 

     (1) 
According to the active sensor nodes
1
2
6
,
,
S
S
S and
7
S
which are around the sensor node
4
S , the sensing coverage 
of each of them is: 






1
1,
2
C S
q
A d S
q
c

 

      (2) 






2
2 ,
2
C S
q
A d S
q
c

 

      (3) 






6
6 ,
2
C S
q
A d S
q
c

 

      (4) 






7
7 ,
2
C S
q
A d S
q
c

 

     (5) 
Note


1
2
7
6
,
,
,
SC
S
S
S
S

. Based on the coverage area 
described in Section III, we have: 










1
2
7
6
C SC
C S
C S
C S
C S

  (6)               
On the other hand, if we compute the Euclidean distance 
between the sensor node
4
S and the sensor nodes
1
2
6
,
,
S
S
S
and
7
S , then we have: 








4
1
4
2
4
7
4
6
,
,
,
,
2
d
S
S
d
S
S
d
S
S
d
S
S
c




   (7) 
Based on the sensing coverage of the sensor nodes 
4
1
2
6
7
,
,
,
,
S
S
S
S
S described respectively in (1), (2), (3), (4), 
(5), and based in (6), (7), we have: 










4
1
2
7
6
C S
C S
C S
C S
C S

    (8) 
Hence based to (8), then the sensor nodes
1
2
6
,
,
S
S
S and
7
S  
provide a full coverage with respect to the area covered by 
the sensor node
4
S . Similarly, we can show that sensors
2
3
8
,
,
S
S
S and
7
S  (resp. Sensors
6
11
12
,
,
S
S
S
and
7
S ) provide 
a full coverage according to the area covered by the 
sensor 
5
S  (resp. sensor
9
S ). Finally, sensors
8
13
12
,
,
S
S
S
and
7
S provide a full coverage with respect to the area covered 
by sensor
S10
. Since the sensor


7
,
S
x y
is chosen 
randomly, we can conclude that the network remains fully 
covered when running the DSMAC algorithm. 
In fact, two sensors
U
S and
V
S are connected if and only if: 


,
2
2
U
V
d
S
S
c

           (9) 
In order to prove the network connectivity, it is sufficient 
to show that all active neighbours of a given sender


,
iS
x y
will be connected to this sender during the 
execution of the DSMAC algorithm. The remote 
neighbours of the considered sender


,
iS
x y are: 




,
1
2
Re
,
2
,
,
2
,
X Y
N
N
mote Neigbor S
S
x y
c
S
x y
c


 


 






3
4
5
2 ,
2
,
2 ,
,
2 ,
2
,
N
N
N
S
x
c y
c
S
x
c y
S
x
c y
c





 






6
7
8
2 ,
2
,
2 ,
,
2 ,
2
N
N
N
S
x
c y
c
S
x
c y
S
x
c y
c





  
If we compute the Euclidean distance between


,
iS
x y
and each of sensor nodes
,
Re
j
X Y
S
mote Neigbor S



, we 
have:  


,
2
2
i
j
d
S
S
c

         (10) 
For instance: 






2
2
2
2
1
,
(
2 )
(2 )
i
N
d
S
S
x
x
y
y
c
c






 


2
1
,
(2 )
2
2
2
i
N
d
S
S
c
c
c




 
Therefore, from (10) and based to (9) which illustrates the 
connectivity condition between two sensor nodes, then all 
sensors
,
Re
j
X Y
S
mote Neigbor S



are connected to the 
sensor node


,
iS
x y . Since the sensor


,
iS
x y is chosen 
randomly, then all active sensors will be connected during 
the execution of DSMAC algorithm. In addition, 
according to the definition of a graph which is k-
connected and according to Figure 2, the network is at 
least 4-connected; therefore, there is an optimum routing 
topology. However, we will not discuss the routing aspect 
in this paper. 
V. 
EVALUATION OF DSMAC ALGORITHM 
We validated our proposal by extensive simulations done 
with “Castalia.3.0” framework [12]. Castalia is a WSN 
simulator for Body Area Networks (BAN) and generally 
networks of low-power embedded devices. It is based on 
the OMNeT++ platform. 
A. Experimental setting 
We consider a field of size equal to (200x200)
2
m . The 
deployment type is static. We run four simulations 
scenario with respectively 40, 80, 120, 160, and 200 
sensors that send their packets to a given Sink. The 
simulation time is set to 400 seconds. We used the 
“CC2420” 
radio 
type. 
The 
“TX 
power”, 
the 
“communication range”, the “sensing range”, and the 
“grid length” are respectively set to 0dB, 20m, 10m, and 
7m. 
For 
the 
application 
test, 
we 
considered 
“ThroughputTest” [12] to send constant data payload of 
2000 bytes with a rate of 5 packets per second to the Sink. 
Note that in our simulation, all nodes are the same “initial 
energy” equal to 18720 Joules (J) corresponding of 2 piles 
AA. 
B. Simulation results 
We compared DSMAC and TunableMAC according to 
different metrics such as the energy consumed, the 
number received packets by the sink and the application 
level latency. We performed extensive simulations by 
considering the same scenarios and the same parameters.  
62
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

 
 
 
Figure 3. Energy-awareness between DSMAC and TunableMAC 
 
 
 
Figure 4. Evaluations of received packets and level latency in DSMAC 
and TunableMAC 
 
The curves illustrated in Figure 3a and Figure 3b show 
respectively the average of energy consumed and the 
average of remaining energy in J for the both algorithms. 
DSMAC outperforms TunableMAC with respect to the 
energy consumed. Indeed, with DSMAC only few 
senders’ neighbours are awakened in contrast to 
TunableMAC where the entire set of a node’s neighbours 
are awakened. Therefore, more actives nodes exist and 
thus the energy consumed is increased. The average of 
energy consumed in the network is roughly equal to 19.18 
J (resp. 27.09 J) for DSMAC (resp. TunableMAC). 
According to DSMAC sensors can save up to 30% of their 
energy compared to TunableMAC.  
Figure 4a (resp. Figure 4b) show the average packets 
received by the Sink (resp. the average application level 
latency in ms). Figure 4a illustrates that DSMAC 
outperforms TunableMAC according to the number of 
packets received by the Sink. The main reason is due to 
the fact that DSMAC algorithm mitigates the number of 
collisions. Furthermore, Figure 4b shows the average 
application level latency. As shown in this figure the 
performance of TunableMAC is lightly upper than 
DSMAC but the upper level latency in these two 
algorithms is less than 166.9 ms, thus the level latency is 
reasonable in DSMAC regarding to the most applications 
for WSN. 
VI. 
CONCLUSION AND FUTURE WORK 
In this paper, we proposed a distributed scheduling 
algorithm based on a geometric placement model in order 
to improve the network lifetime while maintaining full 
coverage 
and 
network 
connectivity. 
After 
the 
implementation of DSMAC, we proved analytically that 
coverage and network connectivity are ensured at every 
time of the network lifetime during the execution of our 
algorithm.  
Simulation results show that DSMAC outperforms the 
TunableMAC protocol with respect to network lifetime 
and the average of received packets by the Sink  
In future work, we investigate a more realistic modelling 
of the communication channel, taking into account the 
path loss and temporal variations. We also intend to make 
new proposals with respect to routing in WSN based on 
our sensor placement model. 
REFERENCES 
[1] M. C. Akewar and N. V. Thkur, “Study of Wireless Mobile 
Sensor Network Deployment,” in International Journal of 
Computer and Wireless Communication,  2012, vol. 2–No. 
4, pp. 533- 541. 
[2] P. Ankur and M. A. Rizvi, “Analysis of Strategies of 
Placing Nodes in Wireless Sensor Networks,” in 
International Journal of Advanced Research in Computer 
Science and Software Engineering, February 2014,  Issue 2, 
Volume 4, pp. 398-402. 
[3] I. Khou, P. Minet, A. Laouiti, and S. Mahfoudh, “Survey of 
Deployment Algorithms in Wireless Sensor Networks: 
Coverage and Connectivity Issues and Challenges,”  in 
International Journal of Autonomous and Adaptive 
Communications Systems, 2014, pp. 1- 24.  
[4] C. Zhu, C. Zheng, L. Shu, and G. Han, “A survey on 
coverage and connectivity issues in wireless sensor 
networks,” 
in Journal of Networks and Computer 
Applications, 2012,  pp. 619-632. 
[5] H. Z. Abidin, N. M. Din, and N. A. M. Radzi, 
“Deterministic Static Sensor Node Placement in Wireless 
Sensor Network based on Territorial Predator Scent 
Marking Behavior,” in International Journal of Computer 
Network and Information Security, December 2013,  
Vol. 5–No. 3, pp. 186-191. 
[6] R. Mulligan, “Coverage in Wireless Sensor Networks: A 
Survey,” in Networks Protocols and Algorithms, 2010, Vol. 
2– No. 2, pp. 35- 41. 
[7] M. Singaram, D. S. Finney, N. K. Sathish, and V. 
Chandraprasad, 
“Energy 
Efficient 
Self-Scheduling 
Algorithm For Wireless Sensor Networks,” in International 
Journal of Scientifique & Technology Research, Janvier 
2014, volume 3, issue 1, pp. 75-78. 
[8] D. V. Ambekar, A. D. Bhoi, and R. D. Kharadkar, “A 
Survey on Sensors Lifetime Enhancement Techniques in 
Wireless Sensor Networks,” in International Journal of 
Computer Applications, December 2014, Volume 107–No. 
19, pp. 22-25. 
[9] J. Kaur, T. C. Aseri, and A.  Kakria, “A survey of locally 
synchronized  MAC protocols in Wireless sensor network,” 
in International Journal of Computer Applications, April 
2014, Volume 91–No. 11, pp. 37- 41. 
[10] A. Kakria and T. C. Aseri, “A Survey on Asynchronous 
MAC protocols in Wireless Sensor Networks,” in 
International Journal of Computer Applications, December 
2014, Volume 108 – No. 9, pp. 19- 22.  
[11] A. Ullah, G. Kim, and J. S. Ahn, “Performance Analysis of 
X-MAC protocol with Collision Avoidance Algorithm,” 
IEEE INFOCOM, 2013, pp. 211- 212. 
[12] A. Boulis, “Castalia: a simulator for Wireless Sensor 
Networks and Body Area Networks”, Version 3.2 User’s 
Manual, March 2011.   
 
63
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-425-1
SENSORCOMM 2015 : The Ninth International Conference on Sensor Technologies and Applications

