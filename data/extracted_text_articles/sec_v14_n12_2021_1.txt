1
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Fraud Detection Using Multilayer Perceptron and Convolutional Neural 
Network   
Omoyele Odeniyi 
Department of Cyber Security 
Federal University of Technology 
Akure, Nigeria 
eoodeniyi@futa.edu.ng 
Oghenerukvwe Oyinloye  
Department of Computer Science 
Ekiti State University  
Ado Ekiti, Nigeria 
oghenerukevwe.oyinloye@eksu.edu.ng 
Aderonke Thompson  
Department of Cyber Security 
Federal University of Technology 
Akure, Nigeria 
afthompson@futa.edu.ng 
  
 
 
Abstract— In recent time, precarious transaction activities have 
attained a systematic daily occurrence, imbuing landed, 
personal and intangible properties. Of all these, credit card 
fraud is the most catastrophic if not detected on time for easy 
retrieval from the perpetrator. So, the threat actor gains 
unauthorized access in order to obtain money. Machine 
learning and data science has revolutionized and enhanced 
prompt discovery of expedient hidden information in data. 
Therefore, in this study, we develop an efficient fraud detection 
framework using non-rule-based approach of Multi-layer 
perceptron (MLP) on a given financial transaction dataset. 
Frauds were correctly predicted and detected. The algorithms 
on the datasets evaluate their respective effectiveness vis-à-vis 
fraud detection in bank transactions. The results are compared 
and evaluated using various evaluation metrics. In addition, we 
explored a 1D-Convolutional Neural Network, leveraging on its 
strength 
of 
less 
computational 
resource 
requirement. 
Observation from the experimental result revealed a desired 
gradual high accuracy.  
Keywords- fraud; credit cards; Multi-layer perceptron; 1D- 
Convolutional Neural Network, Big Data.  
I. 
 INTRODUCTION 
Recent 
information 
technology 
(IT) 
proliferation 
deployed in major financial services by Nigerian banking 
institutions has led to an increase in threats posed to these 
systems. A real time analysis is of utmost importance to the 
finance sector, enhancing its operational mode and outcome 
in a short time frame of fraud occurrence [1]. Debit/Credit 
cards are one of the most common payment methods used 
over the Internet. It was asserted that financial fraud can be 
viewed as an act intended for deception involving financial 
transactions for personal gain purpose [2]. Fraudsters have it 
easier as most transactions do not require the presence of a 
bank account/card holder; stealing relevant customers’ 
details or perform identity theft by posing as the customer at 
point of payments is all that is vital to perpetrating their acts.   
This includes phishing and unsuspecting customers, 
redirection to malicious websites with a hidden act of 
harvesting customers’ banking details and information. 
Credit card fraud is equally viewed as a type of theft and 
fraud done using a payment card, as a fraudulent fund source 
in a transaction. Some security issues are mostly faced by 
banks everywhere, but the prevention of card fraud attracts 
high priority, and this is set to grow with the exponential rate 
of Internet awareness and transactions. Increase in online 
purchases has made criminals take advantage of various 
weak authentication checks to commit credit card fraud [3].  
Models provide a way to mitigate these occurrences, 
protect clients’ transactions and play an essential role in 
payment service providers’ profitability and sustainability. 
All the aforementioned can be achieved using a fraud 
detection system (FDS). FDS is computational analysis 
fraud detection techniques via fraud identification or 
anomaly transactions in swift and proven techniques of 
machine learning as presented in [4]. Modeling of past credit 
card transactions has to do with detecting fraudulent 
transactions via the existing knowledge fraud. This model is 
then used to identify whether a new transaction is fraudulent 
or not in the two major existing fraud methods of physical 
and virtual frauds. Physical fraud is done by stealing a card 
and using it for the payment or purchasing while virtual 
fraud is committed by using someone’s card details through 
the internet for transactions. Further classification of credit 
card fraud is given in Figure 1. Section I deals with the 
introduction of various acts of fraud. A guide to available 
credit card fraud is presented in Section II, while Section III 
gives a detail of related study in the fraud detection domain. 
In Section IV, multilayer perceptron methodology approach 
to fraud detection is extensively discussed. Implementation 
of a feed forward Artificial Neural Network for the machine 
learning approach is presented in Section V in addition to 
Section VI which further shows the implementation with 

2
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
various parameters.  Observations from the proposed model 
and evaluation are given in Section VII with the 
performance of the Logistic regression study based on the 
same dataset. 
 
Figure 1.  Classification of Credit Card Fraud 
II. 
MAJOR METHODS USED TO MITIGATE CREDIT CARD 
There are basically two major forms of mitigating credit 
card fraud; it could be in the preventive or detective mode. 
The 
preventive 
mode 
involves 
blocking 
fraudulent 
transaction at the point of transaction. Such as passwords, 
pin and blocked cards; while the detective mode identifies 
successful fraud transaction through predictive models with 
machine learning approach. 
Traditionally, fraud resolution process usually involves: 
fraud detection, investigation, confirmation, and prevention. 
Therefore, a self-learning computer program automates the 
above processes using various methods. Signature based 
detection method detects fraud traces through the signature 
technology using known patterns or byte sequence; it is 
efficient for known frauds. However, fraudsters have 
continued to manipulate the system by finding creative ways 
to beat signature strings. The anomaly detection method 
comes with the ability to detect both known and novel 
frauds; although, this method is limited by false positive 
error, that is, previously unknown legitimate transactions. 
Consequently, this paper exploits machine learning (see 
Section IV) to detect fraudulent activities as well as 
measuring its performance. 
III. 
LITERATURE REVIEW 
Financial fraud had been a major challenge for corporate 
organizations, government and most specifically businesses 
that utilize information technology. Financial fraud is 
defined as an intentional act of deception involving financial 
transactions for personal purpose gain. Another definition 
for financial fraud is “to take advantage over another by 
false representations” which include “surprise, trickery, 
cunning and unfair ways through which another is cheated” 
[2]. 
Globally, 
fraud 
costs 
some 
financial 
industry 
approximately $80 billion annually while the United States’ 
credit and debit card issuers alone lost $2.4 billion. 
The financial fraud occurrence in any organization 
undermines both the effort and prospects. Financial fraud 
brings about losses owing to theft, distrust in transaction, 
and litigation. These losses owing to fraud are grossly 
detrimental to institutions in which they occur. As advances 
in cloud technology plums and cyber-security measures are 
not commensurate, there exists high possibility of financial 
fraud bound to threaten businesses worldwide. Detection of 
financial fraud had not come so easy; it is mostly at a high 
cost and time. The cost of financial fraud reported is about 
$1 million per incident, occupational fraud costs $150 to 
$200,000 per incident while losses due to fraud costs an 
average of 5% of gross profit and take around 24 to 36 
months to discover - usually via a tip (40%), by accident 
(20%), or during an audit (10%). Some motivations for 
committing financial fraud have been reported and identified 
by senior management to be most responsible for most fraud 
[5].  
The authors in [5] argued that meeting external forecasts 
emerged 
as 
the 
primary 
motivation 
and 
it 
was 
conceptualized that three elements common among all fraud 
is called the fraud triangle. These elements include a 
perceived pressure, a perceived opportunity, and a 
rationalization of the fraud act. in addition to the trio, is 
motivation for need, greed and addictions (or vices). This is 
with the assertion that the motivation for greed in turn feeds 
the motivation for vices. Capping it all, these motivations 
become a vicious cycle leading to fraud. thus, financial fraud 
is categorized mainly into three areas: bank fraud, corporate 
fraud and insurance fraud. Bank fraud is subdivided into 
credit card fraud, mortgage fraud and money laundering 
fraud [6].   
Fraud modelling is one important tool in addressing 
financial fraud. It expands in importance as corporate 
organizations and government determine which type of 
models to use and continuous update in order to protect 
against evolving threats. In the past, traditional fraud 
models are used to automatically detect unauthorized 
transactions such as determining when a card has been used 
without the owner’s consent. Most card issuers use fraud 
models to identify fraudulent card usage in order to 
maintain the integrity and security of their network as it is 
core to earning trust in online business world. However, 
diverse range of payment services offered by organizations 
and businesses to clients also presents higher opportunities 
for fraud occurrence. Consequently, fraud models provide a 
way to mitigate these occurrences, protect clients’ 
transactions and play an essential role in payment service 
providers’ profitability and sustainability with attributes of a 
given transaction as variables used in fraud models. 
Thereafter, it classifies or attempts to label the transaction 
fraudulent or legitimate (see Sections V-VII). Some 
extensive models label the type or category of fraud. Some 
of the common attributes used by fraud models include: 
Merchant (the business charging the transaction), transaction 
location, amount, type (online or offline), volume, account 
history, transaction history, and so on, depending on the 
amount of attribute information captured in a transaction. 
The five basic fields, which describe type, time (hours, 
minutes), location, amount, and date (week days) of a 
transaction were used in the fraud model. While 16 
significant ratios out of 29 financial ratios were used in 

3
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
detection of fraud in the financial statements of banks, which 
were categorized into asset quality ratios, earnings and 
profitability ratios, liquidity/solvency ratios, long term 
solvency/leverage ratio, capital adequacy ratio, cash flow 
analysis and trends. These fraud models utilized 29 variables 
of which 24 are financial variables while 5 are non-financial 
variables as it proved that model tools based on financial 
numbers, linguistic behaviour, and non-verbal vocal cues 
have each demonstrated the potential for detecting financial 
fraud. Fifty-one (51) financial ratios were utilized in 
detecting fraud in financial statements by means of financial 
ratios [7]. 
Notable fraud detection models are mainly categorized as 
rule-based models and algorithmic (or machine learning) 
models. Rule-based models are collection of rules used to 
detect fraudulent transactions with a single rule containing 
as a set of conditions that, when present, labels a transaction 
either as fraudulent or not. Rule-based models are made up 
of an expert knowledge base. In addition, new rules evolve 
from time to time because of inference action on streams of 
time changing data. However, one major limitation of rule-
based fraud models is time complexity in handling big data.  
Algorithmic models make use of machine-learning methods 
to classify a transaction as either fraudulent or legitimate. 
Algorithmic models are more complex than rule-based 
models; this is dependent on the type of algorithm used. 
These models are computationally complex than rule-based 
models but achieve high performance. They are far better at 
detecting complex relationships between variables than the 
rule-based models. Machine-learning methods also require a 
pre-requisite of having many variables to implement and 
ensure learning. Therefore, when there is limited number of 
variables usage, the benefit of algorithmic methods over 
rule-based models is diminished.   
 The review on financial accounting fraud detection based 
on data mining techniques was motivated by the idea that the 
failure of internal auditing system of the organization in 
identifying the accounting frauds has led to the use of 
specialized procedures to detect financial accounting fraud. 
The findings of this review showed that data mining 
techniques such as logistic models, neural networks, 
Bayesian belief network, and decision trees have been 
applied most extensively to provide primary solutions to the 
problems inherent in the detection and classification of 
fraudulent data. In [7], financial fraud detection using vocal, 
linguistic and financial cues is presented and observed that 
these methods for automating financial fraud detection 
(FFD) have mainly relied on financial statistics; although, 
some recent studies have suggested that linguistic or vocal 
cues may also be useful indicators of deception. The 
hypothesis investigated in the study is that an improved tool 
(based on financial numbers, linguistic behaviour, and non-
verbal vocal cues) could be developed if specific attributes 
from these feature categories were analysed concurrently. A 
set of 1,572 public company quarterly earnings conference 
call audio file samples was used in the study. The authors re-
affirmed that earnings from conference calls are ideal for 
investigation because they involved corporate executives 
publicly 
discussing 
financial 
information, 
thereby 
simultaneously providing financial, linguistic and vocal 
cues. The study proved that tools based on financial 
numbers, linguistic behaviour, and non-verbal vocal cues 
have each demonstrated the potential for detecting financial 
fraud. However, it is quite tasking (and computationally 
intensive) to concurrently source and compute large amount 
of vocal and linguistic data [8]. 
In another study, a difference between precision-recall 
and Receiver Operator Characteristic (ROC) curves for 
evaluating the performance of credit card fraud detection 
models was motivated by the need to solve the problem of 
fraudulent transactions detection with use of machine 
learning for legitimate or fraudulent the credit card 
transactions classification. In order to solve this problem, the 
precision-recall curves are described as an approach. 
Weighted logistic regression is used as an algorithm level 
technique and random under-sampling is proposed as data-
level technique to build credit card fraud classifier. 
Performance evaluation of these approaches adopted the 
ROC curves, which showed the variance of the number of 
correctly classified positive examples with the number of 
incorrectly classified negative examples. However, ROC 
curves present an overly optimistic performance view. It 
established 
that 
precision-recall 
curves 
have 
more 
advantages than ROC curves in dealing with credit card 
fraud detection. Nevertheless, the study was limited by 
inability to find the best solution to the problem of 
imbalanced data in the dataset [9]. 
In the same vein, a study on “Combatting Financial 
Fraud: A Co-evolutionary Anomaly Detection Approach” 
evolved around the motivation of the major difficulty in 
anomaly detection which lies in discovering boundaries 
between normal and anomalous behaviour. The objective 
was to present a co-evolutionary algorithm which tackles the 
anomaly detection problem and discover the boundary 
between normal and abnormal behaviour. The co-
evolutionary algorithm was used to provide a competitive 
interaction between different populations which minimize 
detection errors and the adaptive evolutionary environment 
accelerated by the process of finding good solution. The 
authors implemented the algorithm using anonymized 
transactional data from a real financial institution. The data 
set contains two-year Automated Bank Machine (ABM) and 
Point of Sale (POS) fraud-free transaction history. The 
research has contributed to knowledge by using concept of 
evolution to detect anomalies in fraudulent transactions only 
it was not applied to realistic data [10].  
IV. 
METHODOLOGY  
The study deploys multilayer perceptron approach to detect 
fraud using financial datasets. Each transaction by a 
customer on card contains the transaction API, which is 
stripped into attributes. The attributes (model variables) 

4
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
from the API include; Source IP address, Destination IP 
address, Card pan, Location of transaction, Item bought, 
Unit of items bought, Amount of transaction and the Date 
and Time of transaction. The model architectural design is 
depicted in Figure 2. The Architecture is divided into 3 
major parts, namely: 
i. Data preprocessing & Feature Selection 
ii. Data Training & Learning 
iii. Classification 
Financial credit card datasets were selected (Dataset 1 
and Dataset 2) were obtained from “Kaggle Data 
Repository” [19] which are publicly available containing 
anonymized real-life credit card transactions with an evident 
presence of fraudulent cases. Dataset 1 was obtained from 
Kaggle Data Repository, and contains anonymized data to 
protect user’s vital information. Data was from Credit Card 
Transactions for users in Europe in 2013. It has 284,808 
entries. It has 31 attributes with class labels The Dataset 1 
sample is shown in Table 1. 
Dataset 2 contains anonymized data to protect users’ 
vital information, Data contains credit card transactions. It 
has 151,113 entries. It has 11 attributes with class labels, 
partitioned into testing set and training set. Training set 
contained 105,778 records and testing set had 45,335 
records. Sample records of the Dataset 2 are shown in Table 
II. 
 
 
2.   Architectural design of the model 
 
 
The data pre-processing and preparation was carried out 
on the raw financial dataset to remove outliers using max-
min normalization technique. As shown in equation (1) 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
(1) 
 
where fvalue, is the feature value to be normalized, fmin is the 
minimum feature value and fmax is the maximum feature 
value respectively. 
Feature selection was performed by computing feature 
importance. This is done using Information gain calculation. 
Thus, given a set of financial transaction dataset Sc  
 
 
 
 
 
 
 
 
 
 
 
 
 
(2) 
where (I = information, S = total number of financial 
transaction data instances, c = total classes (i.e., fraudulent 
and legitimate classes, F = Features) 
The information gain, G(F) is defined as: 
 
 
 
 
 
 
 
 
 
 
(3) 
Features with high information gain are selected for 
model development while the others are removed.  
TABLE I.  
SAMPLE OF DATASET 1 
 
TABLE II: SAMPLE OF DATASET 2 
user_id
signup_time
purchase_time
purchase_value
device_id source
browser sex age ip_address
class
22058 2/24/2015 22:55
4/18/2015 2:47
34 QVPSPJUOCKZAR
SEO
Chrome
M
39 732758368.8
0
333320 6/7/2015 20:39
6/8/2015 1:38
16 EOGFQPIZPYXFZ
Ads
Chrome
F
53 350311387.9
0
1359 1/1/2015 18:52
1/1/2015 18:52
15 YSSKYOSJHPPLJ
SEO
Opera
M
53 2621473820
1
150084 4/28/2015 21:13
5/4/2015 13:54
44 ATGTXKYKUDUQN
SEO
Safari
M
41 3840542444
0
221365 7/21/2015 7:09
9/9/2015 18:40
39 NAUITBZFJKHWW
Ads
Safari
M
45 415583117.5
0
159135 5/21/2015 6:03
7/9/2015 8:05
42 ALEYXFXINSXLZ
Ads
Chrome
M
18 2809315200
0
50116 8/1/2015 22:40
8/27/2015 3:37
11 IWKVZHJOCLPUR
Ads
Chrome
F
19 3987484329
0
360585
4/6/2015 7:35 5/25/2015 17:21
27 HPUCUYLMJBYFW
Ads
Opera
M
34 1692458728
0
159045 4/21/2015 23:38
6/2/2015 14:01
30 ILXYDOZIHOOHT
SEO
IE
F
43 3719094257
0
182338 1/25/2015 17:49 3/23/2015 23:05
62 NRFFPPHZYFUVC
Ads
IE
M
31 341674739.6
0
199700 7/11/2015 18:26 10/28/2015 21:59
13 TEPSJVVXGNTYR
Ads
Safari
F
35 1819008578
0
73884 5/29/2015 16:22
6/16/2015 5:45
58 ZTZZJUCRDOCJZ
Direct
Chrome
M
32 4038284553
0
79203 6/16/2015 21:19
6/21/2015 3:29
18 IBPNKSMCKUZWD
SEO
Safari
M
33 4161540927
0
299320 3/3/2015 19:17
4/5/2015 12:32
50 RMKQNVEWGTWPC
Direct
Safari
M
38 3178510015
0
82931 2/16/2015 2:50
4/16/2015 0:56
15 XKIFNYUZMBWFU
SEO
IE
M
24 4203487754
0
31383
2/1/2015 1:06 3/24/2015 10:17
58 UNUAVQXNWFBMO
SEO
Safari
F
24
995732779
0
78986 5/15/2015 3:52
8/11/2015 2:29
57 TGHVAWBMZRDHH
SEO
FireFox
M
23 3503883392
0
119824 3/20/2015 0:31
4/5/2015 7:31
55 WFIIFCPIOGMHT
Ads
Safari
M
38
131423.789
0
357386
2/3/2015 0:48 3/24/2015 18:27
40 NWSVDOHYIOBDR
Ads
FireFox
M
24 3037372279
0
289172 7/17/2015 5:48 11/12/2015 22:08
46 KFZGQIWDIRLZB
Direct
FireFox
F
53 1044590098
0 
(
)
(
min )
max
min
_
f
f
f
f
Value
Normalized
value
−
−
=
( )
(
)
( )
E F
s
I s s
G F
c −
=
,...,
,
2
1
( )
(
)
∑
=
+
+
=
c
j
j
j
j
j
sc
I si
S
Sc
S
F
E
1
,...,
*
...
1

5
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
V. 
MULTI LAYER PERCEPTRON (MLP) 
The implementation is a feed-forward artificial neural 
networks; MLP consists of the input layer, output layer, and 
one or more hidden layers. Each layer of MLP includes one 
or more neurons directionally linked with the neurons from 
the previous and the next layer. Figure 3 represents a 3-layer 
perceptron having three inputs, two outputs, and the hidden 
layer including five neurons. 
The values retrieved from the previous layer are 
summed up with certain weights, individual for each neuron, 
plus the bias term [11]. The sum is transformed using the 
activation function. 
 
Figure 3.  A Multi-Layer perceptron 
The perceptron computes a single output from multiple 
real-valued inputs by forming a linear combination 
according to its input weights and then putting the output 
through some nonlinear activation function: 
Given output 
) 
 
 
 
With the activation function (
 applied, mathematically the 
MLP can be written as: 
 
 
 
where w = weight going to the hidden unit layer 
x= Input to hidden unit 
b= bias input 
φ= Activation function 
  
 
Figure 4. Representation of the MLP equation 
 
A. Learning Algorithm 
The MLP uses a backpropagation algorithm to learn and 
train from the dataset. 
The back-propagation algorithm is in 2 phases: 
• 
The forward pass phase- computes ‘functional 
signal’, feed forward propagation of input pattern 
signals through network. 
• 
Backward pass phase- computes ‘error signal’, 
propagates the error backwards through network 
starting at output units (where the error is the 
difference between actual and desired output 
values).  
Forward pass Algorithm 
• 
Step 1: Initialize weights at random, choose a 
learning rate η  
• 
Until network is trained: 
• 
For each training example i.e., input pattern and 
target output(s): 
• 
Step 2: Do forward pass-through net (with fixed 
weights) to produce output(s) 
– 
i.e., in Forward Direction, layer by layer: 
• 
Inputs applied 
• 
Multiplied by weights 
• 
Summed 
• 
‘Squashed’ by sigmoid activation 
function 
• 
Output passed to each neuron in 
next layer 
– 
Repeat above until network output(s) 
produced 
 
Backward pass /Back propagation of error 
• 
Compute error (delta or local gradient) for each 
• 
output unit δ k  
• 
Layer-by-layer, compute error (delta or local 
• 
gradient) 
for 
each 
hidden 
unit 
δ 
j 
by 
backpropagating 
• 
errors (as shown previously) 
• 
Next, update all the weights ∆wij 
• 
By gradient descent, and go back to Step 2 
The overall MLP learning algorithm, involving forward 
pass and backpropagation of error (until the network 
training completion), is known as the Generalized Delta 
Rule (GDR), or more commonly, the Back Propagation 
(BP) algorithm. 
VI. 
MLP IMPLEMENTATION 
 The MLP model was implemented on a Personal 
Computer with 2.30 GHz and 8GB of RAM in Microsoft 
Windows 10 Operating system platform and Microsoft Excel 
2013 with Python Programing Language. The MLP training 
was defined with parameters epochs = 20, dim_size = 15, 
num_seq = 30, batch_size = 200, activation function = 
Sigmoid. 
…

6
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Due to the high imbalance in the datasets, the data were 
synthetically balanced using the smote method, the datasets 
1 and dataset 2 stored in csv format were loaded into python 
3.6 IDLE via a read_csv () command. The datasets were 
divided into two parts (Input and Output). The input data are 
those with the attributes while the output data contain the 
target class (‘Fraudulent’ and ‘Normal’). 
 
A. Evaluation Metrics  
The evaluation of the model was carried out using the 
various evaluation metrics such as Accuracy, Precision, F1-
score, Recall and False alarm rate. 
 
Accuracy: is defined as the number of correct predictions 
made by the model. It is the proportion of the total number 
of correct predictions. 
 
  
 
 
False Alarm Rate (FAR)/False Positive rate: is a ratio of 
wrongly classified normal instances. 
           
 
Precision: defines the results classified as positive by the 
model, how many were actually positive. It is the number of 
items correctly identified as positive out of total true 
positives. 
 
Precision=
            (8) 
 
Recall: It is the number of items correctly identified as 
positive out of the total items classified as positive. 
 
Recall=
                  (9) 
 
F1-Score: is the weighted average of the precision and the 
recall, it takes both false negatives and positives into the 
account and gives a better outlook especially in an uneven 
class distribution it is given as: 
    
 
 
where True positive (TP) represents data detected as 
fraudulent, True negative (TN) represents data detected as 
legitimate, False positive (FP) represents normal data 
detected as fraudulent, and False Negative (FN) is denoted 
as fraud data detected as normal. 
VII. 
RESULTS 
In this section, an evaluation of the study with some 
metrics is presented with the two datasets. Dataset I reveals 
the significance of dataset that is characterized with 
minimum missing data. This is presented in Tables III and 
IV. The graphical representation of these datasets is 
presented in Figure 5.  
TABLE III: EVALUATION RESULT ON DATASET I 
Model 
Accuracy (%) 
F1 
score 
(%) 
Precision 
(%) 
Recall 
(%) 
False 
Alarm 
rate 
(%) 
Multi-
Layer 
Perceptron 
96.4 
96.3 
99.1 
93.6 
0.001 
TABLE IV: EVALUATION RESULT ON DATASET 2 
Model 
Accuracy (%) 
F1 
score 
(%) 
Precision 
(%) 
Recall 
(%) 
False 
Alarm 
rate 
(%) 
Multi-
Layer 
Perceptron 
77.4 
71.4 
96.9 
56.5 
0.002 
 
From Figure 5 we can conclude that the proposed model 
performed appreciably better with dataset using the 
evaluation metrics. 
 
B    Performance of Dataset 1 and Datset 2 Using MLP 
AccuracyPrecision Recall
96.4
99.1
93.6
77.4
96.9
56.5
MLP PERFORMANCE
Dataset 1
Dataset 2
Figure 5. Performance of Dataset 1 and Dataset 2 using MLP 
 
C   Comparative Evaluation  
The results of this model were thereafter compared with 
the results of a work that was implemented using Logistic 
regression machine learning approach with the same dataset 
1 is the result. 
TABLE V: COMPARATIVE EVALUATION OF MLP AND LOGISTIC REGRESSION 
Model 
Accuracy 
(%) 
Precision 
(%) 
Recall (%) 
Multilayer 
Perceptron 
96.4 
99.1 
93.6 
Logistic 
Regression 
Not given 
71 
64 
 
This model performed impressively against the 
performance of the Logistic regression study with the same 
dataset.  Weighted logistic regression was used as an 
algorithm level technique and random under-sampling was 

7
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
used as data-level technique to build credit card fraud 
classifier. The classification used in the study was Logistic 
Regression and the performance metrics are Recall and 
Precision. A graphical evaluation report of the two models is 
illustrated in Figure 6. 
 
 
Figure 6.  Comparative Analysis of Our Model (MLP) and Logistic 
Regression 
 
VIII. CONVOLUTIONAL NUERAL NETWOK (CNN) 
CNN is a type of deep neural networks that works best 
with image recognition [12]. CNN networks have been used 
in video and image applications such as objects/image 
detection [13]. It is based on the convolution of images and 
extraction of salient features based on filters that are learned 
by the network during training phase [14]. Aside the input 
layer, the stacked layers of Convolutional neural network 
include: convolution layer, activation layer, pooling layer, 
and fully-connected layer [12]. A typical sample layers of 
CNN is presented in Figure 7. 
a) Input layer: the input to this layer are usually image 
pixels (either gray-scale or RGB) 
b) Convolution layer: This is the heart of CNN 
network.  It is based on convolutional filtering 
such that during training filter weights are learned. 
In order to extract more complex features from 
image input, several filters are used, and this 
determined the depth of the convolution layer. The 
filter is also referred to as the kernel, and it has 
height and width in a matrix form (e.g., a filter 
size of 3x3 will have nine weights). An important 
component of this layer is the stride: it determines 
the number of pixels that a kernel window will 
slide through. 
c) Activation layer: CNN generally uses Rectified 
Linear Units (ReLu) activation function. The 
ReLU adds non-linearity into the network and at 
the same time provides non-saturating gradients 
for positive net inputs. It changes the output of a 
neuron to zero when the net input of a neuron is 
less than zero (
 [14]. 
d) Pooling layer:  This layer reduces the spatial 
dimension of an image pixel size [15]. The layer 
can either be a Max pooling or an Average 
pooling. In max pooling, the maximum pixel 
intensity of a locality (window size) is taken as 
representative of that locality, while in average 
pooling the average is taking instead of the 
maximum. 
e) Fully-connected layer: each neuron in this layer is 
connected to all neuron of the previous layer. 
More so, there are no weight sharing but neuron(s) 
receives different set of weights form preceding 
layers. 
 
 
Figure 7. Sample layers of CNN [14] 
 
Commonly used CNN forms are 2D-CNN and 1D-CNN. 
The two CNNs both share the same characteristics and 
approach but they differ in their respective filters 
opereations as it moves across data and in the structure of 
their input dimensions. 1D convolutional neural network has 
been used in analysis of a time series for sensor data, 
mechanical or aerospace [16], audio recording, Fault 
detection [17], patient ECG [18]. Authors in [16] 
emphasized on the advantages of 1D-CNN over 2D-CNN 
has having lesser computational complexity, shallow 
architecture with potential to learn complex features, 
required less computational resources (CPU rather than 
GPU), and well suited for real-time and low-cost 
applications on hand-held devices.  
 
In recent times, there has been increase in fraud, which 
has resulted to loss of money and lack of trust in financial 
systems worldwide. In the financial systems of various 
countries of the world, there exist several techniques for 
fraud detection, which has also evolved over time.  Fraud 
detection encompasses the observation of the activities of 
users so as to avoid, perceive and estimate unwelcomed 
behavior which include delinquency, fraud, intrusion, and 
account defaulting [20].  Credit card fraud can be described 
as any unauthorized account activity by an unauthorized 
person for which the account was unintended for; thus, 
action is engaged to halt the abuse and adopt risk 
management practices to secure imminent fraud actions [20]. 
Although, credit card has become dominant in the world’s 
financial system similarly, fraud is increasing globally.  

8
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
• 
CNN Fraud Architecture 
  
Authors in [22] proposed a Convolutional Neural 
Network based framework for detecting surreptitious fraud 
patterns in credit card transactions. The authors transformed 
transaction data into a feature matrix for each record, by 
which the inherent relations and interactions in time series 
was revealed for the CNN model. They combined the cost-
based sampling method in characteristic space, the 
extremely imbalanced sample sets are alleviated, yielding a 
superior performance of fraud detection. The proposed 
framework is shown in Figure 8.  
 
Figure 8. Credit Card Illustration Fraud Detection System [22] 
 
In addition to the online and offline segments of the 
proposed framework, the proposed system adopts trading 
entropy to a group of traditional features in order to model a 
more complicated consuming behavior. As regards to data 
mining, the model was structured after feature engineering 
and it was realized that credit card data was imbalanced, 
which resulted to proposing and adoption of a cost-based 
sampling method for the generation of synthetic frauds and 
thus transform features into a feature matrix so as to fit the 
model. Subsequently, the proposed model was simulated and 
evaluated alongside other industry-based models (SVM, RF 
and NN). Simulation Results proved that the cost-based 
sampling method uses additional legitimate data and 
improves the imbalanced problem, hence the CNN model 
when simulated on various sample sets, attains the best 
performance. 
 
Research outcome in [21] posited that the widely 
adoption of CNN architecture is due to its flexibility 
structure and obtains the feature automatically, thereby 
resolving so many classification problems and in an exact 
specification situation, the structural feature settings of CNN 
could be modified to achieve optimum performance. The 
authors proposed a three Convolutional Neural Network 
models to resolve Fraud Account Detection. The models 
proposed include the Network Topological Data (NTD-
CNN), Time Series Data (TTD) tagged as TTD-CNN model 
and a CNN model that combines the two kinds of 
Heterogenous Data Features (HDF), which are extracted 
from the former two kinds of data, tagged HDF-CNN model. 
They further proposed a wholistic account transaction 
network mathematical model, which was used as the basis of 
learning network vector of accounts. The network comprises 
of the transaction relationships cum timestamp data, this 
represented account’s historical trading behavior.  
 
The study adopted a DirectedWalk algorithm was used to 
learn the account’s network vector; this quantified the 
network local topological arrangements of transaction 
network into high dimensional vectors. The research 
explored data set from the Department of Economic 
Investigation, which avails transaction data of real bank 
accounts and subsequently subjected it to simulation. The 
experimental result on real data set revealed that HDF-CNN 
achieved improvements when compared with other proposed 
CNN models in classification performance. 
    
Furthermore, the gain of Neural networks and deep 
learning is its ability to estimate complex nonlinear 
relationships, fault tolerance, robustness and find the best 
solutions at a very high speed is asserted in [23], hence, 
proven to portray a unique performance in video processing, 
natural language processing and image recognition. 
Conversely, 
for 
structured 
data 
particularly 
online 
transaction data, neural and deep learning models have 
displayed poor performance since the available dimensions 
of the transaction data are limited. The authors proposed 
CNN based on feature sequencing to ameliorate fraud 
detection in online transactions as presented in Figure 9. 
CNN was applied to directly use low dimensional raw 
features as the input into the model, in order to enhance the 
sequence of features, thus a feature sequencing layer is 
added automatically. The proposed approach saves variable 
derived time, learns derivative features that benefit the 
classification results and reduces human interference.  The 
architecture is divided into two segments, which include 
transaction detection and training segments. 
 
 
Figure 9. A Fraud Detection model [23] 
 
The training segment was further divided into feature 
sequencing layer and CNN. The transactions features were 
optimized using feature sequencing, historical data was 
cleaned up and inputted into feature sequencing layer. The 

9
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
proposed model was simulated by training the CNN 
framework, and the feature sequence order is modified by 
the effect feedback. Upon simulation, the results revealed 
that the proposed the CNN architecture based on feature 
rearrangement entrenched in the research had an outstanding 
experimental implementation with good stability.  
 
A hybrid model for Fraud detection in credit card is 
presented in [24], it comprises CNN and K-Nearest 
Neighbors (KNN) Classification. The proposed system 
adopts Machine Learning techniques such as KNN-
Classification and Convolutional Neural Network. These 
techniques are implemented on data-features such as 
Customer ID, gender, Merchant ID, age, Merchant type of 
customers. The system also adopts a serialized approach in 
fraud detection and the model trained such that it feeds the 
output of the CNN model into the training set of the KNN. 
 
 
Figure 10.  A proposed Fraud Detection hybrid model [24] 
 
In the proposed model, CNN and Long short-term 
memory (LSTM) algorithms were applied to the first layer 
of the model to enhance the detection of fraud and induced 
the model towards identifying fraudulent transaction 
attempts. The analysis of the sequence of data and memory 
checking was enforced by LSTM. The output of this layer is 
also stored as the classification label for the training set, to 
feed into the KNN model. The KNN layer is used to quickly 
classify through the resultant set, making the model faster 
and more accurate.     
Experimental results revealed that the accuracy of CNN 
upon training the data for 490 repetitions had 87.79% and a 
logarithmic loss of 3.90. The K-Nearest Neighbor 
classification had 90.5%. Upon hybridization of the two 
techniques, the resultant CCFDS model had an accuracy of 
98% with a logarithmic loss of 0.647. This accuracy of the 
CNN is amplified by 10% when imputed into the hybrid 
model with KNN, and can only increase if trained over a 
bigger balanced dataset. 
  
Authors in [25] used deep learning techniques to detect 
fraud in mobile communications. Dataset from a mobile 
communication network was used for experiment purposes 
and learning features extracted and grouped into fraudulent 
and non-fraudulent activity; as presented in Figure 11.  
 
 
Figure 11.  General Fraud Detection Framework [25]  
 
Datasets were subjected to Simulations based on the 
proposed model and results showed that the performance of 
Deep Convolution Neural Networks (DCNN) method 
superseded that of Gradient Boosting Classifier, Random 
Forest and Support Vector Machines as regards to training 
and accuracy. 
 
The multiple benchmarked machine learning techniques 
such as SVM, KNN and RF and deep learning methods such 
as autoencoders, CNN, RMB and DBN is presented in [26]. 
The authors sourced for datasets from European Union, 
Australia and Germany. The study adopted three evaluation 
metrics, which include the Area Under the ROC Curve 
(AUC), Matthews Correlation Coefficient (MCC) and Cost 
of failure.  Simulation Findings revealed that for larger 
datasets, the best technique to adopt is SVM in combination 
with CNN to maximize performance while for small 
datasets, a combination of KNN, RF and SVM provides 
good enhancement and Convolutional Neural Networks has 
the 
best 
performance 
when 
compared 
with 
DBN, 
Autoencoders and RBM.  
IX.  RESULT WITH 1D-CNN 
We experimented our proposed 1D-CNN approach with 
financial credit card datasets from kaggle data repository. 
The dataset has 284,808 entries with 31 attributes. We split 
the dataset into 80% training and 20% testing sets.  
From Figure 12, the 1D-CNN architecture consists of two 
convolutional layers with filter size of 128 each, which are 
preceded by a max pooling layer and a batch normalization. 
Also, two convolutional layers with filter size of 256 and 
512 respectively were added along with a batch 
normalization layer. Furthermore, we included another 
convolution layer preceded by a max pooling layer that has 
its output forwarded into the third batch normalization layer. 
Finally, we included two fully-connected layers (dense 
layers) such that the second dense layer has an output of 2 
classes.  Each convolutional layer used ReLU activation 
function while in the last dense layer we applied a SoftMax 
activation function.  

10
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 12.  A proposed 1D-Convolutional Neural Network Architecture 
(CNN) 
 
The essence of the batched normalization layer is to help 
overcome overfitting problem in our dataset due to 
unbalance class ratio and also to enhance our network 
accuracy. During the network training, we set our batch size 
to 1400, epoch to 150 and learning rate to 0.001. We applied 
Adam optimizer to optimize the loss gotten from cross-
entropy loss function we applied in the 1D-CNN. As a 
result, our network was able to achieve a training accuracy 
of 99.53% after 150 epochs, so that both the train and test set 
accuracy rose gradually after 30 epochs, hence at 90 epochs 
the accuracies have surpass 90% illustrated in Figure 13. 
The impact of batch normalization techniques and the 
learning rate, facilitates the gradual increase in the network 
accuracy.  
 
 
Figure 13.  1D-CNN train and test data accuracy 
 
X. 
COMPARATIVE EVALUATION OF MLP AND 1D-CNN 
 
A further comparison of MLP and 1D-CNN models on 
the test data resulted in 96.4% and 99% accuracy with the 
same dataset is the result as illustrated in Table VI. 
 
TABLE VI: COMPARATIVE EVALUATION OF MLP AND 1D-CNN 
Model 
Accuracy (%) 
Multilayer Perceptron 
96.4 
1D-CNN 
>98 
XI. 
CONCLUSION 
In conclusion, the multilayer perceptron which used 
information gain method as feature selection technique for 
obtaining the most relevant features of the dataset was found 
to be effective in fraud detection; this is hopeful to be of 
high importance to the financial sector. This study 
established a fraud detection framework that is capable of 
unmasking real-time fraudulent transactions. The prediction 
of the MLP and ID-CNN proposed frameworks record high 
level of accuracy, precision, recall, good F1-score and very 
low false alarm rate. In addition, it is observed that the larger 
dataset, which is Dataset I, with MLP and 1D-CNN, yielded 
high evaluation values than Dataset II (a smaller dataset). 
This corroborates facts from literatures on the prediction 
accuracy in big data. Future work will be extended to 
Association Rule mining by improved apriori principles as 
well as hybridized approach with focus on computational 
complexities will be studied for suitability with big data.  
REFERENCES 
[1] 
A. Thompson, O. Oyinloye, L Aborisade, and E. Odeniyi, 
“A Fraud Detection Framework using Machine Learning 
Approach,” Cyber 2019 Conference, Porto, Portugal. 
[2] 
W. S. Albrecht, C. O. Albrecht, C. C. Albrecht, and M. F 
 Zimbelman, “Fraud examination,” 5th Edition, Cengage 
Learning, 2014. 
[3] 
F. N. Ogwueleka, “Data mining application in credit card 
fraud detection system,” Journal of Engineering Science 
and Technology, 2014, 6(3):311-322. 
[4] 
H. Shao, H. Zhao, and G. Chang, “Applying data mining 
to detect fraud behaviour in customs declaration,” Proc. 
of 1st International Conference on Machine Learning and 
Cybernetics, 2015, 1241-1244 
[5] 
N. M. Brennan and M. McGrath, “Financial statement 
fraud: incidents, methods and motives,” Australian 
Accounting Review, 2007, 17(2):49-61. 
[6] 
P. L. Clifton, Vincent, S. Kate, and G. Ross, “A 
comprehensive survey of data mining-based fraud 
detection research,” School of Business Systems, Faculty 
of Information Technology, Monash University, Clayton 
campus, Wellington Road, Clayton, Victoria 3800, 
Australia, 2012. 
 
[7] 
C. S. Throckmorton, V. Mohan, J. M. William, and C. 
Leslie, “Financial fraud detection using vocal, linguistic 
and financial cues,” 2018.  
[8] 
F. Chowdhury and M. S. Ferdous, “Modelling cyber-
attacks,”  International Journal of Network Security & 
Its Applications 9(4):13-31, July 2017. 
[9] 
K. Dinaesh, “Cyber defense mathematical modeling and 
simulation,” International Journal of Applied Physics and 
Mathematics, Vol. 2, No. 5, September 2012. 
[10] 
P. Laerte, D. Marcelo, M. Bernardo, F. G. David, and D. 
T. Deus, “A Formal classification of internet banking 

11
International Journal on Advances in Security, vol 14 no 1 & 2, year 2021, http://www.iariajournals.org/security/
2021, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
attacks and vulnerabilities in combatting financial fraud: 
A 
coevolutionary 
anomaly 
detection 
approach,” 
International Journal of Computer Science & Information 
Technology (IJCSIT), vol. 3, 2015. 
[11] 
S. Maes, K. Tuyls, B. Vanschoenwinkel, and B. 
Manderick, “Credit card fraud detection using Bayesian 
and neural networks,” In Proceedings of the 1st 
International 
naiso 
congress 
on 
neuro 
fuzzy 
technologies 2002, pp. 261-270. 
[12] 
T. A. Adesuyi, B. M. Kim, and Y. S. Shin, “A Brief on 
Snoring Data and Classification Methods,” International 
Journal of Advanced Trends in Computer Science and 
Engineering, vol. 9(1), pp. 426-432, 2020.  
[13] 
A. S Mohamed, N. Marbukhari, and H. Habibah, “A 
Deep Learning Approach in Robot-Assisted Behavioral 
Therapy for Autistic Children,” International Journal of 
Advanced Trends in Computer Science and Engineering, 
vol. 
8(1.6), 
pp. 
437-443, 
2019. 
https://doi.org/10.30534/ijatcse/2019/6381.62019. 
[14] 
S. Pattanayak, “Pro Deep Learning with Tensorflow: A 
Mathematical 
Approach 
to 
Advanced 
Artificial 
Intelligence in Python,” In: Pro Deep Learning with 
TensorFlow, 2017 eBook ISBN 978-1-4842-3096-1, DOI 
  
10.1007/978-1-4842-3096-1 
[15]  
H. Chabanne, A. D. Wargny, J. Milgram, C. Morel, and 
E. Prouff, “Privacy-Preserving Classification on Deep 
Neural Network,” Sefran Identity & Security, Cryptology 
ePrint Archive, 2017. Intelligence in Python,” Apress 
Media, pp. 178, 2017. 
[16] 
S. Kiranyaz, O. Avci, O. Abdeljaber, T. Ince, M. 
Gabbouj, and D.  
J. Inman, “1D convolutional neural 
networks and applications- a  survey,” arXiv:1905.03554, 
2019. 
[17] 
T. Ince, S. Kiranyaz, L. Eren, M. Askar, and M. Gabbouj, 
“Real-time motor fault detection by 1-D convolutional 
neural networks,”  IEEE Transactions on Industrial 
Electronics, vol. 63(11), 2016. 
[18] 
X. Zhou, X. Zhu, K. Nakamura, and N. Mahito, “ECG 
quality 
assessment 
using 
1D-convolutional 
neural 
network,” In Proc.  IEEE ICSP, pp. 780-784, 2018. 
[19] 
Kaggle Data Repository retrieved from kaggle.com. 
 
[20] 
A. Choudhury, “Credit Card Fraud Detection by Neural 
network in Keras Framework,” 2019. Retrieved from 
https://blog.usejournal.com/credit-card-fraud-detection-
by-neural-network-in-keras-4bd81cc9e7fe.   
[21] 
F. Live, W. Wang, Y. Wei, Y. Sun, J. Huang, and B. 
Wang, “Detecting Fraudulent Bank Account Based on 
Convolutional Neural Network with Heterogeneous 
Data,” Mathematical Problems in Engineering, Volume 
2019, 
Article 
ID 
3759607, 
11 
pages. 
DIO: 
https://doi.org/10.1155/2019/3759607. 
[22] 
K. Fu, D. Cheng, Y. Tu, and L. Zhang, “Credit Card 
Fraud Detection Using Convolutional Neural Networks,” 
2016. 
Retrieved 
from 
https://twin.scihub.se/6056/3e1860653f88184c2e123361
7611748/fu2016.pdf#view=FitH 
[23] 
X. Zhou, X. Zhang, L. Wang, and P. Wang, “A Model 
Based on Convolutional Neural Network for Online 
Transaction 
Fraud 
Detection,” 
Security 
and 
Communication Networks, Volume 2018, Article ID 
5680264, 9 pages. https://doi.org/10.1155/2018/5680264. 
[24] 
G. Nancy, S. Kumar, S. Veena, N. Vinoth, and M. 
Bandyopadhyay, 
“Fraud 
detection in 
credit 
card 
transaction using hybrid model,” AIP Conference 
Proceedings 
2277, 
130010, 
Nov. 
2020. 
https://doi.org/10.1063/5.0025561  
[25] 
A. Chouiekh and E. Haj, “ConvNets for Fraud Detection 
analysis,” The First International Conference on 
Intelligent Computing in Data Sciences, Procedia 
Computer Science, vol. 127, pp. 133-138, 2018. 
[26] 
P. Raghavan and N. Gayar, “Fraud Detection using 
Machine Learning and Deep Learning,” International 
Conference 
on 
Computational 
Intelligence 
and 
Knowledge Economy (ICCIKE), Amity University 
Dubai, UAE, December 11-12, 2019, pp. 334-345. 
 
 
 
 
 

