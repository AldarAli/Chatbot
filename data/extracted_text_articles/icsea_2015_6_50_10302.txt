A User-App Interaction Reference Model for Mobility Requirements Analysis
Xiaozhou Li∗, Zheying Zhang†
School of Information Sciences, University of Tampere
Email: ∗li.xiaozhou.x@student.uta.fi, †zheying.zhang@uta.fi
Abstract—Contemporary mobile applications (apps) value mobil-
ity as a key characteristic that allows users to access services
or features ubiquitously. In order to achieve decent mobility,
apps shall provide features that are suitable to use under a
wide range of contexts. In this paper, we analyze the situational
contexts, towards which the mobile apps shall comply with in
terms of mobility. By analyzing the contexts and the ways of
interaction between users and apps, we propose and illustrate
a mobile requirements analysis process model to identify the
conﬂicts between users’ ideal ways of interaction and the way
the feature is designed to provide. The identiﬁed conﬂicts help to
elicit requirements for the enhancement of the apps’ mobility.
Keywords–Mobility; Mobile application; Requirements; Context;
Situational Context; Interaction;
I.
INTRODUCTION
The emergence of iOS and Android OS has been changing
the mobile industry and people’s daily lives, and been pro-
viding new trends in the academic research [1]. Changes in
distribution process and mobile software market mechanism
lead to better customer accessability towards mobile apps
and inevitable competition [2]. The ranking mechanism also
intensiﬁes the competition, demanding mobile apps satisfying
users’ diversiﬁed demands, which shall be reached in varying
situations, compared to desktop software. It thus requires
companies to take into account the capability of the mobile
applications to provide satisfactory user experience regardless
the changing environment [3].
Mobility is one of the most signiﬁcant and unique features
for mobile apps, refering to the ability to access services
ubiquitously through wireless networks and various mobile
devices [4][5]. The vision of mobility is to be able to work
“anytime, anywhere” [6]. However, with limited support of
systems towards mobility, the capability of being comfort-
ably used at “anytime, anywhere” of mobile apps is seldom
achieved. Thus, achieving mobility shall result in the enhanced
competitiveness of mobile apps in terms of user satisfaction.
Contexts, which refers to the information that characterizes
the situation of an entity, has a great impact on usability and
user experience of mobile apps [7]–[10]. Mobility, as a key
aspect of usability of mobile apps, is also affected largely by
their context [11], which also inﬂuences the way, by which
a user interacts with an mobile app [12]. By specifying the
ways, in which user and app interact, we analyze their relation
towards different contexts. The elicited mobility requirements
shall thus reﬂect suitable interaction ways between users and
apps in differen contexts.
Many studies analyze the phenomena of use situations
concerning mobile commerce [4][13] and other types of mobile
apps [14]. But studies on mobility requirements analysis are
very limited. A goal-oriented framework for modeling and
analyzing requirements for varying contexts was proposed
based on the goal model to reason variants [15]. But it fails
to address how to identify the varying contexts and derive
requirements regarding the way of interaction. Several other
studies [16][17] address challenges and methods of require-
ments analysis for mobile systems and pervasive services,
but lack a concrete proposal on taking varying contexts into
account for requirements analysis.
In this study, we focus on the analysis of context of use of
mobile apps and the possible ways of interaction between users
and an app, and further study the way of analyzing mobility
requirements. The paper tries to tackle the following questions.
RQ1
What are the contexts that affect the interaction
between user and mobile apps?
RQ2
What are the ways in which a user interacts with
mobile apps, and what are their relations with
different contexts?
RQ3
How to take into account contexts and ways of
interaction when analyzing apps mobility require-
ments?
The purpose of this research is to enhance the mobility
of mobile apps by taking into account the varying contexts
in requirement analysis. To answer RQ1, we summarize the
deﬁnition of mobility and main perspectives of mobile app
contexts by reviewing the literature on the concept of mobility
and context in Section 2. We also tackle RQ2 by analyzing
the relation between the way users interact with mobile apps
and different contexts via user-app interaction reference model
in Section 3 and 4. In Section 5, we propose our approach to
analyzing mobility requirements with a case study for further
illustrating and discussing in Section 6, which altogether
answers RQ3. Section 7 concludes with implications for future
research.
II.
MOBILE APPS AND THEIR MOBILITY REQUIREMENTS
Mobile devices and applications has enabled new freedom
and ﬂexibility on the way people communicate, work, and
entertain by providing services beyond the constraints of
ﬁxed locations and devices. Compared to the old style of
using manufacturer provided mobile software, contemporary
mobile apps have lower distribution costs and can be more
easily accessed by customers via the change in distribution
process and mobile software market mechanism [2]. The
mechanism stimulates the development of mobile application
markets and results in ﬁerce competition with even software
on personal computers challenged. Prior to the investigation of
the circumstances, under which users would prefer to mobile
applications rather than desktop software, the unique mobility
characteristics of mobile applications differentiated from those
of desktop software shall be understood.
A. Mobility
Mobility was understood as the human’s independency
from geographic constraints or the ability and/or quality to
ensure the given entity can move or be moved [18]. Mobility
primarily facilitates a mobile device to operate properly when
170
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

its location changes. This provides a generic view of how
mobility is supposed to be acquired by users when they
use mobile apps, and forms a general goal in mobile app
development. According to [5], the key feature of mobile
technology is the capability of using services on the move,
with wireless network and various devices, which provides
the literal meaning of mobility. Other similar terms, such as
nomadicity, which indicates a system’s capability of providing
services to the nomad as he moves from place to place in a
transparent and convenient form [6], also reﬂexes the concept
of mobility.
Consequently, mobility is an attribute of both human beings
and the computational devices they interact [11]. The mobility
of mobile devices refers to the ability to access services ubiq-
uitously, or “anytime, anywhere” through wireless networks
and various mobile devices [4][6] and for mobile apps as
well. As a critical feature of mobile apps usability, mobility
has considerable impact on the interaction between users and
mobile devices and apps [19]. Thus, compared to mobility of
human beings, mobile app mobility is seen as the usefulness
and ease of use provided by the app towards user satisfaction
in “anytime, anywhere”.
There are three types of mobility in terms of modality [20],
i.e., travelling, visiting and wondering. The mobility towards
the usability of mobile apps is hence seen in these three
perspectives as well, that is, to provide services when users
are traveling, visiting, and wondering. Similar categorization
is also given by [21], which describes the motion of mobile
app users into none motion, constant motion and varying mo-
tion. Besides the categorization of mobility regarding spatial
movement, time and context changes also contribute to the
mobility attribute provided by mobile apps [18]. In this study,
we see all the factors that inﬂuence the mobility of the mobile
app from outside the app itself as its context.
From the context of use perspective, mobility implies that
the app shall provide context-aware features and/or services.
Following the deﬁnition of the concept of context, i.e., the
information that can be used to characterize the situation of an
entity [7][8], where an entity can be a place, person, physical
or computational object, we deﬁne context-aware features as
the use of context to provide task-relevant information and/or
features, which a user feels easy to use. The situation can
be characterized in perspectives, such as location, surrounding
changing objects, and people, and can deﬁne where you are,
who you are with, and what resources are nearby [22][23].
These perspectives can be further reﬁned into users, tasks,
equipment (i.e., hardware, software and materials), location,
physical environment, temporal context, social environment,
technical and information context, etc. and have been inten-
sively addressed and adapted in surveys and research on the
context in mobile computing and the impact on the overall
design of the product [8][10][17][24]–[28] .
B. Mobility Requirements Analysis
We consider mobility as an intrinsic attribute of mobile
applications. It refers to the capability of providing receptive
and pleasant services acquired by users in spite of the changes
in environments. Such an attribute can be reﬁned into different
types of requirements contributing to users’ satisfaction. The
requirements include functional requirements complementing
the main features of an application and supporting users to
fulﬁll their goals, interface requirements facilitating the inter-
action between users and the application, as well as constraints
on the application.
In addition to analyzing the core features of an application,
mobility requirements analysis shall emphasize ease of use
in the dynamic environment of use, and focus on analyzing
the diversity of context of use and ways of interaction
between users and the app. Accordingly, we adapt the generic
requirements syntax of Mavin et al.’s EARS model [29]
for mobility requirements, emphasizing the context and the
interaction with users, as shown below.
In <situational
contexts>,<optional
preconditions>
<optional trigger> the <mobile app name> shall <app
response> in <ways of interaction>.
The syntax marked in grey is what was speciﬁed in the
EARS model [29]. It can be further specialized into different
types of requirements following temporal logic deﬁned be-
tween the precondition, the trigger, the app response, etc. [29].
In addition, the components marked in black are situational
contexts and ways of interaction, which highlights the mobility
attributes a mobile app shall reﬂect and the requirements
analysis shall take into account. The situational context en-
compasses a wide range of elements, such as the location
and surroundings, the social context, the user’s movement,
the temporal context, etc. Combining value of these elements
forms a variety of scenarios of using a mobile app. Changes
of the scenarios continuously reframe a user’s interaction
with a mobile app. Obviously not all scenarios are desired
and friendly. The requirements analyst shall be aware of
the suitable ways of interaction is adopted towards typical
scenarios, which secures users’ satisfaction and receptiveness
largely.
III.
A USER-APP INTERACTION REFERENCE MODEL
Interaction between a user and a mobile app occurs after
the user opens the app and before he or she closes it [30]. We
call it a user-app interaction. According to the deﬁnition of
context given by [7][8], the context of a user-app interaction
is referred to as the information to characterize the situation
of the two entities, i.e., the user and the app. The context is
further depicted in Figure 1.
Figure 1. User-App Interaction Reference Model.
171
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

The context shall ideally contain all possible situations
that affect the user-app interaction. Similar to the contexts
categories described in previous studies [17][22]–[24], the
ideal context shall contain multiple perspectives including
user proﬁle, operating system, hardware system and network,
physical context, temporal context, task context, and social
context. As shown in Figure 1, we divide the wide range of
context into intrinsic and extrinsic ones. The intrinsic context
refers to the inner attributes of entities that inﬂuence, or occa-
sionally determine the occurrence of a user-app interaction. For
example, the features provided by mobile apps and demands
for operating them intrinsically determine their usefulness
when users’ goals and their characteristics determine whether
to use. The extrinsic context refers to the external factors
that inﬂuence a user’s decision of his or her engagement in
a user-app interaction. The extrinsic contexts, deﬁned also
as situational contexts, include device context, environmental
context, spatial context, temporal context and social context.
The device context (e.g. system, network, hardware, etc.) and
the environmental context (e.g. light, noise, wind, temperature,
etc.) have been often studied in requirements engineering
for self-adaptive software systems [31]. However, the other
extrinsic contexts, such as spatial, temporal, and social contexts
are rarely discussed in requirements analysis process. Hereby,
we focus on these situational contexts to investigate their
relations with the mobility attribute of a mobile app.
A. Intrinsic Contexts
Many researchers have addressed and veriﬁed that a user’s
demographic properties, such as age, gender, education, in-
come, etc. are relevant factors affecting a user’s attitudes and
preference to the use of an app [17][28][32]–[34]. Besides the
demographic properties, individual users with various interests
and attitudes toward the mobile value form other important
perspectives inﬂuencing a user’s engagement in an app activity.
Users’ adoption to mobile services has been analyzed from the
perspectives of a user’s characteristics, major value, attitude,
and major interests. [28]. Concerning a user-app interaction,
the user’s goals refer to the objectives of the user at the critical
moment when the interaction occurs. For an instance, the goal
of a student working on an exam is to pass the exam. It is
not only related to mobile applications but also has a wider
range than the term described in goal-oriented requirements
engineering [35]. Thus the characteristics and goals of the user
form the intrinsic and determinant context to the initiation of
a user-app interaction [36].
On the other hand, a user-app interaction occurs when a
user determines to perform a task associated with a mobile
app with a particular purpose, i.e., fulﬁlling a user’s goal. The
features of a mobile app contain capabilities that enables users
to fulﬁll their goals by accomplishing the tasks. The user is
prone to intrinsically start an interaction with the app when the
provided features comply with his or her intention to achieve
his or her goal. The demands are deﬁned as the workload
that a user is obliged to engage in order to accomplish the
task as the demands, which contain six subscales, i.e., mental
demand, physical demand, temporal demand, frustration, effort
and performance [37]. They deﬁne the subjective experience
of users on using the app and are affected by the intrinsic
contexts of a user-app interaction as well.
B. Situational Context Model
The situational context refers to the extrinsic properties of
the user and the app that impact the initiation of a user-app
interaction. As mentioned above, we only focus on the tem-
poral, spatial and social perspectives to discuss the situational
context in this study.
1) Temporal Context: Temporality, as one of the dimen-
sions of the mobility concept originally [18], has been inﬂu-
enced by the mobile technology inherently in terms of human
interaction. The multiple perspectives of temporality, such as
structural and interpretive, monochronicity and polychronicity
and so on have been studied previously [18][38]. Compared
to the previous frameworks, we argue that the temporality in
terms of a user-app interaction is determined by the user’s
sense of time and the persistence of the app to accomplish
one operation session, and deﬁne temporal context in this
paper as the sense of external time pressure of the user caused
by the conﬂiction or the accordance of user’s goal and app’s
demands. Thus, two values of intensive and allocative are used
to describe temporal context. Intensive refers to the situation
when the user is in urgent need of achieving his or her goal
and has limited spare time of interacting with the app (e.g.
the user is busy in working on assignments with approaching
deadline). Allocative, on the other hand, indicates that the user
has no urgent goal to achieve and is temporally available (e.g.
the user is staying at home idle).
2) Spatial Context: The spatial perspective of mobility
indicates the geographic movement of the user when engaged
in the interaction with the mobile app [18]. In this study,
the spatial context refers to the current movement of the user
further indicating the physical availability for the app usage.
we adopt the mobile modality types given by [20] categorizing
the spatial context, including visiting, traveling and wandering.
Visiting context indicate that the user is in a physically
stationary status(e.g. sitting in a meeting). Traveling context
refers to the situation when the user is in a transportation tool
(e.g. a car or train). Wandering, on the other hand, refers to
the situation when the user is physically moving from place to
place (e.g. walking or running). However, the categorization
given by [20] did not specify the difference between driving
a transportation tool or sitting in one in terms of traveling
perspective. In addition, exercise related scenarios of walking
or running is not taken into account either. In this study, these
distinctions shall be reﬂected by the combination with other
contexts.
3) Social Context: The social context is interpreted by
[8][10][17][24]–[28][39] as the inﬂuence of other persons’
presence and the interpersonal interaction between the user and
others. In this study, we interpret the social context of a user-
app interaction as the social norms that constrain user from
or encourage user into the interaction [40], which contains
similar meaning towards the functional place concept in [39].
We deﬁne the scale of social context from constraining to
encouraging the use of apps based on the social norms. For
example, a conference presentation is socially constraining
when idleness at home is socially encouraging.
According to the three perspectives of situational context
mentioned above, values are assigned to each perspective,
combining which leads to a unique context scenario description
(shown in Table I).
Ideally, based on the given situational context model, the
situational context of user can be described by the combination
172
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

TABLE I. VALUES OF SITUATIONAL CONTEXT PERSPECTIVES.
Perspective
Value
Temporal
Intensive, Allocative
Spatial
Visiting, Traveling, Wondering
Social
Constraining, Encouraging
of the three perspectives. The 12 situational contexts include
Intensive-Visiting-Constraining
(IVC),
Allocative-Visiting-
Constraining
(AVC),
Intensive-Visiting-Encourage
(IVE),
Allocative-Visiting-Encourage
(AVE),
Intensive-Traveling-
Constraining (ITC), Allocative-Traveling-Constraining (ATC),
Intensive-Traveling-Encouraging (ITE), Allocative-Traveling-
Encouraging
(ATE),
Intensive-Wondering-Constraining
(IWC), Allocative-Wondering-Constraining (AWC), Intensive-
Wondering-Encouraging (IWE), and Allocative-Wondering-
Encouraging (AWE). For each combination of values from
different perspectives, we provide a typical situational context
scenario, shown in Table II.
TABLE II. TYPICAL SCENARIOS FOR EACH SITUATIONAL CONTEXT.
Situational Context
Typical Scenario
IVC
In a conference giving presentation
AVC
In a lecture listening
IVE
In a cafe working on assignments with close deadline
AVE
At home idle
ITC
In a car driving with time limit
ATC
In a car driving and sight seeing
ITE
In a train when it is about to arrive at the destination
ATE
In a train idle
IWC
Running in a race
AWC
Wondering in a cocktail party as a host
IWE
Running to catch a bus
AWE
Walking in a park relaxing
In practice, the scenarios that used for describing situa-
tional contexts might vary based on the collective understand-
ing of the contexts from the team. For example, the scenario
“In a conference giving presentation” and “in a contract
signing meeting negotiating” can both be used describing the
situational context of IVC.
IV.
WAYS OF USER-APP INTERACTIONS
The concept of mobility is not only just a matter of people
traveling, but also the interaction people perform, that is, the
way in which they interact with each other [18]. The mobility
is thus reﬂected in the way in which users interact with the
apps. It occurs when an app sends out a notiﬁcation to the user
who responds it and ends when the user ﬁnishes using the app
and closes it. However, users in different situational contexts,
who have different goals and characteristics, will expect to
interact with different features of the app differently but
comfortably. In order to ﬁnd the match between the designed
and expected ways of interaction, we adapt the dimensions
of interaction modality [41][42] discussing the situational
characteristics of mobile apps including their obtrusiveness and
persistence.
An obtrusive interaction imposes obligation to notice or
react [18], which indicates that the interaction is evoked
by notifying the user to start it without the user’s internal
motivation to do so. For example, an obtrusive interaction
is initiated when the user stops original reading activity and
responds to the new message notiﬁcation from WeChat. On
the contrary, an unobtrusive interaction is initiated with the
user’s internal motivation. For example, the user encounters
an unfamiliar term while reading and decides to look it up in
Eudic without receiving notiﬁcation. On the other hand, the
persistence dimension speciﬁes the duration of an interaction,
which is largely depending on the time length a user spends
on completing an interaction task. An ephemeral interaction
requires a short time to achieve user’s goal (e.g. replying a
message, looking up a word). A persistent interaction oppo-
sitely takes a long period to accomplish (e.g. playing Subway
Surfers, listening to Spotify).
With the two dimensions combined, a user-app inter-
action can thus be described as obtrusive-persistent (OP),
unobtrusive-persistent (UP), obtrusive-ephemeral (OE), or
unobtrusive-ephemeral (UE). By analyzing the relation be-
tween different types of user-app interactions and the way they
ﬁt in the process of the way of the user’s original activity,
we conclude four ways of interaction, including intermittent,
interrupting, accompanying, and ignoring.
An intermittent way of interaction refers to the interlaced
engagement in both the user’s original task and the user’s
interaction towards the mobile app, with the whole process
of several short interactions, which are neither consistent nor
interfering the proceeding of the original task. For example,
when watching TV, the user starts the interaction with WeChat.
Within the whole process, the user inconsistently responds
messages but his or her task of watching TV remains pro-
ceeding. An intermittent way of interaction often consists of
a number of ephemeral interactions, which are also mostly
obtrusive.
An interrupting way of interaction requires the user to
convert full concentration on the interaction and cease the
original activity. For example, to start playing Subway Surfers,
the user has to stop the original task, such as reading books
or watching TV. It can be interpreted as the original task is
interrupted by this user-app interaction. An interrupting way
of interaction is mostly persistent.
An accompanying way of interaction refers to the paral-
leling engagement in both user’s original task and the user-
app interaction tasks. Comparing to the interrupting or the
intermittent way of interaction, the accompanying one will
not attract the user’s full attention, as the user does not stop
the continuous progress of the original task. For example,
when running on a treadmill, the user starts watching ﬁlms
from Netﬂix. The activity of running is, instead of interrupted,
paralleling with the user-app interaction. The interaction can
be ephemeral or persistent, depending on the amount of
engagement an app requires from the user.
An ignoring way of interaction indicates that the interaction
with the mobile app is ignored by the user in order to maintain
the proceeding of his or her original task. For example, when
taking an examination at school, the user will ignore any types
of interaction with the mobile apps.
The relation between different types of user-app interac-
tions and the according ways of interaction is summarized in
Figure 2. In Figure 2, the narrow arrows underneath represent
the user’s original task, and the thick ones represent the
user-app interactions. Lighter gray arrows are the interactions
ignored and not executed. In addition, the length of the
arrows indicates the timeline of proceeding with the task or
interaction.
By analyzing the different ways of user-app interactions,
we are enabled to analyze the expected way of interactions
towards each mobile app feature. And towards mobility, ex-
pected ways of interaction shall comply with the previously
173
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

Figure 2. Ways of User-App Interactions
deﬁned situational contexts. Combining this analysis, we shall
be able to detect how an app feature is expected to perform in
different situational contexts. For requirements analysts, each
feature and the reﬁned requirements could be analyzed and
mapped into the situational contexts assigned with expected
ways of user-app interactions. For example, Table III shows
the expected ideal ways of interaction towards given situational
context .
TABLE III. IDEAL WAY OF INTERACTION FOR EACH SITUATIONAL
CONTEXT.
S.C.
Typical Scenario
Ideal Ways
IVC
In a conference giving presentation
Accompanying
AVC
In a lecture listening
Intermittent
IVE
In a caf working on assignments with close deadline
Intermittent,
Accompanying
AVE
At home idle
Interrupting
Intermittent
Accompanying
ITC
In a car driving with time limit
Accompanying
ATC
In a car driving and sight seeing
Accompanying,
Intermittent
ITE
In a train when it is about to arrive at the destination
Accompanying,
Intermittent
ATE
In a train idle
Interrupting,
Intermittent
Accompanying
IWC
Running in a race
Accompanying
AWC
Wondering in a cocktail party as a host
Intermittent
IWE
Running to catch a bus
Accompanying
AWE
Walking in a park relaxing
Accompanying,
Intermittent
Table III indicates that in a speciﬁc situational context one
mobile app feature shall enable users to interact comfortably
in the ideal ways of interaction. Taking the situational context
scenario of IVC as an example, the ideal way is the accom-
panying way of interaction. Thus, a mobile app feature which
offers such a way of interaction is more likely to be used in this
circumstance. For example, the slide presentation feature of
Prezi can provide accompanying way of interaction in the IVC
context scenario of “In a conference giving presentation”. The
typical scenario of situational contexts can be also different.
For example, IVC context can also be represented in the
scenario of “In a university exam with time limit” or “In a
chess competition with time limit for each move”. When a
certain feature fails to initiate the ideal ways of interaction, it
shall be adjusted at requirement speciﬁcation level towards the
ideal ways. Therefore, a process of identifying such features
and specifying the according strategy of mobility enhancing
adjustment is required.
V.
MOBILITY REQUIREMENTS ANALYSIS PROCESS
The mobility requirements analysis process contains a
sequence of pre-deﬁned steps, by following which require-
ments analysts can specify existing user requirements towards
enhanced mobility. The aim of mobility requirements analysis
is to provide speciﬁed requirements that enable users to use the
given features in a satisﬁed way in the possible situational con-
texts. As deﬁned previously, a user’s satisfaction for a speciﬁc
feature is achieved by using this feature in different situational
contexts via ideal ways of interactions. Thus the proposed
mobility requirements analysis process is to reﬁne existing app
features by taking into account the given situational contexts
and the according ways of interactions. The process of mobility
requirements analysis is described as Figure 3.
Figure 3. Mobility Requirements Analysis Process.
The analysis process consists of four key steps, as ex-
plained below.
Step 1. Identify the Primary Situational Contexts
Mobile apps are meant to satisfy users’ needs in all possible
situational contexts in an ideal way. However, mobile apps
have distinct visions and features, and cannot comply with
every situational context to meet users’ needs. It thus requires
the requirements analysts to identify the primary situational
contexts by prioritization. The outcome of this activity is a
list of prioritized situational contexts, or a number of primary
situational contexts.
Step 2. Specify the Expected Way of Interaction for Each
Feature
For each feature of the mobile app, requirements analysts
shall be able to specify an expected way of interaction, which
is expected by users. It means that users will use this feature
most comfortably via that way of interaction. The outcome of
this activity is a list of features together with expected ways
of interaction respectively.
Step 3. Compare the Previous Two Outcomes and Identify
the Conﬂicts
By comparing the outcomes of the previous steps with
Table III, we can ﬁnd the features, of which the expected
way of interaction, conﬂicts with the ideal ones of the primary
situational contexts. These conﬂicts shall be adjusted in the
next step to enhance the app’s mobility attribute.
Step 4. Adjust Conﬂicting Feature towards Mobility Re-
quirements
We diminish the conﬂicts by changing the requirements
related to the feature or adding new ones.
VI.
CASE STUDY
By following the steps of mobility requirements analysis
process, we are able to identify the features of a mobile
app that may contain conﬂicts against the ideal ways of
174
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

interaction in speciﬁed primary situational contexts, and also to
analyze and adjust the according features towards eliminating
the conﬂicts, hence enhancing their mobility. In this section,
we apply our proposed approach to analyzing three mobile
apps, WeChat[43], Gmail[44], and AlienBlue[45]. WeChat is
a messaging and calling app. It allows users to communicate
with friends for free text (SMS/MMS), voice & video calls,
moments, photo sharing, and games. Gmail (IOS) is the
ofﬁcial mobile app for iPhone and iPad. It supports real-time
notiﬁcations of new mails, multiple accounts, and mail search
across the entire inbox. AlienBlue is the ofﬁcial app for Reddit,
an online bulletin system. It enables users to browse threads
from Reddit, post new threads and reply on others’ threads
with other features, such as liking or disliking, subscribing,
image uploading, and so on.
The three mobile apps share the essential feature of user
communication but contain differences in details. For example,
WeChat enables users to receive, send, and share multimedia
messages instantly. Gmail contains no voice messaging feature
and takes longer time on individual operation session, such
as browsing and replying emails. On the other hand, the
communication between users on AlienBlue is fulﬁlled by
posting, reading and replying threads in Reddit. Thus, in the
study, we focus on the communication feature of the three apps
to analyze their mobility attributes and requirements.
Step 1. Identify the Primary Situational Context
Firstly, the primary situational contexts shall be identiﬁed
amongst the previously deﬁned 12 situational contexts, as well
as the scope of the analysis. Instead of prioritizing the 12
situational contexts precisely, for these cases, we categorize
situational contexts into three prioritization level, including,
primary, secondary and ignorable. Primary situational contexts
indicates that most users tend to use this feature in these
situational contexts. Secondary contexts are those situational
contexts in which the user has the equal possibility of using
the app or not. And ignorable contexts are those in which
users nearly never use the feature. In terms of the “user
communication” feature of the three cases, the according
categorization of situational context is shown as Table IV.
TABLE IV. PRIMARY SITUATIONAL CONTEXTS.
WeChat
Gmail
AlienBlue
Primary
AVE, ATE, AWE
AVE, ATE
AVE, ATE
Secondary
AVC, IVE, ITE,
ITE, AWE
AWE
AWC
Ignorable
IVC, ITC, ATC,
IVC, AVC, IVE,
IVC, AVC, IVE,
IWC, IWE
ITC, ATC, AWC,
ITC, ATC, ITE,
IWC, IWE
IWC, AWC, IWE,
Taking WeChat as an example, it enables users instant
communication. Thus, the actions of reading and replying
messages is to a large extent encouraged in the situation
without social constraints (e.g. driving for safety reason) or
time limit towards other objectives (e.g. deadlines). The social
encourging and time allocative contexts are also the primary
contexts for the other two apps. But different from them,
instant communication feature of WeChat is also encouraged
in ‘wondering’ contexts. Besides, even with certain social
constraints and time limits, users tend to use WeChat more
than the other two, which is why more secondary situational
contexts are identiﬁed for WeChat.
Step 2. Specify the Expected Ways of Interaction
The expected way of interaction for the feature shall
be determined by the way in which most of the users use
the feature, which can be identiﬁed and analyzed by using
different requirements elicitation techniques, or asserted by
requirements analysts based on the use pattern of other similar
products. For example, the expected way of interaction for
WeChat communication is intermittent, as users only allocate
short time for instant communication without original activity
fully interrupted. Comparatively, Gmail and AlienBlue require
more concentration and time from users for reading and reply-
ing emails, which results in an interrupting way of interaction.
Step 3. Compare the Previous Two Outcomes and Identify
the Conﬂicts
Comparing the pre-deﬁned ideal ways of interaction for
the primary situational contexts and the expected way of
interaction for the feature, we ﬁnd no conﬂicts for all apps in
their primary situational contexts (shown in Table V). When no
conﬂicts are found for all primary situational contexts, we can
indicate that this existing feature provides adequate mobility
support.
TABLE V. COMPARISON OF IDEAL AND EXPECTED WAYS OF
INTERACTION
Primary
Ideal
WeChat
Gmail
AlienBlue
Interrupting,
AVE
Intermittent,
Intermittent
Interrupting
Interrupting
Accompanying
Interrupting,
ATE
Intermittent,
Intermittent
Interrupting
Interrupting
Accompanying
Intermittent,
AWE
Accompanying
Intermittent
Interrupting
Interrupting
However, conﬂicts are found in the secondary context of
AWE for Gmail and AlienBlue. Compared with the primary
contexts, we ﬁnd that users in “wondering” context are more
likely to start interaction with WeChat rather than Gmail and
AlienBlue based on their expected ways of interaction. Thus,
to enhance the mobility of them, conﬂicts for this secondary
situational context shall be addressed with additional mobility
requirements as in practise the secondary situational contexts
might be also of high priorities.
Step 4. Adjust Conﬂicting Feature towards Mobility Re-
quirements
Once the conﬂicts were detected, the according feature
or function shall be adjusted in order to improve the overall
mobility of the app. According to the conﬂicting situational
context (i.e., AWE), the mobility requirement to adjust is as
follows.
In
a
situational
context
of
“Allocative-Wandering-
Encouraging”, the Gmail/AlienBlue app shall provide user
text-based communication functionality in the intermittent way
of interaction.
The mobility requirements provide the goal for require-
ments analysts indicating which speciﬁc situational contexts
and by which ways of interaction the target feature shall be
adjusted. The adjustment can be applied by adding or editing
the existing requirements related to this function. Taking
AlienBlue as an example, part of functions related to text-
based communication in thread discussion is summarized in
Table VI.
When adjusting the functions, we shall take into account
the conﬂicting situational context. The perspective that plays
a critical part of the conﬂict is ﬁrstly focused. For example,
concerning the speciﬁc situational context of “Allocative-
175
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

TABLE VI. ALIENBLUE’S FUNCTIONS
App Name
Functions
AlienBlue
AFR1.The app allows the user to view through the whole thread;
AFR2.The app allows the user to reply on a speciﬁc comment;
AFR3.The app allows the user to send replies with images and emojis;
AFR4.The app allows the user to like or dislike other comments;
AFR5.The app allows the user to receive comments notiﬁcations;
Wandering-Encouraging”, social encouraging and time alloca-
tive contexts do not hinder user’s interaction with the thread
receiving and replying feature of AlienBlue. Thus, within the
range of this very feature, we change the existing function with
more speciﬁed function variations. As follows, based on the
given functions, we provide examples on how to change the
existing function or add new functions that comply with the
“Wandering” situational context.
Taken as examples, AFR1 and 2 are two of the essential
function of the AlienBlue app, which must not be removed.
However, as a persistent and non-obtrusive functions, based
on Figure 2, these functions are prone to be ignored in most
situational contexts, especially for the “Wandering” context.
One way to change them is to shorten the operating session.
Thus, the AFR1 and AFR2 can be changed into:
AFR1.1 The app shall allow the user to view exclusively
his or her own comments and the ones he or she
comments on with unrelated comments folded;
AFR1.2 The app shall allow the user to view unrelated
comments by unfolding them;
AFR1.3 The app shall allow the user to quickly control the
display of the thread interface by hand gestures;
AFR1.4 The app shall allow the user to view comments
concerning him or her on the lock screen;
AFR2.1 The app shall allow the user to reply with prede-
ﬁned quick responses;
AFR2.2 The app shall allow the user to save unﬁnished
comments automatically and to continue compos-
ing;
AFR2.3 The app shall allow the user to respond to the
received comments on the lock screen;
Compared to the originial requirements, the speciﬁed re-
quirements largely reduced the browsing time by directly en-
abling the user to focus on the relevant comments. Meanwhile,
the speciﬁed requirements also enhance the obtrusiveness of
the notiﬁcation, which allows the user to better respond to the
notiﬁcation. In this way, based on the existing functions, these
functions are adjusted in order to eliminate the conﬂicts be-
tween ideal way of interaction in a certain primary situational
context and the expected way of interaction of this feature. By
repetitively doing so with all the features of the mobile app,
the mobility of the target mobile app is supported as users are
enabled to interaction with the features in the expected way of
interaction.
In this case study, we adopt existing mobile apps as ex-
amples to demonstrate how the mobility requirements analysis
process can be applied. It is easy to identify the features that
require mobility enhancement and the corresponding change
proposal for well-known apps. In practise, it is hard to predict
and fully specify all situational contexts and assure that the
target app attract users to use in their expected way. The
proposed approach and process provides a way of analyzing
situational contexts, in which the app is put to use and eliciting
requirements that enhance its mobility. This study contributes
in ﬁlling the gap in the studies on applying the understanding
of context into mobile app requirements analysis. Furthermore,
the user-app interaction reference model and the situational
context analysis provides an extensible framework of studying
the context of a user-app interaction where more perspectives
can be added to enrich the scenario set of situational contexts.
This approach also enables developers to choose the suitable
set of context scenarios and prioritization, as well the ideal
ways of interactions, based on the vision and scope of their
target mobile apps.
VII.
CONCLUSION
In this paper, we explore the concept of mobility as the
characteristic of mobile apps, which satisﬁes users’ need to use
them under changing contexts. By analyzing the perspectives
of mobility, we deﬁne situational contexts as the key extrinsic
factors that inﬂuence users’ satisfaction in user-app interac-
tions. Compared to the other context factors, such as device
context and environmental context, the situational contexts are
more tangible towards the understanding of how users and
apps interact, and also the factors shall be taken into account
when mobile development team aims to enhance the mobility
of their mobile products.
Furthermore, based on the speciﬁcation of typical situa-
tional context scenarios, we further analyze connection be-
tween these situational contexts and the ideal ways of user-app
interactions. Hence, seeking the conﬂicts between ideal ways
of interaction and the current ones is the method to detect the
key mobility-lacking features of a mobile app. On the basis
of the analysis, we propose the mobility requirements analysis
process, which helps to adjust features and the according re-
quirements towards the ideal ways of interaction. Accordingly,
the overall mobility of the mobile app improves.
The future work of this study will focus on the other
extrinsic contexts and their inﬂuences on user-app interactions,
which shall be utilized as the replenishment for the existing
reference model. The user characteristics and goals, as well
as their connection towards the mobile application feature and
demands, shall also be reviewed and analyzed in the mobile
app domain. In addition, the connection between the improve-
ment of mobility and user satisfaction to mobile apps shall
be also studied as the validation of our mobility requirements
analysis method in our future studies.
REFERENCES
[1]
D. Gavalas and D. Economou, “Development platforms for mobile
applications: Status and trends,” Software, IEEE, vol. 28, no. 1, 2011,
pp. 77–86.
[2]
A. Holzer and J. Ondrus, “Mobile application market: A developers
perspective,” Telematics and informatics, vol. 28, no. 1, 2011, pp. 22–
31.
[3]
C. Ryan and A. Gonsalves, “The effect of context and application
type on mobile usability: an empirical study,” in Proceedings of the
Twenty-eighth Australasian conference on Computer Science-Volume
38.
Australian Computer Society, Inc., 2005, pp. 115–124.
[4]
N. Mallat, M. Rossi, V. K. Tuunainen, and A. ¨O¨orni, “The impact of use
situation and mobility on the acceptance of mobile ticketing services,”
in System Sciences, 2006. HICSS’06. Proceedings of the 39th Annual
Hawaii International Conference on, vol. 2.
IEEE, 2006, pp. 42b–42b.
[5]
C. Coursaris and K. Hassanein, “Understanding m-commerce: a
consumer-centric model,” Quarterly journal of electronic commerce,
vol. 3, 2002, pp. 247–272.
[6]
L. Kleinrock, “Nomadicity: anytime, anywhere in a disconnected
world,” Mobile networks and applications, vol. 1, no. 4, 1996, pp. 351–
357.
176
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

[7]
G. D. Abowd, A. K. Dey, P. J. Brown, N. Davies, M. Smith, and
P. Steggles, “Towards a better understanding of context and context-
awareness,” in Handheld and ubiquitous computing.
Springer, 1999,
pp. 304–307.
[8]
A. K. Dey, “Understanding and using context,” Personal and ubiquitous
computing, vol. 5, no. 1, 2001, pp. 4–7.
[9]
L. Barnard, J. S. Yi, J. A. Jacko, and A. Sears, “Capturing the effects of
context on human performance in mobile computing systems,” Personal
and Ubiquitous Computing, vol. 11, no. 2, 2007, pp. 81–96.
[10]
H.
Korhonen,
J.
Arrasvuori,
and
K.
V¨a¨an¨anen-Vainio-Mattila,
“Analysing user experience of personal mobile products through con-
textual factors,” in Proceedings of the 9th International Conference on
Mobile and Ubiquitous Multimedia.
ACM, 2010, p. 11.
[11]
L. Gorlenko and R. Merrick, “No wires attached: Usability challenges
in the connected mobile world,” IBM Systems Journal, vol. 42, no. 4,
2003, pp. 639–651.
[12]
A. Oulasvirta, S. Tamminen, V. Roto, and J. Kuorelahti, “Interaction
in 4-second bursts: the fragmented nature of attentional resources in
mobile hci,” in Proceedings of the SIGCHI conference on Human
factors in computing systems.
ACM, 2005, pp. 919–928.
[13]
C. Kim, M. Mirusmonov, and I. Lee, “An empirical examination of
factors inﬂuencing the intention to use mobile payment,” Computers in
Human Behavior, vol. 26, no. 3, 2010, pp. 310–322.
[14]
T.-P. Liang and Y.-H. Yeh, “Effect of use contexts on the continuous use
of mobile services: the case of mobile games,” Personal and Ubiquitous
Computing, vol. 15, no. 2, 2011, pp. 187–196.
[15]
R. Ali, F. Dalpiaz, and P. Giorgini, “A goal-based framework for contex-
tual requirements modeling and analysis,” Requirements Engineering,
vol. 15, no. 4, 2010, pp. 439–458.
[16]
J. Krogstie, “Requirement engineering for mobile information systems,”
in Proceedings of the seventh international workshop on requirements
engineering: Foundations for software quality (REFSQ01), 2001.
[17]
E. Eshet and H. Bouwman, “Addressing the context of use in mobile
computing: a survey on the state of the practice,” Interacting with
Computers, 2014, p. iwu002.
[18]
M. Kakihara and C. Sorensen, “Mobility: An extended perspective,” in
System Sciences, 2002. HICSS. Proceedings of the 35th Annual Hawaii
International Conference on.
IEEE, 2002, pp. 1756–1766.
[19]
H. B.-L. Duh, G. C. Tan, and V. H.-h. Chen, “Usability evaluation
for mobile device: a comparison of laboratory and ﬁeld tests,” in
Proceedings of the 8th conference on Human-computer interaction with
mobile devices and services.
ACM, 2006, pp. 181–186.
[20]
S. Kristoffersen and F. Ljungberg, “Mobile use of it,” in the Proceedings
of IRIS22, Jyv¨askyl¨a, Finland.
Citeseer, 1999.
[21]
J. Kjeldskov and J. Stage, “New techniques for usability evaluation
of mobile systems,” International journal of human-computer studies,
vol. 60, no. 5, 2004, pp. 599–620.
[22]
B. N. Schilit and M. M. Theimer, “Disseminating active map informa-
tion to mobile hosts,” Network, IEEE, vol. 8, no. 5, 1994, pp. 22–32.
[23]
B. Schilit, N. Adams, and R. Want, “Context-aware computing applica-
tions,” in Mobile Computing Systems and Applications, 1994. WMCSA
1994. First Workshop on.
IEEE, 1994, pp. 85–90.
[24]
P. J. Brown, “The stick-e document: a framework for creating context-
aware applications,” Electronic publishing-chichester-, vol. 8, 1995, pp.
259–272.
[25]
J. Pascoe, “Adding generic contextual capabilities to wearable comput-
ers,” in Wearable Computers, 1998. Digest of Papers. Second Interna-
tional Symposium on.
IEEE, 1998, pp. 92–99.
[26]
T. Rodden, K. Cheverst, K. Davies, and A. Dix, “Exploiting context
in hci design for mobile systems,” in Workshop on human computer
interaction with mobile devices, 1998, pp. 21–22.
[27]
G. Chen, D. Kotz et al., “A survey of context-aware mobile computing
research,” Technical Report TR2000-381, Dept. of Computer Science,
Dartmouth College, Tech. Rep., 2000.
[28]
R. Harrison, D. Flood, and D. Duce, “Usability of mobile applications:
literature review and rationale for a new usability model,” Journal of
Interaction Science, vol. 1, no. 1, 2013, pp. 1–16.
[29]
A. Mavin, P. Wilkinson, A. Harwood, and M. Novak, “Easy approach to
requirements syntax (ears),” in Requirements Engineering Conference,
2009. RE’09. 17th IEEE International.
IEEE, 2009, pp. 317–322.
[30]
M. B¨ohmer, B. Hecht, J. Sch¨oning, A. Kr¨uger, and G. Bauer, “Falling
asleep with angry birds, facebook and kindle: a large scale study on
mobile application usage,” in Proceedings of the 13th international
conference on Human computer interaction with mobile devices and
services.
ACM, 2011, pp. 47–56.
[31]
P. Oreizy, M. M. Gorlick, R. N. Taylor, D. Heimbigner, G. Johnson,
N. Medvidovic, A. Quilici, D. S. Rosenblum, and A. L. Wolf, “An
architecture-based approach to self-adaptive software,” IEEE Intelligent
systems, no. 3, 1999, pp. 54–62.
[32]
I. D. Constantiou, J. Damsgaard, and L. Knutsen, “The four incremental
steps toward advanced mobile service adoption,” Communications of
the ACM, vol. 50, no. 6, 2007, pp. 51–55.
[33]
Z. Zhang and X. Zheng, “User proﬁles and user requirements in mobile
services,” Perspectives in Business Information Research-BIR’2007,
2007, p. 170.
[34]
Y. Liu and Z. Zhang, “Stakeholder-centered requirements elicitation: A
view from user research,” in 7th International Conference on Perspec-
tives in Business Information Research, 2008, pp. 25–26.
[35]
A. Van Lamsweerde, “Goal-oriented requirements engineering: A
guided tour,” in Requirements Engineering, 2001. Proceedings. Fifth
IEEE International Symposium on.
IEEE, 2001, pp. 249–262.
[36]
K. W. Thomas and B. A. Velthouse, “Cognitive elements of empower-
ment: An interpretive model of intrinsic task motivation,” Academy of
management review, vol. 15, no. 4, 1990, pp. 666–681.
[37]
S. G. Hart and L. E. Staveland, “Development of nasa-tlx (task load
index): Results of empirical and theoretical research,” Advances in
psychology, vol. 52, 1988, pp. 139–183.
[38]
S. R. Barley, “On technology, time, and social order: Technically
induced change in the temporal organization of radiological work,”
Making time: Ethnographies of high-technology organizations, 1988,
pp. 123–169.
[39]
S. Jumisko-Pyykk¨o and T. Vainio, “Framing the context of use for mo-
bile hci,” International Journal of Mobile Human Computer Interaction,
vol. 2, no. 4, 2010, pp. 1–28.
[40]
L. Chittaro, “Distinctive aspects of mobile interaction and their impli-
cations for the design of multimodal interfaces,” Journal on Multimodal
User Interfaces, vol. 3, no. 3, 2010, pp. 157–165.
[41]
K. Schmidt and C. Simonee, “Coordination mechanisms: Towards a
conceptual foundation of cscw systems design,” Computer Supported
Cooperative Work (CSCW), vol. 5, no. 2-3, 1996, pp. 155–200.
[42]
F. Ljungberg and C. Sørensen, “Overload: From transaction to interac-
tion,” Planet Internet, 2000, pp. 113–136.
[43]
Tencent Technology (Shenzhen) Company Limited, “Wechat.” [Online].
Available: http://www.wechat.com/
[44]
Google,
Inc.,
“Gmail-email
from
google.”
[Online].
Available:
https://itunes.apple.com/us/app/id422689480
[45]
REDDIT, INC., “Alienblue-reddit ofﬁcial client.” [Online]. Available:
https://itunes.apple.com/us/app/id923187241
177
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

