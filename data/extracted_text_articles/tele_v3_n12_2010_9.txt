1
Micro-Mobility Solution Based on
Intra-domain multicast and Congestion
Avoiding for Two-Nodes Mobile IP Network
Yacine Benallouche and Dominique Barth
PRiSM-UMR 8144
Université de Versailles Saint-Quentin
45, Avenue des Etats-Unis
78035 Versailles Cedex, France
Email: {bey, dominique.barth}@prism.uvsq.fr
Abstract—In this paper, we deal with micro-mobility
in TWINBOARD network, which is a two nodes mobile
network architecture based on an all IP infrastructure.
The two nodes are the Base Station (BS) and the Access
Gateway (AG). To manage micro-mobility, we propose a
new approach providing efﬁcient and smooth handover,
while being able to coexist and inter-operate with exist-
ing technologies. Speciﬁcally, we propose an intra-domain
multicast-based handover approach combined with an
Alert mechanism. Alert approach is a distributed mecha-
nism that provides routers with information regarding the
congestion state of other routers without any modiﬁcations
on existing routing protocol. Our solution achieves an
efﬁcient intra-domain handover and avoids ﬂooding in the
network. The simulations used to evaluate our scheme and
compare it to other multicast scheme - DVMRP (Distance
Vector Multicast Routing Protocol) show that our solution
presents a good performance and outperforms DVMRP
scheme. Our main contribution consists on an efﬁcient new
approach to manage IP micro-mobility using intra-domain
multicast with alert mechanism.
Keywords - Micro-mobility, intra-domain handover,
multicast algorithm, alert algorithm.
I. INTRODUCTION
Current mobile networks are composed of several
network elements interconnected by speciﬁc network
infrastructures,
leading
to
important
development,
deployment and maintenance costs. For example, in the
data-path of 3G networks deﬁned by 3GPP there are at
least four types of interconnected nodes: node B, RNC,
SGSN and GGSN. The architecture under deﬁnition at
the WiMAX Forum presents a step forward towards
simpliﬁcation in deﬁning an IP based infrastructure
connecting 3 nodes [23]: Base Station (BS), Access
Gateway (AG), and Anchor Point/Home Agent (HA).
Considering the topics
and
the objectives of the
Next Generation Mobile Networks (NGMN) initiative
launched by major European and North American
mobile network operators [20], the European CELTIC
project TWINBOARD 1 investigates the performances
and the cost of a two nodes IP architecture for a mobile
network (see Figure 1). In this project, we consider a
mobile network composed of BSs connected to one
or some enhanced AGs through a dedicated network
that we call Access Aggregation Network (A2N).
The major objective of the TWINBOARD project is
to propose a novel A2N architecture considering a
speciﬁc features of IP networks especially in terms of
load distribution, reliability, and ﬂexibility. Here all
mobility related functions and associated features are
ensured by BS-AG tandem.
B S
B S
B S
B S
B S
A G
A G
A g g r e g a t i o n  N e t w o r k  
w i t h  d y n a m i c  c o n t r o l
Fig. 1.
TWINBOARD network Architecture
The target architecture deﬁned by TWINBOARD
recommendations is an optimized Packet Switched
(PS) network architecture, which will provide a smooth
migration of existing 2G and 3G networks towards an
IP network with improved cost competitiveness and
broadband performance. The A2N network is an IP
based network and loosely meshed with tree-like trafﬁc
1TWINBOARD European CELTIC PROJECT, see http://www.
celtic-initiative.org/Projects/TWINBOARD/default.asp.
93
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

2
pattern -mostly GW from/to BS- that is changing due
to mobility. Due to these peculiarities, load sharing
and resilience mechanisms known from the Internet are
expected to yield suboptimal results.
Related works: Several studies on micro-mobility [7],
[16] show that Mobile IP (MIP) [11], the proposed
standard, has several drawbacks from its network
overhead and its end-to-end delays due to the triangle
routing
problem.
Many
micro-mobility
approaches
attempt to improve MIP [13], [14] in current IP mobile
networks.
However,
such
approaches
suffer
from
complexity and handover performance [6]. To the best
of our knowledge, the proposed utilization of multicast
combined with alert message diffusion in Two-Nodes
Mobile IP network has never been studied to manage
intra-domain handover.
The rest of the paper is organized as follows. In
Section II, we give an overview of multicast protocols.
In Section III, we describe our proposed algorithms
and we prove the NP-completeness of the related
problem.
Section
IV
presents
our
TWINBOARD
simulator
and
its
environment
(used
topologies,
multicast group and trafﬁc model). Section V gives
evaluation and simulation results. In Section VI, we
present conclusions and outline perspective future works.
In our case, we propose two distributed algorithms
mainly implemented on GW and BS nodes to guaranty
QoS dealing with the real time constraints of mobility.
The paradox we deal with is to guarantee moving
mobile connections by insuring enough ﬂexible resource
use on an IP routing without considering too expensive
mechanisms on each router of the aggregation network.
Considering these attempts, the solution we propose
focuses in particular on optimization of the route tables
and on trafﬁc load balancing techniques between BS
and GW, without using resource allocation mechanisms
in the IP interconnection network.
The
architecture
we
propose
is
based
on
two
collaborative
algorithmic
mechanisms.
Firstly,
to
avoid congestion in the network and to insure ﬂexibility
in the use of the bandwidth of the network, we adapt the
routing alert algorithm proposed in [19] for inter-domain
network by introducing a hierarchy concept in the IP
network based on the particularity of the considered
trafﬁc (from BS to GW and from GW to BS). Secondly,
we propose a distributed process to control multicast
functionalities in each IP router to obtain a constraint
delay multicast tree compatible with the embedded IP
routing. Here multicast is used to anticipate handover
when it is considered as probable. Then trafﬁc to the
target mobile user is multicasted to the BS to, which it
is connected and to the geographical neighboring BS.
The aim of the proposed process using only IP basic
mechanisms, is to limit congestion overhead due to the
multicast.
These algorithmic solution takes beneﬁts of forwarding
and routing of datagrams and presents several natural
advantages:
• Cheap installation and exploitation on adapted and
inexpensive existing IP infrastructure.
• Good load distribution (Alert mechanism).
• Ability to coexist and to inter-operate with existing
technologies.
II. MULTICAST OVERVIEW
We categorize algorithms for the multicast tree con-
struction in two categories [17]:
1) Source-Based Algorithms (SBA).
2) Core-Based Algorithms (CBA).
In SBA algorithm the tree’s root is the source node
and the leaves are the multicast group’s components.
SBA is currently used as the tree construction algorithm
for
Distance
Vector
Multicast
Routing
Protocol
(DVMRP) [18], Protocol Independent Multicast Dense
Mode (PIM-DM) [3], and Multicast Open Shortest Path
First (MOSPF) [10].
The
CBA
or
the
core-based
algorithm
selects
a
core node as a multicast tree’s root. Afterwards, a
tree rooted at the core node is constructed to reach
all the multicast group’s members. In this case, the
core node is different from the source and it is very
important to select the best one as much as possible.
Therefore the source send messages to the core node,
which distribute those messages to the destinations.
Among the protocols that use the CBA we can cite
Protocol Independent Multicast Sparse Mode (PIM-SM)
[4] and the Core-Based Tree (CBT) protocol [2]. The
core-based algorithms are highly suitable for sparse
groups and for large networks. Indeed they provide
excellent bandwidth conservation for receivers. With the
multicast technology, multimedia applications, such as
videoconferences, require an efﬁcient management of
the QoS. An essential factor of these real-time strategy
is to optimize the DVBMT problem [12].
The multicast delay variation is the difference of
the maximum end-to-end delay and the minimum
end-to-end delay among the paths from the source node
to all the destination nodes. Minimizing this parameter
94
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

3
allows all the destination nodes to receive the same
data simultaneously as much as possible. One issue to
the DVBMT problem is to minimize multicast delay
variation under multicast end-to-end delay constraint.
In [12], authors propose a heuristic solution called
Delay Variation Multicast Algorithm (DVMA), where
they construct at ﬁrst the tree by considering only the
end-to-end delay constraints. Afterwards, they enhance
the tree by considering the the multicast delay variation
constraint. Nevertheless, DVMA presents a high time
complexity, which is does not ﬁt in modern applications.
Another heuristic solution with lower time complexity
than DVMA is called Delay and Delay Variation
Constraint Algorithm (DDVCA). DDVCA is based on
the Core-Based Tree (CBT), where the core node is
selected as the node with minimum delay variation
with all other multicast group’s nodes. However, the
DDVCA exhibits high network charge around the core
node. Indeed, all the multicast packets transit through
the core node, this last one resends these packets to the
leaves.
Our multicast algorithm overcomes these limitations and
it is used in wireless networks to manage the handovers
by constructing an optimized tree from one from an
Access Gateway (AG) to some Base Stations (BS)
on, which mobility can be predicted. Unlike DDVCA
where the tree construction is based only on one core
node, our distributed solution extends this construction
on several core nodes. This allows us to minimize the
bandwidth consumption as we spread the charge on
different core nodes.
III. MULTICAST&ALERT-BASED MICRO-MOBILITY
In this section we present our solution to manage
micro-mobility with congestion avoiding. We propose
two algorithms: Multicast algorithm and alert algorithm.
A. Problem Context
Handover performance and router congestion are a
signiﬁcant factors in evaluating performance of IP mo-
bile network. With the Internet growth it becomes cru-
cial to design efﬁcient, scalable and robust handover
protocols. We propose a new architecture for providing
efﬁcient and smooth handover with congestion avoiding.
Our approach consists of two distributed algorithms:
• Multicast Algorithm used to construct an optimized
multicast tree from an Access Gateway (AG) to
some Base Stations (BS) on, which mobility can
be predicted [1].
• Alert Algorithm used to avoid IP router conges-
tion [19].
Note that the multicast will occur only within the period
during, which the BS communicates the candidates cells
to the moving Mobile Node. Once this information is
acquired by the Mobile Node and one cell is selected,
then the unicast routing runs again and the multicast is
interrupted. The handover trigger is based on a simple
power signal comparison between the current BS and
the candidate one. In our case, Handover Trigger event
are invoked when the received signal level in the current
cell becomes lower than the pre-deﬁned thresholds. A
handover_trigger notiﬁcation message is sent by the
current cell to the AG in order to launch the multicast
to the candidate cells.
We consider a single domain as shown in Figure
2.
The Border Router (BR) connects the network to the
internet and one Access Router (AR) serves a number
of BSs. When a mobile node moves from one BS to
another without changing its AR, we talk about an
intra-AR handover case that is not considered in this
paper because it is speciﬁc to AR implementation.
Each BS on, which mobility can be predicted is
assigned a multicast address and it sends a notiﬁcation
to its attached AG . We do not focus on mobility
prediction, so we assume that we know the Base
Stations set on, which mobility can be predicted [8],
[15]. Considering this set to be the multicast group Mi,
it appears suitable to match them to the local group
given by the neighboring set NSi of each Base Station
BSi in the planar graph PG = (Vp, Ep), where Vp is
the set of Base Stations and Ep is a set of directed
links. Therefore, for a given BSi a multicast group
Mi ⊂ Vp is constructed by m Base Stations belonging
the set NSi and distributed geographically on the
TWINBOARD access network.
Actually, the multicast is triggered at the AG level
considered as the intelligent entity responsible of pro-
cessing the handovers and other functions in TWIN-
BOARD network. In the simulated handovers scenario
(Figure 2), one mobile node attached to the Base Station
BSi is in communication with another mobile node
attached to the Base Station BSj that may roam outside
of its serving cell. Before handover trigerring, unicast
packets are sent by BSi to its attached AG along the
IP routers network by using an unicast routing protocol
combined with the Alert mechanism. Once the handover
is detected, and according to the address of BSj obtained
from the unicast packet, the AG selects the multicast
group members mj from the NSj set. Thus, it constructs
the multicast packets to be forwarded to each multicast
group member using the proposed Multicast Algorithm
combined with the Alert Algorithm.
95
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

4
B a s e  S t a t i o n
M o b i l e  N o d e  i
Mobility prediction
Multicast + Alert
Unicast + Alert
B S i
B S j
M o b i l e  N o d e  j
A c c e s s  R o u t e r
A c c e s s  R o u t e r
Input: i, j and NSj
 Multicast Trigger
Internet
B o r d e r  R o u t e r
B o r d e r  R o u t e r
N S j  S e t
A c c e s s  G a t e w a y
Fig. 2.
TWINBOARD Architectural view
B. Multicast Algorithm
When a mobile user moves from one point of access
to another within a domain, a handover event takes place
between the two points of access. Handover involves
to redirect the incoming trafﬁc ﬂow to the new access
point. In proactive handover the link between the mobile
user and the new access point is established prior to its
disconnection with the old access point. Hence a smooth
handover, i.e., handover with low packet loss, can take
place by exploiting the fact that the new access router
is known a priori and that multicasting allows proactive
path setup to the new access router. The packets are
multicasted to the mobile nodes within the domain
where handover can be predicted. Mobility prediction
need not necessarily be a part of the micro-mobility
algorithm as it can be better achieved with additional
information from lower layers.
Problem deﬁnition:
We deﬁne the related multicast problem from a graph
theory point of view (see Figure 3 for an example). Then,
we show that it is NP-complete and not approximable
problem. We consider a symmetric digraph G = (V, E)
within a coherent routing function R, a vertex s ∈ V
(called transmitter) and a vertex subset D (called
destination set).
Deﬁnition 1: We
deﬁne
a
Broadcast
scheme
from s to D as a subtree of G rooted in s, with depth
equal to max
v∈D |R(s, v)|, with leaves in set D and where
the edge set can be decomposed in a set of paths such
that:
1) The initial extremity of each path is s or an
intermediate vertex with outgoing degree > 1 in
the subtree.
2) The ﬁnal extremity of each path is a leaf.
3) Each path < i, f > corresponds to the route
R(i, f).
The number of edges in the subtree deﬁnes the size of
the broadcast scheme.
s
Vertices in D
Routes From R
Fig. 3.
An example of multicast scheme
s
S1
S2
S3
Sm
S’1
S’2
S’m
c1
c2
c3
cn
Transmiter
Destination set
Fig. 4.
Polynomial reduction
The problem of ﬁnding a multicast tree minimizing
the number of edges under an IP routing constraint can
be deﬁned as follows:
Problem: Destination_Mobility (DeMo)
Given: A symmetric digraph G = (V, E), a coherent
routing R, a transmitter s ∈ V , a destination set D and
an integer k.
Question: Does there exist a Broadcast scheme with
size at most k ?
Complexity:
Theorem 1: For some c > 0, Problem DeMo is NP-
complete and not approximable within c log(n),where n
is the number of vertices of the graph.
To prove this theorem, we propose a polynomial
reduction from the SET-COVER problem.
96
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

5
Proof: Problem DeMo is clearly in NP. Indeed, it is
easy to check in polynomial time for a given structured
trees if one of them is (or not) a broadcast scheme
with at most k edges. Counting the number of edges
requires at most | E | elementary operations. The trees
generation can be done in polynomial time within the
number of the structured trees by choosing recursively
the initial extremity for each element of D.
To prove that Problem DeMo is NP-complete, we
propose a polynomial reduction from the SET-COVER
problem deﬁned as follows:
Problem: Set Cover (SET-COVER)
Given: A set C
= {c1, . . . , cn} of n elements, a
set S = {S1, . . . , Sm} of m subsets of C such as:
Sm
i=1Si = C and an integer k′.
Question:Does there exist a subset S′ of S (called
cover of the set C: S
i|Si∈S′Si = C) such that |S′| ≤ k′ ?
The problem SET-COVER has been shown to be
NP-complete in [5].
Consider any instance I=(C, S, k′) of the Problem SET-
COVER. We transform this instance to the instance
I′=(G, R, D, s, k) of the Problem DeMo.
1) G is deﬁned as follows:
• We deﬁne the sets of vertices:
ζ
=
{c1, . . . , cn}, ϕ =
{S1, . . . , Sm},
the vertex s and the set ϕ′ = {S′1, . . . , S′m}.
• We connect by a symmetric edge the vertex s
to each vertex of the set ϕ.
• We connect the vertex cj to the vertex Si by
an edge if and only if cj ∈ Si.
• So, the vertices set of the graph G is composed
by: V = s ∪ ζ ∪ ϕ ∪ ϕ′.
• We consider a complete bipartite graph be-
tween ϕ and ϕ′.
2) The set of destinations is : D = ζ ∪ ϕ′ , and the
transmitter is the vertex s.
3) The routing R is deﬁned as follows :
• For i ∈ {1, . . . , k′} , the route R(s, S′i) is the
shortest path crossing ﬁrst the arc to Si ∈ ϕ,
then the arc from Si to S′i;
• For each couple (i, j) the route R(Si, S′j)
is the arc that connect them in the complete
bipartite graph;
• For j ∈ {1, . . . , n} , if and only if cj ∈ Si the
arc from Si to cj is the route R(Si, cj);
• For each other couples of vertices in the graph
G, we consider a shortest path routing.
4) We choose k = k′ + m + n.
It’s clear that the number of vertices in the graph
G is polynomial considering |C|. Thus, we obtain a
polynomial reduction SET − COVER → DeMo.
This construction is shown in the Figure 4.
Consider
now that
the
answer
to
Problem SET-
COVER for I is positive. So, it exists a set C ⊂ S
of k′ elements, which cover the set C. We deﬁne a
Broadcast scheme where the tree is induced by the
union of the edges of the following routes:
1) The routes of length 1 from s to each vertex Sj
such that Sj ∈ C.
2) For each i such that Si ̸∈ C, a route made of
length 1 from a vertex Sj ∈ C to S′
i.
3) For each ci ∈ ζ, a route made of length 1 from a
vertex Sj ∈ C to ci such that ci ∈ Sj.
First, it is clear that this set of routes induces a
subtree of G rooted in s with k′ + m + n edges, depth
2 and leave set D. Secondly, by considering routes
from s to vertices S′
j such that Sj ∈ C, and all other
edges as routes, we can conclude that this tree deﬁnes
a broadcast scheme.
Conversely, consider now that the answer to Problem
DeMo for I′ is positive. So, it exists in the graph
G a Broadcast scheme of at most k edges with s as
transmitter and where each destination (ﬁnal extremity)
is in D. Since ϕ is a vertex set disconnecting s from D
and since the maximal delay is m + n + 1, then the tree
can only consists in some path from s to a subset Sϕ of
ϕ and then one arc from a vertex in Sϕ to each vertex
in D. Thus, |Sϕ| = k′ and since Sϕ is also a subset
of S, the answer is positive for instance I to Problem
SET-COVER.
We conclude that Problem DeMo is NP-complete.
Now, let us demonstrate that Problem DeMo is not
approximable within c log(n), for some c > 0 with n
the number of vertices. We consider Problem DeMo as
an minimization problem. We have seen that any tree
in a broadcast scheme for any instance I′ described
above consists in some path from s to a subset Sϕ
of ϕ and then one arc from a vertex in Sϕ to each
vertex in D. Thus, the number of arcs in such a tree
is equal to a + m + n and that this number is equal
to opt + m + n where opt is the minimum size of
a solution for instance I to Problem SET-COVER
considered as a minimization problem.
Consider that for some constant c, Problem DeMo
is
c-approximable, i.e.,
there
exists
a
polynomial
algorithm providing a solution size a × (m + n + 1) + n
for I′, and a solution of size a for I, such that
97
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

6
a+m+n
opt+m+n ≤
c. Thus,
a
opt ≤ c

1 +
1
opt

≤ 2c , i.e.,
Problem SET-COVER is 2c-approximable, which is a
contradiction with the fact that for some c > 0, this
problem is not approximable within c log(m + n) [9].
We conclude the proof of the Theorem 1.
Distributed algorithm to solve Problem DeMo:
We
give
now
more
details
about
our
proposed
algorithm to achieve an efﬁcient intra-domain handover.
A multicast datagrams are composed of two portions: a
ﬁxed length header and a data ﬁeld. The header contains
a main destination address considered by the routing
function, and a set of secondary destination addresses.
An IP router receiving such a multicast packet has to
decide if it creates and sends new multicast packets
through all the outgoing links or remains on the main
destination route. For each empty part on a link,
no packet is sent. Note that the complexity of this
distributed algorithm is low and that no large memory
size is required in routers. Moreover, this algorithm just
consists in piloting the usual IP multicast functions in
these routers.
The header of a multicast packet P consists in:
• A set of destination Dest(P) and a main destina-
tion Maindest(P) ∈ Dest(P).
• A delay Delay(P) being the maximal number of
remaining steps for each destination in Dest(P)
to receive the packet.
For each couple of nodes u and v in the graph, let us
denote by succR(u, v) the successor of u on the route
R(u, v). Consider now a node u receiving a multicast
packet P at a given step. Any distributed algorithm to
solve Problem DeMo consists for u to send a multicast
packet Pw to each w ∈ Γ+
G(u) at the next step. Such a
distributed algorithm has to respect the following rules.
For each node w = succR(u, v), let us ﬁrst deﬁne:
Sent(w, P) = {v ∈ Dest(P)s.t.|R(u, v)| = Delay(P)}.
Then,
1) Sent(w, P)⊂Dest(Pw),
2) Delay(Pw) = Delay(P) − 1,
3) if
w
=
succR(u, Maindest(P))
then
Maindest(Pw) = Maindest(P),
4) the set of subsets {Dest(Pw)| w ∈ Γ+
G(u) and
Dest(Pw) ̸= ∅} is a partition of Dest(P).
If for any w, Dest(Pw)=∅ then no packet is sent by u to
w. Considering u′ as the neighbor of u having sent Pu to
u, we deﬁne for any v ∈ Dest(Pw): Last(v)=|R(u′, v)|.
We
Consider
w0=succR(u, Maindest(P)).
Then
for any w ∈ Γ+
G(u) and respecting the previous rules,
the distributed multicast algorithm consists in the
following instructions:
Algorithm 1 Node U receiving a multicast packet P
Require: Packet P; w = succR(u, v).
Ensure:
1: if w ̸= w0 then
2:
Dest(Pw) = Sent(w, P)
3:
for all v ∈ Dest(P) −
S
w∈Γ+
G(u)
Sent(w, P) do
4:
if |R(u, v)| ≥ Last(v) then
5:
Put v in Dest(PsuccR(u,v))
6:
end if
7:
end for
8:
for all w ∈ Γ+
G(u) and any v ∈ Dest(Pw) do
9:
Set Last(v)=|R(u, v)|
10:
end for
11: end if
12: Maindest(Pw)=
the
least
number
vertex
in
Dest(Pw).
13: Dest(Pw0)=Dest(P)-
S
w∈Γ+
G(v)−{w0}
Dest(Pw)
The step number 1 guarantees the respect of the
previous rules. The step 2 is the optimization step
of the algorithm consisting in identifying on the
current branch of the tree, if for any destination
v ∈ Dest(P) −
S
w∈Γ+
G(u)
Sent(w, P), the current vertex
u is or not the much closer vertex from v.
To initiate the process, we consider that the transmitter
s has received a packet P with a node in D such that
the distance from s to this node is maximum (this
distance initializes Delay(P)). This node will be the
main destination and all the other nodes in D compose
the secondary destinations. For any v ∈ Dest(P), we
also set Last(v)=|R(s, v)|.
C. Alert Algorithm
This algorithm is based on works proposed in [19]
for inter-domain network. We adapt this routing alert
algorithm for intra-domain network by introducing a
hierarchy concept in the TWINBOARD network similar
to the one used in inter-domain network. Alert algorithm
uses the existing intra-domain routing protocol function-
alities. It acts directly on routing tables by disabling,
activating or replacing routes. Our goal is to provide
routers with information regarding the congestion state
of other routers without any change in the routing
protocol. We say that a router is:
98
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

7
• Perturbed or in red state: if the total amount of
trafﬁc transitting through it, emitted by it, and
sending to it exceeds its capacity.
• Stable or in green state : if its capacity exceeds its
trafﬁc loads.
Each router informs its neighbors when it becomes
perturbed in order to allow them to change their routing
and it also keeps them informed when it returns to an
operational state. Each router is provided with:
• RTi containing the next hop for the intra-domain
routing protocol.
• Routing table LTi containing a lists of the next hops
towards every destination. This table is altered by
classical intra-domain routing mechanism only.
• Priority table PTi
storing a list of potential
congestioned-free routes. It is same as the RTi table
if there are no perturbed routers.
• State Table sti containing states of its neighbors.
This table is updated by alerts sent by neighboring
routers when their states change. The default values
in this table are green.
The alert message is composed of: an identiﬁer of
the router (ID), a new state, and a delay d. Once in the
router scheduler, the received message will be processed
after d delay (unit of time) and will replace any older
message that arrived from the same emitting router. The
delay is set according to an exponential distribution
in order to avoid synchronization in the network. The
mean of the distribution is small for red alert and big
for green alert. By this way, we limit the emergence of
oscillations that can occur by exchanges of green and
red messages.
Algorithm 2 details the behavior of a router i treating
a packet p received from the node j. First, the router i
selects destinations for, which the router j (in red state)
is the next hop. The router i then chooses uniformly the
alternative next hops among routers in green state and
stored in the set LTi[dest]. If no node can be chosen,
the node i selects the routing path stored in RTi table
in spite of its state.
IV. SIMULATOR DESCRIPTION
In this section we simulate the behavior of the TWIN-
BOARD network in case of intra-domain handovers
by combining the two algorithms: Multicast and Alert
Algorithms. The two proposed algorithms are compati-
bles with the embedded IP routing. The purpose of our
simulation is to show how the proposed scheme can
be adopted and compatible with the existing IP routing
protocols.
Algorithm 2 Node i treating a message p
Require: message p = (j, state, delay); tables RTi,
PTi, LTi, sti
Ensure:
delete p from the scheduler
2: sti[j] ⇐ state
if state = red then
4:
for all dest ∈ V do
if PTi[dest] = j then
6:
let S = {x ∈ LTi[dest]/sti[x] = green}
if S = ∅ then
8:
PTi[dest] ⇐ RTi[dest]
else
10:
PTi[dest] ⇐ choose_uniformly_in(S)
end if
12:
end if
end for
14: else
for all dest ∈ V do
16:
if sti[PTi[dest]] = red then
if j ∈ LTi[dest] then
18:
PTi[dest] ⇐ j
end if
20:
if RTi[dest] = j then
PTi[dest] ⇐ j
22:
end for
end if
A. Simulation environment
In order to prove our concepts and the advantages of
our algorithms, we have developed a simulator using
OMNeT++ [21], which is a free, open-source discrete
event simulation tool, similar to other tools like PAR-
SEC, NS, or commercial products like OPNET. Other-
wise, OMNeT++ contains deﬁnitions of many popular
protocols (UDP, TCP, IPv4, IPv6) as well as models of
basic network nodes (routers, hubs, access points, gate-
way, base station etc.) that help us on modelling intra-
domain mobility without worrying about the underlying
mechanisms.
B. Topology and trafﬁc Assumptions
The simulated network has been modelled according
the TWINBOARD architecture as shown in Figure 2.
The main elements are Base Station (BS) and the Access
Gateway (AG) interconnected by a network of basic IP
routers. We used topologies with 80 nodes where the
number of Gateway, Base Stations and their degree of
connectivity are considered as parameters of simulation:
• The degree of the gateway is chosen greater than 1.
• The degree of the BS is equal to 1 (Access Points).
99
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

8
• The topology of the IP routers network is generated
by the BRITE generator [22].
The trafﬁc is generated by the set of BS (sources) then it
ﬂows through the IP routers to reach the gateway to be
ﬁnally multicasted to the Base Stations members of the
multicast group. T Vi(j) represents the trafﬁc amount
to be delivered from the source BSi to the destination
BSj member of the multicast group. The trafﬁc amount
T Vi(j) =
α
|Vp|2 N(10, 8) generated by the BSi is a
random quantities given by a normal distribution with
the mean equal to 10 and the standard deviation equal
to 8.
The parameter α is the ﬂow’s desired trafﬁc parameter
used to vary the level of the trafﬁc in the network. To
simulate the intra-domain handovers event, we vary
periodically the trafﬁc matrix as follows:
• We choose randomly and with certain probability
Pij two trafﬁc matrix elements T Vi(j) and T Vj(i).
• We reduce the value of the trafﬁc matrix element
T Vi(j) of a certain quantity q.
• We increase the value of the trafﬁc matrix element
T Vj(i) of a certain quantity q.
Indeed, we simulate the user handovers by a tolerate
trafﬁc matrix ﬂuctuations. Although networks are engi-
neered to tolerate some variation in the trafﬁc matrix,
large changes can lead to congested links and break the
assumptions used in most designs. To simulate realistic
scenarios, the cellular network (set of BSs) is represented
by a random planar graph with degree equal to 6.
C. Simulator Modules
Our simulator deals with the IPv6 Mobility Extention.
We can easily build different network scenarios by
providing a few simple parameters from, which the
simulator constructs the network automatically.
According to OMNeT++, the structure of our simula-
tor is modular. We deﬁned the modules and implemented
their functions in C++. The main modules are:
• Gateway: The intelligent component implements
the mobile extention management (Multicast and
Alert Algorithms).
• Base Station: These elements represents all phys-
ical radio access points belonging to the same
network.
• Router: This component stands for the whole wired
network between Base Station, servers and Gate-
ways. It is responsible for routing packets and
simulates network delays as well.
V. PERFORMANCE ANALYSIS
With the limited charge capacity of routers and net-
work overhead the optimization of multicast and the
Alert mechanism are very important. We simulated three
scenarios by varying the level of the trafﬁc ﬂowing
through the network. This controlled-load function is in-
voked by specifying the parameter α (described above):
• The ﬁrst scenario depicts an unloaded network ob-
tained with the value α=0.06. This value engenders
a minor trafﬁc ﬂuctuations.
• The second scenario is given by an average network
load (α=0.13). This value increases the network
load of 200% compared to the one in unloaded
network.
• The third scenario corresponds to a heavily loaded
network (α=0.5) enough to saturate 20% of routers
in the network.
Note that these three values of α are obtained by
experiences.
For each scenario, we investigate the following statis-
tics to evaluate the performance of our approach and
compare it to the DVMRP (Distance Vector Multicast
Routing Protocol) combined with the Alert algorithm :
• Number of perturbed routers: A router is perturbed
if its trafﬁc loads exceeds its capacity.
• Number of perturbed routes: A perturbed route is
a route containing at least one perturbed node.
• Volume of a perturbed trafﬁc: Is the sum of
trafﬁc passing on perturbed routes. Trafﬁc from i
to j is perturbed if the route from i to j is perturbed.
We chose DVMRP protocol because it is an Interior
Gateway Protocol (IGP); suitable for use within an
Autonomous System (AS), but not between different
ASs. DVMRP provides an efﬁcient mechanism for
connectionless message multicast to a group of hosts.
To
verify
the functioning of our approach we
performed three series of simulation runs on the same
network topologies (50 routers) for three values of α.
All the graphs follow a common format. Each one
shows simulation statistics obtained by the proposed and
DVMRP algorithms (combined with Alert algorithm) for
the three scenarios mentionned above. In what follows,
we denote by standard approach the combination
of the two algorithms: DVMRP and Alert. While
proposed approach will denote the combination of the
multicast algorithm with the Alert mechanism.
Figure 5 illustrates simulation results for a heavily
100
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

9
 0
 2
 4
 6
 8
 10
 12
 14
 0
 50
 100
 150
 200
 250
 300
 350
 400
 450
 500
Numbre of perturbed routers
Time [S]
-a-
Standard Approach
Proposed Approach
 0
 20
 40
 60
 80
 100
 120
 140
 0
 50
 100
 150
 200
 250
 300
 350
 400
 450
 500
Number of perturbed routes
Time [S]
-b-
Standard Approach
Proposed Approach
 0
 50
 100
 150
 200
 250
 300
 350
 400
 0
 50
 100
 150
 200
 250
 300
 350
 400
 450
 500
Perturbed Flow [TU]
Time [S]
-c-
Standard Approach
Proposed Approach
Fig. 5.
Simulation results for 80 nodes network and high network
charge (one simulation run, α=0.5).
loaded network (α=0.5). Figure 5.a shows that the
number of perturbed routers obtained with the standard
approach reaches eleven routers when the trafﬁc matrix
is ﬁlled up and it oscillates around this values. Our
approach reduces this value to oscillates around eight
routers and it reaches six routers in the best cases. We
observe that for the trafﬁc value α=0.5 almost 20% of
the routers are perturbed. In this case the performance
of our algorithms approaches those of DVMRP. The
same analysis can be done for the Figures 5.b and
3.c. Indeed, because of the high network load, our
algorithms can not ﬁnd substitute routes to achieve
 0
 2
 4
 6
 8
 10
 0
 50
 100  150  200  250  300  350  400  450  500
Numbre of perturbed routers
Time [S]
-a-
Standard Approach
Proposed Approach
 0
 20
 40
 60
 80
 100
 0
 50
 100  150  200  250  300  350  400  450  500
Number of perturbed routes
Time [S]
-b-
Standard Approach
Proposed Approach
 0
 50
 100
 150
 200
 0
 50
 100  150  200  250  300  350  400  450  500
Perturbed Flow [TU]
Time [S]
-c-
Standard Approach
Proposed Approach
Fig. 6.
Simulation results for 80 nodes network and average network
charge (one simulation run, α=0.13).
an efﬁcient load-balancing and consequently it can
not reduce the number of perturbed routers, perturbed
routes and the quantity of the perturbed ﬂow.
For an average network charge (α=0.13), Figures
6 show that our approach results are signiﬁcantly better
than those obtained by the standard approach. The
numbers of perturbed routers, perturbed routes and the
quantity of the perturbed ﬂow, presented in Figure 6.a,
Figure 6.b and Figure 6.c , exhibit that our algorithm
presents performance four times better than DVMRP. In
these ﬁgures, the spades correspond to the ﬂuctuations
101
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

10
 0
 2
 4
 6
 8
 10
 0
 100
 200
 300
 400
 500
Numbre of perturbed routers
Time [S]
-a-
Standard Approach
Proposed Approach
 0
 20
 40
 60
 80
 100
 0
 100
 200
 300
 400
 500
Number of perturbed routes
Time [S]
-b-
Standard Approach
Proposed Approach
 0
 20
 40
 60
 80
 100
 0
 100
 200
 300
 400
 500
Perturbed Flow [TU]
Time [S]
-c-
Standard Approach
Proposed Approach
Fig. 7.
Simulation results for 80 nodes network and low network
charge (one simulation run, α=0.06).
in the trafﬁc that provoke additional router saturation.
Our algorithms react by ﬁnding a new (better) routes to
reduce immediately the number of perturbed routers. In
Figure 6.c, we observe that our algorithms reduce the
quantity of perturbed ﬂow to a third.
The graphs in Figure 7, show that even in unloaded
network (α=0.06), the standard approach presents its
limits. Since we register in some cases two perturbed
nodes. On the opposite, our proposed approach ﬁnds
quickly an efﬁcient routing with no perturbed routers
even with the trafﬁc ﬂuctuations.
 0
 5
 10
 15
 20
 25
 30
1.00
0.50
0.13
0.09
0.06
Nombre moyen de routeurs satures
Alpha
DVRMP-Multicast+Alerte
Opt-Multicast+Alerte
Fig. 8.
The number of perturbed routers depending on the trafﬁc load
averaged for series of simulations runs.
To investigate the inﬂuence of the trafﬁc load on
the performance of our approach, we used averaged
series of simulation runs (100 network topologies).
Each series had a different load by specifying the
parameter α, which varies from light load α = 0.06
to saturating load α = 1. Figure 8 shows that for the
saturating load value almost half of the network routers
are perturbed. In this case the performance of our
algorithms approaches those of the standard approach.
The average values in Figure 8 conﬁrm those shown
in Figures 5, 6 and 7. Clearly, the performance of our
approach decrease when the the parameter α increases.
VI. CONCLUSION
We have presented a novel approach to manage
IP micro-mobility using intra-domain multicast with
alert mechanism. Our algorithms achieve efﬁciently
two major functions in the mobile network: mobility
management and network congestion avoiding. In terms
of multicast performance, our algorithm achieves an
optimized multicast in terms of the number of the used
links. Also, it provides minimal break in service since
it is based on handovers prediction.
In this paper, and with the context and the goals
of
TWINBOARD
project,
our
simulation
results
show that with a good and a priori established trafﬁc
engineering, our proposed approach performs a reliable
intra-domain handover with congestion avoiding. Our
multicast algorithm outperforms DVMRP because of its
minimal number of perturbed routers.
In the future, we plan to conduct further simulations to
investigate real handover scenarios. We also would like
to investigate the extention of our approach to support
dynamic multicast group membership.
102
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

11
REFERENCES
[1] Y. Benallouche and D. Barth, “Optimized multicast tree for
handover in a two-nodes mobile network architecture based
on an all-IP infrastructure,” Proceedings of the Fourth Inter-
national Conference on Wireless and Mobile Communications
(ICWMC’08), Athens, 2008, pp. 179-184.
[2] A. Ballardie, “Core Based Trees (CBT Version 2) Multicast
Routing:Protocol Speciﬁcation,” IETF, Internet Draft, RFC 2189,
September 1997.
[3] S. Deering, “Protocol Independent Multicast-Dense Mode (PIM-
DM):Protocol Speciﬁcation,” IETF, Internet Draft, RFC 2365,
July 1998.
[4] D. Estrin, “Protocol Independent Multicast-Sparse Mode (PIM-
SM):Protocol Speciﬁcation,” IETF, Internet Draft, RFC 2362,
June 1998.
[5] M. R. Garey and D. S. Johnson, “Computers and intractability.
A guide to the theory of NP-completness,” San Francisco, W. H.
Freeman, 1979.
[6] A. Helmy, M. Jaseemuddin and Ganesha Bhaskara, “Efﬁcient
Micro-Mobility using Intra-domain Multicast-based Mechanisms
(M&M),” In ACM SIGCOMM Computer Communication Re-
view, Vol. 32, No. 5, 2002, pp. 61-72.
[7] A. Helmy, “A Multicast-based Protocol for IP Mobility Sup-
port,” In ACM SIGCOMM Second International Workshop on
networked Group Communication (NGC 2000), Novembre 2000.
[8] N.K. Karthirkeyab and P. Narayanasamy, “A Novel Mobility
Based Bandwith Reduction Algorithm in Cellular Mobile Net-
work,” In International Journal of Computer Science and Net-
work Security, Vol.8 ,No.5, 2008, pp. 62-69.
[9] C. Lund and M. Yannakakis, “On the hardness of approximating
minimization problems,” In Journal of the ACM (JACM), v.41
n.5, p.960-981, Sept. 1994.
[10] J.Moy, “Multicast Extension to OSPF,” IETF, Internet Draft, RFC
1584, March 1994.
[11] C. Perkins, “IP Mobility Support,” RFC 2002, Internet Engineer-
ing Task Force, October 1996.
[12] G.N. Rouskas and I. Baldine, “Multicast Routing with end-to-
end delay and delay variation constraints,” In IEEE JSAC, April
1997, pp. 346-356.
[13] T.C. Schmidt and M. Wählisch, “Analysis of Handover Fre-
quencies for Predictive, Reactive and Proxy Schemes and their
Implications on IPv6 and Multicast Mobility,” Proceedings of
the fourth International Conference on Networking (Networking
–
ICN 2005), Reunion Island, 2005, Part II, Lecture Notes in
Computer Science 3421, pp. 1039–1046.
[14] T.C. Schmidt and M. Wählisch, “Performance Analysis of Mul-
ticast Mobility in a Hierarchical Mobile IP Proxy Environment,”
Proceedings of the TERENA Networking Conference, 2004.
[15] W. Su, S.J. Lee and M.Gerla, “Mobility Prediction and Routing in
Ad hoc Wireless Network,” In International Journal of Network
Management, vol.11(1), 2001, pp.3-30.
[16] K. Suh, D.-H. Kwon, Y.-J. Suh, and Y. Park, “Fast Multicast
Protocol for Mobile IPv6 in the fast handovers environments,”
IETF, Internet Draft, February 2004.
[17] B. Wang and J.C. Hou. “Multicast Routing and its QoS Ex-
tension:Problems, Algorithms, and Protocols,” IEEE Networks,
January/February 2000.
[18] D. Weitzman and C.Partridge, “Distance Vector Multicast Rout-
ing Protocol,” IETF, Internet Draft, RFC 1075, November 1998.
[19] M. Weisser, J. Tomasik and D. Barth, “Congestion Avoid-
ing Mechanism Based on inter-domain Hierarchy,” In Springer
Berlin/Heidelberg, editor, IFIP Networking, volume 4982, pp.
470-481. LNCS, 2008.
[20] The Next Generation Mobile Networks project WEB pages. See
URL http://www.ngmn-cooperation.com.
[21] The OMNET++ Simulator. See URL http://www.omnetpp.org.
[22] The Brite Generator. See URL http://www.cs.bu.edu/brite/.
[23] WiMAX Forum. WiMAX Forum Mobile System Proﬁle. 06-07.
103
International Journal on Advances in Telecommunications, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/telecommunications/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

