ProDec: a Serious Game for Software Project Management Training
Alejandro Calderón, Mercedes Ruiz 
Department of Computer Science and Engineering 
University of Cádiz 
Cádiz, SPAIN 
e-mail: alejandro.calderonsanchez@alum.uca.es, mercedes.ruiz@uca.es 
 
Abstract – Although there are some works related to the 
application of serious games for software project management 
training, there is a lack of tools that combine training and 
assessment in a single tool and that provide an environment for 
the learner where they can experiment decision making in real-
life like scenarios. Project Decision (ProDec) is a simulation-
based serious game created with the intention to train and 
assess students in software project management. The main 
objective is to take advantage of the engaging nature of games 
to place the learners in a virtual organization where they can 
manage software projects and solve real-life problems in a 
risk-free environment. For the trainer, ProDec is a support 
tool for training in matters such as leadership, task and team 
management, project monitoring and control, and risk 
management. It also helps the trainer assess the skills that the 
learners develop by playing the game. After any game play, 
ProDec 
offers a 
complete 
report 
including 
the 
logs 
representing every decision the players made and the result of 
applying the assessment criteria provided by the trainer at the 
beginning of the game play.  
Keywords - software project management; serious games; 
simulation 
I. 
 INTRODUCTION  
Nowadays, 
the 
importance 
of 
teaching 
project 
management in computing curricula is out of discussion. In 
fact, the joint curricula developed by IEEE and ACM for 
Computer Science (CS), Computer Engineering (CE), 
Information Technology (IT), Information Science (IS) and 
Software Engineering (SE), currently under revision and 
planned to be released during the summer of 2013, 
acknowledge that computer professionals need training in 
project management. And not any kind of training, but a 
training that is beyond technical skills so that the future 
professionals develop professional practice during their 
studies. 
Despite the importance that these curricula give to this 
topic and the increasing demand of the software companies 
seeking for professionals highly qualified in project 
management, very often we find that software project 
management syllabus are highly theoretical and quite 
uninteresting for the future professionals [1]. 
Compared with other studies, such as medicine, 
aeronautics, or engineering, computing future professionals 
do not receive the same practical training regarding real-life 
scenarios and rely on solving highly conceptual problems. 
As a consequence, novel professionals develop their 
experience working in real projects, where the effects of a 
wrong plan or decision-making can lead to a failed project or 
the loss of benefit for the companies they work for. 
A serious game is a game designed for a primary purpose 
other than pure entertainment. Although serious games can 
be entertaining, their main purpose is to train or educate 
users. Based on this feature, this paper introduces ProDec, a 
serious game for software project management that helps:  
a) Learners 
to 
develop 
and 
acquire 
practical 
experience in software project management, by 
allowing the players to plan a project, simulate its 
execution, track its performance and make 
decisions to keep the project on track. 
b) Trainers to design real-world scenarios for 
developing learners’ problem solving skills, and 
assess their learning.  
c) Overcome the problems of lack of motivation of 
learners towards project management related 
subjects. 
The structure of the paper is as follows: Section II shows 
the works related to our proposal; Section III describes the 
developed serious game, and Section IV shows how this 
game helps perform the learner’s assessment. Finally, our 
conclusions and further work are given in Section V. 
II. 
RELATED WORK 
There exist numerous works related to the application of 
serious games for software engineering education. Most of 
these works have been retrieved and analyzed by Caulfield, 
Xia, Veal, and Maj in their systematic review of the 
literature [2]. However, if we focus on the field of software 
project management, the works found are scarce and quite 
specific. Within this area, the following tools are 
outstanding: SIMSOFT [3], SimSE [4] and DELIVER! [5]. 
SIMSOFT [3] is a serious game materialized as a printed 
game board, that shows the players the flow of the game, 
and a Java-based board, where the players can see the 
current and historical state of the project and adjust the 
project’s settings. SIMSOFT mainly focuses on human 
resource management, with an emphasis on how the ability 
of the staff affects the outcomes of the project. 
DELIVER! [5] is also based on a printed game board 
designed to help students develop the skills needed to 
measure and control project performance by applying the 
Earned Value Management technique. As stated by its 
authors, DELIVER! is mainly a game to motivate students 
in their learning process.  
565
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

On the other hand, SimSE [4] is a serious game 
completely developed as a software tool that is based on 
software project simulation.  SimSE allows students to 
practice a "virtual" software engineering process (or sub-
process) in a fully graphical, interactive, and fun setting in 
which direct, graphical feedback enables them to learn the 
complex cause and effect relationships underlying the 
processes of software engineering. The game supports 
several development methodologies and focuses on the 
development of abilities for software process management. 
Similar to SimSE, we can find SESAM [6], another 
serious game that uses a software application and simulation 
techniques to motivate learners in learning software project 
management. SESAM has a natural language interface and, 
during the game, records information about the game’s 
progress with the goal of showing several statistics at the 
end of the game. 
If we focus on the educational objectives that can be 
achieved by using these games and compare them with a 
well-known taxonomy of learning objectives such as 
Bloom’s taxonomy [7], [8], we can find out that only 
SIMSOFT reaches the higher levels of the taxonomy, while 
the other tools place their educational objectives at the basic 
levels of the hierarchy, mainly the Knowledge level.  
Regarding learners’ experience, the games already 
mentioned have been assessed through surveys so that the 
players provide some information regarding their experience 
where playing the game. However, the assessment of the 
learners’ new abilities developed by playing the games is 
always made by traditional methods and does not have any 
connection or feedback from the exercise of playing the 
game itself. 
Unlike the above tools, ProDec does provide support for 
the learners’ assessment, by accepting and applying the 
assessment criteria that the instructor provides to the game 
tool. 
III. 
DESCRIPTION OF PRODEC 
 
ProDec is a serious game to teach software project 
management. The game is intended to be used at the end of 
an undergraduate course on software project management in 
computer science, information technology, information 
systems or software engineering programs. ProDec is 
intended to be a collaborative game, that is, it is a game to 
be played by teams of players. It is also possible to be 
played by individuals, but in that case the richness and 
benefits of the interaction with other players of your team 
are lost. It is important to emphasize that ProDec is a 
collaborative game, not a competitive one. This means that 
the group of players works collaboratively to win the game 
not to compete among them. 
ProDec has also been developed to provide an automatic 
assessment of the performance of the players after a game 
play. This assessment is based on the assessment criteria set 
by the instructor. 
A. Objective 
The aim of the game is to successfully manage a 
software project. The game is over when the project 
significantly overruns either the approved budget or the 
allocated time. During the game, the players have to plan a 
project, manage its execution and deal with the risks and 
unplanned events that may occur. They will succeed in the 
game if they are able to complete the project within the time 
and costs limits. 
B. Basic Play 
ProDec can be used in two different modes, namely, Full 
Play and Quick Play. When played in Full Play mode, the 
game allows the players to manage a software project they 
have previously planned. In this mode, the play is structured 
in three steps: 
1. Onset. In this step, the player follows a process that 
guides them to make the project plan. The game 
helps the players to provide the information 
regarding the general data of the project, tasks 
definition, time and cost estimation, project team 
definition, personnel allocation to every task and 
risk estimation. It is important to highlight that for 
any member of the project team, the player has also 
to provide information about their professional 
experience and personality factors according to the 
sixteen personality factors described by Cattell [9], 
so that, during the play, it will be possible to 
simulate and assess how good or bad was the 
players’ decision during the team creation and task 
allocation. Figure 1 shows a screenshot of this 
process step focused on the personnel features. 
Figure 1. Screenshot of making the project plan 
2. Execution. The second step consists on executing 
the project created in the first step. To do this, 
ProDec uses the information provided by the 
players to automatically generate the source code of 
a simulation model of the planned project. Once 
generated, the simulation model is run and the 
players start managing the project. The progress of 
the project depends on how well the project plan has 
been made, that is, the accuracy of the estimates of 
 
 
 
566
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

time and cost, the quality and suitability of the 
project team, and the adequacy of the tasks 
allocated to the members of the project team. 
During the simulation of the project execution, the 
game shows the players a Control Screen where the 
progress of the project is shown as it can be seen in 
Figure 2. The following elements are shown in real 
time: 
a. 
The time and budget spent and remaining. 
b. The results of the earned value analysis of 
the progress of the project. 
c. 
The level of the motivation of the project 
team. 
Based on the progress of the project and their 
analysis of the situation, the players can make the 
following decisions: 
a. 
Hire or fire a team member.  In this case, 
every change in the project team will have a 
direct effect on the productivity because of 
the communication and training overheads 
derived from the team size, the contribution 
of the experience of the new or lost member, 
the overall team synergy, their motivation, 
etc. 
b. Reorganize the project tasks. In this case, 
the players can reorganize the network of 
tasks which are yet to start. ProDec will 
check that the new network of activities is 
still 
consistent 
with 
the 
restrictions 
established to the tasks precedence in the 
project plan. 
c. 
Send a thanks/congrats e-mail. According to 
the progress of the project, the player can 
decide 
to 
send 
a 
thanks 
note 
or 
congratulations e-mail to the project team 
members to, for instance, congratulate them 
for the consecution of a project phase on 
time and within budget. This will have a 
positive effect on the motivation of the team 
and, 
therefore, 
on 
their 
productivity. 
However, 
the 
game 
controls 
the 
unreasonable use of this option. 
d. Give an extra payment. According to the 
available budget and the progress of the 
project, the player can also decide to give an 
extra payment to the project team. In this 
case, this action seeks to increase the 
external motivation of the team members 
leading, in some cases, to an increase in 
their productivity. Accordingly, this action 
will also reduce the available budget. 
e. 
Try your luck. This option simulates the 
appearance of not planned risks. When 
selected, a random event takes place in the 
project. This event can have either a positive 
consequence, 
such 
as 
your 
sponsor 
increasing the budget, or a negative one, 
such as losing one of your team members 
because he decides to leave your company. 
 
Figure 2. Project execute and control view 
 
3. End.  Once the simulation of the project execution 
is over, the last phase consists on the assessment of 
the players. By using the information that ProDec 
has  been  recording  during  the game  play  and the 
assessment criteria established by the instructor, 
ProDec generates an assessment report of the 
learners  describing  their level  of  achievement and 
uploads the results in the qualification book of 
Moodle, which is the Course Management System 
used in our subject currently. This report is mainly 
intended to be used by the instructor. In addition, 
ProDec prepares also this information to be 
provided in a very different format so that the 
learners get informed about their performance in a 
more engaging way. Basically, once a game play is 
over, ProDec automatically tweets a message to the 
Twitter account of the course telling about how the 
graces and disgraces of the team of future project 
managers. It also updates the Hall of Fame in the 
Facebook account of the course and gives a badge 
to those users who managed their project 
significantly well. 
On the other hand, when the game is played in the Quick 
Play mode, the players go through a simplified onset phase, 
since the information describing the project plan has been 
provided by the instructor and they only need to select the 
project they want to manage among the ones already 
uploaded. The aim of this game mode is focused on the 
phase of execution of the project and the assessment of the 
management decisions. In this case, there is no need to 
assess the correctness of the project plan since it is assumed 
 
567
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

to be correct. Hence, the instructor, in this case, has also 
more options to establish the assessment criteria. 
C. Lifecycle 
Once the basics of the game have been described, it can 
be seen that the game helps the learner to see in action the 
group of processes of project management defined by the 
Project Management Institute (PMI) [10]. Figure 3 
illustrates the relation between a game play’s lifecycle and a 
project lifecycle. It can be seen that ProDec’s Onset phase is 
related to the initiation and planning process groups, the 
Executing phase of the game with the cycle of executing, 
controlling and planning, and the End phase is related with 
the Closing process group proposed by PMI. 
 
 
Figure 3. Lifecycle 
D. Architecture 
In order to address the functionality described above, 
ProDec has been developed using JavaTM, AnylogicTM and 
MySQLTM 
technologies. 
Figure 
4 
shows 
ProDec’s 
architecture. As it can be seen, ProDec follows a three layer 
architecture. Two Java applications and the simulation 
model deal with the presentation and business layer, while 
two databases managed by MySQLTM deal with the data 
layer.  
 
 
Figure 4. Architecture of ProDec 
A description of the software applications follows: 
 
a) ProDecAdmin is the software application that allows 
trainers to upload all the information required by the 
game. The trainers use this application to set the 
different game scenarios that can be played together with 
the rubrics for the players’ assessment. 
b) ProDecGame is the software application used by the 
players. This application is really composed of three 
applications:  
• An initial application that starts the game and 
dynamically generates the source file of the 
simulation model required to simulate the project.  
• A software application to simulate the execution of 
the project and allow for project monitoring.  
• A final application that finishes the game and 
performs the learners’ evaluation by applying the 
rubric set by the trainer for the scenario that has 
been played.  
 
IV. 
LEARNERS’ ASSESSMENT 
The process of assessing the learners’ skills developed by 
playing the game is a process involving several elements 
belonging to different areas of ProDec. During the course of 
the game, the system saves records of the decisions made by 
the players during the simulation of the project, mainly as a 
response to a problem. In addition, ProDec also saves 
recurrently and autonomously records regarding the project 
status during the simulation and the initial estimates and risk 
analysis provided by the players at the beginning of the 
game. As a result, there are three sources of information for 
the application of the assessment criteria: a) the project plan 
with the initial estimates, b) the project monitoring data, and 
c) the kind and nature of the decisions the players made. 
Having these three sources of information about the learner 
performance, it allows the instructor to assess different types 
of skills. 
 
 
Figure 5. Elements of the assessment process 
568
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

The assessment criteria are provided by the instructor in 
the form of a rubric by using ProDecAdmin. A rubric is 
structured in sections, each of which consists of an 
assessment criterion. An assessment criterion effectively 
links the information recorded in the rubric with the 
information recorded during the game by using a labeling 
system that matches the labels describing the skills that an 
assessment criterion with the records of the game that 
contain the information needed to assess such criterion. 
As a consequence, ProDec is able to perform the learners’ 
assessment by analyzing the information stored during the 
game and applying the assessment criteria set by the 
instructor, concluding with the generation of a detailed 
report, which describes the skills acquired by the players. 
This report allows learners and instructors to study the 
course of the played game, making it easier to analyze the 
decisions taken during the game and their results. Figure 5 
shows the elements involved in the assessment process. 
  
V. 
CONCLUSIONS AND FURTHER WORK 
In this paper, we presented a serious game for software 
project management. The main objective is to take 
advantage of the engaging nature of games to place the 
learners in a virtual organization where they can manage 
software projects and solve real-life problems in a risk-free 
environment. The game accepts the information describing a 
software project plan and generates automatically a source 
code file with the equations of a simulation model to 
simulate the planned project. By running the simulation 
model, the game provides the players with the experience of 
seeing the effect of their planning and the decisions they are 
taking during the project execution. When the simulation of 
the project ends, the game performs an assessment of the 
learners according with the assessment criteria that the 
instructor has previously set.  
The main contributions that make this game unique are 
the following: 
1. The range of management options available for the 
instructor and learners to play with is larger than 
those of other similar tools.  In fact, while other 
similar initiatives focus on practicing only certain 
aspects or techniques of project management, 
ProDec provides a training environment for learning 
the following: 
a. 
Project planning: Task identification, task 
time and cost estimates, among others.  
b. Project control and monitoring: Earned 
Value System and control scoreboards. 
c. 
Risk 
management: 
Quantitative 
risk 
analysis, incidence monitoring, unpredicted 
events and decision-making.  
d. Team management: Task allocation based 
on the experience of the team and the 
nature of the task, team motivation, team 
synergy, Brook’s law [11], among others. 
2. Dynamic and automatic generation of an ad-hoc 
simulation model. The information of the project 
plan is transformed into a set of equations of a 
discrete-event simulation model together with the 
source instructions that generate the user interface 
of the second phase of the game. Although using 
simulation at the core of a project management 
game is not an original feature, the available similar 
tools based on simulation models have a prebuilt 
simulation one. Hence, this kind of games provides 
only one scenario for simulation. ProDec, on the 
contrary, surpasses this limitation by creating an ad-
hoc simulation model for every project plan the 
player can think of. Moreover, during the 
simulation, some of the decisions the player can 
make, can even change the equations of the 
simulation model in runtime. 
3. There have been also other initiatives to apply 
serious games in software project management and 
in learning in general. However, most of these 
initiatives apply the benefits of game during the 
learning process only, forgetting the assessment part 
of every teaching and learning process. Very often, 
these experiences make use of the game to help 
learners learn, but they do not help instructors with 
the 
assessment, 
using 
the 
instructors 
more 
traditional assessment techniques for that phase. 
However, ProDec is intended to help also 
instructors with their assessment task by providing 
them with an environment where they can upload 
the assessment criteria for a project scenario that 
will be applied at the end of the game play to the 
data collected by ProDec during the play. The 
results of the assessment are also offered in several 
formats: as a report, as an update of the qualification 
book of Moodle and by different actions in the 
social networks used in the subject such as Twitter 
and Facebook. 
4. The use of gamification elements. As a game, 
ProDec has been designed paying special attention 
to the user interface elements and the interactivity 
that can be expected in a game. In addition, some 
features coming from the gamification approach 
have also been added. These features, such as a Hall 
of Fame or a system of badges help to keep the 
learners engaged and motivated.  
We can say that the game supports the three domains of 
Bloom’s taxonomy: knowing, feeling and doing. Obviously, 
before playing the game the learners need to have studied 
the principles of the body of knowledge of software project 
management. This knowledge is put into practice by playing 
the game and having to evaluate the progress of the project 
and make decisions to achieve the initial objectives. Hence 
playing the game also helps to learn by doing. Finally, 
playing the game is also a social experience, since: a) the 
game is to be played in teams, and b) it also helps to share 
569
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

the results through social networks. These features, together 
with the engagement nature of games, transform the 
learning process into a social one where the feelings and 
emotions are naturally linked to the learning experience. We 
consider that the game also covers the six levels of Bloom’s 
taxonomy. For example, at the lowest order process, ProDec 
helps the learners to remember what they have studied in 
their lectures about the software project management body 
of knowledge.  To play the game, players also need to 
demonstrate they understand the facts they have studied, and 
they have to solve problems in new situations, such as 
estimating the budget of a new project, allocating tasks and 
making software teams with different treats of personality, 
or reacting to a risk they had never suffered before. The 
level of analysis is worked every time the player has to 
make a decision to improve the project results, since they 
need to carefully analyze the elements of the project, their 
relationships and the organizational principles that rule the 
progress of the project they are managing. After the 
analysis, players have to synthesize all the information into 
the decision they are going to make. Finally, the level of 
evaluation is achieved given the social nature of the game, 
where the players need to discuss, present their judgments 
and evidences that support the decision they would make, 
and then, negotiate with the rest of the members of their 
team about the decision to finally make. 
Our aim is to build a tool for software project 
management learning as complete as possible. For this 
reason, our future works are aimed at two main objectives: 
1. To perform evaluations of the current version of 
ProDec so that we can get the necessary feedback 
to design our following steps. We are currently 
working on this step with some evaluation sessions 
planned in different universities. So far, some 
evaluations have been made with one group of 
professors. During this academic course, we will 
conduct evaluation sessions with the students. In 
order to do this, we have based our evaluation 
process on the evaluation method developed at the 
Federal University of Santa Catarina [12]. 
2. To add new features to the game regarding 
software project management such as configuration 
management, 
change 
management, 
different 
methodologies of software development, among 
others.   
 
ACKNOWLEDGMENTS 
This work has been partially supported by the Spanish 
Ministry of Science and Technology with ERDF funds under 
grant TIN2010-20057-C03-03. 
 
 
 
REFERENCES 
 
[1] I. Ibrahim, “Teaching Project Management to IT Students: 
Methods and Approach,” 2nd International Conference on 
Education and Management Technology, IPEDR, Vol. 13,  
2011, pp. 185 – 191. IACSIT Press, Singapore. 
[2] C. Caulfield, J.C. Xia, D. Veal, and S.P. Maj, “A systematic 
survey of games used for software engineering education,” 
Modern Applied Science, Vol. 5, No. 6, Dec. 2011, pp. 28-43. 
[3] C. Caulfield, D. Veal, and S.P. Maj, “Teaching software 
engineering project management-A novel approach for 
software engineering programs,” Modern Applied Science, 
Vol. 5, No. 5, Oct. 2011, pp. 87-104. 
[4] E.O. Navarro and A. Van Der Hoek, “SimSE: An interactive 
simulation game for software engineering education,” 
Proceedings of the Seventh IASTED International Conference 
on Computers and Advanced Technology in Education, 2004, 
pp. 12-17. 
[5] C.G. Von Wangenheim, R. Savi, and A.F. Borgatto, 
“DELIVER! – An educational game for teaching earned value 
management in computing courses,” Information and 
Software Tecnhnology, Vol. 54, No. 3, Nov. 2012, pp. 286-
298. 
[6] A. Drappa and J. Ludewig, "Simulation in software 
engineering training," Proceedings of the 22nd international 
conference on Software engineering, ACM, 2000, pp. 199-
208. 
[7] L.W. Anderson and D.R. Krathwohl (Eds.), “A Taxonomy for 
Learning, Teaching, and Assessing: a Revision of Bloom’s 
Taxonomy of Educational Objectives,” Longman, New York, 
2001. 
[8] D.R. Krathwohl, “A revision of Bloom's taxonomy: An 
overview,” Theory into Practice, 41 (4), 2002, pp. 212-218. 
[9] R.B. Cattell, H.W. Eber, and M.M. Tatsuoka, “Handbook for 
the sixteen personality factor questionnaire (16 PF),” 1988. 
http://www.getcited.org/pub/102817845  [rerieved: August, 
2013]. 
[10] Project Management Institute, “A Guide to the Project 
Management Body of Knowledge (PMBOK® Guide)”, Fifth 
Edition, Project Management Institute, 2013. 
[11] F.P. Brooks, “The Mythical Man-Month,” Addison-Wesley 
Longman Publishing Co. Inc., Boston, MA, USA, anniversary 
ed. edition, 1995. 
[12] R. Savi,  C.G. Von Wangenheim, and A.F. Borgatto, “A 
Model for the Evaluation of Educational Games for teaching 
Software Engineering,” 25th Brazilian Symposium on 
Software Engineering, 2011, pp. 194-203. 
[13] XJ Technologies. AnylogicTM. http://www.anylogic.com/ 
[retrieved: August, 2013]. 
 
 
570
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-304-9
ICSEA 2013 : The Eighth International Conference on Software Engineering Advances

