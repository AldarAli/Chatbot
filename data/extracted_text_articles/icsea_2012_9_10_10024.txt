Process Modeling-based Assessment of Software Release Planning 
Case Study Results and Experiences 
 
Jos J.M. Trienekens 
University of Technology Eindhoven 
Eindhoven, The Netherlands 
j.j.m.trienekens@tue.nl 
Robbert Slooten 
Philips Eindhoven 
The Netherlands 
slooten.robbert@gmail.com
 
 
Abstract- In the software industry, customer input often 
takes the form of improvement requests. Release planning is 
the process of making decisions about what new functionalities 
or changes will be implemented in which release of a software 
product. The purpose of this work in progress paper is to 
explore a new approach to assess and improve the release 
planning process in industrial software companies. The new 
approach consists of a combined application of software 
process modeling, assessment and improvement. This paper 
presents results and experiences from a case study in two 
industrial companies. 
Keywords-release planning; assessment; process modeling. 
I. 
 INTRODUCTION 
An increasing part of the software produced is aimed at 
being offered to a general marketplace rather than to one 
specific customer. This type of software development is 
called 
market-driven 
software 
product 
development 
(MDSPD) [9]. In the software industry, customer input often 
takes the form of improvement requests. Improvement 
requests and other system complaints often result in an 
abundance of requirements [2]. Yet, often too little resources 
are available to implement all requirements at the same time. 
Proper release planning is as complex as it is important for 
the success of a software product [10] . 
The purpose of this paper is to explore a new approach to 
assess and improve the release planning process in industrial 
software companies. This approach consists of a combined 
application of business process modelling, [5] , and process 
assessment [11]. Instead of a generic CMMI model for 
process assessment and improvement a more focused 
maturity model is used, i.e., the SPM Maturity Model. This 
maturity model is dedicated to software product management 
and addresses particular software processes such as the 
release planning process.  In Section 2, we will first address 
the background of the release planning process, and the 
motivation for the new approach. Section 3 will present the 
case study and selected results and experiences of the new 
approach. Section 4 finalizes the paper with conclusions and 
further work to be done.  
II. 
BACKGROUND RELEASE PLANNING AND 
PRIORITISATION 
Release planning aims at selecting an optimal subset of 
features that satisfy as many stakeholders as possible within 
the budget, resource and risk constraints [10]. Many different 
aspects can be taken into account when prioritizing 
requirements. 
However, 
involving 
multiple 
aspects 
complicates the decision process. 
Regarding the assessment and improvement of software 
processes, the Capability Maturity Model Integration 
(CMMI) is a well-known approach [7]. Applications of 
CMMI in Small and Medium Sized Enterprises (SMEs) have 
shown several problems, such as: the implementation is too 
complex, too time-consuming, too costly etc., see e.g., [8]. In 
our case study we therefore have selected a more focused 
assessment approach that has as scope software product 
management. Four main processes, are being distinguished, 
respectively requirements management, release planning, 
product planning and portfolio management. For the release 
planning process a number of focus areas have been defined, 
see Table I. Capabilities of each of the focus areas are 
represented by A to F in the rows. To progress through 
maturity levels 1 to 10, the capabilities of each focus area 
indicated in each respective column must be achieved.  E.g., 
to reach maturity level 2 the capability A of Launch 
preparation should be achieved. Moving from left to right 
through the matrix matures the SPM processes. Progressing 
from maturity level 1 to 10, the focus areas are revisited 
multiple times maturing them incrementally as well. An 
important aspect in an assessment is the collection of 
information to rate the capabilities. Currently this is done by 
asking questions to practitioners and by studying project 
documents. For all the capabilities in the matrix, a company 
has to answer yes or no to the question ‘Is this capability 
implemented in your organisation?’ Advantages of using a 
questionnaire are that it can be distributed easily to a wide 
range of respondents across geographic boundaries, it is non-
invasive, and it is cost and time efficient. However, there are 
also serious disadvantages to using questionnaires in 
software process assessment, respectively: questionnaires 
have been found to be repetitive and verbose, questions have 
been found to not be related to the real problem, qualitative 
information is needed to reflect the software process and 
finer granularity than yes/no questions is needed to reflect 
the software process [8]. Regarding our release planning 
assessment case study, we decided that our assessment 
method should not only be aimed at collecting answers to 
yes/no questions, but should aim at an in-depth analysis and 
discussion of the ‘actual’ release planning process as it is 
carried out in practice. Given this aim, and the disadvantages 
238
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

of questionnaires listed above, we applied a different 
assessment instrument: i.e., formal process modelling 
techniques. These modeling techniques have already been 
recognized for many years as instruments, e.g., [3][4] which 
both conclude that 'software process modeling facilitates 
human understanding and supports process improvement'. 
Also, research on success factors of software process 
improvement shows that an inhanced understanding of the 
process by employees, and employee involvement (because 
of their insight into and knowledge of the process areas), are 
of utmost importance for  the success of a software process 
improvement project. To select an appropriate modelling 
technique we first defined the purpose of modelling. Our 
purpose was to describe the current processes, to determine 
the current process maturity, and to formulate improvement 
proposals. This is classified in the process modeling area as 
'working towards a descriptive model for learning and 
process development' [1]. A number of techniques can be 
used for this type of modelling. In our situation, based on the 
characteristics from a user and a modeller perspective, 
formal flowcharts and data flow diagrams have been chosen. 
Subsequently, we selected Business Process Modelling 
Notation (BPMN) as our modelling language. BPMN is able 
to capture aspects of both flowcharts and DFDs (based on 
the Bunge-Wand-Weber (BWW) representation model), We 
used the BPMN notation, i.e., its extended modelling 
elements, as described in [6]. BPMN is already for quite 
some time recognized as the most ontological complete 
model [12]. Lastly, it has to be stated that our choice for 
BPMN was also motivated by current knowledge and 
expertise in our research group at TU/e, ), e.g., [5]. Software 
process modelling facilitates human understanding and 
communication and supports process  assessment and 
improvement. Business process modelling is an iterative 
method that provides rich information on how processes are 
implemented. Summarizing, our new process assessment 
approach consists of the application of process modelling 
techniques to derive information from the actual processes 
for the rating of the capabilities (in a SPM Maturity Matrix) 
of a release planning process. 
III. 
RELEASE PLANNING ASSESSMENT AND IMPROVEMENT 
A. The case study content 
The case study addressed in this paper was carried out at 
two companies (A and B) active in providing telematics 
solutions to the transportation industry. Companies in this 
transport and logistics  domain are facing major challenges.  
Competition is large, operating costs are increasing rapidly, 
customers demand an ever-expanding range of services and 
the legislation is strict.  As more information becomes 
available digitally, inside the truck as well as outside, data 
from an expanding number of sources needs to be processed 
and integrated.  This increases the complexity of full service 
telematics solutions considerably. 
Company B is a company that provides telematics 
solutions to the transportation industry. It has over 280 
employees spread throughout Europe. More than 80.000 
devices have been installed. It provides products to acquire 
mobile operations data and communicate this data between 
dispatch/shipment control, back-end information systems, 
and mobile shipping unit (e.g., a truck or trailer, etc.). 
Company A, a SME, has recently been taken over by 
company B. Release planning at company A is mainly done 
by a small group of high-positioned executives, and no 
formal process descriptions exist. At company B however, 
processes are more defined and certain formal protocols are 
in place. The different release planning processes in the 
distinct companies have to be aligned and should finally 
smoothly flow together. Preserving the best of both ways of 
the release planning processes of both companies will 
contribute to a more efficient process and a higher quality of 
release planning. 
B. Process modelling and maturity rating 
Process models of the current release planning processes 
at both companies have been made. In the context of this 
work in progress paper examples of the process models are 
not presented here. However, we will clarify in what way we 
discussed these process models and how we derived 
information from them to determine the capabilities 
(maturity) of the release planning processes. The modeling 
process was identical at both companies. In a first session 
with the persons responsible for the release planning process 
a list of persons of interest was put together, not limited to 
those who are involved directly in the process. Persons 
involved in requirements gathering and the product 
development process in general were thus included on the 
list. After interviews with these persons were completed, the 
gathered information was used to build a first version of the 
process models. Subsequently, the process models were used 
to guide a second iteration of data collection. Again, 
information was gathered that was now used to adjust the 
process models created in the first iteration. This process 
continued until the company supervisors agreed with the 
process models build in the latest iteration. Within company 
A, the first session with the company supervisor resulted in a 
list of 9 persons. Within company B, the initial list of 
persons of interest included 7 persons. The initial discussion 
sessions were all conducted using a semi-structured 
discussion protocol. The discussion sessions ranged in 
duration from 30 minutes to one hour on average. The 
process modelling effort at both companies shows that input 
from multiple stakeholders and an iterative approach is 
needed to get accurate process models. Using the input from 
multiple stakeholders singled out contradicting views on a 
process. In the discussion sessions we focused on a number 
of process model characteristics such as: the release planning 
focus areas recognized or implemented, importance of 
decisions made in process steps, type of and frequency of 
(formal) techniques and tools used, (internal and external) 
stakeholders involved, etc.   
From the discussion sessions on the release planning 
process models of company A, we summarize two types of 
results. On one hand, we will present the identification of  
capability ratings for the distinct release planning focus 
areas, and on the other hand we will address interesting 
239
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

benefits of the usage of the process models. First, see Table 
II  (underlined ratings), the capability ratings:  
 
A grouping based prioritisation method is often used, so 
capability B of requirements prioritisation is achieved.  
 
Based on  formal cost-benefit criteria for prioritisation 
level D is also achieved. Level A and C are skipped 
since not all internal stakeholders provide input on the 
priorities and external stakeholders are not involved in 
the prioritisation process.  
 
An open-ended release planning technique is used, and 
no formal release definition is formed. As a 
consequence none of the capabilities of release 
definition are achieved. 
 
There exists hardly a release definition. This has as 
consequence: none of the capabilities for release 
definition validation have been achieved.  
 
No formal scope change management exists. When 
development on projects of features turns out to be 
underestimated it can be chosen to simply not release 
yet or exclude it from the new version.  
 
New products are first thoroughly tested internally and 
externally, thus achieving capability A and B for build 
validation.   
 
Internal stakeholders are informed about a new release 
by means of a formal release document. Capability A in 
launch preparation is thus achieved. However, the 
release decision is not based on formal quality rules, and 
therefore capability B is not achieved. 
Regarding the benefits of using process models in 
company A we can give the following example: based on the 
multiple iterations of discussing process models with 
different stakeholders, it appeared that alternative routings 
were possible in the initially developed process models, e.g., 
request handlers often consulting sales managers for a 
second opinion regarding their decisions. Only because of 
these iterations important business process details could be 
identified. However, it has to be stated that in total, the 
release planning process at company A didn't strongly 
benefit from using process models. Although the various 
process models were slightly adjusted in subsequent 
iterations, this didn't lead to big changes in the maturity 
ratings.   
 
Regarding the capability ratings, from the discussion 
sessions in company B, we give the following results; see 
Table III. 
 
Regarding 
requirements 
prioritisation, 
internal 
stakeholders are being 
involved and a formal 
prioritisation method is often used. Also a cost-revenue 
consideration is being made. As a consequence levels A, 
B and D have been achieved. Because customers are not 
being involved in the process, C is skipped.  
 
The release proposal compiled by the Product 
Management fits the descriptions of capability A and B 
of release definition.  
 
The release definition has to be approved by a formal 
Strategic Product Board thus achieving capabilities A 
and B of release definition validation. Capability C is 
not achieved because the release definition is not 
communicated to internal stakeholders. 
 
Having implemented a formal project management 
methodology, the company meets capabilities A and B 
of scope change management.  
 
Regarding the release preparation process a tool has 
been developed called the ‘release clock’. The release 
clock defines that new features are first tested internally 
and consequently in a field test, thereby achieving levels 
A and B of build validation. 
 
The ‘release clock’ also defines a rigorous launch 
preparation process which includes all the capabilities of 
launch preparation. 
Regarding the experienced benefits of the usage of 
process models in company B we also experienced the 
advantages of the multiple iterations in discussing the 
process models with different stakeholders.  For example, in 
company B, it became clear, only after a couple of iterations 
that an automated requirements gathering system was hardly 
used in practice and was not favoured by most of the 
employees. As a consequence, we decided to exclude this 
system, which was formally specified in the company 
process standard, from the process models. However, also in 
company B it appeared that the usage of process models also 
can have disadvantages. E.g., the 'build validation and launch 
preparation processes' would have required very much effort 
to capture in  process models, while the existing and 
available process documentation was of sufficient quality to 
base the maturity rating on. Summarizing, we can state that 
the usage of process models has clear advantages in 
particular process areas, but when applied 'at random' to any 
process it also can have serious drawbacks, e.g., too time-
consuming. too cost-ineffective.   
IV. 
CONCLUSIONS AND FUTURE WORK 
The development of software process models in the case 
study provided detailed and in-depth information on the 
capabilities of the release planning focus areas.  The maturity 
matrices of the release planning process of both companies 
could be completed in a reliable and detailed way. In 
particular, the iterations in the discussions on the process 
models, with the different stakeholders, resulted in renewed 
insights into the current practice, e.g., with respect to 
existing but unused tools. Of course the detailed arguments 
for the capability ratings are an important add-on to the 
Maturity Matrices in Table II and Table III. They clarify 
important and detailed aspects of the release planning 
processes. The use of a focus area oriented SPM Maturity 
Model, instead of a generic software process maturity 
approach such as CMMI, proved to have strong advantages 
regarding the detailed information of strengths and 
weaknesses of the release planning process and its focus 
areas.  
However, the usage of process models also showed 
sometimes disadvantages. In particular, we mention here the 
effort which is needed to develop (and maintain) the process 
models. From our case studies we conclude that the 
appropriateness of using process models depends on 
240
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

particular characteristics of the process and the business 
context, e.g., the complexity, the dynamics, and the number 
of stakeholders involved in a process. In further research, we 
will focus on these characteristics in order to become able to 
determine the suitability of using process models to 
particular types of processes and to different types of 
business situations. In that way, we will strive at a more 
efficient usage of process modeling for software process 
maturity rating.   
REFERENCES 
 
[1] Aguilar-Savén, R. (2004). Business process modelling: Review and 
framework. International Journal of Production Economics, Vol. 90, 
pp. 129-149. 
[2] Bagnall A., Rayward-Smith V. and Whittley, I. (2001).The Next 
Release Problem. Information and Software Technology, Vol. 43, No. 
14, pp. 883 - 890. 
[3] Bollinger, T. and McGowan, C. (1991), A Critical Look at Software 
Capability Evaluations. IEEE Software, pp.  25-41. 
[4] Curtis, B., Kellner, M. and Over, J., (1992). Process Modelling. 
Communications of the ACM, Vol. 55, No. 9, pp. 75-90.  
[5] Dijkman R.D., M. Dumas and C. Ouyang, Semantics and analysis of 
business process models in BPMN, Information and Software 
Technology, Volume 50, Issue 12, November 2008,  pp. 1281-1294. 
[6] OMG (2011). Business Process Model and Notation (BPMN). Object 
Management Group, Inc. 
[7] Paulk, 
M. 
(2002). 
Capability 
Maturity 
Model 
for 
Software.Encyclopedia of Software Engineering. 
[8] Pino, F., García, F. and Piattini, M. (2008). Software process 
improvement in small and medium software enterprise: a systematic 
review. Software Quality Journal, Vol. 16, pp. 237 - 261. 
[9] Regnell, B. and Brinkkemper, S. (2005). Market-driven requirements 
engineering for software products. In A. Aurum, & C. Wohlin, 
Engineering and Managing Software Requirements, pp. 287 - 308. 
Berlin Heidelberg: Springer. 
[10] Saliu, O. and Ruhe, G. (2005). Supporting Software Release Planning 
Decisions for Evolving Systems.Proceedings of the 2005 29th Annual 
IEEE/NASA Software Engineering Workshop (SEW'05), pp. 14- 24. 
Greenbelt, MD.  
[11] Van de Weerd, I., Bekkers, W. and Brinkkemper, S. (2010). 
Developing 
a 
Maturity 
Matrix 
for 
Software 
Product 
Management.ICSOB, Lectures Notes in Business Information 
Processing, Vol. 51, pp. 76 – 89. 
[12] Weber, R. (1997). Ontological Foundations of Information Systems. 
Melbourne: Coopers & Lybrand. 
 
 
241
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

TABLE I Example of a Release Planning Part of the Maturity Matrix for Software Product Management (Van de Weerd et al, 2010) 
 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
Release planning process 
Requirements prioritisation 
 
 
A 
 
B 
C 
D 
 
 
E 
 
Release definition 
 
 
A 
B 
C 
 
 
 
D 
 
E 
Release definition 
validation 
 
 
 
 
A 
 
 
B 
 
C 
 
Scope change management 
 
 
 
A 
 
B 
 
C 
 
D 
 
Build validation 
 
 
 
 
A 
 
 
B 
 
C 
 
Launch preparation 
 
A 
 
B 
 
C 
D 
 
E 
 
F 
 
TABLE II. RELEASE PLANNING PROCESS MATURITY AT  COMPANY A 
 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
Release planning process 
Requirements prioritisation 
  
  
A 
 
B 
C 
D 
  
  
E 
  
Release definition 
  
  
A 
B 
C 
  
  
  
D 
  
E 
Release definition validation 
  
  
  
  
A 
  
  
B 
  
C 
  
Scope change management 
  
  
  
A 
  
B 
  
C 
  
D 
  
Build validation 
  
  
  
  
A 
  
  
B 
  
C 
  
Launch preparation 
  
A 
  
 B 
  
C 
D 
  
E 
  
F 
 
TABLE III. RELEASE PLANNING PROCESS MATURITY AT  COMPANY B 
  
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
Release planning process 
Requirements prioritisation 
 
 
A 
 
B 
C 
D 
  
  
E 
  
Release definition 
 
 
A 
B 
C 
  
  
  
D 
  
E 
Release definition validation 
  
  
  
 
A 
 
 
B 
  
C 
  
Scope change management 
  
  
  
A 
 
B 
  
C 
  
D 
  
Build validation 
  
  
  
  
A 
  
  
B 
  
C 
  
Launch preparation 
 
A 
 
 B 
 
C 
D 
 
E 
 
F 
 
242
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

