Modeling of Complex Multiagent Behavior Using Matrix Representation 
Sebastian Meszyński, Oleksandr Sokolov 
Faculty of Physics, Astronomy, and Informatics 
Nicolaus Copernicus University 
Toruń, Poland  
email: {sebcio, osokolov}@fizyka.umk.pl 
 
 
Abstract— Multi-agent systems are systems that solve complex 
problems by dividing them into smaller problems and 
imparting each of them to specialized programs called agents. 
The reliability of such systems strongly depends on the 
correctness of agents’ communication and interaction.   
Unfortunately, the analysis of the whole system is not an easy 
task as its component parts, in the form of agents, work in an 
asynchronous way. An additional problem causing the 
difficulty in this analysis is the fact that each agent is an 
autonomous being, therefore, having received information 
from another agent existing in the same environment, it does 
not have to change its internal condition. In the following 
paper, matrix representation and equations, describing 
dynamics of the multiagent system were implemented by using 
the basic elements of graph theory and theory of compartment 
modeling. The analysis of equations and examples presented 
below, confirm the validity of the thesis that the adopted 
description is sufficient to describe the interactions between 
agents in the multiagent system. 
Keywords- multiagent system; agent; linear algebra; matrix. 
I. 
 INTRODUCTION 
The models used for modeling of any kinds of physical 
phenomena are the tools utilized to obtain an answer to 
questions concerning the tested system, without the need for 
performing the actual experiment. Among the variety of 
models, i.e., psychological, word or physical models, there 
are also mathematical models whose relations observed in 
the system are described by mathematical formulas. The 
possibility to perform such experiments is called simulation 
(lat. simulare – simulate). It is a cheap and safe alternative or 
a complement to experiments with the system.  
The quality of simulation’s results depends entirely on 
the quality of the model. Fundamentally, there are two 
approaches to building a model representing a particular 
system.  The first type of approach is based on the 
knowledge taken from literature or experience of experts in a 
given domain and could be used for building more and more 
precise description of the investigated phenomenon  (more 
complex models are generated). The second one is based on 
observation of the phenomenon and its behavior on one level 
of description (using similar agents) and after that building 
the model and identification of parameters (agent-based 
approach). 
The created model in both approaches needs to be 
described in a handy form, especially if one wants to analyze 
it with the use of digital machines. Having the model built, it 
is necessary to verify the correctness of obtained results. The 
credibility of the results provided by the model can be 
acquired using verification or validation.  
This paper focuses on the use of a multi-agent system for 
the modeling of the insulin-glucose system responsible for 
the blood glucose homeostasis. Even by designing the 
simplest model based on the multi-agent paradigm, one must 
rely on a complex analysis of interactions between agents. 
For this reason, there is not one general formalism of 
description of these interactions, which would additionally 
allow for an easy analysis of the functioning of such a multi-
agent system. In most cases, the approaches used are chosen 
depending on the category of problem that is solved by the 
system. It should be understood that if the multi-agent 
system was designed to address the issues of game theory, 
then this formalism would be used to analyze multi-agent 
system. In case multi-agent system was created for 
optimization problems, such problems will be used to 
analyze this system [7][8]. What is presented in this paper is 
a demonstration of the use of two modeling techniques for 
the general description of a multi-agent system. On one 
hand, the theory of compartment models has been used to 
describe the interaction between the different body regions, 
called compartments. On the other hand, there is a graph 
theory, which introduces a general and universal tool for 
describing the interaction between beings that can represent 
any mathematical or physical concept. Combining these two 
techniques allows us to describe the interaction between 
agents in a multi-agent system (MAS) in two ways. Firstly, it 
could help to describe the dynamics of the entire multi-agent 
system, showing the connections between agents, their 
behavior, and the ability to investigate the whole system. 
Secondly, it makes possible to include in the same formalism 
the information associated with each agent. This should be 
understood as the ability to get information about what 
behavior is implemented in the body of the agent, which 
behavior is used to communicate with the environment, and 
which are only the internal behavior of the agent. One can 
also get information about which agent is a receiver of the 
messages and which agents are senders of those messages. 
 The proposed approach allows describing MAS in two 
complexity scales - the system as a whole and the agent and 
its impact on the system. We illustrate now the MAS 
description and communication on the glucose homeostasis. 
The selected analytical model (Stolwijk-Hardy model [9]) 
was converted to a multi-agent system in a lossless fashion. 
As a result, individual members of this model became the 
determinants of behavior of individual agents, and in 
32
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

addition, the analysis of such model was maintained by 
compartmental methods. 
The structure of the paper is following. Section II gives a 
short introduction to multi-agent systems and draws attention 
on components of agents and their communication standards. 
In the next section, the matrix representation of multi-agent 
system is proposed.  Section IV illustrates the authors’ 
approach with two simple examples. The conclusion and 
references summarize the article.  
II. 
MULTI-AGENT SYSTEMS 
We present primary ideas concerning multi-agent 
systems. 
A. Concept of multi-agent system and agent   
Multi-agent systems are complex systems of agents 
communicating and cooperating with each other. This 
construction of the systems enables solving problems of a 
diffuse or complex calculation. In the studies applying multi-
agent systems, the concept of an agent is presented as an 
autonomous object having the initiative of action based on 
the observation of the environment, in which it is located. It 
also has the ability to use the resources of the environment 
and the motivation to solve the problem it has to face. Such 
definition of the agent forces him to have inputs called 
sensors (through which it will be able to receive signals from 
the environment) and effectors, which can be used to 
influence the surrounding environment. The most important 
task of the agent is to decide which of the possible courses of 
action is best, at the time of acquired knowledge about the 
problem, in order to achieve the goal. 
The issue „agent” is wide and diverse. Nowadays the 
term is so broadly used that is best described as comprising a 
heterogeneous body of research and development [1]. 
Different communities refer to it in various ways. Some 
scientists will characterize agents as initiatives and reactivity 
of objects; others emphasize independent learning and 
communication skills. What can also be invoked is the 
characteristic that unifies modeling agent the most – it is 
their decentralization. An extensive discussion of multi-agent 
systems can be found in positions [2][3]. In contrast to the 
dynamic system or actions based on models, the multi-agent 
system does not have a special place of centralization where 
the dynamics of the system is fixed. What is more, global 
behavior of the whole system is defined on the basis of the 
individual behavior of all agents. Each agent has its own 
inner behavior as a set of rules and behavior for interaction 
with the environment  and other agents. Such description 
produce a dynamic interaction of  agents based on rules.  
In many situations, there is a doubt linked to the lack of 
understanding of the philosophy of using multi-agent 
systems and returning toward object-oriented programming. 
What is characteristic of multi-agent systems can be 
presented in the following subparagraphs:  
• 
Agents possess internal awareness and defined 
goals to be achieved. The goals can, but do not have to be 
identical to the objectives of the other agents who are in the 
same environment. In such case, information obtained from 
another agent can be taken into account only if it is 
coincident with its own objective.  
• The agent is a dynamic instance which adapts its 
activity to instantaneous changes in the environment and has 
certain fixed parameters and characteristics only for him that 
do not change regardless of the extent of the changes 
observed in the environment. 
• 
Each agent possesses at least one strand which is 
responsible for its behaviorism.  
The general difference between instance of an agent and 
the object lies in the fact that the object has variables that 
change, while the agent variables can be changed only when 
the agent accepts the request of the sender to change the 
value of a variable in an immediate way or after the act of 
negotiation. 
 
B. Communication in multi-agent system 
In an environment where there is more than one agent, 
there must be a mechanism for the exchange of information 
between the environment and the agent, and between agents. 
Communication mechanisms are essential for the agents 
grouped in structures that facilitate co-operation so that they 
could 
achieve 
their 
goals. 
Since 
the 
multi-agent 
environments [4][5] are dynamic environments, it is 
necessary to introduce a mechanism that would allow for 
informing the agents of the existence of other participants in 
the system. The literature [6] distinguishes the following 
approaches: 
• 
Yellow pages, where agent can place information 
about services it provides 
• 
White pages – the list of all agents in the 
environment  
• 
Broker – intercessory agent. 
In order to create a message and then send it to another 
agent, so it can receive it and understand it, it is necessary to 
define common, to all the participants of the act, language of 
communication and terminology. It should be noted that the 
language of communication, which is independent of the 
field, is separated from the language of messages content. 
Among the communication standards the most popular 
include: 
• 
KQML (Knowledge Query and Manipulation 
Language) 
• 
ACL (Agent Communication Language) 
 
Among the examples of the language of message content, 
the following should be distinguished: 
• 
KIF (eng. Knowledge Interchange Format) 
• 
FIPA standards:  
─ SL (Semantic Language) 
─CCL(Content Language) 
Having 
a 
tool 
for 
communication, 
agents 
can 
communicate with each other to achieve a common or an 
opposing goal. In the first case, we have to deal with the 
concept of co-operation, in the second case with the concept 
of competition. As a rule, multi-agent systems are designed 
to solve complex problems in which agents have control (or 
can observe), only a certain part of the environment (Figure 
33
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

1). In order for the multi-agent system to solve the problem, 
the agent has to have knowledge and control over the entire 
environment. To do so, agents are organized in the structure 
where then interact with each other. Interactions between 
structures and agents are supposed to bring them benefits. 
Each agent has its preferences for the state in which 
environment it should be (this is its goal). In order to 
describe this preference, the concept of utility ν, which 
causes an alignment state of the environment Ω due to the 
preferences of the agent, is introduced. 
 
 
ν : Ω → ℜ 
 
 
(1) 
 
The environment that corresponds to preferences of the 
agent will have greater utility value (in other words: the 
agent will “feel better”). 
 
III. 
MATRIX DESCRIPTION OF MULTI-AGENT SYSTEM 
 
The key consideration in this paper is to propose a 
modeling paradigm glucose-insulin in the form of a multi-
agent system starting with a mathematical description and 
finishing the implementation of the program. This solution 
shows how we can implement features of agents for both the 
macro and micro processes in homeostasis of glycemia. 
Moreover, at the same time, we can allow operating on two 
scales: organs and cells scale. This results in a new quality of 
information. To describe the multi-agent system, the authors 
used the approach presented in the chapter describing 
compartment modeling and using the rationality of graph 
theory (Figure 1). This approach simplifies the interpretation 
of what is happening in the multi-agent system, therefore, the 
behaviors of individual agents and their influence on other 
agents in the considered system can be easily identified. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. A new concept of describing a multi-agent model. 
 
The analysis of multi-agent system is a difficult task to 
implement due to the existence of the asynchronous 
relationships between agents occurring in the system. 
Additionally, each agent which takes an active part in the 
multi-agent system has at least two behaviors: the one 
receiving incoming messages from other agents, and the 
other one used by it to send the information to the chosen 
agent. By verification of the model, one can understand two 
aspects. The first aspect concerns information about 
acceptable range of internal parameters of model, which 
guarantees the stability of the model for the incoming 
information/extortion from outside. The second is the range 
of input set, which ensures the correct stability and expected 
representation of the behavior of the modeled system. 
We propose to describe multiagent system by using a 
comparison of network connections between the agents to 
the connections between vertexes forming a graph. 
Nomenclature of the vertex is extended by the occurrence of 
behaviors that identifies the agent’s behavior. In this 
perspective of the problem, the graph which describes the 
interactions between agents with their associated behaviors is 
obtained. The assumptions are: 
 
Behaviors implemented in a given agent create a set of 
behaviors for the agent, which is a subset of behavior 
occurring in the multi-agent system: 
 
∑ 𝐴 ∈ Φ 
 
 
     (2) 
 
Φ ⊆ Ω 
          
 
     (3) 
 
 
where: 
A - represents some behavior of agent, Φ - represents a set 
of behaviors of a given agent, Ω - represents a set of 
behaviors of multi-agent system.  
 
Agents who pose the same behaviors are not identical 
with each other. It results from independent activities in 
terms of time and each agent using the same behavior 
performs them in various time slots. 
 
 
Graph A=(V,E); |V|=n, |E|=m represents multi-agent 
system basing on the assumption that: 
o 
n: number of graph vertexes (number of agents), 
o 
m : number of behaviors appearing in MAS. 
 
 
Adjacency matrix K∈M(n×n;N) is defined in such 
way that value in i-th line and in j-th column equals: 
o 
0: if there is no communication between agents  
(connection), 
o 
1: if there is communication between agents 
(connection). 
Whereby: 
o 
kii represents cyclical route of agent i-th, 
o 
kij represents route from agent i-th to agent j-th. 
 
The sum of the same behavior is the same behavior: 
  
∑ 𝐴1𝑖
𝑖
= 𝐴1                 
     (4) 
 



 










  




g
I
i
dt
di
G
g
g
vgi
dt
dg
,
34
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

 
Behavioral 
Matrix 
𝐴 ∈ 𝑀(𝑛 × 𝑛; 𝐵) 
(where 
B 
designates set of behaviors within the scope of the 
multi-agent system) is defined in a such way that  value 
in i-th line corresponds to behavior responsible for 
communication between agents i-th and agent j-th , 
whereby: 
o 
Behavior Aii represents internal behavior 
(cyclical) of agent i-th, 
o 
Behavior Aij represents information exchange 
from agent i-th to agent j-th. 
 
Taking the above assumptions into consideration, it is 
possible to describe multi-agent system with the use of 
matrix equation: 
𝐴𝑇𝐾 + 𝐷 = Φ 
                    (5) 
 
where: 
AT is the transpose of a matrix of agents’ behaviors; K is a 
matrix of connections between agents; D is a matrix of 
agents’ internal behaviors; Φ is a matrix representing multi-
agent system.   
Analysis of the above equation will be presented on 3 
examples of multi-agent system. Both examples will rely on 
a different number of behaviors occurring in the multi-agent 
system. 
 
IV. 
EXAMPLES 
In this paragraph, authors demonstrate examples of the 
use of matrix to describe the multi-agent system and to 
select unknown behavior. 
A. The example of two-agent description based on  the 
matrix representation  
Let us consider the multi-agent system, where two agents 
A1 and A2 have predefined behaviors and  A11 and A22 are 
internal behaviors and A12 and A21 are external behaviors 
(Figure 2). 
 
 
Figure 2. Two-agent system. 
 
For the following example, adequate matrixes will be 
defined: 

𝐴 = [𝐴21 − 𝐴12
𝐴12
𝐴21
𝐴12 − 𝐴21]


𝐴𝑇 = [𝐴21 − 𝐴12
𝐴21
𝐴12
𝐴12 − 𝐴21]


𝐾 = [0
1
1
0]


𝐷 = [𝐴11
0
0
𝐴22]

Substituting to equation (5) we obtain representation of 
multi-agent system in the form of:  

[Φ] = [𝐴11 + 𝐴21
𝐴21 − 𝐴12
𝐴12 − 𝐴21
𝐴22 + 𝐴12]

Conducting a detailed analysis of the matrix Φ we receive 
information about: 
 First minor (φ1) of a matrix Φ represents internal and 
incoming behaviors to agent A1: 

𝜑1 = 𝐴11 + 𝐴21

 Second minor (φ2)   of a matrix Φ represents behaviors of 
data exchange between agents A1 and A2: 

𝜑2 = 𝐴21 − 𝐴12

 Third minor (φ3) of a matrix Φ represents of data 
exchange between agents A1 and A2: 

𝜑3 = 𝐴12 − 𝐴21

 Fourth minor (φ4) of a matrix Φ represents internal and 
incoming behaviors to agent A2: 

𝜑4 = 𝐴22 + 𝐴12

 Trace of a matrix represents behaviors occurring in multi-
agent system: 

𝑇𝑟[Φ] = 𝐴11 + 𝐴21 + 𝐴22 + 𝐴12

The above-mentioned examples were designed to show 
the application of  (5) to describe the multi-agent system 
and the equivalence with the use of a graph. Description 
using matrixes is helpful in such a way that, in a compact 
form, it contains a representation of the dynamics of multi-
agent system. It is not relevant what type of behaviors are 
written using matrix A. That is why the authors consider 
this record as universal. The results matrix Φ contains much 
information from which one can restore the functioning of 
the multi-agent system, basing solely on the content of 
individual cells of the matrix. Individual cells φi make it 
possible to obtain information on what types of behavior are 
present in the agent - whether they are its own internal 
behaviors (e.g., A11) or behaviors associated with taking or 
receiving information to/from another agent (e.g., A21). 
Additionally, the sum of the behavior of a given line (e.g.,  
φ1 + φ2) is interpreted as the behavior occurring in the agent 
(e.g., for A1). The results matrix can also determine 
35
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

whether, in a multi-agent system, there is at least one 
bidirectional communication between agents. In order to 
verify whether in the multi-agent system the exchange of 
information occurs, it is necessary to check whether the 
following identity is met: 

𝑇𝑟[Φ] = ∑ 𝜑𝑖
𝑖


In order to verify the above relationship the examples 
discussed earlier can be used: 
𝐴11 + 𝐴21 + 𝐴22 + 𝐴12 = 𝐴11 + 𝐴21 + 𝐴22 +
                𝐴12 ⇔ 𝑇𝑟[Φ] = ∑ 𝜑𝑖
𝑖





B. The example of matrix representation for identification 
of desired  behavior   
The experiment is quite specific. This uniqueness is 
based on the use of the matrix record, introduced in Section 
III, to determine unknown behavior in a multi-agent system. 
The experiment was based on a two-agent representation of 
the glucose homeostasis system. The first agent represents 
the entire mechanism of normoglycemia in the case of type 
1 diabetic patient. The second agent represents insulin 
delivery in the form of external administration (Figure 3). 
The purpose of this experiment is to define the behavior 
responsible for sending "information" from Agent A1 to 
Agent A2 so that the dose of insulin delivered contributes to 
the metabolism of glucose. 
 
 
 
 
Figure 3. Diagram of multi-agent system for the experiment. 
 
Based on the concepts introduced in the section above, 
we can define the appropriate arrays, and so the matrix A: 
 
𝐴 = [−𝐴12
𝐴12
0
𝐴12] 
 
    (18) 
 
 
matrix K: 
 
𝐾 = [0
1
0
0]                                     (19) 
 
 
 
matrix D: 
 
𝐷 = [𝐴11
0
0
𝐴22]  
                   (20) 
The matrix of a multi-agent system is defined by the 
corresponding relation between the previously mentioned 
matrices so that the system matrix is: 
 
Φ = [𝐴11
−𝐴12
0
𝐴22 + 𝐴12]                  (21) 
 
The trace of the matrix: 
 
𝑇𝑟𝜙 = 𝐴22 + 𝐴11 + 𝐴12                 (22) 
 
 
In this particular case, the meaning of the individual 
behavior is as follows: 
 
Behavior A11 it is responsible for the insulin 
production that will eventually be introduced 
into the system. This behavior may also 
represent a buffer that stores a certain amount of 
insulin. 
 
Behavior A22 it represents all the phenomena 
occurring in the glycemic homeostasis system, 
along with the ways of insulin utilization. 
 
Behavior A12 it is responsible for the exchange 
of information (from agent A1 to agent A2) - 
this behavior should be determined. 
The purpose here is to define the behavior A12 
   in such a way as to ensure insulin levels of φA2=7 [uIU/ml] 
for Agent A2. Below is a procedure to achieve our goal: 
 
1. Simulation for the conditions specified for a person with 
type 1 diabetes (without insulin infusion) (Figure 4). 
 
2. Transform the pattern (22) into a form that allows us to 
calculate the desired behavior. In this case, we  get: 
 
𝐴12 = 𝜑𝐴2 − 𝐴22                             (23) 
  
 
3. Perform curve fitting procedure (Figure 5) to the points 
obtained. This procedure was performed in MATLAB 
environment using the “fctool” command. The fit was done 
using a linear function. The following form of function is 
given: 
 
𝑓(𝐴12) = −0,0914𝑡 + 6,14                      (24) 
 4. The last step was to implement the equation described 
in Equation (24) into the body of the insulin dispensing 
agent. The simulation was started and a comparative analysis 
of data from the insulin-free model and from the model in 
which the found behavior A12. 
Below are the following drawings corresponding to the 
points mentioned above. 
As can be deduced from Figure 6, the concept of using a 
matrix description to identify unknown behaviors is the most 
appropriate approach. Using (22), it is possible to select 
unknown behavior in such a way that the preset value can be 
maintained throughout the system under consideration. By 
focusing on the selected part of φ matrix, there is an 
opportunity to declare such an unknown behavior that will 
36
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

result in a given value from the agent the minor describes. 
This is the second case presented in this experiment. As a 
result of matching A12, it has become possible to maintain 
insulin levels of 7 [uIU/ml] by the agent A2. Of course, the 
quality of the curve fitting to the measurement points 
(Figures 4 and 5) directly affects the quality of the results 
generated by the multi-agent system. 
 
 
Figure 4. Simulation result for a person with type 1 diabetes - without  
insulin. 
 
 
Figure 5. Chart for variability of behavior A12. 
 
 
 
Figure 6. Simulation results for two cases: without insulin (blue 
curve), including the behavior of insulin dosing into the multiple 
agent system (red curve). 
 
 
V. 
CONCLUSIONS 
In this paper, we made the analysis of the multi-agent 
system with the use of graph theory and matrix calculus. 
This approach can help us  analyze the operation of such 
system in two ways: quantitative and qualitative ones. The 
use of matrix record enables performance of analysis of 
internal multi-agent system involving assignment of 
behaviors to particular agents. External analysis of the 
multi-agent system with the use of introduced record allows 
for description of the relation between agents and for 
selection of such unknown behavior of agent which will 
meet the intended purpose or criterion implemented by the 
multi-agent system. In the second example, it is shown how 
using matrix equation allows finding the desired behavior of 
multi-agent system. For the general case in which the agents 
(and the multi-agent system) process several volumes, each 
of these factors must be represented by a separate graph of 
accurate dependency. Generally speaking, each value can 
represent different graph of connections between agents, 
and agents can have different numbers and behaviors 
intended to process these values. The matrix equation (5) 
proposed by authors, will be the subject of further work 
towards stability study of multi-agent system.  
REFERENCES 
 
1. H. S. Nwana, “Software agents: an overview,” The Knowledge 
Engineering Review, 1996, 11(3), pp. 205–244. doi: 
10.1017/S026988890000789X. 
2. M. Wooldridge, “An introduction to multiagent systems,” 
John Wiley& Sons, 2009. 
3. P. Stone and M. Veloso, “Multiagent systems: A survey from 
a machine learning perspective,” Autonomous Robots 8.3: pp. 
345-383, 2000. 
4. A. Helleboogh, G. Vizzari, A. Uhrmacher and F. Michel, 
“Modeling dynamic environments in multi-agent simulation,” 
Autonomous Agents and Multi-Agent Systems 14.1 : 87-116, 
2007. 
5. T. 
Seth 
and 
U. 
Wilensky, 
“NetLogo: 
Design 
and 
implementation of a multi-agent modeling environment,” 
Proceedings of agent, vol. 2004. 
6. F. Bellifemine, A. Poggi and G. Rimassa, “Developing multi-
agent systems with JADE,” International Workshop on Agent 
Theories, Architectures, and Languages, Springer Berlin 
Heidelberg, 2000. 
7. S. Parson and M. Wooldridge, “Game Theory and Decision 
Theory 
in 
Multi-Agent 
Systems,” 
Kluwer 
Academic 
Publisher, 2000. 
8. P. J. Wangerman and F. R.  Stengel, “Optimization and 
Coordination of Multiagent Systems Using Principled 
Negotiation,” Journal of guidance, control, and dynamics, vol. 
22, No. 1, 1999. 
9.  S. Soylu, K. Danişman, I.E. Saçu and M. Alçi, "Closed-loop 
control of blood glucose level in type-1 diabetics: A 
simulation study." Electrical and Electronics Engineering 
(ELECO), 2013 8th International Conference on. IEEE, 2013. 
37
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

