Mobile Robots Path Planning using Genetic Algorithms 
 
Nouara Achour 
LRPE Laboratory, Department of Automation 
University of USTHB 
Algiers, Algeria 
nachour@usthb.dz 
Mohamed Chaalal 
LRPE Laboratory, Department of Automation 
University of USTHB 
Algiers, Algeria 
mchaalal@usthb.dz
 
 
Abstract—In this article, we discuss path optimization to solve 
the problem of path planning for autonomous mobile robots. 
We consider the case of constrained environments where the 
robot is represented as a point. For that, we used an approach 
based on models of evolution; the genetic algorithms which are 
an interesting alternative to conventional methods of path 
planning. A population of paths is obtained firstly using a 
random distribution strategy. The performance of the 
proposed Genetic Algorithm based approach is tested on 
environments with increasing complexity. Through some 
results, we give a comparison between this strategy and a 
method based on Lazy A* search. 
Keywords-path 
planning; 
PRM; 
Genetic 
algorithms; 
robotics.  
I. 
 INTRODUCTION  
The aim of motion planning is to find the allowable 
movements of a robot in a constrained environment 
(clearance of a robot from obstacles is low). In its simple 
version, it consists of finding a path free of collision from an 
initial configuration qinit to a final configuration qfinal, it is a 
PSPACE-hard difficulty as shown by Reif [1]. 
 This means that the complexity of the path planning 
problem increases exponentially with the dimension of the 
configuration space. Based on scientific research over the 
past twenty years, we found that there are two major families 
of algorithms that address this problem. One uses a 
deterministic approach while the second uses a probabilistic 
approach [2]. There are several deterministic search 
algorithms; we can cite Bellman, breadth first search, etc. 
Recently, random sampling has emerged as a powerful 
technique for planning in large configuration spaces [3][4]. 
Random-sampling 
planners 
are 
classified 
into 
two 
categories: PRM (Probabilistic RoadMap) and RRT 
(Rapidly-Exploring Random Tree). 
An other approach uses genetic algorithms which are 
Meta-heuristic search algorithms. Genetic algorithms (GA’s) 
are search strategies based on models of evolution [5]. They 
have been shown to be able to solve hard problems in 
tractable time. Here, we need a solution space composed  of 
a set of nodes randomly generated in Cfree (free 
Configuration space).  
When using GA’s, we need a solution space composed of 
a set of nodes randomly generated in Cfree. The algorithm 
execution is performed by the research of the best 
configurations between the initial and the final nodes with 
checking the optimization criterion which is here the 
distance. 
The strength of this method is that it allows to explore 
and exploit the best solutions by two operators, which are 
selection and genetic reproduction. 
Section II gives an overview of previous related works 
and exposes this work's motivations, Section III lays the 
mathematical description of the terms and concepts used in 
this article, Section IV describes briefly the PRM-based path 
planning, Section V details our approach in using genetic 
algorithms to plan optimized paths. In the last section, we 
report a series of actual runs.  
II. 
RELATED WORK 
GA’s are considered as optimization algorithms for 
search in a space of potential solutions, so they are faced 
with the exploration-exploitation dilemma.  The solution to 
the problem of planning by Genetic Algorithms is proposed 
for the first time by [5]. There are also other contributions by 
several researchers [6][7]. The common problem to all 
methods is how to choose the initial population. Most of 
these methods use a set of paths encoded in the 
chromosomes. The optimal path is calculated after several 
iterations. The necessary step in these algorithms is the 
determination of the fitness function (optimization criterion).   
[4] proposed to use a function of performance determined by 
the linear combination of distance, the smoothing angle and 
the robot position from the obstacles. Some papers have 
focused on dynamic environments [8] and others have tried 
to investigate in the synergism of respectively fuzzy logic - 
GA’s [10] and neural networks-GA’s [11].  
In this article, we discuss path optimization to solve the 
problem of path planning for autonomous mobile robots. We 
have mainly focused on using genetic algorithms to calculate 
optimized paths, we have thus demonstrated their advantages 
and disadvantages, and for this we made a comparison with a 
widely used approach, PRM associated with A* algorithm for 
finding optimal paths. 
III. 
PRELIMINARIES 
As the paper covers several notions relating to C-space 
(configuration space), we give some definitions for the most 
pertinent ones used here. 
Definition 1:  A Workspace ࣱ  is a physical space 
represented by Թ² for planar (2D) or Թ3 for 3D spaces. 
111
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

Definition 2: An Obstacle ࣩ is a portion of ࣱ that is 
“permanently” occupied, represented by the obstacle 
region ࣩ, ࣩكࣱ. 
Definition 3: A robot ࣛ consists of one rigid body, or 
more “motion-constrained” rigid bodies, represented by the 
robot region ࣛ and is the set of all points in ࣱ that lie in ࣛ, 
ࣛكࣱ. 
Definition 4: A robot configuration q is a set of 
parameters that completely specify the position of robot ࣛ  
with respect to a fixed frame F , ࣛሺݍሻ is the region of ࣱ 
occupied by ࣛ at configuration q. Each parameter of q 
corresponds to one degree of freedom of the robot. 
Definition 5: The configuration space ࣝ for a robot ࣛ  is 
the set of all configurations of robot ࣛ in  ࣱ or: 
 
ࣝ ൌ ሼ׊ ݍ |ࣛሺݍሻكࣱሽ 
             (1)      
                                                                             
Definition 6: The configuration space obstacles ࣩࣝ is the 
mapping of the obstacles in the workspace to the 
configuration space, it is the set of all configuration of robot 
ࣛ at which the robot region is in contact or overlaps with 
obstacles regions or: 
 
ࣩࣝ ൌ ሼ݈݈ܽ ݍ,݅ |ࣛሺݍሻתࣩ௜്׎ሽ                    (2)    
                                                                 
Definition 7: Free configuration space ࣝfree is the set of 
configurations at which the robot is free from collision with 
the Workspace obstacles, or simply: 
 
ࣝfree ൌ ࣝ\ࣩࣝ                                    (3)  
                                                                                                       
Definition 8: A local-path lp is a continuous function of 
a parameter s which takes values in the interval : [0, 1] to ࣝ 
or: lp: [0, 1] →  ࣝ | lp(s)=q(s). 
Furthermore, if the local-path is defined by its end 
configuration lp(q0,q1), then lp(0)= q0, lp(1)= q1. 
Definition 9: The general definition of a path p is the 
same as that of a local-path, and when it is additionally 
defined by its start and end configurations p(qs, qe), then p(0)= 
qs, lp(1)= qe.  
Given the discrete search used here, p will be mostly 
defined as an ordered set of k local-paths, or p(lp1, lp2,.. lpk) 
where; lpi(1)= lpi+1(0), i=1,..k-1, this results in a continuous 
path. A sub-path(q1,q2) of a path p is a continuous function 
from ሾݏଵ,ݏଶሿ  →  ࣝ  where ݌ሺݏଵሻ ൌݍଵ, ݌ሺݏଶሻ ൌݍଶ  and   
׊ݏ א ሾݏଵ,ݏଶሿ: sub-path(q1,q2) ሺݏሻ ൌ ݌ሺݏሻ. 0 ൑ݏଵ ൏ݏଶ ൑ 1. 
IV. 
PLANNING WITH PRM 
Probabilistic algorithms are based on the use of 
randomness for the construction of a graph capturing, in 
condensed form, the connectivity of the free space  ܥ௙௥௘௘ , 
thereby precluding any explicit representation of the 
configuration space C. The basic idea of planners based on 
random sampling is to exploit the outstanding performance 
of collision detection algorithms that verify whether a given 
configuration is free or not. It should be noted that the 
completeness of these algorithms is rather low. 
The principle used to sample the space Cfree is that of 
uniform random sampling, which can blanket the entire free 
region. 
 
Simple Query PRM Algorithm (N, B,M,v's, qini , qfin) 
1. Sample N configurations 
2. R(V,E)←For every node n, assign the closest B visible 
nodes as visible from n. 
3. Add qini and qfin to R and query it using Lazy A* for 
path p, if successful return p. 
4. Sample and connect M new nodes to R in "difficult" 
regions. 
5.  Query R using Lazy A* for path p, if successful return 
p else return Failure. 
 
We may note that in step 1 and 2 we only construct a 
roadmap without actually checking the nodes in V nor the 
edges in E for collision. This will be performed during the 
query phase only when necessary by using a Lazy A*[9] 
with weighed L-infinity norm  ݀ሺݍԢ,ݍ"ሻ௪௅ஶ  (the weights 
being νi's ) as the cost of  edge e(q',q"). the difficult regions 
in step 4 are those collision free nodes that fail more often to 
connect to their neighbouring nodes compared to others, this 
could potentially indicate that these nodes are located in 
narrow regions [9][12] (Figure 1). 
V. 
PATH PLANNING USING GENETIC ALGORITHMS 
The algorithm is divided into two phases; first, we 
generate a set of configurations in free space and then in the 
second phase we use genetic algorithms as a metaheuristic 
search procedure to find the optimal path that leads robot 
from qini and qfin. In order to sample the space Cfree , we use 
the uniform random sampling, which can blanket the entire 
free region. Each time we generate a configuration, we check 
whether it is in collision or not. In our case, we generate an 
initial population of segments with a performance function 
based on the minimum distance (Figure 2).  
To find the optimal path by the approach of genetic 
algorithms, we try to find the best segments of this path, such 
that the sum of their metric distance is minimal. The coding 
of these solutions is as follows: each chromosome contains 
two nodes, an initial and final node. These nodes are those 
generated in the first phase, so they are free of collision. 
 
 
 
 
Figure 1. Roadmap built by PRM in a C-space with narrow 
regions.  
112
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

 
 
 
 
 
 
The algor
each iteration
the initial nod
node of the 
algorithm stop
In order to b
should not co
Solutions 
the topologic
genotype spac
information an
After the 
operation cr
produce new 
increases the
mathematical 
depends on th
solutions, for
applied to in
numbers. It c
chromosomes
people around
The crossi
chromosome 
node is in co
avoid collision
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Xi    Yi 
Xi    Yi 
Figure 
(nodes) 
passing 
Figure 3. 
each chrom
rithm runs in 
n, we choose a
de of each seg
best segment
ps when we re
be eligible in 
llide with obs
encoding is p
cal structure 
ce. With binar
nd the concep
initialization 
rossover is p
solutions fro
e chance of 
formulation 
he nature of r
r example, th
ndividuals wi
onsists of cho
s to exchang
d this point. 
ing is perform
(Figure 3), an
ollision or not 
n with obstacl
Xi    Yi 
Xj1        Yj1 
Xj1        Yj2 
2. The blue sta
generated rand
through the best 
Crossing is perf
mosome.  
a finite numb
a new populat
gment (which
t in the prev
each the goal c
the initial po
stacles. 
performed by r
of the solu
ry coding, the
pt of geometric
of the solutio
performed. T
om the initia
finding the 
n of the ope
representation
he crossing a
ith binary rep
oosing a rando
e genetic ma
med only for th
nd each time w
and visible t
les. 
Xj    Yj
Xi    Yi 
Xi    Yi 
Crossing 
ars represent all 
domly and the b
nodes. 
formed only for 
ber of iteratio
tion that depe
h represents th
vious iteration
configuration.
opulation, a se
real numbers t
ution space 
ere is a risk of
c path. 
on space, the 
This operatio
al population, 
best segmen
eration of cr
n used to enco
at one point 
presentation o
om point for t
aterial betwee
he final node o
we check whet
to the initial n
Xj2        Yj
Xj2        Y
the configuratio
best path (in r
the final node o
 
ons. At 
ends on 
he final 
n). The 
 
egment 
to store 
to the 
f losing 
second 
on can 
which 
nt. The 
rossing 
ode the 
can be 
or real 
the two 
en two 
of each 
ther the 
node to 
 
eq
 
݊௜
ea
fu
di
no
ge
sta
fu
op
re
 
 
 G
1.
2.
3.
4.
5.
6.
 
Ge
be
m
en
ha
ro
fin
ሾ3
nu
re
ob
an
j2 
Yj1 
ons  
ed)  
of 
The probabi
qual to 1 and 0
The fitness f
 
݀
௜ and ݊௕௘௦௧ bei
ach segment, ݊
After evalua
unction, the be
stance of the
odes. The be
eneration, the 
arting point of
The best no
unction. In our
peration since
sults, there is 
Genetic Algori
Encoding s
Crossing (s
Evaluate al
Select 
t
minimal ሺ ݔ
Add (ݔ௕௘௦௧
xi= xbest, yi=
The two app
enetic Algorit
een tested on e
more complexit
In our case
nvironment co
as three dof (tw
otation). 
For both ap
nal configura
3, 2,ߨሿ௧, and 
umber of sa
spectively at 5
Figures 4 (
btained respec
nd second appr
ility of crossin
0. 
function is as 
݂ሺݏሻ ൌ ቆ
௜ ൌ ԡ݊௜ െ ݊௕௘
ߠ௜ ൌ t
ing respective
݊௙௜௡  is the fin
ating each ch
est segment i
e path passin
est chromoso
final node of
f the next segm
ode is the one
r case, we ha
e its random e
a risk of losin
ithm (N, B,M,f
solutions into 
selection of cr
ll chromosom
the 
best 
ݔ௜, ݕ௜,ݔ௕௘௦௧,ݕ
,ݕ௕௘௦௧) to p 
=ybest until xi=
VI.
proaches of pa
thms were im
environments 
ty. 
e the mobile
onsisting of w
wo degrees fo
proaches, we 
ations, namel
ݍ௙௜௡ ൌ ሾݔ௙௜௡,ݕ
amples (M)
500 and 5. 
a, c, e, g) an
ctively for the
roach (GA’s).
ng and mutatio
follows: 
ቆ
ଵ
ௗ೔ ݁
షഇ೔
೏೔ ቇ െ ݁
ష
௘௦௧ԡଶ ൅ ฮ݊௙௜௡
 
tanିଵ ௬೙೑೔೙ି௬೙
௫೙೑೔೙ି௫೙
ely the final a
nal node of the
hromosome by
s the one wh
ng through t
ome is determ
f this chromos
ment. 
e which has th
ave not consid
effect may pr
ng the best ind
,f, qini , qfin) 
vectors ሺݔ௜, ݕ
rossover point
mes by the fitne
segment 
ݕ௕௘௦௧ሻ 
= xfin, yi=yfin 
RESULTS 
ath planning P
mplemented in
with simple s
e robot ࣛ  na
walls and poly
or translation a
considered th
ly:  ݍ௜௡௜௧ ൌ ሾݔ௜
ݕ௙௜௡,ߠ௙௜௡ሿ௧ ൌ
and neighb
nd (b, d, f, h)
 first approac
. 
on are respect
ష೏೔
ഇ೔                   
െ ݊௜ฮ
ଶ          
೙೔
೙೔
                    
and initial nod
e global path.
y the perform
hich minimize
these interme
mined after 
some become
he maximal fi
dered the mut
roduce undesi
ividuals. 
ݕ௜,ݔ௝,ݕ௝ሻ 
t randomly) 
ess function f
whose 
f
PRM/Lazy A*
n Matlab and 
structure then 
avigates in a
ygonal obstacl
and one degre
he same initia
௜௡௜௧,ݕ௜௡௜௧,ߠ௜௡௜௧
ሾ18, 19,ߨሿ௧ .
bors (B) are
) show the re
ch (PRM/Lazy
tively 
   (4) 
   (5) 
   (6) 
de of 
mance 
es the 
ediate 
each 
es the 
itness 
tation 
irable 
is 
* and 
have 
with 
a 2D 
les, it 
ee for 
al and 
௧ሿ௧ ൌ
 The 
e set 
esults 
y A*) 
113
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

                                                  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                  
 
 
 
                                                 
 
 
 
 
 
 
 
 
Table I gives the computation time of a path by the two 
approaches in the four environments. 
 
TABLE I.  
 
 
PRM/Lazy A* 
                  GA’s 
M 
N 
T 
M 
N 
T
Envt 1 
500 
500 
118.90
500 
34
20.02
Envt 2 
500 
1015 
122.63
500 
38
23.85
Envt 3 
500 
1634 
168.92
500 
41
21.96
Envt 4 
500 
2043 
168.36
500 
70
24.02
 
VII. 
DISCUSSION 
In the typical results shown in Figure 2, we find that the 
final path is always optimized (in length) when using genetic 
algorithms. The time required to find the optimal path is 
about 24 seconds with a number of samples equal to 500. 
If we increase the complexity of the environment, we 
obtain a path generally better optimized in distance and also 
in computation time. The number of iterations (70) is 
significantly lower than the one obtained from PRM (2043). 
Even if we increase the number of samples, the optimal path 
keeps the same performance. 
The GA’s approach does not require the construction of 
the graph of visibility, it minimizes the computation time of 
the path, it is very interesting for solving NP-hard problems. 
Despite the good results, there remains a problem when 
meeting environments with narrow regions (Figure 4(c, d)) 
which makes very difficult the search for configurations that 
optimize the way, the algorithm falls into a local minimum. 
In this case, a probable solution is to generate additional 
configurations in these regions. But this is not always the 
right solution, because if we increase the number of 
configurations, there is a risk of not finding the way, despite 
the existence of feasible configurations in Cfree. The failure to 
find a solution path is often due to the inefficiency of 
collision detection. By making several attempts, we can 
reach an acceptable solution. For example, for the 
environment 4, the path is found after 5 tests and 70 
iterations. 
VIII. CONCLUSION AND FUTURE WORKS  
This paper investigates the application of GA’s for 
solving the problem of path planning for mobile robots. We 
studied two approaches based on randomized algorithms, 
PRM and GA’s. For the first approach, the results showed 
that we can find feasible paths for several types of 
environments, however, this does not qualify as ‘robust’ this 
approach, since we encounter cases where we can not find 
solutions, despite that there are configurations eligible to 
generate a path. In the second approach, which is based on 
genetic algorithms, a population of paths is obtained firstly 
using a random distribution strategy. The performance of the 
proposed Genetic Algorithm based approach is tested on 
environments with increasing complexity. The results 
obtained by this approach show the effectiveness of GA’s, 
these algorithms can find the optimal path in a very short 
time and has the capacity to enrich the configuration space 
by a different set of eligible movements by using the 
crossover operator and selection.  
As future works, we would like to extend this approach 
to multiple cooperating robots and mobile manipulators. 
IX. 
REFERENCES 
[1] 
J.H. Reif  “Complexity of the mover’s problem and generalizations,” 
Proc. IEEE Transactions on Robotics and Automation, pp. 421–427, 
1979. 
[2] 
J. C. Latombe, Robot Motion Planning, Norwell, MA: Kluwer, 1991. 
[3] 
E. Kavraki, P,Svestka, J-C. Latombe, and M.H. Overmars 
“Probabilistic Roadmap for path planning in high-dimensional 
Figure 4. From top to bottom, the two paths obtained (on the 
right PRM/Lazy A* and GA’s on the left), for environments 
1, 2, 3 and 4. 
(a) 
(b) 
(c) 
(d) 
(e) 
(f) 
(g) 
(h) 
114
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

configuration spaces”. IEEE   Trans, Robot & Autom, 12(4),pp. 556–
580, June 1996. 
[4] 
L. Kavraki, M. Kolountzakis, and J.-C. Latombe. “Analysis of 
probabilistic roadmaps for path planning”. In IEEE Trans. Robot. & 
Autom., volume 14, pp. 166–171, 1998. 
[5] 
J.H. Holland, Adaptation in natural and artificial systems, Ann Arbor: 
University of Michigan Press, 1975. 
[6] 
D. E. Goldberg, Genetic Algorithms in Search, Optimization and 
Machine Learning. 1st ed. MA: Addison-Wesley, 1989. 
[7] 
C. E. Thomas, M. A. C. Pacheco, M.M., and B.R.Vellasco, ”Mobile 
Robot Path Planning Using Genetic Algorithms,”. In foundations and 
tools for neural modeling, vol. 1606/1999, Springer Berlin/ 
Heidelberg, pp. 671–679, 1999. 
[8] 
S. Yang , H. Cheng, and Fang Wang, “Genetic Algorithms With 
Immigrants and Memory Schemes for Dynamic Shortest Path 
Routing,” IEEE Trans on Syst  man, and cyb, vol. 40, n°1, pp. 52–63, 
2010. 
[9] 
R. Guernane, and N. Achour, “An Algorithm for Generating Safe and 
Execution-Optimized Paths” in Proceedings of the Int. Conference on 
Autonomic and Autonomous Systems, pp. 16–21, Spain, 2009. 
[10] C. Fayad and P. Webb, “Development of a hybrid crisp-fuzzy logic 
algorithm optimised by genetic algorithms for path-planning of an 
autonomous mobile robot” in Journal of Intelligent & Fuzzy Systems, 
pp. 15-26, 2006. 
[11] N. Noguchi and H. Terao “Path planning of an agricultural mobile 
robot by neural network and genetic algorithm” in Journal Computers 
and electronics in agriculture, 1997, vol. 18, no2-3, pp. 187–204. 
[12] R. Bohlin, and L. E Kavraki, “Path Planning Using Lazy PRM” in 
Proceedings of the IEEE Int. Conference on Robot & Autom, pp. 
521–528, IEEE Press, San Fransisco, 2000. 
 
 
 
 
115
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

