Soft System Stakeholder Analysis Methodology 
Markus Kelanti, Jarkko Hyysalo, Samuli Saukkonen, 
Pasi Kuvaja, Markku Oivo 
Department of Information Processing Science 
University of Oulu 
Oulu, Finland 
{markus.kelanti; jarkko.hyysalo; samuli.saukkonen; 
pasi.kuvaja; markku.oivo}@oulu.fi 
Jari Lehto 
Nokia, Networks 
Espoo, Finland 
jari.lehto@nokia.com 
 
 
 
Abstract— Understanding problems and the values of any 
solution 
from 
multiple 
stakeholder 
perspectives 
is 
a 
fundamental feature of stakeholder analysis. As modern 
systems increase in size and functionality and include services 
and other non-software or hardware components, more 
stakeholders are involved. These stakeholders have different 
interests and needs, which are often expressed in a multitude of 
ways. Describing problems and identifying the local strategic 
values in a constantly changing business environment is 
strategically important to companies. This paper describes 
action 
research 
conducted 
within 
a 
large, 
global 
telecommunication company to study how stakeholder analysis 
can support software-intensive systems development. The 
results of the study demonstrate the need to analyse, structure 
and identify problems and solutions with different local and 
strategical values. Furthermore, the results show the 
importance of method usability and the role of stakeholder 
analysis in supporting software intensive systems development. 
The outcome of the study was a method for a practical 
stakeholder analysis that supports the identified needs in the 
software-intensive systems development. 
Keywords-Software 
Intensive 
Systems; 
Stakeholder; 
Stakeholder Analysis; Action Research. 
I. 
 INTRODUCTION 
In today’s world, software systems development is 
becoming increasingly challenging. Software systems are 
typically not developed by a single company. Rather, they 
are 
developed 
globally, 
with 
collaboration 
between 
subcontractors, 
third-party 
suppliers 
and 
in-house 
developers. Modern systems like software intensive systems 
(SIS) have not remained local isolated applications, but have 
become large and complex systems with increased 
communication with other systems and attached services. 
Few can master the entire process of product development, 
so several experts pool their expertise and work together, 
especially when the software is the main component and 
affects the product’s usability, functionality, development 
tools and methods, production mechanisms and innovation. 
Such systems are known as SIS [1][2][3].  
The case company, Nokia Networks, develops very 
large-scale SIS for the global telecommunication market. 
Development occurs across several countries, which requires 
knowledge workers [4][5] with a common understanding, 
shared goals, awareness and practices that support the work. 
Knowledge-intensive processes are characterised by dynamic 
changes of goals, information, environment and constraints, 
as well as intensive individual ad hoc communication and 
collaboration patterns; thus, it is not easy to plan the work in 
detail beforehand [6]. SIS are often very large-scale systems, 
and various stakeholders from different organisations work 
in collaboration, forming teams that are dynamically and 
spontaneously 
assembled 
and 
work 
together 
via 
communications technology [7]. 
In the case of Nokia Networks, large-scale SIS 
developers often find it difficult to approach, collect, analyse 
and structure all the information that is currently available. 
Similar challenges are presented by the information that is 
obtained as time progresses. The company has adapted agile 
development approaches to answer these problems, and the 
individual teams have especially benefitted from this 
approach. When, however, products or features are analysed 
from the platform or architectural level, the problems still 
exist. These challenges often result from ill-defined goals 
and evaluation criteria and require changes in goals and 
plans during development. Multiple actors and perspectives, 
incommensurable and/or conflicting interests, important 
intangibles, and key uncertainties are typical in such 
situations [8]. 
To solve problems like this, a common approach in 
Requirements Engineering (RE) is to perform a stakeholder 
analysis [9][10]. This type of analysis aims to discover the 
stakeholders relevant to the problem faced by the developers. 
Analysing the stakeholders’ needs allows the real system and 
environment of the stakeholders to be defined and the 
problem to be further understood from multiple perspectives. 
Utilising this information, a company can design an initial 
solution and negotiate with stakeholders to solve conflicting 
interests and produce a solution that results in the most value 
for the stakeholders and the company. However, the 
environment in which the company works is highly 
competitive and dynamic, requiring speed and agility from 
the development process. There are often uncertainties about 
whether information is valid or common enough when new 
features or products are developed. In addition, the 
development situation also changes as more information 
becomes available. Uncertainty and changes are common in 
software development because the processes are complicated 
122
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

and not all circumstances can be predicted [12][13]. 
Furthermore, the order in which activities are executed is not 
necessarily important—it may even be impractical as 
interaction with the environment, activities and underlying 
business logic determines the order of execution rather than 
predetermined, static process schema [11]. The analysis of 
information is often done intangibly, since the development 
process involves numerous personalities, experiences, types 
of 
education 
and 
backgrounds. 
Understanding 
and 
processing is essential for properly structuring information as 
it helps the company identify the real problem, determine 
where it can potentially gain the most value and discover the 
type of solution that is capable of realising this value.  
Therefore, the research problem of this paper is: how can 
problems in SIS development be described and structured 
using stakeholder analysis? In particular, how can problems 
in an SIS development environment be described and 
analysed in order to identify the impact and value from 
different stakeholder viewpoints? 
Action research [14] was conducted over a period of one 
year in the case company to research and develop a practical 
way to perform stakeholder analysis. The rest of the paper is 
structured as follows. Section 2 presents the related research, 
and Section 3 presents the research method. Section 4 
describes how the action research cycles were performed and 
their results. Section 5 presents the soft system stakeholder 
analysis methodology (S3AM) developed as a result of the 
action research. Section 6 discusses the results of the 
research and how problems in SIS should be approached and 
section 7 describes threats to validity and the limitations of 
the research. Section 8 presents the conclusions and future 
topics. 
II. 
RELATED RESEARCH 
Freeman [15] was the first to popularise the concept of 
‘stakeholder’. He defined a stakeholder as a group or 
individual affected by the achievement of an organisation’s 
objectives, or a group or individual that can affect them. This 
concept introduced ethical thinking to businesses, causing a 
company to consider other stakeholders’ benefits rather than 
just stockholders’ [16]. This is known as a stakeholder 
approach where company needs to identify stakeholders in 
order to identify their needs and manage them [17]. 
Stakeholder analysis is an internal part of RE in any 
software development process. An RE stakeholder is 
generally a person, group or organisation that has an interest 
in or is connected to the system under development [9][10]. 
Common stakeholders are end users, engineers, managers 
and customers [18][19]. Stakeholder analysis is generally 
integrated into the specific RE method and does not exist as 
an independent method. It mainly supports the [9][10][19]: 
 
identification of relevant stakeholders, 
 
elicitation of stakeholder requirements, 
 
analysis 
of 
requirements 
from 
stakeholders’ 
perspectives, 
 
validation of requirements, 
 
negotiation of requirements with stakeholders, and 
 
prioritisation of requirement implementation. 
A common approach is to utilise user stories, requirement 
templates or other structured or semi-structured data 
containers to capture information about a system and how it 
works from a stakeholder’s perspective. This process can be 
guided by practical perspective [20] or used to support 
negotiations [21].  
The main critique of stakeholder analysis is that it is not 
systematic and well defined [18][22]. Either it supports few 
activities in the development process or its instructions and 
process are vaguely described. To counter this problem, 
multiple stakeholder analysis methods have been developed.  
Ballejos and Montagna [18] describe a specific method 
for stakeholder identification in an inter-organisational 
environment 
utilising 
generic 
stakeholder 
categories. 
McManus [22] defines a general systematic approach to 
stakeholder analysis that describes the identification, 
elicitation, analysis and negotiation processes in RE. 
McManus also provides an identification and analysis 
method based on the World Bank’s list of possible 
stakeholders. Alexander and Robertson [33] use the onion 
model to identify and involve stakeholders to the 
development process. Lim et al. [23] utilises social networks 
to systematically analyse stakeholders in large-scale software 
projects. They utilise crowdsourcing to automate stakeholder 
analysis by asking the stakeholders to recommend other 
relevant stakeholders and aggregating the answers via social 
network analysis. 
While there are known and established methods for 
stakeholder analysis, none has established itself as the 
benchmark method in a development effort dominated by 
software. Furthermore, the methods typically concentrate on 
small- and medium-scale development efforts. However, 
instead of abolishing any of the existing methods, it is 
worthwhile to examine how the stakeholder analysis should 
work in SIS development context and how it should be 
implemented in order to benefit its users. 
III. 
RESEARCH SETTING AND PROCESS 
To monitor their development process, the case company 
utilises metrics that measure the process on different levels. 
Data is collected and then synthesised for different 
stakeholders to compare the development to pre-defined 
guidelines. This system is known as a metrics reporting 
system (MRS). The main benefit of this type of system is 
that it helps analyse and visualise the statuses of different 
organisational units and the overall picture.  
The data for the MRS is provided and calculated by 
multiple units. The units participating in this research had 
been experiencing organisational changes: some of the work 
was done manually, and some was assisted by tools. The 
company was interested in finding a way to automate the 
reporting system—or at least parts of it—to try to avoid 
manual data collection. Its goals were to determine the extent 
to which the MRS could be automated, discover its 
requirements and calculate the value of the automation. In 
this case, part of the MRS (8 metrics) was deployed to 
measure the performance of product lines. The metrics 
reported the data for each product line at the end of a 
reporting period.  
123
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

In order to reach these goals, the company needed a 
method for collecting and structuring information to describe 
the current MRS from multiple stakeholder perspectives. 
This would allow for the analysis of changes to the system 
and their potential value. Because the current understanding 
of the MRS was unclear and there were a number of 
unknown variables, action research [14] was selected as the 
research method. It was important to establish constant 
collaboration between the company, participants and 
researchers to ensure a complete understanding of the 
environment and problem. Action research offered flexibility 
and an iterative approach to the problem.  
Action research is an iterative and systematic process that 
addresses concrete organisational problems through the 
application of theories in practice. It allows both researchers 
and practitioners to gradually create a satisfactory solution to 
the organisation’s problem while adding to the scientific 
knowledge on the topic [24][25]. Action research is 
composed of cycles or iterations, allowing for constant re-
evaluation of the problem, implementation of the solution 
and learning in short intervals [14][26][27]. The cycles are 
divided into the following phases:  
• 
diagnosis, where the problem is identified, analysed 
and defined; 
• 
action planning, where the actions to address the 
defined problem are decided based on the available 
solutions and theories; 
• 
action taking, where the desired actions are 
implemented; 
• 
evaluation, where the impact of the action is 
studied; and  
• 
specify learning, where the results and findings of 
the evaluation are documented and published, and 
then this information is used in a new cycle. 
 The action research method in this study was 
implemented as follows. A pre-study was conducted to 
analyse the company’s problem and select a suitable 
approach from the literature. After the pre-study, the 
iterations began and were continued until a suitable solution 
was devised. Each iteration began with a diagnosis meeting 
between at least two company representatives and one 
researcher, who analysed the results of the pre-study or a 
previous iteration. Based on the results, they determined the 
desired actions for the iteration and how long the iteration 
would last. After the meeting, the actions were implemented; 
this was done primarily by the researcher, who was assisted 
by the company representatives. When this phase ended, the 
researcher evaluated the results and presented them in a 
retrospective meeting. The purpose of the retrospective 
meeting was to specify what was learned. This meeting is 
open to the company representatives and other company 
personnel, especially those who were involved in the 
research. 
A total of five iterations were completed during 2014, 
and a total of 30 modelling sessions were completed with 20 
MRS stakeholders. Five meetings and five workshops were 
held at the beginning and end of each iteration, respectively. 
IV. 
RESEARCH EXECUTION 
This chapter describes the execution and results of the 
research. 
A. Pre-study 
The first step was to analyse the problem the company 
was 
experiencing 
with 
the 
MRS. 
The 
company 
representatives provided a data set containing descriptions of 
the reports, the reports’ data structures and the stakeholders 
who were responsible for providing the reports. In addition, 
descriptions of the metrics in the MRS were provided, 
including metric input data, calculation formulas and the 
organisational 
units 
responsible 
for 
providing 
data. 
Currently, the metrics in question are reported both manually 
and with Excel templates.  
After analysing the information, the scale and amount of 
the information presented from multiple stakeholder 
perspectives became the main problem. The first step was to 
select a way to structure all the information. A problem 
structuring method was determined to be a suitable 
framework since similar problems are generally approached 
in this way, a soft systems methodology (SSM) [28]. SSM 
was selected due its iterative approach and ability to 
conceptually model any stakeholder viewpoint into a soft 
system model. A soft system can be any system where both 
natural objects and humans interact, which is essential for 
SIS descriptions. SSM consists of: 
• 
entering the problem situation, 
• 
expressing the problem situation, 
• 
formulating root definitions of relevant systems, 
• 
building conceptual models of human activity 
systems, 
• 
comparing the models with the real world, 
• 
defining changes that are desirable and feasible, and 
• 
taking action to improve the real-world situation. 
Other problem structuring methods exist, such as 
multiview, information requirements analysis and logico-
linguistic modelling. They are similar in approach to SSM 
but are designed to be more systematic and rigorous. In this 
case, because the principles remained the same, SSM was 
used to structure the MRS.  
B. Action research iterations 
Based on the pre-study, the action research began by 
structuring the problem situation so that it could be 
understood properly. SSM was selected as a starting point 
for the research activities. Table 1 describes the first two 
iterations. 
124
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

The first iteration concentrated on creating a conceptual 
model of the problem. Unified Modelling Language (UML) 
flowchart was selected as a basic modelling language. 
However, it quickly became obvious that a structure for the 
modelling approach was required to obtain an accurate 
model. Allowing abstract descriptions hid the information 
obtained by the stakeholders. Therefore, the second iteration 
utilised the input–function–output structure to describe any 
activity performed by the stakeholders. In addition, actual 
stakeholders were involved to obtain the data directly from 
the stakeholders themselves, as the original data was 
insufficient. The results of the second iteration indicated that 
the company’s problem was not to just to solve the problems 
in MRS, but also how to analyse it systematically in SIS 
environment. It became clear the company personnel had to 
work in a certain manner and with certain restrictions caused 
by the SIS development. The participants felt that the 
methodology used in the research would be more useful than 
just solving the problem they had with the MRS. 
It was determined that the actual goal of the research 
should be to design a methodology that the company could 
use to analyse problems during SIS development, as it was 
believed that the stakeholders would benefit from analysing 
the problems themselves. Since SSM was perceived to be too 
vague and unfamiliar to participants, it was designed to be 
part of a stakeholder analysis. Essentially, stakeholder 
analysis and SSM have similar outcomes. However, the 
participants understood the concept of stakeholder analysis 
better. Utilising a UML flowchart (UML was identified to be 
a suitable modelling language) and existing systematic 
approaches to stakeholder analysis (e.g., [22], [23]), three 
more iterations were run in order to develop and refine a 
stakeholder 
analysis 
(S3AM) 
suitable 
for 
an 
SIS 
development environment. Table 2 describes the following 
three iterations, which aimed to develop a methodology to 
analyse problems during SIS development. 
Iterations 3–5 mainly concentrated on identifying the 
special attributes of SIS development and how the S3AM 
needs to support the company’s development process. The 
result of the action research was an exact methodology, 
which is described in the next sub-chapter. 
TABLE I.  
ITERATIONS 1–2 
 
Iter. 
Diagnosis 
Action planning and taking 
Evaluation 
Learning 
1 
Problem should be further 
modelled and analysed in 
order 
to 
understand 
it 
properly. 
Create a soft system model 
from the MRS using SSM and 
the data obtained in the pre-
study. 
Use a UML flowchart as a 
modelling language. 
Use Microsoft Visio as a 
modelling tool. 
Perform iteration lasting 3 
months; one researcher creates 
the soft system model from 
MRS. 
The soft system model resulting from 
SSM was found to be informative and 
easy to understand. 
The UML flowchart was able to model 
the information, and participants had 
experience using it. 
Microsoft Visio was able to model the 
soft system model. 
The data given by the company in the beginning was 
insufficient, as the resulting soft system model in the 
end of the iteration was missing information. 
Stakeholders need to be involved directly. 
Data and functions were found to be missing after the 
soft system model was finished, especially manual 
work, which was done but is missing from the official 
documentation. 
A visual model of the soft system promotes 
communication and information distribution between 
stakeholders. 
The UML flowchart was sufficient for describing the 
MRS. It utilised familiar language and increased the 
acceptance of the method. 
2 
Stakeholders need to be 
directly involved to discover 
their understanding of the 
problem and the soft system 
where it resides. 
UML 
flowcharts 
and 
Microsoft Visio should still 
be used to visualise the soft 
system model.  
SSM should be used as long 
as the soft system model is 
able to present the problem. 
The 
modelling 
approach 
needs to be structured since 
data and activities can be 
hidden. An approach is 
needed 
to 
identify 
and 
model 
these 
data 
and 
activities. 
Select two example metrics 
and relevant stakeholders in 
order to discover whether the 
soft 
system 
model 
is 
beneficial. 
Organise 1.5-hour modelling 
sessions with the identified 
stakeholders. One researcher 
and at least one stakeholder 
participate in each modelling 
session. 
The participating stakeholder 
must 
identify 
other 
stakeholders that can describe 
the soft system if the original 
stakeholder was not able to do 
so. 
Separate 
each 
stakeholder 
viewpoint 
with 
layers 
in 
Microsoft Visio. 
Utilise 
an 
input(s)–
function(s)–output(s) structure 
for information flow to help 
identify what the stakeholders 
actually do in the system. 
 
Using actual stakeholders helped create a 
soft system model that represented how 
the MRS worked in reality. 
Modelling 
sessions 
with 
each 
stakeholder allowed for the modelling 
and separation of stakeholder viewpoints 
within the same soft system model. 
Multiple viewpoints helped to remove 
uncertain parts from the model and 
increased the quality of data as they were 
refined and confirmed by more than one 
stakeholder. 
Stakeholders 
can 
be 
systematically 
added to the model by asking the 
stakeholders to identify who provides 
them 
with 
information 
or 
uses 
information provided by them.  
The layers used in Microsoft Visio 
clearly 
visualise 
how 
different 
stakeholders see, understand and work 
within the MRS. 
The 
input(s)–function(s)–output(s) 
structure of the model increased the level 
of detail and helped stakeholders work 
through the details of their work and the 
process. 
The soft system model must allow for irregular and 
abstract 
viewpoint 
descriptions 
from 
different 
stakeholders, as it cannot be guaranteed that every 
stakeholder is able to use formal language. The 
input(s)–function(s)–output(s) structure should not be 
strictly enforced. 
Multiple viewpoints revealed variations and different 
data and activities than were originally known by the 
stakeholders. The differences and variations affected 
metric generation. 
A systematic method is needed, as multiple 
stakeholders 
are 
required 
to 
work 
on 
it 
simultaneously due to the scale of the problems and 
working environment.  
The soft system model was easy to understand, but the 
concept of SSM was not. It was seen as too vague, and 
it is unusable in its current form. 
Participants felt that the methodology, which helped 
them to approach problems in their work, was more 
valuable than solving the problem in the MRS.  
Participants discussed different problems related to 
MRS that became visible form the model, as they 
appeared to have even more value if solved. 
A need to 
analyse value 
from stakeholder’s 
perspective surfaces as different changes or impacts 
were evaluated against the soft system model. 
125
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

TABLE II.  
ITERATIONS 3–5 
 
Iter. 
Diagnosis 
Action planning and taking 
Evaluation 
Learning 
3 
The fact that SSM creates soft system 
models helps individuals comprehend 
and approach problems during SIS 
development. 
The SSM approach adapted in the 
research should be methodised for the 
company. 
The SSM was perceived as too vague 
and difficult, and it was too general to 
be used as such in SIS environment.  
Stakeholder analysis is a better-known 
concept in software development and 
has similar outcomes to SSM. 
The 
solution 
was 
to 
combine 
stakeholder analysis and a framework 
for creating a soft system model from 
SSM. 
The value of introducing any change to 
the soft system should be analysed, 
preferably by asking the stakeholder 
directly or using a pre-defined value 
measurement. 
Design a first version of the 
S3AM based on the findings of 
previous 
iterations 
utilising 
existing systematic stakeholder 
analysis approaches. 
Extend the analysis to a larger 
part of the MRS to test the S3AM 
in its intended environment.  
Select eight metrics reported by 
eight different product lines with 
responsible stakeholders to be 
analysed. 
Organise 
1.5-hour 
modelling 
sessions with each stakeholder. 
One researcher and at least one 
stakeholder participate in each 
modelling session. 
Ask each stakeholder how many 
working 
hours 
they 
spend 
performing particular tasks to 
evaluate value. 
Identifying additional stakeholders 
by 
asking 
participating 
stakeholders was effective. 
As the analysis was extended to a 
larger portion of the MRS, the 
analysis must be conducted by 
multiple persons. 
Getting stakeholders to participate 
is becoming difficult due to the 
number 
of 
stakeholders 
and 
scheduling problems. 
When 
stakeholders 
saw 
the 
existing model during modelling 
sessions, 
they 
seemed 
to 
understand 
the 
modelling 
approach, and in most cases, they 
described their activities related to 
MRS without requiring further 
instruction. This applied to both 
managers and engineers. 
The variations and differences between data 
and activities become even more pronounced 
as more stakeholder viewpoints are added. 
Promoting 
the 
input(s)–function(s)–
output(s)—language structure, which is typical 
in system descriptions, produced a richer and 
more detailed soft system model. 
Visualising 
the 
models 
increased 
the 
effectiveness of communication in every 
meeting. 
The existing soft system model helped 
participants 
understand 
their 
tasks 
and 
increased the speed of the modelling process 
faster as participants had an example to work 
from. 
Stakeholders felt that the ability to see other 
stakeholders’ 
viewpoints 
in 
the 
model 
increased their understanding of how the MRS 
worked. This led to discussions on how the 
MRS could be improved and how it should be 
analysed to understand its problems.  
 
4 
Explicit visualisation of stakeholders’ 
viewpoints was an eye-opener for 
many stakeholders.  
Stakeholders 
who 
can 
see 
and 
understand other viewpoints are able to 
evaluate impact and value from a wider 
perspective. 
Continue 
the 
modelling 
performed in Iteration 3. 
Make the existing soft system 
model available and present it to 
stakeholders. 
 
Adding 
more 
stakeholder 
viewpoints to the soft system 
model helped stakeholders evaluate 
impact and value from a wider 
perspective. 
Improving the soft system model 
makes interpretation and reading 
the model more difficult for 
stakeholders. 
Model abstraction is needed in both the soft 
system model and in the tool used to generate 
the soft system model. 
Gradually building and constantly refining a 
soft system model supports the distribution of 
work and the co-operative nature of the 
development environment. 
Feedback from stakeholders signalled a need 
to identify the most important areas to analyse 
and where there is missing information in 
order to determine how the system should be 
changed to address problems. 
5 
Abstraction 
of 
stakeholders’ 
viewpoints is necessary in large 
systems. 
The SIS environment causes certain 
restrictions and requirements for the 
S3AM because work is continuous and 
the aim of the analysis changes when 
new information is made available. 
Model abstraction layers using 
descriptions 
of 
stakeholders’ 
viewpoints. 
Analyse the original problem 
based on the soft system model 
and create a separate impact layer 
where the system automation can 
be evaluated. This information 
can be used to determine whether 
the current soft system model is 
adequate for determining the 
value of automation and how it 
should be implemented. 
Continue 
the 
modelling 
performed in Iterations 3 and 4. 
 
The implementation layer allowed 
stakeholders to identify missing 
information and unclear areas. 
Stakeholders identified problems 
with more value than the original 
problem.  
The soft system model, along with 
the implementation layer, helped to 
direct the analysis based on unclear 
data that was connected to the 
impact model. 
Previously unknown but relevant 
stakeholders were identified based 
on the analysis in the impact layer 
due to missing information. 
 
 
Multiple viewpoints increased the visibility 
and transparency of the MRS and refined the 
original problem. 
Multiple viewpoints allowed for the evaluation 
of different value perspectives, especially local 
and strategic perspectives. 
Constant analysis of the problem directed the 
modelling of the soft system and provided 
direction for the analysis based on the impact 
of the problem. When the impact extended out 
of the model, it was an indication for doing 
further analysis on those sections. 
The introduction of an analysis layer for 
analysing the impact of automation helped 
stakeholders identify missing or unclear 
information and find previously unknown 
stakeholders. 
 
  
C. S3AM 
The principle idea of S3AM is to model different 
stakeholder viewpoints into the same soft system model. 
Each viewpoint, however, is the conceptualisation of a 
stakeholder’s understanding of the soft system. In essence, 
each viewpoint contains information about how the 
stakeholder perceives and understands the way in which a 
real life phenomenon works.  
The S3AM starts with a single stakeholder, who 
identifies a soft system of interest. Due to this interest, the 
stakeholder intends to present a request, requirement, need 
or problem that aims to change that soft system in a certain 
manner. The stakeholder is seeking to provide information 
about how to change a certain soft system he believes 
requires such change.  
In order to create the soft system model, a certain 
structure was required to describe stakeholder viewpoints. 
In this case, all soft system descriptions follow the same 
126
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

principle of information flow description: input(s)-
function(s)-output(s). Each stakeholder’s viewpoint is 
constructed in a similar manner: information (documents, 
emails, communication, etc.) is received, something is done 
with the information (analysis, transfer, format changes etc.) 
and the result is a defined output (report, piece of 
information, emails, etc.). For example, a stakeholder is in 
charge of collecting summaries of metric data from two 
other stakeholders. Figure 1 demonstrates the soft system 
model created from the stakeholder’s viewpoint.  
From this stakeholder viewpoint, the summarised metric 
data element in the upper right corner and the summarised 
data element on the upper left form the boundaries of the 
stakeholder’s viewpoint. The stakeholder does not know 
how the other stakeholders actually perform the data 
summaries and what data is used. 
Now that the boundaries are known for the first 
stakeholder, the next step is to analyse the intent of the 
stakeholder (e.g., to automate data collection and create a 
data summary). The known soft system model is now 
analysed to determine whether it contains enough 
information to analyse the real impact from all relevant 
stakeholder viewpoints. 
After the initial soft system model is created, the next 
step is either to analyse how the soft system would change if 
some desired change were introduced, or to simply extend 
the model by adding more stakeholder viewpoints. The first 
case asks practitioners to analyse how the current soft 
system changes if some desired change, for example a 
stakeholder’s need, affects it. In this case, an impact layer is 
drawn using the existing soft system model modified by the 
change. If the change affects any of the boundary elements 
in the soft system model, the stakeholder whose viewpoint 
has the boundary element should identify a stakeholder who 
knows how the soft system worked prior to that element, 
and it should then be modelled. This continues until there 
are no boundary elements affected by the change. This helps 
to direct the analysis effort to those parts that are not yet 
modelled but will be affected by the desired change. The 
other option is to simply ask each stakeholder to identify 
other stakeholders that can describe the system beyond the 
boundary elements of his or her own viewpoint and keep 
extending the model. 
 
Summarise metric 
data
Summarised 
data
Give data to  
stakeholder
Summarised 
data
 
Figure 1. An example of a single stakeholder viewpoint 
 
As more stakeholder viewpoints are added, there will 
eventually be shared elements and conflicting viewpoints. 
Figure 2. demonstrates an additional stakeholder viewpoint 
added to the soft system model. The colour white indicates a 
stakeholder who collects the metric data from the report, 
summarises it as a single figure and gives it to the original 
stakeholder. Another stakeholder asks for the metric data 
directly from the engineers, summarises it and gives it to the 
original stakeholder. However, the stakeholder also states 
that it is not exactly the same metric data; it is presented by 
a separate data element.  
As the model is updated, it is important to verify with 
each stakeholder that existing elements (both functions and 
data) remain the same along with the data flows. If they are 
not, they must be modelled separately to highlight the 
differences. One of the key principles is that each 
stakeholder ‘owns’ his or her own system description. Thus, 
if any changes were made to a single viewpoint, the 
stakeholder who owns it had to accept the change. This was 
determined to be an important feature, as it prevents a loss 
of information by assuming the elements in the soft system 
are the same. Therefore, each element in the soft system 
model belongs to one or multiple stakeholders, and any 
change to an element requires all stakeholders to agree to 
the change or newly created element. 
To analyse the value of any change to the soft system, a 
need presented by a stakeholder should be analysed and 
modelled as an impact model, describing a solution for the 
need. The impact model can be used to determine all 
elements affected by the impact and therefore track all the 
viewpoints in which those new, modified or deleted 
elements reside. The value can be analysed either by 
measuring impact to the work effort or by asking the 
stakeholder directly what value he believes the new soft 
system would bring. 
 
A report
Obtain report from 
email
A report
Collect relevant 
netric data from the 
report
Metric data
Summarise metric 
data
Summarised 
data
Give data to 
another stakeholder
Summarised 
data
Metric data’
Ask metric data 
from engineers
 
Figure 2. Two stakeholder viewpoints in a single soft system model 
 
These values can be summarised to evaluate the overall 
impact. Furthermore, these values can also be used to 
redesign the solution to achieve a different impact with 
127
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

different values. When the value is known for each 
stakeholder, it is possible to determine the overall effect and 
analyse the effect for different groups of stakeholders. 
Values can be both negative and positive. 
Based on the results, it was determined that using a 
modelling language with which the organisation is familiar 
supports the usability of the method. Therefore, S3AM 
allows utilisation of any modelling language as long as it 
supports visualisation, an input(s)-function(s)-output(s) 
model structure and allows attributes to be defined for each 
element. The important factor, however, is the ability to 
visualise the soft system and only promote the input(s)-
function(s)-output(s) 
modelling 
structure 
to 
help 
stakeholders structure their viewpoints. This allows 
practitioners with varying levels of technical understanding 
to understand the described soft system more quickly and 
from different perspectives.  
V. 
DISCUSSION 
The results from the action research show that problems 
in which humans are an integral part are hard to describe, 
comprehend 
and 
communicate. 
Understanding 
and 
structuring such a problem requires human understanding. 
The results further demonstrate how the same phenomena, 
the MRS and data used by the system, are perceived and 
understood in a different manner by each stakeholder. 
S3AM was developed as a combination of SSM principles, 
stakeholder analysis and a model-based approach to a soft 
system where humans play an integral role. These systems 
are never plain, hard systems. They are, rather, a collection 
of hard systems interacting with themselves or with humans. 
While they can be described using a hard system approach, 
the difference is that hard systems are considered to be free 
of interpretation and follow almost exact rules. Such 
systems can be described with exact languages due the 
nature of them. However, when humans are added to these 
systems as actors or observers, the way the system is 
perceived and how it functions now depends on individual 
perception, understanding and behaviour. Multiple actors 
can understand and describe same phenomena in equally 
different ways, all of which need to be captured somehow. 
For example, a single product in the telecommunication 
domain can simultaneously include building the physical 
network, maintenance and customer support. Due to the 
nature of human thinking, the same principles do not apply 
to designing, analysing and modelling, and a ‘soft’ approach 
is required. While the goal of a soft system approach is the 
same as a hard system approach (i.e., model a real world 
phenomena), the soft system approach introduces a way to 
capture and understand different viewpoints of human 
actors.  
S3AM adapted the systems thinking part from SSM, 
where root definitions of the soft system in question are 
determined and modelled using semi-formal language. The 
key principle is to allow highly abstract, conflicting, very 
structured schematics or any other forms of system 
descriptions to exist in a single soft system model. In 
S3AM, this was done by utilising stakeholder viewpoints as 
layers and the boundaries of these viewpoints as connection 
points to other viewpoints. While this model itself was not 
coherent, the main idea was to analyse and connect models 
to form a coherent and structured soft system model. This 
allows different worldviews to come together and facilitate 
consensus building between stakeholders. At the same time, 
the method gradually removes differences in the concepts 
and terms between stakeholders, who are able to see them 
through the viewpoint of others and obtain crucial insight 
into how others think. Workshop discussions indicated 
problems in communication between management and 
engineering. The ability to have both viewpoints in the same 
model helped stakeholders from both groups communicate 
more efficiently and allowed them to understand each 
other’s concerns and perspectives.   
S3AM fulfilled the role of stakeholder analysis by 
allowing participants to identify relevant stakeholders, elicit 
and analyse their needs and have the means to verify and 
validate the problem system. In the end, S3AM was 
designed to be simplistic and direct the user to structure any 
problem as a soft system model, utilising stakeholder 
viewpoints to describe it as accurately as possible. It also 
provides information in the form of impact and value to 
facilitate understanding of the requirements, negotiation and 
agreement on a solution. The S3A also addresses the 
identified issues within stakeholder analysis by providing a 
systematic and defined approach and analysis method. It 
allows systematic construction of a soft system model 
explaining how different stakeholders perceive the real 
world. A local problem was structured and expanded to 
describe the soft system from additional perspectives, 
especially 
a 
strategic 
perspective, 
which 
allowed 
identification of problems and issues that potentially bring 
more value to multiple stakeholders rather than a few local 
stakeholders.  
However, the research also showed that systematic and 
defined stakeholder analysis alone is not enough. How it is 
implemented and how it creates new information for the 
process is equally important. This defines the usefulness of 
the method and justifies its existence. Stakeholder analysis 
in SIS development is not only about identifying the 
requirements and agreeing on their specification through 
negotiation, 
prioritisation 
and 
validation. 
It 
also 
communicates information, creates awareness and elevates 
thinking to higher abstraction layers, enabling the discovery 
of problems or issues that create strategic value. S3AM 
enabled discovery and analysis of impacts and values 
outside the original problem description. In such a situation, 
the original requirement only presented a situational or 
tactical problem. Analysing it systematically from different 
stakeholder viewpoints revealed ‘strategic’ problems that 
were previously unknown. As local and strategic 
perspectives were visible, S3AM had a clear impact on 
removing uncertainty within the participants. It effectively 
128
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

increased the quality of the information that described the 
soft system. Essentially, this helped the stakeholders 
evaluate how much information they had and what 
information was potentially missing. Furthermore, as more 
stakeholders shared a viewpoint, the quality of the 
information increased.  
The action research also revealed the needs and 
limitations of the SIS development process. This had a clear 
impact on the usability of the method. The case company’s 
development process leans towards a decision-oriented [29] 
culture, emphasising the nature of information needed in the 
process. Furthermore, the need to make decisions in quick 
intervals was also apparent, and some kind of result was 
always necessary to either satisfy the information need to 
make a decision or to continue the analysis, as the risk of the 
unknown was too great. In this sense, stakeholder analysis 
also needs to inform the practitioners whether they know 
enough or whether there is missing information that still 
must be analysed. The process, methods and practices, as 
well as the workflow used to implement and enact them, 
should support freedom in the order of activities and the 
implementation of practices and strategies. In the modern 
world, stakeholders come from different organisations, 
forming distributed teams that work with the help of 
communications technology. In distributed teams, people 
work as dynamically and spontaneously assembled groups 
in a collaborative mode [7]. However, the developer’s 
activity is still guided by objectives, work requirements, 
constraints and resources, which form the fundamental 
constraints on workers’ behaviour [30]. Software design is 
never a fully rational process [31][32] as: 
 
People who commission software system do not 
know exactly what they want and frequently are 
unable to elaborate what they want. 
 
Even if the real need is known, further information 
needs surface as development moves towards 
implementation. 
 
Most humans cannot comprehend all information, 
even if all information is available. 
 
Only the most trivial projects are not subject to 
external changes. 
 
Human errors can only be avoided by excluding 
humans in the development. 
 
Preconceived ideas often influence the design 
process 
in 
ways 
that 
are not necessarily 
appropriate. 
 
There may be a reuse of software developed by 
others or from other projects that is not necessary 
ideal. 
 
For the SIS development, gradual expansion, refinement 
and correction of the entire soft system model was a 
practical approach. The complexity and uncertainty in the 
beginning required that the problem first be structured and 
the data refined to validate it. The ability to modify any part 
at any given time was seen as an important aspect of the 
method. Since the information was not complete in the 
beginning (or it could not be properly comprehended), 
validation from multiple viewpoints was also essential. 
The participants saw visualisation as an essential feature. 
They frequently talked about the same system but tried to 
explain the differences they perceived. They lacked either 
the words or expressions to describe this effectively for 
other stakeholders. However, when each viewpoint was 
modelled and the entire soft system was visible in a single 
model, the differences were communicated to each 
stakeholder more easily. 
VI. 
THREATS TO VALIDITY AND LIMITATIONS 
The reliability of the data and results was ensured via a 
rigorous research protocol with peer reviews by researchers 
and company representatives. The action research cycles 
were described and followed throughout the research. The 
modelling sessions were recorded and transcribed by the 
researchers.  
This study is limited only to the telecommunication 
domain. Furthermore, only one company was involved in 
this research, limiting the generalisability of the results. 
However, the study uses a well-established problem 
structuring method that has been used in multiple domains. 
In order to make definitive conclusions, more domains and 
companies should be involved in future research. 
The way the action research was implemented in this 
study also introduces a danger of positive bias within 
researchers and company participants. Due to the constant 
communication 
and 
interventions 
in 
the 
company, 
participants could be positively biased, producing only 
positive results. This issue was addressed by having 
multiple different viewpoints presented in the meetings. In 
addition, agreement over clear roles and rigorous research 
methods helped participants remain observers. 
VII. CONCLUSIONS 
In this paper, action research was conducted in a 
telecommunication domain company, aiming to create a 
stakeholder analysis for SIS development. Using the SSM 
as a starting template, the result was a Soft System 
Stakeholder Analysis Methodology (S3AM).  
The main contribution of this paper is that it shows the 
importance of systematic analysis of stakeholder viewpoints 
from a soft system perspective. Furthermore, it raises the 
importance of method usability, a factor that cannot be 
ignored in SIS development as it directly affects data 
collection, quality and analysis. From an academic 
perspective, this study provides industry insight in terms of 
stakeholder analysis and utilisation in an SIS environment. 
It demonstrated the importance of systematic problem 
structuring and model creation in stakeholder analysis. 
Finally, the results present a systematic and practical 
approach for stakeholder analysis in an SIS development 
environment. 
129
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

Future research should examine the use of S3M in 
domains other than telecommunication to verify and 
validate the methodology and its generalisability. In 
addition, more research is needed concerning 
the 
development of the modelling language.  
ACKNOWLEDGMENT 
The authors would like to thank the Digile N4S project 
and TEKES for providing support and funding for the 
research. 
REFERENCES 
[1] M. Broy, “The ‘grand challenge’ in informatics: Engineering 
software-intensive systems,” Computer, vol. 39, no.10, 2006, 
pp. 72–80. 
[2] Recommended Practice for Architectural Description of 
Software-intensive 
Systems, 
IEEE-Std-1471-2000. 
New 
York, USA, October 2000. 
[3] H. Giese and S. Henkler, “A survey of approaches for the 
visual model-driven development of next generation software-
intensive systems,” Journal of Visual Languages and 
Computing, vol. 17, December 2006, pp. 528–550. 
[4] P. Robillard, “The role of knowledge in software 
development,” Communications of the ACM, vol. 42, num. 1, 
1999, pp. 87–92. 
[5] F. O. Bjørnson and T. Dingsøyr, “Knowledge management in 
software engineering: A systematic review of studied 
concepts, findings and research methods used,” Information 
and Software Technology, vol. 50, 2008, pp. 1055–1068. 
[6] S. Buckingham Shum, “Negotiating the Construction of 
Organizational Memories,” in U. Borghoff and R. Parechi, 
Eds. Information Technology for Knowledge Management, 
Berlin, Germany: Springer Verlag, 1998, pp. 55–78. 
[7] W. Prinz, H. Loh, M. Pallot, H. Schaffers, A. Skarmeta, and 
S. 
Decker, 
“ECOSPACE 
– 
Towards 
an 
Integrated 
Collaboration Space for Eprofessionals,” in International 
Conference on Collaborative Computing: Networking, 
Applications and Worksharing, 2006, pp. 39–45. 
[8] J. Rosenhead and J. Mingers, J, Rational Analysis for a 
Problematic World Revisited. Chichester: Wiley, 2001. 
[9] G. Kotonya and I. Sommerville, Requirements engineering: 
Processes and Techniques. Chichester: Wiley, 1998. 
[10] I. Sommerville, Software Engineering, 7th ed. Harlow: 
Pearson Education Limited, 2004. 
[11] P. Robillard, P, “The role of knowledge in software 
development,” Communications of the ACM, vol. 42, no. 1, 
1999, pp. 87–92. 
[12] F. O. Bjørnson and T. Dingsøyr, “Knowledge management in 
software engineering: A systematic review of studied 
concepts, findings and research methods used,” Information 
and Software Technology, vol. 50, 2008, pp. 1055–1068. 
[13] L. J. Bannon and K. Schmidt, “CSCW: Four Characters in 
Search of a Context,” Proceedings of the First European 
Conference on Computer Supported Cooperative Work 
(ECSCW 89), Gatwick, London, 13–15 September 1989, pp. 
358–372.  
[14] J. McKernan, Curriculum Action Research: A Handbook of 
Methods for the Reflective Practitioner, 2nd ed. London: 
Kogan Page, 1996. 
[15] R. E. Freeman, Strategic Management: A Stakeholder 
Approach. Boston: Pitman, 1984. 
[16] R. E. Freeman, J. S. Harrison, and A. C. Wicks, Managing for 
Stakeholders: Survival, Reputation, and Success. Yale 
University Press, 2008. 
[17] A. P. Friedman and S. Miles, Stakeholders, Theory and 
Practice. Oxford: Oxford University Press, 2006.  
[18] L. Ballejos and J. Montagna, 2008, “Method for stakeholder 
identification 
in 
interorganizational 
environments,” 
Requirements Engineering, vol. 13, no. 4, pp. 281–297. 
[19] A. D. Davis, Just Enough Requirements Management: Where 
Software Development Meets Marketing. New York: Dorset 
House Publishing, 2005. 
[20] I. Alexander and R. Stevens, Writing Better Requirements. 
Reading: Addison Wesley, 2002. 
[21] B. Boehm, B. Bose, E. Horowitz, and M. J. Lee, “Software 
Requirements Negotiation and Renegotiation Aids: A Theory-
based Spiral Approach,” Proceedings of the 17th International 
Conference on Software Engineering, 1995, pp. 243–253. 
[22] J. McManus, 2004, “A stakeholder perspective within 
software engineering projects,” Engineering Management 
Conference, vol. 2, pp. 880–884. IEEE. 
[23] S. L. Lim, D. Quercia, and A. Finkelstein, “StakeNet: Using 
Social Networks to Analyse the Stakeholders of Large-scale 
Software Projects,” Proceedings of the 32nd ACM/IEEE 
International Conference on Software Engineering (ICSE 10), 
2010, pp. 295–304. 
[24] R. McTaggart, “Guiding principles for participatory action 
research," in Participatory Action Research: International 
Contexts and Consequences, R. McTaggart, Ed. Albany: State 
University of New York Press, 1997, pp. 25–43. 
[25] R. Baskerville and A. T. Wood-Harper, “A critical 
perspective on action research as a method for information 
systems research,” Journal of Information Technology, vol. 
11, no. 3, 1996, pp. 235–246. 
[26] R. Rapoport, “Three dilemmas in action research,” Human 
Relations, vol. 23, no. 6, 1970, pp. 499–513. 
[27] G. Sussman and R. Evered, “An assessment of the scientific 
merits of action research,” Administrative Science Quarterly, 
vol. 23, 1978, pp. 582–603. 
[28] P. B. Checkland, Systems Thinking, Systems Practice, John 
Wiley & Sons Ltd., 1981. 
[29] J. Hyysalo, M. Kelanti, J. Lehto, P. Kuvaja, and M. Oivo, 
Software Development as a Decision-Oriented Process. 
Switzerland: Springer International Publishing, 2004. 
[30] J. Rasmussen, A. M. Pejtersen, and K. Schmidt, Taxonomy 
for Cognitive Work Analysis. Roskilde, Denmark: Risø 
National Laboratory, Risø report M-2871, 1990. 
[31] D. L. Parnas and P. C. Clements, “A rational design process: 
How and why to fake It,” IEEE Transactions on Software 
Engineering, vol. SE-12, no. 2, February 1986, pp. 251–257. 
[32] D. 
L. 
Parnas, 
“Document 
based 
rational 
software 
development, knowledge-based systems, vol. 22, Elsevier, 
2009, pp. 132–141. 
[33] I. Alexander and S. Robertson, “Understanding project 
sociology by modeling stakeholders,” IEEE Software, vol. 21, 
no. 1, 2004, pp. 23–27. 
130
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-438-1
ICSEA 2015 : The Tenth International Conference on Software Engineering Advances

