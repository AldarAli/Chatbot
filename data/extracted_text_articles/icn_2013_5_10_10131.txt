An Intelligent Approach to an Efficient Internet Network Management 
Antonio Martín 
Department of Electronic Technology 
Seville University 
Seville, Spain 
toni@us.es 
Carlos Leon, Alejandro López 
Escuela Superior de Ingeniería Informática 
Seville University 
Seville, Spain 
cleon@us.es, alexlopez@us.es
 
Abstract— Telecommunications networks are continuously 
growing in scale and complexity, and the amount of 
information and services provided more day to day. The 
management of the resulting networks gets additional 
important and time-critical. More advanced tools are needed 
to support this activity. In this paper we describe the design 
and implementation of a management platform using Artificial 
Intelligent reasoning technique. This paper explores intelligent 
agent architecture to make the argument for an intelligent 
solution as opposed to traditional methods. We propose a new 
paradigm where the intelligent network management is 
integrated into the conceptual repository of management 
information. This study focuses on an intelligent framework 
and a language for formalizing knowledge management 
descriptions and combining them with existing Internet 
management model. Based on the present proposal and 
Internet management model, we describe the design and 
implementation of an integrated intelligent management 
platform named ALATUS. We have tested our system on real 
data to the fault diagnostic in a university wireless network. 
The results of a validation show a significant improvement 
with respect to the number of rules and the error rate in other 
traditional systems. 
Keywords-SNMP; MIB; IAs; Management Network. 
I. 
 INTRODUCTION  
Due to the increasing complexity and heterogeneity of 
networks and services, many efforts have been made to 
develop intelligent techniques for management. Current 
communications networks support a large demand of 
services, 
which 
the 
traditional 
model 
of 
network 
management 
is 
inadequate. 
Classic 
management 
architectures are not well suited for low-bandwidth or 
disconnected operation. Traditional management frameworks 
such us OSI (Open System Interconnection) and SNMP 
(Simple Network Management Protocol) are capital 
approaches where a manager uses distributed agents to 
collect management information. But these strategies have 
drawbacks, in particular due to the lack of extensibility and 
scalability on very large networks. This restriction is coming 
from the inability of a centralized manager to handle huge 
amounts of management information across geographically 
distributed sites, which is also expensive in resources. A key 
technology 
for 
operating 
large 
heterogeneous 
data 
transmission is network intelligent management [1]. 
Several authors have addressed these problems along the 
past years [2][3][4][5][6] resulting in ad-hoc and partial 
solutions typically based on management distribution and 
intelligent delegation. There is no full scale of integration of 
IA 
(Intelligent 
Agent) 
applied 
to 
SNMP 
network 
management architectures. The main contribution of this 
paper lies in the proposal for a framework that integrates 
management object specifications and the knowledge of 
expert systems. This study draws on the theory, 
experimentation and findings of the SNMP management 
model and the integration management knowledge to obtain 
an efficient network control. The goals are to improve insight 
and understanding of network management, and present an 
alternative distributed management network model. This 
architecture is based on the idea that a main manager can 
delegate the control to several IAs agents thus improving 
scalability and efficiency of a management network through 
intelligence distribution and intelligent management actions. 
In order to develop it a language to formalize the knowledge 
base description in Internet management model is discussed. 
The scope of this work covers why IAs are very well 
suited to meet the network management requirements and 
how an intelligent-agent-based system can be applied to 
achieve intelligent network management. The study 
addresses problems that traditional network management 
poses and makes the argument for the solution based on IAs 
agents to these problem areas. Section II examines Internet 
management network model, including concepts and major 
approaches. Section III presents capabilities required for an 
efficient network management and current shortcomings of 
SNMP model. Section IV gives the formulation of proposal 
and a schema of the various stages in the system 
development. Section V presents a conceptual, high-level 
intelligent agent named ALATUS and summarizes the 
performance of the research. Finally we outline the 
conclusion and future works. 
II. 
INTERNET MANAGEMENT NETWORK  OVERVIEW 
According to ISO (International Organization for 
Standardization), the network management model defines a 
conceptual architecture for managing all communication 
entities within a network. There are several organizations 
which have developed services, protocols and architectures 
for network management. The most important organizations 
are: ISO, which was the first one and started as part of its 
OSI 
program 
[7], 
Telecommunication 
Management 
Network 
(TMN), 
developed 
by 
International 
Telecommunication Union (ITU), and Internet Model by the 
Internet Engineering Task Force (IEFT), figure 1. 
 
101
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

 
Figure 1.  Management Models. 
A main concept in management networks is the managed 
object, which is an abstract view of a logical or physical 
resource which must be controlled. The managed objects 
provide necessary operations for the running, monitoring 
and control of the telecommunications network. These 
operations are realized through the use the Common 
Management Information Protocol (CMIP) to OSI model 
and SNMP in the Internet model. SNMP is one of the 
widely accepted protocols to manage and monitor network 
elements and operates in the application layer in Internet 
protocol suite, commonly known as TCP/IP (Transmission 
Control Protocol/Internet Protocol) suite [8].  
The SNMP framework is based on the principle of 
minimally simple agents and complex managers. The 
managed object provides an abstract view of a real resource, 
and the agent provides a management view of their 
underlying logical and physical resources, such as transport 
connections to the managing applications. For a right 
running, the management processes involved will take on 
one of two possible roles, figure 2. 
 
Figure 2.  Manafe/Agent roles. 
In SNMP uses, one manager has the task of monitoring 
or managing a group of hosts on a computer network, so it is 
responsible for network management processes. An agent 
performs the management operations on the managed objects 
according to the request of the manager, and reports 
notifications that managed objects produce. 
A. Information Management Repository 
SNMP objects represent single, atomic data elements that 
may be read or written in order to effect the operation of the 
associated resource. This set of managed object classes and 
instances under the control of an agent is known as 
Management Information Base (MIB), an abstraction of 
network resources, properties and states for the purpose of 
management. SNMP information modeling principles are 
collectively referred to as the Structure of Management 
Information (SMI) and are specified in (RFC1155) for 
SNMPv1 and in (RFC1902) for SNMPv2. The MIB is 
written in Abstract Syntax Notation 1 (ASN.1), a standard 
syntax for data types and values, which is maintained by ISO 
[9]. ASN.1 is a language for describing structured 
information, which is widely used in the specification of 
communication protocols. ASN.1 describes the relevant 
information and its structure at a high level and need not be 
unduly concerned with how it is represented while in transit. 
The manager and agent use the MIB with a relatively 
small set of commands to exchange information. When an 
SNMP device sends a trap, each data object in the message is 
identified with a number string called an Object Identifier 
(OID). A SNMP manager knows the value of an 
object/characteristic, such as the state of an alarm point, the 
system name, or the element uptime. All these information 
will assemble in a GET packet that includes the OID for each 
object/characteristic of interest.  
The MIB is organized in a tree structure with individual 
variables, such as point status or description, being 
represented like leaves on the branches. The MIB is an 
ASCII text file that describes SNMP network elements as a 
list of data objects. It is like a dictionary of the SNMP 
language where every object, related to an SNMP message, 
must be listed in the MIB. The first step towards 
development of an agent is to define its MIB. The steps 
involved in developing the MIB file are [10]: 
- Data identification: To identify data or objects which 
need to be managed using IA methods, laying them out in 
the form of scalar or tabular objects. In that way, all 
knowledge associated to a specific managed resource is 
categorized. 
- Data definition: Construct ASN.1 MIB definitions for 
the IA. In this study, we define different ASN.1 types of 
knowledge related to the network resources. For this 
purpose, we have used an editor tool. Editors can help in 
MIB design hiding the unimportant details of the MIB 
syntax rules, clauses etc.  
In our work a framework for the inclusion of formal 
Knowledge 
Management 
descriptions 
into 
MIB 
specifications has been proposed. An object-oriented logic 
programming language is presented, which can be used in 
conjunction with the framework to specify knowledge 
management of a managed object. 
III. 
INTELLIGENT MANAGEMENT AGENTS  
IA technology has the capability to distribute intelligence 
throughout network and perform intelligent management 
functions dynamically. This provides efficiency and 
flexibility, and cuts down on bandwidth constriction and 
overloading on a single central control. An important goal is 
convergence on solutions despite of incomplete or 
inconsistent knowledge or data. IAs can seek to cooperate to 
solve problems using task and domain-level protocols 
actively and dynamically. IAs learn the normal behaviour of 
each measurement variable and add intelligent knowledge to 
the management network resources. IA is based on three 
essential 
properties: 
autonomy 
or 
self-government 
independence; communication, which is the ability to speak 
with a peer; and cooperation in order to create a 
102
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

collaborative environment to work together.  
So as to improve the quality of the IA description and the 
resulting implementations, a formal method for specifying 
knowledge is desirable. Due to IA is based on management 
knowledge, formal knowledge descriptions helps to make 
easier for an engineer to understand the complete 
information model and to derive a valid, consistent and 
compatible implementation. In the next section knowledge 
management using ASN.1 notation is modelled. It defines 
the formal specification of managed object types and the 
associated access mechanisms [11].  
An IA is essentially a self-contained software program 
module that is programmed to carry out specific actions on 
behalf of a human user or another software entity in a certain 
software environment. Every SNMP IA maintains an 
information database which describes the managed device 
parameters and the knowledge base where all relevant 
information used with management purposes (data, rules, 
cases, and relationships) is stored. IA can perform actions 
such as to collect management information about its local 
environment, store and retrieve management information as 
it is defined in the MIB, execute specified tasks or 
collaborate with other agents. These actions are conducted in 
an autonomous way that requires little or no human 
intervention, figure 3. 
. 
Figure 3.  SNMP Intelligent Agents. 
In our proposal IAs are the administrative systems and 
have the task of monitoring or managing a group of devices 
on a network. Each IA executes, at all times, a software 
component called an agent which reports management 
actions via SNMP to the managed objects. This component 
software is supplied with the right MIB file. The SNMP IA 
can correctly interpret alarm data from any device that 
supports SNMP and executes the corresponding management 
actions. 
IV. 
INTERNET MANAGEMENT MODEL EXTENSION  
Although SNMP SMI identifies how resources are 
represented and named within the MIB, there is no 
mechanism provided by SNMP to enable agents to operate 
with management knowledge. In this section, we face the 
problem of specifying knowledge transfer and how to 
describe this knowledge in the abstract syntax notation in 
order to show rules to create the MIB, to improve insight, 
and understanding of network management. The structure of 
SMI, an SNMP standard, defines the structure of the MIB 
information and the allowable data types. The philosophy 
behind SMI is to encourage simplicity and extensibility 
within the MIB. When we are planning monitoring SNMP 
resources, it is necessary to be able to read MIBs so that we 
can get a realistic idea of what management capabilities we 
have available. Just looking at the physical components of a 
device will not tell us what kind of events and knowledge 
we can get from it. So the MIB is the guide to the real 
capabilities of an SNMP device. It is usual that a 
manufacturer adds a new component or functionality to a 
device without describe it in the MIB. In fact, nowadays, a 
lot of devices have sketchy MIBs that do not fully support 
all their functions. However, the object description in the 
MIB is a capital point in order to combine all their 
properties and management actions.  
Whit the purpose of achieving an SNMP IA the 
knowledge base and the MIB have been joined, figure 4.    
 
Figure 4.  Intelligent Agent Architecture. 
SNMP SMI defines a specification for describe the 
properties of new object types, while ASN.1 is used to 
specify the object syntaxes and the tabular structure. ASN.1 
is specifically designed for communication between 
dissimilar agents, thus it is the same for every system and it 
can be used for describing almost anything. In this work we 
have used ASN.1 notation to extend the SNMP model by 
integrating the knowledge base in the MIB. Once a term is 
defined in ASN.1, it can be used as a building block to make 
other terms. ASN.1 defines each term as a sequence of 
components, some of which may be sequences themselves. 
ASN.1 provides basic types like boolean, null, integer, real, 
etc., and type constructors that can be used to define new 
types: CHOICE, SEQUENCE, SET, and SEQUENCE OF 
and SET OF. We take advantage of ASN.1 flexibility and 
extensibility to apply a top-down approach to our problem.  
First we consider the problem as a whole to describe the 
most general data types and second we concentrate on more 
specific types which are referenced in general data types, in 
order to show a set of rules, which allows intelligent actions. 
There are different knowledge representation techniques to 
structure knowledge. In our study, we are going to represent 
the knowledge management in production rules or simply 
103
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

rules. Rules specify actions for the inference engine with the 
purpose of taking them when the premise or conditions in 
the rule are true. Rules are expressed as “IF-THEN” 
statements, which are relatively simple, very powerful and a 
natural way to represent expert knowledge [12]. A major 
feature of a rule-based system is its modularity and 
modifiability that allow an incremental improvement and 
fine tuning of the system with virtually no degradation of 
performance. The next definition shows the new elements of 
the knowledge type using ASN.1 notation.   
Know_Rule ::= SEQUENCE { 
priority     INTEGER, 
condition ConditionType, 
action       ActionType    } 
The priority of the element is defined using the primitive 
element “integer”. However condition and action elements 
are defined as new types named “ConditionType” and 
“ActionType” respectively. We can do this because these 
types are defined in another sequence like so: 
ConditionType ::= SEQUENCE { 
variable  OCTET STRING, 
operator OperatorType, 
value       INTEGER              } 
OpertatorType ::=SET { equal                          [1] INTEGER, 
not equal                    [2] INTEGER, 
less than                    [3] INTEGER, 
   …             } 
When a type is defined, a name to reference it in another 
type assignment should be given to it.  
ActionsType ::= SEQUENCE      { 
      executemode          Modetype,  
command  OCTET STRING, 
arguments OCTET STRING   } 
Modetype ::=SET { user          [1] INTEGER, 
privileged  [2] INTEGER, 
global        [3] INTEGER, 
interface    [4] INTEGER     } 
In ASN.1, the concept of information object class is used 
to represent formally properties uncovered by the notions of 
type and value in particular [13]. An information object 
class is a group of things sharing common characteristics. 
We have used object class to interpret the semantic links 
between types and values in a management action 
definition.  
ACTION ::= CLASS { 
&code INTEGER UNIQUE, 
&Argument-type, 
&Return-result-type } 
The class has three parts: an identification code to 
specify the function which must be executed by the remote 
application: an argument with a value that conforms to the 
ASN.1 type of the argument; and the IA, which receives a 
value that conforms to the result type if the function 
execution was successful, otherwise one specified error 
message. The block WITH SYNTAX defines a more user-
friendly syntax to denote the objects of this class.  
WITH SYNTAX {ACTION CODE &code 
    TAKES AN ARGUMENT OF TYPE &Argument-type 
    AND RETURNS A VALUE OF TYPE &Return-result-type} 
The following definition is an example of expert rules 
integration in the SNMP IA proposed standard. It defines an 
IA named accessPoint corresponding to a real device in the 
network. AccessPoint IA contains all the specifications and 
knowledge corresponding to the device. These units offer 
the convenience of multiple functions such as establishing 
radio channels, controlling signals, monitoring stations, 
monitoring alarm conditions, controlling logic to activate 
operations in response to commands received over said 
communications network, and so on.  
accessPoint IA-OBTECT-TYPE                          -- Object 
    SYNTAX  SEQUENCE OF accessPointEntry 
    ACCESS  not-accessible 
    STATUS  currrent 
    DESCRIPTION  "Access point Slot Table" 
::= { accessPointsSatus 2} 
accessPointEntry IA-OBJECT-TYPE               -- Instance 
    SYNTAX  AccessPointEntry,  
    ACCESS  not-accessible 
    STATUS  currrent 
    DESCRIPTION "An entry in accessPoint" 
    INDEX {accessPointNbr, … } 
::= { accessPoint 1 } 
AccessPointEntry :=SEQUENCE{  -- SEQUENCE statement 
 accessPointNbr                   Unsigned32, -- index 1 
 accessPointStatus                INTEGER, 
  … 
accessPointLinkDown   LinkDown_Rule   -- index 4} 
The expert rule used in the SNMP IA specification is 
accessPoinLinkDown. This expert rule is used to capture 
and detect anomalies or defects of operations produced in 
the access point device and suggest the necessary measures 
for solving the problem. When a mistake occurs, the rule 
goes to the agenda system. This rule is fired when the 
conditions are right: “The physical link on one of the switch 
(controller) 
ports 
is 
down”. 
The 
rule 
provides 
recommendations on how to solve the failures.  
Link_Down_Action ACTION ::= CLASS {CODE 12, 
     ARGUMENT  Port ''{0}'' is down on Switch ''{1}." 
 RETURN “Troubleshoot physical network connectivity to the 
affected port”} 
Using this methodology, we can define all the knowledge 
management in a specific domain network and add these 
new types in a MB module. The module will constitute the 
complete knowledge specification of the management 
network. 
104
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

V. DEVELOPMENT ENVIRONMENT 
Whit the purpose of improving insight and understanding 
of network management, we have developed a system named 
ALATUS based on SNMP IAs. The following system 
exemplifies how network topology information, resources 
properties and management information may be used to 
develop dynamically an intelligent diagnostic when errors 
occur.  
We have studied an example of alarm detection and 
incident resolution concerning a private wireless network of 
the University of Seville. It provides wireless access using 
this technology in all of its departments where ReInUS 
(Radio network of University of Seville) facilitates access to 
connection. ReInUS allows the University community to 
connect to its network using WiFi technology: libraries, 
classrooms, departments, leisure rooms, open spaces, etc. 
Today, the University of Seville has 1200 wireless access 
points distributed in five campus. Every access point 
provides different capabilities to maximize wireless LAN 
performance, security, reliability and scalability.  
ALATUS system works together with the access points 
providing real-time monitoring, management functions and 
supporting simultaneous data forwarding. The intelligent 
alarm management system will not just report that there is a 
problem, but the location of the problem, provide 
instructions for corrective action and correct the situation 
automatically. Fault identification involves testing the 
hypothetical faulty components and repair by taking 
intelligent actions. Advanced features just described can 
make the difference between a minor incident and a higher 
downtime. In ALATUS system, an IA agent works 
collecting information from the resources, in order to detect 
the network anomalies that typically precede a fault. It 
creates knowledge, about the network node, stored in MIB, 
which saves the management knowledge and a set of 
variables related to that node in particular, figure 5. 
 
Figure 5.  Wireless Network Architecture   
The runtime system is defined as an SNMP application, 
according to the SNMPv3 architecture. The system has two 
major components [14]:  
-  Graphic Unser Interface (GUI): In our system, we have 
implemented a GUI written in Java running on a server who 
controls the whole embedded system. It is a set of I/O 
handling routines for managing the system and allows the 
management of the system by the user. To access the 
interface only requires a Web browser such as Explorer o 
Mozilla. The GUI controls the inference engine and 
manages system input and output.  
- Inference engine. The distributed IA may be 
decomposed in two blocks: the SNMP entity, which 
implements the MIB, and the runtime system, capable of 
executing the scripts. Inference engine sees the runtime 
system as a set of distributed IAs. IAs emphasize autonomy 
and learning with the purpose of performing management 
tasks in the managed resources. In order to distribute 
intelligence in the network, ALATUS has been developed 
according to rule-based expert systems technique. This 
knowledge representation technique has played an important 
role in modern intelligent systems and their applications in 
strategic goal like setting, planning, design, scheduling, 
fault monitoring, diagnosis and so on. Conventional rule-
based expert systems use human expert knowledge to solve 
real-world problems that normally would require human 
intelligence [15]. The management operations are modeled 
as scripts written in an intelligent language like CLIPS (C 
Language Integrated Production System) and associated 
with the MIB variables of a specific resource. CLIPS is a 
public domain software tool which provides a complete 
environment to build rules and/or objects based on expert 
systems. 
A. System Validation 
Validation constitutes an inherent part of the knowledge 
based expert system development and is intrinsically linked 
to the development cycle. ALATUS has been validated with 
respect to the following aspects: system validation using test 
cases, validation on site and validation against human 
experts. To verify the system, we have feed it with arbitrary 
amount of real alarms at random for more than one year. We 
have analyzed the evolution of the incidents from April 
2011 to July 2012. We can appreciate a negative trend in the 
number of incidents resolved and how ALATUS system 
improves this negative trend with its implementation since 
October 2011. The result of this analysis is included on 
Table 1.  
TABLE I.  
PROTOTYPE TESTING ANAKYSIS 
 
Apr.11 Jul.11 Oct.11 Jan.12 Apr.12
Jul.12 
Initial Events  
458 
543 
745 
879 
907 
947 
Resolv. Incidents 
358 
426 
558 
681 
700 
786 
Warning to Oper. 
311 
346 
498 
305 
201 
101 
Overall, figure 6 reflects an increase of total events, 
which causes a higher number of incidents in the university 
105
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

wireless network. But as time progresses, we also observe 
an increase of solve alarms and less alarms to operator.   
 
Figure 6.  Prototype results  
From these result, it can be said that ALATUS system 
reduces the need for additional dedicated monitoring 
software, thereby the cost and complexity of WLAN I 
reduced. This solution has produced excellent results which, 
after extensive field-testing, has proved to be able to filter 
95% of produced alarms with a precision of 93% in 
locating,  with about a 96% rate of success. 
VI. 
CONCLUSION AND FUTURE WORKS 
In this study, we have proposed that IA technologies are a 
future leading solution to face the current management 
network problems. We have seen that actual management 
systems are not able to solve questions explained in the 
initial parts of this paper. Until now, the managed objects 
are not able to use the information that the base of 
knowledge collects from management operations. The 
necessary requirements of area analysed must undertake 
those aspects. 
This paper introduces an original contribution to include 
management knowledge coming from the network devices 
themselves into the specifications of the MIB. To formalize 
the main proposal of this work, a language to describe the 
knowledge base descriptions in Internet management 
network has been introduced. A number of questions raised 
from the design of a language have been discussed, and a 
general framework for the inclusion of formal knowledge 
management in SMI has also been introduced. 
This research has showed an useful and interesting 
modular approach in the development of a knowledge based 
integrated expert system which can be quite powerful in 
tackling the huge and wide subject on diagnosis of common 
problems in management network. An integrated knowledge 
process is developed to guarantee the whole engineering 
procedure 
which 
uses 
expert 
rules 
as 
knowledge 
representation technique. This demonstrated that ALATUS 
is capable to specify the knowledge of a reasonably sized 
information model.  
In our work, where knowledge is brought onto networks 
based on Internet model, can be reviewed like a first step 
toward automated management by using intelligent agents 
on SNMP. One guideline of our future work is to improve 
the agent’s performance. We are also studying deeply how 
to incorporate the previous knowledge available at a 
network node. In that sense, we plan to get further 
investigating the feasibility and limitations of other 
knowledge representation techniques such as semantic 
networks, Bayesian networks and ontology engineering. In 
addition to the fault detection functional area, currently we 
are also studying possibilities of expanding the scope of our 
successful tool to other functional areas such as accounting, 
configuration, performance and security management. 
REFERENCES 
[1] 
N. Agoulmine, “Autonomic network management principles: from 
concepts to applications”, Burlington, Academic Press/Elsevier, 2011 
[2] 
Z. Wang, Y. Wang & G. Shao, “Research and Design of Network 
Servers Monitoring System Based on SNMP”, First International 
Workshop on Education Technology and Computer Science, 2009 
[3] 
C. Zhu, L. Shu, T. Hara, L. Wang, S. Nishio & L.T. Yang, “A survey 
on communication and data management issues in mobile sensor 
networks”,  Wireless Communications and Mobile Computing, Wirel. 
Commun. Mob. Comput., John Wiley & Sons, Ltd, 2011 
[4] 
A. Martín, C. León, J. Luque & I. Monedero, “A framework for 
development of integrated intelligent knowledge for management of 
telecommunication networks”, Expert Systems with Applications, 
Volume 39, Issue 10, Pages 9264-9274, 2012.  
[5] 
S. Yang, Y. Chang, “An active and intelligent network management 
system with ontology-based and multi-agent techniques”, Expert 
Systems with Applications, Volume 38, Issue 8, 2011. 
[6] 
H. Xu & Debao Xiao, “A Common Ontology-Based Intelligent 
Configuration Management Model for IP Network Devices”, First 
International Conference on Innovative Computing, Information and 
Control - Volume I (ICICIC'06), 2006 
[7] 
J. Ding, “Advances in network management”, Boca Raton: CRC 
Press, 2010 
[8] 
D.  Nikolaou & T. Wolf, “Architecture of network systems”, 
Burlington, Morgan Kaufmann, 2011 
[9] 
J. Larmouth, “ASN.1 complete,” San Francisco, Cal. Morgan 
Kaufmann, 2000 
[10] L. Walsh, “SNMP MIB Handbook: essential guide to MIB 
development, use and diagnosis” Stanwood, WA : Wyndham, 2008 
[11] A. Pedai, I Astrov, "Multi-Rate Expert Systems in Supply Chain 
Simulation 
for 
Telecommunication 
Industry," 
Wireless 
Communications, Networking and Mobile Computing, 2008. 
WiCOM '08. 4th International Conference on , 2008 
[12] J. Liebowitz, “Knowledge management handbook, collaboration and 
social networking” Boca Raton, Fla. : CRC Press, 2012 
[13] S. D. J. McArthur, S. M. Strachan, and G. Jahn, “The design of a 
multiagent transformer condition monitoring system,” IEEE Trans. 
Power Syst., vol. 19, no. 4, pp. 1845–1852, Nov. 2004. 
[14] S. Sahin, M.R. Tolun, Y. Baykal, "Expert System for Access 
Telecommunication Networks," Computer Science and Information 
Engineering, 2009 WRI World Congress on , vol.4, no., 2009 
[15] A. Lezhenko, S. Kuznetsov, I Kuznetsov, "Techniques and Methods 
for "Smart" Processing of Information Flows in Applications of 
Information and Telecommunication Technologies: The Use of 
Expert Systems for Data Mining," Cyberworlds (CW), 2011 
International Conference on , vol., no., pp.168-172, 4-6 Oct. 2011 
 
106
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-245-5
ICN 2013 : The Twelfth International Conference on Networks

