Self-adaptive tuning of dynamic changing problem solving: a ﬁrst step to endogenous
control in Multi-Agents Based Problem Solvers.
Ga¨el Clair, Fr´ed´eric Armetta, and Salima Hassas
Laboratoire GAMA,
Universit´e Lyon 1
Lyon, FRANCE
Email: (gclair ; farmetta ; hassas) @univ-lyon1.fr
Abstract—In this paper, we propose a new model, EC4MAS,
for endogenous control in self-organizing system for problem
solving. We ﬁrst present the characteristics of exogenous and
endogenous control and draw the differences between them.
Problem solving methods are often faced with the exploita-
tion/exploration dilemma. We propose in this work an approach
that tries to ﬁnd a good coupling between structural/topological
characteristics of a problem and the local associated behaviors
that compose the solving method. More precisely we organize
the multi-agents based solver into a social organization that
represents the organization of the different local behaviors and
a spatial organization that represents the different characteris-
tics of the problem. The objective of the system is thus to ﬁnd a
good coupling between these 2 organizations. We illustrate our
approach on a graph coloring problem, show that our model
can solve the exploitation/exploration dilemma in this case and
how it can provide a mean to build a more robust and efﬁcient
tuning of the solving process on dynamic changing problems.
Keywords-multi-agent system; self-organization; endogenous
control
I. INTRODUCTION
The design of self-organized multi-agent systems (MAS)
raises the issues of developing a decentralized control and
the ﬁtness of the global (eventually emergent) behavior
produced through multiple interactions of various local be-
haviors. As in these ascendent approaches, the understand-
ing/description of the global behavior is not reducible to the
understanding/description of its composing local part, it is
also difﬁcult to imagine an easy way to control the global
system, by controlling its local components. Much work
have been achieved to address this issue, either during design
or run time [1][2][3]. They are often designer’s knowledge or
heuristics based, which makes them often problem speciﬁc
and hardly adaptable to complex dynamic problems.
In addition, complex problem solving is also subject to
the exploitation/exploration dilemma when searching the
solution space. When and how to explore is primordial to
obtain a good quality of the solving process. A badly tuned
exploration process can lead the system into local optima,
or can be the source of uncontrolled perturbations [4]. This
difﬁculty is increased in dynamic problems where permanent
changes of the solution space occur.
We propose in this paper a new model for endogenous
control in self-organizing multi-agents based complex prob-
lem solvers. Our model deals with the dynamic of the
solving process. More speciﬁcally, we propose a process
that dynamically couples the problem structural/topological
characteristics to the appropriate solving behavior. The
global solving behavior is achieved by a society of agents
on an environment that represents the problem to solve.
Each agent of the society achieves a speciﬁc local behavior,
on a speciﬁc situation of the environment representing a
structural characteristic of the problem to solve. The MAS
has thus to ﬁnd a social organization, a non random layout
of local behaviors, that best ﬁts a spatial organization, a
non random layout of local conﬁgurations, representing the
structural/topological problem characteristics. The endoge-
nous control is the mechanism that allows the dynamic
coupling of these two organizations, as a solution for the
problem solving. In this paper, we describe our model
based on this dynamic coupling and we show how it deals
with the exploitation/exploration dilemma and the associated
dynamic parameters tuning for a graph coloring problem.
Section II is a related work section about control in multi-
agents systems, distinguishing exogenous and endogenous
control and drawing the differences between them. Sec-
tion III describes the exploitation/exploration dilemma. The
proposed model is then deﬁned in Section IV. Section V
presents some experiments and their discussed results on a
graph coloring problem. Section VI concludes the presented
work and draws some perspectives.
II. RELATED WORKS: CONTROL IN SELF-ORGANIZED
SYSTEMS
In this section, we distinguish exogenous and endogenous
control. In the exogenous case, the control is supported by
mechanisms that are outside the system, whereas in the
endogenous case, control mechanisms are issued by the
inside of the system.
A. Exogenous Control
When the control system is based on external deﬁnitions,
like ﬁxed rules for example, it is qualiﬁed as exogenous
88
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

control. Exogenous control is mainly dependent on the
multi-agent system structural characteristics and is often
based on the designer or user’s knowledge. Using a clas-
siﬁcation given in [5], we describe in this section some
approaches for control in MAS : Design based approaches
and Calibration approaches. In Design based approaches, the
control is expressed through the process design, by deﬁning
the global behavior at macro level and operational rules
for its realization at micro level [1]. The relation between
macro and micro levels is fully addressed at design time
like in AALAADIN [2] or in ADELFE [3]. Calibration
based approaches work on reducing the size of the search
space, either by using knowledge about the problem to solve
[6] or dividing the search space when the parameters are
independents [7]. With design approaches the control is
relatively static in the sense that once deﬁned it is not easy
to make it evolve during computation. In dynamic control
approaches, the control is achieved through the guiding of
the system’s behavior at run time. The control system has
a target to achieve/to maintain, means of action on the
system and means of observation of the system. Two kind
of dynamic control approaches are distinguished: a priori
control and a posteriori control.
In a priori control, a set of possible agents’s actions
are predeﬁned and used to determine the most adapted
individual behavior, using tools like Markov Decision Pro-
cess (MDP) [8]. The relations between global patterns and
local behaviors are treated during the learning stage of the
MDPs. A global a posteriori control approach is presented
in [9]. The idea consists to deﬁne a system with a correct
behavior and then inﬂuence this behavior through external
control. This global state is captured as a pattern representing
the aggregation of all the states of the different agents.
If the form is not adequate, it is corrected by acting on
the agents local behaviors. The forms deﬁnition and their
evaluation are determined by preliminary simulations and
user’s knowledge. Assuming that the observed shape can be
reduced to the aggregation of agents’ states is too restrictive
because it ignores interactions and the system’s dynamics.
This morphocontrol is an a posteriori control because it is
applied during the system’s computation. Control actions are
not totally known at the beginning of system’s computation.
B. Endogenous Control
To go further through an endogenous control, the con-
trolling process should guide the agents behavior, but do
so in a comprehensive manner. The control system must be
built and evolved during the system computation to ensure
that it is always consistent with the current situation. An
endogenous control needs to be designed as an internal
process to the system to control, and in an unsupervised
manner. Three important concepts may provide building
blocks for a controlling system: learning, observation and
dynamics.
• Learning is an important step in a controlling process.
The system needs to ”understand” its past behavior
to know which selected actions have produced suc-
cess or failures. In endogenous control, the problem
structure is learned during computation without any
intrusion from outside the system. Learning is strongly
related to the systems dynamics including the different
conﬁgurations encountered. Unlike exogenous control,
these conﬁgurations are not created artiﬁcially, but
from real computations. Learning is more restricted but
is continuous and provides a greater diversity in the
situations addressed. To learn from their actions, agents
must have some means to evaluate their environment
and means to register the interests (good or bad) of
their past actions to update the control system.
• Observation is important as far as it could be used to
assess the current situation and then act accordingly.
When one looks at the overall behavior of the system,
one ﬁrst seeks to determine the situation in which the
system is but also indirectly determines the agents’
states. The overall conﬁguration, as we have already
stated, is not only dependent of agents local behaviors
but also of their interactions. Thus, the process that al-
lows to understand the dynamics that lead to the overall
conﬁguration of observation should not be centralized
and static. If the system must determine its state, it
does not has access to a global observation, unless there
is a centralization (or synchronization), which is not
acceptable in decentralized autonomous system. The
observation should be limited but should not be purely
local. It should provide a broader vision about agents
local behaviors and their organization.
• Lifelong learning implies a permanent dynamics in the
system of control and inﬂuence. Modifying the control
data inﬂuences also its actions. This development is a
form of permanent adaptation to control the situation.
This dynamics is an important element in the endoge-
nous control. Beside this internal dynamic, the external
dynamic has to be considered. The multi-agent system
is situated in a permanently evolving environment, so
the system is always submitted to perturbations and has
to adapt itself. This dynamic does not directly direct the
multi-agent system but it inﬂuences the control system.
The perturbations are captured and interpreted by the
control system, then it adapts itself to direct the agents’
reactions.
The three previous elements are strongly related to each
other. To learn from the computation it is necessary to be
able to observe the evolution of the system and to understand
its dynamic. In order to create an endogenous control, local
observation and evaluation means of the global state, means
to share self interpretations and means to update the control
system are the elements to study.
89
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

III. EXPLOITATION / EXPLORATION DILEMMA
To illustrate our view of an endogenous control in a
multi-agent system, we will use in the next sections, the
exploitation/exploration dilemma. Exploration aims to gather
as much information on the solution space. Exploitation
intensiﬁes the search around selected areas already encoun-
tered, based on information collected through exploration.
The exploitation/exploration problem can be divided into
two sub-problems, which are when to explore and how to
explore, which we discuss in this section.
The when to explore problem means that the system at
a given time has to determine whether it is more useful to
keep exploring the solution space to collect more details,
or to improve already encountered solutions that seem
promising. This problem can also be divided into two types,
directed and undirected decision. In undirected methods the
exploration is chosen randomly at any time of the search. In
directed methods, the decision to explore is triggered based
on previous knowledge of the problem. This type of methods
use recorded past experiences to direct the search. Directed
methods are typically used in reinforcement learning [10] to
ﬁnd an adapted exploring rate.
The how to explore problem determines the strategy to
use to explore when exploration had been selected. The
efﬁciency of a search is very dependent on the exploration
process because it introduces some perturbations in the
solving process. On the one hand these perturbations can
be very useful when the search is stuck in local minima, on
the other hand it can be very problematic when the process
is close to a solution. The jump due to the exploration has
to be adapted to the current search strategy and the solution
space. [4] shows the inﬂuence of the exploration strategy
comparing gentle and strong exploration strategies, which
determines the size of the jump done in the solution space.
These two problems are very important to study when we
want to build a complex problem solving system like a multi-
agents based one. In the case of a self-organized multi-agent
system, where control is decentralized and autonomous, it
is not easy to memorize and use a big amount of previous
information. The local action, evaluation, system dynamics
and decentralization characteristics prevent the agent to
easily learn from its own action. Exploit/explore strategies in
autonomy can be found in [11]. An endogenous control can
be a good tool to solve the exploitation/exploration problem,
because it is created during the computation and is based on
it. In order to illustrate our model for endogenous control,
we will focus on the exploitation/exploration problem in a
graph coloring problem.
IV. ENDOGENOUS CONTROL FOR MULTI-AGENT SYSTEM
We propose in this work, a new model for endogenous
control in self-organizing multi-agents based complex prob-
lem solvers. Our model deals with the dynamic of the
solving process. More speciﬁcally, we propose a process that
dynamically couples the problem structural/topological char-
acteristics to the appropriate solving behavior. The global
solving behavior is achieved by a society of agents on
an environment that represents the problem to solve. Each
agent of the society achieves a speciﬁc local behavior, on a
speciﬁc situation of the environment representing a structural
characteristic of the problem. The multi-agent system has
thus to ﬁnd a social organization, a non random layout of
local behaviors, that best ﬁts a spatial organization, a non
random layout of local conﬁgurations, representing the struc-
tural/topological problem characteristics. The endogenous
control is the mechanism that allows the dynamic coupling
of these organizations, as a solution for the problem solving.
In this section we deﬁne the three key elements of the
proposed model for endogenous control in multi-agents
system (EC4MAS) which are the social organization, the
spatial organization and the coupling. The control system
has to represent the inﬂuence between the main system and
its environment. The model is based on the relationship of
three elements to construct an emergent control in the MAS
to ensure its permanent and continuous adaptation.
A. Social organization
The multi-agent system involving multiple interacting
agents, must be addressed in a more extended view than
of a single agent. The overall activity is dependent on
all individual actions but also on the interactions between
agents. The group of agents is a reﬂection at a given time
of the search activity of the system. This activity has to be
captured by the system and has to be used to direct and
control the research. To implement this perception we use :
• RSo = {Rso1, ..., Rson}, a set of n social roles
• Lso
=
{Lso11, ..., Lsonn}
where
Lsoij
=
(Rsoi, Rsoj), ∀i, j ∈ [1, ..., n]
• ∀Lsoi ∈ Lso, Cso = {Lso1, ..., Lsoi}, a set of social
contexts
• a social organization Oso =< Rso, Lso >
The roles Rso act as guides for the agent to determine the
appropriate strategy and dictate it a predeﬁned behavior. The
adoption of a social role by an agent implies that it adopts
the guidelines and directives of that role. The action of the
agent, so its social role choice, could have been inﬂuenced
by the other agents social roles, this result in the relation
Lsoij. A relation Lsoij exists if an agent with the role Rsoi
has encountered an another agent with the role Rsoj. The
social organization involves a set of roles Rso and relations
Lso between them. The activity of a single agent can not
be isolated from other agents and therefore the social roles
are linked within the organization. The social organization
Oso gives information of the agents situation within the
solving process at a given time. The situation of an agent,
and more precisely the adequacy of its social role, is directly
dependent on its environment. To locate an agent of a social
perspective, relations between him and its neighbors deﬁne a
90
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

context Cso. The context is a part of the social organization,
with a limited size around one particular agent, it provides
information on relations between different social roles So in
a particular situation of the resolution.
Formally, the social organization is used to represent the
solving strategy of the system. Social roles’ relations are
based on the activity of the system, and more particularly
on the agents’ actions. This dynamic updates permanently
the organization to adapt the search.
B. Spatial organization
The spatial organization is used to model the current
situation in the search space, it is based on :
• a set of m spatial roles Rsp = {Rsp1, ..., Rspm}
• a conﬁguration Csp = {a1, ..., aj} with Csp ∈ SP
where ai is an agent state and SP is the search space
• a function fRsp : SP → Rsp
The spatial role Rsp represents some characteristics of
the current solution in the space of solution. It reﬂects the
current position of the agent in the search space and allows it
to apprehend the difﬁculty of its situation. The organization
of a group of agents in the environment or physical agents
organizations Csp, can highlight basic characteristics of the
problem relevant to the resolution. In order to capitalize
these informations, it is necessary to allow their identiﬁca-
tion and use by the system. The spatial organization is based
on the fRsp function which associates a spatial role to an
agent from the current spatial conﬁguration. This function
uses sensors, given to the agents to capture their situation,
to determine the Rsp. The sensors could be speciﬁc to the
problem to solve or more generic as we will see in V-B2.
Unlike social information which models the actions of
the agents, spatial roles are about the effect of the solving
process in the physical environment. The role is essentially
descriptive of the problem and the situation of the system
during the resolution. The spatial organization connects
particular conﬁgurations of the problem. In some cases the
problem deﬁnition may give access to speciﬁed elements to
deﬁne spatial roles such as topology of the graph for graph
coloring. In other cases this information is not identiﬁable
from the outset but may appear during the resolution.
C. Coupling
Social and spatial organizations both provide information
of a different nature. The ﬁrst one is particularly interested
in the mechanisms of resolution looking to the ﬁttest agents’
behavior. The second one gives information on the status of
the system in search space. These two elements are strongly
linked because the social role deﬁnes how they act in the
environment and the spatial role represents the situation of
the system in the environment. The coupling of these two
organizations is deﬁned by :
• a coupling function fC : Cso × Rsp → R with ∀x ∈
Cso and ∀y ∈ Rsp, 0 ≤ fC(x, y) ≤ 1
• a ﬁtness function fT : (Cso × Rsp) × Time → R
where Time is the number of cycles of the resolution
The coupling fC is dynamic and allows the relations
between space and social roles to evolve according to the
ﬁtness function fT evolution. The determination of the best
couple (Rso, Rsp) for an agent in a given situation, is the
key to success. This coupling is determined by evaluating
and storing the pairs created by agents during the search in
the previous cycles (a cycle is an amount of time where each
agent acts one time). A look back at previous choices with
fT allows to update the coupling fC to adapt the control
system.
D. EC4MAS principle
Social roles are based on the actions we want the agents
to do. They implement the mechanisms used to solve the
problem, like explore or exploit strategies for example.
Spatial roles are deﬁned in order to give some speciﬁc
informations on the search space. Spatial sensors have to be
able to capture the current situation in the solution space.
The ﬁtness function allows the evaluation of the evolution
of the search in time.
Algorithm 1 Agent cycle
UpdateCoupling(fT);
Cso ← GetSocialContext();
Rsp ← GetSpatialRole();
Rso ← GetSocialRole(Cso, Rsp, fC);
Act();
In an agent action cycle, given by algorithm 1, the agent
uses the ﬁtness function to update the coupling values then
it gets its social and spatial situation to get its new social
role according to the coupling function.
V. RESULTS AND DISCUSSION
In this section, we present an example of the use of
EC4MAS to solve a graph coloring problem and we will
focus on the exploit/explore problem in graph coloring.
A. Experimental Setup
The agents of the system represent the nodes of the graph
to color. A solution is found when all the agents have no
conﬂicts with their neighbors, so each two connected nodes
are assigned different colors.
The main solving strategy of the agents is based on the
Min Conﬂict heuristic. Two social roles are used, the ﬁrst
is the exploitation strategy and the second is the explo-
ration strategy. Exploitation tends to decrease the number
of conﬂicts between an agent and its neighbors. Exploration
can randomly take a color or apply the exploitation strategy
(Min Conﬂict with exploration). The social organization is
modeled with a tree, where one role is represented at a
level. The children are based on the representation amount
91
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

percentage of the role in a situation. The ﬁgure V-A-1
illustrates a social organization where relations between
roles is divided into two possibilities.
Exploration
[0, 50]
]50, 100]
M1
Exploitation
Exploitation
[0, 50]
]50, 100]
[0, 50]
]50, 100]
M2
M3
M4
Figure 1.
Example of a social organization
The spatial roles are based on the nodes degrees (static).
Each role regroups nodes with similar degree. The spatial
organization follows the graph topology.
The coupling is done using matrices to link social and
spatial organization. The matrices M1, M2, M3, M4 in ﬁgure
V-A-1 have one column per social role and one row per
spatial role, so in this case there is 2 social roles and 3 spatial
roles. The values in the matrix are ﬂoat numbers between 0
and 1 and are normalized on the row. To use the coupling
an agent ﬁnds its spatial role and its social context, so the
associated matrix to use to choose a social role. Higher is
the value in a social column, higher is the probability for
the social role to be selected.
B. Results and analysis
To test our model we generated 100 different graphs with
different seed. We used equi-partite 4-colorable graphs with
300 nodes, that means that the 4 color sets have the same size
or can only be different from one node. An edge connectivity
(ec) of 0,02333 (7/300) is used to get hard problems like seen
in [12]. Each resolution is done 1000 times with a maximum
of 1000 cycles. The performance is the number of cycles to
get a solution, if no solution is found 1001 is used.
-40%
-30%
-20%
-10%
0%
10%
20%
30%
40%
Performance improvement
Problems
Average
Performance
Figure 2.
Performance improvement of EC4MAS on 100 problems with
300 nodes, ec = 0,02333, 4 colors.
1) Performance: First, we randomly picked a problem
(ref-problem) among generated graphs, a genetic algorithm is
used to get coupling values and to ﬁnd the best exploring rate
for Min Conﬂict with exploration (17,7% for ref-problem).
We used this tuning to resolve all the generated problems.
The ﬁgure V-B1-2 shows the performance improvement
on all the 100 problems which consists in the difference
between Min Conﬂict with exploration results and EC4MAS
results. The problems are ordered by the number of cycles
of the solving process. We can see that EC4MAS can
generally improve the resolution on a set of problems with
similar characteristics since the average improvement of
EC4MAS is about 12,4%. There is a big difference of
performance between easier problems (at the beginning) and
more difﬁcult ones (at the end). The ref-problem number
of cycles for resolution with EC4MAS is 234, most of the
problems with a negative improvement are under this value.
The coupling used for ref-problem is a representation of the
problem and gives speciﬁc informations on it. With problems
much easier than that, the resolution is too specialized and
instead of guiding the search process it introduces too much
perturbations.
Resolution
Perf.
Tuning time
Efﬁciency
Min Conﬂict (17,7%)
100%
4
-
Optimal Min Conﬂict
124,71%
333
29,68%
EC4MAS (17,7%)
112,14%
22
231%
Table I
PERFORMANCE AND EFFICIENCY
In addition to the performance gain, we also focus on the
tuning time of the system. Table I presents the performance
gain of three different tuning and the efﬁciency of each
method. The Min Conﬂict with 17,7% of exploration is
taken as a reference for the measures. The tuning time is
the sum of the time to ﬁnd the optimal exploring rate for
each problem for Optimal Min Conﬂict, and is the time to
ﬁnd the optimal exploring rate and the coupling values for
ref-problem for EC4MAS. In the ﬁrst case the tuning time
is dependent on the number of problems and their hardness,
in the second case only on the hardness of ref-problem.
We can see here that the performance is much higher with
optimal exploring rate, about 2 times more than EC4MAS,
but the tuning time (in minutes) is about 15 times higher.
In the end, the global efﬁciency (performance gain divided
by tuning time) of EC4MAS is almost 8 times higher than
Optimal Min Conﬂict. This shows that EC4MAS can learn
the characteristics of a particular problem and is able to use
this knowledge to really well solve similar problems with a
limited tuning cost.
2) Genericity: ECM4AS uses the nodes degree to create
spatial roles. EC4MAS has been developed to be as generic
as possible. To illustrate the genericity we introduce here
a new type of sensor for spatial role, the local clustering
coefﬁcient. This coefﬁcient is based on triangles between
92
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

neighbors of the node and the node itself. This coefﬁcient is
very useful to apprehend the difﬁculty of a graph coloring
problem as seen in [13].
Spatial role
Perf. (cycle)
Improvement
Degree
234
11,5%
Clustering coefﬁcient
223
17,04%
Table II
IMPROVEMENT OF DIFFERENT SPATIAL ROLES OVER MIN CONFLICT
Table II shows the performance on ref-problem with the
Min Conﬂict with exploration, EC4MAS with degree and
clustering coefﬁcient for spatial role. We can see that the
most speciﬁc sensor which is the clustering coefﬁcient is
more efﬁcient than the others, about 17% than Min Conﬂict
while the degrees are only 11,5% better than Min Conﬂict.
EC4MAS could support several types of sensors for spatial
roles, from more general one like degree to more speciﬁc
one like clustering coefﬁcient. EC4MAS is generic but is
also dependent to the type of spatial role and sensor it uses.
VI. CONCLUSION AND FUTURE WORK
In this paper, we discuss the control problem in reactive
self-organized systems. We distinguished two types of con-
trol, exogenous and endogenous. We describe the differences
between them and pointed the main elements to address the
creation of an endogenous control system, like observation,
learning, dynamic and structural coupling. Then to illus-
trate the possibilities of an endogenous control system for
problem solving, we considered the exploitation/exploration
dilemma. We proposed a new model to create endogenous
control in a self-organized multi-agent system, EC4MAS.
This model is based on a social and a spatial organization
and their coupling. These two organizations give informa-
tions on the current resolution strategy of the system and
on its result, and the coupling allows the control system to
dynamically adapt the strategy more efﬁciently.
EC4MAS is a generic model and could be used to solve
different type of problems. The spatial organization could be
adapted to use speciﬁc informations to let EC4MAS be able
to solve different kind of problems. On more hard problems
EC4MAS gives good improvements since the characteristics
of the problem are used to better tackle it. EC4MAS makes
the tuning of the system robust face to problem changes, the
coupling of social and spatial organization gives pertinent
solutions to encountered situations with a speciﬁc strategy.
The tuning has not been changed when new problems are
submitted. This is a great point because individual optimiza-
tion is very expensive and could not be always used, more
particularly when problems are dynamic. The endogenous
self-organized characteristic of EC4MAS could efﬁciently
limit the amount of time and resources to solve a problem.
Future work will focus on two main points, the dynamic
adaptation of the coupling and a new social organization.
The dynamic adaptation of the coupling will let the system
ﬁnd the good parameters during the resolution process. In
addition social organization will be upgraded to give more
speciﬁc informations on the current strategy. Instead of gen-
eral information on the neighbors strategy, the real speciﬁc
organization of a local situation should be considered.
REFERENCES
[1] F. Arlabosse, M.-P. Gleizes, and M. Occello, “M´ethodes de
conception de syst`emes multi-agents.” Syst`emes Multi-Agents
- Collection ARAGO, vol. 29, 2004.
[2] J. Ferber and O. Gutknecht, “A meta-model for the analysis
and design of organizations in multi-agent systems,” in Multi
Agent Systems, 1998. Proceedings. International Conference
on.
IEEE, 2002, pp. 128–135.
[3] C. Bernon, V. Camps, M. Gleizes, and G. Picard, “Engineer-
ing adaptive multi-agent systems: The adelfe methodology,”
Agent-oriented methodologies, pp. 172–202, 2005.
[4] F. Armetta and S. Hassas, “Exploration expressiveness for
self-organized systems : an application to the k-coloring
problem,” Laboratoire LIESP, Lyon, Tech. Rep., 2008.
[5] F. Klein, “Contrˆole d’un sma r´eactif par mod´elisation et
apprentissage de sa dynamique globale,” Ph.D. dissertation,
Universit´e Nancy 2, 2009.
[6] M. Fehler, F. Kliigl, and F. Puppe, “Techniques for analysis
and calibration of multi-agent simulations,” in Engineering
societies in the agents world V: 5th international workshop,
ESAW 2004.
Springer Verlag, 2005, p. 305.
[7] B. Calvez and G. Hutzler, “Ant colony systems and the
calibration of multi-agent simulations: a new approach,”
MA4CS’07 Satellite Workshop of ECCS 2007, 2007.
[8] I. Chades, B. Scherrer, and F. Charpillet, “A heuristic ap-
proach for solving decentralized-pomdp: Assessment on the
pursuit problem,” in Proceedings of the 2002 ACM symposium
on Applied computing.
ACM, 2002, p. 62.
[9] J. Campagne and A. Cardon, “Using morphology to analyse
and control a multi-agent system, an example.” in STAIRS
2004: Proceedings of the Second Starting AI Researchers’
Symposium.
Ios Pr Inc, 2004, p. 229.
[10] S. B. Thrun, “Efﬁcient exploration in reinforcement learning,”
Computer Science Department, Pittsburgh, PA, Tech. Rep.
CMU-CS-92-102, 1992.
[11] S. Wilson, “Explore/exploit strategies in autonomy,” in From
Animals to Animats 4: Proceedings of the Fourth Interna-
tional Conference on Simulation of Adaptive Behavior, 1996.
[12] A. Eiben, J. Van Der Hauw, and J. van Hemert, “Graph
coloring with adaptive evolutionary algorithms,” Journal of
Heuristics, vol. 4, no. 1, pp. 25–46, 1998.
[13] A. A. Tsonis, K. L. Swanson, and G. Wang, “Estimating
the clustering coefﬁcient in scale-free networks on lattices
with local spatial correlation structure,” Physica A: Statistical
Mechanics and its Applications, vol. 387, no. 21, pp. 5287 –
5294, 2008.
93
ICAS 2011 : The Seventh International Conference on Autonomic and Autonomous Systems
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-134-2

