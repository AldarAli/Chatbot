Introducing Middle School Students to Basic Computer Programming Skills Using 
Web based App Inventor Application  
 
Kevin Cree  
CSSE 
Auburn University 
Auburn, USA 
kmc0043@ auburn.edu 
Daniela Marghitu 
CSSE 
Auburn University 
Auburn, USA 
DanielaMarghitu@auburn.edu
 
 
Abstract—Computer technology is one of the driving forces of 
the US economy. The Bureau of Labor Statistics (BLS) 
predicts that a 30% increase in demand for software 
developers by 2020 in the United States [1]. The BLS also 
predicts between an 18% to 31% growth in salaries in the 
various computer related professions. To get interest in the 
computer science field and fill these new jobs the Auburn 
University (AU) Laboratory for Education and Assistive 
Technology (LEAT) K12 research and inclusive outreach 
program developed an innovative App Inventor curriculum to 
teach the children basic computing skills. 
Keywords- K12 Computer Science inclusive outreach; App 
Inventor 
I. 
 INTRODUCTION  
Computer technology is one of the driving forces of the 
US economy through innovations made by firms like 
Google, Microsoft, Apple, Facebook and Twitter. The 
Bureau of Labor Statistics (BLS) predicts that a 30% 
increase in demand for software developers by 2020 in the 
United States [1]. The BLS also predicts between an 18% to 
31% growth in salaries in the various computer related 
professions, making computer science related jobs very 
lucrative career options and thus attractive to students. Yet, 
rigorous Computer Science (CS) is dramatically under-
taught in US’s schools. In Alabama, CS Education remained 
marginalized in a reflection of the situation in the rest of the 
country. Whereas women currently receive more than half 
of all the undergraduate degrees granted in the U.S, they 
earn only 11% of computing degrees [2]. The number of 
special needs girls who complete a CS undergraduate degree 
is particularly low; less than 6 % of undergraduate degrees 
are awarded to students with disabilities annually [3]. 
People often consider CS a boy’s activity where a group of 
geeks play a violent game in an isolated room, and girls do 
not want to be considered nerdy. One way to change young 
women’s perception about CS is to provide an engaging CS 
programming experience that is related to their own 
personal interests while they work with successful female 
mentors.  
II. 
ROBO CAMP K12 RESEARCH AND OUTREACH PROGRAM  
Today, a record 197 students took the CS AP exam in 
May 2014. It is also important to point out that Alabama 
was one of the nation’s leaders in the rate of African-
Americans who received qualifying scores on the CS AP 
exam – 75% of African-Americans received a 3 or better on 
the CS A in recently [4]. While the qualifying rate seems 
impressive, only 8 such students took the exam. High 
School women account for 47% of all AP Calculus test-
takers, but only 18% of those who take the CS AP test are 
women. Thus, there are rapidly expanding educational 
resources for HS students who have an interest and basic 
skills for CS education, but few women, underrepresented 
minorities and rural students are engaged in these CS 
offerings, due in large part to insufficient middle school 
engagement in CS. 
For the past seven years, the Auburn University (AU) 
Laboratory for Education and Assistive Technology (LEAT) 
K12 research and inclusive outreach program developed to 
introduce students (especially girls and students with 
disabilities) to CS and computational thinking [5]. CS 
Unplugged 
[6], 
Carnegie 
Mellon 
University 
Alice 
Programming System [7], Microsoft Kodu programming 
environment [8], Massachusetts Institute of Technology 
(MIT) App Inventor [9], Lego Mindstorms NXT, EV3 and 
Tetrix robots, 3D printing are few of the applications used to 
teach concepts of computer programming and robotics. 
LEAT team offered several successful k12 teacher 
development workshops. Offered each semester since 2007, 
the Robo Camp [10] is an AU K-12 CS outreach program 
designed to enhance students’ knowledge in computing and 
robotics fields and to offer graduate students a hands-on 
experience in working with K12 school aged students.  
III. 
APP INVENTOR CURRICULUM COMPONENTS 
Robo Camp team has designed a twenty hours informal 
curriculum using App Inventor (AppI) and CS Unplugged 
(CSU). 
A. Computer Science Unplugged  
CSU is a set of non-programming kinesthetic learning 
activities used to facilitate understanding of CS concepts. 
1
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-485-5
WEB 2016 : The Fourth International Conference on Building and Exploring Web Based Environments

CSU-type activities can help students recognize and learn 
difficult concepts that may not be made explicit in a 
particular programming environment [11]. By providing this 
exposure and then discussing the concept, students can start 
to understand and identify CS concepts in different 
programming environments. As recommended in [12] this 
as a worthwhile investigation into how CSU activities 
combined with visual programming environments can 
facilitate deeper understanding of computation and its 
application. 
B. App Inventor 
 
AppI is a web-based drag-and-drop visual programming 
tool for designing and building mobile apps for Android. 
AppI promotes a new era of personal mobile computing in 
which people are empowered to design, create, and use 
meaningful mobile technology solutions for their daily lives, 
in 
endlessly 
unique 
situations. 
AppI’s 
intuitive 
programming 
concept 
and 
incremental 
development 
capabilities allow the developer to focus on the app 
programming logic rather than the syntax of the coding 
language, fostering digital literacy for all [13].  
IV. 
APP INVETOR CURRICULUM 
The informal AppI curriculum is usually taught in four 
days camps. 
A. Day 1 Basic programing skills 
Day 1 starts with an overview of how AppI works, which 
includes the My Projects Page, App Designer Window, and 
Blocks Editor. After reviewing the App Inventor system, 
students build their first application called Hello Aubie, 
which reinforces the skills needed to use MIT App Inventor. 
Then students go over basic programing skills which 
includes variables, if statements, if-else statements, methods, 
and loops. To reinforce these skills, students progressively 
add new code to the Hello Aubie application. While creating 
the application, students are introduced to basic quality 
assurance skills by pointing out faults and then being asked 
to suggest solutions to resolve each step. 
B. Day 2 Accessibility 
Day 2 focuses on accessibility and first introduces 
students 
to 
different 
types 
of 
disabilities 
(e.g. 
communication, hearing/visual impaired, physical, and 
learning) by playing a game that gives examples of some 
type of accessibility technology and has the children guess 
the disability that is assists with. Students work on a talking 
calculator application, which shows how a visually impaired 
person may interact with a calculator. Then we cover the 
concept of random number generation creating a dice 
application. Lastly we play a game called Java Jump created 
by Kevin Cree, which is similar to Shoots and Ladders, but 
uses Java syntax to decide the direction of each move. 
C. Day 3 Robotics 
Day 3 uses AppI and a Lego Mindstorm (LM) robot to 
reinforce accessibility. The day starts by making a standard 
controller for the LM robot, which includes forward, back, 
left, right and stop controls. This exercise shows how to 
program the different peripherals the LM offer, which 
includes 2 motors and a sonic sensor. After we complete this 
project, we build off of it and continue to reinforce the idea 
of accessibility by creating a voice controlled LM controller. 
This project is added to the standard controller and allows 
students to speak commands directly to the Android device 
and follow the preprogramed movements. While creating 
this application we sress the importance of applications like 
this and how the concept could assist people with limited or 
no mobility. 
D. Day 4 Robotics and Binary Numbers 
Day 4 continues robotics by adding some additional 
peripherals and teaching children how to convert binary 
numbers into decimal format. We start by explaining binary 
number and how they are converted to decimal numbers 
using the CSU Binary Numbers activity. We add an 
additional peripheral, the light sensor, then build an 
application that runs the LM robot over a set of paper tiles 
that are light and dark, light being 1 and dark being 0. Each 
time the LM steps to the next tile it reads out the new binary 
number. While doing this, students participate and calculate 
each number and use the LM to verify their calculation. 
V. 
CONCLUSION 
We are continuing to develop the AppI curriculum and 
we closely collaborate with the App Inventor developing 
team so we can implement the latest environment features. 
We are especially interested in new components related with 
Accessibility and Robotics. 
REFERENCES 
[1] 
U.S. Bureau of Labor Statistics: http://www.bls.gov/, [Accessed  June 
14 2016] 
[2] 
NSF 
Indicators: 
http://www.nsf.gov/statistics/seind10/,[Accessed 
June 14 2016] 
[3] 
NSF Disability Report: http://www.nsf.gov/statistics/2015/nsf15311/, 
[Accessed  June 14 2016] 
[4] 
Ericson, B., Guzdial M., Measuring Demographics and Performance 
in Computer Science Education at a Nationwide Scale Using AP CS 
Data, ACM SIGCSE. Atlanta, GA, 2014 
[5] 
Marghitu, D., Fuller, M., Ben Brahim, T., Auburn University 
Robotics and Computer Literacy K- 12 Engineering Camps: A 
Success Story, ASEE-SE, SPSU, Marietta, GA, 2009  
[6] 
CS Unplugged: http://csunplugged.org/, [Accessed  June 14 2016] 
[7] 
Alice: http://www.alice.org/, [Accessed  June 14 2016] 
[8] 
Kodu http://www.kodugamelab.com/, [Accessed  June 14 2016] 
[9] 
App Inventor: http://appinventor.mit.edu, [Accessed  June 14 2016] 
[10] RoboCamp:http://eng.auburn.edu/outreach/,[Accessed  June 14 2016] 
[11] Ward, B., Marghitu, D., Bell, T., Lambert, L., Teaching Computer 
Science in Scratch and Alice, The ACM Journal of Computing 
Science in Colleges, Volume 26, Issue 2, pp 8, 2010. 
[12] Marghitu, D, Bell, T., Using Virtual Worlds to Engage Typical and 
Special Needs Students in Kinesthetic Computer Science Activities: 
A Computer Science Unplugged Case Study AACE ED-MEDIA, 
Honolulu, HI, 2009. 
[13] Pokress, S., Veiga, J., MIT App Inventor: Enabling Personal Mobile 
Computing, 
PRoMoTo 
2013 
Proceedings, 
October 
2013 
2
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-485-5
WEB 2016 : The Fourth International Conference on Building and Exploring Web Based Environments

