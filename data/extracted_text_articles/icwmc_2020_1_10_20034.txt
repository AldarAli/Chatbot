On Mass-Spring System Implementation in Cluster-Based MANETs for Natural
Disaster Applications
Francisco E. Balart-Sanchez
Electronics Systems & Informatics Dept.
ITESO-Jesuit University of Guadalajara
Tlaquepaque, Mexico
email:franciscobalart@iteso.mx
Luis F. Gutierrez-Preciado
Electronics Systems & Informatics Dept.
ITESO-Jesuit University of Guadalajara
Tlaquepaque, Mexico
email:lgutierrez@iteso.mx
Francisco Cervantes-Alvarez
Electronics Systems & Informatics Dept.
ITESO-Jesuit University of Guadalajara
Tlaquepaque, Mexico
email:fcervantes@iteso.mx
Abstract—Communication after natural disasters is paramount.
Disasters such as earthquakes, hurricanes and tsunamis leave
the affected area reachable only to wireless devices. In such
conditions, Mobile Ad-hoc Networks (MANETs) play a critical
role. The issue of MANETs communication backbone can be
addressed by self-organized cluster-based algorithms. The vir-
tual backbone will maintain an efﬁcient communication on the
MANET, adapting to the dynamic topology changes thanks to
its self-organized nature. Nevertheless, they do not take into
account the node’s mobility. If a node moves away from its
neighboring nodes, connectivity will be lost and thus, network
segmentation will occur. Therefore, it is fundamental to maintain
the connectivity and the communication between nodes while
exploring the area. In this paper, we propose the application
of a mass-spring system on the Energy-Efﬁcient Self-Organized
Algorithm (EESOA) for Disaster Area applications. Results will
show that our proposal performs best when deployment of
MANET’s nodes is dense while maintaining a connected network.
Keywords–MANETs;
self-organization;
cluster-based
algo-
rithms; Mass-Spring; Disaster Area.
I.
INTRODUCTION
Almost every year natural disasters such as earthquakes,
hurricanes, typhoon, ﬂood and tsunamis strike many areas
of the world. After the catastrophic events, many lives are
trapped in the post-disaster area. According to the “Golden
72 hours” principle, people that are trapped have a large
chance of survival if they are rescued within the initial 72
hours [1]. Emergency response teams and volunteers need to
communicate in order to perform their rescue operations. Thus,
the connectivity of their communication devices is paramount
in such situations. Nevertheless, communication systems which
provide connectivity are usually down as a result of the
disaster. The advance of mobile ad hoc networks (MANETs)
has enabled their usage to address disaster situations thanks to
the availability and infrastructure-less nature.
A Mobile Ad-hoc Network node, consists of an wireless
electronic device, such as laptops, drones, smartphones and
wearable technology which communicates among each other
in a decentralized manner creating a structure-less network.
Research in MANETs has intensiﬁed given the usage scenarios
unveiled by catastrophic disasters on which device reachabil-
ity is key. The advantage of wireless MANETs nodes over
wired devices have yielded a new range of applications to
aid on response of catastrophic disasters. Applications range
from prior alert mechanism and post disaster infrastructure
[2], provide a secure payment system in disaster areas [3],
Simultaneous Wireless Information and Power Transmission
(SWIPT) scheme [4], hybrid communication infrastructure
systems using wireless devices and the remaining cellular
antennas [5]. Other applications focus on post-disaster com-
munication like human mobility based communication system
[6], an earthquake communication platforms [7] or Unmanned
Aerial Vehicles (UAVs) network deployment [8].
The aforementioned applications [2]–[8] assume the net-
work is always connected and does not take into account the
dynamic topology changes of the MANET. Such topology
changes can be caused by node’s mobility, obstacles causing
connectivity loss, node’s death, malfunction and node battery
drain out. Additionally, another assumption is that MANET’s
nodes will always be within range, and thus, connected. There
must be a mobility scheme, which prevents the nodes to go
far from their neighbors causing network segmentation. Such
mechanism, at the same time, must prevent the nodes to be
too close to each other as well.
The contribution of this paper and ongoing research [9] is
the evaluation of the application of a mass-spring system on
a cluster-based algorithm for disaster area applications. Imple-
mentation of mass-spring on the MANET’s nodes will control
the node’s mobility to have a connectivity-aware network.
Simulation will show that the proposed approach performs
best when deployment of the MANET’s nodes is dense without
losing connectivity. There are several applications of the mass-
spring system: An indoor positioning and tracking localization
scheme [10]; smart cities applications [11]; a positioning
scheme when the number of anchor nodes is insufﬁcient [12];
a study on implementing a mass-spring based algorithm for
the optimal topology on a wireless network [13]; an anchor
free Wireless Sensor Network (WSN) self-localization scheme
[14]; a relaxation of the model for devices’ self-deployment
[15] and WSN localization [16].
The rest of this paper is organized as follows: Section II
shows the related work. Section III presents the application of
the mass-spring system on a cluster-based algorithm. Section
IV establishes the testbed simulation. Section V shows the
simulation results. Finally Section VI concludes this work and
presents future challenges.
II.
RELATED WORK
The research surveyed in this section [5]–[7] [17] addresses
the challenge of MANET’s communication in disastrous areas.
A. Decentralized Algorithm for Maximizing Coverage and
Lifetime in a Mobile WSN
Etancelin et al. [17] proposed a decentralized algorithm
for maximizing coverage and lifetime in mobile wireless
sensor networks (DACYCLEM). Their approach is to build
1
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

a connected dominating set (CDS) combined with a attraction
and repulsion forces scheme to maintain connectivity. Thus, the
problem addressed is to maximize the lifetime of a network
while attempting to cover the maximum possible area. The
solution offered by Etancelin et al. [17] is based on deﬁne
coverage area as an objective and connectivity as a constraint.
Their proposal is to combine the solution for each sub-problem
addressed. For the backbone construction sub-problem, they
used the approach proposed in [18]. For the connectivity
between nodes sub-problem, in Table 1 of [18] they deﬁned
either the attractive, repulsive or equilibrium forces based
on the nodes’ states and their interaction. The separation
of critical backbone and backbone is key for the behavior
on the nodes forces interaction. Additionally, nodes’ states
are deﬁned as active or standby, which will also affect the
respective force deﬁned at Table 1 of [18]. Finally DACY-
CLEM’s algorithm 1( [18]), was proposed with an initialization
deployment phase. This proposal addresses the aforementioned
sub-problems while maintaining connectivity as a constraint.
Although DACYCLEM shows promise, it does not con-
sider the implications of “graceful degradation” deﬁned in [19].
Also the battery consumption due to changing the node’s state
from standby to active does not seem to be taken into account.
Another assumption is the nodes deployment distribution. For
the purposes of their research, a random distribution of the
nodes in the area is assumed. This is not realistic for disaster
applications. Finally another caveat is that nodes will only start
initialization once they reach a predeﬁned meeting point.
B. MANET rescue information communication system
Verma et al. [5] presented a hybrid cellular-MANET archi-
tecture communication system. The proposal does not require
modifying existing wireless infrastructure nor requires new
technology but existing devices with Wireless Fidelity (Wi-Fi).
The architecture consists of a sink node named Control Station
(CS), which is connected to a vehicular Base Station (BS) in
order to have internet and cellular service. Two Access Point
(AP) types are deﬁned based on the communication interface,
Wi-Fi AP and Gateway AP (which uses cellular interface).
Victim’s devices are deﬁned as Mobile Devices and Notebooks.
The aforementioned architecture assumed the existence of a
working BS, nevertheless, the architecture is robust enough to
take into account broken BS causing no cellular coverage.
An energy and mobility aware, self organized routing
protocol is proposed as well. APs are dropped and then register
to the CS to keep their table updated. Once registered APs
starts broadcasting to detect devices. Mobile devices respond to
the broadcast message or use neighbor MANET nodes as relay
nodes. Subscription is performed using unique physical address
and a sequence number to avoid loops and old messages. The
routing is deﬁned by two processes: the route discovery and
message transmission and the route maintenance. The route
discovery scheme falls within the on-demand (reactive) type.
The devices always will subscribe to the AP with minimum
hop count. Route maintenance focuses on network topology
changes. If a new node appears or an existing one moves the
APs and CS will update their tables.
The limitations with this approach are, although it builds a
MANET there is a sink node (CS). To have a sink node causes
trafﬁc to be higher in gateways nodes or rely nodes causing
the hotspot problem, causing such nodes to drain their battery.
The use of two technologies provides robustness but the switch
between Wi-Fi and cellular schemes cases additional power
consumption. This proposal assumes the network will always
be connected, when mobility of rescuers, does not follow any
scheme to ensure an connected network.
C. MANET-based communication platform
Jang et al. [7] outlined a MANET-based communication
platform and information rescue system. It proposed to es-
tablish a temporary MANET by using WiFi-ready devices
such as notebook PCs for the network construction. Thus, the
architecture is not limited by the technology available post-
disaster. Authors in [7] presented an “Autonomous P2P Ad-
Hoc Group Communication Systems” (P2Pnet) as a server-
less peer-to-peer communication MANET-base network. On
top of the MANET, there is a peer-to-peer communication
layer to support higher level communication services such as
Push-to-Talk, two way radio and VoIP communications. The
proposal in [7] assumed that there would be nodes with satellite
communication capability such as mobile-base stations and
Very Small Aperture Terminal (VSAT). The aforementioned
nodes will perform gateway functions so all other nodes can
access Internet through gateways.
Once the network is built, [7] introduced “Rescue Infor-
mation System for Earthquake Disasters” (RISED). RISED
main objective is to provide the most up-to-date rescue-related
information. Such system is designed to support efﬁciently
resource and information management for rescue mission
operations in a catastrophic disaster. RISED is composed by
4 subsystems. The Disaster Assessment, fastest rescue route
generation, health care & relief resources integration and
wounded victim arrangement subsystems focus on speciﬁc task
relying on the constructed MANET-based network. Authors
in [7] assumes volunteers will be within range without any
deﬁned approach to ensure a connected network.
D. Unmanned Aerial Vehicle network deployment tool
Deruyck et al. [8] proposed a deployment tool for UAV-
aided emergency network for large scaled disaster scenarios.
Such UAVs will have a mounted base station which can be
a femtocell base station. The deployment tool takes as input
the following: human trafﬁc and locations, disaster area 3D
model environment and number of hours the communication
service is required. With the 3D model path loss calculation is
performed being either Line-Of-Sight (LOS) or Non-Line-of-
Sight (nLOS). With the aforementioned the algorithm creates
a list of all possible base stations. When all user locations are
analyzed the network is then designed. The number of nodes
calculated on the algorithm takes into account the number
of drones in the facility. Once the UAV is on its dedicated
position, the user will be able to connect to the BS. This
approach generates a connected network thanks to the number
of nodes calculated, still a scheme to maintain nodes within
range and avoid collision among each other is not addressed.
E. Human mobility in disaster areas
Aschenbruck et al. [6], provided a realistic approach to
model the mobility in a disaster area. Not only takes into
account natural disasters, but human-caused disasters as well.
Nevertheless, it has many assumptions such as relying on
the civil protection “separation of the room” disaster tactics,
2
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

which is unrealistic since the post-disaster terrain area could be
inhospitable and unreachable. Their model does not simulate
obstacles, a key factor in MANETs which causes changes on
the MANET’s topology. The metrics used, such as relative
mobility, average node degree, average link duration, minimum
number of links node and its neighbors (mincut) part from the
assumption of a non dynamic topology network.
Relying on structured civil protection tactics assumptions
provides an model which does not take into account the
dynamic nature of MANETs. [6] assumptions does not take
into account obstacles or MANET’s nodes power making
the model prone to network segmentation due to the lack
of self-organization. Finally, the mobility distribution may
follow the civil protection tactics, nevertheless in reality this
can change drastically due to the terrain conditions. Mobility
model is rigid, limited by the aforementioned civil protection
tactics moreover, no approach is mentioned to avoid network
segmentation when nodes are not within communication range.
III.
MASS SPRING MODEL ON EESOA
From the surveyed work in section II ( [5]–[7]), it can be
concluded that the assumption of a connected network was
made. A scheme that controls the MANET’s nodes mobility
to keep them within communication range, and consequently,
maintain a connected network is not deﬁned. Only [17] deﬁnes
a mobility model since it deﬁnes connectivity as a constraint.
Our proposal is the continuation of an ongoing research [9].
The problem of back-bone construction is already addressed
by EESOA. Nevertheless, EESOA with the mass-spring model
shows promise as a proposal for a connected-aware network.
The novelty of this proposal is the combination of a mass-
spring model with ESSOA. This provides a MANET with a
virtual-backbone maintained by nodes that will have a mobility
model which will maintain them connected and prevent colli-
sion. Finally leveraging from EESOA hello broadcast, nodes
will share their position to neighbors within one hop. This will
enable all MANETs nodes to compute all their neighbors mass
spring force in a distributed manner. Interaction of mass-spring
model with EESOA is described in section III-C.
The ﬁndings presented in this work are focused on the
mass spring system combined with a cluster-based system in
terms of number of survivors found and coverage area. Thus,
EESOA [9] virtual-backbone algorithm is agnostic to removal
of nodes in the network causing changes in the topology.
Finally, pairing EESOA nodes with the mass-spring system,
the network connectivity will be preserved in order to assist
on search and rescue operations.
A. EESOA for virtual backbone & efﬁcient communication
The Energy-Efﬁcient Self-Organized algorithm, builds and
maintains a virtual-backbone in a distributed manner. ESSOA
constructs the virtual backbone through a 4-hierarchy cluster-
based formation. Such roles are: Leader, Gateway, Bridge and
Member. Each EESOA node will self-assign one of the 4
hierarchies role based on the information obtained from its
neighbors within one-hop. The node with more neighbors and
best quality criteria deﬁned in [20] will have the Leader role.
Leader will inhibit its neighbors with periodic broadcast mes-
sages. A Gateway node is an EESOA node inhibited by two or
more nodes with the Leader role. A Bridge node is an inhibited
node which have an inhibited neighbor from another cluster. A
Member node is an EESOA node inhibited by a single leader.
The hierarchy roles self-designation scheme is deﬁned in detail
in [20]. The algorithm used in the presented work is the result
of an ongoing research, proposed at [9]. The proposal is an
enhancement on the Bridges role-self-assignation that removes
redundant links and minimizes broadcast messages and packet
loss. The EESOA proposal is explained in detail in [9].
EESOA clustering [9] is shown in Figure 1. Without
EESOA, communication between a node and all its neighbors
will occur. Having no control on redundant links will cause
unnecessary communication and problems such as broadcast
storm. Therefore, the EESOA clustering will remove redundant
links (non-backbone) and will construct a virtual backbone as
shown in Figure 1. Thus, avoiding problems such as broadcast
ﬂooding and packet loss due to excessive redundant links.
Figure 1. EESOA virtual backbone.
B. The Mass Spring Model
Node management such as maintaining a distance to avoid
disconnection or preventing collision with neighboring nodes
is not addressed on the surveyed work [5]–[7]. Maintaining
connectivity within the network for search and rescue is
paramount. The problem of construction and maintenance of
a communication backbone is already addressed by EESOA.
Nevertheless, EESOA provides a virtual back bone but does
not avoid network segmentation. The problem of node manage-
ment, such as keeping the nodes from going too far from their
neighbors’ range causing network segmentation and preventing
nodes from being too close to each other, can be addressed by
applying the mass-spring model to EESOA.
Application of mass-spring model in a MANET can give
a connectivity awareness to the network and thus, address the
problem of maintaining the nodes within range.
L1k1
L2k2
L3k3
x0
x1
x2
x3
Figure 2. Mass-spring system with 3 elements
3
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

The mass-spring system maintains a minimum distance
between the components of the system thanks to constant L.
Also, will keep the node as close as possible to the point of
equilibrium in which the sum of the forces is 0, otherwise,
resultant force will move the node of position. Hence, the aim
is to provide a ﬂexible scheme which when combined with
EESOA takes connectivity into account. An example of the
aforementioned mass-spring system is shown in Figure 2.
Equation (1) describes the mass-spring systems with the
force behavior affected by current positions (x), equilibrium
distance (L) and the spring constant (k).
Fu =
X
i

ki(|xi − xu| − Li) xi − xu
|xi − xu|

,
i ̸= u
(1)
where:
xi Position of the ith node
xu Position of node u
Li Equilibrium distance for ith node
ki Spring constant for ith node
Each ESSOA-MANET node will generate a mass-spring
model with all its neighbors within one-hop. Depending on
the neighbor node role given by EESOA [9], the constant ki
and equilibrium distance Li will be deﬁned accordingly.
Lk
Lk
Lk
Lk
Lk
En0
En2
En3
Sn1
Sn2
Sn3
Sn4
Sn5
Sn6
Sn7
En1
k: EESOA mass-spring constants
o: EESOA nodes (Eni)
•: Survivor Nodes (Sni)
Figure 3. Mass-spring model between nodes
C. Mass-spring interaction with EESOA
The mass-spring application on EESOA consists on 2 parts.
On ﬁrst stage the EESOA node will generate the respective
k spring constant as shown in Figure 2. Such constant will
be role dependant. Further more the equilibrium distance L
will be role dependant as well, making the mass spring model
ﬂexible. An example of an EESOA-based MANET with the
mass-spring model is denoted in Figure 3.
On the second stage, the algorithm will iterate through all
the nodes and their mass spring models. Then, it will generate
a vector ⃗v which will determine the new position (x, y) of the
EESOA node. Note that the algorithm will take into account
the mass-spring model of its EESOA neighbor nodes to keep
the equilibrium in the system as shown in Figure 3. Thus,
the new position will be adjusted. Therefore, the node will
not move away to cause network segmentation. Additionally,
the new position will cause the neighbor nodes to adjust their
vectors and new positions to maintain the equilibrium. Thus,
the implementation of the mass-spring model on EESOA nodes
provides a MANET, that addresses connectivity, which is key
for disaster area search and rescue applications.
The aforementioned stages are represented in Algorithm 1.
The First stage is denoted in Step 8, where if there is a EESOA
neighbor N(u) for a node u, it will generate the appropriate
spring constant ki according to the EESOA neighbor node.
Subsequently it will compute the individual force generated
between node u and it neighbor v while maintaining the
minimum equilibrium range L deﬁned on (1). The second stage
in denoted no the loop in step 7 and the update on node u
position in step 12. The resultant force of Neighbors of node
u will denote vector ⃗v to update the node’s position.
The mass spring algorithm will be performed on each hello
broadcast, thus, being always updated with the position of
Neighbors of node u. Additionally, it will take into account
dynamic changes on the MANET topology, which will cause
EESOA node role changes and thus, will update the spring
constant ki as well as the Force Fi,v. Here we can observe the
interaction between the mass spring model and the EESOA
algorithm. EESOA provides a back bone and the mass spring
model provides connectivity awareness, both critical applica-
tions for search and rescue on disaster areas.
Algorithm 1 Mass-Spring Algorithm
1: N(u) = Neighbors nodes within 1 − hop of node u
2: ku,v = Spring constant between node u and v
3: Fu,v = Force between node u and v
4: FT = Total Force
5: function FIND EQUILIBRIUM
6: FT := 0
7: for All N(u) do
8:
Neighbor Spring ku,v ← GetSpring(u, v)
9:
Neighbor Force Fu,v ← GetForce(ku,v)
10:
FT := FT + Fu, v
11: end for
12: UpdateNodePosition(u, FT )
13: end function
IV.
SIMULATION
In this section, we performed simulations to observe the
behavior of the mass-spring model implementation on EESOA.
Performance assessment will be conducted in terms of initial
and ﬁnal number of survivors found and coverage area.
A. Mass-spring model on EESOA on Java Simulator
A discrete-event Java-based simulator was implemented
using the Graphstream library v1.0 [21] [22]. The aforemen-
tioned was chosen since the focus of this research is to evaluate
the implementation of mass-spring model in a cluster-based
algorithm on a dynamic MANET [21]. Data trafﬁc and proto-
cols evaluation is out of the scope of this research. We will call
EESOA node to the implementation of a MANET node which
will be performing EESOA deﬁned at [9] when simulating.
Thereupon mass-spring model will be built-in on each EESOA
node. With the aforementioned, we are linking the mass-spring
behavior to the hierarchies generated by the cluster-based
algorithm. In addition, the mass-spring model on each EESOA
4
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

node will have a pre-deﬁned set of k constants as well as
equilibrium distances L for each EESOA node hierarchy. Thus,
each time an EESOA node receives a hello broadcast
message, the in-built mass-spring system will perform the
Algorithm 1. Consequently, each EESOA node will generate
a mass-spring model with the respective constant to all its
neighbors within one-hop. Algorithm 1 implementation will
take into account all the neighbor mass-spring models when
computing the ﬁnal movement vector ⃗v. Equilibrium will be
maintained by following (1). The prior deﬁned constants L and
k for each EESOA node will maintain a connectivity-aware
behavior on the MANET’s nodes by maintaining formation on
each neighbor within one-hop. This will ensure that each node
will try to stay within range L of its neighbors deﬁned by (1).
The simulation presented in this work assumes that each
node know the coordinates of its own position. Thus, the
EESOA node will share its location coordinates with neighbor-
ing nodes on each periodic hello broadcast message.
A minimum constant area range of reception of the node
and non dynamic k and L constants are assumed for this
simulation. With the previous deﬁned implementation, the re-
sulting MANET will have a virtual backbone thanks to EESOA
while expanding the coverage area thanks to the mass-spring
model without losing connectivity. Hence, the connectivity
awareness-emergent behavior of the proposal. Note that the
original vector ⃗v of movement might have been bigger but
thanks to mass-spring model the node will maintain a range,
hence, the connectivity emergent behavior.
B. Simulation Environment
The simulation was implemented on a java-based discrete-
event simulator. For the graphic user interface and MANET
simulation, the Graphstream library was used. The initial setup
parameters for this simulation is deﬁned in Table I.
TABLE I. SIMULATION SETUP
Parameter
Value
Simulation Area
50x50 mts
EESOA Nodes
20
Survivor Nodes
50
Mobility Model
Random Uniform Distribution
Java Version
Java SE 8
Graphstream Version
1.3
Node Range
10 mts
Survivor Groups
3
Figure 4 illustrates an example of a simulation setup with
10 EESOA nodes formation and a 30 survivor nodes distributed
in a random uniform manner on a 50x50 mts grid.
C. Simulation Scenarios
To evaluate the performance of mass-spring implemen-
tation with EESOA we require to deﬁne scenarios, which
represents realistic disaster circumstances. For the purposes of
this research we will focus on the deployment conﬁguration
for both, either survivors or MANET drones. Disaster scenarios
will constraint the survivors distribution on the affected area
depending the catastrophe. On earthquakes, leaves groups of
survivor trapped in a dense concentration, or in ﬂoods can leave
survivors scattered on the area. Similarly, the deployment of
drones in disaster areas depends on the terrain conditions. If
Figure 4. Simulation Example
terrain are inhospitable the deployment is required to be done
by air otherwise they can be dropped in a scattered manner.
Therefore, we will deﬁne two conﬁgurations with which
we will be able to generate such scenarios. Such conﬁgurations
will be deﬁned as SPREAD and DENSE. For the MANETs
nodes, such conﬁguration will be translated in terms of de-
ployment on the disaster area. Likewise, for the survivors this
will be translated in terms of how the survivors are scattered
or deployed across the disaster zone.
The ﬁrst conﬁguration will be named SPREAD. For the
survivors, this will be a random uniform distribution de-
ployment across the simulation area. For the drones, will be
translated in a connected graph placed on a random uniform
distribution manner.
The second conﬁguration will be named DENSE. For the
survivors, this will consist on a concentration of survivors.
The groups of survivors will deﬁne the number of survivors
per group. The groups of survivors will maintain a minimum
distance among them. For the drones, a random position on the
grid will be used as long as the condition that the generated
graph is connected is fulﬁlled.
Figure 5. Deployment scenarios
5
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

The ﬁndings presented in this work, will cover a total of
four scenarios that will be simulated as shown in Figure 5.
In Figure 7 it can be observed the initial state of the
scenarios combination from Figure 5 in Figure 7a, 7c, 7e and
Figure 7g. Likewise the ﬁnal state will be shown in Figure 7b,
7d, 7f and Figure 7h.
SPREAD survivors with DENSE MANET deployment
scenario. This scenario addresses circumstances in which the
survivors are scattered across the affected area and the only
way to deploy the drones is in a dense concentration such as
air drop from an aircraft, helicopter, etc. An example of such
simulation of this scenario is shown in Figure 7a and Figure 7b.
SPREAD survivors with SPREAD MANET deployment
scenario. This scenario addresses circumstances in which the
survivors are scattered across the affected area and drones can
be spread across area. An example a simulation of this scenario
is shown in Figure 7c and Figure 7d.
DENSE survivors with DENSE MANET deployment sce-
nario. This scenario addresses circumstances in which the
survivors are clustered across the affected area in groups and
drones are deployed in a dense concentration. Such scenario
denotes disasters in which the survivors are trapped and drones
are deployed by air due to the inhospitable terrain to deploy
them by ground vehicles. An example a simulation of this
scenario is shown in Figure 7e and Figure 7f.
Finally DENSE survivors with SPREAD MANET deploy-
ment scenario. This scenario addresses circumstances in which
the survivors are across the affected area in groups and drones
can be spread across the area. Such scenario denotes disasters
in which the survivors are trapped and drones can be deployed
by air or ground. An example a simulation of this scenario is
shown in Figure 7g and Figure 7h.
It can be observed in Figure 7b and Figure 7h that regard-
less the conﬁguration deployment either DENSE or SPREAD
the virtual back bone will be formed. Also note that that
the nodes maintain a range of distance among them. Observe
that for purposes of disaster applications, when we have a
DENSE deployment for survivors, as shown in Figure 7e,
if a MANET drone reaches one survivor of such group,
neighboring survivors of such survivor could provide their data
to the connected survivor.
D. Simulation Metrics
With the combination of the deﬁned scenarios, metrics to
evaluate the performance of the mass-spring implementation
on EESOA are required. We will deﬁne the metrics based
on the initial and ﬁnal deployment. This will be applied for
the MANET as well as the survivors. Thus, we have deﬁned
two metrics. Coverage Area (CA) which will be deﬁned as an
approximation of the cumulative area which each node of the
MANET can receive any survivor signal, see (2) below.
CA ≈
n
[
i=1
Ai
(2)
Where:
Ai The area of each ith ESSOA node
n The number of EESOA nodes
The second metric will be the number of the survivors
found. Both metrics are key factors to take into account when
deploying a MANET for disaster applications.
We will obtain the initial and ﬁnal CA as well as the
number of survivors found. The ﬁnal metrics will be computed
once the simulation have converged for comparison purposes.
Given the mass-spring model and given and equilibrium dis-
tance deﬁned on (1). We will deﬁne a converged state of the
simulation once the nodes cannot longer move since the sum of
those forces have cause them to reach the equilibrium. When
the simulation converges, neither the CA or survivors found
metrics will change from such converged time onwards.
E. MANET node
This work considers the node as an autonomous wireless
mobile device with a non-rechargeable battery. It is assumed
that the node knows its coordinates (x, y). The node coverage
area will be assumed to be a r square. Therefore, the CA will
be square centered on the MANET node regardless its (x, y)
location as denoted in Figure 6.
S0
S1
S2
S3
Y-Plane Direction
X-Plane Direction
Receiver range
Figure 6. EESOA node coverage area
V.
SIMULATION RESULTS
Simulation was performed in a Java discrete-event simula-
tor paired with the Graphstream library. The setup parameters
for the is described in Table I. Simulation was performed with
15 drones and 50 survivors in a 50x50 mts grid area. The
aforementioned was performed for the 4 scenarios deﬁned in
Figure 5. For each scenario, 10 simulations were performed
until each simulation reached a converged state as deﬁned in
Section IV-C.
A. Dense Manet Spread Survivors Scenario
The ﬁnal coverage area was signiﬁcantly greater than the
initial when the initial deploy conﬁguration for nodes was
DENSE as shown in Figure 8. On average, the ﬁnal area
showed an increase ratio of 3.7 and got to 82% from the
ideal coverage area (1500 mts2). Likewise, the ﬁnal number
of survivors found was greater than initial ﬁnding an average
of 22 survivors (See Figure 9), showing an increase of 28%
more survivors found.
6
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

(a) Initial Dense MANET deployment with Spread survivors
(b) Final Dense MANET deployment with Spread survivors
(c) Initial Spread MANET deployment with Spread survivors
(d) Final Spread MANET deployment with Spread survivors
(e) Initial Dense MANET deployment with Dense survivors
(f) Final Dense MANET deployment with Dense survivors
(g) Initial Spread MANET deployment with Dense survivors
(h) Final Spread MANET deployment with Dense survivors
Figure 7. Initial and Final Simulation Scenarios Combination
7
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

1
2
3
4
5
6
7
8
9
10
0
500
1,000
1,500
305
321
330
353
283
345
333
353
364
350
1,158 1,202
1,262 1,280
1,222 1,179
1,259 1,227 1,259 1,293
Simulations
Coverage Area (mts2)
Initial+Coverage+Area
Final+Coverage+Area
Figure 8. Dense MANET & Spread Survivors: Coverage Area
1
2
3
4
5
6
7
8
9
10
0
10
20
30
40
13
9
11
7
5
9
2
8
7
9
23
21
24
19
25
21
21
21
25
21
Simulations
Survivors Found
Initial+Survivors+Found
Final+Survivors+Found
Figure 9. Dense MANET & Spread Survivors: Survivors Found
B. Spread Manet Dense Survivors Scenario
When deployment of drones was SPREAD the increase of
CA against the initial state was less than when the conﬁgura-
tion for drones was DENSE. With a ratio of 1.4 as Shown in
Figure 10. Also the ﬁnal CA was 77% of the ideal coverage
area. The number of survivors found was bigger than the
DENSE MANET (See Figure 11). With SPREAD survivors
with an average of 23. Thus, with an increase of 19.4% more
survivors found against the model without the mass-spring.
1
2
3
4
5
6
7
8
9
10
0
500
1,000
1,500
803
781
757
870
819
892
908
729
822
785
1,309
1,020
1,083
1,191
1,258 1,218
1,167
980
1,192 1,156
Simulations
Coverage Area (mts2)
Initial+Coverage+Area
Final+Coverage+Area
Figure 10. Spread MANET vs Dense Survivors: Coverage Area
1
2
3
4
5
6
7
8
9
10
0
10
20
30
40
11
18
11
17
19
10
17
6
6
0
19
24
24
21
26
16
19
13
27
23
Simulations
Survivors Found
Initial+Survivors+Found
Final+Survivors+Found
Figure 11. Spread MANET vs Dense Survivors: Survivors Found
C. Spread Manet Spread Survivors Scenario
On a SPREAD MANET conﬁguration, increase ratio was
similar against the SPREAD MANET with DENSE survivors
scenario with a 1.43 increase ratio and ∼80% of the ideal
coverage area (See Figure 12). On this conﬁguration the
percentage of survivors found not as signiﬁcant against the
two aforementioned scenarios with a increase of 9.2% (See
Figure 13). This is consistent since CA increase was not
signiﬁcant, when SPREAD, L limits further CA expansion.
1
2
3
4
5
6
7
8
9
10
0
500
1,000
1,500
803
781
757
870
819
892
908
729
822
785
1,314
1,069 1,090
1,191
1,253 1,290
1,180
974
1,187 1,147
Simulations
Coverage Area (mts2)
Initial+Coverage+Area
Final+Coverage+Area
Figure 12. Spread MANET vs Spread Survivors: Coverage Area
1
2
3
4
5
6
7
8
9
10
0
10
20
30
17
12
11
15
14
15
10
18
16
15
23
14
17
18
20
20
16
21
22
18
Simulations
Survivors Found
Initial+Survivors+Found
Final+Survivors+Found
Figure 13. Spread MANET & Spread Survivors: Survivors Found
8
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

D. Dense Manet Dense survivors
As in scenario described in section V-A, with DENSE
MANET deployment the increase ratio was 3.7 with an 83% of
the ideal CA. CA comparison is shown in Figure 14. Similarly,
as shown in Figure 15, the survivors found percentage increase
against the initial state was 30% more survivors found. We
can observe that on both scenarios V-A and V-D, when the
deployment of nodes is DENSE, performance is better.
1
2
3
4
5
6
7
8
9
10
0
500
1,000
1,500
305
321
330
353
283
345
333
353
364
350
1,210
1,264 1,280 1,241 1,255
1,172
1,268 1,235 1,283 1,304
Simulations
Coverage Area (mts2)
Initial+Coverage+Area
Final+Coverage+Area
Figure 14. Dense MANET & Dense Survivors: Coverage Area
1
2
3
4
5
6
7
8
9
10
0
10
20
30
0
1
10
10
0
10
0
0
0
8
23
19
17
21
25
18
16
25
14
12
Simulations
Survivors Found
Initial+Survivors+Found
Final+Survivors+Found
Figure 15. Dense MANET & Dense Survivors: Survivors Found
To have a global perspective and for comparison purposes
in Figure 16 and Figure 17 we show the ﬁnal CA and
number of survivors for the 4 scenarios. Nodes deployment
are denoted by the preﬁx “D” for DENSE deployment and “S”
for SPREAD. Figure 16 shows an overall better performance
for CA when the deployment of MANET nodes is DENSE.
In Figure 17 when the MANET nodes deployment is DENSE
and survivors deployment is SPREAD performance is better.
VI.
CONCLUSION AND FUTURE WORK
This paper proposed the implementation of the mass-spring
model on the EESOA cluster-based algorithm for natural
disaster applications. A java-based discrete event simulator
using the Graphstream library was developed as shown in Sec-
tion IV-A. The decentralized mass-spring interaction among
nodes provided a connected-awareness emergent behavior.
1
2
3
4
5
6
7
8
9
10
500
600
700
800
900
1,000
1,100
1,200
1,300
1,400
1,500
Simulations
Coverage Area mts2
DMANET+DSurvivor
SMANET+SSurvivor
DMANET+SSurvivor
SMANET+DSurvivor
Figure 16. MANET & Survivors scenarios Area comparison
1
2
3
4
5
6
7
8
9
10
0
10
20
30
40
Simulations
Survivors Found
DMANET+DSurvivor
SMANET+SSurvivor
DMANET+SSurvivor
SMANET+DSurvivor
Figure 17. MANET & Survivors scenarios: Survivors comparison
Simulation results have shown that the implementation of
the mass-spring on EESOA shows promise. For coverage area
the scenarios in which the MANET deployment conﬁguration
is DENSE with an average of 82% of the ideal CA and an
increase ratio of at least 3.7. For the number of survivors found
we can see that there is no clear improvement if the layout
of the survivors is Dense DENSE or SPREAD. Nevertheless,
when the MANET conﬁguration was DENSE we can see in
Figure 17 a slight increase in performance with at least 28%
increase against the initial state. The average of survivors
found against the ideal (50) is at least 38%. For the cases
in which the deployment of survivor was DENSE, such 38%
means we found more than one third of the survivors. The
aforementioned shows promise when we have a group of
survivors in a DENSE deployment. For the actual search and
rescue operation, if we ﬁnd at least one survivor of a group
of survivors, neighboring survivors could use the connected
survivor as relay.
9
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

Thanks to the mass-spring model implementation on the
EESOA nodes, the nodes will always generate a vector ⃗v with
which will try to achieve equilibrium on the system. Thus,
taking into account the range of the nodes plus their L and k
constants, nodes will expand as long as possible increasing the
probability of ﬁnd more survivors. The aforementioned will be
performed without compromising connectivity.
The implementation of the mass-spring model on the
EESOA cluster based algorithm shows promise in performance
on scenarios when the MANET deployment is DENSE and the
survivors layout on the disaster area is DENSE. Hence, provid-
ing a de-centralized cluster based algorithm which is efﬁcient
for communication as shown in [9] while maintaining the
connectivity as a constraint as deﬁned on [17] by implementing
the mass-spring model. Finally proposing a connectivity aware
model with an self-organized emergent behavior.
Application of MANETs with UAVs for operations in
disastrous areas is an undergoing increasing research ﬁeld
[8]. L and k constants parameter values for EESOA optimal
performance is left for future research. Moreover optimal
values for speciﬁc disaster scenarios such as high density
survivors concentration (evacuation points) or uniform dis-
tribution (ﬂoods, typhoon) remains as an ongoing research.
In future work simulations on a large scale scenario should
be performed. Battery consumption should be included in
future simulations as well as delay and propagation model.
The challenge of an autonomous decentralized exploration
algorithm that takes full advantage of the EESOA backbone
and mass-spring system remains open. Future work includes
the implementation of the proposed algorithm on real UAVs.
REFERENCES
[1]
N. Islam and G. S. Shaikh, “Towards a disaster response system based
on cognitive radio ad hoc networks,” in Proceedings of Second Interna-
tional, Conference on Next Generation Computing and Communication
Technologies (ICNGCCT 2015), UAE, 2015.
[2]
N. Kumar, A. Agrawal, and R. Ahmad Khan, “Emergency alert net-
works for disaster management: Applications perspective,” in 2018
International Conference on Research in Intelligent and Computing in
Engineering (RICE), El Salvador, Aug 2018, pp. 1–5.
[3]
B. Ojetunde, N. Shibata, and J. Gao, “Secure payment system utilizing
manet for disaster areas,” IEEE Transactions on Systems, Man, and
Cybernetics: Systems, vol. 49, no. 12, pp. 2651–2663, Dec 2019.
[4]
J. A. L. Calvo, G. Alirezaei, and R. Mathar, “Wireless powering of
drone-based manets for disaster zones,” in 2017 IEEE International
Conference on Wireless for Space and Extreme Environments (WiSEE),
Montreal, QC, Canada, Oct 2017, pp. 98–103.
[5]
H. Verma and N. Chauhan, “Manet based emergency communication
system for natural disasters,” in International Conference on Computing,
Communication Automation, Noida, India, May 2015, pp. 480–485.
[6]
N. Aschenbruck, M. Frank, P. Martini, and J. Tolle, “Human mobility
in manet disaster area simulation - a realistic approach,” in 29th Annual
IEEE International Conference on Local Computer Networks, Nov
2004, pp. 668–675.
[7]
H.-C. Jang, Y.-N. Lien, and T.-C. Tsai, “Rescue information system
for earthquake disasters based on manet emergency communication
platform,” in Proceedings of the 2009 International Conference on
Wireless Communications and Mobile Computing (IWCMC 2009).
New York, NY, USA: ACM, Jun 2009, pp. 623–627.
[8]
M. Deruyck, J. Wyckmans, W. Joseph, and L. Martens, “Designing
UAV-aided emergency networks for large-scale disaster scenarios,”
EURASIP Journal on Wireless Communications and Networking, vol.
2018, no. 1, p. 79, Apr. 2018.
[9]
F. E. Balart-Sanchez, L. F. Gutierrez-Preciado, and J. G. Olascuaga-
Cabrera, “Minimizing routing broadcast and packet loss in wireless
ad-hoc networks with a cluster-based self-organized algorithm as mac
protocol,” in 2019 IEEE 9th Annual Computing and Communication
Workshop and Conference (CCWC), Las Vegas, NV, USA, Jan 2019,
pp. 0499–0505.
[10]
D. Konings, F. Alam, F. Noble, and E. M. Lai, “Springloc: A device-
free localization technique for indoor positioning and tracking using
adaptive rssi spring relaxation,” IEEE Access, vol. 7, pp. 56 960–56 973,
Apr 2019.
[11]
M. Rath and B. Pati, “Appraisal of soft computing methods in collabo-
ration with smart city applications and wireless network,” International
Journal of e-Collaboration (IJeC), vol. 2018, pp. 27–42, Oct 2018.
[12]
W. Yu, J. Choi, Y. Kim, W. Lee, and S. Kim, “Self-organizing
localization with adaptive weights for wireless sensor networks,” IEEE
Sensors Journal, vol. 18, no. 20, pp. 8484–8492, Oct 2018.
[13]
K. Derr and M. Manic, “Wireless sensor networks—node localization
for various industry problems,” IEEE Transactions on Industrial Infor-
matics, vol. 11, no. 3, pp. 752–762, June 2015.
[14]
J. Eckert, F. Villanueva, R. German, and F. Dressler, “Distributed mass-
spring-relaxation for anchor-free self-localization in sensor and actor
networks,” in 2011 Proceedings of 20th International Conference on
Computer Communications and Networks (ICCCN), Maui, HI, USA,
July 2011, pp. 1–8.
[15]
J. Eckert, H. Lichte, F. Dressler, and H. Frey, “On the feasibility of
mass-spring-relaxation for simple self-deployment,” in 2012 IEEE 8th
International Conference on Distributed Computing in Sensor Systems,
Hangzhou, China, May 2012, pp. 203–208.
[16]
S. Lee, H. Woo, and C. Lee, “Wireless sensor network localization with
connectivity-based reﬁnement using mass spring and kalman ﬁltering,”
EURASIP Journal on Wireless Communications and Networking, vol.
2012, pp. 152–162, Dec 2012.
[17]
F. G. Jean-Matthieu Etancelin, Andre Fabbri and M. Rosalie, “Dacy-
clem: A decentralized algorithm for maximizing coverage and lifetime
in a mobile wireless sensor network,” Ad Hoc Networks, vol. 87, pp.
174–187, May 2019.
[18]
L. Bao and J. J. Garcia-Luna-Aceves, “Topology management in ad hoc
networks,” in Proceedings of the 4th ACM International Symposium on
Mobile Ad Hoc Networking & Computing, ser. MobiHoc ’03.
New
York, NY, USA: ACM, Jun 2003, p. 129–140.
[19]
I. Dietrich and F. Dressler, “On the lifetime of wireless sensor net-
works,” ACM Trans. Sen. Netw., vol. 5, no. 1, pp. 1–39, Feb. 2009.
[20]
J. G. Olascuaga-Cabrera, A. Mendez-Vazquez, and E. L´opez-Mellado,
“A novel distributed energy-efﬁcient self-organized algorithm for wire-
less ad hoc networks,” in 2012 Eighth International Conference on
Intelligent Environments, Guanajuato, Mexico, June 2012, pp. 19–26.
[21]
A. Dutot, F. Guinand, D. Olivier, and Y. Pign´e, “Graphstream: A tool
for bridging the gap between complex systems and dynamic graphs,” in
Proceedings of Emergent Properties in Natural and Artiﬁcial Complex
Systems. (EPNACS), Dresden, Germany, Oct. 2007.
[22]
Litis
-
ri2c,
documentation
graphstream.
[Online].
Available:
http://graphstream-project.org/doc/ (Accessed May 4, 2020).
10
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-794-8
ICWMC 2020 : The Sixteenth International Conference on Wireless and Mobile Communications

