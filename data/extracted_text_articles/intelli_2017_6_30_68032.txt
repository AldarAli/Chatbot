An Intelligent Help-Desk Framework for Effective Troubleshooting 
Miguel Ángel Leal , Antonio Martín, Jorge Ropero, Julio Barbancho, Carlos León 
Department of Electronic Technology 
University of Seville 
Seville, Spain 
e-mail: maleal@us.es, toni@us.es, jropero@dte.us.es, jbarbancho@us.es, cleon@us.es. 
 
 
Abstract— Nowadays, technological infrastructure requires an 
intelligent virtual environment based on decision processes.  
These processes allow the coordination of individual elements 
and the tasks that connect them. Thus, incident resolution 
must be efficient and effective to achieve maximum 
productivity. In this paper, we present the design and 
implementation of an intelligent decision-support system 
applied in technology infrastructure at the University of Seville 
(Spain). We have used a Case Based Reasoning (CBR) 
methodology and an ontology to develop an intelligent system 
for supporting expert diagnosis and intelligent management of 
incidents. This is an innovative and interdisciplinary approach 
to knowledge management in problem-solving processes that 
are related to environmental issues. Our system provides an 
automatic 
semantic 
indexing 
for 
the 
generating 
of 
question/answer pairs, a case based reasoning technique for 
finding similar questions, and an integration of external 
information sources via ontologies. A real ontology-based 
question/answer platform named ExpertSOS is presented as a 
proof of concept. The intelligent diagnosis platform is able to 
identify and isolate the most likely cause of infrastructure 
failure in case of a faulty operation. 
Keywords-Case Based Reasoning; Helpdesk; Artificial 
Intelligence; Fuzzy Logic; Ontology. 
I.     INTRODUCTION 
Today, troubleshooting intelligent management is viewed 
as one of the fastest growing areas of research, while new 
applications are developed in decision-support systems. 
Some of the challenges on these systems depend on the 
integration of intelligent systems in existing conventional 
systems. Many researchers are working on these topics, but 
none of them have focused on normalizing the management 
of knowledge. 
In this work, we study a technology infrastructure 
troubleshooting maintenance centre at the University of 
Seville (Spain). This paper shows how semantic web and 
artificial intelligent technologies can be utilized in help-desk 
systems from the point of view of the content indexer. We 
also describe an inteligent decision-based semantic service 
named ExpertSOS. This is an example of how to apply a 
semantic technique for extracting troubleshooting knowledge. 
Clients may send trouble symptoms or questions to the 
system. Then, the system provides an expert answer to these 
questions. Moreover, this work proposes a method to 
efficiently search for the expert information on an Intelligent 
Decision Support System (IDSS) with multiple independent 
information sources.  
Typical work in related fields includes intelligent agents. 
Ottosen et al. [1] suggest a heuristic model that simulates 
real-world troubleshooting system. Chu et al. [2] describe 
how data mining technologies can be used to build a rule-
based system for customer service automatically. Cebi et al. 
[3] propose an expert system to help shipboard personnel 
solving ship auxiliary machinery troubleshooting. Zahedi et 
al. [4] investigate fuzzy troubleshooting of a complex crude 
oil desalination plant. Sierra et al. [5] describe a maintenance 
system for a microsatellite. Abdul-Wahab et al. [6] describe 
a 
fuzzy 
logic-based 
technique 
to 
design 
real-time 
troubleshooting advice. 
Although there have been great advances in intelligent 
troubleshooting management, very few studies investigate 
the use of hybrid techniques to integrate the acquired 
knowledge from management experience based on Case 
Based Reasoning (CBR) engines and ontologies. This paper 
presents the integration of several computational intelligence 
techniques in ontology search and CBR. This way, a real-
time intelligent assistant has been developed to automatically 
find patterns for the incidents and possible solutions from the 
stored cases in the system knowledge database. We present a 
method to efficiently retrieve knowledge from an intelligent 
decision support system (IDSS) with a semantic source. We 
have designed and developed an intelligent decision support 
environment named ExpertSOS to assist the customer 
service center of a large University within the technological 
infrastructure. In the following sections, we review the CBR 
framework and its features for implementing the reasoning 
process over ontologies. Section 2 presents a general 
overview about the technology infrastructure at the 
University of Seville, analyzing its failures and discovering 
the needs that push us toward new intelligent help desk 
paradigms. Section 3 analyzes ontology requirements and 
proposes the design criteria to guide the development of 
ontologies for knowledge-sharing purposes. Section 4 
examines the design and development of the intelligent 
ExpertSOS platform, while Section 5 presents the Graphic 
User Interface (GUI).  Section 6 shows tests and results. 
Finally, Section 7 shows the main conclusions of our work.  
II.     GENERAL OVERVIEW 
The historic University of Seville (UoS) is one of the top-
ranked universities in Spain. The UoS has a present student 
body of over 75,000, 4,500 teaching staff, and 2,500 
administrative staff. UoS provides a robust infrastructure 
utilizing state-of-the-art technologies, with 1,200 wireless 
access points, 55,000 laptops, and 25,000 PCs distributed in 
98
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

the more than 30 buildings. In this scenario, UoS information 
systems and technology infrastructure must respond to the 
requirements of the community by providing additional 
quality functionalities. The Service of Information and 
Communication (SIC) of the UoS is responsible for 
Information Technology issues and offers technical services 
to the university. SIC offers a range of technical services for 
the university community, which include the architecture, 
installation, administration, and maintenance of servers; back 
end services, such as monitoring, updating, patches, security, 
data integrity assurance, and license management; computer 
network maintenance, including the backbone campus 
network, student hosting, and wireless networking. Moreover, 
SIC provides services such as e-mail, file storage, online 
courses, etc., and is responsible for maintaining all 
administrative applications. Due to the wide variety of 
technical services, resources and software that can be found, 
SIC has got a team of highly-trained technicians (45 workers) 
in the different university campus buildings. This group 
performs a varied set of tasks, assisting the university 
community with a wide range of services. The list includes, 
but is not limited to maintenance and monitoring resources, 
installation of computer equipment, security, monitoring 
hardware requirement assessment, virus and malware 
removal, hardware installation and troubleshooting, software 
troubleshooting, network connection issues, data recovery 
services, etc. 
Derived from the various devices, heterogeneity and 
different group of programs can be found in this 
infrastructure, and given the lack of the standardization, the 
numerous devices and resources cause different types of 
diagnostic information when an incident occurs. Thus, the 
UoS installed a help desk platform named TSOS (Technical 
SOS). TSOS was designed to support and answer calls from 
customers and find the answer to their problems. A call 
center was responsible for receiving reports on faulty 
machines, or inquiries from their customers. When a 
problem is reported, a TSOS service engineer suggests a 
series of “checkpoints” to the technicians to solve the 
reported problem. Such suggestions are based on past 
experience or extracted from a customer service database. 
The database contains previous service records that are 
identical or similar to the current one. When an online 
session cannot solve the problem, the service center will 
dispatch the service engineers to the customer’s site as soon 
as possible, in order to carry out an onsite repair. This 
traditional tool has limited functionalities. Three major 
problems are identified: 
1) Choosing the appropriate index terms for a question–
answer pair is often time consuming and difficult. 
2) There are different conventions in indexing. As many 
people are taking part on it, the content is eventually 
unbalanced. For example, a technician may use a few general 
index terms to describe an answer, whereas another one may 
use a larger amount of specific terms. 
3) No system gathers the experience gained during the 
actions. Thus, this information is not available to the other 
technicians. 
With the advent of technology, it is now feasible to 
provide effective and efficient help desk service over a 
global platform to meet the technicians’ requirements. Thus, 
we present a method to efficiently retrieve knowledge from 
an Intelligent Decision Support System (IDSS) with a 
semantic source. The IDSS plays a significant role, offering 
a wide range of realistic possibilities for assistance with 
incidents. Instead of asking for the help of a desk technician, 
or searching through the Internet for an answer, with the 
intelligent help desk system, the technician just must 
describe the problem and the agent may automatically search 
the appropriate knowledge bases. Finally, the system 
presents a consolidated answer, being the most likely in the 
first place. An intelligent help desk can help finding and 
filtering information. The IDSS can handle complex 
problems, applying domain-specific expertise to assess the 
consequences of executing its recommendation [7]. In 
addition, the decisions supported by the IDSS tend to be 
more consistent, and better managed in terms of managing 
uncertainty in the outcome.  
A. System architecture 
Our objective is to design an effective intelligent system 
with an ontology mapping mechanism for troubleshoot 
computing environment. ExpertSOS is a research tool built 
to explore the possibilities and the potential of introducing 
ontologies into decision-support systems. With ExpertSOS, 
it is possible to capture, understand and describe the 
knowledge on troubleshooting in a technology infrastructure. 
This intelligent system, running on a server, is programmed 
using PHP/MySql, it captures the domain expert knowledge 
in Troubleshooting FAQ (Frequently Asked Questions) 
process into the knowledge base. ExpertSOS is an integrated 
tool within an incident management system. 
Based on these characteristics, we have created an 
intelligent decision system named ExpertSOS for providing 
automated decision analysis assistance in the management of 
failures. The system allows technicians and engineers to 
quickly gather information and process it in several ways, in 
order to make an intelligent diagnosis and arrive at an 
efficient solution. This is achieved by using intelligent and 
knowledge-based methods. The system architecture is shown 
in Figure 1.  
 
Figure 1.  System Architecture.  
 
 
The elements of the system are the following: 
– A user interface: for queries and case knowledge 
acquisition. This module is mainly for acquiring case-related 
99
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

knowledge so as to build up and maintain databases such as 
the case library, the ontology library, the similarity matrix 
library and the global vocabulary library [8]. 
– A CBR engine: When users input case attributes, this 
processes the computing algorithm and prompts with similar 
cases for reference. 
– A case knowledge sharing converter: the major 
function of this module is to offer standards for the 
translation and the mapping of domain knowledge elements. 
III.    ONTOLOGY DESIGN AND DEVELOPMENT 
The effectiveness of fault management is heavily 
dependent on the algorithms that are available for diagnosing 
and determining the source of a problem. Knowledge 
management 
is 
concerned 
with 
the 
representation, 
organization, acquisition, creation, use, and evolution of 
knowledge in its many forms. Nowadays, there are different 
techniques commonly used to manage the knowledge, such 
as topology analysis, rule-based method, decision tree, 
dependency graphs, code book technique, Bayesian logic 
approach, neural networks, etc. However, these techniques 
find it difficult to catch the semantic meanings of the user 
requests and the cases stored in the knowledge base. For this 
purpose, it is necessary to include capabilities to capture the 
semantic meanings of the managed information and data [9].  
In this work, we use a hybrid technique, which consists 
of a CBR system and ontology. Our IDSS architecture 
operates through ontologies for knowledge acquisition to 
allow learning and reasoning. This higher level of 
understanding can be achieved through processing of the 
information based on semantics, which is not possible by 
considering a document as a bag of words. Semantic 
technologies are usually based on ontologies and play a 
central role in semantic applications by providing a shared 
knowledge about the objects in real world. Ontologies are 
specifications of concepts and relations among them and 
provide a powerful way to organize information. Ontologies 
promote reusability and interoperability among different 
modules and their main goal is to support the interchange of 
information 
[10]. 
This 
work 
follows 
an 
iterative 
development process in the ontology-engineering phase and 
defines the ontologies needed to be used together with the 
current application. 
B. Case type attribute 
In order to make an ontology-based intelligent retrieval, 
we need to build a case knowledge base with inheritance 
structure. 
We developed these ontologies in Ontology Web 
Language (OWL), by building hierarchies of classes 
describing concepts and relating the classes to each other 
using properties. We also used the Resource Description 
Framework (RDF) to define the structure of the metadata, 
describing knowledge management of the incidents and the 
Semantic Web Rule Language (SWRL) to specify rules that 
validate the defined constraints. In order to express this 
model, we have created an ontology called OntoSOS, based 
on pairs Question–Answer (QA), and explicitly specifying 
the relationships between the ontology classes. The ontology 
and its sub-classes are established according to their 
taxonomies, as shown in Figure 2. 
 
 
Figure 2.  Ontology. 
The ontology can be regarded as the quaternion 
OntoSOS:={technician_profile, object, symptom, action) 
where the profiles represent the technical kinds; the objects 
are the resources with the underlying problem or fault; 
symptoms are the indications that can be observed directly 
by the customer or the technician; finally, actions are 
associate operations to solve the problem. 
C. Creation of the ontology 
This work uses an ontology technique for representing 
information, so that CBR techniques can be used. The 
ontology-based architecture is made of a set of knowledge, 
an ontology of the domain, and intelligent access to the set of 
knowledge. For every request, the intelligent system searches 
into the cases stored in the knowledge base. The cases are 
grouped using a metadata language model. Retrieved cases 
are ranked using a semantic relevance method, and are 
summarized to generate optimal solutions.  
First, we started with a core ontology including the basic 
concepts and a simple hierarchy. Then, we experimented 
with this ontology and fixed the issues in reasoning and 
searching. These steps were repeated until we ended up with 
a stable ontology containing 35 classes and 191 properties in 
the domain. When the model got large enough, we needed 
some tools to help for their management. Several tools may 
be used in this process, such as Protégé. Protégé is a software 
tool that supports the specification and maintenance of 
terminologies, ontologies, and knowledge bases. This 
framework is an ontology development environment that 
provides tools for authoring ontologies [11].  Protégé uses 
OWL and RDF as an ontology language to establish 
semantic relations. In Figure 3, we show a screenshot of the 
Protégé editor with a section of the ontology class hierarchy. 
After the ontology is established, the case base is 
generated from a file store where each case is represented 
with RDF syntax. Knowledge for this system was taken from 
the expert domain through interviews and discussions. The 
dataset currently consists of over 7,200 QA pairs. 
 
100
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

 
Figure 3.  Prótegé Ontology Development 
IV.    INFERENCE ENGINE 
We proposed CBR as a plausible approach to profit from 
the 
framework 
usage 
experience. 
When 
developing 
applications from a framework, knowledge about the way in 
which similar domain actions were previously implemented 
is very useful in order to deal with a new domain action. 
Thus, we developed a CBR system on framework usage 
experiences. CBR is a problem-solving paradigm that uses 
knowledge of relevant past experiences (cases).  
These usage experiences explain, through a sequence of 
steps, how to implement concrete domain actions (incidents) 
using specific pieces of the framework. This knowledge acts 
as a prescriptive guide to the framework use and constituted 
the cases of our system.  
Three basic tasks constitute the cycle of the CBR systems: 
the retrieval of the case that solves the most similar problem 
to the current one, the adaptation of the retrieved case when 
it does not exactly fit the current problem and the case 
learning.   
In this study, we used the CBR object-oriented 
framework development environments jcolibri, that is 
conceived to help application designers to develop and 
quickly prototype CBR systems. Jcolibri is an object-
oriented framework in Java, along with a number of 
supporting tools that is designed to facilitate the construction 
of CBR systems. Jcolibri has been designed as a wide 
spectrum framework able to support several types of CBR 
systems from the simple nearest neighbor approaches based 
on flat or simple structures to more complex Knowledge 
Intensive ones. Its broad coverage of methods used in case-
based recommendation makes jcolibri specially suited for 
building this type of systems. A key feature of jcolibri 
authoring tools is the use of templates. In order to facilitate 
the development of systems, we have been investigating how 
to reuse templates that abstract past CBR systems. In order to 
test these ideas we have developed a case base of templates 
for building case-based recommender systems which 
effectiveness has been tested through empirical evaluation. 
Templates store the control flow of the CBR applications and 
include semantic annotations conceptualizing its behavior 
and expertise. 
A common scenario in an intelligent help desk system is 
finding whether similar faults have been processed before. 
The intelligent diagnosis platform should be able to identify 
and isolate the most likely cause of infrastructure failure in 
case of a faulty operation. In an IDSS, a response can be 
defined as the activation, coordination, and management of 
the appropriate personnel, equipment, communication links, 
and user information. A potential user provides initial ideas, 
and possibly a description of the incident. The intelligent 
help system must retrieve the most likely existant cases, and 
a possible solution to the given incidents. The goal of the 
information retrieval (IR) system should be retrieving only 
those documents that satisfy the user needs, not a bunch of 
unnecessary data. To improve the efficiency of the system, 
an original rank algorithm has been developed. It consists of 
a combined method, which uses a metadata model and 
semantic matrix factorization to group the top-ranking cases 
into different categories, while reducing the impact of the 
general and common information contained in these cases. 
This method relates the similarity between strings and the 
calculated correlation belonging to the knowledge in the 
ontology, as shown in Figure 4. 
 
 
Figure 4.  Knowledge Recovery scheme 
The indexing algorithm provides an efficient way to 
search for possible solutions. The indices choice is important 
to retrieve the right case at the right time. ExpertSOS 
retrieves the cases stored in the knowledge base and ranks 
the retrieved cases by establishing a relevance method to the 
request using similarity measurement.  The similarity 
between indications and the attributes is determined by 
calculating the weighted sum of the similarities between the 
values for each attribute. 
V.    GRAPHIC USER INTERFACE (GUI) 
The acceptability of the system on the part of technicians 
depends to a great extent on the quality of the user interface 
component. The main goal of our GUI is to gauge the users’ 
satisfaction and trust in the usage of a live help system. We 
use a simple and useful interface to achieve maximum 
usability and to reduce the number of ambiguous queries. 
Each service record consists of the customer account 
information and service details. A login system receives a set 
of credentials from the user, through single sign on (SSO) 
systems, which mostly use lightweight directory access 
protocol (LDAP) authentication. This way, technicians can 
interact with the system to fill in the gaps to retrieve the right 
troubleshooting cases. For this purpose, a keyword-based 
search service is available on the system, as can be seen in 
Figure 5. 
 
101
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

 
Figure 5.  Technical User Interface 
Usually, a query is transformed into an internal form so 
that the system can interpret it. The raw query submitted by 
the user should be processed before searching. Several 
processing tasks can be involved, such as stop word 
elimination, stemming, and other application-specific tasks. 
Besides, the user must input the keywords in the user 
interface. The aim of the interface is to ease the interaction 
between the user and the system in a natural way. The 
preprocessor query module translates a query written in 
natural language into a high-level code. During the 
preprocessing stage, a query is splitted into keywords, 
constants, identifiers, operators, and other small pieces of 
text that the language defines (tokens). Syntactical analysis is 
the process of combining the tokens into well-formed 
expressions, statements, and programs. In ExpertSOS, the 
case-ranking module - the past cases - are ranked based on 
their semantic importance to the preprocessed input request.  
During the semantic analysis, the symptoms, values, and 
other required information about statements are recorded, 
checked, and transformed. Moreover, a domain-specific 
semantic dictionary to keep the synonyms has been designed. 
The required QA pairs should contain some knowledge 
about the queries and its related issues. Apart from searching 
and ranking the relevant cases, the system groups the top-
ranking cases into categories. Finally, the cases are sorted 
according a score, so that the most relevant cases are 
presented to the user at the top of the retrieval list. The 
system must retrieve an object that contains the service 
engineer’s description of the machine fault, and another 
object that indicates the suggested actions or services to be 
carried out. An example is shown in Figure 6.  
 
 
Figure 6.   Search engine results 
When the solution is generated, it is necessary to validate 
if that solution is correct. The answer contains a brief 
summary for each case as a reference solution to the 
technician. Changing the values that are proposed by the 
system to other values that are similar, is used to revise the 
correction of a solution. Each case contains a set of attributes 
concerning both the metadata and the knowledge. 
ExpertSOS provides the QA indexer with a list of possible 
index terms as ontological references. We used a 
computational-based retrieval system where numerical 
similarity functions are used to assess and order the cases 
regarding the query. With this aim, we first need to recover 
the similar cases from the knowledge base and then propose 
a new solution to solve the present problem in an efficient 
way. If the solution generated by the similar values is not 
better than the proposed one, then the chosen one is a good 
solution for the problem. Semantic algorithms are used to 
revise the correction of new solutions.  After running those 
algorithms, the solutions can be accepted and added to the 
case base. 
VI.    PERFORMANCE TESTS 
In order to compare the ExpertSOS efficiency with the 
traditional help desk system TSOS, we have compared the 
resolved incidents using ExpertSOS with those that had been 
resolved with the TSOS system. Figure 7 shows the total 
number of incidents across the years up to the end of 2014.  
We observe a negative trend in the number of incidents 
resolved using TSOS, while the number of incidents was 
increasing and how the ExpertSOS improves this negative 
trend with the implementation of an intelligent help desk 
system. 
 
Figure 7.  Performance of ExpertSOS and traditional help-desk 
Thus, ExpertSOS, based on CBR and ontologies has 
proved to be cost effective. The benefits stemming from the 
use of semantic web technologies in the troubleshooting 
context can be recognized in the following services: 
- 
ExpertSOS has proven to be effective in reducing 
troubleshooting time, secondary incidents, and 
environmental impacts.. Increasing speeds and 
capability during troubleshooting can decrease the 
incident response time and save over 12% in the 
daily performance of a service. 
102
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

- 
Improved knowledge distribution: Knowledge is 
distributed in a better way and moved from the 
expert technicians to the novel technicians, 
improving the overall solving and dispatching 
capability.  
- 
Composing 
new 
cases 
compliant 
to 
the 
requirements of a particular user out of the 
available resources and resource solution automatic 
interaction dynamically adapts to the features of 
the particular user. 
- 
Higher 
service 
quality, 
higher 
customer 
satisfaction. Furthermore, knowledge can be 
maintained easily and directly used. This flexibility 
allows 
for 
a 
quick 
response 
to 
dynamic 
technological and standards fluctuations. 
- 
Increased first time resolution: Technician groups 
can access to the right knowledge at the right time 
to solve incidents quickly and efficiently. Because 
of this, more productive human capacity in each 
line was achieved. 
VII.    CONCLUSIONS 
The technology infrastructure of universities and 
institutions needs the integration of different methods and 
techniques for developing knowledge management systems. 
This way, the effectiveness of management activities is 
increased. There is a strong need to provide support for a 
whole range of technicians. Different technicians have 
different needs and skills. An intelligent semantic help desk 
has been developed to assist and advice new technicians or 
computer users, in order to diagnose problems in the 
technological infrastructure of a university. In this paper, we 
have used computational intelligence and ontologies 
techniques 
to 
integrate 
the 
knowledge 
of 
incident 
management in a troubleshooting system. ExpertSOS serves 
an educational user community, helping people with 
different skills. Ontologies are applied for extracting 
knowledge, building up an IDSS. Technicians send 
symptoms and queries to the system, which provides an 
expert answer about the question. This work focuses on three 
aspects to enhance knowledge retrieval:  how to apply CBR 
to find existing similar QA-pairs for a newly submitted 
question; how to utilize relevant information services to 
support answers; and how to use semantic indexing to help 
choosing the appropriate index terms for QA pairs. 
For this purpose, our platform is focused on providing 
expert solutions, delivering exceptional technician service, 
and creating a reliable infrastructure. We have used a CBR 
system structure to provide a systematic and analytical 
troubleshooting procedure. The intelligent help desk 
described in this work is capable of learning, generalizing, 
and self-organizing information, in order to find complex 
patterns and assist in decision support. The main contribution 
is the described approach for the integration of knowledge 
from different sources and metadata characterizations of the 
QA pair in a help desk system to achieve semantic 
interoperability. This method has a positive effect on 
technician interpersonal development, such as an enhanced 
sense of personal efficacy, and the development of technical 
skills. 
The use of computational intelligence and ontologies as a 
knowledge representation formalism offers many advantages 
in Information Retrieval. Ontologies and CBR technologies 
provide a solid solution as an ontology gives an explicit 
definition of the shared concepts of a certain domain. In fact, 
the ontology constrains the set of possible mappings between 
queries and their answers.  
Finally, the study analyzes the implementation results 
and evaluates the viability of our platform. The experimental 
results shows that the proposed approach can achieve high 
retrieval accuracy and can considerably improve efficiency 
compared to existing techniques used in typical customer 
service systems. ExpertSOS helps to save costs in 
eliminating the expensive telephone charges, and the number 
of onsite visits by service engineers. 
 
REFERENCES 
[1] T. J. Ottosen, and F. V. Jensen, “When to test? 
Troubleshooting with postponed system test, Expert System 
with Applications, vol. 38 (10), pp.  12142-12150, 2011. 
[2] B. Chu, C. Lee, and C. Ho, “An ontology-supported database 
refurbishing technique and its application in mining 
actionable troubleshooting rules from real-life databases”, 
Engineering Applications of Artificial Intelligence, vol. 21 
(8), pp. 1430-1442, 2008. 
[3] S. Cebi, M. Celik, C. Kahraman, and I. D. Er. “An expert 
system 
towards 
solving 
ship 
auxiliary 
machinery 
troubleshooting: SHIPAMTSOLVER,” Expert Systems with 
Applications, vol. 36 (3), part 2, pp. 7219-7227, 2009. 
[4] G. Zahedi, S. Saba, M. al-Otaibi, and K. Mohd-Yusof, 
“Trobleshooting of crude oil desalination plant using fuzzy 
expert system,” Desalination. vol. 266 (1-3), pp. 162-170, 
2011.  
[5] E. A. Sierra, J. J. Quiroga, R. Fernández, and G. E. Monte, 
“An intelligent maintenance system for earth-based failure 
analysis 
and 
self-repairing 
of 
microsatellites,” 
ActaAstronautica, vol. 55 (1), pp. 61-67, 2004. 
[6] S. A. Abdul-Wahab, A. Elkamel, M. A. Al-Weshahi, and A. 
S. Al-Yahmadi, “Trobleshooting the brine heater of the MSF 
plat fuzzy-logic based expert system,” Desalination. vol. 217 
(1-3), pp. 100-117, 2017.  
[7] O. A. Blanson, V. M. Sawirjo, C. A. van der Mast, M. A. 
Neerincx, and J. A. Lindenberg, “Computer assistant for 
remote collaborative troubleshooting of domestic medical 
instruments,” 
Pervasive 
Computing 
Technologies 
for 
Healthcare, pp. 285-288, 2008. 
[8] D. Wang, T. Li, S. Zhu, and Y. Gong, “iHelp: An Intelligent 
Online Helpdesk System,” IEEE Transactions on Systems, 
Man, and Cybernetics, vol.41 (1), pp.173-182, 2011. 
[9] F. George, Artificial Intelligence, Structures and Strategies for 
Complex Problem Solving, 4ª edition, Ed. Pearson, Education 
Limited, 2002. 
[10] C. C. Huang, and S. H. Lin, “Sharing knowledge in a supply 
chain using the semantic web,” Expert Systems with 
Applications, 37(4), pp. 3145–3161, 2010. 
[11] A. Gomez-Perez, A. Corcho, and M. Fernandez-Lopez, 
“Ontological Engineering”, Advanced Information and 
Knowledge Processing, Springer-Verlag London, 2003. 
103
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

