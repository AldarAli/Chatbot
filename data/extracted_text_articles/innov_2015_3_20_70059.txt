Smart Position Selection in Mobile Localisation
Carlos Mart´ınez de la Osa, Grigorios G. Anagnostopoulos, Michel Deriaz
Information Science Institute
GSEM/CUI
University of Geneva
Geneva, Switzerland
Email: {carlos.martinez, grigorios.anagnostopoulos, michel.deriaz}@unige.ch
Abstract—Which technology should be used in order to be
able to locate oneself in any kind of scenario? This has been a
recurrent question in the last years. It has become evident that,
until now, there is no dominant indoor positioning solution based
on a single technology. Outdoors, positioning systems based on
satellites have given excellent results. However, a global solution
for both kinds of scenarios does not exist. In our study, this
problem is dealt with by creating an algorithm able to evaluate
positions received from different technologies and choose the most
trustworthy one. As a result, we are able to improve the overall
accuracy of the user’s position estimation, compared to the ones
the different technologies would have given if used independently.
In this way, the user is offered a simple solution to have an
accurate position in all environments, in a transparent way. The
main challenge of using different technologies at the same time
is usually the battery consumption. A solution for dealing with
this aspect is also proposed in this document. This research has
been done in the context of the Ambient Assisted Living (AAL)
Enhanced Daily Living and Health (EDLAH) project, where older
people can track their lost objects, which requires them to be
positioned in a very accurate way.
Keywords—Indoor localisation; Outdoor localisation; Position
selection; Heterogeneous positioning; Battery saving.
I. INTRODUCTION
The ability to position people indoors has become a very
important focus of research in the last years. An example
of this are the requirements given in the European project
EDLAH, that motivates this research, where the goal is for
users to be able to locate some of their lost objects in a map
of their house. It is also required to position these users in a
very accurate way using their mobile devices.
Outdoor positioning is now excellent with the establishment
of Global Positioning System (GPS), but the number of appli-
cations that demand positioning abilities in all environments is
increasing rapidly. On the other hand, it appears that, until now,
there is not a dominant solution based on a single technology
able to offer better results than the rest for these cases.
One of the commonly used technologies for positioning in
indoor environments is the Wi-Fi signal [1][2]. This approach
takes advantage of the fact that most buildings have several
Wi-Fi access points, in order to provide Internet access, so
the hardware required is already installed. On the other hand,
usually the access point network is not dense enough to facili-
tate a satisfactory precision of localisation. Another technology
widely used during the last years is the Bluetooth Low Energy
(BLE) technology [3][4]. It has a low energy consumption,
while maintaining a communication range similar to that of
its predecessor, Classic Bluetooth. Some other approaches
combine these methods with the inertial sensors of the device
used to improve the accuracy and the experience of the user
in between position estimation receptions [5][6].
An important challenge for applications that need to offer
positioning globally, both indoors and outdoors, is to have
an efﬁcient mechanism that decides which position provider
should be used. In our study, we face this problem by creating
an algorithm able to gather positions received from different
technologies, evaluate them and choose the most trustworthy
one, therefore improving the overall accuracy of the user’s
position estimation. A similar approach to this solution can
be found in [7], where the concept ”Quality of Position” is
presented.
This is one of the problems that must be faced in the
EDLAH project, where the users must be located with high
precision in their own ﬂat, as well as outdoors in a garden or
common area, in order to ﬁnd their lost objects. These objects
have been previously identiﬁed with a BLE beacon that allows
a mobile device to compute the distance to them, as described
in [8].
In this work, the position providers offered by Google in
the Android operative system have been used, both GPS and
Cell-ID based position provider [9]. Also, the BLE positioning
solution presented in [3], where a grid of BLE beacons is de-
ployed. This allows the position of the user to be inferred from
a weighted average of the Received Signal Strength Indication
(RSSI) values, which were received from the different beacons
in range. In this case, the position estimation is limited to the
area that is deﬁned by the polygon that the beacons' placement
creates. This way if the beacons are placed in an indoors
environment, the position estimation will only be calculated
indoors.
There exist also several studies about power saving in
mobile positioning, giving an overview of current localisation
technologies and a classiﬁcation of techniques for improving
the energy efﬁciency by evaluating some of the most promising
approaches [10][11][12].
44
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

The rest of this paper is organised as follows. In Section II,
we present the position selection algorithm and the concepts
of position estimation and position trust. Experimental results
and their corresponding analysis are shown in Section III. In
Section IV, we present a theoretical model for battery saving.
Finally, future work directions along with conclusions drawn
are presented in Section V.
II. POSITION SELECTION
The core of this research is based on the existence of
position providers. Conceptually, position providers constitute
the lowest layer of a location based service. They transform
raw sensor data into position estimations. In our system, these
estimations are sent to higher level layers.
A. Position estimation
Firstly, it is necessary to establish the attributes that a
position estimation must have in order to be suitable for the
algorithm. These are:
• Latitude
• Longitude
• Accuracy
• Provider name
• Timestamp
The two basic parameters that a position must have are
the latitude and longitude coordinates, as they allow the
identiﬁcation of a speciﬁc point in the geographic coordinate
system.
As the position is not exact, but an estimate, it is needed
to have an idea of the quality of that estimation. This is given
by the dynamic accuracy estimation (referred in this paper as
accuracy), which is generally described as the radius of 68%
conﬁdence of the position. In other words, if a circle centred at
the position’s latitude and longitude is drawn, and with a radius
equal to the accuracy, then there is a 68% probability that the
true position is inside the circle. This is because it is assumed
that location errors are random with a normal distribution, so
the 68% conﬁdence circle represents one standard deviation.
In practice though, location errors do not always follow such
a simple distribution.
Moreover, the name of the provider that estimated the
position must be delivered in order to give the user and
the system information about the technology used. This is
specially important for the battery saving algorithm, as it
makes it possible to differentiate between different providers.
Finally, the timestamp of when the position was recorded is
also required, which is basic to have an idea of how recent
each estimation is.
Additionally, the position estimation might also contain
information about the altitude, the speed, the bearing of the
user, etc. These are given to upper layers, but are out of the
scope of this research.
B. Position trust
We deﬁne the position trust as an internal parameter of the
algorithm utilized to determine which of the available positions
is the best at each moment. The calculation of the trust is based
on three parameters:
• Accuracy: as stated before, it is described as the radius of
68% conﬁdence of the position, in meters. As explained,
this error is also an estimation, because the system does
not know what the exact real position of the person is.
The accurate modelling of the accuracy estimation is vital
for the correct behaviour of our approach. Generally, this
estimation is based on some of the received characteristics
of the raw data of the technology used. In GPS and the
Cell-ID provider it is given by Android, while in the BLE
provider we base this estimation on the strength of the
received Bluetooth signal and the number of Bluetooth
beacons in sight.
• Recency: in seconds, the difference between the times-
tamp obtained when the position was estimated and the
actual timestamp at that moment.
• Priority: optionally, a value from 1 to 10, with 1 being the
highest priority that can be assigned by the user to the dif-
ferent technologies used when initialising the algorithm.
This is utilised in case the user prefers speciﬁc providers
above others, even if the algorithm would choose a
different position estimation if this priority would not
exist. If priorities are not assigned, this parameter will
not be taken into account in the selection process.
The trust of the position will be inversely proportional to
the accuracy, which is given as the estimated error committed
in the measurement, in meters. Therefore, the smaller the
error, the bigger the trust. The trust will also be inversely
proportional to the recency of the position, thus the newer the
position, the higher the trust. If the user has given priorities
to the different providers, this value will also be taken into
account when calculating the trust. This will be inversely
proportional to the value of the priority. Following, in (1),
(2) and (3), the way that the trust is calculated, as well as the
restrictions of the weight values are presented.
trust =
w1
accuracy +
w2
recency +
w3
priority
(1)
w1 + w2 + w3 = 1
(2)
wi ≥ 0 , i ϵ{1, 2, 3}
(3)
The values w1, w2 and w3 correspond to the weight, or the
importance, given to the accuracy, the recency of the position
and the priority of the provider used, respectively. These
weights can be tuned, following (2) and (3), in order to obtain
the most adequate results for each scenario or preference of
the user.
45
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

Best 
current 
position
New pos.
trust > current pos. 
trust 
Best current 
position = new 
position
Yes
Any case
New position 
received
Calculate trusts
Wait for new 
position
Figure 1. Flow chart of the position selection algorithm
C. Position selection
Each time that one of the position providers sends a new
position estimation, its trust will be calculated and compared
with the recalculated trust of the last best position estimation.
If the trust of the new position is better, the algorithm will save
it as the best possible position estimation at the moment and
it will be returned to the user as an output. If the previous
position estimation still has a better trust, then no update
occurs. It is important to note that the trust of the last best
position estimation will be recalculated every time a provider
offers a new position. This is done because the recency of the
previous position estimation must be updated and, therefore,
its trust will decrease. The procedure's logic can be visualised
in Figure 1.
III. RESULTS
We will now proceed to show the results achieved by using
the position selection algorithm in our test environment at the
University of Geneva. Concretely, the algorithm is tested using
three different position providers: GPS, Cell-ID positioning,
and a BLE provider. The ﬁrst two providers are the ones
provided by Google in Android mobile devices, while the BLE
one has been developed by our group. The position selection
algorithm, in the following example, has been conﬁgured using
w1 = w2 and w3 = 0 in (1). This means that, when calculating
the trust of a position estimation, one meter in the accuracy
is penalized the same way as one second in the recency of
the estimation. This setup would be the logical solution for
a user that is moving at a speed of one meter per second.
In this example, the priorities are not taken into account.
As an example, a position that was taken one second ago
with an accuracy of one meter, will have the same trust as a
position calculated right now with an accuracy of two meters.
In this situation, the algorithm will choose the newer position
estimation.
To measure the results of the algorithm, we have created
a tool that allows us to record the actual real position of
a user, as he or she is moving, at the same time that the
estimated positions are being calculated. Therefore, we can
later calculate the error committed in the position estimations
of a moving or static user. In our case, we have selected a
path that mixes different types of scenarios. The user started
the trip in an indoors area with no BLE coverage (and being
indoors the GPS coverage is almost non-existent), followed by
an indoors zone with BLE coverage. Later, the path continues
outdoors with no BLE coverage and ﬁnishes again indoors
with BLE coverage. The goal of this procedure is to test how
the algorithm handles the changes between areas where one
technology has much better accuracy than others.
TABLE I. RESULT FOR DIFFERENT POSITION PROVIDERS
Provider name
Mean error (m)
SD (m)
SR
GPS
13.7
11.68
41.01%
Cell-ID
31.69
20.07
62.96%
BLE
6.51
15.2
21.78%
GPStoBLE
5.76
7.53
39.57%
Our solution
4.84
6.42
45.34%
A list of the results can be seen in Table I . These have been
extracted using a Samsung Galaxy S4 device. The results have
been taken from ﬁve different position providers: standalone
GPS, standalone Cell-ID position provider, standalone BLE
position provider, GPStoBLE and our solution. GPStoBLE is a
position provider previously created in our research group, that
is speciﬁcally designed to switch between the BLE provider
and GPS. It takes into account the speciﬁc characteristics of
both providers and waits until several good readings of one of
the providers are received to decide which of the two will be
used.
In Table I, for each of these providers, the mean error
committed in the estimations is shown, measured as the
distance between the estimated position and the real one, in
meters. Additionally, the standard deviation of the error is also
speciﬁed, in order to offer a better idea about the dispersion of
the results. Lastly, a parameter deﬁned as Success Rate (SR),
can be observed related to the estimated accuracy claimed by
the providers. It indicates the percentage of the times that the
real position was inside the area delimited by the circle with
the estimated position as a center and a radius equal to the
accuracy. As described in Section II, this value is expected to
be close to 68%. Nevertheless, it is observed that this is not
true for most of the providers, which means that the estimation
of the accuracy should be improved in these cases.
Looking at the data obtained, it is directly seen that the
standalone solutions are more inaccurate than the other two.
Furthermore, the BLE and GPS solutions do not offer coverage
everywhere. For example, even if the total error committed by
the BLE position provider is relatively low, the error outdoors
is unaccounted for as the provider is not estimating positions.
Nevertheless, the user would not be able to position himself
at that moment. It is notable that our solution, which is
not provider speciﬁc, has a better performance compared to
the one speciﬁcally designed for BLE and GPS, due to the
introduction of a third position provider (Cell-ID) in areas
46
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

where none of the previous ones have coverage. The superior
performance is also due to the removal of bad estimations,
because when a new position is received with a bad accuracy,
the algorithm will most likely keep using the previous position
estimation as it would have more trust. The visual difference
between the real path followed by the user and the one
estimated by our solution can be observed in ﬁgures 2 and
3.
Figure 2. Real path followed by the user
Figure 3. Estimated path by our solution
Lastly, a parameter optimization step is made, in order to
ﬁnd a better parameter tuning for our algorithm. In Table II the
results of ﬁve different setting of w1 and w2, are exempliﬁed.
The parameter w3, representing the weight of the priority
given to each provider, is again set to zero. Values were given
following (2) and (3). The values vary from 0.3 to 0.7 for
both parameters. Higher or lower than that, the algorithm
starts giving poor results. If the accuracy has a weight lower
than 0.25 the algorithm will start giving only new positions,
taking very little into account the estimated error committed.
Similarly, if w2 is very low, the algorithm will offer a position
update only when it receives a more accurate position, even
if the saved one was taken a long time ago.
TABLE II. RESULT FOR DIFFERENT ALGORITHM WEIGHTS
w1
w2
Mean error (m)
SD (m)
SR
0.3
0.7
4.84
6.37
46.28%
0.4
0.6
4.81
6.36
47.44%
0.5
0.5
4.84
6.42
45.35%
0.6
0.4
4.90
6.55
40.46%
0.7
0.3
4.92
6.68
38.60%
It is appreciated how slightly better results are obtained for
w1 = 0.4 and w2 = 0.6. This means that the estimations
are closer to the real path of the user when the recency
of the updates is given slightly higher importance than the
estimated accuracy. This result might also be due to the
accuracy estimation not having a 68% conﬁdence as it should,
but signiﬁcantly lower in most of the cases.
IV. BATTERY SAVING
One of the downsides of this approach and, in general, of all
heterogeneous positioning solutions, is that the device needs
to have activated all technologies and be subscribed to their
corresponding position providers at all times, which translates
into an elevated battery consumption. For this reason, it is here
presented a theoretical model on how to apply battery saving
techniques to the solution presented in this paper. This model
is based on controlling the switching, on or off, of the different
position providers depending on how they are needed. There
are no experimental results offered for this model yet, as it is
an ongoing work in our group.
The algorithm applied in this case checks, on every position
update, the trust of the position estimations offered by the
different active providers. The main idea of the algorithm is
to classify providers as reliable when they offer a number of
trustworthy positions in a row, and, in a similar way, classify
them as unreliable if they give a number of untrustworthy
position estimations in a row.
The algorithm is iterated every time there is a position
update. It checks the trust of the position received, if this trust
is higher than a predeﬁned trust value, a speciﬁc counter for
this provider is increased. The counter is reset to zero every
time the trust is lower than this value. When the algorithm
detects that the counter is higher than a conﬁdence threshold, it
means that the provider has given several trustworthy positions
in a row, so it is classiﬁed as a reliable position provider. If the
system detects that there are several reliable providers at the
same moment, it deactivates the ones with the highest power
consumption.
Similarly, when a reliable provider gives a series of untrust-
worthy positions in a row, it is classiﬁed as not reliable and,
if it is the only active provider at that moment, the rest of the
providers will be reactivated again in order to ﬁnd positions
with higher trust. This logic can be visualised in Figure 4.
Besides, if the only provider used at a given moment
consumes a high amount of power, a timer will be activated so
that every given amount of time, providers that have a lower
battery consumption are reactivated to check if they became
47
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

Counter = 0
Position update
Is provider 
reliable?
Position trust > 
trust_threshold
Position trust < 
trust_threshold
Counter = 0
Counter = 0
Counter > 
Confidence 
threshold
Counter > 
Non confidence 
threshold
Provider reliable
Provider not reliable
More 
than 1 provider
 reliable?
Keep active the one with lowest 
battery consumption.
Deactivate the rest.
No
Yes
No
Yes
No
Yes
Yes
Yes
Yes
Increase counter
No
No
Keep active reliable provider.
Deactivate the rest.
No
Figure 4. Flow chart of the battery saving algorithm
trustworthy and use one of them instead of the one with high
battery consumption demand.
In order for this algorithm to be effective, it is impor-
tant that, when deﬁning a new provider, a parameter which
indicates the energy consumption rate of this technology is
speciﬁed. This parameter does not need to be a quantitative
measure, but may just be a qualitative description. As an exam-
ple, in our system, GPS is marked as High Consumption, while
the BLE position provider is marked as Low Consumption.
The conﬁdence thresholds that deﬁne when a provider is
reliable or not, as well as the timer set for high power
consumption providers, are meant to be tuned by the user of
the algorithm. It is evident that there exists a trade-off between
battery consumption and position accuracy. Having very low
values on these parameters will imply a high amount of
activating and deactivating providers, but it will also mean that
more position estimations of different providers are received,
improving the chances of getting more accurate estimations,
but also increasing the battery consumption. On the other hand,
higher values will imply less changes of providers, less battery
consumption, and, most likely, less accuracy.
V. CONCLUSION AND FUTURE WORK
A switching algorithm between different mobile position
providers has been presented along with a battery saving logic.
It has been demonstrated how our solution has been able to im-
prove the results previously achieved in our group, which used
to rely on position providers based on a single technology, or a
switching logic designed for speciﬁc providers. The proposed
solution is technology independent, since the algorithm simply
requires some basic parameters in the position estimation,
which offers substantial ﬂexibility for the future addition of
new position providers based on other technologies.
The requirements for the project EDLAH have been ful-
ﬁlled, as the accuracy is improved in all environments, ac-
cording to the available technologies. This way, the object
localization module has a more reliable position estimation
input.
Future work in this area involves testing other conﬁgura-
tions of the algorithm by adjusting the different weights and
thresholds involved. One of the possibilities is the addition
of machine learning techniques to optimise the algorithm
parameters trying to minimise the average error in the esti-
mation. Additionally, the battery saving theoretical model will
be implemented in order to extract results and conclusions
from its use.
ACKNOWLEDGEMENTS
This work was co-funded by the State Secretariat for Educa-
tion, Research and Innovation of the Swiss federal government
and the European Union, in the frame of the EU AAL project
EDLAH (aal-2012-5-062).
REFERENCES
[1] S. Mazuelas et al., “Robust indoor positioning provided by real-time rssi
values in unmodiﬁed wlan networks.” J. Sel. Topics Signal Processing,
vol. 3, pp. 821–831, 2009.
[2] M. Lee and D. Han, “Voronoi tessellation based interpolation method for
wi-ﬁ radio map construction.” IEEE Communications Letters, vol. 16,
no. 3, pp. 404–407, 2012.
[3] G. G. Anagnostopoulos and M. Deriaz, “Accuracy enhancements in
indoor localization with the weighted average technique,” in SENSOR-
COMM 2014, 2014, pp. 112 – 116.
[4] Z. jianyong et al., “Rssi based bluetooth low energy indoor positioning,”
in IPIN 2014, 2014.
[5] L. Liew and W. S. H. Wong, “Indoor positioning method based on
inertial data, rssi and compass from handheld smart-device,” 2014, pp.
48 – 52.
[6] U. Shala and A. Rodriguez, “Indoor positioning using sensor-fusion in
android devices,” 2011.
[7] E. Metola and A. Bernardos, “Poster an embedded fusion system for
location management,” vol. 104, pp. 233–237, 2012.
[8] G. Ionescu, C. M. de la Osa, and M. Deriaz, “Improving distance estima-
tion in object localisation with bluetooth low energy,” in SENSORCOMM
2014, 2014, pp. 45 – 50.
[9] Google,
“Android
Location
Strategies,”
http://developer.android.com/guide/topics/location/strategies.html,
2015, [Online; accessed 24-June-2015].
[10] T. Graf, “Power-efﬁcient positioning technologies for mobile devices,”
Berlin University of Technology, Jul, 2012.
[11] T.
Nakagawa
et
al.,
“Variable
interval
positioning
method
for
smartphone-based power-saving geofencing,” in Personal Indoor and
Mobile Radio Communications (PIMRC), 2013 IEEE 24th International
Symposium on, Sept 2013, pp. 3482–3486.
48
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

[12] K. Lin, A. Kansal, D. Lymberopoulos, and F. Zhao, “Energy-accuracy
aware localization for mobile devices,” in ACM MobiSys 2010, 2010.
49
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-444-2
INNOV 2015 : The Fourth International Conference on Communications, Computation, Networks and Technologies

