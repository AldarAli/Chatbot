Modelling (Historical) Administrative Information
on the Semantic Web
Jesper Zedlitz
Christian-Albrechts-Universität
Kiel, Germany
Email: j.zedlitz@email.uni-kiel.de
Norbert Luttenberger
Christian-Albrechts-Universität
Kiel, Germany
Email: n.luttenberger@email.uni-kiel.de
Abstract—Identifying and referencing places is important for
many ﬁelds of research. Very different approaches of how to
represent administrative structures on the Semantic Web can
be found. This survey attempts to provide a broad overview of
systems that work on (historic) administrative information. We
present a classiﬁcation for such systems, with special attention to
the difference that arise from the processing of historic data. We
also describe a sample of systems which approach the problem
in very different ways. We conclude by evaluating which of the
presented characteristics make a system universal and future-
proof.
Keywords—conceptual modelling; administrative afﬁliation; se-
mantic web; linked open data; historical information
I.
INTRODUCTION
When working with location information, it is often not
enough to provide only the name of a place. One would like
to uniquely identify the place. This identiﬁcation opens up
new possibilities. For example, the location of the place can
be indicated on a map. During a search, one can aggregate
places (e.g., search through all places within a province in one
go).
However, this identiﬁcation is not as simple as it might
seem at a ﬁrst glance. Usually, settlements (such as vil-
lages, group of houses, hamlets etc.) are embedded in an
administrative structure. At least in a large part of the world
there are parallel political, ecclesiastical, and judicial admin-
istrative structures—“administrative objects” for the sake of
brevity. It is easy to see that the afﬁliation of settlements
with these administrative objects is needed to provide the de-
sired functionality—such as the already mentioned aggregated
search. Changing administrative structures makes it difﬁcult
for the content editor to specify correct references as well as
for the end-user to understand the changing structure and, as
a consequence, formulate queries that include the expected
results. For this reason, there are a number of projects that
provide such kind of information on the Semantic Web in
the form of Linked Open Data (LOD). The two technolo-
gies/languages that are typically used for this purpose are
the Resource Description Framework (RDF) [1] and the Web
Ontology Language (OWL) [2].
Since the representation of both spatial and temporal infor-
mation with RDF or OWL is not trivial [3][4][5][6], there are
very different approaches on how to represent administrative
structures on the Semantic Web. This survey attempts to
provide a broad overview of systems that provide (historical)
administrative information.
Approaches such as named graphs [7] or contextual rea-
soning [8] can be used to enhance information with a time
dimension. However, as the survey will show, these techniques
have not yet found their way into existing systems that provide
administrative information.
The paper is organized as follows. The difﬁculties involved
with place identiﬁcation (not only) on the Semantic Web
are described in Section II. In Section III, a classiﬁcation
for systems providing (historical) administrative information
is given. A sample of nine of such systems is presented in
Section IV and characterized according to this classiﬁcation.
Section V concludes by summarizing which of the presented
characteristics make a system universal and future-proof.
II.
PROBLEMS OF PLACE IDENTIFICATION
For frequent place names, the name alone is obviously
not sufﬁcient for identiﬁcation—just think of “Neustadt” in
Germany. If only the names of places were available, it would
be impossible to distinguish between entries from different
places with identical names.
Especially in Central Europe with its eventful history, it
has often been the case that the name of a place changed
over time. The problem is exacerbated in cases where different
historic sources mention different names for the same place.
Considering only the place name, one might wrongly assume
that events have taken place at different locations, when in
reality only the name of the place had changed over time.
For a search one would like to see all results for one place,
regardless of any name changes.
A common place name such as “Berlin” quickly leads to
a presumption (“Berlin=capital of Germany”) that may turn
out to be wrong for the speciﬁc source. Not only is there a
settlement called “Berlin” in the municipality of Seedorf in
Schleswig-Holstein, Germany, but also numerous other places
called “Berlin” exist in the United States.
You have to analyse a source closely to understand what
is meant exactly by a place’s name. In the simplest case it
is the name of a settlement. However, it could also be the
name of municipality or a parish. In that case the name might
refer to a settlement—maybe with a different name—within
that municipality/parish. Today, the settlement might belong
to another parish or another community.
33
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

A frequently found solution for the identiﬁcation of places
is the usage of geographic coordinates. However, that does not
solve the problem.
•
Which coordinate do you use for a large city—the
coordinate of the town hall or the coordinate of the
church? There might be no church in the village or
there might be several to choose from.
•
Given two slightly different coordinates it is not pos-
sible to tell that they point to the same place.
•
What does the coordinate point to? There are probably
several objects at that position: the church, the village,
the municipality, the parish, the county, etc.
Therefore, geographic coordinates do not solve the prob-
lem. A unique identiﬁer for settlements and administrative
objects is needed. Such a unique identiﬁer is associated with
each resource on the Semantic Web—its Uniform Resource
Identiﬁer (URI).
III.
CLASSIFICATION OF MODEL APPROACHES
We have discovered several characteristics by which sys-
tems providing information about (historical) administrative
structures can be classiﬁed. These characteristics fall into three
groups: (A) fundamental decisions which are made regardless
of the technology of the Semantic Web and which affect all
systems, (B) characteristics which affect only directories in
which the time is a concern, i.e. which also contain historical
information. (C) characteristics which are based on the use of
the techniques of RDF or OWL.
To some extent, the characteristics inﬂuence each other.
Here is an example: If on the one hand you cannot or do
not want to use the technique of reiﬁcation, but on the other
hand you want to give population numbers for different years,
you are almost forced to work with different individuals
for different points in time. Otherwise, different population
numbers could not be distinguished.
A. Basic characteristics relevant for all directories
1) Use of sources: A simple characterization is the fact of
whether source citations are provided for the published infor-
mation or not. Especially in cases of contradicting information
(e.g. different population numbers for the same point in time),
source citations allow to judge the quality of the data.
2) Number of hierarchy levels: Some models have a lim-
itation in the number of possible hierarchy levels. A typical
example for three levels in the civil administration is a county
belonging to a state which in turn belongs to a country. The
administrative afﬁliation can be represented more generally if
there is no restriction on the levels of the hierarchy. This is
usually achieved by the deﬁnition of a general isPartOf or
a belongsTo relationship.
3) Only current values or complete history: Some projects
make the decision to provide only the latest data and no
historical information. Therefore, no time-dependent values are
needed. When a value or a name changes, the previous value is
overwritten. One problem is that overwriting the values makes
it difﬁcult to reproduce reasoning. The value valid at the time
of reasoning might be no longer available.
B. Basic characteristics for historical information
The following characteristics are only relevant for systems
that also contain historical information. For systems that only
provide current information, these characteristic do not apply.
1) Topology vs. speciﬁcation of time: Instead of making
speciﬁc indications of time when an administrative structure
was established or dissolved, one may state topological rela-
tionships (i.e., predecessors, successors, etc.) instead. When
working with such a topology, one does not have to deal with
all the problems that accompany the treatment of time on the
Semantic Web.
2) Activities or results: Two approaches exist to model
changes in the administrative structure. The activities, i.e. the
processes of changing (incorporation of one local authority
by another, renaming, etc.), can be modelled, or the results of
these changes. Figure 1 shows an example for both approaches.
The left half shows the results of an incorporation. In the
right half, the process of the incorporation is represented by
an additional individual in the ontology.
successor
successor
before
before
merge
after
Fig. 1: Active vs. passive modelling.
3) Time-slices vs. individual times: To avoid problems that
accompany the treatment of time on the Semantic Web, several
ontologies can be used. Each of these ontologies contains
information about just one single point in time. Within each
of the ontologies, all relations and numerical values (e.g.
population numbers) are speciﬁed, as they were valid at the
selected point in time. One ontology represents one time-
slice. An administrative object that exists across multiple time-
slices will appear in each of the ontologies as an independent
individual. It is possible to connect the different individuals
belonging to the same administrative object by using additional
object properties.
One disadvantage of the time-slice approach is that a
completely new ontology for each considered point in time is
needed. This solution is therefore only practical if one want to
process a relatively small number of points in time. Throughout
Germany changes at the municipal level occur about once
a month. This would lead to a vast and hardly manageable
number of ontologies.
4) One or multiple individuals: There are different ap-
proaches on how to model an administrative object during its
entire lifespan. It can be represented by a single individual for
its entire existence. In contrast, a new individual is created for
every point in time—similar to time-slicing. As an intermediate
form, a new individual is created only in cases where the
administrative object is subject to changes.
Figure 2 sketches the different approaches. The variant
when a single individual is used for the entire lifetime of
an administrative object is shown on the left. All three time-
dependent value are associated with that individual. At the
center, the variant where a new individual is created only in
case of the change of a value is illustrated. In this example,
34
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

1900
1950
1980
1900
1950
1980
1900
1950
1980
Fig. 2: Different approaches of using one or multiple
individuals per administrative unit.
the value has changed between 1900 and 1950. Between
1950 and 1980, it has remained the same. Therefore, two
different individuals are required. The dashed line shows a
possible object property connection between the individuals
that represent the same administrative object. The variant
where a new individual is created for every point in time is
shown on the right. Each individual is connected with exactly
one value—regardless of whether the value has changed or
not.
C. RDF-/OWL-speciﬁc characteristics
1) Text vs. objects: One way to provide information about
administrative structures is to model only settlements as in-
dividuals. Information about afﬁliations is added to these
individuals as literals (data properties) using the names of the
administrative objects. An example of such modelling is shown
in the upper half of Figure 3.
With this type of modelling, it is very easy to search for
settlements which are subordinate to a higher administrative
level (e.g., a state)—only simple comparisons of data prop-
erties are necessary. A navigation within the administrative
hierarchy is not possible with this type of speciﬁcation. Also,
a clear identiﬁcation of the administrative objects is not given:
If two superordinate administrative objects have the same name
they cannot be distinguished.
Schönberger 
Strand
Schönberg
Heidkate
Wisch
Plön
Germany
name
municipality
county
state
country
Schleswig-
Holstein
name
municipality
name
name
county
name
name
name
Schönberger 
Strand
Schönberg
Plön
Schleswig-
Holstein
Germany
name
municipality
county
state
country
Heidkate
Wisch
Plön
Germany
name
municipality
county
state
country
Schleswig-
Holstein
Fig. 3: Modeling with data properties only (top) and
modelling with data and object properties (bottom).
This problem can be avoided by creating its own individual
for each administrative object, which can be referenced by
a URI—as usual on the Semantic Web. A link between the
settlement and superordinate administrative object is created by
using object properties. An example of this kind of modelling
with individuals and object properties can be found in the lower
half of Figure 3.
Since the objects of higher administrative levels (counties,
states, etc.) occur only once and are named only once, one
has to maintain less properties in total. The more objects are
subordinate to another administrative object, the clearer this
advantage becomes.
2) Types as classes, individuals, or literals: There are three
ways to represent the type of an administrative object:
1)
an OWL class—the individual representing the ad-
ministrative object is instance of that class
2)
a reference to an individual—the individual represent-
ing the administrative object has an object property
that speciﬁes the type
3)
a literal—the individual representing the administra-
tive object has a data property that contains the type
as literal
In the ﬁrst case, a municipality would be modelled as an
instance of a class “Municipality”. If the municipality gets
town privileges later, it also becomes instance of a class
“City”. Here, a problem of this approach becomes evident:
RDF or OWL have no time-dependent memberships in a class.
Both class memberships are valid indeﬁnitely. The change
from municipality to city is no longer visible. Therefore, this
approach is really only useful if you use multiple individuals
for the representation of an administrative object over its
lifetime.
3) Reiﬁcation: Reiﬁcation can be used in order to enrich a
relation between two administrative objects with temporal in-
formation. Instead of deﬁning an object property between two
individuals directly, the connection itself is represented by an
individual. Figure 4 illustrates how an administrative afﬁliation
can be enriched with a time period by using reiﬁcation.
belongsTo
A
B
A
B
BelongsTo
rdf:type
parent
child
begin
end
Fig. 4: Reiﬁcation of an object property.
4) Speciﬁcation of names: To specify names there is the
choice to use the existing rdfs:label property or to deﬁne
an own specialized property. The range of the rdfs:label
property includes the data type rdf:PlainLiteral. In
RDF, plain literals have an optional language tag. Therefore,
it is possible to specify names in different language variants,
e.g, "München"@de, "Munich"@en. In order to manage
different name variants for one language, the relatively of-
ten used Simple Knowledge Organization System (SKOS)
[9] provides several properties for names. To supply further
information, such as a period of time or references for a name,
it is necessary to deﬁne a specialized property. Of course, this
property can be deﬁned as sub-property of SKOS properties.
5) Speciﬁcation of time as standalone property: Indications
of time can be speciﬁed either as a standalone property or
within literals—e.g., “Barmen-Elberfeld (-1930)”, “Wuppertal
35
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

(1930-)”. A human user is likely to read and understand indica-
tions of time within literals. However, for machine processing
(reasoning or SPARQL queries), they are not suitable.
IV.
PROJECTS IN DETAIL
For this article we selected projects that offer information
about administrative structures on the Semantic Web. There
are other approaches and projects for the publication of ad-
ministrative structures. However, since they do not target the
Semantic Web and its technologies, they are not covered in
this article. Table I shows an overview of all nine projects
that are discussed in this article. The table shows two rows
for SAPO. The lower row represents an assumption about the
ontologies used internally, based on the publications on SAPO.
Each column of the table represents one of the characteristics
listed above—in the same order as in this article.
TABLE I: Overview over the characteristics of the presented
systems.
individuals
references
hierarchy levels
temporal inf.
all systems
time/topology
activity/result
time-slices/
ind. times
one/mult. indiv.
systems with time
RDF/OWL technology
adm. obj. type
property
for names
time as property
text/object
reiﬁcation
GND
+
-
∞
+
top.
r
-
-
i
own
-
-
o
GOV
+
+
∞
+
time
r
ind
one
i
own
+
p
o
SAPO
SAPO (int.)
+
+
-
-
3
+
+
time
time
a
r
ts
ind
mult
mult
c
-
-
t
o
o
rdfs:label
?
?
?
SHV
+
-
pr. 5
-
c
-
o
rdfs:label
schema.org
-
-
∞
-
c
-
o
own
-
-
LinkedGeoData
+
-
-
-
t
rdfs:label
-
GeoNames
+
-
pr. 5
-
i
-
o
own
-
GB Ordnance
Service
+
-
4
-
c
-
o
rdfs:label
SKOS
-
DBPedia
+
-
∞
-
-
o
rdfs:label
-
These systems
do not contain
temporal
information.
A. schema.org
Schema.org [10] is an initiative of several search engine
operators. It provides vocabulary and the TBox of an ontology
for semantic annotation of HTML pages. Thus, in contrasts
to the other systems presented in this paper, the schema.org
ontology does not contain any individuals. The ontology
contains a part that deals with the description of administrative
structures. The relevant classes and their relations are shown
in Figure 5.
Place
globalLocationNumber : Text
map : URL
maps : URL
geo : GeoCoordinates or GeoShape
containedIn
AdministrativeUnit
City
Country
State
Thing
name : String
description : String
Fig. 5: Excerpt from the schema.org model that deals with
administrative information.
The model is very simple. There are only three specialized
types of administrative objects—cities, counties, and states.
Additionally, there is a generic AdministrativeUnit
class. However, it is not possible to specify the type of such
a generic administrative object. In addition to the properties
inherited from the class Thing to specify a name and a
description, the geographic position can be speciﬁed by using
two classes deﬁned within the schema.org ontology.
The model provides no indication of time. Dependencies
are represented using the object property containedIn. Due
to the existence of the general containedIn relation, the
representation of an arbitrary number of hierarchy levels is
possible. Source citations are not possible.
B. DBPedia
The DBpedia project [11][12] extracts information from
the various language variants of Wikipedia and publishes it as
part of the LOD cloud as a RDF knowledge base. DBpedia’s
ontology contains a part that deals with the description of
administrative structures. The currently most recent version of
DBpedia’s ontology can be found at [13]. The relevant sub-
classes of PopulatedPlace are shown in Figure 6.
AdministrativeRegion
City
ClericalAdministrativeRegion
Country
Deanery
Diocese
District
DistrictWaterBoard
FrenchLocality
GovernmentalAdministrativeRegion
IranSettlement
Locality
Municipality
NaturalRegion
Parish
PopulatedPlace
Province
Regency
Region
Settlement
State
SubMunicipality
Town
Village
Fig. 6: Excerpt from the DBpedia ontology showing
sub-classes of PopulatedPlace
In general, DBPedia contains no historical information.
Only for one population number per individual an indication of
time can be given by using the data property populationA-
sOf. Administrative afﬁliations are represented by the object
property isPartOf. Additionally, there is an object property
country which allows a direct connection to the containing
country. Due to the existence of the general isPartOf
relation, the representation of an arbitrary number of hierarchy
levels is possible.
The
type
of
an
administrative
object
is
speciﬁed
by
using
OWL
classes.
In
addition,
however,
there
is
the
data
property
settlementType.
It
contains
the type of the administrative object as literal. Source
citations
are
rudimentarily
possible.
The
object
prop-
erty
http://www.w3.org/ns/prov#wasDerivedFrom is
used
to
stated
from
which
Wikipedia
article
the
data
was taken. For population numbers, the source citation
can
be
speciﬁed
as
a
note
using
the
data
property
http://dbpedia.org/property/populationNote.
Basically, the ontology provides the distinction between
settlements (Settlement and sub-classes) and administra-
tive objects (AdministrativeRegion and sub-classes).
The classes Country, State, and others show that this
36
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

distinction has not been carried out systematically. It can
be observed that in some regions of the world, there is
a fusion of settlements and administrative objects. This is
problematic because they are actually different individuals—in
the semantics of RDF. This is the case particularly with the
information taken from German Wikipedia.
C. GeoNames
GeoNames [14] is a worldwide database containing infor-
mation for more than 8 million settlements and administrative
objects. It is probably the most commonly used gazetteer
within the LOD cloud.
name : String
wgs84_lat
wgs84_lon
countryCode : String [0..1]
population : integer [0..1]
alternateName : String [0..*]
colloquialName : String [0..*]
historicalName : String [0..*]
oﬃcialName : String [0..*]
postalCode : String [0..*]
shortName : String [0..*]l
Map
Code
Class
RDFData
WikipediaArticle
Feature
featureClass [1]
featureCode [0..1]
parentFeature [0..*]
parentADM1 [0..1]
parentADM2 [0..1]
parentADM3 [0..1]
parentAMD4 [0..1]
locatedIn [0..*]
nearby [0..*]
neighbour [0..*]
wikipediaArticle [0..*]
neighbouring
Features [0..*]
locationMap [0..*]
nearbyFeatures [0..*]
Fig. 7: GeoNames’ main class Feature.
As it can be seen in Figure 7 the main class of GeoNames’
data model is Feature. Using the properties feature-
Class and featureCode the type of the settlement or
administrative object can be described in a very detailed way.
Apart from a number of names, the geographical location can
be speciﬁed. For this purpose, use is made of data properties
from the WGS84 vocabulary [15].
The model provides no indication of times. Dependencies
are represented by using the object property parentFea-
ture. Thus, the representation of an arbitrary number of hier-
archy levels is possible. Additionally, there are ﬁve specialized
hierarchy levels which are represented by the object property
parentCountry, parentAdm1 ...parentAdm4. There-
fore, the speciﬁcation is practically limited to these ﬁve hier-
archical levels. Source citations are not possible.
D. LinkedGeoData
The aim of LinkedGeoData [16] is to make the information
collected in the OpenStreetMap [17] project available as a
RDF knowledge base within the LOD cloud. The TBox of the
ontology is very large, due to the types taken over from Open-
StreetMap. However, the relevant part for the description of
administrative structures is limited to the class Place and 16
sub-classes (City, Continent, Country, County, Ham-
let, Island, Islet, IsloatedDwelling, Locality,
Municipality, Region, State, Subdivision, Sub-
urb, Town, and Village).
In contrast to all other systems presented in this paper,
the speciﬁcation of higher-level administrative objects is
provided as literals using the data property isIn, e.g.,
"Kiel,Schleswig-Holstein,Bundesrepublik
Deutschland,Europe". Therefore, navigation within the
administrative hierarchy is not possible.
The model provides no indication of time. The type of
an administrative object is represented via OWL classes. The
speciﬁcation of names is done by using rdfs:label. Source
citations are not possible.
E. Spatial Hierarchy Vocabulary
The Spatial Hierarchy Vocabulary [18] was created as part
of the Leipzig professor catalogue. The structure of the model
is very similar to the model of schema.org. Its classes and
relations are shown in Figure 8.
isLocatedIn
contains
SpatialArea
Planet
Continent
Country
Administrative
District
City
wgs84:SpatialThing
wgs84:Point
hasCenter
Fig. 8: The classes and relations of the Spatial Hierarchy
Vocabulary
Dependencies are represented using the object property
isLocatedIn and the inverse property contains. Thus,
the representation of an arbitrary number of hierarchy levels
is theoretically possible. The type of an administrative object
is represented via OWL classes. However, since the model
contains only ﬁve of these classes, the number of hierarchy
levels is practically limited to ﬁve levels.
The model provides no indication of time. The speciﬁcation
of names is done by using rdfs:label. Source citations are
not possible.
F. GB Ordnance Survey
Great Britain’s national mapping agency publishes infor-
mation about settlements and administrative objects in Great
Britain as linked data. [19][20] In addition to geographical
information, the published data also contain information on
the administration.
CivilAdminstrationArea
Civil
Parish
Community
County
City
District
GreaterLondon
Authority
London
Borough
Metropolitan
District
Unitary
Authority
inDistrict
inCounty
inCounty
Fig. 9: Excerpt from the GB Ordnance Survey ontology.
Administrative objects are modelled as instances of the
nine disjoint sub-classes of CivilAdministrationArea
shown in Figure 9. The ontology speciﬁes the relations be-
tween these classes very rigorously.
Via the inDistrict, the inCounty and the inEu-
ropeanRegion object properties up to four hierarchy levels
37
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

can be speciﬁed. For the speciﬁcation of names rdfs:label
and SKOS data properties are used. The model provides no
indication of time. Source citations are not possible.
G. Gemeinsame Normdatei (GND)
Within the “Gemeinsame Normdatei” (GND) the German
National Library also publishes information about geographi-
cal objects. It lists both civil and ecclesiastical administrative
structures. However, only in exceptional cases settlements are
associated with them.
Figure 10 shows an excerpt of classes and properties from
the GND ontology that are relevant for the modelling of ad-
ministrative structures. Administrative objects are represented
by individuals that are instances of the class PlaceOrGeo-
graphicName and its sub-classes.
PlaceOrGeographicName
preferredName…
varianteName… 
dateOfEstablishment
dateOfTermination
AdministrativeUnit
TerritorialCorporateBodyOrAdminstrativeUnit
NaturalGeographicUnit
Country
SubjectHeading
SubjectHeadingSensoStricto
broaderTermInstantial
succeedingPlaceOrGeographicName
precedingPlaceOrGeographicName
Fig. 10: Excerpt from the GND ontology that deals with
administrative information.
In contrast to all other systems presented in this pa-
per, topological relations between administrative objects are
given by using the inverse object properties succeeding-
PlaceOrGeographicName and preceedingPlaceOf-
GeographicName. The type of an administrative object
is represented by individuals that are members of the class
SubjectHeading. They are connected to the individuals
representing administrative objects via the object property
broaderTermInstantial. For the speciﬁcation of names
two data properties have been deﬁned. In some cases the
website contains source citations. However, they are currently
not available as Linked Data.
H. Suomen Ajallinen Paikka Ontologia (SAPO)
In [21] and [22] Kauppinen, Hyvönen et al. describe how
data with time reference is stored in multiple ontologies as
time-slices. In case of changes in the administrative structures
between the times represented in the ontology, the process of
change is modelled with the help of “change bridge classes”.
Among the systems presented in this article, it is the only
application of time-slices and the modelling of activities.
Apparently, this modelling approach was used only internally
in preparation of the published ontology. In today’s publicly
accessible version of the “Suomen Ajallinen Paikka Ontologia”
(SAPO) [23] these two ideas cannot be found.
For the lifetime of a administrative object, multiple in-
dividuals exist. After every change in the size (area) of
the administrative object, a new individual is created. These
individuals are combined into so-called “spaceworms”. Figure
11 shows an example of such a union.
Oulun_laani(1775-1921)
Oulun_laani(1738-2009)
Oulun_laani(1922-1937)
suo:laani
hasunionof
Oulun_laani
spacewormProvince
rdf:type
rdf:type
Fig. 11: Example for a “spaceworm” in the SAPO.
Indications of time are speciﬁed within rdfs:label
values only. Therefore, they are not machine-interpretable and
cannot be used for reasoning. There is no specialized data
property for the speciﬁcation of names—also rdfs:label
is used. The type of an administrative object is speciﬁed by
using OWL classes. The model contains three of these classes
(valtio, laani, kunta) and hence three hierarchy levels.
One can suspect that the internal ontologies of SAPO contain
only these three classes, too.
I.
Genealogisches Orts-Verzeichnis (GOV)
The most extensive data model is provided by “Genealogis-
ches Orts-Verzeichnis” (GOV) [24]—a project of the German
genealogical association “Verein für Computergenealogie”.
The focus of the dataset is on Central Europe, but also
data from the U.S. and Australia is included. In addition to
structures of political administration, ecclesiastical and legal
administrative structures can also be found.
PropertyName
PropertyForObject
PropertyType
wgs84:Point
GovObject
Type
type
position
language 
value 
timeBegin
timeEnd
hasName
hasType
hasPopulation
Relation
isPartOf
isLocatedIn
represents
ref
timeBegin
timeEnd
SourceReference
source
source
hasPostalCode
...
Fig. 12: Excerpt from the classes and properties of the
Genealogisches Orts-Verzeichnis. Elements to handle
references are left out.
In the GOV, the results of changes are modelled. A single
individual is used for the entire lifetime of an administrative
object. Therefore, each administrative object is associated with
exactly one URI. Both historical afﬁliations as well as time-
dependent values are given.
Figure 12 shows an excerpt of the classes and properties
from the GOV ontology. In contrast to all other systems
presented in this article, reiﬁcation is used for both, relations
and values, to specify indications of time. The reiﬁcation also
allows to give source citations. These source citations are listed
as object properties, not in text form only.
Dependencies are modelled with object properties is-
PartOf, isLocatedIn, and represents and the class
Relation. Using the general isPartOf relation and the
class Relation, the representation of an arbitrary number
of parallel hierarchy levels is possible.
38
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

Names are speciﬁed using the object property hasName
and the class PropertyName, which has a data property
indicating the language as ISO-639-2 code. In combination
with the aforementioned reiﬁcation, it is possible to specify
different language variants of the name as well as different
names in the same language.
The type of an administrative object is represented by in-
dividuals that are connected via the object property hasType
and the class PropertyType. Again, the reiﬁcation makes
it possible to model type changes with an indication of time
and source citations.
V.
CONCLUSION
There is a variety of different approaches on how to
model historical administrative structures on the Semantic
Web. In this article, nine systems were presented with their
different approaches. In order to assess the differences better,
a classiﬁcation of systems has been developed which is divided
into three main areas, each with different characteristics.
What characteristics make a system universal and future-
proof? For some characteristics, this can be clearly stated.
Especially for places from historical sources, time-dependent
values are essential. An unlimited number of parallel afﬁlia-
tions enables the representation of the complex historical real-
ity of administrative structures. Source citations allow quality
control—usually difﬁcult on the Semantic Web. Indication of
time should be modelled as separate properties to make them
machine-interpretable. The representation of the administrative
structure should be done by using object properties—otherwise
the key factor of unique identiﬁcation will be lost. To provide
information on time, sources, and the language used, the use
of reiﬁcation seems inevitable in the current state of RDF and
OWL.
The use of time-slices is poorly scalable. However, during
a preparation phase in the processing of sources (e.g. topogra-
phies which relate to a speciﬁc date), they might be useful.
It is not future-proof to create a new individual for every
point in time: There will be an unmanageable number of indi-
viduals (e.g. an annual addition of population numbers). The
correct referencing of a single administrative object becomes
difﬁcult—but not impossible if additional union-individuals are
deﬁned.
Currently the modelling of results instead of activities
is dominant. However, modelling activities could provide a
better way to represent complex administrative processes.
Particularly for processes that affect a multitude of objects,
the correlation of the changes will be better understood.
Of the presented systems, the GOV seems to meet the
requirements for a system that provides historical administra-
tive structures best. Although GeoNames contains a signiﬁcant
larger number of settlements, the GOV contains the historical
values and especially management objects which are essential
for referencing places in a historic context.
REFERENCES
[1]
(2004)
Resource
Description
Framework
(RDF):
Concepts
and
Abstract
Syntax.
(last
access:
2014-02-14).
[Online].
Available:
http://www.w3.org/TR/2004/REC-rdf-concepts-20040210/
[2]
(2012) OWL 2 Web Ontology Language: Structural Speciﬁcation and
Functional-Style Syntax. (last access: 2014-02-14). [Online]. Available:
http://www.w3.org/TR/2012/REC-owl2-syntax-20121211/
[3]
J. R. Hobbs and F. Pan, “An ontology of time for the semantic web,”
ACM Transactions on Asian Language Information Processing (TALIP),
vol. 3, no. 1, pp. 66–85, 2004.
[4]
C. Gutierrez, C. A. Hurtado, and A. Vaisman, “Introducing time into
rdf,” Knowledge and Data Engineering, IEEE Transactions on, vol. 19,
no. 2, pp. 207–218, 2007.
[5]
F. Frasincar, V. Milea, and U. Kaymak, “towl: Integrating time in owl,”
in Semantic Web Information Management.
Springer, 2010, pp. 225–
246.
[6]
B. Motik, “Representing and querying validity time in rdf and owl: A
logic-based approach,” Web Semantics: Science, Services and Agents on
the World Wide Web, vol. 12, pp. 3–21, 2012.
[7]
J. J. Carroll, C. Bizer, P. Hayes, and P. Stickler, “Named graphs,
provenance and trust,” in Proceedings of the 14th international
conference on World Wide Web.
ACM, 2005, pp. 613–622. [Online].
Available: http://www2005.org/docs/p613.pdf
[8]
M. Homola and L. Seraﬁni, “Contextualized knowledge repositories
for the semantic web,” Web Semantics: Science, Services and Agents
on the World Wide Web, vol. 12, no. 0, 2012. [Online]. Available:
http://www.websemanticsjournal.org/index.php/ps/article/view/231
[9]
(2009) SKOS Simple Knowledge Organization System Reference. (last
access: 2014-02-14). [Online]. Available: http://www.w3.org/TR/skos-
reference/
[10]
(2014) The schema.org website. (last access: 2014-02-14). [Online].
Available: http://schema.org
[11]
(2014) The dbpedia.org website. (last access: 2014-02-14). [Online].
Available: http://www.dbpedia.org
[12]
C. Bizer, J. Lehmann, G. Kobilarov, S. Auer, C. Becker, R. Cyganiak,
and S. Hellmann, “Dbpedia-a crystallization point for the web of data,”
Web Semantics: Science, Services and Agents on the World Wide Web,
vol. 7, no. 3, pp. 154–165, 2009.
[13]
(2013) DBpedia Ontology version 3.9. (last access: 2014-02-14).
[Online]. Available: http://downloads.dbpedia.org/3.9/dbpedia_3.9.owl.
bz2
[14]
(2014) The GeoNames Website. (last access: 2014-02-14). [Online].
Available: http://www.geonames.org/
[15]
(2009) WGS84 Geo Positioning: an RDF vocabulary. (last access: 2014-
02-14). [Online]. Available: http://www.w3.org/2003/01/geo/wgs84_pos
[16]
(2014)
The
LinkedGeoData
Website.
(last
access:
2014-02-14).
[Online]. Available: http://linkedgeodata.org
[17]
(2014)
The
OpenStreetMap
Website.
(last
access:
2014-02-14).
[Online]. Available: http://www.openstreetmap.org
[18]
M. Martin and T. Riechert, “Ortsbezogene navigation basierend auf
einem vokabular zur erzeugung geographischer hierarchien,” in Catalo-
gus Professorum Lipsiensis.
Universität Leipzig, 2010, pp. 107–116.
[19]
(2014)
Ordnance
Survey
Linked
Data.
(last
access:
2014-02-
14). [Online]. Available: http://data.ordnancesurvey.co.uk/datasets/os-
linked-data
[20]
J. Goodwin, C. Dolbear, and G. Hart, “Geographical linked data:
The administrative geography of great britain on the semantic web,”
Transactions in GIS, vol. 12, no. s1, pp. 19–30, 2008.
[21]
T. Kauppinen, R. Henriksson, J. Väätäinen, C. Deichstetter, and
E. Hyvönen, “Ontology-based modeling and visualization of cultural
spatio-temporal knowledge,” in Developments in Artiﬁcial Intelligence
and the Semantic Web-Proceedings of the 12th Finnish AI Conference
STeP 2006, 2006, pp. 26–27.
[22]
T. Kauppinen and E. Hyvönen, “Modeling and reasoning about changes
in ontology time series,” in Ontologies.
Springer, 2007, pp. 319–338.
[23]
(2014) The Finnish Spatio-temporal Ontology. (last access: 2014-
02-14). [Online]. Available: http://onki.ﬁ/en/browser/search/sapo?&os=
sapo
[24]
(2014)
The
GOV
Website.
(last
access:
2014-02-14).
[Online].
Available: http://gov.genealogy.net
39
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-333-9
WEB 2014 : The Second International Conference on Building and Exploring Web Based Environments

