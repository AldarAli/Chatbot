Analysis of Expectations of Students and Their Initial Concepts on Software
Quality
Luis Fernández-Sanz, José Amelio Medina, Josefa
Gómez-Pérez
Dept. of Computer Sciences, Universidad de Alcalá
Alcalá de Henares, Spain
Email:{luis.fernandezs, josea.medina,
josefa.gomezp}@uah.es
Sanjay Misra
Covenant University
Ota State, Nigeria
Email: ssoapm@gmail.com
Abstract— Quality is everywhere in every discipline. Software
quality has been included in all regular education programs
both at undergraduate level and in postgraduate programs
with more or less intensity and wideness.
However, several
authors have questioned the real effectiveness of software
quality education related to the real understanding of the
concept. This paper analyses the expectations of students with
and without working experience in software development
regarding software quality education and the preferences and
the ideas expressed before the training courses.
Keywords-software quality; education; curriculum; quality
culture.
I.
INTRODUCTION
Quality is one of the three typical dimensions for
managing every project in the well-known iron triangle first
presented in [1] no matter if it is an industrial or a software
one. Although later than other engineering sectors, software
development also embraced the challenge of quality as part
of its regular responsibilities, facing the challenge of
adapting methods to the peculiar nature of software [2].
Independently from its value as a market trend or real
management goal, software quality management is one of the
topics included in educational programs at undergraduate
level
and
in
postgraduate
programs.
However,
some
contributions (e.g. [3]) have identified intrinsic problems in
understanding the concepts related to software quality, then
looking for new perspectives for a correct understanding of
software quality. This conflict was also described in [4]
when they wrote “If you are a software developer, manager,
or maintainer, quality is often on your mind. But what do
you really mean by software quality? Is your definition
adequate? Is the software you produce better or worse than
you would like it to be?” Even the authors conducted a small
survey to 27 readers to know more on several aspects of this
conflict. This is consistent with some results already
presented many years ago [5] related to perception of
students (postgraduate with some experience) regarding
software quality and some of its associated concepts,
observing some improvement in the perception of software
quality as well as some changes in preferred topics after
completing the specific course in the area.
Obviously,
when
dealing with
software quality in
software engineering education there are several references
which doubt of the capability of regular programs to embed
the idea of quality in students’ mind. For example, [6] think
that quality is central and critical in software development
but that it is usual computer science faculty do not devote
enough attention to teaching their students how to develop
high-quality software (at least looking at the curriculum
design
and
implementation).
Of
course,
the
recommendations for really effective curricula in software
engineering are also frequent and are always including the
topic of software quality and associated methods and
techniques (see e.g. [7]). Of course, the most general models
for software engineering education are always considering
software quality has a pillar of the curricula in software
engineering: e.g., the well-known Software Engineering
Body of Knowledge (SWEBOK) [8] devotes one of its 10
Knowledge Areas to Software Quality Analysis.
As a summary, we can say that software quality is
always clearly present in practically 100% of educational
programs in software engineering but it seems to be a topic
which frequently raises questions on the real impact on
students. However, the consequences of the unsatisfactory
results of the education on software quality go beyond the
limits of possible deficiencies in the qualification of (future)
software professionals. As software engineering is mainly a
human activity, not just a technical matter of technology,
perceptions of software engineers deeply impact the results
in term of productivity and quality. The work with Human
and Organizational Factors (HOF) and nontechnical issues
highlight
that
the
people
involved
in
the
software
development process are as important as the processes and
the project.
Different studies have shown how these factors lead to
improvements in products, increases in productivity, or
decreases in production costs. As an example, [9] provides
the outcomes of a study carried out in a professional
environment. It shows that certain organizational factors, that
might not affect project success, negatively affect software
quality: among the factor of influence there is a wrong
quality culture or a lack of sense of quality achievement.
Additional discussion and information could be found in
[10]. Although there are different aspects which confirm the
practical impact of misconceptions on software productivity
284
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

and quality, poor understandings of quality principles has
been identified as relevant in effectiveness of software
projects.
Moreover,
these
barriers
may
hinder
the
achievement of good results in educational programs. The
main goal of this study is the analysis of the expectations of
students to know how working experience and learned
concepts may influence their attitude towards software
quality.
The paper is organized as follows. Section II describes
the educational experience where the data on students’
opinions and expectations were collected. The analysis of
results is provided in Section III, while Section IV outlines
some conclusions and suggests some future lines of action.
II.
EDUCATIONAL EXPERIENCE ON SOFTWARE
QUALITY
Authors
frequently
teach
courses
on
quality
managements systems and software quality in different
undergraduate and postgraduate computing programs. Our
experience tend to show that theoretical or rather abstract or
high level concepts imply a more difficult understanding
than those more connected to low level practical work.
Given that software quality management works at a higher
corporate/organizational
level,
especially
those
students
without working experience tend to be less connected to the
corresponding ideas.
Together with our concerns on the real effects of courses,
we wanted to check several aspects on the expectations of
students
when
they
are
exposed
to
software
quality
education. Thanks to the collaboration of students, we
collected information from several courses where we got a
reasonable variety of profiles and education levels which
provides some representativeness to results. The selected
courses and groups of students were the following ones:
G1: Undergraduate in 2nd and 3rd year of Informatics
Engineering program at University of Alcalá with two
different courses “Software Engineering” and “Advanced
Software Engineering” where there are 20 hours devoted to
software quality: 39 respondents (Madrid).
G2: Undergraduate in 2nd and 3rd year of Information
Systems program at University of Alcalá with two different
courses “Software Engineering” and “Advanced Software
Engineering” where there are 20 hours devoted to software
quality: 14 respondents.
G3: Undergraduate in 4th year of Information Systems
and Informatics Engineering programs at University of
Alcalá with a specialized course on “Software quality,
testing and maintenance” with 60 hours: 11 respondents
(Madrid).
M1: Students enrolled in the Master program on IT
Project Management at University of Alcalá with specific
courses on “quality management and software quality” with
a total of 100 hours: 9 respondents.
Although the topics in all courses are very similar, the
approach in each of them is obviously different depending on
the specific educational goals, previous courses, students’
background and profile as well as duration. In fact, biggest
differences
are
evident
when
comparing
teaching
to
undergraduate and to postgraduate students. It is important to
remark that all the students have attended previous courses
on other aspects connected to software quality such as
software testing and configuration management. However,
there was a general scheme of points taught in each course:
•
Concept of quality and differences between software
and other products. Other concepts related to quality
and management by processes.
•
Corporate perspective: quality management systems
and
continuous
improvement.
Standards
and
frameworks for software process improvement (ISO,
CMMi, etc.)
•
Project
quality
management:
software
quality
assurance, activities and techniques
•
Software quality evaluation: models and metrics
INITIAL QUESTIONNAIRE
1.
Write a definition of quality: ______________________________
2.
So, which of the following phrases is most adjusted to your idea of
quality?
 Highest possible level, no matter who is the customer
 Something associated to expensive and luxurious products
 Product has some guarantee in case of problems
 Balance between price and value
 Concept to be customized to specific needs of the customer
3.
Have you ever heard about software quality?
 Informal chat with colleagues
 Commercial presentations
 Articles or conference papers
 Books (whole or chapters) related to this topic
 You know quality standards and have worked with them
 You do not have any references about this but you guess its importance
4.
So, your idea about software quality is:
(1) Unfavourable impression: it is useless or impractical
(2) Rather unfavourable impression: it represents a great effort to get poor
results
(3) Neutral impression: we need to improve and we can do it but it is
essential to know how to do it
(4) Favourable impression: we are able to achieve good results by
applying certain techniques
(5) Very favourable impression: it is incredible that we are not still
applying these techniques.
5.
In your opinion, who or what should encourage the adoption of
quality techniques in the practice? (you can mark several options)
 Quality department
 Management
 Software professionals and technicians
 The need of satisfying legal dispositions or standards
 Customers, contracts or market pressure
 Others (please indicate) _________________________
6.
Which of the following topics do you consider as the most important
for this course? Put them in order of preference from 1 to 5 (have you
ever heard about them?)
 ISO 9001 (ISO 9000-3)
Heard 
 Quality management systems
Heard 
 Testing, reviews, audits
Heard 
 Software process improvement
Heard 
 Quality control and evaluation (metrics)
Heard 
Have you ever worked in professional software development
(undergraduate students)?  Yes  No
Figure 1.
Initial questionnaire
285
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

Questionnaire in Fig. 1 was used for information
collection from students, the same for all the groups. This
form is replicating the one already used in a previous study
[5] where it is described the design considerations as well as
the methodological considerations. The idea was being able
to compare some results in the future.
Each form had 4
closed multiple choice questions as well as to open questions
apart from a question on real working experience in software
projects. Only undergraduate students were asked about their
working
experience
since
all
master
students
were
experienced. It was clearly commented to students that there
were not correct answers to the questionnaires, that it was
aimed at capturing their ideas freely expressed. Only
graduate students and experienced undergraduate students
were asked about which techniques they would intend to use
in their job after the course. Of course, questionnaires were
anonymous.
Only after collecting all the information, the teacher was
allowed to exploit the activity to organize a free debate on
their perceptions and the reflections associated to them.
III.
ANALYSIS OF RESULTS
Given the small samples, the main goal of the analysis is
getting descriptive information of the ideas expressed
through the questions. Specific goals are the following:
G1. Which is the initial concept of quality for those
attending the course? (question 1)
G2.
Is
the
concept
of
quality
different
between
experienced and unexperienced? (questions 1 and 6)
G3. Which is the opinion on quality of those attending
the course? (question 2).
G4. Is the opinion on quality different between between
experienced and unexperienced ? (questions 3 and 4)
G5. Knowing if opinion on quality is the same between
students with working experience and those without it?
(question 4)
G6. Which is the opinion on who should be the
promoter/sponsor of quality? (question 5).
G7. Knowing if the idea that people tend to make
responsible only to the quality department of the whole
results of the organization? (question 5)
G8. Which is the opinion on orientation to customer?
(question 6)
We present the results extracted from questionnaires in
Table
1,
separating
results
for
unexperienced
and
experienced students to enable an easier analysis of data.
1) As seen on the Table 1, most part of respondents knew
or has heard about software quality (only 3% remain
ignorant before the course). This is not exclusive of
those
inexperienced
students
(2.2%)
although
one
experienced did not have previous references. It is
remarkable that 28.4% of experienced and 16.4% of
inexperienced have worked with standard or have been
working in practical application to projects.
2) Many respondents have acquired knowledge through
theoretical
or
practical
courses
(approx.
40%
of
experienced and 53 % of inexperienced. Although there
is a slight difference (13.8% of experienced vs 12.3% of
inexperienced), there is not much impact of commercial
information
(while
teachers
thought
before
this
experience it was the opposite).
TABLE I.
RESULTS FOR WITH AND WITHOUT EXPERIENCE
Experience
(31,81%)
No experience
(68.18%)
# students
35
75
Concept of quality
Requirements and need
37.1 %
34.66 %
Customer satisfaction
14.3 %
12 %
Guarantee
0
24 %
Tools and maintenance
2.86 %
2.66 %
Correct function
20 %
10.66 %
No losing time
2.86 %
1.33 %
Product value
14.3 %
5.33 %
Process
8.57 %
4 %
Void answer
0 %
5.33 %
Ideas on quality
Highest possible level
25.71 %
13.33 %
Luxury/expensive
0 %
1.33 %
Guarantee
5.71 %
8 %
Value-price balance
22.85 %
28 %
Customization
45.71 %
49.33 %
Previous references
Speech/debates
7.32 %
8.64 %
Commercial presentations
6.5 %
3.64 %
Theory in courses
23.6 %
30.5 %
Practical work in course
16.3 %
23.2 %
Articles and conferences
9.75 %
10 %
Books
7.32 %
8.64 %
Working with standards
13.8 %
7.73 %
Practice in projects
14.6 %
5.45 %
No references
0.81 %
2.22 %
Quality idea
4.08
3.85
Motivator/sponsor
Quality department
28.8 %
20.2 %
Top management
5.08 %
5.64 %
Professionals/technicians
20.3 %
24.02 %
Every employee
39 %
33.9 %
Customers/market
6.78 %
15.3 %
Other
0
0.81 %
Customer orientation:
Information for use
2.86 %
25.33 %
Satisfy customer
specification
0
2.66 %
Satisfy customer needs
51.4 %
37.33 %
Features and requisites
8.57 %
2.66 %
Post-sales service
0 %
0 %
Developing services and
systems oriented to
customers
2.86 %
0 %
Product reliability and
maintainability
0 %
0 %
Information for choosing
product
14.3 %
16 %
Do not know
2.86 %
0 %
286
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

Void
8.57 %
9.33 %
3) Initial idea on software quality is rather high as our
informal
observation
was
suggesting:
average
for
experienced is 4.08 while unexperienced scored 3.85,
both
numbers
really
high.
When
we
compare
undergraduate
(4.02)
and
graduate
students
(4.22)
differences are also small. Only 4 people (0.02%) started
with level 2 (Rather unfavourable).
4) Frequent
misconception
in
old
fashion
quality
organizational cultures detected by Crossby [11] where
majority of people believes that quality is a only
responsibility of the quality department seem s to be still
alive in a good number of undergraduate students (25.1
%) while is really reduced in master students (7.14%). It
is worth to remark the high proportion of undergraduate
and postgraduate who think that the main responsibility
for quality is on the shoulders of the own software
professionals. It is important to note that the largest
percentage of people is correctly thinking that quality is
a responsibility of all workers in the organization, more
clearly for experienced students (57.14%) than for
unexperienced (34.2%).
Finally, market/customers is
the main driver and motivator for quality for 15.2 of
postgraduate students versus 7.14% of the undergraduate
ones. In general there is a good consistency with the
current philosophy of quality in the organizations.
5) From the definitions of quality written by students we
can see that the most mentioned concept is the one
referred
to
requirements
and
needs,
similar
for
experienced
(37.1%)
and
unexperienced
students
(34.6%). The second most mentioned option is customer
satisfaction with 14.3% and 12% respectively. The most
relevant difference between both groups of students
appear in the option of focusing quality as a guarantee
procedure
(maybe
allowing
refund
if customer
is
unsatisfied): 24% of undergraduate mentioned that while
none of postgraduate did.
6) When expressing their idea of product/service quality
the idea that quality concept has to be adapted to the
needs of each customer is accepted by the majority
(45.71% experienced and 49.33% unexperienced). Both
groups reject the idea of associating quality with
expensive/luxurious products while both groups consider
relevant the existence of a proper balance between price
and value.
7) When dealing with the concept of customer orientation,
we want to highlight that information for using the
product is the main aspect for 25.33% of unexperienced
students while satisfying customers’ needs was chosen
by 37.33% while 51.4% of experienced students chose
customer satisfaction letting the information for using
the product as the last option.
8) There is a wide variety in the initiatives which inspire
more interest in students for putting them into practice.
It is interesting to note that there were no other options
apart
from the
ones
shown
in
the
questionnaire.
Adoption of techniques, tools and quality standards keep
a good medium level (between 30% and 50%) while
certification activities score low, maybe because they are
considered as options out of the decision power of the
respondents.
We decided not to analyze differences among the
different courses as the sample numbers were small and the
goal was focused on general expectations of students only
distinguishing the impact or working experience. Analyzing
the effects of the different courses was not meaningful since
they are a non-representative subset of the official syllabus
available for software quality education: i.e., results could
not be applicable to other designs of software quality
courses. Regarding the analysis of post-course results, we
collected data confirming that our courses finally helped fix
the misconceptions on software quality work (e.g., thinking
that not everybody has a direct responsibility in quality), but
we are not discussing here in order to avoid mixing the
analysis of expectations with the analysis of educational
effectiveness of our courses.
IV.
CONCLUSIONS
First valuable result for us has been a better knowledge
on the expectations and the initial idea that our students have
in mind before starting the courses. This has already served
us to adjust the pedagogical methods and the details of topics
to better fit our teaching activity to the students profile and
background. It has also enabled a more solid discussion of
stereotypes on quality, creating new materials and activities
to better debate on the implications of the different views of
software quality (see e.g., [3]). It was really useful to find out
that still a relevant number of students think that the main
responsibility of quality relies on the quality department
instead of accepting that every worker is essential to assure
quality results, thus trying to convince them with the basic
ideas from [11]. Also knowing the main interests in the field
of software quality has helped us in reconsidering the way of
explaining and teaching each topic in the course.
The contribution of our work is clearly focused on
knowing which are the attitudes and the conceptions
regarding software quality of students and professionals. It is
well-known that an effective quality management strategy
has to rely on the contribution of everybody to achieve the
quality goals. As an example, discovering that a relevant
percentage of professionals are still thinking that the quality
department is the main responsible of quality is very
important to the practical implementation of software quality
management: organizations simply cannot assume that
professionals are coming with clear ideas so teams can
directly start to work with processes and method for software
quality. This is also an important lesson for other educators
in software quality: techniques and methods are essential but
they are useless if the attitudinal and conceptual part is not
worked.
We expect to cumulate more data during the present
academic year to enlarge samples so more sophisticated
287
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

analysis using multivariate analysis. We are also already
using an after-course questionnaire to evaluate the evolution
of the quality concepts from the initial idea brought by
students to the outgoing one which will guide their
professional activity. We expect that students (as happened
in [5]) will raise the value given to quality while they also
tend to improve the perception and correct understanding of
the concept of quality.
ACKNOWLEDGMENT
This work has been partially funded by European
Commission
for
project
ICEBERG
no.
324356
(7h
Framework Programme IAPP Marie Curie program).
REFERENCES
[1]
APM. A History of the Association for Project Management
1972-2010.
Buckinghamshire:
Association
for
Project
Management, 2010.
[2]
R.S.
Pressman,
Software
engineering.
A
practitioner’s
approach, McGrwa-Hill, 2015.
[3]
I. Tervonen and P. Kerola, “Towards deeper co-understanding
of software quality”, Information and Software Technology,
vol. 39, Issues 14–15, pp. 995-1003, 1998.
[4]
B. Kitchenham and S.L. Pfleeger. “Software quality: The
elusive target”. IEEE software, 13(1), 12, 1996.
[5]
L. Fernández, J.J. Dolado. “Students expectations in Sofwtare
Quality Education”, Inspire’96. International Conference On
Software Process Improvement - Research Into Education &
Training, , C. Hawkins, M. Ross, G. Staples, H. Wickberg
(eds.), Londres: SGES Publications, 1996.
[6]
T.B. Hilburn and M. Townhidnejad. “Software quality: a
curriculum postscript?”. ACM SIGCSE Bulletin, 32(1), 167-
171, 2000.
[7]
M. Jazayeri. “The education of a software engineer”. In
Proceedings of the 19th IEEE international conference on
Automated
software
engineering
(pp.
18-xxvii).
IEEE
Computer Society, 2004.
[8]
A. Abran, P. Bourque, R. Dupuis, and J.W. Moore. “Guide to
the software engineering body of knowledge-SWEBOK”.
IEEE Press, 2001.
[9]
M. Lavallée, P.N. Robillard.”Why Good Developers Write
Bad Code: An Observational Case Study of the Impacts of
Organizational Factors on Software Quality”. International
Conference on software Engineering (ICSE2015), pp. 16-24.
[10] L. Fernández-Sanz,, and S. Misra. “Influence of human
factors
in
software
quality
and
productivity”.
In
Computational Science and Its Applications-ICCSA 2011, pp.
257-269. Springer Berlin Heidelberg.
[11] P.B. Crossby, Quality is free. The art of making quality
certain, McGraw-Hill, 1979.
288
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-498-5
ICSEA 2016 : The Eleventh International Conference on Software Engineering Advances

