Evaluation of CASE Tools with UML Profile Support for
Geographical Database Design
Thiago Bicalho Ferreira, Jugurta Lisboa-Filho
Departamento de Informática
Universidade Federal de Viçosa
Viçosa, Minas Gerais, Brazil
e-mail: thiagao.ti@gmail.com, jugura@ufv.br
Sergio Murilo Stempliuc
Faculdade Governador Ozanan Coelho (FAGOC)
Ubá, Minas Gerais, Brazil
e-mail: smstempliuc@gmail.com
Abstract— GeoProfile is a Unified Modeling Language (UML)
profile developed for the conceptual modeling of geographical
databases. It uses the entire UML infrastructure including
Computer-Aided
Software
Engineering
(CASE)
tools.
Additionally, the Model Driven Architecture (MDA) approach
along with constraints specified in Object Constraint Language
(OCL) can be used in CASE tools to transform models until
the generation of Structured Query Language (SQL) source
code. This paper describes the evaluation of a set of CASE
tools with UML profile support based on specific requirements
for the use of the MDA approach, OCL constraints and other
elements
to
aid
the
conceptual
modeling
of
geographic
databases using the UML GeoProfile. Based on the results,
geographical databases designers can choose the tool that best
suits your project or use the evaluation methodology used here
to evaluate other CASE tools.
Keywords-UML
Profile;
CASE
tools;
MDA;
OCL;
Geographical Database.
I.
INTRODUCTION
Given the complexity of spatial data, researchers have
dedicated themselves for over the last twenty years to adapt
original formalisms of the Entity-Relationship (ER) model
and
the
Object-Oriented
model
aiming
to
allow
the
conceptual modeling of geographic databases [1][2].
These researches proposed several conceptual models
such as OMT-G [3], MADS [4], GeoOOA [5], UML-
GeoFrame [6], Perceptory [1], GEOUML [7], STGL Profile
[8], and ChronoGeograph [9]. Moreover, several specific
Computer-Aided Software Engineering (CASE) tools have
been implemented for these models. The use of several
conceptual models and tools then created issues such as the
lack of a standard in geographical database (GDB) modeling
and the lack of interoperability among the them. In face of
such problems, references [10] have proposed a Unified
Modeling Language (UML) profile called GeoProfile.
GeoProfile can use all of UML’s infrastructure, which
includes Object Constraint Language (OCL) to define
integrity constraints and Model Driven Architecture (MDA)
for the transformation between its different abstraction
levels [10][11]. Moreover, one of the advantages of using a
UML profile is that it can be used in different CASE tools.
However, not all tools offer the same features, which
difficult the GDB designer to choose one. Examples of
CASE tools with UML support include Enterprise Architect,
Papyrus, StarUML, Visual Paradigm, and IBM Rational
Software Architect.
In order to compare these tools and in the context of this
study, some characteristics or features were prioritized such
as the support to the UML Profile definition, validation of
OCL constraints, and application of the MDA approach.
The key aspect is that the tools need to allow models to be
created using UML GeoProfile, the transformation among
the different levels established by the MDA architecture, the
syntactic e semantic validation of spatial OCL constraints,
and that the models should be implemented from scripts
generated for a selected database management system.
This paper aims to describe the evaluation of a set of
CASE tools considering important requirements from the
conceptual
project
to
the
implementation
of
the
geographical database.
The remaining of the paper is structured as follows.
Section II briefly explains the representation of geographical
data, the UML GeoProfile, the MDA approach and the
syntax to specify OCL expressions. Section III presents a
description of each CASE tool analyzed according to the
goal of this study. Section IV shows the requirements, the
methodology and the result of the tool evaluations. Section
V presents the conclusions and future works.
II.
GEOGRAPHICAL DATABASE MODELING CONCEPTS
This section presents a literature review identifying the
main concepts that contribute to the conceptual GDB
modeling.
A. Representing Geographical Information in Computers
The representation of geographical space in computers is
a challenge faced by researchers. According to Longley et
al. [12], the world is infinitely complex and computing
systems are finite, thus, it is up to the designer to limit the
amount of details to be captured from the environment
mapped. The two main approaches on computing are the
continuous (fields) and discrete (objects) representations.
Another representation also employed is in the form of
networks, which takes into account graph theory.
1
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

Figure 1 shows part of a city with a sports center and
represents part of this city focusing on the roads and the
stadium. The GDB of Figure 1(b) must be conceptually
modeled containing all structures of interest in the system
while leaving aside other information such as the type of
vegetation, vacant plots, terrain, and other characteristics
that may be abstracted from Figure 1(a).
In order to design the conceptual data schema, first the
vector structures used to represent the boundaries of each
geographic entity must be understood, which is normally
specified through basic geometric shapes: point, line and
polygon (area) [13]. Figure 1(b) presents the use of these
three types of vector structures. For instance, the stadium
may be spatially represented as a point or as a polygon
(multiple spatial representation); the main east road, as a
line; and the sports center, as a polygon.
Additionally, presenting the structures, Figure 1(b)
illustrates the relationship among the vector objects, which
shows the stadium “is within” the sports center, the sports
center “touches” the road to the stadium, the main west road
“is near” the sports center, but does not “touch” it.
Such relationships are known as topological relationships
and have been discussed by [14] and [15] and used by [16].
Figure 1.
(a) Photograph of part of a city with a sports center between
roads. (b) Spatial representation of this area. Source: Adapted from [17].
B. Model-Driven Architecture (MDA)
According to Kleppe et al. [18], MDA is a framework
standardized by the [19] for the development of software
employing a Model-Driven Development (MDD) view.
The MDA approach consists of three abstraction levels,
namely, CIM, PIM and PSM. Computation-Independent
Model (CIM) does not show details of the system’s structure,
but rather the environment in which the system will operate.
Platform-Independent Model (PIM) is an independent model
of any implementation technology containing the software
requirements. Platform-Specific
Model (PSM)
specifies
details about the platform in which it will be implemented.
The artifacts produced by the MDA approach are formal
models that can be processed by computers and, after
undergoing transformations, will get to a final source-code
step (top-down approach) or to high levels of abstraction
(bottom-up approach). Figure 2 illustrates the action of
transformation tools at MDA levels.
Figure 2.
Use of transformation tools in the MDA approach. Source:
Adapted from [18].
C. Object Constraint Language (OCL)
Conceptual modeling makes the problem easier to be
understood
through
abstraction,
thus
enabling
risk
management and contributing to error correction early in the
project, which minimizes the cost of maintenance [20].
However, Warmer and Kleppe [21] state that conceptual
models may not be able to represent all requirements,
resulting in problems to those who interpret them.
The OCL, adopted by OMG [22] since version 2.0, was
defined as a formal language to complement the conceptual
modeling using UML. Using OCL ambiguity-free integrity
constraints can be created, which makes it possible to specify
the data consistency wanted in the system at a high level of
abstraction. Since it is a formal language, it can be processed
by CASE tools until the source-code generation, which
enables more powerful and satisfactory data consistency
[21]. OCL is currently at version 2.4 [23].
The OCL expressions represents constraints that are
needed
in the system and
not how they should be
implemented. The evaluation of a constraint on the data
always yields a Boolean value [21]. The syntax of a typical
expression in OCL that represents a condition has the format
presented by Code 1.
<context>
inv:<expression>
(1)
Code 2 illustrates a hypothetical example of OCL
constraint that specifies that a Brazilian municipality must be
larger
than
3,000
km²
(note:
The
smallest
Brazilian
municipality, Santa Cruz de Minas, MG, is 3,565 km²). A
detailed specification of the OCL can be found in [21] [23].
context Municipality
inv:self.area > 3000
(2)
D. UML GeoProfile
In order to provide elements for specific domains without
becoming excessively complex, UML has an extension
mechanism called Profile. A UML Profile consists of: a
metamodel; a set of stereotypes presented through texts in
the form of <<text>> or through graphical icons called
pictograms; tagged values; and constraints; all grouped in a
stereotyped package called <<profile>>, thus formalizing the
UML builder extension [24].
2
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

GeoProfile
is
a
UML
profile
proposed
for
the
geographical
data
modeling
comprising
the
main
characteristics of the existing models in the field [25].
GeoProfile is employed at the CIM and PIM levels of the
MDA approach, using OCL constraints as a resource to
validate the conceptual scheme generated by the designer
[26].
The
GeoProfile
stereotypes
are
extensions
of
the
Association and Class metaclasses. The stereotypes extended
from the Class metaclass allow representing the geographic
space in the discrete view (e.g., points, lined and polygons),
in the continuous view (e.g., large cells and triangular
networks), and through networks (nodes and arcs). The
temporal aspects can also be represented with the stereotypes
made up of tagged values that store instant and range values.
The extended stereotypes of the Association metaclass allow
representing topological relationships (e.g., touches and
within)
among
the
geographical
stereotypes,
and
the
temporal
relationship
(Temporal)
among
the
temporal
objects.
For the extended stereotypes of the Class metaclass, the
abstracted stereotypes have been defined: <<Network>>, to
group network stereotypes; <<GeoObject>>, to group the
discrete view stereotypes; <<GeoField>>, to group the
continuous view stereotypes; and <Arc>>, to group the
<<UnidirectionalArc>>
and
<<BidirecionalArc>>
stereotypes that represent the possible links between the
nodes of a network.
III.
CASE TOOLS ANALYZED
The tools analyzed in this study were chosen according to
the ease of access to the software and documentation. These
tools are open source and commercial with some support to
the UML profile and are well known by the software
development community. The sub-sections below describe
the results of the analysis made on the following CASE
tools, exploring the resources they offer compared to the
GeoProfile: Enterprise Architect (EA) version 12.0, Papyrus
UML2
Modeler
(Papyrus)
version
1.12.3,
StarUML–
UML/MDA
Plataform
(StarUML)
version
5.0.2.1570,
Visual Paradigm for UML (VP) version 10.2 and IBM
Rational Software Architect (RSA) version 9.0.
A. Enterprise Architect (EA)
Enterprise Architect (EA) [27] is a commercial CASE
tool licensed by Sparx Systems that allows the visual
creation of UML profiles and insertion with syntactic
validation of OCL expressions. EA does not offer resources
for semantic validation of OCL expressions.
Additionally, being a modeling tool, it acts as an MDA
transformation tool, with its own language for transformation
between the model levels. This language can be modified so
that the users are able to reach the last MDA approach level,
the source code [28]. Since the modeling in this paper refers
to GDB, the last MDA step is the Data Definition Language
(DDL) source code, which EA is able to generate.
The GeoProfile stereotypes in the EA tool can be
represented graphically
or textually <<point>>. The tool
also offers resources for multiple stereotype representation,
e.g., depending on the scale, a city may be modeled as a
point or a polygon <<point, polygon>>.
The advantage at using EA is that it does not allow the
insertion of extended stereotypes of the Class metaclass in
Association elements and vice versa. The problem is that it
allows the use of abstract stereotypes in conceptual models,
e.g.
the
abstract
GeoProfile
stereotypes:
<<Arc>>,
<<GeoField>>,
<<GeoObject>>,
<<Network>>
and
<<NetworkObj>>.
B. Papyrus UML2 Modeler
Papyrus UML2 Modeler [29] is an open-source tool
based on the Eclipse environment and licensed by Eclipse
(Eclipse Public License). It has a visual environment to insert
UML profiles, thus providing support to insertion and
syntactic validation of OCL constraints. However, it does not
semantically validate these constraints.
Adding graphical icons to the stereotypes is possible.
Thus, a class or association can be represented by stereotypes
as follows: only text, only graphical icon, or graphical icon
and text. The Papyrus tool allows multiple representation to
be specified through stereotypes, but, in case the graphical
representation is used, only the first stereotype used by the
designer is presented.
Additionally, restricting the use of abstract GeoProfile
stereotypes in conceptual models, in this CASE tool other
GeoProfile stereotypes can only be used with correct UML
elements, i.e., an extended stereotype of the Association
metaclass cannot be used in a class defined by the Class
metaclass.
The Papyrus tool does not support the MDA approach,
the transformation language and DDL code generation.
C. StarUML
StarUML [30] is an open-source tool whose profile
insertion is done through an Extensible Markup Language
(XML) document. This tool does not support OCL and,
despite being considered MDA, the features offered are
incomplete. What it allows is transforming a model (PIM)
into source code without going through the PSM. The source
codes can be generated for the languages Java, C++ and C#.
StarUML does not have a transformation language and the
conceptual models produced from GeoProfile cannot be
transformed into DDL source code.
Although
multiple
stereotype
representation
is
not
supported by the tool, the designer can choose between
graphical and text representation, but only text is supported
in associations. Therefore, the possible class stereotype
representations are: textual, graphical, and textual and
graphical. The tool can also restrict the use of abstract
stereotypes at the same time that the others can be properly
used with UML elements.
D. Visual Paradigm for UML (VP)
With an intuitive modeling environment, the commercial
tool Visual Paradigm for UML [31] supports the visual
creation of UML profiles. The stereotypes can be presented
graphically
or
textually,
with
support
for
multiple
representation with the graphical ones.
3
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

The tool does not allow the use of extended stereotypes
of different metaclasses, as described in section A however,
it does allow abstract GeoProfile stereotypes to be used
during conceptual modeling.
The tool allows incomplete MDA approach, transforming
PIM straight into source code. Nevertheless, it does not
support DDL code generation from UML class diagrams,
just only from those created through the ER model. Thus, the
GeoProfile conceptual models cannot be transformed into
DDL code.
This tool also does not support the syntactic and semantic
validation of OCL constraints on conceptual models created
from GeoProfile.
E. Rational Software Architect (RSA)
RSA [32] is a commercial CASE tool licensed by IBM
that allows the visual creation of UML profiles. This tool
supports the use of profiles and is designed to allow syntactic
and semantic validation of OCL constraints applied to UML
diagrams.
The representations by the stereotypes in an association
or class may take place as follows: only textual stereotype,
only graphical stereotype, and representation by the textual
and
graphical
stereotypes.
However,
the
multiple
representation by the stereotypes can take place in two ways:
All stereotypes applied to the class or association must be in
textual format or the first stereotype applied takes on the
graphical format and the others on textual format.
The tool does not allow inserting extended stereotypes of
the Class metaclass in association elements and vice versa,
and the stereotypes defined as abstract in GeoProfile cannot
be used in the UML elements.
RSA has incomplete support to MDA since it does not
natively allow DDL source-code generation. Although there
is a transformation mechanism in which the origin, target,
and
some
settings
regarding
the
mapping
in
the
transformation
from
model
into
source
code
can
be
determined, RSA does not have an MDA transformation
language.
Therefore,
with
RSA’s
native
features
and
mechanisms, these transformations cannot be performed on
models created from the GeoProfile.
IV.
RESULTS OF THE CASE TOOLS COMPARISON
This section initially presents a set of requirements the
CASE tools must meet to support conceptual GDB modeling
based on the GeoProfile. Next, it presents the method used in
the evaluation, the results and the final classification of the
CASE tools analyzed.
This method, originally proposed by Rosario and Santos
Neto [33], was used in exploratory research involving
software project management tools. This method was also
applied by Câmara et al. [34] on comparison of development
environments
for
systems
of
Volunteered
Geographic
Information (VGI).
A. Requirements Survey
Based on the literature and on the descriptions of each
CASE tool, this paper proposes requirements to evaluate
which tool has the greatest amount of features to support the
GeoProfile use, aiming the transformation of data models at
the different MDA levels and to specify integrity constraints
at
conceptual
level
using
OCL.
Table
I
lists
these
requirements.
B. Evaluation Method of CASE Tools
In the context of this study, the requirements were
classified as follows:
•
Requirements that are Essentials: Weight 3;
•
Requirements that are Important: Weight 2;
•
Requirements that are Desirable: Weight 1.
Additionally, to the weight attributed to requirements, a
scale must be defined for how well the tools satisfy each one.
They may not satisfy (NS), partially satisfy (PS), or satisfy
(S) a requirement. Therefore, the following scales can be
attributed:
•
Does not satisfy the requirement: A scale with value
0 is attributed;
•
Partially satisfies the requirement: A scale with
value 1 is attributed;
•
Satisfies the requirement: A scale with value 2 is
attributed.
Based on this evaluation, the classification of each tool
was calculated by adding up the products of the importance
weight
(W)
and
the
satisfaction
scale
(S)
for
each
requirement (n), represented by Formula (3). References [33]
originally proposed this method.
ܺ = ∑
ܵ௜. ܹ௜
௡
௜ ୀ ଵ
(3)
TABLE I.
REQUIREMENTS TO EVALUATE CASE TOOLS
Requirement description
Rq 01
Correct attribution of GeoProfile stereotypes in the UML
elements
Rq 02
Restriction to the use of abstract stereotypes in elements of
the model
Rq 03
Support to syntactic validation of OCL constraints
Rq 04
Support to semantic validation of OCL constraints
Rq 05
Support to MDA transformations
Rq 06
Support to transformation language
Rq 07
Support to graphical exhibition of profile stereotypes
Rq 08
Support to multiple representation through stereotypes
Rq09
Support to visual profile creation
Rq 10
Support to DDL code generation
Rq 11
Open-source tool
C. Evaluation of the CASE Tools
In order to evaluate each CASE tool and its practical
capacity regarding the theoretical functionalities predicted
for a UML profile, particularly GeoProfile, the requirements
presented in Table I were classified according to the
following criteria:
•
The requirements considered essential are those that
support MDA;
4
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

•
Requirements that aid in transformations between
MDA models are considered important;
•
Requirements that care for quality of the GDB
models are considered important;
•
Requirements
that
facilitate
understanding
and
contribute to the adoption of the tool are considered
desirable.
Table II presents the classification of the requirements
regarding their importance level, which are Essential,
Important or Desirable. Table III presents the way each
CASE tool satisfies the requirements of Table I. At the end,
the summary of the evaluation based on Formula (3) is
presented using the data from Tables II and III.
TABLE II.
CLASSIFICATION OF THE REQUIREMENTS BASED ON THE
IMPORTANCE LEVEL.
Importance
Requirements
Essential
Rq05
Important
Rq 01, Rq 03, Rq 04, Rq 06, Rq 08, Rq 10
Desirable
Rq 02, Rq 07, Rq 09, Rq 11
Table III shows the level of satisfaction for each of the
CASE
tools
analyzed,
considering
each
of
the
11
requirements. A CASE tool may or may not support a
requirement, or provide partial support. For example, EA
offers full support for Rq 01. The assigned scale for this level
of satisfaction is 2. Meanwhile, Rq 01 was classified as
“important” in Table II, therefore receiving weight 2. So
when Formula (3) is applied, the sum of (scale x weight) is
calculated for all requirements. Thus, the total sum for EA is
30. The same method was used for all the other tools.
An analysis of Table III shows that the Enterprise
Architect
tool
was
the
one
that
best
satisfied
the
requirements for the transformation of conceptual models so
that the OCL constraints can be used in the tool. Since it has
a customizable transformation language, the OCL constraints
can be transformed into integrity constraints along with the
SQL code generated in the last MDA level.
Another situation that can be observed in Table III is that
the CASE tool RSA provides the best features to use the
OCL constraints since it allows for both syntactic and
semantic validations.
V.
CONCLUSIONS AND FUTURE WORK
With this paper is possible to observe that the tools
evaluated do not have features to meet all the theoretical
needs of UML, mainly regarding the use of profiles, MDA
and OCL. However, they all support conceptual GDB
modeling using GeoProfile.
The results of the comparison show that at the time this
paper was written the EA could be considered the best CASE
tool regarding transformations at the different MDA levels of
models created using the GeoProfile. The RSA can be
considered the tool that best supports OCL constraints due to
its semantic validation, which makes the conceptual models
less prone to errors. Among the free-software tools, Papyrus
stood
out
compared
to
StarUML
for
supporting
the
GeoProfile.
Based on the results in this paper, a designer intending to
use GeoProfile can know which CASE tool currently best
meets the needs of the GDB project. However, it is important
to point out that all tools analyzed are being constantly
improved, which can change the results of this comparison at
any moment.
The method employed, originally proposed by Paranhos
and Santos Neto [33], can be used for different comparisons
so that designers can establish their own requirements and
assign importance weights and satisfaction scales to each
one.
As future research, studies are being done aiming to
reach
interoperability
of
conceptual
geographical
data
models
created
from
different
conceptual
metamodels
specific for geographical databases, whose transformation
base is the GeoProfile metamodel.
TABLE III.
CLASSIFICATION OF THE CASE TOOLS
CASE
Enterprise Architect
Rational Software Architect
Visual Paradigm
Papyrus
StarUML
Requirement
S
PS
NS
S
PS
NS
S
PS
NS
S
PS
NS
S
PS
NS
Rq 01
X
X
X
X
X
Rq 02
X
X
X
X
X
Rq 03
X
X
X
X
X
Rq 04
X
X
X
X
X
Rq 05
X
X
X
X
X
Rq 06
X
X
X
X
X
Rq 07
X
X
X
X
X
Rq 08
X
X
X
X
X
Rq 09
X
X
X
X
X
Rq 10
X
X
X
X
X
Rq 11
X
X
X
X
X
Total
30
25
19
20
12
5
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

ACKNOWLEDGEMENTS
Project partially funded by the Brazilians agencies
FAPEMIG and CAPES. We also thank the support of
Faculdade Governador Ozanan Coelho (FAGOC).
REFERENCES
[1]
Y. Bédard, S. Larrivee, M. J. Proulx, and M. Nadeau, “Modeling
geospatial databases with plug-ins for visual languages: a pragmatic
approach
and
the
impacts
of
16
years
of
research
and
experimentations on perceptory”. Lecture Notes in Computer Science
3289, 2004 pp. 17-30.
[2]
F. Pinet, “Entity-relationship and object-oriented formalisms for
modeling spatial environmental data,” Environmental Modelling &
Software, vol. 33, 2012, pp. 80-91.
[3]
K A. V. Borges, C. A. Davis, and A. H. F. Laender, “OMT-G: An
ObjectOriented
Data
Model
for
Geographic
Applications”,
GeoInformatica, vol. 5, no. 3, 2001, pp. 221-260.
[4]
C. Parent, S. Spaccapietra, and E. Simonyi, “Modeling and Multiple
Perceptions,”
in S.
Shekhar and H.
Xion, Eds., Encyclopedia of
GIS, Berlim: Springer-Verlag, 2008, pp. 682-690.
[5]
G. Kösters, B. Pagel, and H. Six, “GIS-Application Development
with GeoOOA,” International Journal of Geographical Information
Science, vol. 11, no. 4, 1997, pp. 307-335.
[6]
J. Lisboa Filho and C. Iochpe “Modeling with a UML Profile,” in S.
Shekhar and H. Xiong, Eds. Encyclopedia of GIS, Berlim: Springer-
Verlag, 2008, pp. 691-700.
[7]
A. Belussi, M. Negri, and G. Pelagatti, “Geouml: a geographic
conceptual model defined through specialization of iso tc211
standards”. Proc. 10th EC GI & GIS Workshop, ESDI State of the
Art, Warsaw, Poland, 2004, pp. 23-25.
[8]
A. Miralles and T. Libourel, “Spatial database modeling with
enriched model driven architecture,” in S.
Shekhar and H.
Xion,
Eds., Encyclopedia of GIS, Berlim: Springer-Verlag, 2008, pp. 700-
705.
[9]
D. Gubiani and A. Montanari, “ChronoGeoGraph: an expressive
spatiotemporal conceptual model,” Proc. of the Fifteenth Italian
Symposium on Advanced Database Systems, 2007, pp. 160-171.
[10] G. B. Sampaio, F. R. Nalon, and J. Lisboa-Filho, “GeoProfile-UML
Profile for Conceptual Modeling of Geographic Databases,” Proc. Int.
Conf. on Enterprise Information Systems (ICEIS), Funchal-Madeira,
Portugal, 2013, pp. 409-412.
[11] F. R. Nalon, J. Lisboa-Filho, K. A. V. Borges, J. L. Braga, and M. V.
A. Andrade, “Using MDA and a UML Profile integrated with
International
Standards
to
Model
Geographic
Databases,”
Proc. Brazilian Symposium on Geoinformatics (GeoInfo), 2010, pp.
146-157.
[12] P. A. Longley, M. F. Goodchild, D. J. Maguire, and D. W. Rhind,
Geographic Information Science and Systems, Danvers: Wiley, 2010.
[13] G. Câmara, “Computational representation of spatial data”, In: M. A.
Casanova, G. Câmara, C. A. Davis Jr., L. Vinhas, and G. R. Queiroz
(Org.), “Bancos de Dados Geográficos”. Curitiba: EspaçoGeo, cap. 1,
2005, pp. 1-44. (in Portuguese)
[14] E. Clementini, P. Di Felice, and
P. Oosterom, “A Small Set of
Formal Topological Relationships Suitable for End-User Interaction,”
Proc. Int. Symposium on Advances in Spatial Databases, 1993, p.
277-295.
[15] M. J. Egenhofer and R. D. Franzosa, “Point-set topological spatial
relations,” International Journal of Geographic Information Systems,
vol. 5, no. 2, 1991, pp. 161-174.
[16] A. A. A. Ribeiro, S. M.
Stempliuc, and J. Lisboa-Filho, J.,
“Extending OCL to specify and validate integrity constraints in
UML-GeoFrame conceptual data model,” Proc. Int. Conf. on
Enterprise Information Systems (ICEIS), Angers Loire Valley,
France, 2013, pp. 329-336.
[17] R. Kothuri, A. Godfrind, and E. Beinat, Pro Oracle Spatial for Oracle
Database 11g, USA: Apress, 2007.
[18] A. Kleppe, J. Warmer, and W. Bast, MDA Explained: The Model
Driven Architecture: Practice and Promise, Boston: Addison-Wesley,
2nd ed., 2003.
[19] OMG., MDA Guide, OMG Document formal/2003-06-01 edition,
Needham, MA, USA, Version 1.0.1, 2003.
[20] G. Booch, J. Rumbaugh, and I. Jacobson, UML: user guide, Elsevier.
Rio de Janeiro, 2nd ed., 2005.
[21] J. Warmer and A. Kleppe, The Object Constraint Language: Getting
Your Models Ready for MDA, Boston: Addison Wesley, 2nd ed.,
2003.
[22] OMG., Object Constraint Language, OMG Document formal/2006-
05-01 edition, Needham, MA, USA. Version 2.0, 2006.
[23] OMG., Object Constraint Language, OMG Document formal/2014-
02-03 edition, Needham, MA, USA. Version 2.4, 2014.
[24] H. Eriksson, et al., “UML 2 Toolkit”, Wiley Publishing. Indianapolis.
552p, 2004.
[25] J. Lisboa Filho, G. B. Sampaio, F. R. Nalon, and K. A. V. Borges,
“A UML profile for conceptual modeling,” Proc. Int. Workshop on
Domain Engineering (DE@CAISE), 2010, pp. 18-31.
[26] F. R. Nalon, J. Lisboa-Filho, J. L. Braga, K. A. V. Borges, and M V.
A. Andrade, “Applying the model driven architecture approach for
geographic database design using a UML Profile and ISO standards,”
Journal of Information and Data Management, vol. 2, no. 2, 2011, pp.
171-180.
[27] Sparx Systems, Enterprise Architect 12.1. [Online]. Available from:
http://www.sparxsystems.com.au/ 2016.04.13
[28] T. B. Ferreira, S. M. Stempliuc, and J. Lisboa-Filho, “Data Modeling
with UML Profile GeoProfile and Transformations in MDA tool
Enterprise Architect,” Actas. Conferencia Ibérica de Sistemas y
Tecnologías de Informacion (CISTI), Barcelona, AISTI | ISEGI,
2014, pp. 603-608.
[29] Eclipse
Foundation,
Papyrus
Modeling
Environment.
[Online].
Available from: http://www.eclipse.org/papyrus/ 2016.04.13
[30] Star UML, StarUML 2: A sophisticated software modeler. [Online].
Available from: http://staruml.io/ 2016.04.13
[31] Visual Paradigm International, Visual Paradigm, [Online]. Available
from: https://www.visual-paradigm.com/ 2016.04.13
[32] IBM, Rational Software Modeler. Rational Software Architect
Family.
[Online].
Available
from:
http://www-
03.ibm.com/software/products/en/rational-software-architect-family
2016.04.13
[33] R. D. D. Paranhos and I. Santos Neto, Comparative study of change
control tools
in
the software development
process,
Salvador:
Universidade Católica do Salvador, 2009.
[34] J. H. S. Câmara, T. Almeida, D. R. Carvalho, et al., “A comparative
analysis of development environments for voluntary geographical
information
Web
systems,”
Proc.
of
Brazilian
Symposium
Geoinformatics (GEOINFO), 2014, pp. 130-141.
6
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-469-5
GEOProcessing 2016 : The Eighth International Conference on Advanced Geographic Information Systems, Applications, and Services

