PROMETHEUS: a web platform for supporting knowledge management in an 
environment based on experience factory 
 
Pasquale Ardimento, Nicola Boffoli, Vito Nicola Convertini, Giuseppe Visaggio  
Department of Informatics  
University of Bari Aldo Moro 
Bari, Italy 
ardimento@di.uniba.it, boffoli@di.uniba.it, convertini@di.uniba.it, visaggio@di.uniba.it  
 
 
Abstract — This paper presents a Knowledge Management 
System (KMS), called PROMETHEUS, which consists of a set 
of processes that constitute the Experience Factory (EF) and a 
platform that is the Knowledge Experience Base (KEB), which 
collects Knowledge Experience Packages (KEP). The KMS 
thus formed supports the formalization and packaging of 
knowledge and experience of producers and innovation 
transferors 
encouraging 
gradual 
explanation 
of 
tacit 
information of bearers of knowledge to facilitate the transfer. 
The KMS enables the cooperative production of KEP between 
different authors contributing to the production of KEP and 
users of the latter. The paper describes the approach outlined 
in the PROMETHEUS Project and the precautions taken in 
the design of KEP to ensure that: the experience contained in 
it, even when collected through projects executed by many 
person-years, can be quickly acquired by the user, contains the 
tools to facilitate the acquisition of knowledge innovation 
support to transfer. 
Keywords - Business mode; Experience Factory; Knowledge 
Management 
I. 
 INTRODUCTION 
The knowledge of its software engineers and developers 
is the most relevant asset of a software company. However, 
handling such knowledge properly is a complex task. Several 
studies and experimentations have been conducted on how to 
share and increase such knowledge. “Among them there is 
the ground breaking work of Basili on the experience 
factory” [27]. In this paper, we present a knowledge 
experience factory, called PROMETHEUS, to enact a 
knowledge management system within a software company. 
The framework is made up of four major sections: Contents, 
Attributes, Educational and Training E-Learning, Taxonomy. 
 
The PROMETHEUS (Practices Process and Methods 
Evolution Through Experience Unfolded Systematically) 
Project [1], [2], [21], [22], [23], [24], [26] is a model of 
Experience Factory (EF) to collect experimental knowledge 
in a repository Knowledge Experience Base (KEB) in the 
form of Knowledge Experience Package (KEP). The KEP is 
the vehicle suggested for the transfer of knowledge while the 
EF is the set of processes that make the Open Innovation. 
This paper describes the structure of the KEP and the 
features that make the contents to be tailored and attractive 
for the target of the innovation. 
The rest of the paper is structured as follows: the next 
section discusses related works and research activities; third 
section presents the major concepts implemented in 
PROMETHEUS, 4th section describes the incremental 
production of KEPs. Finally, in the conclusions some 
observations are made about PROMETHEUS and possible 
future research pathways are identified. 
II. 
RELATED WORKS 
The aim of experience factory [28] is to provide an 
infrastructure that supports project developments by 
analyzing and synthesizing all kinds of experience, acting as 
a repository for such experience, and supplying that 
experience to various projects on demand. Introduced in late 
eighties, the concept of experience factory has been 
implemented in many organizations [8], [10], [11], [15]. 
Unfortunately, there is still no exact well established 
technique that would lead to a guaranteed success in 
adopting the concept of experience factory in a company and 
to this regard the human factor is pointed out as the main 
cause [28]. 
Our approach focuses on a knowledge base whose 
contents make it easier to achieve knowledge transfer among 
research centres; between research centres and production 
processes; among production processes. The knowledge base 
must be hybrid, public, as we wish, or private, depending on 
KEP authors preferences. The public KEB allows one or 
more 
interested 
communities 
also 
included 
public 
administrations, to develop around it and exchange 
knowledge. 
III. 
PROMETHEUS 
The Authors use the term knowledge package to refer to 
an organized set of: knowledge content, teaching units on the 
use of the demonstration prototypes or tools and all other 
information that may strengthen the package’s ability to 
achieve the proposed goal. The KEP must be usable 
independently of its author or authors and for this purpose 
the content must have a particular structure: distance 
education and training must be available through an e-
182
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

learning system. In short, the proposed knowledge package 
contains knowledge content integrated with an e-learning 
function. 
In PROMETHEUS, the KEP must include all the 
components shown in Figure 1. A user can access one of the 
package components and then navigate along all the 
components of the same package according to her/his needs. 
 
Figure 1.  Diagram of a Knowledge/Experience package 
The KEP does not contain the conceptual basis of the 
subject, because it is considered as the background of the 
user's knowledge, and can be found in conventional sources 
of knowledge such as technical reports, papers and books. 
Anyway, when users need some of the basic concepts for 
understanding the contents of KEP they can use educational 
e-learning course. And if users should need more 
information, they can use the "attachments" regarding  
reports, papers and books about basic topics of KEP. Instead, 
if the use of a demonstrational prototype is required to 
become operational, the same package will point to a training 
in e-learning course. As stated above, the use of these 
courses is flexible, to meet individual user's needs. 
When a package also has support tools, rather than 
merely demonstration prototypes, Knowledge Content (KC) 
links the user to the available tool. For the sake of clarity, we 
point out that this is the case when the knowledge package 
has become an industrial practice, so that the demonstration 
prototypes included in the archetype they derived from have 
become industrial tools. The tools are collected in the Tools 
Component (TL). Each tool available is associated to an 
educational course, again of a flexible nature, in the use of 
the correlated training e-learning course. 
Should the user need support from whom has knowledge 
of the contents of KEP, a list of resources is a reference. The 
list is collected in the Competence component (CM). 
A. Knowledge Content 
It can be seen in the Figure 1 that the Art & Practices KC 
is the central one. It contains the KEP expressed in a 
hypermedia form in order to include figures, graphs, 
formulas and whatever else may help to understand the 
content. The KC is organized as a tree that starting from the 
root (level 0) descent to the lower levels (level1, level2, …, 
leveln ) through pointers (Figure 2). The higher the level of a 
node the lower the abstraction of the content, which focuses 
more and more on operative elements. The root node of KC 
is made up of the following sections: 
 
Thoughtful Index: tells the reader how the package 
suggested will practically change, with a list of 
processes and activities, case the whole process is 
not innovating or has to be modified. 
 
Problem (one or more): describes the problem of 
KEP. A problem may belong to one of the two 
following types: decision and optimization. If the 
problem is the decision there should be the 
possibility to make a choice, and the aim for this 
choice. If the problem is optimization, the resources 
you want to improve the performance and the 
objective function of optimization have to be 
indicated. For each problem, the context has to be 
defined, that is to say all facts and circumstances 
which cause and condition a certain problem. 
The leaf nodes have the answers to the problems: the 
solution or solutions suggested for each problem set. Figure 
2 shows an example of KC. 
 
 
Figure 2.  Sample of  Knowledge Content of a KEP 
To ensure control of completeness and lack of ambiguity 
in the contents of KEP, the vocabulary of KEP, i.e. concepts 
and relations between there meanings, has been formalized 
by the W3C XML Schema [20], in short XSD to obtain for 
each KC the following advantages: 
1. The full list of concepts (elements) which have to be 
declared with obligatorily, multiplicity and default 
values of the elements / concepts, relationships 
between elements / concepts, type of elements, 
attributes defined for each element, type of 
attributes, ...; 
2. Elimination of ambiguity, incompleteness, verbosity 
due to Informal definitions; 
3. Verification of the correct syntax ; 
4. Interoperability of the KEP, at the syntactic level 
between background of experience that share the 
structure proposed by us, leading to an independence 
of the software that produces them. 
The research results integrated by a KEP may be 
contained within the same knowledge base or derive from 
other knowledge bases or other laboratories. If the 
knowledge package being read uses knowledge packages 
located in the same experience base, the relations will be 
183
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

explicitly highlighted. In Figure 3 is graphically shown the 
KEP structure. 
 
Figure 3.  Sample of content of a Knowledge/Experience package 
B. Attributes 
Search inside the package starting from any of its 
components is facilitated by the component’s Attributes. As 
shown in Figure 1, each component in the knowledge 
package has its own attributes structure. For all the 
components, attributes allow rapid selection of the relative 
elements in the knowledge base. Attributes have already 
been defined in [25], [2].  To facilitate the research, we used 
a set of selection classifiers and a set of descriptors 
summarizing the contents. The summary descriptors include: 
a brief summary of the content and a history of the essential 
events occurring during the life cycle of the package, giving 
the reader an idea of how it has been applied, improved, and 
how mature it is. The history may also include information 
telling the reader that the content of all or some parts of the 
package are currently undergoing improvements. 
The classifiers include: 
 
The adoption risks of the technological innovation 
where it is provider; 
 
The mitigation initiatives of risk that assure a better 
performance of the KEP in the solution of main 
problems 
 
The impact that the KEP will have on the active 
processes of the production lines where it will be 
applied, supposed that the problems to solve 
correspond to the ones in the KEP 
 
A forecast of the Return of Investment that the new 
introduction will have in the company. For this 
reason the economical impact of the KEP as well as 
its impact on the value chain are specified; 
 
The acquisition plan of the methods of the KEP; 
 
The history of the KEP, i.e. the set of practices that 
have required the use and the results following to 
their application in order to assure a higher 
perception of reuse of the KEP. 
The interested reader can find further details on the 
contents of the KEP and the management and use of KEB on 
the technical report [18]. 
C. Educational and Training E-Learning  
PROMETHEUS, as shown in Figure 1, is made up of 
several sections for each component provided by the 
structure of the KEP. The division into sections enables 
beneficiaries to cut, and then adapt the learning to their 
training needs. In the interface for access to each section of 
PROMETHEUS 
there 
are 
links 
to 
resources 
and 
relationships of the component selected with the rest of KEP. 
In order to support the beneficiaries for the acquisition of 
the KEP, PROMETHEUS helps them select a training 
program best suited to their knowledge. PROMETHEUS, in 
fact, provides for each KEP, in addition to training materials 
and training, tests to assess skills for the adoption of KEP by 
companies, research and government institutions interested 
in them. If tests were to detect any skill gaps, models are 
used to fill them, suggesting the more appropriate decision. 
For each competence PROMETHEUS, in fact, provides a 
set of learning units. Each learning unit aims to train the user 
of a KEP on one or more items of the KEP of interest. 
Therefore, it is possible to attach to each teaching unit a test 
plan to verify that the user already has, or has acquired, the 
corresponding part of competence. 
Such a model predicts that each jurisdiction has an 
associated evaluation questionnaire and a decision model. In 
the questionnaires the self-assessment tests result in the user 
evaluation of the KEP and guidelines to improve the training 
of the user. The test assesses the competencies and skills 
attained by the user and the gap between them and the ones 
expected. The model of decision interprets the level of 
acquisition of the skills of users receiving the evaluation 
questionnaires and suggests actions to be undertaken to fill 
any gap between skills expected and skills acquired by the 
learner. The model decision is made by the decision tables. 
Operationally, for each competency C(i) a specific 
evaluation model is planned (Figure 4). In this model, the 
responses gathered by QC(i) the evaluation questionnaires 
provided, are interpreted by an appropriate set of decision 
tables DT (Figure 4). There is more than one DT where each 
DT aims to interpret the answers of the corresponding 
teaching unit UD. 
 
Figure 4.  Evaluation Model 
184
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

D. PROMETHEUS Taxonomy 
Taxonomy is the practice and science of classification 
according to natural relationships. In PROMETHEUS, 
taxonomy is used by administrators to organize content and 
is created from 'Vocabularies' that contain related 'Terms'. 
The PROMETHEUS logic implemented for taxonomy 
allows a vocabulary to be set up with either tags defined by 
user (also known as folksonomy) or terms defined by 
administrator. 
When users view a KEP to which a term has been 
assigned, along with the KEP, many themes will generally 
display the node's term(s). Each term appears as a link. 
Clicking the link displays a page showing the other KEPs 
with the same term. 
The PROMETHEUS Taxonomy organizes taxonomies 
into vocabularies which consist of one or more terms. 
Vocabularies group terms that describe an aspect of the 
content. Each vocabulary consists of a set of terms. 
PROMETHEUS can have an unlimited number of 
vocabularies each containing an unlimited number of terms. 
Within a vocabulary terms can be ordered into 
hierarchies. In PROMETHEUS, all vocabularies are 
hierarchical, in other words, you can simply arrange items in 
a hierarchy. 
Vocabularies may be designated as “free” tagging in 
which users creating new content don't have to classify it 
with terms from a "controlled vocabulary", previously 
defined. Instead users can freely define terms, or "tags". 
Vocabularies can be set to allow terms to define related 
terms. This function is similar to "see also" in a dictionary.  
Vocabularies define whether users may attach only a 
single term to a node or whether users may attach multiple 
terms to a node. 
Simple implementations might create a set of terms 
without hierarchies. More complex implementations, in the 
future, might use hierarchies of terms. 
By using multiple vocabularies it is possible to classify 
an individual content in multiple ways. It’s also possible tie 
the vocabulary to particular content type:  AP, TL, EV, PR, 
CM (see Figure 1) or whatever. Then when users create 
content of a particular type, they'll see a list of the 
vocabulary terms that go with it. Users can then categorize 
their post by choosing from the list (you can also give your 
vocabulary a help text to help your users choose).  
Vocabularies can have hierarchies of terms. In 
PROMETHEUS, administrator simply arranges items to 
create a hierarchy: “single select” allows terms to be nested 
but each sub-term is associated on only one parent; “multiple 
select” allows a term to be associated to multiple parents. 
With either single or multiple a vocabularies can have as 
many levels as desired. If administrator allow "free tagging", 
when users create content they can make up their own terms 
as they go along, instead of having to choose from a list. 
By choosing "multiple select", administrator can allow 
users to put a post into more than one category at once by 
tagging it with more than one vocabulary term. 
Also, if appropriate, administrator can require to users 
that create content of a certain "content type" they assign at 
least one of this vocabulary's terms. 
Administrator can decide the order in which vocabulary 
will appear in lists by assigning a "weight" to it. 
Finally, administrator can delete 
the 
vocabulary 
altogether, thereby also deleting all its terms (but not the 
content to which they were assigned). 
Administrator must assign your term a name (you have to 
do it. There's no such thing as a "nameless term"). 
Administrator can list synonyms for a term (this creates 
what is known as a "thesaurus"), decide the order in which 
the term will appear in lists by assigning it a "weight" and 
also delete a term altogether. 
Moreover the menu of PROMETHEUS can call the 
KEPs that match terms of a specific taxonomy, those terms 
named categories by administrators. 
IV. 
INCREMENTAL PRODUCTION OF KEPS 
A KEP is generally based on conjectures, hypotheses and 
principles. As they mature, their contents must all become 
principle-based. The transformation of a statement from 
conjecture through hypothesis to principle must be based on 
experimentation showing evidence of its validity. The 
experimentation, details of its execution and relative results, 
are collected in the Evidence component (EV), and duly 
pointed to by the knowledge package. 
Finally, a mature knowledge package is used in one or 
more projects, by one or more firms. At this stage the details 
describing the project and all the measurements made during 
its execution that express the efficacy of use of the package 
are collected in the Projects component (PR) associated with 
the package. A KEP is undergoing a process of incremental 
improvement that aims to reach all parts described above. 
The incremental completion is performed by different 
authors who cooperate but that are geographically and tempo 
rally spread. 
As shown in Figure 5 Author(s) produce the KEP with 
their own knowledge. Researchers and practitioners, 
beneficiaries of the contents of KEP, reported as 
Recipient(s), acquire the innovation contents contained in 
KEP, whatever stage they are. The KEP evolve since then, 
through their research or their experiments becoming their 
own authors. The results of the research or experiments, 
properly formalized, enrich the KEP. 
 
 
Figure 5.  Incremental Production of KEPs 
185
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

V. 
CONCLUSIONS 
In this paper, we presented a web-based platform aimed 
for use in companies implementing the concept of 
experience factory. We provided a general overview of 
PROMETHEUS knowledge management framework, and 
described the main features and structure of KEP, which are 
Contents, Attributes, Educational and Training E-Learning, 
Taxonomy. We also showed that PROMETHEUS integrates 
a Knowledge Management System and a Learning System, 
allowing navigation among all its components. 
We have already validated PROMETHEUS in academic 
environment [21], [24], [26] but it is necessary in order to 
generalize the validity of the KEP proposed in this work that 
it is validated by empirical studies in non-academic 
environments. Obviously, in order to demonstrate the 
validity 
of 
PROMETHEUS 
many 
other 
empirical 
investigations and studies are needed, in particular industrial 
context. For this reason, the authors intend plan and execute 
experiments, make instruments and material available to 
other interested researchers.   
REFERENCES 
[1] P. Ardimento, N. Boffoli, M. Cimitile, A. Persico, and A. Tammaro, 
“Knowledge Packaging supporting Risk Management in Software 
Processes”, Proceedings of IASTED International Conference on 
Software Engineering SEA, Dallas, pp. 30-36, November 2006. 
[2] P. Ardimento, M. Cimitile, and G. Visaggio, “La Fabbrica 
dell’Esperienza nell’Open Innovation”, proceedings of A.I.C.A., 
Benevento (Italy), September 2004. 
[3] H. Chen and Z. Wu, "On Case-Based Knowledge Sharing in 
Semantic Web," ictai, pp.200, 15th IEEE International Conference on 
Tools with Artificial Intelligence (ICTAI'03), 2003 
[4] H.W. Chesbrough, “Open Innovation: The New Imperative for 
Creating and Profiting from Technology”,Harvard Business School 
Press, 2003. 
[5] C. Edquist, “Systems of Innovations Approaches: Their Emergence 
and Characteristics”. In Edquist, C. (Ed.) Systems of Innovation: 
Technologies, Organizations and Institutions. London: Pinter 
Publishers/Cassell Academic, 1997 
[6] R. L. Glass, "A Sad SAC Story about the State of the Practice," IEEE 
Software, vol. 22, no. 4, pp. 120, 119, July/Aug. 2005, 
doi:10.1109/MS.2005.82 
[7] W. Huang, M. O'Dea, and A. Mille, “ConKMeL: A Contextual 
Knowledge 
Management 
Framework 
to 
Support 
Intelligent 
Multimedia e-Learning”. Proceedings of IEEE Fifth International 
Symposium on Multimedia Software Engineering, pp 223-230, 2003, 
doi: 10.1109/MMSE.2003.1254445 
[8] A. Jedlitschka and D. Pfahl, “Experience-Based Model-Driven 
Improvement Management with Combined Data Sources from 
Industry and Academia”. Proceedings of the 2003 International 
Symposium on Empirical Software Engineering, pp. 154-161, 2003. 
[9] K.D. Joshi, S. Sarker, and S. Sarker, "The Impact of Knowledge, 
Source, Situational and Relational Context on Knowledge Transfer 
During ISD Process," hicss, vol. 8, pp.252c, Proceedings of the 38th 
Annual Hawaii International Conference on System Sciences 
(HICSS'05), doi: 10.1109/HICSS.2005.597. 
[10] M. Klein, “Combining and relating ontologies: an analysis of 
problems and solutions”. In IJCAI-2001 Workshop on Ontologies and 
Information Sharing, pp. 53--62, Seattle, WA, 2001. 
[11] T.W. Malone, K. Crowston, and G.A. Herman, “Organizing Business 
Knowledge-The MIT Process Handbook”, MIT Press Cambridge, 
2003. 
[12] C.A. O’Reilly and L.M. Tushman, “The ambidextrous organization” 
Harvard Business Review 82  (4):74-81, 2004. 
[13] D. J. Reifer, “Is the Software Engineering State of the Practice 
Getting Closer to the State of the Art?”, IEEE Software, Volume 20 
Issue 6, November 2003, doi: 10.1109/MS.2003.1241370. 
[14] F. Tao, D. Millard, A. Woukeu, H. Davis, “Managing the Semantic 
Aspects of Learning Using the Knowledge Life Cycle”. Fifth IEEE 
International Conference on Advanced Learning Technologies 
(ICALT'05), pp. 575-579, 2005, doi: 10.1109/ICALT.2005.195. 
[15] K. Schneider and T. Schwinn, ”Maturing Experience Base Concepts 
at DaimlerChrysler”, Software Process Improvement and Practice, pp. 
85–96, 2001. 
[16] G. Xiangyang, H. Linpeng, and L. Dong, “Intelligent Data 
Transferring Based on Semantic Web Services”, Services Computing, 
2004 IEEE International Conference on (SCC'04), pp.463-466, 2004. 
[17] R. Agarwal and E. Carmel, ”Tactical Approaches for alleviating 
Distance in Global Software Development”, IEEE Software, pp. 22-
29, Mar-Apr 2001. 
[18] G. Visaggio, “Knowledge Experience Base and Experience Factory”, 
available 
at 
http://serlab.di.uniba.it/images/stories/Serlab/knowledgebaseandexper
iencefactory.pdf, retrieved on 01 October 2010. 
[19] D.M. Amidon, “Blueprint for 21st Century Innovation Management”, 
Journal of Knowledge Management, Volume 2, Number 1, pp 23-31, 
September 1998. 
[20] W3C XML Schema available at http://www.w3.org/XML/Schema 
retrieved on 01 October 2010 
[21] P.Ardimento, D.Caivano, M.Cimitile, and G.Visaggio, “Empirical 
Investigation of the Efficacy and Efficiency of tools for transferring 
software engineering knowledge”, Journal of Information & 
Knowledge Management, Volume 7, ISSUE 3, September 2008, pp. 
197-208. 
[22] P. Ardimento, M. Cimitile, and G. Visaggio, “Knowledge 
Management integrated with e-Learning in Open Innovation”, Journal 
of e-Learning and Knowledge Society, Vol. 2, n.3, Erickson edition, 
pp. 343-354, 2006. 
[23] PROMETHEUS 
available 
at 
http://serandp.com/prometheus  
retrieved on 01 October 2010 
[24] P. Ardimento, M.T. Baldassarre, M. Cimitile, and G. Visaggio 
“Empirical Experimentation for Validating the Usability of 
Knowledge Packages in the Innovation Transfer”,  Communications 
in Computer and Information Science, ISSN: 1865-0929 (Print) 1865-
0937 (Online), Volume 22, pp. 357-370, November 2008, Springer 
Berlin Heidelberg. 
[25] P. Ardimento and M.Cimitile, “An Empirical Study on Software 
Engineering Knowledge/Experience Packages”, 9th International 
Conference on Product Focused Software Process Improvement 
(PROFES 2008), Roma 23-25 June 2008, Lecture Notes in Computer 
Science 5089 Springer 2008, ISBN 978-3-540-69564-6 pp. 298-303. 
[26] P. Ardimento, M.T.Baldassarre, M.Cimitile, and G.Visaggio, 
“Empirical 
Validation 
on 
Knowledge 
Packaging 
supporting 
knowledge transfer“, 2nd International Conference on Software and 
Data Technologies (ICSOFT) 2007, pp 212-219, ISBN: 978-989-
8111-05-0, 2007, Volume PL/DPS/KE/MUSE. 
[27] V.R. Basili, G. Caldiera, and H. D. Rombach, “Experience Factory”. 
In Marciniak, J.J. (ed.), Encyclopedia of SE, vol 1, John Wiley & 
Sons; pp. 469-476, 1994 
[28] A. Koennecker, R. Jeffery, and G. Low, “Lessons Learned from the 
Failure of an Experience Base Initiative Using Bottom-up 
Development Paradigm”. 24th Annual Software Engineering 
Workshop. 1999. 
 
186
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

