Cluster-based Energy-efﬁcient Composite Event Detection for Wireless Sensor
Networks
Irfana Memon, Traian Muntean
ERISCS Research Group
Aix-Marseille Universit´e
France
Emails: {irfana.memon, traian.muntean}@univ-amu.fr
Abstract—Wireless sensor networks (WSNs), well known
communicating architectures today, are often used to detect
the occurrence of some environmental events, such as pollution
monitoring, forest ﬁres detection, location and tracking, etc.
In order to reduce irrelevant alarms, multiple attributes are
used in the event detection process. In WSNs, communication
is often by far more expensive and difﬁcult to control than
local computation within nodes. Therefore, it becomes critical
to reduce the amount of data exchange within a WSN, in order
to optimize the use of power and energy resources within nodes.
Energy optimization is thus one of the most important aspects
of the WSN design. There are already literature and projects
dealing with the detection of composite events using data ag-
gregation at intermediate nodes. In this paper, a cluster-based
energy-efﬁcient composite event detection (CEC) for wireless
sensor networks scheme is proposed, which performs local
computation at sensor nodes and local data aggregation at level
of each cluster heads in order to reduce the communication
overhead. Simulation results show that jointly, considering
both local computation at sensor nodes level and local data
aggregation at intermediate nodes will further reduce the total
energy consumption and thus prolong the network lifetime.
Keywords-Wireless sensor networks (WSNs); data aggregation;
local computation; composite event detection.
I. INTRODUCTION
A wireless sensor network (WSN) consists of a large
number of sensor nodes which are distributed in a given
space for measuring environmental parameters, such as
temperature, light, sound, humidity, and so on [1]-[3]. Many
applications have already been envisioned and described for
WSNs in a wide range of areas, such as environment moni-
toring [4], health care applications [5], military surveillance
applications [6], positioning and tracking [7], etc. Depending
on the application domain, it may be necessary for sensor
nodes within the WSN to react quickly or with critical
timing constrains to detected events [8]. Moreover, the data
collected by the WSN must be fresh when the corrective
action is taken.
One of the critical tasks in designing a WSN is to monitor,
detect and report various useful occurrence of events in a
timely and reliable fashion. An event can be deﬁned as an
exceptional change in the environmental parameters. Events
can be simple (atomic) or composite [9]. An atomic event
can be detected merely based on the observation of one
attribute, for example high temperature, if the temperature
is higher than a speciﬁed threshold, an atomic event is
detected. A composite event is the combination of different
atomic events. A detailed description of composite events is
given in Section III. An event alarming application needs
an answer to a question which can be derived by a set
of predicates. For example, in ﬁre alarming applications,
users are not interested in knowing the exact reading of
attributes (temperature, smoke) of monitored area, but they
want an exact and valid answer to the question: is there
ﬁre in the monitored area? In this case, we assume that an
event has some signiﬁcant characteristics that can be used
as threshold to distinguish between normal and abnormal
environment parameter. Event detection sensor networks
require periodic data update (fresh data) from the net-
work. Sending data periodically to a remote base station
may incurs high communication overhead, and high energy
consumption for event-driven applications. One of the key
problems in event-driven applications is energy efﬁcient data
extraction, (i.e. how can a base station obtain the event report
with a low energy consumption). Hill et al. [10] have shown
that a sensor node spends approximately the same amount
of energy for sending a single bit of data as it does to
execute 800 instructions. Thus, in order to decrease energy
consumption and thus increase network lifetime, the amount
of data exchanged should be minimized.
Data aggregation techniques are very effective in reducing
communication overhead (i.e., the data sensed by the sensors
are combined at intermediate nodes before sending to a
remote base station, BS). A number of data aggregation
algorithms have been proposed in the literature [11]-[16].
Cluster-based topologies help to deal with in-network data
aggregation (i.e., sensors are grouped in clusters and data
aggregation is done locally within clusters). Some of the
advantages to be achieved from clustering in WSNs are the
reduction in energy for message transmission and construct-
ing a virtual backbone for data routing purpose [17]. Many
clustering algorithms have been proposed for WSNs, such
241
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

as LEACH [18], LRS [19], PEGASIS [20], and HEED [21].
In this paper, we are not investigating clustering algorithms.
We are considering that a wireless sensor network is divided
into multiple clusters using an existing clustering algorithm.
Each cluster has a special node (called cluster head (CH)
or aggregator node) that collects data from all other nodes
in the cluster and then performs some computations on the
collected data. All CHs form the network backbone. Instead
of transmitting each packet from sensor nodes to a remote
base station, all CHs collect data, aggregate and send a
single aggregated data packet to the base station along the
network backbone. For intra-cluster communications (the
communications between cluster members and the cluster
head), an efﬁcient routing mechanism is required. A number
of routing protocols are reported in the literature [22]-[26].
Routing within the cluster can be realized through a directed
diffusion algorithm.
Several schemes have been proposed for event detection
for WSNs. In some studies, events are detected using a fuzzy
logic rule-based system [27]-[28]. Several rules constitute a
fuzzy rule-based system [29], however, keeping the rule-
base might require a signiﬁcant memory on sensor nodes.
The number of rules grows exponentially to the number
of variables, such as for n variables each of which can
take m values, the number of rules in the rule-base is mn.
Furthermore, use of spatial and temporal features during
decision process increases the number of rules. Since sensor
nodes have limited memory, keeping a complete rule-base
on every node might not be achievable. Moreover, constantly
traversing a large rule-base might considerably slow down
the event detection.
On the other hand, in several schemes, events are detected
using a user deﬁned threshold [30]-[32]. In such schemes,
event alarm is arisen when sensor reading is lower or higher
than predeﬁned threshold value. However, existing threshold
based schemes introduce high communication overhead.
More details on related work are provided in Section II.
In this paper, we propose a threshold-based approach for
composite event detection in WSNs. The main advantages of
this proposed approach is simplicity, energy efﬁciency, and
can be applied more easily. Indeed, the sensor node need
to evaluate a simple boolean expression which is perfectly
in line with considering requirement of WSNs of keeping
computational complexity low. Our proposed Cluster-based
Energy efﬁcient Composite event detection (CEC) algorithm
is a two-level event detection scheme. At the ﬁrst level,
sensor nodes perform local computation to detect atomic
events and transmit a report message to the CH, when
an atomic event has been observed. Moreover, the second
level is carried out at intermediate nodes (i.e., CHs), which
perform local data aggregation of received atomic event
reports from the sensors in the cluster and take decision for
a composite event. The main contributions of our proposed
scheme are:
• (1) All sensor nodes (i.e., CHs and cluster members)
send packets in binary format instead of raw data;
achieves low overhead on data packet.
• (2) Each cluster member performs local computations
on the sensed data, and sends a report message to the
cluster head when an atomic event has been observed.
• (3) CHs perform local data aggregation for the received
data from their cluster members and evaluate the com-
posite event. Then, the CHs send particular synthesis of
composite event occurrence to the base station, when a
composite event has been observed.
• (4) Finally to reduce false alarm rate to the base
station, composite event deﬁnition consists of multiple
attributes [31].
Since events are often combination of more than one
attribute , use of multiple attributes can help increasing
event detection rate and reducing false alarm rate [31].
The event that is a combination of multiple attributes is a
composite event. For example, the composite event ﬁre is a
combination of multiple attributes, i.e., the occurrence of ﬁre
should satisfy some conditions such as temperature > 100
0C AND smoke > 100mg/L, rather than a simple condition
temperature > 100 0C alone. Thus, it reduces false alarm
rate to the base station.
In this paper, optimizing energy saving with joint lo-
cal computation on sensors and local data aggregation on
cluster heads is considered. Simulation results compare the
proposed scheme with the non-local computation schemes.
It is shown that signiﬁcant energy saving can be achieved
via the proposed scheme. Ongoing work further reviews
performances and compare with other existing schemes; this
will be presented in a companion paper.
The rest of the paper is organized as follows. In Section
II, we describe related works. Section III provides detail of
the Cluster-based Energy efﬁcient Composite event detection
(CEC) scheme. Section IV presents simulation results, and
Section V concludes the paper and discusses future works.
II. RELATED WORKS
Recently, problems of event detection for WSNs have
drawn a lot of attention. Liang and Wang [27] propose to use
fuzzy logic with double sliding window for event detection.
However, the authors do not study the effect of fuzzy logic
approach.
Marin-Perianu and Havinga [28] have proposed fuzzy
logic based approach for event detection. In this approach,
fuzzy logic is used to combine personal and neighbors’
observations for an event detection. However, the approach
does not use any temporal semantics and do not analyze the
number of false alarms.
Kumar et al. [30] have proposed a framework for detecting
both simple and composite events with distributed collab-
oration of sensor nodes. This framework consists of two
protocols called simple event detection and composite event
242
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

detection. The proposed protocols are based on publish-
subscribe communication paradigm. Each protocol works
in two phases: (i) initialization phase, and (ii) collection
phase. In the initialization phase, an application subscribes
events of interest (atomic events or composite events) to the
sensor network, and constructs an event based tree (EBT)
based on these events. In the collection phase, data in the
form of predicate is collected along this tree and sent to
the subscriber. The subscriber will decide of the occurrence
of events. In order to save energy, the data are collected
using aggregation. In this scheme, all the sensor nodes
periodically send their data to the subscriber. A conclusion is
then made at the subscriber to decide whether a predeﬁned
event has happened based on the received data. However,
sending data periodically from sensors to the subscriber
incurs communication overhead which causes large energy
consumption. In addition, at a subscriber, the received data
need to be further analyzed to obtain a conclusion which
delays the alarm to be timely announced.
Vu et al. [31] examined the Timely Energy-efﬁcient k-
watching Event Detection Problem. The objective is to
assure that an area is monitored by at least k sensors.
The proposed protocol divides the set of sensors into a
number of non-disjoint subsets called detection sets such
that each detection set ensures the k-watching property. Each
detection set deﬁnes a tree, constructed using the Breadth
First Search (BFS) algorithm starting from a gateway and
data is then collected along this tree. Any sensor node
with richer energy resource can be gateway. To ensures
k-watching property, the protocol maintains a counter ’cl’
to records the number of currently required sensors for
composite event detection in the actual detection set. In this
scheme, all the sensor nodes send their sensed data to a
gateway node, and a decision on whether a predeﬁned event
occurs based on the received data is made by gateway node.
However, sending sensed data from sensors to the gateway
node incurs high communication overhead which causes
large energy consumption. In addition, an other drawback
of this approach is that it requires global information to
construct the detection sets.
To overcome the problem of global information in [31],
Marta et al. [32] have proposed an energy-efﬁcient compos-
ite event detection in wireless sensor network. The algorithm
sets sensor’s schedule using a localized connected dominat-
ing set based approach. In the Initialize phase a sensor node
will decide whether it will be active or sleeping in the next
round. The algorithm decides the sensor scheduling at the
beginning of each round. Each node relies on local infor-
mation from its h-hop neighborhood. The main drawback of
this approach is that each node requires h-hop neighborhood
information. For constructing h-hop neighborhood, each
node broadcasts h-HELLO messages, thus incurring high
communication overhead.
III. COMPOSITE EVENT DETECTION
A composite event, e.g., ﬁre is a combination of multiple
attributes, i.e., the occurrence of ﬁre should satisfy some
conditions such as temperature > 100 0C AND smoke >
100mg/L AND humidity < 50. In particular, this paper
focuses on forest ﬁre detection. We implement threshold-
based method for forest ﬁre detection in WSNs. In forest ﬁre
detection method, sensor nodes collect measurement data
such as , temperature, smoke, and relative humidity. All
these factors are key factors for determining the forest ﬁre
[33]-[34]. The Forest-Fires Surveillance System (FFSS) [33]
was developed to prevent forest ﬁres in the South Korean
Mountains and to have an early ﬁre-alarm in real time.
The system senses environment state such as temperature,
humidity, smoke and determines forest-ﬁres. It is quite
difﬁcult to maintain threshold values for temperature, smoke,
and humidity. High temperature, low humidity are the key
factors for forest ﬁre [35]-[38] and burning of wood gives off
large amount of smoke. We evaluate our approach by setting
threshold value for temperature, smoke and humidity equals
to 50, 50, and 20 respectively.
All nodes have sensors, temperature, smoke, and humidity.
But due to lack of energy there might be a situation where
sensor can fail, e.g., Node 1 has temperature, smoke and
humidity sensors. But, node 2 has smoke and humidity
sensors because temperature sensor on node 2 has failed. In
such case, composite event detection must be occurs with
sharing sensing capabilities of sensor nodes. Keeping this
in mind, our approach perform composite event detection
at cluster head. In this section, we present a Cluster-based
Energy efﬁcient Composite event detection (CEC) protocol
for WSNs in detail.
A. Notations, Messages structure, and Preliminary deﬁni-
tions
1) Notations: The following notations are used through-
out the paper for different type of messages used in our
simulations.
• Thr Temperature, Thr Smoke, Thr Humidity: Thresh-
olds for temperature, smoke, and humidity respectively.
• C Temperature, C Smoke, C Humidity: Current sensed
temperature, smoke, and humidity respectively.
• AE: Atomic Event
• CE: Composite Event
2) Messages structure: A message has several ﬁelds. The
ﬁrst ﬁeld of a message is the type of the message which can
be one of the following: AE Report (Atomic Event Report),
and CE Report (Composite Event Report).
• AE Report
message
has
the
following
format:
{AE Report,
S ID,
(XS ID,
YS ID),
Dest ID,
(XDest ID,
YDest ID),
Temperature,
Smoke,
Humidity}
Where, S ID ﬁeld stores the ID of the sensor node
243
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

that sends the message (sender node), (XS ID, YS ID)
ﬁeld stores the location of the sender node in the
monitored area, Dest ID ﬁeld stores the ID of the
destination, (XDest ID, YDest ID) ﬁeld stores the
location of the destination, Temperature ﬁeld holds
the report of atomic event Temperature, Smoke ﬁeld
holds the report of atomic event Smoke, and Humidity
ﬁeld holds the report of atomic event Humidity. This
message is used by ordinary nodes (cluster members)
to give information on the occurrence of an atomic
event to the CH in the cluster. The packet size is 132
bytes.
• CE Report
message
has
the
following
format:
{CE Report,
S ID,
(XS ID,
YS ID),
Dest ID,
(XDest ID, YDest ID), CE}
Where, S ID ﬁeld stores the ID of the sensor node
that sends the message (sender node), (XS ID, YS ID)
ﬁeld stores the location of the sender node in the
monitored area, Dest ID ﬁeld stores the ID of the
destination, (XDest ID, YDest ID) ﬁeld stores the
location of the destination, and CE ﬁeld holds the
report of composite event. This message is used by
CHs to give notiﬁcation to the BS that the occurrence
of a composite event has been detected. The packet
size is 124 bytes.
3) Preliminary deﬁnitions: An atomic event condition
and composite event condition are formalized as follows.
Deﬁnition 1 Atomic Event detection: An atomic event
can be determined based on single attribute. The atomic
event detection is carried out by comparing sensed data of
attributes with their predeﬁned threshold values. An atomic
event condition is a Boolean formula and is denoted by AE
which evaluates to TRUE or FALSE.
Deﬁnition 2 Composite Event detection: A composite
event involves multiple attributes. A composite event con-
dition is also a Boolean formula and is denoted by CE
which occurs when all attributes that forms a composite
event occurs.
B. Cluster-based Energy efﬁcient Composite event detection
(CEC) protocol
Our proposed CEC protocol contains also two phases: (1)
Initialization phase and (2) data collection and composite
event detection phase.
(1) Initialization phase: In initialization phase, clusters
are formed after network deployment using an existing
clustering algorithm. Clusters are assumed to have their own
cluster head and all CHs collectively form a backbone in the
network (shown as Figure 1.). CHs will send their report to
the base station along the backbone. For simplicity of our
discussion, we assume that each CH knows the topology
and other ordinary nodes (cluster members) in each cluster
know their CH. Note that the knowledge needed by CHs and
cluster members can be obtained when the clustered network
is built.
Figure 1.
Clustered network
(2) Data collection and Composite Event detection phase:
Each node periodically monitors a set of distributed at-
tributes A = { A1,...,An}, and generates a discrete data
value vector at every time instance (at every second).
Each attribute, Ai, may be an environmental property being
sensed by the node (i.e., temperature, smoke, humidity). In
this paper, sensor data is generated via a pseudorandom
number generator. The node compare the sensed with their
corresponding predeﬁned threshold values, and compute
atomic event ’AE’ using the deﬁnition 1. When AE be-
comes ”TRUE” (i.e., AE = 1), a cluster member sends
<AE Report> message to the CH in the cluster. We assume
that CHs have timer. Timer is used to ensure that the com-
posite event detection is based on fresh date received from
cluster members. On receiving <AE Report> message, CH
performs local data aggregation to estimate composite event
occurrence based on the collected data within the ”timer”
using the deﬁnition 2. When CE becomes ”TRUE” (i.e., CE
= 1), a cluster head sends <CE Report> message to the BS
along the network backbone.
IV. SIMULATION AND RESULTS
A. Simulator
WSNet simulator [39] is used as a simulation platform.
WSNet is wireless network event-driven simulator, it has
been developed in CITI laboratory of INSA Lyon. It is
largely similar to other event-driven simulators such as ns2,
JiST, GloMoSim, GTNetS, omnet++ though it differentiates
itself with various functionalities, a precise radio medium
244
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

simulation and the simulated node internals. Node, environ-
ment and radio medium blocks are developed in independent
dynamic libraries. Moreover, the addition of new models
does not require to modify the core of WSNet and can be
done easily.
B. Simulation Results
We evaluate our approach composite event detection
with Local Computation on the cluster members in the
cluster through simulation, and we compare it to composite
event detection without Local Computation on the cluster
members in the cluster. The parameters involved in this
comparison are number of messages transmitted in the
cluster, and amount of the total remained energy in the
cluster. To do simulation and evaluation, 100 sensor nodes
are located randomly within a cluster of 50*50 m2. The
initial energy of nodes is taken 1 Joule. We consider that
each node consumes 0.003 Joules to send a packet. Atomic
event attributes are sensed periodically and in each period
atomic event detection process is executed. All of the
simulations were run 50 times, and the average results
are plotted in the graphs. Table 1 lists the simulation
parameters.
Table I
SUMMERY OF THE PARAMETERS USED IN THE SIMULATION
EXPERIMENTS
Parameter
Value
Simulation time
10s,20s,30s,40s,50s,60s,70s,80s,
90s,100s
Cluster size (m x n)
50 x 50 m2
Number of Nodes in the
cluster
100 nodes
Nodes distribution
Nodes are randomly distributed
Performance parameters
Communication overhead within the
cluster, sum of remaining energy in the
cluster
Antenna type
Omnidirectional
MAC Layer
802.11
Initial node energy
1 Joule
Energy
for
transmitting
one packet
0.003 Joules
Radio range
30
Figure 1 shows comparison of communication overhead
in the cluster by varying simulation time for two cases.
NoLocalComputation is the case of all existing protocols
for composite event detection, in which all ordinary sensors
monitor atomic event attributes and send it to the CH
periodically. CEC Scheme is the case in which local
computation for an atomic event detection on the ordinary
sensors (cluster members) is applied. When a cluster
member detects an atomic event, then it sends a message to
the CH. Figure 1 shows that our proposed scheme has low
communication overhead in the cluster when compared to
the existing scheme with NoLocalComputation.
Figure 2 shows comparison of the total remaining energy
Figure 2.
Total number of packets transmitted in one cluster
of cluster member in the cluster by varying simulation time
in CEC Scheme to NoLocalComputation case.
Figure 3.
Total Remaining Energy in one cluster
V. CONCLUSION AND FUTURE WORK
As mentioned already, communication consumes high
energy when compared to computation in WSNs. In order
to reduce energy use within sensor nodes and thus to
increase lifetime of wireless sensor networks, composite
event detection with local data aggregation has been used
in this work. It is supported by local computation in the
clusters. Our proposed scheme is proven to be more efﬁcient,
since each sensor is required to perform local computation to
detect the atomic event and send report to cluster head in the
case when atomic event occurs. The total remaining energy
in the cluster was also determined, which is considered as
the metric to prove energy efﬁciency with our proposed
protocol. This has been conducted by simulation. The sim-
ulation results show that using local computation in the
245
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

cluster, communication overhead is decreased by our scheme
and thus more energy is saved than the existing schemes
with NoLocalComputation which will lead therefore to an
increase the network lifetime.
In our ongoing work, we will examine the performance
data, accuracy, robustness and reliability. To prevent false
alarms, a computationally cheap and efﬁcient ﬁltering sys-
tem is required for forest ﬁre detection. Keeping into mind
the critical resource constraint nature of sensor network,
we use Bayesian classiﬁer and Gaussian Mixture Model
classiﬁer to ﬁlter false or irrelevant event reports. The com-
panion paper provides information about these classiﬁers and
reasons why they are suitable for wireless sensor networks.
We will compare our proposed approach with other existing
schemes. Furthermore, ﬁltering process has an impact on
reporting delays. We will also investigate trade-off between
irrelevant alarms tolerance and reporting latency.
REFERENCES
[1] C. Buratti, A. Conti, D. Dardari, and R. Verdone, “An
Overview on Wireless Sensor Networks Technology and Evo-
lution”, Sensors, pp. 6869-6896, [retrieved: July, 2009].
[2] I. F. Akyildiz, W. Su, and E. Cayirci, “Wireless sensor net-
works: A survey”, Computer Networks, pp. 393-422, [re-
trieved: December, 2001].
[3] N. Meratnia, B. J. V. D. Zwaag, H. W. V. Dijk, D. J. A.
Bijwaard, and P. J. M. Havinga, “Sensor Networks in the Low
Lands”, Sensors, pp. 8504-8525, [retrieved: July, 2010].
[4] J. B. Ong, Z. You, J. Mills-Beale, E. L. Tan, B. D. Pereles, and
K. G. Ong, “A wireless, passive embedded sensor for real-time
monitoring of water content in civil engineering materials”,
IEEE Sensors, pp. 2053-2058, [retrieved: November, 2008].
[5] J. Ko, C. Lu, M. B. Srivastava, J. A. Stankovic, A. Terzis,
and M. Welsh, “Wireless Sensor Networks for Healthcare”,
Proceedings of the IEEE, pp. 1947-1960, [retrieved: November,
2010].
[6] L. Lamont, M. Toulgoat, M. Deziel, and G. Patterson, “Tiered
Wireless Sensor Network Architecture for Military Surveil-
lance Applications”, SENSORCOMM, pp. 2053-2058, [re-
trieved: August, 2011].
[7] Q. Hao, D. J. Brady, B. D. Guenther, J. B. Burchett, M.
Shankar, and S. Feller, “Human tracking with wireless dis-
tributed pyroelectric sensors”, IEEE Sensors, pp. 1683-1696,
[retrieved: December, 2006].
[8] L. Gu, D. Jia, P. Vicaire, T. Yan, L. Luo, A. Tirumala, Q.
Cao, T. He, J. A. Stankovic, T. Abdelzaher, and B. H. Krogh,
“Lightweight Detection and Classiﬁcation for Wireless Sensor
Networks in Realistic Environments”, SenSys, pp. 205-217,
[retrieved: November, 2005].
[9] S. Li, S. H. Son, and J. A. Stankovic, “Event Detection
Services Using Data Service Middleware in Distributed Sensor
Networks”, In Proceedings of the 2nd Internnational Workshop
on Information Processing in Sensor Networks, pp. 502-517,
[retrieved: April, 2003].
[10] J. Hill, R. Szewczyk, A. Woo, S. Hollar, D. Culler, and K.
Pister, “System architecture directions for networked sensors”,
In the 9th International Conference on Architectural Support
for Programming Languages and Operating Systems, pp. 93-
104, [retrieved: November, 2000].
[11] K. Maraiya, K. Kant, and N. Gupta, “Wireless Sensor Net-
work: A Review on Data Aggregation”, International Journal of
Scientiﬁc and Engineering Research, [retrieved: April, 2011].
[12] S. Madden, R. Szewczyk, M. Franklin, and D. Culler, “Sup-
porting aggregate queries over ad-hoc sensor networks”, In
Workshop on Mobile Computing and Systems Applications
(WMCSA), pp. 49-58, [retrieved: August, 2002].
[13] D. Wagner, “Resilient aggregation in sensor networks”, In
Proceedings of the 2nd ACM workshop on Security of adhoc
and sensor networks, pp. 78-87, [retrieved: October, 2004].
[14] C. Intanagonwiwat, D. Estrin, R. Govindan, and J. Hei-
demann, “Impact of Network Density on Data aggregation
in Wireless Sensor Networks”, In Proceedings of the 22nd
International Conference on Distributed Computing Systems,
pp. 575-578, [retrieved: November, 2002].
[15] C. Intanagonwiwat, R. Govindan, and D. Estrin, “Directed
diffusion: A scalable and robust communication paradigm
for sensor networks”, In Proceedings of the Sixth Annual
ACM/IEEE International Conference on Mobile Computing
and Networking (Mobicom’2000), pp. 56-67, [retrieved: Au-
gust, 2000].
[16] S. Madden, M. J. Franklin, and J. M. Hellerstein, “TAG: A
Tiny AGgregation Service for Ad-Hoc Sensor Networks”, In
Proceedings of the Fifth Symposium on Operating Systems
Design and implementation, [retrieved: December, 2002].
[17] O. Dagdeviren and K. Erciyes, “A Distributed Backbone
Formation Algorithm for Mobile Ad hoc Networks”, Lecture
Notes in Computer Science, pp. 219-230, [retrieved: December,
2006].
[18] W. R. Heinzelman, A. Chandrakasan, and H. Balakrishnan,
“Energy-Efﬁcient Communication Protocols for Wireless Mi-
crosensor Networks”, In Proceedings of the 33rd Hawaii Inter-
national Conference on System Sciences, [retrieved: January,
2000].
[19] S. Lindsey, C. S. Raghavendra, and K. Sivalingam, “Data
Gathering in Sensor Networks using the Energy Delay Met-
ric”, In Proceedings of the 15th International Parallel and
Distributed Processing Symposium, pp. 2001-2008, [retrieved:
April, 2001].
[20] S. Lindsey and C. S. Raghavenda, “PEGASIS: power efﬁcient
gathering in sensor information systems”, In Proceedings of
the IEEE Aerospace Conference on IEEE Aerospace and
Electronic Systems Society, pp. 1125-1130, [retrieved: March,
2002].
[21] O. Younis and S. Fahmy, “HEED: A hybrid, energy-efﬁcient,
distributed clustering approach for ad hoc sensor networks”,
IEEE On Transactions on Mobile Computing, pp. 366-379,
[retrieved: October, 2004].
246
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

[22] T. Muntean, J. Garmendia, and S. Rivas, “A model for routing
in networks of mobile agents Parallel and Distributed Comput-
ing Systems”, In Proceedings of the Parallel and Distributed
Computing and Systems, [retrieved: November, 2000].
[23] J. Garmendia, S. Rivas, L. Mugwaneza, and T. Muntean, “Pi-
Routage: une technique d’acheminement des communications
pour processus mobiles”, In Proceedings of the RENPAR’12,
pp. 179-184, [retrieved: June, 2000].
[24] T. Muntean, “Diffusing Mobile Processes”, in Concurrent
Information Processing and Computing, NATO Science Series
III: Computer and System Sciences, pp. 111-130, [retrieved:
May, 2005].
[25] V. Moraru and T. Muntean, “A Model for Secure Broadcasting
Mobile Systems”, ICTEI’08 - Chisinau, [retrieved: May, 2008].
[26] K. Atighehchi, T. Muntean, S. Parlanti, R. Rolland, and
L. Vallet, “A cryptographic keys transfer protocol for secure
communicating systems”, In Proceedings of the 12th Inter-
national Symposium on Symbolic and Numeric Algorithms
for Scientiﬁc Computing, pp. 339-343, [retrieved: September,
2010].
[27] Q. Liang and L. Wang, “Event detection in wireless sensor
networks using fuzzy logic system”, In Computational Intelli-
gence for Homeland Security and Personal Safety, Institute
of Electrical and Electronics Engineers (IEEE), pp. 52-55,
[retrieved: August, 2005].
[28] M. Marin-Perianu and P. Havinga, “D-FLER: a distributed
fuzzy logic engine for rule-based wireless sensor networks”, In
Proceedings of the 4th International Conference on Ubiquitous
Computing Systems, LNCS, pp. 86-101, [retrieved: August,
2007].
[29] L. A. Zadeh, “Outline of a new approach to the analysis of
complex systems and decision processes”, IEEE Transations on
Systems Man and Cybernetics, pp. 28-44, [retrieved: January,
1973].
[30] A. V. U. P. Kumar, A. M. Reddy, and D. janakiram, “Dis-
tributed collaboration for event detection in wireless sensor
networks”, In Proceedings of the 3rd international workshop
on Middleware for pervasive and ad-hoc computing, pp. 1-8,
[retrieved: November, 2005].
[31] C. T. Vu, R. A. Beyah, and Y. Li, “Composite event detection
in wireless sensor network”, In Proceedings of the IEEE
International Performance, Computing, and Communications
Conference, pp. 264-271, [retrieved: April, 2007].
[32] M. Marta, Y. Yang, and M. Cardei, “Energy-Efﬁcient Com-
posite Event Detection in Wireless Sensor Networks”, In
Proceedings of the 4th International Conference on Wireless
Algorithms, Systems, and Applications, Lecture Notes in Com-
puter Science, pp. 94-103, [retrieved: August, 2009].
[33] B. Son, Y. Her, and J. Kim, “A design and implementation
of forest-ﬁres surveillance system based on wireless sensor
networks for South Korea mountains”, International Journal of
Computer Science and Network Security (IJCSNS), pp. 124-
130, [retrieved: September, 2006].
[34] http://www.ﬁrescience.gov/projects/briefs/03-1-3-
02 FSBrief41.pdf [retrieved: February, 2009].
[35] N. Corsi and A. Gemelli, “An Innovative Approach to Forest-
Fire Detection and Monitoring: The EU-FIRE Project”, In
Proceedings of the 14th International Conference on Automatic
Fire Detection, [retrieved: September, 2009].
[36] I. P. Anderson, I. D. Imanda, and Muhnandar, “Forest
ﬁre
prevention
and
control
project”,
http://www.ﬁre.uni-
freiburg.de/se asia/projects/ffpcp/FFPCP-02-Interpretation-
NOAA-Hot-Spot-Data.pdf, [retrieved: March, 1999].
[37] F. Siegert and A. A. Hoffmann, “The 1998 Forest Fires in East
Kalimantan (Indonesia): A Quantitative Evaluation Using High
Resolution, Multitemporal ERS-2 SAR Images and NOAA-
AVHRR Hotspot Data”, Remote sensing of environment, pp.
64-77, [retrieved: April, 2000].
[38] http://www.erh.noaa.gov/car/ﬁrewxopsplan.txt
[retrieved:
May, 2008].
[39] WSNet simulator, available: http://wsnet.gforge.inria.fr/
247
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

