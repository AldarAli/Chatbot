Dynamic Decision Engine for Data Connections
Routing
Sajjad Ali Musthaq, Christophe Lohr, Annie Gravey
TELECOM Bretagne Department of Computer Science Brest, France
Email: {sajjad.musthaq, christophe.lohr, annie.gravey}@telecom-bretagne.eu
Abstract—Companies nowadays are subscribing links to sev-
eral Internet Service Providers (ISPs) for reliability, redundancy
and better revenues underlying the service extension, while
providing good Quality of Service (QoS). A dynamic decision-
making framework is presented for SOCKS based data services
over a multihomed platform that is primarily architectured
for multimedia services. The decision engine takes multiple
criteria (attributes from context of the request, platform’s latest
conditional parameters, business objectives of the company, etc.)
into account while computing the routing decision. Two Multi-
Criteria Decision Making (MCDM) methods, namely Analytical
Hierarchy Process (AHP) and Technique for Order Preference
by Similarity to Ideal Solution (TOPSIS) are used for weight cal-
culation and decision-making respectively. The system supports
outsourcing and provisioning decision enforcement modes. The
proposed solution gives higher throughput and lower connection
dropping probability with an add-on susceptible delay while
fulﬁlling the desired goals, taking into account the multiple
attributes for choosing the best alternative.
Index Terms—Decision Engine, Multi-Criteria Decision Mak-
ing (MCDM), Connection Dropping Probability, Throughput
I. INTRODUCTION
Legacy network infrastructures and technologies cannot
guarantee the Quality of Service (QoS), Quality of Experience
(QoE) and performance requirements of voice/video and data
services (FTP, Web, Mail) all together as they need diverse
resources with varying set of QoS parameters. Companies
use Internet to deliver these services with desired QoS. Tra-
ditionally, companies purchase multiple links to the Internet
from different service providers (termed as multihoming) to
address the versatile QoS requirement issue. Companies with
mulihoming support also require the ability to ensure that con-
nections in their networks are routed according to the optimal
route to maximize their income and to ensure the required
level of service performance. Although the primary purpose of
multihoming is to enhance reliability of the network, it is also
desirable to use multihoming for Load Balancing (LB) and
latency reduction. However, intelligent route control/selection
allows companies to take advantage of the path diversity that
multihoming provides, to improve network performance while
using the resources effectively and efﬁciently. Policy-based
Border Gateway Protocol (BGP) [1] deployment is used to
address the intelligent route control issue in multihomed en-
vironments. However, BGP deployment is costly and requires
lots of administration effort and hence does not suit small-
to-medium business. Decision-making in the intelligent route
control/selection plays a crucial role in mulihomed systems.
The system must take into account context of the request,
platform’s environmental conditions/parameters, state of the
links, predeﬁned routing rules and business objectives of the
company. Multimedia sessions/connections (voice/video and
other quadruple services) carry enough information about the
context of the request during the signaling phase (e.g., Session
Initiation Protocol (SIP) [2]) as opposed to data (FTP, Web,
Email) connections. This information is exploited in decision-
making for routing the request to an appropriate link in
mulithomed network. The information availability with certain
limitation can have an impact on dynamic decision-making for
request routing in mulithomed environment.
The objective of this work is to provide a dynamic
policy controlled decision-making framework (decision com-
putation and its enforcement) for Transmission Control Proto-
col (TCP) based SOCKetS (SOCKS) [3] connections/session
routing in consent with ongoing multimedia services over
the same platform. There are mechanisms for controlling the
trafﬁc at private-public network border (e.g., Connection/Call
Admission Control (CAC), Least Cost Routing (LCR), etc.).
However, the decision-making mechanisms involved in these
systems are usually static and/or semi-dynamic. Moreover,
these systems take into account few attributes among the set
of available parameters over the platform, while calculating
the decision (service proﬁle, reliability information, time of
the day, business objectives of the company, latest state of
the links, user proﬁles and Service Level Agreement (SLA)
etc.). It is important to mention here that the scope of an SLA
is limited to exploit the relevant Service Level Speciﬁcation
(SLS) information extracted from the direct and/or reciprocal
agreement between the company and service provider within
Policy Server (PS) for decision computation.
The underlying information stated above (which has
to be taken into account for request routing) comes from
different sources with different dimensions, hence formulating
a multi-criterion problem. The ﬁrst challenge is to utilize the
available information over the platform maximally, so that
the ﬁnal decision for link selection reﬂects dynamic control
and effective resource utilization with good QoS. Another
objective is to enforce the calculated decision using existing
technologies (e.g., Network Address Translation (NAT)ing,
Domain Name Service (DNS) Cycling, Hashing, Proxying
etc.) without introducing overheads in the protocol stack.
Multi Criteria Decision Making (MCDM) theory has been
applied in order to use this multidimensional info for routing
decision computation. Internet Engineering Task Force (IETF)
104
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

Company’s Service and 
Application plane
Session Border Controller(SBC)
(PEP)
Public 
Network
SIP flow
SNMP flow
Diameter flow
Access 1
Access 2
Access 3
Access N
SOCKS Server (PEP)
Data
Control 
Plane
Private 
Network
Edge Router
Policy Server/Decision Engine (PDP)
Fig. 1.
Proposed Architecture.
conventional Policy-Based Network Management (PBNM) [4]
framework involving Policy Decision Point (PDP), Policy En-
forcement Point (PEP) and Local PDP (LPDP) is followed for
decision enforcement in outsourcing and provisioning modes.
The architecture shown in Fig. 1 is proposed in Com-
panym@ges [5] project which provides a platform where
companies are linked to the rest of the world via two or more
network accesses offering data and multimedia services. PEP
functionality for multimedia and data services is splitted and
is being performed at two distinct locations (i-e., SBC and
SOCKS server respectively). Data connections are routed to
the external links by PEP, i-e., SOCKS server while taking
into account business intelligence of the company, dynamics
about the resources, network issues etc. Admission Control
(AC) function has LCR objective and is split into proﬁle and
resource based AC and is distributed among PEP and PDP
i-e., PS respectively. Communication between PDP and PEP
is carried out over IMS ’Gq’ [6] interface using Diameter [7]
protocol. The private-public trafﬁc management issues at the
border-line regarding multimedia services are addressed in our
previous work [8], [9]. The present paper is an extension to
this work for data trafﬁc. The proposed framework proposes an
efﬁcient solution by enhancing and extending the existing stan-
dards. Dynamic decision engine computes decisions by taking
multiple criteria into account. In this context, tweaking of
SOCKS server to act as PEP, support for decision enforcement
in outsourcing (on-the-ﬂy) and provisioning modes (off-line)
respectively and the introduction of MCDM theory to solve
the multi-criterion network problem are the main contributions
from our side. It is an ultra lightweight solution for dynamic
LCR implementation in SOCKS communication framework
under the control of policy decisions.
The remainder of this paper is organized as follows. In
the following Section, we describe the proposed architecture.
Section III elaborates the decision theory and the application
of MCDM methods. Section IV presents realization of the
framework, its functionality, tools tweaked and the decision
enforcement modes. In Section V, the test bed for the validity
of the proposed solution is presented. Section VI outlines
related work. Finally, in Section VII, concluding remarks are
made while outlining the future work.
II. SYSTEM ARCHITECTURE
QoS-centered architecture integrates devices and modules
from different vendors over a single platform while offering
multimedia and data services for public and private (local)
networks. One of the objectives of the proposed architec-
ture shown in Fig. 1 is the accommodation of dynamic
modiﬁcations/variations into the decision-making criteria for
request routing to different links by using enhanced general
methods/techniques. Service, control and transfer planes issues
posing a multi-criteria problem are handled together without
affecting the standard mechanisms and classical layered ap-
proach. The platform supports the enhanced standard protocols
(e.g SIP) [2], SOCKS [3], Diameter [7], etc.) without employ-
ing overheads while the dynamics over those three planes are
taken into account in decision-making.
A SOCKS based framework for the control and man-
agement in multihoming scenario is presented in order to
provide better than Best Effort (BE) QoS for data services.
The underlying Companym@ges [5] project stems from com-
petitivity cluster for handling trafﬁc management issues at the
private-public network border. Components of this platform
(Fig. 1) are provided by partners: the platform’s service and
application plane is realized by modules from Alcatel-Lucent
whereas SBC, PS and SOCKS server are/will be developed and
tweaked by two different teams at TELECOM Bretagne Brest.
Moreover, these modules can be integrated in a single box;
however, there are different teams/partners involved in this
project with their dedicated solutions/packages (stand-alone
boxes).
Policy Server (PS) is the main controller in the proposed
architecture. It acts as a PDP. It computes all the decisions
by taking into account the static conﬁgurations and dynamics
taking place over the platform, in addition to the policy
enforcement supervision. Decision engine proposed here while
using MCDM theory partly constitutes the core of PS. It is
worthwhile to mention here that functional decision engine is
embedded within the architecture but PS is in development
phase, so the rules are entered manually via web-based front
end. Session Border Controller (SBC) in the offered frame-
work is primarily dedicated to multimedia communication. It
provides a number of vendor speciﬁc functionalities depending
on the requirements and its deployment. More details are
available in [8], [9].
SOCKS server is implemented in the application layer
while the client is a shim-layer between application and
transport layer (TCP/IP Layer Model). It allows hosts located
on one side of a SOCKS server to gain controlled access
to hosts located on the other side with conﬁgured rules and
policies. It acts as a TCP forwarder on demand. The control,
management and rule administration/application is static but
we introduce dynamicity in decision-making for link selection
by taking into account various parameters and attributes (user
proﬁle, QoS proﬁle, latest state of the links/SLAs associated
with these links, predeﬁned conﬁguration over the platform).
TCP based SOCKS data connections are targeted here in this
work (User Datagram Protocol (UDP) support is available in
SOCKS5).
SOCKS is an application independent transport-level for-
warder offering Authentication, Authorization (AA). It works
in client-server mode and provides NAT/Port Address Trans-
lation (PAT) traversal and ﬁrewall services. SOCKS native AA
105
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

Request to the Remote Server
Client Request
State of the Remote Server
OK
Connection Request
Sending UserName/Password
AA Supported Methods
AA Method UserName/Password
SOCKS5 Server
(PEP)
Client Machine
Application Server
Connection with 
the Remote Server
Data Flow
Fig. 2.
SOCKS (Client, Server) Communication with Application Server.
functionality and its bi-directional proxy characteristics facili-
tates CAC but with static implementation. Its ﬁrewall traversal
capability complements the routing at higher layers (Open
System Interconnection (OSI) Application, Session layers) but
with static rules and conﬁgurations. Typical communication
between SOCKS (Client-Server) and the application server is
shown in Fig. 2. After the AA mechanism, the connection
established from client to SOCKS server carries client data to
be forwarded by the SOCKS server to the application server
through a simple TCP connection.
SOCKS is chosen for the introduction of dynamic
decision-making framework due to the fact as network appli-
cation stacks may integrate SOCKS capabilities for managing
TCP connections (e.g., web browser, but some of the most
popular ones lacks AA mechanism). If they don’t facilitate
SOCKS client then we may use a wrapper to insert SOCKS
request at the top of TCP connection between the application
and transport layer (TCP/IP layer model). For each socksiﬁed
client request, there will be a decision to be enforced at
SOCKS Server while routing the request to an appropriate
link. The aforementioned data connection routing mechanism
at network layer can be made workable by conﬁguring the
routers manually (access-list, route-map, static routing, etc.).
However, this is not an elegant and efﬁcient way due to
its static nature and performance issues. Conventional proxy
(Web) working above network layer is performing almost the
similar functionality but the rules and policy enforcement are
the same for all the trafﬁc (unless a manual change is carried
out), and are dedicated to web applications. There are some
SOCKS proxy solutions available (e.g., Dante [10], one of
the most sophisticated) but they do not take into account the
latest dynamics of the platform from application, control and
network point of view.
The protocol chosen to communicate the informa-
tion/decisions between PDP and PEP is Diameter with newly
deﬁned and developed Attribute Value Pairs (AVPs). Diameter
is natively an Authentication Authorization Accounting (AAA)
protocol. Due to its AAA characteristics, its enhancement
orientations are becoming natural for decision-based network
management. It has large AVP space and supports large
number of pending requests. Common Open Policy Service
(COPS) [11], a strong candidate for PBNM has not been
chosen for decision (policy) provisioning and dissemination,
as it is speciﬁcally designed for device-level conﬁguration and
management. However, dynamic session/call/data-connection
management is required while taking into account the varia-
tions and latest dynamics. SNMP has sometimes been pro-
posed in the literature to be a candidate for PBNM [12].
SNMP-based information in our system is exploited to gauge
the QoS parameters of access router interfaces. In case of
communication failure between PDP and PEP, pre computed
default rules are enforced depending on the context of the
request offering ordinary QoS.
This paper addresses the private-public border trafﬁc
management issues for request routing decisions at the applica-
tion layer (OSI). It supports dynamicity by using Multi-Criteria
Decision Making (MCDM) theory. The calculated decisions
are enforced in outsourcing and provisioning modes by using
existing mechanisms mentioned subsequently.
III. MULTI-CRITERIA DECISION MAKING THEORY AND
ITS APPLICATION IN DYNAMIC ROUTING
MCDM involves choosing the best alternative, given a
set of alternatives (available links here in the architecture) and
a set of criteria (context of the request and predeﬁned conﬁgu-
rations/settings over the proposed platform). These alternatives
are ranked on the basis of multiple criteria using some speciﬁc
MCDM method. MCDM methods have been used to help
solve a wide variety of problems in many different applications
such as telecommunications, manufacturing, transportation and
software engineering [13], [14]. There is not a single MCDM
technique to deal with all multi-criteria problems. Indeed
each situation requires a speciﬁc MCDM technique. The
choice of technique and its impact on the decision-making
is not within the scope of this work and reader is referred
to [15] for an overview of this particular domain. However
the abnormal behavior shown by certain MCDM methods
for particular scenarios and the complexity involved in those
methods complements our choice of the presented method for
the posed problem. The targeted objectives in the multi-criteria
decision-making problems might sometimes be conﬂicting
and/or overlapping. In the underlying problem, SLA includes
Delay (one-way delay is computed by dividing the round-trip
delay by 2), Jitter (computed by polling the trapped values in
SNMP MIB tables) and Packet Loss (calculated by counting
the number of retransmissions in a particular session) (DJPL)
which falls under the business objectives of the company when
they sign the direct or reciprocal agreements with partners
or companies. However, the same sets of parameters (DJPL)
are used to grade the QoS of the available links (a link
has to be chosen). The triplet (DJPL) can be used to gauge
the authorization and authentication of a particular user class
(e.g., Gold user must have the best QoS proﬁle, while Silver
can be assigned either a good or a satisfactory QoS proﬁle)
while executing the context of the request. There are various
approaches to deal with such sort of problems each having its
pros and cons but we will not address this issue due to space
limitations.
106
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

Each MCDM problem is associated with multiple at-
tributes. These attributes are linked to the goals and are
referred to as decision criteria. Since different criteria represent
different dimensions of alternatives, they may conﬂict with
each other (e.g., Cumulative Bandwidth may be confused with
Total Bandwidth, trafﬁc measurements, granularity (connec-
tion/session/packet level) obsession, cost, etc). The criteria
are assigned different weights according to context of the
request and the rules deﬁned over the platform. Conventional
algorithms used for link selection in multihomed networks
are either user-centric or motivated for efﬁcient resource
utilization over the platform and/or they are centered towards
application optimization for desired QoS. However, to cope
with all these multi-criteria goals and objectives, MCDM is
chosen. Two MCDM methods have been chosen to address
the problem. Analytical Hierarchy Process (AHP) [16] is used
to calculate the corresponding weights of the attributes (termed
as criteria in terms of MCDM) involved decision-making.
The calculated weight values illustrate the relative importance
of each attribute and they are used in the Technique for
Order Preference by Similarity to Ideal Solution (TOPSIS)
to rank the links (alternatives). These ranked links will be
used to route the SOCKS connections in consent with the
business objectives of the company, user proﬁle and platform’s
conﬁgurations/conditions.
A. Problem Formulation and Technique for Order Preference
by Similarity to Ideal Solution (TOPSIS) MCDM Method
TOPSIS was developed by Yoon and Hwang [17]. It
is an alternative to ELECTRE [18] and is considered to be
one of its variants. It is known as a double standard method
that evaluates alternatives through two basic criteria. First, the
chosen alternative should have the shortest distance from the
positive ideal solution and secondly it must be farthest from the
negative-ideal solution for a MCDM problem. The perceived
positive and negative ideal solutions are based on the range of
attribute values available for the alternatives. The distances are
measured in Euclidean terms. The Euclidean distance approach
is proposed to evaluate the relative closeness of the alternatives
to the ideal solution. The reason for choosing TOPSIS is that
it will rank/grade the available alternatives (links) whenever
applied by taking all the variations/dynamics and static con-
ﬁgurations of the platform into account. Moreover, TOPSIS
is extended to be applied on interval data (i.e. lower and
upper values of an attribute) over the proposed architecture.
Moreover, TOPSIS is extended to be applied in the scenario
when the exact value of an attribute is not known, then these
bounds (upper and lower) are used. The best link among the
available alternative links (ranked by the application of an
extended TOPSIS) is assigned to request by following the
predeﬁned set of criteria. Due to space limitations and to
avoid the complexity, TOPSIS is applied using the standard
approach.
The system is capable of accommodating large number
of links (n) with enormous set of attributes associated to
those alternatives (links). But, for brevity and to avoid the
complexity of stringent mathematics, 5 attributes are chosen
Criteria Alternatives
To Select The Best Link for SOCKS Based Data Connec!ons or to Rank
The  Available Links to be U!lized According to The Context of The Requests
Goal
Link 
U!liza!on
QoS 
Proﬁle of 
the Link
Cost
Total 
Bandwidth
Available 
Bandwidth
Nth 
A#ribute
Nth Link
Link 2
Link 1
Link 3
Fig. 3.
Candidate Links, Attributes and Objectives Hierarchy.
for the application of MCDM methods on 4 alternative links.
Figure 3 illustrates the hierarchy of the desired goal, the
criteria and the available alternative links. There are four links
L1, L2, L3 and L4 and for the sake of simplicity, Decision
Matrix (DM) contains 5 attributes (link Utilization (U), QoS
Proﬁle of the Link (QPL), Cost (C), Total Bandwidth (T B)
and Allowed Bandwidth (AB)).
DM =


U1
QP L1
C1
T B1
AB1
U2
QP L2
C2
T B2
AB2
U3
QP L3
C3
T B3
AB3
U4
QP L4
C4
T B4
AB4


L1
L2
L3
L4
(1)
The values of these attributes are obtained from the SNMP
traps and the SLAs of the corresponding links over the
platform. Moreover the QoS Proﬁle of the link is dependent
on DJPL and it is computed by following a predeﬁned crite-
rion embedded by the administrator of the platform. As the
parameters involved in the DM come from different sources,
the units representing the values are different. We need to
normalize these parameters in order to make them unit-less.
The attributes having bigger values (e.g., T B is in Mega)
are divided by the largest value in the corresponding column
vector while the smaller range attribute (e.g., U represented in
%age ) is divided by the smallest value in the corresponding
column vector. The normalized Decision Matrix is given by
f
DM =


e
U1
g
QP L1
e
C1
f
T B1
f
AB1
e
U2
g
QP L2
e
C2
f
T B2
f
AB2
e
U3
g
QP L3
e
C2
f
T B3
f
AB3
e
U4
g
QP L4
e
C4
f
T B4
f
AB4


L1
L2
L3
L4
(2)
Next step is to construct the weighted normalized DM: it
cannot be assumed that each evaluation criterion is of equal
importance because the evaluation criteria have various mean-
ings. AHP is used to calculate the weight of the corresponding
column vector (laying out the criteria) representing an attribute
column in the DM. AHP is a MCDM methodology in itself.
But its ability to elicit accurate ratio scale measurements and
combine them across multiple criteria has led us to use it in
conjunction with TOPSIS for ranking the links (alternatives)
dynamically. The integration of AHP and TOPSIS is illustrated
in Fig. 4. The weighted normalized entities in the DM are
represented by subscript wn (e.g., for U will be Uwn)
TOPSIS
AHP
User Proﬁle Info
QoS Proﬁle Info
Link Proﬁle Info
Pairwise comparison 
of QoS factors
Priori"es of QoS 
factors
Global priori"es of 
QoS factors
Global weights
Normaliza"on of 
Decision Matrix(DM)
Weighted 
Normalized DM
+ive and -ive ideal 
solu"on calcula"on
Ranking of 
alterna"ves (Links)
Fig. 4.
TOPSIS and AHP Integration for Ranking of Candidate Links.
Now positive and negative ideal solutions for each attribute
107
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

are computed: the positive ideal solution indicates the most
preferable alternative, and the negative ideal solution indicates
the least preferable alternative as follows (e.g., link Utilization,
U)
U+ = 
communication platform, a query is sent to the SOCKS server
inquiring about the supported methods (Authentication and
Authorization (AA) methods. After getting the response, the
user then uses an appropriate method for sending the user
name and password for AA process to take place at the SOCKS
server. A response (an OK) is sent back to the client. The client
is now eligible to send the data connection request with the
triplet (service type, service IP and service port) info. This
info is extracted by the Diameter client at the SOCKS server
and is then sent to the PS (Diameter server). In response, the
PS sends the decision (one of the ranked links is picked) in
consent with the user info and the platform’s conﬁgurational
parameters. Enforcement of the decision takes place to be at
SOCKS server. The data connection request is routed to the
remote server using that particular interface number (link). The
information communication and message exchange between
different entities is shown Fig. 6. The remote server answers
to the SOCKS server. SOCKS server informs the client about
the status of the remote machine. In case it is an OK message,
the client then initiates the connection request, which is being
routed over the same interface sent previously by the PS in
response to the former request.
B. Policy Enforcement Modes
The framework supports two decision enforcement modes
namely provisioning and outsourcing. The System however
functions in outsourcing mode by default. Whenever a request
arrives at the SOCKS server, it extracts the required information
and sends this information to Local Policy Decision Point
(LPDP) situated at SOCKS server. An appropriate rule from
the rule base is mapped and one of ranked links (already
available at PEP) is chosen for routing the request in pro-
visioning enforcement mode. It is up to the administrator
of the platform to choose either provisioning or outsourcing
enforcement mode. However, the policy enforcement irrespec-
tive of the two modes is ultimately done at SOCKS server
(PEP). In provisioning mode, the pre-computed rules and the
Status of the connection with 
remote server
Answer from the remote Server
Request to Remote Server
Answer (Interface Number to 
route)
Request for interface to route the 
connection
Connection Request: Type, IP and 
port
OK
Sending UserName/Password
AA Method Password
AA Supported Methods
SOCKS5 Server
(PEP)
Policy Server/Decision Engine
(PDP)
Client Machine
Remote Server
Client’s Request
Cliect Request to the remote Server
Data Flow
Fig. 6.
SOCKS Communication Framework Flow Graph.
ranked links are available at SOCKS server. In outsourcing
mode, the extracted information from the pending request is
fetched to the PS (PDP) using Diameter Gq interface. PS,
in outsourcing mode is delegated to compute/use online/off-
line policy/decision depending on the request and the system
conﬁguration and conditions (system state). List of ranked
links in the provisioning mode are fetched at SOCKS server,
a-priori irrespective of online or off-line policy computation.
The two enforcement mechanisms are in contrast with each
other but they are not mutually exclusive. The policy-based
management system is capable of handling both data and mul-
timedia services. However, we are explaining the two policy
enforcement modes while considering TCP based SOCKS data
connections. The self-explanatory ﬂow graphs give an illusion
of the two enforcement modes in Figs. 7 and 8 representing
provisioning and outsourcing mode respectively.
Policy/Decision Push(PS Pushing 
New Set of Policies/Decisions
Client Request
Policy/Decision 
Selection and 
its Enforcement
Policy/Decision Enforcement and Request Routing
SOCKS5 Server
(PEP)
Policy Server/Decision Engine
(PDP)
Client Machine
Remote Server
Data Flow
Fig. 7.
Policy Decision and Enforcement in Provisioning Mode.
C. Provisioning and Outsourcing Mode Comparison
Data trafﬁc is more immune to delay as compared to
delay sensitive real time multimedia trafﬁc. So susceptible
delay in the two enforcement modes might not make any
difference. More resources and computational power are re-
quired in outsourcing mode as opposed to provisioning mode.
The former mode introduces higher delay than the latter
one. Outsourcing mode takes latest platform conditions and
network information into account. Provisioning mode, on the
other hand, may have conﬂicts with the platform conditions
and/or resource info due to the ﬂuent dynamics onto the
platform. Outsourcing mode supports both online and off-line
policy/decision computation while provisioning mode has to
rely on pre-ranked links.
Policy/Decision Enforcement and Request Routing
Client Request
Policy/Decision Responce
Policy/Decision Request
SOCKS5 Server
(PEP)
Policy Server/Decision Engine
(PDP)
Client Machine
Remote Server
Policy/Decision 
Enforcement
Data Flow
Fig. 8.
Policy Decision and Enforcement in Outsourcing Mode.
109
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

V. TEST AND SOLUTION VALIDITY
The test environment for validating the proposed frame-
work is shown in Fig. 9. The SOCKS server has four in-
terfaces ranging from 1 to 4 for connection to the public
network (external links). It has one internal interface for inter-
communication within the platform. The proxy server (SOCKS
server which is connected to four external interfaces marked as
1, 2, 3 and 4 as shown in Fig. 9) has four different IP subnets.
Web Client on the left hand side of the Fig. 9 is connected
having IP addresses from those mentioned four subnets. Bit-
Twist [21], an open source trafﬁc generator is used to generate
extensive Ethernet-based trafﬁc for stress testing and analysis.
It is designed to compliment tcpdump or wireshark packet
captures supporting captured ﬁle replay. PS is conﬁgured to
listen to all the requests from SOCKS server on an interface as
we are emulating the outsourcing enforcement mode. The links
(4 interfaces) are ranked by using the combination of TOPSIS
and AHP as explained earlier and the appropriate ranked link
(interface) is chosen by following a predeﬁned set of criteria
and is ultimately disseminated to the SOCKS server. The
remote web server, which is conﬁgured to listen on all those
interfaces, (linked with SOCKS), displays a webpage showing
the IP address of the chosen link. We then calculated the delay
1
2
3
4
SOCKS Server(PEP)
WebServer
Policy Server/Decision Engine(PDP)
A
B
C
D
E
Links
4
1
2
3
A
B
C
D
Steps involved
E
Fig. 9.
SOCKS Communication Framework Test Environment.
introduced by the system with and without decision engine.
The graph shown in Fig. 10 indicates that addition of decision
engine in the system introduces a minor overhead (delay). This
calculation is performed in outsourcing enforcement mode
due to more dynamics involved in that particular mode. The
delay increases almost linearly as the number of connections
increases and the delay is small enough having very little
impact on services due to delay-prone and sustainable nature
of data trafﬁc. The factors involved in this minor delay are:
ﬁrstly decision engine is not populated with complete data sets,
so the decision computation introduces negligibly small delay,
secondly the TCP also contributes to this delay due to its native
connection oriented approach. Thirdly, the test is performed
using Personal Computers (PCs) with 100 Megabits per second
(Mbps) Ethernet interfaces, so the carrier grade hardware
with giga speed inter-communication interfaces/channels can
make a difference. Finally, the information extraction from
the request at SOCKS server which is going to be sent
to the PS for decision-making and the policy enforcement
mechanism also contributes to this delay. The testing of the
same platform while using UDP may be an interesting future
work. Throughput of each link is plotted with and without
decision engine as shown in Fig. 11 It is observed that there is
0
500
1000
1500
0
2
4
6
8
10
12
14
16
18
20
Total Number of Connections 
Delay in Milliseconds  
 
 
Delay without Decision Engine
Delay with Decision Engine
Fig. 10.
Delay (Millisecond) Introduced by the System with and without
Decision Engine.
1
2
3
4
0
1
2
3
4
5
6
7
8
9
10
x 10
7
Links
Bits/s
 
 
Total Capacity of the Link
Throughput without Decision Engine
Throughput with Decision Engine
Fig. 11.
Throughput of each Link with and without Decision Engine.
a signiﬁcant improvement in the throughput for each link with
decision engine. This improvement illustrates the effective and
efﬁcient utilization of resources by decision system by taking
all the dynamics and variations along with business rules of the
platform. Decision system supports connection level granular-
ity so the connection dropping probability is also plotted with
and without the underlying Decision Engine. It is observed that
the aggregated connection dropping probability with decision
engine of the four links has lower value than without it as
shown in Fig. 12. The presented decision engine is relatively
simple and easy to realize the computer programming so can
be easily embedded into systems with little complexity.
VI. RELATED WORK
Currently there are growing number of research and pro-
prietary efforts related to Multimedia Load Balancing focusing
SIP [22], [23]. The core design and lower-level functionality
are hidden because of commercial implications. Some vendors
offer partial dynamicity with limited controls, while others are
enforcing static decisions/rules [24]. A dynamic framework
for load balancing in multi-homing scenario is presented by
taking into account multiple criteria involving the service,
control and network issues all together. MCDM theory is used
to address the issue of dynamic variations and conﬁguration
from different planes with different set of objectives. This
110
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

0
500
1000
1500
0
0.005
0.01
0.015
0.02
0.025
0.03
0.035
0.04
0.045
0.05
Total Number of Connections 
Connection Dropping Probability 
 
 
Connection Drop without Decision Engine
Connection Drop with Decision Engine
Fig. 12. Connection Dropping Probability with and without Decision Engine.
theory is used for access network technology (UMTS, GSM,
WLAN etc) selection during the handoff based on user prefer-
ences [25]. A user priority scheme for admission control using
Analytic Hierarchy Process (AHP) is proposed in [26]. Two
MCDM methods namely AHP and TOPSIS are used in this
framework for weight calculation and ranking of candidate
link in multihomed network.
VII. CONCLUSION
QoS proﬁle of the links, user authentication and autho-
rization proﬁles, business objectives of the company and ﬂuent
dynamics over the multihomed platform constitutes a multi-
disciplinary problem. The information coming from different
sources with different dimensions reﬂects the complexity of
the underlying problem when a single decision has to be taken
on the basis of multidimensional and multidisciplinary in-
formation. Conventional algorithms used for dynamic routing
at higher layers in multihoming setups are either application
oriented or are service dependent. Performance optimization
is the ultimate goal in some cases while the others are
technology speciﬁc. To address all these multi-facet goals in
addition to the dynamics and ﬂuctuations over the platform,
MCDM methodology is required. A dynamic decision engine
for SOCKS-based routing is presented. The system is capable
of accommodating the ﬂuent dynamics while handling a large
set of attributes representing the underlying criteria in MCDM.
Analytical Hierarchy Process (AHP) is used to calculate the
weight of the corresponding attributes. These weight values
are exploited in Technique for Order Preference by Similarity
to Ideal Solution (TOPSIS) to rank the alternatives (links). The
system supports two decision enforcement modes. Decisions
are computed on-the-ﬂy in outsourcing mode while one of the
pre-ranked links is chosen to route the request in provision-
ing mode (off-line). Existing standards and mechanisms are
followed without involving overheads in the protocol stack.
A test bed is developed to validate the solution. Throughput
of the individual links improved signiﬁcantly mentioning that
the resources are being used efﬁciently and effectively at the
cost of susceptible delay. Aggregated connection dropping
probability has lower values than without the Decision Engine.
Future work includes the interconnection of MCDM and
conventional Policy-Based Network Management through the
development of an automated linguistics in order to specify
goals, criteria and alternatives.
REFERENCES
[1] Y. Rekhter, T. Li, and S. Hares, “A Border Gateway Protocol 4 (BGP-
4),” Jan. 2006.
[2] J. Rosenberg, H. Schulzrinne, G. Camarillo, A. Johnston, J. Peterson,
R. Sparks, M. Handley, and E. Schooler, “SIP: Session Initiation
Protocol,” RFC 3261, Jun. 2002.
[3] M. Ganis, Y. Lee, R. Kuris, D. Koblas, and L. Jones, “SOCKS Protocol
Version 5,” RFC 1928, Mar. 1996.
[4] M. Brenner, “Diameter Policy Processing Application,” RFC 5224, Mar.
2008.
[5] “https://www.companymages.eu/ (12/01/2011, Last Visited (LV)).”
[6] “3GPP TS 29.207/209, Policy Control Over Gq interface,” Dec. 2004.
[7] P. Calhoun, J. Loughney, E. Guttman, G. Zorn, and J. Arkko, “Diameter
Base Protocol,” RFC 3588, Sep. 2003.
[8] S. Mushtaq, O. Salem, C. Lohr, and A. Gravey, “Policy-based QoS
Management for Multimedia Communication,” in 14th EUNICE Open
European Conference, 2008.
[9] S. A. Mushtaq, O. Salem, C. Lohr, and A. Gravey, “Distributed Call
Admission Control in SIP Based Multimedia Communication,” in NEM
Summit 2008 : International Conference on Networked Electronic Me-
dia, october 13-15, Saint Malo, France, 2008.
[10] “Dante,” http://www.inet.no/dante/ (15/12/2010, LV).
[11] D. Durham, J. Boyle, R. Cohen, S. Herzog, R. Rajan, and A. Sastry,
“The COPS (Common Open Policy Service) Protocol,” RFC 2748, Jan.
2000.
[12] S. Boros, “Policy-Based Network Management With SNMP,” 2000.
[13] S. Önüt, S. S. Kara, and E. I¸sik, “Long term supplier selection using
a combined fuzzy MCDM approach: A case study for a telecommu-
nication company,” Expert Syst. Appl., vol. 36, pp. 3887–3895, March
2009.
[14] P. P. Bonissone, R. Subbu, and J. Lizzi, “Multicriteria decision making
(mcdm): a framework for research and applications,” Comp. Intell. Mag.,
vol. 4, pp. 48–61, August 2009.
[15] E. Kornyshova and C. Salinesi, “MCDM Techniques Selection Ap-
proaches: State of the Art,” in Computational Intelligence in Multicri-
teria Decision Making, IEEE Symposium on, april 2007, pp. 22 –29.
[16] T. Saaty, The Analytic Hierarchy Process, Planning, Piority Setting,
Resource Allocation.
New york: McGraw-Hill, 1980.
[17] C. Hwang and K. Yoon, Multiple attribut decision making : Methods
and applications.
Springer-Verlag, 1981.
[18] R. Benayoun, B. Roy, and N. Sussmann, “Manual de reference du
programme electre, Note de Sythese et Formation,” 1966.
[19] “JAVA
SOCKS
Server.
http://jsocks.sourceforge.net/
(10/19/2010,
(LV)).”
[20] “http://www.trafﬁxsystems.com/ (05/12/2010, LV).”
[21] “http://bittwist.sourceforge.net/ (09/11/2010, LV).”
[22] H. Jiang, A. Iyengar, E. Nahum, W. Segmuller, A. Tantawi, and
C. Wright, “Load Balancing for SIP Server Clusters,” in INFOCOM
2009, IEEE, april 2009, pp. 2286 –2294.
[23] “http://www.acmepacket.com/ (13/01/2011, LV).”
[24] “http://f5.com/products/ (15/01/2011, LV).”
[25] A. Sehgal and R. Agrawal, “QoS based network selection scheme for 4G
systems,” Consumer Electronics, IEEE Transactions on, vol. 56, no. 2,
pp. 560 –565, may 2010.
[26] H. Pervaiz, “A Multi-Criteria Decision Making (MCDM) network
selection model providing enhanced QoS differentiation to customers,”
in Multimedia Computing and Information Technology (MCIT), 2010
International Conference on, march 2010, pp. 49 –52.
111
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

