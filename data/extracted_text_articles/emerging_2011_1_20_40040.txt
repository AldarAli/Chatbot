Distributed Service Discovery Architecture: A 
Bottom-Up Approach with Application Oriented 
Networking 
 
Haja M. Saleem* 
Computer and Information Sciences  
Universiti Teknologi PETRONAS 
Perak, Malaysia 
*Dual Affiliation with Faculty of Information and 
Communication Technology  
Universiti Tunku Abdul Rahman 
Perak, Malaysia 
saleem@utar.edu.my 
  
Mohd Fadzil Hassan1, Vijanth S. Asirvadam2 
Computer and Information Sciences1, Fundamental and 
Applied Science2  
Universiti Teknologi PETRONAS 
Perak, Malaysia 
{mfadzil_hassan1, vijanth_sagayan2}@petronas.com.my 
 
 
Abstract— Peer-to-Peer service discovery is the norms of today’s 
Service Oriented Architecture. Efficiency and scalability of these 
systems are adversely affected by the type of distributed 
architecture, the query routing mechanism and the effective 
usage of underlying network topology. Traditional query routing 
mechanisms in distributed P2P systems function purely at the 
overlay layer by isolating itself from the underlying IP layer that 
degrades the performance due to large amount of inter-ISP 
traffic and unbalanced utilization of underlay network links. In 
this paper we address this problem by proposing novel 
distributed service discovery architecture, which enhances 
underlay awareness without the involvement of the overlay peers. 
Our design starts from the underlay layer, which is built on top 
of Application Oriented Networking (AON) backbone that 
exploits message level routing. This feature is further leveraged 
in the overlay layer with industry based classification of 
published services, which complements the process of message 
level routing. We present the conceptual design of our framework 
and analyze its effectiveness. We argue that both performance 
and scalability of the system are drastically improved by moving 
down the overlay query routing mechanism to the IP layer. 
Keywords-Web 
services; 
service 
discovery; 
AON; 
P2P; 
multicasting; clustering; SOA. 
I. 
 INTRODUCTION 
In Service Oriented Architecture (SOA) the complexity of 
service composition increases proportionately with the 
increase in number of services. Efficient service discovery is 
one of the key aspects in automating the service composition 
process. Initially, SOA started with centralized service 
discovery. As more and more services are made available both 
from within and outside organizations, the centralized service 
discovery proved to be unsuccessful in terms of scalability and 
single point of failure [1], which paved the way for distributed 
approach.  
Many approaches have been proposed earlier for the 
distributed service discovery which has its roots from Peer-to-
Peer (P2P) file sharing systems. Amongst various P2P 
approaches, only few are suitable to be implemented in the 
service discovery domain, as their target is file sharing 
applications, where file download efficiency is one of the 
major concerns. However this is not the case for the service 
discovery where other constrains such as range queries, 
service cost and multiple matches are taken into account. The 
current P2P systems have been mainly classified into three 
categories; unstructured, structured and hybrid. The main 
shortcoming of the unstructured systems is their scalability, 
whereas the structured systems are prone to complex 
administration 
and 
poor 
performances 
in 
dynamic 
environment [2]. On the other hand hybrid systems are 
focused towards key mapping mechanisms which are inclined 
towards the tightly controlled structured approach. In this 
paper our focus is towards unstructured systems which are 
widely deployed due to their flexibility with dynamic entry 
and exit options for the peers.  
Currently, most of the query routing mechanisms are 
implemented in the overlay layer which result in IP-oblivious 
query forwarding. This leads to three major problems. First, it 
heavily increases the inter-ISP network traffic [3], which is 
expensive for the service providers. Second, the network links 
are not loaded in a balanced manner which ends up with poor 
performance 
and 
thirdly 
it 
introduces 
interlayer 
communication overhead. To alleviate these problems several 
contributions have been made in making the peers underlay 
aware while choosing their neighbors. However, these 
solutions just provide the network knowledge to the peers in 
the overlay and let the peers decide on their own [4]. Letting 
the peers aware of network related parameters may lead to 
privacy and security issues both for the peers and the ISPs. 
To this end, our contribution in this paper focuses on 
enhancing underlay awareness without involving the overlay 
peers; and to implement IP layer multicasting with message 
8
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-174-8
EMERGING 2011 : The Third International Conference on Emerging Network Intelligence

level intelligence. We argue that the performance can be 
drastically improved if the search mechanism is moved down 
to the underlay layer and seamlessly integrated with the 
Internet protocol (IP) layer.  
We also argue that our architecture enhances the following 
characteristics of distributed service discovery, which are 
lacking in the current systems, 
1. Non-involvement of peers in the locality aware query 
forwarding that results in improved efficiency. 
2. Increased peer privacy. 
3. Increased response time with the elimination of interlayer 
communication overhead. 
The rest of the paper is organized as follows. Section 2 
discusses the related work, Section 3 demonstrates our design 
and analyzes the performance and Section 4 concludes the 
paper with future work. 
II. 
RELATED WORK 
Various approaches have been proposed and investigated 
towards improving the network layer awareness in query 
routing mechanisms. 
TOPLUS [5] organizes peers into group of IP addresses and 
uses longest prefix match to determine the target node to 
forward the query. Here the peers use an API in the application 
layer to find the neighbor to forward the query. Their scope is 
not moving the routing decision functionality to the IP layer. 
PIPPON [6] is closer to our effort in trying to match the 
overlay with the underlying network. The clustering 
mechanism in the overlay layer of PIPPON is based on 
network membership and proximity (latency). However, the 
similarity of the services provided is not taken into 
consideration in the cluster formation. Moreover, it ends up in a 
highly structured system with high administrative overhead. 
The contribution made in [7] is a technique called biased 
neighbor selection. This technique works by selecting a certain 
number of neighboring peers within the same ISP and the 
remaining from different ISPs. This helps in reducing the inter-
ISP traffic. This approach is well suited for file sharing systems 
like BitTorrent. However, the neighbors still functions at the 
overlay layer. 
In [3], authors have discussed the problem space for the 
Application Layer Traffic Optimization (ALTO) working 
group, which is initiated by IETF. This approach allows the 
peer to choose the best target peer for file downloading by 
querying the ALTO service which has static topological 
information from the ISP. Here the ALTO service is provided 
as a complementary service to an existing DHT or a tracker 
service. The problem space here is the final downloading of the 
file and not the query search mechanism itself. 
A framework that is used for conveying network layer 
information to the P2P applications has been proposed by P4P 
[4]. Peers make use of iTrackers and appTrackers to obtain the 
network information. The network information is used for the 
overlay query routing mechanism. However, the scope of the 
work is not in moving the query routing to the network layer 
which is the focus of our contribution. 
Plethora [8] proposes a locality enhanced overlay network 
for semi-static peer to peer system. It is designed to have a two-
level overlay that comprises a global overlay spanning all 
nodes in the network, and a local overlay that is specific to the 
autonomous system (AS). This is highly structured and is not 
suitable for highly dynamic environments. 
There has been substantial contribution made in clustering 
as well. One such recent contribution is [9]. Our contribution 
contrasts with this and all others in making network provider 
based clustering, which aids in reduction of number of super 
registries that needs to be handled by Application Oriented 
Networking (AON) multicasting. 
Deploying message level intelligence in network layer 
multicasting and dealing with QoS requirements in the service 
discovery domain are discussed in [10-12]. In [13], authors 
have initiated the discussion of employing AON in the service 
discovery but have not given a concrete implementation model, 
which is where our contribution fits in. The increasing trends in 
deployment of AON in other areas of SOA are provided in 
[14]. 
III. 
ARCHITECTURE AND DESIGN 
A. Design goals 
The following goals are considered in our design. 
1. Enhanced Security: To enhance the security of the 
discovery system, network aware query routing is 
delegated to the underlying layer and is kept transparent to 
the overlay layer. 
2. Reduced inter-ISP traffic: Another design focus is to let 
the query forwarding traffic enter the ISP domain only if it 
hosts the targeted service registry. 
3. Minimized overlay process overhead: To eliminate the 
involvement of intermediate registries (peers) in query 
processing. 
4. Interoperability: To integrate seamlessly with non-AON 
routers, if encountered, along the path of query 
forwarding.   
To implement these goals a conceptual framework has been 
designed as shown in Figure 1. In layer 2 AON is employed for 
carrying query messages to the targeted peers with the help of 
message level intelligence. As redundant query forwarding in 
the underlay is minimized by AON with message level 
multicasting, the performance gain is very close to the IP level 
multicasting 
[15]. 
AS-based 
clustering 
and 
service 
classifications are implemented at layer 3, which leverages the 
message level multicasting by AON. 
 
APPLICATION LAYER 
LAYER 4 
SERVICE 
CLASS 
ENCODING 
CLUSTER 
MANAGEMENT 
LAYER 3 
MESSAGE LEVEL ROUTING 
LAYER 2 
IP ROUTING 
PHYSICAL NETWORK 
LAYER 1 
 
Figure 1. Layers of P2P service discovery. 
B. Registry Clustering 
Our approach in clustering is with respect to AS so as to 
reduce the inter-ISP traffic. A super registry (SR) is elected in 
each AS as shown in Figure 2 which demonstrates the 
9
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-174-8
EMERGING 2011 : The Third International Conference on Emerging Network Intelligence

connectivity of SRs to the underlying physical network. The 
SRs are responsible for accepting queries for the whole AS.  
The services published in the registries are classified in 
accordance with Global Industry Classification Standard 
(GICS) [16]. Our architecture uses these coding for the 
implementation of AON routing at the underlying layer. A 
sample of GICS industry classification is shown in Table 1. 
This AS-based SR approach leverages the following 
characteristics of our system.  
1. Enables the AON router in layer 2 to learn the query 
forwarding interface(s) that are specific to particular class 
of services.  
2. Improves the scalability and dynamism of the system as 
new registries can enter and exit the cluster with minimal 
overhead.  
3. AON routes learned by the routers are restricted to SRs 
which minimize the routing entries. 
 
We also propose to use crawling technique [17] to update 
the entries in the super registries so that queries forwarded 
within the AS could be minimized as well.  
 
 
Figure 2. Autonomous system based clustering of service registries. 
 
 
TABLE 1. SAMPLE INDUSTRY TYPES AND THEIR CODES 
 
Industries 
Class codes 
Air Freight & Logistics 
20301010 
Airlines 
20302010 
Hotels, Resorts & Cruise 
25301020 
Leisure Facilities 
25301030 
Restaurants 
25301040 
 
C. AON Implementation 
AON routers are capable of taking routing decisions based 
on application level messages [13]. We find this feature fits 
quite nicely into the distributed service discovery. Any query 
generated from an AS needs to be forwarded to the super 
registry in the AS which has an interface for classifying the 
query into one or more of its service classes. Then the message 
is constructed by encapsulating the query and its class and 
forwarded to the neighbors in the overlay routing table.  Our 
packet structure in the IP layer is designed to record the 
interface(s) of the intermediate routers through which a 
particular router has received its query and reply, along with 
the intended source and destination IP addresses. The AON 
router uses this feature to inspect and update these fields and its 
AON specific routing table which is used for query multicast. 
Possible scenarios that could be encountered during query 
forwarding are depicted in Table 2.  
 
TABLE 2. SCENARIOS ENCOUNTERED IN QUERY FORWARDING 
 
Router 
Packet 
Remark 
AON 
AON 
Routing based on message level 
intelligence 
AON 
Non-AON 
Classical routing based on IP header 
Non-AON 
AON 
Classical routing based on IP header 
Non-AON 
Non-AON 
Classical routing based on IP header 
 
 
 
 
Figure 3. Sample scenario – Query forwarding. 
D. Query forwarding 
Figure 3 depicts an illustrative scenario of four ASs each 
with its own super registries connected via AON and non-AON 
routers. A query forwarded from an AS is received by the 
border routers of ASs, in this case router R1. Router R1 uses 
classical routing either if it is a non-AON router or an AON 
router in bootstrapping state. During the bootstrapping process 
the AON router would not have learned the service-
classification specific routing and hence uses the IP header for 
the classical routing. Figure 3 demonstrates a sample query 
10
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-174-8
EMERGING 2011 : The Third International Conference on Emerging Network Intelligence

forwarding from SR1 to SR2, SR3 and SR4 as per its overlay 
routing table (neighbor list). However, AON-router R2 inspects 
the query and finds that this query could be answered by SR4 
alone as per its AON routing table. Hence it forwards the query 
via ni1 and drops the other queries intended for SR2 and SR3, 
which are connected via ni2 and ni3, respectively.  
E. Analysis 
In a pure overlay-based routing, for instance, Gnutella like 
systems, considering the worst case scenario (Flooding), query 
from SR1 to SR2, SR3 and SR4 would generate traffic along 
the paths SR1SR2, SR1SR3, SR1SR4, SR2SR4 and 
SR3SR4 each having four physical links from the source to 
the destination.  However, if AON routing is employed the 
traffic generated is just along the path SR1SR4. This clearly 
illustrates that ineffective query propagation could be 
effectively limited by AON to improve the efficiency of search 
mechanism. The same can be visualized in terms of inter-ISP 
traffic as well. In our illustration the only inter-ISP traffic is 
from the source to the AS in which the target SR resides. 
Performance can also be improved in case of other query 
forwarding heuristics like random or probabilistic selection of 
neighbors which is summarized in Table 3.  
TABLE 3. PERFORMANCE ANALYSIS FOR THE GIVEN SCENARIO 
 
Query propagation method 
No. of 
peers 
involved 
No. of 
paths 
involved 
Flooding                        
(select all 3 neighbors) 
4 
(SR1,SR2, 
SR3,SR4) 
5              
(SR1SR2, 
SR1SR3, 
SR2SR4, 
SR3SR4, 
SR1SR4) 
Random/Probabilistic(selects 
2/3 neighbors) 
3      
(SR1, SR2, 
SR4) 
3              
(SR1SR2, 
SR1SR4,  
SR2SR4) 
AON based 
2      
(SR1, SR4) 
1 
(SR1SR4) 
 
F. Current issues 
1. Security issues: It is possible that routers could be 
compromised and mislead query forwarding which could 
result in performance degradation. In our design the 
system functions even if some routers along the path are 
non-AON-routers. In the event of an attack the ISP could 
detect it and switch the respective router(s) to classical 
routing until the attack is neutralized. 
2. Router performance: There could be overhead in the 
router which processes the AON packets and in 
maintaining the second routing able. However, we argue 
that with tremendous increase in processing power and 
memory capacity of current routers, this issue can be 
resolved. 
3. Involvement of ISPs: It needs to be studied that how ISPs 
could be encouraged to provide AON service. The 
reduction of cost due to reduced inter-ISP traffic could be 
the incentive.  
4. File sharing and downloading: Our focus in this paper 
has been in resource discovery process. Its applicability in 
file sharing and downloading such as BitTorrent like 
systems need to be studied. 
IV. 
CONCLUSION AND FUTURE WORK 
We have introduced underlay-aware distributed service 
discovery architecture with message level intelligence and 
analyzed its effectiveness in terms of privacy and security of 
peers in the overlay, efficient query forwarding, scalability and 
performance. Currently a mathematical model for a full scale 
system is being developed. The system is also being modeled 
using J-Sim, a Java based network modeling and simulation 
tool. In future, we are planning to simulate the system with real 
case studies and compare its performance with relevant 
literatures as in [5-7].  
REFERENCES 
 
[1] 
P. T. Michael P. Papazoglou, Schahram Dustdar, Frank Leymann and 
Bernd J. Krämer, "Service-Oriented Computing Research Roadmap," 
Dagstuhl Seminar Proceedings 05462, Service Oriented Computing 
(SOC), 2006, http://drops.dagstuhl.de/opus/volltexte/2006/524, retrived: 
September, 2011. 
[2] 
E. Meshkova, J. Riihijärvi, M. Petrova, and P. Mähönen, "A survey on 
resource discovery mechanisms, peer-to-peer and service discovery 
frameworks," Computer Networks, vol. 52, pp. 2097-2128, 2008. 
[3] 
J. Seedorf, S. Kiesel, and M. Stiemerling, "Traffic localization for P2P-
applications: The ALTO approach," presented at P2P '09. IEEE Ninth 
International Conference on Peer-to-Peer Computing, pp. 171-177, 
2009. 
[4] 
H. Xie, Y. R. Yang, A. Krishnamurthy, Y. G. Liu, and A. Silberschatz, 
"P4p: provider portal for applications," in Proceedings of the ACM 
SIGCOMM 2008 conference on Data communication. Seattle, WA, 
USA: ACM, 2008, pp. 351-362. 
[5] 
L. GarcÃ©s-Erice, K. Ross, E. Biersack, P. Felber, and G. Urvoy-
Keller, 
"Topology-Centric 
Look-Up 
Service," 
in 
Group 
Communications and Charges. Technology and Business Models, vol. 
2816, Lecture Notes in Computer Science, B. Stiller, G. Carle, M. 
Karsten, and P. Reichl, Eds.: Springer Berlin / Heidelberg, 2003, pp. 58-
69. 
[6] 
D. B. Hoang, H. Le, and A. Simmonds, "PIPPON: A Physical 
Infrastructure-aware Peer-to-Peer Overlay Network," presented at 
TENCON 2005 2005 IEEE Region 10, pp. 1-6, 2005. 
[7] 
R. Bindal, C. Pei, W. Chan, J. Medved, G. Suwala, T. Bates, and A. 
Zhang, "Improving Traffic Locality in BitTorrent via Biased Neighbor 
Selection," presented at 26th IEEE International Conference on 
Distributed Computing Systems (ICDCS), pp. 66, 2006.  
[8] 
R. Ferreira, A. Grama, and S. Jagannathan, "Plethora: An Efficient 
Wide-Area Storage System," in High Performance Computing - HiPC 
2004, vol. 3296, Lecture Notes in Computer Science, L. Bougé and V. 
Prasanna, Eds.: Springer Berlin / Heidelberg, 2005, pp. 305-310. 
[9] 
S. Xin, L. Kan, L. Yushu, and T. Yong, "SLUP: A Semantic-Based and 
Location-Aware Unstructured P2P Network," presented at 10th IEEE 
International Conference on High Performance Computing and 
Communications (HPCC), pp. 288-295, 2008.  
[10] D. A. Menasce'; and L. Kanchanapalli, "Probabilistic scalable P2P 
resource location services, http://doi.acm.org/10.1145/588160.588167," 
SIGMETRICS Perform. Eval. Rev., vol. 30, pp. 48-58, 2002. 
[11] D. Tsoumakos and N. Roussopoulos, "Adaptive probabilistic search for 
peer-to-peer networks," presented at Third International Conference on 
Peer-to-Peer Computing, (P2P 2003). pp. 102-109, 2003. 
[12] V. Kalogeraki, D. Gunopulos, and D. Zeinalipour-Yazti, "A local search 
mechanism 
for 
peer-to-peer 
networks, 
http://doi.acm.org/10.1145/584792.584842 " in Proceedings of the 
11
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-174-8
EMERGING 2011 : The Third International Conference on Emerging Network Intelligence

eleventh international conference on Information and knowledge 
management McLean, Virginia, USA ACM, 2002 pp. 300-307  
[13] I. I. o. T. Yu Cheng, U. o. T. Alberto Leon-Garcia, and U. o. C. Ian 
Foster, "Toward an Autonomic Service Management Framework: A 
Holistic Vision of SOA, AON, and Autonomic Computing," IEEE 
Communications Magazine, vol. 46, pp. 138-146, 2008. 
[14] "http://soa.sys-con.com/node/155657", retrived: September, 2011. 
[15] X. Tian, Y. Cheng, K. Ren, and B. Liu, "Multicast with an Application-
Oriented Networking (AON) Approach," presented at IEEE International 
Conference on Communications, ICC '08,  pp. 5646-5651, 2008. 
[16] "http://www.mscibarra.com/products/indices/gics/", retrived: September, 
2011. 
[17] E. Al-Masri and Q. H. Mahmoud, "WSCE: A Crawler Engine for Large-
Scale Discovery of Web Services," presented at IEEE International 
Conference on Web Services, ICWS 2007, pp. 1104-1111, 2007. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
12
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-174-8
EMERGING 2011 : The Third International Conference on Emerging Network Intelligence

