StaCo: Stackelberg-based Coverage Approach in
Robotic Swarms
Kateˇrina Staˇnkov´a, Bijan Ranjbar-Sahraei, Gerhard Weiss, Karl Tuyls
Department of Knowledge Engineering
Maastricht University
Email: {k.stankova,b.ranjbarsahraei,gerhard.weiss,k.tuyls}@maastrichtuniversity.nl
Abstract—The Lloyd algorithm is a key concept in multi-robot
Voronoi coverage applications. Its advantages are its simplicity
of implementation and asymptotic convergence to the robots’
optimal position. However, the speed of this convergence cannot
be guaranteed and therefore reaching the optimal position may
be very slow. Moreover, in order to ensure the convergence, the
Hessian of the corresponding cost function has to be positive
deﬁnite all the time. Validation of this condition is mostly
impossible and, as a consequence, for some problems the standard
approach fails and leads to a non-optimal positioning. In such
situations more advanced optimization tools have to be adopted.
This paper introduces Stackelberg games as such a tool. The
key assumption is that at least one robot can predict short-
term behavior of other robots. We introduce the Stackelberg
games, apply them to the multi-robot coverage problem, and
show both theoretically and by means of case studies how the
Stackelberg-based coverage approach outperforms the standard
Lloyd algorithm.
Keywords—Swarm robots; Coverage control; Lloyd algorithm;
Game theory; Stackelberg games
I.
INTRODUCTION
In recent years many researchers in robotics, control, and
computer science have focused on swarm robotics and have
developed solutions of fundamental swarm robotic problems
(see [1] for solving ﬂocking control problem, [2] for aggre-
gation, [3] for multi-robot coverage, and [4] for formation).
However, most of the proposed solution methods encounter
difﬁculties in real-world applications, such as ﬁnding only sub-
optimal solutions and the inability of the algorithms to account
for non-convex environments. Subsequently, despite the wide
range of existing works in the domain of multi-robot coverage
[3], [5]–[9], there are still only very few in-ﬁeld deployments,
due to a wide gap between the theory of multi-robot coverage
systems and the practice.
The Stackelberg Coverage (StaCo) approach proposed in
this paper addresses the deﬁciencies of the existing works
in multi-robot coverage, by adding one or more relatively
advanced robots, called leaders, to the swarm. In other words,
we assume a priori a heterogeneous robotic swarm, similar to
that shown in Figure 1. In this ﬁgure, two intelligent robots act
as the leaders, which can perceive the environment globally,
and a large swarm of simple robots following simple local
rules. The main advantage of such a heterogeneous approach
is preserving the simplicity of the major population of the
robotic swarm, while a small group of robots can predict
behavior of the others and act so that the desired behavior is
achieved faster and with a higher precision. The main building
block of our approach is the so-called Stackelberg game theory
[10], [11], which belongs to the more general noncooperative
game theory [10], [12]. Game theory has been successfully
applied in various ﬁelds; its known applications in the robotic
ﬁeld relate to pursuit-evasion and search problems [13], [14].
However, application of the Stackelberg games in the multi-
robot coverage is new.
The remainder of the paper is structured as follows: A
motivation example of classical coverage limitations will be
presented in Section II. In Section III we will brieﬂy review
the game-theoretic preliminaries and introduce Stackelberg
games. In Section IV the Voronoi-based coverage problem
will be deﬁned as a Stackelberg game and its properties
will be discussed. The simulation setup and the results of
applying the proposed approach will be presented in Section V.
In Section VI we will discuss the advantages of the StaCo
approach and give concluding remarks.
II.
MOTIVATION
A motivaton example, which illustrates the limitations of
classical approaches in mutli-robot coverage, is shown in
Figure 2. The group of robots, initiated in the position depicted
in Figure 2a, moves based on the standard coverage approach
suggested in [3]. With this approach, the robots are driven to
the ﬁnal conﬁguration shown in Figure 2b. However, this con-
ﬁguration is sub-optimal (The globally optimal solution will
be found adopting the StaCo approach proposed in this paper
in Section V, Figure 7c). The problem of being enmeshed
Figure 1.
A heterogeneous robotic swarm with 2 leading robots and
34 following robots. The followers can collect information only from their
neighbors, while the leaders are capable of collecting information from the
entire robotic swarm. The leaders may be able to predict possible future
reactions of the followers and to enforce their own decisions on the followers.
71
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-274-5
ADAPTIVE 2013 : The Fifth International Conference on Adaptive and Self-Adaptive Systems and Applications

0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Initial Configuration
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Final Configuration
(a)
(b)
Figure 2.
Example of the problem in which the standard coverage approach
leads to only a locally optimal but not the globally optimal conﬁguration (dots
denote robot locations and lines denote boundaries of the Voronoi regions): (a)
initial conﬁguration, (b) ﬁnal conﬁguration achieved by approach suggested
in [3]; this ﬁnal conﬁguration is suboptimal
in a local optimum can also be seen in non-convex environ-
ments (e.g. in presence of obstacles). With the motivation to
avoid such complications and to speed up the procedure of
ﬁnding the global optimum, we introduce the StaCo approach.
Adopting this approach, the majority of the swarm consists
of simple robots following local rules introduced in [3], while
one or two more advanced robots (leaders) improve the system
performance by taking different actions, taking the decisions
of the others into account. Consequently, the decentralized
behavior of the swarm and the simplicity of most robots is
preserved, while overall system performance is signiﬁcantly
improved.
III.
BASICS OF STACKELBERG GAMES
Let us explain basics of Stackelberg games by the following
static example.
Example III.1. (Two-player static game) Let two players L
and F have decision variables uL ∈ R and uF ∈ R, respec-
tively. Let functions JL : R2 → R and JF : R2 → R be smooth
and strictly convex on R2. Player L chooses uL ∈ R in order
to minimize her cost JL(uL, uF ), while player F minimizes
JF (uL, uF) by choosing uF ∈ R. Illustration of this situation
is given in Figure 3, where level curves (contours) of JL and
JF are depicted in (uL, uF )-plane. If there is no hierarchy be-
tween L and F (i.e., if they either act simultaneously or if they
do not know how the other player acts), the Nash equilibrium
applies [15]. In such a situation, L and F would pick u(N)
L
and u(N)
F
, respectively, where u(N)
L
= arg min
uL
JL

Lemma III.4. (Existence and uniqueness of Stackelberg strat-
egy) Every two-person static game with leader L and follower
F, where (A1) and (A2) hold, admits a unique Stackelberg
strategy for the leader.
Proof. If ΓL and ΓF are convex compact sets and JL :
ΓL × ΓF → ΓL and JF : ΓL × ΓF → ΓF are strictly convex
smooth cost functions, then R(uL) ⊂ ΓF by Deﬁnition III.2.
Existence and uniqueness of the Stackelberg strategy directly
follow from Deﬁnition III.3.
To conclude this short introduction, we state the obvious
property of the Stackelberg outcome.
Lemma III.5. (Stackelberg outcome versus Nash outcome
in a static game) For a two-person static game with leader
L and follower F, where assumptions (A1) and (A2) hold,
JL

C∆
1 (T ∆) = C1(T ). Note that the Hessian of (2) might not be
positive deﬁnite with the leader’s decision deﬁned by (4). Thus,
u∗,S
1
(t) either coincides with (4) or, if this choice would lead
to only sub-optimal solution, u∗,S
1
(t) differs from (4) and leads
to a better outcome. This result also follows from extension of
Lemma III.5 into dynamic setting with the state equation (1).
Giving more information to the leader almost always leads
to the better outcome for the leader also in a very general
setting [10], [11], while the StaCo approach never leads to
the outcome worse than that reached by standard methods [3].
In the next section we will illustrate that when the classical
Lloyd algorithm fails and leads to only a local optimum, the
StaCo approach can ﬁnd the global solution. For the case
studies in the next section, the time and space are discretized
and therefore the leader can choose from a limited number of
decisions at each time step k.
V.
CASE STUDIES
In this section, we will study the performance of the
proposed StaCo approach in comparison with the classical
Voronoi-based coverage approach.
A. Simulation Setup
To simulate StaCo and compare it with the standard
approach, we have developed a 2D robot simulator. This
simulator is written in Java and supports simple massless robot
motion. The environment Ω to be covered in all simulations
is a 8 m × 8 m square and the speed of each robot is limited
to 4 cm/s. The time discretization of the system is 0.4 s.
The designed simulator supports Voronoi cell computation
for each robot. In each time step, ﬁrstly the locations of robots
x are used to compute the Voronoi cell of each robot and
subsequently the centroid of each cell is computed and used
by the robots to ﬁnd the gradient descent direction (4). With
the StaCo approach the robot closest to the center of Ω is
considered as the leader. In each time step, instead of following
the gradient descent direction (4), the leader ﬁrst discretizes its
surrounding space into a limited number of accessible locations
(in our simulations 8 points on a circle of radius 1.5 cm, with
equal distances to each other). Then for moving to each of
these locations, the leader predicts the possible moves of other
robots, in one or two time steps, and chooses the movement,
which minimizes C1 (i.e. the best possible response to the
other robots).
In order to measure the performance of the StaCo approach
and to compare it with the performance of the classical
coverage techniques, we introduce the Settling Time as the
time required for the cost function (2) of the whole swarm to
enter and remain within a prespeciﬁed error boundary. More
precisely, we deﬁne the settling time Ts as
Ts
def
= min
n
Ts ∈ [0, Tf]
∀t > Ts :

C1(Tf )−C1(t)
C1(Tf )−C1(0)
 < ǫ
o
(5)
where ǫ = 0.05, C1 is deﬁned by (2), and Tf is the simulation
stopping time, i.e. the minimal time such that the cost C1(.)
doesn’t change.
As an example of the simulation setup, Figure 4a shows
an initial conﬁguration of a robotic swarm of 8 robots. Both
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Initial Configuration
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Final Configuration
(a)
(b)
0
50
100
150
50
100
150
200
250
300
350
Time(s)
Cost Function
 
 
Classical Coverage
StaCo
0
50
100
150
500
1000
1500
2000
2500
3000
Time(s)
Sum of Cost Function Over Time
 
 
Classical Coverage
StaCo
(c)
(d)
Figure 4.
Comparison of performance of the proposed StaCo approach and
the standard approach for a particular conﬁguration: (a) initial conﬁguration
(b) ﬁnal conﬁguration (c) coverage cost function (d) cost function summed up
over time.
the StaCo and the classical coverage approaches are applied to
this conﬁguration; with the StaCo approach the leader makes
a prediction of the swarm behavior for one subsequent time
step. The ﬁnal conﬁguration after 170 s is shown in Figure 4b.
Clearly, both methods reach the same ﬁnal conﬁguration;
however, as shown in Figure 4c, StaCo reaches the ﬁnal
conﬁguration faster than the classical approach. Finally, in
Figure 4d, the cost functions for both techniques are summed
up over the time. This ﬁgure shows that the StaCo approach
converges to the optimal conﬁguration faster than the classical
approach. The settling time of both approaches can be easily
measured via the horizontal lines in Figure 4c (The upper and
lower lines refer respectively to C1(Ts) and C1(Tf), which
denote the 0.05 error bound). Therefore, in this particular case
study, the settling time for the StaCo approach is 75 s, and for
the classical coverage approach it is 105 s.
B. Effect of Swarm Size
In order to compare both techniques in a more generic way,
we have applied our simulation to groups of 2 – 20 robots, 20
times for each swarm size, with random starting conﬁgurations.
The convergence settling times for both techniques were accu-
rately measured based on (5). Their statistical representation
is illustrated in Figure 5. In this ﬁgure, the average value, the
minimum, and the maximum of the settling time over 20 runs
are plotted with respect to the swarm size. From Figure 5
we can conclude that the StaCo approach performs better
compared to the classical coverage approach. For certain initial
conﬁgurations both methods achieve the ﬁnal conﬁguration
with the same settling time, while for the majority of possible
initial conﬁgurations the StaCo approach performs better. Such
behavior is observed in simulations and is also supported by
the theoretical arguments in Sections III and IV.
74
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-274-5
ADAPTIVE 2013 : The Fifth International Conference on Adaptive and Self-Adaptive Systems and Applications

2
4
6
8
10
12
14
16
18
20
0
20
40
60
80
100
120
140
160
180
200
Swarm Size
Settling Time (s)
 
 
Classical Coverage
StaCo
Figure 5.
Comparison of the coverage settling time between the proposed
StaCo approach and the classical coverage approach for robotic swarms of
different sizes.
C. Effects of Leader’s Speed and Prediction Horizon
Firstly, we examine the effect of the leader’s speed on the
performance of StaCo. Secondly, we will investigate how the
number of prediction steps inﬂuences the performance.
We employ a robotic swarm with eight robots. For each
initial conﬁguration, we increase the speed of the leader from
4 cm/s up to 16 cm/s in steps of 2 cm/s, while the followers’
maximum speed remains 4 cm/s. Each simulation is repeated
20 times from random initial conﬁgurations. Afterwards, the
simulations are repeated with the leader’s prediction horizon
being increased to up to 2 subsequent time steps, with varying
leader’s speed.
The results presented in Figure 6 show that increase of
the leader’s speed and prediction horizon can improve the
convergence performance of the StaCo approach.
1:1
1.5:1
2:1
2.5:1
3:1
3.5:1
4:1
0
10
20
30
40
50
60
70
80
90
Ratio of Max. Leader Speed to Max. Followers Speed
Settling Time (s)
 
 
One Prediction Step
Two Prediction Steps
Figure 6.
Coverage settling time of a robotic swarm of one leading robot and
seven following robots for different leader’s speeds, while the leader makes
predictions for one or two future time steps.
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Initial Configuration
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Final Configuration
(a)
(b)
0
2
4
6
8
0
1
2
3
4
5
6
7
8
x(m)
y(m)
Final Configuration
0
50
100
150
0
100
200
300
400
500
Time(s)
Cost Function
 
 
Classical Coverage
StaCo
(c)
(d)
Figure 7.
Comparison of coverage performance between the proposed StaCo
approach and the standard coverage approach for an initial conﬁguration close
to a sub-optimal conﬁguration: (a) initial conﬁguration; (b) ﬁnal conﬁguration
for standard coverage approach; (c) ﬁnal conﬁguration for the StaCo approach;
(d) comparison of the cost functions.
D. Escaping sub-optimal conﬁgurations
In StaCo approach the leader is able to perceive global
information about the position of all swarm robots. This ability
may help the swarm to escape from sub-optimal conﬁgurations.
A sample initial conﬁguration, already discussed in Section II,
is shown in Figure 7a.
This initial conﬁguration is very close to a suboptimal
case, which is achieved if each robot moves a bit up or
down and settles in the center of its rectangular Voronoi cell.
Although the classical coverage approach terminates in this
local minimum immediately (see Figure 7b), it is very easy
for the StaCo approach to escape from this local minimum.
The ﬁnal conﬁguration achieved by the StaCo is shown in
Figure 7c. Comparison of costs over the time are illustrated in
Figure 7d. Clearly, the StaCo approach performs much better.
Similarly to the results depicted in Figure 7, starting
from any other initial conﬁguration close to a sub-optimal
conﬁguration, the standard coverage approach will result in this
sub-optimal position. The perception capabilities of the leader
in StaCo allow for ﬁnding the globally optimal conﬁguration.
VI.
DISCUSSIONS AND CONCLUSIONS
This article addressed the multi-robot coverage problem
and presented a new approach called StaCo, which is based
on the game-theoretic concept of Stackelberg games. StaCo
takes advantage of the high perception capabilities of a small
group of robots (leaders) among a large group of simple
robots (followers) and allows for a very efﬁcient coverage
performance. No communication among the robots takes place.
The leader(s) choose(s) a position in such a way that the other
robots will, by optimizing their own objectives, improve the
75
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-274-5
ADAPTIVE 2013 : The Fifth International Conference on Adaptive and Self-Adaptive Systems and Applications

overall conﬁguration of the system. Therefore, this approach is
a non-intrusive way to steer the system into a desirable direc-
tion and leads to fast and effective coverage of an environment.
StaCo always performs at least as well as the classical
approach, mostly StaCo performs better. This outcome was
shown both theoretically and by means of case studies. More-
over, StaCo is able to escape from sub-optimal conﬁgurations
when the classical approach is doomed to fail.
A possible limitation of the StaCo approach is that cur-
rently there is no explicit form of the optimal Stackelberg
solution of the game due to the complexity of the cost function
of the leader; however, its derivation is a subject of our ongoing
research.
StaCo opens a promising new research avenue: Using het-
erogenous robotic swarms for coverage in complex scenarios
such as those with non-convex environments (environments
with obstacles or with non-convex boundaries). As described in
many existing works, accomplishing a swarm robotic mission
in a non-convex environment is a difﬁcult task. However, the
authors believe that the StaCo approach can be very successful
in such scenarios.
REFERENCES
[1]
R. Olfati-Saber, “Flocking for multi-agent dynamic systems: Algorithms
and theory,” IEEE Transactions on Automatic Control, vol. 51, no. 3,
pp. 401–420, 2006.
[2]
A. Martinoli, A. Ijspeert, and L. Gambardella, “A probabilistic model
for understanding and comparing collective aggregation mechanisms,”
in Proceedings of the Fifth European Conference on Artiﬁcial Life
(ECAL99), pp. 575–584, 1999.
[3]
J. Cortes, S. Martinez, T. Karatas, and F. Bullo, “Coverage control
for mobile sensing networks,” IEEE Transactions on Robotics and
Automation, vol. 20, no. 2, pp. 243–255, 2004.
[4]
W. Ren and N. Sorensen, “Distributed coordination architecture for
multi-robot formation control,” Robotics and Autonomous Systems,
vol. 56, no. 4, pp. 324–333, 2008.
[5]
Z. Butler and D. Rus, “Controlling mobile sensors for monitoring
events with coverage constraints,” in Proceedings of IEEE International
Conference on Robotics and Automation (ICRA), pp. 1568 – 1573, 2004.
[6]
L. C. A. Pimenta, M. Schwager, Q. Lindsey, V. Kumar, D. Rus, R. C.
Mesquita, and G. A. S. Pereira, “Simultaneous coverage and tracking
(SCAT) of moving targets with robot networks,” in Proceedings of
the Eighth International Workshop on the Algorithmic Foundations of
Robotics (WAFR 08), pp. 85–99, 2009.
[7]
M. Schwager, D. Rus, and J. J. Slotine, “Decentralized, adaptive cov-
erage control for networked robots,” International Journal of Robotics
Research, vol. 28, no. 3, pp. 357–375, 2009.
[8]
A. Breitenmoser, M. Schwager, J. Metzger, R. Siegwart, and D. Rus,
“Voronoi coverage of non-convex environments with a group of net-
worked robots,” in IEEE International Conference on Robotics and
Automation (ICRA), pp. 4982–4989, 2010.
[9]
B. Ranjbar-Sahraei, G. Weiss, and A. Nakisaee, “A multi-robot coverage
approach based on stigmergic communication,” in Multiagent System
Technologies, vol. 7598 of Lecture Notes in Computer Science, pp. 126–
138, Springer, 2012.
[10]
T. Bas¸ar and G. J. Olsder, Dynamic Noncooperative Game Theory.
Philadelphia, Pennsylvania: SIAM, 1999.
[11]
K. Staˇnkov´a, On Stackelberg and Inverse Stackelberg Games & Their
Applications in the Optimal Toll Design Problem, the Energy Market
Liberalization Problem, and in the Theory of Incentives. PhD thesis,
Delft University of Technology, Delft, The Netherlands, 2009.
[12]
M. Osborne, An Introduction to Game Theory.
New York: Oxford
University Press, 2004.
[13]
E. Raboin, D. Nau, U. Kuter, S. K. Gupta, and P. Svec, “Strategy
generation in multi-agent imperfect-information pursuit games,” in
Proceedings of the 9th International Conference on Autonomous Agents
and Multiagent Systems, pp. 947–954, 2010.
[14]
Y. Meng, “A game-theory based multi-robot search approach for mul-
tiple targets,” IEEE Robotics & Automation Magazine, vol. 5, no. 4,
pp. 341–350, 2008.
[15]
J. Nash, “Noncooperative games,” Annals of Mathematics, vol. 54,
pp. 286–295, 1951.
[16]
K. Staˇnkov´a and B. De Schutter, “Stackelberg equilibria for discrete-
time dynamic games – Part I: Deterministic games,” in Proceedings of
the 2011 IEEE International Conference on Networking, Sensing and
Control, (Delft, The Netherlands), pp. 249–254, Apr. 2011.
[17]
K. Staˇnkov´a and B. De Schutter, “Stackelberg equilibria for discrete-
time dynamic games – Part II: Stochastic games with deterministic
information structure,” in Proceedings of the 2011 IEEE International
Conference on Networking, Sensing and Control, (Delft, The Nether-
lands), pp. 255–260, Apr. 2011.
[18]
Q. Du, V. Faber, and M. Gunzburger, “Centroidal Voronoi tessellations:
applications and algorithms,” SIAM Review, vol. 41, no. 4, pp. 637–676,
1999.
76
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-274-5
ADAPTIVE 2013 : The Fifth International Conference on Adaptive and Self-Adaptive Systems and Applications

