A Cell-Centered Lagrangian Method Based on Local Evolution Galerkin Scheme
for Two-Dimensional Compressible Flows
Ming Yu
Key Laboratory for Computational Physics, Institute of
Applied Physics and Computational Mathematics
Beijing, China
E-mail: yu_ming@iapcm.ac.cn
Haibo Xu, Yutao Sun
Institute of Applied Physics and Computational
Mathematics
Beijing, China
E-mail: xu_haibo@iapcm.ac.cn, syt@iapcm.ac.cn
Abstract—This paper presents a new cell-centered Lagrangian
method for two-dimensional compressible flows. The main
feature of the method is that the velocity and pressure at the
cell vertex are computed using the local Galerkin evolution
scheme for solving the linearized flow equations in terms of the
bicharacteristic theory, and then the velocity and pressure are
used to update the grid coordinates and evaluate the numerical
flux across the cell interface. The local Galerkin evolution
operator gives the solutions evolving for an infinite small time
interval from the initial conditions and still can maintain the
genuinely multidimensional nature of a hyperbolic system.
Keywords-Lagrangian method; cell-centered scheme; local
evolution Galerkin scheme; finite volume scheme
I.
INTRODUCTION
In
multimaterial
flow
simulation,
a
grid-staggered
Lagrangian method is extensively adopted [1]. Recently,
increased attention has been paid to the cell-centered
Lagrangian method, in which the primary variables including
the density, momentum (velocity) and total energy, are
defined at the center of a cell. The cell-centered scheme is
constructed
by
integrating
directly
the
system
of
conservation laws on each moving cell with finite volume
discretization, so it can well preserve the conservation of the
momentum and total energy, and may not require the
artificial viscosity and hourglass viscosity. In addition, it has
synchronous time advancement among the flow governing
equations. The idea of cell-centered scheme was firstly
introduced by Godunov [2] in one-dimensional gas dynamics
and then extended to multidimensional flows. The key point
of multidimensional cases lies in the determination of the
velocity at the cell vertex. There are several typical
approaches to determine the vertex velocity of a cell [3]-[6].
Apparently, it is a good idea to construct the Riemann
solver of the cell vertex directly from the characteristic
property
about
multidimensional
compressible
fluid
equations. To design this “genuinely multidimensional”
numerical solver, the evolution Galerkin scheme [7]-[9] may
be adopted, in which the exact integral equations from a
general theory of bicharacteristics for the linear or linearized
hyperbolic system were derived in terms of the primitive
physical variables, and then the vertex solutions were
obtained to determine the vertex velocity and evaluate the
numerical fluxes across the cell interface. Usually, these
integral
solutions
could
be
further
approximated
by
approximate evolution operator in such a way that all of the
infinitely many directions of propagation of bicharacteristics
were explicitly taken into account. This vertex solver from
the bicharacteristic theory essentially is a multidimensional
Riemann solver or a generalization of the original idea of
Godunov to multidimensional hyperbolic conservation laws.
The idea has been studied extensively from theoretical as
well as numerical point of view and applied to various
science and engineering for the compressible fluid equations
in
the
Eulerian
formalism
[7]-[9].
Traditionally,
the
evolution Galerkin operator gives the evolutive course within
a certain time interval. In order to simplify the computations
of the integral solutions and facilitate the semi-discrete finite
volume scheme, the local evolution Galerkin operator is
proposed by Sun and Ren [9], in which the solutions that are
evolved for an infinitely small time interval from the initial
condition in terms of the primitive variables are derived by
means of a limit operation to let the evolution time approach
to zero. The semi-discrete finite volume scheme decouples
the temporal discretization and the spatial discretization
while maintaining the genuine multidimensional nature of
the original evolution Galerkin scheme.
The paper is organized as follows. In Section II, we give
the
compressible
flows
equations
in
the
Lagrangian
formulation. In Section III, the vertex solver to compute
velocity and pressure by local evolution Galerkin operator is
derived. In Section IV, the global description of the present
algorithm is shown. In Section V, several numerical tests are
shown. Some main conclusions are presented in Section VI.
II.
NUMERICAL METHOD FOR COMPRESSIBLE
LAGRANGIAN FLOW EQUATIONS
A.
Governing equations of compressible flow
The governing equations of compressible flow without
internal dissipation and external forces can express into the
following integrals as the Lagrangian formalism:
∫Ω
=
Ω
( )
0
t
d
dt
d
ρ
(1)
∫
∫
Ω
= − ∂Ω
Ω
( )
( )
t
t pd
d
dt
d
l
ρu
(2)
∫
∫
Ω
∂Ω
⋅
= −
Ω
( )
( )
t
t
d
p
Ed
dt
d
l
u
ρ
(3)
∫
∫
Ω
Ω
= − ∂ ⋅
Ω
( )
( )
t
t d
d
dt
d
l
u
(4)
13
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

where ρ is density, u and v are component velocity, p is
pressure, E is specific total energy,
2
2
(
) / 2
E
e
u
v
=
+
+
, e
is specific internal energy, and
Ω( )t
is a control volume
with the boundary
∂Ω( )t
, dl is the differential length of the
surface for the control volume.
For
a
given
control
volume
c
W
with
the
mass
c
mc
d
ρ
= Ω
Ω
∫
and the area
c
cA
d
= Ω
Ω
∫
, a definition about
the
average
value
of
any
physical
variable
f
is
1
c
c
c
f
fd
m
ρ
Ω
=
Ω
∫
. Thus, (1) becomes an algebraic equation
const
c
c
c
A
m
r
=
=
, and (2)-(4) can be written for these
discrete unknowns in two-dimensional space with regard of a
vector form:
1
c
c
c
d
dl
dt
m
∂Ω
= −
⋅
∫
U
H n
(5)
where
(
)
,
,
,
T
c
c
c
c
u v Ec
U = −τ
,
/
c
c
c
A
m
τ =
, n is the outward
unit vector normal to the boundary of the control volume,
(
)
(
)
, ,0,
,0, ,
T
T
u p
pu
v
p pv
=
+
H
i
j is the tensor of fluxes.
Under Lagrangian coordinates, the control volume moves
with the same velocity as the fluid particle, and the trajectory
equations of any fluid particle is:
dx
dt = u
, dy
dt = v
(6)
B.
The finite volume scheme
For any nonoverlapping polygons cell with the number
( )
N c
of interfaces of the cell and a interface denoted by
kI ,
the flow governing equation may be written as:
( )
1
1
k
N c
c
k
k
I
k
c
d
dl
dt
m
=
= −
⋅
∑ ∫
U
H
n
(7)
A suitable approach to solve (7) is the semi-discrete
procedure that decouples the temporal discretization and the
spatial discretization. Thus, the respective high order scheme
about temporal and spatial discretization can be adopted
independently. A second-order Runge-Kutta scheme for
temporal discretization is following:
(
)
(
)
( )
*
,0
1
( )
1
*
*
,0
1
1
1
2
2
k
k
N c
n
n
c
c
k
I
c
c
k
I
k
c
N c
n
n
c
c
c
k
I
c
c
k
I
k
c
t
dl
m
t
dl
m
=
+
=
∆
=
−
⋅


∆
=
+
−
⋅




∑ ∫
∑ ∫
U
U
H
E
R U
n
U
U
U
H
E
R U
n
(8)
where Rc is the reconstruction operator which transforms the
cell averages of the conservative variables to their spatial
distributions, and EI,0 is an approximate Galerkin evolution
operator to compute the solution at time
0
n
n
t
+ = t
+
on cell
interface Ik.
The rest part of this section will give the procedures for
the reconstruction and the numerical integration of the
interface flux in (8), while the approximate Galerkin
evolution operator will be discussed in Section III.
C.
The reconstructions
Usually, the reconstruction is carried out in terms of the
primitive physical variables
(
q = ρ,u,v, p)T
from the cell
average data
cq . To obtain a spatially first-order scheme, a
piecewise constant reconstruction is sufficient; and to obtain
a
spatially
second-order
scheme,
a
piecewise
linear
reconstruction is sufficient.
D.
The numerical integration of the interface flux
In order to give the relation between variables at interface
and
variables
at
vertex
and
ensure
the
equivalent
discretization between the numerical flux across interface
and the numerical flux at vertex at the same time, the
numerical integration to the interface flux in (8) may adopt
the following midpoint rule [6]:
(
)
(
)
(
)
( )
,0
1
( )
0
1
0
,
1
,
1
1
1
2
k
N c
k
I
c
c
k
I
k
N c
r
c
c
r
c
c
r r
r r
r
dl
L
=
+
+
+
=
⋅


=
+
⋅


∑ ∫
∑
H
E
R U
n
H
E R U
H
E R U
n
(9)
where E0 is the vertex solver from the local Galerkin
evolution operator to compute the solution at the cell vertex
at time
0
n
n
t
+ = t
+
, and r is the numbering of the vertices
counterclockwise,
,
Lr r 1
+ denotes the length of an interface
[
1 ]
r ,
r
M
M +
about the neighbouring vertices
Mr
and
r 1
M +
and
,
nr r +1
denotes the outward unit vector normal to the
interface [
1 ]
r ,
r
M
M +
.
III.
VERTEX SOLVER E0 BY THE LOCAL EVOLUTION
GALERKIN OPERATOR
The central idea of the local evolution Galerkin operator
is
to
compute
the
theoretical
solutions
along
every
bicharacteristic direction for a small time interval from the
initial conditions about the hyperbolic equations, and then
the
theoretical
solutions
are
made
some
approximate
operations
and
limit
operations
to
obtain
the
local
approximate operator.
In order to derive the theoretical evolution Galerkin
solutions about the nonlinear hyperbolic system, a suitable
local linearization is usually utilized with regard to the
primitive variables, so that the bicharacteristics are reduced
to straight lines. For this purpose, we have:
1
2
( )
( )
0
d
dt
x
y
∂
∂
+
+
=
∂
∂
q
q
q
A q
A q
where
u
v
p
ρ
 
 
 
=  
 
 
q
,
1
2
0
0
0
0
0
0
1/
( )
0
0
0
0
0
0
0
c
ρ
ρ
ρ






= 





Α q
,
2
2
0
0
0
0
0
0
0
( )
0
0
0
1/
0
0
0
c
ρ
ρ
ρ






= 





A q
.
14
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

The flow equations are linearized by freezing the
Jacobian matrices about a reference state
( , , , )
q% = ρ u v p
% % % %
at
point
( , , )
P
% = x y t
% % %
. The linearized system with frozen
constant Jacobian matrices can be written as:
1
2
( )
( )
0
d
dt
x
y
∂
∂
+
+
=
∂
∂
q
q
q
A q
A q
%
%
(10)
Considering any unit vector denoted by
( )
(
,
)T
x
θ = n ny
n
(cos ,sin )T
θ
θ
=
,
[0,2 ]
θ
π
∈
, there is a matrix pencil
1
2
(
)
(
)
(
)
x
y
n
n
θ
θ
θ
=
+
A q,
A q,
A q,
%
%
%
,
which
has
four
real
eigenvalues:
1
c
λ = % ,
2,3
0
λ
=
,
4
c
λ = −% ,
and
four
corresponding
linearly-independent
right
eigenvectors
(
)
1
/ ,cos ,sin ,
T
c
c
ρ
θ
θ
ρ
= −
−
%
%
%
%
r
,
(
)
2
1,0,0,0
T
r =
,
(
)
3
0,sin ,cos ,0
T
θ
θ
r =
,
(
)
4
/ ,cos ,sin ,
T
c
c
ρ
θ
θ ρ
r =
%
%
%
%
. The
four right eigenvectors may construct a right eigenmatrix R ,
and the characteristic variables can be define as
−1
w =
R q .
Multiplying system (10) by
R−1
from the left, an eigen-
system can be obtained
1
1
1
2
0
d
dt
x
y
−
−
∂
∂
+
+
=
∂
∂
w
w
w
R A R
R A R
(11)
Thus, (11) can be transformed into the following quasi-
diagonalized system:
1
2
d
dt
x
y
∂
∂
+
+
=
∂
∂
w
w
w
Λ
Λ
s
(12)
where
1
2
2
3
4
1 (
cos
sin )
2
sin
cos
1 (
cos
sin )
2
p
u
v
c
w
p
w
c
w
u
v
w
p
u
v
c
θ
θ
ρ
ρ
θ
θ
θ
θ
ρ


−
+
+










−




=
= 



−










+
+




w
% %
%
% %
,
3
3
1
2
1
4
1
4
3
4
3
3
1 (sin
cos
)
2
0
sin (
)
cos (
)
1 ( sin
cos
)
2
w
w
c
x
y
s
s
w
w
w
w
c
c
s
x
x
y
y
s
w
w
c
x
y
θ
θ
θ
θ
θ
θ
∂
∂


−


∂
∂












=
=
∂
∂
∂
∂




−
−
−


∂
∂
∂
∂






∂
∂


−
+


∂
∂


s
%
%
%
%
,
1
1,1
1,2
1,3
1,4
cos
0
0
0
0
0
0
0
(
,
,
,
)
0
0
0
0
0
0
0
cos
c
diag
c
θ
λ
λ
λ
λ
θ
−





=
= 





Λ
%
%
,
2
2,1
2,2
2,3
2,4
sin
0
0
0
0
0
0
0
(
,
,
,
)
0
0
0
0
0
0
0
sin
c
diag
c
θ
λ
λ
λ
λ
θ
−





=
= 





Λ
%
%
.
Equation (12) shows that each characteristic variable
lw
(l=1,2,3,4)
is
evolved
along
the
corresponding
bicharacteristic curve:
(
)
1,
( ), 2,
( )
T
l
l
l
d
dt
λ
θ
λ
θ

 =




z
,
l = 1,2,3,4
,
where
( , )T
z = x y
, according to the relation
1,
2,
( )
( )
l
l
l
l
l
l
l
Dw
dw
w
w
s
Dt
dt
x
y
λ
θ
λ
θ
∂
∂
=
+
+
=
∂
∂
.
Therefore, given the initial condition at time t% , the
solution of
lw at
( , ,
)
P
x y t
τ
=
% +
is:
1,
2,
ˆ
( , ,
, )
[
( ) ,
( ) , ]
( )
l
l
l
l
l
w x y t
w x
y
t
s
τ θ
λ
θ τ
λ
θ τ
θ
+
=
−
−
+
%
%
(13)
where
1,
2,
ˆ ( )
[
( )(
),
( )(
), ]
t
l
l
l
l
t
s
s x
t
y
t
d
τ
θ
λ
θ
τ
ξ
λ
θ
τ
ξ ξ
ξ
+
=
−
+
−
−
+
−
∫
%
%
%
%
.
For any given angle θ , the four bicharacteristic curves
from
( , ,
)
P x y t
% +τ
denoted by
l ( )
C θ
are depicted in Figure
1. The
1( )
C θ
or
4( )
C θ , for θ from 0 to 2π , generates a
bicharacteristic cone or Mach cone, and the
2( )
C θ
or
3( )
C θ
is perpendicular to the bottom of the cone. The intersection
point between
l ( )
C θ
and the initial plane with
( , , )
P x y t
%
% % %
is
denoted by
l ( )
Q θ . For
[0,2 ]
θ
π
∈
, the
1( )
Q θ
and
4( )
Q θ
locate in the circle with the center point
( , , )
P x y t
%
% % %
and the
radius cτ% , and
4
1
( )
(
)
Q
Q
θ
θ
π
=
+
, moreover, the
2( )
Q θ
and
3( )
Q θ
locate
in
the
initial
point
( , , )
P x y t
%
% % %
,
and
2
3
( )
( )
Q
Q
θ
θ
=
.
So,
the
expressions
may
hold:
1,4( )
(
cos ,
sin , )
Q
x
c
y
c
t
θ
τ
θ
τ
θ
=
±
±
%
%
%
,
2,3( )
( , , )
Q
θ = x y t
% .
Figure 1.
Bicharacteristic curves and bicharacteristic cone
Equation (13) can be also written in vector form as
1
1
1
2
2
2
3
3
3
4
4
4
ˆ
(
( ))
( )
ˆ
(
( ))
( )
( , )
ˆ
(
( ))
( )
ˆ
(
( ))
( )
w Q
s
w Q
s
P
w Q
s
w Q
s
θ
θ
θ
θ
θ
θ
θ
θ
θ












=
+
















w
.
(14)
Multiplying (14) with the right eigenmatrix R from the
left and then integrating with respect to θ from 0 to 2π , it
leads to:
15
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

(
)
(
)
4
2
0
1
1
ˆ
( )
( )
( )
2
l
l
l
l
l
P
w Q
s
d
π
θ
θ
θ
π
=


=
+




∑
∫
q
r
.
The symmetries in characteristic variables and the source
terms are used to obtain the solutions of the linearized
hyperbolic system:
2
2
1
1
1
0
2
0
1
( )
( )
2
(
)
1
cos
(
)cos
(
)sin cos
2
1
[
(
) ( ), , ]cos
2
1
( , )
2
t
t
t
t
u P
u P
p Q
u Q
v Q
d
c
S
c t
d d
p
d
x
π
π
τ
τ
θ
θ
θ
θ
θ
π
ρ
τ
ξ
θ ξ θ
θ ξ θ
π
ξ
ξ
ρ
+
+
=


+
−
+
+




+
+
+ −
∂
−
∂
∫
∫ ∫
∫
z
n
z
%
%
%
%
%
% %
%
%
%
(15)
2
2
1
1
1
0
2
0
1
( )
( )
2
(
)
1
sin
(
)cos
sin
(
)sin
2
1
[
(
) ( ), , ]sin
2
1
( , )
2
t
t
t
t
v P
v P
p Q
u Q
v Q
d
c
S
c t
d d
p
d
y
π
π
τ
τ
θ
θ
θ
θ
θ
π
ρ
τ
ξ
θ ξ θ
θ ξ θ
π
ξ
ξ
ρ
+
+
=


+
−
+
+




+
+
+
−
∂
−
∂
∫
∫ ∫
∫
z
n
z
%
%
%
%
%
% %
%
%
%
(16)
[
]
2
1
1
1
0
2
0
1
( )
(
)
(
)cos
(
)sin
2
1
[
(
) ( ), , ]
2
t
t
p P
p Q
cu Q
cv Q
d
c
S
c t
d d
π
π
τ
ρ
θ
ρ
θ
θ
π
ρ
τ
ξ
θ ξ θ
ξ θ
π
+
=
−
−
−
+
+
−
∫
∫ ∫
z
n
%
%
%
%
%
%
%
% %
%
(17)
where
2
2
( , , )
( , , )
( , , )
sin
cos
u
t
v
t
S
t
c
x
y
θ
θ
θ
θ
θ


∂
∂
=
+


∂
∂


z
z
z
%
( , , )
( , , ) sin 2
2
c
u
t
v
t
y
x
θ
θ
θ


∂
∂
−
+


∂
∂


z
z
%
.
For discretized grids, we assume that there are M
control volumes with a common vertex
( , )T
z = x y
, and
ka
θ
and
θkb
respectively are the starting and ending angles of the
kth
(
)
k k
≤ M
grid about the common vertex, thus (15)-(17)
can be rewritten into:
2
1
1
1
1
1
1
( )
( )
2
(
)
1
cos
(
)cos
(
)sin
cos
2
1
[
(
) ( ), , ]cos
2
1
( , )
2
kb
ka
kb
ka
M
k
t
M
k
t
t
t
u P
u P
p Q
u Q
v Q
d
c
S
c t
d d
p
d
x
θ
θ
θ
τ
θ
τ
θ
θ
θ
θ
θ
π
ρ
τ
ξ
θ ξ θ
θ ξ θ
π
ξ
ξ
ρ
=
+
=
+
=


+
−
+
+




+
+
+
−
∂
+
∂
∑ ∫
∑ ∫ ∫
∫
%
%
%
%
%
% %
%
%
%
z
n
z
(18)
2
1
1
1
1
1
1
( )
( )
2
(
)
1
sin
(
)cos
sin
(
)sin
2
1
[
(
) ( ), , ]sin
2
1
( , )
2
kb
ka
kb
ka
M
k
t
M
k
t
t
t
v P
v P
p Q
u Q
v Q
d
c
S
c t
d d
p
d
y
θ
θ
θ
τ
θ
τ
θ
θ
θ
θ
θ
π
ρ
τ
ξ
θ ξ θ
θ ξ θ
π
ξ
ξ
ρ
=
+
=
+
=


+
−
+
+




+
+
+
−
∂
−
∂
∑ ∫
∑ ∫ ∫
∫
z
n
z
%
%
%
%
%
% %
%
%
%
(19)
[
]
1
1
1
1
1
1
( )
(
)
(
)cos
(
)sin
2
1
[
(
) ( ), , ]
2
kb
ka
kb
ka
M
k
t
M
k
t
p P
p Q
cu Q
cv Q
d
c
S
c t
d d
θ
θ
θ
τ
θ
ρ
θ
ρ
θ
θ
π
ρ
τ
ξ
θ ξ θ
ξ θ
π
=
+
=
=
−
−
−
+
+
−
∑ ∫
∑ ∫ ∫
z
n
%
%
%
%
%
%
%
% %
%
(20)
Equations (18)-(20) are the exact evolution Galerkin
solutions for the linearized Lagrangian flow equations. For
simplifying the computation of the integrals including
pressure gradient term and source term, some approximate
operations are required with the similar procedure [9]. And
then, the local Galerkin evolution operator E0 about (18)-
(20) at time
0
n
n
t
+ = t
+
is obtained to make the limit
operations with
τ → 0
. From Figure 1, the effect of
0
τ →
is to make P
P
→ % and Q
P
→ % and the length of the arc
with two end points
(
Q θib )
and
(
Q θie )
tends to zero. Thus,
we have
(
( ))
i
Q θ
→
q
q , for
ib
ie
θ
θ
θ
≤
≤
, where
iq is the
vector of the primitive variables at P% evaluated in terms of
the reconstruction in the control volume containing the arc
with two end points
(
Q θib )
and
(
Q θie )
.
After approximate and limit operations, the analytical
expressions of the vertex solver E0 by the local Galerkin
evolution operator are the following:
1
1
( )
(sin
sin
)
sin 2
sin 2
cos2
cos2
2
4
4
N
i
ie
ib
i
ie
ib
ie
ib
ie
ib
i
i
p
u P
c
u
v
θ
θ
π
ρ
θ
θ
θ
θ
θ
θ
=

=
−
−

−
−
−



+
+
−






∑
% %
(21)
1
1
( )
(cos
cos
)
cos2
cos2
sin 2
sin 2
4
2
4
N
i
ie
ib
i
ie
ib
ie
ib
ie
ib
i
i
p
v P
c
u
v
θ
θ
π
ρ
θ
θ
θ
θ
θ
θ
=

=
−

−
−
−



−
+
−





∑
% %
(22)
[
]
1
1
( )
(
)
2
(sin
sin
)
(cos
cos
)
N
i
ie
ib
i
i
ie
ib
i
ie
ib
p P
p
cu
cv
θ
θ
π
ρ
θ
θ
ρ
θ
θ
=
=
−
−
−
+
−
∑
%
%
%
%
(23)
It was found that the vertex solver E0 is able to take
multidimensional effect into account in a natural way, and to
consider the effect of the different sonic impedences to
straightway apply to multimaterial flows, and to be fully
competent for the structured or unstructured grids.
16
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

IV.
DESCRIPTION OF THE PRESENT ALGORITHM
Step 1: Initialization
At
time
n
t
= t
,
the
geometrical
coordinates
ixn
,
n
iy (
1,2,
,
i
I
=
L
) of each vertex of each cell and the physical
variables
n
k
ρ (
kτ n
),
kun
,
kv n
,
n
k
E ,
n
kp (
1,2,
,
k
K
=
L
) at
center of each cell are known.
Step 2: Reconstruction
The physical primitive variables at each vertex of each
cell are obtained by means of the formula
in Subsection
II.C.
Step 3: Vertex solver
The velocities
n
iu ,
ivn
and pressure
n
ip (
1,2,
,
i
I
=
L
) at
each vertex of each cell are obtained by means of (21)-(23)
for the local Galerkin evolution operator E0.
Step 4: Update of the geometrical quantities
The updated grids and the length and outward vector of
each interface are achieved from the new coordinate data
n 1
ix + ,
n 1
iy + (
1,2,
,
i
I
=
L
) of each vertex of each cell.
Step 5: Update of the physical variables
The physical variables
kτ n 1
+ ,
kun 1
+ ,
kv n 1
+ ,
n 1
k
E + at center of
the updated grids can be computed from (8), and then the
corresponding
n 1
kp + is obtained from the equation of state.
V.
NUMERICAL RESULTS
A.
Multimaterial Sod’s shock tube problem
The initial conditions of two kinds of perfect gases with
different adiabatic indexes are: ( , , , )
(1,0,1,7 / 5)
ρ u p
γ =
in
the left-hand side and
(
)
( , , , )
0.125,0,0.1,5 / 3
ρ u p
γ =
in the
right-hand side. The density solution at time
t = 0.2
is
shown in Figure 2 for the second-order scheme with
CFL=0.8 under different meshes. It can be found that the
smaller the grid used, the closer the numerical solution
approaches to the exact solution, and there is not unphysical
oscillation nearby the shock wave, the rarefaction fan is
correctly described. An undershoot appears at the density
discontinuity about the contact discontinuity, it is an
indigenous property to Lagrangian method.
B.
Sedov problem
A highly intense shock wave generated by a strong
explosion propagates outward. The perfect gas with adiabatic
index
γ = 5 / 3
is initially at rest for ( , , )
(1,0,0)
ρ u p
=
but
an energy spike is set as 182.09 at the center, and all the
boundary conditions are solid walls. The 30 30
×
uniform
Cartesian meshes in computational domain [0,1.1] [0,1.1]
×
are used with CFL=0.8. Figure 3(a-b) shows the calculated
meshes and density contours by the second-order scheme at
time t=1, and Figure 4(a-b) shows the density profile by the
first-order and the second-order scheme at time t=1. It is
found that the second-order scheme has an improved
precision on the first-order scheme, and the second-order
scheme still has excellent resolution and symmetry.
x
density
0
0.2
0.4
0.6
0.8
1
0.2
0.4
0.6
0.8
1
Exact
NX=100
NX=200
NX=400
Figure 2.
Comparison of numerical solution for Sod’s shock tube with
exact solution for second-order scheme
x
y
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
(a) Meshes variation
x
y
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
15
6
14
5.6
13
5.2
12
4.8
11
4.4
10
4
9
3.6
8
3.2
7
2.8
6
2.4
5
2
4
1.6
3
1.2
2
0.8
1
0.4
(b) Density contours
Figure 3.
Solution of 2nd order scheme for Sedov problem at time t=1
C.
Saltzman problem
A planar shock wave located initially at
x = 0
moves
rightward on the perfect gas with
γ = 5 / 3
, and the front
state of shock wave is ( , , )
(1,0,0)
ρ u p
=
. When the piston
velocity at the left-hand is set as
u =1
, the exact propagation
velocity of shock wave should be 4 / 3 . A computational
domain [0,1.0]×[0,0.1] on Cartesian coordinates with grid
17
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

x
density
0.4
0.6
0.8
1
1.2
1.4
0
1
2
3
4
5
6
1st order
Exact
(a) Density profile by the first order scheme
x
density
0.4
0.6
0.8
1
1.2
1.4
0
1
2
3
4
5
6
2ed order
Exact
(b) Density profile by the second order scheme
Figure 4.
Density solution for Sedov problem at time t=1
number 100 × 10 is taken, and a uniform meshes in y
direction and a nonuniform meshes with the mapping
x
i x
= ∆ + (0.1
)sin(
)
j y
i xπ
− ∆
∆
in x direction are used,
meanwhile, the boundary condition at the left-hand is an
invariable velocity and all the other boundaries are set as
solid wall. Obviously, the shock wave will reflect on the
right-hand wall at time t=0.75. The meshes and density
contours at time t=0.84 are shown in Figure 5 about the
reflected shock wave. It can be found that the one-
dimensional property of the reflected shock wave can be well
preserved. The robustness of this scheme is also powerfully
demonstrated by the test case.
VI.
CONCLUSION AND FUTURE WORK
A cell-centered Lagrangian method for 2D compressible
flows is present on basis of the local evolution Galerkin
scheme under semi-discrete finite volume framework where
the vertex velocity is computed in a coherent manner with
the numerical fluxes across the cell interface. The main
feature of this method is the physical variables at vertex of a
cell are computed by virtue of the bicharacteristics theory
about the linearized flow equations, which is essentially a
multidimensional Riemann solver taking “multidimensional
effect” into account in a natural way. Our future most
important works will be on the extension to arbitrary
Lagrangian-Eulerian method.
(a) Meshes
(b) Density contours
Figure 5.
Computational results about Salzman problem at t=0.84
ACKNOWLEDGMENT
This work was supported under Grant-11272064 of
Natural Science Foundation of China.
REFERENCES
[1]
M. Wilkins, “Calculation of Elastic-Plastic Flow, in Methods
in Computational Physics”, vol.3, Academic Press, New
York, 1964, pp. 211-263.
[2]
R. Ritchtmyer and K. Morton, Difference Methods for Initial-
Value Problems, John Wiley, New York, 1967.
[3]
J.
Dukowicz
and
B.
Meltz,
“Vorticity
Errors
in
Multidimensional
Lagrangian
Codes”,
Journal
of
Computational Physics, 99, 1992, pp. 115–134.
[4]
C. Juan and S. Chi-Wang, “A High Order ENO Conservative
Lagrangian
Type
Scheme
for
the
Compressible
Euler
Equations”, Journal of Computational Physics, 227, 2007, pp.
1567-1596.
[5]
B. Després and C. Mazeran, “Lagrangian Gas Dynamics in
Two Dimensions and Lagrangian Systems”, Arch. Rational
Mech. Anal., 178, 2005, pp. 327–372.
[6]
P.
Maire,
R.
Abgrall
and
J.
Breil,
“A Cell-Centered
Lagrangian Scheme for Two-Dimensioanl Compressible Flow
Problems”, SIAM Journal of Scientific Computing, 29(4),
2007, pp. 1781-1824.
[7]
M. Lukáčová-Medvid’ová, K. Morton and G. Warnecke, 
“Evolution Galerkin Methods for Hyperbolic Systems in Two
Space Dimensions”, Mathematics of Computation, 69(232),
2000, pp. 1355-1384.
[8]
M. Lukáčová-Medvid’ová, J. Saibertová and G. Warnecke, 
“Finite Volume Evolution Galerkin Methods for Nonlinear
Hyperbolic Systems”, Journal of Computational Physics, 183,
2002, pp. 533–562.
[9]
Y. Sun and Y.-X. Ren, “The Finite Volume Local Evolution
Galerkin Method for Solving the Hyperbolic Conservation
Laws”, Journal of Computational Physics, 228, 2009, pp.
4945-4960.
18
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-419-0
ADVCOMP 2015 : The Ninth International Conference on Advanced Engineering Computing and Applications in Sciences

