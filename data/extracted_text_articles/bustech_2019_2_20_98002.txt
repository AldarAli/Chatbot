A Goal-oriented Method for Requirements
Prioritization
Mohamed Chadli Barbouch, Abderrahmane Leshob, Pierre Hadaya and Laurent Renard
Department of Management and Technology
University of Quebec at Montreal
Montreal (Quebec), Canada
email:{barbouch.mohamed-chadli, leshob.abderrahmane, hadaya.pierre, renard.laurent}@uqam.ca
Abstract—In today’s global economy where organizations must
constantly transform themselves, prioritization of information
systems (IS) requirements is crucial. Different techniques have
been proposed to automate the IS requirements prioritization
process. Still, existing techniques suffer from a number of
limitations and their implementation are mostly informal. This
work aims to design a novel method for IS requirements
prioritization. Our method is based on the Goal-oriented Re-
quirement Language (GRL), which links requirements to the
business objectives/goals of the organizations. Our method allows
stakeholders, such as business analysts to model requirements
and objectives using GRL and then evaluate the impact of
requirements choices on organizations’ objectives. In this paper,
we present the principles underlying our method for automating
the prioritization of IS requirements and discuss issues for future
research.
Keywords—Requirements Prioritization; Requirements Engi-
neering; Goal-oriented Requirement Language.
I. INTRODUCTION
The success of transformation projects is conditional to
the proper management of the requirements of Information
Systems (IS) [1]. Indeed, with organizations often facing time,
resource and budget constraints, IS projects are more often
than not delivered late and over budget since they have to
implement a large number of requirements [1]. Furthermore,
since enterprise resources are limited, it is becoming increas-
ingly difﬁcult to implement all the elicited requirements [2]
[3]. Thus, to help stakeholders improve IS projects perfor-
mance, organizations must select the most critical require-
ments to implement [1]. Requirements prioritization helps to
overcome this challenge by classifying requirements according
to their relative importance [1][3][4]. According to Mulla and
Girase [1], requirements prioritization optimizes Information
Technology (IT) investments by targeting the most important
functionalities. In addition, conﬂict situations are often raised
during the elicitation process because of stakeholders diverse
interests, needs and priorities. Stakeholders go through nego-
tiations in order to select the most important business needs
to be addressed, which implies that requirements need to be
prioritized [5]. According to [4], requirements prioritization
gives the right tools to decision makers to solve conﬂicts, take
strategic decisions in order to control IT project costs, deliver
value and optimize the return on invested resources.
The importance of requirements prioritization has motivated
research initiatives and many approaches were proposed in-
cluding [3][4][6][7]. This research main objective is to propose
a uniﬁed IS requirements prioritization method. A prioritiza-
tion approach is uniﬁed when it meets quality attributes, such
as usability, transparency, efﬁciency, adaptability, ﬂexibility
and genericity. Our approach is based on a goal-oriented
method that allows to model and evaluate the impact of
requirements choices on the organization objectives. The pro-
posed method is generic since it can be used by organizations
regardless of their activity sector, their speciﬁc structure or the
nature of their IS projects.
A. The Methodological Approach
We used the Design Science Approach (DSA) to conduct
our research project. Hevner and Chatterjee [8] presented
design science as a research approach that aims to answer
questions related to relevant issues through the creation of
innovative artifacts. The design science methodology is ar-
ticulated around ﬁve main activities, namely: Problem iden-
tiﬁcation and motivation, Deﬁnition of the artifact objectives,
Design and development of the artifact, Demonstration, and
Evaluation of the artifact [9].
B. Theoretical and Practical Contributions
This research aims to provide both a theoretical and a prac-
tical contribution. From a theoretical perspective, the research
will proposes a uniﬁed method for prioritizing requirements
based on the use of the Goal-oriented Requirement Language
(GRL), which is part of the URN (User Requirements No-
tation) standard [10]. GRL enables the explicit modeling of
objectives, requirements, alternatives and their relationships.
This is why we chose to use GRL to design and develop a
uniﬁed method for requirements prioritization. We mean by
uniﬁed method that it can be applied in different types of IS
projects and by different types of organizations, regardless of
their size, activity sector, or the technical skill level of the
project stakeholders. Hence, the uniﬁed method we propose
can be adapted to the particular context of any organization
without any dependency on situational elements.
The uniﬁed method addresses the limits of previously
proposed approaches. In [4], Wohlin compared ﬁve prioriti-
zation techniques on the basis of their measurement scales,
the granularity of the analysis they provide, and their level
of sophistication. The granularity of the analysis represents
15
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

the level of accuracy of the prioritization results that are
presented in the measurement scale. The level of sophistication
represents the level of complexity of the assessment on priority
of components. The results of this comparison are shown in
Table I. According to the author, a value scale is strong when
it allows the results to be measured and presented with high
accuracy. In other words, the higher the value scale, the more
reﬁned is the granularity of the analysis and therefore the
more sophisticated the technique (see Table I). As a result,
the uniﬁed method tends to ﬁnd a balance between granularity
and sophistication.
TABLE I: SUMMARY OF THE PRIORITIZATION
TECHNIQUES [4].
Technique
Scale
Granularity
Sophistication
AHP
Ratio
Fine
Very Complex
Hundred-dollar test
Ratio
Fine
Complex
Ranking
Ordinal
Medium
Easy
Numerical Assignment
Ordinal
Coarse
Very Easy
Top-ten
-
Extremely Coarse
Extremely Easy
From a practical perspective, the proposed method helps
IS practitioners to improve the quality of their requirements
prioritization activity. Today, practitioners use different ap-
proaches to prioritize requirements that produce inconsistent
results. They cannot simply choose the most sophisticated
prioritization techniques since, according to Wohlin [4], the
more sophisticated the technique, the more difﬁcult and time
consuming is its usage. For Wohlin [4], the solution is to make
a compromise between the level of precision in the analysis
of the prioritization and the time needed to perform the
prioritization. The proposed method offers a good compromise
between accuracy and ease of use. Therefore, we believe that
by addressing the limits of other methods, we will increase
the adoption of the proposed method by IT practitioners.
II. LITERATURE REVIEW
Several scientiﬁc papers have proposed approaches to help
prioritize IS requirements. The Must, Should, Could and
Would (MoSCoW) prioritization technique classiﬁes require-
ments into four broad categories that designate the overall
level of priority of requirements [6]. Some researchers, such
as Achimugu et al. [2] and Hatton [11] have criticized the
MoSCoW technique for its inability to identify the relative
importance of one requirement over another. This is an im-
portant limit, since the identiﬁcation of the relative importance
provides access to a more detailed level of information on the
requirements, which will make it possible to better prioritize
and consequently deliver the best system value to the customer
[11]. As a result, MoSCoW does not effectively prioritize
requirements.
The prioritization process proposed by Kaymaz [7] prior-
itizes business and IT change requests based on three types
of priorities: general, business and IT priorities. In order to
establish the business priority, Kaymaz’s [7] process uses the
FMEA (Failure Mode and Effect Analysis) quantitative tool
of the Six Sigma methodology. According to Ashley and
Armitage [12], Franklin et al. [13], and Shebl et al. [14], the
results originating from the FMEA tool show a large variance,
indicating a lack of reliability and efﬁciency.
Rahmouni et al. [3] proposed a method that prioritizes IS
requirements by grouping them according to their similari-
ties, commonalities, synergies, and their technical dependency
relationships. According to these authors, their method has
limitations because it does not take into account the business
objectives.
Despite the number of works proposed to prioritize IS
requirements, existing approaches have several shortcomings
e.g., the MoSCoW technique [6] is not effective, FMEA-
based approaches [7], the method proposed by Rahmouni
et al. [3], and those presented in Table I lack of usability,
reliability and efﬁciency. In addition, to date and to the best
of our knowledge, there is no uniﬁed method that priori-
tizes requirements based on their contribution on business
objectives. The contribution of this work is twofold: 1) from
a structural perspective, it proposes a novel method for IS
requirements prioritization that takes into account business
objectives as well as technical and business dependencies; 2)
from a usability point of view, this research aims to address
the limits of the approaches presented in Table I by proposing
a method that is generic, adaptable and easy to use.
III. A PRIORITIZATION APPROACH BY MODELING
OBJECTIVES
To design our method, we had to look for an easy and
practical tool, which enables us to both link requirements with
business objectives and evaluate the impact of the choice of
requirements on objectives. We found that GRL [10] would
support the achievement of these research objectives. GRL
is standard for goal-oriented modeling. It is part of the URN
(User Requirements Notation) standard, a Recommendation of
the International Telecommunications Union [15]. GRL makes
it possible to model explicitly the objectives, the requirements,
the alternatives and their relations. GRL can also model and
evaluate the impact of requirements on objectives, allowing
stakeholders to observe and understand why some require-
ments should be prioritized. The explicit modeling makes GRL
a tool that supports the evaluation and the analysis of the best
compromises between different objectives of stakeholders in
a manner to avoid conﬂict situations. As a result, GRL can
help IT managers’ decision-making by empowering them to
identify the best alternative.
The basic elements of the GRL language are shown in
Figure 1. Section (a) of the ﬁgure presents the intentional
elements of GRL, such as the goals, soft-goals, tasks, and
resources. A goal is quantiﬁable while a soft goal refers
to qualitative aspects that cannot be measured directly (e.g.,
customer satisfaction) [10]. Soft-goals are usually related to
Non-Functional Requirements (NFR), while goals are related
to Functional Requirements (FR). Tasks are solutions to goals
or soft-goals [10]. The section (b) presents the GRL links, such
as the decomposition, contribution, correlation or dependency
links [10]. These links are used to connect elements (e.g.,
NFR, FR, Solutions, etc., ) in the requirement model. An
intentional element can be decomposed into sub-elements
16
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

Figure 1: Basic GRL elements [10].
using decomposition links. The correlation links show side
effects between the intentional elements. The relationships
between the actors are illustrated using dependency links. The
section (c) of the ﬁgure presents the contribution types used
to model qualitative or quantitative impacts of an element on
another. These impacts are propagated through the contribution
links presented in section (d). In the next sections, we present
our method as proposed by Peffers et al. [16] for design
science works.
IV. THE PROBLEM
The starting point for initiating research activities in design
science is a speciﬁc ﬁeld problem that emerges from an
external environment. In the context of our research, based on
our literature review, we noted the importance of prioritizing
requirements in organizations. However, despite the many
advantages of prioritizing requirements, there are no uniﬁed
methods for prioritizing requirements. Therefore, we formu-
lated our research problem based on this ﬁnding. Although
several requirements prioritization approaches exist, they have
not been standardized in a manner that the IT community can
use them (see Section II).
V. THE ARTIFACT: THE PRIORITIZATION METHOD
The second step consists of deﬁning the artifact whose
purpose is to solve the problem. The artifact that was designed
and evaluated in our research project is a method. In order to
make our method uniﬁed, we made sure that it meets quality
criteria, such as usability, transparency, efﬁciency, adaptability
and genericity. By usability, we mean that the method is easy
to use by a stakeholder who does not have the technical
skills to design or develop IS solutions. The method is also
transparent, so that all stakeholders can see and understand
the selection of the requirements to be prioritized and imple-
mented. In addition, the method is effective in a sense that it
achieves its original purpose, which is the prioritization of the
requirements in a simple and fast manner, while producing a
result deemed acceptable for an experienced business analyst.
The proposed method is also generic as it can be applied to
prioritize IS solutions from different business domains. Finally,
the method is adaptable, meaning that its use can be adapted
to ﬁt speciﬁc organizations needs.
VI. DESIGN AND DEVELOPMENT OF THE PRIORITIZATION
METHOD
The design of the method was based on the following
four main functions: grouping, explicit modeling, evaluation
and prioritization (see Figure 2). The grouping function is
used to group requirements that share different categories
of relationships. This function consists of identifying and
grouping requirements that share relationships of similarity,
commonality, synergy, technical and business dependency
[3]. The grouping function is important since it optimizes
the requirements prioritization process while facilitating and
reducing inefﬁciencies [3].
The explicit modeling function allows a clear and accurate
representation of the requirements, objectives and relationships
that exist between them. In this fashion, all the stakehold-
ers involved will be able to better see and understand, in
a transparent way, the requirements to be prioritized. The
modeling function allows reaching a common understanding.
On the one hand, explicit modeling will be easy to use so
that a stakeholder without technical skills can work with it,
thus meeting the usability requirement. On the other hand,
using explicit modeling enables the method to clearly evaluate
the choice of requirements through their interrelationships and
their impacts on the organizations objectives. This requirement
evaluation function, combined with the modeling function,
allows to assess the impact of the requirements choice on the
objectives.
We have integrated and adapted the GRL language to build
our method. GRL provides the means to perform all the
functions and to achieve the quality attributes that make our
artifact a uniﬁed method for requirements prioritization. By
incorporating the GRL language into our method, it is possible
to explicitly model requirements, business objectives and their
interrelated links. By being able to show impacts of the
requirements on the objectives through GRL, it is now possible
for stakeholders to have both qualitative and quantitative
evaluations of their requirements choice. The last function
prioritizes the requirements. It is based on the results of the
evaluation function. More precisely, this function consists of
comparing the results of the GRL evaluation performed in the
previous step in order to prioritize the requirements.
VII. EXAMPLE : LIBRARY LOAN MANAGEMENT CASE
We applied our approach to prioritize the requirements of a
library loan management IS. To illustrate our approach, we
limit the prioritization to two groups of requirements: the
automated invoice emailing and the automated invoice printing
for postal mailing. The product owner wants to establish an
order of priority to address these functional requirements.
The process starts with the requirement grouping function
to identify the GRL elements that share the relationships of
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

Figure 2: The functions of the proposed method.
Figure 3: GRL model of the library loan management system.
similarities, commonalities, synergies, technical dependencies
and business dependencies.
A ﬁrst Technical Dependency Relationship (TDR 1) exists
between the two functional requirements: the automated in-
voicing and the automated emailing of the invoice. Indeed,
emailing the invoice requires that the invoice be generated.
Similarly, a second Technical Dependency (TDR 2) exists be-
tween the automated invoicing and automated invoice printing
for mailing requirements. In fact, printing and sending the
invoice requires that the invoice be generated ﬁrst.
Once we have identiﬁed the requirements and related ele-
ments, we must establish an order of priority of the require-
ments having technical dependency relationships. This is the
second activity of the requirements grouping function. This
order can be expressed as a Technical Dependency Sequence
(TDS) between requirements.
Due to TDR 1, there is a ﬁrst Technical Dependency Se-
quence (TDS 1) between the automated invoicing requirement
and the automated emailing of the invoice requirement because
emailing the invoice requires the invoice to be generated ﬁrst.
Due to TDR 2, there is a second dependency TDS 2 between
the automated invoicing and the automated invoice printing for
mailing requirements because printing and sending the invoice
also require the invoice be generated.
Before starting the prioritization process, and to avoid
inefﬁciency, we must consider all existing technical depen-
dencies between requirements and establish the relations or
sequences between them. The requirements that share these
technical dependencies are interdependent. Inspired by the
work of Rahmouni et al. [3], we grouped interdependent
requirements both when they share technical dependencies,
and when they share relationships of similarity, synergy, com-
monality, and business dependency. Using relationships that
exist between requirements optimizes the prioritization and
reduces inefﬁciencies [3]. In addition, a product owner (e.g.,
business analyst) can more easily prioritize inter-related and
interdependent requirements per group than if he prioritizes
each requirement individually.
There is no relationship between the automated invoice
emailing and the automated printing for postal mailing func-
tional requirements. Therefore, these two requirements are
independent. Consequently, we can place them in two distinct
groups.
After grouping the requirements, we need to create the GRL
model that links the requirements, tasks/solutions and business
objectives. The resulting GRL model is presented in Figure 3.
Once the GRL elements and links were represented, the
evaluation criteria must be deﬁned. In our case, the require-
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

ments were evaluated on the basis of their contribution to the
business objectives, such as reduction of costs and payment
delays. Quantitative contributions of functional requirements
to business objectives are values within the range of -100 to
+100. The main business goal is cost reduction; we gave it a
value of 100. As for the goal of reducing payment delays, we
gave it a value of 75. Note that the GRL modeler (e.g., business
analyst) can use other values that best reﬂect the practices or
needs of their organizations.
We then assessed the impact of the requirements on business
objectives by analyzing the requirements to determine their
types of quantitative contribution on the objectives. Each
type of qualitative contribution generally leads to a marginal
quantitative value of 25 or –25, depending on the level of
positive or negative impact of the functional requirement on
the business objective (see Table II).
TABLE II: QUANTITATIVE CONTRIBUTION VALUES
FOR QUALITATIVE CONTRIBUTIONS [10].
Qualitative contribution
Quantitative contribution
Make
100
Some Positive
75
Help
25
Unknown
0
Hurt
-25
Some Negative
-75
Break
-100
After analysis, it was established that the automated in-
voice emailing did not generate any costs. Therefore, this
requirement makes a positive contribution to the cost reduction
objective, which represents a quantitative value of 100 (see
Table II). Also notice that sending and receiving the invoice
by email is instantaneous, therefore it helps to reach the goal
of reducing payment delays, which represents a value of 25
as the subscribers are more likely to pay invoices upon faster
reception. We then modeled the ﬁrst set of requirements with
TDR 1, TDS 1 and their quantitative contributions to the
objectives. The resulting model is shown in Figure 4.
In Figure 4, the TDR 1 relationship is represented by the
brown double arrow, and the TDS 1 sequence is indicated by
the brown arrow that starts from the automated invoicing and
ends at the automated emailing of the invoice requirement.
The idea that sending and receiving the invoice by email are
done faster is shown by the belief link in Figure 4. Since the
cost reduction objective has a value of 100, we multiplied
the value of the contribution by the value of the business
objective and divided the total by 100, because the contribution
of the functional requirement is between -100 and 100. The
calculation is as follows: (100 x 100) / 100 = 100.
Similarly, we multiplied the value of the second contribution
by the value of the reduction of payment delays objective and
we divided it by 100, that is: (25 x 75) / 100 = 18.75.
The functional requirement of automated printing for mail-
ing brings recurrent costs since printing generates costs as-
sociated to paper and ink use. In addition, there are other
recurring costs related to postal mailing, such as envelopes
and stamps. As a result, this requirement is harmful (Hurts) to
the cost reduction business objective, which represents a value
Figure 4: Group 1 of the library system requirements.
Figure 5: Group 2 of the library system requirements.
of -25. Furthermore, the invoice reception by mail requires a
certain number of working days, which extends the payment
period. As a result, this requirement is detrimental to the goal
of reducing payment delays, which represents a value of -25.
The modeling of this group of requirements is presented in
Figure 5.
With respect to the evaluation score of this requirement
on the cost reduction business objective, the calculation is as
follows: (-25 x 100) / 100 = -25.
With regards to the evaluation score of the requirement on
the payment delays reduction business objective, the calcula-
tion is as follows: (-25 x 75) / 100 = -18.75.
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

After the requirements assessment, the prioritization func-
tion is performed. To do so, the method computes the total
evaluation score of each requirement group of all business
objectives. The higher the score of the evaluation, the higher
the priority of the group. Table III shows that the total score of
the evaluation for group 1 (118.75) is higher than the one for
group 2 (-43.75). The implementation of Group 1 is therefore
prioritized because its contributions to the business objectives
are greater than those of Group 2.
TABLE III: PRIORITIZATION OF REQUIREMENT
GROUPS.
Group
Business Objective
Total
Priority
Cost
Payment delays
reduction
reduction
Group 1
100
18.75
118.75
1
Group 2
-25
-18.75
-43.75
2
VIII. PRELIMINARY VALIDATION
We conducted a preliminary evaluation of the proposed
prioritization method through the library loan management
system presented in Section VII. We presented the results of
our approach to a group of twelve graduate students from
an internationally renowned management school known for
its in-depth business analysis skills. All students had a good
knowledge of the GRL language. We asked them to evaluate
the approach through a questionnaire on the effectiveness and
usability of the method. The other quality attributes of the
method presented in Section V were not evaluated in this
preliminary experiment.
As shown in Figure 6, 10 of the 12 students (83.33%)
found that the method is effective and usable in the context of
the library loan management system. Two students (16.67%)
found that the GRL notation and the evaluation process are
complex and made the method less useful for stakeholders
such as business analysts.
Figure 6: Evaluation of the effectiveness and usability of the
method.
IX. CONCLUSION AND FUTURE WORKS
This research demonstrates that it is possible to prioritize IS
requirements with a business objectives driven approach. We
used the GRL language to link IS requirements to business ob-
jectives. We conducted a preliminary evaluation of our method
with a dozen graduate students to validate the soundness of
the conceptual ingredients that underlie our approach in the
context of a library loan management system.
Although this work is still at an early stage, this paper estab-
lishes guidelines to advance our long-term research project. In
future research, we plan to: i) conduct experiments to validate
the proposed method in a larger experimental data set, ii)
support other types of dependencies between requirements in
addition to technical dependencies, and iii) design and develop
a comprehensive framework for automating the prioritization
of IS requirements.
ACKNOWLEDGMENTS
This research was supported by the Natural Sciences and
Engineering Research Council of Canada (NSERC).
REFERENCES
[1] N. Mulla and S. Girase, “Comparison of Various Elicitation Techniques
and Requirement Prioritisation Techniques,” in International Journal
of Engineering Research and Technology, vol. 1, ESRSA Publications,
2012.
[2] P. Achimugu, A. Selamat, R. Ibrahim, and M. N. Mahrin, “A system-
atic literature review of software requirements prioritization research,”
Information and Software Technology, vol. 56, no. 6, pp. 568–585, 2014.
[3] M. Rahmouni, C. Bartolini, and A. Boulmakoul, “A rule-based approach
to prioritization of IT work requests maximizing net beneﬁt to the
business,” in Advances in Rule Interchange and Applications, pp. 53–62,
Springer, 2007.
[4] C. Wohlin, Engineering and managing software requirements. Springer
Science & Business Media, 2005.
[5] N. Martínez Carod and A. Cechich, “Classifying software requirement
prioritization approaches,” in XI Congreso Argentino de Ciencias de la
Computación, pp. 942–953, 2005.
[6] D. Consortium, “The DSDM Agile Project Framework Handbook,”
2014.
[7] F. Kaymaz, “Prioritisation and selection of the right business and IT
requirements in the software engineering process,” in Vorgehensmodelle,
pp. 87–98, 2013.
[8] A. Hevner and S. Chatterjee, “Design Science Research in Information
Systems,” pp. 9–22, 2010.
[9] P. Johannesson and E. Perjons, An introduction to design science. 2014.
[10] D. Amyot, S. Ghanavati, J. Horkoff, G. Mussbacher, L. Peyton, and
E. Yu, “Evaluating goal models within the goal-oriented requirement
language,” International Journal of Intelligent Systems, vol. 25, no. 8,
pp. 841–877, 2010.
[11] S. Hatton, “Choosing the right prioritisation method,” in 19th Australian
Conference on Software Engineering (aswec 2008), pp. 517–526, IEEE,
2008.
[12] L. Ashley and G. Armitage, “Failure mode and effects analysis: an
empirical comparison of failure mode scoring procedures,” Journal of
patient safety, vol. 6, no. 4, pp. 210–215, 2010.
[13] B. D. Franklin, N. A. Shebl, and N. Barber, “Failure mode and effects
analysis: too little for too much?,” BMJ quality & safety, vol. 21, no. 7,
pp. 607–611, 2012.
[14] N. A. Shebl, B. D. Franklin, and N. Barber, “Is failure mode and effect
analysis reliable?,” Journal of patient safety, vol. 5, no. 2, pp. 86–94,
2009.
[15] Z. ITU-T, “151 user requirements notation (urn)–language deﬁnition,”
ITU-T, Nov, 2008.
[16] K. Peffers, T. Tuunanen, M. A. Rothenberger, and S. Chatterjee, “A
design science research methodology for information systems research,”
Journal of Management Information Systems, vol. 24, no. 3, pp. 45–77,
2007.
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-710-8
BUSTECH 2019 : The Ninth International Conference on Business Intelligence and Technology

