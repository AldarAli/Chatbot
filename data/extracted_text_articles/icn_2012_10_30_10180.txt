Minimization of Branching in the Optical Trees
with Constraints on the Degree of Nodes
Massinissa Merabet
LIRMM
University Montpellier 2
Montpellier, France
massinissa.merabet@lirmm.fr
Sylvain Durand
LIRMM
University Montpellier 3
Montpellier, France
sylvain.durand@lirmm.fr
Miklos Molnar
LIRMM
University Montpellier 2
Montpellier, France
miklos.molnar@lirmm.fr
Abstract—Multicast routing applied to optical networks provide
several research problems on spanning tree. In optical networks,
the ability of dividing the light signal is limited. Two recently
problems try to take into account this constraint: looking for
spanning trees with minimum number of branching vertices
(vertices of degree strictly greater than 2) and looking for
spanning trees such that the sum of branch vertices degrees is
minimal. There are two kinds of optical nodes: nodes equipped
with splitters, able to divide the input light signal, and nodes
without splitters, unable to split the signal. The two problems
mentioned above do not distinguish between the type of nodes. In
this study, we discuss the relationship between the two problems,
we thus prove that the two previous problems are not necessarily
linked. We also propose two variants of them, taking into account
this additional constraint in the construction of the spanning tree,
and we ﬁnd an experimental upper bound on the number of nodes
to equip with splitters in an optical network.
Keywords—optical network; multicast routing; spars splitters;
degree bounded spanning tree.
I. INTRODUCTION
Wavelength-Division Multiplexing (WDM) is an effective
technique to exploit the large bandwidth of optical ﬁber to
meet the explosive growth of bandwidth demand in the Internet
[1].
Multicast consists in simultaneously transmit information
from one source to multiple destinations [1] in a bandwidth
efﬁcient way (it duplicates the information only when neces-
sary). From the computational point of view, multicast routing
protocols are mainly based on spanning tree structure. When
the cost of communications has to be minimized, ﬁnding such
a tree is NP-complete [2] and is known as the Steiner problem.
However, the classical Steiner problem does not take into
account the physical constraints of the network needed to
perform successfully the multicast routing. Indeed, in order
to divide the light signal, some nodes must be equipped with
optical splitters. In the optical networks, a node which has the
ability to replicating any input signal on any wavelength to any
subset of output ﬁbers is referred to as a Multicast-Capable
(MC) node [3]. On the other hand, a node which has the ability
to tap into the signal and forward it to only one output is
called a Multicast-Incapable (MI) node [3]. Optical networks
will have a limited number of MC nodes, and these nodes
should be positioned such as the multicast routing is feasible.
In addition to that, the light power in optical networks should
be controlled because of the power loss. Indeed if a light signal
is splitted into m copies, the signal power of one copy will
be reduced with a factor of 1/m of the original signal power
[4]. For this reason, it is useful to ﬁnd a spanning tree such
that the number of branching nodes (nodes of degree strictly
greater than 2) is limited [5]. To better take into account this
constraints it is necessary to ﬁnd a spanning tree such that
the sum of the degrees of nodes dividing the light signal is
limited.
Although the two previous problems aim at satisfying reel
constraints, they do not take into consideration the ability
of an optical node to divide the light signal. They consider
that all nodes can be branching nodes in the spanning tree.
furthermore, in the examples given in the literature, often the
same optimal spanning tree is used for both the ﬁrst and the
second problem. In this study, we introduce two variants of
the previous problems that take into consideration the type of
an optical node (MC or MI), so that all nodes connecting the
spanning tree are effectively able to divide the light signal, and
we prove that the two previous problems are not necessarily
linked.
The rest of the paper is organized as follows. Section II con-
tains basic deﬁnitions and formal statements of the problems
considered in this paper. Section III proves that the problems
MBV and MDC are not necessary linked. Section IV provides
the ILP formulations of MBV-DC and MDS-DC. In Section
IV, we analyse the experimental results about MBV-DC and
MDS-DC on a set of scenarios. In that Section, we also found
an experimental upper bound on the number of nodes to equip
with splitters in an optical network. Conclusions are object of
Section VI.
II. DEFINITIONS AND FORMULATIONS
Let the topology of an optical network be modelized by a
connected graph G = (V, E), where V is set of the vertices
(corresponding to optical nodes) and E the set of edges
(corresponding to optical links). For each vertex v ∈ V we
denote by dG(v) the degree of v in G. We denote by CC(G)
the number of connected components of the graph G. We
denote by MC(G) the set of multicast-capable vertices in the
235
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

graph G and MI(G) the set of multicast-incapable vertices.
Let T = (VT , ET ) be a spanning tree of G. A vertex v ∈ VT
is a branch vertex in T iff dT (v) > 2. Let NB(T) be the set
of branching vertices of the tree T. We denote by s(T) the
size of NB(T) and by q(T) sum of the of branching nodes
degrees of the tree T (q(T) =
P
v∈NB(T )
dT (v)).
We denote by s∗(G) the smallest number of branching
nodes of all spanning trees of G and q∗(G) the smallest sum
of branching nodes degrees of all spanning trees of G.
The two problems initially proposed in [5] have been
deﬁned as follows:
Problem II.1. The problem MBV (Minimum Branch Vertices
spanning tree) consists in ﬁnding a spanning tree of G which
has the minimum number of branch vertices.
Problem II.2. The problem MDS (Minimum Degrees Sum
branch vertices spanning tree) consists in ﬁnding a spanning
tree of G which has the minimum sum of branching nodes
degrees.
We propose the modiﬁcation of MDS and MBV, such that
they take into account the additional constraint of ability of an
optical node to divide the light signal. These two new problems
allow a network node to be a branch node in the corresponding
spanning tree if and only if this node is multicast-capable.
Problem II.3. The problem MBV-DC (minimum branch ver-
tices spanning tree with degree contraints) consists in ﬁnding
a spanning tree T of G which has the minimum number of
branch vertices such that NB(T) ⊆ MC(G).
Problem II.4. The problem MDS-DC (minimum degrees sum
of branch vertices spanning tree with degree contraints) con-
sists in ﬁnding a spanning tree T of G which has the minimum
sum of branch vertices degrees, such that NB(T) ⊆ MC(G).
splitter
splitter
c
a
b
(a) Starting network
(b)
Optimal span-
ning
tree
for
the
MBV
(c)
Optimal
span-
ning
tree
for
the
MBV-DC
Figure 1. Example of the difference between the MBV and MBV-DC
Suppose that the network shown in Figure 1(a) contains
two multicast-capable nodes : MC(G) = {b, c}. The optimal
solution (Figure 1(b)) for the problem MBV does not take into
account this constraint and selects the node a as a branching
node. This tree is not feasible in the optical network. On
contrary the optimal solution (Figure 1(c)) for the problem
MBV-DC is greater (two branching nodes) but feasible.
III. RELATION BETWEEN MBV AND MDS
In all examples shown in the literature, there is an optimal
spanning tree for both the MBV and the MDS. However,
the MBV and the MDS are two different problems. In this
section, we present an example where the set of optimal
spanning trees for MBV and the set of optimal spanning trees
for MDS are disjoint.
Remember that s(T) denotes the number of branching
vertices of the tree T and q(T) the sum of branching nodes
degrees of T. We denote by s∗(G) the smallest number
of branching nodes of all spanning trees of G and q∗(G)
the smallest sum of the degrees of branching nodes of all
spanning trees of G.
Proposition III.1. The MDS problem and MBV are not linked:
There exists a graph G such that:
For all spanning tree T of G:
1) If T is optimal for the MBV problem, it is not optimal
for the MDS.
That is: if s(T) = s∗(G) then q(T) ̸= q∗(G),
2) If T is optimal for the MDS problem, it is not optimal
for the MBV.
That is: if q(T) = q∗(G) then s(T) ̸= s∗(G).
Proof:
Figure 2 presents a graph G = (V, E) which
respects conditions of Proposition III.1:
R1
R2
R3
Figure 2. Instance proving the proposition III.1
If G in Figure 2 is Hamiltonian, then any optimal solution
for one problem will also be an optimal one for the other one
since s∗(G) = q∗(G) = 0. Thus, we must ﬁrst prove that
G does not contain Hamiltonian path. We use the following
result of [6]:
Proposition III.2. [6] Let G(V, E) be a graph, if G
has a Hamiltonian path, then for all S ⊆ V , the graph
(G − S) has at most | S + 1 | connected components.
Using the contrapositive of proposition III.2 on G with
S = {R1, R2, R3}, we conclude that G is not Hamiltonian.
Thus we have s∗(G) ≥ 1. The tree T1 in Figure 3 is
a spanning tree of the graph G and s(T1) = 1. Therefore
s∗(G) = 1.
236
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

R1
R2
R3
Figure 3. Spanning tree T1 of G
Let G′ be the sub graph of G induced by V −{R1, R2, R3}.
G′ is composed of 8 connected components. We conclude
that for all spanning tree T of G, T contains at least R1 or
R2 or R3 as a branching node. Note that for all spanning
tree T of G such that s(T) = s∗(G) = 1, R1 is the only
possible branching node.
We now prove that q∗(G) = 8: G is not Hamiltonian so
q∗(G) ≥ 3. In the spanning tree T2 of Figure 4 we have
q(T2) = 8, therefore 8 ≥ q∗(G) ≥ 3.
Suppose that q∗(G)
<
6. Let T be a spanning tree
such that q(T) < 6. T has a single branching node. But,
if dT (R1) < 6 then CC(T) ≥ 2. So T has at least two
branching nodes, which is in contradiction with the hypothesis
q∗(G) < 6. Therefore, 8 ≥ q∗(G) ≥ 6.
Let T be a spanning tree of G such that 8 ≥ q(T) ≥ 6,
q(T) = q∗(G), T contains 2 branching nodes, and at least
R1 or R2 or R3 are branching nodes in T.
If R1 is a branching node in T, then there must be
at least two other branching nodes so that T is connected. So
R1 is not a branching node in T (otherwise q(T) ≥ 9).
Since dG(R2)
=
4, R2 is a branching node in T,
then only R3 has a large enough degree in G so that T is
connected (R1 is already eliminated). Thus R2 and R3 are
the only branching nodes in T.
Symmetrically if R3 is a branching node, R2 must be the
only other one.
For all spanning tree T of G with R3 and R2 as the only
branching nodes, we must have dT (R2) = dG(R2) = 4 and
dT (R3) = dG(R3) = 4, which implies that q∗(G) = 8.
Conclusion: For all spanning tree T of G such that
q(T) = q∗(G) = 8, s(T) > 1, so s(T) ̸= s∗(G). For
all spanning tree T of G such that s(T) = s∗(G) = 1,
q(R1) > 8, so q(T) ̸= q∗(G).
R1
R2
R3
Figure 4. Spanning tree T2 of G
IV. ILP FORMULATION
In this section, we resume from [5] the ILP formulations of
MBV and MDS problems, and we modify them in order to
take into account the capacity of an optical node to divide the
input light signal.
In order to deﬁne a spanning tree T of G, we can send from
a source vertex S ∈ V one ﬂow unit to every other vertices
v ∈ V \ {S}. Although edges of G are undirected, we deﬁne
two variables for each edge e = {u, v} ∈ E: fuv and fvu
deﬁne respectively the ﬂow going from u to v and the ﬂow
going from v to u along {u, v}. For each edge e = {u, v} ∈ E,
we consider a binary decision variable xe such that xe = 1
when e belongs to T and xe = 0 otherwise. Finally, for each
v ∈ V , we have a decision variable yv that is equal to 1 if v
is a branching node, and 0 otherwise.
Let us denote by ω(v) = {w ∈ V | {v, w} ∈ E} the set of
neighbours of v. The mathematical formulation of MBV given
in [5] is the following:

































































min s∗ =
X
v∈V
yv
(1a)
X
e∈E
xe = n − 1
(1b)
X
v∈ω(S)
fSv −
X
v∈ω(S)
fvS = n − 1
(1c)
X
u∈ω(v)
fvu −
X
u∈ω(v)
fuv = −1,
∀v ∈ V \ {S}
(1d)
fuv ≤ (n − 1)xe,
∀e = {u, v} ∈ E
(1e)
fvu ≤ (n − 1)xe,
∀e = {u, v} ∈ E
(1f)
X
e=(u,v)|u∈ω(v)
xe − 2 ≤ (n − 1)yv, ∀v ∈ V
(1g)
xe ∈ {0, 1},
∀e ∈ E
(1h)
yv ∈ {0, 1},
∀v ∈ V
(1i)
fuv ≥ 0,
∀e = {u, v} ∈ E
(1j)
fvu ≥ 0,
∀e = {u, v} ∈ E
(1k)
The mathematical model for MDS [5] requires additional
integer decision variables counting the degree of branch
vertices in the solution:
237
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

zv =
(
dT (v),
if v is a branching node,
0,
otherwise.
The objective function is then:
min q∗ =
X
v∈V
zv
There is an additional constraint:
X
e=(u,v)|u∈ω(v)
xe − 2 + yv ≤ zv
∀v ∈ V
In our problems, we want to satisfy optical constraints
imposed by the presence / absence of splitters in nodes. The
mathematical formulation of the MBV-DC, resp. MDS-DC, is
the same as the MBV, respectively MDS, but we must add the
following constraint:
yv = 0 if v /∈ MC(G)
An important difference between the two problems has to
be analyzed. For all undirected connected graph input of MBV
and MDS, it is guaranteed to have a feasible solution (every
connected graph admits a spanning tree). On the contrary, the
existence of a feasible solution for the MBV-DC and DC-MDS
depends strongly on the positioning of splitters in the network.
In Figure 5, only vertex b has a splitter (MC(G) = {b}), this
instance does not have a feasible solution.
splitter
c
a
b
(a) Starting network
(b)
Optimal span-
ning tree of MBV
(c) No feasible solu-
tion for the MBV-
DC
Figure 5. Example of instance for which there are no feasible
solutions of MBV-DC
V. EXPERIMENTAL RESULTS
We measured solutions of MBV-DC (and MDS-DC)
according to the proportion nbv of nodes (of degree strictly
greater than 2) equipped with splitters in the network. When
the proportion is 100% the solution is the same as for MBV
(and MDS).
Instances
of
MBV-DC
and
MDS-DC
are
undirected
and connected graphs. To produce such graphs, the NetGen
random graph generator was used. NetGen is a powerful tool
dedicated speciﬁcally to the generation of random transport
networks [7]. NetGen is used in most experiments on the
MBV and MDS already done (especially in [5]). If parameters
dedicated to capacities of arcs are set to zero, the generator
will produce non-valued connected random graphs. The input
ﬁles used by NetGen to generate instances follow the format
given in Table 1. According to the table, the only parameters
that can vary are the seed for the random number generator
and the number of vertices and edges of the output graph.
TABLE I. NETGEN PARAMETERS FOR INPUT FILES
parameters
Input
Parameter description
SEED
variable
Random numbers seed
NODES
variable
Number of nodes
SOURCES
1
Number of sources (including transshipment)
SINKS
1
Number of sinks (including transshipment)
DENSITY
variable
Number of (requested) edges
MINCOST
0
Minimum cost of edges
MAXCOST
0
Maximum cost of edges
SUPPLY
1
Total supply
TSOURCES
0
Transshipment sources
TSINKS
0
Transshipment sinks
HICOST
0
Percent of skeleton edges given maximum cost
CAPACITED
0
Percent of edges to be capacitated
MINCAP
0
Minimum capacity for capacitated edges
MAXCAP
0
Maximum capacity for capacitated edges
In order to solve the problems MBV-DC and MDS-DC, we
used the linear program solver GLPK [8]. We consider ﬁve
different values for the number of vertices of random graph:
n ∈ {20, 30, 40, 50}. For each value of n, we consider a
single density value (ratio between the number of edges and
the number of vertices) d = 1.5. We have chosen this density
because it allows to have a signiﬁcant number of branching
nodes in the solutions. This makes the comparison between
the MBV (resp. MDS), and MBV-DC (resp. MDS-DC) be
more relevant. We consider seven values for the percentage
of nodes equipped with splitters among the nodes of degree
strictly greater than 2: nbv ∈ {10%, 15%, 20%, 25%, 30%,
35%, 100%}. If a node has degree smaller or equal to 2, it
can not be a branching node whatever the constraints.
A random graph associated with a ﬁxed number of vertices,
and a ﬁxed percentage of nodes equipped with splitters is
called scenario. In order to have a set of signiﬁcant test, thirty
instances are generated for each scenario.
To analyse results in a meaningful way, it is imperative to
consider the percentage of infeasible instances for a given
scenario. Note that, if an instance is infeasible for MBV-DC
then it is infeasible for MDS-DC, and conversely. Therefore,
the proportion of infeasible instances is the same for both
problems. We consider that, if this proportion is strictly
greater than 50% then the value of MBV-DC and MDS-DC
on this scenario is not signiﬁcant. The Figure 6(a) shows
the proportion of infeasible instances for MBV-DC. The
curves representing nbv = 10% et nbv = 15% are above the
threshold of 50%. We therefore consider that the comparison
between MBV (resp. MDS) and MBV-DC (resp. MDS-DC)
is not signiﬁcant for nbv < 20%.
Figures 6(b) and 6(c) represent average values of solutions
of k feasible instances generated for each scenario, such
that k less or equal to 30. Note that if nbv is high, then
it approaches the solution of problems without constraints
(MBV or MDS), which is represented by nbv = 100%.
238
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

20
25
30
35
40
45
50
0
20
40
60
80
100
Number of vertices n
Percentage of infeasible instances
nbv=10%
nbv=15%
nbv=20%
nbv=25%
nbv=30%
nbv=35%
(a) Proportion of infeasible instances
20
25
30
35
40
45
50
5
10
15
Number of vertices n
Optimal sum of degree for branching vertices
nbv=20%
nbv=25%
nbv=30%
nbv=35%
nbv=100%
(b) Results for MDS-DC
20
25
30
35
40
45
50
1
1.5
2
2.5
3
3.5
Number of vertices n
Optimal number of branching vertices
nbv=20%
nbv=25%
nbv=30%
nbv=35%
nbv=100%
(c) Results for MBV-DC
Figure 6. Results of MBV-DC and MDS-DC
20
30
40
50
60
70
80
90
100
0%
10%
20%
30%
40%
50%
60%
Values of nbv
Additional cost of MBV-DC regarding MBV
n=20
n=30
n=40
n=50
(a) Variation of ratio between MBV-DC and MBV
20
30
40
50
60
70
80
90
100
0%
50%
100%
150%
Values of nbv
Additional cost of MDS-DC regarding MDS
n=20
n=30
n=40
n=50
(b) Variation of ratio between MDS-DC and MDS
Figure 7. Comparison between solutions with or without degree
constraints
Moreover, if nbv is high then the percentage of infeasible
instances is low. We also observe that, from nbv = 35%,
the solution of MBV-DC signiﬁcantly approach the solution
of MBV. For nbv ⩾ 30%, we see that the percentage of
infeasible instances is equal to zero.
In Figure 7, we show the inﬂuence of the degree
constraint for the two studied problems, the percentage of
additional cost due to the degree constraint regarding the
value of nbv is given for different sizes of networks.
The threshold nbv
=
35% can be considered as an
experimental bound about constraints on degrees of nodes
problems MBV-DC and MDS-DC. Beyond nbv = 35%,
239
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

this constraint has little impact on the optimal solution of
MBV-DC and MDS-DC: when more than 35% of the nodes
of degree higher than 2 are randomly designed as MC nodes,
the cost of MBV-DC solution is only 10% larger than the
cost of the MBV solution. This result is also true for MDS
providing that the size of the network is large enough (more
than 40 nodes).
The
interest
of
this
result
in
practice
is
important:
From 35% of nodes equipped with splitters, the constraint
on the number of nodes equipped with splitters has little
effect on the value of the optimal solution. Specially, through
this bound we can say that in an optical network, we can
position the splitters randomly on 35% of nodes of degree
strictly greater than 2, and have a high probability of ensuring
that the cost of multicast connection will be weakly inﬂuenced.
Note that for MBV-DC (and MDS-DC), the feasibility
of an instance can not however be guaranteed only by the
proportion of MC nodes. There are infeasible instances such
that only one single node is not equipped with splitter (see
Figure 8).
v
MI(G) = {v}
Figure 8. Graph G containing only one single node multicast-
incapable, but no feasible solution.
VI. CONCLUSION AND FUTURE WORKS
Two problems have been the source of our study. MBV,
which practical interest is to minimize the number of splitters
in an optical network, but does not limit the degree of optical
nodes, and MDS which practical interest is to minimize the
sum of degrees of these splitters nodes in the solution. Both
problems consider that all nodes of a network are equipped
with optical splitters, and can therefore make divisions of light,
which is not true in practice. Indeed, in an optical network,
only a subset of the nodes is equipped with splitters (MC
nodes). Therefore, only the MC nodes are able to duplicate
the light, and to be branching nodes in the spanning tree
corresponding to the network, while the other nodes (MI
nodes) may only crossed or reached.
The respect of this requirement, it is essential that these
theoretical issues best reﬂect the reality of optical networks.
This is why we have introduced two variants of the two
problems (problems MBV-DC and MDS-DC) which take into
account this constraint in the construction of the spanning
tree. Following the resolution of these problems by integer
linear programming, and tests on random graphs, we found
an experimental upper bound on the number of nodes to
equip with splitters in an optical network. Over 35% of nodes
equipped with splitters, this constraint has little effect on
the corresponding optimal spanning tree. Indeed, beyond this
threshold the additional cost due to the degree constraint is
less than 10% for the problem MBV-DC. This assumption is
also true for MDS-DC provided that the number of nodes is
greater than 40.
In problems treated, there is no real limit on the degree
of branching nodes because we consider that their degree
can be as large as needed in the optimal tree, thus the
degree constraint on the nodes in a spanning tree is either 2
(MI nodes) or its degree in the original graph (MC nodes).
Knowing that splitters has limited capacity to divide the light
signal, consideration may be given to improve the modelling
of our problems by setting an upper bound on the degree of the
nodes of the spanning tree varying between 1 and the degree
of the node in the original graph.
REFERENCES
[1] J. He, S.-H. G. Chan, and D. H. K. Tsang, “Multicasting in WDM
Networks,” IEEE Communications Surveys and Tutorials, pp. 2–20, 2002.
[2] M. R. Garey and D. S. Johnson, Computers and Intractability: A Guide to
the Theory of NP-Completeness.
New York, NY, USA: W. H. Freeman
& Co, 1979.
[3] R. Malli, X. Zhang, and C. Qiao, “Beneﬁts of multicasting in all-
optical networks,” in Society of Photo-Optical Instrumentation Engineers
(SPIE) Conference Series, ser. Society of Photo-Optical Instrumentation
Engineers (SPIE) Conference Series, J. M. Senior & C. Qiao, Ed., vol.
3531, Oct. 1998, pp. 209–220.
[4] M. Ali and J. S. Deogun, “Power-Efﬁcient Design of Multicast
Wavelength-Routed Networks,” in IEEE Journal of Selected areas in
communication, 2000, pp. 1852–1862.
[5] R. Cerulli, M. Gentili, and A. Iossa, “Bounded-degree spanning tree
problems: models and new algorithms,” Comput. Optim. Appl, vol. 42,
pp. 353–370, April 2009.
[6] D. B. West, Introduction to Graph Theory. University of Illinois-Urbana:
Prentice-Hall, 1996.
[7] D. Klingman, A. Napier, and J. Stutz, “A program for generating large
scale capacitated assignment, transportation, and minimum cost ﬂow
network problems,” Management Science, vol. 20, no. 5, pp. 814–821,
1974.
[8] A. O. Makhorin, GNU Linear Programming Kit (GLPK) v 4.38, gnu
project ed., May 2009.
[9] L. Gargano, P. Hell, L. Stacho, and U. Vaccaro, “Spanning Trees with
Bounded Number of Branch Vertices,” in Proceedings of the 29th
International Colloquium on Automata, Languages and Programming,
ser. ICALP ’02.
London, UK, UK: Springer-Verlag, 2002, pp. 355–365.
240
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-183-0
ICN 2012 : The Eleventh International Conference on Networks

