Different Scenarios of Concatenation at Aggregate Scheduling of Multiple Nodes
Ulrich Klehmet
Kai-Steffen Hielscher
Computer Networks and Communication Systems
Friedrich-Alexander-Universit¬®at Erlangen-N¬®urnberg, Germany
Email: {klehmet, hielscher}@informatik.uni-erlangen.de
Abstract‚ÄîNetwork Calculus (NC) offers powerful tools for
performance evaluation in queueing systems. It has been proven
as an important mathematical methodology for worst-case anal-
ysis of communication networks. One of its main application
Ô¨Åelds is the determination of QoS guarantees in packet switched
communication systems. One issue of nowadays‚Äô research is the
applicability of NC concerning the performance evaluation of
aggregate multiplexing Ô¨Çows either at one node or at multiple
nodes. Then, we have to differ whether the FIFO property at
merging single Ô¨Çows can be assumed or not as in case of so-
called blind multiplexing. In this paper, we are dealing with
problems of computing the service curve for the single individual
Ô¨Çow at demultiplexing in connection with aggregate scheduling
of both ‚Äì a singular service system (node) or of multiple nodes,
at least two. These service curves are relevant for worst-case
delay computation. In particular we deÔ¨Åne important application
scenarios and compare their resulting single Ô¨Çow service curves.
These are of practical beneÔ¨Åt in many applications and can not
be found in literature.
Index Terms‚ÄîNetwork Calculus; FIFO Multiplexing; Blind
Multiplexing; Concatenation of nodes; Pay Multiplexing Only
Once
I. INTRODUCTION
In the framework of NC, the modelling elements arrival
curve and service curve play an important role. They are the
basis for the computation of maximal deterministic boundary
values like backlog bounds and delay bounds found in [1], [2].
DeÔ¨Ånition 1 (Arrival curve): Given a system S with input
Ô¨Çow x(t). Let Œ±(t) be a non-negative, non-decreasing function.
x(t) is constrained by or has arrival curve Œ±(t) iff
x(t) ‚àí x(s) ‚â§ Œ±(t ‚àí s) for all t ‚â• s ‚â• 0.
Another speech is: Ô¨Çow F is Œ±-smooth.
Example 1: A commonly used arrival curve is the token
bucket constraint:
Œ±r,b(t) = b + rt for t > 0 and zero otherwise.
As one can see in Fig. 1 this arrival curve forms an upper limit
for trafÔ¨Åc Ô¨Çows x(t) with (average) rate r and instantaneous
burst b . That means x(t)‚àíx(s) ‚â§ Œ±r,b(t‚àís) = b+r¬∑(t‚àís).
For ‚àÜt := t ‚àí s and ‚àÜt ‚Üí 0 it holds
lim
t‚Üís{x(t) ‚àí x(s)} ‚â§ lim
‚àÜt‚Üí0{r ¬∑ ‚àÜt + b} = b
An important deÔ¨Ånition of NC is the following one:
DeÔ¨Ånition 2 (Min-plus convolution): Let f(t) and g(t) be
non-negative, non-decreasing functions that are 0 for t ‚â§ 0. A
third function, called min-plus convolution is deÔ¨Åned by
(f ‚äó g)(t) =
inf
0‚â§s‚â§t{f(s) + g(t ‚àí s)}
Fig. 1.
Token Bucket Arrival Curve
Applying DeÔ¨Ånition 2 we can characterize the arrival curve
Œ±(t) with respect to x(t) as:
x(t) ‚â§ (x ‚äó Œ±)(t)
The concept of arrival curves describes an upper bound to
an input stream of a system processing some type of data.
Concerning the output of this system we are interested in
some service guarantees, i.e. is there a guaranteed minimum
of output y(t) ‚Äì the amount of data leaving system S? The
modeling element service curve deals with this problem.
DeÔ¨Ånition 3 (Service curve): Given a system S with input
Ô¨Çow x(t) and output Ô¨Çow y(t). The system offers a (minimum)
service curve Œ≤(t) to the Ô¨Çow iff Œ≤(t) is a non-negative, non-
decreasing function with Œ≤(0) = 0 and y(t) is lower bounded
by the convolution of x(t) and Œ≤(t):
y(t) ‚â• (x ‚äó Œ≤)(t).
Fig. 2 demonstrates (x ‚äó Œ≤)(t) as an example for the lower
bound of the output y(t) and any given input x(t).
Fig. 2.
Convolution as a Lower Output Bound
Example 2: One commonly used service curve is the rate-
latency function: Œ≤(t) = Œ≤R,T (t) =
R ¬∑ [t ‚àí T]+ := R ¬∑ max{0; t ‚àí T}. The rate-latency function
reÔ¨Çects a service element which offers a minimum service
of rate R after a worst-case latency of T. Having in mind a
worst case performance analysis, it is possible to abstract away
111
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

from complex (queuing) systems with different scheduling
strategies.
In Fig. 4, the (green) graph Œ≤R,T (t) reÔ¨Çects a rate-latency
service curve with rate R and latency T.
Theorem 1 (Backlog bound and output bound): Consider
a system S with input Ô¨Çow x(t) and output Ô¨Çow y(t). Be x(t)
Œ±-smooth and S offers a service curve Œ≤(t). The backlog v at
time t, v(t) = x(t) ‚àí y(t), is bounded by the supremum of
the vertical deviation of arrival curve and service curve:
x(t) ‚àí y(t) ‚â§ sup
s‚â•0
{Œ±(s) ‚àí Œ≤(s)}
and output y(t) is constrained by the arrival curve
Œ±‚àó(t) = Œ± ‚äò Œ≤ = sup
s‚â•0
{Œ±(t + s) ‚àí Œ≤(s)}.
The complete backlog v(t) = x(t) ‚àí y(t) at time t within a
system is sometimes denoted as buffer(t).
If the node or system serves the incoming data of a Ô¨Çow
in FIFO order (First In First Out), the following bound is
computable:
Theorem 2 (Delay bound): Assume a Ô¨Çow constrained by
arrival curve Œ±(t) passing a system with service curve Œ≤(t).
The maximal virtual delay d is given as the supremum of all
possible virtual delays of data, i.e. is deÔ¨Åned as the supremum
of the horizontal deviation between arrival curve and service
curve:
d ‚â§ sup
s‚â•0
{inf{œÑ : Œ±(s) ‚â§ Œ≤(s + œÑ)}}.
Fig. 3 depicts both theorems.
Fig. 3.
Backlog and delay bound















 



 


Fig. 4.
Example for the bounds
Example 3: Suppose there is a system with input according
to a token bucket, thus x(t) ‚àí x(s) ‚â§ Œ±r,b(t ‚àí s) and rate-
latency output:
y(t) ‚â• inf
s‚â§t{x(s) + Œ≤R,T (t ‚àí s)}
Based on the above theorems we get the delay bound d ‚â§
b/R + T, the output bound Œ±‚àó(t) = r(t + T) + b, and the
backlog is bounded by v = b + rT. Fig. 4 shows the results.
Remark: Always in case of token-bucket like input and rate-
latency output the worst-case delay dmax is computable by
dmax =
burst
servicerate + latency.
II. AGGREGATE SCHEDULING
Until now, only per (single) Ô¨Çow-based scheduling have
been considered. But in real systems, aggregate scheduling
arises in many cases. Always, if there are more than one separat
input Ô¨Çows entering some kind of data processing/transferring
system and then dealt as a whole stream of data ‚Äì we speak of
aggregate scheduling. Important examples are aggregate based
networks such as Differentiated Service domains (DS) of the
Internet [3]. In order to address such class-based networks,
we have to look for rules of multiplexing and aggregate
scheduling. Assume that m Ô¨Çows enter a system (network)
or system node and are scheduled by aggregation. According
to [4] the aggregate input Ô¨Çow and arrival curve are given as
follows.
Theorem 3 (Multiplexing): An aggregation, or multiplexing
of m Ô¨Çows can be expressed by addition of the input func-
tions respective arrival curves. W.l.o.g. be m = 2, then the
aggregated input Ô¨Çow is x(t) = x1(t) + x2(t) and Œ±(t) =
Œ±1(t) + Œ±2(t), where x1, x2 and Œ±1, Œ±2 are the corresponding
single input Ô¨Çows and arrival curves.
 
 
  
 
 
 












 







 
 
 
 

	
	
 
	






 
 	
 

 
  	
 





















 
 



 

 
 
 



 

 
 






 
 
 
 

 

Fig. 5.
Multiplexing of input xi, output yi with arrival & service curve
Œ±i, Œ≤ = Œ≤aggr
Now, as is shown in Fig. 5 important questions arise: Is it
possible to apply the same analysis e.g. of buffer bounds and
maximal delay of Theorems 1 and 2 to the single Ô¨Çows xi?
Does there exists a service curve Œ≤i for the individual Ô¨Çow
xi, sometimes denoted as left-over service curve? What is the
maximal delay, say of Ô¨Çow x1, after servicing the aggregate
and subsequently demultiplexing? The answers are based on
the type of multiplexing in each case, i.e. in which manner
the aggregate scheduling is done: FIFO, priority-scheduling,
or multiplexing by complete unknown arbitration between
112
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

the Ô¨Çows, which is the deÔ¨Ånition of Blind scheduling [5].
Together with the particular scheduling type one has to take
into consideration the service curve of the aggregate Ô¨Çow. From
a practical point of view we will discuss here the two important
scheduling disciplines: FIFO and Blind. Regarding aggregate
Ô¨Çow servers the next both theorems given by [1] are important.
Theorem 4 (FIFO Service curves): Consider
a
node
serving the Ô¨Çows x1 and x2 in FIFO order. Assume Ô¨Årst that
the node guarantees a service curve Œ≤ to the aggregate of the
Ô¨Çows and secondly, Ô¨Çow x2 is Œ±2‚àísmooth. DeÔ¨Åne the family
of functions Œ≤1
Œ∏(t) := [Œ≤(t) ‚àí Œ±2(t ‚àí Œ∏)]+ if t > Œ∏ otherwise
Œ≤1
Œ∏(t) := 0. Then for any Œ∏ ‚â• 0 it holds
y1 ‚â• x1 ‚äó Œ≤1
Œ∏,
where y1 is the output of Ô¨Çow x1. If Œ≤1
Œ∏ is a non-negative,
non-decreasing function, Ô¨Çow x1 has the service curve Œ≤1
Œ∏.
Note [x]+ = x if x ‚â• 0 otherwise 0.
If no knowledge is given about the choice of service
between the Ô¨Çows, i.e. in case of blind multiplexing one has
to differ between strict or non-strict aggregate service curves
[1].
Theorem 5 (Blind Multiplexing): Consider a node serving
the Ô¨Çows x1 and x2, with some unknown arbitration between
the two Ô¨Çows. Assume the node guarantees a strict service
curve Œ≤ to the aggregate of the two Ô¨Çows and that Ô¨Çow x2
is Œ±2 ‚àí smooth. DeÔ¨Åne Œ≤1(t) := [Œ≤(t) ‚àí Œ±2(t)]+. If Œ≤1 is
wide-sense increasing, then it is a service curve for Ô¨Çow x1.
But what does it mean, a service curve is strict ?
DeÔ¨Ånition 4 (Strict service curve): A system S offers a
strict service curve Œ≤ to a Ô¨Çow if during any backlogged period
[s, t] of duration u = t ‚àí s the output y of the Ô¨Çow is at least
equal to Œ≤(u), i.e. y(t) ‚àí y(s) ‚â• Œ≤(t ‚àí s), or equivalently
y(z) ‚â• Œ≤(z) ‚àÄz ‚àà [s, t].
Of course, any strict service curve is a service curve in terms
of deÔ¨Ånition 3, but not vice versa - see for instance [1] or [6].
Example 4: The constant rate server in Fig. 6 with input
Ô¨Çow x and output y has a strict service curve Œ≤(t) = ct. Let
s be the start of a busy period, that means y(s) = x(s), then
y(t) ‚àí y(s) = c(t ‚àí s), and so y(t) ‚àí x(s) ‚â• Œ≤(t ‚àí s).



 


  

	

	



Fig. 6.
Constant rate server
Our main objective in this paper is the consideration of typical
application scenarios concerning multiplexed Ô¨Çows in FIFO or
blind schedule situations: Based on Theorems 1 and 2 we want
to apply the same analysis, e.g., for getting buffer bounds and
maximal delay-values of for instance the single Ô¨Çows xi after
being demultiplexed. For that, what is the ‚Äôbest‚Äô service curve
Œ≤i for the individual Ô¨Çow xi, respectively?
Concerning most practical applications we focus in particular
on input Ô¨Çows with token bucket like arrival constraints Œ±r,b
and rate-latency service curves Œ≤R,T .
A. Determination of the best service curve at FIFO schedul-
ing:
First, let us come back to Theorem 4 for FIFO schedule in
case of two Ô¨Çows x1 and x2. The main statement is that for any
Œ∏ with 0 ‚â§ Œ∏ < t the expression Œ≤1
Œ∏(t) := [Œ≤(t) ‚àí Œ±2(t ‚àí Œ∏)]+
is a service curve for Ô¨Çow x1. Because that is valid for each
t = t0 ‚Äì we may ask for which especial Œ∏ we get the ‚Äôbest‚Äô
service curve, i.e. the least pessimistic ‚Äì or in other words
the greatest Œ≤1
Œ∏, (so guaranteeing the least worst case delay
etc.) Of course, since Œ±2 is a wide-sense increasing function
‚Äì formula Œ≤1
Œ∏(t) := [Œ≤(t) ‚àí Œ±2(t ‚àí Œ∏)]+ in general will get
the largest value if Œ∏ is converging to t from left: Œ∏ ‚Üí t with
Œ∏ < t, for that we use the notation Œ∏ ‚Üí t‚àí .
As
we
said
before
concerning
practical
applications,
the
arrival
and
service
curves
are
often
a
token
bucket-type Œ±r,b(t)
=
b + rt and rate-latency function
Œ≤R,T (t) = R ¬∑ [t ‚àí T]+, respectively. Therefore, in order to
demonstrate the search for a ‚Äôbest service‚Äô we will take these
both types of curves. That is to say get the supremum of
Œ≤1,Œ∏ = [Œ≤R,T (t) ‚àí Œ±2(t ‚àí Œ∏)]+
with Œ±2(t) = r2t + b2
‚áí
sup0‚â§Œ∏<t{R ¬∑ (t ‚àí T)+ ‚àí [r2 ¬∑ (t ‚àí Œ∏) + b2]}
=
sup0‚â§Œ∏<t{Rt ‚àí RT ‚àí r2t + r2Œ∏ ‚àí b2} which outcomes
to Œ∏ = Œ∏opt := T + b2
R . Thus, the ‚Äôbest‚Äô rate-latency service
curve is Œ≤1,Œ∏ = Œ≤(t) ‚àí Œ±2(t ‚àí (T + b2
R )) with Œ≤(t) (= Œ≤aggr)
as service curve to the aggregate.
If we now compare the service curves Œ≤1,Œ∏ of both the FIFO
(Œ∏ = Œ∏opt = T + b2
R ) and blind Multiplexing (Œ∏ = 0) ‚Äì of the
same multiplexed server ‚Äì one could expect in case of FIFO
the service curve of single Ô¨Çow x1 is larger, and consequently
the better one w.r.t. the worst-case delay dmax. Let‚Äôs denote
this as Œ≤1,F IF O(t) > Œ≤1,Blind(t). Our following computation
will conform to this.
Blind Multiplexing:
Œ≤1,Œ∏=0(t) = Œ≤1,Blind(t) = Œ≤(t) ‚àí Œ±2(t ‚àí 0) = R(t ‚àí T)+ ‚àí
(r2t + b2) = ¬∑ ¬∑ ¬∑ = (R ‚àí r2)[t ‚àí RT +b2
R‚àír2 ]+
The result is (again) a rate-latency service curve:
Œ≤1,Blind(t) = Œ≤R‚Ä≤,T ‚Ä≤(t) with rate R‚Ä≤ = R ‚àí r2 and latency
T ‚Ä≤ = RT +b2
R‚àír2 .
FIFO Multiplexing:
Œ≤1,Œ∏(t) = Œ≤1,F IF O(t) = Œ≤(t) ‚àí Œ±2(t ‚àí Œ∏opt) = R(t ‚àí T)+ ‚àí
(r2 ¬∑ (t ‚àí (T + b2
R )) + b2) = ¬∑ ¬∑ ¬∑ = (R ‚àí r2)(t ‚àí [T + b2
R ]+)
The result, again a rate-latency service curve:
Œ≤1,F IF O(t) = Œ≤R‚Ä≤,T ‚Ä≤(t) with rate R‚Ä≤ = R ‚àí r2 and latency
T ‚Ä≤ = T + b2
R .
It is easy to see:
Œ≤1,F IF O = (R‚àír2)(t‚àí[T + b2
R ])+ > (R‚àír2)[t‚àí RT +b2
R‚àír2 ]+ =
Œ≤1,Blind.
113
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services






 









	

 

 








 



 
 
	





 
Fig. 7.
Service curve FIFO vs. Blind of single Ô¨Çow x1
In summary is to state:
For both we get the same service rate R‚Ä≤ = R‚àír2, however ‚Äì
as we expected ‚Äì the latency increases from FIFO to Blind
multiplexing. And because a service curve by deÔ¨Ånition 3
deÔ¨Ånes a lower output limit Œ≤1,F IF O speciÔ¨Åes a greater lower
limit to a single Ô¨Çow x1 than Œ≤1,Blind. Fig. 7 shows this issue.
Given now a service system multiplexing two Ô¨Çows x1 and
x2. Theorems 4 or 5 provide a service curve Œ≤i e.g. Œ≤1 for the
single Ô¨Çow x1.
If x1 is Œ±1-smooth and by Theorems 1 and 2 ‚Äì the maximum
backlog bound for the demultiplexed single x1 is given by
x1(t) ‚àí y1(t) ‚â§ sup
s‚â•0
{Œ±1(s) ‚àí Œ≤1(s)}
and the important worst case end-to-end-delay parameter of x1
by
d ‚â§ sup
t‚â•0
{inf{œÑ : Œ±1(t) ‚â§ Œ≤1(t + œÑ)}}
at which expression dœÑ(t) = inf{œÑ ‚â• 0 : Œ±1(t) ‚â§ Œ≤1(t + œÑ)},
the so-called virtual delay, is needed: If an input x at time t
has arrived it is assured that not later than dœÑ(t) it has left the
service facility. This is guaranteed for FIFO scheduling but not
for blind Multiplexing. However, we may presume FIFO per
single Ô¨Çow xi within the aggregate and thus apply all bounding
theorems without any restrictions.
III. DIFFERENT AGGREGATE SCHEDULING SCENARIOS
So far, we have considered elementary service nodes (net-
work elements). We now want to discuss the concatenation of
aggregate network elements. First of all let‚Äôs give the important
theorem given in[1]:
Theorem 6 (Concatenation of nodes): Assume a Ô¨Çow tra-
verses systems S1 and S2 in sequence and Œ≤i is a service curve
of Si, i = 1, 2. Then the concatenation of the two systems offers
a service curve of Œ≤ = Œ≤1 ‚äó Œ≤2 to the Ô¨Çow, like in Fig. 8.
Using this service curve Œ≤ = Œ≤1‚äó Œ≤2 we mention the important
property [1] Pay Burst Only Once (POO): Applying delay
bound Theorem 2 one gets tighter end-to-end delay bounds
if the delay computation is based on the concatenated end-to-
end service curve Œ≤: D‚äó ‚â§ D1 + D2 with: D1 ‚â§
b
R1 + T1,
D2 ‚â§ b+rT1
R2
+ T2 and D‚äó ‚â§
b
min(R1,R2) + (T1 + T2), again
token-bucket and rate-latency curves supposed. (The burst b
affects the sum (D1 + D2) twice whereas D‚äó only once.)
Œ≤2
Œ≤1
x
y
2
1
Œ≤ ‚äó Œ≤
x
y
Fig. 8.
Service curve of concatenated nodes
ÔÅ¢1
ÔÅ¢2
r,b
ÔÅ°
D1
2
D
2
1
ÔÅ¢ ÔÉÑ ÔÅ¢
r,b
ÔÅ°
ÔÉÑ
D
Fig. 9.
Pay Burst Only Once-Principle
A. Concatenation of aggregated nodes
Now we will regard the concatenation of aggregate nodes,
exemplarily for an input of two Ô¨Çows x1, x2 and a concate-
nated two-node system as shown in Fig. 10.
What is the end-to-end service curve of let‚Äôs say Ô¨Çow x1 ?
By Theorem 6 and the (aggregation-) Theorems 4 (or 5) with
Œ≤1
œÑ(t) = [Œ≤(t) ‚àí Œ±2(t ‚àí œÑ)]+ we get:
Œ≤tot
1 (t) = (Œ≤I
1,œÑ ‚äó Œ≤II
1,œë)(t)
= [Œ≤I(t) ‚àí Œ±I
2(t ‚àí œÑ)]+1t>œÑ ‚äó [Œ≤II(t) ‚àí Œ±II
2 (t ‚àí œë)]+1t>œë,
where Œ≤I, Œ≤II are service curves of the aggregated Ô¨Çows of
node I or node II, and Œ±I
2 and Œ±II
2
the arrival curves of the
individual Ô¨Çow x2 at the corresponding nodes.
(The term 1t>Œ∏ is zero for t ‚â§ Œ∏. In the following, formulas,
for the sake of clarity we will omit this term frequently). As
Œ≤(t)
( )
Œ≤ I t
( )
1 t
Œ±
( )
Œ±2 t
( )
II t
Œ≤
4
4 4 8
64 7
Aggr. node I 
4
4 4 8
64 7
 node II
Aggr.
  ) ??
(
1tot
t
Œ≤
Fig. 10.
Concatenation of aggregate nodes
given in Fig.10 Ô¨Çow x1 is aggregated with x2 only at node I,
i.e. multiplexing happens only once. These thoughts lead to
the PMOO-principle (Pay Multiplexing Only Once) [5]: First
do the concatenation ‚äó of both nodes w.r.t. service curve Œ≤
and afterwards apply Theorem 4 (or 5 in case of Blind):
Œ≤tot
1,P MOO(t) = [(Œ≤I
1 ‚äó Œ≤II
1 )(t) ‚àí Œ±I
2(t ‚àí Œ∫)]+.
Question: Is Œ≤tot
1,P MOO
better than Œ≤tot
1
or in other words
Œ≤tot
1,P MOO(t) ‚â• Œ≤tot
1 (t) ?
Again,
suppose:
rate-latency
service
curves
Œ≤I(t) = RI ¬∑ [t ‚àí T I]+, Œ≤II(t) = RII ¬∑ [t ‚àí T II]+ and token
bucket arrival curves Œ±I
2(t) = r2 ¬∑ t + bI
2, Œ±II
2 (t) = r2 ¬∑ t + bII
2 .
At
this
point,
we
have
to
differ
between
FIFO
and
blind
multiplexing,
that
means
in
formula
Œ≤1
œÑ(t) = [Œ≤(t) ‚àí Œ±2(t ‚àí œÑ)]+
we deÔ¨Åne œÑ = œÑopt = T + b2
R
114
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

or œÑ = 0, respectively.
1) Case FIFO: Let be œÑ = T I + bI
2
RI of node I,
œë = T II + bII
2
RII of node II
It follows:
‚Ä¢
Œ≤tot
1 (t)= min(RI ‚àír2, RII ‚àír2)¬∑[t‚àíT I ‚àíT II ‚àí bI
2
RI ‚àí bII
2
RII ]+
And according to PMOO with œÑ = T I + bI
2
RI ,
œë = T II + bII
2
RII , Œ∫ = (T I + T II) +
bI
2
min(RI,RII)
we get
‚Ä¢
Œ≤tot
1,P MOO(t) = [min(RI, RII) ‚àí r2] ¬∑ [t ‚àí T I ‚àí T II ‚àí
bI
2
min(RI,RII)]+
The results are two service curves Œ≤tot
1
or Œ≤tot
1,P MOO of Ô¨Çow
x1 again of type rate-latency.
Since bI
2 ‚â§ bII
2
it follows:
Œ≤tot
1,P MOO(t) ‚â• Œ≤tot
1 (t).
Computing the worst-case delay D by
D =
burst
servicerate + latency, for D = D1 or D = D1,P MOO
and using Œ≤tot
1 , respectively Œ≤tot
1,P MOO
we get:
‚Ä¢
D1(t) =
b1
min(RI‚àír2,RII‚àír2) + [T I + T II + bI
2
RI + bII
2
RII ]
‚Ä¢
D1,P MOO(t) =
b1
min(RI‚àír2,RII‚àír2) +
[T I + T II +
bI
2
min(RI,RII)],
thus
D1,P MOO(t) < D1(t).
Result:
Œ≤tot
1,P MOO
is better than
Œ≤tot
1 , since it produces a
shorter worst case delay D.
2) Case Blind: œÑ = 0, œë = 0, Œ∫ = 0 (after Theorem 5)
It follows for the end-to-end service curve Œ≤tot
1 (t) of x1:
‚Ä¢
Œ≤tot
1 (t) = [min(RI ‚àí r2, RII ‚àí r2)] ¬∑ [t ‚àí ( RIT I+bI
2
RI‚àír2
+
RIIT II+bII
2
RII‚àír2
)]+
And applying the PMOO-principle here again, we get:
‚Ä¢
Œ≤tot
1,P MOO(t) = [min(RI ‚àí r2, RII ‚àí r2)] ¬∑ [t ‚àí
min(RI,RII)¬∑(T I+T II)+bI
2
min(RI,RII)‚àír2
]+
Unfortunately, now it is not always true: Œ≤tot
1,P MOO ‚â• Œ≤tot
1 :
Œ≤tot
1,P MOO per se does not causes less delay than Œ≤tot
1 . We get
Œ≤tot
1,P MOO ‚â• Œ≤tot
1
‚áî
Ô£±
Ô£¥
Ô£≤
Ô£¥
Ô£≥
(*)
bII
2 ‚â• r2T II(RII‚àíRI)
RI‚àír2
(**)
bI
2 ‚â• r2T I(RI‚àíRII)
RII‚àír2
if (*) min(RI, RII) = RI or (**) min(RI, RII) = RII.
That means:
D1,P MOO(t) < D1(t) for condition (*) or (**).
B. More general concatenation settings
For practical application and comparisons we complete
these scenarios and introduce the following deÔ¨Ånitions.
DeÔ¨Ånitions ‚Äì FIFO:
Œ≤F IF O
1
:= [Œ≤I(t) ‚àí Œ±I
2(t ‚àí œÑ)]+ ‚äó [Œ≤II(t) ‚àí Œ±II
2 (t ‚àí œë]+
Œ≤F IF O
1,P MOO := [(Œ≤I ‚äó Œ≤II)(t) ‚àí Œ±I
2(t ‚àí Œ∫)]+
ÀúŒ≤F IF O
1,P MOO := [Œ≤I(t) ‚àí Œ±I
2(t ‚àí œÑ)]+ ‚äó Œ≤II(t)
or
ÀúŒ≤F IF O
1,P MOO
:=
Œ≤I(t)
‚äó
[Œ≤II(t)
‚àí
Œ±II
2 (t
‚àí
œÑ)]+
with
œÑ
=
T I +
bI
2
RI ,
œë
=
T II +
bII
2
RII
and
Œ∫ = (T I + T II) +
bI
2
min(RI,RII).
DeÔ¨Ånitions ‚Äì Blind:
Œ≤Blind
1
:= [Œ≤I(t) ‚àí Œ±I
2(t ‚àí 0]+ ‚äó [Œ≤II(t) ‚àí Œ±II
2 (t ‚àí 0]+
Œ≤Blind
1,P MOO := [(Œ≤I ‚äó Œ≤II)(t) ‚àí Œ±I
2(t ‚àí 0]+
ÀúŒ≤Blind
1,P MOO := [Œ≤I(t) ‚àí Œ±I
2(t ‚àí 0]+ ‚äó Œ≤II(t)
or
ÀúŒ≤Blind
1,P MOO
:=
Œ≤I(t)
‚äó [Œ≤II(t) ‚àí Œ±II
2 (t ‚àí 0]+
here
œÑ = œë = Œ∫ = 0.
But what does it mean for instance
(i) : [Œ≤I(t) ‚àí Œ±I
2(t ‚àí 0]+ ‚äó Œ≤II(t)
or
(ii) : Œ≤I(t) ‚äó [Œ≤II(t) ‚àí Œ±II
2 (t ‚àí 0]+ ?
Fig.11 explains in (i) and (ii) the semantic equivalent of
Ô¨Årst or second expression. In picture (i) the single Ô¨Çow x2
ÔÅ¢(t)
( )
ÔÅ¢ I t
( )
1 t
ÔÅ°
( )
ÔÅ°2 t
( )
II t
ÔÅ¢
ÔÄ¥
ÔÄ¥ ÔÄ¥ ÔÄ∏
ÔÄ∂ÔÄ¥ ÔÄ∑
Aggr. node I 
ÔÄ¥
ÔÄ¥ ÔÄ¥ ÔÄ∏
ÔÄ∂ÔÄ¥ ÔÄ∑
 node II
Aggr.
(   ) ??
~Blind
,1
PMOO t
ÔÅ¢
( )
2 t
ÔÅ°
ÔÅ¢(t)
( )
ÔÅ¢ I t
( )
1 t
ÔÅ°
( )
2 t
ÔÅ°
( )
II t
ÔÅ¢
ÔÄ¥
ÔÄ¥ ÔÄ¥ ÔÄ∏
ÔÄ∂ÔÄ¥ ÔÄ∑
Aggr. node I 
ÔÄ¥
ÔÄ¥ ÔÄ¥ ÔÄ∏
ÔÄ∂ÔÄ¥ ÔÄ∑
 node II
Aggr.
)
(i
)
(ii
(   ) ??
~Blind
,1
PMOO t
ÔÅ¢
Fig. 11.
Service curves of Ô¨Çow x1 in (i) and (ii)
with arrival curve Œ±2 leaves the system after served in node I,
and in (ii) Ô¨Çow x2 enters the system being served by node II
only.
Using these deÔ¨Ånitions we come to the following results
of the
Different scenarios:
Within FIFO:
ÀúŒ≤F IF O
1,P MOO ‚â• Œ≤F IF O
1,P MOO ‚â• Œ≤F IF O
1
Within Blind:
‚Ä¢ Œ≤Blind
1,P MOO ‚â• Œ≤Blind
1
if above condition (*) or (**) is
given
115
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

‚Ä¢ ÀúŒ≤Blind
1,P MOO ‚â• Œ≤Blind
1,P MOO
if t ‚Üí ‚àû
‚Ä¢ ÀúŒ≤Blind
1,P MOO ‚â• Œ≤Blind
1,P MOO ‚â• Œ≤Blind
1
if t ‚Üí ‚àû and at
condition (*) or (**)
Figure 12 shows the relations of left-over service curves
between FIFO- and Blind-scheduling. Herein, the relations be-
tween the service curves symbolized by ‚Äô?‚Äô are to be computed
from case to case. Depending on the parameters RI, RII, œÑ, œë
and the concrete value of parameter t ‚Äì both inequations are
possible, either
‚Äô‚â•‚Äô
or
‚Äô‚â§‚Äô
respectively.
Of course,
Blind
1
Blind
PMOO
1,
Blind
PMOO
1,
 
~
   
ÔÅ¢
ÔÅ¢
ÔÅ¢
FIFO
1,PMOO
ÔÅ¢
‚â•
‚â•
‚â•
?
Blind
1
Blind
PMOO
1,
Blind
PMOO
1,
 
~
   
ÔÅ¢
ÔÅ¢
ÔÅ¢
FIFO
1,PMOO
~ÔÅ¢
‚â•
‚â•
Blind
1
Blind
PMOO
1,
Blind
PMOO
1,
 
~
   
ÔÅ¢
ÔÅ¢
ÔÅ¢
FIFO
1ÔÅ¢
‚â•
?
?
Fig. 12.
Comparison between FIFO and Blind
one has to ask how to deal with more complex scenarios, e.g.
in case of more than two aggregated Ô¨Çows or more than two
service nodes. In principle we can apply an approach resulting
from aggregation Theorems 3, 4 and 5 together with the
concatenation Theorem 6. However one has to check whether
the solutions are of practical beneÔ¨Åt, may be the service curves
Œ≤i(t) of single service xi are too pessimistic which means they
create to large worst-case delay bounds based on Theorem 2.
An example setting from [4] for FIFO scheduling with 3
Ô¨Çows and 3 server nodes is given here, where in Fig. 13 (i)
Ô¨Çow 3 enters node II and after service is given out immediately.
The other both Ô¨Çows are served by all 3 nodes. According to
the aggregation and concatenation theorem we get:
Œ≤1(t) = [Œ≤I(t) ‚äó [(Œ≤II(t) ‚àí Œ±II
3 (t ‚àí œÑ))]+ ‚äó Œ≤III(t) ‚àí
Œ±I
2(t ‚àí œë)]+.
As
before
taking
rate-latency
service
curves
and
token
bucket
arrival
curves,
œÑ
=
T II +
bII
3
RII ,
and
œë = T I + T II + T III +
bI
2
min(RI,RII‚àír3,RIII)
thereupon
resulting in Œ≤1(t) = [min(RI, RII ‚àí r3, RIII) ‚àí r2] ¬∑ [t ‚àí
T I ‚àí T II ‚àí T III ‚àí bII
3
RII ‚àí
bI
2
min(RI,RII‚àír3,RIII)]+.
The scenario in Fig. 13 (ii) w.r.t. left-over service of Ô¨Çow
2 leads to the end-to-end service curve
Œ≤2(t) = min(RI ‚àí r1, RII ‚àí r3 ‚àí r1, RIII ‚àí r3) ¬∑ [t ‚àí T I ‚àí
T II ‚àí T III ‚àí
bI
1
min(RI,RII‚àír3) ‚àí
bIII
3
min(RII‚àír1,RIII)]+.
Hereby Ô¨Çow 1 get service by node I and node II and leaves
the system whereas Ô¨Çow 3 is served by node II and node III
)
(i
I
II
III
1
2
3
I
II
III
1
2
3
)
(ii
Fig. 13.
Server networks with more Ô¨Çows and nodes
before leaving the server system. Only Ô¨Çow 2 get service by
all 3 nodes.
IV. CONCLUSION
In this paper, we considered the subject of service curves
in connection with aggregate scheduling mechanisms. Based
on these service curves the maximum end-to-end delays of
single Ô¨Çows xi (left-over Ô¨Çow) after being demultiplexed are
computable. In particular we discussed different scenarios of
multiple aggregated nodes - which are typical for practical
applications: Token bucket input Ô¨Çows and rate-latency service
curves together with the main scheduling principles FIFO and
Blind multiplexing. In a sense of case study we computed
corresponding formulas and compared the results w.r.t. ‚Äôbest
service curves‚Äô, i.e. the largest one and such producing the
shortest worst-case end-to-end delays, which have great prac-
tical beneÔ¨Åt for many hard real-time server systems.
In conclusion, for FIFO and Blind-scheduling of concate-
nated aggregation systems we computed service curves of
demultiplexed single Ô¨Çows and compared them in different
practice-relevant scenarios, which so far in the literature are
not given. With our formulas and comparisons for single end-
to-end service curves we move a step closer to allowing the
design of complex systems.
REFERENCES
[1] J.-Y. Le Boudec and P. Thiran, Network Calculus. Springer Verlag LNCS
2050, 2001.
[2] R. Cruz, ‚ÄúA calculus for network delay, part i: Network elements in
isolation,‚Äù IEEE Trans. Inform. Theory, vol. 37-1, pp. 114‚Äì131, 1991.
[3] A. Charny and J.-Y. Le Boudec, Delay Bounds in a Network with
Aggregate Scheduling.
Springer Verlag LNCS 1922, 2000.
[4] M. Fidler and V. Sander, ‚ÄúA parameter based admission control for
differentiated services networks,‚Äù Computer Networks, vol. 44, pp. 463‚Äì
479, 2004.
[5] J. Schmitt, F. Zdarsky, and I. Martinovic, ‚ÄúImproving Performance Bounds
in Feed-Forward Networks by Paying Multiplexing Only Once,‚Äù in Mea-
surements, Modelling and Evaluation of Computer and Communication
Systems(14th GI/ITG Conference), Dortmund, March 2008.
[6] U. Klehmet and K.-S. Hielscher, ‚ÄúStrictness of Rate-Latency Service
Curves,‚Äù in Data Communication Networking(3rd DCNETS Conference),
DCNET/ICE-B/OPTICS, page 75-78. SciTePress, Rome, July 2012.
116
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-256-1
ICNS 2013 : The Ninth International Conference on Networking and Services

