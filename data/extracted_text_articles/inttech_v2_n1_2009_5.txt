Congestion Control of a Single Router With an Active Queue Management
Yassine Ariba
Yann Labit
Fr´ed´eric Gouaisbaut
CNRS; LAAS; 7, avenue du Colonel Roche, F-31077 Toulouse, France.
Universit´e de Toulouse, UPS, INSA, INP, ISAE ; LAAS ; F-31077 Toulouse, France.
{yariba, ylabit, fgouaisb}@laas.fr
Abstract
Several works have shown the link between congestion
control in communication networks and feedback control
system. This paper is an extended version of [1] and pro-
poses the design of an Active Queue Management (AQM)
that ensures the congestion control stability. To this end,
tools from control theory, and especially in a time delay
systems framework, are considered. We aim at stabilizing
the Transmission Control Protocol (TCP) as well as the
queue length of the congested router. Furthermore, the
control mechanism is then completed to deal with the
stability issue under some non-responsive crossing trafﬁc
modeled as perturbation. Finally, a numerical example and
simulations via the Network Simulator NS support our
study.
Keywords: Active Queue Management, congestion control,
control theory, time delay system, networks.
I. Introduction
Congestion control consists in adjusting data ﬂow
rates sent by end users into the network based on the
network load status. Since the congestion avoidance algo-
rithm of Jacobson [2], it has motivated a huge amount of
work aiming at understanding the congestion phenomenon
and achieving better performances in terms of Quality
of Service (QoS). As a matter of fact, there has been a
growing recognition that the network itself must participate
in congestion control and ressource management [3], [4].
The AQM principle consists in dropping (or marking
when ECN, Explicit Congestion Notiﬁcation [5] option
is enabled) some packets before buffer saturates. Hence,
following the Additive-Increase Multiplicative-Decrease
(AIMD) behavior of TCP, sources reduce their congestion
window size avoiding then the full saturation of the router.
Basically, AQM support TCP for congestion avoidance
and feedback to the latter when trafﬁc is too heavy.
Indeed, an AQM drops/marks incoming packet with a
given probability related to a congestion index (such as
queue length or delays) allowing then a kind of control
on the buffer occupancy at routers. Various mechanisms
have been proposed in the literature such as Random
Early Detection (RED) [6], Random Early Marking (REM)
[7], Adaptive Virtual Queue (AVQ) [8] and many others
[9]. Their performances have been evaluated in [9] and
empirical studies have shown their effectiveness [4]. A
study proposed by [10] have redesigned the AQMs using
control theory and PI (Proportional and Integral) have been
developed in order to address the packet dropping strategy
issue. Then, using dynamical model of TCP developed
by [11], many researches have been devoted to deal with
congestion problem in a control theory framework (for
example see [12], [13], [9], [14] and references therein).
Nevertheless, most of these papers do not take into account
the delay and ensure the stability in closed-loop for all
possible delays which could be conservative in practice.
The study of congestion control in a time delay system
framework is not new and has been successfully exploited
(see for example [15], [16], [17], [18], [19]). The global
stability analysis of TCP has been addressed in [20], [15]
through the Lyapunov-Krasovskii theory. But no construc-
tive algorithm is proposed to embed a control on routers.
In [19], a delay dependent state feedback controller is
provided by compensation of the delay with a memory
feedback control. This latter methodology is interesting in
theory but hardly suitable in practice. At last, all these pa-
pers deal with the congestion control stability considering
constant delays requiring then restrictive assumptions.
In this paper, we focus in regulating buffer queue length
of a congested router as well as rate at which TCP sources
send data into the network. The proposed control has the
objectives to ensure QoS, to avoid severe congestion and
to maintain a prescribed Round Trip Time (RTT) with a
low delay jitter. Stability of communications, guaranteed
by an AQM, is proved through the Lyapunov method. It
is worthy to note that unlike most of the studies in the
literature, we take into account the time-varying nature
58
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

of the RTT. The packet dropping strategy computed by
the AQM is designed as a state feedback for time-varying
delay systems based on a recently developed Lyapunov-
Krasovskii functional [21]. Then, the methodology is ex-
tended to cope with additional non-responsive crossing
trafﬁcs (like for example UDP and ICMP). Indeed, non-
TCP trafﬁcs are not reactive to packet dropping and may
affect the equilibrium of the communications. Hence, the
second proposed control law stabilizes the TCP network
(queue length and rates) to a desired equilibrium in spite
of the presence of some non-responsive trafﬁcs, ensuring
then a level of QoS.
The paper is organized as follows. The second part
presents the model of a network supporting TCP and the
time delay system representation. Section III is dedicated
to the design of the AQM ensuring the stabilization of TCP.
Section IV presents application of the exposed theory and
simulation results using NS-2 [22].
Notations: For two symmetric matrices, A and B, A >
(≥) B means that A−B is (semi-) positive deﬁnite. AT de-
notes the transpose of A. 1n and 0m×n denote respectively
the identity matrix of size n and null matrix of size m×n.
If the context allows it, the dimensions of these matrices
are often omitted. At last, for a given matrix B ∈ Rm×n
such that rank(B) = r, we deﬁne B⊥ ∈ Rn×(n−r) the right
orthogonal complement of B by BB⊥ = 0.
II. Problem statement
This second section is dedicated to the modeling of
a network supporting TCP and the time delay system
representation.
A. The linearized ﬂuid-ﬂow model of TCP
We consider a network consisting of N homogeneous
TCP sources (i.e with the same propagation delay) con-
nected to destination nodes through a single router (see
Figure 1). The bottleneck link is shared by N ﬂows and
TCP applies the well known congestion avoidance algo-
rithm to cope with the phenomenon of congestion collapse
[2]. Many studies have been dedicated to the modeling
of TCP and its AIMD (Additive-Increase Multiplicative-
Decrease) behavior (see [12], [13], [14] and references
therein). We consider in this note the model (1) developed
by [11] widely used for automatic control purpose [12].
This latter may not capture with high accuracy the dynamic
behavior of TCP but its simplicity allows us to apply our
methodology. Let us consider the following model



˙W(t)
=
1
q(t)
C +Tp − W(t)W(t−R(t))
2 q(t−R(t))
C
+Tp p(t −R(t))
˙q(t)
=
W(t)
q(t)
C +Tp N −C +d(t)
(1)
Fig. 1. Network conﬁguration
where W(t) is the TCP window size, q(t) is the queue
length of the router buffer, R(t) is the round trip time
(RTT) and can be expressed as R(t) = q(t)/C +Tp. C, Tp
and N are parameters related to the network conﬁguration
and represent the transmission capacity of the router,
the propagation delay and the number of TCP sessions
respectively. The variable p is the marking/dropping prob-
ability of a packet (depending whether the ECN option, is
enabled, see [5]). In the mathematical model (1), we have
introduced an additional signal d(t) which models cross
trafﬁcs through the router, ﬁlling the buffer. These trafﬁcs
are not TCP based ﬂows (not modeled in TCP dynamics)
and can be viewed as perturbations since they are not
reactive to packets dropping (for example, UDP trafﬁc).
Note that the model (1) is non linear and thus difﬁcult
to handle. Consequently, deﬁning the set of equilibrium
points (W0,q0, p0) by
 ˙W = 0 ⇒ W 2
0 p0 = 2,
˙q = 0 ⇒ W0 = R0C
N , R0 = q0
C +Tp,
(2)
TCP model can be linearized as follows







δ ˙W(t) = − N
R2
0C

δW(t)+δW(t −R(t))

− 1
R2
0C

δq(t)−δq(t −R(t))

− R0C2
2N2 δp(t −R(t))
δ ˙q(t) = N
R0 δW(t)− 1
R0 δq(t)+d(t)
(3)
where δW .= W −W0, δq .= q−q0 and δp .= p− p0 are the
signals variations around the operating point [10]. This
approximation is valid as long as signals δW(t), δq(t) and
δp(t) remain small enough. Regulation is required in order
to regulate quantities δW(t) and δq(t) around zero (and
thus the congestion phenomenon), we have to control the
dropping probability δp(t). This probability is computed
the help of an AQM, playing thus the role of a controller. In
59
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

+
+
TCP
Dynamic
Dynamic
Queue
W(t)
Delay
K
Delay
p(t)
AQM
+
+
traffics
crossing
p0
W0
δq(t)
Fig. 2. Design of an AQM as a state feedback
this paper, this regulation problem is addressed in Section
III with the design of a stabilizing state feedback for
time-varying delay systems. Consequently, based on [23]
and considering a state feedback, the queue management
strategy of the drop probability will be expressed as (see
Figure 2):
p(t) = p0 +k1δW(t)+k2δq(t).
(4)
Scalars k1 and k2 are the components of the matrix gain
K which have to be designed to ensure the stability of the
overall system.
B. Time delay system model
The linearized ﬂuid ﬂow model of TCP (3) can be
rewritten as a time-varying delay system of the general
form:
˙x(t) = Ax(t)+Adx(t −R(t))+Bu(t −R(t))+Bdd(t) (5)
with
A=
"
− N
R2
0C
− 1
CR2
0
N
R0
− 1
R0
#
, Ad =
"
− N
R2
0C
1
R2
0C
0
0
#
,
B=
"
−C2R0
2N2
0
#
,Bd =
 0
1

,x(t)=
 δW(t)
δq(t)

.
(6)
x(t) is the state vector and represents the network vari-
ables status. A suitable control u(t) (processed by the
AQM) must be applied to system (5) in order to ensure
a stable congestion control. Section 3 is devoted to the
stability analysis of the interconnected system (system (5)
+ AQM). To this end, the Lyapunov Krasovskii method
(see for example [24]) is used which is an extension of the
traditional Lyapunov theory. It is an effective and practical
method which provides LMI (Linear Matrix Inequalities,
[25]) criteria easy to test.
III. Stabilization: design of an AQM
In Section II, the model of TCP/AQM has been formu-
lated in the general form of a time delay system. The sta-
bility of the congestion control requires the construction of
a controller which regulates the buffer queue length as well
as data ﬂows. In this section, we are ﬁrst going to present a
delay dependent stability condition for time delay systems
in general [21] (when u(t) and d(t) equal 0). Secondly,
based on this criterion, a design method that provides a
stabilizing state feedback is deduced. This control aims to
ensure the convergence of x(t) to 0 (thus the convergence
of W(t) and q(t) to W0 and q0 respectively).
A. Stability analysis of time delay systems
In this subsection, our goal is to derive a stability
condition which takes into account an upperbound of the
delay. The delay dependent case starts from a system
asymptotically stable without delays and looks for the
maximal delay that preserves stability. In this paper, we
prove the stability property of (5) with the Lyapunov
method which consists in looking for a positive function
V(x,t) such that its derivative ˙V(x,t) along the trajectories
of (5) is negative. This function V(x,t) can be viewed as an
energy function of the considered system which converges
to zero proving then the stability of the system.
Usually, the method involves Lyapunov-Krasovskii
functionals (see [24] and references therein), and more or
less tight techniques to bound some cross terms. These
choices of speciﬁc Lyapunov functionals and overbound-
ing techniques are the origin of conservatism. In the
present paper, we choose a recently developed Lyapunov-
Krasovskii functional [21] which deals with the stability of
time-varying delay systems and shows interesting results
in terms of conservatism reduction. The key idea is to
consider an extended state z(t) (10) as it has been proposed
in [26] in a robustness context. We make the following
assumptions on the delay:
0 ≤ h(t) ≤ hm and |˙h(t)| ≤ r,
(7)
where hm and r are upperbounds of the delay and the delay
derivative respectively. Given a time delay system:
˙ς(t) = Aς(t)+Adς(t −h(t))
(8)
where ς(t) ∈ Rn is the state vector, A, Ad ∈ Rn×n are known
constant matrices. Differentiating the system (8), we get:
¨ς(t) = A˙ς(t)+(1 − ˙h(t))Ad˙ς(t −h(t)).
60
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

Consider now the artiﬁcially augmented system
 ˙ς(t) = Aς(t)+Adς(t −h(t))
¨ς(t) = A˙ς(t)+(1 − ˙h(t))Ad˙ς(t −h(t))
(9)
composed of the original system (8) and its derivative.
Introducing the augmented state
z(t) =
 ς(t)
˙ς(t)

(10)
and specifying the relationship between the two compo-
nents of z(t) with the equality [1 0]˙z(t) = [0 1]z(t), we
get the new augmented system:
E ˙z(t) = ¯Az(t)+ ¯Adz(t −h(t)),
(11)
where
E =


1
0
0
1
1
0

,
¯A =


A
0
0
A
0
1

,
¯Ad =


Ad
0
0
(1 − ˙h(t))Ad
0
0

.
(12)
Finally, we obtain a descriptor linear time delay and
time varying system. To cope with the time-varying nature
of system (11) a method consists in embedding the time
varying parameters h and ˙h into an uncertain set, described
by a polytopic set and employing quadratic stability frame-
work (see [25] and [24]). The following Theorem is then
proposed (see [21] for more details)
Theorem 1: Given scalars hm > 0 and r ≥ 0, the linear
system (8) is asymptotically stable for any time-varying
delay h(t) satisfying (7) if there exists 2n × 2n matrices
P > 0, Q1 > 0, Q2 > 0, R > 0 and X ∈ R8n×3n such that
the following LMI holds for i = {1,2}:
Γ(i) +XS(i) +S(i)T XT < 0
(13)
where Γ(i) and S(i) (deﬁned in (18) and (19)) for i = 1,2
are the two vertices of Γ(˙h) ∈ R8n×8n (S(˙h) ∈ R3n×8n
respectively), replacing the term ˙h(t) by ri. ri, i = {1,2}
corresponding to the bounds of ˙h(t): r1 = r and r2 = −r.
Proof : We consider the following Lyapunov-Krasovskii
functional associated with the augmented state vector z(t):
V(zt) =
zT
t (0)Pzt(0)+
0R
−h(t)
zT
t (θ)Q1zt(θ)dθ
+
0R
−hm
zT
t (θ)Q2zt(θ)dθ
+
tR
t−hm
tR
θ
˙zT (s)R˙z(s)dsdθ.
(14)
Remark that since P, Q1, Q2, R are positive deﬁnite, we
can conclude that for some ε > 0, the Lyapunov-Krasovskii
functional condition V(xt) ≥ ε
xt(0)
 is satisﬁed [24]. The
derivative along the trajectories of (11) leads to
˙V(zt)
=
2zT(t)P˙z(t)+zT(t)Q1z(t)
−(1 − ˙h(t))zT (t −h(t))Q1z(t −h(t))
+zT(t)Q2z(t)−zT(t −hm)Q2z(t −hm)
+hm˙zT(t)R˙z(t)−
tR
t−hm
˙zT (θ)R˙z(θ)dθ.
(15)
As
noted
in
[27],
the
derivative
of
R t
t−hm
R t
θ ˙zT(s)R˙z(s)dsdθ
is
often
estimated
as
hm˙zT(t)R˙z(t) −
R t
t−h(t) ˙zT(θ)R˙z(θ)dθ
and
the
term
−
R t−h(t)
t−hm ˙zT(θ)R˙z(θ)dθ
is
ignored,
which
may
lead
to considerable conservatism. Hence, the last term of (15)
can be separated in two parts:
−
tR
t−hm
˙zT(θ)R˙z(θ)dθ
=
−
t−h(t)
R
t−hm
˙zT(θ)R˙z(θ)dθ
−
tR
t−h(t)
˙zT(θ)R˙z(θ)dθ.
(16)
Using the Jensen’s inequality [24], (16) can be bounded
as follow:
−
t−h(t)
R
t−hm
˙zT (θ)R˙z(θ)dθ−
tR
t−h(t)
˙zT(θ)R˙z(θ)dθ
<
−vT(t)
R
hm−h(t)v(t)−wT(t) R
h(t)w(t)
<
−vT(t) R
hm v(t)−wT(t) R
hm w(t)
with
v(t)
= z(t −h(t))−z(t −hm),
w(t)
= z(t)−z(t −h(t)).
Therefore, we get ˙V(zt) < ψT(t)Γ(˙h)ψ(t) with
ψ(t) =


˙z(t)
z(t)
z(t −h(t))
z(t −hm)

.
(17)
Γ(˙h) =


hmR
P
0
0
P
T
1
hm R
0
0
1
hm R
U
1
hm R
0
0
1
hm R
V


(18)
and
T
=
Q1 +Q2 − 1
hm R,
U
=
−(1 − ˙h(t))Q1 − 2
hm R,
V
=
− 1
hm R−Q2.
61
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

So, the system (11) is asymptotically stable if for all
ψ(t) such that S(˙h)ψ(t) = 0 with
S(˙h) =
 −E
¯A
¯Ad
0 
,
(19)
the inequality ψ(t)TΓ(˙h)ψ(t) < 0 holds. Using Finsler
lemma [28], this is equivalent to
Γ(˙h)+XS(˙h)+ST(˙h)XT < 0.
(20)
At this stage, assume that ˙h(t) is not precisely
known but varies between a lower and upper bound, ˙h(t) ∈
[−r,r]. Since this uncertain parameter appears linearly in
(20), the uncertain set can be described by a polytope [24].
The vertices of this set can be calculated by setting the
parameter to either lower or upper limit. The inequality
(20) can then be rewritten as follow:
2
∑
i=1
αiΓ(i) +X
2
∑
i=1
αiS(i) +
2
∑
i=1
αiS(i)T XT < 0,
(21)
where αi(t) ∈ [0,1], ∑2
i=1 αi(t) = 1 and Γ(i) (S(i)), i = 1,2
are the two vertices of the uncertain matrix Γ(˙h) (S(˙h)
respectively) for ˙h(t) ∈ [−r,r]. Considering the quadratic
stability framework [25], condition (21) is equivalent to
Γ(i) +XS(i) +S(i)TXT < 0, i = 1,2.
(22)
Thus, the inequality (20) has to be veriﬁed only
on its vertices (22). Finally, the asymptotic stability of
system (11) is guaranteed if the two LMI (22) are feasible
at the same time. For any initial conditions, the whole
state z(t) converges asymptotically to zero. Its components
ς(t) converge as well. The original system (8) is thus
asymptotically stable.
Remark 1: Note that Theorem 1 provides a delay de-
pendent stability condition. It means that if condition (13)
holds for hm1 then it still holds for any hm2 ≤ hm1 [21].
B. A ﬁrst result on synthesis
In the previous section, a general stability condition for
time-varying delay systems has been introduced. We aim
now at using this latter result for the considered issue, es-
tablished in Section II. Applying the delayed state feedback
(4) (AQM mechanism) on the system (5) (TCP+router),
the resulting feedback system can be reduced to a system
of the form (8). Hence, given the stability condition (13)
and the interconnected system (5) combined with (4) (in
this subsection, the disturbance is not taken into account
d(t) = 0), the following Theorem is obtained.
Theorem 2: Given scalars hm > 0 and r ≥, if there exist
symmetric positive deﬁnite matrices P, R, Q1, Q2 ∈ R2n×2n,
a matrix X ∈ R8n×3n and a matrix K ∈ R1×n such that
Γ(i) +XS(i) +S(i)T XT < 0
(23)
then, the system (5) (with d(t) = 0) is stabilized by the
control law u(t) = Kx(t) for any time-varying delay R(t)
satisfying 0 ≤ R(t) ≤ hm and ˙R(t) ≤ r. Γ(i) and S(i) (deﬁned
in (18) and (25)) for i = 1,2 are the two vertices of Γ( ˙R) ∈
R8n×8n (S( ˙R) ∈ R3n×8n respectively), replacing the term
˙R(t) by ri. ri, i = {1,2} corresponding to the bounds of
˙R(t): r1 = r and r2 = −r.
Proof : Consider system (5) with d(t) = 0 and controlled
by the state feedback (4), can be expressed as
˙x(t) = Ax(t)+ ˘Adx(t −R(t)),
(24)
where ˘Ad = Ad +BK and A, Ad and B are deﬁned as (6).
Then, Theorem 1 can be applied on the interconnected
system (24). Following the same idea exposed in Section
III-A Theorem 2 is derived considering now S( ˙R(h))ξ(t) =
0 where
S( ˙R(h)) =

−E
ˆA
ˆAd
0

,
(25)
with
E =


1
0
0
1
1
0

,
ˆA =


A
0
0
A
0
1

,
ˆAd =


Ad +BK
0
0
(1 − ˙R(t))(Ad +BK)
0
0

,
ξ(t) =


˙z(t)
z(t)
z(t −R(t))
z(t −hm)

.
Thus, the stability condition (23) of Theorem 2 enables
the design of gains k1 and k2. This condition is formulated
as a matrix inequality which can be systematically solved
with an appropriate semi-deﬁnite programming solver in
Matlab [29] and Yalmip [30].
Remark 2: Regarding the design problem, since K is a
decision variable condition (23) is bilinear with X and
a global optimal solution cannot be found. Nevertheless,
the feasibility problem can still be tested to provide a
solution by either using a BMI solver [31] or developping
a relaxation algorithm based on LMI [32].
C. State feedback with an integral action
The ﬁrst proposed method, in Section III-B, for the
design of an AQM ensures the stability of communications
around an equilibrium point (2). However, this equilibrium
may be perturbed when non-responsive crossing trafﬁcs
are introduced. Indeed, these additional non-TCP (so non-
modeled) ﬂows ﬁll up the buffer and the AQM may not
control the congestion as expected. In order to cope with
62
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

+
+
TCP
Dynamic
Dynamic
Queue
W(t)
Delay
K
1/s
u(t)
traffics
crossing
p(t)
+
+
Delay
AQM
p0
W0
δq(t)
Fig. 3. Design of an AQM as a dynamic state
feedback
this phenomenon, the AQM is completed with an integral
action well known to be able to reject disturbances. The
idea is to apply the same design methodology, exposed
in Section III-B, over an augmented time delay system
composed of the original system (5) and an integrator (see
Figure 3). The augmented system has the following form
˙η =


A
0
0
0
1
0

η(t)+


Ad
0
0
0
0
0

η(t −h)
+
 B
0

δp(t −h)+
 Bd
0

d(t)
(26)
with ηT = [δW
δq
u]T is the extended state variable.
Then, the global control which correspond to our AQM,
is a dynamic state feedback
δp(t) = K


δW(t)
δq(t)
u(t)

 = k1δW(t)+k2δq(t)+k3
Z t
0 δq(t)dt.
(27)
In our problem, non modeled crossing trafﬁcs d(t) such
as UDP based applications are introduced as exogenous
signals (see Figures 2 and 3). The queue dynamic, the
second equation of (3), is affected by this additional
signals. Considering equations (27) and (3), we obtain the
transfer function T(s) from the disturbance D(s) to the
queue size (about the operating point) ∆Q(s):
T(s) =
b(s)s
(s+ 1
R0 )sb(s)+c(s),
(28)
with
a(s) = −R0C2
2N2 e−hs,
b(s) = s+ N
R2
0C(1 +e−hs)+a(s)k1
c(s) = N
R0
 s
R2
0C(1 −e−hs)+a(s)sk2 +a(s)k3

.
It can be easily shown that for a step type disturbance, the
queue size still converges to its equilibrium. The proposed
control law (27) is thus suitable to cope with the effects of
non responsive trafﬁcs. Then, k1, k2 and k3 are designed
applying Theorem 2 to the augmented system (26).
D. Estimation of the congestion window
In these last two parts, a state feedback synthesis has
been performed for the congestion control of TCP ﬂows
and the management of the router buffer. So far we have
considered that the whole state was accessible. However,
although the congestion window can be measured in NS,
it is not the case in reality. That’s why, in this paper it is
proposed to estimate this latter variable using the aggregate
ﬂow incoming to the router buffer. The sending rate of
single TCP source can be approximated by congestion
window size over the RTT. This latter approximation is
valid as long as the model does not describe the com-
munication at a ﬁner time scale than few round trip time
(see [12]). Consequently, the whole incoming rate observed
by the router is r(t) = NW(t)/R(t). The measure of the
aggregate ﬂow has already been proposed and successfully
exploited in [8], [19] for the realization of the AVQ and a
PID type AQM respectively. Moreover, other works have
also developed tools that enable such measurements in
anomaly detection framework (see for example [33], [34]).
It is worth to note that queue-based AQMs like RED or
PI can be assimilated as output feedbacks according to
the queue length [35]. Conversely, AVQ can be viewed
as an output feedback with respect to the aggregate ﬂow,
belonging thus to the rate-based AQM class. The proposed
state feedbacks in Section III-B and III-C combine both
informations and we expect thus to apply a relevant control
on the communications.
IV. NS-2 simulations
This section is devoted to elucidate the proposed
methodology via an illustrative example and simulations
with NS-2 [22]. Consider a network consisting of N = 60
communicating pairs through a congested router as illus-
trated on Figure 1. The transport protocol is TCP-New
Reno without ECN marking and the propagation time is
Tp = 200 ms. Since the link capacity C = 3750 packets/s
63
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

(corresponds to a 15 Mb/s link with average packet size
500 bytes) at the router is shared among all users, there
is congestion and the classical drop tail mechanism drops
packets when buffer overﬂows (the maximal buffer size is
set to 800 pkts). Hence, the queue length at the router
shows large oscillations and reaches oftenly the buffer
saturation (see Figure 4). Now, we aim at regulating the
0
50
100
150
0
100
200
300
400
500
600
700
800
Time (s)
queuesize (pkts)
Fig. 4. Time evolution of the queue length,
dropping strategy is the traditional mecha-
nism: DropTail
queue length at the router to a desired level: q0 = 175
packets. To this end, an AQM is embedded into the router
in order to control the congestion phenomenon. Different
AQMs have been simulated and their conﬁguration pa-
rameters are shown in table I. Regarding to the design
of the proposed AQM, given the network parameters (N,
C and Tp) and the speciﬁcation on q0, the equilibrium
point (2) can be derived: W0 = 15 packets, p0 = 0.008
and R0 = 0.246 seconds. Secondly, according to the design
criteria presented in Section III, the state feedback matrices
KSF = 10−3

0.6103
0.0209

KSFI = 10−4


26.28
0.303
0.464


(29)
are calculated based on control laws (4) and (27) respec-
tively.
On Figure 5, the time evolutions of the queue length for
different AQMs are shown. In this ﬁrst simulation, RED,
REM, PI and our state feedback (SF: control law (4)) have
been tested for congestion control under long-lived TCP
ﬂow such that ftp connections. It can be observed that our
SF is able to regulate efﬁciently the buffer:
RED
minth=150,maxth=700,
wQ=13.3e-06,maxp=0.1, fs=160Hz
REM
γ=0.001, Φ=1.001,qref =175pkt
PI
a=1.822e-05,b=1.816e-05,
qref =175pkt, fs=160Hz
SF
gains K (29), equilibrium point (2)
TABLE I. Adjustment of parameter setting of
each AQM
• the queue length reaches the steady state fastly,
• it maintains the size close to its equilibrium value q0,
ensuring then very low oscillations,
• this control which guarantees a stable queue length,
allows to keep a queueing delay with very little
variations, thus low delay jitter (see Figure 6).
Then, if non-responsive cross trafﬁcs are introduced,
the queue is affected and may disturb the AQM control
behavior. Considering the previous controller SF (KSF
in (29)), we have carried out a new simulation (Figure
7) introducing additional trafﬁcs composed of 7 sources
(CBR applications over UDP protocol) sending ﬂows of
1Mbytes/s between t = 50s and t = 100s. It appears that the
queue length is still stable but not regulated at the desired
level q0 anymore. That’s why, in Section III the ﬁrst control
law (4) has been completed with an integral action to tackle
the steady state error in presence of non-responsive CBR
trafﬁcs. Then, the same simulation is performed using the
AQM KSFI (29) from the control law (27). Figure 8 shows
the different results for each AQM. In addition, table II
summarizes the beneﬁts of the KSFI AQMs providing few
statistical characteristics. These characteristics are mean,
standard deviation (Std) and the square of the variation
coefﬁcient (CV2 = (Std/mean)2). This latter calculation
assess the relative dispersion of the queue length around
its mean. The mean points out the control precision and
the standard deviation shows the ability of the AQM to
keep the queue size close to its equilibrium. In table II,
we can observe that KSFI maintains a very good control
on the buffer queue during the whole simulation. Hence,
it enable to ensure QoS in terms of RTT (set to a desired
value) and delay jitter (see Figure 9). Although PI reject
the perturbation quite fast, extensive ﬂuctuations appear
during the steady state. Note that RED allows also a good
regulation at the steady state but its response time is quite
slow. Moreover, this latter is well known to be difﬁcult
to tune [36], [37] whereas the proposed AQM can be
easily and systematically derived solving the inequality of
Theorem 2 with an appropriate semi-deﬁnite programming
solver (as penbmi [31], sedumi [38] or lmilab in Matlab
[29]).
64
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

AQM
RED
REM
PI
KSFI
Mean
235.7
177.4
178.8
176.7
Std
112.4
144.74
89.83
71.19
CV2
0.227
0.665
0.252
0.162
Period
before
additional
trafﬁc
AQM
RED
REM
PI
KSFI
Mean
270.3
212.4
199.4
178.3
Std
57.39
101.5
79.05
40.42
CV2
0.045
0.228
0.1972
0.051
Period
during
additional
trafﬁc
AQM
RED
REM
PI
KSFI
Mean
201.4
168.4
154.1
177.8
Std
22.24
101.02
64.95
36.64
CV2
0.012
0.360
0.178
0.042
Period
after
additional
trafﬁc
TABLE II. Statistical characteristics for differ-
ent AQMs (units are pkts) at different periods
(before, during and after the introduction of
CBR trafﬁc)
V. Conclusion and Future Work
In this work, we have proposed the design of an AQM
for the congestion control in communications networks.
The developed AQM has been constructed using a state
feedback control law. An integral action has been added
to reject the steady state error in spite of disturbance, d(t)
(non-responsive crossing trafﬁc). Finally, the AQM has
been validated using NS simulator. Future works consist
in the improvement of control laws and extension to larger
networks (with TCP sources at varying hop-distances and
using short-term/long-term ﬂows). Validation on emulation
platform (experimental part) will be also studied.
References
[1] Y. Ariba, Y. Labit, and F. Gouaisbaut, “Design and performance
evaluation of a state-space based aqm,” in IARIA International
Conference on Communication Theory, Reliability, and Quality of
Service (CTRQ 2008), Jul. 2008, pp. 89–94.
[2] V. Jacobson, “Congestion avoidance and control,” in ACM SIG-
COMM, Stanford, CA, Aug. 1988, pp. 314–329.
[3] B. Braden, D. Clark, and J. Crowcroft, “Recommendations on queue
management and congestion avoidance in the internet,” RFC 2309,
Apr. 1998.
[4] L. Le, J. Aikat, K. Jeffay, and F. Donelson Smith, “The effects of ac-
tive queue management on web performance,” in ACM SIGCOMM,
Aug. 2003, pp. 265–276.
[5] K. K. Ramakrishnan and S. Floyd, “A proposal to add explicit
congestion notiﬁcation (ecn) to ip,” RFC 2481, Jan. 1999.
[6] S. Floyd and V. Jacobson, “Random early detection gateways for
congestion avoidance,” IEEE/ACM Transactions on Networking,
vol. 1, pp. 397–413, Aug. 1993.
[7] S. Athuraliya, D. Lapsley, and S. Low, “An enhanced random early
marking algorithm for internet ﬂow control,” in IEEE INFOCOM,
Dec. 2000, pp. 1425–1434.
0
10
20
30
40
50
60
70
80
0
200
400
600
800
SF
0
10
20
30
40
50
60
70
80
0
200
400
600
800
PI
0
10
20
30
40
50
60
70
80
0
200
400
600
800
REM
0
10
20
30
40
50
60
70
80
0
200
400
600
800
time (s)
RED
Fig. 5. Time evolution of the queue length,
AQM = {KSF,PI,REM,RED}
[8] S. Kunniyur and R. Srikant, “Analysis and design of an adaptive
virtual queue (avq) algorithm for active queue management,” in
ACM SIGCOMM, San Diego, CA, USA, aug 2001, pp. 123–134.
[9] S. Ryu, C. Rump, and C. Qiao, “Advances in active queue man-
agement (aqm) based tcp congestion control,” Telecommunication
Systems, vol. 4, pp. 317–351, 2004.
[10] C. V. Hollot, V. Misra, D. Towsley, and W. Gong, “Analysis and
design of controllers for aqm routers supporting tcp ﬂows,” IEEE
Trans. on Automat. Control, vol. 47, pp. 945–959, Jun. 2002.
[11] V. Misra, W. Gong, and D. Towsley, “Fluid-based analysis of a
network of aqm routers supporting tcp ﬂows with an application to
red,” in ACM SIGCOMM, Aug. 2000, pp. 151–160.
[12] H. S. Low, F. Paganini, and J. Doyle, Internet Congestion Control.
IEEE Control Systems Magazine, Feb 2002, vol. 22, pp. 28–43.
[13] R. Srikant, The Mathematics of Internet Congestion Control.
Birkhauser, 2004.
[14] S. Tarbouriech, C. T. Abdallah, and J. Chiasson, Advances in
communication Control Networks.
Springer, 2005.
[15] A. Papachristodoulou, “Global stability of a tcp/aqm protocol for
arbitrary networks with delay,” in IEEE CDC 2004, Dec. 2004, pp.
1029–1034.
[16] C. Chen, Y. Hung, T. Liao, and J. Yan, “Design of robust active
queue management controllers for a class of tcp communication
networks,” Information Sciences., vol. 177, no. 19, pp. 4059–4071,
2007.
[17] S. Manfredi, M. di Bernardo, and F. Garofalo, “Robust output
65
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

0
10
20
30
40
50
60
70
80
150
200
250
300
350
400
SF
0
10
20
30
40
50
60
70
80
150
200
250
300
350
400
PI
0
10
20
30
40
50
60
70
80
150
200
250
300
350
400
REM
0
10
20
30
40
50
60
70
80
150
200
250
300
350
400
time (s)
RED
Fig. 6. Time evolution of the RTT, AQM =
{KSF,PI,REM,RED}
feedback active queue management control in tcp networks,” in
IEEE Conference on Decision and Control, Dec. 2004, pp. 1004–
1009.
[18] D. Wang and C. V. Hollot, “Robust analysis and design of con-
trollers for a single tcp ﬂow,” in IEEE International Conference on
Communication Technology (ICCT), vol. 1, Apr. 2003, pp. 276–280.
[19] K. B. Kim, “Design of feedback controls supporting tcp based on
the state space approach,” in IEEE Trans. on Automat. Control, vol.
51 (7), Jul. 2006.
[20] W. Michiels, D. Melchior-Aguilar, and S. Niculescu, “Stability
analysis of some classes of tcp/aqm networks,” in International
Journal of Control, vol. 79 (9), Sep. 2006, pp. 1136–1144.
[21] Y. Ariba and F. Gouaisbaut, “Delay-dependent stability analysis of
linear systems with time-varying delay,” in IEEE Conference on
Decision and Control, Dec. 2007, pp. 2053–2058.
[22] K. Fall and K. Varadhan, “The ns manual,” notes and documentation
on the software ns2-simulator, 2002, uRL: www.isi.edu/nsnam/ns/.
[23] C. V. Hollot, V. Misra, D. Towsley, and W. Gong, “On designing
improved controllers for aqm routers supporting tcp ﬂows,” in IEEE
INFOCOM, vol. 3, Apr. 2001, pp. 1726–1734.
[24] K. Gu, V. L. Kharitonov, and J. Chen, Stability of Time-Delay
Systems.
Birkh¨auser Boston, 2003, control engineering.
[25] S. Boyd, L. El Ghaoui, E. Feron, and V. Balakrishnan, Linear Matrix
Inequalities in System and Control Theory.
Philadelphia, USA:
SIAM, 1994, in Studies in Applied Mathematics, vol.15.
[26] Y. Ebihara, D. Peaucelle, D. Arzelier, and T. Hagiwara, “Robust
0
50
100
150
0
100
200
300
400
500
600
700
800
time (s)
queuesize (pkts)
Fig. 7. Time evolution of the queue length,
AQM = KSF under UDP crossing trafﬁc
performance analysis of linear time-invariant uncertain systems by
taking higher-order time-derivatives of the states,” in 44th IEEE
Conference on Decision and Control and the European Control
Conference, Seville, Spain, Dec. 2005.
[27] Y. He, Q. G. Wang, C. Lin, and M. Wu, “Delay-range-dependent
stability for systems with time-varying delay,” Automatica, vol. 43,
pp. 371–376, 2007.
[28] R. Skelton, T. Iwazaki, and K. Grigoriadis, A uniﬁed algebric
approach to linear control design.
Taylor and Francis series in
systems and control, 1998.
[29] Mathworks, “Matlab - the language of technical computing,”
http://www.mathworks.fr/products/matlab/.
[30] J.
Lfberg,
“Yalmip
:
A
toolbox
for
modeling
and
optimization
in
MATLAB,”
in
Proceedings
of
the
CACSD
Conference,
Taipei,
Taiwan,
2004.
[Online].
Available:
http://control.ee.ethz.ch/ joloef/yalmip.php
[31] M. Kocvara and M. Stingl, “bilinear matrix inequalities: Penbmi,”
PENOPT GbR, http://www.penopt.com/.
[32] Y. Labit, Y. Ariba, and F. Gouaisbaut, “Design of lyapunov based
controllers as tcp aqm,” in 2nd IEEE Workshop on Feedback control
implementation and design in computing systems and networks
(FeBID’07), Munich, Germany, May 2007, pp. 45–50.
[33] P. Barford and D. Plonka, “Characteristics of network trafﬁc ﬂow
anomalies,” Nov. 2001.
[34] S. S. Kim and A. L. N. Reddy, “Netviewer: a network trafﬁc
visualization and analysis tool,” in LISA’05: Proceedings of the 19th
conference on Large Installation System Administration Conference.
USENIX Association, 2005, pp. 185–196.
[35] D. Supratim and R. Srikant, “Rate-based versus queue-based models
of congestion control,” IEEE Trans. on Automat. Control, vol. 51,
pp. 606–619, Apr. 2006.
[36] M. Christiansen, K. Jeffay, D. Ott, and F. Smith, “Tuning red for
web trafﬁc,” in ACM/SIGCOM, 2000, pp. 139–150.
[37] T. Bonald, M. May, and J.-C. Bolot, “Analytic evaluation of red
performance,” in IEEE INFOCOM, vol. 3, Mar. 2000, pp. 1415–
1424.
[38] J. Sturm, “Using sedumi 1.02, a matlab toolbox for optimiza-
tion over symmetric cones,” Optimization Methods and Soft-
ware 625-653, Special issue on Interior Point Methods, 1999,
http://sedumi.mcmaster.ca/.
66
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

0
50
100
150
0
200
400
600
800
SFI
0
50
100
150
0
200
400
600
800
PI
0
50
100
150
0
200
400
600
800
REM
0
50
100
150
0
200
400
600
800
time (s)
RED
Fig. 8. Time evolution of the queue length,
AQM = {KSFI,PI,REM,RED} under UDP cross-
ing trafﬁc
0
50
100
150
200
300
400
500
SFI
0
50
100
150
200
300
400
500
PI
0
50
100
150
200
300
400
500
REM
0
50
100
150
200
300
400
500
time (s)
RED
Fig. 9. Time evolution of the RTT, AQM =
{KSFI,PI,REM,RED} under UDP crossing traf-
ﬁc
67
International Journal On Advances in Internet Technology, vol 2 no 1, year 2009, http://www.iariajournals.org/internet_technology/

