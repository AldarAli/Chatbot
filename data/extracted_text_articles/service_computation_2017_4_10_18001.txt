Resource Description for Additive Manufacturing –
Supporting Scheduling and Provisioning
Felix W. Baumann, Julian R. Eichhoff, and Dieter Roller
Institute of Computer-aided Product Development Systems
University of Stuttgart
Email: ﬁrstname.lastname@informatik.uni-stuttgart.de
Abstract—For an enhanced automated usage of 3D-printers in
case of multiple available 3D-printers, such as in Cloud Man-
ufacturing or Cloud Printing services, the requirement arises
to select and provision suitable resources for user provided
model ﬁles. As Additive Manufacturing (AM) consists of a
number of different technologies, ranging from fabrication using
thermoplastic extrusion to electron beam based curing of metal
powder, the necessity is evident to enable users to describe
limitations, capabilities, interfaces and requirements for a these
resources in a machine readable and processable format. This
resource description enables the discovery and provisioning
of appropriate resources within a service composition, where
3D-printing resources are regarded as manufacturing services
themselves. In order to compose a service from these hard-
ware resources, the comprehensive description of such resources
must be provided. With this work, we provide an abstract
and universal capability description framework of such 3D-
printing resources. The framework consists of an ontology for
the resources of the AM Domain, a ﬂexible XML schema and
the implementation in a cloud-based 3D-printing system. With
this resource description both hard- and software resources are
universally deﬁned. Applied to systems with multiple 3D-printers,
a scheduling component is capable of resource discovery. This
selection is based on the matching of described capabilities,
status information and derived requirements from speciﬁc 3D-
printing job deﬁnitions.
Keywords—3D Printing; Additive Manufacturing; Resource De-
scription; Capability Description; Service Selection; Service Dis-
covery
I. INTRODUCTION
For the efﬁcient usage of 3D-printing resources in Cloud
Manufacturing (CM) scenarios, it is necessary to schedule the
existing resources. This scheduling is in accordance with the
requirements of the users. 3D-printing resources are mainly
3D-printers of various types, makes and models. These 3D-
printers are characterised by differing capabilities and con-
straints for their usage. In a cloud printing environment where
these resources are considered part of a service, it is possible
to compose them into new services to achieve tasks such the
efﬁcient execution of 3D-printing requests. This work offers
a practical service composition framework and tool for the
description required to establish service compositions within
a 3D-printing service in the domain of Additive Manufacturing
(AM). For this work, the applicability of the proposed resource
description is analysed.
As 3D-printing encapsulates a number of different technolo-
gies, ranging from thermoplastic extrusion fabrication, over
photopolymerisation to other methods, it is a prerequisite to
understand these technologies. One thermoplastic extrusion
based method is called Fused Deposition Modeling (FDM)
(also Fused Filament Fabrication or Free Form Fabrication
(FFF)). Fabrication on the basis of curing of photopolymers
in a vat is called Stereolithography (SLA). Laser-based fabri-
cation methods are either Selective Laser Melting (SLM) or
Direct Metal Laser Sintering (DMLS). Other methods exist to
create physical objects directly from digital models, such as
Laminated Object Manufacturing (LOM). Besides the under-
standing of these technologies and methods, it is important
to be able to describe them in a comprehensive and machine-
understandable way. Furthermore, it is important to express the
inherent and derived capabilities and restrictions of these tech-
nologies and machines. The different technologies do not only
differ in the materials they are able to process but also in the
quality that is achievable. They further differ in the geometric
and structural features they can reproduce, in the cost they
effect, and the means they are controlled by or programmed
with. For the automated usage in a distributed service scenario,
with a number of different 3D-printing resources involved, the
service must be able to select an appropriate device or devices
for any given user submitted task.
For the hardware providers, it is beneﬁcial if their equipment
is utilized to a high degree. This is required in order to
amortise their assets on time and also to be ecologically
sound [1]. For the users, such an automated and swift resource
allocation is pertinent. This equates to a reduced turnaround
time and also the promise of higher product quality due to
optimum capability and requirements matching. For service
operators, the automated resource allocation is an intrinsically
motivated requirement for the operation of such a service.
With this work, a solution for the description of differ-
ing capabilities, restraints and requirements of various 3D-
printing resources is provided. This solution provides an ex-
tensible, ﬂexible, comprehensive and usable description format
for the use in AM scenarios. The solution combines existing
approaches for the description of resource capabilities and
extends these for the usage in 3D-printing.
This work is motivated by the following four use cases:
3D-printer selection: The resource description, applied to a
database of commercially available 3D-printers can serve
as a purchasing guide for end-users/consumers or other
potential buyers of 3D-printers [2], [3]. This will espe-
cially be the case if the information is readily available as
41
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

a Web-service and supports pro-active user-questioning,
e.g., a wizard.
Automated facility planning: In future modular factory de-
signs, the dynamic reconﬁguration of the shop ﬂoor [4]
is becoming relevant. With a machine readable resource
description, layouting and planning software can place
the manufacturing resources at an appropriate location.
Scheduling in 3D-printing services: In this use case the re-
source description is the foundation for the scheduling
algorithm that selects the most appropriate available 3D-
printing resource for any given processing request, based
on the constraints and preferences provided by the user
and derived from the model data [5], [6].
Recommender systems for CAD development: Based
on the resource description a software system can
support
Computer
Aided
Design
(CAD)
designers
with information and recommendations for geometrical
and
topological
features
within
models
that
are
manufacturable with 3D-printing resources available to
a company.
This work is structured as follows: Starting with related
work in Sect. II, a review of existing publications is performed.
In Sect. III, the approach for the resource description is
described, its underlying concepts and sources as well as the
implementation and evaluation. In the Sect. IV, the implemen-
tation and its results are discussed and analysed. Lastly, the
Sect. V provides a summary of this work.
II. RELATED WORK
In the work by Pryor [7], the implementation of a 3D-
printing service within an academic library is described. The
system consists of two low-cost hobbyist 3D-printers and a
3D scanner. Of relevance to this work is the description of the
workﬂow for the user handling. Pryor describes the processing
workﬂow as purely manual with the data being deployed by
the users either via a web form or email. The library staff
performs sanity checking, pre-processing (i.e., positioning,
slicing, machine code generation) and manual scheduling of
the 3D-printer resource. The text does not provide an analysis
of the time required for the staff to perform these tasks.
In the article by Vichare et al. [8], the authors propose
a Uniﬁed Manufacturing Resource Model (UMRM) for the
resource description of machines within the manufacturing
domain. Speciﬁcally, the authors aim to describe Computer
Numeric Control (CNC) machines and their associated tools
in a uniﬁed way to represent the capabilities of these systems
in their entirety. Their work provides a method to describe
a CNC machine in an abstract sense for use in software,
e.g., for simulations. As part of the collaborative peer-robot
control system described in the work by Yao et al. [9],
an ontology for a resource description is partially described
on which we build our work. This ontology distinguishes
between hardware and software resources, as well as capability
and status description. The authors provide an exemplary
Extensible Markup Language (XML) schema deﬁnition for
such a resource description on which we extend upon. The
3D Printer Description File Format Speciﬁcation (3PP) by
Adobe [10] is very relevant to this work, as it describes the 3D-
printer’s capabilities in XML format as deemed necessary by
Adobe, presumably for the application within their software.
This work contains an extensive listing of possible attributes
relevant to a resource description on which we base our
work. The 3PP format is limited to FDM 3D-printers. The
deﬁnition includes hardware and material description but only
partially caters for software support. In the publication by
Chen et al. [11], the authors provide another approach to
the problem of model-fabrication resource mismatch by the
introduction on an abstract intermediary speciﬁcation format.
The authors propose this reducer-tuner model to abstract
design implementations for the application to a variety of
3D-printers whereas our work proposes a 3D-printer resource
description that enables the matching of suitable machines
to speciﬁc model ﬁles. In the work by Dong et al. [12],
the problem of scheduling in AM is handled by a rule-
based management of autonomous nodes, i.e., 3D-printers.
This system is based on an ontology for 3D-printing of which
some excerpts are presented in this work. From this example,
our work is inﬂuenced and extends on missing attributes.
Yadekar et al. [13] propose a taxonomy for CM systems
that are closely related to AM. This taxonomy is focused
on the concept of uncertainty and only brieﬂy discusses
the taxonomical components that deﬁne the manufacturing
resources. The main distinction for the authors is the division
into soft and hard resource groups. In the work by Mortara et
al. [14], a classiﬁcation scheme for direct writing technologies,
i.e., AM, is proposed. The authors deﬁne the scheme for three
dimensions, namely technology, application, and materials.
The properties of speciﬁc materials are discussed exemplary
in brief. A listing of potential properties for the varying
technologies and materials is missing.
III. MATERIALS AND METHODS
From existing literature and expertise, we construct an
ontology that is described in the following section. This
ontology is the basis for the extension of the properties
proposed that are relevant to the domain of AM. In this work,
we exclude concepts like business process related capabilities,
and knowledge and abstract ability related mapping, i.e., it
is not possible to express certain abilities of people, teams
or companies, e.g., the level of knowledge for the design of
objects for AM. The properties are derived from literature
and 3D-printer documentations. The following requirements
are expressed to guide the generation of the ontology and
properties list:
RQ1 The ontology and properties list must be ﬂexible and
extensible. Flexibility means that for speciﬁc application
scenarios where only subsets of properties and relations
are of interest, these must be expressible within the
proposed ontology or resource description. Extensibility
denotes the property to be able to incorporate future, cur-
rently unforeseen, properties of technology and materials.
RQ2 The resource description must be able to reﬂect tem-
poral, local and other ranges of validity and restrictions.
Conditional validity is to be reﬂected. With this require-
ment we reﬂect the necessity that certain properties, e.g.,
42
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

material strength, are only valid and guaranteed for a
certain period.
RQ3 The resource description must be able to distinguish
between general concepts of things, e.g., 3D-printers and
materials, that form a class and its individual instantiation
that might have differing properties and attributes.
In this work, the following separation of information de-
scription is performed for the resource description:
Materials: Encompasses all physical materials that are pro-
cessed, or used during the digital fabrication. Also in-
cludes physical materials that are required for the digital
fabrication process as indirect or auxiliary material.
Software: Encompasses all software and Information tech-
nology (IT) components that are involved in the model
creation phase, the object fabrication phase or that are
used for the control and management of digital fabrication
equipment.
Processes: Encompasses all intangible processes, data and
information that is generated, consumed, transformed or
inﬂuenced by in any phase of the digital fabrication
process. Business processes are part of this grouping.
Technology: Encompasses all hardware and machine equip-
ment that is used for the object fabrication, as well as
pre- and post-processing.
We exclude status information and status dependent prop-
erties from our resource description and ontology.
The resource description must be able to reﬂect required
properties and information of all currently available 3D-
printing technologies, regardless of the technology classiﬁ-
cation following any schema, such as the classiﬁcation by
Gibson et al. [15], the classiﬁcation by Williams et al. [16] or
the ISO/ASTM Standard 52900:2015 [17] classiﬁcation. This
work identiﬁes common attributes between technologies and
enables technology speciﬁc properties. As a guideline for the
creation of the ontology and the resource description itself a
distinction between object classes and their actual instances
is followed. Given the example of a 3D-printer, the class is
formed of all 3D-printers from a certain manufacturer and are
of a certain make share a number of attributes like physical
volume and number of printheads. Those general attributes
might be extended by attributes pertaining to a certain 3D-
printer that belongs to a user and is situated at a physical
location. The general attributes might also be altered for a
speciﬁc 3D-printer, as it might weight more than the original
3D-printer due to added extensions or modiﬁcations, or its
build envelope is smaller than the original’s due to a hardware
defect.
A. Sources
Properties are extracted from datasheets from the following
manufacturers and models:
3D Systems, Inc.: ProJet 7000 SD & HD, ProX 950, sPro
140, ProX DMP 200, ProX 800, ProX SLS 500, ProJet
CJP 360, ProJet 1200, CubePro
Arcam AB: Arcam Q10 Plus, Arcam Q20 Plus, Arcam
A2X
B9Creations LLC: B9Creator V1.2
CEL: CELRobox
Deltaprintr: Delta Go
EnvisionTEC
GmbH:
3D-Bioplotter
Starter
Series,
SLCOM1
EOS GmbH: EOS M 100, EOS M 290, FORMIGA P
110, EOS P 396, EOSINT P 800
ExOne GmbH: S-Max, S-Print, M-Flex Prototype 3D
Printer
FlashForge Corp.: Creator Pro 3D
Formlabs Inc.: Form 2
LulzBot/Aleph Objects, Inc.: TAZ 6
Makerbot Industries, LLC: Replicator+, Replicator Z18
Mcor Technologies Ltd.: ARKe, IRIS HD
Optomec Inc.: LENS 450, Aerosol Jet 200
Renishaw plc.: RenAM 500M
RepRap: Prusa i3
SeeMeCNC: ROSTOCK MAX V3
SLM Solutions Group AG: SLM 125, SLM 280 2.0
Stratasys Ltd.: uPrint SE, Objet24, Dimension Elite,
Fortus 380mc, Objet1000 Plus
Ultimaker B.V.: Ultimaker 3, Ultimaker 2+
UP3D/Beijing Tiertime Technology Co., Ltd.: UPBOX+
voxeljet AG: VX 200, VX 2000
WASP c/o CSP s.r.l.: DeltaWASP 20 40 Turbo
Furthermore, properties and capability attributes are ex-
tracted
from
publicly
available
slicing
software
(e.g.,
Slic3r [18], Cura [19], and Netfabb [20]) and acquired through
experimentation. On the ontological concept itself, we refer to
the work by Gruber [21] and the book by Fensel [22]. Fol-
lowing the distinction of ontologies by Ameri and Dutta [23],
we classify our ontology as lightweight. For the construction
of the ontology a list of key terms is compiled from existing
glossaries and literature.
B. Properties
The following properties are identiﬁed from literature and
technology documentation. These properties are listed in the
appendix in order to avoid a disruption of the text ﬂow. The
provided listing is sufﬁcient to describe relevant properties of
AM machinery, i.e., 3D-printers, and the associated materials.
The properties can be further classiﬁed as either static, e.g.,
the serial number of a 3D-printer or its coordinate system, or
dynamic, e.g., the owner or location of a 3D-printer. Dynamic
properties are often dependent properties, which is a further
classiﬁcation applied to the properties. Dependent properties
are inﬂuenced and depend upon a 3D-printer component, e.g.,
the nozzle and its diameter, the material, e.g., surface rough-
ness achievable differs for materials processable or parameters
selected during the 3D-printing process. This classiﬁcation is
not provided with this work due to brevity. The properties in
the listing are for the hardware resources, i.e., the 3D-printer as
well as its components and the material associated with the
3D-printer.
C. Implementation
In this section the implementation of both the ontology
and the relevant core classes are described. Furthermore,
43
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

information on a possible scheduling metric based on a cost
estimation method and the resulting information ﬂow in the
implemented service is described.
The ontology is constructed using the prot´eg´e software
version 5.1.0, see http://protege.stanford.edu/. The ontology
is generated based on the properties brought forward in
Sect. III-B. The guiding principle for the ontology is the
ﬂexibility of the properties that are applicable to 3D-printers,
material and inherent constraints. The ontology is created
based on the identiﬁed properties and derived concepts from
literature and documentation.
The implementation in software to manage the speciﬁc
properties of the resource description and to evaluate the
applicability of the description is performed in the proposed
3D-printing cloud service by the authors [24], [25].
The implementation in the service is performed to enable
provisional scheduling for 3D-printing resources based on
availability, build volume and processable material type. In
scheduling, some form of ordering metric must be provided.
In this work, this metric is based on a proposed cost metric
as described further in the text.
The cost metric is deﬁned in [26] and serves as a prototyp-
ical implementation of cost estimation within AM.
The cost is calculated as (see Eq. 1) follows:
Cost = (Discount(T, P, U) + Proﬁt(U))
× (Machine + Material(O, P, S, SO) × Factor B
+ Duration(O, S, SO) × Factor U + Factor A
+ Factor C(O, P))
(1)
With the following abbreviations used in the equation: 1) T
for team 2) P for 3D-printer 3) U for user 4) O for object 5) S
for slicer and, 6) SO for slicing options The cost for a 3D-
print is dependent upon the 3D-printer selected (base cost),
the material that is consumed and the time required for 3D-
printing. Within the service, these attributes are user selectable
for each materialtype and 3D-printer that is under the control
of the user.
Based on the cost metric, scheduling is implemented in the
service as described below.
In Figure 1, the processing ﬂow for the registration of a
hardware resource with the 3D-printing service is depicted.
In this ﬁgure, the user dispatches a 3D-printing requirement
(Job) with the service for which a number of implicit and
explicit requirements and restrictions are also deposited. A
hardware resource registers its capabilities with the service,
that is then stored with the resource registry. The service
queries the resource registry for a suitable hardware resource
for a job and issues the appropriate commands for a 3D-
printing execution on this resource. On completion or failure,
the user issuing the job is notiﬁed.
1) Core Classes: The core classes in the ontology are
described in this section. A visual representation of the on-
tology is depicted in Figure 2. This graph is created using the
WebVOWL service [27].
MaterialGroup and Material, these classes denote the mate-
rials that are relevant for the description of the capabilities
User
User
Service
Service
ResourceAdaptor
ResourceAdaptor
ResourceRepository
ResourceRepository
ResourceAdapor_X
ResourceAdapor_X
Prepare Job
(Upload Data,
 Define Requirements)
Register Resources
Process Resource Information
(Parse to RDAM Format)
Query Additional Information
Process Inforamtion Request
Provide Additional Information
opt
[If Information is Missing]
Update (Resource Data)
Analyse Job
 for Resource Requirements
Find List of Suitable
 Resources
Provide List of Suitable Resources
Calculate Cost,
 Restrictions and
 Completion Dates
 for all
 Suitable Resources
Prioritize Resource List
Issue Execution Command
(Most Suitable Resource)
Execute Print
Provide Status Information
Notify with Status Information
Fig. 1: Processing Flow for the Registration and Selection of
a Hardware Resource
of the 3D-printing resource. The materials have an inﬂu-
ence on a number of quality properties, e.g., the surface
roughness. The materials a 3D-printing resource can
process are relevant for the selection of the appropriate
3D-printing resource.
PrintingTechnology, PrinterType, and Printer, are classes
to
represent
the
underlying
technology
of
a
3D-
printing resource, e.g., a FDM based technology or a
Electron Beam Melting (EBM) technology as well as the
3D-printer class which can be understood for example
as a speciﬁc model line from a hardware manufacturer
(e.g., the Replicator Series from Makerbot Industries).
Hardware resources of a PrinterType have a number of
common attributes that extend the PrintingTechnology.
The Printer denotes the make of a speciﬁc PrinterType,
e.g., the MakerBot Replicator 2X from Makerbot Indus-
tries. Instances of this Printer class have further common
attributes extending the attributes of the PrinterType.
Instances of the Printer class are actual 3D-printers that
have further attributes like owner and a physical location.
PrinterComponent, is the class for the physical and imma-
terial components that are part of the speciﬁc 3D-printer.
Every component can have a unbounded number of prop-
erties as described below. For example the printhead and
its nozzles are components of a 3D-printer in the case of
FDM technology and an electron source is a component
of a EBM type 3D-printer.
Software, denotes all software that is used in the 3D-Printing
Process (3D-PP). Software is used to control the 3D-
printing resource, to convert ﬁles from one format into
another, to prepare and process the ﬁles required for the
control of the 3D-printer and to evaluate and monitor the
3D-print itself.
MProperty, this class is the generalisation of properties that
44
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

Fig. 2: 3D-printing Ontology
are applicable to either the Material, Materialgroup, Print-
ingTechnology, PrinterType, Printer, PrinterComponent,
Software, ProductModel or File. The guiding principle
for the creation of this ontology is to enable ﬂexibility
and expandability, so this generalised property can hold
all properties listed above (see Sect. III-B) and future
properties.
Restriction, is a class that reﬂects the ability to enable restric-
tions on MProperties as the properties can be applicable
only for a speciﬁed period of time or for a certain group
of people. For example the property of ﬁlament quality
might be linked to a certain expiration date.
InﬂuenceFactor, is a class that reﬂects the multi-dimensional
inﬂuences on properties by a deﬁned number of factors.
For example the nozzle diameter can inﬂuence the extru-
sion rate in case of a FDM 3D-printer.
D. Resource Description Schema
From the ontological concept, an XML schema deﬁnition
is constructed which follows the principle of ﬂexibility by
encapsulation of properties in a ﬂexible element. The property
element is applicable to all relevant types of the schema,
namely the PrintingTechnology, PrinterType, Printer, Printer-
component, Materialtype, and Material.
All properties are extended to allow for restrictions based
on user, group or temporal conditions. The properties can
be inﬂuenced by any other class of the schema to reﬂect
interdependent relations between components. The following
example justiﬁes this construction: In the 3D-printer, the
property of the material deposition rate is dependent upon
the technology in use, the material processed and, in case
of the FDM technology, the nozzle diameter of the extruder
installed in the 3D-printer. See the following excerpt from
the schema deﬁnition on the components properties and the
implementation on the inﬂuencing factors:
<xs:complexType name="influence">
<xs:sequence minOccurs="1" maxOccurs="1">
<xs:element name="id" type="xs:ID"
minOccurs="1" maxOccurs="1" />
<xs:choice>
<xs:element ref="tdp:MaterialType" />
<xs:element ref="tdp:Material" />
<xs:element ref="tdp:PrinterType" />
<xs:element ref="tdp:Printer" />
<xs:element ref="tdp:PrinterComponent" />
<xs:element ref="tdp:PrintingTechnology" />
</xs:choice>
<xs:element name="influenceMethod"
type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:complexType name="validity">
<xs:sequence>
<xs:element name="id" type="xs:ID"
minOccurs="1" maxOccurs="1" />
<xs:element name="validityCondition"
type="xs:string"
minOccurs="1" maxOccurs="unbounded" />
</xs:sequence>
</xs:complexType>
45
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

<xs:complexType name="mproperty">
<xs:sequence>
<xs:element name="unit"
type="xs:normalizedString"
minOccurs="1" maxOccurs="1"/>
<xs:element name="description"
type="xs:normalizedString"
minOccurs="1" maxOccurs="1"/>
<xs:element name="value"
type="xs:normalizedString"
minOccurs="1" maxOccurs="1"/>
<xs:element name="name"
type="xs:normalizedString"
minOccurs="1" maxOccurs="1" />
<xs:element name="added"
type="xs:dateTime"
minOccurs="1" maxOccurs="1" />
<xs:element ref="tdp:influence"
maxOccurs="unbounded" />
<xs:element ref="tdp:validity"
maxOccurs="unbounded" />
</xs:sequence>
</xs:complexType>
IV. DISCUSSION
The proposed resource description offers the ability to the
user to select the appropriate 3D-printing resource in a sce-
nario where restrictions for the suitable 3D-printing resources
can be derived, from either the users input or from the provided
data ﬁles. Within a 3D-printing service, the user is enabled to
state preferences and restrictions, such as the desired quality
of the 3D-printed object or cost restrictions, based on which
the service itself can query appropriate hardware resources for
their availability and suggest them to the user. Furthermore,
based on the provided models the service can exclude certain
hardware resources if they are not ﬁtting for the task to be
executed. For example, if the model ﬁle is analysed and found
to contain features under a certain threshold, the hardware that
is not capable of manufacturing features of this dimension are
to be excluded.
A perceived problem with the ﬂexibility of the ontology
and resource description is the requirement for contextual
property checking within the service itself. As opposed to strict
formalities possible with the XML Schema Deﬁnition (XSD)
deﬁnition, this ﬂexibility hinders such formality checking. The
3D-printing service must be equipped with a component that is
capable of evaluating the provided properties and check them
for completeness, applicability and correctness. The resource
description also allows for the encapsulation of third-party 3D-
printing services within the 3D-printing service itself, where
the capabilities of these services are regarded as a resource
and described as such.
V. CONCLUSION
This work provides an ontology of the AM domain with
extensible and ﬂexible constructs. The derived XSD provides
ﬂexibility for extensions, based on future developments of
3D-printing hardware. The ﬂexibility also allows for user-
centric extensions and use-cases. The use case for this work
is the deployment in a 3D-printing service but other use cases
are also provided, such as the use within a recommender
system for the design and modelling phase, or purchase
recommendation systems.
In future work, it is recommended to extend the ontology
to include concepts that enable the expression of immaterial
capabilities and abilities, such as the expertise in certain
domains, e.g., Aerospace engineering, medical engineering
or bioprinting, in AM. Furthermore, it is recommended to
enable the expression of proﬁciency in areas related to the
3D-printing lifecycle or process itself, e.g., proﬁciency with
the design process, with the software / IT components or with
legal and business concepts for AM.
ACKNOWLEDGMENT
The authors would like to thank Julia Holzschuh for her
contributions to this work.
APPENDIX
LISTING OF RELEVANT PROPERTIES / ATTRIBUTES
1) Operating Temperature Min/Max 2) Operating Hu-
midity Min/Max 3) Machine Weight/Length/Height/Depth
4) Install Size Weight/Length/Height/Depth 5) Build Enve-
lope Height/Width/Depth/Radius 6) Machine Data Connec-
tion 7) Electrical Input Rating 8) Minimum Possible Hole
Diameter 9) Positioning Accuracy X/Y/Z 10) Repeatability
X/Y/Z 11) Print Accuracy X/Y/Z 12) Number of Extrud-
ers 13) Nozzle Diameter 14) Temperature Extruder Min/-
Max 15) Layer Thickness Min/Max 16) Movement Speed
Min/Max 17) Extrusion (Movement) Speed Min 18) Print
Head Acceleration Max 19) Print Bed Speed X/Y/Z Min/-
Max 20) Print Bed Acceleration X/Y/Z Min/Max 21) Print
Bed Temperature Min/Max 22) Binder Material 23) Process-
able Material 24) Processable Material Grain Size Min/Max
25) Max Object Weight 26) Lead Time Inﬂuencing Factors
27) Lead Time Formula 28) Requires Personal Attendance
During Print 29) Requires Manual Interaction for Start/End
30) Resolution X/Y/Z Min 31) Operation Allowed for User/-
Group 32) Maximum Achievable Surface Roughness 33) Sys-
tematic Shrinkage during Build 34) Atmosphere Pressure/-
Connection/Content 35) Consumables 36) Compressed Air
Supply 37) Atmosphere Consumed 38) Beam Focus Diameter
39) Laser Energy 40) Scanning Speed Min/Max 41) Laser
Type 42) Power Supply 43) Power Consumption 44) Power
Phase Requirement 45) Precision Optics 46) Legal Conformity
Certiﬁcates 47) Workstation Requirement Ram Min 48) Work-
station Requirement OS 49) Workstation Requirement CPU
Min 50) Workstation Requirement Net 51) Resolution X/Y/Z
52) Number of Jets 53) Accepted File Formats 54) Number
of Colors 55) Color Model 56) Manufacturer 57) Model
58) Serial Numbers 59) Object Bounding Box X/Y/Z Min/Max
60) Min Supported Wall Thickness 61) Min Unsupported Wall
Thickness 62) Min Supported Wire 63) Min Unsupported Wire
64) Min Emboss Detail Width/Height 65) Min Engraved Detail
46
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

Width/Height 66) Min Escape Holes 67) Clearance 68) En-
able Interlocking Parts 69) Maximum Angle for Unsupported
Overhang 70) Available Inﬁll Patterns 71) Active Cooling
Extrudate 72) Hot/Cold Pause Ability 73) Requires Support
Structure 74) Cathode Type 75) Vacuum Pressure 76) Ma-
terial Supply Format/Packaging 77) Noise (Operation/Prepa-
ration/Idle) 78) Laser Wave Length 79) Material Deposition
Mechanism 80) Number of Print Heads 81) Filament Diameter
82) Stepper Motors 83) Build Plate Material 84) Nozzle Heat
Up Time 85) Build Plate Heat Up Time 86) Build Speed
87) Platform Leveling Mode 88) Laser Class/Certiﬁcation
89) Peel Mechanism 90) Resin Fill Mechanism 91) Extruder
Heater Cartridge Wattage/Voltage 92) Firmware Name/Ver-
sion 93) Deposition Rate 94) Special Facility Requirements
95) Network Connectivity 96) Automatic Material Recognition
97) Internal Lighting 98) Enclosed Build Envelope 99) 3rd
Party Material Compatible 100) Nozzle Offset X/Y/Z 101) Co-
ordinate System 102) Printer Geometry 103) Coordinate Sys-
tem Origin 104) Absolute/Relative Density 105) Cytotoxicity
(ISO 10993-5) 106) Melting Point 107) Magnetic Permeabil-
ity 108) Electrical Resistivity 109) Speciﬁc Heat Capacity
110) Coefﬁcient of Thermal Expansion 111) α/β Transus
Temperature 112) Micro Vickers Hardness 113) Macro Rock-
well C Hardness 114) Thermal Conductivity 115) Flexural
Modulus/Strength 116) Tensile Modulus/Strength 117) Elon-
gation at Break 118) Impact Strength 119) Heat Deﬂection
Temp 120) Viscosity 121) Shore Hardness 122) Dielectric
Constant/Strength 123) Volume Resistivity 124) Flammability
125) Young’s Modulus 126) Yield Strength and 127) Ultimate
Tensile Strength.
REFERENCES
[1] V.
A.
Balogun,
N.
Kirkwood,
and
P.
T.
Mativenga,
“Energy
consumption and carbon footprint analysis of Fused Deposition
Modelling: A case study of RP Stratasys Dimension SST FDM,”
International Journal of Scientiﬁc & Engineering Research, vol. 6,
no.
8,
pp.
442–447,
August
2015.
[Online].
Available:
http:
//www.ijser.org/research-paper-publishing-august-2015 page3.aspx
[2] D. A. Roberson, D. Espalin, and R. B. Wicker, “3d printer selection: A
decision-making evaluation and ranking model,” Virtual and Physical
Prototyping, vol. 8, no. 3, pp. 201–212, 2013. [Online]. Available:
http://dx.doi.org/10.1080/17452759.2013.830939
[3] M. Fumo and R. Noorani, “Development of an Expert System for
the Selection of Rapid Prototyping and 3D Printing Systems,” in
Proceedings of the 6th International Conference on Computer Science
Education: Innovation & Technology, 2015, pp. 14–18. [Online].
Available: http://dx.doi.org/10.5176/2251-2195 CSEIT15.8
[4] O. Morariu, C. Morariu, and T. Borangiu, “Shop-ﬂoor resource
virtualization layer with private cloud support,” Journal of Intelligent
Manufacturing, vol. 27, no. 2, pp. 447–462, 2016. [Online]. Available:
http://dx.doi.org/10.1007/s10845-014-0878-7
[5] M. Gen and L. Lin, “Multiobjective evolutionary algorithm for
manufacturing scheduling problems: state-of-the-art survey,” Journal of
Intelligent Manufacturing, vol. 25, no. 5, pp. 849–866, 2014. [Online].
Available: http://dx.doi.org/10.1007/s10845-013-0804-4
[6] M.
Dios
and
J.
M.
Framinan,
“A
review
and
classiﬁcation
of computer-based manufacturing scheduling tools,” Computers &
Industrial Engineering, vol. 99, pp. 229–249, 2016. [Online]. Available:
http://dx.doi.org/10.1016/j.cie.2016.07.020
[7] S. Pryor, “Implementing a 3d printing service in an academic library,”
Journal of Library Administration, vol. 54, no. 1, pp. 1–10, 2014.
[Online]. Available: http://dx.doi.org/10.1080/01930826.2014.893110
[8] P. Vichare, A. Nassehi, S. Kumar, and S. T. Newman, “A Uniﬁed
Manufacturing Resource Model for representing CNC machining
systems,” Robotics and Computer-Integrated Manufacturing, vol. 25,
no.
6,
pp.
999–1007,
2009,
18th
International
Conference
on
Flexible Automation and Intelligent Manufacturing. [Online]. Available:
http://dx.doi.org/10.1016/j.rcim.2009.04.014
[9] Y. Yao, D. Chen, L. Wang, and X. Yang, “Additive Manufacturing
Cloud via Peer-Robot Collaboration,” International Journal of Advanced
Robotic Systems, vol. 13, no. 3, pp. 1–12, 2016. [Online]. Available:
http://dx.doi.org/10.5772/63938
[10] A. S. Incorporated, “3D Printer Description File Format Speciﬁcation,”
2014, version 1.0 draft 3. [Online]. Available: http://static.photoshop.
com/content/downloads/Adobe\%203D\%20Printer\%20Proﬁles.pdf
[11] D. Chen, D. I. W. Levin, P. Didyk, P. Sitthi-Amorn, and W. Matusik,
“Spec2Fab: A Reducer-tuner Model for Translating Speciﬁcations to 3D
Prints,” ACM Transactions on Graphics, vol. 32, no. 4, pp. 1–10, July
2013. [Online]. Available: http://dx.doi.org/10.1145/2461912.2461994
[12] C. Dong, Y. Yuan, and W. Lei, “Additive manufacturing cloud
based on multi agent systems and rule inference,” in 2016 IEEE
Information
Technology,
Networking,
Electronic
and
Automation
Control Conference, May 2016, pp. 45–50. [Online]. Available:
http://10.1109/ITNEC.2016.7560316
[13] Y. Yadekar, E. Shehab, and J. Mehnen, “Taxonomy and uncertainties
of cloud manufacturing,” International Journal of Agile Systems and
Management, vol. 9, no. 1, pp. 48–66, 2016. [Online]. Available:
http://dx.doi.org/10.1504/IJASM.2016.076577
[14] L. Mortara, J. Hughes, P. S. Ramsundar, F. Livesey, and D. R. Probert,
“Proposed classiﬁcation scheme for direct writing technologies,” Rapid
Prototyping Journal, vol. 15, no. 4, pp. 299–309, 2009. [Online].
Available: http://dx.doi.org/10.1108/13552540910979811
[15] I.
Gibson,
D.
Rosen,
and
B.
Stucker,
Additive
Manufacturing
Technologies - 3D Printing, Rapid Prototyping, and Direct Digital
Manufacturing, 2nd ed. Springer New York, 2015. [Online]. Available:
http://dx.doi.org/10.1007/978-1-4939-2113-3
[16] C. B. Williams, F. Mistree, and D. W. Rosen, “A Functional
Classiﬁcation Framework for the Conceptual Design of Additive
Manufacturing Technologies,” Journal of Mechanical Design, vol.
133,
no.
12,
pp.
1–11,
December
2011.
[Online].
Available:
http://dx.doi.org/10.1115/1.4005231
[17] ISO/ASTM 52900:2015 Additive manufacturing — General principles
— Terminology, ISO Std., 2016. [Online]. Available: http://www.iso.
org/iso/home/store/catalogue tc/catalogue detail.htm?csnumber=69669
[18] A. Ranellucci, H. B. Andersen, N. Dandrimont, M. Hindness, P. Ledvina,
Y. Sapir, M. Sheldrake, and G. Hodgson, “Slic3r – g-code generator for
3d printers,” http://slic3r.org, 2011, accessed: 2016-11-28.
[19] U. B.V., “Cura 3d printing slicing software,” https://ultimaker.com/en/
products/cura-software, 2015, accessed: 2016-10-21.
[20] I. Autodesk, “Why netfabb?” https://www.netfabb.com, 2011, accessed:
2016-10-20.
[21] T. R. Gruber, “Toward principles for the design of ontologies used
for knowledge sharing?” International Journal of Human-Computer
Studies, vol. 43, no. 5, pp. 907–928, 1995. [Online]. Available:
http://dx.doi.org/10.1006/ijhc.1995.1081
[22] D. Fensel, Ontologies: A Silver Bullet for Knowledge Management
and Electronic Commerce, 2nd ed.
Springer-Verlag Berlin Heidelberg,
2004. [Online]. Available: http://dx.doi.org/10.1007/978-3-662-09083-1
[23] F. Ameri and D. Dutta, “An Upper Ontology for Manufacturing
Service Description,” in ASME 2006 International Design Engineering
Technical Conferences and Computers and Information in Engineering
Conference, vol. 3, September 2016, pp. 651–661. [Online]. Available:
http://dx.doi.org/10.1115/DETC2006-99600
[24] F. Baumann, O. Kopp, and D. Roller, “Universal API for 3D
Printers,”
in
INFORMATIK
2016.
Lecture
Notes
in
Informatics
(LNI), H. C. Mayr and M. Pinzger, Eds., vol. P-259.
Gesellschaft
f¨ur
Informatik,
2016,
pp.
1611–1622.
[Online].
Available:
http:
//subs.emis.de/LNI/Proceedings/Proceedings259/article155.html
[25] F. Baumann, J. Eichhoff, and D. Roller, Collaborative Cloud Printing
Service.
Springer International Publishing, 2016, pp. 77–85. [Online].
Available: http://dx.doi.org/10.1007/978-3-319-46771-9 10
[26] F. W. Baumann, O. Kopp, and D. Roller, “Abstract api for 3d printing
hardware and software resources,” International Journal of Advanced
Manufacturing Technology, 2016, submitted - Under Review.
[27] S. Lohmann and S. Negru, “Vowl: Visual notation for owl ontologies,”
http://vowl.visualdataweb.org, 2016, accessed: 2016-10-20.
All URLs are last checked on February 9, 2017.
47
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-528-9
SERVICE COMPUTATION 2017 : The Ninth International Conferences on Advanced Service Computing

