Supporting Targeted Selection of Collaboration Tools for Distributed Software
Development
Florian Krenn and Christian Stary
Department of Business Information Systems - Communications Engineering
Johannes Kepler University
Linz, Austria
e-mail: {ﬁrstname.lastname}@jku.at
Abstract—Many distributed software development teams lack
targeted selection of collaboration tools, as project- and team-
speciﬁc requirements are not taken into account for work
support. For effective and efﬁcient distributed team work, case-
sensitive requirements engineering could help through adapting
support tools to project situations. In this contribution, we detail
method requirements for selecting collaboration tools for a given
development context. We also analyze existing decision support
techniques with respect to context adaptation. The Hybrid
Knowledge-Based System (HKBS) method not only supports the
context-sensitive identiﬁcation of criteria, but also the selection
of collaboration tools based on the development requirements. A
corresponding web-based tool has been developed and evaluated
in an empirical ﬁeld study. The gained insights reveal the potential
of HKBS and the respective tool support for targeted selection
of collaboration tools in software development.
Keywords–Global Software Development; collaboration tools;
project-speciﬁc decision support; Hybrid Knowledge-Based System
I.
INTRODUCTION
Globalization has affected software development and
changed the manner in which software engineering projects
are carried out. Software development is more and more seen
as a globally distributed and multi-cultural endeavor [1][2].
This trend towards globally distributed software projects is
facilitated by the widespread availability of high-speed Internet
access. The distribution of projects and teams over several
sites allows access to qualiﬁed workforce around the globe
and enables the leverage of time zones to shorten software
development cycles and time to market [3][4]. As software
engineers are geographically distributed over different time
zones, the time difference allows for 24-hour development
(also known as “round-the-clock” or “follow-the-sun” devel-
opment) facilitating a shorter project duration [4][5]. Despite
the beneﬁts of Global Software Development (GSD) new
challenges arise with multi-site projects affecting communi-
cation and coordination. Due to the distance between sites,
not only a drop in the frequency of communication but also
reduced communication efﬁciency can be observed [6][7].
Communication, however, is essential for collaboration and
teamwork and ultimately for the success of a project [4].
Consequences of inefﬁcient communication can manifest in
increased costs, delay, or even the discontinuation of a project
[3][7][8].
In GSD, collaboration tools are used to address these
challenges and support cross-site team communication. But
often the collaboration tools in use do not provide adequate
support for the team to ensure efﬁcient communication [9][10].
This can be traced back to the fact that the selection of
communication tools is often not aligned with the team’s and
the project’s requirements [10]. As argued by Christian and
Rotenstreich [10], an evaluation method is missing to better
align the selection of collaboration tools.
In Section II, the requirements for project-speciﬁc selection
of collaboration tools are inferred based on existing literature.
Furthermore, existing decision support methods are analyzed
based on these requirements. Criteria are required for the
application of decision support methods. Relevant selection
criteria for collaboration tools are presented in Section III. The
results of an empirical ﬁeld study are presented in Section
IV. In Section V, the ﬁndings of the ﬁeld study and their
implications are discussed and put into context with existing
literature results.
II.
DEMAND FOR FLEXIBLE DECISION SUPPORT
Requirements for decision making are inferred based on
the given decision context and are represented as criteria
in the decision making process [11][12]. In the case of
collaboration tool selection, the decision context is mainly
deﬁned by organizational and project speciﬁc factors. Picking
up the proposal of Christian and Rotenstreich [10] to further
investigate evaluation and selection support for collaboration
tools, it becomes apparent that every project situation is unique
[13]. Due to this uniqueness of the project situation and,
therefore, the decision context a completely predeﬁned set of
criteria for the selection of collaboration tools is not viable.
Criteria have to be selected in accordance with the decision
context to reﬂect the needs of the organization, project, and
team [13][14]. Hence, a decision method to support the
selection of collaboration tools should support the context-
sensitive identiﬁcation and selection of criteria and should
further provide enough ﬂexibility to be applied in different
project contexts with changing requirements and criteria.
The identiﬁcation of such a decision support method to
facilitate targeted selection requires a more ﬁne-grained deﬁni-
tion “ﬂexibility” in this particular domain. The understanding
of ﬂexibility presented herein comprises of two aspects: 1.
representation of the decision context 2. adaption of existing
models to changes of the decision context in order to facilitate
decision model reuse. A fundamental requirement for the
representation of the decision context in the decision making
process is that the decision support method is able to include
all relevant criteria of the given decision context. The selection
of collaboration tools and, more generally speaking, software
93
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

products, can be categorized as a Multi Criteria Decision Anal-
ysis (MCDA) problem [13][15][16][17]. In MCDA, decision
support methods need to be able to handle multiple criteria,
which inﬂuence the decision making [18][19]. Furthermore,
the combination of qualitative and quantitative criteria having
no common unit of measurement is often relevant for the
selection process.
Although a ﬁxed, predeﬁned set of criteria for the selection
of collaboration tools is not advisable, reuse of existing deci-
sion models can be beneﬁcial to shorten the decision making
process. For instance, within an organization constant criteria
which are used for every software selection will exist. By
providing decision models incorporating these criteria as a
starting point would only require to include the project-speciﬁc
aspects and, therefore, decreasing the overall selection effort.
This leads to the following criteria for ﬂexible decision
support methods:
-
Support of qualitative and quantitative criteria
-
Handling of incommensurable units of measurement
-
Handle dynamically changing criteria and alternatives
-
Support identiﬁcation and negotiation of criteria
-
Adaptability of existing models (facilitate reuse)
According to a literature review conducted by Jadhav and
Sonar [20], the Analytic Hierarchy Process (AHP) and the
Weighted Sum Method (WSM) are the most prominent de-
cision support methods in the context of Commercial-Of-The-
Shelf (COTS) software selection. Knowledge-based decision
support methods are also suited and established in the area of
software selection [21][22]. In [22], a new approach to decision
support, called Hybrid Knowledge-Based System (HKBS),
using a hybrid knowledge-based approach is introduced. This
new approach addresses relevant aspects for software selection,
namely ﬂexibility and reuse, and therefore is included in this
analysis.
Analytic Hierarchy Process
AHP, introduced by Thomas L. Saaty [11][23], is a scientif-
ically well-examined and widely-used decision support method
[24]. AHP is based on the principles of decomposition and
relative judgments [23]. The representation of the decision
problem is based on the decomposition of the selection goals
in subgoals and, ultimately, criteria resulting in a hierarchical
structure. Criteria weights (i.e., the importance of each crite-
rion) are assigned by relative comparisons on each level of
the hierarchy. For this purpose a predeﬁned scale is used.
The effort needed for these pair-wise comparison depends
on the number of criteria. The number of needed pair-wise
comparisons can be calculated as shown in Equation 1 [22, p.
1401].
Comparisons = M ∗ M − 1
2
∗ N
(1)
For example, in an evaluation involving four alternatives
and nine criteria this would result in 54 pair-wise compar-
isons. Adapting the criteria hierarchy or adding an additional
alternative requires to redo at least some of the comparisons.
This limits the ﬂexibility in terms of adaptability and reuse
of existing models and alternatives [20]. Reusing existing
decision models, respectively hierarchies, is possible to some
extent, but the relative values used for comparing criteria and
alternatives require to repeat at least some of the pair-wise
comparisons [20].
Weighted Sum Method
WSM is considered an easy to use decision support method
[15]. Each criterion used in selection process a numerical
weight is assigned to express the importance of the criterion.
The assigned weights are multiplied with the corresponding
criterion value. The resulting values are than added up to the
ﬁnal score. According to WSM, the alternative with the highest
score is the most suited alternative. This approach implies that
only quantitative variables with the same unit of measurement
can be used [15][22]. In MCDA, problems usually criteria with
incommensurable units are involved and, therefore, WSM is
more suited for single dimension problems [15][25]. Although
the use of qualitative criteria is in principle not supported,
qualitative criteria can be included in the decision process
when the values are transformed to numeric values beforehand.
But again, this is only valid when all other criteria are
measured using the same scale [15].
The selection and assignment of criteria and weights is not
supported by a deﬁned process. This could lead to difﬁculties
in assigning the criteria values, especially when dealing with
a higher number of criteria [22].
Hybrid Knowledge-Based System
A new approach to knowledge-based decision support,
which explicitly addresses ﬂexibility, adaptability, and reuse,
is introduced in [22]. HKBS combines deductive and inductive
reasoning in one decision support method by including Case-
Based Reasoning (CBR) and Rule-Based Reasoning (RBR) in
the approach. The HKBS method, which is illustrated in Figure
1, not only covers the evaluation process itself but also covers
the selection of criteria.
Decision 
Maker
Rule based Expert 
System
Case
Retrieval
Case Base
Description of Software 
Package 1
Description of Software 
Package 2
Description of Software 
Package 3
Software 
Package 1 
Software 
Package 2 
Software 
Package  3
Result Set: In decreasing order of similarity score
Criteria
Similarity Measures 
Figure 1. Components of the HKBS method according to [22, p. 1399]
HKBS allows the use of quantitative as well as qualitative
criteria. Based on a rule-based system and the included expert
knowledge, the requirements of the stakeholders are elicited
and a suggested criteria set is derived. This suggestion can
be altered and adapted by the decision makers in terms of
the selected criteria as well as the assigned scales. The ﬁnal
set of criteria and scales is then used in the CBR process.
The decision makers need to deﬁne and enter criteria values
94
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

for each alternative. Alternatives combined with the assigned
criteria values, so called cases, are stored in the case base of
the CBR system. Cases stored in the case base can be edited
(e.g., add new criterion) and can be reused in different query.
For example, if the collaboration tool X was already entered
in the case base for a selection in project p, it can be directly
used for selection in project r independently of the criteria set
used.
Analysis
Comparing the decision support methods based on the
previously inferred criteria shows that HKBS has the potential
in terms of providing ﬂexible decision support. In connection
with the case base, the CBR component allows the reuse of
data entered in the system in upcoming decision processes.
Due to its applicability in several areas of application
AHP is known as a ﬂexible decision support method [26].
Nonetheless, the ﬂexibility concerning the reuse of existing
decision models is limited due to the principle of comparative
judgments [22]. Due to these pair-wise judgments adapting the
criteria hierarchy or adding an additional alternative requires
to redo at least some of the comparisons. The adaptability of a
WSM decision model depends on whether the criteria weights
are in relation (e.g., sum of all weights has to be 100%) or
not. If the criteria are in relation the criteria weights have
to reassigned if the decision model is changed; otherwise a
reassignment is not needed.
Both HKBS and AHP support qualitative and quantitative
criteria, whereas, WSM does not support qualitative criteria.
Qualitative values have to be transferred to numerical values
to be used in the WSM decision model potentially leading to
invalid decision models [15].
The comparison of the methods shows that HKBS has
the potential in terms of providing ﬂexible decision support
according to the deﬁned requirements. The HKBS method
relies on the in encoded expert knowledge, which consists
of criteria catalog and rules to infer the criteria suggestions,
and on adequate tool support [22]. Due to the CBR and
RBR components of the method, HKBS is based on complex
calculations. Therefore, tool support is needed to enable a
practicable application of the method [20]. In order to meet this
requirement, a criteria catalog for the selection of collaboration
tools has to be identiﬁed and a tool supporting the HKBS
method has to be provided.
III.
IDENTIFYING RELEVANT CRITERIA FOR
COLLABORATION TOOL SELECTION
The selection of collaboration tools comprises general
aspects of software selection and, on a more speciﬁc level,
aspects of collaboration. General criteria software selection
criteria for the use with the HKBS method have already been
elaborated by [22]. In a literature review, Jadhav and Sonar
identiﬁed six core categories, which are applicable for software
selection in general [22]. These categories are illustrated in
Figure 2. Furthermore, the authors inferred the need for a
seventh category dealing with functional criteria. These criteria
are speciﬁc to type of the evaluated software and its area
of application. Therefore, these criteria need to be speciﬁed
for each application area individually [22]. In the case of
collaboration tools, this would be those features and func-
tionalities addressing speciﬁcally collaboration support (e.g.,
collaborative meeting scheduling).
General Software Selection Criteria
Functional 
Criteria
Technical
Vendor
Output
Cost & Benefit
Opinion
Quality
Figure 2. Software Selection Categories [22]
Distance is a limiting factor to team communication and
collaboration [27][28]. In GSD projects, collaboration tools are
used to overcome communication and collaboration problems
caused by distance and distribution [27][29]. In order to be able
to identify criteria relevant for collaboration tool selection, an
understanding of how distance affects collaboration is needed.
“Distance” in GSD is not only limited to the geographical
separation. The term “distance” involves besides the geograph-
ical distribution of development teams also their socio-cultural
diversity as well as the time difference across various sites
[6][27][30].
These dimensions of distance have negative effects on three
essential aspects of collaboration [27][31]: Communication,
coordination and control. Additionally to these three aspects
discussed by [31], trust within an team – an additional factor
for successful collaboration [32] – is affected. An approach
to overcome these challenges and limitations is to provide
appropriate communication channels and media which are
capable of supporting the different aspects of collaboration and
communication across sites [33]. Based on existing ﬁndings,
following functions could be identiﬁed for facilitating com-
munication, control and trust building and, therefore, provide
collaboration support.
-
Forum/Discussion Board [27][34]
-
Instant Messaging [35][36]
-
Wikis [37][38]
-
Blogs [27][34]
-
Collaborative Calendars [10][39]
-
Meeting Request/Scheduling [10]
-
Task/Bug Tracking [40]
-
Time/Project Planning Support [40]
-
Shared Workspaces [10][41]
-
Work Social Networks [42][43]
-
Video Conferencing/Telephony [44]
IV.
EMPIRICAL FIELD STUDY
An empirical ﬁeld study was performed at msg systems
in Passau, Germany. Results were collected using expert inter-
views. The expert interviews were conducted in a group setting
based on the method described in [45, p. 363ff]. The designed
interview guideline focused on ﬂexibility and adaptability of
the decision support method, the preselection of collaboration
speciﬁc criteria and the criteria selection support. In order to
check whether the preselection of criteria does not interfere
with the ﬂexibility and adaptability of the method a question
targeting the ﬂexibility of the criteria selection was included.
The guideline was checked in terms of comprehensibility and
structure in individual pretests involving two participants.
95
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

A. CollabSelect - Prototypical HKBS Implementation
At the time of this study neither an open source nor a
commercial implementation of a HKBS tool was available.
Subsequently a brief description of design and implementation
of a prototypical HKBS tool called “CollabSelect” is given.
The goal of the implementation was to provide tool support for
the HKBS method, including the guided selection of criteria,
especially in terms of the ﬂexibility of criteria and scales.
CollabSelect has been implemented as an web-based tool
using Java Server Faces (JSF). For the realization of the CBR
components, an existing Framework called “myCBR” was used
[46]. Criteria are provided using an xml ﬁle which can be
changed at runtime. Scales can be deﬁned either in the xml ﬁle
directly with the criteria or using the GUI editor implemented
in CollabSelect. CollabSelect provides support for the entire
HKBS method including:
-
Support of criteria selection (on the basis of [22])
-
Adaptability of criteria and scales
-
Case management & reuse of existing cases
-
Query execution & presentation of results
-
Export to myCBR workbench
B. Field Study Setting
Using the developed tool, the HKBS method has been
tested in two GSD projects. The goal was to provide indi-
cators whether the HKBS method is able to support ﬂexible
and targeted selection of collaboration tools. The ﬁeld study
involved four participants assigned to two distributed projects
ﬁlling different positions in the organization. All participants
were involved in other distributed software developments
projects prior to the current projects. Both involved projects
are distributed over Europe, including sites in Passau/Germany,
Cluj/Romania, and Hagenberg/Austria. 22 respectively 6 to 15
employees, depending on the workload, are assigned to the
projects.
C. Method & Approach
The selection of the participants complies with the expert
deﬁnition presented in [47]. Based on this deﬁnition, a project
manager, an assistant project manager, and two developers
were selected as participants. Results were collected using
the expert interview method conducted in a group setting as
described in [45]. The selected interview method requires an
interview guideline to structure the interview. The designed
guideline focused on ﬂexibility and adaptability of the decision
support method, the preselection of collaboration speciﬁc
criteria, and the criteria selection support. In order to check
whether the preselection of criteria does not interfere with the
ﬂexibility and adaptability of the method, a question targeting
the ﬂexibility of the criteria selection was included.
Prior to the ﬁeld study the participants individually re-
ﬂected based on their experience upon relevant aspects and
criteria in terms of the selection of collaboration tools. The
main part of the ﬁeld study was an exemplary selection process
of a collaboration tool for the participants’ current projects.
This selection was based on the procedure given by HKBS:
1)
Criteria Selection
2)
Case Creation
3)
Querying the System
4)
Adaption of Criteria & Scales
5)
Re-Querying the system using adapted scales
This selection process was also conducted in a group
involving all the participants. This setting enabled the inclusion
of all decision makers in the discussion about criteria and
criteria weights. Directly after the selection process the group
interview was conducted based on the designed interview
guideline.
D. Results
Following, the results of the audio recorded interview are
aggregated and presented according to the interview guideline.
Preselected General and Functional Criteria: The pre-
selected software selection criteria were seen as rather coarse
grained covering a wide range of aspects. This leads to the
usage of just small subset of the preselected criteria. However,
this was not experienced as cumbersome, but rather as an
advantage when selecting other types of software. Criteria
which were not relevant in this context may be of relevance
in a different selection context. The participants noted that
the relevance of criteria does not only depend on the project
situation but is also inﬂuenced by the involved decision makers
and their roles.
The identiﬁed collaboration related, functional criteria have
been perceived as adequate and in accordance with the partic-
ipants’ expectations. The participants mentioned that it would
be useful to use more ﬁne-grained functional criteria. The
idea was to use the identiﬁed functional criteria as a starting
point and detail the criteria based on use cases in the project.
However, the participants stated that this would have to be
done in every project situation separately, since the relevant
use cases vary from project to project. Therefore, this would
be in the responsibility of the decision makers and should be
provided as an additional step in the selection process.
Flexibility of Criteria Selection: The participants per-
ceived the selection of the criteria as “highly adaptable”. Espe-
cially the possibility to adapt the suggested criteria set in terms
of removing or adding criteria contributed to the ﬂexibility to
the criteria selection process. According to the participants,
additionally the customizability of scales contributed to the
overall ﬂexibility.
Support of Criteria Selection: The step of criteria se-
lection triggered intensive discussions about the requirements
in the project. The participants stated that this discussion
supported the identiﬁcation and understanding of the relevant
project-speciﬁc criteria. The criteria suggestions provided by
the tool and the resulting discussions helped to identify relevant
criteria which have not been seen as relevant beforehand. One
of the participants noted that the tool supported suggestion of
criteria may cause the decision makers to be too focused on
the suggested criteria hindering them to consider additional
aspects. His suggestion was that each decision maker individ-
ually reﬂects upon relevant criteria before the actual selection
process, as done before the study, to minimize the bias caused
by the criteria suggestion.
Inclusion of Relevant Criteria: The participants were
asked whether all, in their opinion relevant criteria could
be represented by the decision support method. Due to the
support of qualitative as well as quantitative criteria and the
adaptability of the criteria set, all relevant criteria could be
represented in the decision model. Relevant criteria which were
96
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

not included in the criteria set could be added ad hoc during
the criteria selection.
Adaptability of Tool Selection Regarding the Project
Situation: The participants considered the selection using the
HKBS method as adaptable. Different selection contexts can
be represented using this method. The ﬂexibility of the criteria
set and scales are seen as an important aspect supporting
this adaptability. However, the participants interposed that the
selection of collaboration tools in a project situation might not
be suitable to evaluate this aspect, since, according to their
past experiences, decisions about collaboration tools are made
company-wide not on project level.
Suggestions and Improvements: The adaptability of
criteria and scales lead to the demand for the possibility to
annotate changes. According to the participants documenting
rational for changes would be beneﬁcial for understanding
what lead to certain decisions. Furthermore, also annotating
the selected criteria values when creating the alternatives was
requested. Especially when dealing with qualitative criteria
this would again facilitate the traceability of the given criteria
values.
The participants requested, in order to facilitate the adap-
tion of criteria and scales, that additionally to the suggestion
of criteria, also a set of predeﬁned scales should be included.
The adaptability and customizability is already given but would
additionally be supported by this enhancement. Moreover, a
participant suggested that methodological support for deﬁning
scales, especially for qualitative scales, would facilitate the
customization of scales.
V.
DISCUSSION
The study revealed advantages and shortcomings of the
application of the HKBS method for collaboration tool se-
lection. The inclusion of all relevant criteria (types) and the
criteria selection support were seen as positive features of the
HKBS method. Comparing HKBS and AHP in terms of the
inclusion of several criteria types no real advantage of either
method can be found in literature [11][22]. So it is arguable
that these advantage for selecting collaboration tools applies
also for other methods supporting various criteria types.
Looking at the criteria selection process the study shows
that further support is needed. Considering these results the
explicit inclusion of guided criteria selection in HKBS seems
beneﬁcial. Future studies should focus on how criteria selection
support can be further improved. Compared to HKBS, AHP is
in literature and practice the more prominent decision support
method [26]. Combining the context-speciﬁc criteria selection
support of HKBS with the profound decision support approach
of AHP could provide a comprehensive selection support.
Having developed this extension of AHP an extended survey
comparing HKBS and AHP in different application areas
would be of interest.
Concerning the reuseability and adaptability of decision
models the results lessen the alleged advantage as discussed
by [22], at least for the selection of collaboration tools. In other
areas of application, reusability might be more beneﬁcial.
VI.
CONCLUSION
Collaboration tools provide support for distributed develop-
ment teams. In order to provide adequate support, collaboration
tools need to be selected based on the requirements in the
project. Indicators were found that the HKBS method enables
targeted selection of collaboration tools taking the speciﬁcs of
the project situation into account. Also, shortcomings of the
HKBS method have been identiﬁed. In addition, the results of
the ﬁeld study show that decision makers lack methodological
guidance in customizing criteria and scales to reﬂect the given
project situation. It was suggested to enhance the selection
process with an additional upstream step. In this step, the ﬁne-
grained requirements and criteria should be identiﬁed based on
project-speciﬁc use cases. This insight may also be beneﬁcial
for extensions of other decision support methods.
This initial study provides a basis for future studies, to
verify the herein presented results and suggestions in multiple
project settings including more participants.
REFERENCES
[1]
D. E. Damian and D. Moitra, “Global software development develop-
ment : How far have we come?” IEEE Software, vol. 23, no. 5, 2006,
pp. 17–19.
[2]
J. D. Herbsleb and D. Moitra, “Global software development,” IEEE
Software, vol. 18, no. 2, 2001, pp. 16–20, [retrieved: Feb., 2015].
[Online].
Available:
http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.
htm?arnumber=914732
[3]
P. ˚Agerfalk, B. Fitzgerald, H. Holmstr¨om Olsson, and E. ´O Conch´uir,
“Beneﬁts of global software development: The known and unknown,”
in Making Globally Distributed Software Development a Success
Story, ser. Lecture Notes in Computer Science, Q. Wang, D. Pfahl,
and D. M. Raffo, Eds.
Springer Berlin Heidelberg, 2008, vol.
5007, pp. 1–9, [retrieved: Feb., 2015]. [Online]. Available: http:
//dx.doi.org/10.1007/978-3-540-79588-9 1
[4]
K.
Liukkunen,
K.
Lindberg,
J.
Hyysalo,
and
J.
Markkula,
“Supporting collaboration in the geographically distributed work
with communication tools in the remote district sme’s,” Global
Software Engineering ICGSE 2010 5th IEEE International Conference
on, 8 2010, pp. 155–164, [retrieved: Feb., 2015]. [Online]. Available:
http://ieeexplore.ieee.org/xpl/freeabs all.jsp?arnumber=5581505
[5]
F. Lanubile, C. Ebert, R. Prikladnicki, and A. Vizca´ıno, “Collaboration
tools for global software engineering,” IEEE Software, vol. 27, no. 2,
2010, pp. 52 – 55.
[6]
J. Herbsleb, “Global software engineering: The future of socio-technical
coordination,” in Future of Software Engineering, 2007. FOSE ’07, May
2007, pp. 188–198.
[7]
R. E. Grinter, J. D. Herbsleb, and D. E. Perry, “The geography of
coordination : Dealing with distance in r & d work,” in Phoenix Usa.
ACM Press, 1999, pp. 306–315, [retrieved: Feb., 2015]. [Online].
Available: http://portal.acm.org/citation.cfm?id=320333
[8]
J. D. Herbsleb and a. Mockus, “An empirical study of speed
and communication in globally distributed software development,”
IEEE Transactions on Software Engineering, vol. 29, no. 6, 2003,
pp.
481–494,
[retrieved:
Feb.,
2015].
[Online].
Available:
http:
//ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1205177
[9]
M. Gupta and J. Fernandez, “How globally distributed software
teams can improve their collaboration effectiveness?” 2011 IEEE
Sixth International Conference on Global Software Engineering, 8
2011, pp. 185–189, [retrieved: Feb., 2015]. [Online]. Available: http:
//ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6063166
[10]
D.
Christian
and
S.
Rotenstreich,
“An
evaluation
framework
for distributed collaboration tools,” Information Technology New
Generations ITNG 2010 Seventh International Conference on, 2010,
pp.
512–517,
[retrieved:
Feb.,
2015].
[Online].
Available:
http:
//ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5501680
[11]
T. L. Saaty, “Decision making with the analytic hierarchy process,”
International Journal of Services Sciences (IJSSCI), vol. 1, no. 1, 2008.
[12]
X. B. Illa, X. Franch, and J. A. Pastor, “Formalising erp selection
criteria,” Tenth International Workshop on Software Speciﬁcation and
Design IWSSD10 2000, 2000, pp. 115–122, [retrieved: Feb., 2015].
[Online].
Available:
http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.
htm?arnumber=891132
97
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

[13]
J. Kontio, G. Caldiera, and V. R. Basili, “Deﬁning factors, goals
and criteria for reusable component evaluation,” in Proceedings
of the 1996 Conference of the Centre for Advanced Studies on
Collaborative Research, ser. CASCON ’96.
IBM Press, 1996, pp.
21–32, [retrieved: Feb., 2015]. [Online]. Available: http://dl.acm.org/
citation.cfm?id=782052.782073
[14]
G. Ruhe, “Intelligent support for selection of cots products,” in Web,
Web-Services, and Database Systems, ser. Lecture Notes in Computer
Science, A. Chaudhri, M. Jeckle, E. Rahm, and R. Unland, Eds.
Springer Berlin Heidelberg, 2003, vol. 2593, pp. 34–45, [retrieved: Feb.,
2015]. [Online]. Available: http://dx.doi.org/10.1007/3-540-36560-5 3
[15]
E. Triantaphyllou, B. Shu, S. N. Sanchez, and T. Ray, “Multi-criteria
decision making: an operations research approach,” Encyclopedia of
electrical and electronics engineering, vol. 15, 1998, pp. 175–186.
[16]
G. C. Roper-Lowe and J. A. Sharp, “The analytic hierarchy process and
its application to an information technology decision,” Journal of the
Operational Research Society, vol. 41, no. 1, 1990, pp. 49–59.
[17]
C.-C. Wei, C.-F. Chien, and M.-J. J. Wang, “An ahp-based approach
to {ERP} system selection,” International Journal of Production Eco-
nomics, vol. 96, no. 1, 2005, pp. 47 – 62.
[18]
K. P. Yoon and C.-L. Hwang, Multiple attribute decision making:
an introduction, ser. Quantitative Applications in the Social Sciences.
Thousand Oaks, California: SAGE Publications, Incorporated, 1995, no.
104.
[19]
C.-L.
Hwang
and
K.
Yoon,
“Methods
for
multiple
attribute
decision
making,”
in
Multiple
Attribute
Decision
Making,
ser.
Lecture Notes in Economics and Mathematical Systems.
Springer
Berlin Heidelberg, 1981, vol. 186, pp. 58–191. [Online]. Available:
http://dx.doi.org/10.1007/978-3-642-48318-9 3
[20]
A. Jadhav and R. Sonar, “Analytic hierarchy process (ahp), weighted
scoring method (wsm), and hybrid knowledge based system (hkbs)
for software selection: A comparative study,” Emerging Trends
in Engineering and Technology ICETET 2009 2nd International
Conference
on,
2009,
pp.
991–997,
[retrieved:
Feb.,
2015].
[Online].
Available:
http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.
htm?arnumber=5395484
[21]
A. Mohamed, T. Wanyama, G. Ruhe, A. Eberlein, and B. Far, “Cots
evaluation supported by knowledge bases,” in Advances in Learn-
ing Software Organizations, ser. Lecture Notes in Computer Science,
G. Melnik and H. Holz, Eds.
Springer Berlin Heidelberg, 2004, vol.
3096, pp. 43–54.
[22]
A. S. Jadhav and R. M. Sonar, “Framework for evaluation and
selection of the software packages: A hybrid knowledge based system
approach,” Journal of Systems and Software, vol. 84, no. 8, 8
2011, pp. 1394–1407, [retrieved: Feb., 2015]. [Online]. Available:
http://linkinghub.elsevier.com/retrieve/pii/S016412121100077X
[23]
T. L. Saaty, “How to make a decision : The analytic hierarchy process,”
European Journal of Operational Research, vol. 48, no. 1, 1990, pp. 9–
26.
[24]
O. S. Vaidya and S. Kumar, “Analytic hierarchy process: An
overview of applications,” European Journal of Operational Research,
vol. 169, no. 1, 2006, pp. 1 – 29. [Online]. Available: http:
//www.sciencedirect.com/science/article/pii/S0377221704003054
[25]
J. R. S. C. Mateo, “Weighted sum method and weighted product
method,”
in
Multi
Criteria
Analysis
in
the
Renewable
Energy
Industry, ser. Green Energy and Technology.
Springer London,
2012,
pp.
19–22,
[retrieved:
Feb.,
2015].
[Online].
Available:
http://dx.doi.org/10.1007/978-1-4471-2346-0 4
[26]
T.
¨Ozcan,
N.
C¸ elebi,
and
c.
Esnaf,
“Comparative
analysis
of
multi-criteria decision making methodologies and implementation of
a warehouse location selection problem,” Expert Syst. Appl., vol. 38,
no. 8, Aug. 2011, pp. 9773–9779, [retrieved: Feb., 2015]. [Online].
Available: http://dx.doi.org/10.1016/j.eswa.2011.02.022
[27]
F. Lanubile, “Collaboration in distributed software development,”
in Software Engineering, ser. Lecture Notes in Computer Science,
A. De Lucia and F. Ferrucci, Eds.
Springer Berlin Heidelberg, 2009,
vol. 5413, pp. 174–193. [Online]. Available: http://dx.doi.org/10.1007/
978-3-540-95888-8 7
[28]
H. Holmstrom, E. O. Conchuir, P. J. ˚Agerfalk, and B. Fitzgerald,
“Global software development challenges: A case study on temporal,
geographical and socio-cultural distance,” in Global Software Engineer-
ing, 2006. ICGSE ’06. International Conference on, 2006, pp. 3–11.
[29]
T. Nguyen, T. Wolf, and D. Damian, “Global software development
and delay: Does distance still matter?” in Global Software Engineering,
2008. ICGSE 2008. IEEE International Conference on, 2008, pp. 45–54.
[30]
P.
Agerfalk,
B.
Fitzgerald,
and
H.
H.
Olsson,
“A
framework
for considering opportunities and threats in distributed software
development,” 2005, [retrieved: Feb., 2015]. [Online]. Available:
http://ulir.ul.ie/handle/10344/2347
[31]
E. Carmel and R. Agarwal, “Tactical approaches for alleviating
distance in global software development,” IEEE Software, vol. 18,
no. 2, 2001, pp. 22–29, [retrieved: Feb., 2015]. [Online]. Available:
http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=914734
[32]
N. B. Moe and D. ˇSmite, “Understanding a lack of trust in global
software teams: a multiple-case study,” Software Process: Improvement
and Practice, vol. 13, no. 3, 2008, pp. 217–231.
[33]
A. R. Dennis, R. M. Fuller, and J. S. Valacich, “Media, tasks, and
communication processes: A theory of media synchronicity,” MIS
Quarterly, vol. 32, no. 3, 2008, pp. 575–600.
[34]
G. Booch and A. W. Brown, “Collaborative development environments,”
Advances in Computers, vol. 59, 2003, pp. 1–27.
[35]
C. Ebert, Global Software and IT: A Guide to Distributed Development,
Projects and Outsourcing.
Hoboken, New Jersey: John Wiley & Sons,
2011.
[36]
E. Carmel and R. Prikladnicki, “Does time zone proximity matter for
brazil? a study of the brazilian it industry,” Social Science Research
Network, 2010.
[37]
T. P. L. Grace, “Wikis as a knowledge management tool,” Journal of
Knowledge Management, vol. 13, no. 4, 2009, pp. 64–74.
[38]
W. Xiao, C. Chi, and M. Yang, “On-line collaborative software
development via wiki,” in Proceedings of the 2007 international
symposium on Wikis, ser. WikiSym ’07.
New York, NY, USA:
ACM, 2007, pp. 177–183, [retrieved: Feb., 2015]. [Online]. Available:
http://doi.acm.org/10.1145/1296951.1296970
[39]
J. Tullio, J. Goecks, E. D. Mynatt, and D. H. Nguyen, “Augmenting
shared personal calendars,” in Symposium on User Interface Software
and Technology: Proceedings of the 15 th annual ACM symposium
on User interface software and technology, vol. 27, no. 30, 2002, pp.
11–20.
[40]
D. Bertram, A. Voida, S. Greenberg, and R. Walker, “Communication,
collaboration, and bugs: the social nature of issue tracking in small,
collocated teams,” in Proceedings of the 2010 ACM conference on
Computer supported cooperative work, 2010, pp. 291–300.
[41]
P. Dourish and V. Bellotti, “Awareness and coordination in shared
workspaces,” in CSCW ’92: Proceedings of the 1992 ACM conference
on Computer-supported cooperative work, no. November.
New York,
NY, United States: ACM, 1992, pp. 107–114.
[42]
J. Kotlarsky and I. Oshri, “Social ties, knowledge sharing and successful
collaboration in globally distributed system development projects,”
European Journal of Information Systems, vol. 14, no. 1, 2005, pp.
37–48.
[43]
J. DiMicco, D. R. Millen, W. Geyer, C. Dugan, B. Brownholtz, and
M. Muller, “Motivations for social networking at work,” Proceedings
of the ACM 2008 conference on Computer supported cooperative work
CSCW 08, no. 3, 2008, pp. 711–720, [retrieved: Feb., 2015]. [Online].
Available: http://portal.acm.org/citation.cfm?doid=1460563.1460674
[44]
J. Noll, S. Beecham, and I. Richardson, “Global software development
and collaboration: Barriers and solutions,” ACM Inroads, vol. 1, no. 3,
Sep. 2011, pp. 66–78. [Online]. Available: http://doi.acm.org/10.1145/
1835428.1835445
[45]
H. Kromrey, Empirische Sozialforschung.
UTB, Stuttgart, 2009.
[46]
DFKI and UWL, “mycbr,” 2013, [retrieved: Feb., 2015]. [Online].
Available: http://www.mycbr-project.net/
[47]
M. Meuser and U. Nagel, “Das experteninterview — konzeptionelle
grundlagen und methodische anlage,” in Methoden der vergleichenden
Politik- und Sozialwissenschaft, S. Pickel, G. Pickel, H.-J. Lauth,
and D. Jahn, Eds.
VS Verlag f¨ur Sozialwissenschaften, 2009,
pp.
465–479,
[retrieved:
Feb.,
2015].
[Online].
Available:
http:
//dx.doi.org/10.1007/978-3-531-91826-6 23
98
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-395-7
BUSTECH 2015 : The Fifth International Conference on Business Intelligence and Technology

