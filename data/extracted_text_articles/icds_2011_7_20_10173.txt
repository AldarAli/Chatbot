Software Platform Architecture for Ubiquitous City Management 
 
 
Kyung-Won Nam 
Fusion Technology Team, R&D Division, LG CNS 
Seoul, Korea 
lenny@lgcns.com 
Jin-Su Park 
Fusion Technology Team, R&D Division, LG CNS 
Seoul, Korea 
jsupark@lgcns.com
 
 
Abstract— U-City (Ubiquitous City), which is a city or a region 
with ubiquitous information technology, has recently emerged 
as an important government initiative for urban management 
in Republic of Korea. There are various kind of information 
related to the u-city and these information can be gathered 
through technologies such as wireless networking, RFID 
(Radio Frequency Identification) tags, CCTV (closed-circuit 
television) and sensors. In addition, information from existing 
legacy systems (e.g. Intelligent Transport System, Urban 
Facility Management System) can be related to the previously 
mentioned information. In the concept of U-City, U-services 
(Ubiquitous urban services) like U-Facility, U-Transport, U-
Security and U-Environment are defined as services which 
process a large number of multiple events occurred in urban 
areas by using these information. In the past years, Events or 
information from U-services has been separately managed 
causing an increase in system complexity, overlapping 
investment costs and so on. Also, due to the lack of suitable 
urban management system, there has been difficulty in 
integrating with other urban management solutions. In terms 
of urban management, there must be a system that can store 
and process the massive amount of data collected from U-
services. This paper discusses the flexible and extensible 
software platform architecture to manage these ubiquitous 
information more effectively. 
Keywords-Ubiquitous City; Ubiquitous  Urban Services; 
Software Platform; Flexible and Extensible Architecture; 
Ubiquitous Information 
I. 
 INTRODUCTION  
In the past, there have been problems like the regional 
unbalance, environmental pollution and so on among cities 
[3]. As the search has been on for alternative city 
management to these problems, paradigm for city 
management has shifted from the conventional urban 
management system to the new intelligent management 
system based on the ubiquitous technologies [5]. With the 
rapid growth of ubiquitous computing systems, it is possible 
to provide citizen with the information services for urban 
situation at any time and monitor situation around cities in 
real time [4]. In the Republic of Korea, the word “U-City 
(Ubiquitous City)” refers to a city or region with ubiquitous 
information technologies, as shown in Figure 1. All 
information systems are linked, and virtually everything is 
linked to an information system through technologies such as 
wireless network, RFID (Radio Frequency Identification) 
tags or readers, CCTV (closed-circuit television) cameras. 
Using these information and technologies, it is also possible 
to develop cities and the quality of life among citizen. Thus, 
adoption of the new software platform architecture for urban 
management system is necessary to manage various kind of 
information from U-city effectively.  
The following sections of this paper discuss the U-City 
infrastructure in South Korea and its components. This paper 
then introduces the flexible and extensible software platform 
architecture. 
 
 
Figure 1.  The concept of ubiquitous city 
This paper is organized as follows: Section Ⅱ describes 
the U-City Infrastructure in South Korea. Then in Section Ⅲ, 
the design principles of software platform architecture is 
presented. In Section Ⅳ, we suggest the software platform 
architecture for urban management system. Finally Section 
Ⅴ concludes the paper and discusses future work. 
II. 
U-CITY INFRASTRUCTURE 
Figure 2 shows the U-City IT framework which consists 
of the followings: 
 
178
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

 
Figure 2.  U-City IT framework 
 
U-Service is the application set which provide 
citizen with a variety of urban-related services. U-
Safety enables IP based broadband integrated 
surveillance, automatic object recognition and 
tracking using pattern recognition technology. U-
Health is a medical data sharing system between 
organizations and clients integrating separated 
information hospital projects. U-Facility is a real-
time urban monitoring and remote controlling 
system based on 2D or 3D GIS map. U-
Transportation is tailored/real time services for 
customers 
establishing 
national 
integrated 
transportation information center. U-Government, 
which is paperless government, civil affair services, 
is integrated government services focused to citizens. 
U-Education 
is 
personalized/tailored 
learning 
services enabling decreasing expenses on private 
education. Learning everywhere is possible by 
providing mobile devices and network infra. U-
Education is increasing confidence of public 
education with intelligent and systemic education. 
 
 U-Device refers to a device which presents 
information and data collected from U-Services by 
providing user interface or a device which creates 
information and data like CCTV cameras, sensors. 
Wired/wireless U-Device is combined with each 
other to make ubiquitous computing available for the 
citizen  
 
U-Service platform makes each U-Service to interact 
with U-devices easily hiding the details of a 
particular set of functionality. 
 
 The most widely used technologies like RFID 
(Radio Frequency Identification), USN (Ubiquitous 
Sensor Network), GIS (Geographic Information 
System), GPS (Global Positioning System) are 
grouped into U-Component Technology including 
3rd party solutions. 
 
III. 
DESIGN PRINCIPLES OF SOFTWARE PLATFORM 
ARCHITECTURE 
As mentioned above, the massive amount of data can be 
collected from U-Services or many kinds of ubiquitous 
devices. Therefore, a suitable urban management system 
based on layered architecture is necessary to process those 
data. For the effectiveness of urban management, adoption of 
flexible and extensible software platform architecture in 
urban management systems is emerging as a major issue 
lately. 
The flexible and extensible software platform architecture 
is required to meet the following requirements: 
 
standard interface to various kinds of U-services, 
 
standard interface to heterogeneous ubiquitous 
devices using multiple protocol, 
 
creating and processing business events through 
collected data, 
 
interface to other relevant external systems, 
 
interface support for compatibility with third party 
solutions, 
 
user interface for monitoring data collected from U-
services and devices, 
 
guaranteeing extensibility for processing large 
amount of data, 
 
standard security policy for complex interface,  
 
We focus on two key aspects of design principles when 
adopting architecture for urban management system. 
A. Distributed and loosely-coupled System 
By adopting distributed and loosely-coupled system, it is 
possible to distribute data and traffic load [1]. Each 
component can easily be altered to accommodate changes in 
system capability and system requirements [1][6]. When the 
some aspect of the system is scaled to a larger size, it can 
operate correctly. 
B. Service Oriented Architecture 
SOA (Service Oriented Architecture) is a flexible set of 
design principles used during the phase of systems 
development and integration in computing. A system based 
on SOA architecture will provide a loosely-coupled suite of 
services that can be used within multiple separate systems 
from several business domains. SOA advocates an approach 
in which a software component provides its functionality as a 
service that can be leveraged by other software components. 
SOA allows the integration of existing systems, applications 
and users into a flexible architecture that can easily 
accommodate changing needs It can also provide various 
kinds of applications and other different platform with 
standard interface. There are lots of advantages including the 
ability to monitor and track the transaction among systems in 
179
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

terms of service oriented architecture based on ESB 
(Enterprise service Bus).  
An ESB is an architectural pattern and a key enabler in 
implementing the infrastructure for a service oriented 
architecture. The increasing adoption of SOA and the 
proliferation of Web services have revealed an ever growing 
need to provide a managed layer between services and their 
consumers. 
 
 
Figure 3.  The Enterprise Service Bus  (Mahesh H. Dodani, “From Objects 
to Services: A Journey in Search of Component Reuse Nirvana”, IBM 
Software) 
 
IV. 
SOFTWARE PLATFORM ARCHITECTURE FOR URBAN 
MANAGEMENT SYSTEM 
A. Layer Design of Software Platform Architecture 
A multi-layer system is using different layers for 
allocating the responsibilities of an application. It helps to 
structure applications that can be decomposed into groups of 
subtasks in which each group of subtasks is at a particular 
level of abstraction.  It has several benefits than other 
existing system implementing its layers as a monolithic 
block. In multi-layer systems, each layer can be reused if it 
has well-defined interface. And also, changes in each layer 
affect only one layer. Thus, developers can adapt affected 
layers without altering the remaining layers. 
Considering the advantage of a multi-layer system 
mentioned above, adopting multi-layer system is necessary 
to improve system performance and reduce system 
complexity because the urban management system has to 
process large amount of data gathered all around the city. 
Platform-independent technologies can be provided through 
this layered architecture and also loosely-coupled system is 
needed to meet the requirements of many applications.  
As shown in Figure 4, in this section, we introduce layer 
design of software platform architecture. The architecture 
consists of 3-level layer based on distributed system and 
each layer interacts with other layer by standard interface 
like web services. Each layer consists of stand-alone 
components which have similar responsibility resulting in 
developing each layer easily and load balancing. 
 
1) U-Infra Abstraction Layer: This layer collects data 
through interaction with sensing collection server like RFID 
middleware, USN (Ubiquitous Sensor Network) middleware, 
media board and CCTV server. It provides standard APIs 
(Application Programming Interface) to control U-devices  
(ubiquitous devices). For example, it receives response from  
sensors after  sending request for controlling sensors. 
 
2)  Platform Service Layer: This layer stores and 
processes data collected after sending commands to U-Infra 
Abstraction Layer. On the request from U-Service 
Integration Layer, it processes data and events to U-Service 
Integration Layer. 
 
3) U-Service Integration Layer: U-Services interacts 
with  other layers through U-Service Integration Layer. This 
layer proposes internal/external interface standard. 
 
 
Figure 4.  Layer design of software platform architecture 
Each layer can be installed independently or integrated 
into a single machine depending on the capacity of the 
system. The software components belonging to one layer 
communicate with the other layers in a way of pre-defined 
interfaces. For example, a component of Platform Service 
Layer can call Web Service APIs of the U-Infra Abstraction 
Layer, which displays alert text message of the possibility of 
flooding through the media board (also known as digital 
signage) around the street. In the same manner, USN 
Middleware of U-Infra Abstraction Layer can send the water 
level information to the subscribers (U-Service application or 
Monitoring System) using the Internal Bus that can be 
implemented with Message Oriented Middleware. 
180
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

V. 
CONCLUSION AND FUTURE WORK 
In Korea, most of urban development project recently 
established is being promoted by national U-City strategy. 
With increasing number of U-City construction projects, it 
is expected that the total number of population residing in 
U-Cities in 2015 will reach at about 2.3 million. The U-City 
act proposed by the Korean Ministry of Land, Transport and 
Maritime Affairs was enacted through discussion with 
related departments and public hearing. As the demand for 
U-City rises, the demand for the robust software system 
which is capable of managing information and the devices 
city-wide will become a greater priority. 
In this paper, we proposed software architecture for U-
City information system but more work is needed. We need 
to find and develop new service models for U-City residents. 
Standardization of the software platform would be an issue 
for government to prevent overlapped investment. More 
than all, the work should be for the convenient, safe, and 
pleasant life of citizens. 
ACKNOWLEDGMENT 
This research was supported by a grant (07High Tech 
A01) from High tech Urban Development Program funded 
by Ministry of Land, Transportation and Maritime Affairs of 
Korean government. 
 
REFERENCES 
[1] Birman, K., Reliable Distributed Systems:Technologies, Web 
Services and Applications., New York: Springer-Verlag, 2005. 
[2] Mahesh Dodani, From Objects to Services: A Journey in Search of 
Component Reuse Nirvana, in Journal of Object Technology, vol. 3, 
September-October 2004, pp. 49-54. 
[3] D. H. Shin, “Ubiquitous city:Urban technologies, urban infrastructure 
and urban informatics,” Journal of Information Science 2009, vol. 35, 
pp. 515-526. 
[4] Vassilis Kostakos, T Nicolai, E Yoneki, Eamonn O'Neill, H Kenn, 
and J. Crowcroft, “Understanding and measuring the urban pervasive 
infrastructure” Personal and Ubiquitous Computing 2010, vol 13, pp. 
355-364. 
[5] Lee, S. H, Yigitcanlar, Tan, Han, Jung-Hoon, Leem, and Youn-Taik 
(2008), “Ubiquitous urban infrastructure : Infrastructure planning 
and development in Korea,” Innovation: Management, Policy and 
Practice, 10(2/3). pp. 282-292. 
[6] M. van Steen, F. J. Hauck, and A. S. Tanenbaum. “A Model for 
Worldwide Tracking of Distributed Objects.” In Proc. TINA’96 
Conference, Heidelberg (Germany), Sept. 1996. 
[7] W. T. Tsai, Miroslaw Malek, Yinong Chen, and Farokh Bastani. 
“Perspectives on Service-Oriented Computing and Service-Oriented 
System Engineering” The 2nd IEEE International Workshop on 
ServiceOriented System Engineering SOSE 06 (2006). pp3-10. 
 
 
 
181
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

