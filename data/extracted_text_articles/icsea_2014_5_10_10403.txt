Quantum States in Bivalent Logic
Mikael Fridenfalk
Department of Game Design
Uppsala University
Visby, Sweden
mikael.fridenfalk@speldesign.uu.se
Abstract—Bivalent or two-valued logic is presently the foundation
of logic in mathematics and computer science, and a cornerstone
of software development. To address a number of classical logical
paradoxes, such as Russell’s, multi-valued logic, such as balanced
ternary logic has shown to be useful. Current methods lead
however to information loss. Thus, to theoretically improve the
robustness of bivalent logic, this paper proposes the use of
quantum states, followed by an example, where the proposed
method is shown to be successful in the solution of a problem
that is not directly solvable using contemporary methods.
Keywords-bivalent logic; propositional logic; quantum state;
Russell’s paradox; ternary logic
I.
INTRODUCTION
On the topics of fundamentals in software development
and information modeling, the logical systems today are either
typically based on static bivalent logical values, such as true
and false, or static fuzzy logic values. This paper does not
address quantum logic [1], or quantum computing, where
the laws of logic are expanded for application in quantum
mechanics, but on the contrary, the application of results
from quantum mechanics to classical bivalent logic. In biva-
lent logic, contradictions, such as Russell’s paradox [6], or
Epimenides paradox [5] (which may be expressed as “this
statement is false”), cause an inﬁnite loop of alternating values
such as:
true → false → true → false . . .
(1)
Russell’s paradox hypothesizes the existence of a set that does
not contain itself. Epimenides paradox may be expressed as:
x ≡ ¬x
(2)
In the same way, that resonance may cause instability in control
theory, such contradictions may cause instability in machine
reasoning, e.g., machine interpretation of propositional logic.
To make a comparison with the ﬁeld of robotics, it takes
in general less effort to program an industrial robot that works
in a highly structured environment, than a robot working in
an unstructured one, where for instance the precise position,
orientation, or the geometry of a workpiece are not always
known in advance. Similarly, if we wish to develop machines
that are able to handle and solve logical problems in the real
world, we need to strive towards the incorporation of a higher
level of ﬂexibility in machine information processing, e.g., a
higher level of tolerance towards contradictions.
Presently, computer simulations of logical statements (us-
ing modern computer languages such as C++ or Java), that
include a paradox such as Epimenides or Russell’s, tend to
either cause the simulation to yield incorrect results, or the
program to fall into an inﬁnite loop, why such problems are
presently solved manually. The aim of this paper is, therefore,
to propose a new method that makes the evaluation of logical
statements, that include a paradox (such as Epimenides para-
dox), intrinsically solvable to computers.
As a brief overview of this paper, Section II succinctly
reiterates the state of the art in paradox-tolerant logic. Sec-
tion III presents a proposal with the aim to further the methods
within this ﬁeld, and in Section IV, the new proposal is
veriﬁed by computational experiments. Finally, in Section V,
an example is provided on the application of the new method
in comparison with current ones.
II.
RELATED WORK
In context of paradox-tolerant logic, the design of a versa-
tile system was addressed by Lukasiewicz [3] in 1920, using
a balanced ternary (three-valued) logic. In this system:
1 ← true
0 ← unknown
−1 ← false
(3)
With the deﬁnition of ¬x as −x, (2) is solved by:
x = −x ⇒ x = 0
(4)
In addition to negation (not), see Table I, representing Boolean
logic [2], other logical connectives may be introduced as well,
such as conjunction (and), disjunction (or), implication (→),
and equivalence (↔).
In Lukasiewicz logic, conjunction (x ∧ y) may be deﬁned
as min(x, y), and disjunction (x ∨ y) as max(x, y), which, as
shown in Table II, produce reasonable results. The downside
of this approach is that by using zero to for instance represent
a logical wave, we have effectively lost information regarding
the phase of this wave for further analysis down the line.
TABLE I. BOOLEAN LOGIC
x
y
¬x
x ∧ y
x ∨ y
x → y
x ↔ y
0
0
1
0
0
1
1
0
1
1
0
1
1
0
1
0
0
0
1
0
0
1
1
0
1
1
1
1
In this context, another system of interest is the four-
valued “Diamond” logic [4], which structurally has many
distinct similarities with the proposal presented in this paper. In
“Diamond” logic, in addition to the values true and false, two
new values are introduced, called i and j, where by deﬁnition
i ≡ ¬i and j ≡ ¬j. This deﬁnition resolves the contradiction
in (2), but leads from a perspective, to the generation of a new
set of contradictions, such as while i ∨ ¬i is expected to be a
114
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

TABLE II. A BALANCED TERNARY LOGIC WITH ¬x ≡ −x,
x ∧ y ≡ min(x, y), x ∨ y ≡ max(x, y), x → y ≡ ¬x ∧ y, AND
x ↔ y ≡ (x ∧ y) ∨ (¬x ∧ ¬y)
x
y
¬x
x ∧ y
x ∨ y
x → y
x ↔ y
−1
−1
1
−1
−1
1
1
−1
1
1
−1
1
1
−1
1
−1
−1
−1
1
−1
−1
1
1
−1
1
1
1
1
0
1
0
0
1
1
0
1
0
−1
0
1
0
0
0
−1
0
−1
0
0
0
−1
0
1
−1
0
1
0
0
0
0
0
0
0
0
tautology, since i ≡ ¬i, instead i ∨ ¬i ≡ i, which is caused
by information loss.
III.
PROPOSAL
In the new proposal, based on two quantum states, ψ and
¯ψ, using a 2D Boolean vector:
false = 0 = 002
¯ψ = 1 = 012
ψ = 2 = 102
true = 3 = 112
(5)
false =

0
0

, ψ =

1
0

,
¯ψ =

0
1

, true =

1
1

(6)
In this system, all logical connectives are expected to operate
element-wise on the 2D Boolean vectors. Thus:
¯ψ ≡ ¬ψ,
ψ ≡ ¬ ¯ψ
(7)
Further on, the equation x ≡ ¬x is here regarded as a discrete
wave equation, in essence, similar to the time-dependent
Schrodinger equation in quantum mechanics [7]:
iℏ ∂
∂tΨ(r, t) =

− ℏ2
2m∇2 + V (r, t)

Ψ(r, t)
(8)
where any wave function that can satisfy this equation is called
a “quantum state”. A crucial point here is however that while
in Lukasiewicz logic, the relation x ≡ ¬x is fully satisﬁed (and
by mere deﬁnition in “Diamond” logic), in this new proposal,
x ≡ ¬x is only satisﬁed for ψ and ¯ψ by the substitution of x
with ¬x on the right hand side of the equation, thereby yielding
the solution x ≡ ¬(¬x). However, in this new approach, the
phase of the logical wave is in addition preserved.
IV.
RESULTS
According to the results presented in Tables III-IV, the use
of quantum states appears to yield a truth table for the selected
connectives that preserves the phase of the wave function for
further calculations down the line. In this context, it seems
however that although the results for x ↔ y is technically
correct (which is equivalent to x ≡ y), it would be plausible
to deﬁne a stronger connective for equivalence as well. In
Tables III-IV, “strong” equivalence is denoted as an equivalent
sign with four lines instead of three.
TABLE III. FOUR-VALUED LOGIC BASED ON 2D BIVALENT LOGIC, WITH
x → y ≡ ¬x ∧ y, AND x ↔ y ≡ (x ∧ y) ∨ (¬x ∧ ¬y)
x
y
¬x
x ∧ y
x ∨ y
x → y
x ↔ y
||||
00
00
11
00
00
11
11
11
00
01
11
00
01
11
10
00
00
10
11
00
10
11
01
00
00
11
11
00
11
11
00
00
01
00
10
00
01
10
10
00
01
01
10
01
01
11
11
11
01
10
10
00
11
10
00
00
01
11
10
01
11
11
01
00
10
00
01
00
10
01
01
00
10
01
01
00
11
01
00
00
10
10
01
10
10
11
11
11
10
11
01
10
11
11
10
00
11
00
00
00
11
00
00
00
11
01
00
01
11
01
01
00
11
10
00
10
11
10
10
00
11
11
00
11
11
11
11
11
TABLE IV. SAME AS PREVIOUS TABLE, BUT HERE WITH 0 ← 002,
ψ ← 012, ¯ψ ← 102, AND 1 ← 112
x
y
¬x
x ∧ y
x ∨ y
x → y
x ↔ y
||||
0
0
1
0
0
1
1
1
0
ψ
1
0
ψ
1
¯
ψ
0
0
¯
ψ
1
0
¯
ψ
1
ψ
0
0
1
1
0
1
1
0
0
ψ
0
¯
ψ
0
ψ
¯
ψ
¯
ψ
0
ψ
ψ
¯
ψ
ψ
ψ
1
1
1
ψ
¯
ψ
¯
ψ
0
1
¯
ψ
0
0
ψ
1
¯
ψ
ψ
1
1
ψ
0
¯
ψ
0
ψ
0
¯
ψ
ψ
ψ
0
¯
ψ
ψ
ψ
0
1
ψ
0
0
¯
ψ
¯
ψ
ψ
¯
ψ
¯
ψ
1
1
1
¯
ψ
1
ψ
¯
ψ
1
1
¯
ψ
0
1
0
0
0
1
0
0
0
1
ψ
0
ψ
1
ψ
ψ
0
1
¯
ψ
0
¯
ψ
1
¯
ψ
¯
ψ
0
1
1
0
1
1
1
1
1
V.
APPLICATION
As an example regarding the new proposal, we consider a
problem that is straightforward to ﬁgure out for a human, but
presently, relatively hard for a machine to solve without any
additional assistance.
Problem. A family consists of two parents and two children,
A and B. A child that has received the house key will use it to
unlock a door for both children. According to the statements
made by the parents, s1−s3, where the statements are assumed
to be mutually synchronized:
s1: All statements (s1 − s3) are false.
s2: Child A is in possession of the key.
s3: Child B is not in possession of the key.
The question is hence, are the children able to unlock the door?
Approach 1. Since s1 = ¬s1 (Epimenides paradox), the use
of quantum states, according to the proposal of this paper,
yields the solutions: {s2 = ψ, s3 = ¯ψ} and {s2 = ¯ψ, s3 = ψ}.
115
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

Since ¯ψ ∨ ψ ≡ ψ ∨ ¯ψ ≡ true, both solutions yield the correct
conclusion that the children are able to unlock the door.
Approach 2. Using Lukasiewicz logic, since s1 = ¬s1,
the (fuzzy-logical) value of s1 is equivalent to zero, since
according to (4), x = ¬x ⇒ x = 0. Thus, s2 = 0, and
since s2 = ¬s3, thereby, s3 = 0. Further, since s2 ∨ s3 = 0,
this yields that we are not able to establish whether any of
the children are in possession of the key, and therefore able to
unlock the door. No conclusion can thus be drawn.
Approach 3. Using “Diamond” logic, given s1 = ¬s1, we
are able to either deﬁne the solution of s2 as i or j. However,
since in the case s3 is equal to i (or alternatively j), and since
s2 = ¬s3, but i = ¬i (or alternatively j = ¬j), this creates
a new set of paradoxes, that yield both correct and incorrect
solutions. Thus, no univocal conclusion can be drawn.
VI.
CONCLUSION
The results of this paper raise questions on the nature of
the fundamental building blocks of logic. The logical wave
functions ψ and ¯ψ, as deﬁned here, cannot be directly derived
by the static scalar values true or false, but the opposite holds,
since true = ψ ∨ ¯ψ, and false = ψ ∧ ¯ψ. Further on, while static
logical values seem to be the root cause of many contradictions
in logic, such as Russell’s paradox, as shown here, this issue
may instead be addressed using quantum states as the building
blocks of mathematical logic.
REFERENCES
[1]
G. Birkhoff and J. non Neumann, “The Logic of Quantum Mechanics”,
Annals of Mathematics, Second Series, vol. 37, no. 4, 1936, pp. 823-843.
[2]
G. Boole, An Investigation of the Laws of Thought (1854), Watchmaker
Publishing, 2010.
[3]
L. Borkowski, “On Three-Valued Logic”, Selected works by Jan
Lukasiewicz, North-Holland, Amsterdam, 1970, pp. 87-88.
[4]
N. S. Hellerstein, Diamond: A Paradox Logic, World Scientiﬁc, 1997.
[5]
D. R. Hofstadter, Gödel, Escher, Bach: An Eternal Golden Braid, Basic
Books, 1979.
[6]
B. Russell, Principles of Mathematics (1903), W. W. Norton., 1996.
[7]
E. Schrodinger, “An Undulatory Theory of the Mechanics of Atoms and
Molecules”, Physical Review, vol. 28, no. 6, 1926, pp. 1049-1070.
116
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

