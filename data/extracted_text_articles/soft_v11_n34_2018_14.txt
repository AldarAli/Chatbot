368
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Novel Field Oriented Patient Monitoring Platform for Healthcare Facilities 
 
Yoshitoshi Murata, Rintaro Takahashi, Tomoki 
Yamato 
Faculty of Software and Information Science 
Iwate Prefectural University 
Takizawa, Japan 
e-mail: y-murata@iwate-pu.ac.jp, {g031n100, 
g031n161}@s.iwate-pu.ac.jp 
Shohei Yoshida, Masahiko Okamura 
Graduate School of Software and Information Science 
Iwate Prefectural University Graduate School 
Takizawa, Japan 
e-mail: {g231n034, g231p005}@s.iwate-pu.ac.jp 
 
Abstract— Several kinds of patient monitoring systems have 
been provided to healthcare facilities such as hospitals in 
recent years. Most of these systems lack interoperability and 
are designed for sensors to be connectable within the same 
medical manufacturer. In these systems, monitoring devices 
and terminals are connected to a network, and operations are 
performed on a central console. This means that an operator is 
needed to do the job, which is not suitable for realistic 
healthcare fields. To address these problems, we have 
developed and propose a novel patient monitoring platform for 
healthcare facilities. This platform consists of a notification 
system for event monitoring applications and a data collecting 
system for data measuring applications. In the notification 
system, pairing between a patient monitoring device and a 
mobile terminal carried by a medical person can be completed 
merely by reading a Quick Response Code on the display of a 
monitoring terminal at a patient’s bedside. When the 
monitoring device detects that a patient is having trouble, it 
sends event messages to the mobile terminal. In the data 
collecting system, medical data files measured by sensor 
devices are automatically uploaded to a cloud server and 
downloaded from the server to an authorized medical 
professional. 
Keywords-hospital; patient monitoring system; remote 
measuring system; patient-nurse hotline; QR-code; healthcare 
facility. 
I. 
 INTRODUCTION 
We are developing patient monitoring systems [1]. 
Several kinds of communication systems have been provided 
to medical or healthcare facilities in recent years. They are 
roughly classified into call systems and patient monitoring 
systems. The latter are roughly classified into event 
monitoring systems and data measuring systems, which are 
sometimes integrated as a comprehensive network system.  
In event monitoring applications, notifications that a 
patient is having problems are usually sent to a nurse station 
or management office rather than to a specified medical 
person in Japan. Therefore, the nurse station or office is 
likely to be very busy quite frequently. An example of the 
types of systems used in Japan is the patient-nurse hotline 
system provided by Carecom Inc. [2]. In this system, several 
kinds of sensor devices are connected to the hotline. One 
such device is a mat sensor to detect a patient leaving his/her 
bed [3]. The mat is beside the bed, and if a patient steps on it, 
an alert is sent to a nurse station.  
Honeywell provides a tracking and localization system 
integrated with a patient communication system and a call 
system [4]. General Electric Company (GE) provides many 
kinds of patient monitoring equipment [5]. They are 
connected to a central computer server through a hospital 
intranet. This makes it possible for medical professionals to 
monitor measured data. 
Most of these systems lack interoperability and are 
designed for sensors to be connectable within the same 
medical manufacturer. In these systems, monitoring devices 
and terminals are connected to a network, and operations are 
performed on a central console. This means that an operator 
is needed to do the job, which is not suitable for realistic 
healthcare fields. 
To address the problems of the lack of interoperability, 
necessary of an operator and busy nurse stations or offices, 
we developed a patient monitoring platform designed for 
healthcare fields. This platform consists of a notification 
system for event monitoring applications and a data 
collecting system for data measuring applications. 
We first proposed the notification system at eTELEMED 
2018 [1]. In this system, the monitoring device by the 
patient’s bedside is connected to a mobile terminal such as a 
smartphone carried by a medical worker. The mobile 
terminal reads a Quick Response Code (QR-code) [6] on the 
monitoring device to pair them. This operation can be done 
at the bedside of a patient. We assume that it would be done 
by a medical worker such as a nurse who establishes a 
monitoring device for the patient. When the monitoring 
device detects the patient is having trouble, it sends a 
notification message to the mobile terminal. The medical 
worker who receives the message immediately goes to the 
monitored patient. The sensor relay unit and the mobile 
terminal were developed with an Android smartphone. The 
sensor relay unit is a part of the monitoring device to which 
sensors are connected. This makes it possible to hand the 
patient monitoring operation to another worker merely by 
having the latter read the QR-code on their smartphone. This 
operation is the same as reading the original QR-code. 
In addition to the notification system, we also developed 
a novel data collecting system for measuring applications. In 
this system, measured data are transferred to a cloud server 
and stored on it. Authorized persons such as medical 

369
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
professionals can access the server to download and analyze 
the stored data. A supervisor can freely change the 
relationship established among patients, medical workers 
who provide measuring terminals and medical professionals 
who have access to servers.  
We developed two event monitoring applications that use 
the proposed notification system and one data measuring 
application that uses the data collecting system. The first one 
monitors cases when intravenous feeding devices are 
removed from a patient, the second one monitors cases when 
the patient leaves the bed, and the third one continuously 
measures changes in the angle of the arm and the lumbar 
region of the body. 
After introducing related work in Section II, we describe 
the notification system and its example applications in 
Section III. The data collecting system and example 
applications for it are detailed in Section IV. Section V 
concludes with a summary of key points.  
II. 
RELATED WORK 
Remote monitoring applications for patients are roughly 
classified into event monitoring applications and measuring 
applications. In this section, both of them are introduced. 
A. Event monitoring applications 
These applications have been put to use ever since 
communication systems for sending messages from 
monitoring devices to hospital personnel first started to be 
used. 
One example is the “Risho Catch” system Paramount 
Bed Inc. has developed [7]. “Risho” means getting out of a 
bed in Japanese. This system detects when a patient sits up 
in bed, sits on the side of the bed, or leaves the bed. When 
this happens, it sends a message to a nurse station through a 
patient-nurse hotline system. The system structure is shown 
in Fig. 1. A load sensor unit in the bed is connected to the 
patient-nurse hotline system through a relay unit located at 
the patient’s bedside. The nurse station has a monitor and 
console terminal. It is possible to send messages to a mobile 
terminal. However, wireless tablets and smartphones are not 
commonly used for sending messages to nurse stations in 
Japan. Therefore, nurse stations and offices are likely to 
often become very busy. 
 
 
Figure 1. System and network structure of “Risho Catch.” 
 
Balaguera et al. evaluated decreasing the number of falls 
from bed using the SensableCare System [8]. Its architecture 
is shown in Fig. 2. The sensor pad in the system sends data 
through a cable to the control box located at the patient’s 
bedside. The control box wirelessly transmits this data to a 
Bluetooth access point located throughout the ward. This 
information then travels through the hospital WiFi network 
to the dashboard and docking server where the data is 
analyzed. When an alert is sent to the nurse via an 
application on his/her mobile terminal, it is wirelessly 
transmitted through the hospital WiFi network. The 
patient’s condition is monitored on the dashboard terminal.  
In both systems, the console terminal in the nurse station 
or office must connect sensor units with a mobile terminal. 
This makes it a little hard to change relationship between a 
mobile terminal and monitoring patients. 
 
Figure 2. Architecture of the SensableCare System. 
B. Measuring applications 
In the early 2000s, there were several remote measuring 
systems for patients that used the General Packet Radio 
Service/Wireless Local Area Network (GPRS/WLAN) as 
the wireless network and the Personal Digital Assistance 
(PDA) as the mobile device [9-12]. In these systems, sensor 
devices were connected to a monitoring terminal or server 
through a wireless network. Since they were experimental 
systems, they had no fixed destination address.  
In recent years, several companies have been providing 
not only patient remote monitoring devices but also cloud 
services. GE provides a “GE Health Cloud” system along 
with many kinds of sensor devices and monitor devices [13]. 
The cloud manages the connecting of sensor devices to the 
hospital network and operates them on the console terminal.  
This scheme maintains a high security level but lacks 
flexibility and interoperability. This makes it difficult for 
medical workers to install and pair sensor devices at the 
patient’s bedside, especially other company’s devices.  
III. 
NOTIFICATION SYSTEM 
In this section, we describe the novel notification system 
for event monitoring applications.  

370
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
A. Design concept 
We designed the system so that: 
(1) Medical personnel can install monitoring devices. 
(2) Medical personnel can easily pair the monitoring devices 
with their own mobile terminals at the patient’s bedside.  
(3) When the monitoring device detects a patient is having 
problems, it sends notification messages to the mobile 
terminals of the medical personnel, not a nurse station. 
(4) Pairing situations can be monitored from a console 
terminal. 
(5) Event messages are monitored from a console terminal. 
(6) Mobile terminals belonging to other organizations must 
be excluded.  
 
Therefore, no operations are performed with the console 
terminal and monitoring devices can be easily installed at the 
patient’s bedside. The other side, the supervisor such as a 
medical doctor in charge, can monitor pairing situations and 
event messages to maintain security and safety. The system 
configuration is shown in Fig. 3. In this figure, Worker A 
monitors a patient Mr. P at first and hands off the monitoring 
job to Worker B later. There is no alarms in a nurse station. 
The system consists of three programs; one works on the 
sensor relay unit to which sensor units are connected, the 
second one works on mobile terminals to receive event 
messages and present them, and the third one works on the 
cloud server to relay event messages from the sensor relay 
unit to the mobile terminals.  
Prior to monitoring a patient, each terminal must register 
with the cloud server and get an ID from it. Here, we call the 
ID for the sensor relay unit “SR-ID”, that for Worker A’s 
mobile terminal “MA-ID”, and that for Worker B’s mobile 
terminal “MB-ID.” When one of the two mobile terminals 
establishes pairing with the sensor relay unit, it must send 
SR-ID together with its own ID (MA-ID or MB-ID).  A QR-
code is generated on the sensor relay unit from SR-ID and 
presented on its display. Since the QR-code encodes text data 
to codes and encodes code to text data, using the QR-code 
enables a worker to enter SR-ID easily. If Worker A pairs 
his/her mobile terminal with the sensor relay unit, he/she 
merely reads the QR-code on the sensor relay unit’s display 
with his/her mobile terminal to input SR-ID.  
 
 
 
Figure 3. Configuration of the notification system. 
The mobile terminal sends its own ID (MA-ID) and the 
read ID (SR-ID) to the cloud server. The cloud server uses 
SR-ID and MA-ID to pair the sensor relay unit and Worker 
A’s mobile terminal. 
In the case shown in Fig. 3, the sensor unit detects the 
event “waking up in bed” and the sensor relay unit sends the 
message “Mr. P has woken up” to Worker A’s mobile 
terminal via the cloud server. 
This system using a QR-code is useful for handing 
monitoring work over to another worker. The handing over 
operation is done by a worker (Worker B in Fig. 3) reading a 
QR-code on his/her mobile terminal. This QR-code is 
created from the SR-ID read from the sensor relay unit. In 
this situation, event messages can be sent to both mobile 
terminals. However, no messages will be sent to Worker A’s 
mobile terminal if Worker A sends the signal to release 
his/her pairing with the cloud server. In the case shown in 
Fig. 3, the second message “Mr. P has fallen.” was sent to 
Worker B. 
B. System configuration 
Authentication and messaging functions are needed to 
meet the requirements listed at the beginning of subsection A. 
Hence, we decided to use the Google Firebase Cloud Service 
(GFB) [14] to implement the notification system. The GFB 
has many functions; the ones we use are an authentication 
function to exclude non-registered terminals, a real-time 
database to manage and monitor the status of pairings and 
event messages, and a push messaging function to send 
notifications. As mentioned above, our system consists of 
three programs. These programs we developed are 
“PatientApp”, which works on the sensor relay unit, 
“NurseApp”, which works on the mobile terminals, and 
“MessageManager”, which works on the GFB. We use an 
Android smartphone for the sensor relay unit and the mobile 
terminals. We designed PatientApp and NurseApp from a 
simple application and a corresponding library program so 
that a practical event monitoring system that adopts kinds of 
sensors could be developed easily  
The 
MessageManager 
program 
works 
with 
the 
Authentication, Realtime Database, Cloud Function, and 
Cloud Messaging tools in Firebase. These tools can be 
summarized as follows: 
- Authentication: This provides backend libraries to 
authenticate users for developing applications. It 
supports authentication by using passwords, phone 
numbers, and popular federated identity providers such 
as Google, Facebook, and Twitter. 
- Realtime Database: This is a cloud-hosted database. It 
stores data in JSON format and synchronizes it in real 
time to every connected client.  
- Cloud Function: This automatically runs backend codes 
in response to events triggered by Firebase features and 
HTTPS requests. It stores backend codes in Google's 
cloud and runs in a managed environment. 
- Cloud Messaging: This is a cross-platform messaging 
solution that delivers messages reliably. It can send 
notification messages to drive user re-engagement and 
retention. 

371
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
We introduce sequence flows between these tools when 
building and registering a PatientApp or NurseApp program, 
pairing between PatientApp and NurseApp, and sending 
notifications. We use the Open Source QR Code Library [15] 
to create a QR code in the sensor relay unit and the mobile 
terminals. In the following sequence flows, the program is 
described as “QR maker.” 
1) Building PatientApp and NurseApp (Fig.4) 
Before developing a Firebase application, a developer 
accesses Firebase to download a configuration file. Firebase 
sends back a configuration file that includes the project code 
and software development kit as a Google-Service.json file 
to a development PC.  
After building an application, an Android application 
package file (Apk File) is made as a building application. 
Each application connects to Firebase with a Project ID and 
Application ID. These IDs are included in the Google-
Service.json file in the building process.  
 
 
 
Figure 4. Sequence flow to build applications. 
  
2) Registering PatientApp and NurseApp (Fig. 5, 6) 
Since mobile terminals are commonly used by multiple 
medical workers, a proper login procedure is needed to 
identify the current worker. We currently use the Google 
account certification for the NurseApp program to register a 
medical worker with Firebase. It is possible to change from 
the Google ID to another identification code. The NurseApp 
program works with the MessageManager program, which 
assigns the authentication procedure to the Authentication in 
Firebase. Then, an account (Nurse UID) is created and 
managed in the Realtime Database as shown in Fig. 5. The 
Nurse UID corresponds to the MA-ID or MB-ID given in 
subsection A. 
Since the sensor relay unit itself is registered with 
MessageManager, we use the Anonymous certification in 
this case. An account for the PatientApp (Patient UID) is 
automatically created and managed in the Realtime Database 
as shown in Fig. 6. The Patient UID corresponds to the SR-
ID given in subsection A. 
 
Figure 5. Sequence flow to register a mobile terminal. 
 
 
 
Figure 6. Sequence flow to register a sensor relay unit. 
 
 
3) Pairing between PatientApp and NurseApp (Fig. 7) 
The PatientApp accesses the Authentication to get its 
own current user (Patient UID, token) and the QR maker 
makes a QR-code from a Patient UID. NurseApp gets a 
Patient UID to read the QR code, accesses the 
Authentication to get its own current user (Nurse UID, 
token), and accesses the Realtime Database to write the 
pairing information (token, Patient UID, Nurse UID). 
 
 
 
Figure.7 Sequence flow to pair between PatientApp and NurseApp. 
 

372
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
4) Sending notifications (Fig. 8) 
When a PatientApp in the sensor relay unit detects an 
event, it accesses the Authentication to get its own current 
user (Patient UID, token) and the Realtime Database to 
change its own state.  
The Realtime Database collaborates with the Cloud 
Function to request the Cloud Messaging to push a 
notification (Nurse push token). The Cloud Messaging sends 
a signal (Notify Patient State Change) to a NurseApp as 
shown in Fig. 8.  
 
Figure 8. Sequence flow to send an event message. 
 
C. Test application and management display 
We developed a very simple PatientApp and NurseApp 
to test the proposed notification function. We call them 
PatientTest and NurseTest. Since these application programs 
were developed for Japanese, each item on UI pages was 
written in Japanese. Hence, we provided an English 
translation for each item. 
 
After logging in with the Anonymous certification of 
PatientTest, the four buttons “STATUS-1”, “STATUS-2,” 
“STATUS-3,” and “QR-code” are presented as shown in Fig. 
9. The first three buttons are used to change the status in a 
sensor device. Clicking the “QR-code” button creates a QR-
code from a Patient UID and shows it on the display (Fig. 9 
(b)).  
After the Gmail address and password are input to the 
NurseTest login page (Fig. 10 (a)) and the PatientTest QR-
code (Fig. 9 (b)) is read, the list page of patients (Fig. 10 
(b)) is presented. In the case shown in Fig. 10 (b), the nurse 
has established two sensor relay units and is monitoring two 
patients. Patient “Murata test” is having trouble. Clicking 
the “Messages” button, a list of received messages is 
presented as shown in Fig. 10 (c). When the “Handing” 
button is clicked, the same QR-code as that shown in Fig. 9 
(b) is presented. Messages and the relationship between 
sensor devices and monitoring nurses are managed in the 
Realtime Database. Supervisors are able to monitor them by 
accessing Firebase. 
When Firebase is accessed, and the Realtime Database 
is clicked, the display appears as shown in Fig. 11. 
Information is classified into “notifications,” “nurses” and 
“patients.” 
 
 
(a) Login page                            (b) Change status page 
Figure 9. PatientTest display.. 
 
               (a) Login page                           (b) List page of patients 
 
 
(c) List page of messages 
 
Figure 10. NurseTest display. 

373
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
In Fig. 11 (a), the notifications are classified into those 
for two nurses whose encrypted Nurse UIDs are 
“4ANVMkv1kDarruVlt8l1opmAYj13” and “IQBt78Xrg4c-
60auc195lhkG8nJl2.” 
When the + former of a Nurse UID is clicked, the + 
changes to – and notification message IDs are listed as 
shown the upper part of Fig. 11 (b). When the + former of a 
notification message ID such as “L8WQVLzi3Vc989MUK- 
fs” is clicked, the + changes to – and the contents of the 
notification are listed. The line “created_at” shows the 
coordinated universal time in Java that the notification has 
been sent, “instance_id” is the encrypted Patient UID, 
“message” is a practical message for which the meaning is 
“Drip system for Murata has left,” and “title” is the patient’s 
name. The “message” and “title” lines are changed for each 
application. 
When the + changes to – and former of a nurse UID is 
clicked, the + changes to – and the patient UIDs and tokens 
are listed as shown in the middle part of Fig. 11 (a). This 
tells us which sensor device each nurse has established. 
When the + former of a patient UID is clicked, the + 
changes to – and the lines “name”, “nurses” and “state” 
appear as shown in the lower part of Fig. 11 (a). The 
“name” line shows the patient’s name in this application. 
The line “nurses” shows the nurses who have read the QR-
code with their mobile terminal. In this case, two nurses 
whose 
encrypted 
UIDs 
are 
“4ANVMkv1kDarru-
Vlt8l1opmAYj13” and “IQBt78Xrg4c60auc195lhkG-8nJl2” 
monitor two sets of sensor devices “csYUUM90CF0” and 
“dhwYz4dyGLw.” 
 
 
(a) 
 
 
(b) 
Figure 11. Examples of monitoring display. 
 
D. Example application 
We developed two monitoring applications that adopt 
the proposed notification system. One is an intravenous drip 
monitoring application; the other is a fall monitoring 
application. We describe their details in this section. 
 
1) Intravenous drip monitoring 
Some cognitive impairment patients sometimes remove 
an intravenous drip set by themselves. One existing 
intravenous drip monitoring system “Tenteki call” uses a 
switch type sensor that fastens a drip tube to detect when a 
drip set is removed as shown in Fig. 12 [16]. In case of a 
“Tenteki call”, if a patient removes the switch type sensor 
together with the drip set, the sensor cannot detect the 
removal.  
 
 
              (a) Switch type sensor.    (b) Example of use. 
Figure 12. “Tenteki” call (Japanese), Technos Japan Co., Ltd. 
 

374
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
We use a magnetic patch and a wireless magnetic sensor 
to detect removing a drip set, as shown in Fig. 13. The 
magnet is fastened to the body with an adhesive film in a 
place such as an arm. An intravenous drip tube is also 
fastened to the wireless magnetic sensor and the sensor is 
fastened to a magnetic patch with a medical fixing film. 
When a patient removes an intravenous drip set, the sensor 
is also removed from the body part. However, since the 
magnetic patch is fastened to the body part with an adhesive 
film, it must remain on the body part. 
We developed the prototype system shown in Fig. 14. 
We used the STEVAL-WESU1 [17] developed by 
STMicroelectronics as the wireless magnetic sensor (see Fig. 
14 (a)), and an Android smartphone as the wireless relay 
unit and mobile terminal. The muscle stiffness obtained by 
equipment manufactured by PIP Co., Ltd. [18] was used as 
the magnetic patch (see Fig. 14(b)). In this prototype system, 
the program for detecting removal is integrated with the 
wireless relay program.  
 
 
Figure 13. Structure of the magnetic intravenous drip monitoring 
 
       
 
     (a) Magnetic sensor and attached tube.      (b) Magnetic patch on an arm. 
 
              
                       
 
(c) Magnetic sensor on a magnetic patch.        (d) A removed drip set. 
 
 
(e) W. R. display            (f) W. R. display                    (g) M. T. display 
      :monitoring             : detecting a tube removed    : receiving a message  
                   
Figure 14. Drip monitoring system prototype. 
 
While a magnetic sensor is on a magnetic patch (see Fig. 
14 (c)), the measured magnetic strength is bigger than the 
decision level (see Fig. 14 (e)). When the magnetic sensor is 
removed (see Fig. 14 (d)), the measured magnetic strength is 
less than the decision level; the detecting program has 
determined that an intravenous drip set has been removed 
(see Fig. 14 (f)). The wireless relay program sends a 
message “Yoshida’s tube has been removed.” That message 
is displayed on the mobile terminal (see Fig. 14 (g)). 
 
1) Fall monitoring 
Elderly people, especially cognitive impairment patients, 
have an increased risk of falling and consequently injuring 
themselves. They need to be prevented from falling to 
maintain their health because injuries from falling are a 
major reason for them to prolong their staying in a hospital.  
Therefore, many kinds of fall prevention systems have 
been developed. Most of them are classified into three 
schemes. The first type uses a mat type sensor like the 
systems described in Section II, the second one uses load 
sensors that are mounted in the legs of a bed, and the third 
one uses a camera. We developed a fall prevention system 
in which MS-KINECT was used. This is one of the third 
types. M. J. Rantz developed a fall detection system that 
uses MS-KINECT [19]. A medical worker monitors and 
judges whether a patient falls through the depth image of a 
patient on a monitor display.  
On the other hand, our developed system detects 
whether a patient in a bed wakes up, sits up, stands up, or 
falls on the floor with a skeleton image of the patient. The 
detecting algorithms are as follows; 
 
(1) Waking up: detecting that the head’s height position is 
higher than the judging height 1. 
(2) Sitting up: detecting both shoulders and a spine base 
angle of 25 or more degrees. 
(3) Standing up: detecting the head, both shoulders and both 
hips, and a head is higher than the judging height 2. 
(4) Falling down: detecting that the head’s height position is 
lower than the judging height 3. 
 
We experimentally tested whether the developed system 
can detect the four conditions given above. The MS 
KINECT was positioned diagonally in front of the bed so 
that the front of the patient could be observed as shown in 
Fig. 15. Experimental results are shown in Fig. 16. Since 
MS-KINECT works on a PC, the sensor device program 
that detects patient conditions with MS-KINECT and the 
wireless relay unit program are combined on a PC. 
Monitoring images of participants as patients and the QR-
code for pairing are shown on the PC display.  
The developed system can detect four conditions for a 
patient. With it, a mobile terminal receives a “standing up” 
message sent from a wireless relay unit. However, the 
system sometimes fails to detect conditions or does not 
detect them correctly. Accordingly, we plan to improve our 

375
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
algorithms so that detection accuracy will be increased. We 
should also mention that a patient using this experimental 
system is presented with color images. We plan to change 
these color images to depth images to maintain a patient’s 
privacy. 
 
 
 
Figure 15. Experimental image. 
 
 
(1) Waking up                                       (2) Sitting up 
 
 
(3) Standing up                                        (4) Falling down 
 
 
(5) Screenshot of a mobile terminal that detects a “standing up” message 
 
Figure 16. Experimental results for patient monitoring. 
 
IV. 
DATA COLLECTING SYSTEM 
In this section, we describe the data collecting system for 
data measuring applications.  
A. Design concept 
We designed the system so that: 
(1) A medical person could easily install a measuring device 
at a bedside. 
(2) Measured data were stored for each patient and the 
corresponding medical professional in the cloud server. 
(3) A medical professional can access only authorized data. 
(4) A supervisor can easily change the relationship among 
patients, nurses who install measuring devices and 
medical professionals who analyze data through remote 
terminals. 
 
Therefore, no operations are performed with the console 
terminal and measuring devices can be easily installed at the 
patient’s bedside. The other side, the medical professional 
such as a medical doctor in charge, can download measured 
data files to keep security and safety.  
The system configuration is shown in Fig. 17. Before 
starting to use the system, the supervisor inputs login data 
that comprises the UID and password for a medical 
professional. Measured data are stored as files in the sensor 
relay unit at first. The files are classified for each patient on 
the accessed web page. When medical professionals access 
the given URL and login data with their recorded UID and 
password, a specified page for each medical professional is 
presented. The medical professional clicks the file and 
analyzes it. 
 
 
 
 
Figure 17. Configuration of the data collecting system. 
 
B. System configuration 
The data collecting system, also designed on Firebase, 
contains the following functions: 
(1) Measured data upload function: The sensor relay unit 
measures medical data using sensors and uploads the 
data to Firebase as files. 
(2) Measured data download function: A medical 
professional accesses Firebase and downloads medical 
data files.  
 

376
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
We developed a PatientApp program that works on the 
sensor relay unit and a WebSite program that works on 
Firebase to provide these functions. The PatientApp uploads 
the measured data file to the Storage on Firebase. The 
WebSite collaborates with the Storage and provides a file 
download function to a medical professional through the 
Web browser. In this subsection, we introduce sequence 
flows that provide these functions. 
 
1) Measured data upload function (Fig. 18) 
PatientApp consists of “MeasuringApp” and “FB 
TransferringLib” programs. The MeasuringApp program 
provides the User interface needed to login, enter 
information, measure medical data and create a file. The FB 
Transferring Lib. Program uploads the file to the Storage in 
GFB.  
Before developing a PatientApp program, a developer 
accesses Firebase to download a configuration file. An 
Android application package file (Apk File) is then made as 
a building application and connects to Firebase as shown in 
Fig. 4. These steps are the same as those in the building 
application given in subsection III_B_1). Before using an 
Android terminal as the sensor relay unit, the PatientApp in 
the sensor relay unit must create its own account in the 
Realtime Database with the Anonymous certification in the 
same project. After a measured file has been made, the 
PatientApp uploads the file to the storage server in Firebase 
as shown in Fig. 18. The storage server generates the file 
download URL, which is managed in the Realtime Database. 
 
 
Figure 18. Sequence flow to upload measured files. 
 
2) Measured data download function (Fig. 19) 
Supervisors input the access account of medical 
professionals from the management page in Firebase. The 
sequence flow with which medical professionals download 
their patients’ files is shown in Fig. 19. When medical 
professionals access the Website, they log in with their 
assigned ID and password.  
 
Figure 19. Sequence flow to download measured files 
 
After login, the Website application accesses the 
Realtime Database to get information related to nurses and 
patients and presents them. The Website application also 
gets meta-data such as an access path to a stored file. When 
a medical professional clicks a file on the web page, the 
Website application accesses the indicated file on the 
Storage through the access path. Finally, the indicated file is 
downloaded. 
 
C. Example  application 
We developed a measuring application that uses the 
above data collecting system. In this application, motions of 
the wrist and lumbar region were measured with a 3D-
acceleration sensor. We used two SONY Smart Watch 3 
units as the 3-D acceleration sensor [20]. One was attached 
to the wrist with a wrist band and the other was attached to 
the lumbar region with a lumbago band as shown in Fig. 20. 
Both were connected to a sensor relay unit with Bluetooth. 
A patient’s name is input and then the body parts 
corresponding to sensors are input. In this case, we input 
“Wrist” and “Lumbar.” After inputting above words, the 
page shown in Fig. 21 has been presented. There are four 
buttons in this page. “QR CODE” button is used to make a 
connection with a nurse. Clicking “START” button starts 
measuring and clicking “STOP” button stops measuring. 
Clicking “TRANSFER” uploads a measured data file to the 
storage server in Firebase. 
After a medical professional logged onto the WebSite 
program, the patients’ names and measured data files 
appeared as shown in Fig. 22. Clicking the name of a file 
downloads the file.  
Sample graphs of measured data for the wrist and 
lumbar region are shown in Fig 23.  The orange (Wrist X), 

377
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
gray (Wrist Y) and blue (Wrist Z) lines show respectively 
the data obtained when the arm moved up/down, 
forward/backward and in a twisting motion. The yellow 
(Lumbar X), blue (Lumbar Y) and green (Lumbar Z) dot-
lines show respectively the anteflexion, lean and twist of the 
upper body. In this example, the participants used 
chopsticks to eat. When eating, they first twisted their arm 
so that it faced the mouth. Then they moved the arm up to 
the mouth while simultaneously leaning the upper body 
forward a little. After putting food into the mouth, they 
moved the arm back to where it had been. However, they 
continued to lean forward while eating. 
We will release further details of this application in the 
near future. 
 
 
Figure 20. Participant having two sets of SONY Smart Watch 3 
 
 
Figure 21. User interface of PatientApp 
 
 
Figure 22.  WebSite user interface. 
 
 
Figure 23. Sample graphs of measured data for the wrist and lumbar region. 
 
V. 
CONCLUSION 
We have developed and propose a novel patient 
monitoring platform for healthcare facilities. The easy to use 
platform consists of a notification system for event 
monitoring applications and a data collecting system for 
data measuring applications. In the notification system, 
monitoring devices are paired with mobile terminals by 
reading a Quick Response Code on monitoring terminal 
(sensor relay unit) displays. It is possible to pair them at the 
bedside of a patient without a console terminal and operator. 
When the sensor devices detect a patient having trouble, 
event messages are sent to a mobile terminal, not to a nurse 
station. Therefore, no operations are performed with the 
console terminal and medical devices can be easily installed 
at the patient’s bedside.  
We also developed a data collecting system with which 
medical data files measured by sensor devices are 
automatically uploaded to a cloud server and can be 
downloaded from the server by authorized medical 
professionals. No operations are performed with the console 
terminal in this system. 
It is possible to develop monitoring or measuring 
application using the proposed platform and several 
manufactured sensors. This means that our platform keeps 
interoperability. 
We have proposed to jointly develop commercial 
version of the proposed platform and/or applications to 
several companies. Some companies are interested, however, 
we do not have yet contracts with these companies. 
 
ACKNOWLEDGEMNT 
Thanks to Kazuhiro Yoshida for help in performing this 
research. This research and development work was 
supported by the MIC/SCOPE #181602007. 
 
 
 

378
International Journal on Advances in Software, vol 11 no 3 & 4, year 2018, http://www.iariajournals.org/software/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
REFERENCES 
[1] Y. Murata, R. Takahashi, T. Yamato, S. Yoshida, and M. Okamura, 
“Proposal of Field Oriented Event Messaging System,” IARIA, 
eTELEMED 2018, pp. 16-20, March 2018. 
[2] Nurse Call BCAC, https://www.carecom.jp/global/solutions/nurse-
call-bcac/ [retrieved: November, 2018]. 
[3] Mat sensor, Carecom, https://www.carecom.jp/global/solutions 
/option/ [retrieved: November, 2018]. 
[4] Clino Guard, Ackermann, Honeywell, 
https://www.ackermann-clino.com/en/products/tracking-localization/  
[retrieved: November, 2018] . 
[5] Patient Monitors, GE, 
http://www3.gehealthcare.com/en/products/categories/patient_monito
ring/patient_monitors [retrieved: November, 2018]. 
[6] QR-code, 
http://www.qrcode.com/en/,  [retrieved: November, 2018]. 
[7] Risho catch, Paramount Bed, 
http://www.paramount.co.jp/learn/inversion/leaving   
[in Japanese, retrieved: November, 2018]. 
[8] H. U. Balaguera et al., “Using a Medical Intranet of Things System to 
Prevent Bed Falls in an Acute Care Hospital: A Pilot Study,” Journal 
of Medical Internet Research,  
https://www.jmir.org/2017/5/e150/, [retrieved: November, 2018]. 
[9] A. V. Halteren et al., “Mobile Patient Monitoring: The MobiHealth 
System,” The Journal on Information Technology in Healthcare 2004, 
vol. 2(5), pp.365–373, 2004. 
[10] Y. Lin et al., “A Wireless PDA-Based Physiological Monitoring 
System for Patient Transport,” IEEE Transactions on Information 
Technology in Biomedicine, Vol. 8, No. 4, pp.439-447, 2004. 
[11] T. Gao et al., “Vital Signs Monitoring and Patient Tracking Over a 
Wireless Network,” Johns Hopkins APL Technical Digest, Vol. 27, 
No. 1, pp. 66-74, 2006. 
[12] P. Várady, Z. Benyó, and B. Benyó, “An Open Architecture Patient 
Monitoring 
System 
Using 
Standard 
Technologies,” 
IEEE 
Transactions on Information Technology in Biomedicine, Vol. 6, No. 
1, pp. 95-98, 2002. 
[13] Patient monitoring, GE Healthcare, 
http://www3.gehealthcare.com/en/products/categories/patient_monito
ring,  [retrieved: November, 2018]. 
[14] Google Firebase Cloud Messaging, 
https://firebase.google.com/docs/cloud-messaging/?hl=en,  
 [retrieved: November, 2018]. 
[15] Open Source QR Code Library, 
http://qrcode.osdn.jp/index.html.en,  [retrieved: November, 2018]. 
[16] Tenteki call (Japanese), Technos Japan Co., Ltd., 
http://www.technosjapan.jp/product/infusion/2012/0121195451.html 
[in Japanese, retrieved: November, 2018]. 
[17] STEVAL-WESU1, STMicroelectronics, 
http://www.st.com/en/evaluation-tools/steval-wesu1.html 
[retrieved: November, 2018]. 
[18] Muscle Stiffness, http://www.pip-club.com/english/muscle.html, 
[retrieved: November, 2018]. 
[19] M. J. Rantz et al, “Automated Fall Detection With Quality 
Improvement “Rewind” to Reduce Falls in Hospital Rooms,” NIH 
Public Access, Journal of Gerontological Nursing, 40(1), pp. 13–17, 
2014. 
[20] SONY 
Smart 
Watch 
3, 
https://www.sonymobile.com/global-
en/products/smart-products/smartwatch-3-swr50/#gref,  
[retrieved: November, 2018].
 

