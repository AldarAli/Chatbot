Linearity Measures for Multivariate Public Key
Cryptography
Simona Samardjiska
Department of Telematics, NTNU
Trondheim, Norway
FCSE, “Ss Cyril and Methodius” University
Skopje, Republic of Macedonia
simonas@item.ntnu.no
Danilo Gligoroski
Department of Telematics, NTNU
Trondheim, Norway
danilog@item.ntnu.no
Abstract—We propose a new general framework for the security
of Multivariate Quadratic (MQ) public key schemes with respect
to attacks that exploit the existence of linear subspaces. We adopt
linearity measures that have been used traditionally to estimate
the security of symmetric cryptographic primitives, namely,
the nonlinearity measure for vectorial functions introduced by
Nyberg, and the (s, t)–linearity measure introduced recently
by Boura and Canteaut. We redeﬁne some properties of MQ
cryptosystems in terms of these known symmetric cryptography
notions, and show that our new framework is a compact gener-
alization of several known attacks in MQ cryptography against
single ﬁeld schemes. We use the framework to explain various
pitfalls regarding the successfulness of these attacks. Finally, we
argue that linearity can be used as a solid measure for the
susceptibility of MQ schemes to these attacks, and also as a
necessary tool for prudent design practice in MQ cryptography.
Keywords–Strong (s, t)–linearity; (s, t)–linearity; MinRank; good
keys; separation keys.
I.
INTRODUCTION
In the past two decades, as a result of the advancement in
quantum algorithms, the crypto community showed increasing
interest in algorithms that would be potentially secure in
the post quantum world. One of the possible alternatives
are Multivariate Quadratic (MQ) public key cryptosystems
based on the NP-hard problem of solving quadratic polynomial
systems of equations over ﬁnite ﬁelds.
Many different MQ schemes emerged over the years,
most of which fall into two main categories - single ﬁeld
schemes, including UOV (Unbalanced Oil and Vinegar) [1],
Rainbow [2], TTM (Tame Transformation Method) [3], STS
(Stepwise Triangular System) [4], MQQ-SIG (Multivariate
Quadratic Quasigroups - Signature scheme) [5], TTS (Tame
Transformation Signatures) [6], EnTTS (Enhanced TTS) [7]
and mixed ﬁeld schemes including C∗ [8], SFLASH [9], HFE
(Hidden Field Equation) [10], MultiHFE [11][12], QUARTZ
[13]. Unfortunately, most of them have been successfully
cryptanalysed [4][14][15][16][17]. Three major types of at-
tacks have proven devastating for MQ cryptosystems:
i. MinRank attacks – based on the problem of ﬁnding a low
rank linear combination of matrices, known as MinRank
[18]. Although NP-hard, the instances of MinRank arising
from MQ schemes are often easy, and provide a powerful
tool against single ﬁeld schemes [4][14].
ii. Equivalent Keys attacks – based on ﬁnding an equivalent
key for the respective scheme. The concept was introduced
by Wolf and Preneel [19], and later further developed
by Thomae and Wolf [16] to the generalization of good
keys. The attacks on TTM [14], STS [4][16], HFE and
MultiHFE [15][17] can all be seen from this perspective.
iii. Differential attacks – based on speciﬁc invariants of the
differential of a given public key, such as the dimension of
the kernel, or some special symmetry. It was introduced
by Fouque et al. in [20] to break the perturbed version
of the C∗ scheme PMI [21], and later also used in
[22][23][24][25].
Interestingly, the history of MQ cryptography has wit-
nessed cases where, despite the attempt to inoculate a scheme
against some attack, the enhanced variant has fallen victim to
the same type of attacks. Probably, the most famous example
is the SFLASH [9] signature scheme, that was build using the
minus modiﬁer on the already broken C∗ [26], and selected
by the NESSIE European Consortium [27] as one of the
three recommended public key signature schemes. It was later
broken by Dubois et al. in [24][25] using a similar differential
technique as in the original attack on C∗. Another example
is the case of Enhanced STS [28], which was designed to be
resistant to rank attacks, that broke its predecessor STS. Even
the authors themselves soon realized that this was not the case,
and the enhanced variant is vulnerable to a HighRank attack.
Such examples indicate that the traditional “break and
patch” practice in MQ cryptography should be replaced by
a universal security framework. Indeed, in the last few years,
several proposals have emerged that try to accomplish this
[29][30][31]. Notably, the last two particularly concentrate on
the properties of the differential of the used functions, a well
known cryptanalytic technique from symmetric cryptography.
We will show here that another well known measure from
symmetric cryptography, namely linearity, is fundamental for
the understanding of the security of MQ schemes.
A. Our Contribution
We propose a new general framework for the security of
MQ schemes with respect to attacks that exploit the existence
of linear subspaces. Our framework is based on two linearity
measures that we borrow from symmetric cryptography, used
to measure the resistance of symmetric primitives to linear
cryptanalysis (cf. Matsui’s attack on the DES cipher [32]). To
our knowledge, this is the ﬁrst time that the notion of linearity
has been used to analyse the security of MQ schemes.
157
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

In particular, we take the linearity measure for vectorial
functions introduced by Nyberg [33] already in 1992, and
the (s, t)–linearity measure introduced recently by Boura and
Canteaut [34] at FSE’13, and adopt them suitably in the
context of MQ cryptography. We extend the ﬁrst to a new
notion of strong (s, t)–linearity in order to include an addi-
tional important parameter of the size of the vector subspace
of the components of the function that have common linear
space. We show that strong (s, t)–linearity and (s, t)–linearity
are intrinsically connected to the security of MQ schemes,
and can be used to explain almost all attacks on single ﬁeld
schemes, such as rank attacks, good keys attacks and attacks on
oil and vinegar schemes. Indeed this is possible, since all these
attacks share a common characteristic: They try to recover a
subspace with respect to which the public key of an MQ
scheme is linear. Therefore they can all be considered as linear
attacks on MQ schemes.
We devise two generic attacks that separate the linear
subspaces, and that are a generalization of the aforementioned
known attacks. We present one of the possible modellings of
the attacks using system solving techniques, although other
techniques are possible as well. Using the properties of strong
(s, t)–linearity and (s, t)–linearity, we show what are the best
strategies for the attacks. Notably, the obtained systems of
equations are equivalent to those that can be obtained using
good keys [16], a technique based on equivalent keys and
missing cross terms. By this we show that our new framework
provides a different, elegant perspective on why good keys
exist, and why they are so powerful in cryptanalysis.
Moreover, we use our framework to explain various pitfalls
regarding design choices of MQ schemes and the successful-
ness of the linear attacks against them. Finally, we argue that
linearity can be used as a solid measure for the susceptibility
of MQ schemes to linear attacks, and also as a necessary tool
for prudent design practice in MQ cryptography.
B. Organization of the Paper
The paper is organized as follows. In Section II, we brieﬂy
introduce the design principles of MQ schemes and also
recall the well known measure of nonlinearity of functions.
In the next Section III, we introduce the notion of strong
(s, t)–linearity, which is basically an extension of the standard
linearity measure and review the recently introduced (s, t)–
linearity measure. In Sections IV and V, we show how the
two linearity measures ﬁt in the context of MQ cryptography.
Some discussion on the matter proceeds in Section VI, and the
conclusions are presented in Section VII.
II.
PRELIMINARIES
Throughout the text, Fq will denote the ﬁnite ﬁeld of q
elements, where q = 2d, and a = (a1, . . . , an)⊺ will denote a
vector from Fn
q .
A. Vectorial Functions and Quadratic Forms
Deﬁnition 1: Let n, m be two positive integers. The func-
tions from Fn
q to Fm
q are called (n, m) functions or vectorial
functions. For an (n, m) function f = (f1, . . . , fm), fi are
called the coordinate functions of f.
Classically, a quadratic form
f(x1, . . . , xn) =
X
1≤i≤j≤n
γijxixj : Fn
q → Fq
can be written as x⊺Fx using its matrix representation F. This
matrix is constructed differently depending on the parity of
the ﬁeld characteristic. In odd characteristic, F is chosen to
be a symmetric matrix, where Fij = γij/2 for i ̸= j and
Fij = γij for i = j. Over ﬁelds Fq of even characteristic F
can not be chosen in this manner, since (γij +γji)xixj = 0 for
i ̸= j. Instead, let eF be the uniquely deﬁned upper-triangular
representation of f, i.e., eFij = γij for i ≤ j. Now, we obtain
a symmetric form by F := eF+ eF⊺. Note that, in this case only
the upper-triangular part represents the according polynomial
and F is always of even rank.
B. MQ Cryptosystems
The public key of a MQ cryptosystem is usually given by
an (n, m) function P(x) = (p1(x), . . . , pm(x)) : Fn
q → Fm
q ,
where
ps(x) =
X
1≤i≤j≤n
eγ(s)
ij xixj +
n
X
i=1
eβ(s)
i
xi + eα(s)
for every 1 ⩽ s ⩽ m, and where x = (x1, . . . , xn)⊺.
The public key P is obtained by masking a structured cen-
tral (n, m) function F = (f1, . . . , fm) using two secret linear
transformations S, T ∈ GLn(Fq) and deﬁned as P = T ◦F◦S.
We denote by P(s) and F(s) the (n × n) matrices describing
the homogeneous quadratic part of ps and fs, respectively.
Example 1:
i. The internal map of UOV [1] is deﬁned as F : Fn
q → Fm
q ,
with central polynomials
fs(x) =
X
i∈V,j∈V
γ(s)
ij xixj+
X
i∈V,j∈O
γ(s)
ij xixj+
n
X
i=1
β(s)
i
xi+α(s),
(1)
for every s = 1 . . . m, where n = v + m, V = {1, . . . , v}
and O = {v + 1, . . . , n} denote the index sets of the
vinegar and oil variables, respectively. The public map P
is obtained by P = F ◦S, since the afﬁne T is not needed
(Indeed, any component w⊺ · F has again the form (1)).
ii. The internal map F : F2n → F2n of C∗ [8] is deﬁned by
F(x) = x2ℓ+1, where gcd(2ℓ + 1, 2n − 1) = 1.
This condition ensures that F is bijective.
iii. The representatives of the family of Stepwise Triangular
Systems (STS) [4] have an internal map F : Fn
q → Fm
q
deﬁned as follows. Let L be the number of layers, and
let ri, 0 ≤ i ≤ L be integers such that 0 = r0 < r1 <
· · · < rL = n. The central polynomials in the k-th layer
are deﬁned by
fi(x1, . . . , xn) = fi(x1, . . . , xrk),
rk−1 + 1 ≤ i ≤ rk.
We describe brieﬂy two important cryptanalytic tools in
MQ cryptography, that are of particular interest for us.
1) The MinRank Problem: The problem of ﬁnding a low
rank linear combination of matrices is a known NP-hard linear
algebra problem [35] known as MinRank in cryptography [18].
It has been shown that it underlies the security of several MQ
cryptographic schemes [4][14][15]. It is deﬁned as follows.
MinRank MR(n, r, k, M1, . . . , Mk)
Input: n, r, k ∈ N, where M1, . . . , Mk ∈ Mn×n(Fq).
158
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

Question: Find – if any – a k-tuple (λ1, . . . , λk)
∈
Fk
q \ {(0, 0, . . . , 0)} such that:
Rank
 k
X
i=1
λi Mi
!
⩽ r.
2) Good Keys: The concept of equivalent keys formally
introduced by Wolf and Preneel in [36] is fundamentally
connected to the security of MQ schemes. In essence, any key
that preserves the structure of the secret map is an equivalent
key. This natural notion was later generalized by Thomae and
Wolf [16] to the concept of good keys that only preserve some
of the structure of the secret map. Good keys improve the
understanding of the level of applicability of MinRank against
MQ schemes, and are a powerful tool for cryptanalysis. Good
keys are deﬁned as follows.
Let k, 1 ≤ k ≤ m and F = {f1, . . . , fm} be a set of
polynomials of Fq[x1, . . . , xn]. Let I(k) ⊆ {xixj | 1 ≤ i ≤
j ≤ n} be a subset of the degree-2 monomials, and let F
I =
{f1
I(1), . . . , fm
I(m)} where fk
I(k) :=
P
xixj∈I(k) γ(k)
ij xixj.
Deﬁnition 2 ([16]): Let
(F, S, T), (F′, S′, T ′)
∈
Fq[x1, . . . , xn]m × GLn(Fq) × GLm(Fq) Let also J(k) ⊊ I(k)
for all k, 1 ≤ k ≤ m with at least one J(k) ̸= ∅. We call
(F′, S′, T ′) ∈ Fq[x1, . . . , xn]m × GLn(Fq) × GLm(Fq) a
good key of (F, S, T) if and only if:

every a ∈ V is a linear structure of all the components w⊺f,
where w is a basis vector of W. From here, a is also a linear
structure of any subspace of W of dimension t−1. Therefore,
f is also strongly (s, t − 1)–linear. Similarly, the elements of
any subspace of V of dimension s − 1 are linear structures of
all the components w⊺f, and thus, f is also strongly (s−1, t)–
linear.
Proposition 4: Let f be an quadratic (n, m) function and
V ⊂ Fn
q and W ⊂ Fm
q with Dim(V ) = s, Dim(W) = t be
two linear spaces. Then f is strongly (s, t)–linear with respect
to V, W if and only if the function fW corresponding to all
components w⊺ · f, w ∈ W can be written as
fW (x, y) = gW (x) + LW (y)
(3)
where Fn
q is a direct sum of U and V , gW : U → Ft
q is a
quadratic function and LW : V → Ft
q is a linear function.
Proof: From Deﬁnition 5, f is strongly (s, t)–linear with
respect to V, W if and only if V is a subspace of the linear
space of w⊺ · f, for all w ∈ W. Now, for w a basis vector of
W, w⊺ · f can be written as w⊺ · f(x, y) = gw(x) + Lw(y)
where y ∈ V belongs to the linear space of w⊺ ·f. Combining
all the components for a basis of W we obtain the form (3).
Proposition 5: Let f be a quadratic (n, m) function. Then
f is strongly (s, t)–linear with respect to V, W if and only
if the function fW corresponding to all components w⊺ · f,
w ∈ W is such that all its derivatives Daw⊺ · f, with a ∈ V
are constant.
Recently, Boura and Canteaut [34] introduced a new mea-
sure for the propagation of linear relations through S-boxes,
called (s, t)-linearity.
Deﬁnition 6 ([34]): Let f be an (n, m) function. Then, f
is said to be (s, t)–linear if there exist two linear subspaces
V ⊂ Fn
q , W ⊂ Fm
q with Dim(V ) = s, Dim(W) = t such that
for all w ∈ W, w⊺ ·f has degree at most 1 on all cosets of V .
Similarly as for strong (s, t)–linearity, it is true that
Proposition 6 ([34]): If a function is (s, t)–linear, then it
is also (s − 1, t)–linear, and (s, t − 1)–linear.
Boura and Canteaut [34] proved that any (s, t)–linear
function “contains” a function of the Maiorana-McFarland
class, in the following sense.
Proposition 7 ([34]): Let f be an (n, m) function and
V ⊆ Fn
q and W ⊆ Fm
q with Dim(V ) = s, Dim(W) = t be
two linear spaces. Then f is (s, t)–linear with respect to V, W
if and only if the function fW corresponding to all components
w⊺ · f, w ∈ W can be written as
fW = M(x) · y + G(x)
where Fn
q is the direct sum of U and V , G is a function from
U to Ft
q and M(x) is a t × s matrix whose coefﬁcients are
functions deﬁned on U.
A useful characterization of (s, t)–linearity, resulting from
the properties of the Maiorana-McFarland class is through sec-
ond order derivatives deﬁned by Da,bf = DaDbf = DbDaf.
Proposition 8 ([34]): Let f be an (n, m) function. Then f
is (s, t)–linear with respect to V, W if and only if the function
fW corresponding to all components w⊺ · f, w ∈ W is such
that all its second order derivatives Da,bw⊺ · f, with a, b ∈ V
vanish.
The two measures of linearity, even though they measure
different linear subspaces are also interconnected. The follow-
ing two propositions illustrate this connection.
Proposition 9: If a function is strongly (s, t)–linear, then
it is also (s, t)–linear.
Proposition 10: If a quadratic (n, m) function f is (⌈ n
2 ⌉+
s, 1)–linear than it is strongly (2s, 1)–linear.
Proof: From Proposition3 [34] we have the fact that
a (s, 1)–linear function has linearity L(f)
⩾
qs (This
comes from the fact that the linearity of a function is lower
bounded by the linearity of any of its components.) Thus,
if a quadratic (n, m) function is (⌈ n
2 ⌉ + s, 1)–linear, then
L(f) ⩾ q⌈ n
2 ⌉+s. From Theorem1 L(f) = qn− r
2 , where
r = min{Rank(Fw)|w ∈ Fm
q }. From here n − r
2 ⩾ ⌈ n
2 ⌉ + s
and further n − 2s ⩾ r. Hence f is strongly (2s, 1)–linear.
In the next two sections, we will provide a general
framework for the security of MQ schemes against linear
cryptanalysis using the notions of strong (s, t)–linearity and
(s, t)–linearity.
IV.
THE STRONG (s, t)–LINEARITY MEASURE FOR MQ
SYSTEMS
In this section, we show that strong (s, t)–linearity is
fundamentally connected to the susceptibility of an MQ
scheme to MinRank attacks and good keys attacks.
From Proposition 2 we have the following theorem.
Theorem 2: Let f
=
(f1, f2, . . . , fm) be a quadratic
(n, m) function, and let F1, F2, . . . , Fm be the matrix repre-
sentations of the coordinates of f. Then, the MinRank problem
MR(n, r, m, F1, F2, . . . , Fm) has a solution if and only if f
is strongly (n − r, 1)–linear.
Proof: We see that v = (v1, . . . , vn) ∈ Fn
q \ {0} is a so-
lution to the MinRank problem MR(n, r, m, F1, F2, . . . , Fm)
if and only if Rank
 n
X
i=1
vi Fi
!
⩽ r, that is, if and only if
Dim
 
Ker
 n
X
i=1
vi Fi
!!
⩾ n − r, i.e., from Proposition 2, if
and only if v⊺ ·f has at least n−r linearly independent linear
structures. Taking W to be the space generated by the vector
v and V to be the linear space of v⊺ · f, from Deﬁnition 5 the
last is equivalent to f being strongly (n − r, 1)–linear.
Example 2: From Theorem 2, it is clear that bent functions
are resistant to MinRank attacks, since no linear combination
of the components of the function has smaller rank than n.
Thus, regarding MinRank attacks, bent functions are optimal
for use as a secret map in MQ cryptosystems.
Example 3: Regarding encryption MQ schemes, a natural
conclusion would be that AB permutations are the most
suitable for use. One of the most scrutinized AB permutations
are the Gold functions deﬁned over Fqn for odd n by:
f(x) = xqℓ+1, gcd(qℓ + 1, qn − 1) = 1, gcd(ℓ, n) = 1
where the ﬁrst condition guarantees balancedness, and the
second AB-ness. Notably, one of the most famous MQ
schemes, the C∗ scheme, uses an AB function, although there
are variants that do not meet the second condition [21].
As mentioned before, AB functions have Rank(Fv) =
n − 1 for any component v⊺ · f. This means that each of
the components have a linear space of dimension 1, and no
two components share a linear space, i.e., AB functions are
only strongly (1, 1)–linear. Hence, MinRank for r = n − 1 is
trivially satisﬁed and does not reveal anything more about the
structure of the map.
160
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

The example of Gold functions from Example 3 implies
that although MinRank on its own can be a good indicator
of a weakness in a scheme, it does not provide a sufﬁcient
condition for mounting a successful attack. A better framework
for the applicability of MinRank is provided by the concept
of good keys (cf. Section II-B2). It should be emphasized that
the deﬁnition of good keys (Deﬁnition 2), does not explicitly
state the structure that is being preserved, thus, providing
a framework even for structures not yet discovered. On the
other hand, the motivation for good keys comes from the
Rainbow band separation attack [40], that exploits (among
others) a particular weakness connected to the presence of
linear structures in the secret map. Moreover, known attacks
that use MinRank, as well as other applications of good keys,
again take advantage of the same property. Hence, we give a
new deﬁnition for the special type of keys that separate the
space of linear structures. This deﬁnition comes as a direct
consequence of strong (s, t)–linearity. Later, we will also take
a look at another weakness that the Rainbow band separation
attack and its generalizations take advantage of, and we will
also deﬁne the corresponding keys. We will call both types of
keys separation keys.
Let V be a subspace of Fn
q of dimension k ≤ n, and let
SV be an invertible matrix such that k of its rows form a basis
of V . We note that the rest of the columns of the matrix can
be arbitrary, as long as the matrix is invertible.
Deﬁnition 7: Let
(F, S, T), (F′, S′, T ′)
∈
Fq[x1, . . . , xn]m
×
GLn(Fq)
×
GLm(Fq)
and
let
P
= T ◦ F ◦S
= T ′ ◦ F′ ◦S′. We call (F′, S′, T ′) a
strong (s, t) separation key for P if P is strongly (s, t)–
linear with respect to two spaces V and W, Dim(V ) = s,
Dim(W) = t and
S′ = S⊺
V ,
T ′ = TW .
A strong (s, t) separation key separates the components of
the public key that have a non empty common linear space.
As a direct consequence of Deﬁnition 7 we have that:
Proposition 11: If (F′, S′, T ′) is a strong (s, t) separation
key for P, then it is also a good key for P.
Many MQ cryptosystems, proposed so far have strong
separation keys. As mentioned before, Rainbow [2] is one
of the examples, but also all STS cryptosystems ([3], [4]),
and all MQ cryptosystem that combine a layered structure
with other types of design principles, including among others
Branched C∗ [41], MQQ-SIG [5], TTS [6], EnTTS [7], MFE
[42]. Table I summarizes the different strong separation keys
for some of these schemes.
TABLE I. EXAMPLES OF STRONG (s, t) SEPARATION KEYS FOR SOME MQ
CRYPTOSYSTEMS
scheme
parameters
strong (s, t) separation keys
Branch.C∗
(n1, . . . , nb)
(P
i ni, n − P
i ni)
STS
(r1, . . . , rL)
(n − rk, rk), k = 1, . . . , L − 1
Rainbow
(v1, o1, o2) = (18, 12, 12)
(12, 12)
MQQ-SIG
(q, d, n, r) = (2, 8, 160, 80)
(k, 80 − k), k = 1, . . . , 79
MFE
(qk, n, m) =
(2k, 10k), (4k, 4k),
((2256)k, 12, 15)
(6k, 2k), (8k, k)
EnTTS
(n, m) = (32, 24)
(10, 14),(14, 10)
The known attacks on these systems, can all be consid-
ered as separation key attacks involving different techniques
and optimizations. The framework of strong (s, t) linearity
provides a uniﬁed way of looking at these attacks, and a
single measure that can be used as criteria for the parameters
of schemes that have strong separation keys. The next two
theorems explain in detail how to mount a generic strong
separation key attack, what is the complexity of the attack,
and what is the best strategy for attack when the existence of
a strong separation key is known. We decided to present the
attack by representing the conditions for strong (s, t) linearity
as systems of equations. This way we obtain completely
equivalent systems to the ones that can be obtained using good
keys, thus, offering another elegant point of view on why good
keys exist. Note that this is not the only technique that can be
used to recover strong (s, t) separation keys (for example we
can use probabilistic approach). However, it provides a clear
picture of the cases when the existence of a particular strong
separation key is devastating for the security of MQ schemes.
Theorem 3: Let it be known that a strong (s, t) separation
key exists for a given MQ public key P : Fn
q → Fm
q
with
matrix representations Pw of a component w⊺ · P.
i. The task of ﬁnding a strong (s, t) separation key (S⊺
V , TW )
is equivalent to solving the system of bilinear equations
Pw(i) · a(j) = 0, i ∈ {1, . . . , t}, j ∈ {1, . . . , s},
(4)
in the unknown basis vectors w(i) of the space W, and
the unknown basis vectors a(j) of the space V .
ii. The complexity of recovering the strong (s, t) separation
key through solving the system (4) is
O

t · s · n ·
(n − s)s + (m − t)t + dreg
dreg
ω
(5)
where dreg = min{(n−s)s+(m−t)t}+1, and 2 ⩽ ω ⩽ 3
is the linear algebra constant.
Proof: i. From Deﬁnition7 the existence of a strong
(s, t) separation key (S⊺
V , TW ) means that P is strongly
(s, t)–linear with respect to two spaces V, W of dimension
Dim(V ) = s, Dim(W) = t. So the task is to recover these
two spaces, i.e., to recover some bases {a(1), . . . , a(s)} and
{w(1), . . . , w(t)} of V and W, respectively. From Deﬁnition 5
and Proposition 2, w ∈ W and a ∈ V if and only if a is in the
kernel of Pw, i.e., if and only if Pw·a = 0. Let the coordinates
of the basis vectors {a(1), . . . , a(s)} and {w(1), . . . , w(t)} be
unknowns. In order to insure that they are linearly independent,
we ﬁx the last s coordinates of a(j) to 0 except the (n−j+1)-
th coordinate that we ﬁx to 1, and similarly we ﬁx the ﬁrst t
coordinates of w(i) to 0 except the i-th coordinate that we ﬁx to
1. This way we can form the bilinear system (4). The solution
of the system will yield the unknown bases of U and W. Note
that if we get more than one solution, any of the obtained
solutions will sufﬁce. However, it can also happen that the
system has no solutions. This is due to the ﬁxed coordinates
in the basis vectors, which can be done in the particular manner
with probability of approximately (1 −
1
q−1)2. Still, if no
solutions, we can randomize the function P by applying linear
transformation to the input space and the coordinates of the
function, since from Proposition 1, this preserves the strong
(s, t)–linearity of P.
ii. From i., the system (4) consists of t · s · n bilinear
equations in two sets of variables of sizes ν1 = (n − s)s and
ν2 = (m − t)t, bilinear with respect to each other. The best
known estimate of the complexity of solving a random system
of bilinear equations is due to Faugere et al. [43], which says
161
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

that for the grevlex ordering, the degree of regularity of a
generic afﬁne bilinear zero-dimensional system over a ﬁnite
ﬁeld is upper bounded by
dreg ≤ min(ν1, ν2) + 1.
(6)
Now, we use the F5 algorithm for computing a grevlex Gr¨obner
basis of a polynomial system [44][45], that has a complexity
of
O

µ ·
ν1 + ν2 + dreg
dreg
ω
,
(7)
for solving a system of ν1 + ν2 variables and µ equations
(2 ⩽ ω ⩽ 3 is the linear algebra constant). Using (6) and (7),
we obtain the complexity given in (5).
The complexity given in (5) is clearly not polynomial,
since dreg depends on n. However, it can be substantially
improved using the properties of strong (s, t)–linearity from
Proposition 3. This is shown in the next theorem.
Theorem 4: Let it be known that a strong (s, t) separation
key exists for a given MQ public key P : Fn
q → Fm
q
with
matrix representations Pw of a component w⊺ · P.
i. The task of ﬁnding a strong (s, t) separation key can be
reduced to
1. Solving the system of bilinear equations
P(i)
w · a(j) = 0, i ∈ {1, . . . , c1}, j ∈ {1, . . . , c2}, (8)
in the unknown basis vectors w(i) of the space W, and
the unknown basis vectors a(j) of the space V , where
c!, c2 are small integers chosen appropriately.
2. Solving the system of linear equations
P(i)
w · a(j) = 0, i ∈ {c1+1, ..., t}, j ∈ {1, ..., c2},
P(i)
w · a(j) = 0, i ∈ {1, ..., c1}, j ∈ {c2+1, ..., s},(9)
in the unknown basis vectors w(i), i ∈ {c1 + 1, . . . , t}
of the space W, and the unknown basis vectors a(j),
j ∈ {c2 + 1, . . . , s} of the space V .
ii. The complexity of recovering the strong (s, t) separation
key using the procedure from i. is
O
(n − s)c2 + (m − t)c1 + dreg
dreg
ω
(10)
where dreg = min{(n − s)c2, (m − t)c1}.
Proof: i. The crucial observation that enables us to prove
this part, is a consequence of Proposition 3. Recall that it
states that strong (s, t)–linearity implies strong (s − 1, t) and
strong (s, t − 1)–linearity. Even more, if P is strongly (s, t)–
linear, with respect to V
= Span{a(1), . . . , a(s)}, W
=
Span{w(1), . . . , w(t)}, then it is strongly (s−1, t)–linear with
respect to V1, W, where V1 ⊂ V , and strongly (s, t − 1)–
linear with respect to V, W1, where W1 ⊂ W. Hence, there
exist two arrays of subspaces V ⊃ V1 ⊃ · · · ⊃ Vs−1 and
W ⊃ W1 ⊃ · · · ⊃ Wt−1, such that P is strongly (s−i, t−j)–
linear with respect to Vi = Span{a(1), . . . , a(s−i)}, Wj =
Span{w(1), . . . , w(t−j)}. Thus, we can ﬁrst recover the bases
of some spaces Vs−c2, Wt−c1, and then extend them to the
bases of V, W. Again, similarly, as in the proof of Theorem 3,
we take the coordinates of the basis vectors {a(1), . . . , a(s)}
and {w(1), . . . , w(t)} of V and W to be the unknowns, and
again ﬁx the last s coordinates of a(j) to 0 except the
(n − j + 1)-th coordinate that we ﬁx to 1, and ﬁx the ﬁrst
t coordinates of w(i) to 0 except the i-th coordinate that we
ﬁx to 1. Next, we pick two small constants c1 and c2, and
form the bilinear system (8). Once the solution of this system
is known, we can recover the rest of the bases vectors, by
solving the linear system (9).
ii. The main complexity for the recovery of the key is in
solving the system (8). Thus, proof for the complexity (10) is
the same as for ii. Theorem 3. What is left, is to explain how
the constants c1 and c2 are chosen. First of all, the system
(8) consists of c1 · c2 · n equations in (n − s)c2 + (m − t)c1
variables. We choose the constants c1 and c2 such that c1 · c2 ·
n > (n − s)c2 + (m − t)c1. Second, since the complexity is
mainly determined by the value dreg = min{(n − s)c2, (m −
t)c1}, these constants have to be chosen such that this value
is minimized. Note that in practice, for actual MQ schemes,
we can usually pick c1, c2 ∈ {1, 2}.
The most important implication of the last theorem is that
when n − s or m − t is constant we have a polynomial
time algorithm for recovering a strong (s, t) separation key.
This immediately implies that for any MQ scheme with this
property we can recover in polynomial time a subspace on
which the public key is linear.
Another implication is that it provides the best strategy of
attacking an MQ scheme that possesses some strong (s, t)
separation key. Indeed, since we need to minimize dreg, we
simply look for the minimal m − t or minimal n − s s.t. there
exists a strong (s, t) separation key.
Example 4: Consider a (n, n) public key function from the
family of STS systems (cf. Example 1.iii). From Table I, for the
parameter set (r1, . . . , rL) we see that the scheme has a strong
(n−r1, r1) separation key and also a strong (n−rL−1, rL−1)
separation key. For the ﬁrst key, n − s = r1 is small, so we
can choose c2 = 1 and c1 such that c1n > r1+(n−r1)c1, i.e.,
we can choose c1 = 2. For the second key, n − t = n − rL−1
is small so we can choose c1 = 1 and c2 such that c2n >
rL−1c2 + (n − rL−1), i.e., we can choose c2 = 2. Note that
for small q it is perfectly ﬁne to choose c1 = c2 = 1 in both
cases, since then at most q solutions for the strong keys will
need to be tried out.
The level of nonlinearity of a given function can be used
as sufﬁcient condition for the nonexistence of a strong (s, t)
separation key.
Theorem 5: An (n, m) function f of linearity L(f) ⩽
qn− r
2
does not posses a strong (s, t) separation key for
s > n − r.
Proof: From the linearity given, f does not have any
component whose linear space has dimension bigger than n−r.
Thus, f is not strongly (s, t)–linear for s > n − r, and does
not have a corresponding strong (s, t) separation key.
As a direct consequence, we have the following:
Corollary 1:
1) If (F′, S′, T ′) is a strong (s, t) separation key for C∗,
then s ⩽ 1 and t ⩽ 1.
2) UOV using Maiorana-McFarland bent function does not
posses a strong (s, t) separation key for any s > 0.
V.
THE (s, t)-LINEARITY MEASURE FOR MQ SCHEMES
The size of the linear space of the components of an
(n, m) quadratic function clearly provides a measure for the
applicability of the function in MQ systems. Still, the notion
of strong (s, t)–linearity can not provide a measure for the
162
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

existence of all the linear subspaces on which the restriction
of an (n, m) function is linear.
For example, the secret map of UOV is linear on the oil
space, regardless of its nonlinearity, and even when it is of
maximum nonlinearity i.e., when it is bent. The existence of
this space enabled Kipnis and Shamir to recover it in cases
when it is large enough, as in the original Oil and Vinegar
scheme. Furthermore, the existence of such spaces improves
the attack against Rainbow, compared to an attack that only
considers linear spaces of the components.
We will show next that (s, t)–linearity provides a charac-
terization for such subspaces, and thus, provides an improved
measure for the security of MQ schemes.
Example 5: Let P : Fn
q → Fm
q be a UOV public mapping.
In Section IV, we saw that the secret map of an UOV scheme
belongs to the Maiorana-McFarland class. Thus, immediately,
from Proposition 7, we conclude that P is (m, m)–linear, i.e.,
P is linear on the oil space.
Now, similarly as in the previous section, we can deﬁne a
special type of separation key, that separates the spaces with
respect to which a function is (s, t)–linear.
Deﬁnition 8: Let
(F, S, T), (F′, S′, T ′)
∈
Fq[x1, . . . , xn]m
×
GLn(Fq)
×
GLm(Fq)
and
let
P = T ◦ F ◦S = T ′ ◦ F′ ◦S′. We call (F′, S′, T ′) an
(s, t) separation key for P if P is (s, t)–linear with respect
to two spaces V and W, Dim(V ) = s, Dim(W) = t and
S′ = S⊺
V ,
T ′ = TW .
Conclusively, any public mapping that was created using
an oil and vinegar mixing has a (s, t) separation key. Table II
gives the (s, t) separation keys for some of the MQ schemes
that combine a layered structure with oil and vinegar mixing.
TABLE II. EXAMPLES OF (s, t) SEPARATION KEYS FOR SOME MQ
CRYPTOSYSTEMS
scheme
parameters
(s, t) separation keys
UOV
(q, v, o)
(o, o)
Rainbow
(q, v, o1, o2) = (28, 18, 12, 12)
(12, 24), (24, 12)
MQQ-SIG
(q, d, n, r) = (2, 8, 160, 80)
(8+8i, 80−8i), i∈{0, ..., 9}
MFE
(qk, n, m) = ((2256)k, 12, 15)
(2k, 2k),(3k, 2k),(4k, 4k)
ℓIC
(qk, ℓ) = (2k, 3)
(2k, 2k),(k, 2k)
EnTTS
(n, m) = (32, 24)
(10, 24),(14, 14),(24, 10)
An interesting case regarding (s, t)–linearity is the C∗
scheme for which we have the following result.
Proposition 12: Let F : Fn
2 → Fn
2 be the secret map of
C∗ (cf. Example 1ii) and let gcd(ℓ, n) = d. Then, there exists
a (d, n) separation key for these parameters of C∗.
Proof: First, let us consider the equation Da,x(f) = 0 for
a nonzero a. A little computation shows that it is equivalent
to
ax(a2ℓ−1 + x2ℓ−1) = 0,
and since we are interested in nonzero solutions we can restrict
our attention to
a2ℓ−1 + x2ℓ−1 = 0.
This equation has gcd(2ℓ − 1, 2n − 1) = 2d − 1 independent
roots (see for example [46]). Thus, there exists a space V of
dimension Dim(V ) = d s.t. Da,b(f) = 0, for all a, b ∈ V .
This implies that Da,b(w⊺ · f) = 0, for any w ∈ Fn
2. Further,
from Proposition 8 and Deﬁnition 8 it follows that there exists
a (d, n) separation key for the given parameters.
Hence, the best choice for parameters of the C∗ scheme is
when d = 1, because in this case, the dimension of the space
V is the smallest, and it is hardest to separate it. Note that
this is analogous to the case of the UOV scheme, where also
it is desirable to have smaller space V . The use of d > 1 was
exactly the property that was exploited by Dubois et al. in [25]
to break a modiﬁed version of the signature scheme SFLASH
with d > 1 before the more secure version with d = 1 was
broken due to the possibility to decompose the second order
derivative into linear functions [24]. Even then, the authors of
[25] noted that the condition d = 1 should be included in the
requirements of the scheme, a fact that was overseen by the
NESSIE consortium.
Note further that Proposition 12 implies that the dimension
of the space V is invariant under restrictions of the public
map (minus modiﬁer). Thus, the SFLASH signature scheme
also possesses a (d, k) separation key, where k ⩽ n is the
number of coordinates of the public key of SFLASH, and can
equivalently be used to attack the modiﬁed version.
Similarly as for the case of strong (s, t) separation keys,
(cf. Theorem 3 and Theorem 4), we can construct a generic
algorithm that ﬁnds (s, t) separation keys. This part will be
covered in the extended version of the paper. Here we focus
our interest on a special type of separation keys, namely, (s, m)
separation keys where the space W is the entire image space
of the function. Indeed, schemes including UOV, Rainbow,
Enhanced TTS, all posses exactly such keys. We will also
show how the properties of (s, m)–linearity provide the best
strategy for attacking schemes that posses (s, m) separation
keys. Unfortunately, in this case it is more difﬁcult to estimate
the complexity of the attacks, since the obtained equations are
of mixed nature. Therefore, we leave the complexity estimate
for future work. Still, it is notable that we again arrive to
equivalent systems of equation as in the case of good keys.
Theorem 6: Let it be known that an (s, m) separation key
exists for a given MQ public key P : Fn
q → Fm
q with matrix
representations Pi := ePi + eP⊺
i of the coordinate functions pi.
i. The task of ﬁnding an (s, m) separation key (S⊺
V , TFm
q ) is
equivalent to solving the following system of equations
a(j)Pia(k) = 0, i ∈ {1, ..., m}, j, k ∈ {1, ..., s}, j < k
a(k) ePia(k) = 0, i ∈ {1, ..., m}, k ∈ {1, ..., s},
(11)
in the unknown basis vectors a(j) of the space V .
ii. The key can equivalently be found by
1. First solving the system of equations
a(j)Pia(k) = 0, i∈{1, ..., m}, j, k ∈ {1, ..., c}, j < k
a(k) ePia(k) = 0, i∈{1, ..., m}, k∈{1, ..., c},
(12)
in the unknown basis vectors a(k), k ∈ {1, . . . , c} of
the space V , for an appropriately chosen integer c.
2. And then, solving the system of linear equations
a(j)Pia(k) = 0,
(13)
i ∈ {1, ..., m}, j ∈ {1, ..., c}, k ∈ {c + 1, ..., s}, j < k
in the unknown basis vectors a(k), k ∈ {c + 1, ..., s}
of the space V .
Proof: i. From Deﬁnition 8, P is (s, m)–linear with
respect to V, Fm
q where Dim(V ) = s. So we need to recover
only some basis {a(1), . . . , a(s)} of V . From Deﬁnition 6
163
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

and Proposition 8, the condition for (s, t)–linearity can be
written as Da(j),a(k)f = 0 for all a(j), a(k) ∈ V , i.e., as
a(j)Pia(k) = 0. Since Da,af
= 0 for any a, we must
write this condition as a(k) ePia(k) = 0. We ensure the linear
independence of the unknown basis vectors {a(1), . . . , a(s)} by
ﬁxing the last s coordinates of a(j) to 0 except the (n−j+1)-th
coordinate that we ﬁx to 1. The probability that we can ﬁx the
coordinates of the basis vectors in this way is approximately
1−
1
q−1. If the system does not yield a solution we randomize
P. In this way we form the system (11). It consists of m

coordinates of the vectors a(1), . . . , a(m) ∈ Fn
q to ensure
linear independence. Suppose instead that we have chosen
c < 2(n/m − 2). Then Step 1 of Theorem 6 ii. will give on
average q2(n−m)/m(c+1) solutions for the basis vectors, and
all the solutions span a different space of dimension c such
that P is (c, m) linear with respect to it (cf. Proposition 13).
From the choice of the basis vectors, only one of these spaces
is a subspace of the oil space V we are trying to recover.
Thus, if q2(n−m)/m(c+1) is relatively big, it is infeasible to
ﬁnd the correct subspace. If we choose a wrong space, after
several steps (depending on n, m, c), we will not be able to
ﬁnd any new linearly independent vectors. The reason is that
from Proposition 13 it is expected that even in the random
case such subspaces exist, but their dimension is much smaller
than that of the actual oil space. Hence, we must choose at
least c ≈ 2(n/m − 2). For example, c = 1 is suitable only
for balanced versions where n ≈ 2m, c = 2 can be used
for n upto ≈ 3m, and for the practically used parameters of
3m < n < 4m c should be 4 or even 5.
Remark 2: In [48], Thomae analyses the efﬁciency of the
Reconciliation attack on UOV, and concludes that solving the
equations from the ﬁrst step of the attack is quite inefﬁcient.
He proposes instead to recover several columns from the good
key at once and introduces some optimal parameter k for the
number of columns, that corresponds to our parameter c in
Theorem 6. However, the author does not discuss why the
parameter is necessary, how to choose it, and what does it mean
with regards to different parameters of UOV. The discussion
above answers these questions.
B. Combining strong (s, t)–linearity and (s, t)–linearity
A number of existing MQ schemes combine several
paradigms in their design. For example, Rainbow [2] or EnTTS
[7] have a secret map with both layered and UOV structure.
In other words, these schemes posses both types of separation
keys. (Note that we do not talk about the trivial implication
of a (s, t) separation key when a strong (s, t) separation key
exists.) For example, Rainbow, with parameters (v, o1, o2),
where n = v + o1 + o2, m = o1 + o2, has a (o2, o1 + o2)
separation key with respect to V, Fm
q , but also a strong (o2, o1)
separation key with respect to the same subspace V and some
W ⊂ Fm
q . We can certainly focus on only one of the keys, and
for example use either Theorem 4 or Theorem 6 to recover it.
But since they share the same V the best strategy would be to
combine the conditions for both strong linearity and linearity,
i.e., combine both theorems. A little computation shows that
in this way, we can take both c1 = c2 = 1 in Theorem 4 and
c = 1 in Theorem 6, i.e., indeed we arrive to the most efﬁcient
case for recovery of V, W.
A similar argument applies to any MQ cryptosystem
that encompasses layered and UOV structure. Notably, the
possibility to use the aforementioned combination is exactly
why the Rainbow band separation attack is much more efﬁcient
than the reconciliation attack.
VI.
PRUDENT DESIGN PRACTICE FOR MQ SCHEMES
In the previous sections, we saw that strong (s, t)–linearity
and (s, t)–linearity provide a reasonable measure for the
security of MQ cryptosystems. Certainly, in some schemes,
the internal structure is clear from the construction, and
such characterization may seem redundant. However, many
schemes contain a hidden structure, that is invariant under
linear transformations, (and thus, present in the public map)
and that became obvious only after the scheme was broken.
Furthermore, sometimes the constructions of the internal map
lack essential conditions as in the case of SFLASH, where
the speciﬁcation was missing a condition on the gcd(ℓ, n). We
give another example concerning the MQQ-SIG scheme.
Example 6: The designers of the MQQ-SIG signature
scheme in the construction of the internal map use a special
type of quadratic (2d, d) function f = (f1, . . . , fd) that is
balanced when the ﬁrst d arguments are ﬁxed. They classify
such functions depending on how many of fi are linear, and
as a security measure require that all should be quadratic.
They further impose the restrictions that the rank of the
matrix of fi, i = 1, . . . , d should be high. While these
are completely reasonable requirements, they do not properly
reﬂect the linearity of the function, and are, thus, not at all
sufﬁcient to avoid instances of high linearity. Instead, a better
requirement would be to impose a restriction on the rank of
any of the components v⊺ · f, or equivalently to bound from
above the linearity L(f).
Thus, it seems that a good practice is to include conditions
about the linearity of the used functions. A nice concise
criteria is the behaviour of the derivatives Da(f) and Da,b(f)
of a function f (cf. Proposition 5 and 8) and the nonlin-
earity measure. As already mentioned, bent functions have
the highest possible nonlinearity. However, since all quadratic
bent functions over characteristic 2, are from the Maiorana-
McFarland class [49], their relatively high (s, t)-linearity can
be considered as a drawback. Conclusively, other functions
that have low linearity in both senses (strong (s, t) and (s, t))
should be considered. AB functions have such properties.
Unfortunately, Gold functions (cf. C∗) can not be used because
of the presence of symmetry invariants, but it seems as a good
idea to investigate other AB functions (or close to AB) for
applicability in MQ cryptosystems.
VII.
CONCLUSION
High nonlinearity of vectorial functions is nowadays widely
accepted criterion in symmetric cryptography. As it turns out,
it is also crucial for the security of MQ cryptosystems and
thus can be used as a relevant security measure in their design.
Indeed, in this paper, we provided a general framework based
on linearity measures that encompasses any attack that takes
advantage of the existence of linear spaces, and thus can be
considered as a generalization of all such attacks. That is why,
we believe that other notions from symmetric cryptography
including resiliency and differential uniformity can success-
fully be adapted in the MQ context, and beneﬁt further to the
understanding of the security of MQ cryptosystems.
ACKNOWLEDGEMENT
The ﬁrst author of the paper is partially supported by FCSE,
UKIM, R. Macedonia.
REFERENCES
[1]
A. Kipnis, J. Patarin, and L. Goubin, “Unbalanced oil and vinegar
signature schemes,” in Advances in Cryptology – EUROCRYPT ’99.
Springer, 1999, pp. 206–222.
[2]
J. Ding and D. Schmidt, “Rainbow, a new multivar. polynomial signa-
ture scheme.” in ACNS, ser. LNCS, vol. 3531, 2005, pp. 164–175.
[3]
T.-T. Moh, “A public key system with signature and master key
functions,” Comm. in Algebra, vol. 27, no. 5, 1999, pp. 2207–2222.
165
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

[4]
C. Wolf, A. Braeken, and B. Preneel, “On the security of stepwise
triangular systems,” Designs, Codes and Cryptography, vol. 40, no. 3,
2006, pp. 285–302.
[5]
D. Gligoroski et al., “MQQ-SIG - An Ultra-Fast and Provably CMA
Resistant Digital Signature Scheme,” in INTRUST, ser. LNCS, vol.
7222.
Springer, 2011, pp. 184–203.
[6]
B.-Y. Yang, J.-M. Chen, and Y.-H. Chen, “Tts: High-speed signatures
on a low-cost smart card,” in CHES, ser. LNCS, vol. 3156.
Springer,
2004, pp. 371–385.
[7]
B.-Y. Yang and J.-M. Chen, “Building secure tame-like multivariate
public-key cryptosystems: The new tts.” in ACISP ’05, ser. LNCS, vol.
3574.
Springer, 2005, pp. 518–531.
[8]
H. Imai and T. Matsumoto, “Algebraic methods for constructing asym-
metric cryptosystems.” in AAECC, ser. LNCS, vol. 229.
Springer,
1985, pp. 108–119.
[9]
N. Courtois, L. Goubin, and J. Patarin, “Sﬂash, a fast asymmetric
signature scheme for low-cost smartcards - primitive speciﬁcation
and supporting documentation.” [Online]. Available: www.minrank.
org/sﬂash-b-v2.pdf [Retrieved: September 2014].
[10]
J. Patarin, “Hidden Fields Equations (HFE) and Isomorphisms of
Polynomials (IP): two new families of asymmetric algorithms,” in
Advances in Cryptology – EUROCRYPT ’96, ser. LNCS, vol. 1070.
Springer, 1996, pp. 33–48.
[11]
O. Billet, J. Patarin, and Y. Seurin, “Analysis of intermediate ﬁeld
systems,” Cryptology ePrint Archive, Report 2009/542, 2009.
[12]
C.-H. O. Chen, M.-S. Chen, J. Ding, F. Werner, and B.-Y. Yang, “Odd-
char multivariate hidden ﬁeld equations,” Cryptology ePrint Archive,
Report 2008/543, 2008.
[13]
J. Patarin, N. Courtois, and L. Goubin, “Quartz, 128-bit long digital
signatures.” in CT-RSA, ser. LNCS, vol. 2020.
Springer, 2001, pp.
282–297.
[14]
N. Courtois and L. Goubin, “Cryptanalysis of the TTM cryptosystem,”
in Advances in Cryptology – ASIACRYPT ’00, ser. LNCS, vol. 1976.
Springer, 2000, pp. 44–57.
[15]
A. Kipnis and A. Shamir, “Cryptanalysis of the HFE Public Key Cryp-
tosystem by Relinearization,” in Advances in Cryptology – CRYPTO
’99, ser. LNCS, vol. 1666.
Springer, 1999, pp. 19–30.
[16]
E. Thomae and C. Wolf, “Cryptanalysis of Enhanced TTS, STS and
all its Variants, or: Why Cross-Terms are Important,” in Progress in
Cryptology – AFRICACRYPT ’12, ser. LNCS, vol. 7374.
Springer,
2012, pp. 188–202.
[17]
L. Bettale, J.-C. Faugre, and L. Perret, “Cryptanalysis of hfe, multi-
hfe and variants for odd and even characteristic,” Designs, Codes and
Cryptography, vol. 69, no. 1, 2013, pp. 1–52.
[18]
N. T. Courtois, “Efﬁcient zero-knowledge authentication based on
a linear algebra problem MinRank,” in Advances in Cryptology –
ASIACRYPT ’01, ser. LNCS, vol. 2248.
Springer, 2001, pp. 402–
421.
[19]
C. Wolf and B. Preneel, “Large Superﬂuous Keys in Multivariate
Quadratic Asymmetric Systems,” in Public Key Cryptography, ser.
LNCS, vol. 3386.
Springer, 2005, pp. 275–287.
[20]
P.-A. Fouque, L. Granboulan, and J. Stern, “Differential cryptanalysis
for multivariate schemes,” in Advances in Cryptology - EUROCRYPT
’05, ser. LNCS, vol. 3494.
Springer, 2005, pp. 341–353.
[21]
J. Ding, “A new variant of the Matsumoto-Imai cryptosystem through
perturbation.” in PKC, 2004, pp. 305–318.
[22]
V. Dubois, L. Granboulan, and J. Stern, “An efﬁcient provable distin-
guisher for hfe,” in ICALP (2), ser. LNCS, vol. 4052.
Springer, 2006,
pp. 156–167.
[23]
——, “Cryptanalysis of hfe with internal perturbation,” in Public Key
Cryptography, ser. LNCS, vol. 4450.
Springer, 2007, pp. 249–265.
[24]
V. Dubois, P.-A. Fouque, A. Shamir, and J. Stern, “Practical cryptanal-
ysis of sﬂash.” in Advances in Cryptology – CRYPTO ’07, ser. LNCS,
A. Menezes, Ed., vol. 4622.
Springer, 2007, pp. 1–12.
[25]
V. Dubois, P.-A. Fouque, and J. Stern, “Cryptanalysis of sﬂash with
slightly modiﬁed parameters.” in Advances in Cryptology – EURO-
CRYPT ’07, ser. LNCS, M. Naor, Ed., vol. 4515.
Springer, 2007, pp.
264–275.
[26]
J. Patarin, “Cryptoanalysis of the Matsumoto and Imai public key
scheme of EUROCRYPT ’88,” in Advances in Cryptology – CRYPTO
’95, 1995, pp. 248–261.
[27]
“Nessie:
New
european
schemes
for
signatures,
integrity,
and
encryption,” 2003. [Online]. Available: https://www.cosic.esat.kuleuven.
be/nessie/ [Retrieved: September 2014].
[28]
S. Tsujii, M. Gotaishi, K. Tadaki, and R. Fujita, “Proposal of a signature
scheme based on sts trapdoor,” in Post-Quantum Cryptography, ser.
LNCS.
Springer, 2010, vol. 6061, pp. 201–217.
[29]
K. Sakumoto, T. Shirai, and H. Hiwatari, “On provable security of
uov and hfe signature schemes against chosen-message attack,” in Post-
Quantum Cryptography, ser. LNCS, 2011, vol. 7071, pp. 68–82.
[30]
D. Smith-Tone, “On the differential security of multivariate public key
cryptosystems,” in Post-Quantum Cryptography, ser. LNCS.
Springer,
2011, vol. 7071, pp. 130–142.
[31]
R. Perlner and D. Smith-Tone, “A classiﬁcation of differential invariants
for multivariate post-quantum cryptosystems,” in Post-Quantum Cryp-
tography, ser. LNCS.
Springer, 2013, vol. 7932, pp. 165–173.
[32]
M. Matsui, “Linear cryptanalysis method for des cipher,” in Advances in
Cryptology - EUROCRYPT ’93, ser. LNCS, T. Helleseth, Ed. Springer
Berlin Heidelberg, 1994, vol. 765, pp. 386–397.
[33]
K. Nyberg, “On the construction of highly nonlinear permutations,” in
Advances in Cryptology – EUROCRYPT ’92, ser. LNCS, vol. 658.
Springer, 1992, pp. 92–98.
[34]
C. Boura and A. Canteaut, “A new criterion for avoiding the propagation
of linear relations through an Sbox,” in FSE 2013 - Fast Software
Encryption, ser. LNCS.
Singapore: Springer, 2014.
[35]
W. Buss, G. Frandsen, and J. Shallit, “The computational complexity
of some problems of linear algebra.” J. Comput. System Sci., 1999.
[36]
C. Wolf and B. Preneel, “Equivalent Keys in Multivariate Quadratic
Public Key Systems,” Journal of Mathematical Cryptology, vol. 4, April
2011, pp. 375–415.
[37]
K. Nyberg, “Perfect nonlinear s-boxes,” in Advances in Cryptology –
EUROCRYPT ’91, ser. LNCS, D. W. Davies, Ed., vol. 547.
Springer,
1991, pp. 378–386.
[38]
J. F. Dillon, “Elementary hadamard difference sets,” Ph.D. dissertation,
University of Maryland, 1974.
[39]
F. Chabaud and S. Vaudenay, “Links between differential and linear
cryptoanalysis.” in Advances in Cryptology – EUROCRYPT ’94, ser.
LNCS, vol. 950.
Springer, 1994, pp. 356–365.
[40]
J. Ding, B.-Y. Yang, C.-H. O. Chen, M.-S. Chen, and C.-M. Cheng,
“New differential-algebraic attacks and reparametrization of rainbow.”
in ACNS, ser. LNCS, vol. 5037, 2008, pp. 242–257.
[41]
J. Patarin and L. Goubin, “Asymmetric cryptography with s-boxes.” in
ICICS, ser. LNCS, vol. 1334.
Springer, 1997, pp. 369–380.
[42]
J. Ding, L. Hu, X. Nie, J. Li, and J. Wagner, “High order linearization
equation (hole) attack on multivariate public key cryptosystems.” in
Public Key Cryptography ’07, ser. LNCS, vol. 4450, 2007, pp. 233–
248.
[43]
J.-C. Faug`ere, M. S. E. Din, and P.-J. Spaenlehauer, “Gr¨obner bases
of bihomogeneous ideals generated by polynomials of bidegree (1, 1):
Algorithms and complexity,” J. Symb. Comput., vol. 46, no. 4, 2011,
pp. 406–437.
[44]
M. Bardet, J.-C. Faug`ere, and B. Salvy, “On the complexity of Gr¨obner
basis computation of semi-regular overdetermined algebraic equations,”
in ICPSS, 2004, pp. 71–75.
[45]
M. Bardet, J.-C. Faug`ere, B. Salvy, and B.-Y. Yang, “Asymptotic be-
haviour of the degree of regularity of semi-regular polynomial systems,”
in MEGA ’05, 2005.
[46]
R. Lidl and H. Niederreiter, Finite Fields.
Cambridge UP, 1997.
[47]
A. Braeken, C. Wolf, and B. Preneel, “A study of the security of
unbalanced oil and vinegar signature schemes.” in CT-RSA, ser. LNCS,
A. Menezes, Ed., vol. 3376.
Springer, 2005, pp. 29–43.
[48]
E. Thomae, “About the Security of Multivariate Quadratic Public Key
Schemes,” Ph.D. dissertation, Ruhr-University Bochum, 2013.
[49]
L. Budaghyan, C. Carlet, T. Helleseth, and A. Kholosha, “Generalized
bent functions and their relation to maiorana-mcfarland class.” in ISIT
’12.
IEEE, 2012, pp. 1212–1215.
166
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-376-6
SECURWARE 2014 : The Eighth International Conference on Emerging Security Information, Systems and Technologies

