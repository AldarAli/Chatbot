Self-Adaption of Quantum Key Distribution Devices to Changing Working Conditions
Sandra K¨onig
Safety & Security Department
Austrian Institute of Technology, Klagenfurt, Austria
Sandra.Koenig@ait.ac.at
Stefan Rass
Department of Applied Informatics, System Security Group
Universit¨at Klagenfurt, Universit¨atsstrasse 65-67
9020 Klagenfurt, Austria
stefan.rass@uni-klu.ac.at
Abstract—Quantum key distribution (QKD) draws security from
the ability to detect eavesdroppers upon the incident of “unnatu-
rally high” quantum bit error rates (QBER) during the protocol.
This presumes that a working QKD device implementation needs
to be calibrated with its own individual and characteristic channel
noise that is observed in any case, especially when there is no
eavesdropper. This natural noise level inﬂuences the idle QBER,
and is in turn dependent on the device’s working conditions. This
work describes a statistical approach to construct a model that
can be used to continuously compute the normal QBER, based
on current (and changing) working conditions. The model is thus
meant as a tool to reﬁne the theoretical QBER threshold speciﬁc
to the given QKD protocol, based on empirical data obtained
under the given environmental conditions. More importantly, it
allows the QKD-device to self-recalibrate under changing working
conditions.
Keywords–copula; estimation; quantum network; quantum de-
vices; statistics
I.
INTRODUCTION
The unique feature of quantum key distribution (QKD) is
its ability to detect passive eavesdropping. This remarkable
ability rests on a fundamental result of quantum physics that
rules out the possibility of creating a perfect copy of a single
photon [1]. Consequently, passive eavesdropping attempts will
unavoidably introduce errors on a quantum channel that would
otherwise deliver quantum bits (qubits, photons) under some
speciﬁc and characteristic channel noise and error frequency.
Recent experimental ﬁndings on the quantum key distri-
bution network demonstrated as the result of the EU project
SECOQC (summarized in [2]) raised the question of how
much environmental inﬂuences affect the “natural” quantum
bit (qubit) error rate (QBER) observed on a quantum line that
is not under eavesdropping attacks. A measurement sample
reported in [3] was used to gain ﬁrst insights in the problem,
but the deeper mechanisms of dependency between QBER
and the device’s working conditions have not been modeled
comprehensively up to now.
The desire of having a model that explains how the QBER
depends on environmental parameters like temperature, humid-
ity, radiation, etc. is motivated by the problem of ﬁnding a good
calibration of QKD devices, so that the channel performance
is maximized. Unfortunately, with the QBER being known
to depend on non-cryptographic parameters, it is difﬁcult to
give reasonable threshold ﬁgures that distinguish the natural
error level from that induced by a passive eavesdropping.
We spare the technical details on how a QBER threshold is
determined for a given QKD protocol here (that procedure is
speciﬁc for each known QKD protocol and implementation),
and focus our attention on a statistical approach to obtain a
model of interplay between the qubit error rate and various
environmental parameters.
To this end, we utilize a general tool of probability theory,
a copula function, to separate the parameter model (probabil-
ity distribution of a single environment parameter) from the
interdependency model (which is the copula function). In that
regard, we use Section II to refresh the reader’s memory on
copula theory to the extent required here to get to the point
where we can give effective methods to infer an expected qubit
error rate upon known external inﬂuence parameters.
More precisely, our work addresses the following problem:
given the current working conditions of a QKD device, what
would the natural qubit error rate be, whose transgression
would indicate the presence of an eavesdropper? The basic
intention behind this research is aiding practical implementa-
tions of QKD-enhanced networks, where our models provide a
statistically grounded help to react on changing environmental
conditions. The remainder of this work is structured as follows:
after theoretical groundwork in Section II, we move on by
showing how to use empirical data (measurements) drawn
from a given device to construct an interdependency model
that explains how the QBER and other variables mutually
depend on one another. Section IV then describes how to
single out the QBER from this overall dependency structure
towards computing the expected error rate from the remaining
variables. The concluding Section V summarizes the procedure
and provides ﬁnal remarks.
Related Work
Surprisingly, there seem to be only few publications paying
attention to statistical dependencies of cryptographic param-
eters and the working conditions of a real device, such as
[3], [4]. While most experimental implementations of QKD,
such as [2], [5]–[8] give quite a number of details on device
parameters, optimizations of these are mostly out of focus. An
interesting direction of research is towards becoming “device-
independent” [9], [10], which to some extent may relieve
issues of hacking detection facilities, yet leaves the problem
of optimal device conﬁguration nevertheless open. The idea of
self-adaptation is not new and has already seen applications
in the quantum world [11]–[13] including the concept of
copulas, applications of the latter to the end of self-adaption
remain a seemingly new ﬁeld of research. Copulas have been
successfully applied to various problems of explaining and
exploiting dependencies among various risk factors (related to
general system security [14], [15]), and the goal of this work
is taking ﬁrst steps in a study of their applicability in the yet
unexplored area of self-conﬁguring quantum devices.
1
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

II.
PRELIMINARIES AND NOTATION
We denote random variables by uppercase Latin letters
(X, Z, . . .), and let matrices be uppercase Greek or bold-
printed Latin letters (Σ, D, . . .). The symbol X ∼ F(x)
denotes the fact that the random variable X has the distribution
function F. For each such distribution, we let the correspond-
ing lower-case letter denote its density function, i.e., f in the
example case.
For self-containment of our presentation, we give a short
overview of the most essential facts about copulas that we are
going to use, as for a more detailed introduction we refer to
[16].
Deﬁnition II.1. A copula is a (n-dimensional) distribution
function C : [0, 1]n → [0, 1] with uniform marginal distri-
butions.
Especially, a copula satisﬁes the following properties:
Lemma II.1.
1)
For
every
u1, . . . , un
∈
[0, 1],
C(u1, . . . , un) = 0 if at least one of the arguments
is zero and
2)
C(u1, . . . , un) = ui if uj = 1 for all j ̸= i.
A family of copulas that leads to handy models in higher
dimensions is known as the family of Archimedean copulas,
of which many extensions exist.
Deﬁnition II.2. An Archimedean copula is determined by the
so called generator function φ(x) via
C(u1, . . . , un) = φ−1(φ(u1) + . . . + φ(un)).
(1)
The generator function φ : [0, 1] → [0, ∞] has to satisfy
φ(1) = 0 and φ(∞) = 0, furthermore, φ has to be n-
monotone, i.e., to be differentiable up to order n − 2 with
(−1)n−2φ(n−2)(t) being nondecreasing and convex and
(−1)iφ(i)(t) ≥ 0 for 0 ≤ i ≤ n − 2
for all t ∈ [0, ∞).
As one of the cornerstones in copula theory, Skl˚ars the-
orem connects these functions to the relationship between n
univariate distribution functions and their joint (multivariate)
distribution:
Proposition II.2. Let the random variables X1, . . . , Xn have
distribution functions F1, . . . , Fn respectively and let H be
their joint distribution function. Then there exists a copula C
such that
H(x1, . . . , xn) = C(F1(x1), . . . , Fn(xn))
for all xi, . . . , xn ∈ R.
If all the Fis are continuous, then the copula C is unique.
The usefulness of this result lies in the fact that the joint
distribution function of X1, . . . , Xn can be decomposed into n
univariate functions F1, . . . , Fn that describe the behaviour of
the individual variables and another component (namely the
function C) that describes the dependence structure, which
allows to model them independently.
Turning things around it is also possible to extract the
dependence structure from the marginal distributions Fi and
the joint distribution H via
C(u1, . . . , un) = H(F −1
1
(u1), . . . , F −1
n (un))
(2)
where F −1
i
(u) denotes the pseudo-inverse of Fi(x), which is
given by F −1
i
(u) = sup{x|Fi(x) ≤ u}. A special case of
this connection between Copula and random variables leads an
alternative characterization of independence, which is usually
written as H(x1, . . . , xn) = F1(x1) · . . . · Fn(xn).
Example II.3. If the (unique) copula from (2) turns out to
be the product copula C(u1, . . . , un) = u1 · . . . · un, then the
random variables X1, . . . , Xn are independent.
III.
A COPULA MODEL OF THE QKD NETWORK
A. Summary of the Data
A summary of the results obtained from an implemented
QKD network in Vienna [2] can be found in [4]. The following
quantities were measured and are used here (abbreviation
in brackets): qubit error rate in percentage terms (QBER),
air temperature (TEMP), relative humidity (HUM), sunshine
duration in seconds (DUR), global radiation in watt/m2(RAD).
Since we are here focusing on the relationship between
QBER and environmental quantities, we only use data that
were measured on the same device to avoid getting biased
results. The quantiles of our sample of size n = 276 are
displayed in Table I.
TABLE I. Quantiles of measured quantities
min
q0.25
median
q0.75
max
QBER
98.00
132.75
147.00
163.00
212.00
TEMP
117.00
134.75
148.00
163.00
184.00
HUM
71.00
80.00
84.00
91.00
93.00
DUR
0.00
0.00
0.00
0.00
600.00
RAD
0.00
0.00
0.00
146.00
539.00
Throughout the rest of the paper, let D denote the data
matrix that comprises the entirety of samples as a table whose
headings correspond to the row labels in Table I. Thus, the
matrix D is of shape (n×5) for our n = 276 samples, and has
entries (X1, . . . , X5) modeling the measurements of (QBER,
TEMP, HUM, DUR, RAD) as random variables.
B. Building up a Model
Mainly interested in the dependence structure, we do not
make explicit assumptions about the distributions of each
quantity but rather use their empirical distribution to transform
them into pseudo-observations U1, . . . , Un that are uniform
(0, 1)-distributed. A basic ﬁrst choice is to consider a mul-
tidimensional copula C that models the joint distribution H of
all the quantities via H(x1, . . . , xn) = C(U1, . . . , Un). Fitting
a copula is usually done by maximizing the log-likelihood
function
ℓ(x1, . . . , xn) = log [c (u1, . . . , un)] ,
with c denoting the density of the copula C. In a general set-
ting, this can easily become infeasible in our ﬁve-dimensional
case, so we ﬁrst choose a parametric family Cθ of copulas and
then seek the parameter θ that maximizes the one-dimensional
function
ℓ(θ) = log [cθ (u1, . . . , un)] .
2
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

QBER
120
140
160
180
0
200
400
600
100
140
180
120
140
160
180
TP
HUM
75
80
85
90
0
200
400
600
DUR
100
140
180
75
80
85
90
0
200
400
0
200
400
RAD
Figure 1. Pairwise correlations among variables
As for the parametric family, we ﬁrst choose the Gumbel
copula, which is generated by φ(t) = (− ln(t))θ, yielding
C(u1, . . . , un) = exp

−[(− ln(u1))θ + . . . + (− ln(un))θ]1/θ
.
A p-value of zero clearly shows that this model is not
describing the data properly.
The above model is simple to construct and to use but it
also has its weaknesses: ﬁrstly it describes the behaviour of
ﬁve random variables with just one number and secondly its
components are all exchangeable. Taking a closer look at the
pairwise correlations of the considered quantities (see Figure
1) shows that this exchangeability is not fulﬁlled in our case.
To take care of possibly different correlations among the
occurring variables, we consider a more ﬂexible model called
nested copulas (sometimes also called hierarchical copulas)
which is often used in ﬁnance, see for example [14]. The basic
idea of a nested copula model is to use several copulas at
different levels to describe the relation between the variables.
For clarity of such a hierarchically constructed probability
distribution, we use a graphical tree-notation like shown in
Figure 2 to “depict” the (otherwise complicated) distribution
function. To formally specify the latter, we introduce some
notational conventions: at each level ℓ ∈ 1, . . . , L (counting
bottom-up in the hierarchy tree) we have nℓ copulas, where
Cℓ,j, j ∈ 1, . . . , nℓ, is the j−th copula at level ℓ. Further,
every copula Cℓ,j has dimension dℓ,j that gives the number of
arguments ui that directly or indirectly enter this copula.
Two special cases are shown in Figure 2 for the four-
dimensional case: the fully nested copula which adds one
dimension at each step (left side) and a partially nested copula
where the number of copula decreases at each level (right side).
Formally, a fully nested copula is deﬁned by
●
u1
u2
u3
u4
θ = 21
θ = 11
θ = 31
●
u1
u2
u3
u4
θ = 11
θ = 12
θ = 21
Figure 2. Fully nested vs. partially nested copula
C(u1, . . . , un) =
φ−1
n−1[φn−1(. . . [φ2(φ−1
1 [φ1(u1) + φ1(u2)] + φ2(u3)]
+ . . . + φn−2(un−1)) + φn−1(un))],
(3)
where the occurring generator functions φ1, . . . , φn−1 may
come from different families of Archimedean copulas.
All in all, the dependence structure is determined by n−1
parameters (instead of just one as in the model above) and
there are n(n−1)
2
different bivariate margins.
The partially nested copula may be deﬁned similarly, for
reasons of clarity and comprehensibility we here give the
expression for n = 4, corresponding to the case shown in
the right side of Figure 2:
C(u1, u2, u3, u4) =φ−1
21 [φ21(φ−1
11 [φ11(u1) + φ11(u2)]
+ φ21(φ−1
12 [φ12(u3) + φ12(u4)])],
(4)
where the generator φij is from the jth copula on the ith level,
usually denoted by Cij.
Finding a suitable nested copula model may quickly be-
come laborious since one might have to check all possible
subsets of variables and compare the goodness of ﬁt of the
corresponding estimated copula. Handling this problem in R,
one may use the package HAC, introduced in [17]. In our case,
we ﬁnd that a suitable model consists of four two-dimensional
Gumbel copulas, which are deﬁned as follows:
Deﬁnition III.1. A Gumbel copula is an Archimedean copula
that is generated by
φ(t) = (− ln(t))θ
for θ ≥ 1.
In the two-dimensional case, the copula is explicitly given by
C(u, v) = exp

−

(− ln(u))θ + (− ln(v))θ
 1
θ 
(5)
for u, v ∈ [0, 1].
The dependence structure between the considered quanti-
ties is shown in Figure 3.
It is known that in a nested copula model with a Gumbel
generator the parameters have to decrease with the level (see
[14] for fully nested copulas and [18] for the general case).
3
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

QBER
HUM
TEMP
RAD
DUR
θ = 5.79
θ = 2.58
θ = 3.54
θ = 1.6
Figure 3. Dependence structure for HAC model
Since in our case the parameters on the upper levels are rather
close, we consider a modiﬁcation of this model by allowing to
aggregate Copulas whose parameters do not differ too much.
A justiﬁcation for this approach is the close relation between
the parameter θ of the generator and Kendall’s tau τ, which is
connected to copulas via
τ = 4

[0,1]2 C(u, v)dC(u, v) − 1.
(6)
For Archimedean copulas with generator function φ(t), it was
shown in [16] that (6) simpliﬁes to
τ = 1 + 4
 1
0
φ(t)
φ′(t)dt,
(7)
which for the Gumbel copula leads to
τ = 1 − 4
 1
0
(− log(t))θ · t
θ(− log(t))θ−1 dt
= 1 − 1
θ.
Hence if the parameters of two subsequent copulas are close,
so is their dependence when characterized through Kendall’s
τ and it might be beneﬁcial to model the affected variables
with only one copula.
In order to get an impression on how suitable each of the
above models is, we adapted the bootstrapping goodness of ﬁt
test [19] that was used in the case of a one-parametric copula
to the estimation of nested copulas.
In our ﬁrst 200 trial tests, each of which with a sample size
of N = 1000 and a conﬁdence level of 0.95, we never got a
positive p-value if the tolerance is set to zero. When copulas
are allowed to be aggregated, a p-value of 0.014 was found
once, which still leads to rejection of the null hypothesis that
the data at hand are drawn from a distribution given through
this copula. This indicates that some preconditioning of the
data matrix might be necessary to get a good ﬁt. One solution
for such a preprocessing is described in the next Section.
C. Preconditioning Towards Better Fits
As indicated by our quantum network data, it may oc-
casionally be the case that none of the tried copula-models
models the data satisfactorily. More precisely, existing software
packages for copula ﬁtting (such as HAC in R) assume positive
correlations between all variables of interest. Unfortunately,
our experimental QKD prototype supplied data exhibiting
negative correlations amongst some of the observed variables.
In order to ﬁx this, we can apply a linear transformation M
to the data matrix D in order to make all pairwise correlations
in the transformed data matrix M · D strictly positive. To this
end, consider the Cholesky-decomposition of the covariance
matrix Σ of the data D, given as Σ = LT · L = LT · I · L. By
the linearity properties of covariance, it is easy to check that
the covariance matrix of D·L−1 is the identity matrix, having
zero-correlations among all pairwise distinct variables. It is
then a simple matter of multiplication with another invertible
matrix (with low condition number to avoid numerical round-
off-errors in the inverse transform) with all strictly positive
entries to artiﬁcially introduce positive correlations, as required
in the copula ﬁtting process. Given such a matrix A, the ﬁnal
linear transformation takes the form D′ := D · (L−1 · A),
thus our pre-conditioning transformation matrix is M := L−1·
A, where L comes out of the Cholesky decomposition of the
original covariance matrix Σ, and A can be chosen freely,
subject to only positive entries and good condition number
(for numerically stable invertibility).
In our experiments, we used a bootstrap ﬁtting with tol-
erance ε = 0.4. We constructed A as a 5 × 5-matrix having
Gamma-distributed entries (with shape-parameter 5 and scale-
parameter 1/2). In 5 out of 200 trials, the p-value after pre-
conditioning with M = L−1A was larger than 0.05. The best
ﬁt giving p = 0.613 was obtained under the transformation
coefﬁcients (rounded to three decimals after the comma)
M =
⎛
⎜
⎜
⎜
⎝
0.122
4.444
0.378
1.634
4.384
0.650
0.870
1.321
0.941
2.293
0.606
3.326
0.763
2.172
2.102
2.534
0.415
2.055
1.969
1.659
2.668
2.031
3.590
2.241
1.015
⎞
⎟
⎟
⎟
⎠ ,
whose condition number is ∥M∥2 · ∥M−1∥2 ≈ 24.4945, and
determinant given as det(M) ≈ 29, thus indicating good
numerical stability for the inverse transformation.
In a second run of 200 experiments, we lowered the
tolerance ε = 0, and did the preconditioning as before.
This time, we got 20 out of 200 trials with a positive p-
value, although only in three cases, our ﬁt was accepted at
p > 0.05. The best ﬁt was obtained at p = 0.536, showing
that the preconditioning works equally well with more complex
hierarchical structures due to lower tolerance levels.
This transformation is applied before the copula ﬁt, and
must be carried through the derivation of predictive densities
when obtaining a ﬁt. We omit the simple and obvious changes
to the upcoming formulas for simplicity, bearing in mind
that actually a linearly transformed version of the data is
under investigation, calling for the linear transformation to be
inverted for predictions.
As an open issue, however, it remains interesting to ﬁnd
better ways than simple try-and-error to ﬁnd a preconditioning
matrix A that gives better ﬁts than the plain data would do.
Moreover, we believe that this trick may be of independent
interest and use in other applications of copula theory, not
limited to statistical descriptions of quantum key distribution
devices.
4
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

IV.
PREDICTION OF QBER RATES
Based on a model that describes the relationship between
QBER and the environmental quantities, we look for a pre-
diction of the QBER when all the other quantities are known.
Having an idea of what values are to be expected, one might
suspect an adversary to be present if these values are clearly
exceeded. An essential ingredient to ﬁnd a prediction is the
conditional density, as it shows which values are likely in
a given situation, that is, we seek the density of QBER
conditional on all the other environmental parameters, i.e., the
function
f(QBER|TEMP, HUM, DUR, RAD).
Section IV-A describes the general technique to compute the
sought density, taking QBER as the n-th variable xn in the
upcoming descriptions. We stress that, however, the method
is equivalently applicable to predict any other variable than
QBER, too.
A. Computing Conditional Densities via Copulas
In the case where all the marginals and the copula are con-
tinuous, it holds for the transformed variables ui = F −1
i
(xi)
by the independence of copula and margins that
f(x1, . . . , xn) = f1(x1) · . . . · fn(xn) · cn(u1, . . . , un),
where cn(u1, . . . , un) denotes the density of the n-dimensional
copula Cn(u1, . . . , un) and fi denotes the density of the
marginal distribution Fi.
Example IV.1. In the case of independent random variables,
the above formula yields cn(u1, . . . , un) = 1, which is the
derivative of the independence copula Cn(u1, . . . , un) =
u1 · · · un from Example II.3.
With this decomposition, the conditional density comes to
f(xn|x1, . . . , xn−1) = fn(xn)
cn(u1, . . . , un)
cn−1(u1, . . . , un−1)
(8)
for
ui
=
Fi(xi).
Using
(8)
to
compute
the
condi-
tional density requires the lower-dimensional copula density
cn−1(u1, . . . , un−1), excluding the variable un (corresponding
to the variable xn of interest). So, computing the conditional
density (8) from our full n-dimensional copula model proceeds
as follows: let the variable xi range within [xi, xi], then the
(n − 1)-dimensional marginal density is
f(x1, . . . , xn−1) =
 xn
xn
f(x1, . . . , xn)dxn
=
 xn
xn
n

j=1
fj(xj)cn(F1(x1), . . . , Fn(xn))dxn
= [Δ(xn) − Δ(xn)] ·
n−1

j=1
fj(xj)
with
Δ(x) :=
∂n−1
∂x1 · · · ∂xn−1
Cn(F1(x1), . . . , Fn−1(xn−1), Fn(x))
From this, the sought conditional distribution is immediately
found as
f(xn|x1, . . . , xn−1) = fn(xn)cn(F1(x1), . . . , Fn(xn))
Δ(xn) − Δ(xn)
(9)
Note that the density fn of the variable of interest can
be estimated both parametrical or non-parametrical (e.g., via
kernel estimators) while in practice the distribution functions
are estimated empirically to avoid additional assumptions.
In a general setting, we ﬁrst compute the copula density
(if the copula at hand is differentiable), whose tedious tech-
nicalities may conveniently be handled by a computer algebra
system like MATHEMATICA or MAPLE. Again, this procedure
simpliﬁes within a smaller family of copulas.
For a n-dimensional Archimedean copula, the density turns
out to be
c(u1, . . . , un) = (φ−1)(n)(φ(u1) + . . . + φ(un))
n

i=1
φ′(ui)
where (φ−1)(n)(t) denotes the n-th derivative of the inverse
function φ−1(t). This can be computed for Gumbel, Frank
and Ali-Mikhael-Haq copulas, as for example done in [20],
but becomes infeasible for the Gaussian copula considered at
the beginning.
In the case of a nested copula, there is no simple closed
expression available. One has to compute the derivative of the
top level copula that describes the behaviour of all variables
together which invokes the chain rule. While this may get
complex in the general case, it is still practicable in our case.
In models that involve more levels of sub-copulas than
the one considered here, one might use the derivative of
CL,1(CL−1,1, . . . , CL−1,nL−1) that evaluates to
∂dCL,1
∂u1 · · · ∂ud
=
d−nL−1

i=0

k1,...,knL−1

∂d−iCL,1
∂Ck1
L−1,1 · · · ∂C
knL−1
L−1,nL−1
×
nL−1

r=1

v1,...,vkr
∂|v1|CL−1,r
∂v1
· · · ∂|vkr |CL−1,r
∂vkr

where the outer sum is taken over all integers k1, . . . , knL−1
that sum up to d − i and satisfy kj ≤ dL−1,j while the inner
sum is over partitions v1, . . . , vkr of those ui showing up in
the r-th copula at level L − 1. For more details about this
speciﬁc case, see [18].
B. Self-Adaptation to Environmental Conditions
For a general description, we relabel the variables and
let Xn be the device or performance parameter that we
wish to predict based on the known environmental conditions
x1, . . . , xn−1. Section IV-C illustrates this for Xn = QBER
and (X1, X2, X3, X4) = (DUR, RAD, TEMP, HUM).
A prediction of Xn, e.g., the QBER rate given the current
environmental conditions, is then given by the conditional
expectation or, alternatively, by any value xn that maximizes
expression (9) for f(xn|x1, . . . , xn−1) for the given values
x1, . . . , xn−1. This maximization can be done using standard
numerical techniques, whose details are outside our scope here.
Since the indication of an adversary’s presence hinges
on known performance characteristics, most importantly the
QBER rate, it is easy to adapt the respective thresholds to the
expected values under the current environmental conditions.
Adapting to different conditions then amounts to doing the
optimization again under the new conﬁguration.
5
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

C. A Worked Example
The density c(u1, . . . , u5) of the top level copula CL,1 can
be calculated by applying the chin rule. To avoid errors in
potentially messy calculations like the following, a computer
algebra system may become handy.
The copula C describing our network was found to be
exp
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩
−
⎡
⎢⎢⎢⎢⎢⎣

(− ln u1)θ2 + (− ln u2)θ2 θ1
θ2 +
⎡
⎣

(− ln u3)θ4 + (− ln u4)θ4 θ3
θ4 +
(− ln u5)θ3
⎤
⎦
θ1
θ3
⎤
⎥⎥⎥⎥⎥⎦
1/θ1⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎭
(10)
Generally, it holds
∂5C3,1
∂u1 · · · ∂u5
=
∂5C3,1
∂2C2,1∂3C2,2
· ∂2C2,1
∂u1∂u2
·
∂3C2,2
∂2C1,1∂u5
· ∂2C1,1
∂u3∂u4
,
where the two most inner derivatives compute as
∂2C
∂u1∂u2
=
1
u1 · u2
(log(u1) · log(u2))θ−1
· exp

−

(− log(u1))θ + (− log(u2))θ
 1
θ 
·

(− log(u1))θ + (− log(u2))θ
 1
θ −2
·
 "
(− log(u1))θ + (− log(u2))θ# 1
θ + θ − 1

(11)
for any two-dimensional Gumbel copula C. Alternatively to
this straightforward calculation, the two-dimensional density
(11) can be computed directly from the generator function
using the chain rule
c(u1, u2) =
∂2
∂u1∂u2
φ−1(φ(u1) + φ(u2))
= −φ′′(C(u1, u2))φ′(u1)φ′(u2)
[φ′(C(u1, u2))]3
(12)
if both derivatives exist (see also [16]).
To ﬁnd the expression for Δ(x) we analogously compute
∂4C3,1
∂1C2,1∂3C2,2
· ∂1C2,1
∂u2
·
∂3C2,2
∂2C1,1∂u5
· ∂2C1,1
∂u3∂u4
(13)
with the third order derivative of a Gumbel copula
∂3C
∂u1∂u2∂u3
= (− log(u1) · log(u2) · log(u3))θ−1
u1 · u2 · u3
· exp
$
−z
1
θ
%
·

z3/θ−3 + 3(θ − 1) · z2/θ−3 + (θ − 1)(2θ − 1)z1/θ−3

(14)
where z = (− log(u1))θ+(− log(u2))θ+(− log(u3))θ. Again,
this density can be computed from the generator function
directly if all necessary derivatives exist, yielding
∂3
∂u1∂u2∂u3
φ−1 (φ(u1) + φ(u2) + φ(u3))
= φ′(u1)φ′(u2)φ′(u3)3[φ′′(C)]2 − φ′′′(C) · φ′(C)
[φ′(C)]5
(15)
1.0
1.2
1.4
1.6
1.8
2.0
0
5
10
15
QBER in a given environment
QBER
conditional density
Figure 4. Density of QBER in a known environment
with the abbreviation φ(C) = φ(C(u1, u2, u3)).
For the quantum network considered here, the conditional
density of the QBER displayed in Figure 4 displays a unique
maximum of the conditional density around QBER = 1.61%,
given typical environmental conditions that represent the cur-
rent situation: sunshine duration DUR = 0s, global radiation
RAD = 0W/m2, relative humidity HUM = 88%, and air
temperature TEMP = 14.4◦C. This means that QBER-values
lower than 1.14% or higher then 2.07% are unlikely (i.e., these
regions have a probability mass of 5% together) and probably
arising from the presence of an eavesdropper.
Our analysis has been performed for typical values of the
environmental variables, i.e., we set the variable DUR to zero
as the sun did typically not shine during the measurement
process. Variation of these values does not fundamentally
affect out ﬁndings as the shape ot the conditional density does
not change signifﬁcantly.
V.
CONCLUSION
Now, we come back to the initial problem that motivated
this entire study. Recall that in a QKD setting, an unnaturally
high qubit error rate indicates the presence of an adversary.
Conversely, we need an idea about the “natural” rate of qubit
errors. Given the conditional density (8) and according to
the previous remarks, we can thus obtain a threshold for
the qubit error rate that is tailored to the implementation,
environment and device, and which can be adapted to changing
environmental conditions. The steps are the following:
1)
We run the device in a setting where there is no
eavesdropper on the line to draw a series of measure-
ments under clean conditions. In particular, we elicit
all environmental variables of interest, especially the
qubit error rate.
2)
We ﬁt a copula model to the so-obtained data D,
possibly doing a pre-conditioning (as described in
Section III-C) for a statistically and numerically good
ﬁt. The ﬁtting can be done using standard statistical
software like R, using copula-speciﬁc libraries like
HAC [17]. The derivation of the conditional distribu-
tion is easy by virtue of computer algebra systems
like MATHEMATICA.
6
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

3)
Having the copula-model, we obtain the conditional
distribution (9) of the QBER under all environmental
inﬂuences. Its maximization gives the currently valid
threshold under the present environmental conditions.
Speaking differently, this process tells us which val-
ues of the QBER are not likely enough to occur for
a given value of the keyrate.
The respective details of each step have been described in
previous Sections, giving examples along the way to illustrate
the particular tasks. Nevertheless, the above process remains
of generic nature and calls for appropriate instantiation (e.g.,
different environmental inﬂuences such as noisy source and
detectors or turbulence structure of the air could be consid-
ered).
Once the probability density of the QBER conditional on
current working conditions is obtained, it is a simple matter
to equip a QKD device with sensory to keep the expected
natural QBER rate continuously updated. We stress that this
updating is unaffected by the presence of an attacker, unless
the intruder manages to steer the environmental conditions in
a way s/he likes. Assuming the absence of such an ability,
the copula dependency model and its implied predictive dis-
tributions are an effective mean to let the devices re-calibrate
themselves under the changing working conditions. Next steps
in this research direction comprise practical experiments under
variable lab conditions to test the quality of QBER adaption in
terms of a performance gain over statically conﬁgured devices.
As an important side-effect, this would also reveal possibilities
to attack a QKD line by changing environmental factors. Such
an attack has seemingly not been considered in the literature
so far.
REFERENCES
[1]
W. K. Wootters and W. H. Zurek, “A single quantum cannot be cloned,”
Nature, vol. 299, no. 802, 1982, pp. 802–803.
[2]
Peev et al., “The SECOQC quantum key distribution network in
Vienna,” New Journal of Physics, vol. 11, no. 7, 2009, p. 075001.
[3]
K. Lessiak, C. Kollmitzer, S. Schauer, J. Pilz, and S. Rass, “Statistical
analysis of QKD networks in real-life environments,” in Proceedings
of the Third International Conference on Quantum, Nano and Micro
Technologies.
IEEE Computer Society, February 2009, pp. 109–114.
[4]
K. Lessiak, “Application of generalized linear (mixed) models and
nonparametric regression models for the analysis of QKD networks,”
Master’s thesis, Universit¨at Klagenfurt, 2010.
[5]
T. Schmitt-Manderbach, “Long distance free-space quantum key distri-
bution,” Ph.D. dissertation, Ludwig–Maximilians–University Munich,
Faculty of Physics, 2007.
[6]
H. Xu, L. Ma, A. Mink, B. Hershman, and X. Tang, “1310-nm quantum
key distribution system with up-conversion pump wavelength at 1550
nm,” Optics Express, vol. 15, Jun. 2007, pp. 7247–7260.
[7]
M. Li et al., “Measurement-device-independent quantum key distribu-
tion with modiﬁed coherent state,” Opt. Lett., vol. 39, no. 4, Feb 2014,
pp. 880–883.
[8]
P.
Jouguet,
S.
Kunz-Jacques,
A.
Leverrier,
P.
Grangier,
and
E.
Diamanti,
“Experimental
demonstration
of
long-
distance
continuous-variable
quantum
key
distribution,”
Nature
Photonics,
no.
5,
2013,
pp.
378–381.
[Online].
Available:
http://www.nature.com/nphoton/journal/v7/n5/full/nphoton.2013.63.html
[retrieved: September, 2014]
[9]
A. Ac´ın, N. Brunner, N. Gisin, S. Massar, S. Pironio, and V. Scarani,
“Device-independent security of quantum cryptography against collec-
tive attacks,” Physical Review Letters, vol. PRL 98, 230501, no. 1–4,
2007.
[10]
Y. Liu et al., “Experimental measurement-device-independent quantum
key distribution,” Phys. Rev. Lett., vol. 111, no. 13, 2013, p. 130502.
[Online]. Available: http://www.biomedsearch.com/nih/Experimental-
Measurement-Device-Independent-Quantum/24116758.html [retrieved:
September 2014]
[11]
C. Ruican, M. Udrescu, L. Prodan, and M. Vladutiu, “Adaptive vs.
self-adaptive parameters for evolving quantum circuits,” in Evolvable
Systems: From Biology to Hardware, ser. Lecture Notes in Computer
Science, G. Tempesti, A. Tyrrell, and J. Miller, Eds.
Springer Berlin
Heidelberg, 2010, vol. 6274, pp. 348–359.
[12]
C.-J. Lin, C.-H. Chen, and C.-Y. Lee, “A self-adaptive quantum radial
basis function network for classiﬁcation applications,” in Proc. of
International Joint Conference on Neural Networks, Vol. 4.
IEEE,
July 2004, pp. 3263–3268.
[13]
A. M. Al-Adilee and O. N´an´asiov´a, “Copula and s-map on a quantum
logic.” Inf. Sci., vol. 179, no. 24, 2009, pp. 4199–4207.
[14]
P. Embrechts, F. Lindskog, and A. McNeil, Modelling Dependence with
Copulas and Applications to Risk Management, Handbook of Heavy
Tailed Distributions in Finance, Elsevier, 2001.
[15]
D. Kelly, “Using copulas to model dependence in simulation risk assess-
ment,” in Proc. of 2007 ASME International Mechanical Engineering
Congress and Exposition. American Society of Mechanical Engineers,
2007, pp. 81–89.
[16]
R. Nelsen, An Introuction to Copulas.
Springer, 2006.
[17]
O.
Okhrin
and
A.
Ristig,
“Hierarchical
archimedean
copulae:
The
HAC
package,”
Journal
of
Statistical
Software,
vol.
58,
no. 4, 2014, pp. 1–20. [Online]. Available: http://sfb649.wiwi.hu-
berlin.de/papers/pdf/SFB649DP2012-036.pdf
[retrieved:
September,
2014]
[18]
C. Savu and M. Trede, “Hierarchies of Archimedean copulas,” Quanti-
tative Finance, vol. 10, no. 3, February 2010, pp. 295–304.
[19]
C. Genest and B. R´emillard, “Validity of the parametric bootstrap for
goodness-of-ﬁt testing in semiparametric models,” Annales de l’institut
Henri Poincar´e (B) Probabilit´es et Statistiques, vol. 44, no. 6, 2008, pp.
1096–1127. [Online]. Available: http://eudml.org/doc/78005 [retrieved:
September, 2014]
[20]
C. Savu and M. Trede, “Goodness-of-ﬁt tests parametric families of
Archimedean copulas,” Quantitative Finance, vol. 8, no. 2, March 2008,
pp. 109–116.
7
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-380-3
ICQNM 2014 : The Eighth International Conference on Quantum, Nano/Bio, and Micro Technologies

