Cooperative c-Marking Agents for the Foraging Problem 
 
Ouarda Zedadra, Hamid Seridi  
Science and Technology of Information and 
Communication Laboratory (LabSTIC) 
8 May 1945 University  
Guelma 24000, Algeria 
{zedadra_nawel1, seridihamid}@yahoo.fr 
 
Nicolas Jouandeau 
Advanced Computing Laboratory of Saint-Denis 
(LIASD) 
Paris 8 University 
Saint Denis 93526, France 
n@ai.univ-paris8.fr  
 
 
 
Abstract— We consider the problem of foraging with multiple 
agents, in which agents must collect disseminate resources in 
an unknown and complex environment. So far, reactive multi-
agent systems have been proposed, where agents can perform 
simultaneously exploration and path planning. In this work, 
we aim to decrease exploration and foraging time by increasing 
the level of cooperation between agents; to this end, we present 
in this paper a novel pheromone modeling in which 
pheromone’s propagation and evaporation are managed by 
agents. As in c-marking agents, our agents are provided with 
very 
limited 
perceptions, 
and 
they 
can 
mark 
their 
environment. 
Simulation 
results 
demonstrate 
that 
the 
proposed model outperforms the c-marking agent-based 
systems in a foraging mission.  
Keywords- reactive agents; foraging task; digital pheromone; 
APF construction  
I. 
 INTRODUCTION  
Foraging is a task that lends to multi-robots systems that 
can beat single robot systems in such a task. On the other 
side, the possible profit of multi-robots systems is 
conditioned by the level of cooperation [2]. Swarm 
intelligence is the study of collective complex and intelligent 
behaviors observed in natural systems where global swarm 
behaviors emerge as a result of local interactions between 
agents and global interactions between agents and 
environment [3]. Foraging is, therefore, a benchmark 
problem within swarm robotics [4]. A particularly interesting 
situation problem is when foraging robots have no a priori 
information about the locations of objects in unknown and 
complex environment. As wider searching spaces need more 
scalable and reliable solutions, distributed cooperative multi-
robots systems are much adopted to achieve foraging 
missions. 
Synthetic pheromones are one of the most popular swarm 
techniques that provide interesting solutions to problems 
such foraging [5]; most of these solutions create local 
minima that can lead the multi-robots system to fail. In [1], a 
pheromone is modeled as a static piece dropped and picked 
up by agents. The cooperation between agents is managed 
with the c-marking agents’ algorithm. The pheromone has no 
propagation properties, that is minimizing the level of 
cooperation between agents. This hypothesis is very 
promising to achieve rapidly tasks such as foraging [6].      
This paper presents a novel pheromone modeling that 
aims at increasing the level of cooperation between agents to 
achieve rapidly the foraging task. To this end, we present in 
this paper, a new behavioral model and an extension version 
of the c-marking agents’ algorithm. This new behavioral 
model handles specific situations such as the presence of two 
resources in neighboring cells. Through simulation tests, the 
system is compared with the original one [1] in terms of the 
number of iterations required for achieving the foraging task. 
The rest of paper is organized as follows. In Section 2, 
we discuss related works. A new pheromone modeling, 
behavioral model and extended algorithm (cooperative c-
marking agent algorithm) are given in Section 3. Section 4 
describes the simulation environment and an experimental 
comparison between the original c-marking and c-marking 
enhanced algorithm. Section 5 concludes our research. 
II. 
RELATED WORK (PHEROMONE BASED TECHNIQUES 
FOR FORAGING) 
Foraging is a benchmark problem for robotics, especially 
for multi robot systems [2]. It is the act of searching for any 
objects and collecting them at a storage point which is called 
base. Ostergaard et al. define it as “a two-step repetitive 
process in which (1) robots search a designated region of 
space for certain objects, and (2) once found these objects 
are brought to a goal region using some form of navigation” 
[7]. 
A wide range of approaches has been adopted to suggest 
solutions to the foraging problem in unknown environments. 
Most of them focus on examples of multi-robot foraging 
from within the field of swarm robotics. Three strategies for 
cooperation very known in this field are: information sharing 
[8], physical cooperation, which can be a cooperative 
grabbing [9][10], or a cooperative transport [11][12][13]. In 
multi-robot foraging it is well know that overall performance 
does not increase with increasing team size [14][15][16], 
division of labor in ant colonies has been well studied and 
there was a proposition of threshold model [17][18], some 
other works concentrate on individual adaptation and 
division of labor in ants that allow a swarm of robots to self-
organize [19][20][21]. Pheromone based techniques inspired 
from ants are used for foraging with robots [22][23][24], 
where agents drop a quantity of pheromones in their 
environment in order to build gradients from sources to the 
158
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

base. This approach has some drawbacks, such as the 
computation of propagation and evaporation dynamics, and 
each agent needs specific mechanisms or materials that allow 
him to get back home. Panait and Luke [5] and Resnick [24] 
propose the use of a second pheromone diffusion from the 
base in order to avoid this last problem. In the same time, 
this solution can create new local minima.   
An original approach has been proposed in [1] that 
allows agents to build optimal paths for foraging using only 
reactive agents, which have limited information about their 
environment. To keep track of the sources found and to build 
trails between sources and the base, agents drop a quantity of 
pheromones in their environment. 
In this paper, we present a novel extension of the c-
marking agents’ algorithm, in order to increase the level of 
cooperation between agents. 
III. 
COOPERATIVE C-MARKING AGENTS 
The proposed multi agents system has the same 
properties of agents defined in [1]; the system is defined as a 
set of objects, which are static obstacles, sources and other 
agents, sources have fixed positions and agents are moving 
in the environment to achieve their own task: 
A. The pheromone model 
Two kinds of the pheromone’s model are used in most of 
the works cited above. The first one integrates the 
management of the two modules propagation and 
evaporation in the pheromone, which is a complex task that 
causes in some cases building of local minima, the second 
one use the pheromone as a piece that does not propagate in 
the environment, and that can be picked up by agents when 
all is finished.  
The proposed pheromones’ model combines between the 
two properties cited before, thus the pheromone is 
considered as a piece that can be dropped and picked up by 
the agent, it has propagation and evaporation properties that 
are managed by the agent. The agent will creates a maximal 
trail (deposits a diffusible pheromone), if the quantity of 
resources is important for more attraction and recruitment of 
agents to the trails. If the quantity of resources is (or 
becomes) less than a fixed minimum quantity; the agent 
creates a minimal trail (deposits a non-diffusible pheromone) 
to avoid the attraction of other agents. This new modeling is 
shown by figure 1. 
 
 
 
 
 
 
 
 
 
 
 
 
 
The fact that the pheromone is managed by the agents 
(dropped, picked, propagated and evaporated); there will be 
no doubt that a non-operational trails steel existing between 
the base and an exhausted source.    
B. The environment model 
The environment is modeled as a squared grid with 
variable size that have resources in multiple locations, these 
locations are scattered randomly, and they are unknown by 
the agents; each location has a given quantity of resources. 
Cells in the environment can: 
 
Be an obstacle (grey color); 
 
Contain a resource (green color) with a limited 
quantity Q max 
 
Be the base (red color), positioned in all simulations 
in the environment’s center, and form the start point 
of all the agents; 
 
Contain an agent 
C. The agent model 
Agents 
have 
limited 
information 
about 
their 
environment; they occupy a cell, and each agent can: 
 
Move from a cell to another, which is not an 
obstacle in the four direction; 
 
Read and write values in the current cell; 
 
Perceive and read the values of the four neighboring 
cells, so he can detect resources, and he can load a 
quantity of resources according to Qtemax.  
 
Increasing the level of cooperation between agents, and 
dealing with specific situations such as the two resource 
neighboring cells, can decrease dramatically the time of 
foraging. To achieve those goals, we address the new agent’s 
behavior given by Figure 2 (Cooperative c-marking agents) 
and the enhanced algorithm corresponding to cooperative c-
marking agents is given by the algorithm (extension of the c-
marking agents) bellow:  
Algorithm 1: Cooperative c-marking agents 
SEARCH & CLIMB (Simonin & al, 2010) 
If a resource is detected in a neighboring cell THEN  
        move into that cell and execute LOADING 
ELSE IF neighboring cells are colored and different from the 
previous position THEN  move to highest-valued such cell,  
ELSE execute EXPLORATION & APF CONSTRUCTION  
 
LOADING 
Pick up a quantity Qtemax of resource ; 
IF the cell is not exhausted of resources THEN  
  IF Qcell > = Qmax  THEN   
    IF the cell is colored THEN execute RETURN TO BASE 
    ELSE execute RETURN & COLOR MAX TRAIL 
   ELSE IF Qcell  = Qmin  THEN 
         IF the cell is colored THEN execute RETURN &  
                                            ERASE MAX TRAIL 
         ELSE execute RETURN & MIN TRAIL 
    ELSE IF Qcell  <  Qmin  THEN 
        IF the cell is colored  THEN execute RETURN TO  
Diffusible pheromone 
Non diffusible pheromone 
Desperation of pheromone 
Dropped by robot/    [Qcell > Qmax] 
Picked up by robot/    [Qcell = 0] 
Excited by robot/    [Qcell < Qmin] 
> 
<   Excited by robot/    [Qcell > Qmax]       
Evaporation 
Propagation 
Total evaporation 
Figure 1.  Pheromone modeling 
(1) 
159
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

                                                              BASE  
        ELSE execute RETURN & COLOR MIN TRAIL  
 
ELSE IF the cell is exhausted THEN  
       IF (resource found in neighboring cells) and (exist trail)  
                THEN 
                 Color current cell with trail color 
                IF  Qcell > = Qmax  THEN  color the 4 neighboring 
                    cells with light gray color and execute  
                      RETURN TO BASE 
               ELSE IF Qcell  <=  Qmin  THEN execute RETURN 
                                                                             TO BASE 
    ELSE IF (resource found in neighboring cells) and (not  
         exist trail) THEN execute (1) 
      ELSE IF the cell is colored THEN execute RETURN &  
                                   ERASE MIN TRAIL                                                                                  
      ELSE execute RETURN TO BASE ;     
      
RETURN & COLOR MAX TRAIL    
IF the base is reached THEN  
              unload resource and execute SEARCH & CLIMB 
ELSE move to a new neighboring cell with the least value      
   Color the current cell in a trail color -dark gray color- (it  
   will be propagates to the 4 neighboring cells with another 
   color trail –light gray color-); 
 
RETURN & COLOR MIN TRAIL (Simonin & al, 2010)    
IF the base is reached THEN  
               unload resource and execute SEACH & CLIMB 
ELSE  move to a new neighboring cell with the least value 
 Color the that cell in a trail color; 
 
RETURN & ERASE MAX TRAIL 
IF the agent is located at base THEN UNLOAD resource & 
execute SEARCH & CLIMB 
ELSE Move to a neighboring colored cell with the least value  
Erase the color of the 4 neighboring cells to the default color; 
 
RETURN & ERASE MIN TRAIL 
IF the base is reached THEN UNLOAD resource & execute 
SEARCH & CLIMB 
ELSE IF the number of colored neighboring cells >=2 THEN 
execute RETURN TO BASE  
Else IF there is a colored cell with least value THEN  
     move to it & erase the color to the default one.  
 
RETURN TO BASE 
If the base is reached THEN UNLOAD resource and execute 
SEARCH & CLIMB 
ELSE IF there is a neighboring colored cell with min value THEN 
move to it and UPDATE VALUE 
ELSE move to a cell with min value & UPDATE VALUE                                                                                                        
 
In the foraging system shown in Figure 2, each robot 
search resource in a pseudo random walk, and then it brings 
the discovered resources to the base. In its way, the robot 
creates paths to keep track of resources found, and to attract 
more robots to the discovered resource cell. Paths are of two 
kinds; max trails, which are formed by a diffusible digital 
pheromones (i.e. these are larger paths, and they are 
diffusible to the four neighboring cells), and min trails, 
which are formed by a non-diffusible pheromones. The robot 
follows the following rules according to the quantity of 
resources: 
 
If the quantity of resources is greater than a quantity 
max and there is no trail the robot drops diffusible 
pheromones (creation of max trails), else he climbs 
the existing trail; 
 
If the quantity is equal to a quantity min and there is 
a trail then the agent will climb it and erase the max 
trail to avoid the attraction of other robots, else if 
there is no trail, the robot will return and color min 
trail; 
 
If the quantity is less than a quantity min, and there 
is a trail then the robot climbs it else it creates a min 
trail.  
 
If the base is reached, the robot unloads resources 
and chooses between climb an existing trail and 
searching for a resource. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
IV. 
SIMULATION RESULTS AND COMPARAISON 
According to the simulation results, we compared the 
proposed system with the original foraging system for 
verifying its effectiveness. The c-marking agent system 
offers a small level of cooperation between agents, whereas 
the ameliorated system offers a great level of cooperation, 
which decreases the foraging time. 
We tested with square environments (grid with variable 
size); obstacles and resource locations are disseminated 
Figure 2.  Cooperative c-marking agent behavior 
Base reached 
Trail  
no trail 
Retur
n to 
base 
Activate 
pheromone 
propagation & 
Return to base 
Return 
to base 
LOADING 
SEARCH & CLIMB 
UNLOAD 
Resource found 
trail 
Q<Q
min 
Q> Q
max 
Exhausted 
Resource not exhausted 
Q=Q
min 
Return 
& 
color 
min 
trail 
Return 
& color 
max 
trail 
no trail  
Return 
& 
erase 
max 
trail 
Trail 
no trail  
Trail 
Color current cell 
Q> Q
max 
Q<=Q
min 
Resource found 
no resource 
(1) 
Return 
to base 
Return 
& erase 
min trail 
no trail 
Trail  
 
(1) 
160
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

0
2000
4000
6000
8000
10000
12000
5
10
20
40
80
160
Effect of Agents Number on Performance 
Number of agents 
Number of iteartions 
0
2000
4000
6000
8000
10000
12000
12*12
25*25
50*50
100*100
Effect of the environment's size on 
performance 
Environment size 
Number of iterations 
randomly in the environment, and all the agents start from 
the center (base).  Several setups were used to test the model: 
Setup 1 is defined as follows: 
 
An environment with 40 X 40 cells, 30% obstacles 
and 20 cells are resource locations; each resource 
contains 1000 units of resources.      
 
Each agent can load a maximum of 100 units.  
 
As in [1], we define time as the number of iteration 
required to discover and exhaust all the resources in the 
environment. We evaluate the performance of the two 
models in different configurations (number of agents, size of 
the environment). 
A. Influence of the number of agents on performance 
Using the setup 1, and varying the number of agents from 
5 to 160 agents, we obtained the results illustrated by Figure 
3 and Table 1. Experiments show that increasing the number 
of agents decreases the time of foraging. This is due to the 
great level of cooperation. 
 
Figure3. Performance of Cooperative c-marking agents in setup 1 
 
TABLE 1    INFLUENCE OF NUMBER OF AGENTS ON THE PERFORMANCE OF 
COOPERATIVE C-MARKING AGENTS 
Number of agents 
5 
10 
20 
40 
80 
Iteration number 
10476 
6917 
3403 
1125 
609 
B. Influence of the environment size on performance 
In this case, the number of agents is fixed and the 
environment size is variable. We used the setup 2 to see how 
the size of the environment affects the performance of the 
proposed model.   
Setup 2 is defined by: 
 
Environments contain 5% obstacle density and 20 
cells are resource locations; each resource contains 
2000 units of resources.      
 
The number of agents is 50. Each agent can 
transport a maximum of 100 units. 
Table 2 and Figure 4 show the performance of the 
algorithm for environments of varying sizes ranging from 
12x12 to 100x100.  
The results show that the foraging time decreases with 
increasing the size of the environment. The solution becomes 
ineffective due to the increase in exploration time. The 
problem of dead connected trails creates local minima that 
can lead to freeze a great number of agents in the local 
minima vicinity. 
 
Figure 4. Performance of Cooperative c-marking agents in setup2 
 
TABLE 2    INFLUENCE OF THE ENVIRONMENT SIZE ON THE PERFORMANCE 
OF COOPERATIVE C-MARKING AGENTS 
Environment size 
12*12   25*25 
50*50 
100*100 
Iteration number 
192 
652 
1395 
10777 
C. Influence of the obstacles on performance 
Obstacles are disseminated in a random way in the 
environment. Such situation allows us to test the robustness 
of the algorithm to obstacles. 
Setup 3 is defined by: 
 
Environment size is 41 X 41 cells, 20 cells are 
resource locations; each resource contains 1000 
units of resources;      
 
Number of agents is 10 and each one can transport a 
maximum of 100 units; 
The obstacle percentage is varying from 15 to 30 % of 
the environment surface. Results are shown in Table 3 and in 
Figure 5, which demonstrate that the performances do not 
depend on the density of obstacles. The algorithm offers an 
interesting level of robustness to obstacles. 
 
161
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

 
Figure 5. Performance of Cooperative c-marking agents in setup3 
 
TABLE 3    INFLUENCE OF THE PERCENTAGE OF OBSTACLES ON THE 
PERFORMANCE OF COOPERATIVE C-MARKING AGENTS 
Percentage of obstacles 
15   
20 
25 
30 
Iteration number 
976 
831 
796 
985 
 
D. Comparaison with c-marking agents model 
Simulating the ant model requires more environment 
management mechanisms in which propagation of the 
pheromones represents a high computational cost. The main 
advantage of marking agents is their abilities of creating 
quick paths to the base during the exploration phase [1]. In 
the proposed model, the first problem is avoided by giving a 
new modeling for the digital pheromone, and the local 
minima problem is also avoided. Due to this last, agents are 
able to go back home easily. 
Figure 6 presents a comparison between the two models. 
It shows that the proposed model gives more efficiency in 
time than the c-marking agents in case of varying the number 
of agents. This is due specifically to the great level of 
cooperation which decreases the exploration time. Figure 7 
gives a comparison between the two models by varying the 
environment’s size. Results show that this model gives a less 
efficiency in time than the c-marking agents’ model. We 
think that this ineffectiveness of results is due to a problem 
that appears during the simulations, there is a possibility that 
two or more trail are connected (have common cells in some 
part of the trail); or crossed ones, when the agent in trail 1 
exhaust the resource, it will erase the trail and this will cause 
the erase of the common portion of trail; the agents in the 
other trail have no way to continue to the base, or to the 
resource, because they look for  colored cells , with this 
phenomena a great number of agents will be trapped and the 
simulation is continued with just those agents which are not 
trapped and this will increase the number of iteration .   
 
 
 
 
 
 
 
 
Figure 6. Effect of the number of agents 
Cooperative c-marking agents Vs c-marking agents 
 
 
Figure 7. Effect of the environment size 
Cooperative c-marking agents Vs c-marking agents 
 
V. 
CONCLUSION AND FUTURE WORK 
A multi agent model simulation and a new version of the 
c-marking agents’ algorithm to increase the cooperation 
between agents and to decrease the time of foraging have 
been presented. Some other problems such as neighboring 
resources is solved with our new model and results indicates 
that the use of the new pheromone modeling give more 
efficiency in time than the original one. In perspective, we 
think that robot’s behavior can be enhanced by introducing 
both new exploration approaches and solutions to problems 
such as trail erasing and APF fast convergence.  
 
REFERENCES 
 
[1] O. Simonin, F. Charpillet, and E. Thierry. Collective construction of 
numerical potential fields for the foraging problem. ACM TAAS, 
Transactions on Autonomous and Adaptive Systems. In press (25 
pages), 2010. 
[2] A. Winfield. Foraging robots. In Meyers, R., ed. Encyclopedia of 
Complexity and Systems Science. Springer, New York, 2009, pp. 
3682-3700. 
0
200
400
600
800
1000
1200
15
20
25
30
Effet of the percentage of obstacles 
Percentage of obstaces  
Number of iteration 
0
5000
10000
15000
20000
5
10
20
40
80
160
Cooperative c-
marking agent
c-marking
agent
Number of agents 
Number of iterations 
Effet of agent's number on the  performance 
Cooperative c-marking agent Vs c-marking agent  
0
2000
4000
6000
8000
10000
12000
12*12
25*25
50*50
100*100
Cooperative c-
marking agent
c-marking
agent
Effect of the environment size 
Cooperative c-marking agents vs c-marking agents 
Environment size 
Number of iterations 
162
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

[3] E. Bonabeau, M. Dorigo, and G. Theraulaz. Swarm Intelligence- 
From Natural to Artificial Systems. Oxford University. Press, USA, 
1999.  
[4] M. Dorigo and M. Birattari. Swarm Intelligence. Scholarpedia, 2007.  
[5] L. Panait and S. Luke. A pheromone-based utility model for 
collaborative foraging. In Proc AAMAS’04. ACM, 36-43 , 2004  
[6] A. Bautin, O. simonin, and F. Charpillet. Stratégie d’exploration 
multi-robot fondée sur les champs de potentiels artificiels, Journée 
Francophones sur les Systèmes Multi-Agents (JFSMA), 2011.  
[7] E. H. Østergaard, G. S. Sukhatme, and M. J. Mataric. Emergent 
bucket brigading: A simple mechanism for improving performance in 
multi robot constrained-space foraging tasks. In proc. Int. Conf. On 
Autonomous Agents, Montreal, Canada, May 2001.  
[8] M. J. Mataric and M. J. Marjanovic. Synthesizing complex behaviors 
by composing simple primitives. In Proc. Self-Organization and Life, 
From Simple Rules to Global Complexity, European Conference on 
Artificial Life (ECAL-93), Brussels, pages 698-707, May 1993.       
[9] A. J. Ijspeert, A. Martinoli, A. Billard, and L. M. Gambardella. 
Collaboration through the exploration of local interactions in 
autonomous collective robotics: The stick pulling experiment. 
Autonoumous robots, 2001.   
[10] A. Martinoli, K. Easton, and W. Agassounon. Modeling swarm 
robotic systems: A case study in collaborative distributed 
manipulation. In Journal of Robotics research, Special Issue on 
Experimental Robotics, 2004.   
[11] L. E. Paker. ALLIANCE: an architecture for fault tolerant, 
cooperative control of heterogeneous mobile robots. In Proc. IEEE/ 
RSJ International Conference on Intelligent Robots and Systems, 
1994.     
[12] R. Grob, E. Tuci, M. Dorigo, M. Bonani, and F. Mondada. Object 
transport by modular robots that self-assemble. In Proc. IEEE 
International Conference on Robotics and Automation, 2006.     
[13] M. Dorigo, E. Tuci, R. Grob, V. Trianni, T. H. Labella, S. Nouyan, 
and C. Ampatzis. The SWARM-BOT project. In Erol Sahin and 
William Spears, editors, Swarm Robotics Workshop: State-of-the-art 
survey, number 3342 in Lecture Notes in Computer Science, Berlin 
Heidelberg, Springer Verlag, 2005.    
[14] T. Balch and R. C. Arkin. Communication in reactive multiagent 
robotic systems. Autonomous Robots. 1994.    
[15] D. Goldberg and M. J. Mataric. Interference as a tool for designing 
and evaluating multi robot controllers. In Proc. 14th National 
Conference on Artificial intelligence (AAAI-97). MIT Press, 1997. 
[16] K. Lerman. Mathematical model of foraging in a group of robots 
inspired by ants foraging behavior. ACM Transactions on 
Autonomous and Adaptive Systems, 2006.      
[17] E. Bonabeau, C. Theraulaz, and J. L. Deneubourg. Quantitative study 
of the fixed threshold model for the regulation of division of labor in 
insect societies. Proceedings of the RoyalSociety of London, Series B 
Biological Sciences, 1996. 
[18] E. Bonabeau, G. Theraulaz, and J.L. Deneubourg. Fixed response 
thresholds and the regulation of division of labour in insect societies. 
Bulletin of Mathematical Biology, 1998. 
[19] M. Krieger and J.B. Billeter. The call of duty: Self-organised task 
allocation in a population of up to twelve mobile robots. Jour. of 
Robotics & Autonomous Systems, 2000. 
[20] J. L. Deneubourg, S. Goss, J. M. Pasteels, D. Fresneau, and J. P. 
Lachaud. Self-organization mechanisms in ant societies (ii): learning 
in foraging and division of labour. Experientia Suppl, 1987. 
[21] T. H. Labella, M. Dorigo, and J. L. Deneubourg. Division of labour in 
a group of robots inspired by ants foraging behaviour. ACM 
Transactions on Autonomous and Adaptive Systems, 2006. 
[22] J. L. Deneubourg, S. Aron, S. Goss, J. M. Pasteels, and G. Duerrinck. 
Random 
behavior, 
amplification 
processes 
and 
number 
of 
participants: How they contribute to the foraging properties of ants. 
Physica, 1986 
[23] B. Holldobler and E. Wilson. The Ants. Harvard University 
[24] M. Resnick. Turtles, Termites, and Traffic Jams: Explorations in 
Massively parallel Microworlds. Cambridge, MIT Press, 1994.   
 
 
 
 
 
 
 
 
163
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-234-9
SIMUL 2012 : The Fourth International Conference on Advances in System Simulation

