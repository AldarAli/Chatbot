ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
73
Towards a Secured Authentication Based on an Online
Double Serial Adaptive Mechanism of Users’ Keystroke Dynamics
Abir Mhenni∗‡, Estelle Cherrier†, Christophe Rosenberger† and Najoua Essoukri Ben Amara‡
∗ENIT, University of Tunis El Manar, BP 94 Rommana 1068 Tunis, Tunisia
Email: abirmhenni@gmail.com
†Normandie Univ, UNICAEN, ENSICAEN, CNRS, GREYC, 14000 Caen, France
Email: estelle.cherrier@ensicaen.fr
Email: christophe.rosenberger@ensicaen.fr
‡LATIS- Laboratory of Advanced Technology and Intelligent Systems, ENISo
University of Sousse, BP 526 4002 Sousse, Tunisia
Email: najoua.benamara@eniso.rnu.tn
Abstract—Password based applications are commonly used in our
daily lives such as in social networks, e-mails, e-commerce, and
e-banking. Given the increasing number of hacker attacks, only
the use of passwords is not enough to protect personal data and
does not meet usability requirements. Keystroke dynamics is a
promising solution that decreases the vulnerability of passwords
to guessing attacks by analyzing the typing manner of the user.
Despite its efﬁciency in the discrimination between users, it
remains non-industrialized essentially due to the tedious learning
phase and the intra-class variation of the users’ characteristics.
In this paper, we propose a double serial mechanism to adapt the
user’s model over time. An important property of the proposed
solution relies in its usability as we only use a single sample as
user’s reference during the account creation. We demonstrate
that the proposed method offers competitive performances while
keeping a high usability.
Keywords–Passwords;
Authentication;
Password
security;
Keystroke dynamics; Adaptive strategy.
I.
INTRODUCTION
Numerous applications used in daily life are based on
password authentication. However, these passwords might be
easily forgotten. That is why we generally opt for a unique
password or simpliﬁed ones to remember all of them. But this
strategy, although widespread, increases the vulnerability of
passwords to guessing attacks. Besides, password composition
policies calculate the complexity of the used passwords and
advise users to combine symbols, numbers and letters to
make them more complex and unguessable so as to avoid
hacking attacks [1], [2]. Moreover, many studies explored the
passwords length to evaluate their security [3].
Keystroke dynamics consists in analyzing the user’s way
of typing to decide if he/she is genuine or not. It is an
interesting solution which enhances the security of password-
based applications [4] regardless of the size and complexity of
the password. In addition to the use of a syntactic veriﬁcation
of the password, the way of typing it must be similar to
the legitimate user. Keystroke dynamics belongs to behavioral
biometric modalities that vary over time. The characteristics
describing the users’ typing rhythms are mainly extracted from
the latencies between the pressing and releasing moments of
two successive keys.
Even if this modality has proved its efﬁciency in several
scientiﬁc research papers, it is still not fully adopted in indus-
trialized applications, unlike other morphological modalities
such as the ﬁngerprint (e.g., ﬁngerprint scanner [5], Touch
ID [6], etc.) and the face (e.g., video cameras on consumer
devices [7], etc.). This is basically owing to the need of
several typing captures during the enrollment phase to create
the reference template that describes the typing rhythm of the
users. It is not the case for real applications for which the
password is usually requested only once, when creating an
account. In [4], the reader can ﬁnd a recent state of art on
keystroke dynamics. As shown in Table I, for all the published
research papers, the learning phase requires a large number of
samples which generally exceeds 20 according to [8].
TABLE I. NUMBER OF SAMPLES REQUIRED FOR ENROLLMENT PHASE
FOR SOME SYSTEMS IN LITERATURE.
References
[9]
[10]
[11]
[12]
[13]
Number of samples
15
40
50
112
200
Besides the problem of the tedious enrollment phase,
keystroke dynamics particularly suffers from large intra-class
variation, as well as other behavioral modalities. In fact, the
typing manner of the users is affected by different param-
eters [14]–[16] like emotional state, activeness, acquisition
conditions, and keyboard changing.
Adaptive strategies [17], [18] are promising solutions in
order to solve these problems. Indeed, they aim to update
the reference template during the use of the authentication
system. Therefore, they take into account the variations in
the typing manner of users as time elapses. In this paper, we
put forward an adaptive strategy based on a single sample
for the enrollment phase of the initial reference template. The
reference template is enriched thanks to the proposed adaptive
strategy. The maximum size of the adapted reference template
is set to ten samples. The proposed method makes possible
the general use of keystroke dynamics on Internet as an
efﬁcient and usable logical access control to Web services. We
demonstrate the beneﬁt of the proposed approach on different
datasets from the state of the art.
The remainder of this paper is organized as follows.
Section II presents the literature work on the adaptation strate-
gies applied to the keystroke dynamics modality. Section III
describes the proposed methodology and the contributions of
this paper. Section IV details the experimental protocol, the
used databases and the obtained results. Section V presents

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
74
the main conclusion of this work and some perspectives.
II.
RELATED WORK
The literature has shown that the adaptive strategy is one
of the most suitable solutions to cope with intra-class varia-
tion, which is inherent to the keystroke dynamics modality.
This strategy generally depends on ﬁve parameters accord-
ing to [19]:
•
Reference modeling: It consists of choosing the rep-
resentation of the biometric reference. The reference
template is generally composed of several samples.
In this case, it is referred to as a gallery. To our
knowledge, no work considers a single sample as
reference for keystroke dynamics.
•
Adaptive criteria: The adaptation process is initiated
only if this criterion is veriﬁed. Different criteria
have been proposed in the literature. We can cite
the double threshold [20], the quality index [21],
the context-sensitive [22], and the temporal errors
distribution [23].
•
Adaptive mode: It deﬁnes how to label the presented
queries. It can be done in a supervised way or in a
semi-supervised one.
•
Adaptive periodicity: It details how often to apply the
adaptation process, either immediately after the query
acceptance, or after having collected a speciﬁc number
of samples.
•
Adaptive mechanism: It concerns how to modify the
reference to update it. Different mechanisms have
been suggested, like the additive mechanisms [24], the
replacement mechanisms [25], [26] and the combined
ones [27], [28].
Let us discuss some adaptive mechanisms given they
belong to the most interesting step for the whole strategy. In
fact, among the additive mechanisms, the growing window [29]
is well known and frequently used [30]. The process consists
in adding each accepted query to the reference gallery. Con-
cerning the replacement mechanisms, the sliding window [29]
is also commonly employed. It consists in replacing the oldest
sample by the newly accepted query. Moreover, both of these
mechanisms are generally combined to operate together. For
example in [31], three combined mechanisms were proposed.
All of them are based on two sub-references. These sub-
references are managed as follows:
1)
Parallel sliding: One biometric sub-reference is never
updated, and the other one is updated with the sliding
window.
2)
Parallel growing: One biometric sub-reference is
never updated, and the other one is updated with the
growing window.
3)
Double parallel: One biometric sub-reference is up-
dated using the sliding window, and the other one
is updated using the growing window. Later, Pisani
et al [30] proposed an improved double parallel that
limits the size of the sub-reference adapted with the
growing window based on a statistical classiﬁer.
According to [31], after 5 adaptation sessions the paral-
lel growing, parallel sliding and double parallel mechanisms
present respectively an Error Equal Rate (EER) higher than
20%, 15% and 10%.
As a main contribution, we combine two mechanisms,
namely growing and sliding. The novelty lies in the fact
that they are applied to a unique reference and they operate
sequentially: The growing window is ﬁrstly applied, then the
sliding window occurs. The obtained results show that this
approach actually enhanced the performances.
III.
PROPOSED APPROACH
In this paper, we put forward a novel keystroke dynam-
ics authentication method that ﬁts the industrial application
conditions such as to secure the logical access control to a
service on Internet. The main interest is to consider only
the password sample introduced when creating an account.
Furthermore, thanks to our adaptation strategy, the intra-class
variation is taken into account over the use of the system in a
transparent way. In what follows, we describe the main steps of
our approach: enrollment, veriﬁcation and adaptation. Figure 1
represents the overall scheme of the suggested approach.
A. Enrollment phase
In this work, the initial user’s reference template Gj of
the user j is composed of a single typing capture, the one
introduced to save the user’s password. A simple JavaScript
code embedded in the service provider login page is sufﬁcient
for this task. From this single sample, we extract four char-
acteristics which are time information between two successive
keys:
•
Time duration between two successive pressure events
•
Time duration between two successive release events
•
Time duration between one key press event and the
successive key release event
•
Time duration between one key release event and the
successive key press event
These characteristics are commonly used and provided
by the majority of available public databases of keystroke
dynamics [32]–[34].
B. Veriﬁcation phase
The classiﬁcation is ensured with the K Nearest Neigh-
bor (KNN) classiﬁer. It is one of the most used classiﬁers
for the keystroke dynamics modality that demonstrates good
performances [35]. Knowing that the KNN classiﬁer can be
used with different distance metrics, we propose to evaluate
its performances with different metrics described below:
•
Statistical distance: It is based on extracting statistical
values from each retained biometric feature (mean
and standard deviation). This distance is well known
for its competitive performances and its calculation
speed while being used for the keystroke dynamics
authentication [36].
DST AT = 1 − 1
n
n
X
i=1
e− | qi
− µi |
σi
(1)
•
Hamming distance: It consists in calculating the per-
centage of different coordinates between the novel
query and the reference samples.
DHAMMING = (#(qj ̸= Gj(k))/n)
(2)

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
75
Enrollment
New query
Save sample
KNN  
classifier
Nearest 
neighbor score 
Classification 
decision
Verification
Adaptation 
decision
Reference 
size
sliding window
Growing window
Yes
Adaptation
Yes
< 10
= 10
First adapted
threshold
Second adapted
threshold
Refused query
No
Authenticated query 
without adaptation
No
First typing 
sample
Reference
Figure 1. Description of the keystroke authentication process
•
Euclidean distance: It is a simple distance metric
usually used with the KNN classiﬁer.
DEUCLIDEAN =
v
u
u
t
m
X
k=1
(qj − Gj(k))2
(3)
•
Manhattan distance: It calculates the sum of the dif-
ferences of the corresponding components of the new
query and the reference samples.
DMANHAT T AN =
m
X
k=1
|qj − Gj(k)|
(4)
where:
qj is the claimed query of the user j, Gj(k) is the kth reference
sample of the user j, m is the number of the samples in the
reference Gj,
µ is the mean vector of the reference, and σ
is the standard deviation vector of the user reference, and i
varying from 1 to n where n is the length of the password.
C. Adaptation phase
The adaptation phase is required to remedy the problems
of intra-class variation. It is ensured during the use of the
authentication system to enhance its performances. For the
proposed approach, we opt for the following choices:
•
Reference modeling: To facilitate the enrollment phase
task, the user is asked to only type the password once.
This is a great advantage in term of usability. Thus,
the user’s gallery is initially composed of a single
sample. Each accepted query is therefore added to
the gallery, to enrich the typing manner description.
The maximum size of the gallery is equal to ten. We
chose not to enlarge the reference, to facilitate the
communication of the web server with the database.
•
Adaptation criterion: The decision to update the ref-
erence is taken according to the adapted thresholds
criterion which has already been proposed in [37].
It is based on the double threshold criterion [20].
Two thresholds are considered: The ﬁrst one decides
whether to accept or to reject the query, while the
second one decides to use the accepted query whether
to update the reference or not. All studies implement-
ing the double threshold criterion, have generally used
ﬁxed thresholds [8], [31]. For our adaptation criterion,
the thresholds are updated during the use of the system

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
76
according to (5):
T i+1
j
= T i
j − e
−
µj
σj
(5)
where µj and σj are respectively the mean and stan-
dard deviation vectors of the reference of the user j,
and T i
j is the threshold of the user j in the adaptation
step i.
•
Adaptation mode: The chosen mode for the suggested
method is the semi-supervised one. The labels are
assigned thanks to the KNN classiﬁer. We apply it
combined with different distance metrics to choose
the optimal distance (best performances).
•
Adaptation periodicity: The adaptation is performed
online whenever a query is accepted by the adapted
thresholds criterion.
•
Adaptation mechanism: We propose the double-serial
mechanism for our experimentations. At the begin-
ning, the growing window mechanism is applied.
Actually, each accepted query is added to the reference
as long as the size of the gallery Gj is less than 10
samples. Once the size of the reference reaches 10
samples, the sliding window mechanism is launched
to replace the oldest sample in the reference gallery
with the last accepted query. The adaptation mecha-
nism continues by updating the reference without any
supervision by simply and efﬁciently considering the
temporal variations in the keystroke dynamics.
As a consequence, once the decision criterion is veriﬁed,
we update both the reference and the thresholds in a real
time way. Thanks to the double-serial mechanism, the growing
window mechanism serves to enrich the modeling of the
keystroke dynamics of the users, whereas the sliding window
is subsequently used to track the intra-class variation of the
user’s typing manner.
IV.
EXPERIMENTS AND RESULTS
We validate our adaptation approach of the keystroke
dynamics on two public databases. The evaluation is done
based on two commonly used metrics: the Error Equal Rate
(EER) and the Area Under Curve (AUC) performance metrics.
The experimentations and the achieved results are presented in
the following.
A. Datasets
We choose the GREYC 2009 [33] and
WebGREYC [32]
databases for the validation of the proposed method. In GR-
EYC 2009, 133 users participated in the creation of this
database. We are interested in only 100 users, those who
participated in ﬁve acquisition sessions during 2 months and
provided 60 samples per user. For the Web GREYC, 118 users
were involved in its creation. Only 45 among them participated
in ﬁve sessions and provided 60 patterns. For both databases,
we only consider users who provided 60 samples.
B. Experimental methodology
To better describe the adopted methodology, we depict the
used data stream generation. We have 60 samples per user.
Thus, to assess the performances of our method, we deﬁne an
evaluation protocol. For that purpose, we divide the process
into sessions. At each session, we present eight new queries
to the system. They are composed of ﬁve genuine samples and
three impostor ones. According to the literature, the number of
genuine samples per session is generally up to ten. Differently,
we opt in our work for only ﬁve genuine samples, which
allows precisely controlling the approach performances. The
genuine queries are presented according to the chronological
order of the database capture; whereas, the impostor queries
are randomly introduced.
As a result, we obtain 12 adaptation sessions (60 genuine
samples / 5). Since we store the ﬁrst sample as reference
in the enrollment phase, during the last session we present
only 4 genuine samples. Three impostor attacks are randomly
generated in each session by the samples of other users of the
database. The biometric data stream is then divided into 37.5%
(3/8) of impostor samples and 62.5% (5/8) geniune samples.
The attack rate is higher than that generally used in keystroke
dynamics studies [10], [31] (70% genuine and 30% impostor).
The initial thresholds are set for an EER equal to 3%. Then,
after each query acceptance, the reference is updated according
to the double serial mechanism, and the decision thresholds are
adapted based on Equation (5).
C. Results
Although the reference initially contains only a single
sample, the obtained results are promising. Figure 2 depicts
the Receiver Operating Characteristic (ROC) curves with the
associated EER and AUC performances for the twelve adap-
tation sessions of the different experimentations applied to the
GREYC 2009 database. Figure 3 illustrates the ROC curves
and the performances (EER, AUC) of the ﬁrst and the last
adaptation sessions obtained using both databases.
We choose four distance metrics to associate to the KNN
classiﬁer because we test a very large number of distances, but
those that demonstrate competitive performances are hamming,
statistical, euclidean and Manhattan. Comparing the metrics
with each other, we note that the hamming distance and the
statistical one perform better than others for the two considered
databases.
We compare our approach with that of Giot et al [8], in
which the authors applied the average mechanism based on
3 different classiﬁers: Support Vector Machine (SVM), neural
network and statistical distance. Thereby, an examination of
the classiﬁers’ performance is essential. Table II summarizes
the compared results.
TABLE II. COMPARISON OF THE CHOSEN CLASSIFIER WITH THOSE OF
PREVIOUS WORK FOR GREYC 2009 DATABASE.
Adaptive
Reference size
Classiﬁer
EER
AUC
mechanism
Minimum
Maximum
Double
1
10
KNN (Hamming)
6.1%
0.013
serial
1
10
KNN (Statistical)
6.3%
0.017
mechanism
1
10
KNN (Euclidean)
7.8%
0.033
(Proposal)
1
10
KNN (Manhattan)
8.9%
0.031
Average
5
15
SVM
6.96%
-
mechanism
5
15
Neural network
8.75%
-
[8]
5
15
Statistical
10.75%
-
The best performance achieved in [8] is an EER equal
to 6.96%, while using an SVM classiﬁer and the reference
was composed of 5 samples as minimum size and 15 samples
maximum. In the present study, we use the same database as

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
77
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Session 1;  EER:0.283;  AUC:0.21589
--
Session 2;  EER:0.257;  AUC:0.19366
--
Session 3;  EER:0.214;  AUC:0.14855
--
Session 4;  EER:0.206;  AUC:0.13883
--
Session 5;  EER:0.204;  AUC:0.11881
--
Session 6;  EER:0.159;  AUC:0.11517
--
Session 7;  EER:0.182;  AUC:0.10474
--
Session 8;  EER:0.144;  AUC:0.087508
--
Session 9;  EER:0.141;  AUC:0.085184
--
Session 10;  EER:0.108;  AUC:0.065496
--
Session 11;  EER:0.091;  AUC:0.045696
--
Session 12;  EER:0.078;  AUC:0.03316
ROC Curves
(a) Euclidean distance
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Session 10;  EER:0.114;  AUC:0.043692
Session 12;  EER:0.089;  AUC:0.031648
Session 11;  EER:0.106;  AUC:0.05342
Session 8;  EER:0.145;  AUC:0.081758
Session 9;  EER:0.128;  AUC:0.063556
Session 1;  EER:0.302;  AUC:0.22753
Session 3;  EER:0.266;  AUC:0.18416
Session 6;  EER:0.192;  AUC:0.12415
Session 2;  EER:0.266;  AUC:0.19178
Session 5;  EER:0.201;  AUC:0.12387
Session 4;  EER:0.214;  AUC:0.14569
Session 7;  EER:0.175;  AUC:0.10162
ROC Curves
--
--
--
--
--
--
--
--
--
--
--
--
(b) Manhattan distance
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Session 1;  EER:0.261;  AUC:0.19747
--
Session 2;  EER:0.244;  AUC:0.16924
--
Session 3;  EER:0.226;  AUC:0.14949
--
Session 4;  EER:0.211;  AUC:0.13673
--
Session 5;  EER:0.198;  AUC:0.12379
--
Session 6;  EER:0.177;  AUC:0.10039
--
Session 7;  EER:0.138;  AUC:0.071394
--
Session 8;  EER:0.112;  AUC:0.048038
--
Session 9;  EER:0.105;  AUC:0.039268
--
Session 10;  EER:0.087;  AUC:0.030366
--
Session 11;  EER:0.082;  AUC:0.028032
--
Session 12;  EER:0.063;  AUC:0.017852
ROC Curves
(c) Statistical distance
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Session 12;  EER:0.061;  AUC:0.013972
Session 10;  EER:0.093;  AUC:0.029666
Session 11;  EER:0.081;  AUC:0.023456
Session 8;  EER:0.154;  AUC:0.073506
Session 7;  EER:0.162;  AUC:0.087688
Session 4;  EER:0.195;  AUC:0.10846
Session 3;  EER:0.222;  AUC:0.15009
Session 5;  EER:0.179;  AUC:0.10559
Session 2;  EER:0.232;  AUC:0.16587
Session 6;  EER:0.164;  AUC:0.09259
Session 1;  EER:0.293;  AUC:0.20502
Session 9;  EER:0.15;  AUC:0.071868
ROC Curves
--
--
--
--
--
--
--
--
--
--
--
--
(d) Hamming distance
Figure 2. Roc curves evolving overs all adaptation sessions (GREYC 2009 database) and the associated performances (EER, AUC)
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
ROC Curves
Manhattan; S1;  EER:0.365;  AUC:0.30045
Euclidean; S1;  EER:0.351;  AUC:0.26623
Hamming; S1;  EER:0.316;  AUC:0.26941
Statistical; S1;  EER:0.306;  AUC:0.24712
Manhattan ; S12;  EER:0.114;  AUC:0.068452
Euclidean ; S12;  EER:0.108;  AUC:0.065496
Statistical ; S12;  EER:0.091;  AUC:0.045696
Hamming ; S12;  EER:0.078;  AUC:0.03316
(a) WEB GREYC
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
--
--
--
ROC Curves
Manhattan ; S1;  EER:0.302;  AUC:0.22753
Hamming ; S1;  EER:0.293;  AUC:0.20502
Euclidean ; S1;  EER:0.283;  AUC:0.21589
Statistical ; S1;  EER:0.261;  AUC:0.19747
Manhattan ; S12;  EER:0.089;  AUC:0.031648
Euclidean ; S12;  EER:0.078;  AUC:0.03316
Statistical ; S12;  EER:0.063;  AUC:0.017852
Hamming ; S12;  EER:0.061;  AUC:0.013972
(b) GREYC 2009
Figure 3. Roc curves of the ﬁrst and the last adaptation session (S1,S12) and the associated performances (EER, AUC)

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
78
in the work of [8], thus obtaining two better performances:
an EER equal to 6.3% using the KNN based on the statistical
distance, and 6.1% using the KNN based on the hamming
distance. We will beneﬁt from the minimisation of the size of
the reference while keeping better performances to facilitate
the industrialisation of the keystroke dynamics modality. In
addition, the KNN classiﬁer compared to other classiﬁers, has
the advantage of a low computing time which facilitates its
deployment on the web server.
To highlight the beneﬁt of the chosen adaptation criterion,
we also test different types of thresholds:
•
Global thresholds: A single threshold is set for all
users and during the use of the password.
•
Individual thresholds: The thresholds are user depen-
dent but remain set during the system utilization.
•
Variable thresholds: The thresholds vary according to
users and over time.
As demonstrated in previous work, [37], the variable
thresholds are performing better, as provided in Table III.
TABLE III. COMPARISON OF OBTAINED RESULTS (EER) WITH DIFFERENT
THRESHOLDS.
Distance metrics
Thresholds
GREYC 2009
WEB GREYC
Variable
6.1%
7.8%
Hamming
Individual
7.3%
9.5%
Global
8.1%
10.7%
Variable
6.3%
9.1%
Statistical
Individual
6.9%
10.4 %
Global
7.6%
11.7%
Variable
7.8%
10.8 %
Euclidean
Individual
8.4%
12.8%
Global
9.7%
14.2%
Variable
8.9%
11.4 %
Manhattan
Individual
9.3%
13.6 %
Global
10.1%
15.3 %
For our experimentation, the evolution of the size of the
reference over time is signiﬁcant. Since the number of accepted
queries is not the same for all users, the size of the reference
differs from one user to another at the end of the session.
Table IV shows the minimum size and the maximum size of
users’ references in each session. As the maximum number of
samples in the reference (10 samples) is rapidly reached, we
therefore deduce that the growing window phase is quickly
interrupted. Hence, the sliding window phase is more sustain-
able. Moreover, we notice that the slower the growing window
phase is, the lower the performances are. In fact it is due to the
weak recognition of the geniune user at the beginning. This is
the case of the KNN based on Manhattan distance, unlike the
other distance metrics especially the statistical one. Besides,
user’s having the minimum reference size are those whos
keystroke dynamics is suffering from intra class variations
more than the others.
To enforce the advantages of the proposed adaptation
approach we tested other algorithms of the literature. We
ﬁrstly tested the growing window mechanism with a reference
containing a single sample initially. The size of the reference
increases inﬁnitely thanks to the adaptation mechanism. Sec-
ondly we applied the sliding window mechanism based on
a reference sized 10. Thirdly the double parallel mechanism
is conducted using two sub-references. One of them contains
a single sample initially and it is adapted with the growing
window mechanism. The other comprises 10 samples initially
and it is adapted with the sliding window mechanism. Finally
we also tested the proposed double serial mechanism while the
reference is initialized to 5 samples and its maximum size is
ﬁxed to 10. Figure 4 summerizes the variations of the reference
size for each of the tested adaptation mechanisms. All of
these mechanisms are implemented by the KNN classiﬁer
with 4 distance metrics. The obtained results are summarized
in Figure 5.
0
2
4
6
8
10
12
Growing
Sliding
Double serial Sub-reference1 Sub-reference2
Minimum size
Maximum size
Double Parallel
Minimum size 
Maximum size 
Figure 4. The minimum and the maximum size of the reference for the
compared mechanisms.
By applying the sliding window mechanism and growing
window mechanism separately, the obtained results are less
efﬁcient. The performance achieved with the double parallel
mechanism is good. But the double serial mechanism remains
the best performing. While increasing the initial size of the
reference by 5 samples we obtained better performances. This
is due to the larger description of the keystroke dynamics of
the users. But the performance difference at the ﬁnal session
is not very large. This is why we chose an approach based on
a single sample in the learning phase in order to familiarize it
with the industrial applications environment.
V.
CONCLUSION AND FUTURE WORK
This paper investigates a novel method, which considers
the conditions necessary for the application in real life of the
keystroke dynamics modality especially for web services. In
fact, in spite of its great advantage to reinforce the security of
the password-based applications facing hacking attacks, this
modality has not been industrialized yet. The main interest
of the proposed method is that it minimizes as much as
possible the number of samples used in the learning phase.
Indeed, a unique sample is required initially. Besides, we
adopt the double serial adaptation mechanism to remedy to the
intra-class variations of the users’ characteristics: It consists
in combining the growing window and the sliding window
mechanisms. The growing window serves to enlarge the users’
galleries so as to capture more intra-class variability. After
reaching the maximum size of the reference, which is ﬁxed
to 10, the sliding window mechanism takes place. It permits
describing and following the temporal variation of the users’
keystroke dynamics. Also, the adaptive threshold criterion has
a great impact on the improvement of the obtained results.
It is adapted to the gallery variation of each user. Thanks to

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
79
TABLE IV. EVOLUTION OF THE USERS’ REFERENCE SIZE FOR EACH DISTANCE METRIC OVER ALL ADAPTIVE SESSIONS: ILLUSTRATION OF THE MINIMUM
AND THE MAXIMUM SAMPLES NUMBER.
Number of
Min-Max number of samples in the reference
adaptive
GREYC 2009 database
WEB GREYC database
sessions
Hamming
Statistical
Euclidean
Manhattan
Hamming
Statistical
Euclidean
Manhattan
1
2-4
2-5
2-4
2-4
2-5
2-5
2-4
2-4
2
6-10
5-10
4-8
3-7
5-9
6-9
4-8
4-8
3
10-10
7-10
7-10
6-10
8-10
7-10
7-10
6-10
4
10-10
10-10
10-10
9-10
10-10
10-10
10-10
9-10
5
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
6
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
7
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
8
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
9
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
11
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
12
10-10
10-10
10-10
10-10
10-10
10-10
10-10
10-10
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Statistical distance;  EER:0.12;  AUC:0.065856
--
Manhattan distance;  EER:0.131;  AUC:0.069828
--
Euclidean distance;  EER:0.174;  AUC:0.10026
--
Hamming distance;  EER:0.088;  AUC:0.030534
ROC Curves
(a) Growing (1 features)
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Hamming distance;  EER:0.081;  AUC:0.023456
--
Statistical distance;  EER:0.087;  AUC:0.030366
--
Manhattan distance;  EER:0.146;  AUC:0.0965
--
Euclidean distance;  EER:0.163;  AUC:0.079854
ROC Curves
(b) Sliding (10 features)
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Hamming distance;  EER:0.057;  AUC:0.01521
--
Statistical distance;  EER:0.059;  AUC:0.013662
--
Manhattan distance;  EER:0.078;  AUC:0.032858
--
Euclidean distance;  EER:0.065;  AUC:0.019896
ROC Curves
(c) Double serial mechanism (5 features)
FAR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
FRR
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
--
Hamming distance;  EER:0.064;  AUC:0.014062
--
Statistical distance;  EER:0.061;  AUC:0.018846
--
Manhattan distance;  EER:0.08;  AUC:0.030294
--
Euclidean distance;  EER:0.111;  AUC:0.050392
ROC Curves
(d) Double parallel mechanism (10 features)
Figure 5. Roc curves of the last adaptation sessions and the associated performances (EER, AUC) of different adaptation mechanisms applied to the GREYC
2009 database
all these choices, we have obtained a competitive performance
with a minimal size of the reference template (one sample for
the enrollment and ten for the maximum size of the reference
gallery). The accomplished results have improved the state
of the art results by more than 0.8% going up to 4%. The
achieved comparison of the different metrics combined with
the KNN classiﬁer have been also interesting. In fact, it reveals
which metric provide the best results. Eventually, the hamming
and statistical distances are the most efﬁcient compared to
others. We also implemented the double serial mechanism with
different reference sizes and compared it to the double parallel,
the growing window and the sliding window mechanisms. The
double serial mechanism demonstrated the best performances.
We are interested in investigating an improved method
that achieves better performance from the ﬁrst sessions. Thus,
preliminary experiments of a user speciﬁc adaptive mechanism
are being conducted. In addition, further works will concern
long term validation on real web services.

ICDS 2018 : The Twelfth International Conference on Digital Society and eGovernments
Copyright (c) IARIA, 2018.
ISBN: 978-1-61208-615-6
80
REFERENCES
[1]
M. L. Mazurek and et al., “Measuring password guessability for
an entire university,” in Proceedings of the 2013 ACM SIGSAC
Conference on Computer &#38; Communications Security, ser. CCS
’13.
New York, NY, USA: ACM, 2013, pp. 173–186. [Online].
Available: http://doi.acm.org/10.1145/2508859.2516726
[2]
B. Ur and et al., “Measuring real-world accuracies and biases in
modeling password guessability.” in USENIX Security Symposium,
2015, pp. 463–481.
[3]
R. Shay and et al., “Can long passwords be secure and usable?” in
Proceedings of the 32nd annual ACM conference on Human factors in
computing systems.
ACM, 2014, pp. 2927–2936.
[4]
P.
H.
Pisani
and
A.
C.
Lorena,
“A
systematic
review
on
keystroke dynamics,” Journal of the Brazilian Computer Society,
vol.
19,
no.
4,
2013,
pp.
573–587.
[Online].
Available:
http://dx.doi.org/10.1007/s13173-013-0117-7
[5]
B.
Fernandez-Saavedra,
R.
Sanchez-Reillo,
R.
Ros-Gomez,
and
J. Liu-Jimenez, “Small ﬁngerprint scanners used in mobile devices:
the impact on biometric performance,” IET Biometrics, vol. 5,
no.
1,
March,
pp.
28–36(8).
[Online].
Available:
http://digital-
library.theiet.org/content/journals/10.1049/iet-bmt.2015.0018
[6]
E. Marasco and A. Ross, “A survey on antispooﬁng schemes
for
ﬁngerprint
recognition
systems,”
ACM
Comput.
Surv.,
vol. 47, no. 2, Nov. 2014, pp. 28:1–28:36. [Online]. Available:
http://doi.acm.org/10.1145/2617756
[7]
D. F. Smith, A. Wiliem, and B. C. Lovell, “Face recognition on
consumer devices: Reﬂections on replay attacks,” IEEE Transactions
on Information Forensics and Security, vol. 10, no. 4, April 2015, pp.
736–745.
[8]
R. Giot, M. El-Abed, B. Hemery, and C. Rosenberger, “Unconstrained
keystroke dynamics authentication with shared secret,” Computers &
security, vol. 30, no. 6, Sept 2011, pp. 427–445.
[9]
H. C¸ eker and S. Upadhyaya, “Adaptive techniques for intra-user
variability in keystroke dynamics,” in 2016 IEEE 8th International
Conference on Biometrics Theory, Applications and Systems (BTAS),
Sept 2016, pp. 1–6.
[10]
P. H. Pisani, R. Giot, A. C. De Carvalho, and A. C. Lorena, “Enhanced
template update: Application to keystroke dynamics,” Computers &
Security, vol. 60, July 2016, pp. 134–153.
[11]
E.
Yu
and
S.
Cho,
“Keystroke
dynamics
identity
veriﬁcation
its
problems
and
practical
solutions,”
Computers
&
Security,
vol. 23, no. 5, July 2004, pp. 428 – 440. [Online]. Available:
http://www.sciencedirect.com/science/article/pii/S0167404804000963
[12]
M. S. Obaidat and B. Sadoun, “Veriﬁcation of computer users using
keystroke dynamics,” IEEE Transactions on Systems, Man, and Cyber-
netics, Part B (Cybernetics), vol. 27, no. 2, April 1997, pp. 261–269.
[13]
K. S. Killourhy, R. Maxion et al., “Comparing anomaly-detection algo-
rithms for keystroke dynamics,” in Dependable Systems & Networks,
2009. DSN’09. IEEE/IFIP International Conference on, IEEE.
IEEE,
2009, pp. 125–134.
[14]
C. Epp, “Identifying emotional states through keystroke dynamics,”
Ph.D. dissertation, University of Saskatchewan Saskatoon, 2010.
[15]
A. N. H. Nahin, J. M. Alam, H. Mahmud, and K. Hasan, “Identifying
emotion by keystroke dynamics and text pattern analysis,” Behaviour
& Information Technology, vol. 33, no. 9, May 2014, pp. 987–996.
[16]
C. Gonzalez, B. Best, A. F. Healy, J. A. Kole, and L. E. Bourne,
“A cognitive modeling account of simultaneous learning and fatigue
effects,” Cognitive Systems Research, vol. 12, no. 1, March 2011, pp.
19–32.
[17]
L. Didaci, G. L. Marcialis, and F. Roli, “Analysis of unsupervised
template update in biometric recognition systems,” Pattern Recognition
Letters, vol. 37, February 2014, pp. 151–160.
[18]
N. Poh, A. Rattani, and F. Roli, “Critical analysis of adaptive biometric
systems,” IET biometrics, vol. 1, no. 4, December 2012, pp. 179–187.
[19]
A. Rattani, B. Freni, G. L. Marcialis, and F. Roli, “Template update
methods in adaptive biometric systems: a critical review,” in Advances
in Biometrics.
Springer, 2009, pp. 847–856.
[20]
A. Rattani, “Adaptive biometric system based on template update
procedures,” Dept. of Elect. and Comp. Eng., University of Cagliari,
PhD Thesis, 2010.
[21]
N. Poh, J. Kittler, S. Marcel, D. Matrouf, and J. F. Bonastre, “Model and
score adaptation for biometric systems: Coping with device interoper-
ability and changing acquisition conditions,” in 2010 20th International
Conference on Pattern Recognition, Aug 2010, pp. 1229–1232.
[22]
C. Pagano, E. Granger, R. Sabourin, P. Tuveri, G. Marcialis, and
F. Roli, “Context-sensitive self-updating for adaptive face recognition,”
in Adaptive Biometric Systems.
Springer, October 2015, pp. 9–34.
[23]
A. Serwadda and et al., “Scan-based evaluation of continuous keystroke
authentication systems,” IT Professional, vol. 15, no. 4, July-Aug 2013,
pp. 20–23.
[24]
A. Rattani, G. L. Marcialis, and F. Roli, “Biometric system adaptation
by self-update and graph-based techniques,” Journal of Visual Lan-
guages & Computing, vol. 24, no. 1, February 2013, pp. 1–9.
[25]
B. Freni, G. L. Marcialis, and F. Roli, “Replacement algorithms
for ﬁngerprint template update,” in Image Analysis and Recognition.
Springer, 2008, pp. 884–893.
[26]
T. Scheidat, A. Makrushin, and C. Vielhauer, “Automatic template
update strategies for biometrics,” Otto-von-Guericke University of
Magdeburg, Magdeburg, Germany, 2007.
[27]
F. Roli, L. Didaci, and G. L. Marcialis, “Template co-update in
multimodal biometric systems,” in Advances in Biometrics.
Springer,
2007, pp. 1194–1202.
[28]
A. Rattani, G. L. Marcialis, and F. Roli, “Capturing large intra-class
variations of biometric data by template co-updating,” in Computer
Vision and Pattern Recognition Workshops, 2008. CVPRW’08. IEEE
Computer Society Conference on.
IEEE, 2008, pp. 1–6.
[29]
P. Kang, S.-s. Hwang, and S. Cho, “Continual retraining of keystroke
dynamics based authenticator,” in Advances in Biometrics.
Springer,
2007, pp. 1203–1211.
[30]
P. H. Pisani, A. C. Lorena, and A. C. de Carvalho, “Adaptive approches
for keystroke dynamics,” in Neural Networks (IJCNN), The 2015
International Joint Conference on, 2015, pp. 1–8.
[31]
R. Giot, C. Rosenberger, and B. Dorizzi, “Hybrid template update sys-
tem for unimodal biometric systems,” in 2012 IEEE Fifth International
Conference on Biometrics: Theory, Applications and Systems (BTAS),
Sept 2012, pp. 1–7.
[32]
R. Giot, M. El-Abed, and C. Rosenberger, “Web-based benchmark
for keystroke dynamics biometric systems: A statistical analysis,” in
Intelligent Information Hiding and Multimedia Signal Processing (IIH-
MSP), 2012 Eighth International Conference on.
IEEE, 2012, pp.
11–15.
[33]
R. Giot, M. El Abed, and C. Rosenberger, “Greyc keystroke: A
benchmark for keystroke dynamics biometric systems,” in 2009 IEEE
3rd International Conference on Biometrics: Theory, Applications, and
Systems, Sept 2009, pp. 1–6.
[34]
K. Killourhy and R. Maxion, “Why did my detector do that?!” in
International Workshop on Recent Advances in Intrusion Detection, vol.
6307, Springer.
Springer, 2010, pp. 256–276.
[35]
Z. Akhtar, A. Ahmed, C. E. Erdem, and G. L. Foresti, “Biometric
template update under facial aging,” in Computational Intelligence in
Biometrics and Identity Management (CIBIM), 2014 IEEE Symposium
on.
IEEE, 2014, pp. 9–15.
[36]
S. Hocquet, J.-Y. Ramel, and H. Cardot, “User classiﬁcation for
keystroke dynamics authentication,” in International Conference on
Biometrics.
Springer, 2007, pp. 531–539.
[37]
A. Mhenni, C. Rosenberger, E. Cherrier, and N. Essoukri Ben Amara,
“Keystroke template update with adapted thresholds,” in International
Conference on Advanced Technologies for Signal and Image Processing
(ATSIP), 2016.

