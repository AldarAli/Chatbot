A Quality Criteria Framework for Pattern Validation
Daniela Wurhofer, Marianna Obrist, Elke Beck & Manfred Tscheligi
Christian Doppler Laboratory for “Contextual Interfaces”
HCI & Usability Unit, ICT&S Center
University of Salzburg
Salzburg, Austria
Email: {ﬁrstname.lastname}@sbg.ac.at
Abstract—Patterns represent an important tool for commu-
nicating, documenting, and looking up best practices for both
novice and expert system developers and designers. Working
in the ﬁeld of patterns not only requires a well-structured
approach to develop new patterns but also a guidance to
validate patterns in order to ensure a high quality. Although
there are a number of different patterns and pattern languages
available, it is still unclear how to validate patterns in a
structured way. Within this paper, we aim to ﬁll this gap
by introducing a Quality Criteria Framework developed on
the basis of existing pattern research. Particularly, ﬁve main
quality criteria for patterns will be presented and discussed
in detail. The idea of our framework is to provide structured
guidance for validating patterns in a comprehensive way by
using quality criteria. In order to show the applicability of
the quality criteria framework in practice, a case study using
selected criteria from the framework for validating an existing
pattern collection was conducted. This case study showed the
appropriateness of our framework for validating patterns and
iterating them on the basis of the validation results.
Keywords-patterns; validation; quality framework; valida-
tion methods; case study.
I. INTRODUCTION
This paper aims to give a detailed overview on current
research on the validation of patterns and to thoroughly
introduce a comprehensive framework for validating patterns
based on our previous work presented at the PATTERNS
2009 conference [1]. This work is part of our research
towards contextual user experience patterns within the Chris-
tian Doppler Laboratory for “Contextual Interfaces”. The
framework was already applied in a speciﬁc context, namely
the case study presented in this paper (audiovisual systems)
and is currently explored in other contexts. Thereby, knowl-
edge gained on contextual user experience [2] is preserved
by using the pattern approach.
In general, patterns are characterised by capturing useful
design solutions and generalizing them to address similar
problems [3]. Borchers [4] deﬁnes design patterns as a
structured textual and graphical description of a proven
solution to a recurring design problem. This also underpins
the reusability of patterns which was especially emphasized
by Martin, Rounceﬁeld, and Sommerville, [5]. Tidwell [6]
stresses the fact that patterns are neither heuristics nor com-
plete step-by-step descriptions of how to solve a problem
but descriptions of best practices.
Since patterns have been introduced in urban architecture
in the 1970s by Christopher Alexander [7], they have turned
out to be an important tool for communicating, documenting,
and looking up best practices for both novices and experts in
different domains. According to van Welie [8], documenting
and looking up best practices improves the quality of design
solutions and can reduce time and effort for designing new
projects considerably, provided that the patterns themselves
are of high quality. Moreover, patterns facilitate commu-
nication between different stakeholders (e.g., designers and
programmers) as they support the forming of a collective vo-
cabulary and thus avoid misunderstandings and ambiguities
[9].
Patterns have become popular in different domains,
involving architecture [10], software engineering (e.g.,
[11][12][13]), human-computer interaction and interface de-
sign (e.g., [14][15][16][6][17][18][19]), ubiquitous comput-
ing [20], game design [21], and pedagogics [22].
Despite the broad application range of patterns, there
is still a lack of research on the validation of patterns.
In particular, there is a lack of consistent quality criteria
for patterns and pattern languages as well as appropriate
validation methods. According to Dearden & Finlay [23],
the evaluation of how useful selected patterns are in practice
is important but has been hardly considered up to now. Sim-
ilarly, McGee [21] claims that there is a need for materials
to support the creation and revision of patterns. Although
there have been some attempts to validate patterns, these
validations have focused on speciﬁc application domains or
have only regarded selected aspects. Thus, a comprehensive
framework for validating patterns in different application
areas involving all relevant criteria which account for the
quality of a pattern is still missing.
Within this paper we aim to ﬁll this gap by present-
ing a common and comprehensive validation approach for
patterns. By introducing a so-called quality criteria frame-
work, a novel way of validating patterns based on clearly
deﬁned quality criteria is described. In order to deﬁne a
252
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

comprehensive framework, we ﬁrst collected and analyzed
existing criteria, guidelines and requirements for patterns.
Based on this extensive desktop research, we developed our
own validation framework. To prove the applicability of our
framework in practice, we ﬁnally applied it for improving an
existing pattern collection. Therefore, we conducted a case
study with an existing pattern collection. On the basis of
quality criteria chosen from our framework, selected patterns
of the collection were iterated and improved using both
qualitative (interactive pattern workshop) and quantitative
(pattern checklist) methods.
The present paper is structured as follows: In the ﬁrst
part of the paper we will introduce related work and discuss
existing criteria, guidelines, and requirements for the pat-
terns we use for clustering and developing a comprehensive
quality criteria framework. The second part of the paper is
dedicated to the development and description of our quality
criteria framework, in which each component is presented in
detail. Next, we show how we applied the developed quality
criteria framework for validating and improving an existing
pattern collection. Finally, we discuss insights gathered from
the validations done on the basis of our framework and give
an outlook for future work.
II. RELATED WORK
Patterns have to be evaluated to prove their quality. How-
ever, the question of how to evaluate patterns profoundly is
still vague and remains a challenge for those who develop
and improve patterns and pattern languages.
A. Quality Criteria for Patterns
There are several collections of criteria, guidelines, and
requirements available which aim at deﬁning what makes
patterns and pattern languages high-quality. The ﬁve pre-
sented collections range from a focus on single patterns
themselves to an overall view on pattern languages and
frameworks, deriving from different pattern domains, e.g.,
design, human-computer interaction (HCI), and software de-
velopment. We have analyzed these collections with regard
to differences and similarities of the used quality criteria as
presented in Table I. Based on the related work, we have
clustered the collected criteria for patterns and/or pattern
languages and used them as a starting point for our quality
criteria framework.
One collection of quality requirements for pattern lan-
guages was compiled by Niebuhr, Kohler, and Graf [24].
Based on the challenges they experienced when identifying
and developing patterns, they state four successive quality
criteria which should be considered. The “problem ﬁt”
criterion is achieved when a pattern has successfully been
identiﬁed as appropriate to a design or development problem.
A high-quality pattern makes it easy to understand its
content, and consequently the idea of the pattern (“under-
standability”). Once the pattern has been discovered and
understood, it needs to offer a valid solution to the problem
(“correctness”). The ﬁnal challenge for the pattern user
lies in realizing the pattern solution to solve the design or
development problem (“concretization”).
Another attempt to describe requirements for the qual-
ity of patterns comes from McGee [21], who described
general characteristics of patterns. A pattern is required to
be “operational and precise” in order to be transferable
to a concrete solution and to be “positive”, which means
that it demonstrates ‘good practices’ instead of bad ones.
Further, a pattern should be “ﬂexible” in such a way as
to offer several solutions to a problem and “debatable”,
meaning that it is comprehensible enough to be discussed.
Furthermore, a “testable” pattern allows an empirical conﬁr-
mation of improvements through pattern implementation and
an “end-user oriented” pattern strives for a consideration
of end-users’ perspectives. McGee [21] also introduced
the characteristic “positive” for patterns, which we have
not considered as valuable as a quality criterion for our
framework, since patterns represent best practices and are
therefore positive by deﬁnition.
Furthermore, Khazanchi, Murphy, and Petter [25] deﬁned
the following guidelines for evaluating patterns according
to Christopher Alexander’s vision of a ‘quality without a
name’. The “plausibility” criterion is related to the con-
sistency of knowledge embedded in the pattern of existing
knowledge in the ﬁeld of design or development. Thus,
the pattern has to reach a level of believability among the
pattern users. When a pattern achieves the “feasibility”
criterion it can be operationalized and applied to a problem.
Further, the description of a pattern has to be understandable
(“effectiveness”) which comprises qualities like e.g., com-
prehensiveness, consistency, and completeness. Consistency
is not only necessary among parts of a pattern, but also
within patterns which belong to the same problem area
(“pragmatic”). Furthermore, pattern descriptions need to
include “empirical” evidence in order to verify the intended
pattern output. Finally, Khazanchi, Murphy, and Petter [25]
consider a pattern to be “predictive” by nature, when it is
reliable in its effect every time it is applied.
A great deal of the previously described criteria is exam-
ining in detail the structural quality of patterns and pattern
languages, but misses a broader view on the context of their
usage. Borchers [4] deﬁned a set of requirements for an in-
terdisciplinary pattern language framework for the design of
interactive systems, which also includes domain-speciﬁc as-
pects. He emphasizes that a pattern framework requires to be
understandable for people from different disciplines (“cross-
discipline readability”). The involvement of different do-
mains (e.g., HCI, software engineering) additionally leads
to the necessity of a “domain-independent, uniform, well-
deﬁned format” for pattern languages. Again, “empirical
evidence” of the pattern is regarded as important to prove the
pattern’s validity. Further, the collection of patterns should
253
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Table I
COLLECTION OF QUALITY CRITERIA FOR PATTERNS AND/OR PATTERN LANGUAGES BASED ON A LITERATURE REVIEW AS WELL AS THE DERIVED
CRITERIA USED WITHIN THIS PAPER (ON THE RIGHT COLUMN).
Niebuhr et al.
McGee (2007)
Khazanchi et al.
Borchers (2001)
Dearden et al.
This Paper
(2008)
(2008)
(2008)
Problem Fit
Findability
Domain-appropriate,
design-supporting hierarchy
Pragmatic
Understandability
Debatable
Effectiveness
Understandability
Flexible
Cross-discipline readability
Design dimension coverage
Domain-independent,
uniform, well-deﬁned
format
Concretisation
Operational and precise
Feasibility
Generative design
Helpfulness
Lifecycle integration
Correctness
Testable
Empirical
Empirical evidence
Empirical veriﬁcation
Predictive
Plausibility
Overall acceptability
End-user oriented
Positive
Empowering users
Life-enhancing outcomes
be arranged in a hierarchical order, following the logic
of the design/development process (“domain-appropriate,
design-supporting hierarchy”). The next criterion, “design
dimension coverage”, is used to consider domain-speciﬁc
dimensions for the pattern language. The descriptions of
interaction patterns, for example require the inclusion of a
temporal dimension as an important characteristic of inter-
actions. Furthermore, a pattern language framework requires
to give hints on how it can be integrated into the software
development lifecycle (“lifecycle integration”).
The last criteria collection of Table I refers to the stake-
holders who deploy patterns. The two main stakeholders are
usually designers and developers who have to be supported
by patterns in speciﬁc ways [26]. In addressing a participa-
tory design approach, Dearden, Finlay, Allgar, and McManus
focused on the suitability of pattern languages as design
tools for users acting as non-professional designers [27]. In
other words, patterns and pattern languages do not only have
to be valuable for professional designers and developers,
but also be comprehensible for non-professionals. In line
with the position of Christopher Alexander, Dearden, Finlay,
Allgar, and McManus discussed three criteria for evaluating
patterns. First, pattern languages have to be written in
a way which enables users to generate complete designs
(“generative design”). Second, the pattern language needs
to be valuable for “empowering users” to participate in
a design process and third, the deployment of the pattern
should lead to “life-enhancing outcomes” for the users.
As shown in Table I, quality criteria of patterns and/or
pattern languages from different sources and theories some-
times overlap, and sometimes they put their focus on differ-
ent aspects.
In this paper, we aim at a conﬂation of the different
aspects into a uniﬁed quality criteria framework, which
should aid the validation of patterns and pattern languages
and thereby the iterative development/improvement of the
patterns. Based on the related work we have identiﬁed ﬁve
types of quality criteria, which are listed in the right column
of Table I and discussed in detail in the following sections.
A further challenge is how to apply these criteria for the
validation of patterns and pattern languages, namely ﬁnding
the right methodological validation approach.
B. Validation of Patterns
For validating patterns against certain quality aspects,
mainly two approaches are considered:
1) Expert/stakeholder based evaluation of patterns fusing
for instance heuristics, checklists, workshops, etc.
2) Practical
usage
and
evaluation
of
patterns
with
stakeholders, such as designers and developers.
The ﬁrst approach is based on heuristics, guidelines,
and peer-reviewing. An established way of investigating the
quality of patterns together with peers (designers, developers
of a system) is to conduct shepherding and writer’s work-
shops (see [28][29]). Speciﬁc requirements and as well as
checklists were also used for validating patterns.
Borchers [4] evaluated whether the developed interaction
pattern framework meets a set of requirements. In order to
get insights about the didactic usefulness of patterns, he
254
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

additionally distributed a survey to HCI design students. This
survey revealed information about the amount of memorized
patterns as well as the patterns’ usefulness for their project
and for reuse in future design projects [4]. It turned out that
the students considered patterns as useful and easy to use.
However, a constraint of this study is the fact that it lacks
comparison with other types of design advices.
Similar to Borchers [4], McGee [21] provided his design
students with a game design pattern guideline as well as a so-
called evaluation checklist in the form of questions. These
materials were intended to support the pattern creation as
well as to ﬁnd weaknesses of existing patterns. In general,
they can support developers in creating and improving
innovative games.
Dearden, Finlay, Allgar, and McManus [27] evaluated
the usefulness of patterns as tools for participatory design.
Therefore, they deﬁned three criteria and investigated these
criteria by involving six participants in a participatory design
task. According to the authors, the results of their study
show that patterns can have a beneﬁt in empowering users
to participate in the design process. A comparison with
alternative methods was not made.
The second approach of empirical evidence is based on
many researchers’ claim (e.g., [30]) that it is important to put
patterns into use to judge their quality. For example, Chung
et al. [20] conduced a controlled study with designers to
evaluate the helpfulness of design patterns for ubiquitous
computing. Two groups of designers had to complete tasks,
one with and the other one without the help of design
patterns. Afterwards, the results from both groups were
analyzed comparing the quality differences in the design
output and investigating the usefulness of the patterns for
design. From their ﬁndings the authors conclude that the
patterns supported both new and experienced designers who
are not familiar with ubiquitous computing. In particular,
their patterns facilitated the generation and communication
of ideas and avoided design problems early in the design
process.
Cowley and Wesson [31] conducted an experimental study
on the usefulness of patterns, investigating the use of design
patterns in comparison to the use of guidelines. The task was
to evaluate and redesign an existing website. For this task, an
experimental group used a selection of patterns, whereas a
control group used guidelines similar to the selected patterns.
Based on their preliminary results, the authors concluded
that developers were more positive about design patterns
than guidelines with respect to potential for evaluation,
redesign, and new design.
Kotz´e, Renaud, and Biljon [22] compared the effective-
ness of patterns and anti-patterns in education. In order to
identify the differences, they conducted two studies. Ac-
cording to their ﬁndings the authors claim that patterns are
easier to learn from than anti-patterns. Thus, they consider
the pattern-approach as more promising for educational
purposes. In a more general way, their results can also be
interpreted as evidence that negatively framed guidance is
harder to learn from than positively framed guidance.
In a qualitative case study, Segerst˚ahl and Jokela [32]
investigated and compared the usability of two popular
pattern collections. In the practical context of an industrial
development project, they explored and compared Tidwell’s
‘Common Ground” collection, and Van Welie’s pattern
collection. As a result of their study, the researchers gave
suggestions on how to improve collections of design patterns
and thus make them easier to use.
In our paper we address the challenge of how to apply
the criteria for the validation of patterns, namely ﬁnding
the right methodological validation approach, and to validate
selected UX patterns using our quality criteria framework.
III. QUALITY CRITERIA FRAMEWORK
In order to have a theoretical basis for the validation of
patterns, we developed a quality criteria framework based
on existing research as presented in the previous section.
The framework aims to summarize and extend knowledge
in this area and therefore represents a “meta-view” on what
constitutes a high-quality pattern.
As shown in Table I, ﬁve superior quality criteria rep-
resenting the most important characteristics of high-quality
patterns were deﬁned. The following superior criteria were
identiﬁed for the quality criteria framework and further
divided into sub-criteria if appropriate - see overview in
Figure 1. Clearly, the present categorization is not always
selective, i.e. some sub-criteria could also be subsumed
under another criterion. This particularly applies to the sub-
criteria of understandability and helpfulness. For example,
the sub-criterion problem-centeredness (subsumed under the
criterion understandability) could also be subsumed under
the criterion helpfulness. In the following sections, each
criterion will be described in more detail.
A. Findability
Our criterion called “ﬁndability” states that a pattern
has to be found easily and quickly within a pattern col-
lection/pattern language. It is based on the assumption that
if it takes too much time or effort for a potential pattern
user to ﬁnd a suitable pattern for a speciﬁc problem, the
adoption of patterns fails already at the beginning. Therefore,
the fact that a pattern can be easily found within a set of
patterns seems to be an essential indicator for the quality
of a pattern collection/language. When investigating this
criterion, it could, for instance, be checked if the patterns
of a pattern collection/pattern language are organized in a
hierachical manner, guiding the user top-down to a suitable
pattern.
The ﬁndability criterion is in line with a requirement for
an interdisciplinary pattern language framework deﬁned by
255
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Comprehensibility
of Pattern Parts
Comprehensibility
of Pattern Parts
Comprehensibility
of Pattern Parts
Comprehensibility
of Pattern Parts
Figure 1.
Overview on Components of the Quality Criteria Framework.
Borchers [4], namely the requirement asking for a “domain-
appropriate, design-supporting hierarchy”. Similarly, Khaz-
anchi, Murphy, and Petter [25] consider the consistency
of a pattern within other patterns in a problem class as
“pragmatic”, and Niebuhr, Kohler, and Graf [24] mention
a quality requirement for patterns called “problem ﬁt”. The
identiﬁed “ﬁndability” quality criteria stands for its own and
does not comprise sub-criteria.
B. Understandability
Our criterion “understandability” deals with the fact that
the pattern must be easily understood by its users. Ensuring
the comprehensibility of every pattern part (name, problem,
forces, etc.) improves the applicability of the pattern in
practice. For assessing this criterion, it could be asked if
one ﬁnds the name of the pattern meaningful and can
ﬁgure out the main idea of the pattern (when reading its
name). This mainly addresses the quality of the sub-criterion
comprehensibility of pattern parts (see enumeration below).
Niebuhr, Kohler, and Graf [24] state that the wording and
notation of the pattern description must be understandable
in order to successfully identify and apply the pattern.
McGee [21] indicates that a pattern should be debatable
as well as ﬂexible in the sense that there is more than
one solution. According to Khazanchi, Murphy, and Petter
[25], a guideline for evaluating patterns is to prove the
pattern’s effectiveness. In line with this, Borchers [4] poses
the requirements of a “cross-discipline readability”, “design
dimension coverage”, and “domain-independent, uniform
and well-deﬁned format”. In order to describe the under-
standability criterion as well as possible and thus provide a
basis for the operationalization of this criterion, we deﬁned
the following sub-criteria:
a) Completeness of Information
A pattern should contain all relevant description of
forces, problems, solutions, and examples to clarify
its notion. The quality of a pattern therefore depends
on its completeness. A pattern should be considered
as “complete” when the necessary information is given
in the pattern.
b) Language
A pattern should use a language which is easy to un-
derstand. For example, the terms used should be well-
known and the sentences should not be too complex.
Overall, patterns should be written in a way which
is acceptable and appealing to every user, regardless
of the discipline he comes from. The clearness of a
pattern as well as a well-readable writing style are thus
indicators for the quality of a pattern/pattern language.
c) Problem-Centeredness
A pattern should be centered around a problem. There-
fore, all parts of a pattern (e.g., name, forces, solution)
should be derived from the problem. For example,
the relationship between the problem and the solution
should be clear. A pattern in which all parts are
related to the problem description therefore represents
a pattern of high quality.
d) Balance between Concreteness and Abstractness
A pattern should neither be too abstract nor too con-
crete. If it is too abstract, one can not ﬁgure out how
to apply the pattern to other applications/systems. If it
is too concrete, the solutions can not be generalized.
A high-quality pattern should therefore have a good
balance between concreteness and abstractness.
e) Comprehensibility of Pattern Parts
All parts of a pattern description should be compre-
hensible to the pattern users. One should know what
256
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

is meant by them. For example, the name of the
pattern should be meaningful so that the main idea
of the pattern can be ﬁgured out instantly. The stated
forces should provide enough background informa-
tion, and the context of application should be clear.
The provided solutions should be concrete enough
and should not impose new questions. The examples
given should be comprehensible and plausible. A high-
quality pattern should therefore be characterized by a
high comprehensibility of each single pattern part.
C. Helpfulness
This category implies that the pattern has to be (or is sup-
posed to be) helpful for the pattern user. For being helpful,
the implementation of the pattern has to be feasible for the
pattern user, meaning that the pattern description gives the
user sufﬁcient information about how to realize the pattern
in practice. The category helpfulness can be further divided
into “subjective” and “objective” helpfulness, differentiating
between the supposed and the actual helpfulness (objectively
measured by case studies, etc). Therefore, this category is
based on the assumption that if the pattern/pattern collection
is not supposed to be helpful, it will not be used (subjective
helpfulness) or that if the pattern/pattern collection has not
been helpful, it will not be reused (objective helpfulness).
The helpfulness criterion could be investigated for example
by letting participants summarize the main content of a
pattern which was presented to them some time ago, in one
sentence. The results give insight about the quality of the
sub-criterion memorability (see enumeration below).
In their paper, Khazanchi, Murphy, and Petter [25] refer
to this characteristic as “feasibility”. Similarly, Niebuhr,
Kohler, and Graf [24] identify the process of transferring
a rather abstract pattern description to a concrete solution as
“concretization”. Borchers [4] claims that a pattern language
has to specify a way how the patterns can be integrated in
the development lifecycle. McGee [21] characterizes a good
pattern as “operational and precise”, and Dearden, Finlay,
Allgar, and McManus [27] state that pattern languages
should support “generative design”.
In order to describe the helpfulness criterion as com-
prehensive as possible and thus provide a basis for the
operationalization of this criterion, we deﬁned the following
sub-criteria:
a) Improvement of Design/Architecture
A pattern should serve as a design or development
aid. With the help of a pattern, the development of
new applications and the improvement of existing
applications is supported. Therefore, the high quality
of a pattern is indicated by the fact that the pattern
helps to improve the design or development of systems
(depending on the application area of the patterns).
b) Problem Solving
A pattern should be able to provide best practices and
solutions to common problems. Upon knowing proven
solutions or best practices beforehand, one can avoid
certain problems. Therefore, a pattern which helps to
avoid common problems represents a pattern of high
quality concerning this criterion.
c) Support of Communication
Designers, developers, and researchers do not always
speak the same “language”. Patterns should therefore
serve as a common ground for discussions about
design and development issues. A pattern of high
quality should therefore provide a common basis for
designers, developers, and researchers and thus sup-
port (interdisciplinary) communication.
d) Capturing of Knowledge
A pattern represents a tool for capturing previously
gained knowledge. The knowledge described in a
pattern should appear relevant to the pattern user.
A pattern which captures relevant knowledge about
its application domain thus represents high quality
regarding this criterion.
e) Memorability
A pattern has to be easy to remember in terms of both
recognition and recall. When talking about a pattern,
its content should be memorized thoroughly in order
to support efﬁcient communication and usage of the
pattern. A pattern whose main idea can be retrieved
in a quick and easy way therefore represents a pattern
of high quality.
f) Feasibility
A pattern should be easy to realize or implement in
practice. In order to support the right implementation
of a pattern, particularly the solution must be clear
for the pattern user. A pattern which can be easily
applied in real situations accounts for the high quality
of a pattern.
D. Empirical Veriﬁcation
Our criterion “empirical veriﬁcation” describes the fact
that a pattern is approved by empirical data. This can be
either achieved by creating patterns which are based on
results of empirical studies or by verifying existing pattern
collections empirically.
We claim that an empirically veriﬁed pattern is of higher
quality than a pattern which is “only” based on a person’s ex-
periences and observations. For example, if there is empirical
evidence which approves the “correctness” of the pattern, the
quality of the pattern is high.
Niebuhr, Kohler, and Graf [24] ask for empirical or
theoretical evidence in order to ensure the “correctness” of
a pattern. In line with Niebuhr et al., McGee [21] claims
that a pattern should be “testable”, i.e. offer the possibility
to empirically test the effects of using a certain pattern.
Khazanchi, Murphy, and Petter [25] claim that patterns
should have an empirical nature in order to make them
257
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

veriﬁable. Moreover, they claim that a pattern should be
“predictive”, meaning that it produces the same general
effect every time it is applied. Borchers [4] points out that
the examples given within a pattern should contain empirical
evidence of the validity of the solution whenever possible.
For this criteria we deﬁned no further sub-criteria.
E. Overall Acceptability
The criterion “overall acceptability” describes to what
extent a pattern user believes in the pattern, meaning how
much he agrees with its content. This category is based on
the assumption that if a potential pattern user does not agree
with the content of a pattern at all (for example because
it completely conﬂicts with previous experiences), he will
not accept the pattern and thus will not use it. Therefore,
the quality of a pattern is also affected by an individual’s
subjective acceptance of a pattern/pattern language. In order
to investigate the overall acceptability of a pattern, one
could ask if the reader of a pattern ﬁnds himself nodding in
agreement as he reads the pattern description. Assessing this
question would be an indicator for the sub-criterion “overall
agreement with pattern” (see enumeration below).
Khazanchi, Murphy, and Petter [25] refer to the term
“plausibility”, which means that a pattern should be coherent
and consistent with the knowledge of a particular domain.
According to McGee [21], a pattern should be “end-user
oriented”, meaning that not only developers or designers
appreciate a pattern, but also end-users who interact with
the system to be developed/designed. In order to describe
this criterion in a more focused way and thus provide a
basis for the operationalization of this criterion, we deﬁned
the following sub-criteria:
a) Overall Believe in Pattern
This sub-criterion deals with the overall believe in a
certain pattern. A high belief in a pattern represents a
high (subjectively experienced) quality of a pattern.
b) Overall Agreement with Pattern
This sub-criterion deals with the fact that a user should
be convinced of a pattern, i.e. the user should “ﬁnd
himself nodding in agreement as he reads the pat-
tern description” [21]. High (subjectively experienced)
quality of a pattern is therefore affected by a high
overall agreement with its content.
Based on the framework and its criteria deﬁned above, a
case study showing its practicability was conducted.
IV. CASE STUDY UX PATTERNS: PATTERN VALIDATION
BASED ON THE FRAMEWORK
In the three-year CITIZEN MEDIA research project,
focusing on the user experience (UX) of audiovisual net-
worked applications, we used the pattern approach to de-
velop so-called user experience patterns [33].
Our UX patterns are intended to show best practices
for common problems in the area of audiovisual systems,
providing designers and developers of audiovisual systems
with proven solutions on how to improve a user’s experience
when interacting with an audiovisual system.
Based on user evaluation data collected in three different
European testbeds (Germany, Austria, Norway) involving
over 8000 users, we developed about 30 UX patterns. An
actual version of the UX patterns can be found on the UX
pattern website1.
In Figure 2 the iterative development process of our
UX patterns is visualized. An initial pattern collection was
deﬁned based on the results of the ﬁrst evaluation phase
of the research project. This collection of patterns was then
iterated by conducting a writer’s workshop with researchers,
resulting in an extended UX pattern collection. Another
iteration was made on the basis of new results achieved
during the second evaluation phase as well as based on
feedback given by an independent expert, resulting in a
revised UX pattern collection.
Next, we wanted to make a validation of our pattern
collection in order to improve its quality. However, we had
to realize that there is still a lack of a common validation
approach for patterns. Therefore, we aimed to ﬁll this gap
by introducing a comprehensive quality criteria framework
for validating patterns in general. By means of this quality
criteria framework we made two more iterations of our UX
pattern collection, showing that this framework is applicable
in practice.
In the following, the case study should exemplify how
our quality criteria framework allows the structured oper-
ationalization and investigation of a pattern’s/pattern lan-
guage’s quality. The following UX patterns were selected
for validation from our collection of 30 UX patterns:
• Pattern 1: Self Presentation
• Pattern 2: Fun Factor
• Pattern 3: Initial Support
• Pattern 4: Real-Life Integration
• Pattern 5: Privacy Management
In order to describe the application of the framework in
practice, we shortly present the two methods we used - the
pattern workshop and the pattern checklist - following the
expert/stakeholder based validation approach (see Section
II, B). Table II gives an overview on the two conducted
validation sessions.
Due to time constraints during the validation sessions, we
focused on the (for us) most important criteria to improve
the existing UX patterns. Moreover, not all components of
our quality framework were applicable in the sessions. For
instance, exploring “ﬁndability” or “empirical veriﬁcation”
require practical usage of the patterns.
1http://hciunit.org/uxpatterns/
258
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Results of ﬁrst evaluation phase
Initial UX Pattern collection
Deﬁnition & Structure
of UX Patterns
Writer’s workshop
with researchers
Extended UX Pattern collection
Results of second
evaluation phase
Feedback on UX Patterns
by independent expert
Revised UX Pattern collection
Interactive Pattern Workshop
Revised UX Pattern collection
Pattern Checklist
Revised UX Pattern collection
Iteration
Iteration
Iteration
Iteration
Figure 2.
Steps in the UX Pattern Creation Process.
1) Interactive Pattern Workshop: In order to validate
and improve the quality of our UX patterns, an interactive
pattern workshop was conducted in April 2009.
Set-up: For the validation of the UX patterns, ﬁve
patterns were selected from the collection and analyzed in
detail during the workshop. Figure 3 presents the criteria
from the quality criteria framework which were chosen to
be validated in the workshop. Thus, the UX patterns were
validated with regard to their understandability, helpfulness
and overall acceptability.
The workshop was conducted at a stage in the pattern
development process where all deﬁned elements of a UX
pattern description were available (name, problem, solution,
examples). Familiarity with media design processes as well
as good command of English were deﬁned as prerequisites
for the workshop participants. The participants of the
workshop were six multimedia design students (5 females,
1 male) with a mean age of 22. The participants had about
ﬁve years of design experience on average. Four of the
participants did not know design patterns, and two of the
participants knew design patterns but never used them so far.
Procedure: For each of the ﬁve patterns, the following
questions were addressed in detail:
1) Is the pattern easy to understand? Especially: Is the
pattern comprehensible?
2) Is the pattern helpful for the designers? Especially: Is
the pattern easy to remember?
3) Do the participants accept the presented patterns?
In order to address the questions presented above, the
following procedure was deployed: At ﬁrst, the participants
were welcomed and invited to shortly introduce themselves.
Next, the workshop leaders gave a short introduction about
the workshop goals, the role of patterns within the design
process, and the speciﬁc role of UX patterns. Then, the
workshop participants were asked to do several exercises,
addressing the questions presented above.
The ﬁrst question presented above (understandability)
aims at investigating if the wording and the descriptive text
of the UX pattern are easy to understand by the designers.
Therefore, the comprehensibility of the UX pattern name
was investigated in detail using the so-called “name guessing
exercise”. In general, the name of a pattern should be short
and meaningful, expressing the aim of the pattern clearly.
To investigate the comprehensibility of a pattern’s name,
the participants were presented the name of the pattern
and then had to write one sentence about its supposed
aim. After guessing about the aim, the actual aim of the
pattern was presented, and the naming as well as suggestions
for improvement of the naming were discussed with the
participants.
Next, the comprehensibility of the other parts of the
UX pattern description was evaluated by the participants.
Therefore, the participants were given a so-called “compre-
hensibility questionnaire” (see Figure 5) to rate the compre-
hensibility of the pattern parts (problem, forces, solution) on
a ﬁve-point scale (from “absolutely agree” to “don’t agree
at all”). The participants had to read through the pattern
descriptions displayed on the beamer and ﬁll in the com-
prehensibility questionnaire. After each pattern round, the
incomprehensible parts were discussed and suggestions for
improvement were collected. Additionally, the questionnaire
contained two items asking the participants for an overall
rating of the pattern (see Figure 7) addressing the overall
acceptability (third question presented above).
In order to address the memorability of the selected UX
patterns (second question presented above), a so-called
“remembrance exercise” was conducted. Therefore, the
participants were handed out a sheet of paper containing
259
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Comprehensibility
of Pattern Parts
Figure 3.
Overview on Components of the Quality Criteria Framework covered by the Workshop.
Table II
OVERVIEW ON THE VALIDATION SESSIONS OF THE CASE STUDY
Validation method
No. of participants
Participants’ expertise
Type of feedback
Date of conduction
Interactive Pattern Workshop
6
Multimedia Design Students
Qualitative
April 2009
Pattern Checklist
6
Computer Science Students
Quantitative
June 2009
(again) only the name of a pattern. Having the name
of one of the ﬁve selected UX patterns, the participants
were requested to write down the main characteristics of
the pattern in one or two sentences. To get insights into
the supposed helpfulness in general, an open discussion
about the participants’ opinion on the helpfulness of the
presented UX patterns was conducted. Amongst others,
the participants were asked to discuss about the question
if patterns can support designers in giving users a more
positive experience and to describe the advantages and
disadvantages of patterns. Moreover, possible difﬁculties
in the usage of patterns as well as the usage of patterns
for real application design were discussed. Additionally,
the participants were asked to compare patterns with any
other type of design advice (design guidelines, UI Design
Principles) to judge their value. Furthermore, suggestions
for improvement were also subject of the discussion.
2) Pattern Checklist: In order to validate the quality of
the UX patterns a second time and thus further improve
their quality, a follow-up validation session using a so-called
“pattern checklist” was conducted in June 2009.
Set-up:
Based on the ﬁrst validation (interactive
pattern workshop), a checklist covering selected criteria
from the quality criteria framework was composed; the
selected criteria are shown in Figure 4. For this follow-up
validation, the same UX patterns as in the interactive
pattern workshop were used. Overall, the UX patterns were
validated with regard to their understandability, helpfulness,
and acceptability. At the point of time when this follow-up
validation was conducted, the UX pattern description was
complete and already iterated on the basis of the ﬁrst
validation (see Figure 2). In order to cover the target group
of designers as well as developers, the intended participants
were developers this time (ﬁrst validation was conducted
with designers). As the UX patterns are written in English,
another prerequisite for the participant selection was a good
command of English. The follow-up validation was then
conducted with six students of computer science.
Procedure: The main research question of the follow-
up validation was if the presented UX patterns would meet
the selected quality criteria. In more detail, the following
questions were addressed:
1) Is the pattern easy to understand? (Covering all sub-
criteria)
2) Is the pattern helpful for developers? (Covering sub-
criteria a)-d))
3) Do the participants accept the presented patterns?
In order to address these questions, a checklist was
composed. This checklist was intended to ﬁnd quality prob-
lems in (selected) patterns, similar to a traditional heuristic
evaluation in the ﬁeld of usability engineering. By reading
the pattern description and going through the heuristics, the
evaluators (participants) should judge the patterns’ compli-
260
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Comprehensibility
of Pattern Parts
Figure 4.
Overview on Components of the Quality Criteria Framework covered by the Checklist.
ance with the quality criteria.
The checklist was organized in the following manner
(see Figures 5, 6 and 7): The ﬁrst part of the checklist
(see Figure 5) contained the comprehensibility questionnaire
already used in the workshop and was intended to give
insights about the comprehensibility of all pattern parts. The
second part of the checklist (see Figure 6) covered all other
sub-criteria selected from the framework. Each item of the
checklist was intended to cover one single quality criterion.
The items of the checklist were formulated like heuristics
and the agreement with each item had to be indicated on a
ﬁve-point rating scale (ranging from “absolutely agree” to
“don’t agree at all”). Again, the acceptance of the presented
patterns was evaluated via the third part of the checklist (see
Figure 7) .
                                               
 
 
 
Participant Code: ___________________________________________________ 
 
Quality criteria for Pattern 1 (Self Presentation)  
 
All parts of a pattern description should be comprehensive to the pattern users. One should know what 
is meant by them. 
 
 
absolutely 
agree      
rather 
agree    
neutral  rather 
don’t 
agree     
don’t 
agree 
at all     
don’t 
know 
The name of the pattern is meaningful to 
me. I can figure out the main idea of the 
pattern. 
 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
The stated problem is clear to me. 
 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
The stated forces provide me enough 
background information. 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
I know to which context the pattern is 
applicable. 
 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
The provided solutions are concrete 
enough and don’t impose new questions. 
 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
The given examples are comprehensible 
and plausible. 
 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
[ ] 
 
 
 
A pattern should contain all relevant description of forces, problems, 
solutions and examples to make it clear to the user. For example all relevant 
forces should be considered. 
 
I would consider the pattern as “complete”, meaning that the 
necessary information is given in the pattern. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know 
 
A pattern should use a language which is easy to understand. For example, 
the terms used are well-known and the sentences are not too complex. 
Overall, patterns should be written in a way which is acceptable and 
appealing to every user (designer, developer …). 
 
The “language” of the pattern is clear to me. The style in which the 
pattern is written is well-readable to me. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
A pattern should be centered around a problem. Therefore, all parts of a 
pattern (e.g. name, forces, solution) should be build on the problem. For 
example, the relationship between the problem and the solution is clear. 
 
I think the pattern is problem-centered, i.e. all parts (e.g. name, 
forces, solution) are related to the problem description. 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
Figure 5.
Part one of the Pattern Checklist - Comprehensibility Question-
naire.
The procedure of the validation session was the following:
First, there was an introduction phase. During this phase, the
participants were informed about the goals of the validation,
the pattern approach and the speciﬁc role of UX patterns.
Furthermore, the quality criteria were explained so that the
participants were familiar with them before the validation
started. Then, the participants were asked to introduce
themselves, what they study and how much experience and
knowledge they have with patterns.
Next was the pattern review phase. In this phase, the
participants were given one of the ﬁve selected patterns as
well as the pattern checklist. The participants were then
asked to rate how much they think the quality criteria
applied to each of the patterns. In case of a low rating
they were asked to further state a reason. This phase was
followed by the discussion phase. After each pattern review,
the review ratings per pattern (and found problems) were
discussed in the group. Finally, the validation session was
closed with an overall discussion on the presented patterns.
3) Results and Implications of the Validations: The two
approaches for measuring the quality of patterns with regard
to certain aspects showed that the quality criteria framework
turned out as a valuable method for validating selected UX
patterns. Both validations yielded consensus based quality
judgements of the selected UX patterns as well as sug-
gestions for improvement of the presented patterns. Both
methods complemented each other in a good way and were
useful for improving the UX patterns. The workshop yielded
more qualitative data and focused on discussion, whereas
the checklist enabled a more structured feedback for further
reﬁnements of the patterns. The iterative deployment of
both methods proved to be helpful, as feedback from the
workshop could be integrated into the checklist.
At this point, we will only present the most important
implications for the development and restructuring of the
UX patterns based on the validations. One issue arising
261
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
 
A pattern should contain all relevant description of forces, problems, 
solutions and examples to make it clear to the user. For example all relevant 
forces should be considered. 
 
I would consider the pattern as “complete”, meaning that the 
necessary information is given in the pattern. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know 
 
A pattern should use a language which is easy to understand. For example, 
the terms used are well-known and the sentences are not too complex. 
Overall, patterns should be written in a way which is acceptable and 
appealing to every user (designer, developer …). 
 
The “language” of the pattern is clear to me. The style in which the 
pattern is written is well-readable to me. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
A pattern should be centered around a problem. Therefore, all parts of a 
pattern (e.g. name, forces, solution) should be build on the problem. For 
example, the relationship between the problem and the solution is clear. 
 
I think the pattern is problem-centered, i.e. all parts (e.g. name, 
forces, solution) are related to the problem description. 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
 
 
 
 
ICT&S, Human-Computer Interaction & Usability Unit 
     www.icts.sbg.ac.at 
 
A pattern should neither be too abstract nor too concrete. If it is too 
abstract, one can’t figure out how to apply the pattern to other 
applications/systems. If it is too concrete then the solutions can’t be 
generalized.   
 
I think that the balance between concreteness and abstractness is 
good. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
Overall, a pattern should serve as a design/development aid. With the help 
of a pattern, the development of new applications and the improvement of 
existing applications are supported. 
 
I think that the presented pattern helps to develop better A/V 
systems with regard to the user’s experience. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
The pattern should be able to provide best practices and solutions to 
common problems. When knowing these solutions beforehand, one can 
avoid these problems. E.g. by applying this pattern in the development of 
A/V systems, one avoids the problem of users not experiencing themselves 
as part of a community. 
 
I think that the presented pattern makes the user’s experience 
while using the system more positive. Common usage problems are 
avoided. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
Designers, developers and researchers do not always speak the same 
“language”. Patterns serve as a common ground for discussing about design 
and development issues. 
 
I think the presented pattern supports the communication of 
designers, developers and researchers by providing a common 
basis.   
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
A pattern represents a tool for capturing knowledge gained before. 
Knowledge described in a pattern should appear relevant to the pattern 
user. 
 
I think the presented pattern captures relevant knowledge about 
user experience. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
Overall, do you “believe” the Pattern?          
 
[ ] Yes    [ ] No    [ ] Don’t know  
 
Do you find yourself nodding in agreement as 
you read the Pattern description? 
 
[ ] Yes    [ ] No    [ ] Don’t know 
 
Comments: 
 
 
 
Figure 6.
Part two of the Pattern Checklist - Heuristics for Understand-
ability and Helpfulness.
                                               
 
 
 
ICT&S, Human-Computer Interaction & Usability Unit 
     www.icts.sbg.ac.at 
 
A pattern should neither be too abstract nor too concrete. If it is too 
abstract, one can’t figure out how to apply the pattern to other 
applications/systems. If it is too concrete then the solutions can’t be 
generalized.   
 
I think that the balance between concreteness and abstractness is 
good. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
Overall, a pattern should serve as a design/development aid. With the help 
of a pattern, the development of new applications and the improvement of 
existing applications are supported. 
 
I think that the presented pattern helps to develop better A/V 
systems with regard to the user’s experience. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
The pattern should be able to provide best practices and solutions to 
common problems. When knowing these solutions beforehand, one can 
avoid these problems. E.g. by applying this pattern in the development of 
A/V systems, one avoids the problem of users not experiencing themselves 
as part of a community. 
 
I think that the presented pattern makes the user’s experience 
while using the system more positive. Common usage problems are 
avoided. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
Designers, developers and researchers do not always speak the same 
“language”. Patterns serve as a common ground for discussing about design 
and development issues. 
 
I think the presented pattern supports the communication of 
designers, developers and researchers by providing a common 
basis.   
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
A pattern represents a tool for capturing knowledge gained before. 
Knowledge described in a pattern should appear relevant to the pattern 
user. 
 
I think the presented pattern captures relevant knowledge about 
user experience. 
 
   
  [ ] absolutely agree      
  [ ] rather agree     
  [ ] neutral    
  [ ] rather don’t agree      
  [ ] don’t agree at all     
 
  [ ] don’t know  
 
 
Overall, do you “believe” the Pattern?          
 
[ ] Yes    [ ] No    [ ] Don’t know  
 
Do you find yourself nodding in agreement as 
you read the Pattern description? 
 
[ ] Yes    [ ] No    [ ] Don’t know 
 
Comments: 
 
 
 
Figure 7.
Part three of the Pattern Checklist - Acceptance Questions.
from the “guessing exercise” and “remembrance exercise”
as well as from the discussions was the naming of the UX
patterns. The participants indicated that the naming often
did not clearly express the aim of the pattern, or that the
meaning was not clear. Especially verbs in the name of
the patterns (for example “Provide Personal Information”)
were often confusing for the participants. A poor rating
of the comprehensibility of the pattern name always came
along with a bad performance of the participants in the
remembrance exercise, thus conﬁrming that the name did not
express the meaning sufﬁciently. Based on the participants’
suggestions for improvement, their ratings as well as their
comments on the questionnaires, the names of all patterns
were iterated and verbs were removed from the pattern
names.
The “problem” part of the UX patterns was also iterated in
detail after the validations. The participants mainly disliked
that the problem statement was too general or abstract. Thus,
iterated versions of the patterns contain a more concrete
problem description.
The overall agreement with the presented patterns was
rather good. This conﬁrms the results of the discussions,
where the participants stated that they liked and understood
the structure and the content of the patterns.
Concerning the helpfulness of the patterns, the partici-
pants ﬁrst did not seem to be convinced. However, after
going through some patterns, they changed their opinion
and recognized patterns as an important tool for support-
ing the design/development process. The suggestion of the
participants to group the patterns according to more general
problems was realized after the ﬁrst validation.
A. Lessons Learned from the Case Study
When applying our framework in practice, its structure
(classiﬁcation in criteria and more speciﬁc sub-criteria)
turned out to be helpful for the development of evaluation
materials. It allowed us to pick out relevant criteria, which
we wanted to investigate within the validation sessions, and
supported a more creative approach for investigating speciﬁc
criteria. For example, we decided to investigate the quality
of our patterns regarding their memorability, i.e. how easy
they are to remember (sub-criterion ﬁve of the criterion help-
fulness). The precise deﬁnition of memorability given within
the framework brought us to the idea of developing a so-
called “remembrance exercise”. As we beneﬁted from such
a structured approach, we will also base the development of
future pattern evaluation material on such a framework.
Within the interactive patterns workshop, which was con-
ducted with design students, it turned out that our criteria
mostly matched with the requirements on patterns from a de-
signer’s point of view. During the discussions, the designers
considered ﬁndability, understandability and helpfulness as
very important for a pattern of high quality. However, the
helpfulness criterion was seen somewhat twofold: on the one
hand, designers indicated that support in solving common
problems by the use of patterns would be beneﬁcial for them.
On the other hand, they were critical of too much support,
as this could be negative for the designer’s creativity, i.e.
lowering the creative thinking process.
Comparing the results of the two validation sessions,
a fundamental difference can be stated. The ﬁrst valida-
tion session, conducted as an interactive pattern workshop,
brought many practically applicable results for improving
262
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the selected patterns but less quantitative judgements about
the quality of the patterns. In the second validation session, a
pattern checklist was used for rating selected quality criteria.
This brought quantitative results, but did hardly deliver
suggestions for the improvement of lower ranked patterns.
We therefore argue that the ideal way of validating and
at the same time improving a pattern is to combine both
approaches, i.e. to combine an interactive pattern workshop
with a pattern checklist.
V. CONCLUSION AND FUTURE WORK
The development of patterns is an iterative process. As the
iteration should lead to an improvement in quality, structured
support on how to improve a pattern’s quality is needed. In
this paper, we aim at giving such a structured support by
introducing a so-called quality criteria framework.
To show the framework’s practicability, it was applied
in a case study for validating the quality of selected User
Experience (UX) Patterns. Therefore, relevant criteria were
selected from the quality criteria framework and validated
by means of an interactive pattern workshop and a pattern
checklist. The results of the workshop and the checklist
provided important insights on the quality of the patterns
and thus helped to improve the patterns’ quality. By applying
these two methods successively (on the same patterns), an
iterative improvement of the patterns was achieved.
The case study indicates that our framework supports
the validation of a pattern’s quality. On the one hand,
the framework provides a structured selection of quality
aspects which should be validated and improved, and on the
other hand, using the framework ensures that no criterion is
ignored unintendedly. Furthermore, the methods applied in
the validation sessions (interactive pattern workshop, pattern
checklist) turned out to be valuable validation methods,
yielding helpful implications for the improvement of a
pattern’s quality.
An advantage of our validation framework is its broad
perspective, which should ensure a broad applicability. Cur-
rent approaches (see chapter on related work) often focus
on single aspects and criteria to judge patterns, but miss a
broader view. With our framework we provide a comprehen-
sive view (based on an extensive literature review) on what
is important to ensure a high quality for different kinds of
patterns. Thus, the risk to forget important issues is lowered.
Moreover, our framework supports the operationalization
of the quality criteria by introducing sub-criteria, which can
be selected depending on the pattern status and relevance
within an iterative validation process. This also inﬂuences
the selection of the method. Based on the experiences made
during our case study we assume that a pattern in its early
state beneﬁts more from open discussion and qualitative
data (e.g., interactive pattern workshop), whereas a more
mature pattern can be better improved based on quantitative
feedback (e.g., pattern checklist).
As future work we plan to investigate the components
of our quality criteria framework in more detail. As already
pointed out, the present categorization is not always selective
as some sub-criteria could also be subsumed under other
criteria. Therefore, we aim to ﬁnd out more about the
relationship of the criteria and sub-criteria, perhaps result-
ing in a more hierarchical framework. We further plan to
validate our UX patterns on the basis of our quality criteria
framework, especially dealing with the criteria not applied so
far. For example, criterion 4, “Empirical Validation”, should
be investigated in real design and development processes.
Overall, the second important validation approach, i.e. the
practical usage of patterns, should be deployed for validating
our patterns.
Additionally, we plan to extend our UX pattern website,
not only containing the UX patterns collection but also the
quality criteria framework as well as methods and tips for
pattern validation.
Furthermore, we currently extend our UX pattern collec-
tion to other contexts beyond the presented case study on
audiovisual systems. Within the Christian Doppler Labora-
tory for “Contextual Interfaces” we work on special context
areas, namely on the context car and factory. By applying
our quality criteria framework to these different contexts,
we want to further assure the general applicability of our
validation framework.
ACKNOWLEDGMENT
The ﬁnancial support by the Federal Ministry of Economy,
Family and Youth and the National Foundation for Research,
Technology and Development is gratefully acknowledged
(Christian Doppler Laboratory for “Contextual Interfaces”).
This work was partly also funded by the CITIZEN MEDIA
research project (funded by FP6-2005-IST-41).
REFERENCES
[1] D. Wurhofer, M. Obrist, E. Beck, and M. Tscheligi, “Introduc-
ing a comprehensive quality criteria framework for validating
patterns,” in 2009 Computation World: Future Computing,
Service Computation, Cognitive, Adaptive, Content, Patterns.
IEEE Computer Society, 2009, pp. 242–247.
[2] M. Obrist, M. Tscheligi, B. de Ruyter, and A. Schmidt,
“Contextual user experience: How to reﬂect it in interaction
designs?” in CHI ’10: Proceedings of the SIGCHI conference
on Human factors in computing systems.
ACM, 2010.
[3] A. Cooper, R. Reimann, and D. Cronin, About Face 3: The
Essentials of Interaction Design.
Indianapolis: Wiley, 2007.
[4] J. Borchers, A Pattern Approach to Interaction Design.
Chichester, England: John Wiley & Sons, 2001.
[5] D. Martin, M. Rounceﬁeld, and I. Sommerville, “Applying
patterns of cooperative interaction to work (re)design: e-
government and planning,” in CHI ’02: Proceedings of the
SIGCHI conference on Human factors in computing systems.
New York, NY, USA: ACM, 2002, pp. 235–242.
263
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[6] J. Tidwell, Designing Interfaces : Patterns for Effective In-
teraction Design.
O’Reilly Media, Inc., 2005.
[7] C. Alexander, S. Ishikawa, and M. Silverstein, A Pattern
Language: Towns, Buildings, Construction (Center for Envi-
ronmental Structure Series).
Oxford University Press, 1977.
[8] M. van Welie and G. van der Veer, “Pattern languages in
interaction design,” in Proceedings of IFIP INTERACT03:
Human-Computer Interaction.
IFIP Technical Committee
No 13 on Human-Computer Interaction, 2003, p. 527.
[9] T. Erickson, “Lingua francas for design: sacred places and
pattern languages,” in DIS ’00: Proceedings of the 3rd con-
ference on Designing interactive systems.
New York, NY,
USA: ACM, 2000, pp. 357–368.
[10] C. Alexander, The timeless way of building.
Oxford Univer-
sity Press, New York, 1979.
[11] E. Gamma, R. Helm, R. Johnson, and J. Vlissides, De-
sign patterns: elements of reusable object-oriented software.
Addison-Wesley Professional, 1995.
[12] M. Bernstein, “Patterns of hypertext,” in Hypertext, 1998, pp.
21–29.
[13] M. Nanard, J. Nanard, and P. Kahn, “Pushing reuse in
hypermedia design: golden rules, design patterns and con-
structive templates,” in HYPERTEXT ’98: Proceedings of the
ninth ACM conference on Hypertext and hypermedia : links,
objects, time and space—structure in hypermedia systems.
New York, NY, USA: ACM, 1998, pp. 11–20.
[14] D. A. Norman and S. W. Draper, User Centered System
Design; New Perspectives on Human-Computer Interaction.
Hillsdale, NJ, USA: L. Erlbaum Associates Inc., 1986.
[15] E. Bayle, R. Bellamy, G. Casaday, T. Erickson, S. Fincher,
B. Grinter, B. Gross, D. Lehder, H. Marmolin, B. Moore,
C. Potts, G. Skousen, and J. Thomas, “Putting it all together:
towards a pattern language for interaction design: A chi 97
workshop,” SIGCHI Bull., vol. 30, no. 1, pp. 17–23, 1998.
[16] T. Erickson, “The Interaction Design Patterns Page,” Web-
site, 2005, available online at http://www.visi.com/∼snowfall/
InteractionPatterns.html; retrieved at July 30th 2009.
[17] M. Van Welie, “A Pattern Library for Interaction Design,”
Website, 2005, available online at http://www.welie.com; re-
trieved at July 30th 2009.
[18] C. Crumlish and E. Malone, Designing Social Interfaces.
O’Reilly, 2009.
[19] C. Kruschitz and M. Hitz, “The anatomy of hci design pat-
terns,” in Patterns2009: Proceedings of the First International
Conferences on Pervasive Patterns and Applications.
IEEE,
2009.
[20] E. S. Chung, J. I. Hong, J. Lin, M. K. Prabaker, J. A.
Landay, and A. L. Liu, “Development and evaluation of
emerging design patterns for ubiquitous computing,” in DIS
’04: Proceedings of the 5th conference on Designing interac-
tive systems. New York, NY, USA: ACM, 2004, pp. 233–242.
[21] K. McGee, “Patterns and computer game design innovation,”
in IE ’07: Proceedings of the 4th Australasian conference on
Interactive entertainment.
Melbourne, Australia, Australia:
RMIT University, 2007, pp. 1–8.
[22] P. Kotz´e, K. Renaud, and J. v. Biljon, “Don’t do this - pitfalls
in using anti-patterns in teaching human-computer interaction
principles,” Comput. Educ., vol. 50, no. 3, pp. 979–1008,
2008.
[23] A. Dearden and J. Finlay, “Pattern languages in hci: A critical
review,” Human-Computer Interaction, vol. 1, pp. 49–102,
2006.
[24] S. Niebuhr, K. Kohler, and C. Graf, “Engaging patterns:
Challenges and means shown by an example,” in Engineering
Interactive Systems.
Berlin/ Heidelberg: Springer, 2008, pp.
586–600.
[25] D. Khazanchi, J. Murphy, and S. Petter, “Guidelines for evalu-
ating patterns in the is domain,” in MWAIS 2008 Proceedings,
http://aisel.aisnet.org/mwais2008/24, 2008, p. Paper 24.
[26] C. Graf, “A requirements engineering perspective to reposi-
tories for interaction patterns,” Accepted position paper for
EuroPLOP 2007 Focus Group, 2007.
[27] A. Dearden, J. Finlay, L. Allgar, and B. McManus, “Evaluat-
ing pattern languages in participatory design,” in Proceedings
of the Conference on Human Factors in Computing Systems.
ACM New York, NY, USA, 2002, pp. 664–665.
[28] T. Schummer, J. Borchers, J. C. Thomas, and U. Zdun,
“Human-computer-human interaction patterns: workshop on
the human role in hci patterns,” in CHI ’04: CHI ’04 extended
abstracts on Human factors in computing systems.
New
York, NY, USA: ACM, 2004, pp. 1721–1722.
[29] J. O. Borchers, “Chi meets plop: an interaction patterns
workshop,” SIGCHI Bull., vol. 32, no. 1, pp. 9–12, 2000.
[30] J. Borchers, “Interaction design patterns: Twelve theses,”
Position paper for the workshop Pattern Languages for In-
teraction Design: Building Momentum, CHI 2000, 2000.
[31] N. L. O. Cowley and J. L. Wesson, “An experiment to measure
the usefulness of patterns in the interaction design process,”
in INTERACT, 2005, pp. 1142–1145.
[32] K. Segerst˚ahl and T. Jokela, “Usability of interaction pat-
terns,” in CHI ’06: CHI ’06 extended abstracts on Human
factors in computing systems.
New York, NY, USA: ACM,
2006, pp. 1301–1306.
[33] M. Obrist, D. Wurhofer, and M. Tscheligi, “User experience
patterns: A useful way to support social media develop-
ment,” in Proceedings of NordiCHI 2008 workshop.
TAPIR
Akademisk Forlag, 2008, pp. 80–85.
264
International Journal on Advances in Software, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/software/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

