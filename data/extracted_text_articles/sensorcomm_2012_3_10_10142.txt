Distributed Multi-Head Clustering for People-Centric Sensor Networks
Kevin Wiesner, Markus Duchon, Michael D¨urr
Mobile and Distributed Systems
Ludwig-Maximilians-Universit¨at M¨unchen (LMU Munich)
Munich, Germany
Email: {kevin.wiesner, markus.duchon, michael.duerr}@iﬁ.lmu.de
Abstract—The
emergence
of
powerful
sensor-equipped
smartphones led to a new form of people-centric sensing
networks (PCSN), in which users collect sensor information
via their mobile phone. This kind of mobile sensing allows
for large-scale data collection on low costs but introduces new
challenges: PCSNs need to cope with continuously contributed
data and keep transmission and energy costs for users at
a minimum in order to reach large-scale participation. In
this paper, we propose a Distributed Multi-Head Clustering
(DMHC) algorithm that aims at resolving these problems by
forming sensing clusters with different roles for participating
nodes. We conducted simulations to evaluate DMHC and our
analysis shows that it signiﬁcantly reduces mobile network
trafﬁc and user costs without introducing too much overhead.
Keywords-People-centric sensing; Mobile phone sensing; Clus-
tering.
I. INTRODUCTION
Mobile phone technology has recently undergone a rapid
change: Improvements in computation, storage, and wireless
communication lead to a spread of powerful mobile devices
such as smartphones and tablets. A recent trend is the
integration of sensing capabilities into the latest generation
of mobile devices. Currently available phones come with
built-in accelerometers, gyros, location, audio, and image
sensors. We expect that in the future even more sensing
hardware will be integrated into mobile phones. For instance,
Nokia proposed a future mobile phone[1] that is equipped
with sensors for monitoring the environment, the user’s
health, and the current weather. With this development
mobile phones evolve from standard phones, intended for
personal communication only, to ubiquitous sensing devices
that are globally distributed.
These devices could be applied to form a new kind of
sensor network, so-called people-centric sensing networks
[2] (also referred to as mobile phone sensing [3] or mobile
crowdsensing [4]), where people serve as carriers for mo-
bile phone-based sensors. People-centric sensing networks
(PCSN) allow for large-scale global data collection and real-
time information display. They could be used, for instance,
to monitor environmental pollution, temperature, or noise
intensity of urban areas. Even though PCSNs are related
to wireless sensor networks (WSN), there are signiﬁcant
differences between those two types of sensor networks
(cf. [5]). The main advantage of PCSNs is that data can
be collected on a large-scale with automatically deployed,
consumer-paid sensor nodes. This new kind of real-time
data collection opens up new opportunities for services and
applications. However, it also entails several new problems:
One major challenge is to process enormous amounts of
data contributed by users. Especially for network operators,
millions of continuously transmitting mobile phones would
lead to a serious challenge. People-centric sensing will
not be accepted if data measurements congest the mobile
network. At the same time, it is desirable to upload as
much data as possible to improve the quality of information.
Thus, methods are needed that reduce mobile network trafﬁc
without reducing data quality.
In this paper, we propose an algorithm that aims at re-
solving this problem. Our Distributed Multi-Head Clustering
(DMHC) algorithm relieves the mobile network by forming
sensing clusters. Within a cluster, collected sensor data is
exchanged via ad hoc communication and uploaded in an
aggregated form by the clusterhead. To compensate for the
overhead introduced by forming the cluster and to minimize
energy costs for users, DMHC selects only a subset of
nodes as sensingheads, which are required to collect and
transfer measurement data to the clusterhead. The election
of clusterhead and sensingheads is based on remaining
energy levels, communication costs, and capabilities of the
nodes. Our analysis shows that DMHC signiﬁcantly reduces
mobile network trafﬁc and user costs while generating only
negligible overhead.
The remainder of this paper is organized as follows. In
Section II, the problem is formulated and requirements are
speciﬁed. Section III discusses related work. In Section
IV, we present our DMHC algorithm, followed by our
simulation results in Section V. Finally, we present our
conclusions and future work in Section VI.
II. PROBLEM DESCRIPTION AND REQUIREMENTS
In this paper, we explore the problem of clustering PC-
SNs. Clustering, in this context, means partitioning its nodes
into a set of clusters of geographically co-located nodes.
Within each cluster, nodes assume one of the following roles
(cf. Figure 1): Clusterheads are responsible for collecting
measurement data within the cluster and transmitting these
in aggregated form to a server responsible for storing the
53
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

Figure 1.
People-centric sensing network with multi-head clusters
collected data. Sensingheads are responsible for recording
the measurement readings and transmitting them to the
clusterhead. Cluster members have no speciﬁc function to
fulﬁll, but might be requested to become a sensinghead if
more measurements are needed. Each cluster consists of one
clusterhead, one or more sensingheads, and possibly some
cluster members. If there are too few nodes within a cluster,
the clusterhead may additionally assume the sensinghead
role; thereby minimal clusters consist of one node being
clusterhead and sensinghead at the same time.
We want to limit the geographic extent of clusters in order
to obtain measurements of nearby sensors at comparable
locations. Thus, we aim for 1-hop clusters and so each
node should have a link to the clusterhead. This implies
that measurements of nodes that are within communication
range are “comparable”. As the geographical variance of
measurements strongly depends on the sensor type (e.g.,
temperature or CO2), we assume that the communication
range is automatically adapted (by varying the transmission
power) in order to meet the sensor type spatial speciﬁcs. In
case of parallel measurements with different sensor types,
the range needs to be adapted according to the sensor type
with the highest spatial variance.
Furthermore, the clustering algorithm should fulﬁll the
following requirements:
• Mobility-Adaptive: The clustering algorithm needs to
cope with continuous node mobility.
• Distributed: To allow for scalable sensing networks, the
clustering algorithm should be distributed.
• Energy-Efﬁcient: Due to limited energy resources, clus-
tering should use as little power as possible.
III. RELATED WORK
There is a lot of research work related to people-centric
sensing. Most work focuses on approaches and techniques
that enable data collection with mobiles phones ([6]–[8]),
but the potential communicational overload caused by these
continuous sensing approaches is often neglected.
However, in the ﬁeld of wireless sensor networks (WSN)
and mobile ad hoc networks (MANET), efﬁcient com-
munication is an important research question. To achieve
scalability, nodes are often grouped into clusters. For this
process, various clustering algorithms have been proposed
([9], [10]). Our DMHC is based on Distributed Mobility-
Adaptive Clustering (DMAC) proposed by Basagni [11],
which enables clustering for scenarios with mobile nodes.
Several surveys provide a detailed overview of clustering
algorithms ([12], [13]). In contrast to our work, most existing
clustering algorithms only distinguish between clusterheads
and cluster members.
An orthogonal approach to the cluster-based concept is
to reduce communication costs by eliminating redundant
sensing data transmissions with the help of a prediction-
based algorithm [14]. Data is only transmitted when it
deviates from the predictions and if it changes the statistic
with a high probability. The problem of this approach is that
applied prediction models have to be adapted and optimized
for each type of sensor data, if signiﬁcant reduction is to
be achieved. This is a complementary concept to ours and
could be applied in addition to our clustering algorithm.
Another aspect of our approach is the reduction of energy
costs, which we achieve with different roles per cluster.
Several other approaches for energy efﬁcient mobile sensing
have been proposed. Wang et al. [15] presented a frame-
work that only powers a minimum set of sensors and uses
appropriate sensor duty cycles to achieve energy efﬁciency.
Priyantha et al. [16] proposed a sensing architecture where
sampling and processing of sensor data is ofﬂoaded to a
dedicated low-power processor. As these approaches typi-
cally focus on energy-efﬁciency per node, they could also
be integrated into our proposed clustering algorithm.
To the best of our knowledge, our approach is the ﬁrst that
allows for multi-head cluster partitioning for people-centric
sensing networks.
IV. DISTRIBUTED MULTI-HEAD CLUSTERING
In this section, we describe a distributed multi-head algo-
rithm that sets up sensing clusters in PCSNs. The algorithm
consists of two phases: (A) the set-up and maintenance of
clusters (including the election of clusterheads) and (B) the
election and initiation of sensingheads.
A. Cluster set-up and maintenance
The set-up and maintenance is mainly based on DMAC.
DMAC partitions nodes of a mobile network into clusters in
a distributed manner by applying a weight-based criterion.
Our DMHC is an extension and adaption of DMAC for
people-centric sensing networks. Messages, node weights,
and procedures used in our proposed DMHC are explained
in the following.
1) Clustering messages: In order to form a cluster, nodes
need to be aware of neighboring nodes. This is achieved
by using periodic broadcasts, so called PeriodicCluster-
ingMessages (PCM). A PCM contains a node’s ID, its
remaining energy (i.e., its battery charge level), and its
current communication costs. The latter are a combination
of its costs per transmission (cpt) and its accumulated total
54
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

costs for previous transmissions (tc). Due to the reception
(or the absence) of PCMs, the status of links to neighboring
nodes can be detected.
Besides PCMs, nodes use two types of messages for the
cluster set-up: CH messages indicate that the sender has
assumed the clusterhead role and are broadcasted in order to
reach all neighboring nodes. Nodes in the vicinity overhear-
ing the CH can join this cluster. If a node receives multiple
CH messages, it joins the cluster with the bigger weight
(cf. Section IV-A2). This can be indicated by sending a Join
message to the clusterhead. Join messages are broadcasted
as well, but have to be directed, i.e., they have to contain the
clusterhead’s ID in order to indicate the cluster they want
to join. As Join messages may indicate a change from of
cluster, they have an impact on the previous cluster as well
and thus are also processed by the former clusterhead. In
addition, Join messages include a set of sensing capabilities
S (e.g., S = {Temp, CO2}) that indicates, which sensors are
provided by the joining node.
2) Node weights: In our approach, we adapted DMAC’s
concept of applying a weight-based criterion to allow for
distributed clustering. However, DMAC does not specify the
determination of the nodes’ weight. In DMHC, the weight
is calculated based on factors that are highly relevant for
the deployment in people-centric sensing networks, namely
communication costs and remaining energy levels.
In order to avoid excessive costs for users caused by
continuous data transmissions, DMHC selects the node
with the lowest communication costs (i.e., min(cpt+tc)) as
clusterhead. In case communication costs are equal for two
nodes, the one with the higher remaining energy (re) level
receives the bigger weight. If the previous factors do not
yield a distinct clusterhead, the node with the lower ID is
chosen.
3) Clustering procedures: In order to respond to the
previously speciﬁed messages, DMAC speciﬁes several pro-
cedures. Those procedures are run by each node locally.
• Init(): The init() procedure is called whenever the node
has no associated clusterhead. This may happen in two
situations: (1) If the node has just joined the network
(e.g., when it has just been switched on) and thus
obviously cannot be member of a cluster yet. (2) If a
node has lost its clusterhead. Init() determines whether
there is a neighboring node with a bigger weight than
itself. If this is the case, it joins that cluster, otherwise,
it will become a clusterhead.
• LinkFailure(u): If a node’s connection to another node
u gets lost (recognized through the lack of PCMs), it
checks whether itself or u have had the clusterhead role.
If itself is the clusterhead, it removes node u from the
cluster members. If node u has been the clusterhead,
the node restarts the Init() procedure to ﬁnd a new
clusterhead. Otherwise, the link failure has no direct
impact on the node and is ignored.
• NewLink(u): If a node receives a PCM of a new
neighbor u and u is a clusterhead with bigger weight,
the node afﬁliates with u.
• OnReceivingCH(u): If a node receives a CH message,
which indicates that u is a clusterhead, the node afﬁli-
ates with this cluster if u has a bigger weight.
• OnReceivingJoin(u,z): If a nodes receives a Join mes-
sage, which indicates that u wants to afﬁliate with the
cluster of z, the node has to check if u has just left its
own cluster or wants to join it (i.e., node = z). If z is
no clusterhead, it ignores the incoming Join. Node u
learns about the failed association with the next PCM
received from z.
B. Sensinghead election
If possible, there should be multiple sensingheads in a
cluster in order to improve the robustness and compensate
for faulty measurements of individual nodes. In order to keep
the energy consumption as low as possible for the users, too
many redundant measurements should be avoided. Thus, a
trade-off between redundancy and energy saving is needed.
1) Election process: DMHC solves this by selecting only
a speciﬁed fraction (sensinghead ratio ρ) of participating
nodes as sensingheads. To ensure robust measurement results
for small clusters, a minimum number of sensingheads υ can
be speciﬁed. If a new node joins a cluster with n nodes, the
sensinghead election is triggered if
(|Sensingheads| < υ) ∨ (|Sensingheads|
n + 1
< ρ).
(1)
Next, a priority class Pj is calculated that takes account
of the capabilities of the new node j:
Pj =
max
s∈(Sj T
SReq)
(n −
n
X
k=1
|{s}
\
Sk|)
(2)
where Sj is the set of sensing capabilities of the joining
node j, and SReq denotes the set of capabilities required for
the sensing tasks in the network. If Sj
T SReq = ∅, Pj is set
to 0; nodes in this priority class are ignored in the following
steps. The other priority classes (P1,...,Pn−1) sort the nodes
in such a way that nodes with scarce capabilities within the
cluster (i.e., a sensor type that only a small subset of cluster
members possesses) get into a lower priority classes. The
idea behind this is to chose those nodes only for sensing
tasks that require these scarce capabilities and that only those
nodes can fulﬁll.
For the sensinghead election, we used two possible ap-
proaches in DMHC: The ﬁrst one is called sequential
sensinghead election (SSE) and is based on the sequence of
arriving and leaving nodes. The ﬁrst nodes joining a cluster
are selected as sensingheads until the sensinghead ratio ρ
is reached. From then on, the clusterhead checks for each
new node whether ρ is still met. If the sensinghead ratio
55
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

drops below ρ due to the newly arrived node, this node
becomes a sensinghead. If a sensinghead leaves the cluster,
for instance due to an association with another cluster,
the cluster member that joined ﬁrst is selected as a new
sensinghead. The second approach, called highest remaining
energy (HRE), considers the remaining energy level as the
decisive factor. Every time a new node joins a cluster, the
clusterhead compares the energy level of the newly joined
node with that of the current sensingheads. If the new node
has a higher energy level, it becomes a sensinghead and the
former sensinghead with the lowest remaining energy level
becomes an ordinary cluster member.
2) Sensinghead messages: Since nodes need to know
whether they are supposed to conduct measurements or not,
the clusterhead has to inform them about their role within
the cluster. For this reason we introduce two new types of
messages: RevokeMeasurement (RM) and MeasurementRe-
quest (MR) messages. When joining a cluster, a new node
assumes to be a sensinghead by default. RevokeMeasurement
messages are sent by the clusterhead to inform the receiver
that he is not a sensinghead anymore. MeasurementRequest
messages are used to indicate that nodes should start mea-
suring. MR messages are only sent after link failures or HRE
sensinghead elections.
V. EVALUATION
We conducted simulations to evaluate the performance of
DMHC. In this section, we will ﬁrst describe the simulation
setup, followed by the presentation of the simulation results.
A. Simulation setup
For our simulations we used the JiST/SWANS simulation
environment [17], which allows the simulation of large-
scale wireless networks. The size of the simulation area
was set to 5×5km. In this area the mobile phone nodes,
varying from 1-100 nodes, were moving around. Nodes were
randomly distributed, and mobility was modeled by using
the Random Waypoint Model with speeds between 1 and
6 m/s and a pause time of 10 seconds. Each run simulated
a period of 6 hours and was repeated 50 times. For the
wireless communication, we facilitated the built-in wireless
LAN (WLAN) simulation components and employed the
free-space model using a standard conﬁguration for the
WLAN communication (transmission strength: 15 dBm,
antenna gain: 1dB). For the sake of simplicity, we assumed
(Sn)n∈N = SReq for sensing capabilities of all nodes N.
B. Mobile network transmissions
We ﬁrst evaluated the amount of mobile network transmis-
sions by comparing the naive approach without clustering,
in which all nodes conduct measurements and transmit the
collected data themselves, to our cluster-based approach. It
is obvious that our algorithm reduces the network trafﬁc,
as only clusterheads communicate via the mobile network,
 0
 200
 400
 600
 800
 1000
 1200
 1400
 1600
 0
 20
 40
 60
 80
 100
Number of transmissions per node
Number of nodes
Without clustering (mc=15)
DMHC (mc=15)
Without clustering (mc=30)
DMHC (mc=30)
Without clustering (mc=120)
DMHC (mc=120)
Figure 2.
Normalized average number of mobile network transmissions
instead of all mobile nodes without clustering. However, we
analyzed, which node densities result in clusters that are
large enough to signiﬁcantly reduce mobile network trafﬁc.
We ran simulations with different measurement cycles
(mc={15s, 30s, 120s}). Figure 2 illustrates the normalized
average number of transmissions, i.e., the total number of
average transmissions in relation to the number of nodes.
DMHC signiﬁcantly reduces the network transmissions com-
pared to the naive approach, even for low node densities.
With 10 nodes only, we achieve a network trafﬁc reduction
of approximately 70%, and from 40 nodes on even more
than 95% reduction. These results lead to the conclusion
that DMHC makes sense even in less densely populated
areas and can help to signiﬁcantly reduce the network trafﬁc
imposed by people-centric sensing.
C. Communication costs
DMHC considers the communication costs during the
clusterhead election. Ideally, in case of a high amount of
data ﬂatrate users, each cluster consists of at least one node
with zero communication costs.
In our analysis, we evaluated the impact of the penetration
rate of ﬂatrate users on the average communication costs
per node. Therefore, we ran simulation trials where 5%,
15%, and 25% of nodes had a data ﬂatrate and were not
charged for transmitting data. For the remaining nodes, each
transmission via the mobile phone network was counted as a
“charged transmission”. The communication costs can then
derived by including the actual costs per data transmissions
(charged transmissions ∗ cpt). For these trials, sensingheads
conducted measurements with mc=15s, and PCM messages
were broadcasted with a PCM cycle (pc) of 3-4 seconds.
The results are illustrated in Figure 3. In trials without
clustering, the average communication costs drop according
to the percentage of ﬂatrate users, as only those nodes do
not contribute to the overall communication costs. In trials
with DMHC, the ﬂatrate penetration has a relatively low
impact compared to the cost reduction introduced by simply
clustering participating nodes. The average communication
costs for high-density settings become very low, as the
probability of having a user with a data ﬂatrate within each
cluster obviously increases with larger cluster sizes. The
56
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

 0
 200
 400
 600
 800
 1000
 1200
 1400
 0
 20
 40
 60
 80
 100
Charged transmissions per node
Number of nodes
5% Flatrate ratio, w/o clustering
5% Flatrate ratio, w/ clustering
15% Flatrate ratio, w/o clustering
15% Flatrate ratio, w/ clustering
25% Flatrate ratio, w/o clustering
25% Flatrate ratio, w/ clustering
Figure 3.
Number of charged transmissions
per node
 0
 2000
 4000
 6000
 8000
 10000
 12000
 0
 20
 40
 60
 80
 100
Energy costs per node [in τ]
Number of nodes
Without clustering
DMHC (pc=2-4;mc=30)  
DMHC (pc=6-10;mc=30) 
DMHC (pc=10-16;mc=30)
Figure 4.
Energy costs for Scenario 1
 0
 2000
 4000
 6000
 8000
 10000
 12000
 0
 20
 40
 60
 80
 100
Energy costs per node [in τ]
Number of nodes
Without clustering
DMHC (pc=2-4;mc=30)  
DMHC (pc=6-10;mc=30) 
DMHC (pc=10-16;mc=30)
Figure 5.
Energy costs for Scenario 2
results show that DMHC signiﬁcantly lowers the costs and
hereby provides a basis for a large-scale user participation.
D. Energy costs
We consider energy costs as the sum of energy used for
mobile network transmissions, ad hoc transmissions, and
sensor measurements. For those energy consuming tasks, the
amount of task occurrences were analyzed in three different
simulation trials for varying ratios of PCM and measurement
cycles. We speciﬁed a high, medium, and low PCM-to-
measurements ratio. In the high PCM-to-measurements ratio,
PCMs were sent every 2-4 seconds (i.e., with a pc of 2-
4s) and measurements were collected every 30 seconds. In
this setting, a lot of ad hoc messages were exchanged in
comparison to the amount of conducted measurements. In
the medium and low PCM-to-measurements settings, PCMs
were broadcasted every 6-10 and 10-16 seconds respectively,
while measurements were conducted with the same rate
(mc=30s). We made assumptions for relative energy costs for
the above mentioned energy consuming tasks and considered
two scenarios. In Scenario 1, mobile network transmissions
consume six times more energy than ad hoc transmissions,
based on the ﬁndings in [18]. Further, we assumed that
the energy consumption of sensor measurements is low in
comparison to energy used for transmissions (e.g., for tem-
perature sensors). In Scenario 2, we assumed lower relative
energy costs for mobile network transmissions (factor 3
compared to those of ad hoc transmissions), but also as-
sumed slightly higher energy costs for sensor measurements.
In Table I, the energy costs for the mentioned scenarios are
listed, speciﬁed in relation to an energy cost unit τ.
Table I
ENERGY COST RATIOS FOR SCENARIOS
Scenario 1
Scenario 2
Mobile network transmissions
6τ
3τ
Ad hoc transmissions
1τ
1τ
Sensor measurements
0.5τ
0.8τ
The results of Scenario 1 show that for trials with medium
and low PCM frequency, energy costs are lower than without
DMHC from 10 nodes onwards (see Figure 4). Only the
setting with a very high frequency of periodic broadcasts
exceeds the energy costs of the naive approach. Figure 5
shows the results for Scenario 2. The energy costs of DMHC
exceed those of the naive approach in the setting with a
medium PCM frequency. However, the additional energy
overhead is relatively small and might be acceptable, if
communications costs are lowered signiﬁcantly instead.
E. Number of measurements
We evaluated the impact of the sensinghead ratio ρ
and the minimum sensinghead number υ on the actual
amount of measurements. In a ﬁrst step (S1), we simu-
lated three settings with different sensinghead ratios ρ =
{10%, 25%, 50%} and a constant sensinghead minimum of
υ = 2. In a second step (S2), we varied the sensinghead
minimum υ = {2, 3, 5} for a constant ρ = 10%. For these
trials, mc was set to 15 seconds, and pc to 3-4 seconds.
The results from S1 show that the number of measure-
ments rapidly converges (see Figure 6). From about 30
nodes on, the amount of measurements per node remains
stable, which shows that the effect from introducing sens-
ingheads can also be useful in low-density settings. As the
sensinghead ratio ρ speciﬁes the minimal ratio, the number
of measurements per node converges to an amount slightly
higher than indicated, i.e., 58%, 17%, and 8% above ρ. The
results from S2 lead to similar conclusions (see Figure 7).
Although υ has a signiﬁcant impact for low-density settings,
the number of measurements drops very fast in all trials. A
stable average is reached from 30-40 nodes onwards.
F. Ad hoc overhead for sensinghead election
In the last analysis, we compared the ad hoc overhead of
SSE and HRE. The main part of the overhead arises from
PCMs sent out by each node. The number of those messages
is the same for both approaches. The difference lies in the
amount of non-periodical messages, thus we focused solely
on ad hoc messages required for the pure cluster formation
and maintenance (i.e., CH, Join, RM, and MR). The results
(Figure 8) show that SSE performs slightly better. This is
due to the fact that HRE re-determines all sensingheads
every time a node joins or leaves the cluster. However, the
difference of both approaches is relatively small compared
to the overall ad hoc overhead.
57
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

 0
 200
 400
 600
 800
 1000
 1200
 1400
 1600
 0
 20
 40
 60
 80
 100
Number of measurements per node
Number of nodes
Without clustering
DMHC(υ=2,ρ=10%)
DMHC(υ=2,ρ=25%)
DMHC(υ=2,ρ=50%)
Figure 6.
Varying sensinghead ratios (S1)
 0
 200
 400
 600
 800
 1000
 1200
 1400
 1600
 0
 20
 40
 60
 80
 100
Number of measurements per node
Number of nodes
Without clustering
DMHC(υ=2,ρ=10%)
DMHC(υ=3,ρ=10%)
DMHC(υ=5,ρ=10%)
Figure 7.
Varying min. sensingheads (S2)
 0
 5
 10
 15
 20
 0
 20
 40
 60
 80
 100
Ad hoc transmissions per node
Number of nodes
HRE
SSE
Figure 8.
Ad hoc overhead
VI. CONCLUSION AND FUTURE WORK
We presented our DMHC algorithm, which forms sens-
ing clusters in order to reduce network trafﬁc and user
costs. Each cluster consists of a clusterhead, responsible
for the communication of the data, and multiple sensing-
heads, responsible for the data collection. Clusterheads are
selected based on the communication costs in order to
keep user costs as low as possible. For the sensinghead
election, we proposed two approaches: SSE and HRE. We
analyzed our DMHC algorithm based on simulations using
the JiST/SWANS framework. The results show that already
for low node densities, DMHC signiﬁcantly reduces network
transmissions, transmission costs, and number of measure-
ments. Energy costs are also within reasonable boundaries,
and the ad hoc overhead comparison shows that the perfor-
mance of both sensinghead election algorithms is adequate.
In our future work, we will elaborate our concept on
two main aspects: First, we will implement an adaptive
sensinghead election, which automatically adapts ρ to opti-
mize the coverage. Second, we plan to integrate prediction-
based approaches to further minimize trafﬁc. In addition,
a more comprehensive evaluation is planned, in which the
proposed approach is compared to other clustering schemes
and more realistic urban mobility and energy models are
applied. Further, we will investigate in privacy and incentive
schemes that can be utilized to complement our concept.
REFERENCES
[1] Nokia, “Eco Sensor Concept,” http://ncomprod.nokia.com/
A41283046, Accessed: 15.06.2012.
[2] A. T. Campbell, S. B. Eisenman, N. D. Lane, E. Miluzzo,
R. A. Peterson, H. Lu, X. Zheng, M. Musolesi, K. Fodor,
and G.-S. Ahn, “The Rise of People-Centric Sensing,” IEEE
Internet Computing, vol. 12, pp. 12–21, 2008.
[3] N. Lane, E. Miluzzo, H. Lu, D. Peebles, T. Choudhury, and
A. Campbell, “A survey of mobile phone sensing,” IEEE
Communications, vol. 48/9, pp. 140–150, 2010.
[4] R. Ganti, F. Ye, and H. Lei, “Mobile crowdsensing: current
state and future challenges,” IEEE Communications, vol.
49/11, pp. 32 –39, 2011.
[5] K. Wiesner, M. D¨urr, and M. Duchon, “Private Pooling:
A Privacy-Preserving Approach for Mobile Collaborative
Sensing,” in Proc. of MobiSec ’11, 2011.
[6] S. B. Eisenman, N. D. Lane, E. Miluzzo, R. A. Peterson, G.-S.
Ahn, and A. T. Campbell, “Metrosense project: People-centric
sensing at scale,” in Proc. of WSW at Sensys’06, 2006.
[7] T. Abdelzaher, Y. Anokwa, P. Boda, J. Burke, D. Estrin,
L. Guibas, A. Kansal, S. Madden, and J. Reich, “Mobiscopes
for human spaces,” IEEE Pervasive Computing, vol. 6, pp.
20–29, 2007.
[8] H. Lu, W. Pan, N. D. Lane, T. Choudhury, and A. T.
Campbell, “Soundsense: scalable sound sensing for people-
centric applications on mobile phones,” in Proc. of MobiSys
’09, 2009, pp. 165–178.
[9] A. Ephremides, J. Wieselthier, and D. Baker, “A design
concept for reliable mobile radio networks with frequency
hopping signaling,” Proc. of the IEEE, vol. 75/1, pp. 56–73,
1987.
[10] M. Gerla and J. T.-C. Tsai, “Multicluster, mobile, multimedia
radio network,” Wireless Networks, vol. 1, pp. 255–265, 1995.
[11] S. Basagni, “Distributed Clustering for Ad Hoc Networks,”
in Proc. of I-SPAN ’99, 1999, pp. 310–315.
[12] J. Yu and P. Chong, “A survey of clustering schemes for
mobile ad hoc networks,” IEEE Communications Surveys &
Tutorials, vol. 7/1, pp. 32 –48, 2005.
[13] A. A. Abbasi and M. Younis, “A survey on clustering algo-
rithms for wireless sensor networks,” Computer Communica-
tions, vol. 30, no. 14-15, pp. 2826 – 2841, 2007.
[14] S. Motegi, Y. Nishimura, and K. Yoshihara, “Communication
Algorithm for Statistic Monitoring in People-Centric Sensing
Networks,” in Proc. of ICN ’10, 2010, pp. 133–138.
[15] Y. Wang, J. Lin, M. Annavaram, Q. A. Jacobson, J. Hong,
B. Krishnamachari, and N. Sadeh, “A framework of energy
efﬁcient mobile sensing for automatic user state recognition,”
in Proc. of MobiSys ’09, 2009, pp. 179–192.
[16] B. Priyantha, D. Lymberopoulos, and J. Liu, “LittleRock:
Enabling Energy-Efﬁcient Continuous Sensing on Mobile
Phones,” IEEE Pervasive Computing, vol. 10/3, pp. 12–15,
2011.
[17] “JiST / SWANS - v1.0.6,” http://jist.ece.cornell.edu/, Ac-
cessed: 15.06.2012.
[18] N. Balasubramanian, A. Balasubramanian, and A. Venkatara-
mani, “Energy consumption in mobile phones: a measurement
study and implications for network applications,” in Proc. of
IMC ’09, 2009, pp. 280–293.
58
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

