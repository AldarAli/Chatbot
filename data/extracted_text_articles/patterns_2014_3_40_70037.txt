Effectively Updating Co-location Patterns in Evolving Spatial Databases
Jin Soung Yoo and Hima Vasudevan
Computer Science Department
Indiana University-Purdue University Fort Wayne
Indiana, USA 46805
Email: yooj,vasuh02@ipfw.edu
Abstract—Spatial co-location mining has been used for dis-
covering spatial event sets which show frequent association
relationships based on the spatial neighborhood. This paper
presents a problem of ﬁnding co-location patterns on evolving
spatial databases which are constantly updated with fresh data.
Maintaining discovered spatial patterns is a complicated process
when a large spatial database is changed because new data
points make spatial relationships with existing data points on
the continuous space as well as among themselves. The change
of neighbor relations can affect co-location mining results with
invalidating existing patterns and introducing new patterns. This
paper presents an algorithm for effectively updating co-location
analysis results and its experimental evaluation.
Keywords–Spatial association mining; Co-location pattern; In-
cremental update
I.
INTRODUCTION
As one of the spatial data mining tasks, spatial association
mining is often used for discovering spatial dependencies
among objects [1]–[4]. A spatial co-location represents a set
of spatial features which are frequently observed together
in a nearby area [3]. Examples of frequently co-located
features/events include symbiotic species such as West Nile
incidents and stagnant water sources in epidemiology, and
interdependent events such as a car accident, trafﬁc jam,
policemen and ambulances in transportation. In business, co-
location patterns can be used for ﬁnding relationships among
services requested by mobile users in geographic proximity.
Most of the spatial association mining works [3]–[10]
assume that all data is available at the start of data analy-
sis. However, many application domains including location-
based services, public safety, transportation and environmental
monitoring collect their data periodically or continuously. For
example, a police department accumulates, on average, 10,000
crime incidents per month [11]. For Earth observation, daily
climate measurement values are collected at every 0.5 degree
grid of the globe [12]. For keeping the analysis result coherent
with respect to the most recent database status, discovered
patterns should be updated.
The problem of updating spatial co-location patterns
presents more challenges than updating frequent itemsets in
a traditional transaction database. In the classical association
analysis, the database update means the simple addition of
new transaction records, or the deletion of existing records.
Newly added transaction records are separately handled from
existing records because the database is a collection of disjoint
transaction records. In contrast, when a spatial database is
updated, a new data point can make neighbor relationships
with existing data points as well as other new data points
on the continuous space. Thus, all neighbor relationships in
the updated database should be examined for the maintenance
of co-location patterns. The spatial pattern mining process
is a computational and data intensive task, therefore simply
re-executing a state-of-the-art co-location mining algorithm,
whenever the database is updated, can result in an explosion of
required computational and I/O resources. This paper proposes
an algorithm for effectively updating discovered co-location
patterns with the addition of spatial data points.
The remainder of this paper is organized as follows. Section
II presents the basic concept of co-location pattern mining and
the related work. Section III describes our algorithmic design
concept for incremental co-location mining and the proposed
algorithm. Its experimental evaluation is presented in Section
IV. This paper will conclude in Section V.
II.
BASIC CONCEPT AND RELATED WORK
The preliminary knowledge of spatial co-location pattern
mining and the related work are presented in this section.
A.
Basic concept of spatial co-location mining
Let E
= {e1, . . . , em} be a set of event types, and
S = {o1, . . . , on} be a set of their objects with geographic
location. When the Euclidean metric is used for the neighbor
relationship R, two objects oi and oj are neighbors of each
other if the ordinary distance between them is not greater than
a neighbor distance threshold d. A co-location X is a set of
event types, {e1, . . . , ek} ⊆ E, whose objects are frequently
neighbors to each other on space. The co-location instance
I of X is deﬁned as a set of event objects, I ⊆ S, which
includes all types in X and makes a clique under R.
The prevalence strength of a co-location is often measured
by participation index value [3]. The participation index
PI(X) of X = {e1, . . . , ek} is deﬁned as
PI(X) = min
ei∈X{PR(X, ei)},
(1)
where 1 ≤ i ≤ k, and PR(X, ei) is the participation ratio
of event type ei in X, which is the fraction of objects of
event ei in the neighborhood of instances of X − {ei}, i.e.
PR(X, ei) =
|distinct objects of ei in instances of X|
|objects of ei|
. If PI(X)
is greater than a given minimum prevalence threshold, we say
X is a prevalent co-located event set or a co-location.
96
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-343-8
PATTERNS 2014 : The Sixth International Conferences on Pervasive Patterns and Applications

B. Related work
The problem of mining association rules based on spa-
tial relationships (e.g., proximity and adjacency) was ﬁrst
discussed by Koperski et al. [1]. Shekhar, et al. [3] deﬁnes
the co-location pattern and proposes a join-based co-location
mining algorithm. Morimoto
[2] studies the same problem
to discover frequent neighboring service class sets. A space
partitioning and non-overlap grouping scheme is used for
ﬁnding neighboring objects. Yoo et al. [4], [10] propose join
less algorithms to reduce the number of expensive spatial join
operations in ﬁnding co-location instances. Celik et al. [8]
extends the notion of co-location to a local zone-scale pattern.
Eick et al. [13] proposes a framework for mining regional co-
location patterns and Mohan et al. [14] presents a graph based
approach for regional co-location discovery. Recognizing the
dynamic nature of database, much effort has been devoted
to the problem of incrementally mining frequent itemsets in
classical association rule mining literature [15]–[19]. However,
to ﬁnd the problem to update co-location patterns in spatial
data mining literature is rare. The most similar work with
ours is He et al. [20] which is compared in our experimental
evaluation.
III.
INCREMENTAL CO-LOCATION MINING
Let Sold = {o1, . . . , on} be a set of old data points in a
spatial database and Sin = {on+1, . . . , on+h} be a set of new
data points added in the database. Let S be all data points in
the updated database, i.e., S=Sold∪Sin. There are two types of
co-location in the update. The retained co-location is an event
set prevalent in both Sold and S. The emerged co-location is an
event set not prevalent in Sold but prevalent in S. We propose
an algorithm of Effective Update of COLOCation patterns
(EUCOLOC). The proposed algorithm has two update stages.
The ﬁrst update stage examines only neighbor relationships of
new data points, and ﬁnds all retained co-locations and some
emerged co-locations. If an emerged set is found from the ﬁrst
update, the second update stage is triggered for ﬁnding other
emerged co-location patterns in the updated database. Figure 3
shows the pseudo code of EUCOLOC algorithm.
A. Neighborhood Process
Directly ﬁnding all co-location instances forming clique
neighbor relationships from spatial data is computationally ex-
pensive. Instead, we process the neighbor relationships related
to the new data points Sin.
Deﬁnition 1: The neighborhood of a new object o ∈ Sin,
new neighborhood nnew(o), is deﬁned to {o, o2, . . . , op|oi ∈
S ∧ R(o, oi)=true ∧ o’s event type < oi’s event type}, where
2 ≤ i ≤ p.
We assume there is a total ordering among the event types
(i.e., a lexicographic order ⪯e). R is a neighbor relationship
function. Next, if an existing data point has a neighbor rela-
tionship with at least one new data point, its neighborhood is
changed.
Deﬁnition 2: The changed neighborhood of an old object
o ∈ Sold, nchg(o), is deﬁned to {o, o2, . . . , op|oi ∈ S ∧ ∃oi ∈
Sin ∧ R(o, oj)=true ∧ o’s event type < oi’s event type },
where 2 ≤ i ≤ p.
{A.5*, B.9*}
{B.7*, C.4*}
{A.5*, B.6*}
*
{A.5*, B.3}
{A.5*, C.1}
{A.1, B.7*}
{A.1, C.4*}
{A.3, B.8*}
{A.3, C.5*}
{B.1, C.4*}
{B.9*, C.1}
(c) Incremental 
(changed and new*)
neighbors
:New data points
New neighbors
(b) Incremental data points and their relationships
*
*
*
*
*
*
*
A.1
:Old data point
C.3
B.4
A.2
C.2
B.5
B.9
C.5
B.8
A.3
B.3
B.6
A.5
B.1
B.7
B.2
C.4
:Old data point having a relationship with a new data point
y
.
x
C.1
C.4*
B.1
B.3, B.6*, B.9*, C.1 
C.5*
A.4
C.1
C.4*
C.4*
B.9*
B.8*
B.7*
B.6*
Items (Neighbor objects)
B.1, B.7*, C.1, C.4* 
B.3, B.8*, C.1, C.5*
A.1
A.3
A.5*
.
B.2
E.i: instance i of event type E
: identified neighbor relationship
(a) Old data points and their relationships
C.3
B.4
A.2
C.2
B.5
A.3
B.3
B.1
A.1
Add A.5;  B.6, B.7, B.8, B.9;  C.4, C.5
.
C.1
A.4
x
y
A.3
A.2
A.1 
B.3 , C.1
B.4 , C.2
B.1 , C.1
A.4
B.1
B.2
B.3
B.4
B.5
C.1 , C3
C.1
C.2
C.3
C.1
C.2
Neighbor objects
Old neighbors
(d) Updated neighbors
A.3
A.2
A.1 
B.3 , B.8 , C.1 , C.5
B.4 , C.2
B.1 , B.7 , C.1 , C.4 
A.4
B.3 , B.6 , B.9 , C.1
C.1
A.5
B.1
B.2
B.3
B.4
C.1 , C3
C.2
C.1
C.2
C.3
C.4
C.5
B.6
B.7
B.8
B.9
B.5
Neighbor objects
Figure 1.
New, Changed and Updated Neighborhoods
Let Nnew = {nnew(o1), . . . , nnew(oh)} be a set of all new
neighborhoods for Sn and Nchg = {nchg(o1), . . . , nchg(oq)}
be a set of all changed neighborhoods where {o1, . . . , oq} ⊆
Sold. We call the union of Nnew and Nchg to incremental
neighborhood set (Ninc).
When an increment Sin is added as shown in Figure 1 (b),
the EUCOLOC algorithm ﬁrst ﬁnds all neighbors (NP) of new
data points in S using a geometric method or a spatial query
method (Algorithm Line 2). The incremental neighborhood set
(Ninc) is prepared by ﬁnding new neighborhoods from NP
and detecting changed neighborhoods from the old neighbor-
hoods Nold (Line 3 & Figure 1 (c)). Figure 1 (d) shows the
entire neighborhood information (N) of the updated database
(Line 4).
B. First update and detection
Let an event set be a border event set if the event set’s all
proper subsets are prevalent, but not prevalent itself. The bor-
der sets are used for detecting an emerging co-location without
the generation and testing of many unnecessary candidates.
The candidate event sets for the ﬁrst update are previous co-
located event sets (Pold) and border event sets (Bold) (Line 7).
The incremental co-location instances of the candidate event
sets are searched from the incremental neighborhoods (Ninc)
without examining the entire neighbor relationships. (Line 8
& Figure 1 (c)). A ﬁlter-and-reﬁne search strategy is used
for ﬁnding co-location instances. Let SI = {o1, o2, . . . , ok}
be a set of objects of a candidate set c = {e1, e2, . . . , ek}
where e1 < e2 . . . < ek. If the ﬁrst object o1 has neighbor
relationships with all other objects in the set, SI is called a
star instance of c. The start instances of {e1, e2, . . . , ek} are
97
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-343-8
PATTERNS 2014 : The Sixth International Conferences on Pervasive Patterns and Applications

 B.1   ,  C.4*
2
3
4
1
 B.9* ,  C.1
 B.6*  
 B.7* ,  C.4*
5
transactions
B−incremental
neighborhood 
3
2
1
 B.8*
{A.5*,B.9*, C.1}

 5
 10
 15
 20
 25
 30
 35
 40
 45
 50
1,200
2,400
3,600
4,800
Execution time
Number of incremental data points
min_prev_threshold=0.05, distance=10 
EUCOLOC
EUCOLOC-fixed inter relationship(5%)
IMCP
(a)
 0
 100
 200
 300
 400
 500
 0.15
 0.2
 0.25
 0.3
 0.35
 0.4
Execution time
Mimimum prevalence threshold
Real climate dataset, distance=6, 
 # of old points=7,729, # of new points=7,787
EUCOLOC
IMCP
GeneralColoc
(b)
Figure 4.
Experiment Result (a) By incremental data size (b) By prevalence
threshold
In the ﬁrst experiment, we compared the performance of
EUCOLOC and IMCP by varying the incremental size of
synthetic data. The number of distinct event types was 50. The
number of old data points was 10,020. The ﬁrst incremental
set has 1,200 data points. The second incremental set is two
times bigger than the ﬁrst set. The third one was three times
bigger than the ﬁrst set, and so on. The ratio of old data points
which have relationships with new points was increased with
the increase of new data (i.e., 5%, 10%, 15% and 20%). As
shown in Figure 4 (a), the execution times of both EUCOLOC
and IMCP increased with the incremental data size. The
EUCOLOC showed better performance than IMCP. When the
ratio of relationships with old data points was ﬁxed to 5%, the
execution times of EUCOLOC were stable, or very slowly
increased. The performance of EUCOLOC depends on the
inter-neighbor relationship ratio.
We also conducted the evaluation of EUCOLOC with real
climate measurement data [12]. The total number of processed
event types was 18. 7,728 event records were used for the old
data. 7,787 new event records were added for the incremental
data. We used 6 as a neighborhood distance, which means 6
cells on latitude-longitude spherical grids, where each grid cell
is 1 degree × 1 degree. About half of the old event objects had
neighbor relationships with the new ones. Figure 4 (b) shows
the result. EUCOLOC showed slowly increasing execution
time than other algorithms when the prevalence threshold was
decreased.
V.
CONCLUSION
In this paper, we presented an algorithm for efﬁciently
mining co-location patterns in evolving spatial databases. The
proposed algorithm has two update stages. The ﬁrst update
stage is 1) to avoid the generation and testing of many unnec-
essary candidates using the border concept, 2) to search only
incremental neighborhoods for the update, and 3) to update the
prevalence value of current co-locations with their incremental
instances and minimal previous co-located object information.
The second update stage is used for only ﬁnding new co-
located event sets (emerged ones). The initial experimental
evaluation shows our algorithmic design decision is effective
in updating discovered co-location patterns. The proposed
algorithm can be easily extended to handle the case of deleted
data points. Our approach can be adopted for the cases of
change of important parameters, such as neighbor distance and
prevalence threshold. In the future, we plan to explore these
problems.
REFERENCES
[1]
K. Koperski and J. Han, “Discovery of Spatial Association Rules in
Geographic Information Databases,” in Proceedings of the International
Symposium on Large Spatial Data bases, 1995, pp. 47–66.
[2]
Y. Morimoto, “Mining Frequent Neighboring Class Sets in Spatial
Databases,” in Proceedings of the ACM SIGKDD International Confer-
ence on Knowledge Discovery and Data Mining, 2001, pp. 353–358.
[3]
Y. Huang, S. Shekhar, and H. Xiong, “Discovering Co-location Patterns
from Spatial Datasets: A General Approach,” IEEE Transactions on
Knowledge and Data Engineering, vol. 16, no. 12, 2004, pp. 1472–
1485.
[4]
J. S. Yoo and S. Shekhar., “A Join-less Approach for Mining Spatial
Co-location Patterns,” IEEE Transactions on Knowledge and Data
Engineering, vol. 18, no. 10, 2006, pp. 1323–1337.
[5]
J. S. Yoo and S. Shekhar, “A Join-less Approach for Spatial Co-
location Mining: A Summary of Results,” in Proceedings of the IEEE
International Conference on Data Mining, 2005, pp. 813–816.
[6]
H. Xiong, S. Shekhar, Y. Huang, V. Kumar, X. Ma, and J. S. Yoo,
“A Framework for Discovering Co-location Patterns in Data Sets with
Extended Spatial Objects,” in Proceedings of the SIAM International
Conference on Data Mining, 2004, pp. 78–89.
[7]
J. Yoo and M. Bow, “Finding N-Most Prevalent Colocated Event Sets,”
in Proceedings of the International Conference on Data Warehousing
and Knowledge Discovery, 2009, pp. 415–427.
[8]
M. Celik, J. M. Kang, and S. Shekhar, “Zonal Co-location Pattern
Discovery with Dynamic Parameters,” in Proceedings of the IEEE
International Conference on Data Mining, 2007, pp. 433 – 438.
[9]
J. S. Yoo and M. Bow, “Mining Spatial Colocation Patterns: A Different
Framework,” Data Mining and Knowledge Discovery, vol. 24, no. 1,
2012, pp. 159–194.
[10]
J. S. Yoo and S. Shekhar, “A Partial Join Approach for Mining Co-
location Patterns,” in Proceedings of the ACM International Symposium
on Advances in Geographic Information Systems, 2004, pp. 241–249.
[11]
“San Francisco Crime Incidents,” https://data.sfgov.org/.
[12]
“Earth Observation Data,” http://data.giss.nasa.gov/.
[13]
C. F. Eick, R. Parmar, W. Ding, T. F. Stepinski, and J. Nicot, “Finding
Regional Co-location Patterns for Sets of Continuous Variables in Spa-
tial Datasets,” in Proceedings of the ACM SIGSPATIAL International
Conference on Advances in Geographic Information Systems, 2008, pp.
1–10.
[14]
P. M. et al., “A Neighborhood Graph based Approach to Regional Co-
location Pattern Discovery: A Summary of Results ,” in Proceedings
of the ACM SIGSPATIAL International Conference on Advances in
Geographic Information Systems, 2011, pp. 122–132.
[15]
N. Ayan, A. Tansel, and E. Arkyn, “An Efﬁcient Algorithm to Update
Large Itemsets with Early Pruning,” in Proceedings of the International
Conference on Knowledge Discovery and Data Mining, 1999, pp. 287–
291.
[16]
D. Cheung, J. Han, V. Ng, and C. Y. Wong, “Maintenance of Discov-
ered Association Rules in Large Databases: An Incremental Updating
Technique,” in Proceedings of the IEEE International Conference on
Data Engineering, 1996, pp. 106 – 114.
[17]
S. Thomas and S. Chakravarthy, “Incremental Mining of Constrained
Associations,” High Performance Computing (HiPC), vol. 1970, 2000,
pp. 547–558.
[18]
D. Cheung, S. D. Lee, and D. Kao, “A General Incremental Technique
for Maintaining Discovered Association Rules ,” in Proceedings of
the International Conference on Databases Systems for Advanced
Applications, 1997, pp. 185 – 194.
[19]
S. Thomas, S. Bodagala, K. Alsabti, and S. Ranka, “An Efﬁcient
Algorithm for the Incremental Updation of Association Rules in Large
Databases,” in Proceedings of the ACM International Conference on
Knowledge Discovery and Data Mining, 1997, pp. 263–266.
[20]
J. He, Q. He, F. Qian, and Q. Chen, “Incremental Maintenance of
Discovered Spatial Colocation Patterns,” in Proceedings of Data Mining
Workshop, 2008, pp. 399 – 407.
99
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-343-8
PATTERNS 2014 : The Sixth International Conferences on Pervasive Patterns and Applications

