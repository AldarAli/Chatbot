Delay Constrained ARQ Mechanism for MPEG Media Transport Protocol Based 
Video Streaming over Internet 
 
Hong-rae Lee, Tae-jun Jung, Kwang-deok Seo 
Division of Computer and Telecommunications Engineering 
Yonsei University 
Wonju, South Korea 
e-mail: kdseo@yonsei.ac.kr 
Chang Ki Kim 
Smart TV Media Development Team 
Electronics and Telecommunications Research Institute 
Daejeon, South Korea 
e-mail: ckkim1@etri.re.kr
 
 
Abstract—MPEG 
Media 
Transport 
(MMT) 
is 
a 
new 
international standard aiming at addressing the emerging 
multimedia services over heterogeneous packet-switched 
networks including Internet and broadcasting networks. Due 
to the heterogeneous characteristics of the broadcast and 
broadband networks, MMT provides an efficient delivery 
timing model to provide inter-network synchronization, 
measure various kinds of transmission delays and jitter caused 
by the transmission delay, and re-adjust timing relationship 
between the MMT packets to assure synchronized playback. 
Exploiting the delivery timing model, it is possible to 
accurately estimate round-trip time (RTT) experienced during 
MMT packet transmission. Based on the measured RTT, we 
propose an efficient delay constrained ARQ (Automatic Repeat 
reQuest) scheme which is applicable to MMT protocol based 
real-time video communication over IP networks. 
Keywords-video communication over Internet; ARQ scheme; 
error control processing; MPEG Media Transport (MMT). 
I. 
 INTRODUCTION 
In the recent years, digital broadcasting services and IP-
based multimedia services over the Internet including 
mobile Internet have started being integrated and converged 
[1]. With this trend, there have been so many changes in the 
multimedia service environments such as media content 
delivery networks, diverse video signals, 4K/8K video 
transport systems, and various client terminals displaying 
multi-format signals. It has become clear that the MPEG 
standard has been facing several technical challenges due to 
the emerging changes in those multimedia service 
environments [2]. So, to address these technical challenges 
to existing and emerging MPEG standards, ISO MPEG has 
developed an MPEG-H standard suite (ISO/IEC 23008) for 
the delivery of audio-visual information compressed with 
high efficiency over heterogeneous environment. MPEG-H 
suite consists of three functional areas: High Efficiency 
Video Coding (HEVC) [3], 3D audio, and MPEG Media 
Transport (MMT) [4].  
In order to deploy efficient solutions for the transport of 
HEVC video in an interoperable fashion, especially given 
the recent increased demand of multimedia delivery in the 
heterogeneous network environment, MPEG has launched a 
new standardization work item, called MMT since the 
middle of 2010. MMT has been working on addressing 
technical challenges of existing standards due to recent 
changes 
of 
multimedia 
delivery 
and 
consumption 
environments and new requirements from emerging use 
cases and application scenarios in the area of multimedia 
services [5]. MMT aims to overcome current limitations of 
available standards for media streaming by addressing 
streaming format that is transport and file format friendly, 
cross-layer optimized between video and transport layer, 
error resilient for MPEG streams, convertible between 
transport mechanisms and content adaptation to different 
networks [6]. The challenge to error control schemes for the 
real-time video communication is focused on how to 
endeavor to recover the packet loss and then to reduce 
impairment to the playback quality [7]. Many different error 
control techniques have been proposed to solve these issues 
and Automatic Repeat request (ARQ) has been known as 
one of the promising solutions [8].  
MMT provides delivery timing model as a means to 
calculate jitter and the amount of delay introduced by the 
underlying delivery network, so that constant delay for data 
stream can be achieved [4]. Using the delivery timing model, 
an MMT receiving entity provides information in the 
feedback to allow the MMT sending entity to calculate the 
RTT. To circumvent the packet loss problem, MMT employs 
ARQ function as a basic error control technique in which the 
MMT receiving entity asks for retransmission when packet 
loss is detected at the receiver side [6][7]. When the RTT is 
so high that the retransmitted packet will not arrive in time, 
the retransmission will not improve the quality. The current 
ARQ function of MMT, however, could result in many late 
packets that arrive after play-out deadline because it does not 
consider round-trip delay caused for the retransmission. To 
circumvent this problem, we propose an efficient delay 
constrained ARQ scheme for MMT packet based real-time 
video communication. 
The remainder of this paper is organized as follows. In 
Section II, we overview MMT technology and summarize 
the basic ARQ process supported in MMT. In Section III, we 
describe the proposed delay-constrained ARQ scheme. The 
experimental results and performance evaluation are 
presented in Section IV. Finally, concluding remarks are 
provided in Section V. 
61
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-428-2
AFIN 2015 : The Seventh International Conference on Advances in Future Internet

II. 
OVERVIEW OF MMT 
In order to support efficient delivery and effective 
consumption of coded media data for multimedia services 
over packet-switched networks including IP networks and 
digital 
broadcasting 
networks, 
MMT 
defines 
three 
functional areas: encapsulation functional area, delivery 
functional area, and signaling functional area as illustrated 
in Figure 1 [4]. 
The encapsulation functional area defines the logical 
structure of media content, the Package, and the format of 
the data units to be processed by an MMT entity and their 
instantiation with ISO base media file format (ISOBMFF) 
as specified in ISO/IEC 14496-12. It produces Media 
Processing Unit (MPU) as an output.  
The delivery functional area defines an application layer 
transport protocol including the payload format required for 
transferring encapsulated media data from one network 
entity to another. The payload format is defined to enable 
the carriage of encoded media data which is agnostic to 
media types and encoding methods. 
The signaling functional area defines formats of signaling 
messages to manage delivery and consumption of media 
data.  
 
 
 
Figure 1. MMT functional areas and interface 
 
The MMT technology adopts ARQ technique as an error 
control method for data transmission over error-prone 
networks. Like the general behavior of the ARQ scheme 
using a Negative Acknowledgment (NACK) [8], in case of 
packet loss, a NACK is sent back from the receiving entity 
to the sending entity and the sending entity retransmits the 
lost packet [6].  
Figure 2 illustrates the basic operation of the MMT ARQ 
process [4]. The basic operation of ARQ process is as 
follows. The first step is the generation of ARQ 
configuration (AC) message by MMT sending entity, then it 
is delivered to the receiving entity. MMT receiving entity 
stores the ARQ configuration information. MMT receiving 
entity continues with receiving MMT media packets and 
checks whether there is a lost packet or not.  
 
Figure 2. Operation of MMT ARQ process 
 
Once MMT receiving entity determines that a packet has 
been lost, an ARQ feedback (AF) message is generated 
according to the configuration information defined in the AC 
message. The AF message is sent to MMT sending entity 
which will generate the retransmission packet to be sent to 
MMT receiving entity. MMT receiving entity is able to 
substitute the lost MMT packet with the retransmission 
packet. 
 
III. 
PROPOSED DELAY CONSTRAINED ARQ MECHANISM 
FOR MMT PROTOCOL 
One of the well-known problems in ARQ happens if 
networks experience severe congestion. In this situation, the 
retransmission packet leads more congestion and causes the 
further network degradation. Furthermore, in case of real-
time video communication, the ARQ will be successful only 
if the retransmitted packet is received before its arrival 
deadline. When the RTT is so high that the retransmitted 
packet will not arrive in time, the retransmission will not 
improve the quality [7].  
The objective of the proposed delay constrained ARQ is 
to suppress retransmitting requested lost packets that will 
not arrive in time for playback. By using the delay 
constrained retransmission, the MMT sending entity can 
avoid unnecessary retransmission of the out-of-date packets 
and therefore minimize the probability of wastefully 
retransmitted packets. This results in a reduced amount of 
data traffic wastefully injected into the network. The 
proposed delay constrained ARQ uses arrival deadline to 
62
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-428-2
AFIN 2015 : The Seventh International Conference on Advances in Future Internet

decide whether MMT sending entity retransmits the 
requested lost packet or not.  
Figure 3 shows an exemplary timing diagram of the 
proposed delay constrained ARQ. In Figure 3, arrival 
deadline denotes the maximum tolerable latency for the 
requested retransmission packet to arrive at the receiver. If 
the retransmitted packet arrives later than arrival deadline, 
even if the packet arrives intact, it is regarded as useless and 
discarded so that decoding may not occur. Thus, the 
recovery latency for the lost packet should be taken into 
account for the real time video delivery wherein late repair 
becomes useless because of the real time nature of the data. 
RTT information which is crucial for the delay constrained 
retransmission is already available to the sender by the 
reception quality feedback (RQF) message supported in the 
MMT standard. This could be achieved by using the 
timestamp field existing in the MMT packet header. This 
timestamp field specifies the time instance of MMT packet 
delivery based on Coordinated Universal Time (UTC), 
which corresponds to the sending time at the first byte of 
MMT packet.  
 
 
Figure 3. Timing diagram of the proposed delay-constrained ARQ 
 
Based on the above analysis, when the MMT receiving 
entity detects the loss of packet, the receiver sends AF 
message to the MMT sending entity, and then the sender 
takes the decision procedure for delay constrained 
retransmission as shown in Figure 4 to decide whether to 
transmit the requested lost packet or not. The estimated RTT 
can be obtained a priori at the sending entity by RQF 
message provided in MMT [6]. For more accurate 
estimation of the RTT, up-to-date ARQ feedback delay (Df) 
value can be informed to the sending entity by enclosing 
ARQ feedback timestamp (TARQ) into the AF message. ARQ 
feedback timestamp corresponds to the time instant of 
sending the AF message to the MMT sending entity. Using 
the ARQ feedback timestamp, TARQ, the sending entity can 
obtain up-to-date ARQ feedback delay (Df). And this 
updated Df value can be used to compute up-to-date RTT. 
Finally, if the RTT is estimated to be less than the arrival 
deadline, sender retransmits the requested lost packet to the 
receiver. Otherwise, the sender decides not to transmit the 
requested lost packet to the receiver. In order to implement 
the proposed delay constrained ARQ scheme, the ARQ 
feedback timstamp and the arrival deadline information 
needs to be included in the AF message of MMT. The AF 
signaling format supporting the proposed delay constrained 
ARQ scheme could be found in [9] and [10], and has been 
approved to be included in the standard document of MMT 
AMD1 (Amendment 1) in the MPEG meeting. 
 
 
Figure 4. Procedure to decide whether to retransmit the lost packet at the 
MMT sending entity 
 
The arrival deadline can be obtained at the receiver side 
by considering the remaining amount of safely arrived 
packets in the receiver buffer when the ARQ feedback 
message is prepared for sending. Therefore, we exploit the 
remaining amount of safely arrived packets in the receiver 
buffer and average bit rate of the MMT packet stream when 
the ARQ feedback message is prepared for sending. 
63
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-428-2
AFIN 2015 : The Seventh International Conference on Advances in Future Internet

IV. 
EXPERIMENTAL RESULTS 
To evaluate the efficacy of the proposed delay 
constrained ARQ scheme, we performed extensive 
experiments over the MMT protocol-based HEVC video 
streaming system. The video streaming system consisted of 
an MMT sending entity and receiving entity. Before 
initiating video streaming, the AC message which includes 
the retransmission policy to be adopted by the MMT 
sending and receiving entities in the event of packet loss is 
sent to the receiving entity by the ARQ policy manager. The 
MMT sending entity retains an MMT packet in the buffer 
until the timeout, and it is thus available for retransmission. 
If MMT sending entity receives an AF message requesting 
retransmission of the lost packet, it checks whether the lost 
packets is available in the retransmit buffer and it 
retransmits the packet only if the arrival deadline value is 
greater than RTT. To verify the performance of the 
proposed ARQ scheme in an error-prone video transmission 
environment, the NIST-Net [11] Linux-based network 
emulation tool was used to emulate the packet-loss network 
environment. We used the Stockholm video sequence with 
HD 1080P resolution. The Stockholm video sequence was 
coded by an HEVC encoder, which is being increasingly 
used for broadcasting and mobile multimedia applications. 
The run-time of the generated video streaming was 4 min 39 
s, and the number of generated MMT packets to be 
delivered was 193,042 in total. The size of each MMT 
packet was 1500 bytes, and the receiving buffer was set to 
store 300 MMT packets.  
In the first experiment, the network delay was set to 50 
ms while the packet loss rate has varied from 3% to 10% by 
the NIST-Net network emulator. Figure 5 shows the ratio of 
the number of renounced retransmission to the total number 
of retransmission request for various packet loss rates. We 
can observe that the ratio of the renounced retransmission 
increases as the packet loss rate increases. This is due to the 
fact that as the packet loss rate increases, the arrival 
deadline for the lost packet is generally decreased because 
of the less safely arrived MMT packets in the receiver 
buffer. 
 
 Figure 5. Ratio of renounced retransmission for various packet loss rates 
under fixed network delay of 50 ms 
Figure 6 shows the saved network bandwidth resulted by 
the proposed delay constrained ARQ scheme. We can 
observe that the saved network bandwidth increases as the 
packet loss rate increases. As the packet loss rate increases, 
the ratio of the renounced retransmission also increases. 
This results in avoiding unnecessary retransmission of the 
out-of-date packets and therefore reduces amount of data 
traffic wastefully injected into the network. 
 
Figure 6. Saved network bandwidth for various packet loss rates under 
fixed network delay of 50 ms 
In the second experiment, the packet loss rate was set to 
10% and the network delay has varied from 100 ms to 400 
ms by the NIST-Net network emulator. When compared to 
the simulation conditions for the first experiment, the 
channel condition significantly deteriorated, which showed 
a higher packet loss rate and much longer network delays 
experienced during the video streaming.  
Figure 7 shows the ratio of the number of renounced 
retransmissions to the total number of retransmission 
requests for various network delays under the same test 
condition. It is evident that the ratio of the renounced 
retransmissions significantly increased as the network 
delays increased. This was due to the fact that, as the 
network delay increased, the arrival deadline for the lost 
packet generally decreased on account of fewer safely 
arrived MMT packets in the receiver buffer. 
 
Figure 7. Ratio of renounced retransmission for various network delays 
under the fixed packet loss rate of 10% 
64
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-428-2
AFIN 2015 : The Seventh International Conference on Advances in Future Internet

Figure 8 shows the saved network bandwidth resulting 
from the proposed scheme. We can observe that the saved 
network bandwidth increased as the network delay increased. 
As the network delay increased, the ratio of the renounced 
retransmission also increased. This resulted in the avoidance 
of unnecessary retransmissions of out-of-date packets and 
therefore reduced a significant amount of data traffic 
wastefully injected into the network. As shown in Figure 8, 
approximately 190 Kbps were saved for the network delay 
case of 400 ms. This saved bit-rate amount corresponded to 
13% of the total data traffic generated by the transmitted 
MMT packets. 
 
 
Figure 8. Saved network bandwidth for various network delays under the 
fixed packet loss rate of 10% 
 
(a) packet loss rate of 5% 
(b) packet loss rate of 7% 
Figure 9. Comparison of RTT and arrival deadline for 100 randomly chosen 
lost packets during video streaming over various packet loss rates 
 
In Figure 9, we compare RTT and arrival deadline values 
for one hundred randomly chosen lost packets during video 
streaming over packet loss rates of 5% and 7%. If the RTT 
is greater than the arrival deadline, the sending entity 
decides not to retransmit the requested lost packet to the 
receiving entity. Otherwise, the sending entity decides to 
retransmit the lost packet to the receiving entity. As shown 
in Figure 7, as the packet loss rate increases, the portion of 
the lost packet which has greater RTT value than the arrival 
deadline also increases.  
 
V. 
CONCLUSIONS 
In this paper, we proposed a delay constrained ARQ 
scheme to enhance the effectiveness of the basic ARQ 
process of MPEG MMT standard for video streaming over 
Internet. Using the proposed ARQ scheme, it is possible to 
avoid unnecessary retransmission of the out-of-date packets 
and therefore minimize the probability of wastefully 
retransmitted packets.  
 
ACKNOWLEDGMENT 
This research was supported by the MSIP(Ministry of 
Science, ICT and Future Planning), Korea, under the 
ITRC(Information Technology Research Center) support 
program (IITP-2015-H8501-15-1001) supervised by the 
IITP(Institute 
for 
Information 
and 
Communications 
Technology Promotion). 
 
REFERENCES 
 
[1] S. Aoki, K. Aoki, H. Hamada, Y. Kanatsugu, M. Yamamoto, 
and K. Aizawa, “A new transport scheme for hybrid delivery 
of content over broadcast and broadband,” Proc. Broadband 
Multimedia Systems and Broadcasting (BMSB), 2011, pp. 1-6. 
[2] Y. Lim, K. Park, J. Lee, S. Aoki, and G. Fernando, “MMT: 
An emerging MPEG standard for multimedia delivery over 
the Internet,” IEEE Multimedia, vol. 20, no. 1, Jan. 2013, pp. 
80-85. 
[3] ISO/IEC 23008-2, High efficiency coding and media delivery 
in heterogeneous environments – MPEG-H Part 2: High 
Efficiency Video Coding (HEVC), 2013. 
[4] ISO/IEC 23008-1, High efficiency coding and media delivery 
in heterogeneous environments – MPEG-H Part 1: MPEG 
Media Transport (MMT), 2014. 
[5] Y. Lim, S. Aoki, I. Bouazizi, and J. Song, “New MPEG 
transport standard for next generation hybrid broadcasting 
system with IP,” IEEE Trans. Broadcasting, vol. 60, no. 2, 
Feb. 2014, pp. 160-169. 
[6] ISO/IEC 23008-1 AMD 1, Additional technologies for MPEG 
Media Transport (MMT), 2014. 
[7] Y. Wang, and Q. Zhu, “Error control and concealment for 
video communication: A review,” Proc. of the IEEE, vol. 86, 
no. 5, May 1998, pp. 974-997. 
[8] M. Podolsky, S. McCanne, and M. Vetterli, “Soft ARQ for 
layered streaming media,” Journal of VLSI Signal Processing, 
vol. 27, 2001, pp. 81-97. 
[9] ISO/IEC JTC1/SC29/WG11 m32363, Update of ARQ 
feedback message for delay-constrained retransmission in 
MMT, 2014. 
[10] ISO/IEC 
JTC1/SC29/WG11 
m35228, 
Update 
of 
Implementation guideline for delay constrained ARQ in 
MMT, 2014. 
[11] NIST-Net, Software provided by National Institute of 
Standards and Technology (NIST), available on-line at 
http://www-x.antd.nist.gov/nistnet, [retrieved: December, 2014]. 
65
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-428-2
AFIN 2015 : The Seventh International Conference on Advances in Future Internet

