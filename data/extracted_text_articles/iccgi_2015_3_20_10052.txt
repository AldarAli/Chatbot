Application of a Models Integration Module to the Cutting Slabs Problem in a 
Continuous Casting Machine 
 
Konstantin Aksyonov, Anna Antonova, Elena Smoliy, Eugene Sysoletin, Alexei Sheklein 
Dept. of Information Technology 
Ural Federal University 
Ekaterinburg, Russia 
e-mail: wiper99@mail.ru, antonovaannas@gmail.com, bpsim.dss@gmail.com, unclesal@mail.ru, alexbrain@bk.ru  
 
 
Abstract—This paper considers an application of a model 
integration module to the cutting slabs problem in a 
continuous casting machine. The model integration module is a 
part of the modeling subsystem of the metallurgical enterprise 
information system being developed. Developed information 
system is intended to decide the topical production problem: 
analysis and improvement the technological, logistical and 
organizational processes.  This paper focuses on the interaction 
of the system modules and dives into the principles that the 
integration module is based on. Also, the development of a 
simulation model of cutting slabs in a continuous casting 
machine is considered with the use of the integration module. 
Simulation modeling is used to optimize the sequence of the 
melts supplied to the continuous casting machine. The goal of 
optimization is to reduce the deviation between the estimated 
and actual numbers of slabs, because such deviations can lead 
to missed deadlines. The integration module supports a multi 
agent simulation. Agents in the developed model are intended 
to describe the cutting slabs algorithm used by technologists in 
the metallurgical production. As a result of experiments with 
the model a solution has been found. The following sequence of 
melts should be supplied to the continuous casting machine: 
initially, the melts from the usual quality steel, followed by the 
melts from the high quality steel.  
Keywords-model 
integration; 
simulation; 
agent-based 
modeling; continuous casting machine; automated system. 
I. 
 INTRODUCTION 
Effectiveness of metallurgical production is tightly 
interconnected with perfection of technological, as well as 
logistical and business processes. The problems that can 
benefit from modeling are the following. 
1. 
Industrial: a) irregularity of production load over a 
monthly period and other scheduling intervals; b) suboptimal 
load of production units of main technological process; c) as 
a result of the previous, suboptimal load of auxiliary and 
transportation equipment; d) unavailability of operative 
modification of the schedules and production graphs on 
technological reasons, related to the downtime of equipment 
on various reasons, interruption of stock supply. 
2. 
Predictive modeling: a) analysis of effectiveness of 
suggested actions on new technological decisions; b) 
analysis of effectiveness of the innovative events on energy 
and resource saving; c) analysis of suggested actions on new 
business decisions at the level of processing facilities 
control, shop and inter-shop control and interaction; d) 
analysis of results of possible operative re-planning in case 
of unexpected failures, accidents and other emergencies. 
Thus, creation and interaction of technological, logistical 
and business models is an important aspect for improvement 
of effectiveness of a metallurgical enterprise as a whole. 
In addition, a feature of the problem of production 
processes execution analysis is the need to work with the 
processes model in real time. The processes model execution 
in real time means delivering the parameters from automated 
process control system (APCS) sensors to the model input 
and producing at the model output a set of control parameters 
transmitted in manufacturing execution system (MES-
system). Real time is connected with the application of the 
control models for tracking and monitoring the current state 
of the processes. For example, in the cutting slabs problem 
there is a need to track in real time the signal supply for gas 
cutting for cutting the slab to withstand the specified 
dimensions of the slabs. 
This paper focuses on the issue of the integration of 
enterprise information systems and intelligent automated 
system for tracking and monitoring the current state of the 
production process. We propose an approach for the 
integration of collection, storage and analysis of production 
processes, simulation of production processes in real time, 
and formation a recommendation for change in production 
processes. This approach is implemented in the models 
integration 
module 
of 
the 
metallurgical 
enterprise 
information system. 
The remainder of the paper is organized as follows: 
Section 2 provides an overview of current state of the 
modeling tools. Section 3 presents a metallurgical enterprise 
information system architecture including systems modules 
interaction description. Section 4 introduces the application 
of the integration module to the decision of the cutting slabs 
problem in a continuous casting machine. Section 5 
concludes this paper and explores future work. 
II. 
CURRENT STATE OF TOOLS 
In modern production enterprises, there is a problem of 
integration of heterogeneous information systems into a 
single information space. Such an integration requires a 
decision to be made for the following tasks: 
• 
Synchronization of identifiers of the entities 
(processes, production units, etc.). 
65
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

• 
Converting forms of information transfer. One 
accounting system can only work with the files, the other 
system allows communication via TCP/IP, the third system 
is a WEB-service. 
• 
Converting formats of information transmitted. 
Attributes of the same production units are different in 
different information systems. Some attributes overlap (but 
have different names) and other attributes are specific to the 
information layer. 
• 
Synchronization in time of incoming messages.  
Because the information systems are different (some records 
are maintained automatically, other involve human subjects), 
then, for example, we can have a message about creating a 
production unit arrive sooner than the message about the 
beginning of the process to create the production unit. 
Today, there are several approaches to integrate 
heterogeneous information systems. The approach in which 
the information exchange takes place with the participation 
of the Enterprise Service Bus (ESB) [1] now. The basic idea 
of ESB is the message exchange between different IPs 
through a single point. But ESB is nothing more than a 
framework, based on which the mentioned problems will 
have to be solved. Not all information systems have ESB-
adapters, so the transition from the form of data presentation 
in one system in the form of data representation in the other 
system usually has to be implemented within the ESB. In this 
paper, we propose an approach to the problem of integration 
of heterogeneous information systems aimed at solving the 
above mentioned problems, rather than to cover various 
protocols. The approach is implemented in the models 
integration module. This module allows using the integrated 
data from the different information systems in the real-time 
simulation. 
The proposed approach has been verified on the data of 
metallurgical enterprise which has the following features: 1) 
the number of parameters of the life cycle of product unit is 
about 6-7 thousand units; 2) information on the parameters is 
stored in various information systems; 3) there are no 
adequate mathematical models of the processes. The 
modeling system in the proposed approach is used to 
describe and track in the real-time the dynamics of changes 
in the parameters of the production processes, optimization 
of production processes, and formation of recommendations 
for changes in the processes. Multi-agent simulation is used 
to formalize the expert knowledge of technologists about 
management of production processes.  
The development trend of enterprise information systems 
focuses on wide application of Internet technologies. 
Currently the commercial modeling systems available on the 
market, including Plant Simulation [2], Simio [3], AnyLogic 
[4] are all desktop applications. Additional requirements for 
simulation modeling tools for team development of 
comprehensive simulation models include support for multi-
user environment, and running simulation on the Internet. 
Comparison of Plant Simulation (PS), Simio (Sm), 
AnyLogic (AL) systems and modeling subsystem (MS) of 
the metallurgical enterprise information system is shown in 
Table 1. 
TABLE I.  
ANALYSIS OF THE MODELING TOOLS 
Comparison criteria 
PS 
Sm 
AL 
MS 
Creation an enterprise processes model 
Description language of the 
technological, logistical and business 
processes 
● 
● 
● 
● 
Creation of a multi agent model 
○ 
● 
● 
● 
Description of an agent knowledge 
base 
○ 
○ 
○ 
● 
Expert modeling 
○ 
○ 
○ 
● 
Optimization of enterprise processes 
Creation of an experiments plan 
● 
● 
● 
● 
Changing the model parameters during 
the experiment 
○ 
○ 
● 
● 
Use of heuristic methods to 
automatically search an optimal 
solution 
● 
● 
● 
● 
Ability to use 2D / 3D animation 
● 
● 
● 
● 
Formation recommendations on the 
elimination of bottlenecks 
○ 
○ 
○ 
● 
Execution model in real time 
○ 
○ 
○ 
● 
Convenient interface 
User interface (GUI / WEB) 
GUI 
GUI 
GUI 
WEB 
Interface of a specialist in the subject 
area for model creation and process 
optimization 
○ 
● 
○ 
● 
 
A metallurgical enterprise information system is 
developed in the Ural Federal University for the purpose of 
integrated application of the simulation and statistical 
analysis of production data for the problem of continuous 
improvement of the production process. The metallurgical 
enterprise information system is a web-oriented system for 
tracking, monitoring, modeling, analyzing and improving 
processes of steel products manufacturing [5]-[7]. 
Comparison of modeling tools showed that the most 
functionality is included in the modeling subsystem of the 
metallurgical enterprise information system and AnyLogic. 
Only modeling subsystem of the developed information 
system is focusing on the execution model in real time via 
web-oriented interface. 
At the moment, the software-as-a-service (SaaS) 
technology is the most convenient in use, optimal in 
performance and client software requirements. The end user 
in this case is the analyst or decision making person. The 
modeling 
subsystem 
of 
the 
metallurgical 
enterprise 
information system includes a model integration module. 
This module uses a service oriented approach [5].  
All of the analyzed modeling tools except MS cannot be 
included into the metallurgical enterprise information system 
because they do not support the real-time simulation and 
parameters exchange with the corporate information systems 
of the metallurgical enterprise. 
III. 
METALLURGICAL ENTERPRISE INFORMATION SYSTEM 
ARCHITECTURE 
The metallurgical enterprise information system consists 
of the following subsystems: subsystem of the data 
collection and analysis of production and modeling 
subsystem. The architecture of the metallurgical enterprise 
information system is shown in Figure 1. 
66
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

Subsystem of the data collection
Data 
warehouse
Modeling subsystem
Prepared data
Data 
exchange 
module
Query builder
Integration 
module
Simulation 
module
Simulation 
module
Data 
preparation 
module
Request for the
data sample
The data sample
The data sample
Request for the
data sample
Simulation models reading 
Simulation models saving 
Transmission the data for the analysis
of parameters of the executed production processes
The data sample
Request for the
data sample
Creation of the
templates and query rules
Query data visualization
Results of the processes
parameters analysis
Recording the reports on recommendations
for changing the production processes
Data recording
Transmission the data for
the processes parameters analysis 
Results of the processes parameters analysis
Corporate 
information 
systems
ERP-
systems
MES-
systems
APCS
Data transmission
Data receiving
Control information
Simulation models creation
Simulation models visualization
User
Search for
recommendations
Models 3D Visualization
Recording of the
templates
and query rules
Unloading the reports on recommendations
for changing the production processes
Prepared data
Data samples conversion
Modeling in real time
Models
visualization
in real time
   
Figure 1.  Architecture of the metallurgical enterprise information system 
The subsystem of the data collection consists of the 
following modules: data exchange module, query builder [7], 
and data warehouse. The modeling subsystem consists of the 
following modules: data preparation module, simulation 
module, and integration module.  
The data exchange module is intended for two-way 
communication between the modules of the developed 
system and enterprise information systems. The query 
builder module is intended to construct of requests for 
issuance of data on production processes without the 
involvement of  information technology (IT) professionals. 
The data warehouse module is intended to accumulate 
and store the information about production processes from 
the following data sources: corporate information systems, 
MES-systems, and APCS. The data preparation module is 
intended to transform and analyze the data from the data 
warehouse. The prepared data is used in the simulation 
module. The simulation module is intended to: 1) create and 
execute simulation models of the production processes with 
the use of 2D/3D animation, 2) receive data from the data 
preparation module, query builder, and integration module, 
3) optimize the production processes, and 4) form 
recommendations on the elimination of bottlenecks. 
A. Interaction of the Integration Module with the Data 
Exchange Module 
The first option of interaction between the integration 
module and the module for data exchange with the enterprise 
automated system suggested the use of “Publisher – 
Subscriber” mechanism [8]. In this case, the integration 
module subscribed for a specific subject, and the data 
exchange 
module 
published 
all 
occurring 
events, 
distinguishing these by the subject. Thus, the integration 
module obtained only the required events. A significant 
disadvantage of this option is that the integration module has 
to reserve its own resources for the channel listening and 
awaiting the new information. 
The main ideology of the system under discussion is the 
asynchrony of operation and the use of non-blocking 
operations of input-output. At this moment, the integration 
module uses the events mechanism, which is identical for all 
parts of the system. The event exchange is based on the 
Socket.IO protocol, on top of which the Java framework 
netty.io is implemented. Netty.io is the event oriented library 
for the implementation of network exchange using various 
protocols, including UDP, HTTP/HTTPS. 
The data exchange module receives the emerging events 
on any of the listed protocols, providing the maximum 
versatility of its operation. At the same time, all events are 
produced using the only protocol, which is Socket.IO. Such 
approach allows maximum unification of event exchange, 
providing the feature of receiving messages both from Java 
based modules and from in-browser clients, written in 
JavaScript. Work through Socket.IO requires registration of 
callback procedures. Any waits in this case are eliminated. 
67
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

Apart from this, the use of event mechanism conforms to 
the Model-View-Controller (MVC) concept [9], since the 
processes of receiving, possible data pre-processing, model 
execution and display of results are fully isolated. This 
allows multiple views of the same working model at the 
same time, e.g., the work may be represented in 2D and 3D, 
or the specific user may have the aggregated information on 
the shop or the full detail on a certain mechanism [5]. 
B. Data Exchange Mechanism Between the Modules 
If model operation permits the real-time mode, the 
integration module subscribes for the necessary parameters. 
Subscription checks previously loaded models, which avoids 
double subscription for the same parameter (see Figure 2). 
Socket.IO
Data exchange module
Model 1
Model N
Integration module
Notification
Event
Event
 
Figure 2.  Receiving data from the data exchange module 
The integration module launches the models and transfers 
the results of their operation into the data exchange module. 
In the first step, the fully loaded and executed test model 
modifies the state of its inputs. Next, the parameter is 
searched in the database. When the data exchange module 
receives the «Event_ParamValue_Got» event, it runs a 
number of checks. The received value must be of expected 
type (string, integer, etc.). The values themselves are written 
in the pre-defined form, depending on parameter kind 
(vector, scalar, linked list, synthetic). 
Thus, before the «parameter value changed» event is 
received, the parameter itself needs to be stored in the 
database as an object with certain features. If this is not done, 
the processing of received value will cause an error. 
The integration module interacts with the database in two 
cases: 1) when loading the model, since all information is 
stored in the database, 2) when model operation requires 
processing of statistical data, since this data is obtained 
beforehand and stored in the database. In the first case, the 
integration module receives a “Start” signal, which has the 
unique model identifier. Knowing it, the integration module 
accesses the database and selects the corresponding model. 
In the second case, the integration module receives the 
required parameter identifiers from the model as well as the 
desired time interval. Next, it selects the values of 
parameters from the database and forwards them to the 
model. 
C. Multi-agent Architecture of the Integration Module 
The multi-agent architecture of the integration module 
includes the following agents. 
• 
Data exchange agent (used to update the model 
parameters and transfer the results of the experiment in the 
corporate information systems). 
• 
Simulation agent (used to solve the process 
management problems in real time based on real-time 
models). 
• 
Messaging agent (used for interaction between the 
data exchange agent and simulation agent). 
The simulation agent allows to build models with the use 
of the notation of multi-agent resource conversion processes 
(MRCP) [6][10]. According to the MRCP notation, model's 
nodes are either agents or operations. 
The simulation agent is based on the InteRRaP 
architecture [11] as the most appropriate for problem 
domain. In accordance with InteRRaP architecture common 
concept, a simulation agent model is represented in four 
levels (Figure 3).  
External environment
(convertors, agents, resources, 
tools, parameters, goals)
Simulation model
Planning subsystem
Reactive subsystem
External environment interface
Sub-system of cooperation with other agents
Inner behaviour
(Activity diagram)
Logical output 
from strategic 
knowledge  base 
(Decision search 
diagram)
Strategic knowledge 
base
(frames)
Tactical knowledge 
base 
(productions)
Logical output from tactical 
knowledge base 
(Direct output)
 
Figure 3.  BPsim agent hybrid architecture 
1. 
Sub-system of cooperation with other agents 
corresponds to the following MRCP elements: converters, 
resources, tools, parameters, goals.  
2. 
External 
environment 
interface 
and 
reactive 
behavior components are implemented in form of agent 
rule‟s base and inference machine (simulation algorithm). 
3. 
Reactive subsystem performs the following actions: 
receives tasks from the external environment, places tasks in 
a goal stack, collates the goal stack in accordance with the 
adopted goal ranging strategy, selects a top goal from the 
stack, and searches on the knowledge base. 
4. 
Local planning subsystem purpose is effective 
search for decisions in complex situations (e.g., when goal 
achievement requires several steps or several ways for goal 
achievement are available). Local planning component is 
based on a frame expert system. The frame-concept and 
conceptual-graph based approach are utilized for knowledge 
formalization. 
IV. 
APPLICATION A MODELS INTEGRATION MODULE TO 
THE CUTTING SLABS PROBLEM 
A. Statement of the Problem  
In metallurgical production, special attention is paid to 
the improvement of the continuous casting process in order 
to increase the share of steel produced at continuous casting 
machine (CCM). The effectiveness of the CCM has a direct 
impact on the quality and cost of the production 
manufactured in the subsequent process stages. In the study 
of the physical and mechanical processes of continuous 
casting affecting the quality of the finished product, a 
method of mathematical modeling is widely spread [12]. In 
68
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

the study of the logistics and organizational (business) 
processes of continuous casting, a simulation method shows 
good results as applied to the optimization of production 
planning [13]. Development of simulation models of CCM 
technological processes affecting the quality of the finished 
product is topical. 
We consider the development of a cutting slabs model 
with the use of the simulation module of the metallurgical 
enterprise information system. The developed model is run 
in the integration module, and the series of the melts are fed 
to the model input in real time (baseline experiment). 
A casting ladle with melt goes to the CCM, where the 
liquid steel is cast; the ingot is cooled and cut into slabs. A 
CCM intermediate ladle distributes steel on the streams and 
allows continuous casting when replacing an empty casting 
ladle by full ladle. Metal is cooled in the water-cooled 
mould; the metal ingot is pulled in a secondary cooling zone 
(SCZ). For gas cutting (GC) work in automatic mode, 
technologists use an algorithm for cutting the ingot into slabs 
on the melts border. 
When the signal "Start pouring of the melt from the 
casting ladle" is generated, the estimated length of the melt 
Li
est is determined by the formula: 
F
M
L
i
i
i
est




2
 
Formula (1) shows that the melt length is proportional to 
the steel mass with a coefficient depending on the steel 
density and cross-section of the finished slabs. 
We consider the work of two-strand CCM with the 
following characteristics: the pulling speed of the ingot from 
the mold ν is 0.8 meters per minute; the mold length is 1 
meter, the SCZ length is 50 meters. A diagram of cutting the 
ingot of the melt (i-1) based on the desired slab length DSLi-1 
and new melt start signal is shown in Figure 4. The 
parameter P is determined by measuring as shown in Figure 
4. 
1
...
k
Signal «Start pouring of the melt i 
from the casting ladle»
“Poured” P
DSLi-1
1
DSLi-1
k
DSLi-1
k+1
DSLi-1
j=DSLi-1 , 
j=1,…,k+1
k+1
The point of measurement of 
the ingot length that drawn out 
of the mold
Water-cooled mould
SCZ
 
Figure 4.  Diagram of cutting the ingot of the melt (i-1) 
We analyze the CCM work on bottling series of 10 melts. 
Each melt i is characterized by the following parameters: 
steel weight in the casting ladle Mi (kg); steel grade (usual 
quality steel „A‟ with density ρi equal to 7280 kg/m3 and 
high quality steel „B‟ with ρi equal to 7850 kg/m3); desired 
slab length DSLi (m); slab sectional area F equal to 0.225 m2. 
Table 2 shows the algorithm for cutting the ingot into 
slabs on the melts border. This algorithm is used by 
technologists in order to determine the actual number of 
slabs Ki
act. The estimated number of slabs Ki
est is defined as 
the ratio of the estimated melt length Li
est to the desired slab 
length DSLi. 
We minimize the total number of positive and negative 
deviations in the slabs quantity S by changing the sequence 
of the supply of melts on the CCM. The total number of 
positive and negative deviations in the slabs quantity was 
determine by the formula: 







i
i
positive
i
i
negative
S
2

where Δi
negative – negative deviation in the slabs quantity 
of the melt i: Δi
negative = Ki
act – Ki
est < 0, 
Δi
positive – positive deviation in the slabs quantity of the 
melt i: Δi
positive = Ki
act – Ki
est ≥ 0. 
Formula (2) shows that the total number of deviations in 
the slabs quantity is growing faster when the growth in the 
number of negative deviations is observed. 
TABLE II.  
THE ALGORITHM FOR CUTTING THE INGOT INTO SLABS ON 
THE MELTS BORDER 
Transition 
type on the 
melts 
border 
The condition on 
the parameter P 
“Poured” 
Decision 
The melt 
"the worst 
for the best" 
(steel grade 
of the melt i 
is worse 
than steel 
grade of the 
melt i-1) 
cm
P
 200
 
In the melt (i-1) there are (k-1) 
slabs with a slab length DSLi-1. 
Slab k with a new desired length 
DSLi will be the first in the melt i. 
cm
P
 200
 
In the melt (i-1) there are k slabs 
with a slab length DSLi-1. Slab 
(k+1) with a new desired length 
DSLi will be the first in the melt i. 
The melt 
"equivalent
" (steel 
grades of 
the melts  
i-1 and i are 
equal in 
quality) 
cm
P
 0
 
In the melt (i-1) there are (k-1) 
slabs with a slab length DSLi-1. 
Slab k with a new desired length 
DSLi will be the first in the melt i. 
cm
P
 0
 
In the melt (i-1) there are k slabs 
with a slab length DSLi-1. Slab 
(k+1) with a new desired length 
DSLi will be the first in the melt i. 
The melt 
"the best to 
the worst" 
(steel grade 
of the melt i 
is best than 
steel grade 
of the melt 
i-1) 
cm
P
DSLi
k
600
)
(
1
1




 
In the melt (i-1) there are (k+2) 
slabs with a slab length DSLi-1. 
Slab (k+3) with a new desired 
length DSLi will be the first in the 
melt i. 
cm
P
DSLi
k
600
)
(
1
1




 
In the melt (i-1) there are (k+1) 
slabs with a slab length DSLi-1. 
Slab (k+2) with a new desired 
length DSLi will be the first in the 
melt i. 
69
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

The negative deviation is such deviation, where the 
actual number of slabs is less than the estimated (expected) 
number of slabs. This situation is bad, because the order will 
not be satisfied. The number of positive deviations also 
affects the total number of deviations in the slabs quantity. 
The positive deviation is such deviation, where the actual 
number of slabs is more than the estimated (expected) 
number of slabs. This situation is not so good, because the 
additional slabs will not be paid. 
B. Development of the Simulation Model of Cutting Slabs 
The structure of the simulation model developed via the 
simulation 
module 
of 
the 
metallurgical 
enterprise 
information system is shown in Figure 5 (right side). Agents 
in the model of cutting slabs are used to implement the logic 
to process the orders and to manage the order's attributes. 
Operations in the model are used to visualize the duration of 
the work of CCM elements for each stream: mold, secondary 
cooling zone and gas cutting. The model structure can be 
divided into three work units: 1) description of the casting 
ladle (intermediate ladle) state; 2) description of the CCM 
elements work; 3) description of the generation and removal 
of the orders. Seven orders have been described in the model. 
The order z1 "Melt order" is the main order that collects data 
from all orders about temporal characteristics of the CCM 
elements work and the number of slabs for each melt. Orders 
z2 and z3 «Melting through the water-cooled mould 1" and 
"Melting through the water-cooled mould 2" are used to 
describe the logic of two streams of water-cooled moulds 
and then removed. Orders z4 and z5 «Melting through SCZ 
1" and "Melting through SCZ 2" are used to describe the 
logic of two streams of the CCM secondary cooling and then 
removed. Orders z6 and z7 «Melting through GC 1" and 
"Melting  through GC 2" are used to describe the logic of 
two streams of the gas cutting and then removed. Each order 
has its own attributes, for example, attribute z6_pnext 
contains the steel density for the next melt. 
The algorithm for cutting the ingot into slabs on the melts 
border is described using agents of cutting the ingot for each 
CCM stream. A knowledge base of agent of cutting the ingot 
1 (for stream 1) is shown in Figure 5 (in elements tree on left 
side). The agent knowledge base comprises situations 
described in Table 2. Separate situation is a rule of the form 
"If - Then" built using model variables (resources and orders 
z6 attributes). The water-cooled mould agent knowledge 
base contains "If - Then" rules to ensure the work with the 
orders z2/z3 attributes and generation of the orders z4/z5, 
which is transferred to the SCZ agent. The SCZ agent 
knowledge base contains "If - Then" rules to ensure the work 
with the orders z4/z5 attributes and generation of the orders 
z6/z7, which is transferred to the ingot cutting agent. 
C. Experiments Results Analysis 
We consider the experiments with the developed model 
in the integration module of the modeling subsystem. Table 
3 shows the simulation results for the initial input data. The 
following value of the output characteristic has been 
obtained: total number of positive and negative deviations in 
the slabs quantity S=4. 
We conducted and analyzed a series of seven 
experiments on the supply chains of the melts with different 
interleaving DSL parameters and steel grade. The results of 
the experiments are shown in Figure 6 as a distribution of the 
total number of deviations in the slabs quantity S depending 
on the experiment. 
 
Figure 5.  Structure of the simulation model developed in the modeling subsystem of the metallurgical enterprise information system 
70
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

TABLE III.  
BASELINE EXPERIMENT RESULTS 
Input model 
parameters 
Output model parameters 
№ of 
the 
melt, 
i 
Steel 
grade 
type 
DSLi 
(mm) 
Actual 
length 
of the 
melt, 
Li
act 
(mm) 
Actual 
number 
of 
slabs, 
Ki
act 
Estimated 
number 
of slabs, 
Ki
est 
Number 
of 
deviations 
in the 
slabs 
quantity, 
Δi 
1 
B 
5500 
39039 
7 
7 
0 
2 
B 
7900 
48066 
6 
5 
1 
3 
A 
12000 
36504 
3 
3 
0 
4 
A 
9100 
46135 
5 
6 
-1 
5 
B 
6000 
48672 
9 
9 
0 
6 
B 
8800 
53538 
6 
5 
1 
7 
A 
6700 
40764 
5 
5 
0 
8 
A 
7300 
44412 
6 
6 
0 
9 
B 
10100 
51205 
5 
5 
0 
10 
B 
11600 
35286 
3 
3 
0 
Total number of positive and negative deviations in the 
slabs quantity, S 
4 
 
As Figure 6 shows, experiments with the best results are 
experiments №2 and №5: they are characterized by the 
absence of negative deviations in the number of slabs. In 
these experiments, the following sequence of the melts has 
been supplied on the CCM: initially, the melts from the usual 
quality steel, followed the melts from the high quality steel. 
The impact of ascending / descending DSL on the 
number of deviations in the slabs quantity has not been 
identified. 
In this section, a simulation model of cutting slabs in the 
continuous casting machine has been described using a 
modeling 
subsystem 
of 
the 
metallurgical 
enterprise 
information system. The developed model uses agent-based 
modeling in order to represent the knowledge of 
technologists. 
The model of cutting slabs has been used in the 
integration module to solve the problem of optimization the 
CCM melts sequence.  
V. 
CONCLUSION AND FUTURE WORK 
This paper introduces the perspectives of simulation 
modeling in metallurgical production. The architecture of the 
developed metallurgical enterprise information system has 
been described. Among all of the system modules the 
integration module has been highlighted as a module that 
launches the simulation models in real time. During real-time 
modeling, the input parameters are fed to the model from the 
corporate information systems, MES-systems, or APCS, and 
the output parameters formed by the model are translated to 
the data exchange module. This paper focuses on the 
description of the systems modules interaction and describes 
the integration module work principles. 
The integration module has been applied to the decision 
of the cutting slabs problem in the continuous casting 
machine. As a result of the experiments, the following 
recommendations have been obtained to optimize the CCM 
processes: it is necessary to supply the melts to CCM in the 
following sequence – initially, the melts from the usual 
quality steel, followed the melts from the high quality steel. 
These results are consistent with those obtained on the 
production. Use of simulation modeling for analysis of 
technological, logistical and business problems of an 
enterprise is a perspective direction. The method of 
simulation models integration that has been implemented in 
the developed system has successfully passed the test. 
The aim of future research is to apply the query builder 
and the data preparation modules on the stage of receiving 
input modeling data from real production. 
 
 
Figure 6.  Distribution of the total number of deviations in the slabs quantity S depending on the experiment 
71
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

ACKNOWLEDGMENT 
This research has been conducted under the terms of 
contract № 02.G25.31.0055 (project 2012-218-03-167) with 
financial support from the Ministry of Education and 
Science of the Russian Federation. 
REFERENCES 
[1] D. Chappell, Enterprise Service Bus, O‟Reilly, 2004. 
[2] Plant Simulation. The official web site, Available from: 
http://www.plm.automation.siemens.com/en_us/products/tecn
omatix/plant_design/plant_simulation.shtml. [Retrieved: May 
2015] 
[3] Modeling system Simio. The official web site, Available 
from: http://www.simio.com. [Retrieved: May 2015] 
[4] Modeling system AnyLogic. The official web site, Available 
from: http://www.anylogic.com. [Retrieved: May 2015] 
[5] K. A. Aksyonov, E. A. Bykov, O. P. Aksyonova, and A. S. 
Antonova, “Development of real-time simulation models: 
integration with enterprise information systems,” Proceedings 
of ICCGI 2014: The Ninth International Multi-Conference on 
Computing in the Global Information Technology, 22-26 June 
2014, Sevilla, pp. 45–50. 
[6] K. A. Aksyonov, I. A. Spitsina, E. G. Sysoletin, O. P. 
Aksyonova, and E. F. Smoliy, “Multi-agent approach for the 
metallurgical enterprise information system development,” 
Proceedings of 24th Int. Crimean Conference CriMiCo 2014: 
Microwave 
& 
Telecommunication 
Technology, 
7-13 
September 2014, Sevastopol, vol. 1, pp. 437–438. 
[7] A. Borodin, Y. Kiselev, S. Mirvoda, and S. Porshnev, “On 
design 
of 
domain-specific 
query 
language 
for 
the 
metallurgical industry,” Proceedings of 11th Int. Conference 
BDAS 
2015: 
Beyond 
Databases, 
Architectures 
and 
Structures: Communications in Computer and Information 
Science, 26-29 May 2015, Ustron, Poland, vol. 521, pp. 505–
515. 
[8] P. T. Eugster, P. A. Felber, R. Guerraoui, and A.-M. 
Kermarrec, “The many faces of publish/subscribe,” ACM 
Computing Surveys, vol. 35, no. 2, 2003, pp. 114–131. 
[9] T. M. H. Reenskaug, Working with objects: the OOram 
software engineering method. TASKON, 1995. 
[10] K. A. Aksyonov, Theory and practice of decision support 
tools. Germany, Saarbrucken: LAP LAMBERT Academic 
Publishing GmbH & Co. KG, 2011. 
[11] J. P. Muller and M. Pischel, The agent architecture InteRRap: 
concept and application, German Research Center for 
Artificial Intelligence (DFKI), 1993. 
[12] M. Barna, M. Javurek, J. Reiter, J. Watzinger, B. Kaufmann, 
and M. Kirschen, “Numerical simulations of the continuous 
casting of steel with electromagnetic braking and stirring,” 
International Journal of Multiphysics, Series Special Edition, 
2011, pp. 231–238. 
[13] AnyLogic: case study, Available from: 
http://www.anylogic.com/case-studies/chelyabinsk-
metallurgical-plant-uses-a-simulation-model-electric-furnace-
melting-shop. [Retrieved: May 2015] 
72
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-432-9
ICCGI 2015 : The Tenth International Multi-Conference on Computing in the Global Information Technology

