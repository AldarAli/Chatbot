Right-time Path Switching Method for Proxy Mobile IPv6 Route Optimization 
 
Yujin Noishiki, Yoshinori Kitatsuji, Hidetoshi Yokota 
KDDI R&D Laboratories, Inc. 
2-1-15 Ohara Fujimino Saitama, JAPAN 
{yujin, kitaji, yokota} [at] kddilabs.jp 
 
 
Abstract—Proxy Mobile IPv6 provides IP mobility to a mobile 
node by the proxy mobility agent called a Local Mobility 
Anchor and a Mobile Access Gateway without requiring 
mobile node’s participation in any mobility-related signaling. 
Increased 
demand 
for 
content-rich 
mobile 
data 
communications is prompting mobile network operators to 
deploy efficient mobility management including Proxy Mobile 
IPv6. The route optimization technique is applied to the data 
path between mobile nodes in the same Proxy Mobile IPv6 
domain by bypassing the Local Mobility Anchor(s). However, 
when switching the data path from the default (non-optimized) 
route to an optimized one, the delay gap between these paths 
leads to performance degradation due to out-of-sequence 
packets, or unnecessary communication disruption. We 
propose a right-time path switching method for Proxy Mobile 
IPv6 route optimization. This method enables the Mobile 
Access Gateway to switch these paths with the accurate timing 
provided by the designated signaling messages, which prevents 
out-of-sequence packets as well as minimizing communication 
disruption during the route optimization procedure. The 
proposed method is evaluated in an actual testbed to show that 
the proposed method achieves the seamless path switch.  
Keywords - Proxy Mobile IPv6; Route Optimization; Path 
Switch Optimization 
I. 
 INTRODUCTION 
Mobility management is an important function for mobile 
communication. The Internet Engineering Task Force (IETF) 
has standardized Mobile IP [1][2] to provide mobile nodes 
(MNs) with IP mobility. However, Mobile IP is a client-
based mobility management scheme that requires MNs to 
implement protocol stacks and exchange mobility-related 
signaling. Therefore, the IETF has standardized Proxy 
Mobile IPv6 (PMIPv6) [3] as a network-based mobility 
management protocol. PMIPv6 brings the IP mobility to the 
MN without requiring its participation in any mobility-
related signaling.  
PMIPv6 operations are performed by two network 
entities, Local Mobility Anchors (LMAs) and Mobile Access 
Gateways (MAGs). An LMA is a home agent for the MNs 
and a topological anchor point for the home network prefix 
of MNs. An MAG is an access router that exchanges the 
mobility-related signaling with an LMA instead of an MN 
attached to the MAG via the wireless accesses. 
In PMIPv6, all data traffic originating from or destined 
for the MNs is transferred through an LMA even if the MNs 
communicate with each other. Such a redundant routing 
increases transfer delay, which leads to performance 
degradation of MN’s communications. In addition, data 
traffic transferred via the redundant route concentrates traffic 
on LMAs. To overcome this situation, route optimization for 
PMIPv6 is an attractive solution for minimizing delay and 
realizing traffic offload.  
The route optimization for PMIPv6 is realized by using 
the direct tunnel established between the MAGs, to which 
mobile nodes are attached, with bypassing the LMA [4]. 
However, when switching the data path from the redundant 
(non-optimized) one to the direct tunnel (the optimized path), 
the delay gap between these paths causes performance 
degradation of MN’s communication. If the data path is 
switched before finishing receipt of data packets via the non-
optimized path, out-of-sequence packets occur, which 
decreases TCP performance of MN’s communication. On the 
other hand, if the data path is switched too late, MNs 
experience communication disruption. This unnecessary 
disruption degrades the service (e.g., voice and video) 
quality of real-time applications.  
In this paper, we propose a right-time path switching 
method for PMIPv6 route optimization. After the optimized 
path is ready, our proposed method initiates the path switch 
using signaling messages. This feature prevents out-of-
sequence packets as well as minimizing communication 
disruption duration in the route optimization procedure.  
The proposed procedure is evaluated in an experimental 
testbed using actual PCs. The results reveal that our proposed 
method prevents out-of-sequence packets while the baseline 
route optimization procedure causes them. In addition, 
performance evaluation shows our proposed method 
decreases communication disruption duration in the route 
optimization procedure. 
This paper is organized as follows. Section II shows 
related work. Section III proposes a route optimization 
procedure with the optimized timing of path switch. Section 
IV evaluates the performance of the proposed method using 
the experimental testbed. Section V concludes this paper. 
II. 
RELATED WORK 
Mobile IPv6 (MIPv6) [2] supports a route optimization 
scheme, which allows an MN to register its binding 
information with a corresponding node (CN). The CN 
directly sends or receives data packets using the MN’s care-
of address after route optimization. Similarly to the route 
optimization for PMIPv6, when MN and CN switch the data 
path from the non-optimized path to the optimized path, out-
of-sequence packets are caused. However, unlike PMIPv6, 
the route optimization procedure for MIPv6 is performed by 
240
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

MN and CN themselves, thus they are involved in preventing 
out-of-sequence packets. On the other hand, in PMIPv6, 
MNs cannot handle out-of-sequence packets because they do 
not detect the timing of the path switch to the optimized path.  
Lee, et al. [5] have proposed a route optimization scheme 
for PMIPv6 to prevent out-of-sequence packets. In the 
proposed scheme, an MAG buffers data packets originating 
from MN until the optimized path has been created. 
However, this scheme may increase communication 
disruption duration because the buffering MAGs cannot 
know the end of data forwarding through the non-optimized 
path. Our paper proposes a route optimization procedure that 
avoids out-of-sequence packets while minimizing the 
communication disruption duration.  
In order to indicate the end of data forwarding at path 
switching, an end-marker approach is applied in the 3GPP 
standard [6]. During handover procedures, this end-marker is 
transferred to indicate the end of the data stream in a 
forwarding tunnel. The indication is included in GPRS 
Tunneling Protocol User Plane (GTP-U) [7], which is the 
transport protocol for user data packets. While this indication 
is deployed only for GTP-U and requires packet inspection 
on the user plane, our approach using PMIPv6 signaling 
messages is separate from user plane transport protocol. 
III. 
PROPOSAL OF RIGHT TIME PATH SWITCHING 
METHOD 
In this section, we introduce the basic PMIPv6 operation 
and the required functions for PMIPv6 route optimization. 
Then, the right-time path switch method for PMIPv6 route 
optimization is proposed.  
A. PMIPv6 Operation 
The PMIPv6 domain is shown in Fig. 1. In the PMIPv6 
domain where mobility management is performed using 
PMIPv6, LMAs and MAGs are located.  
Basic PMIPv6 operation is as follows. When an MAG 
detects the attachment of an MN, it sends a proxy binding 
update (PBU) message. When an LMA receives the PBU 
message, it registers the MN in a binding cache entry (BCE), 
and replies to the MAG by sending a proxy binding 
acknowledge (PBA) message. The PBA message includes 
the Home Network Prefix (HNP) of the MN. Then, the MAG 
notifies the HNP of the MN. After exchanging PBU and 
PBA messages, MAG and LMA hold the binding cache 
entries of MNs including the HNPs.  
Once the MN is registered in the PMIPv6 domain, all 
data packets of the MN are transferred through the MAG and 
the LMA. This characteristic causes a redundant routing 
when MNs communicate with each other. For example, 
when MN1 is registered in LMA1 via MAG1 and MN2 is 
registered in LMA2 via MAG2, data packets from MN1 to 
MN2 are forwarded via MAG1, LMA1, LMA2, and MAG2. 
This redundant routing leads to transfer delay in 
communication of MNs, such as performance of real-time 
applications.  
 
Figure 1.  PMIPv6 domain with non-optimized and optimized routing 
paths. 
B. Required Functions for Route Optimization 
To overcome the redundant routing in PMIPv6, route 
optimization is a promising approach. Route optimization 
transfers data packets between two MNs attached to the same 
PMIPv6 domain, through an optimized routing path between 
MAGs bypassing the LMAs as shown in Fig. 1.  
The functions required to realize route optimization are 
as follows. 
 
Detection of the target communication for route 
optimization: to trigger the route optimization 
procedures, data packets exchanged between MNs in 
the PMIPv6 domain must be detected. When MNs 
are attached to different MAGs and registered at 
different LMAs, this packet detection is complicated 
because the binding cache entries of each MN are 
distributed in LMAs and MAGs. 
 
Discovery of network entities (LMA and MAG) 
relating to the target MNs: to exchange signaling 
messages, the LMAs that register the MNs’ BCEs 
and the MAGs that attach the MNs must be 
discovered. When MNs are registered at different 
LMAs, discovery of the LMA from another LMA is 
difficult since each LMA does not know the MNs in 
the other LMAs. 
 
Establishment of the optimized routing path: the 
optimized routing path is established between MAGs 
that attach MNs.  
C. Baseline Route Optimization Procedure 
We first explain the baseline route optimization 
procedure, which meets all requirements mentioned in the 
previous subsection.  
In the case where either or both proxy mobility agent(s) 
(MAG/LMA) is/are shared by the MNs, the requirements of 
detection of the target communication and discovery of the 
involved mobility agents are fulfilled in a straightforward 
way because the shared mobility agent manages the binding 
caches of both MNs. However, since each MN is registered 
with separate MAG and LMA, none of these agents satisfy 
the requirements because the binding cache entries of MNs 
are distributed over different LMAs and MAGs. In order to 
cover this most generalized case, we discuss the situation 
241
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

where MN1 is attached to MAG1 and registered at LMA1, 
and MN2 is attached to MAG2 and registered at LMA2 in 
the PMIPv6 domain shown in Fig. 1.  
To fulfill the requirements for the route optimization in 
the above situation, the Policy Store (PS) defined in [8] is 
leveraged. As shown in Fig. 2, the PS is deployed in the 
same PMIPv6 domain and stores binding caches of MNs 
including the HNPs and the IP addresses of LMAs. LMAs 
register the binding cache with the PS when their BCEs are 
updated, for example, at the time of the reception of PBU by 
the LMA. Each LMA obtains the information of MNs 
registered at other LMAs by referring to this PS. In the 3GPP 
standard, the AAA server plays a role of the PS in the 
PMIPv6-based mobile core networks [9], where the LMA 
registers binding caches with the AAA server when the 
binding caches are updated. 
The baseline route optimization procedure is shown in 
Steps 1 to 9 of Fig. 3 except Steps E1a-d and E2a-d enclosed 
in boxes. In this procedure, we show that the data packets of 
the target of route optimization are transferred from MN1 to 
MN2. To detect the target data packets, LMAs monitor the 
source IP addresses. In this procedure, LMA2 checks the 
data packets in Step 1a. If the source IP address is not 
registered at LMA2, LMA2 refers to the source IP address 
from the PS in Step 1b. When the source IP address is found, 
LMA2 begins the route optimization. In this step, LMA2 
recognizes LMA1, which has the BCE of the source IP 
address (MN1) from the PS. To prevent a route optimization 
triggered by the data packets in the other direction (from 
MN2 to MN1), LMA notifies the beginning of route 
optimization for pairs of MNs to the PS. After this 
notification, the PS does not allow other LMAs to begin the 
route optimization for the same pair of MNs. 
To meet the requirement of establishment of the 
optimized path, Steps 2 to 9 are performed. While PMIPv6 
has no interface between LMAs in the IETF standardization, 
this paper introduces a new signaling interface between 
LMAs as shown in Fig. 2 to handle the situation where MNs 
are registered at different LMAs.  
In Steps 2 and 3, LMA2 sends a Route Optimize (RO) 
Trigger message to LMA1, and then LMA1 sends an RO 
Initiate message to MAG1, respectively. The RO Trigger and 
RO Initiate messages include the HNPs of MN1 and MN2, 
and the IP address of MAG2. In Step 4, MAG1 offers 
MAG2 establishment of the direct tunnel by sending an RO 
Request message including the HNPs of MNs. When 
receiving this message, MAG2 creates the forwarding tunnel 
to MAG1 and replies with an RO Request Acknowledge 
message to MAG2 in Step 5. This message requests MAG1 
to establish the direct tunnel from MAG1 to MAG2. After 
the direct tunnel is ready, MAG1 responds an RO Request 
Complete message to MAG2 and an RO Initiate 
Acknowledge message to LMA1 in Steps 6 and 7, 
respectively. LMA1 responds an RO Trigger Acknowledge 
message to LMA2 in Step 8. Finally, LMA2 updates the 
binding caches of MN1 and MN2 by notifying the end of the 
procedure to the PS in Step 9.  
Steps E1a-d and E2a-d enclosed in boxes in Fig. 3 are 
described in the next subsection.  
 
Figure 2.  Proposed architecture with a policy store. 
 
Figure 3.  Route optimization procedure with optimized path switching. 
Signaling messages are indicated by a solid line while data packets are 
indicated by a dotted line. The procedure regarding the optimized path 
switching is enclosed by boxes. 
242
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

D. Proposal of Right-time Path Switching Method 
When the optimized path is established, the path switch 
from the non-optimized path to the optimized path should be 
performed in an appropriate timing. In this subsection, we 
propose the optimized path switching method for route 
optimization in PMIPv6.  
In [5], to prevent out-of-sequence packets at the path 
switch, MAGs buffer the packets originating from MNs until 
the optimized routing tunnel is established. In this method, 
the sender for data packets from MN1 to MN2 on the 
optimized path, e.g., MAG1, buffers the data packets and 
decides to begin data forwarding through the optimized path. 
Therefore, we call this method the sender-buffering method. 
If this sender-buffering method is employed for the 
procedure shown in Fig. 3, after Step 3, MAG1 begins to 
buffer the packets from MN1, and then releases the buffered 
packets just after Step 5. Similarly, MAG2 begins to buffer 
the packets from MN2 after Step 4, and then releases the 
packets in Step 6.  
However, this sender-buffering method may cause one of 
two drawbacks: out-of-sequence packets and relatively large 
communication disruption, because the sender of the 
optimized tunnel cannot detect when the buffered packets 
should be released by itself (the sender cannot know when 
the receiver at the tunnel receives the last data packets 
transferred via non-optimized tunnel). Therefore, if the data 
packets buffered are released too early, out-of-sequence 
packets will be caused at the receiver at the tunnel. On the 
other hand, if the buffered data packets are released too late, 
disruption duration for data packets occurs from the last 
packets through the non-optimized path to the first packets 
through the optimized path. Such communication disruption 
duration degrades MN’s communication. 
To switch the data path from a non-optimized path to an 
optimized path with accurate timing, we propose a new 
method shown in Steps E1a-d and E2a-d in Fig. 3. In this 
method, after the optimized path is established, the receiver 
at the tunnel buffers the data packets through the optimized 
path as opposed to the sender-buffering method. Then, the 
sender at the tunnel notifies the end of data forwarding 
through the non-optimized path by sending signaling 
messages after the sender forwards the last packets through 
the non-optimized path. This signaling message is transferred 
via the non-optimized path. The receiver that buffers the data 
packets recognizes the receipt of the last packets transferred 
through the non-optimized path, preventing out-of-sequence 
packets and communication disruption.  
The proposed method is implemented as follows: After 
MAG1 sends MAG2 the RO Request message in Step 4, 
MAG1 begins to buffer the packets that arrive through the 
optimized tunnel in Step E1a. When it receives the RO 
request message in Step 4, MAG2 sends a Path Switch 
Request message to MAG1 via LMA2 and LMA1 in Step 
E1b. This message includes the HNPs of MN1 and MN2, 
and the IP addresses of LMA1 and LMA2. Just after sending 
the message, MAG2 begins to forward data packets from 
MN2 to MN1 through the optimized routing tunnel in Step 
E1c. While MAG1 receives the data packets from LMAs 
(through the non-optimized path), MAG1 buffers all the data 
packets forwarded through the optimized tunnel. Thus these 
data packets are not forwarded to MN1. In Step E1d, when 
MAG1 receives the Path Switch Request message, MAG1 
begins to release the buffered data packets, which are 
transferred through the optimized tunnel. Finally, MN1 
receives all the data packets in the correct order.  
Similarly to Steps E1a-d, the proposed approach in Steps 
E2a-d is performed in the opposite direction. Thus, the 
proposed path switch method is applied in both directions.  
IV. 
PERFORMANCE EVALUATION 
A. Evaluation Environment 
To investigate the effect of the path switching method for 
the route optimization procedure on the quality of service, 
we focus on two metrics, the total number of out-of-
sequence packets in both directions and the duration of the 
communication disruption. These values are measured 
during the path switch from the non-optimized path to the 
optimized one. In this paper, we define the duration of the 
communication disruption as the time at the MN from the 
receipt of the last packet through the non-optimized path to 
the arrival of the first packet through the optimized path. All 
results were obtained 10 times and the average is presented.  
To evaluate the number of out-of-sequence packets, the 
proposed procedure with the optimized timing of path switch 
is compared with the baseline route optimization procedure. 
In addition, to investigate the performance with respect to the 
communication disruption duration during the route 
optimization procedure, the sender-buffering method as 
described in Section III is implemented for comparison.  
The performance of the proposed procedure is evaluated 
in an experimental testbed where actual PCs implement the 
proposed functions of network entities. Table I shows the 
hardware specifications of the network entities. The network 
topology of the experimental testbed is shown in Fig. 4. An 
MN is attached to an MAG via an IEEE 802.11g access 
point. LMAs and MAGs are connected to each other via 
gigabit Ethernet link. The expected one-way link delay 
between the network entities illustrated in Fig. 4 is added by 
a network emulator Dummynet [10]. UDP packets are 
transferred from MN1 to MN2 and vice versa by using an 
Iperf traffic generator [11]. The data rate in each direction is 
500 Kbps and the packet size is 1250 bytes, that is, 50 
packets per second.  
Let G denote the delay gap of one-way delays between 
the optimized path and the non-optimized path in Fig. 4, that 
is, G = d2+ d3 + d4 - d1. This delay gap G affects the number 
of out-of-sequence packets because a large delay gap will 
cause out-of-sequence packets at path switching. Moreover, 
d1, which is the link delay from MAG1 to MAG2, is a key 
parameter when focusing on the duration of the 
communication disruption. This is because the waiting time 
for path creation in the sender-buffering method depends on 
this link delay. Therefore, this paper evaluates the 
performance by varying the two key parameters, delay gap G 
and link delay d1. Table II shows the parameter sets used in 
this paper. 
243
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

TABLE I.  
HARDWARE SPECIFICATIONS OF NETWORK ENTITIES 
 
Network entities 
MN 
LMA, MAG, and  
policy store 
Model 
Panasonic CF-R9JWACDR 
Dell PowerEdge R300 
CPU 
Intel 
Core 
7 
820UM  
1.06 GHz 
Intel 
Xeon 
L5410 
2.3 GHz 
OS 
Fedor core 10 
Cent OS 5.3 
Network 
I/F 
IEEE 802.11g 
Gigabit NIC 
TABLE II.  
ONE-WAY DELAY USED IN THIS PAPER 
Notation 
Description 
Values 
d1 
Link delay between MAG1 and MAG2 
10~50 msec 
d2 
Link delay between MAG1 and LMA1 
10~50 msec 
d3 
Link delay between LMA1 and LMA2 
10~50 msec 
d4 
Link delay between MAG2 and LMA2 
10~50 msec 
G 
Delay gap (= d2 + d3 + d4 - d1) 
20~100 msec 
 
 
Figure 4.  Network topology of experimental testbed. 
B. Evaluation of Path Switching Methods 
Fig. 5 plots the total number of out-of-sequence packets 
versus the delay gap between the non-optimized path and the 
optimized path, where the link delay between MAG1 and 
MAG2, d1, is fixed at 10 msec. As the delay gap increases, 
the number of out-of-sequence packets also increases in the 
baseline method and the sender-buffering method. When 
comparing the baseline method with the sender-buffering 
method, the sender-buffering method decreases the number 
of out-of-sequence packets. This is because the sender-
buffering method prevents out-of-sequence packets by 
buffering the data packets originating from MNs until the 
optimized path is ready. However, the sender-buffering 
method does not eliminate out-of-sequence packets when the 
delay gap is large. On the other hand, the proposed path 
switching method does not have out-of-sequence packets at 
any values of delay gap.  
The total number of out-of-sequence packets is also 
shown in Fig. 6 and Fig. 7 where d1 is 30 msec and 50 msec, 
respectively. In both results, the baseline method increases 
the number of out-of-sequence packets when the delay gap 
increases. The sender-buffering method prevents out-of-
sequence packets, while several out-of-sequence packets 
occur by the large delay gap at d1 = 50 msec (Fig. 6). When 
d1 is 50 msec (Fig. 7), the sender-buffering method 
eliminates the out-of-sequence packets. From these results 
shown in Figs. 5 to 7, the sender-buffering method improves 
the performance when the link delay between MAGs is large. 
Similarly to the results in Fig. 5, the proposed method does 
not have any out-of-sequence packets. This means that the 
proposed method achieves route optimization while avoiding 
out-of-sequence packets by optimized path switch. 
 
 
Figure 5.  Number of out-of-sequence packets vs. delay gap between 
optimized path and non-optimized path (d1 = 10 msec). 
 
Figure 6.  Number of out-of-sequence packets vs. delay gap between 
optimized path and non-optimized path (d1 = 30 msec). 
0
2
4
6
8
10
12
20
40
60
80
100
Total number of out-of-sequence packets
Delay gap between optimized path and non-optimized 
path (msec)
baseline
sender-buffering
proposal
0
2
4
6
8
10
12
20
40
60
80
100
Total number of out-of-sequence packets
Delay gap between optimized path and non-optimized 
path (msec)
baseline
sender-buffering
proposal
244
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

 
Figure 7.  Number of out-of-sequence packets vs. delay gap between 
optimized path and non-optimized path (d1 = 50 msec). 
 
Figure 8.  Average duration of communication disruption during route 
optimization (d1 = 50 msec). 
Fig. 8 shows the average duration of the communication 
disruption during route optimization procedures versus the 
delay gap. Here, we fix d1 at 50 msec and compare the 
proposed method with the sender-buffering method. As 
described in the previous subsection, the packet rate in this 
experiment is 50 packets per second, which means that the 
interval of packet arrival is 20 msec. Therefore, if the result 
is larger than 20 msec, MNs experience unnecessary 
communication disruption. When d1 is 50 msec, both 
methods avoid any out-of-sequence packets as shown in Fig. 
7. However, from the results in Fig. 8, the sender-buffering 
method has longer communication disruption duration than 
the normal packet arrival interval. In particular, when the 
delay gap is small, the sender-buffering method involves 
long communication disruption. On the other hand, even 
when the delay gap changes, the proposed method maintains 
a small communication disruption, which is nearly equal to 
the normal packet arrival interval. This is because the 
proposed method accurately notifies of the end of data 
forwarding through the non-optimized path. Thus, we 
confirm that the proposed method realizes the route 
optimization by preventing out-of-sequence packets while 
minimizing communication disruption. 
Out-of-sequence packets and communication disruption 
duration decrease communication performance of MNs, such 
as TCP throughput and service quality of real-time 
applications. 
The 
proposed 
method 
improves 
the 
communication performance of MNs by seamless path 
switching during the route optimization procedure. 
V. 
CONCLUSION 
This paper proposed a route optimization procedure in 
PMIPv6 with the optimized timing of path switch. The 
proposed procedure notifies the end of data forwarding 
through the non-optimized path accurately after the 
optimized path is established. The performance results 
showed that the proposed method prevented out-of-sequence 
packets and minimized the communication disruption time 
for the various values of delay parameters between network 
entities. With this feature, the proposed method contributes 
to performance improvement in TCP throughput or seamless 
continuity of real-time applications during the route 
optimization procedure.  
REFERENCES 
[1] 
C. Perkins, “IP Mobility Support for IPv4,” RFC 3344, IETF, Aug. 
2002. 
[2] 
D. Johnson, C. Perkins, and  J. Arkko, “Mobility Support in IPv6,” 
RFC 3775, IETF, June 2004. 
[3] 
S. Gundavelli, K. Leung, V. Devarapalli, K. Chowdhury, and B. Patil, 
“Proxy Mobile IPv6,” RFC 5213, IETF, Aug. 2008. 
[4] 
S. Krishnan, R. Koodli, P. Loureiro, Q. Wu, and A. Dutta, “Localized 
Routing for Proxy Mobile IPv6,” Internet Draft, draft-ietf-netext-
pmip-lr-01, IETF, Oct. 2010. 
[5] 
J. Lee, H. Lim, and T. Chung, “Preventing Out-of-sequence Packets 
on the Route Optimization Procedure in Proxy Mobile IPv6,” Proc. 
IEEE International Conference on Advanced Information Networking 
and Applications (AINA 2008), Mar. 2008, pp. 950-954, 
doi:10.1109/AINA.2008.100. 
[6] 
3GPP, “General Packet Radio Service (GPRS) enhancements for  
Evolved Universal Terrestrial Radio Access Network (E-UTRAN) 
access,” TS 23.401, V10.2.0, Dec. 2010. 
[7] 
3GPP, “General Packet Radio System (GPRS) Tunnelling Protocol 
User Plane (GTPv1-U),” TS 29.281, V10.0.0, Dec. 2010. 
[8] 
F. Xia, B. Sarikaya, J. Korhonen, S. Gundavelli and D. Damic, 
“RADIUS Support for Proxy Mobile IPv6,” Internet Draft, draft-ietf-
netext-radius-pmipv6-01, IETF, Nov. 2010. 
[9] 
3GPP, “Architecture Enhancements for non-3GPP accesses,” TS 
23.402, V10.2.0, pp. 202-207, Dec. 2010. 
[10] Dummynet, available at http://info.iet.unipi.it/~luigi/dummynet/ (last 
access date Mar 11, 2011) 
[11] Iperf, available at http://iperf.sourceforge.net/ (last access date Mar 
11, 2011) 
 
 
0
2
4
6
8
10
12
20
40
60
80
100
Total number of out-of-sequence packets
Delay gap between optimized path and non-optimized 
path (msec)
baseline
sender-buffering
proposal
0
10
20
30
40
50
60
70
80
20
40
60
80
100
The duration of  the communication 
disruption (msec)
Delay gap between optimized path and non-optimized 
path (msec)
sender-buffering
proposal
245
ICNS 2011 : The Seventh International Conference on Networking and Services
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-133-5

