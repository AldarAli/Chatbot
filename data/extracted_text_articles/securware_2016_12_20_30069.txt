A Novel Veriﬁable Multi-Secret Sharing Scheme Based on Elliptic Curve Cryptography
Nisha Patel, Prakash D.Vyavahare, Manish Panchal
Department of Electronics and Telecommunication Engineering
S. G. S. Institute of Technology and Science, Indore, India
Email: {nishapatel910622, prakash.vyavahare, hellopanchal}@gmail.com
Abstract—Multi-secret sharing schemes are used to protect mul-
tiple secrets by distributing them among many participants in
such a manner that they can be reconstructed only by certain
authorized group of participants. The scheme proposed by Lin-
Yeh is one such method, which is based on Shamir’s threshold
scheme. In this paper a Veriﬁable Multi-Secret Sharing Scheme
is proposed which is based on Shamir’s threshold scheme, Elliptic
Curve Discrete Logarithm Problem (ECDLP), and Double knap-
sack algorithm. The proposed scheme exhibits all the advantages
of Lin-Yeh’s scheme in which each participant has only one secret
share for reconstructing multiple secrets. Additionally, the scheme
does not require secure channel in secret share distribution
phase since each participant’s share is selected by participant
himself. The scheme can also detect malicious participants during
veriﬁcation phase. The main advantage of ECDLP as compared
to Rivest, Shamir and Adleman (RSA) and Discrete Logarithm
Problem (DLP) is that it offers the same level of security
for a smaller key size, thereby reducing processing overheads
with lesser requirement of memory and bandwidth with faster
implementation. Therefore, it can provide an efﬁcient and secure
mechanism for key management in public key systems.
Keywords– Multi-Secret Sharing Scheme; Double Knapsack
Algorithm; Shamir’s Threshold Scheme; Malicious Participant
Detection; ECDLP.
I.
INTRODUCTION
Secret sharing schemes are important in protecting secret
information from being lost, destroyed, modiﬁed and from
unauthorized access. In a secret sharing scheme, the secret
is distributed among the participants, and only an authorized
group of participants can reconstruct the secret. In the case of
(t, n) threshold secret sharing scheme, a secret is distributed to
n participants and t (or more than t) participants can reconstruct
the secret. The secret sharing schemes are used in different
applications like image processing, bank vault opening, inter-
continental ballistic missiles launch, and electronic transactions
authentication.
In 1979, the secret sharing scheme was proposed inde-
pendently by Shamir [1] and Blakley [2]. Blakley’s scheme
is based on the principle of linear projective geometry and
Shamir’s scheme is based on Lagrange interpolating polyno-
mial. The common limitations of these schemes are: (i) At
a time only one secret can be shared. (ii) To distribute the
secrets, secure channel is needed. (iii) After the reconstruction
of secret, the participant’s share is disclosed to all. For sharing
another secret, new secret share is redistributed to the partic-
ipants over a secure channel. (iv) There is no mechanism to
detect malicious participants. Shamir’s scheme consumes lot
of time and also costs for storage requirement. Therefore, it is
used in sharing data of small size like the encryption key [3].
Several multi-secret sharing schemes based on strong math-
ematical structure are presented to remove these limitations,
such as polynomial equations based Lin-Yeh method [4],
secure one way function - He-Dawson method [5], matrix
projection - Li Bai method [6] and many more. In Li Bai’s
method, the organization of secrets are in a square matrix.
Therefore, the number of secrets must be a square of a number.
If the number of secrets are not square, then the secret matrix
is stuffed by dummy secrets.
He and Dawson [5] proposed a multi-secret sharing scheme
based on one-way function, which uses successive one-way
functions to share multiple secrets. Geng et al. [7] showed
that He-Dawson scheme was actually one-time-use scheme and
proposed a new multi-secret sharing scheme with multi-policy.
The scheme proposed by Geng et al. is secure and multi-
use system. Lin and Yeh [4] proposed a dynamic multi-secret
sharing scheme, which is efﬁcient than Geng et al. scheme in
terms of computation complexity.
Lin-Yeh’s proposed a scheme, which is based on One-
way Hash Function (OHF) and the Exclusive OR (XOR)
operation, in which multiple secrets can be reconstructed with
only one secret share of each participant. Lin-Yeh’s scheme
is efﬁcient and ﬂexible multi-secret sharing scheme because
each participant’s share is unchanged even if the secrets to be
shared are changed. The major issues with Lin-Yen’s scheme
are: it cannot detect malicious participants and requires a
secure channel during secret distribution phase. The schemes
mentioned in [8][9][10] have removed these limitations, but
they need a secure channel for secret distribution and are
inefﬁcient in computation.
Several veriﬁable schemes have been proposed for multi-
secret sharing [11][12][13], in which each participant needs
to keep only one secret share, using which multiple secrets
can be shared. Each participant submits a pseudo secret share
which is calculated from the actual share of participant for
reconstruction phase. Since participants themselves generate
the secret share, it reduces the overhead on dealer and also
removes the requirement of secure channel between dealer and
participants. However, they are based on Discrete Logarithm
Problem (DLP). In DLP-based schemes one needs more num-
ber of bits to achieve higher level of security and reliability
than ECDLP, which increases the requirement of memory and
bandwidth [14][15].
In this paper, we propose a scheme based on Shamir’s
threshold scheme, Elliptic Curve Discrete Logarithm Problem
[16][17], the exclusive OR operation and Double knapsack al-
gorithm [18]. The scheme provides the efﬁciency and ﬂexibil-
230
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-493-0
SECURWARE 2016 : The Tenth International Conference on Emerging Security Information, Systems and Technologies

ity similar to Lin-Yeh’s scheme with advantages of malicious
participant detection and without secure channel between the
dealer and participants during secret share distribution phase.
In the scheme proposed by us the participants, who will con-
tribute in secret reconstruction, are decided by the dealer based
on a proposed algorithm which uses the exclusive OR opera-
tion. Dealer sends this information to the combiner on public
channel employing double knapsack algorithm. Elliptic curve
cryptosystem provides the same level of security with smaller
key size than other cryptosystems and offers lesser requirement
of memory and bandwidth with faster implementation [19][20].
The security of scheme proposed by Hua and Aimin [21]
is dependent on hash function. The scheme proposed by us
does not have dependency on other cryptographic functions,
such as hash function; so the scheme is efﬁcient for threshold
applications.
TABLE I. CONVENTION AND NOTATION
A
Group containing ID’s of t participants
A’
Encoded form of A by double knapsack algorithm
C
Combiner
D
Dealer
E(Fp)
Elliptic curve E deﬁned over Fp
Fp
Field with set (0, 1, 2, ..., p-1)
G
Generator point of prime order q
IDj
Identiﬁer of each participant (1 ≤ j ≤ n)
Pj
jth Participant (1 ≤ j ≤ n)
Rj
Pseudo secret share of participant j
Si
ith Secret (1 ≤ i ≤ k)
Sl
lth group secret in Lin-Yeh’s method
Uj
Total number of participants in Lin-Yeh’s method
Z∗
q
Field with set (1, 2, ... , q-1)
g
A primitive element over GF(p)
h
One-way hash function
n1, n2
Constants used in double knapsack algorithm
p
A large prime number
t
Number of participants required in secret reconstruction
xj
Secret share of jth participant
⊕
The exclusive OR operation
∞
Point at inﬁnity on elliptic curve
The rest of this paper is organized as follows. In Section II,
a review of Lin-Yeh’s scheme is presented. In Section III, se-
curity weaknesses of Lin-Yeh’s method are discussed, which is
followed by brief description of Double knapsack algorithm in
Section IV. In Section V, our proposed novel veriﬁable multi-
secret sharing scheme based on elliptic curve cryptography is
presented. The security features of the proposed scheme and
its comparison with Lin-Yen method are presented in Section
VI. Finally, the paper is concluded in Section VII.
II.
REVIEW OF LIN-YEH’S DYNAMIC
MULTI-SECRET SHARING SCHEME
There are three stages in Lin-Yen method [4], namely,
(A) The system initialization stage, (B) Pseudo secret share
generation stage and (C) Group secret reconstruction stage.
They are explained as follows:
A.
System Initialization Stage
The initialization of various public domain parameters and
selection of their values is done by System Authority (SA)
which is as follows:
1)
p : a prime number which is large;
2)
g : a primitive element over GF(p);
3)
h(.) : a secure one-way hash function which produces
a ﬁxed length output for any arbitrary length of input;
4)
IDj : an identiﬁer of the user Uj , for j = 1, 2,
... , n, where the secrets are to be shared among n
participants.
Table I contains other notations and conventions.
B.
Pseudo Secret Share Generation Stage
SA shares k group secrets Si , where 1 ≤ i ≤ k among
n users. Following steps are performed by the SA to produce
pseudo secret shares and distribute master secret shares among
the participants.
1)
Corresponding to each participant j choose distinct
xj ∈ Z∗
p for j = 1, 2, ... , n, as the master secret
shares.
2)
For i = 1, 2, ... , k, construct a polynomial fi(x) of
degree (i-1), as fi(x) = Si + d1x + ... + di−1xi−1
where fi(0) = Si, d1 to di−1 are randomly selected
integers.
3)
For j = 1, 2, ... , n and i = 1, 2 ,... , k , compute Vij
= fi(IDj), cij = hi(xj) ⊕ xj , Rij = Vij - cij mod
p; Here hi(xj ) denotes i successive applications of h
to xj, symbol ⊕ denote the exclusive OR operation
and cij’s are pseudo secret shares.
4)
The master secrets xj, for j = 1, 2, ... , n , are delivered
by SA to each user Uj on secure channel and all Rij’s
are published.
C.
Group Secret Reconstruction Stage
For reconstructing the lth group secret Sl , the following
steps are performed by at least l participants out of n along
with the group secret combiner:
1)
For j = 1, 2, ... , l each Uj calculates his pseudo secret
share as clj = hl(xj) ⊕ xj , and then sends it over
secure channel to the group secret combiner.
2)
After receiving all clj’s, for j = 1, 2, ... , l, the lth
group secret is reconstructed by the group secret
combiner as:
Sl =
hPl
j=1 (clj + Rlj) Ql
r=1,r̸=j
−IDr
IDj−IDr
i
modp
III.
SECURITY WEAKNESSES OF LIN-YEH’S
METHOD
The multi-secret sharing scheme proposed by Lin-Yeh has
following limitations:
1)
Dealer selects the participant’s secret share. There-
fore, a dealer may become a cheater.
2)
Secure channel is required between dealer and par-
ticipants to distribute the secret share.
3)
There is no mechanism to detect malicious partici-
pant.
IV.
DOUBLE KNAPSACK ALGORITHM
Double knapsack algorithm is used to encode a message
and make it secure over an insecure channel [18]. The algo-
rithm is brieﬂy described as follows:
Suppose there are two parties party 1 and party 2 who want
to communicate securely.
Let r be the message to be encoded by party 1 and send to
party 2.
231
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-493-0
SECURWARE 2016 : The Tenth International Conference on Emerging Security Information, Systems and Technologies

Let l be the bit wise length of the message to be encoded.
Let n1 be a random number which is known only to sender
and receiver. They calculate a series of vectors called ai, as
ai = n1i, where i = 0, 1, 2, ... , (l-1). i.e.
ai = 1, n11, n12, n13, ... , n1l−1
Therefore a0 = 1, a1 = n1, ... , al−1 = n1l−1
First, r is converted into binary form as:
r = bl−1, bl−2, bl−3, ... , b2, b1, b0.
Where bl−1 is the Most Signiﬁcant Bit(MSB) and b0 is the
Least Signiﬁcant Bit(LSB).
Next r is encoded as:
R = P aibi
and R is sent in place of r by party 1 to party 2.
Note that only sender and recipient know the series ai.
The r value is recovered from R in an iterative fashion as
follows:
STEP 1 let k = 1
STEP 2 R1 = R - n1l−k
STEP 3 If R1 ≥ 0 , Then a binary bit 1 is assigned to bl−k
and R = R1.
STEP 4 If R1 < 0, then a binary bit 0 is assigned to bl−k.
STEP 5 Increase the value of k by one.
STEP 6 If k ≤ l, go to STEP 2 and if k > l, then end the
process.
Subsequently, if we repeat the above steps on R for a different
value of n1 like n2 then it is called the double knapsack
algorithm. Double knapsack algorithm has higher security than
single knapsack algorithm.
V.
PROPOSED SCHEME
The proposed scheme consists of three phases namely, (A).
System initialization and secret share generation, (B). Secret
construction and distribution, (C). Veriﬁcation and secret re-
construction. These phases are described as follows:
A.
System Initialization and Secret Share Generation
Let p be a prime number, and let Fp denote the ﬁeld of
integers modulo p. An elliptic curve E is deﬁned over Fp. Let
G be a point in E(Fp), and suppose that G has prime order q
i.e. qG = ∞. Let P = (P1, P2, ... , Pn) denote the set of n
participants and IDj be the identiﬁcation of jth participant.
Let k (k ≥ 1) secrets to be shared be denoted by S = (S1, S2,
... , Sk). Let D be the trusted dealer.
Various steps involved in construction of shares are as follows:
1)
The trusted dealer selects a generator G of prime
order q. The dealer publishes the system parameters
(p, E, q, G) on public channel.
2)
Each participant Pj (1 ≤ j ≤ n) selects a random
number xj ∈ Z∗
q as its own secret share and computes
Rj = xj G mod p. The participant sends Rj to the
dealer on public channel.
3)
The dealer must ensure that for any values of i and
j, Ri ̸= Rj. If D ﬁnds that Ri = Rj for some i and j
then, D requests to participant j to send new Rj until
D gets distinct values of Rj.
4)
After collecting the Rj from all the participants the
dealer chooses n distinct integers IDj ∈ Z∗
q (1 ≤ j ≤
n) as each participants identiﬁcation. D will publish
(Rj, IDj) for all j = 1, 2, ... , n.
B.
Secret Construction and Distribution
Secret construction and distribution is done as follows:
1)
D randomly selects a number b0 ∈ Z∗
q and constructs
a polynomial f(x) of degree k.
f(x) = b0 + S1x + S2x2 + ... + Skxk mod p
Where S1, S2, ..., Sk are k secrets to be shared.
2)
For i = 1, 2, ... , k the dealer computes f(i).
3)
D chooses another random number x0 ∈ Z∗
q and
calculates R0 = x0G mod p and Ij = xoRjmodp
for j = 1, 2, ... , n. D computes the multiplicative
inverse of x0 as x−1
0
by using [(x0 ∗ x−1
0
) mod p
= 1] and by employing double knapsack algorithm
encodes x−1
0
as y0. D publishes R0 and transmits y0
to combiner on public channel.
4)
D will select a group of participants t out of n, which
is based on the number of secrets to be shared. The
secret share of this group of participants will only be
used by the combiner to reconstruct the secrets. Let
the group be denoted as : A = (ID1, ID2, ..., IDt)
where t ≤ n.
5)
D will observe the co-ordinates of It point for all
IDt, present in group A. Point It is represented as
(x, y)t in co-ordinate form for tth participant. Note
that (x, y) is a point on elliptic curve E. The value of d
is calculated by application of exclusive OR operation
on the co-ordinates of It, in different ways in order
to satisfy d > k, as mentioned below.
The algorithm known to both D and combiner has
following steps:
a)
D will select minimum value from co-
ordinate (x, y)t for all t and calculate d as:
d = [x1 ⊕ y2 ⊕ ... ⊕ xt] mod p
where for ID1 let min(x, y)1 = x1 (i.e. for
ID1 the x co-ordinate has minimum value)
, for ID2 let min(x, y)2 = y2 (i.e. for ID2
the y co-ordinate has minimum value) , ... ,
and for IDt let min(x, y)t = xt.
If d < k then D will change the A by increas-
ing or decreasing the number of participants
in A.
b)
If D will not get d > k from step (a) then D
calculates d by taking only x co-ordinates of
It for all t present in A and calculates d as :
d = [x1 ⊕ x2 ⊕ ... ⊕ xt] mod p
c)
If D is again not able to get d > k from step
(b) then D calculates d by taking only y co-
ordinates of It for all t ≤ n and calculates d
as :
d = [y1 ⊕ y2 ⊕ ... ⊕ yt] mod p
d)
Till step (c) if D does not get desired value of
d then D calculates d by taking sum of x and
y co-ordinates of It for all t and calculates d
as:
d = [(x1 + y1) ⊕ (x2 + y2) ⊕ ... ⊕ (xt + yt)]
mod p.
6)
After getting d , D will compute f(d).
7)
Using the double knapsack encoding algorithm the
dealer will transmit the IDt of the selected par-
ticipants group A as A’ and f(d) as f(d)’ over a
public channel. For using this algorithm the dealer
and combiner agree on two random numbers n1 and
232
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-493-0
SECURWARE 2016 : The Tenth International Conference on Emerging Security Information, Systems and Technologies

n2.
8)
Then D will publish [f(1), f(2), ... , f(k), f(d)’, A’].
C.
Veriﬁcation and Secret Reconstruction
Reconstruction of the secrets Si (i = 1, 2, ... , k), and
detection of cheater, is done by the combiner as follows :
1)
Using the published information R0 all the par-
ticipants compute Wj = xjR0 and by employing
double knapsack algorithm convert Wj in Wj’. Each
participant delivers Wj’ to the combiner on public
channel. For this encoding the jth participant and
combiner agree upon two random number.
2)
The combiner decodes Wj from Wj’ for all the
participants, depending upon the knapsack constants
on which the participant and combiner have agreed.
3)
Now combiner decodes y0 as x−1
0
by using n1 and
n2 and checks whether (x−1
0 ∗Wj) = Rj for all j = 1,
2, ... , n. If this is false then the malicious participant
is detected.
4)
Combiner gets [f(1), f(2), ... , f(k), f(d)’, A’] from
published information. Then it decodes the A’ and
f(d)’ as A and f(d) respectively, by the knowledge of
n1 and n2.
5)
After getting group A, the combiner calculates d
using the co-ordinates of Wj point of t participants
by the same algorithm as used by dealer on the co-
ordinates of Ij point for t participants present in
group A, during secret construction phase.
6)
After gathering the (k+1) data point [ (1, f(1)),
(2, f(2)), ... , (k, f(k)) and (d, f(d)) ] the combiner
can reconstruct the k secrets using the following
Lagrange interpolation:
f(x) =
hPk+1
i=1 Yi
Qk+1
j=1,j̸=i
x−Xj
Xi−Xj
i
modp
Where (Xi, Yi) for i = 1, 2, ... , (k+1); denotes the
(k+1) pairs respectively.
VI.
SECURITY FEATURES AND COMPARISON OF
THE PROPOSED SCHEME
A.
Security Features
1)
There is no role of dealer in selection of participant’s
secret share. Therefore, a dealer cannot become a
cheater.
2)
If an attacker attempts to get xj from public infor-
mation Rj, then the problem is equivalent to solving
a discrete log problem on elliptic curves which is
computationally hard.
3)
The security of proposed scheme is based on the
difﬁculty in solving the discrete logarithm problem on
elliptic curves and ﬁnding double knapsack algorithm
constants n1 and n2. In our scheme only D and
combiner have the knowledge of A. Therefore, only
the combiner can reconstruct the secrets using the
Lagrange interpolation.
B.
Malicious Participant Detection
The participants themselves generate the secret share xj,
so only the participant can calculate Wj using the published
information R0. The product of x−1
0
and Wj ensures that Wj
belongs to the jth participant only. If any malicious participant
tries to give false value as Wj” then it is easily caught by
verifying that x−1
0
∗ W ′′
j ̸= Rj. This is achieved by the use of
a integer x−1
0 .
Theorem : If (x−1
0
∗ Wj = Rj), then Pj is true; otherwise Pj
may be a cheater.
Proof : x−1
0 ∗Wj = x−1
0 ∗(xjR0) = x−1
0 ∗xj ∗(x0∗G)modp =
(xjG)modp = Rj .
C.
Performance Comparison
The performance comparison of the proposed scheme
with the Lin-Yeh’s scheme is shown in Table II. The
Lin-Yeh’s multi-secret sharing scheme is based on OHF
and XOR operation, successive use of hash function in the
scheme contributes great complexities [22]. Lin-Yeh’s scheme
TABLE II. COMPARISON OF PROPOSED SCHEME WITH LIN-YEH’S
SCHEME
S.No
Characteristics
Lin-Yeh’s
Scheme
Proposed
Scheme
1
Mathematical structure used
OHF
ECDLP
2
Detection of malicious
participant
No
Yes
3
Dependent on security of other
cryptographic function such as
hash function
Yes
No
4
Participant selects his secret
share
No
Yes
5
Secure channel requirement
during share distribution
Yes
No
6
Parallel secret reconstruction
No
Yes
7
Cryptanalytic strength
Less
More
8
Computation time
Less
Comparable
uses (k(n + k)) one-way hash functions and (k(k − 2))
modular multiplication computations [4]. As compared to
the other operations, the time for performing the modular
addition and the XOR operation is ignored, because they
are negligible. The proposed scheme’s complexity is mainly
based on polynomial interpolation and the point multiplication
computation on elliptic curve. The proposed scheme uses
(4n + 1) point multiplication computation on elliptic curve.
Point multiplication is the most important and most basic
operation in elliptic curve cryptosystem, and we have methods
to speed up the computation [23]. Interpolation operations
are the common property in the schemes, which are based on
Shamir’s secret sharing scheme. we have efﬁcient algorithms
[24], using them the performance of our proposed scheme
is improved largely. Especially, when the degree of the
polynomial f(x) is only 1, only two pairs of (1, f(1)) and (d,
f(d)) are required to reconstruct the secret S, which largely
reduces the computational complexity. The complexity due
to double knapsack algorithm is acceptable, because it is
important in order to detect the malicious participant. In
addition, the proposed scheme does not need secure channel.
Therefore, proposed scheme has more cryptanalytic strength
and offers higher security.
VII.
CONCLUSION AND FUTURE WORK
In this paper, a veriﬁable multi-secret sharing scheme,
which is based on Shamir’s threshold scheme and elliptic curve
discrete logarithm problem is proposed. The scheme offers the
advantages over Lin-Yeh’s scheme with veriﬁcation feature of
233
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-493-0
SECURWARE 2016 : The Tenth International Conference on Emerging Security Information, Systems and Technologies

given shares and reduction in the cost of secure communication
channel, required during secret distribution phase. The increase
in computational complexity due to ECDLP is acceptable due
to various advantages of Elliptic Curve Cryptosystem over
other Cryptosystems. Therefore, the proposed scheme provides
an efﬁcient and secure mechanism for key management in
public key systems. Key recovery mechanisms, distributed in-
formation storage and secure protocols, such as access control
can be efﬁciently implemented by the proposed scheme.
The scheme proposed in this paper requires a trusted
combiner during secret reconstruction and veriﬁcation phase
to detect malicious participants. The scheme can be modiﬁed
in future, such that it does not require a trusted combiner.
REFERENCES
[1]
A. Shamir, ”How to share a secret?” Communication of the ACM, vol.
22, pp. 612-613, 1979.
[2]
G. Blakley, ”Safeguarding cryptographic keys,” Proc AFIPS 1979 Nalt
Conf, New York: AFIPS Press, vol. 48, pp. 313-317, 1979.
[3]
A. Abdallah and M. Salleh, ”Secret sharing scheme security and per-
formance analysis,” International Conference on Computing, Control,
Networking, Electronics and Embedded Systems Engineering, pp. 173-
180, 2015.
[4]
H. Y. Lin and Y. S. Yeh, ”Dynamic multi-secret sharing scheme,” Inter-
national Journal of Contemporary Mathematical Sciences, vol. 3, pp.
37-42, 2008.
[5]
J. He and E. Dawson, ”Multistage secret sharing based on one-way
function,” Electron. Lett., Vo1. 30, pp. 1591-1592, 1994.
[6]
L. Bai, ”A strong ramp secret sharing scheme using matrix Projection,”
Proceedings of the 2006 International Symposium on a World of
Wireless, Mobile and Multimedia Networks, pp. 652-656, 2006.
[7]
Y. J. Geng, X. H. Fan, and F. Hong, ”A new multi-secret sharing scheme
with multi-policy,” The 9th International Conference on Advanced
Communication Technology, Vol. 3, pp. 1515-1517, 2007.
[8]
F. Wang, L. Gu, S. Zheng, Y. Yang, and Z. Hu, ”A novel veriﬁable dy-
namic multi-policy secret sharing scheme,” Advanced Communication
Technology (ICACT), The 12th International Conference, Vol. 2, pp.
1474-1479, 2010.
[9]
D. Zhao, H. Peng, C. Wang, and Y. Yang, ”A secret sharing scheme with
a short share realizing the (t, n) threshold and the adversary structure,”
Computers and Mathematics with Applications, Vol. 64, Issue 4, pp.
611-615, August 2012.
[10]
H. Pilaram and T. Eghlidosy, ”An efﬁcient lattice based multi-stage
secret sharing scheme,” in press, IEEE 2015.
[11]
J. J. Zhao, J. Z. Zhang, and R. Zhao, ”A practical veriﬁable multi-secret
sharing scheme,” Computer Standards and Interfaces, vol. 29, pp. 138-
141, 2007.
[12]
J. Qu, L. Zou, and J. Zhang, ”A practical dynamic multi-secret sharing
scheme,” Information Theory and Information Security (ICITIS), pp.
629-631, 2010.
[13]
A. Nalwaya, P. D. Vyavahare, and M. Panchal, ”Veriable dynamic
multi-secret sharing scheme,” International Conference on Security and
Management (SAM), pp. 186-188, 2013.
[14]
M. Amara and A. Siad, ”Elliptic curve cryptography and its applica-
tions,” 7th International Workshop on Systems, Signal Processing and
their Applications (WOSSPA), pp. 247-250, 2011.
[15]
L. D. Singh and T. Debbarma, ”A new approach to elliptic curve
cryptography,” International Conference on Advanced Communication
Control and Computing Technologies (ICACCCT), pp. 78-82, 2014.
[16]
D. Hankerson, A. Menezes, and S. Vanstone, ”Guide to Elliptic Curve
Cryptography,” Springer, 2004.
[17]
B. Qing-hai, Z. Wen-bo, J. Peng, and L. Xu, ”Research on design prin-
ciples of elliptic curve public key cryptography and its implementation,”
International Conference on Computer Science and Service System, pp.
1224-1227, 2012.
[18]
R. R. Ramasamy, M. A. Prabakar, M. I. Devi, and M. Suguna,
”Knapsack based ECC encryption and decryption,” International Journal
of Network Security, vol. 9, pp. 218-226, Nov. 2009.
[19]
W. Stallings, ”Cryptography and Network Security,” Pearson, 2012.
[20]
R. Markan and G. Kaur, ”Literature survey on elliptic curve encryption
techniques,” International Journal of Advanced Research in Computer
Science and Software Engineering, vol. 3, pp. 906-909, 2013.
[21]
S. Hua and W. Aimin, ”A multi secret sharing scheme with general
access structures based on elliptic curve,” 3rd International Conference
on Advanced Computer Theory and Engineering (ICACTE), vol. 2, pp.
629 632, 2010.
[22]
A. Das and A. Adhikari, ”An efﬁcient multi-use multi-secret sharing
scheme based on hash function,” Applied Mathematics Letters, vol. 23,
pp. 993-996, April 2010.
[23]
R. M. Avanzi, H. Cohen, and C. Doche, ”Handbook of Elliptic and
Hyperelliptic Curve Cryptography”, Chapman and Hall/CRC Press,
2005.
[24]
K. H. Rosen, ”Elementary Number Theory and Its Applications”,
Addison-Wesley, MA, 1993.
234
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-493-0
SECURWARE 2016 : The Tenth International Conference on Emerging Security Information, Systems and Technologies

