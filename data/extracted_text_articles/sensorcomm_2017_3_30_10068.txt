MAC Protocol Design Requirements for Mobility-aware
Wireless Sensor Networks
Adrian Kacs´o and Wajahat Abbas Kazmi
Department of Electrical Engineering and Computer Science
University of Siegen, Germany
Email: [adrian.kacso, syed.kazmi]@uni-siegen.de
Abstract—The usage of mobile nodes is a requirement in some
wireless sensor networks (WSNs) applications (wildlife or patient
monitoring). They require that data packets are sent reliably,
mainly as bursty trafﬁc with low energy consumption and low
latency to a base station for monitoring. Mobility of nodes
introduces several communication challenges, such as frequent
topological changes, intermittent connectivity, and increase in
collision rate. In order to fulﬁll the application requirements
(e.g., energy efﬁciency, reliable transmissions, lower end-to-end
latency) low duty-cycle, mobility-aware medium access (MAC)
protocols have been proposed. The paper describes the main
characteristics of recent mobility-aware MAC protocols, includ-
ing our protocol, highlighting their assumptions and working
mechanism, their advantages and limitations. It presents concrete
application constraints and protocol features for designing MAC
protocols for mobility-aware WSNs. Moreover, challenges in the
evaluation of the proposed MACs are discussed and prospective
future directions are identiﬁed.
Keywords–wireless sensor network; mobility-aware Mac proto-
cols; reliable, burst trafﬁc; mobile WSNs; simulation
I.
INTRODUCTION
While the initial research on wireless sensor nodes (WSN)
medium access protocols (MACs) assumed static nodes only, it
becomes obvious that mobility support is necessary for many
application scenarios, e.g., wildlife and patient monitoring.
Thus, we analyze ﬁrst the existing mobility-aware MAC pro-
tocols with their achievements and drawbacks. In this paper,
we consider mobile nodes aiming to report their data with
minimal delay by establishing a communication link with a
static or ﬁxed node towards the sink. We refer to WSNs
containing mobile nodes as Mobile Wireless Sensor Networks
(MWSNs) in this paper. The design concerns for MAC in
MWSNs signiﬁcantly differ from that of cellular systems and
Mobile Ad-hoc Networks (MANETs) in spite of the common
aspect of mobility in these networks. In cellular systems,
mobile nodes are directly connected to the base station having
a single hop, versus multiple hops in MWSNs. Also, energy
conservation is not an important design constraint in cellular
systems because the base station and mobile nodes are not
energy constrained. In addition, contrary to cellular networks,
the handover process in MWSNs is more complex because
relay nodes in MWSNs are not resourceful like base stations
in cellular networks. MANETs are also not having energy-
related issues and the main focus of MAC design is on quality
of service provisioning.
Research in the area of WSNs focused primarily on im-
proving energy efﬁciency and prolonging network lifetime
whereas factors as mobility, latency, throughput, reliability,
scalability were treated as secondary concerns so far. Numer-
ous MAC layer designs for static WSNs have been proposed
by researchers. The protocols and algorithms presented in
these proposals were surveyed to acquaint researchers with
the state-of-the-art in the ﬁeld. Apart from categorizing the
protocols into different classes (synchronous, asynchronous,
frame-slotted, multichannel), [1] presents the evolutionary de-
velopment of MAC protocols in addressing problems that fall
in the domain of these classes of protocols. In [2], Bachir et
al. identify collisions, overhearing, protocol overhead and idle
listening as the main sources of energy consumption on the
basis of problems they intend to address. Problems that occur
due to mobility in MWSNs, particularly energy and reliable
delivery related issues, need to be addressed and investigated.
Synchronous MAC protocols are based on common ac-
tive/sleep schedules, where the clock is used to wake up the
nodes for a speciﬁc period at given synchronization points in
time. Nodes having the same schedule build a cluster. Such
protocols require clock synchronization among all the nodes
belonging to the same cluster. Synchronous protocols can be
employed in MWSNs applications, where a cluster of nodes is
attached to a moving target (person, animal, device), yielding
a ﬁx network topology, where a tight synchronization between
nodes can be achieved. Even here, it remains challenging to
detect mobile nodes and try to ensure communication with as
few as possible disconnections when moving among different
clusters, while also considering energy constraints of border
nodes (in charge of seamless handing over for mobile nodes).
Asynchronous MAC protocols are based on preambles
to announce a transmission. They require neither time syn-
chronization nor schedule dissemination. Each node operates
distributively and can choose its active schedule independently
from other nodes. Therefore, such protocols are more scalable
and robust to topology changes in the network. Asynchronous
protocols can be more efﬁcient than synchronous protocols
in MWSN applications, such as wildlife monitoring, where
a reliable communication between energy constrained mobile
and static nodes is infrequent and energy efﬁciency is a primary
concern. Their limitations are reduced channel availability and
increased competition among the nodes. Collisions can be
frequent, especially in dense networks with frequent transmis-
sions, which would imply retransmissions and increase thus
the energy consumption. Due to the mobility in dense zones,
mobile nodes experience high medium access delays. There-
fore, the major challenges to be considered while designing
asynchronous MAC protocols for MWSNs are duty cycling of
40
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

mobile node, medium access contention and communication
efﬁciency as well as handover and reconnection of mobile
nodes.
In [3], Ding et al. provide a survey of MAC protocols
for MWSNs proposed until 2011 and present the available
mobility models and mobility estimation techniques. It dis-
cusses the characteristics, advantages and disadvantages of
the following mobility-aware MAC protocols: MS-MAC [4],
MMAC [5], M-TDMA [6], MA-MAC [7], MobiSense [8],
and MCMAC [9]. In [10], authors presented a survey of
MAC protocols for MWSNs proposed till 2013. It gives a
general classiﬁcation of WSN mobility based on type of mobile
element, type of movement, protocol level considerations and
type of mobility handling entity. It summarizes WSN mobility
solutions proposed at MAC and network layer and few MAC
layer protocols: MS-MAC [4], MOBMAC [11], AM-MAC
[12], MD-SMAC [13], MMAC [5], CFMA-MAC[14], MoX-
MAC [15], MAMAC [16] and MMH-MAC [17]. In [18],
the authors highlight advantages and drawbacks of protocols
proposed until 2009 besides their own protocol Machiavel [19].
The contributions of this paper are twofold: we present 1)
the main contributions of some relevant MAC protocols for
MWSNs (since 2013) and discuss their working mechanism,
advantages and limitations to identify research achievements;
2) our Mob-MAC protocol design and identify prospective fu-
ture direction on this topic. This paper is structured as follows.
Section II presents a discussion of the relevant MAC protocols
including our Mob-MAC protocol for MWSNs. Section III
provides conclusions and future directions.
II.
DESIGN ISSUES IN MAC PROTOCOLS FOR MWSNS
In this section, we investigate a group of MAC protocols
for MWSNs according to their application assumptions and
the existing sensor network deployment. We group them into
preamble sampling (asynchronous) and cluster-based (syn-
chronous) protocols.
TABLE I. SUMMARY OF RELEVANT MAC PROTOCOLS FOR MWSNS.
Protocol
A/S
Derived from
Major problem addressed
M-ContikiMac [20]
A
ContikiMAC [21]
Handling bursty trafﬁc
ME-ContikiMAC [22]
A
ContikiMAC [21]
Handling bursty trafﬁc
X-Machiavel [18]
A
X-MAC [23]
Delays in burst transmission
and reconnection
MoX-MAC [15]
A
–
Overhead minimization
MT-MAC [24]
S
T-MAC [25]
High packet drop rate during
handover
MS-SMAC [26]
S
S-MAC [27]
Mobile node disconnection
due to speed variation
MobIQ [22]
A
ContikiMAC [21]
Neighbor discovery, Channel
contention, Hidden terminal
problem
MobiDisc [28]
A
ContikiMAC [21]
Delays in burst transmission,
handover and reconnection
We consider large sensor networks, where a large number
of static and mobile nodes coexist. It is assumed that static
nodes build a routing backbone (convergecast communication
infrastructure), e.g., a tree rooted at a sink, in which each
static node has a parent. A mobile node knows (or it is
able to detect) that it is mobile and does not forward data
packets. A mobile node establishes communication links with
(randomly) static nodes in order to inject their data in the
backbone. Static nodes forward the data hop by hop to the
sink. Mobile nodes are considered more energy constrained
that static nodes. Due to the mobility, disconnections between
mobile nodes and the static infrastructure are frequent and
common use cases. Networks are dense enough (a mobile node
ﬁnds at least a static node in the vicinity). The application
requirements are high packet delivery ratio at sink, low end-
to-end latency, energy efﬁcient transmissions of relevant data
in a burst. Our objective is to address mobility efﬁciently
under burst trafﬁc in high density WSNs by achieving low
end-to-end and handover delays, low energy consumption
and prolonged lifetime. Table I presents some relevant MAC
protocols for MWSNs showing their working scheme (column
A/S: A=Asynchronous, S=Synchronous), the protocol from
which they are derived and the major problems addressed by
them.
A. Synchronous MAC Protocols for MWSNs
Synchronous MAC protocols for MWSNs use the cluster
topology to handle mobility. Schedules are propagated by
broadcasting SYNC packets at the beginning of the listen
phase every predeﬁned number of cycles. When a mobile node
moves out of its original cluster range, it should receive a
SYNC packet from the border node, deployed between the
two clusters, in order to learn as soon as possible the new
schedule. The next protocols use different methods to handoff
the mobile node to another cluster.
1) MT-MAC [24] : is an extension of T-MAC [25], a syn-
chronous protocol that adopts an adaptive duty cycle according
to the variation in trafﬁc load. The mechanism of MT-MAC
is divided into two phases, namely the scheduling phase and
mobility handling phase.
In the scheduling phase, nodes are classiﬁed adaptively into
stationary node, border node, cluster head and mobile node,
where each node belongs to at least one virtual cluster.
In the mobility phase, upon receiving a SYNC packet, a
static node observes the Received Signal Strength Indicator
(RSSI) and Link Quality Indicator (LQI) values. In case a
change in RSSI and LQI values is above a certain threshold, it
is considered that the node is mobile and a timer is triggered.
If a node marked as mobile stays in the same cluster more
than a particular time, it is considered that the node is static.
Based on the above mechanism, when a border node detects
that a mobile node is approaching, it informs the node about
the schedule of the next cluster. Thus, the mobile node can
perform handover in an organized manner.
Limitations of the protocol are: a) Mobility estimation
using RSSI and LQI is not reliable. b) MT-MAC is only
suited when the mobile node is not energy constrained. If the
mobile node is energy constrained, keeping the schedule of
both clusters is not optimal. c) If there are more mobile nodes
and the border nodes are energy constrained, the interactions
with mobile nodes will consume much energy of the border
nodes. The scheduling phase must be reinitiated periodically
to select other border nodes.
2) MS-SMAC [26] : proposes a mechanism that reduces the
probability of disconnection of mobile node with neighboring
nodes when the speed of mobile node changes during move-
ment. It is designed based on the fact that existing mobility-
aware MAC protocols for WSNs do not show adaptive behav-
ior to the change of mobile node speed.
Upon entering a new cluster, a mobile node broadcasts
its speed and direction. The static nodes in the cluster ac-
knowledge the packet sent by the mobile node, also providing
41
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

information about their next sleep time and next announcement
interval (when mobile node should send update about its
current speed). An acknowledgment sent by border nodes
contains information about sleep times of the current and the
neighboring cluster.
Mobility estimation, as well as localization of mobile
nodes is performed by a mechanism that makes use of the
three largest RSSI values to reference neighboring nodes. The
protocol also introduces a mechanism to provide up-to-date
information to mobile and static nodes about active cycles of
other nodes to ensure better connectivity between nodes.
Limitations of the protocol are: a) Mechanism for mo-
bility estimation and handover decision introduce signiﬁcant
overhead. b) Mobility estimation and localization using RSSI
is not reliable. c) The implicit assumption regarding the
numbers of nodes in the cluster is not clear. The mechanism
for localization needs three RSSI values, thus assuming the
presence of at least three nodes in the cluster. If the number
of nodes in the network, particularly mobile nodes, is high
the protocol performance will be degraded due to complex
computations involved in mobility estimation and handover.
B. Asynchronous MAC Protocols for MWSNs
A variety of applications involving mobility, such as patient
and wildlife monitoring, require data to be transmitted in
bursts. This occurs in scenarios where mobile nodes have
occasional contact with different static nodes in the network
and need to transmit urgently relevant sensed data. Relevant
asynchronous MAC protocols send strobed preambles to notify
potential receivers and use additional mechanisms to achieve
better performance.
1) M-ContikiMAC [20]: is an extension of the Contiki-
MAC protocol [21], which is the default duty cycling mech-
anism in ContikiOS [29]. It is a preamble sampling protocol
designed for static networks employing unicast and broadcast
transmissions. It uses a special mechanism to handle bursty
trafﬁc in the network. The node intending to transmit a burst
of packets informs the receiver about more packets in a row
by setting a burst ﬂag.The receiver on observing this ﬂagged
data keeps its radio on to receive more packets until the
transmission is over. For the last packet in the burst, the
ﬂag will not be set, and, this way, efﬁcient burst handling
is achieved.
In M-ContikiMAC, a mobile node is not aware of the next
hop in the rooting tree. Therefore, it cannot use unicast and
must broadcast at least in the ﬁrst step. It has to ﬁnd out the
address of a static neighbor node in the tree to communicate
with it. M-ContikiMAC uses an anycast transmission, which
allows the ﬁrst node, the one that received the anycast packet
and acknowledged it, to be the real recipient for the next
packets in the burst.
If a mobile node is intending to send packets in burst, it
sets besides the burst ﬂag a byte ﬁeld (ReqHop) to discover a
static parent node. A static receiver, upon receiving an anycast
packet, checks the value of the ﬁeld. If the value is zero, it
receives the packet and sends an acknowledgment informing
the transmitter node about its address for unicast transmission.
The receiver keeps its radio on to receive the burst from the
sender. When the mobile sender receives the acknowledgment,
it sets the byte ﬁeld to the address of the receiver and unicasts
the remaining packets (starting with the 2nd data packet) to it.
In case of disconnection with the receiving node, the mobile
sender sets the ﬁeld to 0 again and repeats the same procedure
to ﬁnd a new potential receiver node as relay to sink.
Limitations of the protocol are: a) Useless forwarding of
the 1st data packet on the route to sink. b) The collision of the
ACKs. c) Mobile node disconnection from temporary parent.
All these are correlated. Let us assume that two receiver nodes
receive simultaneously a packet (either the 1st or one during
reconnection). They will reply with an acknowledgment at
(near) the same time, which collide at the sender. According
to M-ContikiMAC, these nodes will keep their radio on and
forward the ﬁrst received data packet on several routes to
the sink. The sink detects packet duplication and the useless
trafﬁc produces congestion, high latency and high energy
consumption.
2) ME-ContikiMAC [22]: overcomes the limitations in M-
ContikiMAC. In ME-ContikiMAC, the mobile node sends a
control packet using anycast instead of the ﬁrst data packet.
The control packet is not forwarded by receiving nodes. Even
if acknowledgements from two or more receivers collide, the
control packet will not be forwarded to the sink. The mobile
node will retransmit the control packet and will not initiate
burst transmission until it receives an acknowledgment from
any receiving node, which reduces packet duplication in the
network. The same mechanism is used for reconnections.
Limitations of the protocol are: a) Receiver nodes send the
acknowledgment upon receiving the control packet and switch
the radio on waiting for the next packets in the burst. If the
acknowledgments collide, the receivers are not aware about it
and loose energy waiting for the burst. b) During bursts, a new
mobile or static node can generate the hidden station problem.
Moreover, an aggressive mobile mode (i.e., sending control
packets without waiting the next preamble cycle) may affect
the communication of the static nodes. c) For dense networks,
it is necessary to avoid the collision of the ACKs; (the control
packet is resent until the ACK is received). d) If the mobile
node doesn’t receive its expected ACK, the burst is postponed
for the next preamble cycle, which increases the latency.
3) X-Machiavel [18]: takes beneﬁt of the strobed preamble
mechanism used by X-MAC to include mobile nodes in the
communication. Data packets initiated by a mobile node have
higher priority compared to those of static/ﬁxed nodes. A
mobile node, before a transmission, overhears the medium and
’steals’ the medium from a static node already involved in a
not guarded incipient communication (either with a special
preamble or a ﬂag). The idea is based on the fact that mobile
nodes are energy constrained and without sending a preamble,
they insert their data after overhearing a preamble of the
intended static receiver. The communication between static
nodes can be postponed, which may induce message buffering,
retransmissions and latency in the static routing infrastructure.
The protocol uses a special header that is included in the
preamble, data and ACK packets. The header contains a type
that allows to use various preambles or acknowledgements and
a ﬂag byte, where the M-bit informs each relay receiver that
the data is from a mobile node on the way to sink, and the
medium cannot be stolen by a mobile. A special preamble type
prevents potential forwarders to claim the data.
Limitations of the protocol are: a) Complex implementa-
tion, special header added to each frame type. b) If the ﬁnal
42
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

destination of the data packet acknowledges a preamble later
than a static forwarder in the same vecinity, the forwarding
is not optimal and the latency increases. c) Unfairness, data
initiated from a mobile node have higher priority than from
a static one. d) Two or more ACKs from potential receivers
may collide, which triggers a retransmission.
4) MoX-MAC [15]: allows a mobile sender to overhear
an ongoing transmission between two static nodes, in order
to send his own data to the static sender at the end of the
ongoing transmission. Limitations of the protocol: a) Mobile
nodes must be in the range of both communicating static sender
and receiver. b) Since the mobile node must use the basic
X-MAC scheme if no ongoing transmission is detected, the
efﬁciency of the approach is highly dependent on the frequency
of transmissions between the static nodes.
5) MobIQ [30]: proposes a mechanism to enable efﬁcient
neighbor discovery for mobile nodes, reduction of channel
contention and overcoming hidden terminal problems.
Mobile nodes, due to their movement (or link disconnec-
tions), often have to change their static next-hop in order to
send all the data packets of a burst. An efﬁcient handover
mechanism allows mobile nodes to maintain an uninterrupted
communication with the static routing backbone. This can be
achieved with a fast neighbour discovery and regular updates
from the neighborhood. For discovering and selecting an
appropriate neighbor, the mobile node continuously anycasts
control packets for the whole preamble duration to assure
that all neighbors receive them. All receivers acknowledge it
by sending their ID and routing metrics (e.g., hops to sink,
remaining battery) to the mobile node. Between all its potential
receivers, the mobile node selects the best next forwarder node
on the route to sink (the network layer provides the metrics
to the link layer) and starts burst transmission in the next
sampling period.
To avoid channel contention during transmission of burst
packets, the mobile node informs the nodes about the queue
length in every data packet. Using this queue length infor-
mation, receiver nodes can adjust their sleep schedule. To
avoid the hidden terminal problem, where more than one
mobile node send data to the same receiver, the receiver
node disseminates the queue length information of the current
sender in ACK packets, by overhearing which other intending
sender(s) can adjust their wait period accordingly.
Limitations of the protocol are: a) Neighbors of mobile
node will come to know which node was selected by the
mobile node once it starts the burst transmission; therefore,
all neighbors will wake up in the next sampling period, which
will result in energy consumption for nodes which were not
selected. b) Since two or more ACKs from potential receivers
may collide, the mobile node may select not the best forwarder.
6) MobiDisc [28]: an extension of MobIQ, introduces the
First Ack Next-hop (FAN) mode, which enables reduction of
delays in transmission of bursts by allowing mobile sender
nodes to select a better (according to some routing metrics)
forwarder node on the route to sink. Using the FAN mode,
if another static forwarder samples the medium during the
ongoing burst transmission of the mobile node with the ﬁrst
forwarder, then it will inform the mobile node about its metric
using a notiﬁcation packet. Later, the mobile node may decide
to select the second forwarder (according to it metrics) and
perform a handover.
During burst transmission, mobile node may get discon-
nected from its current static receiver. The Fast Recovery
Mechanism (FRM) aims at reducing the handover and re-
connection delays by granting priority to trafﬁc of mobile
nodes over that of static nodes. Thus, upon discovery of
disconnection, the mobile node immediately starts sending
control packets to search for a new potential receiver within
the same preamble cycle.
Limitations of the protocol are: a) In FAN mode the energy
consumption of both mobile and static nodes increases (due to
extended listening time to receive the notiﬁcation and more
Clear Channel Assessment (CCA) slots). b) The protocol does
not consider the possibility of medium access conﬂicts between
more mobile nodes getting disconnected in the same vicinity,
while discussing FRM.
7) Mob-MAC: is our proposal. We opt for a preamble based
MAC approach, since, in our use cases, the mobile node is
energy constrained. When a mobile node has data to send, it
broadcasts a preamble as a strobe control frame, containing a
ReqHop, a ﬂag, and a type ﬁeld. The ReqHop ﬁeld is set to a
default anycast address (denotes either all or a given receiver),
the ﬂag tells the receiver that the packet is from a mobile node,
it is urgent, and the type grants frames different priorities. The
control frame serves to inform the vicinity that the mobile node
is searching a receiver as forwarder of its data. To assure that
all neighbors of the mobile sender receives the control frame,
it is transmitted the whole preamble period. The mobile nodes
have to switch often their next hop node, due to its mobility
across the static node infrastructure, link quality ﬂuctuations
and disconnections. An efﬁcient handover mechanism allows
mobile nodes to establish a communication link with the static
infrastructure by switching reactively between different static
forwarder nodes. The handover is implemented only in the
mobile nodes, as they are known in advance. Both static and
mobile nodes are designed using cross-layering, since routing
or application layer information (e.g., routing metrics of a path
to sink, or latency requirements) is made accessible to the
MAC layer. Thus, when a static receiver as potential forwarder
acknowledges a control frame, it informs the mobile node
about its address and its metrics (the cost on the route to sink
through this forwarder). After that, the static node switches off
its radio until the next preamble sampling period. The mobile
node, by comparing the metrics, selects the best forwarder
and starts the burst transmission in the next preamble period.
Each potential forwarder wakes up during that period and by
receiving one of the packet inside the burst, concludes that
was not selected and switch off its radio. During the burst
transmission, the mobile node may be disconnected from its
current forwarder or the neighborhood can provide info to
the mobile node, suggesting it to change the forwarder if
there is a most appropriate one. In case of disconnection, the
mobile node starts by sending control frames. In case one of
the neighbors overhears the i-th data transmission inside an
ongoing burst, it informs (similar principle to FAN) the mobile
node about its better metrics. In order to activate this mode of
operation, the mobile node must wait a given time after the
ACK reception (similar to the TA in T-MAC), in order to get
the new information and later to switch the forwarder when
transmitting the (i+1)-th data packet.
43
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

The communication initiated by a mobile node is consid-
ered having higher priority that the transmission between static
nodes and therefore, a mobile node can steal the medium from
an ongoing communication between two static nodes, except
the case when the data was originated from a mobile node.
First results using the new Mob-MAC indicate performance
improvements in our scenarios concerning increased packet
delivery rate at sink and lower end-to-end delay with a very
small increase in energy consumption.
We have evaluated our protocol by comparing it with
implementations of mobile variants of T-MAC and X-MAC in
the MiXiM/OMNeT++ Framework Simulator using a random
waypoint mobility model. The mobility models specify the
mobility pattern used by the mobile nodes. In random waypoint
mobility model, the mobile node pauses for a ﬁxed period and
then moves from an initial to a ﬁnal position by randomly
choosing the speed and direction within a given time or
distance. When the given time elapses or the distance has been
reached, the node pauses again, adopts a new direction and
speed and moves to another location. Furthermore, the model
where the mobile node moves to the next destination without
pausing is referred to as Random Walk model.
TABLE II. COMPARISON AND EVALUATION OF THE MAC PROTOCOLS.
Protocol
Performance
compared with
Mobility
model
Evaluation using
ME-ContikiMAC
[22]
MoX-MAC[15],
MOBINET[31],
M-ContikiMAC [20]
Random
waypoint
COOJA simulator
MX-MAC [32]
—
—
TinyOS
(IMote2
platform)
MT-MAC [24]
MS-MAC[4],
T-MAC [25]
Random
walk,
Random
waypoint
Castalia Simulator
MS-SMAC [26]
S-MAC[27],
MS-
MAC [4], MMAC[5]
—
TOSSIM simulator
MobIQ [30]
MoX-MAC [15],
MOBINET[31], ME-
ContikiMAC[22]
Random
waypoint
ContikiOS (Tmote-
Sky
platform),
COOJA simulator
MobiDisc [28]
MoX-MAC[15], ME-
ContikiMAC [22]
Random
waypoint
ContikiOS (Tmote-
Sky
platform),
COOJA simulator
Mob-MAC
MT-MAC/RB [33],
Random
waypoint
MiXiM / OMNet++
Simulator
Table II presents the simulators/testbeds used for evaluation
of all discussed protocols and the mobility models used. The
protocols contained in the ﬁrst column of the table extend
and/or improve the corresponding protocols cointained in the
second column.
III.
CONCLUSIONS AND FUTURE DIRECTIONS
Most of the proposed MAC protocols for MWSNs extend
the existing protocols designed for static nodes and therefore
inherit their drawbacks. The concerns regarding the design
of mobility-aware MAC protocols presented in this paper
need to be addressed while designing new mobility-aware
MAC protocols for WSNs. Based on our ﬁndings, we present
few prospective future directions for MAC protocol design in
MWSNs.
• Reduction of the overhead on energy-constrained mobile
nodes: Most MAC protocols designed for MWSNs assume
that mobile nodes are not energy constrained, which is not the
case in some practical scenarios such as in wildlife or person
monitoring. When designing scenarios with energy constrained
mobile nodes, the aspect of overhead on mobile nodes needs
to be taken into consideration.
• Enabling reliable bursty transmission in MWSNs: Al-
though some solutions have been proposed for burst trans-
mission in MWSNs, the focus is merely on enabling burst
transmission rather than providing reliability. In emergency
situations, such as ﬁre monitoring or healthcare reliable burst
transmission is required because providing insufﬁcient infor-
mation may cost human lives. Thusm solutions providing
reliable burst transmission in MWSNs need to be designed.
• Providing fair media access is a challenging task in
dense MWSNs: The situation becomes much more complex
when mobile nodes are present in a WSN which has energy
constrained static nodes having critical data. Many previously
proposed MAC solutions for WSNs with mobile nodes assume
that media access will be granted to mobile nodes as soon as
they enter the network. Therefore, it is a design issue that
depends on the application if some communication should be
prioritized. If vital data need to be reported immediately there
must be a mechanism that will allow to differentiate between
vital and not urgent data packets.
• Improvement of overall communication efﬁciency in
complex scenarios: When a mobile node moves with high
speed and it has a large number of packets to send, it may
not be possible to send all the packets because of the short
time span available for handshaking and burst transmission.
Taking energy efﬁciency, reliability and delay constraints into
consideration, efﬁcient schemes (e.g., handovers) to improve
overall communication efﬁciency need to be devised.
• Using receiver-initiated preamble sampling: In scenarios
where energy constrained mobile nodes are used, receiver-
initiated preamble sampling will reduce energy consumption
by reducing the communication overhead on mobile sensor
nodes.
• Develop novel scheduling schemes to reduce latency in
packet forwarding to the sink: Mobile nodes moving across
dense networks of static sensor nodes suffer from long medium
access delays and transient disconnection. The mobile node
should be able to access the medium regardless of the level
of contention on the medium in order to report its collected
data in burst and with minimal delay. The transmissions of
the mobile node need to be integrated in the low duty-
cycle communication schedule of static nodes. In case of
disconnection, a neighbor discovery mechanism is needed to
allow mobile nodes to keep continuous connectivity with the
static infrastructure. These aspects need to be resolved at the
MAC layer (according to information provided by network or
application layers).
A real energy beneﬁt is achieved when using strobe
preamble sampling MAC protocols with low duty cycles.
Considering the scarce energy, communication and processing
resources of the mobile nodes, a joint optimization of the
MAC, network and application layers by employing a cross-
layer design is a promising alternative to maximize the network
performance, while reducing the global energy consumption.
As future work, we continue with extensive simulations and
analyze more thoroughly the performance of Mob-MAC pro-
tocol to ﬁnd further possible optimizations and to validate our
design.
44
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

REFERENCES
[1]
P. Huang, L. Xiao, S. Soltani, M. W. Mutka, and N. Xi, “The evolution
of MAC protocols in wireless sensor networks: A survey,” IEEE
communications surveys & tutorials, vol. 15, no. 1, 2013, pp. 101–120.
[2]
A. Bachir, M. Dohler, T. Watteyne, and K. K. Leung, “MAC essen-
tials for wireless sensor networks,” IEEE Communications Surveys &
Tutorials, vol. 12, no. 2, 2010, pp. 222–248.
[3]
Q. Dong et al., “A survey on mobility and mobility-aware MAC
protocols in wireless sensor networks,” IEEE Communications Surveys
and Tutorials, vol. 15, no. 1, 2013, pp. 88–100.
[4]
H. Pham and S. Jha, “An adaptive mobility-aware MAC protocol for
sensor networks (MS-MAC),” in International Conference on Mobile
Ad-hoc and Sensor Systems.
IEEE, 2004, pp. 558–560.
[5]
M. Ali, T. Suleman, and Z. A. Uzmi, “MMAC: A mobility-adaptive,
collision-free mac protocol for wireless sensor networks,” in 24th In-
ternational Performance, Computing, and Communications Conference
(IPCCC).
IEEE, 2005, pp. 401–407.
[6]
A. Jhumka and S. Kulkarni, “On the design of mobility-tolerant
TDMA-based media access control (MAC) protocol for mobile sensor
networks,” in International Conference on Distributed Computing and
Internet Technology.
Springer, 2007, pp. 42–53.
[7]
T. Zhiyong and W. Dargie, “A mobility-aware medium access control
protocol for wireless sensor networks,” in GLOBECOM Workshops
(GC Wkshps).
IEEE, 2010, pp. 109–114.
[8]
A. Gonga, O. Landsiedel, and M. Johansson, “MobiSense: Power-
efﬁcient micro-mobility in wireless sensor networks,” in International
Conference on Distributed Computing in Sensor Systems and Work-
shops (DCOSS).
IEEE, 2011, pp. 1–8.
[9]
M. Nabi, M. Geilen, T. Basten, and M. Blagojevic, “Efﬁcient cluster
mobility support for tdma-based mac protocols in wireless sensor
networks,” ACM Transactions on Sensor Networks (TOSN), vol. 10,
no. 4, 2014, p. 65.
[10]
R. Silva, J. S. Silva, and F. Boavida, “Mobility in wireless sensor
networks–survey and proposal,” Computer Communications, vol. 52,
2014, pp. 1–20.
[11]
P. Raviraj, H. Sharif, M. Hempel, and S. Ci, “MOBMAC-an energy
efﬁcient and low latency MAC for mobile wireless sensor networks,”
in Proceedings Systems Communications.
IEEE, 2005, pp. 370–375.
[12]
S.-C. Choi, J.-W. Lee, and Y. Kim, “An adaptive mobility-supporting
MAC protocol for mobile sensor networks,” in Vehicular Technology
Conference,VTC Spring.
IEEE, 2008, pp. 168–172.
[13]
S. Hameed, E. Shaaban, H. Faheem, and M. Ghoniemy, “Mobility-
aware MAC protocol for delay-sensitive wireless sensor networks,”
in International Conference on Ultra Modern Telecommunications and
Workshops (ICUMT).
IEEE, 2009, pp. 1–8.
[14]
B. M. Khan and F. H. Ali, “Collision free mobility adaptive (cfma) mac
for wireless sensor networks,” Telecomm. Systems, 2013, pp. 1–16.
[15]
P. D. Ba, I. Niang, and B. Gueye, “An optimized and power sav-
ings protocol for mobility energy-aware in wireless sensor networks,”
Telecommunication Systems, vol. 55, no. 2, 2014, pp. 271–280.
[16]
B. Liu, K. Yu, L. Zhang, and H. Zhang, “MAC performance and
improvement in mobile wireless sensor networks,” in Eighth ACIS In-
ternational Conference on Software Engineering, Artiﬁcial Intelligence,
Networking, and Parallel/Distributed Computing (SNPD), vol. 3. IEEE,
2007, pp. 109–114.
[17]
L. Bernardo et al., “A mac protocol for mobile wireless sensor networks
with bursty trafﬁc,” in Wireless Communications and Networking
Conference (WCNC).
IEEE, 2010, pp. 1–6.
[18]
R. Kuntz, J. Montavont, and T. No¨el, “Improving the medium access in
highly mobile wireless sensor networks,” Telecommunication Systems,
2013, pp. 1–22.
[19]
R. Kuntz and T. No¨el, “Machiavel: Accessing the medium in mobile
and dense WSN,” in 20th International Symposium on Personal, Indoor
and Mobile Radio Communications.
IEEE, 2009, pp. 1088–1092.
[20]
G. Papadopoulos et al., “Enhancing ContikiMAC for bursty trafﬁc in
mobile sensor networks,” in SENSORS.
IEEE, 2014, pp. 257–260.
[21]
A. Dunkels, “The contikimac radio duty cycling protocol,” Swedish
Institute of Computer Science, 2011.
[22]
G. Z. Papadopoulos et al., “Wireless medium access control under
mobility and bursty trafﬁc assumptions in WSNs,” Mobile Networks
and Applications, vol. 20, no. 5, 2015, pp. 649–660.
[23]
M. Buettner, G. V. Yee, E. Anderson, and R. Han, “X-mac: A short
preamble mac protocol for duty-cycled wireless sensor networks,” in
Proceedings of the 4th International Conference on Embedded Net-
worked Sensor Systems, ser. SenSys ’06.
New York, NY, USA: ACM,
2006, pp. 307–320.
[24]
M. Zareei, A. M. Islam, A. Zeb, S. Baharun, and S. Komaki, “Mobility-
aware timeout medium access control protocol for wireless sensor net-
works,” AEU-International Journal of Electronics and Communications,
vol. 68, no. 10, 2014, pp. 1000–1006.
[25]
T. Van Dam and K. Langendoen, “An adaptive energy-efﬁcient MAC
protocol for wireless sensor networks,” in Proceedings of the 1st inter-
national conference on Embedded networked sensor systems.
ACM,
2003, pp. 171–180.
[26]
F. Peng, “A novel adaptive mobility-aware MAC protocol in wireless
sensor networks,” Wireless Personal Communications, vol. 81, no. 2,
2015, pp. 489–501.
[27]
W. Ye, J. Heidemann, and D. Estrin, “An energy-efﬁcient MAC protocol
for wireless sensor networks,” in Proceedings Twenty-ﬁrst annual joint
conference of the computer and communications societies INFOCOM,
vol. 3.
IEEE, 2002, pp. 1567–1576.
[28]
G. Z. Papadopoulos, V. Kotsiou, A. Gallais, P. Chatzimisios, and
T. Noel, “Low-power neighbor discovery for mobility-aware wireless
sensor networks,” Ad Hoc Networks, vol. 48, 2016, pp. 66–79.
[29]
A. Dunkels, B. Gronvall, and T. Voigt, “Contiki-a lightweight and
ﬂexible operating system for tiny networked sensors,” in 29th Annual
International Conference on Local Computer Networks.
IEEE, 2004,
pp. 455–462.
[30]
G. Z. Papadopoulos et al., “A Mobility-Supporting MAC Scheme
for Bursty Trafﬁc in IoT and WSNs,” in Global Communications
Conference (GLOBECOM).
IEEE, 2016, pp. 1–6.
[31]
D. Roth, J. Montavont, and T. Noel, “MOBINET: Mobility management
across different wireless sensor networks,” in Wireless Communications
and Networking Conference (WCNC).
IEEE, 2011, pp. 351–356.
[32]
W. Dargie and J. Wen, “A seamless handover for wsn using lms ﬁlter,”
in 39th Conference on Local Computer Networks (LCN). IEEE, 2014,
pp. 442–445.
[33]
A. Kacs´o and U. Schipper, “Receiver-based routing service for t-
mac protocol,” in Proc. 4th Int. Conf. on Sensor Technologies and
Applications (SENSORCOMM’10).
Venice, Italy, July 18-25 2010,
pp. 489–494.
45
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-580-7
SENSORCOMM 2017 : The Eleventh International Conference on Sensor Technologies and Applications

