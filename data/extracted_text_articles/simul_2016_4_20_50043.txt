Reconnaissance
(sensors)
Execution
(effectors)
Decision-making
(command)
 
Figure 1. Scheme of Network Centric Warfare. 
 
 
Modeling and Analyzing Enterprise Architectures to Examine the Feasibility of 
Network Centric Operations 
Oliver Kröning and Hendrik Rothe 
Chair of Measurement and Information Technology 
Helmut Schmidt University / University of the Federal Armed Forces 
Hamburg, Germany 
Email: oliver.kroening@hsu-hh.de, rothe@hsu-hh.de   
 
 
Abstract—Military forces of NATO states are often constrained 
to perform missions within the framework of Network Centric 
Operations (NCO) due to a joint and multinational 
environment requiring a high level of interoperability. The 
transformation and development of respective capabilities and 
systems are often tied to financial and time based expenditures. 
Thus, models of real NCOs are necessary to analyze risks, 
problems and development needs. Enterprise architecture 
models of a certain organization provide views from different 
perspectives to examine various aspects with the aim of 
supporting problem solutions. This work presents an approach 
to apply two different architecture frameworks for modeling 
NCOs examining various layers of a model for interoperability. 
Furthermore, analysis methods are introduced to assess the 
feasibility of NCOs.  
Keywords – Enterprise Architecture; Network Centric 
Operations; UML modeling; analyzing methods; TOGAF; NAF. 
I. 
 INTRODUCTION 
The importance of acquisition and evaluation of 
information has become an essential component of military 
operations. Thus, military forces endeavor to optimize the 
information flow and to minimize technical and operational 
errors. Among the “classical” operational factors – forces, 
space and time – information is considered as the fourth 
decisive factor of successful warfare [1]. 
Coincidentally the introduction of new technological 
capabilities to gather, exchange and process information 
offers new opportunities of efficiency enhancement and 
optimization of resources. 
In the late 1990s, the principle of NCOs (also called 
Network Centric Warfare) was developed to achieve 
information superiority, as well as firepower and command 
superiority involving an optimized mission execution [1][2]. 
The attainment of these benefits requires an essential 
transform in thinking and acting of respective military 
forces. Organizational, structural and technical changes are 
necessary as well. Furthermore, just like any other new 
development, there are risks and problems to face. 
Since a couple of years the German Federal Armed 
Forces have used scientific approaches to analyze and 
document the forces’ progression and transformation with 
the objective to realize NCOs. In this paper, the modeling 
and analysis of NCOs using the method of architecture are 
described. Thereby architecture supports interoperability, 
cost effectiveness and a common understanding of the 
concept of NCO. 
The paper is structured as follows: Section II defines the 
term of NCO and discusses its advantages, risks and 
problems. Section III introduces the architectural approach 
and gives an overview of the architecture frameworks. 
Section IV describes the modeling of NCO and the usage of 
architecture tools applied to a model of interoperability. 
After that analysis methods of architecture products are 
presented followed by best practice hints and lessons learned 
in Section VI. Section VII contains the papers conclusion. 
II. 
NETWORK CENTRIC OPERATIONS 
NCO is a military warfare doctrine with the aim to 
optimally bring available forces and means into effect. The 
concept of the Federal Armed Forces [3] presets the theory 
of NCO as the groundwork for all missions of the German 
forces. 
Therefore, 
all 
missions 
are 
performed 
by 
reconnaissance, command, joint fires and support networks 
in all dimensions (land, air, navy, space, cyber).  
This requires a joint, cross-departmental, national, 
combined, interoperable and secure information and 
communication network embracing all levels of command. 
All units, duty stations and facilities together with sensors 
and effectors have to be connected using multinational and 
interoperable means to achieve a fast and efficient operation.  
In contrast to a “Platform Centric Warfare” a network 
connecting multiple sensors, decision-makers and effectors 
as depicted in Figure 1 is able to create synergy by coupling 
system functionalities [4]. The information structure is based 
77
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

Preliminary. 
Framework 
& Principles
A. 
Architecture
Vision
B. 
Business 
Architecture
C. 
Information 
Systems 
Architecture
D. 
Technology 
Architecture
E. 
Opportunities
& Solutions
F. 
Migration 
Planning
G. 
Implemen-
tation
Governance
H. 
Architecture
Change 
Management
RE. 
Requirements
Management
 
Figure 2. ADM correspondent to TOGAF [11]. 
on a Common Operational Picture (COP) collecting and 
merging data from connected sensors. This improves the 
common situational awareness, informational superiority and 
command superiority in respective command facilities 
resulting in a fast, quick-response and effective use of 
effectors.  
NCOs also contain some risks military forces have to 
avoid or reduce. The complexity of the COP could lead to an 
information overload especially on lower levels of 
command. However, a high level of detail could result in 
micromanagement 
on 
higher 
levels 
of 
command. 
Furthermore, the forces also have to provide a high quality of 
interoperability - operational and technical. Other risks might 
be the threat of cyber-attacks and vague responsibilities. 
Problems in the development of a NCO capability are the 
expensive costs of new technologies and a high financial and 
practical effort during the transformation. 
III. 
ARCHITECTURAL APPROACH 
A. Enterprise Architecture 
An Enterprise Architecture is described as a well-defined 
practice for conducting enterprise analysis, design, planning, 
and implementation, using a holistic approach at all times, 
for the successful development and execution of strategy [5]. 
The basic idea of architecture is the systematic and 
structured description and analysis of a real and complex 
system by methodically disassemble the problem into 
smaller and simpler models of the reality without 
disregarding coherences and dependencies between these 
components. The definition of architecture terms and 
elements can be found in [6].  
Architecture offers the opportunity to document complex 
sociotechnical systems. Thus, it is a reliable methodology to 
 
Verify operational deliberations and document an 
operational context, 
 
Deduce special user commands from the operational 
context, 
 
Design a technical solution to fulfil operational 
requirements, 
 
Abstract and document the internal structure of a 
technical solution as well as its inclusion in an 
overall system or network and 
 
Manage system and product dependencies. 
Thus, enterprise architecture provides decision support of 
defining how resources will be used to support enterprise 
strategy and helps to achieve goals and objectives [7]. 
B. Architecture Frameworks 
Due to the requirement of a structured and systematic 
development, architecture holds standardized patterns and 
process models for developing and using architecture 
products. Architecture frameworks contain valid conventions 
and guidelines for architecture preparation to ensure the 
models’ and/or sub models’ compatibility, integration, 
uniformity and reusability. 
The variety of architecture frameworks is large and there 
are many different approaches. An overview of frameworks 
is given by Urbaczewski et al. [8]. Architecture frameworks 
used within military applications are compared by Jamjoom 
et al. [9].  
The latter reference examines frameworks by focusing on 
their support of the Service Oriented Architecture (SOA) 
paradigm, which contains needs and capabilities and their 
distribution between stakeholders. With regard to Jamjoom 
et al. [9], the NATO Architecture Framework (NAF) 
strongly provides SOA features, such as interoperability and 
reusability, to implement NATO capabilities in complex 
operational environments.          
Due to these benefits, the modeling of architecture 
products is based on rules and standards which are defined in 
the NAF Version 3.1 (NAFv3.1). Further on, an architecture 
development process is introduced in Section III.C by using 
The Open Group Architecture Framework (TOGAF). 
C. Architecture Development Method  
The development of enterprise architectures is guided by 
referenced process models to ensure a standardized, 
comprehensible 
and 
consistent 
way 
of 
projecting, 
implementing, analyzing and governing architectures. 
TOGAF characterizes a comprehensive approach to realize 
these requirements.  
Figure 2 shows the Architecture Development Method 
(ADM) designed in TOGAF to support the production, use 
and maintenance of enterprise architectures. This iterative 
cycle contains several activities and phases to realize an 
Enterprise Architecture in a controlled manner in response to 
business goals. Phases compliant with TOGAFs ADM are as 
follows [10]: 
 
Preliminary Phase: Initial phase to evaluate 
organizational frame for enterprise architecture, to 
analyze stakeholders and to identify affected 
organizational elements, 
78
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

NAV 
01
NAV 
02
NAV 
03
NCV 
01
NCV 
02
NCV 
06
NCV 
04
NCV 
05
NCV 
03
NOV 
01
NOV 
04
NOV 
02
NOV 
03
NOV 
06
NOV 
05
NOV 
07
NSOV 
04
NSOV 
02
NSOV 
03
NSOV 
06
NSOV 
05
NSOV 
01
NTV 
03
NTV 
01
NTV 
02
NSV 
12
NSV 
02
NSV 
01
NSV 
07
NSV 
09
NSV 
08
NSV 
10
NSV 
03
NSV 
06
NSV 
11
NSV 
04
NSV 
05
NPV 
01
NPV 
02
 
Figure 3. Arrangement of NAF subviews referring to [12]. 
 
Phase RE: Requirements engineering to survey, 
formulate, validate and manage requirements in 
every phase of the project. 
 
Phase A: The architecture vision validates capability 
requirements, organizational principles and business 
goals by developing an operational basic concept 
which defines the scope and relevant stakeholders of 
the 
architecture 
as 
well 
as 
key 
business 
requirements. 
 
Phase B: The business or operational architecture 
describes organizational, process and information 
aspects of the operational environment. This phase 
derives an operational and organizational structure 
by developing distributions of responsibilities and an 
information exchange process between authorities. 
 
Phase C: The development and implementation of 
data and application domains are part of the 
information systems architecture. The objective is to 
describe the support of business processes by 
information technology. 
 
Phase D: The technology architecture describes 
systems, system interfaces and dependencies for 
communication and interoperability aspects to 
support operational processes. 
 
Phase E: This phase evaluates and selects 
implementation 
options, 
identified 
in 
the 
development of the architectures developed in ADM 
before, by assessing dependencies, costs and benefits 
to generate a migration strategy and detailed 
implementation plans. 
 
Phase F: The objective of the migration planning is 
to prioritize projects to 
finalize 
a detailed 
implementation and migration plan. 
 
Phase G: The implementation governance formulates 
recommendations for realizing the implementation 
plan and manages the governance of the overall 
implementation and deployment process in the terms 
of capability improvement. 
 
Phase H: The phase of architecture change 
management establishes procedures for managing 
changes to initiate the development of a new 
architecture, thus a new iteration of the ADM 
D. Views and subviews of the NAFv3.1 
The NAF in Version 3.1 [7] proposes an elaborate 
content framework to model architecture products. It 
provides a range of convention and modeling rules on how to 
describe and document an architecture model. Therefore, the 
NAF defines “views” to consider an enterprise from an 
individual perspective. Dividing an individual view into a set 
of “subviews” supports the development of single 
architecture products, which can be analyzed easily by 
respective stakeholders. The views of the NAFv3.1 are: 
 
NATO 
All 
View 
(NAV): 
NAV 
describes 
overarching aspects and provides information, which 
are pertinent to the entire architecture including 
scope and context. 
 
NATO Capability View (NCV): The enterprises 
vision, goals and capabilities are modelled within the 
NCV by building e.g. taxonomies and dependency 
descriptions. 
 
NATO Operational View (NOV): The NOV 
conducts descriptions of derived tasks, activities, 
operational elements as well as information 
exchange processes that are necessary to fulfil 
missions. 
79
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

TABLE I. NAF SUBVIEWS ASSIGNED TO TOGAF PHASES (BASED ON 
[15]).  
   
A B 
C D 
E 
F 
G H 
NAV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
NCV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
4 
 
 
 
 
 
 
 
 
5 
 
 
 
 
 
 
 
 
6 
 
 
 
 
 
 
 
 
NOV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
4 
 
 
 
 
 
 
 
 
5 
 
 
 
 
 
 
 
 
6 
 
 
 
 
 
 
 
 
7 
 
 
 
 
 
 
 
 
NSOV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
4 
 
 
 
 
 
 
 
 
5 
 
 
 
 
 
 
 
 
6 
 
 
 
 
 
 
 
 
NSV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
4 
 
 
 
 
 
 
 
 
5 
 
 
 
 
 
 
 
 
6 
 
 
 
 
 
 
 
 
7 
 
 
 
 
 
 
 
 
8 
 
 
 
 
 
 
 
 
9 
 
 
 
 
 
 
 
 
10 
 
 
 
 
 
 
 
 
11 
 
 
 
 
 
 
 
 
12 
 
 
 
 
 
 
 
 
NTV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
3 
 
 
 
 
 
 
 
 
NPV 
1 
 
 
 
 
 
 
 
 
2 
 
 
 
 
 
 
 
 
 
 
NATO 
Service-Oriented 
View 
(NSOV): 
The 
concept of SOA is fundamental to the NATO 
Network Enabled Capability (NNEC). The NSOV 
contains a description of services, which the provider 
provides as a useful result to a consumer to directly 
support the operational domain. 
 
NATO Systems View (NSV): The NSV contains 
subviews to describe the structure, interfaces and 
interconnections as well as functionalities of 
technical resources. Systems can provide services 
and support operational activities. 
 
NATO Technical View (NTV): Technical Standards, 
implementations and conventions are parts of the 
NTV. 
 
NATO Programme View (NPV): Products of NPV 
describe 
the 
relationships 
between 
capability 
requirements and implemented programs and 
projects. 
The subviews are presented in a detailed manner in 
chapter 4 of the NAF [7]. In Figure 3, the subviews are 
arranged to show their dependencies within the structure of 
the NAF. On the left hand side (in green and blue), we have 
the perspective of the consumer, who performs operational 
activities and thereby consumes services to realize enterprise 
capabilities. On the right (yellow and grey), there are 
descriptions of technical systems providing functionalities to 
support operational processes. Both sides are connected by 
service-oriented views (purple) decoupling operational views 
from system views. 
IV. 
MODELING NCOS 
NCOs 
are, 
e.g., 
military 
evacuation 
operations. 
Therefore, forces of all military domains, especially Special 
Forces and navy supported by air force units deployed for 
this operation have to cooperate in a quick-response manner, 
which requires a high level of interoperability. 
But, how can we define and examine interoperability to 
validate and develop respective capabilities and technology? 
In Tolk [16], Turnitsa [17] and Tolk et al. [18], a conceptual 
model 
abstracting 
and 
simplifying 
the 
terms 
of 
interoperability on various levels is presented, developed and 
applied. The Levels of Conceptual Interoperability Model 
(LCIM) introduces different layers of interoperation and 
describes their relation to the ideas of integratability, 
interoperability and composability [18]. The seven levels are 
defined as follows: 
 
Level 0: No interoperability, i.e., stand-alone 
systems. 
 
Level 1: Technical interoperability, i.e., established 
communication infrastructure allowing the systems 
to exchange data. 
 
Level 2: Syntactic interoperability, i.e., application 
and definition of a common data format to exchange 
information. 
 
Level 3: Semantic interoperability, i.e., unambiguous 
definition of the content of exchanged information. 
 
Level 
4: 
Pragmatic 
interoperability, 
i.e., 
unambiguous definition of context, methods and 
procedures to use exchanged information. 
 
Level 5:  Dynamic interoperability, i.e., changing 
system states and their effects – including the effects 
of information exchanges – on operation and data 
interchange are unambiguously defined. 
 
Level 6: Conceptual Interoperability, i.e., alignment 
of assumptions and constraints of the meaningful 
abstraction of reality [18]. 
NAFs SOA, as presented in Section III.D, has a high 
degree of support for interoperability, because of focusing on 
standardization and supporting the need for autonomy of 
systems [13]. Thus, the NNEC Feasibility Study pointed the 
SOA as a key to meet interoperability requirements, because 
80
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

class EAP-Overview
NATO Technical View
NATO Systems View
NATO Service Oriented View
NATO Operational View
NATO Capability View
«EnterprisePhase»
Enterprise Phase
«EnterpriseGoal»
Enterprise Goal
«EnterpriseVision»
Enterprise Vision
«Capability»
aCapability
«Environment»
anEnvironment
«OperationalActivity»
anOperationalActivity
«OperationalActivi...
an ActivityAction: 
anOperationalActivity
«NodeType»
aNodeType
«LocationT...
aLocation
«Informatio...
anInfoElem
NOV-2
«ServiceInterface»
aServiceInterface
«Service»
aService
«ServiceAttribute»
+ 
aServiceAttribute: int
«ServiceInterface»
aServiceInterface
«OrganisationType»
anOrganization
«Post»
aPost: aPostType
«PostType»
aPostType
«RoleType»
aRoleType
«Role»
aRole: aRoleType
«Competen...
aCompetence
«LogicalArchitecture»
aLogicalArchitecture
«Node»
aNode: 
aNodeType
«CapabilityConfiguration»
aCapConf
«SystemPort»
aSystemPort
«System»
aSystem: anArtefact
«SystemPort»
aSystemPort
«HostedSoftware»
aHostedSoftware: aSoftware
«Artefact»
anArtefact
«Software»
aSoftware
«Function»
aFunction
«FunctionAction»
aFunctionAction
«DataEleme...
aDataElement
«ServiceInterfaceDefinition»
aServiceInterfaceDefinition
«ServiceInterfaceOperation»
+ 
ServiceDefinitionElement(): int
«ServiceFunction»
aServiceFunction
«EntityNAF»
aDataEntity
«Standard»
aStandard
«Protocol»
aProtocol
«ProtocolStack»
aProtocolStack
«DataElement»
aDataElement
«ADMBw:
:
ServiceNeedline»
NSOV-6
NOV-5
«ServiceSupportsActivity»
«CapabilityComposition»
NCV-2
NOV-2
«RequiredNodeLocation»
NSOV-2
«ConformsTo»
«CapabilitySpecialisation»
NCV-2
RepresentedBy
NOV-2
«NodeHasBehaviour»
«Commands»
NOV-4
NSOV-2
«ImplementsProtocol»
«OperationalActivityFlow»
NOV-5
NOV-4
«ProcessOwner»
DefinedByEntity
NSV-12
«ServiceProvision»
NSV-5
«ActivityToFunctionMapping»
NSOV-3
«ServiceAimsToAchieve»
NSOV-2
«FunctionProvision»
NSV-5
«ServiceFunctionToFunctionMapping»
«InformationExchange»
«InformationElement»
anInfoElem
«SystemPortConnector»
NSV-2b
NCV-6
«ActivityMapsToCapability»
NOV-2
«CapabilityForNode»
NSV-1
«Controls»
«ServiceGeneralisation»
NSOV-1
«ResourceInteraction»
NSV-1
«FunctionProvision»
NSV-1
«ConformsTo»
NOV-2
«Provides»
NOV-4
«ActualCompetence»
NCV-2
«EnvironmentalConditions»
NSV-2a
«ImplementsProtocol»
NOV-2
«Consumes»
NOV-4
«CompetenceForRole»
NSV-1
«NodeRealisation»
«FunctionProvision»
 
Figure 4.  Selection of important NAFv3.1 elements and connections. 
 
of its flexible, modular approach for implementing system 
functional requirements in the form of accessible and 
utilizable services [14]. 
To model capabilities, operations and/or missions for the 
purposes of examining their feasibility within the meaning of 
Network Centric Warfare on every single level of 
interoperability, we utilize the presented architectural 
methodology and content-related conventions from Section 
III. Referring to Jørgensen et al. [15] “TOGAF proposes an 
elaborate methodology and a simple content framework, 
while NAF contains a simple methodology and an elaborate 
content 
framework. 
The 
two 
approaches 
are 
thus 
complementary.” Combining advantages of both, NAF and 
TOGAF, we can connect the content-related guidelines of 
NAF subviews to the compelling development methodology 
of TOGAF phases. This mapping is visualized in Table I. By 
using this mapping, we can easily derive guidance for 
modeling enterprise architecture for NCO by focusing on 
services. In this table, the initial version of a subview is 
colored in dark blue. Further developments and/or changes 
of a subview are expressed in light blue. 
We applied Unified Modeling Language (UML) [21] as 
an object oriented, graphical modelling language by using 
SPARX Enterprise Architect (SPARX EA) to model single 
NAF subviews in the prescribed order given by TOGAF. 
The intent is to examine and analyze every layer of 
interoperability by modeling processes, systems and services 
to make a point about the feasibility of respective NCOs. 
Therefore, existing technical, operational or capability gaps 
requiring further development have to be spotted and 
recommendations have to be made.  
To express the relationship between architecture views 
according to NAFv3.1 at application level in SPARX EA 
Figure 4 depicts an UML class diagram showing single 
architectural elements and dependencies among themselves. 
 Starting with establishing a NAV-1 to present the actual 
problem area and the scope of the architecture, the 
capabilities, which have to be examined, are described in the 
form of taxonomies derived from the actual architecture 
vision in NCV-1 and NCV-2. Additionally, NOV-1 presents 
the operational concept on high-level. Thus, conceptual 
interoperability can be investigated.   
In phase B, it is necessary to derive OperationalActivities 
from Capabilities (NCV-6) and model the placed order in the 
context of the operation and derived tasks thereof within the 
“Operational Activity Model” of NOV-05. Process models 
support the view on tasks and processes to describe real 
events and activities of the operation. To obtain clarity 
within the operational model at different levels of 
abstraction, it is recommended to build an activity hierarchy. 
Thus, the model can provide a better overview and activities 
can be structured easily. Operational constraints, states and 
timing descriptions are arranged in NOV-6 diagrams to 
support the modeling of dynamic interoperability.  
Allocation of responsibilities can be modeled in an 
“Operational Node Relationship Description” (NOV-2) by 
mapping 
identified 
OperationalActivities 
to 
involved 
authorities, so called operational nodes. Furthermore, NOV-2 
81
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

describes the information exchange between authorities to 
model their relationship, dependencies and the requirements 
according 
to 
operational 
and 
therefore, 
pragmatic 
interoperability. Using SPARX EA one can easily derive an 
“Operational Information Exchange Matrix” (NOV-3) from 
NOV-2 models resulting in an easy to read overview of 
information exchange elements, which can be analyzed 
significantly better. The actual or intended organizational 
structure among identified key players including command 
and control (C2), hierarchical and functional relationships, 
e.g., required competences, can be modeled in NOV-4. 
Information content, provision and consumption aspects in 
NCO have to be explicitly modeled to describe and analyze 
the level of semantic interoperability. NOV-7 represents an 
information model that gives an answer to “what we want to 
know” and “what we want to communicate” [7].  
After modeling processes as part of the business 
architecture, we detected two approaches on modeling 
services and systems. First we stick to the temporal progress 
preset by TOGAF identifying and describing required 
Services in the form of taxonomies (NSOV-1) and “Service 
Definitions” (NSOV-2). Additionally, the orchestration 
(NSOV-4) and decomposition (NSOV-6) support the 
classification, 
structuring 
and 
dynamic 
behavior 
of 
respective services promoting interoperability in various 
domains and on different layers. In NSOV-3, Services can 
directly be mapped to supported Capabilities to show their 
importance within an operation. Further on, one can map 
these services, supporting OperationalActivities in NOV-5 or 
model service provision or consumption, by using already 
existing Nodes in NOV-2. As a precondition for this 
approach, the modeler has to have sound knowledge of 
NATOs C3 (Consultation, Command and Control) taxonomy 
perspective [19] to identify required services. To proceed to 
information system architecture (phase C) it is necessary to 
define ServiceFunctions performed by Services in NSOV-5. 
ServiceFunctions are implemented by system functions 
which can be modeled in NSV-5. However, system functions 
can be described in subview NSV-4 to impose requirements 
on applicable systems. Thus, this approach might be adapted 
to design technological requirements for new technological 
developments to realize interoperability within NCO.  
Another approach – departing from the TOGAF 
methodology presented in Table I – might be suitable to 
examine the application of already featured systems to 
realize the required level of interoperability in NCO. In this 
case, existing systems have to be modeled using a system 
profile, containing the internal structure or system 
composition 
(NSV-1), 
the 
system 
interfaces 
and 
communications description (NSV-2) and the already 
mentioned systems functionality (NSV-4). Additional 
constraints regarding the systems quality are described in 
NSV-7. The systems service provision can then be modeled 
by applying NSV-12 to analyze what services are covered by 
the application of actual or intended systems. Using system 
function to operational activity mapping (NSV-5) we can 
also map the direct realization of OperationalActivities by 
respective system functions and condense system functions 
to implemented service functions. 
Within the technical Architecture, it is possible to 
examine the feasibility of NCO focusing on the technical and 
syntactic level of interoperability. For this purpose required 
resource interactions can be described as a matrix in NSV-3. 
Furthermore, the data exchange between systems is part of 
NSV-6. The systems data model (NSV-11) follows the 
information modeled in NOV-7 (Information Model). Thus, 
information can be used as an input for modeling required 
logical and physical data models gaining insights of syntactic 
interoperability. In the end, technical requirements according 
technical interoperability are part of the NTV in phase D and 
E of the ADM. 
While compiling the architecture, the development is 
documented 
in 
NAV-1; 
thus, 
conventions 
and 
recommendations can directly be noted. Additionally, a 
glossary can be implemented in NAV-2 to put the 
architecture across. 
V. 
ANALYZING MODELS OF NCOS 
The model developed in Section IV contains various 
architecture elements, which are able to be analyzed 
subview-by-subview or within the architectural context of 
elements (compare Figure 4). Both variants are capable of 
examining interoperable processes and technologies of a 
certain organization to estimate the feasibility of NCOs. 
The 
product-by-product 
(or 
subview-by-subview) 
analysis to examine the different layers of interoperability 
within the scope of the LCIM is already part of Section IV. 
The aim of this section is to show several methods to analyze 
the architecture model as a whole to obtain insights about 
potentialities, risks, problems and development needs. 
SPARX EA’s option “Traceability” offers an important 
tool for the cognition of coherences and navigation within 
the model by revealing all relations with reference to a 
special element. Thus, this tool significantly facilitates the 
analysis of the model. 
A selection of methods for analyzing an Enterprise 
Architecture is introduced as followed: 
 
Bottom-up analysis: Starting from the bottom of a 
tree of elements (ordinarily technical standards 
defined within the NTV) one can trace the path till 
the overarching enterprise vision or capabilities. The 
aim is to obtain knowledge about the importance or 
redundancy of bottom elements. Thus, you can 
support decisions about discarding or developing 
respective technologies or standards.   
 
Top-down analysis: In contrast to the bottom-up 
approach 
the 
top-down 
analysis 
starts 
the 
examination beginning at the top of the tree of 
elements 
(ordinarily 
capability-based 
elements 
within the NCV) and ending at the bottom. The aim 
is to show effects of cancelling capabilities, which 
might be obsolete or no longer required, on 
processes, services and technical systems. Thus, 
evaluations about savings on the cost of redundant 
systems and technologies can be done.    
 
Risk analysis: The risk analysis is an important 
method within in the field of quality management to 
82
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

systematically identify and assess risks inside 
processes, organizations or systems. The aim is to 
find bottlenecks or precarious systems and to 
validate whose outage. Thus, one can estimate which 
processes and/or capabilities are influenced by the 
failure of respective elements and how large a 
potential risk might be. Furthermore, requirements 
for the development of new technologies or for 
redundant systems to minimize respective risks can 
be imposed. 
 
Hotspots analysis: Comparable with the risk 
analysis, the hotspots analysis is able to identify and 
assess elements with major impact on the whole 
model and thus on the whole enterprise. Hotspots are 
e.g. single systems, whose functions are accessed by 
many other systems, or e.g. pervasive technologies. 
The result of identified hotspots might be the 
creation or development of redundant systems to 
improve the distribution of respective system 
functionalities and the imparting of knowledge about 
these hotspots. 
 
Migration analysis: Especially in SOA, the 
migration of services and service functions is very 
important to apply changes in architectures. The 
migration analysis supports System Modernization 
through the identification of dependencies between 
elements and the reuse of legacy systems [20]. Thus, 
expenses on the development of technologies can be 
minimized by providing identified service functions 
through the usage of existing systems. Migration 
analysis requires an actual and a target architecture.  
 
Capability gap analysis: The examination of the 
feasibility of NCOs needs to focus on the covering 
of required capabilities. The capability gap analysis 
supports the identification of missing links in the 
realization of respective capabilities. Thus, required 
processes, services and/or systems can be recognized 
in detail and advancements of new technologies can 
be brought into better alignment to cover needed 
functions and capabilities. 
 
Service composition analysis: Modularity is one 
major advantage of SOA. The development of new 
services can be expedited and improved by 
analyzing existing and realized services and service 
functions. Thus, the composition of service functions 
or parts of other services can generate adjusted 
services that are automatically related to respective 
processes and realizing systems. 
VI. 
LESSONS LEARNED FROM ARCHITECTURAL MODELING 
There are various problems that can occur in the course 
of applying enterprise architecture to a particular problem. 
This section presents some best practice hints and lessons 
learned, obtained while modeling enterprise architectures to 
minimize problems in projecting, targeting and performing. 
Especially for modeling NCOs it is recommended to 
apply an architecture model on performed military and/or 
tabletop exercises. Architects should also take part in this 
exercise as observers to get a better comprehension of the 
issue and the opportunity to undertake interviews with 
Subject Matter Experts (SME). Thus, perceptions and 
recommendations can directly be included into the model. 
The principal investigator of an architectural project is 
responsible to impose a distinct problem whose resolving 
shall be supported by architecture products. The issue and 
the focus have to be precisely and unambiguously defined 
[7]. Thus, no universal models shall be commissioned. The 
level of detail with respect to time horizon has to be adjusted 
too. It is also necessary to provide required and common 
resources and continuous support by all stakeholders and 
experts. Reliable architecture modeling should be a result of 
teamwork requiring a permanent communication between all 
involved parties, e.g. within workshops. 
Methodology specialists are responsible for quality 
assurance of architecture products. Thus, a constant and 
intensive support and a quality assurance plan have to be 
established [7]. Quality requirements for architecture views 
are e.g. comprehensibility, comparability, consistency and 
reusability. 
To 
ensure 
content-related 
and 
formal 
requirements it is recommended to adjust the model to the 
common architecture landscape. This can be realized by 
establishing and providing an architecture repository or 
database as well as documenting common architecture 
conventions for model diagrams and matrices without 
limiting specific requirements. Conventions should bindingly 
regulate as much as necessary, but as little as possible. 
Additionally, architecture repositories should be configured 
and administered to ensure its quality. Therefore, a central 
administration has to be responsible for importing, exporting 
and deleting architecture elements, providing products and 
applying user and roles concepts to manage access 
privileges. 
According to the iterative character of TOGAFs ADM, 
the implementation and usage of architecture models have to 
be carefully planned. Therefore, it is important to familiarize 
stakeholders that are not acquainted with the method with 
architecture products by visually editing respective results. 
Thus, the realization of outcomes can be performed quickly 
and correctly. Furthermore, architecture models have to be 
constantly maintained by the architect to populate potential 
changes and to keep the model up to date. 
VII. CONCLUSION AND FUTURE WORK 
The feasibility of operations in terms of Network Centric 
Warfare is dependent on the level of interoperability of the 
realizing military forces. Today, military missions are 
frequently 
performed 
in 
a 
joint 
and 
multinational 
environment, thus, military forces have to adjust their 
capabilities to the characteristics of NCO. 
The LCIM presents a suitable model of the organizations 
actual and desired interoperability by introducing various 
layers. The methodology of ADM according to TOGAF 
combined with the content-related conventions and rules 
defined in NAFv3.1 are manifested as convenient methods to 
examine these layers by focusing on different views and 
therefore, perspectives on the organization. 
83
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

In this paper, we presented how to use the introduced 
architectural methods to obtain insights of the organization 
interoperable capabilities. Layers of interoperability of the 
LCIM are directly connected to views and subviews of the 
NAFv3.1 to support the estimation of the feasibility of 
respective operations. Additionally, analyzing methods have 
been introduced to assess the actual state relating to the 
desired condition. It was shown that these methods can be 
used to focus on special risks and problems as well as to 
minimize 
technical and financial effort within the 
transformation of organization and military forces to develop 
the capabilities of NCO. 
Eventually, risks and problems within the process of 
architectural modeling have been described and lessons 
learned together with best practice hints were suggested. 
These recommendations might help architects and principal 
investigators to minimize issues while projecting and 
modeling enterprise architectures. 
REFERENCES 
[1] D. Lambert, A. Dale, and J. B. Scholz, “A dialectic for 
network centric warfare”. Defence Science and Technology 
Organisation Edinburgh (Australia) Command and Control 
Div., 2005. 
[2] D. S. Alberts, J. J. Garstka, and F. P. Stein, „Network Centric 
Warfare: 
Developing 
and 
Leveraging 
Information 
Superiority“, CCRP Publication Series, 2nd Edition, 1999. 
[3] T. de Maizière, „Konzeption der Bundeswehr“, Ministry of 
Defence, Berlin, July 2013. 
[4] S. Leuchter and R. Schönbein, „Die Verwendung von 
Architectural Frameworks als Vorgehensmodell für die 
System-of-System-Entwicklung“, In: C. Hochberger, R. 
Liskowsky (Hrsg), INFORMATIK 2006. Informatik für 
Menschen. Beiträge der 36. Jahrestagung der  Gesellschaft für 
Informatik e.V. (GI), Vol. 1, pp. 669-675, Bonn, October 
2006. 
[5] The Federation of Enterprise Architecture Professional 
Organization, “A Common Perspective on Enterprise 
Architecture“, 
2013. 
[Online]. 
Available 
from: 
http://feapo.org/wp-content/uploads/2013/11/Common-
Perspectives-on-Enterprise-Architecture-v15.pdf. 
[retrieved: 
May 2016]. 
[6] ISO/IEC/IEEE 
42010:2011 
„Systems 
and 
software 
engineering - Architecture description“, ISO/IEC, 2011. 
[7] NATO C3 Board, “NATO Architecture Framework“, Version 
3, 2007. 
[8] L. Urbaczewski and S. Mrdalj, “A Comparison of Enterprise 
Architecture Frameworks”, Issues in Information Systems, 
Volume VII, No. 2, pp. 18-23, 2006. 
[9] M. M. Jamjoom, A. S. Alghamdi, and I. Ahmad, “Service 
Oriented Architecture Support in Various Architecture 
Frameworks: A Brief Review”, Proceedings of the World 
Congress on Engineering and Computer Science 2012  Vol II, 
pp. 1338-1343, WCECS 2012, October 24-26, San Francisco, 
USA, 2012 
[10] V. Haren, “TOGAF Version 9.1”, 10th Edition, Van Haren 
Publishing, 2011, ISBN 9087536798. 
[11] S. Marley, “Architectural Framework” Applied Sciences 
Program, Geosciences Interoperability Office, Stephen 
Marley NASA /SCI, 2003. 
[12] BMT Hi-Q Sigma 2010 TOGAF to MODAF Mapping. BMT 
Hi-Q Sigma, 9th December 2010. [Online]. Available from: 
http://www.bmt-
hqs.com/media/3991716/togaf_to_modaf_mapping.pdf. 
[retrieved: May 2016]. 
[13] T. H. Bloebaum, J. E. Hannay, O.-E. Hedenstad, S. Haavik, 
and F. Lillevold, “Architecture for the Norwegian defence 
information infrastructure (INI) – remarks on the C3 
Classification 
Taxonomy”, 
FFI-rapport 
2013/01729, 
Norwegian Defence Research Establishment, 2013, ISBN 
978-82-464-2294-7. 
[14] M. Booth et al., “NATO Network Enabled Capability 
Feasibility Study”, VII version 2.0. Technical report, NC3A, 
2005. 
[15] H. D. Jørgensen, T. Liland, and S. Skogvold, “Aligning 
TOGAF and NAF—experiences from the Norwegian Armed 
Forces”, In P. Johannesson, J. Krogstie, and A. Opdahl, 
editors, The Practice of Enterprise Modeling, volume 92 of 
Lecture Notes in Business Information Processing, pp. 131–
146. Springer, 2011. 
[16] A. Tolk, “The Levels of Conceptual Interoperability Model”, 
2003 Fall Simulation Interoperability Workshop, Orlando, 
Florida, September 2003. 
[17] C. D. Turnitsa, “Extending the Levels of Conceptual 
Interoperability 
Model”, 
Proceedings 
IEEE 
Summer 
Computer Simulation Conference, IEEE CS Press, 2005. 
[18] A. Tolk, S. Y. Diallo, and C. D. Turnitsa, “Applying the 
Levels of Conceptual Interoperability Model in Support of 
Integratability, Interoperability, and Composability for 
System-of-Systems Engineering”, In Journal of Systems, 
Cybernetics and Informatics, Volume 5, Number 5, pp. 65-74, 
2007. 
[19] Command, Control, Deployability and Sustainability (C2DS) 
Division, “C3 Taxonomy Perspective”, Allied Command 
Transformation (ACT), January 2015. 
[20] L. O’Brien, D. Smith, and G. Lewis, “Supporting Migration 
to Services using Software Architecture Reconstruction”, 
Proceedings of the 13th IEEE International Workshop on 
Software Technology and Engineering Practice (STEP'05), 
pp. 81-91, 2005. 
[21] J. Rumbaugh, I. Jacobson, and G. Booch, “Unified Modeling 
Language Reference Manual”, 2nd Edition, Pearson Higher 
Education, 2004, ISBN 0321245628.  
 
 
 
 
 
 
 
84
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-501-2
SIMUL 2016 : The Eighth International Conference on Advances in System Simulation

