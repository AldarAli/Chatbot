A Proposal Metaprocesses as Software Assets in the Telehealth Domain 
 
 
Javier Fernandez 
University of Granada  
Department Languages and Informatics Systems 
Granada, Spain 
jfernandez_9@ugr.es 
Freddy Duitama 
 University of Antioquia 
Department Systems Engineering  
Medellin, Colombia 
freddy.duitama@udea.edu.co 
Maria Hurtado 
University of Granada 
Department Languages and Informatics Systems  
Granada, Spain 
mhurtado@ugr.es 
Jose Garrido 
Department Languages and Informatics Systems  
University of Granada 
Granada, Spain 
jgarrido@ugr.es
 
 
Abstractâ€” The main purpose of this research is to develop and 
implement a metamodel process (Metaprocess) that serves as a 
repository to be reused in TeleHealth domain specific 
processes, being therefore identified as a useful tool for the 
development of agile and efficient applications. The work will 
be well justified as it will allow the efficiency validation of 
metaprocesses use and its reuse in the early stages of software 
application development in the field of Telemedicine. The 
intent is to provide a response to the research question 
regarding how to enhance reusability during the early stages of 
software development through the use of Meta-processes as 
software assets, in the particular domain of   Tele-Health. This 
question stems from evidence that even through the great 
boom of business process system specifications and business 
process services, these systems have a great number of 
problems such as the lack of formal standards and appropriate 
specification metamodels in the business processes logic to 
meet their rules and specifics domains. Likewise, the existence 
of multiple work schemes and Metaprocesses representations 
do not consider the planned reuse of software assets in the 
early stages of development and formalization schemes that 
enable its validation for different domains. 
Keywords- Metaprocess; Software Assets; Telehealth. 
I. 
 INTRODUCTION  
The utilization of meta-processes as software assets that can 
be used in early stages of software development according 
to [6] [9] and [26], requires methods and models of 
formalization and validation that take into account the 
supported development process, as the intent is to develop 
them into frames of reference that facilitate the agile 
construction of software through the use of metamodels 
without departing from the knowledge of domain specific 
rules that need to be systematically arranged. 
       In recent years, meta-process, software assets and reuse 
have become increasingly popular as an inexpensive and 
promising means for software development methods. 
However, without creating a new set of issues and trade-
offs. The performance and resource management of 
software development are becoming a very crucial phase for 
future generation of applications. 
      Now, in the framework for the development of this work, 
progress has been made on the bibliographical review and 
comparative analysis on the use of Metaprocesses as 
software assets, resulting in the development of a first article 
on thematic literature review. Lastly, progress has been made 
in the Metaprocesses conceptual review and software assets, 
as well as in the knowledge of the chosen Telehealth domain, 
particularly information regarding the study of protocols and 
guidelines for cardiovascular risk programs. 
First, Section 2 describes the conceptual background 
about 
business 
process, 
software 
assets, 
business 
metaprocess, business process modeling and process models 
automation. Section 3 explains the background research 
about principal topics in the work and Section 4 presents our 
work in progress with some results so far. 
II. 
CONCEPTUAL BACKGROUND 
In this section, we provide the relevant definitions for the 
state of the art research in the context of business processes 
and metaprocesses as software assets and provide a better 
understanding of the research problem. 
A. Business Processes 
As outlined in [1], [2] [3] [4] and [5], a business process can 
be defined as an organizational entity that exists depending 
on the occurrence of events to accomplish a specific purpose, 
it is governed by rules that allow the control and monitoring 
of the activities that shape it, the latter are assigned resources 
and roles to help meet the corporate objective for which they 
are defined. 
72
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

B. Software Assets 
In [6] [7] [8], software assets are software components that 
meet the following criteria: a) They are a collection of 
artifacts to provide a solution to a problem b) They may be 
used and reused in different contexts c) They can be 
extended and customized in several places. 
C. Business Metaprocesses 
Rolland et al. [9] proposes that business metaprocesses can 
be defined as process models that serve as benchmarks to be 
instantiated in different domains. 
 
D. Business Process Modeling 
Basu et al. [10] show that the business processes are usually 
represented as flows or flow charts or activity charts, 
sometimes as nodes or rules for execution of tasks or 
activities. 
E. Process Models Automation 
In [11] [12], a business process system is designed as a 
generic type of software supported by design techniques 
focused on operational business processes management, it is 
known by the requirements that must support the process and 
it is represented by a graphical scheme. 
III. 
BACKGROUND RESEARCH 
Some research studies on business process modeling 
techniques show us the impact they have had on the 
construction of business metamodels as representational 
frameworks and business process building models for their 
use and implementation at the organizational level. 
     Along these lines, the approaches described in the work 
of [13], [14] [15] and [16] present to us how modeling 
techniques utilize a wide variety of symbolic and 
representational constructors to model integrated work 
systems at the conceptual level. While each technique uses a 
unique method for proposing what it believes to be the 
essential elements of an integrated work system, many of 
the concepts used in these techniques are very common: 
goals, roles, actors (or agents), activities (process tasks), 
interactions 
(or 
conversations), 
workflow, 
resources, 
information and resource interdepencies are primarily based 
on the concept of interaction or exchange. However, these 
common elements give us the fundamental components of 
the proposal and construction of Metaprocesses as 
frameworks grounded in the use of business process models 
to instantiate in different domains. 
      Moreover, the techniques described in [17], [18] and 
[19] demonstrate that the proposed business process 
modeling, if indeed they propose common work schemes for 
business process modeling, exclusively of the platforms 
used and oriented to specific domains, they mostly lack 
from mechanisms of validation and transformation of 
models originating from the definition of business rules to 
the construction of domain-specific metamodels, that 
contribute to the construction of metaprocesses, which is 
also accompanied by the absence of formalisms to propose 
strategies and domain model validation to ensure 
consistency between the model and its domain without 
losing the level of reference to be achieved using 
metaprocesses. The proposals presented by [17], [18] and 
[19] focus specifically on the following aspects: [17] 
recognizes the importance of developing software based on 
software product lines, whose cornerstone should be the 
reutilization of previously developed components or 
software assets that can be instantiated for different 
domains, although the research conceptually structures the 
development framework and software evolution towards a 
more adaptive, reusable and agile process, it does not 
deliver a schematic framework that allow us to address the 
problem of reusability at the early stages and especially 
validation as the key to verify the quality of  the 
software. Meanwhile, [18], as it well indicates that a 
suitable scheme of work in our case could be (MDE) model-
driven engineering, focusing our attention primarily on the 
use and validation of models, combining the concepts of 
domain specific languages and models transformation 
engines to completely cover the life cycle of a software 
system, it does not go any further than the construction and 
transformation of application models independently of the 
platform used; therefore not addressing the issue of 
validation or the reuse in an appropriate scheme of quality 
assurance software during the early stages. Finally, [19] 
along with the above mentioned and including the proposal 
of [18] on the use of BPMN as a standard notation for 
modeling construction, it ends up proposing the use of 
design patterns through language definition of software 
architectures or ADLs mixed with the use of attribute based 
architecture styles (ABAS) and ISO quality schemes to 
ensure software quality of the end product, it primarily 
focuses in the final stages of construction and ignores the 
issues of software evolution and quality assurance from the 
early stages, it also lacks clear verification, validation and 
reuse mechanisms that would allow the proposed patterns to 
be software construction metaprocesses. 
      In addition to the above mentioned and reviewing the 
contributions of [20], [21] [22] [23], [24] and [25] we see 
how business process modeling proposals for specific 
domains such as Metaprocesses, mostly lack from clear 
validation and formalization mechanisms independently 
from the use of standards and tools for the representation of 
multiple domains, leaving aside the principle of models 
reusability and expression thereof. 
     Finkelstein et al. [26] show some methodologies of 
software development focused on processes as: EPOS: 
Expert System for Program and System Development [27], 
SOCCA: Specifications of Coordinated and Cooperative 
Activities [28], MERLIN: Supporting Cooperation in 
Software 
Development 
Through 
a 
Knowledge-Based 
Environment [29], OIKOS: Constructing Process-Centred 
SDEs [30], ALF: A Framework for Building Process â€“ 
Centred Software Engineering Environments [31], ADELE-
TEMPO: An Environment to Support Process Modeling and 
73
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

Enaction [32], SPADE: An Environment for Software 
Process Analysis, Design, and Enactment [33], PEACE: 
Goal â€“Oriented Logic â€“ Based Formalism for Process 
Modeling [34], E3: Object â€“ Oriented Software Process 
Model Design [35], PADM: Towards a Tool Process 
Modeling System [36]. Once the methodologies have been 
verified, it could be concluded that the EPOS, PWI and 
PEACE methodologies are the most well rounded 
methodologies, in terms of the factors such as software 
process modeling approach, process modeling languages, use 
of metaprocess and engines. And evaluating elements such 
as purpose, core component types, modeling core component 
types, languages, property modeling language, tools as 
support of software process models, analysis and design 
process modeling, customization, instantiation and evolution, 
support for rendering, internal representations and process 
engine architecture.  
       Given the above, it is necessary that the proposal to be 
developed on methodologies and processes as software 
assets gather the earlier results, in the sense that it must meet 
primarily but not exclusive to the most relevant parameters 
presented in the studied methodologies, meaning it should be 
focused on their implementation and interaction with 
computerized and human agents, considering the existing 
relations and entities, having fundamentally a formal and 
object-oriented 
component, 
being 
expressive 
and 
representative, easy to interpret and compiled, also allowing 
a syntactic definition of the models, presenting a method, 
allowing through its concepts and mechanisms pave the way 
to go from a generic model to a model adapted to a specific 
domain and presenting meta-activities that allow its 
instantiation, as well as being fundamentally deterministic, 
that it cannot be affected by the human agents intervention, 
preserving consistency and allows to easily identify 
inconsistencies, it also should allow the use of external tools 
to be integrated and keep the model objects consistency, 
likewise allow the internal representation of software process 
modeling and allow the use of several engines for process 
management. 
IV. 
RESEARCH 
The main purpose of this research is to present a strategy by 
which Meta-processes are developed into Software Assets in 
the Tele-Health domain. The intent is to provide a response 
to the research question regarding, How to enhance 
reusability during the early stages of software development 
through the use of Meta-processes as software assets in the 
particular domain of   Tele-Health? This question stems 
from evidence that even through the great boom of business 
process system specifications and business process services, 
these systems have a great number of problems such as the 
lack of formal standards and appropriate specification 
metamodels in the business processes logic to meet their 
rules and specifics domains. Likewise, the existence of 
multiple work schemes and Metaprocesses representations 
do not consider the planned reuse of software assets in the 
early stages of development and formalization schemes that 
enable its validation for different domains. 
       This research has a social impact in terms about: Health 
crisis-solutions for resource optimization, possible reduction 
of medical errors and ease at notational level. And scientific 
impact in: Reuse in early stages, metaprocess instantiation 
in different domains and oriented software development 
models. 
       This research has specific objectives as: Consider 
proposals for use of Metaprocess as assets and reuse 
software in early stages. Conceptualize on the use of 
Metaprocess methodologies as software assets and its reuse 
in early stages. Identify the components of telehealth 
processes for the construction of a Metaprocess. Define the 
Metaprocess in the context of model driven software 
development in the field of telehealth and Validate the 
applicability of the proposed Metaprocess in the reusability 
of the components in the specific domain of Telehealth. 
Now, in the framework of the proposed strategic solution 
for the development of this research, progress has been 
made on the bibliographical review and comparative 
analysis on the use of Metaprocesses as software assets, 
resulting in the development of a first article on thematic 
literature review.  Progress has been continuously made in 
the review of some aspects related to the Metaprocesses 
domain; therefore, presenting a first draft of conceptual 
scheme based on the metamodel of the proposed 
metaprocess.  
      Lastly, progress has been made in the Metaprocesses 
conceptual review and software assets, as well as in the 
knowledge of the chosen Telehealth domain, particularly 
information regarding the study of protocols and guidelines 
for cardiovascular risk programs.While there are existing 
medical protocols and guidelines for patient care, our 
research have allowed us to evidence the absence of 
standard protocols to triage patients with cardiovascular 
risk; therefore, the metaprocesses proposal along with its 
respective metamodels allow from its instantiation and 
personalization, according to the patients characteristics, 
adapt to the requirements and needs thus contributing to 
reduce medical errors that may occur in this first phase of 
telecare. 
ACKNOWLEDGMENT 
We thank ARTICA research of Colciencias, TICs Ministery 
and COOPEN research European Community and University 
of Granada. 
 
REFERENCES 
[1] Alfaro, J. Sistemas para la mediciÃ³n del rendimiento en la empresa, 
MÃ©xico, Limusa, 2008. 
[2] Hammer, M. and Champy, J. Reengineering the corporation: A 
manifesto for business revolution. New York, Mc Graw Hill, 1993.  
[3] Hammer, M. and Zisman, M. Design and implementation of office 
information systems. In Proceedings NYU Symposium on automated 
74
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

office systems, New York University graduate school of business 
administration, pp. 13-24, 1979.  
[4] Davenport, H. Reengineering a business process. Harvard business 
school note, 9-396-054, pp 1-16, USA, 1995.  
[5] Kettinger, J., Teng, C., and Guha, S. Bussines Process change: a 
study of methodologies, techniques and tools, MIS Quarterly, 21 (1), 
pp. 55-80, USA, 1997.  
[6] Larsen, G. Model-Driven development: Assets and reuse, USA, IBM 
Systems journal, 45(3), 2006.  
[7] GarcÃ­a, A., GarcÃ­a, V., SÃ¡nchez, R., and GarcÃ­a. J. Using software 
product lines to manage model families in model-driven engineering. 
In SAC 2007: Proceedings of the 2007 ACM Symposium on Applied 
Computing, track on Model Transformation, pp 1006_1011. ACM 
Press, Mar 2007.   
[8] Clements, P., and Northrop, L. Software Product Lines: Practices and 
Patterns. Addison Wesley, Aug 2001.  
[9] Rolland, C., and Prakash, N. On the Adequate Modeling of Business 
Process Families. UniversitÃ© Paris1 PanthÃ©on Sorbonne. Francia, 
2000.  
[10] Basu, A. and Blanning, R. Model integration using metagraphs. 
Iinformation systems research, USA, 5(3), 1994.  
[11] Carlsen, S. Conceptual modeling and composition of flexible 
workflow 
models. 
PhD 
Thesis, 
Information 
system 
group. 
Department of computer and information science,. Faculty of physic, 
informatics and mathematics, Norwegian university of science and 
technology, Trondheim, 1997.  
[12] Davenport, H., and Short, J. The New Industrial Engineering: 
Information Technology and Business Process Redesign, Sloan 
Management Review 31(4), pp. 11-27, 1990.  
[13] Winograd, T., and Flores, F. Understanding Computers and 
Cognition. A New foundation for Design. Norwood (NJ). 1986.  
[14] Ould, M.A. Business Processes: Modeling and Analysis for Re-
engineering and Improvement, Wiley, Chichester, 1995.  
[15] Weigand, H., Verharen E., and Dignum, F. Interoperable transactions 
in business models - a structured approach. University of Technology, 
Eindhoven, pp. 1-17, 1996. 
[16] Lind, M., and Goldkuhl, G. The Evolution of a Business Process 
Theory - the Case of a Multi-Grounded Theory, in Beekhuyzen J, von 
Hellens L, Guest K, Morley Understanding Computers and 
Cognition. A New foundation for Design. Norwood (NJ). 1986. 
[17] Montilva. J. Desarrollo de Software Basado en LÃ­neas de Productos 
de Software. IEEE Computer Society.  MÃ©rida. Venezuela, 2006. 
[18] Perez, J., Ruiz, F., and  Piattini, M.  Model Driven Engineering 
applicator a Business Process Management. Informe TÃ©cnico UCLM-
TSI-002.  Departamento de TecnologÃ­as y Sistemas de InformaciÃ³n. 
Universidad de Castilla-La Mancha. EspaÃ±a, 2007. 
[19] Bonillo, P. MetodologÃ­a para la Gerencia de los Procesos del Negocio 
Sustentada en el Uso de Patrones. Journal of Information Systems and 
Technology Management. Vol. 3, No. 2, 2006, pp. 143-162, 2006.  
[20] La Rosa, M. Linking Domain Models and Process Models for 
Reference Model Configuration. Lecture Notes in Computer Science. 
Vol. 4928, Springer, Berlin, pp. 417-430, 2008.  
[21] Mohan, S., Choil, E., and Dugki, M. Domain Specific Modeling of 
Business Processes and Entity Mapping using Generic Modeling 
Environment (GME). International Conference on Convergence and 
Hybrid Information Technology. Vol. 1, pp. 533-538, 2008.  
[22] Valdivia, M., and Santana, W. ValoraciÃ³n teÃ³rica sobre la gestiÃ³n de 
procesos de negocios, los sistemas de informaciÃ³n empresariales y los 
estÃ¡ndares 
para 
la 
modelaciÃ³n, 
UCI, 
Cuba. 
Available: 
http://semanatecnologica.fordes.co.cu/Evirtual/files/Marbys%20%20
William_VALORACION%20TEORICA%20SOBRE%20LOS%20SI
STEMAS%20DE%20INFORMACION%20EMPRESARIALES%20
%20LOS%20ESTANDARES%20PARA%20LA%20MODELACIO
N.doc. Consulted: 10-Dec-2010. 
[23] Zorzan F., and Riesco, D.  AutomatizaciÃ³n de procesos de desarrollo 
de software definidos con SPEM. Universidad de Rio Cuarto, 
Argentina. 
Available: 
http://www.ing.unp.edu.ar/wicc2007/trabajos/ISBD/070.pdf. 
Consulted: 10-Dec-2010.   
[24] CÃ¡novas C. Un caso de estudio para la adopciÃ³n de un BPMS. 
Universidad de Murcia. EspaÃ±a. Available: http://alarcos.inf-
cr.uclm.es/pnis/articulos/pnis-07-canovas-bpms.pdf. Consulted: 10-
Dec-2010. 
[25] Delgado, A. Desarrollo de Software con enfoque en el Negocio, 
Universidad de la Republica, Uruguay. Available: http://alarcos.inf-
cr.uclm.es/pnis/articulos/pnis-07-delgado-dsen.pdf. Consulted: 10-
Dec-2010. 
[26] Finkelstein, A., Kramer, J., and Nuseibeh, B. Software Process 
Modeling and Technology, Research Studies Press LTD. Londres. 
1994. 
[27] Conraid, R. Object â€“Oriented and Cooperative Process Modelling in 
EPOS.In PROMOTER Book. Ed. Bashar A. Nuseibeh, Imperial 
College, 1994. 
[28] Engels, G. Object â€“Oriented Specification of Coordinated 
Collaboration. In Advanced IT tools: IFIP World Conference on IT 
Tools, Springer. Canberra (Australia). pp. 2-6. September, 1996. 
[29] Junkermann, G. Merlin: Supporting Cooperation in Software 
Development through a Knowledge-based Environment. In Software 
Process Modelling Technology, A. Finkelstein, J. Kramer, y B. 
Nuseibeh, eds., ch. 5, pp. 103-130, Somerset, England: Research 
Studies Press, 1994. 
[30] Montangero, C., and Ambriola. V. OIKOS: Constructing Process-
Centered SDEs. In A. Finkelstein, J. Kramer, y B. Nuseibeh, editors, 
Software Process Modelling and Technology, pp 33 â€“ 70. John Wiley 
& Sons Inc, 1994. 
[31] Canals, G. ALF: A framework for building process-centred software 
engineering environments. In A. Finkelstein, J. Kramer, & B. 
Nuseibeh, editors, Software Process Modelling and Technology, pp 
153 â€“ 185. John Wiley & Sons Inc, 1994. 
[32] Belkhatir N. ADELE-TEMPO: An environment to support process 
modeling and enaction. In A. Finkelstein, J. Kramer, and B. 
Nuseibeh, editors, Software Process Modelling and Technology, pp 
187 â€“ 222. John Wiley & Sons Inc, 1994. 
[33] Bandinelli, S. SPADE: An Environment for Software Process 
Analysis, Design, and Enactment. In A. Finkelstein, J. Kramer, and B. 
Nuseibeh, editors, Software Process Modelling and Technology. John 
Wiley & Sons Inc, 1994. 
[34] Arbaoui, S., and Oquendo, F.  PEACE: goal-oriented logic-based 
formalism for process modelling. In A. Finkelstein, J. Kramer, and B. 
Nuseibeh, editors, Software Process Modelling and Technology. John 
Wiley & Sons Inc, 1994.  
[35] Baldi, M. E3: object-oriented software process model design. In A. 
Finkelstein, J. Kramer, and B. Nuseibeh, editors, Software Process 
Modelling and Technology. John Wiley & Sons Inc, 1994.  
[36] Bruynooghe, F. PADM: towards a total process modelling system. In 
A. Finkelstein, J. Kramer, and B. Nuseibeh, editors, Software Process 
Modelling and Technology. John Wiley & Sons Inc, 1994. 
 
75
ICCGI 2011 : The Sixth International Multi-Conference on Computing in the Global Information Technology
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-139-7

