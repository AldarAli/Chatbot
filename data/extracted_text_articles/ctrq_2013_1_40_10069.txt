Novel Rate-Jitter Control Algorithms
Modeling and Analysis
Madhu Babu Sikha, Manivasakan Rathinam
Department of Electrical Engineering,
Indian Institute of Technology Madras,
Chennai-600036, India.
email: ee10d028, rmani@ee.iitm.ac.in
Abstract—Time Division Multiplexing over Internet Protocol
(TDMoIP) is a transport technology that extends the voice, video
and data trafﬁc transparently over IP. When TDM trafﬁc is
packetized and injected into a packet switched network (PSN)
for transportation, packets arrive at the destination with different
inter-arrival times, due to variable delay (jitter) introduced by
PSN. This network induced jitter should be minimized, because
TDM devices operate at constant bit rate. Problem of jitter from
theoretical (competitive and statistical analysis) to more practical
view point had been well studied. In this paper, we have proposed
two on-line algorithms, algorithm-A and algorithm-B to minimize
rate-jitter. We have shown both analytically and by simulation
that the rate-jitter achieved by algorithm-A is strictly less than
the rate-jitter of an on-line algorithm proposed in a previous
work. The simulation results shows that algorithm-B also achieves
less rate-jitter than the reference algorithm. We also undertake
the statistical analysis of above algorithms, in particular, we
have modeled jitter buffer as an MMPP/eD/1/Bon queue by
making two assumptions on Markov modulated Poisson process
(MMPP) and steady state queue length distribution is calculated.
The correctness of the analytical results corresponding to our
proposed algorithms is veriﬁed with simulation results. From the
simulation results, it is also shown that the mean waiting time
of a packet in the buffer is less for both proposed algorithms
compared with the reference algorithm.
Keywords-TDMoIP; MMPP; rate-jitter; PSN; state depen-
dent service
I. INTRODUCTION
TDM [19] has been the most promising technology over the
decades to transmit voice. In the recent years, it is being used
to transport video and data also. In TDM, there is a dedicated
channel for each user. This channel is used only when the
user is making a call or when some data is transmitting.
Therefore, the bandwidth is not used effectively in TDM, since
the channel is idle most of the time and TDM services are also
expensive. On the other hand, PSN [20, 21] uses bandwidth
efﬁciently and is cheap. So, emulating the TDM trafﬁc over a
PSN is an effective solution.
TDMoIP is a mechanism to connect two TDM islands
through IP network. On the transmitter side, ﬁxed number of
TDM frames are packetized and sent across an IP network. So,
all the packets with TDM payload are of equal size. At the
receiver, the TDM payload is retrieved along with timing and
the TDM stream is regenerated before sending downstream.
If the TDM payload is sent over connectionless service in IP,
reordering is done. When these IP packets with TDM payload
traverse through the network, each packet may be routed in
different path, so, they encounter different nodes and variable
queueing delays. This queueing delay is the dominant part
in end-to-end delay of a packet. Finally, they arrive at the
receiver with variable inter-arrival times (IATs) as compared
with almost constant IAT at the transmitter. This variation in
the arrivals (packet delay variation) is called as jitter. At the
receiver, this jitter causes serious problems for audio playback.
To overcome jitter, all the received packets are stored in a
buffer called as jitter-buffer and associated an algorithm which
decides the dequeueing instant of next packet to be transmitted
(or service initiation time of each packet). The above algorithm
minimizes the output jitter, given the arrival times and/or the
number of packets in the queue. This process is called as
jitter regulation. The output of jitter regulator is fed to a link
scheduler to send the packets on to an outgoing link. Jitter
control is the sequence of the two operations: jitter regulation
and link scheduling. This work is related to jitter regulation.
There are two main ways to quantify jitter [1]: one measure,
called delay-jitter is the maximum difference between arrival
times of different packets and the ideal time difference in a
perfectly periodic sequence (where packets are spaced exactly
Xa time units apart, Xa is the IAT of the packet arrival
sequence). The second measure is rate-jitter; it bounds the
difference in packet delivery rates at various times. More
precisely, it measures the difference between the maximal and
minimal IATs. Rate-jitter is a useful measure for many real-
time applications such as voice and video broadcast over the
Internet.
The rest of the paper is organized as follows: In Section
II, we discuss the literature related to jitter control techniques
in PSNs and queueing models with state dependent service.
In Section III, we brieﬂy discuss about MMPP, the 4-state
MMPP model used in this work and two main assumptions
about MMPP which makes the analysis of queueing model
easier. Section IV discusses the proposed rate-jitter control
algorithms and the analytical bound of rate-jitter for algorithm-
A. In Section V, we discuss the MMPP/ eD/1/Bon queue
modeling and we give analytical expression for the steady state
queue length distribution. In Section VI, we give simulation
results and ﬁnally, we conclude by summarizing the results
and discussing future work in Section VII.
22
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

II. RELATED WORK
Mansour et al. [1] used competitive analysis in order to
compare an on-line algorithm with off-line algorithm. An off-
line algorithm schedules a packet by using future arrivals
also. Though off-line algorithm is impractical, it does deliver
departure/dequeueing sequence with minimum possible jitter
and forms the lower bound. Hence, off-line algorithm is used
to compare the performance of any on-line algorithm proposed
(for the same packet arrival sequence). An on-line algorithm
schedules a packet based on the packet arrival times on or
before the service initiation instant of the packet in question.
Mansour et al. proposed an on-line algorithm for rate-jitter
control (we call it as Mansour algorithm in rest of the paper),
which achieves a rate-jitter bounded by the rate-jitter of an
off-line algorithm. Mansour algorithm requires a buffer size
of Bon = 2B + h, where B is the buffer size of the off-
line algorithm and h is a space parameter. Mansour algorithm
tightly schedules the packets within the given bounds Imax
and Imin and achieves a rate-jitter not more than Imax−Imin,
where Imax and Imin are the maximum and minimum bounds
on the inter-departure times (IDTs) of the off-line algorithm,
respectively. ElBatt et al. [2] proposed a trafﬁc recovery
mechanism to control the jitter. A detailed survey of rate-
control algorithms can be found in [3]. Hay et al. [4] extended
[1] to multiple streams and derived tight lower bounds for jitter
regulation, both in off-line and on-line cases. An analysis of
delay jitter control algorithms can be found in [5].
A new queueing model G/ eD/1/K is proposed in [6] to
analyze the performance of the proposed adaptive timing
method with state dependent service rates. A packet voice
multiplexer is modeled as an M/ eD/1/K queue in [7], where
the least signiﬁcant bits of a voice packet are dropped during
congestion period of multiplexer to reduce the queueing delay.
The service time of a packet is determined depending on the
buffer occupancy.
The main characteristic of Internet trafﬁc is that its parame-
ters (packet IAT, data transmission rate, etc.) are Long Range
Dependent (LRD), i.e., a non-zero correlation exists in long-
term time-scales. MMPP is a widely used arrival process in
communication networks for modeling trafﬁc whose arrival
rate varies with respect to time. It can capture the correlation
between IATs in the arrival process. Andersen et al. [10]
illustrated that the superposition of four two-state MMPP’s are
sufﬁcient to model the second-order self-similar behavior over
large time-scales. The authors also proposed a ﬁtting procedure
for matching second-order properties of counts to that of
a second-order self-similar process. Muscariello et al. [16]
proposed a new MMPP trafﬁc model that accurately models
the LRD Internet trafﬁc over time-scales. Yoshihara et al. [17]
also proposed a ﬁtting method for self-similar trafﬁc based
on the superposition of two-state MMPP’s that matches the
variance function over several time-scales. Nogueira et al. [18]
extended [17] to accurately produce the self-similar trafﬁc.
The authors proposed a new ﬁtting procedure that matches the
complete distribution (besides variance) at each time scale.
Fischer et al. [10] did a detailed survey on MMPP and
presented all the results about MMPP and queues with MMPP
as input. A 4-state MMPP model is developed in [11] to
characterize the behavior of aggregate input trafﬁc in an ATM
multiplexer. The performance of an ATM multiplexer with
MMPP (using the model in [11]) as input is studied in [12]
by making two assumptions on MMPP. The authors modeled
the buffer as an MMPP/D/1/K queue and calculated the
queue length distribution, mean waiting time and cell loss
probabilities. Choi et al. [13] analyzed a queueing system
MMPP/G1, G2/1/B with queue length dependent service
times and then applied the results to cell discarding scheme
in ATM networks. The authors have deﬁned two service times
depending on whether the buffer level is above or below a
threshold.
The performance metrics studied in this paper are rate-
jitter and mean waiting time of a packet in the queue (jitter-
buffer). Our contribution is two-fold: (a) proposed algorithm-A
and algorithm-B (both uses the same buffer size as Mansour
algorithm) for rate-jitter control, shown that both of them
achieves less rate-jitter compared with Mansour algorithm
(Mansour work [1] has a lot of practical implication, this is
the main reason for comparing our proposed algorithms with
Mansour algorithm) and (b) statistical modeling of jitter-buffer
as MMPP/ eD/1/Bon queue for the performance analysis
of proposed algorithms. In the literature, queues with MMPP
input and state dependent service are not studied thoroughly.
To the best of our knowledge, this queueing model is not
considered so far. We have deﬁned a service time corre-
sponding to each level of buffer occupancy and state of the
MMPP, so, all the service times are distinct. Steady state
queue length distribution at departure epochs is calculated
from the queueing model. Simulation results are in congruent
with the derived analytical results. Even though the algorithms
are proposed for TDMoIP application, we believe that they
will work for any application in PSN.
III. 4-STATE MMPP MODEL
The MMPP is a doubly stochastic Poisson process whose ar-
rival rate varies according to an M-state irreducible continuous
time Markov chain (CTMC) [10]. MMPP can be viewed as a
super-position of ’M’ independent Poisson processes, where
switching among the processes is governed by an M-state
CTMC, i.e. when the MMPP is in state i, arrival process is
Poisson with rate λi.
The analysis presented here is based on two assumptions,
like in [12]: (i) MMPP changes its state at departure epochs
and (ii) probability of two or more state changes between two
successive departures is essentially zero (here state change
means switching from one Poisson process to other). If the
MMPP is in state j after a departure, then the arrival rate is
λj until the next departure (i.e. until the next state change).
The states of a 4-state MMPP are labeled from 0 to 3, as
shown in Fig. 1, taken from [11]. State transitions occur only
between adjacent states with the rates speciﬁed in Fig. 1. The
duration of state j is exponentially distributed with parameter
23
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

0 
1 
2 
3 
µ3 
µ0 
(1-p10) µ1 
p23 µ2 
(1-p23) µ2 
p10 µ1 
λ0 
λ1 
λ2 
λ3 
Figure 1: State transition diagram of a 4-state MMPP
µj and the arrivals in state j follow Poisson process with
parameter λj.
Let the MMPP has M states, denoted by j (0 ≤ j ≤ M−1),
and let λj and 1/µj be the arrival rate and mean state duration
of state j respectively and Sj,l be the service time of a packet
when the buffer level is l and the MMPP is in state j. To satisfy
the two assumptions, we need the mean time between arrivals
and time between two successive departures (i.e. service time)
should be much smaller than the mean state duration of the
MMPP (this condition will be useful when the buffer is non-
empty). Since the service times are multiple and distinct and
number of states are M (so, mean state durations are also
multiple), for the service time to be smaller than mean state
duration, maximum of the service times should be smaller
than the minimum of mean state durations, i.e. max{Sj,l}
should be smaller than min(1/µj) = 1/µmax, where j ∈
{0, 1, ..M − 1} and l ∈ {1, 2, ..Bon − 1}. Similarly, 1/λj
(mean time between arrivals), ∀j should be smaller than 1/µi,
∀i where i, j ∈ {0, 1, ..M − 1}, i.e. 1/λmin should be much
smaller than 1/µmax (this condition will be useful when the
buffer is empty).
IV. RATE JITTER CONTROL
For a given times sequence, the rate-jitter can be calculated
from Equation (1) as follows:
Rate − jitter =
max
0≤i,j≤n{|(ti+1 − ti) − (tj+1 − tj)|}
(1)
where tj is the arrival/departure instant of jth packet. When
packets arrive at the destination, they are stored in the jitter-
buffer and released some time later as discussed earlier. The
release time (departure time) of a packet is determined by
the rate-jitter control algorithm. Both the proposed algorithms
starts with a buffer loading stage, the ﬁrst packet is released
only after the arrival of the (B + 1)th packet and from there
onwards packets are scheduled according to the algorithms.
A. Assumptions
• Packets are of equal size, which is true in TDMoIP as
mentioned previously.
• Buffer can hold integral number of packets.
• Packets arrive at destination in the order in which they
are injected into PSN.
• Packets are processed in the FIFO discipline.
B. Parameters, Notations and Deﬁnition
B
buffer size of an off-line algorithm
1 ≤ h < B
space parameter for the on-line algorithm,
such that Bon = 2B + h
Imax, Imin
maximum and minimum bounds on the IDT
of an off-line algorithm
Xa
average IAT in the input (and also the output)
sequence and Imin << Xa << Imax
Lk
buffer level at the kth packet service initiation
instant
eD
set of Bon −1 state (queue length) dependent
service times
dk
inter-departure time between kth packet and
(k − 1)th packet
S(k)
service time of kth packet
Deﬁne,
δk
△=
Bon + 1 − Lk
2B

Xa
(2)
C. Algorithm-A
This algorithm requires a buffer size of Bon, for each value
of buffer occupancy Lk, it computes an IDT dk, as given in
the deﬁnition.
Algorithm 1 Algorithm-A
1) Calculate δk using Equation (2)
2) if 0 ≤ Lk ≤ h then
dk ← Imax
3) else if δk > Imin + Xa
B and Lk > h then
dk ← δk
4) else if δk < Imin + Xa
B and Lk > h then
dk ← δk + Imin
5) end if
Xa, Imax and Imin are requirements for this algorithm.
Assuming that Xa is known in advance (like in ATM standard)
is reasonable for real-time connections. Similarly Imax and
Imin are the worst-case rate-jitter bounds, can be set based on
the jitter bounds of the TDM trafﬁc.
The following theorem calculates the rate-jitter bound of
algorithm-A and proves that it is strictly less than that of [1].
Theorem 1: The rate-jitter of algorithm-A is bounded by
Imax − Imin − Xa
B , which is strictly less than the rate-jitter
bound Imax − Imin of Mansour algorithm.
Proof: From the deﬁnition of δk, we can observe that it
is a discrete valued function, whose value decreases linearly
(with slope − Xa
2B ) with an increase in buffer level. The
maximum and minimum values of δk are Bon
2B Xa and
1
2B Xa,
they occur at Lk = 1 and Lk = Bon − 1 respectively.
We can observe from algorithm-A that the IDT in the output
is Imax when the number of packets Lk are less than or equal
to h at the service initiation epoch of kth packet.
For any Lk > h, the IDT is less than Imax, this can be seen
observed by substituting Lk = h + 1.
So, the maximum IDT in the output sequence is Imax.
24
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

Now consider Lk = Bon − 1, then
δk = 2B+h+1−(2B+h−1)
2B
Xa = Xa
B
< Imin + Xa
B
So, the IDT is Imin + Xa
B from the deﬁnition.
For any Lk < Bon − 1, IDT is greater than Imin + Xa
B , so,
this is the minimum IDT in the output sequence.
As mentioned previously, rate-jitter is calculated as the
difference between maximum and minimum IDTs, as given
in Equation (1). Therefore, the bound on the rate-jitter is,
Imax − (Imin + Xa
B ) = Imax − Imin − Xa
B , which is less
than the rate-jitter of Mansour algorithm.
D. Algorithm-B
This algorithm also requires a buffer size of Bon. The
service time of a packet k at the head of the buffer is a function
of the number of packets Lk at its service initiation instant.
The service time S(k) of kth packet is calculated as given in
the deﬁnition.
Algorithm 2 Algorithm-B
1) Calculate δk using Equation (2)
2) if δk > Imin + Xa
B and Lk ≤ B − h then
S(k) ← δk + hXa
B
3) else if δk > Imin + Xa
B and Lk > B − h then
S(k) ← δk
4) else if δk < Imin + Xa
B and Lk > B − h then
S(k) ← δk + Imin
5) end if
The service times of algorithm-B (or IDTs of algorithm-A)
are state (queue length) dependent. If the number of packets
(Lk) in the queue increases, δk increases, so, the the service
time (or IDT) decreases i.e. service rate increases. Service time
(or IDT) is maximum when there are fewer number of packets
in the buffer and minimum when the buffer is full/nearly full.
V. MMPP/ eD/1/Bon QUEUE MODEL
We now model the jitter buffer with limited capacity Bon
as a queueing model with MMPP input and queue length
dependent service times. When a packet departs from the
queue, queue length can take any one of the values from 0 to
Bon −1. If the length of the queue is zero, then the algorithm
has to wait for the next arrival and start serving it. So, buffer
level Lk cannot take zero while calculating service times. If
the length of the queue is non-zero, the service time for the
next packet is calculated from the queue length and present
state of the MMPP at that instant. So, buffer level Lk at the
kth packet service initiation epoch takes any one of the values
from 1 to Bon − 1.
Let us re-deﬁne,
δk,j =
Bon + 1 − Lk
2B

XMj
(3)
where XMj is the average inter-arrival time when the
MMPP is in state j, so, XMj = 1/λj.
At the service initiation instant of kth packet, δk,j is calculated
from Equation (3). Depending on the value of δk,j, the service
time of kth packet is calculated according to the algorithm
we use. So, (Bon −1) deterministic service times are possible
for each state of the MMPP. Therefore, M(Bon − 1) service
times: {Sj,l :
0 ≤ j ≤ M − 1, 1 ≤ l ≤ Bon − 1}
are possible. This allows us to model the jitter buffer as
an MMPP/ eD/1/Bon queue, where eD represents a set of
M(Bon − 1) state dependent service times.
We observe the state of the MMPP and the number of
packets in the queue at departure epochs. Let Jk and Lk be the
state of the MMPP and the number of packets in the queue
at (i) (k − 1)th packet departure or (ii) kth packet service
initiation instant, both are same except if the (k − 1)th packet
leaves the system empty. Let Lk+1 be the same for (k + 1)th
packet and let Ak be the number of arrivals during the service
time of kth packet. Then the following recursive relation holds
good:
ˆ
Lk+1 =
(
Lk + Ak − 1,
if Lk > 0
Ak ,
if Lk = 0
(4)
Now,
Lk+1 = min(Bon − 1,
ˆ
Lk+1)
(5)
From Equations (4) and (5), it is clear that Lk+1 de-
pends only on Lk and Ak. Since arrivals in each state of
the MMPP follows Poisson process, Ak is i.i.d and the
state transitions of the MMPP are governed by a CTMC
as mentioned previously. Therefore, {Jk, Lk, k ≥ 0} forms
an embedded Markov chain (EMC) with the ﬁnite state
space {0, 1, 2, ..., M − 1}X{0, 1, 2, ..., Bon − 1}. At any ar-
bitrary time instant the state of the system is represented
by the pair (j, l). The 1-D representation of this state space
is {(0, 0), (0, 1), ..., (0, Bon − 1), (1, 0), (1, 1), ..., (1, Bon −
1), .....(M−1, 0), (M−1, 1), ..., (M−1, Bon−1)}. So, we can
model the state (j, l) as an an EMC, the transition probability
matrix P of the EMC is given in Equation (6),
P = [Pij] = P(present state = i, next state = j)
P =


P0,0
P0,1
· · ·
· · ·
P0,M−1
P1,0
P1,1
· · ·
· · ·
P1,M−1
...
...
...
...
...
...
...
...
...
...
PM−1,0
PM−1,1
· · ·
· · ·
PM−1,M−1


(6)
where the elements Pij are sub-matrices of size BonXBon
[12] and P is of size MXM.
Since we have assumed that multiple state transitions cannot
occur between two successive departures, Pi,j = 0, for |i −
j| > 1. So, P matrix will have elements in main diagonal
and in its two co-diagonals (one above and one below the
main diagonal). Elements of the sub-matrix Pi,j are denoted
as Pi,j(m, l) given by,
Pi,j(m, l) = P(Jk+1 = j, Lk+1 = l | Jk = i, Lk = m) (7)
which is the probability of l packets in the queue when the
MMPP is in state j after a departure given that there were m
25
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

Pi,j =


α(0; Sj,1, λj)β(i, j; Sj,1)
α(1; Sj,1, λj)β(i, j; Sj,1)
α(2; Sj,1, λj)β(i, j; Sj,1)
· · ·
α(Bon − 2; Sj,1, λj)β(i, j; Sj,1)
1 −
Bon−2
P
k=0
α(k; Sj,1, λj)β(i, j; Sj,1)
α(0; Sj,1, λj)β(i, j; Sj,1)
α(1; Sj,1, λj)β(i, j; Sj,1)
α(2; Sj,1, λj)β(i, j; Sj,1)
· · ·
α(Bon − 2; Sj,1, λj)β(i, j; Sj,1)
1 −
Bon−2
P
k=0
α(k; Sj,1, λj)β(i, j; Sj,1)
0
α(0; Sj,2, λj)β(i, j; Sj,2)
α(1; Sj,2, λj)β(i, j; Sj,2)
· · ·
α(Bon − 3; Sj,2, λj)β(i, j; Sj,2)
1 −
Bon−2
P
k=1
α(k; Sj,2, λj)β(i, j; Sj,2)
...
...
...
...
...
...
...
...
...
...
...
...
0
0
0
· · ·
α(0; Sj,Bon−1, λj)β(i, j; Sj,Bon−1)
1 − α(0; Sj,Bon−1, λj)β(i, j; Sj,Bon−1)


(8)
packets in the queue and the MMPP was in state i after the
previous departure.
Because of the assumptions we made, Pi,j(m, l) can be
calculated as the product of P(Lk+1 = l | Jk = i, Lk = m;
in the service time Sj,l) and P(Jk+1 = j | Jk = i; in the
service time Sj,l), where Sj,l is the service time of a packet
when the buffer level is l and MMPP is in state j. The sub-
matrix Pi,j is given in Equation (8), where α(k; Sj,l, λj) is
given below:
α(k; Sj,l, λj) = e−λjSj,l(λjSj,l)k
k !
, k ≥ 0
(9)
which is the probability of k arrivals in the service time Sj,l
when the arrival rate is λj; and β(i, j; Sj,l) is the probability
of the MMPP to change its state from i to j in the service
time Sj,l. If MMPP changes its state from i to j, this is
equivalent to |(i − j)| arrivals (equal to one arrival, according
to the assumptions) in the service time Sj,l. As mentioned
previously, the duration of state j is exponentially distributed
with parameter µj, so, we can write β(i, j; Sj,l) as follows:
β(i, j; Sj,l)=







P(MMPP will not change its state
in service time Sj,l),
if i = j
P(MMPP will change its state
from i to j in service time Sj,l),
otherwise
=
(
e−µj Sj,l (µjSj,l)0
0 !
,
if i = j
e−λj Sj,l (λjSj,l)1
1 !
,
otherwise
Let π = {πj,l : 0 ≤ j ≤ M − 1, 0 ≤ l ≤ Bon − 1} be steady
state probability vector of the states at departure epochs, where
πj,l denotes the steady state probability of the state (j, l). By
solving π = πP [8], we get the steady state probability vector
of state. Now, the steady state probability of buffer occupancy
(πl, 0 ≤ l ≤ Bon − 1) is calculated as,
πl =
M−1
X
j=0
πj,l.
(10)
Now, from [12], we can calculate queue length distribution
at arrival epochs, from which mean waiting time and packet
loss probability calculation is straightforward.
VI. SIMULATION RESULTS AND DISCUSSION
Simulation parameters are taken in such a way that
the two assumptions gets satisﬁed always. We have taken,
the average arrival rates in each state of the MMPP as
λ0 = 0.6 pptu (packets per time unit), λ1 = 0.7 pptu, λ2 =
10
20
30
40
50
60
2
3
4
5
6
7
8
9
Buffer size
Rate−jitter (time unit)
 
 
Mansour, (i)
algorithm−A, (i)
algorithm−B, (i)
Mansour, (ii)
algorithm−A, (ii)
algorithm−B, (ii)
Figure 2: Comparison of rate-jitter for different algorithms in both
cases
0.8 pptu, λ3 = 0.9 pptu, where one time unit depends on
the line speed and packet size. Mean state durations are
exponentially distributed and are set as µ0 = 0.02, µ1 =
0.05, µ2
=
0.015, µ3
=
0.001 and, Xa is taken as
1/mean(λ0, λ1, λ2, λ3) in the simulation. In Fig. 2, buffer
size B varied from 4 to 30, and set h = 2, so, Bon ranges
from 10 to 62.
Choice of Imax and Imin: One trivial choice for Imax
and Imin is Xmax and Xmin [1], where Xmax and Xmin
are the maximum and minimum IATs in the input sequence,
respectively. But by using tighter Imax and Imin, we may get
a stronger rate-jitter guarantee, i.e., we may achieve an Imax
less than Xmax and an Imin greater than Xmin using off-line
algorithm. It is not possible to give an exact lower bound of
Imax, since we do not have control over input arrival process.
In this paper, we have simulated two cases: (i) Imax = Xmax,
Imin = Xmin and (ii) Imax = 0.5Xmax, Imin = 2Xmin.
When we reduce Imax value further beyond 0.5Xmax, we
have arrived at a situation where a packet is scheduled before
its arrival. The reason for this is the maximum IDT Imax is
smaller than the IATs of packets arrived in that situation.
From Fig. 2, it is evident that the rate-jitter of algorithms
A and B is less compared with Mansour algorithm in both
cases. Among the three algorithms, algorithm-B achieves less
rate-jitter. Since Imax in case (i) is larger than that of case
(ii), rate-jitter is more in case (i) compared with case (ii). For
one realization of input, the maximum and minimum IDTs
26
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

10
20
30
40
50
60
0
10
20
30
40
50
60
Buffer size
Mean waiting time (time unit)
 
 
Mansour, (i)
algorithm−A, (i)
algorithm−B, (i)
Mansour, (ii)
algorithm−A, (ii)
algorithm−B, (ii)
Figure 3: Comparison of mean waiting time of a packet for
different algorithms in both cases
in the output sequence of Mansour algorithm are Imax and
Imin, respectively, for all buffer sizes. Hence, the rate-jitter is
constant.
The maximum IDT is constant in algorithm-A for all buffer
sizes, but minimum IDT decreases with an increase in buffer
size B up-to some value and from then onwards it is almost
constant. Because at fewer values of buffer size, it becomes
full and the minimum IDT takes the minimum of the possible
values it can take, but at high buffer values it may not happen.
Therefore, rate-jitter for algorithm-A decreases up-to some
buffer size and almost constant from there in both cases. For
algorithm-B, both the maximum and minimum IDTs decreases
with an increase in the buffer size. Therefore, rater-jitter keep
on decreasing for increasing buffer size in both cases.
The mean waiting time of a packet for different algorithms
is calculated from simulation. From Fig. 3, it is observed
that in Mansour algorithm, the waiting time increases like
an exponential as a function of buffer size B, which is large
compared with algorithms A and B in both cases. Mean
waiting time of algorithm-A (algorithm-B) is almost equal in
both cases.
To simulate the queue length distribution, we have taken
B = 6, h = 2, so, Bon = 14 for both cases. For algorithm-
A, IDTs are taken as service times to ﬁnd the queue length
distribution, this is true as long as the buffer is not empty.
Buffer becomes empty rarely because of the following: (a)
when the buffer level decreases, algorithm-A schedules the
packets in such a way that the IDT is Imax, so, the probability
of an arrival before the buffer becomes empty is high. (b) since
arrivals follow Poisson process in each state of the MMPP,
there is a high probability for the IATs (follows Exponential
distribution) to take small values. So, most of the time there
will be a packet in the buffer. This is true from TDMoIP
perspective also because the incoming rate has to be equal
to the outgoing rate (utilization, ρ = 1).
From Fig. 4 and Fig. 5, we can observe that the ana-
lytical queue length distribution curves for algorithm-A and
algorithm-B, respectively, match with the simulation results
0
2
4
6
8
10
12
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0.2
No.of packets, L
P(buffer level=L)
 
 
simulated, (i)
analytical, (i)
simulated, (ii)
analytical, (ii)
Figure 4: Queue length distribution analytical vs. simulation for
both cases when algorithm-A is applied
0
2
4
6
8
10
12
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0.2
No.of packets, L
P(buffer level=L)
 
 
simulated, (i)
analytical, (i)
simulated, (ii)
analytical, (ii)
Figure 5: Queue length distribution analytical vs. simulation for
both cases when algorithm-B is applied
for both cases. Since algorithm-B doesn’t depend on Imax, the
queue length distribution curves (analytical or simulated) are
almost same irrespective of the case, which can be observed
from Fig. 5. Even though algorithm-B depends on Imin, its
value is so small that cannot inﬂuence the curves.
VII. CONCLUSIONS AND FUTURE WORK
In this paper, we have proposed two rate-jitter control algo-
rithms for TDMoIP application. For algorithm-A, the bound on
rate-jitter is calculated analytically and is shown that is smaller
as compared with Mansour algorithm. The simulation results
show that the performance of algorithm-A and algorithm-B is
better than Mansour algorithm with respect to mean waiting
time and rate-jitter. Therefore, algorithm-B is superior to both
algorithm-A and Mansour algorithm, but the analytical bound
of algorithm-B is yet to be proved. We have modeled the jitter-
buffer as an MMPP/ eD/1/Bon queue, derived an expression
for the queue length distribution. The simulation results for
both algorithms match the analytical queue length distribution.
27
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

The future work is directed towards the study of perfor-
mance of proposed algorithms in multiple streams environ-
ment. The statistical analysis of algorithm-B is under study.
We also aim to calculate an analytical expression for variance
of the departure process of the proposed queueing model. As
a future work, we are extending this work with different self-
similar processes as input, because the real-time trafﬁc in IP
can be best modeled using these arrival processes. We also
aim to determine the waiting time distribution.
REFERENCES
[1] Y. Mansour and B. Patt-Shamir, “Jitter control in QoS net-
works,” IEEE/ACM Trans. on Networking, Vol.9, No.4, Aug
2001, pp. 492-502.
[2] T. A. ElBatt, S. El-Henaoui, and S. Shaheen, “Jitter recovery
strategies for multimedia trafﬁc in ATM networks,” in Proc.
GLOBECOM’96, vol.2, 1996, pp. 1202-1206.
[3] H. Zhang and S. Keshav, “Comparison of rate-based services
disciplines,” in Proc. ACM SIGCOMM, 1991, pp. 113-121.
[4] D. Hay and G. Scalosub, “Jitter regulation for multiple
streams,” ACM Trans. on Algorithms, Vol.6, No.1, Article 12,
Dec 2009, pp. 12.1-12.19, doi: 10.1145/1644015.1644027.
[5] S. Jagadish and R. Manivasakan, “Analysis of jitter control
algorithms in QoS networks,” in Proc. Second Asian Himalayas
International Conference on Internet (AH-ICI), Nov 2011.
[6] Z. Yan and J. Yih-Chyun, “Performance analysis of adaptive
timing method for voice over ATM using queuing models,“ in
Proc. of Winter International Symposium on Information and
Communication Technologies (WISICT’04), 2004, pp. 1-8.
[7] K. Sriram and D. M. Lucatoni, ”Trafﬁc smoothing effects of
bit dropping in a packet voice multiplexer,“ IEEE Trans. on
Comm.,Vol.37, No.7, July 1989, pp. 703-712.
[8] U. Narayan Bhat, ”An Introduction to queueing theory: Mod-
eling and analysis in applications,“ Springer, 2008.
[9] D. Gross and C. M. Harris, “Fundamentals of queueing theory,”
New York: Wiley, 1985, 2nd ed., pp. 279-285.
[10] W. Fischer and K. Meier-Hellstern, “The Markov-modulated
Poisson process (MMPP) cookbook,” in Perf. Eval, Elsevier,
Vol.18, No.2, Sep 1993, pp. 149-171.
[11] F. Yegenoglu and B. Jabbari, “Modeling of aggregated bursty
trafﬁc sources in ATM multiplexers,” in Proc. ICC’93, May
1993, pp. 1703-1707.
[12] F. Yegenoglu and B. Jabbari, “Performance evaluation of
MMPP/D/1/K queues for aggregate ATM trafﬁc models,” in
Proc. INFOCOM’93, 1993, pp. 1314-1319.
[13] B. D. Choi and D. I. Choi, “Queueing system with queue length
dependent service times and its application to cell discarding
scheme in ATM networks,” in Proc. IEE, 1996, pp. 5-11.
[14] Madhu Sikha and R. Manivasakan, “Novel Rate-Jitter Control
Algorithms for TDMoIP, ” in IEEE National Conference on
Communications (NCC), 2013, pp. 1-5.
[15] A. T. Andersen and B. F. Nielsen, “A Markovian approach
for modeling packet trafﬁc with long-range dependence,” IEEE
Journal on Selected Areas in Comm., Vol.16, No.5, June 1998,
pp. 719-732.
[16] L. Muscariello, M. Mellia, M. Meo, M. Ajmone Marsan, and R.
Lo Cigno, “Markov models of internet trafﬁc and a new hierar-
chical MMPP model,” Journal on Computer Communications,
Elsevier, Vol.28, No.16, Oct 2005, pp. 1835-1851.
[17] T. Yoshihara, S. Kasahara, and T. Takahashi, “Practical time-
scale ﬁtting of self-similar trafﬁc with Markov-modulated Pois-
son process,” Telecommunication Systems, Vol. 17, No. 1-2,
2001, pp. 185-211.
[18] A. Nogueira, P. Salvador, R. Valadas, and A. Pacheco, “Mod-
eling self-similar trafﬁc through Markov modulated Poisson
processes over multiple time scales,” in Proc. 6th IEEE Inter-
national Conference on High Speed Networks and Multimedia
Communications (HSNMC’03), July 2003.
[19] Y. Stein, R. Shashoua, R. Insler, and M. Anavi,“Time Division
Multiplexing over IP (TDMoIP),” RFC 5087, Dec 2007.
[20] P. M. Fernandez, “Circuit Switching in the Internet’,” Doctoral
thesis, Chapter 2, Stanford University, June 2003.
[21] Y. Stein and E. Schwartz, “Circuit Extension over IP: An
Evolutionary Approach to Transporting Voice and Legacy Data
over IP Networks,” RAD Data Comm., March 2001.
28
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-263-9
CTRQ 2013 : The Sixth International Conference on Communication Theory, Reliability, and Quality of Service

