Knowledge Management Practices in GSD: A 
Systematic Literature Review 
 
Smeea Arshad   
 
 
 
 
 
 
Muhammad Usman 
Department of CS  and IT  
 
 
 
 
 
Department of CS and S E 
Mirpur Univesity of Science & Technology  
 
 
 
International Islamic University Islamabad 
Mirpur, Pakistan  
 
 
 
 
 
 
Islamabad, Pakistan 
smeeaarshad@gmail.com 
 
m.usman@iiu.edu.pk 
Naveed Ikram 
Department of Computer Science and Software Engineering 
Ripah International University Islamabad 
Islamabad, Pakistan 
 naveed.ikram @riu.edu.pk 
 
Abstract—Global software Development (GSD) is a popular 
software development setting that aims at developing software at 
low cost with geographically distributed teams. Knowledge 
Management (KM) is an important issue in GSD. Plethora of 
research is available to solve GSD issues with Knowledge 
management practices (KMPs). Evidence about the effectiveness 
of these practices is scattered among different studies. The need 
exists to collect, synthesize and review this research at one place. 
This study explores GSD issues due to lack of knowledge 
management (KM) and knowledge management practices 
(KMPs) used to solve these issues. Systematic literature review 
(SLR) is performed for the identification of KMPs used in GSD 
projects to handle GSD issues. The study has identified GSD 
issues due to lack of KM and KMPs used to address these issues. 
Effectiveness of knowledge management practices is seen by 
associating a frequency count with each practice. Knowledge 
transfer, shared understanding and communication are mostly 
reported problems. Collaborative technologies are widely used 
practice to solve GSD issues due to lack of KM.  
Keywords-Knowledge Management; Knowledge Management 
Practices; Global software Development; Systematic Literature 
Review 
I. 
 INTRODUCTION 
Knowledge management (KM) is an asset for 
software development organizations. It addresses different 
issues in software development and at the same time also 
contributes to software process improvement [1][2]. 
 
 
Global 
software 
development 
(GSD) 
is 
a 
methodology to develop software with teams at multiple 
locations to get the edge of round the clock development and 
nearness to the market. However, geographical separation 
introduces many issues such as communication, coordination, 
control and knowledge management. Knowledge, in offshore 
development teams is scattered across continents and GSD 
barriers make its coordination and synthesis difficult [2].  At 
the same time, effective KM plays a paramount role in solving 
the issues innate in offshore software development. 
Knowledge management facilitates the organization operating 
globally to successfully integrate and coordinate knowledge 
resources [2]. Knowledge acquisition and sharing is helpful in 
achieving shared understanding in GRE [6]. 
The area of KM is explored to see its influence in 
global software engineering. Number of studies have 
highlighted the issues that arise in GSD due to lack of KM. 
Desouza et al. [2] empirically investigated different 
organizations and highlighted the importance of KM in their 
study. They identified access to skilled knowledge group as 
one force among the other compelling forces for global 
software 
development. 
They 
found 
seeking 
relevant 
knowledge, knowledge sharing, synthesis and transfer are 
some of the KM problems faced in GSD [1]. 
Damian et al. [14] focused on the impact of remote 
communication, knowledge management, time and culture 
differences on requirements engineering activities and found 
that 
ineffective 
knowledge 
management 
influences 
requirements negotiation, prioritization, specification and 
validation. Avram [7] focused on socio-cultural impact on 
knowledge exchange. During the empirical investigation they 
found maintaing awareness and knowledge transfer are the 
problems that mainly arise due to lack of informal 
communication. 
Realizing the importance of KM, many practices are 
suggested to manage knowledge in GSD. Avram [3] identified 
the knowledge work practices that are used in the actual work 
setting. The focus of the study is on people, “their values and 
connections” to deal with issues in distributed development. 
The identified practices deal with the issues of knowledge 
transfer, mutual knowledge and knowledge sharing. Desouza 
[2] empirically found the strategies and models used to 
manage knowledge in software industry. Clerc [4] reviewed 
the architectural knowledge management approaches. He 
categorized the approaches in personalization and codification 
strategies and suggested to focus on hybrid approaches. Paiva 
516
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

[8] narrates the experience of implementing community of 
practice (CoP) by Brazil Global Development Center. CoP 
helped in project management, information reuse, reducing 
time in trouble shooting, requirements specification and 
reverse engineering. 
Despite the acceptance of knowledge management 
practices (KMPs) to solve GSD issues little evidence based 
research exists to GSD practionars to select appropriate 
knowledge management practice to deal with a particular 
issues. This paper intends to fill the gap by conducting the 
systematic literature review (SLR) about the state of practice 
of knowledge management in GSD. We followed the 
guidelines proposed by Barbara Kitchenham [5].The questions 
investigated are: 
 
RQ1: What GSD issues occur due to lack of knowledge 
management (KM)? 
RQ2:  What KMPs are used in GSD projects? 
RQ3: What GSD issues are addressed by existing knowledge 
management practices (KMPs)? 
 
 
We have identified GSD issues due to lack of KM 
and KMPs to sort out these issues. We have classified the 
practices into predefined categories of codification and 
personalization. The paper is organized as follows: Section 2 
describes the background. Section 3 reports the research 
methodology.  Section 4 presents findings from the systematic 
literature review and analysis with some discussion. Section 5 
describes the conclusion. 
II. 
RESEARCH MEHODOLOGY 
The research is conducted using systematic literature review 
(SLR). SLR is a well defined, thorough and fair “means of 
identifying, evaluating and interpreting all available research 
relevant to a particular research question, or topic area, or 
phenomenon of interest” [7]. Barabra Kitchenham’s guidelines 
[5] were followed to define the protocol and conduct SLR. 
The steps to perform review are Identification of research, 
primary studies selection, Study quality assessment, Data 
extraction & analysis. 
A. Search Strategy 
Search strategy consists of deriving major terms from 
questions, developing search strings from major terms and 
their synonyms using AND/OR operators. Major search terms 
were ‘knowledge management’ and ‘GSD’. These terms and 
their synonyms are shown in table 1 below. These two terms 
(or their synonyms) were ANDed to form the generic search 
string. Initial pilot study helped in selecting the synonyms and 
major search terms. 
 
TABLE I :MAJOR SEARCH TERMS AND THEIR SYNOYMS             
GSD:“Global 
Software 
development” 
OR 
“distributed 
software development” OR “multi-site software development”  
OR “global software engineering” OR “global requirements 
engineering” OR “distributed software engineering” OR 
“distributed requirements engineering” OR “multisite software 
development” OR GSD OR GSE OR “offshore software 
development” OR GRE 
KM: (“knowledge management” OR “knowledge sharing” 
OR “knowledge acquisition” OR “knowledge transfer” OR 
“knowledge creation” OR “knowledge capture” OR “tacit 
knowledge” OR “explicit knowledge” OR “knowledge 
retention” OR “knowledge valuation” OR “knowledge use” 
OR “knowledge application” OR “knowledge discovery” OR 
“knowledge integration” OR “knowledge theory” OR 
“organization knowledge” OR “knowledge engineering” OR 
“information management” OR “information sharing” OR 
“information transfer” OR “information reuse” OR “common 
understanding” OR “shared understanding” 
 
A total of 525 papers were obtained from a range of  
databases.  Databases searched and no. papers retrieved from 
each database were: Inspec, IET, IEEE Explore (38), ACM 
Digital Library(85), Science Direct (149) , Springerlink (215), 
EICompendex (107). Customized search strings were 
developed from generic string for each database. The selected 
databases encompass the major database in software 
engineering and most of the research work is published in 
these databases. Google Scholar was also searched for the 
publications at first, but later, during pilot study was excluded 
as it gave multiple results of the same query at different time.  
B. Publication Selection 
Inclusion and exclusion criteria applied to the studies are 
given below: 
1)  Inclusion Criteria: It is used to include the studies for 
data extraction. We included studies that 
 Are about KM in GSD AND 
 Are supported by some evidence in the form of case study 
or industrial/Experience report or experiment AND 
 Are published in peer reviewed journal or conference.  
 
2) Exclusion Criteria: It is used to screen out studies that 
are not included for data extraction. We excluded studies that 
 Are  not directly related to   KM or KMPs in GSD context 
OR  
 Lack evidence support OR 
 Studies that describe GSD problems not relevant to KM 
 
3) Selecting Primary and Secondary Resources:  Primary 
studies selection was carried out at two levels. Level 1 
screening was based on title, abstract and keywords. This 
excluded the papers that were not relevant to our research 
question. After level 1 screening of 525 papers, 51 studies 
were selected as candidate primary studies. In Level 2 
screening, incusion/exclusion criteria was applied on full text 
of 51 candidate primary studies. After this step, a total of 27 
517
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

studies were selected as primary studies. Data extraction and 
quality assessment was performed for these 27 primary 
studies.    
Single study in multiple papers was considered only 
once. Most recent and comprehensive study was selected 
when focus of the study was same.  
Secondary studies selection was based on references 
of primary studies; 6 secondary studies were selected for data 
extraction. 
C.  Publication Quality Assessment 
Quality assessment was applied on the final selection 
of papers in parallel with data extraction. We consulted 
protocols” Agile software development” and “EPIC Case 
Study 2 – Extension of a Tertiary Study” and Kitchenham 
guidelines [5],[10],[11] to develop quality assessment criteria 
that consists of questions. Every quality question has three 
options; yes means 2 points, no means 0 point and partial 
means 1 point. Quality Assessment Criteria for Industrial/ 
Experience report are: 
 
Does the study clearly describe the context? 
 
Does the links between data, interpretation and 
conclusion are illustrated well? 
 
Does study adds value to research? 
And for evidence based studies are: 
 
Does study clearly narrate objectives? 
 
Does study clearly describe context? 
 
Does the sampling method and its rational given? 
 
Does the data collection method and rational given? 
D. Data Extraction  
 
Single researcher (1st author) was responsible for the 
data extraction. Secondary reviewers (other authors) were 
consulted in case of problem or confusion. 
E.  Data Synthesis  
 
We identified list of GSD issues and KMPs used to 
address these issues at the end of data extraction phase. The 
KMPs were reviewed to make their categories along the 
codification and personalization lines.  
III. 
RESULTS 
Results of RQ1, RQ2 and RQ3 are shown in the section 
below: 
1)  GSD issues identified through SLR (RQ1): 
Table II 
shows the list of GSD issues due to lack of knowledge 
management identified through SLR. Complete citation of 
SLR references is given in appendix A. The identified issues 
vary from frequently reported in different studies to the ones 
that are reported only once. The table shows only the most 
occurring issues. Issues that fall in frequency range of 3, 2 and 
1 are not shown in table due to the shortage of space. 
 
TABLE II       GSD ISSUES DUE TO LACK OF KM             
# 
GSD Issues due to lac of KM 
1 
Shared understanding 
2 
Knowledge sharing 
3 
Communication 
4 
Knowledge transfer 
5 
Relationship building or team cohesion  
6 
Trust 
7 
Finding the right people 
 
 Issues that are reported rarely (frequency less than 5) 
are coordination, requirements engineering, awareness, 
culture, 
cost, 
quality, 
alignment 
of 
process 
and 
tools/objectives and faster ramp-up time, knowledge reuse, 
mutual 
knowledge, 
knowledge 
creation, 
Knowledge 
externalization, knowledge exchange, information gathering, 
ineffective decision making meetings, cycle time, time to 
market, fill knowledge gap, gap in knowledge flow, face-to-
face meetings difficult, codified knowledge compatibility and 
exchangeability, knowledge retrieval, time zone difference, 
outsourcing  success. 
2) KMPs used in GSD projects identified through SLR 
(RQ2): Table III shows list of Knowledge Management 
Practices (KMPs) applied to address GSD issues. There are 
many practices to solve a GSD issue which indicates that an 
organization must follow some guidelines to select the 
appropriate practice prior conducting the project. Frequently 
reported practices are shown in table. 
Practices that are reported rarely are: Division of 
work, Informal communication, Guidelines or training 
programs, Clear project/organization structure with clear roles 
and responsibilities, Cross continental mini teams, Adapt 
scrum, Learn by watching, Direct request, Information update, 
Knowledge centric product life cycle management, Reverse 
Presentation Method, Shared team and task knowledge, 
Surviving the Babel tower, Mutual adjustment, Process 
Knowledge Tracer, Shared infrastructure, Clear project 
structure 
with 
clear 
communication 
responsibilities, 
Discussion board, Knowledge reuse. 
 
TABLE III      KMPS USED IN GSD PROJECTS  
# 
KMPs used in SD Projects 
1 
Collaborative technology 
2 
Meetings or visits 
3 
Documentation 
4 
Asking 
the 
developers/boundary 
spanners/colleague 
5 
Transactive memory 
6 
Knowledge sharing 
7 
Standard tools and methods 
 
518
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

3) KMPs used to address GSD issue (RQ3): Table IV 
shows the GSD issues due to lack of KM and KMPs used to 
address these issues along with the number of times the pair 
(of GSD issue and KMP used to address it) is reported 
together.  This is different from table III, wherein we only 
showed the reported practices. 
 
TABLE IV      KMPS AND GSD ISSUES                
GSD Issues due 
to lack of KM 
KMPs used to address GSD issues 
due to lack of KM 
f 
Shared 
understanding 
1) Collaborative technology  
2)  Meetings 
3) Documentation 
4) Standardized 
tools 
and 
methods 
5) Transactive memory 
6) Asking the colleague  
7) Guidelines/training 
program 
8) Reverse 
Presentation 
method (RPM) 
3 
3 
3 
2 
 
2 
1 
1 
 
1 
Knowledge 
sharing 
1) Collaborative technology 
2) Meetings 
3) Surviving the Babel tower 
4) Process Knowledge Tracer 
5) Cross 
continental 
mini 
teams 
6) Direct communication 
7) Division of work 
8) Shared infrastructure 
9) Discussion board 
10) Transactive memory 
4 
2 
1 
1 
 
1 
1 
1 
1 
1 
1 
1 
Communication 
 
1) Meetings/Visits   
2) Asking the colleague 
3) Collaborative technology 
4) Clear project/organization 
structure with clear roles 
and responsibilities 
5) Transactive memory 
6)  Information update 
7) Adapt scrum process 
8) Reverse 
Presentation 
method (RPM) 
9) Knowledge centric product 
life cycle management 
10) Documentation 
3 
3 
2 
2 
 
 
1 
1 
1 
1 
 
1 
 
1 
 
Knowledge 
transfer 
1) Collaborative technology 
2) Meetings 
3) Asking the colleague 
4) Documentation  
5) Division of work 
6) Transactive memory 
7) Standard 
tools 
and 
methods 
8) Surviving the Babel tower 
2 
2 
2 
2 
1 
1 
1 
 
1 
Team cohesion 
1) Visits/meetings 
2) Mutual adjustment 
4 
1 
Trust  
 
 
1) Meetings/Visits 
2) Collaborative technology 
3) Adapt scrum 
3 
2 
1 
Finding the right 
people 
1) Transactive memory 
2) Collaborative technology 
3) Meetings or Visits 
4) Asking the colleague  
5) Standard 
 
tools 
and 
methods 
3 
2 
1 
1 
1 
 
IV. 
DISCUSSION 
Discussion section is divided in two parts i.e., discussion on 
GSD problems due to lack of KM and discussion on KM 
practices used to address the issues. 
1) Global Software Development Problems due to lack of 
Knowledge Management: 
Lack of common understanding is the most occurring 
problem identified during this study. 13 papers reported lack 
of shared understanding as a problem in GSD. Difference in 
organizational 
culture 
has 
great 
impact 
on 
shared 
understanding and creates problems in gaining common 
understanding of different aspects of project because of the 
difference in terminologies used by organizations for the same 
concept, difference in standard of documentation. Research 
shows that successful projects implemented standard tools and 
methods 
to 
achieve 
shared 
understanding 
([3][9]). 
Communication 
gap 
in 
GSD 
teams 
gives 
rise 
to 
misunderstandings 
and 
takes 
more 
time 
to 
correct 
misunderstandings [14]. Language difference is another reason 
of the lack of common understanding in distributed software 
development teams. Difference in time zones of teams 
introduces communication gap; thereby giving rise to 
misunderstandings among time members and also providing 
them less time to clear these misunderstandings ([15][16]). 
Cultural diversity, communication gap, difference in technical 
background, gap in knowledge flow also create difficulty in 
achieving shared understanding ([11][17][20][21][22][23] 
[24]). Misunderstanding of requirements can introduce delay 
[18]. 
Knowledge 
sharing 
is 
another 
important 
problem 
identified. 40% of the studies (11 papers) reported knowledge 
sharing as a problem. This confirms our results with the 
previous studies that mentioned knowledge sharing as the 
critical success factor for outsourcing relationships success 
[25]. Only one paper reported that information was not 
appropriately shared among team members, whereas other 
studies mentioned that they found sharing knowledge to be 
problematic. Research suggests that tacit nature of knowledge 
and lack of trust among team members are the reasons behind 
the problem of knowledge sharing(Two papers suggested that 
factor that contributes to problem of knowledge sharing is tacit 
nature of knowledge, while one paper mentioned trust among 
cross site team members as a reason for lack of knowledge 
519
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

sharing). Tacit nature of knowledge creates problem only in 
sharing implicit knowledge whereas trust is the factor that is 
necessary for sharing both kinds of knowledge either implicit 
or explicit [12][14][26]. Building  trust and sharing tacit 
knowledge both require face to face interaction that is difficult 
to achieve in GSD. 
This SLR identifies lack of Communication; either formal 
or informal as another problem that arises mostly during 
global software development projects. 37% of the studies (10 
papers) reported the problem of lack of communication. The 
identified studies narrate the inability of team to have 
appropriate communication but failed to describe the specific 
problem they faced. The main reasons of lack of 
communication are geographical, socio-cultural and temporal 
distance. Due to lack of communication several problems arise 
i.e. lack of trust, relationship building etc. which ultimately 
cause lack of knowledge sharing. Informal communication is 
also badly impacted and almost become impossible due to 
geographical distance.  
Knowledge transfer, relationship building, and finding the 
right people are some other important problems that require 
social aspect to be considered. Various other problems are also 
identified but these are less important with low frequency. 
2) Discussion on Knowledge Management Practices: 
Collaborative technology is an important practice reported 
in 51% of studies, supports hybrid strategy (codification & 
personalization) and solves 14 problems. Use of collaborative 
technology reduces social distance, makes people aware of 
other’s presence, produces the sense of being a team, 
synchronizes communication and reduces delay by providing 
in time feedback. Collaborative technology includes email, 
video conferencing, IM, online data bases, etc. Email, Instant 
Messaging (IM) and video conferencing are more frequently 
used among identified practices of collaborative technology.  
IM was mostly used when to get information about a certain 
problem or for interaction with experts whereas video 
conferencing became an interaction medium for a group most 
of the time, yet maintained open communication between two 
managers as well. Email is more frequently used for sharing 
artifacts, circulating logs and exchanging documents. The Pros 
and cons of using collaborative technology are: 
 
It has the ability to deal with the problem of 
communication; a major challenge in GSD projects. 
Geographical 
distance 
hinders 
face 
to 
face 
communication 
in 
GSD. 
The 
only 
way 
to 
communicate among team members across different 
locations is through the use of collaborative 
technology. Collaborative technology is rich media 
for communication. It supports formal, informal and 
synchronous and asynchronous communication [14].  
Lack of Informal communication is found to be the 
reason behind many problems identified in this study 
such as knowledge sharing/transfer, building trust, 
finding the right people etc.;[11][28]. We argue IM 
and 
video 
conferencing 
can 
enable 
informal 
communication. 
Collaborative 
technology 
also 
facilitates formal communication; thereby impacting 
knowledge 
sharing/transfer 
and 
shared 
understanding. Exchanging documents via email i.e.; 
asynchronous communication tends to cope with time 
zone difference. Synchronous communication via 
collaborative technology impacts communication and 
shared understanding. 
 
Another advantage of using collaborative technology 
is it supports both personalization and codification 
strategy [14]. Other practices supporting hybrid 
strategies contrary to collaborative technology are 
either specific to one or two organizations or some 
specific problems. 
 
However, use of collaborative technology is not 
without problems. Temporal distance can’t be 
overcome by collaborative technology. Another 
limitation of collaborative technology is when a time 
slot is dedicated for informal communication but till 
the end of meeting formal conversation goes on 
leaving no room for informal communication [14]. 
Meetings/visits are considered more useful to cope with 
problems created by geographical, temporal and socio-cultural 
distance. Their ability to develop trust and build sense of being 
a team is an important factor for the wide spread adoption of 
this practice. Arranging visits can be costly as compared to 
technical meetings but these have more benefits. Research has 
shown that GSD projects that lack visits were unsuccessful 
and those supported travelling were successful [27]. 
Documentation is third most frequently used practice 
and solves seven issues among the issues identified. 
Documentation is beneficial in keeping the group aware of 
what’s happening in the project and is also necessary to keep 
aware if new person joins the team or some expert or relevant 
person leaves. 
Asking the colleague and transactive memory also 
highlight the importance of social aspect in dealing with the 
GSD issues. Transactive memory supports both codification 
and personalization strategy and indicates that both type of 
practices must be used to be successful in GSD projects.  
Knowledge management practices are broadly 
categorized in codification and personalization strategy in 
literature. 
We 
attempted 
to 
categorize 
Knowledge 
management practices used to address GSD problems due to 
lack of KM identified in this SLR along these two dimensions. 
 
Codification: 
This 
category 
includes 
practices 
of 
Documentation, Standardize tools and methods, Shared 
infrastructure, Information update and Knowledge reuse. 
 
Personalization: This category includes practices of Meetings 
or visits, Asking the colleague, Informal communication, 
Cross continental mini teams, Surviving the Babel tower, 
Direct request, Learn by watching, Mutual adjustment, Shared 
team 
and 
task 
knowledge, 
Adapt 
Scrum 
processes, 
Information update, Clear project/organization structure with 
clear roles and responsibilities and Discussion board. 
520
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
Hybrid:  Practices in this category are Collaborative 
technology, 
Reverse 
Presentation 
Method, 
Transactive 
memory, Division of work, Process Knowledge Tracer, 
Knowledge 
centric 
product 
life 
cycle 
management, 
Guidelines/training programs and Knowledge sharing. 
 
This categorization can be helpful in appropriately selecting 
and devising a knowledge management strategy at the start of 
GSD project. Managers should include practices from all 
categories in overall KM strategy so that the complementary 
nature of practices helps in tackling different types of issues in 
GSD projects. Following guidelines can be helpful in dealing 
with issues due to lack of KM in GSD:  
 
Encourage informal communication among team 
members.  It will produce a sense of being a team and 
develop trust. 
 
Standardize tools /methods and procedures as it will 
keep all the team members at the same level of 
understanding 
 
 Focus on building social interaction that is badly 
impacted by geographic distance. It is identified as 
main reason behind many problems identified. 
 
Arrange travelling across sites. This may be costly 
but has long range benefits. Research has shown that 
successful projects have adopted this practice. 
 
Use both personalization and codification strategies 
in the project. Regularly plan for meetings and use 
collaborative technology and documentation in these 
meetings. 
Use 
collaborative 
technology 
for 
communication mainly informal communication 
between two meetings. 
 
Collaborative technology is one of the most used 
practices and its use can be beneficial for the project. 
However, it is effective when accompanied by other 
practices such as meetings and documentation 
 
Be proactive in dealing with the problems that arise 
in GSD projects due to lack of KM. Frequency of 
GSD problems identified and KMPs used to 
addressed these problems can help you in doing so.  
We are currently working on purposing a model for the 
selection of the appropriate practice to deal with identified 
problems. A brief description of the model is provided in this 
paper. The proposed model deals with the most frequently 
occurring issues and most widely used practices to handle 
these issues. Collaborative technology, documentation and 
visits are at the core of the model indicating that these 
practices must be used to solve different kind of problems.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1.  Model for selecting KMPs. 
Knowledge transfer 
1)
Asking 
the 
colleague 
Collaborative technology 
Meetings/Visits 
 
Relationship building or 
team cohesion  
 
Finding the right people 
Communication 
Shared understanding 
1)
Asking the colleague 
2)
Clear 
project/organization 
structure with clear roles 
and responsibilities 
 
1)
Standardized tools and 
methods 
2)
Transactive memory 
3)
Documentation 
 
Knowledge sharing 
Trust 
Transactive memory 
 
521
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
 
 
Team cohesion, lack of trust and relationship 
building are the problems that arise because of lack of social 
interaction 
or 
informal 
communication. 
Collaborative 
technology provides the supports social interaction among 
team members either in meetings or through direct contact. 
Meetings and visits also help in building sense of being a team 
that produces trust. 
 
Problems at on the top require use of both 
codification and personalization practices. Knowledge sharing 
and transfer require social interaction to share tacit 
knowledge.. Collaborative technology and meetings/visits are 
the appropriate practices for this purpose. However, 
documentation is also required to share knowledge.  
V. 
CONCLUSION AND FUTURE WORK 
 We have identified through SLR, GSD issues due to lack 
of KM and KMPs to solve these issues. We have identified 
that 
knowledge 
sharing, 
shared 
understanding 
and 
communication as most prevailing issues and use of 
collaborative technology and meetings or visits are mainly 
used practices to handle these issues. We have also found that 
most of the issues in GSD due to lack of knowledge 
management are due to lack of social interaction.  
Our work facilitates the practioners in comparing which 
practice is better to adopt to deal with a certain issue. 
Frequency of each problem and practice narrates the severity 
of the problem in terms of its occurrence and effectiveness of 
a practice. This helps in identifying which problem will be 
confronted most and which practice is used widely to handle 
it.  Making an aware choice by considering all the alternatives 
and consequences leads to better result. This piece of research 
helps in making an aware choice and thus leads to better 
results by applying this choice in offshore software 
development. 
The following directions can be taken into account 
for future research: 
 
Relatively little empirical work has been done in 
software engineering. Similar situation is prevailing 
in the area of KM. Studies have been identified that 
provide only the theoretical base and lack the 
empirical evidence. This area requires consideration 
for future research.  
 
An important area in KM that lacks empirical 
evidence is KM tools. There are a lot of KM tools, 
but they lack the empirical ground. This area also has 
the potential for considering it for future research.  
 
This work can be extended by providing industrial 
perspective from Pakistan. Studies included in this 
SLR did not account any organization from Pakistan. 
A survey can be launched to identify GSD problems 
due to lack of KM and KMPs used to handle these 
issues. The results can be compared with the above 
mentioned results and a model can be proposed and 
validated to select the best practice to solve GSD 
issues due to lack of KM.  
VI. 
LIMITATIONS 
The SLR incorporates the data of last ten years. 
APPENDIX A:  RESEARCH PAPERS INCLUDED IN THE SLR AS 
PRIMARY STUDIES 
s1 
 G. Avram, “”Of Deadlocks and Peopleware - Collaborative Work 
Practices in Global Software Development,” Global Software 
Engineering, 2007. ICGSE 2007.  
s2 
 J. Bosch and P. Bosch-Sijtsema, “From integration to composition: On 
the impact of software product lines, global development and 
ecosystems,” Journal of Systems and Software, vol. 83, pp. 67-76, July 
2009. 
s3 
 J. Kotlarsky, P.C. Van Fenema, and L.P. Willcocks, “Developing a 
knowledge-based perspective on coordination: The case of global 
software projects,” Information & Management, vol. 45, pp.  96-108, 
Feburary 2008. 
s4 
G. Avram, “Knowledge Work Practices in Global Software 
Development,” The Electronic Journal of Knowledge Management,  vol. 
5. 
s5 
S. Komi-Sirvio, and M. Tihinen, “Lessons learned by participants of 
distributed 
software 
development, 
”Knowledge 
and 
Process 
Management, vol. 12, pp. 108-122, 2005. 
s6 
M. Biro, and P. Feher, “ Forces affecting offshore software 
development,” 12th European Conference on Software Process 
Improvement, EuroSPI 2005, November 9, 2005 . 
s7 
J. Kotlarsky, and I. OSHRI, “Social ties, knowledge sharing and 
successful collaboration in globally distributed system development 
projects,”  European Journal of Information Systems, vol. 14, pp. 37-48, 
2005. 
s8 
S. LEE, and H.-S. Yong, “Distributed agile: project management in a 
global environment,” Empirical Software Engineering, vol. 15, pp.  204-
217. 
s9 
K. Mohan, and B. Ramesh, “Traceability-based knowledge integration 
in group decision and negotiation activities,” Decision Support Systems, 
vol. 43, pp.  968-989, 2007. 
s10 A. Mathrani, D. Parsons, and R. Stockdale, “Workgroup structures in 
offshore software development projects: A vendor case study,” 2009 
13th Enterprise Distributed Object Computing Conference Workshops, 
EDOCW - IEEE EDOC 2009 Workshops and Short Papers, September 
1, 2009 - September 4, 2009. 
s11 A. Boden, and G. Avram,  “Bridging knowledge distribution - The role 
of knowledge brokers in distributed software development teams,” 
Cooperative and Human Aspects on Software Engineering, 2009. 
CHASE '09. ICSE Workshop on software engineering. 
s12 E. D. DAMIAN, and D. ZOWGHI, “ RE challenges in multi-site 
software development organisations.” Requirements Engineering, vol. 8, 
pp. 149-160, 2003. 
s13 C. Ebert, and & J.D MAN, “Effectively utilizing project, product and 
process knowledge,” Information and Software Technology, vol. 50, pp. 
579-594, 2008. 
s14 A. Taweel, B. Delaney, T.N. Arvanitis, and L. Zhao, “Communication, 
knowledge and co-ordination management in globally distributed 
software development: Informed by a scientific software engineering 
case study,” 2009 4th IEEE International Conference on Global 
Software Engineering, ICGSE 2009. 
522
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

s15 M. Wiener, and R, Stephan, “Reverse Presentations,” Business & 
Information Systems Engineering. 
s16 B.E. Munkvold, and I. Zigurs, “Process and technology challenges in 
swift-starting virtual teams,” Information & Management, vol. 44, pp.  
287-299, 2007. 
s17 V. Clerc, P. Lago, and H. Van Vliet, “The usefulness of architectural 
knowledge management practices in GSD,” 2009 4th IEEE International 
Conference on Global Software Engineering, ICGSE 2009. 
s18 M.Jensen, S. Menon, L.E. Mangset, and V. Dalberg, “Managing 
offshore outsourcing of knowledge-intensive projects a people centric 
approach,” International Conference on Global Software Engineering, 
ICGSE 2007. 
s19 L. Taxen, “An integration centric approach for the coordination of 
distributed software development projects,” Information and Software 
Technology, vol. 48, pp. 767-780,2006. 
s20 G. Avram, “Developing Outsourcing Relationships: A Romanian 
Service Provider Perspective,” First Information Systems Workshop on 
Global Sourcing: Services, Knowledge and Innovation Val d'IsèreFrance 
13-15 March 2007. 
s21 .Oshri, P. V. Fenema, and J. Kotlarsky, “Knowledge transfer in globally 
distributed teams: the role of transactive memory,” Information Systems 
Journal, vol. 18, pp. 593-616,2008. 
s22 J.Z. Gao, F. Itaru, et al., (2002) “Managing Problems for Global 
Software Production – Experience and Lessons,”  Information 
Technology and Management vol. 3, pp. 85-112. 
s23 A. Taweel, B. Delaney and Z. Lei, “”Knowledge Management in 
Distributed Scientific Software Development,” Global Software 
Engineering, 2009. ICGSE 2009.  
s24 L. Pilatti, J. Audy and R. Prikladnicki, “Software configuration 
management over a global software development environment: lessons 
learned from a case study,” 2006. 
s25 K. Desouza, T. Dingsoyr, and  & Y. Awazu, “Experiences with 
conducting project postmortems: reports versus stories,” Software 
Process: Improvement and Practice, vol. 10, pp. 203-215, 2005 
s26 J.A. Espinosa, S.A.Slaughter, R.E.  Kraut, and J.D. Herbsleb, (2007) 
“Team knowledge and coordination in geographically distributed 
software development”, Journal of Management Information Systems, 
24, 135-169, 2007. 
s27 A. Gupta, E. Mattarelli, S. Seshasai, and J. Broschak, “Use of 
collaborative technologies and knowledge sharing in co-located and 
distributed teams: Towards the 24-h knowledge factory,” The Journal of 
Strategic Information Systems, vol.18, pp. 147-161, 2009. 
REFERENCES: 
[1]. J. Herbsleb, and D. Moitra, Global software development. 
Software, IEEE, vol. 18,  pp. 16-20, Mar/April 2001. 
[2]. K. Desouza, Y. Awazu, and P. Baloh, “Managing knowledge in 
global software development efforts: Issues and practices. IEEE 
software, vol. 23, pp. 30-37, October 2006. 
[3]. G. Avram “Of Deadlocks and Peopleware - Collaborative Work 
Practices in Global Software Development,” Global Software 
Engineering, ICGSE 2007. 
[4]. V. Clerc, “Towards architectural knowledge management practices 
for global software development. ACM, 2008. 
[5]. B. Kitchenham, and S. Charters, “Guidelines for performing 
systematic literature reviews in software engineering. Engineering, 
Vol. 2,2007. 
[6]. D. Damian, L. Izquierdo, J. Singer, and I. Kwan, “Awareness in 
the wild: Why communication breakdowns occur,” IEEE, 2007. 
[7]. A.Boden, G. Avram, L. Bannon and V. Wulf,  “Knowledge 
Management in Distributed Software Development Teams - Does 
Culture Matter?,” Proceedings of the 2009 Fourth IEEE 
International Conference on Global Software Engineering. IEEE 
Computer Society, 2009. 
[8]. E.A. Paiva, “The test community of practice experience in Brazil.,” 
IEEE International Conference on Global Software Engineering, 
ICGSE , October 2006. 
[9]. J. Kotlarsky, P.C. Van Fenema, and L. P. Willcocks, “Developing 
a knowledge-based perspective on coordination: The case of global 
software projects.” Information and Management, vol. 45, pp. 96-
108, Feburary 2008. 
[10]. T. Byba, Review Protocol–Agile Software Development. 
[11]. B. Kitchenham, O. Brereton, and M. Turner, “EPIC Case Study 2–
Extension of a Tertiary Study,” EPIC Technical Report, EPIC-
2009-007. 
[12]. J. Bosch, and P. Bosch-Sijtsema, “From integration to 
composition: On the impact of software product lines global 
development and ecosystems,” Journal of Systems and Software, 
Vol. 83,  pp. 67-76, July 2009 .   
[13]. J.-N. LEE, M. Huynh, and R. Hirschheim, “An integrative model 
of trust on IT outsourcing: Examining a bilateral perspective,” 
Information Systems Frontiers, Vol. 10, pp. 145-163, 2008. 
[14]. D. Damian, and  D. Zowghi, “Requirements Engineering 
challenges in multi-site software development organizations,” 
Requirements Engineering, Vol.  8, pp. 149-160, 2003. 
[15]. G. Avram, “”Of Deadlocks and Peopleware - Collaborative Work 
Practices in Global Software Development,” Global Software 
Engineering, 2007. ICGSE 2007.  
[16]. S. Komi-Sirvio, and M. Tihinen, “Lessons learned by participants 
of distributed software development, ”Knowledge and Process 
Management, vol. 12, pp. 108-122, 2005. 
[17]. M. Wiener, and R, Stephan, “Reverse Presentations,” Business & 
Information Systems Engineering. 
[18]. L. Pilatti, J. Audy and R. Prikladnicki, “Software configuration 
management over a global software development environment: 
lessons learned from a case study,” 2006. 
[19]. A. Boden, and G. Avram,  “Bridging knowledge distribution - The 
role of knowledge brokers in distributed software development 
teams,” Cooperative and Human Aspects on Software Engineering, 
2009. CHASE '09. ICSE Workshop on software engineering. 
[20]. V. Clerc, P. Lago, and H. Van Vliet, “The usefulness of 
architectural knowledge management practices in GSD,” 2009 4th 
IEEE International Conference on Global Software Engineering, 
ICGSE 2009 
[21]. G. Avram, “Developing Outsourcing Relationships: A Romanian 
Service 
Provider 
Perspective,” 
First 
Information 
Systems 
Workshop on Global Sourcing: Services, Knowledge and 
Innovation Val d'Isère, France 13-15 March 2007. 
[22]. I.Oshri, P. V. Fenema, and J. Kotlarsky, “Knowledge transfer in 
globally distributed teams: the role of transactive memory,” 
Information Systems Journal, vol. 18, pp. 593-616,2008. 
[23]. L. Taxen, “An integration centric approach for the coordination of 
distributed software development projects,” Information and 
Software Technology, vol. 48, pp. 767-780,2006. 
[24]. A. Mathrani, D. Parsons, and R. Stockdale, “Workgroup structures 
in offshore software development projects: A vendor case study,” 
2009 13th Enterprise Distributed Object Computing Conference 
Workshops, EDOCW - IEEE EDOC 2009 Workshops and Short 
Papers, September 1, 2009 - September 4, 2009. 
[25]. J.A. Espinosa, S.A.Slaughter, R.E.  Kraut, and J.D. Herbsleb, 
(2007) “Team knowledge and coordination in geographically 
distributed software development”, Journal of Management 
Information Systems, 24, 135-169, 2007. 
[26]. C. Ebert, and & J.D MAN, “Effectively utilizing project, product 
and process knowledge,” Information and Software Technology, 
vol. 50, pp. 579-594, 2008. 
[27]. K. Mohan, and B. Ramesh, “Traceability-based knowledge 
integration in group decision and negotiation activities,” Decision 
Support Systems, vol. 43, pp.  968-989, 2007. 
[28]. G. Avram, “Knowledge Work Practices in Global Software 
Development,” 
The 
Electronic 
Journal 
of 
Knowledge 
Management,  vol. 5. 
 
523
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

