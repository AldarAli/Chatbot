Implementation and Evaluation of Priority Processing by Controlling Transmission
Interval Considering Trafﬁc Environment in a Dynamic Map
Kohei Hosono∗, Akihiko Maki†, Yosuke Watanabe‡, Hiroaki Takada‡ and Kenya Sato§
∗Computer and Information Science, Graduate School of Science and Engineering, Doshisha University
Kyoto, Japan 610-0321
Email: kohei.hosono@nislab.doshisha.ac.jp
†Fujitsu Limited
Kanagawa, Japan 215-8588
‡Institutes of Innovation for Future Sciety, Nagoya University
Nagoya, Japan 464-8601
§Mobility Research Center, Doshisha University
Kyoto, Japan 610-0321
Abstract—Much attention has been attracted to the research
of cooperative automatic driving that focuses on safety and
efﬁciency by sharing the data obtained from sensor information
of a vehicle. In addition, dynamic maps, a common information
and communication platform for the integrated management of
shared sensor information, are under consideration. A vehicle
always sends data to a server that manages the dynamic map,
and the server runs applications for driving support and control
on the basis of the data, so fast information processing is required.
However, congestion is a concern when data is continuously
sent from vehicles to the server at high transmission intervals
and when many vehicles are managed by dynamic maps on
the server. In addition, the data transmission interval from the
vehicle required by the road characteristics differs in actual
trafﬁc environments. Therefore, congestion can be alleviated by
adjusting the transmission interval of data from the vehicle in
consideration of road characteristics. In this paper, a platform for
a dynamic map consisting of a server and a vehicle is constructed.
We have also implemented a priority processing function that
sets the priority for each section of a lane, and adjusts the
transmission interval on the basis of the characteristics of the
road around the vehicle.
Keywords–ITS; Dynamic Map; Connected Vehicle; Automated
Driving; Priority Processing; Load Balancing.
I.
INTRODUCTION
In recent years, there has been a lot of research and devel-
opment on automatic driving, where automobiles use sensors
to recognize the surrounding environment and automatically
control driving by avoiding hazards [1]–[3]. However, in-
vehicle sensors are limited to detecting objects in the visible
range but not in the inaccessible range. Therefore, cooperative
intelligent transport systems (ITSs), which aims to improve
safety by using wireless communication technology to ex-
change information between vehicles and roadside equipment,
have attracted attention [4]–[6]. A variety of applications are
being considered, including collision warning at intersections,
provision of trafﬁc jam and signal information, and support
for merging on expressways [7]–[9]. However, the data sent
from the vehicle is currently managed separately for each
application. Therefore, dynamic maps, which are platforms for
managing and processing data in an integrated manner, have
been investigated [10]–[12].
A dynamic map is a structure in which dynamic infor-
mation is layered on top of a static road map in accordance
with the update frequency of each data. Figure 1 shows the
structure of the dynamic map. The data obtained from the in-
vehicle sensors are sent to the server that manages the dynamic
map, and the application that achieves cooperative automatic
driving runs on the basis of the data [13]. Therefore, dynamic
information transmitted from the vehicle must always be sent
to the server, and the server must process the information
and send it with low latency to the vehicle [14]. In addition,
the vehicle generally transmits to the dynamic map at 100-
millisecond intervals [15]. However, the number of vehicles
handled by the dynamic map is huge, and congestion is
a concern if all vehicles continue to transmit data at high
frequencies.
Therefore, congestion can be alleviated by adjusting the
data transmission interval, considering the trafﬁc environment
around the vehicle. Although there is controversy over the
arrangement of servers to manage dynamic maps [16]–[19],
in this study, we constructed a platform for dynamic maps
consisting of vehicles and servers. In addition, we have im-
plemented a priority processing function that divides the lane
where a vehicle travels into sections (Lane ID) on the basis
of the trafﬁc environment around the vehicle, sets the priority
for each Lane ID, adjusts the data transmission interval from
the vehicle in accordance with the priority, and evaluate its
effectiveness.
In Section 2, we describe the basic structure of the dynamic
map. In Section 3, we describe the priority processing function
by adjusting the transmission interval. In Section 4, we explain
how to determine the transmission interval considering the
trafﬁc environment. In Section 6 The effectiveness of the
system is evaluated in Section 6. In Section 7, the results of
the evaluation are discussed, and Section 8 is a conclusion.
II.
COMMUNICATION METHOD FOR DYNAMIC MAP
In the dynamic map developed in this study, the data that
a vehicle sends to the server includes vehicle ID, vehicle
position, speed, time stamp, etc [20], [21]. The vehicle po-
sition is obtained using the vehicle ’s GPS position and scan
matching [22]. A vehicle and a server are called nodes, which
33
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

Figure 1. Overview of dynamic map
are composed of four layers: an Operating System (OS), a
Communication Unit (Transmission), a Database System (DB),
and an Application (APL). Each node communicates through
a communication section, and the data sent and received is
processed by the application of each node. Figure 2 shows an
overview of the constructed dynamic map.
The vehicle and the server need to send and receive data at
a high speed, and in this study, UDP is used for communication
[23]. However, although UDP has a small header size and
can send and receive a lot of application data, there is no
guarantee that the packets will reach the user because it is
a connectionless protocol [24]. Therefore, it is necessary to
guarantee the communication by performing retransmission
processing on the application side, or the application must be
able to tolerate packet loss. In addition, since the server and
the vehicle use wireless communications, which is considered
to be less reliable than wired communication, a function to
send Acknowledgement (ACK) data was constructed.
As shown in Figure 3, the server sends data to the vehicle.
The vehicle will then send an ACK to the server to conﬁrm
the received data. During this time, the server will continue
to retransmit the data periodically until the ACK has been
received. Once received, it will stop the retransmission. This
enables the reliability of the communication to be maintained
even with UDP.
III.
PRIORITY PROCESSING BY ADJISTING THE
TRANSMISSION INTERVAL
Safe-driving support applications, such as merging and
mediation, require the position and speed information of each
vehicle [25], [26]. Such applications require the high-frequency
acquisition of location information for vehicles approaching or
being within an intersection. However, location information for
vehicles far from the intersection or moving away from it is
not needed as frequently. However, every vehicle sends data
to the server at regular intervals, regardless of the applica-
tion’s request. As a result, the processing and communication
bandwidth of the server is tight, which may interfere with the
services to support safe driving.
Therefore, we developed a function to minimize the impact
on trafﬁc and alleviate the processing load and bandwidth
congestion on the server by setting the priority in accordance
!"
#$%&'()'')*&
+,
-./
!"
#$%&'()'')*&
+,
-./
!"#$%&"
'"()"(
Figure 2. Dynamic map of server and vehicles
!"#$%&"
'"()"(
!"#$%&'%%'($
)*+,-.
!"#"
!"#"
!"#"
!"#"
!"#"
$%&
Figure 3. Sequence of resend function
with the position of the vehicle on the road and adjusting the
transmission interval from the vehicle by the communication
section of the vehicle.
In Figure 4, the server receives data at regular intervals
from vehicles over all the areas in the ﬁgure. Under this
condition, it is not possible to ﬁlter out the vehicles because
it is unclear which vehicles are placed in which trafﬁc en-
vironment. Therefore, as shown in Figure 5, when vehicle
location information is linked to road map information, it is
possible to understand the trafﬁc situation such as vehicles
heading towards or away from an intersection. As a result, it is
possible to prioritize each vehicle in consideration of the trafﬁc
environment. When the server receives data from the vehicle, it
grasps the location information of the vehicle and notiﬁes the
vehicle of the transmission interval of the data in accordance
with the priority in the response data. The vehicle transmits
subsequent data at the transmission interval indicated by the
server. By adjusting the transmission interval in accordance
with the position of the vehicle, a priority processing function
based on the data transmission interval from the vehicle in
consideration of the trafﬁc environment is achieved.
Figure 6 shows the sequence of the priority processing
function by adjusting the data transmission interval of a
vehicle. The vehicle sends data to the server through the
communication section. The server creates ACK data from the
received data and transmits it to the vehicle with the delay
time for each Lane ID to control the transmission interval. The
34
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

!"#$"#
!""#$%&'("%)#)%*+#+,-,#,-#.//01)#'*-%2$,")
Figure 4. Communication trafﬁc when transmission interval is constant
!"#$"#
!"#
!"#$%&
$%&'
$%&'
$%&'
$%&'
!"#$%&
!"#
!"#
!"#
!"#
$%&'
!"#$%&
!"#$%&
!"#$%&
())*+,-%./01234
5))*+,-%./01234
6))*+,-%./01234
Figure 5. Adjustment of transmission interval in accordance with priority
vehicle adjusts its transmission interval in accordance with the
delay time.
Figure 7 shows a ﬂowchart of the priority processing
function to adjust the data transmission interval of the vehicle.
If the destination of the ACK data sent from the server is the
vehicle, the transmission interval of the vehicle is adjusted in
accordance with that in the ACK data.
IV.
PRIORITIZATION IN CONSIDERATION OF THE TRAFFIC
ENVIRONMENT
We determined the priority of the transmission interval on
the road where a vehicle is traveling on the basis of the trafﬁc
environment around it. For example, suppose there was a road
like the one shown in Figure 8. Since applications on dynamic
maps process data from vehicles in real time, they need to
transmit data at a high frequency in and around intersections.
However, it is not necessary to transmit data at such a high
frequency on roads that are far from intersections. Therefore,
the lane is divided into sections (Lane ID) in accordance with
the characteristics of the road on which the vehicle is traveling,
and the transmission interval is determined for each Lane ID.
!"#$%&"
'"()"(
Figure 6. Sequence diagram of priority processing by transmission interval
adjustment
!"#"$%"&'()&*+,-&."+%"+
/.&01"&+"#"$%"2&
2303&322+".."2&
0,&$0."4*5
/.&01"&+"#"$%"2&
2303&'()5
6%"++$2"&0+37.-$..$,7&$70"+%34
8"72&2303&0,&."+%"+
9,
9,
:".
:".
Figure 7. Flowchart of priority processing by transmission interval
adjustment
A Lane ID is assigned to one lane of the road in Figure 8
for each road characteristic. The relationship between road
characteristics and priority is shown in Table I. For example, if
we want to apply a new road in the parking lot to the dynamic
map, we can add the data to this database and set it as a Lane
ID. The relationship between the priority and the transmission
interval is shown in Table II. On the basis of these, the Lane
ID is related to the transmission intervals. It is expected that
the network will evolve and be able to transmit large amounts
of data at higher speeds in the future. Therefore, if we want
to communicate data more frequently, we can modify this
database to brieﬂy improve the communication interval of the
entire dynamic map. The relationship between the Lane ID
and the transmission interval is shown in Table III. The server
determines the transmission interval to the vehicle based on
35
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

!"#$%#&'
!
"
#
"
! $ % % & % % $ !
"
#
"
! $
!
"
#
$
%
&
'
(
) !* !! !"
!%
!$
!&
!#
!' !(
(#)*
(#%*+,$-
.&)*/0*1)#2&
Figure 8. Priority corresponding to Lane ID
TABLE I. PRIORITY FOR ROAD CHARACTERISTICS
Symbol in the ﬁgure
Road characteristics
Priority
a
Building site center
1
b
Building site
2
c
Building site edge
3
d
Sidewalk / Side road
4
e
Lane
5
f
Intersection center
6
TABLE II. TRANSMISSION INTERVAL FOR PRIORITY
Priority
Transmission interval
1
500 ms
2
300 ms
3
200 ms
4
100 ms
TABLE III. TRANSMISSION INTERVAL FOR LANE ID
Lane ID
Transmission interval
1
200 ms
2
300 ms
3
500 ms
4
300 ms
5
200 ms
6
200 ms
. . .
. . .
this database. It is expected that the transmission intervals will
be adjusted daily while operating a dynamic map, and it will be
possible to operate the database concisely by normalizing the
database and managing it independently. As the dynamic map
utilizes this relationship, when the server receives data from a
vehicle, it determines the appropriate transmission interval on
the basis of the location information in the data, and transmits
this information in the ACK to the vehicle. That way, the
vehicle can adjust its transmission interval appropriately.
V.
EVALUATION SYSTEM
To evaluate the priority processing function built in this
study, a dynamic map system was constructed using two
PCs to act as a server and vehicle, respectively. We have
developed a dynamic map platform that covers everything from
communication to applications, and we used that application
to perform simulations in this study as well. However, the
effectiveness of the proposed system is not clear due to the
TABLE IV. SERVER AND VEHICLE CONFIGURATION
OS
Ubuntu 16.04
CPU
8-core 16-thread (3.60 GHz)
Memory
16 GB
SSD
256GB
Communication method
Wired (Up to 1 Gbps)
Synchronous method(Vehicle only)
No
TABLE V. SIMULATION CONDITIONS
Number of lanes
56
Maximum number of vehicles per lanes
89
Speed
40 km/h
Vehicle length
4.7 m
Distance between vehicles
20 m
Total number of vehicles
4984
large amount of uncertainty in using this application. Also,
a discussion of the internal behavior of the application is
not the essence of this paper. Therefore, in this simulation,
the data sent from the vehicle was assumed to be processed
by the same application on the server and return an ACK.
The vehicle acquires sensor information by the application
and sends it to the server through the communication section.
The data is temporarily stored in a queue on the server and
processed by the application in turn. Table IV shows the
speciﬁcations of the PCs used for the server and vehicle.
Note that the synchronous method only applies to the vehicle
PC. Also, since cars are considered to communicate with the
dynamic map wirelessly, we have conducted a demonstration
experiment using wireless communication by placing an edge
server at a mobile phone base station. However, the proposed
system is a dynamic map system, and the use of wireless
communication is highly dependent on the communication
method and conditions, and the uncertainties are large. Our
dynamic map platform can be applied to any communication
method, and better communication methods can be adopted
as the network evolves. Therefore, in order to evaluate the
proposed system in detail, the vehicle and the server were
connected by a wired connection, eliminating the uncertainties
of wireless communication.
Figure 9 shows the road map used for the evaluation. We
used the Manhattan model, which consists of alternating two-
lane streets on one side and four-lane streets on the other.
There are 56 lanes within a square range of 2205 m per
side, with vehicles running at regular intervals in the opposite
direction from the end of each lane. The speciﬁcations for this
simulation are shown in Table V. The length of the vehicle
was set to 4.7 m, and the distance between vehicles was set
to 20 m.
VI.
RESULT
A. Number of vehicle data to be sent and received
Figure 10 shows a comparison of the peak number of
the data received by the server. We compared three possible
instances. First, there is no retransmission by ACK and the
transmission interval from the vehicle remains ﬁxed at 100 ms.
Second, there is a retransmission but the transmission interval
remains ﬁxed at 100 ms. Third, there is a retransmission and
the transmission interval is adjusted by priority processing.
By using the priority processing function, we were able to
suppress the peak rate of the data received by the server to
36
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

!!"#$%
&'()*$++,$%
!
-.$/(0123('
!
!
!"#$%#&'
(#)*
Figure 9. Road map used in the simulation
TABLE VI. PACKET LOSS RATIO
System
Packet loss ratio
No Resend & No Priority
0.006 %
Resend & No Priority
0 %
Resend & Priority
0 %
about 70 vehicles. Also, the number of data received by the
system with resend is higher than the system without resend.
In the case of no resend, this is because the vehicle is sending
data at a high frequency and part of it is causing packet loss.
Therefore, a resend function is used, and the number of data
received is slightly increased. The packet loss rate for each
system is shown in Table VI.
We also evaluated the rate at which the server sends and
receives data. Figure 11 shows the reception and transmission
rates when there is a retransmission with and without priority
processing, respectively. The horizontal axis shows the elapsed
time from when the ﬁrst vehicle entered the road in the
evaluation range. The vertical axis shows the rate of how
much data the server is receiving and sending per second.
In the absence of priority processing, the server cannot keep
up with the data received from the vehicle, resulting in a
processing delay. Therefore, the retransmission is not ﬁnished
even after 400 seconds of transmission from the vehicle,
and the convergence takes a long time. However, by using
priority processing, we were able to reduce the rate of data
transmission and reception in the server, in which both ended
as soon as the transmission from the vehicle was completed
without any processing delay.
B. Processing Latency and Scalability
The scalability of the three systems was evaluated by
varying the number of lanes and the number of vehicles.
In the Manhattan model presented in Section V, the total
number of vehicles running during the simulation is 4984.
In this case, no processing delay occurred in the system
with priority processing, but processing delay occurred in the
system without priority processing. Therefore, by varying the
!
"!
#!!
#"!
$!!
$"!
%!!
%"!
!"#$%&%'(#)#!"#*+,"+,-.
$%&%'(#)#!"#*+,"+,-.
$%&%'(#)#*+,"+,-.
/01#!234%+#"5#+%6%,7%(#7%8,69%#(0-0
Figure 10. Maximum rate received by server
!
"!
#!!
#"!
$!!
$"!
%!!
%"!
&!!
&"!
!
"!
#!!
#"!
$!!
$"!
%!!
%"!
&!!
&"!
!"#$%&'()'*+,+',&+-.#/,,%*'0%&'.%1(-*
2/#%'3.4
5%1%/6%'3!('7&/(&/,84
9:;'3!('7&/(&/,84
5%1%/6%'37&/(&/,84
9:;'37&/(&/,84
Figure 11. Processing delay time
!
"!!!
#!!!!
#"!!!
$!!!!
!
"!!!
#!!!!
#"!!!
$!!!!
$"!!!
%&'()*+&,(-./0
123&+(45.6*7(28(9*:;<+*/
=2(>*/*4)(?(=2(@7;27;3,
>*/*4)(?(=2(@7;27;3,
>*/*4)(@7;27;3,
Figure 12. Impact of the number of vehicles on processing delay time
number of vehicles and the number of lanes, we adjusted the
total number of vehicles in the simulation and evaluated the
maximum processing delay for each. The evaluation results are
shown in Figure 12. Scalability was greatly improved by using
the priority processing function, which enabled us to process
about 15,000 vehicles with low latency. The reason why the
scalability is almost the same with respect to systems without
the priority processing function, regardless of the presence or
absence of resend, is that the packet loss rate remains very low
even in systems without resend.
37
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

VII.
DISCUSSION
As shown in Figure 10, the amount of data transmitted
by the vehicle is higher with retransmissions than without
retransmissions. However, even if there is a retransmission
process, the data volume can be signiﬁcantly reduced by
using priority processing, because the data can be reduced by
adjusting the transmission interval on the basis of the Lane ID.
In addition, as shown in Figure 11, due to the processing
delay and lack of priority processing, the server continues
to receive data from the vehicle after about 400 s when
transmissions other than retransmissions have completed. This
is because the transmission interval of data from the vehicle
is ﬁxed at 100 ms, and the processing delay is caused by
receiving data that exceeds the processing performance of the
server. However, in the case of priority processing, the trans-
mission and reception of the server ended at the same timing as
the data transmission from the vehicle was completed, and no
processing delay occurred. In Figure 12, the amount of data
that the server needs to process is greatly reduced by using
the priority processing function, which greatly improves the
scalability of the dynamic map.
Dynamic maps for safe-driving support and automatic
driving need to be communicated and processed with low
latency. In addition, the server must be able to reliably receive
data from a vehicle. Furthermore, the number of vehicles
communicating with the server is expected to increase in the
future. By using the retransmission function to ensure the
reliability of the communication between a vehicle and server,
and by using the priority processing function by adjusting the
transmission interval, the amount of data received by the server
can be reduced to about one-ﬁfth of that of a system with a
ﬁxed transmission interval. This will also reduce processing
delays and lead to smoother trafﬁc ﬂow.
VIII.
CONCLUSION
In recent years, research and development for automatic
driving has attracted much attention, but the range of recog-
nition is limited due to the limitations of in-vehicle sensors.
Therefore, research has begun on cooperative automatic driv-
ing, in which automatic vehicles share data obtained from
sensors, etc., with the aim of improving safety and efﬁ-
ciency. In addition, dynamic maps, a common information
and communication platform for the integrated management of
shared sensor information, are under consideration. A vehicle
always sends data to a server that manages the dynamic
map, and the server runs applications for driving support
and control on the basis of the data, so fast information
processing is required. However, if data is continuously sent
from vehicles to the server at high transmission intervals
and many vehicles are managed by the dynamic maps on
the server, communication congestion and processing load
becomes a concern. In addition, the transmission interval of
data from a vehicle required by the road characteristics varies
in actual trafﬁc environments. Therefore, congestion can be
alleviated by adjusting the transmission interval of data from
the vehicle in consideration of road characteristics. In this
paper, a platform for a dynamic map consisting of a server and
a vehicle is constructed. By implementing the retransmission
function, we have achieved highly reliable communication
even for UDP. In addition, a priority processing function that
adjusts the transmission interval is implemented by setting
the priority for each section of the lane (lane ID) where a
vehicle is traveling on the basis of the road characteristics
around the vehicle. We evaluated the amount of data sent and
received by the server when there were no retransmissions,
when there were resend and no priority processing by adjusting
the transmission interval, and when there were resend and
priority processing by adjusting the transmission interval. As a
result, the maximum reception rate could be reduced by about
80%. We also measured the processing delay of the server
and showed that it can be processed with low latency. These
results show that the function built in this paper is effective in
improving the efﬁciency of communication between vehicles
and servers in dynamic maps.
REFERENCES
[1]
A. Geiger, P. Lenz and R. Urtasun, “Are we ready for autonomous
driving? The KITTI vision benchmark suite,” 2012 IEEE Conference
on Computer Vision and Pattern Recognition, 2012, pp. 3354–3361.
[2]
J. Baber, J. Kolodko, T. Noel, M. Parent and L. Vlacic, “Cooperative
autonomous driving: intelligent vehicles sharing city roads,” IEEE
Robotics & Automation Magazine, vol. 12, no. 1, 2005, pp. 44–49.
[3]
L. Hobert, A. Festag, I. Llatser, L. Altomare, F. Visintainer and A. Ko-
vacs, “Enhancements of V2X communication in support of cooperative
autonomous driving,” IEEE Communications Magazine, vol. 53, no. 12,
2015, pp. 64–70.
[4]
J. Zhang, F. Wang, K. Wang, W. Lin, X. Xu and C. Chen, “Data-Driven
Intelligent Transportation Systems: A Survey,” IEEE Transactions on
Intelligent Transportation Systems, vol. 12, no. 4, 2011, pp. 1624–1639.
[5]
G. Dimitrakopoulos and P. Demestichas, “Intelligent Transportation
Systems,” IEEE Vehicular Technology Magazine, vol. 5, no. 1, 2010,
pp. 77–84.
[6]
J. Lee and B. Park, “Development and Evaluation of a Cooperative
Vehicle Intersection Control Algorithm Under the Connected Vehicles
Environment,” IEEE Transactions on Intelligent Transportation Sys-
tems, vol. 13, no. 1, 2012, pp. 81–90.
[7]
S. Bowles and H. Gintis, Ed., A Cooperative Species: Human Reci-
procity and Its Evolution.
Princeton University Press, 2011.
[8]
ETSI, “Intelligent Transport Systems (ITS); V2X Communications;
Multimedia Content Dissemination (MCD) Basic Service speciﬁcation;
Release 2,” 2019, TS 103 152 V2.1.1.
[9]
——, “Intelligent Transport System (ITS); Users and applications
requirements; Part 2: Applications and facilities layer common data
dictionary,” 2014, TS 102 894-2 v1.2.1.
[10]
J. Leonard, H. Durrant-Whyte and I. J. Cox, “Dynamic map building for
autonomous mobile robot,” IEEE International Workshop on Intelligent
Robots and Systems, Towards a New Frontier of Applications, 1990,
pp. 89–96.
[11]
H. Shimada, A. Yamaguchi, H. Takada and K. Sato, “Implementation
and Evaluation of Local Dynamic Map in Safety Driving Systems,”
Journal of Transportation Technologies, vol. 5, no. 2, 2015, pp. 103–
112.
[12]
“Dynamic Map 2.0 Consortium.” [Online]. Available: {http://www.
nces.i.nagoya-u.ac.jp/dm2/}[accessed:2020-08-12]
[13]
K. Sato, Y. Watanabe and H. Takada, “Dynamic Map as Common
Application Platform for Dynamic Geographic Information Manage-
ment,” The journal of the Institute of Electronics, Information and
Communication Engineers, vol. 101, no. 1, 2018, pp. 85–90.
[14]
S. Steven and K. Thomas, “Trafﬁc probe data processing for full-
scale deployment of vehicle-infrastructure integration,” Transportation
research record, vol. 2086, no. 1, 2008, pp. 115–123.
[15]
NTT
Docomo
and
Pasco,
“Realization
of
efﬁcient
updating
and
distribution
of
advanced
map
database.”
[Online].
Available: {https://smartiot-forum.jp/application/ﬁles/6414/7702/6769/
sympo 20160927 02 mobility 03-03.pdf}[accessed:2020-08-12]
[16]
ITS Information and Communication System Promotion Conference
Cellular
System
TG,
“Toward
advanced
ITS
and
autonomous
driving using cellular communication technology Survey Report.”
38
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

[Online].
Available:
{https://itsforum.gr.jp/Public/J7Database/p62/
Cellular system 201906.pdf}[accessed:2020-08-12]
[17]
ETSI, “Multi-access Edge Computing (MEC); Study on MEC Support
for V2X Use Cases,” 2018, GR MEC 022 v2.1.1.
[18]
——, “Intelligent Transport System (ITS); Vehicular Communications;
Basic Set of Applications; Part 2: Speciﬁcation of Cooperative Aware-
ness Basic Service,” 2018, EN 302 637-2 v1.4.0.
[19]
——, “Intelligent Transport System (ITS); Vehicular Communications;
Basic Set of Applications; Part 3: Speciﬁcations of Decentralized
Environmental Notiﬁcation Basic Service,” 2014, EN 302 637-3 v1.2.1.
[20]
C. Nanthawichit, T. Nakatsuji and H. Suzuki, “Application of Probe-
Vehicle Data for Real-Time Trafﬁc-State Estimation and Short-Term
Travel-Time Prediction on a Freeway,” Journal of the Transportation
Research Board, vol. 1855, no. 1, 2003, pp. 49–59.
[21]
S. E Shladover and T. M Kuhn, “Trafﬁc Probe Data Processing for Full-
Scale Deployment of Vehicle-Infrastructure Integration,” Journal of the
Transportation Research Board, vol. 2086, no. 1, 2008, pp. 115–123.
[22]
K. Takagi, K. Morikawa and T. Ogawa, “Road Environment Recognition
Using On-vehicle LIDAR,” 2006 IEEE Intelligent Vehicles Symposium,
2006, pp. 120–125.
[23]
J. Postel, “User Datagram Protocol,” 1980, RFC 768.
[24]
C. Shue, W. Haggerty and K. Dobbins, “OSI Connectionless Transport
Services on top of UDP Version: 1,” 1991, RFC 1240.
[25]
U. Franke, D. Gavrila, S. Gorzig, F. Lindner, F. Puetzold and C. Wohler,
“Autonomous driving goes downtown,” IEEE Intelligent Systems and
their Applications, vol. 13, no. 6, 1998, pp. 40–48.
[26]
M. Gerla, E. Lee, G. Pau and U. Lee, “Internet of vehicles: From
intelligent grid to autonomous cars and vehicular clouds,” 2014 IEEE
World Forum on Internet of Things (WF-IoT), 2014.
39
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-795-5
VEHICULAR 2020 : The Ninth International Conference on Advances in Vehicular Systems, Technologies and Applications

