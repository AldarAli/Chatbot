Types of Knowledge Exchange During Team Interactions: 
A Software Engineering Study 
 
Pierre N. Robillard and  Sébastien Cherry  
 Computer and Software Engineering 
Polytechnique Montréal   
Montréal, Canada  
(Pierre.Robillard; Sebastien.Cherry) @ polymtl.ca 
 
 
Abstract—A field study performed in a professional 
software development environment shows that the interactions 
between collocated teammates have various purposes. This 
paper 
presents 
a 
comprehensive 
study 
of 
ad 
hoc 
communications on collocated team based on video recording 
of professional developers within a large organization. It is 
found that there are four purposes for ad hoc face-to-face 
communications; collaboration, cooperation, coordination and 
socialisation.  To be able to use collective tools in distributed or 
virtual team environments we must be able to support at some 
extent the purposes of ad hoc communications that occur 
naturally in social presence. The main finding of this field 
study is that collective tools need to satisfy two different 
purposes. A cooperative system is needed to share the know-
how needed to build the product and a collaborative system is 
needed to share the knowledge needed to understand the 
functionalities to be implemented. 
 
Keywords - face-to-face interactions; teamwork; field study; 
cooperation; collaboration 
I. 
INTRODUCTION 
Cooperative system is a general term to describe tools 
design to support collective activity. To better understand 
the needs for collective systems we studied team activity in 
a collocated environment.  Although teams are common 
structures in today’s workplace, the use of collective 
systems designed to support team activities is still an 
ongoing challenge [1].  
Physical collocation mostly refers to a team room. The 
team rooms support social presence by enabling interactive 
continuous communications. Face-to-Face communication 
(FtF) is the major feature of collocated teams [2].  To be 
able to use collective tools in distributed or virtual teams, 
we must be able to support at some extent the purposes of 
ad hoc communications that occur naturally in social 
presence. The ultimate purposes of ad hoc interactions 
within co-located team are to exchange information and 
share or synchronize knowledge and mental model.  
FtF communications can occur in two different ways 
within collocated teams. One way is planned FtF 
communications, which occur during scheduled meetings 
[3] [4], another way is ad hoc FtF communications, which 
occur spontaneously when teammates are working on their 
tasks within the collocated team environment. There is a 
large variety of cooperative systems to be used in scheduled 
or planned activities. This paper reports on a field study 
designed to identify the type of collective systems most 
likely needed to support collocated ad hoc interactions 
occurring during unscheduled activities.  For example, when 
software developers are working solo on their assigned 
tasks.  
FtF communications outside the meeting rooms occurred 
spontaneously without scheduling and with unknown 
duration. They are usually very brief but sometimes they 
can last very long. These FtF interactions are ad hoc and 
opportunistic because they are triggered on a just in time 
basis and their content is unpredictable.  The initiator takes 
the opportunity to interact with a targeted teammate in 
hoping that this communication will provide him with 
relevant information to help him pursue his task or else.  
Spontaneous ad hoc FtF communication is one of the unique 
features of collocated team. 
These ad hoc FtF communications are initiated during 
“quiet time”, which is when collocated teammates are 
working by themselves while sitting at their workplace.  Ad 
hoc FtF communications require immediate attention and 
constitute for the receiver an interruption of work activity. 
Many studies have shown the importance of ad hoc 
communications in collocated team. This paper presents the 
analysis of ad hoc communications that occur during this 
quiet time and which constitute interruptions for the 
responders.  One of the purposes is to find the kind of 
knowledge that is required by the responders. 
In order to achieve a better understanding of ad hoc FtF 
communication within a software development team, we go 
further than previous studies by analyzing the inherent 
patterns and content of ad hoc communications. Such an 
understanding will provide clues to improving the 
environment for collocated software teams. Moreover, while 
studies have shown that distance raises barriers to informal 
communications, resulting in a number of coordination 
problems [5], we believe it is reasonable to expect that a 
better understanding of these informal communications will 
pave the way to further improvements of collective tools, 
131
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

which are likely to be more appropriate to the needs of the 
users [6].  
This paper reports on a field study based on video 
recording and performed in a professional software 
development environment, which last for few months. The 
purpose is to understand these natural phenomena found in 
collocated team.  The results of this study are useful to the 
participants to help them understand the purposes of this 
activity and improve its used. Researchers interested in 
knowledge sharing activities are likely to find some of the 
reasons and the content of such ad hoc communications,  
which may help them to propose adapted and optimized 
practices to support the ad hoc communication purposes.  
Section 2 presents the methodology used to capture the 
information from teammate interactions.  Section 3 presents 
the physical characteristics of the interactions.  Section 4 
presents the dynamic of ad hoc FtF communications. 
Section 5 is a discussion on the validity of this data and the 
usefulness for the participant, and the managers. 
II. 
METHODOLOGY 
The research was conducted in the form of a field study 
in an professional software engineering setting, and relied 
mostly on participant observations, as described by 
Jorgensen [7] and Babbie [8]. The goal of this field study is 
to observe a collocated team, where developers are free to 
interact with one another. Our purpose is to measure ad hoc 
FtF communications occurring in a real professional 
environment.  
The observed team was composed of 1 project manager 
and 3 software developers within a team of 12 developers, 
with varying levels of schooling (from Bachelor  to Ph.D. 
degrees in computer sciences and engineering), and 
individual experience ranging from 9 months to 5 years of 
service in the company.  
The total observation period lasted two months. For this 
study, we selected 12 regular half-day sessions from  the 23 
recorded. These sessions are distributed over the two 
months of the recording time and account for 35 hours of 
video recording, resulting in 404 vocal communications. 
A half-day session lasts 2 to 3 consecutive hours. A 
regular session is defined as a session where all teammates 
are present and where there are no special events, such as 
meetings, visitors, etc., which could disturb  the usual ad 
hoc FtF communications occurring during normal working 
activities. The researchers received human-subject approval 
from the University and the participating Company.  
In this study, participants spent almost 30% of their 
working time in ad hoc FtF communications. Most FtF ad 
hoc communications (84%) involved only two participants, 
which indicates that an ad hoc communication is directed to 
a particular teammate by its initiator.  
III. 
PHYSICAL CHARACTERISTICS OF AD HOC FTF 
COMMUNICATIONS. 
This section describes how the ad hoc communications 
are distributed among the various regular working sessions 
with respect to their purposes. After many analysis 
iterations, we characterize the ad hoc FtF communications 
according to four purposes, which are socialization, 
coordination, cooperation and collaboration.  
FtF socialization interaction supports the process by 
which individuals acquire the knowledge, social skills and 
value to conform to the norms and roles required for 
integration into the group.  
FtF coordination interaction, which is defined as 
managing ‘dependencies between activities’, is done mostly 
in scheduled meetings where participants have common 
objectives on which the exchanges are based [9]. 
Coordination is characterized by formal relationships and 
understanding of compatible missions.   
FtF cooperation interaction occurs when individuals 
reach some mutual agreement, but their works together do 
not progress beyond this level. In cooperation, activities are 
mutually agreeable but not necessarily for mutual benefit. 
Cooperation is characterized by informal relationships that 
exist without a commonly defined mission, structure or 
effort. Information is shared as needed. Typical cooperation 
activities are for example, giving a help with a debugging 
task.  
FtF collaboration interaction is a recursive process 
where two or more people work together in an intersection 
of common goals that is creative in nature—by sharing 
knowledge, learning and building consensus.  Collaboration 
is usually on demand from at least two team members that 
want to work together on a specific task.  Examples of 
collaboration are some forms of pair-programming. All the 
collaborators have a genuine interest in the same activity 
[10].  
Figure 1 shows the cumulative duration in minutes for 
each ad hoc FtF communication purpose and within each 
session.  For example, Session 1 (Column 1) sums up to  
more than 40 minutes of  ad hoc collaboration, 80 minutes 
of ad hoc cooperation,  few minutes of ad hoc coordination 
and almost 20 minutes of ad hoc socialization. We observed 
that the four purposes occurred in all of the observed 
sessions but Session 6 which had few ad hoc FtF 
communications. Figure 1 shows also that the total time 
spends in each ad hoc FtF communication is largely variable 
amongst the various sessions. It ranges from 20 minutes for 
Session 11 to 2 hours and haft for Session 8. Cooperation 
and collaborations are the main purposes of FtF ad hoc 
communications.  This figure shows that coordination and 
socialisation are not the major reasons for ad hoc 
communications during working sessions.   
Figure 2 shows that almost a three-quarter of these 
interactions are for collaboration and cooperation purposes, 
each with a frequency occurrence of 37%  and the 
remaining are for coordination and socialization. This pie 
132
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

chart illustrates that from all the ad hoc FtF communications 
observed over the recording period only 10% are for 
coordination purposes.  We recall that this is a kind of 
micro-coordination that occurred during ad hoc interactions 
only. This type of coordination does not take into account 
the formal coordination meetings that occurred regularly 
during the life-cycle of a project.  
 
 
 
Figure 1.   Cumulative duration in minutes for each of the FtF 
communications purposes within a recorded working session. 
 
This first part of the analysis tells us that ad hoc FtF 
communications occurred mostly to satisfy two needs where 
one need is related to the tasks (collaboration and 
cooperation) and where the other need is related to the 
ancillary 
activities 
of 
the 
task, 
coordination 
and 
socialization, which are less frequent and much shorter. The 
first finding is that ad hoc FtF communications are mostly 
initiated to help participants in accomplishing their tasks 
through collaboration or cooperation.  
According to this study, the coordination activities that 
occur on an ad hoc basis during the quiet time are mostly 
micro-coordination activities, which are related to team 
awareness. For example, a team member will state that his 
module is now ready for release or that he will test another 
module in the afternoon. There is little need for collective 
systems that will support micro-coordination activities, 
since it concerns less than 10% of the ad hoc interactions. 
 
 
Figure 2. Interaction frequencies for each FtF communications 
purposes. 
However, it might be useful to have a dedicated and easy 
to use tool, which may keep track of all these micro-
coordination activities, to be able to trace them back in case 
of problems or to justify delays in the development plan.  
IV. 
INITIATORS OF FTF AD HOC COMMUNICATIONS 
Who are the initiators of ad hoc FtF communications? Is 
it everyone occasionally or is it few individuals that need to 
interact more often than others? 
Since ad hoc collaboration and cooperation are the major 
cause for ad hoc FtF communications we make a closer 
analysis of their initiators.  Figure 3 shows the relative 
frequencies of ad hoc collaboration initiators. Almost 
everyone on the team (9 out of 12 people) initiate, at some 
times during our recording period, an ad hoc collaboration. 
However, one individual (MS3) initiates more that the third 
of all the ad hoc collaboration. Only two other participants 
initiate more than 10 % of the ad hoc collaboration. It has 
been found that MS3 was involved in the modification of a 
module that has been developed some times ago by other 
team members and they all want this shared module to be 
well-maintained, which resulted in close collaboration on 
this task.  There are six (6) other participants that share 39% 
of the collaboration initiatives.  
In the light of this data, we can speculate that for certain 
tasks ad hoc FtF collaboration can be supported by 
collaborative tools that are likely to facilitate knowledge 
transfer and reduce interruptions.  
 
 
Figure 3. Initiators frequencies of ad hoc FtF collaborations. 
 
Figure 4  shows the relative frequency of ad hoc FtF 
cooperation. It is observed that everyone (14 people) 
initiates ad hoc cooperation during the observation period.  
Actually, we had 2 people initiating ad hoc cooperation that 
was coming from outside this team of twelve (12).  The 
leading initiator is MS1 with almost a quarter of the ad hoc 
cooperation initiations.  MS1 is the last recruit on the team 
and this data shows clearly his needs for just-in-time help 
form others to efficiently do his task. Ad hoc cooperation 
from others (eleven individuals) account for 46% of the 
number of cooperation initiations.  
 
 
133
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

 
Figure 4. Initiators frequencies of Ftf ad hoc cooperation. 
 
Closer analysis of ad hoc cooperation data suggests 
ways to reduce cooperation interruption. One way is to 
provide a cooperative system tools that will provide answers 
and record questions from the teammates. A dedicated FAQ 
(Frequently Asked Question) system could be a good 
example of such a tool. 
V. 
DISCUSSION 
This field study analysis shed light on the various needs 
for collective systems. Ad hoc FtF communications 
involving coordination, cooperation and collaboration are  
key components to maintain high level of awareness within 
a collocated team [11][12].   Dourish and Bly [13] define 
awareness to be “an understanding of the activities of 
others, which provides a context for your own activity.” 
Maintaining awareness is the process by which individuals 
working with others transmit and acquire information, 
consciously or unconsciously, about their work efforts and 
how these efforts fit in with the on-going work of others.  
Our data shows that Ad hoc FtF communications contribute 
to the team awareness since they are not limited to few 
individuals but involve almost everyone within the team.  
Ad hoc FtF collaboration can  occur at any time during 
the working session, and developers address this need at the 
opportune time, that is, when an answer is required to 
complete the task with someone else sharing interest and 
benefit in the task. Ad hoc FtF cooperation  presents the 
same intrinsic motivation. It occurs when questions come up 
about what to do or about how to do it. Developers seek the 
help of colleagues to obtain missing information, to ask for 
advice, or for guidance  to pursue their tasks.  Collective 
systems can help increase the efficiency of these 
interactions 
by 
providing 
appropriate 
coordination, 
cooperative or collaborative system tools. 
Ad hoc FtF socialization is the less important purpose 
for ad hoc communications during normal working hours. 
This need for socialisation is probably well satisfied before 
work started, during breaks or lunch times. These periods 
have not been recorded during our study.  To facilitate 
socialisation, some organisation may use collective games 
like ESP Game [14] applied to their own products.  
Ad hoc FtF coordination occurs when there is a need to 
synchronize the activities of teammates on the tasks to 
tackle, and to plan for further activities. Coordination is not 
the predominant type of ad hoc communication in terms of 
frequency and time spent. Nevertheless, coordination 
activities are vital for maintaining synchronization of team 
activities, as well as for avoiding deadlocks or confusion in 
task organization. Coordination interactions are probably the 
easiest activities to support through electronic means for 
distributed teams. This activity is usually under the 
responsibility of the team leader and the agenda is well 
defined. Coordination is efficiently achieved today with 
shared calendar. However, micro-coordination in distributed 
teams may need some kind of support tools to maintain the 
team awareness on task progress.   
Based on the patterns described above, ad hoc FtF 
communication  seem to originate noticeably from a natural, 
unconscious, and ad hoc opportunistic process that takes 
place during software development activities. As discussed 
by Robillard [15], an opportunistic process, is defined by an 
incremental process in which knowledge is gathered as 
opportunities present themselves, and depends on the 
cognitive availability of the necessary information. On the 
opposite, a systematic process occurs when all the 
knowledge required to complete a task is available so that a 
well-structured plan can be followed.  
An opportunistic process has been observed, in the 
software development settings studied, in the form of the ad 
hoc FtF communication of teammates to gather, in a just-in-
time manner, the information they need to accomplish the 
task at hand. Collective tools may help this process by 
recording the information that is shared and more 
importantly by providing a repository where the most 
needed information can be found. Such collective tools are 
likely to reduce the interruptions initiated by FtF 
interactions.  
A.  Task-Centric Content of Ad hoc Communications 
Studies 
on 
the 
topic 
(what) 
of 
ad 
hoc 
FtF 
communications have uncovered two contrasting content 
topics. On the one hand, development environment was the 
topic in more than 40% of the total ad hoc FtF 
communications, which relate to general know-how matters. 
Artifacts prescribed by software processes are based on 
knowledge related to the software to be built. These 
artefacts do not address know-how needed to build these 
software components.  We believe that identifying and 
recording the recurring ad hoc FtF communications 
regarding these know-how interactions constitute a unique 
opportunity for optimizing cooperation interactions. For 
example, setting up a web based FAQ for development 
environment questions.   
On the other hand, the results reveal that more than a 
third (35%) of the FtF communications concerned product 
134
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

related topics, which are related to the software to be built.  
Studies on the information needs of software developers, 
identified the search for a design and code rationale  as an 
important source of ad hoc interruptions [10]. As pointed 
out by previous authors, the degree to which diverse 
contents of the software to be built are discussed, raises 
questions about the adequacy and accuracy of the artifacts 
prescribed by software processes [16]. A Wiki structure 
based on concerns may make an efficient collaboration tool. 
Developers, who are adding or retrieving information, are 
sharing the same objective, which is collaborating to 
improve the shared understanding of the product.   
Cooperation could also be efficiently computer mediated 
for well-defined tasks. A typical example of cooperation is 
when an expert helps a novice to accomplish a specific task. 
Collaboration, which is based on shared goals and trust, 
is more difficult to computer mediate because it required 
some level of awareness and socialization. Efficient 
collaboration is based on trusted relationships, mutual 
respect, and on the expected capacity of the collaborators to 
contribute 
at 
reaching 
the 
goal. 
 
Ad 
hoc 
FtF 
communications are, still today, very difficult to support in 
distributed teams [17].  
B.  Ethical Issues 
We considered the ethical implications of this research 
early on, at the planning stage, and ensured that all subjects 
and the hosting organization understood their rights and 
responsibilities before they agreed to participate [18]. All 
the individuals involved in our study were duly informed 
that their work sessions would be recorded, as well as of the 
nature of the study. They all signed the letter of agreement 
required for certification. Ethical issues were handled 
according to the established Canadian policies for research 
involving human subjects [19]. 
C.  Scientific Value 
The scientific value of this research has two 
components: the non-invasive study of the natural human 
communication in software development and the validity of 
the field study results.  The social and collocated team 
aspects of software engineering constitute the major issues 
of this study. We believe that understanding these aspects is 
crucial to understanding how practices could be computer 
supported 
by 
appropriate 
tools. 
Global 
software 
development involves a de-located team, where verbal and 
FtF interactions via electronic means continue to occur. This 
study shows some of the parameters involved in the usual 
ad hoc FtF communications among collocated team 
members. These results can serve as a basis for a more in-
depth study of the impacts of ad hoc interactions via 
electronic channels. 
The validity of the observed results mostly relies on the 
fact that they faithfully and reliably represent reality. This 
study was not an experiment, where the various parameters 
could be controlled. This paper reports observations 
performed in a real professional environment in the course 
of carrying on day-to-day business. The salient outcomes of 
these observations, regardless of the specific setup of the 
organization, are a better understanding of the raison d'être 
of ad hoc FtF communications and how they take place and 
how they can be computer supported.  
D.  Study Limitations 
One limitation of this study is inherent to most field 
study. The conclusions ensuing from this specific research 
cannot be generalized to all software development settings. 
However, owing to the characteristics that the featured 
settings have in common with the software development 
environments that can be encountered in the industry, we 
can assume that the outcomes of this study can be applied to 
a broader set of organizations. 
Moreover, the ad hoc FtF communications observed  in 
the framework of this research have been inducted in a 
maintenance context. Since maintenance contexts, where 
existing software is enhanced, predominate in software 
engineering settings, it is reasonable to assume that the 
results of this research are applicable to a broad set of 
contexts. 
Finally, the method of video recording chosen for 
collecting the data poses a number of challenges, such as the 
background noise emerging from an open work space 
hosting hundreds of developers. It has several advantages, 
however: it can be reviewed as often as needed, and it is 
considered by participants to be less intrusive than having 
an observer take notes on their activities. 
E.  Validity Concerns 
A coding scheme has been defined for the four purposes 
of ad hoc communication. Three coding agreement phases 
(inter-, intra- and extra-coder) have been applied to validate 
the data from the subjective coding. The first phase involved 
an intra-coder agreement, where a number of encoded data 
sequences were re-encoded a month later by the same coder. 
The second phase involved an inter-coder agreement, where 
the same coding operation was performed, by another coder 
who was able to understand the context and the jargon 
employed by both the participants and the primary coder. 
Finally, the third phase involved an extra-coder, were the 
same operation was performed by an experienced coder who 
was not familiar with the team work.  An index proposed by 
Perreault and Leigh [20] was used to measure the 
subjectivity of the coding. 
The indices obtained through the intra coder agreement 
were very high (.98). Inter-coder agreement show an 
agreement between the two coders with a value of 0.89, 
which is above the 0.7 limit, enabling us to deduce a strong 
agreement. The indices obtained with the exta-coder (.72) 
shows that the validity is still acceptable event when the 
coding is done by someone who is not familiar with the 
collocated team environment and its work.  
135
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

VI. 
CONCLUSION AND FUTURE WORK 
Through this research, it has been possible to shed some 
light on the main aspects of ad hoc FtF communications in 
terms of the communication mechanisms in which they are 
conducted, but more importantly their purposes and the 
content exchanged during those activities. This better 
understanding has revealed the opportunistic nature of ad 
hoc FtF communication, which constitutes the cornerstone 
for further theories and research about the phenomenon. It 
also paves the way for the introduction of improved 
practices based on collective systems to better support the 
various purposes of ad hoc communications, in collocated as 
well as de-located contexts.  Further research will also be 
required to test the efficiency of such supporting tools in 
collocated as well as in de-located environments.  
The main finding of this field study is that collective 
tools need to satisfy to different purposes.  
• 
A cooperative system is needed for the sharing 
of the know-how needed to build the product 
• 
A collaborative system is needed for the 
sharing of knowledge needed to understand the 
product functionalities.  
The structures of these two systems are different. A 
cooperative system could be structured like a FAQ 
where the experts fill out the answers.  A collaborative 
system could be structured like a Wiki where 
collaborating teammates are working together to fill out 
the information required by the shared tasks.  
ACKNOWLEDGMENTS 
This research would not have been possible without the 
agreement of the company in which it was conducted, and 
without the generous participation and patience of the 
software development team members from whom the data 
were collected. To all these people, we extend our grateful 
thanks. 
 
REFERENCES 
[1] R. F. Easley, S. Devaraj, and M. Crant, “Relating 
collaborative technology use to teamwork quality and 
performance: An empirical analysis,” J. Mng. Inf. Syst., vol. 
19, no. 4, 2003, pp. 247–268. 
[2] J. S. Olson, S. Teasley, L. Covi, and G. Olson, “The 
(currently) unique advantages of collocated work,” in 
Distributed Work, P. Hinds and S. Kiesler, Eds. Cambridge, 
MA: MIT Press, 2002, pp. 113–135. 
[3] P. d'Astous and P. N. Robillard,  “Empirical study of 
exchange patterns during software peer review meetings,” 
Information and Software Technology, vol. 44, no. 11, Aug 
2002, pp. 639-48. 
[4] P. d'Astous,  F. Detienne,  W. Visser, and P. N. Robillard,  
“Changing our view on design evaluation meetings 
methodology: a study of software technical review meetings,” 
Design Studies, vol. 25, no. 6, Nov 2004, pp. 625-655. 
[5] J. D. Herbsleb and R. E. Grinter, , “Splitting the organization 
and integrating the code: Conway's law revisited,” Proc. 21st 
Intl Conf. on Software Engineering (ICSE '99), May 1999, pp. 
85-95. 
[6] J. D. Herbsleb and D. Moitra, “Global software development 
Software,”  IEEE Software, vol. 18,  2, Apr 2001, pp. 16-20. 
[7] D. L. Jorgensen, Participant observation : a methodology for 
human studies, Newbury Park, Calif.; London: Sage 
Publications, 1989. 
[8] E. R. Babbie, The practice of social research, Belmont, CA : 
Wadsworth Thomson Learning, 2001. 
[9] T. W. Malone and K. Crowston,  “The Interdisciplinary Study 
of Coordination,” ACM Computing Surveys, Vol. 26, no. 1, 
March 1994, pp. 87-119, doi>10.1145/174666.174668. 
[10] S. M.  Hord, “A synthesis of research on Organizational 
colaboration,” Educational Leadership, Feb 1986, pp. 22-26.   
[11] P. Dourish and V. Bellotti, “Awareness and coordination in 
shared workspace,” Proc. Computer Supported Cooperative 
Work, (CSCW 92), Nov. 1992, pp. 107-114. 
[12] K. Schmidt, “The problem with 'awareness',” J. Comp. 
Supported Cooperative Work, Vol 11, Issue 3, 2002, pp. 285-
298.  
[13] P. Dourish and S. Bly, “Portholes: Supporting awareness in 
distributed work groups,”  Proc, ACM Conf on Human 
Factors in Computing Systems (CHI 92), 1992, pp. 107-114. 
[14] L. Von Ahn, "Games with a Purpose," Computer, Vol 39 (6), 
2006, pp. 92–94,  doi:10.1109/MC.2006.196 
[15] P. N. Robillard, “Opportunistic problem solving in software 
engineering,” Software, IEEE, vol. 22, no. 6, 2005, pp. 60-67. 
[16] T. D. LaToza, G. Venolia, and R. DeLine, “Maintaining 
mental models: A study of developer work habits,” Proc. 28th 
international conference on Software engineering, May 2006, 
pp. 492-501. 
[17] S.E. Poltrock and G. Engelbeck, “Requirements for a virtual 
collocation 
environment,” 
Information 
and 
Software 
Technology, vol. 41, no. 6, 1999, pp. 331-339. 
[18] J. Singer and N. G. Vinson, “Ethical issues in empirical 
studies of software engineering,” IEEE Trans. on Soft. Eng., 
vol. 28, 2002, pp. 1171-1180. 
[19] NSERC, Natural Sciences and Engineering Research Council 
of Canada. Ethical Conduct for Research Involving Humans. 
In. Interagency Advisory Panel on Research Ethics. 2005. 
[20] W. D. Perreault Jr. and L. E. Leigh, “Reliability of nominal 
data based on qualitative judgements,” Journal of Marketing 
Research, vol. 26, 1989, pp. 135-148. 
 
 
136
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-329-2
eKNOW 2014 : The Sixth International Conference on Information, Process, and Knowledge Management

