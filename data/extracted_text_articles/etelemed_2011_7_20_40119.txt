Transportation Scheduling Method for Patients in MCI
using Electronic Triage Tag
Teruhiro Mizumoto1, Weihua Sun1,2, Keiichi Yasumoto1,2, and Minoru Ito1
1Graduate School of Information Science, Nara Institute of Science Technology
2Japan Science and Technology Agency, CREST
8916-5 Takayama, Ikoma, Nara 630-0192, Japan
Email: {teruhiro-m, sunweihua, yasumoto, ito}@is.naist.jp
Abstract—A method for determining the priority of patients
treatments called triage is used to direct rescue activities during
a Mass Casualty Incident (MCI). In present disaster medicine,
patients with the highest priority (with a red tag attached) are
transported to the hospital in random order, although their
expected probability of survival (Ps) may differ. Recently, an
electronic triage tag (E-triage) that is able to sense the patient’s
vital signs in real time has been developed. Moreover, based
on the sensed vital signs, the physician’s remarks about the
patient, and medical treatment statistics, each patient’s Ps can
be estimated. In this paper, utilizing E-triage and the latest
medical treatment statistics, we ﬁrst formulate the problem of
determining a transportation order of patients that maximizes
the life-saving ratio, given the latest vital signs and temporal
variation in the survival probability of each patient, the time
for an ambulance to transport the patient to an appropriate
hospital, and other factors. Since this problem is NP-hard, we
propose a heuristic algorithm based on a greedy method that
transports patients in the increasing order of their expected
survival probability at the time they will arrive and be treated
at the hospital. To prevent the case that rescuing a patient ear-
lier results in the death of two or more patients, our proposed
algorithm also considers, for each low survival probability
patient, the two cases of rescuing the patient or not and derives
the transportation order that keeps the most patients alive.
Through simulations, we conﬁrmed that the proposed method
can transport about a 25% larger number of patients to the
hospital before their expected survival probability gets lower
than a marginal probability than conventional methods.
Keywords-ambulance scheduling; disaster management; dis-
aster medicine; electronic triage.
I. INTRODUCTION
Recently, natural disasters, terrorist attacks, and large-
scale accidents have occurred all over the world. In a mass
casualty incident (MCI, hereafter), rescue teams are likely
to be confronted with too many patients, overwhelming
the medical resources, such as the number of rescuers
(responders, paramedics, and physicians), ambulances, and
the capacities of hospitals. The lack of adequate medical
resources makes it difﬁcult to allocate necessary resources
to each patient, resulting in a Preventable Trauma Death
(PTD) in some cases. In such events, the rescuers are
supposed to apply triage to patients, which is a paper tag
with four categories (red is the most serious) attached to each
patient to determine the priority of the medical treatment
among the patients in a short time. Patients with paper tags
are then carried to the hospital based on their categories.
However, attaching paper tags is a time consuming task
and prone to human errors. Moreover, inherently, paper
tags cannot reﬂect changes in a patient condition for the
worse. Paper-based triage, then, has the following critical
drawback: there is no priority among the patients of the
same category and the rescue commander cannot grasp the
patients’ conditions in detail, resulting in random order of
transportation of the same category patients. Therefore, in
an MCI, the transported patient is not always the one who
needs ﬁrst aid most urgently.
Worldwide, many research efforts have examined ways
to improve the life-saving ratio and efﬁciency in an MCI.
There is a project “Advanced Wireless Communication Tech-
nology for Efﬁcient Rescue Operations” that is developing
an electronic triage tag (E-triage) [1]. The E-triage is a
small embedded device that can sense the vital signs of
patients such as heart rate, respiration rate, and blood oxygen
level (SpO2) in realtime. Moreover, the E-triage can send
the sensed information to a medical server through built-in
ZigBee radio communication. E-triage can help reduce the
triage operation time, avoid human error, and quickly reﬂect
changes in the patient condition.
Some studies focused on estimation of the patient’s sur-
vival probability from medical statistics have also been
applied to emergency medicine. The Trauma and Injury
Severity Score (TRISS) methodology estimates the proba-
bility of survival (Ps) based on the patient’s vital condition
and the site of trauma [2]. Ps has a closer relationship to the
actual mortality rate and it is known that more than 75% of
the patients whose Ps is under 30% at the time of arrival
at the hospital will die. Utilizing E-triage and the survival
probability estimation method together, we believe that it is
possible to schedule a transportation order of patients that
maximizes the overall life-saving ratio.
In this paper, we propose a new method for scheduling
a near-optimal transportation order of the patients from
an MCI, taking into account available medical resources
and estimating the temporal deterioration of their survival
156
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

probability. The purpose of the proposed method is to
maximize the average survival probability of all patients at
the time of arrival at the hospital as well as the number of
patients whose survival probability is more than a marginal
level α% (where α is constant number, such as 30) while
satisfying several constraints such as the hospital capacity.
The transportation scheduling problem of patients scattered
over multiple disaster sites is NP-hard and the number of
possible schedules exponentially increases as the number of
hospitals, ambulances, disaster sites, and patients increases.
Therefore, it is difﬁcult to derive an optimal solution in real-
time. In the proposed method, assuming that the vital signs
of each patient and an estimation function of Ps’s temporal
deterioration are available from a server, we calculate a
value called the marginal treatment time when each patient’s
survival probability gets lower than a predeﬁned marginal
level α%, and generate a transportation list based on the
ascending order of the patients’ marginal treatment time.
However, this greedy method may produce cases where
transporting a patient will cause two or more other patients’
death (i.e., the hospital arrival time will be after their
marginal treatment time). To prevent such cases, we propose
a more sophisticated algorithm that explores, for each patient
of top k order in the list calculated by the greedy algorithm,
the two cases of rescuing the patient or not, and derives the
transportation order that keeps the most patients alive.
Through computer simulations, we compared our pro-
posed method with some existing approaches. As a result,
we conﬁrmed that the proposed method transported about a
25% larger number of patients to the hospital before their
marginal treatment time than those existing methods.
II. RELATED WORK
In this section, we brieﬂy survey related work in the
following two categories: disaster medicine and patient
transportation scheduling.
A. Application of ICT to Disaster Medicine
Unlike ordinary medical treatment where sufﬁcient med-
ical resources are provided for each patient, in an MCI,
rescuers must provide the best treatment for many patients
with limited time and resources. In primary triage, the
responders attach paper tags to patients according to the
START method [3]. Four color codes are used to distinguish
the severity of the patients’ injury. Patients with red tags
have the highest priority and need an immediate treatment
for survival. For patients with yellow tags, a few hours delay
in treatment may not inﬂuence their survival probability.
Patients with green tags do not need a speciﬁc treatment.
Patients with black tags are already dead or considered to
have no chance of survival and are given null priority.
Rescuers transport patients to a ﬁrst aid station within
the disaster site according to their color code and secondary
triage is performed there. In secondary triage, paramedics
perform a re-triage, schedule the transportation order of the
patients, and decide the hospitals to which they will be
transported. Secondary triage aims to increase the life-saving
ratio by determining in a short time the transportation order
of patients taking into account the severity of their injuries.
In an MCI, this operation must be ﬁnished within one minute
for each patient. However, the paper triage tag method has
the following problems:
• Even when the patients’ conditions change, their triage
tags cannot reﬂect the change.
• Since there is no priority among patients with the same
color tag, they are transported in random order.
• Human errors cannot be avoided.
• The responder’s feeling of oppression (on a possible
wrong diagnosis) in deciding the color code for each
patient is heavy.
1) Electronic Triage Tag: Many studies have addressed
computerization of the triage method. Gao et al. developed
the AID-N electronic triage system with electronic triage
tags using biomedical sensors [4] [5]. This system monitors
the vital signs of patients and delivers the patient’s informa-
tion to ﬁrst responders. The Advanced Wireless Communi-
cation Technology for Efﬁcient Rescue Operations project
also studied computerization of the triage method [1] [6]
[7] [8]. This project developed an embedded sensor device
called the electronic triage tag (E-triage) capable of sensing
a patient’s vital signs and wirelessly sending/receiving the
sensed information with ZigBee. The vital signs monitored
by the E-triage are the heart rate, respiration rate, and blood
oxygen level (SpO2). Moreover, the E-triage performs a
semiautomatic triage using the patient’s vital signs based on
the START method and sends the collected information as
well as the triage result (color code) to the server located at
the rescue commander’s site. This project aimed to construct
an Emergency Medical Service (EMS) system that monitors,
aggregates, and visualizes patients’ information in real-time.
Suseki et al. proposed a system that collects vital signs from
patients equipped with E-triage in realtime and decides the
priority of treatment based on deviation of the patient’s vital
signs from a predeﬁned threshold [9].
2) Estimation of Probability of Survival: The TRISS
method, which combines Revised Trauma Score (RTS) and
Injury Severity Score (ISS), is used to estimate the prob-
ability of survival for patients [2]. RTS can be calculated
from vital signs such as the respiration rate and blood
pressure which can be measured. On the other hand, ISS
can be calculated based on the patient’s diagnosis given by
a physician.
Recently, various trauma data have been registered in a
trauma database. Some studies have provided more accurate
models to calculate the patient’s probability of survival than
the TRISS method by using a trauma database. A model
called the Harborview Assessment for Risk of Mortality
(HARM) was developed using 33,990 trauma data items
157
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

registered in the Harborview Medical Center Trauma Reg-
istry [10]. In addition, the Trauma Mortality Prediction
Model (TMPM) was developed using trauma data from
702,229 patients who sustained 2,207,823 instances of 1,322
distinct AIS injury codes registered in the National Trauma
Data Bank (NTDB) [11]. Japan Trauma Care and Research
(JTCR) makes up a report on trauma data registered in the
Japan Trauma Data Bank (JTDB) every year and describes
the relationship between Ps and the actual mortality rate in
the report [12]. The above research results suggest that if
enough trauma data can be collected, it will enable more
accurate Ps estimation and thus a more accurate temporal
Ps deterioration function than TRISS.
B. Patient Transportation Scheduling in MCI
In
current
disaster
medicine,
patient
transportation
scheduling just transports severe-condition patients (red
tags) at random. The rescue commander collects information
about patients and capacities of hospitals using a cell phone,
a transceiver, and/or a memo, then schedules the patients’
transportation order based on this collected information.
Thus, the transportation order is likely to be based on the
order in which the information is received. However, the
transportation order by this method may be far from optimal
since it cannot adapt to changes in the patients’ conditions
and newly arriving casualties. We need a better scheduling
method to transport patients to hospitals.
Jotshi et al. proposed a transportation scheduling method
considering the existence of errors in the collected informa-
tion about casualties [13]. In this method, the disaster area
is divided into clusters and some ambulances are allocated
to these clusters depending on the following three factors:
the number of patients in the cluster, the distance from
the ambulance to the cluster, and the distance from the
cluster to the hospital. In this method, the ambulances are
dispatched to clusters rather than to patients so that an error
in the patient’s information does not result in a waste of the
transportation resource. However, since this method does not
focus on the injury type and/or the condition of the patient,
it cannot identify patients who require earlier treatment for
survival than others.
C. Contribution of the Proposed Method
We focus on the transportation scheduling problem after
the secondary triage of the patients. Using the temporal
survival probability deterioration function, we deﬁne a prob-
lem that maximizes the number of patients transported to
hospitals within their marginal treatment time (the time
when each patient’s survival probability gets lower than a
predeﬁned marginal level). Since this problem is NP-hard as
we prove in Section IV-A, we propose a heuristic algorithm
that provides a semi-optimal solution in a short time, taking
into account the availability of the hospitals, the locations
of ﬁrst-aid stations, the number of ambulances, and the
number of patients. We also conduct computer simulations
to show the performance of the proposed method, supposing
an instance of a large MCI.
III. PATIENTS TRANSPORTATION SCHEDULING
PROBLEM
This section describes assumptions for the target MCI and
formulate the patients transportation scheduling problem.
A. Assumptions
We assume that several on-site ﬁrst aid stations and a
rescue command center are set up when an MCI happens.
In the command center, the patients’ transportation schedule
is planned and ambulances are dispatched to the rescue
sites. We also assume that E-triage tags have already been
attached to all patients in the rescue sites. Thus, the rescue
command center can grasp all patients’ vital signs and their
location in real time. Moreover, the center can grasp the
hospitals’ information such as capacity, possible treatment
types, location and so on, and know the transportation time
between any pair of on-site ﬁrst aid stations and hospitals.
Based on the above information, the center makes a patients’
transportation schedule and dispatches ambulances to some
of the on-site ﬁrst aid stations to transport patients as
scheduled. We assume that the temporal deterioration of
survival probability for each patient p at time t can be
estimated by a function Ps(p, t) that is calculated based
on the latest vital signs and the injury type of the patient.
According to the statistics in the Japanese Surgery of
Trauma Data Bank, 95% of patients eventually die if they
cannot receive medical treatments before their survival pri-
ority gets below 10%. The mortality rate is 80% with
survival probability below 20%, and 75% with survival
probability below 30%. This means that in order to increase
the life-saving ratio, we need to transport patients to a
hospital before their survival probability falls below a certain
threshold. We denote this threshold by α.
B. Problem Deﬁnition
Our target problem is to derive a schedule that maximizes
the number of patients who are transported from rescue sites
to hospitals before their survival probability gets lower than
α. Let P, S, H, and Am denote the set of patients, the set of
rescue sites (ﬁrst-aid stations), the set of hospitals, and the
set of ambulances, respectively. Let tl(p) = ⟨p, s, h, at, ps⟩
denote the transportation information of a patient p ∈ P
existing in the ﬁrst aid station s ∈ S where h ∈ H is a
hospital to which p is transported, at is the estimated hospital
arrival time, and ps is p’s survival probability at time at. Let
am.TL denote the list of the transportation information of
patients who are transported by ambulance am. For each
hospital h ∈ H, let h.cap denote the latest accommodation
capacity.
158
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

　
Table I
SYMBOLS USED IN PROBLEM FORMULATION
Symbol
Meaning
Symbol
Meaning
P
set of patients
p
patient
S
set of rescue sites
s
on-site ﬁrst aid station
H
set of hospitals
h
hospital
Am
set of ambulances
am
ambulance
TL
list of transportation
information
tl(p)
transportation
information
for
patient p
h.cap
accommodation
capacity of hospital h
at
estimated arrival time
at hospital
ps
survival
probability
at the hospital arrival
time
　　　
　
　　
Figure 1.
A Network Model for the Problem of Patients Transportation
　　　
We summarize the symbols used for the problem deﬁni-
tion in Table I.
The patient transportation process from rescue sites to
hospitals can be represented by a network as shown in Figure
1. Our target problem is deciding an optimal transportation
schedule consisting of the transportation information tl(p)
of each patient p.
In a disaster area, many people are injured and transported
to several on-site ﬁrst aid stations S. After a patient receives
ﬁrst aid, the patient will be transported to an appropriate
hospital selected from several hospital candidates H. To
transport patients, several ambulances Am shuttle between
on-site ﬁrst aid stations and hospitals. We assume that a
function Tt(s, h)(s ∈ S, h ∈ H) can derive the time of an
ambulance to move from on-site ﬁrst aid station s to hospital
h. For example, when an ambulance am located at hospital
h1 transports a patient p from on-site ﬁrst aid station s to a
hospital h2, the hospital arrival time at can be calculated by
at = t+Tt(s, h1)+Tt(s, h2). According to the assumptions
in III-A, the survival probability of patient p at time at
can be derived by the estimation function Ps(p, at). Based
on the above conditions, the transporting schedule TL for
all patients can be derived. Let count(Am, h) denote the
number of patients transported to hospital h in am.TL. The
number of patients to be transported to hospital h must not
exceed the accommodation capacity h.cap, this constraint is
denoted as follows.
∀h ∈ H, count(Am, h) ≤ h.cap
(1)
The transported patient’s survival probability must be no
less than α, this constraint is denoted as follows.
∀am ∈ Am, ∀tl ∈ am.TL, tl.ps ≥ α
(2)
Our goal is to maximize the number of transported
patients while satisfying constraints (1) and (2). We also
want to increase the average survival probability of the
transported patients. Thus, we deﬁne the objective function
by the following equation (3).
Maximize :
∑
am∈Am
∑
tl∈am.T L tl.ps
∑
am∈Am |am.TL|
+
∑
am∈Am
|am.TL|
(3)
subject to (1) and (2)
IV. AMBULANCE SCHEDULING ALGORITHM
A. Problem complexity
We prove that the transportation scheduling problem de-
ﬁned in Section III is NP-hard by reducing the shortest
Hamilton path problem known as a NP-hard problem to this
problem.
The shortest Hamilton path problem is a problem to
derive the shortest path that traverses each vertex in the
given graph exactly once. Let G = (V, E, cost) denote a
undirected graph with weights, where V, E and cost are the
set of vertices, the set of edges, and the weight function
cost : E → R.
Below, we transform a graph G to an instance of the
transportation scheduling problem. We use V ′ and E′ as
variables representing the set of vertices and the set of edges,
respectively. Initially, these sets are empty.
In the graph G = (V, E), for each edge (u, v) ∈ E, we
make two edges (u, w) and (w, v) by introducing a new
vertex w which is not an element of V ∪ V ′, and put these
two edges in E′ and w in V ′. Then, we construct a new
graph G′ = (V ∪ V ′, E′, cost′) where we deﬁne a new cost
function cost′ as follows.
∀(u, v) ∈ E ∃w ∈ V ′ cost(u, v)
= cost′(u, w) + cost′(w, v)
(4)
∀u ∈ V


∏
(u,w)∈E′
cost′(u, w)

 = 0
(5)
159
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

　　　
　　　
Figure 2.
Transforming a graph to instance of transportation scheduling
problem
　　　
The above equation (4) shows that the sum of the weights
of two new edges in E′ is equal to the weight of the original
edge in E. The equation (5) shows that the cost of at least
one edge that connects to each vertex u in V must be 0.
An example of transformation is shown in Figure. 2.
In G′, we regard that V and V ′ correspond to the set
of patients and the set of hospitals, respectively. In the
ﬁgure, patients are V = {a, b, c, d} and hospitals are V ′ =
{h1, h2, h3, h4, h5, h6}. We also regard that the cost for each
edge in E′ corresponds to the moving time of an ambulance
between the patient’s location and the hospital. Moreover,
let us assume that the expected survival probability of each
patient monotonically decreases and equation (2) always
holds.
From Figure. 2, it is obvious that solving the transporta-
tion scheduling problem for graph G′ is equivalent to solving
the shortest Hamilton path problem in graph G. Therefore,
the shortest Hamilton path problem is a special case of
the transportation scheduling problem and thus the latter
problem is NP-hard.
B. Heuristic algorithms
Since the transportation scheduling problem is NP-hard, it
is difﬁcult to derive the optimal solution in a practical time.
Therefore, in this section, we propose heuristic algorithms
that derive a semi-optimal solution in a short time. First,
we give a greedy algorithm called the baseline algorithm
that transports patients in increasing order of their expected
survival probabilities when arriving at the corresponding
hospitals. Then, we give a more sophisticated algorithm
called the Depth-k Brute-Forth Search (DkBFS) algorithm
that investigates for each patient of the ordered list decided
by the baseline algorithm, both cases of transporting the
patient to the hospital or skipping the patient to explore the
possibility of saving more patients with the later order.
1) Baseline algorithm: To increase the patients’ survival
probability, each patient must be transported to an appropri-
ate hospital while the patient’s expected survival probability
Figure 3.
Example of temporal variation of survival probability
Algorithm 1 Baseline algorithm
Input: Ordered patient list PL, set of hospitals H, set of
ambulances Am
1: TL ← []
2: for i = 0; i ← i + 1; i < |PL| do
3:
hc ← nearHospital(H, pi.pos)
4:
amc ← fastAmbulance(Am, pi.pos, hc)
5:
atc
←
amc.nowtime + Tt(am.pos, pi.pos) +
Tt(pi.pos, hc.pos)
6:
ps ← Ps(pi, atc)
7:
if ps ≥ α then
8:
tl ← {amc, pi, pi.pos, hc, atc, ps}
9:
TL.append(tl)
10:
amc.nowtime ← atc
11:
am.pos ← hc.pos
12:
hc.cap ← hc.cap − 1
13:
end if
14: end for
15: return TL
remains higher than the threshold α. Thus, we use the
expected survival probability estimation function Ps(p, t)
and compute the time t called marginal treatment time for
each patient p such that Ps(p, t) = α. Then, we build the
patients list PL where the patients are sorted in increasing
order of their marginal treatment time. Patients with the
earlier order need earlier transportation. For example, if there
are three patients p1, p2, and p3 whose expected survival
probability estimation functions are given in Figure. 3 and
α = 30%, the patients transportation list PL will be
[p1, p2, p3].
Given the patients transportation list PL, the set of hos-
pitals H, the set of ambulances Am, and other information
such as the ambulance travel time between each patient’s
on-site ﬁrst aid station and each hospital, we compute the
ambulance scheduling list TL indicating in what order,
when, and where each ambulance transports patients. We
160
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

show the baseline algorithm in Algorithm 1.
The baseline algorithm processes patients in the speciﬁed
order by PL and assigns for each patient the ambulance
which can transport the patient to the nearest hospital with
a capacity (Algorithm 1, line 3) in the shortest time (line 4).
Then, the algorithm computes the time at which the patient
reaches the hospital (line 5) and the patient’s expected
survival probability at that time (line 6).
Since the baseline algorithm sequentially processes pa-
tients in the order speciﬁed in PL, it cannot avoid the case
where two or more patients cannot be transported to the
hospital before their marginal treatment time by transporting
a patient with earlier order. In the following subsection, we
propose an extended version of the algorithm that can avoid
the above case and maximize the number of patients who are
transported to the hospitals before their marginal treatment
time.
2) DkBFS (Depth-k Brute-Forth Search) algorithm: We
want to explore the possibility of “making two or more
patients survive by giving up one patient.” Thus, we consider
for each patient pi in PL the two cases where pi is
transported and not. If we consider two cases for each
patient’s transportation in PL, that is, 2n patterns overall, we
can ﬁnd the optimal transportation scheduling list. However,
deriving the optimal list for a large value of n is not feasible.
Hence, we design the DkBFS algorithm so that it searches
2k transportation patterns for the ﬁrst k patients in PL and
applies the baseline algorithm to the remaining n−k patients
for each pattern.
We say that a patient is rescued if the patient’s expected
survival probability at the time when the patient reaches a
hospital is no less than α.
We show the details of the algorithm below.
(1) Compute the number of rescued patients for all cases
where each of ﬁrst k patients in PL is transported and
not transported. The baseline algorithm is applied to
(k + 1)-th and later patients.
(2) Select the pattern that has the largest number of rescued
patients and put the rescued patients and their order in
the pattern into the transportation scheduling list TL.
(3) Remove the ﬁrst k patients from PL and repeat the
steps from (1) while PL is not empty. Finish if PL
becomes empty.
For example, when PL = [p0, p1, p2, p3, p4, p5] and k =
3, the DkBFS considers all possible patterns of transporting
each of three patients p0, p1 and p2 or not. The patterns are:
{p0}, {p1}, {p2}, {p0, p1}, {p0, p2}, {p1, p2}, {p0, p1, p2}.
In the case of {p0}, the algorithm transports p0 even
if equation (2) does not hold1, but transports neither p1
nor p2. The baseline algorithm is applied to the remaining
1We consider this case because p0 cannot reach the hospital while p0’s
expected survival probability is over α, but more patients followed by p0
might be rescued due to ambulance movement.
　　　
　　　
Figure 4.
Computation time for different values of k
　　　
patients p3, p4 and p5, and the number of rescued patients
(with at least α survival probability) as well as the average
expected survival probability are derived. This process is
applied to other patterns, and the pattern with the highest
value for the objective function (3) is selected and added
to the transportation scheduling list TL. Then, the same
process is applied to the next three patients (in this example,
only two are remaining).
3) Deciding the best value for k: To know the best
value for k, we measured the total sum of expected survival
probabilities for 100 patients and the computation time by
changing the value of k between 0 and 20. We used the
same experimental conﬁguration as in Section V-A. We show
the result computed by the average of 20 runs in Figure. 4.
Here, note that the case of k = 0 corresponds to the baseline
algorithm.
Figure. 4 suggests that the total sum of expected survival
probability increases as k increases. In this example, the
value almost converged when k is over 5. The computation
time is reasonable while k is less than 13, but rapidly
increases as k increases beyond 13 since the algorithm
complexity is O(2k).
V. PERFORMANCE EVALUATION
We conducted simulation experiments to conﬁrm perfor-
mance of the proposed method. We compared our method
with several conventional methods and show the results in
the following Section V-B.
A. Simulation Conﬁguration
We consider a large-scale disaster in the simulation ex-
periment. The assumptions of the disaster area are collected
in Table II.
161
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

Table II
THE STATUS OF THE ASSUMED DISASTER AREA
# On-Site
First Aid
Stations
#
Patients
(red)
#
Hospitals
#
Ambulances
Transportation
Time
(1-way)
20
100
8
24
3min –
18min
Table III
SIMULATION RESULTS FOR PATIENTS WITH TYPICAL PS FUNCTIONS
DkBFS
BA
Jotshi-
G
Jotshi-
R
Greedy
# Rescued
Max
98
98
82
68
95
Patients
Avg
92
89
68
59
64
(Ps ≥ 30)
Min
85
80
39
47
44
Max
47
44
50
72
74
Avg. Ps
Avg
43
41
46
60
57
(rescued)
Min
40
38
43
51
43
Max
44
42
38
40
42
Avg. Ps
Avg
40
37
30
36
36
(all)
Min
36
32
19
33
31
In the disaster area, there are a total of 20 on-site ﬁrst aid
stations, and at each station there are 5 seriously-injured
(red tag) patients. There are 8 hospitals located in the
area where each hospital has 3 ambulances. Each patient’s
initial survival probability is decided at random between
70% and 90%. We suppose that there are four types of Ps
estimation functions that make Ps of a patient with 100%
initial Ps gradually fall to 0% in 55, 65, 75, and 90 minutes,
respectively. These 4 types of Ps estimation functions are
equally distributed among 100 patients (25% for each). The
conventional methods for comparison are shown below.
Greedy method: transports the current lowest survival prob-
ability patient ﬁrst.
Jotshi’s method [13]: considers only the moving time be-
tween ﬁrst aid stations and hospitals, and is denoted by
Jotshi-R. Jotshi-R is close to the actual rescue transporta-
tion activity. However, this method does not decide patient
transportation order and thus transports patients in random
order. For fairness in comparison, we prepared a modiﬁed
version called Jotshi-G method, which transports the current
lowest Ps patient ﬁrst in each on-site ﬁrst aid station.
Baseline algorithm: this method was described in Section
IV-B1.
Based on the results of preliminary experiments, we set
the value of k to 10, and the value of α to 30%.
We simulated 1000 times and calculated average, mini-
mum, and maximum numbers of rescued patients (patients
who arrived the hospital with Ps over α) and their survival
probability.
B. Results and Discussion
The simulation results are shown in Table III.
Table IV
SIMULATION RESULTS FOR PATIENTS WITH RAPIDLY DECREASING PS
FUNCTIONS
DkBFS
BA
Jotshi-
G
Jotshi-
R
Greedy
# Rescued
Max
95
95
78
63
73
Patients
Avg
85
82
63
54
51
(Ps ≥ 30)
Min
74
70
43
44
37
Max
47
44
47
71
81
Avg. Ps
Avg
43
41
44
61
64
(rescued)
Min
40
38
42
54
53
Max
41
39
35
37
39
Avg. Ps
Avg
37
33
28
33
33
(all)
Min
32
29
19
29
28
1) Number of Rescued Patients: In Table III, the proposed
method (DkBFS) showed the best performance among all
methods. The greedy method transports the current most-
serious (lowest Ps) patient ﬁrst. So, if there is no changes
in patient conditions, it achieves a good result (95 rescued
patients for the best case). However, for the cases that
patients’ conditions change, the results become worse (the
average and minimum numbers of rescued patients are 64
and 44, respectively). The results of Jotshi-G are similar
to the greedy method, but it showed a better performance
than Jotshi-R since Jotshi-G considers patients’ current Ps.
However, like the greedy method, Jotshi-G does not consider
changes in patients’ conditions. For this reason, the differ-
ence from the proposed method is large. The performance of
the baseline algorithm (BA) is similar to the DkBFS method,
but it does not optimize the schedule, causing a gap from
the DkBFS method.
2) Average Survival Probability: Average survival prob-
ability of rescued patients (rescued) of Jotshi-R and the
Greedy method is higher than the proposed methods but the
average survival probability (all) of the proposed methods
is higher. These existing methods transported some patients
with higher survival probability, but patients who need
earlier treatment were transported later. As a result, with
these methods, many patients with higher current Ps (priority
should be low) are transported earlier, but the patients with
lower Ps (priority should be high) are transported late and do
not arrive before the marginal treatment time. On the other
hand, since our proposed methods can transport patients
taking into account expected Ps at the hospital arrival time,
the number of rescued patients is higher than other methods.
3) Additional Experiments: We also conducted additional
simulation experiments in two cases where patients’ Ps
more rapidly and more slowly decreases, respectively. For
this purpose, we changed the distribution of the four Ps
estimation functions used in Section V-B2 so that 40, 30,
20, and 10% of patients have the Ps functions that make
100% initial Ps fall to 0% in 55, 65, 75, and 90 minutes,
respectively, for rapid decrease case. For the slow decrease
case, we used the reverse distribution: 10, 20, 30, and 40%.
We show the results in Tables IV and V.
162
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

Table V
SIMULATION RESULTS FOR PATIENTS WITH SLOWLY DECREASING PS
FUNCTIONS
DkBFS
BA
Jotshi-
G
Jotshi-
R
Greedy
# Rescued
Max
100
100
90
77
100
Patients
Avg
97
96
76
65
89
(Ps ≥ 30)
Min
89
86
46
52
44
Max
48
48
50
70
73
Avg. Ps
Avg
43
42
47
60
46
(rescued)
Min
40
39
44
53
41
Max
48
48
43
44
49
Avg. Ps
Avg
42
41
36
39
41
(all)
Min
38
34
22
34
36
Table IV shows that when more patients’ Ps rapidly
decreases, our proposed methods kept similar performance
to the previous experiment (in Table III), whereas the results
of other methods got worse.
Table V suggests that when more patients’ Ps slowly
decreases, the proposed methods rescued all patients in the
best case and larger number of patients for average and
worst cases than other methods. Other methods rescued more
patients than previous cases in Tables III and IV, and the
difference from our methods got smaller.
The above results suggest us that the proposed methods
can more effectively schedule patients transportation in the
cases where many patients need early treatment.
VI. CONCLUSION AND FUTURE WORK
In this paper, we formulated the transportation scheduling
problem for patients in an MCI assuming utilization of E-
triage and proved that the problem is NP-hard. To efﬁciently
solve the problem, we proposed a heuristic algorithm that
explores a search space represented by a binary tree within
depth k and ﬁnds a near-optimal transportation schedule that
achieves the maximal life-saving ratio. Through computer
simulations, we conﬁrmed that our method outperforms
other existing methods in terms of the average survival
probability and the expected number of patients surviving.
In the proposed method, we assumed that temporal de-
terioration of survival probability for each patient can be
estimated from the type of trauma diagnosed by a physician
and vital signs sensed by the E-triage tag. We believe that
an accurate estimation method will be realized in the near
future as studies about collection and analysis of patients’
trauma data progress.
As part of our future work, we will conduct computer
simulations for performance evaluation of the proposed
method when patients are dynamically added and/or the
conditions of patients change during transportation.
REFERENCES
[1] “Advanced Wireless Communication Technology for Ef-
ﬁcient
Rescue
Operations,”
http://www-higashi.ist.osaka-
u.ac.jp/research/e-triage.html. URL last accessed December
9, 2010.
[2] Champion, H.R., Copes, W.S., and Sacco, W.J.,: “The Major
Trauma Outcome Study: Establishing National Norms for
Trauma Care,” J. of Trauma, Vol. 30, pp. 1356–1365 (1990).
[3] Benson, M., Koenig, KL., and Shultz, CH.: “Disaster triage:
START, then SAVE-a new method of dynamic triage for
victims of a catastrophic earthquake,” Prehospital Disaster
Med, Vol. 11, No. 2, pp. 117–124 (1996).
[4] Gao, T., Massey, T., Selavo, L., Crawford, D., Chen, B.,
Lorincz, K., Shnayder, V., Hauenstein, L., Dabiri, F., Jeng,
J., Chanmugam, A., White, D., Sarrafzadeh, M., and Welsh,
M.,: “The Advanced Health and Disaster Aid Network: A
Light-weight Wireless Medical System for Triage,” IEEE
Transactions on Biomedical Circuits and Systems, Vol. 1, No.
3, pp. 203–216 (2007).
[5] Gao, T., Pesto, C., Selavo, L., Chen, Y., Ko, G., Lim, H.,
Terzis A., Watt, A., Jeng J., Chen, B., Lorincz, K., and
Welsh, M.: “Wireless Medical Sensor Networks in Emergency
Response: Implementation and Pilot Results,” Proc. of 2008
IEEE Conf. on Tech. for Homeland Security, pp. 187–192
(2008).
[6] Kusuda, J., Kiyama, N., Utiyama, A., Hiromori, A., Umedu,
T., Yamaguchi, H., and Higashino, T.,: “Design and Devel-
opment of Electronic Triage System Using Wireless Sensor
Networks,” IEICE technical report, Vol. 109(204), pp. 33–38
(2009).
[7] Kiyama, N., Kusuda, J., Utiyama, A., Hiromori, A., Umedu,
T., Yamaguchi, H., and Higashino, T.,: “The development
of electronic triage system for emergency life saving in
disasters,” Proceedings of the IPSJ Dicomo 2009，pp. 1837–
1848 (2009).
[8] Abe, H., Yamamoto, T., and Nishigaki, M.,: “Information con-
vey to electronic triage tag using intra-body communication:
the implementation,” Proceedings of the IPSJ Dicomo 2009，
pp. 1849–1854 (2009).
[9] Suseki, K., Sugiyama, A., Nagahashi, K., and Okada, K.,: “A
Proposal of the Automatic Triage System Providing Treat-
ment Priority,” J. of IPSJ, Vol. 51, No. 1, pp. 2–13 (2010).
[10] West, TA., Rivara, FP., Cummings, P., Jurkovich, GJ., and
Maier, RV.,: “Harborview assessment for risk of mortality:
an improved measure of injury severity on the basis of ICD-
9-CM,” J. of Trauma, Vol. 49, pp. 530–541 (2000).
[11] Osler, T., Glance, L., Buzas, JS, Mukamel, D., Wagner, J.,
and Dick, A.,: “A Trauma Mortality Prediction Model Based
on the Anatomic Injury Scale,” Ann. of Surg, Vol. 247, pp.
1041–1048 (2008).
[12] “Japan Trauma Care and Research,” http://jtcr-jatec.org. URL
last accessed December 5, 2010.
[13] Jotshi, A., Gong, Q., and Batta, R.: “Dispatching and rout-
ing of emergency vehicles in disaster mitigation using data
fusion,” Socio-Economic Planning Sciences, Vol. 43, No. 1,
pp. 1–24 (2009).
163
eTELEMED 2011 : The Third International Conference on eHealth, Telemedicine, and Social Medicine
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-119-9

