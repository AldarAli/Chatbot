Smart Home Resource Management based on Multi-Agent System Modeling Combined
with SVM Machine Learning for Prediction and Decision-Making
Kalthoum Zaouali
National School of
Engineering of Tunis-ENIT
University Tunis El Manar
Tunis, Tunisia
e-mail:
zaoualikalthoum@gmail.com
Mohamed Lassaad Ammari
Department of Electrical
and Computer Engineering
Laval University
Quebec, Canada
e-mail:
mlammari@gel.ulaval.ca
Mhamed Tabka,
Amine Choueib
Chifco Company
Tunis, Tunisia
e-mail:
mhamed.tabka@chifco.com,
amine.chouaieb@chifco.com
Ridha Bouallegue
Sup’Com, Innov’Com Laboratory
Carthage University
Tunis, Tunisia
e-mail:
ridha.bouallegue@supcom.rnu.tn
Abstract—The challenges of the Internet of Things (IoT) in a
Smart Home are the monitoring of energy consumption and
the automation of the household appliances connected to the
Wireless Sensor Networks (WSN). The Smart Home monitoring
technology has recently received great attention in the areas of
IoT, home automation and WSN monitoring. Many companies
seek to address a wide range of important issues including data
mining and analysis, energy saving, comfort and security. The
Smart Home application is inherently dynamic in the sense that
it forms time-series data with real-time changing behavior. We
seek to extract and analyze this incoming data to provide and
predict useful features for the decision-making system in a Smart
Home. This paper describes a new methodology of Smart Home
data mining analysis based on Support Vector Machine (SVM)
learning for a proposed Multi-Agent System (MAS). The key ideas
are to represent the WSN behavior exchange by the modeled
MAS, then to predict and classify features using the SVM
regression model. Based on the cross-validation performed on
the training data-set, the SVM model parameters are optimized
for each combination of features. We demonstrate the validity of
our methodology in the scenarios of emerging data recognition
using a real “Smart Life” database.
Keywords–Smart Home; distributed control; home automation;
multi-agent systems; machine learning; support vector machine;
time-series prediction.
I.
INTRODUCTION
Nowadays, human beings always seek refuge, relaxation,
security and prosperity at home, hence inﬂuencing the quality
of life. The development of integrated electronic features to re-
duce costs has opened new perspectives of automation controls
and monitoring of habitat that appears to be a task of great
social importance. In the recent years, computer technology
has been applied to the creation of Smart Homes in order to
improve the lives of people at home. A Smart Home is an
entity integrated with diversiﬁed automation, communication,
and control service functions that collaborate in a convenient
manner via intelligent tasks to provide many services, such
as energy management, comfort, security and monitoring.
The ﬁeld of Smart Home is multidisciplinary with variations
in architectures, dissimilar devices and systems, and diverse
application and features [1]. In a Smart Home environment,
the inter-operation unpredictability is one of the fundamental
reasons behind uncertainty in the interoperability among these
systems having diverse requirements, information exchanges
and federated routine.
Home automation solutions range from overviewing infor-
mation about energy consumption, presence and weather data
in illustrative forms, automating and monitoring appliances
either locally or remotely. Traditional strategies of building
control are no longer efﬁcient and smart to ensure the dynamic
pricing of electricity and the demand response application for
residential customers. To overcome this fundamental limitation
and to solve such complex and dynamic decision processes, a
Multi-Agent System (MAS) is required to provide intelligent
energy management and home automation.
The MAS is a distributed artiﬁcial intelligence system that
allows the intercommunication and the interaction between
intelligent agents. The interactions of these entities of agent
technology are made by the perception of the environment and
by executing actions according to their decisions in order to
conduct them and to study their varied situations. The agents
must cooperate to achieve the overall goals as they have only a
partial representation of their environment. The reactivity and
pro-activity actions of the MAS are depicted by sensing and
interpreting the changes in the environment in real-time [2].
Home automation can be addressed through the predic-
tion and analysis of appliances’ data, offering support for
more advanced applications, such as activity recognition. The
automatic human activity recognition requires new context-
aware domestic smart services, such as controlling voice in
Smart Home. Chahuara et al. [3] investigated an on-line
activities of daily living recognition device from non-visual,
audio and home automation sensors. The performances of this
smart service were determined by comparing several learning
models, such as hidden Markov model, the conditional random
ﬁelds, the sequential Markov logic network, the Support Vector
Machine (SVM), the random forest and the non-sequential
Markov logic network.
Predicted time-series data can be investigated for energy
consumption data mining, home automation and also home-
owner activity and behavior forecasting. Data history clusters
are utilized by machine learning, which take into account the
effects of the previous device states. Therefore, we propose
a MAS using the SVM approach to predict and classify
120
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

features. Currently, Smart Home owners have trouble to daily
control and manage the various heterogeneous smart sensors
and devices. One of the greatest challenges in the current Smart
Home ﬁeld is to deal with the collaborative control problem of
these heterogeneous smart devices using a home automation
platform.
Our contribution is to propose a universal Smart Home
automation platform architecture based on a multi-agent sys-
tem and predictive software for decision making. The pro-
posed system provides heterogeneous devices’ connectivity,
collaborative agents’ communication, human-devices’ interac-
tion and appliances’ auto-control to improve the Smart Home
automation system. In this paper, we represent the ability to
predict the behavior of Smart Home owners by monitoring the
daily appliances’ usages. Indeed, we develop a robust, ﬂex-
ible and intelligent platform integrating temporal contextual
information based on the incoming sensor data. The developed
prototype is used to forecast daily power consumption and
to estimate human actions in a Smart Home. We test the
performance of our system using statistical metrics, and the
experimental results are encouraging. The model features are
updated based on the time series analysis.
The MASs consist of an intelligent distributed artiﬁcial
system integrating Internet of Things (IoT) aspects and hu-
man cognition for Smart Home automation. The proposed
architecture is based on a virtual multi-agent platform in-
corporating services to provide Wireless Sensor Networks
(WSN) interconnectivity. This design makes it possible for
Smart Homes to include organizational aspects of human
activities, improving the auto-control and auto-programming of
appliances. The autonomous agents ﬁxed in devices consume
and provide different services to offer more distributed and
complex functionalities and capabilities.
The proposed MAS should guarantee the platform scalabil-
ity, and ﬂexibility and efﬁcient and intelligent communication
with the ability to add new functionalities for the layer of user
applications. The main functions are the fusion of incoming
information from heterogeneous sources. The suggested sys-
tem must be able to monitor automatically the Smart Home
and to predict the household energy consumption through a
predictive model with input variables regarding the weather
and space information, appliances’ state, power consumption
and the time. The WSNs are used to analyze the command
of electrical appliances and the interactions between different
sensors in order to automatically make decisions on a daily
basis.
The rest of the sections of this paper are structured as
follows. Section II describes the system architecture overview
of the proposed system modeling for home automation. Section
III deﬁnes the predicting incoming time-sequence data models.
We explain the experiments and results by considering the pro-
posed method in Section IV. Section V presents the conclusion
and some future work.
II.
RELATED WORK
A Smart Home should meet the requirements of home-
owners, including security, weather information, consumption
measurements and remote control of different categories of
smart products. According to the rapid anticipation for the
Smart Home, several commercial intelligent IoT solutions are
involved for home automation using smart sensors as a uni-
versal remote-control software-deﬁned Smart Home appliance
that can be handled safely by homeowners [4].
Smart Home applications are generally based on the IoT
and cognitive dynamic systems. Feng et al. [5] investigated
a cognitive interactive people-centric IoT in the Smart Home
to improve human life quality with intelligent control of its
setting by considering perception actions that would contribute
to the interactive IoT ecosystem.
Viswanath et al. [6] proposed the design of an IoT system
for real-time residential smart grid applications focused on
a large number of home devices communicating through a
universal IoT home gateway, a cloud back-end server, and
user interfaces offering services as well as energy manage-
ment, demand response management, dynamic pricing, energy
monitoring, home automation and home security.
The MASs are a preferred approach addressing complex
systems that rely on classical artiﬁcial intelligence extended to
a distributed computing environment and the sharing of tasks,
resources and knowledge. Their totally decentralized nature
makes them particularly suitable for this type of systems. The
MASs allow working on the overall operation of a system
by focusing on the component entities and their interactions.
However, MASs are applied increasingly in various ﬁelds
of real life due to the technological revolution and the in-
tensive use of Internet services by large companies. Several
constraints are questioned because of this application domain
diversity. Among these constraints we can cite the difﬁculty
of specifying and systematically modeling applications, the
problems related to the concepts of resource allocations and
the complexity of negotiation and inter-cooperation between
agents.
Several researches identify information security require-
ments that impact critical societal services ranging over trans-
port, home automation, energy management, industrial control,
and health services and their perceptions and attitudes on
the IoT security [7]. The ﬁelds of telecommunications and
information may also be based on MASs for network man-
agement, remote management of Smart Home and information
knowledge. In industry, the MASs are operated in production
automation processes, smart cards and cooperative robots.
Manufacturers often try to achieve the effective resolution
of issues targeted as the complexity of real-mode systems.
These issues provide an intellectual challenge to researchers
who seek to maintain soft constraint systems using agents.
Thus, realizing the integration of control, maintenance and
technical management of automation system based on MASs
can lead to the resolution of the various industrial problems.
Recently, the MASs are utilized for crop irrigation monitoring
allowing farmers to rationalize the amount of resources that
optimize crop needs. The system offeres an economical solu-
tion combining intelligence and context-awareness by merging
heterogeneous data from the WSNs [8]. Tele-medicine also
applies MASs in the supervision and assistance of the elderly
sick. They are obviously used in the ﬁeld of logistics and
information on trips [9].
Smart grid architectures consist of many autonomous
systems with partial knowledge that have to cooperate and
communicate in order to solve complex problems. The MAS is
a mature and efﬁcient mechanism that provides many features
121
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

imperatively required for smart grid applications to solve their
distributed nature problems. However, it is still difﬁcult to
provide a generic perspective on smart grid architectures.
Dynamical MASs have been used for the systematic modeling
of the cyber and electrical grids to provide ﬂexibility. Other
solutions for smart grid architectures have been explored using
a MAS to develop a decision-making support for distributed
power generation [10] and for managing electric vehicles’
charging stations [11]. Sun et al. [12] proposed a multi-
agent system framework for home automation, based on belief,
desire and intention model for an agent individual behavior
design, a regulation policy-based multi-agent collaboration
behavior design and a Petri-net method for system analysis
and evaluation.
As dynamic contributors to smart grids, Smart Home
systems have ensured interactive communication that affects
the electricity demand, generation, and bills, leading to a
reduction in the total demand curve. Smart Grid modeling
is based on a multi-agent system that designs each Smart
Home as an autonomous agent making rational decisions for
power generation, storage, and trading features founded on
the expected utilities they offer. The individual decisions of
these home agents signiﬁcantly reduce electricity costs, which
encourages conventional homes to purchase their own local
generation-storage systems and to beneﬁt from the different
operational conditions.
Integrating the IoT with Cloud computing and Web ser-
vices, Javed et al. [13] investigated model-based wireless
sensor nodes for Smart Home monitoring and HVAC using
machine learning like the artiﬁcial neural network to estimate
setpoints for controlling the heating, ventilation, and cooling
of the Smart Home while reducing human intervention.
The energy consumption cost reduction requires a dynamic
demand response and distributed energy resource management.
Therefore, home automation trends towards IoT and ambient
intelligence technologies for device self-control. Ruta, et al.
[14] put forward a distributed multi-agent framework for home
and building automation and energy management, based on a
semantic improvement of domotic standards using the discov-
ery and orchestration of formal annotation-based resources to
support the semantic characterization of user proﬁles and de-
vice functionalities. In [15], the authors suggested an adapting
automation architecture for activity recognition in Smart Home
based on semi-supervised learning algorithms and Markov
models combining the data observations and the feedback of
users decisions. Jose et al. [16] studied the various security
issues and veriﬁcation approaches to improve Smart Home
security. They proposed a device ﬁngerprinting algorithm that
considered the device’s geographical location, username and
password of utilizers as well as the device used to access the
home.
III.
MULTI-AGENTS SYSTEM MODELING FOR HOME
AUTOMATION
Using an agent language like Java Agent Development
(JADE) framework, the MASs are able to share information,
to exchange messages and to solve complex problems. The
JADE is a software framework fully implemented in Java
language to simplify the development of the MAS using
graphical tools for debugging and deployment according to the
Foundation for Intelligent Physical Agents (FIPA) standard and
the Agent Communication Language (FIPA-ACL) speciﬁca-
tions [17]. The FIPA interaction protocols between agents are
being developed to deﬁne a standard communication structure
ensuring the conduct of conversations between these agents.
These protocols use a manager agent to offer the performance
of a task in terms of appropriate resources and expertise
by selecting the best proposal returned and then begins the
necessary exchanges with the elected ofﬁcial. An agent asks
another agent to perform an action and inform the initiator
about the structure in which agents exist and operate [18].
A. Agents Functionalities
In the MAS-based Smart Home setting, we use four con-
tainers where each container is a room of the house embedded
in a main container (Smart Home container) as shown in
Figure
1. These containers interact to estimate the presence
of owners and their provided activity in each Smart Home
room. Every container consists of a set of agents instances’ that
represent the equipment or environment variables (temperature,
humidity, etc.) responsible for learning the habits, equipment
states, environmental conditions and situations of the home
owners in order to supervise, control and take appropriate
actions. Each agent has a speciﬁc role. The proposed MAS
Figure 1. General framework for a Smart Home system
architecture for each container is presented in Figure 2. The
architecture is a hierarchical MAS consisting of eight agent
groups constituting the objects of a container that meet their
goals through the collaboration with other containers (agent
groups). The speciﬁc roles of agents forming the MAS system
consist of:
•
“Sensor Agent”: This agent is responsible for mon-
itoring and controlling environment sensors by re-
ceiving messages from the same container agents and
saving them in the database. These messages can be
transmitted to the “Electrical Outlet Agent”, the “Air
Conditioner Agent” and the “Lamp Agent” in order
to predict the user actions.
•
“Electrical Outlet Agent”: This agent receives the data
sent by the “Sensor Agent” and uses it as an input of
122
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

Electrical Outlet Agent
Lamp Agent
Air Conditioner Agent
Sensor Agent
Humidity Agent
Luminosity Agent
Presence Agent
Temperature Agent
Inform
Inform
Inform
Inform
Inform
Inform
Inform
Multi-Agents System
Container
Figure 2. Proposed MAS-based architecture for Smart Home automation
the SVM classiﬁer to predict the decision states of the
electrical outlet.
•
“Air Conditioner Agent”: The following agent receives
the data sent by the “Sensor Agent” and uses it as an
input of the SVM classiﬁer to predict the states of the
air conditioner.
•
“Lamp Agent”: The required data to predict the states
of the lamp are sent by the “Sensor Agent”. The
“Lamp Agent” uses this information as an input of
the SVM classiﬁer.
•
“Temperature Agent”: It treats the prediction of the
temperature variable for a deﬁned period using the
SVM machine learning. Then, the results are sent to
the “Sensor Agent” embedded in the same container.
•
“Humidity Agent”: It predicts the humidity variable
for a deﬁned period using the SVM machine learning.
The results are sent to the “Sensor Agent” embedded
in the same container.
•
“Luminosity Agent”: It predicts the luminosity vari-
able for a deﬁned period using the SVM machine
learning. The results are sent to the “Sensor Agent”
embedded in the same container.
•
“Presence Agent”: It predicts the presence state for a
deﬁned period using the SVM machine learning. The
results are sent to the “Sensor Agent” embedded in
the same container.
IV.
PREDICTING INCOMING TIME-SEQUENCE DATA
MODEL
A. SVM model for prediction and making-decision
In order to predict and classify the measured results,
numerous methods are applied. The SVM method seems to
be better suited to this problem saw his ability to handle a
small amount of data. The SVM models have been widely
used to solve classiﬁcation and regression problems.
1) Classiﬁcation function: The SVM separates the different
classes of data, by a hyperplane corresponding to the following
decision function:
f(x) = sign(⟨w, φ(x)⟩ + b)
(1)
where x is a set of observations, w is the vector of coefﬁcients
and b is a noise constant.
This supervised machine learning seeks to deduce the function
Φ : x ⊂ ℜd → {−1; 1} from a set of observations that will
correctly classify a maximum number of vectors xi by
describing the optimal hyper-plane between the two classes:
Considering two classes of points, scored −1 and 1, we have
a set of N vectors xi ∈ X ⊂ ℜd, i ∈ [1, N] ( d is the input
space dimension) with their associated class yi ∈ {−1; 1}.
The constrained quadratic optimization problem can be solved
by w = P
i αiΦ(xi) in terms of a subset of training patterns
N. The classiﬁer capacity results in the assignment of a new
unknown point in the right class.
The classiﬁcation function is given by the minimum of the
following function:
f < w, ξ >= min 1
2 ∥w∥2 + C
X
i
(ξi)
(2)
subject to:
yi(⟨w, Φ(xi) + b) ≥ 1 − ξi⟩
ξi ≥ 0
where C is a pre-speciﬁed value, and ξi are the class variables.
Due to the rich theoretical bases and the possibility of trans-
ferring the problem to a large space of features, the SVM can
provide a good generalization performance. The sensors send
pairs of values and activities forming the training set.
This nonlinear binary classiﬁcation problem requires a max-
imum optimization model based on the Lagrange multipliers
technique and the Kernel function. The SVM classiﬁer man-
ages its nonlinear nature by replacing each scalar product of
the weight of activities in a dual form with the Kernel function.
The SVM solution w can be shown using the kernel method
as follows:
w =
X
i
yiαiΦ(xi)
The support vectors’ coefﬁcients occur when a point (xi, yi)
meets the constraint found by minimizing the following equa-
tion:
W(α) =
X X
j=1
αi − 1
2
X
i=1
X
j=1
(αiαjyiyjK(xi, xj))
(3)
subject to:
0 ≤ αi ≤ C
X
i
yiαi = 0
123
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

2) Regression function: When the SVM are used in regres-
sion problems to predict real values, we will talk about the
“Support Vector Regression” (SVR) technique. Let consider
all of training points (x1, y1)...(xN, yN) where xi ∈ X ⊂
ℜd, i ∈ [1, N] and the output target yi ∈ Y ⊂ ℜ1, i ∈ [1, N],
with the condition C ≻ 0 and ϵ ≻ 0. The SVR can also
perform regression and estimate the accuracy by computing
the scale parameter y = f(x), where f(x) is the estimated
decision function. This function ignores errors that are smaller
than a certain threshold ϵ ≻ 0, thus creating a tube around
the true output. The optimal regression function of the two
subjects
⟨w, Φ(xi)⟩ + b − yi ≤ ϵ − ξ−
yi − ⟨w, Φ(xi)⟩ + b ≤ ϵ − ξ+
is given by:
f < W, ξ >= min 1
2 ∥w∥2 + C
X
i
(ξ−
i ) + C
X
i
(ξ+
i )
(4)
where C is a pre-speciﬁed value, and ξ−
i , ξ+
i are gap variables
representing upper and lower constraints on system outputs.
The dual form of SVR using the Kernel function is:
max
α,α∗ W(α, α∗) = max
α,α∗
X
i=1
α∗
i (yi − ϵ) − αi(yi + ϵ)
− 1
2
X
i=1
l
X
j=1
(α∗
i − αi)(α∗
j − αj)K(xi, xj)
(5)
with P
i=1(α∗
i − αi) = 0 et 0 ≤ αi, α∗
i ≤ C.
The result regression function of the resolution of the above
equation by determining the Lagrange multipliers αi, α∗
i is
given by:
f(x) =
X
SV s
( ¯αi − ¯
α∗
i )K(xi, xj + ¯b)
(6)
with:
¯b = −1
2
l
X
i=1
(αi − α∗
i )(K(xi, xr) + K(xi, xs))
(7)
< ¯w, x >=
l
X
i=1
(αi − α∗
i )K(xi, xj)
(8)
Our research provides the opportunity to learn the behavior
of a resident of a Smart Home from all detected usual tasks.
The appropriate equipment, according to the “Electrical Outlet
Agent”, the “Air Conditioner Agent” and the “Lamp Agent”,
request the “Sensor Agent” to look for speciﬁc data to select
the equipment criteria grouped by the “Temperature Agent”,
the “Humidity Agent”, the “Luminosity Agent” and the “Pres-
ence Agent”. The “Sensor Agent” returns the requested list
which will be processed by the equipment agents. Finally,
the results that meet the needs of the resident return to the
“Sensor Agent”. The interactions between agents performing
the learning algorithm are illustrated by sequence diagrams
shown in Figures 3 and 4.
After making its predictions, the MAS sends notiﬁcations
Agents: Temperature,
Luminosity, Humidity
and Presence
LibSVM
Sensor Agent
DataBase
1: Select Data
2: Data selected
3: SVM-Scale()
4: Data scaled
5: SVM-Train()
6: Model
7: SVM-Predict()
8: Data predicted
9: Send Predicted Data
10: Save Data
Figure 3. Interaction sequence diagram for temperature, luminosity, humidity
and presence agents
Sensor Agent
Agents: Temperature,
Luminosity, Humidity
and Presence
LibSVM
DataBase
1: Select Data
2: Data selected
3: SVM-Scale()
4: Data scaled
5: SVM-Train()
6: Model
7: Send Message
8: Get Message
9: SVM-Predict()
10: Data predicted
11: Save Data
Figure 4. Interaction sequence diagram for Sensor Agent
to the user who can consult the list of predicted tasks.
Following its consulted results, the user can react by canceling,
conﬁrming or changing the date and the system will ﬁnally
save these changes.
B. Quality and precision criteria
To assess the quality of our models, we will mainly look at
their respective predictive performances measured by the Mean
Squared Error (MSE). As a matter of fact, we are working with
hourly-normalized data and we will model each hour indepen-
dently from one another, which is a common choice given the
124
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

type of data, hence leading to a model of 24 separate daily
hours. Indexing the respective MSE criteria of these models
by the instant i = 0, ..., 23, to which they are associated, and
given their respective observations y1, i, ..., yN,i, these models
return 24 t-day-ahead predictions, deﬁned as the expectations
of the predictive distributions, i.e., for i = 0, .., 23:
x = 1
N
N
X
i=1
(ˆyiyi)2
(9)
In our case study, we managed to set up a training set of three
months in 2015 so as to predict the values of the different
variables for June 2016.
V.
EXPERIMENTS AND RESULTS
The features are obtained from the WSN installed in the
Smart Home. These features are classiﬁed using the SVM
machine learning. The development of the classiﬁer takes
place using the LIBSVM library of the framework JADE.
The LIBSVM toolbox generates a structure containing the
type of the SVM, the kernel type, the number of support
vectors, the number of classes, the class labels and the offset.
It is employed both in the training and testing phases. Several
SVM structures are trained on all the possible combinations
of signals. A prediction can be obtained with a combination
of previously predicted signals.
In our case study, the SVM machine learning is made in four
steps (LIBSVM functions):
1)
“SVM-Scale” function for data normalization.
2)
“SVM-Train” function for training data to obtain a
prediction model.
3)
“SVM-Predict” function using the model to make
predictions about the classes or the values in the case
of regression.
4)
“SVM-Test” function to calculate the model perfor-
mance. In this step, we select the data whose class
or values are known (for regression) and we use the
model to predict their class and value, and in the end,
we compare the two real and predicted classes (or the
real and predicted values). To assess the quality of the
predictions obtained in the “SVM-Test”, the MSE is
used as a measure of a prediction error.
We choose to use as “Input-Attributes” the time and the date
and as “Input-Labels” the class or the regression values for
the prediction of power consumption, presence, open/close and
environment variables (temperature, humidity and luminosity).
The SVM model parameters are speciﬁed in Table I. We
construct an SVM learning scheme to predict the environment
variables and power consumption in a Smart Home. We use
the “Smart Life” datasets for validating the performance of
our proposed architectures. The “Smart Life” datasets consists
of independent datasets collected from a couple of apartments
for a year using different sensors. The sensors are installed in
everyday objects, such as refrigerator, and light switches, etc.
We thoroughly analyze a full year historical data and utilize
them to conﬁgure a large number of input and output datasets
for the SVM learning. The proposed SVM-based prediction
model can simultaneously predict the future amount of time-
series data. Throughout the experiments, the proposed SVM-
based prediction model shows the highest prediction accuracy,
compared to other prediction models, such as the conventional
time-series and the artiﬁcial neural network models. As a
result, these prediction data can be effectively utilized for
behavior recognition and energy management systems in Smart
Home.
Using the MSE function to calculate the performance of the
SVM predictor, we show in Figure 5 and Figure 6 that the
prediction for the time series with low intensity of harmonic
variations, as the temperature variable (MSE = 8.57), is more
performant than the high intensity of harmonic variations, like
the humidity variable (MSE = 18.6948). The Performance
of the SVM model for the air conditioners’ operating status
regression is perfect with an MSEvalue = 0.57, describing
the conformity of the predicted equipment state values to the
real ones. These simulations conﬁrm the performance of the
SVM predictor, compared with the real values, as shown in
Figure 7.
We propose the SVM machine learning to automate the
Figure 5. Performance of SVM model for temperature prediction (MSE=
8.57)
Figure 6. Performance of SVM model for humidity prediction (MSE=
18.6948)
125
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

TABLE I. SVM MODEL PARAMETERS FOR EACH VARIABLE
State
Presence
Door-sensor
Temperature
Humidity
Luminosity
Power
Hour
Hour
Hour
Hour
Hour
Hour
Hour
Minute
Minute
Minute
Minute
Minute
Minute
Minute
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Month
Month
Month
Month
Month
Month
Month
Attributes
Year
Year
Year
Year
Year
Year
Year
Class ’0’ : OFF
Class ’0’ : Absence
Class ’0’ : Close
Inputs
Labels
Class ’1’ : ON
Class ’1’ : Presence
Class ’1’ : Open
Real values
Real values
Real values
Real Values
SVM-Train
Outputs
Model
Regression Model
Regression
Regression
Classiﬁcation
Classiﬁcation
Classiﬁcation
Classiﬁcation
Hour
Hour
Hour
Hour
Hour
Hour
Hour
Minute
Minute
Minute
Minute
Minute
Minute
Minute
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Month
Month
Month
Month
Month
Month
Month
Inputs
Attributes
Year
Year
Year
Year
Year
Year
Year
Class ’0’ : OFF
Class ’0’ : Absence
Class ’0’ : Close
SVM-Predict
Outputs
Labels
Class ’1’ : ON
Class ’1’ : Presence
Class ’1’ : Open
Real values
Real values
Real values
Real Values
Hour
Hour
Hour
Hour
Hour
Hour
Hour
Minute
Minute
Minute
Minute
Minute
Minute
Minute
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the month
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Day of the week
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Week of the month
Month
Month
Month
Month
Month
Month
Month
Attributes
Year
Year
Year
Year
Year
Year
Year
Class ’0’ : OFF
Class ’0’ : Absence
Class ’0’ : Close
Inputs
Labels
Class ’1’ : ON
Class ’1’ : Presence
Class ’1’ : Open
Real values
Real values
Real values
Real Values
SVM-Test
Outputs
Performance
MSE
MSE
MSE
MSE
MSE
MSE
MSE
process of air conditioning in a home as a case study. We use
the SVM machine learning to predict the ambient temperature
and the condition and value of the power of the air conditioner
at a speciﬁc date-time. These recorded features will be useful
for the decision-making and automatic control of the air condi-
tioner. The SVM classiﬁer determines the temperature set point
belonging to a predeﬁned regression class. The experimental
results on the real world application “Smart Life” demonstrate
the effectiveness of our approach in case of linear classiﬁcation
and regression. The SVM model has a remarkable learning
ability in a distributed intelligence system.
Figure 7. Performance of SVM model for air conditioner operating state
regression (MSE= 0.57)
VI.
CONCLUSION AND FUTURE WORK
In this paper, we have started by introducing the IoT and
the MASs and their applications to design our MAS architec-
ture for Smart Home automation. Indeed, we have proposed
a new active learning algorithm based on the SVM approach
adopted to solve the problem of prediction and multi-class
classiﬁcation of WSN devices installed in a Smart Home. The
technical experience requires to manipulate the proposed Smart
Home scenario with the machine learning algorithm, the MAS
system and the Android mobile system. Our solution must be
well integrated into the professional company IoT application.
For future work, we will use a hybrid algorithm combining
the hiden Markov model and the SVM model for features’
prediction and the decision tree model for making decision
to remotely control intelligent households via an Android
application. Nevertheless, we can extend the realization of
this project by enriching the use of more accurate intelligent
sensors. In addition, we can optimize our solution using a
consistent big-data learning base for real-time prediction of
sequential data.
ACKNOWLEDGMENT
This work is part of a PhD thesis supported by “PASRI-
MOBIDOC” Project ﬁnanced by the EU, “Chifco” company,
“Innov’COM” laboratory, and National School of Engineering
of Tunis-ENIT.
REFERENCES
[1]
M. A. C. Lozada and F. D. la Rosa R., “Simulation platform for
domotic systems,” in Proc. IEEE Colombian Conf. Communications
and Computing (COLCOM), Jun. 2014, pp. 1–6.
[2]
Y. Zhang, Q. Wu, X. Tang, Q. Wu, and Z. Ma, “Progresses for multi-
agents system models,” in Proc. 2nd Int Computer and Automation
Engineering (ICCAE) Conf, vol. 3, Feb. 2010, pp. 44–48.
[3]
P. Chahuara, A. Fleury, F. Portet, and M. Vacher, “On-line human activ-
ity recognition from audio and home automation sensors: Comparison
of sequential and non-sequential models in realistic smart homes1,”
Journal of Ambient Intelligence and Smart Environments, vol. 8, no. 4,
2016, pp. 399–422.
[4]
Y.-W. Lin, Y.-B. Lin, C.-Y. Hsiao, and Y.-Y. Wang, “Iottalk-rc: Sensors
as universal remote control for aftermarket home appliances,” IEEE
Internet of Things Journal, vol. 4, no. 4, 2017, pp. 1104–1112.
[5]
S. Feng, P. Setoodeh, and S. Haykin, “Smart home: Cognitive interactive
people-centric internet of things,” IEEE Communications Magazine,
vol. 55, no. 2, 2017, pp. 34–39.
[6]
S. K. Viswanath and et al., “System design of the internet of things for
residential smart grid,” IEEE Wireless Communications, vol. 23, no. 5,
2016, pp. 90–98.
[7]
M. Asplund and S. Nadjm-Tehrani, “Attitudes and perceptions of iot
security in critical societal services,” IEEE Access, vol. 4, 2016, pp.
2130–2138.
[8]
G. Villarrubia, J. F. D. Paz, D. H. Iglesia, and J. Bajo, “Combining
multi-agent systems and wireless sensor networks for monitoring crop
irrigation,” Sensors, vol. 17, no. 8, 2017, p. 1775.
126
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

[9]
R. M. Saleem, A. Muhammad, and A. M. Martinez-Enriquez, “Remote
patient monitoring and healthcare management using multi-agent based
architecture,” in Proc. Ninth Mexican Int Artiﬁcial Intelligence (MICAI)
Conf, Nov. 2010, pp. 118–123.
[10]
M. H. Cintuglu and O. A. Mohammed, “Simulation of digitalized power
system using pmu and intelligent control,” in Proc. IEEE Industry
Applications Society Annual Meeting, Oct. 2013, pp. 1–8.
[11]
C. Yilmaz, S. Albayrak, and M. Ltzenberger, “Smart grid architectures
and the multi-agent system paradigm,” ENERGY, 2014, pp. 90–95.
[12]
Q. Sun, W. Yu, N. Kochurov, Q. Hao, and F. Hu, “A multi-agent-based
intelligent sensor and actuator network design for smart house and home
automation,” Journal of Sensor and Actuator Networks, vol. 2, no. 3,
2013, pp. 557–588.
[13]
A. Javed, H. Larijani, A. Ahmadinia, and D. Gibson, “Smart random
neural network controller for hvac using cloud computing technology,”
IEEE Transactions on Industrial Informatics, vol. 13, no. 1, 2017, pp.
351–360.
[14]
M. Ruta, F. Scioscia, G. Loseto, and E. Di Sciascio, “Semantic-based
resource discovery and orchestration in home and building automation:
A multi-agent approach,” IEEE Transactions on Industrial Informatics,
vol. 10, no. 1, 2014, pp. 730–741.
[15]
A. B. Karami, A. Fleury, J. Boonaert, and S. Lecoeuche, “User in the
loop: Adaptive smart homes exploiting user feedbackstate of the art and
future directions,” Information, vol. 7, no. 2, 2016, p. 35.
[16]
A. C. Jose, R. Malekian, and N. Ye, “Improving home automation
security; integrating device ﬁngerprinting into smart home,” IEEE
Access, vol. 4, 2016, pp. 5776–5787.
[17]
U. Siddiqui and et al., “Elastic jade: Dynamically scalable multi agents
using cloud resources,” in Proc. Second Int Cloud and Green Computing
(CGC) Conf, Nov. 2012, pp. 167–172.
[18]
J. Britz, J. Frey, and J. Alexandersson, “Bridging the gap between smart
home and agents,” in Proc. Int Intelligent Environments (IE) Conf, Jun.
2014, pp. 31–38.
127
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-616-3
ACHI 2018 : The Eleventh International Conference on Advances in Computer-Human Interactions

