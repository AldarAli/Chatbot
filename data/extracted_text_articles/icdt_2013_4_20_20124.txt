Real-Time Modeling in Pervasive Mining 
 
Jose Perez  
Electrical Engineering Department  
Universidad de Santiago de Chile 
Santiago de Chile, Chile 
e-mail: jose.perezb@usach.cl 
Ismael Soto 
Electrical Engineering Department  
Universidad de Santiago de Chile 
Santiago de Chile, Chile 
e-mail: ismael.soto@usach.cl 
Miguel Alfaro 
Industrial Engineering Department  
Universidad de Santiago de Chile 
Santiago de Chile, Chile 
e-mail: miguel.alfaro@usach.cl 
Francisco Cubillos 
Chemical Engineering Department 
Universidad de Santiago de Chile 
Santiago de Chile, Chile 
e-mail: francisco.cubillos@usach.cl 
Pei Xiao 
Centre for Communication Systems Research  
University of Surrey, UK  
Guilford, United Kingdom 
e-mail: p.xiao@surrey.ac.uk 
 
 
 
 
Abstract—This paper introduces an integrated design for real-
time plant modeling at a copper mine, using Support Vector 
Machines (SVM), Neural Networks, and new technologies such 
as Machine-to-Machine (M2M) and Cloud Computing with an 
Android client. This solution was designed for a plant inside a 
copper mine which cannot tolerate interruption and for which 
their in situ modeling, in real time, is an essential part of the 
system to control aspects such as instability by adjusting their 
corresponding parameters without stopping the process. 
(Abstract) 
Keywords: mining; modeling; support vector machines; 
pervasive; machine-to-machine; cloud; neural networks (key 
words) 
 
I. 
 INTRODUCTION 
Several dramatic accidents that have occurred in the 
mining sector have turned the spotlight on safety and the 
need for stricter supervision in mining operations. In this 
respect there is an urgent need to deploy new technologies in 
order to enhance the safety of miners and processes inside 
the mine. Several efforts have been made in this direction 
and the trend is to automate miner´s tasks as much as 
possible. This may be done by using new generation 
telecommunications [1] and computer technologies for 
accessing resources inside the mine. Enhancements of 
automation and remote operations, helped by mobile devices 
applications [2] will allow employees to supervise remotely 
the production tools and to have access to applications on 
servers outside the mine without leaving it.  
In this work, we apply the concepts introduced above to 
solve the plant monitoring problem (dynamic system) for 
control and optimization purposes, using modeling tools. In 
particular, we use a virtual sensor model to estimate in real-
time the value of a physical parameter which cannot be 
measured directly without stopping the process. The 
knowledge of this value on-site, in real-time, is indispensable 
to control aspects such as instability and optimization of the 
whole process. It will also contribute to enhance mine safety. 
The proposed system includes the machine-to-machine 
(M2M) telecommunications platform, a server in the cloud 
that runs a modeling method (based on neural network, 
support vector machines, or other) and a mobile client inside 
the mine. 
This is an ongoing project, and at this stage, it is still 
under development. Machine-to-machine communications 
must be supported by operators, but this issue has not been 
solved yet. We are currently working on the development of 
software interfaces for the mobile client, and on the server 
applications located in a private cloud. 
The rest of the paper is organized as follows: Section II 
describes briefly the proposed general communications 
architecture. Section III introduces some terms and concepts 
related to the modeling of dynamic systems used in this 
work; Section IV presents a practical modeling application 
related to on-line/real-time estimation of states in a complex 
Semi-Autogenous Grinding process (SAG) in copper 
mining; and Section V concludes the paper. 
 
60
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

 
II. 
SYSTEM DESCRIPTION 
We present a design that integrates modeling tools and 
new communications technologies at a copper mine, in order 
to monitor, control and optimize a particular process. In 
order to deploy the solution, we have considered semi-
autonomous grinding. The model will be useful to estimate, 
using a virtual sensor and in real time, the filling level 
parameter of the grinding, since it is very important to 
control and optimize the process.  
Using new communications technologies, the plant 
operator as well as the supervisors may know the filling label 
value at the same time and anywhere inside or outside the 
mine. This brings up pervasive mining, a system with wider 
coverage, higher communication efficiency, better fault-
tolerance, and anytime anywhere availability. 
The proposed design considers M2M communications, a 
client-server application with the server in the cloud, and an 
Android client inside the mine (Fig. 1). 
In order to employ real-time modeling, a prior suitable, 
liable plant model must be selected. The process for 
determining this model is performed as follows: 
 
A set of initial real data (e.g., 2500 samples) are sent 
directly from the plant towards the server in the cloud. 
Here, the data are divided into three data sets, to train 
(e.g., 500 samples), validate (e.g., 1000 samples), and 
test (e.g., 1000 samples) the candidate models, which 
the operator has defined previously. 
 
Tools that may be used for constructing the plant’s 
models include Neural Networks, Support Vector 
Machines (SVM) or any other suitable tools.  
 
The server sends the calculated models to the operator, 
who can choose the best by comparing the forecasting 
errors. At the same time, the graphics and related results 
are sent to the monitoring screen, located anywhere 
inside or outside the mine, and where the whole process 
is controlled. 
 
Once the operator has chosen the best modeling tool (in 
our case a variation of support vector machines), it will 
be used for real-time modeling, in order to monitor, 
control and optimize the process. 
 
A. M2M Communications and Architectures 
Fig. 2 illustrates the high-level M2M communications 
architecture. In this scenario multiple connectivity options 
are 
available 
to 
serve 
machine-to-machine 
(M2M) 
applications requiring connectivity between end devices. The 
M2M client device can connect with the server (M2M 
server) directly through a WAN connection, M2M gateway, 
or an aggregation point [3]. In our design, our server 
modeling application will be installed in this server inside 
the cloud. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. Modeling architecture 
 
III. 
MODELING IN DYNAMIC SYSTEMS 
A. Modeling tools 
In order to get models for dynamic systems in production 
environments, several adaptive methods using approximation 
techniques have been developed. For instance, in [4], the 
authors used the Feed-Forward type Neural Networks 
(FFNN) to solve the problem of on-line identification of 
complex processes. As an important result, they encountered 
that FFNN converge satisfactorily in a few iteration cycles, 
showing better prediction capacity than recursive algorithms. 
In [5] an observer model based on wavelet transform 
together with neural networks was successfully applied to 
solve the state observation problem of a dynamic system, 
when the dynamic model contains uncertainties or it is 
completely unknown. 
In [6] the problem of on-line model identification for 
multivariable processes with nonlinear and time-varying 
dynamic characteristics has been solved using two online 
multivariable identification approaches with self-organizing 
neural network model structures. Two adaptive Radial Basis 
Function (RBF) neural networks have been defined, and the 
dynamic model is generated autonomously using the 
sequential input-output data pairs in real-time applications. 
 
B. Model Performance 
Once we had a set of the plant’s real data, we divided it 
into three groups: to train, validate and test the model. 
However, when these goals are hampered by a lack of 
reliable experimental data it is necessary to construct a set of 
good quality, hypothetical data. In this sense an important 
tool to construct these data is the Lorentz model, which we 
used at the beginning of our work. 
 
 
 
61
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

 
Figure 2. High-level M2M system architecture 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
This study will show a brief description of the Lorentz 
model that reveals the behavior of a dynamic system, and the 
related Forrester model which graphically represents a 
hypothetical plant that is being studied. 
Data constructed from the Lorentz model are very 
valuable since they may represent the behavior of a plant 
inside a mine having chaotic outputs, and it is useful as a 
reference and for comparing purposes. If we have a 
deterministic, chaotic behavior, then reliable forecasting is 
possible and controlling the process in the mine becomes 
easier. 
 
C. Influence Diagram 
To study the behavior of dynamic systems, causal 
diagrams can be used to outline all the elements of a problem 
without going into the mathematical details in the possible 
model. An influence or causal diagram (also known as 
Forrester’s diagram) represents influence relations that exist 
between the elements of a system, and therefore provides 
information about the structure.  
As an example, Fig. 3 depicts the Forrester model 
corresponding to a plant whose behavior can be represented 
by the set of differential equations (1) related to the Lorentz 
model of a plant. 
 
 
 
 
 
 
 
 
 
 
 
 
A Forrester diagram shows the identified level, flow and 
auxiliary variables of a system. The level variables describe 
the states of the systems; flow variables refer to the input and 
output flows which influence the level; and auxiliary 
variables can determine a level or rate variable or another 
auxiliary variable, but it is not itself a level or rate variable of 
direct interest to be solved within the model. A Forrester 
model has a direct correspondence with the differential 
equations that define the relationship among the elements of 
the dynamic systems. 
 
 
D. Lorentz Model 
In 1963 Lorentz abstracted three differential equations 
that can be used to test ideas in nonlinear dynamics. These 
equations are 
 
  
 
      
  
 
        
  
 
     
 
                                                                        (1) 
 
 
 
This set of equations (Lorentz model) has been applied to 
the comprehension of complex processes, obtaining generic 
models to make continuous simulations, in particular related 
to complex production system behaviors. As a result, it 
allows identifying regulation mechanisms in the presence of 
disturbances. However, a system having such deterministic 
behavior may result unpredictable yielding chaotic solutions 
because of their sensitivity on initial conditions and settings 
of parameters σ, r and b. In particular, the Lorenz attractor is 
a set of chaotic solutions [7] of the Lorenz system which, 
when plotted, resemble a butterfly or figure eight, as 
depicted in Figs. … 
Due to the nonlinear terms, (1) cannot be solved 
analytically. As an example, if we choose σ = 10; r = 28; b = 
2.67, and initial conditions x0 = 0; y0 = 1; z0 = 0, and solve 
using Euler´s numerical solution, for 50,000 iterations the 
three-dimensional plot is the same as that shown in Fig. 4, 
and its projection on planes XY, YZ, and XZ, is depicted in 
Fig. 5. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 4. Lorentz attractor 
 
 
Figure 3. Forrester diagram for Lorentz model 
 
62
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

 
 
 
 
 
 
 
 
 
 
 
 
 
          
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
       
  
 
         
  
 
        
 
 
(2) 
 
                 
 
 
E. Client Mobile Device Interface 
Whichever modeling tool is used (e.g., neural network, 
support vector machine, etc.), the process can be automated 
in a pervasive context. To that end, this design considers the 
use of a modern mobile communications platform, cloud 
computing, a mobile client device on-site by the plant, a 
monitoring platform inside or outside the mine, and a server 
in the cloud. 
In the mobile client device, several software interfaces 
must be implemented to support the proposed solution [8]. 
An interface must be implemented for data transmission 
between the application server side in the private cloud and 
the M2M platform from the service provider [9]. This 
interface consists of two parts; one is to deploy a web 
service which provides local services for the remote M2M 
platform and is responsible for receiving real-time data from 
the Android client side; the other is to develop the service 
software which runs in the communication server 
background, with the functions of commands sending, data 
parsing, storage and query to the database. Two modules are 
considered; the first is to request services from the M2M 
platform, including platform login and sending command, 
and the second is the background processing of data which 
is called by local web service for parsing data and storing 
into the database. Another interface is responsible for 
getting data directly from plant sensors in the mine to the 
server in the cloud using the M2M infrastructure. Finally, a 
third interface must communicate any event, related to both 
mobile client and the plant inside the mine, to the screen at 
the monitoring and control platform. 
 
F. Collecting Data and Request 
From Fig. 1 we note that data from the plant’s 
measurements are transmitted directly to the server in the 
cloud. In order to perform modeling and control over the 
plant, the process will be controlled by the operator, 
accessing the server in the cloud through the client program 
in the Android mobile device, allowing the operator in real-
time, without leaving the site, to control the modeling 
process. Table 1 represents data from the plant inside the 
mine received by the server in the cloud. At this point no real 
data are collected, so they correspond to the solution of 
equation (2). 
 
TABLE 1.  COLLECTING DATA 
Time (ms) 
X 
Y 
Z 
1 
0 
1 
0 
2 
0.02 
0.998 
0 
3 
0.03956 
0.997124 
3.99E-05 
… 
… 
… 
… 
1998 
-8.493289 
-8.793423 
26.608915 
1999 
-8.499291 
-8.799466 
26.616371 
2000 
-8.505295 
-8.805386 
26.623996 
 
 
G. Getting the Model 
To identify and get a model for the plant’s behavior, the 
operator using the application interface in the mobile client 
device asks the server to compute the model for the dynamic 
system under study (Fig. 6), specifying the modeling 
method. 
The server will reply showing the requested model (Fig. 
7). Several models can be tested until a suitable one is 
selected. 
 
 
 
Figure 5. Lorentz chaotic attractors projections 
 
63
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

 
Figure 6. Android client interface 
H. Selecting the Mobile Client 
According to Gartner’s statistics, until November 2012 
the market share of different operating systems for mobile 
devices was 72.4% for Android, 13.9% for iOS, 5.3% for 
Research In Motion, 3.0% for Bada, 2.6% for Symbian, 
2.4% for Microsoft, and 0.4% for others.  
Android is an operating system designed specifically for 
mobile devices [11]. It runs on the Linux kernel. The 
Android Software Development Kit (SDK) provides the 
tools and Application Programming Interfaces (APIs) 
necessary to develop applications using Java. 
Applications written in Java can be compiled to be 
executed in a Dalvik virtual machine, which is a specialized 
virtual machine implementation designed for mobile device 
use. Other interesting characteristics of Android are the 
capability for reusing and replacing components, and the 
availability of a number of handset layouts, adaptable to 
larger, VGA, 2D graphics library, 3D graphics library based 
on 
OpenGL 
ES 1.0 
specifications, and 
traditional 
Smartphone layouts.  
Hence, to implement our mobile client we used Android 
because of its open nature, widespread use and the portability 
of the code. 
 
I. Monitoring Platform Screen  
During the entire process every event is displayed on a 
monitor screen (Fig. 8) at the control and monitoring 
platform, located either inside or outside the mine. The 
information displayed on the screen includes commands, 
data sent by the plant’s real-time measurement system, 
request and replay messages between mobile client and 
server, numerical and graphical results from modeling, and 
real-time plant's response. These enable supervisors or other 
expert employees to supervise the automated control and 
tools from a remote operations centre. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
IV. 
MODELING APPLICATION 
A.  Software Sensor based on a NARMAX - Support Vector 
Machine Model for Semi-Autogenous  Grinding  
The estimation of states in complex processes such as the 
Semi-Autogenous Grinding process (SAG) in copper mining 
is an important and complex task due to difficulties in 
measuring some relevant variables directly online and in real 
time. In [12] the authors present interesting modeling results 
using Nonlinear Autoregressive Moving Average with 
Exogenous Input (NARMAX) and Support Vector Machines 
(SVM), when acting as estimators of state variables for a 
SAG milling operation. They propose a simple and original 
methodology to develop NARMAX models made with 
SVMs. In terms of the milling process, NARMAX-SVM 
provides a useful tool for estimating the value of the filling 
level parameter, which cannot be measured using readily 
available tools. The results show the predictive power of 
NARMAX-SVM models over those made of Neural 
Networks (NN). NARMAX-SVM has a significantly lower 
mean square error (MSE) than all other models.  
The effective modeling results from NARMAX-SVM 
may be available to the operator through his mobile device, 
 
Figure 7. Model selection 
 
 
Figure 8. Monitoring screen 
 
64
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

and for those on the monitoring platform as well as their 
mobiles devices anywhere inside the mine. 
In what follows we will explain shortly how NARMAX-
SVM works. 
 
B. Virtual sensor structure  
The application of virtual sensors to the SAG milling 
process described in [12] is to estimate on-line and in real 
time the values of the variable "Level". This is a significant 
variable for the grinding process, whose values are very 
difficult to measure directly, in real time and offline. 
The NARX model (Fig. 9), proposed to implement the 
virtual sensors, uses as inputs  the previous values of the 
variable “Level” (the one to be estimated), and an 
exogenous variable, the "Pressure on the mill shaft breaks”. 
This is a variable easy to measure online and in real time, 
and is related to the variable of interest. 
In the NARMAX model (Fig. 10), in addition to the 
same inputs used in the NARX model, the previous errors 
committed by the model are used. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
C. Data selection, Model Identification and Forecasting  
SVM and neural network models were trained with 500 
samples and validated with 1000 samples. A third set of 
1000 samples (test set) was used to get the final 
performance indices shown in Table 2. Each sample has the 
fill level and the pressure during breaks at time t-1 as inputs, 
and the filling level at time t as the output (the models are of 
first order). 
Once identified, the four models obtained for estimating 
the filling level of the SAG mill (NARX and NARMAX 
using SVM and neural networks, respectively), their 
prediction capability for Multiple Step Ahead (MSA) 
forecast was evaluated. The estimation error was quantified 
using the mean square error (MSE) of Matlab. As a result, 
we can see that SVM implementations perform better than 
neural network cases. 
 
TABLE 2. MSA FORECASTING MEAN SQUARE ERROR  
 
NARX 
NARMAX 
NN 
3.5889 
1.0773 
SVM 
1.0256 
0.4424 
 
 
D. Forecasting Results  
Figs. 11 a) and b) show the estimation of the variable 
filling level (%) obtained with the NARX and NARMAX 
models, respectively, using SVM in MSA forecasting for 
the test data set. 
From these results we can see that the NARMAX model 
performs better than NARX when both act as MSA 
predictors. NARMAX type models, though requiring a more 
complex 
identification 
procedure, 
consider 
previous 
prediction errors. Moreover, the models implemented using 
SVM significantly outperform those made using neural 
networks. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 11.  MSA Filling level estimation                                                       
a) NARX-SVM; b) NARMAX-SVM 
 
 
 
 
 
 
Figure 9. NARX virtual sensor structure 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 10. NARMAX virtual sensor structure 
 
65
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

V. 
CONCLUSIONS 
This solution has advantages in many aspects. The 
machine-to-machine based communications mode with the 
server in the cloud and Android client inside the mine brings 
up pervasive mining, a system with wider coverage, higher 
communication 
efficiency, 
better 
fault-tolerance, 
and 
anytime anywhere availability. 
This solution may be applied for any plant inside a mine 
for which their modeling in situ, in real time, allows to 
control aspects such as instability by adjusting their 
parameters without stopping the process.  
In order to deploy the proposed design, this study has 
considered two modeling tools: NARX and NARMAX, 
which have been combined with Support Vector Machines 
(SVM) and Neural Networks (NN) to implement dynamic 
models. The purpose of the resulting models is to act as state 
estimators for the variable filling level of a semi-autogenous 
grinding process. 
The proposed solution responds to the modeling needs, 
and also to the forecasting of plants functioning inside a 
mine. It simplifies the monitoring process and contributes to 
better control and enhanced safety. 
The system proposed may represent a valuable design 
that helps to perform stricter supervision, set up safer work 
conditions for the miners, and deploy new technologies to 
enhance miner safety and improve processes inside the mine. 
 
 
 
 
ACKNOWLEDGMENT 
The authors acknowledge with thanks the financial 
support of the “Center for multidisciplinary research on 
signal 
processing” 
(Conicyt/ACT1120 
project) 
and 
USACH/Dicyt project 06.917S. 
 
 
 
 
REFERENCES 
 
[1]  N. Radio, Y. Zhang, M. Tatipamula, and V. Madisetti, 
«Next-Generation Applications on Cellular Networks: 
Trends, Challenges, and Solutions,» Proceedings of the 
IEEE , vol.100, no.4, pp. 841-854, 2012.  
[2]  E. Mancini, G. Wainer, K. Al-Zoubi, and O. Dalle, 
«Simulation in the Cloud Using Handheld Devices,» de 
Cluster, Cloud and Grid Computing (CCGrid), 2012 
12th IEEE/ACM International Symposium on, pp. 867-
872, 2012.  
[3]  S. Pocuca, D. Giljevic, «Machine to machine (M2M) 
communication impacts on mobile network capacity 
and behaviour,» de MIPRO, 2012 Proceedings of the 
35th International Convention ,  pp. 607-611,  2012.  
[4]  F. Cubillos, G. Acuna, «Simulation Studies of On-Line 
Identification of Complex Processes with Neural 
Networks,» 
Lecture 
Notes 
in 
Computer 
Science,Volume 3972, pp. 808-814, 2006.  
[5]  I. Chairez, «Wavelet Differential Neural Network 
Observer,» Transactions on Neural Networks, pp. 
1439-1449, 2009.  
[6]  K. 
Salahshoor, 
A. 
S. 
Kamalabady, 
«On-line 
Identification of Nonlinear Multivariable Processes 
using self-generating RBF Neural Networks,» Asian 
Journal of Control, Vol. 12, No. 5, pp. 626-639, 2010.  
[7]  M. D. Alfaro, J. M. Sepúlveda, and J. A. Ulloa, 
«Forecasting Chaotic Series in Manufacturing Systems 
by Vector Support Machine Regression and Neural 
Networks,» International Journal of Computers 
Communications & Control, pp. 8-17, 2012.  
[8]  Y. Yang, H. Ye, and S. Fei, «Design of communication 
interface for M2M-based positioning and monitoring 
system,» Electronics, Communications and Control 
(ICECC), pp. 2624-2627, 9-11, 2011.  
[9]  W. Sun, M. Song, «A general M2M device model,» de 
Web Society (SWS), 2010 IEEE 2nd Symposium, pp. 
578-581, 2010.  
[10]  C. Wang, W. Duan, J. Ma, and C. Wang, «The research 
of Android System Architecture and application 
programming,» 
Computer 
Science 
and 
Network 
Technology (ICCSNT), 2011 International Conference 
on, vol. 2, pp. 785 - 790, 2011.  
[11]  W. Hu, D. Han, A. Hindle, and K. Wong, «The build 
dependency 
perspective 
of 
Android's 
concrete 
architecture,» de Mining Software Repositories (MSR), 
2012 9th IEEE Working Conference on , Zurich, 
Switzerland, pp. 128-131, 2012.  
[12]  G. Acuna, M. Curilem, and F. Cubillos, «Development 
of a Software Sensor based on a NARMAX-Support 
Vector 
Machine 
Model 
for 
Semi-Autogenous 
Grinding,» Revista Iberoamericana de Automatica e 
Informatica Industrial, p. unpublished, 2011.  
 
66
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-262-2
ICDT 2013 : The Eighth International Conference on Digital Telecommunications

