ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
31
Asynchronous Learning Management System - The Case of
Federal University of Technology (UTFPR)
N´adia P. Kozievitch, Eduardo Manika, Robinson Noronha, Leandro Almeida, Rosamelia Parizotto
Henrique da Silva, Laudelino Bastos, Thain˜a Monteiro
Federal University of Technology
Curitiba, PR, Brazil
Email: {nadiap,manika,vida,leandro,rosamelia,hosilva}@utfpr.edu.br,
bastos@dainf.ct.utfpr.edu.br, thaina128@gmail.com
Abstract—Mobile Learning has been emerging as a new research
branch of learning, in which mobile devices are explored during
the learning process. The development of these applications,
however, is a non trivial task since it requires skills and knowledge
of various domains (computational, pedagogical, etc.), along with
technologies to support the process. This paper describes a case
study at UTFPR, with the objective of integrate mobility, not only
in terms of learning through mobile devices, but also in terms of
mobile participants and mobile administration. The case study
focuses on a generic and asynchronous computer architecture
(PEDRO), based on a the Moodle-based adaptation. Our proposal
allows the Learning Management System and mobile devices to
work together in order to provide a complete set of instructional
materials to students.
Keywords–Moodle; Learning Management Systems; Mobile De-
vices.
I.
INTRODUCTION
In spite of common beliefs, learning is not conﬁned and the
inclusion of remote experiments on mobile devices is a reality.
In fact, students are always learning, no matter the place they
are. However, there are learning environments and learning
management systems [1] where this skill is maximized, being
the most common: the schools. Traditional schools have some
disadvantages [2], namely student’s attention is not well fo-
cused and teachers and students must all meet in a common
place, so that knowledge can be transmitted.
The popularization of Mobile Devices (MDs), such as
”tablets” and ”smartphones”, for example, enabled an alterna-
tive learning method for students. MD has been used as tool
access to information and execution of activities. Examples
include teaching of science [3] and mathematics [4], among
others.
Text editors, spreadsheets, production of videos and photos
or playing electronic games can be accessed from any place
and time, and can be easily integrated with a learning environ-
ment. Nevertheless, participants can also function as mobile
learners in the sense that they may use the application any
time and anywhere, in informal settings, in the course of their
everyday activities.
The potential use of these devices has been promoting
a new set of research possibilities and challenges for the
community of Computing in Education [5], and their ﬁnal use
in a Virtual Learning Environment (VLE). The possibility of
a student using a MD to access classes instigates alternatives
of how to explore traditional environments. One of the great
challenges for developing for MD applications [6] is their lim-
ited capacity when compared to personal computers. Another
challenge appears when we consider that not necessarily all
MDs have 24 hour access to Internet.
This paper addresses these issues in a case study at UTFPR,
with the objective of integrate mobility. The case study fo-
cused on a generic and asynchronous computer architecture
(PEDRO - portuguese acronym for ”Programa de Ensino e
Desenvolvimento Remoto Off-line” - Ofﬂine Learning and
Remote Development Tool), based on a Moodle [7] adaptation.
The novelty resides on a ﬂexible architecture which explores
(i) mobility not only in terms learning through MDs, but also
in terms of mobile participants, and mobile administration;
and (ii) the background infrastructure (software, hardware),
considering network trafﬁc and different locations.
A. A Motivating Example
For instance, consider the infrastructure for the Federal
University of Technology - Paran´a (Brazil), with 12 different
campus (Utfpr Pato Branco ’A’ , Utfpr Medianeira ’B’ ,
Utfpr Campo Mour˜ao ’C’ , Utfpr Corn´elio Proc´opio ’D’ ,
Utfpr Curitiba ’E’ , Utfpr Dois Vizinhos ’F’ , Utfpr Francisco
Beltr˜ao ’G’ , Utfpr Guarapuava ’H’ , Utfpr Londrina ’I’ , Utfpr
Apucarana ’J’ , Utfpr Ponta Grossa ’K’ , Utfpr Toledo ’L’), as
shown in Figure 1.
The university aims to integrate mobility, not only in terms
learning through MDs, but also in terms of mobile participants
and mobile administration. In this case, the participants are
mobile learners in the sense the same course (in a VLE) can
be available to several locations, and participants can remotely
interact with MDs. In the same way, the system administration
should be ﬂexible in order to have structural and data updates
from different locations, maintaining an architecture which can
be easily adaptable in order to receive new requirements.
The background infrastructure (software, hardware) should
also have an easy integration with the new proposed architec-
ture. Since the institution has several locations (far apart from
each other), with their respective users, the network trafﬁc is
another parameter which can result in a bottleneck (consider
for example, that a speciﬁc course might be composed by
several videos, which are transfered to one central campus to
others).

ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
32
Figure 1: The 12 UTFPR campus location provided by
Google Search Engine.
Brieﬂy, the interdisciplinary efforts may vary in several
domains: (i) from the database perspective, the challenge is
how to explore available learning systems within the institution
with the minimal set of tables in order to have efﬁciency (and
to enable any future integration with other systems); (ii) from
the network perspective, the challenge is how to exchange a
great amount of information within several campus and do
not have a bottleneck; (iii) from the hardware perspective, the
challenge is how to store a set of courses within the minimal
amount of memory and space available within the MD; (iv)
from the MD lifetime perspective, the challenge is how to
decide which information should be deleted/compressed, due
to limited space; (v) from the pedagogycal perspective, the
challenge is how to explore all this structures and have a
motivated student which is responsable for his main learning;
(vi) from the design perspective, the challenge is how to adapt
an interface which explores the MD interface; among others.
In this paper, we explore the term of mobility, along with
the mentioned interdisciplinary efforts, through a case study
PEDRO, a generic architecture proposed for mobile learning
and administration. The novelty resides on the idea that not
only students may interact with a remote and ofﬂine learning
system, but also administrators and professors.
B. Organization
The remainder of this paper is organized as follows. Section
2 contains a description of related work. An overview of
our solution is described in Section 3. Finally, we offer our
conclusions and future work in Section 4.
II.
RELATED WORK
Mobile learning involves the use of mobile technology,
either alone or in combination with other information and
communication technology, to enable learning anytime and
anywhere [8]. Learning can be explored in a variety of ways:
people can use mobile devices to access educational resources,
answer assignments, connect with others, or create content.
Multiple initiatives have explored ways to integrate or use
MDs in learning situations [9]–[13]. If we consider room
classes [14], for example, solutions with good results with
MDs have already been presented. At this work, students are
questioned by teacher during the class and answers should
be provided by MDs. A central computer system summa-
rizes these answers, processes them, and the teacher instantly
presents a summary of choices of students, by means of graphs
and tables.
Other initiatives focused on distance education and MDs
(allowing students to interact in discussion forums
[15]) or
generic frameworks delimited by Pedagogical and Technolog-
ical domain [5].
Some other research initiatives have been developed with
the purpose of allowing customization of MD contents. For
example, da Silva et al. [16] presents a recommendation
system for learning objects based on Sharable Content Object
Reference Model [17], using agents and ontologies.
In their system, agents located on the server monitor the
activities of the student. The selection of Learning Objects
(LO) is made by comparing the choices of students. The LOs
which were more accepted by students of similar behavior
were recommended to a new student added to an activity.
Another example of a system which allows the customiza-
tion of learning objects sent to the MD is presented by Orlandi
and Isotani
[18]. In this system, a tool for initial diagnosis
identiﬁes which objects should be available to students. The
architecture deﬁned within this paper also provides lists of ex-
ercises with automatic correction. The main difference resides
with the ”feedback” messages which can be sent to students.
All the systems presented above centralize a data server
or applications. But, there are also other initiatives which
do not require a centralized element (such in
[19]). In this
architecture, three heterogeneous agents (Social, Interface, and
Collector) are scattered within different mobile devices to
interact. Similar to [16], it explores the concept of Context
Environment, storing geographic information to recommend
suggestions for student interaction.
Among the more than 200 VLEs available on the mar-
ket [20], Moodle [7], along with several extensions [21] has
been highlighted by the number of users and servers installed
around the world, mainly by its low cost, it is free software,
and for different features depending on the conﬁguration [22].
In the context of the research presented within this paper,
the MD remains disconnected from the Internet most of the
time. The internet connection is sporadic and should receive
assignments and evaluations (accessed through an adapted
version of Moodle), returning the tasks performed by the
student. In this context, none of the investigated architectures
could be easily adapted as a solution.
III.
OVERVIEW OF OUR SOLUTION
In this section, we outline PEDRO architecture, along with
the Moodle-based adaptation, and the respective usage.
A. PEDRO Architecture
From a theoretical perspective, PEDRO architecture is
composed by a Embedded Learning Environment (ELE) and a
VLE, as shown in Figure 2. Basically, the participant interacts

ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
33
with the system through MB (the ELE at Figure 2). After the
login, the interaction and embedded modules are activated.
Here, the participant can explore the available courses and
assignments, having all the activities logged. When the partici-
pant accesses the internet, the communication module gets the
next available assignments and sends the assignments already
answered, along with any additional information that should
be exchanged within the main server.
Figure 2: PEDRO architecture.
The ELE consists of four modules: the pedagogical strategy
model, the communication module, the embedded learner
module, and the interaction module.
The pedagogical strategy module is responsible for setting
and controlling how instructional materials (videos, PDFs,
assignments, etc.) will be accessed by the student. Three types
of assignment strategies were adopted:
•
Simple: assignments are accessed one by one, ac-
cording to a speciﬁc order. This order was set by
the teacher during the authoring process. Consider
for example, that a speciﬁc course is divided into 12
topics, and all the available participants explore them,
one by one, in an ordered sequence.
•
Conditional: assignments are accessed only if aspe-
ciﬁc condition happens. Consider for example, that a
participant have to provice an answer to an assignment
only if the average grade is less than a speciﬁc value.
•
Random or free: the student has the freedom to access
the assignment if he/she wants. It is not necessary to
follow any order.
Note that the pedagogical strategy model is implemented
through modules and sections of the available course.
The communication module is responsible for communica-
tion with the MD with the VLE. It mainly which information
(such as assignment answers) is exchanged with the VLE. Note
that the exchange information is stored within XML ﬁles.
The embedded learner module is a structure which stores
information activities and instructional materials that still have
to be accessed.
And ﬁnally, the interaction module is responsible for the
student interaction with the MD, along with the log of this
interaction.
The VLE provides ﬁve modules: the access and course
manager module, the learner module, the communication mod-
ule, the domain module, and the learning Objects server. The
access and course manager module identiﬁes which courses
a student is enrolled (along with related information). This
module comprises the information modiﬁed by the system
administration.
The learner module comprises a structure which stores the
tasks and instructional materials accessed by participants. The
communication module is responsible for communicating with
the MD. The domain module stores the course instructional
materials. The learning objects server manages a set of learning
objects, evaluation, and pedagogical strategy deﬁned by the
course author.
At the server side, the course and access manager receives
the participant request access, and processes the following
requests:
•
Verify if the participant is registered within the system
(through Moodle);
•
If the participant is not registered within the system,
the user will have access to the registration form
available in the system;
•
If the participant is registered within the system:
1)
Log the activities already performed by the
participant;
2)
Check the course assignments for the respec-
tive participant;
3)
Compare the available activities with the per-
formed activities by the participant;
4)
If the lists have different items, proceed with
the next assignments that should be send to
the participant;
5)
Check available space at MD, and compare
with the required space for the next assign-
ments that should be sent to the participant.
If any issue arise, the manager should be
informed;
6)
Pack all the required information and send to
MD though the communication module; and
7)
Log all the required information.
The random access to the ELE with the VLE is the main
requirement of the architecture presented within this paper.
Since the user does not have full-time access to internet, there
is an effort to identify which set of information should be
presented to the student.
So, in this sporadic access, the environments should ex-
change the greater amount of relevant information to the educa-
tional process. This type of information exchanged between the
mobile device and the VLE have already been called ”Context
Sensitive Information” [23].
In closing this sporadic access, the ELE is able to partially
track and monitor the student. This task consists of monitoring
and recording the following information: i) answers to assign-
ments, ii) tasks, iii) readings, iv) videos, v) applications used
in MD, and vi) MD storage space.
Unlike some of the initiatives presented in Section 2, the
selection of information to be sent to the MD does not consider

ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
34
Figure 3: The complete set of database tables grouped by module.
the location of the student [16], [23], the effect of long-term
reading texts on screen [24], among other criteria.
In summary, the architecture shares the following features
between ELE and VLE: (i) log the student’s interactions with
the assignments; (ii) report student activities in MD; (iii)
identify which instructional materials should be sent to the
MD; (iv) allow the student to have access to free and guided
instructional materials; (v) interpolate the various types of in-
structional materials; and (vi) explore mobility not only within
an learning environment, but also through the management
context.
B. Adapting Moodle
Figure 4: The main modules used within the project.
As a background to store all the information within the ELE
and VLE environments, Moodle was adopted (the environment
was already used as a basic software within the institution).
The initial 2.4 version database (305 tables) was enhanced to
a smaller set of tables (27 - Figure 3), resumed in 5 modules
(Figure 4): roles, users, course, messages and assignments.
The role module is responsible for deﬁning roles, their names,
permissions and how they are assigned to users. The users
module is used to registering all the users within the system,
along with their last access, and enrollments. The course
module stores all the information within available courses. The
message module is responsible for storing messages exchanged
among users. Finally, the assignment module is used to assign
an activity for a student enrolled within a course.
Besides the available modules, two new groups of informa-
tion were created (as shown in Figure 4): institution and labels.
The institution module is responsible for storing all available
institutions within the project, with respective departments.
Since Moodle is an english-based system, the label module
has the objective of creating user-friendly descriptions for the
available tables.
Note that mdl enrol table, initially available at Moodle
enrollments module, is represented here within the course
module. The complete list of tables is listed within Figure
3, divided by module. Each table was also adapted to store
only the relevant attributes for the project. In order to enhance
optimization, foreign keys and tablespaces were added.
C. PEDRO Usage
PEDRO usage is explored under the VLE by a remote
management web page, and under the ELE by the MD in-
terface. The remote management web page has the objective
of providing a ﬂexible way of locally or remotely update the
database structure, data, and labels to administrative users.
Within PEDRO architecture (Figure 2), the remote man-
agement web page explores the access and course manager
module. The 27 Moodle-based tables (shown in Figure 4) can
be explored through (i) their table structure (with respective
columns, primary and foreign keys), (ii) data, and (iii) labels.
Figure 5 presents a printscreen from the database tables. If
an administrator needs to update the data structure from table
mdl assignment for example, the administrator is redirected
to another web page (Figure
6). Labels are used in order
to present a more friendly portuguese description to users. So,
despite using an english-based system, a manager could update
a speciﬁc table (such as mdl assignment shown in Figure 5)
to have a friendly translation to participants.

ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
35
Figure 5: The main development web page for to visualize
and alter the structure, data and labels.
Figure 6: The main development web page for alter table
mdl assignment table.
Finally, Figure 7 presents the graphical interface available
at the ELE. Note that at the left side three courses are
presented (mathematics, portuguese, and history), along with
the portuguese course structure at the left side of the image.
The information exchange between VLE and ELE is provided
by an XML ﬁle, as shown in Figure 8. Note that (i) the ﬁrst
block shows the studen information (such as name, number of
courses, etc.), (ii) the second block presents the information for
the ﬁrst course (such as name, author, and amount of classes),
(iii) the third block presents the information for the ﬁrst class,
followed by (iv) the list of the available activities comprising
the ﬁrst class.
As long as the participant ﬁnishes each of the available
tasks, tag ”when” is completed with the respective date/time of
the action (as shown in the last line from the fourth block from
Figure 7). Note that the ELE interface (in java) is quite simple
(in sense of design) in order to process the XML ﬁle along
with the integrated ﬁles, under the available MD memory.
Our solution used Moodle version 2.14, Postgres 9.1.9,
PHP, Java, and Android-Java. In particular, the same architec-
ture could be easily translated to other languages, and explored
under other domains, such as basic learning in industry (for
home ofﬁce employees). This strategy can provide a ﬂexible
way of foster knowledge dissemination, under a low cost, and
reusing an available infrastructure.
The course “Portuguese Language: necessary revisions I”,
is the pilot project, which will be realized in School Francisco
Zardo (Curitiba, Paran´a), with 18 students from 12th grade,
using PDF and MP4 video ﬁles. The available Moodle server
will be located at UTFPR Curitiba, which distances 11 KM
from the school. Next experiments include all other campus
locations provided by Figure 1.
Figure 7: The graphical interface available at the ELE.
<student>
<name>John</name>
<password>1234</password>
<numberOfCourse>3</numberOfCourse>
<typeOfNavigation>1</typeOfNavigation>
<course>
<id> 1</id>
<name>Gramática – Concordância Nominal</name>
<author> Robinson Vida Noronha </author>
<status> on  </status>
<amountOfClass> 2 </amountOfClass>
<class>
  <id>1</id>
  <title>Introdução as conceitos básicos da disciplina</title>
  <intro>Neste tópico, voce irá estudar alguns dos conceitos 
que definiram essa disciplina</intro>
  <assessment>false </assessment>
  <amountOfTask>3</amountOfTask>
  <task>
<id>9</id>
<titleTask>Video to be watch</titleTask>
<typeTask> VIDEO </typeTask>
<file>File9.mp4</file>
<completed>false</completed>
<when>null</when>
  </task>
  <task>
<id>1</id>
<titleTask>File to be read</titleTask>
<typeTask> PDF </typeTask>
<file>File1.pdf</file>
<completed>false</completed>
<when>null</when>
  </task>
  <task>
<id>2</id>
<titleTask>File to be read</titleTask>
<typeTask> PDF </typeTask>
<file>File2.pdf</file>
<completed>true</completed>
<when>03/15/2014 ; 15:00:00</when>
  </task>
<completed>33.0</completed>
    </class>
....
</course>
</student>
Figure 8: The XML ﬁle comprising the information
exchanged between VLE and ELE.

ICIW 2014 : The Ninth International Conference on Internet and Web Applications and Services
Copyright (c) IARIA, 2014. ISBN: 978-1-61208-361-2
36
IV.
CONCLUSION
With the use of mobile technologies, each student will
have a personal interaction in the sense that they may use
the application any time and anywhere, in informal settings,
in the course. This does not mean, however, that the use of
mobile devices is a panacea [5].
In this paper, we addressed this issue with a case study
(within Federal University of Technology) through the Moodle
adaptation, a remote management web page, and PEDRO,
a generic architecture concerning an Asynchronous Learning
Management System and an Ofﬂine Development Tool. The
proposed architecture describes the integration of i) the VLE
and ii) the ELE for MD. The novelty resides on the idea that
not only participants may interact with a remote and ofﬂine
learning system, but also administrators and professors.
A straightforward future work consists in the inclusion
of other Moodle modules (such as Scorm, Wiki, etc.), along
with the architecture performance study, and a georeferenced
location module.
ACKNOWLEDGMENT
We would like to thank CAPES, Fundac¸˜ao Arauc´aria and
CNPq.
REFERENCES
[1]
P. McGee, C. Carmean, and A. Jafari, Course Management Systems
for Learning: Beyond Accidental Pedagogy.
Information Science
Publishing, 2005.
[2]
V. J. E. Miguel, S. M. M. Guerreiro, and R. P. C. do Nascimento, “Web
tool to support online inquiries: adapting moodle to meet some of
tutors and teachers needs,” in Proceedings of the 2007 Euro American
conference on Telematics and information systems, ser. EATIS ’07.
New York, NY, USA: ACM, 2007, pp. 53:1–53:4. [Online]. Available:
http://doi.acm.org/10.1145/1352694.1352749
[3]
C. Cortez, M. Nussbaum, R. Santelices, P. Rodr´ıguez, G. Zurita,
M.
Correa,
and
R.
Cautivo,
“Teaching
science
with
mobile
computer supported collaborative learning (mcscl),” in Proceedings
of the 2nd IEEE International Workshop on Wireless and Mobile
Technologies in Education, ser. WMTE ’04.
Washington, DC,
USA: IEEE Computer Society, 2004, pp. 67–74. [Online]. Available:
http://dl.acm.org/citation.cfm?id=977408.978764
[4]
L. de Lima, E. M. B. Filho, J. W. Ribeiro, R. M. de Castro Andrade,
W. Viana, and A. J. M. Jnior, “Guidelines for the development and use
of m-learning applications in mathematics,” IEEE Multidisciplinary
Engineering Education Magazine, vol. 6, no. 2, 2011, pp. 1–12.
[Online]. Available: http://doi.acm.org/10.1145/1217299.1217304
[5]
L. F. T. Meirelles and L. M. R. Tarouco, “Framework para aprendizagem
com mobilidade,” in Anais do XVI Simp´osio Brasileiro de Inform´atica
na Educac¸˜ao, ser. SBIE ’05.
Sociedade Brasileira de Computac¸˜ao,
2005, pp. 623–633.
[6]
B. Al-Hamadani and J. Lu, “An investigation in potential technology
in compressing mobile learning xml documents,” in Learning With
Mobile Thecnologies, Handheld Devices, and Smart Phones: Innovative
Methods. Edited by Zhongyu (Joan) Lu.
IGI Global, 2012, pp. 37–55.
[7]
Moodle, “Moodle, available at http://www.moodle.org, last accessed on
May 30, 2014,” 2009.
[8]
UNESCO, Police Guidelines for Mobile Learning.
United Nations
Educational, Scientiﬁc and Cultural Organization, 2013.
[9]
O. R. E. Pereira and J. J. P. C. Rodrigues, “Survey and analysis of
current mobile learning applications and technologies,” ACM Comput.
Surv., vol. 46, no. 2, Dec. 2013, pp. 27:1–27:35. [Online]. Available:
http://doi.acm.org/10.1145/2543581.2543594
[10]
J.
C.
S´anchez
Prieto,
S.
O.
Miguel´a˜nez,
and
F.
J.
Garc´ıa-
Pe˜nalvo, “Mobile learning: Tendencies and lines of research,” in
Proceedings of the First International Conference on Technological
Ecosystem for Enhancing Multiculturality, ser. TEEM ’13.
New
York, NY, USA: ACM, 2013, pp. 473–480. [Online]. Available:
http://doi.acm.org/10.1145/2536536.2536609
[11]
M. H. Dabney, B. C. Dean, and T. Rogers, “No sensor left behind:
Enriching computing education with mobile devices,” in Proceeding of
the 44th ACM Technical Symposium on Computer Science Education,
ser. SIGCSE ’13.
New York, NY, USA: ACM, 2013, pp. 627–632.
[Online]. Available: http://doi.acm.org/10.1145/2445196.2445378
[12]
Y. Zhou, G. Percival, X. Wang, Y. Wang, and S. Zhao, “Mogclass:
Evaluation of a collaborative system of mobile devices for classroom
music education of young children,” in Proceedings of the SIGCHI
Conference on Human Factors in Computing Systems, ser. CHI ’11.
New York, NY, USA: ACM, 2011, pp. 523–532. [Online]. Available:
http://doi.acm.org/10.1145/1978942.1979016
[13]
T. Liu, J. Kiang, H. Wang, T. C. Wei, and LiHsing, “Embedding
educlick in classroom to enhance interaction,” in Proceedings of the
International Conference on Computers in Education, ser. ICCE. IEEE
Press, 2003, pp. 117–125.
[14]
K. L. Nielsen, J. B. Stav, G. Hansen-Nygrd, and T. M. Thorseth,
“Designing and developing a student response system for mobile
internet devices,” in Learning with Mobile Technologies, Handheld
Devices, and Smart Phones: Innovative Methods, ed. Zhongyu (Joan)
Lu.
IGI Global, 2012, pp. 56–68.
[15]
M. A. A. Sibaldo, E. Loureiro, I. I. Bittencourt, and E. de Barros Costa,
“Infra-estrutura para acesso a comunidades virtuais na web atrav´es
de dispositivos m´oveis,” in Anais do XVII Simp´osio Brasileiro de
Inform´atica na Educac¸˜ao, ser. SBIE ’06.
Sociedade Brasileira de
Computac¸˜ao, 2006, pp. 58–60.
[16]
L. C. N. da Silva, F. M. M. Neto, and L. J. J´unior, “Mobile: Um ambi-
ente multiagente de aprendizagem m´ovel para apoiar a recomendac¸˜ao
sens´ıvel ao contexto de objetos de aprendizagem,” in Anais do XXII
Simp´osio Brasileiro de Inform´atica na Educac¸˜ao, ser. SBIE ’11.
So-
ciedade Brasileira de Computac¸˜ao, 2011, pp. 254–263.
[17]
SCORM, “Sharable Content Object Reference Model (SCORM), avail-
able at http://www.adlnet.gov/scorm/ , last accessed on May 30, 2014,”
2000.
[18]
B. H. Orlandi and S. Isotani, “Uma ferramenta para distribuic¸˜ao de
conte´udo educacional interativo em dispositivos m´oveis,” in Anais do
XXIII Simp´osio Brasileiro de Inform´atica na Educac¸˜ao, ser. SBIE ’12.
Sociedade Brasileira de Computac¸˜ao, 2012.
[19]
S. Rabello, J. L. V. Barbosa, J. Oliveira, A. Wagner, D. N. F. Barbosa,
and P. B. S. Bassani, “Um modelo para colaborac¸˜ao em ambientes
descentralizados de educac¸˜ao ub´ıqua,” in Anais do XXIII Simp´osio
Brasileiro de Inform´atica na Educac¸˜ao, ser. SBIE ’12.
Sociedade
Brasileira de Computac¸˜ao, 2012.
[20]
J. Itmazi, “Sistema ﬂexible de gesti´on del elearning para soportar
el aprendizaje en las universidades tradicionales y abiertas.” Ph.D.
dissertation, Universidad de Granada, December 2005.
[21]
G. R¨oand A. Kothe, “Extending moodle to better support computing
education,” in Proceedings of the 14th annual ACM SIGCSE conference
on Innovation and technology in computer science education, ser.
ITiCSE ’09.
New York, NY, USA: ACM, 2009, pp. 146–150.
[Online]. Available: http://doi.acm.org/10.1145/1562877.1562926
[22]
E. Magalh˜aes, V. Gomes, A. Rodrigues, L. Santos, and T. Conte,
“Impacto da usabilidade na educac¸˜ao a distˆancia: um estudo de caso
no moodle ifam,” in Proceedings of the IX Symposium on Human
Factors in Computing Systems, ser. IHC ’10.
Porto Alegre, Brazil,
Brazil: Brazilian Computer Society, 2010, pp. 231–236. [Online].
Available: http://dl.acm.org/citation.cfm?id=1999593.1999626
[23]
P. Moore, B. Hu, M. Jackson, and J. Wan, “Intelligent context for per-
sonalised m-learning,” in Complex, Intelligent and Software Intensive
Systems, 2009. CISIS ’09. International Conference on, 2009, pp. 247–
254.
[24]
L. L. Fabris and M. D. Finco, “Percepc¸˜ao de escolares no uso de laptops
educacionais no contexto do projeto uca,” in Anais do XXIII Simp´osio
Brasileiro de Inform´atica na Educac¸˜ao, ser. SBIE ’12.
Sociedade
Brasileira de Computac¸˜ao, 2012.

