Particle Simulation of Granular Flows in Electrostatic Separation Processes
Ida Critelli
Dipartimento di Ingegneria Meccanica
Politecnico di Milano
Milano, Italy 20126
Email: ida.critelli@polimi.it
Alessandro Tasora
Dipartimento di Ingegneria Industriale
Universit`a di Parma
Parma, Italy 43100
Email: alessandro.tasora@unipr.it
Andrea Degiorgi and
Marcello Colledani
Dipartimento di Ingegneria Meccanica
Politecnico di Milano
Milano, Italy 20126
Email: andrea.degiorgi@polimi.it
Email: marcello.colledani@polimi.it
Abstract—In waste processing technology, the recent Corona Elec-
trostatic Separation (CES) method is used to separate conductive
from non-conductive particles in recycling streams. This paper
proposes an innovative simulation approach based on non-smooth
dynamics. In this context, a differential-variational formulation
is used to implement a scalable and efﬁcient time integrator
that allows the large-scale simulation of trajectories of particles
with different properties under the effect of particle-particle
interactions and frictional contacts. Issues related to performance
optimization, fast collision detection and parallelization of the
code are discussed.
Keywords–Granular ﬂows, particles, waste processing
I.
INTRODUCTION
Numerical simulation of waste processing devices is be-
coming a key factor in the improvement of material recycling:
this work focuses on the simulation of the CES processing
technology. Such a technology uses electrostatic forces to
separate conductor materials from insulating materials within
a continuous granular ﬂow.
Particles with a varying degree of materials, such as plastic
or copper, are produced by a preprocessing stage where Printed
Circuits Boards (PCB) are shred and crushed, then they are
dropped on the rotating drum of the ECS device, where corona
charging is used to establish a negative charge on particles
when passing between two high-voltage electrodes [1].
Research on numerical methods for simulating this class
of problems is relatively recent [2][3].
Simulating this type of devices proved to be quite chal-
lenging in the past, because it requires the simulation of a
so called dense granular ﬂow, that is a collection of many
particles interacting with the surrounding ones. It is known that
only few special cases of granular ﬂows can be simpliﬁed into
macroscopic models, and in literature there are some example
of homogenizations that can lead to simpler Finite Element
Analysis (FEA), expecially with spherical particles; but, the
case at hand is not one of these. In granular ﬂows each par-
ticle, with arbitrary shape and mass properties, exploits three
dimensional displacements and rotations, hence six degrees of
freedoms are introduced per each particle. If one considers that
few seconds of simulation of a waste processing device like
our CES can involve hundreds of thousands, if not millions,
of particles, this instantly gives an idea of how challenging
the problem is from a numerical point of view. On top of this,
the fact that particles touch each other, introduces a major
complication that cannot be solved with classical tools of
ordinary differential equations and that leads to the complex
ﬁeld of non-smooth dynamics.
This motivated our research on a custom software tool that
can simulate the CES, and similar separation processes, by
means of an efﬁcient solution scheme based on Differential
Variational Inequalities (DVI).
Results show that we can obtain reliable simulations with
large timesteps and by running a single computer for few min-
utes. Also, the software tool that we developed can simulate
motors, moving parts and other auxiliary devices that might
interact with the granular ﬂow.
This article starts with an introductory section about the
CES process, then it presents the mathematical background of
the DVI simulation algorithm, it discusses how to overcome the
difﬁculty of massive collision detection in granular ﬂows, and
ﬁnally discusses the computation of electrostatic forces and
the software implementation. The last section shows examples
of results that can be achieved with this type of simulations.
II.
THE ELECTROSTATIC SEPARATION PROCESS
The CES is a waste processing device that separates
conductor materials from insulating materials within a granular
ﬂow of ﬁne particles. An example, from our labs, is shown in
Figure 1.
The granular ﬂow receives a discharge of electricity, which
gives high surface charge to the plastic particles, causing them
 
 
 
 
 
 
23kV electrode  
0kV rotating drum  
particles feeder  
splitters  
Figure 1: A CES processing device.
203
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-371-1
SIMUL 2014 : The Sixth International Conference on Advances in System Simulation

to be attracted to the rotor surface until they are brushed down
into a proper bin, below the drum. On the other hand, metal
particles do not remain charged, because their charge rapidly
decreases as they touch the rotor, so they fall into the farthest
bin. In case a particle is made of a mixture of materials, it
drops in intermediate bins. Metal particles are charged only
by electrostatic induction, and this causes a slight attraction
effect towards the static electrode of opposite sign.
The efﬁciency of the process is affected by non-controllable
parameters, such as particle shape and size. The quality of the
separation can be inﬂuenced by controllable parameters like
electrode voltage and position, drum speed, splitters position,
and feed rate.
III.
THE DVI FORMULATION
Granular ﬂows are complex dynamical phenomena where
a large number of particles interact with each other and with
the surrounding environment. The fact that interactions are of
discontinuous nature, for example because of hard contacts,
introduce a relevant difﬁculty in the time integration of the
system.
Most literature deals with this class of problems by means
of the so-called Discrete Element Method (DEM), an approach
that regularizes the non-smooth contact phenomena by in-
troducing regularized smooth functions [4]. This means that
hard contacts between particles in DEM are approximated
as spring-dashpot systems, whose stiff and nonlinear nature
requires very short timesteps for the integration of the resulting
Ordinary Differential Equations (ODE) [5]. If large timesteps
are used in DEM, the explicit ODE time integration may lead
to divergence.
In search of a faster and more robust way for simulating
granular ﬂows, we developed [6] a time stepping method based
on the recent theory of DVI. Such an approach is able to
handle up to millions of contacts between particles; it directly
captures the discontinuous nature of contacts with set-valued
functions, it does not require short integration time steps and
it has stability properties that are similar to an implicit method
for differential equations.
First researches on a special type of DVI, related to contact
problems, can be traced back to the Measure Differential
Inclusion theory (MDI) developed in [7][8].
In the DVI framework, the right hand side of a differential
expression is a set-valued function [9], so it is an inclusion, as
a generalization of classical ODEs that have simple equalities.
This is useful in mechanics, since non-smooth pehenomena
can be described by means of set-valued functions such as the
Signorini contact law or the Coulomb friction. Note that no
smooth regularization of discontinuities are needed.
One can discretize DVIs in time, even with large timesteps,
obtaining a Variational Inequality (VI) problem for each time-
step [10], since reaction forces must satisfy set inclusions
rather than algebraic equations.
A DVI is deﬁned as the problem of ﬁnding the function x
on [0, T]:
dx
dt = f(t, x, u)
(1)
u ∈ SOL (K, F(t, x(t), ·))
(2)
where the state of the system is deﬁned by x, and SOL(K, F)
in the solution of the VI problem:
u ∈ K
:
⟨F(u), y − u⟩
y ∈ K
(3)
 
 
A  
B  
u  
w  
n  
  
Figure 2: Contact point reference.
given a closed and convex K ∈ Rn set, and given a continuous
F(u) : K → Rn.
For a problem of particle dynamics, for instance, the state
is x = {qT , vT }T , with positions q and velocities v, and u
is the set of reaction forces, that must satisfy a VI. For more
informations on the DVI theory, see [11]–[15].
In our context of particle dynamics, the granular material
is composed of many small particles or large bodies in contact.
The system state is deﬁned by the vector of generalized coordi-
nates q ∈ Rmq and the vector of generalized speeds v ∈ Rmv
of the particles. Rotation of each particle is represented with
an unit quaternion ǫ ∈ H1 The mass matrix M(q) ∈ Rmv×mv
includes all the masses and inertia tensors of the particles.
Aside from contacts, in granular ﬂow simulations, particles
might be affected by ﬁeld forces such as gravity, aerodynamic
forces, etc. In the case of the CES device described here,
also forces caused by electrostatic interactions are added. All
these forces will be denoted f e(q, v, t) in the following.
The total force ﬁeld f t(q, v, t) ∈ Rmv includes also the
gyroscopic forces f c(q, v); we remark that for the class of
problems at hand, gyroscopic forces could be omitted without
compromising the results, in search of a more stable numerical
integration (because in free falling slender particles, gyroscopic
forces often lead to sharp changes in spin directions, thus
leading to potential numerical stiffness).
Bilateral constraints are useful to model hinges and joints
in devices. In our CES model, for instance, this class of
constraints is used to model the revolute joints of the rotating
drum, and the constraints for the movable splitting planes.
Bilateral joints are introduced via a set GB of scalar constraint
equations:
Ψi(⃗q, t) = 0,
i ∈ GB.
(4)
We introduce ∇qΨi =

∂Ψi/∂⃗q
T and ∇ΨiT = ∇qΨiT Γ(q),
to express the constraint (4) at the velocity level after differ-
entiation:
dΨi(⃗q, t)
dt
= ∇ΨiT v + ∂Ψi
∂t = 0,
i ∈ GB.
(5)
The term ∂Ψi
∂t
is needed only for time-dependent constraints.
This is the case, in our CES model, of the motor that imposes
a constant angular velocity to the rotating drum.
For the i-th contact between two bodies A and B, let ni
be the normal at the contact point, directed toward the exterior
of A, as in Figure 2. Let ui and wi be two vectors in the
contact plane such that ni, ui, wi ∈ R3 are orthogonal vectors,
204
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-371-1
SIMUL 2014 : The Sixth International Conference on Advances in System Simulation

and let Φi represent a signed contact distance, assumed to be
differentiable at least in vicinity of the contact.
The contact force has a normal component F i,N
=
bγi,nni, that must satisfy the Signorini contact rule bγi,n ≥
0
⊥
Φi(·) ≥ 0, and a tangential component F i,T
=
bγi,uui + bγi,wwi, caused by friction, along two tangential
directions ui, wi, that can represent either the sticking or
sliding friction. Within the Amontons-Coulomb theory [16]
of dry friction, that we consider adequate for the case of
inter-particle friction, the ratio between the normal and the
tangential force is limited by friction coefﬁcient µi.
Frictional unilateral contacts deﬁne a set GA. For each
contact i ∈ GA, we introduce the tangent space generators, that
can be derived as tangent constraint Jacobians: Di
γu, Di
γw.
We can express the friction model using the maximum
dissipation principle, thus leading to a nonlinear program
(bγi,u, bγi,w) = argmin vT (Dγubγi,u + Dγwbγi,w) subject to
constraint
q
bγ2
i,u + bγ2
i,w ≤ µbγi,n, or equivalently by intro-
ducing a multiplier λv and writing the Fritz John optimality
conditions for such nonlinear program:
∇γu,γwvT (Dγubγi,u + Dγwbγi,w) +
−λi
v∇γu,γw

µibγi,n −
q
bγ2
i,u + bγ2
i,w

= 0
(6)
µibγi,n −
q
bγ2
i,u + bγ2
i,w ≥ 0,
⊥
λi
v ≥ 0.
(7)
Finally, one can recognize that the following differential
model with equilibrium constraints, which expresses the full
model of the system including force ﬁelds, inertial forces,
contacts and bilateral constraints, is a DVI:
i ∈ GB
:
Ψi(q, t) = 0
i ∈ GA
:
bγi
n ≥ 0
⊥
Φi(q) ≥ 0
∇γu,γwvT (Dγubγi,u + Dγwbγi,w)
−λi
v∇γu,γw

µibγi,n −
q
bγ2
i,u + bγ2
i,w

= 0
µibγi,n −
q
bγ2
i,u + bγ2
i,w ≥ 0,
⊥
λi
v ≥ 0
˙q
=
Γ(q)v
M(q)dv
dt
=
X
i∈GA

The second difﬁculty is related to the fact that there are
many types of collision shapes, as shown in Figure 3, and
contact points must be created for pairs in this second phase,
called narrow phase. Ideally on would like to use polihedrons,
spheres, cylinders, boxes etc., as well as compounds of those
primitives, but then, algorithms for all possible combination
between those types must be implemented. A solution could
be to use algorithms of the GJK family [23] that requires
only a single member function for each class of primitive,
i.e., the computation of the support point. This is the default
narrow-phase algorithm for the Bullet3D library, however we
experienced that the GJK algorithm suffers a noticeable lack of
precision when working with primitives whose size is largely
different, which is exactly the case of the small particles
that come into touch with the rotating cylinder. To overcome
this problem, we implemented a closed form solution for
computing contacts between spheres and cylinders (interesting
enough, GJK is not affected by this issue for the sphere-vs-
box case). This works properly; but if one desires particles
that are non-spherical, for instance conical, this would require
the development of other closed form algorithms for cone-vs-
cylinder, cone-vs-cone, etc. To avoid this increase in coding
complexity, and yet resolve the issue of low precision in
GJK, we decided to model the collision shape of irregular
particles by using cluster of spheres, as in Figure 4. This is
an approximation of the real shapes (which are known only
at a statistical level anyway), but it performs well in terms of
algorithmic robustness and precision.
The ability of simulating particles with non-spherical
shapes is important because, as discussed by Lu et al. [3],
the shape of the particle can affect the global outcome of the
separation process; for example, spherical particles tend to fall
farther than thin and slender particles.
 
 
 
 
 
Figure 4: Concept of spherical decomposition.
We experienced that the idea of using cluster of spheres as
collision shapes can ﬁt well into parallel computing architec-
tures of the Grpahical Processing Unit (GPU) type, as shown
in [24].
V.
FORCES FIELDS
At each simulation timestep, the force ﬁelds acting on each
particle must be updated.
In this model, forces are different for metal and non-metal
particles [1]. In case of metals, for the j-th particle, forces
acting on the particle are: electric force f el,j, aerodynamic
drag force f a,j and gravity force f g,j, plus it can be affected to
the contact forces described in the previous paragraphs. Hence,
in the DVI of (8), one has:
f t,j(q, v, t) = f c,j + f el,j + f a,j + f g,j
On the other hand, forces acting on particles made of non-
metal materials are: electric image force f im,j, aerodynamic
drag force f a,j, and gravity force f g,j, plus the contact forces
if any. In this case it holds:
f t,j(q, v, t) = f c,j + f im,j + f a,j + f g,j
An analytical model has been used for computing the elec-
tric ﬁeld E(x, y, z) in the space between the two electrodes; to
this end we used the formulas expressed in [2]. The resulting
electric ﬁeld is depicted in Figure 5.
 
 Figure 5: Analytic electric ﬁeld model, used in run-time computations.
We remark that such analytic model is approximate, and it
does not consider the three-dimensional effect of decaying at
the sides of the cylinder. For comparison, we performed also a
PDE simulation of the electric ﬁeld using a 3D FEA software,
as in Figure 6, and the result is close to the analytical model,
at least for the zone of interest.
 
Figure 6: Reference force ﬁeld, computed with PDE in off-line.
For the sake of brevity, we do not report the formulas for
the aereodinamycal drag and for the gravity force, and we
focus on forces caused by the electrostatic ﬁeld. We make
the simplifying assumptions that the metal particles discharge
instantly as soon as they touch the grounded cylinder, and that
charging of the non-metal particles happens instantly as soon
they enter the volume in front of the cylinder.
206
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-371-1
SIMUL 2014 : The Sixth International Conference on Advances in System Simulation

We introduce the vacuum permeability ǫ0, the relative
permeability ǫr, the average radius of the particle r. Following
[2], the force caused by the electric ﬁeld acting on metallic
particles is:
f el,j = 0.832QmetalE(x, y, z)
(10)
where the charge Qmetal is
Qmetal = 2
3π3ǫ0ǫrr2E
(11)
The non-metal particles are subject to the electric image force:
f im,j = Q2
non−metal
4πǫ0ǫr(2r)2
(12)
Qnon−metal = 3πǫ0(2r)2E
ǫr
ǫr + 2
(13)
We generate shapes with different densities and different
sizes r and different values of ǫ0 according to a random
distribution generator, for instance one can generate ﬂows with
30% of copper particles and 60% of plastic particles, with
sizing given by probability distributions. For cases of particles
made of microscopic clusters of not-separated materials, we
simply apply a weighted average of the forces described above.
VI.
SOFTWARE IMPLEMENTATION
The simulation software is implemented in C++ language
and uses our Chrono::Engine C++ simulation libraries [25],
which implement the DVI method.
To avoid the burden of deﬁning coordinates, sizes and
shapes of the collision surfaces, as well motors and joints
of the CES machine, we developed a custom add-in in C#
language for the SolidWorks software. The add-in allows the
designer to model the system with the GUI, as in Figure 7;
then one can export the environment into a ﬁle that is load
and parsed by the simulator before running the simulation.
On the other hand, the generation of the particle ﬂow and the
simulation loop is controlled directly by C++ statements in the
stand-alone simulator, as in Figure 8.
 
 
 
 
 
Figure 7: Model of the CES device in the SolidWork parametric CAD. Note
that the surfaces that can affect collision detection have been marked as red.
 
Figure 8: Model of the CES device during the simulation in the OpenGL view
of our Chrono::Engine software.
Post-processing of the data is performed via ad-hoc Matlab
programs, although the simulator also offers an interactive
OpenGL view that can be used to quickly evaluate the results
of simulation tests. For the ﬁnal simulations we use timesteps
of 0.001 s, and the number of iterations for the solution of the
CCP problem has been limited to 100.
VII.
RESULTS
Simulations can be run for different speeds of the drum,
for different ﬂow rates, and for different mixtures and size
distributions of particles. At each simulation run, particle
trajectories are processed by sorting their end point in virtual
bins; by splitting the horizontal X direction in evenly spaced
bins and by counting the particles that end into such bins, one
can build statistical distributions of the output ﬂow, as shown
in Figure 9. This can be used to simulate different scenarios of
operation of the CES device, and it can be used also to design
new versions of the device that could process more material
without incurring into inefﬁciency.
For instance, results in Figures 10 show how the distri-
bution of the outcome, for the same material, increases in
variance as the ﬂow rate increases. The reason is that for high
Figure 9: Output distribution showing the separation of metal and plastic  
particles.
207
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-371-1
SIMUL 2014 : The Sixth International Conference on Advances in System Simulation

ﬂow rate the granular packing starts to be denser, as particles
are more likely to be in contact each other, even in stacked
layers over the drum, and this introduces more randomness in
the process.
VIII.
CONCLUSION AND FUTURE WORK
We
implemented
a
custom
software,
based
on
our
Chrono::Engine simulation middleware, that can perform sim-
ulations of granular ﬂows of particles in waste-processing
devices. In detail, a CES device has been studied with this
tool. The simulation method, being based on an original
DVI formulation, permits large timesteps without incurring
in numerical instability. Special optimizations have been used
in the collision detection algorithms in order to reduce the
computational overhead. A custom add-in for the SolidWorks
software has been used in order to simplify the workﬂow, as
the user can export collision shapes from the user interface of
the CAD.
Future development will address experimental validation
and other types of waste processing machines such as the Eddy
Current Separator (ECS).
 
 
 
 
 
 
Figure 10: Output distribution of falling particles, for different ﬂow rates.
REFERENCES
[1]
J. Li, Z. Xu, and Y. Zhou, “Application of corona discharge and
electrostatic force to separate metals and nonmetals from crushed
particles of waste printed circuit boards,” Journal of Electrostatics, vol.
65(4), 2007, pp. 233 – 238.
[2]
J. Li, H. Lu, Z. Xu, and Y. Zhou, “A model for computing the
trajectories of the conducting particles from waste printed circuit boards
in corona electrostatic separators,” Journal of Hazardous Materials, vol.
151, no. 1, 2008, pp. 52 – 57.
[3]
H. Lu, J. Li, J. Guo, and Z. Xu, “Movement behavior in electrostatic
separation: Recycling of metal materials from waste printed circuit
board,” Journal of Materials Processing Technology, vol. 197, no. 13,
2008, pp. 101 – 108.
[4]
P. A. Cundall and O. D. L. Strack, “A discrete numerical model for
granular assemblies,” Geotechnique, vol. 29, no. 1, 1979, pp. 47–65.
[5]
E. Hairer, S. P. Nørsett, and G. Wanner, Solving Ordinary Differential
Equations.
Springer, 2010.
[6]
A. Tasora and M. Anitescu, “A convex complementarity approach
for simulating large granular ﬂows,” Journal of Computational and
Nonlinear Dynamics, vol. 5, no. 3, 2010, pp. 1–10.
[7]
J. J. Moreau, “Standard inelastic shocks and the dynamics of unilateral
constraints,” in Unilateral Problems in Structural Analysis, G. D. Piero,
F. Macieri, and S. Verlag, Eds. New York: CISM Courses and Lectures
no. 288, 1983, pp. 173–221.
[8]
——, “Unilateral contact and dry friction in ﬁnite freedom dynamics,”
in Nonsmooth Mechanics and Applications, J. J. Moreau and P. D.
Panagiotopoulos, Eds.
Berlin: Springer-Verlag, 1988, pp. 1–82.
[9]
F. Pfeiffer and C. Glocker, Multibody Dynamics with Unilateral Con-
tacts.
New York City: John Wiley, 1996.
[10]
D. Kinderleher and G. Stampacchia, An Introduction to Variational
Inequalities and Their Application.
Academic Press, New York, 1980.
[11]
D. E. Stewart, “Reformulations of measure differential inclusions and
their closed graph property,” Journal of Differential Equations, vol. 175,
2001, pp. 108–129.
[12]
D. Stewart and J.-S. Pang, “Differential variational inequalities,” Math-
ematical Programming, vol. 113, no. 2, 2008, pp. 345–424.
[13]
D. E. Stewart and J. C. Trinkle, “An implicit time-stepping scheme for
rigid-body dynamics with inelastic collisions and Coulomb friction,”
International Journal for Numerical Methods in Engineering, vol. 39,
1996, pp. 2673–2691.
[14]
M. Anitescu, F. A. Potra, and D. Stewart, “Time-stepping for three-
dimensional rigid-body dynamics,” Computer Methods in Applied Me-
chanics and Engineering, vol. 177, 1999, pp. 183–197.
[15]
F. Jourdan, P. Alart, and M. Jean, “A Gauss Seidel like algorithm
to solve frictional contract problems,” Computer methods in applied
mechanics and engineering, vol. 155, 1998, pp. 31 –47.
[16]
C. A. de Coulomb, Th´eorie des machines simples en ayant ´egard au
frottement de leurs parties et `a la roideur des cordages.
Bachelier,
Paris, 1821.
[17]
A. Iserles, H. Z. Munthe-Kaas, S. P. Nrsett, and A. Zanna, “Lie-group
methods,” Acta Numerica, vol. 9, 2000, pp. 215–365.
[18]
A. Tasora and M. Anitescu, “A matrix-free cone complementarity
approach for solving large-scale, nonsmooth, rigid body dynamics,”
Computer Methods in Applied Mechanics and Engineering, vol. 200,
no. 5-8, 2011, pp. 439 – 453.
[19]
F. Facchinei and J. Pang, Finite-dimensional variational inequalities and
complementarity problems.
Springer Verlag, 2003, vol. 1.
[20]
M. Anitescu and A. Tasora, “An iterative approach for cone complemen-
tarity problems for nonsmooth dynamics,” Computational Optimization
and Applications, vol. 47(2), 2010, pp. 207–235.
[21]
E. G. Birgin, J. M. Mart´ınez, and M. Raydan, “Nonmonotone spectral
projected gradient methods on convex sets,” SIAM J. on Optimization,
vol. 10, August 1999, pp. 1196–1211.
[22]
E.
Coumans.
http://bulletphysics.org.
[Online].
Available:
http://BulletPhysics.org (August 2014)
[23]
S. K. E.G. Gilbert, D.W. Johnson, “A fast procedure for computing the
distance between complex objects in three-dimensional space,” Robotics
and Automation, vol. 4, no. 2, 1988, pp. 193–203.
[24]
D. Negrut, A. Tasora, H. Mazhar, T. Heyn, and P. Hahn, “Leveraging
parallel computing in multibody dynamics,” Multibody System Dynam-
ics, vol. 27, 2012, pp. 95–117, 10.1007/s11044-011-9262-y.
[25]
A. Tasora. Chrono::Engine project, web page. [Online]. Available:
www.chronoengine.info (August 2014)
208
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-371-1
SIMUL 2014 : The Sixth International Conference on Advances in System Simulation

