Concept for Finding Process Models for New Classes of Industrial Production 
Processes 
 
Norbert Link, Jürgen Pollak, Alireza Sarveniazi 
Intelligent Systems Research Group 
Hochschule Karlsruhe - Technik und Wirtschaft 
Karlsruhe, Germany 
e-mail: Norbert.Link@hs-karlsruhe.de, Juergen.Pollak@hs-karlsruhe.de 
 
 
Abstract— The required knowledge about relations between 
quantities governing the control and quality estimation of 
production processes is represented in so-called process 
models. Such models may relate process parameters and 
process goals allowing to find appropriate parameter values 
for given goals. Other models allow the derivation of the 
process state from observable quantities. Controls based on 
Markov Decision Processes require a state transition model 
and a cost function model of subsequent states. The functional 
relationships between the quantities of a model are usually 
represented by a dedicated combination of some base functions 
with given, fixed parameter values. In many cases, this is a 
linear combination of Kernel functions, where the parameters 
are determined by fitting known experimental data, such as in 
Support Vector Regression methods. The process models 
always refer only to a dedicated process class with given 
conditions (e.g., parts materials and geometries or machine 
properties). There are model populations in most industrial 
process domains, such as laser metal sheet welding, 
representing several metal alloys in combination with sheet 
thicknesses and welding equipment. In this paper, we propose 
novel methods on how to make use of this already existing 
model knowledge, which is used for the derivation of models of 
new process classes in the same process domain. For this 
purpose, the formation of a common model representation is 
derived from the individual models of the domain. The 
parameters of the individual models in this common 
representation form a model space, in which a model of the 
models can be formed: the hyper-model.  General ideas of 
hyper-model formation are presented and approaches are 
discussed how dedicated models for specific, new process 
classes (e.g., with different conditions) can be derived from it. 
Keywords: machine learning; data modeling; hyper-model;  
process model; welding. 
I. 
 INTRODUCTION 
Mathematical 
models 
represent 
the 
mapping 
of 
adjustable quantities on resulting phenomena, such as 
process parameters on process results.  Models of processes 
can represent many dependencies of process quantities, 
depending on the purpose of model exploitation. In the case 
of simple controlled processes, the model might describe the 
relation of process parameter values with quality measures to 
be achieved (goal values). In the case of a Markov Decision 
Process the model might represent the state transition 
probability depending on present state and control action [2].  
In simple controlled processes the process parameters 
describe the variable control quantities, which can be 
represented by a vector 𝒑 and which determine the actions. 
All fixed quantities otherwise governing the process are the 
process conditions, which are represented in a vector c. They 
are fixed externally and independently from process 
execution. The desired end state of the process (“goal”) is 
described by goal quantities forming the goal vector g. For 
example, in car seat manufacturing metal sheets are joined 
by laser welding seams. The process parameters are laser 
power, laser focus and welding speed. The variable 
conditions are the material thicknesses of the two sheets. The 
goal is a certain seam width and seam depth, which have to 
be obtained. The welding task is then given by the 
combination of the goals and the conditions t = [g, c]. At 
least one method (consisting of process parameters p) has to 
be found, fulfilling a given task t. In other words, a mapping 
from 𝒕 to 𝒑has to be performed. We call this the task-to-
method transform (T2MT) which is the inverse process 
model. The process model itself in the simple case is the 
functional relationship 𝒈 = 𝑓(𝒑, 𝒄)  of the goal quantities 
with the condition and control quantities c and p. It is used to 
find the suitable control quantities or process parameters by 
solving the equation for p at given c. 
A process model can be built from experimental data 
where a variety of process conditions is explored. For each 
specific condition, a set of methods p is applied and the 
resulting goal values g are measured. Each single experiment 
gives a vector triple [𝒈, 𝒑, 𝒄] and the available experimental 
series give a set of such triples. We build an abstraction of 
the experimental data by the formation of a goal function 
𝑔(𝒑, 𝒄) [1]. It represents the knowledge contained in the 
experimental data: the model. The model function 𝒈  is 
representative in our example of a class of processes, where 
the thicknesses of the two metal sheets may vary within the 
bounds covered by the experimental sample. 
In this formulation of the model formation, we have 
implicitly assumed that many other external conditions have 
been controlled and kept constant during all experiments for 
setting up the sample to learn the abstraction. In our example 
case above these are the material types of the metal sheets 
and the welding laser head type for instance. Laser welding 
manufacturers usually set up process models as described 
154
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

above for the common materials and welding heads as 
required by their customers by creating full, independent 
experimental 
samples 
in 
each 
case. 
The 
possible 
relationships between models are not exploited. On the other 
hand side, the “implicit” conditions can be represented by 
numerical quantities 𝜍 as well (such as orientation density 
function and grain size distribution in poly-crystalline metal 
sheets or optical parameters of the laser head), forming a 
vector 𝝇.  
Then, each model function is in correspondence to a 
point in the space of vectors 𝝇. The relations between models 
could be exploited if it would be known how a model of 
some 𝝇* transforms into the model of some other 𝝇´, when 
moving from 𝝇∗  to 𝝇´ . The knowledge of such a 
transformation 

g(p, c|ς´) = h[g(p, c|ς*)]

is called a hyper-model. Once such a hyper-model is set up, 
it can be exploited to derive estimates of process models for 
new process classes. 
The paper is organized as follows: 
We first review some common modelling approaches in 
Section II to create the basis for hyper-models. Then in 
Section III we propose the novel hyper-model approach 
which consists of a method to derive a hyper-model from a 
set of existing process models and a method to derive a new 
process model from the hyper-model for a given ς. Finally, 
we show in Section IV how this approach might be applied 
to our laser welding example. The acknowledgement and 
conclusions close the article. 
II. 
MODELLING PROCESSES AND MODEL EXPLOITATION 
In process state tracking (following the state evolution 
during processing) and quality estimation (properties of the 
final state) and in control (determining the process-governing 
control quantities or process parameters) various models are 
required. These models map available or given quantities 𝒙 
(such as observable measurement values) to other quantities 
𝒛 bearing the information required to decide upon actions. 
This mapping is usually represented as mathematical 
transformation, 
which 
is 
specified 
as 
a 
dedicated 
transformation function 𝒛 = 𝑓(𝒙) between the corresponding 
vector spaces of vectors 𝒙  and 𝒛  where the vector 
components are assumed to be real-valued. This function has 
to be determined in order to represent the required 
knowledge. Due to the complexity of real-world production 
processes it is almost always impossible to determine the 
model form analytically from physical principles. The 
common way of arriving at models is a generalization of the 
relations encountered in experimental data, which are 
supposed to represent the process. This is performed by 
specifying a quite general function with a set of parameters, 
the values of which are determined to optimally fit the data. 
For this purpose many machine-learning methods, such as 
Support-Vector-Regression [3], Artificial Neural Networks 
[7], Symbolic Regression [8] or Levenberg-Marquart fitting 
of parameters of dedicated functions derived from physical 
considerations [9] are used.  
In many cases, it is the inverse of the desired 
transformation, which is captured by the experiments. An 
example of this is the goal function, where experiments yield 
the process result, induced by the selected process 
parameters. The process is sampled by varying the process 
parameters and recording the respective results. Now the 
functional dependency of the result quantities on the process 
parameters (the goal function) can be fitted, while in the 
process control the parameter values required for a given 
process result are required. For this purpose the goal function 
must be used to find the set of solutions resulting in the 
desired goal value. 
The process of model formation is depicted in Fig. 1. 
 
 
Figure 1.  Data from experiments under different implicit conditions serve 
to form process models. 
A model is a function (parametrized by a vector 𝝀) 
which describes the target value 𝒛 depending on a variable 
𝒙. In general, the input variable 𝒙 is a vector of quantities, 
which are controlled by the user to generate the target 
quantity. The generation of a model from given data 
corresponds to the determination of 𝝀 . Available data 
always depends implicitly on other conditions not covered 
by 𝝇. This implicit dependency is retained in 𝝀 and the 
corresponding model 𝑓𝝀 is only valid under these implicit 
conditions. The first step after the experimental acquisition 
of the sample data set {𝒙´𝒏, 𝒛´𝒏} under a certain condition 𝝇𝑛 
is to bring the data into a common representation basis via a 
“normalizing” transformation 𝑷𝒏(𝒙, 𝒛) . This allows to 
operate on the data with the same functional representation 
of model functions. With these “normalized” data {𝒙, 𝒛} the 
parameters 𝝀 of a transformation function are estimated to 
optimally represent the mapping 𝒛 = 𝑓𝝀(𝒙) with methods as 
mentioned above. This results in dedicated models  
 
𝐳n = f𝛌n(𝐱)

for each of the implicit process conditions 𝝇𝑛. The model 
functions can be linear combinations of some base functions   

f𝛌n(𝐱) = ∑
λi𝛟i(𝐱)
N
i=1


155
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

If the model functions obtained this way represent the 
required mapping, they can be directly used to retrieve the 
desired quantity value of 𝒛 by inserting the given value 𝒙 
and evaluating the formula. 
If –on contrary- the data and the derived model function 
represent the inverse transformation, and 𝒙 is the quantity to 
be retrieved for a given instance of 𝒛̃, then the solution set 𝒙̃ 
of values 𝒙 has to be found which satisfies  
 
𝒛̃ = f𝛌(𝐱)

The target function 𝒛 = 𝑓𝝀(𝒙)  represents a surface 
embedded into a high-dimensional space spanned by the 
given quantities 𝒙  (e.g., process parameters and process 
conditions). A specific, desired value 𝒛̃ of the quantity 𝒛 
defines a parallel hyperplane over the space of vectors 𝒙 at 
constant height 𝒛̃, which intersects with the curved target 
function 𝒛 = 𝑓𝝀(𝒙). The intersection hyper-curve is then the 
sought-after solution set, which is called the level set: 
 
 {𝒙̃} = {𝒙 | 𝐳̃ = f𝛌(𝐱)}

The level set can be found by meshing the 𝒙 space if the 
dimension is not too high. The mesh is refined by 
incrementally subdividing cells, which are intersected by 
𝒛̃ = 𝑓𝝀(𝒙), until the desired accuracy is reached. The level 
set is afterwards given by a discrete set of solutions. 
The final level set is then a list of 𝒙̃ vectors. Each of 
them will produce the result 𝒛̃  as requested by the task. 
Every solution in the found level set is associated with some 
cost such as energy, wear of tools, production cycle time 
and so on, which is used to select a best solution. 
III. 
HYPER-MODEL APPROACH 
If there exist several process models 𝒛𝑛 = 𝑓𝝀𝑛(𝒙), each 
representing a different process class under dedicated, 
different implicit process conditions 𝝇𝑛, these models can be 
considered as a sample of models over the space of 𝝇. The 
dependencies of the models on the implicit process 
conditions 𝝇𝑛 are implicitly reflected by the values of the 
model parameters 𝝀𝑛 . Finding a model corresponding to 
new conditions 𝝇∗  means finding the corresponding 
parameter values 𝝀∗. The new model can then be applied for 
its usual purpose (task-to-method transform, quality 
estimation, state prediction, etc.) in the new situation. If a 
valid functional relation between 𝝀 and 𝝇 can be established, 
based on existing models, it is possible to derive new 
models from the generalization represented by this 
functional relation. We call such a relation 
 
𝛓 = g𝛃(𝛌) 
(6) 
a hyper-model, e.g., a sum of weighted base functions Ψk, 
 
g𝛃(𝛌) = ∑ βk𝚿k
k
(𝛌). 
(7) 
A hyper- model is a function (parametrized by a vector 
𝜷) which describes the connection between the implicit 
conditions 𝝇 and the models represented by 𝝀. The hyper-
model operates on model parameters and represents the 
differences between models. 
Another point of view on a hyper model is that of a 
transformation 
between 
models. 
The 
transformation 
operator 𝑇𝝇 depends on the implicit conditions 𝝇 and maps a 
model 𝑓𝝀′ to 𝑓𝝀.  
 
T𝛓 f𝛌′(𝐱) = f𝛌(𝐱)  
(8) 
This is equivalent to another transformation operator 𝑇𝝇
′ 
which maps the model parameters 𝝀′ to 𝝀. 
The operator 𝑇𝜍
′  can be represented by a function 𝐺′ 
depending on model differences  𝝇 and model parameters 𝝀. 
 
G′(𝛓, 𝛌′) =  𝛌 
(9) 
If 𝝀′  represents a fixed standard reference model 
(derived under standard conditions), then 𝝀′  can be 
absorbed completely in the function leading to 
 
G(𝛓) =  𝛌  
(10) 
This formulation of a hyper model brings us back to the 
previous definition of a hyper-model. The two points of 
view are equivalent if the hyper-model 𝑔𝜷 is invertible: 
 
𝛓 = g𝛃(𝛌) ⇒ G = g𝛃
−1  
(11) 
This way, the hyper-model can be considered either as a 
transformation between models or as a generating function, 
which relates model parameters to situations 𝝇. 
The hyper-model 𝝇 = 𝑔𝜷(𝝀)  can be determined as a 
generalizing function from sample models, since each 
model, belonging to a condition 𝝇 is then represented by a 
point in the space of vectors 𝝀. A set of models corresponds 
to a set of points in 𝝀 –space with associated condition 
values. This can be considered as a set of sample points of a 
(eventually vector-valued) condition (𝝇-)surface over the 
space of 𝝀. This surface can be represented by the function 
𝑔𝜷(𝝀) , which is a generalization of the sample points 
(models). A hyper-model must not necessarily represent 
conditions which are associated with the models but can 
represent any quantifiable semantic information. 
IV. 
LASER WELDING EXAMPLE 
An application of the T2MT to laser welding is described 
in [4]. In order to weld metal sheets by laser, the sheets are 
held in fixed positions. The laser head is delivering the 
radiation power of the laser to a focal area, where the metal 
sheets are molten by the absorbed energy. When the focus is 
moving on, the energy delivery to the previous area ceases 
and the metal solidifies again after cooling off. A robot 
moves the laser head along the intended seam, while the 
head adjusts angle and distance of the laser focus relative to 
156
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

the sheet surface. Three parameters determine the process: 
”focal distance” 𝑧𝑓 (in the range of ±10 mm), ”laser power” 
P (up to 6 kW) and translational speed of the focus (”speed”) 
v (up to 200 mm/s). The resulting welding seam can be 
described by weld width w and penetration depth d (Fig. 2), 
which are usually specified by the customer as 𝑤0 and 𝑑0. 
The required parameter values of 𝑧𝑓, P and v are derived by 
inversion of the process model 𝑤0 = 𝑤(𝑧𝑓, 𝑃, 𝑣)  and 
𝑑0 = 𝑑(𝑧𝑓, 𝑃, 𝑣) via T2MT, as described in Section II. The 
process model is built via machine learning from a large set 
of experimental data with width and depth measurements in 
the lab. It represents the functional dependency of the 
customer goal on the parameters under the present conditions 
(e.g., initial laser head ℎ𝑖𝑛𝑖𝑡) as 𝑤(𝑧𝑓, 𝑃, 𝑣|ℎ𝑖𝑛𝑖𝑡). 
Under new conditions (e.g., new laser head) the process 
will behave differently and the model no longer be valid. As 
long as the physics of the process has not changed, the new 
process model can be most likely derived by a 
transformation of the initial model as in equation (8).  
 
Figure 2.  Cross section of two metal sheets joined by a welding seam 
from laser seam welding. With kind permission of AWL-Techniek B.V [5] 
The initial model and only a few new experimental data 
with an exchanged laser head ℎ𝑒𝑥𝑐ℎ were used to estimate 
such transformation as depicted on the right column of Fig. 
3. Just an affine mapping was required to transform the 
process model for capturing the new condition with 
sufficient accuracy (middle column of Fig. 3).  
Figure 3.    Transformation of laser seam welding process model from the 
initial laser head to an exchanged laser head. 
The left column shows the large deviation of the process 
results with parameters derived from the initial model. 
CONCLUSION 
Instead of having to set-up a new model from hundreds of 
lab experiments, it is sufficient to estimate the transformation 
from only very few experiments. This can be generalized to a 
more generic hyper-model as in Section III to also include 
other conditions such as sheet material. 
This way, hyper-modelling is enabling the re-use of existing 
models and minimizing efforts to explore and represent 
processes under new conditions. It is also an embedding of 
process-induced condition relations in the hyper-parameter 
space, which can be explored and exploited for the prediction 
of processes under modified conditions. 
ACKNOWLEDGMENT 
The authors would like to thank the German Federal 
Ministry of Education and Research (BMBF) for funding the 
presented research under grant # 03FH061PX5. [6] 
REFERENCES 
[1] J. Pollak, A. Sarveniazi, and N. Link, “Retrieval of process 
methods from task descriptions and generalized data 
representations,” The International Journal of Advanced 
Manufacturing Technology, vol. 53, no. 5, pp. 829–840, 2011. 
[Online]. Available: http://dx.doi.org/10.1007/s00170-010-
2874-1 
[2] M. Senn, N. Link, J. Pollak, and J. H. Lee, “Reducing the 
computational effort of optimal process controllers for 
continuous state spaces by using incremental learning and 
post-decision state formulations,” Journal of Process Control, 
vol. 24, no. 3, pp. 133 – 143, 2014. [Online]. Available: 
http://www.sciencedirect.com/science/article/pii/S095915241
4000055 [retrieved: July, 2016]. 
[3] V. Vapnik, “The Nature of Statistical Learning Theory”. 
Berlin: Springer, 1995. 
[4] J. Pollak, “Application of task-to-method transform to laser 
seam welding” in INTELLI 2015: The Fourth International 
Conference on Intelligent Systems and Applications. IARIA, 
p. 
128 
– 
133, 
2015. 
[Online]. 
Available: 
https://www.thinkmind.org/download.php?articleid=intelli201
5_7_20_95016 [retrieved: June, 2016]. 
[5] AWL-Techniek 
B.V., 
Nobelstraat 
37, 
NL-3846 
CE 
Harderwijk, (postal address: P.O. Box 245, NL-3840 AE 
Harderwijk), The Netherlands, Web: http://www.awl.nl 
[retrieved: June, 2016]. 
[6] Project 
HyperMod, 
funded 
by 
German 
BMBF, 
“Generalization of mathematical models of physical objects 
and processes: Hyper-Models for the generic description of a 
set of phenomena classes from single models and their 
exemplary use in intelligent manufacturing” 
[7] M. Senn, K. Jöchen, T. Phan Van, T. Böhlke, and N. Link, 
“In-depth online monitoring of the sheet metal process state 
derived from multi-scale simulations”. The International 
Journal of Advanced Manufacturing Technology, Volume 
68(9-12), pp 2625-2636, 2013. 
[8] S. Fischer, “Process State Observation using Artificial 
Networks and Symbolic Regression”, (INTELLI2015), ISBN: 
978-1-61208-437-4, pp 142-147, 2015. 
[9] M. Senn and N. Link, “A Universal Model for Hidden State 
Observation in Adaptive Process Controls”, International 
Journal on Advances in Intelligent Systems, 4(3&4), pp 245-
255, 2011. 
157
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-518-0
INTELLI 2016 : The Fifth International Conference on Intelligent Systems and Applications (includes InManEnt 2016)

