Applied SOA with ESB, BPM, and BRM –
Architecture Enhancement by Using a Decision Framework
Andreas Hausotter, Arne Koschel, Malte Zuch, Johannes Busch,
Alexander H¨odicke, Richard Pump, Juri Seewald, Lina Varonina
University of Applied Sciences & Arts Hannover, Faculty IV,
Hannover, Germany
Email: Andreas.Hausotter@hs-hannover.de, Arne.Koschel@hs-hannover.de
Abstract—To keep their competitive edge, enterprises need to
change their operational processes in a ﬂexible and agile manner.
A Service-oriented Architecture (SOA) may help to meet these
needs. One key feature of a SOA is the externalization of business
process logic. However, process logic is often complex, hard to
understand and difﬁcult to adapt. This issue is due to a mingling
of process and decision logic. In order to ensure ﬂexibility and
agility, decision logic should be moved to a separate service.
In a previous work, we provided a decision framework, which
recommends an approach to actually realize such a ”rule service”
conceptually. As the key contribution of this paper, we now apply
our framework in particular to the German insurance domain.
We show the resulting SOA architecture, which has an Enterprise
Service Bus (ESB), a Business Process Management (BPM) /
Workﬂow Management System (WfMS), and a Business Rules
Management System (BRMS) / rules engine as key components.
Moreover, we apply a standardized insurance process scenario
working within this architecture.
Index Terms—Business Process Management (BPM); Business
Rules Management (BRM); Business Rules Management System
(BRMS); Enterprise Service Bus (ESB); Service-oriented Architec-
ture (SOA); Workﬂow Management System (WfMS)
I. INTRODUCTION
A. Motivation
Workﬂow Management Systems support companies in the
management and execution of business processes [25]. Nowa-
days, the latest challenges for insurance companies such as
the dynamic business environment and compliance with legal
requirements highlight the need for business agility [2][24].
Business agility requires the individual, quick, and ﬂexible
composition and adoption of business processes [9][10]. This
can be done in the context of Business Process Management
(BPM). As a result of the composition and adaption, the
number of decisions may rise within the processes. Hence,
the complexity of the business processes can lead to a lack of
business agility [10].
Business rules provide an opportunity to reduce the com-
plexity of the processes, whilst the complex decision logic is
encapsulated. The necessary changes with respect to agility
often relate to the complex decision logic and not to the
process or business logic. Thus, the separation of decision
logic and process logic on the modeling and implementation
level is a useful approach to reduce complexity.
Comprehensive service-oriented approaches have the poten-
tial to create business agility [27]. Thus, a service-oriented
architecture (SOA) can help to address challenges like the dy-
namic business environment. The service-oriented integration
of BPM and Business Rules Management (BRM) provides
potential to change business processes in an agile manner [11].
The results of interviews with experts of the insurance
service sector emphasized the issue to choose an adequate
approach to automate the execution of business rules within
service-oriented architectures with respect to a missing deci-
sion support. Considering the dynamic business environment
in the insurance services sector, the topics of the presented
work are of potential value for several insurance companies
(at least) in Germany [2][24].
B. Contribution
Our previous work [11] presents a decision framework,
which recommends an approach to realize a ”rule service”
conceptually. It serves as the groundwork for the key contri-
butions of this article, which are as follows:
• The application of the decision framework to scenarios
particularly suitable to the German insurance domain, but
easily transferable to similar environments.
• A resulting SOA, which has as key technical components
an ESB, a BPM system/WfMS, a business activity mon-
itoring (BAM), and a BRM system.
• The detailed design of our SOA includes four steps: (1)
initial design, (2) design decisions, (3) product evaluation
for key components of the architecture, and (4) a resulting
ﬁnal architecture.
• Moreover, our SOA is applied to a standardized insur-
ance process application scenario (”Goodwill Process”)
working within the overall architecture from the German
”Versicherungsanwendungsarchitektur (VAA) [28]”. The
VAA is a set of standardized insurance processes, the
”insurance application architecture”.
Our work takes place within the context of the current
research activities of the ”Competence Center - Information
Technology and Management” (CC ITM) [5]. The CC ITM is
a cooperation between IT departments from German insurance
20
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

companies and our faculty. The purpose of this cooperation is
knowledge transfer and the combination of scientiﬁc research
with practical experiences.
The remainder of the paper is structured as follows: In Sec-
tion II we present prior and related work. In the following main
sections we ﬁrst show the application scenario in Section III,
then our initial architecture in Section IV, implementing design
decisions in Section V, an evaluation of products in Section VI,
and eventually the resulting target architecture of the system
in Section VII. Section VIII ﬁnalizes the article with some
conclusions and and an outlook to future work.
II. PRIOR AND RELATED WORK
The concept of a complex software architecture is always in-
ﬂuenced by several factors. For handling the variability of de-
cisions between those factors, a quantitative evaluation method
can reduce complexity. In a previous work of the CC ITM,
different concepts and technologies were discussed with such
a quantitative evaluation method [18][16]. Therefore, different
factors have been speciﬁed to build up a decision framework
for identifying suitable business rule execution approaches.
Further on, potential application scenarios have been identiﬁed
by the CC ITM and the collaboration partners. As a result of
this, the standardized insurance process application scenario
(”Goodwill Process”) was selected. The scenario, introduced
in Section III (cf. [1][18] for an extended version), is inspired
by a common insurance application architecture used by the
German insurance industry [28].
The required elements, which are to be implemented with
a rule-based approach, were determined within this scenario.
Within the process of identifying the required elements, the
business rule set goodwill adjustment was identiﬁed. An ex-
traction process for business rules identiﬁcation from business
process models is mentioned in [20]. This process is useful,
because business rules are often not explicitly included in
the process models. A decision guideline for distinguishing
between business process and business rule is presented in
[22]. Requirements concerning business rules technologies
are deﬁned in [2][24]. The variables for determining suitable
solutions for business rule implementation are illustrated in
[23]. As a result of the literature review, the decision guideline,
the requirements and the variables provide a contribution to
the decision framework. Since no previous research allows
a simple choosing of an adequate business rules execution
approach this decision framework is the ﬁrst to extend the cur-
rent state of research through the linking of factors, indicators
and business rules execution approaches. The determination
of the speciﬁc business rules execution approach depends on
the elements, which are to be implemented with a rule-based
approach.
Concerning our project, the software architecture has to ﬁt
the demands of the insurance business. Requirements such
as privacy and security protection of customer data excluded
peer-to-peer (P2P) solutions despite the advantage of the high
availability P2P solutions could offer. Thus, solutions with
discrete data storage options and a higher reliability concern-
ing requests were considered. Especially, the service-oriented
approach with an agile business rules solution was identiﬁed
as most ﬁtting for the insurance sector. The combination of
high cohesion and lose coupling increases the ﬂexibility and
maintainability of complex and highly distributed software
architectures [12]. In particular, an ESB can fulﬁll the require-
ments of highly distributed SOAs [6].
The physical integration instead of a logical one was
identiﬁed as the most ﬁtting solution in [16], regarding the
general SOA approach of the CC ITM project. Further on,
reliable messaging and security aspects of a physical ESB
are also supporting the general demands of the insurance
business in terms of security. Because of the whole software
architecture consisting of distributed software components, a
cloud solution was determined as potential extension for the
current BPM solution [16]. The paper [7] highlights the ben-
eﬁts of migrating BPM solutions into the cloud, to fulﬁll the
increasing future demand of adaptive solutions in a dynamic
business environment. As a result of all these ﬁndings, the
following Section III presents our application scenario from
the German insurance domain. With this standard scenario, we
will analyze its underlying SOA-, BPM-, BAM-, and BRM-
based architecture.
III. APPLICATION SCENARIO
A special application scenario has been applied to evaluate
the prototypical implementation, which we have described
in [11]. This scenario is depicted in Figure 1. The scenario
is a sub-process of the overall process ”claim processing”.
This overall process implements a standardized insurance
companies use case, namely ”handle a goodwill request” from
the German ”Versicherungsanwendungsarchitektur [28]”.
A goodwill payment is a compensation voluntarily granted
by the insurance company without any obligation. The com-
pany checks whether compensation should be provided and
- if so - determines its amount. The triggering event is the
repudiation of cover. Its goal is to preserve the business rela-
tionship with the partner (customer). The task ”Set goodwill
adjustment” determines the goodwill amount and is a typical
case for a business rule in the German insurance domain.
Figure 1. The Goodwill Process
21
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

Within a process it makes sense to introduce certain tasks
as business rules to gain ﬂexibility or better maintainability.
For example, some conditions at a certain decision point
can change signiﬁcantly more often than the overall business
process. So, a ﬂexibly changeable rule might offer more
agility. These different requirements in ﬂexibility directly
inﬂuence the technically decisions about the actual rule re-
alization/implementation.
IV. INITIAL ARCHITECTURE OF THE SYSTEM
To address these different requirements in ﬂexibility re-
garding the implementation of business rules, we presented
a decision framework in our prior work [11]. This paper
compared different technical approaches for business rule
execution (inference machine, database, conﬁguration ﬁle and
business applications) based on certain factors and indicators.
By applying this decision framework, we decided to use a
dedicated BRM inference machine for rule execution [11][16].
This approach has been identiﬁed as the most ﬂexible one,
especially with respect to the implementation of complex rules
and larger rule sets. Next we will show the initial architecture
of the system and will discuss its individual architectural com-
ponents in detail. This architecture will process the described
standard ”Goodwill process” from Section III.
The architecture of the system for the ”Goodwill Process”
was composed from the following components (cf. Figure 2):
• The WfM-Engine (workﬂow management engine) was
and still is the core of the whole architecture. It manages
the business process, veriﬁes the execution order of
activities and routes the information ﬂow between client
and back-end. It contains a logical ESB to orchestrate
different services. As concrete WfM-Engine, we use the
product ”Inﬁnity Process Platform” (IPP) provided by
SunGuard [13].
• The BAMS (business activity monitoring system) com-
poses stored procedures and triggers. It is placed in an
Oracle database and monitors the executions of activities
used by the business processes. The BAMS is similar
to complex event processing systems (CEP) but uses
a special form of logging. The monitoring allows the
evaluation of business rule executions to improve the pro-
cesses. It was designed and implemented by the CC ITM
project.
• The Client component provides the functionality of the
system to the user. It us currently a command console
and menu based application, which allows the activation
and execution of processes in the system. Currently,
this client component is developed by the CC ITM and
supports only the goodwill-scenario in a console-based
user interface.
• The Applications provide the automatic execution of
an activity or a single task. When they are invoked by
the WfM-Engine, they execute the business logic that
underlies the corresponding activity and report their result
to the engine. Because the WfM-Engine only supports
Enterprise JavaBeans (EJB) 2.x- and Web service calls,
all applications are implemented as EJB 2.1 Beans.
Other components in Fig 2 are just supporting management
and development background tools, which do not require a
more detailed explanation here. The overall design decision
and the composition of all its components to fulﬁll the re-
quirements in ﬂexibility and maintainability is described next.
V. DESIGN DECISIONS
The general big-picture of a software project is always the
sum of every single design decision. The single decisions have
to be chosen carefully. Therefore, a quantitative evaluation will
help to support the decision-making.
A. Business activity monitoring system and business rules
management system
To further improve the SOA aspect of the design, the
introduction of a BRMS was considered. The BRMS would be
responsible for managing the business logic and would also
reduce some workload of the WfMS. Moreover, the BRMS
would ”user friendly” support modiﬁcations of business rules.
Overall, the BRMS is another ”active rule” system, technical
similar to the BAMS but with a different application-oriented
purpose within our architecture.
Regarding the responsibilities of these two systems, the
introduction of a redundant component makes sense; the
BAMS has to monitor the whole WfMS architecture, while the
BRMS only takes care of domain speciﬁc rules. This means,
there will be two similar components for completely different
tasks, combining both responsibilities would intermingle rules
concerning different domains - a perilous path to take.
B. Enterprise service bus
The logical ESB, provided by the WfMS in use (IPP),
was very restrictive in terms of supported applications and
is not adaptable to offer security and transport protocols.
Therefore, the advantages and disadvantages of a ”home-
made” physical ESB were compared with the advantages of
the already existing logical ESB.
As presented in Table I, the advantages of using a physical
ESB are signiﬁcant and are outweighing the disadvantages.
Replacing the logical ESB with a physical one results in a
more ﬂexible architecture supporting the approach of lose
couplings within the SOA. Therefore, the CC ITM team
evaluated several solutions. For the concrete evaluation of the
advantages and disadvantages of the different products, we
will next discuss this evaluation with a quantitative approach.
VI. EVALUATION OF PRODUCTS
To ﬁnd the best ﬁtting set of products, a list of requirements
was created and research was conducted on available alterna-
tives. The evaluation process and its results are presented in
this section.
22
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

Figure 2. Initial architecture of the CC ITM project.
TABLE I. ADVANTAGES AND DISADVANTAGES OF A LOGICAL AND
PHYSICAL ESB FOR THE ARCHITECTURE.
Advantages
Disadvantages
Already provided
by the
WfM-Engine
Dependence
on
the
IPP
WfM-Engine
Logical
Responsibility for availabil-
ity, security and reliability
of the ESB outsourced to a
third party company
Not
expandable/mod-
able for security, transport
protocols and new interfaces
Lose coupling from IPP
More implementation work
Less dependence on propri-
etary software components
Integration difﬁcult or im-
possible due to the lack of
knowledge
Physical
More
control
and
know-
ledge in self-programmed
software components
More ﬂexible software for
security mechanisms, trans-
port mechanisms and more
interfaces
Future
replacement
of
WfM-Engine
easier
(for
example Stardust)
A. ESB products
There are a lot of ESB solutions available today, analyzed
in different publications. In this project, a long-list of pos-
sible ESB solutions (see Table II) was derived based on the
publications [26][30][8][29][21][19].
Because of some sources not being up-to-date, an additional
TABLE II. THE LONG LIST OF ESB SOLUTIONS
Apache Server Mix
Mule ESB
BEA System Aqualogic Service Bus
IBM WebSphere
Cape Clear
Oracle ESB
Fuse ESB
OpenESB
Talend Open Studio for ESB
study had to be undertaken by the project team in order to
map the long list to the current situation on the market. It was
discovered that some of the ESBs are included in different
solutions now, because the manufacturers were acquired by
other companies. For example, Fuse ESB currently belongs to
JBoss Solutions from Red Hat Inc. [31].
In the next step, the long list was transformed into a short
list. The conclusions drawn in [26][30][8][29][21][19] account
for the choices made at this stage. Furthermore, special project
requirements were used to extend the short list, such as the
solution must:
• be open source and state-of-the-art
• work with both Windows and Linux operating systems
respectively
• have an active support community
23
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

TABLE III. SHORT LIST OF ESB SOLUTIONS & EVALUATION (MAX. 100%)
Red Hat JBoss ESB
83.99%
Mule ESB
75.29%
OpenESB
83.98%
Talend ESB
89.87%
• provide an Enterprise JavaBeans connector for integration
with existing components
The ﬁnal short list is presented in Table III. A full installa-
tion of each of the ESBs in the short list was not undertaken.
Instead, the results of the comparative analysis in [3] were
used, which describe detailed testing of solutions on different
platforms, amongst which are Mule ESB, JBoss ESB and Ope-
nESB. Talend ESB was evaluated in an interview [17] with an
employee of Talend, using the criteria from [3]. These criteria
belong to three categories, such as ergonomics, processing and
environment. The combined results from both sources are also
depicted in Table III. However, these numbers alone do not
constitute the best solution, since possible problems of this
result must be considered. Talend ESB was evaluated in 2013.
The others were compared six years in before, so additional
features might have been added in this period of time. Thus,
despite it not having the best score, JBoss ESB was chosen
by the team, because of its good documentation, wide usage
and ability to run on JBoss Application Server 5.1, which was
successfully used in the project before.
The compatibility of the ESB to the existing application
server led to a low-effort integration into the architecture. After
the ESB had been deployed on the server, it was necessary
to ensure that the applications are not called by the logical
ESB of the workﬂow engine directly any longer. Instead, the
logical ESB will access the JBoss ESB which will call the
applications. Referring to this, the JBoss ESB must provide
an Enterprise JavaBeans service for the workﬂow engine.
Therefore, the FacadeBean was created and the deﬁnition of
the business process was altered, so that this Bean is accessed
by the workﬂow engine when needed. These changes to the
architecture are depicted in the ﬁnal architecture diagram in
Figure 4.
B. Business rule execution approaches (BREA)
In order to choose a business rules execution approach,
a requirements analysis was undertaken, both for general
business rules execution approach requirements and special
requirements determined by the project. The former are de-
ﬁned in the Business Rules Manifesto from the Business Rules
Group [4] and includes portability and user friendliness of the
rule editor. The project requires the business rules execution
approach to be:
• open source
• compatible with Linux and Windows operating systems
respectively
• integrable with the existing JBoss ESB
• capable of processing complex business rules
• well documented, supported and constantly updated
In 2012, the team conducted a research on BRMS available
on the market and created a list of suitable solutions. In order
to assess the features of systems, an evaluation of BRMS
was undertaken based on a criteria catalog developed by the
project team based on a "Basel III" scenario [32], [33].
The evaluation resulted in the BRMS short list in Table IV.
The "Basel III" scenario asks for two typical indicators
used by the underlying insurance business:
• liquidity coverage factor (LCR)
• net stable funding ration (NSFR)
In [15], the criteria are divided into nine groups: Usability, ease
of learning, run-time environment, performance, compatibility,
functionality, safety and security, development and debugging,
documentation. For each criteria, a score from one (worst
case) to four (best case) was assigned to each product. The
weighting of criteria was customized with respect to the
speciﬁcs of the project. The evaluation results [14] are also
presented in Table IV, although, those results cannot be used
for judging about absolute quality of products. Nevertheless,
due to restrictions of the project, an open source solution had
to be chosen and therefore, JBoss Drools has been used in the
prototype architecture.
JBoss Drools provides a complete system for business rules
management, including a rule repository and a web server with
a special site for rule management in Drools Guvnor. The
BRMS architecture in the project is depicted in Figure 3.
TABLE IV. LIST OF BRMS SOLUTIONS& BRMS EVALUATION RESULTS
(MAX. 100%)
Visual Rules
85.07%
JBoss Drools
61.09%
WebSphere ILOG JRules
77.19%
With this quantitative evaluation, we are able to identify
the best ﬁtting set of products to fulﬁll the requirements. The
ﬁnal system architecture build with those products is described
next.
VII. TARGET ARCHITECTURE OF THE SYSTEM
There are several changes and optimizations between the
basic and the target architecture of the system. Certain parts
of the initial architecture have not been changed: Goodwill
client, the connection between the client, the WfM-Engine and
the BAMS are still as in the initial architecture. The original
and modiﬁed parts are shown in Figure 4.
The ﬁrst change of the initial architecture was the replace-
ment of the logical ESB. For this purpose, JBoss ESB as
a physical ESB was chosen as described before. Different
applications will be called from the physical ESB instead
of the logical one. Nevertheless, the logical ESB cannot be
replaced completely, because it is an integrated part of the
24
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

Figure 3. BRMS architecture with JBoss Drools and Guvnor
WfM-Engine. Also, it supports only EJBs and Web services
connectors. Therefore, a connection between the logical ESB
and physical ESB was developed. A simple Facade Bean
represents this connection. It is called as an EJB from the
logical enterprise service bus. All WfM-Engine calls will
be channeled through the Facade Bean to different ap-
plications. Furthermore, the application calls in the process
deﬁnition (XPDL ﬁle) were changed to leverage the physical
ESB. To connect the applications to the JBoss ESB so called
Services need to be described. The translation between the
logical ESB and the Services is done by the Facade Bean.
Moreover, the monitoring of these application calls is now
handled by the JBoss ESB, for this purpose a connection
between the JBoss ESB and the BAM-System was introduced.
The second change to the initial architecture was the inte-
gration of the BRMS. As stated before, the chosen BRMS is
JBoss Drools. It’s integration was realized through the con-
nection between JBoss Drools and JBoss ESB. Furthermore,
the BRMS was integrated into the process deﬁnition. Easily
enough, a deﬁnition of a rule call is similar to an application
call.
Management of the rule base is implemented by JBoss
Drools Guvnor. Rules can be created or edited via a rule man-
agement website. Moreover, a rule storage (rule repository) is
part of Guvnor.
The actual architecture is supported by decisions based on
quantitative evaluation methods as well as on the expertise
within the CC ITM team. We assume, a combination of
quantitative methods and qualitative experience should offer
an architectural design, able to challenge and be challenged
by future demands.
VIII. CONCLUSION AND FUTURE WORK
To manage the application landscape of businesses, for
example, companies operating in the insurance services indus-
tries, the combination of technologies such as SOA, business
process management and business rules management is a
promising approach.
In order to ensure the optimum of agility and ﬂexibility, the
decision logic should be shifted to a separate SOA service. In
our previous work, we presented a decision framework, which
recommends an approach to realize such a ”rule service”. As
a key contribution of this article our decision framework is
applied to a standardized insurance business process, namely
”Handle a Goodwill Request”. Starting from the initial design,
in making design and infrastructure decisions, we obtain an
enhanced service-oriented target architecture with technical
components such as ESB, BPM system, BAM, and BRM
system.
Based on these intermediate results, our subsequent research
activities will focus on a detailed performance evaluation
which may require a redesign of the target architecture.
The evaluation is part of the current research project ”QoS
measurements for combined BRM, BPM and SOA environ-
ments in the insurance domain”. As the insurance industry
is receptive to cloud computing concepts and technologies -
for example, product design and risk assessment heavily make
use of SAAS - moving components of the target architecture
towards the cloud might be a promising approach. Therefore,
the investigation of cloud computing solutions is another main
activity of our research group.
Actually, the enhanced architecture contains some propri-
etary components, such as the BAM system. As businesses
prefer to use standard infrastructure components, we intend to
replace all proprietary components. For this purpose we (also)
25
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

Figure 4. Final architecture of the overall system.
look at open source CEP tools. Another, but marginal issue is
the optimization of the usability of the rule editor.
REFERENCES
[1] T. Bergemann, A. Hausotter, and A. Koschel, “Keeping Workﬂow-
Enabled Enterprises Flexible: WfMS Abstraction and Advanced Task
Management”, in 4th Int. Conference on Grid and Pervasive Computing
Conference (GPC), 2009, pp. 19-26.
[2] J. Boyer and H. Mili, “Agile Business Rule Development: Process,
Architecture, and JRules Examples”, Springer, Berlin, Germany, 2011.
[3] A. Buchholz, R. Hohloch, and T. Rathgeber, “Vergleich von Open Source
ESBs (Comparison of Open Source ESBs)”, Institut f. Architektur von
Anwendungssystemen Univ. Stuttgart, Stuttgart, Germany, Fachstudie
Nr. 81, 2007.
[4] Business Rules Group. (2003, November 1). “The Business Rules
Manifesto”, Version 2.0, edited by R.G. Ross) [Online]. Available: http:
//www.businessrulesgroup.org/brmanifesto.htm [retrieved: 02, 2016].
[5] Competence
Center
Information
Technology
and
Management
(CC ITM)
[Online].
Available:
http://f4.hs-hannover.de/forschung/
kompetenzzentren/cc-itm/index.html [retrieved: 02, 2016].
[6] D. E. Chappell, Enterprise Service Bus - Theory in Practice, O‘Reilly,
2004.
[7] L. Chen, “Integrating Cloud Computing Services Using Enterprise
Service Bus (ESB)”, College of Business, Black Hills State University,
2012 [Online]. Available: http://sciedu.ca/journal/index.php/bmr/article/
view/674/387 [retrieved: 02, 2016].
[8] S. Desmet, B. Volckaert, S. Van Assche, D. Van Der Weken, B. Dhoedt,
and F. De Turck, “Throughput Evaluation of Different Enterprise Ser-
vice Bus Approaches”, in Software Engineering Research and Practice
(SERP), Las Vegas, Nev., 2007, pp. 378-384.
[9] M. D¨ohring, L. Karg, E. Godehardt, and B. Zimmermann, “The Con-
vergence of Workﬂows, Business Rules and Complex Events”, in 12th
Intl. Conference on Enterprise Information Systems (ICEIS), 2010, pp.
338-343.
[10] T. van Eijndhoven, M.
E.
Iacob, and M.
L. Ponisio, “Achieving
Business Process Flexibility with Business Rules”, in 12th Intl. IEEE
Enterprise Distributed Object Computing Conference (EDOC), 2008, pp.
95-104.
[11] C. G¨ath, A. H¨odicke, S. Marth, J. Siedentopf, A. Hausotter, and A.
Koschel , “Always Stay Agile! – Towards Service-oriented Integration of
Business Process and Business Rules Management”, in 6th Intl. Conf. on
Advanced Service Computing (Service Computation), IARIA, Venice,
Italy, 2014, pp. 40-43.
[12] M. Gharbi, A. Koschel, A. Rausch, and G. Starke, Basiswissen f¨ur
Softwarearchitekten (Fundamental Knowledge for Software Architects),
2nd ed., dpunkt, Heidelberg, Germany, 2014.
[13] M.
Gille,
“The
Beneﬁts
of
Implementing
Workﬂow”,
[Online].
Available:
https://www.sungard.com/∼/media/fs/wealth-retirement/
resources/event-docs/Omni-Summit-Presentations/Implementing%
20Workﬂow.ashx [retrieved: 02, 2016].
[14] M. Diekmann, C. G¨ath, J. Harms, V. Jartsev, B. Kleine, and J. Sieden-
topf, “Business Rules Management - Evaluierung von Technologien
und Werkzeugen f¨ur das Business Rules Management (Business Rules
Management – Evaluation of Technologies and Tools for Business Rules
26
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

Management)”, CC ITM, Technical Report, 2012.
[15] J. Harms and B. Kleine, “Fragenkatalog Business Rules Management
(Questionnaire: Business Rules Management)”, CC ITM, Technical
Report, 2012.
[16] A. H¨odicke, “Concept and Prototypical Implementation of a Service-
oriented Software Architecture for a WfM- and BRM-System”, M.S.
thesis, Dept. Computer Science, Hochschule Hannover University of
Applied Sciences and Arts, Hanover, Germany, 2013.
[17] A. H¨odicke, “Evaluation of Talend ESB”, CC ITM, Technical Report,
2013.
[18] A. Hausotter, C. Kleiner, A. Koschel, D. Zhang, and H. Gehrken, “Al-
ways Stay Flexible! WfMS-independent Business Process Controlling in
SOA”, in: IEEE EDOCW 2011: Workshops Proc. of the 15th IEEE Intl.
Enterprise Distributed Object Computing Conference, IEEE: Helsinki,
Finland, 2011, pp. 184-193.
[19] T. Kr¨ussman, A. Koschel, M. Murphy, A. Trenaman, and I. Astrova,
“High Availability: Evaluating Open Source Enterprise Service Buses”,
in Proc. ITI 2009 31st Intl. Conf. on Information Technology Interfaces,
Cavtat/Dubrovnik, Croatia, 2009, pp. 615-620.
[20] O. Levina, O. Holschke, and J. Rake-Revelant, “Extracting Business
Logic from Business Process Models”, in 2nd IEEE Int. Conference on
Information Management and Engineering (ICIME), 2010, pp. 289-293.
[21] L.
MacVittie
(2006,
March
10).
“Review:
ESB
Suites”,
Network
Computing,
CMP
Media
LLC
[Online].
Available:
http://www.networkcomputing.com/wireless-infrastructure/
review-esb-suites/d/d-id/1216317 [retrieved: 01, 2016].
[22] M. Zur Muehlen, M. Indulska, and K. Kittel, “Towards Integrated Mod-
eling of Business Processes and Business Rules”, in 19th Australasian
Conference on Information Systems (ACIS), 2008, pp. 690-697.
[23] M. L. Nelson, R. L. Rariden, and R. Sen, “A Lifecycle Approach towards
Business Rules Management”, in 41st Hawaii Intl. Conf. on System
Sciences (HICCS), 2008, pp. 113-123.
[24] M. Schacher and P. Gr¨assle, “Agile Enterprises with Business Rules:
The Business Rules Approach”, Springer, Berlin, Germany, 2006.
[25] T. Sch¨al, “Workﬂow Management Systems for Process Organisations”,
Springer, Berlin, Germany, 1996.
[26] Z. Siddiqui, A.H. Abdullah, and M.K. Khan, “Qualiﬁed Analysis
b/w ESB(s) Using Analytical Hierarchy Process (AHP) Method”, in
Intelligent Systems, Modelling and Simulation (ISMS), Kuala Lumpur,
Malaysia, 2011, pp. 100-104.
[27] G. Starke and S. Tilkov (editors), SOA Expertenwissen (SOA Expert
Knowledge)’, dpunkt, Heidelberg, Germany, 2007.
[28] GDV (Gesamtverband der Deutschen Versicherungswirtschaft e.V. –
General Association of the German Insurance Industry), “Die An-
wendungsarchitektur der Versicherungswirtschaft: Das Objektorientierte
Fachliche Referenzmodell (The application architecture of the German
insurance business – The functional object-oriented reference model”,
http://www.gdv-online.de/vaa/vaafe html/dokument/ofrm.pdf, VAA Fi-
nal Edition. Version 2.0., 2001 [retrieved: 02, 2016].
[29] K. Vollmer and M. Gilpin, “The Forrester WaveTM: Enterprise Service
Bus, Q2 2006”, Forrester Research, Cambridge, Mass., 2006.
[30] R. Woolley, “Enterprise Service Bus (ESB) Product Evaluation Compar-
isons”, Utah Department of Technology Services, Salt Lake City, Utah,
2006.
[31] Red Hat Inc., “Red Hat JBoss Fuse: Overview” [Online]. Available:
http://www.jboss.org/products/fuse/overview/ [retrieved: 02, 2016].
[32] Bank f¨ur Internationalen Zahlungsausgleich, “Basel III: Mindestliq-
uidit¨atsquote und Instrumente zur ¨Uberwachung des Liquidit¨atsrisikos
(Basel III: Minimal liquidity rate and instruments to supervise the
liquidity risk”, Basler Ausschuss f¨ur Bankenaufsicht, 2013, pp. 2.
[Online]. Available: http://www.bis.org/publ/bcbs238 de.pdf [retrieved:
02, 2016].
[33] Bank f¨ur Internationalen Zahlungsausgleich, “Basel III: Strukturelle
Liquidit¨atsquote (Basel III: Structural liquidity rate)”, Basler Ausschuss
f¨ur Bankenaufsicht, 2014, pp. 1. [Online]. Available: http://www.bis.org/
publ/bcbs271 de.pdf [retrieved: 02, 2016].
27
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-459-6
SERVICE COMPUTATION 2016 : The Eighth International Conferences on Advanced Service Computing

