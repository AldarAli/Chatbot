Challenges of the Existing Tools Used in Global Software Development Projects
Mahmood Niazi, Sajjad Mahmood, Mohammad Alshayeb, Ayman Hroub
Department of Information and Computer Science, King Fahd University of Petroleum and Minerals, Saudi Arabia
{mkniazi, smahmood, alshayeb, aymanh}@kfupm.edu.sa
Abstract— Global Software Development (GSD) has been
embraced by organizations due to the availability of highly 
trained software engineers at a relatively low cost. GSD is not a 
risk free activity as several GSD failures have been reported. It 
is anticipated that the appropriate use of available software 
tools can play an important role in overcoming some of the 
risks associated with management of GSD projects. However, 
there are many challenges in adopting the existing tools in 
globally distributed projects. The objective of this paper is to 
identify challenges of existing tools used in GSD projects. We 
have used a Systematic Literature Review (SLR) approach by 
applying customized search string derived from our research 
questions. We have identified 105 papers that discuss the 
challenges of the existing GSD tools. We have identified key 
challenges for adopting existing tools in GSD projects, such as:
“difficulties in adopting and learning existing tools”, 
“inappropriate use of tools”, “lack of coverage of GSD 
processes” and “lack of security and privacy”.  Based on our 
SLR results, we suggest that GSD organizations should address 
these challenges in order to compete in the GSD business.
Keywords-Global 
software 
development; 
Challenges; 
Systematic Literature Review; Software Tools.
I. INTRODUCTION 
Global software development (GSD) is becoming a 
promising methodology to build quality software at a low 
development cost and short time-to-market. GSD is the 
process where a company either has its software developed 
by geographically distributed teams or contracts all or parts 
of its software development activities in return for 
remuneration [1] [2]. A number of software organizations in 
the developed world have outsourced their software 
development projects to emerging countries (e.g., China and 
India) where they have access to large pools of highly trained 
software engineers at relatively low cost. 
The adoption of GSD has introduced potential benefits as 
well as challenges for software organizations. GSD has 
dramatically changed the business economics in the overall 
software industry by, for example, utilizing time-zone 
differences to organize round-the-clock project development 
life cycle. Furthermore, globalization of software projects 
allows companies to employ software engineers with 
required skills to work on a project from different 
geographical 
locations. 
On 
the 
other 
hand, 
the 
geographically distances and cultural differences between 
globally distributed teams have also introduced new 
challenges, such as: difficulty in maintaining collaboration, 
coordination and communication [3] [4] [5] [6]. 
Lately, researchers [7] [8] have indicated that readily 
available software tools can help in overcoming challenges 
associated with development and management of software 
projects by GSD teams. Document management systems, 
wiki and blog features of software tools have been used for 
knowledge management among GSD teams. Similarly, 
social computing tools, such as: Skype, Twitter, etc., are 
being used in multi-site GSD projects to provide additional 
communication channels. This not only enables real-time 
communication but also allows knowledge sharing and 
instant feedback from different teams involved in the project 
[9].
Despite the increased use of software tools in GSD 
projects, little research has been carried out to comprehend 
the challenges associated with the adaptation of existing 
tools in the GSD environment. We also need to investigate 
how to help organizations in selecting suitable tools to 
ensure the successful outcome of projects and to maintain 
long lasting relationships between the clients and the 
vendors.
In this paper, we aim to identify challenges, via 
systematic literature review, of using existing software tools 
in GSD projects. Identifying these challenges will assist 
GSD organizations in better development and management 
of GSD projects. Our long-term research goal is to develop a 
global project management readiness framework to assist 
software development organizations in measuring and 
improving their project management readiness prior to 
starting global activities. To achieve this, we intend to 
address the following research question in this paper:
RQ: What are the challenges of existing tools used in 
GSD projects?
The rest of this paper is organized as follows: Section II 
provides the GSD background. Section III describes the 
research methodology. In Section IV, we present the initial 
results with analysis and we conclude in Section V.
II. BACKGROUND
GSD is a software engineering paradigm aiming at 
developing high-quality software in low-wage countries at 
reduced cost [1]. The various types of GSD projects can be 
grouped into two categories, namely, outsourcing on the 
basis of geographical location and outsourcing on the basis 
of relationship [10]. On the basis of geographic distance 
between vendors and clients, outsourcing is further 
385
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

categorized into three types: onshore outsourcing, near-shore 
outsourcing and offshore outsourcing [11]. Onshore 
outsourcing is also called domestic outsourcing, which 
consists of both domestic vendors and domestic clients [12]. 
This means that both (vendor and client) organizations are 
located in the same country. Near-shore outsourcing or 
simply near shoring is defined as the transfer of software 
development work to a nearby foreign country to reap lower 
labor cost advantages [13]. Offshore software development 
outsourcing refers to outsourcing in a geographically distant 
country. The offshore activities have been going on since the 
last decade and are growing rapidly [14]. The major vendor 
countries for offshore outsourcing are India, Ireland, China 
and Russia whereas the client countries are USA, UK, 
Australia and Japan [15]. 
There are many reasons for initiating GSD project [13] 
[14] [15] [16]. Client organizations benefit from GSD
because vendors in developing countries (offshore vendors) 
typically cost one-third less than onshore vendors and even 
less when compared with in-house operations [17]. Among 
many other reasons for GSD, generally client organizations 
outsource their software development work to offshore 
locations to gain quality advantages, improve their skills, 
access to leading-edge technologies and focus on their core 
competencies [13]. Conversely, there are many risks in the 
GSD, such as: temporal incompatibility, cultural differences 
and hidden costs [18] [19]. IT Week magazine reported that 
eight out of every ten firms that outsourced their software 
development project to an offshore vendor faced major 
problems due to insufficient preparation and poor 
management by both client and vendor organizations [20].
There are many reasons for these problems. One of the 
major issues is the lack of awareness about software tools 
support for GSD projects and what features they provide to 
support globally distributed software development projects. 
Understanding issues related to adoption of suitable software 
tools to support different phases of GSD can help in 
achieving greater success in GSD projects. In this paper, we 
conduct a systematic literature review to identify challenges 
of the existing tools used in GSD projects. 
III. RESEARCH METHODOLOGY
In this study, we followed the systematic literature 
review (SLR) process to find the data required to address our 
research question [21]. SLR is a defined process that aims at 
providing an exhaustive summary of literature by identifying 
and analyzing published studies relevant to the investigated 
research question [22]. SLR may use scoring of the levels of 
evidence or statistical techniques (meta-analysis) to combine 
results of the identified studies. Therefore, the results 
obtained from SLR may provide a better insight than might 
be in ordinary literature review or surveys.
To conduct the SLR, we developed the systematic review 
protocol. The protocol describes the plan for the review. The 
SLR includes the following main steps:

Define the search strategy

Search for relevant studies

Select relevant studies

Perform study quality assessment

Extract data from the finally selected studies

Analyze the extracted data
In order to achieve the objective of this paper, we set the 
following research question: 
RQ1: What are the challenges of existing tools used in 
GSD projects?
For the above research question, we identified the 
following major terms:

POPULATION:  GSD projects.

INTERVENTION:  GSD challenges of existing 
tools.

OUTCOME OF RELEVANCE:  the challenges of 
existing tools used in GSD projects.
Finally, after a number of trials, we identified the 
following search string that is used in this study:
{Challenges OR limitations} AND
{Technology OR tools} AND
{GSD OR Global Software Development OR Global 
Software Engineering OR Global Software Testing OR 
Software 
Outsourcing OR Software Offshoring OR 
Geographically Distributed Software Development}
We used the following digital libraries to run our search 
string: ACM Digital Library, IEEE Explore, Science Direct, 
Springer Link and John Wiley. 
The following inclusion criteria were used:

The paper should be related to GSD.

The paper should clearly mention at least one 
challenge or limitation either for a certain tool used 
in GSD or for technology used in GSD in general.

The following exclusion criteria were used:

Non-English papers were excluded.

White papers and technical reports were excluded.

Papers related to technology used by distributed 
teams other than software engineering were rejected.
To address our research question, we extracted data from 
the
finally selected papers. The following data were 
extracted from each paper: publication type, authors, 
publisher, publication name, publication date, organization 
size, project size and challenges of tools used in GSD 
projects.
IV. INITIAL RESULTS AND DISCUSSION
Table I shows the SLR process results. A total of 1318 
papers were retrieved after entering the customized search 
string in the digital databases. After reading the title and the 
abstract, 318 papers were selected. Finally, 105 papers were 
selected after reading the whole paper. 
The finally selected papers were categorized according to 
the nine study strategies as shown in Table II. Most of the 
articles have used case study research method.
Table III provides details of the publication venues for 
the papers identified in our SLR study.  Nineteen papers are 
from Finland, eighteen papers are from USA, nine papers are 
from Germany, six papers are from Brazil, five papers are 
from the Netherlands and four papers are from UK.
386
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

TABLE I.
SEARCH EXECUTION
Library Name
Total  Results
Initial 
Selection
Final 
Selection
IEEE Explore
980
250
82
ScienceDirect
88
13
6
ACM
180
34
7
John Wiley 
70
21
10
Total
1318
318
105
TABLE II.
STUDY STRATEGIES USED
Study Type
Count
Case Studies
29
Literature Review
16
Implementation
21
Interviews
10
Empirical
8
Systematic Literature Reviews
6
Systematic Mapping Review
4
Social Network Analysis
1
Others
10
Total 
105
From the accepted papers, 8 challenges of the tools used 
in GSD projects were extracted as shown in Table IV.
TABLE III.  
STUDY COUNTRIES
Country
Count
Country
Count
Argentina
2
Malaysia
1
Australia
3
Mexico
3
Brazil
6
Netherlands
5
Canada
3
New Zealand
2
China
1
Norway
2
Denmark
4
Pakistan
1
Finland
19
Spain
3
Germany
9
Sweden
2
Iran
1
Switzerland
1
India
4
UK
4
Ireland
5
USA
18
Italy
4
Venezuela
1
Latvia
1
In our study, the most common challenge of the tools 
used in GSD projects is “inappropriate use of synchronous 
and asynchronous communication tools” (43%) as shown in 
Table IV. This can be due to multiple reasons, such as:

The synchronous tools are useless when the time 
difference among the remote teams is more than 8 
hours, i.e., no working time overlap between 
different teams and thus they cannot utilize these 
technologies unless one team shifts the working 
hours. 

The synchronous interaction causes interruptions for 
the employees in their daily work as often 
unnecessary communication is performed. Some 
team members may nudge each other without 
knowing the status of the receiver (i.e., if receiver is 
busy in an important meeting or meeting a crucial 
deadline). 

During the use of synchronous and asynchronous 
communication tools, the GSD professionals often 
face problems due to cultural and language 
differences.

Asynchronous communication tools like email or 
forums are not appropriate for solving conflicts and 
technical interactions due to their late responses. 
TABLE IV.
LIST OF CHALLENGES
           Challenges
Freq. (n=105)
%
Inappropriate use of synchronous and 
asynchronous communication tools 
45
43
Difficulties in adopting and learning 
existing tools for GSD projects
31
30
Lack of coverage of GSD development 
processes. 
26
25
Lack of data integration due to different 
collaboration tools used in GSD projects. 
21
20
Lack of support for collaboration and 
group decision making.
12
11
Lack 
of 
security 
and 
privacy 
in 
communication and collaboration tools. 
10
10
Lack of awareness of existing tools used 
in GSD projects.
6
6
Lack of ability to track the progress of 
tasks assigned to team members in GSD 
projects. 
5
5
The second frequently mentioned challenge is “adopting 
and learning new tools for GSD projects” (30%). This is 
because there is an increasing pool of software tools that can 
be used in GSD projects and selecting and adopting the most 
appropriate tool from this pool is a challenging task. This 
may be due to the absence of a well-defined procedure to 
select the best tool. In addition to that, some people are 
reluctant to use some tools due to cultural issues. Moreover,
some people are resistant to change and therefore they do not
like to replace their current tools with new ones.
All these problems show that most of the GSD 
organizations do not design the adequate communication 
strategies. It is very important to early develop a good 
communication 
strategy 
in 
order 
to 
reduce 
misunderstandings between stakeholders from different 
country cultures [2].
The other highly mentioned challenge is the “lack of 
coverage of GSD processes” (25%). None of the existing 
tools cover all processes in the GSD life cycle. Most of the 
tools 
are 
dedicated 
for 
a 
specific 
function 
like 
communication, testing, requirements engineering etc. As a 
result, the GSD companies need to have many different tools 
387
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

to perform different GSD functions. In addition, there are 
important GSD areas, which are rarely covered by the 
existing tools, such as: risk management, requirements 
engineering, issue tracking and social awareness.
20% of the articles mentioned “lack of data integration 
due to different collaboration tools used in GSD projects”. 
This incompatibility is due to the absence of standards for 
the different tools vendors. This challenge complicates the 
data transfer among these different tools.
10% of the articles have mentioned “lack of security and 
privacy in communication and collaboration tools” as a 
current technology challenge in GSD projects. These security 
issues are related to source code and project information that 
is exchanged over the web. There are also privacy concerns 
for the team members when using these tools for informal 
communication, such as: instant messaging or social media.
V. LIMITATIONS
We limited our SLR study to four research publication 
databases. However, there are other related research 
databases which we did not consider in our study, which 
may have relevant publications. Furthermore, with the 
increasing number of research papers published on this 
topic, some recent and relevant publications could have 
been missed at the time of consolidating the results of the 
SLR.  Nevertheless, we believe that our presented results are 
comprehensive and cover the most relevant published 
literature. 
VI. CONCLUSION AND FUTURE WORK
There is a growing interest in GSD for software 
development companies. In addition to the challenges that 
are related to the GSD business nature and cultural 
differences, there are other challenges associated with the 
tools used in GSD. In this paper, we identified challenges of 
the software tools used in GSD projects from the existing 
literature. We identified 105 papers that discuss the 
challenges of the existing GSD tools and technologies. These 
challenges range from unsuitable or missing features in these 
tools to the non-existence of tools in some GSD areas. There 
are other challenges related to the cultural and time zones 
difference issues. In addition, the existing tools are neither 
comprehensive nor compatible with each other to allow tools 
integration.
The next step is to conduct an empirical study to support 
our findings. This includes designing a questionnaire in the 
light of our findings and gathering information from the 
software industry professionals about the challenges related 
to the tools used in GSD projects.
The overarching objective of this research work is to 
develop a global project management readiness framework 
to assist software development organizations in measuring 
and improving their project management readiness prior to 
starting any global software development activities.
ACKNOWLEDGMENT
The authors would like to acknowledge the support 
provided by the Deanship of Scientific Research at KFUPM, 
Saudi Arabia, under Research Grant 11-INF2152-04. We are 
also thankful to Dr. Narciso Cerpa (University of de Talca, 
Chile) for reviewing our protocol.
REFERENCES
[1]
S. U. Khan, M. Niazi, and R. Ahmad, "Factors influencing 
clients in the selection of offshore software outsourcing 
vendors: an exploratory study using a systematic literature 
review," Journal of Systems and Software, vol. 84, no. 4, 
(2011), pp. 686-699.
[2] S. U. Khan, M. Niazi, and A. Rashid, "Barriers in the 
selection of offshore software development outsourcing 
vendors: an exploratory study using a systematic literature 
review," Journal of Information and Software Technology, 
vol. 53, no. 7, (2011), pp. 693-706.
[3] G. Aranda, N., A. Vizcaíno, and M. Piattini, "A framework to 
improve communication during the requirements elicitation 
process in GSD projects," Requirements engineering, vol. 15, 
no. 4, (2010), pp. 397-417.
[4] Benjamin, B. M. Shao, and J. S. David, "The impact of 
offshore outsourcing on IT workers in developed countries," 
Communications of the ACM, vol. 50, no. 2, (2007), pp. 89 -
94.
[5]   L. I. Charalambos, and N. Robbie, "A risk profile of 
offshore-outsourced 
development 
projects," 
Communications of the ACM, vol. 51, no. 6, (2008), pp. 89-
94.
[6] H. Christiansen, Munkebo, "Meeting the challenge of 
communication in offshore software development," Software 
Engineering Approaches for Offshore and Outsourced 
Development. Lecture Notes in Computer Science, vol. 4716, 
no. (2007), pp. 19-26.
[7] J. Portillo-Rodríguez, A. Vizcaíno, M. Piattini, and S. 
Beecham, "Tools used in Global Software Engineering: A 
systematic mapping review," Information and Software 
Technology, vol. 54, no. 7, (2012), pp. 663-685.
[8]
M. A. Storey, C. Treude, D. Van, A., and L. T. Cheng, "The 
Impact of Social Media on Software Engineering Practices 
and Tools," Proceedings of the FSE/SDP Workshop on 
Future of Software Engineering Research, (2010), pp. 359-
364.
[9] M. Niazi, S. Mahmood, M. Alshayeb, A. Baqais, and A. Q. 
Gill, "Motivators of Adopting Social Computing in Global 
Software Development: Initial Results," World Congress on 
Engineering 2013 (WCE 2013), London July 2013, ISBN: 
978-988-19251-0-7, (2013), pp. 409-413
[10] S. U. Khan, Software outsourcing vendors' readiness model 
(SOVRM), PhD thesis, Keele University, UK (2011).
[11] P. A. Laplante, T. Costello, P. Singh, S. Bindiganavile, and 
M. Landon, " The who, what, why, where, and when of IT 
outsourcing," IEEE IT Professional, vol. 6, no. 1, (2004), pp. 
19 - 23.
[12] B. Shao, David, J.S., "The impact of offshore outsourcing on 
IT workers in developed countries.," Communications of the 
ACM, vol. 50, no. 2, (2007), pp. 89 - 94.
388
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

[13] A. Stetten, v., D. Beimborn, E. Kuznetsova, and B. Moos, 
"The Impact of Cultural Differences on IT Nearshoring 
Risks from a German Perspective," in Proceedings of the 
43rd IEEE Hawaii International Conference on System 
Sciences, (2010), pp. 1-10.
[14] D. Smite, C. Wohlin, T. Gorscheck, and R. Feldt, "Empirical 
evidence in global software engineering: a systematic 
review," Empirical Software Engineering, vol. 15, no. 1, 
(2010), pp. 91-118.
[15] N. V. Oza, An empirical evaluation of client - vendor 
relationships in Indian software outsourcing companies, PhD 
thesis, University of Hertfordshire, UK (2006).
[16] A. A. Bush, A. Tiwana, and H. Tsuji, "An Empirical 
Investigation of the Drivers of Software Outsourcing 
Decisions in Japanese Organizations," Information and 
Software Technology Journal, vol. 50, no. 6, (2008), pp. 
499-510.
[17] L. McLaughlin, "An eye on India: Outsourcing debate 
continues.," IEEE Software, vol. 20, no. 3, (2003), pp. 114-
117.
[18] H. Holmstrom, E. O. Conchuir, P. J. Agerfalk, and B. 
Fitzgerald, "Global Software Development Challenges: A 
Case Study on Temporal, Geographical and Socio-Cultural 
Distance," Global Software Engineering, 2006. ICGSE '06. 
International Conference on, (2006), pp. 3-11.
[19] D. Damian, L. Izquierdo, J. Singer, and I. Kwan, "Awareness 
in the Wild: Why Communication Breakdowns Occur," 
Global Software Engineering, 2007. ICGSE 2007. Second 
IEEE International Conference on, (2007), pp. 81-90.
[20] L. Mary, and R. Joseph, "Effects of offshore outsourcing of 
information technology work on client project management,"
Strategic Outsourcing: An International Journal, vol. 2, no. 1, 
(2009), pp. 4-26.
[21] B. Kitchenham, and C. Charters, Guidelines for performing 
Systematic Literature Reviews in Software Engineering. 
Keele University and Durham University Joint Report -
EBSE 2007-001, EBSE 2007-001 (2007).
[22] M. Staples, and M. Niazi, "Experiences Using Systematic 
Review Guidelines," Journal of Systems and Software., vol. 
80, no. 9, (2007), pp. 1425-1437.
389
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-367-4
ICSEA 2014 : The Ninth International Conference on Software Engineering Advances

