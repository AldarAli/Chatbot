Spectrum Sensing Measurement using GNU Radio and USRP Software Radio 
Platform 
Rozeha A. Rashid, M. Adib Sarijari, N. Fisal, S. 
K. S. Yusof, N. Hija Mahalin 
Faculty of Electrical Engineering  
Universiti Teknologi Malaysia  
81310 UTM Johor Bahru, Johor, Malaysia 
{adib_sairi, rozeha| sheila| sharifah| 
kamilah}@fke.utm.my, nhija.m@gmail.com 
A. C. C. Lo  
Wireless & Mobile Communications Group  
Delft University of Technology  
The Netherlands  
A.C.C.Lo@tudelft.nl
 
 
Abstract— Spectrum utilization can be significantly improved 
by adopting cognitive radio (CR) technology. Such radios are 
able to sense the spectral environment and use this information 
to opportunistically provide wireless links that meet the user 
communications requirements optimally. To achieve the goal 
of cognitive radio, it is a fundamental requirement that the 
cognitive user (CU) performs spectrum sensing to detect the 
presence of the primary user (PU) signal before a spectrum is 
accessed as to avoid harmful interference. Therefore, two 
probabilities are of interest; the probability of detection, Pd 
and the probability of false alarm, Pfa. In this paper, we 
investigate sensing performance implemented on real-time 
testbed of GNU Radio and USRP Software Defined Radio 
(SDR) communication platform operating at 2.48 GHz with a 
bandwidth of 4 MHz. Energy detector utilizing 1024 FFT bin is 
the sensing mechanism used in the experimental set-up. The 
acquired experimental results of Pd and Pfa are duly analyzed 
and verified to be comparable to the curve of the theoretical 
framework for line-of-sight indoor environment. It is observed 
that at a target Pfa of 5%, the optimal decision threshold for 
PU detection is -39 dB. The plot of measured number of 
samples needed for a desired Pd for various received signal 
levels, representing various signal-to-noise (SNR) conditions, is 
also included. At SNR of 0 dB and a target Quality of Service 
(QoS) set at Pd of 90%, it is found out that the required sensing 
time for our GNU Radio USRP based CR system is equal to 
31.59ms. 
Keywords- Spectrum Sensing; Probability of Detection; 
Probability of False Alarm; GNU Radio; USRP. 
I. 
 INTRODUCTION  
A recent spectrum occupancy measurement shows that 
a significant portion of the spectrum allocated to licensed 
services show little usage over time, with concentration on 
certain portions of the spectrum while a significant amount 
of 
the 
spectrum 
remains 
unutilized 
[1]. 
A 
new 
communication paradigm to exploit the existing wireless 
spectrum opportunistically is necessary to overcome limited 
available spectrum and inefficiency in spectrum utilization.  
Originally introduced by Mitola, [2], Cognitive Radio 
(CR) technology allows unlicensed or cognitive users (CUs) 
to take advantage of the spectrum holes by intelligently 
identifying and using them, and possibly releasing them 
when required by the primary users (PUs). Hence, it is a 
fundamental requirement that the CU performs spectrum 
sensing to detect the presence of PU signal and also locate 
unoccupied spectrum segments, the spectrum holes, as 
accurately and quickly as possible.  
Various approaches have been proposed for spectrum 
sensing such as matched filter, energy detection, feature 
detection and more recently, wavelet detection methods [3]. 
In local sensing, each CU senses the spectrum within its 
geographical location and makes a decision on the presence 
of PUs based on its own local sensing measurements. The 
matched filter (MF) is an optimum coherent detector. 
However it requires a prior knowledge on the behavior 
(modulation) of the received signal. Energy detection (ED) 
is a non-coherent detection method that uses the energy of 
the received signal to determine the presence of primary 
signals. This simple method is able to gather spectrum-
occupancy information quickly. However, its sensing 
capability is vulnerable to noise. Cyclostationary detector 
exploits the inherent periodicity in the received signal to 
detect primary signals with a particular modulation type by 
implementing a two-dimensional spectral correlation 
function (SCF) rather than the one-dimensional power 
spectral density (PSD) of the energy detector. Its spectrum-
sensing performance is robust to noise-like signal. However 
this method demands excessive Analog-Digital Converter 
(ADC) requirement and signal processing capabilities, thus 
accompanying a large amount of power consumption [4]. In 
this research, energy detector is chosen due to the 
assumption that CU has limited information on the primary 
signal (i.e. only the local noise power is known). Hence 
energy detector is optimal. In addition, IEEE802.22 
standard on cognitive radio has spectrum sensing via energy 
detection in its provision. 
The flexibility of Software Defined Radio (SDR) makes it 
a well suited candidate for the implementation of cognitive 
features [5]. One of the first research works on 
implementation of spectrum sensing is reported in [3] using 
SDR platform called Berkeley Emulation Engine 2 (BEE2). 
The sensing mechanisms utilized are the energy and 
cyclostationary detectors. However, the measurements and 
analysis are based on the captured local data. While in [6], 
Dynamic Spectrum Access (DSA) mechanism is developed 
237
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

using an SDR platform consisting of USRP and GNU radio. 
GNU Radio is an open source software toolkit which 
consists of a huge numbers of signals processing blocks 
library (i.e modulators, filters, amplifiers and etc). This 
signal processing blocks can be linked together for building 
and deploying the baseband part of the dedicated radio [9], 
[10]. USRP is the hardware link between this baseband 
signal blocks and the real environment. Its function is to 
change the analog value of the spectrum to the digital 
domain and to change the digital domain signal to analog 
value [7], [8]. The overall block diagram is shown in Figure 
1. 
This research has two goals; (1) is to develop a DSA 
based CR system using GNU Radio and USRP, by 
combining the works of [3] and [6], in addition to having 
our own designed spectrum management and decision and 
(2) to do measurement and analysis based on the captured 
local data. However, this paper only highlights the use of 
GNU radio and USRP as the testbed for the implementation 
and measurement of ED sensing scheme and the 
determination of these parameters from the local data; 
sensing threshold, sensing time, probability of false alarm 
(Pfa) which is the probability of wrong detection of PU 
when it is absent, and the probability of detection (Pd) that is 
the probability of correct detection of a PU. 
The paper is organized as follows: Section II presents a 
background on cognitive radio technology. While Section 
III defines channel sensing hypotheses and introduces the 
sensing performance metrics, the probabilities of detection 
and false alarm. Section IV discusses energy detector block 
diagram of of GNU Radio. The experimental set-up and 
preliminary results are presented in Section V. Finally, 
Section VI provides conclusion and future works. 
 
Figure 1.  Software defined radio block diagram 
II. 
COGNITIVE RADIO TECHNOLOGY 
The vital objective of the CR is to achieve the best 
accessible spectrum through cognitive capability and 
reconfigurability. In other words, CR also embodies 
awareness, intelligence, learning, adaptivity, reliability and 
efficiency. Cognitive cycle consists of three major steps as 
follows [1],[2]:  
a) 
Sensing of RF stimuli which involves the detection 
of spectrum holes to facilitate the estimation of 
channel state information and prediction of channel 
capacity for use by the transmitter. 
b) 
Cognition/spectrum management which controls 
opportunistic spectrum access and capturing the 
best 
available 
spectrum 
to 
meet 
user 
communication requirements. Cognitive radios 
should decide on the best spectrum band to meet 
the Quality of Service (QoS) requirements over all 
available spectrum bands by managing functions 
such as optimal transmission rate control, traffic 
shaping and routing. 
c) 
Actions to be taken can be in terms of re-
configurable communication parameters such as 
transmission power, modulation and coding. 
Those three tasks form a cognitive cycle as shown in Figure 
2. 
In this research work, DSA based CR system is 
developed using USRP and GNU radio as hardware and 
software platforms, respectively. The proposed design 
consists of four main functional blocks which are spectrum 
sensing, spectrum management, spectrum decision and data 
transmission [12]. However, the contribution of this paper is 
limited to spectrum sensing that concerns with the sensing 
parameters such as the sensing threshold, probability of 
false alarm, probability of detection and the sensing time, 
which are all decided based upon locally measured data. 
The analysis on the captured data is used to assess the 
platform characteristics in terms of sensitivity and best 
performance in local environment. The results are further 
utilized to set the desired Quality of Service (QoS) for the 
system. 
 
 
Figure 2.   Basic cognitive cycle [2] 
III. 
CHANNEL SENSING HYPOTHESES 
The sampled received signal, X[n] at the CU receiver 
will have two hypotheses as follows: 
H0: X[n] =W[n]               if PU is absent         . 
H1: X[n] =hW[n] + S[n]  if PU is present   (1) 
where n = 1, …, N; N is the number of samples and h is the 
gain of channel that is assumed to be 0 under hypothesis H0 
and 1 under hypothesis H1.  The noise W[n] is assumed to be 
additive white Gaussian (AWGN) with zero mean and 
variance σw
2. S[n] is the PU’s signal and is assumed to be a 
random Gaussian process with zero mean and variance σx
2. 
238
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

Using energy detector, the decision based on Neyman-
Pearson criterion will be 
                      𝑌𝑌 =
1
𝑁𝑁 ∑
(𝑋𝑋[𝑛𝑛])2
𝑁𝑁
𝑛𝑛=1
        
 
      (2) 
where Y is the output of the energy detector which serves as 
the test statistic. Taking γ as the threshold to decide whether 
signal is present or not, the performance of energy detector 
can be characterized by a resulting pair of (Pfa, Pd) as the 
probabilities that the CU’s sensing algorithm detects a PU 
under H0 and H1, respectively. 
 
Pfa = P(Y > γ | H0)   
 
 
(3) 
       
      Pd = P(Y > γ | H1) 
 
 
      (4) 
 
If the noise term is assumed to be circularly symmetric 
complex Gaussian, using central limit theorem, Gaussian 
distribution approximation for the probability density 
function (PDF) of Y, it can be derived from (3) and (4) [13]; 
𝑃𝑃𝑓𝑓𝑓𝑓 = 𝑄𝑄 ቆቀ
𝛾𝛾
𝜎𝜎𝑤𝑤2 − 1ቁ √𝑁𝑁ቇ   
 
(5) 
𝑃𝑃𝑑𝑑 = 𝑄𝑄 ൭ቀ
𝛾𝛾
𝜎𝜎𝑤𝑤2 − 𝑆𝑆𝑁𝑁𝑆𝑆 − 1ቁ ට
𝑁𝑁
2𝑆𝑆𝑁𝑁𝑆𝑆+1൱      
 
(6) 
where signal-to-noise ratio (SNR) is taken as 
|ℎ|2𝜎𝜎𝑥𝑥2
𝜎𝜎𝑤𝑤2  and Q(.) 
denotes the generalized Marcum Q-function. The challenge 
of the local spectrum sensing is to reliably decide on the two 
hypotheses to achieve high Pd for good protection of PU and 
low Pfa to provide satisfactory access for CUs.  
 
IV. 
GNU RADIO ENERGY DETECTOR 
The energy detector is known as a suboptimal detector, 
which can be applied to detect unknown signals as it does 
not require a prior knowledge on the transmitted waveform 
as the optimal detector (matched filter) does. Figure 3 
depicts block-diagram of an energy detector. The ADC is 
used to convert the received signal to the digital domain. 
Then the square magnitude of the digitized signal is 
calculated by using the Fast Fourier Transform (FFT) and 
magnitude square function. To make the measurement more 
accurate, N numbers of samples is taken and the average 
value of the samples is used to make the decision whether 
signal is present or not by comparing it with the threshold. 
 
Figure 3.  Block diagram of an energy detector 
In this research, the GNU Radio energy detector flow 
graph design is a modification from the GNU Radio’s 
spectrum analyzer which is available in the GNU Radio 
package. Figure 4 shows the flow graph of the energy 
detector used for this research. The Radio frequency (RF) 
signal is captured and down converted to the baseband 
frequency (DC) by the RFX2400 USRP front end [8] and 
then passed to the USRP Motherboard. The daughterboard 
is necessary since the ADC speed cannot cope with the high 
frequency RF signal in the air (i.e. 2.4GHz) as the ADC 
speed is only 64MS/s.   
The speed of the digitized signal will be scaled down by 
the digital down converter (DDC) which is implemented 
inside the FPGA. The DDC value is programmable with 
even numbers in the range of 4 to 256. The baseband signal 
needs to be down converted again by the DDC because the 
speed of the signal have to be reduced to be transferred to 
the GNU Radio installed in Personal Computer (PC) 
through the USB 2.0 bus which has the bottleneck speed at 
32MHz.  
In GNU Radio, the transferred signal from the USRP 
which is in the format of a stream of data will first be 
converted to I & Q format (Vector) by a block called 
gr.stream_to_vector.  Its task is to take a stream of items as 
its input and convert it into a stream of blocks containing 
nitems_per_block as its output [9]. In this research, 
nitems_per_block is equal to the size of our FFT which is 
1024. Then, this signal will be pushed into the GNU radio 
FFT block, the gr.fft_vcc.  The term vcc at the end of the 
block indicates that the input of the signal processing block 
is in complex vector type and the output is also a complex 
vector [10]. In the FFT block, windowing technique is used 
to optimize the FFT result. Windowing is a technique used 
to shape the time portion of the sampled signal. This is to 
minimize edge effects that will result in spectral leakage in 
the FFT spectrum and increases the spectral resolution the 
frequency domain result [11]. 
The complex output of the FFT block will then be 
connected to the complex magnitude block named 
gr.complex_to_mag.  This block takes a complex number as 
its input and gives the magnitude (in float format) of this 
number as output. Then, the result of this block will be 
converted from the ADC value which represents the voltage 
to the dB value by using gr.nlog10_ff block. Lastly, the 
result in dB will be sent to a sink block called 
gr.message_sink. The sink block will then pass the value of 
the power spectral to the Python layer. Collecting and 
averaging N samples of FFT will be done in Python, and 
then the decision on the presence of PU will be made based 
on the result of the sensing and predetermined threshold. 
 
 
Figure 4.  GNU Radio ED Block Diagram 
239
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

V. 
ENERGY DETECTOR EXPERIMENTAL RESULTS 
The 
section 
provides 
the 
real-time 
testbed 
implementation to evaluate and verify the theoretical results 
on the performance and limitations of the GNU Radio 
energy detector. In particular, we measured the achievable 
probabilities of detection and false alarm as a function of 
sample size for various signal levels based on a 
predetermined threshold. 
A. Testbed Description 
The testbed used in the experiments is the Universal 
Software Radio Peripheral (USRP) as the Software Defined 
Radio (SDR) platform and GNU Radio as the SDR software 
implementation. 
USRP consists of two main boards; the daughter board 
and the mother board. The mother board consists of four 12-
bit Analog to Digital Converter (ADC) with sampling rate 
of 64MS/s, four 14-bit Digital to Analog Converter (DAC) 
with speed of 128MS/s, two Digital up Converter (DUC) to 
up-convert the baseband signal to 128MS/s before 
translating them to the selected output frequency, a 
programmable USB 2.0 controller for communication 
between USRP and GNU Radio and an FPGA for 
implementing four Digital Down Converter (DDC) and high 
rate signal processing. The daughterboard is acting as the 
RF front-end of the SDR.  
GNU Radio consists of signal processing blocks library 
and the glue to tie these blocks together for building and 
deploying SDRs [5],[7],[9]. The signal processing blocks 
are written in C++ while Python is used as a scripting 
language to tie the blocks together to form the flow graph. 
Simplified Wrapper and Interface Generator (SWIG) is used 
as the interface compiler which allows the integration 
between C++ and Python language. Figure 5 shows the 
structure of GNU Radio and USRP SDR. The USRP will 
digitize the inflow data from the air and passing it to the 
GNU Radio through the USB interface. GNU Radio will 
then further process the signal by demodulating and filtering 
until the signal is translated to a packet or a stream of data.  
 
Figure 5.  GNU Radio and USRP Structure 
B. Energy Detection Implementation 
Figure 6 shows the experimental setup consisting of two 
USRPs, one laptop and one PC. PC with USRP A acts as the 
receiver while the laptop and USRP B acts as the 
transmitter. Daughter boards used for these experiments are 
RFX2400 which can cover frequencies from 2.3GHz to 
2.9GHz. There is a neighboring access point to consider 
which can interfere with the USRP frequencies. Therefore, 
the USRP center frequency is set at 2.48GHz to avoid the 
interference and jamming with the said access point 
operating at 2.4 GHz band.  
 
(a) USRP hardware platform 
 
(b) Block diagram of overall setup 
Figure 6.  Experimental setup 
The energy detector is implemented using 1024 point 
FFT with a fully parallel pipelined architecture for the 
fastest speed.  Each block of FFT outputs is averaged and 
stored inside a buffer. N-numbers of the averaged FFT block 
will be collected and then averaged again to acquire the 
final result that will be used to make the decision on the 
presence of PU. N value is programmable and it will be set 
based on the selected Pd.  
C. Experimental Results 
We tested a GMSK signal centered at 2.48GHz carrier 
frequency. In the experiment to determine Pfa, the 
measurement is carried out when there is no signal 
transmission from PU and CU as shown in Figure 7. From 
this figure, it can be observed that the highest noise spike is 
around -37.0dB and more noise spike is recorded after -
41.0dB. Therefore, in this work, the threshold is in the range 
of -37.0dB to -41.0dB. Thus, the curve for Pfa versus sample 
size is obtained and we estimated the detection threshold to 
meet the target Pfa. Then, we applied the threshold to the 
captured data when the PU signal is present, as shown in 
Figure 8, and computed the probability of detection, Pd. 
Each of the detection measurement is repeated 1000 times to 
obtain an accurate estimation of Pfa and Pd.  
240
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

 
Figure 7.  Absence of PU as observed using GNU Radio spectrum 
analyzer at 2.5GHz 
 
Figure 8.  Presence of PU as observed using GNU Radio spectrum 
analyzer at 2.8GHz 
Figure 9 shows the performance of Pfa against sample 
size, N. This graph will be used to determine the sensing 
threshold based on the desired Pfa. For instance, if a target 
Pfa of 5% is chosen, the threshold curves that intersect with 
the Pfa value of 0.05 will be considered. It should be noted 
that higher number of samples size will cause longer sensing 
time to the CR system.  In this work -39.0 dB is chosen as 
the sensing threshold to decide on the presence of PU for Pd 
measurement since it crosses Pfa value of 0.05 and hence, 
satisfies the desired Pfa of 5%.   
 
Figure 9.  Probability of False Alarm versus Number of Sample 
With the set Pfa of 5%, we do the measurement for Pd by 
sweeping the signal level from -37.0dB to -39.0dB and the 
obtained results are plotted in Figure 10. This graph is used 
to determine the required N for the desired Pd. At a 
predetermined noise threshold of -39.0dB, power received 
(Pr) of -39 dB, -38 dB and -37 dB can be translated to 
Signal-to-Noise ratio (SNR) values of 0, 1 and 2 dB, 
respectively. The higher the Pd, sample size needed will 
increase and hence, the longer the sensing time. For 
instance, for a target Pd of 90%, at least 35 samples are 
needed at SNR equals to 0 dB. Longer sensing time will 
reduce the data transmission time, and thus will result in a 
lower overall throughput.  
Figure 11 shows the theoretical results performance of 
Pd against sample size under related SNR conditions. It can 
be observed that that the experimental results in Figure 10 
follow the curve of the theoretical framework as in Fig. 11, 
especially for target Pd of 90% which gives sample size 
needed of 35 at SNR of 0 dB.  The difference between the 
theoretical result and experimental result might be caused 
by the limitations of the SDR hardware used, the real room 
environment which differs from the considered theoretical 
AWGN channel and formula approximation. 
 
 
Figure 10.  Probability of Detection vs. Number of Sample for Pfa=5% 
 
Figure 11.  Theoretical Probability of Detection vs. sample size for Pfa=5% 
under various SNR conditions 
In this experimental set-up, the sampling time, t used is 
0.9025ms. This sampling time is obtained by using time 
stamping on the running designed CU sensing system of 
Figure 4. Since the experimental sensing performance 
closely matches that of the theoretical framework at Pd of 
90%, the target Quality of Service (QoS) for Pd is set at the 
241
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

value. Hence, as observed in Figure 10, the required number 
of samples, N, will be 35. By using (7); 
𝑇𝑇𝑠𝑠 = 𝑡𝑡𝑁𝑁     
 
 
(7) 
 
the sensing time, Ts for our GNU Radio USRP based CU 
system is derived to be 31.59ms. The frame structure for our 
system is given in Figure 12 where Tf is the frame period 
and Tf – Ts is for data transmission.  
 
 
Figure 12. Frame Structure for CU System  
 
According to [14], the frame period, Tf can be 
approximated using (8); 
𝑇𝑇𝑓𝑓 ≈ −𝛽𝛽0 ቆ 1 + 𝑊𝑊−1 ቀ− 𝑒𝑒𝑥𝑥𝑒𝑒 ቀ−
𝛽𝛽0+ 𝑇𝑇𝑠𝑠
𝛽𝛽0 ቁቁቇ       (8) 
 
where 𝛽𝛽0 is the off time of the PU which in this work equals 
to 650 ms and 𝑊𝑊−1 is the negative branch of the Lambert’s 
W function[14]. Substituting all the values in the formula 
will give the Tf equals to 224.25 ms and hence, transmission 
time is derived to be equal to 192.66 ms. It can be 
concluded from the frame structure that sensing time has a 
direct impact to the data throughput. Longer sensing time 
will reduce the transmission time, resulted in lower 
throughput and vice versa. 
 
VI. CONCLUSION 
Two main performance metrics for spectrum sensing 
were studied; probability of false alarm (Pfa) and probability 
of detection (Pd). Pfa is used to determine the threshold of 
the CR DSA system while Pd is used to determine on how 
much samples are needed by the CR DSA to meet the 
desired performance. The bigger the sample size, the longer 
the sensing time needed for the CU system, hence reducing 
the throughput. Future works will include attempts to 
minimize the sensing time using bio-inspired technique for 
decision making in achieving target QoS. 
 
ACKNOWLEDGEMENT 
The authors wish to express their gratitude to Research 
Management Center (RMC), Universiti Teknologi Malaysia 
for the financial support of this project. 
 
REFERENCES 
[1] I. F. Akyildiz, W.-Y. Lee, M. C. Vuran, and S. Mohanty, 
“Next 
Generation/Dynamic 
Spectrum 
Access/Cognitive 
Radio Wireless Networks: A Survey”. The International 
Journal of Computer and Telecommunications Networking 
vol. 50, pp. 2127 – 2159, 2006. 
[2] J. Mitola, “Software radios-survey, critical evaluation and 
future directions”. IEEE National Telesystems Conference, 
pages 13/15-13/23, 19-20 May 1992. 
[3] D. Cabric, S. M. Mishra, R. W. Brodersen, “Implementation 
Issues in Spectrum Sensing”, Asilomar Conference on Signal, 
Systems and Computers, November 2004 
[4] R. A. Rashid, N. M. Aripin, N. Fisal and S. K. S. Yusof, 
“Sensing Period Considerations in Fading Environment for 
Multimedia 
Delivery 
in 
Cognitive 
Ultra 
Wideband”, 
International Conference on Signal and Image Processing 
Applications (ICSIPA 2009), Kuala Lumpur, 18-19 Nov 2009 
[5] N. Manicka, “GNU Radio Testbed”, Thesis for Master of 
Science in Computer Science, University of Delaware, Spring 
2007. 
[6] A. Crohas, “Practical Implementation Of A Cognitive Radio 
System For Dynamic Spectrum Access”, Master of Science in 
Electrical Engineering Thesis. Notre Dame, Indiana, July 
2008 
[7] M. 
Ettus, 
Universal 
software 
radio 
peripheral. 
http://www.ettus.com. 
[8] USRP 
RFX 
diagrams, 
http://gnuradio.org/redmine/wiki/ 
gnuradio/UsrpRfxDiagrams 
[9] GNU Radio API list, http://gnuradio.org/doc/doxygen/ 
index.html 
[10] D. Shin, “A Dictionary of the GNU Radio blocks”, 21 August 
2005. 
[11] P. Courtois. “Windowing: Optimizing FFTs Using Window 
Functions”. National Instruments Tutorial, 3 September 2008.  
[12] M. A. Sarijari, R. A. Rashid, N. Fisal, A. C. C. Lo, S. K. S. 
Yusof, N. H. Mahalin, “Dynamic Spectrum Access Using 
Cognitive Radio Utilizing GNU Radio and USRP”, 26th 
Wireless World Research Forum (WWRF26), Doha, Qatar, 
11-13 April, 2011 
[13] H. V. Poor, An Introduction to signal detection and 
estimation, 2nd ed. Springer-Verlag, New York, 1994 
[14] Y. Pei, A. T. Hoang, Y. C. Liang, ”Sensing-Throughput 
Tradeoff in Cognitive Radio Networks: How Frequently 
Should Spectrum Sensing be Carried Out?”, IEEE 18th 
International Symposium on Personal, Indoor and Mobile 
Radio Communications, 2007. PIMRC 2007. Athens. 3-7 
Sept. 2007. pp. 1 - 5. 
 
242
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

