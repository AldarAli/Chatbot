Dialog Management for Credit Card Selling via Finite State Machine Using Sentiment
Classiﬁcation in Turkish Language
Gizem So˘gancıo˘glu, Tolga C¸ ekic¸, Bilge K¨oro˘glu, Mert Basmacı and Onur A˘gın
R&D and Special Projects Department
Yapı Kredi Technology, Istanbul, Turkey
Email: {gizem.sogancioglu, tolga.cekic, bilge.koroglu, mert.basmaci}@yapikredi.com.tr
Abstract—In this paper, we propose a goal-oriented chat bot,
which aims to sell a suitable credit card to customers according
to their needs. Our proposed chat bot detects customer’s needs,
uses this information to recommend a credit card, answers speciﬁc
queries from customers and gathers the required information
to start a credit card application process. This goal-oriented
dialog management system is designed for Turkish Language
and it makes use of a Finite State Machine (FSM) structure to
achieve its goals. This design allows the chat bot to facilitate the
ﬂow of conversation and prevents giving unrelated answers to
customers. The chat bot has unique tasks to perform in each
state of FSM. Transitions between states are processed with
the events, which are determined by outputs of the sentiment
analysis model. Due to Turkish being an agglutinative language
we perform morphological analysis of words to perform this task.
Besides driving the conversation ﬂow to achieving its goal, the
chat bot can detect when customers ask questions and proceeds
to the related state where the chat bot retrieves a proper answer.
Since sentiment classiﬁcation model forms the basis for keeping
the chat bot in proper states, we experimented with different
classiﬁcation algorithms with different features and compared
their successes. K-Nearest Neighbor algorithm using bag-of-words
and lexicon features yielded the best results with the 0.822 f-score.
Moreover, human evaluations for chat bot showed that using FSM
and managing the conversation with the sentiment classiﬁcation
model for Turkish language is a promising solution.
Keywords–Chat bot; Dialog Management; Sentiment Classiﬁca-
tion; Finite State Machine; Conversational Bot
I.
INTRODUCTION
Intelligent conversation agents, or chat bots, are being
considered increasingly for helping people with solving real
life problems. In this paper, we present such a system for
credit card selling tasks. Our proposed chat bot uses a Finite
State Machine(FSM) based dialog ﬂow in conjunction with
continuous sentiment analysis of customer utterances to per-
form its predeﬁned duties such as informing user or detecting
what type of product would be more suitable for them, and
ultimately successfully completing credit card selling process.
We use a ﬁnite state machine for our chat bot to always keep
track of conversation and also to prevent conversation from
going too far away from the subject and the goal that our
chat bot is trying to achieve. Additionally, keeping state of the
conversation with an FSM provides consistency in responses of
our chat bot, which is desired as it is aimed to help customers
buy a credit card.
Chat bots have been developed for different purposes.
Weizenbaum’s ELIZA [1], one of the ﬁrst dialog systems, and
A.L.I.C.E. [2] are examples of general conversational bots.
As natural language processing becomes more sophisticated
some chat bots have been tailored for speciﬁc purposes to
help people as virtual assistants. For example, Apple’s Siri[3]
can assist users in multiple ways or Alaska Airline’s chat bot
Jenn [4] can help customers in a more domain speciﬁc way
to ﬁnd suitable planes to their desired destinations. Our chat
bot is similar to the latter example as it can help customers
in informing them in credit card domain while it also has the
additional goal of selling the product.
Designing our chat bot for Turkish language provides
additional challenges and opportunities in natural language
processing compared to Indo-European languages such as
English. Turkish is an agglutinative language and sufﬁxes
to the words are very important and usually replace words.
Therefore, many different words seem to appear in a sentence
while in fact a few words with different sufﬁxes appear in a
text and in some instances some important information crucial
to the meaning of the sentence can only be found in sufﬁxes
such as negativity of a sentence.For example the word ”kitap”
(book) becomes ”kitabım” (my book) after the sufﬁx ”-ım” is
appended. When the sufﬁx ”-a” is appended to this word it
becomes ”kitabıma” (to my book) [5]. Also, some consonants
change in Turkish language when new sufﬁxes are appended
as ”kitap” becomes ”kitabım”, letter ”p” is changed into ”b”.
Because of these reasons morphological analysis of words is
crucial in Turkish language processing.
This paper is organized in the following way: in Section 2
we describe and give examples of some of the related previous
research in this area. In Section 3 we describe our methodology
in detail. In Section 4 we explain how we evaluated the success
of our system and present experimental results. Lastly, we
discuss the possible applications and future research of our
work and conclude the paper in Section 5.
II.
RELATED WORK
A. Related Work in Dialogue Management
Researchers were interested by chat bots because they
can enable trying new natural language processing, machine
learning and artiﬁcial intelligence methods while providing
an interesting platform for people from all walks of life can
interact. One of the ﬁrst examples of using natural language
processing techniques to create a chat bot that emulates human
conversation is ELIZA [1]. Also a Turkish chat bot inspired
by ELIZA was developed by Aytekin et al. [6]
There have also been research on chat bots to emulate
daily speech, to give users the feeling that they are talking
38
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

to a thinking person rather than a machine. A.L.I.C.E. [2] and
Mitsuku [7] are such examples of chat bots that try to emulate
human conversations.
Some researches have oriented toward making chat bots for
more speciﬁc purposes rather than just general conversation.
For example, IBM’s Watson computer is designed to answer
questions about world knowledge by processing questions
asked in natural language [8]. Apple’s Siri is a conversation
agent that assists users in various ways, in addition to providing
natural language answers to user queries, it can also perform
tasks like phone calls or web searches. There are also chat
bots that emulate customer service representatives. These chat
bots are designed with the purpose of helping customers
by answering their questions or solving their problems with
the related products. Alaska Airline website’s ”Ask Jenn” or
IKEA’s Anna[9] are examples of chat bots acting as customer
service representatives. Other chat bots have been developed to
help students in educational environments such as EMERGO
[10] and CHARLIE [11].
Chakrabarti proposes using ﬁnite state machines in chat
bots that are designed as support agents [12]. Chakrabarti’s
FSM tries to keep state by analyzing users’ utterances to detect
how much user thinks bot is close to solving the problem and
uses an external knowledge base to include in its answers.
Since our chat bot has a more speciﬁc goal, instead of keeping
state of where customer is, we track states of how much
our chat bot is close to selling the product and use customer
sentiments to go to further states.
B. Related Work in Sentiment Analysis
Our chat bot relies heavily on the sentiment analysis of
customer utterances. Sentiment analysis is basically detecting
or understanding the opinion or the negative or positive senti-
ment in a sentence or a document. The term sentiment analysis
has been coined by Nasukawa et al. [13] Sentiment analysis
has especially gained popularity for analyzing social media
blogs and mini-blogs, product opinion reviews, wikis [14].
Sentiment analysis have been performed on different lengths of
text. Since we expect chat customers to write short messages
like a sentence, we focused our research on sentiment analysis
on sentences.
Maynard and Funk suggests three types of methods for
sentiment analysis: machine learning based, lexicon based and
hybrid methods [15]. While machine learning approaches use
training for ﬁnding common patterns for different sentiments,
lexicon based approaches uses language rules for ﬁnding the
sentiments. Syed et al. uses a lexicon based approach for
sentiment analysis in morphologically rich Urdu language [16].
Hybrid methods use aspects from both approaches. As we use
both morphological analysis of words and machine learning
our sentiment analysis approach is hybrid. Dehkharghani’s
research provides methods for sentiment analysis in Turkish
Language [17].
III.
METHOD
The purpose of our chat bot is to both perform the task of
selling a product and answer any questions a customer may
have. Therefore, our chat bot keeps track how close it is to
complete its task with an FSM and uses sentiment classiﬁcation
methods to change between states. Also, it assists customers
in the way of a more traditional chat bot by detecting user
questions and returning appropriate replies, while continuing to
driving the conversation toward successfully selling a product.
For sentiment classiﬁcation, question detection and answering
we use natural language processing techniques adapted to work
in Turkish language.
A. Preprocessing
We perform some preprocessing operations on customer
utterances before using them for question detection or sen-
timent analysis. We use preprocessing tasks that is common
to natural language processing such as removing punctuations
and tokenization. The punctuation marks have been removed
are listed below:
•
Dot, Comma, Colon, Exclamation Mark, Semicolon,
Opening and Closing Parenthesis, Square Brackets,
Question Mark, Underscore Character, Dash, Slash
Mark, Asterisk.
We also perform a spell checking with the help of Zemberek
library[18] so as not to miss the meaning of some mistyped
words. Additionally, our chat bot keeps sentences both in their
original form and by replacing the Turkish characters with their
counterpart English letters. This is done to prevent conﬂicts
that may happen due to usage of non-Turkish keyboards.
B. Dialog Management through FSM
We use an FSM in our credit card selling chat bot to
keep track of the state of the conversation, varying needs of
the customer and to give information to the customer when
needed. Figure 1 shows states and transitions of our FSM
design. Since this is a goal-oriented chat bot, the main ﬂow
of the FSM includes states for fulﬁlling the goals of credit
card selling tasks. Transitions back and forth between the
states are included to address a customer’s changing needs
or desires. Our chat bot has different sets of available answers
for each state and drives the conversation toward other states
by asking questions and detecting customer’s sentiments for
these questions. Our goal oriented system has a main ﬂow of
states that controls how close chat bot is achieving its goal and
what it needs to do next. On the other hand, ”Swearing”’ and
”Informative State” states are out of the main ﬂow and these
states have their special rules for transition.
Our chat bot initiates the conversation by greeting the
customer and asking them if they have a predetermined type
of card they want to buy. The credit card selling system has
ﬁve card types it can sell and in ’Start’ state whether customer
wants a speciﬁc card among those or not is detected. This state
handles various customer replies by sentiment analysis such
as negative replies or discarding some card types, etc. If the
customer suggests they have a preferred card type but doesn’t
indicate which one, ”Card Determination” state handles this
situation by asking user questions to receive the information
of which product they want to buy.
The state ”Detect User Needs” is, as the name suggests,
where the chat bot asks questions to understand which credit
card type might be the most suitable for an indecisive customer.
As there are different credit card types tailored for different
needs and various customer proﬁles, the credit card selling bot
tries to determine what card is the most suitable for the current
customer. While the conversation is on this state, questions
are asked to gather information from customer to make this
39
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

Figure 1. Finite State Machine Diagram of Dialog Flow
decision. Conversation remains on this state until a card is
determined to be suitable for the customer.
In the case of a suitable card type for the customer is
determined by the chat bot, conversation moves to ”Recom-
mendation” state. In this state, detected card is offered to the
customer, awaiting for their approval. If the customer does
not want to buy that card type, conversation goes back to
”Detect User Needs” state, otherwise conversation moves to
the ”Conﬁrmation” where the chat bot asks the customer for
the ﬁnal conﬁrmation before starting the formal credit card
application. Conversation can move to this state from ’Start’
as well, if the customer asks to buy a speciﬁc card.
Conversation moves to ”Collect Information” state once a
customer conﬁrms to buy a speciﬁc credit card type. During
this state of the conversation, chat asks customer questions
to learn information required for completing a credit card
application. Questions are asked arbitrarily and and customer
replies are checked to determine if they are valid. Collecting
all the required information, chat bot fulﬁlls its goals by
completing a successful credit card application for a customer
and a credit card suitable for that customer’s needs.
The states ”Swearing” and ”Informative State” are outside
of the main ﬂow and can be reached from all of the other states
once customer utters a sentence prompting to either of these
states. ”Swearing” is basically a control for appropriate speech.
If a customer uses a word or a phrase that is deemed taboo
in Turkish Language, conversation moves to ”Swearing” state
and after chat bot issues a warning to the customer the con-
versation is terminated. Conversation moves to ”Informative
State” when the customer asks a question anytime during the
conversation. Question detection is done morphologically by
detecting question words and question sufﬁxes that is usually
used in question sentences in Turkish language. In conversation
state, chat bot ﬁnds an appropriate answer for the question
asked by the customer. In order to ﬁnd an answer to questions,
a retrieval-based question answering system is used.
C. Sentiment Classiﬁcation
As expressed in previous section, sentiment classiﬁcation
algorithm plays an important role for the overall success
of the chat bot. Because sentiment of a customer sentence
determined by the sentiment classiﬁcation model is used as a
transition event for FSM to change states. It determines the
transitions between ”Start State - Detect User Needs”, ”De-
tect User Needs-Recommendation” and ”Recommendation-
Conﬁrmation” states. For example, if the system classiﬁes the
sentiment of a customer sentence as positive in ”Recommen-
dation” state, where the chat bot recommends a proper card
type for a customer, it means that customer conﬁrms to buy a
recommended card type. In this situation, FSM processes the
corresponding event, and passes to ”Conﬁrmation” state. This
event type moves FSM closer to the END state. Otherwise,
when the sentiment of customer utterance is negative, FSM
passes to ”Detect User Needs” state to help the customer to
ﬁnd the most proper card type for the customer.
Our baseline algorithm and proposed systems are detailed
below.
1) Baseline Method: We have implemented two baseline
models namely Lexicon-based baseline and Majority-based
baseline to measure the real efﬁciency and success of our
sentiment classiﬁcation system.
Majority-based baseline model classiﬁes any utterance as
the most seen label in the training data set. Although this is
very common and simple approach, it is a strong baseline.
Lexicon-based baseline system utilizes the lexicons consist-
ing of negative terms and morphological structure of Turkish
language. In Turkish, sufﬁx, which makes sentence negative,
is added to the end of verb in a sentence. Therefore, ﬁrst,
baseline algorithm checks if a verb in sentence coming from
customer contains negative sufﬁx. If it has, system classiﬁes
40
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

this customer utterance as negative. If it does not, then,
algorithm checks if system contains any negative particles
deﬁned in lexicon. If it has, algorithm assigns a negative
sentiment to sentence, otherwise, assumes it as positive sen-
tence. In summary, baseline system does not use any semantic
information, exploits lexical attributes of Turkish Language.
2) Supervised Methods: Since supervised algorithms per-
form quite successful for sentiment classiﬁcation problem, we
have evaluated different learning algorithms and chose the best
performed one. For this task, we needed a labeled data set,
which is annotated as positive or negative sentiment. We used
a dataset consisting of real web chat conversations between a
customer and a customer service representative. This dataset
contains more than a million utterances. Although these con-
versations are based on the solutions of problems, customers
face and there were no credit card selling goal they still
contain banking domain terminology. We have selected 500
customer utterances among those and 3 different annotators
labeled these utterances according to their sentiment. The class
(positive/negative) having majority vote for a sentence has
been considered as ground truth.
Figure 2 shows the prediction phase (positive/negative) of
our sentiment classiﬁcation module. As shown in Figure 2,
ﬁrstly, customer message is preprocessed by applying the steps
mentioned in Section III-A. Then, this preprocessed message
is given to feature extractor module. Features extracted and
used in our experiments are listed below:
•
Length: is the count of words in a sentence.
•
Bag-of-words (BOWs): Text is represented as set of
its words in simple vector space.
•
countOfPositiveParticles (CPP): is the count of pos-
itive terms in a sentence. These positive terms are
deﬁned in the lexicon crafted by us.
•
countOfNegativeParticles (CNP): is the count of the
negative terms in a sentence deﬁned in lexicon crafted
by us.
•
haveRepeatedLetters (HRL): boolean feature. It con-
siders if a word has repeated letters (nooo!) or not
(no!).
Finally, these extracted features are given to trained learn-
ing model, which produces a sentiment class of customer
message. As learning algorithms, we have used and performed
experiments with K-Nearest Neighbor (KNN), Naive Bayes,
Random Forest, MultiLayer Perceptron (MLP) and J48 al-
gorithms. For all of these algorithms we used WEKA[19]
implementations.
The ﬁrst algorithm we use for sentiment classiﬁcation is
KNN. Using KNN, we calculate the distances between the
utterance which we want to determine its sentiment with
labeled utterances from our training set and by looking at
sentiments k nearest utterance and choose the classiﬁcation by
a majority vote of these k instances [20]. Euclidean distance
is used when calculating distances.
Naive Bayes method based on Bayes Theorem classiﬁes by
ﬁnding probabilities independently for each feature disregard-
ing any relation that may be present between features [21].
That is why this method is called ”naive”.
Figure 2. Stages of Sentiment Classiﬁcation
Random Forest is an ensemble classiﬁer, namely it is a
method that uses several classiﬁers to make a ﬁnal classiﬁ-
cation. It uses different decision tress and a ﬁnal model is
generated from the combination of each of these tree classiﬁers
[22].
MLP is a feedforward neural network model. Neural net-
works are designed after neurons in a human brain, the inputs
are processed in by a number of layers with every layer send
its feedback to the forward layers [23].
D. Question Answering
As explained above, chat bot drives the conversation by
asking questions and analyzing answers, however, when the
customer asks a question conversation moves to ”Informative
State” and the bot answers a question in this state. Question
detection is performed by morphological analysis of sentences.
In Turkish language, questions are asked by either using ques-
tion words, which corresponds to wh-questions in English or
by adding a question sufﬁx to the appropriate word in question.
We use Zemberek for morphological analysis. Zemberek is
an NLP tool for Turkish language. We have observed that
questions can be detected successfully with morphological
analysis.
After detecting a question and moving the conversation to
”Informative State” the chat bot tries to ﬁnd an appropriate
answer by retrieving an answer from the knowledge base. The
knowledge base contains question-answer pairs for common
questions that can be asked about credit cards, and some more
speciﬁc questions that can be asked about each card type. Chat
bot matches the question asked with one of the questions in the
knowledge base and returns its answer. Although, knowledge
base covers general information about credit cards it is not a
very large set and it is not much suitable for models that may
require extensive training.
For matching question sentences we preferred q-grams
distance calculation. q-grams are substrings of a string with
length q. Calculating q-grams distance is based on common
q-grams between two sentences. We also experimented with
word based similarity calculations such as cosine distance or
language modeling but q-grams based similarity performed
better for sentence matching task. Since Turkish is an aggluti-
native language, the amount of different words that appear in a
text can be quite high because every sufﬁx essentially produces
a new word. Word based similarity measure treats the same
words with different sufﬁxes as completely different words.
When stemming is used though, information about sentence
structure that may be contained in those sufﬁxes cannot be
used at all. Hence, a similarity measure that is more focused
on characters such as q-grams distance can include both words
and their sufﬁxes in distance calculation.
41
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

Once the question is answered conversation resumes from
the previous state before question was asked. After that,
customers can ask more questions if they wish and conver-
sation moves to ”Informative State” to answer each question
separately.
IV.
EVALUATION AND EXPERIMENTAL RESULTS
In this section, we show the experimental results for the
overall chat bot and sentiment classiﬁcation model, which is
the part of this study for understanding the customer intent for
taking corresponding action. First, we deﬁne the evaluation
metrics that are used for measure the performance of two
systems. Then, we report the corresponding results for each
task.
A. Chat bot Evaluations
1) Grice’s Maxims: To be able to measure the real efﬁ-
ciency of our system, we needed a consistent evaluation metric.
There is not common metric for chat bot evaluation. So, we
followed the same way with the study [12], which proposes
similar approach with us. They utilize from the Grice’s maxims
for the evaluation of their proposed chat bot. Grice’s maxims
was long considered the gold standard for evaluation of human
conversations. Maxims for human conversations are deﬁned as
follows:
•
Quality: speaker tells the truth or provable by adequate
evidence.
•
Quantity: speaker is as informative as required.
•
Relation: response is relevant to topic of discussion.
•
Manner: speaker’s avoids ambiguity or obscurity, is
direct and straightforward.
It was considered that these maxims could be applicable
to customer service conversations, between a human customer
and a chatter bot agent. And, this maxims are deﬁned as
follows[12]:
1)
Quality Maxim: Agent’s responses are factually true.
2)
Quantity Maxim: Agent provides too little informa-
tion or too much.
3)
Relation Maxim: Agent’s responses are relevant to
the topic of the conversation with respect to the
situational context and domain.
4)
Manner Maxim: Agents responses avoid ambiguity
and obscurity.
These four maxims are considered as evaluation metric for
this study. To clarify the deﬁnitions of this maxims we prepared
an example set for the participants of this survey. Annotators
gave a score between 1 and 5 for each of the maxim metric
where 1 refers the ’strongly disagree’, 2 ’disagree’, 3 ’neutral’,
4 ’agree’ and 5 ’strongly agree’. Chat bot was evaluated by
20 human participants. Then, deﬁnition and example set were
given the participants and they are asked for ﬁlling the survey
by considering the experience they had during the conversation
with chat bot.
The average of evaluation results for each maxim has been
reported in the Table I. By considering the results, we can say
that our chat bot performs quite good to understand the topic of
question and answer it relevantly. On the other hand, it seems
that even in the situations that it detects the topic of question
and answer it in same topic, it does not give the needed answer
TABLE I. AVERAGE SCORES FOR MAXIMS
Maxim
Average Score
Quality Maxim
3.5
Quantity Maxim
4
Relation Maxim
4
Manner Maxim
3.4
and the situation causes ambiguity. We can conclude that it is
successful to capture the sentiment of customer and process
the right transitions. But, when a user ask question, which is
processed by informative state, chat bot performs insufﬁciently.
B. Sentiment Classiﬁcation Results
As it is mentioned in the Section III-C, we manually
crafted data set consisting of 500 utterances and this data
set was annotated by 3 human annotators. Ground truth of
an utterance in data set was considered as the most selected
label for that utterance. Evaluations for sentiment classiﬁcation
algorithms have been performed on this data set. 10-fold cross
validation method was applied for measuring each algorithm.
Since f-score measure is commonly used for evaluation of
classiﬁcation tasks, we reported the results in terms of f-score
measure in Table II.
TABLE II. SENTIMENT CLASSIFICATION RESULTS
Learning Model
Feature
F-score
Lexicon-based Baseline
-
0.650
Majority-based Baseline
-
0.526
BOWs
0.714
+CNP*,CPP*
0.822
KNN (k=1)
+HRL*
0.806
+length
0.784
BOWs
0.806
+CNP*,CPP*
0.815
Naive Bayes
+HRL*
0.807
+length
0.773
BOWs
0.790
+CNP*,CPP*
0.797
Random Forest
+HRL*
0.790
+length
0.792
BOWs
0.724
+CNP*,CPP*
0.725
MLP
+HRL*
0.719
+length
0.720
CNP : doesContainNegativeParticle
CPP : doesContainPositiveParticle
HRL : haveRepeatedLetters
To observe the effect of each feature for classiﬁcation
performance, we reported the results as we added a new
one. Among baseline systems, Lexicon-based classier, which
considers the negative sufﬁx of verb and utilizes the lexicon
consisting of negative meaning terms, performed best with
the 0.650 in terms of f-score. It can be said that Lexicon-
based classiﬁer is an unsupervised and strong baseline. On
the other hand, all supervised models performed better than
baseline. KNN, which is simple supervised method, performed
best among all supervised algorithms. Results show that count
of positive and negative terms are distinctive features. On
the other hand, length and haveRepeatedLetters features do
not contribute the success of any learning model. Therefore,
we just used BOWs and CNN, CPP features with the KNN
learning algorithm for the sentiment classiﬁcation part of our
chat bot.
42
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

V.
DISCUSSION AND CONCLUSION
We proposed a chat bot in Turkish Language, which aims
to sell customers a proper credit card according to their
needs. If the customer already decided the credit card type, it
proceeds to the application process. Otherwise, chat bot tries
to learn about customers, detect their needs and recommend
the most suitable card speciﬁcally for that customer. In this
study, this process has been provided via FSM. Transitions
between predeﬁned states have been performed according to
output class of sentiment classiﬁcation model. FSM has been
designed speciﬁcally for credit card application. However, it
can be easily adapted to any product selling system since it
detects customers’ needs, suggests a suitable product and and
completes the application process of selling that product. All of
these steps can be applied to selling most products. Thus, we
recommend a general sentiment model based FSM algorithm
for product selling. We utilized this method for speciﬁcally
credit card selling, and experimental results were shown for it.
Since sentiment classiﬁcation plays an important role in our
transitions, we compared different classiﬁcation algorithms and
reported the results in the Section IV. Our experiments show
that KNN model using BOWs, doesContainNegativeParticle
and doesContainPositiveParticle features obtained the best
performance. Moreover, human evaluation results of chat bot
according Grice’s maxims (Table I) show that the strongest
aspect of the chat bot is transition between states accurately.
Since the transitions are determined by sentiment classiﬁcation
system, it can be said that users found it working very well. On
the other hand, due to low information retrieval performance
the question answering in the informative state is the relatively
weakest part of the chat bot that needs improving. Since our
informative state only considers the lexical similarity between
questions, this low performance was expected.
For future work, we aim to improve the performance of
informative state by utilizing semantic properties of texts as
well. We plan to exploit ontologies and distributional vector
representations of texts to capture the semantic relations rather
than considering only lexical similarity. Furthermore, a natural
language answer generation system that dynamically generates
new sentences instead of a choosing from a static list of proper
replies would be ﬁne addition. As long as such a system
would preserve consistency in grammar and the information
presented, it would increase the enthusiasm of customers to
try the chat bot. When answers are generated dynamically,
customer would feel it more human-like while the FSM still
drives the conversation toward fulﬁlling its goal.
ACKNOWLEDGMENT
The authors would like to thank S¸imal S¸en, Sinan Kahra-
man, Deniz Sezen Gezmis¸ for annotations and feedbacks about
chat bot and Nihan Karslıo˘glu for her support to improve the
system.
REFERENCES
[1]
J. Weizenbaum, “Eliza—a computer program for the study of natural
language communication between man and machine,” Communications
of the ACM, vol. 9, no. 1, 1966, pp. 36–45.
[2]
R. S. Wallace, “The anatomy of alice,” in Parsing the Turing Test.
Springer, 2009, pp. 181–210.
[3]
Apple Siri siri. http://www.apple.com/ios/siri/. Accessed: 2017-06-06.
[4]
Alaska Air Ask Jenn. https://www.alaskaair.com/. Accessed: 2017-06-
06.
[5]
E. Emekligil, S. Arslan, and O. Agin, A Bank Information Extraction
System Based on Named Entity Recognition with CRFs from Noisy
Customer Order Texts in Turkish.
Cham: Springer International
Publishing, 2016, pp. 93–102.
[6]
C¸ . Aytekin, A. Say, and E. Akc¸ok, “Eliza speaks turkish: a conversa-
tion program for an agglutinative language,” in Third Turkish Symp.
Artiﬁcial Intelligence and Neural Networks, Ankara, 1994, p. 435.
[7]
R. Higashinaka et al., “Towards an open-domain conversational system
fully based on natural language processing.” in COLING, 2014, pp.
928–939.
[8]
D. A. Ferrucci, “Introduction to “this is watson”,” IBM Journal of
Research and Development, vol. 56, no. 3.4, 2012, pp. 1–1.
[9]
Ikea
Anna.
http://www.ikea.com/ms/en JP/customer service/splash.
html. Accessed: 2017-06-06.
[10]
P. Van Rosmalen, J. Eikelboom, E. Bloemers, K. Van Winzum, and
P. Spronck, “Towards a game-chatbot: Extending the interaction in
serious games,” in European Conference on Games Based Learning.
Academic Conferences International Limited, 2012, p. 525.
[11]
F. A. Mikic, J. C. Burguillo, M. Llamas, D. A. Rodr´ıguez, and
E. Rodr´ıguez, “Charlie: An aiml-based chatterbot which works as an
interface among ines and humans,” in EAEEIE Annual Conference,
2009.
IEEE, 2009, pp. 1–6.
[12]
C. Chakrabarti, “Artiﬁcial conversations for chatter bots using knowl-
edge representation, learning, and pragmatics,” Ph.D. dissertation, Uni-
versity of New Mexico. Albuquerque, NM., 2014.
[13]
T. Nasukawa and J. Yi, “Sentiment analysis: Capturing favorability us-
ing natural language processing,” in Proceedings of the 2nd international
conference on Knowledge capture.
ACM, 2003, pp. 70–77.
[14]
D. Alessia, F. Ferri, P. Grifoni, and T. Guzzo, “Approaches, tools
and applications for sentiment analysis implementation,” International
Journal of Computer Applications, vol. 125, no. 3, September 2015, pp.
26–33.
[15]
D. Maynard and A. Funk, “Automatic detection of political opinions in
tweets,” in Extended Semantic Web Conference.
Springer, 2011, pp.
88–99.
[16]
A. Z. Syed, M. Aslam, and A. M. Martinez-Enriquez, “Associating
targets with sentiunits: a step forward in sentiment analysis of urdu
text,” Artiﬁcial Intelligence Review, vol. 41, no. 4, 2014, pp. 535–561.
[17]
R. Dehkharghani, B. Yanikoglu, Y. Saygin, and K. Oﬂazer, “Sentiment
analysis in turkish: Towards a complete framework.”
[18]
Zemberek-NLP. https://github.com/ahmetaa/zemberek-nlp. Accessed:
2017-06-06.
[19]
Weka. http://www.cs.waikato.ac.nz/ml/weka/. Accessed: 2017-06-06.
[20]
T. Cover and P. Hart, “Nearest neighbor pattern classiﬁcation,” IEEE
Trans. Inf. Theor., vol. 13, no. 1, Sep. 2006, pp. 21–27.
[21]
P. Langley, W. Iba, and, and K. Thompson, “An analysis of bayesian
classiﬁers,” in Proceedings of the Tenth National Conference on Arti-
ﬁcial Intelligence, ser. AAAI’92.
AAAI Press, 1992, pp. 223–228.
[22]
L. Breiman, “Random forests,” Mach. Learn., vol. 45, no. 1, Oct. 2001,
pp. 5–32.
[23]
S. Haykin, Neural Networks: A Comprehensive Foundation, 2nd ed.
Upper Saddle River, NJ, USA: Prentice Hall PTR, 1998.
43
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-576-0
INTELLI 2017 : The Sixth International Conference on Intelligent Systems and Applications (includes InManEnt)

