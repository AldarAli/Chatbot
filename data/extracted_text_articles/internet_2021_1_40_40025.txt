Integrating Trafﬁc Network Clustering with Multi-objective Route Planning: a
Heuristic Approach
Ying Ying Liu
Department of Computer Science
University of Manitoba
Winnipeg, Canada
Email: umliu369@myumanitoba.ca
Parimala Thulasiraman
Department of Computer Science
University of Manitoba
Winnipeg, Canada
Email: thulasir@cs.umanitoba.ca
Abstract—We model the autonomous path planning problem as
a three-objective minimization problem with the constraint of
collision free. We optimize the three objectives of distance, time,
and trafﬁc congestion, measured by the inverse of road network
congestion index, with Non-dominated Sorting Genetic Algorithm
II (NSGA-II) using real time trafﬁc information on the road.
In order to reduce the domino effect of congestion, we propose
a novel technique to improve our optimization algorithm with
road point clustering using Speed Performance Index (SPI) based
similarity measurement. Our experiment shows that NSGA-II
with clustering produces more congestion smart solutions than
NSGA-II without clustering.
Keywords–Internet of Things. Autonomous Path Planning.
Collision Free. Multi-Objective Optimization. NSGA-II. Trafﬁc
Clustering. Afﬁnity Propagation.
I.
INTRODUCTION
Long Term Path planning for an autonomous vehicle is
a complex task. Autonomous planning algorithms should be
efﬁcient and, most importantly, avoid trafﬁc collisions. The
efﬁciency of the algorithm is usually measured by the travel
time and/or travel distance [1] under dynamic real time trafﬁc
conditions on the road network. With the importance of re-
ducing greenhouse emission, being trafﬁc aware and choosing
less congested paths have become important objectives as well
[2]. The trafﬁc on the road adds some constrains in route
planning. Depending on the real time trafﬁc condition, the
shortest path may not be the fastest route, or the “greenest”
route (least congestion), or the safest route (collision-free).
While this paper does not consider the steps for an autonomous
vehicle after the initial long term path planning, such as short
term maneuvers and decision making, we argue that it is
important to generate more than one path at the path planning
stage to provide the decision making process with alternative
paths for different preferences of the sometimes conﬂicting
objectives. Therefore, we model our autonomous path planning
task as a multi-objective optimization problem [3]. The multi-
objective optimization problem is to solve the minimization
or maximization of N conﬂicting objective functions fi(x)
for i ∈ [1, N], simultaneously, subject to equality constraint
function gj(x) = 0 for j ∈ [1, M] and inequality constraint
function hk(x) ≤ 0 for l ∈ [1, K], where the decision
vectors x = (x1, x2, ...xn)T belongs to the nonempty feasible
region S ⊂ Rn [4] [5]. Solution x1 dominates x2 if two
conditions are satisﬁed: 1) ∀i ∈ [1, N]: fi(x1) ≤ fi(x2), and
2) ∃j ∈ [1, N]: fi(x1) < fi(x2). Solution x1 is also called
the non-dominated solution. The goal of the multi-objective
optimization problem can also be modeled as ﬁnding the
Pareto front that has the set of all non-dominated solutions.
Multi-objective optimization problems are often NP-hard [5].
Therefore, exact or deterministic algorithms are infeasible.
A road network can be modeled as a planar graph, where
the nodes represent road points, and edges represent road
segments. This graph may be considered as static or dynamic
(time-dependent), and as deterministic or stochastic with re-
spect to different aspects of the network. We consider our road
network as dynamic and stochastic taking into consideration
the effect of real-time trafﬁc that changes over time. Evolution-
ary algorithms, based on natural and biological systems, have
been adapted to solve dynamic optimization problems. Genetic
algorithms is one such common evolutionary algorithm. Evolu-
tionary meta-heuristics have applications in difﬁcult real-world
optimization problems that possess non-linearity, discreteness,
large data sizes, uncertainties in computation of objectives and
constraints, and so on [5] [6] .
We model the autonomous path planning problem as a
three-objective minimization problem: that is, minimization of
distance, time, and trafﬁc congestion, with collision avoidance
as the constraint. We consider one of the most applicable
evolutionary algorithms, Non-dominated Sorting Genetic Al-
gorithm II (NSGA-II) [7] in this paper. We further improve our
optimization algorithm using real time trafﬁc information on
the road. The road network exhibits both spatial and temporal
locality. Spatial because a congested road affects other roads
within its neighbourhood and temporal because the trafﬁc
spreads over a period of time. This creates a domino effect
on the road network. We propose an innovative technique
to solve the route planning problem on this trafﬁc network.
We propose to cluster road points based on trafﬁc conditions
and integrate the clusters with the multi-objective optimization
algorithm to reduce the domino effect of congestion. The paper
is organized as follows. Section II discusses the related work
in multi-objective path planning using NSGA-II and trafﬁc
clustering. Section III provides the formal problem statement,
objectives and assumptions. Section IV explains the workings
of our algorithm. Section V shows our experiment result
and analysis, including visualization of the pareto front and
alternative routes. Finally, Section VI concludes the paper with
a summary and thoughts for future work.
II.
RELATED WORK
Chitra and Subbaraj [8] use NSGA to minimize cost
and delay of the dynamic shortest path routing problem in
18
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

computer networks. The authors show that the pareto approach
generates more diverse pareto optimal solutions than the single
objective weighting factor method based on Genetic Algorithm
(GA). NSGA-II is an improvement of the NSGA algorithm
in terms of diversity preservation and speed. In [9], timeli-
ness reliability and travel expense are considered as the two
objectives in path planning on a stochastic time-dependent
transportation network. A route between an origin-destination
pair is encoded as a variable-length chromosome in the NSGA-
II to ﬁnd the pareto-optimal routes. A road network, consisting
of main streets in Beijing is considered as the case study. The
selection of the route from the resulting pareto-front is said
to be dependent to the travelers’ decision based on their risk-
sensitivity and cost-sensitivity.
Rauniyar et al. [10] formulate the pollution-routing prob-
lem with two objectives, minimization of fuel consumption
(CO2 emissions), and minimization of total distance to be
traversed by multiple vehicles. The authors incorporate a
new paradigm of evolutionary algorithm, called multi-factorial
optimization, into NSGA-II and show better performance and
faster convergence than the traditional NSGA-II framework.
In [11], we study 4-objective dynamic path planning using
NSGA-II based on real road network and real trafﬁc data from
Aarhus, Denmark. Our 4 objectives include Total vehicular
Emission Cost (TEC), travel time, number of turns, and dis-
tance. Our experiments produced a diverse set of solutions for
this problem and provided the user the ﬂexibility of selecting
a path based on their preferences of the four objectives.
However, this framework does not consider the collision avoid-
ance constraint. It also does not include clustering the trafﬁc
network ﬁrst before searching for the routes in the network.
We further notice that in the literature of multi-objective
path planning on dynamic and stochastic road networks, the
focus has been on the total cost of individual road segments
that are part of the paths. Few works have extended the con-
sideration of node-node relationship that exists naturally on a
dynamic road network, that is, the temporal and spatial domino
effects of trafﬁc congestion. One approach of understanding
this node-node relationship is through trafﬁc clustering. Wang
et al. [12] developed a distributed trafﬁc clustering system
based on afﬁnity propagation algorithm [13] using Internet of
Things (IoT) technologies and sensors around road points, that
dynamically collects and analyzes the trafﬁc ﬂow data using
concepts from network theory, in particular maximum ﬂow and
shortest path algorithms.
In this paper, we will ﬁrst improve the trafﬁc cluster-
ing in [12] with Speed Performance Index (SPI) [14] based
similarity instead of ﬂow based similarity. Then, we will
integrate the trafﬁc clustering into the multi-objective path
planning to improve the overall solution quality of the path
planning algorithm. To our best knowledge, there are few
works in improving the accuracy of multi-objective dynamic
path planning with clustering. In the literature, clustering has
been employed to reduce the complexity of multi-objective
problems. In [15], clustering of objectives is used to reduce the
dimension of the optimization problem. In [16], density based
clustering is used to classify regions into clusters to improve
the efﬁciency and reliability of coverage path planning method
for autonomous heterogeneous Unmanned Aerial Vehicles
(UAVs). The contributions of this paper are as follows:
1)
We improve the multi-objective dynamic path plan-
ning algorithm in [11] with a new objective for trafﬁc
congestion minimization and collision free constraint.
2)
We improve the trafﬁc clustering in [12] with SPI
[14] based similarity instead of ﬂow based similarity.
3)
We propose an innovative technique to integrate the
clusters with the multi-objective optimization algo-
rithm to improve route planning.
III.
OBJECTIVES
A road network is modeled as a directed graph G = (V, E),
where V is the set of nodes, and E is the set of edges. A link
from node vi ∈ V to node vj ∈ V is shown by eij ∈ E. A
loop-free path is represented as a linked list of nodes, with
the source node S as the head and the destination node T as
the tail of the linked list, with no node appearing more than
once. The constrained multi-objective path planning problem
is a minimization problem that ﬁnds a set of solutions with the
minimum travel time, minimum distance and minimum trafﬁc
congestion, with the constraint of avoiding collisions based on
real-time sensor data.
A. Objective 1: Distance
The distance of a path is calculated using (1)
f1(Distance) =
X
e
le, ∀e
(1)
where le is the length of edge e on a path. le is calculated
based on the static road network once a path is determined.
B. Objective 2: Time
The total time on a path is given by (2)
f2(Time) =
X
e
te∀e
(2)
where e is an edge on a path, and te is the total time the
vehicle travels on the edge. te is recorded by the simulator
based on real-time vehicle dynamics.
C. Objective 3: Inverse of Road Congestion Index
Road Segment Congestion Index is a measure introduced
by He et al. [14]. In [14], the SPI Rv is expressed in
(3), where v represents average vehicle speed in km/h, and
Vmax represents speed limit on the road segment in km/h. To
normalize SPI, speeding is not considered in this equation, and
Rv is in the range of [0, 100].
Rv =
(
min(v,Vmax)
Vmax
× 100
if vehicle count > 0
100
otherwise
(3)
The trafﬁc state level is considered
•
heavy congestion if Rv ∈ [0, 25]
•
mild congestion if Rv ∈ (25, 50]
•
smooth if Rv ∈ (50, 75]
•
very smooth if Rv ∈ (75, 100]
The Road Segment Congestion Index, Ri, is calculated in (4)
and (5), where Rv represents the average of SPI, RNC denotes
the proportion of non-congestion state, i.e., when the SPI is
in the range of (50, 100], tNC denotes the duration of non-
congestion state in minutes, and Tt denotes the length of the
observation period in minutes. The value of Ri is in the range
19
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

of [0, 1]. The smaller the value of Ri, the more congested a
road segment is.
Ri = Rv
100 × RNC
(4)
RNC = tNC
Tt
(5)
The road network congestion index, R is then expressed in
(6), where Li is the length of road segment in km. Similarity,
R ∈ [0, 1], and the smaller the value of R, the more congested
a road network is. For our minimization problem, we want to
ﬁnd the minimal values of R−1 for the least congested paths
using (7). Theoretically, it is possible for R to be 0, meaning
that every road segment on a path is congested. However, this
scenario rarely happens in reality. As shown in Figure 1, at the
rush hour of 7:30 a.m., only a few disconnected road segments
were color coded as red, representing high congestion status.
Even if a path has R as 0 and therefore inﬁnite value for R−1,
this path will be deemed a bad solution and abandoned by the
optimization algorithm.
R =
P
i
RiLi
P
i
Li
(6)
f3(R−1) =
P
e
Le
P
e
ReLe
∀e
(7)
D. Constraints
The minimization optimization of the three objectives is
subject to the following constraints:
e ∈ G, ∀e ∈ P
(8)
count(v) = 1, ∀v ∈ P
(9)
g(e) =
X
e
CollisionCounte = 0, ∀e ∈ P
(10)
where the ﬁrst constraint (8) ensures that a path P is valid,
that is, all its edges belong to the road network G, the second
constraint (9) ensures that a path P is loop free by making sure
any node in P appears exactly once, and the third constraint
(10) ensures that the collision count on the entire path is zero.
IV.
SOLUTION METHODOLOGY
A. Afﬁnity Propagation Clustering
Clustering is a preprocessing step for the multi-objective
path ﬁnding. Our clustering algorithm is based on the dis-
tributed, message-passing Afﬁnity Propagation clustering pro-
posed by [12]. We further improve the clustering algorithm
with SPI based similarity instead of ﬂow based similarity.
First, we generate a node based SPI using algorithm 1.
Then we calculate pairwise similarity based on SPI at nodes
using algorithm 2. The similarity is based on the assumption
that if the target node j is congested, then the similarity
between source node i and j is related to the most congested
node on the shortest path from i to j. In addition, the closer i
and j are spatially, the more likely they are similar.
Once the similarity is deﬁned, the Afﬁnity Propagation
clustering algorithm works as follows. First, a node i considers
Algorithm 1 Node Speed Performance Index
Require: road graph G, node i, time step t, SPI Matrix S
Ensure: SPIi
1: ine = G.in edges(i)
2: oute = G.out edges(i)
3: ineSPI, outeSPI = 0
4: for i, j, d in ine do
5:
ineSPI = ineSPI + S[i, j][t]
6: end for
7: for i, j, d in oute do
8:
outeSPI = outSPI + S[i, j][t]
9: end for
10: SPIi = average( ineSP I
len(ine), outeSP I
len(oute))
Algorithm 2 Pairwise SPI Similarity
Require: road graph
G,
origin
i,
target
j,
time step
t,
SPI Matrix S
Ensure: Sim(i, j)
1: Calculate SPIj
2: p = G.ShortestPath(i, j)
3: minSPI is the smallest SPI on p
{Distance in km}
4: dist = len(p)
5: Sim(i, j) =
minSP I
SP Ij∗max(dist,1)
itself as a cluster k, then it calculates two local variables
responsibility r(i, k) using (11), and availability a(i, k) using
(12) based on a, r values from other nodes of its commu-
nication range, as well as pair-wise similarity s it calculates
based on the trafﬁc information received from the other nodes.
To compute responsibility r(i, k), the algorithm ﬁnds another
data point k
′ that has the highest (maximum) availability and
similarity, and computes the difference in the similarity. In
addition, responsibility r(i, k) represents how well k is the
center of i, so it does not only consider how similar i and k are,
but also considers which one of i and k is more suitable be the
center. Self responsibility r(k, k) could be negative or positive.
If it is negative, it implies that the node is more likely to be
a member of some cluster rather than the center of a cluster.
Finally, node i belongs to the center k that gives maximum
a(i, k) + r(i, k). The message passing Afﬁnity Propagation
clustering algorithm has no central control, does not require
the number of clusters to be given, and runs dynamically unless
terminated deliberately.
r(i, k) = s(i, k) − max
k′̸=k(a(i, k′) + s(i, k′))
(11)
a(i, k) =





min(0, r(k, k)) − P
i′̸=i,k
max(0, r(i′, k))
if i ̸= k
P
i′̸=i,k
max(0, r(i′, k)
if i = k
(12)
B. Multi-objective Path Finding
Once we have cluster ids of each node at time step t, the
NSGA-II multi-objective path ﬁnding process in (4) [11] is
executed.
20
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

Algorithm 3 Message Passing Afﬁnity Propagation Trafﬁc
Clustering at Node i
Require: road graph G, time step t
Ensure: cluster id k
1: Initialize availability ai = [0]
2: while not terminated do
3:
Compute pair-wise similarity s
4:
Collect a from adjacent nodes
5:
Calculate ri
6:
Broadcast ri
7:
Receive r from adjacent nodes
8:
Calculate ai
9:
Broadcast ai
10:
Compute local cluster id k at time t
11: end while
Algorithm 4 NSGAII for Trafﬁc Aware Many-Objective Dy-
namic Route Planning
Require: road
graph
G,
start
node
s,
end
node
t,
initPopulationSize,
generations,
crossoverPoints,
tournamentSize, mutationProb
Ensure: paretoFront
{Initialization}
1: population = randomLoopFreePath
(s, t, initPopulationSize)
{Main loop}
2: for generation ← 1, generations do
3:
population
=
breedPopulation(population,
crossoverPoints, tournamentSize, mutationProb)
4:
scores = scorePopulation(population)
5:
population
=
buildParetoPopulation(population,
scores)
6: end for
{Final Pareto Front}
7: scores = scorePopulation(population)
8: paretoFront = identifyPareto(population,scores)
1) Collision Avoidance: The constraint of collision avoid-
ance is added to the solution selection process of the main
algorithm. Solution x1 constrained-dominate x2 in the follow-
ing three situations [5]:
•
solution x1 is feasible and x2 is not.
•
x1 and x2 are both infeasible, but x1 has a smaller
constraint violation.
•
x1 and x2 are both feasible and solution x1 dominates
solution x2 in the usual sense.
This relaxed selection process allows infeasible but less
constrained parents to be included in the breed process, and
allows for better diversity in the end. At the selection of the
ﬁnal pareto front, all the infeasible solutions are removed from
the solution set.
2) Clustering Incorporation: In order to incorporate the
clustering result into the process, we make an important
assumption: if start node i and j of a directed edge e = i− > j
are in the same trafﬁc cluster at time t, then all the incoming
edges of i are affected by e in terms of trafﬁc, because the
trafﬁc ﬂows in this order: the incoming edges of i− > i− > j.
Based on this assumption, we take the average of all SPI values
of the incoming edges of i and e, and assign the average value
back to these edges. This process is described in the following
algorithm 5.
Algorithm 5 Cluster Average SPI
Require: road graph G, begin node i, end node j, time step t,
SPI matrix S, Cluster matrix C
Ensure: Cluster Average SPI matrix S’
1: if C[i][t] == C[j][t] then
2:
ine = G.in edges(i)
3:
eid = G.edges.index((i,j))
4:
sumSPI = S[eid][t]
5:
for a, b, d in ine do
6:
eid = G.edges.index((a,b))
7:
sumSPI += S[eid][t]
8:
end for
9:
avgSPI =
sumSP I
(1+len(ine))
10:
for a, b, d in ine do
11:
eid = G.edges.index((a,b))
12:
S[eid][t] = avgSPI
13:
end for
14: end if
V.
EVALUATION AND ANALYSIS OF RESULTS
A. Road Network and Trafﬁc Data
The road network of Aarhus, Denmark [17] is represented
as a graph composed of 136 nodes and 443 edges. In addition
to the topology, the metadata also includes the latitude and
longitude of the nodes, the street name of a node, and the
speed limit and length of an edge. The trafﬁc data includes
sensor data recorded on each edge from February to June 2014,
such as vehicle counts and average speed. The sensor data is
collected every ﬁve minutes. Because there is no collision data
available at the data set, we simulated random collision points
using the roulette wheel selection, that is, if a random number
is smaller than the probability calculated using a small constant
p and the road segment congestion index Re, then there is a
collision on the road. In this paper, p = 5. Since Re ∈ [0, 1],
the selection probability is in the range of [5%, 10%]. The
more congested a road segment is, the more likely there is a
collision. In the future work, we will simulate the trafﬁc ﬂow
and collision in the road network simulator SUMO (Simulation
of Urban MObility) [18].
B. Implementation and Parameters
The code of the paper is written in Python 3, with refer-
ences to code snippets from [19]–[21].The experiments are run
on a MacBook Pro with 2.3 GHz Intel Core i5 and 8 GB 2133
MHz LPDDR3.
For our experiments, we consider multi-objective dynamic
path planning from startNode 4320 (city of Hinnerup) to
endNode 4551 (city of Hasselager). We determine experimen-
tally the parameters for NSGA-II as initPopulationSize =
100,
generations
=
100,
crossoverPoints
=
5,
tournamentSize = 2, mutationProb = 0.8. For trafﬁc
data, we treat the beginning timestamp 2014-03-01T07:30:00
as timeIdx = 0.
C. Improvement of Trafﬁc Clustering using SPI Based Simi-
larity
We evaluate the cluster quality using the same metrics used
by [12], including Silhouette coefﬁcient [22] and the mean
21
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

TABLE I. RESULT COMPARISON OF FLOW BASED AND SPI BASED
AFFINITY PROPAGATION CLUSTERING
Time
Stamp
Flow Based Clustering
SPI Based Clustering
Number
of Clus-
ters
Silhouette
coefﬁ-
cient
Mean
Simi-
larity
Number
of Clus-
ters
Silhouette
coefﬁ-
cient
Mean
Simi-
larity
2014-03-01
T07:30:00
0
0
0.041
25
0.481
0.710
2014-03-01
T07:35:00
26
0.207
0.313
25
0.480
0.713
2014-03-01
T07:40:00
21
0.174
0.266
25
0.480
0.712
2014-03-01
T07:45:00
22
0.206
0.296
25
0.475
0.710
Figure 1. Trafﬁc Clustering of the road network of Aarhus, Denmark
similarity within all clusters. Silhouette coefﬁcient evaluates
item similarities of inter and intra clusters. Mean similarity
is the average of all pairs of intra-cluster similarity. For both
metrics, higher values indicate higher cluster quality. As shown
in table I, the use of SPI based similarity is very effective in
improving the clustering of the road points. In these four time
stamps, SPI based clustering creates much higher values of
Silhouette coefﬁcient and mean similarity consistently. Figure
1 is a visualization of the road map of Aarhus, Denmark at
7:30 a.m. on 2014-03-01, where the nodes are marked and
color coded with their cluster ids, and the edges are color
coded with road segment congestion index Ri. The color red
means heavy congestion with Ri = 0, and green means very
smooth with Ri = 1. The visualization shows that adjacently
connected road points usually belong to the same cluster, and
these road segments have similar trafﬁc conditions. This is
because the SPI based similarity considers both congestion
conditions and spatial adjacency between two road points.
D. Improvement of Multi-objective Path Planning with Clus-
tering
For the multi-objective path planning, we compare our
NSGA-II with clustering with the same algorithm without in-
corporation of clustering. Table II shows the comparison of A*
[23] shortest path, NSGA-II and NSGA-II with clustering in
terms of the three objectives, one constraint, and an additional
metric called total vehicular emission cost (TEC) [24]. This
metric is used in our previous paper [11] as one objective of
monetized value for vehicular emission. For the convenience of
comparison, we take average of each object for all the pareto
TABLE II. RESULT COMPARISON OF A*, NSGA-II, AND NSGA-II
WITH CLUSTERING
Path
Finding
Algorithm
Number
of
Solutions
Objectives
Constraint Other
Metric
Average
Dis-
tance
(KM)
Average
Time
(Min-
utes)
Average
R
Inverse
Average
Colli-
sion
Average
TEC
A*
1
22.825
33.031
1.201
1
0.069
NSGA-II
100
29.769
57.828
1.132
0
0.075
NSGA-
II
with
Cluster-
ing
100
31.072
45.457
1.089
0
0.068
Figure 2. MOO with Clustering Pareto Front Visualization
front solutions in three independent executions of the pro-
grams. The single objective A* path has the shortest distance,
but it does not guarantee collision free. It also has higher than
average R−1 compared to the multi-objective approaches. In
comparison, the multi-objective approaches produce a diverse
variety of solutions for the decision making process to choose
from. Between the two multi-objective approaches, we observe
that although the clustering based approach generates longer
paths in average, the travel time and congestion are both more
optimized than the other approach. The lower average value of
TEC also indicates that these solutions are more trafﬁc smart.
Figure 2 is the parallel coordinate visualizations of pareto
front.
Finally, Figure 3 shows three alternative paths found by the
clustering based approach: the path with minimum distance
(blue nodes), the one with minimum time (yellow nodes), the
one with least congestion (green nodes). For comparison, A*
shortest path is also highlighted (red nodes). This visualization
has a limitation that a node belonging to multiple paths only
carries the color of one path following the coloring sequence
mentioned in the previous sentences. For example, if a node
is on both the MOO path of least congestion and the A*
path, it is colored as red. Despite of this limitation, this ﬁgure
shows different possibilities of path planning depending on the
preference of the decision making system.
VI.
CONCLUSION AND FUTURE WORK
In this paper, we model the autonomous path planning
problem as a three-objective minimization problem with the
constraint of collision free. We show that our NSGA-II based
framework ﬁnds a diverse set of alternative solutions for
the decision making system to choose from based on the
22
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

Figure 3. MOO with Clustering Path Examples Visualization
preference of the three objectives: distance, time, and trafﬁc
congestion, instead of one single solution from the A* shortest
path algorithm. We propose a novel approach to integrate
SPI based road point clustering into the multi-objective op-
timization considering the domino effect of congestion. Our
experiment shows that NSGA-II with clustering produces more
congestion smart solutions than NSGA-II without clustering.
As a future work, we would like to extend our work in
three directions:
1)
Explore
other
multi-objective
evolutionary
algo-
rithms, such as multi-objective Ant Colony Optimiza-
tion (ACO) [25] and MultiObjective Evolutionary
Algorithm based on Decomposition (MOEA/D) [26].
2)
Explore trafﬁc prediction techniques such as the
emerging Graph Neural Networks [27].
3)
Simulate the trafﬁc ﬂow and collision in the road
network simulator SUMO (Simulation of Urban MO-
bility).
REFERENCES
[1]
S. Aggarwal and N. Kumar, “Path planning techniques for unmanned
aerial vehicles: A review, solutions, and challenges,” Computer Com-
munications, vol. 149, 2020, pp. 270–299.
[2]
V. Roberge and M. Tarbouchi, “Fast path planning for unmanned aerial
vehicle using embedded gpu system,” in 2017 14th International Multi-
Conference on Systems, Signals & Devices (SSD).
IEEE, 2017, pp.
145–150.
[3]
H. W. Kuhn and A. W. Tucker, “Nonlinear programming,” in Traces and
emergence of nonlinear programming.
Springer, 2014, pp. 247–258.
[4]
M. Abido, “A novel multiobjective evolutionary algorithm for envi-
ronmental/economic power dispatch,” Electric power systems research,
vol. 65, no. 1, 2003, pp. 71–81.
[5]
J. Branke, J. Branke, K. Deb, K. Miettinen, and R. Slowi´nski, Multiob-
jective optimization: Interactive and evolutionary approaches. Springer
Science & Business Media, 2008, vol. 5252.
[6]
J. Del Ser, E. Osaba, J. J. Sanchez-Medina, and I. Fister, “Bioin-
spired computational intelligence and transportation systems: a long
road ahead,” IEEE Transactions on Intelligent Transportation Systems,
vol. 21, no. 2, 2019, pp. 466–495.
[7]
K. Deb, A. Pratap, S. Agarwal, and T. Meyarivan, “A fast and elitist
multiobjective genetic algorithm: NSGA-II,” IEEE transactions on evo-
lutionary computation, vol. 6, no. 2, 2002, pp. 182–197.
[8]
C. Chitra and P. Subbaraj, “A nondominated sorting genetic algorithm
for shortest path routing problem,” International journal of computer
engineering, vol. 5, no. 1, 2010, pp. 55–63.
[9]
Y. Li and L. Guo, “Multi-objective optimal path ﬁnding in stochastic
time-dependent transportation networks considering timeliness relia-
bility and travel expense,” in 2016 Prognostics and System Health
Management Conference (PHM-Chengdu).
IEEE, 2016, pp. 1–6.
[10]
A. Rauniyar, R. Nath, and P. K. Muhuri, “Multi-factorial evolutionary
algorithm based novel solution approach for multi-objective pollution-
routing problem,” Computers & Industrial Engineering, vol. 130, 2019,
pp. 757–771.
[11]
Y. Y. Liu, F. Enayatollahi, and P. Thulasiraman, “Trafﬁc aware many-
objective dynamic route planning,” in 2019 IEEE Symposium Series on
Computational Intelligence (SSCI).
IEEE, 2019, pp. 1241–1248.
[12]
Z. Wang, P. Thulasiraman, and R. Thulasiram, “A dynamic trafﬁc
awareness system for urban driving,” in 2019 International Conference
on Internet of Things (iThings) and IEEE Green Computing and
Communications (GreenCom) and IEEE Cyber, Physical and Social
Computing (CPSCom) and IEEE Smart Data (SmartData). IEEE, 2019,
pp. 945–952.
[13]
B. J. Frey and D. Dueck, “Clustering by passing messages between data
points,” science, vol. 315, no. 5814, 2007, pp. 972–976.
[14]
F. He, X. Yan, Y. Liu, and L. Ma, “A trafﬁc congestion assessment
method for urban road networks based on speed performance index,”
Procedia engineering, vol. 137, 2016, pp. 425–433.
[15]
X. Guo, Y. Wang, and X. Wang, “Using objective clustering for
solving many-objective optimization problems,” Mathematical Problems
in Engineering, vol. 2013, 2013.
[16]
J. Chen, C. Du, Y. Zhang, P. Han, and W. Wei, “A clustering-based
coverage path planning method for autonomous heterogeneous uavs,”
IEEE Transactions on Intelligent Transportation Systems, 2021, pp. 1–
11.
[17]
“Road trafﬁc data of Aarhus, Denmark,” http://iot.ee.surrey.ac.uk:8080/
datasets.html, accessed: 2021-04-20.
[18]
P. A. Lopez, M. Behrisch, L. Bieker-Walz, J. Erdmann, Y.-P. Fl¨otter¨od,
R. Hilbrich, L. L¨ucken, J. Rummel, P. Wagner, and E. WieBner, “Mi-
croscopic trafﬁc simulation using SUMO,” in 2018 21st International
Conference on Intelligent Transportation Systems (ITSC). IEEE, 2018,
pp. 2575–2582.
[19]
“Python
for
healthcare
modelling
and
data
sci-
ence,”
https://pythonhealthcare.org/2019/01/17/
117-genetic-algorithms-2-a-multiple-objective-genetic-algorithm-nsga-ii/,
accessed: 2021-04-20.
[20]
“Platypus - multiobjective optimization in python,” https://platypus.
readthedocs.io/en/latest/, accessed: 2021-04-20.
[21]
“scikit-learn - machine learning in python,” https://scikit-learn.org/
stable/, accessed: 2021-04-20.
[22]
P. J. Rousseeuw, “Silhouettes: a graphical aid to the interpretation and
validation of cluster analysis,” Journal of computational and applied
mathematics, vol. 20, 1987, pp. 53–65.
[23]
P. E. Hart, N. J. Nilsson, and B. Raphael, “A formal basis for the
heuristic determination of minimum cost paths,” IEEE transactions on
Systems Science and Cybernetics, vol. 4, no. 2, 1968, pp. 100–107.
[24]
Y. Wang and W. Y. Szeto, “Multiobjective environmentally sustainable
road network design using pareto optimization,” Computer-Aided Civil
and Infrastructure Engineering, vol. 32, no. 11, 2017, pp. 964–987.
[25]
L. Ke, Q. Zhang, and R. Battiti, “Moea/d-aco: A multiobjective evolu-
tionary algorithm using decomposition and antcolony,” IEEE transac-
tions on cybernetics, vol. 43, no. 6, 2013, pp. 1845–1859.
[26]
Q. Zhang and H. Li, “Moea/d: A multiobjective evolutionary algorithm
based on decomposition,” IEEE Transactions on evolutionary computa-
tion, vol. 11, no. 6, 2007, pp. 712–731.
[27]
Z. Cui, K. Henrickson, R. Ke, and Y. Wang, “Trafﬁc graph convolutional
recurrent neural network: A deep learning framework for network-
scale trafﬁc learning and forecasting,” IEEE Transactions on Intelligent
Transportation Systems, vol. 21, no. 11, 2019, pp. 4883–4894.
23
Copyright (c) IARIA, 2021.     ISBN:  978-1-61208-880-8
INTERNET 2021 : The Thirteenth International Conference on Evolving Internet

