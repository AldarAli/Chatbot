Design and Implementation of Edge Detection and Contrast Enhancement 
Algorithms Using Pulse-Domain Techniques 
 
Fatemeh Taherian† 
    
Davud Asemani‡             
  Elham Kermani‡ 
 
 
 
Abstract—Image pulse sensors provide pixels information with 
a series of pulse train considering Pulse Frequency Modulation 
(PFM). PFM sensors are often used in vision chips considering 
related advantages. In this paper, edge detection and contrast 
enhancement algorithms are analyzed and simulated using 
pulse domain techniques of suppression and promotion. 
Comparing 
with 
classical 
methods, 
pulse-domain-based 
algorithms show a better performance as well as simpler 
implementation in circuit level. Designing and implementing 
the pulse-domain algorithms on FPGA, a simple and fast 
realization of image processing methods for edge detection and 
contrast enhancement is presented. The integration of 
proposed design in cameras is discussed and evaluated in terms 
of circuit complexity as well as computational load.  
 
Keywords- pulse frequency modulation (PFM); suppression; 
promotion; digital image processing. 
I. INTRODUCTION 
The demand of solid-state image sensors has grown up 
largely due to the increasing requests for digital still and 
video cameras. Charge-Coupled Devices (CCD) were earlier 
dominant in the image sensor market. However, recent 
progresses in the design of CMOS technologies have led to 
appearing CMOS sensors in most imaging products [1]. 
Acquired pictures of image sensors often encounter quality 
limitations because of noise, low contrast and blurring 
effects. Accordingly, image processors are generally used to 
improve the related image quality after the image sensors. In 
traditional systems, two chips were allocated for separately 
receiving and processing the images [2]. This method 
includes drawbacks such as large chip area, higher costs, 
higher consumption power and more complexity. In vision 
chips, this idea has been realized in an integrated way so that 
necessary 
processors 
are 
implemented 
along 
with 
photosensors to achieve better performance as well as more 
compact system. The idea of integrating preprocessing and 
sensor circuits at pixel level before transmitting image pixels 
has resulted in smart vision sensors and being advantageous 
over traditional image sensors [2]. A substantial reduction in 
noise and interferences is obtained as well as one of two 
chips is realized in the sensor level [3].  
 With the progress in VLSI technology, digital processing 
techniques have substituted analog one at the sensor level to 
improve performance though more transistors are utilized. 
One of best candidates for image processing at pixel level is 
pulse domain techniques where the photodiode’s output 
signal is converted to a pulse train considering modulation 
techniques such as Pulse Frequency Modulation (PFM) [4]. 
In this paper, the focus is concentrated on basic image 
processing namely preprocessing techniques in pulse domain 
considering PFM. PFM photosensor represents the pixel 
value by the frequency of a series of digital pulses. Pulse 
modulation exhibit advantages in the image processing 
applications because of lower power consumption, higher 
speed and ability to integrate image pre-processing functions 
at sensor level. Besides, it may be automatically designed 
and implemented using Electronic Design Automation 
(EDA) tools. In this paper, image processing techniques 
including edge detection and contrast enhancement 
algorithms are designed and simulated in pulse domain as 
well as implemented on FPGA level. The organization of the 
paper is as following. Section II provides a review on the 
classic algorithms of image processing. Section III describes 
the principles of processing methods in pulse domain. In 
Section IV, image processing techniques are simulated in 
pulse domain and compared to classic ones. The results of 
circuit simulation and implementation are presented in 
Section V. Finally, Section VI includes the conclusion. 
II. CONVENTIONAL APPROACHES 
Edge detection and contrast enhancement represent the 
fundamental operations for improving image quality. In this 
section, a brief review of main conventional algorithms is 
described in this regard.  
A. Edge detection 
Edge enhancement and Edge detection are important 
methods in image processing. Also, these are basic 
operations at higher-level visual processing such as image 
segmentation, recognition and image compression [5]. 
Changes in some physical properties, such as intensity of 
illumination, color and reflectance appear as edges in the 
scene. Various algorithms have been so far proposed for 
edge enhancement such as Gradient operators (Robert [6], 
Sobel [7]) using maximum and minimum of first derivative. 
Gradient methods are more appropriate when the variation of 
luminance intensity is large in presence of a low noise [8]. 
Laplacian operator is another approach for edge detection. 
However, it exhibits a large sensitivity to noise and is unable 
to detect the orientation of edges. LOG operator is used as 
another candidate particularly when image is blurring or 
image noise is large. It is a combination of Gaussian low-
† Dep. Of Electronic Eng., Islamic Azad  
University, Tehran Central Branch,  
Tehran, Iran, F.taherian@iauctb.ac.ir 
‡ Electrical Eng. Faculty, K.N. Toosi Univ. of 
Technology, Tehran, Iran 
Asemani@eetd.kntu.ac.ir,   Kermani@ee.kntu.ac.ir 
495
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

pass filter and Laplacian operator. As another possibility, 
Canny [9] employs Gaussian smoothing to decrease noise 
and the Gaussian first derivative to detect edges. It 
nevertheless takes longer computation time and is naturally 
more complicated. However, the characteristics of human 
vision system have not been considered in these approaches. 
Marr and Hildreth [10] proposed another way based on the 
visual human performance using mathematical models. An 
improvement of this manner was developed by Peli [11] in 
which some filtering channels are used for edge 
enhancement stage and the threshold is the contrast 
sensitivity of human eye, and then, outputs of various 
frequency bands (spatial scales)  are combined for producing 
the final edge detection. Another method for edge detection 
is the Logical/Linear operators [12] which combines linear 
operator’s theory and Boolean algebra. Also, new algorithms 
such as fuzzy theory [13], natural network [14], mathematic 
morphologic theory [15], wavelet transformation [16] and 
rough sets [17] have been utilized for edge detection. They 
are often much more complex. 
B. Contrast enhancement 
One of the main parameters for measuring the quality of 
image is contrast. The contrast of image stands for a dynamic 
range representing the ratio of the brightest to the darkest 
pixel intensities [18] as follows: 
 
                 𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶 = 
𝐼𝐼𝑚𝑚𝐶𝐶𝑚𝑚 −𝐼𝐼𝑚𝑚𝑚𝑚𝐶𝐶
𝐼𝐼𝑚𝑚𝐶𝐶𝑚𝑚 +𝐼𝐼𝑚𝑚𝑚𝑚𝐶𝐶
                                          (1)    
That Imax  and Imin  represent the highest and lowest 
intensity of illumination in image respectively. Contrast 
enhancement procedures leads to an improvement in visual 
quality for low contrast images. Contrast level is often 
studied using histograms. The histogram of a digital image 
with gray levels shows the distribution of pixel intensities 
[18]. For example, histogram of an image with the pixel 
intensities in the range [0, L − 1] is a discrete function 
h(rk) = nk  that rk is kth gray level and nk represents the 
number of image pixels having a gray level of rk. A 
normalized histogram is defined as: 
          𝐴𝐴(𝐶𝐶𝑘𝑘) =
𝐶𝐶𝑘𝑘
𝐶𝐶             𝑘𝑘 = 0,1,2, … , 𝐿𝐿 − 1                       (2) 
Contrast enhancement methods include histogram 
processing methods such as histogram equalization and 
contrast stretching algorithms such as Negative Transform, 
Log Transform, gamma correction and gray slicing [5]. The 
Histogram Equalization (HE) distributes uniformly the pixels 
over global range of gray levels with a predefined 
transformation function  s = T(rk). HE method nevertheless 
suffers from contrast over-enhancement in bright sections.  
III. PULSE DOMAIN IMAGE PROCESSING 
In pulse-domain, the output signal of photodiode is 
converted to a pulse train using a pulse frequency 
modulation (PFM) scheme. In this case, the luminance of 
pixels is represented by the frequency of related output pulse  
-
+ 
Delay 
element
Comparator
P_out
Reset 
transistor
Vdd
Vref
Photo 
diode
Light 
intensity
t
 
Input light intensity
Output pulses
t
PFM 
photosensor 
circuit
 
 
               Figure 1. Architecture of PFM photosensor 
 
stream. PFM sensor includes a self-reset feedback loop that 
consists of a photodiode (PD), a reset transistor and an A/D 
converter’s circuit to obtain the pulse train (Figure 1) [19].    
      Various techniques of image processing such as edge 
enhancement, edge detection and contrast enhancement may 
be simply realized in pulse domain using only two 
preliminary operations of suppression and promotion. These 
basic operations deal with the desired pixel as well as 
neighboring pixels. In suppression mode, a pulse in the pixel 
of interest is omitted if it occurs simultaneously with a pulse 
of neighboring pixel (Figure 2(a)). This cancellation 
procedure results in a decrease in the intensity of pixel of 
interest. In second mode, a pulse is inserted in the pulse 
stream of desired pixel considering promotion method 
(Figure 2(b)). Promotion algorithm leads to a larger 
brightness of image since the average number of output 
pulses increases. To formulate suppression and promotion 
algorithms, output pulse train  IP_OUT  may be obtained as 
follows if assuming that the pixel of interest and neighboring 
ones are associated with the pulse trains being in phase [19]: 
 
𝐼𝐼𝐼𝐼_𝑂𝑂𝑂𝑂𝑂𝑂 = ൜𝐼𝐼_𝑂𝑂𝑂𝑂𝑂𝑂. 𝐼𝐼_𝑁𝑁𝑁𝑁𝑁𝑁
തതതതതതതതത  (𝐶𝐶𝑠𝑠𝑠𝑠𝑠𝑠𝐶𝐶𝑠𝑠𝐶𝐶𝐶𝐶𝑚𝑚𝐶𝐶𝐶𝐶)
𝐼𝐼_𝑂𝑂𝑂𝑂𝑂𝑂 + 𝐼𝐼_𝑁𝑁𝑁𝑁𝑁𝑁 (𝑠𝑠𝐶𝐶𝐶𝐶𝑚𝑚𝐶𝐶𝐶𝐶𝑚𝑚𝐶𝐶𝐶𝐶)
                (3)     
Where P_OUT, P_NBR  and IP_OUT  stand for pixel of 
interest, neighboring pixel and the output pulses of pixel of  
 
P_nbr
P_out
Cancelled
Suppression of pulse generation
Cancelled
Cancelled
Decreased average frequency
(a)
P_nbr
P_out
Promotion of pulse generation
Ip_out
Ip_out
t
t
Increased average frequency
(b)
Increased
Increased
 
        Figure 2. Processing operations in pulse domain: 
          (a) suppression and, (b) promotion algorithms. 
496
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

 
 
 
 
                                                                                                                                                                    
       Original image                    Robert                        Laplacian    
 
 
 
 
 
 
  
        Log                             Canny                     Pulse Method 
Figure 3. Results of edge detection  methods compared  to the result of  
pulse domain technique (right-bottom one). 
interest respectively. According to (3), it may be easily 
shown that suppression operation leads to an edge 
enhancement and detection (compare with gradient), and 
pulse promotion operation is associated with a contrast 
enhancement algorithm.  
 
IV. SIMULATION AND COMPARISON 
       In this section, image processing algorithms using 
suppression and promotion operations are simulated with 
Matlab and the results are compared with the ones due to 
conventional algorithms. For this purpose, each image pixel 
has been represented by a train of 256 pulses as the output of 
PFM photosensor. Then, the basic pulse operators 
(suppression and promotion) are applied considering four 
neighboring pixels. Two codes have been designed as well to 
simulate PFM modulation and demodulations having applied  
 
 
 
  
 
 
 
 
 
         Original image                               Histogram of original image 
 
 
 
 
 
 
 
                                                  
                                               
Histogram equalization (HE)                       Histogram of HE          
     
 
 
           
 
 
 
 
 
     Pulse method                             Histogram of Pulse method 
 
Figure 4. Contrast enhancement: original image (top) vs. the result of HE 
algorithm (middle) and result of pulse domain technique (promotion).  
  TABLE I. Comparison of Pulse Method with Conventional Algorithms 
 
Parameter 
Conventional Methods 
Pulse Method 
Data Processing   
Format 
Byte 
Bit 
Hardware 
Adder & multiplier 
Bit logic circuits 
Complexity 
High 
Low 
Consumption Power 
High 
Low 
Computation Manner 
Batch 
Real- time 
Circuit Cost 
High 
Low 
Speed 
Low 
High 
 
 before and after pulse processing techniques respectively. 
Then, both input and output of simulations are imagined as 
image data files. In the suppression algorithm, the pulse of 
the pixel of interest disappears when any of neighboring 
pixels send at the same time a pulse. In the promotion 
algorithm, both pulses of the pixel of interest and the 
neighboring one are considered in the output separately. 
Simulations show that pulse domain techniques lead to a 
better quality of edge detection and contrast enhancement 
than conventional methods. For example, one can find some 
edge layers at the output of pulse domain technique that have 
not been detected through conventional algorithms. Figure 3 
shows the results for edge detection algorithms of Robert, 
Laplacian, Log and Canny compared to the pulse domain 
result. Besides, it is possible to control the accuracy, 
orientation and intensity of detected images in pulse domain 
technique using different neighbor pixel groups. Comparing 
computation loads, pulse domain technique exhibits faster 
performance since Laplacian and gradient algorithms are 
associated with larger computations. For example, a sample 
simulation time for canny and pulse domain edge detection 
methods are 0.25s and 0.013s respectively. In Figure 4, the 
results of contrast enhancement operation using HE 
algorithm and pulse domain method (promotion) have been 
shown. The results may be compared using histograms 
presented in Figure 4 as well. From computational point of 
view, pulse domain technique shows again a substantial 
improvement. HE method of contrast enhancement employs 
a transfer function applying to image that is associated with a 
large load of computations. Conventional methods such as 
HE algorithm use a nonlinear function which increases 
complexity in contrast to pulse domain technique realized by 
simple logic operations. Accordingly, pulse domain 
technique provides an algorithm being faster and simpler for 
contrast enhancement. The comparison of performances has 
been summarized in Table 1 for pulse domain and 
conventional methods. 
 
V. SIMULATION AND IMPLEMENTATION ON FPGA LEVEL 
Image processing techniques may be realized at the 
sensor level by considering two methodologies: inter-pixel 
[4] and intra-pixel [20] methods. Intra-pixel methods are 
generally used for improving sensor performance. On the 
other hand, Inter-pixel implementation leads to realization of 
programmable pixel sensors. For example, an inter-pixel 
realization of pulse domain techniques at sensor level has  
497
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

Vj+1
Vj
Vj+2
Vj+3
Vdd
Vdd
Vout
Vi
INV
ST
PD
VPD
M1
To j+1-pix
To j-pix
To j+2-pix
To j+3-pix
M2
M3
M4
M5
 
 
Figure 5. Inter-pixel realization of promotion method at analog sensor level  
 
been shown in Figure 5. It is associated with pulse promotion 
operation with four neighboring pixels [4]. According to 
Figure 5, it has been implemented at analog circuit level 
(sensors). In this paper, image processing algorithms are 
implemented using an inter-pixel scheme using only digital 
circuits (not analog sensor level). PFM sensors have been 
employed for this purpose. A block of 7×7 pixels has been 
selected as basic block for implementation on FPGA. ISE 
software from Xilinx has been used along with XST and ISM 
as integrated synthesis and simulation tools.  Considering 
PFM scheme, a digital basic circuit has been implemented 
per each pixel. Figure 6 shows the block diagram of related 
circuit designed for each pixel. In this general configuration, 
P_nbr represents the output of digital processing on four (up, 
down, left and, right) neighboring pixel pulses. This 
architecture realizes both suppression and promotion 
algorithms depending on control signal of SC. The pixel of 
interest is represented by p_out and Ip_out signals before and 
after processing respectively. P2nbr signal is used for next 
pixels processing as the neighboring pixel. In processing 
circuits, p_out and p_nbr signals are then utilized. At final 
stage, a digital circuit has been designed to provide the 
output in bit format. The output pulses of image processor 
unit are converted to n bits. Considering M clock cycles 
applied in any n-bit pixel cycle, the maximum rate of input 
pulses is supposed being equal to the clock frequency fCLK. In 
this paper, it has been supposed that M = 2n. Signal rate at 
each signal wire of pulse train (P_out) and output pixel 
samples (Q) would be fCLK and fCLK/M. The output of pixel is 
read out as an n-bit parallel digital signal. The results of 
timing simulation for one pixel have been demonstrated in 
Figure 7. In this simulation, it is supposed that n=5 for better 
illustrating timing diagrams. S and P signals are the outputs 
of image processing block for suppression and promotion 
respectively. Meanwhile, the outputs of pulse-to-bit 
converter block are represented by Q1 and Q2 for 
suppression and promotion respectively. Figure 8 illustrates  
 
PFM 
photosensor
Image 
processor
Pulse to bit 
converter
.
.
.
Q0
Q1
Q7
Ip_out
P_out
P_nbr
nbr_s
4-bit
P_u
P_d
P_l
P_r
clk
p2nbr
 
Figure 6. Block diagram of digital circuit per pixel.  
 
     Figure 7.The results of timing simulation for one pixel 
 
the schematic at Register Transfer Level (RTL) for the image 
processing part of this circuit with n=8. The design summary 
for image processing and pulse-to-bit converter blocks is 
demonstrated after implementation in Table 2 considering 
device counts per pixel. Total number of necessary devices 
per pixel has been summarized in Table 2 as well. Figure 9 
shows the global architecture of an array (block of 7×7 
pixels). The output values from any pixel are read out as XY 
address format.  
VI. CONCLUSION 
In this paper, parallel image processing algorithms have been 
discussed and simulated for contrast enhancement and edge 
detection at the pixel level using pulse domain basic 
techniques of promotion and suppression respectively. 
Simulation show that pulse domain techniques lead to a 
better quality as well as higher performance in comparison to 
conventional 
image 
processing 
methods. 
Besides, 
computational load of pulse domain techniques is limited to 
logical operations which appear much faster than 
multiplication operations utilized in conventional methods. 
On the other hand, pulse domain techniques appear as 
suitable candidate for implementation. In this paper, a 
sample implementation has been presented and analyzed at 
RTL and gate levels. Xilinx Spartan III family has been 
employed as programmable circuit for implementation of 
suppression and promotion techniques. Also, this algorithm 
gives good results for color images. Future work will be 
concentrated on realization of other image processing 
algorithms in pulse domain.  
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 8. RTL schematic of suppression and promotion algorithms per pixel 
498
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

 
TABLE II. Design Summary per Pixel (number of devices used) 
 
Resource 
Image        
Processing 
Pulse to 
Bit 
Converter 
Entire 
Pixel 
No.  of Flip Flops 
4 
38 
42 
No.  of Slices 
5 
32 
37 
No. of  LUTs 
8 
45 
53 
No.  of  IOBs 
10 
14 
24 
Simulation Time 
1 sec 
1 sec 
2 secs 
 
REFERENCES 
[1] A. El Gamal and H. Eltoukhy, “CMOS Image Sensors,” IEEE 
Circuit & Devices Magazine, May/June 2005, pp. 6-20. 
[2] A. Moini, "Vision chips or seeing silicon,” The Centre for 
High Performance Integrated Technologies and Systems, The 
University of Adelaide, SA 5005, Australia, 1997. 
[3] C. S. Hong, “On-Chip Spatial Image Processing with CMOS 
Active Pixel Sensors,” PhD thesis, Electrical and Computer 
Engineering, University of Waterloo, Ontario, Canada, 2001. 
[4] J. Ohta, A. Uehara, T. Tokuda, and M. Nunoshita, “Pulse-
Modulated Vision Chips with Versatile-Interconnected Pixels,” 
International Parallel and Distributed Processing Symposium 
(IPDPS), Cancun, Mexico, 2000, pp. 1063-1071. 
[5] R. C. Gonzalez and R. E. Woods, “Digital Image Processing,” 
Prentice Hall, 2002. 
[6] L. G. Roberts. “Machine perception of three dimensional 
Solids,” Optical and Electro-Optical Information Processing, 
MIT Press Cambridge, Massachusetts, 1965, pp. 159-197. 
[7] W. K. Pratt, “Digital Image Processing,” New York, Wiley- 
Interscience, 1978.  
[8] M. Basu, “Gaussian-Based Edge-Detection Methods—A 
Survey,” 
IEEE 
Transactions 
on 
Systems, 
Man, 
and 
Cybernetics, Vol. 32, NO. 3, August 2002, pp. 252-260. 
[9] J. Canny, “A Computational Approach to Edge Detection,” 
IEEE Transactions, Pattern Analyze, Machine Intel, Vol. 
PAMI-8, June 1986, pp. 679–698. 
[10]  D. Marr and E. C. Hildreth, “Theory of edge detection,” in 
Proceedings of the Royal Society of London, vol. B207, 1980, 
pp. 187–217.      
[11]  E. Peli, “Feature Detection Algorithm Based on a Visual 
System Moddel,” Proc. IEEE, vol. 90, pp. 78-93, 2002.    
[12]  L. A. Iverson and S. W. Zucker, “Logical/linear operators for 
image curves,” IEEE Trans. Pattern Anal. Machine Intell., vol. 
17, no. 10, pp. 982-996, Oct 1995.  
 
H.Shift Register
V.Shift Register
7×7 pixels
 
                (a)                                                     (b) 
 
Figure 9. (a) Schematic diagram of an array, (b) RTL schematic per 
pixel 
 
[13]  J.B. Wu, Z.P. Yin, and Y.L. Xiong, "The Fast Multilevel Fuzzy 
Edge Detection of Blurry Images", IEEE signal processing 
letters, vol. 14, 2007, p.344-347.   
[14]   H.J. Yang and D.Q. Liang, "A New Method of Edge 
Detection Based on Information Measure and Neural 
Network", ACTA ELECTRONICA SINICA, vol. 29, 2001, 
pp.51-53. 
[15]  Z.Y. Cai, R. Chen, F.Z. Yu, and B. Li, "A V-groove Welding 
Seam Recognition Algorithm Based on Wavelet Transform", 
Journal of Image and Graphics, vol. 12,2007,pp.866-869. 
[16]  W.P. Gong, Y.Z. Wang, and Q. Li, "Multi scale edge detection 
on images using B-spline wavelets", Inflared Technology, vol. 
22, 2000, pp. 15-18.  
[17]  D. Wang, M.D. Wu, and Y.S. Liu, " A New Mathematical 
Morphological Algorithm Based on Rough Sets and It’s 
Application to Detecting Image Edge", Journal Of Engineering 
Graphics, vol. 2, 2007, pp. 109-113.                
[18]  G. H. Park, H. H. Cho, and M. R. Choi, “A Contrast 
Enhancement Method using Dynamic Range Separate 
Histogram Equalization,” IEEE Transactions on Consumer 
Electronics, Vol. 54, No. 4, November 2008, pp.1981-1987. 
[19]  K. Kagawa and K. Yasuoka.”Pulse-Domain Digital Image 
Processing for Vision Chips Employing Low-Voltage Operation 
in Deep-Submicrometer Technologies”, IEEE Journal In 
Quantum Electronics, Vol.10, No.4, July/August 2004, pp. 816-
828. 
[20]  M. Kyomasu, “A New MOS Imager Using Photodiode as   
Current Source,” IEEE Journal of Solid State Circuits 26, pp. 
1116–1122, August 1999. 
 
   
                       
 
 
 
 
 
 
 
 
 
 
 
 
 
499
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

