Estimation of Relative Offset and Drift
for Synchronization of Local Clocks in Wireless Sensor Networks
Ayako Arao and Hiroaki Higaki
Department of Robotics and Mechatronics,
Tokyo Denki University, Japan
Email: {arao,hig}@higlab.net
Abstract—In wireless sensor networks, each wireless sensor node
records events that occurred in its observation area with their
observation time. Each wireless sensor node possesses its own
local clock whose drift and offset are generally different from
the others. In addition, it is difﬁcult for the wireless sensor
nodes to adjust drifts and offsets of their local clocks since
transmission delay of messages between neighbor wireless sensor
nodes are difﬁcult to estimate due to Carrier Sense Multiple
Access with Collision Avoidance (CSMA/CA) and Request to
Send/Clear to Send (RTS/CTS) control for collision avoidance.
Thus, it is difﬁcult to achieve orders and intervals among events
observed by different wireless sensor nodes. Moreover, even if
multiple wireless sensor nodes observe the same event, their
recorded observation times might be different and two observa-
tion records for the same event by two wireless sensor nodes are
not always recognized as the records for the same event. Based
on an assumption that observation areas of neighbor wireless
sensor nodes are overlapped, by using observation records of the
commonly observed events by neighbor wireless sensor nodes,
this paper proposes a novel method to estimate the relative drift
and offset between local clocks of the neighbor wireless sensor
nodes. Here, each sensor node only detects the occurrences of
events and cannot achieve the locations where the events occur.
Hence, commonly observed events between neighbor wireless
sensor nodes are required to be detected. Our proposed method
applies a heuristic that multiple observation records in neighbor
wireless sensor nodes whose intervals are the same are estimated
to be commonly observed events.
Keywords–Wireless Sensor Networks; Observation Time; Local
Clock Synchronization; Relative Drift Estimation; Relative Offset
Estimation.
I.
INTRODUCTION
A wireless sensor network consists of a great number of
wireless sensor nodes with their sensor modules for achieving
environmental data and wireless communication modules for
transmission of data messages containing the environmental
data to one of stationary sink nodes by using wireless multi-
hop communication based on wireless ad-hoc communication.
Each wireless sensor node possesses its local clock and the
sensor node records observed events with the clock value at
that time. Since the wireless sensor nodes work autonomously
and their local clocks have individual differences, it is almost
impossible for the local clocks in the wireless sensor nodes to
be completely synchronized [4]. Especially due to individual
differences in their crystal oscillators, incremented clock values
in the same time duration are generally different one by one
and networks with numerous number of nodes with their local
clocks should be designed and managed on the assumption of
the asynchronous local clocks [8]. Similar to [10], this paper
assumes that a local clock value Ci(t) of a wireless sensor
node Si is represented with its offset Oi and drift dti/dt as
Ci(t) = (dti/dt)t + Oi. Since each local clock of Si has its
own offset and drift, it is expected that a clock value difference
|Ci(t) − Cj(t)| between local clocks of Si and Sj is required
to be kept small by a certain clock synchronization procedure
with a certain short interval. In addition, local clock values
recorded when a wireless sensor node observes events are also
required to be corrected according to the clock synchronization
procedure.
In environments where Global Positioning System (GPS) or
wave clocks are not available, relative offset and drift between
two local clocks of wireless sensor nodes are required to be
estimated. Various conventional methods for clock synchro-
nization in wired networks have been proposed. Here, control
messages carrying local clock values are exchanged among
wired nodes and transmission delay for the messages are
estimated for clock synchronization as in Figure 1. However,
in wireless networks, due to collision avoidance methods such
as CSMA/CA and RTS/CTS [1] control in wireless Local Area
Network (LAN) protocols, dispersion of transmission delay of
the control messages carrying local clock values is large and
it becomes difﬁcult to achieve precise synchronization of local
clocks based on estimation of relative offset and drift between
the local clocks of neighbor wireless sensor nodes. Hence,
this paper proposes a novel clock synchronization method
without control message transmissions with local clock values
whose transmission delay is difﬁcult to estimate. Our proposed
method is based on the fact that observation areas of neighbor
wireless sensor nodes are usually overlapped and events which
occurs in the overlapped area are observed by the wireless
sensor nodes simultaneously.
In Section 2, we review related works. In Section 3, we
propose our clock synchronization method based on records
of observed events in neighbor wireless sensor nodes. Its
performance is evaluated in simulation experiments and the
results are discussed in Section 4. Finally, we conclude in
Section 5.
II.
RELATED WORKS
The problem of synchronization among local clocks in
a network has been discussed and various synchronization
methods have been proposed. The most fundamental approach
to solve the problem is the algorithm discussed in [2]. Here,
between two computers, local clock value request and reply
control messages are exchanged where these control messages
carry local clock values of sender computers (Figure 1).
However, since the receiver computer cannot achieve its local
clock values when the received control message is transmitted,
the transmission delay of the received control message is
required to be estimated. Therefore, the methods for clock syn-
chronization by exchange of local clock values require more
precise estimation of transmission delay of control messages.
108
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

Even with variation of transmission delay of control messages,
it may be practically applicable for proposed methods to wired
networks whose variation of transmission delay is not so large.
Sj
Si
Request
Reply
Ci (t)
Cj (t)
time
time
Figure 1. Clock Synchronization by Exchange of Control Messages with Local
Clock Values.
For synchronization of local clocks of wireless nodes
in wireless ad-hoc networks, Reference-Broadcast Synchro-
nization (RBS) [3], Flooding Time Synchronization Protocol
(FTSP) [5] and Timing-sync Protocol for Sensor Networks
(TSPN) [7] have been proposed. All these methods are based
on the transmissions of control messages carrying local clock
values as discussed before. Hence, for achieving highly precise
synchronization among local clocks in wireless nodes, more
precise estimation of transmission delay of control messages
carrying local clock values are required. However, due to
collision avoidance methods such as CSMA/CA and RTS/CTS
control, it becomes much more difﬁcult to estimate transmis-
sion delay of control messages for clock synchronization. The
backoff timer for collision avoidance in CSMA/CA introduces
unpredictable waiting time for data message transmissions and
RTS/CTS control for avoiding collisions due to the hidden
terminal problem requires much longer suspension of data
message transmission procedure causing much higher unpre-
dictability of total transmission delay as shown in Figure 2.
S
Sk
Backoff
S i
S
RTS
S j
CTS
SIFS
Temporary 
  Suspension
S k
DIFS
ACK
Sj
Contention/Collision
Data Message
Data Message
Control Message
Si
Control Message
Figure 2. Unpredictable Transmission Delay of Control Messages for Clock
Synchronization in Wireless Ad-Hoc Networks.
Especially in wireless sensor networks, high congestions
of sensor data messages around the stationary wireless sink
nodes are unavoidable so that prediction of transmission delay
of control messages becomes difﬁcult or almost impossible.
In addition, burst trafﬁc of data messages caused by some
critical events also makes difﬁcult to estimate transmission
delay of control messages. In order to solve this problem,
another approach without transmissions of control messages to
which current local clock values are piggybacked are required
to be considered.
III.
PROPOSAL
A. Commonly Observed Events
Each wireless sensor node consists of a sensor module
which detects events that occurred within its observation
area and a wireless communication module which trans-
mits/receives wireless signals from/to its neighbor wireless
nodes within its wireless signal transition area. A wireless
sensor node Si which detects an occurrence of an event within
its observation area records kinds of the events with some
additional related attributes including the clock value Ci(t) of
its local clock at the instance t when Si observes the event. For
simplicity, this paper assumes that each event is detected by
all the wireless sensor nodes whose observation areas include
the location of the event at that instance, i.e. without any
observation delay. In reality, each sensor device requires its
speciﬁc response time for an event observation and the effect
of the delay is discussed in our future work. In addition, all
events are assumed to be the same kind. Hence, in accordance
with the event observation records by a wireless sensor node
Si, a sequence ESeqi := |Ci(t0), Ci(t1), . . . , Ci(tNi)⟩ of the
clock values at the instances when Si observes the events is
induced. Here, Ci(tj) is the value of the local clock of Si at
the instance tj when Si observes an occurrence of an event
ei(tj) in its observation area. On the other hand, each wireless
sensor node Si communicates with its neighbor wireless sensor
nodes within its wireless signal transmission area. Thus, it is
possible for Si to exchange its clock value sequence ESeqi
at occurrences of locally observed events with its neighbor
wireless sensor nodes.
Generally, the observation area of a wireless sensor node is
included in its wireless signal transmission area. In addition,
in a wireless sensor network, an observation area where all the
event occurred are surely observed and recorded by at least one
wireless sensor node is required to be covered by observation
areas of multiple wireless sensor nodes as shown in Figure 3
[6] [9]. Hence, observation areas of neighbor wireless sensor
nodes usually overlap and the wireless sensor nodes whose
observation area overlap can communicate directly by using
wireless ad-hoc communication.
Suppose the case where observation areas of wireless
sensor nodes Si and Sj overlap as shown in Figure 4. As
mentioned, Si and Sj can communicate directly by wireless
ad-hoc communication since they are included in their wireless
transmission areas one another. Here, all the events occurred in
the overlapped observation area are observed by both Si and
Sj and recorded with clock values of their own local clocks.
These events are called commonly observed events of Si and
Sj. The other events, i.e. events observed by only one of Si
and Sj, are called solely observed events.
109
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

[Commonly/Solely Observed Events]
An event which occurs at a certain instance t in an
overlapped area of observation areas OAi and OAj of wireless
sensor nodes Si and Sj respectively and is observed and
recorded with local clock values Ci(t) and Cj(t) into clock
value sequences ESeqi and Eseqj by Si and Sj respectively
is called a commonly observed event of Si and Sj. On the
other hand, an event which occurs at a certain instance t in an
area included by OAi and excluded by OAj and is observed
and recorded with a clock value Ci(t) into only a clock value
sequence ESeqi by Si is called a solely observed event of Si
against Sj. 2
Each wireless sensor node Si assumes to observe all
the events occur within an observation area OAi of Si. As
various widely available sensor modules, Si only identiﬁes
the occurrence of the events and gets the clock values of its
local clock at the instance of the occurrence of the events;
however, it cannot identify the precise locations of the events
in its observation area. Hence, it is impossible for Si to
identify whether an observed event is a commonly observed
event with a neighbor wireless sensor node Sj or a solely
observed event against Sj. Even though clock values at an
instance when an event occurs are recorded by wireless sensor
nodes which observe the event, since clock values Ci(t) and
Cj(t) of wireless sensor nodes Si and Sj at any instance t
are generally different, it is impossible for a wireless sensor
node to identify its commonly observed events with a speciﬁed
neighbor wireless sensor nodes only by comparison of local
clock values in their clock value sequences as shown in Figure
4. Since clock values Ci(t) and Cj(t) of Si and Sj for a
commonly observed event at an instance t are different and it
is impossible to identify commonly observed events of Si and
Sj only by simply comparing the sequences of clock values.
Event
Figure 3. Whole Coverage of Observation Area by Overlap Observation Areas
of All Sensor Nodes.
B. Relative Offset Estimation
By using commonly observed events deﬁned in the pre-
vious subsection, this paper proposes a method to estimate
a relative drift dtj/dti = (dtj/dt)/(dti/dt) and a relative
offset Oj − Oi under an assumption that local clock values
Ci(t) and Cj(t) of wireless sensor nodes Si and Sj are given
as Ci(t) = (dti/dt)t + Oi and Cj(t) = (dtj/dt)t + Oj,
respectively. This subsection discusses a method to estimate
only a relative offset where a relative drift is assumed to be
S j
S i
Cj( t)
Ci( t)
Solely Observed Event
Commonly Observed Event
Figure 4. Local Clock Values of Observation Time in Si and Sj.
1. The method to estimate both a relative drift and a relative
offset is discussed in the next subsection.
In case that a relative drift of Ci(t) and Cj(t) is 1, i.e.
dtj/dti = 1, Cj(t) − Ci(t) = Oj − Oi, i.e. a difference
between clock values at any instance equals to their relative
offset. Hence, if one of pairs of clock values of commonly
observed events is identiﬁed, the difference between the clock
values is their relative offset. However, it is difﬁcult to identify
a pair of clock values of a commonly observed event from
local clock value sequences of neighbor wireless sensor node.
This is because, as discussed in the previous section, even if
wireless sensor nodes Si and Sj observe the same event, i.e.
their commonly observed event, at an instance t, their local
clock values Ci(t) and Cj(t) at t are usually different, i.e.
Ci(t) ̸= Cj(t). In addition, even if the instances t and t′ of
solely observed events observed by Si and Sj respectively are
different, i.e. t ̸= t′, their local clock values Ci(t) and Cj(t′)
might be the same, i.e. Ci(t) = Cj(t′). Hence, the simple
comparison between individual clock values Ci(t) and Cj(t′)
recorded in sequences ESeqi and ESeqj of local clock values
of Si and Sj does not result in correct estimation of the relative
offset between their local clocks.
In order to solve this problem, this paper proposes a
novel method to estimate the relative offset and drift between
the local clocks of neighbor wireless sensor nodes by using
multiple pairs of clock values recorded in the sequences of
local clock values. As discussed, a clock value sequence ESeqi
of local clock values of a wireless sensor node Si when it
observes events in its observation area OAi includes local
clock values of commonly observed events with its neighbor
wireless node Sj. Though local clock values of Sj for the same
commonly observed events are surely included in a clock value
sequence ESeqj of local clock values of Sj when it observes
them, it is impossible to detect the commonly observed events
by simple comparison of local clock values in ESeqi and
ESeqj. However, since the commonly observed events, i.e.
events which occurs in the overlapped area of observation areas
OAi and OAi of Si and Sj, are observed at the same instance
t by Si and Sj even though Ci(t) and Cj(t) may be different,
intervals between the same pair of commonly observed events
in Si and Sj are the same. That is, suppose that clock values of
Si and Sj when they observe two commonly observed events
occur at instances t and t′ are Ci(t), Ci(t′), Cj(t), Cj(t′),
respectively. Even if Ci(t) ̸= Cj(t) and Ci(t′) ̸= Cj(t′),
110
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

Ci(t′) − Ci(t) = Cj(t′) − Cj(t) is surely satisﬁed.
Since both locations where events occur and intervals
between successive events contain a certain randomness, i.e. a
certain unpredictability, this paper introduces a heuristic based
on a reversed proposition of the above one into estimation of
commonly observed events. Thus, if there exist local clock
values Ci(t1) and Ci(t2) in ESeqi of Si and Cj(t3) and
Cj(t4) in ESeqj of Sj and Ci(t2)−Ci(t1) = Cj(t4)−Cj(t3)
is satisﬁed though Ci(t1) ̸= Cj(t3) and Ci(t2) ̸= Cj(t4),
it is highly possible for Si and Sj to have been observed
two same events, i.e. there are two commonly observed
events occurred at t1 = t3 and t2 = t4 respectively in
the overlapped area of their observation areas. Needless to
say, it might be possible for solely observed events whose
recorded clock values are Ci(t1), Ci(t2), Cj(t3) and Cj(t4)
to satisfy Ci(t2) − Ci(t1) = Cj(t4) − Cj(t3) on accident.
Hence, our heuristic method regards the possible relative offset
that provides the maximum number of estimated commonly
observed events which satisﬁes the above condition as an
estimated relative offset.
[Estimation of Relative Offset]
Let ESeqi and ESeqj be sequences of local clock values
Ci(t) and Cj(t) at instances when wireless sensor nodes
Si and Sj observe events. An estimated relative offset is
what provides the maximum number of estimated commonly
observed events where the transformed clock values with
the estimated relative offset are the same. That is, with the
estimated relative offset O, if the number of pairs of local clock
values satisfying Ci(t) + O = Cj(t′) where Ci(t) ∈ ESeqi
and Cj(t′) ∈ ESeqj is the maximum for all possible relative
offsets, O is regarded as the estimated relative offset for Si
and Sj. 2
For example, Figure 5(a) shows two sequences of local
clock values ESeqi and ESeqj. Figures 5(b), 5(c) and 5(d)
show the results of parallel translation of ESeqj with possible
relative offsets, i.e. where a pair of a local clock value Ci(t)
and a transformed local clock value with a possible relative
offset Cj(t′) + O become the same value. There are 1, 2
and 3 estimated commonly observed events with the same
transformed local clock values. If the maximum number of
estimated commonly observed events is 3, the relative offset
in Figure 5(c) is the estimation result in our method.
Now, we design an algorithm for estimation of a relative
offset based on the heuristics. Here, for every pair of local
clock values Ci(ti
k) and Cj(tj
l ) in ESeqi and ESeqj of Si
and Sj respectively, it is assumed that these local clock
values represent those at a certain commonly observed event,
that is the difference O = Cj(tj
l ) − Ci(ti
k) is regarded
as the estimated relative offset of the local clocks of Si
and Sj, and the number of estimated commonly observed
events where Cj(ti
l′) = Ci(ti
k′) + O is satisﬁed is counted.
Here, the possible related offset is between the maximum
Ci(ti
Ni) − Cj(tj
0) and the minimum Ci(ti
0) − Cj(tj
Nj) and the
algorithm counts the estimated commonly observed events
for every possible relative offset in this range. If there is a
certain upper limit of relative offset between the local clocks
of Si and Sj, it is possible for the proposed algorithm to
work with this limitation to reduce the time duration required
for the proposed algorithm.
[Relative Offset Estimation Algorithm]
1)
Initialize the maximum number of estimated com-
monly observed events of wireless sensor nodes Si
and Sj as 0 by MCOiv := 0.
2)
A temporary relative offset and the number of esti-
mated commonly observed events are initialized as
Soﬀ iv := Ci(ti
Ni) − Cj(tj
0) and COij := 0.
3)
For each local clock value Ci(ti
k)
∈
ESeqi
=
|Ci(ti
0), Ci(ti
1), . . ., Ci(ti
Ni)⟩, search events Cj(tj
l ) ∈
ESeqj
=
|Cj(tj
0), Cj(tj
1), . . ., Cj(tj
Nj)⟩ satisfying
Ci(ti
k) = Cj(tj
l ) + Soﬀ ij and increments COij.
4)
If COij ≥ MCO ij, MCOij := COij and an esti-
mated relate offset Eoﬀ ij := Soﬀ ij.
5)
If Soﬀ ij = Cj(tj
Nj) − Ci(ti
0), jump to step 8).
6)
Search
a
relative
offset
update
Uoﬀ ij
:=
min(Cj(tj
l )
+
Soﬀ ij
−
Ci(ti
k))
where
Cj(tj
l ) + Soﬀ ij − Ci(ti
k) > 0.
7)
Soﬀ ij := Soﬀ ij−Uoﬀ ij and COij := 0. Then, jump
to step 3).
8)
Return Eoﬀ ij as the required estimated relative offset
and the algorithm terminates. 2
(a)
(b)
(c)
(d)
ESeqi
ESeqj
ESeqi
ESeqj
ESeqi
ESeqj
ESeqi
ESeqj
Figure 5. Estimation of Relative Offset.
C. Relative Drift Estimation
This subsection proposes an extended algorithm for estima-
tion of both the relative offset and the relative drift for recorded
local clock values in two neighbor wireless sensor nodes whose
observation areas overlap. Figure 6 shows the overview of
our proposed method. Same as the method proposed in the
previous subsection which supports only the cases with 1
relative drift, the number of estimated commonly observed
events between local clock value sequences ESeqi and ESeqj
for every possible relative offset Ci(ti
k) − Cj(tj
l ). In addition,
for estimation of the relative drift, another pair of local clock
values Ci(ti
k′) ∈ ESeqi and Cj(tj
l′) ∈ ESeqj (k ̸= k′
and l ̸= l′) is needed. Here, an estimated relative drift is
(Ci(ti
k′) − Ci(ti
k))/(Cj(tj
l′) − Cj(tj
l )). After applying the
transformation of local clock values with the estimated relative
offset and the estimated relative drift, the number of estimated
commonly observed events whose local clock values are the
same is evaluated. Same as the previous subsection, according
to a heuristic that the correct pair of relative offset and relative
drift provides the maximum number of estimated commonly
observed events, our proposed method estimate them. In order
to apply our proposed method, for neighbor wireless sensor
111
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

nodes to estimate relative offset and drifts to transform the
local clock values for synchronization, there should be more
than 3 commonly observed events. Hence, enough observation
period to record local clock values are required.
(a)
(b)
(c)
ej
k
S i
Sj
S i
Sj
Sj
S i
e i
l
ej
l+2
k+1
e i
k-1
e i
ej
l-1
Figure 6. Estimation of Relative Drift..
Figure 7 shows a case of correct estimation of commonly
observed events with correct estimation of a relative drift
dtj/dti and a relative offset Oj − Oi. Here, pairs of local
clock values Ci(ti
1) and Cj(tj
1), Ci(ti
2) and Ci(tj
3), and Ci(ti
3)
and Cj(tj
4) are those for commonly observed events, i.e.,
ti
1 = tj
1, ti
2 = tj
3 and ti
3 = tj
4, respectively, and the rest
Ci(ti
4) and Cj(tj
2) are local clock values for solely observed
events in Si and Sj, respectively. By consideration that Ci(ti
1)
and Cj(tj
1) are local clock values in Si and Sj when a
commonly observed events of Si and Sj occurs, the relative
offset is estimated as Oj − Oi = Cj(tj
1) − Ci(ti
1) and the
line representing the local clock value in Sj is parallelly
displaced as the points representing the local clock values
Ci(ti
1) and Cj(tj
1) of the commonly observed event are over-
lapped. Then, by consideration that Ci(ti
2) and Cj(tj
3) are
local clock values in Si and Sj when a commonly observed
events of Si and Sj occurs, the relative drift is estimated
as dtj/dti = (Cj(tj
3) − Cj(tj
1))/(Ci(ti
2) − Ci(ti
1)) and the
line representing the local clock value in Sj is rotated around
the point representing the local clock value Ci(ti
1) as the
points representing the local clock values Ci(ti
2) and Cj(tj
3) of
the commonly observed event are overlapped. Now, the lines
representing the local clock values of Si and Sj are overlapped
and all the commonly observed events including that for Ci(ti
3)
and Cj(tj
4) are correctly estimated.
On the other hand, Figures 8 and 9 show the cases when
estimation of relative drift and/or offset is incorrect and estima-
tion of commonly observed events is also incorrect as a result.
In Figure 8, same as in Figure 7, Ci(ti
1) and Cj(tj
1) are consid-
ered to be local clock values in Si and Sj when a commonly
observed events of Si and Sj occurs, and the relative offset
is correctly estimated as Oj − Oi = Cj(tj
1) − Ci(ti
1) and the
line representing the local clock value in Sj is parallelly dis-
placed as the points representing the local clock values Ci(ti
1)
and Cj(tj
1) of the commonly observed event are overlapped.
However, by incorrect consideration that Ci(ti
2) and Cj(tj
4) are
local clock values in Si and Sj when a commonly observed
events of Si and Sj occurs, the relative drift is incorrectly
estimated as dtj/dti = (Cj(tj
4) − Cj(tj
1))/(Ci(ti
2) − Cj(ti
1))
and the line representing the local clock value in Sj is rotated
around the point representing the local clock value Ci(ti
1) as
Si
Sj
t
C
Transformation by
Relative Drift
Transformation by
Relative Offset
Figure 7. Estimation of Commonly Observed Events by Offset and Drift
Estimation (Correct).
the points representing the local clock value Cj(tj
4) has the
same C value (virtual axis) as Ci(ti
2). Here, pairs of points
on the two lines representing the local clock values in Si
and Sj with the same C value (vertical axis) correspond to
a commonly observed event of Si and Sj. However, in Figure
8, though pairs of Ci(ti
2) and Cj(tj
3), and Ci(ti
3) and Cj(tj
4)
are those of local clock values for commonly observed events,
their C values are not the same, i.e., these pairs of local clock
values are not estimated to be those for commonly observed
events.
Si
Sj
t
C
Transformation by
Relative Drift
Transformation by
Relative Offset
Figure 8. Estimation of Commonly Observed Events by Offset and Drift
Estimation (Incorrect Drift).
Moreover, in Figure 9, both relative offset and drift are
incorrectly estimated. Here, Ci(ti
1) and Cj(tj
2) which is local
clock value in Sj when its solely observed event occurs are
considered to be local clock values in Si and Sj when a
commonly observed event of Si and Sj occurs. A relative
offset is incorrectly estimated as Oj − Oi = Cj(tj
2) − Ci(ti
1)
and the line representing the local clock value in Si is
parallelly displaced as the points representing the local clock
values Ci(ti
1) and Cj(tj
2) have the same C value (vertical
axis). Then, Ci(ti
2) and Cj(tj
4) are considered to be local
clock values of the commonly observed event of Si and
Sj, that is, the relative drift is also incorrectly estimated as
Dej/dti = (Cj(tj
4) − Cj(tj
1))/(Ci(ti
2) − Ci(ti
1)), and the line
112
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

representing the local clock value in Sj is rotated around the
point representing Cj(tj
1) which has already displaced from
the original position as the points representing the local clock
value Cj(tj
4) has the same C value (vertical axis) as Ci(ti
2).
Here, pairs of points on the two lines representing the local
clock values in Si and Sj with the same C value (vertical
axis) correspond to a commonly observed event of Si and Sj.
In Figure 9, no correct pairs of local clock values in Si and Sj
are estimated to be those of commonly observed events and
two pairs of local clock values in Si and Sj are incorrectly
estimated to be those of commonly observed events.
As shown in these three examples in Figures 7, 8 and 9, the
number of estimated commonly observed events with incorrect
estimation of relative offset and drift is usually smaller than
that with correct estimation of them. It may be possible for
pairs of local clock values of different events to be estimated
as those of commonly observed events since the transformed
C values are coincidentally the same. However, since the
probability of such coincidental cases is low, the proposed
heuristic that the correct relative drift and offset provides the
maximum number of estimated commonly observed events is
almost always applicable.
Si
Sj
t
C
Transformation by
Relative Drift
Transformation by
Relative Offset
Figure 9. Estimation of Commonly Observed Events by Offset and Drift
Estimation (Incorrect Offset and Drift).
[Relative Offset and Draft Estimation Algorithm]
1)
Initialize the maximum number of estimated com-
monly observed events of wireless sensor nodes Si
and Sj as 0 by MCOiv := 0.
2)
A temporary relative offset is initialized as Soﬀ iv :=
Ci(ti
Ni) − Cj(tj
0).
3)
For every possible temporary relative drift Sdriiv :=
(Ci(ti
k′) − Ci(ti
k))/(Cj(tj
l′) − Cj(tj
l )) > 0, apply the
following steps 4), 5) and 6).
4)
The number of estimated commonly observed events
is initialized as COij := 0.
5)
For each local clock value Ci(ti
k)
∈
ESeqi
=
|Ci(ti
0), Ci(ti
1), . . . , Ci(ti
Ni)⟩, search events Cj(tj
l ) ∈
ESeqj
=
|Cj(tj
0), Cj(tj
1), . . . , Cj(tj
Nj)⟩ satisfying
(Ci(ti
k′′) − Ci(ti
k))/(Cj(tj
l′′) − Cj(tj
l )) = Sdriij and
increments COij.
6)
If COij ≥ MCOij, MCO ij := COij, an estimated
relate offset Eoﬀ ij := Soﬀ ij and an estimated rela-
tive drift Edri ij := Sdriij.
7)
If Soﬀ ij = Cj(tj
Nj) − Ci(ti
0), jump to step 10).
8)
Search
a
relative
offset
update
Uoﬀ ij
:=
min(Cj(tj
l )
+
Soﬀ ij
−
Ci(ti
k))
where
Cj(tj
l ) + Soﬀ ij − Ci(ti
k) > 0.
9)
Soﬀ ij := Soﬀ ij−Uoﬀ ij and COij := 0. Then, jump
to step 3).
10)
Return Eoﬀ ij and Edri ij as the required estimated
relative offset and the required estimated relative drift
and the algorithm terminates. 2
Figure 6 shows an example. According to the method
proposed in the previous subsection, a pair of local clock
values Ci(ti
k) and Cj(tj
l ) is assumed to be for a possible
commonly observed events. In addition, another pair of local
clock values are also assumed to be for another possible
commonly observed events and all the local clock values
are transformed according to parallel translation. Then, the
number of estimated commonly observed events with the same
transformed local clock values are assigned is counted and the
relative offset and drift that provide the maximum number of
estimated commonly observed events is regarded as the correct
ones.
IV.
EVALUATION
Precision of our proposed method depends on the number
of commonly observed events of neighbor wireless sensor
nodes. Form this point of view, this section evaluates the
performance of our proposed method by simulation experi-
ments. Suppose two stationary wireless sensor nodes with 10m
observation ranges are located with their distance 0.5–19.5m.
Locations of events and intervals of two successive events
are randomly determined according to unique distribution and
exponential distribution, respectively. That is, events occur
according to Position arrivals. With various event density, the
ratio of correct estimation of commonly observed events, i.e.
the ratio of correct estimation of relative offset and drift of
their local clocks, is evaluated.
Distance between Nodes[m]
Event Density[10-5events/m2 s]
Ratio of Correct Estimation[%]
1
0.5
20 0
10
0
0
50
100
Figure 10. Ratio of Correct Estimation of Commonly Observed Events.
Figure 10 shows the simulation results. Red points repre-
sent correct estimation ratio higher than 99%, green points rep-
resent correct estimation ratio higher than 90%, and bule points
represent others. Except for cases with extremely low event
density and with extremely narrow overlapped observation
113
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

area, our proposed method provides high correct estimation
ratio. The performance is independent of the wireless trans-
mission trafﬁc of sensor data messages, e.g. around stationary
wireless sink nodes, which is the most important advantage
against the conventional method in which precise estimation
of transmission delay of control messages are required.
V.
CONCLUSION
This paper has proposed a novel clock synchronization
method for wireless sensor networks. Different from the
conventional methods by exchanging control messages with
current local clock values and by estimation of transmission
delay of the control messages, the proposed method estimates
the relative offset and drift between two local clocks of
neighbor wireless sensor nodes based on records of local
clock values of event observations and estimation of commonly
observed events of them. This paper has also designed estima-
tion algorithms of relative offset and drift and evaluated their
performance.
REFERENCES
[1]
“Wireless LAN Medium Access Control (MAC) and Physical Layer
(PHY) Speciﬁcations,” Standard IEEE 802.11 (2016).
[2]
Cristian, F., “Progabilistic Clock Synchronization,” Distributed Comput-
ing, Springer, vol. 3, no. 3, pp. 146–158 (1989).
[3]
Jeremy, E., Lewis, G. and Deborah, E., “Fine-Grained Network Time
Synchronization using Reference Broadcasts,” Proceedings of the 5uh
Symposium on Operating Systems Design and Implementation, pp. 147–
163 (2002).
[4]
Kopetz, H. and Ochsenreiter, W., “Clock Synchronization in Distributed
Real-Time Systems,” ICE Transactions on Computers, vol. C-36, no. 8,
pp. 933–940 (1987).
[5]
Miklos, M., Branislav, K. and Kayla, S., “The Flooding Time Synchro-
nization Protcol,” Proceedings of the 2AD International Conference on
Embedded Networked Sensor Systems, pp. 39–49 (2004).
[6]
Qu, Y., and Georgakopoulos, S.V., “A Distributed Area Coverage Algo-
rithm for Maintenance of Randomly Distributed Sensors with Adjustable
Sensing Range,” ICE Global Communications Conference, pp. 286–291
(2013).
[7]
Saurabh, G., Ram, K. and Mani, B.S., “Timing-Sync Protocol for Sensor
Networks,” Proceedings of the 1st International Conferenceon Embedded
Networked Sensor Systems, pp. 138–149 (2003).
[8]
Tanenbaum, A.S. and Steen, M., “Distributed Systems Principles and
Paradigms,” Prentice Hall (2002).
[9]
Tuba, E., Tuba, M., and Simian, D., “Wireless Sensor Network Coverage
Problem Using Modiﬁed Fireworks Algorithm,” Wireless Communications
and Mobile Computing Conference, pp. 696–701 (2016).
[10]
Wu, Y-C., Chaudhari, Q. and Serpedin, E., “Clock Synchronization of
Wireless Sensor Networks,” ICE Signal Processing Magazine, vol. 28,
no. 1, pp. 124–138 (2011).
114
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-598-2
UBICOMM 2017 : The Eleventh International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

