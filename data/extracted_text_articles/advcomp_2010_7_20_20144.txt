Cloud Computing: Several Cloud-oriented Solutions 
Amel Haji, Asma Ben Letaifa, Sami Tabbane  
 Higher School of Communication of Tunis, SUP’COM, Tunisia 
7th November University at Carthage 
{amel.haji | asma.benletaifa | sami.tabbane}@supcom.rnu.tn 
 
 
Abstract— Cloud computing is known as an IT environment 
that includes all elements of the IT and network stack, 
enabling the development, delivery, and consumption of Cloud 
Services. In this work in progress paper, we present a brief 
introduction to the concept of cloud (types and services). Then 
we outline a state of the art of different existing solutions of 
cloud. A comparison tables are also proposed. 
Keywords- 
cloud 
computing; 
services; 
scalability; 
provisioning. 
I. 
 INTRODUCTION  
 
The current network architectures make difficult reusability and 
increase costs. These architectures not take into account the 
changing 
functional 
requirements 
at 
the 
application 
development. Faced to costly development, redundant 
interconnections (point to point), a big complexity and 
difficulty to maintain, Coud computing and service oriented 
architecture are a very effective response to these issues in 
terms of reusability, interoperability and reduce coupling 
between different systems to ensure their cooperation. 
Cloud computing is the next generation platform that 
provides dynamic resources, virtualization and high 
availability. Cloud computing is not associated with a 
particular technology, protocol or provider. In practice, 
applications and data are no longer on the local computer 
but in a “cloud” composed by a number of remote and 
interconnected servers. Cloud computing describes a new 
supplement, consumption and delivery model for IT 
services based on Internet, and it typically involves the 
provision of dynamically scalable and often virtualized 
resources as a service. 
 
Cloud computing offers: Ubiquitous network access, location 
independent resource pooling, rapid elasticity, self Service 
and Instant-On, elasticity and Pay-as-you [1]. 
 
This paper is divided into two sections. The first one presents 
types of cloud and models of services in these clouds. Then, 
the second section describes related works which exposes 
characteristics of some existing solutions of clouds and 
comparative 
tables 
of 
these 
solutions 
related 
to 
infrastructures, platforms and services. 
II. 
CLOUD COMPUTING: TYPES & SERVICES 
A. Types of clouds 
Three types of cloud could be presented: Public clouds, 
Private clouds and hybrid clouds.  
Public cloud: the services are delivered to the client via the 
Internet from a third party service provider 
Private Cloud: these services are managed and provided 
within the organization. There is less restriction on network 
bandwidth, fewer security exposures and other legal 
requirements compared to the public Cloud. 
Hybrid Cloud: there is a combination of services provided 
from public and private Clouds [2]. 
B. Models  of Service 
 
We find in literature everything as a Service (EaaS). 
EaaS is the concept of reusable component called across 
network. It’s a subset of cloud computing. “as a Service” 
was been associated with others functions such as 
communication (CaaS) or data (DaaS). Three models of 
service are the most used. 
Infrastructure as a Service (IaaS): This model is a modern 
form of utility computing and outsourcing. IaaS can manage 
computer 
resources 
(networking, 
storage, 
virtualized 
servers). This model allows consumers to deploy and 
manage assets or leased server instances, while the own 
service providers govern the underlying infrastructure.  
Platform as a service (PaaS): It facilitates the development 
and deployment of applications without the management of 
the underlying infrastructure, by providing all necessary 
equipment to support the entire life cycle of construction and 
delivery of Web applications and services. This platform 
consists of software infrastructure, and typically includes a 
database, middleware and development tools. This type of 
service typically operates at a high level of abstraction. Users 
can manage and control resources that they deploy in these 
environments. Service providers maintain and govern 
application’s environments, server instances, and the 
underlying infrastructure. 
Software as a Service (SaaS): The hosted software or 
applications are consumed directly by users. Consumers 
control only the way in which they use cloud services while 
service providers maintain and manage software, data and 
the underlying infrastructure [3]. 
 
137
ADVCOMP 2010 : The Fourth International Conference on Advanced Engineering Computing and Applications in Sciences
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-101-4

III. 
COMPARISION OF SEVERAL CLOUD’S SOLUTIONS 
 
        In this section, we describe some platforms of clouds 
and then we summarize in a comparative tables some 
characteristics of IaaS then PaaS [4] and SaaS as shown 
respectively  in Table 1 and Table 2. 
A. Eucalyptus 
Eucalyptus for "Elastic Utility Computing Architecture 
for Linking Your Programs To Useful Systems" is an open 
source software to implement Infrastructure as a Service in  
 
 
 
Figure 1. Eucalyptus’s Architecture [5] 
 
the cloud. The architecture of eucalyptus is simple, flexible 
and modular with a design hierarchy as shown in Figure 1. 
Three essential components of eucalyptus [6]:  
Cloud controller queries information about resources from 
node managers, makes the scheduling decisions and executes 
them by using the cluster controllers.  
Cluster Controller collects information about a set of virtual 
machines and schedules their execution on specified node 
controllers.  
Node controller is running on each node that is designated to 
host virtual machine. It manages the implementation, 
inspection, and the termination of the VM on the host where 
it runs.  
 
Users have the ability to execute and monitor virtual 
machines deployed throughout the physical resources in a 
flexible, portable, modular and easy manner. The design of 
eucalyptus gives users the flexibility to seamlessly move 
applications to Eucalyptus on-premise on the public cloud, 
and vice versa. Eucalyptus also makes easy the deployment 
on the hybrid cloud, using resources from public and private 
clouds for the unique advantages of each [6]. The 
disadvantage is the lack of an interface to manage virtual 
machine and an advanced monitoring. 
B. OpenNebula 
OpenNebula is an open source manager of virtual 
infrastructure [7], able to build private, public and hybrid 
clouds. OpenNebula offers flexible architecture, interfaces 
and components that could be integrated  into any data 
center. This tool supports Xen [8] , KVM [9] and VMware 
[10] and access to Amazon EC2s [11]. 
OpenNebula was designed to be integrated into any network 
and storage solution. OpenNebula manages the storage, 
networking and virtualization technologies to enable the 
establishment of dynamic multi-level services (groups of 
interconnected 
virtual 
machines) 
on the distributed 
infrastructure, 
combining the resources 
of physical 
machines and cloud distance, based allocation policies 
 
 
 
Figure 2. OpenNebula’s architecture [12] 
 
OpenNebula consists of three components [13]: core (Virtual 
Infrastructure Manager): Manages the lifecycle of the virtual 
machine by running the basic operations (deployment, 
monitoring, migration). 
Capacity Manager (scheduler) module that governs the 
functionality provided by the core of OpenNebula: 
workloads balancing in virtual machines. Virtual Access 
Drivers: virtualization layer.  The drawback of openNebula 
is the lack of GUI (Graphic User Interface) 
 
 OpenNebula provides the "load balancing" across nginx as 
shown in Figure 3. 
 
Some advantages of OpenNebula [13]:  
- Centralized management of the balance of the workload 
"load balancing", server Consolidation, resizing dynamic 
infrastructure, partitioning Dynamic Clustering, Support for 
heterogeneous workloads, and supply virtual machines on 
demand. 
 
 
Figure 3.     Load balancing in Open nebula [12] 
138
ADVCOMP 2010 : The Fourth International Conference on Advanced Engineering Computing and Applications in Sciences
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-101-4

C. Nimbus 
Nimbus is an open source toolkit that provides 
"infrastructure-as-a-Service». It allows a client to lease 
resources in distance by deploying virtual machines (VMs), 
for building a desired environment [14].  
Nimbus Cloud Storage offers the model pay-as-you-go and 
scalability (scale up and scale down as needed without 
adding expensive infrastructure). It allows customers to 
reduce costs and eliminate the task of management, giving 
them the freedom to focus on their business. 
 Nimbus allows providers to build clouds: Private clouds 
(Workspace Service: Open source implementation EC2) and 
developers to experiment with clouds: research or the use / 
performance improvements and contributions. It requires 
certain dependencies are installed first. On the service node: 
Java (1.5 +) and bash. On the nodes of the hypervisor: 
Python, bash, ebtables, dhcpd, and KVM or Xen libvirt. It 
supports both interfaces EC2 (Elastic Computing Cloud) 
and WSRF (Web Service Resource Framework). 
 
D. Abicloud 
 
    Abicloud is an open source infrastructure for building and 
managing public and private clouds based on heterogeneous 
environments. The tool offers users the ability primarily for 
scaling, managing, providing automatic and immediate 
servers and networks [15]. AbiCloud is auto scale: We can 
change the number of virtual servers, storage and memory. 
Therefore allows the platform to scale up or down as 
needed. The platform of AbiCloud is modular because it 
tries to improve the scalability of the system. The 
architecture is represented by the Figure 4. 
abiCloud_Server: contains the business logic of the global 
platform of clouds and interacts with the database. 
abiCloud_WS: This virtual assembly line of the platform 
interacts with various virtualization technologies to manage 
virtual machines. AbiCloud_VMS (Virtual Monitor System) 
is the component developed to monitor the virtual 
infrastructure to learn about events or states. AbiCloud 
Appliance 
Manager: 
This 
component 
enables 
the 
management, distribution and scaling (scalability), allowing 
the import of external applications to the cloud platform. 
This component is under development.  
AbiCloud Storage Management: This component is currently 
being formulated and will be dedicated to the integration of 
storage platform systems. abiCloud_client: this web 
application RIA developed in Flex enables users to manage 
their private Cloud [15]. 
E. FlexiScale 
The 
FlexiScale 
architecture 
is 
modular 
and 
can 
accommodate different implementations of its functionality. 
Virtual Iron is used which is built on the top of Xen 
Hypervisor and works as an external management layer for 
the virtual servers. FlexiScale is a Multi-tier architectures 
enabled by a high-speed internal multiple gigabit Ethernet  
 
            Figure 4.    Abicloud’s architecture [15] 
 
network. It’s a data center architecture which is designed to 
deliver a guaranteed QoS level for exported services. 
FlexiScale gives a pay-as-you-go virtual dedicated server. It 
offers Self-service provisioning of servers via API. Also, 
Additional servers can be launched in under a minute based 
on FlexiScale’s operating system images or images created 
by user, highly automated and rapid provisioning of 
additional processing or storage resources [16]. 
 
F. Windows Azure 
 
    Windows 
Azure 
is 
Microsoft's 
offer 
on 
Cloud 
Computing. This is an application platform providing 
services, 
accommodation 
and 
administration 
tools. 
Windows Azure is an operating system for cloud services 
that serves the development, service hosting and service 
management environment for the Windows platform Azure 
[17]. Windows Azure provides developers ability to do 
computing and storage and also the management of Web 
applications on the Internet through on demand data center. 
Windows Azure is a flexible platform that supports multiple 
languages and could be integrate with the existing 
environment. In addition, Windows Azure supports popular 
standards and protocols, including SOAP, REST, XML and 
PHP. Accommodation Azure will provide a set of 
scalability features of operating on demand. It is thus 
possible to obtain and allocate additional processors if the 
scalability of an application requires it [4]. 
 
G. Google appEngine 
 
AppEngine is intended solely for conventional web 
applications, the application is structured with a clear 
separation between the third load and the storage. In 
addition, AppEngine applications should be request-
response. AppEngine provides automatic scaling and high 
availability. For example, AppEngine is not suited for 
general computing. He admits a fixed topology structure to 
accommodate the 3-tiers application [18]. 
139
ADVCOMP 2010 : The Fourth International Conference on Advanced Engineering Computing and Applications in Sciences
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-101-4

H. Force.com 
Force.com is a Multi-tenant architecture with metadata 
driven development model. It means that’s a single instance 
of the hosted application which is able to serve all customers 
(tenants). Force.com is a SaaS service confined to API. It 
insures load balancing among tenants. It uses Apex language 
or database service and supports for .Net, C#, Apache 
Axis,…Concerning 
provisioning, 
with 
multi-tenant 
environment, create development, test, staging, training, and 
production environments are quickly, easily and cost-
effectively (in a single tenant environment every new stack 
must be separately provisioned, managed, and scaled) [19]. 
IV. 
CONCLUSION AND FUTURE WORKS 
In this paper, we introduced cloud computing overview. We 
presented layers of clouds, actors and its different types. 
Then, we summarized some current cloud solutions. Others 
cloud solutions like IBM solution or EmotiveCloud, 
Claudia, could be studied in the future in addition to IaaS 
frameworks. In future works, we will also try to focus on the 
concept of cloud provisioning and study how Service 
Oriented Architecture could helps us to perform cloud 
provisioning in scalable manner. 
REFERENCES 
 
 
[1] DSP ipFast Forward your Development, “Introduction to 
cloud computing”. 
[2] Steve Bennett, Mans Bhuller, and Robert Covington, “Architectural 
Strategies for Cloud Computing”, Oracle corporation, 2009. 
[3] David Chou, “Understanding Cloud Computing and Cloud-Based 
Security”, SOA Magazine, 2010. 
[4] Michael Armbrust et al.“Above the Clouds: A Berkeley View of Cloud 
Computing”, 
Electrical 
Engineering and 
Computer 
Sciences, 
University of California at Berkeley, 2009. 
[5] Rich Wolski, “EUCALYPTUS: An Elastic Utility Computing 
Architecture for Linking Your Programs to Useful Systems”, 
Computer Science Department, University of California, Santa 
Barbara, 2008. 
[6] Eucalyptus systems, “Eucalyptus Open-Source Cloud Computing 
Infrastructure - An Overview”, August 2009. 
[7] www.opennebula.org , April 2010. 
[8] http://www.xen.org/ , September 2010. 
[9] http://www.unixgarden.com/index.php/administration-
systeme/virtualisationkvm-acpi-et-sysfs, September 2010. 
[10] http://www.vmware.com/fr/, September 2010. 
[11] http://aws.amazon.com/ec2/, September2010. 
[12] Constantino Vázquez Blanco, “The OpenNebula Virtual Infrastructure 
Engine”, 
Distributed 
Systems 
Architecture 
Research 
Group, 
Universidad Complutense de Madrid,  June 27, 2009. 
[13] Borja Sotomayor, Rubèn Santiago Montero1, Ignacio Martin 
Llorente1, and Ian Foster, « capacity leasing in cloud Systems using 
the Open Nebula Engine », Facultad de Informaticà, Universidad 
Complutense de Madrid. 
[14] http://www.nimbusproject.org/docs/current/faq.html#nimbus-main-
components, April 2010. 
[15] http://www.abicloud.org/display/abiCloud/Home ABICLOUD 
TECHNICAL OVERVIEW,2009. 
[16] www.flexiScale.com, September 2010. 
[17] Nicolas CLERC , ” Windows Azure – Présentation technologique, 
Expertise des ecosystems”. 
[18] http://code.google.com/appengine,  August 2010. 
[19] www.salesforce.com , June 2010. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
140
ADVCOMP 2010 : The Fourth International Conference on Advanced Engineering Computing and Applications in Sciences
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-101-4

 
 
 
 
TABLE I.  
COMPARAISON OF SEVERAL IAAS CLOUD’S SOLUTIONS 
 
Eucalyptus 
OpenNebula 
Nimbus 
AbiCloud 
FlexiScale 
Service 
IaaS 
IaaS 
IaaS 
IaaS 
IaaS 
 Cloud’s type 
Public / 
Private 
Private 
Public 
Public/ 
Private 
Public 
Scalability 
Not 
Scalable 
Scalable  
Scalable 
Scalable 
Scalable 
Compatibility 
Not  
support EC2 
Multi-platform 
Support  
EC2, WRSF 
Support 
EC2 
Not support EC2 
VM support 
VMware, Xen, KVM 
Xen, VMware 
Xen 
virtualBox, 
Xen, 
VMware 
Xen 
Hypervisor 
Structure 
Module 
Module 
Component 
Module 
Module 
Provisioning Model 
Immediate 
Best effort+ haizea: 
advance reservation, 
immediate, best-effort 
+ reservoir: Immediate, Best-
effort 
Immediate 
Immediate 
Self provisioning 
Load balancing 
Simple load balancing 
cloud controller 
Nginx as load balancing 
auto configuration 
of virtual clusters s 
 
Automatic with cluster 
 
TABLE II.  
COMPARAISON OF  PAAS AND SAAS CLOUD’S SOLUTIONS 
 
 
 
 
 
Azure 
Appengine 
Force.com 
Service 
PaaS 
PaaS 
SaaS 
Scalability 
Scalable 
Scalable 
Scalable 
VM support 
Xen 
Hypervisor 
Multitenant architecture 
Multitenant  
Architecture 
Provisioning Model 
- 
- 
Immediate 
Load balancing 
Should install software 
Automatic 
Load balancing 
among tenants 
Storage model 
SQL Data Services  
Azure storage service 
MegaStore/BigTable 
- 
Networking Model 
Automatic based on programmer’s 
declarative descriptions of app 
components 
Fixed topology to 
accommodate 
3-tier Web app  structure 
- 
141
ADVCOMP 2010 : The Fourth International Conference on Advanced Engineering Computing and Applications in Sciences
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-101-4

