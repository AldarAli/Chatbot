Distributed Kalman Filter Investigation and Application to Leak Detection in Water
Pipeline Monitoring Using Wireless Sensor Networks with Non-intrusive Sensors
Valery Nkemeni, Fabien Mieyeville, Jacques Verdier
University of Lyon, Université Claude Bernard Lyon 1,
Ecole Centrale de Lyon, INSA Lyon, CNRS, Ampère,
F-69621, Villeurbanne, France
e-mail: valery.nkemeni@etu.univ-lyon1.fr,
fabien.mieyeville@univ-lyon1.fr, jacques.verdier@insa-
lyon.fr
Pierre Tsafack
University of Buea,
Faculty of Engineering and Technology
P.O Box 63, Buea, Cameroon
e-mail: tsafack.pierre@ubuea.cm
Abstract— Wireless Sensor Networks (WSN) have found a
wide
range
of
applications
in
monitoring,
with
most
deployments done in a centralized fashion. This results in high
energy consumption and latency, as such centralized schemes
are characterized by periodic long-distance transmissions. In
this
work,
we
demonstrate
the
benefits
of
trading
off
transmission for computation. We propose a solution where
local and distributed computing are used to improve the
accuracy of anomaly detection in physical systems without the
need for long distance transmissions to some central base
station. We practically demonstrate this in detecting leaks on a
water pipeline testbed, since water losses via leaks is a major
problem in most developing countries, including Cameroon.
Unlike other works for leak detection in water pipelines
available in literature, we build a low-cost sensor node, which
is feasible for deployment in developing countries from cheap
off-the-shelf
commercial
elements.
The
accuracy
of
the
measured vibrations on the surface of pipes is improved using
a distributed Kalman filter, where every node independently
computes the optimal state estimate used for leak detection by
running a local Kalman filter to obtain an accurate local
estimate from local measurements and also fusing it with those
of its close neighbors. Results show that the distributed
Kalman filter improves the reliability of leak detection.
Keywords- distributed computing; wireless sensor networks;
distributed Kalman filter; water pipeline monitoring; non-
intrusive sensors.
I.
INTRODUCTION
A WSN consists of a number of distributed nodes with
sensing,
processing
and
wireless
communications
capabilities, deployed over an area of interest to monitor
physical or environmental conditions. Application areas of
WSNs include geographical monitoring, habitat monitoring,
transportation,
military
systems,
business
processes,
microclimate research, medical care and others [1][2]. They
are spatially distributed
systems that exploit wireless
networking as main inter-node interaction channel and are
typically constrained in terms of energy, computing power,
memory and communication bandwidth.
A.
WSN: Shifting towards a distributed approach
Most WSN monitoring applications in literature are
centralized [3][4]. This has led to the underutilization of the
processing unit and overutilization of the communication
unit of sensor nodes since the primarily role of the sensor
nodes is to collect and transmit data periodically to an
intelligent central base station where all the processing is
done in order to detect anomalous behaviors [2][5][6]. In
large scale monitoring applications, most of the sensor
nodes are geographically far away from the base station and
from power supply and are usually battery-driven. The main
drawback of such a centralized approach is that of huge
energy consumption as periodic transmission of raw data
over long distances to the base station leads to fast depletion
of sensor node’s battery and shortens the lifespan of a WSN
[6]-[8]. This is the reason for the numerous research works
involved in the development of low energy consumption
protocols specifically for WSNs. Other drawbacks include
low reliability, longer response time, high bandwidth cost,
low level data safety and privacy [6]-[9] [11].
B.
The stakes of Water Supply in Developing Countries
Water represents a primary necessity for everyday life
and for an effective accomplishment of many industrial
processes. In the most remote and isolated regions, as in the
most urbanized ones, water provisioning to domestic
premises represents a fundamental living necessity. The lack
of water may prevent the development of business activities
from handicraft manufacturing to goods transformation and
energy production [10]. Thus, making accessible potable
water is one of the critical essentials to human survival and
economic growth of today’s society.
In most civilized societies, water transportation via
pipelines to clients seems to be the most economical way
[12] and consists of water supply systems comprising of two
different parts: (1) Transmission mains, which are pipes
responsible for transporting water to tanks and (2) Water
Distribution Networks (WDN), which pipes and service
connections for distributing water to customers. However,
these infrastructures are not completely watertight as even
in the most recent and well-built WDN, some level of
leakage and occasional pipe bursts occur, leading to water
13
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

losses [13]. Water pipeline leakages are one of a few
challenges to the water utility companies all over the world.
Water loss through leakages is recognized as a costly
problem worldwide, due to the waste of precious natural
resources, as well as from the economic point of view [14].
A recent report published by the World Bank in 2016
indicated that in developing countries, roughly 45 million
cubic meters of water are lost daily with an economic value
of over US $3 billion per year. The report also stated that
saving half of those losses would provide enough water to
serve at least 90 million people [15]. In Cameroon, a
developing Sub-Saharan African country, the level of non-
revenue water is at 4.67% [16][17]. The reason for this high
level of non-revenue water is explained by limited and
dilapidated
infrastructure
that
creates
physical
losses
through leaks and/or bursts.
Water demand is increasing continuously and rapidly as
a result of the growth of the Earth’s population, but water
resources are facing a problematical and constant decrease
caused by global heating and climate change. Unlike other
more peculiar phenomena, water scarcity is common to both
developing and developed countries [10]. The scarcity of
water thus requires that water losses due to leaks be
minimized and if possible, completely eradicated. This has
led to enormous research over the years in the field,
providing a wide range of methods for detecting and
locating leaks in water pipelines.
C.
Water Pipeline Monitoring: State of the Art
WSNs for Water Pipeline Monitoring (WPM) consist of
a number of sensor nodes with low-cost sensors that
periodically collect leak signals from the pipe. The signals
are then processed to detect the presence of a leak on the
pipeline. The biggest problem with leak detection in WPM
using low-cost sensors is that the leak signals may be noisy
and may result in false alarms in the leak detection system.
Thus, the issue of reliably identifying a leak signal in the
midst of errors from a number of sources (commonly called
noise) is a fundamental challenge of any leak detection
system [18].
A number of centralized schemes for WPM using WSN
have been proposed in literature [19]-[22]. The sensor nodes
periodically collect leak signals from the pipe where they
are installed and transmit to a central base station (where the
leak detection algorithm is found) for further processing in
order to detect the presence of a leak on the pipeline. Such
centralized schemes are characterized by a large number of
long-distance transmissions
which depletes the
sensor
node’s energy faster.
The purpose of this research is to demonstrate the
benefits of trading off communication for computation in
WSNs by exploiting the sensor node’s processing unit to
implement local processing and distributed computing. The
role of local processing is to improve the accuracy of
measurements made locally whereas distributed computing
is there to improve the performance of anomaly detection
and to make the WSN to be autonomous without the need
for centralized intelligence.
D.
Organization of the paper
In this paper, we will present a distributed computing
solution for the detection of leaks in water pipelines since
water losses due to leaks and/or bursts are a major problem
in most developing countries, including Cameroon’s WDN.
We practically demonstrate our proposed solution on a
water pipeline testbed, where we show how distributed
computing can be used to minimize the chances of having a
false alarm while also maximizing the leak detection
sensitivity of the system thereby increasing the performance
or reliability of leak detection in WPM. We implement a
distributed Kalman filter algorithm [24], on each sensor
node as the signal processing approach for filtering the
noisy signals collected by the sensors, thus improving the
accuracy of leak detection without needing to transmit
sensor readings over long distances to a central base station.
In our work, distributed computing is implemented using a
distributed Kalman filter algorithm and local processing is
implemented using a local Kalman filter.
The rest of the paper is organized as follows. Section II
reviews some related works in WPM using WSN with non-
intrusive sensors. A detailed description of our proposed
node
architecture
and
the
distributed
Kalman
filter
implemented are presented in Section III. In Section IV, we
describe the testbed used to demonstrate our solution, while
Section V is involved with the results and discussions and
Section VI concludes the paper and highlights the future
work.
II.
RELATED WORK
In this section, we review some works in literature that
are closely related to our study and which made use of
WSNs with non-intrusive sensors for leak detection in water
pipelines. The survey is based on the node architectures and
the leak detection algorithm implemented in each of these
studies.
In [19], the authors described PipeNet, a system based
on WSNs which aims to detect, localize and quantify bursts
and leaks and other anomalies in water transmission
pipelines. A laboratory pipe rig was constructed to evaluate
and illustrate the detection and localization of leaks using
acoustic and vibration data acquired from densely spaced
hydrophones
and
accelerometers
installed
along
the
pipeline. The adopted node was based on Intel commercial
mote composed of an ARM7 core, a 64KB RAM, a 512 KB
Flash, and a Bluetooth radio for communication. Local
processing at each node was implemented by using Fast
Fourier Transform (FFT) and compression while cross-
correlation was implemented at the central server as the leak
detection and localization algorithm. Although this work
gives a complete solution for WPM, some significant
drawbacks could be mentioned. On one hand, the use of
Bluetooth radio as the communication technology by this
14
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

work is not an energy-efficient solution. In addition, several
high processing algorithms were employed which affect the
power consumption of the nodes by accomplishing complex
tasks. Besides, despite the fact that data was collected at a
very high sampling rate and high frequency, which makes
this solution real-time, it leads to an increase in energy
consumption of the node. A final drawback is that of
adopting a centralized approach.
In [20], the authors reported on the design and
development of a multimodal Underground Wireless Sensor
Network (UWSN) for pipeline structural health monitoring.
The
sensor
node
consisted
of
a
PIC16LF1827
microcontroller, an eRA400TRS 433 MHz transceiver, two
temperature sensors and one Force Sensitive Resistor (FSR)
pressure
sensor.
According
to
the
authors,
power
consumption of the sensor nodes was minimized to 2.2 µW
based on one measurement every 6 h in order to prolong the
lifetime
of
the
network.
Two
drawbacks
could
be
highlighted from this work. One is the inability to perform
real time monitoring and the other results from adopting a
centralized approach for leak detection.
The
authors
in
[21]
proposed
a
solution
called
EARNPIPE which is comprised of a Leak detection
Predictive Kalman Filter (LPKF) and other methods to
detect and locate leaks. The data collected from sensors
were filtered, analyzed and compressed locally with the
same Kalman Filter (KF) based algorithm. A laboratory
testbed was constructed using plumbing components and the
nodes consisted of an Arduino Due board whose processing
unit is based on ARM cortex M3 microcontroller, FSR
sensors used for pressure measuring and Bluetooth for
communication. The main drawback of this solution is the
high-power consumption of the sensor nodes, resulting from
the choice of sensor node components such as using power-
hungry components like the Arduino Due and Bluetooth as
the processing and communication units, respectively. The
centralized
approach
adopted
for
leak
detection
and
localization is also another drawback as it leads to increase
in response time due to latency in delivering processed
information
and
also
uneven
distribution
of
energy
consumption among nodes in the network [11].
The authors in [22] presented the development of a
water pipeline monitoring system using vibration sensors.
The experimental setup consisted of a MPU6050 sensor for
measurement of vibration occurring along the pipes, an
Arduino Uno and Xbee module for wireless transmission to
a centralized decision support system. The results of the
experiment indicated that, for a pressure of 58.8 kPa, the
data recorded by the sensor could distinguish between the
presence of a leak and when there is no leak. The drawback
of this solution is the high energy consumption at the node
level resulting from the choice of power-hungry sensor node
components such as the Arduino Uno.
In [23], the authors presented an end-to-end water leak
localization system, which exploits edge processing and
enables the
use of battery-driven
sensor nodes. The
proposed system combined a lightweight edge anomaly
detection algorithm based on Kalman filter and compression
rates and a localization algorithm based on graph theory. It
was validated by deploying non-intrusive sensors measuring
vibrational data on a lab-based water test rig that had
controlled leakage and burst scenarios implemented. The
sensor nodes were based on Intel Edison development
boards and NEC Tokin ultra-high-sensitivity vibration
sensors. According to the authors, the edge anomaly
detection and localization elements of the systems produce a
timely and accurate localization result and reduce the
communication by 99% compared to the traditional periodic
communication. One main drawback of this work is that the
choice commercial element
(Intel Edison board) that
constitutes the sensor node, is not a cost-effective solution
for deployment in developing countries. In addition, the use
of Bluetooth as a means of communication by the nodes is
not energy efficient.
Given the drawbacks of the solutions proposed in
literature, the geographic context of our deployment which
is to be done in Cameroon (a third world developing
country), and being aware of the fact that the choice of
architecture and technology of the sensor node is crucial in
determining its performance and power consumption, we
seek a solution that is low-cost, feasible and also energy
efficient. This will be achieved by first optimizing the
computing capacity and power consumption of the sensor
nodes by integrating very low consumption processing,
sensing
and
communication
units
from
off-the-shelf
commercial components.
III.
MATERIALS AND METHODS
Price often has a direct bearing on the quality of a
node’s sensors and influences the accuracy of the result that
can be obtained from a single node [25]. Thus, using low-
cost sensors in WPM to detect leak signals is usually
characterized by noisy measurements and may result in false
alarms in the leak detection system. To minimize the errors
in measurement, we chose a one-dimensional Kalman filter
to remove the noise and to improve on the accuracy of the
measurement made locally at each node. In order to
maximize leak detection while minimizing the number of
false alarms, a distributed Kaman filter is proposed. In our
proposed solution, each sensor node runs a local Kalman
filter to obtain an accurate local estimate from the local
measurements, then later fuses it with those of its neighbor
to achieve a more accurate global estimate used for leak
detection. In this way, our proposed solution is autonomous
and does not need any central intelligence. To the best of
our knowledge, this is the first work that uses WSNs with
non-intrusive sensors and a distributed Kalman filter for
leak detection in WPM.
In this section, we present a description of the off-the-
shelf commercial components that make up the sensor node
hardware alongside with the distributed Kalman filter
15
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

algorithm used to improve on the reliability of leak
detection in WPM.
A.
Sensor Node Architecture
The architecture and technology of a sensor node is
crucial in determining its cost, performance and power
consumption. We develop a low-cost and low-power node
by
integrating
cheap
and
low-power
off-the-shelf
commercial components. Our proposed node consists of an
ESP32 from Espressif Systems as the processing unit, an
nRF24L01+
transceiver
module
from
Nordic
as
the
communication unit and an LSM9DS1 Inertia Measurement
Unit (IMU) from STMicroelectronics as the sensing unit.
1)
ESP32: It is a low-cost, low-power System on a
Chip
(SoC)
series
Wi-Fi
and
dual-mode
Bluetooth
microcontroller
[26].
Engineered
for
mobile
devices,
wearable
electronics,
and
Intenet
of
Things
(IoT)
applications,
ESP32
offers
Ultra-Low
Power
(ULP)
consumption through power saving features including fine
resolution clock gating, multiple power modes, and power
scaling [8]. The ESP32, when active (with the modem being
off and CPU being operational), consumes current in the
range of 20 mA ~ 68 mA and 10 µA ~ 150 µA in the ULP
state (only the RTC memory and RTC peripherals are
powered on and the ULP co-processor is functional). The
choice of this module is based on our exploration of
different sensor node architectures existing in
literature
[8][27][28]. Some of the features of the ESP32 include: an
Xtensa Dual-Core 32-bit LX6 microprocessor operating up
to 240 MHz, 520 kB Static Random Access Memory
(SRAM), 12-bit Analog-to-Digital Converter (ADC) with
up to 18 channels, a built-in Wi-Fi card supporting IEEE
802.11 b/g/n standards, and Bluetooth version 4.2 and
Bluetooth Low Energy (BLE). In addition, the ESP32 chip
features 40 physical General Purpose Input Output (GPIO)
pads, which can be used as general purpose I/O to connect
new sensors, or can be connected to an internal peripheral
signal [8]. This can permit the coupling of the nRF24L01+
transceiver module to the ESP32, thus making the sensor
node
to
have
a
complete
coverage
of
the
various
communication technologies used in IoT. Adafruit ESP32
feather (Huzzah32) is our chosen ESP32 board.
2)
nRF24L01+: This transceiver operates in the 2.400
to 2.4835 GHz band and is suitable for wireless applications
requiring very low power consumption. It is compliant with
the IEEE802.15.4 physical layer protocol, a technical
standard which defines the physical layer of low-rate
wireless personal area networks. The module connects to a
microcontroller to communicate via the SPI interface. With
peak RX/TX currents lower than 14 mA, a sub μA power 
down mode, advanced power management, and a 1.9 to 3.6
V supply range, the nRF24L01+ provides a true ULP
solution enabling months to years of battery life from coin
cell or AA/AAA batteries. The nRF24L01+ uses Gaussian
Frequency Shift Keying (GFSK) modulation [4], with data
rates from 250 Kbps to 2 Mbps. The range can be nearly
100m and 500m with and without an external antenna
respectively at maximum power [29][30]. It has longer
range than Bluetooth, consumes lower power than Wi-Fi
and is a cheaper alternative to Zigbee.
3)
LSM9DS1: It is a 9 Degree of Freedom (DOF) IMU
which features a 3D digital linear acceleration sensor, a 3D
digital angular rate sensor, and a 3D digital magnetic sensor.
The LSM9DS1 has a linear acceleration full scale of
±2g/±4g/±8g/±16g,
a
magnetic
field
full
scale
of
±4/±8/±12/±16
gauss
and
an
angular
rate
of
±245/±500/±2000 dps. It includes an I2C serial bus and an
SPI serial standard interface for interfacing with the
microcontroller. It has analog supply voltage ranging from
1.9 V to 3.6 V and the current consumption of the
accelerometer in normal mode is 600 uA [31].
B.
Configuration of the Node
The nRF24L01+ transceiver module and LSM9DS1
IMU sensor are interfaced with the ESP32 via the SPI and
I2C
interfaces,
respectively.
The
sensitivity
of
the
accelerometer in the LSM9DS1 sensor is configured to ±2g
since this has the highest sensitivity, which makes it most
appropriate for detecting vibrations of smaller magnitude
such
as
those
on
the
surface
of
water
pipe.
The
accelerometer collects the vibration in 3D, that is in the X,
Y and Z direction given by Ax, Ay and Az, respectively. The
magnitude of the vibration on the surface of the pipe was
computed by taking the resultant of the acceleration in all
three directions.
C.
Distributed Kalman Filter Algorithm
Kalman filtering is a technique of filtering information
which is known to have some error, uncertainty, or noise.
The goal of the filter is to take in this imperfect information,
sort out the useful parts of interest, and reduce the
uncertainty or noise [32]. There are two types of noise
associated with stochastic estimation, process noise and
measurement noise. Process noise can be explained as the
difference between the real system and the model, while the
measurement noise is the noise associated with the sensors
and instrumentation. The Kalman filter minimizes the
estimated error covariance in a linear stochastic system, has
low memory requirements and low complexity [33], and it
is capable of handling situations with a lot of noise or high
uncertainty in the data. This thus makes it a perfect
candidate for improving the accuracy of noisy measured
leak signal and detecting leaks in WPM using WSNs, as
nodes are constrained in memory, processing power and
energy [23][33][34]. Thus, to remove noise from the
readings obtained by the IMU sensors and improve on the
accuracy of measurement, we propose the use of a one-
dimensional Kalman filter.
The Kalman filter is based on two steps, comprising of a
prediction followed by a correction in order to determine the
16
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

states of the filter. This is sometimes called predictor-
corrector, or prediction-update [32].
In the first step, the estimated state x, at time k is
predicted from the updated state at time k-1. The prediction
of the current state and the covariance matrix is given by
[32] [33]:
k‾ = A
k-1 + Buk
(1)
Pk
‾ = A.Pk-1.AT + Qk
(2)
where
k‾ is the predicted state vector at time k, 
k-1 is the
previous estimated state vector, Pk
‾ represents the predicted
state error covariance matrix, A and B are matrices defining
the system dynamics, uk is the input vector, Pk-1 is the
previous estimated state error covariance matrix, and Q is
the process noise covariance matrix.
The second step is the correction or update step. This
step aims to get an improved estimate by incorporating new
measurements into the predicted estimate using the Kalman
gain (Kk).
(3)
k =
k‾ + Kk(zk - H k‾ )                           (4)                                        
Pk = (I – KkH)Pk
‾
(5)
where H is a matrix necessary to define the output equation,
R is the measurement noise covariance, I is an identity
matrix,
k is the estimated or updated state vector, zk is the
measurement at time k and Pk is the updated state error
covariance.
In the model equation, A and B are constants since we
are dealing with a one-dimensional Kalman filter. H is 1
because it is known that the measurement is composed of
the state value and some noise, while A is 1 because it is
assumed that the next value will be the same as the previous
one. We derived R from the LSM9DS1 datasheet. The linear
acceleration typical zero-g level offset accuracy given in the
datasheet is ± 90 mg, thus R is 0.09. Q is obtained after
some experimentation. From the datasheet, the sensor in a
steady state on a horizontal surface will measure 0 g on both
the X-axis and Y-axis, whereas the Z-axis will measure 1 g.
We did some experiments with different Q values and
selected the one that best approximated the acceleration
values at zero-g. Q equal to 0.001 best approximated the
zero-g acceleration values.
After noise removal, leaks can be detected accurately.
To maximize leak detection and minimize the number of
false alarms without using any form of centralized scheme,
we proposed the use of a distributed Kalman filter.
A number of distributed Kalman filter algorithms have
been presented in literature [24][34]-[36]. In our solution, we
implemented
the
distributed
Kalman
filter
algorithm
proposed in [24]. The authors in [24] presented a novel
event-triggered
distributed
state
estimator
based
on
a
consensus
Kalman
filtering
approach,
as
well
as
a
transmission triggering condition which essentially requires
that the local estimate and/or covariance of a given node be
sufficiently far away from the ones computed by neighbors
before there can be exchange of data between a node and its
neighbors. The paper addresses Distributed State Estimation
(DSE) over a network in which each node can process local
data as well as exchange data with neighbors. In their
proposed DSE algorithm, each node runs a local Kalman
filter and then, in order to improve its local estimate, fuses
the local information with the one received from its in-
neighbors [24].
The implemented distributed Kalman algorithm starts by
updating a local information pair (local estimate and state
error covariance matrix) in the correction step. In the
information exchange step, each sensor node determines
whether to transmit its information pair to its out-neighbors
or not based on the value of its transmission flag. The
transmission flag is set when the discrepancy between the
current updated local estimate and the last transmitted local
estimate is larger than some threshold, which can be varied
to achieve a desired behavior in terms of transmission rate
and performance. This means that the data currently
computed by a node's out-neighbors are no longer consistent
with the data locally available at the node. The transmission
test is designed so as to ensure that, in the case of no
transmission, the data currently computed by the out-
neighbors of a node are close to the data locally available at
the node, both in terms of mean and covariance. Thus, the
idea is to selectively transmit only when the discrepancy is
large. In the information fusion step, a node computes a
fused information pair from its local information pair and
those received from in-neighbors at time step k. For in-
neighbors that did not transmit based on their transmission
flag not being set, the node computes an approximate local
pair for such nodes from the latest local information pair
received from them. Finally, in the prediction step, the fused
information pair is propagated in time by applying the
Kalman filter prediction step to compute the local predicted
information pair at time k+1.
The distributed Kalman filter algorithm is implemented
on a network of two nodes with addresses given by 00 and
01 (octal representation) with the node 00 being the base
node or Personal Area Network (PAN) coordinator. The
nodes, having the Adafruit feather ESP32 (Huzzah32)
microcontroller as the processing unit, are programmed with
the Arduino C programming language using the Arduino
1.8.9 Integrated Development Environment (IDE). It should
be noted that Adafruit recommends the programming of the
Huzzah32 board using the Arduino IDE. The RF24Network
and RF24 libraries by TMRh20 are used to control the
nRF24L01+ transceiver interfaced to the Huzzah32 via SPI.
The firmware uploaded to the nodes after compiling the
distributed Kalman filter algorithm using the Arduino IDE
occupied a storage space of 225 KB. Global variables use 15
KB of dynamic memory, leaving 312 KB for local variables.
The implementation did not make use of any operating
system, but that will be done in future work.
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

IV.
EXPERIMENTAL SETUP
To practically demonstrate our proposed solution, a
laboratory testbed, whose configuration is similar to that of
a WDN in Cameroon, was built at the Electrical and
Electronic Laboratory of the University of Buea, Cameroon.
It consists of two plastic water storage tanks of capacity
1000 L (one being a storage tank placed on a tower of
height 9 m and the other being a supply tank placed beneath
the tower), a U shaped 13m long PVC pipe having an
external diameter of 32 mm and an internal diameter of 30
mm, and an electrical pump with 0.7 Hp motor providing a
maximum pump capacity of 40 L/min for filling the upper
storage tank. Leakage in the pipeline was induced by
opening a valve placed some 4 m away from the inlet of
water into the system. Figure 1 displays the testbed setup.
Figure 1. A cross-sectional view of the laboratory testbed.
Our setup consists of two sensor nodes namely Node 00
placed 1 m after the leak position and Node 01 placed 1 m
before the leak position, as shown in Figure 1. The
mechanical coupling between the pipe and IMU was done
by first attaching the IMU firmly to a polyurethane foam to
form a single entity. The entity was then glued to the pipe.
The role of the IMU sensors is to measure vibrations on the
surface of the pipe in the form of acceleration.
V.
RESULTS AND DISCUSSION
In this section, we discuss the laboratory deployment
results. To measure the performance of our leak detection
solution using distributed Kalman filter algorithm, we
simulated a leak at a single location along the pipeline, as
shown in Figure 1. We used two sensor nodes, one placed 1
m before and the other placed 1 m after the leak position. In
this deployment, the leak location is fixed, but we could
vary
the
locations
of
the
sensors
to
measure
the
effectiveness of our solution with different sensor positions.
We carried out measurements for three scenarios: no
Kalman
filter
implementation,
local
Kalman
filter
implementation
and
distributed
Kalman
filter
implementation. For these experiments, we took traces of
data collected from the two sensors, and compared the
effectiveness of the approach, that is the effect on leak
detection when the sensor nodes implemented distributed
computing and the case where they implemented only local
computing. In the case of local computing, the nodes run
only a local Kalman filter for improving the accuracy of
local measurements. In this scenario, each of the sensor
node predicts the next state from the previous state and then
collects local measurement which is then used to update the
predicted state to obtain a more accurate local estimate.
There is no exchange of local estimates between nodes in
the case of local computing. However, with distributed
computing, each of the sensor nodes first obtains its local
estimate by performing local computing. In order to achieve
a more accurate estimate, the node then shares its local
estimate with its neighbor and also fuses its local estimate
with the local estimate received from its neighbor. Figure 2
represents the data obtained from Node 00 (sensor after leak
position) when the distributed Kalman filter algorithm was
implemented on both sensor nodes while Figure 3 represents
the results obtained when only a local Kalman filter was
implemented on both sensor nodes without distributed
computing.
(a)
(b)
Figure 2. Estimated acceleration from Node 00 with measured acceleration
(a) and without measured acceleration (b) when distributed Kalman filter
was implemented
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

Figure 3. Estimated acceleration from Node 00 when distributed Kalman
filter was not implemented
From preliminary results obtained in the field, the
estimated acceleration of the pipe when there is no leakage
is below 1.01 g while an estimated acceleration greater than
1.01 g corresponds to a leakage on the pipe. This is because
when there is a leak, the flow turbulence increases and this
is significantly responsible for the vibrations of the pipe
walls, since the source of vibration is dissipated energy
caused by turbulence.
Comparing the results in Figure 2 (where distributed
Kalman filter is used) with those of Figure 3 (where only
local Kalman filter is used), reveals that a leakage scenario
can be isolated from a non-leakage scenario in the case
where distributed Kalman filter is used. This increases the
performance or reliability of detecting leaks and minimizes
the rate of false alarms. However, it is difficult to
distinguish a leakage scenario from a non-leakage scenario
when only a local Kalman filter is used. The data displayed
in Figure 3 has higher likelihood of producing false alarms
since the estimated acceleration computed by the local
Kalman filter is still having a lot of uncertainties. As shown
in Figure 3, the estimated acceleration is fluctuating rapidly
over short time periods. Applying the fixed threshold
acceleration of 1.01 g will result in a higher rate of false
alarms. This leads to multiple alarms and associated alarm
clears as an alarm is declared each time the estimated
acceleration fluctuates above the threshold value of 1.01 g
and as it fluctuates back below the threshold, the alarm
clears.
In our implementation, the Kalman filter performs 10
iterations to compute an optimal local estimate. When there
is no leakage, the measured acceleration on the pipe surface
is 1.00 g while the estimated acceleration on pipe surface
after performing Kalman filtering is 0.99 g.
VI.
CONCLUSION AND FUTURE WORK
This paper demonstrates the benefits of trading off long-
distance transmission for computation. We propose a
solution where local and distributed computing are used to
improve the accuracy of anomaly detection without the need
for long distance transmission to some central base station.
We practically demonstrated this in detecting leaks on a
water pipeline testbed.
In terms of sensor node architecture, unlike other works
for WPM using WSNs available in literature, we developed
a low-cost sensor node, which is feasible for deployment in
developing countries, from cheap off-the-shelf commercial
elements. The sensor node is composed of an ESP32
microcontroller as the processing unit, an nRF24L01+
transceiver module as the communication unit, and an
LSM9DS1 IMU as the sensing unit.
In
terms
of
leak
detection
algorithm,
we
use
a
distributed
Kalman
filter.
Each
node
independently
computes the optimal state estimate used for leak detection
by running a local Kalman filter to obtain an accurate local
estimate from local measurements and also fusing it with
those of its close neighbors. As indicated in the results
obtained, this improved on the accuracy of the vibrations
measured on the surface of the pipes using the IMU and
increased the reliability or performance of leak detection in
WPM using WSNs without needing to transmit data over
long distances to some central base station.
As future work, we intend to measure and establish an
energy profile of the sensor node, where the energy
consumption of each of the components that make up the
sensor node is taken into consideration. This will enable us
to estimate the energy consumption of the sensor node when
it is in the idle mode, when it is in computing mode, and
when it is transmitting. The end product will be a
benchmark that can be used to evaluate the performance and
energy consumption of different distributed algorithms. This
will provide insights on how different distributed algorithms
affect the performance and lifetime of a WSN. In addition,
we are currently working on implementing the distributed
Kalman filter algorithm as a multithreaded application on
the ESP32 using the real-time operating system FreeRTOS
[37]. We will investigate the effect of using FreeRTOS on
the performance and energy consumption of the sensor node
and also analyze the scenarios associated with consumption
measures, in order to establish the energy performance of
the proposed solution.
REFERENCES
[1]
S. R. Jino Ramson and D. J. Moni, "Applications of Wireless
Sensor Networks – A Survey" International Conference on
Innovations in Electrical, Electronics, Instrumentation and
Media Technology (ICEEIMT), Nov. 2017, pp 325-329.
[2]
T. Devanaboyina, B. Pillalamarri, and R. M. Garimella,
"Distributed Computation in Wireless Sensor Networks:
Efficient Network Architectures and Applications in WSNs,"
International Journal of Wireless Networks and Broadband
Technologies, vol. 4, no. 3, pp. 14-19, Jul. 2015.
[3]
H. Huang, "Distributed Computing in Wireless Sensor
Networks," in Encyclopedia of Mobile Computing and
Commerce, pp. 202-206, 2007.
[4]
P. Costa, L. Mottola, A. L. Murphy, and G. P. Picco,
"TeenyLIME: transiently shared tuple space middleware for
wireless
sensor
networks,”
In:
Proceedings
of
the
international workshop on middleware for sensor networks,
ACM, pp. 43-48, 2006.
19
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

[5]
F. Mieyeville, D. Navarro, and O. Bareille, "Autonomous
Wireless Sensor Network for distributed active control," IEEE
Vehicle Power and Propulsion Conference (VPPC), pp. 1-6,
Dec. 2017.
[6]
W. Zhang, B. Chen, H. Song, and L. Yu, “Distributed Fusion
Estimation
for
Sensor
Networks
with
Communication
Constraints,” 2016, doi: 10.1007/978-981-10-0795-8_1.
[7]
D. Datla, X. Chen, T. Tsou, and S. Raghunandan, "Wireless
Distributed Computing: A Survey of Research Challenges,"
Communications Magazine, IEEE, vol. 50, no. 1, pp. 144-
152, 2012.
[8]
M. A. Quintana-Suárez , D. Sánchez-Rodríguez, I. Alonso-
González, and J. B. Alonso-Hernández, "A Low Cost
Wireless Acoustic Sensor for Ambient Assisted Living
Systems," Applied Sciences, vol. 7, no. 877, pp. 1-15, 2017.
[9]
A.C. Sankaranarayanan,
R. Chellappa,
and
R. G. Baraniu,
"Distributed
Sensing
and
Processing
for
Multi-Camera
Networks," in Distributed Video Sensor Networks, London,
Springer, 2011.
[10] A. R. Iyeswariya, R. M. Shamila, M. JayaLakshmi, K.
Maharajan, and V. Sivakumar, "A study on Water Leakage
Detection in buried plastic pipes using Wireless Sensor
Networks," International Journal of Scientific & Engineering
Research, vol. 3, no. 10, Oct. 2012.
[11] E. D. Pascale, I. Macaluso, A. Nag, M. Kelly, and L. Doyle,
"The Network as a Computer: a Framework for Distributed
Computing over IoT Mesh Networks," IEEE Internet of
Things Journal, vol. 5, no. 3, pp. 2107-2119, 2018.
[12] M. Z. Abbas, K. A. Baker, M. Ayaz, and H. Mohamed, "Key
Factors Involved in Pipeline Monitoring Techniques Using
Robots and WSNs: Comprehensive Survey," Journal of
Pipeline Systems Engineering and Practice·, 2018.
[13] L. Ribeiro, J. Sousa, A. S. Marques, and N. E. Simões,
"Locating Leaks with TrustRank Algorithm Support," Water,
vol. 7, pp. 1378-1401, 2015.
[14] K. B. Adedeji , Y. Hamam, B. T. Abe, A. and M. Abu-
Mahfouz, "Towards Achieving a Reliable Leakage Detection
and Localization Algorithm for Application in Water Piping
Networks: An Overview," IEEE Access, pp. 20272 – 20285,
2017.
[15] C. Bell, "The World Bank and the International Water
Association to Establish a Partnership to Reduce Water,"
World
Bank,
2016.
[Online].
Available:
http://www.worldbank.org/en/news/press-
release/2016/09/01/the-world-bank-and-the-international-
water-association-to-establish-a-partnership-to-reduce-water-
losses. [Accessed 03 September 2019].
[16] African Development Bank Group, "Africa Infrastructure
Knowledge Program," 01 January 2016. [Online]. Available:
http://www.afdb.org/en/. [Accessed 03 September 2019].
[17] Y. H. Blaise, “Suffering for water, suffering from water:
access to drinking-water and associated health risks in
Cameroon,” J. Health Popul Nutr. Vol. 28, No. 5, pp. 424–
435, 2010.
[18] M. Henrie, P. Carpenter, and R. E. Nicholas, Pipeline Leak
Detection
Handbook,
Elsevier,
Cambridge,
MA
02139,
United States, 2016.
[19] I. Stoianov, L. Nachman, S. Madden, T. Tokmouline, and M.
Csai, “PIPENET: A Wireless Sensor Network for Pipeline
Monitoring,” 6th International Symposium on Information
Processing in Sensor Networks, Apr. 2007.
[20] A. M. Sadeghioon, N. Metje, D. Chapman, and C. Anthony,
“SmartPipes: Smart Wireless Sensor Networks for Leak
Detection in Water Pipelines,” J. Sens. Actuator Netw. Vol. 3,
pp. 64-78, 2014.
[21] F. Karray, A. Garcia-Ortiz, M. W. Jmal, A. M. Obeid, and M.
Abid. “EARNPIPE: A Testbed for Smart Water Pipeline
Monitoring using Wireless Sensor Network,” Computer
Science, vol. 96, pp. 285 – 294, 2016.
[22] M. Ismail, R. A. Dziyauddin, and N.A. Ahmad. “Water
pipeline monitoring system using vibration sensor”, IEEE
Conference on Wireless Sensors (ICWiSE), pp. 26-28, Oct.
2014.
[23] S. Kartakis, W. Yu, R. Akhavan, and J. A. McCann,
“Adaptive Edge Analytics for Distributed Networked Control
of
Water
Systems,”
First
International
Conference
on
Internet-of-Things Design and Implementation (IoTDI), Apr.
2016.
[24] G. Battistelli, L. Chisci, and D. Selvi, "A distributed Kalman
filter with event-triggered communication and guaranteed
stability," Automatica, vol. 93, pp. 75–82, 2018.
[25] H. Karl, and A. Willig, Protocols and Architectures Wireless
Sensor Networks, John Wiley & Sons, 2005.
[26] Expressif
Systems,
"ESP32
SoC,"
[Online].
Available:
https://www.espressif.com/en/products/hardware/esp32/overv
iew. [Accessed 03 September 2019].
[27] F. Karray, M. W. Jmal, A. Garcia-Ortiz, M. Abid, and A. M.
Obeid "A comprehensive survey on wireless sensor node
hardware platforms," Computer Networks, vol. 144, p. 89–
110, Oct. 2018.
[28] A. Maier, A. Sharp, and Y. Vagapov. “Comparative Analysis
and Practical Implementation of the ESP32 Microcontroller
Module for the Internet of Things,” Internet Technologies and
Applications, pp. 143-148, 2017.
[29] Nordic  Semiconductor,  ―nRF24L01+  Single  Chip  
2.4GHz Transceiver Product Specification v1.0, September
2008, available at
https://www.sparkfun.com/datasheets/Wireless/Nordic/nRF24
L01P_Product_Specification_1.0, [Accessed 03 September
2019].
[30] H. Saha, S. Mandal, S. Mitra, S. Banerjee, and U. Saha,
“Comparative Performance Analysis between nRF24L01+
and XBEE ZB Module Based Wireless Ad-hoc Networks”, I.
J. Computer Network and Information Security, vol. 7, pp.
36-44, 2017.
[31] STMicroelectronics, --- LSM9DS1 Datasheet, DocID025715
Rev 2, November 2014, available at
https://www.st.com/resource/en/datasheet/DM00103319,
[Accessed 03 September 2019].
[32] M. B. Rhudy , R. A. Salguero and K. Holappa, "International
Journal of Computer Science & Engineering Survey (IJCSES)
, vol. 8, no. 1, 2017.
[33] F. Karray, M. W. Jmal, and M. Abid, “High-performance
Wireless
Sensor
Node
Design
for
Water
Pipeline
Monitoring,” in The Eleventh International Conference on
Mobile
Ubiquitous
Computing,
Systems,
Services
and
Technologies, 2017.
[34] Y. He, S. Li, and Y. Zheng, "Distributed State Estimation for
Leak Detection in Water Supply Networks”," IEEE/CAA
Journal of Automatica Sinica, 2017.
[35] D. Marelli, M. Zamani, M. Fu, and B. Ninness, "Distributed
Kalman filter in a network of linear systems," Systems &
Control Letters, vol. 116, pp. 71–77, 2018.
[36] Z. Wu, M. Fu, Y. Xu, and R. Lu, “A distributed Kalman
filtering algorithm with fast finite-time convergence for
sensor networks” Automatica, vol. 95, pp. 63–72, 2018.
[37] O. Hahm, E. Baccelli, H. Petersen, and N. Tsiftes, “Operating
Systems for Low-End Devices in the Internet of Things: A
Survey,” IEEE Internet of Things Journal, vol. 3, no. 1, pp.
720 - 734, 2016.
20
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

