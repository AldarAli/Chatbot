Brainstorming as a Route to Improving Software Processes 
Celestina Bianco 
Systelab Technologies 
Barcelona, Spain 
email: celestina.bianco@systelabsw.com  
 
Abstract-This 
contribution 
shows 
how 
a 
“guided 
brainstorming” process facilitates the applicability of an 
assessment and process improvement model (such as for 
example SPiCE or CMMi) to Companies that develop Critical 
Software applications. For a Manufacturer that deals with 
time-to-market and customer satisfaction, as well as with 
regulations and laws, both efficiency and efficacy are 
mandatory for regulatory and commercial purposes, and 
become strictly related. A Process Improvement is often 
necessary for a company that develops and distributes critical 
software in order to establish a Quality System, which is a set 
of established procedures with measurable and auditable 
output. To be effective these procedures must be or become a 
natural part of the daily activities. To provide an efficient way 
to approach and implement the improvement plan, we suggest 
guided brainstorm sessions, which are a good interactive 
opportunity for team and formalization building.  Although 
the concept of brainstorming is not novel in organizations, it is 
generally a first approach to discussions that are later 
formalized. The use of this technique for definition of critical 
requirements or regulated activities is not common. For the 
definition of Quality Systems, a top-down approach (definition, 
training, 
roll-out, 
audit) 
is 
generally 
used 
whereas 
brainstorming can be considered bottom-up approach, from 
experience to formalization.  
Keywords-improvement; participation; experience; 
motivation. 
I. 
 INTRODUCTION  
This contribution shows how a “guided brainstorming” 
process facilitates the applicability of an assessment and 
process improvement model (such as SPiCE or CMMi) to 
Companies that develop Critical Software applications. It 
comes after a study for the definition of a simplified Spice 
model for Small Companies and a study about the 
application of Spice to Medical Devices. 
Critical Software manufacturing companies are generally 
of limited dimension, or small / medium departments inside 
large Companies. We define as critical,  the software that 
controls apparatus or activities that may imply direct benefits 
or risks for life, security, and the environment. In 
applications such as Medical Devices (our specific sector), 
the software has generally to provide and handle the overall 
protection to guarantee safety and liability of the system. 
The Manufacturer deals with time-to-market and 
customer satisfaction, as well as with regulations and laws. 
The risks derived from the product characteristics and from 
the processes applied to design control have to be 
considered, in addition to typical project and commercial 
risks.   
In this context, both efficiency and efficacy are 
mandatory for regulatory and commercial purposes, and 
become strictly related.  
A Process Improvement plan, tailored and tuned to the 
needs of the Company, is the main route to reach the trade-
off of the efficacy and efficiency required. 
What is an efficient and effective way to approach and 
implement the improvement plan for a Small Company? We 
suggest that guided brainstorm sessions are a good 
interactive opportunity for team and formalization building.  
The paper has the following structure. Section II presents 
maturity levels of processes following standard models, and 
develops brainstorming methods. Section III exposes 
potential evolution of topics under survey. 
 
II. 
PROCESSES FOLLOWING STANDARDS MODELS AND 
USE OF BRAINSTORMING METHODS 
From SPICE Level 2 to Level 3, from an informal 
process to an established process, the advantages of using a 
standard reference model for Process Improvement are 
multiple: 
 First of all, the model is ready and has been proved in a 
number of other companies. This may not be feasible as it is, 
as the Improvement Plan may need to be implemented with 
limited resources, often in parallel with the daily tasks 
assigned. This implies that small companies need a specific 
approach to make ROI of Process Improvement interesting 
for the business. 
Process Improvement requests for a company that 
develops and distributes critical software [2][3][4] have a 
main outcome, namely, the definition and control of a 
Quality System [5][6], which is a set of established 
procedures with measurable and auditable output. Translated 
in SPICE concepts [1], it means that Process Improvement 
has capability level 3 as a target. 
SPICE capability level 2 “certifies” that a controlled 
common process is followed within a Company, with 
activities that are carried out in a common way by all team 
and project members, with similar outcomes. When a 
Company reaches SPICE capability level 3, those processes 
that are managed and controlled have been formalized and 
established within the Company. 
To move from level two to the following levels, the steps 
to an effective and efficient improvement for a Small 
Company can be summarised as: 
500
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

• 
Select the set of basic processes that are needed for 
Design Control and ancillary mandatory activities 
• 
Define the processes 
• 
Define the support for processes (instructions, 
templates, checklists, etc.) 
A. Define your Quality System 
The set of processes to be established is the minimum set 
that covers the Project Life Cycle phases, including control 
of design, validation, configuration, risk management, and 
all others specific to the sector, required to comply with 
customer requirements and with regulations.  
In a Company that is active in a critical sector, most of 
those processes are implicitly defined. If a common approach 
is applied through the projects the Company is generally at a 
capability level 2. It has to move one step higher by 
establishing the processes mentioned above.   
 
1) Guided Brainstorming 
To acquire process formalization and description for roll-
out, training and control, we suggest using guided 
brainstorming sessions. 
Guided brainstorming goes beyond the purpose of 
allowing “everyone to say his own opinion freely about a 
subject”. Applied as a working tool, it is more structured: 
It is a guided meeting attended by people involved with 
the subject, often experts themselves.  
Each attendee replies with 3 to 5 answers or suggestions 
to each of the questions specified in the agenda of the 
meeting. Such as for example: “list which are, in your 
opinion, the 3 main characteristics of xxx”.  
Attendees get 10 to 15 minutes to prepare and write the 
answer separately. 
The answers are then presented and explained.  
They are rated and ranked for popularity (i.e. given a 
higher rating if more attendees gave same or similar answers 
then ranked by the resulting score).  
The first arguments in the list, the highest rated, are then 
refined and considered in detail. The result of the discussion 
is recorded.  
For example, if the question was “Which are the 3 main 
activities of process X?”, the three most rated proposed 
actions are detailed in terms of responsibility, flow, inputs, 
outputs, etc. 
 
A guided brainstorm is called with the purpose of 
describing and building a process or sub-process or 
supporting material for the required phases, with the 
contribution of all the attendees. The moderator of the 
meeting has prepared a minimum set of items that the list of 
answers HAS to contain, and will guide the participants to 
include them. The approach is based on the belief that the 
process is implemented and implicitly defined in the 
majority of the parts, and the people involved are the best 
candidates to describe, analyze and formalize it. The 
moderator will help to fill in the gaps. 
 
A step forward in a small company, equally relevant after 
the identification and definition of processes, is to define 
templates and practical instructions which will easily and 
cost-effectively carry out the tasks. Templates and 
instructions can also be the result of brainstorm sessions, 
generally with a smaller number of participants. 
 
2) Advantages 
What are the advantages of the technique?  
In the belief that in the Company processes are 
implemented, in order to reach a higher capability level and 
compliance with regulation, they must be formalized in 
procedures, and so, becoming repeatable and controllable. 
Brainstorm meetings are used to gather the practices, 
share and formalize with the advantage that: 
• 
All are protagonists and motivated 
• 
The base is a company culture already in place 
• 
Sharing is not imposing 
• 
Changes and up-grading of the practices, if needed, 
are easily accepted 
• 
Roll-out of the process will not find resistance as it is 
accepted “by definition” by people that contributed 
to build it 
• 
It is also an economical saving, as you don’t have to 
call in experts to define processes and train on them 
 
3) Drawbacks 
This technique is not a panacea; it presents some 
drawbacks. Warnings to be considered are: 
• 
As it is based on the use of existing knowledge and 
experience, it can be effective only if the activities to 
formalize are already part of the culture and daily 
experience. 
• 
Instead, if one wants to apply the technique to 
introduce new concepts, some extra technique and 
expertise is required. The outcomes of the 
brainstorm have to be reviewed and revisited after a 
pilot experience, often happening for processes such 
as risk management and metric collection. In these 
cases brainstorming becomes a good training 
technique. 
• 
The strength of this approach is its usage and sharing 
of experience. It is also a weakness as the quality 
system generated is recognized by the authors but 
does not have the “authority” of a recognized 
standard for their colleagues (no man is a prophet in 
his own land!). Mapping to the standard used as a 
reference to guide the brainstorm will be useful. 
• 
There is a time cost involved in the preparation of 
the meetings and formalization of the results, which 
is partially avoided by the use external experts. On 
the other side the ROI is high in terms of training 
and roll-out.  
• 
The outcome is not accepted without time limit and 
has to be periodically updated even if it may still be 
valid because:  
• 
People change and so does the approach 
• 
People need to be protagonists and new people need 
to be part of a revision to accept their own 
501
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

procedures as did the team defining the original 
system. 
 
Based on the analysis of the advantages and draw backs, 
and on the experience within our Company and companies 
with which we have worked using the method, we believe 
that the approach is appropriate and of high ROI in 
companies with real internal practical know how on the 
activities to be organized and formalized in processes. Most 
of the draw-backs have simple mitigations and the others are 
in fact the correct stimulus for continuous improvement and 
action plans. 
Once the Company reaches the level of compliance with 
regulation, continuous process improvement will focus on 
improving efficiency. Regulatory compliance is required to 
stay in the business. 
The above brings us to the conclusion that through the 
initial scope of the technique, small companies, and with 
expansion larger ones, gain the advantages of being people 
and company-culture centred.  
If the company is entering a new sector or business and 
the participants in brainstorming sessions do not have 
specific previous experience to share and formalize, the 
technique can still give good results. Advantages such as 
motivation, participation and buy-in are still relevant. In this 
case it will be necessary to acquire the help of a moderator 
who is expert in the sector of the application, able to guide 
and focus the questions and answers for the purpose of 
getting compliance with the requirements. 
 
B. Examples 
 
1) Example 1 – Brainstorming to define SW Design 
Process 
a) Rules: 
• 
Each participant receives two questions then is 
requested to give 1 to 5 replies to each question 
• 
There will be 15 min. for individual answering 
• 
The answers will be collected in a round table 
session. Rating of an answer is equal to the number 
of people giving the same one 
• 
The 5 most rated answers will be discussed to 
generate a draft procedure 
• 
The total time of the meeting will be two hours 
• 
The moderator will distribute minutes 
b) Questions: 
• 
list 5 major steps in a controlled Software 
Development  
• 
Process list 5 major activities to support and keep a 
project under control 
TABLE I.  
ANSWER QUESTION 1 
What 
Rating 
Requirements 
IIIII 
Design 
IIII 
Project Planning 
III 
Risk Analysis
III 
Integration and Test 
III 
Test Planning
II 
Test Protocol definition 
I 
Release control
I 
TABLE II.  
ANSWER QUESTION 2 
What
Rating 
Risk Management
IIII 
Release Planning
III 
Defect Management 
III 
Change Management 
III 
Configuration Control 
II 
 
A draft SW Design Procedure was defined based on the 
first table, defining tasks for each major step, responsibility 
and templates, based on current practices and suggestions for 
improvement. The second table defines the supporting 
activities and required metrics. Later on, parts of the SW 
design flow were detailed in dedicated procedures (for 
example requirement management, testing etc.) 
 
2) Example 2 – Brainstorming to define SW Testing 
Process   
a) Rules : same rules 
b) Questions: 
• 
list 5 major SW Testing Tasks 
• 
list 5 mandatory sections of a SW Test Plan 
• 
list 5 mandatory sections of a SW Test Case 
TABLE III.  
ANSWER QUESTION 1 
What
Rating 
Test Run
IIIII 
Design Tests
II 
Planning Test 
II 
Test Report
II 
Defect Management 
II 
Coverage Metrics
-- 
TABLE IV.  
ANSWER QUESTION 2 
What
Rating 
Features to be tested  
III 
Responsibility 
II 
Strategy
II 
Test Environment
II 
Version description 
-- 
Pass / Fail criteria
-- 
Defect Metrics
-- 
 
As the participants DO NOT have experience in 
organized formal testing, the third questions were even 
harder to reply to. The moderator enters the meeting with a 
pre-prepared list of answers expected and leads the group to 
understand which of the answers are out of scope, and which 
are missing. The tables of answers are completed and 
502
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

corrected and on this basis the brainstorm continues as 
shown in the previous example. 
 
C. Lessons learnt 
The method has been applied initially in our Company, 
when the Software department contained less than 20 people, 
and the testing team was starting with a group of 5, including 
myself.  
The Company had defined a Quality System based on 
international standards that applied to another division, 
working for Space missions. The Quality System was not 
tailored to the new department, and too complicated for a 
small team. On the other side, the people in the new 
department had good experience of Software engineering. 
Use of the brainstorming technique allowed us to define in a 
few months the nucleus of the Quality System that later 
became the base for the current one. The Quality System 
developed on this nucleus applies to a Company currently 
able to sell in international markets and to comply with 
different regulations and standards.  
The resistance in following procedures common to many 
Software Engineers has been overcome by the fact that 
everyone was in some way the author of the procedure, and 
because they were aware of the requirements beneath each 
process. 
The method was then applied in other companies which 
either wanted to gain more efficiency or comply with 
regulation. The two most successful examples involved the 
definition of the basic software design processes in a 
Company developing economically critical software, and the 
creation of the team and processes for Software verification 
and validation in a Company developing Medical Devices. In 
both Companies the Software team was unstructured and 
parts of the projects were assigned to consultants.  
Of major relevance for the first company was the 
formalization of the flow, in order to describe it to the 
external partners and monitor the progress and quality.   
For the second it was mandatory to define the process of 
testing to be able to check internal and external parts and to 
demonstrate to Regulatory Bodies and customers the quality 
of the system and the compliance with regulations.  
Both companies were aware that an efficient process had 
to be simple. They matched their goal defining a Quality 
System based on their experience, with the help and review 
of an expert. 
 
III. 
EVOLUTION OF THE METHOD FOR EVOLUTION OF THE 
QUALITY SYSTEM 
In our Company the roll-out of the first Quality System 
defined was relatively simple with low resistance, as 
described above but in five years difficulties appeared. 
The processes defined initially had been progressively 
updated to adapt them to the new standards, practices, 
projects. At that point the main problem was not the 
adequacy of the process, it was that the resistance to apply it 
had increased.  
The people who had defined the initial nucleus are no 
longer employed in the company, or have been assigned to 
other roles.  
Two years ago we decided to revisit all the defined 
processes and add new ones. We used approximately the 
same technique in a slightly different format, adapted to the 
current dimension of the company and to the variety of 
services. Brainstorming was used in larger groups to gather 
needs and experience and details then discussed in small 
working groups.  
We defined a set of procedures and activities similar to 
the original ones, produced by the new owners of the 
processes. 
REFERENCES 
[1] 
ISO/IEC FDIS 15504-2 Software engineering — Process assessment 
— Part 2: Performing an Assessment, Part 5: An exemplar Process 
Assessment Model 
[2] 
FDA 21 CFR 820 - Quality System Regulation US Food and Drug 
Administration, 1997 
[3] 
FDA General principles of software validation. US Food and Drug 
Administration, 2002 
[4] 
Medical Devices - Directive 2007/47/EC on Medical Devices, 
European Parliament and Council, 2007 
[5] 
ISO 9000:2008 Quality management systems - Requirements 
[6] 
ISO 13485:2003 Medical devices - Quality management systems -
Requirements for regulatory purposes 
 
503
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

