Ontology-Based Meta Model in Object-Oriented World Modeling
for Interoperable Information Access
Achim Kuwertz
Institute for Anthropomatics (IFA)
Karlsruhe Institute of Technology (KIT)
Karlsruhe, Germany
Email: achim.kuwertz@kit.de
Gerd Schneider
Fraunhofer IOSB - Institute for Optronics,
System Technologies and Image Exploitation
Karlsruhe, Germany
Email: gerd.schneider@iosb.fraunhofer.de
Abstract—Many systems rely on the integration of envi-
ronment observations provided by sensor systems to fulﬁll
their tasks. The Object-Oriented World Model (OOWM) is
an information fusion architecture allowing to integrate ob-
servations from heterogeneous sensing systems and to provide
consolidated information to higher level processing modules in
a compound system. Both, data integration and the provision
of consolidated information require to exchange information
in a meaningful and semantic interoperable way. To promote
the semantic interoperability in the OOWM, an ontology-
based meta model is presented, allowing to structure the
knowledge used to represent application domains as well as
interface information objects. This meta model deﬁnes an
upper level ontology for world modeling, which can be extended
by speciﬁc domain models and facilitates the integration of
additional sensor systems. To allow semantic access to OOWM
information, the use of OGC Web Feature Services and Sensor
Observation Services based on the meta model is proposed.
Keywords-object-oriented world modeling; knowledge repre-
sentation; ontology; semantic interoperability; WFS; SOS
I. INTRODUCTION
Information on their environment is a prerequisite to
the successful operation of many systems that support de-
cision making or even decide autonomously. Nowadays,
environment information often is available in considerable
quantities, provided by heterogeneous sensing systems. A
major challenge for making use of this information is to
manage it adequately. Such managing includes tasks like
the integration, processing and consolidation of information
as well as providing the means to make this information
accessible for further analysis and available to stakeholders.
One approach to this task of managing environment
information is the use of a world modeling system. World
modeling generates a computational representation of a
considered environment, both by capturing background in-
formation (i.e., general facts) on the application domain
and by acquiring current information on the state of the
environment based on observations and measurements. An
example of such a world modeling system is the Object-
Oriented World Model (OOWM) [1]. The OOWM is a
probabilistic information fusion architecture for managing
acquired sensor information. It has been successfully applied
to domains like autonomous systems [2], video surveillance
[3] and situation assessment [4].
The OOWM is suited for integrating and consolidating
observations from heterogeneous sensing systems. It has
been designed to act as a central information hub in a
compound system and can supply connected modules (like
higher level processing or analysis modules) with the in-
formation they need. Interoperability on a syntactic as well
as on a semantic level is a key issue for such compound
systems to function properly. It is needed on the one hand for
integrating observations from different sensing systems, as
input to the OOMW, and on the other hand, when providing
access to the information within the OOWM to higher level
processing modules. Currently, much conﬁguration effort
and possibly data transformations are needed for integrating
additional sensing systems into the OOWM. Concerning
information access, though standard-based mechanisms are
deﬁned within the OOWM, these mechanisms yet rely on
proprietary data models containing only sparse semantics.
To promote semantic interoperability and information
exchange to and from the OOWM, this contribution proposes
an ontology-based meta model for structuring the back-
ground information used to represent an application domain
as well as to formalize the information objects necessary for
providing semantically enriched access interfaces.
An example of an intelligent system based on the OOWM
is the ISR Analytics Architecture [5], a framework for
analyzing and accessing information related to the domain
of intelligence, surveillance and reconnaissance. Within this
architecture, a specialized software layer is responsible for
providing observation data from different sources to the
OOWM, and software modules from an analytics layer ac-
cess OOWM information to perform their analyses. Against
the background of such compound systems, we present how
the proposed ontology can be integrated into state-of-the-
art service-oriented interfaces like the Web Feature Service
(WFS) [6] or the Sensor Observation Service (SOS) [7]
standardized by the Open Geospatial Consortium (OGC).
This paper is structured as follows. Section II gives an
185
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

2 
© Fraunhofer IOSB  
OOWM: Architektur und Begriffe 
 Weltmodell stellt aktuellen Zustand der Domäne dar: Repräsentanten 
 Menge von Attributwerten samt Historie, verknüpft über Beziehungen 
 Wissen formalisiert Hintergrundinformation über Domäne: Konzepte 
 Taxonomische strukturierte Klassen für Repräsentanten 
 Definiert über Attribute und Relationen 
Real World 
(Entities) 
Model (Representatives & Concepts) 
World 
Model 
Background 
Knowledge 
Size 
Position 
Figure 1.
Overview of Object-Oriented World Modeling. Observed real-
world entities are represented as objects in the World Model, based on
concepts deﬁned in Background Knowledge given as taxonomic structure.
introduction to the OOWM approach. Section III discusses
semantic interoperability in world modeling. In Section IV,
the proposed meta model ontology is presented in detail.
Section V then introduces the web-services based access
interfaces to the OOWM and discusses an approach for their
model-driven implementation.
II. OBJECT-ORIENTED WORLD MODELING
The OOWM [1], [2] is a probabilistic data and informa-
tion fusion framework which allows to represent the current
and historic state of a considered real-world domain based
on observation data. Intended as a general framework for
world modeling, the OOWM is able to integrate observations
delivered by heterogeneous sensing systems and can thus
be employed in many different application domains. It is
designed to serve as a persistent memory structure and
information hub, providing higher level processing modules
with integrated information.
The OOWM is based on the concept of using observa-
tions of entity features (e.g., dynamic features like position
or static features like size), to model real-world entities
(e.g., objects, persons or abstracta). Observed entities and
relations are represented as structured objects in a dynamic
World Model. The objects are based on a priori modeled
Background Knowledge, which contains the concept classes
representing the entities and relationships occurring in an
application domain. This Background Knowledge is the
basis for evaluating, classifying and completing information
derived from observations as well as for querying the World
Model for information about observed entities. Figure 1
summarizes the Object-Oriented World Modeling approach.
For managing and updating the information stored in
the OOWM, information processing based on the Bayesian
methodology is employed. Information about attribute val-
ues of observed entities and the existence of relations is
represented by probability distributions, thus allowing the
OOWM to explicitly treat uncertainties e.g. arising from sen-
sor measurements. Using the Bayesian methodology, these
values can be subject to probabilistic information processing,
including updates and fusion with related or newly acquired
information, prediction in time, aging or further processing
within higher level modules. This information processing is
supported by probabilistic data association algorithms like
the JIPDA [8], relying on the spatial position of observa-
tions and entities for data association. The classiﬁcation of
observed entities based on their attribute values, i.e., the
mapping of an entity representation to a concept class, can
be handled within the Bayesian methodology as well.
All information processing within the OOWM is applied
on the basis of a discrete model of time. For each discrete
point of time, attribute values and relations get stored in
a state-of-the-art database, thus allowing to access domain
state information for past points of time. Such historic
information is needed for traceability of information states,
for example in applications where decisions are based on a
certain information set available up to this point of time.
III. SEMANTIC INTEROPERABILITY IN
WORLD MODELING
Interoperability is a key issue to systems like the OOWM
which integrate heterogeneous observations and provide
information to various higher level processing modules.
For information exchange, syntactic interoperability relies
on the deﬁnition of common data types and interfaces.
Semantic interoperability builds up on these deﬁnitions and
aims at allowing a meaningful interpretation of exchanged
information by deﬁning a semantic information model, e.g.,
an ontology. Within the OOWM, XML Schema deﬁnitions
or lightweight concept hierarchies are employed to ensure
syntactic interoperability, specifying the data structures used
to represent domain entities as well as their observations. An
expressive ontology supporting semantic interoperability has
not yet been employed as a conceptual domain model.
Besides structuring the representation of domain knowl-
edge, the semantics of interface information has to be
deﬁned. The OOWM up to now offers proprietary web-
service interfaces which e.g. allow to query for instances
or retrieve the XML-based data model. For integrating
additional sensing systems, no interface semantics exist. In
consequence, this integration requires manual conﬁguration
effort and the transformation of observation data.
A recent approach to the problem of integrating observa-
tions from heterogeneous sensor systems (employed e.g. by
[9]) is given by the OGC Sensor Web Enablement (SWE)
initiative [10]. In this approach, a conceptual UML data
model is speciﬁed, which allows sensor systems on the
one hand to publish their capabilities (e.g., which qualities
can be measured) and on the other hand to present their
measurements according to a standardized description [11].
The SWE approach is a signiﬁcant step towards promoting
interoperability. Yet, when regarded as formal conceptual
model for describing observations, the approach shows in-
consistencies and lacks the required precision for semantic
interoperability [12]. Furthermore, it relies on an externally
deﬁned ontology to describe a domain.
In order to promote semantic interoperability for the
OOWM, a meta structure for domain modeling as well as a
186
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

Metamodell_OOWM
21.09.2012 17:04:54
Page: 1-1(of 1*1)
Attribute
- Domain
- Unit
- DoB
Relation
 - Domain
 - Range
Entity
Domain Entity
relates
2
participatesIn
*
hasAttribute
1..*
describes
*
* hasAttribute
describes
*
Figure 2.
Conceptual view on the OOWM meta model, deﬁning how real-
world entities are represented as concepts in background knowledge. The
concept Domain Entity models the common features of entities of interest.
conceptual model for interface information is needed. This
can be achieved by employing an ontology as an integrated
approach. To facilitate the use of ontologies as semantic
background knowledge for domain modeling as well as to
describe interface information objects, we propose to deﬁne
and employ a meta model for knowledge representation
within OOWM. In [13], we took a ﬁrst step into this
direction by presenting an abstract meta model for object-
oriented domain modeling, developed with respect to enable
extension to existing domain models. In this contribution, we
propose a formal representation based on description logic,
implementing the model as an OWL DL [14] ontology. This
approach allows us to make use of well-supported ontology
reasoning technologies for tasks like querying or consistency
checking. Furthermore, it allows to share the meta model
ontology, e.g. allowing a sensor system not only to provide
its observations as an ontology instance, but to perform
remote consistency checks prior to transmitting its data.
Similar rationales and approaches are followed in [12], [15],
where ontologies are used to represent the fundamental terms
of OGC observations [11] or pervasive computing context.
Figure 2 displays the conceptual view on the OOWM
meta model. In OOWM Background Knowledge, basically
an entity-relationship [16] approach is used to model entities
occurring in a domain of interest. The most important
entities concerned in domain modeling are entities like
objects, persons, events or abstractions of these, which are
subsumed in the category of Domain Entity. A Domain
Entity is characterized by Attributes which describe its
qualities, given as the domain of an Attribute, and their
quantitative characteristics, given as a probability distribu-
tion representing the Degree-of-Belief (DoB) in these values,
and, if needed, a unit of measurement. Furthermore, relations
can be used to describe the relationships that possible exist
between entities in the application domain. A Relation is
characterized by a domain and a range of entities on which
this relation can be applied. The conceptual view in Figure 2
constitutes an adapted UML speciﬁcation of the meta model
presented in [13]. As a next step, the meta model, and thus
the ontology, has to be further reﬁned.
Metamodel-OOWM_Subdivision
23.09.2012 13:14:41
Page: 1-1(of 1*1)
Domain Entity
Quality
Scale
DoB
Entity
Feature Quality
Built-In Attribute
Basic Quality
Relation
Abstract
Conversion
Unit
hasConversion 1
*
*
hasScale
1
*
hasDoB 1
*
hasBasicQuality 1..*
*
hasRange
1
*
1 hasDomain
participatesIn *
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 3.
Basic concepts of the OOWM meta model reﬁned as ontology.
Attributes are represented by the categories of Quality, constituting attribute
domains, and Abstract, deﬁning the features needed to describe attributes.
IV. ONTOLOGY-BASED BACKGROUND KNOWLEDGE
In structured approaches to ontology design like [17]
an important step is to determine the intended scope of
the ontology. This includes the domain, uses and level of
abstraction the ontology is intended for. For the OOWM
meta model, the scope is to deﬁne a semantic meta structure
for background knowledge, in which entities from different
domains of interest as well as their observations can be de-
scribed according to the principles of the OOWM approach.
This structure is aimed at supporting a semantic access to the
observation information stored in the OOWM. It shall sup-
port different domains of interest, ranging from large-scale
surveillance applications to indoor robotic scenarios. As one
ontological commitment, a descriptive approach is chosen,
describing real-world entities on a level of abstraction cor-
responding to human environment perception. Furthermore,
a presentism and actualism approach is taken, making the
intended knowledge structure time-independent and free of
modality, since the concepts of time and probability will
have to be represented within the model itself.
For general knowledge to be structured within an ontol-
ogy, it is recommended to commit to the basic categories
of an existing upper level ontology. For the OOWM meta
model, the descriptive foundational ontology DOLCE [18]
was chosen. In DOLCE, a top-level category named partic-
ulars is subdivided into the categories of endurants (entities
which are present in their whole at any time and can truly
change with time), perdurants (entities existing only in time),
qualities (entities that can be observed) and abstracts (entities
without spatial or temporal qualities). This high level cate-
gorization is adopted to structure the OOWM meta model
reﬁnement, as depicted in Figure 3. Besides Relation the
concepts of Domain Entity, Quality and Abstract are deﬁned.
Domain Entity constitutes the union of all the DOLCE
endurants and perdurants which represent the entities being
subject to domain modeling. Though not depicted in Figure
3, the categories of Endurant and Perdurant are deﬁned
as subcategories of Entity. A Quality describes measurable
entities and is further subdivided into a Basic Quality, which
constitutes a one-dimensional measurand (like a length, an
187
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

Attribute_Details
23.09.2012 13:34:21
Page: 1-1(of 1*1)
Scale
Ratio-Scaled
Attribute
Interval-Scaled
Attribute
Continuous
Attribute
Ordinally-
Scaled Attribute
Discrete
Attribute
Absolute-
Scaled Attribute
Nomimally-
Scaled Attribute
Discrete DoB
Continuous
DoB
Gaussian DoB
Mean:double
Variance:double
Weight:double
DoB
Discrete_DoB_Element
Value:double
Probability:double[ >0.0, <= 1.0]
Gaussian
Mixture DoB
hasComponent
2..*
*
hasElement 1..*
*
hasDoB
1
hasDoB
1
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 4.
Implementation of attributes in the reﬁned OOWM meta model.
Each attribute has a Scale, (e.g., a nominal, ordinal or cardinal scale) and
each Scale is associated with a DoB distribution.
angle, etc.), and a Feature Quality, which is build using Basic
Qualities (like a position or bounding box). Abstract entities
are used to characterize the features of attributes like their
Scale, DoB distributions and Unit.
Due to the dedication to DOLCE categories, Attributes in
the reﬁned meta model are represented by using the concept
of Quality in conjunction with the concept of Abstract. A
probabilistic OOWM attribute is thus represented as seman-
tic net in the model. Qualities constitute the possible do-
mains of attributes. Basic Qualities need to specify a Scale.
The Scale concept deﬁnes subconcepts for the different types
of measurement scales, i.e., nominal, ordinal, and cardinal
scales. Each Scale is associated with a DoB distribution. As
subconcepts of DoB, discrete distributions (specifying a list
of value-probability pairs), normal distributions (represented
by a mean value and a variance) and sums of normal
distributions are modeled. For cardinally scaled attributes, a
Unit of measurement has to be speciﬁed. The OOWM meta
model for example speciﬁes different units of measurement
for describing a length, an angle or a velocity. Each Unit of
measurement is associated with a Conversion that character-
izes how different units can be converted (e.g., by scaling
or shifting). For associating Qualities and a respective Unit,
SWRL [19] rules can be employed. Figure 4 illustrates the
modeling of attributes in the OOWM meta model. Besides
using probabilistic attributes, a Built-In Attribute concept
needs to be deﬁned for specifying deterministic values, e.g.
for the handling of time.
For representing interface information like observation
results and structuring background knowledge, the concept
of Endurant has to be further reﬁned. This subdivision is
illustrated in Figure 5, where categories taken from DOLCE
are depicted in gray. Physical Endurant forms the basis for
modeling physical entities in the domain of interest. The
most important subconcept is Physical Object, which models
all entities that exist in space as an entire object. Physical
Endurants
23.09.2012 13:43:22
Page: 1-1(of 1*1)
Observation
Result
Physical
Endurant
Non-physical
Endurant
Reference
System
Physical Object
Temporal
Reference
System
Spatial
Reference
System
Endurant
Spatial
Observation
Result
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 5.
The structure of Endurants as used by the OOWM meta model,
with gray boxes representing DOLCE categories. Observations are modeled
as the result of an observation process.
Objects are constituents to the union concept Domain Entity.
The other important contribution to this union concept
is made by temporal entities (which are subconcepts of
Perdurant) like Events or Processes.
As Non-Physical Endurant, the OOWM meta model de-
ﬁnes the concepts of Observation Result and Reference
System. Observation Result constitutes the most important
concept for data input to the OOWM. Contrary to [11], [12],
observations are not considered as a process, but as a piece
of information representing its results. Thus, the concept
of Observation Results is modeled as Endurant. A Spatial
Observation Result represents an observation containing a
spatial reference. Figure 6 depicts the deﬁnition of obser-
vation results. For deﬁning spatial and temporal references,
the meta model deﬁnes the concept of Reference System.
For stochastic information processing as employed in the
OOWM, observations as well as entity representations have
to be assigned with a tangible time reference. Due to this,
the OOWM meta model has to deﬁne time entities and
a temporal reference system. The handling of time in the
OOMW meta model is based on the two notions of time
instant and time interval, as used for example in OWL-
Time [20] and ISO 19108 [21] (here the notion period
is used instead of interval). As time instant, the OOWM
meta model deﬁnes the concept of Point of Time. Points of
time are described by a Temporal Position, i.e., a temporal
distance to a reference point of time. As mentioned earlier,
Temporal Attributes like Temporal Positions constitute Built-
In Attributes which are not modeled to be probabilistic but
deterministic. Subconcepts of Temporal Position are thus
directly represented by standard data types. The details of
time representation within the OOWM meta model are de-
picted in Figure 7. As standard Temporal Reference System,
a Gregorian calendar with a ISO 8601 dateTime [22] as
Temporal Position description is employed. If needed, the
meta model can be extended (in analogy to [21]) by specify-
ing an additional Temporal Reference System, which has to
deﬁne a temporal reference point, denoting its beginning, as
a Gregorian DateTime. Discrete Relative Time is an example
of such a Temporal Reference System.
188
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

Observation
24.09.2012 09:36:34
Page: 1-1(of 1*1)
Observation
Result
Identifier
Spatial
Observation
Result
Domain Entity
Spatial Position
Temporal
Position
Feature Quality
hasSpatialPosition
1
*
hasTemporalPosition
1
*
observedEntity
1
*
observedQuality
1..*
*
observedInstance
1
*
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 6.
Deﬁnition of the concept Observation Result, which models
the result of an observation process as information object. It speciﬁes the
Domain Entity and Quality observed as well as the observation time.
Time_References
22.09.2012 17:00:35
Page: 1-1(of 1*1)
Built-In Attribute
Temporal
Attribute
Temporal
Position
Duration
Discrete
Duration
DateTime
Period
value:string
xsd_duration
Discrete
Temporal
Position
value:int
Gregorian
DateTime
value:dataTime
Temporal
Reference System
Discrete
Relative Time
hasIntervalLenght
1
*
hasTemporalReferenceSystem
1
*
hasTemporalReferenceSystem
1
*
hasBeginning
1
*
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 7.
Handling of time in the OOWM meta model. As Temporal
Attributes, the concepts Temporal Position and Duration are deﬁned. The
concept Temporal Reference System allows extensions to these concepts.
The handling of geospatial information in the meta model
concerns qualities like positions, locations and extends. A
Spatial Position, being a Quality associated to a Physical
Object, is speciﬁed using the known World Geodetic System
84 (WGS84) in the meta model. Similar to the handling
of time, it is possible to add a Spatial Reference System
deﬁning additional Spatial Positions, for example a local
Cartesian coordinate system.
V. WEB-BASED INFORMATION ACCESS INTERFACES
As described in Section III the OOWM currently does not
provide semantic access interfaces for inserting and retriev-
ing OOWM information. To overcome these limitations we
propose the use of standardized web-service interfaces and
a model-based approach, relying on the proposed ontology,
for generating these interfaces. As the OOWM mainly
represents geographic information, the proposed interfaces
are based upon the well-standardized and widely accepted
OGC standards Web Feature Service (WFS) [6] and Sensor
Observation Service (SOS) [7], and the currently discussed
OGC standard Sensor Event Service (SES) [23].
Figure 8 depicts the current OOWM architecture (see
[24]) with the proposed service-oriented extensions. In the
SOS
WFS
SOS-I
SES
Object Storage
Feature Request 
Handler
Observation 
Request Handler
Observation 
Event Handler
Object 
Classification
Object Update
Object 
Instantiation
Observation 
Association
Ontology 
Model
Object-Oriented World 
Model
World Model
Background 
Knowledge
Request/
Response
Request/
Response
Publish/
Subscribe
Request/
Response
Figure 8.
Service-oriented interface deﬁnitions. The OGC standard WFS,
SOS and SES are employed for accessing OOWM information.
context of the OOWM, the SOS can be used for retrieving
information concerning speciﬁc entity attributes according to
a request/response protocol initiated by a client application
like a high level processing module. In case an application
wants to get actively informed about new OOWM informa-
tion, the SES provides an event notiﬁcation to previously
subscribed consumers (push mode). Additionally, the WFS
provides a request/response interface for the OOWM that
can be used to retrieve aggregated, object-based entity
information, which are to be represented as OGC features
[25]. As a fourth OGC compliant interface an advanced SOS
(SOS-I; I = Insert) [7] interface is available to allow insertion
of observations supplied by sensing systems.
Besides the proposed interfaces the extension includes the
depicted components Feature Request Handler, Observation
Request Handler and Observation Event Handler. These han-
dlers process incoming OGC compliant service requests and
respond with adequate OGC compliant service results. The
handlers operate on the Object Storage of the World Model
and make use of the Ontology Model stored in Background
Knowledge. This Ontology Model constitutes a domain-
speciﬁc extension of the OOWM meta model ontology,
thus describing interface objects as well as domain entities.
Figure 9 depicts an exemplary domain-speciﬁc ontology as
extension to the OOWM meta model. The taxonomy of
domain entities is to be used in the WFS, SOS and SES for
querying object information and in the SOS-I for inserting
new observation data to the OOWM.
The SOS-I in conjunction with the Ontology Model can
be used to facilitate the semantic integration of additional
sensing systems into the OOWM. When using the SOS-I to
provide observations to the OOWM, each sensing system
will have to describe its observations as an information
object which allows to instantiate an Observation Result
189
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

Example
22.09.2012 16:49:29
Page: 1-1(of 1*1)
Vehicle
Land_Vehicle
Pickup
Van
Car
Physical_
Object
Feature_Quality
WGS84_
Position
Orientation
SUV
Truck
Basic_Quality
Speed
hasQuality
hasQuality
hasQuality
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Click to buy NOW!
P
D
F
-
X
C
h
a
n
g
e
w
w
w
.
d
o
c
u
-
t
r
a
c
k
.
c
o
m
Figure 9.
Exemplary domain model based on the OOWM meta model.
The taxonomy of concepts is used for queries in the WFS and SOS.
concept in the OOWM. Thus, each SOS-I message must
at least specify
• a feature of interest describing either a Domain Entity
concept (e.g., Vehicle) or a reference to an known
Domain Entity instance (then acting as Identiﬁer),
• an observed property describing the Feature Quality
which was observed,
• a measurement value speciﬁed as DoB in a unit of
measurement corresponding to the observed quality,
• and a time stamp representing the Temporal Position.
Additionally, a Spatial Position can be speciﬁed. An example
of an XML encoded SOS-I message is given in Listing 1.
<sos:InsertObservation service="SOS" v e r s i o n ="2.0.0">
<sos:observation> [...]
<om:name xlink:href=".../BkOnto.owl#WGS84_Position"/>
<om:value> <gml:Point gml:id="Spatial_Position">
<gml:pos srsName=".../EPSG/0/4326">54.9 10.5</gml:pos>
</gml:Point> </om:value> [...]
<om:phenomenonTime>
<gml:TimeInstant gml:id="Temporal_Position">
<gml:timePosition>2012-09-25T13:01:00.7Z</
gml:timePosition>
</gml:TimeInstant></om:phenomenonTime>
<om:observedProperty xlink:href=".../BkOnto.owl#Speed"/>
<om:featureOfInterest xlink:href=".../BkOnto.owl#
Land_Vehicle"/>
<om:result> [...]
<swe:elementType name="Speed_GaussianDoB"> [...]
<swe:field name="GaussianDoB_Mean">
<swe:Quantity definition=".../BkOnto.owl#Mean">
<swe:uom code=".../BkOnto.owl#milesperhour"/>
</swe:Quantity> </swe:field>
<swe:field name="GaussianDoB_Variance">
<swe:Quantity definition=".../BkOnto.owl#Variance">
<swe:uom code=".../BkOnto.owl#milesperhour"/>
</swe:Quantity> </swe:field> [...]
</swe:elementType>
<swe:encoding>
<swe:TextBlock decimalSeparator="." tokenSeparator=",
" blockSeparator="@@"/>
</swe:encoding>
<swe:values>45,2.5@@</swe:values>
[...]
</sos:InsertObservation>
Listing 1.
Excerpt of an XML encoded SOS-I message providing
observation information about the velocity of a land vehicle.
For the WFS, the structure of a result message is deﬁned
by the queried feature, which in the OOWM corresponds to
the queried Domain Entity. When querying for entity infor-
mation via the WFS, the concept taxonomy will be searched,
Ontology model
Standards
OGC
Model-to-Model
Transformation
Combined model
OGC
Model-to-Text
Transformation
Configuration
Files
Code
00011101
11001101
00011100
Figure 10.
Model transformation process employed in a model-driven
approach for generating application code for SOS-I clients in the OOWM.
acquiring and returning all instances of subconcepts for the
queried concept, described as instance of the queried concept
(according to a cast to a superclass).
To ensure for client applications to comply to OGC
standards as well as to the OOWM conceptual domain
model, methods of model-driven software development (e.g.,
[26]) can be applied for generating parts of a client imple-
mentation, based upon the presented OGC-based interface
standards and the OOWM Ontology Model. An automated
model transformation process for this purpose is depicted in
Figure 10. It can be based upon existing modeling tools
like the Eclipse Modeling Project [27]. As initial parts,
relevant OGC standards and the Ontology Model form
the input to the transformation process. The ﬁrst step of
the process is a model-to-model transformation weaving
OGC interface deﬁnitions and ontology to one combined
model that includes both source models. The second step
is a model-to-text transformation of the combined model,
resulting in platform speciﬁc code and conﬁguration ﬁles.
As advantages of this model-driven approach, client ap-
plications can be provided with an integrated data model.
This data model can address syntactic and semantic aspects
of information exchange with the OOWM by providing
common data structures as well as formalizing their con-
ceptual meaning. In addition, remote consistency checks on
observation data can be performed prior to transmitting it to
the OOWM via SOS-I, for ensuring model-compliant data.
An issue to be solved within this approach is to deﬁne a way
for receiving the ontology model via OGC web-services in
a standard-conform manner.
VI. CONCLUSION
For
promoting
semantic
interoperability
in
Object-
Oriented World Modeling, an ontology-based meta model
for structuring domain knowledge and interface information
objects has been presented. This meta model facilitates the
integration of additional sensing systems into the OOWM
and enables information exchange on a semantic level. Fur-
thermore, it can serve as an overarching ontology for various
domain models when employing the OOWM in different ap-
plication domains. When implemented as a formal ontology,
reasoning and consistency checks can be performed by avail-
able tools, thus allowing sensing systems to perform such
190
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

checks prior to transmitting their observations. Furthermore,
semantic interface descriptions for a web-service access to
OOWM information based on standards like OGC WFS and
SOS have been proposed on the basis of the meta model.
Beside promoting interoperability, the proposed meta
model ontology can be used as structure for semantically
extending an existing background knowledge by concept
learning approaches. In addition to formal knowledge shar-
ing as enabled by ontologies, it is even possible to perform
a kind of distributed concept learning in this way.
REFERENCES
[1] I. Gheta, M. Heizmann, and J. Beyerer, “Object Oriented En-
vironment Model for Autonomous Systems,” in Proceedings
of the second Sk¨ovde Workshop on Information Fusion Topics,
H. Bostr¨om, R. Johansson, and J. van Laere, Eds.
Sk¨ovde
Studies in Informatics, 2008, pp. 9–12.
[2] A. Belkin, A. Kuwertz, Y. Fischer, and J. Beyerer, “World
Modeling for Autonomous Systems,” in Innovative Infor-
mation Systems Modelling Techniques, C. Kalloniatis, Ed.
InTech, 2012.
[3] T. Emter, I. Gheta, and J. Beyerer, “Object Oriented Environ-
ment Model for Video Surveillance Systems,” in Fraunhofer
Symposium Future Security. 3rd Security Research Confer-
ence, 2008, pp. 315–320.
[4] A. Kuwertz, Y. Fischer, B. Essendorfer, and E. Peinsipp-
Byma, “Using Context Knowledge for Maritime Situation
Assessment,” in Proceedings of 3nd International WaterSide
Security Conference (to appear), 2012.
[5] J. Sander, A. Kuwertz, G. Schneider, and B. Essendorfer,
“ISR Analytics: Architectural and Methodic Concepts,” in
Proceedings of the 7th Workshop on Sensor Data Fusion:
Trends, Solutions, Applications (SDF 2012), 2012.
[6] P. A. Vretanos, “OpenGIS R⃝ Web Feature Service 2.0 In-
terface Standard (OGC 09-025r1),” Version 2.0, OpenGIS
Implementation Standard, Nov. 2010.
[7] A. Broering, C. Stasch, and J. Echterhoff, “OGC R⃝ Sensor
Observation Service Interface Standard (OGC 12-006),” Ver-
sion 2.0, OpenGIS Implementation Standard, Apr. 2012.
[8] D. Musicki and R. Evans, “Joint Integrated Probabilistic Data
Association - JIPDA,” in Proceedings of the Fifth Interna-
tional Conference on Information Fusion, 2002, vol. 2, 2002,
pp. 1120 – 1125.
[9] C. Erbas, F. T. Cetin, B. Yilmaz, and E. Akagunduz, “Open
and Interoperable Maritime Surveillance Framework Set to
Improve Sea-Border Control,” in Proceedings of the 7th Work-
shop on Sensor Data Fusion: Trends, Solutions, Applications
(SDF 2012), 2012.
[10] M. Botts, G. Percivall, C. Reed, and J. Davidson, “OGC
Sensor Web Enablement: Overview And High Level Archi-
tecture.” OGC, Tech. Rep., Dec. 2007.
[11] ISO 19156:2011 – Geographic information - Observations
and measurements, ISO Std., 2011.
[12] F. Probst, “An Ontological Analysis of Observations and
Measurements,” in Proceedings of the 4th. International
Conference on Geographic Information Science (GIScience
2004), 2006, pp. 304–320.
[13] A. Kuwertz, “Towards Adaptive Open-World Modeling,” in
Proceedings of the 2011 Joint Workshop of Fraunhofer IOSB
and Institute for Anthropomatics, Vision and Fusion Labora-
tory, J. Beyerer and A. Pak, Eds.
Karlsruhe: KIT Scientiﬁc
Publishing, 2012, pp. 139 – 161.
[14] M. Dean and G. Schreiber, “OWL,” Feb. 2004.
[15] X. H. Wang, D. Q. Zhang, T. Gu, and H. K. Pung, “Ontol-
ogy Based Context Modeling and Reasoning using OWL,”
Pervasive Computing and Communications Workshops, IEEE
International Conference on, 2004.
[16] P. P.-S. Chen, “The entity-relationship model toward a uni-
ﬁed view of data,” ACM Transactions on Database Systems
(TODS), vol. 1, no. 1, pp. 9–36, Mar. 1976.
[17] A. De Nicola, M. Missikoff, and R. Navigli, “A Software
Engineering Approach to Ontology Building,” Information
Systems, vol. 34, no. 2, pp. 258 – 275, Apr. 2009.
[18] A. Gangemi, N. Guarino, C. Masolo, A. Oltramari, and
L. Schneider, “Sweetening Ontologies with DOLCE,” in Pro-
ceedings of the 13th International Conference on Knowledge
Engineering and Knowledge Management. Ontologies and
the Semantic Web, ser. EKAW ’02.
London, UK: Springer-
Verlag, 2002, pp. 166–181.
[19] I. Horrocks, P. F. Patel-Schneider, H. Boley, S. Tabet,
B. Grosof, and M. Dean, “SWRL: A Semantic Web Rule
Language Combining OWL and RuleML,” W3C Member
Submission, May 2004.
[20] J. R. Hobbs and F. Pan, “Time Ontology in OWL,” September
2006. [Online]. Available: http://www.w3.org/TR/owl-time/
[21] ISO 19108:2002 – Geographic information – Temporal
schema, ISO Std., 2002.
[22] ISO 8601:2004 – Data elements and interchange formats –
Information interchange – Representation of dates and times,
ISO Std., 2004.
[23] J. Echterhoff and T. Everding, “OpenGIS R⃝ Sensor Event
Service Interface Speciﬁcation (proposed) (OGC 08-133),”
Version 0.3.0, OpenGIS R⃝ Discussion Paper, Oct. 2008.
[24] Y. Fischer and A. Bauer, “Object-Oriented Sensor Data Fu-
sion for Wide Maritime Surveillance,” in Proceedings of 2nd
NURC International WaterSide Security Conference, 2010.
[25] OGC Reference Model – OGC 08-062r7, Version 2.1, OGC
Std., Dec. 2011.
[26] M. Voelter, T. Stahl, J. Bettin, A. Haase, and S. Helsen,
Model-Driven Software Development.
John Wiley & Sons,
2006.
[27] Eclipse Modeling Project, http://www.eclipse.org/modeling/.
191
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-246-2
ICONS 2013 : The Eighth International Conference on Systems

