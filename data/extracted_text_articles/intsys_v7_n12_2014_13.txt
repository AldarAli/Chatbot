156
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Applying a Layered Model for Knowledge Transfer  
to Business Process Modelling (BPM) 
 
Felix Schiele, Fritz Laux  
Fakultät Informatik 
Reutlingen University  
Reutlingen, Germany 
Felix.Schiele@Reutlingen-University.de 
Fritz.Laux@Reutlingen-University.de 
Thomas M Connolly 
School of Computing 
University of the West of Scotland 
Paisley, UK 
Thomas.connolly@uws.ac.uk
 
 
Abstract— Knowledge transfer is very important to our 
knowledge-based society and many approaches have been 
proposed to describe this transfer. However, these approaches 
take a rather abstract view on knowledge transfer, which 
makes implementation difficult. In order to address this issue, 
we introduce a layered model for knowledge transfer that 
structures the individual steps of knowledge transfer in more 
detail. This paper gives a description of the process and also an 
example of the application of the layered model for knowledge 
transfer. The example is located in the area of business process 
modelling. 
Business 
processes 
contain 
the 
important 
knowledge describing the procedures of the company to 
produce products and services. Knowledge transfer is the 
fundamental basis in the modelling and usage of business 
processes, which makes it an interesting use case for the 
layered model for knowledge transfer.   
Keywords-knowledge transfer; knowledge conversion; impart 
knowledge; business process modelling. 
I. 
 INTRODUCTION 
This paper presents an approach that describes the 
transfer of knowledge. It extends the original paper “A 
Layered Model for Knowledge Transfer” [1] with an 
example in the area of business process modelling. The 
application in the area of business process modelling pursues 
two goals. First, the example intends to make the mode of 
operation of the layered model for knowledge transfer 
apparent. Second, the application in the area of business 
process modelling is to show how the layered model can be 
used in solving real problems in modelling of business 
processes. 
In our knowledge-based society, the relevance of 
knowledge transfer is increasing. Knowledge management 
and the understanding of economic coherency can help an 
organization to handle the challenges of an increasingly fast-
evolving environment [2]. The transfer of knowledge from 
one person to another is of major importance for enterprises 
[3]. The Socialization, Externalization, Combination, and 
Internalization (SECI) Model of Nonaka and Takeuchi [4] is 
an approach that supports organizations in the handling of 
the important knowledge resource and describes knowledge 
conversions between internal and external knowledge. 
However, the SECI Model does not contain precise 
descriptions of knowledge transfer. This paper aims to 
introduce a model for knowledge transfer that makes 
problems emerging during the transfer visible and 
explainable, and facilitates its implementation through a 
more detailed and clearer structuring. 
This paper is structured as follows: Section II discusses 
and provides working definitions of data, information and 
knowledge. Section III discusses existing communications 
models and Section IV proposes a model of knowledge 
transfer that aims to reduce errors on each of the knowledge 
levels. Section V describes an application of the layered 
model for knowledge transfer in the area of business 
processes. Section VI draws conclusions and discusses future 
directions. 
II. 
DATA, INFORMATION, KNOWLEDGE, CONVERSATION, 
AND COMMUNICATION  
As mentioned by Nonaka [5], the terms information and 
knowledge are sometimes used interchangeably even though 
they have different meanings. In her study on the wisdom 
hierarchy, Rowley [6] pointed out that it is especially 
important to define the concepts of data, information, and 
knowledge. Since this paper focuses on the transfer of 
knowledge, the following section presents definitions to 
distinguish the terms data, information and knowledge. 
Having examined various definitions the authors will present 
their own definitions, which are based on some of the 
previously introduced ones. 
A. Data 
Hasler Roumois [7] stated that data consist of symbols 
that are combined into words by using syntax. The words 
receive a semantic meaning when they are associated to 
things. Davenport and Prusak [8] describe data as the raw 
material for information without an intrinsic meaning. A data 
set can contain facts about an event or thing. This is also the 
view of Wormell cited in Boisot and Canals [9] that data are 
alphabetic or numeric signs that without context do not have 
any meaning. Rainer [10] characterized data items as “an 
elementary description of things, events, activities, and 
transactions that are recorded, classified, and stored but are 
not organized to convey any specific meaning.” Ackoff [11] 
viewed data as “symbols that represent properties of objects, 
events and their environment. They are products of 
observation.” Frické [12] criticized the opinion of those who 

157
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
say that data have to be true, which means that the statement 
of the data must be true. The following example confirms 
Frické’s criticism: consider a data set containing incorrect or 
imprecise data, then according to the others this data would 
not be considered data. Weggeman [13] differentiates 
between hard and soft data. If the measuring technique and 
the measurement that created the data are unequivocal, 
Weggeman describes them as hard data, otherwise the data 
are softer. Weggeman’s classification requires, however, 
knowledge about the data and the things they represent, 
which is beyond the scope of data, instead part of the scope 
of information.  
1) Definition: data  
Data consist of symbols that are combined into words by 
using syntax. Data are produced by humans or machines. 
They can be the result of observations of the real world, 
descriptions of abstract things, or the result of processing 
existing data. Data cannot be true or false since this decision 
is beyond the scope of data. 
B. Information 
In the definition of information, there are two 
fundamentally different theories. The more technical 
approach characterizes information as data where context has 
been added [14]. In the more philosophical approach it 
depends on the receiver whether something is information or 
only data. Hasler Roumois [7] stated that when people 
recognize the meaning of data and consider their relevance 
they become information. Similarly, Davis and Olson [15] 
view information as data that has been processed into a form 
that is meaningful to the recipient. Dretske [16] noted about 
information: “Roughly speaking, information is that 
commodity capable of yielding knowledge, and what 
information a signal carries is what we can learn from it. If 
everything I say to you is false, then I have given you no 
information”. However, the recipient of the message may 
receive the meta information that the other person is lying, 
Dretske stated. Weggeman [13] provides the example that an 
author will look at his book as information whereas others 
may consider it initially as a collection of data. It is up to the 
receiver to consider whether the data are relevant or not. 
Weggeman argues that data becomes information even if it is 
irrelevant to the recipient, because the assessment is a form 
of recognition that leads to information. As stated in the 
example from Dretske, the recipient may receive meta 
information. For this analysis the receiver had to compare the 
message with his personal knowledge base. If he already 
knew the content, this may lead to reinforcement by the 
additional confirmation through the message. Therefore, the 
authors agree with Dretske that the receiver may achieve 
meta information, but in this case the data does not become 
information. Rainer and Cegielski [10] described information 
as organized data that have meaning and value to a recipient. 
1) Definition: information 
Data becomes information when a person receives data, 
decodes them, recognizes the meaning and considers them 
relevant. If the data do not contain anything new for the 
receiver, the data do not become information. However, they 
may result in meta information, such as confirmation of the 
known. 
C. Knowledge 
For the processing of information the existing knowledge 
is of crucial importance. Wormell, cited in Boisot and Canals 
[9], believes knowledge is enriched information by a 
person’s or a system’s own experience; it is cognitive based; 
it is not transferable, but through information we can 
communicate about it. Dretske represents the relation of 
information and knowledge as follows: “Knowledge is 
identified with information-produced (or sustained) belief, 
but the information a person receives is relative to what he 
or she already knows about the possibilities at the source” 
[16]. About knowledge Polanyi [17] said: “I shall reconsider 
human knowledge from the fact that we can know more than 
we can tell”. Thus he shows that knowledge has a secret or 
tacit part and not everything a person knows can be passed. 
Polanyi describes explicit knowledge, which in turn can be 
expressed 
in 
formal, 
semantic 
language, 
and 
tacit 
knowledge, which is personalized and therefore hard to 
express [18]. According to Nonaka [19] explicit knowledge 
is knowledge that can be articulated into formal language, 
such as words, mathematical expressions, specifications and 
computer programmes, and can be readily transmitted to 
others. This is in contrast to tacit knowledge, which is 
personalised and based upon experience, context and the 
actions of an individual; tacit knowledge resides in 
individuals who may be unaware that they possess such 
knowledge. There is also implicit knowledge, which refers to 
knowledge that is revealed in task performance without any 
corresponding phenomenal awareness; implicit knowledge is 
often expressed unintentionally. This characteristic is 
described as type dimension of knowledge [20]. For this 
article, the explicit type of knowledge represents the most 
important knowledge type, because it is the knowledge that 
can be easily externalized. Weggeman [13] firmly believes 
that information and knowledge only exist inside the person 
whereas data can exist outside a person. Davenport and 
Prusak [8] describe knowledge as bound to a person: “It 
[knowledge] originates and is applied in the mind of the 
knowers.” 
The 
transformation 
from 
information 
to 
knowledge takes place when the information is linked to the 
existing knowledge through a thinking process [7]. The 
authors propose the term knowledge base as the collection of 
all facts, rules, and values that are represented in the brain of 
a person. Spitzer [21] depicts that through the learning 
process links are created or dissolved in the brain, which 
results in changes of the knowledge base. Spitzer [21] points 
out, that messages, which have the quality of relevance and 
novelty, can be memorized easily. 
1) Definition: knowledge 
Information becomes knowledge if a thinking process 
occurs in which the information is linked to the existing 
knowledge and is stored persistently. The quality of 
information being relevant and new, insofar as there is a 
difference to the existing knowledge, encourages the 
permanent memorization of information. Based on the input 

158
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
by the information, the knowledge base of the person may be 
extended or restructured. 
D. Knowledge Conversion 
 Nonaka and Takeuchi [4] described the conversation of 
knowledge 
in 
their 
SECI 
Model. 
For 
this 
work 
externalization and internalization of knowledge are of 
particular importance. Nonaka and Takeuchi describe the 
internalization as conversion from explicit to tacit knowledge 
and the externalization as conversion from tacit to explicit 
knowledge.  The authors use the concepts of externalization 
and internalization with respect to the conversion of data to 
knowledge and vice versa. Externalization enables a person 
to converse parts of the personal knowledge base, making 
them accessible to others. For example, if someone writes 
down what he knows, everyone except him will refer to this 
as data. Internalization will happen when a reader receives 
new knowledge by reading and learning from it.  
Transfer and persistent storage require an externalization 
of knowledge in a recognized and structured language. The 
various levels of messages are related to levels of semiotics, 
which are syntactic, semantic and pragmatic. Krcmar [22] 
states that syntax declares the rules according to which 
characters can be combined to words and these can be 
combined to sentences. The relation between words and 
objects represented by the words as the relationship between 
characters is denoted by semantics. The intention of a person 
sending words as a message is explained as pragmatic. 
E. Communication 
The protagonist of systems theory, Luhmann [23], 
explained communication as a process consisting of three 
steps of selection. In the first step, the sender decides which 
information he wants to pass on. In the second step, he 
selects a single message from many possible messages. In 
the last step, the recipient selects the information out of the 
message thereby completing the communication. Based on 
Luhmann’s work, Berghaus [24] describes several results, 
which can occur if a sender is forwarding a message to a 
receiver. 
 
Case 1: The receiver picks up the message and 
interprets it in the desired way. 
 
Case 2: The receiver picks up the message but 
interprets it differently. 
 
Case 3: The receiver does not recognize the message 
as a message. 
Only one of the three cases achieves the desired result. In 
this paper the second case and the various reasons for the 
error in communication will be considered in more detail. 
The third case plays a minor role as it is assumed that the 
message is detected as a message because only the messages 
presented as data are considered. 
III. 
RELATED WORK: COMMUNICATION MODELS 
A. Schema of Social Communication 
Figure 1 shows Aufermann’s [25] model for social 
communication in which two parties are involved. The 
sender encodes the statement he intends to submit in a 
message. Therefore, he uses his own character set to encode 
the message. The message is sent via a medium to the 
recipient whereby spatial and temporal distance is overcome. 
When receiving the message the recipient will use his own 
character set for the decoding of the message. 
 
 
Figure 1. Schema of Social Communication [25] (German) 
 
The model illustrates the important point of the character 
sets used by sender and recipient and the need to use only 
those characters that are within the shared character set. 
B. A Mathematical Theory of Communication 
In Shannon’s description of the operation of a 
communication system, the sender is named “information 
source” and the receiver is called “destination” [26]. 
Shannon has investigated the frequency of characters 
contained in a message, and compared the expected and the 
actual occurrence of a character.  Using the ‘entropy’ 
Shannon invented a key figure to measure the information 
contained in a message.  Due to the technical use of the 
model, specifically the control of missiles, the emphasis is on 
the transmission of the signal [27]. In addition to 
Aufermann’s schema of social communication, Shannon’s 
model describes the influence of the transmission of a signal 
by a noise source. 
C. Four Forms of Knowledge Conversion 
The SECI Model, developed by Nonaka and Takeuchi 
[4] is focused on the knowledge conversions during 
knowledge transfer. The description of four conversions 
takes place at an abstract level showing the particularities of 
each conversion. However, a detailed description of the 
individual conversions is missing. Nonaka and Takeuchi 
describe socialization as a direct knowledge transfer from the 
tacit knowledge of one person to the tacit knowledge of 
another person, enabled by action and observation. However, 
this abstract view does not show exactly how knowledge is 
transferred in this case. A situation in which socialization 
happens may arise when master and apprentice work 
together. Even though the master does not express his 
knowledge intentionally he externalizes it through his action. 
Based on the perceived action and the results of action, the 
apprentice will unconsciously obtain knowledge by 
internalization. 

159
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
D. A Hierarchical Modelling Approach to Intellectual 
Capital Development 
Ammann [20] describes knowledge conversions from 
one person to another, in which the different types of 
knowledge are taken into account. In addition to the 
knowledge conversions described in the SECI Model the 
conversion from latent or conscious knowledge to explicit 
knowledge is described. Even though Ammann’s approach 
represents knowledge transfer in greater detail, this approach 
does not give a precise description of how the transmission 
works. 
IV. 
MODEL OF KNOWLEDGE TRANSFER 
A message is a possible way to impart knowledge. The 
correct interpretation of the message may be prevented by 
interferences that can affect the message. As described by 
Shannon the disruption may be caused by a noise source 
disturbing the medium transmitting the message. In addition 
to the interferences from the outside that may influence the 
transport medium, the personal knowledge base of the sender 
and the receiver may also affect the knowledge transfer. The 
influence of the transfer through the personal knowledge of 
sender and receiver can take place in four layers. The 
interpretation of the message depends on the elements that 
are used and whether they are part of the knowledge base of 
the receiver and equivalent to the elements of the sender’s 
knowledge base. 
A. Layers that Influence the Transfer 
The four layers that influence the transfer of a message 
from one person to another are code, syntactic, semantic and 
pragmatic layer. The concept of a knowledge transfer 
through different layers was influenced by the OSI 
Reference Model [28]. Figure 2 illustrates the transfer of a 
message from the sender to the receiver passing through the 
four layers. 
 
Figure 2. Knowledge Transfer through four layers 
 
1) Code Layer 
At the lowest level of the layer for transfer is the code. 
The code consists of symbols or signs that represent the 
smallest units, which form the basis of the higher layers. In 
the case of written language, which is the focus here, the 
smallest elements are the characters, , taken from an 
alphabet . In the case of spoken language it would be 
phonemes, or in sign language gestures. 
2) Syntactic Layer 
The second layer is constituted by the syntax that 
contains rules for the combination of signs or symbols. In 
written language, L, the characters  are combined to form 
words  by the use of production rules P. 
3) Semantic Layer 
The third layer contains the semantics that establish the 
relation between words  and meaning m. This relation, 
called semantics s(, m), connects the word to its meaning, 
which can be a real world entity or an abstract thing. 
4) Pragmatic Layer 
The top layer is the pragmatic layer. Pragmatics p(s, c) 
connects the semantic term s with a concept c. The concept 
contains the course of action and the aims and moral 
concepts that are represented in the human brain. They 
influence the thinking and acting of sender and receiver. 
B. Process of a Knowledge Transfer via Messages 
The aim of the following example is the desire of a 
person, called sender, to communicate something to another 
person, called receiver. Even if the model is general, the 
focus is on the written notification. 
1) Sender: Pragmatic Layer 
 
The core of the message is represented in the pragmatic 
layer. The aims and moral concepts of the sender do not only 
affect the externalization of the message, but also the 
assumptions he makes about the receiver.  
2) Sender: Semantic Layer 
This layer contains all words  and their relation to the 
objects. The sender must choose appropriate words that are 
available in his personal knowledge base. Appropriate means 
not only the term that fits best, but also that refers to the 
knowledge of the recipient. 
3) Sender: Syntactic Layer 
 
This layer contains the rules P according to which the 
sentences and terms are made. The words  chosen to carry 
the meaning are wrapped in sentences. Again, the sender 
must choose the words in compliance with the words known 
by the recipient. 
4) Sender: Code Layer  
To transfer the message as written communication the 
sender has to write the words  by using characters  that 
are part of an alphabet  of a language. 
5) Transfer: Message  
The communication medium (e.g., letter, email) transmits 
the data from the sender to the receiver. 
6) Receiver: Code Layer 
 
The receiver will view the message and read the 
characters , if he knows them. In the case where the 
message contains characters from an alphabet unknown to 
the receiver, the transfer might be disrupted. With only small 
deviations of the used characters a reconstruction might be 
possible, otherwise it can lead to misinterpretation or stop the 
decryption. 

160
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
7) Receiver: Syntactic Layer 
 
The receiver will compose the characters  to words  
and sentences if they are part of a language L he knows. As 
in the decoding of the code small differences can be 
compensated under favourable circumstances, otherwise 
misinterpretation or stopping the decryption are the 
consequences. 
8) Receiver: Semantic Layer 
 
Almost simultaneously with the combination of words 
and sentences the receiver will put the terms in relation to the 
things for which they stand. The more the receiver knows the 
context and the sender of the message, the easier it is to 
capture the meaning of the text. 
9) Receiver: Pragmatic Layer  
In a final step the receiver will interpret the message in 
relation to his own aims and values. The things the receiver 
knows about the sender as well as the assumptions regarding 
the receiver that are influenced by the sender’s own values 
and aims, play an important role in the decoding of the 
message. 
C. Influence of Overlapping Knowledge 
Knowledge about 
the receiver 
is 
an 
important 
requirement for a successful and lossless transfer of a 
message. The better the sender knows the receiver, the easier 
he can encode the message. A proper encoding of the 
message can be done by using elements that exist identically 
in the personal knowledge base of the sender as well as in the 
personal knowledge base of the receiver. If the receiver is 
unknown, only assumptions can be made to support the 
selection. The other way around it is easier for the receiver to 
decode the message if he knows the sender of the message 
very well. Figure 3 visualizes the overlapping of the 
knowledge in different layers. 
 
Figure 3. Overlapping Knowledge 
 
D. Example of Knowledge Transfer 
A challenge in knowledge transfer is the different 
knowledge base of sender and receiver. In companies, this 
situation may occur when a business analyst explains a 
modelled process to a technician in a department. The 
business analyst, an expert in business process modelling 
(BPM), will interview the employees of the department to 
review the department’s processes. During the interview he 
will make notes and sketches, which he subsequently 
transfers to business process models.  
The business analyst will show and explain the modelled 
processes to the departmental employees to check that 
everything has been modelled properly so that model and 
practised processes are consistent. When explaining the 
model to the technician, the business analyst must take into 
account that the technician might not have (sufficient) 
knowledge of a business process modelling language. We 
assume that the business analyst and the technician speak the 
same 
language 
and 
have 
had 
similar 
schooling. 
Consequently, symbols that exist in their knowledge base are 
nearly equal although the business analyst might know 
additional symbols such as those used in the business process 
modelling languages. This consensus also occurs in the 
syntactical layer, which contains rules to build words, and 
the semantic layer, where things are represented through 
words. The largest differences in the knowledge base are 
probably found in the pragmatic layer. The basic concepts of 
aim and moral that are shaped by education, culture, and 
environment, may be similar for both. However, the business 
analyst might have a larger knowledge base in the respective 
aims and concepts of BPM, while the technician might have 
a larger knowledge base in the respective aims, processes, 
and concepts of his special field.  
The business analyst, after seeing that the technician has 
not mastered a business process modelling language, will 
avoid using terms and concepts unknown to the technician. 
When explaining the model, the business analyst will 
introduce the necessary symbols, terms, and concepts to 
explain the process. He can try to use simple explanations 
and he can bring in additional information that facilitates the 
interpretation of the message. The interpretation of the 
symbols is dependent on the knowledge base of the 
interpreting person. The interpretation can be facilitated by 
restrictions; in this example, the terms used for the process 
are terms from the domain of the department as well as from 
BPM. The context the terms are used in thereby facilitates 
the correct interpretation of the process. 
E. Supporting the transfer of the message 
The prevention of transmission errors as well as 
misinterpretation of the message is crucial for the knowledge 
transfer. The dissemination of knowledge in the form of 
written language uses characters to form the message. The 
message shall not only contain plain text but also data types. 
Data types are object descriptions, which define and cluster 
objects of the same kind. This implies that all objects of a 
type have the same value range and usability. This supports 
the accurate decoding of the message, because the 
knowledge about the data type restricts the room for 
interpretation. Prerequisite for the use of data types is that 
sender and receiver know the data types used in the message. 
Through the use of data types the message can be mapped 
corresponding to the layers of the model. Although the 
message can contain only data, a part of the logic necessary 
to extract the meaning, can be embedded by the use of data 
types. 

161
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
V. 
APPLICATION IN BUSINESS PROCESS MODELLING 
We apply the model for knowledge transfer in the area of 
business processes. The important knowledge of a company, 
describing the procedures for the production of products and 
services, is incorporated in business processes. Due to this 
fact they are an interesting area of application. Furthermore, 
the modelling of business processes normally requires 
bidirectional communication.  An exemplary application of 
the layered model for knowledge transfer is presented using 
the example of a business process for the procurement of 
goods. The business process for procurements is a process 
that is used in almost every producing company usually with 
small company-specific adjustments. Event-driven Process 
Chain (EPC) diagrams will provide a basis for the graphical 
representation of the business process.  
A. Event-driven Process Chains 
The EPC diagram was invented by Scheer [29] and 
consists of events and functions interconnected by a control 
flow. Functions are rectangular symbols that represent a 
performance to achieve a desired result.   Events are 
hexangular symbols that represent a situation that triggers a 
function and they are used to represent the result of a 
function. The control flow can be split and merged by the use 
of a logical connector such as AND, OR, and XOR [30].  
Another basic symbol used in the EPC is the role 
showing who is performing a function. If further symbols, 
standard or company-specific, are added to the EPC it 
becomes an enhanced Event-driven Process Chain (eEPC). 
Common used symbols are resources such as system, data 
base, and document, which can be connected to functions by 
an information flow indicating the input or output of a 
function. EPC is a semi-formal modelling language 
especially for the functional representation of business 
processes. EPCs are widespread, at least in Germany and 
supported by various tools [31].  
B. Process: Procurement of Goods 
Figure 4 shows the business process for the procurement 
of goods modelled as an EPC diagram. The process starts 
when the event “goods required” occurs. The event can be 
activated by a material requirement planning in an enterprise 
system such as SAP as well as by a manual requirement 
planning carried out by a human.  The first activity of the 
business process is the function “perform order” where an 
order is created for the purpose of covering the demand. This 
process step, undertaken by a procurement manager, results 
in an order with an order number including all relevant 
details. At this point the process splits and is waiting until the 
events “goods arrive” and “bill arrives” occur. The AND 
symbol splitting the process is a logical AND which 
illustrates that both following events will occur. An 
important rule for modelling processes states that the logical 
connector that splits the process must also be used for 
merging. 
Once the goods arrive a logistic employee will accept the 
goods and check the delivery in compliance with the order 
number. The result of the goods received is that the 
inventory of goods is increased by exactly the number of 
delivered goods. The invoice checking runs in parallel as 
soon as the bill arrives and triggers the event “bill arrives”. 
Following this event the “invoice checking” is performed by 
a financial accountant. Here, the data of the invoice are 
matched with the expected data, which are based on the 
order. The data of the invoice are entered into the system. 
Here the process is merged again visualized by a logical 
AND symbol. When used for merging the process the AND 
requires all inputs to be true until the process can continue. 
As soon as both parallel process flows are completed a 
financial accountant performs the payment. Result of this 
function “perform payment” is that the supplier obtains the 
money and the company’s bank account is decreased by the 
same amount. The process is completed by this cash transfer 
and ends with the event “order completed”. 
 
Figure 4. Procurement of Goods 
 
 
C. Fragmentation of the process 
The process shown in Figure 4 provides an insight into 
the operational sequence. Due to the simple graphical 
representation in EPC it is easy to understand and therefore 
suitable for discussions with department specialists. 
However, the limited amount of symbols restricts the 

162
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
accuracy of the representation. While the sequence with the 
splits and merges is precisely described by the control flow 
and its logical operators, details of functions and events are 
expressed by comments or, if supported by the tool, by 
additional attributes. 
When we consider the modelling language EPC with 
respect to the layered model for knowledge transfer we can 
derive the following statements. The code layer contains the 
symbols used in the EPC diagram as well as the language in 
which the process is modelled. The syntactic layer contains 
the rules for the EPC diagram and the rules of the natural 
language. The semantic layer contains the connection 
between the words or symbols and its meaning. Because of 
the simple representation the precise representation depends 
mainly on the wording. More precise descriptions are almost 
impossible as the annotation of the used words is not 
possible. The pragmatic layer is almost not affected by the 
EPC. Exceptions may be additional symbols, e.g., a symbol 
representing the output of a process. However, the pragmatic 
is affected by the natural language used to describe the 
process and the knowledge base of the person modelling the 
process and the person who reads it. 
The simple notation of EPC leads to a lack of precision in 
the semantic and pragmatic layer of the knowledge transfer. 
To achieve the goal of a better and ideally lossless 
communication in the area of business processes the 
descriptions concerning the semantic and pragmatic layer 
need to be enhanced. To achieve a better representation on 
the semantic and pragmatic layers the authors have decided 
to use frames. Every function and event in the business 
process will be represented as a frame.  
According to Sowa [32] the frames specified by Minsky 
[33] are a more precise and implementable representation of 
the schemata. The schemata were first mentioned by 
Aristotle to categorize the elements of his logical arguments. 
Sowa [32] stated that Kant and Bartlett advanced Aristotle’s 
schema but their definition remained too immaterial. Minsky 
defined a frame as a data structure to represent a consistent 
situation. The frame can be complemented with attributes to 
describe the application of the frame, the following action, or 
alternative actions. Minsky [33] characterizes the frame “as 
a network of nodes and relations”. Minsky pointed out, that 
a frame has several layers and the top levels represent the 
true characteristics of the frame. Lower levels contain 
terminals that store specific data about the instance. Those 
instances often constitute sub- frames. With the frames 
Minsky intends to create an approach that imitates the human 
thinking in the aspect of creating pattern and apply them to 
new situations. He points out that a new frame often is an 
imperfect representation, which is gradually refined. This is 
facilitated by a loose coupling that enables replacement of 
assignments to slots. 
 The application of frames intends to enhance a function 
with a precise description. Frames allow describing a 
situation and changes of this situation. When used for 
functions the frame enables a precise description of the 
performance and thereby a representation of the pragmatic 
layer. Frames provide the opportunity to create nested 
structures, which allows an efficiently representation of 
complex situations. The inputs and outputs of functions and 
events, represented as frames, are described in a formal way. 
This aims to verify interfaces and make suggestions for 
modelling based on the interface verification. In addition, the 
semantic description should help to clarify the properties of 
the input and output objects. The objects describing the 
application of a function and the objects that represent the 
inputs and outputs of the function can be represented as 
frames too. According to Minsky they are called terminals 
and constitute “slots” where the data are saved. Based on the 
usage of the word “terminal” in computer science for an 
entity that cannot be further broken down, the authors will 
refer to the terminals of the frame as slots. Each slot can 
contain an object describing the characteristics of the 
function or an object representing an input or output of a 
function. Each of these objects needs to be further broken 
down until the costs for the break down is higher than the 
gained benefit. When a further break down is not possible or 
not reasonable anymore the object has reached the state of a 
terminal symbol.  
D. Complement the Process 
The procurement process shown in Figure 4 is composed 
of symbols. The symbols can be divided into function, event 
and logical operators. So far the features that distinguish the 
different types of symbols are name, shape and colour. To 
meet the requirements and to improve the matching of the 
process model with the different layers of the layered model 
for knowledge transfer, every function and event must be 
represented as a frame. The top level of such a frame 
contains the following slots: The frame has a name and a 
unique identifier (ID). The slot symbolType allows a 
distinction between events and functions. Both contain slots 
to capture all the inputs and outputs. The inputs contain 
everything that must be available before the corresponding 
object can operate. The results contain the outcome of the 
corresponding object. In addition to this, functions can 
contain slots that enclose objects describing the application 
of the corresponding function. Events have a slot for 
description instead of the one for application. Every object in 
the slot of a symbol can be a sub-frame itself. Thus, any level 
of description accuracy can be achieved.  
The possibility to increase the detail depth arbitrarily is 
very important when applied to business process modelling. 
Business processes can be modelled in different levels of 
detail. Usually an organization decides how many levels are 
available for modelling and categorizing the processes.   
 
Figure 5. Process hierarchy [34] 

163
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 5 displays an illustrative process hierarchy. 
According to Schmelzer and Sesselmann [31] the highest 
level constitutes a process landscape that contains the main 
processes with a high degree of abstraction. The upper levels 
in the process hierarchy aim to provide a navigation through 
the organizations processes. The levels below contain the 
business processes where sequence and execution of actions 
are described. A further detailing of business processes leads 
to the level of sub-processes. On this level the course of 
action is described for the sub-processes. 
The need for different levels of abstraction is also 
highlighted by Kramer and Roovers in Scheer [34]. They 
argue that the need is caused by different requirements 
within the organization. Managers require a broad view to 
govern the processes and employees ask for guidance 
through the processes. If all these different views are 
implemented in a process environment the complexity 
requires filters to prevent an excessive demand caused by too 
many process models. 
E. Specification of a Function 
The navigation hierarchy is often put into practice by 
using value-added chain diagrams. However, for this paper 
the focus is on EPC and thus the lower levels of the 
hierarchy. The process shown in Figure 4, described as an 
EPC diagram, can be classified in the process layer of the 
process hierarchy. When describing the application of a 
function with inputs/outputs the next deeper level of the 
process hierarchy becomes visible. While normally this is 
accomplished by a drill down, in our model the refinement is 
done by representing the symbol as a frame.  Figure 6 shows 
a frame structure for the representation of a function. 
 
Figure 6. Frame Structure 
 
The frame name will contain the name of the function as 
shown in the EPC diagram. In order to represent a symbol in 
a modelling tool it is necessary to provide a unique name, in 
our example the ID as an integer. The name of the function is 
stored in another slot as string. All relevant inputs assigned 
to the functions are stored in a dictionary. Every object can 
be added to the dictionary as a pair of values, one contains a 
key the other the object itself. The use of keys enables a fast 
retrieval of objects stored in a dictionary. Moreover, 
dictionaries are very flexible, so it is not necessary to know 
the exact number of objects that the dictionary should 
contain. The description of the function, which describes the 
use and application of the function and the outputs, are also 
stored in a dictionary. The description objects used in the 
slots can be sub-frames or terminals. In Figure 6, the 
description objects, represented in the rows, are described by 
the “ValueType”. 
1) Caching 
A deeper look at the representation of inputs and outputs 
in functions and events highlights another issue. When the 
inputs and outputs of every function and event are described, 
the amount of necessary inputs and outputs increases rapidly. 
This is caused by passing on the input / output objects, even 
if they have no influence on the current process step. This 
passing on might be necessary if an process step on the end 
of the process requires an input that is not used by the 
preceding process steps but which is available from the 
beginning. Referred to our example process this might be 
account information, which are recorded in another process 
but used to perform the payment. This passing on of inputs 
and outputs has a negative effect on the reusability of the 
functions. 
To solve this problem the authors suggest using storage, 
as it is also used in the eEPC diagram, to cache the object 
and reuse it in another process step. Such storage could be a 
data base system, in a less automated landscape a manual 
storage such as an address book or a conceptual storage. 
2) Application to the Event Perform Order 
In the following the business process “Procurement of 
Goods” will be enhanced by using frames to refine the 
description of functions and events. The process starts with 
the event “goods required” shown in Figure 7. This event 
contains a human readable description and the output: 
“RequirementQuantityGoods”. This output is a sub-frame 
that contains a ‘requirement’ for a ‘quantity’ of ‘goods’. The 
output of the event “goods required” is also the input for the 
first function “perform order”. Figure 8 shows the function 
“perform order” represented as a frame. 
 
Figure 7. Frame: Goods Required 
 
 
 

164
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 8. Frame: Perform Order 
 
As shown by the figure above, the function has another 
input, which is required for the application. However, the 
input “SupplierPriceGoods” is not an output of the previous 
event. This second input is a sub-frame that contains a 
‘supplier’ and a ‘price’ for the ‘goods’. If this input cannot 
be delivered by the previous function there must be another 
way to supply it to the function. At this point, the storage is 
used.  
Data that are used by many processes of a company are 
commonly stored in a central storage. For our example 
process this storage is an enterprise resource planning (ERP) 
system, the SAP ERP system (SAP_6). Enabled by the 
connection to this storage, mapped in slot 4 of the frame, the 
function can search for the required data and use them if 
available. To make this perfectly clear, the connection 
described here is not a connection to the real SAP server in 
the company. It is, however, a representation of the real 
storage and the data that are stored there.  
 
 
Figure 9. Frame Order 
The data in the storage are used as input for a function or 
are created as output of a function. The description of the 
application is contained in slot 6. The function “perform 
order” contains the sub-frame “CreateOrder”. Depending on 
the purpose the process model is used for, the frame could 
contain further descriptions for persons or computers. 
Descriptions for persons may contain instruction manuals, 
transaction codes to perform the action at the system or a list 
with all required inputs and created outputs. For machine 
processing it may contain code that can be execution directly 
by a computer. Output of the function is the sub- frame 
“Order”, which is output for the next process step but also 
stored in the storage SAP_6. Figure 9 shows the “Order” 
frame with its slots. The properties stored in the slots are 
chosen with the target to create understanding of the object 
and to facilitate a later implementation in software.  
F. Modelling Support, Analysis, and Optimisation 
The application of the layered model for knowledge 
transfer aims to support both, modelling and usage of the 
business process model. The modelling should benefit by 
automatic syntax checks, verifying the model against the 
modelling rules.  However, such syntax checks are already 
implemented 
in 
various 
modelling 
environments. 
Furthermore, the modelling environment should generate 
recommendations for the subsequent process step if an 
appropriate element exists in the database. An important 
point for this suggestion is constituted by the descriptions of 
the outputs of the current process step. The system will 
analyse the process and search for a suitable subsequent 
process step with matching inputs. Accordingly the system 
will suggest the object found during the search to the 
modeller where the conformity of the interfaces is indicated 
in percent. Thus, the modeller can make the decision whether 
to use the suggested element, which might be a function or 
an event. 
It has to be considered that process models pursue 
different targets. For process models used as work 
instruction 
the 
semantic 
annotation 
and 
enhanced 
descriptions can constitute a benefit. So, for example, the 
components of an order, used in the “process procurement of 
goods”, can be looked up as illustrated by Figure 9.  
For the optimisation of a process the description of inputs 
and outputs as well as the description of the application are 
of great importance. Based on this various optimisation 
approaches could be undertaken. 
VI. 
CONCLUSION AND FUTURE DIRECTIONS 
Knowledge transfer is affected by many different 
parameters. Due to of the relevance of knowledge transfer, it 
is important to understand the impact of the different 
parameters. The sociologists Luhmann and Aufermann deal 
with communication aspects but they neglect the issue of a 
practical implementation. Shannon’s model focuses on the 
technical implementation but is restricted to the layers of 
code and syntax. The model of Nonaka and Takeuchi deals 
with organizational knowledge and knowledge conversion, 
but the practical transmission is not considered in detail. 
Ammann describes knowledge conversions in more detail. 

165
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
However, this model is still too abstract to facilitate its 
implementation. The approach presented in this paper 
addresses these issues by introducing a model with different 
layers. 
The application of the model focuses on the transfer of 
knowledge by using written language as a medium. While 
the description of knowledge transfer is not very precise in 
the approaches of Nonaka and Takeuchi our approach goes 
more into detail. The further refinement of the knowledge 
transfer, during the externalisation and internalisation intends 
to create a profound understanding about the process of 
knowledge transfer. Another intention behind introducing the 
layers is to reduce errors on each of the knowledge levels. 
Thus, the process of knowledge transfer is divided into 
several steps, which can be examined separately. This makes 
it easier to detect and identify errors and facilitates the 
prevention of misinterpretation. 
The application of the layered model for knowledge 
transfer in the area of business process management shows 
one possible area of application. The different knowledge 
base of the person modelling the process and the employees 
in a department running the process constitutes a challenge 
for both, modeller and employee. Due to the more detailed 
description of the process by using frames, which integrate 
the semantic and the pragmatic layer, this challenge is 
addressed. 
In this paper, the authors presented a layered model for 
knowledge transfer and applied it to the area of business 
process modelling. However, at this stage the application of 
the model is a theoretical model; the application is still to be 
proven. Therefore, the next step will be to develop a 
prototype application for modelling of business processes 
and run a validation. Goal of the investigation will be to 
determine the effect on the modelling and the analysis of 
business processes through the use of the layered model for 
knowledge transfer.  
  
REFERENCES 
[1] F. Schiele, F. Laux, and T. M. Connolly, “A layered model 
for knowledge transfer,” in SEMAPRO 2013, The Seventh 
International 
Conference 
on 
Advances 
in 
Semantic 
Processing, 2013, pp. 26–31. 
[2] K. Dalkir, Knowledge management in theory and practice: 
MIT Press, 2011 
[3] T. H. Powell and V. Ambrosini, “A pluralistic approach to 
knowledge 
management 
practices: 
Evidence 
from 
consultancy companies,” Long Range Planning, vol. 45, no. 
2–3, 2012, pp. 209–226, http://www.sciencedirect.com/ 
science/article/pii/S002463011200009X, 
[accessed 
June 
2013].  
[4] I. Nonaka and H. Takeuchi, The knowledge-creating 
company. Oxford: Oxford University Press, 1995. 
[5] I. Nonaka, “A dynamic theory of organizational knowledge 
creation,” Organization Science, vol. 5, 1994, pp. 14–37, 
http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.
2590, [accessed May 2014]. 
[6] J. Rowley, “The wisdom hierarchy: representations of the 
DIKW hierarchy,” J. Information Science, vol. 33, no. 2, 
2007, pp. 163–180. 
[7] U. Hasler Roumois, Studienbuch Wissensmanagement: 
Grundlagen der Wissensarbeit in Wirtschafts-, Non-Profit- 
und Public-Organisationen, translated: Record of study 
knowledge management: Foundations of knowledge work in 
business-, non-profit- and public-organization, 2nd ed. 
Zürich: Orell Füssli, 2010. 
[8] T. H. Davenport and L. Prusak, Working knowledge: How 
organizations manage what they know. Boston, Mass: 
Harvard Business School Press, 2000. 
[9] M. Boisot and A. Canals, “Data, information and knowledge: 
have we got it right?,” Journal of Evolutionary Economics, 
vol. 14, no. 1, 2004, pp. 43–67. 
[10] R. K. Rainer and C. G. Cegielski, Introduction to information 
systems, 3rd ed. Hoboken, N.J, Chichester: Wiley; John Wiley 
[distributor], 2011. 
[11] R. L. Ackoff, “From data to wisdom,” Journal of Applied 
System Analysis, vol. 16, 1989, pp. 3–9. 
[12] M. Frické, “The knowledge pyramid: a critique of the DIKW 
hierarchy,” J. Information Science, vol. 35, no. 2, 2009, pp. 
131–142. 
[13] M. Weggeman, Wissensmanagement: Der richtige Umgang 
mit der wichtigsten Ressource des Unternehmens, translated: 
Knowledge management: The right way to deal with the most 
important resource of the company, 1st ed. Bonn: MITP-Verl, 
1999. 
[14] J. S. Valacich, C. Schneider, and L. M. Jessup, Information 
systems today: Managing in the digital world, 4th ed. Upper 
Saddle River, N.J: Prentice Hall, 2010. 
[15] G. B. Davis and M. H. Olson, Management information 
systems: Conceptual foundations, structure, and development, 
2nd ed. New York: McGraw-Hill, 1985. 
[16] F. I. Dretske, Knowledge and the flow of information. 
Stanford, CA: CSLI Publications, 1999. 
[17] M. Polanyi, The tacit dimension. London, England: Cox & 
Wyman Ltd, 1966. 
[18] I. Nonaka, P. Byosiere, C. C. Borucki, and N. Konno, 
“Organizational 
knowledge 
creation 
theory: 
A 
first 
comprehensive test,” Organization Science, 1994. 
[19] I. Nonaka, “The knowledge-creating company,” Harvard 
Business Review, vol. 69, no. 6, 1991, pp. 96–104. 
[20] E. Ammann, “A hierarchical modelling approach to 
intellectual capital development,” in Electronic Journal of 
Knowledge Management, vol. 8, Issue 2, C. Bratianu, Ed, 
2010, pp. 181–191. 
[21] M. Spitzer, Lernen: Gehirnforschung und die Schule des 
Lebens, translated: Learning: Brain Research and the School 
of Life, 1st ed. München: Spektrum Akademischer Verlag, 
2007. 
[22] H. Krcmar, Informationsmanagement, translated: Information 
management, 5th ed. Berlin, Heidelberg: Springer, 2010. 
[23] N. Luhmann, Soziale Systeme: Grundriss einer allgemeinen 
Theorie, translated: Social Systems: Outline of a general 
theory, 1st ed. Frankfurt am Main: Suhrkamp, 1987. 
[24] M. Berghaus, Luhmann leicht gemacht: Eine Einführung in 
die Systemtheorie, translated: Luhmann made easy: An 
Introduction to Systems Theory,  3rd ed. Köln: Böhlau, 2011. 
[25] J. 
Aufermann, 
Kommunikation 
und 
Modernisierung: 
Meinungsführer 
und 
Gemeinschaftsempfang 
im 
Kommunikationsprozess, translated: Communication and 
modernisation: opinion leaders and community reception in 
the 
communication process, 
München-Pullach: Verlag 
Dokumentation, 1971. 
[26] C. E. Shannon, “A mathematical theory of communication,” 
SIGMOBILE Mob. Comput. Commun. Rev, vol. 5, no. 1, 
2001, p. 3-55. 

166
International Journal on Advances in Intelligent Systems, vol 7 no 1 & 2, year 2014, http://www.iariajournals.org/intelligent_systems/
2014, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[27] A. Roch, Claude E. Shannon: Spielzeug, Leben und die 
geheime 
Geschichte 
seiner Theorie 
der 
Information, 
translated: Claude E. Shannon: Toys, life and the secret 
history of his theory of information, 1st ed. Berlin: Gegenstalt, 
2009. 
[28] H. Zimmermann, “OSI reference model--The ISO model of 
architecture for open systems interconnection,” IEEE 
Transactions on Communications, vol. 28, no. 4, 1980, pp. 
425–432, 
http://ieeexplore.ieee.org/stamp/stamp.jsp? 
arnumber=1094702, [accessed May 2014]. 
[29] A.-W. Scheer, ARIS--business process modeling, 3rd ed. 
Berlin, New York: Springer, 2000. 
[30] G. Keller, M. Nüttgens, and A. W. Scheer, “Semantische 
Prozeßmodellierung auf der Grundlage Ereignisgesteuerter 
Prozeßketten 
(EPK),” 
translated: 
“Semantic 
process 
modelling based on event-driven process chains (EPC)”, 
Universität des Saarlandes, Germany, Saarbrücken, 1992. 
[31] H. 
J. 
Schmelzer 
and 
W. 
Sesselmann, 
Geschäftsprozessmanagement 
in 
der 
Praxis: 
Kunden 
zufrieden stellen – Produktivität steigern – Werte erhöhen, 
translated: business process management in practice: satisfy 
customer – increase productivity –  increase values, 8th ed. 
München: Hanser, 2013. 
[32] J. 
F. 
Sowa, 
Knowledge 
representation: 
Logical, 
philosophical, and computational foundations. Pacific Grove, 
Calif. [u.a.]: Brooks/Cole, 2000. 
[33] M. L. Minsky, A framework for representing knowledge. 
Cambridge: Massachusetts Institute of Technology A.I. 
Laboratory, 1974. 
[34] A.-W. Scheer, Ed, Agility by ARIS business process 
management: With 2 tables. Berlin, Heidelberg, New York: 
Springer, 2006. 
 
 
 
 

