One Hand or Two Hands? 2D Selection Tasks With the Leap Motion Device 
 
Manuel César Bessa Seixas  
FEUP,  
University of Porto,  
Porto, Portugal 
ei09011@fe.up.pt 
Jorge C. S. Cardoso 
CITAR/School of Arts,  
Portuguese Catholic University,  
Porto, Portugal 
jorgecardoso@ieee.org 
Maria Teresa Galvão Dias 
INESC TEC/FEUP,  
University of Porto,  
Porto, Portugal 
tgalvao@fe.up.pt 
 
 
 
Abstract—In this paper, we present the results from an 
experiment designed to compare two selection gestures (hand 
grab and screen tap) for the Leap Motion controller in 2D 
pointing tasks. We used the ISO 9241-9 multi-directional 
tapping test for comparing the devices, and we analyze the 
results using standard throughput and error rate measures as 
well as additional accuracy measures. We also present the 
results 
from 
the 
ISO 
9241-9 
assessment 
of 
comfort 
questionnaire. To complement this analysis, the computer 
mouse was also evaluated in order to serve as a comparison. 
Results indicate that the hand grab gesture performs better 
than the screen tap.  
Keywords-Interaction Device; Leap Motion; HCI; Pointing 
devices; Performance evaluation; Selection tasks. 
I. 
 INTRODUCTION  
The Leap Motion (LM) controller is a 3D sensing device 
for hand gesture interaction. The LM is a small device that 
plugs to the computer via USB (it is also sold embedded in 
the HP ENVY Leap Motion Notebook PC and in the HP 
Leap Motion keyboard) and is operated by positioning the 
hands over the device. Through stereoscopic computer vision 
techniques, it is able to determine the position and 
orientation of the fingers of the hands, as well as the palm 
orientation and curvature. The controller can be used to point 
to a computer screen with a finger or with a tool (a pen or 
pencil, for example), or perform various hand gestures.  
Although not meant to be a replacement of the mouse, 
many of the interactions with the LM involve pointing at a 
computer screen. There are situations where users would 
want or need to perform typical Windows, Icons, Menus, 
Pointer (WIMP) tasks with the LM, such as selecting 
buttons, navigating through menus and options or dragging 
graphical objects. Many applications in the Leap App Store 
are meant to give users various degrees of control over the 
computer, 
from 
selection 
and 
launching 
predefined 
applications and settings to scrolling content on webpages. 
Some applications even emulate the mouse, allowing cursor 
control and mouse actions [1]–[3]. Most applications that 
take advantage of the LM device still require users to 
perform typical WIMP tasks at some point (in many cases 
giving users the option of using the mouse or the LM 
device). For example, in many games users still need to 
select options and activate buttons; some software for 
surgery rooms also provides cursor control for specific 
functions [4]. 
If we assume that the LM device gains commercial 
traction and becomes embedded in additional laptop 
computers and desktop keyboards, we must also assume that 
it will become an additional alternative to typical WIMP 
tasks. In a situation where the user is operating the LM 
device in a specific LM task it may be faster to perform a 
WIMP task also with the LM, instead of moving the hand to 
operate the mouse. 
Previous work [5] has evaluated the LM device for 2D 
selection tasks using a single hand for both the pointing and 
target selection actions. The LM performed poorly in that 
situation. One of the reasons that may justify the poor 
performance of the LM in that study is the fact that only 
hand was being used, forcing the user to move the pointer 
and select with the same hand. This may originate errors and 
delays in the “clicking” part of the gesture. We hypothesize 
that using a different hand for performing the selection 
gesture may improve the task. 
In this work, we compare two gestures for selection tasks 
with the LM. One gesture uses the same hand for pointing 
and selecting; another uses one hand for pointing and the 
other hand for selecting. We also compare the selection task 
made with a traditional computer mouse. We used the 
standard ISO 9241-9 multi-directional tapping test [6] for 
pointing devices and calculated various accuracy measures 
[7] for the various selection gestures and devices. We have 
also used the ISO 9241-9 assessment of comfort 
questionnaire to get a subjective device preference, with 
additional 
questions 
regarding 
the 
selection 
gesture 
preference.  
The contributions of this paper are: comparison of two 
gestures for selecting targets in 2d graphical interfaces with 
the LM device and a computer mouse; an analysis of the 
differences between pointing paths for the two LM gestures 
and the computer mouse; an assessment of the subjective 
preferences and comfort of the LM device versus the 
computer mouse; an assessment of the subjective user 
preference of the selection gesture. 
The rest of the paper is organized in the following way. 
In Section 2, we present work that has used the LM device 
either to evaluate the device itself, or to evaluate new 
interaction techniques implemented with the LM. In Section 
3, we describe the LM device in more detail. In Section 4, 
33
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

we describe the experimental setup. In Section 5, we present 
and discuss the results from the experiment; In Section 6, we 
conclude. 
II. 
RELATED WORK 
Previous work has addressed the LM device from 
different perspectives. 
Weichert et al. [8] analyzed the accuracy and robustness 
of the leap motion controller. They performed an experiment 
where a robotic arm would hold a pen in its hand and was 
programmed to place the tip in several real world known 
positions. These positions would then be compared to the 
ones acquired by the LM controller, being the difference 
between each other the precision. These measures were 
repeated several times in order to find repeatability, for two 
cases: static and dynamic (with a moving pen). They found 
the accuracy of the LM to be less than 0.2mm for the static 
case and less than 1mm for the dynamic case. Weichert et al. 
focused on the accuracy of device itself; in this paper, we 
focus on the accuracy of the user performing a task with the 
device. 
Vikram et al. [9] present a new type of user input for 
writing, using the LM. Using the finger position data from 
the LM they are able to identify characters and words written 
“in the air”. They propose an algorithm that is capable of 
recognizing gestures without pen down/pen up gestures to 
mark the beginning and end of a gesture. Although their 
interaction technique relies on users performing finger 
gestures, their analysis is concerned with the gesture 
recognition algorithm. In this paper, we address the issue of 
the performance of doing the gestures (for simple pointing 
tasks). 
Nabiyouni et al. [10] performed a usability testing in 
order to find which of the implemented 3D travel techniques 
was the most efficient in bare-hand interaction. Five 
techniques were tested in a set of 3 tasks and the interaction 
was performed through the use of the LM controller. The 
techniques developed were based on a “Camera-in-hand” 
metaphor, where the Leap Motion workspace was directly 
mapped to the virtual world, and an “Airplane” metaphor, 
that, similar to driving a vehicle, had the camera always 
moving straightforward being the user responsible for 
controlling its velocity and orientation (the orientation was 
the same as the hand). A 3D virtual scenario, modeled as a 
city, was used to perform the tests. This is an example of a 
task that is out of the scope of our evaluation since it uses 
LM-specific features that are outside of the WIMP paradigm. 
III. 
THE LEAP MOTION DEVICE 
The LM is a small input device (7.6 x 3 x 1.3 cm) 
developed by Leap Motion Inc., which detects and 
recognizes users’ hands posture and gestures (Figure 1).  
Programmers can use the Leap Motion SDK (available 
for C++, Java, Objective-C, C#, Python, Javascript, and 
other programming languages) to develop applications that 
take advantage of the device’s capabilities.  
Currently, the SDK provides high-level functions such 
as: 
• 
Detection of the hands, and their 3D position in space, 
within the range of the LM. 
• 
Orientation and curvature of the hand’s palm. 
• 
Overall 
scale, 
rotation, 
and 
translation 
motions 
calculated from the movement of the hands. 
• 
3D orientation and position of individual fingers and 
normalized 2D pointing position on the screen. 
Applications developed for the LM can be distributed via the 
Airspace store [11], an online store from which users may 
download applications to use with their device. Several 
applications are currently available, from games to 
productivity applications.  
The LM controller can be used as a traditional pointing 
device, but this functionality is not included directly in the 
driver software. To do this, an application must be used. 
Touchless [2] is an example of such applications, developed 
by Leap Motion Inc., with versions for Mac and Windows 
computers. Touchless provides several ways to interact with 
the OS: 
§ 
By pointing with a finger, users can control the 
position of the mouse cursor on the screen. 
§ 
By making a screen tap gesture (i.e., moving the 
finger towards the screen quickly), users can perform 
a mouse click. 
§ 
By swiping multiple fingers in the air, users can scroll 
horizontally or vertically. 
§ 
By pinching the fingers, users can zoom in and out. 
IV. 
EXPERIMENT 
A. LM Gestures 
We compared two selection gestures for the LM device: 
screen tap, and hand grab (Figure 2). The screen tap gesture 
consists in moving the pointing finger towards the screen and 
returning the original position, quickly. This gesture is 
supported directly by the LM SDK that provides functions to 
configure the gesture’s speed and motion amplitude and is an 
often-used gesture by applications on the Airspace store. The 
hand grab gesture requires two hands to point and select: the 
dominant hand is used for controlling the position of the 
pointer on the screen; the auxiliary hand is used to perform 
the selection by closing and opening the hand (i.e., making a 
fist). 
To select these gestures for the experiment, we ran a 
preliminary session where we asked participants to try out 
 
Figure 1. The Leap Motion device. 
34
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

different gestures in the ISO 9241-9 multi-directional 
tapping test, and then collected their subjective preference 
regarding the gestures. In this preliminary session, each of 
the six participants was exposed to the following gestures:  
screen tap, hand grab, key tap, touch zone entered, and touch 
zone exited. The key tap gesture is performed with the 
auxiliary hand by flicking the index finger as if playing a 
piano key. The touch zone entered gesture uses a virtual 
vertical plane as a threshold: if the index finger crosses that 
threshold in the direction of the screen, a touch zone entered 
gesture is performed. The touch zone exited works in the 
opposite way to the touch zone entered: if the index finger 
crosses the threshold in the direction of the screen and than 
crosses it again in the opposite way, a touch zone exited 
gesture is performed. Participants experimented with all 
these five gestures and were then asked to rate them. The 
preferred gesture was the hand grab gesture, and the least 
preferred gesture was the screen tap. We thus decided to 
evaluate the performance of the two gestures that were rated 
best and worst and compare them to the computer mouse. 
B. Setup 
The experiment was a 3 × 5 × 7 within-subjects factorial 
design:  
• 
Device {Mouse, LMScreenTap, LMHandGrab} 
• 
Sequence {1,2,3,4,5} 
• 
Block {1,2,3,4,5,6,7} 
We configured the multi-directional tapping test with 16 
circular targets, each with 13mm, in a circular layout with 
diameter of 180mm. The nominal index of difficulty used 
was 3.8 bits. The experiment was structured in “sequences” 
and “blocks.” A sequence corresponded to 15 target 
selections. A block had 5 sequences. Each participant was 
tested with all devices/gestures. The order of device/gesture 
differed for each participant according to a balanced Latin 
square. 
We developed an application for collecting the pointer 
data for all devices/gestures, at 40 samples per second. 
At the beginning of the experiment the participants were 
explained the purpose of the experiment, the task to be 
performed, and the devices to be used. Participants were also 
asked to fill in a questionnaire to determine their computer 
literacy and experience with the devices. Age and gender 
were also asked. 
Participants were asked to perform the selection task as 
fast as possible without exceeding one error per sequence. 
Participants were allowed to perform practice trials until they 
felt ready to start the experiment and could use their 
preferred hand to operate the devices. Breaks were allowed 
between sequences. 
At the end of each device’s trials we asked participants to 
fill in the 12 item ISO 9241-9 comfort and effort 
questionnaire. At the end, we asked participants which 
device they preferred and several questions about the LM 
gestures. The experiment lasted about 1 hour and 30 minutes. 
C. Participants 
Nine non-paid participants (4 male, 5 female) were 
recruited. Their ages ranged from 10 to 35 years old. All 
participants were daily computer and computer mouse users 
(except one that stated to use the computer/mouse often). No 
participant had used the LM before. 
D. Apparatus 
We used the following hardware and software for the 
experiment: 
• 
Apple Mac Mini (2.5GHz Intel Core i5, with 4GB 
RAM), running Mac OS X 10.8.3; 
• 
HP L1706 LCD Display, with resolution set to 1280 x 
1024; 
• 
Genius Xscroll USB mouse, with the tracking speed set 
to third tick mark; 
• 
Leap Motion device (commercial version), with 
tracking priority set to "Balanced";  
• 
The Touchless software [2] for the screen tap gesture. 
V. 
RESULTS AND DISCUSSION  
Raw data from the experiment and R [12] analysis scripts 
are available at [13].  
A. Movement time, Throughput and Error rate 
Figure 3 shows the movement time (in seconds) as a 
function of block.  
To estimate the learning effect, we ran pairwise t-tests for 
average throughput per block (considering all devices) with a 
significance level of 5%. The results indicate a clear learning 
effect in blocks 1 to 3, so these blocks are discarded in 
subsequent results. 
 
Figure 3. Movement time as a function of block. 
 
 
Screen tap 
Hand grab 
Figure 2. Evaluated LM gestures. 
35
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

It is obvious that the mouse outperforms the LM in either 
gesture. The average movement time is 812 ms for the 
mouse, 1694 ms for the LM HandGrab gesture, and 1940 ms 
for the LM Screen Tap gesture (Figure 4). The average 
movement time for the mouse is less than half than for the 
LM device. Accordingly, the throughput of the mouse 
(Figure 5) is much higher than either LM gesture. However, 
it is also interesting to note that the hand grab gesture results 
in a faster overall movement time. A paired t-test comparing 
the two LM gestures shows significant differences in 
movement time (t(179)=-6.0954, p-value = 6.539e-09). The 
LM hand grab gesture represents a reduction in movement 
time of over 12% relative to the LM screen tap gesture. 
The error rate for the mouse was also lower than the error 
rate for both the LM gestures. The differences between the 
two LM gestures were not statistically significant so, 
although the hand grab gesture seems to decrease the time 
needed to select an object, it does not appear to contribute to 
a less error-prone selection. 
B. MacKenzie’s accuracy measures 
The Mackenzie’s accuracy measures (see [7] for a 
description of the measures) allow us to see the differences 
between the devices/gestures in greater detail. Figure 6 and 
Table 1 shows the means, standard deviations, and F statistic 
for all accuracy measures. It also shows the t statistic 
comparing both LM gestures. Analysis of variance indicates 
that there are significant differences between devices for all 
measures except Movement Offset (MO). Student’s t test 
comparing both LM gestures indicates significant differences 
in Task Axis Crossing (TAC), Movement Direction Change 
(MDC), Orthogonal Direction Change (ODC), Movement 
Variability (MV), and Movement Error (ME) measures. 
As expected, the mouse outperforms the LM device in 
various measures (TRE, TAC, MDC, and ODC).  
 We can observe that, based in MV, ME and MO, the 
movement of the pointer when being controlled by the LM is 
quite similar to the movement of the pointer when controlled 
by the computer mouse. When comparing only the LM 
gestures, however, a few observations stand out as 
unexpected. The target re-entry measure (TRE), which 
measures the number of times the pointer re-entries the target 
before the selection is made, is equivalent in both LM 
gestures. We expected that the hand grab gesture would 
result in a lower TRE since the selection gesture is made 
with the auxiliary hand so selecting the target would not 
TABLE I. MEANS AND STANDARD DEVIATIONS OF ACCURACY MEASURES FOR EACH DEVICE/GESTURE. 
 
 
Mouse 
 
LMHandGrab 
 
LMScreenTap 
 
 
 
Accuracy measure 
 
Mean 
SD 
 
Mean 
SD 
 
Mean 
SD 
 
F 
t(179) 
Target re-entry (TRE) 
 
0.10 
0.08 
 
0.37  
0.25 
 
0.37  
0.30 
 
78.4* 
-0.0317 
Task axis crossing (TAC) 
 
1.61  
0.34 
 
1.92  
0.67 
 
2.24 
0.67 
 
53.1* 
-5.338* 
Movement direction change (MDC) 
 
4.26  
0.85 
 
7.33  
2.48 
 
8.37 
2.76 
 
170* 
-4.507* 
Orthogonal direction change (ODC) 
 
1.17  
0.53 
 
3.61  
1.78 
 
4.20 
2.27 
 
161* 
-3.177* 
Movement variability (MV) 
 
20.62  
7.08 
 
26.40 
13.37 
 
21.87 
7.01 
 
11.4* 
4.222* 
Movement Error (ME) 
 
20.09  
5.56 
 
21.11 
10.79 
 
17.73 
5.48 
 
9.16* 
3.828* 
Movement Offset (MO) 
 
-2.46  
6.63 
 
-1.57 
8.06 
 
-1.81  
5.18 
 
0.85 
0.335 
 
 
Figure 6. Accuracy measures for the three devices. 
 
Figure 4. Mean movement time for each device/gesture. 
 
 
 
Figure 5. Throughput and error rate. 
36
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

influence the pointer movement (as we expected to happen 
with the screen tap gesture). However, the results show no 
difference in TRE, indicating that maybe the selection 
gesture has little influence on the target re-entry measure, 
and that the higher TRE compared to the mouse is due to the 
pointer movement itself and not to the final selection gesture. 
We also expected lower movement variability (MV) (and 
movement error – both are highly correlated) with the hand 
grab gesture than with the screen tap gesture. Again, we 
reasoned that because participants had separate control over 
the movement of the pointer and the selection of the target 
with the hand grab gesture it would result in more control 
over the pointer movement. However, the opposite seems to 
be true, having both hands over the LM seems to make it 
more difficult to control the pointer movement, resulting in a 
higher movement variability. 
C. Final positioning time 
To better understand the differences in the movement 
between the various devices/gestures, we analyzed the final 
positioning time (FPT) [14] for the selection task. The FPT 
measures the time it takes since the moment the cursor enters 
the target to the moment the user selects the target - we 
consider only the last target (re-)entry. Figure 7 shows the 
average FPT for the various devices/gestures in milliseconds, 
and the percentage that the FPT represents in the overall 
movement time. Again, it is clear that the mouse outperforms 
the LM, but more interesting to the current study it the fact 
that the hand grab gesture clearly reduces the FPT of the 
selection task (t(179)= -10.73, p-value<2.2e-16). However, 
it is also clear that the FPT for the LM device is still higher 
than that of the mouse. The difference in FPT of the two LM 
gestures explains most of the different in the overall 
movement time for the two gestures.  
D. Effort and comfort 
We also collected subjective device preferences and 
comfort through the ISO 9241-9 assessment of comfort 
questionnaire. Figure 8 shows the average scores for each 
question. As expected, for the evaluated task, the mouse was, 
in general, rated higher by participants. 
E. Users’ opinion on the LM gestures 
At the end of the experiment participants were asked to 
indicate which device they liked best for performing this 
type of tasks. All the participants answer the computer 
mouse. We then asked participants to indicate which LM 
gesture they preferred by answering the following questions: 
• 
Of the used gestures which one did you find more 
accurate? 
• 
Of the used gestures which one did you find more 
comfortable? 
• 
Of the used gestures which one did you find more 
intuitive? 
• 
Of the used gestures which one did you like more? 
Results are show in Figure 9 as the percentage of participants 
that preferred each gesture for each question. The results 
indicate a clear preference for the hand grab gesture, with 
only one participant saying he liked the screen tap the most. 
 
Figure 8. Average scores for the various comfort questions. 
 
Figure 9. Gesture preference. 
 
Figure 7. Final positioning time. 
37
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

In general, participants also seem to find the hand grab 
gesture more comfortable and intuitive, but were more 
divided regarding whether any of the gestures was more 
accurate than the other. 
VI. 
CONCLUSIONS 
We have presented the results from an experiment 
designed to compare two selection gestures for 2D interfaces 
for the Leap Motion device. We compared the screen tap 
gesture to the hand grab gesture, in addition to the computer 
mouse.  
Results indicate that the hand grab gesture that uses two 
hands improves the performance of the selection task when 
compared with the screen tap gesture. Movement time using 
the hand grab gesture is roughly 12% faster than using the 
screen tap gesture. This different is mostly accounted for by 
the lower final positioning time achieved when using the 
hand grab.  
These results can be used when designing the interaction 
for the LM device, providing additional design options: one 
hand vs two hands, slower vs faster selection. 
It is important to note that the comparison between the 
mouse and the LM is not completely fair. The mouse uses a 
non-linear mapping between device displacement and cursor 
displacement: faster movements translate to greater cursor 
displacement. This does not currently occur with the LM, but 
it would be interesting to try to implement a similar 
technique for the LM. It would also be interesting to evaluate 
and compare further selection gestures.  
We should stress out that this study must be interpreted 
with care. We performed an evaluation of a very specific 
graphical interaction 2d task, for which the LM was not 
specifically designed. We believe that the LM may be used 
for these tasks, and hence it is important to know how it 
performs, but it is more suited for general gestural 
interactions, which was not the focus of the current 
experiment. 
ACKNOWLEDGMENT 
This paper was financially supported by the Foundation 
for Science and Technology — FCT — in the scope of 
project PEst-OE/EAT/UI0622/2014. We would like to thank 
all the participants in this experiment for their time and 
collaboration. 
REFERENCES 
[1] P. Lab, “Pointable,” 2014. [Online]. Available: 
https://apps.leapmotion.com/apps/pointable/windows. 
[retrieved: December, 2014]. 
[2] Leap Motion Inc., “Touchless for Mac.” [Online]. 
Available: 
https://airspace.leapmotion.com/apps/touchless-for-
mac/osx. [retrieved: December, 2014]. 
[3] Nu-Tech, “Mudra Mouse,” 2014. [Online]. Available: 
https://apps.leapmotion.com/apps/mudra-mouse/osx. 
[retrieved: December, 2014]. 
[4] A. Manolova, “System for touchless interaction with 
medical images in surgery using Leap Motion,” in 
Proceedings 
og 
the 
9th 
INTERNATIONAL 
CONFERENCE on Communications, Electromagnetics 
and Medical Applications, October, 2014, pp: 2-6. 
[5] M. Seixas, J. Cardoso, and M. T. G. Dias, “The Leap 
Motion 
movement 
for 
2D 
pointing 
tasks: 
Characterisation and comparison to other devices,” In 
Proceedings of the 5th International Conference on 
Pervasive 
and 
Embedded 
Computing 
and 
Communication Systems. Angers, France. 2015. (in 
press). 
[6] International 
Organization 
for 
Standardization, 
“Ergonomic Requirements for Office Work with Visual 
Display Terminals (VDTs): Requirements for non-
keyboard input devices,” ISO, 2000. 
[7] I. S. MacKenzie, T. Kauppinen, and M. Silfverberg, 
“Accuracy measures for evaluating computer pointing 
devices,” in Proceedings of the SIGCHI conference on 
Human factors in computing systems - CHI ’01, 2001, 
pp. 9–16. 
[8] F. Weichert, D. Bachmann, B. Rudak, and D. Fisseler, 
“Analysis of the accuracy and robustness of the leap 
motion controller.,” Sensors (Basel)., vol. 13, no. 5, 
Jan. 2013. pp. 6380–93. 
[9] S. Vikram, L. Li, and S. Russell, “Handwriting and 
Gestures in the Air, Recognizing on the Fly,” CHI 2013 
Ext. Abstr., 2013. 
[10] M. Nabiyouni, B. Laha, and D. A. Bowman, “Poster: 
Designing Effective Travel Techniques with Bare-hand 
Interaction,” in EEE Symposium on 3D User Interfaces 
(3DUI), 2014. pp. 139-140. 
[11] Leap Motion Inc., “Airspace store,” 2014. [Online]. 
Available: https://airspace.leapmotion.com/. [retrieved: 
December, 2014] 
[12] R Core Team, “R: A Language and Environment for 
Statistical Computing,” Vienna, Austria, 2014. 
[13] J. C. S. Cardoso and M. Seixas, “Leap Motion 
experiment raw data and analysis scripts - FEUP,” 
2014. 
[Online]. 
Available: 
http://dx.doi.org/10.6084/m9.figshare.1263636. 
[retrieved: December, 2014] 
[14] M. Akamatsu, I. S. MacKenzie, and T. Hasbroucq, “A 
comparison of tactile, auditory, and visual feedback in a 
pointing task using a mouse-type device.,” Ergonomics, 
vol. 38, 1995. pp. 816–827. 
 
 
 
38
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-382-7
ACHI 2015 : The Eighth International Conference on Advances in Computer-Human Interactions

