Particle Swarm Optimization with Time-Varying Acceleration Coefficients Based 
on Cellular Neural Network for Color Image Noise Cancellation 
 
Te-Jen Su1 
Jui-Chuan Cheng2  
Yang-De Sun3
1College of Information Technology 
Kun Shan University 
Tainan 710, Taiwan, R.O.C. 
2,3Department of Electronic Engineering 
National Kaohsiung University of Applied Sciences 
 Kaohsiung 807, Taiwan, R.O.C.
1tejensu@mail.ksu.edu.tw 
2eagle@cc.kuas.edu.tw 
31097305128@cc.kuas.edu.tw 
 
Abstract—This paper proposes a novel method for designing 
templates of Cellular Neural Network (CNN) for color image 
noise removal. The control of CNN systems is achieved via 
Particle Swarm Optimization (PSO) with Time-Varying 
Acceleration Coefficients (PSO-TVAC). Based on PSO-TVAC 
method, the proposed approach can automatically update the 
parameters of the templates of CNN to optimize them for 
diminishing noise interference in polluted image. The 
demonstrated examples are compared favorably with other 
available methods, which illustrate the better performance of 
the proposed PSO-TVAC-CNN methodology. 
Keywords- Cellular Neural Network; Color Image Noise 
Removal; Particle Swarm Optimization with Time-Varying 
Acceleration Coefficients 
I. 
 INTRODUCTION 
Particle swarm optimization is a population based 
stochastic optimization technique developed by Dr. Eberhart 
and Dr. Kennedy in 1995 [1, 2, 9–11], inspired by social 
behavior of bird flocking or fish schooling. It is easily 
implemented in most programming languages and has 
proven both very effective and quick for a diverse set of 
optimization problems. However, local convergence problem 
and slow later convergence problem are the two critical 
shortcomings of PSO that limit its applications [3]. A 
Particle 
Swarm 
Optimization 
with 
Time-Varying 
Acceleration Coefficients (PSO-TVAC) is presented in this 
paper, which allows to effectively overcome the two 
mentioned problems [12].  
A novel class of information processing system called 
cellular neural networks was proposed by L.O. Chua and L. 
Yang in 1988 [6, 7]. CNN is characterized by the parallel 
computing of simple processing cells locally interconnected. 
It has been widely used for image processing, pattern 
recognition, signal processing, etc. In recent years, the 
problems of CNN templates design for image processing 
have received considerable attention [4, 5].  
A new method  that combines the discrete-time cellular 
neural network template learning method with an adaptive 
particle swarm optimization, and applies to gray image noise 
cancelation was developed [8]. The approach is able to find 
the template values easily without complex mathematic 
computing processes but also to obtain the balance of 
convergence speed and convergence accuracy. This work is 
extended from the previous study [8]; we attempt to apply 
the technique of gray image noise cancellation to color 
image noise cancellation by separating the color image into 
three Gray-Scale RGB elements. 
The rest of this paper is organized as follows: in Section 
2, the Particle Swarm Optimization techniques, while in 
Section 3, the Cellular Neural Network is discussed. In 
Section 4, the CNN based on PSO-TVAC template learning 
for images noise cancellation is presented. Examples are 
given in Section 5 to demonstrate the proposed methodology. 
Finally, conclusion is drawn in Section 6. 
II. 
PARTICLE SWARM OPTIMIZATION WITH TIME-
VARYING ACCELERATION COEFFICIENTS (PSO-TVAC) 
In PSO, suppose that the search space is D-dimensional, 
and then the ith particle is represented as Xi = (xi1,xi2,…,xiD). 
The velocity (rate of the position change) of this particle is 
denoted as Vi = (vi1,vi2,…,viD). The best previous position of 
the ith particle is represented as Pi = (pi1,pi2,…,piD)  . In other 
words, Pi involves the best previous position, which   Xi has 
visited (the best position called pbest). The index of the best 
particle among all the particles in the swarm is defined as the 
symbol g (called gbest). The particles are manipulated 
according to the equations 1 and 2. In its canonical form, 
Particle Swarm Optimization is modeled as follows [6-8]: 
                                                                                      
)
(
) (
)
(
) (
( )
)1
(
2
2
1
1
id
gd
id
id
id
id
x
p
c rand
x
p
c rand
t
wv
t
v






  (1)  
)1
(
( )
)1
(




t
v
t
x
t
x
id
id
id
                                                     (2) 
 
where  
 
vid (t+1) 
: velocity of particle i at iteration t+1 
vid (t) 
: velocity of particle i at iteration t 
xid (t+1) 
: position of particle i at iteration t+1 
xid (t) 
: position of particle i at iteration t 
c1 
        : cognitive parameter 
c2 
        : social parameter 
rand()1         : random number uniform distribution  U(0,1) 
rand()2         : random number uniform distribution  U(0,1) 
pid  
        :  pbest position of particle  i 
109
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

pgd 
        : gbest position of swarm 
w  
        : inertia weight 
 
The objective of PSO-TVAC is to enhance the global 
search in the early part of the optimization and to encourage 
the particles to converge toward the global optimum at the 
end of the search. With a large cognitive parameter and small 
social parameter at the beginning, particles are allowed to 
move around the search space, instead of moving toward the 
population best. However, a small cognitive parameter and a 
large social parameter allow the particles to converge to the 
global optimum in the latter part of the optimization. Under 
this development, the cognitive parameter c1 starts with a 
high value c1max and linearly decreases to c1min. Whereas the 
social parameter c2 starts with a low value c2min and linearly 
increases to c2max. This modification can be mathematically 
represented as follows: 
1min
max
max
1min
1max
1
)
)(
(
( )
c
T
t
T
c
c
c t




     (3) 
                 
2max
max
max
2max
2min
2
)
)(
(
( )
c
T
t
T
c
c
c t




     (4)  
                                             
where Tmax is the maximal number of iterations and t  is the 
current number of iterations. 
III. 
CELLULAR NEURAL NETWORK 
A two-dimensional CNN array is considered in which the 
cell dynamics are described by the following nonlinear 
ordinary differential equation with linear and nonlinear terms 
[13–16]: 
 
( , )
( , )
( , )
( , )
( )
( )+
( , ; , )
( )
( , ; , )
( )
r
r
ij
ij
kl
kl
C k l
N
i j
C k l
N
i j
x t
x t
A i j k l y
t
B i j k l u
t


 




                                                                                    
            
;
( , )
( , )
(
)
r
ij kl
ij
C k l
N
i j
D
v
I





                                   (5)                         


1
(
( ))
( )
1
( )
1
2
ij
ij
ij
ij
y
f x
t
x t
x t





                                (6)  
 
where 
 
, ,
( )
, ,
( ), 
( )
1, 
( )
1, 1
, 1
kl
ij
ij
ij
v
u x y
t
u x y
t
x t
u
t
i
M
j
N
 



 


  
                                                                     
xij, uij, yij,, Iij are the state, input, output and threshold voltage 
of the specified CNN cell, respectively. A(i,j;k,1) is called 
the feedback cloning template, B(i,j;k,1) is called the 
feedforward or input control template, Dij;kl are nonlinear 
terms applied for v
 ( v
 is a generalized difference). The 
state and output vary in time, the input is static (time 
independent), and the CNN is single-layer with nearest 
neighbor linear. 
In this paper, Dij;kl is the generalized nonlinear term 
applied to 
( )
( )
t
x
t
u
v
ij
kl



 , the voltage difference of 
either the input or state values. The nonlinear template D is 
as follows: 
 
 
                                                                                              
                                                                                           (7) 
 
 
 
 
 
where d0, d1, d2 ,are the parameters in the nonlinear template 
D. K should be set very close to this value in an attempt to 
separate the noise effects and the image structure. 
 
IV. 
CNN BASED ON PSO-TVAC TEMPLATE LEARNING 
A digital image is composed of pixels which can be 
thought of as small dots on the screen and may be 
represented as m-by-n matrices. MATLAB is a matrix 
processing language for a wide range of applications. The 
color image in MATLAB is described as a two dimensional 
matrix in uint8 format. In order to apply the gray image noise 
cancellation from the precious study [8], we separate the 
color image into RGB elements. These three Gray-Scale 
images will be blend into a colorful image after finishing 
noise cancellation processes proposed. The process followed 
to perform noise cancellation is shown in Fig. 1 
 
PSO-TVAC-CNN
Input
Noise
Image
PSO-TVAC-CNN
PSO-TVAC-CNN
MATLAB
(Separation)
MATLAB
(Blending)
Output
Image
Element:R
Element:G
Element:B
Image:R
Image:G
Image:B
PSO-TVAC-CNN
Input
Noise
Image
PSO-TVAC-CNN
PSO-TVAC-CNN
MATLAB
(Separation)
MATLAB
(Blending)
Output
Image
Element:R
Element:G
Element:B
Image:R
Image:G
Image:B
 
Figure 1.  Block diagram of the image separation and blending 
In this case, PSO-TVAC is employed to design templates 
of CNN for canceling the noise interference in Gray-Scale 
images. The templates are designed as following pattern 
structures, respectively: 
 
 
 
                                                                                         (8) 
 
 
 
where a0, a1, a2 ,b0, b1, b2 ,d0, d1, d2, I, K are elements of 
the swarm, in order to satisfy output saturation effectively, 
we set a2 =0 , b0 =0, b1 =0, b2 =0, I=0, xij(0)= uij(t). The 
training image is corrupted by the salt and pepper noise 
shown in Fig. 2. 
 
 
 
 
 
I K
d
d
d
d
d
d
d
d
d
D
b
b
b
b
b
b
b
b
b
B
a
a
a
a
a
a
a
a
a
A
, ,
,
,
2
1
2
1
0
1
2
1
2
2
1
2
1
0
1
2
1
2
2
1
2
1
0
1
2
1
2

































( )
( )
,
)
(
)
(
)
(
2)
(
2
1
2
1
0
1
2
1
2
x t
t
u
v
v e
v
d
v
d
d
d
d
d
d
d
d
d
d
D
ij
kl
K
v

 
 















110
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

 
 
 
 
 
 
 
 
 
 
 
 
Figure 2.  The training images (a) Input image to the CNN (b) Desired 
output image of CNN. 
The following equation is used as an objective function 
(error function); the block diagram is shown in Fig. 3. 






k
i
d
c
P i
P i
Error
1
( ) 2
( )
               
 (9) 
 
where k denotes the total pixel of the picture, Pc(i)  is the 
value of the  ith pixel of the input image and Pd(i)  stands for 
the pixel of the desired output image. Each resulting image is 
compared with the desired image which should be obtained 
in the end. The comparison allows to compute the value of 
the error function, and consequently obtain the best template. 
 
 
Figure 3.  Block diagram of the objective function. 
The process for implementing the PSO-TVAC based on 
CNN is shown as Fig. 4.  
 
Start
Initialize each particle
random position
random velocity
Cellular Neural Network
Simulator
If a criterion is met?
Update the position and
velocity of the particle 
Determine the          
and gbest
Next particles
i
pbest
Get the optimal templates  
Stop
No
Yes
Start
Initialize each particle
random position
random velocity
Cellular Neural Network
Simulator
If a criterion is met?
Update the position and
velocity of the particle 
Determine the          
and gbest
Next particles
i
pbest
Get the optimal templates  
Stop
No
Yes
 
 
Figure 4.  Flow chart of PSO-TVAC-CNN. 
V. 
EXAMPLES AND RESULTS 
In this section, we present the examples polluted by 
different percentage of noise density interference and using 
our proposed method PSO-TVAC-CNN compares with 
PSO-CNN [5] for gray and color image noise cancellation 
respectively. 
A. Examples 1 
Consider a 256×256 LENA Gary-Scale image Fig. 5(a) 
which is polluted by the salt and pepper noise 10%, 20%, 
30% in Fig. 5(b) - Fig. 5(d), respectively. The parameters of 
the proposed method PSO-TVAC-CNN and PSO-CNN are 
set as indicated in Table 1 and Table 2, respectively. The 
self-adapting inertia weight w is defined in [17]. 
TABLE I.  
PSO-TVAC PARAMETERS SETTING 
The number of swarm size 
12 
The maximum position Xmax 
10 
The maximum velocity Vmax 
1 
Acceleration coefficient c1max 
2.5 
Acceleration coefficient c1min 
0.5 
Acceleration coefficient c2max 
2.5 
Acceleration coefficient c2min 
0.5 
Inertia weight W 
0.8 
Iterations 
500 
TABLE II.  
PSO PARAMETERS SETTING 
The number of swarm size 
12 
The maximum position Xmax 
10 
The maximum velocity Vmax 
1 
Acceleration coefficient c1 
2.05 
Acceleration coefficient c2 
2.05 
Inertia weight W 
0.8 
Iterations  
500 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 5.  (a) Original LENA gray-Scale image (b) The contaminated 
image with 10% noise (c) The contaminated image with 20% noise (d) The 
contaminated image with 30% noise. 
  
 
5(a)                                     5(b) 
  
  
5(c)                                      5(d) 
  
(a)                                               (b) 
PSO-TVAC 
111
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

According to these parameters, the consequences of 
approximated optimal templates A, D, and threshold K were 
found by the PSO-TVAC after a few iterations. 
 
The contaminated image with 10% noise: 
 
.0 2495
,
.0 2810
.0 6154
.0 2810
.0 6154
.5 5066
6154
.0
.0 2810
.0 6154
2810
.0
,
0
.0 3698
0
.0 3698
.0 6665
3698
.0
0
.0 3698
0
























K
D
A
    
The contaminated image with 20% noise: 
 
.0 2488
,
.0 2881
.0 7562
2881
.0
.0 7562
.4 9813
.0 7562
.0 2881
.0 7562
.0 2881
,
0
.0 4256
0
.0 4256
.0 8792
.0 4256
0
.0 4256
0
























K
D
A
 
The contaminated image with 30% noise: 
 
.0 2721
,
.0 2475
.0 6196
2475
.0
.0 6196
.3 6130
6196
.0
.0 2475
.0 6196
2475
.0
,
0
.0 4144
0
.0 4144
.0 8347
4144
.0
0
.0 4144
0
 























K
D
A
   
Similarly according to above parameters setting, the PSO 
found the consequences of approximated optimal templates 
A, D and threshold K as following: 
 
The contaminated image with 10% noise: 
 
.0 2460
,
.0 2824
.0 0459
2824
.0
.0 0459
.3 4591
0459
.0
.0 2824
.0 0459
2824
.0
,
0
.0 2732
0
.0 2732
.0 1733
2732
.0
0
.0 2732
0
 



























K
D
A
 
 
The contaminated image with 20% noise: 
 
.0 1440
,
.0 0928
.1 1943
0928
.0
.1 1943
.4 4690
1943
.1
.0 0928
.1 1943
0928
.0
,
0
.0 6230
0
.0 6230
.1 5564
6230
.0
0
.0 6230
0
























K
D
A
 
 
The contaminated image with 30% noise: 
 
.0 4617
,
.0 1076
.0 6847
1076
.0
.0 6847
.3 9886
.0 6847
.0 1076
.0 6847
.0 1076
,
0
.0 3224
0
.0 3224
.1 0504
.0 3224
0
.0 3224
0
























K
D
A
 
 
The error after a few iterations for PSO-TVAC-CNN and 
PSO-CNN are shown in Fig. 6-8. Table 3 shows the PSNR 
[18] of the  image noise cancellation with both cases. 
 
0
50
100
150
200
250
300
350
400
450
500
0
20
40
60
80
100
120
140
160
180
200
PSO-CNN and PSO-TVAC-CNN Training
Iteration
Error(pixel)
 
 
PSO
PSO-TVAC
 
Figure 6.  PSO-TVAC-CNN and PSO-CNN Training for Gray image with 
10% noise 
 
0
50
100
150
200
250
300
350
400
450
500
0
20
40
60
80
100
120
140
160
180
200
PSO-CNN and PSO-TVAC-CNN Training
Iteration
Error(pixel)
 
 
PSO
PSO-TVAC
 
Figure 7.  PSO-TVAC-CNN and PSO-CNN Training for Gray image with 
20% noise 
 
0
50
100
150
200
250
300
350
400
450
500
0
20
40
60
80
100
120
140
160
180
200
PSO-CNN and PSO-TVAC-CNN Training
Iteration
Error(pixel)
 
 
PSO
PSO-TVAC
 
Figure 8.  PSO-TVAC-CNN and PSO-CNN Training for Gray image with 
30% noise 
 
112
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

TABLE III.  
PSNR OF THE GRAY IMAGE (256×256 LENA) NOISE 
CANCELLATION 
Salt and 
Pepper 
Contaminate
d Image 
PSO-TVAC-
CNN 
PSO-CNN
10% Noise 
15.1659 dB 
34.3663 dB 
33.3802 dB 
20% Noise 
12.0989 dB 
31.9834 dB 
27.3987 dB 
30% Noise 
10.3124 dB 
29.8721 dB 
26.9026 dB 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 9.  Results by  using PSO-TVAC-CNN algorithm for the Gary-
Scale image with noise of (a) 10%, (b)20%, (c)30% 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 10.  Results by  using PSO-CNN algorithm for the Gary-Scale image 
with noise of (a) 10%, (b)20%, (c)30% 
Using the above templates, the output images processing 
by PSO-TVAC-CNN and PSO-CNN are shown in Fig. 9(a) 
- 9(c) and Fig. 10(a) - 10(c) respectively. By comparing Fig. 
6 - 8, Table 3 and Fig. 9(a) – 9(c) with Fig. 10(a) – 10(c) 
respectively, our proposed method PSO-TVAC-CNN could 
restrain from noise of the polluted image more effectively 
than PSO-CNN.  
Next we apply the same optimal templates found by PSO-
TVAC-CNN to the Color images to prove the better 
performance. 
 
B. Examples 2 
In order to demonstrate that the optimal template has the 
same performance when processing color images, we have 
performed similar tests with the color version of the Lean 
image (Fig. 11(a)). The 256×256 LENA color image in Fig. 
11(b) - 11(d) which is polluted by the salt and pepper noise 
10%, 20%, 30%, respectively.  
 
  
 
11(a)                                        11(b) 
  
 
11(c)                                       11(d) 
Figure 11.  (a) Original LENA color image (b) The contaminated image 
with 10% noise (c) The contaminated image with 20% noise (d) The 
contaminated image with 30% noise. 
By using the proposed method PSO-TVAC-CNN and 
median filter, the results for the output images obtained in 
Fig. 12(a) - 12(c) and 13(a) - 13(c). Table 4 show the PSNR 
of the color image noise cancellation with both cases. 
TABLE IV.  
PSNR OF THE COLOR IMAGE (256×256 LENA) NOISE 
CANCELLATION 
Salt and 
Pepper 
Contaminated
Image 
PSO-TVAC-CNN 
Median 
filter 
10% Noise 
15.1767 dB 
34.0704 dB 
30.6477 dB
20% Noise 
12.1143 dB 
30.9633 dB 
27.4666 dB
  
  
9(a)                                     9(b) 
 
9(c)                                     
  
  
10(a)                                    10(b) 
 
10(c)                                      
113
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

30% Noise 
10.3164 dB 
28.3820 dB 
22.9037 dB
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 12.  Results by  using PSO-TVAC-CNN algorithm for the color 
image with noise of (a) 10%, (b)20%, (c)30%.  
 
  
 
13(a)                                          13(b) 
 
13(c) 
Figure 13.  Results by  using median filter algorithm for the color image 
with noise of (a) 10%, (b)20%, (c)30%. 
By comparing Fig. 12(a) - 12(c) with Fig. 13(a) - 13(c), 
and Table 4, our proposed method (PSO-TVAC-CNN) 
could restrain from noise of the polluted image more 
effectively than PSO-CNN. 
 
VI. 
CONCLUSION 
In this paper, we have presented a Cellular Neural 
Network templates learning method that combined Particle 
Swarm Optimization with Time-Varying Acceleration 
Coefficients, applied to color image noise cancellation. 
Template learning is a crucial step in cellular neural network 
technology. The implementation of PSO-TVAC-CNN is a 
contribution to the modern heuristics research in the image 
processing area. From the demonstrated examples, the 
proposed algorithm shows the better performance of the 
noise cancellation for color image than PSO-CNN.  
In the future research, we hope to improve the adaptive 
templates training to repair the color images that are 
polluted by the higher density of miscellaneous noises. For 
real applications, the proposed method may be implemented 
and fabricated on FPGA or VLSI technology.  
 
REFERENCES 
[1] 
J. Kennedy and R. C. Eberhart, “Particle Swarm Optimization”, 
Proceedings of IEEE International Conference on Neural Networks, 
Perth, Australia, pp. 1942–1948, 1995. 
[2] 
J. Kennedy and R. C. Eberhart, “A New Optimizer Using Particle 
Swarm Theory”, Proceedings of the Sixth International Symposium 
on Micromachine and Human Science, Nagoya, Japan, pp. 39–43, 
1995. 
[3] 
D.X. Zhang, Z. Hong Guan, X.Z. Liu, “An adaptive particle swarm 
optimization algorithm and simulation”, Proceedings of the IEEE 
International Conference on Automation and Logistics, pp. 2399–
2402, 2007. 
[4] 
M. Nakagawa, T. Inoue and Y. Nishio, “CNN Template Learning To 
Obtain Desired Images Using Back Propagation Algorithm”, IEEE 
Workshop on Nonlinear Circuit Networks, pp. 93-95, 2009. 
[5] 
T. J. Su, T. H. Lin, J. and, W. Liu “Particle Swarm Optimization for 
Gray-Scale Image Noise Cancellation”, International Conference on 
Intelligent Information Hiding and Multimedia Signal Processing, 
pp.1459-1462, 2008. 
[6] 
L. O. Chua and L. Yang, “Cellular Neural Networks: Theory”, IEEE 
Trans. Circuits Syst., vol. 35, pp.1257–1272, Oct. 1988. 
[7] 
L. O. Chua and L. Yang, “Cellular Neural Networks: Applications”, 
IEEE Trans. Circuits Syst., vol. 35, pp.1273–1290, Oct. 1988. 
[8] 
T. J. Su, J. C. Cheng, M. Y. Huang, T. H. Lin, and, C. W. Chen 
“Applications of Cellular Neural Networks to Noise Cancelation in 
Gray Images Based on Adaptive Particle-swarm Optimization”, Circ. 
Syst. Signal, Jan. 2011, doi: 10.1007/s00034-011-9269-x. 
[9] 
F. Heppner and U. Grenander: “A Stochastic Nonlinear Model for 
Coordinated Bird Flocks”, The Ubiquity of Chaos, AAAS Publications, 
Washington DC, 1990. 
[10] Y. Shi and R. Eberhart, “A Modified Particle Optimizer”, 
Proceedings of the 1998 IEEE World Congress on Computational 
Intelligence, pp. 69–73, May 1998. 
[11] Y. Shi and R. Eberhart, “Parameter Selection in Particle Swarm 
Optimization”, Proceedings of the 7th International Conference on 
Evolutionary Programming VII, Lecture Notes In Computer Science, 
pp. 591—600, 1998. 
[12] A. Ratnaweera, Saman K. Halgamuge and Harry C. Watson, “Self-
Organizing Hierarchical Particle Swarm Optimizer with Time-
  
 
12(a)                                    12(b) 
 
12(c) 
114
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

Varying 
Acceleration Coefficients”, IEEE Transactions on 
Evolutionary Computation, Vol. 8, No. 3, pp. 240–255, 2004. 
[13] P. L. Venetianer, T. Roska and L. O. Chua, “Analogic CNN 
Algorithms for Some Image Compression, Decompression and 
Restoration Tasks”, IEEE Transactions on Circuits and Systems I: 
Fundamental Theory and Applications, Vol. 42, No. 5, pp. 278–284, 
1995. 
[14] A. Zarandy, F. Werblin, T. Roska and L. O. Chua, “Novel Types of 
Analogic CNN Algorithms for Recognizing Bank-Notes”, CNNA-94 
Third IEEE International Workshop on Cellular Neural Networks and 
their Applications, pp. 273–278, Dec. 8–21, 1994. 
[15] A. Zarandy, A. Stoffels, T. Roska and L. O. Chua, “Implementation 
of Binary and Gray-Scale Mathematical on the CNN Universal 
Machine”, IEEE Transactions on Circuits and Systems I: 
Fundamental Theory and Applications, Vol. 45, No. 2, pp. 163–168, 
1998. 
[16] C. Rekeczky, T. Roska and A. Ushida, “CNN-Based Difference-
Controlled Adaptive Nonlinear Image Filters”, International Journal 
of Circuit Theory and Applications, Vol. 26, pp. 375–423, 1998. 
[17] M. Zhang, C. J Li, X.H. Yuan, Y.C. Zhang, “An improved PSO and 
its application in research on reservoir operation function of long-
term”, Third International Conference on Natural Computation, vol. 
4, pp. 118–122, 2007. 
[18] R. Lukac and K. N. Plataniotis, “A Taxonomy of Color Image 
Filtering and Enhancement Solutions”, Advances in Imaging and 
Electron Physics, Vol. 140, pp. 187–264, 2006. 
 
 
 
115
ICDT 2011 : The Sixth International Conference on Digital Telecommunications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-127-4

