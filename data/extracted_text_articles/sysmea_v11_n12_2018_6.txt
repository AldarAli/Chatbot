61
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Modeling of Gas Compressors and Hierarchical Reduction
for Globally Convergent Stationary Network Solvers
Tanja Clees, Igor Nikitin, Lialia Nikitina, Łukasz Segiet
Fraunhofer Institute for Algorithms and Scientiﬁc Computing
Sankt Augustin, Germany
Email: {Tanja.Clees|Igor.Nikitin|Lialia.Nikitina|Lukasz.Segiet}@scai.fraunhofer.de
Abstract—Further development on globally convergent algo-
rithms for solution of stationary network problems is presented.
The algorithms make use of global non-degeneracy of Jacobi ma-
trix of the system, composed of Kirchhoff’s ﬂow conservation con-
ditions and transport element equations. This property is achieved
under certain monotonicity conditions on element equations and
guarantees an existence of a unique solution of the problem as
well as convergence to this solution from an arbitrary starting
point. In application to gas transport networks, these algorithms
are supported by a proper modeling of gas compressors, based
on individually calibrated physical characteristics. This paper
extends the modeling of compressors by hierarchical methods
of topological reduction, combining the working diagrams for
parallel and sequential connections of compressors. Estimations
are also made for application of topological reduction methods
beyond the compressor stations in generic network problems.
Efﬁciency of the methods is tested by numerical experiments on
realistic networks.
Keywords–modeling of complex systems; topological reduction;
globally convergent solvers; applications; gas transport networks.
I.
INTRODUCTION
This work is an extension of our conference paper [1],
concentrated on mathematical modeling of single gas com-
pressors in the context of designing globally convergent net-
work solvers. Here we will add the modeling of aggregate
compressor stations, obtained from the single compressors
by parallel and sequential connections. We perform topolog-
ical reduction of the stations, by combining the individually
calibrated physical proﬁles of compressors into a cumulative
proﬁle, representing the compressor station as a single element.
We will also estimate a beneﬁt of generic topological reduction
algorithms for generic networks and perform more numerical
experiments for this purpose.
The simulation of transport networks in civil engineering
has become increasingly important for the planning and stable
operation of modern infrastructure. Compressors are essential
elements in gas transport networks; they create pressure nec-
essary for driving gas towards the consumers. A mathematical
modeling of gas compressors should take into account their
individually calibrated physical proﬁles. Our approach is based
on conversion of the measured proﬁles into an explicitly
resolved form suitable for globally convergent solvers. In
particular, a proper signature of derivatives for the element
equation of a compressor is provided.
Earlier [2], we have shown that the solvers for generic
stationary network problems can be made globally convergent
under special conditions on modeling of their elements. Sta-
tionary network problems combine linear Kirchhoff’s equa-
tions and (generally non-linear) element equations. The ﬁrst
class of equations represents conservation laws, the second
class describes the transport. We have proven that under certain
monotonicity conditions on element equations, i.e., a special
signature of the derivatives, the whole system possesses a
globally non-degenerate Jacobi matrix. As a result, the problem
always has exactly one solution. Moreover, standard algo-
rithms, like Armijo backtracking line search and Katzenelson
piecewise linear tracing, provide convergence to this solution
from an arbitrary starting point.
These ideas have been implemented in our multi-physics
network simulator MYNTS as described in [3], [4]. Con-
sidering gas transport networks, these papers used a simpli-
ﬁed modeling of gas compressors, known in the simulation
community as free compressors. This type of compressors
does not possess limits on their power, only input or output
pressure or gas ﬂow are restricted. The present work extends
the modeling by realistic characteristics to so called advanced
compressors. Such compressors are described by individually
measured physical proﬁles, deﬁning the limits on power,
revolution number, working region, etc. We will show how
to incorporate such realistic characteristics into our globally
convergent solver.
Modeling of gas transport networks has been considered
in full detail in paper [5]. The networks are composed of
a variety of elements (pipes, valves, compressors, drives,
regulators, resistors, etc.), each type possessing a particular
element equation. For instance, the pressure drop in pipes
is described either by an empiric quadratic law [6] or by
more accurate formulae by Nikuradse [7] and Colebrook-
White [8]. Compressors and regulators have a control logic,
implemented in the form of control equations or inequalities
[5], e.g., a compressor/regulator can have a control goal to
keep ﬁxed output pressure, input pressure or ﬂow value. There
are various models for compressors (turbo, piston) and their
drives (gas turbine, steam turbine, gas motor, electro motor),
with characteristic diagrams calibrated on real engines.
The nodal variables (pressure, density, temperature, etc.)
are related by equations of state, including various gas laws
(ideal, Papay, standards of the American Gas Association –
AGA and the International Organization for Standardization –
ISO [9], [10]). Gas composition is deﬁned in terms of molar
components and effective gas properties (critical temperature
and pressure, caloriﬁc value, molar mass, etc.), with appropri-
ate equations describing their propagation and mixing. Thermal
modeling [5] includes a number of physical effects (non-linear
heat capacity, heat exchange with the soil, Joule-Thomson
effect, i.e., a temperature drop due to free expansion of gas
through a valve, regulator, etc.).

62
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 1. Test gas transport network N1 with 100 nodes, 111 edges.
The obtained system of equations and inequalities is solved
by non-linear programming methods [11], [12]. Due to the
non-linearity of equations, the stability of the solver critically
depends on the choice of the starting point. For this purpose,
various empirical strategies are used [13], [14]. An alternative
has been proposed in our papers [2], [3], employing globally
convergent algorithms, able to ﬁnd the solution from an
arbitrary starting point.
Topological reduction methods of the network utilizing the
elimination of parallel and sequential connections are based
on the concept of series-parallel graph (SPG, [15]). This is the
graph reducible to a single edge by repeated application of such
operations. Further extension is a generalized series-parallel
graph (GSPG, [16]), where in addition to the elimination
of parallel and sequential connections one can eliminate a
leaf (node of valency 1). SPGs and GSPGs are recognizable
in linear time with respect to the size of the graph, or in
logarithmic time using a linear number of parallel processors.
Decomposition of such graphs to elementary components is
also performed in linear time, as well as solution of many other
graph-theoretical problems, which would be NP-complete for
generic graphs [17–19]. In our application, the concepts of
SPGs and GSPSs are of key importance, since they allow
essential reduction of the networks to an irreducible skeleton
with small number of elements. The solver should be applied
only to the skeleton, while the complete solution can be re-
constructed with simple algorithms using the reduction history.
The efﬁciency of such reduction for generic networks will be
studied in this paper.
In Section II, we recall conditions on the generic sta-
tionary network problem, necessary for global convergence,
and concretize these conditions in application to gas transport
networks. In Section III, we describe modeling of advanced gas
compressors. In Section IV, we present our implementation of
modeling, which fulﬁlls the conditions for global convergence.
In Section V, we describe topological reduction algorithms for
gas compressor stations and in Section VI generalize them
to arbitrary elements and network types. In Section VII, we
present numerical experiments with a number of realistic gas
transport network examples and discuss the results obtained.
II.
GLOBAL CONVERGENCE AND GAS TRANSPORT
NETWORKS
A generic stationary network problem can be written as
P
e IneQe = Q(s)
n , n ̸∈ NP , Pn = P (s)
n , n ∈ NP ,
fe(Pin, Pout, Qe) = 0,
(1)
where indices n = 1...N denote the nodes and e = 1...E the
edges of the associated network graph, Ine is an incidence
matrix of the graph, Qe are ﬂows through the edges, Q(s)
n
are
source/sink contributions, localized in supply/exit nodes, Pn
are nodal variables (pressure for gas transport networks), P (s)
n
are set values, localized in the subset NP of supply/exit nodes,
at least one value per connected component of the graph. Let
the element equations possess derivatives of the signature:
∂fe/∂Pin > 0, ∂fe/∂Pout < 0, ∂fe/∂Qe < 0. (2)
It has been proven in [2] that the system (1) under condition
(2) possesses a globally non-degenerate Jacobi matrix.
Gas transport networks, e.g., the networks shown in Fig-
ure 1, consist of several types of elements, all possessing
the property (2). The gas networks are mostly composed of
pipes with a non-linear (nearly quadratic) element equation.
Some elements (valves and shortcuts) have linear equations,
most complex elements (compressors and regulators) possess
piecewise linear equations. According to [14], all continuous

63
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
piecewise linear functions can be represented in a max-min
form:
f(x) = maxi minj
X
k
aijkxk + bij,
(3)
where a, b are coefﬁcient lists. In particular, free compressors
are described by the following element equation:
max(min( Pin − PL, −Pout + PH, −Q + QH),
(4)
Pin − Pout, −Q) + ϵ(Pin − Pout − Q) = 0.
The compressor tries to satisfy one of the following control
goals:
a speciﬁed pressure on output (SPO);
a speciﬁed pressure on input (SPI);
a speciﬁed mass ﬂow (SM).
Being combined with the given upper and lower bounds:
PH = min(SPO, POMAX),
PL = max(SPI, PIMIN),
(5)
QH = min(SM, MMAX),
the element equation deﬁnes a polyhedral surface shown in
Figure 2, top. Here, PH stands for high pressure limit, PL
– low pressure limit, QH – high ﬂow limit; POMAX is an
upper safety bound on output pressure, PIMIN is a lower
safety bound on input pressure, MMAX is an upper safety
bound on the ﬂow.
Every face of the diagram corresponds to the best possible
fulﬁllment of the control goal, e.g., Pout = PH (typical for
SPO-mode), Q = QH (typical for SM-mode), Pin = Pout
(bypass BP, equivalent to an open valve), Q = 0 (OFF,
equivalent to a closed valve), etc. A small ϵ value is used
for regularization purposes.
Every compressor is part of a compressor station, the
simplest one is shown in Figure 2, bottom. This ﬁgure presents
a compressor station with one machine unit, including (in ﬂow
direction) input resistor, compressor, cooler, output resistor,
exit valve, (in an oblique direction) bypass valve, bypass
regulator, both currently closed. In more complex stations,
the compressors with accompanying elements are cascaded to
parallel or sequential conﬁgurations, see Figure 3.
III.
ADVANCED MODELING OF GAS COMPRESSORS
In addition to pressure P, the nodes in gas transport
networks possess other common variables, including: ρ – mass
density, T – temperature, z – compressibility factor, µ – molar
mass.
In addition to conserving mass ﬂow Q, measured in kg/s,
sometimes volume ﬂow Qx is also considered. It is measured
in m3/s with explicit reference to the measurement conditions,
e.g., Qnorm represents the volume ﬂow under normal con-
ditions (1 bar, 273.15 K), Qin,out refers to the volume ﬂow
under conditions in the input and output nodes. Different ﬂow
deﬁnitions are related by the formula:
Q = Qnormρnorm = Qinρin = Qoutρout.
(6)
Advanced compressors bring four new variables: Had – adia-
batic enthalpy increase, ηad – adiabatic efﬁciency, r – revolu-
tion number of compressor drive, W – power of compressor
Figure 2. On the top: control diagram of free compressor. On the bottom: a
compressor station with one machine unit.
drive. Also, four equations are added [5]:
Had = RTinzin/(µα) · ((Pout/Pin)α − 1) ,
W = QHad/ηad,
(7)
Had = (1, r, r2) · A · (1, Qin, Q2
in)T ,
ηad = (1, r, r2) · B · (1, Qin, Q2
in)T ,
where R is the universal gas constant, κ the adiabatic exponent,
α = (κ − 1)/κ. A and B are (3x3)-matrices ﬁlled with cali-
bration constants. In addition, working limits for compressors

64
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 3. A compressor station with two machine units in parallel conﬁgura-
tion.
are deﬁned by the following inequalities:
rmin ≤ r ≤ rmax, ηad ≥ ηmin,
Qin ≥ Qmin, W ≤ Wmax,
(8)
Qmin = (1, Had, H2
ad) · CT ,
Wmax = (1, r, r2) · DT ,
where the constants rmin, rmax deﬁne limits of the revolution
number, ηmin – the lower limit on efﬁciency (so called choke
line); Qmin is a lower limit on the input volume ﬂow (a surge
line), Wmax is an upper limit on power. C, D are (3)-vectors
ﬁlled with calibration constants.
The constants in (A, B, C, D) are found by ﬁtting the
measured data for the compressor considered as part of a
calibration procedure and further represent the individual pro-
ﬁles for this compressor. Here, we described the modeling for
a common class of turbo compressors and gas turbine drive
engines. The other types are simpler in implementation and
can be modeled analogously.
Figure 4 (top) shows proﬁles for a typical turbo compressor.
In this plot, the horizontal axis represents input volume ﬂow
Qin, the vertical axis – adiabatic enthalpy increase Had. Solid
blue curves are the lines of constant revolution number r, their
uppermost curve corresponds to rmax, the lowest curve – to
rmin. The red curve is the surge line Qin = Qmin, while the
rightmost cyan curve – the choke line ηad = ηmin. The points
in this diagram depict the data measured, a blue cross denotes
the current working point of the compressor.
The equations (7) serve as deﬁnitions of newly introduced
variables, while the inequalities (8) deﬁne the restrictions, in
addition to (4) of those for a free compressor. The upper
bounds r = rmax and W = Wmax deﬁne new upper bounds
for the ﬂow and should be combined with the one deﬁned
by the diagram for a free compressor, shown in Figure 2
top. The lower bounds r = rmin and Qin = Qmin show
the points where the station automatically opens its bypass
 0
 10
 20
 30
 40
 50
 60
 0
 2
 4
 6
 8
 10
 12
 14
Had
Qin
Figure 4. Advanced modeling of compressors. On the top: typical characteristic
diagram. Solid blue curves are lines of constant revolution number. On the
bottom: stability analysis.
regulator, shown in Figure 2 bottom. After that the gas starts
to circulate inside the station, so that the compressor never
violates its bounds. The choke line ηad = ηmin cuts off a
region of unstable calibration related with the small ηad in the
denominator of (7). Usually, the working point of a compressor
is not located in this region, except of the starting procedure.
On necessity the diagram can be continued in this region by
a convenient monotone formula.
If Pin and Pout are ﬁxed and the compressor is on its
r = rmax limit, it is straightforward to resolve the equations
analytically, ﬁnding Had, Qin, ρin, Q, ηad and W, in this
order. If r and Qin are ﬁxed and the compressor is on
its W
= Wmax limit, the equations can be resolved in

65
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 5. Advanced modeling of compressors (cont’d). On the top: control
diagram of an advanced compressor. On the bottom: the same diagram in
afﬁne coordinates and color map representation.
the order Had, ηad, Wmax, Q, ρin, Pin, Pout. The ﬁrst
analytic formula gives an explicit representation Q(Pin, Pout)
for the surface, deﬁning a patch of the element equation. The
second one represents the other patch in a parametric form
(r, Qin) → (Pin, Pout, Q). By numerical differentiation, it is
possible to ﬁnd the normals to both surfaces, which directly
deﬁne the signatures of the corresponding patches. We recall
that the correct signature reads (+ − −), see (2). In Figure 4
(bottom) green points show the area of wrong signature. The
blue curve is the surge line, magenta points show the area
ηad < ηmin. Normally, the unstable green area is cut off by
the surge and choke lines, so that the whole working region
of the compressor is stable. In rare cases, when it is not so,
the surge and choke lines should be modiﬁed accordingly.
IV.
GLOBALLY CONVERGENT IMPLEMENTATION
Figure 5 (top) shows the surface Qadv(Pin, Pout) deﬁned
by the characteristics of the advanced compressor. The cali-
brated part of the surface is located between the curves Qmin
and ηmin and consists of two patches I and II, connected on
the rmax line. Patch I is located between the rmax line and the
origin. Here, the input and output pressures are small and the
compressor’s performance is limited by its maximal revolution
number: r = rmax. Patch II is located between the rmax and
rmin lines. Here, the pressures are large and the compressor is
limited by the maximal power of the drive: W = Wmax. On
Qmin and rmin curves the surface vertically falls down. This
behavior corresponds to the open bypass regulator. Q in that
case denotes a total mass ﬂow through the compressor and
bypass regulator. The ﬂow through the compressor remains
equal to Qmin or the equivalent ﬂow on the rmin line, while
the negative difference ∆Q circulates through the bypass
regulator. A slope of the vertically falling faces should be
ϵ-regularized to provide the necessary signature (+ − −).
The surface should be continued beyond ηmin curve by any
function supporting the same signature.
Figure 5 (bottom) shows the same diagram as a color map.
Patch II requires a conversion from parametric to explicit rep-
resentation. For this purpose, we adopt resampling algorithms
well known in computer graphics (CG). At ﬁrst, we perform
an afﬁne transformation:

x
y

=

a
b
0
1
 
Pin
Pout

·
1
Pmax
,
(9)
with a + b = 1. The square on the (x, y)-plane is represented
as a Npx × Npx pixel buffer, storing ﬂoating point values of
Q in double precision. Patches I and II are regularly sampled
and represented as triangle strip sets. Then, the patches are
rendered onto the (x, y)-plane using the Z-buffer algorithm.
Finally, the remaining gaps are ﬁlled by copying a constant
Q-value along the columns and to the right – by a linearly
increasing function in the row. As a result, the Qadv-function
in these regions becomes dependent only on x. Monotonous
increase of Q on the border lines and a choice of afﬁne
coefﬁcients a > 0, b < 0 support correct signature of the
function Qadv(Pin, Pout). If the bypass regulator is activated,
the part above the upper border lines must be reset towards
Q = 0, providing a regularized vertical fall of the surface on
this bound.
The described algorithms provide a transformation from
the calibration coefﬁcients (A, B, C, D) and characteris-
tic diagram in Figure 4 (top) to the tabulated function
Qadv(Pin, Pout), represented by the color map in Figure 5
(bottom). This transformation should be done once per ad-
vanced compressor. For a moment, we use an implementation
of the CG algorithms on Central Processing Unit (CPU) and
plan their acceleration with Graphics Processing Unit (GPU).
In the solver, the lookup function Qadv(Pin, Pout) is made
available via rapid bilinear interpolation of tabulated values
inside the (x, y)-square. It is continued to the whole (x, y)-
plane by an explicit analytic formula:
f(x, y) = f(ˆx, ˆy) + k(min(x, 0) + max(x − 1, 0)), (10)
ˆx = min(max(x, 0), 1), ˆy = min(max(y, 0), 1),
with a constant k > 0. This global function is constructed
similarly to the continuation formulas in [2]. In our special
case it provides monotonous increase in x and constancy in y
outside of the tabulated region.

66
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Finally, the element equation for an advanced compressor
is obtained by extending (4) as follows:
max(min( Pin − PL, −Pout + PH, −Q + QH,
Qadv(Pin, Pout) − Q), Pin − Pout, −Q)
(11)
+ϵ(Pin − Pout − Q) = 0.
For clarity, the inserted term is underlined.
We have implemented the algorithms described above in
our network simulator MYNTS in a preliminary version (solver
strategy “stable”).
V.
MODELING OF GAS COMPRESSOR STATIONS
Machine units consisting of compressors and their drives
are often combined in stations using parallel and sequential
connections, such as shown in Figure 6. Parallel connections
(Figure 6a,c) are used to increase throughput, while sequential
connections (Figure 6b,d) allow to increase the output pressure
in several steps. Mixed connections are also used, possessing
various topologies (Figure 6e-g). In these ﬁgures, the compres-
sor symbols represent single compressor stations (Figure 2),
where the functional element is the compressor and the other
elements serve mainly for ﬂow switching.
The idea considered in this section is to combine the
element equations of single compressors and to represent the
station as a single element. At ﬁrst, free diagrams depending on
(SPO,SPI,SM) parameters should be uniﬁed with the advanced
characteristics, so that the algorithms can operate on a single
table per compressor. Then, the corresponding combination of
lookup tables will describe the behavior of the station as a
whole. This will reduce the number of equations in the system
and will also allow to resolve certain stability issues.
Compressor stations bring unstable internal degrees of
freedom, i.e., undeﬁned balance of ﬂows in parallel stations,
undeﬁned intermediate pressure in sequential stations. This
instability is a particular case of the common singularity, for
which ϵ-regularization is used in the element equation (11).
From a geometrical point of view, the hypersurfaces deﬁned
by the equations do not have a stable transversal intersection,
but are in unstable tangent position.
The reason of this instability is the appearance of linear
dependencies in the system matrix. For instance, two parallel
SPO compressors set the same pressure value in the same
output node, imposing two identical P = SPO equations in
the system. The system matrix becomes formally degenerate.
Also, the fact that one equation is actually wasted leads to
the effective reduction of the system size by one, so that
one of the variables remains undeﬁned. In this particular
example, the undeﬁned variable is the ﬂow balance between the
compressors. In the other case, namely a sequential connection
of SM compressors, the Q = SM equation is duplicate and
the undeﬁned variable is the intermediate pressure between the
compressors.
The replacement of the station by a single element with
combined characteristics removes internal degrees of freedom
and improves stability of the numerical simulation.
Compressors, as well as all other elements are described
by functions of the form: Q(Pin, Pout), or equivalently:
Pout(Pin, Q), Pin(Pout, Q), where Q is the mass ﬂow,
Pin, Pout are input/output pressures. Monotonicity conditions
Figure 6. Examples of compressor stations: (a) parallel, (b) sequential, (c) 3
parallel, (d) 3 sequential, (e-g) mixed.

67
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 7. Equality of ﬂows in sequential station has a single solution, due to
monotonicity of element equations.
allow a unique inversion for any of these functions with respect
to one of the arguments, passing from one representation to
the other.
According to Kirchhoff’s law, for connected elements
(1, 2) these functions can be combined as follows:
parallel connection:
Q(Pin, Pout) = Q1(Pin, Pout) + Q2(Pin, Pout);
(12)
sequential connection:
Pout(Pin, Q) = Pout,2(Pout,1(Pin, Q), Q).
(13)
Considering the monotonicity of the element equations, it is
easy to verify that the combined elements possess correct sig-
nature of the derivatives, necessary for the global convergence.
Indeed, the sum of monotonic functions in parallel connection
is the monotonic function of the same signature. The compo-
sition of functions in sequential connection is monotonously
increasing with Pin and monotonously decreasing with Q, as
needed.
Practically, if the elements are represented by a lookup
function Q(Pin, Pout), their parallel connection becomes espe-
cially simple, one just needs to sum the corresponding lookup
tables. Sequential connection requires the inversion of the
lookup functions, which can be performed on the ﬂy by solving
the equation
Q1(Pin, P ∗) = Q2(P ∗, Pout)
(14)
for the intermediate pressure P ∗. Here the ﬁrst function
monotonously decreases with P ∗, while the second function
monotonously increases with P ∗. Also, the continuation of the
functions outside working region ensures the following signs
at inﬁnities
Q1(Pin, ±∞) = ∓∞, Q2(±∞, Pout) = ±∞.
(15)
As a result, the graphs of these functions always have a single
intersection point, as shown in Figure 7. Thus, equation (14)
has a unique solution. It can be found, e.g., by Newton’s
method with Armijo line search stabilizer. Since lookup func-
tions are piecewise linear with respect to P ∗, this method
converges to the solution in a ﬁnite number of steps. Then, the
resulting Q1(Pin, P ∗) gives a combined diagram Q(Pin, Pout)
for the sequential station.
Being equipped with the elementary algorithms for parallel
and sequential connections, one can apply them recursively to
reduce the compressor station to a single element, also for
mixed conﬁgurations.
VI.
GENERIC TOPOLOGICAL REDUCTION
In exactly the same way, the rules for combining parallel
and sequential connections can be applied to the edge elements
of an arbitrary type. Suppose that all elements in the network
are represented by tabulated lookup functions. Applying the
above described parallel and sequential connection rules, one
can combine the elements and reduce the network graph
signiﬁcantly. In the given section, we will investigate this
possibility. Here, we do not actually implement the tabulation
for all elements, instead, we estimate the efﬁciency of the
reduction to forecast a beneﬁt of such implementation.
Parallel and sequential connection rules are based on Kirch-
hoff’s law, which must be modiﬁed in supply/exit nodes. The
simple summing rule for parallel conﬁguration remains valid
also in the presence of such nodes. For sequential conﬁguration
modiﬁcations of the algorithm are needed.
There are Qset nodes, where source/sink contributions for
the ﬂow are given. If an intermediate node in sequential
conﬁguration has Qset, it should be used to shift one of the
ﬂow arguments in Pout,2(Pout,1(Pin, Q), Q−Qset), or, equiv-
alently, in the equation Q1(Pin, P ∗) − Qset = Q2(P ∗, Pout).
The shifts Q − Qset obviously do not change the signature of
the derivatives in the element equation and do not inﬂuence
the stability.
To keep a standard form of the element with a unique ﬂow
assigned to it one can formally deﬁne Q = Q1 and move
Qset to the output node. Such shifts should be stored so that
the inverse reconstruction can return all Qset entries to their
places. The algorithm will shift Qset entries until they stop in
a node of irreducible skeleton. If two Qset entries collide, their
values can be summed. If Qset stops in Pset node, it means
an addition to the unknown Q source/sink contribution, which
is already present there.
In Pset nodes Kirchhoff’s law is replaced by P = Pset
condition. If this node appears as the intermediate node in
sequential conﬁguration, the element functions Q1(Pin, Pset)
and Q2(Pset, Pout) can be used to ﬁnd (generally non-equal)
ﬂows. The difference of these ﬂows is sourced/sinked in this
Pset node.
However, to keep the element standard, one needs to shift
the unknown ﬂow contribution to the output node. It cannot be
implemented as a standard Qset since this contribution is not a
constant but depends on Pin, Pout. Therefore, the topological
reduction should be stopped in Pset nodes.
Practically, the algorithm can be also stopped in the
other user-deﬁned nodes. One can agglomerate passive sub-
graphs, e.g., consisting of pipes and resistors, and keep Pset,
Qset, compressors, regulators and other active elements non-
contracted. In this way, a signiﬁcant reduction can be achieved
while the state of active elements and all values deﬁning
scenario settings remain under user control.
In particular cases, further simpliﬁcations are possible.
Electric elements depend on voltage difference and require not

68
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
2D but 1D proﬁles. This signiﬁcantly reduces the computa-
tional effort. Linear electric resistors and quadratic hydraulic
resistors are described by numerical constants instead of pro-
ﬁles, bringing an additional speedup.
Our non-linear element equations are similar to Green’s
functions [20] in linear systems measuring a response of the
system on an external perturbation. The elements with two
ends (edges) are described by two-point Green’s functions,
which can be properly combined into the other two-point
Green’s function by parallel and sequential connections. For
more complex topologies, higher order response functions can
be introduced (three-point, etc.). Technically it is possible to
precompute also higher order functions. However, their storage
and processing will require introduction of multidimensional
tables with enormous consumption of resources and computa-
tional expenses. We prefer to stay on two-point level and apply
the reduction algorithms there.
It is clear that not all networks can be reduced to a single
element by a combination of parallel and sequential (parseq)
reduction algorithms. Figure 8 shows some examples of irre-
ducible network topologies. Circular symbols on this ﬁgure
denote arbitrary, not necessarily identical elements. In the
examples shown in Figure 8a-d,g neither parallel nor sequential
connections can be found and the networks cannot be further
reduced by these algorithms. An exception is the case when the
vertical elements in the conﬁgurations Figure 8a,b are closed
or open valves, or shortcuts. Then these conﬁgurations become
further reducible.
An additional resource for the reduction is available for
tree-like subgraphs, as shown in Figure 8c,d. Suppose that the
leaves of the tree (nodes of valency 1) are all Qset nodes,
including the regular Qset = 0 ones. An exception is one
node (the root), which is either Pset node or it is connected
to a larger parent graph. For deﬁniteness, on Figure 8c,d, the
leftmost node can be considered as the root.
Using Kirchhoff’s law, one can sum the ﬂows starting from
leaves towards the root and completely determine the ﬂow
distribution in this subgraph. Then, starting from the root and
using element functions in the form Pout(Pin, Q), one can
transfer P-values upto the leaves. In this way, the problem
can be solved in the subgraph by a simple algorithm without
actually passing it to the generic solver. On the topological
level, the whole tree-like subgraph can be collapsed to the
root node, representing a cumulative Qset for this subgraph,
in frames of the parent graph.
The tree reduction algorithm is essentially based on the
presence of a single Pset node in the subgraph. If the tree
contains two or more Pset nodes, Kirchhoff’s law cannot be
applied and the reduction algorithm stops there. The reduction
can also require the combination of all algorithms. On Fig-
ure 8e one needs to apply parallel reduction to proceed with
the tree. On Figure 8f the graph can be reduced by application
of sequential, parallel and tree algorithm. On Figure 8g one
needs to apply tree algorithm ﬁrst, then parseq.
It is remarkable that namely the operations of paral-
lel/sequential elimination and tree reduction, which in our
application simplify the numerical solution of network prob-
lems, are used in graph theory to accelerate the solution of
combinatorial problems, upto linear time performance. In our
case, the elimination of subgraphs of SPG/GSPG type [15],
[16] allows to reduce the network to a skeleton, on which
the actual numerical solution should be performed. Then the
solution in the reduced parts can be reconstructed back by
simple algorithms.
In our implementation, the topological reduction procedure
starts from a common algorithm (clean), performing the fol-
lowing steps. All closed elements (closed valves, compressors,
regulators) are removed from the network together with discon-
nected subgraphs where no Pset is reachable. This step ensures
that P-values are everywhere deﬁned. All open elements (open
valves, shortcuts, short segments of pipes, compressors and
regulators in bypass mode, etc.) that transfer P-values from
one node to the other without a change are collapsed. This step
ensures that no superconductive loops appear leading to cycles
of undeﬁned ﬂow. The both steps are necessary to provide
global non-degeneracy of the system.
Then parallel, sequential and tree algorithms are applied
one after the other, repeatedly, till the reduction is complete.
The reduced graph is passed to the solver. After the solution
is found, the reduction history can be used to recover the
complete answer.
We remind that the last step in the reduction procedure
was either a join of two elements, parallel or sequential, or
elimination of the leaf. If it was parallel join, Pin, Pout are
common, Q is known, while Q1/Q2 balance can be found
using stored Q1(Pin, Pout), Q2(Pin, Pout) characteristics. If
it was sequential join, Q is common, Pin, Pout are known,
the intermediate value P ∗ can be reconstructed using stored
Pout,2(Q, Pin). If it was elimination of the leaf, Q and Pin
are known, Pout can be found from the stored Pout(Q, Pin).
Thus, we have recovered the missed properties in one step
and can repeat this process recursively until all these data are
reconstructed.
VII.
RESULTS
For benchmarking the algorithms, we have received a
number of realistic test scenarios from our industrial partners.
The simplest gas transport network N1 from our test set
is shown in Figure 1. It contains two compressor stations,
each equipped with two machine units, cf. Figure 2 (bottom),
working in parallel mode. It has two Pset supplies and three
Qset consumers. The color shows the pressure distribution
over the network, arrows – the direction of gas ﬂow, thickness
of lines – the diameter of the pipes. Supplies are shown by
rhombi, consumers (n76, n80, n91) are shown by triangles.
The main elements are shown in the legend.
A closeup to one of the compressors is shown in Figure 2
(bottom), and its characteristics are displayed in Figure 4 (top).
Parameters of more complex networks are presented in Table I.
In particular, medium-sized network N2 contains about a thou-
sand nodes and edges and is equipped with 7 compressors. The
largest considered network N3 has about ﬁve thousand nodes
and edges and is driven by 25 compressors. Topological con-
nection of elements in the network together with geographic
coordinates, the lengths and diameters of pipes form so called
geometry of the network. Physical setting, such as supply
pressures and consumer ﬂows, control settings of compressors
and regulators, deﬁne scenario for the particular simulation
case. All networks in our test set were simulated with the
same gas composition at 20◦C environmental temperature.

69
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 8. Examples of network topologies: (a-d) are irreducible for parseq
algorithm, (c,d) are reducible for tree algorithm, (e-g) require combination of
algorithms parseq+tree.
TABLE I. PARAMETERS OF TEST NETWORKS
network
nodes
edges
compressors
psets
N1
100
111
4
2
N2
931
1047
7
4
N3
4466
5362
25
6
In Table II, we compare the performance of the imple-
mented algorithms (strategy “stable”) with the performance
of the solver with standard settings. For each network in the
test set two scenarios are considered, with different numerical
values of set points for input pressures and output ﬂows and
compressor/regulator SM, SPO settings. Divergent cases are
marked as ’div’. The number of iterations (iter.) and timing (t)
are given. The simulation is performed on a 3 GHz Intel i7
CPU 8 GB RAM workstation.
All scenarios are tested both with free and advanced com-
pressor models. We see that the standard solver provides worse
convergence and even diverges in certain scenarios. Some
scenarios show divergence already for free compressors, some
diverge on advanced ones only. The new algorithm converges
in all cases, in agreement with its theoretical properties. We
also see that the table lookup implemented for advanced
modeling has a negligible computational overhead in strategy
“stable”.
TABLE II. COMPARISON OF THE ALGORITHMS
solver strategy
scenario
standard
stable
free
advanced
free
advanced
iter.
t, sec
iter.
t, sec
iter.
t, sec
iter.
t, sec
N1S1
3
0.01
32
0.12
2
0.01
2
0.01
N1S2
57
0.17
70
0.21
11
0.03
4
0.02
N2S1
11
0.27
19
0.64
12
0.31
12
0.37
N2S2
div
–
div
–
13
0.36
15
0.48
N3S1
div
–
div
–
26
3.3
23
3.5
N3S2
47
6.5
div
–
26
3.3
24
3.6
TABLE III. NODES / EDGES COUNT
FOR REDUCTION ALGORITHMS
network
orig
clean
clean+
clean+
parseq
parseq+tree
N1
100 / 111
37 / 38
10 / 9
2 / 1
N2
931 / 1047
504 / 514
289 / 295
15 / 17
N3
4466 / 5362
1755 / 1843
1012 / 1056
46 / 62

70
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 9. Network N1 after topological reduction.
The network N1, whose original structure is displayed on
Figure 1, is ultimately reduced to a single element directly
connecting two Pset nodes, see Figure 9. The element equation
immediately allows to ﬁnd the ﬂow through the element:
Q(Pset1, Pset2). All Qset nodes are moved by the algorithm to
the output node, into Pset2. The value Q(Pset1, Pset2) − Qset
deﬁnes the ﬂow sourced / sinked in this node. The inverse
reconstruction procedure will redistribute the cumulative Qset
to the actual positions.
In Table III, the efﬁciency of the topological reduction
algorithms applied to the test networks is presented. Already
the ﬁrst step (clean) brings signiﬁcant reduction, due to the
abundance of valves and shortcuts in the network. Further steps
bring a signiﬁcant reduction factor ∼70. Therefore, the reduced
networks will be solved very fast or will have an explicit
solution, like N1 example above. However, one should not
forget that the reduction procedure includes operations on the
data ﬁelds, large tables and is computationally intensive.
Estimation
shows
that
topological
reduction
requires
O(Nit1N 2
pxNelem) operations and O(N 2
pxNelem) memory,
where Nit1 is an average number of iterations per pixel
necessary to to combine two neighbor elements, Npx is the
resolution of element diagrams, Nelem = N + E is the
total number of elements. The practical values are Nit1 ∼1-
10, Npx ∼10-100. The direct solution also has an empirical
estimation of O(Nit2b2Nelem) operations, with Nit2 ∼10-100,
b ∼10-100. Here Nit2 is the number of iterations of the non-
linear solver, bandwidth parameter b is related with the sparsity
of the system. The inverse reconstruction requires only lookup
operations on stored reduction history and is performed much
faster than the forward reduction algorithm.
According to this estimation, the topological reduction is
a bit faster than the direct solution, but of the same order of
magnitude. Both procedures are linearly scaled with Nelem. It
is important that the topological reduction of certain subsys-
tems can be performed once if their parameterization will not
be further changed. Also, the reduction of the system leads
to elimination of degenerate degrees of freedom and increases
the stability of solution procedure as a whole.
VIII.
CONCLUSION AND FURTHER PLANS
A mathematical modeling of gas compressors with their
individually calibrated physical proﬁles has been presented.
The measured proﬁles are converted to an explicitly resolved
form using the algorithms inspired by computer graphics.
The control element equation for a free compressor has been
extended by a lookup function representing the working region
of the advanced compressor.
The resulting equation possesses the desired signature of
derivatives necessary for global non-degeneracy of the Jacobi
matrix. Therefore, the globally convergent algorithm earlier de-
veloped for the solution of network problems is also applicable
for advanced modeling, with a negligible computational over-
head. The efﬁciency of the approach has been demonstrated
for a number of real-life network scenarios. The algorithm
signiﬁcantly overperforms a standard Newtonian solver in
terms of stability, number of iterations and computational time.
The algorithms for topological reduction of compressor
stations with parallel and sequential connections have been
developed. The algorithms combine the lookup tables for
individual compressors into a cumulative working diagram,
representing the behavior of compressor station as a whole.
This allows to eliminate the internal degrees of freedom,
further improving numerical stability of the solver.
The topological reduction has been extended by a tree
reduction algorithm and its applicability to generic networks
of arbitrary elements has been investigated. Estimations of
the efﬁciency of the reduction procedure on realistic network
problems shows a potential of signiﬁcant simpliﬁcation, with a
reduction factor about 70. In certain cases the network appears
to be reducible to a single element, thus the solution by the
non-linear solver in these cases is actually not needed and the
result can be completely reconstructed by simple algorithms
from the reduction history.
Our further plans include the implementation of the al-
gorithms with GPU parallelization, extension of compressor
proﬁles with dependencies on temperature and gas composi-
tion and a special consideration for nearly singular element
equations.
ACKNOWLEDGMENT
We are grateful to the organizers and participants of
INFOCOMP 2017 conference for fruitful discussions. This
work is supported by German Federal Ministry for Economic
Affairs and Energy, project BMWI-0324019A, MathEnergy:
Mathematical Key Technologies for Evolving Energy Grids.
This material is also based upon work supported by the
German Bundesland North Rhine-Westphalia using fundings
from the European Regional Development Fund, grant Nr.
EFRE-0800063, project ES-FLEX-INFRA.
REFERENCES
[1]
T. Clees, I. Nikitin, and L. Nikitina, “Advanced Modeling of Gas
Compressors for Globally Convergent Stationary Network Solvers”,
in Proc. INFOCOMP 2017, The Seventh International Conference
on Advanced Communications and Computation, June 25-29, 2017,
Venice, Italy, IARIA, 2017, pp. 52-57.
[2]
T. Clees, I. Nikitin, and L. Nikitina, “Making Network Solvers Globally
Convergent”, Advances in Intelligent Systems and Computing, vol. 676,
2017, pp. 140-153.
[3]
T. Clees, N. Hornung, I. Nikitin, and L. Nikitina, “A Globally Con-
vergent Method for Generalized Resistive Systems and its Application
to Stationary Problems in Gas Transport Networks”, In Proc. SIMUL-
TECH 2016, SCITEPRESS, 2016, pp. 64-70.
[4]
T. Clees et al., “MYNTS: Multi-phYsics NeTwork Simulator”, In Proc.
SIMULTECH 2016, SCITEPRESS, 2016, pp. 179-186.
[5]
M. Schmidt, M. C. Steinbach, and B. M. Willert, “High detail stationary
optimization models for gas networks”, Optimization and Engineering,
vol. 16, num.1, 2015, pp. 131-164.
[6]
J. Mischner, H.G. Fasold, and K. Kadner, System-planning basics of
gas supply, Oldenbourg Industrieverlag GmbH, 2011 (in German).
[7]
J. Nikuradse, “Laws of ﬂow in rough pipes”, NACA Technical Memo-
randum 1292, Washington, 1950.

71
International Journal on Advances in Systems and Measurements, vol 11 no 1 & 2, year 2018, http://www.iariajournals.org/systems_and_measurements/
2018, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[8]
C. F. Colebrook and C. M. White, “Experiments with Fluid Friction
in Roughened Pipes”, in Proc. of the Royal Society of London, Series
A, Mathematical and Physical Sciences, vol. 161, num. 906, 1937, pp.
367-381.
[9]
J.
Saleh,
ed.,
Fluid
Flow
Handbook,
McGraw-Hill
Handbooks,
McGraw-Hill, 2002.
[10]
DIN EN ISO 12213-2: Natural Gas – Calculation of compression factor,
European Committee for Standartization, 2010.
[11]
A. W¨achter and L. T. Biegler, “On the implementation of an interior-
point ﬁlter line-search algorithm for large-scale nonlinear program-
ming”, Mathematical Programming, vol. 106, num. 1, 2006, pp. 25-57.
[12]
R. Fletcher, Practical Methods of Optimization, Wiley, 2013.
[13]
M. Schmidt, M. C. Steinbach, and B. M. Willert, “High detail sta-
tionary optimization models for gas networks: validation and results”,
Optimization and Engineering online, 2015, DOI: 10.1007/s11081-015-
9300-3
[14]
A. Griewank, J.-U. Bernt, M. Radons, and T. Streubel, ‘Solving
piecewise linear systems in abs-normal form”, Linear Algebra and its
Applications, vol. 471, 2015, pp. 500-530.
[15]
D. Eppstein, “Parallel recognition of series-parallel graphs”, Information
and Computation, vol. 98, 1992, pp. 41-55.
[16]
N. M. Korneyenko, “Combinatorial algorithms on a class of graphs”,
Discrete Applied Mathematics, vol. 54, 1994, pp. 215-217.
[17]
K. Takamizawa, T. Nishizeki, and N. Saito, “Linear-time computability
of combinatorial problems on series-parallel graphs”, JACM, vol. 29,
1982, pp. 623-641.
[18]
M. W. Bern, E. L. Lawler, and A. L. Wong, “Linear-time Computation
of Optimal Subgraphs of Decomposable Graphs”, J. Algorithms, vol.
8, 1987, pp. 216-235.
[19]
T. Kikuno, N. Yoshida, and Y. Kakuda, “A Linear Algorithm for the
Domination Number of a Series Parallel Graph”, Disc. Appl. Math.,
vol. 5, 1983, pp. 299-311.
[20]
M. Hazewinkel, ed., “Green function”, Encyclopedia of Mathematics,
Springer 2001.

