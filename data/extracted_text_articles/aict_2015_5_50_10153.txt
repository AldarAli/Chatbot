False Alarm Rate Analysis of the FCME Algorithm in Cognitive Radio Applications
Johanna Vartiainen and Risto Vuohtoniemi
Centre for Wireless Communications
University of Oulu
Oulu, Finland
Email: firstname.lastname@ee.oulu.fi
Abstract—Cognitive radio is a promising choice to fulﬁll needs
of growing wireless applications in the future. Spectrum sensing
is beneﬁcial in several circumstances when secondary user (SU)
search empty frequencies for a transmission. One interesting
choice for spectrum sensing is the localization algorithm based
on the double-thresholding (LAD) method. The LAD method
is based on the forward consecutive mean excision (FCME)
algorithm that calculates the used thresholds. Threshold setting
is based on the usage of the desired false alarm rate, which is
sensitive to issues like the length of the integration time. In the
real-time applications, integration time is limited. In this paper,
the false alarm rate of the FCME algorithm is studied. The false
alarm rates of the FCME algorithm in the noise-only case with
different integration times (sample vector lengths) are analyzed.
The minimum length of the sample vector is deﬁned. The
simulation results are veriﬁed by the real measurement results
in the noise-only case, and a scenario that combines the results
is presented. It is also noted that in the noise measurements, the
achieved false alarm rates are somewhat lower than the desired
ones.
Keywords–cognitive radio; spectrum sensing; false alarm rate.
I.
INTRODUCTION
Cognitive radio technology [1] [2] [3] can be considered
as a revolution against the traditional, inﬂexible frequency al-
location. Cognitive radio (CR) enables both dynamic spectrum
management and ﬂexible transmission bandwidth [4]. In CR,
secondary users (SU) may transmit if there is room aka empty
frequencies (white space) in the spectrum and if they are not
interfering primary users (PU). Interference-free transmission
is a privilege of the PUs. In cognitive radio, SUs may ﬁnd out
empty frequencies using, for example, databases or spectrum
sensing [5] [6] [7] [8]. Sensing may be beneﬁcial instead of
geolocation and databases, for example, in the wireless local
area network (WLAN)-type solutions when transmitters are
located close to each other and transmit powers are small. Also,
public safety applications when the connection to the outside
world is lost may use sensing. Spectrum sensing requires
ability to ﬁnd unused frequencies, which can be done via
detecting existent signals.
Many detection methods are based on the use of a thresh-
old. The basic principle is that the threshold separates the
samples into two sets: noise and signal sets. Nowadays, most
of the methods use adaptive thresholds. Threshold setting is
a very demanding task, especially when the threshold is set
adaptively. As too high threshold causes missed detections,
too low a threshold leads to false detections. Missed detection
means that existing signals are not detected, as false detection
means that noise samples are falsely detected to be from a
signal.
One of these detection methods is the localization algo-
rithm based on the double-thresholding (LAD) [9]. At the core
of the LAD method, the forward consecutive mean excision
(FCME) algorithm [10] provides the used detection thresholds.
The FCME algorithm sets the threshold iteratively based on
the mean of sample energies and a pre-selected threshold
parameter. This parameter depends on the statistical properties
of the noise-only case. Usually, Gaussian assumption is used
even though the measured noise is not purely Gaussian [9]. The
threshold parameter is deﬁned using the desired false alarm
rate PF A,DES. It deﬁnes how many samples are above the
threshold when there is only noise present. The FCME method
uses constant false alarm rate (CFAR) principle, so the false
alarm probability stays almost constant. However, it is sensitive
to the issues like the length of the considered sample vector
and noise properties. In the real-time applications, integration
time is limited, so the number of considered samples N can
not be as large as in the computer simulations.
The performance of the FCME algorithm is highly de-
pending on the false alarm rate. If the achieved false alarm
rate differs from the desired one, the performance of the
FCME method may degrade. Especially when the signal-to-
noise ratio (SNR) is low, the false alarm rate totally deﬁnes
the performance of the FCME algorithm, and, thus, the LAD
method. If the achieved false alarm rate is not close enough
to the desired one, the performance of the LAD method may
even totally degrade. It is very important to control PF A,DES
because it is related to the caused interference as well as the
spectrum opportunity loss in cognitive radio applications [9].
Thus, it is very important to study and analyze the false alarm
rate of the FCME algorithm.
In this paper, the false alarm rate of the FCME algo-
rithm is studied in the noise-only case. That is, there are
no signals present. First, the effect of the length of the
considered sample vector (i.e., integration time) to the false
alarm rate of the FCME algorithm is analyzed using simulation
software generated AWGN noise. Mean, variance as well as
minimum and maximum values of achieved false alarm rates
are analyzed. Based on those, proper sample vector lengths
are recommended. The analysis results are veriﬁed by the real
measurement results in the noise-only case. The measurements
covering a wide range of the spectrum are used to ﬁnd out
the differences in the achieved false alarm rate between the
measured and simulation software generated noise. Several
measurements up to 39 GHz are used to cover higher frequency
areas possible used in future applications as 5G and beyond.
The Kruskal-Wallis test is used to provide more statistical
information. In addition, a scenario that combines the analysis
and measurement results is presented.
102
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

This paper is organized as follows. In Section II, the
used FCME algorithm is presented. Section III covers the
probability of false alarm analysis of the FCME algorithm,
and Section IV describes our scenario. Conclusions are drawn
at Section V.
II.
THE FCME ALGORITHM
The FCME algorithm [9] [10] [11] was originally proposed
for impulsive interference suppression in the time domain.
Later on, it was noticed that the method can be used also
in other transform domains, e.g., in the frequency domain.
Its enhanced version called the LAD method [9], which uses
the FCME thresholds was developed to detect narrowband
information signals, e.g., for spectrum sensing purposes.
The FCME algorithm is blind and independent of modu-
lation methods, signal types and number of signals. The only
requirements are that the signal(s) can not cover the whole
bandwidth under consideration, and the signal(s) are above the
noise level.
The FCME algorithm is computationally simple but effec-
tive. It calculates the threshold iteratively based on the noise
properties.
Initial Preparation:
When the noise is assumed to be
zero mean, independent, i.i.d. Gaussian noise, i.e., samples
xi follow the Gaussian distribution, the FCME algorithm
calculates the threshold parameter based on [10]
TCME = −ln(PF A,DES),
(1)
where PF A,DES is the desired clean sample rejection rate
(the desired false alarm rate) [10]. For example, if the desired
clean sample rejection rate is 1% (= 0.01), TCME = 4.6
[9]. After that, energy of samples is calculated. Now, samples
|xi|2 that follow the chi-squared distribution with two degrees
of freedom are rearranged in an ascending order according to
their sample energy. Then, m = 10% of smallest samples are
selected to form the initial set Q (called also as a ”clean set”).
Algorithm: The FCME threshold is [10]
Th = TCMEQ,
(2)
where Q denotes the mean of Q. Samples below the threshold
are added to the set Q and new mean and threshold are
calculated. This is repeated until there are no new samples
below the threshold. Usually, it takes 3-4 iterations to get the
ﬁnal threshold. In the end, samples above the threshold are
assumed to be signal samples, as samples below the threshold
are assumed to be noise samples.
The required false alarm rate PF A,DES is related to the
threshold. Small PF A,DES value leads to larger threshold.
Thus, the amount of false alarms is small. Large PF A,DES
value leads to smaller threshold and the amount of false
alarms is larger [12]. In cognitive radio applications, it is
important to control PF A,DES because it is related to the
caused interference as well as the spectrum opportunity loss
[9].
It should be noted that (1) is valid when the noise is at
least approximately Gaussian. It is also possible to deﬁne the
used equation to other distributions [9]. Note, that the noise
variance has no inﬂuence [13].
TABLE I. ACHIEVED PF A WHEN PF A,DES = 0.01.
N
mean(PF A)
diff
var(PF A)
min
max
64
0.025245
0.0152
0.0075937
0
0.9062
128
0.015415
0.0054
0.00062043
0
0.8984
256
0.0141
0.0041
7.505e − 05
0
0.0585
512
0.013526
0.0035
3.566e − 05
0
0.0390
1024
0.013313
0.0033
1.721e − 05
0.00195
0.0341
2048
0.013181
0.0032
8.356e − 06
0.00341
0.0268
4096
0.013139
0.0031
4.318e − 06
0.00659
0.0229
0
20
40
60
80
100
0
0.01
0.02
0.03
0.04
0.05
0.06
0.07
0.08
0.09
0.1
Sorted sweeps
achieved Pfa
 
 
PFA,DES
64
128
256
512
1024
2048
Figure 1. Achieved PF A values for different values of N.
MC=100 sweeps. Results are sorted in an ascending order.
Matlab-generated noise. PF A,DES = 0.01.
III.
PF A ANALYSIS OF THE FCME ALGORITHM
Achieved PF A values for different desired PF A,DES values
were studied. That is, how close the achieved PF A values are
to the desired PF A,DES value. This effects to the performance
of the FCME method, especially at low SNR values. Two
different commonly used desired PF A,DES values were used,
0.01 = 1% (TCME = 4.6) and 0.001 = 0.1% ( TCME = 6.9)
[9]. It means that according to the CFAR principle, when there
is only noise present, 1% or 0.1% of the samples should be
above the threshold, respectively. In the computer simulations,
the effect of the length of the samples N, was considered. The
purpose was to ﬁnd the smallest N when the FCME algorithm
is able to operate properly. Measurement results are compared
to the Matlab-generated AWGN noise results.
A. Matlab simulations
In the simulations, Matlab software was used. Computer-
generated AWGN noise was used as a noise. There were 10
000 Monte Carlo iterations. The length of the samples, N,
varied. This is because in the simulations we can use large
values of N, but in the real-time implementations, N may be
often smaller because of hardware limitations. The purpose
was to ﬁnd smallest N so that the achieved PF A values are in
the decent level.
In Table I, achieved PF A values when desired PF A,DES =
0.01 = 1% and N varies are presented. Diff=|PF A,DES −
PF A|. As can be seen, means are close to each others when
N is large enough, that is, N >= 256. Achieved PF A values
differ from the desired PF A,DES value 152% (N = 64), 54%
(N = 128), 41% (N = 256), 33% (N = 512), 33% (N =
1024), 31% (N = 2014), and 31% (N = 4096). It can also
103
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

0
200
400
600
800
1000
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
Sweep
Pfa
PFA,DES
mean(Pfa)
Figure 2. Achieved PF A values when N = 64. MC=1000,
PF A,DES = 0.01.
0
200
400
600
800
1000
0
0.005
0.01
0.015
0.02
0.025
0.03
0.035
0.04
Sweep
Pfa
PFA,DES
mean(Pfa)
Figure 3. Achieved PF A values when N = 1024. MC=1000,
PF A,DES = 0.01.
been seen that the smaller N (the shorter data), the higher the
variance is.
In Figure 1, achieved PF A values are presented for different
values of N. There were 100 iterations (sweeps) and the results
were sorted in an ascending order. Horizontal line presents
desired PF A,DES value. It can be seen that the more samples,
the closer the achieved PF A values stay with the desired
PF A,DES value (here, PF A,DES = 0.01).
In Figures 2 - 4, achieved PF A values are presented when
N = 64, 1024 and 4096. It can be noticed that the achieved
mean of PF A is slightly higher than the desired PF A,DES
value. It can also be seen that when N is small (Figure 2),
variance is very high.
In Figure 5, variances of the achieved PF A values are
considered as in Figure 6, mean PF A, min PF A and max PF A
values are studied. In both ﬁgures, N varies. It can be seen
that when N >= 256, values are on acceptable level.
In Table II, achieved PF A values when desired PF A,DES =
0.001 = 0.1% and N varies is presented. Diff=|PF A,DES −
0
200
400
600
800
1000
0.006
0.008
0.01
0.012
0.014
0.016
0.018
0.02
0.022
Sweep
Pfa
PFA,DES
mean(Pfa)
Figure 4. Achieved PF A values when N = 4096. MC=1000,
PF A,DES = 0.01.
64
128
256
512
1024
2048
4096
0
1
2
3
4
5
6
x 10
−3
N
var(Pfa)
Figure 5. Variance of PF A values for different sample lengths
N. Matlab-generated noise. PF A,DES = 0.01.
TABLE II. ACHIEVED PF A WHEN PF A,DES = 0.001.
N
mean(PF A)
diff
var(PF A)
min
max
1024
0.0010574
5.74e − 05
1.1071e − 06
0
0.00683
2048
0.0010685
6.85e − 05
5.5935e − 07
0
0.00585
4096
0.0010708
7.08e − 05
2.7042e − 07
0
0.00341
PF A|. PF A,DES = 0.1% means that when N = 1000, 1 sam-
ple is above the threshold. Thus, we considered N >= 1024
to get realistic results; therefore, smaller values for N were
not considered.
B. Measurements at 10 MHz-39.1 GHz
The measurements were performed in wide frequency
area to get reliable and wide-ranging results. Here, high-
performance spectrum analyzer (Agilent E4446A) [14] was
used as in [15]. Note, that the results depend on the used
equipment. We used Instrument Control Toolbox to connect
Matlab to the spectrum analyzer to enable direct results
104
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

64
128
256
512
1024
2048
4096
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
N
mean, min and max Pfa
 
 
PFA,DES
mean
min
max
Figure 6. Mean PF A, min PF A and max PF A values for dif-
ferent sample lengths N. Matlab-generated noise. PF A,DES =
0.01.
TABLE III. ACHIEVED PF A WHEN PF A,DES = 0.01.
freq. range
mean(PF A)
var(PF A)
min
max
10 − 110 MHz
0.006431
5.8612e − 06
0
0.0149
1 − 1.1 GHz
0.0061711
5.6578e − 06
0.000624
0.0181
2.5 − 2.6 GHz
0.0070012
1.1744e − 05
0
0.0231
9 − 9.1 GHz
0.0070244
1.2441e − 05
0
0.0199
17 − 17.1 GHz
0.0060668
5.5949e − 06
0.000624
0.0149
39 − 39.1 GHz
0.0071974
1.103e − 05
0
0.0199
Matlab-noise
0.013229
9.7771e − 06
0.000624
0.0237
analysis. At frequency ranges 10-110 MHz, 1-1.1 GHz, 17-
17.1 GHz and 39-39.1 GHz, only internal noise level was
measured. In frequency ranges 2.5-2.6 GHz and 9-9.1 GHz,
broadband antenna was connected, so the noise consists of
internal noise and noise from antenna. There were 1 000
time domain sweeps and N = 1601 frequency points [15].
Energy of the samples was measured in the frequency domain.
Matlab-generated AWGN noise with same N was used for a
comparison.
In
Table
III,
achieved
PF A
values
when
desired
PF A,DES = 0.01 = 1% and N = 1601 are presented. It
can be noticed that mean PF A values are very close to each
others. Variances are on the same level. It should be noted that
now the achieved PF A values are slightly lower than desired
PF A,DES value.
In Figure 7, achieved PF A values are presented for dif-
ferent measured frequency bands. There were 1000 iterations
(sweeps) and the results were sorted in an ascending or-
der. Horizontal line presents desired PF A,DES value (=0.01).
Matlab-generated noise results are presented as a reference.
Here, N = 1601. It can be seen that the measured results are
almost on the same level, and lower than the reference results.
In Figure 8, variances of the achieved PF A values are
considered as in Figure 9, mean PF A, min PF A and max PF A
values are studied for different measured frequency bands. In
both ﬁgures, N = 1601. It can be seen that there are only
small differences.
0
200
400
600
800
1000
0
0.005
0.01
0.015
0.02
0.025
Sorted sweeps
achieved Pfa
 
 
PFA,DES
Matlab noise
10−110 MHz
1−1.1 GHz
2.5−2.6 GHz
9−9.1 GHz
17−17.1 GHz
39−39.1 GHz
Figure 7. Achieved PF A values for different frequency areas.
MC=100 sweeps. Results are sorted in an ascending order.
N = 1601. Measured noise.
10 MHz
1 GHz
2.5 GHz
9 GHz
17 GHz
39 GHz
0.5
1
1.5
2
2.5
3
x 10
−5
Measured frequencies
var(Pfa)
Figure 8. Variance of PF A values for different frequency areas.
N=1601. Measured noise.
10 MHz
1 GHz
2.5 GHz
9 GHz
17 GHz
39 GHz
0
0.005
0.01
0.015
0.02
0.025
Measured frequencies
mean, min and max Pfa
 
 
PFA,DES
mean
min
max
Figure 9. Mean PF A, min PF A and max PF A values for
different frequency areas. N=1601. Measured noise.
105
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

0
0.005
0.01
0.015
0.02
0.025
1
2
3
4
5
6
PFA,DES
2.5 GHz
9 GHz
17 GHz
1 GHz
10 MHz
Matlab
PFA,measured
Figure 10. Kruskal-Wallis test to PF A for several measured
groups at 10 MHz-17 GHz. PF A,DES = 0.01
C. Kruskal-Wallis test
Kruskal-Wallis tests the null hypothesis that samples that
are independent and come from two or more groups follow
same distribution and their means are equal [16]. There is
no normality assumption nor assumptions about the mean
and variance. Here, Kruskal-Wallis test is used to produce
statistical boxplots.
In Figure 10, Kruskal-Wallis boxplots are presented to
achieved PF A for several measured groups at 10 MHz-17 GHz.
One boxplot presents ﬁve statistics - from bottom to top those
are minimum, ﬁrst quartile, median value (line in the middle
of the box), third quartile, and maximum value. This ﬁgure
conﬁrms the results presented earlier.
IV.
SCENARIO
Sensing can be veriﬁed using a spectrum analyzer. Here,
Agilent E4446A was used, but there are a lot of other equip-
ments, like the wireless open-access research platform (WARP)
[17]. The WARP is a platform used to test and prototype
wireless networks. The noise level (from internal noise) may
vary between the equipments. Therefore, adjusting is needed
if it is required that the achieved false alarm rate is controlled.
Assume that the LAD method which uses the FCME thresholds
is used to perform spectrum sensing. It is desired that the
PF A is controlled so spectrum opportunities are not lost. It
is possible ﬁrst to measure the noise in the desired frequency
area. As noticed here, the length of the noise vector has to
be at least 256 samples when PF A,DES = 0.01. It does not
matter what is the used sampling rate, however, the same
rate should be used later. After measuring the noise level, the
FCME threshold can be ﬁxed to correspond the theoretical one.
This can be done using a correction coefﬁcient which can be
deﬁned when PF A,DES and PF A are known. Note, that this
method is valid when the noise is not impulsive.
V.
CONCLUSION
The false alarm rate of the FCME algorithm was studied
in the noise-only case. A proper length of the sample vector
was deﬁned, and analysis results were compared with the
results from noise measurements. This result can be used in
future simulations and in real-time applications, for example,
when implementing the FCME algorithm on the wireless open-
access research platform. It was also noted that as in the com-
puter simulations the achieved false alarm rates were slightly
higher than the desired ones, in the noise measurements, the
achieved false alarm rates were slightly lower than the desired
ones. Based on this information, used thresholds can be ﬁxed
using a proper correction coefﬁcient in the cases when the
achieved false alarm rate need to be as close as the desired
false alarm rate as possible. In the computer simulations, the
false alarm rate can be reduced as in the measurements and
real-time applications, the false alarm rate can be raised.
ACKNOWLEDGMENT
The research of Johanna Vartiainen was funded by the
Academy of Finland.
REFERENCES
[1]
V. Chakravarthy, A. Shaw, M. Temple, and J. Stephens, “Cognitive
radio - an adaptive waveform with spectral sharing capability,” in IEEE
Wireless Commun. and Networking Conf., New Orleans, LA, USA,
Mar.13–17 2005, pp. 724–729.
[2]
S. Haykin, “Cognitive radio: Brain-empowered wireless communica-
tions,” IEEE Journal in Selected Areas in Comm., vol. 23, no. 2, Feb.
2005, pp. 201–220.
[3]
J. Mitola III and G. Q. Maguire Jr., “Cognitive radio: making software
radios more personal,” IEEE Pers. Commun., vol. 6, no. 4, 1999, pp.
13–18.
[4]
Z. Feng and Y. Xu, “Cognitive TD -LTE system operating in TV white
space in China,” 2013, ITU-R WP 5A, Geneva, Switzerland.
[5]
S. Haykin, D. J. Thomson, and J. H. Reed, “Spectrum sensing for
cognitive radio,” Proceedings of the IEEE, vol. 97, no. 5, May 2009,
pp. 849–877.
[6]
C. Liu, M. Li, and M. L. Jin, “Blind energy-based detection for spatial
spectrum sensing,” IEEE Wireless Communication Letters, vol. 4, no. 1,
Feb. 2015, pp. 98–101.
[7]
L. Arienzo and D. Tarchi, “Statistical modeling of spectrum sensing
energy in multi-hop cognitive radio networks,” IEEE Signal Processing
Letters, vol. 22, no. 3, Mar. 2015, pp. 356–360.
[8]
A. Alabbasi, Z. Rezki, and B. Shihada, “Energy efﬁcient resource
allocation for cognitive radios: A generalized sensing analysis,” IEEE
Transactions on Wireless Communications, vol. PP, no. 99, 2015, pp.
1–15.
[9]
J. Vartiainen, “Concentrated signal extraction using consecutive mean
excision algorithms,” Ph.D. dissertation, Acta Univ Oul Technica C
368. Faculty of Technology, University of Oulu, Finland, Nov. 2010,
{URL}:http://jultika.oulu.ﬁ/Record/isbn978-951-42-6349-1 [accessed:
2015-05-05].
[10]
H. Saarnisaari, P. Henttu, and M. Juntti, “Iterative multidimensional
impulse detectors for communications based on the classical diagnostic
methods,” IEEE Trans. Commun., vol. 53, no. 3, March 2005, pp. 395–
398.
[11]
H. Saarnisaari and P. Henttu, “Impulse detection and rejection methods
for radio systems,” Boston, MA, USA, Oct. 2003, pp. 1126 – 1131,
CD-rom.
[12]
S. M. Kay, Fundamentals of statistical signal processing: Detection
theory.
Upple Saddle River, NJ, USA: Prentice Hall, 1998.
[13]
H. V. Poor, An introduction to signal detection and estimation, 2nd ed.
Berlin, Germany: Springer-Verlag, 1998.
[14]
“Agilent,” 2015, URL: http://www.agilent.com [accessed: 2015-05-05].
[15]
J. Vartiainen and R. Vuohtoniemi, “Performance of the LAD spectrum
sensing method in measured noise at frequency ranges between 10 MHz
and 39 GHz,” in AICT, Paris, France, Jul. 2014, pp. 144–149.
[16]
W. H. Kruskal and W. A. Wallis, “Use of ranks in one-criterion variance
analysis,” J. Amer. Statist. Ass., vol. 47, no. 04, 1952, pp. 583–621.
[17]
“WARP,” 2015, URL: http://cmc.rice.edu/warp [accessed: 2015-05-05].
106
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

