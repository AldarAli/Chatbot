Situated Cognitive Engineering: The Requirements and Design of
Automatically Directed Scenario-based Training
Marieke Peeters, John-Jules Ch. Meyer
Intelligent Systems Group
Utrecht University
Utrecht, The Netherlands
{M.M.M.Peeters, J.J.C.Meyer}@uu.nl
Karel van den Bosch
Training and Performance Innovations
TNO
Soesterberg, The Netherlands
Karel.vandenBosch@tno.nl
Mark A. Neerincx
Man-Machine Interaction
Delft University of Technology
Delft, The Netherlands
M.A.Neerincx@tudelft.nl
Abstract—Serious games enable trainees to practice indepen-
dently of school, staff, and fellow students. This is important
as amount of practice directly relates to training efﬁcacy. It
is also known that personalized guidance elevates the beneﬁts
of training. How to achieve automated guidance, for example
to be used in serious games, is a yet unsolved issue. This
paper uses the situated Cognitive Engineering method to
analyze the operational demands, theoretical foundations and
technological opportunities for the design of an automatically
directed scenario-based training system (AD-SBT). AD-SBT
guides training by selecting scenarios that match the trainee’s
competency level, by monitoring the training process, and by
offering appropriate support. Three instructional principles are
used: adapt training to the trainee’s cognitive characteristics,
strengthen the trainee’s will to learn, and foster transfer of
learned skills. This paper reports evidence taken from the
literature and by means of a use case simulation to validate
and verify the presented requirements for AD-SBT and the
underlying claims. Results show that the introduced require-
ments baseline and the resulting design for AD-SBT form a
good starting point for future reﬁnement and prototyping.
Keywords-director; scenario; training; cognitive engineering
I. INTRODUCTION
Some professions (e.g., ﬁremen, policemen, nurses) in-
volve complex skills: integrated physical abilities, as well as
cognitive abilities such as situation assessment and decision
making. The most straightforward way to train complex
skills is to have trainees engage in representative, real-
life situations. However, research has shown that in order
for training to be effective, trainees need guidance during
skill acquisition [1]. Such guidance is usually offered by
an instructor and in some cases even by an entire team of
staff members, resulting in high costs of training in terms
of money, time and resources. By simulating not only the
learning environment, but also the process of guidance, these
costs can be reduced.
To gain some understanding in the ways in which in-
structors normally guide their trainees, let us consider a
clinical psychologist whose main tasks are to diagnose and
treat patients suffering from mental health problems. These
tasks are to be performed under varying circumstances: new
patients, patients halfway their treatment, all suffering from
various disorders, all in need of different treatments, etc. Not
every case is equally suitable for a trainee to learn from. How
suitable a training case is for a particular trainee depends on
the trainee’s experience and the complexity of the case.
Say, a trainee needs to practice his ﬁrst intake interview
in an on-the-job training setting. However, the ﬁrst patient
happens to be suicidal. In such a case, the instructor may
decide to let this patient pass as a training case, because
the trainee lacks the experience to treat this patient and to
deal with the additional emotional responsibility. The next
patient, a boy having trouble mourning over the death of
his father, is probably a better case to start with. During
training an instructor repeatedly selects an appropriate case
based on the trainee’s latest performance. The ultimate goal
is to guide the trainee to a performance level that enables
him to diagnose and treat all possible cases.
If training does not take place on-the-job, but in a role-
played scenario, the instructor is able to reﬁne the case even
more, by playing the patient himself or by hiring an actor to
play the patient while the instructor functions as a director.
Either way, the instructor is now able to manipulate the
scenario as it develops, by controlling the patient’s behavior.
Selecting the appropriate learning task (scenario) and the
appropriate amount of support (manipulative directions) are
powerful ways to guide the trainee and create effective
training situations. To be able to add automated guidance
to virtual learning environments, such as serious games, it
is necessary to uncover the principles underlying training
task selection and manipulation. How do instructors decide
what task is appropriate for a trainee to learn from? What
events cause instructors to intervene in a training scenario?
This paper uses the situated Cognitive Engineering (sCE)
method to achieve design principles and an architecture
for automatically directed scenario-based training (AD-SBT)
[2]. The sCE method has been previously applied to the
defense and space domain for the design of systems involv-
ing computer-supported task performance. Its roots lie in
the ﬁeld of cognitive engineering, a science of user-centered
design which aims to uncover the principles behind human
266
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

Figure 1: The situated Cognitive Engineering method [2]
action and performance that are relevant for the design of
systems comprising of both people and machines, in order
to maximize the performance of this joint system [3], [4].
The sCE method (Figure 1) consists of a process of iter-
ative development cycles. Each cycle is directed at reﬁning
the system’s speciﬁcations in more and more detail. The
system’s initial speciﬁcations follow from careful analysis
of the task domain, human factors knowledge (e.g., relevant
theories, guidelines and support concepts) and technological
opportunities. This set of speciﬁcations, consisting of claims,
requirements and use cases, forms the foundation for a pro-
totype. This set is to be reﬁned by evaluating the prototype.
The entire development process is situated, meaning that it
takes place within the context of the domain.
The current paper describes the ﬁrst development cycle of
the sCE method, resulting in a requirements baseline, and
thereby it is structured as follows. Section II speciﬁes the
analysis of the task domain, the human factors knowledge
and the technological opportunities for the intended AD-SBT
system. Section II-D presents a scenario illustrating the in-
tended use of the system. The drivers identiﬁed in Section II
form the foundation for the system’s speciﬁcation in terms of
claims and requirements presented in Section III. Section IV
presents the proposed design architecture for a prototype
of the system, which is based upon the aforementioned
requirements. Section V describes possible ways (a test and
a simulation) for (future) reﬁnement of the requirements and
veriﬁcation of the architecture (prototype). Conclusions can
be found in Section VI.
II. TASK DOMAIN AND SUPPORT ANALYSIS
This section covers the results of our domain and sup-
port analysis, leading to the operational, theoretical and
technological drivers for AD-SBT. The operational driver, a
training method called scenario-based training, is presented.
Subsequently, it is shown how SBT can be structured or
directed, by using three principles of instructional design
identiﬁed in the human factors literature. These principles
form the theoretical driver. Lastly, the technological opportu-
nities for automatically directed scenario-based training are
discussed. These form the technological driver for AD-SBT.
Finally, the envisioned system is illustrated by means of a
scenario describing the intended use of the system.
A. Operational demands: Scenario-based training (SBT)
Scenario-based training (SBT) has proven to be a powerful
training method [5], [6]. It is consistent with the principles
recognized in dominant instructional theories [7]. During
SBT, trainees prepare, execute and evaluate training scenar-
ios, i.e., real-life, relevant and meaningful storylines within
a simulated environment (SE) [5], [8]. The ﬁdelity of the
SE may vary, ranging from the actual task environment to
highly symbolic representations thereof. Training within an
SE has several beneﬁts in comparison to on-the-job training:
an SE can be prepared, controlled, reused, and improved
upon, leading to the reduction of risks, costs, and resources.
Training scenarios generally address speciﬁc learning
objectives. To ensure their realism and didactical value,
scenarios are authored and prepared in advance of the
training session by an instructor. Most often the scenario
contains so-called non-player characters (NPCs) with whom
the trainee needs to interact, such as teammates, ofﬁcers,
patients, or opponents. These roles may be played by the
actual persons (in case of teammates for instance), by staff
members and actors (especially in case of opponents or
enemies), or by virtual actors such as intelligent agents.
B. Theoretical foundation: Human factors knowledge
There are many instructional principles in the human
factors literature. Three recurring and prominent principles
relevant for AD-SBT are identiﬁed and described in the
subsections below: ‘Transfer - keeping an eye on the subject
matter’; ‘Adapt to the trainee’s cognitive characteristics’; and
‘Increase the trainee’s will to learn’. These principles are
used for a further speciﬁcation of AD-SBT.
1) Transfer - keeping an eye on the subject matter:
Effective training is supposed to lead to the display of the
trained skills during future job performance (transfer) [9].
To promote transfer, training tasks should be authentic; i.e.
represent the tasks that the trainee will perform in his future
profession [10], [11]. Additionally, training tasks should
come in a wide diversity; by generalizing solutions over
various tasks, trainees learn to abstract away from them.
This abstraction leads to the recognition of the underlying
principles to be applied in the actual task environment [9].
2) Adapt to the trainee’s cognitive characteristics: To
facilitate learning, one needs to adapt the training to the
trainee’s competencies. Effective instruction takes limited
working memory capacity into account. As the trainee’s
competencies grow during training, the amount of informa-
tion that can be processed by the trainee’s working memory
slowly increases, allowing for the task load to increase [12]–
[14]. This can be done by fading support (scaffolding); i.e.
adjusting the amount of feedback, cues, simultaneous events
or time restrictions [15]. Another way to increase the task
load is by increasing task complexity; i.e. selecting tasks that
require a little more than the trainee’s current competencies.
A second aspect to keep in mind is that trainees make use
of different learning strategies. This means that the instructor
should be able to choose from different teaching styles,
e.g., by means of examples, through learning by doing, by
267
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

applying knowledge to cases, by evaluating and reﬂecting
on outcomes, by connecting experiences, etc. [16]
3) Increase the trainee’s will to learn: The higher a
trainee’s motivation, the more efforts he will put into training
and into transferring the trained competencies to the actual
task environment [17]. Motivation is related to the level
of self-efﬁcacy: the trainee’s truthful beliefs about his task
performance capabilities [18]. Motivation can be intrinsic
(engaging in an activity for its own sake) or extrinsic
(engaging in an activity as a means to an end), the former
being the more favorable one, as it is positively related
to trainee achievements in contrast to extrinsic motivation
which is negatively related to trainee achievements [19],
[20]. Intrinsic motivation is promoted by offering the trainee
meaningful and relevant learning experiences [21].
As argued earlier (Section II-B2), training tasks need to be
compatible with the trainee’s competencies. In addition, the
trainee also needs to believe in his ability to master the task
(self-efﬁcacy) in order for him to be motivated to perform the
task. A balance must be found between the offered challenge
and the trainee’s competencies to prevent him from getting
bored or frustrated.
Figure 2: (a) Zone of Proximal Development (ZPD) [22] and (b) Flow [23]
Figure 2 displays two graphs representing the Zone of
Proximal Development (ZPD) [22] and Flow [23]. Both
ﬁgures refer to the zone between anxiety/confusion and
boredom. Vygotsky’s ZPD [24] is a common concept in
instructional theory, representing a class of training tasks
slightly more complex than the tasks the trainee is currently
able to perform. Such tasks challenge the trainee to develop
new skills or insights. The ZPD shows a remarkable resem-
blance to ﬂow, a common concept in game research [23].
Flow is deﬁned by Csikszentmihalyi (1991) as a mental
state that results from appropriate challenge and truthful self-
efﬁcacy and is characterized by high levels of motivation,
concentration and enjoyable learning. Recently, ﬂow as a
concept has been adopted by game-researchers [25], [26]. An
interesting range of experiments has been published about
the derivation of trainee’s mental state - i.e. excitement,
frustration, boredom, pleasure, challenge, interest, and even
ﬂow - by using psycho physiological measurements [27]–
[29]. The results of these experiments can be used to
automatically adjust the amount of challenge to keep the
trainee in ﬂow.
C. Technological opportunities
By implementing SBT into a virtual environment instead
of a real one and using intelligent agent technology, it is
possible to automate the NPCs [30] in such a way that
they behave in a consistent and explainable fashion. This is
preferable in a training system, since it results in believable
and understandable NPCs. Several authors in the ﬁeld of
instructional design emphasize the potential of serious games
in education [31]–[33], because they lead to an increase in
motivation [20], [31], and because necessary adjustments
to the environment and the behavior of the NPCs can be
executed behind the scenes while the scenario unfolds [15].
In addition to the NPCs, we propose to introduce a director
agent (DA). A DA creates suitable learning situations for
the trainee by manipulating the NPC-behaviors behind the
scenes in real-time.
There have been other proposals for DA architectures
before, particularly within the domain of interactive narra-
tive. One example is the Interactive Storytelling Architecture
for Training (ISAT) of Magerko et al. (2005) [34], which
uses partial order planning to generate variable storylines.
Another example is the framework by Si, Marcella and
Pynadath (2009). They describe a DA using their framework
‘Thespian’, which includes a runnable user model that can
predict the trainee’s future behavior [35]. Moreover, the
agents in Thespian are able to reason about other agents’
intentions. This DA intervenes by changing NPCs’ beliefs
and plans, possibly resulting in inconsistent NPC behaviors,
which can be harmful for training since trainees may not
accept these characters as realistic or believable. IN-TALE
is a third example of such a framework. It was proposed by
Riedl et al. (2008) [36] and should lead to believable failure
of the agents’ plans in case of conﬂicts between the NPC’s
plans and the DA’s directions. The mentioned architectures
generally focus on drama management. Although they ac-
knowledge that their architectures also offer opportunities for
training, the actual implementation of instructional theory is
mostly neglected.
D. Illustration of the envisioned AD-SBT system
To illustrate the functionalities of the envisioned system,
a description of a scenario in the domain of clinical psy-
chology is given below.
Karen and Luke, two psychology students, start the training session.
Karen plays the patient (NPC) while Luke plays the psychologist. The
DA selects a scenario that ﬁts Luke’s learning goals, i.e. ‘thorough
questioning’ and ‘conversational management’. Karen plays a woman
with bulimic disorder in denial of her problem, who was sent by her
doctor. Karen follows the DA’s instructions: ‘change your position
constantly’, ‘talk about your indignation for being sent to a therapist’,
and ‘do not talk about food nor your ﬁgure’.
The DA receives updates about the conversation. Karen and Luke
have been talking about Karen’s household chores for a while. Luke
268
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

has not asked any questions regarding the reasons that made Karen’s
doctor decide to redirect her to a psychologist. Moreover, Luke is not
showing the right body language. Based on this information, the DA
adjusts its instructions to Karen and its feedback to Luke. Karen is
instructed to calm down and tell Luke why she visited her doctor. Luke
receives feedback on his posture and is reminded of his learning goals
to offer him a better focus. After a while, the DA stops the scenario. It
encourages Karen and Luke to discuss the case, and provides them
with feedback and a concise overview of the training session.
III. REQUIREMENTS OF AN AD-SBT SYSTEM
In Section II the design space for AD-SBT was presented.
The current section presents the requirements for the AD-
SBT system, based on this design space. During AD-SBT,
training scenarios need to be automatically adapted to the
trainee’s cognitive and emotional state in real-time by a
director agent (DA). The DA must create a wide variety of
authentic training scenarios that match the trainee’s needs.
A simpliﬁed list of requirements (R1 – R5) for AD-SBT
is given along with the claims (C1.1 – C5.2) that should
justify each of them, as they have become available by
applying the sCE method. The requirements are justiﬁed
when the underlying claims are validated by means of
existing empirical evidence, simulations and future research.
R1 Match scenarios to the trainee’s current competencies.
C1.1 Presenting scenarios in order of increasing complexity and
matching them to the trainee’s level of experience prevents
cognitive overload (see Section II-B2).
R2 Adjust the level of scaffolding based upon the trainee’s emotional
responses.
C2.1 Adjusting the level of challenge fosters ﬂow and high levels
of motivation (see Section II-B3).
R3 Create realistic (authentic) scenarios.
C3.1 Authentic training tasks foster transfer (see Section II-B1).
C3.2 Authentic training tasks foster motivation (see Section II-B3).
C3.3 Engaging in authentic training tasks fosters immersion, and
thereby ﬂow and motivation.
R4 Create variable scenarios.
C4.1 This will foster transfer (see Section II-B1).
R5 Provide feedback about interventions in the scenario.
C5.1 This will foster self-efﬁcacy (see Section II-B3).
C5.2 This will foster a better understanding of the task domain.
IV. THE DESIGN OF AN AD-SBT SYSTEM
In the current section the design architecture for AD-SBT
(Figure 3) is presented. This architecture is based on the
requirements listed in Section III. The architecture consists
of two processes. Both of these adapt the scenario to ﬁt it to
the trainee’s needs by instructing the agents to change their
behaviors.
The ﬁrst adaptation process is a reactive process - depicted
by the solid line - that reacts upon psycho physiological mea-
surements (bottom right) by adjusting the level of scaffolding
to prevent the trainee from getting bored or frustrated.
A reasoning engine (top right star) decides whether an
adjustment in of the scaffolding (support/challenge) level is
necessary. If so, it determines the nature of the adjustment to
be made and sends this to the user model and to the agents
controlling the characters and environmental elements, so
they are able to change their behaviors accordingly.
The second process is a reasoning process (grey inter-
rupted lines), brought about by the DA (top left circle). To
decide on how to continue the scenario, the DA (1) uses
a didactic reasoning engine (top left star), (2) an expert
model and a scenario model (the two hexagons), and (3)
consults a user model (grey striped square) and a world
model (white checkered square). The user model contains
the trainee’s achievements, performed tasks, and reached
checkpoints. The DA uses its didactic reasoning engine to
reason about the user model and the expert model and
decides what learning goals are suitable for the trainee.
When an adjustment of the learning goals is appropriate,
the DA sends a notiﬁcation to the feedback engine, which
should generate proper explanations for the adjustments to
communicate to the trainee through the environment agent
(Agent3 in Figure 3).
Once the DA has selected the learning goals, it uses
the scenario database to select scenes that address these
learning goals, after which it consults the world model to
see what scene can be implemented without interrupting the
believability of the storyline. The world model is updated
with information coming from the agents and the user model
(the grey dotted lines) and keeps track of all relevant facts
in the world. The DA consults the world model to see
what scenes ﬁt the current world state. The DA randomly
selects a scene from the resulting set - consisting of scenes
appropriate for the trainee and matching the world state -
and sends it to the other agents, so they are able to change
their behaviors accordingly.
Note that this division into two adjustment cycles is not
entirely new. VanLehn (2006) also describes two loops in
the behavior of intelligent tutoring systems (ITSs); an inner
and an outer loop [14]. He suggests that the outer loop is
used to determine what learning task the ITS is supposed to
offer next, whereas the inner loop is used to select the steps
within the task, taking feedback, support and assessment into
account.
V. (FUTURE) REFINEMENT AND VALIDATION
There are several ways to validate the claims presented
in Section III. Two examples of claim validations will be
presented as a further clariﬁcation of the sCE method: a test
(described in [15]) and an outline for a possible use case
simulation.
A. Test
An explorative study into the applicability of this archi-
tecture was conducted. For this study an AD-SBT system
applied to the domain of ‘in-company emergency services’
was created. ‘In-company emergency services’ refer to a
team of employees within a company who are trained to
provide ﬁrst-aid, extinguish small ﬁres or clear the ofﬁce
269
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

Figure 3: The Director Agent Architecture
building in case of emergencies, until the ofﬁcial emergency
services have arrived.
Because of the cumbersome task of implementing a
prototype of the envisioned training system, a Wizard of Oz
prototype was developed. The simulated environment was
not virtual, the NPCs were human actors and the director
was also human. This created the possibility to investigate
approaches for directing training without the need to actually
create a virtual environment with added intelligent agent
technology. Two actors received training to play the role
of the NPCs in four scenarios. The human director was
able to adjust the level of scaffolding by intervening in the
behavior of the NPCs using a very detailed script and in-ear
portophones. The aim of the interventions was to adjust the
level of scaffolding to match the performance of the trainee.
All of the resulting scenarios were recorded on video.
Subsequently, an experiment was conducted to test for
the effects of the director’s interventions upon the learning
value of the scenario. Professional instructors from the
domain judged twenty video fragments coming from the
recordings of the study described above. In ten of these
fragments, the scenarios were directed, meaning that the
level of scaffolding could be adjusted in real-time according
to a script. The other ten fragments came from undirected
scenarios, meaning that the scenarios were not adjustable
in real-time. The instructors were under the impression that
all fragments were undirected and individually judged the
learning value at set points in time.
The results of this experiment indicated that the DA’s
interventions resulted in more suitable learning situations
compared to the undirected scenarios. These results sup-
port the validation of claim C2.1 and the justiﬁcation of
requirement R2 (Section III). Moreover, the trainees reported
AD-SBT to be realistic, motivating and stimulating during
interviews, thereby supporting not only the validation of
claim C2.1 and justifying requirement R2, but also claim
C3.2 and requirement R3. For a more extensive description
of this experiment, the reader is directed to [15].
B. Use case simulation
It is emphasized that the following use case simulation is
ﬁctional. It serves as an example of how a design architec-
ture could be veriﬁed by means of simulation through use
cases. Formal use cases, however, need a far more detailed
speciﬁcation and should be constructed in consultation with
domain experts.
Use case simulation 1
1) A trainee is currently enrolled in scene S14. He is receiving full
support. His learning goal is G9.
2) The psycho physiological data imply stress indications, mean-
ing that the trainee is in need of more support.
3) The scaffolding engine sends an update to the user model:
Unable to adjust the level of scaffolding in the desired direction.
4) The director agent selects a set of less complicated, suitable
learning goals {G2, G3 and G6} by reasoning about the expert
and user model.
5) The world model contains conditions {C1, C3 and C14}.
6) Scene S9 and scene S11 in the scenario database both involve
suitable learning goals, as selected in step 4.
7) The director agent sends a notiﬁcation about the adjustment of
the current learning goals to the feedback generating engine.
8) Both of the scenes proposed in step 6 are applicable, since
their preconditions match the conditions in the world model.
9) The director agent randomly selects scene S11 from the set of
applicable scenes as computed in step 6 and step 8.
10) The director agent notiﬁes the agents about the scene selec-
tion.
11) The feedback generating engine sends an explanation for the
adjustment of the learning goals to the environment agent.
270
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

12) The agents adjust their behavior to match scene S11.
13) The environment agent explains the new learning goals to the
trainee.
This use case simulation exempliﬁes how the DA adjusts
the learning task to address the appropriate learning goals,
thereby verifying requirement R1 in Section III. The DA
uses the world model to check whether the scenes are
compatible with the current world state, thereby ensuring
a realistic course of events, which veriﬁes R3. Moreover,
the DA creates variable scenarios by randomly selecting a
scene from a set of options, thereby verifying R4. Finally,
the DA provides feedback about the chosen learning path,
which veriﬁes R5.
VI. CONCLUSION AND FUTURE WORK
Forms of training that allow students to practice indepen-
dently (such as in serious games) are extremely valuable as
they allow for higher frequencies and volumes of training.
In this paper we argue that the beneﬁts can be increased
if such environments are equipped with a system that is
able to provide the trainee with guidance: ‘automatically
directed scenario-based training’ (AD-SBT). AD-SBT can
be described as scenario-based training extended with a
director agent. A director agent is able to manipulate the
scenario in real-time to realize personalized interventions,
guidance and support during scenario-based training.
The situated Cognitive Engineering method is used to
present a design rationale for AD-SBT. This design rationale
consists of (1) the operational demands, (2) relevant princi-
ples coming from instructional theory and game research
and (3) the envisioned technology. The use of the method
of situated Cognitive Engineering led to the identiﬁcation
of requirements and associated claims for an AD-SBT
system. These requirements and claims (Section III) are
based on knowledge about transfer, motivation, cognitive
overload, and metacognitive skills. The requirements form
the foundation for the ‘automatically directed scenario-based
training’ (AD-SBT) architecture presented in Section IV.
The architecture speciﬁes two main processes: a reactive
process controlling the level of scaffolding and a reasoning
process controlling the complexity of the scenario.
A ﬁrst test, described to a greater detail in [15], showed
that AD-SBT signiﬁcantly improves the learning value of
the scenario, by being able to adjust the scenario in real-
time to match the trainee’s current needs. Moreover, trainees
reported high levels of motivation during the AD-SBT sce-
narios. These results suggest that the requirements outlined
in Section III forms a good baseline for further reﬁnement
in future research and prototyping.
Earlier research on intelligent tutoring systems has mainly
focused on structuring and ordering the learning material
to support the construction of well embedded and coherent
knowledge structures. This guidance and support helps the
trainee to comprehend the lessons to be learned. However,
research on intelligent tutoring systems has neglected the
importance of storylines and contextualization of learning
materials to add meaning to the learning materials, to relate
to the trainee’s expectations and motivation, and to increase
the trainee’s will to learn. In contrast, research on serious
games has mainly focused on engagement, motivating the
trainee to learn, fostering transfer, and creating realistic
learning environments. But serious games lack the structured
approach to learning that is so important to guide the trainee
during training. The research described here is a promising
step in the development of a training system that does not
only engage the trainee in active learning through participa-
tion in a storyline, but also provides the necessary guidance
and support to the trainee. This research therefore helps
to link various ﬁelds within the training research domain,
such as serious games, scenario-based training, interactive
storytelling, intelligent tutoring systems and instructional
theory.
The next development cycle in the situated Cognitive
Engineering process is directed at a partial implementation
of the AD-SBT system. As the main focus of the research
described here is automatic guidance during scenario-based
training, this means that the reasoning determining the
interventions will be modeled and implemented ﬁrst. In
order to model the reasoning process, we have to deal with
a number of issues, such as: ‘Is it possible to translate
didactic strategies to generic rules in a didactic reasoning
engine?’, ‘About what sorts of trainee behaviors should
the director agent be able to reason?’, ‘What types of
interventions does a human instructor perform and how can
they be automated?’, ‘What knowledge about the trainee
should be taken into account during the reasoning process?’,
and ‘How much knowledge is needed about the possible
behaviors of the non-player characters to be able to reason
about and to execute effective interventions?’. The model-
ing, implementation, and (experimental) evaluation of the
reasoning process will bring us another step closer to a fully
functioning AD-SBT system.
REFERENCES
[1] P. Kirschner, J. Sweller, and R. Clark, “Why minimal guid-
ance during instruction does not work,” Educ psychol, pp.
75–86, 2006.
[2] M. Neerincx and J. Lindenberg, “Situated cognitive engineer-
ing for complex task environments,” in Naturalistic Decision
Making and Macrocognition.
Ashgate, 2008, pp. 373–390.
[3] D. Norman, “Cognitive engineering,” in User centered system
design.
Lawrence Erlbaum Associates, 1986, pp. 31–61.
[4] J. Rasmussen, Information Processing and Human-Machine
Interaction: An Approach to Cognitive Engineering. Elsevier
Science Inc., 1986.
[5] R. Oser, “A structured approach for scenario-based training,”
in HFES Ann. Meeting, 1999, pp. 1138–1142.
271
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

[6] E. Salas, H. A. Priest, K. A. Wilson, and A. B. Adler,
“Scenario-based training: Improving military mission perfor-
mance and adaptability,” in Military Life. Praeger Publishers,
2006, pp. 32–53.
[7] M. D. Merrill, “First principles of instruction,” ETR&D, pp.
43–59, 2002.
[8] J. Cannon-Bowers, J. Burns, E. Salas, and J. Pruitt, “Ad-
vanced technology in scenario-based training,” in Making
Decisions Under Stress.
APA, 1998, pp. 365–374.
[9] T. Baldwin and J. Ford, “Transfer of training: A review
and directions for future research,” in The training and
development sourcebook.
HRD Pr, 1994.
[10] R. Grabinger and J. Dunlap, “Rich environments for active
learning: a deﬁnition,” ALT-J, pp. 5–34, 1995.
[11] M. Young, “Instructional design for situated learning,”
ETR&D, pp. 43–58, 1993.
[12] J. Van Merriënboer, P. Kirschner, and L. Kester, “Taking the
load off a learner’s mind,” Educ Psychol, pp. 5–13, 2003.
[13] J. van Merriënboer and J. Sweller, “Cognitive load theory and
complex learning,” Educ Psychol Rev, pp. 147–177, 2005.
[14] K. VanLehn, “The behavior of tutoring systems,” IJAIED, pp.
227–265, 2006.
[15] M. Peeters, K. v. d. Bosch, J.-J. Meyer, and M. Neerincx,
“Scenario-based training: director’s cut,” in AIED conference,
2011, pp. 264–272.
[16] D. Orlich, R. Harder, R. Callahan, M. Trevisan, and
A. Brown, Teaching strategies: A guide to effective instruc-
tion.
Wadsworth Pub Co, 2009.
[17] D. Schunk, P. Pintrich, and J. Meece, Motivation in education.
Pearson/Merrill Prentice Hall, 2009.
[18] E. Linnenbrink and P. Pintrich, “Motivation as an enabler for
academic success,” School Psychol Rev, pp. 313–327, 2002.
[19] M. Lepper, J. Corpus, and S. Iyengar, “Intrinsic and extrinsic
motivational orientations in the classroom,” J Educ Psychol,
pp. 184–196, 2005.
[20] T. Malone, “Toward a theory of intrinsically motivating
instruction,” Cog Sci, pp. 333–369, 1981.
[21] M. Mitchell, “Situational interest: Its multifaceted structure
in the secondary school mathematics classroom,” J Educ
Psychol, pp. 424–436, 1993.
[22] T. Murray and I. Arroyo, “Toward measuring and maintaining
the zone of proximal development in adaptive instructional
systems,” in ITS conference, 2002, pp. 749–758.
[23] M. Csikszentmihalyi, Flow: The psychology of optimal expe-
rience.
Harper Collins, 1991.
[24] L. Vygotsky, Mind in society.
Harvard University Press,
1978.
[25] W. Admiraal, J. Huizenga, S. Akkerman, and G. Dam, “The
concept of ﬂow in collaborative game-based learning,” Com-
put Hum Behav, pp. 1185–1194, 2011.
[26] P. Sweetser and P. Wyeth, “Gameﬂow,” Computers in Enter-
tainment, 2005.
[27] A. Kapoor, W. Burleson, and R. W. Picard, “Automatic
prediction of frustration,” Int J Hum-Comput St, pp. 724–736,
2007.
[28] S. Mota and R. W. Picard, “Automated posture analysis
for detecting learner’s interest level,” in CVPRW conference,
2003, p. 49.
[29] L. Nacke and C. A. Lindley, “Flow and immersion in ﬁrst-
person shooters,” in Future Play Conference, 2008, pp. 81–88.
[30] K. van den Bosch, M. Harbers, A. Heuvelink, and W. van
Doesburg, “Intelligent agents for training on-board ﬁre ﬁght-
ing,” in DHM conference, 2009, pp. 463–472.
[31] M. Dickey, “Engaging by design,” ETR&D, pp. 67–83, 2005.
[32] S. Egenfeldt-Nielsen, “Overview of research on the educa-
tional use of video games,” Digital Kompetanse, pp. 184–213,
2006.
[33] L. Rieber, “Seriously considering play,” ETR&D, pp. 43–58,
1996.
[34] B. Magerko, R. E. Wray, L. S. Holt, and B. Stensrud, “Cus-
tomizing interactive training through individualized content
and increased engagement,” in I/ITSEC conference, 2005.
[35] M. Si, S. Marsella, and D. Pynadath, “Directorial control in
a decision-theoretic framework for interactive narrative,” in
Interactive Storytelling conference, 2009, pp. 221–233.
[36] M. Riedl, A. Stern, D. Dini, and J. Alderman, “Dynamic
experience management in virtual worlds for entertainment,
education, and training,” ITSSA, Special Issue on Agent Based
Systems for Human Learning, pp. 23–42, 2008.
272
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-177-9
ACHI 2012 : The Fifth International Conference on Advances in Computer-Human Interactions

