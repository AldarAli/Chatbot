378
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Footprint-Based Generalization of 3D Building Groups at Medium Level of Detail
for Multi-Scale Urban Visualization
Shuang He, Guillaume Moreau, Jean-Yves Martin
L’UNAM Université, Ecole Centrale Nantes, CERMA
Nantes, France
Email: Shuang.He; Guillaume.Moreau; Jean-Yves. Martin@ec-nantes.fr
Abstract—In order to enable multi-scale urban visualization,
multiple model representations at different levels of detail
(LoDs) need to be produced (like by generalization) in advance
or on the ﬂy. At local scale, building groups are involved and
at least medium LoD is needed in terms of visual perception.
Motivated by such demands, this article proposes a novel
method for generalizing 3D building groups at medium LoD
(the idea was ﬁrstly presented in the work of He et al. [1]). The
goal is to reduce both geometric complexity and information
density. The emphasis is placed on converting 3D generalization
tasks into 2D issues via buildings’ footprints. The challenge
is how to do the mapping from 3D to 2D without losing the
information for going back to 3D, especially for a non-prismatic
model at medium LoD.
Instead of treating such model as a whole, two preprocessing
steps (model partition and unit division) are introduced to
decompose a model into suitable structures for footprint-
based generalization. As a result, basic generalizations units
are obtained, and each of them is divided into Top + Body.
The Body part must be a prism for footprint projection.
The Top part can include roofs and upper walls, and it can
be transplanted onto the extruded model by displacement
or be generalized with adjacent Top parts. Two common
types of building groups are studied and different algorithms
are developed for their generalization. Experimental results
validate the effectiveness of our approach.
Keywords-3D generalization; building group; footprint; level
of detail; multi-scale urban visualization
I. INTRODUCTION
3D city visualization requires different representations
of building models at different levels of detail (LoDs) to
satisfy different scales and application needs. These LoDs
should be generated automatically by speciﬁc generalization
procedures. Generalization has a long history in cartography
[2], with the goal of emphasizing the most important map
elements while still representing the world in the most
faithful and recognizable way. 3D building generalization in
city visualization shares the same goal, but should consider
both geographical and 3-dimensional information.
As discussed and listed in [3], unlike 2D maps that
have standard ofﬁcial scale series, there are no generally
agreed LoDs for 3D buildings. Including the four LoDs
deﬁned by CityGML (City Geography Markup Language)
[4], the existing deﬁnitions of LoDs for 3D buildings only
differentiate by 3D details. That is to say, they hardly
respond to geographical generalization, like the generaliza-
tion regarding a group of 3D building, where topological
relations should also be considered. This seems to lead more
attention to single building generalization.
A number of algorithms have been developed for 3D
building generalization. Most of those algorithms deal with
single buildings. Generalization of building groups is seldom
addressed. In 3D city visualization, the goal of generalization
is not only to simplify individual objects, but also so to
achieve better cognition by emphasizing important features.
Thus, there rises a generalization need for building groups.
Both 3-dimensional detail and geographical relations should
be taken into account. More generalization operations like
selection, aggregation, typiﬁcation and their combinations
are expected.
Footprint has been serving as the connection between 2D
and 3D. Plenty of block models of buildings were extruded
from cadastral maps using their footprints and heights. But
more detailed models could not be acquired in this way.
Therefore, a question rises here: how can we translate 3D
building generalization issues into 2D scope for generalizing
more detailed 3D building models?
This article is organized as below: related work is re-
viewed in Section II. Concerned issues are discussed in Sec-
tion III. Section IV gives an overview of our approach. Sec-
tion V and Section VI focus on decomposing a 3D building
model into suitable units for footprint-based generalization
through model partition and unit division. Generalization
algorithms for two types of building groups are developed in
Section VII. Section VIII implements the proposed approach
and presents the results. Section IX concludes the article.
Section X discusses the future work.
II. RELATED WORK
Compared with the history and achievements in 2D
generalization, 3D generalization is still very young and
immature. A number of algorithms have been developed
for generalizing single buildings. Thiemann proposed to
segment a building into basic 3D primitives and to decom-
pose the whole generalization process into segmentation,
interpretation and generalization phases [5]. Mayer [6] and

379
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Forberg [7] developed scale-space techniques for simpli-
fying buildings, partly based on the opening and closing
morphological operators. Kada proposed to deﬁne parts of
simpliﬁed buildings as intersections of half-planes [8] and to
divide buildings into cells and to detect features by primitive
instancing [9]. Without semantic information, these methods
mainly detect building features based on pure geometry.
By taking semantic information into account, Fan et al.
[10] proposed a method for generalization of 3D buildings
modeled by CityGML from LoD3 to lower LoDs. Their
research showed that good visualization properties could be
obtained by only using the exterior shell of the building
model that drastically decreases the required number of
polygons. Fan and Meng [11] extended their work to the
generalization of CityGML LoD4 building models, and
concentrated on deriving LoD2 CityGML buildings from
LoD3 [12]. However, the above mentioned methods are all
limited to generalization regarding single buildings.
Anders [13] proposed an approach for the aggregation
of linearly arranged building groups. Their 2D silhouettes,
which are the results of three orthogonal projections, are
used to form the generalized 3D model. Guercke et al. [14]
studied the aggregation of LoD1 building models in the form
of Mixed Integer Programming (MIP) problems.
Techniques start emerging for generalizing 3D building
groups in the context of city visualization. Glander and
Döllner [15] proposed cell-base generalization by maintain-
ing a hierarchy of landmarks. In each cell, only landmark
buildings can be seen, the other buildings are replaced by
a cell block. In the work of Mao et al. [16], buildings
are divided into clusters by road network, and grouped
with close neighbors in each cluster. However, only LoD1
buildings were handled.
Moreover, many other algorithms have been developed
emphasizing different aspects. Putting the emphasis on pro-
gressively removing details, Sester and Klein [17] introduced
a rule base which can guide facade generalization including
aggregation of neighboring windows, elimination, enlarge-
ment or displacement of small facade features depending on
their relative importance. Kada [18] introduced an algorithm
of constrained invasive edge reduction. Rau et al. [19]
focus on automatic generation of pseudo-continuous LoD
polyhedral 3D building models, using only one parame-
ter, i.e. feature resolution. For the purpose of simplifying
and emphasizing 3D buildings, Thiemann and Sester [20]
presented adaptive 3D templates. They categorize building
models into a limited number of classes with characteristic
shapes, and then use these templates for typical 3D buildings
and replace the original 3D shape with the most similarity
of those templates. Zhang et al. [21] studied geometry
and texture coupled generalization towards realistic urban
visualization. He et al. [22] proposed a new way to produce
LoDs for 3D city models at (pseudo) all range of scales, by
combining generalization and procedural modeling.
III. CONCERNED ISSUES
A. Levels of detail for buildings
The existing methods for measuring levels of detail of
building models mainly use descriptive expressions, such as
listed in the survey of Meng and Forberg [3] and deﬁned in
CityGML standard [4]. CityGML differentiates ﬁve building
LoDs. A LoD0 building can be represented by footprint or
roof edge polygon. LoD1 is the well-known blocks model
comprising prismatic buildings with ﬂat roofs. In contrast, a
building at LoD2 has differentiated roof structures and the-
matically differentiated surfaces. LoD3 denotes architectural
models with detailed wall and roof structures, balconies,
bays and projections. LoD4 completes a LoD3 model by
adding interior structures for 3D objects. In general, we can
consider LoD0 and LoD1 as low LoDs, LoD2 as medium
LoD, LoD3 and LoD4 as high LoDs.
The ﬁve CityGML’s LoDs are generally accepted, how-
ever, each LoD obviously covers a rather wide range.
Thus, many in-between LoDs can hardly be distinguished.
Moreover, these LoDs are made for individual buildings.
They will face more challenges when a number of building
models are involved. We also adopts CityGML’s deﬁnitions,
but trying to extend them for denoting LoDs for building
groups and indicating more in-between levels.
B. Generalization scale and complexity
At different scales, 3D building models have different
features and the corresponding generalization faces different
types of complexity, such as geographic complexity and
geometric complexity. Here we use the term - geographic
complexity - to refer to the complexity related to geographic
distribution, including topological relation, information den-
sity, etc. Geometric complexity refers to the complexity of
geometric representation of models, such as the number of
primitive elements.
At city scale, low LoD building models are mostly in-
volved, so the generalization task mainly deals with geo-
graphic complexity. At object scale (e.g. single buildings),
high LoD models are often required, so the generalization
focus is on geometric complexity. At local scale (e.g. build-
ing groups), medium LoD models are usually concerned,
thus both geographic complexity and geometric complexity
should be considered. Compared with single building gener-
alization, building group generalization is seldom addressed
but also quite needed, for example, when we want to reduce
computational complexity without losing the recognizability
of a building cluster. Therefore, the proposed generalization
approach aims at reducing both geometric and geographic
complexity of a group of buildings, meanwhile maintaining
the general aspect of the group.
For the reduction of geometric complexity, a number of
generalization algorithms have been speciﬁcally designed
for single buildings. Can we make generic approaches that

380
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
suit to both (complex) single buildings and building groups?
For the reduction of geographic complexity, can we adapt
2D generalization techniques to 3D scope? Both of these
two challenges are concerned in the development of our
approach.
C. Object nature and model quality
A proper generalization approach is ﬁrstly oriented by
the object nature. In 3D computer graphics, a great number
of algorithms have been developed for simplifying polyg-
onal representations of solids and surfaces for general 3D
objects. However, these algorithms can hardly be applied
to buildings, because most 3D building models are al-
ready low-polygon models. Besides, parallel and orthogonal
properties of buildings need to be respected during sim-
pliﬁcation. Interdependency between building components,
adjacent buildings, and other city objects should also be
considered. Therefore, determined by the nature of building,
generalization algorithms for 3D building models are usually
speciﬁcally designed.
Semantics plays an important role in building generaliza-
tion. If we know the semantic meaning (wall, roof, window,
door, balcony etc.) of each geometry, it can be properly
treated according to its kind. The existing algorithms for
building generalization can be grouped into two categories
decided by whether semantic information is provided along
with the geometric model. For generalizing pure geometry
building models, the primary effort is mainly devoted to
feature detection and segmentation. Such effort can be ex-
empted if semantics is provided. Moreover, the coherence of
geometry and semantics is also inﬂuential. Stadler and Kolbe
[23] pointed out that the more information is provided by the
semantic layer, the less ambiguity remains for geometrical
integration. We believe it is also true for generalization task.
Figure 1 shows two extreme cases of the level of coherence.
IV. APPROACH OVERVIEW
The generalization target of this approach is a group of
building models at medium LoD. The emphasis is placed on
translating 3D generalization tasks into 2D problems. The
strategy is to generate footprints of 3D buildings, perform
2D generalization on their footprints, and then extend the
result to 3D.
Figure 2 depicts the main ﬂow of the proposed footprint-
based approach for generalizing building groups. Because
the available 3D building models usually come with unfa-
vorable data structures for direct footprint projection, pre-
processing is needed to obtain suitable units for projection
and generalization (step 1). Because we are coping with
building models at medium LoD, roof structures should
be properly handled. Another preprocessing method (step
2) is introduced to divide each generalization unit into
Top + Body, so that footprints can be projected from each
Body (step 3), and Top parts can be preserved for separated
generalization. Any 2D generalization operators and algo-
rithms can then be applied to their footprints (step 4), hence
allowing arbitrary levels of generalization. Prismatic bodies
can be extruded from generalized footprints (step 5). The
Top + Body division supports ﬂexible roof generalization
(e.g. displacement and ﬂattening) on Top parts (step 6).
Assembling the results of extrusion and Top generalization
(step 7), the ﬁnal result of the generalized 3D building group
can be obtained.
V. PREPROCESSING I: MODEL PARTITION
The goal of partitioning is to decompose the original
model into basic units favorable for generalization. Here
rises the question: what makes a favorable unit for general-
ization? We believe there are two important criteria for such
unit: 1) it has coherent structure in geometry and semantics;
2) it (or a part of it) can be fully represented by its footprint.
The ﬁrst criterion is one of the emphases addressed by
CityGML [24]. The second criterion is seldom mentioned,
but very important for facilitating generalization tasks and
for adapting 2D generalization techniques into 3D scope.
Using CityGML LoD2 building model as example, partition
rules are developed, so that basic units can be obtained with
beneﬁcial attributes for generalization.
A. CityGML LoD2 building model
In order to develop proper strategy for partitioning, we
should be aware of the data structure and all possible
elements of the target model. The original UML diagram of
CityGML building model [4] includes all four LoDs. To be
more concentrated, we redraw a UML diagram exclusively
for LoD2. See Figure 3.
In Figure 3, «Geometry» implies purely geometric rep-
resentation, whereas «Feature» implies geometric/semantic
representation. According to CityGML standard [4], the
concerned features are explained as below:
A Building can consist of many BuildingParts,
and
each
BuildingPart
can
also
consists
of
many
BuildingParts. That is to say, a hierarchical build-
ing
tree
of
arbitrary
depth
may
be
realized.
More-
over,
each
Building/BuildingPart
could
consist
of
three types of elements: text attributes, pure geome-
try,
and
geometric/semantic
features
(for
LoD2,
they
are BuildingInstallations, _BoundarySurfaces, and
BuildingParts). All these elements will be treated dif-
ferently in our generalization approach. Figure 4 depicts
all possible elements and their treatments in the following
generalization.
B. Partition rules
Above all, we would like to clarify that the following
rules are designed to partition common buildings. It is
reasonable to believe that a common building has all the
main walls starting from and orthogonal to the (local) ground

381
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
(a) Unstructured geometry without semantic object information [23]
(b) Complex object with fully coherent spatio-semantic structure [23]
Figure 1: Comparison of two extreme cases in terms of spatio-semantic coherence.
Figure 2: Main ﬂow of the approach for generalizing build-
ing groups.
plane. Otherwise, we’d better consider this building as an
uncommon building, and prescribe different treatment for
generalization. In many cases, uncommon buildings are
landmark buildings which may not need to be generalized.
The goal of partition is to get a well structured building in
both semantic and geometric sense, so as to extract suitable
unit for generalization. As mentioned above, we believe
a favorable generalization unit should be able to be fully
represented by its footprint. Even though a CityGML build-
ing model already has semantically structured geometry, the
geometry of each feature may still not be applicable due
to the different habits in modeling process. For instance,
a complex building may not be decomposed into different
building parts; the protruded surfaces of a balcony may be
modeled as a part of the wall surfaces. In order to regulate
such kind of geometry, the partition rules are introduced as
below:
• If a Building is composed of unconnected segments,
partition them into different Buildings.
• If a Building is composed of structural segments
differing in e.g. height or roof type, partition them into
different BuildingParts.
• If a Building/BuildingPart has smaller components
which are not signiﬁcant as BuildingParts (e.g.
chimneys, dormers, and balconies), partition them into
BuildingInstallations.
• If a Building/BuildingPart has geometries without
semantic information, partition them into pure geome-
tries.
• If a Building/BuildingPart has BuildingParts and
_BoundarySurfaces at the same level, make the
_BoundarySurfaces into a new BuildingPart.
• If
a
Building/BuildingPart
includes
only
one
BuildingPart, move the included BuildingPart into
its parent Building/BuildingPart.
• If a Building has _BoundarySurfaces, there must
be a WallSurface starting from and orthogonal to the
ground plane; otherwise, partition this Building as a
BuildingInstallation into another Building.
• If a BuildingPart has _BoundarySurfaces, there
must be a WallSurface starting from and orthog-
onal to the ground plane; otherwise, partition this
BuildingPart into a BuildingInstallation.
• If a Building/BuildingPart has unconnected or
self-intersected WallSurface, partition it into more
BuildingParts.

382
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 3: UML diagram of CityGML LoD2 building model drawn based on CityGML standard [4]
Figure 4: All possible elements of a CityGML LoD2 build-
ing model and their treatments in generalization.
C. Partition result
After employing the proposed partition rules, a build-
ing
tree
can
be
obtained
consisting
of
basic
gen-
eralization
units
with
beneﬁcial
attributes.
Although
each
Building/BuildingPart
could
include
text
at-
tributes,
pure
geometry,
BuildingInstallations,
and
_BoundarySurfaces, only _BoundarySurfaces are se-
lected to form the basic generalization unit. The term unit
will be used in the following discussion, referring to a node
of a building tree only consisting of _BoundarySurfaces.
A simple building only has one generalization unit, which
is the root node of its building tree. A complex building has
at least two generalization units, including all leaf nodes of
its building tree, as illustrated in Figure 5.
Figure 5: Two examples of building trees consisting of basic
generalization units.
The beneﬁcial attributes of a basic generalization unit are
listed as below:
• Each basic unit only consists of _BoundarySurfaces.
• Each basic unit has unique height.
• If there are _BoundarySurfaces, there must be a
WallSurface; other types of surfaces are optional.
• A WallSurface must start from and be orthogonal to
the ground plane.
• The orthogonal projection of WallSurfaces of each
leaf node form a simple polygon or polyline.
So far, we have obtained basic units with favorable
WallSurfaces, but each unit still cannot be fully rep-

383
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
resented by footprint fp, which is obtain by projecting
all its walls without considering the roof. There also rises
the issue of roof generalization. We propose to use fp to
fully represent only a part of the unit and to handle roof
generalization separately in preprocessing II.
VI. PREPROCESSING II: UNIT DIVISION
A common way of roof generalization is by primitive
matching of different roof types. But type detection is a
costly (most often manual) and uncertain process depending
on the given types and lots of parameters. In CityGML
building models, roof surfaces are separated from walls, but
roof type is not always available in attributes. Even if given
the roof type, the rebuilding of roof after extrusion would
be another difﬁculty without knowing parameters.
Our approach places the emphasis on converting 3D
generalization tasks into 2D scope via footprints. But direct
footprint projection of basic generalization units will still
lose the roof information, which is important when extend-
ing 2D generalization results to 3D. We propose to divide
each generalization unit into Top+Body before conducting
footprint projection. The Body part is a prismatic model,
which can be fully represented by its footprint and associated
height. The Top part consists of the rest structures (e.g. roofs
and upper walls) of the unit, which can be easily transplanted
to a prismatic model and can also be generalized with
adjacent Top parts. Thus, only the Body part of each unit is
used for footprint projection, and the Top part is preserved
for roof generalization.
For a building, if all of its walls end at the top in the
same horizontal plane, the Top only consists of its roof;
otherwise, the Top consists of its roof and the end walls.
An example is given in Figure 6.
Figure 6: An example of dividing a building into Top +
Body.
VII. GENERALIZATION ALGORITHMS
After having partitioned each original model into basic
generalization units, and having performed Top + Body
division on all the units, footprint-based generalization can
then be enabled. Generalization tasks always need human
analysis and human decision on what to generalize and how
to generalize. Therefore, different strategies and algorithms
should be developed for generalizing different types of
building groups.
Here we study two types of building groups which widely
exist especially in European cities (as illustrated in Figure
7): 1) traditional building groups and 2) modern building
groups. It is obvious that type 1) groups have low and
crowded buildings with similar heights, but type 2) groups
have buildings with prominent difference in height. There-
fore, we develop two generalization algorithms for these two
types of building groups.
Figure 7: A group of traditional buildings (left) and a group
of modern buildings (right), Nantes, France c⃝IGN BATI 3D
A. Generalization of building groups with a minor difference
in height
If a group of buildings have no big difference in height,
we believe its outer feature can represent the whole group
to a certain extent, like in local scale and or city scale visu-
alization. Therefore, the ﬁrst generalization task is to detect
its outer feature. After have obtained basics generalization
units through model partition (Section V), the outer units
can be considered as the outer feature of a building group.
The outer units can also be aggregated. If all units are outer
units, no units will be eliminated, and aggregation can be
directly performed on all units. If the outer units have non-
ﬂat roofs, two levels of aggregation can be achieved: with or
without roof structures. The original roof structures can be
preserved based on the Top + Body division (Section VI).
They can be transplanted onto the extruded building blocks,
and be generalized to ﬂat roofs as well.
Our generalization operations start from a group of LoD2
buildings, but the goal is not to generalize each building
to LoD1. Not only each individual building is concerned,
but also the overall feature of the group is addressed. We
believe that it is better to specify the target when using the
concept of LoD, and thereby introduce a more dedicated
term - Group LoD - to denote the level of detail of a building
group. Group LoD1 and Group LoD2 are deﬁned similar to
LoD1 and LoD2 of a building model in CityGML standard.

384
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Another three Group LoDs are introduced to describe more
inter-level status. The deﬁnitions are given as below:
• Group LoD2: every building model in the group is at
LoD2.
• Group LoD1C: the building group is represented by its
outer units.
• Group LoD1B: aggregated Group LoD1C model with
the same height, but differentiated roof structures.
• Group LoD1A: Group LoD1B model with ﬂattened
roof.
• Group LoD1: the building group is a block model,
which looks like a LoD1 building model.
The main ﬂow of the algorithm is depicted in Figure 8.
Figure 8: The main ﬂow of the generalization algorithm for
building groups with a minor difference in height.
B. Generalization of building groups with a major difference
in height
If a building group has a major difference in height,
the generalization will be performed on its subgroups. A
Figure 9: The main ﬂow of the generalization algorithm for
building groups with a major difference in height.
subgroup is composed of a center unit and its adjacent
neighbors. Each time the highest unit will be chosen from
the unprocessed units. If this unit is much higher than its
neighbor, they should not be aggregated. We use the term
coequal in this paper to indicate that the height difference
in two units can be ignored, that is to say, they can be
aggregated. Coequal units are deﬁned as below:
Given two units U1 with height h1 and U2 with height
h2, if they satisfy the constraint as in Equation (1), U1 and
U2 are coequal, where Th1 is a predeﬁned variable as the
threshold.
1
Th1
< h1
h2
< Th1
(1)
When merging two adjacent and coequal units, either
height of the original units can be assigned to the new unit.
If the lower unit covers a rather large area, the new unit

385
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
takes the lower height; otherwise, it takes the higher one.
We propose a criterion as below:
Given a1, a2, and h1, h2 (h1<h2) as the areas and heights
of two coequal units, the height of new merged unit h3 is
determined as in Equation (2), where Th2 is a predeﬁned
variable as the threshold.
h3 =
(
h1
if a1 ≥ Th2 ∗ a2
h2
otherwise
(2)
The main ﬂow of the algorithm is depicted in Figure 9.
VIII. EXPERIMENTAL RESULTS
The proposed footprint-based generalization approach is
tested on two sets of building groups and on a land parcel
consisting of 290 buildings.
A. Test 1: Generalization of Building Groups with a Minor
Difference in Height
The algorithm for generalizing building groups with minor
difference in height (Section VII-A) is tested on a building
group consisting of 381 generalization units. The statistics
are given in Table I, and the results are shown in Figure 10.
B. Test 2: Generalization of Building Groups with a Major
Difference in Height
The algorithm for generalizing building groups with major
difference in height (Section VII-B) is tested on a building
group consisting of 193 units. The results are shown in
Figure 11, and the statistics are given in Table II. In this
test we deﬁne Th1=2, and Th2=4. Please see Equation (1)
and (2) for the meaning of Th1 and Th2.
C. Test 3: Generalization of Building Groups in A 3D City
A parcel of land consisting of CityGML LoD2 buildings
is integrated into a 3D city model, and generalization can
be performed on these LoD2 buildings (Figure 12b). With
the purpose of conveying the overall feature of building
groups, three inter-level models between Group LoD2 and
Group LoD1 are generalized using the algorithm proposed
in Section VII-A. The results are shown in Figure 12. Table
III presents some statistics for each Group LoD, including
the number of polygons, buildings, and generalization units.
All adjacent buildings are merged into new buildings at
Group LoD1C. The following generalization operations are
performed on each of these nonadjacent buildings, so the
number of building does not change then. But the number of
generalization unit drops at each Group LoD, which implies
the reduction of information density. The drop of polygon
number indicates the reduction of computational complexity.
IX. CONCLUSION
This article presented a novel approach for generalizing
3D building groups. The goal is to reduce both geometric
complexity and information density, meanwhile maintain-
ing recognizability, which requires at least medium LoD
models. The emphasis has been placed on translating 3D
generalization issues into 2D scope via footprints. First
of all, a meaningful partition was suggested so that each
footprint can carry feature information. A set of partition
rules was developed for partitioning the buildings modeled
by CityGML at LoD2.
Footprint-based generalization is then confronted with
the difﬁculty of roof generalization. Unlike the existing
approaches such as primitive matching, we proposed to
divide a building into Top+Body. Thus, a Top part can be
easily transplanted onto the extruded model by displacement.
Of course, a Top part can also be generalized to a ﬂat roof,
or be aggregated with adjacent Top parts.
Two types of building groups were distinguished and
further studied in this work: one has major difference in
height and the other has minor difference in height. For the
former one, we believe its outer feature can represent the
whole group to a certain extent. For the latter one, it should
not be handled as a whole. An iterative aggregation process
is performed by comparing the height and area of every two
adjacent units starting from the highest one.
The approach was tested on two building groups and a part
of 3D city model. Group generalization shows its advantage
in reducing information density, e.g. by eliminating insignif-
icant buildings. Different from the methods only handle
LoD1 block models, our approach can handle LoD2 models
as well. Instead of aggregating detailed models directly into
LoD1 blocks, our approach supports generalization of Group
LoDs with geographical features, thereby achieving data
reduction and maintaining recognizability at the same time.
As mentioned in Section III-B, we aimed at ﬁnding
solutions to these two challenges: 1) Can we make generic
approaches that suit to both (complex) single buildings
and building groups? 2) Can we adapt 2D generalization
techniques to 3D scope? Towards the ﬁrst challenge, we
proposed model partition to decompose a building model
into generalization units. Thus, a complex building can be
seen as a connected building group. Towards the second
challenge, we divided each unit into Top+Body, so that the
Body part can be fully represented by its footprint, through
which 3D generalization tasks can be converted to 2D issues.
X. FUTURE WORK
During unit division, very small upper walls could be
generated mostly due to the irregularity of the input model.
Those segments are expected to be discarded, but additional
roof adjustments are required to keep the topological relation
between walls and roof. This will be our next work.

386
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
The proposed methods of model partition and unit division
are developed for common buildings, with walls starting
from and orthogonal to the (local) ground plane. Buildings
with special architectural designs with be studied in the
future, as well as the necessity of their generalization in
the context of urban visualization, since they are usually
landmark buildings.
For building group generalization, the ratio of area be-
tween space and inner units will be considered during
generalizing building groups with a minor difference in
height; only two types of building groups have been studied,
so more types should be studied in the future; only connected
buildings are treated, and building groups with disjoint
buildings will be concerned.
Towards LoD measurement of 3D building models, this
work introduced a more dedicated term Group LoD and
several new Group LoDs to describe in-between levels.
There remains open questions: e.g. how to measure LoD
with more precision? How many LoDs are there? How to
decide LoD according to scale?
REFERENCES
[1] S. He, G. Moreau, and J.-Y. Martin, “Footprint-based 3d gen-
eralization of building groups for virtual city visualization,”
in GEOProcessing 2012, 2012, pp. 177–182.
[2] R. B. McMaster and K. S. Shea, Generalization in Digital
Cartography.
Washington, D.C.: Assoc. of American Geog-
raphers, 1992.
[3] L. Meng and A. Forberg, 3D Building Generalisation.
El-
sevier, 2007, ch. 11, pp. 211–232.
[4] OSG City Geography Markup Language (CityGML) Encod-
ing Standard (Version 2.0.0), Open Geospatial Consortium
Inc. Std. OGC 12-019, 2012.
[5] F. Thiemann and M. Sester, “Segmentation of buildings for
3d-generalisation,” in Proceedings of 7th ICA Workshop on
Generalisation and Multiple Representation, 2004.
[6] H. Mayer, “Scale-spaces for generalization of 3d buildings,”
International Journal of Geographical Information Science,
vol. 19, no. 8-9, pp. 975–997, 2005.
[7] A. Forberg, “Generalization of 3d building data based on
a scale-space approach,” in International Archives of the
Photogrammetry, Remote Sensing and Spatial Information
Sciences, 2004.
[8] M. Kada and F. Luo, “Generalization of building ground
plans using half-spaces,” in Proceedings of the International
Symposium on Geospatial Databases for Sustainable Devel-
opment, 2006.
[9] M. Kada, “Scale-dependent simpliﬁcation of 3d building
models based on cell decomposition and primitive instanc-
ing,” in Proceedings of the International Conference on
Spatial Information Theory, 2007.
[10] H. Fan, L. Meng, and M. Jahnke, Generalization of 3D
Buildings Modelled by CityGML.
Springer, 2009, pp. 387–
405.
[11] H. Fan and L. Meng, “Automatic derivation of different levels
of detail for 3d buildings modeled by citygml,” in Proceedings
of 24th International Cartographic Conference, 2009.
[12] H. Fan and L. Meng, “A three-step approach of simplifying
3d buildings modeled by citygml,” International Journal of
Geographical Information Science, vol. 26, no. 6, pp. 1091–
1107, 2012.
[13] K.-H. Anders, “Level of detail generation of 3d building
groups by aggregation and typiﬁcation,” in International
Cartographic Conference, 2005.
[14] R. Guercke, T. Götzelmann, C. Brenner, and M. Sester,
“Aggregation of lod 1 building models as an optimization
problem,” ISPRS Journal of Photogrammetry and Remote
Sensing, vol. 66, no. 2, pp. 209–222, 2011.
[15] T. Glander and J. Döllner, “Abstract representations for in-
teractive visualization of virtual 3d city models,” Computers,
Environment and Urban Systems, vol. 33, pp. 375–387, 2009.
[16] B. Mao, Y. Ban, and L. Harrie, “A multiple representation
data structure for dynamic visualisation of generalised 3d
city models,” ISPRS Journal of Photogrammetry and Remote
Sensing, vol. 66, no. 2, pp. 198–208, 2011.
[17] M. Sester and A. Klein, “Rule based generalization of build-
ings for 3d-visualization,” in Proceedings of the International
Cartographic Conference, 1999.
[18] M. Kada, “Automatic generalization of 3d building models,”
in The International Archives of the Photogrammetry, Remote
Sensing and Spatial Information Sciences, 2002.
[19] J.-Y. Rau, L.-C. Chen, F. Tsai, K.-H. Hsiao, and W.-C.
Hsu, “Lod generation for 3d polyhedral building model,”
in Advances in Image and Video Technology, ser. Lecture
Notes in Computer Science, L.-W. Chang and W.-N. Lie, Eds.
Springer Berlin / Heidelberg, 2006, vol. 4319, pp. 44–53.
[20] F. Thiemann and M. Sester, “3d-symbolization using adaptive
templates,” in Proceedings of ISPRS Technical Commission II
Symposium, 2006, pp. 49–54.
[21] M. Zhang, L. Zhang, P. T. Mathiopoulos, W. Xie, Y. Ding,
and H. Wang, “A geometry and texture coupled ﬂexible
generalization of urban building models,” ISPRS Journal of
Photogrammetry and Remote Sensing, vol. 70, pp. 1–14,
2012.
[22] S. He, G. Besuievsky, V. Tourre, G. Patow, and G. Moreau,
“All range and heterogeneous multi-scale 3d city models,”
in Proceedings of Usage, Usability, and Utility of 3D City
Models., 2012.
[23] A. Stadler and T. H. Kolbe, “Spatio-semantic coherence in
the integration of 3d city models,” in Proceedings of the 5th
International Symposium on Spatial Data Quality, 2007.
[24] G. Gröger and L. Plümer, “Citygml – interoperable semantic
3d city models,” ISPRS Journal of Photogrammetry and
Remote Sensing, vol. 71, pp. 12–33, 2012.

387
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Table I: Statistics for Test 1.
Footprint
3D model
Group LoD
Fig.
Vertex
Polygon
Vertex
Polygon
Group LoD2
10a
361
44
1565 (100%)
381 (100%)
Group LoD1C
10d
186
18
843 (53.9%)
203 (53.3%)
Group LoD1B
10f
121
3
679 (43.3%)
153 (40.2%)
Group LoD1A
10g
121
3
590 (37.7%)
121 (31.8%)
Group LoD1
10h
70
1
345 (22.0%)
70 (18.4%)
(a) Original models ( c⃝IGN BATI 3D)
(b) Projected footprints
(c) Footprints of outer units
(d) Group LoD1C model
(e) Footprints of merged outer units
(f) Group LoD1B model
(g) Group LoD1A model
(h) Group LoD1 model
Figure 10: Generalization results of Test 1.
Table II: Statistics for Test 2.
Footprint
3D model
Group LoD
Fig.
Vertex
Polygon
Vertex
Polygon
Group LoD2
11a
193
19
879 (100%)
211 (100%)
Generalized
11d
118
5
565 (64.3%)
116 (55%)
(a) Original models ( c⃝IGN BATI 3D)
(b) Projected footprints
(c) Generalized footprints
(d) Generalized model
Figure 11: Generalization results of Test 2.

388
International Journal on Advances in Software, vol 5 no 3 & 4, year 2012, http://www.iariajournals.org/software/
2012, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Table III: Statistics for Test 3.
Group LoD2
Group LoD1C
Group LoD1B
Group LoD1A
Group LoD1
Figure
12b
12c
12d
12e
12f
Polygons
52247 (100%)
37348 (71%)
35592 (68%)
28023 (54%)
20338 (39%)
Buildings
290
213
213
213
213
Units
1421
949
321
312
213
(a) Original model ( c⃝IGN BATI 3D)
(b) Group LoD2
(c) Group LoD1C
(d) Group LoD1B
(e) Group LoD1A
(f) Group LoD1
Figure 12: Generalization results of Test 3. Three landmark buildings are marked and excluded from each generalization.

