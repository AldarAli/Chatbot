Comparison of 4G and 5G Network Simulators
Christos Bouras∗†, Georgios Diles†, Apostolos Gkamas ‡, Andreas Zacharopoulos†
∗Computer Technology Institute and Press “Diophantus”, Patras, Greece
†Computer Engineering and Informatics Dept., University of Patras, Greece
‡University Ecclesiastical Academy of Vella, Ioannina, Greece
Email: bouras@cti.gr, diles@ceid.upatras.gr, gkamas@aeavellas.gr, st1003768@ceid.upatras.gr
Abstract—Network simulation is a technique of utmost impor-
tance to evaluate new network performance, verify new algo-
rithms and analyze various network topologies. It is used to ﬁnd
results to be expected from a hardware setup without the need
for actual implementation. For this reason, there is a plethora
of Network Simulation Software applied to different scenarios
to evaluate theories and hypotheses. The aim of this paper is to
study the most common Simulators regarding the deployment of
5G networks, provide a detailed comparison featuring their main
advantages and showcasing potential defects and support the
academic community, offering the required data to help choose
the necessary one.
Keywords–Simulator; Comparison; 4G; 5G.
I.
INTRODUCTION
The exponential increase in mobile data trafﬁc has driven
current wireless networks towards their limits and as a result,
researchers should be highly motivated to create powerful next-
generation mobile networks, based on the current networks
trends and needs of that era. It is indicative that due to
popularization of smart devices and development of Internet
services that the industry faces during the 4th Generation
mobile networks (4G) era, advancements in mobile networks
to accommodate such demand has become necessary. Consid-
ering that the mobile data trafﬁc ﬂow is expected to increase a
thousand percent by the end of this decade, the current research
on this generation of mobile networks and the next (5G)
is actively moving with a high pace. Vendors and operators
are already involved in 5G testing and trials, which is soon
expected to lead to a ﬁnalized standard.
Network technology is advancing rapidly as well and,
accompanied by expansion of network scale, have made it
extremely hard to analyse networks. It goes without saying
that testing algorithms and protocols is extremely important
since their launching in large scale is prohibitive because of
uncertainty of its outcome. Network schemes can be tested
either by analytical modelling or with the help of simulation
tools. Although analytical modelling can indeed have very
realistic results, it does not come without drawbacks, most
notably the lack of precision regarding energy and memory
needs and can be proven to be very expensive.
On the other hand, network simulation is used to imitate
over time the operation of a real-world system enabling the
observation of services and applications the network could
support. It allows the researchers to model a network’s be-
haviour given the proposed changes, either with the use of
mathematical formulas to calculate the interaction between
the various entities of the network, or actually recording and
recapping information that emerge from it. It provides the
capability to manipulate most of the environment attributes to
evaluate the system behaviour under different circumstances
and allows the comparison between alternatives to optimize
network performance. These developments make network sim-
ulators an important requirement for scientiﬁc researchers
around the globe. It comes with relatively low cost and small to
no risk, enabling researchers to decide and predict on network
behaviour with greater convenience, compared to practical
networks. As a consequence, there have been attempts to
create diverse softwares for network simulation to test new
algorithms and simulate network behaviour. But choosing the
most suitable simulator for each occasion is not always an easy
decision.
Picking the right simulation tool is a subject that has been
troubling scientists for many years. Actually, it is not the ﬁrst
attempt to compare simulation software, as there have been a
couple published in recent years. Challenges of system-level
simulation and performance evaluation and the importance of
creating a stable and reliable tool for 5G in consideration of
the new needs and tachnologies that emerge are discussed in
[1]. One example is the work presented in [2] and [3], where
the comparison of popular network simulators is shown.
A performance analysis which includes open source plat-
forms simulating a MANET routing protocol is presented in
[4]. There are researches testing different routing protocols
[5] in different simulators with different network parameters
to evaluate the performance of network protocols. A more
detailed comparison, in which in addition to open simulators,
commercial platforms are also included, is presented in [6].
In this paper, we analyse both commercial and open source
state-of-the-art simulators presenting performance comparison
regarding 4G and 5G networks in an attempt to provide refer-
ence to the scientiﬁc community when there is a need to choose
the right software for simulation. Currently, the majority of the
state of the art simulation tools follow discrete event simulation
methodology. This is the reason why, we will only focus on this
technique. In [7], researchers discussed current simulators with
different characteristics in different aspects. Here, we study
some of the most popular simulation tools that follow discrete
event simulation like ns-3, OMNeT++, Riverbed and NetSim.
The motivation behind this paper is to provide comprehensive
review of various Simulators, available for scientists allowing
advanced research on 4G and 5G Networks.
The rest of the paper is structured as follows. Section II
manifests importance and difﬁculties of simulation. In Section
III, the simulation tools are presented while the cumulative
comparison follows in Section IV where the simulators’ fea-
tures and advantages are discussed. Finally in Section V, we
draw up our conclusions.
13
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

Figure 1. Network Simulation
II.
NETWORK SIMULATION
Creating the desirable network in a real time scenario
is challenging as researchers’ needs and requirements may
vary depending on the situation. For that reason, there is a
great number of softwares that can be used in every case.
In any case, one feature is certain and non-negotiable, all of
the simulation softwares have to enable a user to represent
a network topology, specify the nodes on the network, and
of course the links and the trafﬁc between them. Of course,
there may be simulators of much higher complexity that permit
speciﬁcation of every detail regarding the protocols they wish
to use for handling trafﬁc in a network laying quite solid
foundations for future real time implementation. Simulators
may come with text-based applications that can provide a not
very intuitive interface, which could nevertheless allow evolved
tools for customising or with graphical applications capable of
granting users an easy and fast way to visualization of the the
workings of the environment they wish to examine.
The simulation of wireless networks is even more compli-
cated due to the nature of wireless networks. The basic concept
of wireless network simulation can be found in Figure 1.
Differentiating simulators is most commonly based in
terms of speed, accuracy, cost and convenience of use. The
majority of the simulators provide a multi-protocol and mod-
ularity framework. There are some network simulators in
companies that are developed exclusively for business, while
others are developed by research institutes and/or universities
to be used for researching purposes. In general, commercial
software is not open, more expensive but can provide more
protocol and model support while the other simulators are free,
but may not be as applicable.
The criteria based on which the different types of simula-
tors will be judged regard system performance, ease of learning
and ease of use, the presence of Graphical Interface support,
availability of the tool, etc. There are general information as
well as properties of the softwares. They can be found gathered
in Table 1 in Section IV.
III.
SIMULATORS AND THEIR FEATURES
The following section presents the main simulators studied,
their main properties, the major strengths and most important
weaknesses. As mentioned above, the softwares in question
follow discrete-event simulation. This methodology means that
the operation of the system is modeled as a discrete sequence
of events in time and its behavior can be simulated by modeling
the events in the system where user has to set the scenarios in
the right order. Also, they are chosen due to their popularity
and widespread use.
A. ns-3
The ns-3 is a discrete-event network simulator developed
mainly to be used for research and educational purposes.
Based on the development on ns-2, the ns-3 project was
launched in 2006 and is licensed under the GNU GPLv2
license, and is applicable for development and research for
free. It should be noted that although ns-3 was based on NS2,
it is to not be mistaken as an updated version of it, rather
than as an attempt to replace it, meaning that ns-3 does not
provide backward compatibility with NS2. It deﬁnes a model
of working procedure of packet data networks, and provides
an engine for simulation.
Without deviating from its predecessor and base, ns-3 uses
two key languages in C++ and Python. While the simulator is
developed exclusively in C++ with optional python bindings,
this allows the users the freedom to choose between C++ and
Python for the scripts of simulation they write. It should be
noted that in any case, both languages work very effectively on
ns-3. The speciﬁed software also provides Graphical Interface
for the results’ visual presentation, with the use of animators.
Finally, ns-3 comes with a powerful library enabling the users
to do have the desired outcome, allowing them to edit ns-3
itself.
The main features of Network Simulator 3, which also
differentiate it from NS2 include:
1)
Different software core: ns-3 has its core written
entirely in C++ and with Python scripting interface
[8].
2)
Virtualization
support:
Implements
the
use
of
lightweight Virtual Machines.
3)
Software integration: allow the inclusion of more
open-source networking software which means that
the simulation models do not have to be rewritten.
4)
Attention to realism: real computers are emulated in
more detail by protocol entities.
Due to its features, ns-3 displays several strengths, such as:
•
High modularity.
•
A lot more ﬂexibility in comparison to most simula-
tion softwares.
•
Easier and more credible model validation via ported
code support.
•
Enable simulation for a plethora of protocols.
•
Wide range of use for expanding or enhancing existing
networks.
•
Allows Software integration.
However, it also has some weaknesses:
14
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

Figure 2. Architecture of ns-3
Figure 3. An example of NetAnim [8]
•
ns-3 still suffers from lack of credibility.
•
ns-3 attempts to replicate the successful approach of
NS2 but the latter was used by many organizations
that contributed by adding to models and components
[6].
•
There is an imperative need of active maintainers who
will respond to the user questions, write adequate doc-
umentation, ﬁx reported bugs, and ensure the correct
service of the system.
•
The aforementioned maintainers are also needed in
order to have ﬁnancial advantage of ns-3 like other
commercially released simulators.
The basic structure of ns-3 architecture layers is shown in
Figure 2. In Figure 3, an example of NetAnim interface is
shown, a software exetutable that allows display of topology
and animation of packet ﬂow [8].
B. OMNeT++
Publicly available since 1997, OMNeT++ [9] is an extensi-
ble, modular, discrete event simulation software [10]. Although
it can successfully model complex IT systems, multiproces-
sors, distributed hardware architectures, it is more often used
for computer networks simulation, both wireless and wired.
It is written thoroughly in C++. Using the software under
Figure 4. Structure of OMNeT++ simulator
the Academic Public License makes it free for non-beneﬁt
or academic use. Its free disposal combined with the tool’s
extensibility and the amount of available online documenta-
tions have made it very popular in the academic community.
The motivation behind the development of OMNeT++ is to
bridge the gap between research-oriented, free simulators like
ns-3 and commercial alternatives like Riverbed that are much
more high-priced. It is a component-based architecture and
components (called modules) are programmed entirely in C++.
They are then assembled into larger components and models
with the use of NED, a language of higher level. Its modular
architecture allows the simulation kernel to be easily embedded
into almost every application.
The software has great GUI support and the simulation
environment also offers a compiler for the NED topology
description language (nedc), graphical network editor for
NED ﬁles (GNED), GUI for simulation execution (Tkenv),
command-line user interface for simulation execution (Cm-
denv) [9] [11].
The most important feature of the simulator is that the
modules are assembled by reusable components to be com-
bined in different ways. Another important feature is that
OMNet++ is basically a framework approach, providing the
groundwork to develop various simulations models to meet
different application areas requirements, which subsequently
follow their release cycles. Currently, it is on version 5.4.1.
The simulator’s strengths can be summarized as follows:
•
Makes it easier to trace and debug.
•
Can be used to model most hardware with accuracy.
•
It offers wide GUI support via a complete, robust
environment.
•
Provides Reusable modules that can be combined in
different ways
While its weaknesses include:
•
The mobility extension can be found somewhat in-
complete.
•
It offers poor analysis and management of typical
performance.
The structure of OMNeT++ simulation system can be
found in Figure 4 and an example of simulation in Figure
5.
C. Riverbed Modeler
OPNET (Optimized Network Engineering Tools) Modeler
is the development environment of OPNET simulator and is
targeted for both research purposes and development. It was
15
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

Figure 5. Example of simulation on OMNeT++
one of the most popular commercial simulation softwares by
the end of 2008 and being in the market for such a long period,
it managed to occupy a large share of it. Nowadays, it is part of
Riverbed Modeler. Its ﬂexibility allows it to be highly useful in
studying communication applications, protocols and networks.
It offers the users vast and impressive visual interface, due
to its commercial nature. Using the graphical editor interface,
the users are able to build whole network topology and entities
from the application layer all the way to the physical layer and
the mapping from the graphical design to the implementation
of the real systems is created using Object-Oriented program-
ming. All topologies conﬁguration and simulation results can
be presented very intuitively and visually. The users also
have the freedom to adjust the parameters and quickly repeat
experiments using the graphical interface, performing tests for
various scenarios [11]. Riverbed is based on a mechanism
called discrete event system.
According to the authors of [7], OPNET can be used to
carry through with three functions:
1)
modeling: it provides a vary intuitive and visually
rich GUI, allowing users to develop a great variety
of models.
2)
simulating: It uses three different technologies.
3)
analysis: the results originating from the simulation
process can be presented and analysed using the sim-
ulators tools, such as user friendly charts, animations
or statistics.
Important features of the Riverbed system is that the
organisation of the networks is accomplished via hierarchical
structure plus the fact that graphical interface and program-
ming tools are available to users to deﬁne protocols or packet
format.
Some strengths of the system include:
•
Fast discrete event analytical simulation engine [6].
•
Reduces simulation runtime by utilizing parallel and
distributed capabilities [12].
•
Allows quick correlation of graphical result with net-
work behavior and easy interpretation.
Figure 6. Simulation Workﬂow of Riverbed Modeler
Figure 7. GUI of Riverbed Modeler
While some weaknesses could be:
•
It only supports a small number of nodes within a
single device.
•
Simulation is inadequate in case there are long periods
where nothing happens.
•
Provided GUI might be powerful but its use it rather
complicated.
•
Sampling resolution sets the limit for the result accu-
racy.
The simulation workﬂow of Riverbed modeler can be found
in Figure 6 and the Graphical Interface in Figure 7.
D. NetSim
NetSim is a stochastic discrete event simulator targeted
for experimentation and research on networks. Its a lead-
ing network simulation software for protocol modelling and
simulation, allowing us to analyze computer networks with
unmatched depth, power and ﬂexibility [13]. It is developed
in 1997 by Tetcos . Its native development environment, acts
as the interface between Users code and NetSims protocol
libraries and simulation kernel [14]. NetSim is available as
Pro, Standard or Academic versions and is built on a common
design framework of high level architecture and code. Every
version has of course different features, supports different
options and has a different price. NetSim is more versatile
than most of the other softwares and robust with an excellent
and easy to use graphical interface. It should be noted that It
is capable to provide performance metrics at abstraction levels
16
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

TABLE I. TABLE FOR COMPARISON OF SIMULATORS.
ns-3
OMNeT++
Riverbed
NetSim
License Type
Open Source
Open Source
(study & research)
Commercial
Proprietary
Language Supported
C++ & Python
C++
C & C++
C++ & Java
Supported OS
Linux, Mac OS
Windows
Linux, Mac OS
Windows
Linux, Windows
Windows
GUI Support
Good
Good
Excellent
Excellent
Document Available
Yes
Yes
Yes
Yes
Ease of Use
Hard
Easy
Easy
Easy
Simulation Event Type
Discrete event
Discrete event
Discrete event
Stochastic Discrete event
Available Module
Wired,Wireless
Adhoc,WSN
Wired,Wireless
Adhoc,WSN
Wired,Wireless
Adhoc,WSN
Wired & Wireless SN
Scalability
Limited
Enough
Large
Enough
Availability of analysis tool
Yes
Yes
Yes
No
Communication with other
modules
No
No
Yes
No
Network visualization tool
Yes
Yes
Yes
Yes
Possibility to design and
modify scenarios
Yes
Yes
Yes
Yes
5G native support
Yes
No
No
No
from network to node and creates a packet trace with all of
the necessary details. Its main limitation is that it is follows
a single process discrete event simulation methodology. This
means that it uses a single event queue for the needs of the
simulation and at any given time, it contains one entry for each
station on the network. Currently, it is on Version 10.
The major beneﬁts are (a) programmability, (b) architec-
tural accuracy, and (c) ﬂexibility.
NetSim’s strengths include:
•
It offers a powerful, user friendly GUI that makes its
use rather simple.
•
Allows data packet ﬂow visualization using its built-in
animator.
•
Users can extract performance analysis metrics in
various levels.
•
Its analysis framework offers various graphical options
and enables intra and inter-protocol performance com-
parison.
Some weaknesses could be identiﬁed:
•
All of the versions are commercial, meaning there is
no free way of usage.
•
It is a single process discrete event simulator.
The graphical interface of Netsim can be found in Figure
8 .
IV.
CUMULATIVE COMPARISON
The simulation comparison is shown in Table I, where
the criteria are presented and whether they are fulﬁlled. The
comparison is based on both general information as well as
properties of the softwares.
The general information that can be found on the upper
section of the table, e.g. supported language & OS, license
type, GUI support and technical properties of the softwares
Figure 8. GUI of Netsim [13]
are compiled under the middle rule, e.g. simulation event type,
scalability and network visualization tool.
All the simulators studied in this paper support tools that
help the visualization of the network. They also allow scenarios
redesign and modiﬁcation through parameters change and can
create trace ﬁles. They offer complete documentation and are
user friendly, easy to use with ns-3 proving to be the most
challenging to learn. The modularity of OMNeT++ is a big
advantage, although it leaves the user with quite a big amount
of work to done because of the lack of protocols offered. When
it comes to communication with other simulators, Riverbed
Modeler supports this feature while Omnet++, ns-3 and Net-
Sim do not. Because of its proprietary nature, it is only natural
that Riverbed can afford to simulate networks of much larger
scale.
On the other hand, ns-3 is open source, OMNeT++ may not
entirely be free but offers academic version for non commercial
use and NetSim offers a cheaper, alternative version for stu-
dents. This means that for these versions, the simulation scale
ability is more limited. Of course, the commercial versions of
the latter two softwares, can support large scale simulations.
ns-3 and OMNeT++ can be deployed in all widely used
17
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

Operating Systems, contrary to Riverbed and NetSim. As
far as GUI support is compared, the graphical environment
offered by all of them are found more than adequate. Of
course, OMNeT++ and NetSim offer vast and powerful GUI
support with many more features and abilities like analysis
framework and graphical options. Riverbed on the other hand,
does provide an excellent GUI but it can be judged quite
complicated and not so user-friendly.
It should be noted that all the simulators are supported by a
great community but, ns-3 being open source means that there
are less maintainers to respond to questions or ﬁx reported bugs
and abnormalities. However, it is extremely widespread and is
being used by so many students, scientists and academics that
the on-line community can help and offer great support for
most issues.
More speciﬁcally, according to [15] a Google Scholar
search of the ns-3 simulator results since 2017 (excluding
patents and citations) yields over 2000 links (with some false
positives). In addition the IEEE digital library lists 145 ns-
3 publications for 2017, and the ACM digital library lists
2579 publications matching the search term ns-3 in 2017.
In addition, there are organized Workshops on ns-3 and the
related proceedings are published in the ACM digital library.
The above facts ensure the important acceptance of ns-3
simulator as network research tool. In addition to ns-3, also
OMNeT++ has an active community which have organized 5
OMNeT++ Community Summits until 2018. As result, if we
compare the above simulators in terms of research community
support seems that ns-3 and OMNeT++ have the most active
research community which organize relative workshops about
the evolution of the simulation softwares. This seems logical
based on the fact that both ns-3 and OMNet++ can be obtained
at no cost.
If we discuss about 5G Networks simulations native sup-
port, only ns-3 simulator supports 5G Networks simulations
and OMNET++, Riverbed, NetSim do not provide native sup-
port for 5G Networks simulations. ns-3 supports 5G Networks
simulations through ‘mmWave Cellular Network Simulator
module’ [16]. This module includes a number of detailed sta-
tistical channel models as well as the ability to incorporate real
measurements or raytracing data. The physical and medium
access control layers are modular and highly customizable.
The module is interfaced with the core network of the ns-3
Long Term Evolution (LTE) module for full-stack simulations
of end-to-end connectivity, and advanced architectural features,
such as dual-connectivity, are also available.
Especially for 5G Networks simulations there are special-
ized simulators, such as NYUSIM [17]. NYUSIM is a novel
channel simulation software, which can be used to generate
realistic temporal and spatial channel responses to support
realistic physical-layer and link-layer simulations and design
for ﬁfth generation (5G) cellular communications. NYUSIM
has been built upon the statistical spatial channel model for
broadband millimeter wave (mmWave) wireless communica-
tion systems.
V.
CONCLUSION AND FUTURE WORK
Network simulation is an effective, low cost and small risk
method. However, it is necessary and this why it is extensively
performed by scientists in all kinds of ﬁelds to validate the
research carried out. Network simulation can prove to be an
essential mechanism on the hands of researchers for the anal-
ysis on network behaviour and evaluation on possible network
design and will remain increasingly important following the
networks’ growing complexity and scale.
This paper contains a general overview of a number of
tools used for standard network simulation, along with a com-
parison between them with respect to various parameters. The
study conﬁrms that picking a suitable, required and efﬁcient
simulator for the speciﬁc job of a research work can be quite
demanding but bears the according results. Each simulator
comes with its advantages and disadvantages and can be useful
or even necessary in different cases and the choice of a ﬁtting
software should be done based on the study motive.
REFERENCES
[1]
Y. Wang, J. Xu, and L. Jiang, “Challenges of system-level simulations
and performance evaluation for 5g wireless networks,” IEEE Access,
vol. 2, 2014, pp. 1553–1561.
[2]
V. Mishra and S. Jangale, “Analysis and comparison of different network
simulators,” International Journal of Application or Innotvation in
Engineering and Management (IJAIEM). Special Issue for International
Technological Conference-2014 2014.
[3]
X. Zhou and H. Tian, “Comparison on network simulation techniques,”
in 2016 17th International Conference on Parallel and Distributed
Computing, Applications and Technologies (PDCAT), Dec 2016, pp.
313–316.
[4]
A. R. Khan, S. M. Bilal, and M. Othman, “A performance comparison
of open source network simulators for wireless networks,” in 2012
IEEE International Conference on Control System, Computing and
Engineering, Nov 2012, pp. 34–38.
[5]
C. E. Perkins, E. M. Royer, S. R. Das, and M. K. Marina, “Performance
comparison of two on-demand routing protocols for ad hoc networks,”
IEEE Personal Communications, vol. 8, no. 1, Feb 2001, pp. 16–28.
[6]
M. Kabir, S. Islam, M. Hossain, and S. Hossain, “Detail comparison of
network simulators,” International Journal of Scientiﬁc and Engineering
Research, vol. 5, no. 10, October 2014, pp. 16–28.
[7]
J. Pan and R. Jain, “A survey of network simulation tools: Current status
and future developments,” Email: jp10@ cse. wustl. edu, vol. 2, no. 4,
2008, p. 45.
[8]
www.nsnam.org, “ns-3 network simulator,” https://www.nsnam.org/,
2019, [Online; retrieved 24-April-2019].
[9]
www.omnetpp.org, “Omnet++ ofﬁcial site,” https://www.omnetpp.org/,
2019, [Online; retrieved 24-April-2019].
[10]
A. Varga and R. Hornig, “An overview of the omnet++ simulation
environment,” in In Proceedings of the 1st international conference
on Simulation tools and techniques for communications, networks and
systems & workshops, p. 60. ICST (Institute for Computer Sciences,
Social-Informatics and Telecommunications Engineering, 2008.
[11]
G. Borboruah and G. Nandi, “A study on large scale network sim-
ulators,” International Journal of Computer Science and Information
Technologies, vol. 5, no. 6, 2014, pp. 7318–7322.
[12]
www.riverbed.com,
“Riverbed
modeler,”
https://www.riverbed.com/gb/products/steelcentral/steelcentral-
riverbed-modeler.html, 2019, [Online; retrieved 24-April-2019].
[13]
www.tetcos.com, “Netsim ofﬁcial developer,” https://www.tetcos.com/,
2018, [Online; accessed 9-August-2018].
[14]
S. Siraj, A. Gupta, and R. Badgujar, “Network simulation tools survey,”
International Journal of Advanced Research in Computer and Commu-
nication Engineering, vol. 1, no. 4, 2012, pp. 199–206.
[15]
www.nsnam.org, “Statistics,” https://www.nsnam.org/about/statistics/,
2018, accessed: 07-December-2018.
[16]
M. Mezzavilla et al., “End-to-end simulation of 5g mmwave networks,”
IEEE Communications Surveys Tutorials, vol. 20, no. 3, thirdquarter
2018, pp. 2237–2263.
[17]
S. Sun, G. R. MacCartney and T. S. Rappaport, ”A novel millimeter-
wave channel simulator and applications for 5G wireless communica-
tions,” 2017 IEEE International Conference on Communications (ICC),
Paris, 2017, pp. 1-7.
18
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-719-1
ICWMC 2019 : The Fifteenth International Conference on Wireless and Mobile Communications

