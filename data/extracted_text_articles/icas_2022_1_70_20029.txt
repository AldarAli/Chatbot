FPGA Frontend for Highly Efficient Automotive LIDAR 
Perception  
 
Abstract— This paper briefly presents the recent progress on 
automotive 
perception 
and 
the 
corresponding 
hardware 
implementation for the emerging application of autonomous 
driving systems. The requirements for an automotive road 
perception algorithm are presented. An FPGA based design for 
creating custom implementation of road perception are discussed 
to form an efficient hardware platform for real-time purpose. A 
special attention is given to determining the efficiency of hardware 
implementation in terms of speed and power consumption. Finally, 
the technical challenges are presented to motivate future research 
and development in this field. 
 
Keywords- Automotive driving; Field Programmable Gate Array 
(FPGA); Light Detection and Ranging (LIDAR); Road perception; 
Artificial Intelligence (AI) 
  
I. INTRODUCTION 
The last decade has witnessed tremendous development of 
autonomous vehicles. These autonomous systems present a 
great potential for improving safety, increasing productivity, 
and minimizing their impact on the environment [1]-[3].  
Light Detecting and Ranging (LIDAR) system plays an 
important role in autonomous vehicle systems and recognized 
as key enabling technology for Advanced Driver-Assisted 
Systems (ADAS) and autonomous driving, as they enable 3D 
mapping of objects. Regularly, more than one LIDAR sensors 
are installed on vehicle for the sense modality of perception, 
mapping, and localization. One major challenge for LIDAR 
system is real-time perception.   
The core competencies of an autonomous vehicle system are 
classified into three categories: perception, planning, and 
control. Figure 1 presents the interactions between these 
competencies and the vehicles interactions with the 
environment. Perception refers to the ability of an autonomous 
system to collect information and extract relevant knowledge 
from the surrounding environment. The real world is a complex 
place for partial or even full autonomy, and the lack of 
predictability and structure poses serious challenges to the 
deployment of self-driving vehicles. The autonomous system 
needs to sense the environment, to determine the exact position 
on the road, and to decide how it should behave in each 
situation. That is why self-driving cars are highly dependent on 
software to bridge the gap between sensor physics and the 
mechanical actuation of the vehicle, e.g., steering and brakes.  
Due to the complexity of perception, there are highly 
challenging requirements and constraints in terms of real-time 
determines. Besides, there are limitations on hardware 
properties, such as size and power consumption. For 
autonomous vehicles, both real-time processing and low power 
consumption are desirable. 
 
Fig. 1 A vehicle system overview, highlighting core competencies. 
 
Software implementations of LIDAR perception for 
embedded applications, cannot satisfy the above constraints. 
Consequently, research has focused on the design of custom 
hardware 
architectures 
for 
object 
detection. 
[4]-[6] 
Reconfigurable hardware platforms, such as Field Programable 
Gate Array (FPGA), have emerged as a very attractive platform 
for implementing architectures for LIDAR perception 
applications. FPGAs offer high flexibility with regards to area, 
power, and performance. They can meet application-specific 
constraints, which is difficult to achieve with other platforms 
such as CPUs and GPUs due to fixed interconnect and high-
power demands of FPGAs. 
Sanaz Asgarifar 
Bosch Car Multimedia 
Braga, Portugal 
Sanaz.asgarifar@pt.bosch.com 
Pedro Barbosa 
Bosch Car Multimedia 
Braga, Portugal 
Pedro.barbosa@pt.bosch.com 
Amir Farzamiyan 
Bosch Car Multimedia 
Braga, Portugal 
Amir.farzamiyan@pt.bosch.com 
 
Marcelo Alves 
Bosch Car Multimedia 
Braga, Portugal 
Marcelo.alves@pt.bosch.com 
 
Alexandre Correia 
Bosch Car Multimedia 
Braga, Portugal 
Alexandre.correia@pt.bosch.com 
 
João C. Ferreira  
INESC TEC,  
Faculty of Engineering, University of 
Porto,  
Porto, Portugal 
jcf@fe.up.pt 
 
40
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-966-9
ICAS 2022 : The Eighteenth International Conference on Autonomic and Autonomous Systems

 
II. METHODOLOGY 
Graphics-Processing Unit (GPU) systems have been popular 
for parallel processing method and implementation of road 
perception algorithms, but still struggle to comply with the 
space and power limitations of vehicles. Conversely, a 
mobile/embedded CPU/GPU system, simply lacks the 
computing power required for computational processing. 
An FPGA can be developed as customized integrated circuit, 
which is able to perform massive parallel processing and data 
analysis on a chip. FPGAs emerged in image processing and 
Deep Learning (DL) due to their incredible benefits of faster 
mathematical computations, and processing operations. 
Additionally, capability of recent frameworks allowed to 
import the work more straightforwardly into an FPGA. 
 
 
 
Fig. 2 FPGA implementation of LIDAR perception. 
 
The methodology to implement the FPGA front-end for 
LIDAR perception consists of the LIDAR data as an input, an 
intelligent algorithm as a processing tool and top-view 
predictions as the main output to evaluate the road perception 
(Figure 2). The algorithm has four steps to process the LIDAR 
data including:  
1. 
Pre-processing which arranged the input data and 
created the tensors that can flow through the layers for 
processing phase. 
2. 
Neural-network processing which do the adaptation of 
Neural Network (NN) algorithm for perception to improve 
computational efficiency and suitability for hardware 
implementation. 
3. 
Evaluation of multiple types of Neural Network in the 
context of hardware and computational energy efficiency. 
4. 
Development, 
implementation 
and 
testing 
of 
reconfigurable hardware architectures exploiting parallelism to 
increase speed and reduce memory requirements. 
Additionally, limited computational resource in an 
embedded system, raise the need of efficient compression 
method. To aim this goal, in this paper the new compression 
algorithm has been design and implemented to compress the 
point-cloud data and minimize the FPGA memory in post 
processing. Results obtained from neural network are projected 
back to targeted views for performance validation. Figure 3 
presents the FPGA implementation of compression algorithm 
for LIDAR point-cloud. 
 
 
Fig. 3 Compression algorithm implementation for LIDAR point-cloud. 
III. RESULTS AND FUTURE WORKS 
The experimental results indicated that the proposed 
hardware architecture implemented on FPGA, could process 
each LIDAR scan in 15-18 millisecond, which is significantly 
faster than convenient hardware implementation and pervious 
works. 
 All convolution layers have been taken several milliseconds 
to complete due to FPGA parallelization. Since LIDAR 
normally scans at 10HZ, this FPGA implementation fulfils the 
requirements of the real-time processing. The results of 
compression algorithm showed significant compress rate of 
point-cloud data, resulting in speed of entire post-processing 
stages. 
Conclusively, this work introduces the framework for 
implementation of highly complex pipelines, such as deep 
learning approach that has the potential to speed-up LIDAR 
perception processing. Evaluations showed that the proposed 
LIDAR processing algorithm could achieve state-of-art 
performance in accuracy and real-time processing. Such a 
system will have far better real-time determinism than a 
software-based 
approach, 
while 
providing 
sufficient 
computational complexity for object detection and road 
perception.  
Regardless of all progresses in hardware implementation of 
LiDAR perception, the FPGA implementation still consumes a 
large amount of on-chip memory. This is the reason that for 
future work, the Spike Neural Network (SNN) can be 
considered as a solution to reduce the on-chip memory usage.  
ACKNOWLEDGMENT 
“This work is supported by European Structural and 
Investment Funds in the FEDER component, through the 
Operational 
Competitiveness 
and 
Internationalization 
Programme (COMPETE 2020) [Project nº 047264; Funding 
Reference: POCI-01-0247-FEDER-047264].” 
REFERENCES 
[1] 
J. Levinson et al., Towards fully autonomous driving: Systems and 
algorithms, IEEE Intelligent Vehicles Symposium, Proceedings, 2011. 
[2] 
R. Zhang, K. Spieser, E. Frazzoli, and M. Pavone, Models, algorithms, 
and evaluation for autonomous mobility-on-demand systems, in 
Proceedings of the American Control Conference, 2015. 
[3] 
S. D. Pendleton et al., Perception, planning, control, and coordination 
for autonomous vehicles, Machines, 2017.  
[4] 
Y. Lyu, L. Bai, and X. Huang, Real-Time Road Segmentation Using 
LiDAR Data Processing on an FPGA, in Proceedings - IEEE 
International Symposium on Circuits and Systems, 2018. 
[5] 
J. P. Mitchell, C. D. Schuman, and T. E. Potok, A small, low-cost event-
driven architecture for spiking neural networks on FPGAs, International 
Conference on Neuromorphic Systems 2020, 2020, pp. 1–4. 
41
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-966-9
ICAS 2022 : The Eighteenth International Conference on Autonomic and Autonomous Systems

[6] 
y. lyu, l. bai, and x. huang, chipnet: real-time lidar processing for 
drivable region segmentation on an FPGA, IEEE trans. circuits syst. i, 
vol. 66, no. 5, pp. 1769–1779, May 2019. 
 
 
 
 
 
 
42
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-966-9
ICAS 2022 : The Eighteenth International Conference on Autonomic and Autonomous Systems

