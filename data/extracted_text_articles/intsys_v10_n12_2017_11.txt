Design Pattern-based Modeling of Collaborative 
Service Chains 
 
Maik Herfurth 
Hilti Befestigungstechnik AG 
Buchs SG, Switzerland 
e-mail: maik.herfurth@hilti.com 
Thomas Schuster 
Pforzheim University of Applied Sciences  
Pforzheim, Germany 
e-mail: thomas.schuster@hs-pforzheim.de
 
 
Abstract—Increased market competition between service 
providers has promoted differentiation, currently often based 
on offerings of so-called hybrid services. Hybrid services are 
complex since service providers and service consumers collabo-
rate and interact in network structures – also called service 
chains. Service chains also include collaborative, cross-company 
service processes amongst different participants. The effective-
ness of these processes constitutes a major competitive factor 
since they possess potential to increase efficiency and reduce 
cost. Along with hybrid services, e-procurement becomes stra-
tegically important. While basic service processes are typically 
company internal, service chains include cross-company admin-
istration, especially for service e-procurement. If enough do-
main specific data is available, information systems can support 
service operations and e-procurement in an integrated mode. 
Hence, a precise description, modeling and analysis of service 
processes is required for the implementation of process-oriented 
information systems is required to unlock these potentials and 
optimize network collaboration. To improve the transition from 
planning to implementation of collaborative service chains with 
incorporated e-procurement, we suggest an integrated and for-
malized modeling approach. Our modeling approach is based 
on Petri nets and includes a pattern-based tactic to develop busi-
ness process models. To improve this collaboration systemati-
cally we distinguish hierarchically between service phase pat-
terns and service module patterns. Finally, our approach will be 
demonstrated by case studies taken from the domain of indus-
trial service procurement.  
Keywords—service processes; service objects; service e-
procurement; hybrid services; integrated modeling approach; 
modeling language; design patterns; service phase pattern; service 
module pattern 
I. 
INTRODUCTION 
This article is an extended version of the recently pub-
lished paper "Integrated Modeling Approach iServMod for 
Modeling, Analysis and Execution of Collaborative Service 
Processes in Service Chains" [1]. The service sector is a fast-
growing sector in all industrial nations and therefore, it has 
gained significant importance for all national economies [2]. 
Today, the strategic impact of services outruns products. 
With shifting the towards services and moving away from a 
product centric view, a new paradigm known as service dom-
inant logic is postulated [3]. Current surveys highlight that 
services increasingly create value offerings to customers and 
thus constitute an integral element of many products [4].  
This includes industrial services as one example of hybrid 
services. Industrial services contribute a significant share of 
companies total spending and ensure required operational 
levels and availability of systems and facilities. Therefore, in-
dustrial service e-procurement is gaining importance and an 
integrated perspective of goods and services is required 
[5],[6]. New business models are arising with cross-company 
network structures where service providers and service con-
sumers act in service networks. These cross-company value 
chains with incorporated flows of goods, cash and infor-
mation are called service chains [7]-[9]. Progressively com-
panies outsource different areas and reduce the degree of 
company-internal value-add. An important example of ser-
vice chains are industrial maintenance services. They are typ-
ically delivered through third-party service providers which 
guarantee availability and reliability of industrial facilities 
and infrastructures.  
With more services sourced externally, the meaning of 
service procurement is increasing exponentially. For the pro-
curement of industrial services, several service providers and 
service consumers must interact in multilateral service 
chains. Capital goods producers, goods and service consum-
ers, as well as specialized service providers interact to pro-
duce, operate and administrate these hybrid services. Hence, 
the ability to integrate and share product and service offerings 
of external business partners turns out to be a major compet-
itive factor. In consequence, service providers take focus on 
supporting consumer processes or even on offering to provide 
larger parts of value creation processes. Since service con-
sumers request different service types from different service 
providers, new types of flexible collaborations are emerging.  
In this case, service e-procurement constitutes an im-
portant segment of e-business activities. It compasses exten-
sive use of Information and Communication Technology 
(ICT) to improve productivity and business processes. Elec-
tronic processes support business interactions reducing inter-
faces, process and throughput times and enhance coordina-
tion of activities, procedures and integration of resources. 
117
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Additionally, e-business standards can help to support a 
shared process understanding and increase process transpar-
ency amongst business partners by harmonization and struc-
turing of exchanged business data. As follows, e-business 
standards facilitate enhanced interoperability.  
Electronic business processes of service chains are in fo-
cus throughout planning (modeling level) and operation (ex-
ecution level). A business process, which defines the control 
flows of service procurement, is called service process. A 
process object, which represents flow of business data is 
called service object. Within the network structures of service 
chains, the complexity of service processes is raising. New 
requirements on service-oriented procurement result from the 
service definition. Characteristics that add further require-
ments are immateriality and integrality. Both determine the 
specific characteristics of transactions between service pro-
viders and service consumers. The use of modern information 
architectures such as service-oriented architecture (SOA) for 
the electronic service processes and service e-procurement is 
promising improvements. Nevertheless, there is still a lack of 
a precise modeling, analysis and benchmarking approach for 
these service processes. The efficiency and performance of 
service processes still has to be improved and cost has to be 
reduced. Due to the increasing competition and cost pressure 
in the domain of service procurement, service processes lev-
erage the improvement potential and come to the fore of com-
panies. 
This article is focusing on the development of a system-
atic and structured approach for an integrated analysis and 
modeling of service processes in service chains. The ap-
proach is based on patterns leading to a harmonization and 
integration of service processes. In consequence, this lever-
ages transparency and structure of service chains. We suggest 
a formalized modeling method for collaborative service pro-
cesses in service chains for further improvement. We devel-
oped two new patterns, namely, Service Phase Patterns and 
Service Module Patterns. Their application is presented 
based on examples and their advantages are outlined. Our 
concentration within that is on service e-procurement. The 
overall research approach is based and evaluated on case 
studies of a research and standardization project [10].  
The remainder of this article is structured as follows: in 
Section II, the current challenges of service procurement are 
outlined and the pattern-based modeling approach of inte-
grated Service Modeling (iServMod) is motivated. An over-
view of the state of the art in service modeling is shown in 
Section III. In Section IV, the modeling approach of 
iServMod is presented. Design patterns are proposed and we 
introduce Petri nets as a formal modeling language. In Sec-
tion V, the modeling of service objects is demonstrated and 
Section VI introduces two different design pattern types for 
service processes. In Section VII, we present the Service 
Phase Pattern (SPP) and continue with the pattern of Service 
Module Pattern (SMP) in Section VIII. The modeling of Ser-
vice nets eSN is shown in Section IX, and in Section X, the 
modeling of high-level Service nets hSN is described in de-
tail. Based on the modeling of eSN and hSN, Section XI in-
troduces the Evolutionary Procedure Model (EPM) for the 
pattern-based integrated modeling approach. Finally, the use 
case driven application of iServMod in Section XII and final 
remarks, findings and an outlook on future work in Section 
XIII conclude this article. 
II. 
CHALLENGES AND MOTIVATION 
Service chain collaborations achieve economies of scale, 
economies of scope and lower transaction costs. These col-
laborations are confronted with several challenges: missing 
harmonization, integration and standardization of cross-com-
pany service processes. Therefore, the creation of new col-
laborations often suffers from low quality of business inter-
actions caused by integration and transaction costs, manual 
exception handling, offline communication (media breaks) 
and long lead times resulting in less transparency and low 
quality of processes and data. Today's service procurement 
processes of small and medium-sized companies are mostly 
defined by heterogeneous and product-oriented business pro-
cesses [11]. Also, a high amount of manual process tasks and 
therefore, missing automation can be observed [12]. 
In contrast to products, services typically require personal 
interaction and are more difficult to describe and to measure. 
Therefore, the procurement of services turns out to be partic-
ularly complex due to (1) process descriptions, (2) data de-
scriptions, (3) process iterations, (4) unknown result of a ser-
vice after a service request, and (5) individuality of services. 
Cross-company process structures are heterogeneous and the 
process and data flow design are influencing each other: an 
information asymmetry results out of different proprietary 
data formats and inconsistent data. Thus, the electronic pro-
curement of services has still not reached a high level of ma-
turity [13]. Inefficiencies result from internal and especially 
cross-company handling und coordination of transactions and 
non-harmonized and non-integrated electronic service pro-
cesses. Service processes must support procedural rules and 
service logic of required interactions as well as communica-
tion between service providers and service consumers [5].  
In turn industrial service e-procurement is still a source of 
high costs because underlying service processes are error 
prone. Errors and failures occur foremost through the absence 
of coherent e-business standards and reference frameworks. 
Together, both could offer meta-models for processes, stand-
ardized data objects and interaction patterns for the service 
logic. Summarized, we observe the following challenges: 
 
complex collaborative internal and cross-company 
service process models lead to high opacity, itera-
tions and adjustment costs 
118
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
heterogeneous service processes, long running pro-
cesses and use of different media lead to error-prone 
process execution 
 
heterogeneous data structures, different data formats 
and descriptions lead to non-integration and non-
harmonization of data 
 
heterogeneous Information Technology (IT) land-
scapes with different interfaces lead to missing inte-
gration 
 
low maturity level of service process automation 
lead to long throughput times, redundancy of tasks 
and source of errors 
As stated above, the aforementioned shortcomings result 
from missing standards in document exchange and lack of in-
formation harmonization. In addition, service processes for 
administrative order processing in service chains did not 
draw much attention in the past. However, especially these 
processes require many resources and incorporate long pro-
cess and throughput times. Existing business process model-
ing methods for modeling, analysis and implementation of 
service processes aren`t mature enough and only cover partly 
the domain-specific needs for service e-procurement. Thus, 
new methods for the harmonization, integration and standard-
ization have to be established and need to include: 
 
best practice based definition for improved under-
standing of service processes and data 
 
harmonization and integration of service processes 
and service data 
 
integration of information systems with support of 
these service processes and service data 
These challenges can be addressed by a formal modeling 
approach based on domain-oriented design patterns. In this 
article, we present a new domain-oriented analysis and mod-
eling approach based on the formal modeling language Petri 
nets. This Petri net based modeling language incorporates de-
sign patterns that build upon best practice knowledge as well 
as an integrated modeling approach for process and data 
structures. Design patterns provide an immediate benefit (1) 
by reducing design and integration efforts, (2) by encourag-
ing best practices, (3) by assisting in analysis, (4) by exposing 
inefficiencies, (5) by removing redundancies, (6) by consoli-
dating interfaces and (7) by encouraging modularity and 
transparent substitution [14]. 
A. Research objectives 
Within this article, we follow paradigms defined in design 
science. Thus, knowledge can be gained by creation and eval-
uation of artifacts in the form of models, methods and sys-
tems. In contrast to empirical research, the goal is not neces-
sarily to evaluate the validity of research results with respect 
to their truth, but rather the usefulness of the built artifacts as 
a tool to solve certain problems [15]. In this spirit, we will 
impose requirements driven by analysis of service and ser-
vice e-procurement literature, interviews with domain ex-
perts as wells as hypotheses. The requirements analysis will 
disclose the decisions for the design concept of our planning 
approach. In contrast to an approach driven by theory, the ba-
sis for the design has not necessarily to be formulated as hy-
pothesis. Hence, the planning method will be constructed, im-
plemented and tested in a real environment. 
In this article, we propose a model-based approach for the 
following reasons: information and knowledge must be cap-
tured before it can be part of sound analysis and utilization. 
Informal, semi-formal as well as formal models offer an ab-
stract possibility to represent information and knowledge. 
Furthermore, graphical representations such as class dia-
grams, data-flow diagrams, state-transition diagrams or Petri 
nets ease understanding and exchange between stakeholders, 
both for the expert and the non-expert. Overall, this facilitates 
the communication between persons of different domains. In 
addition, formal languages allow description of certain phe-
nomenon uniquely and precisely, but with a high level of ab-
straction. In addition, they can be evaluated and verified or 
be used to automate certain tasks. The goal of this article is 
the definition of a modeling method, which improves the 
quality of service chains by a domain-specific modeling ap-
proach, linked collaborative, cross-company service pro-
cesses, hierarchical modeling structures, and precise model-
ing of processes and data. 
B. Planning and modeling requirements 
Due to these challenges, the modeling of service pro-
cesses seeks for an adequate and precise integrated modeling 
approach as well as a precise system design for information 
systems. So far, no adequate modeling approach based on a 
modeling language that focusses the domain-specific context 
of service e-procurement is existing. Furthermore, a model-
ing approach for system design should be based on a formal 
modeling language to enable the following advantages [16]: 
 
adequate concept for the representation of domain-
specific description of data and control flow, 
 
formal semantics of electronic business processes 
due to a formalized syntax, 
 
uniqueness of syntax and graphical descriptions for 
an easy understanding, 
 
expressiveness for a precise system modeling, 
 
mathematical foundation for the evaluation and 
sound proof of system design, 
 
analysis of information systems for properties like 
deadlocks, performance or the correctness of infor-
mation systems, 
 
interoperability and vendor independence of the 
modeling language to support different modeling 
and analysis tools, and consideration of 
 
static and dynamic elements in service processes to 
describe the control flow and data flow. 
119
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

III. 
STATE OF THE ART 
Scientific literature reveals several approaches for service 
procurement with different emphasis and granularity. 
FlexNet Architect [17] offers reusable modules for the sce-
nario-based modeling of hybrid value creation. For planning 
and modeling of hybrid value creation networks, the cooper-
ation definition, actors, areas and information flows can be 
modeled. The HyproDesign [18] modeling language was de-
veloped for modeling customer-specific configurations and 
calculations of hybrid bundles of services and is based on a 
meta-model to describe variants and configurations. Single 
modules are described as semantic models via Entity Rela-
tionship diagrams [19]. Winkelmann and Luczak [20] pro-
pose a Petri net-based approach for the cooperative supply of 
industrial services by using colored Petri nets (CPN) [21]. 
Becker and Neumann [22] define central components like 
processes and activities, technical objects, contacts and ser-
vice offers based on data models for the order transaction of 
technical services. Che et al. [23] are using XML nets [24] for 
modeling, execution and monitoring of cross-company busi-
ness processes. Mevius and Pibernik [25] propose XML nets 
for the support of business processes for the Supply Chain 
Process Management (SCPM). Each of these approaches 
considers certain aspects of the description of services and 
service processes. However, none of them represents a com-
prehensive model for the description of service objects and 
service processes for industrial services based on a formal-
ized approach. For the modeling of collaborative service pro-
cesses and service objects in service transactions of service 
e-procurement, none of these approaches takes domain-spe-
cific characteristics of service processes for service e-pro-
curement into account.  
IV. 
INTEGRATED MODELING APPROACH FOR SERVICE 
MODELING ISERVMOD 
To meet the challenges and requirements described be-
fore, an integrated modeling approach based on a formal 
modeling language considering the domain-specific context 
of service procurement will be presented in this article. The 
integrated modeling approach integrated Service Modeling 
(iServMod) is based on Petri nets [26]. We use domain-spe-
cific extensions to Petri nets which will serve as a basis for a 
detailed and precise modeling of service processes (design 
time) to integrate service processes on the execution level 
(run time). In a first step, the modeling of service objects as 
static components of data schemas is presented. Service nets 
as dynamic components of business processes are developed: 
Service nets (eSN) are defined on basis of place/transition 
nets. In a second step, high-level service nets (hSN) based on 
XML nets are developed. This formal modeling approach 
will promote the following advantages: 
 
increased transparency in service chains: service 
processes lack transparency due to individual inter-
nal service processes of service providers and ser-
vice providers. 
 
precise modeling of collaborative service processes 
and data flow: the precise modeling of service pro-
cesses and service objects serves as a basis for high 
quality documentation and analysis. With an ade-
quate modeling approach, internal service processes 
can be modeled separately and put together in ser-
vice process models. 
 
analysis of service processes: application of analysis 
methods for the quantitative and qualitative evalua-
tion of service process models serve as a basis for 
benchmarking. 
 
integration of domain-specific context: integration 
of service e-procurement context for its integration 
into information systems.  
 
support of modeling and execution layers: the mod-
eling and the execution of service processes rounds 
up the comprehensive analysis of service process 
models. 
Such a modeling approach results in improved efficiency 
(performance) and productivity of the service processes due 
to (1) the reduction of process costs, (2) reduction of process 
times, (3) reduction of process throughput time, (4) the im-
provement of process quantity, (5) improvement of process 
transparency, and (6) the increase of process flexibility. 
A. Modeling concepts 
Based on modeling concepts, service processes and cor-
responding service objects can gradually be modeled in a top-
down approach – thus in detail and on a higher level of ab-
straction. This allows stepwise transformation of service pro-
cesses into different formalization stages and enables hierar-
chical scaling and modularization. For the modeling of dif-
ferent formalized service processes, the screen model [27] 
serves as a modeling concept for Petri nets (see Figure 1).  
 
formal modeling 
level
execution level
semi-formal 
modeling level
computer-suported 
tools (editor)
semi-formal graphical 
notation
computer-suported 
tools (editor)
semi-formal graphical 
notation
net editor
Service nets (eSN)
net editor
Service nets (eSN)
transformation
analysis and 
simulation tools
high-level Service nets 
(hSN)
analysis and 
simulation tools
high-level Service nets 
(hSN)
specification
workflow
management system
hSN and WS-BPEL
(workflow execution 
languages)
workflow
management system
hSN and WS-BPEL
(workflow execution 
languages)
workflow engine
high-level Service nets 
(hSN)
workflow engine
high-level Service nets 
(hSN)
extension
generation and 
transformation
syntactical distance
 
Figure 1.  Screen model for gradual transformation of abstraction levels 
120
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

This modeling concept supports four different modeling 
language types, beginning with informal modeling languages 
up to programming modeling language types for an auto-
mated execution (such as XML nets [24]). The screen model 
defines a gradual conversion of different formalization level 
of Petri net variants. Therefore, modeling languages used in 
our approach can be classified into four different groups: 
 
application-oriented, informal modeling languages 
support the documentation and visualization of busi-
ness processes. Petri nets can be used to describe the 
implicit domain knowledge. The process models are 
described colloquially. 
 
application-neutral, semi-formal modeling lan-
guages provide more structure and a higher abstrac-
tion level due to a partial formalization of the busi-
ness process models. Petri nets can be used to de-
scribe more detailed process models. 
 
formal, platform-independent modeling languages 
enable to model precise models by their power of 
description logic. Process models can be analyzed 
for the validation and plausibility checks. High-
level Petri nets with individual tokens enable a pre-
cise and individual description of process and data 
concepts. 
 
machine-readable programming languages support 
the automated execution of business processes on 
the execution level. Service processes with inte-
grated choreography and orchestration of web ser-
vices can be automated. Web Service nets as exten-
sion of XML nets can be used and be transformed 
into executable code in WS-BPEL to call web ser-
vices [28],[29]. 
The hierarchical and modular modeling of service pro-
cesses is supported by the layer model [28]. The layer model 
supports the modeling of service processes on four different 
abstraction levels. In addition, modelers are guided from spe-
cific process phases to detailed service process descriptions 
within a top-down approach to describe a coordinated reali-
zation of service processes on the execution level. Thus, the 
overall structure of service processes will be improved by the 
hierarchical modeling layers. Software architectures based on 
the concept of service-oriented architectures may also be de-
veloped by means of such a hierarchical structure. 
Service processes can be gradually refined. On a higher 
and abstract modeling level, a choreography is composed by 
several service process phases. The choreography resides on 
the highest level of abstraction and defines the logic of ser-
vice processes. It is data driven and determines the order of 
lower level process phases. While the capsulated service pro-
cesses are modeled by process phases on higher abstraction 
levels, distributed capsulated service processes are repre-
sented by process modules on a detailed level. Process mod-
ules incorporate complex electronic processes. These pro-
cesses are implemented based on web service interfaces and 
thus can be orchestrated. Overall, from choreography to elec-
tronic processes on the lowest modeling layer, the logic con-
sequence is the implementation of a service-oriented archi-
tecture. While process phases consist of process modules, 
they are linked by internal and cross-company process inter-
faces – which can be implemented by web services. Process 
modules encapsulate service processes and partial service 
processes.  
Within service chains, a choreography of process phases 
serves as a link between distinct orchestrations of process 
modules and service processes. A combination of these coor-
dination patterns process phases and process modules leads 
to (1) a choreography of process phases driven by the data 
exchange and (2) to the orchestration of their internal service 
processes. This results in a global, cross-company service 
process. In the domain of service e-procurement, service pro-
viders and service consumers collaborate for the execution of 
a procurement transaction. The choreography is being used 
to define the overall service process out of several orches-
trated service processes with supervision of different process 
participants. Within our approach, the interaction of partners 
based on exchanged data can be pre-described and the order 
of is pre-defined. This results in valid orders of exchanged 
data. This approach defines the basis for agreements and con-
tracts to define the necessary process interfaces in complex 
Business-to-Business (B2B) scenarios for the domain of ser-
vice e-procurement.  
B. Petri Net based modeling of service processes 
Petri nets are a formal modeling language to describe, an-
alyze, simulate and execute distributed, discrete systems. A 
Petri net is a based on a mathematical definition. Petri nets 
are bipartite graphs (consisting of the node types place and 
transition). They allow to capture static and dynamic charac-
teristics of systems (by the concept of tokens). With different 
extensions to basic Petri nets, the modeling of different levels 
of formalization (precision) can also be accomplished. As a 
result, Petri nets may even be used for application-oriented, 
informal and semi-formal modeling. Besides the modeling of 
static and dynamic aspects, Petri nets offer to model limited 
capacities of places and anonymous tokens for modeling pro-
cess objects.  
With Petri nets allow to model typical process patterns 
such as sequence, iteration, alternative, concurrency, syn-
chronization and further complex patterns as well as their 
combination. Dynamic properties like liveness, reachability, 
and soundness can be formally analyzed [30]. Petri nets are 
graphically represented by tokens (process objects), places 
(conditions), transitions (nodes for events) and directed arcs 
(arrows). Places are containers for tokens and pre- or post-
conditions for transitions. Places represent local conditions 
and are static process components. Transitions are dynamic 
121
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

components and represent local state transitions [31]. For a 
formal, platform-independent and machine-readable model-
ing approach and an automated execution of business pro-
cesses (execution level), high-level Petri nets allow a precise 
description of individualized tokens as well as the definition 
and formalization of further domain-specific process ele-
ments [32]. 
C. Design pattern 
A pattern is a discernible regularity and the elements of a 
pattern repeat in a predictable manner. Patterns are an ab-
straction of a concrete form and define a static structure, 
which was recognized due to its identical re-appearing [33]. 
Thus, patterns represent best practice solutions to common 
problems and are a result of experiences and behavioral ob-
servation. They represent identical modes of thought, design 
fashions, behaviors or courses of action, which can be re-
peated and reproduced. Patterns can be observed in a lot of 
domains, maybe at first recognized in the domain of architec-
ture. Software design patterns are introduced in the domain 
of software engineering. They are a general solution to solve 
a problem in programming. A design pattern provides a reus-
able architectural outline that may speed up the development 
of many computer programs [34]. It is considered as a recur-
rent solution template for software architecture and software 
development [35].  
Design patterns [36] represent solutions to common de-
sign problems in a given context and improve software qual-
ity substantially. This can also help to reduce development 
costs. Creational patterns are used for the creation of objects 
independent of concrete implementation. Structural patterns 
support the design of software by providing templates for re-
lations between classes. Behavioral patterns model the com-
plex behavior of software and are used to increase flexibility. 
Nowadays, design patterns are widely used since they capture 
and promote best practices in software design like patterns 
for software engineering from Gamma et al. [34] and patterns 
for the enterprise integration scenarios of software applica-
tions from Hohpe and Woolf [37].  
Business process design patterns describe business pro-
cess models in a certain domain being harmonized with best 
practices. These patterns are also based on empirical 
knowledge how process activities should be executed. Busi-
ness process design patterns are formalizing common struc-
tures of activities of process and data flows [38]. They are 
characterized by situations in courses of business and prob-
lems of the realization of modeling languages and implemen-
tation solutions [34]. Barros et al. [39] define bilateral and 
multilateral service interaction patterns, which allow emerg-
ing mechanisms such as choreography and orchestration to 
be benchmarked. Domain-oriented design patterns offer a 
flexible architecture with clear boundaries in terms of well-
defined and highly encapsulated parts being aligned with the 
natural constraints of the considered domain [40].  
D. Petri net based process patterns 
As a well-established modeling language, Petri nets ena-
ble an integrated modeling of process and data structures. Ad-
ditionally, analysis of software-based execution of business 
processes can easily be implemented with Petri nets. Van der 
Aalst and ter Hofstede [41] define fundamental Workflow 
patterns based on Petri nets to formalize requirements of 
workflow management and information systems. These pat-
terns are further distinguished into exception handling pat-
terns, control flow patterns, data flow patterns and resource 
patterns. Further existing examples for Petri net process pat-
terns are TimeNET [42], a software tool to model, analyze and 
control manufacturing systems based on colored Petri nets, 
EXSPECT [43], a repository of tool for standardized business 
processes in logistics and production or CIMOSA [44], the 
modeling and analysis of cross-company value chains. To 
formally model supply chains as business processes with an 
integrated sense and respond capability, Liu et al. [45] are us-
ing Petri nets to define basic patterns of supply chains. Schus-
ter [33] proposes resource assignment patterns and defines 
higher-level resource nets for improved support of these pat-
terns. 
V. 
MODELING OF SERVICE OBJECTS 
Service objects describe object-oriented components, 
which are being handled within service processes. Service 
objects literally are data objects, which describe central ser-
vice master data and transaction data. These data either char-
acterizes a service consumer or service provider, materials, 
business documents, a service specification, a service order, 
a service invoice or any other service-relevant document 
needed for service transactions of service e-procurement. 
Hence, service objects represent input, intermediate and out-
put objects of service processes. They convey economically 
relevant data, which is transformed, created or simply needed 
as execution support in electronic service processes (also 
known as service workflows).  
As graphical modeling representation, service objects can 
be modeled with the XML schema model (XSM) [24]. XSM 
can be utilized as modeling construct to describe object struc-
tures in XML nets. XSM serves as a formal object description 
method to describe complex object structures in conjunction 
with organizational processes. Data structures in XML nets 
are associated with places to integrate them in the process 
flow. In this fashion, places combine structured service ob-
jects with a common schema (typification of places). The 
modeling constructs of XML schema models are element 
types represented by type classes and dependencies repre-
sented by association types. As an example, the service object 
industrial service description is shown in Figure 2. The ex-
ample reveals a complex data structure, which can be applied 
in XML nets to describe typical objects in industrial service 
processes. 
122
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

SD-ID[1]
industrial service description
conditions
industrial service
SR-ID[1]
SP-ID[1]
service consumer
S-ID[1]
service position
SP-ID[1]
external factor
EF-ID[1]
classification system
system name=eCl@ss
system version=7.1
classification attribute
M-ID[1]
classification
C-ID[1]
*
*
*
service provider
SP-ID[1]
SR-SI
SP-SI
SP-SI
C-S
material position
MP-ID[1]
*
*
 
Figure 2.  Service object industrial service description 
 
VI. 
SERVICE PROCESS DESIGN PATTERNS 
In the domain of service procurement, service providers 
and service consumers collaborate in a concrete instance of a 
service procurement process model. An instance of a service 
process model again is defined as choreography of specific 
service phases and comprises internal and cross-company 
service processes and service modules. The order of ex-
changed messages is predefined. Choreography is used to de-
fine a cross-company service process out of several inde-
pendently orchestrated service processes (see Figure 3). The 
interaction between several partners for the procurement of 
services based on the exchanged data is described [46]. Only 
valid orders of data between partners may be defined. 
123
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Based on our review of scientific literature [47] and em-
pirical case studies [49], we derive new patterns for service 
e-procurement, which represent best practice of service pro-
curement processes. We introduce the design patterns Service 
Phase Patterns (SPP) and Service Module Patterns (SMP) 
which support the development of software architectures 
based on service-oriented architecture. These patterns define 
hierarchic structures and provide a structured concept for the 
modeling and implementation phase of service procurement 
process models. SPP and SMP ensure and precisely describe 
the order of message exchange and interaction in bilateral and 
multilateral service chains and constitute required process in-
terfaces.  
Service processes between service providers and service 
consumers are characterized by highly collaborative service 
processes. The collaboration is defined by specific process 
and data flows based on specific process interfaces. It can be 
observed that typical recurrent service procurement process 
models are characterized by a specific order of data flow and 
by specific service procurement types. These recurrent orders 
of process and data flow defining service procurement types 
can be described by patterns. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
choreography of service phases
orchestration of service modules
top down approach
level E0
level E1
level E2
level E0
service phase
web Service
web Service
level E3
service
module
 
Figure 3.  Choreography of service phases and orchestration of service 
modules on different abstraction levels 
A sequence of SPP includes data flow, complex service 
processes and web services. SPP consist of SMP and are 
linked by internal and cross-company process interfaces. The 
choreography of SPP serves as a connector between orches-
trations of SMP and their internal service processes. A con-
crete sequence of SMP is pre-defined. The combination of 
SPP and SMP results into global, cross-company service pro-
cesses, which define the interaction of internal service pro-
cesses accordantly. The pattern-based application using SPP 
and SMP leads to a top-down approach from specific process 
phases down to detailed service process descriptions, exe-
cuted by web services. The pattern-based approach enables a 
coordinated realization of service processes in information 
systems at the execution level. In a first modeling and de-
scription approach of service e-procurement process descrip-
tions, we use Petri nets as modeling language to describe do-
main-specific service phase patterns and service module pat-
terns. Based on this definition, we further develop these pat-
terns based on XML nets [49], a high-level Petri net variant. 
VII. SERVICE PHASE PATTERN (SPP) FOR THE 
CHOREOGRAPHY OF PROCESS FLOW AND DATA FLOW 
The best practice for procurement of services is based on 
service procurement types. Service procurement types are 
characterized by a specific order of service process phases 
and a specific data flow to represent and manage cross-com-
pany interaction. A service procurement type pre-defines a 
service process model, which represents a specific process 
flow occurrence for service procurement. The following ser-
vice procurement types can be defined: 
 
A planned need of a service is required and a frame 
contract doesn’t exist. 
 
A non-planned need of service is required and a 
frame contract doesn’t exist. 
 
A planned need of a service is required and a frame 
contract exists. 
 
A non-planned need of service is required and a 
frame contract exists. 
Based on the identified procurement types, we define a 
new pattern. Service Phase Pattern (SPP) are further intro-
duced and described, the modeling support is presented, a 
definition is given and the composition and syntactical com-
patibility definition and as well as an example provided.  
A. Pattern description 
A standard pattern-based formal modeling approach 
based on best practice for service procurement has not been 
provided yet. Recurring service process phases as well as the 
validation of the correct order of service processes and ser-
vice data for service process phases are not supported. The 
pattern offers the description of service procurement types by 
a choreography of service phases based on data flow. The 
valid composition of service process phases is ensured by the 
syntactical compatibility. The logic of process flow instances 
is determined as well. SPP are characterized by capsulated 
service procurement processes on a higher abstraction level. 
B. Modeling support 
This pattern can be modeled by Petri nets and high-level 
Petri nets and can be integrated into Petri net-based and high-
level Petri net-based service processes. To support the pat-
tern-based modeling approach, a domain-specific modeling 
extension for service process phases is necessary to support 
modelers in the design phase. 
C. Service Phase Pattern definition 
SPP are transition-bounded service processes and are rep-
resented in a Petri net as a single transition, which can be ex-
124
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

tended to sub nets. Service places are defined by a set of ser-
vice object-specific places, which are classified into service 
object places SO, static and dynamic service interface places 
SI and service document places SD (see Figure 4).  
 
service object place
service document place
static service interface 
place
dynamic service 
interface place
 
Figure 4.  Service object specified places SO, SD and SI 
SPP represent a self-contained set of cross-company col-
laborative service processes. SPP are connected by cross 
company interfaces defined by service object-specific inter-
face places SI and SD. SPP are represented graphically by a 
rectangle, which includes the service phase name (see Figure 
5). 
 
 
Figure 5.  SPP modeled as Petri net 
Domain-specific concepts for a formal modeling ap-
proach of service processes in the context of service e-pro-
curement are also formalized based on high-level Petri nets. 
The transfer of the presented formalized concepts further en-
ables communication and information context. SPP are fur-
ther developed into formalized patterns based on high-level 
Petri nets with individualized and distinguishable tokens rep-
resenting the service e-procurement-specific data transfer in 
information systems. Specific interfaces in collaborative and 
cross-company service processes represented by service pro-
cess phases are identified, formalized and defined as patterns 
based on high-level Petri nets. The set of service object-spe-
cific places SPS are typified as object containers for service 
processes and defined as a coarsened XML net. SPS represent 
the complex data flow based on XML service objects to de-
fine the data and document exchange in collaborative cross-
company service processes. The set of typified service object-
specific places SPS is further distinguished into the set of ser-
vice object places SSO, service interface places SSI and ser-
vice document places SSD. The domain specific stereo types 
of SPP are proposed. SPP based on XML nets represent 
coarsened structures of capsulated service processes and 
SMP. SPP are defined based on specific, typified input and 
output places and also represent process patterns. SPP are de-
fined based on the process and data flow of collaborative ser-
vice e-procurement processes and consider the specific 
phases.  
D. Composition and syntactical compatibility 
In case of a composition of two service phases 𝑡𝑠𝑝𝑎
𝑖
 and 
𝑡𝑠𝑝𝑏
𝑖
, input and output places are melted. The set of TSP is 
defined as single transitions of transition bounded sub XML 
nets XN'=(S',T',F') and service process modules 𝑡𝑆𝑀
𝑖
 ∈ 𝑇𝑆𝑀. 
The syntactical compatibility is a requirement for the compo-
sition of SPP. The syntactical compatibility postulates that 
each interface of SPP is an output place 𝑆𝑆𝑃
𝑂𝑈𝑇 of a SPP 𝑡𝑠𝑝𝑖
𝑖  
and an input place 𝑆𝑆𝑃
𝐼𝑁 of a SPP 𝑡𝑠𝑝𝑗
𝑖
. Syntactically compati-
ble SPP do not necessary have completely overlapped inter-
faces. While the interfaces of two SMP during a composition 
are melted, the common non-empty subset of interfaces is 
modeled. A mandatory condition for the syntactical compat-
ibility is the partly overlapping of interfaces. The partly over-
lapping of interfaces is also a sufficient condition for SPP. 
E. Example 
Based on a specific service procurement type, SPP can be 
configured to choreograph the data flow and process flow 
(see Figure 6). 
 
 
Figure 6.  SPP example Accounting AC modeled as an XML net 
Figure 7 shows the example of the pattern of the service phase 
Accounting AC. SPP are formally defined as the set TSP 
based on single transitions with dedicated service object-
specific places. The sets of input places 𝑆𝑆𝑂
𝐼𝑁 and output places 
𝑆𝑆𝑂
𝑂𝑈𝑇 are assigned and consist of the sets of service object 
places SSO, service interface places SSI and service 
document places SSD. Each service phase 𝑡𝑠𝑝𝑗
𝑖
 is defined by 
its internal structure, which enables the composition of 
service phases. 
 <phase>
service phase 
pattern
 
AC
invoice
credit note
comfirmation 
of payment
partial 
order
acceptance 
protocol
order
bill of 
quantities
frame contract
service 
specifications
125
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
Figure 7.  Service procurement type as choreography of SPP modeled as Petri net 
F. Advantages of SPP 
SPP enable a pre-defined data flow. The order of ex-
changed data is prescribed for the definition of domain-spe-
cific standard for the interaction and data exchange for part-
ners [50]. The definition of specific data and process se-
quences provides the basis for required process interfaces in 
complex B2B scenarios. Hence, SPP for service processes of 
service procurement process models enable the following ad-
vantages: 
 
SPP choreograph service procurement phases and 
data flow and therefore, they define recurring pro-
cess flow and data flow orders based on best practice 
in service procurement. 
 
SPP are defined patterns for the service procurement 
phases specification, request, quotation, order, exe-
cution, measurement, acceptance and accounting. 
 
SPP configure best practice service procurement 
types. 
 
SPP enable a pre-defined data flow. The order of ex-
changed data is prescribed for the definition of do-
main-specific standard for the interaction and data 
exchange for partners [50]. The definition of spe-
cific data and process sequences provides the basis 
for required process interfaces in complex B2B sce-
narios. 
VIII. SERVICE MODULE PATTERN (SMP) FOR THE 
ORCHESTRATION OF PROCESS FLOW AND DATA FLOW 
Service procurement transactions and service processes 
are developed in a collaborative way: service providers and 
service consumers interact closely. Service processes and sin-
gle service sub processes are characterized by a service pro-
vider or a service consumer. Based on service process phases, 
we define a new pattern. Service Module Pattern (SMP) are 
further introduced and described, the modeling support is pre-
sented, a definition is given and the composition and syntac-
tical compatibility definition and as well as an example pro-
vided.  
A. Pattern description 
A standard pattern-based formal modeling approach 
based on best practice collaborative service processes in the 
domain of service procurement has not been provided yet. 
Recurring service processes as well as a collaborative and 
modularized modeling approach based on the process partic-
ipants for service processes are not supported. The pattern of-
fers the description of collaborative service processes and 
service sub processes by the orchestration of service modules 
based on data flow. The valid composition of service process 
modules is ensured by the syntactical compatibility. The pre-
defined order of recurring service phases can be further struc-
tured into detailed service modules.  
 
 
 
 
 
 
 
 
 
 
 
 
 
frame contract
partial order
service 
executed
bill of 
quantities
remediation 
of defect
acceptance 
protocol
AT
AS
AM
AB
AR
order
service 
specification
 
 
invoice
partial 
invoice
 
service 
request
126
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

These patterns of detailed service modules describe a re-
curring process and data flow characterized by specific pro-
cess interfaces. SMP are characterized by capsulated elec-
tronic service processes. SMP define orchestrations of their 
internal capsulated service processes. The process and data 
flow is orchestrated. The activities of these service processes 
are executed by web services for the horizontal and vertical 
integration of different information systems. One of the main 
characteristics of SMP is collaboration: the collaborative ser-
vice process of a process participant is further capsulated into 
service modules.  
B. Modeling support 
This pattern can be modeled by Petri nets and high-level 
Petri nets and can be integrated into Petri net-based and high-
level Petri net-based service processes. To support the pat-
tern-based modeling approach, a domain-specific modeling 
extension for service processes is necessary to support mod-
elers in the design phase. 
C. Service Module Pattern definition 
Collaborative SMP are transition-bounded service pro-
cesses and are represented in a Petri net as a single transition, 
which can be extended to sub nets. SMP are defined as self-
contained collaborative service processes of one collabora-
tion participant (service provider or service consumer). SMP 
are represented graphically by a rectangle, which includes the 
specific service phase name as well as the participant of the 
service process (see Figure 8). The set of SI and SD are input 
and output places of SMP.  
 
 
Figure 8.  SMP modeled as Petri net 
SMP are defined based on high-level Petri nets. SMP rep-
resent coarsened collaborative service processes of one pro-
cess participant. The collaborative service process consists 
out of several SMP representing all process participants and 
therefore, the entire service process of a SPP. SMP are con-
nected via a set of input and output places SPS to model bidi-
rectional interaction and communication patterns like send-
ing and receiving. The internal structure of a SMP is built by 
a coarsened service net and consists out of a set of internal 
input and output places (𝑆𝑆𝑀
𝐼𝑁, 𝑆𝑆𝑀
𝑂𝑈𝑇) and internal transitions. 
The set of input and output places is defined as an internal 
module interface of a SMP. The internal structure of a SMP 
fulfills the requirements of a workflow net [51] and sound-
ness criteria [52]. A SMP interface 𝑆𝑠𝑚1
𝐼𝑁/𝑂𝑈𝑇 of one SMP 𝑡𝑠𝑚
1  
can be melted with the SMP interface 𝑆𝑠𝑚2
𝐼𝑁/𝑂𝑈𝑇 of another 
SMP 𝑡𝑠𝑚
2 . The set of SMP TSM is defined as single transition 
of a transition-bounded sub XML net XN'=(S',T',F') as part 
of an XML net and dedicated to one SPP of the set of SPP 
TSP. The composition of SMP causes the melting of the com-
mon set of interface places. 
D. Composition and syntactical compatibility 
The syntactical compatibility of SMP enable the compo-
sition of SMP. Syntactically compatible SMP have com-
pletely overlapping process interfaces. The syntactical com-
patibility postulates that each module interface of SPP is an 
output place 𝑆𝑆𝑀
𝑂𝑈𝑇 of a SPP 𝑡𝑠𝑚𝑖
1
 and an input place 𝑆𝑆𝑀
𝐼𝑁 of a 
SPP 𝑡𝑠𝑚𝑗
2
. For every output place, it exists a corresponding 
input place. Syntactically compatible SMP have completely 
overlapped interfaces. While the interfaces of two SMP are 
melted during a composition, the common non-empty subset 
of interfaces is modeled. A mandatory condition for the syn-
tactical compatibility is the partly overlapping of interfaces. 
The completely overlapping of interfaces is also a sufficient 
condition for SMP. 
E. Example 
Based on a specific SPP, a capsulated service process can 
be further detailed into SMP to orchestrate the data flow and 
process flow (see Figure 9). The input place 𝑆𝑠𝑚1
𝐼𝑁1  and the out-
put place 𝑆𝑠𝑚1
𝑂𝑈𝑇1 of service process ℎ𝑆𝑁′𝑠𝑚1 and ℎ𝑆𝑁′𝑠𝑚2 
of a SMP are melted and create a common internal place 
𝑆𝑠𝑚3.  
F. Advantages of SMP 
SMP for service procurement processes enable the fol-
lowing advantages: 
 
SMP orchestrate the process flow and data flow and 
therefore, they define recurring collaborative ser-
vice processes based on best practice in service pro-
curement. 
 
SMP define patterns for the detailed service procure-
ment processes specification, request, quotation, or-
der, execution, measurement, acceptance and ac-
counting. 
 
SMP enable a modularization concept for modeling 
and implementing collaborative service processes. 
The defined activities can be further modeled and 
implemented by web services. 
IX. SERVICE NETS ESN 
For the modeling of eSN, we utilize place/transition nets 
(P/T nets) to support initial modeling phases. Places and to-
kens of these nets represent the current status of a service 
chain. In addition, we define domain-specific process inter-
face place types and process transition types to standardize 
the modeling approach. Static interface places between ser-
vice processes and dynamic interface places for capsulated 
interface processes are defined.  
 
 particip
ant
<phase>
service module 
pattern
127
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
 
 
 
 
execution 
assessed
acceptance protocol 
created
execution 
assessment
 
 
remediation 
of defect
bill of 
quantities
service 
specification
 
 
acceptance 
protocol
acceptance 
protocol creation
acceptance 
protocol control
bill of 
quantities
acceptance 
protocol
acceptance 
protocol
acceptance 
protocol
𝑠𝑠𝑚1
𝐼𝑁  
𝑠𝑠𝑚1
𝑂𝑈𝑇 
SC  
AS2
𝑡𝑠𝑚𝐴𝐺
2
 
𝑠𝑠𝑝1
𝐼𝑁  
𝑠𝑠𝑝1
𝑂𝑈𝑇 
SP  
AS1
𝑡𝑠𝑚𝐴𝐺
1
 
 
Figure 9.  Composition of SMP modeled as an XML net 
Therefore, we define the interface place types service ob-
ject places (SO), service interface places (SS) and service 
document places (SD). SO places are containers for general 
service objects. SS places are internal and cross-company in-
terfaces for the data flow. SD places serve as containers for 
service document types. For transition concepts, Service 
Phase Patterns are defined to reflect the specific process 
phases in service procurement. 
 
 
Figure 10.  Hierarchic structuring of service processes 
Service Module Patterns represent service processes of a 
collaboration participant (service provider or service con-
sumer). SPP and SMP represent both a black box for sub-
processes, which can be modeled separately in further de-
tailed service processes. A SPP consists out of several SMP. 
SPP and SMP represent and apply hierarchical modeling con-
cepts to support the layer model. In an early modeling stage, 
SPP and SMP act as a place holder for concrete service pro-
cesses, which can be modeled at a later point of time. These 
internal (private) service processes are modeling by using 
pools. Specific SMP are assigned to SPP to structure service 
processes and organize them into a hierarchy (see Figure 10). 
As an example, a single collaborative service process be-
tween a service provider and a service consumer is shown in 
Figure 11. 
X. 
HIGH-LEVEL SERVICE NETS HSN 
The use of P/T net concepts accompanies a couple of dis-
advantages: the semantic correctness cannot be checked, do-
main-specific modeling constructs are not supported, com-
munication and information concepts are not designed, the 
structured hierarchical modeling is not supported and tokens 
cannot be specified individually. Thus, we introduce model-
ing extensions of eSN with transfer to high-level Service nets 
based on XML nets with individual tokens. High-level Ser-
vice nets (hSN) are based on XML. Operational sequences 
and the data flow are based on XML, tokens are represented 
by complex structured XML objects. All activities corre-
spond to operations on XML documents. hSN are character-
ized by domain-specific extensions, and individual tokens. 
Furthermore, within hSN, the phases of service chains are 
standardized. 
128
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
requ-
est 
phase
offer  
phase
 
nego-
tiation 
phase
service 
consumer
 
service chain process pool 
service consumer
service chain process pool 
service provider
service demand
service contract
service request
service offer
service request
...
...
SSC1
TD
TD
TD
TD
requ-
est 
phase
service 
consumer
service 
consumer
service 
provider
 
Figure 11.  Single collaborative service process with pools of service provider and service consumer 
 
A high-level Service net hSN is defined as follows: 
 
A Service net is defined as a tuple ℎ𝑆𝑁 =
(𝑆, 𝑆𝑆𝑂, 𝑆𝑆𝐼, 𝑆𝑆𝐷, 𝑇, 𝑇𝑆𝑃, 𝑇𝑆𝑀, 𝐹, Φ
, 𝐼𝑆, 𝐼𝑇, 𝐼𝐹, 𝐼𝑆𝑆𝑂, 𝐼𝑆𝑆𝐼, 𝐼𝑆𝑆𝐷, 𝑀0), where 
1. 𝑋𝑁 = (𝑆, 𝑇, 𝐹, Φ, 𝐼𝑆, 𝐼𝑇, 𝐼𝐹,  𝑀0) is an XML net. 
2. Φ = (E, FKT, PRE) is a structure consisting of a non-
empty and finite individual set E of Φ, a set of formula 
and term functions FKT defined on E, and a set of pred-
icates PRE defined on E. 
3. The set of places is structured in the sets process object 
places 𝑆𝑃𝑂 and service object specific places 𝑆𝑃𝑆. The 
set of 𝑆𝑃𝑆 is further structured in the sets of service ob-
ject places 𝑆𝑆𝑂, service interface places 𝑆𝑆𝐼 and ser-
vice document places 𝑆𝑆𝐷. 
4. The set of transitions is structured in the sets of process 
activities 𝑇𝑃𝐴 and service process activities 𝑇𝑃𝑆. The 
set of 𝑇𝑃𝑆 contains of SPPs 𝑇𝑆𝑃 and SMPs 𝑇𝑆𝑀. The 
set of 𝑇𝑃𝑆 is defined as a real set of transitions 𝑇: 
𝑇𝑃𝑆 ⊆ 𝑇. 
5. 𝐼𝑆𝑆𝑂 is the function that assigns a valid XML schema as 
a place typification to each place 𝑠𝑠𝑜 ∈ 𝑆𝑆𝑂. 
6. 𝐼𝑆𝑆𝐼 is the function that assigns a valid XML schema as 
a place typification to each place 𝑠𝑠𝑖𝑠 ∈ 𝑆𝑆𝐼. 
7. 𝐼𝑆𝑆𝐷 is the function that assigns a valid XML schema of 
a service documents type 𝑗 as a place typification to 
each place 𝑠𝑠𝑑𝑗 ∈ 𝑆𝑆𝐷. 
8. 𝐼𝑇 is the function that assigns a predicate logical expres-
sion as inscription to each transition on a given structure 
Φ and the set of variables, which are contained on all 
adjacent arcs. 
9. 𝐼𝐹 is the function that assigns a valid XSLT expression 
to each arc, which is conform to the adjacent XML 
scheme. 
Electronic service processes and their data flow can be 
precisely modeled, analyzed, simulated, executed and main-
tained. For the process interface place types, places are typi-
fied based on the domain-specific context. SPP are repre-
sented by coarsened transitions with capsulated service pro-
cesses based on SMP. SMP are also coarsened transitions and 
contain capsulated service processes of one process partici-
pant (internal service process). A SMP is defined by an inter-
nal structure and communicates with other modules based on 
process interface places. SPP and SMP contains typified in-
put and output places SO, SS and SD. SPP are defined with 
specific typified places. The SPP offer (𝑡𝑠𝑝𝐴𝐺) is modularized 
by two SMPs (Figure 12). 
The service process consists of the service process 
ℎ𝑆𝑁′𝑠𝑚1  of the SMP 𝑡𝑠𝑚𝐴𝐺
1
 and ℎ𝑆𝑁′𝑠𝑚2  of the SMP 
𝑡𝑠𝑚𝐴𝐺
2
. ℎ𝑆𝑁′𝑠𝑚1 of the service provider is modeled as an 
XML net. The representation of XML filter schemes 𝐹𝑆𝑖, 
transition inscriptions 𝑇𝐼𝑖 and place type definition 𝑆𝑇𝑖 are 
not modeled. The service process of the service requester is 
represented by the SMP 𝑡𝑠𝑚𝐴𝐺
2
. The place 𝑠𝑠𝑝1
𝐼𝑁1 and the place 
𝑠𝑠𝑝1
𝑂𝑈𝑇1 are the in- and output of ℎ𝑆𝑁. The input place 𝑠𝑠𝑚1
𝐼𝑁1  
(𝑠𝑠𝑝1
𝐼𝑁1) and the output place 𝑠𝑠𝑚1
𝑂𝑈𝑇1 as the input place 𝑠𝑠𝑚2
𝐼𝑁1  and 
the output place 𝑠𝑠𝑚1
𝑂𝑈𝑇1 (𝑠𝑠𝑝2
𝑂𝑈𝑇1) are module interface places of 
the SMP. 
A. Modeling of distributed service processes based on 
SOA 
Service processes can be modeled as dynamic interface 
processes and be executed by web services in service-ori-
ented architectures (SOA). iServMod supports the modeling 
and analysis of distributed service processes based on web 
services by Web Service nets (WSN) [53]. A web service is 
considered as an implementation of a local service process 
(interface process). A distributed service process can be real-
ized by the composition of web services. Input and output 
messages represent the data flow in Web Service nets.  
 
129
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
check requisition
requisition
requisition 
checked
 
send offer
offer
offer 
checked
 
create offer
requisition
offer
offer
offer
service process 
service provider
service process
service consumer
 
offer 
phase
𝑠𝑠𝑚1
𝐼𝑁  
𝑠𝑠𝑚1
𝑂𝑈𝑇 
𝑠𝑠𝑚1 
𝑠𝑠𝑚2 
 
service 
consumer OP2
𝑡𝑠𝑚𝐴𝐺
2
 
𝑡𝑠𝑝𝐴𝐺 
𝑠𝑠𝑝1
𝐼𝑁  
𝑠𝑠𝑝1
𝑂𝑈𝑇 
𝑠𝑠𝑝1
𝐼𝑁  
𝑠𝑠𝑝1
𝑂𝑈𝑇 
 
Figure 12.  Modularization of a SPP by a SMP 
 
Web Service nets also support the composition concepts 
like the orchestration and choreography. The example service 
process validation of incorrect orders is models as an abstract 
Web Service net with web service selection (Figure 13). 
B. Transformation and execution of Web Service Nets 
Based on the precise modeling of all aspects of service 
processes with Web Service nets, Web Service Business Pro-
cess Execution Language (WS-BPEL) elements can be de-
rived to use standardized web service technologies like inter-
face description (WSDL), protocols (SOAP) and mechanisms 
for service discovery.  
Web service process models [54] can be modeled and the 
transformation of Web Service nets into executable WS-
BPEL code is based on control flow and data flow structures. 
An XML-based notation and semantics for the description of 
the behavior of service processes enrich Web Service nets 
based on web service calls. In this context, the WS-BPEL 
model is called web service process model. A web service or 
several web services describe the behavior and the interaction 
of process instances, process participants and resources using 
web service interface places of the Web Service net. Specific 
structures and elements can be identified and transformed 
into equivalent XML and WS-BPEL structures. A detailed 
transformation of Web Service net structures into WS-BPEL 
code with a transformation algorithm is defined in [29]. 
 
 
WS: SubmitOrder
 
 
confirm incorrect 
order
order
incorrect 
order
sorted 
order
check order for 
errors
WS: 
ConfirmInvalid
Order
 
WS: select WS 
SubmitOrder
 
 
web service 
repository
web service description 
ConfirmInvalidOrder
web service 
description
 
WSID1:7
FS3
web service
WSID1:7
FS1
WS
𝑡𝑚3  
𝑡𝑚4  
𝑡𝑚7  
𝑠𝑠𝑜1 
𝑠𝑠𝑜2 
𝑠𝑠𝑜4 
𝑡𝑚8  
 
web service description 
SubmitOrder
 
WS: select WS 
ConfirmInvalid
Order
𝑡𝑚9  
web service 
description
WSID2:8
FS4
web service
WSID2:8
FS2
𝑠𝑠𝑜𝐴𝑇
4
 
 
Figure 13.  Web Service net with web service selection 
 
 
130
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

XI. 
EVOLUTIONARY PROCEDURE MODEL FOR THE 
INTEGRATED MODELING OF SERVICE PROCESSES 
We propose the Evolutionary Procedure Model (EPM) 
for the development of process-oriented information systems 
based on service processes. EPM is structuring the develop-
ment and the application of the integrated modeling method 
iServMod for the domain service e-procurement. EPM incor-
porates the developed methods, models and modeling con-
cepts of the integration service modeling approach. The evo-
lutionary procedure model consists out of several phases, 
which can be aggregated to the main phases modeling, model 
analysis and implementation. The phases of the EPM are pre-
sented (Figure 14).  
A. Project initialization 
The phase project initialization defines and plans a project 
for the development of an information systems. The scope of 
the project is defined, the involved organization and teams 
are identified. The project parameters project budget, availa-
ble resources, and temporal frame conditions are defined and 
a project plan is created. The project-specific targets are de-
termined and are prioritized. As a first step, a process land-
scape is created, which represents the topmost hierarchical 
layer for a service process model for the gradual modeling of 
service processes.  
Single service processes are graphically represented 
amongst their reciprocities. The modeling language group of 
application-oriented, informal modeling language is used. On 
an abstract level, relevant service processes are represented 
by single transitions and their relations based on places, 
which represent interfaces. 
B. Functional modeling design 
The existing service processes are modeled in a semi-for-
mal way. For the adequate modeling of process instances, a 
detailed process structure of service process models is devel-
oped. Interfaces and data objects are identified and described. 
The description of service processes is based on an informal 
modeling level in a first modeling round. As applications-ori-
ented, informal modeling language, Service nets can be used. 
The explicit interface description is a central modeling as-
pect. Interfaces are defined as input and output places, which 
represent input service objects and output service objects. 
Roles and resources are identified and assigned to transitions. 
For the functional modeling design, roles and resources are 
annotated and modeled by resource places. Resources are 
represented as anonymous, non-typified tokens in places. 
 
C. Detailed modeling design 
The service processes are modeled top-down on different 
abstraction layers based on detailed levels. The layer model 
[29] supports the hierarchical modeling. The modeling lan-
guage group of application-neutral, semi-formal modeling 
language of Service nets is used. The definition of hierarchies 
and a modularized concept is based on process phase patterns 
and process module patterns. The target of the modularization 
of service processes is the reduction of complexity of service 
process modeling by a break down into small process units 
[55]. As soon as the process phases are identified, process 
modules are modeled successively as refinement. Process 
modules build up the corresponding collaborative service 
process of a service consumer or service provider. The input 
and output of a service process of an abstraction layer is de-
rived from the descriptions of abstraction layer, which is 
dominated by it. The hierarchical modeling approach sup-
ports the collaborative modeling since service process mod-
els are modeled in a distributed way and can be integrated in 
a structured way. This decentral modeling approach incorpo-
rates several autonomous modelers, which can model partial 
service processes independently of each other. The procedure 
model supports the consistent, individualized model creation 
and the integration of partial service process models. Inter-
faces of service processes are illustrated on each modeling 
layer and data objects are identified. 
 
 
 
Figure 14.  EPM for the development of process-oriented information systems 
project initialization
continuous 
improvement
modeling
modeling analysis
implementation
Evolutionary 
Procedure Model
realization
execution
monitoring
process analysis
process simulation
process 
benchmarking
functional 
modeling design
detailed 
modeling design
technical 
modeling design
131
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
D. Technical modeling design 
The technical modeling design is determined and incor-
porated. New requirements decide whether existing infor-
mation systems are still used, or will be changed or replaced. 
Existing infrastructures of collaborating service providers 
and service consumers are analyzed in detail and relevant sys-
tems are being documented. The analysis data will be used 
for the technical modeling design. Modeled hierarchical ser-
vice process models will be enriched by technical modeling 
details. Out of the group of formal, platform-independent 
modeling languages, high-level Service nets are used. 
They support the modeling typified places for the detailed 
description of interfaces and data objects. Data objects are 
modeled based on XML schemata. Static and dynamic inter-
faces for coupling of collaborative service processes are dif-
ferentiated. The modeling of SPP and SMP detail the typified 
places. The detailed service process of a SMP are modeled by 
(semi-)automated service processes.  
E. Process analysis 
For the process analysis, qualitative and quantitative anal-
ysis methods are used. Qualitative process analysis checks for 
the logical behavior of service process models to exclude 
modeling errors. Quantitative analysis methods define pro-
cess targets to prevent exceptions. 
F. Process simulation 
The quantitative analysis method of simulation serves as 
an efficient method for the validation of potential behavior of 
service process models compared to the behavior of the in-
tended service processes. The complex system of service pro-
cess models is analyzed by process simulation.  
G. Process benchmarking 
The simulation-based process benchmarking can be used 
to discover the root causes and potentials of improvements by 
a systematic analysis of performance differences [4]. 
H. Realization 
The modeled service process models are implemented 
into process-oriented information systems. The modeling 
language group of machine-readable programming language 
is used. Based on service-oriented architectures, web services 
can be modeled and can be related to corresponding WS-
BPEL implementations of service processes. Web services 
are implemented and be called and executed with WS-BPEL 
after the implementation of service processes [28].  
I. 
Execution 
Electronic service processes are executed for the com-
mence operations. Distributed, collaborative service pro-
cesses of all involved parties are integrated to improve the 
execution of service processes. 
J. 
Monitoring 
The operative service processes must be monitored con-
tinuously. The monitoring serves as a base for a continuous 
improvement. As soon as potentials for improvement are 
identified, single phases of the procedure models are traced 
back and service process models are improved iteratively. 
XII. APPLICATION OF ISERVMOD IN USE CASES 
The integrated modeling approach integrated Service 
Modeling (iServMod) serves as an adequate method for a pre-
cise modeling and analysis of service processes. The ad-
vantages of iServMod increase the value of business process 
simulation and business process benchmarking. The simula-
tion of service processes based on key performance indicators 
reveals gaps and weaknesses. The execution of a process 
benchmarking identifies differences of relevant factors like 
throughput times, resource assignments or cost items. The 
causes of performance gaps can be analyzed. For the model-
ing and simulation of service process models, the software 
tool Horus [56] was enhanced by the new modeling exten-
sions of Service nets and used for a software based simula-
tion. As business process simulation method, a discrete event 
driven business process oriented simulation was used [57]. 
The strengths of the independent simulative analysis are the 
possibility of a “playground” by simulating different process 
alternatives. Evaluation of simulation results can shed light 
on correlations of system parameters at build time and can be 
used to develop action strategies [4]. Unlike analytical proce-
dures, the simulation can be used for the analysis of large sys-
tems. Based on benchmarks, performance gaps can be quan-
tified. Redundant service processes and non-value creating 
activities as well as automation potentials for service pro-
cesses can be identified and the error data is reduced. Also, 
the cost-effectiveness of service processes can be ensured.  
The integrated modeling approach iServMod has been 
successfully applied in a research projects in the domain of 
service procurement [5]. The service process models of 18 
use cases between six service suppliers and four service re-
questers were analyzed, modeled, simulated and bench-
marked [4],[10],[58]. Service process models were modeled 
with high-level Service nets. The modeling of Service nets 
was based on a reference process model [5] to structure and 
align the individual service processes. iServMod supported 
the precise modeling of service processes and service objects 
in a syntactical correct and semantic formal way. The data 
flow could be modeled based on XML. Service processes 
could be modeled in a hierarchical modeling approach based 
on different abstraction levels to support modeling user 
groups with different modeling experiences.  
Service processes could be modeled top down from high-
level process description to detailed service processes as 
132
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

workflows using web services and representing and support-
ing a further implementation in information systems. SPPs 
and SMPs allow for reusability of pre-defined concepts by 
assuring the syntactical and semantic compatibility in service 
process models. The evaluated uses cases were compared 
pairwise for benchmarking by applying EPM. 
XIII. CONCLUSION AND OUTLOOK 
We presented the integrated modeling approach 
iServMod. iServMod supports integrated modeling of service 
processes and service objects based on formalized modeling 
techniques. Additionally, iServMod offers an adequate mod-
eling approach for the precise analysis and implementation of 
service chains. iServMod is focusing on collaborative service 
processes, which are modeled independently by different 
companies and their domain experts (modelers). It further-
more supports the domain-specific requirements of service e-
procurement in service chains.  
The presented modeling concepts enact different formali-
zation levels, starting from a semi-formal description of ser-
vice process models up to formalized and executable service 
process models. This includes a hierarchical order of service 
processes typically modeled in a top down approach. The pat-
terns SPP and SMP enable for both the choreography of ser-
vice phases and the orchestration of service modules in col-
laborative cross-company service chains. These design pat-
terns are intended to describe recurring service process se-
quences based on observed best practices. SPP and SMP sup-
port the modeling and implementation of electronic service 
processes. SPP and SMP are also defined within our Petri net 
based modeling approach for service e-procurement. While 
eSN serve as an initial modeling approach, further analysis is 
based on hSN, which enable an integrated modeling of service 
processes and service objects for the design of information 
systems. 
Both the formal modeling language of Petri nets, as well 
as the service procurement domain-specific patterns lead to 
improved domain understanding, and support simulation-
based analysis and process implementation. The definition of 
SPP and SMP enables 
 
an integrated, formalized modeling approach of ser-
vice processes and service objects, 
 
the modeling of hierarchic service processes and 
modularization of collaborative service processes, 
 
the definition and modeling of service process inter-
faces, 
 
a step-wise transformation of modeling different 
formalization levels, 
 
the support of distributed business processes based 
on service-oriented architectures (SOA), and 
 
syntactic and semantic correctness to verify service 
process models. 
The pattern-based modeling approach is concluded by in-
tegrated description of web service calls to implement sound 
information systems at execution level. The syntactic do-
main-specific extensions both of service object-specific pro-
cess interface place types and process transition types enable 
a precise hierarchical modeling of process participants, mod-
ular service processes, e-procurement service phases, pre-de-
fined process patterns, interfaces and service data objects.  
Our pattern-based approach is derived from typical use 
cases of service e-procurement of industrial services. Hence, 
the integrated modeling and design approach was evaluated 
with real-life case studies [5]. The service process models 
have been modeled and analyzed. The developed extension 
of the software tool Horus supports the overall modeling of 
collaborative service chains.  
As next steps, we intend to extend the verification of these 
patterns. We will evaluate our pattern-based approach by 
analysis of further service e-procurement use cases. Further-
more, the adoption and application of iServMod in different 
domains and hence different types of service chains are 
planned. E-procurement of other service domains will also be 
analyzed and validated. We also intend to formulate experi-
ments in other service domains to ensure the general usabil-
ity, the level of detail and completeness of the defined pat-
terns. In addition, the pattern-based modeling approach can 
be transferred to further service process types besides pro-
curement. Analog service process types are repair orders, re-
turn orders and warranty service orders. The pattern based 
modeling approach will also be used for simulation and 
benchmarking of collaborative service processes of different 
service provider and service consumer combinations. We 
also strive to further evaluate the performance, quality and 
efficiency of this approach together with several leading 
companies in the domain of industrial services. Thus, we 
foresee the evaluation of iServMod by a survey of domain 
specific users.  
REFERENCES 
[1] M. Herfurth and T. Schuster, "Integrated Modeling Approach 
iServMod for Modeling, Analysis and Execution of 
Collaborative Service Processes in Service Chains," COLLA 
2016, The Sixth International Conference on Advanced 
Collaborative Networks, Systems and Applications, Spain, pp. 
70-77, 2016. 
[2] A. Linhart, J. Manderscheid, and M. Roeglinger, “Roadmap to 
Flexible Service Processes - A Project Portfolio Selection and 
Scheduling Approach,” ECIS 2015, paper 125, pp. 1-16, 2015. 
[3] R. F. Lusch and R. Nambisan, “Service innovation: a service-
dominant logic perspective,” MIS Quarterly volume 39 (1), pp. 
155-175, 2015. 
[4] M. Herfurth, T. Schuster, and P. Weiß, “Simulation-based 
Service 
Process 
Benchmarking 
in 
Product-Service 
Ecosystems,” Proceedings of Collaborative Systems for 
Reindustrialization: 14th IFIP WG 5.5 Working Conference on 
Virtual Enterprises, PRO-VE 2013, Germany, pp. 40-47, 2013. 
[5] P. Weiß, M. Herfurth, and J. Schumacher, “Leverage 
Productivity Potentials in Service-oriented Procurement 
Transactions: 
E-Standards 
in 
Service 
Procurement,” 
Proceedings of RESER 2011, pp. 1-20, 2011. 
[6] A. Eggert, C. Thiesbrummel, and C. Deutscher, “Heading for 
new shores: Do service and hybrid innovations outperform 
133
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

product innovations in industrial companies?,” Industrial 
Marketing Management, volume 45, pp. 173-183, 2015. 
[7] O. Kleine and R. Schneider (editors), “Service Chain 
Management in the industry – an approach for planning of 
cooperative industrial services,“ VDM Dr. Müller, 2010. 
[8] J. Johanson and L. G. Mattsson, “Internationalisation in 
Industrial Systems — A Network Approach,” in Knowledge, 
Networks and Power, pp. 111-132, 2015. 
[9] T. Baltacioglu, E. Ada, M. Kaplan, O. Yurt, and C. Kaplan, “A 
New Framework for Service Supply Chains,” Services 
Industry Journal, volume 27, No. 2, pp. 105-124, 2007. 
[10] M. Herfurth, T. Schuster, and P. Weiß, “E-Business for 
Services: Simulation-based Analysis of E-Business Solution 
Concepts for Service Procurement Scenarios,” eChallenges e-
2012 Conference Proceedings, Paul Cunningham and Miriam 
Cunningham (editors), IIMC International Information 
Management Corporation, 2012. 
[11] L. R. Smeltzer and J. A. Ogden, “Purchasing Professionals' 
Perceived Differences between Purchasing materials and 
Purchasing Services,“ Journal of Supply Chain Management, 
volume 38 (19), pp. 54-70, 2002. 
[12] M. Herfurth and P. Weiß, “Conceptual Design of Service 
Procurement 
for 
collaborative 
Service 
Networks,“ 
Collaborative Networks for a Sustainable World: 11th IFIP WG 
5.5 Working Conference on Virtual Enterprises, PRO-VE 
2010, France, pp. 435-442, 2010. 
[13] P. P. Maglio and J. Spohrer, “Fundamentals of Service 
Science,“ Journal of the Academy of Marketing Science, 
volume 36 (1), pp. 18-20, 2008. 
[14] R. J. Glushko and T. McGrath, “Designing Business Processes 
With Patterns,“ The MIT Press Cambridge, Massachusetts, 
2005. 
[15] A. R. Hevner, S. T. March, J. Park, and S. Ram, “Design 
Science in Information Systems Research,” MIS Quarterly, 
28(1), pp. 75-105, 2004. 
[16] W. M. P. van der Aalst, “The Application of Petri Nets to 
Workflow Management,” The Journal of Circuits, Systems and 
Computers, volume 8(1), pp. 21-66, 1998. 
[17] J. Becker, D. Beverungen, R. Knackstedt, M. Matzner, O. 
Müller, and J. Pöppelbuß, “Flexible information system 
architectures for hybrid value creation networks (FlexNet),“ 
work report of the institute for business informatics no. 130, 
Westpahlian Wilhelms University Muenster, 2011. 
[18] J. Becker, D. Beverungen, R. Knackstedt, and O. Müller, 
“Conception of a modeling language for the software supported 
modeling, configuration and evaluation of hybrid bundles of 
services,“ in: O. Thomas and M. Nüttgens (editors), “Service 
modeling,“ Physica, pp. 53-70, 2009. 
[19] P. P.-S. Chen, “The entity-relationship model - towards a 
unified view of data,“ ACM Transactions on Database Systems 
1 (1976) 1, pp. 9-36, 1976. 
[20] K. Winkelmann, “Prospective evaluation of cooperative 
service delivery of industrial services in manufacturing 
systems engineering via simulation of Petri nets,“ Dissertation 
RWTH Aachen, 2007. 
[21] K. Jensen, “Coloured Petri Nets: A high-level Language for 
System Design and Analysis,“ LNCS volume 483, Springer, 
1990. 
[22] J. Becker and S. Neumann, “Reference models for workflow 
applications of technical services,“ in: H.-J. Bullinger, and A.-
W. Scheer, “Service Engineering“, Springer, pp. 623-647, 
2006. 
[23] H. Che, M. Mevius, Y. Ju, W. Stucky, and R. Trunko, “A 
Method 
for 
Interorganizational 
Business 
Process 
Management,“ Proceedings of the IEEE International 
Conference on Automation and Logistics, China, 2007. 
[24] K. Lenz and A. Oberweis, “Interorganizational Business 
Process Management with XML Nets,” in: Petri Net 
Technology for Communication Based Systems, LNCS 2472, 
pp. 243-263, 2003. 
[25] M. Mevius and R. Pibernik, “Process Management in Supply 
Chains - A New Petri-Net Based Approach,“ Proceeding of the 
37th Hawaii International Conference on System Sciences 
(HICCS’04), IEEE Computer Society, 2004. 
[26] W. Brauer, W. Reisig, and G. Rozenberg, “Petri Nets. Part I 
and Part II,” Lecture Notes in Computer Science 254 and 255, 
Springer Verlag, 1987. 
[27] J. Desel and A. Oberweis, “Petri nets in applied computer 
science: introduction, basics and perspectives,” in: Business 
Informatics, volume 38(4), Vieweg Teubner, pp. 359-367, 
1996. 
[28] M. Herfurth, T. Karle, and F. Schönthaler, “Reference Model 
for service oriented Business Software based on Web Service 
Nets,” Third AIS SIGSAND European Symposium on 
Analysis, Design, Use and Societal Impact of Information 
Systems SIGSAND-EUROPE, pp. 55-69, 2008. 
[29] M. Herfurth, T. Karle, and R. Trunko, “Model Driven 
Implementation of Business Processes Based on Web Service 
Nets,” Proceedings of the 2008 SIWN Congress 2nd 
International Conference on Adaptive Business Systems (ABS 
2008), Glasgow, pp. 32-38, 2008. 
[30] W.M.P. van der Aalst and K. van Hee, "Workflow 
Management: Models, Methods, and Systems," MIT Press, 
2004. 
[31] W. Reisig, “Petri nets – an Introduction,“ Springer, 1982. 
[32] J. Desel and A. Oberweis, “Petri nets in applied informatics: 
introduction, basics and perspectives,“ Business Informatics, 
volume 38(4), pp. 359-367, Vieweg + Teubner, 1996. 
[33] T. Schuster, “Modeling, integration and analysis of resources 
in business processes,“ KIT Scientific Publishing, 2012. 
[34] E. Gamma, R. Helm, R. Johnson, and J. Vlissides, “Design 
Patterns: Elements of Reusable Object-Oriented Software,” 
Addison–Wesley, 2001. 
[35] J. Arlow and I. Neustadt, “Enterprise Patterns and MDA,“ 
Addison-Wesley, 2003. 
[36] E. Gamma and K. Beck, “Eclipse to be extended. Principles, 
Patterns and Plug-Ins,“ Addison-Wesley, 2005. 
[37] G. Hohpe and B. Woolf, “Enterprise Integration Patterns: 
Designing, Building, and Deploying Messaging Solutions,“ 
Addison-Wesley Longman Publishing Co. Inc., 2004. 
[38] O. Barros, “Business process patterns and frameworks: 
Reusing knowledge in process innovation,“ Business Process 
Management Journal, volume 13 (1), pp. 47-69, 2007. 
[39] A. Barros, M. Dumas, and A.H.M. ter Hofstede, “Service 
Interaction Patterns,“ Proceedings of the 3rd International 
Conference on Business Process Management, France, 
Springer, pp. 302-318, 2005. 
[40] D. Port, “Derivation of domain specific desing patterns,“ USC-
CSE Annual Reasearch and Technology Week Presentations 
and Binder Materials, 1998. 
[41] N. Russell, A.H.M. ter Hofstede, W.M.P. van der Aalst, and N. 
Mulyar, “Workflow Control-Flow Patterns: A Revised View,“ 
BPM Center Report BPM-06-22, BPMcenter.org, 2006. 
[42] A. Zimmermann, J. Freiheit, and A. Huck, “A Petri net based 
design 
engine 
for 
manufacturing 
systems,“ 
Journal 
International Journal of Production Research, volume 39 (2), 
pp. 225-253, 2001. 
[43] W.M.P. van der Aalst and A.W. Waltmans, “Modeling logistic 
systems with EXPECT,“ in: H.G. Sol, K.M. van Hee, 
"Dynamic Modeling of Information Systems," pp. 269-288, 
1991. 
134
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[44] M. Dong and F. F. Chen, “Process modeling and analysis of 
manufacturing supply chain networks using object oriented 
Petri nets,“ Robotics and Computer Integrated Manufacturing, 
volume 17, pp. 121-129, 2001. 
[45] E. Liu, A. Kumar, and W.M.P. van der Aalst, “Managing 
Supply 
Chain 
Events 
to 
Build 
Sense-and-Response 
Capability,“ in: D. Straub and S. Klein (editors), Proceedings 
of International Conference on Information Systems (ICIS 
2006), Milwaukee, Wisconsin, pp. 117-134, 2006. 
[46] M. Weske, “Business Process Management: Concepts, 
Languages, Architectures,“ Springer, 2007. 
[47] M. Herfurth, A. Meinhardt, J. Schumacher, and P. Weiß, 
“eProcurement 
for 
Industrial 
Maintenance 
Services,“ 
Proceedings of Leveraging Knowledge for Innovation in 
Collaborative Networks: 10th IFIP WG 5.5 Working 
Conference on Virtual Enterprises, Greece, pp. 363-370, 2009. 
[48] P. Weiss, M. Herfurth, and J. Schumacher, “Leverage 
Productivity Potentials in Service-oriented Procurement 
Transactions: E-Standards in Service Procurement,“ RESER 
Conference, Germany, pp. 1-22, 2011. 
[49] K. Lenz, “Modeling and execution of e-business processes with 
XML nets,“ Dissertation J.W. Goethe University Frankfurt am 
Main, 2003. 
[50] A. Grosskopf, G. Decker, and M. Weske, “The Process. 
Business Process Modeling Using BPMN,“ Meghan-Kiffer 
Press, 2009. 
[51] W.M.P. 
van 
der 
Aalst, 
“Modeling 
and 
Analyzing 
Interorganizational Workflows,” in: L. Lavagno and W. Reisig 
(editors), Proceedings of the International Conference on 
Application of Concurrency to System Design (CSD’98), IEEE 
Computer Society Press, pp. 1-15, 1998. 
[52] W.M.P. van der Aalst, “Interorganizational Workflows: An 
Approach based on Message Sequence Charts and Petri Nets, 
Systems Analysis - Modeling – Simulation,” volume 34 (3), 
pp. 335-367, 1999. 
[53] A. Koschmider and M. Mevius, “A Petri Net based Approach 
for Process Model Driven Deduction of BPEL Code,” OTM 
Confederated International Conferences, Agia Napa, Cyprus, 
Springer, pp. 495-505, 2005. 
[54] A. Martens, “Analyzing Web Service based Business 
Processes,” 
Proceedings 
International 
Conference 
on 
Fundamental Approaches to Software Engineering (FASE), 
volume 3442 of LNCS, Scotland, pp. 19-33, 2005. 
[55] W. Kersten, B. Koeppen, C. Meyer, and E.-M. Kern, 
"Reduction of process complexity through modularization," 
Industry Management, volume 21 (4), pp. 11-14, 2005. 
[56] Y. Li and A. Oberweis, “A Petri Net-Based Software Process 
Model 
for 
Developing 
Process-Oriented 
Information 
Systems,” Proceedings of the 18th International Conference on 
Information Systems Development (ISD2009), China, pp. 27-
39, 2009. 
[57] J. Banks, J. S. Carson, B. L. Nelson, and D. M. Nicol, 
“Discrete-Event System Simulation,” Pearson Education, 
2005. 
[58] M. Herfurth, T. Schuster, and P. Weiß, “Decision Support 
Based on Simulation Analysis of Service Procurement 
Scenarios,” eChallenges e-2013 Conference Proceedings, Paul 
Cunningham and Miriam Cunningham (editors), 2013. 
 
 
135
International Journal on Advances in Intelligent Systems, vol 10 no 1 & 2, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

