290
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Exploring Evolvable Modular Patterns
within Logistics
Peter De Bruyn and Herwig Mannaert
Normalized Systems Institute
Faculty of Applied Economics
University of Antwerp, Belgium
Email:{peter.debruyn, herwig.mannaert}@uantwerp.be
Philip Huysmans
Antwerp Management School
Belgium
Email:philip.huysmans@ams.ac.be
Abstract—Many domains employ the concept of modularity as
a key aspect during their design. While the use of modularity
characteristics is believed to enable several beneﬁcial effects,
such as evolvability, the actual realization of this evolvability or
ﬂexibility remains difﬁcult. This paper analyzes a set of modular
structures, which can be identiﬁed within transportation vehicles
and logistic architectures. We employ Normalized Systems Theory
(NST), a theory on how to create evolvable modular structures, as
our theoretical basis to analyze these transportation and logistic
structures in terms of the ﬂexibility and adaptability they do
(not) enable. For these structures, multiple design alternatives
exist of which the theory can clearly highlight the respective
beneﬁts and drawbacks. This paper is an extended version of
an earlier conference proceeding and demonstrates that NST is
useful to analyze transport related modular structures at different
levels of granularity. Additionally, we reﬂect upon the modularity
characteristics of a recent logistics initiative called “The Physical
Internet”.
Keywords–Modularity; Transportation; Logistics; Evolvability;
Patterns; Physical Internet.
I.
INTRODUCTION
This paper is an extended version of an earlier conference
proceeding [1] in which the implications of applying Norma-
lized Systems Theory (NST) to the modular architecture of
transportation and logistics concepts is studied.
In many domains including computer science, product en-
gineering, and organizational sciences, modularity has proven
to be a powerful concept. A modular system is typically
considered as a system, which is subdivided into a set of
interacting subsystems. Several potential beneﬁts are attributed
to modular artifacts. Amongst other things, designing a product
while using a set of modules is associated with a lower amount
of complexity as the design is broken up into a set of smaller
(less complex) problems [2]. Also, ﬂexibility or evolvability
are deemed to be improved in this way. Indeed, it allows one
module of the system to be swapped for another version of
it, without having to redesign the artifact from scratch. This
allows some kind of plug-and-play behavior enabling variation
(different aggregations based on the same set of modular
building blocks can be formed) and evolvability (an artifact can
evolve from one variant to another over time) and is deemed
very powerful.
Achieving these beneﬁts in reality is however quite challen-
ging. Often, coupling (dependencies and interactions) between
the modules in the system exist, which should be minimized
[2][3][4]. However, speciﬁc ways on how this should precisely
be done are often absent or ambiguous. For instance, some
concerns in a modular system are cross-cutting (e.g., security
in a software application) in the sense that their functionality
is required throughout the entire system (e.g., every data
entity should be securely stored). Adapting certain aspects of
such cross-cutting concerns is often problematic as it typically
creates profound ripple-effects throughout the system (i.e.,
a change in one module triggers a change in several other
modules), which is clearly contradictory with the purpose of
evolvability.
This paper focuses on the modular structures within the
context of transportation vehicles and logistic architectures. It
is clear that transportation vehicles (such as cars, trucks, boats,
airplanes, trains) are modular structures at several abstraction
levels (a car consisting out of a trunk, chassis, engine, etc. of
which the engine consists out of several cylinders etc.) and
could beneﬁt from evolvability (e.g., replacing or upgrading
particular parts or even extending the vehicle with additional
seating places or engines). Also, the concept of cross-cutting
concerns seems relevant within this context. That is, transpor-
tation artifacts need multiple auxiliary facilities in their design
such as electricity and communication, which are needed
in most of their components. More speciﬁcally, several of
these auxiliary facilities within the modular design of physical
artifacts (such as the different design options to distribute
heating) were already discussed using an NST perspective
in another publication [5] in a housing context. Analogous
conclusions for these facilities can be drawn in the context
of transportation artifacts. What differentiates transportation
artifacts from other types of artifacts, is the presence of the ad-
ditional and crucial concern of propulsion. Every transportation
mechanism should, somehow, provide the ability for its cargo
to be transported from one location to another. This propulsion
can be realized by means of different driving mechanisms
and different integration architectures, which will be the main
focus of our exploratory analysis in this paper. However, most
transportation vehicles are designed in such way that they lack
true evolvability in several ways (e.g., extending the seating
capacity of a car or adding additional cylinders in the engine
is typically impossible). This paper studies the implications
of different design alternatives for transportation vehicles and
logistic architectures in terms of their evolvability. The consi-

291
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
dered design alternatives are based on the modular integration
patterns as suggested by Normalized Systems Theory (NST)
[6]. The theory is relevant in this context as it studies in-depth
the necessary conditions in order to design evolvable modular
systems.
It is important to mention upfront that none of the authors
of this paper are experts within the domain of transportation
or logistics. Therefore, the intention of this paper is not the
prescribe in detail how architectures within this industry should
be improved in the future. Rather, we intend to show that
it makes sense to apply the modularity reasoning presented
within NST (which originated at the software level) to this
other domain in which we believe modularity is playing an
important role.
The remainder of this paper is structured as follows. In
Section II, we provide a brief overview of NST and the ways
it describes to integrate the different modules within a system.
We then apply these patterns to the analysis of transportation
vehicles (e.g., cars, airplanes) in Section III. In Section IV, we
analyze the modular architectures and integration of so-called
cross-cutting concerns and ponder on some new initiatives and
trends present within the logistics industry, which seem to exhi-
bit certain similarities with NST’s (more general) modularity
approach. Finally, we offer our conclusions in Section V.
II.
MODULARITY AND NST INTEGRATION PATTERNS
A. NST and combinatorics
NST is a theory providing the formulation of design theo-
rems, which are proven to be necessary conditions for obtai-
ning an evolvable software system [6]. The authors operationa-
lize evolvability by demanding Bounded Input Bound Output
(BIBO) stability, even for systems growing in an unlimited
way. The theorems prescribe that all change drivers should
be separated in distinct constructs (Separation of Concerns),
processing functions should be called statefully (Separation
of States) and data structures or processing functions should
be up-datable without impacting other data structures or pro-
cessing functions (Version Transparency) [7]. Further, these
theorems can actually be reformulated for modular systems in
general [8] and related to basic combinatorics [6]. More speci-
ﬁcally, it is illustrated that modularity suggests that maintaining
a particular amount of versions of modular building blocks
should allow for an exponential amount of available system
variants. However, when modularity is applied arbitrarily (e.g.,
by not adhering to the theorems), changing one particular
version of one particular module may result into ripple effects
to other (versions of) modules. This number of impacts can
exponentially grow with the size of the system, which is clearly
harmful for the evolvability of a (software) system.
B. Patterns for cross-cutting concern integration
Adherence to the NST theorems results in a very ﬁne-
grained modular system. This ﬁne-grained design should be
established very meticulously as every violation of every
design theorem is proven to result eventually into ripple effects
due to change. This is very hard to achieve in practice and
therefore, “elements” (i.e., modular design patterns) are pro-
posed to enable the construction of such systems in a realistic
setting [6]. Each of these elements provides a generic reusable
modular structure for a basic functionality of the type of system
one is creating. To ﬁt the speciﬁc situation at hand, they can
be parametrized and, if necessary, customized. A system is
then created as being a set of parametrized instantiations of
these generic modular elements. For software systems, data,
task, ﬂow, connector and trigger elements were deﬁned as
generic modular structures providing the basic functionalities
of most information systems [6]. One can therefore conclude
that the modules forming an element become (as a whole)
a reusable module at a higher level of abstraction. Internally,
every element takes care of a core functionality (e.g., the repre-
sentation of data), and provides integration with some relevant
cross-cutting concerns for that system (e.g., data security and
persistency). To maximally enable evolvability, these cross-
cutting concerns need to be integrated at the lowest modular
granularity level possible (forming elements). The parts in the
elements connecting or dealing with the cross-cutting concerns
need to be properly isolated in separate modules being version
transparent.
In general, different integration patterns for dealing with
cross-cutting concerns can be distinguished. One possibility
is to add cross-cutting concern modules directly to the main
modules. Each cross-cutting concern module will then, by it-
self, handle the full functionality of that cross-cutting concern.
We call integrations of this type the embedded integration
pattern and will refer to it as conﬁguration 1. More speciﬁcally,
such embedded module can either be dedicated (i.e., the
module was speciﬁcally designed for the considered system)
or standardized (i.e., a standardized module for handling the
cross-cutting concern is chosen). The ﬁrst option is referred to
as conﬁguration 1A, while the latter one will be referenced as
conﬁguration 1B. In the context of software systems, imagine
for instance a separate module added to a data entity to take
care of data persistency in a custom designed way (1A) or by
adopting a standard module (1B) for the same goal.
Another possibility is to add the cross-cutting concern
modules to the main modules in such way that the cross-cutting
concern modules only act as connections (or “relay modules”)
to an (external) framework, which implements the cross-cutting
concern more elaborately and will therefore actually perform
the needed functionality. We call integrations of this type the
relay integration pattern and will refer to it as conﬁguration
2. More speciﬁcally, a relay module can link to a dedicated
framework (i.e., the framework was speciﬁcally designed for
the considered system) or standardized (possibly even publicly
available). The ﬁrst option is referred to as conﬁguration 2A
while the latter one will be referenced as conﬁguration 2B.
In the context of a software system, imagine for instance a
separate module added to a data entity acting as a proxy
to a speciﬁcally designed persistency framework (2A) or to
a widely used standard solution, such as Java Persistence
API (2B). Finally, it is also possible to have a relay module
connecting to a framework gateway module. Here, it is only
the framework gateway that connects directly to the external
framework. This third variant is referred to as conﬁguration
2C. In the context of a software system, imagine for instance a
dedicated gateway module that connects to the JPA framework
allowing all cross-cutting concern relay modules to call the
gateway without being dependent on JPA themselves.
As a modular ﬁeld matures, it will create several levels of
granularity among which it will need to integrate its relevant
cross-cutting concerns. Also, the concern will typically be
embedded at a deeper level (i.e., more ﬁne-grained), and

292
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
towards a more standardized (from A to B) and relayed (i.e.,
2B and 2C) way.
III.
TRANSPORTATION VEHICLE PATTERNS
The identiﬁcation of modules within a system is often
a recursive issue [2]: at different levels of granularity, parts
and subparts can be discerned. Therefore, when studying
modularity within the domain of transportation, we propose
to focus on the modular structure and its integration patterns
at different levels: the vehicle, cargo and vehicle component
levels.
A. The vehicle level
Regarding transportation, it is clear that most types of
vehicles (such as cars, trucks, airplanes) provide their own
propulsion mechanism, both in terms of power storage (e.g.,
fuel) and energy generation (typically by means of an engine).
Since in most cases, extensively tested and highly standardized
modules are used for this purpose, this clearly aligns with inte-
gration pattern 1B as introduced in Section II. This has beneﬁts
in terms of ﬂexibility: different types of vehicles might use
different types of power source (e.g., diesel, gas, electricity) or
have different power needs (e.g., related to the cargo capacity).
It also provides a high amount of independence and auto-
nomy. A downside of such an architecture is clearly that the
propulsion mechanism needs to be, by deﬁnition, embedded
within every individual transport vehicle and that for instance
technological advancements are not automatically dispersed
over all available vehicles unless each of their mechanisms
(e.g., engines) are individually updated or replaced. Another
drawback is the fact that this does not allow the realization of
any possible economies of scale arising from producing energy
on a larger scale (i.e., for many vehicles at once).
While the other integration architectures are used less
frequently, they are not completely inconceivable for transpor-
tation vehicles. Consider for instance an electrical train. While
the propulsion forces are generated internally using electrical
engines, the electrical power used for this purpose is generated
externally. This electrical power is tapped from an externally
available framework or, in this case, the electrical distribution
network available along the train tracks. Therefore, one could
argue that —to a certain extent— this aligns already to some
extent with integration pattern 2B. One could even go one
step further. Consider for instance the case of the Transrapid
magnetic levitation train, or the recently proposed Hyperloop.
In these types of transportation, the vehicles are propelled
by the propulsion forces generated in or around the vehicle
tracks. This would even more narrowly ﬁt into the mentioned
integration pattern 2B. While such centralized architectures
introduce a dependency on the external framework employed
(e.g., if the energy distribution network is down, no vehicle
will be able to advance), they have clear beneﬁts as well.
For instance, they would be able to beneﬁt from economies
of scale regarding efﬁciency, or ﬂexibility with respect to the
introduction of (for instance) more environmentally friendly
techniques for power generation.
Returning to the design of cars, it is clear that such
mechanisms (i.e., as described in integration pattern 2) would
only be possible in case the roads contain propulsion mecha-
nisms or conduct power. As this is currently not the case,
the electrical power for electrical cars can only be stored
internally in batteries (but generated externally) and the design
of the distribution mechanism for propulsion remains tied to
integration pattern 1B. Speciﬁcally focusing our attention on
airplane vehicles, one can note that aircrafts require large
amounts of propulsion power, which would make the use of
an architecture in which the aircraft taps into an externally
available standardized framework via a relay module (i.e.,
integration pattern 2B) extremely tempting. Nevertheless, the
intertwining of propulsion and lift (which is speciﬁc for
aircrafts) would make this design very difﬁcult, and the notion
seems to be completely incompatible with the current degrees
of freedom airplanes enjoy to use the airspace. Indeed, such
an architecture would entail the need for some kind of tubes
encompassing the vehicles, which could in their turn remove
the need for lifting forces. In other words, such an architecture
would probably cease to be genuine air transport.
Nevertheless, as this conﬁguration has been realized for
certain transportation vehicles and offers potential for others
(e.g., cars) in the future, we believe that the exploration of (the
feasibility) of technologies enabling these kind of integration
architectures would be very worthwhile.
B. The cargo level
It is interesting to note that the transportation industry has
already, rather explicitly, adopted a high degree of modularity
standardization at the level of their cargo. This can be found
in the context of today’s logistics landscape, in which it is
important to be able to transport goods by means of cross-
mode transportation. That means that, in order to go from
point A to B, multiple vehicles of often different nature
are employed. For instance, a laptop ordered in the USA to
be delivered in Antwerp, might travel by a combination of
airplane and/or boat, train, truck and car. In order to facilitate
such logistic routes, the packaging of the cargoes (i.e., the
goods to be transported) are packaged, is standardized to a
large extent by means of containerized freight. That is, while
for some type of goods customized transportation mechanisms
still exist (e.g., for the transportation of steel coils, roll-on roll-
off (RoRo) goods, bulk goods, etc.), the majority of non-bulk
goods is transported by means of containers. Such containers
can clearly be considered as standardized cargo modules in
terms of several of their properties such as their dimensions
(height, length, depth), securing mechanisms, maximum load,
etc.
From a modularity point of view, one can see that in such
case various sound design principles are applied, implying a
set of accompanying important beneﬁts. First, this existing
containerized modular freight architecture enables the decou-
pling or encapsulation of the cargo from the transport vehicle
(cf. infra). This decoupling allows to freely combine both
decoupled parts (here: cargo and transport vehicle) without
having to adapt one or the other for this purpose. Stated
otherwise: substitution of the modular parts is made easy.
Indeed, the standardization of freight containers in terms of
dimensions and securing mechanisms allows the recombination
of goods on different transportation modes at the level of
the individual containers. As long as goods can be securely
stowed within these standardized containers, thousands of
them can be loaded by cranes on sea-going cargo ships,
be switched to barges in batches of tens or maybe hundred
containers, routed individually within a harbor, and further

293
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
shipped towards customers via trains (in a set up to 20) and/or
trucks (mostly individually). Similarly, as most transportation
vehicles are designed in correspondence with the standardized
dimensions of the freight containers, they can transport all
types of goods and do not need to undergo speciﬁc changes
when, for instance, a truck has to transport couches instead of
laptops. Second, the modular architecture of the cargo makes
it possible to upscale or downscale the total cargo on one
vehicle within certain limits. For instance, as long as a ship
is large enough, one can extend the overall cargo by simply
increasing the number of containers. Or, as long the traction
of a locomotive is powerful enough, additional containers can
be added to a transportation train. We therefore conclude that
already an important amount of ﬂexibility is achieved in terms
of the type of cargo as well as the transportation mode and
scale.
Interpreting the situation sketched above in terms of our
modular integration architectures as described in Section II,
this means that integration architecture 2C is applied. That
is, it is clear that no embedded architecture is present as the
container itself has no propulsion mechanisms incorporated
into it. Instead, the container has standardized connections to
connect into different types of vehicles (see Section III-A)
which, at their turn, have the capacity to provide the required
propulsion for one or several containers. As these connections
are version transparent in terms of a large set of different
vehicles (truck, train and even boat), no dependency regarding
a speciﬁc type of external network is present and therefore we
would be inclined to categorize the propulsion provisioning in
this situation as using architecture 2C.
Further, in terms of this containerized freight, it is impor-
tant to mention that, conceptually speaking, the idea of contai-
nerization should not necessarily be limited to freight alone.
For instance, one can easily imagine that similar cargo modules
could be made for humans as well, although such containers
would clearly have to be made more human-friendly, and the
practicality and added value might —at this point in time—
be questionable.
Finally, it is interesting to note that certain players in
industry are still looking for additional ways to modularize
freight in a more efﬁcient way. For instance, Airbus was only
recently —in late 2015— granted a patent for a modular
removable aircraft cabin, in which the whole cabin (i.e., the
space for all passengers) can be substituted by another cabin
[9]. The fact that major industry players are working on these
kinds of ideas, seems to support the fact that such ideas on
modularization in (air) transportation should deﬁnitely not be
considered ludicrous nor obvious.
C. The vehicle components level
In order to further explore the modular integration in the
context of transportation vehicles, it is interesting to ponder on
the decoupling or encapsulation of the various concerns at the
level of the vehicle components, such as those of a car. Here,
relevant concerns could be the passenger cabine (providing a
comfortable place for passengers to sit), the trunk (providing
storage space for luggage), the chassis (protecting the car from
the outside world) or the engine (generating the propulsion
force). It is remarkable to note that, in many cases, the
compatibility of these modular components of transportation
vehicles seems restricted to vehicles of one particular model
or, in some cases, multiple models of one manufacturer. This
means that, when again considering a car, most passenger
cabines, trunks, chassis parts, etc. can only be replaced by
their exact copies. Stated otherwise, a trunk that was designed
for car model A is typically not able to be used for a car
model B as it would simply not ﬁt due to size limitations,
aerodynamic constraints, weight, etc. This is due to a high
degree of coupling between the individual components we
consider and their model or manufacturer speciﬁcations. It
would certainly provide some added value to customers if
the modules implementing these major concerns would be
decoupled, encapsulated, and standardized in accordance with
integration architecture 1B as discussed in Section II, allowing
plug-and-play behavior. In such case, consumers would for
instance be able —for a certain car size category— to purchase
the chassis, the engine, the passenger cabine, the trunk, etc. all
independently from different vendors.
Moreover, each of these modules could then be replaced or
upgraded independently as well. For example, the engine could
be replaced when it breaks down, but could also be upgraded
in order to have a more powerful, modern, or environmentally
cleaner engine. One could even imagine to introduce an
electrical engine in a car that was originally equipped with as
gas or diesel engine. Of course, we mention once again that
we are no experts in car manufacturing and do not elaborate
on the speciﬁc manufacturing details of each aspect of the
design. Moreover, we are aware of the fact that it would not
be straightforward to keep the decoupling or encapsulation of
the various modules intact throughout the course of signiﬁcant
technological evolutions in time. Nevertheless, the advantages
of such design from a sustainability point of view would
obviously be signiﬁcant: cars could become more efﬁcient and
cleaner without ending up in a junkyard after a limited amount
of years.
Some indications suggest that the amount of coupling
between vehicle components or between the vehicle and its
components is not equally large among different industries.
For instance, the airplane industry seems to succeed in having
a better decoupling and encapsulation of certain parts of an
airplane. For example, manufacturers of jet engines and the
aircraft are typically different ﬁrms. In order to remain viable
as an industry, this implies (and necessitates) that the engine
and the rest of the vehicle should, at least to some extent,
be decoupled. However, though an engine can be replaced,
aircrafts are clearly designed for a certain type and amount of
engines.
Considering the components of transportation vehicles at a
still more ﬁne-grained modular level, one could imagine an
even more ﬁne-grained modular structure for, for instance,
car engines where cylinders could be replaced, upgraded, or
simply added in order to increase the engine power. Again,
in order to enable these possibilities, the modules at this
very ﬁne-grained level should be designed in such a way
that they are clearly decoupled, encapsulated and standardized,
corresponding to integration architecture 1B.
D. Overview and advanced issues
Table I provides an overview of the granularity-integration
pattern combinations for the case of transportation vehicles.
We can observe that an interesting and advanced modular ar-
chitecture already seems to be in place at the cargo level. This

294
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
tends to indicate that the industry has reached a rather high
maturity level regarding this issue. As far as the vehicle and
vehicle component modularity levels are concerned, interesting
avenues for a further exploration of the modular integration
architecture can be remarked. This certainly holds for the case
of vehicle components, where the design of fully decoupled
and encapsulated modular parts still seems to be in-progress.
The table further illustrates that, when aiming for maximum
ﬂexibility, the integration of concerns tends to be solved at
more ﬁne-grained levels (going downwards in Table I) and in
a more standardized way enabled by an external framework
(going to the right in Table I) in the long run.
Furthermore, it is interesting to make the mental exercise
of applying NST reasoning in a more complete way and
adopt the notion of NST elements, which we introduced in
Section II. When employing such elements to build a system,
a large set of very tightly integrated, small and ﬁne-grained
modules are used to form the aggregated system (instead of
one monolithic and non-scalable building block). Translating
this idea to the components of an engine, one could imagine
an engine as an aggregation of smaller integrated engines
(with all required subcomponents for a small engine) delivering
propulsion forces. This would theoretically mean that the
propulsion power could be increased by adding more engines,
and that the various small engines could be replaced and
upgraded independently, even combining combustion engines
and electrical engines. Once again, this could have signiﬁcant
beneﬁts from a sustainability point of view. Also, this would
partly solve some of the scalability issues we mentioned in
Section III-A, for instance in cases when carrying additional
cargo within a particular vehicle would be restrained due to
limitations in the capacity of the vehicle’s engine.
TABLE I. OVERVIEW OF THE DIFFERENT
GRANULARITY-INTEGRATION PATTERN COMBINATIONS
REGARDING TRANSPORTATION VEHICLES
1A
1B
2A
2B
2C
vehicle
•
◦
cargo
•
vehicle components
◦
•: currently employed, ◦: to be explored
Going one step further, elements might be conceivable at
a higher granularity level as well. That is, elements might
be designed that also provide the integration of these small
engines with non-propulsion concerns. Suppose for instance
one-person transport modules or vehicles that can be aggre-
gated or combined at any time into more-person modules.
Assume further that these one-person modules have their
own propulsion mechanisms and storage spaces, which are
automatically combined when several modules are aggregated.
This would mean that the propulsion power and the storage
room would be proportional to the size of the vehicle, which
would be proportional to the number of passengers. And one
could further imagine that each one of those units could be
enabled to tap into external propulsion power if available (cf.
integration architecture 2B or 2C), while producing its own
propulsion power otherwise (cf. integration architecture 1B).
One could even explore what this could possibly mean for
air transportation. When considering the design of airplane
artifacts, one can note that they differentiate themselves from
ground transportation artifacts by the fact that another concern
next to propulsion becomes apparent: the need to obtain lift.
Adding this concern to the design is obviously not trivial.
Indeed, both concerns —propulsion and lift— are even tightly
coupled in current airplanes: the lift force is based on the
velocity and therefore on the propulsion of the vehicle. This
actually represents an omnipresent risk in airplanes: without
propulsion, there is no lift anymore. Nevertheless, we do
think that a similar reasoning based on elements is valid
for air transportation. For instance, one could imagine small
integrated transport modules or vehicles for a few persons,
that can be aggregated or combined at any time into larger
airplane modules. From an energy or sustainability point of
view, it would clearly be very appealing to be able to adapt
the size and propulsion power of the airplanes to the number
of registered passengers.
As we are no domain experts, we are clearly not entitled
to discuss the outlook of modular structures for transport pro-
pulsion in depth or judge on their practical feasibility. We also
do not have any intention to oversimplify the difﬁculties and
complexities one would be confronted with during the design
of such elements. For example, the design of such modular
architectures obviously does not liberate the designer from the
laws of physics that need to be obeyed at all times: when
considering the elements for air transportation, the relationship
between the weight of the vehicle and the wing surface creating
the lift, should result in the required equilibrium at the cruising
speed, both for the singular and aggregated vehicles. However,
instead of making such architectures impossible, these physical
constraints could serve as boundary conditions to solve the
design equations. So, instead of elaborating in detail on the
actual design of such modular building blocks (such as the
elements), our main goal is to illustrate the relevance of our
modularity approach for the design of transportation vehicles
and to show what kind of possibilities normalized evolvable
transport architectures could unleash. For instance, the sca-
lability issue mentioned in Section III-A, would probably be
largely solved if the industry would manage to realize such
elements.
IV.
LOGISTIC ARCHITECTURES
Whereas Section III focused on the modular architecture
of (individual) vehicles, the viewpoint of modularization and
its integration architectures can also be applied at a higher
conceptual level such as logistics in general and its associated
supply chain. That is, transportation can and is increasingly
considered as a type of service, i.e., the service of something
being transported from place X to Y in a timely and not too
costly fashion. How the transportation is precisely executed
(with which transportation means, at once or in several sta-
ges, etc.) is often of less or sometimes even no importance.
Considering transportation as a service often also shifts the
responsibility of collecting the remuneration or payment from
the client to the scope of the service provider. For instance,
one might think of situations where a client is prepared to pay
a certain fee for the transportation of a particular good from
location A to B by point in time P, and in which it is the
service provider’s responsibility to determine how this will be
performed.
It is particularly interesting to see how recent initiatives

295
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
in the business world are being taken in the context of this
servitization. In this section, we will focus on two aspects of
this servitization and their relation to the modularity aspects
we discussed above. First, in Section IV-A, we focus on the
(public) transport of people and the emergence of Mobility-
as-a-Service (MaaS). Next, in Section IV-B, we focus on
how the Physical Internet (PI) is aiming to revolutionize the
transportation of goods.
A. Mobility-as-a-Service
The emergence of the concept of Mobility-as-a-Service is
primarily driven by the idea that, given the increasing number
of people living in major cities, it becomes unsustainable to
have each individual person possessing his or her own car and
use that for their private transportation needs. Some of the
problems associated with such situation include the exploding
amount of trafﬁc leading to congested roads and associated
trafﬁc jams, increased pollution and the fact that it is inefﬁcient
in terms of capital spending (i.e., the high expenses of having
a dedicated car including its insurance, maintenance, etc. for
a device that is often more than 90% of the time unused).
Therefore, the mission of MaaS and most of its providers is
to enable consumers to make the switch from primarily using
private cars for their transportation means towards (sustainable)
shared mobility resources (such as taxi, car sharing, tram, bus,
train, bike) or, stated otherwise, “to make it easier and more
rewarding to use sustainable modes of transport in urban areas”
[10, p. 4]. Attempts towards this direction could be, but should
not necessarily be limited to [11]:
•
Simpliﬁed car ownership: car manufacturers offering
services that enable the usage of one physical vehicle
with multiple owners. On top of ﬁnancial services to
handle purchasing and leasing, technological services
(e.g., scheduling of vehicle use) and cost distribution
calculation services are offered. The primary motiva-
tion behind these initiatives is presented as a reduction
of the inefﬁciency of capital spending.
•
Peer transport services: while initiatives in the sim-
pliﬁed car ownership category focus on reducing the
inefﬁciency of capital spending but remain within
well-trusted boundaries of an individual’s network,
peer transport services seek to radically remove these
inefﬁciencies by leveraging the excess capacity of all
nearby means of transport. Available transport capa-
city is offered through a digital platform, where al-
gorithms determine optimal matches between demand
and supply. In this category, the service providers do
not own the physical means of transport themsevles.
Rather, they provide the technological platform and
offer payment services.
•
Car sharing: in car sharing initiatives, an organization
commits itself to ownership of a ﬂeet of transportation
means. As a result, a more consistent and reliable
service can be offered when compared to the previous
categories.
•
Extended multi-modal planner: a company offering
advanced planning services by suggesting customers
routes that may involve a combination of different
transportation modals if those options appear to be the
most efﬁcient onces. Obviously, such planners might
allow you to buy a ticket for the suggested route as
well.
•
Combined mobility services: a neutral third-party com-
pany that combines multiple mobility services as one
offering (one subscription, uniﬁed invoicing, etc.) to-
wards its customers (often complemented with an app
for mobile devices, a website, etc.).
•
Integrated public transport: focusing on the combined
offering of public transport options, but optionally
combined with other modes of transport as well.
•
Mobility broker: similar mobility subscriptions as the
options described above, but offered as part of a house
rent. The mobility services are therefore required to
be incorporated within the general planning process
of urban areas.
As multiple sustainable transportation means are availa-
ble for customers, customers could (in theory) choose from
different alternatives (on a day-to-day basis) for the same
transport or even combine several of them within one voyage.
This often requires customers to manage a complex set of
tickets or subscriptions that may turn the whole trajectory
into something quite expensive and restricts the traveler’s
comfort. Therefore, the rationale behind MaaS additionally
aims to enable customers to actually make use of this myriad
of transportation means in the combination and timing they
prefer or need (e.g., on day 1 using a combination of tram and
a shared bike to go to work and on day 2 a shared car due to
the rainy weather) in a comfortable way, i.e., by subscribing to
only one provider or platform. Indeed, as Kamargianni et al.
mention, “the complexity of using a variety of transport models
(i.e. different payment methods, subscriptions, different mobile
applications for each operator, lack of integrated information
etc.) discourages many people from taking advantage of them”
[12, p. 3295].
Therefore, an important characteristic of MaaS is its ability
to provide integration for the customer in order to improve user
friendliness and adoption. Some conceptualizations of MaaS
would therefore only consider bullet points 4 till 8 as genuine
implementations of MaaS as only these variatns include the
combination (and therefore require the integration) of different
types of transport. Conceptually, the goal is clearly to provide
an integration of all the shared mobility resources for the
customer. This issue has been formulated in a more speciﬁc
way by Kamergianni et al. by splitting up the general concept
of integration into three main elements [12, p. 3295]:
•
Ticket & Payment integration: having one (“smart”)
card to be able to pay within different modes of
transportation;
•
Mobility package: a package for customers in which
they (pre)pay for different modes of transportation;
•
ICT integration: providing a digital integrated inter-
face (often for smartphone) to give a single point of
access regarding information for each of the different
modes of transportation.
While the ICT integration between the different mobility
providers is obviously challenging and crucial for a ﬂuent user
experience, we do not further focus on this issue in the remain-
der of this section. Rather, we will pay attention to the ﬁrst
two main elements listed as they both are related to payment

296
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
issues and provide an interesting angle to look at a non-tangible
part of each transportation service: the remuneration a mobility
service provider should get for offering its services. Additio-
nally, the integration of ticketing and payment are considered
as stages necessarily preceding the ICT integration phase [13].
As all transportation services have to be remunerated in one
way or the other, one could argue that this constitutes a genuine
cross-cutting concern for mobility services: whether you take
the tram, bus, taxi, shared car, etc., there will always be one or
multiple mobility provider(s) that has/have to be compensated
for the efforts performed. Therefore, our modularity approach
and the adjoining reasoning regarding cross-cutting concern
integration patterns is considered as a useful point of view in
this regard. Speciﬁcally in a context where multiple mobility
services are present and can be used during one voyage,
interesting questions on how to integrate this concern in an
efﬁcient way, arise. First, we discuss how the payment concern
is currently integrated in logistics (i.e., pre-MaaS). Next, we
analyze how MaaS attempts to change this and reﬂect on the
question whether we can still see some possible points for
improvements based on our theoretical basis. For this end,
similarly as we did in Section III, we will make use of tables
representing different modular aggregation levels and how the
cross-cutting concern is or can be integrated at each of these
levels. It is important to be aware that in Tables II and III, we
clearly consider another cross-cutting concern than in Table I.
Whereas the latter focused on the integration of the propulsion
concern for transportation vehicles, the former tables will focus
on the integration of the payment concern for mobility services.
TABLE II. OVERVIEW OF THE DIFFERENT
GRANULARITY-INTEGRATION PATTERN COMBINATIONS
REGARDING THE REMUNERATION OF MOBILITY SERVICES IN A
PRE-MAAS CONFIGURATION
1A
1B
2A
2B
2C
mobility provider
•
trip
•
•
•: currently employed
In order to analyze the pre-MaaS phase, we consider
Table II. Here, only two rows are included, i.e., trip and
mobility provider. Typically, it is possible to pay directly for
a single trip in cash when using a public service provider
(e.g., at the cab or bus driver), which would correspond to
the integration of the payment cross-cutting concern by means
of conﬁguration 1B (1 because it is embedded, B because
generally standardized cashier systems are being used). Ho-
wever, many of these public transport providers also offer
subscriptions or multi-ride tickets. A devaluation mechanism
is then typically present in the vehicles, registering for instance
an additional ride on the multi-ride ticket or verifying the
validity of the subscription card. As a consequence, this
corresponds to integration conﬁguration 2B at the level of
the trip (i.e., the payment is being performed but in a relay
fashion as a connection is made to an external framework at a
higher modularity aggregation level, here: mobility provider)
and integration conﬁguration 1B at the level of the mobility
provider (e.g., bus or tram company) as the actual payment is
made here in a dedicated way. Remark that at the level of the
trip, integration architecture 2B still implies that the connection
to the mobility provider is speciﬁc for the particular provider
the customer is using (e.g., the bus company one is making
use of). This also implies that a customer will be required to
engage in multiple subscriptions or multi-ride tickets for each
mobility provider of each transport mode one is making use
of.
TABLE III. OVERVIEW OF THE DIFFERENT
GRANULARITY-INTEGRATION PATTERN COMBINATIONS
REGARDING THE REMUNERATION OF MOBILITY SERVICES IN A
POST-MAAS CONFIGURATION
1A
1B
2A
2B
2C
mobility platform
•
mobility provider
•
•
◦
trip
•
•
•
•: currently employed, ◦: to be explored
As mentioned above, precisely this issue (which can be
derived from Table II) was one of the driving forces behind the
idea of MaaS: avoiding the need for consumers to buy separate
(multi-ride) tickets or subscriptions for each of the mobility
services one is using as this inefﬁciency is assumed to be an
important obstacle for people to start using a (combination
of) the available durable public transport means in a city. The
offered alternative can be represented by means of Table III.
Remark that an additional row is added to the table, i.e., the
mobility provider platform. This level becomes relevant in situ-
ations such as MaaS where an aggregation of multiple service
providers is envisioned. When further analyzing the table, one
can ﬁnd that 1B (standardized dedicated) payments at the level
of a trip are typically still possible (as was the case in the
pre-MaaS situation), which is therefore not a differentiating
characteristic for MaaS service models. Also the traditional
one-provider subscription mechanism remains available (a 1B
conﬁguration at the level of the mobility provider and 2B
conﬁguration at the level of the individual trip) but is equally
not a differentiating characteristic for MaaS service models.
However, as soon as one considers MaaS as a new concept,
the payment can also be performed at a higher and additional
modular aggregation level (i.e., a mobility platform) providing
a customer the possibility to, for instance, sign up for one
subscription and have access to several transportation means
(e.g., tram, bus, bike and car sharing). Therefore, at the level of
this mobility platform, this corresponds to integration architec-
ture 1B. Regarding the trip level, the integration architecture
can move from 2B to 2C. Indeed, as mentioned above, this
was the very main reason why MaaS was initiated in the ﬁrst
way. Integration structure 2C at the level of the trip allows
a customer who wants to pay his trip, to use one and the
same card for different mobility providers. Stated otherwise,
switching between different providers becomes easier. Another
signiﬁcant difference with the pre-MaaS situation is the fact
that now, the integration architecture at the level of the mobility
provider can be moved from 1B to 2B: when, for instance,
a traveler will scan his or her “MaaS transport card”, the
devaluation mechanism will (most probably) register a trip and
its properties at the level of the mobility provider, which at its
turn makes use of another external framework to assure its
remuneration, i.e., that of the mobility platform. Remark that
at the level of the mobility provider, integration architecture
2B still implies that the connection to the mobility platform is
speciﬁc for the particular platform one is making use of (e.g.,

297
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
the MaaS mobility provider active in a particular city).
Based on our description of the transition from the pre-
MaaS to the post-MaaS era in terms of the different payment
integration conﬁgurations and the adjoining tables, certain
commercial issues currently relevant within the MaaS ﬁeld
can be deducted and put into a modularity integration context.
First, as the integration conﬁguration at the level of the trip
moves from 2B to 2C, this implies that customers can easily
switch from one provider to the other within their subscription.
While this increases the comfort level of the passenger and was
the intention of the MaaS concept, service providers consider
this both as a beneﬁt as well as a potential treat. The ﬂexibility
in service provider is generally considered beneﬁcial due to the
fact that the mobility platform brings in new customers who
can experiment with their services (whereas they otherwise,
without the MaaS subscription, might not choose to do so) and
therefore increase their revenue. When dividing the competitive
landscape between the providers “within” and “outside” the
portfolio of the mobility platform, an advantage is typically
attributed to the providers within the joint-venture. However,
such ﬂexibility may also increase the competition between the
service providers within the portfolio. Indeed, as a customer
can –within his or her subscription– freely choose between
all alternatives (depending on the revenue distribution model
adopted by the mobility provider), other providers within the
portfolio might become indirect competitors (e.g., customers
may switch their preferences towards the usage of shared
bikes instead of buses). Currently, most MaaS providers have
one mobility provider within their portfolio for each type of
transport (i.e., one shared cars provider, one shared bikes
provider, etc.). When a mobility platform would one day
decide to include multiple providers of the same transport type
into its portfolio, fellow portfolio members might even become
each others direct competitors. Therefore, some mobility pro-
viders advocate the current situation in which their mobility
platform only has one provider for each type of service. It is
however unclear to which extent platform owners will follow
this request as they have created integrations allowing the
incorporation of multiple providers of the same service type
in a ﬂuent way. Similar competitive dynamics were equally
portrayed by Sochor et al. [10]. Second, as the integration
conﬁguration at the level of the mobility provider is currently
at 2B, this means that, for instance, the card used to register
trips is still bound to one speciﬁc mobility platform. Using
the same card for multiple mobility platforms would clearly
further enhance the ﬂexibility provided to the customer, but
increase the competition in the platform’s market in case
multiple mobility mobility platforms would be active in the
same region. However, switching this integration from 2B
to 2C would provide a more mature modular cross-cutting
integration situation, but would (similarly as was the case at
the level of the individual mobility service providers), also
imply a higher degree of competition for certain players in the
market.
In summary we can state that the transition towards a MaaS
conﬁguration allows a more mature integration of the remune-
ration cross-cutting concern in person related logistics as the
concern is integrated deep into the modular structure (i.e., until
the level of the individual trip) and aggregated via 2B or 2C
connections. The exploration of a 2C integration architecture
at the level of the mobility provider could contribute to an
even more mature modular cross-cutting integration.
As discussed in the beginning of this section, we elaborated
mainly on the remuneration concern. However, integration
issues in ﬁne-grained service offerings become even more
challenging when multiple concerns are considered at once.
Consequently, the applicability of our analysis can be expected
to increase as the amount of concerns relevant to MaaS
increase and the resulting analysis might provide insights to
decision takers when confronted with multiple MaaS vendors
and parties. As we discussed above in the context of remu-
neration, platform providers can hold a signiﬁcant amount of
market power by controlling the management of such concerns
and many other servitized markets have demonstrated how
power over the platform guarantees strong economic returns.
Therefore, it can be expected that various service providers
will attempt to create initial platforms (as the ones mentioned
in the beginning of this section) and continue to enlarge their
scope (in terms of revenue and client base, but equally adding
and dealing with additional concerns).
B. The Physical Internet
Modularization within the context of transportation is not
necessarily limited to the analysis of the vehicles and their load
or the service provisioning, but can also be applied at the level
of the logistics supply chain. For instance, triggered by the
current inefﬁciencies of most logistics networks (e.g., use of
partly empty trucks, suboptimal routes, trafﬁc jams, overusage
of highly polluting transportation modes) the Physical Internet
(PI) Initiative aims to design “an open global logistics system
founded on physical, digital and operational interconnectivity
through encapsulation, interfaces and protocols” [14, p. 152].
In order to achieve this goal, they propose to design a global
logistics system based on the basic architectural principles
adopted by the Internet for the distribution of digital informa-
tion. This means that cargo is transported as a set of (smaller)
packages, will reach its destination by traveling via a set
of connecting nodes, may follow different routes (possibly
upfront undetermined) and employs an open infrastructure
(public stock facilities or transportation providers) to this end.
Related to our focus, it is interesting to observe that the
initiators of the project explicitly coin the importance of well-
designed modular structures in logistics and the problems
associated with the opposite situation: “Innovation is bottle-
necked, notably by lack of generic standards and protocols,
transparency, modularity and systemic open infrastructure”
[15, p. 5].
Whereas the exhaustive analysis of all listed characteristics
for this new logistics system is outside the scope and purpose
of this paper, some of them can easily be related to our integra-
tion pattern analysis presented above. First, regarding the cargo
level, it is remarkable that within the PI approach the current
freight containers are considered useful, but still too coarse-
grained. Instead, a set of unitary and composite π-containers
acting as world-standard, smart, green and modular containers
is called for. They would differ from the currently used
containers by being smaller (causing less “empty space” in
containers), (de)composable (allowing to attach or disconnect
multiple containers to each other), having advanced securing
and sealing possibilities, being equipped with smart sensors
and controllers, have conditioning capabilities if required, etc.
Stated otherwise, the authors of the initiative argue that one

298
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
large cargo container is not sufﬁcient and should be considered
as a modular system on its own. Of course, the decoupling
between cargo and vehicle should be maintained as it was
the case for current containers. Therefore, at the vehicle level,
vehicles should be manufactured adhering to this new π-
container standard. Further, a global Physical Internet could
spur the development of vehicles optimized (e.g., using the
most adequate integration patterns) for the trajectory that
they are required to serve (i.e., in some trajectories external
propulsion mechanisms may be present, in others not).
Moreover, the vision of the Physical Internet refers to the
logistics network as an additional aggregation level, which
supersedes transportation vehicles (i.e., the aggregation level
upon which we mainly elaborated in Section III) and needs to
be redesigned adhering to modularity guidelines. For example,
[15, p. 10] states that logistics networks need to “evolve from
point-to-point hub-and-spoke transport to distributed multi-
segment intermodal transport”. The current logistics networks
allow a certain level of intermodal transport, as discussed in
Section III-B. For example, a container can be used on multiple
modes of transport such as trains, ships, and trucks, without
the freight itself being handled. However, the smaller granu-
larity of the cargo as proposed by the Physical Internet will
encourage smaller segments and more advanced optimization
of these different segments. Once routing decisions can be
optimized for a single package, as opposed to an aggregation
of packages in a container, advanced algorithms based on the
routing algorithms of the digital internet can be leveraged. This
vision is in line with our observations based on modularity
reasoning on other abstraction levels, but needs to cope with
the same practical challenges as discussed earlier. For instance,
this vision requires the development of nodes that are highly
optimized for load breaking: disassembling aggregations of
cargo into individual constituents, calculating the optimal route
for each individual π-container, and reassembling new aggre-
gations. As such, these nodes will need to be technologically
more advanced than the current logistics hubs.
Many node-to-node segments will still be operated by
traditional transportation vehicles, because of the economies
of scale of these vehicles. However, because of the small
granularity of a single segment and the load breaking capa-
bilities of the nodes, the optimal transportation vehicle can be
re-evaluated for each individual segment. Consider the ﬁnal
segment an individual package has to travel in order to reach
an individual customer. In certain instances, individual air
transport using a drone could be the fastest way to fulﬁll
such a segment. Organizations such as Amazon are already
experimenting with this technology, albeit within very strict
limitations: the ﬁnal delivery needs to be very close to an
Amazon depot (a traditional hub), and strict weight limitations
are enforced. This last limitation relates to the lift concern of
air transportation vehicles discussed earlier in Section III-D.
Current research demonstrates how this concern can be made
scalable without introducing couplings with other concerns,
such as drone control [16]. This research shows how cargo
can be attached to multiple supporting drones, which, based on
force sensing, follow the movement of one primary controlled
drone. The primary drone can now be controlled as if it was
the sole transport vehicle, albeit with a scalable propulsion
concern. This can be considered as an illustration of how state-
of-the-art research is able to make advancement towards NST
integration patterns previously considered practically impossi-
ble. Indeed, NST prescribes that the integration of concerns
needs to be solved at the most ﬁne-grained levels, for which
several practical obstacles have been identiﬁed in the past
within the context of air transportation vehicles (cf. supra).
The research of Tagliabue et al. [16] demonstrates the practical
feasibility of adhering to this principle: a scalable integration
of the lift concern at the level of an individual π-container. As
such, we believe that further research elaborating on the use
of NST as a theoretical underpinning for R&D in the logistics
domain would be highly valuable.
V.
CONCLUSION
This paper presented an overview of different modular
structures that can be identiﬁed within the logistics industry.
In particular, we studied the alternative integration options re-
garding the propulsion cross-cutting concern for transportation
vehicles (with their associated beneﬁts and drawbacks), using
NST as the theoretical basis. We applied a similar reasoning at
the level of logistic architectures. Here, we analyzed the inte-
gration architecture conﬁgurations regarding the remuneration
cross-cutting concern within a logistics network. Regarding
both the propulsion and the remuneration concern, we observed
that the logistics industry already applies a rather mature im-
plementation. However, some suggestions for future research
and development could be made based on our theory and it
was shown that some recent developments and trends such
as the Internet of Things or the use drones seem to facilitate
some of these avenues. It is important to stress that none of the
authors claim to be transportation or logistics experts. Instead,
generally available knowledge within the domain was used as
the primary source for the analysis. The main contribution is
situated in the fact that we show the applicability and relevance
of NST in a context (i.e., transportation and logistics) outside
the original application domain of the theory (i.e., software
systems). Given our non-expert status in the transportation and
logistics domain, we encourage actual experts to scrutinize and
validate or reﬁne our initial analyses provided. Additionally,
future research could be directed towards the application of
a similar analysis regarding the integration of cross-cutting
concerns into (physical) artifacts within a particular domain
outside the logistics industry.
REFERENCES
[1]
P. De Bruyn, H. Mannaert, and P. Huysmans, “Exploring evolvable
modular patterns for transportation vehicles and logistics architectures,”
in Proceedings of the Ninth International Conference on Pervasive
Patterns and Applications (PATTERNS), 2017, pp. 46–51.
[2]
H. Simon, The Sciences of the Artiﬁcial.
MIT Press, 1996.
[3]
D. Parnas, “On the criteria to be used in decomposing systems into
modules,” Communications of the ACM, vol. 15, no. 12, 1972, pp.
1053–1058.
[4]
C. Y. Baldwin and K. B. Clark, Design Rules: The Power of Modularity.
Cambridge, MA, USA: MIT Press, 2000.
[5]
P. De Bruyn, J. Faes, T. Vermeire, and J. Bosmans, “On the modular
structure and evolvability of architectural patterns for housing utilities,”
in Proceedings of the Ninth International Conference on Pervasive
Patterns and Applications (PATTERNS), 2017, pp. 40–45.
[6]
H. Mannaert, J. Verelst, and P. De Bruyn, Normalized Systems Theory:
From Foundations for Evolvable Software Toward a General Theory for
Evolvable Design.
Koppa, 2016.

299
International Journal on Advances in Intelligent Systems, vol 10 no 3 & 4, year 2017, http://www.iariajournals.org/intelligent_systems/
2017, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[7]
H. Mannaert, J. Verelst, and K. Ven, “The transformation of require-
ments into software primitives: Studying evolvability based on systems
theoretic stability,” Science of Computer Programming, vol. 76, no. 12,
2011, pp. 1210–1222, special Issue on Software Evolution, Adaptability
and Variability.
[8]
P. De Bruyn, “Generalizing normalized systems theory : towards a
foundational theory for enterprise engineering,” Ph.D. dissertation,
University of Antwerp, 2014.
[9]
U.S. Patent US 9,193,460 B2, 2015.
[10]
J. Sochor, H. Str¨omberg, and I. MariAnne Karlsson, “Implementing
mobility as a service: Challenges in integrating user, commercial, and
societal perspectives,” Transportation Research Record: Journal of the
Transportation Research Board, no. 2536, 2015, pp. 1–9.
[11]
R. Quintero, H. Moons, M. Traverso, M. Caldas, I. Sknner, A. van
Grinsven, M. ’t Hoen, and H. van Essen, “Revision of the eu green
public procurement criteria for transport – technical report and criteria
proposal (2nd draft),” European Commission, Tech. Rep., 2017.
[12]
M. Kamargianni, W. Li, M. Matyas, and A. Schfer, “A critical review
of new mobility services for urban transport,” Transportation Research
Procedia, vol. 14, 2016, pp. 3294—3303, transport Research Arena
TRA2016. [Online]. Available: http://www.sciencedirect.com/science/
article/pii/S2352146516302836
[13]
M. Kamargianni, M. Matyas, W. Li, and A. Sch´’afer, “Feasibility study
for “mobility as a service” concept in london,” UCL Energy Institute
— Department for Transport, May 2015.
[14]
B. Montreuil, R. D. Meller, and E. Ballot, Physical Internet Foundations.
Berlin, Heidelberg: Springer Berlin Heidelberg, 2013, pp. 151–166.
[15]
B. Montreuil, “Toward a physical internet: meeting the global logistics
sustainability grand challenge,” Logistics Research, vol. 3, no. 2, 2011,
pp. 71–87.
[16]
A. Tagliabue, M. Kamel, S. Verling, R. Siegwart, and J. Nieto, “Colla-
borative Object Transportation Using MAVs via Passive Force Control,”
ArXiv e-prints, Dec. 2016.

