Anonymous Key Issuing Protocol for Distributed
Sakai-Kasahara Identity-based Scheme
Amar SIAD
Laboratoire Analyse G´eom´etrie et applications LAGA-Paris 13
Universit´e Paris 8, 2 rue de la Libert´e 93526
SAINT-DENIS, France
siad@math.univ-paris13.fr
Moncef AMARA
Universit´e Paris 8, 2 rue de la Libert´e 93526
SAINT-DENIS, France
amara02@etud.univ-paris8.fr
Abstract—Practical implementations of identity based cryp-
tosystems are faced to key escrow problem, which is not always
a good property in many realistic scenarios. Thus, efﬁcient
key issuing protocols are needed to generate and deliver user’s
private keys in secure manner without leakage. Three major
approaches exist in the literature, we are interested in two of
them. The ﬁrst one suggested the distribution of the master
secret key over multiple authorities. The second approach,
concerned about user privacy, and proposed to generate and
deliver user’s private keys in an anonymous manner. Each
one of the above approaches has its own drawbacks and key
escrow problem is steal an issue in identity-based systems. In
this paper, we design a new framework that combines the two
approaches above to solve key escrow problem and single point
of failure in Identity-based Encryption systems by allowing
privacy-preserving propriety. As instantiation, we construct
an anonymous key issuing protocol for the distributed sakai-
kasahara IBE scheme presented recently by Kate and Goldberg
based on the anonymous key issuing protocol proposed by
Chow, along with a security analysis.
Keywords-Key issuing protocols; Distributed key generation;
Anonymous IBE.
I. INTRODUCTION
Traditional Public Key Infrastructure PKI, supporting
Public Key Cryptography PKC, provided mechanisms re-
quired for certiﬁcate issuing, maintain, and revocation. Thus,
it has succeeded in many applications by managing the
trust between different entities. However, PKI is not a
perfect solution, and many problems steal subsists due to
the administrative burden of certiﬁcates, revocation lists or
trees, and cross-domain certiﬁcation.
In 1984, Shamir [1] proposed a novel concept called
Identity Based Public Key Cryptography (ID-PKC), where
the original motivation is to simplify certiﬁcate management
in PKI-based systems. The main idea of so called ID-PKC
is to derive users public key from his identity information
whereas the private key is generated by a third party called
Private Key Generator (PKG) and issued to the user via a
secure channel. Shamir presented an identity based signature
system (IBS) using RSA and conjectured that encryption
systems could be constructed. Compared to traditional Pub-
lic Key Cryptography, ID-PKC present the advantage of
simpliﬁed key distribution and management (no need for
certiﬁcates). However, it suffers from an inherent drawback
of key escrow, where the PKG could decrypt any message
addressed to a user by generating that user’s private key.
Moreover, it requires a secure channel for users’ private keys
issuance.
Since the shamir’s challenge, the cryptographic commu-
nity had to wait until the turn of the century to see practical
constructions of ID-PKC systems, considered thus far an
open problem. The ﬁrst scheme by Cocks [2] using the
quadratic residues, whereas the second one by Boneh and
Franklin [3] using Weil pairings on elliptic curves.
Boneh and Franklin construction have widely opened
doors to an important development in recent years. Thus,
a ﬂurry of schemes have been proposed, improved, proven
secure, and security formal models have been more and
more strengthen. However, the deployment of practical ID-
based systems have not followed the same rhythm of these
theoretical improvements and the few systems’ implementa-
tions proposed deal with a set of particular limited scenarios.
[4] pointed-out that the deployment of an ID-based system
requires an infrastructure as complex as a PKI. Chen et al.
[5] presented a hybrid scheme combining traditional PKI
with ID-PKC in a multi-authority environment.
Interoperability issues of ID-PKC and PKI are also dis-
cussed in [6]. Whereas many works studied key issuing
protocols [3], [7], [8], [9], [10], [11] presenting wide rage
solutions of key escrow problem, but none of the proposed
solution is perfect and key escrow is steal an issue facing
the deployment of ID-based systems. In the same scope [12]
developed an architecture model for distributed PKG, using
PKI, for internet applications. Recently, Chow [10] exploited
the anonymity propriety to ﬁght against key escrow problem
by deﬁning an anonymous key issuing protocol for Gentry
scheme.
We organize the rest of the paper as follows. In Section
II, we give related work and our contribution. In Section
III, we give some preliminaries. In Section IV, we deﬁne
the general framework and architecture along with security
requirement. In Section V, we present a construction of a
35
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

2
distributed AKI for SK-IBE scheme. Finally, we conclude
in Section VI.
II. RELATED WORK
Key escrow problem made the deployment of practical ID-
PKC cryptosystems limited to small and relatively closed
organisations where the trust in PKG is very heigh. To
tackle this restriction and extend the use of ID-PKC in
scenarios equivalent to the ones of PKI-based PKC, key
issuing protocols are studied. These protocols allow the user
to have his key without leakage. We classify key issuing
protocols into three main categories described hereafter.
Multi-authorities and distributed protocols. in addition of
key escrow problem, this approach deal with the problem of
single point of failure. [3], [13], [14], [15], [16] proposed
different but related approaches to split the master secret
key to multiple KGCs. The user obtains a partial private key
from each KGC and reconstructs his private key in threshold
manner. [7], [17] used the concept of key privacy authorities
KPA to deliver user’s private key in blinded manner using a
single KGC and multiple KPA. Recently, Geisler and Smart
[11] proposed distribution version of sakai-kasahara based
systems, Kate and Goldberg [18] developed a distributed
private-key generators for three IBE schemes along with
their security proofs.
Anonymous protocols. Anonymous key issuing protocols
where ﬁrst considered by Sui et al. [19] where they separate
authentication phase from key issuing by using a database
to store identities and corresponding passwords, whereas the
fact of using the database gives the KGC the capability
to link key requests with user’s identity and break the
anonymity of the proposed protocol. Recently, chow [10]
extended the anonymity notion to ﬁght against adversaries
who hold the master key and proposed an anonymous
key issuing protocol for a modiﬁed gentry IBE scheme.
However, as chow pointed out, the proposed protocol has
a major drawback where the KGC can generate all possible
user private keys by guessing user identities according to
some dictionary.
User-chosen secret information. Another approach have
been introduced by [8], [9] who proposed respectively
the concept of Certiﬁcate-Based Encryption (CB-PKC) and
Certiﬁcateless Cryptography (CL-PKC). These two solutions
avoid successfully the escrow problem by combining ad-
vantages of traditional PKC and ID-PKC to create a hybrid
model. However, as already evoked in [7] these approach
loose the main propriety of an IBE system in which the
user public key is derived from his identity, and thus are not
considered purely IBE systems.
A. Our contribution.
The main idea behind our protocol is to combine multi-
authorities approaches with anonymous protocols in order
to develop a new class of protocols. In [10], the use of
an anonymous protocol prevent the KGC, or an adversary
having access to the master key, from linking user’s identity
to the private key generated for that identity. However, the
KGC can still generate private keys for identities of his
choice (ie. by guessing users’ identities) and then proceed
by an off-line analysis of messages ﬂow by trying to
decrypt messages using the key generated. To overcome
this drawback, we propose to extend the anonymous key
issuing protocol in [10] to prevent the KGC from this
capability by distributing the KGC master secret key over
multiple authorities in conjunction with a certiﬁcation
authority CA to authenticate users and deliver new kind of
certiﬁcates by signing on a committed value of the user
identity, the same way as in [10]. The certiﬁcate will be
presented by user to each one of the n KGC to get his
private key. This new architecture, will solve key escrow
problem and single point of failure. Our contribution can
also seen as an extension of the distributed protocols in
[11], [18] to support user anonymity.
III. PRELIMINARIES
A. Bilinear pairings
Let G1, G2, GT be cyclic groups of prime order q, P1
a generator of G1, and P2 a generator of G2. A bilinear
pairing e is a map deﬁned by e: G1x G2 → GT with the
following properties:
1) Bilinear : e(aP, bQ) = e(P, Q)ab, ∀P ∈ G1, Q ∈ G2
and a, b ∈ Z∗
q.
2) Non degeneracy : e(P1, P2) ̸= 1.
3) Efﬁciently computable: there exists an efﬁcient algo-
rithm to compute e(P, Q) for all P ∈ G1, Q ∈ G2.
B. Distributed key generation
Hereafter we give a quick review of the distributed
computation primitives used in this work, for more details
we refer the reader to [18]. Distributed key generation DKG
is introduced by Pederson [20], who developed a DKG that
requires no dealer. An (n, t) DKG is composed of n nodes
that generate a secret z ∈ Zp in a distributed fashion. Each
node gets a share zi ∈ Zp such that any subset of size greater
than t could reconstruct the secret.
Shares Generation. depending on weather we use discrete
logarithm (Dlog) or Pedersen (Ped) commitments, nodes use
one of the two protocol (RandomDlog(), RandomP ed())
to generate shares of a secret z ∈ Zp chosen jointly at
random.
1)

C(z)
⟨g⟩, zi

= RandomDLog(n, t, g)
2)

C(z,z,)
⟨g,h⟩ ,
h
C(z)
⟨g⟩, NIZKPK≡com
i
, zi, z,
i

=
RandomP ed(n, t, g, h).
36
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

3
Recall
that

C(z)
⟨g⟩

= [gz, gφ(1), ..., gφ(n)]
and

C(z,z,)
⟨g,h⟩

= [gzhz,, gφ(1)hφ
′(1), ..., gφ(n)hφ
′(n)]
are
respectively
Discret
log
and
Pedersen
commitment
victors for z, and φ, φ
′ ∈ Zp[x] are polynomials of degree
t where φ(0) = z, φ
′(0) = z
′, φ(i) = zi, and φ
′(i) = z
′
i.
Distributed Multiplication. for distributed multiplication
we
use
the
second
protocol
from
[18]
that
uses
a
multiplication protocol against computational adversaries
with a non-interactive proof of knowledge deﬁned as
follows.

C(αβ,αβ
′)
⟨ˆg,ˆh⟩
, (αβ)i, (αβ
′)i

=
MulP ed
(n, t, ˆg, ˆh,

C(α)
⟨g⟩ , αi

,

C(β,β
′)
⟨ˆg,ˆh⟩ , βi, β,
i

).
By this each node computes locally the share of the product
of two shared secrets α, β.
C. Sakai-Kasahara-IBE
SK-IBE Setup(λ): Given the security parameter λ, the
parameter generator follows the steps.
1) Generate three cyclic groups G1, G2, GT of prime
order q, a bilinear pairing map e : G1 x G2 → GT
and random generators (g, ˆg) for respectively G1, G2.
2) Pick
four
cryptographic
hash
functions
H1
:
{0, 1}∗
−→
Zp, H2
:
G2
−→
{0, 1}n, H3
:
{0, 1}nx{0, 1}n → Z∗
q and H4 : {0, 1}n → {0, 1}n
for n > 0.
3) Pick a random s ∈ Z∗
q and compute pk = gs
The
public
parameters
are
params
=
(q, G1, G2, GT , e, n, g, ˆg, gs, H1, H2, H3, H4)
SK-IBE Extract(msk, ID): the private key dID of user
having ID as identity is computed bay:dID = ˆg
1
s+H1(ID)
SK-IBE
Encryption(mpk, ID, m)
:
to
encrypt
a
k
′
bit
length
message
M,
the
sender
picks
at
random
σ
∈
{0, 1}k
′
,
computes
r
=
H3(σ, M),
hID
=
H1(ID)
and
sends
the
cyphertext
C = (u, v, w) = ((gsghID)r, σ ⊕H2(e(g, ˆg)r), M ⊕H4(σ))
to the recipient.
SK-IBE Decryption(dID, c): to decrypt the cyphertext C =
(u, v, w) with the private key did, the receiver successively
computes σ = v ⊕ H2(e(u, did)), M = σ ⊕ H4(σ), r =
H3(σ, M). If (gsghID)r ̸= u then C is rejected else M is a
valid message.
D. Anonymity in IBE
Anonymity against user attacks for IBE was introduced
ﬁrst by Abdella et al. [21] similarly to semantic security.
The attacker’s goal is to distinguish the intended recipient
of a ciphertext between two chosen identities.The previous
deﬁnition of anonymity cannot provide security against
KGC attacks. Recently, this notion was strengthen and
extended to handle KGC attacks by two independent
works [22], [10]. Izabachne and pointcheval [22] called
it KwrtA-Anonymity (Key Anonymity with respect to
the Authority) and applied it in password-authenticated
key exchange. Whereas, Chow [10] called it ACI − KGC
(Anonymous Cyphertext Indistinguishability) and used it to
ﬁght against key escrow.
IV. GENERAL FRAMEWORK
We extend the framework given in [10] to support the
distributed architecture. We assume the existence of a certi-
ﬁcation authority CA and multiple key generation centres.
A. Entities and Their Roles
The entities involved the new architecture are as follows.
• CA: certiﬁcation authority is a trusted authority in the
standard PKI based model. The CA is responsible for
checking users identities and certiﬁcate issuing, it is
clear that CA holds the identity list of all users in
the system. CA has a master secret key skcert and the
corresponding public key pkcert.
• n KGC: multiple authorities for user key generation
using (n, t) threshold secret sharing scheme and without
knowing the identity of the user. Each KGC has a secret
key si and the corresponding public key pki. We make
the assumption that CA doesn’t collude with KGCs,
otherwise the user anonymity can be broken.
• User: he should ﬁrst present authenticate himself to the
CA which issue a certiﬁcate on a commitment on the
user identity. Then he presents his certiﬁcate to each
one of the t KGCs to get partial private keys. Finally,
the user compute his private key by interpolation.
B. AKI for distributed IBE
D´eﬁnition 4.1: (AKI for (n, t) IBE) an anonymous key
issuing protocol for (n, t) IBE scheme consists of compo-
nents (SIGN, P − SIGN,DKG,C) speciﬁed as follows:
1) SIGN: signature scheme run by CA to generate
user certiﬁcate. The certiﬁcate is delivered to the user
securely and is presented by user to KGC. Note that
the certiﬁcate doesn’t contain user’s name and not used
anywhere else in the system.
2) P − SIGN: p-signature scheme [23] that allows the
user, with a private input, to get a signature on a
commuted value of the identity without revealing it to
the signer. Note that p-signature is a primitive that uses
secure two-party computation protocol on committed
values.
3) DKG: Distributed key generation protocol, that takes
as input the security parameter λ , the threshold
parameters (t,n) and outputs for each player Pi (for
i = 1, ..., n) a share si of the master secret key s and
37
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

4
a public-key vector Kpub of a master public key and
n public-key shares.;
4) C: non interactif commitment scheme.
More formally, An AKI-protocol for (n, t) IBE scheme
is deﬁned by the following algorithms as follows:
(pkCA, skCA, certCA)
←
SetupCA(λ): probabilistic
algorithm executed by CA, it takes as input security
parameter λ and returns CA public key pkCA, master secret
key skCA, and CA certiﬁcate certCA.
(certU, open)
←
CertIssue(skCA, ID): probabilistic
algorithm
executed
by
CA
to
deliver
certiﬁcates
to
users.
It
takes
as
input
CA
secret
key
skCA,
user
identity
ID
and
returns
user
certiﬁcate
certU
= (sig, comm, open), where open is chosen at
random from the decommitment-string space and sig is a
signature on comm = Commit(H(ID), open), where H
is a hash function.
(s1, pk1, ..., sn, pkn, pk)
←
DKeyGen(λ, t, n):
distributed
key
generation
protocol
runs
between
the
n KGC and results in each KGC obtaining a share si ∈ Zq
of the master secret s. The tuple (pk, pk1, ..., pkn) is the
system public-key.
ObtainKey(U(params, id, certU, open))
↔
IssueKey
(KGCi(params, si, certU)) : an interactive protocol, using
a secure two-party computation protocol, executed between
user U and KGCi for i = 1, ...t + 1 (t + 1 out of n KGC).
U takes as input master public key mpk, the identity id,
certiﬁcate cert, opening information open and gets a partial
secret key d(i)
id as output. KGCi takes as input master secret
key si, user certiﬁcate certU and gets nothing as output.
ReconstructKey(d(1)
id , ..., d(t+1)
id
): upon receiving t + 1 par-
tial private key, user reconstructs his private keys in threshold
manner.
C. Security requirements
D´eﬁnition 4.2: (Secure AKI :) an anonymous key is-
suing protocol for (n, t) IBE is secure if: (1) p-signature
scheme is unforgeable and satisﬁes signer privacy and user
privacy; (2) DKG protocol satisﬁes correctness and secrecy;
(3) commitment scheme is perfectly binding and strongly
computationally hiding.
V. CONSTRUCTION
chow [10] argued that SK-IBE can be made ACI − KGC
the same way as gentry scheme by separating parameters
generation from key generation. Admitting this fact, here-
after we modify SK-IBE to support anonymity against KGC
and give an anonymous key issuing protocol. p-signature
scheme from [23] is used in [10] to construct an anonymous
key issuing protocol for modiﬁed gentry scheme, assuming
the same framework architecture, we adapt this protocol
to a modiﬁed version of SK-IBE scheme that supports
ACI − KGC.
A. AKI for SK-IBE scheme
Setup
public
parameters
are
generated
by
trusted
initializer
as
follows.
params
=
(q, G1, G2, GT , e, n, g, ˆg, H1, H2, H3, H4)
SK-IBE KeyGen: the KGC randomly chooses an exponent
s and computes gs. (s, gs) is the private/public key pair of
the KGC.
Encrypt(),
Decrypt(): these algorithms remain as in
the original version, whereas the private key extraction
algorithm Extract() is modiﬁed as follows.
ObtainKey(U(params, id, certU, open))
↔
IssueKey
(KGC( params, msk, certU)) :
• User presents his certiﬁcate certU to KGC, the latter
veriﬁes certiﬁcate signature using the CA public key
pkcert if certiﬁcate veriﬁcation fail it aborts the proto-
col.
• The user chooses at random ρ in Zq;
• The user and KGC engage in a secure two-party
computational protocol[24], where the user’s private
input is (ρ, H1(ID), open), and the KGC’s private
input is msk. As result, the KGC gets a private output
which is either x = (x + H1(ID))ρ if comm =
commit(H1(ID), open) or ⊥ in this case the KGC
aborts.
• if x ̸=⊥ the KGC send σ
′ = ˆg
1
x to the user;
• the user computes, upon receiving σ
′, σ = (σ
′)ρ =
ˆg
1
msk+H1(ID) .
B. Security analysis
Recall the deﬁnition of p-signature, which is a signature
on a committed message without revealing the message
using a secure two-party computation protocol on committed
inputs, the user private key in SK-IBE scheme can be seen as
the ﬁrst p-signature [23]. Thus, the above protocol is a direct
application of the weak p-signature scheme proposed in [23],
proven secure, and having properties: Signer Privacy, User
privacy, Correctness, Unforgeability, and Zero-Knowledge.
Intuitively, security in the above protocol concerns two
entities KGC and user. Following the same analysis in [10]
the above protocol is secure if the underlying p-signature
scheme is secure and the Signer Privacy, User privacy
properties hold. In one hand, Signer Privacy ensures that
a malicious user interacting with the KGC can’t get any
information on KGC master secret key other than user
private key. On the other hand, the certiﬁcate presented by
38
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

5
the user to a malicious KGC reveals no information about
the real identity of the user.
VI. DISTRIBUTED ANONYMOUS SK-IBE
A. AKI for distributed SK-IBE
Smart el al. [11] presented a distributed version of Sakai-
Kasahara scheme, in this section we give a modiﬁcation of
this scheme combined with the IND-ID-CCA scheme from
[18], which we call DSK-IBE, assuring user anonymity
when generating his private key by KGC. As in Chow [10],
master key generation is separated from the Setup stage,
reducing further trust required in the KGC.
DSK-IBE Setup : We ﬁrst deﬁne explicitly the system’s
public parameters. Let G1, G2 and GT denote groups of
large prime order q, which are equipped with a bilinear
pairing, e : G1 x G2 → GT . We assume that G1, G2
are respectively generated by g and ˆg. We deﬁne four
hash functions, H1 : {0, 1}∗ → Z∗
q, H2 : GT → {0, 1}n,
H3 : {0, 1}nx{0, 1}n → Z∗
q and H4 : {0, 1}n → {0, 1}n
for n > 0.
DSK-IBE KeyGen : distributed protocol runs between the
n KGC and results in each KGC obtaining a share si ∈ Zq
of the master secret s. The tuple C(s)
⟨g⟩ = [gs, gs1, ..., gsn]
is the system public-key. Note that a coalition of upto t
entities should gain nothing about s, whereas t + 1 entities
could reconstruct the secret s.
ObtainKey(U(params, id, certU, open))
↔
IssueKey
(KGCi(params, si, certU)) : DAKI protocol run between
m KGCs (t < m ≤ n) to produce m outputs d(i)
id which
are shares of private key did. We modify the distributed
SK-IBE Private key extraction [18] by adding steps 1 to 3
which made the protocol anonymous as follows:
1) User presents his certiﬁcate certU to each one of the
t+1 KGC, the latter veriﬁes certiﬁcate signature using
the CA public key pkcert if certiﬁcate veriﬁcation fail
it aborts the protocol.
2) The user chooses at random ρ in Zq;
3) The user and KGCi (for i = 1, ..., t) engage in a
secure two-party computational protocol [24], where
the user’s private input is (ρ, H1(ID), open), and the
KGCi’s private input is si. As result, the KGCi gets a
private output which is either SID
i
= (si +H1(ID))ρ
if com = commit(H1(ID), open) or ⊥ in this case
the KGCi aborts.
4) KGCi runs

C(z,z,)
⟨ˆg,ˆh⟩ , zi, z,
i

= RandomP ed(n, t, ˆg, ˆh),
where
ˆh
∈
G2
is
a
generator
for
Pedersen
commitments
precomputed
by
KGCs
using

C(r)
⟨ˆg⟩

= RandomDLog(n, t, ˆg),
and
set
ˆh
=

C(r)
⟨ˆg⟩

0
=
ˆgr.
KGCi
also
computes

C(SID
i
)
⟨g⟩

j = g(sj+H1(ID))ρ for 0 ⩽ j ⩽ n.
5) KGCi
runs

C(w,w,)
⟨ˆg,ˆh⟩ , wi, w,
i

=
MulP ed
(n, t, ˆg, ˆh,

C(SID
i
)
⟨g⟩
, SID
i

,

C(z,z,)
⟨ˆg,ˆh⟩ , zi, z,
i

),
where
w = sIDz = (s + H1(ID))ρz, w, = sIDz, =
(s + H1(ID))ρz, and sends

C(w,w,)
⟨ˆg,ˆh⟩ , wi

along with
PK(i)
1
= NIZKPK≡com(wi, w,
i,

C(w)
⟨ˆg,⟩

i ,

C(w,w,)
⟨ˆg,ˆh⟩

i)
to the user.
6) KGCi
sends
to
the
user

C(z)
⟨ˆg⟩

i
=
ˆgzi
and
C(z,z,)
⟨ˆg,ˆh⟩
along
with
PK(i)
2
= NIZKPK≡com(zi, z,
i,

C(z)
⟨ˆg,⟩

i ,

C(z,z,)
⟨ˆg,ˆh⟩

i).
ReconstructKey(wi, ˆgzi, PK(i)
1 , PK(i)
2 ):
Upon
receiving
(wi, ˆgzi, PK(i)
1 , PK(i)
2 ) for (i = 1, ..., t + 1) the user do
the following computations:
1) veriﬁes

C(z)
⟨ˆg⟩

i using PK(i)
2 ;
2) reconstructs (w, gz) using Lagrange interpolation;
3) if w
=
0 it aborts else it computes w−1
=
1
(s+H1(ID))ρz;
4) computes
his
private
key
by:
did = (ˆgz)w−1ρ =

ˆg
1
(x+H1(ID))ρ
ρ
= ˆg
1
x+H1(ID)
B. Analysis
The above (n, t) SK-IBE scheme, without the anonymity
propriety, was proven IND-ID-CCA secure in [18], assuming
a standard t-limited Byzantine adversary in a system with n
nodes, where any t nodes are compromised by the adversary.
In contrast of this, and by adding steps (1) to (3), the
obtained protocol is a distributed form of the p-signature
scheme given in [23]. We argue that the new anonymous
(n, t) SK-IBE scheme is IND-ID-CCA secure assuming the
three following statements: (1) (n, t) SK-IBE scheme in [18]
is IND-ID-CCA, (2) the underlying distributed p-signature
scheme is unforgeable, satisﬁes issuer and user privacy, (3)
the signature scheme used by CA is unforgeable.
Two primitives in the above construction are concerned by
this analysis. Firstly, p-signature security follows the same
rules as in Section (V.B) and results on user privacy, where
a malicious KGC can’t get any information about the real
identity id of the user contained in the certiﬁcate certU
(this is ensured by the CA signature scheme proprieties
that signs on a strongly computationally hiding commitment
of id). For KGCs privacy, due to the proprieties of the
underlying secret sharing scheme, a malicious user can’t
get any information about KGC partial private key because
shares he obtain (wi, ˆgzi) reveal no information. Secondly,
the signing algorithm of the certiﬁcation authority is not
speciﬁed, so the use of an unforgeable signature scheme, that
signs on a perfectly binding and strongly computationally
hiding commitment of the identity included in the certiﬁcate,
should be ﬁne for our purpose of security.
39
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

6
VII. CONCLUSION
In this paper, we proposed an architecture for developing
new class of distributed key issuing protocols that have the
privacy-preserving propriety. Assuming this architecture, we
proposed a new anonymous key issuing protocol for the
distributed SK-IBE, which belongs to the exponent-inversion
family, along with a informal security analysis.
Our construction is based on the recently proposed dis-
tributed private key generator [18], [11] combined with
the anonymous key issuing protocol [10] thus coupling
advantages of the two approaches. The proposed protocol
aims to solve key escrow problem and single point of failure
in IBE systems, which will reduce trust needed in KGC.
Further work is required to extend the proposed protocol
to other IBE frameworks (i.e. commutative-blinding IBEs
and full-domain-hash IBEs), and to deﬁne a formal security
model.
REFERENCES
[1] A. Shamir, “Identity-based cryptosystems and signature
schemes,” in CRYPTO 84, 1985, pp. 47–53.
[2] C. Cocks, “An identity based encryption scheme based on
quadratic residues,” in 8th IMA International Conference, ser.
volume 2260 of LNCS. Springer Berlin, 2001, pp. 360–363.
[3] D. Boneh and M. Franklin, “Identity-based encryption from
the weil pairing,” in Proceedings of the 21st Annual Interna-
tional Cryptology Conference on Advances in Cryptology, ser.
volume 2139 of LNCS. Springer Berlin, 2001, pp. 213–229.
[4] Y. Desmedt and M. Burmester, “Identity-based key infrastruc-
tures iki,” in SEC 2004, 2004, pp. 167–176.
[5] L. Chen, K. Harrison, A. Moss, D. Soldera, and N. Smart,
“Certiﬁcation of public keys within an identity based system,”
in ISC 2002, ser. volume 2433 of LNCS, Springer-Verlag.
Canterbury, UK, June 30 July 1, 2005, pp. 322–333.
[6] G. Price and C. J. Mitchell, “Interoperation between a conven-
tional pki and an id-based infrastructure,” in EuroPKI 2005,
ser. volume 3545 of LNCS.
Canterbury, UK, June 30 July
1, 2005, pp. 73–85.
[7] B. Lee, C. Boyd, E. Dawson, K. Kim, J. Yang, and S. Yoo,
“Secure key issuing in id-based cryptography,” in proceedings
of the Second Australian Information Security Workshop-
AISW 2004, ACS Conferences in Research and Practice in
Information Technology vol.32, 2004, pp. 69–74.
[8] C. Gentry, “Certiﬁcate-based encryption and the certiﬁcate re-
vocation problem,” in Advances in Cryptology - EUROCRYPT
2003, ser. volume 2653 of LNCS.
Springer Berlin, 2003,
pp. 272–293.
[9] S. Al-Riyami and S. Paterson, “Certiﬁcateless public key
cryptography,” vol. 2894.
Springer-Verlag, 2003, pp. 375–
391.
[10] S. Chow, “Removing escrow from identity-based encryption,”
in 12th International Conference on Practice and Theory in
Public Key Cryptography, 2009, pp. 256–272.
[11] M. Geisler and N. P. Smart, “Distributing the key distribution
centre in sakai-kasahara based systems,” in Conf. on Cryp-
tography and Coding 09, 2009, pp. 252–262.
[12] A. Kate and I. Goldberg, “A distributed private-key generator
for identity-based cryptography, cryptology eprint archive,
report 2009/355,” Tech. Rep., 2009.
[13] L. Chen, K. Harrison, N. P. Smart, and D. Soldera, “Infrasec
2002,” in Applications of multiple trust authorities in pairing
based cryptosystems, ser. volume 2437 of LNCS, Springer-
Verlag, 2002, pp. 260–275.
[14] K. Paterson, “Cryptography from pairings: a snap shot of
current research,” Information Security Technical Report 7
(3), Tech. Rep., 2002.
[15] F. Hess, “Efﬁcient identity based signature schemes based
on pairings,” in Selected Areas in CryptographySAC 02, ser.
volume 2595 of LNCS, Springer-Verlag, 2002, pp. 310–324.
[16] S. Kwon, “Cryptanalysis for secure key issuing in id-based
cryptography and improvement, manuscript,” Tech. Rep.,
2004.
[17] B. Lee, E. Dawson, and S. Moon, “Efﬁcient and robust
secure key issuing in id-based cryptography,” in proceedings
of the 6-th International Workshop on Information Security
Applications (WISA 2005), 2005, pp. 267–280,.
[18] A. Kate and I. Goldberg, “Distributed private-key generators
for identity based cryptography,” in To appear at SCN 10,
2010.
[19] A. Sui, S. S. M. Chow, L. C. K. Hui, S. M. Yiu, K. P.
Chow, W. W. Tsang, C. F. Chong, K. H. Pun, and H. W.
Chan, “Seperable and anonymous identity-based key issuing
without secure channel,” in 11th Intermational Comference
on Parallel and Distributed Systems ICPADS, ser. volume 2,
2005, pp. 275–279.
[20] T. P. Pedersen, “Non-interactive and information-theoretic
secure veriﬁable secret sharing,” in Cryptology CRYPTO 91,
1991, pp. 129–140.
[21] M. Abdalla, M. Bellare, D. Catalano, E. Kiltz, T. Kohno,
T. Lange, J. Malone-lee, G. Neven, P. Paillier, and H. Shi,
“Searchable encryption revisited: Consistency properties, re-
lation to anonymous ibe, and extensions,” in In CRYPTO.
Springer-Verlag, 2005, pp. 205–222.
[22] M. Izabachene and D. Pointcheval, “New anonymity notions
for identity-based encryption,” in the 6th international con-
ference on Security and Cryptography for Networks, 2008,
pp. 375–391.
[23] M. Belenkiy, M. Chase, M. Kohlweiss, and A. Lysyanskaya,
“P-signatures and noninteractive anonymous credentials,” in
In Theory of Cryptography Conference, 2008, pp. 356–374.
[24] S. Jarecki and V. Shmatikov, “Efﬁcient two-party secure
computation on committed inputs,” in EUROCRYPT 07, 2007,
pp. 97–114.
40
ICN 2011 : The Tenth International Conference on Networks
Copyright (c) IARIA, 2011              ISBN:978-1-61208-113-7

