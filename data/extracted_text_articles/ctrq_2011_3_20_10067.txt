Novel Load Balancing Scheduling Algorithms for
Wireless Sensor Networks
Endre L´aszl´o, K´alm´an Tornai, Gergely Trepl´an
Faculty of Information Technology
Pazmany Peter Catholic University
Budapest, Hungary
lasen@digitus.itk.ppke.hu,
tornai.kalman@itk.ppke.hu, trege@itk.ppke.hu
J´anos Levendovszky
Department of Telecommunications
Budapest University of Technology and Economics
Budapest, Hungary
levendov@hit.bme.hu
Abstract—In this paper, optimal scheduling mechanisms are
developed for packet forwarding in wireless sensor networks,
where clusterheads are gathering information. The objective is to
monitor real-life processes for a given time interval and forward
packets with minimum loss probabilities to the base station. In
order to achieve this objective we develop an optimal scheduling
algorithm, which determines the time slots in which packets must
be sent by the nodes. The scheduling algorithm, on the one hand,
guarantees that all the packets will be sent within a predeﬁned
time window and thus meeting delay constraints and, on the other
hand, it provides uniform packet loss probabilities for all the
nodes. The algorithm we propose is capable of providing optimal
scheduling with given constraints and guarantees balanced load
in polynomial time.
Index Terms—load balancing, scheduling, wireless sensor net-
works (WSN), numerical optimization
I. INTRODUCTION
Data gathering from a set of sensor nodes to a Base Station
(BS) by using a cluster-based routing topology is commonly
used in wireless sensor networks (WSNs) [1], [2]. In this kind
of networks tiny sensor nodes communicate in short distances
and collaboratively work to fulﬁll the application speciﬁc
objectives of WSN. Many of the envisioned applications
involve the collection of bursty data trafﬁc generated by events,
which are to be delivered to the BS as quickly and as reliably
as possible in order to recognize emergency situation. In these
applications packet delay and packet loss probability are of
crucial importance [3], [4].
Resources (energy, time, bandwidth) are limited in WSN
applications, hence cross-layer optimization are the key ap-
proach to minimize the utilization of resources if the Quality
of Service (QoS) is prescribed.
Because of these strong limitations, scheduling becomes
even more important in WSN to save on energy consumption.
In this paper we develop a new scheduling algorithm for
packet transfer in WSN, which guarantees reliable information
transmission to the BS in terms minimizing the packet loss
probabilities. Packet loss occurs when the amount of packets
forwarded to the CHs exceed their capacity. Scheduling has
been intensively researched in the telecommunication litera-
ture [5], [6], [7], however the main focus was on buffered
architectures. The problem in our case will be transformed
into a binary matrix optimization. So far, this has been solved
by quadratic programming (see [8]). Now a novel solution is
presented, which will provide the optimal scheduling matrix
in polynomial time. Since clusterhead (CH) based routing is
a commonly used solution in WSN (e.g., LEACH protocol
[9] or other hierarchical solutions proposed in [10], [11]), we
assume that each node can only send one packet to a selected
CH at each time instant.
After the system and the application are brieﬂy introduced,
the network model and the mathematical model are detailed.
The formulation and transformation of the original problem
into a matrix optimization task is followed by the performance
analysis and the conclusion of our work.
II. SYSTEM DESCRIPTION AND APPLICATION
The algorithm introduced in this paper is concerned with
applications when the trafﬁc generated by the sensor nodes are
classiﬁed into trafﬁc classes (e.g., motion detection, acoustic
signals, video signals, ...etc.) The WSN architecture is single-
tier clustered with heterogeneous sensors and performing
centralized processing [12]. The CHs forward the received
packets to the BS over a link with capacity V . As a result
V presents a limit to the packets can be collected from nodes
in a given time instant. In order to collect all the packets the
CH assigns timeslots to the nodes for acquiring their packets.
This timeslot assignment is referred as a scheduling. In this
scheme, each trafﬁc class has two parameters:
• the amount of packets to be transmitted to the CH;
• the time duration in which this given amount of packets
must arrive at the CH.
The target platform is the Berkeley Mica2 mote [13],
which is one of the most widely used WSN platforms. The
platform has an 8 MHz processor, 4 kB of RAM, 128 kB
of ﬂash memory and a 433 MHz wireless radio transceiver.
The transfer rate is 38.4 kbps and it is powered by two AA
batteries.
TinyOS operating system [14], [15] is designed to be used
with networked sensors and it supports the Mica2 platform.
TinyOS handles task scheduling, radio communication, clock
and timers, ADC and power management.
54
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

In the case of Mica2, a fully programmable Media Access
Control (MAC) layer is available. A time division multiple
access (TDMA) channelization is supported in the case of such
simple and energy constrained nodes. Plenty of channel access
method is proposed for WSN and there are two common
solutions. One solution is the contention based scheme where
nodes try to assign the channel randomly, independently from
each other, such as ALOHA [16]. ALOHA is improved in
many ways (such as B-MAC [17], Z-MAC [18], X-MAC
[19]) to guarantee performance metrics required by different
applications. Contention based protocols are very important
channel access methods in the case of rare but bursty trafﬁc,
which is the typical case of event driven applications. On
the other hand TDMA-based scheduled solutions could be
very efﬁcient if the users are known and ﬁx, the data arrives
regularly (e.g.: every one minutes the temperature value must
be delivered to the BS) and topology is static. TDMA-based
protocol can also save more energy, since each node can stay
in sleep mode except for its own slot time. However TDMA-
based protocols need synchronization protocols [20] affecting
the guard time [21], time slot assignment [22] determining
the end to end delay and scheduling. Scheduling protocols
choose the order of the data transfer at the different links [23].
In this paper we propose Load Balancing Scheduling (LBS)
algorithm, which minimizes the probability of cell loss.
In the following section the mathematical model will be
introduced.
III. THE MODEL
The overall number of packets node j wants to send to
the CH is denoted by Xj. All of the packets must be sent
within a time interval Kj : Kj > Xj. The scheduling of
packet transmissions by node j can be expressed by a binary
vector c(j) of length Kj with weight Xj, where component
cj(l) ∈ {0, 1} indicates whether packet is transmitted or not
to the CH at time instance l.
Composing a transmission matrix C of these vectors, one
may seek the optimal matrix (Copt). To ﬁnd the optimal
matrix, we present a novel approach based on a constructive
iteration, solving the problem in polynomial time.
The data acquisition network can be divided into two parts:
• The sensors performing measurements in the different
rooms.
• Relay nodes, which are forwarding the packets containing
the measurements to the BS.
In Figure 1 the different application classes correspond to
different rooms in a building. Each room has different Xj, i.e.,
one requests a given amount of data from every room. The data
is collected by the sensor node from its sensors and stored for
transmission. In the beginning of the communication Xj-s are
transferred to the sensors nodes, where the calculation of Kj-s
are performed based on the battery status and returned to the
CH. The optimal scheduling matrix is then constructed by the
CH. In each time-slot, V amount of data is sent to the CH
corresponding to the l-th column of the scheduling matrix.
Room1
Room2
Room3
Room4
CH
CH
CH
Relay network
Fig. 1.
WSN communication scenario with sensor nodes and CHs
This V amount of data is then sent to the relay nodes of the
network in order to forward them to the BS.
The nodes performing the measurements are small size
units with a variety of sensors included with strong energy
and processing limitations. Energy is used either in stand-by
mode or in active mode when they are engaged with radio
transmission (packet forwarding). The available energy at node
j is denoted by Gj, while the energy consumption in active
node is gtx and in stand-by is gsleep. If the node sends Xj
amount of packets and it switches off after Kj timeslot, then
the overall energy consumption can be given as
Gj = (Kj − Xj) · gsleep + Xj · gtx.
(1)
As Gj is limited (due to the battery capacity) based on this
expression one can determine what is the maximal Kj needed
to transmit a given amount packets by the sensor node. As far
as the relay nodes are concerned, they have more energy than
the sensor nodes. Each room has a relay node, which acts as
a CH. The CH can only receive V number of packets in a
time frame due to its capacity. In the case of TDMA, V is the
number of slots accommodated in a time frame. The task of
scheduling is to assign time slots to the sensor nodes in such
a way that the Xj number of packets are sent in Kj time
and the probability of packet loss (in a given time slot more
than V sensor nodes are sending packets to the CH) must be
uniformly distributed.
Timeframe, size: V
1
2
...
v
...
W
1
2
...
v
1
2
...
v
Fig. 2.
Typical structure of TDMA timeframes
The number of timeframes available in a relay node is
denoted by W. The number of available timeslots in each
55
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

timeframe is denoted by V . These slots are summarized on
Figure 2. In a TDMA protocol each node has a dedicated
timeslot in every timeframe wherein it may send its packet to
its parent node.
A. Mathematical model
Let us assume that there are J number of nodes transmitting
packets to a speciﬁc cluster head. The capacity of the cluster
head in a time frame is denoted by V . This capacity means
the amount of packet can be received in one time frame, the
number of time slots. The amount of packets to be sent by
node j is denoted by Xj, while the time constraint in which
the transmission is to be ﬁnished is denoted by Kj. Xj is
initially deﬁned and using the equation (1) the Kj can easily
be calculated.
The time is measured in discrete units thus Kj, j = 1, . . . , J
are assumed to be integers. The scheduling of node j is
represented by a binary vector cj
∈ {0, 1}Kj where if
cj(l) = 1 then a packet is sent to the cluster head at time
instant l. The scheduling matrix C can be constructed from
vectors cj, j = 1, . . . , J, which form the row vectors of C
and the number of columns is taken as L = arg maxj Kj. For
example in the case of J = 6, X1 = 5, X2 = 5, X3 = 4,
X4 = 3, X5 = 3, X6 = 7, K1 = 6, K2 = 8, K3 = 7, K4 = 6,
K5 = 4, and K6 = 8 one speciﬁc scheduling matrix looks as
follows:
Cvalid =








1
1
0
1
1
1
0
0
0
1
1
0
1
0
1
1
1
0
1
1
0
1
0
0
0
0
0
1
1
1
0
0
1
1
1
0
0
0
0
0
1
1
1
1
1
1
1
0








.
In this example the capacity of the CH was V = 4, and as it
can be seen the number of ones are balanced. The following
example for C matrix is not valid and unbalanced, and this
scheduling overloads the CH.
Cinvalid =








1
1
0
1
1
1
0
0
0
1
1
0
1
1
0
1
0
0
1
1
1
1
0
0
0
0
0
1
1
1
0
0
1
0
1
1
0
0
0
0
1
1
1
1
1
1
1
0








.
The aggregated number of incoming packets in the cluster
head at time instant l is given as PJ
j=1 cj(l) being the
weight of the lth column vector in matrix C. The cost of
reception (which needs the power of CHs) is proportional to
the number of received packets at time instant l expressed as
al := PJ
j=1 cj(l). We seek an optimal matrix Copt where
the aggregated number of incoming packets are balanced with
respect to time. More precisely, we try to achieve that nodes
schedule their packet transmission in such a way that each time
instant the cluster heads receive more or less the same number
of packets. This objective can be formulated as follows:
Copt : min
C
L
X
l=1
L
X
k=1


J
X
j=1
Cj,l −
J
X
j=1
Cj,k


2
.
(2)
The constraint can be expressed as PL
l=1 Cj,l = Xj, j =
1, . . . , J and if the last nonzero component of row j is at
location Mj, such that Mj : PL
l=1 Cj,l = Xj, j = 1, . . . , J
then Mj ≤ Kj, j = 1, . . . , J. We seek the balanced solution
by optimizing (2).
Furthermore we deal with the assumption that there is a loss
in the transfer of packets to the CH because of the overload of
the link. Namely, there exists no scheduling matrix for, which
the aggregated load does not exceed the throughput V of the
CH node, i.e., for every optimal scheduling matrix Copt there
exists at least one time instance when the aggregated load
exceeds the throughput:
∀Copt : ∃k, V <
J
X
j=1
Xj(k)
(3)
This assumption is important because it means that the
available bandwidth is fully utilized.
B. The scheduling protocol
In order to optimize matrix C we need parameters
Xj, Kj, j = 1, . . . , J. In the ﬁrst stage of the protocol we
deﬁne the amount of packets we want to acquire data from
the different sensor nodes (e.g. we want to get information
about the status of the adequate room), which will specify
parameters Xj, j = 1, . . . , J. In the forthcoming discussion
we deﬁne a communication protocol. Therefore, initially we
assume that in each room Xj, j = 1, . . . , J are given.
1) The nodes are synchronized using the Reference Broad-
cast Synchonization (RBS [24]) protocol, in order to use
the TDMA based package scheduling.
2) The values of Xj are sent to the sensor nodes in order to
specify the amount of packets to obatin a certain amount
of information about the status of room containing node
j.
3) Each sensor node determines the amount of timeframes
(Kj, j = 1, . . . , J, one timeslot in each timeframe),
wherein the Xj packets can be transmitted. In other
word, by using equation (1) they calculate Kj, j =
1, ..., J. This information is sent back to the CH.
4) Having Xj, Kj, j = 1, ..., J the CH will determine the
optimal scheduling matrix Copt.
5) If at any given timeslot an overload occurs (the weight
of a given column vector exceeds V ) then some ran-
domly selected packets are discarded subject to uniform
distribution. In this way, the fair treatment is provided
for all sensor nodes.
6) Each node will receive the corresponding row vector of
the optimized scheduling matrix Copt.
7) In operation the nodes are transmitting packets to the
CH only in those timeslot, which are indicated in the
received row vector.
56
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

In the next section, the optimization of matrix C is discussed
by using a constructive polynomial algorithm named LBS.
IV. SOLUTION BY POLYNOMIAL ALGORITHM: LBS
ALGORITHM
In this section a new algorithm is presented, which aims
at balancing the number of “1”-s in every column vector
of matrix C. The forthcoming algorithm is motivated by a
simple consideration that if the scheduling of the load can
be distributed uniformly over a given time interval, then the
packet loss is reduced to the minima. Any deviation from this
uniformity may cause loss to a given time instant, while in
other time slots under-utilization occurs.
Let the the matrix C initially be ﬁlled in with zeros. We
modify the matrix as Cl,k = 1 if k < Kl and l = arg minj Kj.
In this way, the algorithm will place L number if “1”-s in the
matrix at the ﬁrst L steps. One may see, that in each step that
speciﬁc node is selected, which has the smallest remaining
lifespan. After L steps the algorithm steps to the end of the
matrix and the previous steps this construction procedure is
repeated. Note that this algorithm will never put “1” in a place
where the constraints forbid it (Xj < Kj). The algorithm
terminates when all the prescribed Xj, j = 1, ..., J number of
packets are scheduled.
This method named LBS algorithm (Algorithm 1) can
formally be described as follows:
Algorithm 1 LBS algorithm
Require: ∀i = 1...J : Ki, Xi
L ← maxj Kj
C ← 0J×L
S ← P
j Xj
while S > 0 do {Number of unscheduled packets}
for l ← L to 1 do
Find arg mini Ki where (l < Ki) ∧ (Xi > 0)
S ← S − 1
Xi ← Xi − 1
Ci,l ← 1
end for
end while
Let us analyze the complexity of the newly proposed LBS
algorithm. We put the number of PJ
j=1 Xj “ones” into the
matrix and this can be upper bounded by JL. There is a
minimization phase in each insertion, which be evaluated in
time J. Thus, the overall complexity is as follows
J ·
J
X
j=1
Xj ∼ O (J · (J · L)) ∼ O

10
20
30
40
50
60
70
80
90
100
10
−3
10
−2
10
−1
10
0
10
1
Size of task
Running time
Running time comparision
 
 
Random
HNN
LBS
Fig. 4.
Running time of solutions achieved by different methods
algorithm is faster than the HNN recursion, the reason are
detailed:
• The random strategy generates a random matrix keeping
the constraints Xj, Kj : ∀1 . . . J. The complexity of this
generation is
O (J · L)
• The theoretical complexity of the LBS algorithm is (as
detailed previously):
O

The random strategy follows from a simple algorithm of
constructing a scheduling matrix. In each row of the matrix
the Xj number of “1”-s are randomly placed within the Kj
time limit. This method is used for comparison, it serves as a
“dummy” model.
VI. CONCLUSION
In this paper, new methods were proposed to provide
optimal scheduling for packet-transmissions in WSN. The
objective of optimal scheduling was deﬁned by the Balanced
Cost objective function. It is noteworthy, that the newly
introduced methods yields always a valid scheduling matrix, as
opposed to the HNN or random scheduling, which may yield
invalid matrices. The algorithm introduced above is capable
of providing optimal scheduling with given constraints and
guarantees balanced load. It runs in polynomial time and yield
valid solution therefore it is possible to use in real-life WSN
data acquisition applications.
REFERENCES
[1] A. Rogers, D. D. Corkill, and N. R. Jennings, “Agent technologies for
sensor networks,” IEEE Intelligent Systems, vol. 24, pp. 13–17, 2009.
[2] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, “Wireless
sensor networks: a survey,” Computer Networks, vol. 38, no. 4, pp. 393–
422, 2002.
[3] C.-Y. Chong and S. P. Kumar, “Sensor networks: evolution, opportu-
nities, and challenges,” Proceedings of the IEEE, vol. 91, no. 8, pp.
1247–1256, 2003.
[4] P. Inverardi and L. Mostarda, “A distributed monitoring system for
enhancing security and dependability at architectural level,” pp. 210–
236, 2007.
[5] O. Aumagie, E. Brunet, N. Furmento, and R. Namyst, “NewMadeleine:
a Fast Communication Scheduling Engine for High Performance Net-
works,” RR-1421, Tech. Rep., 2007.
[6] H. Choi, J. Wang, and E. A. Hughes, “Scheduling for information
gathering on sensor network,” Wirel. Netw., vol. 15, no. 1, pp. 127–140,
2009.
[7] H. Li, P. Shenoy, and K. Ramamritham, “Scheduling messages with
deadlines in multi-hop real-time sensor networks,” in RTAS ’05: Pro-
ceedings of the 11th IEEE Real Time on Embedded Technology and
Applications Symposium.
IEEE Computer Society, 2005, pp. 415–425.
[8] J. Levendovszky, E. Laszlo, K. Tornai, and G. Treplan, “Optimal pricing
based resource management,” in International Conference on Operations
Research Munich 2010, September 2010, p. 169.
[9] W. R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, “Energy-
efﬁcient communication protocol for wireless microsensor networks,” in
HICSS ’00: Proceedings of the 33rd Hawaii International Conference
on System Sciences-Volume 8.
IEEE Computer Society, 2000.
[10] S.-H. Cha and M. Jo, “An energy-efﬁcient clustering algorithm for large-
scale wireless sensor networks,” in GPC’07: Proceedings of the 2nd
international conference on Advances in grid and pervasive computing.
Springer-Verlag, 2007, pp. 436–446.
[11] K. Wu, C. Liu, Y. Xiao, and J. Liu, “Delay-constrained optimal data
aggregation in hierarchical wireless sensor networks,” Mob. Netw. Appl.,
vol. 14, no. 5, pp. 571–589, 2009.
[12] I. F. Akyildiz, T. Melodia, and K. R. Chowdhury, “A survey on wireless
multimedia sensor networks,” Comput. Netw., vol. 51, pp. 921–960,
March 2007.
[13] CAPSIL. (2010) Mica2 technical parameters. [Online]. Available:
http://www.capsil.org/capsilwiki/index.php/MICA2
[14] TOSWiki.
(2010)
Tinyos
introduction.
[Online].
Available:
http://docs.tinyos.net/index.php/FAQ
[15] P.
Levis.
(2006)
Tinyos
programming.
[Online].
Available:
http://www.tinyos.net/tinyos-2.x/doc/pdf/tinyos-programming.pdf
[16] N. Abramson, “The aloha system - another alternative for computer
communications,” in Proceedings of Fall Joint Computer Conference,
AFIPS Conference, 1970.
[17] J. Polastre, J. Hill, and D. Culler, “Versatile low power media access
for wireless sensor networks,” in Proceedings of the 2nd international
conference on Embedded networked sensor systems, ser. SenSys ’04.
ACM, 2004, pp. 95–107.
[18] I. Rhee, A. Warrier, M. Aia, and J. Min, “Z-mac: a hybrid mac
for wireless sensor networks,” in SenSys ’05: Proceedings of the 3rd
international conference on Embedded networked sensor systems. New
York, NY, USA: ACM Press, 2005, pp. 90–101.
[19] M. Buettner, G. V. Yee, E. Anderson, and R. Han, “X-mac: a short
preamble mac protocol for duty-cycled wireless sensor networks,” in
Proceedings of the 4th international conference on Embedded networked
sensor systems, ser. SenSys ’06.
ACM, 2006, pp. 307–320.
[20] J. Elson and K. R¨omer, “Wireless sensor networks: a new regime for
time synchronization,” SIGCOMM Comput. Commun. Rev., vol. 33, pp.
149–154, January 2003.
[21] M. Schuts, F. Zhu, F. Heidarian, and F. W. Vaandrager, “Modelling
clock synchronization in the chess gmac wsn protocol,” in Proceedings
Workshop on Quantitative Formal Methods: Theory and Applications,
ser. QFM’09, vol. 13, 2010.
[22] I. Rhee, A. Warrier, J. Min, and L. Xu, “Drand: Distributed randomized
tdma scheduling for wireless ad hoc networks,” IEEE Transactions on
Mobile Computing, vol. 8, pp. 1384–1396, 2009.
[23] S. Cui, R. Madan, A. J. Goldsmith, and S. Lall, “Joint routing, mac,
and link layer optimization in sensor networks with energy constraints,”
in In Proceedings IEEE ICC 2005, 2005, pp. 725–729.
[24] S. Ganeriwal, R. Kumar, and M. B. Srivastava, “Timing-sync protocol
for sensor networks,” in Proceedings of the 1st international conference
on Embedded networked sensor systems.
ACM New York, 2003, pp.
138–149.
[25] J. Levendovszky, K. Tornai, G. Trepl´an, and A. Ol´ah, “Novel load
balancing algorithms ensuring uniform packet loss probabilities for
WSN,” in 2011, IEEE 73rd Vehicular Technology Conference, IEEE
VTC-Spring, Accepted in January 2011.
59
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

