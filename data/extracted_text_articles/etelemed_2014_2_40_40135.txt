Play for Health 2.0: Evolving P4H to a Web Environment Using HTML5 and 
JavaScript
Pedro Ferriol Monserrat, Francisco Tous Llull, 
Miguel Ángel Alcalde Velado, Marc Melià Aguiló, 
Jaume Sastre Terrassa 
Health Department  
Fundació Bit 
Palma de Mallorca, Spain 
pferriol@ibit.org, xtous@ibit.org, malcalde@ibit.org, 
mmelia@ibit.org, jsastre@ibit.org 
Maria Àngels Farreny Balcells, Eva Ponce Martínez, 
Begoña Llano de la Peña 
Department of Rehabilitation 
Hospital Son Llàtzer 
Palma de Mallorca, Spain 
mfarreny@hsll.es, eponce@hsll.es, bllano@hsll.es 
Ramón Mas Sansó 
Mathematics and Computer Science Department  
University of the Balearic Islands 
Palma de Mallorca, Spain 
ramon.mas@uib.es
 
Abstract— Play for Health (P4H) is a telemedicine service 
consisting of a telerehabilitation platform to improve cognitive 
and physical deficits through the use of “serious games” and 
various videogames controllers. P4H is based on a client-server 
architecture. Its client-side application was developed in C++ 
using Ogre3D graphic engine and runs on GNU/Linux. The use 
of these technologies posed some hardware and software 
restrictions that were a threat to the continuity of the platform. 
The birth of HTML5 meant a revolution in the way of creating 
web applications due to its suitability to develop dynamic and 
multi-platform applications. The incorporation of HTML5 and 
JavaScript to P4H supposed a new client-side application that 
takes advantage of HTML5 features to overcome the 
limitations and functionalities that P4H had at that moment. 
Keywords - Telerehabilitation; serious gaming; videogame 
controllers; HTML5; JavaScript. 
I. 
 INTRODUCTION 
Play for Health (P4H) is an integrated telerehabilitation 
system offering motor and cognitive training through serious 
games and multiple interaction devices [1]. P4H was 
presented at this congress in 2011. It is designed to be 
deployed at home or in clinical centers, and its philosophy is 
to rely on commonly available commercial off-the shelf 
videogame interaction devices (e.g., Kinect, WiiMote, dance 
mats). 
P4H is based on a client-server architecture consisting of 
a distributed application structure that partitions workload 
among a provider of the service, called server, and the 
requesters of this service, called clients. P4H server is 
remotely accessed by clinicians through a web browser to 
program customized therapies for patients, assess their 
progress and adjust training parameters according to the 
evolution of each patient. P4H client is the application used 
by the patients to perform their therapies in an easy and 
intuitive way. The client manages therapies, captures 
different parameters during the execution of the exercises 
and sends them to the server. 
Before its evolution, P4H client was a standalone 
application developed with the compiled object-oriented 
C++ programming language, and used the scene-oriented 
graphic rendering engine Ogre3D [2]. This standalone 
application only ran on computers with GNU/Linux Kubuntu 
distribution installed and presented important limitations. 
P4H is a continuously evolving technology and its 
functionality is constantly being increased in order to cover a 
wider range of pathologies. Technological advances that 
allow to reduce deployment costs, to overcome limitations or 
to help the clinicians in making their decisions are 
incorporated to P4H. 
HTML5 [3] is the fifth revision of the HTML markup 
language used for structuring and presenting content for the 
World Wide Web (WWW) and it is a core technology of the 
Internet. Its emergence has revolutionized web development 
due to its new tools and capabilities for creating dynamic 
web applications. 
JavaScript [4] is an interpreted computer programming 
language that is directly executed on a computer without 
being previously compiled. JavaScript can be inserted into 
HTML pages and can be executed by all modern web 
browsers. JavaScript capabilities allow to interact with users, 
control the browser, communicate asynchronously with a 
server and alter the document content displayed. 
The combination of HTML5 and JavaScript allows 
creating powerful multi-platform web applications, capable 
to run in a browser regardless of the hardware and software 
on the computer where they are executed. The incorporation 
of these technologies to P4H resulted on P4H 2.0. This is an 
evolution of P4H which maintains and expands its 
functionalities and solves many of its limitations. 
In this document, P4H is described with special emphasis 
on the limitations of the client application that jeopardize 
their survival. Next, P4H 2.0 is presented and how the 
44
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-327-8
eTELEMED 2014 : The Sixth International Conference on eHealth, Telemedicine, and Social Medicine

inclusion of HTML5 and JavaScript on the client overcame 
these limitations. Finally, the conclusion and future work are 
presented. 
II. 
P4H: STANDALONE MODE 
P4H development started in January 2009 under the 
framework of the strategy designed by Fundació iBit (former 
name for Fundació Bit) to carry out health processes in the 
context of rehabilitation using an open and scalable platform 
based on ICTs. 
As 
a 
result, 
it 
was 
obtained 
a 
client-server 
telerehabilitation system that provides the services and 
resources needed to carry out at-home personalized 
rehabilitation programs, their adaptation to patient’s 
evolution, and their supervision by the therapeutic team. 
The client application is a standalone C++ compiled 
program with an architecture based on plugins in order to be 
easily extensible to new games and interaction devices. The 
communication among these plugins is done across a 
message-oriented bus. The main components of this 
application are: 
• 
Core: Responsible for managing the essential 
procedures of the system and organizing the 
execution of plugins through services. 
• 
Content plugins: They implement multimedia 
videogames developed jointly by clinical and 
technical partners, following the “Serious Gaming“ 
[5] philosophy to work on the cognitive component 
of the rehabilitation process and on patient 
motivation. Fig. 1 shows a screenshot of one of the 
videogames included in this client. It consists of 
doing a puzzle selecting the pieces with the 
movement of a limb. 
• 
Interaction Method plugins: They allow the patients 
to interact with the videogames and to work on the 
physical component of the rehabilitation process. 
 
 
Figure 1.  Puzzle videogame’s screenshot 
The P4H platform also provides a SDK (Software 
Development Kit), which includes an API (Application 
Program Interface) for the development of new plugins. 
So far, P4H was evaluated in Hospital Son Llàtzer in 
Mallorca (Spain) [6]. It is also used as a technological base 
for the exergaming system developed in the project CuPiD 
(Closed-loop 
system 
for 
personalized 
and 
at-home 
rehabilitation of people with Parkinson’s disease) financed 
by European Union - Seventh Framework Programme [7]. 
And, for more than 2 years, it has been used in several health 
centers in Mallorca by more than 100 patients with different 
pathologies among which stand out Stroke (53 patients), 
Parkinson Disease (11 patients) and Multiple Sclerosis (9 
patients). 
With P4H, the intended goal was achieved and it was 
obtained a low-cost open telerehabilitation system based on 
the use of videogames, fully developed using open-source 
software, and capable of interacting with most popular 
videogame devices. 
Despite the good acceptance by the patients and the 
clinicians, the client application of P4H has some technical 
limitations that make it difficult to maintain and expand the 
whole platform: 
A. Dependence on Linux community 
It was decided to work with a stable and widely used 
Linux distribution, which was easy-to-use and familiar to 
Microsoft Windows users. Kubuntu, from Canonical Ltd [8], 
was the distribution that best fitted the project’s 
requirements. 
The release every 6 months of a new Kubuntu version 
became a handicap. It forced us to periodically upgrade the 
client application, in order to prevent it to become obsolete 
and keep the system compatible with new hardware 
products. Every upgrade has required to: 
• 
Upgrade Ogre 3D graphic engine. 
• 
Update dependences with external code libraries. 
• 
Update scripts and internal code. 
• 
Recompile code libraries and troubleshooting. 
Kubuntu 12.04 LTS version, with 5 years of support and 
security updates, is the operating system currently used in 
order to minimize the impact of these upgrades. 
Besides, using code developed by the GNU/Linux 
community allowed us to reduce the development times, but 
it increased the time and resources we had to spend 
correcting errors and adapting that code to the project’s 
needs. These efforts were even greater when we had to 
update these libraries, replace them because their project was 
canceled, or upgrade the operating system. 
B. High dependence on hardware 
Ogre3D is a software framework which offers tools that 
help the developers in tasks such as design, development and 
representation of videogames providing services as 2D and 
3D rendering, sound, artificial intelligence or scenes 
management, among others. Using this engine has been a 
key factor to the development of P4H, while it also limited it 
with its hardware restrictions. 
Ogre3D requires a dedicated graphic card NVIDIA 
Geforce 2, 4 or higher; or an ATI Radeon 7500, 9600 or 
higher. The lack of manufacturer drivers compatible with the 
operating system used to run the client application forced us 
to use non-official drivers. These drivers were sometimes 
difficult to install, and they turned out not to be fully 
45
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-327-8
eTELEMED 2014 : The Sixth International Conference on eHealth, Telemedicine, and Social Medicine

compatible with the graphic cards used, or, sometimes, they 
did not achieve the required performance from the cards. 
Because of that, as well as hardware evolution and the 
appearance of new technologies (i.e., NVIDIA® Optimus™ 
for laptops), it was necessary to invest a considerable amount 
of resources to adapt P4H to these technologies. 
Besides, that situation got worse because of the lack of 
ATI Radeon drivers for Kubuntu 12.04. 
Therefore, the range of computers compatible with P4H 
was severely reduced. That often means an increase of the 
deployment costs because of the purchase of new computers 
by the patients. 
C. Use of compiled code 
When it came to plan and design P4H, compiled 
programming languages were the ones that best suited the 
project’s requirements. The choice of C++ was determined 
by Ogre3D engine requirements. 
Although the development of P4H would not have been 
possible without using a compiled language, during the last 
years, some limitations became evident. 
C++ programming language has a slow learning curve, 
which makes it difficult for new programmers to join the 
development team. 
Once the application is developed, or a new featured is 
added to it, the debugging, correction, and improvement 
process is not flexible, and it is time consuming, because of 
the code complexity and the need of recompiling and 
reinstalling the application every time. 
To make the installation and updating processes faster 
and more flexible, it was necessary to implement a Debian 
packages repository. This way, these processes became faster 
and simpler, and it made it possible to remotely control them. 
However, the installation and the update of the application 
can still be too complex for some users, especially when it 
comes to the installation in patients' homes. 
 
All these technical limitations represent significant costs 
of development and maintenance that make the system not 
competitive, and they hinder its growth potential. After 
analyzing and comparing the costs of continuing with the 
current client application or shifting to a web environment, 
we concluded it was more efficient and economical, at 
medium and long term, to change the technology used in the 
client application and invest efforts in the development of a 
new client.   
III. 
P4H 2.0: WEB MODE 
P4H 2.0 has been developed throughout year 2013 with 
the aim of overcoming the limitations of P4H, and making it 
evolve to a more competitive and transferable system. In 
particular, they have been pursued the following goals: 
• 
Lower down the deployment costs: In P4H, these 
costs went from 1500€ to 2000€ per kit depending 
on the plugins it had to include. Most of the 
investing was due to the purchase of a TV screen 
and a computer that met all the hardware 
requirements. On the other hand, P4H 2.0 runs on a 
web browser independently of the hardware. This 
makes the access easier to a greater number of users, 
and it reduces installation costs, because it can run 
on patient's own computer. 
• 
Increase the number of pathologies treated: This 
depends on the number of videogames and 
interaction methods available in the platform. As 
mentioned before, in P4H the development of a new 
videogame or a new interaction method plugin was a 
tough and resource consuming task. In P4H 2.0, they 
are used programming and support tools with much 
less complexity. 
• 
Improve usability: In global terms, the usability of 
P4H was good and well accepted by a large number 
of users. However, the installation and updating 
processes on the client application had some 
technical difficulties that required a technician to be 
carried out. On the other hand, P4H 2.0 only needs a 
web browser. 
From a technical point of view, P4H 2.0 keeps the server-
side application to manage patients and therapies as well as 
the plugin-based architecture in the client application to carry 
out the therapy as in P4H. 
Thus, the main difference between both modes is the 
technology used in the client application. P4H 2.0, instead of 
a compiled programming language and Ogre3D engine, has 
been developed using a scripting language such as JavaScript 
and Cocos2d-HTML5 engine [9]. 
Cocos2d-HTML5 is the HTML5 version of Cocos2d-x 
engine [10]. The main reasons to use this engine were:  
• 
It uses JavaScript, HTML5 and Cascading Style 
Sheets (CSS). This speeds up the development of 
web applications and eases its maintenance. The use 
of 
these 
technologies 
allows 
developing 
multiplatform applications that only require a 
compatible web browser. 
• 
It is an active project, well documented and with a 
wide community of users. 
• 
It is open source under MIT License [11]. 
A. Content plugins 
Resulting of the experience acquired with P4H and the 
analysis carried out with the medical team, the following 
videogames classification was established for P4H 2.0: 
1) Sequencing: These are games in which the patient has 
to plan and execute a sequence of tasks to reach a goal. For 
instance, doing constructions or daily living activities. 
2) Memory: In memory games, the patient has to 
remember sequences of images, sounds or elements positions 
in order to achieve a goal. For instance, pairing images or 
repeating a melody. 
3) Attention: In these games, the patient has to choose 
certain elements on the screen according to a selection 
criterion. For instance, choosing elements depending on their 
morphology or applying interferences as Stroop effect. 
4)  Puzzles: When playing these games, the patient has 
to build a figure by correctly combining their pieces in which 
it has been split. 
46
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-327-8
eTELEMED 2014 : The Sixth International Conference on eHealth, Telemedicine, and Social Medicine

At the moment of writing this paper, 2 videogames have 
already been developed according to this classification:  
• 
Images: It consists in finding pairs in a board of 
cards. Fig. 2 shows a game’s screenshot with some 
pairs already matched. 
• 
Colours: It consists in touching objects in a scenario 
depending on certain selection criteria. Fig. 3 shows 
a game’s screenshot in Go/No-go game mode where 
the user has to touch the green spots. 
 
 
Figure 2.  Images videogame’s screenshot 
 
Figure 3.  Colurs videogame’s screenshot 
Although each videogame has its own gameplay, they 
have some points in common: 
• 
Difficulty-level-based configuration: Each level 
consists of a set of parameters with pre-established 
values. They reduce the amount of time needed to 
program the therapies, and they allow implementing 
an automatic level change. Levels have been set after 
analyzing patients performing the games. 
• 
Reward-based system: These rewards are given to 
the patient, as he achieves certain goals related to 
speed, skill or fidelity. The aim of this reward 
system is to encourage patient's motivation and 
adhesion to the system 
• 
Parameter recording: During the execution of the 
therapy activities, a lot of data relating to times, 
successes, and errors is collected. This data is 
processed at the client application and sent to the 
server where it will be stored and delivered to the 
clinicians in the form of charts. 
JavaScript Object Notation (JSON) is used to store the 
configuration values for the difficulty levels and rewards, as 
well as to store the recorded parameters and exchange this 
data with the server. 
B. Interaction Method plugins 
The key feature of P4H was its capability to integrate and 
combine different interaction methods and videogames. This 
allowed for working with the therapies cognitive and physic 
components independently. Keeping this feature in P4H 2.0 
has been a fundamental requisite. 
3 different interaction methods have been developed: 
• 
Kinect: For body movements and postures detection 
using the Microsoft XBox console 3D camera. 
• 
Dance pad: For lower limbs movement detection by 
detecting the pressure made on the sensitive areas of 
a dance mat. 
• 
Mouse: For fine movement detection of the upper 
limbs using a computer mouse. 
The main technical difficulty found in P4H 2.0 was the 
integration of these devices with the videogames that run on 
a web browser. Especially in the case of the Kinect camera.  
To integrate the Kinect camera to the client application, 
the Zigfu Development Kit (ZDK) [12] has been used to 
develop the plugin which accesses to OpenNI API [13] 
through JavaScript calls. 
OpenNI (Open Natural Interaction) is an open source 
framework that provides APIs to develop applications that 
interacts with the user in a natural way. This framework 
makes it easier to communicate with devices sensors, such as 
those of Kinect or ASUS Xtion, and the perception 
middleware in charge of analyzing and understanding the 
data collected from the scene through the use of computer 
vision algorithms. 
At low level, all interaction methods must work with 
native code to be able to communicate with the videogames 
controllers. This implies the installation of a driver for each 
of the interaction methods, and it is the only connection 
between P4H 2.0 and the operating system which it is 
running on. Drivers for all the developed interaction methods 
are available for Microsoft Windows 7 or higher.  
IV. 
CONCLUSION AND FUTURE WORK 
The main result of this work is an HTML5, CSS and 
JavaScript application that allows patients to carry out their 
rehabilitation therapies at home playing videogames on a 
web browser using different interaction methods. 
47
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-327-8
eTELEMED 2014 : The Sixth International Conference on eHealth, Telemedicine, and Social Medicine

Compared to P4H, P4H 2.0 achieved the following goals: 
• 
Make the client application independent of the 
hardware on which it runs. This has significantly 
reduced the compatibility restriction of P4H, which 
implies a considerable decrease of the installation 
costs and allows more patients to use the application 
with the computer they already had at home. In these 
cases the cost of acquisition of the system has been 
reduced to the cost of the videogame controllers 
used. 
• 
Open the platform to other operating systems. The 
execution of the therapies on a web browser makes 
the application independent of the operating system. 
This means that we can reach a larger number of 
users, and that the portability costs to other operating 
systems are eliminated. 
• 
Simplify videogames and interaction methods 
development and maintenance. This means a 
considerable decrease of implementation costs and 
response times to incidences and modifications. 
• 
Eliminate installation and update processes for the 
client application. Now the updates are made on the 
server, and patients only need to access it through 
their browsers. The only installation the user needs 
to carry out is the installation of the interaction 
methods drivers. This installation process is very 
simple, and it is done once and through a setup 
assistant. Thus, the installation and update costs have 
been reduced because it is not required a technician 
to carry it out at patients homes. 
Even though P4H 2.0 is completely developed and 
operative, it is planned to increase its added value with new 
games and interaction methods. 
At the moment, it is been developed a plan to deploy the 
system in some health centers of ib-Salut (Public Health 
Service of the Balearic Islands) as a previous step before its 
deployment at patients’ homes. 
ACKNOWLEDGMENT 
This work has been funded by the Direcció General 
d'Innovació i Desenvolupament Tecnològic del Govern de 
les Illes Balears, a Balearic Islands (Spain) regional 
government area for promotion of R+D+i. 
REFERENCES 
[1] F. Tous et al., “Play for Health: Videogame Platform for 
Motor and Cognitive Telerehabilitation of Patients,” The 
Third International Conference on eHealth, Telemedicine and 
Social Medicine (eTELEMED 2011), IARIA, Feb. 2011, pp 
59-63. 
[2] http://www.ogre3d.org/ 10.03.2014 
[3] http://www.w3.org/html/wg/drafts/html/master/ 08.11.2013 
[4] https://developer.mozilla.org/en-US/docs/Web/JavaScript/ 
22.01.2014 
[5] M. Zyda, "From Visual Simulation to Virtual Reality to 
Games," Computer, vol. 38, no. 9, Sept. 2005, pp. 25-32, 
doi:10.1109/MC.2005.297. 
[6] M. A. Farreny et al., “Play for Health (P4H): a new tool for 
telerehabilitation,” Rehabilitación, vol. 46, no. 2, Apr. 2012, 
pp. 135-140, doi: 10.1016/j.rh.2012.01.001. 
[7] F. Tous et al., “Incorporating Rehabilitation of Parkinson's in 
the P4H Platform using a BAN,” XIII Mediterranean 
Conference on Medical and Biological Engineering and 
Computing (MEDICON 2013), IFMBE Proceedings, vol. 41, 
2014, pp. 1481-84, 10.1007/978-3-319-00846-2_366. 
[8] http://www.canonical.com/ 10.03.2014 
[9] http://www.cocos2d-x.org/wiki/Cocos2d-html5 08.11.2013 
[10] http://www.cocos2d-x.org/ 08.11.2013 
[11] http://opensource.org/licenses/MIT 15.01.2014 
[12] http://zigfu.com/en/zdk/overview/ 08.11.2013 
[13] http://www.openni.org/ 08.11.2013 
 
 
 
 
 
48
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-327-8
eTELEMED 2014 : The Sixth International Conference on eHealth, Telemedicine, and Social Medicine

