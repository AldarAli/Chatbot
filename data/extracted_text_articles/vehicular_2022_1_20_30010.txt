Near-Optimal Coordination of Vehicles at an
Intersection Plaza Using B´ezier Curves
Elham Ahmadi
Rodrigo Castelan Carlson
Werner Kraus Junior
Federal University of Santa Catarina
Florian´opolis, SC, Brazil
email: elham.ahmadi@posgrad.ufsc.br
email: {rodrigo.carlson,werner.kraus}@ufsc.br
Ehsan Taheri
Department of Aerospace Engineering
Auburn University
Auburn, AL, USA
email: etaheri@auburn.edu
Abstract—We investigate the problem of optimal coordination
of Connected Vehicles under Automated Driving (CVAD) at
intersections. We aim for more driving flexibility for the CVAD,
with the possibility of fully utilizing the intersection space, while
strictly avoiding collisions. We propose the Intersection Trajecto-
ries Optimal control Problem (ITOP), in which an intersection is
a space without movement-related horizontal markings or struc-
tural restrictions, except for the intersection boundaries, which
we call a plaza. By using the B´ezier curves and discretization, we
convert the ITOP to a Non-Linear Program (NLP) that generates
near-optimal collision-free trajectories. Numerical results demon-
strate that the proposed approach generates feasible trajectories
and is suitable for the solution of the ITOP.
Index Terms—intersection Plaza; B´ezier curves; optimal control;
non-linear programming.
I. INTRODUCTION
In spite of the changes taking place in traffic systems due
to the emergence of Connected Vehicles under Automated
Driving (CVAD), the paradigm established decades ago for the
organization of road infrastructure remains roughly the same.
Most of the vehicle coordination strategies and intersection
models proposed in this new context [1] [2] rely on the concept
of vehicle movements, thus restricting the possible or allowed
paths within the intersection. This configures a waste of scarce
intersection space and a loss of efficiency.
The proposed approaches for modeling intersections can be
summarized in three categories [1] [3]:
• Cells: the intersection is divided into cells while time
windows in each cell are allocated to vehicles so that
there are no collisions (Fig. 1a). See, e.g., [4] [5].
• Paths: a limited set of paths are allocated to vehicles
in such a way that vehicles on conflicting paths do not
collide (Fig. 1b). See, e.g., [6].
• Conflicting regions/points: only the points or regions
where conflicts between paths occur are discretized and
time windows are allocated to vehicles to pass through
these points (Fig. 1c). See, e.g., [7]–[9].
Moreover, most of these strategies simplify the behavior within
the intersection to consider a constant speed and some even
preclude turning movements.
In essence, these models deal with how to allocate time
windows of the scarce intersection space to different vehicles.
However, despite the higher capacity obtained by the elimina-
tion of the traffic light cycle and by the smaller headways
between vehicles enabled by CVAD, the capacity of the
intersection ends up limited by the relationship between paths
constrained to pre-established vehicular movements.
Better use of the infrastructure is possible if the vehicles
are allowed to make full use of the intersection space via
the definition of their trajectories for any possible path. The
research on this subject is limited. In [10], a cooperative
motion-planning method was proposed for Connected and
Automated Vehicles (CAVs) crossing an intersection. The
solution of a centralized optimal control problem provides
optimized trajectories offline based on pre-defined formations
to which the CAVs are guided online before entering the
intersection. The high-dimensionality and non-linearity of the
model called for the convexification of the collision-avoidance
constraints and an algorithm that provides suitable trajectories
as initial guesses for the problem to speed up the solution [11].
An approach relying on emergent behaviors modeled vehicle
behavior by a hierarchical set of rules, similar to the modeling
of flocks [12] [13]. The simplicity of the approach results
in low computation complexity but also in high sensitivity
to minor changes in the rules. Finally, [14] proposed formal
methods to model the behavior at intersections. The nature
of the formulation and the employed methods lead, however,
to combinatorial a explosion of the states even for small
(a)
(b)
(c)
Fig. 1: Intersection modeling: (a) cells; (b) paths; and (c)
collision regions/points (red circles) (adapted from [1]).
6
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

instances.
We consider an intersection as an empty space free of
movement-related horizontal markings or structural restric-
tions, except for its boundaries. We call this space a plaza
(see Fig. 2). The objective is to find the optimal trajectories,
without predefined paths, that vehicles should follow to min-
imize one or more criteria, such as intersection delay or fuel
consumption, while avoiding collisions. To this end, we state
an Intersection Trajectories Optimal control Problem (ITOP)
for CVAD. To solve the ITOP, we propose finding general
functions to describe the optimal trajectories of the vehicles
according to their positions and speeds, and plaza geometry.
In a previous work [15], we explored Finite Fourier Series
(FFS) for the generation of trajectories (see also [16]). In this
work, B´ezier curves [17]–[19] are used along with discretiza-
tion notions to convert the ITOP into a Non-Linear Program
(NLP) with B´ezier coefficients as the unknown parameters.
This paper is featured by: (i) the vehicles’ paths and speeds
are no longer fixed; and the intersection is signal-free and
movement-free. The main contributions of this paper are:
• The effective collision avoidance constraints;
• A method for the generation of the near-optimal trajec-
tories that utilizes B´ezier curves; and
• A compact representation of the B´ezier curve that reduces
the number of decision variables.
In Section II, the model details are provided and the ITOP
is stated. In Section III, the ITOP is formulated as a NLP
based on the B´ezier curves representation of the states and
discretization of the problem. Numerical results are presented
in Section IV. Section V concludes the paper.
II. OPTIMAL CONTROL PROBLEM
In this section, the intersection plaza is modeled, the ve-
hicles’ state equations, the constraints, and the performance
criterion are presented, and the ITOP is stated.
A. Plaza Modeling
A plaza can have varied layouts with respect to the number
of intersecting roads and geometry. To introduce our concept,
we select a four-leg intersection (Fig. 2). The x and y axes
represent the central lines of the plaza on the Cartesian
Coordinate System (CCS). Vehicles can travel between any
two points of approaching and departing roads and their
trajectories, e.g., T1 and T2 in the figure, are not bound to
pre-specified paths or movements. We model this plaza by its
four Intersection Boundaries (IB) shown by the dashed lines in
Fig. 2. Each IBh, h = 1, . . . , 4, is modeled by an exponential
function:
yh = fh(x(t)),
fh(x(t)) = r0,h + r1,h · er2,h·(x(t)+r3,h),
(1)
with parameters r0,h, r1,h, r2,h, and r3,h that shape the
function according to the intersection geometry.
T1
T2
IB1
IB2
IB3
IB4
x
y
Fig. 2: A typical four-leg intersection as a plaza (colored area)
with approximated boundaries (dashed lines).
B. Vehicle’s Equations of Motion
There are various models to describe the vehicle’s dynamics,
from the simple unicycle model [20] to sophisticated car
models [21]. For simplicity, in this work we use Equations
of Motion (EoM) that model vehicles as point masses:
(
¨xj(t) = axj(t),
¨yj(t) = ayj(t),
(2)
with axj and ayj the acceleration of vehicle j in coordinates
x and y in the CCS, respectively, and t the continuous time.
The total (absolute) acceleration of vehicle j is given by:
aj(t) =
q
a2xj(t) + a2yj(t).
(3)
The speed increment of the j-th vehicle is defined as:
∆vj =
Z T
0
aj(t)dt,
(4)
in which T stands for the completion time, i.e., the time taken
by the vehicles to cross the plaza. Then, given k vehicles at
the plaza, the total speed increment is computed as:
∆v = ∆v1 + . . . + ∆vk.
(5)
C. Constraints
1) Vehicle’s kinematic constraints: To guarantee that the
vehicles speeds and accelerations are within admissible range
the following constraints are defined:
aj(t) ≤ amax, 0 ≤ vj(t) ≤ vmax, j = 1, . . . , k,
(6)
with aj being the total acceleration of vehicle j, vj the
speed of vehicle j, and amax and vmax the maximum total
acceleration and maximum speed, respectively.
2) Vehicle-to-vehicle collision avoidance constraints: The
distance, dij(t), between every two vehicles i and j must be
kept at or above a minimum safe distance, ds:
dij(t) ≥ ds, i = 1, . . . , k, j = 1, . . . , k, i < j.
(7)
7
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

3) Plaza boundaries constraints: Violation of the plaza
boundaries by the CVAD must be disallowed. Hence, the
intersection’s geometric constraints, based on (1), that ensure
there are no collisions of CVAD with the boundaries, are:
(
yj(t) ≤ fh(xj(t)), if h = 1, 2
yj(t) ≥ fh(xj(t)), if h = 3, 4
j = 1, . . . , k,
(8)
with (xj(t), yj(t)) being the position of vehicle j in the CCS.
D. Performance Index
We choose as the performance index a weighted sum of ∆v
and T that should be minimized:
J = w1 · ∆v + w2 · T,
(9)
with w1 ≥ 0 and w2 ≥ 0 weighting parameters. Minimizing
∆v and T are conflicting objectives that affect fuel consump-
tion and comfort (since speed increment is minimized) versus
speed and maneuver completion time.
E. Intersection trajectories optimal control problem
By considering the EoM, the constraints, and the perfor-
mance index, the ITOP can be formulated as:
minimize J = w1 · ∆v + w2 · T,
(10)
subject to (6)–(8) with h = 1, . . . , 4, and 0 ≤ t ≤ T.
By appropriately writing the EoM in state-space represen-
tation, the ITOP formulation can be expressed as a non-linear
optimal control problem [11]. Since the detailed formulation is
not needed for the approach in the next section, it is omitted
here. We note, however, that the states are the position and
speed of each vehicle j in the CCS (xj(t), yj(t), vxj(t), and
vyj(t)), and the decision variables are axj(t), ayj(t), and T.
III. OPTIMIZATION PROBLEM
In this section, we propose the B´ezier curve method [22] for
solving the ITOP for the CVAD at the plaza. In this method,
the state variables, i.e., positions and speeds, are interpolated,
and control variables, i.e., accelerations and completion time,
are considered in the objective function. Then, the B´ezier rep-
resentation of state variables is imposed on the dynamics, and
the required accelerations to realize the resulting trajectories
are evaluated. Finally, the ITOP is reduced to a system of
algebraic equations in the B´ezier coefficients and a collision-
free trajectory optimization problem is formulated.
A. B´ezier Approximations
The B´ezier curves have several properties for trajectory
optimization that are appropriate for the purpose of this work:
(i) the starting and ending points of the curve correspond to
the first and final B´ezier coefficients, respectively; (ii) the
curve completely lies within the convex hull formed by all
B´ezier coefficients; and (iii) the curves have the advantage of
simplicity and curvature continuity.
In this part, a B´ezier curve is employed to approximate each
position state variable of each vehicle j in each coordinate of
the CCS (xj and yj) as follows [22]:
z(τ) =
nz
X
l=0
Bz,l(τ)Pz,l,
(11)
with z = [xj(τ) yj(τ)]T , 0 ≤ τ = t/T ≤ 1is the scaled time,
nz is the number of B´ezier terms (order of the B´ezier curve),
Pz,j are the unknown B´ezier coefficients to be determined,
and Bz,l(τ) are the Bernstein basis polynomials given by:
Bz,l(τ) =
nz
l

τ l(1 − τ)nz−l, l ∈ {0, 1, . . . , nz}.
(12)
The speed state variables of each vehicle j in each coordi-
nate of the CCS (vxj and vyj) are the first derivatives of (11)
with respect to the scaled time (τ):
z′(τ) =
nz
X
l=0
B′
z,l(τ)Pz,l,
(13)
with
B′
z,l(τ) =











−nz(1 − τ)nz−1,
if l = 0,
nz! τ l−1(1−τ)nz−l
(l−1)!(nz−l)!
− nz! τ l(1−τ)nz−l−1
l!(nz−l−1)!
,
if l ∈ [1, nz − 1],
nzτ nz−1,
if l = nz.
(14)
1) Boundary conditions: For each vehicle, we know the
Boundary Conditions (BCs), i.e., the initial and final positions
and speeds in the coordinate system. The BCs with respect to
the scaled time for each vehicle are:
z(0) = zi, z(1) = zf, z′(0) = T ˙zi, z′(1) = T ˙zf.
(15)
The labels ‘i’ and ‘f’ refer to ‘initial’ and ‘final’, respectively,
the prime denotes the derivative with respect to the scaled time
and the dot the derivative with respect to the continuous time.
These relations are obtained through the chain rule [16].
2) Using the BCs for expressing some coefficients: By
manipulating algebraically (11)–(15), it is straightforward to
derive four B´ezier coefficients of (11) as:
Pz,0 = zi,
Pz,1 = zi + T ˙zi
nz
,
Pz,nz−1 = zf − T ˙zf
nz
,
Pz,nz = zf,
(16)
reducing the number of unknown B´ezier coefficients, thus
speeding up the optimization. Substituting these coefficients
in (11) and organizing the resulting expression gives:
z(τ) = Fz +
nz−2
X
l=2
Bz,l(τ)Pz,l,
(17)
with
Fz = Bz,0Pz,0 + Bz,1Pz,1 + Bz,nz−1Pz,nz−1 + Bz,nzPz,nz.
(18)
The corresponding first and second derivatives with respect to
the scaled time, z′(τ) and z′′(τ), can be readily obtained.
8
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

3) Evaluation points: In order to solve for the unknown
B´ezier coefficients, the EoM are evaluated at m points, called
Discretization Points (DPs). We consider m DPs with equal
time intervals within the scaled time (τi − τi−1 = 1/(m −
1), i = 2, . . . , m):
τ1 = 0 < τ2 < · · · < τm−1 < τm = 1.
(19)
The constraints in Section II-C are satisfied only at each DP.
Thus, to avoid violations in-between DPs, we must choose a
large enough safe distance and/or sufficiently dense DPs.
4) Compact matrix form representation: Since the EoM are
evaluated at the DPs, a compact matrix form representation
for the position state variables and its derivatives (speed
state variables and accelerations) already incorporating the
coefficients from the BCs can be used. We can write the
position state variables at the m DPs as vectors of its values:
[z]m×1 = [Bz]m×(nz−3)[Xz](nz−3)×1 + [Fz]m×1,
(20)
with [Fz] being a constant vector depending on nz and on the
BCs obtained using (18), [Bz] being a matrix of coefficients
given by:
[Bz]m×(nz−3) = [Bz,2 Bz,3 . . . Bz,nz−2]T ,
(21)
and [Xz] being the vector of unknown B´ezier coefficients:
[Xz](nz−3)×1 = [Pz,2 Pz,3 . . . Pz,nz−2]T .
(22)
Matrices [Bz] and [Fz] are computed offline and [Xz] results
from the optimization. The compact forms of the first and
second derivatives of (20) have a similar structure.
Then, the total acceleration of vehicle j along its trajectory
can be represented in a compact matrix form as well by
replacing (20) and its derivatives in (2) and (3):
[aj]m×1 =
sX
∀z
[az]2
m×1 ≤ [amax]m×1.
(23)
Note that az = ¨z, therefore, we need the relations between ¨z
and z′′ via the chain rule (see Section III-A1).
B. Nonlinear Programming Formulation
Given the compact matrix form (20) and corresponding
derivatives, we can formulate a NLP with the unknown B´ezier
coefficients [Xz] and the completion time T as decision
variables:
min
[Xz]∀z∀j,T J
s.t.[aj(t)] ≤ [amax],
0 ≤ [vj(t)] ≤ [vmax],
[dij(t)] ≥ [ds],
[yj(t)] ≤ [fh(xj(t))], if h = 1, 2
[yj(t)] ≥ [fh(xj(t))], if h = 3, 4,
(24)
with i = 1, . . . , k, j = 1, . . . , k, and i < j. We note that (20)
and its derivatives are embedded in formulation (24) through
the substitution in (2)–(4).
TABLE I: SETTINGS FOR VEHICLES/ INTERSECTIONS
Parameter
Description
Value
k
Number of CVAD
3
amax
Maximum acceleration (m/s2)
2
vmax
Maximum speed (m/s)
10
ds
Safe distance (m)
1
Wroad
Road width (m)
11
Lroad
Road length (m)
90
C. Initialization of Decision Variables
The initialization of the unknown B´ezier coefficients can be
expressed in a compact form as:
[Xz](nz−3)×1 =

[Bz]na×(nz−3)
−1 
TABLE II: SCALING PARAMETERS
Parameter
IB1
IB2
IB3
IB4
r0
11
11
−11
−11
r1
1
1
−1
−1
r2
−1
1
1
−1
r3
−11
11
11
−11
TABLE III: NUMERICAL RESULTS OF B´EZIER AND FFS
Method
∆v (m/s)
T (s)
J
Tc (s)
B´ezier
14.1
11.5
93.5
4.3
FFS
18.2
12.3
97.4
7.9
B. Quantitative Results
As shown in Table III, the computation time (Tc) of the
B´ezier method is lower than the one of the FFS method due
to the smaller number of decision variables in the first method.
Moreover, smaller total speed increment and completion time
were obtained with the B´ezier method.
We experimented with different combinations of values for
m, w1, w2 and nz that were considered by trial and error
(details not shown). Varying the values of w1 and w2 had more
influence on the total speed increment than the completion
time. When the number of DPs (m) is increased, there is
an increase in computation time. Despite the corresponding
increase in total speed increment, completion times also in-
crease, suggesting that worse local minima are found for
higher values of m, i.e., trajectories in longer paths result.
Finally, increasing nz increases the computation time without
sensible improvements in the other measures. Small values
of m and nz may result in better values of ∆v, T, and
computation time. However, the trajectories might not be
smooth and may also lead to infeasible instances of the NLP
problem, as also observed with the FFS method [15].
C. Analysis of the Trajectories
The optimized trajectories generated by the solution of the
NLP based on the B´ezier and FFS methods are illustrated in
Fig. 3. The colored disks corresponding to the cool colormap
indicate DPs and time of the B´ezier method (TB), and the
colored disks corresponding to the warm colormap indicate
DPs and time of the FFS method (TF). The gray squares are
the initial positions for each CVAD. The solid thick black
lines show the boundary of each IB whose approximations are
presented by black dashed lines. For this particular scenario,
the trajectories of both methods deviate from what would be
expected in a movement-based method and it is clear that the
CVAD follow free trajectories. Noteworthy, the followed paths
of the B´ezier method seem to approach the paths of minimum
distance compared to the FFS method.
Fig. 4 shows the distances between every two CVAD
generated with the B´ezier method. It can be observed that, at
all times, a minimum safe distance (ds) is maintained between
all CVAD. Accordingly, the vehicles distances remain above
ds by a large margin for this scenario. Similar results were
observed for the FFS case (not shown) [15].
Figs. 5(a), (c), and (e) show the total (absolute) acceleration
(aj), and the acceleration (ˆaj) for each of the three CVAD,
Initial
position
CVAD2
CVAD1
CVAD3
Fig. 3: Trajectories of the CVAD using B´ezier method (TB)
and FFS method (TF).
Fig. 4: Distance between every two CVAD using the B´ezier
method and ds = 1 m.
with j = 1, 2, 3, for both B´ezier and FFS methods. Figs. 5(b),
(d), and (f) show the speed (vj) for the same three vehicles.
The total acceleration and speed profiles of each vehicle are
far below the maximum total acceleration and maximum speed
values, respectively, satisfying the constraints. In addition, the
profiles of both methods are smooth, as expected due to the
minimization of ∆v. However, the acceleration and speed
profiles of the trajectories generated with the FFS method
exhibit more variation compared to the ones with the B´ezier
method. Accordingly, we can conclude that the B´ezier method
is capable of providing more comfortable vehicle movement
with less computation time.
To evaluate the efficacy of the collision avoidance con-
straint, we present in Fig. 6 the numerical results of three
CVAD based on a larger value of safe distance, ds = 7
m. We observe in Fig. 6a a slightly different behavior of
CVAD1, which keeps more distance from the corner of the
IB (compare to Fig. 3) due to the activation of collision
avoidance constraints. It can be seen in Fig. 6b that the
collision avoidance constraint avoids the collision between
CVAD1 and CVAD3 at around t = 5 s, and subsequently,
the distance between the vehicles (green dashed line) does not
go below the safe distance line (solid purple line).
V. CONCLUSION
This paper introduced the ITOP with free use of the
intersection space, called a plaza, by CVAD. There are no
vehicle movement-related constraints except for the intersec-
tion boundaries, which were properly modeled. The B´ezier
curve method and discretization were used to transform the
10
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

(a)
(b)
(c)
(d)
(e)
(f)
Fig. 5: (a), (c), and (e) Acceleration profiles and (b), (d), (f)
speed profiles of j-th CVAD, with j = 1, 2, 3.
CVAD1
CVAD2
CVAD3
Initial
position
(a)
(b)
Fig. 6: (a) Trajectories of the CVAD using B´ezier method; and
(b) distance between them with ds = 7 m.
ITOP into a nonlinear program problem. The method is able to
generate near-optimal collision-free trajectories for the CVAD
coordination at the plaza. Finally, the results of the proposed
method were compared to the FFS method, showing slightly
better results.
Future work should consider more elaborate vehicle dy-
namics, vehicle dimensions, different completion times for
the CVAD, and free final states. Other objectives should be
evaluated and additional constraints should be added, e.g.,
bounds on jerk values. The continuous arrival of vehicles
should be handled along with a comparison with movement-
based approaches based on typical traffic performance metrics,
such as traffic delay and intersection capacity.
ACKNOWLEDGMENT
We acknowledge partial financial support from the CAPES
Foundation, Ministry of Education of Brazil, and the Na-
tional Council for Scientific and Technological Development
(CNPq).
REFERENCES
[1] L. Chen and C. Englund, “Cooperative Intersection Management: A Sur-
vey,” IEEE Transactions on Intelligent Transportation Systems, vol. 17,
no. 2, pp. 570–586, 2016.
[2] J. Rios-Torres and A. A. Malikopoulos, “A Survey on the Coordination
of Connected and Automated Vehicles at Intersections and Merging at
Highway On-ramps,” IEEE Transactions on Intelligent Transportation
Systems, vol. 18, no. 5, pp. 1066–1077, 2017.
[3] E. R. M¨uller, “Optimal Arrival Time Scheduling of Automated Vehicles
at Intersections,” Doctoral dissertation, Post-graduate Program in Au-
tomation and Systems Engineering, Federal University of Santa Catarina,
Florian´opolis, SC, Brazil, 2018.
[4] K. Dresner and P. Stone, “A Multiagent Approach to Autonomous
Intersection Management,” Journal of Artificial Intelligence Research,
vol. 31, pp. 591–656, 2008.
[5] H. Schepperle and K. B¨ohm, “Valuation-aware Traffic Control: The
Notion and the Issues,” in Multi-agent Systems for Traffic and Trans-
portation Engineering.
IGI Global, 2009, pp. 218–239.
[6] J. Lee and B. Park, “Development and Evaluation of a Cooperative
Vehicle Intersection Control Algorithm under the Connected Vehicles
Environment,” IEEE Transactions on Intelligent Transportation Systems,
vol. 13, no. 1, pp. 81–90, 2012.
[7] F. Zhu and S. V. Ukkusuri, “A Linear Programming Formulation for
Autonomous Intersection Control within a Dynamic Traffic Assignment
and Connected Vehicle Environment,” Transportation Research Part C:
Emerging Technologies, vol. 55, pp. 363–378, 2015.
[8] E. R. M¨uller, R. C. Carlson, and W. Kraus, “Intersection Control for
Automated Vehicles with MILP,” IFAC-PapersOnLine, vol. 49, no. 3,
pp. 37–42, 2016.
[9] M. W. Levin and D. Rey, “Conflict-point Formulation of Intersection
Control for Autonomous Vehicles,” Transportation Research Part C:
Emerging Technologies, vol. 85, pp. 528–547, 2017.
[10] B. Li, Y. Zhang, Y. Zhang, N. Jia, and Y. Ge, “Near-optimal Online
Motion Planning of Connected and Automated Vehicles at a Signal-
free and Lane-free Intersection,” in 2018 IEEE Intelligent Vehicles
Symposium (IV), 2018, pp. 1432–1437.
[11] B. Li, Y. Zhang, N. Jia, and X. Peng, “Autonomous Intersection Manage-
ment over Continuous Space: A Microscopic and Precise Solution via
Computational Optimal Control,” IFAC-PapersOnLine, vol. 53, no. 2,
pp. 17 071–17 076, 2020.
[12] D. Roca, D. Nemirovsky, M. Nemirovsky, R. Milito, and M. Valero,
“Emergent Behaviors in the Internet of Things: The Ultimate Ultra-
large-scale System,” IEEE Micro, vol. 36, no. 6, pp. 36–44, 2016.
[13] D. Roca, R. Milito, M. Nemirovsky, and M. Valero, “Advances in
the Hierarchical Emergent Behaviors (HEB) Approach to Autonomous
Vehicles,” IEEE Intelligent Transportation Systems Magazine, vol. 12,
no. 4, pp. 57–65, 2020.
[14] G. J. Ninos Neto, “Analysis of the Management of Automated Vehicles
with Free Exploration of the Intersection Area (in Portuguese),” Master
thesis, Post-graduate Program in Automation and Systems Engineering,
Federal University of Santa Catarina, Florian´opolis, SC, Brazil, 2021.
[15] E. Ahmadi, R. C. Carlson, W. Kraus Junior, and E. Taheri, “Near-
optimal Coordination of Vehicles at an Intersection Plaza using Finite
Fourier Series,” in 35º Congresso Nacional de Pesquisa e Ensino em
Transportes.
Brazil: ANPET, 2021.
[16] E. Taheri and O. Abdelkhalik, “Initial Three-dimensional Low-thrust
Trajectory Design,” Advances in Space Research, vol. 57, no. 3, pp.
889–903, 2016.
[17] R. Lattarulo and et al., “Urban Motion Planning Framework based on
n-B´ezier Curves Considering Comfort and Safety,” Journal of Advanced
Transportation, vol. 2018, 2018.
[18] M. Schwung and J. Lunze, “Networked Event-Based Collision Avoid-
ance of Mobile Objects with Trajectory Planning based on B´ezier
Curves,” European Journal of Control, vol. 58, pp. 327–339, 2021.
11
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

[19] Z. Fan, M. Huo, S. Xu, J. Zhao, and N. Qi, “Fast Cooperative Trajectory
Optimization for Close-Range Satellite Formation Using Bezier Shape-
Based Method,” IEEE Access, vol. 8, pp. 30 918–30 927, 2020.
[20] B. Siciliano and O. Khatib, Eds., Springer Handbook of Robotics.
Berlin, Heidelberg: Springer, 2008.
[21] A. G. Ulsoy, H. Peng, and M. Cakmakci, Automotive Control Systems.
Cambridge: Cambridge University Press, 2012.
[22] R. T. Farouki, Pythagorean—hodograph Curves.
Springer, 2008.
12
Copyright (c) IARIA, 2022.     ISBN:  978-1-61208-974-4
VEHICULAR 2022 : The Eleventh International Conference on Advances in Vehicular Systems, Technologies and Applications

