Long-Term Environment Prediction for Model Predictive Control in Vehicles: 
Pattern Recognition upon Primitive Driving Behavior and Driver Condition 
Karl-Falco Storm, Daniel Eckardt 
Powertrain & Power Engineering 
IAV GmbH 
Gifhorn, Germany 
email: karl-falco.storm@alumni.tu-clausthal.de, 
daniel.eckardt@iav.de 
Meng Zhang, Jörg Grieser,  
Michael Prilla, Andreas Rausch 
Institute for Informatics 
Technische Universität Clausthal 
Goslar, Germany 
email: {meng.zhang, joerg.grieser, michael.prilla, 
andreas.rausch}@tu-clausthal.de 
Abstract—This paper evaluates the prediction accuracy of inde-
terministic environments. The exhaust aftertreatment for vehi-
cles is used as a sample scenario, whose efficiency should be en-
hanced using pattern recognition techniques. It determines a 
control strategy to minimize exhaust emissions—whose volume, 
composition and temperature depends on the load and speed of 
the combustion engine. Since the engine being controlled by the 
accelerator pedal, the driving behavior needs to be predicted for 
adequate horizons. The new approach is simulated on the basis 
of driving data at different traffic scenarios, including urban, 
overland and motorway road types. The recorded driving be-
havior is examined location-based by transferring it into a dy-
namical number of primitive driving behavior classes. This way, 
traffic scenarios can be distinguished by using a relatively small 
set of data. Furthermore, the driving behavior does not have to 
be labeled, since information about it occurring is not required. 
In context with the task of vehicle control, possible changes in 
driving behavior due to a higher stress level have already been 
proven. Following this finding, driving behavior prediction is in-
vestigated in consideration of the driver’s condition. In the end, 
a benchmark is carried out to compare existing prediction meth-
ods of location-based pattern recognition. After presenting the 
findings, an outlook for possible future research is given. 
Keywords-pattern recognition; long-term prediction; driver 
condition monitoring; primitive driving behavior; model 
predictive control. 
I.
INTRODUCTION 
From the perspective of control theory, ambient conditions 
are key input factors for a controller’s performance. In order 
to optimize the regulatory strategy of model predictive control 
systems regarding predefined targets, accurate predictions are 
needed. While this is very effective for deterministic and com-
pleted systems without randomness of future states, indeter-
ministic processes and environments must be monitored 
closely. The environment is represented by signals of sensors 
observing it. Nevertheless, not all states and influences can be 
recognized, as the observation of certain values is impossible 
or technically too expensive.  
Turning over towards driving behavior prediction, the ac-
tual state of the vehicle is observed by various on-board sen-
sors. From this point of view, future conditions depend on pos-
sible car maneuvers performed by the driver. Besides driving 
behavior classification, maneuver restricting driving environ-
ments are also an ongoing subject of research. These (partly 
indeterministic) restrictions include course of the road, speed 
limits, other traffic participants as well as weather and light 
conditions, for example. So, in order to generate accurate pre-
dictions, both factors—human and environmental—are con-
sidered. In this research, the predictions of indeterministic en-
vironments using pattern recognition techniques are evaluated 
and differentiated against existing approaches. This is done 
using driving behavior as a use case, including the driver’s 
condition for the first time. 
A. Motivation
In automotive field, slow control circuits like engine cool-
ing, cabin climate conditioning gain efficiency from predic-
tive control systems. The prediction of driving behavior is a 
key factor to many different applications in the automotive 
field. In this context, it is understood as the longitudinal and 
lateral control of a vehicle. Velocity and acceleration are 
mainly influenced via the accelerator pedal that affects the en-
gine load [1]. To date, driving is mainly linked with human 
behavior, therefore, it is of an indeterministic nature. In con-
clusion, the effectivity depends on the driver’s pedal control, 
which represents his driving behavior as a function of the cur-
rent traffic scenario. 
The engine load and speed indirectly determine the 
amount and composition of the exhaust gas. Its general pur-
pose is minimizing the emission of unwanted exhaust gas 
components. Each of its modules has got its own optimal op-
erational temperature range, where each catalytic reaction per-
forms best [1]. 
Looking at diesel engines in particular, an injection angle 
shift can lead to an increase in the exhaust gas and the exhaust 
aftertreatment system’s temperature. Compared to a cold sys-
tem, a preheated exhaust aftertreatment system dramatically 
decreases the amount of NOx emitted at emission peaks due to 
better efficiency. But preheating also causes a slight increase 
in fuel consumption and, therefore, leads to additional CO2 
emission. While this strategy is usually pursued at the engine’s 
cold starting, it might also occur at normal operation [2]. For 
example, if the engine idles for a certain time (e.g., waiting at 
a road junction), the exhaust aftertreatment system cools 
down. Thereafter, at a possible acceleration, a huge amount of 
84
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

exhaust gas may release the exhaust gas system untreated, un-
til the light off temperature of the components are reached 
again. In this case, the exhaust aftertreatment gains efficiency, 
if preheating starts punctual. If it starts too early, fuel is wasted 
because of unnecessary heating. If it starts too late, the after-
treatment efficiency still increases, but fuel consumption is 
higher than at optimal timing. The regeneration of the diesel 
particulate filter requires a constant high exhaust gas temper-
ature. Ideal way, this process takes place at the time when a 
constant (higher) engine performance is present. This way, in-
tensive preheating is not necessary again saving fuel and CO2 
emissions [1]-[4]. 
Both examples show that detailed knowledge of the up-
coming engine load is significantly important for model pre-
dictive control. Therefore, improvements in prediction accu-
racy are investigated in this work. 
B. Content and Structure
This paper has the following structure: Section II gives an
overview about predictive control systems, driving behavior, 
its prediction and driver condition detection. As a conclusion, 
a scientific gap is worked out in Section III. Thereafter, the 
new developed approach is described and explained with the 
aid of an example scenario in Section IV. Detailed structures 
and specifications of the algorithm are explained in the imple-
mentation part. In Section V, the experiment including test 
data generation is described. Finally, the findings are summa-
rized and an outlook for possible future work is given in Sec-
tion VI. 
II.
RELATED WORK
Predictions of future ambient conditions can be done by 
using several approaches. A simple approach is the extrapola-
tion of the actual observed status. Taking the vehicle condition 
as an example, constant speed, acceleration or accelerator pe-
dal position (KoGaS-model) are common techniques for 
short-term estimations in the matter of a few seconds, becom-
ing more inexact for longer horizons [5][6]. But for the shown 
model predictive control systems, a horizon in the matter of 
minutes is required. Figure 1 shows a rough categorization of 
the related work. The different techniques are classified by 
their methodical approaches, their prediction horizons and 
their universality for being used at different road classes and 
traffic scenarios 
Long-term predictions can be achieved by conflating 
navigation data (street type, road course, speed limit and ele- 
Degree of Individualization 
Scenario Range
bast06
Treiber00
Wille09
S.A.N.T.O.S
ACC 
InnoDrive
Wahl15
Eversbach
05
Kraus12
Jain15
Leibner13
Unlimited
Limited
Zhang17
Jiang16
Rittger15
Gabloner
10
Miyajima
07
Kumagai04
Langer14
Amata09
Shimosaka
15
Lauren-
shyn09
Ortiz14
Mauk11
Singular
KoGaS
Single Scenario
Road Class wide
Universal Scenarios
Scientific Gap
Extra-
polation
Functional Models
Legend
Overland
Urban
Motorway
Machine Learning
V85
Figure 1.  Categorization of driver stress detection methods. 
vation profile) of the future route with the driver’s average 
(expected) driving behavior. Following this concept, func-
tional models like V85 are able to generate a velocity trajec-
tory based on this navigation data. Further development of this 
concept was done by Müller et al. [7] and Ebersbach [8]. Both 
references describe functional models that learn the mean ve-
locity deviation (compared to the speed limit) and acceleration 
behavior of an individual driver. Using this averaged driving 
behavior, good results are achieved for low traffic density at 
overland road. But these methods suffer at heavy traffic situ-
ation and at built-up areas, where the driving behavior is pre-
dominantly influenced by environmental factors like preced-
ing vehicles [7]-[9]. Thus, concepts for taking the driving be-
havior of preceding vehicles into account have been devel-
oped, but they depend on environmental scanning, e.g., using 
an adaptive cruise control’s radar sensor [10]. 
Numerous authors addressed the prediction topic using 
machine learning techniques and statistical methods. They are 
also suitable to predict uncertainty by the distinction of traffic 
scenarios, e.g., using kernel density estimation [11] and Mar-
kov transition probabilities for discrete states [12]. Artificial 
Neural Networks (ANN) proved to be an accurate way of pre-
dicting driving behavior under uncertain conditions [6]. Nev-
ertheless, ANN’s high demand of labeled learning data is a 
downside.  
Clustering algorithms are commonly used to distinguish 
traffic scenarios, thus potentially receiving better results [13]-
[15]. Features can be abstracted from the raw signals, their 
histograms or distributions. Both pattern recognition tech-
niques have almost exclusively been used on single traffic sce-
narios yet, but they do offer promising possibilities for univer-
sal approaches even with small sets of data [10]. 
So far, driving behavior prediction has commonly been 
described from a data’s point of view. But in this context, the 
human machine interaction’s point of view is another im-
portant field of investigation, because each driver has got his 
individual behavior in different driving situations. Besides 
physical and legal restrictions, the personal preferences of the 
driver may depend on a wide field of different factors, giving 
it indeterministic characteristics [8]. They can be classified 
into stable (1) and variable (2) factors, depending on the per-
son (a) or a certain situation (b), e.g., sociodemographic char-
acteristics (1a), driving ability (2a), traffic environment (2a) 
and weather (2b) [14][16]. By observing the mental and emo-
tional state of the driver, some conclusions might be drawn—
e.g., a negligent driving behavior while being pressed for time.
Mental workload estimation of humans has been investi-
gated for an even longer period. In general, five different tech-
niques of state evaluation are derived from literature (Figure 
2). They include direct measurement and iterative physiologic 
measurements, self-assessment, observing via attention tests 
to make assumption from ambient conditions (Digital Emo-
tions). All methods can deliver exact results, only if appropri-
ate analysis models are used and calibrated before. 
A fusion of different physiological measurements gives 
good results if the physical impact of the environment can be 
controlled (e.g., movements, temperature fluctuations). Atten-
tion tests and repetitive surveys are not very suitable for con-
tinuous measuring, because they affect the actual state of the  
85
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

Figure 2.  Categorization of driver stress detection methods. 
experimentee by giving him an additional task. For self-as-
sessment, slight stress may not be detected by the experi-
mentee. Behavior observing can be done by rating actions, 
movements and posture. This usually requires a qualified in-
vestigator or expertise. Finally, Digital Emotion summarizes 
techniques for making assumptions of the experimentee by 
observing ambient conditions. For driving tasks, this includes 
the interpretation of external factors that might affect the 
driver condition such as intense traffic or aggressive behavior. 
Of course, a fusion of all five methods delivers highly precise 
information [17]. 
While matching workload onto sensor data is relatively 
easy, this does not count other way around—detecting stress 
from sensor data. According to the valence-arousal model, 
stress is a combination of mental workload and negative emo-
tions. A great variety of physiological signals are capable of 
drawing conclusions about the mental load and the emotional 
state after setting up a suitable stress model [15][18]. 
Pulse data and the Galvanic Skin Response (GSR) are easy 
to measure and frequently used in activity trackers. While 
studies proofed their reliability for scientific applications, 
open low-cost platforms for scientific research are yet hard to 
find. This also applies for the evaluation methods apart from 
classical methods. In terms of data analysis, features are ex-
tracted and interpreted from the respective raw sensor signals. 
The Heart Rate Variability (HRV) is derived from time differ-
ence between two subsequent heart beats, which can be used 
as a stress measurand. High mental workload and emotional 
stress usually cause the HRV to decrease. Photoplethysmo 
Graphic Sensors (PPG) allow the measurement of pulse data 
by simply recording the capacity of reflection at suitable skin 
areas. Because this signal is not identical to electrocardio-
grams, the derivation of HRV is inexact [19][20]. 
GSR analysis is another approach that is issued frequently. 
An internal or external stimulus leads to a sudden decrease 
with slow recovery of skin resistance because of sweat gland 
activity within seconds. Therefore, the palm of the hand and 
sole are suited best for measuring. The number and intensity 
of peaks is determined by a deconvolution analysis [21]. Emo-
tional states are usually detected using non-heuristic methods 
[22], necessitating a valid emotional model to be established 
in advance. Relying on physiological measurements alone, 
sensor accuracy and interpretation accuracy together tend to 
be around 45-65% [21][23].  
In context with the task of vehicle control, possible 
changes in driving behavior due to a higher stress level have 
already been proven [16]. Vice versa, stress and traffic scenar-
ios have been related by Heinrich [17] and Yamaguchi et al. 
[24]. Based on their findings, the prediction of future driver 
workload is possible after a sufficient training period. But 
studies also showed that the manner and effects are individual, 
as the experimentee’s driving behavior responds different in 
complex and stressful situations. Therefore, no general valid 
conclusions can be drawn [25]. 
III.
SCIENTIFIC GAP AND RESEARCH QUESTION
Machine learning techniques for predicting the future en-
vironment have already been described in numerous publica-
tions, proving their effectivity in certain traffic scenarios. But 
they have not yet been investigated for a universal usage. Con-
cerning driving behavior, long term predictions are currently 
generated based on functional models and navigation data.  
For an extensive traffic scenario distinction, these models 
need a wider range of input data about road conditions, 
weather, the driver’s intention as well as other traffic partici-
pants. It is not possible yet to gather all the necessary infor-
mation via sensors, even if cloud services and Car2X technol-
ogies extend their perception range. High definition map data 
are an additional cost factor not to be scored, as it needs to be 
updated frequently. Especially for cars with simple specifica-
tion, this kind of information is not available yet, leaving traf-
fic guidance-based predictions at an insufficient data situation. 
Furthermore, a priori distinction of traffic scenarios is needed 
for functional models, equivalent to labels for training artifi-
cial neural networks. 
Keeping this in mind, a pattern recognition technique 
should be developed that relies on simple and limited data in-
put, offering a wider variety of traffic scenarios to be distin-
guished. Also, location-based predictions allow considering 
local particularities if a driver travels repeatedly on the same 
route, learning from the driver individual behavior. The obser-
vation of the driver’s conditions regarding his emotion and 
stress level should be evaluated in order to enhance the pre-
diction effectiveness. 
IV.
PATTERN RECOGNITION
For image recognition, patterns are typical detected and 
assigned based on the training of an artificial neural network 
with a pre-labeled dataset. For signal paths, labeling can be 
done analog, describing certain ambient scenarios that need to 
be defined in advance. Conversely, pattern recognition fo-
cuses on similar recurring patterns of an observed value. This 
implies that certain patterns occur regularly in any similar 
form and order. Clustering algorithms allow the detection and 
specification of similar patterns by the comparison of the input 
data, opening up for a wider set of dynamical defined scenar-
ios (classes). Therefore, the signals need to be split into dis-
crete sections on which clustering is applied. In order to com-
bine the individual patterns for long-term predictions, they 
need to be connected in any particular order. This can be 
achieved using transition matrices that keep track of the sig-
nals during pattern classification. Afterwards, transition pos-
sibilities are derived from that. 
86
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

For a model-based exhaust aftertreatment control system, 
the timeline of the engine load and speed are of special interest 
for estimating the future exhaust volume flow. It is mainly in-
fluenced by the driver’s usage of the accelerator pedal; for first 
approximation his input needs to be predicted. Generally, the 
resolution of the engine load can be reduced into several dis-
crete classes, depending on the respective application.  
At this point, longitudinal acceleration is graded into prim-
itive driving behavior classified by the following (see Figure 
3, deep-red graph): high (1-2) or medium (3) engine load for 
an increase of velocity or start-up, lower (4) engine load for 
constant velocity and idle (5-6) for deceleration and coasting. 
The velocity is classified in relation to the actual speed limit 
(or a location-based mean speed, if map data are unavailable) 
to approximate certain primitive traffic scenarios. The classes 
include halt or stop and go (0), traffic jam (1), minor slow-
down (2), normal velocity (2-3) and faster velocity scenarios 
(3-4). Furthermore, the driving behavior does not need to be 
linked to factors causing it [10].  
Conclusions are rather drawn by evaluating the location-
based likelihood of their occurrence and thus, can be inter-
linked iteratively for long-term predictions. Driving behavior 
and prediction knowledge are saved inside map database for 
it to be used location depended. Figure 3 shows how sample 
data of a route section is translated into its corresponding 
primitive driving behavior pattern using the introduced heu-
ristic rules.  
For the generation of a knowledge base, all previous ob-
served and recorded trips are separated among identical sec-
tions borders to keep them comparable. Useful sectioning can 
be done by the means of road type transitions and intersections 
(again, if no map data are available, sectioning should be de-
rived from a batch of recorded data on the same route). Figure 
4 shows four sample classes of driving behavior that have 
been identified via clustering, comparing the similarity be-
tween each other. Each class represents the driving through a 
corresponding traffic scenario on the same route section, e.g., 
rather clear road (left and mid-left) or an intense traffic sce-
nario (far right). This way, changing traffic conditions be-
tween each section are considered just by their impact on the 
driving behavior.  
Table I shows how a route is separated into section (s1-s8) 
by its map-data properties listed in the second column. In fact, 
all sections are designed to overlap each other enhancing their 
functionality close to their fringes. Inside each section, a num-
ber of discrete classes (N) describe the observed driving be-
havior pattern. The number of classes is determined dynami-
cally upon the similarity of the recorded trips; it varies be-
tween one and a useful upper limit. For example, on a motor-
way, only three to four different patterns are distinguished, 
Position [m]
Route Section
Velocity [m/s]
Position [m]
Route Section
Acceleration [m/s²]
Speed Limit
1    
    2      3    
    4    
    5      6
1    
    2      3    
   4    
    5      6
Route Section
Discrete States [-]
Position [m]
1    
   2   3    
   4    
    5   6
Transfer 
into 
primitive 
driving 
behavior
Velocity State
Acceleration State
Figure 3.  Deriving primitive driving behavior patterns from velocity and 
acceleration signals; a start-to-stop example. 
Route Section
Discrete State [-]
Position
Route Section
Position
Route Section
Position 
Route Section
Position
Discrete State [-]
Discrete State [-]
Discrete State [-]
Velocity State
Acceleration State
Velocity State
Acceleration State
Velocity State
Acceleration State
Velocity State
Acceleration State
Figure 4.  Four discrete traffic scenarios (classes) represented by their 
corresponding primitive driving behavior patterns. 
whereas in urban areas many different patterns may. 
Inside each class, the driving behavior (velocity and accel-
eration) is averaged over all assigned measuring runs. The 
right side of Table I shows 23 laps being assigned to eight 
clusters inside section s2. For each pattern-class (and their 
both section transition), a transition matrix keeps track of the 
classification flow for each single measuring run (far right). 
This allows building up statistical transition relationships be-
tween the section’s classes. Referring to Markov property, the 
allocation probabilities for subsequent sections only depend 
on the actual class rather than on the previous classes (see Fig-
ure 5). As soon as the knowledge is built for all necessary 
route sections, prediction is possible. Using the elements with 
the highest rating, class across predictions becomes possible. 
Then, when the first couple of meters are passed on the first 
section (s1), the actual observed driving behavior is matched 
to its best fitting classes inside the knowledge base. Thus, the 
algorithm chooses the most appropriate class for predicting. 
Because of changing transition probabilities, a change of the 
matched driving behavior class also leads to changes for the 
interlinked classes of the following route sections.  
Regarding the driver, observations of his conditions are 
also reduced into primitive patterns. They are combined from 
the self-assessment inside the valence-arousal state space and 
the physiological monitoring. Figure 6 shows combined rat-
ings matched to the curse of the route. Certain positions show 
a peak due to brief events (red traffic lights, hard breaking 
etc.). As a result, pattern recognition methods need to process 
multi-dimensional input data. Otherwise, a combination of the 
evaluations needs to be calculated (e.g., by multiplication).  
V.
SIMULATION AND EVALUATION
A simulation was set up to evaluate the pattern recognition 
methods shown in Figure 8, with and without the driver’s con-
dition consideration, compared to reference methods. In order 
to make it statistically sound, the overall sample size must 
reach a relatively high quantity which makes real-time in-car 
testing impossible. Therefore, a set of training data was rec-
orded to simulate the prediction methods at different traffic 
environments and scenarios inside a virtual simulation envi-
ronment. After short explorative research including a basic 
validation of the approach, the necessary sample size was es-
timated. Because the size exceeds the number of possible real-
time experiments, a MATLAB toolbox was set up for a simu-
lative evaluation. Hereafter, the measuring runs, the data re-
cording and their preparation is described. Afterwards, the im-
plemented methods are outlined, and prediction results are 
presented.  
87
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

1
2
4
5
1
3
1
3
4
5
2
3
4
1
2
1
2
3
4
Route Sections on Route Position
3
2
2
1
3
Section Cluster
Overlapping 
Area
Figure 5.  Interlinked driving style classes allow long-term prediction 
horizons using Markov property. 
A. Data Preparation
In order to simulate the reduction of driving behavior, a
large pool of real driving data needs to be recorded in advance. 
This was achieved by utilizing an experimentee that drove 
repetitive on a predefined test route. The runs were recorded 
using a position tracker, a physiological recorder and an event 
logger. Over 60 completed laps of mixed urban, overland and 
motorway driving environment—a total of 3,400 km—has 
been recorded, including 31 laps with GSR and Pulse moni-
toring of the driver. A Volkswagen Golf Mk4 was used as test 
vehicle. It is equipped with a manual gear shift and a retrofit-
ted cruise control which was used as reference driving behav-
ior. 
Physiological data has been recorded using a Shimmer 
GSR+ sensor recorder equipped with two GSR electrodes and 
a PPG fingertip sensor. Figure 7 shows the setup for the meas-
uring runs: The sensor recorder was attached to the left arm to 
minimize interruption due to finger movements during steer-
ing and gear changes (middle). With the help of an event log-
ger software set up, inputs like self-assessment and possible 
external stimuli are logged (far right). The latter includes tem-
poral stimuli, precipitation, lighting and temperature condi-
tions to contextualize the self-reported emotions. 
All measuring data was later mapped on HERE WeGo 
navigation data and interpolated 1 m resolution. Velocity and 
acceleration data has been adjusted for plausibility consider-
ing the vehicle’s performance. HRV and skin conductivity 
features were extracted from the physiological sensor data us-
ing the MATLAB Toolboxes Ledalab (GSR) and Pan-Tomp- 
Figure 6.  Comparison of several driver’s conditioning ratings in relation 
of the route position. Peaks marking special events of arousal.  
Figure 7.  Experimentee with GSR electrodes and PGG fingertip sensor 
(left and middle); Event logger interface (right). 
kins (HR) with KubiosHVR Standard. They were combined 
with the driver’s self-reports keeping track of the mood and 
workload. An ordinal evaluation table is utilized for convert-
ing the single inputs into an ordinal stress rating (Figure 6). 
B.
Implementation of the prediction methods
For the final benchmark, five prediction methods were im-
plemented as shown in Figure 8. Two of them were used as a 
reference: The Speed Limits (SL, 1) for the route were re-
trieved via HERE WeGo in advanced. Speed limit transitions 
were smoothened out using the test vehicle’s lateral accelera-
tion capabilities. This way, a rather naïve prediction was gen-
erated, representing a minimum solution. Figure 9 shows the 
speed limit (black line) for a latter part of the test route. 
An Adaptive Functional Model (AFM, 2) was imple-
mented using MATLAB Simulink. It is capable of generating 
predictions-based on velocity deviation (as a function of the 
speed limit) and observed acceleration behavior (as a function 
of the vehicle speed). Every single run is trained in advanced 
to ensure this method to deliver the best possible outcome. 
Even though this kind of training would not be possible in 
real-time evaluation, training the AFM using other recorded 
laps give detrimental results. Figure 9 shows the speed profiles 
generated with this model. For better performance at traffic 
lights and intersection (pink, area of interest), an additional 
feature was integrated into the functional model to give it fur-
ther advantages over straight trajectories. Taking all recorded 
test laps as a basis, statistical information about the chance of 
stopping were evaluated. If halt probability was over 50 % in-
side the according region of interest, the average velocity 
passing it, is added to the trajectory.  
Next up, two different clustering methods are described: 
Hierarchical Clustering (HC, 3) and Growing Neural Gas 
using driving behavior (GNG, 4) and additional Driver Condi-
Velocity
Driver Condition
Route Data
Acceleration
Input Data
Growing 
Neural 
Gas
Growing 
Neural 
Gas + GSR
Hierarichal 
Clustering
Adaptive 
Functional 
Model
Speed 
Limits
Kernel Density Estimator
  Knowledge Data Base
Prediction Output
Velocity
Acceleration
Travel Time
Position
Figure 8.  Overview of prediction methods used for the Benchmark. 
0.8
1
1.2
1.4
1.6
1.8
2
2.2
2.4
1
1.5
2
2.5
Driver’s Condition Rating
Route Position [km]
88
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

15
16
17
18
19
20
21
22
23
24
0
5
10
15
20
25
30
Velocity [m/s]
Route Position [km]
Speed Limit
AFM Velocity Prediction
Speed Camera Zone
City Limits
Intersections (YIELD) and Traffic Lights
Section Border
Figure 9.  Generation of 14 velocity prediction trajectories using the 
adaptive functional model (AFM) reference. 
tions (DC, 5) as training data. Hierarchical clustering using 
Ward’s Method is-based on the Euclidian distance between 
each set of features. In this case, the distances are calculated 
between the primitive velocity and acceleration pattern (see 
Figure 4). The distances between primitive driving patterns 
can be visualized using linkage tree. In Figure 10, the corre-
sponding Euclidean distance values of 23 driving profiles 
mark the border between aggregated and independent cluster-
ing classes. The optimal number of classes is determined by 
minimizing the inter-cluster distances (that is, minimizing the 
sum of class internal distance values), depicted by the orange 
bar for L² = 500. In a last step, all driving profiles that re-
mained linked are merged into a single class.  
In order to get predicted behavior for every class, velocity 
and acceleration data are averaged using a kernel density esti-
mator. Then, the primitive driving behavior is derived from it. 
A Growing neural gas implementation is used with two dis-
tinct data sets. Unlike hierarchical clustering, it allows multi-
dimensional feature sets; A priori combination is not neces-
sary. Also, the dynamical optimization of the class numbers is 
already integrated [26]. 
For deciding which class (prediction) to choose, the same 
distance metrics from HC are used for comparing the actual 
driving behavior with the knowledge base. At the end of each 
section, the subsequent classes are determined considering 
transition probabilities. Figure 11 shows the prediction of a 
measuring run (solid green line) being iteratively calculated 
every 10 m (dotted blue line) on the left-hand side. At the 11.5 
km mark, the road type changes from two-lane motorway to a 
single-lane overland road. A change in prediction accuracy is 
directly visible due to an increased variance. The speed limit 
(black) is drawn as reference.  
C.
Simulation Runs
First of all, the recorded laps were separated randomly us-
ing a lottery, resulting in 75 % (23) training data and 25 % (8) 
  
.        
0
5
10
15
20
0
500
1000
Euclidean Distance
Driving Behavior Patterns
Class Dividing Treshold
Figure 10.   Dendrogram of 23 driving profiles being divided into five 
classes according their similarity. 
test data sets. After separation, knowledge databases were 
generated for all clustering methods using parallel processing. 
For benchmarking the methods at different traffic environ-
ments, four test areas were defined for all three road types: 
urban, overland and motorway. Inside each area, the actual 
start of prediction is then determined randomly for each sim-
ulation iteration. The prediction horizon is set to 90 seconds 
with 150 m being the minimum distance. This way, the hori-
zon usually reaches from 1250 to 2500 m, depending on the 
actual vehicle speed at the prediction start. All methods then 
use the same end horizon to keep them comparable. With eight 
simulation runs in total, the number of simulated predictions 
reveals to 768 iterations (8 iterations × 8 tested profiles × 12 
evaluation areas).  
For each iteration, the virtual Volkswagen drives up to the 
next prediction start point. After arriving, all prediction meth-
ods calculate velocity and acceleration trajectories within pre-
diction horizon. Figure 11 shows two sample predictions gen-
erated by AFM (dotdashed grey) and HC (dotted blue) on the 
right-hand side. The point where the prediction starts is indi-
cated by a blue circle, located at the original trajectory (solid 
green). On the left side, a main road example is shown. AFM 
prediction is visibly better for the first 700 meters as it is closer 
to the original trajectory. Looking at the acceleration, HC gets 
it quite well for position 13.1 to 13.5 km where both trajecto-
ries decrease. On the right side, a mixed urban (yellow) and 
ex-urban scenario are shown. Obviously, a stop-and-go traffic 
scenario can be identified at distance 22.5 to 24 km when ve-
locity drops below 5 m/s. This time, the pattern recognition 
method clearly outruns the functional model as it predicts ve-
locity and acceleration behavior quite well. Nevertheless, pre-
diction here is shown on a location-based which is preferable 
for visual evaluation. Physically correct is a time-based pre-
diction which is harder to depict.  
D.
Simulation Results
After generating all predictions, the respective trajectories 
are compared to the real driving behavior. For both signals, 
velocity and acceleration, the Root-Mean-Square Error 
(RMSE) is calculated according to their time-dependent signal 
paths (Table II). The best performing values are highlighted. 
For the driving time, the absolute difference at the end of the 
prediction horizon is used. After completing twelve iterative 
runs, the simulation starts over using the subsequent lap. Neg-
ligible difference between several simulations proved the 
sample size of 768 to be statistically sound for this simulation 
(in fact, within a 95 % confidence interval). 
In order to apply statistical analysis, a distribution function 
has been fitted to the RMSE values and the absolute driving 
time deviation. It turned out that a log-normal distribution fits 
them perfectly, allowing a symmetrical boxplot representation 
of the results. Figure 12 shows the aggregated results of the 
simulation runs. The boxplots illustrate the logarithmized 
RMSE distribution of acceleration, velocity and time predic-
tion. The diamond represents the median of all measured val-
ues. Outliers are represented by spots outside the whiskers
89
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

9
10
11
12
13
14
15
16
0
5
10
15
20
25
30
Velocity [m/s]
Route Position [km]
Speed Limit
Vehicle's Velocity Trajectory
Iterative Velocity Prediction
12.2
12.4
12.6
12.8
13
13.2
13.4
13.6
13.8
0
5
10
15
20
25
Velocity [m/s]
Route Position [km]
Speed Limit
Vehicle's Velocity Trajectory
Start of Prediction 
HC Velocity Prediction
AFM Velocity Prediction
Speed Camera Zone
Section Border
22
22.5
23
23.5
24
24.5
0
5
10
15
20
25
Velocity [m/s]
Route Position [km]
City Limits
Intersections (YIELD) and Traffic Lights
Figure 11.  Iterative velocity prediction every 10 m (blue, dotted) using HC and a prediction horizon of 30 s (left figure). Two samples of a single velocity 
prediction comparing HC and AFM including local features (right figures). 
The upper plots show direct comparison between the ref-
erence methods (SL, AFM) and the three pattern recognition 
methods (HC, GNG, DC). All three disciplines are dominated 
by the pattern recognition methods—they have lower logarith-
mized RMSE values, and thus, lower mean errors (see Table 
2). At urban, ex-urban and motorway scenarios, the mean ac-
celeration difference is 0.076 m/s²using the naïve speed limit-
based prediction. The adaptive functional model-based pre-
diction only improves little by 5 % (0.072 m/s²). Pattern 
recognition greatly improves the accuracy by 37.5 % (0.045 
m/s²) using Growing neural gas. Velocity and driving time 
predictions show a similar picture. While pattern recognition 
improves velocity prediction by 35 % (0.77 vs. 0.50 m/s for 
AFM vs HC), driving time, which is the sum of all velocity 
deviations at the end of the prediction horizon, pattern recog-
nition methods reduce the mean error by 30 % from 8.6 s to 
6.1 s. 
The lower boxplots show the detailed results for each road 
type. As pattern recognition dominates, both references meth-
ods (HC and SL) are left out now to obtain a better overview. 
Figure 12.  Detailed boxplots of the simulation results (n: 768, 90 s horizon). 
 On the left third, the logarithmized RMSE for velocity 
prediction are shown, arranged in urban, overland and motor-
way traffic environments. On the right, acceleration prediction 
is shown in the same order. Overall, predictions for motorway 
scenario got the highest accuracy, being more than 7.5 times 
better than urban and more than 3.5 times better than at over-
land scenarios; Five times or 2.5 times for acceleration, re-
spectively. It is worth mentioning that Growing neural gas us-
ing driver condition patterns performs best at built-up areas. 
Velocity predictions are 3 % better, whereas the acceleration 
performance increases about 8 %. The mean driving time de-
viation is 0.02 s better, which is an improvement of 2 %. All 
other scenarios are not dominated by DC. 
In terms of computing time, the SL reference uses almost 
no resources being plausibilized only. Next up, as AFM only 
learns the actual run, computational time is negligible. The sit-
uation for clustering algorithms is quite different. Knowledge 
base generation using Growing neural gas algorithm uses up 
a lot of resources and calculation time doubled with every ad-
ditional driving profile. Hierarchical clustering performed 
most effective by comparison. 
VI.
CONCLUSION AND FUTURE WORK
In this work, it has been shown that location-based pattern 
recognition is capable of delivering long term driving behav-
ior predictions. It also shows a significant higher accuracy 
compared to traditional functional models. Also, the consider-
ation of the driver condition does have advantages at traffic 
scenarios with great external influences, improving predic-
tions by another 3 to 8 % (Figure 12, lower part).  
At this point, it is rather unclear whether the driver’s con-
dition really influenced the driving behavior at urban scenar-
ios, or if external factors like traffic intensity influenced the 
drivers’ conditions. In the latter case, ambient conditions may 
become “visible” for the pattern recognition method. For other 
traffic environments, benefit from computationally expensive 
Growing neural gas over Hierarchical clustering algorithm 
was no issue.  
For further validation of the concept, the following 
changes in the experimental designs are recommended: Using 
a better motorized test vehicle and recording its CAN-Bus 
data directly. The set-up of a stress model using valence-
arousal model, a stimuli session should be completed in ad-
vanced, in order to perform a qualitative analysis upon the 
driver’s condition [25]. Five to ten different experimentees 
Hierarchical Clustering 
Growing Neural Gas
Growing Neural Gas + Driver Conditions 
Speed Limit (Reference)
Function Model (Reference)
Median
-0.5
-1.0
-1.5
-2.0
-2.5
Acceleration Over Travel Time
LOG(RMSE)
References
0.5
0.0
-0.5
-1.0
-1.5
Velocity Over Travel Time
References
3.0
2.0
1.0
0.0
-1.0
Travel Time
References
LOG(Abs(t))
-0,7
-0,9
-1,1
-1,3
-1,5
-1,7
-1,9
-2,1
-2,3
Acceleration Over Travel Time
Urban
Motorway
Overland
0.5
0.0
-0.5
-1.0
-1.5
Velocity  Over Travel Time
LOG(RMSE)
Urban
Motorway
Overland
90
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

should participate in the test run in order to evaluate the pre-
diction performance according their individual driving behav-
ior. Looking at driving behavior in particular, the respective 
traffic scenarios should be captured and analyzed detailed.  
On the algorithm’s side, prediction methods based on arti-
ficial neural networks should be included into the benchmark 
as well. Furthermore, the necessary level of detail for model 
predictive control should be considered in the evaluation. 
Therefore, the simulation of real physical processes and the 
effect of variable prediction horizons length may be consid-
ered as well. 
REFERENCES 
[1]
S. Pischinger and U. Seiffert, “Handbuch Kraftfahrzeugtech-
nik,“ (Automotive Engineering), Springer Vieweg, 2016.
[2]
R. Plöntzke, S. Naumov, M.-C. Bartsch, A. Lechmann, and C.
Stebner, “Nutzung prädiktiver Streckendaten zur Minimierung
von Verbrauch und Emissionen in allen Fahrsituationen,”
(Minimizing Consumption and Emissions Using Predictive
Route Data), Desden: FAD, 2017.
[3]
K. R. Neuhäuser, “Entwicklung einer Temperaturregelung und
Vorsteuerung für die Dieselpartikelfilter-Regeneration mit
experimenteller Bedatung,”(Developtment of a Temperature
Control and Pilot Control for the Regeneration of DPF), Berlin,
2016.
[4]
T. Grahle, M. Tonne, A. Wiedersberg, and T. Zsebedits,
“Regeneration 
des 
Partikelfilters 
mithilfe 
von
Navigationsdaten,” (DPF Regeneration with the Help of Route
Data), Motortechnische Zeitschrift, vol. 77, no. 1, 2016, pp. 16-
22.
[5]
D. Heinrich, “Modelling the driver's behavior to investigate the
dynamic loads in the drivetrain,” Forschungsberichte IPEK,
vol. 92, 2016.
[6]
S. Lefèvre, C. Sun, R. Bajcsy, and C. Laugier, “Comparison of
parametric and non-parametric approaches for vehicle speed
prediction,” American Control Conference, 2014.
[7]
M. Müller, M. Reif, M. Pandit, Staiger, and Wolfgang, “A
predictive gear shift system for motor vehicles using
environmental data,” Automatisierungstechnik, vol. 52, no. 4,
2004, pp. 180-188.
[8]
D. Ebersbach, “Entwurfstechnische Grundlagen für ein
Fahrerassistenzsystem zur Unterstützung des Fahrers bei der
Wahl seiner Geschwindigkeit,” (Speed Selection ADAS),
Dresden, 2004.
[9]
H.-G. 
Wahl, 
“Optimale 
Regelung 
eines 
Prädiktiven
Energiemanagements von Hybridfahrzeugen,” (Optimal Model
Predicitve Control for Hybrid Vehicles), Karlsruhe, 2015.
[10] M. Zhang, K.-F. Storm, and A. Rausch, “Recognition and
forecast 
of 
driving 
behavior-based 
on 
self-learning
algorithms,” in Hybrid and Electric Vehicles, Braunschweig,
2017, pp. 216.
[11] T. Kumagai and M. Akamatsu, “Modelling and prediction of
driving behavior,” in 2nd International Symposium on
Measurement, Analysis and Modeling of Human Functions /
1st Mediterranean Conference on Measurement, Genova, 2004.
[12] T. 
Mauk, 
“Selbstlernende, 
zuverlässigkeitsorientierte
Prädiktion energetisch relevanter Größen im Kraftfahrzeug,”
(Selflearning, Reliability-Criented Prediction of Energetic
Relevant Dimensions), Stuttgart, 2011.
[13] A. Laurenshyn, L. Åström, and K. Brundell-Freij, “From speed
profile data to analysis of behaviour—Classification by
Pattern Recognition Techniques,” IATSS RESEARCH, vol.
33, no. 2, 2009, pp. 88-89.
[14] M. Liebner, F. Klanner, M. Baumann, C. Ruhhammer, and C.
Stiller, “Velocity-based driver intent inference at urban
intersections in the presence of preceding vehicles,” IEEE
Intelligent Transportation Systems Magazine , vol. 5, no. 2,
2013, pp. 10-21.
[15] Z. F. Quek and E. Ng, “Driver identification by driving style,”
Stanford, 2013.
[16] H. Holte, “Einflussfaktoren auf das Fahrverhalten und das
Unfallrisiko junger Fahrerinnen und Fahrer,” (Treats on
Driving Behavior and Crash Risks of Young Drivers), in
Berichte der Bundesanstalt für Straßenwesen, no. M 229, 2012.
[17] F. Heinrich, “Vorhersage der Fahrerbelastung während der
Fahrt,” (Prediction of the Driver’s Stress Level During
Driving), Stuttgart, 2012.
[18] M. B. H. Wiem, and Z. Lachiri, “Emotion classification in
arousal valence model using MAHNOB-HCI database,” in
International Journal of Advanced Computer Science and
Applications, vol. 8, no. 03, 2017, pp. 318-323.
[19] P. Rainville, A. Becharab, N. Naqvib, and A. R. Damasioc,
“Basic emotions are associated with distinct patterns of
cardiorespiratory activity,” in International Journal of
Psychophysiology, vol. 61, 2006, pp. 5-18.
[20] M. Rollin, M. Atkinson, and W. A. Tiller, “The effects of
emotions on short-term power spectrum analysis of heart rate
variability,” in The American Journal of Cardiology, vol. 76,
no. 14, 1995, pp. 1089-1093.
[21] Y. Shi, M. H. Nguyen, P. Blitz, B. French, and S. Fisk,
“Personalized 
stress 
detection 
from 
physiological
measurements,” Pittsburgh, 2010.
[22] R. E. W. Jenke, “Static and dynamic methods for emotion
recognition from physiological signals,” München, 2015.
[23] C. McCarthy, N. Pradhan, C. Redpath, and A. Adler,
“Validation of the Empatica E4 wristband,” in Student
Conference (ISC), 2016 IEEE EMBS International, Ottawa,
IEEE, 2016, pp. 1-4.
[24] M. Yamaguchi, J. Wakasugi, and J. Sakakima, “Evaluation of
driver stress using biomarker in motor-vehicle driving
simulator,” in EMBS Annual International Conference, New
York City, IEEE, 2006.
[25] M. Soleymani and J. Lichtenauer, “A multimodal database for
affect recognition and implicit tagging,” in Transactions of
Affective Computing, vol. 3, no. 1, 2012.
[26] S. M. K. Heris, “Neural gas and GNG networks,” in MATLAB,
2015-08-28. 
http://yarpiz.com/77/ypml111-neural-gas-
network [Accessed 2018-02-02].
[27] P. J. Lang, M. K. Greenwald, M. M. Bradley, and A. O. Hamm,
“Looking at pictures: affective, facial, visceral, and behavioral
reactions,” in Psychophysiotogy, no. 30, 1993, pp. 261-273.
[28] M. Singh and A. Bin Queyam, “Stress detection in automobile
drivers using physiological parameters: a review,” in IJEE , vol.
5, no. 2, 2013, pp. 1-5.
[29] J. E. Meseguer, C. T. Calafate, and J. C. Cano, “Driving styles:
assessing the correlation of driving behavior with heart rate
changes,” València, 2017.
91
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

TABLE I.   DIVIDING A ROUTE INTO DISCRETE SECTIONS, SAMPLE CLUSTERING OF 23 MEASURING RUNS. 
Map Visualisation 
of the Route
Map Data
Section 
Type
Number of Classes 
per Section
Number of Trips 
per Class
Transitions' 
Probability
Road Type
Speed Limit
Intersections
Traffic Lights
[…]
[…]
          […]
s1: Urban
s1
s2
s3
s4
s5
s6
s7
s8
s2: Overland
s3: Overland
s4: Overland
s5: Urban
s6: Overland
s7: Urban
s8: Overland
N = 9 Classes
N = 8 Classes
N = 4 Classes
N = 6 Classes
N = 9 Classes
N = 6 Classes
N = 6 Classes
N = 7 Classes
Cluster 1: 3
Cluster 2: 2
Cluster 3: 3
Cluster 4: 6
Cluster 5: 1
Cluster 6: 2
Cluster 7: 4
Cluster 8: 2
∑ 23 Trips
Previous Section (s1)
From Cluster 3: 6/16
Subsequent Section (s3)
To Cluster 4: 1/6
To Cluster 8: 4/6
To Cluster 9: 1/6
TABLE II. 
MEAN RMSE AND COMPUTING TIME FOR ALL SIMULATED PREDICTION METHODS. 
SL 
AFM 
HC 
GNG 
DC 
m
s
m
s2
𝑠 
m
s
m
s2
𝑠 
m
s
m
s2
𝑠 
m
s
m
s2
𝑠 
m
s
m
s2
𝑠 
Urban 
2.04 
0.157 
80.9 
1.346 
1.193 
24.7 
1.099 
0.102 
39.9 
1.109 
0.101 
33.7 
1.077 
0.092 
34.4 
Motorway 
0.43 
0.013 
7.75 
0.21 
0.021 
2.09 
0.137 
0.019 
1.25 
0.143 
0.019 
1.21 
0.137 
0.020 
1.28 
Overland 
0.90 
0.060 
15.6 
0.80 
0.070 
10.5 
0.515 
0.043 
7.11 
0.543 
0.045 
7.80 
0.533 
0.040 
6.70 
Combined 
1.191 
0.076 
31.3 
0.771 
0.072 
8.63 
0.502 
0.066 
6.98 
0.542 
0.050 
6.08 
0.533 
0.045 
6.61 
Computing Time 
Low 
Low 
Medium 
High 
Highest 
a. Sample size: N = 768, Prediction Horizon of 90 s. 
MAP: HERE WEGO 
92
Copyright (c) IARIA, 2018.     ISBN:  978-1-61208-610-1
ADAPTIVE 2018 : The Tenth International Conference on Adaptive and Self-Adaptive Systems and Applications

