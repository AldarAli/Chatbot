Self-Driven Soft-Body Creatures
Ben Kenwright
School of Computing
Edinburgh Napier University, UK
Email: b.kenwright@napier.ac.uk
Kanida Sinmai
Department of Computer and Information Technology
Thaksin University, Thailand
Email: kanida@tsu.ac.th
Abstract—Virtual characters play an important role in computer-
generated environments, such as, video games, training sim-
ulations, and animated ﬁlms. Traditional character animation
control methods evolve around key-frame systems and rigid
skeletons. In this paper, we investigate the creation and control
of soft-body creatures. We develop creatures that learn their
own motor controls and mimic animal behaviours to produce
autonomous and coordinated actions. Building upon passive
physics-based methods and data-driven approaches, we identify
solutions for controlling selective mesh components in a coherent
manner to achieve self-driven animations that possess plausible
life-like characteristics. Active soft-body animations open the door
to a whole new area of research and possibilities, such as,
morphable topologies, with the ability to adapt and overcome a
variety of problems and situations to accomplish speciﬁed goals.
We focus on two and three-dimensional deformable creatures that
use physics-based principles to achieve unconstrained self-driven
motion as in the real-world. As we discuss, control principles
from passive soft-body systems, such as, clothes and ﬁnite element
methods, form the foundation for more esoteric solutions. This
includes, controlling shape changes and locomotion, as movement
is generated by internally changing forces causing deformations
and motion. We also address computational limitations, since
theoretical solutions using heuristic models that train learning
algorithms can have issues generating plausible motions, not to
mention long search times for even the simplest models due to
the massively complex search spaces.
Keywords–animation, control, soft-bodies, characters, motion,
physics, deformation, creatures, movement, unconstrained, physics-
based, self-driven
I. INTRODUCTION
Movement without a Skeleton
Soft-body creatures are or-
ganisms or animals that lack a skeleton (a real-world soft-body
example, would be a leech, a jellyﬁsh, or a even a tongue).
The question of how to efﬁciently represent the creature and
create ‘controlled’ movement is an open topic of research.
As soft-body creatures do not have the luxury of an internal
musculo-skeleton system to guide and steer their motion, but
must instead generate movement solely on the contraction and
expansion of their body tissues. Another key thing to remem-
ber, is soft-body creatures are not conﬁned to anatomically-
based structures (such as, bipeds or quadrupeds) and provide
a means of freedom and creativity. The creation and controlling
of self-driven soft-body creatures with scalable properties that
learn their own motor controls and mimic animal behaviors to
produce autonomous and coordinated actions is an important
and challenging subject.
Control & Realism
Skeleton key-frame methods are the
dominant solution for creating controlled creature animations.
As they offer an intuitive, ﬂexible and powerful solution that
can produce highly realistic results. However, can skeleton
based models generate animations that move and look the
same as a soft-body system? Assuming a soft-body creature
must keep its overall volume, a soft-body system is able to
squeeze and reduces its circumference and stretch to increases
its length. The internal deformations generate movement and
provide a visible set of secondary visual characteristics that
add a natural aura to the motion that are not apparent in purely
rigid simulation solutions.
Contribution
This paper presents a soft-body creature con-
trol system with scalable properties (i.e., trade-offs between
computational speed and detail). Our approach makes the
following technical contributions: (1) generation of steerable
deformations that control a character’s soft-body motions to
achieve targeted animations under their own forces (uncon-
strained movements through internal forces and contacts with
the environment); (2) the model does not require any intensive
off-line pre-processing, enabling artists to re-iterate multiple
versions quickly and efﬁciently to develop more creative and
imaginative solutions (enabling artistic freedom); and (3) we
create controlled animations that interact with the physical
simulation (e.g., push disturbances and secondary motions,
such as, vibrations and ripples).
Road Map
The rest of the paper is structured as follows:
First, Section II discusses related work. In Section III, we give
a explanation of our algorithm and practical considerations for
real-time environments. Section IV presents the results from
the simulation examples. Section V discusses the implication
of the method and explains any problems after taking the re-
sults into consideration. Finally, Section VI draws conclusions
from the approach and future work.
II. RELATED WORK
There has been lots of work into ‘passive’ soft-body
systems, such as, skin and cloth [1], [2]. These techniques
provide a wealth of information that we build upon in this
paper to construct animated soft-body creatures. The recent
work by Cheney et al. [3] and Kenwright [4] inspired the
research behind in this paper. Presenting innovative solutions
that go beyond traditional key-frame based methods towards
more esoteric procedural ones. For example, this includes, a
muscle-driven solution by Tan et al. [5] who creates animated
soft-bodies using an action line and helical muscle ﬁbers for
twisting movements. Combined with key-frame data prescribed
by an animator to steer and direct the resulting simulations
and generate life-like deformations (i.e., primary motions for
movement and secondary motions for appeal).
The area of soft-body creatures covers a diverse range
of topics across multiple disciplines. For instance, soft-body
creatures does not mean just ‘land’ creatures, but can also be
controlled muscle segments, like the tongue, not to mention
ﬂying and swimming animals. A good example of this, is the
work by Tan et al. [6] who did ground breaking work into soft-
body ﬁsh simulations. The research in soft-body creatures also
1
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

Figure 1. Timeline - Visual illustration of related publications over the past few years that have contributed towards more active and engaging soft-body
systems. [A] [1], [B] [2], [C] [3], [D] [4], [E] [5], [F] [6], [G] [7], [H] [8], [I] [9], [J] [10]
spins out to real-world models, such as, robots that grow and
evolve [7]. The paper ‘Unshackling Evolution: Evolving Soft
Robots with Multiple Materials and a Powerful Generative En-
coding’ by Cheney et al. [3] used a technique that divided the
object into ‘components’ (i.e., voxels) to create the controlled
motion. Then there was Lehman and Stanley [8], who evolved
a diverse range of creatures through a novelty search and local
competition. Shim and Kim [9] created ﬂying creatures using
body brain co-evolution, while Liu et al. [11] focused on a
hybrid skeleton to control the soft-bodies. A number of these
soft-body techniques have employed the ‘action-line’ control
system in combination with an optimisation search to steer
and direct the animation [5], [12]. For instance, a muscle-
driven tentacle animation by Stavness [10] and the soft-body
locomotion by Tan et al. [5]. In conclusion, active self-driven
soft-body creatures offer a novel solution for solving a wide
range of potential problems (see Figure 1 for a brief visual
illustration of inspiring research on the topic over the past few
years).
Our work:
Our work focuses on the ability to create imag-
inary and non-imaginary topologies and have them move in a
controlled manner (e.g., hop or walk along) driven under their
own internally changing forces. We incorporate techniques
from passive physics-based simulation systems and coarse
control meshes to reduce computational costs. While we use
an underpinning physics-based model, we integrate in control
approximations, such as, coordinated rhythmic oscillations,
to control and direct the soft-body’s movement towards an
organic and aesthetically pleasing solution.
III.METHOD
A purely procedural soft-body solution is plausible using
heuristic algorithms. For example, training trigonometric func-
tions (e.g., any signal can be composed of sinusoidal signals
- the concept behind Fourier series [13]). However, this opens
the door to a vast array of parameters with a ﬁnite search
range that is difﬁcult to solve in viable time frames and allow
for artistic control. Alternatively, we exploit a smarter solution
uses a hybrid combination of methods, such as, pre-recorded
training data to steer the system towards approximate solutions,
in combination with human intervention to create self-driven
soft-body actions. We take animation data (i.e., pre-recorded
key-frames). We connect the soft-body to the skeleton via
distance constraints, so as the animation plays the points will
move in a correlated pattern. As an important factor is the
creation of soft-body motions that are controllable (rather than
just randomly jiggling around). The kinematic solution of the
coupled system provides a starting set of oscillating distance
constraints from which we can calculate the penalty forces and
inverse dynamics. When we play back the soft-body system
using the calculated forces. The motions will be driven by the
physical system, and will only be approximate, but will capture
a starting essence for the animation (based on the key-frame
data). Of course, the motion will drift away from the pre-
deﬁned target set out by the key-frame data (the animation will
fall over or wobble to one side). This is where we need to adapt
and adjust the forces to steer and control the ﬁnal animation.
Allowing an animator to use key-frame motion initially to
target and formulate the underlining motion for the soft-body
and aid in the rapid proto-typing and development (see Figure
2). Since the ﬁnal simulation is generated using physics-based
concepts, the deformations are organic with directable purpose
(i.e., walk or move in a desired way - artistic inﬂuence).
Our physically-based approach to soft-body animation
evolves
around
the
automatic
control
of
the
contrac-
tions/expansions of interconnected constraints. The internal
forces drive the soft-body model’s motion. The formulation
2
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

Figure 2. Overview - Interconnected elements to construct and tune our
soft-body character’s unconstrained motions.
of a passive soft-body system is straightforward, with the
challenges evolving around the control of the internal forces
to achieve directed motion. Penalty-based methods and inverse
dynamic calculations allow us to solve for desired forces to
accomplish positional changes. Combining animator con-
trolled targets with a dynamic force driven simulation, we
capture the global movement speciﬁcations of the animator
(artistic characteristics) and achieve detailed body deforma-
tion effects that appears organic and life-like (i.e., analogues
to a real-world organic creature). We emulate a secondary
underlying deformation motions that include squeezing and
bulging through lengthening, bending, and twisting movements
in a free moving action without an internal skeleton. We
use a point-mass structure with a spring-damper system for
experiments that do not require exact solutions (i.e., quick
proto-typing/investigation). For more precise solutions (i.e.,
conservation of momentum and stiff-constraints), we use a
ﬁnite element composition and a constraint based solver. De-
composing the mesh into a ﬁnite-element structure (triangles in
2D and tetrahedrons in 3D). Oscillating the rest forces between
the constraints to create rhythmic movements.
A. Motion Mechanics
We explore and propose two methods for generating soft-
body motions, i.e., procedural (trigonometric) and data-driven
(signal-data).
Trigonometric (Fourier Series)
For some systems, a goal
is speciﬁed, such as, walking speed or jumping height. For
a highly coupled system, it can be difﬁcult to achieve a
uniﬁed motion to accomplish such an action. Applying the
concept that any signal can be represented by a series of
sinusoidal signals. We use an optimisation algorithm to train
the trigonometric parameters (i.e., amplitude, frequency and
Figure 3. Animating Soft-Body System - Decomposing the model into
elements (e.g., point-masses) and controlling the interconnected elements to
achieve directed animations.
offset) to achieve a motion which accomplishes a speciﬁed
ﬁtness criteria. The output from the trigonometric solution
may also form a good approximation for artists to start from.
The signals from the trigonometric functions can be saved and
modiﬁed to create more aesthetic solutions.
Trained/Customized Signals
The ability to allow an artist
to customize and adapt constraint signals is important for
freedom of creativity. For example, it is difﬁcult to train
soft-body motion signals using purely key-frame data, as
animations, such as, jumping - require the body to squash and
conserve energy then release it to achieve a jumping motions.
Additionally, if a signal is created by an artist, we are able
to use Fourier transform to extract parameters or even ﬁlter
components to target different motions.
B. Overall Volume & Shape
A point-mass system offers a simple and intuitive solution
for the majority of cases. However, there are situations that
require the shape to be distorted, while preserving the overall
volume. For these situations, a ﬁnite element method (FEM)
is required (i.e., area and Young’s modulus calculation). FEM
keeps track of the internal volume by distribution of pressure
forces outwards via the connecting corner points (i.e., assum-
ing a triangle or tetrahedron conﬁguration).
For a point-mass system with distance constraints, we
limit contraction/expansion, (e.g., 10% to keep the overall
appearance and some form of the original shape) in addition
to limiting forces, while for volume regulation using an FEM
topology, each partitioned segment must retain its original vol-
ume, within some tolerance, allowing the shape to deform and
stretch (for instance, taking a small fat object and stretching
it into a thin long one, analogues to a leech contracting and
stretching but continuing to hold the same volume).
C. Low-Resolution Control Mesh
We explain our low-dimensional control model for creat-
ing controlled deformations and ultimately the goal of self-
driven soft-body creature animations. A coarse control mesh
technique is used to reduce the computational overhead and
the mathematical complexity of the model, so we are able to
achieve real-time frame rates and quick turn-around times. We
explain how the high-resolution graphical mesh interactions
with the coarser control mesh and how contacts between the
mesh and the virtual environment are handles (i.e., in an
3
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

endeavour to realistically mimic the mechanical deformation
properties of organic tissue).
Mesh embedding, which is also called free-form deforma-
tion [14], [15], uses a low-dimensional coarse volumetric mesh
to enclose the entire deformable body in order to represent the
behavior of the body. The location of every material point
inside the deformable body is determined by interpolating the
positions of the neighboring nodes in the mesh. Since the work
by Faloutsos et al. [16], mesh embedding techniques have been
widely used to simulate soft-bodies in the graphics literature
[17]–[19]. We chose mesh embedding to reduce complexity of
the deformable body in our simulation system not only because
the technique can reduce the model complexity without losing
the ﬁne geometry of the object but also because the frame
can be manipulated more easily and efﬁciently using the
embedding mesh system compared to modal reduction. In our
formulation, the control body is the core soft-body system
that drives the deformations and ultimately the animation. The
complete system consists of a set of deformable body elements
(i.e., tetrahedrons or voxels) and a physics-based soft-body
core (see Figure 4).
Figure 4. Coarse Control Mesh - Reduce the complexity of the problem
while preserving the underlying soft-body’s freedom.
The position of a material point in the deformable body
is determined from the nodal positions of the coarse mesh
through interpolation. Initially, we automatically assigned
weights and blended the vertices based on the inverse distance
between the coarse mesh control nodes and ﬁne mesh vertices
(i.e., distance-based falloff weighting). However, since the
mesh is partitioned into regions (cells), triangles in 2D and
tetrahedrons in 3D, it is possible to assign vertices into region.
For example, every point inside a tetrahedron can be expressed
as a linear combination of the four control vertices. For
every vertex p in the high-resolution mesh, we look up the
tetrahedron that the point is in, which has four control vertices
(call them v0, v1, v2, v3). If we translate every vector by
−v0, we can write the new point p′ = p − v0 as a linear
combination of v′
1, v′
2, and v′
3. This gives us a new equation
for p′, namely p′ = u v′
1 + v v′
2 + w v′
3, where u, v and w
are the weights (i.e., Barycentric coordinates). Now we can
write the point p as v0 +u(v1 −v0)+v(v2 −v0)+w(v3 −v0).
Deforming the tetrahedron mesh, v0, v1, v2 and v3 will change
p accordingly. This deformation will depend on the four nearby
vertices, and thus a deformation on one side of the mesh will
have no effect on the other side of the high-resolution mesh
(unlike the distance-based falloff, where every vertex affects
every other vertex in the high-resolution mesh - see Kenwright
[14] for further information).
Level of Detail (LOD)
Adjusting the complexity of the
problem by subdividing the mesh into a coarser ‘control’ sub-
Figure 5. Elements - Variety of coarse mesh conﬁgurations, the two main
ones we focused on, were tetrahedrons (left) and voxels (right) (e.g., Figure
8 shows the voxelated gummy-bear mesh).
meshes allows us to scale the complexity of the problem.
This analogy is similar to the work by Kim and Pollard [15],
who focused on fast and efﬁcient skeleton-driven deformable
body characters, however, our model uses the underlying
deformation to achieve the controlled creature motions (Figure
3).
Scalability
We endeavour to automate the modelling/creation
process as much as possible, and reduce the amount of artist
workload by providing a system that enables both productivity
and creativity. A low-poly control mesh enables artists to
easily proto-type key-frame motions quickly and easily in real-
time (see Figure 4 and Figure 5). Proving an artistic tool
for investigating deformation effects and adjusting them to
different platforms (i.e., reducing the model complexity to
more coarser representations for environments with limited
resources, such as, memory and processing power).
IV.EXPERIMENTAL RESULTS
Experimenting with a low-dimensional 2D model initially
provides the basis for more complex systems. Adjusting the
mesh/point-mass/constraint details in 2D and 3D, combined
with oscillatory rhythmic input from trigonometric sources and
pre-trained signals from either an artist or from motion capture
data. This includes, simple hopping and wiggling locomotion
for cubes to more complex structured motions with a larger
interconnected set of constraints. Simulations:
•
simple 2-dimensional square bouncing along ground
(i.e., forward and backward) - the motion is generated
by contracting and expanding the edges of the square
in a controlled uniﬁed manner (see Figure 6)
•
more complex 2-dimensional shapes (e.g., convex and
concave)
•
3-dimensional shapes (i.e., cubes and tetrahedrons)
(see Figure 7)
•
coarser models (i.e., lower dimensional control shapes
creating the motion combined with a higher resolution
mesh) (see Figure 8 and Figure 9)
Preliminary experiments evolved around ‘rhythmic’ al-
gorithms using trigonometric functions (i.e., Fourier series).
Truncating series of sinusoidal signals with different parame-
ters for the different constraints, makes it is easy to construct
simple gait motions (i.e., low-dimensional models like cubes
and pyramids). Crucial factors are ‘friction’ and ‘constraint
ﬁghting’. Not only is friction important to prevent the model
4
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

simply skate on the spot, but also the ‘uniﬁed’ cooperation of
the different signals. Manually adjusting parameters to achieve
controlled action are possible for simple models, but difﬁcult
for more complex systems. The simulations demonstrate the
character’s ability to adapt and learn their own motor con-
trols to mimic animal behaviours and create autonomous and
coordinated actions. Finally, since we are training a coarser
low-dimensional control mesh, it helps address computational
bottlenecks.
Limitations
A system of interconnected nodes representing
the soft-body mechanism can grow in complexity quickly and
make it difﬁcult to formulate and train a controlled solution
to accomplish directed actions. An interesting area of future
exploration is that of massively parallel architecture to divide
the workload of the problem across a large number of smaller
cores (e.g., the graphical processing unit (GPU)). Coupled with
the question of ‘comfort’ and ‘shape’, since we may want our
creatures to move in an organic and relaxed manner while
keeping their overall form. Of course, this may not be the
case - since the approach allows the ability to change shape,
possibly to overcome environmental situations or accomplish
some artistic desire, which is important and challenging.
Figure 6. Screenshot - (a) A 4-point mass-spring topology using
coordinated oscillating constraints to create a rhythmic gait like motion as
seen by quadrupeds. (b) Increasing the mass distribution enables more
complex deformations and motions but introduces additional difﬁculties
creating ‘coordinated’ movement (i.e., avoiding constraint ﬁghting). (c)
Experimenting with shapes, like circles, we can create stepping motions
analogous to the box-quadruped system, or rolling like motion as seen by a
vehicle tyre.
Figure 7. Screenshot - For low-poly shapes with few-constraints, the
oscillations for gait like motion can be modiﬁed on the ﬂy to create steered
motion for navigating a virtual world.
V.
DISCUSSION
While this paper has focused on a soft-body system, com-
bining our approach with an underlying rigid-body skeleton
(hybrid technique) would open the door to further advantages
(i.e., the explicit injection of key-frame motions). For example,
a motion capture method would control a rigid-body skeleton
from which joint torques are calculated to mimic the motion.
However, the joint torques are adjusted based on the envi-
ronment and model’s state (e.g., balance). Adding an active
soft-body system on top of the rigid skeleton - changing the
overall centre of mass and injecting rhythmic motions into
the movement, such as, breathing and swaying, to produce an
animation that is closer to what we see in real-world organic
creatures. While the model is decomposed of ‘elements’, it
also opens the door to subdivision and fractured motion (e.g.,
an object that is able to split into smaller soft-body elements,
each possessing their own individual motion mechanics). The
subdivided mesh remains ﬁxed, however, an area of further
investigation would be the dynamic adaptation of the resolution
as the character mesh deforms adding and removing extra
detail where needed.
In summary, the technique in this paper presents a number
of implementation difﬁculties in practical applications. For
example, without sufﬁcient constraints (i.e., addition structural,
sheer, and bending constraints), would result in the mesh
being unable to support itself and the deformations would
be rough and coarse with abrupt and sharp edges. However,
our technique can be combined with different model reduction
control methodologies, to exploit the computational power of
the GPU and help reduce the complexity and computational
limitations for more detailed tasks/geometry.
Figure 8. Gummy-Bear Coarse Voxel Mesh - A coarse over-mesh
decomposed of voxels allows provides a computational speed-up.
Figure 9. Gummy-Bear - Training and deforming the constrains of a
gummy-bear mesh to achieve targeted motions, such as, balanced hopping or
forward crawling motions. Through experimentation, we are able to create a
diverse assortment of solutions, e.g., simple wiggling, bouncing, and
shufﬂing.
VI.
CONCLUSION
Internal forces cause deformations and ultimately structural
changes that animate the model. External contacts with the
5
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

environment provide reactive collision and contact forces that
enable the soft-body system to explore its virtual world. We
have reviewed and explored a number of implementation
factors, such as, multi-resolution meshes, volume conservation,
and animation control, using search driven ﬁtness optimization
algorithms in combination with artistic intervention and key-
frame data. The model forms the basis of other hybrid systems
that mix rigid and soft-body systems, such as, muscles and
skin.
ACKNOWLEDGEMENTS
We would like to thank the reviewers for taking time out
of their busy schedules to provide constructive and insightful
feedback that has went into making this paper more clear and
concise.
REFERENCES
[1]
T. Kim and D. L. James, “Physics-based character skinning using mul-
tidomain subspace deformations,” Visualization and Computer Graph-
ics, IEEE Transactions on, vol. 18, no. 8, 2012, pp. 1228–1240.
[2]
J. Georgii, F. Echtler, and R. Westermann, “Interactive simulation of
deformable bodies on gpus.” in SimVis, 2005, pp. 247–258.
[3]
N. Cheney, R. MacCurdy, J. Clune, and H. Lipson, “Unshackling
evolution: evolving soft robots with multiple materials and a powerful
generative encoding,” in Proceedings of the 15th annual conference on
Genetic and evolutionary computation.
ACM, 2013, pp. 167–174.
[4]
B. Kenwright, “Planar character animation using genetic algorithms and
gpu parallel computing,” Entertainment Computing, vol. 5, no. 4, 2014,
pp. 285–294.
[5]
J. Tan, G. Turk, and C. K. Liu, “Soft body locomotion,” ACM
Transactions on Graphics (TOG), vol. 31, no. 4, 2012, p. 26.
[6]
J. Tan, Y. Gu, G. Turk, and C. K. Liu, “Articulated swimming creatures,”
in ACM Transactions on Graphics (TOG), vol. 30, no. 4.
ACM, 2011,
p. 58.
[7]
J. Rieffel, D. Knox, S. Smith, and B. Trimmer, “Growing and evolving
soft robots,” Artiﬁcial life, vol. 20, no. 1, 2014, pp. 143–162.
[8]
J. Lehman and K. O. Stanley, “Evolving a diversity of virtual creatures
through novelty search and local competition,” in Proceedings of the
13th annual conference on Genetic and evolutionary computation.
ACM, 2011, pp. 211–218.
[9]
Y.-S. Shim and C.-H. Kim, “Generating ﬂying creatures using
body-brain co-evolution,” in Proceedings of the 2003 ACM SIG-
GRAPH/Eurographics symposium on Computer animation. Eurograph-
ics Association, 2003, pp. 276–285.
[10]
I. Stavness, “Muscle-driven tentacle animation,” in SIGGRAPH Asia
2014 Posters.
ACM, 2014, p. 36.
[11]
L. Liu, K. Yin, B. Wang, and B. Guo, “Simulation and control of
skeleton-driven soft body characters,” ACM Transactions on Graphics
(TOG), vol. 32, no. 6, 2013, p. 215.
[12]
C. Schulz, C. von Tycowicz, H.-P. Seidel, and K. Hildebrandt, “Ani-
mating deformable objects using sparse spacetime constraints,” ACM
Transactions on Graphics (TOG), vol. 33, no. 4, 2014, p. 109.
[13]
B. Kenwright, “Quaternion fourier transform for character motions,”
in Workshop on Virtual Reality Interaction and Physical Simulation,
VRIPHYS 2015, Lyon, France, November 4-5, 2015., 2015, pp. 1–4.
[14]
——, “Free-form tetrahedron deformation,” in Advances in Visual
Computing - 11th International Symposium, ISVC 2015, Las Vegas,
NV, USA, December 14-16, 2015, Proceedings, Part II, 2015, pp.
787–796. [Online]. Available:
[15]
J. Kim and N. S. Pollard, “Fast simulation of skeleton-driven deformable
body characters,” ACM Transactions on Graphics (TOG), vol. 30, no. 5,
2011, p. 121.
[16]
P. Faloutsos, M. Van De Panne, and D. Terzopoulos, “Dynamic free-
form deformations for animation synthesis,” Visualization and Com-
puter Graphics, IEEE Transactions on, vol. 3, no. 3, 1997, pp. 201–
214.
[17]
M. Nesme, P. G. Kry, L. Jeˇr´abkov´a, and F. Faure, “Preserving topology
and elasticity for embedded deformable models,” in ACM Transactions
on Graphics (TOG), vol. 28, no. 3.
ACM, 2009, p. 52.
[18]
L. Kharevych, P. Mullen, H. Owhadi, and M. Desbrun, “Numerical
coarsening of inhomogeneous elastic materials,” in ACM Transactions
on Graphics (TOG), vol. 28, no. 3.
ACM, 2009, p. 51.
[19]
S. Capell, M. Burkhart, B. Curless, T. Duchamp, and Z. Popovi´c,
“Physically based rigging for deformable characters,” in Proceedings
of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer
animation.
ACM, 2005, pp. 301–310.
6
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-464-0
CONTENT 2016 : The Eighth International Conference on Creative Content Technologies

