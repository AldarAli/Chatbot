Design and Objective Evaluation of Filter- and Optimization-based Motion Cueing
Strategies for a Hybrid Kinematics Driving Simulator with 5 Degrees of Freedom
Patrick Biemelt, Sandra Gausemeier, and Ansgar Tr¨achtler
Chair of Control Engineering and Mechatronics, Heinz Nixdorf Institute, University of Paderborn, Germany
Email: {patrick.biemelt, sandra.gausemeier, ansgar.traechtler}@hni.uni-paderborn.de
Abstract—Dynamic driving simulators have become a key tech-
nology to support the development and optimization process of
modern vehicle systems both in academic research and in the
automotive industry. However, the validity of the results obtained
in simulator tests depends signiﬁcantly on the adequate reproduc-
tion of the simulated vehicle movements and the associated im-
mersion of the driver. Therefore, speciﬁc motion platform control
strategies, so-called Motion Cueing Algorithms (MCA), are used to
render the acting accelerations and angular velocities within the
physical limitations of the driving simulator best possible. In this
paper, we describe the design and implementation of two different
control approaches for this task, using a simulator with hybrid
kinematics motion system as an application example. Motivated
by its unique features, an improved ﬁlter-based algorithm as
well as a real-time capable optimization-based strategy following
the idea of Model Predictive Control (MPC) are presented and
discussed in detail. By means of introduced quality criteria,
both algorithms are objectively compared with regard to various
standard driving scenarios. These include longitudinal and lateral
dynamic maneuvers to estimate the overall improvements of
each MCA for interactive driving simulation. Measurement data
indicate that both approaches yield an adequate control quality,
however, the MPC-based algorithm better handles the kinematic
constraints of the simulator due to the integration of additional
model knowledge.
Keywords–Interactive
Driving
Simulation;
Motion
Cueing;
Washout Algorithm; Model Predictive Control; Objective Quality
Criteria.
I.
INTRODUCTION
This article is based on previous work originally presented
in [1]. It extends the existing results and provides a deeper
understanding of the described concepts and methods.
As a consequence of the constantly increasing multifunc-
tionality and interconnectivity of modern vehicle components
and Advanced Driver Assistance Systems (ADAS), automobile
manufacturers and developers are facing new technological
challenges in recent years. Furthermore, topics such as e-
mobility and autonomous driving bring new competitors from
the information technology sector onto the market, so that
shorter development cycles with simultaneously enhanced
product complexities are necessary in order to maintain com-
petitiveness. To overcome those new technological challenges,
the use of interactive driving simulators, as shown exemplary
in Figure 1, represents an indispensable tool to complement
the conventional development process, based on physical pro-
totypes and on-road tests, by model-based test procedures.
Such virtual prototyping methods using driving simulators
provide the beneﬁt of time and cost savings, as well as
safe and reproducible test environments with a high level of
ﬂexibility at the same time. For instance, varying weather and
lighting conditions can be directly adapted to the test require-
ments in the simulated environment, which supports i.a. the
Figure 1. Interactive Driving Simulators from the Automotive Field [5][6].
development and optimization of modern headlamp systems
signiﬁcantly [2]. Furthermore, interactive driving simulation
enables to access human-centered aspects, such as marketing,
driver training and behavioral studies [3][4].
Disregarding from the particular analysis purpose, the valid-
ity of the results obtained in a virtual test drive is closely linked
to the degree of immersion. Interactive driving simulation
can therefore be characterized as a Human- and Hardware-
in-the-Loop (HHiL) application whose transferability to real
driving situations can only be guaranteed if a realistic driving
impression is created. Hence, it is necessary to provide the
human perception system with all required motion information,
so-called Motion Cues. In addition to the acoustic, visual and
haptic stimuli, also the vestibular Motion Cues, more precisely
the acting translational accelerations and angular velocities of
the simulated vehicle, must be generated using the motion
system of the simulator. For this reason, speciﬁc Motion
Cueing Algorithms are applied in order to create a driving
experience that is as realistic as possible within the physical
limitations of the motion system.
The most common approach for this task is the Classical
Washout Algorithm (CWA), which was ﬁrst described by
Schmidt and Conrad as a motion platform control algorithm
for piloted ﬂight simulators [7]. As illustrated in Figure 2, this
Vehicle Dynamics Model
Translational
Accelerations
Angular
Velocities
High-Pass
Filter
1
s2
Washout
Filter
Low-Pass
Filter
Tilt Coor-
dination
Rate
Limit
High-Pass
Filter
1
s
Washout
Filter
Simulator Motion System
Position
Orientation
Figure 2. Scheme of the Classical Washout Algorithm [7].
203
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

MCA basically consists of a sequence of frequency divisions
in order to generate suitable position and orientation reference
signals for the simulator motion system. The high-frequency
components of the scaled translational accelerations and an-
gular velocities of the vehicle dynamics model are therefore
separated using appropriate high-pass ﬁlters. Afterwards, these
extracted components are directly integrated to a corresponding
position and orientation of the driving simulator. Since the
basic idea of this algorithm is to return the motion system to
its neutral position after it has performed the high-frequency
movements, a further high-pass ﬁltering of the integrated
signals is conducted. This is known as the washout effect.
Due to the typically small workspace, an analog integration of
the low-frequency accelerations and angular velocities would
lead the motion system quickly to its physical limits and
thus cannot be performed. Hence, sustained accelerations are
simulated via the tilt coordination technique, which makes use
of the gravitational force to replicate these accelerations by an
equivalent rotation of the driving simulator. The corresponding
rotation rate is usually limited to the perception threshold of the
human vestibular system in this process, so that the rotational
motion will not be realized by the driver inside the simulator.
This simple control strategy has been extensively stud-
ied and improved since its ﬁrst publication, typically using
hexapod-based motion systems [8][9]. As a result of this
research, the ﬁlter-based MCA evolved into the standard
approach in interactive driving simulation that offers major
beneﬁts in terms of transparency and traceability. Each param-
eter in the Classical Washout Algorithm has a clear physical
meaning and a unique association to a single degree of freedom
(DOF), which simpliﬁes the tuning signiﬁcantly. However,
this basic idea of treating the translational accelerations and
angular velocities independently results in the fact that this
approach cannot be applied to every type of motion system.
Otherwise, conﬂicting vestibular stimuli are generated under
certain circumstances, e.g., if there exist interdependencies
between translational and rotational DOF of the motion system
like it is introduced in the next section with the ATMOS
driving simulator.
In the present work, we propose an improvement of the
CWA that enables a dynamic position washout to any point
within the simulator workspace without considerably affecting
the high-frequency motion rendering. This key feature is
motivated by the considered motion system, but can also be
applied to other systems, which offers general advantages
for interactive driving simulation. Furthermore, the design
and implementation of a real-time capable optimization-based
controller is described. It contains additional information by
integrating a mathematical model of the motion system, which
enables an adequate planning of the simulator trajectory ac-
cording to the current driving situation. The resulting control
quality is evaluated by means of deﬁned objective quality
criteria, which take into account both measured and perceived
quantities, including models of the human perceptual system.
Based on this valuation metric, both MCA are compared using
established driving scenarios from the automotive industry, as
well as everyday driving maneuvers.
The rest of this paper is structured as follows: Section II
provides a detailed overview of the considered motion system
and analyzes its speciﬁc kinematic characteristics that have to
be taken into account to ensure a realistic driving impression.
Motivated by these ﬁndings, Sections III and IV present the de-
Figure 3. ATMOS Dynamic Driving Simulator.
veloped ﬁlter- and optimization-based MCA. Subsequently, the
objective valuation metric and the examined driving scenarios
are introduced in Section V, while Sections VI and VII ﬁnally
discuss the obtained results and give concluding remarks.
II.
ATMOS DYNAMIC DRIVING SIMULATOR
Figure 3 shows the Atlas Motion System (ATMOS) driving
simulator that is operated at the Heinz Nixdorf Institute in
Paderborn as a reconﬁgurable development platform, primar-
ily for lighting-based ADAS. As illustrated, this simulator
is equipped with a real vehicle chassis of a Smart Fortwo
including all its control actuators and instruments, a seamless
circular projection with 240 degree viewing angle, a 5.1
multichannel audio system, as well as a unique ﬁve DOF
motion system to guarantee full immersion of the driver in
the virtual environment. Moreover, the acting accelerations and
angular velocities are recorded using an Inertial Measurement
Unit (IMU) that is installed close to the driver’s head position
in order to rate the quality of the applied Motion Cueing
strategy. In the following, the basic hardware conﬁguration
and the dynamic motion system of this simulator will be
discussed in detail, as they provide a general understanding
of the underlying principles behind the control algorithms
presented in Sections III and IV.
A. Simulator Hardware Conﬁguration
To demonstrate its architecture and the interaction of all
components within the interactive driving simulation, Figure 4
schematically sketches an overview of the implemented sig-
nal and information processing structure. The human driver
inside the vehicle chassis, the so-called mockup, forms the
core of this simulation setup. With the help of the gener-
ated Motion Cues, the driver evaluates the current driving
state and performs his steering and pedal inputs to fulﬁll
a speciﬁc driving task. Via CAN bus communication, these
204
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Mockup
Driving
Task
Human
Driver
Motion Cues
Driver
Inputs
Pedals,
Instruments,
Steering Wheel
Vehicle
Inputs
DS1006 Real-Time System
Motion
Cueing
Algorithm
Inertial
Motion
Vehicle
Dynamics
Simulation
Reference
Positions
Vehicle
Pose
Vehicle State
Motion System
Multichannel
Audio System
Visualization
System
Position
Controlled
Actuators
Speakers
Subwoofer
Circular
Projection
Rear View
Mirrors
Figure 4. Overview of the Signal and Information Processing.
signals are subsequently processed by a dSPACE DS1006
real-time system using an AMD Opteron CPU @ 2.8GHz,
where they serve as inputs for the simulated vehicle in the
virtual environment. Here, the Automotive Simulation Models
(ASM) tool suite is used as vehicle dynamics model, since
it is a commercial multibody model that features all relevant
subsystems of a real vehicle such as engine, powertrain, axle
kinematics, as well as electronic control units and is therefore
well-established in automotive applications [10]. The ﬁxed
sampling rate thereby is 1kHz, so that all virtual vehicle
signals are available without signiﬁcant latencies. In this way,
the computed vehicle pose, consisting of its position and
orientation, is determined every millisecond and transmitted
to the visualization system. This pose is then displayed with
a frequency of 60Hz on the circular projection, consisting
of eight high deﬁnition projectors, and three rear view mirror
monitors, giving the driver inside the simulator the impres-
sion of a ﬂuid movement through the simulated environment.
Further information on the applied rendering process of the
virtual scenes using the game engine Unity3D is given in [2].
In addition, the characteristic soundscape of the simulated
vehicle and other trafﬁc participants is generated according
to the calculated vehicle states, such as velocities and engine
speeds for example, and reproduced via the installed audio
system within the visualization dome. The inertial motion
from the vehicle dynamics simulation, speciﬁcally the virtual
vehicles accelerations and angular velocities, simultaneously
serve as an input for the Motion Cueing Algorithm, which is
also executed on the real-time system. As described before,
the MCA determines suitable control signals for the dynamic
motion system to generate the required vestibular stimuli
within its physical limitations. In case of the ATMOS driving
simulator these control signals contain the reference positions
of seven position controlled servo asynchronous motors that
drive the system. In the following, the components and the
resulting kinematic relations are presented in detail to provide
a deeper understanding of this unique motion system.
B. Dynamic Motion System
Different from conventional hexapods [11], the motion
system of the ATMOS driving simulator is designed as a hybrid
kinematics system, which is composed of two mechanically
coupled components that can be actuated independently. To
illustrate the functionality, Figure 5 shows an exploded view
based on the multibody model of the system. The shaker sys-
tem below the mockup is equipped with three crankshaft drives
to perform vertical translational movements, as well as to rotate
the driver around the roll and pitch axis. Thus, the shaker
replicates the simulated vehicle movements relative to the road
surface with exception of yaw motion and can further be used
to increase the effect of the tilt coordination by expanding the
rotational workspace of the motion system. In addition to the
shaker, the motion platform performs movements in lateral and
longitudinal direction via four actuated cross-undercarriages
that are driven on V-shaped tracks. Because of these tilted
tracks, each translational movement of the motion platform
leads simultaneously to an additional rotation around the
corresponding axes. As a direct consequence of these coupled
kinematics, performing pure translational movements of the
motion system is only possible within a very small range
of the overall workspace, in which the forced rotations of
the motion platform can be compensated using the shaker.
However, it should be noted that this considerably restricts the
shaker systems remaining workspace in its residual degrees
of freedom.
To clarify the kinematic properties, the available workspace
of the motion platform center point is illustrated in Figure 6.
It can be seen that any translational movement causes besides
a rotation of the motion platform also a vertical displacement
of the center point due to the underlying kinematic constraints.
Motion Platform
Shaker
Circular
Projection
Cross-
Undercarriage
x
y
z
Figure 5. Exploded View of the Simulator Multibody Model.
205
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

x (m)
-0.7-0.350 0.35
0.7
y (m)
0.45
0.3
0.15
0
-0.15
-0.3
-0.45
z (m)
0.09
0.06
0.03
0
-0.03
-0.06
Figure 6. Workspace of the Motion Platform Center Point.
Thus, longitudinal movements always cause a lowering of
the platform center, while lateral movements lift it. As a
consequence, the motion platform performs movements along
the curved surface shown in Figure 6, leading to an additional
kinematic coupling between the translational DOF. Analo-
gously, the analysis of the available shaker workspace leads
to the dependencies between vertical displacements z, roll
inclinations ϕ and pitch inclinations θ presented in Figure 7.
As shown, a maximum vertical displacement of z = ±72 mm
is feasible with the shaker. However, this is only practicable if
there are no simultaneous tilts of the system, since additional
roll and pitch angles not equal to zero considerably reduce
the vertical workspace. Roll movements are generated by an
alternating actuation of both front crankshaft drives, which are
installed symmetrically to the roll axis. Thus, also a symmetric
workspace results, as it is pictured top left in Figure 7. In
contrast, pitch rotations are generated by actuating the two
crankshaft drives in the front and the crankshaft drive in the
rear in opposite directions. Due to the geometric properties of
the system, the rear actuator reaches its top or bottom dead
center at an angle of θ = ±5◦. A tilt up to the maximum
z (mm)
80
60
40
20
0
-20
-40
-60
-80
ϕ (◦)
-8 -6 -4 -2
0
2
4
6
8
z (mm)
80
60
40
20
0
-20
-40
-60
-80
θ (◦)
-8 -6 -4 -2
0
2
4
6
8
z (mm)
80
40
0
-40
-80
ϕ (◦)
8
4
0
-4
-8
θ (◦)
-8
-4
0
4
8
Figure 7. Analysis of the Shaker System Workspace.
pitch angle of θ = ±7◦ is then possible by further movements
of the front two actuators, but this simultaneously leads to
a lifting or lowering of the shaker platform, as shown in
the upper right corner of Figure 7. As a consequence, an
asymmetrical workspace results. The combination of both
upper graphics leads to the overall workspace of the shaker
illustrated in the bottom of Figure 7. It shows that there are also
interdependencies between the individual DOF of the shaker
system, which can in the case of pitch rotations even cause
undesired vertical movements of the driver in the simulator.
Together with the nonlinear kinematic properties of the motion
platform, these aspects has to be considered in the design of the
Motion Cueing Algorithm in order to avoid conﬂicting sensory
information, so-called False Cues, which typically lead to the
undesired effect of Simulator Sickness for the driver [12].
Thus, due to the mentioned features of the ATMOS driving
simulator, suitable control strategies are required since the im-
plementation of the conventional CWA according to Figure 2
does not result in the desired quality of the motion rendering.
III.
MODIFIED WASHOUT ALGORITHM
As described in Section I, the general idea of the Classical
Washout Algorithm is based on an independent consideration
of the systems degrees of freedom, which is due to the fact
that the MCA was developed for application on a conventional
hexapod. Because of this, the algorithm is not suitable for
application on the ATMOS driving simulator introduced in the
previous section, as there is a connection between translation
and rotation because of the underlying kinematics of the
motion system. For this reason, we subsequently present an
extension of the classical approach that includes the relevant
kinematic effects and enables a sufﬁcient control quality.
Moreover, a further analysis using system theoretical methods
is described in [13].
A. Dynamic Position Washout
In case of the regarded driving simulator, each longitudinal
and lateral movement of the motion platform generates a
forced tilting around the corresponding roll and pitch axis.
These rotations should ideally be used to emulate sustained
accelerations using the tilt coordination technique. Otherwise,
the tilt coordination has to be performed only by the shaker,
which limits the maximum possible inclination to the small
shaker workspace (see Figure 7). In contrast to the classical al-
gorithm, a dynamic position washout is therefore required that
enables the motion platform to drift into a deﬁned end position
within its workspace after it has performed the high-frequency
movements. By determining this end position according to the
associated inclination, low-frequency accelerations can also
be simulated via the motion platform. For this purpose, the
high-pass (hp) and washout (wo) ﬁlters of the high-frequency
longitudinal and lateral acceleration paths are supplemented
by further ﬁrst order low-pass ﬁlters with variable gains K,
as shown in Figure 8 using the example of longitudinal
acceleration ax. According to the shown structure, the cor-
responding transfer function G, that describes the dynamic
behavior between the acceleration input ax and the longitudinal
simulator position x, is given as
G(s) = Thps + K
Thps + 1 ·
T 2
wos2
T 2wos2 + 2DTwos + 1 · 1
s2 .
(1)
206
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

ax
x
K
Thps
Thps+1
+
1
s2
T 2
wos2
T 2
wos2+2DTwos+1
1
Thps+1
Figure 8. Extended Longitudinal High-Frequency Acceleration Path.
The non-intuitive idea of this extension can be clariﬁed by
the application of the ﬁnal value theorem of the Laplace
transform. Therefore, let ax be a sustained acceleration input
from the vehicle dynamics simulation, which can be assumed
to be approximately constant, since the magnitude does not
signiﬁcantly change. For the integrated simulator position x
follows then with increasing time t → ∞:
lim
t→∞ x(t) = lim
s→0 s · G(s) · ax
s
|
{z
}
X(s)
= K · T 2
wo · ax
(2)
Consequently, the resulting simulator position depends on the
gain K, the time constant Two of the washout ﬁlter as well as
the amplitude of the acting acceleration ax. If this position is
now required to have a deﬁned value xtc, the necessary gain K
can be determined corresponding to (2) as
K =
xtc
T 2wo · ax
.
(3)
Here, the singularity occurring for ax =0 m/s2 is not critical,
since in this case the entire transfer function G is also
multiplied with this input variable, resulting in a position
x = 0 m. The overall stability of the proposed structure is
therefore always guaranteed as long as high-pass and washout
ﬁlters possess a stable pole conﬁguration, which is generally
to be expected. Analogously, the initial value theorem of the
Laplace transform can be used to show that the extension
by the variable gain low-pass ﬁlter, as shown in Figure 8,
does not negatively affect the reproduction of high-frequency
acceleration components [13]. Like in the Classical Washout
Algorithm, the dynamics of the drift into the end position xtc
can be speciﬁed by the parameters of the washout ﬁlter, which
represents an important design freedom in the parameterization
of the proposed control strategy.
The described extension is also implemented for the lateral
high-frequency acceleration path, so that a washout in the
deﬁned position ytc analogue to (3) is realized and thus
sustained lateral stimuli are produced by a corresponding roll
rotation of the motion platform.
B. Tilt Coordination Distribution
Due to the hybrid kinematics motion system, as well as the
presented dynamic position washout, the tilt coordination tech-
nique can be performed either using the motion platform (mp),
the shaker (sh) or a combination of both systems. The latter
signiﬁcantly increases the workspace and thus the maximum
low-frequency acceleration amplitudes that can be generated.
Consequently, a distribution strategy has to be speciﬁed, which
enables a suitable coordination of both components. For this
reason, an adaptation of the low-frequency longitudinal and
lateral acceleration paths is conducted according to Figure 9.
As shown with the example of the longitudinal acceleration,
a ﬁrst order low-pass (lp) ﬁlter extracts the sustained accel-
eration components from the reference signal ax, which are
subsequently converted to the corresponding tilt coordination
pitch angle θtc. In doing so, the associated rotation rate is
limited to the well-established value of 0.1rad/s, in order that
the tilt coordination technique does not disturb the driving im-
pression of the human driver [14]. In contrast to conventional
hexapods, this inclination is divided among the subsystems
of the motion system by introducing a distribution coefﬁcient
α ∈ R with 0 ≤ α ≤ 1. This results in the inclinations
for the shaker θsh and for the motion platform θmp that are
necessary to replicate the low-frequency accelerations by the
gravitational force. Based on the known kinematic relations
of the motion platform, an equivalent platform position xtc,
which corresponds to the required inclination, is subsequently
determined. This position equivalent then serves as input for
calculating the variable gain K according to (3) so that the
coupling between translational and rotational DOF is taken into
account. Equally, this process is implemented for the lateral
low-frequency acceleration path.
ax
xtc
1
Tlps+1
Tilt Coordination
& Rate Limit
α
1 − α
θtc
θmp
θsh
Position
Equivalent
Figure 9. Extended Longitudinal Low-Frequency Acceleration Path.
C. Resulting Algorithm Structure and Parameterization
The combination of dynamic position washout and tilt
coordination distribution leads to the overall structure of the
modiﬁed washout algorithm illustrated in Figure 10. Based on
the principles of the Classical Washout Algorithm, this ﬁlter-
based control strategy enables the generation of suitable con-
trol signals in the form of position and orientation commands
for the motion system of the ATMOS driving simulator. Using
the inverse kinematics of the motion platform and the shaker,
the required reference angles of the position controlled actu-
ators are determined, enabling the motion system to generate
the vestibular Motion Cues according to the current driving
situation. In order to ensure that these references are adjusted
to the system with a desired dynamic behavior, a model-based
approach to compensate existing actuator latencies is presented
in [13]. The estimation of the associated ﬁlter parameters and
distribution coefﬁcients was performed by numerical optimiza-
tion using a deﬁned driving maneuver. Here, the rural road
drive, which will be introduced in one of the next sections,
was chosen since it represents a good compromise between
moderate driving scenarios and extreme maneuvers at the
limits of driving dynamics. Table I provides an overview of
the resulting parameters.
Although the developed algorithm is motivated by the
speciﬁc features of the motion system, in particular the concept
of a dynamic position washout offers great potential to transfer
and combine it with alternative Motion Cueing approaches.
For example, an integration of the approach into predictive
algorithms is possible in order to use information of the
current vehicle state and the oncoming road conditions to
preposition the motion system. Thus, the available simulator
207
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Vehicle Dynamics Model
Translational
Accelerations
Angular
Velocities
Scaling
Scaling
High-Pass Filter
Variable Gain
Low-Pass Filter
+
1
s2
Washout Filter
Low-Pass Filter
High-Pass Filter
Tilt Coordination
& Rate Limit
Tilt Coordination
Distribution
Position
Equivalent
1
s
Washout Filter
xtc, ytc
θmp, ϕmp
θsh, ϕsh
+
Position
Orientation
Simulator Motion System
Figure 10. Overall Structure of the Developed Washout Algorithm.
TABLE I. APPLIED ALGORITHM PARAMETERS.
1st Order
1st Order
2nd Order
Distribution
Scaling
HP Filter
LP Filter
WO Filter
Coefﬁcient
kx = 0.4
Thp = 0.95
Tlp = 0.95
Two = 0.49,
αx = 0.65
D = 0.7
ky = 0.4
Thp = 0.6
Tlp = 0.6
Two = 0.44,
αy = 0.6
D = 1.0
kz = 1.0
Thp = 0.4
–
Two = 0.45,
–
D = 1.0
1st Order
1st Order
1st Order
Distribution
Scaling
HP Filter
LP Filter
WO Filter
Coefﬁcient
kϕ = 1.0
Thp = 1.2
–
Two = 0.8
–
kθ = 1.0
Thp = 0.3
–
Two = 0.2
–
workspace is used more efﬁciently [15]. For this purpose,
suitable positions are determined at runtime instead of xtc
and ytc, to which the motion system drifts after executing
the high-frequency movements. Occurring false cues caused
by the dynamic position washout can thereby be masked by
the gravitational force using an additional tilt of the driving
simulator [9].
IV.
MODEL PREDICTIVE CONTROL APPROACH
While the presented modiﬁed washout algorithm takes into
account coupling effects between translational and rotational
DOF of the ATMOS driving simulator, this ﬁlter-based control
strategy does not consider interdependencies between the par-
ticular translational movements. That can be explained by the
underlying algorithm structure, which is basically comparable
to the CWA with its independent treatment of all system
degrees of freedom. To overcome this, an optimization-based
Motion Cueing Algorithm using the concept of Model Predic-
tive Control was introduced in [16]. It offers the advantage
that hard constraints, such as the workspace limitations and
kinematic relations described in Section II, can be explicitly
integrated into a numerical optimization process, which is
performed at runtime. Furthermore, by including an actuator
dynamics model it is ensured that the determined motion
trajectory is always feasible for the driving simulator. In the
following, the main aspects of the MPC-based algorithm are
explained in detail to provide a basic understanding for the
comparison of both control approaches in the next section.
A. Nonlinear Motion System Model
According to the basic idea of the established MPC
paradigm, a constrained optimal control problem is numeri-
cally solved over a receding time horizon at each calculation
cycle. Subsequently, only the ﬁrst element of the computed
trajectory is applied to the process and the procedure is
iterated [17]. Thereby, the resulting control quality depends
signiﬁcantly on the availability of an adequate process model
to predict the future system behavior. This model consequently
has to cover all relevant dynamic and kinematic effects on the
one hand. At the same time an online optimization causes a sig-
niﬁcant computational effort, for which reason the integrated
system model must be designed as simple as possible to meet
the real-time requirements.
Driving simulators are large-scale systems with high iner-
tia, so there is always a speciﬁc dynamic behavior, which inﬂu-
ences the control quality and therefore has to be considered in
the planning of the simulator motion trajectory. Assuming that
the basic mechanical system is a rigid body without signiﬁcant
elasticities, the overall system dynamics can be expressed by
the transfer behavior of the installed actuators. In case of the
considered motion system, the input/output dynamics of each
position controlled actuator is described by a linear third order
lag element with the state space representation
˙xs(t) = As · xs(t) + Bs · us(t)
ys(t) = Cs · xs(t) .
(4)
Here, the associated state vector xs(t) ∈ R3 contains the
angle ψ(t) of a servo motor, its angular velocity ˙ψ(t) and
its angular acceleration ¨ψ(t):
xs(t) =

ψ(t)
˙ψ(t)
¨ψ(t)
T
(5)
The input and output variables of the model from (4) form the
reference position ψref (t) determined from the MCA and the
actual angle ψ(t) of the controlled actuator:
us(t) = ψref (t)
ys(t) = ψ(t)
(6)
Consequently, the state differential equation matrices result as
As =
" 0
1
0
0
0
1
−a0
−a1
−a2
#
∈ R3×3, Bs =
" 0
0
b0
#
∈ R3,
(7)
so that a time-invariant Single-Input-Single-Output (SISO) sys-
tem in controllable canonical form is given for each controlled
actuator. As already explained in Section II, the motion system
208
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

of the ATMOS driving simulator is equipped with a total
number of seven servo motors. Three of these are used to
actuate the shaker, while two identical servo motors, which
are controlled with the same reference positions ψref (t), each
drive the motion platform in longitudinal and lateral direction.
Therefore, in the derived simulator model, the four actuators
of the motion platform can be combined to one actuator per
longitudinal and lateral DOF to reduce the resulting model
complexity. Summarizing all ﬁve actuator models ﬁnally leads
to a 15th order linear system with the state differential equation
˙x(t) = A · x(t) + B · u(t) .
(8)
Since the underlying position controllers are very exact and
the actuators can thus be assumed to be completely decoupled,
the state matrix A ∈ R15×15 and the input matrix B ∈ R15×5
are block diagonal matrices that contain the state differential
equations according to (4) of all ﬁve servo motors on their
main diagonals. The corresponding state vector x(t) ∈ R15
results from the state variables of each actuator given in (5),
while the input vector u(t) ∈ R5 is a vector obtained from the
respective reference positions ψref (t).
In order to respect the relevant kinematic characteristics of
the simulator explicitly in the control algorithm, a functional
relationship between the state variables of (8) and the control
variables, more precisely the acting translational accelera-
tions a(t) and angular velocities ω(t), is required. Moreover,
these output quantities need to be described at the driver’s head
position since the vestibular perception organs are located in
the human inner ear [18].
For this purpose, the direct kinematics of the motion system
are deﬁned in Cartesian coordinates as
Irh (ψ (t)) = Irmp (ψ (t)) + Irsh (ψ (t))
Iβh (ψ (t)) = Iβmp (ψ (t)) + Iβsh (ψ (t))
(9)
in the ﬁrst instance. According to Figure 11, the pose of the
driver’s head position h is given by the position and orientation
vectors Irh
=
I [x y z]T ∈ R3 and Iβh = I [ϕ θ]T ∈ R2
in the inertial reference frame I. These are expressed as
functions of all ﬁve actuator angles ψ (t), which form the
systems generalized coordinates in that context. Because the
I
x
y
z
D x
y
z
ϕ
θ
Irmp
Irsh
Irh
Figure 11. Scheme of the Driver’s Head Position Pose.
mechanical coupling between the motion platform and the
shaker represents a serial kinematics, the positions and ori-
entations of both subsystems are added as shown in (9). To
obtain the associated translational and angular velocities, the
time derivatives of both vectors are determined:
Ivh(ψ (t), ˙ψ (t)) = dIrh (ψ (t))
dt
= ∂Irh (ψ (t))
∂ ψ (t)
· ˙ψ (t)
I ˙βh(ψ (t), ˙ψ (t)) = dIβh (ψ (t))
dt
= ∂Iβh (ψ (t))
∂ ψ (t)
· ˙ψ (t)
(10)
Hence, the velocity variables of the driver’s head position are
calculated from the product of the actuator angular veloci-
ties ˙ψ (t) and the partial derivatives of (9) to the generalized
coordinates ψ (t), which is known as the Jacobian matrix.
A further differentiation of the velocity vector Ivh(t) then
yields the desired expression of the translational accelera-
tions Iah =
I [¨x ¨y ¨z]T according to
Iah(ψ (t), ˙ψ (t), ¨ψ (t)) = dIvh(ψ (t), ˙ψ (t))
dt
(11)
= ∂2Irh(ψ (t))
∂ ψ (t)2
· ˙ψ2 (t) +
∂Irh(ψ (t))
∂ ψ (t)
· ¨ψ (t) .
As shown, besides the state variables of (8) and the Jacobian
matrix, also the second partial derivatives of the position
vector
Irh(t) to the actuator angles ψ (t) are required to
determine the acting accelerations at the driver’s head position.
In addition, the angular velocity vector Iωh(t) is obtained from
the derivatives of the orientations I ˙βh(t) according to (10) as
Iωh(ψ (t), ˙ψ (t)) =

cosθ
0
0
1

·
I

˙ϕ(ψ (t), ˙ψ (t))
˙θ(ψ (t), ˙ψ (t))

.
(12)
As it is a basic principle of rigid body mechanics, this relation
is not further discussed at this point.
In order to consider the current orientation of the motion
system in the optimization process, the translational accelera-
tions Iah (t) and angular velocities Iωh (t) are transformed
into the ﬁxed reference system D of the driver, which is
assumed to be orientated identically to the shaker reference
frame (see Figure 11):
Dah(ψ (t), ˙ψ (t), ¨ψ (t)) = LDI · Iah(ψ (t), ˙ψ (t), ¨ψ (t))
Dωh(ψ (t), ˙ψ (t)) = TDI · Iωh(ψ (t), ˙ψ (t))
(13)
using the rotation matrices
LDI =
"
cosθ
0
−sinθ
sinϕ · sinθ
cosϕ
sinϕ · cosθ
cosϕ · sinθ
−sinϕ
cosϕ · cosθ
#
,
TDI =

cosθ
0
sinϕ · sinθ
cosϕ

(14)
At this point it becomes clear that the matrices of (12) and (14)
differ from the formulations reported in literature, which is due
to the fact that the ATMOS driving simulator cannot perform
any rotations around the vertical axis. Consequently, the yaw
angle is not taken into account, while the roll and pitch angles
ϕ(t) and θ(t) are determined according to (9) as functions of
the state variables ψ(t).
Since the low-frequency components of the longitudinal
and lateral acceleration reference from the simulated vehicle
cannot be replicated by translational displacements of the
209
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

motion system because of its limited workspace, the previ-
ously described tilt coordination technique is applied. For this
purpose, the gravitational acceleration vector g is transformed
into the ﬁxed coordinate system of the driver by means of the
rotation matrix LDI as
Dg = LDI ·
I
" 0
0
−g
#
=
D
"
g · sinθ(t)
−g · sinϕ(t) · cosθ(t)
−g · cosϕ(t) · cosθ(t)
#
.
(15)
By combining the transformed translational accelerations
of (13) with the gravitational acceleration vector Dg from
the tilt coordination, the so-called speciﬁc accelerations
a(t) =
Dah(t) − Dg(t) are obtained, which are commonly
used in Motion Cueing applications:
a (t) =
D
"¨x (t)
¨y (t)
¨z (t)
#
h
−
D
"
g · sinθ(t)
−g · sinϕ(t) · cosθ(t)
−g · cosϕ(t) · cosθ(t)
#
(16)
A condensed overview of the resulting process model to predict
the future motion system behavior is given in Figure 12.
As illustrated, it features the typical structure of a Wiener
model, consisting of a series connection of a linear dynamic
system in front of a static nonlinearity [19]. The overall system
description thus is given in the form of the nonlinear state
space representation
˙x(t) = A · x(t) + B · u(t)
y(t) = f (x(t)) .
(17)
Here, the linear state differential equation describes the dy-
namic transfer behavior of all controlled actuators analo-
gously to (8). In addition, the output equation contains the
kinematic relations derived in (9)–(16), summarized in the
generalized vector function f, to determine the desired out-
put variables y(t) at the driver’s head position within the
simulator. By using the proposed model of (17), all relevant
characteristics of the motion system described in Section II,
such as physical limitations of the available workspace and
coupling effects between individual DOF, are explicitly con-
sidered in the control algorithm, which represents one of
the key features of the developed optimization-based MCA.
However, the integration of all kinematic dependencies causes
a signiﬁcant computational effort due to the underlying model
complexity. The following section therefore presents a method
for efﬁciently calculating the future system behavior as a
function of the control variables ψref (t).
B. Prediction of the Future System Behavior
In order to plan the motion trajectory of the simulator
adequately for the oncoming driving situation, the future
u(t)
x(t)
y(t)
˙x(t) = A·x(t) + B·u(t)
y(t) = f (x(t))
Linear Actuator
Dynamics
Nonlinear System
Kinematics
Overall Motion System Model
where
x(t) =


ψ (t)
˙ψ (t)
¨ψ (t)

∈ R15, y(t) =
D

a(t)
ω(t)

∈ R5, u(t) = ψref (t) ∈ R5
Figure 12. Resulting Nonlinear Motion System Model.
system behavior has to be speciﬁed within a limited time
horizon, the so-called prediction horizon N, with respect to the
actuating variables. This prediction is usually performed using
a discrete system description, since the application of a time-
continuous process model is more complex without providing
any considerable beneﬁts [20].
For this reason, the solution of the state differential equa-
tion of (17) is determined using the state-transition matrix.
According to [21] follows thus:
x(k + 1) = eA·T · x(k) +
Z T
0
eA·(T −τ) · B · u(k) dτ
= eA·T · x(k) +
Z T
0
eA·(T −τ) dτ · B · u(k)
(18)
This assumes that the value of the input vector u(k) does not
change within the duration T of a discrete time step k, and
therefore does not have to be considered within the integral.
The solution of (18) then yields
x(k + 1) = eA·T · x(k) + A−1·

G =


Bd
0
. . .
0
AdBd
Bd
. . .
0
...
...
...
...
AN−1
d
Bd
AN−2
d
Bd
. . .
Bd

∈ R15·N×5·N,
¯u(k) =


u(k)
u(k + 1)
...
u(k + N − 1)

∈ R5·N
(25)
Thus, the future state variables depend on the actual system
state x(k), which is known by measurement and observation,
as well as the optimization variables u(k) ... u(k + N − 1).
Moreover, since the transfer behavior of the controlled ac-
tuators is time-invariant, the prediction matrices of (25) can
already be calculated ofﬂine during the initialization process
of the controller, which improves compliance with the real-
time capability. In contrast, the prediction of the corresponding
output variables y(k + i) ∀ i = 1...N, causes a large nu-
merical effort, as these include the direct kinematic relations
of the motion system. That is why an approximation of the
nonlinearities of (22) within the prediction horizon is pursued
in each calculation cycle, leading to a signiﬁcant reduction of
the computational load. Speciﬁcally, a ﬁrst order Taylor series
of the nonlinear output equation is determined as
y(k + i) ≈ f (x(k)) + ∂ f (x(k))
∂ x

x(k)
· (x(k + i) − x(k)),
(26)
where the partial derivative of the vector function f to the
state vector with the value x(k) yield the linear output ma-
trix C(k) ∈ R5×15. By rearranging (26), a more structured
formulation is obtained:
y(k + i) ≈ C(k) · x(k + i) + f (x(k)) − C(k) · x(k)
|
{z
}
h(k)
(27)
Consequently, the linear afﬁne output equation (27) results
in each calculation cycle of the optimization-based controller,
which approximates the nonlinear system behavior within the
considered prediction horizon. Depending on the selected sam-
pling rate, a high-frequency update of the output matrix C(k)
thus is performed, based on the feedback state vector x(k).
Furthermore, the term h(k) is obtained, which depends only
on the current system information and is therefore constant in
the prediction range i = 1...N. As this is usually limited to
only a few seconds [22], the approximation of (27) provides
a sufﬁciently accurate description of all relevant kinematic
effects to optimize the simulator motion trajectory.
Although C(k) and h(k) must ﬁrst be calculated at the
beginning of each prediction sequence, the future output
variables y(k + i) can then be determined very efﬁciently
according to
y(k + 1) = C(k)· x(k + 1) + h(k)
y(k + 2) = C(k)· x(k + 2) + h(k)
...
y(k + N) = C(k)· x(k + N) + h(k) .
(28)
Together with the state variable prediction speciﬁed in (24),
this yields the future outputs in vector notation:
¯y(k + 1) = C · ¯x(k + 1) + H
= C · F · x(k) + C · G · ¯u(k) + H
(29)
where
¯y(k + 1) =


y(k + 1)
y(k + 2)
...
y(k + N)

∈ R5·N,
H =


h(k)
h(k)
...
h(k)

∈ R5·N,
C =


C(k)
0
. . .
0
0
C(k)
. . .
0
...
...
...
...
0
0
. . .
C(k)

∈ R5·N×15·N (30)
As a result, (29) offers the advantage that only its ﬁrst two
summands have to be evaluated at runtime by simple matrix
multiplications, instead of evaluating the nonlinear output
equation of (22) for each single time step k + i within the
prediction horizon i=1...N.
C. Solution of the Optimal Control Problem
In order to reproduce the vestibular Motion Cues of the
simulated vehicle, given by its translational accelerations and
angular velocities, the optimal control problem
minimize
∆¯u(k)
N
X
i=1
∥y (k + i) − r (k + i) ∥2
Q +
N
X
i=1
ρ (k + i)
+
N−1
X
i=0
∥∆u (k + i) ∥2
R + ∥u (k + N − 1) ∥2
S
subject to
xlo ≤ x (k + i) ≤ xup, i ∈ [1, N]
ulo ≤ u (k + i) ≤ uup, i ∈ [0, N−1]
(31)
is solved numerically in each calculation cycle of the MPC-
based algorithm. Here, the ﬁrst and third summand of the cost
function evaluate the control deviation as well as the change
rate of the actuating variables ∆u(k) ... ∆u(k + N − 1) for
all time steps in prediction horizon, using the positive deﬁnite
weighting matrices Q ∈ R5×5 and R ∈ R5×5. The control
deviation results from the difference between the future output
variables, which are expressed according to (29) as a func-
tion of the feedback state vector x(k) and the optimization
variables, and the simulated vehicle accelerations and angular
velocities summarized in the reference vector
r(k + i) =

aref (k + i)
ωref (k + i)

∈ R5 ∀ i=1...N.
(32)
However, since these references depend on the future driver
inputs in the prediction horizon, they are generally not exactly
known in the current time step k. It is therefore common prac-
tice to consider the vehicle references constant at each future
time step, although this does not fully exploit the potential of
the predictive controller [23]. To overcome this, we proposed
a novel model-based online prediction strategy in [24]. As key
features, this approach includes a simpliﬁed vehicle model as
well as a virtual driver model based on established algorithms
from nonlinear control theory to estimate future driver inputs
211
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

and the resulting vehicle reactions depending on the current
driving situation and given route information. By means of
measurement data from a real test drive, it was proven that
the reproduced Motion Cues differ only slightly from those
of an exactly known reference trajectory, which demonstrates
the effectiveness of the developed approach. In the context
of this paper, however, an a-priori known future reference is
assumed, since the general functionality of the predictive MCA
and its handling of the considered motion systems kinematic
properties are to be highlighted.
In addition, the second summand of (31) denotes a
penalty term to prevent deviations between the angular ve-
locities of the reference signal and those of the motion system
above a deﬁned boundary. This enables the tilt coordination
rotation rate as well as the forced rotations due to the kinematic
couplings of the motion platform to be limited to a desired
value ε, for example the perception threshold of the human
vestibular organs:
ρ (k + i) = eσ·(|ω(k+i)−ωref (k+i)|−ε)
(33)
Selecting appropriate penalty weights σ ≫ 1, the limitation
of the rotation rate is taken into account in the numerical
optimization, since the penalty term applies:
ρ (k + i)



≪ 1
if | ω(k + i) − ωref (k + i) | < ε
= 1
if | ω(k + i) − ωref (k + i) | = ε
≫ 1
if | ω(k + i) − ωref (k + i) | > ε
(34)
Furthermore, the last element of the cost function represents a
terminal cost to create a washout effect and return the simulator
to its initial position. Here, the positive deﬁnite weighting
matrix S ∈ R5×5 determines the intensity of the washout
movement. To comply with the physical limitations of the
motion system, constraints on the state and actuating variables
are included in (31). For this, lower and upper boundaries
(·)lo and (·)up are deﬁned according to the installed actuators
performances and the available workspace.
The resulting optimal control problem is solved at run-
time on the dSPACE DS1006 system with a sampling time
of 25ms, using the conservative convex separable approxima-
tion (CCSA) algorithm [25], which is provided by the NLopt
open-source library for nonlinear optimization [26]. Thereby,
the prediction horizon is chosen to N = 40 discrete time
steps to realize a receding time horizon of one second. The
constrained optimal control problem of (31) hence involves
Driving
Task
Driver
Vehicle
Inputs
Vehicle
Dynamics
Simulation
Vehicle
States
Model-Based
Reference
Prediction
Route
Information
¯r(k+1)
Cost
Function
σ, ε
Numerical
Optimization
Constraints
u(k)
Driving Simulator
Motion System
y(k)
ψ(k),
˙ψ(k)
State
Observer
x(k)
System
Behavior
Prediction
¯y(k+1)
¯x(k+1)
Model Predictive MCA
Figure 13. Signal Processing Structure of the MPC-Based Motion Cueing Strategy.
200 optimization variables ∆¯u(k) that are determined in real-
time by the proposed control strategy. Figure 13 schematically
shows the overall signal processing structure in a block di-
agram. In addition to the previously described methodology,
it includes a state observer [27], enabling the complete state
vector x(k) to be determined in each time step k from the
measured angular positions ψ(k) and velocities
˙ψ(k). The
basis of this observer are the dynamic models of the controlled
actuators according to (4).
V.
COMPARISON OF THE CONTROL STRATEGIES
Since the scientiﬁc objective of this paper deals with
the comparison of the ﬁlter- and optimization-based control
algorithms presented in Sections III and IV, the underlying
evaluation framework is described in detail at this point. The
applied quality criteria are initially discussed for this purpose.
Afterwards, the driving scenarios examined in this study will
be brieﬂy introduced.
A. Objective Quality Criteria
In order to compare both Motion Cueing strategies on the
basis of an objective valuation metric, suitable quality criteria
must be speciﬁed. Therefore, according to [28] and [29], we
introduce performance indicators λ1 and λ2 that are deﬁned
as
λ1 = 1
M
M
X
j=0
s eax,j
ax,norm
2
+
 eay,j
ay,norm
2
+
 eaz,j
az,norm
2
+ 1
M
M
X
j=0
s eωx,j
ωx,norm
2
+
 eωy,j
ωy,norm
2
(35)
and
λ2 = 1
M
M
X
j=0
s eˆax,j
ax,norm
2
+
 eˆay,j
ay,norm
2
+
 eˆaz,j
az,norm
2
+ 1
M
M
X
j=0
s eˆωx,j
ωx,norm
2
+
 eˆωy,j
ωy,norm
2
(36)
with
eai = ai,Ref − ai|i=x,y,z and eωi = ωi,Ref − ωi|i=x,y
eˆai = ˆai,Ref − ˆai|i=x,y,z and eˆωi = ˆωi,Ref − ˆωi|i=x,y. (37)
212
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Here, (35) provides a measure of the physical deviations
between the scaled reference accelerations ai,Ref and angular
velocities ωi,Ref from the vehicle dynamics simulation and the
measured quantities in the driving simulator for the considered
DOF. λ1 therefore returns the averaged normalized control
error over the number of measured values M within the
considered time range. The normalization is necessary to
obtain dimensionless quantities that allow a simultaneous con-
sideration of accelerations and angular velocities on a common
scale. According to [30], the human perception thresholds
for movements are used as corresponding normalization fac-
tors ai,norm and ωi,norm. In addition, the indicator λ2 as
deﬁned by (36) yields a measure for the perceived control
quality, which can differ from the physical deviations due
to the frequency-dependent dynamic behavior of the human
vestibular organs, as well as perception thresholds. This causes,
for example, that control errors in detectable frequency ranges
are perceived more disturbing than deviations in undetectable
ranges. To take these effects into account, well-established
models of the human vestibular system illustrated in Figure 14
are included. Here, the primary perceptual organs are the
semicircular canals, which enable the detection of angular
velocities in all three rotational DOF, and the otoliths that
are responsible for the perception of longitudinal, lateral and
vertical accelerations.
According to Figure 15, the corresponding dynamic be-
havior is typically described by mechanical analogous models
of the respective organs, which lead to the illustrated transfer
functions with the inputs ai and ωi [32][33], as they are widely
used in driving simulation applications [14]. In agreement
with [34], the parameters of the otoliths model are selected to
Koto = 0.4, T1 = 5s, T2 = 0.016s and TL = 10s, while
the semicircular canal model parameters are Kscc = 5.73,
T1 = 5.73s, T2 = 0.005s, TL = 0.06s and Ta = 80s.
This leads to the resulting frequency responses of the transfer
functions Goto(jω) and Gscc(jω) shown in Figure 16. It
becomes clear that the semicircular canals serve as good
angular velocity sensors in the frequency range from 0.05
to 3Hz, since rotary motions are closely detected without
amplitude changes and with only small phase shifts. This
frequency spectrum is also characteristic for everyday driving
maneuvers in trafﬁc, which is why rotary vehicle movements
can be easily perceived by the human vestibular apparatus.
In contrast, low-frequency rotations are perceived strongly
damped and are almost completely suppressed in case of a
constant angular velocity. These characteristics of the semicir-
cular canals are used in interactive driving simulation to apply
the previously described tilt coordination technique without the
driver being able to detect the unnatural rotational movements.
In addition, the modeled otoliths show a frequency-speciﬁc
Semicircular
Canals
Otoliths
Cochlea
Auditory
Nerve
Vestibular Nerve
Figure 14. Vestibular System in the Human Inner Ear [31].
ai
¯ai
ˆai
Koto·
1
· (TLs + 1)
(T1s + 1) (T2s + 1)
ωi
¯ωi
ˆωi
Kscc·
s (TLs + 1)
·
Tas
Tas + 1
(T1s + 1) (T2s + 1)
Otoliths Model
Semicircular Canals Model
Figure 15. Applied Models of the Vestibular Organs.
ﬁlter behavior. Analogous to the semicircular canals model,
the passband is found at frequencies of 0.05 to 3Hz, in which
the perceived accelerations ¯a at the transfer function outputs
contain only a slight amplitude attenuation and phase shift.
Thus, the otoliths provide very good acceleration sensors in
the frequency range of common driving maneuvers so that
translational vehicle movements can be precisely detected.
However, low-frequency acceleration stimuli below 0.05Hz
are only perceived with an amplitude attenuated by about
−8 dB. In the high-frequency range, a characteristic low-
pass behavior is observed, which is due to the inertia of the
otoliths. As a consequence, accelerations above 20Hz, e.g.,
high-frequency engine vibrations, are only sensed inaccurately
by the vestibular organs, so that further perception systems are
required for a correct interpretation of the actual motion.
By a series connection of the transfer functions with
nonlinear dead zones (see Figure 15), the threshold values
ai,thres and ωi,thres of the human perception are integrated
Frequency (Hz)
10−3
10−2
10−1
100
101
102
Phase (◦)
-90
-45
0
45
90
135
180
Magnitude (dB)
-45
-30
-15
0
15
30
Goto(jω)
Gscc(jω)
Figure 16. Frequency Responses of the Applied Transfer Function Models.
213
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

with respect to the following relationship [8]:
ˆai =
0
if |¯ai| ≤ ai,thres
¯ai − sgn (¯ai) · ai,thres
if |¯ai| > ai,thres
ˆωi =
0
if |¯ωi| ≤ ωi,thres
¯ωi − sgn (¯ωi) · ωi,thres
if |¯ωi| > ωi,thres
(38)
Consequently, the closer the performance indicators λ1 and
λ2 are to the origin, the better is the reproduction of the
simulated vehicle movements, whereby the value zero indicates
a perfect motion rendering. However, especially with regard
to λ1, this is only a theoretical value that cannot be obtained
by any driving simulator, since it would require an almost
unlimited workspace.
B. Driving Scenarios
For the purpose of obtaining a representative comparison of
the two control strategies, a selection of nine driving scenarios
was deﬁned. These contain standardized maneuvers, which are
commonly used for development and optimization applications
in the automotive industry, like:
•
Acceleration from standstill
•
Braking from driving straight forward
(DIN ISO 70028)
•
Lane change (DIN ISO 3888-1)
•
Step steering (DIN ISO 7401)
•
Braking from steady-state circular course drive
(DIN ISO 7975)
As the listed maneuvers are mainly used to identify and
analyze the driving dynamics of a vehicle, they do not rep-
resent usual driving situations. For this reason, also moderate
scenarios are examined in the evaluation:
•
Turning at a junction
•
Drive on a rural road
•
Drive through a roundabout
•
Drive through a highway interchange
Vehicle dynamics simulations of all nine maneuvers were
performed and the relevant accelerations and angular velocities
were recorded. Subsequently, these data were used as identical
reference signals for both MCA to ensure a consistent basis
for evaluation described in the next section.
VI.
RESULTS AND DISCUSSION
Subsequently, the results of the comparison of the two
Motion Cueing strategies are presented and the impacts on the
interactive driving simulation are discussed. For that purpose,
both control algorithms were implemented on the ATMOS
driving simulator. Measurement data of the translational ac-
celerations and the angular velocities taken with the installed
IMU at the driver’s head position serve as inputs for the
quality criteria presented in Section V. For reasons of clarity,
only the measured data of one driving scenario from each
maneuver class are analyzed in detail. All further scenarios
will be summarized in the following.
A. Scenario Acceleration from Standstill
First the maneuver “acceleration from standstill” is dis-
cussed, in which the simulated vehicle accelerates from stand-
still to a given speed of 130 km/h. Thereby no steering
movements of the driver take place, so that there is no lateral
vehicle excitation. Figure 17 shows the resulting longitudinal
acceleration and pitch velocity tracking using both MCA. It
becomes clear that an adequate reproduction quality of the
longitudinal acceleration from the vehicle dynamics simulation
is achieved regardless of the applied algorithm. Only when the
reference rises rapidly at time t = 4s, there are signiﬁcant
deviations between the simulated and measured acceleration
in the driving simulator. In case of the washout algorithm,
these can be explained by the signal processing of the washout
ﬁlters that are used to move the motion system back to the
neutral position. At the same time, the tilt coordination rotation
is restricted to the delayed dynamics of the low-pass ﬁlters,
resulting in the illustrated control error. The MPC approach,
in contrast, achieves notably smaller deviations. Nevertheless,
even with this algorithm, the simulated vehicle acceleration
cannot be reproduced exactly, which can be attributed to
the limited pitch velocity. As explained in Section IV, the
overall rotation rate error of the motion system is bounded
to the value of ε = 0.1rad/s so that unexpected rotations
caused by the tilt coordination technique and the kinematic
couplings of the motion platform are not perceived disturbingly
by the driver [35]. Thus, acceleration deviations, as shown at
time t = 4s, are allowed by the optimization algorithm to
keep the rotations of the motion system below the perception
threshold of the vestibular organs. Without this rotation rate
limitation or when using a motion system without couplings
between translational and rotational DOF, such as a hexapod,
the simulated vehicles acceleration could be reproduced almost
exactly in the simulator. In addition, the measured pitch
Longitudinal Acceleration (m/s2)
2
1.5
1
0.5
0
-0.5
Pitch Velocity (rad/s)
0.1
0
-0.1
-0.2
Time (s)
0
5
10
15
20
25
30
35
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 17. Longitudinal Acceleration and Pitch Velocity Tracking.
214
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

velocity in Figure 17 contains in both cases low-frequency
disturbances to the vehicle reference resulting from the tilt
coordination technique and the forced rotations of the motion
platform. When using the ﬁlter-based MCA, these deviations
are approximately twice as large at the moment of acceleration
increase as with the model predictive controller, so that it is to
be expected that they have a negative impact on the resulting
driving impression. In Figure 18 the lateral acceleration and
the corresponding roll velocity tracking are illustrated. As
there are no steering actions in this maneuver, the refer-
ence values are zero throughout the observed time range.
Accordingly, the measured accelerations also provide values
close to zero, with only minor deviations due to measurement
inaccuracies. However, these are far below the perception
threshold and are therefore not noticeable for the driver.
Since each translational movement of the motion platform
simultaneously causes a vertical displacement of the platform
center point, the measured accelerations in Figure 19 contain
unpreventable low-frequency errors compared to simulated
vehicle acceleration. Due to the available model knowledge,
the optimization-based MCA plans the motion trajectory of
the simulator in such a way that these deviations are kept
below the perception threshold of the otoliths. Furthermore,
additionally acting vertical acceleration references, such as at
time t = 26s, are reproduced with high control quality. On
the other hand, the washout algorithm generates clearly higher
vertical accelerations, since like in the Classical Washout
Algorithm, the translational degrees of freedom are considered
independently of each other in this approach. Based on these
measurement results, the application of the introduced quality
criteria provides performance indicators of λ1,WO = 0.68 and
λ2,WO = 0.35 for the washout algorithm and λ1,MPC = 0.48
as well as λ2,MPC = 0.18 for the predictive controller. This
objectiﬁcation conﬁrms the assumption that a higher quality of
motion rendering can be achieved using the optimization-based
Lateral Acceleration (m/s2)
0.5
0.25
0
-0.25
-0.5
Roll Velocity (rad/s)
0.1
0.05
0
-0.05
-0.1
Time (s)
0
5
10
15
20
25
30
35
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 18. Lateral Acceleration and Roll Velocity Tracking.
Vertical Acceleration (m/s2)
0.5
0.25
0
-0.25
-0.5
Time (s)
0
5
10
15
20
25
30
35
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 19. Vertical Acceleration Tracking.
MCA as smaller performance indicators are obtained. An
explanation for these results can be found in a more efﬁcient
coordination of the motion platform and the shaker system by
the MPC. To illustrate this in more detail, Figure 20 shows
the actuating variables determined by both approaches during
the experiment. Here it can be seen that the actuator reference
angles ψref in the longitudinal and lateral direction of the
motion platform as well as the three shaker actuators located
on the left, the right and at the rear remain always within the
simulator workspace limitations. However, also the generally
different functioning of the two control strategies becomes
ψref,long. (rad)
200
100
0
-100
-200
ψref,lat. (rad)
200
100
0
-100
-200
ψref,rear (rad)
100
50
0
-50
-100
ψref,left (rad)
100
50
0
-50
-100
ψref,right (rad)
100
50
0
-50
-100
Time (s)
0
5
10
15
20
25
30
35
Figure 20. Comparison of the Actuating Variables: Limitation (–), Washout
Algorithm (–), Model Predictive Control (–).
215
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

clear. While the coordination between motion platform and
shaker in the ﬁlter-based algorithm is mainly predeﬁned via
the static ﬁlter parameters and the distribution coefﬁcients,
both subsystems are controlled by the MPC according to the
current driving situation and the actual state of the motion
system. For this reason, there is a variable distribution between
motion platform and shaker in each driving scenario. Both
systems are thereby used asynchronously in order not to exceed
the rotation rate limitation due to the coupled DOF and the
nonlinear kinematics of the motion system, as can be observed
at time t = 4s. In addition, there is a better exploitation of the
available workspace by the model predictive control algorithm.
B. Scenario Turning at a Junction
As an example of an everyday driving situation, the
scenario “turning at a junction” with simultaneously acting
longitudinal and lateral acceleration references will be ex-
amined subsequently. In contrast to the previously discussed
maneuver, the reproduction of lateral accelerations using the
presented Motion Cueing strategies can thus also be analyzed.
Figure 21 illustrates the tracking of the simulated vehicles
longitudinal acceleration and pitch velocity. Again it becomes
clear that both the washout algorithm and the optimization-
based MCA yield an adequate reproduction of the longitudi-
nal acceleration. However, the measured accelerations show,
such as at time t = 10s, a larger delay in comparison to
the reference signal when using the washout algorithm due
to the phase shift of the implemented ﬁlters. Also in this
maneuver, the associated pitch velocity contains in both cases
low-frequency disturbances that can be explained by the tilt
coordination, since sustained acceleration components can only
be reproduced by an equivalent rotation of the motion system.
Using the washout algorithm, these errors are signiﬁcantly
higher due to the forced rotation of the motion platform, so
it can be expected that the resulting driving experience will
Longitudinal Acceleration (m/s2)
-2
-1
0
1
2
Pitch Velocity (rad/s)
-0.2
-0.1
0
0.1
0.2
Time (s)
0
5
10
15
20
25
30
35
40
45
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 21. Longitudinal Acceleration and Pitch Velocity Tracking.
Lateral Acceleration (m/s2)
-0.5
0
0.5
1
1.5
2
Roll Velocity (rad/s)
-0.15
-0.1
-0.05
0
0.05
0.1
Time (s)
0
5
10
15
20
25
30
35
40
45
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 22. Lateral Acceleration and Roll Velocity Tracking.
be negatively affected. In contrast, the predictive MCA uses
the integrated kinematics information to successfully limit the
overall rotation rate error to 0.1rad/s. As a result of this
limitation, minor errors in the tracking of the acceleration
reference occur, which are more difﬁcult to detect by the driver
in the simulator than unexpected strong rotations. Equivalent
results can be derived from Figure 22, that illustrates the
lateral acceleration and the corresponding roll velocity. As
shown, the acceleration reference from the vehicle dynamics
simulation is tracked very well with both algorithms. There
are again time delays to the reference signal that are larger
when using the washout algorithm, resulting from the phase
shift of the implemented ﬁlters. The roll velocity error is also
larger compared to the MPC, even if the difference between
both algorithms is smaller than in case of the pitch velocity.
Thus, as a consequence for the interactive driving simulation,
the resulting driving experience can be expected to be more
realistic using the predictive control strategy, since smaller
rotation rate errors are more difﬁcult to detect for the human
perception system. The vertical acceleration measured in the
examined driving scenario is illustrated in Figure 23. Also
in this maneuver it is noticeable that due to the coupled
DOF of the motion system, undesired vertical displacements
occur, which cannot be fully compensated by either control
strategy. However, these errors are signiﬁcantly lower and
mostly below the human perception threshold in the use of the
predictive MCA. The washout algorithm, on the other hand,
generates detectable sensory conﬂicts since no interactions
between horizontal and vertical accelerations are considered in
the underlying algorithm structure. To objectify these ﬁndings,
the quality criteria introduced in the previous section are
used, resulting in performance indicators λ1,W O = 1.74 and
λ2,W O = 0.92 for the washout algorithm and λ1,MP C = 1.20
and λ2,MP C = 0.53 for the optimization-based MCA. It
becomes consequently clear that a higher control quality is
achieved with the MPC, which is primarily explained by the
216
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Vertical Acceleration (m/s2)
-0.4
-0.2
0
0.2
0.4
0.6
Time (s)
0
5
10
15
20
25
30
35
40
45
Simulated Vehicle
Washout Algorithm
Model Pred. Control
Figure 23. Vertical Acceleration Tracking.
lower angular velocity and vertical acceleration errors caused
by the speciﬁc kinematics of the ATMOS driving simulator.
Here, the differences between ﬁlter-based and optimization-
based MCA are again obvious when considering the associated
actuating variables in Figure 24. Although both algorithms
respect the available workspace of the installed actuators at
all times, the coordination of the motion platform and the
shaker system shows signiﬁcant differences. Similar to the
example of the previously considered driving scenario, the
shaker is used more in the model predictive algorithm in order
to compensate the coupling effects of the motion platform best
ψref,long. (rad)
200
100
0
-100
-200
ψref,lat. (rad)
180
135
90
45
0
ψref,rear (rad)
100
50
0
-50
-100
ψref,left (rad)
100
50
0
-50
-100
ψref,right (rad)
100
50
0
-50
-100
Time (s)
0
5
10
15
20
25
30
35
40
45
Figure 24. Comparison of the Actuating Variables: Limitation (–), Washout
Algorithm (–), Model Predictive Control (–).
possible. Thereby, the motion trajectories of both subsystems
are planned asynchronously (see e.g., at time t = 10s) to
comply with the given rotation rate limitations of 0.1rad/s
while reproducing the acceleration references from the simu-
lated vehicle. In the washout algorithm, in contrast, there are
no compensation operations with the shaker, resulting in the
rotation rate and vertical acceleration errors illustrated in the
Figures 21, 22 and 23.
C. Summarized Evaluation of all Driving Scenarios
The evaluation process described before using the example
of two selected driving maneuvers was performed for all
nine test scenarios in the context of this paper. Thereby, the
performance indicators listed in Table II were obtained.
A
graphical analysis of these results can be seen in Figure 25,
which combines the evaluation of all maneuvers in a common
radar chart. Here, the two driving scenarios “acceleration from
standstill” and “turning at a junction” exhibit the lowest and
the highest performance indicators respectively. But it should
be noted that the individual maneuvers are not comparable
with each other, as they differ signiﬁcantly in terms of the
underlying driving dynamics. For example, purely longitudinal
scenarios such as “braking from driving straight forward”
naturally generate lower values of λ1 and λ2 than more
challenging maneuvers with simultaneously acting longitudinal
and lateral accelerations. However, the presented evaluation
framework enables a reliable objective comparison of both
Motion Cueing strategies for each separate driving scenario.
The chart clearly shows the advantages of the optimization-
based MCA in comparison to the washout algorithm, since
smaller performance indicators are achieved in each of the
examined scenarios. Here, it is noticeable that the perceived
control quality, expressed by the indicator λ2, yields small
values close to zero when the MPC is used and therefore a
good subjective driving impression can be expected. As already
discussed in detail in the previous sections, these results can be
explained with the angular velocity and vertical acceleration
errors due to the coupled degrees of freedom, because of which
an adequate reproduction of the simulated vehicles Motion
Cues is a challenging task. Here, it is a great advantage of
the MPC that the speciﬁc simulator kinematics are directly
considered via existing model knowledge in the optimization
algorithm. This allows undesired interactions to be taken into
account in the planning of the motion trajectory and optimally
compensated according to the current driving situation, which
is a major beneﬁt for interactive driving simulation.
TABLE II. DETERMINED PERFORMANCE INDICATORS.
Driving Scenario
λ1,WO
λ2,WO
λ1,MPC
λ2,MPC
Acceleration from
Standstill
0.68
0.35
0.48
0.18
Braking from Driving
Straight Forward
0.53
0.25
0.39
0.14
Lane Change
1.77
0.99
1.12
0.51
Step Steering
1.38
0.98
0.67
0.36
Braking from Steady-State
Circular Course Drive
0.91
0.40
0.62
0.20
Turning at Junction
1.74
0.92
1.20
0.53
Drive Through Rural Road
1.19
0.60
0.81
0.30
Drive Through
Roundabout
1.47
0.80
0.96
0.41
Drive Through Highway
Interchange
0.96
0.42
0.58
0.19
217
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

0.4
0.8
1.2
1.6
2.0
λ1,W O
λ2,W O
λ1,MP C
λ2,MP C
Acceleration from
Standstill
Braking from Driving
Straight Forward
DIN ISO 70028
Lane Change
DIN ISO
3888-1
Step Steering
DIN ISO 7401
Braking from Steady-State
Circular Course Drive
DIN ISO 7975
Turn at Junction
Drive Through
Rural Road
Drive
Through
Roundabout
Drive Through
Highway
Interchange
Figure 25. Evaluation of the Analyzed Test Maneuvers.
VII.
CONCLUSION AND FUTURE WORK
In this paper, the development of different Motion Cue-
ing Algorithms for a hybrid kinematics driving simulator
with 5 degrees of freedom was presented. Motivated by the
unique characteristics of the considered motion system, a
comprehensive extension of the ﬁlter-based Classical Washout
Algorithm was designed ﬁrst. Key features of the resulting
control strategy form a dynamic position washout to any point
within the simulator workspace, as well as a tilt coordination
distribution strategy in order to make full use of the motion ca-
pabilities. However, similar to the basic idea of the CWA, this
approach does not consider couplings between the individual
translational DOF, which leads to undesired interdependencies
that may disturb the driving impression under certain circum-
stances. To overcome this, an optimization-based MCA using
the concept of Model Predictive Control was implemented.
It includes a simpliﬁed model of the controlled actuators
as well as the nonlinear kinematic relations of the motion
system to optimally plan the trajectory of the simulator in real-
time, taking into account given constraints. Thus, the physical
limits of the system, such as the restricted workspace, are
respected and the occurring coupling effects are compensated
best possible.
To analyze the resulting control quality, both algorithms
were objectively compared by means of deﬁned quality criteria
and standard driving scenarios from the automotive industry.
Thereby, a satisfactory motion rendering was proven for each
Motion Cueing strategy. However, due to the integration of
model knowledge, the predictive MCA exhibits less control
errors in angular velocities and vertical acceleration. For this
reason, it is assumed that the subjective driving impression
is more realistic when using the MPC, which is why this
approach offers great potential for interactive driving sim-
ulation. On the other hand, the ﬁlter-based MCA has the
advantages of simple implementation, good traceability and
low computational effort, which relativizes the worse control
quality in comparison to the optimization-based algorithm.
The future work will deal with the subjective validation of
our observations. In this context, reliable subject studies will be
conducted in order to rate the resulting degree of immersion by
human Drivers-in-the-Loop. Thus, it will be possible to inves-
tigate by paired comparison of both approaches whether there
is a correlation between the perceived control performance
and the objective results presented in this paper. In addition,
methods from the ﬁeld of decoupling control theory can be
integrated in the modiﬁed washout algorithm to compensate
the vertical movements of the motion platform with the shaker
in a limited area of the workspace, so that occurring False Cues
are reduced more effectively.
REFERENCES
[1]
P. Biemelt, S. Mertin, N. R¨uddenklau, S. Gausemeier, and A. Tr¨achtler,
“Objective Evaluation of a Novel Filter-Based Motion Cueing Al-
gorithm in Comparison to Optimization-Based Control in Interactive
Driving Simulation,” 11th International Conference on Advances in
System Simulation (SIMUL), 2019, pp. 25–31.
[2]
N.
R¨uddenklau,
P.
Biemelt,
S.
Henning,
S.
Gausemeier,
and
A. Tr¨achtler, “Real-Time Lighting of High-Deﬁnition Headlamps for
Night Driving Simulation,” International Journal On Advances in Sys-
tems and Measurements, vol. 12, 2019, pp. 72–88.
[3]
V. Melcher, S. Rauh, F. Diederichs, H. Widlroither, and W. Bauer,
“Take-Over Requests for automated driving,” Procedia Manufacturing,
vol. 3, 2015, pp. 2867–2873.
[4]
H. Bellem et al., “Can We Study Autonomous Driving Comfort in
Moving-Base Driving Simulators? A Validation Study,” Human Factors,
vol. 59, no. 3, 2017, pp. 442–456.
[5]
T. Murano, T. Yonekawa, M. Aga, and S. Nagiri, “Development of
High-Performance Driving Simulator,” SAE International Journal of
Passenger Cars-Mechanical Systems, vol. 2, 2009, pp. 661–669.
[6]
E. Zeeb, “Daimler’s New Full-Scale, High-dynamic Driving Simulator –
A Technical Overview,” Driving Simulation Conference Europe (DSC),
2010, pp. 157–165.
[7]
S. F. Schmidt and B. Conrad, “Motion Drive Signals for Piloted Flight
Simulators,” I Contract Report NASA, CR-1601, 1970.
[8]
L. D. Reid and M. A. Nahon, “Flight Simulation Motion-Base Drive
Algorithms: Part 1 - Developing and Testing the Equations,” University
of Toronto, UTIAS Report 296, 1985.
[9]
T. Sammet, “Motion-Cueing-Algorithmen f¨ur die Fahrsimulation (Mo-
tion Cueing Algorithms for Driving Simulation),” Fortschritt Berichte-
VDI Reihe 12 Verkehrstechnik/Fahrzeugtechnik, vol. 643, 2007.
[10]
K. Patil, S. K. Molla, and T. Schulze, “Hybrid Vehicle Model Devel-
opment using ASM-AMESim-Simscape Co-Simulation for Real-Time
HIL Applications,” SAE Technical Paper, Tech. Rep., 2012.
[11]
D. Stewart, “A Platform with Six Degrees of Freedom,” Proceedings
of the Institution of Mechanical Engineers, vol. 180, no. 1, 1965, pp.
371–386.
[12]
G. Bertolini and D. Straumann, “Moving in a Moving World: A Review
on Vestibular Motion Sickness,” Frontiers in Neurology, vol. 7, no. 14,
2016.
[13]
P. Biemelt, S. Mertin, N. R¨uddenklau, S. Gausemeier, and A. Tr¨achtler,
“Design and Evaluation of a Novel Filter-Based Motion Cueing Strategy
for a Hybrid Kinematics Driving Simulator with 5 Degrees of Freedom,”
Driving Simulation Conference Europe (DSC), 2020.
[14]
M. Bruschetta, F. Maran, and A. Beghi, “A fast implementation of
MPC-based motion cueing algorithms for mid-size road vehicle motion
simulators.” Vehicle System Dynamics, vol. 55, no. 6, 2017, pp. 802–
826.
[15]
J. O. Pitz, “Vorausschauender Motion-Cueing-Algorithmus f¨ur den
Stuttgarter Fahrsimulator (Predictive Motion Cueing Algorithm for the
Stuttgart Driving Simulator),” PhD Thesis, Universit¨at Stuttgart, 2017.
[16]
P.
Biemelt,
S.
Henning,
N.
R¨uddenklau,
S.
Gausemeier,
and
A. Tr¨achtler, “A Model Predictive Motion Cueing Strategy for a 5-
Degree-of-Freedom Driving Simulator with Hybrid Kinematics,” Driv-
ing Simulation Conference Europe (DSC), 2018, pp. 79–85.
[17]
J. Richalet and D. O’Donovan, Predictive Functional Control: Principles
and Industrial Applications. Springer Science & Business Media, 2009.
218
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[18]
A. J. Benson, E. C. Hutt, and S. F. Brown, “Thresholds for the
Perception of Whole Body Angular Movement about a Vertical Axis,”
Aviation, Space, and Environmental Medicine, vol. 60, 1989, pp. 205–
213.
[19]
N. Wiener, “Nonlinear Problems in Random Theory,” MIT Press,
Cambridge, 1958.
[20]
J. M. Maciejowski, “Predictive Control with Constraints,” Pearson
Education, 2002.
[21]
O. F¨ollinger, “Regelungstechnik: Einf¨uhrung in die Methoden und ihre
Anwendung (Control Engineering: Introduction to the Methods and
their Application),” VDE Verlag, 2013.
[22]
M. Katliar, K. N. De Winkel, J. Venrooij, P. Pretto, and H. H. B¨ulthoff,
“Impact of MPC Prediction Horizon on Motion Cueing Fidelity,”
Driving Simulation Conference Europe (DSC), 2015, pp. 219–222.
[23]
M. Grottoli, D. Cleij, P. Pretto, Y. Lemmens, R. Happee, and H. H.
B¨ulthoff, “Objective evaluation of prediction strategies for optimization-
based motion cueing,” Simulation: Transactions of the Society for
Modeling and Simulation International, vol. 95, no. 8, 2018, pp. 707–
724.
[24]
P. Biemelt, C. Link, S. Gausemeier, and A. Tr¨achtler, “A Model-Based
Online Reference Prediction Strategy for Model Predictive Motion
Cueing Algorithms,” 21st IFAC World Congress, 2020.
[25]
K. Svanberg, “A Class of Globally Convergent Optimization Methods
Based on Conservative Convex Separable Approximations,” SIAM
Journal on Optimization, vol. 12, no. 2, 2002, pp. 555–573.
[26]
S.
G.
Johnson,
“The
NLopt
nonlinear-optimization
package,”
https://nlopt.readthedocs.io/en/latest/, last call December 7th 2020.
[27]
D. G. Luenberger, “Observing the State of a Linear System,” IEEE
Transactions on Military Electronics, vol. 8, no. 2, 1964, pp. 74–80.
[28]
N. A. Pouliot, C. M. Gosselin, and M. A. Nahon, “Motion Simulation
Capabilities of Three-Degree-of-Freedom Flight Simulators,” Journal of
Aircraft, vol. 35, no. 1, 1998, pp. 9–17.
[29]
I. Al Qaisi and A. Tr¨achtler, “Human in the Loop: Optimal Control
of Driving Simulators and New Motion Quality Criterion,” IEEE
International Conference on Systems, Man, and Cybernetics (SMC),
2012, pp. 2235–2240.
[30]
P. Grant, M. Blommer, B. Artz, and J. Greenberg, “Analysing Classes
of Motion Drive Algorithms Based on Paired Comparison Techniques,”
Vehicle System Dynamics, vol. 47, no. 9, 2009, pp. 1075–1093.
[31]
A. Siegel and H. N. Sapru, Essential Neuroscience. Lippincott Williams
& Wilkins, 2006.
[32]
L. R. Young and J. L. Meiry, “A Revised Dynamic Otolith Model,”
Aerospace Medicine, vol. 39, no. 6, 1968, pp. 606–608.
[33]
C. Fernandez and J. M. Goldberg, “Physiology of Peripheral Neurons
Innervating Semicircular Canals of the Squirrel Monkey. II. Response to
Sinusoidal Stimulation and Dynamics of Peripheral Vestibular System.”
Journal of Neurophysiology, vol. 34, no. 4, 1971, pp. 661–675.
[34]
R. J. Telban and F. M. Cardullo, “Motion Cueing Algorithm Develop-
ment: Human-Centered Linear and Nonlinear Approaches,” National
Aeronautics and Space Administration (NASA), CR-2005-213747,
Tech. Rep., 2005.
[35]
A. Nesti, C. Masone, M. Barnett-Cowan, P. Robuffo Giordano, H. H.
B¨ulthoff, and P. Pretto, “Roll rate thresholds and perceived realism
in driving simulation,” Driving Simulation Conference Europe (DSC),
2012, pp. 23–31.
219
International Journal on Advances in Systems and Measurements, vol 13 no 3 & 4, year 2020, http://www.iariajournals.org/systems_and_measurements/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

