Upper bounds and optimal solutions for a Deterministic and Stochastic linear Bilevel
Problem
Pablo Adasme
Universidad de Santiago de Chile
departamento de Ingenieria El´ectrica
pablo.adasme@usach.cl
Laboratoire de Recherche en Informatique,
Universite Paris-Sud XI,
Batiment 650, 91405, Orsay Cedex France
pablo.adasme@lri.fr
Abdel Lisser
Laboratoire de Recherche en Informatique,
Universite Paris-Sud XI,
Batiment 650, 91405, Orsay Cedex France
abdel.lisser@lri.fr
Abstract—In this paper, we compute upper bounds and
optimal solutions for a deterministic linear bilevel program-
ming problem and then, for a stochastic version of this
problem. The latter is formulated while adding probabilistic
knapsack constraints in the upper level problem of the initial
deterministic model. The upper bounds are computed using a
Lagrangian iterative minmax algorithm and linear program-
ming relaxations. To this purpose, we ﬁrst transform both
problems into the so called Global Linear Complementarity
problems. We then, use these models to derive equivalent mixed
integer programming formulations. This allows comparing the
iterative minmax algorithm and the linear programming upper
bounds with the optimal solution of the problem for the
deterministic and stochastic instances as well. Our numerical
results show tight near optimal bounds for both, the stochastic
and deterministic linear programming relaxations and larger
gaps for the iterative minmax algorithm.
Keywords-Linear bilevel programming; stochastic program-
ming; mixed integer programming.
I. INTRODUCTION
In mathematical programming, the bilevel programming
problem (BPP) is a hierarchical optimization problem. It
consists in optimizing an objective function subject to a
constrained set in which another optimization problem is
embedded. The ﬁrst level optimization problem (upper-level
problem) is known as the leader’s problem while the lower-
level is known as the follower’s problem. Formally, it can
be written as follows
min
{x∈X,y}
F(x, y)
s.t.
G(x, y) ≤ 0
min
{y} f(x, y)
s.t.
g(x, y) ≤ 0
where x ∈ Rn1, y ∈ Rn2, F : Rn1 × Rn2 → R and
f : Rn1 ×Rn2 → R are the decision variables and the objec-
tive valued functions for the upper and lower level problems,
respectively. Similarly, the functions G : Rn1 ×Rn2 → Rm1
and g : Rn1×Rn2 → Rm2 denote upper and lower level con-
straints. Bilevel programming is commonly used to model
situations in which two or more decision makers control
part of the variables within a particular decision process
[1]. The main goal is thus, to ﬁnd an optimal point such
that the leader and the follower minimizes their respective
objective valued functions F(x, y), f(x, y) subject to their
respective linking constraints G(x, y) and g(x, y). Notice
that either the leader (or the follower) might also have
their own particular constraints such as the set X in the
above leader problem. Applications concerning BPP include
transportation, networks design, management and planning
among others (for different domains of applications see for
instance [6]).
It has been shown that BPPs are strongly NP-hard even
for the simplest case in which all the involved functions are
afﬁne [8]. Hereafter, we only consider the case in which
all the above functions F(x, y), f(x, y), G(x, y), g(x, y) are
linear. Besides, if a particular constrained set exists in the
leader or in the follower problem, we assume that it is a
polyhedral afﬁne space.
Stochastic programming (SP), on the other side, is an
optimization technique which deals with the uncertainty
of the input parameters of a mathematical program [16].
The underlying idea of SP is that the input parameters can
be modeled as random variables to which the theory of
probabilities can be applied. The probability distributions
governing the data are usually assumed to be known in
advance or that they can be estimated. The probability space
is also usually assumed to be discrete and as such, one can
consider ﬁnite sets of scenarios for the input parameters.
There are two well known scenario based approaches in
SP. The ﬁrst one is known as the recourse model approach
[5], [7] while the second one is known as probabilistic
constrained approach [7]. The literature related to SP has
grown considerably in last decades. A general survey can
be found for instance in [14] and the reader is also referred
333
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

to [3], [9], [15] or to a more recent book in [16] for a deeper
comprehension.
In this paper, we consider the probabilistic knapsack
constrained approach proposed in [7] when embedded into
the upper level problem. Under this approach, it is imposed
a threshold risk on the probability of occurrence for some
(or all) of the constraints within a particular mathematical
model. This means that some of the constraints should be
satisﬁed, at least for a given percentage, while the rest of
them are discarded.
The paper is organized as follows. In Section II, we
provide a brief state of the art concerning joint aspects of
bilevel and stochastic programming. Then, in Section III,
we state the linear bilevel programming problem (LBPP)
and brieﬂy explain the probabilistic constrained approach
considered. In Section IV, we derive the Global Linear
Complementarity problem (GLCP) and also explain how
the iterative minmax (IMM) algorithm works in order to
compute the upper bounds. In Section V, we derive from the
GLCPs, mixed integer and linear programming formulations
(Resp. MIP and LP) according to [1]. Numerical results are
given for the LBPP and for the stochastic LBPP (SLBPP)
in Section VI. Finally, in Section VII we give the main
conclusions of the paper.
II. RELATED WORK
Although there exist many application domains in which
bilevel programming can be suitably applied, joint stochastic
and bilevel programming aspects have not yet widely been
explored so far. Some preliminary works are the following
[2], [4], [11]–[13], [17].
In [11], Luh et al. study a deterministic pricing problem
and propose a stochastic counterpart for it by assuming
that the inducible region is subject to uncertainty. Here,
the inducible region is deﬁned as the feasible set of the
follower problem induced by the decision of the leader
problem. Next, Patriksson et al. also incorporates uncertainty
in the input data of hierarchical mathematical Programming
problems [13]. In both papers [11], [13], the authors discuss
theoretical aspects such as necessary and sufﬁcient condi-
tions for optimality, existence of solutions, convexity, and
propose algorithms to deal with the problem at hand. Subse-
quently, Christiansen et al. [4], consider a stochastic bilevel
programming problem which corresponds to an application
in structural optimization where again, theoretical aspects
such as existence of optimal solutions, Lipschitz continuity
and differentiability aspects are discussed. More recently,
applications concerning telecommunication network prob-
lems have been studied in [2], [17]. Therein, the analysis
covers both theoretical and also practically oriented issues.
In particular, special attention is given to different formula-
tions of one and two stage stochastic bilevel programming
problems where necessary optimality conditions for each of
these problem instances are stated. Additionally, in [17], it
is also proposed an algorithm which uses a stochastic quasi-
gradient method to solve the problem.
Finally in [12], ¨Ozaltin et al. consider a stochastic bilevel
knapsack problem with uncertain right-hand sides, and de-
rive necessary and sufﬁcient conditions for the existence of
an optimal solution. In particular, they provide an equivalent
two stage stochastic formulation when the leader problem
take only integer values for the decision variables, although
at the cost of having binary decision variables in the follower
problem. Branching based algorithms are proposed to solve
large scale instances of the problem.
In this paper, we focus more on computational numerical
experiments rather than on theoretical aspects. Hence, we
proceed as follows. We ﬁrst compute upper bounds and
optimal solutions for a generic linear bilevel programming
problem (LBPP). We then, extend this generic LBPP by
introducing knapsack probabilistic constraints in the upper
level problem [7]. Hence, we compute upper bounds and
optimal solutions for this stochastic LBPP (SLBPP) as well.
The upper bounds are computed using a Lagrangian iterative
minmax (IMM) algorithm proposed in [10] and also using
linear programming (LP) relaxations we formulate from the
so called Global Linear Complementarity Problem (GLCP)
according to [1]. In [10], Kosuch et al. neither provide
optimal solutions for deterministic or stochastic problems
nor calculate gaps to measure IMM efﬁciency. Furthermore,
even when Audet et al. propose links to derive an equivalent
MIP formulation from a linear bilevel programming problem
[1], they do not provide numerical comparisons to measure
the tightness of its LP relaxation. Therefore, this paper
can be seen as an extension of the works presented in
[10] and [1] in the sense that now, we do provide optimal
solutions and upper bounds for the IMM and for the LP
relaxations as well as numerical comparisons between them,
for deterministic and stochastic instances. In particular, we
compute the optimal solutions using the MIP equivalent
formulations [1].
III. PROBLEM FORMULATION
In this section, we ﬁrst present the generic LBPP under
study. Then, we extend this generic model by adding knap-
sack probabilistic constraints in the upper level problem ac-
cording to [7]. Since the probabilistic constrained approach
introduces binary variables in the problem, we then obtain a
mixed integer linear bilevel programming problem (MILBP)
which we transform back into a LBPP [1]. We consider the
following LBPP:
LBP1:
max
{x}
cT
1 x + dT
1 y
(1)
s.t.
A1x + B1y ≤ b1
(2)
0 ≤ x ≤ 1n1
(3)
y ∈ arg max
{y} {cT
2 x + dT
2 y}
(4)
s.t.
A2x + B2y ≤ b2
(5)
334
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

0 ≤ y ≤ 1n2
(6)
where x ∈ Rn1 and y ∈ Rn2 are decision variables.
Vectors 1n1 and 1n2 are vectors of size n1 and n2 with
entries equal to one. Matrices A1, B1, A2, B2 and vectors
c1, c2, d1, d2, b1 ∈ Rm1, b2 ∈ Rm2 are input real matri-
ces/vectors deﬁned accordingly. In LBP1, (1)-(3) correspond
to the leader’s problem while (4)-(6) represent the follower’s
problem. Knapsack probabilistic constraints can be added
to the upper-level problem of LBP1 as follows. Let w =
w(ω) ∈ Rn1
+ and S = S(ω) ∈ R+ be two random variables
distributed according to a discrete probability distribution Ω.
We consider the following knapsack probabilistic constraints
in the upper level problem
P

wT (ω)x ≤ S(ω)
	
≥ (1 − α)
(7)
where α represents the risk we take while not satisfying
some of the constraints. Since Ω is discrete, one may
suppose that w = w(ω) and S = S(ω) are concentrated
in a ﬁnite set of scenarios such as w(ω) = {w1, .., wK}
and S(ω) = {s1, ..sK}, respectively with probability vector
pT = (p1, .., pK) for all k such that PK
k=1 pk = 1 and
pk ≥ 0. According to [7], constraints in (7) can be trans-
formed into the following pair of deterministic constraints
wT
k x ≤ sk + Mkzk
k = 1 : K
(8)
pT z ≤ α
(9)
where vector zT = (z1, .., zK, ) is composed of binary vari-
ables. This means, if zk = 0 then the constraint is included,
otherwise it is not activated. Mk for each k = 1 : K is
deﬁned as
Mk =
n1
X
i=1
wi
k − sk
where wi
k denotes the ith component of vector wk. Putting it
altogether yields the following deterministic mixed integer
linear bilevel program
MILBP1:
max
{x,z}
cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α
zk ∈ {0, 1}K
y ∈ arg max
{y} {cT
2 x + dT
2 y}
s.t.
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
Although MILBP1 contains binary variables, it can be
converted back into an equivalent continuous LBPP [1] as
follows
LBP2:
max
{x,z}
cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α
0 ≤ zk ≤ 1,
∀k
v = 0K
(y, v) ∈ arg max
{y,v}{cT
2 x + dT
2 y + 1T
Kv}
s.t.
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
v ≤ z
(10)
v ≤ 1K − z
(11)
In LPB2, we denote by 1K and 0K, the vector of all ones
and the vector of all zeros of dimension K. As explained
in [1], the transformation from MILBP1 into LBP2 can be
done by performing the following steps. First the binary
variables z ∈ {0, 1}K for each k = 1 : K in the upper
level problem should be relaxed inside the interval [0,1]. In
parallel, a new continuous variable vector v = 0K should be
placed in the leader’s problem imposing that all its entries be
equal to zero. In fact, vector v is introduced in the follower’s
problem when adding the term 1T
Kv in its objective function
together with the new constraints (10)-(11). The term added
in the objective function together with the latter constraints
will enforce all the entries in vector z to be either equal
to zero or one. We then, have derived an equivalent LBPP
formulation for MILBP1. Notice that v is a variable vector
in the follower’s problem while vector z is a variable vector
in the leader’s problem.
In the next section, we derive the so called Global
Linear Complementarity Counterparts for LBP1 and LBP2.
Subsequently, we brieﬂy present and explain the Lagrangian
iterative minmax algorithm proposed in [10].
IV. THE GLCP AND IMM ALGORITHM
In this section, we explain all the necessary transformation
steps until reaching the GLCP counterparts for LBP1 and
LBP2. Then, we present IMM algorithm and describe how
it works in order to compute the upper bounds. Finally, we
derive from the GLCP problems equivalent MIP formula-
tions according to [1] together with their LP relaxations.
A. The Global Linear Complementarity Problem
The GLCP is a single level quadratic optimization prob-
lem. The main idea of deriving the GLCP consists of
replacing the original follower’s problem with its initial
constraints, dual constraints and complementary slackness
conditions. The decision variables of GLCP are thus: the
335
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

leader, the follower and the follower’s dual variables as well.
In order to derive a GLCP model for LBP1, we ﬁrst write
the dual of the follower problem as follows
LBPD1:
min
{λ,µ}
λT (b2 − A2x) + 1T
Kµ
(12)
s.t.
(B2)T λ + In2µ ≥ d2
(13)
λ ≥ 0, µ ≥ 0
(14)
where λ and µ are Lagrangian multipliers vectors of ap-
propriate size. In2 represents the identity matrix of order
n2. Now, we add the complementary slackness conditions
we construct by using LBP1 and LBPD1 together with its
respective dual constraints (13)-(14). We may obtain the so
called GLCP counterpart for LBP1 as follows
LBPG1:
max
{x,y,λ,µ}
cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
(B2)T λ + In2µ ≥ d2
λ ≥ 0, µ ≥ 0
(b2 − A2x − B2y)T λ = 0
(15)
(1n2 − In2y)T µ = 0
(16)
((B2)T λ + In2µ − d2)T y = 0
(17)
where (15)-(17) are the complementary slacknes conditions.
To derive the GLCP counterpart for LBP2, we proceed
similarly as for LBP1. In this case, the dual formulation
for the follower problem can be written as
LBPD2:
min
{λ1,µ1,µ2,µ3}
λT
1 (b2 − A2x) + µT
1 z +
+µT
2 (1K − z) + µT
3 1n2
(18)
s.t.
(B2)T λ1 + In2µ3 ≥ d2
(19)
IKµ1 + IKµ2 ≥ 1K
(20)
λ1 ≥ 0, µ1 ≥ 0, µ2 ≥ 0, µ3 ≥ 0
(21)
where λ1, µ1, µ2 and µ3 are Lagrangian multiplier vectors
respectively. Subsequently, the GLCP in this case reads
LBPG2:
max
{x,y,z,µ1,µ2,µ3,λ1}
cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α,
0 ≤ zk ≤ 1
∀k = 1 : K
(B2)T λ1 + In2µ3 ≥ d2
IKµ1 + IKµ2 ≥ 1K
λ1 ≥ 0, µ1 ≥ 0, µ2 ≥ 0, µ3 ≥ 0
λT
1 (b2 − A2x − B2y) = 0
(22)
µT
1 z = 0
(23)
µT
2 (1K − z) = 0
(24)
µT
3 (1n2 − y) = 0
(25)
yT ((B2)T λ1 + In2µ3 − d2) = 0
(26)
In LBPG2, the last constraints (22)-(26) are due to the
complementary slackness condition.
In the next subsection, we brieﬂy illustrate how IMM
algorithm works when solving a minmax relaxation derived
from the GLCP [10].
B. The IMM Algorithm
To show how the IMM algorithm works, we take for
illustration purposes, the GLCP we have already derived
from the previous subsection denoted by LBPG2. Notice that
this model is a quadratic optimization problem since their
complementary constraints (22)-(26) are quadratic, and thus
it is hard to solve directly. The ﬁrst step of IMM consists
in relaxing these quadratic constraints into the following
Lagrangian function
L(x, y, z, λ1, µ1, µ2, µ3) =
= cT
1 x + dT
1 y +
+λT
1 (b2 − A2x − B2y) +
+µT
1 z + µT
2 (1K − z) +
+µT
3 (1n2 − z) +
+yT ((B2)T λ1 + In2µ3 − d2)
(27)
This allows writing a minmax relaxation for LBPG2 as
follows
LGN2:
min
{µ1,µ2,µ3,λ1} max
{x,y,z}
L(x, y, z, λ1, µ1, µ2, µ3)
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α,
0 ≤ zk ≤ 1
∀k = 1 : K
(B2)T λ1 + In2µ3 ≥ d2
IKµ1 + IKµ2 ≥ 1K
λ1 ≥ 0, µ1 ≥ 0, µ2 ≥ 0, µ3 ≥ 0
The second step of IMM consists of decomposing LGN into
two linear programming subproblems: LGNs and LGNd as
LGNs:
max
{x,y,z,ϕ}
ϕ
ϕ ≤ L(x, y, z, λq
1, µq
1, µq
2, µq
3),
∀q = 0, 1, ..., N − 1
(28)
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
336
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α,
0 ≤ zk ≤ 1
∀k = 1 : K
and
LGNd:
min
{µ1,µ2,µ3,λ1,β}
β
β ≥ L(xq, yq, zq, λ1, µ1, µ2, µ3),
∀q = 1, ..., N
(29)
s.t.
(B2)T λ1 + In2µ3 ≥ d2
IKµ1 + IKµ2 ≥ 1K
λ1 ≥ 0, µ1 ≥ 0, µ2 ≥ 0, µ3 ≥ 0
where ϕ and β are deﬁned as free real variables. Finally,
the third step of the algorithm consists in solving iteratively
both LGNs and LGNd. At iteration q, the auxiliary constraint
(28) (resp. (29)) is added to LGNs (resp. LGNd) in order
to enforce the convergence of their optimal solution values
towards the optimal solution value of LGN. The iteration
process stops when either β − ϕ < δ or (β − ϕ)/β < ε for
small δ > 0 and ε > 0. The convergence of IMM is proven
in [10]. Notice that even when IMM does not converge to
a stationary point, it provides, at least, an upper bound for
the GLCP. Hereafter, we denote by LGN1 and LGN2 the
minmax relaxations we formulate starting from LBP1 and
LBP2 respectively. In this paper, we compute upper bounds
for LGN1 and LGN2 using IMM algorithm. Afterward, we
compare these upper bounds with LP relaxations we derived
from equivalent MIP formulations according to [1].
V. MIP AND LP FORMULATIONS
In this subsection, we present for each GLCP problems
(LBPG1 and LBPG2 respectively) an equivalent MIP for-
mulation. The method basically consists of replacing each
quadratic constraint of the GLCP by two linear constraints
that include a new binary variable. According to [1], a MIP
formulation for LBPG1 can be written as follows
MIP1:
max
{x,y,λ,µ,ν1,ν2,ν3} cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
(B2)T λ + In2µ ≥ d2
λ ≥ 0, µ ≥ 0
b2 − A2x − B2y + Lν1 ≤ L1m2
(30)
λ ≤ Lν1,
ν1 ∈ {0, 1}m2
(31)
1n2 − In2y + Lν2 ≤ L1n2
(32)
µ ≤ Lν2,
ν2 ∈ {0, 1}n2
(33)
(B2)T λ + In2µ − d2 + Lν3 ≤ L1n2
(34)
y ≤ Lν3,
ν3 ∈ {0, 1}n2
(35)
In this model, constraints in (30)-(31),(32)-(33),(34)-(35) are
equivalent to constraints (15),(16),(17) in LBPG1 respec-
tively. These constraints force at least one of the terms within
each product term to be equal to zero. To this end, a large
constant L is needed [1]. Similarly, we can derive a MIP
formulation for LBPG2 as follows
MIP2:
max
{x,y,z,µ1,µ2,µ3,λ1,θ1,θ2,θ3,θ4,θ5} cT
1 x + dT
1 y
s.t.
A1x + B1y ≤ b1
0 ≤ x ≤ 1n1
A2x + B2y ≤ b2
0 ≤ y ≤ 1n2
wT
k x ≤ sk + Mkzk
k = 1 : K
pT z ≤ α,
0 ≤ zk ≤ 1
∀k = 1 : K
(B2)T λ1 + In2µ3 ≥ d2
IKµ1 + IKµ2 ≥ 1K
λ1 ≥ 0, µ1 ≥ 0, µ2 ≥ 0, µ3 ≥ 0
b2 − A2x − B2y + Lθ1 ≤ L1m2
(36)
λ ≤ Lθ1,
θ1 ∈ {0, 1}m2
(37)
z + Lθ2 ≤ L1K
(38)
µ1 ≤ Lθ2,
θ2 ∈ {0, 1}K
(39)
1K − z + Lθ3 ≤ L1K
(40)
µ2 ≤ Lθ3, θ3 ∈ {0, 1}K
(41)
1n2 − y + Lθ4 ≤ L1n2
(42)
µ3 ≤ Lθ4,
θ4 ∈ {0, 1}n2
(43)
(B2)T λ1 + In2µ3 − d2 + Lθ5 ≤ L1n2
(44)
y ≤ Lθ5,
θ5 ∈ {0, 1}n2
(45)
Analogously, in this model constraints (36)-(45) replace
constraints (22)-(26) in LPBG2. We denote by LP1 and LP2
the corresponding linear programming relaxations derived
from MIP1 and MIP2, respectively.
VI. NUMERICAL RESULTS
In this section, we present numerical results for MIP1,
MIP2, LP1, LP2, LGN1 and LGN2. The input data is
generated as follows. The entries in matrices A1, A2, B1, B2
are ﬁlled with random values uniformly picked from [-1,1]
except for the last row which is uniformly ﬁlled with values
in [0,1]. The entries of b1, b2 are generated in the following
way:
b1
i =
n1
X
j=1
A1
ij +
n2
X
j=1
B1
ij + ρ1
i ,
i = {1, .., m1}(46)
b2
i =
n1
X
j=1
A2
ij +
n2
X
j=1
B2
ij + ρ2
i ,
i = {1, .., m2}(47)
337
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

Table I
UPPER BOUNDS AND OPTIMAL SOLUTIONS FOR THE DETERMINISTIC PROBLEM (LBPP)
#
Instance Size
MIP1
LGN1
Time LGN1
# LPs
LP1
Time LP1
Gaps
m1
m2
n1
n2
Ubs
Std
Ubs
Std
LGN1
LP1
1
25
25
50
50
318.6297
400.5155
55.2680
0.4578
19.9000
324.0572
53.2167
0.1703
20.5718
1.5381
2
25
25
50
100
570.9695
754.9484
45.3639
0.5563
15.7000
579.6330
45.8222
0.1641
24.2832
1.3892
3
25
25
50
150
800.2270
1078.6
38.0506
0.7156
14
806.3612
39.1128
0.1844
25.7922
0.7522
4
25
25
50
250
1319.1
1758.4
69.2061
1.1703
12.4000
1324
55.1661
0.2797
24.9855
0.3751
5
25
25
100
50
534.4669
616.3301
46.8627
0.9031
30.7000
541.6181
49.7854
0.2375
13.3941
1.3551
6
25
25
100
100
823.3725
993.2053
43.7868
0.9297
22.1000
830.9123
50.2394
0.2422
17.1145
0.8795
7
25
25
100
150
1061
1323.7
75.8933
1.0781
18.3000
1062.8
94.5218
0.2562
19.9749
0.1677
8
25
25
100
250
1501
1975.4
80.0849
1.5844
15.7000
1512.4
85.2606
0.2719
24.0231
0.7090
9
25
25
150
50
796.3497
879.2877
71.7902
1.1422
31.2000
799.2495
71.0114
0.2391
9.4376
0.3403
10
25
25
150
100
1050
1232
47.2699
1.4094
27.6000
1057.9
56.2905
0.2391
14.8390
0.7229
11
25
25
150
150
1288.4
1567.1
66.5875
1.4109
20.6000
1303.8
61.2962
0.2609
17.8121
1.1917
12
25
25
150
250
1763.7
2213.5
96.8940
2.3250
20.1000
1768.8
83.8630
0.3000
20.3168
0.2782
13
25
25
250
50
1348.7
1436.5
68.2226
1.4578
29.6000
1349.4
59.5212
0.2656
6.0902
0.0493
14
25
25
250
100
1541.7
1736.5
61.1188
2.0219
31.1000
1552
55.1324
0.2797
11.2055
0.6480
15
25
25
250
150
1777
2047.9
59.2596
1.9344
23.5000
1782.3
44.7907
0.2781
13.2086
0.2986
16
25
25
250
250
2292.5
2723
48.3565
2.5031
20.1000
2297.4
61.8148
0.3234
15.8171
0.2108
17
50
50
50
50
181.8254
256.2218
48.6907
0.8703
17.6000
184.6658
45.4258
0.2516
29.3389
1.4090
18
50
50
50
100
399.8696
570.6325
83.5419
2.3438
24
404.9089
63.2648
0.2562
29.8847
1.2420
19
50
50
50
250
1116.7
1581.4
60.9783
2.9844
14.8000
1117.8
57.5520
0.3422
29.3974
0.1003
20
50
50
50
500
2413.4
3281.7
68.6972
3.3344
10.6000
2415.2
56.4318
0.4969
26.4553
0.0747
21
50
50
100
50
338.3935
401.1113
80.9225
2.6719
34.6000
338.8181
68.0222
0.2562
15.5971
0.1357
22
50
50
100
100
639.0975
804.6371
58.2480
5.3641
39
642.3280
62.9545
0.2813
20.7142
0.5395
23
50
50
100
250
1403.2
1836.7
54.4123
4.9594
21.6000
1408.8
76.2232
0.3516
23.6332
0.4281
24
50
50
100
500
2595.3
3471.6
89.8953
5.4188
14.6000
2596.1
102.6473
0.4656
25.2606
0.0311
25
50
50
250
50
1146.4
1223.7
79.9139
6.2484
54.6000
1156.5
75.4866
0.3266
6.2685
0.8414
26
50
50
250
100
1374.8
1544.5
66.4153
7.4703
50.8000
1381.5
64.8566
0.3563
10.9772
0.4713
27
50
50
250
250
2136.1
2551.2
96.8040
10.4750
37
2137.3
69.5131
0.4203
16.2371
0.0592
28
50
50
250
500
3282.1
4180.2
79.3646
11.9203
23.7000
3287
73.9953
0.5359
21.4839
0.1534
29
50
50
500
50
2392.7
2472.2
94.0571
12.0469
60.4000
2394.9
88.9616
0.4484
3.2086
0.0864
30
50
50
500
100
2586.4
2750
43.8231
11.7516
52
2590.4
47.6176
0.4609
5.9523
0.1548
31
50
50
500
250
3386.5
3828.9
63.0136
16.3172
45.7000
3390.8
57.1894
0.5453
11.5474
0.1240
32
50
50
500
500
4574
5499.7
92.8812
18.2703
29.9000
4574.8
82.5642
0.6703
16.8290
0.0173
33
100
100
150
150
764.0421
999.6294
89.3524
32.7984
49.5000
767.1260
91.5415
0.4359
23.7201
0.3816
34
100
100
150
200
1010.3
1330.6
56.0125
38.4875
45.4000
1010.5
56.4980
0.4531
24.0978
0.0212
35
100
100
150
300
1483.4
2006.4
61.0033
33.0938
43.8000
1485.2
42.4945
0.5594
26.0603
0.1240
36
100
100
150
500
2518.9
3400.1
73.6681
39.9469
30.4000
2520.9
92.7737
0.7281
25.9167
0.0807
37
100
100
200
150
1107.4
1358.6
102.1064
46.0844
60.4000
1108.5
77.3447
0.4437
18.4364
0.1010
38
100
100
200
200
1362.7
1703.6
161.0181
49.2656
51.6000
1363.7
137.4408
0.4719
20.0013
0.0709
39
100
100
200
300
1774.1
2296.3
52.6927
38.4375
49.2000
1776
44.1224
0.5906
22.7256
0.1049
40
100
100
200
500
2742
3602.8
55.1760
45.6688
33.4000
2744.2
41.0465
0.7656
23.8907
0.0809
41
100
100
300
150
1495.9
1758.3
102.0865
65.8469
84.6000
1497.8
97.7465
0.5406
14.9401
0.1207
42
100
100
300
200
1782.6
2157.1
56.6420
45.8000
70.4000
1783.5
66.7431
0.5938
17.3630
0.0469
43
100
100
300
300
2196.5
2718.8
30.9680
50.4688
58.2000
2197.8
31.8063
0.7000
19.2058
0.0609
44
100
100
300
500
3259.4
4111.9
67.2305
73.8406
47
3261
91.4262
0.8625
20.7402
0.0461
45
100
100
500
150
2525
2768.5
140.0770
61.5875
89.4000
2525.2
130.6626
0.7438
8.7985
0.0105
46
100
100
500
200
2782.7
3146.5
73.4873
53.1187
67.6000
2786.3
105.9573
0.7813
11.5874
0.1255
47
100
100
500
300
3246.4
3765.5
128.5285
80.2375
76
3249.1
120.3366
0.8500
13.7950
0.0848
48
100
100
500
500
4159.1
5026.3
71.2547
90.6281
51.6000
4160.3
61.3897
1
17.2430
0.0282
where ρ1
i and ρ2
i for each i, are random numbers picked
from the interval [0, 2]. This procedure ensures that the
inducible region generated by the upper level and lower
level constraints be non-empty and bounded. Each input
data vector wk, for each probabilistic constraint in LBP2,
is chosen uniformly distributed from [0,1] while sk are
picked from the interval [ 1
2 f
Wk, f
Wk]. Here, f
Wk is computed
as f
Wk = wT
k 1n1 for k = 1 : K. Finally, vectors c1, c2, d1, d2
are randomly chosen from (0, 10] and α = 0.05. Again, this
procedure guarantees boundedness for the feasible region of
the bilevel instances, although it does not guarantee non-
emptiness anymore [10].
Without loss of generality we set the large value L needed
for the resolution of the MIP and LP formulations be equal
to L = 105. The IMM algorithm as well as the MIP and LP
formulations are implemented using Matlab 7.8 and Cplex
12.2. The simulations are run in a 2100 MHz computer with
2 Gb Ram under windows XP.
Table I shows numerical results for MIP1, LGN1 and LP1
while table II shows the same information for MIP2, LGN2
and LP2, respectively. These numerical results correspond to
averages computed over 50 sample runs for each instance,
except for the instances 33 to 48 in tables I and II. For
these instances, we only compute the average over 10 runs
since solving the MIP models become prohibitive for larger
instances. The two tables provide similar information. In
table I, columns 2 to 5 give the instance sizes. Column 6
provides the optimal solution of MIP1. Columns 7 and 8
give the upper bounds and the standard deviation obtained
while using IMM to solve LGN1. Columns 9 and 10 give
the cpu time in seconds and the number of LPs IMM needs
to converge. Similarly, columns 11 to 13 provide the upper
bounds we obtain with the LP1 relaxation, its standard
deviation and the cpu time in seconds. Finally, relative
gaps are given in columns 14 and 15 for LGN1 and LP1,
respectively. The gaps are computed as

Table II
UPPER BOUNDS AND OPTIMAL SOLUTIONS FOR THE STOCHASTIC PROBLEM (SLBPP)
#
Instance Size
MIP2
LGN2
Time LGN2
# LPs
LP2
Time LP2
Gaps
K
m1
m2
n1
n2
Ubs
Std
Ubs
Std
LGN2
LP2
1
25
25
25
100
100
784.3203
989.2347
33.8779
1.3563
21.4000
820.4212
34.9967
0.2172
20.6631
4.3371
2
25
25
100
250
1513.4
2019.9
43.3322
1.7859
14
1564.5
69.4705
0.2281
25.0775
3.2478
3
25
25
250
100
1433.4
1742.2
48.9163
3.5781
35.5000
1583
45.0512
0.2406
17.7093
9.4391
4
25
25
250
250
2082.1
2700.1
57.2095
4.0766
23.4000
2267.3
76.3264
0.3516
22.8960
8.1650
5
50
25
25
100
100
760
979.1
42.86
1.7828
23.6999
795.01
49.1429
0.2
22.3878
4.3532
6
25
25
100
250
1487.31
1990.43
53.6890
1.9218
14
1555.41
51.2573
0.2250
25.2638
4.3767
7
25
25
250
100
1399.5
1707
56.8898
3.6875
29.9000
1553.6
53.2098
0.2656
17.9859
9.8821
8
25
25
250
250
2127.5
2719.5
55.6479
3.9328
20.8000
2288.7
62.2031
0.3094
21.7517
7.0396
9
75
25
25
100
100
760.4551
986.0295
31.6953
2.5156
25.9000
807.3817
36.6528
0.2172
22.8722
5.7832
10
25
25
100
250
1497.7
1998.7
54.0413
2.6828
17.4000
1573.3
62.6726
0.2578
25.0623
4.7602
11
25
25
250
100
1388.2
1743.4
60.6976
4.1031
27.3000
1572.8
59.4721
0.2938
20.3690
11.7179
12
25
25
250
250
2131.8
2761.1
60.2416
4.9328
22.5000
2311.9
73.1240
0.3250
22.7843
7.7919
13
100
25
25
100
100
772.6953
1001.2
84.1361
11.4016
37
826.4422
65.5359
0.2500
22.6190
6.3321
14
25
25
100
250
1472.6
1966.2
71.4463
2.7703
16.1000
1535.6
56.7641
0.2641
25.0811
4.0855
15
25
25
250
100
1377.4
1726.4
41.9370
4.9156
26.5000
1552.3
35.1868
0.3234
20.2008
11.2598
16
25
25
250
250
2102.2
2708.9
76.7820
5.5844
22.1000
2283.2
84.8015
0.3625
22.3871
7.8996
17
25
50
50
100
100
604.5257
781.5844
58.1403
6.0828
33.6000
612.4399
55.7202
0.2172
22.6608
1.2270
18
50
50
100
500
2540.1
3455.1
71.2097
6.6953
14.9000
2585.6
65.6119
0.4031
26.4760
1.7418
19
50
50
500
100
2376.6
2822.8
58.5527
14.5063
45.9000
2645.4
62.4349
0.4484
15.7803
10.1482
20
50
50
500
500
4275.7
5460.6
89.9955
26.5719
33.7000
4594.6
122.9921
0.6375
21.6995
6.9387
21
50
50
50
100
100
626.8187
814.5498
67.9897
6.5563
31.9000
638.3389
69.7229
0.2250
23.1182
1.6959
22
50
50
100
500
2583.6
3489.2
73.0974
7.5297
15.6000
2631.8
88.4050
0.4188
25.9651
1.8243
23
50
50
500
100
2272.6
2747.3
68.7120
20.6469
54.5000
2581.8
66.2905
0.5047
17.2523
11.9420
24
50
50
500
500
4229.5
5455.9
68.9315
28.6516
34.5000
4577
80.0359
0.6859
22.4812
7.5911
25
75
50
50
100
100
622.8990
794.1815
78.9943
3.9438
12.6000
637.6912
70.7837
0.2422
21.3467
2.1283
26
50
50
100
500
2573.2
3484.7
90.6039
8.0594
15.8000
2632
121.2170
0.4266
26.1898
2.2405
27
50
50
500
100
2289
2757.2
54.4159
27.1641
57.5000
2588.4
70.9270
0.5641
16.9958
11.5822
28
50
50
500
500
4284.8
5507.7
143.5341
28.1391
31.8000
4641.4
126.0542
0.7375
22.1955
7.6747
29
100
50
50
100
100
663.1588
865.8819
88.8559
8.8281
30.7000
684.2872
77.8045
0.2531
23.3672
2.9595
30
50
50
100
500
2532.7
3456.1
59.4832
9.0188
16.4000
2592.8
71.4109
0.4422
26.7103
2.2995
31
50
50
500
100
2305.5
2821.9
74.0348
25.1313
49.4000
2649.8
66.3914
0.6234
18.2569
12.9559
32
50
50
500
500
4182
5405.5
109.3389
30.8578
32
4537.1
131.9653
0.8078
22.6406
7.8144
33
25
100
100
200
200
1246.5
1583
62.0970
54.3094
50.6000
1252.3
47.2326
0.4969
21.2346
0.4482
34
100
100
200
500
2634.2
3560.8
56.6990
54.5812
35
2688.9
35.4166
0.7688
26.0167
2.0287
35
100
100
500
200
2709
3153.9
130.3294
84.5500
77
2838.2
139.4445
0.8281
14.1019
4.4996
36
100
100
500
500
4074.9
5194.1
140.2969
118.9000
57.2000
4306
124.6958
1.0531
21.5359
5.3538
37
50
100
100
200
200
1260.4
1579.9
77.4642
52.2313
44.4000
1270.7
67.9033
0.5281
20.1980
0.7712
38
100
100
200
500
2697.9
3641.6
125.9619
42.6219
28.4000
2756
153.8828
0.7813
25.9101
2.0966
39
100
100
500
200
2562.8
3044.8
73.0194
148.5656
101.4000
2696
102.6904
0.8500
15.8426
4.9312
40
100
100
500
500
3978.4
5096.3
105.5789
125.0719
62.4000
4209.8
82.0509
1.1375
21.9291
5.4933
41
75
100
100
200
200
1255.6
1612.9
42.5691
85.2406
63.8000
1275.4
67.2191
0.5375
22.1537
1.5483
42
100
100
200
500
2711.9
3683.5
29.0749
51.3500
32.6000
2775.8
99.9843
0.8000
26.3931
2.3101
43
100
100
500
200
2586.1
3039.6
131.0485
108.6281
72.8000
2769.2
95.2660
0.9031
14.8680
6.6020
44
100
100
500
500
3983.2
5108.9
96.7893
113.1469
55.2000
4223.8
111.6474
1.1406
22.0329
5.6904
45
100
100
100
200
200
1318.8
1649.6
70.3429
90.2156
60.4000
1340.7
63.9094
0.5594
20.0475
1.6257
46
100
100
200
500
2681.1
3622.4
76.0711
57.9453
35.2500
2733.7
108.2080
0.8164
26.0016
1.8915
47
100
100
500
200
2549.2
3121.6
128.1110
154.1375
93.2000
2778
119.7769
0.9344
18.2931
8.1927
48
100
100
500
500
3992.3
5062.4
116.0704
122.7125
56.2000
4200.6
149.1135
1.1844
21.1434
4.9305
the size of the instances and that they are very tight when
compared to the optimal solution of the problem. On the
other hand, the cpu times show that the LP relaxations are
faster than IMM algorithm. For the latter, we observe a
rapid growth which is directly related to the size of the
instances. Concerning the average number of LPs IMM
needs to converge, we notice a slightly increasing trend.
Then, the growth in cpu time can be explained by the size of
the LPs it solves within each iteration. Finally, we can see
that the standard deviations show a constant behavior when
compared to the average upper bounds in both cases, for
the IMM and for the LP relaxation. The numerical results
in table II, are a little bit different. Here, we observe that
the relative gaps are not as tight as in table I for the LP
relaxations, but still better than those obtained with IMM
algorithm. Although, they become tighter as the size of the
instances increase which is an interesting result. We can also
see that the effect of increasing the number of scenarios
in the probabilistic constraints does not have a signiﬁcant
impact on the numerical results. It is easy to note that
these gaps are tighter when n1 < n2. Concerning the cpu
times, we observe an increasing trend for the Lagrangian
approach while for the LP relaxation they almost remain
unchanged. The average number of LPs solved by IMM
shows a slight increasing trend. Finally, we observe that the
standard deviation behaviors are similar.
VII. CONCLUSION AND FUTURE WORK
In this paper, we computed upper bounds and optimal
solutions for a deterministic linear bilevel programming
problem and a probabilistic constrained linear bilevel coun-
terpart due to [7]. The upper bounds were computed using
the iterative minmax algorithm proposed in [10] and also
using linear programming relaxations we derived according
to the approach proposed in [1].
To this end, we transformed all the linear bilevel models
into the so called Global Linear Complementarity problems
from which we derived equivalent MIP and LP formulations.
Our numerical results showed tight relative gaps for the
upper bounds obtained with the LP relaxations. On the
opposite, those obtained with IMM algorithm were consid-
erably larger in all the instances we tested. In particular,
339
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

we obtained better gaps on deterministic instances rather
than for the stochastic ones, which means that probabilistic
constraints decrease the effectiveness of the LP relaxations.
Finally, we argue that even when the LP relaxations give
tighter bounds on these speciﬁc problems, IMM algorithm
still provides a more general framework as it can be used to
handle any type of non-linear constraints. Therefore, future
research should also be devoted to strengthen IMM while
testing it on different types of problems.
ACKNOWLEDGMENT
The ﬁrst author is grateful for the ﬁnancial support given
by Conicyt Chilean government through the Insertion project
number: 79100020.
REFERENCES
[1] Audet C., P. Hansen, B. Jaumard, and G. Savard, Links Be-
tween Linear Bilevel and Mixed 0–1 Programming Problems,
Journal of Optimization Theory and Applications, Vol. 93,
pp. 273-300, 1997.
[2] Audestad J., A. Gaivoronski, and A. Werner, Extending
the stochastic programming framework for the modeling of
several decision makers: Pricing and competition in the
telecommunication sector, Annals of Operations Research,
Vol. 142, pp. 19-39, 2006.
[3] Birge J. and F. Louveaux, Introduction to stochastic program-
ming, Springer-Verlag, New York, 1997.
[4] Christiansen S., M. Patriksson, and L. Wynter, Stochastic
bilevel programming in structural optimization, Structural
and Multidisciplinary Optimization, Vol. 21, pp. 361-371,
2001.
[5] Dimitris B. and Vineet Goyal, On the Power of Robust
Solutions in Two-Stage Stochastic and Adaptive Optimization
Problems, Mathematics of Operations Research, Vol. 35, pp.
284-305, 2010.
[6] Floudas C. and P. Pardalos (Eds.), Encyclopedia of Op-
timization, Kluwer Academic Publishers, Dordrecht, The
Netherlands, 2001.
[7] Gaivoronski A., A. Lisser, and R. Lopez, Knapsack problem
with probability constraints, Journal of Global Optimization,
Vol. 49, pp. 397-413, 2011.
[8] Hansen P., B. Jaumard, and G. Savard, New Branch and
Bound Rules for Linear Bilevel Programming, SIAM Journal
on Scientiﬁc and Statistical Computing, Vol. 13, pp. 1194-
1217, 1992.
[9] Klein W. and M. van der Vlerk, Stochastic integer program-
ming: general models and algorithms, Annals of Operations
Research, Vol. 85, pp. 39-57, 1999.
[10] Kosuch S., P. Lebodic, J. Leung, and A. Lisser, On Stochastic
Bilevel Programming Problem, Networks, Vol. 59, pp. 107-
116, 2012.
[11] Luh P., T. Chang, and T. Ning, Pricing problems with
a continum of customers as stochastic Stackelberg games,
Journal of Optimization Theory and Applications, Vol. 55,
pp. 119-131, 1987.
[12] ¨Ozaltin O., O. Prokopyev, and A. Schaefer, The Bilevel Knap-
sack Problem with Stochastic Right-Hand Sides, Operations
Research Letters, Vol. 38, pp. 328-333, 2010.
[13] Patriksson M. and L. Wynter, Stochastic mathematical pro-
grams with equilibrium constraints, Operations Research
Letters, Vol. 25, pp. 159-167, 1999.
[14] Sahinidis N., Optimization under uncertainty: State-of-the-
art and opportunities, Computers and Chemical Engineering,
Vol. 28, pp. 971-983, 2004.
[15] Schultz R., S. Leen and M. Van Der Vlerk, Two-stage
stochastic integer programming: a survey, Statistica Neer-
landica, Vol. 50, pp. 404-416, 1996.
[16] Shapiro A., D. Dentcheva, and A. Ruszczy´nski, Lectures
on Stochastic Programming: Modeling and Theory, Volume
436. SIAM Philadelphia, Series on Optimization, Vol. 9 of
MPS/SIAM, Philadelphia, 2009.
[17] Werner A., Bilevel stochastic programming problems, anal-
ysis and application to telecommunications, PhD. thesis,
Department of Industrial Economics and Technology Man-
agement, Norwegian University of Science and Technology,
2004.
340
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-202-8
ICCGI 2012 : The Seventh International Multi-Conference on Computing in the Global Information Technology

