Message Scheduling and Forwarding in Congested
DTNs
Ahmed Elwhishi∗, Pin-Han Ho∗, and Basem Shihada†
∗Dept of Electrical and Computer Engineering, University of Waterloo, Waterloo, ON, Canada
Email: { aelwhish, p4ho}@uwaterloo.ca
†MCSE Division, KAUST, Thuwal, Saudi Arabia
Email: basem.shihada@kaust.edu.sa
Abstract—Multi-copy utility-based routing has been considered
as one of the most applicable approaches to effective message de-
livery in Delay Tolerant Networks (DTNs). By allowing multiple
message replicas launched, the ratio of message delivery or delay
can be signiﬁcantly reduced compared with other counterparts.
Such an advantage, nonetheless, is at the expense of taking more
buffer space at each node and higher complexity in message
forwarding decisions. This paper investigates an efﬁcient message
scheduling and dropping policy via analytical modeling approach,
aiming to achieve optimal performance in terms of message
delivery delay. Extensive simulation results, based on a synthetic
mobility model and real mobility traces, show that the proposed
scheduling framework can achieve superb performance against
its counterparts in terms of delivery delay.
Index Terms—Routing, Scheduling, Buffer management, DTN.
I. INTRODUCTION
DTNs are characterized as sparsely connected, highly par-
titioned, and intermittently connected networks. In these chal-
lenging environments the end-to-end path between a given
pair (source and destination) may never exist [1]. To cope
with frequent, long-lived disconnections and variations in link
condition over time, a node in a DTN buffers a message
and waits until it ﬁnds an available link to the next hop,
which in turn buffers and forwards the received message if
the node is not the end destination. This process continues
until the message reaches its destination. It is usually referred
as encounter-based, store-carry-forward, or mobility-assisted
routing, because it exploits the node mobility as a signiﬁcant
factor for the forwarding decision of each message. This
model of routing constitutes a signiﬁcant difference from
conventional ad hoc routing strategies which assume there
exists an end-to-end path between any source and destination
at any time.
To improve the robustness, reduce the delivery delay, and
increase the delivery ratio, extensive research efforts have been
reported in design of efﬁcient multi-copy routing algorithms
[2], [4], [5], [6]. Although with excellent performance com-
pared with single-copy routing schemes, multi-copy routing
algorithms introduce additional power consumption and hard-
ware requirement by being subject to higher computation com-
plexity, and requiring more transmissions and buffer space. It
is envisioned that the future DTNs are composed of miniature
and hand-held devices (e.g., smart phones and PDAs), and
could be subject to extensive congestion due to dense nodal
distribution and large trafﬁc volumes. Thus far, a few studies
have considered buffer space limitation and contention of
wireless links in the algorithm design [4], [10], [17], [20].
However, none of the previously reported studies provided a
complete study on an efﬁcient message scheduling and buffer
management algorithm under heterogeneous DTNs.
Motivated by its importance, the paper investigates DTN
routing by introducing a novel message scheduling and buffer
management approach. Our goal is to come up with a solid
framework which can be incorporated with many encounter-
based routing schemes employing contact or inter-contact time
as main factor on message forwarding decision making pro-
cess. In particular, the proposed approach enables an effective
buffer management policy which determines which messages
should be forwarded or dropped when the buffer is full. Such
a decision is made by evaluating the impact of dropping each
buffered message according to collected network information.
Based on the proposed buffer management policy, we analyze
the message delay on a generic message forwarding scheme
reported in [17], called Self Adaptive Utilty-based Routing
Protocol (SAURP). The contributions of the paper are as
following:
• Developing new utility-based message scheduling mecha-
nism that incorporates with SAURP message forwarding.
This new mechanism provides per-message utility values,
which are calculated based on a simple theory that based
on inter-contact time, and the estimation of two param-
eters: the number of message copies, and the number of
nodes who have "seen" this message (the nodes that have
either carried the message or rejected the acceptance of
this message). The per-message utility values at each node
are then used for the decision on whether the buffered
messages should be dropped in any contact.
• Gaining understanding on the efﬁciency and effectiveness
of the proposed approach by comparing it with counter-
parts using extensive simulations.
The rest of this paper is organized as follows. Section II
describes the related work in terms of utility-based DTN
routing, and buffer management and scheduling. Section III
26
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

provides the background of the study which includes the
SAURP mechanism and the system model. Section IV in-
troduces the proposed message scheduling approach. Section
V provides experimental results which verify the proposed
approach. Section VI concludes the paper.
II. RELATED WORK
Numerous studies have been reported to address the DTN
routing issues [3], [4], [5], [6], [11], [12], [17], [18]. Yet, the
impact of buffer management and scheduling policies on the
performance of DTNs has only been investigated in a few stud-
ies. Zhang et al. [8] addressed this issue in the case of epidemic
routing by evaluating a number of simple drop policies such as
drop-front and drop-tail, and analyzed the situation where the
nodal buffer has a capacity limit. The paper concluded that
the drop-front policy outperforms the drop-tail. Lindgren et
al. [9] evaluated a set of heuristic buffer management policies
based on locally available nodal parameters and applied them
to a number of DTN routing protocols. G. Fathima et al. [21]
proposed a buffer management scheme based on dividing the
main buffer into a number of queues, each being maintained
for a class of service and scheduled accordingly. When a
particular queue is full, the message is placed in the subsequent
queue. When the entire buffer is full, some of the messages
with least class of service should be dropped to yield room for
new messages. However, it is not clear how the messages are
classiﬁed. Dimitriou et al. [23] proposed a buffer management
policy based on using two types of queues. A low-delay trafﬁc
(LDT) queue and a high-delay trafﬁc (HDT) queue. Noticeably
all the aforementioned policies are only based on very limited
knowledge that is locally available to each node.
Dohyung et al. [20] presented a drop policy which discards
a message with the largest expected number of copies ﬁrst, to
minimize the impact of message drop, while leaving the issue
of scheduling untouched. Erramilli et al. [22] introduced a set
of policies in conjunction with their forwarding algorithm. One
policy is based on forwarding the message that has the highest
delegation number and the other favours the smaller delegation
numbers, which serve as heuristics without any optimization
effort in the DTN context. Moreover, the aforementioned
studies did not address issues of scheduling.
Message scheduling under heterogeneous nodal mobility
was ﬁrstly addressed by Balasubramanian et al. [14], in which
a resource allocation problem was formulated. The statistics
of available bandwidth and the number of message replicas
in the network are considered in the derivation of the routing
metric to decide which message to replicate ﬁrst among all the
buffered messages in the custodian node. The derivation of the
routing metric, nonetheless, is not related to buffer status. In
the same research line, Krifa et al. [10] proposed a forwarding
and dropping policies for a limited buffer capacity. The deci-
sion under these policies is made based on the value of per-
message marginal utility. The parameters of the utility function
are estimated under the assumption of homogeneous nodal
mobility, thus the scheme could be subject to considerable
performance impairment under heterogeneous nodal mobility
Algorithm 1 The forwarding strategy of SAURP
On contact between node A and B
Exchange summary vectors
for every message M at buffer of custodian node A do
if destination node D in transmission range of B then
A forwards message copy to B
end if
if △T (i)
(A,D)> △T (i)
(B,D) do
if message tokens >1 then
apply weighted copy rule
end if
else if △T (i)
(A,D) > △T (i)
(B,D) + △Tth then
A forwards message to B
end if
end if
end for
which is considered a more practical scenario. It is clear that
the aforementioned studies leave a large room to improve,
where a solution for DTN buffer management and message
scheduling that can well estimate and manipulate the network
status is absent.
III. BACKGROUND AND SYSTEM MODEL
This section presents the background of protocol under
consideration as well as the network model for utility-based
routing.
A. Self Adaptive Utility-based Routing Protocol (SAURP)
SAURP [17] is designed to solve the DTN routing problem
in terms of how to select a next hop for each carried massage.
Speciﬁcally, it initiates cooperation among a group of nodes in
making message forwarding decision for the stored messages
based on a utility function at each contact with another node.
Algorithm 1 shows detailed SAURP mechanism, where the
utility function value (△T) simply represents the inter-contact
time duration between a node and the destination of message i,
while the routing decision for the message is made according
to whether message i is in the spraying phase (i.e., the number
of message i copy tokens > 1), or in the forwarding phase (i.e.,
the remaining number of message i copy tokens = 1). If the
message is in spraying phase, a rule called weighted copy rule
is applied for message forwarding decision. For more details
about SAURP, the reader referred to [17].
Although SAURP can effectively select the next hop to
forward a message, it lacks the ability to intelligently tell
which message should be dropped when the buffer is full.
This particularly becomes a problem in case of high trafﬁc
load and stringent buffer limitation, where a node has to drop
some buffered messages that are less unlikely to be delivered
to the destination while accommodating those with more
likelihood to be successfully delivered, in order to achieve
better performance. Thus, an efﬁcient message scheduling and
dropping policy should be in place as a countermeasure of the
aforementioned situation. The main challenge lies on how to
27
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

Table I
NOTATION
Variables
Description
Srj(t)
The source of message j
Dstj(t)
The destination of message j
Tj
Elapsed time since the creation of the message
Rj
Remaining lifetime of the message
(Rj = Txj − Tj)
nj(t)
Number of copies of message j
mj(t)
Number of nodes who have "seen" message j
Tx
Message time-to-live
accurately predict the network state in a distributed manner
according to the collected historical data under heterogeneous
nodal mobility. The paper answers the question by investi-
gating a novel message scheduling and dropping policy that
incorporates with SAURP.
B. Network Model
For any given node A, let a number of JA(t) messages be
stored in its buffer at time t. Each message j, j ∈ [1, JA(t)]
is denoted by a tuple of variables denoted in Table 1.
The encounter (or mixing) rate between A and B, denoted
as βAB, is the inverse of the expected inter-encounter time
for the two nodes: βAB =
1
△TAB . We assume that △TAB, A,
B ∈ [1, N] follows an exponential distribution (or referred
to as with an exponential tail [13]). It has been shown that a
number of popular mobility models have such exponential tails
(e.g., Random Walk, Random Waypoint, Random Direction,
Community-based Mobility [7], [15]). Recent studies based on
traces collected from real-life mobility examples [16] argued
that the inter-encounter period and the encounter durations in
these traces demonstrate exponential tails after a speciﬁc cutoff
point. The historical information becomes more accurate and
the adaptation of the mobility characteristics becomes precise
with a greater elapsed of time.
IV. PROPOSED MESSAGE SCHEDULING SCHEME
A. Network State Estimation
During each contact, the network information summarized
as a “summary vector”, is exchanged between the two nodes
through an in-band control channel, which includes the fol-
lowing data: (1) statistics of inter-encounter time of every
node pair maintained by the nodes, (2) statistics regarding the
buffered messages, including their IDs, remaining time to live
(Ri), destinations, the stored ni(Ti), and mi(Ti) values for
each message that were estimated in the previous contact. We
call the strategy of updating ni(Ti), and mi(Ti) values as
Encounter History-Based Prediction (EHP).
Since it is not practical to estimate global knowledge about
the network due to the heterogeneous nature of the nodal
mobility, when ever two nodes encounter each other they
update each other with respect to the messages they do not
have in common, and the values of mj(Tj), and nj(Tj),
{β1,dj, β2,dj...βn,dj}, and {β1,dj, β2,dj...βm,dj} are updated
accordingly, where βn,dj and βm,dj represents the encounter
rate between the nth custodian of the nth copy of message j
with the destination of message j, and the encounter rate of
mth node who has seen the message with the destination of
message j, respectively. These parameters are further taken as
inputs to calculate the proposed per-message utility function.
B. Utility Calculation
Based on the problem settings and estimated parameters,
the following question should be answered at each node
during every nodal contact: Given nj(Tj), mj(Tj), Tj, and
limited buffer space for supporting SAURP routing, what is
an appropriate decision on whether the node should drop any
message in its buffer or reject any incoming message from the
other node during the contact, such that the average delivery
delay can be optimized?
To ansewr this quetion, let us assume that nodes A and B
are in contact, and message j in A’s buffer is to be forwarded
to node B according to SAURP forwarding policy, while the
buffer is full at node B and there is a message i with elapsed
time Ti in a network that has K messages at the moment at
which the decision should be made by node B with respect
to dropping a message from all messages in its buffer.
To minimize the delivery delay of all messages, the decision
of dropping message i should result in least increase of
delivery delay of message i, while forwarding message j from
node A to B should result in most decrease in the delivery
delay of message j (i.e, node B should discard a message
such that the expected delivery delay of all messages can be
reduced the most). Since the delivery delay of the messages is
mainly affected by the nodal inter-encounter time, we assume
that all message have inﬁnite or large enough Tx and derive
the utility function such that it is affected by number nj(Tj),
mj(Tj), {β1,dj, β2,dj...βn,dj}, and {β1,dj, β2,dj...βm,dj}.
To achieve the minimum average delivery delay, node B
should drop the message that satisﬁes the following:
Umini = argmini


exp(−
X
k∈mi(Ti)
βk,diTi)
 
1
P
l∈ni(Ti) βl,di
−
1
P
l∈ni(Ti)\B βl,di
!
(1)
Derivation of (1): Let random variable Td represents the
delivery delay of message j. Then the expected delay in
delivering a message that still has copies existing in the
network can be expressed
Dj = P{message j not deliverd yet} ∗ E[Td | Td > Tj]
Di = exp(−
X
k∈mj(Tj)
βk,dj Tj) ∗ E[Td | Td > Tj]
(2)
where
Pr{message j not delivered yet} =
nj(Tj)
Y
l=1
exp − (βl,dj Rj) = exp(−(
nj(Tj)
X
l=1
βl,dj Tj))
(3)
,
E[Td | Td > Tj] =
"
Tj +
1
P
l∈nj(Tj) βl,dj
#
(4)
28
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

When a node buffer is full, the node should make a drop
decision that leads to the least increase in Dj. To ﬁnd the local
optimal decision, Dj is differentiated with respect to nj(Tj),
and ∂Dj is then discretized and replaced by △Dj:
△Dj =
∂Dj
∂nj(Tj) ∗ △nj(Tj), which is equivalent to
△Dj = exp(−P
k∈mj(Tj) βk,dj Tj)∗
"
1
P
l∈nj(Tj) βl,dj
−
1
P
l∈nj(Tj)\B βl,dj
#
△nj(Tj)
To reduce the delivery delay of all messages existing in
the network, the best decision is to discard the message that
maximizes the total delivery delay, D = PK(t)
j=1 Dj, among all
K(t) messages existing in the network. Therefore, the optimal
buffer-dropping policy at node B that leads to minimization
of the delivery delay is thus to discard the message that has
the min value of | △Dj | (or−△Dj), which is equivalently to
choose a message with a value for Umini that satisﬁes (1),
which represents the marginal increase in the delivery delay of
message i if its copy at node B is dropped. While the optimal
buffer-forwarding policy at node A that leads to minimization
of the delivery delay is thus to forward a copy of message j
(or message j itself) to node B that leads to the max decrease
of △Dj, which is equivalently to choose a message with a
value for Umaxj.
The decision of forwarding message j from node A to node
B should satisfy one of two cases; based on whether message
j is in spraying phase, or in forwarding phase. If message j
is still in spraying phase, the decision of forwarding message
j should satisfy the following:
Umaxj = argmaxj


exp(−
X
k∈mj(Tj)
βk,dj Tj)
 
1
P
l∈nj(Tj) βl,dj
−
1
P
l∈nj(Tj)∪B βl,dj
!#
(5)
which represents the margin decrease in the delivery delay
of message j if node A forward a copy to node B.
If message j is in forwarding phase, the decision of for-
warding should satisfy the following:
Umaxj = argmaxj

exp(−
X
k∈mj(Tj)
βk,dj Tj)
 
1
P
l∈nj(Tj) βl,dj
−
1
P
l∈(nj(Tj)\A)∪B βl,dj
!#
(6)
The relation represents the marginal decrease in the delivery
delay if node A hands over message j to node B.
Derivation of (5) and (6): The derivation follows same
steps of deriving (1) with considering the marginal decrease
of delivery delay of message j at node A if it get copied or
forwarded to node B.
Algorithm 2 SAURP_based forwarding and dropping policy
On contact between node A and B
Exchange summary vectors
01: If (buffer at node B is full)
02:
for every message j at the buffer of custodian
02:
node A do
03:
if ( B is not source node of i) then
04:
if (remaining tokens of message
04:
j ≥ remaining tokens of i) &&
04:
(△TB,di ≻ min{△T1,di, △T2,di..
04:
.., △Tn−1,di})then
05:
if destination node dj in
05:
transmission range of B then
06:
B drops message i
07:
A forwards a copy of message j to B
08:
end if
09:
else if (Umaxj − Umini > 0 ) then
10:
B drops message i
11:
A forwards message j to B
12:
end else if
13:
end if
14:
end if
15:
end for
16:end if
17:else ( apply SAURP)
18:end
C. SAURP_based
Forwarding
and
Dropping
Policy
(SAURP_FDP)
With the per-message utility, the node ﬁrstly sorts the buffer
messages accordingly from the highest to the lowest. The
messages with lower utility values have higher priorities to
be dropped when the node’s buffer is full, while the messages
with higher utility values have higher priorities to be forwarded
to the encountered node. Algorithm 2 illustrates the forwarding
and dropping actions which are largely based on the fact that if
the utility Umaxj of message j (the message with the highest
utility value) buffered in A is higher than Umini of message
i (the message with the lowest utility value) at node B, then
message i is dropped and replaced by message j or copy
of it, if the buffer of B is full during the contact between
the two nodes. To enhance the performance of the algorithm,
the lowest priority of dropping is given to a message that
has higher number of remaining message tokens or the inter-
contact time between its current custodian and the message
destination is the best one found so far.
V. SIMULATION STUDY
Simulation is conducted to examine the efﬁciency of the
proposed scheme, namely SAURP_based Forwarding and
Dropping Policy (SFDP). SFDP under EHP is denoted as
SFDP_E.
29
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

A. Experimental Setup
To better understand the performance of the proposed strate-
gies and their gain over SAURP without buffer management,
we also implemented another estimation strategy for the val-
ues of mi(Ti), and ni(Ti), namely Global Knowledge-based
Management (GKM). GKM assumes knowing the exact values
of mi(Ti), and ni(Ti), and is supposed to achieve the best
performance. Since such an assumption is not practical [11],
the result of GKM is taken as a benchmark for the proposed
scheme. We call SFDP under GKM strategy as SFDP_G.
In addition to the above prediction strategy, we compared
the proposed buffer management schemes with three well-
known scheduling schemes listed as follows:
• Drop oldest (DO) drops the message with shortest re-
maining Tx when the buffer is full. This policy obtains
the best performance of all the policies used by Lindgren
et al. in [9]. We call DO under SFDP as SFDP_DO.
• Delegation forwarding scheme employs a dropping policy
based on drop message with highest number of forwards
(DF_N) by Erramilli et al. in [22].
• RAPID scheme employs a dropping policy based on drop
message that is most likely to miss the deadline [14].
We assume a message issued at a node (termed sourced
messages) has the highest priority at the node. If all buffered
messages and newly arrived message are from itself, the oldest
is dropped.
A DTN simulator similar to that in [19] is implemented. The
simulations are based on two mobility scenarios: a synthetic
one on community based mobility model (CBMM) [24], and
a real-world encounter traces with 98 nodes collected as
part of the Infocom 2006 experiment, described in [25]. The
simulation parameters are as shown in Table II. Each node has
a transmission range of D = 30 meters to achieve a sparsely
populated network, the size of all messages is same, and each
message transmission takes one time unit. Euclidean distance
is used to measure the proximity between two nodes and their
positions. A slotted collision avoidance MAC protocol with
Clear-to-Send (CTS) and Request-to-Send (RTS) features is
implemented in order to arbitrate the contention on a shared
channel between nodes. The message inter-arrival time at a
node is uniformly distributed in such a way that the trafﬁc can
be varied from low (10 messages generated per node) to high
(70 messages generated per node). The buffer size is set to 10
messages, which is quite low compared with the considered
trafﬁc arrival rates such that the network could easily go into
a congestion state. Message delivery ratio and the delivery
delay are taken as two performance measures. Each data is
the average of the results from 30 runs.
B. Simulation Results
This section examines the proposed policy for minimizing
the average delivery delay under the considered scenarios.
The plots of the delivery delay obtained under CBMM and
Infocom2006 traces is shown in Figure 1 and Figure 2.
As expected, the SFDP_G gives the best performance under
all trafﬁc loads for both scenarios under consideration, while
Table II
SIMULATION PARAMETERS
Mobility pattern
CBMM
Infocom06
Simulation duration
(seconds)
30000
270000
Simulation area
700 × 700
−
No. of Nodes
110
98
Average speed (m/s)
-
-
Tx(seconds)
9000
90000







	





	
	
	
	

	
			











Figure 1.
The effect of trafﬁc load (CBMM scenario).
the SFDP_E is the second best and is competitive with the
SFDP_G in the case of low trafﬁc. As the trafﬁc increases,
the demand on the wireless channel and buffers increases,
causing long queuing delays and substantial message loss that
negatively affect the performance of all the examined policies.
Figure 1 shows the results under CBMM scenario. We have
observed that the SFDP_E outperforms the SAURP, RAPID,
DF_N, and SFDP_DO. SFDP_E is better than SAURP by
21%, RAPID by 35%, DF_N by 44%, SFDP_DO by 16%,
and a longer delay of only 23% of that achieved by SFDP_G.
Under the real trace scenario as shown in Figure 2, SFDP_E
achieved delivery delay better than SAURP by 27%, RAPID
by 43%, DF_N, by 56%, SFDP_DO by 20%, and a longer
delay of 14% of that achieved by SFDP_G.
VI. CONCLUSION AND FUTURE WORK
This paper has investigated a novel buffer management
policy for a utility-based forwarding routing in heterogeneous
delay tolerant networks (DTNs), aiming to optimize the mes-
sage delivery delay. The proposed framework incorporates a















	
	
	


	
	
	





 
Figure 2.
The effect of trafﬁc load (real trace scenario).
30
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

suit of novel mechanisms for network state estimation and
utility derivation, such that a node can obtain the priority for
dropping each message in case of buffer full. Using simula-
tions based on two mobility models; a synthetic (Community
based Mobility Model) and a real trace (Infocom2006), the
simulation results show that the proposed buffer management
policy can signiﬁcantly improve the routing performance in
terms of the performance metrics of interest under limited
network information.
Note that in this work, our objective was optimizing the
message delivery delay. It would be interesting to introduce a
utility function to optimize the delivery ratio of all messages.
Also, in this study we considered relatively small network size,
and all messages have the same size and same Tx value. It is
important to study the performance of our proposed scheme
under various network set up, and develop buffer management
policies accordingly. For example, in case of larger network
size under high congestion, we expect that the cost of the
update of the parameters could consume larger amount of
available bandwidth, which may affect the network throughput.
Thus, this issue should be taken in consideration.
REFERENCES
[1] “Delay tolerant networking research group,” http://www.dtnrg.org. April
12, 2012.
[2] A. Lindgren, A. Doria and O. Schelén, “Probabilistic Routing in
Intermittently Connected Networks,” SIGMOBILE Mobile Computing
Comm. Rev., vol. 7, no. 3, pp. 19-20, July 2003.
[3] A. Vahdat and D. Becker, “Epidemic Routing for Partially Connected Ad
Hoc Networks,” Technical Report CS-200006, Duke Univ., Apr. 2000.
[4] A. Elwhishi and P. Ho, “SARP - a novel multi-copy routing protocol for
intermittently connected mobile networks,” Proc. IEEE GLOBECOM,
pp. 4482-4488, Dec. 2009.
[5] V. Erramilli, M. Crovella, A. Chaintreau , C. Diot, “ Delegation
forwarding,” Proc. ACM MobiHoc, pp. 251-260, 2008.
[6] A. Elwhishi, P. Ho, K. Naik, B. Shihada, "Self Adaptive Contention
Aware Routing Protocol for Intermittently Connected Mobile Networks,"
IEEE Trans. Parallel and Distributed Systems, vol.PP, no.99, pp.1, 0,
Januay 2012.
[7] R. Groenevelt, P. Nain, and G. Koole, “ The message delay in mobile
ad hoc networks,” Perform. Eval. Vol.62, no.1-4, pp. 210-228, October
2005.
[8] X. Zhang, G. Neglia, J. Kurose, and D. Towsley, “Performance modeling
of epidemic routing,” Comput. Netw. 51(10), pp. 2867-2891, July 2007.
[9] A. Lindgren and K. Phanse, “Evaluation of Queueing Policies and For-
warding Strategies for Routing in Intermittently Connected Networks,”
Proc. COMSWARE, pp. 1-10, 2006.
[10] A. Krifa, C. Barakat, and T. Spyropoulos, “Optimal buffer management
policies for delay tolerant networks,” Proc. IEEE SECON, pp. 260 - 268,
June 2008.
[11] S. C Nelson, M. Bakht, R. Kravets, and Al. F. Harris, “Encounter: based
routing in DTNs,” Proc. IEEE INFOCOM, pp. 846 - 854, April 2009.
[12] T. Spyropoulos, T. Turletti, and K. Obraczka, “Routing in delay-tolerant
networks comprising heterogeneous node populations,” IEEE Trans.
Mobile Computing, vol. 8, no. 8, pp. 1132–1147, August 2009.
[13] D. Aldous and J. Fill, “Reversible markov chains and random
walks on graphs. (monograph in preparation.),” http://statwww. berke-
ley.edu/users/aldous/RWG/book.html. April 12, 2012.
[14] A. Balasubramanian, B. N. Levine, and A. Venkataramani, “Dtn routing
as a resource allocation problem,” Proc. ACM SIGCOMM, pp. 373-384,
2007.
[15] T. Spyropoulos, K. Psounis, and C. S. Raghavendra, “Performance
analysis of mobility-assisted routing,” Proc. ACM MOBIHOC, pp. 49-60
, 2006.
[16] M. V. Thomas Karagiannis, J. Le Boudec, “Power law and exponential
decay of inter contact times between mobile devices,” Proc. ACM/IEEE
MobiCom, pp. 183-194, 2007.
[17] A. Elwhishi, P. Ho, K. Naik, and Basem Shihada, “Contention Aware
Routing for Intermittently Connected Mobile Networks,” The Third
International Conference on Advances in Future Internet (AFIN 2011),
pp. 8-18, August 2011.
[18] A. Seth, D. Kroeker, M. Zaharia, S. Guo, and S. Keshav, “Low-cost
communication for rural internet kiosks using mechanical backhaul,”
Proc. MobiCom, pp. 334-345, 2006.
[19] “DTN java simulator,” http://people.ee.ethz.ch/ spyropot/dtnsim.html.
April 12, 2012.
[20] H. P. Dohyung Kim and I. Yeom, “Minimizing the impact of buffer
overﬂow in dtn,” Proc. International Conference on Future Internet
Technologies (CFI), June 2008.
[21] G. Fathima, and R.S.D. Wahidabanu, “ A new queuing policy for delay
tolerant networks,” Int. J. Computer. Application, vol. 1, no. 20, pp.
56-60, 2010.
[22] V. Erramilli, M. Crovella, “Forwarding in opportunistic Networks with
Resource constraints,” Proc. ACM CHANTS, pp. 41-48, 2008,
[23] S. Dimitriou and V. Tsaoussidis, "Effective buffer and storage manage-
ment in DTN nodes," Proc. ICUMT, Oct. 2009, pp. 1-3.
[24] T. Spyropoulos, K. Psounis, and C.S. Raghavendra, “Efﬁcient Routing in
Intermittently Connected Mobile Networks: The Multiple-Copy Case,”
IEEE Trans. Networking, vol. 16, no. 1, pp. 63-76, Feb. 2008.
[25] A. Chaintreau, P. Hui, J. Crowcroft, C. Diot, R. Gass, and J. Scott,
“Impact of human mobility on opportunistic forwarding algorithms,”
IEEE Trans. Mobile Comput., vol. 6, no. 6, pp. 606–620, Jun. 2007.
31
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-211-0
AFIN 2012 : The Fourth International Conference on Advances in Future Internet

