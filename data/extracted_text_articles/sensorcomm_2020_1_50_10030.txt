Rapid Detection of Toxic Emissions Using DNN Based Sensing 
 
Ibrahim Bhavnagarwala  
Danbury High School  
Danbury CT USA 
e-mail: ibha1056@danbury.k12.ct.us 
Adam Bhavnagarwala 
Danbury High School 
Danbury CT USA 
e-mail: abha1055@danbury.k12.ct.us 
 
 
Abstract— Smoking remains one of the top 3 causes of illness in 
the US; it is one of top 5 causes of fire hazards in a home and is 
the single most preventable cause of illness and premature 
death in the US. The use of Deep Neural Networks (DNN) is 
demonstrated to detect cigarette smoke much sooner and with 
much higher accuracy than conventional smoke/carbon 
monoxide detectors used today. The hardware demonstration 
and prototype engages machine learning to not only 
discriminate cigarettes from other sources of smoke and 
carbon monoxide such as burning coal, wood or food – 
typically not possible with conventional smoke detectors, but 
also to accurately detect cigarette smoke produced in a room 
from a single cigarette when concentrations of component 
gases of cigarette smoke are extremely low. Our prototype also 
demonstrates the opportunity to classify and discriminate 
different levels of toxicity and flammability for spaces used by 
different people. 
Keywords- DNN; IoT; Cigarette; Toxic; Detection; Sensors 
I. 
 INTRODUCTION 
Secondhand smoke is a serious health hazard causing 
more than 41,000 deaths per year [1]. Secondhand smoke is 
not risk-free and even short-term exposure can potentially 
increase the risk of heart attacks. Secondhand smoke 
contains chemicals known to be harmful. These include 
formaldehyde, benzene, vinyl chloride, arsenic ammonia and 
hydrogen cyanide [2]. Smoking is not just a health hazard 
but also a significant fire hazard. The National Fire 
Protection Association (NFPA) reports [3] During 2012-
2016, an estimated annual average of 18,100 (5%) or, one in 
20 home (5%) structure fires were started by smoking 
materials. These fires caused almost one in four (23%) home 
fire deaths, and one in 10 (10%) home fire injuries. 
Conventional smoke detectors are mostly responsive to 
carbon monoxide and generally trigger an alarm when the 
concentration of carbon monoxide exceeds a given 
threshold. These detectors are also generally agnostic to the 
source of carbon monoxide and cannot discriminate 
cigarettes from burning coal, wood or food. The urgency to 
detect cigarette smoke – especially for people vulnerable to 
secondhand smoke or other toxic gases is much higher and 
warrants a trigger at a much earlier time. The trigger should 
also not require the concentration of cigarette smoke in the 
air to be as high as conventional detectors since early 
warning can potentially remove the source of cigarette 
smoke in areas especially sensitive to second hand smoke 
such as Hospitals. The detection of cigarette smoke should 
also be consistently accurate even at low concentrations of 
the components of cigarette smoke such as hydrogen 
cyanide, formaldehyde, benzene and carbon monoxide. 
The rest of the paper is structured as follows: Sections II 
& III describe conventional gas detector technology, 
methods and their weakness. Sections IV and V describe our 
prototype hardware used with AI algorithms instead and 
measurements. Section VI discusses the Training accuracy 
and loss of our DNN algorithms. 
II. 
CONVENTIONAL DETECTOR TECHNOLOGY AND USE 
Conventional gas detectors have evolved in their 
technology and how they are used as the need to detect CO 
and fires is emphasized by NFPA regulations.  
A. Technology 
Conventional gas detectors use a metal oxide sensor to 
measure the concentration of specific gases. Typically 
employed to prevent toxic exposure and fire, these cover a 
range of gases in the flammable and toxic range but most 
detectors include CO sensors. The metal oxide sensor 
technologies [4] work by engaging the relationship between 
electrical conductivity and oxygen partial pressure of a metal 
oxide sensor. The resistance of the sensor correlates to the 
concentration of the reducing gas. MQ Sensor modules 
include op-amp comparators and digital output pins to 
provide an indication of the presence of gases. Where a 
quantified measure of the amount of gas (in ppm) is needed, 
the bare sensor is used in conjunction with a microcontroller. 
B. Methods and Limitations 
The sensors used in Google Nest (2nd gen) [5] include the 
Smoke Split-spectrum sensor that detects the presence of 
smoke in the air using two wavelengths of light to look for 
smoke. An infrared light is used to detect larger particles 
generated by slow, smoldering fires, while a blue light 
detects smaller particles created by fast fires. All of 
commercially available sensors rely on the sensor itself to 
identify smoke, fires, flammable or toxic gases. Their 
common weakness is that detection of smoke, fire occurs too 
late when the premises are already on fire or when the 
concentrations of toxic/flammable gases are already 
dangerously high to be able to trigger the sensor. The 
primary cause for home structure fires – unextinguished and 
undetected cigarette butts cannot be detected by conventional 
detectors simply because the concentrations of emissions 

produced by a single cigarette are too low to trigger 
conventional detectors. 
III. 
SENSORS AND METHODS USED 
We used industry standard MQ sensors but our methods 
to detect toxic and flammable gases relied on measurements 
of changes in patterns of component gas concentrations and 
their recognition instead of direct measurements of gas 
concentrations.  
A. Pattern Recognition 
Pattern recognition works well for toxic gases that have 
signature patterns of component gases – as typically found 
in cigarette smoke or vape. Gases found in hospitals 
(Anesthetic’s, aerosolized medications and chemicals used 
as a fixative such as formaldehyde, toulene etc.), Waste 
water treatment plants, Restaurants (CO, CO2, N2, CH4), 
Mechanical/boiler rooms (refrigerants), Pharmaceutical 
Labs (HCN), Oil refineries (BTEX), Cold storage (NH3) 
and Industrial manufacturing. These classifications help 
Hospitals, Workplaces and Schools to monitor toxicity and 
flammability according to the tolerance people have in 
designated areas to cigarette smoke or other toxic gas 
emissions  
B. Detection Thresholds 
Our prototype enables accurate detection of a toxic 
emission at much lower concentrations of component gases 
of the emission by using Classifiers trained to detect 
signature patterns of small changes in these component gas 
concentrations as measured by MQ sensors using neural 
networks.. 
IV. 
MICROCONTROLLER HARDWARE USED 
The easiest way to be able to control and automate the 
measurement tasks and sequence of data acquisition from an 
array of sensors is the use of an inexpensive 8b 
Microcontroller – the primary component of an IoT system. 
 
 
 
 
Figure 1. Microcontrollers with an arrays of Gas sensors are used to build a  
                Classifier (top).  Measurement flowchart (at right) 
 
A. IoT System Hardware 
The IoT type hardware we assembled uses three 8-b 
RISC Microcontrollers (ATmega2560 in the Arduino mega 
Dev Board) that can concurrently support 16 sensor IO to 
collect training data (Figure 1). Conventional sensors used 
consume significant current (150 mA/sensor at 5V) to heat 
sensors before they can function. Since the Dev Board 
sources insufficient current to support all 12 sensors used 
(Table 1) to capture training datasets, three ‘off-the-shelf’ 
Dev Boards were engaged to build this prototype. Air was 
sampled once every 2 seconds by the sensor array to balance 
size of dataset Vs accuracy delivered. A NodeMCU WiFi 
module is used to drive sensed data wirelessly for training 
and/or inference. C-code was developed to read and print the 
values the sensors sampled every second.  
TABLE I: SENSITIVITIES OF AN ARRAY OF GAS SENSORS TO EACH COMPONENT GAS MEASURED BY A SENSOR [7] 

Data from the sensor array was normalized. By scaling data 
between 0 and 1, the classifier can read the data more 
effectively and converge faster [6]  
B. Building a Classifier using a DNN 
The algorithm used to build this classifier was a Deep 
Neural Network (DNN). A Deep Neural Network is a certain 
kind of ML algorithm that is represented as a hierarchical 
(layered) organization of neurons (similar to the neurons in 
the brain) with connections to other neurons [6]. Input data is 
passed through the first layer of the DNN and the hidden 
layers until it reaches the output layer, which is where the 
DNN makes a prediction on how to classify the input data 
[6]. The DNN recognizes patterns in the data and learns how 
to classify accurately through a learning process which is 
updating the weights of the neural network through a 
mechanism called Backpropagation.  
The sensor dataset is a quantitative measure of the 
concentrations of a unique combination of different gases 
corresponding to a given source (See Table 1).  The DNN is 
used to classify the source of the gases emitted using this 
data from multiple sensors. The combination of component 
gases in the corresponding sources measured across several 
sensors are compiled into ‘training data’ and passed through 
the DNN. The DNN then learns how to detect the source 
given the pattern detected by the gas sensor array of the 
component gas combinations. Prior to the classifier learning 
the data, the data was split into two parts: the training set and 
the testing set. The testing set was not used in training and 
was only used to measure the accuracy of the DNN 
classifier. The testing set accuracy tells us how well or badly 
the classifier performed, which gives insight into how to 
fine-tune the hyperparameters of the DNN. 
For the DNN to be able to perform on the data with high 
accuracy the parameters had to be fine-tuned. After multiple 
trials the most optimal parameters for the DNN were having 
4 layers-14 nodes in the first layer, 13 in the second, 5 in the 
third, and 1 in the fourth. Also, a dropout chance of 20% was 
added after every layer before the output. Furthermore, the 
activation function used for every layer except the output 
layer was ReLU (Rectified Linear Unit); the activation 
method for the output layer was a Sigmoid function 
C. Measurement Setup 
We used a large space (garage) that measures 32’ x 20.3’ 
with a 10.5’ ceiling. The area and volume of this space is 650 
sq ft and 7K ft3. We flushed the air in garage with multiple 
exhaust fans, and then closed doors giving sensor array 
enough time to reach a stable unchanging reading as 
representative of environment (Figure 1). Smoke rises 
upwards due to it being at a higher temperature when 
emitted. However, it settles as it cools in the air with sensors 
placed in our test space a few feet off the ground 
demonstrating sufficient sensitivity within 300 seconds of 
lighting the cigarette 
V. 
MEASUREMENTS 
Our measurements had a primary goal of characterizing 
the patterns in component gas concentrations from toxic, 
flammable and similar but non-toxic emissions such as 
burning food or incense while also providing enough 
‘training’ to the neural network to discriminate gas detection 
at different levels of toxicity, flammability and also be able 
to recognize post priori the presence of toxic emissions at a 
previous time.  
A. Speed of Source Detection 
We lighted a cigarette and used a bulb syringe to ‘puff’ 
at the lighted cigarette/vape (neither of us smoke) to emulate 
emissions typically seen from a cigarette/Vape for 9 
minutes. We observed the first response of the sensor to gas 
emissions from any source was proportional to the distance 
the source was from the sensor. We conclude that the 
response time of the sensor is limited by the time it takes for 
component gases of the source to diffuse through the air to 
the sensor. The minimum time it takes for the sensor array 
to correctly identify the emission source is characterized as 
the speed of gas detection. 
 
 
Figure 2. Changes registered in sensor array are different – Cigarette Vs   
Vape patterns can be discriminated by Classifier (MQ5   
 responsive to CO as well. 
Two peaks were observed at very small changes in 
concentrations (from a single cigarette/vape) (Fig 2). The 
first peak registers initial contact at sensors of cigarette/vape 
emissions followed by diffusion away from sensor. The 
second peak registers extinguishing cigarette/vape, diffusion 
time after extinguishing at the Sensor  
B. Residual Gas Component Patterns 
Initial data is captured by the sensors and processed as a 
training set given the sensitivities of each sensor to 
component gases of the toxic emission (Table 1). We then 
extinguished the cigarette/vape, continued measuring sensor 
data for another 10–500 minutes to characterize cigarette 
smoke ‘residue’ post cigarette extinguishing (Figure 3). 
Classifiers using this data can detect cigarette smoke that 
lingers from the previous 24 hours after the cigarette was 

extinguished – useful in hospitals, hotels, schools to classify 
toxicity of spaces to be used by different people. 
C. Cigarettes Vs Burning Food 
Emissions from Burning Food (Figure 4) are relatively 
harmless but trip conventional smoke/CO detectors anyways. 
Measurement data sets from burning food train the neural 
network to learn these patterns from burning food and 
discriminate it from Cigarette/Vape emissions 
 
Figure 3. Cigarette emission residual component gases in room characterized 
for its signature pattern that persists long after cigarette extinguished. 
  
Use of Pattern Recognition thus eliminates ‘False 
Alarms’ from CO detection in the ambient when 
conventional detectors are calibrated to trigger at low CO 
concentrations 
 
Figure 4: Classifier to discriminate Burning Food emissions from 
Cigarette emissions sensed by sensor array 
Figure 5. Speed of Source detection, reproducibility and consistency of 
Cigarette emissions Classifier demonstrated with measurements of 2 
different levels of toxicity using the same source (Cigarettes). 
D. Toxicity Level Classification 
The Sensor array response to 1 cigarette is similar to 
emission from 3 Cigarettes emissions. Classifiers built using 
these measurements can discriminate between different 
levels of. toxicity (Figure 5). 
From the above observations, we demonstrate that 
cigarette smoke gas component density patterns at even 
small concentrations (from a single cigarette) that are 
detected by the sensors, are sufficient for the DNN to 
correctly classify the emission source as a cigarette – 
enabling a DNN based gas detection to be much faster than 
conventional smoke detectors that rely exclusively on CO 
gas concentration as the threshold for detection.  
VI. 
ACCURACY OF CLASSIFIERS 
The algorithm to train a DNN classifier is described in this 
section 
A. Training Loss and Accuracy of Classifier 
To train a DNN classifier the training data has to be split 
into an “X_train” dataset and “Y_train” dataset. The 
“X_train” dataset consists of just the sensor readings as a 
function of time.  The “Y_train” dataset consists only of the 
corresponding source name. While the DNN classifier was 
training on “X_train” and “Y_train” the classifier gave two 
different metrics: the training accuracy and the training loss, 
which were for each epoch. An epoch is one cycle through 
the full training data [9]. Three different classifiers were 
created. The first classifier was built to detect between 1 
cigarette Vs 3 cigarette emissions (Fig 6a, 6b), the second 
was built to discriminate between 1 cigarette Vs 1 vape (Fig 
7a, 7b), and the third was built to discriminate between a 
Cigarette or Vape Vs Burning food emissions (Fig 8a, 8b). 
The training accuracy reached >95% accuracy for all three 
classifiers (Figure 6b, 7b & 8b).  
The training loss, which was calculated using binary 
cross-entropy, reached ~19% [Fig 7a] and ~10%[Fig 8a] 
after ten epochs for the first and second classifiers 
respectively. And for the third classifier, the training loss 
reached around ~8% (Figure 8a) after only 5 epochs. The 
training loss could have decreased to below 5% - however, 
to prevent the classifier from overfitting, the epochs were 
shortened up until the training loss for the third classifier 
reached a minimum of at least 10%. To test how well the 
classifier will perform on data it has never seen, the testing 
set was broken into the X_test and Y_test sets 

 
(a) 
 
(b) 
Figure 6. Training Vs Number of epochs in Classifier for 1 Vs 3 Cigarette 
emissions to discriminate Cigarette emissions at different levels of toxicity 
for (a) Accuracy and (b) Loss 
  The training loss, which was calculated using binary cross-
entropy, reached ~19% [Fig 7a] and ~10%[Fig 8a] after ten 
epochs for the first and second classifiers respectively. And 
for the third classifier, the training loss reached around ~8% 
(Figure 8a) after only 5 epochs. The training loss could 
have decreased to below 5% - however, to prevent the 
classifier from overfitting, the epochs were shortened up 
until the training loss for the third classifier reached a 
minimum of at least 10%. To test how well the classifier 
will perform on data it has never seen, the testing set was 
broken into the X_test and Y_test sets. 
 
(a) 
 
(b) 
Figure 7: Training Vs Number of epochs in Classifier for Cigarette Vs 
Vape emissions to discriminate Cigarette emissions with similarly toxic 
emissions from Vape for (a) Accuracy and (b) Loss 
The X_test only consists of never before seen data (by the 
classifiers) that only contains the sensor readings of the 
gases. The “Y_test” dataset only contains the corresponding 
sources of the “X_test”. 
 
(a) 
 
(b) 
Figure 8: Training Vs Number of epochs in Classifier for Cigarette Vs 
Vape emissions to discriminate Cigarette emissions with similarly toxic 
emissions from Vape for (a) Accuracy and (b) Loss 
The “X_test” was passed through the classifier and 
the resulting predictions are named “Y_predictions”. The 
“Y_predictions” and “Y_test” matched 100% accurately to 
each other. This is plausible given that the training accuracy 
reached >95% as shown in Figure 6b,7b & 8b 
 

VII. CONCLUSIONS AND FUTURE WORK 
We demonstrate, using a simple inexpensive IoT system, 
equipped with an array of gas sensors and WiFi connectivity, 
the ability of a DNN to quickly identify a toxic gas by 
recognizing patterns in the concentrations of its component 
gases. These patterns are recognized at very low component 
gas concentrations enabling a DNN based gas array sensor 
to provide early and accurate detection while toxic emissions 
still have low concentrations. The DNN based detection is 
also limited only by the speed of toxic gas diffusion to the 
sensor arrays enabling the toxic gas detection to take place 
much sooner than conventional smoke/CO/gas sensor-based 
detectors 
We see the need to extend these intelligent sensors to 
function as a distributed network of a few hundred IoT 
devices in a hospital or school for example, driving data 
wirelessly to a common AI hardware platform that could also 
support other AI workloads in the building as the use of AI 
proliferates.  
ACKNOWLEDGMENTS 
We would like to thank Mr. David Honeyford, 
Advisor of our IoT Club at Danbury High School and Mr. 
Jameson Parker, Advisor of our AI Career Club at 
Danbury High School. Both fantastic mentors taught us AP 
Physics. We would also like to thank Professor Hieu 
Nguyen, our ECE Faculty Research Advisor at the New 
Jersey Institute of Technology, Newark NJ for his 
encouragement and support. 
REFERENCES 
[1] U.S. Department of Health and Human Services. The Health 
Consequences of Smoking—50 Years of Progress: A Report 
of the Surgeon General. 2014 
 https://www.cdc.gov/tobacco/data_statistics/sgr/50th-
anniversary/index.htm, access on November 2020 
[2]  U.S. Department of Health and Human Services. The Health 
Consequences of Involuntary Exposure to Tobacco Smoke: A 
Report of the Surgeon General. 2006 
https://www.cdc.gov/tobacco/data_statistics/sgr/2006/index.ht
m, access on November 2020 
[3] https://www.nfpa.org/News-and-Research/Data-research-and-
tools/US-Fire-Problem/Smoking-
Materials#:~:text=One%20in%2020%20home%20(5,year%2
0period%20of%202012%2D2016. Access on November 2020 
[4] A. Dey, “Semiconductor metal oxide gas sensrs: A review”, 
Materials Science & Engineering B, Vol 229 March 2018, pg 
206 – 217. Elsevier 
[5] https://support.google.com/googlenest/answer/9330256?hl=en
, access on November 2020 
[6] https://towardsdatascience.com/why-data-should-be-
normalized-before-training-a-neural-network-c626b7f66c7d, 
access on November 2020 
[7] www.mysensors.org/build/gas, access on November 2020 
[8] J. Moolayil, “A Layman's Guide to Deep Neural Networks.” 
Medium, 
Towards 
Data 
Science, 
30 
May 
2020,  
towardsdatascience.com/a-laymans-guide-to-deep-neural-
networks-ddcea24847fb. Access on November 2020 
[9] deepai.org/machine-learning-glossary-and-terms/epoch 
Access on November 2020 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

