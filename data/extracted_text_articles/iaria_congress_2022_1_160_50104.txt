A Data-Reuse Approach for the RLS-DCD
Algorithm
Ionut¸-Dorinel Fˆıciu, Cristian-Lucian Stanciu, Camelia Elisei-Iliescu, Cristian Anghel, and Constantin Paleologu
Department of Telecommunications, University Politehnica of Bucharest, Romania
Emails: ionut.ficiu22@gmail.com, cristian@comm.pub.ro, camelia.elisei@romatsa.ro, canghel@comm.pub.ro,
pale@comm.pub.ro
Abstract—The mitigation of input signal correlation is one
of the main advantages associated with the Recursive Least-
Squares (RLS) algorithms. This paper proposes a low-complexity
RLS adaptive algorithm based on the Dichotomous Coordinate
Descent (DCD) iterations, with a Data-Reuse (DR) approach. In
this way, the corresponding convergence speeds in tracking and
low signal-to-noise scenarios are improved, with overall attractive
costs in terms of chip areas for hardware implementations.
Index
Terms—adaptive
algorithms;
Data-Reuse
(DR);
low
Signal-to-Noise Ratio; Recursive Least-Squares (RLS); Dichoto-
mous Coordinate Descent (DCD); tracking.
I. INTRODUCTION
In recent times, considerable research efforts were concen-
trated on improving convergence rates and tracking capabil-
ities for practical implementations of adaptive systems. The
Recursive Least-Squares (RLS) family of adaptive algorithms
is a good way to accomplish this goal, unfortunately, with
the cost of an increased arithmetic workload and numerical
stability issues. The current industry workhorse is the Least-
Mean-Square (LMS) algorithm [1], which has poor results
when working with correlated input signals. To overcome
these impediments, two versions of the RLS method have been
previously introduced: the RLS adaptive algorithm combined
with the dichotomous coordinate descent iterations (RLS-
DCD) [2], [3], respectively the RLS adaptive algorithm based
on the data-reuse approach (DR-RLS) [4].
The RLS-DCD has been designed to match the performance
of classical RLS versions, and also to avoid the necessity of
handling prohibitive amounts of arithmetic operations (usually,
proportional to the square of the filter’s length or even more
complex) associated with the computation of the inverse
correlation matrix. The usage of the DCD iterations exchanges
the correlation matrix inversion with a solution based only on
additions and bit-shifts, corresponding to an auxiliary system
of equations, which exploits the statistical properties of the
input signal [2]. Thus, hardware costs become appealing for
practical applications.
The DR-RLS adaptive algorithm improves performance of
the RLS method in tracking scenarios [4]. Along with the
forgetting factor, the DR parameter can be used to compromise
between convergence speeds and filter accuracy at steady-
state, with just a minimal increase in terms of complexity
(proportional to the filter’s length).
In this paper, we analyze a new version of the RLS adaptive
algorithm, based on the combination between the DCD itera-
tions and the DR principles, and we study the corresponding
performances in scenarios with tracking, respectively low
Signal-to-Noise Ratio (SNR) conditions. Section II introduces
the system model, which is employed in Section III to describe
the proposed algorithm. Simulation results are discussed in
Section IV, and conclusions are drawn in Section V.
II. SYSTEM MODEL
Starting
with
the
estimated
impulse
response
bg(n)
(of length L), we define the a priori error signal as:
e(n) = d(n) − by(n) = d(n) − bgT (n − 1)x(n),
(1)
where by(n) is the output signal estimate obtained using the
adaptive filter coefficients, x(n) is the L×1 input signal vector,
and d(n) represents the desired (or reference) signal [1].
The minimization of the cost function [1], [5], with respect
to bg(n), leads to the set of normal equations
R(n)bg(n) = p(n) = λp(n − 1) + x(n)d(n),
(2)
where λ is the forgetting factor, R(n) expresses the L × L
correlation matrix, and p(n) represents the cross-correlation
vector between x(n) and the reference signal d(n).
When working with the RLS-DCD algorithm, we write the
residual vector using the solution provided at previous time
index of the filter:
r(n − 1) = p(n − 1) − R(n − 1)bg(n − 1).
(3)
By using the DCD method, we aim to reduce the complexity
of updating the filter coefficients through the estimation of the
solution vector ∆g(n), and adding it to the previous filter set
of coefficients, such that bg(n) = bg(n − 1) + ∆bg(n) [2], [3].
Consequently, the RLS-DCD solves the auxiliary set of
normal equations:
R(n)∆g(n) = p(n) − R(n)bg(n − 1)
not
= p0(n),
(4)
and the computation of a direct solution is avoided [3].
After some calculations, the residual vector can be ex-
pressed as:
r(n) = p0(n) − R(n)∆bg(n).
(5)
Finally, we obtain:
p0(n) = λr(n − 1) + e(n)x(n)
not
= λr(n − 1) + re,x(n).
(6)
85
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-017-9
IARIA Congress 2022 : The 2022 IARIA Annual Congress on Frontiers in Science, Technology, Services, and Applications

The DCD method has two empiric roles for (4): it estimates
the solution vector ∆bg(n) and it updates the residual values
associated with the vectors p0(n), respectively r(n).
III. DR-RLS-DCD ALGORITHM
We propose to apply the DR method [4] over the RLS-
DCD adaptive algorithm. The goal is to employ Nit updates
for bg(n − 1) in order to obtain bg(n). Firstly, the error signal
can be written in a recursive way [4]:
ek(n) =
(
d(n) − bgT (n − 1)x(n) = e0(n),
k = 0
ek−1(n) − ∆bgT
k−1(n)x(n)
k ≥ 1
(7)
where k = 0 . . . Nit − 1 represents the current step. It is
obvious that for Nit = 1 the algorithm is equivalent to the
RLS-DCD approach.
Since we have used the DR method to update the error
signal, we need to adapt the update of the residual vector in
a similar manner [4]:
rk(n) =
(
λrNit−1(n − 1) + re,x,0(n),
k = 0
rk−1(n) + re,x,k(n),
k ≥ 1,
(8)
where re,x,k(n) = ek(n)x(n).
Considering the worst case scenario, the newly introduced
DR-RLS-DCD method supposes more (Nit − 1)NuL addi-
tions, with respect to the RLS-DCD approach. However, in real
applications, since Nu ≪ L and Nit ≪ L, the global complex-
ity of this new adaptive algorithm is still proportional to the
filter’s length multiplied by a small factor. The performances
of the algorithm, in terms of tracking capabilities/convergence
rate, are improving with the increase of the DR control
parameter Nit. The sequential behavior of the DR-RLS-DCD
adaptive algorithm is presented in Table I.
IV. SIMULATION RESULTS
We used as an input signal a Gaussian noise with the length
of 280000 samples and SNR = 20 dB filtered through an
autoregressive AR(1) model with the pole 0.9. The unknown
system was chosen to be the forth impulse response from the
G.168 ITU-T Recommendation [6], with the length L = 128.
We performed a simulation by combining two types of
scenarios: tracking and temporary low SNR conditions. In
the first part of the scenario, abrupt changes in the unknown
system were triggered by changing the sign of the correspond-
ing impulse response coefficients at the time index 60000.
In the low SNR part of the scenario, the additive noise
was experimentally changed from SNR = 20dB to SNR =
-20dB, for a duration of 5000 samples, starting with time
index 180000. The performance has been measured with the
normalized misalignment [3]. The forgetting factor is the same
in all circumstances, λ = 1 − 1/(KL), with K = 128. The
DCD parameters were set to Nu = 4, Mb = 16, and H = 1.
The simulations results are illustrated in Figure 1.
TABLE I: DR-RLS-DCD ADAPTIVE ALGORITHM
Step no.
Step action
Init.
Set bg(0) = 0L×1; r(0) = 0L×1
R(0) = δIL, with δ > 0
For n = 1, 2, . . . , number of iterations :
A
Update vector x(n) and matrix R(n)
B
For k = 1, 2, . . . , Nit − 1 :
1
Compute ek(n) using (7)
2
Compute pk(n) using (8)
3
R(n)∆gk(n) = pk(n) DCD
−−−→ ∆bgk(n), rk(n)
C
bgk(n) = bgk(n − 1) + ∆bgk(n)
0.5
1
1.5
2
2.5
Iterations
105
-50
-40
-30
-20
-10
0
10
Normalized misalignment (dB)
DR-RLS, Nit=1
DR-RLS, Nit=3
DR-RLS, Nit=5
DR-RLS-DCD, Nit=1
DR-RLS-DCD, Nit=3
DR-RLS-DCD, Nit=5
Figure 1. Performance of the DR-RLS and DR-RLS-DCD algorithms for
different values of Nit. The unknown system changes at time index 60001,
and the SNR is decreased for 5000 iterations, starting with index 180001.
V. CONCLUSIONS
The algorithm introduced in this paper is an efficient com-
bination between the exponentially weighted RLS algorithm
based on the DCD method [2], [3], enhanced by a data-reuse
approach. The DR-RLS-DCD adaptive algorithm has proven
to offer a useful compromise between tracking capabilities and
estimation accuracy. The trade-off is controlled from the DR
part of the algorithm through the number of iterations Nit.
ACKNOWLEDGEMENT
This work was supported by two grants of the Romanian Min-
istry of Education and Research, CNCS–UEFISCDI, project number
PN-III-P1-1.1-TE-2019-0529, and PN-III-P4-PCE-2021-0438, within
PNCDI III.
REFERENCES
[1] S. Haykin, Adaptive Filter Theory. Fourth Edition, Upper Saddle River,
NJ, USA: Prentice-Hall, 2002.
[2] Y. V. Zakharov, G. P. White, and J. Liu, “Low-complexity RLS algo-
rithms using dichotomous coordinate descent iterations,” IEEE Trans.
Signal Processing, vol. 56, pp. 3150–3161, July 2008.
[3] C. Stanciu, J. Benesty, C. Paleologu, T. G¨ansler, and S. Ciochin˘a, “A
widely linear model for stereophonic acoustic echo cancellation,” Signal
Processing, vol. 93, issue 2, pp. 511-516, 2013.
[4] C. Paleologu, J. Benesty, and S. Ciochin˘a, “Data-Reuse Recursive Least-
Squares Algorithms,” IEEE Signal Processing Letters, vol. 29, pp. 752-
756, 2022.
[5] P. S. R. Diniz, Adaptive Filtering: Algorithms and Practical Implemen-
tation. Fourth Edition, New York, NY, USA: Springer-Verlag, 2013.
[6] Digital Network Echo Cancellers. ITU-T Recommendations G.168.
Available online: https://www.itu.int/rec/T-REC-G.168/en (accessed on
June 22 2022)
86
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-017-9
IARIA Congress 2022 : The 2022 IARIA Annual Congress on Frontiers in Science, Technology, Services, and Applications

