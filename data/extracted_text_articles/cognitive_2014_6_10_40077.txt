A HMM Model Based on Perceptual Codes for On-
Line Handwriting Generation  
 
Hala Bezine 
 
 Wafa Ghanmi   
Adel M.  Alimi 
REGIM-Lab: Research Group on Intelligent Machines Laboratory, University of Sfax, 
National School of Engineers, BP 1173, 3038. 
Sfax, Tunisia 
hala.bezine@ieee.org; wafa.ghanmi@hotmail.fr; adel.alimi@ieee.org 
 
 
Abstract‚ÄîThis paper handles the problem of synthesis of 
online handwriting that can be reconstructed by several 
methods such as those of movement or shape simulation 
techniques and computational methods. Indeed, this work 
presents a probabilistic model using the Hidden Markov 
Models for the classification of perceptual sequences, starting 
from global perceptual codes as input and ending with a class 
of number probabilities as output. In fact, the algorithm 
analyzes and learns the handwriting visual codes features. In 
order to recover the original handwriting shape, and to 
generate new ones via the generated perceptual sequences, we 
investigate the polynomial approximation methods such us the 
Bezier curves and Bspline interpolation. The performance of 
the proposed model is assessed using samples of scripts 
extracted from Mayastroun Database. In experiments, good 
quantitative agreement and approximation is found between 
human handwriting data and the generated trajectories and 
more reduced representation of the scripts models are 
designed.    
Keywords-Human reading; Cursive handwriting synthesis; 
Hidden Markov Models; Global perceptual codes; Beta-elliptic 
model.  
 
I. 
 INTRODUCTION  
 
Despite the invasion of the computer and various 
technologies, such as keyboard and mouse, reducing the 
importance of handwriting, this latter attaches a great value 
on communication for a large majority of individuals. As a 
result, the emergence of so different and significant 
progress, such as tablet PC, interactive whiteboard or pen-
based devices allow the implementation of recognition, 
production and handwriting synthesis systems.  
Various cognitive and psychological studies have been 
performed on a number of participants to observe their 
behavior during the reading process. It has been 
demonstrated that vision is considered as the most advanced 
sensor for human and provides the widest range of 
information to our body in general and to writing in 
particular. As stated in many previous studies, perception 
and handwriting synthesis are highly correlated and formed 
a cognitive loop: the visual perception process extracts 
relevant features from the external environment to enable 
the motor system to act [14]. So the handwriting process can 
be considered as a sensory-motor task in which the 
component of perception corresponds to the shape of the 
letter and the neuromuscular system assumes the formation 
of the script trajectory [7][8]. On the other hand, the 
problem of handwriting generation has been addressed for a 
long time and there are many studies in this field such as 
[9][11][12][16][18]. These ones try to generate handwriting 
scripts focusing on movement dynamic characteristics or 
handwriting shape features. Other research studies suppose 
that generation and visual perception of human movements 
are strongly correlated and that complex handwriting 
trajectories should be formed from the superposition of 
elementary building blocks [5]. In such a way, the visuo-
motor correspondence could explain that Humans tend to 
provide motor commands which have similar kinematic 
properties to their neuro-muscular system. In this paper we 
have to analyze the interactions between the handwriting 
synthesis task and the cognitive functions which are 
integrated during learning of handwriting movements. 
The most of previous studies focused respectively on one of 
the perception or the production processes involved in 
handwriting generation task without handling with the 
interaction between both of them as two interrelated parts of 
the complete feedback loop [10]. As well, because the 
handwriting depends on both the perceptual skills and 
production, the formation of an online acquired script was 
more effective in the improvement of these two capabilities. 
In this context, the purpose of our work is to develop a 
handwriting generation model by using the visual codes 
extracted from on-line handwritten scripts. We propose to 
use specific statistical models: the hidden Markov models 
for their dominant impact in the treatment of writing and 
their handling of any type of sequences (image, speech, 
writing traces, etc...). Because of their nature, these models 
are deemed the most adequate to our task involving the 
handwriting classification and the generation of sequential 
data. 
This paper is organized as follows: in Section 2, the 
proposed approach is detailed and we present the principle 
characteristics of the detection of the global perceptual 
codes. In the second part of Section 2, we briefly introduce 
the Hidden Markov model, we summarize the observation 
126
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

extraction step. Then we detail the training and 
classification process. In the third part of Section 2, we 
describe our approach for fitting the partial contours i.e. 
GPC through conventional geometrical approach. Then we 
deal 
with 
some 
experimental 
results 
made 
on 
MAYASTROUN database [15]. Finally, we present some 
conclusions and further works. 
II. 
THE PROPOSED MODEL 
In this section, we describe on-line handwriting classifier 
and model for synthesis of scripts. An appropriate HMM 
model is used for each sample of the lexicon. In our 
concept, only one model is constructed for the different 
class of digits (each digit in lexicon), then for the 
classification task of an input digit, the score for matching 
the digit to each model is computed, and the class related to 
the model that has the maximum score gives the result of the 
classification. This approach is reasonable for small lexicon 
size. The samples of digits are extracted from the 
MAYASTROUN database [15].  
The system that we have developed for modelling and 
classification of online handwritten scripts is shown in 
Fig.1.  
 
Figure 1.  The architecture of the proposed model. 
Firstly, the scripter writes on a digitizing tablet using a 
special stylus. So that the user‚Äôs written scripts are captured 
as they are being formed by sampling the (x,y) coordinates 
corresponding to the pen position. Then, the acquired 
handwriting data is smoothed by a low pass-filtering type 
Chebychev. In this connection, each handwriting trace 
‚Äúisolated digit‚Äù is composed of at least one segment and 
each segment comprises multiple strokes. Moreover a 
segment is defined as a trace which is drawn continuously 
and during such movement the pen is touching the digitizing 
tablet.  
Regarding to the feature extraction stage, each script, i.e 
trace, is represented as a feature vector, which becomes its 
identity. In other words, it resides in the selection and the 
extraction of important features. Our purpose is to achieve a 
transformation of the original data space into a fixed 
dimension vector space which contains all of the relevant 
information necessary to the modeling step with HMM. 
Since the proposed model is classified as well as generative 
model, we can choose the most probable digit from the 
HMM. The most probable digit can be interpreted as the 
most representative digit pattern that each model has. If our 
proposed model successfully learns the concept of digits 
from training data, then it can generate natural shapes. 
A.  Feature Extraction 
Because of the human visual system is selectively 
activated in response to global form, we have investigated 
the properties of the GPC extractor composed of ten GPCs 
which have been already accomplished in previous studies 
[13]. As shown in [13], a GPC is a combination of a set of 
elementary perceptual codes (EPCs) according to well 
defined criteria. For this task, the authors have used the 
beta-elliptic model for on-line handwriting segmentation 
scripts [2].   
 
 
1) The 
Beta-Elliptic 
Model 
for 
Handwritten 
 
Segmentation 
In the context of the beta-elliptic theory, a rapid handwriting 
movement is resulted from the activation of a sufficient 
number of neuromuscular subsystems, to get a smoothest 
trajectory characterized by a curvilinear velocity profile 
fitted by a Beta function and an elliptic stroke in the static 
domain.  
As shown in (1), the Beta equation depends on the set of 
parameters (t, t0, t1, tc, p, q) where t0 is the starting time, t1 is 
the ending time, tc is the instant where the curvilinear 
velocity reaches its maximum. p and q are intermediate 
parameters which describe the beta profile shape [1][3][4].    
        
, , , , 	 = 







                 
(1) 
and  
 
       =
‚àó‚àó
                               (2) 
According to these kinematic features, we check the 
different static characteristics. Based on the assumption that 
each stroke is represented in the static domain by an elliptic 
arc characterized by a and b which are respectively the 
dimensions of the large and the small axes of the elliptic 
shape. x0 and y0 are the Cartesian coordinates of the elliptic 
center relative to the orthogonal reference (o, x, y). The 
angle Œ∏ defines the deviation of the elliptic portion as 
presented in (3) [2].  
                    
 =  
	
	               
(3) 
For complex handwriting movements, each handwriting 
trace is composed of at least one segment and each segment 
comprises multiple strokes. Each stroke is characterized by 
FeatureExtraction
Modelingand Classification 
by HMM
10000 samples of digits 
{0‚Ä¶9}
MAYASTROUN 
database
Sequencesof GPC
generated Script candidate
Pre-processing
On-line handwrittenscript
127
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

A global perceptual code =
elementary perceptual codes 
Simple  GPC
1. Shaft
4. Right oblique Shaft
3. Left oblique Shaft
2. Valley
Complex 
GPC
9. Occlusion
5. Right half opening occlusion
6. Left half opening occlusion
7. Up half opening occlusion
8.  Down half opening occlusion        
10. Ain
ten features in both the kinematic and static domain. The 
reader is referred to [2] for more details. 
 
2) The Elementary Perceptual Codes  Extractor 
Following the approach of the beta-elliptic model, we 
carried on with the detection of the perceptual codes. Firstly, 
for each elliptic stroke, we assigned an elementary 
perceptual code (EPC) [13]. According to the to the 
deviation angle Œ∏, we have identified four types of strokes: 
Shaft, Valley, Left oblique shaft, Right oblique shaft).  Each 
one has the opportunity to belong to both separate intervals 
of the trigonometric circle and depending on the 
trigonometric sense, we have defined the positive part going 
from 0 to œÄ and the negative range going from 0 to - œÄ. i.e.  
the stroke number two (valley), belongs to both intervals 
containing each one a positive and a negative part. It takes 
into account both sides of the trigonometric circle (positive 
and negative) to indicate the direction of writing which is 
consistent with the trigonometric direction.  The number of 
strokes of an appropriate handwriting trace is predefined by 
the Beta-elliptic model and this latter is equal to the number 
of EPC. 
 
3) The Global Perceptual Codes Extractor 
Assuming that human 
vision does 
not 
detect readily the elementary perceptual codes comprised in 
the original trace, but more general forms [13], we have 
used the global perceptual codes (GPCs) extracted 
previously in [13].   According to pre-defined criteria and by 
the means of genetic algorithms, these GPCs are 
obtained by collecting the EPCs [13] already detected. We 
have defined ten GPCs classified into both categories; 
simple and complex ones, as shown in Fig 2. In order to 
take into account the Arabic lexicon, we have considered 
the letter ‚ÄúAin‚Äù as a complex perceptual code referenced by 
number ten. As a result, we obtained a set of CPGs forming 
the initial script that will be used for online handwriting 
classification modeling step [14][15]. 
 
 
Figure 2.  The different global perceptual codes. 
In order to obtain more satisfying handwriting generation 
system and to simulate how Human understand and 
recognize handwriting, we adopt these global perceptual 
codes (GPCs) and the Hidden Markov Models to classify 
the different patterns of digits.   
 
B. Modelling and Classification by HMM 
The handwriting perception and learning can be viewed as a 
problem of probabilistic learning at high level. Indeed the 
learning of new characters affects not only the temporal 
characteristics but also influences the composition of the 
GPC sequences and the whole shape.   
The extraction of knowledge from sequentially structured 
data is a complex problem appearing in various fields of 
applications [6]. In this study, we check to develop a single 
model of representation that comprehensively summarizes 
all 
structured 
data 
identifying 
correspondences 
or 
differences in data sets. Hidden Markov Models (HMM) 
appear as one of the best approaches adopted for sequences 
treatment, due to their ability to handle with sequences of 
variable lengths, and secondly their capability to model the 
dynamics of phenomena described by sequences of events. 
Thus, we propose to use a discrete HMM for the modeling 
and classification task, the observations sequences are 
identified to sequences of discrete values corresponding to 
sequences of GPCs. An important issue that must be 
resolved before putting the system into use is to decide how 
many states the digits model should composed. For our 
case, each digit has different number of states that reflects 
the number of GPCs that the digit has. As a result, the states 
number for a HMM model is varied with respect to the 
modeled handwritten digit proprieties.  
 
1) Overview of Hidden Markov Models 
A Hidden Markov Model (HMM) [17] is a kind of 
stochastic model that is similar to a finite states machine in 
which transitions and results are stochastic. Otherwise, a 
HMM is a sequence of observations as a piecewise 
stationary process. This model combines the advantages of a 
states machine and probability distributions between states. 
The HMM registers the observations as probability 
functions of an appropriate state and the input data is 
described as a hidden stochastic process.  
More formally, it may be represented by a set of features 
namely N, M, A, B and  œÄ. The values associated to these 
characteristics can be used to produce the observations 
sequences. These characteristics are detailed below:  
- N : the number of hidden states within the model.   
- M: the number of observations symbols per state.   
-  A = (a)*+ : the state transition probability distributions; 
a)* = P-q/ = S* 1q/ = S)2,   1 ‚â§ i, j ‚â§ N 
- B = (b*k	+: the emission probability distribution in the 
state j; 
 b* = P-v: at  t 1q/ = S*2,   1 ‚â§ j ‚â§ N, 1 ‚â§ k ‚â§ M 
128
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

2
7
1
3
9
8
6
4
5
-  œÄ) = <œÄ)= : the prior probability of being in the state i at 
the beginning of the observations;                           
 œÄ) = Pq = S)	, 1 ‚â§ i ‚â§ N. 
- O = < O OA OB ‚Ä¶ OD=       where O/ is an observation from 
the set of possible symbol observations and  T is the number 
of observations in the sequence.   
To initiate a HMM characterized by a compact notation 
F = G, H, I, J	, an initial state will be chosen based on the 
prior distribution œÄ and t is set at 1. ‚àë a)* = 1,
M
‚àë b)O/	 = 1, ‚àë œÄ) = 1
)
,   
/
 a)*, b)O/	, œÄ) ‚â• 0, for all i, j, t. 
 
2) Observations Extraction 
We summarized the different steps of feature extraction as 
shown in Fig 3, starting with an original handwritten digit 
and ending with an observation which is equivalent to a 
sequence of global visual codes as output. 
 
Figure 3.  Example of the feature extraction step. 
A GPC is a combination of a set of elementary perceptual 
codes (EPCs) according to well defined criteria. In other 
words, just like a script is defined as a sequence of GPC, 
each GPC may be defined as an alternating sequence of 
EPCs. In fact, we extend the conventional representation of 
observation sequence as following: 
 
Handwritten digit = {GPC}+ 
GPC = EPC. EPC.{EPC}+ 
 
where 
‚Äú+‚Äù 
denotes 
repetition 
and 
‚Äú.‚Äù 
indicates 
concatenation. Indeed, we consider the list of GPCs 
extracted from a handwritten digit as observations for our 
model. These observations are then classified into 
corresponding digit categories. 
 
3) HMMs Structure and Training 
To define the architecture of the model, we must take into 
account the topology as well as the number of states 
according to our case. The most adopted topology to our 
system is of ergodic type. In this type of structure, each state 
can be reached or visited by any other state and the 
transition to itself is permitted: that is to say that all states 
communicate among themselves. According to a graphical 
representation, all states are interconnected by arrows which 
indicate the direction of transition and the corresponding 
probability.  
Only one model is built to represent every handwritten digit. 
Such one is formed with an ergodic digit models. Figure 4 
shows the modeling of each digit class by a HMM. 
 
 
 
 
 
 
 
 
 
 
 
Figure 4.  Graphical representation of the proposed model: an ergodic 
HMM with nine states.  
We handle the different types of GPCs as possible symbols 
that can formed the set of ten digits and we notice the 
absence of GPC "ain" in the composition of the different 
sequences and the presence of other ones. So we treat nine 
GPC instead of ten. In others words, GPCs are considered as 
states. 
Taking into account the above remarks, the design of HMM 
characterized by a compact notation F = G = 9, H, I, J	 
has led to the diagram shown in Fig. 4, with: 
‚Ä¢ Nine discrete states: 1, 2, 3 ... 9, which define the hidden 
states of the HMM. 
‚Ä¢ O1, O2, O3 and O10 denote the observations of the HMM. 
‚Ä¢ aij denote the transition probabilities between the different 
states of the model . 
‚Ä¢ P(Oj|i) represent the emission probabilities of observation. 
In the training phase, the goal is the estimation of model 
parameters A, B, œÄ	 for all possible digits that best 
approximate the digit.  The learning of the HMM model 
parameters corresponding to the classes of sequences is 
performed by the Baum- Welch algorithm [17]. This latter 
allows us to adjust and recompute the parameters of each 
sequence by maximizing the likelihood value over several 
iterations. In another words, it adjusts the parameters of the 
HMM model in order to maximize the probability P(O|Œª) of 
generating a sequence O of observations which is already 
contained in the training data. 
Thus, a set of reasonable re-estimation values for œÄ, A and B 
is given. We save the new settings of each class model for 
the use in the next step as depicted in Fig.5.  
Various digits prototypes were used for the experiments. 
These ones were collected from college and secondary 
school students without imposing any stylistic constraints or 
restriction while writing. The system is trained with 10000 
digits written by 100 writers. The number of training 
samples per class was 700. 
 
8
10
12
14
16
18
20
22
24
4
6
8
10
12
14
16
18
20
22
24
Modelisation Beta-elliptique
X(cm)
Y
( c m
)
Œ∏= ?
Extraction of Beta 
elliptical features
8
10
12
14
16
18
20
22
24
4
6
8
10
12
14
16
18
20
22
24
X(cm)
Y
( c m
)
Matrix of 
EPC
Handwritten script
Sequenceof 
GPCs
8
10
12
14
16
18
20
22
24
6
8
10
12
14
16
18
20
22
24
The digit ‚Äú4‚Äù generated with EPCs
X(cm)
Y ( c m )
 
 
1
1
1
1
1
1
1
1
4 2
2
2
2
2
1
1
1
1
The digit ‚Äú4‚Äù generated 
with EPCs
129
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

 
Figure 5.  Scheme of the learning data.  
4) HMMs Classification 
Up to now, we have defined the structure of a HMM, its 
characteristics and how it can be created. Starting from 
many kinds of sequences, we would like to distinguish 
between them. To solve this task, we need a sequence 
classifier.  
Given a sample of sequence or an observation digit obtained 
from an on-line handwriting digit or generated by HMM, 
our task can be expressed as the determination of the best 
observation sequence out of the HMM model and its 
classification.  
During this phase, and in order to select the best class and 
make a decision, we use the classical classification 
likelihood values which are computed in the previous step 
by the HMM model such as described in Fig. 6.  
 
 
Figure 6.  Digits classifier and the evaluation of HMMs Models. 
The classifier takes the digit to be classified as a sequence of 
discrete observations O and the decision function is based 
on the maximum likelihood criterion. For each HMM model 
Œªi, the classifier calculates the probability P(O|Œªi) and we 
collect the correspondent probability value. So, in order to 
find the most near optimal sequence, we use the maximum 
likelihood criterion and the best one represents the 
observation of digit with maximum probability. 
C. Handwriting Generation 
Various approximating methods have been proposed 
including the interpolation and the B-spline [21] or Bezier 
curves [19][20], to generate the cursive handwriting. The 
main objective of the interpolation, for example, is to 
interpolate unknown data from points. In this case, the value 
of the approximated function between these points can be 
estimated. In other case, the interpolation involves passing a 
curve by a subset of points extracted from the set of GPCs 
composing a given script. Our task of generation can be 
expressed as the fitting of handwriting trajectory by a small 
number of points in the 2D plane defining the different 
GPCs. We describe our approach for fitting the partial 
contours i.e. GPCs through those conventional geometrical 
approach such that: Bezier curves and B-splines. 
A simple GPC is a straight or nearly straight trace that has 
different directions and is composed of points. For the case 
of the simple GPCs, the linear interpolation method have 
been used, in which each pattern of data is fitted by a line 
segment connecting the extreme points of two neighboring 
GPC i.e. the tail and head of each of them. These ones 
correspond to local features representing maximums or 
minimums of the curvilinear velocity signal of the 
handwriting trace as shown in Table.I.  
TABLE I.  
THE DIFFRENT GPC AND THE CORRESPONDING CONTROL 
POINTS 
Code 
GPC 
Shape 
Control Points 
1 
 
{(xi, yi), (xf, yf)} 
 
2 
 
{(xi, yi), (xf, yf)} 
 
3 
 
{(xi, yi), (xf, yf)} 
 
4 
 
{(xi, yi), (xf, yf)} 
 
5 
‚äÇ 
{(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
 
6 
‚äÉ 
{(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
 
7 
‚à™ 
{(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
 
8 
‚à© 
{(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
 
9 
Œü 
{(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
 
 
With  2<=k<=4 
According to Table.1, the local features representing the 
spatial information of the different GPCs namely two points 
for the simple GPC such as the starting point Pix) , y)	  and 
the ending point PfxW , yW	 . While a complex GPC may be 
defined by five points. In addition to the starting and ending 
points, we have k points having the maximum or minimum 
curvature as well as points of zero crossing curvature. 
In fact, each GPC may be expressed as follow: 
Simple GPC   = {(xi, yi), (xf, yf)} 
Complex GPC = {(xi, yi), (xk, yk), ‚Ä¶ (xf, yf)} 
Due to the variability of handwriting style, the number of 
main control points is different from a script to another and 
from one sample to another and we are obliged to add new 
ones especially when the original points are sparse i.e. 
assuming that many points are missed between both Pi and 
Pf, it is necessary to generate new points between them. We 
explore the idea of modeling the sequence of control points 
Models of digits
Œª1             Œª2 ‚Ä¶
Œª10
Online 
Handwritten
script
Baum-Welch
Feature Extraction
Observation    Sequences
Modelsof 
digits
Argmax(P(O|Œªi)
Online 
Handwritten script
Class label
Œªmax       k
0‚â§k‚â§9
130
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

positions of handwritten digit to best fit via Bezier curve or 
B-spline. In this sense, we investigate the feature extraction 
step to compute these latter which are required for the 
implementation of the polygonal approximations. 
We conducted experiments which show the ability of 
handwriting modeling of the proposed method. First of all, 
we applied our system to digit generation and classification. 
Moreover, and in order to test our system, we have carried 
out several experimentations on MAYASTROUN Database 
[15].  
As depicted in Fig.7, an example of the handwriting digit 
"4‚Äù is generated. The associated controls points computed 
for such digit are represented in  Fig 7.(a). , There are four 
control points for all the extracted GPCs namely  Left 
oblique Shaft, Valley and Shaft. These ones are generated 
from the learned model. All the sample points are integrated 
together by respectively Bezier Curve in Fig. 7.(b). and B-
spline in Fig.7(c) to yield a cursive handwritten digit.  
 
(a)                    (b)                      (c) 
 
Figure 7.  (a) The controls points. (b) The digit ‚Äú4‚Äù generated by Bezier 
curves, (c) The digit ‚Äú4‚Äù generated by Bsplines. 
Another example of script is carried out, which is the digit 
"3", as shown in Fig.8. This one is made of two GPCs: two 
Left half opening occlusion. Figure 8.(b). presents the model 
fitted by Bezier curve while Fig8.(c). shows the 
approximation of the digit via B-spline.  
(a)                    (b)                      (c) 
 
Figure 8.  (a) The controls points. (b) The digit ‚Äú3‚Äù generated by Bezier 
curves, (c) The digit ‚Äú3‚Äù generated by Bsplines. 
We give another example of digit "6" in Fig.9. which have 
some complex GPCs. Figure  9.(a) shows the distribution of 
the different control points that characterize these latter. An 
instantiation of the digit is then generated by Bezier curve as 
well as by B-spline. 
     (a)                      (b)                         (c) 
 
Figure 9.  (a) The controls points. (b) The digit ‚Äú6‚Äù generated by Bezier 
curves, (c) The digit ‚Äú6‚Äù generated by Bsplines. 
To evaluate our method, we use a measure of similarity 
between the original acquired data and regenerated one to 
analyze and provide information to help make a decision on 
the results provided. The degree of similarity [22] between 
the original script and the script generated is measured with 
the following equation (4): 
X-XY, XZ2 = 1 ‚àí
\‚àë
-]^_^2`-]^_^2`	
a
^b
c
         (4) 
with:  
X-XY, XZ2 is the degree of similarity between the original 
script (So) and generated script (Sg).  
(xoi,yoi) are the i-th point coordinates in the original script.  
(xgi,ygi)  are the i-th point coordinates in the generated script.  
n is the number of points of the original writing. 
We note that: 
1. X-XY, XZ2 ‚àà [0, 1] 
2. X-XY, XZ2 = 1 ‚áí So=Sg 
3. X-XY, XZ2= Œ± ‚áíSg (generated script) is similar with 
Œ± degree to the So (original script).  
This degree helps us to compare different results between 
generated scripts via B-spline and Bezier curve. 
TABLE II.  
THE SIMILARITY DEGREE OF SAMPLE OF DIGITS. 
Digits 
The similarity 
degree 
with Bezier 
curves 
The similarity 
degree 
with B-spline 
Digit ‚Äò4‚Äô 
0.121 
0.215 
Digit ‚Äò3‚Äô 
0.252 
0.824 
Digit ‚Äò6‚Äô 
0.432 
0.864 
 
As shown table II, we note the variance of the similarity 
degree from one digit to another and between the two 
adopted approximating method namely B-spline and Bezier 
curves.  We remark that B-spline method gives better results 
for fitting than Bezier curves as the GPC curvature 
decreases. We conclude that the B-spline can generate 
handwritten digits with acceptable performance.  
 
 
8
10
12
14
16
18
20
22
24
4
6
8
10
12
14
16
18
20
22
24
Controls points of the handwritten digit
X (cm)
Y
 ( c
m
)
8
10
12
14
16
18
20
22
24
4
6
8
10
12
14
16
18
20
22
24
Example of number four generated by Bezier curve
X (cm)
Y
 ( c
m
)
8
10
12
14
16
18
20
22
24
4
6
8
10
12
14
16
18
20
22
24
Example of number four generated by Bspline
X (cm)
Y
 ( c
m
)
8
8.5
9
9.5
10
10.5
11
11.5
12
12.5
6
7
8
9
10
11
12
Controls points of the handwritten digit
X (cm)
Y
 ( c m
)
8
8.5
9
9.5
10
10.5
11
11.5
12
12.5
6
7
8
9
10
11
12
Example of digit 3 generated by Bezier curve
X (cm)
Y
 ( c
m
)
8
8.5
9
9.5
10
10.5
11
11.5
12
12.5
6
7
8
9
10
11
12
Example of digit 3 generated by Bspline
X (cm)
Y
 ( c
m
)
9.5
10
10.5
11
11.5
12
12.5
13
4
5
6
7
8
9
10
11
Controls points of the handwritten digit
X (cm)
Y
 ( c
m
)
9.5
10
10.5
11
11.5
12
12.5
13
4
5
6
7
8
9
10
11
Example of digit 6 generated by Bezier curve
X (cm)
Y
 ( c m
)
9.5
10
10.5
11
11.5
12
12.5
13
4
5
6
7
8
9
10
11
Example of digit 6 generated by Bspline
X (cm)
Y
 ( c m
)
131
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

These results can be enhanced by increasing the number of 
control points. 
III. 
CONCLUSION  
In this paper, we presented a system for the synthesis of on 
line handwriting scripts using global perceptual codes. In 
such away, having a set of GPCs and in order to generate 
more variant and natural handwriting shapes, we have 
applied a conditional algorithm to obtain the set of variants 
scripts. For this task, the HMMs models have been 
successfully applied. Starting from many kinds of GPCs 
sequences we differentiate between them as possible 
symbols that can formed the set of ten digits. Then we have 
adopted the geometric fitting method to approximate the 
different GPCs sequences: we have tried to collect the 
perceptual codes by the means of geometrical methods i.e.  
a GPC is approximated by an nth  order polynomial. 
The variability of the similarity degree is due to the style of 
the writer handwriting and to the complexity of extracted 
global perceptual codes. The representation of handwriting 
script by GPCs is a good way to minimize the amount of 
data, and promising results are obtained. In order to enhance 
the degree of similarity and the handwriting generation 
performance, we opt to use genetic algorithms to check the 
set of optimized control points belonging to every global 
perceptual code. Our proposed model can be applied for 
different 
applications 
purposes 
such 
us 
automated 
generating training data for recognition systems, and 
simplifying the understanding of human handwriting 
especially for young students. Therefore, it can be used for 
teaching of handwriting and integrated as a tool of 
handwriting learning.  
ACKNOWLEDGMENT 
The authors would like to acknowledge the financial   
support of this work  by grants  from    General Direction of 
Scientific Research (DGRST), Tunisian, under the ARUB 
01/UR/11/02 program. 
 
REFERENCES 
[1] M.A. Alimi. ‚ÄúBeta Neuro-Fuzzy Systems‚Äù, TASK Quarterly Journal, 
Special Issue on ‚ÄúNeural Networks‚Äù edited by W. Duch and D. 
Rutkowska, vol. 7 (1), pp. 23-41, 2003. 
[2] H. Bezine."Contribution au D√©veloppement d‚Äôune Th√©orie de 
G√©n√©ration de l‚ÄôEcriture Manuscrite", PhD, Univ. of Sfax, 2006. 
[3] H. Bezine, M. A. Alimi and N. Sherkat: ‚ÄúGeneration and   Analysis of 
Handwriting Script with the Beta-Elliptic Model‚Äù, Int. J. of 
Simulation, vol. 8, n¬∞ 2, pp. 45-65, 2007.  
[4] H. Bezine, M. Kefi, and  M. A. Alimi. ‚ÄúOn the Beta-Elliptic Model 
for the Control of Human Arm Movements‚Äù. IJPRAI, 21 (1): 5-19, 
2007. 
[5] S. Bouaziz, and A. Magnan, "Contribution of the Visual Perception 
and Graphic Production Systems to the Copying of Complex 
Geometrical 
Drawings: 
A 
Developmental Study". 
Cognitive 
Development, 22(1), 5‚Äì15. doi:10.1016/j.cogdev.2006.10.002, 2007. 
[6] P. Dreuw, P. Doetsch, C. Plahl and Ney H. ‚ÄúHierarchical Hybrid 
MLP/HMM or rather MLP Features for a Discriminatively Trained 
Gaussian 
HMM: 
A 
Comparison 
for 
off-line 
Handwriting 
Recognition‚Äù, Int. Conf  on Image Processing, ICIP‚Äô2011, pp. 3541-
3544, 2011. 
[7] S. Edelman, and T. Flash. ‚ÄúA Model of Handwriting‚Äù, Biological 
Cybernetics, vol. 57, pp. 25-36, 1987. 
[8] G.V.Galen, J. Weber. ‚ÄúOn-line Size Control in Handwriting 
Demonstrates the Continuous Nature of Motor Programs‚Äù. Acta 
Psychol. vol. 100, pp. 195-216, 1998. 
[9] G. Gangadhar, J.Denny and V.C. Srinivasa. ‚ÄúAn   Oscillatory 
Neuromotor Model of Handwriting Generation‚Äù. IJDAR, pp. 69-84, 
2007.  
[10] E. Gilet, J. Diard and P. Bessie`, ‚ÄúBayesian Action‚ÄìPerception 
Computational Model: Interaction of Production and Recognition of 
Cursive Letters,‚Äù , journal pone, pp.1-23,  2011. 
[11] J.M. Hollerbach, ‚ÄúAn Oscillation Theory of Handwring‚Äù. Biological 
Cybernetics. vol. 39, pp. 139-156, 1981. 
[12] C. V. Jawahar, A. Balasubramanian, and A. M.  Namboodri, 
‚ÄúRetrieval of Online Handwriting by  Synthesis and matching‚Äù, Int. 
J. of Pattern  
Recognition, vol 42, pp. 1445-1457, 2009.  
[13] M. Ltaief, S. Njah, H. Bezine, and M. A. Alimi,  ‚ÄúGenetic 
Algorithms for Perceptual Codes  
Extraction‚Äù, 
Int. 
J. 
of 
Intelligent Learning Systems & Applications, vol 4, pp.  
256-265, 
2012.  
[14] D.Marr, and S. Cermak,‚ÄúPredicting Handwriting  Performance 
of 
early Elementary Students with the  
Developmental test of Visual 
Motor Integration‚Äù,   Perceptual and Motor Skills. vol. 95, pp. 661-
669,  2002. 
[15] S. Njah, B.Nouma, H. Bezine,  and A.M. Alimi,   ‚ÄúMAYASTROUN: 
A Multilanguage Handwriting  
Database‚Äù, 
Frontiers 
in 
Handwriting Recognition  ICFHR, 2012, Bari, 308 ‚Äì 312, 2012 
[16] R. Plamondon, W. Guerfali, ‚ÄúThe Generation of     Handwriting with 
Delta-Lognormal  Synergies‚Äù,Bio.Cyb., vol. 78, pp. 119-132, 1998. 
[17] Rabiner, L., ‚ÄúA tutorial on HMM and Selected   Applications in 
Speech Recognition‚Äù. Proc. IEEE 77 (2), pp. 257‚Äì286, 1989. 
[18] L. Schomaker, ‚ÄúSimulation and Recognition of Handwriting 
Movements: a Vertical Approach to Modeling Human Motor 
Behavior‚Äù. Ph. D Thesis, Nijmegen University, Netherlands, 1991.  
[19] L.Shao and H. Zhou. ‚ÄúCurve Fitting with Bezier  Cubics‚Äù. Graphical 
Models and Image Processing. vol.  
58, pp. 223-228. 1996. 
[20] N.Taweechai and D. Natasha, ‚Äú Approximating Online Handwritten 
Image by B√©zier Curve‚Äù. 10th IEE Int. Conf. Computer Graphics, 
Imaging and Visualization (CGIV), Los Alamitos, USA, pp. 33-37, 
2013. 
[21] J. Wang, C. Wu, Y.  Xu, H. Shum and L. Ji, ‚ÄúLearning-Based Cursive 
Handwriting Synthesis,‚Äù Proc. of the Eighth Int. Workshop on 
Frontiers in Handwriting Recognition (IWFHR‚Äô02), 2002. 
[22] L. Yanhong, L. O. David and Q. Zheng. ‚ÄúSimilarity Measures 
Between Intuitionistic Fuzzy (vague) Sets: A Comparative Analysis‚Äù. 
Pattern Recognition Letters 28:278‚Äì285, 2007. 
 
 
132
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-340-7
COGNITIVE 2014 : The Sixth International Conference on Advanced Cognitive Technologies and Applications

