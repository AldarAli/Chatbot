On Maxmin Active Range Problem for Weighted Consistent Dynamic Map Labeling
Xiao Zhang
Department of Computer Science,
City University of Hong Kong
Hong Kong
Email: xiao.zhang@my.cityu.edu.hk
Sheung-Hung Poon
Department of Computer Science,
Institute of Information Systems
and Applications, National Tsing Hua University
Hsin-Chu, Taiwan
Email: spoon@cs.nthu.edu.tw
Minming Li, Victor C.S.Lee
Department of Computer Science,
City University of Hong Kong
Hong Kong
Email: {minming.li, csvlee}@cityu.edu.hk
Abstract—Geographical visualization systems, such as online
maps, provide interactive operations on continuous zooming
and panning. In consistent map labeling, users can navigate
continuously through space without distracting behaviors such
as popping and jumping. We study the consistent dynamic map
labeling problem: Given a set of labels on the map and each label
with a selectable active range and weight, ﬁnd an appropriate
active range for each label such that no two consistent labels
intersect at any scale and the minimum weighted active range is
maximized. It is named as maximizing minimum weighted active
range problem (MMWAR). This study on MMWAR is of the the-
oretical and practical signiﬁcance, since it is common that some
labels in practical maps need better visibility than others. We in-
vestigate both the simple and general variants and present several
theoretical results. For simple variants, simple 1D-MMWAR and
2D-MMWAR with proportional dilation are optimally solved in
O(n log n) and O(n2 log n), respectively. For general variants, we
prove that general 1D-MMWAR with constant dilation and 2D-
MMWAR with proportional dilation are NP-complete. Moreover,
we provide an O(log n)-approximation algorithm for the general
1D-MMWAR with proportional dilation, and an O(√n)-factor
approximation algorithm for the general 2D-MMWAR with
proportional dilation. Our experimentation results show that on
average, the approximation factors in our algorithms are much
smaller than the worst-case upper bounds stated above, and our
approximation algorithms run efﬁciently.
Keywords–Geographic information systems; Dynamic map la-
beling; NP-hardness; Approximation algorithms.
I.
INTRODUCTION
Dynamic map labeling, as a critical problem in cartography
and geographic information systems (GIS), provides users in-
teractive operations on zooming and panning maps continually
and dynamically. In contrast to the static map labeling problem
[1], it can be formulated as a traditional map labeling problem
by incorporating scale as an additional dimension. Increasing
academic concern is aroused to handle these interfaces. Been
et al. [2] initially deﬁned the consistent dynamic map labeling
problem with a set of consistency desiderata to provide a new
and practical framework. According to this framework, during
zooming and panning, (a) labels are not allowed to exhibit
abrupt change in the position or size; (b) labels should not
suddenly disappear and reappear when zooming in or pop up
when zooming out; (c) the labeling should be in line with
the selected map viewpoint, not be hinged on the navigation
history.
Most previous algorithmic studies on consistent dynamic
map labeling deal with active range optimization (ARO)
problem [3][4], whose objective is to maximize the sum of
total active ranges, each of which corresponds to the con-
sistent interval of scales with visible labels. On the other
hand, maximizing minimum active range problem is seldom
considered, since a few labels may only have a very small
selectable range [5]. Nevertheless, the maximizing minimum
weighted active range problem, arises in a natural way but
with practical importance in situations when, different cities
may have different weights in order to reveal the different
degrees of importance. For example, on a map of China,
attributing Beijing a higher priority (weight) than Tianjin (a
nearby city of Beijing) ensures that in case of limited space
the capital rather than one of its nearby cities receives a
label. Clearly this maximizing minimum weighted active range
(MMWAR) problem is equivalent to ﬁnding a set of active
ranges with different visibility that the overall weighted range
assignment is relatively balanced. In particular, none of the
existing dynamic map labeling methods provides theoretical
studies and related solutions on MMWAR.
In this paper, we study the problem MMWAR and propose
a suite of algorithms. The present paper is structured as
follows. Section II describes some preliminary concepts. The
related work is presented in Section III. The complexity of
MMWAR is investigated in Section IV. An algorithmic study
of MMWAR is presented in Section V. We give exact algo-
rithms for simple 1D-MMWAR and 2D-MMWAR with propor-
tional dilation. The general 1D-MMWAR and 2D-MMWAR
with proportional dilation are provided with approximation
algorithms, whose performance is evaluated by experiments
in Section VI. Section VII concludes this paper and discusses
some open problems.
II.
PRELIMINARIES
In this study, we adopt the model of consistent dynamic
map labeling and all above mentioned desiderata to our
problem [2]. Each label is represented by a three dimensional
(3D) solid. It is formed by extruding the label shape through
the vertical dimension (zooming scale). Each solid can be
truncated to a single scale interval, named its active range
(or height, for short), corresponding to the scale selected by
the label. The labels are assumed not to slide and rotate. See
Figure 1, we consider invariant point placements with axis-
aligned square labels. The output of our proposed algorithm is
a set of disjoint active ranges. See Figure 1(a), at any zooming
scale Sc, we obtain a set of disjoint labels at the cross section
at scale Sc. This set of labels represents the labeling of the
points we considered at this speciﬁc scale Sc. See Figure 1(b)
as an example. In the dynamic setting of zooming in and out
32
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

Sc
Li
zoom in
Scale
x
y
zoom out
(a) Front view of square frusta
x
y
Sc
label1
label2
(b) Placement of labels at scale Sc
Selectable
range
Scale
Li
x
Active range
Ti
Bi=0
Hi
s=0
S=Smax
(c) Side view of square labels
Figure 1. Two square labels with selectable ranges and active ranges
of the scene, different labeling at different zooming scales of
the solution will be shown to the users.
We give several notations on the MMWAR problem. In
principle, the input is a set of extrusions, each extrusion
with a selectable interval and weight, for which we intend
to assign an active range. Assume that we are given a set
of extrusions Γ = (L1, L2, ..., Ln), each Li with a selectable
range (si, Si) and weight wi, where si, Si ≥ 0 are at most the
global maximum scale Smax. Our objective is to calculate an
active range assignment A for Γ. More speciﬁcally, for each
extrusion Li ∈ Γ, a contiguous active range (Bi, Ti) ⊆ (si, Si)
is assigned. Hi = Ti −Bi indicates the height of active range.
A is a feasible solution if the resulting extrusions are pairwise
disjoint. For a solution A, we say that an extrusion Li is active
in A at scale Sc if Sc ∈ (Bi, Ti); otherwise Li is inactive in
A at scale Sc. The goal is to maximize the minimum weighted
height of A, i.e., MaxMin Hi
wi .
Following the work [5], we consider two variants in this
problem, i.e., simple and general. The problem stated in the
previous paragraph is the general variant. For the simple
variant, it is of importance to theory and practice to consider
the scenario in which all labels are selectable at all scales
and all labels are selected when zooming in. Speciﬁcally,
in simple MMWAR variant, (si, Si) = (0, Smax), Bi = 0
for all Li ∈ Γ; see Figure 1(c). Moreover, we study two
kinds of dilation cases in this paper, i.e., proportional dilation
and constant dilation. We say that labels have proportional
dilation if their sizes could change with scale proportionally.
In contrast, if the sizes of labels are ﬁxed at every scale, we
say that labels have constant dilation. For the simple MMWAR
problem with proportional dilation, the shapes of extrusions
appear to be rectangular pyramids by extruding rectangular
labels. For the general MMWAR problem with proportional
dilation, the shapes of extrusions appear to be congruent square
pyramids or frusta segments of congruent square cones.
III.
RELATED WORK
Map labeling is essential for a wide range of applications
and becomes the focus of research [6][7]. Before the proposal
of dynamic labeling problem, there was a large number of
studies on automated label placement dealing with static ﬁxed
position [5]. The research outputs covered various settings
and NP-hardness proofs [1][8]. A typical task of these works
was to select and place labels without intersection so as to
maximize the number of selected labels. Exact and approxi-
mation algorithms [9] [10][11] are known for several types of
the static label optimization problem. Among them, Agarwal
et al. [12] proposed a PTAS for the unit-width rectangular
label placement problem and a log n-approximation algorithm
for the arbitrary rectangle case. Then, the improvement was
obtained in [10]. Chalermsook and Chuzhoy [11] studied
the Maximum Independent Set of Rectangles problem and
presented an O(log log n)-approximation algorithm.
In recent years, dynamic map labeling has become a new
bright spot. Petzold et al. [13] generated a reactive conﬂict
graph storing all potential conﬂicts information by using pre-
processing phase. Poon and Shin [14] presented algorithms for
labeling points that precomputed a hierarchical data structure
to store solutions at different scales. For consistent dynamic
map labeling, Been et al. [2] initially presented several consis-
tency desiderata and formulated a new algorithmic framework
for fast and consistent labeling. They also showed the NP-
hardness of optimal active range selection problem. In addition,
several approximation algorithms were given for 1D and 2D
labeling problems [3]. N¨ollenburg et al. [15] explored three
extensions of the one-sided boundary labeling model allowing
continuous zooming and panning. Moreover, Gemsa et al. [16]
gave an FPTAS for the continuous sliding model of the ARO
problem. Yap [17] summarized a few open ARO problems in
dynamic map labeling. More recently, Liao Chung-Shou et al.
[4] considered the dynamic map labeling problem with a set
of rectangles and gave several approximations to maximizing
the sum of total visible ranges.
When considering the objective of maximizing the min-
imum active ranges, Gemsa et al. [18] not only considered
MaxTotal ARO problem, but also studied MaxMin ARO prob-
lem. They showed both problems are NP-complete. However,
they only considered the continuous map rotations. None of
the existing research about MaxMin ARO studies the zooming
setting. Furthermore, few researches are incorporating weights
into consideration in the map labeling problem formulation.
Poon et al. [19] ﬁrst deﬁned static label-placement models
for labeling static points with weights and presented several
corresponding algorithms. Schwartges [20] assigned labels to
map objects like cities or streets and used the weights to
determine the importance of a label. This is a good attempt
to reduce the gap between theory and practice. Since dynamic
map labeling is still an active research line, some unsolved
problems remain, such as MMWAR.
IV.
COMPLEXITY
In this section, we prove that two variants of MMWAR are
NP-complete by reductions from the NP-hard problem Planar
3SAT [21]. An instance of Planar 3SAT is a 3SAT formula Φ
whose variable-clause GraphΦ is planar.
33
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

A. General 1D-MMWAR with constant dilation
We start by considering the NP-hardness proof of the
general 1D-MMWAR with constant dilation.
Theorem 1: General 1D-MMWAR with constant dilation
is NP-complete; i.e., given a set of n axis-aligned rectangular
extrusions Γ = (L1, L2, ..., Ln) with weight wi for each Li
and a real number K > 0, it is NP-complete to decide whether
there is a valid assignment A of active ranges to Γ with
Min Hi
wi ≥ K. The problem is still NP-complete even when
all extrusions are squares of two different sizes and with the
same weight.
B. General 2D-MMWAR with proportional dilation
In the general 2D variant of MMWAR, we give the NP-
hardness proof by assuming that all extrusions are congruent
square pyramids with two different weights. We note that for
the variant with pyramids of only one weight, whether it is
NP-complete is still open.
Theorem 2: General 2D-MMWAR with proportional di-
lation is NP-complete; i.e., given a set of n axis-aligned
rectangular cones Γ = (P1, P2, ..., Pn) with different weights
wi and a real number K > 0, it is NP-complete to decide
whether there is a valid assignment A of active ranges to Γ
with Min Hi
wi ≥ K. The problem is still NP-complete even all
extrusions are congruent square pyramids with two different
weights.
V.
TRIANGLES 1D-MMWAR & CONES 2D-MMWAR
A suite of algorithms are devised to solve several variants
of 1D- and 2D-MMWAR problems. In the simple variants, the
active ranges start from Zero scale. On the other hand, the
active ranges start from any scale in general version, which is
closer to the reality with practical signiﬁcance.
A. Simple 1D-MMWAR
In simple 1D-MMWAR with proportional dilation, each
extrusion is an inverted triangle with top edge attached to the
horizontal line s = Smax and apex located on the x-axis, i.e.,
(Bk, Tk) ⊆ (0, Smax) and Bk = 0, thus active range height
Hk = Tk. The truncated extrusions differ only by heights
of top edges. Figure 1(c) shows an example of active ranges
assignment for the labels. Observe that the objective of the
problem is MaxMin Hi
wi for each extrusion Li.
Let Γ = (L1, L2, ..., Ln) be the set of extrusions, and let
pi be the apex of triangle-shaped extrusion Li on the x-axis.
Assume that p1, ..., pn are arranged from left to right. For each
extrusion Lk, k < n, we deﬁne the left side edge and right side
edge as El
k and Er
k. Without loss of generality, we assume that,
for every two adjacent extrusions Lk and Lt (t > k), Er
k and
El
t intersect at hkt. We denote the scale of hkt as Hkt. They
are stored as a Doubly Linked List DuLinkList[n-1], in which,
Er
k and El
k+1 are the left pointer ﬁeld and the right pointer
ﬁeld, and Hk(k+1) are the value ﬁeld. Then, we construct a
RB-Tree ℜ to store (H12, H23, ..., H(n−1)n).
Hence, we give the exact algorithm with low time com-
plexity, as shown in Algorithm 1.
Theorem 3: Simple 1D-MMWAR with proportional dila-
tion can be solved in O(n log n) time.
Proof: For each pair of adjacent extrusions Ls and Lt,
only one of them is assigned the active range height Hst in
Algorithm 1 Compute the maximum minimum weighted ac-
tive range for simple 1D-MMWAR with proportional dilation
Input: Γ = (L1, L2, ..., Ln), a selectable range (0, Smax)
and weight π = (w1, w2, ..., wn)
Output: MaxMin H
w , HList
for each extrusion Li in Γ do
DuLinkList ← Li
end for
Construct RB-Tree ℜ from DuLinkList
for the minimum element Hij ∈ ℜ do
ﬁnd two corresponding extrusions (Li, Lj) with weights
(wi, wj)
if Hij
wi ≥ Hij
wj then
add Li with Hij to the list HList
delete Li and update DuLinkList and ℜ
else
add Lj with Hij to the list HList
delete Lj and update DuLinkList and ℜ
end if
end for
MaxMin H
w ← min{ H
w }, {H ∈ HList, w ∈ π}
Return MaxMin H
w
simple 1D-MMWAR. By handling intersecting points of all
pairwise extrusions in Algorithm 1, none of them intersect
after range assignments.
Optimality. For the smallest Hαβ in the RB-Tree, it denotes
the lowest intersecting point of two extrusions Lα and Lβ with
weights wα and wβ. The value Hαβ must be assigned to either
Lα or Lβ. Assume that wα > wβ, thus Hαβ
wα < Hαβ
wβ (weighted
active ranges). It shows that Hαβ
wα is the smaller one. The only
way to increase Hαβ
wα
is to assign Hαβ to Lβ and remove it
to a candidate set HList, since the remaining values of H are
larger than Hαβ. Thus, the weighted active range of Lα can
be increased to be larger than Hαβ
wα . That is to say, whenever
we select one of two intersecting extrusions, we select the
one whose weighted active range is larger and add it to the
candidate set HList. By this means, all the smaller weighted
active ranges can be maximized and restored to HList.
Complexity. For the running time, we construct the RB-Tree
by using T1(n). Thus, we have
T1(n) = O(log n!) < O(n log n).
For each operation on the RB-Tree, the running time T2(n) =
O(log n). Hence, the overall time complexity of Algorithm 1
follows.
T(n) = T1(n) + T2(n) = O(n log n).
Therefore, we can obtain the optimal solution of MaxMin H
w
in O(n log n) time.
B. Simple 2D-MMWAR
The idea of Algorithm 1 for 1D-MMWAR can be easily
extended to solve the simple 2D-MMWAR.
In contrast to 1D-MMWAR, we need to construct a RB-
Tree to store all pairs of the lowest intersection of 3D cones,
whose amount is O(n2). Similar to Theorem 3, each time we
choose the smallest Hs from the RB-tree for comparing the
34
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

T1
1/6
1.0
Figure 2. An illustration of the intersection degree and active ranges
assignment.
weighted active range Hs
w of two intersecting cones. Then, we
remove those cones involving with the larger weighted active
range from the RB-Tree. There are O(n) 3D cones, which
implies we need to delete those Hs from RB-tree in total
O(n log n) time. Hence, the time complexity is O(n2 log n).
Theorem 4: Simple 2D-MMWAR with proportional dila-
tion can be solved in O(n2 log n) time.
C. General 1D-MMWAR
In this subsection, we give an approximation algorithm that
yields log n-approximation for the general 1D-MMWAR with
proportional dilation.
Suppose that we are given a set of congruent triangles or
trapezoidal segments of congruent triangles with apexes on
the x-axis. They are assumed to be with the same weight. As
described in Algorithm 2, the idea is to choose the triangle
intersecting with the maximum number of other triangles,
then assign the active ranges to these triangles as evenly as
possible. In addition, we need a new piece of notation ∆, i.e.,
intersection degree of triangle T, which denotes the number
of triangles that intersect with triangle T in the graph. As
shown in Figure 2, there are eight congruent triangles, whose
selectable ranges are assume to be one unit, i.e., Smax = 1. If
triangle T1 is intersecting with five triangles (red triangles),
we say that the intersection degree of triangle T1 is five, which
is denoted as ∆ = 5.
See Algorithm 2 for the pseudo-code of our algorithm. In
the following theorem, we show that such a solution is in
fact an O(log n)-approximation for the general 1D-MMWAR
problem with the same weight.
Algorithm 2 Compute the maximum minimum weighted ac-
tive range for general 1D-MMWAR with proportional dilation
Input: a set Γ of n congruent triangles, a selectable range
(0, Smax) and weight w
Output: MaxMin H
w
for each triangle Ti ∈ Γ do
∆i ← the number of intersecting triangles
end for
∆max ← Max{∆1, · · · , ∆n}
for each triangle Ti ∈ Γ do
H ←
Smax
end for ∆max+1
Return H
w
Theorem 5: Given a set of n congruent triangles with
the same weight, a log n-approximation for the general 1D-
MMWAR with proportional dilation of General Congruent
Triangles can be computed in O(n2) time.
Proof: Given n congruent triangles with the same weight,
whose selectable ranges are assumed to be one unit, i.e.,
Smax = 1. Considering the triangle Tm intersecting with
the maximum number of triangles ∆max, Let XT be the set
containing Tm and all the triangles intersecting with Tm. Thus,
|XT | = ∆max + 1. According to Algorithm 2, each triangle
T ∈ XT is assigned an active range height
1
∆max+1. Obvi-
ously, none of the active ranges of the triangles in XT conﬂicts
with each other after range assignment, since they are assigned
evenly. Then, considering the case that triangle T
′
/∈ XT
with intersection degree ∆′, observe that ∆′ ≤ ∆max. XT ′
contains T ′ and all the triangles intersecting with T ′, in which
we assume there are k common triangles in XT ′ and XT ,
k ≤ ∆′. Observing that each of those k common triangles has
been assigned an active range of height
1
∆max+1, which occupy
a range of total height
k
∆max+1. For the remaining ∆′ + 1 − k
triangles, they have the total range of height ∆max+1−k
∆max+1
to be
assigned. We assign each triangle an active range of height
1
∆max+1 for these remaining ∆′ + 1 − k triangles. Since
∆′ ≤ ∆max, all triangles in XT ′ and XT can be assigned
the active ranges without conﬂict. Note that when k = 0, XT ′
and XT are disjoint subsets of triangles.
1.0
T
1/2
1/4
Figure 3. An illustration of ﬁnding the optimal solution for general
1D-MMWAR with proportional dilation.
When n = 1, the active range is Smax. When n = 2 or
3, the solutions are Smax
2
and Smax
3
, respectively. As for any
case that XT with maximum intersecting degree contains m
(3 < m ≤ n) triangles, we consider the optimal solution S∗
for m triangles in this case. The solution is illustrated as bold
red triangles in Figure 3. The gaps between disjoint triangles
can be extracted up to m − 3 triangles in O(m log m) time.
Then, we calculate the summation of all selected active range
A(t) for each t ∈ XT in the solution from the bottom to top,
i.e.,
∑
t∈XT
A(t) = 3 + 2 × 1
2 + 22 × 1
22 + 23 × 1
23 + . . . + 2i × 1
2i .
With the purpose of reaching the amount of triangles m, we
have
i = log(m − 1) − 1 ⇒
∑
t∈XT
A(t) = 2 + log(m − 1)
It indicates that the optimal solution follows.
S∗ ≤
∑
t∈XT A(t)
m
= 2 + log(m − 1)
m
In this case, we obtain the solution S = 1
m.
S∗ Hence, Algorithm 2 achieves the approximation factor
S
= 2 + log(m − 1) ≤ 2 + log(n − 1). Thus, we obtain
an O(log n)-approximation for the general 1D-MMWAR with
proportional dilation.
We can extend our algorithm to handle triangles with two
weights. Hence, we obtain the following Corollary 1.
Corollary 1: Given n congruent triangles with the two
weights w1 and w2 such that w1 is a constant factor of w2,
Algorithm 2 computes an O(log n)-factor approximation for
the general 1D-MMWAR with proportional dilation.
35
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

D. General 2D-MMWAR
Suppose that we are given a set of congruent square pyra-
mids or frusta segments of congruent square cones with apexes
on the horizontal plane. For simplicity, we set Smax = 1. Our
algorithm, say Algorithm 3, for the general 2D-MMWAR runs
greedily using the same method as Algorithm 2. The only
difference is that we are now considering congruent square
frustra instead of congruent triangles. The pseudo-code of new
algorithm is given in Algorithm 3.
Algorithm 3 Compute the maximum minimum weighted ac-
tive range for general 2D-MMWAR with proportional dilation
Input: a set Γ of n congruent frusta, a selectable range
(0, Smax) and weight w
Output: MaxMin H
w
for each frustum Ti ∈ Γ do
∆i ← the number of intersecting frusta
end for
∆max ← Max{∆1, · · · , ∆n}
for each frustum Ti ∈ Γ do
H ←
Smax
end for ∆max+1
Return H
w
Theorem 6: Given a set of n axis-aligned congruent square
frusta with the same weight, an O(√n)-approximation algo-
rithm for the maximum minimum weighted active range can
be computed in O(n2) time.
Proof: The correctness proof uses the similar approach
as the proof in Theorem 5. Recall the notation of intersection
degree ∆, each extrusion is assigned only one active range
of height
1
∆max+1, none of which intersect with each other
after range assignments. So, we start by considering the cone
T intersecting with the maximum number of cones, denoted
as XT . We show that the cone T is intersecting with other
eight cones to formulate a square in 2D plane. For i-th cutting
procedure, the amount of the cones reaches (2i + 1)2. As
illustrated in Figure 4, when i = 2, we extract one cone with
height 1
2 from each pairwise disjoint cones with height 1. Thus,
when the amount of the cones reaches the number n, we obtain
that i = log(√n−1). Then, we calculate the summation of all
selected active range A(t) for XT in the solution from bottom
to top.
∑
t∈XT
A(t) = 3√n + 2 log(√n − 1) − 2
which implies the optimal solution S∗ as follows.
S∗ ≤
∑
t∈XT A(t)
n
= 3√n + 2 log(√n − 1) − 2
n
Furthermore, Algorithm 3 gives a solution
1
∆max+1 ≥
1
n. Overall, Algorithm 3 achieves the approximation factor
S∗
S ≤ 3√n + 2 log(√n − 1) − 2. Thus, we obtain an O(√n)-
approximation for the general 2D-MMWAR with proportional
dilation.
We can extend our algorithm to handle congruent square
frusta with two weights. Hence, we obtain the following
Corollary 2.
(a) An example of the top-down
view.
(b) 3D model of cutting the gap
between
each
pairwise
disjoint
cones.
Figure 4. Illustration of the cutting procedure for general 2D-MMWAR with
proportional dilation
Corollary 2: Given n congruent frusta with two weights
w1 and w2 such that w1 is a constant factor of w2, an O(√n)-
approximation for the general 2D-MMWAR with proportional
dilation can be computed.
VI.
EXPERIMENTS AND EVALUATION
In this section, we evaluate the performance of Algorithm
2 for general 1D-MMWAR and Algorithm 3 for general 2D-
MMWAR. Since these problems are proved to be NP-hard, we
compare the results obtained by the proposed algorithms with
the theoretical bounds. The experiments are conducted on a
3.4GHz Intel PC with 4GB RAM. The programming language
is MATLAB(R2013a).
A. Approximation ratio for general 1D-MMWAR
For Algorithm 2, we uniformly distributed 1,000 congruent
triangles along a straight-line segment. For each triangle set of
size n = 50, 100, ..., 1, 000, we randomly generate 1,000 cases.
The average performance ratio is recorded in Figure 5, where
the horizontal axis represents input size of congruent triangles
and the vertical axis represents the average approximation
ratio.
0
100
200
300
400
500
600
700
800
900
1000
7
8
9
10
11
12
13
14
input size of congruent triangles
performance ratio
Obtained ratio
Upper bound
Figure 5. Comparing the approximation ratio of Algorithm 2 with its
theoretical upper bound.
B. Approximation ratio for general 2D-MMWAR
For Algorithm 3, we uniformly distributed 1,000 congru-
ent frusta in the unit square. For each frustum set of size
n = 50, 100, ..., 1, 000, we randomly generate 1,000 cases,
and record the average approximation ratio in Figure 6.
Summarizing and evaluating our results, we have observed
that the proposed approximation algorithms have much smaller
approximation ratios than the worst-case theoretical upper
bounds. Besides, it seems that, as the problem scale increases,
the real approximation ratio increases little.
36
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

0
100
200
300
400
500
600
700
800
900
1000
0
20
40
60
80
100
120
input size of congruent frustum
performance ratio
Obtained ratio
Upper bound
Figure 6. Comparing the approximation ratio of Algorithm 3 with its
theoretical upper bound.
C. Running time for Algorithms 2 and 3
For the running time, we averaged the running time of
the 1,000 cases on both algorithms with input size from 50
to 1,000 and showed the results in Figure 7. It indicates
that the running times of the approximation algorithms follow
the theoretical complexity bounds, and both algorithms run
efﬁciently.
0
100
200
300
400
500
600
700
800
900
1000
0
0.005
0.01
0.015
0.02
0.025
size of input
running time (sec)
general 1D−MMWAR
general 2D−MMWAR
Figure 7. Average running time in seconds
VII.
CONCLUSION AND DISCUSSION
The weighted active range optimization problem is of great
theoretical and practical importance in map labeling, and this is
the ﬁrst work with the objective of maximizing the minimum
weighted active range. We prove that general 1D-MMWAR
with constant dilation and general 2D-MMWAR with pro-
portional dilation are NP-complete. We have proposed two
exact algorithms for simple 1D-MMWAR and 2D-MMWAR
with proportional dilation and two approximation algorithms
for general 1D-MMWAR and 2D-MMWAR with proportional
dilation. For the complexity analysis, there are still several
open problems. The complexity of general 2D-MMWAR with
constant dilation is still unknown. For proportional dilation,
since we assume that the input extrusions have two different
weights in the NP-hardness proof of general 2D-MMWAR, the
complexity of the problem with only one weight remains as an
open problem. Furthermore, we believe that the approximation
factor and time complexity of the approximation algorithms
and corollaries for general 1D-MMWAR and 2D-MMWAR
with proportional dilation could be further improved.
ACKNOWLEDGMENT
This work was supported in part by a grant from the
Research Grants Council of the Hong Kong Special Admin-
istrative Region, China [Project No. CityU 122512] and grant
NSC 100-2628-E-007-020-MY3, Taiwan.
REFERENCES
[1]
S. Doddi, M. V. Marathe, A. Mirzaian, B. M. Moret, and B. Zhu,
“Map labeling and its generalizations,” in Proceedings of the 8th
Annual ACM-SIAM Symposium on Discrete Algorithms.
Society for
Industrial and Applied Mathematics, 1997, pp. 148–157.
[2]
K. Been, E. Daiches, and C. Yap, “Dynamic map labeling,” IEEE
Transactions on Visualization and Computer Graphics, vol. 12, no. 5,
2006, pp. 773–780.
[3]
K. Been, M. N¨ollenburg, S.-H. Poon, and A. Wolff, “Optimizing active
ranges for consistent dynamic map labeling,” in Proceedings of the
24th Annual Symposium on Computational Geometry.
ACM, 2008,
pp. 10–19.
[4]
C.-S. Liao, C.-W. Liang, and S.-H. Poon, “Approximation algorithms
on consistent dynamic map labeling,” in Frontiers in Algorithmics, ser.
Lecture Notes in Computer Science, J. Chen, J. Hopcroft, and J. Wang,
Eds., vol. 8497.
Springer International Publishing, 2014, pp. 170–181.
[5]
K. Been, M. N¨ollenburg, S.-H. Poon, and A. Wolff, “Optimizing active
ranges for consistent dynamic map labeling,” Computational Geometry,
vol. 43, no. 3, 2010, pp. 312–328.
[6]
B. E. Teitler, M. D. Lieberman, D. Panozzo, J. Sankaranarayanan,
H. Samet, and J. Sperling, “Newsstand: a new view on news,” in
Proceedings of the 16th ACM SIGSPATIAL International Conference
on Advances in Geographic Information Systems.
ACM, 2008, p. 18.
[7]
Q. Zhang and L. Harrie, “Real-time map labeling for personal
navigation,” in Proceedings of 12th International Conference on
Geoinformatics-Geospatial Information Research: Bridging the Paciﬁc
and Atlantic, 2004, pp. 39–46.
[8]
M. Formann and F. Wagner, “A packing problem with applications to
lettering of maps,” in Proceedings of the 7th annual Symposium on
Computational Geometry.
ACM, 1991, pp. 281–288.
[9]
G. W. Klau and P. Mutzel, “Optimal labeling of point features in
rectangular labeling models,” Mathematical Programming, vol. 94, no.
2-3, 2003, pp. 435–458.
[10]
T. M. Chan, “Polynomial-time approximation schemes for packing and
piercing fat objects,” Journal of Algorithms, vol. 46, no. 2, 2003, pp.
178–189.
[11]
P. Chalermsook and J. Chuzhoy, “Maximum independent set of rectan-
gles,” in Proceedings of the 20th Annual ACM-SIAM Symposium on
Discrete Algorithms.
Society for Industrial and Applied Mathematics,
2009, pp. 892–901.
[12]
P. K. Agarwal, M. Van Kreveld, and S. Suri, “Label placement by
maximum independent set in rectangles,” Computational Geometry,
vol. 11, no. 3, 1998, pp. 209–218.
[13]
I. Petzold, G. Gr¨oger, and L. Pl¨umer, “Fast screen map labeling - data
structures and algorithms,” in Proceedings of the 23rd International
Cartographic Conference, 2003, pp. 288–298.
[14]
S.-H. Poon and C.-S. Shin, “Adaptive zooming in point set labeling,”
in Proceedings of the 15th International Symposium on Fundamentals
of Computation Theory.
Springer, 2005, pp. 233–244.
[15]
M. N¨ollenburg, V. Polishchuk, and M. Sysikaski, “Dynamic one-sided
boundary labeling,” in Proceedings of the 18th SIGSPATIAL Interna-
tional Conference on Advances in Geographic Information Systems.
ACM, 2010, pp. 310–319.
[16]
A. Gemsa, M. N¨ollenburg, and I. Rutter, “Sliding labels for dynamic
point labeling,” in Proceedings of the 23rd Canadian Conference on
Computational Geometry, 2011.
[17]
C. K. Yap, “Open problems in dynamic map labeling,” in Proceedings
of 20th International Workshop on Combinatoral Algorithms, 2009, pp.
1–3.
[18]
A. Gemsa, M. N¨ollenburg, and I. Rutter, “Consistent labeling of rotating
maps,” in Algorithms and Data Structures.
Springer, 2011, pp. 451–
462.
[19]
S.-H. Poon, C.-S. Shin, T. Strijk, T. Uno, and A. Wolff, “Labeling points
with weights,” Algorithmica, vol. 38, no. 2, 2004, pp. 341–362.
[20]
N. Schwartges, “Dynamic label placement in practice,” in Proceedings
of the 2nd Association of Geographic Information Laboratories for
Europe PhD School, 2013.
[21]
D. Lichtenstein, “Planar formulae and their uses,” SIAM journal on
computing, vol. 11, no. 2, 1982, pp. 329–343.
37
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-383-4
GEOProcessing 2015 : The Seventh International Conference on Advanced Geographic Information Systems, Applications, and Services

