125
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Rethinking Enterprise Architecture Frameworks for the Digital Age: 
The Digital Diamond Framework and EA Tool 
Roy Oberhauser 
Computer Science Dept. 
Aalen University 
Aalen, Germany 
email: roy.oberhauser@hs-aalen.de 
 
 
Abstract - Enterprise Architecture (EA) Frameworks (EAFs) 
have attempted to support comprehensive and cohesive 
modeling and documentation of the enterprise. However, these 
EAFs were not conceived for today’s rapidly digitalized 
enterprises and the associated IT complexity. A digitally-centric 
EAF is needed, freed from the past restrictive EAF paradigms 
and embracing the new potential in a data-centric world. This 
paper proposes an alternative EAF that is digital, holistic, and 
digitally sustainable - the Digital Diamond Framework. D2F is 
designed for responsive and agile enterprises, for aligning 
business plans and initiatives with the actual enterprise state, 
and addressing the needs of EA for digitized structure, order, 
modeling, and documentation. The feasibility of D2F is 
demonstrated with a prototype implementation of an EA tool 
that applies its principles, showing how the framework can be 
practically realized, while a case study based on ArchiSurance 
example 
and 
an 
initial 
performance 
and 
scalability 
characterization provide additional insights as to its viability. 
Keywords- enterprise architecture frameworks; enterprise 
architecture; 
enterprise 
modeling; 
business 
architecture; 
digitalization. 
I. 
INTRODUCTION 
This paper contributes a digitized, holistic, hyper-model 
EA conceptual framework called the Digital Diamond 
Enterprise Framework (D2F) to provide a fundamentally 
digital and sustainable EA framework for a digital EA future. 
It extends [1] with an analysis of other EAFs and describes a 
prototype implementation of the Digital Diamond Enterprise 
Framework (D2F) to show its feasibility.  
Enterprise Architecture (EA) concerns itself with 
comprehensively and cohesively modeling and documenting 
the structure and behavior of the business and IT infrastructure 
of an enterprise as a set of artifacts in order to communicate, 
implement change, and develop insights in support of strategic 
business planning and management science. Historically, EA 
emerged from a necessity to document information systems 
for management stakeholders. One of the most well-known 
EA Frameworks (EAF) is the Zachman Framework, first 
publicized in 1987 [2]. While one might think that after 30 
years the EA area must be mature, Gartner's 2017 Hype Cycle 
for Enterprise Architecture [3] shows EA and EA Tools within 
the slope of Enlightenment - not yet in the Plateau of 
Productivity, and EAFs are in the Trough of Disillusionment. 
Enterprises 
now 
face 
multiple 
contemporaneous 
challenges:   
1) A major digital transformation of their industry [4]. 
While the digitalization rate (digital score) may vary across 
industries and economies, it is nevertheless impacting 
business strategies and necessarily EA. As big data, data 
analytics, business intelligence, and machine learning make 
inroads 
into 
enterprises, 
improved 
decision-making 
capabilities at all levels and across organizational entities 
empowers employees with new insights and assistance and 
additional automation.  
2) Agility is restructuring internal people-centric 
enterprise 
management, 
processes, 
and 
projects 
to 
continuously flexible and responsive business forms, 
accelerating product and service delivery and improving 
efficiency (e.g., Scrum, DevOps, BizDevOps).  
3) Service-networked and mobile software: the IT 
landscape is rapidly changing from large, siloed, hierarchical, 
and static deployments to cloud-centric, networked, and 
containerized micro functionality deployments. Software/data 
functionality becomes easily reusable and accessible via 
standard protocols and formats independent of programming 
language or platform. Its scale can be seen in various “death 
star”-like microservice network landscape visualizations (see 
Figure 1). 
 
 
Figure 1.  Visualization of microservices at Amazon [5]. 
Considering these major trends, the reality that EA is 
attempting to comprehensively model, document, and change 
has become much more complex than in previous decades. 
The era of siloed functional teams and applications is being 
superseded by a highly networked and integrated digitized era. 

126
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
This challenges currently available EAFs, which were mostly 
developed before these trends swept into enterprises and 
typically rely on a simplified box-and-matrix paradigm.  
As to the use of EAFs in industry, in 2007 Ivar Jacobson 
reckoned 90% of the EA initiatives he was aware of had not 
resulted in anything useful, stating big gaps vs. seamless 
relationships as a primary reason [6]. A 2008 study showed 
two-thirds of EA projects failing to improve IT and business 
alignment [7], with the most frequent explanation being that 
connecting EA to business elements was difficult in practice. 
Hence, the EAFs of the past with their associated paradigms 
and their models cannot continuously reflect the dynamic 
enterprise realities in this digital age, thus they are illusionary, 
ineffective, inefficient, and no longer viable. 
The application of EA and an EAF typically involves some 
kind of EA tooling. Considering the support for EA provided 
by EA Management (EAM) tools, Jugel el al. [8] investigated 
their visual analytics capabilities and collaborative decision-
making support. Their findings identified the following five 
challenges and needs for EAM tools: 
1. View configuration: An easy way to configure views is 
needed to react to dynamic information demands. 
2. View consideration: A method is needed to consider 
several views in parallel to avoid losing the overall 
context. Additionally, views should always be kept up to 
date. 
3. Interacting with views: Stakeholders need more 
interaction and visual analytics capabilities to analyze 
and plan EAs more efficiently. 
4. Communication & collaboration: Methods are needed to 
better support communication & collaboration, e.g. by 
adding additional knowledge to views. 
5. Stakeholder identification: There is a need for methods to 
identify stakeholders that have to be involved in decision-
making processes. 
The 
following 
research 
questions 
guided 
our 
investigation: 
RQ1: Are there obvious deficiencies in the EAF and EA 
tool landscape, and if so, how can these be characterized? 
If a new EAF and/or EA tool appear justifiable: 
RQ2: What should a digital EA framework address?  
RQ3: What requirements and viewpoints should an 
associated digital EA tool implementation support? 
RQ4: Is it feasible for a digital EAF graph-centric EA tool 
implementation 
to 
flexibly 
support 
the 
ArchiMate 
ArchiSurance case study examples across the various 
viewpoints? 
RQ5: Does a graph-centric EA tool implementation 
appear viable based on an initial performance and scalability 
characterization? 
This paper contributes a description of our digital EAF 
proposal D2F. We also contribute a demonstration via case 
study of the feasibility of D2F by describing an 
implementation of an EA tool prototype based on D2F 
principles and having the following features that address the 
above five EAM tool challenges: 
• 
enterprise information model agnostic, 
• 
flexible meta-model, 
• 
supports tagging can be used to add knowledge to 
elements/views, 
• 
(re)configurable interactive dynamic (up-to-date) 
views, 
• 
visual analytical capabilities, 
• 
and cross-platform and web-centric to more easily 
involve and be accessible to diverse stakeholders. 
This paper is organized as follows: Section II discusses 
background material on EA and related work. Section III 
describes the D2F. In Section IV, we describe our prototype 
tool that demonstrates how D2F can be implemented. Section 
V evaluates the implementation, and is followed by a 
conclusion in Section VI.  
II. 
BACKGROUND AND RELATED WORK 
EA comprises the structural and behavioral aspects needed 
for the enterprise to function and their adaptation to align with 
a vision. It thus covers business (including people), 
information (data), and technology (IT, hardware and 
software). EA has been compared to city planning [9], 
designing in the face of many unknowns.  
A. EA Frameworks (EAFs) 
EAFs offer structure, associated terminology, and at times 
processes for EA-related work. The Zachman Framework [2] 
utilizes a matrix paradigm and has changed over the years, 
using rows (layers) to address highest level business, then 
logical to the most detailed technical levels, and columns for 
the 5W’s and H (who, what, where, when, why, how). Many 
of these EAFs have common ancestors and historical 
influences. The Open Group Architecture Framework 
(TOGAF) [10] was first publicized in 1995 and provides a 
methodology for EA and a boxed architecture. The National 
Institute of Standards and Technology (NIST) EA Model is a 
five-layered reference model stemming from the 1980s and 
formed the basis for the Federal Enterprise Architecture 
Framework (FEAF) [11]. The Generic Enterprise Reference 
Architecture and Method (GERAM) [12] is a generalized 
EAF from the 1990s and focuses on enterprise integration and 
business process engineering.  
Most EAFs use a 2D box or 3D cube paradigm when 
attempting to deal with the inherent complexity. Stroud and 
Ertas [13] developed a taxonomy for EAFs to show their 
interrelationships 
(influence, 
chronology, 
evolution). 
Sultanow et al. [14] classified 55 EAFs based on 
multidimensions 
(size, 
architectural 
domain 
scope, 
mutability, alignment, intention, chronology). Lim et al. [15] 
did a comparative study of five well-known EAFs, extracting 
and reifying them based on four dimensional concepts: view, 
perspective, scope, and time. In order to provide an impression 
of the extent and breadth of EAFs, Table I provides a 
consolidated list of acronyms and names of EAFs or 
architecture frameworks (AFs) and the source list used, which 
can be used to find more information about it. Due to space 
limitations, this is not intended to be a complete nor 
comprehensive list. Since various AFs could also be applied 
in the context of EA as well, no differentiation between AF 
and pure EAFs was attempted. The sources provided can be 
referred to for additional details. 

127
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
TABLE I.  
LIST OF EAFS* AND AFS*  
Acronym 
Name 
Source 
4+1 
Kruchten’s 4+1 view model 
[16] 
AAF 
Automotive AF 
[16]  
ADS 
Architecture Description Standard von IBM 
[17] 
AF-EAF 
Air Force EAF 
[16] 
AF4MgtSys 
AF for Management Systems 
[16] 
AFIoT 
IEEE P2413 AF for the Internet of Things 
[16] 
AGA 
Australian Government Architecture Reference 
Models 
[16] 
AGATE 
Atelier de Gestion de l’ArchiTecturE des 
Systemes d’Information et de Communication 
(AGATE) 
[16][17] 
AM 
Avancier Methods 
[16] 
ARCHI 
ArchiMate 
[16][17] 
ARIES 
Architecting Innovative Enterprise Strategies 
[16] 
ARIS 
Architektur integrierter Informationssysteme 
[17] 
AUSDAF 
Australian Defence AF 
[16][17] 
BCA 
Business Capability Architecture 
[16] 
BDAF 
Big Data AF 
[16] 
BEAM 
Business Enterprise Architecure Modeling 
[16] 
BPEAM 
iteratec best-practice enterprise architecture 
management (EAM) method 
[16] 
C4IF 
Connection, Communication, Consolidation, 
Collaboration Interoperability Framework 
[17] 
C4ISR  
 
[17] 
CAFCR 
Customer Objectives, Application, Functional, 
Conceptual, and Realisation model 
[16] 
CAFEA 
Common Approach to Federal Enterprise 
Architecture 
[16] 
Casewise  
Casewise Framework 
[17] 
CBDI-SAE 
CBDI Service Architecture & Engineering 
(CBDI-SAE™) for SOA 
[16] 
CEA 
CEA Framework: A Service Oriented EAF 
(SOEAF) 
[16] 
CEAF 
Commision Enterprise IT Architcture Framework 
(CEAF) 
[16] 
CIAF 
Capgemini Integrated AF 
[16] 
CIMOSA 
CIM Open System Architecture 
[17] 
CLEAR  
Comprehensive, Landscaped, Enterprise 
Architecture Representation Framework 
[17] 
DNDAF 
Department of National Defence and the 
Canadian Forces AF 
[16][17] 
DoD TRM 
Technical Reference Model 
[17] 
DoDAF 
US Department of Defense AF 
[16] [17] 
DRA1 
Dragon1 
[16] 
DYA 
Dynamic Architecture 
[16] 
e-GIF 
UK e-Government Interoperability Framework 
[17] 
E2AF 
Extended EAF 
[16][17] 
EAAF 
OMB Enterprise Architecture Assessment 
Framework 
[17] 
EAB 
Enterprise Architecture Blueprinting 
[16] 
EAMMF 
GAO Enterprise Architecture Management 
Maturity Framework 
[17] 
EAP  
Spewak’s Enterprise Architecture Planning 
[17] 
EEAF 
US OMB Enterprise Architecture Assessment 
Framework 
[16] 
EIF 
European Interoperability Framework des 
IDABC-Programms 
[17] 
EPCAF 
The EPCglobal AF 
[16] 
ESAAF 
European Space Agency AF 
[16] 
ESSAF 
Essential AF 
[16] 
eTOM 
Business Process Framework (eTOM) 
[16] 
EXAF 
Extreme AF 
[16] 
FEAF 
US Federal EAF 
[16][17] 
FESS 
Framework of Enterprise Systems and Structures [16] 
FFLV+GODS Functions-Flows-Layers-Views + Governance-
Operations-Development-Support 
[16] 
Acronym 
Name 
Source 
FMLS-ADF 
FMLS Architecture Description Framework 3.0 
(SE) 
[16] 
FSAM 
Federal Segment Architecture Methodology 
(FSAM) 
[16] 
GA 
Garland and Anthony 
[16] 
GEA-NZ 
All-of-Government (AoG) Government 
Enterprise Architecture for New Zealand 
[16] 
GEAF 
Gartner’s EAF 
[16][17] 
GERA 
ISO 15704 Generic Enterprise Reference 
Architecture 
[16] 
GERAM 
Generalised Enterprise Reference Architecture 
and Methodology 
[17] 
GIM 
GRAI Integrated Methodology 
[17] 
HEAF 
Health EAF 
[16] 
HIF 
Healthcare Information Framework (DIN V ENV 
12443) 
[17] 
IADS 
IBM Architecture Description Standard 
[16] 
IAF 
Index AF 
[16] 
IAF 
Integrated AF (Capgemini) 
[17] 
ICODE 
iCode Security AF 
[16] 
IFW 
IBM Information FrameWork (IFW) 
[16] 
IFW 
Information FrameWork 
[17] 
IIRA 
Industrial Internet Reference Architecture 
[16] 
ISO/IEC 
42010 
Recommended Practice for Architectural 
Description 
[17] 
IT City 
Planning 
IT City Planning AF (Gartner)  
[17] 
JTA 
DoD Joint Technical Architecture 
[17] 
LEAD 
Leading Enterprise Architecture Development 
(LEAD)ing Practice 
[16] 
MACCIS 
An Architecture Description Framework for 
Technical Infostructures and their Enterprise 
Environment  
[16] 
MEGAF 
MEGAF 
[16] 
MIKE2.0 
Method for an Integrated Knowledge 
Environment 
[17] 
MODAF 
(UK) Ministry of Defence AF 
[16][17] 
NAF 
NATO Architectural Framework 
[16][17] 
NEA 
National EAF 
[16] 
NIH  
(U.S. National Institutes of Health) EAF 
[17] 
NIST  
(U.S. National Institute of Standards and 
Technology) Enterprise Architecture 
[16][17] 
OBASHI 
ownership, business process, application, system, 
hardware and infrastructure framework 
[17] 
OIO 
OIO Enterprise Architecture Method 
[16] 
OSSAF 
Open Safety & Security AF 
[16] 
PEAF 
Pragmatic EAF 
[16] 
PERA 
Purdue Enterprise Reference Architecture 
[17] 
OSE RM  
ISO/IEC TR 14252, IEEE Std 1003.0 & ISO/IEC 
9945 
[17] 
PPOOA 
Processes Pipelines in Object Oriented 
Architectures 
[16] 
PRISM 
Partnership for Research in Information Systems 
Management 
[16] 
QGEAF 
Queensland Government EAF 
[16][17] 
RASDS 
Reference Architecture for Space Data Systems 
[16] 
RM-ODP 
ISO Reference Model for Open Distributed 
Processing 
[16][17] 
RWSSA 
Rozanski and Woods 
[16] 
S4V 
Siemens 4 Views 
[16] 
SABSA 
Sherwood Applied Business Security 
Architecture 
[16][17] 
SAGA 
Standards and Architectures for eGovernment 
Applications 
[17] 
SAP EAF 
SAP EAF 
[17] 
SASSY 
Self-Architecting Software SYstems 
[16] 
SGCAF 
Smart Grid Conceptual AF 
[16] 
SQUID 
Specification Quality In DevOps 
[16] 

128
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Acronym 
Name 
Source 
t-eam 
toolbox for enterprise architecture management 
[17] 
TAFIM 
Technical Architectural Framework for 
Information Management 
[17] 
TEAF 
(US) Treasury EAF 
[16] 
TEAF 
Treasury EAF 
[17] 
TISAF 
Treasury Information AF 
[17] 
TOGAF 
The Open Group AF 
[16][17] 
TRAK 
The Rail AF 
[16][17] 
UADF 
Universal Architecture Description Framework 
[16] 
VERAM 
Virtual Enterprise Reference Architecture and 
Methodology 
[17] 
xAF 
Extensible AF 
[16][17] 
XAF 
eXtreme Enterprise Architecture Framework 
[17] 
ZF 
Zachman Framework 
[16][17] 
*AF = Architecture Framework; EAF=Enterprise AF 
 
Considering that Gartner’s 2011 global EA survey showed 
more than 60 EA frameworks in use, with the most popular 
being blended followed by homemade [18], it is indicative that 
the current state of EAFs is deficient, fragmented, and in need 
of rethinking from its core. To the author's knowledge, none 
of the EAFs in Table I meet all three essentials requirements: 
1) conceived as purely digital in their essence for a digitized 
enterprise, are 2) domain and intention agnostic to be widely 
applicable for EA, and 3) provide the necessary visualization 
and tooling for digitized modeling and EA-centric data 
integration.  
B. Enterprise Modeling 
Modeling abstracts and simplifies an area of interest while 
maintaining certain its essential characteristics. Consequently 
reality is more complex than our models. We model in order 
to reason or understand within our cognitive limitations and to 
convey insights to others. Different domains and enterprises 
have different weightings and expectations as to what and how 
much, if any, modeling and its associated overhead should 
occur. The modeling spectrum can span from nothing for 
small organizations to modeling everything, but usually it is 
in the area between (see Figure 2). Something is inherently 
absent and models are imperfect, and manual adjustments may 
be necessary if the reality changes. 
 
 
Figure 2.  Modeling spectrum. 
An international standard for enterprise modelling (EM) 
and enterprise integration is ISO 19439:2006, which based on 
GERAM and Computer Integrated Manufacturing Open 
System Architecture (CIMOSA). It uses a cube paradigm with 
model phase, model view, and genericity on each axis. As to 
business modeling, Meertens et al. [19] argue that there is 
hardly any agreement or standardization in the area as yet. 
The reality is enterprise models for dynamic enterprises 
can become extremely complex and perhaps difficult to 
maintain, as illustrated in Figure 3 with a CHOOSE semantic 
meta-model [20] for an SME (small-to-medium enterprise). 
 
 
Figure 3.  An example CHOOSE enterprise model for an SME, from [20]. 
C. EA Tool Landscape 
As enterprises consist of a complex set of systems, 
processes, 
resources, 
organizational 
structures, 
and 
technologies 
with 
various 
interdependencies, 
EA 
Management (EAM) attempts to provide an integrated view 
of these various aspects to enable alignment of the business 
with IT capabilities and support change and optimization. In 
order to assist with and provide insight for EAM, EA tools 
typically provide various visualization capabilities.   
Matthes et al. [21] evaluated nine EA tools in detail, while 
Matthes et al. [22] evaluated four additional EA tools using 
the same criteria. A scenario-based approach with a consistent 
information model of a fictitious organization was used. The 
first part deals with specific functionality such as adapting the 
information 
model, 
supporting 
multiple 
users 
and 
collaborative work, visualizing the application landscape, or 
usability. The second part assesses the EAM support of the 
tools, e.g. landscape management, demand management, 
project portfolio management, synchronization management, 
strategies 
and 
goals 
management, 
business 
object 
management, IT architecture and infrastructure management, 
and service-oriented architecture (SOA) transformation. 
Sultanow et al. [23] studied and compared 34 EA tools, 
basing their comparison criteria on that of Matthes et al. [21] 
and Filss [24].  They found that a complete evaluation and in-
depth look at each tool is both difficult and time-consuming. 
This is due to the fact that the tools are advertised and 
described with relatively little detailed technical depth and a 
lack of transparency. Many of the tools do not offer a test 
version for trying out and comparing them. The authors were 
able to use questionnaires and direct contact with the vendors 
to gather certain information. One of the conclusions of the 
study is that the tools in the EA segment do include a basic set 
of capabilities, but these vary considerably in scope. Most 
tools can be customized to the customer’s needs. The 
organization of and access to EA data is similar, and most 
support TOGAF, Zachman, and/or ArchiMate. Some tools are 

129
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
quite flexible and offer additional visualizations that the other 
tools do not offer. The comparison criteria categories and 
subcategories used in the study were: 
• 
Management 
functions: 
infrastructure, 
IT 
architecture, 
business/object, 
goal, 
strategy, 
synchronization, 
project 
portfolio, 
demand, 
landscape, and SOA transformation 
• 
Visualization types: 3D, bubble charts, business 
model canvas, EPC, ERD, Cluster Card, dashboard, 
line charts, pie charts, timeline, tree view, matrix, 
geographic map, flow diagram, UML, BPMN 
• 
Layout: manual, semi-automatic, or fully automatic 
• 
Programming paradigms: structured, modular, object-
oriented, component, scrum 
• 
Automation: manual, formatting, consistency checks, 
generating, inter-productive 
The Enterprise Architecture Visualization Tool Survey by 
Roth et al. [25] surveyed 18 EA tool vendors (over 50 invited) 
and 109 EA experts (out of 1200 invitations). Here is an 
excerpt of some of their findings, and our view on possible 
implications considering D2F: 
• 
The reported tools EA experts use most frequently are 
Visio (87%), Powerpoint (86%), Excel (74%), then to 
a much smaller degree Enterprise Architect (33%), 
ARIS (25%), iteraplan (23%), and Archi (20%) 
followed by the rest. Our interpretation of this is that 
most of the participants (mostly enterprise architects) 
were not using comprehensive EA tools, nor were 
most using EA tools with a direct access to IT 
infrastructure (digitally integrated).  
• 
Less than 20% were dissatisfied with their current EA 
tools (16% dissatisfied and 3% very dissatisfied), 
49% were neutral, 24% satisfied, and only 9% were 
very satisfied. Considering the non-EA-centric tools 
mentioned above (like Microsoft Office), we interpret 
this as an indication that the EA digitalization 
challenges described in our paper had not yet fully 
materialized for the participants involved at the time 
of this study. Since 69% were neutral or dissatisfied 
with their currently available EA tools, it indicates 
that the EA tool market still has significant growth 
potential towards clear EA-specific tool market 
leaders that show high adoption and high satisfaction 
rates for EA architects (the go-to EA tool for them). 
• 
The visualization update frequency required by 
enterprise architects was reported as primarily 
quarterly (22%), monthly (20%), weekly (17%), daily 
(13%), and semi-annually, annually, and other were 
10% or less. Thus, we see that the pace of 
digitalization and the degree of change with which 
they needed to cope was relatively slow. When we 
compare this to the number of deployments of 
software between 2014 and 2019, we also see that the 
reported software deployment frequency in the 2017 
State of DevOps Report [26] for high performers 
jumped from about 200 to 1600 annually between 
2015 and 2016. In turn, we can speculate that today’s 
enterprise architect must also deal with much faster 
software-centric change cycles and associated 
information models. 
The above EA tool surveys show a large set of different 
capability profiles among vendors (as can be seen by the 
Kiviat diagram profiles in the Matthes et al. studies [21] 22]), 
a high degree of market fragmentation, high degrees of 
organizational customization, and a relatively low EA-centric 
tool adoption rate by enterprise architects. This is indicative 
that none of the current EA tools appears completely 
satisfactory.  
D. Summary 
As to one of the more well-known EAFs, John Zachman 
admitted in 2004 "if you ask who is successfully 
implementing the whole framework, the answer is nobody that 
we know of yet" [27]. And considering Gartner’s 2011 global 
EA survey showing more than 60 EA frameworks in use, and 
the most popular being blended followed by homemade [18], 
it indicates that none of the current EAFs suffice for enterprise 
needs, and many were not designed for the new digital 
enterprise era and lack the ability to leverage its capabilities. 
The EAFs and methods mentioned above typically use some 
layer-and-column matrix and most aspects related to models 
and views land in a box. This the clean-box paradigm (or 
syndrome depending on your view). Everything appears 
nicely modeled, complete, consistent, traceable, and 
semantically precise. But this apparent harmony is an illusion, 
the grey areas that cross boundaries or are cross-cutting 
concerns are not explicitly dealt with. E.g., automation, 
notification, policies, common vs. specific services, testing, 
staging, DevOps, etc. 
Considering the EA tool popularity, satisfaction, and 
update rates, and the issues found when assessing the EA tools 
in detail, there is potential for the EAF landscape to offer a 
purely digital EAF and supportive EA tooling.  
Thus, EAFs currently lack an integrated digitalized and 
data-centric concept from the ground up. They fail to provide 
real-time dynamic updates and thus reflect stale, inaccurate, 
or inconsistent data. They also require additional manual labor 
to maintain independent artifact consistency with a changing 
enterprise reality. 
III. 
THE DIGITAL DIAMOND EA FRAMEWORK 
The depth and breadth of the digital impact and the deep 
integration of complex IT into all aspects of the enterprise 
calls for a new and digitally sustainable ‘boxless’ EA 
framework paradigm for this new era that can deal with 
digitalization, ambiguity, further IT complexity, and further 
automation. In the following subsections, the key areas, 
activities, 
principles, 
integrative 
aspects 
(potentially 
applicable when applying D2F), maturity levels, and roadmap 
to D2F are portrayed. 
A. D2F Key Areas 
Key Areas cluster related facets (concepts or elements) and 
provide a focus for human thought. In contrast to boxes/levels, 
here boundaries are intentionally absent, reflecting the lack of 
boundaries in the digital world, wherein facets can relate to 
multiple areas. Mind maps can be seen as a useful analogy. 

130
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Figure 4 shows key areas involved in D2F, with cross-cutting 
areas shown angled on the left and right. 
 
 
Figure 4.  Key areas D2F. 
The key areas are: 
1) Enterprise Environments: comprises all actual human, 
business, infrastructural, and IT operational objects.  
2) (Meta-)Data Repositories: includes all (meta-)data 
concept repositories in the enterprise from a logical 
standpoint, reflecting Enterprise Environments in a data-
centric way in support of higher-level data-centric analyses. 
While such repositories also reside in an Enterprise 
Environment, the focus is support for data acquisition, data 
processing, and other data-centric higher-level activities. 
3) Data Acquisition: involves collecting data and meta-
data into Data Repositories and making these accessible. 
4) Data Processing: includes characterizing, filtering, 
preparing (e.g., deriving), transforming (e.g., between 
formats, sorting), and cleansing data, the outputs of which are 
also stored in Data Repositories and hence available to other 
areas (e.g., automation, synthesis, analysis). 
5) Data Synthesis: involves aggregating, clustering, and 
correlating related or unrelated enterprise data, e.g., for 
digital key performance indicators (KPIs), dashboards, model 
conformance, etc. While this area overlaps the previous one, 
its focus is on determining and structuring aggregates. 
6) Data Visualization/Data Analysis: provides data-
centric analysis and visualization of data, models, and other 
EA artefacts for understanding, exploration, and insights. 
7) Adaptation/Evolution: 
includes 
taking 
action, 
responding 
to 
issues 
or 
concerns, 
stimulating 
or 
commissioning adaptive changes to fix or optimize the 
enterprise, and creating new initiatives and capabilities that 
let the enterprise evolve to a new state.  
8) Stakeholders/Agents: stakeholders can be viewed as 
anyone with an interest in the enterprise, and they may have 
conflicting and overlapping interests and (informational) 
needs. Agents (human or software) are able to directly effect 
changes within the enterprise. 
9) Automation 
and 
Intelligence: 
automation 
will 
increasingly support digital enterprise processes and will 
leverage data to improve efficiency and effectiveness and is 
thus explicitly considered. Beyond automation, intelligence 
utilizes data analysis and machines learning capabilities to 
assist humans in forming decisions or, via intelligent 
software agents, directly supporting autonomic decisions in 
given areas. For instance, automatic real-time adjustment of 
business product prices based on market movements or IT 
forecasting of required cloud infrastructure capacities. 
10) Management and Governance: involves managing 
and directing enterprise resources to reach enterprise goals as 
well as the enterprise governance including controlling, 
compliance, and assessments at various enterprise levels. 
Note that Key Areas can overlap (a data or meta-data 
repository will likely reside in an enterprise environment) and 
thus may appear redundant or inconsistent, yet this is not 
problematic and one strength of the D2F paradigm. Key Areas 
may be tailored for a specific enterprise. A prerequisite to a 
complete implementation of D2F presumes digitalization of 
EA-relevant areas for any given enterprise. As to scaling, the 
concept of a connected D2F Chain (Diamond Necklace) can 
be considered for applying D2F within various entities (e.g., 
divisions) but tied into a larger enterprise organization. 
B. D2F Key Principles and Qualities 
Key principles and resulting qualities of D2F include: 
1) Digitized (digital and networked): data and artifacts 
are acquired or transformed into a digital and network-
accessible form, open and transparent within the enterprise 
(to the degree feasible from a security standpoint), and 
preferably retained in some version-controlled repository 
(database or configuration-management database (CMDB) 
such as git). Internet-of-Everything and concepts such as 
digital twins can be used for physical entities to mimic real 
properties. Standards for data formats and interface access are 
considered for the enterprise. 
2) Meta (self-describing): all (data) elements including 
artefacts, entities, services, etc. should, as far as feasible, 
provide (its own) metadata (properties and semantic 
meaning) that can be integrated in metadata repositories (e.g., 
federated CMDBs) or searched via metadata networks (e.g., 
LinkedData), and which can be utilized by data processing 
and data synthesis. Various technologies such as semantic 
data graphs, RESTful services, JSON-LD, etc. can be used. 
3) Linked: Related networked data and meta-data are 
(semantically) linked in such a way that related data to some 
element or concept can be discovered and accessed. 
4) Dynamicity: In an adapting and evolving digital 
enterprise, all artefacts and enterprise elements (or the digital 
twins thereof) as well as their relationships are assumed to be 
dynamic, and configurations are used to “snapshot” a set of 
element states that can be used in some analysis or 
communication. Models can be based on functions that 

131
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
transition from simulated to real data rather than static 
structures detached from external values. 
5) Holistic: bottom-up and top-down deep integration of 
applicable enterprise facets, such that various concepts (e.g., 
business models, business strategies, policies, architectures) 
can be tied to various related artefacts, models, operational 
data, and actual enterprise entities and thus be holistically 
analyzed across various factors. 
6) Hyper-models: embraces many coexistent and co-
evolving intertwined models (domain, business, process, 
software, IT architectures, context), perspectives, viewpoints, 
and views (not necessarily consistent) supported by data 
processing. Automation will also affect how EA models are 
generated (manual vs automatic), thus we must adapt our 
tooling and methods towards sustainable integrative 
modeling. Humans desire simplicity and computers can 
better deal with complexity and massive data volume; thus, a 
symbiotic relationship should be pursued. 
7) Actuality processing (real/continuous/resilient/fuzzy): 
ongoing data acquisition and processing should be able to 
continuously access and adjust the data picture to the real live 
enterprise truth. To have resilient processing (vs. expecting 
consistency or exact values), data processing should embrace 
data ranges and the inconsistencies that will occur between 
data, models (inter- and intra-), reality, etc., and develop 
(automated) strategies and methods for detecting and 
working with exceptions, ranges, and thresholds and 
escalating more serious issues. That may include automated 
discrepancy monitoring and analysis and criticality 
weightings based on thresholds, risks, and potential impacts. 
While data cleansing can remove some of the dirt, rather 
expect issues to occur and have measures and thresholds in 
place to detect and govern these and processing that can work 
with ambiguity such as semantic imprecision [28]. 
8) Analytics: data forms the basis for EA decisions. Data-
centric processing and analysis capabilities are available for 
the present, past, and planned enterprise states to determine 
alignment to expectations. Digital KPIs, dashboards, reports, 
and visual data analytics enable investigation and exploration 
of EA-related views, perspectives, viewpoints, and any other 
factor of interest (X-Factors) to contribute to understanding 
and insights on various EA factors of interest to a stakeholder.  
9) Actionable: data is leveraged to support decisions and 
governance, enabling responsive and predictive adaptation 
and evolution of the enterprise to a futures state.  
10) Automation/Intelligence: Data is leveraged for 
automation to reduce sources of error and improve 
effectiveness and efficiency. For example, business process 
management systems and business and IT rules can be 
utilized. Intelligence via data-centric machine learning is 
integrated where possible to improve, support, or automate 
(human and software agent) decision making.  
11) Traceability and Logging: mistakes will happen, and 
people and the enterprise can learn from mistakes. To 
embrace this fact, changes to data, elements, artefacts, and all 
actions with their associated agents are tracked (and 
versioned if appropriate), logged, and traced in order to be 
able to investigate and resolve potential issues that might 
arise. 
C. D2F Key Activities 
Various (ongoing) human and IT activities are involved to 
apply and maintain D2F. We use the term activities instead of 
processes, as processes have a clearly-defined goal and 
workflow and can be documented with specified artifacts, 
whereas activities can be agile and integrated where and when 
needed in whatever agile method is currently being used and 
done in any order deemed appropriate. They can be recurring 
and continuous to maintain D2F capabilities.  
 
 
Figure 5.  Digital Diamond Framework (D2F) activities. 
As shown in Figure 5, key D2F activities include:  
1) Data Acquisition: ensures necessary and desired 
(meta-)data is collected, characterized, and accessible.  
2) Data Processing: ensures data is cleansed, filtered, 
prepared, and transformed into expected (standard) formats. 
3) Data Synthesis: aggregates and correlates data from 
various repositories for a specific purpose, such as providing 
data needed for a certain viewpoint or dashboard.  
4) Data Analysis, Visualization, & Exploration: involves 
agents (human or software) exploring, forming questions or 
hypotheses, utilizing various data and visualization analysis 
techniques from certain perspectives and viewpoints to 
address the concerns of various stakeholders, developing 
solutions, detecting opportunities and develop insights.  
5) Adapting & Evolving: directing and commissioning 
change, usually involving the previous activity (4), be it 
adjustments to align or to evolve the enterprise, its EA, or its 
supporting infrastructure. It may utilize effectors available in 
the enterprise environments and/or human efforts via 
initiating projects or enacting processes. 

132
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
6) Modeling & Configuring: involves creating and 
maintaining (hyper) business, operational, architectural, 
product and other models (which can be logical in nature) and 
provide some simplification of some structure of interest and 
associated properties. These can be for a pre-development, 
development, or operational stage. While maintaining models 
is burdensome, incorrect models are worse, thus the basis for 
models should be tied into current enterprise data. 
Configuring involves (re)arranging enterprise elements in 
various ways to optimize certain desired properties. 
7) Testing & Simulating: involves testing and/or 
simulating hypotheses and models with potential real or 
generated data on virtual or real staged or production 
elements. The goal is to develop an improved basis for 
decisions affecting elements of the EA, and might include 
concepts such as a delivery pipeline. These activities become 
more important as the systems increase in complexity. 
Without the data from these activities, decision making at the 
higher levels can be hampered. 
8) Management & Governance: includes setting the 
vision and goals for the enterprise, perceiving and acting on 
opportunities and risk, planning, organizing, directing, and 
managing 
enterprise 
resources, 
making 
decisions, 
performing assessments, determining compliance with 
policies and alignment with expectations, supporting the 
development and application of strategies, best practices, 
policies, and guidelines, and making this information 
available to the enterprise. It is both top-down and bottom-up 
in its approach. It includes a feedback loop for continuous 
improvement or adjustment, enabling the enterprise to learn 
from mistakes and to optimize its future state. It ensures that 
logging and traceability of the data used for decisions, the 
decisions made, and the resulting actions are accessible. 
9) Intelligence & Automation: involves developing, 
maintaining, and optimizing automation processes in the 
enterprise, including EA analysis activity. Activity to support 
intelligence builds on automation and includes decision 
assistance for humans and software agents. 
D. D2F Enterprise Facets 
Any enterprise concept or element can be a facet. To 
provide further detail on which enterprise facets might be of 
interest for an enterprise when using D2F, Figure 6 clusters 
facets (referred to below in italics), near Key Areas. Its intent 
is not to portray every possible facet, or by neglect thereof or 
apparent inconsistency to negate the entire approach. Rather, 
it shows that grey or inconsistent areas with which matrix 
approaches struggle are not as problematic with D2F, since it 
embraces these types of relations, be they local or holistic in 
nature. A short explanation of selected facets follows:  
Enterprise Environments can involve a Business in a 
Market with Customers, involving Projects, Processes 
(business, development, agile, IT Infrastructure Library), 
Products, and Services (business, IT) together with Actors 
organized in Teams utilizing Infrastructure, IT (cloud, 
microservices, mobile), Resources, Tools, and Technologies. 
Entities can be organizational units or any other enterprise 
element not already covered by other facets. Sensors permit 
data about changes in the enterprise state to be acquired, while 
Effectors permit desired changes to be applied. IT Rules and 
Biz (Business) Rules support automation or escalation.  
 
 
Figure 6.  Illustrative enterprise facets when applying D2F. 
 (Meta-)Data Repositories includes data and metadata 
about Projects, Processes, Products, and Services as well as 
Planning Data and Ops (Operational) Data. CMDBs provide 
data and metadata about the IT landscape, X-Assets are 
repositories for data and metadata about other enterprise assets 
(e.g., program code). Knowledge repositories may be used. 
Archives provide historical data. Digital Twins provide a 
digital representation of real enterprise elements not covered 
by the above. X-Architectures stands for any (enterprise, 
business, software, IT) architecture, describing the goals and 
representation of some structure and its properties and 
involving principles, rules, abstractions, and views. Models 
(conceptual, mathematical, business, data, etc.) are a partial 
representation of some reality. 
Data Synthesis, Data Visualization, and Data Analysis can 
be used to develop Insights and can include digiKPIs (digital 
KPIs), Dashboards, and Reports. Perspectives address a 
particular quality property and have an implicit goal or 
intention. Views (partially) address some concern. Viewpoints 
are a class of views to address associated concerns.  X-Factors 
can be qualities, capabilities, properties, aspects, etc. 
otherwise not addressed by the above. 
Adaptation/Evolution includes Decisions and Actions to 
respond to disruptions, support change such as enterprise 
element lifecycle adjustments (acquire, prepare, operate, 
maintain, retire) as well as discovering and utilizing 
Innovations and instigating digital transformation initiatives. 
Stakeholders/Agents are driven by some Motivation, have 
Knowledge, Values (what they hold to be good), and Beliefs 
(what they hold to be true), develop Ideas, and have future-
oriented Goals and present-oriented Intentions with 
Expectations and Concerns they would like addressed, 

133
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
including a (common) Vision (future desired state) for the 
enterprise and some Mission (purpose) it intends to fulfill. 
Automation involves Processes. In an intelligent 
enterprise, Autonomically-Capable Processes (ACPs) [29] 
will increasingly be desired and expected. These ACPs can be 
completely autonomic, involve human interaction, or assist 
human operators in some fashion. These intelligent ACPs are 
much more complex than normal business processes.  
 
Figure 7.  Colored graph showing possible linked facet instantiations. 
The random colored node graph superimposed in Figure 7 
conceptually illustrates how facet instantiations (data) across 
various areas could be linked via graph relations (lines in  
Figure 7) to provide various insights addressing stakeholder 
concerns. Consequently, queries can be used to find or 
determine relations that may otherwise not be apparent or 
would be ignored. 
E. D2F Maturity Levels 
Because D2F is a digital EAF, to achieve and apply all D2F 
principles across all levels of any existing large enterprise will 
require a transformation and enterprises will be in different 
states of digital transformation. The following Maturity 
Levels shown in Table II can be helpful to guide and ensure 
that requisite capabilities are addressed before focusing on 
higher level capabilities. Each level subsumes the one below.  
TABLE II.  
D2F MATURITY LEVELS 
Level 
Label 
D2F Qualities 
Data Perspective 
0 
Arbitrary 
- 
- 
1 
Digitized 
Digitized 
Meta 
Data Acquisition 
2 
Linked 
Dynamicity 
Linked 
Data Processing 
3 
Analytical 
Hyper-models 
Analytics 
Actuality processing 
Data Synthesis 
Data Analysis 
Data Visualization 
4 
Adaptive 
Holistic 
Actionable 
Traceability/Logging 
Effectors 
5 
Autonomic 
/Intelligent 
Automation  
Intelligence 
Automation 
Intelligence 
F. D2F Roadmap 
Each enterprise and its IT infrastructure are unique. The 
digital nature of D2F requires access to (semantically 
annotated) data repositories and software functionality. 
Various methods and best practices related to enterprise 
application integration (EAI), EA and other IT tools, protocol 
standards and formats (JSON/REST), and data visualization 
techniques can be leveraged to realize D2F in an enterprise.  
IV. 
D2F EA TOOL IMPLEMENTATION 
This section describes a D2F EA tool prototype we 
developed. In contrast to the professional EA tools discussed 
in the prior section, this tool is not intended to be a 
professional EA tool nor to provide or compete with any of 
their features. Rather, the focus and point of this prototype is 
to demonstrate the practical feasibility of the D2F approach 
and to show one possible implementation approach. D2F 
approach is independent of any specific EA tool, and any EA 
tool could incorporate D2F or some subset thereof. 
ArchiSurance data is used here to help illustrate the 
implementation. 
A. D2F EA Tool Requirements 
To develop our D2F EA tool and show its feasibility, we 
solicited our requirements from sources in the literature to 
ensure we use a sufficiently generalized set of requirements. 
1) EA visual requirements: Naranjo et al. [30] describe 
general visual requirements for EA tools summarized in 
Table III. We oriented our implementation on these EA tool 
visual requirements. 
TABLE III.  
EA TOOL VISUAL REQUIREMENTS 
ID 
Name 
MVE 
Maximize Visual Economy 
EVE 
Enhance Visual Expressiveness 
MN 
Minimize the Noise 
NI 
Navigate and Interact 
KC 
Keep the Context 
DNI 
Derive New Insights 
GSC 
Guarantee Semantic Correspondence 
 
2) EA analysis requirements: Naranjo et al. [30] describe 
general analysis requirements that EA tools should support, 
and is summarized in Table IV. We oriented our 
implementation on these EA tool analysis requirements. 
TABLE IV.  
EA TOOL ANALYSIS REQUIREMENTS 
ID 
Name 
IRD 
Identify and Relate Domains 
EKE 
Emphasize Key Elements 
OFI 
Offer a Focus of Interest 
FSD 
Facilitate Structural Diagnosis 
DSC 
Display Semantic Characteristics 
UAQ 
Uncover Architectural Qualities 
PFM 
Provide a Flexible Metamodel 
 

134
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
3) EA viewpoint requirements: the tool should support 
the configurable mapping of EA data to visualization types 
and a filtering capability. For determining initial viewpoints 
to consider implementing in our prototype and prove the 
feasibility of D2F, we used Khosroshahi et al. [31] as a 
reference. It provides a best-practice Enterprise Architecture 
Management Pattern Catalog (EAMPC) that describes 
concern-specific viewpoints (V-Patterns), which can be used 
as best-pattern reusable building blocks to tailor an 
organization-specific EAM approach. These viewpoint 
patterns (V-patterns) were analyzed, and due to project time 
and resource constraints we limited our initial support to the 
subset shown in Table V. This in no way indicates an inherent 
limit of D2F nor the EA tool to not support the other 
viewpoints, but rather this set is sufficient to demonstrate key 
viewpoint capabilities and show that D2F can be practically 
applied. Those not initially implemented due to time and 
resource constraints for the prototype are: 
• 
V-110 Business application usage 
• 
V-112 Application costs 
• 
V-115 Number of interfaces per business 
application 
• 
V-116 Number of redundant business functions per 
business application 
• 
V-117 Number of business applications used 
within a functional domain 
• 
V-118 Standard conformity of business 
applications 
• 
V-120 Functional scope of a business application 
4) D2F-based requirements: Requirements based on the 
D2F principles and qualities described in Section III.B and 
listed in Table V should be shown to be feasible or supported 
by tooling (see Table VI). However, P:ActProc, P:Act, P:AI, 
and P:Trc (shown in italics) were not specified or yet 
implemented for the prototype due to time and resource 
constraints. 
TABLE VI.  
D2F SUPPORT REQUIREMENTS 
Acronym 
Principles and Qualities 
P:Dig 
Digitized 
P:Meta 
Meta (self-describing) 
P:Lnkd 
Linked 
P:Dyn 
Dynamicity 
P:Hol 
Holistic 
P:Hyp 
Hyper-models 
P:ActProc 
Actuality processing 
P:Anyltcs 
Analytics 
P:Act 
Actionable 
P:AI 
Automation/Intelligence 
P:Trc 
Traceability/Logging 
 
5) EA data model requirements: the tool should support 
the import of common EA information models and flexible 
information schemas. In particular, the popular ArchiMate 
[32] EA modeling language, which can model the motivation, 
structures, and behavior related to strategy, business, 
application, technology, physical, and implementation 
aspects for business organizations, and BPMN, which can 
model business processes at a technical detailed level.  
B. D2F EA Tool Architecture 
The following architectural principles, based on the 
expected features and functionality and in consideration of the 
requirements mentioned above in Section IV.A, played a 
significant role in structuring the implementation solution: 
• 
AP:enterprise information model agnostic  
o 
Supports 
EA 
information 
model 
data 
interchange. 
TABLE V.       IMPLEMENTED EA VIEWPOINTS AND ASSOCIATED STAKEHOLDER CONCERNS FROM [31] 
ID 
Name 
Concerns 
V-107 
Business application technical or business status 
See subviewpoint 
V-107.1 Complexity of business applications 
C-124 Reduce application landscape complexity 
V-108 
Physical component status 
See subviewpoint 
V-108.2 Evaluate potential removal candidates 
C-129 Remove monolithic applications 
V-108.4 Increase transparency of application landscape 
C-34 Look of long-term application landscape 
C-62 Determine business capabilities of application landscape 
C-119 Definition of target application landscape 
C-157 Detection of consolidation potential 
V-109 
Transparency about which physical components are used by 
which business applications 
C-41 Determine used infrastructure for applications 
C-147 Merge two different application landscapes  
C-169 Architectural assessment of change requests 
V-111 
Business application status within a specific business capability 
See subviewpoint 
V-111.1 Use of business applications 
C-62 Determine business capabilities of application landscape 
C-142 Map business applications to business capabilities 
V-111.2 Relation between business capability and business application 
C-147 Merge two different application landscapes 
C-157 Detection of consolidation potentials 
V-113 
Technical or business status of business application 
See subviewpoint 
V-113.1 Complexity of business applications 
C-124 Reduce application landscape complexity 
V-114 
Layer diagram to visualize IT landscape status 
C-98 Determine shutdown impact of infrastructure component 
V-119 
Number of infrastructure components used by a business 
application 
C-120 Measure changes in application landscape 
C-124 Reduce application landscape complexity 
C-141 Get transparency about IT costs 
 
 

135
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
o 
Supports flexible meta-models or schemas.  
• 
AP:flexible metadata relation and tagging capabilities  
o 
Enables additional knowledge to be flexibly 
joined to any elements/views. 
• 
AP:flexible visualization 
o 
Support 
various 
visual 
types 
and 
parameterization. 
o 
Support the configuration and mapping of EA 
data to visualization types and filtering. 
o 
Provide interactive and dynamic visual 
analytical capabilities. 
• 
AP: client web-centric cross-platform access 
o 
Supports access and involvement  of diverse 
stakeholders from anywhere on any platform. 
• 
AP: cloud data/service backend access  
o 
All data needed for EA tool is accessible and 
integratable, to minimize the inconsistency and 
redundancy issues resulting from locally-
installed applications or isolated data. 
• 
AP:internal common simple data format (JSON)  
o 
All data can be converted to/from this format. 
• 
AP: graph database 
o 
Supports flexible (re)structuring of data 
dependencies between elements via a graph 
structure. 
 
 
Figure 8.  D2F EA Tool Architecture. 
As shown in the diagram in Figure 8, the following 
technologies were chosen: 
• 
Node.js was chosen as a runtime environment due to 
its popularity and to maintain front and backend in 
JavaScript. 
• 
Neo4j: graph database that supports the Cypher Query 
Language (CQL). Neo4j was chosen due to its 
popularity as a graph database. 
• 
D3: JavaScript library for dynamic and interactive 
data visualizations, chosen due to its popularity and 
the available functionality. 
• 
EJS: embedded JavaScript templating engine. 
• 
Express: Node.js web application server framework 
handling GET/POST requests from the  client. 
• 
Formidable: Node.js module for parsing form data 
• 
FS: Node.js file system module 
C. D2F EA Tool Implementation 
On the main page when loaded by a browser, the following 
four main tabs as shown in Figure 17 are provided:  
• 
Load data: provides the ability to import data from 
various sources. 
• 
Connection: provides the ability to manage and 
connect data with metadata 
• 
Analysis: provides pre-defined EA Viewpoints and 
filtering options. 
• 
Visualization: provides a flexible visualization option 
to provide custom search and filtering options 
Information about an element can be retrieved by clicking 
on its ID within a table or in a visualization. A new view is 
opened which shows the ID, Name, and Creation timestamp 
as shown in Figure 18.  
The following Cypher statement supports data retrieval for 
this view: 
MATCH (n{id:{idParam}}) 
RETURN n 
 
1) Load data tab. This tab supports importing metadata, 
infrastructure data, BPMN diagrams, and ArchiMate data in 
JSON format (see Figures 17 and 9). Any other formats such 
as XML must be converted beforehand and any special 
characters in keys or values (such as punctuation symbols) 
removed.  Metadata can be imported as well from schema.org 
(e.g., we utilized PhysicalComponent and BusinessProcess) 
or similar sites. Since some of the metadata may not be 
applicable (since they may cover various domains or 
branches of industry), we provide a whitelist and blacklist in 
config.json in order to exclude inapplicable elements and thus 
reduce metadata clutter. The whitelist is for explicit inclusion 
with the assumption that the rest is not applicable, whereas 
the blacklist specifies elements to remove and allowing the 
rest. 
 
Figure 9.  Example ArchiMate data. 

136
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Each element has a name, creation date, and a unique id to 
avoid inconsistencies. Metadata should also provide the 
subclass, type, description, and layer.  
ArchiMate data involved additional folders and subfolders 
analogous to its layers: Business, Application, Technology, 
Motivation, Implementation and Migration, Relations and 
Views. While software to transform an ArchiMate model to a 
Neo4j database model exist, we were not satisfied with the 
conversion results using an Archi plugin [33]. The resulting 
structure differed from the original model while relations were 
converted into nodes. We thus chose to do our own mapping. 
The information about ArchiMate layers are stored via a 
property in the Neo4j database. One challenge was to find the 
individual elements in the various subfolders. The following 
Cypher statement is used to import ArchiMate data:  
CREATE (node:Archi 
{foldername:{folderNameParam}, folderid: 
{folderidParam}, foldertype: {foldertypeparam}, 
instancename:{instanceNameParam}, 
instancenid:{instanceIdParam}, id: {nameParam}, 
identifier:{idParam}, name:{xsitetypeParam}, 
time:{timeParam}}) 
 
2) Connection tab. Metadata can be added or changed as 
seen on the right side of the screenshot shown in Figure 19. 
Once one of the fields is active, applicable context-specific 
recommendations are provided. A single node can be 
associated with metadata by providing a node ID in the top 
field, providing a Meta field, and then pressing the upper 
“Create metaconnection” button. Similarly, to associate a set 
of nodes, the bottom Name field provides a category to select 
the set of nodes, and the bottom Meta field specifies the 
metadata node to which it should be associated.  
MATCH (a {id: {originalIdParam}}) 
SET a.meta = {metaParam}  
RETURN a, {originalIdParam: nodeMetaId, 
metaParam: metaMetaId} 
 
As seen to the left in Figure 20, metadata associations are 
visualized with data elements as blue squares and metadata as 
green triangles. The following Cypher statement supports this 
visualization: 
MATCH (n)  
WHERE EXISTS (n.meta) AND NOT ((n:Meta) OR 
(n.meta = "To be specified"))  
RETURN (n) 
 
3) Analysis tab. This tab provides those predefined EA 
viewpoints listed in Table V. In our implementation of these 
viewpoints, options for filtering the elements by “IT 
Infrastructure”, ArchiMate, or All are provided via the 
respective “Show” buttons in the upper left of the view in 
Figure 21. 
a) V-107 Business application status. In this viewpoint 
business applications are clustered by organizational unit and 
can be allocated multiple times, while color is used to 
visualize some status such as complexity that can be based on 
various metrics. Variants include architectural fit or 
architectural health.  
V-107.1 Complexity of business applications was 
implemented (see screenshot in Figure 21), which deals with 
the following stakeholder concern:  
• 
C-124 Reduce application landscape complexity 
In our implementation, the complexity is based on the 
metric of the number of associations between architectural 
elements. These colors are associated with complexity: green 
(low), yellow (medium), red (high), white (unknown). In 
config.json the thresholds can be adjusted.  
To realize this viewpoint, the following Cypher statement 
is used to find all applications a and their associated business 
unit(s) b:  
MATCH (a) -[] ->(b) 
WHERE ((a.name ="Application") OR 
(a.name="BusinessService") OR 
(a.name="ApplicationFunction") OR 
(a.name="ApplicationService") OR 
(a.name="SystemSoftware") OR 
(a.name="InfraStructureService")) 
AND ((b.name ="BusinessActor") OR 
(b.name="BusinessObject") OR 
(b.name="BusinessProcess") OR 
(b.name="Project")) 
RETURN a, b, labels(a), labels(b) ORDER BY b 
ASC) 
 
The following Cypher statement finds applications that are 
only indirectly associated via some other node. Due to the 
time needed to execute, it is limited to the first 500: 
MATCH (a) - [] ->(c) - [] -> (b) 
WHERE ((a.name ="Application" OR a.meta 
="SoftwareApplication" OR a.meta 
="MobileApplication" OR a.meta = 
"WebApplication") AND b.name ="Project") 
RETURN a, b, labels(a), labels(b) ORDER BY b ASC 
LIMIT 500') 
The following Cypher statement then counts the number 
of relations for each found node: 
MATCH (c {id:{idparam}})-[r]-() 
RETURN count(r) 
b) V-108 Physical Component Status. In this viewpoint 
business applications are clustered by business capability, 
and physical components can be assigned to a business 
application. Color is then used to convey the technical status 
of a physical component.  
V-108.2 Evaluate potential removal candidates was 
implemented (see screenshot in Figure 22), which deals with 
the following stakeholder concern:  
• 
C-129 Remove monolithic applications 
Via the respective “Show” buttons at upper left, the 
elements can be filtered by “IT Infrastructure”, ArchiMate, or 
All. 
In contrast to [33], in our implementation of this viewpoint 
we show all elements that are isolated and that are not 
Metadata, and for this we use the Cypher statement:  
MATCH (a) 
WHERE NOT(a)-[]-() AND NOT a: Meta  
RETURN DISTINCT a, labels(a) 
 
V-108.4 Increase transparency of application landscape 
was implemented (see screenshot in Figure 23), which deals 
with the following stakeholder concerns:  
• 
C-34 Look of long-term application landscape 

137
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
• 
C-62 Determine business capabilities of application 
landscape 
• 
C-119 Definition of target application landscape 
• 
C-157 Detection of consolidation potential 
The following Cypher statement finds infrastructure 
components based on metatags b which are associated with 
capability c: 
MATCH (n) – [] – (b) – [] – (c) 
WHERE (b.meta = ‘SoftwareApplication‘ OR b.meta 
= ‘MobileApplication‘ OR b.meta = 
‘WebApplication‘ OR b.foldername = ‘Application‘ 
OR b.name = ‘Software ‘ OR b.name = 
‘Application‘) AND (n.foldername = ‘Technolo- 
gy‘ OR n.name = ‘PhysicalComponent‘ OR n.meta = 
‘PhysicalComponent‘) AND (c.meta = ‘Capability‘ 
OR c.foldername = ‘Business‘ OR c.name = 
‘Capability‘) 
RETURN n, b, c, labels(n), labels(b), labels(c) 
ORDER BY c ASC 
 
4) V-109 Transparency about used physical components 
for business applications. In this viewpoint, which physical 
components are used by which business applications are 
shown (see screenshot in Figure 24). Since multiple relations 
can exist between elements, we chose to use graphs using the 
D3 forced graph layout. Green triangles are used for physical 
components and yellow crosses for applications. The 
viewpoint deals with the following stakeholder concerns: 
• 
C-41 Determine used infrastructure for applications 
• 
C-147 Merge two different application landscapes  
• 
C-169 Architectural assessment of change requests 
 
To realize this viewpoint, the following Cypher statement 
is used: 
MATCH (n) - [r] - (b) 
WHERE ((n.name ="Application" OR n.foldername 
="Application" OR n.name ="Software" OR n.meta 
="SoftwareApplication" OR n.meta 
="MobileApplication" OR n.meta = 
"WebApplication") AND (b.name = 
"PhysicalComponent" OR 
b.meta="PhysicalComponent" OR b.foldername 
="Technology")) 
RETURN n, r, b, labels(n), labels(b) 
 
5) V-111 Business application status within a specific 
business capability. In this viewpoint, a matrix is used to 
depict business capabilities as rows and business applications 
as columns, while a business or technical status is depicted at 
their intersection. 
Viewpoint 111.1 Use of business applications was 
implemented (see screenshot in Figure 25), which deals with 
the following stakeholder concerns: 
• 
C-62 Determine business capabilities of application 
landscape 
• 
C-142 Map business applications to business 
capabilities 
To realize this viewpoint, the following Cypher statement 
is used: 
MATCH (n) -[r]- (b)  
WHERE (n.foldername = "Business" OR n.meta 
="Capability" OR n.name = "Capab-ility") AND 
(b.name = "Application" OR b.foldername = 
"Application" OR b.meta = "SoftwareApplication" 
OR b.meta = "MobileApplication" OR b.meta = 
"WebApplication")  
RETURN n, r, b, labels(n), labels(b) 
 
V-111.2 Relation between business capability and 
business application was implemented (see screenshot in 
Figure 26), which deals with the following stakeholder 
concerns: 
• 
C-147 Merge two different application landscapes 
• 
C-157 Detection of consolidation potentials 
6) V-113 Status of business application. In this viewpoint 
business applications are listed in a tabular format with a 
column that indicates a business or technical status. 
 
Viewpoint 113.1 Complexity of business applications was 
implemented (see screenshot in Figure 27), with the number 
of relations used as a metric for depicting the complexity of a 
business application. These colors are associated with 
complexity: green (low), yellow (medium), red (high), white 
(unknown). In config.json the thresholds can be adjusted. The 
viewpoint deals with the following stakeholder concern: 
• 
C-124 Reduce application landscape complexity 
To realize this viewpoint, the following Cypher statement 
is used: 
MATCH (a)-[c]-()  
WITH a, count(c) as relation  
WHERE (a.meta ="SoftwareApplication" OR a.meta 
="MobileApplication" OR a.meta = 
"WebApplication" OR a.name="Application" OR 
a.name="Software" OR a.foldername 
="Application") AND NOT a: Meta  
RETURN a, relation, labels(a) 
 
7) V-114 Layer diagram to visualize IT landscape status. 
In this viewpoint, business processes are depicted in the top 
layer, supported by various business applications in the 
middle layer, and the required physical components are 
visualized in the bottom layer (see screenshot in Figure 28). 
In contrast to Khosroshahi et al. [31], we chose to use colors 
and symbols instead of spatially separate layers to 
differentiate the layers, using green triangles for physical 
components, yellow crosses for applications, and red circles 
for business processes. The arrows in the relations show the 
direction of information flow. The viewpoint deals with the 
following stakeholder concerns: 
• 
C-98 Determine shutdown impact of infrastructure 
Component 
To realize this viewpoint, the following Cypher statement 
is used: 
MATCH (n) - [] -(b) - [] - () - [] - (c)  
WHERE ((n.meta ="PhysicalComponent" OR n.name 
="PhysicalComponent" OR n.foldername 
="Technology") AND' (b.foldername ="Application" 
OR b.name ="Software" OR b.meta 
="SoftwareApplication" OR b.meta 
="MobileApplication" OR b.name = 
"WebApplication") AND (c.foldername = "Business" 
AND c.instancename = "Processes"))  
RETURN n, b, c 
 

138
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
8) V-119 Number of infrastructure components used by 
business application. This viewpoint depicts the number of 
infrastructure components used by a specific business 
application (see screenshot in Figure 29), using the number 
and variety of components as a measure. It can be sorted by 
clicking on a column header. The viewpoint deals with the 
following stakeholder concerns: 
• 
C-120 Measure changes in application landscape 
• 
C-124 Reduce application landscape complexity 
• 
C-141 Get transparency about IT costs 
To realize this viewpoint, the following Cypher statement 
is used to find all physical components or applications that are 
used by a business application: 
MATCH (n) - [] - (b)  
WHERE ((n.meta ="PhysicalComponent" OR n.name 
="PhysicalComponent" OR n.foldername 
="Technology") AND (b.foldername ="Application" 
OR b.name ="Software" OR b.meta 
="SoftwareApplication" OR b.meta 
="MobileApplication" OR b.meta = 
"WebApplication" OR b.name="Application"))  
RETURN b.id 
Then using the application ID, all components and 
applications associated with it are counted:  
MATCH (b {id: {idparam}}) - [r]- (n)  
WHERE (n.name ="PhysicalComponent" OR 
n.foldername ="Technology")  
RETURN b.id, count(r), labels(b)', {idparam: 
record._fields[0] } 
 
9) Visualization tab. The fourth and final tab provides 
customizable graph-based visualization as shown in the 
screenshot in Figure 30, supporting analysis and exploring. 
Elements are differentiated by both color and shape. Initially 
only the first 200 nodes are loaded to limit the response time, 
since initially one is unclear about the actual interest of the 
user. 
The Cypher statement used to support this visualization is: 
MATCH (n) - [r] - (b) 
WHERE NOT n:Meta 
RETURN n, r, b, labels(n), labels(b) LIMIT 200 
 
The resulting JSON is then processed by the D3 JavaScript 
library using forced layout, and an SVG is created. Each node 
supports mouseover, mousedown, mouseup, and mouseout 
events. The interface supports zoom. Search is supported in 
the upper right of the visualization tab, and supports any 
Cypher query, while past queries are shown in a dropdown list 
(see Figure 10). Pressing search sends a POST to app.js. 
Filtering is provided to support users who are not familiar 
with Cypher. It supports element labels, names, and IDs via 
checkboxes, while metadata is not supported. First a label 
from the list of possible labels is selected as shown in Figure 
11.  
The Cypher statement used to support filtering is: 
MATCH (n) 
WHERE NOT n:Meta 
RETURN DISTINCT labels(n) 
After a label is selected, a name selection dialog as shown 
in Figure 12 is displayed. Then a list of matching IDs is 
offered as shown in Figure 13. 
 
Figure 10.  Search functionality. 
 
Figure 11.  Filtering label selection dialog. 
 
Figure 12.  Filtering name selection dialog. 

139
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 13.  Filtering ID selection dialog. 
 
Figure 14.  Dialog for manually adding or deleting a node or relation. 
 
Figure 15.  Dialog for manually changing a node or relation. 
Adding or deleting a node or relation is also supported via 
the dialog shown in Figure 14, while changing a node or 
relation is supported with the dialog shown in Figure 15. 
D. D2F EA Tool Validation 
To validate the implementation against requirements, we 
refer to the requirements described in Section IV.A. As to EA 
visual requirements (see Table III):  
• 
Maximize 
Visual 
Economy 
(MVE): 
the 
implementation was able to demonstrate that concepts 
can be differentiated with a concrete syntax for 
specific concepts, e.g., with colors and shapes in V-
109 (Figure 24) and V-114 (Figure 28). 
• 
Enhance Visual Expressiveness (EVE): multiple 
visual attributes can be used together to assist with 
differentiating concepts, e.g., both colors and shapes 
were used in V-109 (Figure 24) and V-114 (Figure 
28) to differentiate the same concepts. ´ 
• 
Minimize the Noise (MN): only a single ID was used 
to identify an element visually, minimizing irrelevant 
information (Figure 20). 
• 
Navigate and Interact (NI): various common user 
navigation techniques support analysis.  
• 
Keep the Context (KC): we applied self-organizing 
layouts to deal with placement and relatedness issues 
in large models (Figure 20). 
• 
Derive New Insights (DNI): our implementation 
supports new insights via ad-hoc queries, e.g. via 
Cypher statements (Figure 10). 
• 
Guarantee Semantic Correspondence (GSC): legends 
are provided to support graphic and conceptual 
correspondence (e.g., as in Figure 23). 
As to EA analysis requirements (Table IV): 
• 
Identify and Relate Domains (IRD): multiple 
domains, such as BPMN for process and ArchiMate 
for EA models can be differentiated and related (see 
Figure 28). 
• 
Emphasize Key Elements (EKE): visual emphasis or 
distinction for elements of high structural or semantic 
importance is provided, for instance by interactive 
support via node selection (emphasizing relations of a 
node to its neighbors) or by color (green, yellow, red) 
as in Figure 21. 
• 
Offer a Focus of Interest (OFI): spatial proximity is 
used to tie or cluster similar elements (e.g., Figure 
24). 
• 
Facilitate 
Structural 
Diagnosis 
(FSD): 
the 
visualization tab provides various structural diagnosis 
opportunities (e.g., Figures 23 and 28). 
• 
Display Semantic Characteristics (DSC): semantic 
characteristics can be displayed that are not directly in 
the model, as the viewpoints showed with the 
relational complexity metrics (Figure 27). 
• 
Uncover Architectural Qualities (UAQ): various 
supported viewpoints can be helpful in uncovering 
architectural qualities, such as frequency of use, 
isolation, etc. (Figure 21). 

140
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
• 
Provide a Flexible Metamodel (PFM): our visual 
model and mapping is decoupled from the conceptual 
models, 
allowing 
for 
flexible 
visualization 
opportunities (Figure 19). 
Various EA viewpoints from EAMPC as listed in Table V 
were demonstrated to be supported, and the rest appear 
supportable with additional effort, indicating the flexibility of 
the D2F approach and the EA tool implementation 
architecture. 
Various D2F principles and qualities are shown to be 
supported, namely digitized data and models, support for 
flexible metadata (self-describing), the elements are easily 
linked, dynamicity is supported should an element change, the 
various models are holistically viewed, hyper-models are 
supported, and analytics are shown.  
In summary, the D2F EA tool was able to fulfill the given 
requirements with this prototype and show the feasibility and 
practicality of implementing the Digital Diamond Framework 
principles in an EA tool. The supported viewpoints showed 
the diversity of viewpoints and stakeholder concerns that 
could be addressed with the approach. 
V. 
EVALUATION 
A case study and performance measurements provide 
initial insights into the practicality of our solution. Because of 
security concerns, it is difficult to receive permission to access 
company internal IT infrastructure data and be able to publish 
any related visualization and evaluation data. We thus chose 
to use fictional data for our evaluation case study. 
A. Case Study with ArchiSurance 
The Open Group created the ArchiSurance case study [34] 
as a fictitious example to illustrate the realistic use of the 
ArchiMate enterprise modeling language. It is considered in 
the context of the Open Group’s TOGAF Framework, which 
is a method for EA. In this case study, we ignore the TOGAF 
method aspects and instead focus on the use of the 
ArchiSurance data. It is modeled using ArchiMate 3 and 
incorporates EA elements from the baseline and target 
business, application architecture, data architecture, and 
technology architecture. The fictitious ArchiSurance is the 
result of a merger of three previously independent insurance 
companies: 
• Home & Away, specializing in homeowners’ insurance 
and travel insurance 
• PRO-FIT, specializing in auto insurance 
• Legally Yours, specializing in legal expense insurance 
The data consists of 120 elements and 176 relations and is 
available in an XML data format. We converted the data 
format to JSON, removing special characters present in the 
keys. The following screenshot in Figure 31 shows the actor 
cooperation view for ArchiSurance in the tool ArchiMate. 
A sample subset of stakeholder concerns from 
Khosroshahi et al. [31] as shown in Table VII will be used in 
conjunction with the Viewpoints of Table IV to show how the 
ArchiSurance data can be analyzed with the D2F prototype. 
TABLE VII.  
CONCERNS 
ID 
Name 
C-41 Determine used infrastructure for applications 
C-62 Determine business capabilities of application landscape 
C-98 Determine shut-down impact of infrastructure component 
C-124 Reduce application landscape complexity 
C-129 Remove monolithic applications 
 
1) Determine used infrastructure for applications (C-
41): V-109 can be used as shown with ArchiSurance data in 
Figure 32 to show what infrastructure is used by which 
applications. 
2)  Determine business capabilities of application 
landscape (C-62): to show the business capabilities of the 
business applications, V-111 can be used as shown with 
ArchiSurance data in Figure 33. 
3) Determine shut-down impact of infrastructure 
component (C-98): to show the shutdown impact of an 
infrastructure component, V-114 can be used as shown with 
ArchiSurance data in Figure 28. 
4) Reduce application landscape complexity (C-124): to 
reduce the application landscape complexity, the following 
viewpoints shown with ArchiSurance data can be used to 
provide insights: V-107.1 (see Figure 34) complexity of 
business applications, V-113.1 (see Figure 35) complexity of 
business applications in tabular form by business application, 
and V-119 (see Figure 35) number of infrastructure 
components used by a business application. 
5) Remove monolithic applications (C-129): V-108.2 
Evaluate potential removal candidates provides information 
useful for this concern. E.g., in Figure 22, the Unix Server 
1059 has no relation to any other element, and is thus a 
possible candidate for removal. 
B. Performance and Scalability of Graph Database 
An initial characterization of the performance and 
scalability of our prototype implementation used an Acer 
Aspire X3-710 notebook with a i5-6400@2.7GHz CPU, 4GB 
RAM, Win10x64, Firefox, and Neo4j Community Edition 
(note that the Enterprise Edition this is intended for scalable 
commercial deployments). Thus, this is not an ideal or typical 
cloud deployment server setup, but rather a setup to 
investigate our implementation and characterize how the 
graph database behaves as we increase nodes. For any serious 
evaluation, real enterprise data and equivalent cloud and 
enterprise versions of components and databases should be 
used. 
We measured the latency, CPU utilization, and RAM 
utilization based on this Cypher query to find all elements with 
relations as we increased the number of nodes: 
MATCH (n) – [r] – (b)  
RETURN n, r, b, labels(n), labels(b) 
The resulting measurements are shown in Table VIII and 
plotted in Figure 16. We note that the latency did not 
automatically go up as the number of nodes increased from 
250 to 1750. As the nodes increase from 250 to 2500, the 
latency goes from 32 to 79 seconds. Between 1250 to 1500 

141
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
nodes we note significant changes in CPU utilization, between 
1750 and 2000 nodes significant changes in latency, and 
between 2250 and 2500 nodes significant changes in RAM.  
TABLE VIII.  QUERY LATENCY (IN MILLISECONDS), CPU UTILIZATION 
(IN %), AND RAM (IN MIB) AS THE  NUMBER OF NODES INCREASES. 
Nodes 
CPU  
RAM (MiB) 
Latency (ms) 
250 
38% 
47 
32650 
500 
25% 
50 
35812 
750 
26% 
57 
34000 
1000 
38% 
56 
35479 
1250 
55% 
59 
34000 
1500 
82% 
63 
44495 
1750 
79% 
65 
36186 
2000 
85% 
69 
60832 
2250 
87% 
72 
66644 
2500 
73% 
123 
78580 
 
 
Figure 16.  RAM (MiB), Latency (seconds), and CPU (%) vs. number of 
nodes. 
This indicates that especially as CPU utilization increases 
beyond 50%, performance impacts may become noticeable; 
thus, deployment planning should consider the maximum 
number of expected nodes and plan sufficient CPU and RAM 
with appropriate load-balancing techniques, or attempt to use 
the Enterprise Edition of Neo4j. On a positive note, below 
these thresholds increasing the number of nodes does not 
automatically have an equivalent impact on query latency.  
C. D2F Assessment 
In summary, the D2F prototype shows that D2F can be 
supported by any EA tool willing to adopt the D2F principles. 
Specifically, our prototype furthermore supports the Jugel el 
al. [8] visual EAM analytic tool findings mentioned in Section 
I, namely: 
View configuration: views can be easily configured to 
react to dynamic information demands. Furthermore, 
complete flexibility and interaction for queries is provided. 
View consideration: a method is provided via multiple 
browser tabs, such that several views can be considered in 
parallel to avoid losing the overall context. Additionally, the 
views can be kept up to date since they are based on a datastore 
that can extract, transform, and load enterprise data. 
Interacting with views: additional interaction and visual 
analytics capabilities are provided to help analyze and plan 
EAs more efficiently. 
Communication & collaboration: to better support 
communication & collaboration, additional knowledge can be 
added to views via its flexible (meta)tagging capability. 
Stakeholder identification: by providing enhanced visual 
analytic capabilities with real EA data, actual stakeholders 
that have to be involved in decision-making processes can 
more readily be identified. 
Other EA tool implementations could be implemented to 
support the D2F, our prototype implementation and 
performance characterization shown here is primarily 
intended to show that it is feasible and that graph-based 
implementation approaches can also work.   
VI. 
CONCLUSION 
A sustainable EAF is needed that can embrace the 
digitized enterprise era. This paper described the Digital 
Diamond Framework (D2F) to support digitized enterprises 
with structure, order, modeling, documentation, and analysis 
to enable more responsive and agile enterprises with better 
alignment of business plans and initiatives with the actual 
enterprise state. Key areas, principles, activities, facets, and 
maturity levels were elucidated. 
The D2F EA tool prototype showed the feasibility of D2F, 
and that an EA tool based on D2F can support important 
features for enterprises in the digital age: enterprise 
information model agnostic, flexible meta-models, tagging for 
adding knowledge to elements/views, easily create and 
(re)configure interactive dynamic views, support visual 
analytical capabilities, and via a web-centric implementation 
diverse stakeholders can be incorporated. The implementation 
also demonstrated the power of graph databases for accessing 
and conveying facets in a very flexible manner. Furthermore, 
hyper- models were demonstrated, incorporating BPMN and 
ArchiMate models in one repository.  
To be of significant value for enterprises in the digital age, 
integration and customization of EA tools to each specific 
enterprise is required. Future work includes studying the D2F 
EA tool prototype in industrial case studies. 
 
 
 

142
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
APPENDIX 
 
 
Figure 17.  Load data tab and other tabs. 
 
Figure 18.  Additional element information. 
 
Figure 19.  Metadata to data association screen. 

143
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 20.  Metadata association visualization. 
 
Figure 21.  V-107.1 Complexity of business applications. 

144
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 22.  V-108.2 Evaluate potential removal candidates. 
 
Figure 23.  V-108.4 Increase transparency of application landscape. 

145
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 24.  V-109 Transparency about used physical components for business applications. 
 
Figure 25.  V-111.1 Use of business applications. 

146
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 26.  V-111.2 Relation between business capability and business application. 
 
Figure 27.  V-113.1 Complexity of business applications. 

147
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 28.  V-114 Layer diagram to visualize IT landscape status. 
 
Figure 29.  V-119 Number of infrastructure components used by business application. 

148
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 30.  Visualization tab. 
 
Figure 31.  ArchiSurance Actor Cooperation View. 

149
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 32.  V-109 with ArchiSurance data. 
 
Figure 33.  V-111 with ArchiSurance data. 

150
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Figure 34.  V-107.1 with ArchiSurance data. 
 
Figure 35.  V-111 with ArchiSurance data. 
 
Figure 36.  V-119 with ArchiSurance data. 
 
 

151
International Journal on Advances in Software, vol 12 no 1 & 2, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
ACKNOWLEDGMENT 
The author thanks Sabine Hager for assistance with the 
prototype implementation and evaluation. 
 
REFERENCES 
[1] R. Oberhauser, “The Digital Diamond Framework: An 
Enterprise Architecture Framework for the Digital Age,” 
Proceedings of The Tenth International Conference on 
Information, 
Process, 
and 
Knowledge 
Management 
(eKNOW 2018), IARIA, pp. 77-82, 2018. 
[2] J. Zachman, "A framework for information systems 
architecture," IBM Systems Journal, 26(3), pp. 276-292, 
1987. 
[3] M. Blosch and B. Burton, “Hype Cycle for Enterprise 
Architecture, 2017,” Gartner, 2017. 
[4] M. Muro, S. Liu, J. Whiton, and S. Kulkarni, "Digitalization 
and the American Workforce," Brookings Institution 
Metropolitan Policy Program, 2017.  
[5] C. Munns, I Love APIs 2015: Microservices at Amazon. 
[Online]. 
Available 
from: 
https://www.slideshare.net/apigee/i-love-apis-2015-
microservices-at-amazon-54487258 2019.06.02 
[6] I. Jacobson, EA Failed Big Way! [Online]. Available from: 
http://blog.ivarjacobson.com/ 2019.06.02 
[7] S. Roeleven, Why Two Thirds of Enterprise Architecture 
Projects Fail. ARIS, 2011. [Online]. Available from: 
https://www.computerworld.com.au/whitepaper/370709/wh
y-two-thirds-of-enterprise-architecture-projects-fail/ 
2019.06.02 
[8] D. Jugel, C. Schweda, A. Zimmermann, and S. Läufer,  
"Tool Capability in Visual EAM Analytics," Complex 
Systems Informatics and Modeling Quarterly (CSIMQ), 
Issue 
2, 
pp. 
46-55, 
2015, 
http://dx.doi.org/10.7250/csimq.2015-2.04 
[9] R. Nolan and D. Mulryan, “Undertaking an Architecture 
Program,” Stage by Stage, 7(2), pp. 63- 64, 1987. 
[10] The Open Group, “TOGAF Version 9.1,” Van Haren 
Publishing, 2011. 
[11] Chief Information Officers Council: Federal Enterprise 
Architecture Framework Version 1.1. 
[12] IFAC-IFIP Task Force, “GERAM - Generalized enterprise 
reference architecture and methodology, version 1.6.3,” 
1999.  
[13] B. Stroud and A. Ertas, "A taxonomy for enterprise 
architecture framework," 2015 Annual IEEE Systems 
Conference (SysCon) Proceedings, Vancouver, BC, 2015, 
pp. 828-831. doi: 10.1109/SYSCON.2015.7116853 
[14] E. Sultanow, C. Brockmann, K. Schroeder, and S. Cox, "A 
multidimensional 
Classification 
of 
55 
Enterprise 
Architecture Frameworks," Americas Conference on 
Information Systems (AMCIS), 2016. 
[15] N. Lim, T. Lee, and S. Park, "A Comparative Analysis of 
Enterprise Architecture Frameworks Based on EA Quality 
Attributes," 2009 10th ACIS International Conference on 
Software Engineering, Artificial Intelligences, Networking 
and Parallel/Distributed Computing, 2009, pp. 283-288. doi: 
10.1109/SNPD.2009.97 
[16] Survey of Architecture Frameworks. [Online]. Available 
from: 
http://www.iso-architecture.org/ieee-
1471/afs/frameworks-table.html 2019.06.02 
[17] D. 
Matthes, 
Enterprise 
Architecture 
Frameworks 
Kompendium. 
Xpert.press, 
Springer-Verlag 
Berlin 
Heidelberg 2011 DOI 10.1007/978-3-642-12955-1_3 
[18] “Gartner’s 2011 Global Enterprise Architecture Survey: EA 
Frameworks Are Still Homemade and Hybrid,” Gartner, 
2012. 
[19] L. Meertens, M. Iacob, and L. Nieuwenhuis, “Developing 
the    business modelling method,” In: First Int’l Symp. Bus. 
Model. & Softw. Design, BMSD 2011, SciTePress, pp. 88-
95, 2011. 
[20] M. Bernaert, G. Poels, M. Snoeck, and M. De Backer, 
“CHOOSE: 
Towards 
a 
metamodel 
for 
enterprise 
architecture in small and medium-sized enterprises,” 
Information systems frontiers, 18(4), pp. 781-818, 2016. 
[21] F. Matthes, S. Buckl, J. Leitel, and C. M. Schweda, 
„Enterprise Architecture Management Tool Survey 2008”. 
Software Engineering for Business Information Systems 
(sebis), Technische Universität München, 2016. 
[22] F. Matthes, M. Hauder, and N. Katinszky, „Enterprise 
Architecture Management Tool Survey 2014 Update,” 
Software Engineering for Business Information Systems 
(sebis), Technische Universität München, 2014. 
[23] E. Sultanow, J. Christian, S. Lieben, and N. Parcej, EA-
Frameworks – Teil 3: Ein Vergleich von 34 EA-Tools. 
[Online]. Available from: http://newsolutions.de/it/ea-
frameworks-teil-3-ein-vergleich-von-34-ea-tools/ 
2019.06.02 
[24] C. Filss, „Vergleichsmethoden für Vorgehensmodelle,” 
Thesis, Technical University Dresden, 2004. 
[25] S. Roth, M. Zec, F. Matthes, "Enterprise Architecture 
Visualization Tool Survey 2014," Technical Report, sebis, 
Technical University Munich, 2014. 
[26] N. Forsgren, G. Kim, N. Kersten, J. Humble, and A. Brown, 
"2017 State of DevOps report," Puppet + DORA, 2017. 
[Online]. 
Available 
from 
https://puppet.com/resources/whitepaper/2017-state-of-
devops-report 2019.06.02 
[27] D. Ruby, Erecting the Framework, Part III. 2004-03-18 
Interview with John Zachman. [Online]. Available from 
http://archive.visualstudiomagazine.com/ea/magazine/sprin
g/online/druby3/default_pf.aspx 2019.06.02 
[28] G. Shanks, E. Tansley, and R.  Weber, "Using ontology to 
validate conceptual models," Communications of the ACM, 
46(10), pp. 85-89, 2003. 
[29] R. Oberhauser and G. Grambow, “Towards Autonomically-
Capable Processes: A Vision and Potentially Supportive 
Methods.” In Adv. in Intell. Process-Aware Information 
Systems: Concepts, Methods, and Technologies. Springer, 
2017, pp. 79-125. 
[30] D. Naranjo, M. Sanchez, and J. Villalobos, "Evaluating the 
capabilities of Enterprise Architecture modeling tools for 
Visual Analysis," Journal of Object Technology, vol. 14, no. 
1, 2015. 
[31] P. A. Khosroshahi, M. Hauder, A.W. Schneider, and F. 
Matthes, "Enterprise Architecture Management Pattern 
Catalog," Sebis, 2015. 
[32] I. Band et al., "ArchiMate 3.0 Specification," The Open 
Group, 2016. 
[33] Archi 
Plugin. 
[Online]. 
Available 
from: 
https://github.com/archi-contribs/database- 
plugin/blob/master/v2/org.archicontribs.database_v2.1.3.jar 
2019.06.02 
[34] H. Jonkers, I. Band, and D. Quartel, "ArchiSurance Case 
Study Version 2," The Open Group, 2012.  
 

