Optimum Cluster Size for Cluster-Based Communication in Wireless Sensor
Network
Goutam Chakraborty
Dept. of Software & Information Science
Iwate Prefectural University, Takizawamura, Japan
Email: goutam@soft.iwate-pu.ac.jp
Abstract—Clustering of sensor nodes to reduce energy ex-
pense during data communication covers a large body of
literature. Without clustering energy of sensor nodes near the
sink drain fast, which in turn kills more rapidly nodes at
further hop distances. Cluster-based routing protocol alleviates
this problem. Yet, in cluster-based approaches too, for hop-
by-hop communication, power of nodes nearer to the cluster
head (CH) are drained more rapidly compared to those at the
periphery, as they are more often used as hopping nodes. This
is more so when the cluster is big. For too small cluster, there
is no meaning in clustering. Uniform dissipation is achieved by
reconﬁguring the clusters at intervals, which is a big signalling
overhead. Most of the previous works are on efﬁcient cluster
formation, and on using more than one CH to reduce SNR. In
this work, we show that there is an optimum size of a cluster,
for which the power dissipation at every node could be made
uniform over a time, by transmitting packets at different energy
levels. It is a co-operative approach for data transportation,
where different portions of packets are forwarded to different
nodes towards the CH. This way we can avoid frequent cluster
reconﬁguration. In this paper, the above goal is formally deﬁned
as a constrained optimization problem, for linear array of
sensor nodes. It turns out to be a non-linear optimization
problem, which is simpliﬁed to a linear optimization problem
and solved. It is shown that the problem has a solution when
the cluster diameter is 6 (in terms of hop count) or less. Cluster
of bigger size has no solution. We also formulate the problem,
when nodes are uniformly distributed over a plane.
Keywords-Sensor nodes’ power decay; Constrained optimiza-
tion problem; Linear programming;
I. INTRODUCTION
Regarding sensor network software, energy efﬁciency is
the main motivation of all aspects of researches, rang-
ing from OS [2], data acquisition[3], data dissemina-
tion/diffusion [4], query processing [5], media access control
[6], communication protocol/routing [8] [7] [10] [11] to
network topology [9]. In this work, our motivation is a novel
energy-aware communication protocol.
Sensor network installations can be categorized into two
classes according to the motivation of use
1) Individual sensor node and information it collects is
important. Applications are like ﬁre alarm, icy road
condition, frosting of grape bunch (suitable for brew-
ing ice-wine), surveillance camera, structural health
of buildings and bridges, etc.. Here the sensor nodes’
locations are usually ﬁxed, though sometimes they
may be moved in controlled direction remotely.
2) Individual sensor data is not important. Assembled
data from a region or cluster is all that is to be
delivered. The applications are mainly environmental
monitoring for climate changes or like. Nodes may
drift due to bad weather or ﬂooding.
In scenario 1), it is obvious that the longevity of every
sensor nodes is important. Even in scenario 2), we would
like to see that most of the sensor nodes sustain for as long
as possible, because information from all segments of the
sensor network is equally important.
The main goal of communication protocol for wireless
sensor networks (WSNs) should be (1) slower decrement of
the average battery power with time, as well as (2) lower
variation of the distribution of the remaining battery level.
To our best of knowledge, all the works on energy aware
communication protocols emphasize on item (1) above. But,
in reality both (1) and (2) are important criteria.
A. Existing works and where wediffer
The WSN model used by almost all works is as shown
in Fig. 2.
Senssor node
*
Sink 
*
Figure 1. A WSN where sensor nodes are spread with uniform distribution,
and the Sink is placed at a corner
We assume that nodes are able to transmit at different
distances and control their transmission power accordingly.
Assuming the power required to transmit to a distance d
328
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

is proportional to d2, a direct transmission protocol will
be very inefﬁcient - considering that all nodes generate
data packets at the same rate. Obviously, nodes at further
distances from the ”Sink” will die soon. There is the class
of power aware protocols [1], where packets are routed
through intermediate nodes - thus limiting the transmission
range, thereby saving energy. Here, nodes near the sink
will be overly loaded and die early, cascading the effect
to next layers of nodes. The more conventional approach
is clustering, where a cluster head (CH) collects packets
from all members of the cluster, and transmits to sink
through intermediate CHs. Here too, the nodes near to the
CH are overloaded. LEACH protocol [10] ﬁrst proposed to
dynamically change the cluster conﬁguration, so that the
load is uniformly shared by nodes, over a long time. They
showed much longer lifetimes for the sensor nodes.
But reconﬁguring clusters is a power heavy task. In this
work, we have shown that, if the nodes do not always send
packets to their nearest nodes, but transmits different ratios
of packets to different distances, towards the CH, the power
depletion at different nodes could be made uniform. We have
shown that this is possible for clusters of size up to 6 hops in
diameter. We formulated this as a constrained optimization
problem and solved the required ratios.
The rest of the paper is organized as follows. In Section II,
we formally deﬁne our goal and corresponding optimization
problem, for simple linear network. In Section III, we gave
solutions to cluster of radius 2 and 3 hops. We also show
that there is no solution for larger cluster that would satisfy
the constraints of the problem. In Section IV, we extended
the problem deﬁnition for WSN spread over a plane. Finally,
discussion for further work and conclusion is in Section V.
II. PROBLEM DEFINITION, OPTIMIZATION CRITERION
AND CONSTRAINTS
A. Network model and assumptions
d
......
Sink
node 1
node 2
node 3
node N
d
d
Figure 2.
Simple linear node distribution
To simplify the problem, instead of a two dimensional
distribution, we will start with a linear network of nodes
on a straight line. We will further assume that N nodes are
placed equidistant, as shown in Fig. 3. Let us consider the
distance between two nodes be d. We assume that the nodes
can adjust the transmission power to transmit packets to the
target destination. Further, every node creates on an average
same number of packets, say m, in a speciﬁc interval of
time.
B. Deﬁning the Constrained Optimization Problem
We have N-nodes at equal distances d. This includes the
sink node, which is node-1. Every node generates m packets.
Different proportion of these m packets are forwarded to
different nodes towards the sink. In previous works, trans-
mission is always one hop, causing overload of nodes near
the CH.
Every node has to service (transmit packets to reach
destination) - not only packets it generates, but also packets
it receives from nodes further away from the CH. Nodes
transmit different portions of its packets (own packets plus
those received from behind) to different hop distances to-
wards the sink. This is pictorially explained in Fig. 4.
node j
Pkts to service 
R    
N
2
R  
  
x
x
x
x
x
x
x
x
x
21
32
N3
x
N2
N1
31
node 1
Sink
Pkts to service 
node 2
  
3
node 3
Pkts to service 
R    
Pkts to service 
R    
j
Nj
j3
j2
j1
....
....
....
....
node k
node i
node N
Figure 3.
The linear network showing proportion of packets transmitted
to different nodes towards the sink
The total number of packets the jth node has to service
is, say, Rj. Rj is the sum of packets it generates (i.e., m),
plus all the packets it receives from nodes behind it. Thus,
node-k has to service Rk packets. Out of that, it sends xkj
fraction directly to node-j, where j < k. We can write
Rj
=
m +
N
X
k=j+1
Rk xkj
(1)
=
m ×
£
1 + {x(j+1)j} + {x(j+2)(j+1) x(j+1)j
+x(j+2)j} + {x(j+3)(j+2) x(j+2)(j+1) x(j+1)j
+x(j+3)(j+2) x(j+2)j + x(j+3)(j+1) x(j+1)j
+x(j+3)j} . . .
¤
(2)
The cost of forwarding all those packets towards the sink
is now considered. Say, Cj is the cost of transmitting packets
at sensor node-j. Let us suppose that the power required to
transmit a packet to a distance d is dν, where ν is somewhere
between 2 and 3. We can write,
Cj = Rj ×


1
X
i=j−1
xji {(j − i) × d}ν


(3)
The problem is to ﬁnd all xji s, where i < j. The
optimization criterion is to minimize Cjs. The constraints
are as follows:
C2 = C3 = . . . = Ci . . . = CN
(4)
329
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

0 ≤ xji ≤ 1 for all i < j, i ≥ 1, j > 1
(5)
1
X
i=(j−1)
xji = 1
(6)
Eq. 4 says that the battery power of all nodes should drain
equally. Eq. 5 says that the fraction of the packets forwarded
to different nodes should lie between 0 to 1. Eq. 6 says that
every node needs to transmit all the packets it is needed to
service.
A general analytical solution for xji is not possible. We
solved this problem for different values of N, namely for
N = 2, 3, 4, . . .. We will further show that there is no
feasible solution for N > 4.
III. SOLVING THE OPTIMIZATION PROBLEM
We will solve speciﬁc problems, when cluster radius is
2, 3 and 4. We also will assume ν = 2, which, though not
always true, is accepted in general. For any other value of
ν, the method will be the same, though the results would
differ. Without any loss of generality, we assume the unit
of cost function as m × d2 = 1 unit. This is only a
multiplication factor and is done for making the equations
look less cumbersome.
The case for N = 2 is trivial as all the packets are to be
sent to the sink. Here, the unique solution is x21 = 1.
A. Case for N=3
Here, in addition to the sink node (i.e., node-1), we have
two nodes, node-2 and node-3. Let us ﬁrst see the total
number of packets node-2 and node-3 have to service.
R3 = m
(7)
R2 = R3.x32 + m = m × (x32 + 1)
(8)
The optimization function, i.e., minimizing the cost of
transmission for each node is expressed as:
C3
=
R3 × (x32 (d)ν + x31 (2d)ν) = m d2 × (x32 + 4 x31)
C2
=
R2 × {x21 (dν)} = m d2 × x21 (x32 + 1)
=
m d2 × (x32 x21 + x21)
As already mentioned, we set m d2 = 1. As, x21 = 1,
we can further simplify the above two expressions as C3 =
x32 + 4 x31 and C2 = x32 + 1.
The constraints are:
C2 = C3
x32 + x31 = 1
0 ≤ x32 ≤ 1; 0 ≤ x31 ≤ 1
Equating C2 and C3, we ﬁnd that 4 × x31
=
1.
So, the solution is unique, namely x32 = 0.75, x31 =
0.25, and x21 = 1.
B. Case for N=4
Here, in addition to the sink node (i.e., node-1), we have
three nodes, node-2, node-3 and node-4, as shown in Fig. 5.
Let us ﬁrst see the total number of packets every node has
to service.
41
R  
R    
4
x 32
  
x
x
21
31
node 1
Sink
node 2
  
3
node 3
R    
Pkts to service 
Pkts to service 
Pkts to service 
node 4
x
x
x 43
42
2
Figure 4.
The transmission pattern of the network when N=4
Packets to service at node-4, node-3 and node2 are:
R4 = m
(9)
R3 = R4.x43 + m = m (x43 + 1)
(10)
R2
=
R4.x42 + R3.x32 + m
=
m.x42 + m.(x43 + 1).x32 + m
=
m [x43 x32 + x42 + x32 + 1]
(11)
The cost of transmission i.e., C4, C3 and C2, for forward-
ing packets to nodes towards the sink are,
C4
=
R4 × {x43 (d)ν + x42 (2d)ν + x41 (3d)ν}
=
m d2 × (x43 + 4 x42 + 9 x41)
(12)
C3
=
R3 × {x32 (d)ν + x31 (2d)ν}
=
m × {x43 + 1)(x32 (d)ν + x31 (2d)ν}
=
m d2 × (x43 x32 + 4 x43 x31 + x32 + 4 x31) (13)
C2
=
R2 × {x21 (d)ν}
=
m d2 (x43 x32 + x42 + x32 + 1)
(14)
We need to minimize C2, C3 and C4. Here, we assume
ν = 2, and used the fact that x21 = 1. The cost equations,
Eq. 13 and Eq. 14, are non-linear. To convert this non-linear
problem to linear optimization problem, we replace the
variable x43 with α, say a constant. As already mentioned,
we also set m d2 = 1. By that, Eq. 12 to Eq. 14 are modiﬁed
to
C4
=
4 x42 + 9 x41 + α
(15)
C3
=
(1 + α) x32 + 4 (1 + α) x31
(16)
C2
=
x42 + (1 + α) x32 + 1
(17)
As our motivation is to schedule the transmission so that
all the nodes expend equal amount of energy, we made C4 =
330
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

C3 = C2. Combining Eq. 15 and Eq. 16, we get Eq. 18 and
combining Eq. 15 and Eq. 17, we get Eq. 19, as follows.
4 x42 + 9 x41 − (1 + α) x32 − 4 (1 + α) x31 = −α
(18)
3 x42 + 9 x41 − (1 + α) x32 − 0 (1 + α) x31 = 1 − α
(19)
From the constraint P1
i=(j−1) xji = 1, we get
x43 + x42 + x41 = 1
x32 + x31 = 1
We rewrite the above, replacing x43 by α, as
1. x42 + 1. x41 + 0. x32 + 0. x31
=
(1 − α)
(20)
0. x42 + 0. x41 + 1. x32 + 1. x31
=
1
(21)
From the above we formulate our linear programming
problem as follows. We need to ﬁnd
X = [x42 x41 x32 x31]
that minimizes the transmission cost (Eq. 14)
f = 0. x42 + 0. x41 + (1 + α) x32 + 4(1 + α). x31
subject to equality constraint (Copy of Eq. (20), (21), (18)
and (19))
1. x42 + 1. x41 + 0. x32 + 0. x31
=
(1 − α)
0. x42 + 0. x41 + 1. x32 + 1. x31
=
1
4. x42 + 9. x41 − (1 + α) x32 − 4 (1 + α) x31
=
−α
3. x42 + 9 x41 − (1 + α) x32 − 0 (1 + α) x31
=
1 − α
The equality constraint can be written as
Aeq. X = beq
where,
Aeq =


1
1
0
0
0
0
1
0
4
9
− (1 + α)
− 4(1 + α)
3
9
− (1 + α)
0


and
beq =


1 − α
1
− α
1 − α


In addition, we have upper bound and lower bound
constraints for X-variables as follows:
0 ≤ x42 ≤ 1;
0 ≤ x41 ≤ 1;
0 ≤ x32 ≤ 1;
0 ≤ x31 ≤ 1
We have assumed X43 = α, which is again bound
between 0 to 1. We changed the value of α from 0 to 1
in steps of 0.05 and solved the above linear programming
problem.
Solutions of this linear programming problem exists when
0.47 ≤ x43 ≤ 0.80. Corresponding to every value of x43, we
had unique solutions for x42, x42, x32, x31. The whole set
of solutions is shown in the following table. We presented
only the important part, deleting rows of essentially similar
results.
Table I
COST FUNCTION FOR DIFFERENT VALUES OF xjiS
Flag
Cost
x43
x42
x41
x32
x31
-2
2.6038
0.450
0.5385
negative
0.7347
0.2653
-2
2.6138
0.460
0.5385
negative
0.7366
0.2634
1
2.6139
0.470
0.5252
0.0048
0.7406
0.2594
1
2.6122
0.480
0.5096
0.0104
0.7450
0.2550
1
2.6104
0.490
0.4939
0.0161
0.7493
0.2507
1
2.6087
0.500
0.4783
0.0217
0.7536
0.2464
1
.
.
.
.
.
.
1
.
.
.
.
.
.
1
.
.
.
.
.
.
1
2.5583
0.790
0.0243
0.1857
0.8569
0.1431
1
2.5565
0.800
0.0087
0.1913
0.8599
0.1401
-2
2.5600
0.810
negative
0.1944
0.8619
0.1381
-2
2.5700
0.820
negative
0.1944
0.8626
0.1374
In Table. I, the ﬁrst column, Flag, denotes whether there
is a feasible solution or not. Here, ’-2’ indicates that the
solution is not feasible, and ’1’ indicates that the solution is
feasible. In row 1 and 2, x41 s’ values are negative, and there-
fore are not feasible solutions. Similarly, for last two rows,
x42 values are negative, making them infeasible solutions.
The cost, for different values of x43 (=α), and corresponding
values of other fractions, namely x42, x41, x32, x31, are
shown. Entries for α from 0.500 to 0.790 are omitted. As
the cost function over the whole range of feasible solutions
is minimum when x43 = 0.8, we can write our ﬁnal solution
as,
x43 = 0.800;
x42 = 0.009;
x41 = 0.191;
x32 = 0.860;
x31 = 0.140
Thus, to minimize the transmission cost and to share the
load of transmitting packets so that power at all the nodes
are equally drained:
Node-4 needs to transmit 80% of its packets to node-3, 1%
to node-2, and 19% directly to the sink.
Node-3 needs to transmit 86% of its packets to node-2,
14% directly to the sink
C. Case of N ≥ 5
In case the number of nodes is 5, to transform the trans-
mission cost function to a linear one in terms of different
xjis, we need to get rid of the three terms x54, x53, x43
from transmission cost functions. As before, we assigned
331
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

them values from 0 to 1, and changed in steps of 0.05. This
time we could not get any feasible solution, with all fractions
being positive. Thus, there is no solution for N = 5. The
detail procedure, though not shown here, is exactly the same
as in case of N = 4.
In case of N = 5 there is no feasible solution because, to
maintain same transmission cost for all nodes some of the
xji terms has to be negative. Intuitively, similar situation
will arise for N ≥ 5. We thus conclude that there is no
solution for N ≥ 5.
IV. CASE WHEN NODES ARE SPREAD OVER A PLANE
In the previous section, we have shown that for a cluster,
where sensor nodes are linearly spread, it is possible to
transmit different portions of packets to different distances
judiciously, so that all nodes dissipate power uniformly. In
reality, the sensor nodes are spread over a plane. In this
section, we will show that the analysis of the previous
section can be extended nodes distributed on a plane.
Let us consider that the sensor nodes are uniformly spread
as shown in Fig. IV.
Figure 5.
Sensor nodes spread uniformly over a plane
Nodes are put at the center of the imaginary equilateral
hexagons. The node density is a function of the hexagon
edge length, say a. For uniform distribution with any node
density, we can represent the network as in Fig. IV, where
with increasing node density the value of a is smaller.
Here, CH is at the center. The whole cluster is divided into
6 triangular sections, which together forms the cluster, as
shown in Fig. IV.
As in Section III, here too xji denotes the portion of
packets node-j transmits directly to node-i. The ratios are
64
62
21
x
x31
x32
x71
x61
x72
x63
x51
x52
x53
x41
x42
7
6
3
2
1
4
5
x
x
74
x
Figure 6.
A triangular section showing one-sixth of the cluster
as shown in the following matrix. The columns are receiving
node numbers, starting with 1, and the rows are transmitting
node numbers, starting with node 2.
X =


x21
0
0
0
0
0
0
x31
x32
0
0
0
0
0
x41
x42
0
0
0
0
0
x51
x52
x53
0
0
0
0
x61
x62
x63
x64
0
0
0
x71
x72
0
x74
0
0
0


node 2
node 3
node 4
node 5
node 6
node 7
Here, xji =
packets transmitted from node−j to node−i
total packets transmitted from node−j
.
Corresponding distances of transmission are shown in the
matrix D below, where entry dji is the distance from node-
j to node-i. ”NA” means the distance is not necessary to
consider, because there is no transmission.
D =


√
3a
NA
NA
NA
NA
NA
NA
2
√
3a
√
3a
NA
NA
NA
NA
NA
3a
√
3a
NA
NA
NA
NA
NA
3
√
3a
2
√
3a
√
3a
NA
NA
NA
NA
√
21a
3a
√
3a
√
3a
NA
NA
NA
√
21a
2
√
3a
NA
√
3a
NA
NA
NA


As before, let us denote the total number of packets ser-
viced (transmitted) by node-j by Rj, which includes both the
packets generated at the node (i.e., m) plus those received
from nodes further away from the the CH. Therefore,
R7 = R6 = R5 = m
(22)
R4 = m +
X
i=5,6,7
Ri × xi4
(23)
R3 = m +
X
i=5,6,7
Ri × xi3
(24)
R2 = m +
X
i=3,4
Ri × xi2 +
X
i=5,6,7
Ri × xi2
(25)
332
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

From distances in matrix D, we are able to calculate the
amount of power the node dissipates for transmitting these
packets. At this stage, we ignore (as is done in Section III)
the energy required to receive packets, which is lower
compared to what is required for transmission, though not
zero. As before, we denote the power dissipated at node-j by
Cj and make all Cjs equal. Formaly, the problem is to ﬁnd
the elements of matrix X, where the optimization criterion
is to minimize Cj subject to the following constraints:
X
⃗xj = 1
(26)
C2 = C3 = . . . = Ci . . . = C7
(27)
0 ≤ xji ≤ 1 for all i < j, i ≥ 1, j > 1
(28)
Eq. 26 can further be expanded to get 6 simultaneous
equations in xij. From Eq. 27, we get another 6 equations of
expanded energy in terms of xij. By equating them, we get 5
more equations in xijs. From symmetry, we can assume that
x74 = x53 and x64 = x63. Fixing values of two unknowns,
x74 and x64, in small steps, and using optimization criterion
to minimize Cis, we can solve xijs.
the following set of equations:
x74 + x72 + x71 = α + x72 + x71 = 1
(29)
x64 + x63 + x62 + x61 = 2 β + x62 + x61 = 1
(30)
x53 + x52 + x51 = α + x52 + x51 = 1
(31)
x42 + x41 = 1
(32)
x32 + x31 = 1
(33)
x21 = 1
(34)
where, we wrote x74 = x53 = α, assuming x74 = x53
due to symmetry, and α, a constant which we will vary
manually in steps to ﬁnd its optimum value. Similarly, we
wrote x64 = x63 = β, assuming x64 = x63 due to symmetry,
and β, another constant which we will vary in steps. We now
have 10 unknown xijs, and 5 equations, Eq. 29 to Eq. 33.
V. CONCLUSIONS
Cluster-based communication protocol in wireless sensor
networks had to reconﬁgure at regular intervals for uni-
form power dissipation of different nodes. But, dismantling
operating clusters and re-arranging a new set of clusters
needs transmission of lots of signaling packets To avoid
reconﬁguration of clusters at regular intervals, we proposed
that, the nodes within the cluster do not always transmit
to its nearest neighbor, on the way to CH. Instead, they
transmit packets to different distances towards the CH, with
different pre-assigned ratios. We have shown that, we can
then achieve uniform power dissipation for all the nodes
within the cluster.
ACKNOWLEDGMENT
Part of this research is supported by Government of Japan,
Ministry of Education Scientiﬁc Research General Research
Fund (C) (2) No. 20500071.
REFERENCES
[1] T. Meng and R. Volkan, ”Distributed network protocols
for wireless communications.” In the Proceedings of IEEE
ISCAS, May 1998.
[2] P. Levis, S. Madden, et.al.,, ”Tiny OS: An operating system
for for Wireless Micro-sensor Networks.” In Ambient Intelli-
gence (New York, 2004), Springer-Verlag.
[3] S. R. Madden, M. J. Franklin, J. M. Hellerstein, W.
Hong,”Tiny DB: An acquisitional Query Processing System
for sensor networks.” ACM transactions on Database Systems,
Vol. 30, Issue. 1, pp. 122-173, March 2005.
[4] C. Intanagonwiwat, R. Govindan, and D. Estrin, ”Directed
diffusion: A scalable robust communication paradigm for
sensor networks.” In the Proceedings of the Sixth Annual
International Conference on Mobile computing and networks
(MobiCOM 2000), Boston, Massachusetts, August 2000.
[5] D. Braginsky, D. Estrin, ”Rumor Routing algorithm for sensor
networks.” In the Proceedings of Wireless Sensor Network Al-
gorithms (WSNA’02), pp. 22-30, Atlanta, Georgia, September
28, 2002.
[6] W. Ye, and J. Heidemann, ”Ultra-low duty cycle MAC with
scheduled channel polling.” In the Proceedings of fourth
International conferences on embedded networked sensor
systems (SenSys’06), pp. 321-334, 2006.
[7] Bhaskar Krishnamachari, ”Networking Wireless Sensors.”,
Cambridge University Press, January 2006.
[8] W. Heinzelman, A. Chandrakasan, and H. Balakrishnan, ”An
Application-Speciﬁc Protocol Architecture for Wireless Mi-
crosensor Networks,” IEEE Transactions on Wireless Com-
munications, Vol. 1, No. 4, pp. 660-670, October 2002.
[9] A.
Cerpa,
and
D.
Estrin,
”ASCENT:
Adaptive
Self-
Conﬁguring sEnsor Networks Topologies.”, IEEE transac-
tions on mobile computing, Vol 3, 3, pp. 1-14, 2004.
[10] W. R. Heinzelman, A. Chandrakasan, and H. Balakrish-
nan, ”Energy-Efﬁcient Communication Protocol for Wireless
Microsensor Networks.” in the Proceedings of the Hawaii
International Conference on System Sciences, January 4-7,
2000.
[11] Alex Rogers, Esther David, and Nicholas R. Jennings, ”Self-
Organized Routing for Wireless Microsensor Networks.”
IEEE trans. on SMC - Part A, Vol. 35, No. 3, May 2005
[12] S. Cui, A. J. Goldsmith, and A. Bahai, ”Energy efﬁciency
of MIMO and cooperative MIMO techniques in sensor net-
works.” IEEE Journal on Selected areas in Communication,
pp 1089-1098, 2004.
333
UBICOMM 2010 : The Fourth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies
Copyright (c) IARIA, 2010               ISBN: 978-1-61208-100-7

