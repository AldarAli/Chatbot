83
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
On Heterogeneity of Management and Orchestration Functional 
Architectures in 5G Slicing  
 
Eugen Borcoci, Cosmin Contu, Andra Ciobanu 
University POLITEHNICA of Bucharest - UPB 
Bucharest, Romania 
Emails: eugen.borcoci@elcom.pub.ro, cosmin.contu@elcom.pub.ro, andraciobanu90@yahoo.com 
 
 
Abstract — Management and orchestration functionalities are 
crucial activities in 5G slicing systems. Essentially, the basis is 
the integrated framework Management and Orchestration 
(MANO), of The European Telecommunications Standards 
Institute but enriched, in order to cope with slicing. In 
particular, supporting technologies like Network Function 
Virtualization and Software Defined Networks are considered, 
to deliver functional components, cooperating for 5G slicing 
management and orchestration. The multi-tenant, multi-
domain, multi-operator, end-to-end features of the 5G slicing 
determine 
a 
high 
complexity 
for 
management 
and 
orchestration. Consequently, many different architectural 
variants have been already proposed, studied and developed in 
recent studies, standards and projects. This study is useful 
because, despite many efforts (spent in the last five years), 
much heterogeneity and different solutions still exist, even at 
the management and orchestration architectural level. 
However, the MANO is considered as a base starting point 
architecture. This paper is an extension of a previous study. It 
analyzes in more depth the existing common parts, differences 
and heterogeneity of several management and orchestration 
5G slicing architectures, identifying the similar functionalities 
and also the factors leading to heterogeneity.   
Keywords — 5G slicing; Management and Orchestration; 
Software 
Defined 
Networking; 
Network 
Function 
Virtualization;. Service management; Resource management.  
I. 
 INTRODUCTION  
This paper is an extension of a previous paper published 
at IARIA AFIN Conference, 2019 [1], dealing with 
management and orchestration of 5G sliced systems.  
The emergent 5G mobile network technologies offer 
powerful features, in terms of capacity, speed, flexibility and 
services, to answer the increasing demand and challenges 
addressed to communication systems and Internet [2][3]. 5G 
can 
provide 
specific 
types 
of 
services 
to 
satisfy 
simultaneously various customer/tenant demands, in a multi-
x fashion (the notation –x stands for: tenant, domain, 
operator and provider).   
The 5G network slicing concept (based on virtualization 
and softwarization) enables programmability and modularity 
for network resources provisioning, adapted to different 
vertical service requirements (in terms of bandwidth, latency, 
mobility, etc.) [3]-[7]. In a general view, a Network Slice 
(NSL) is a managed logical group of subsets of resources, 
Physical/Virtual network functions (PNFs/VNFs), placed in 
the architectural Data Plane (DPl), Control Plane (CPl) and 
Management Plane (MPl). The slice is programmable and 
has the ability to expose its capabilities to the users.   
Network Function Virtualization (NFV) [8]-[10] and 
Software Defined Networks (SDN) are two powerful 
technologies, which offer the basis for softwarization and 
virtualization. They are considered as cooperating tools [11] 
to manage and control the 5G sliced environment, in a 
flexible and programmable way.   
Management and Orchestration (M&O) is a crucial 
subsystem in NFV framework and also in 5G. Such topics 
constitute the object of standardization organizations and 
forums among which the 3rd Generation Partnership Project 
(3GPP), the 5G Infrastructure Public Private Partnership (5G    
PPP), and European Telecommunications Standards Institute 
(ETSI) are representative [12]-[17]. Given the complexity of 
5G systems, the above organizations cooperate in order to 
harmonize their specifications. For instance, the 3GPP-
defined management system interacts with ETSI’s NFV 
MANO system to enable the resource management for 
virtualized Core Network (CN), virtualized Radio Access 
Network (RAN) and network slicing. ETSI collaboration 
with 3GPP – especially the Service and System Aspects Fifth 
(SA5) Working Group – is a key throughout the specification 
work of both ETSI NFV Releases 2 and 3, to ensure 
interoperability between management systems. 
ETSI NFV has recently designed new features to support 
5G networks. 5G resource M&O aspects were added on top 
of the NFV Release 2 framework. New NFV Release 3 [10] 
topics related to 5G includes: “Support for network slicing in 
NFV”, “Management over multi-administrative domains”, 
and “Multi-site network connectivity”.  These features are 
essential to address the variety of applications and services 
expected to run on top of a 5G system, while using in a 
distributed way resources over single or multiple sites, or in 
centralized or a combination of both. 
However, it is recently recognized that a complete 
understanding of the relationship of a M&O system and a 
slicing system is still missing [3]. Even more, there is not yet 
a general/common agreement on the slice definition itself; 
several definitions exist, having major impacts and 
relationships to the M&O.  
In the simplest view, a slice is a service with resource 
guarantees. In such a case, the slicing system and the 
orchestration system are identical. At the other end of the 
spectrum, a slice is a complex entity, i.e., a collection of 

84
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
resources (computing, networking, storage) – that constitute 
a virtual logical network (customizable), working on top of a 
physical networking infrastructure. Inside such a slice, the 
slice owner/tenant has partial or even full freedom to enforce 
its own management and control (M&C) policies and 
actions. Consequently, each slice will have its own M&O. 
Many studies and standards adopted the above complex 
definition of a slice; this is also considered in this work, 
given the high flexibility that it can offer to the tenants. On 
the other hand, the complex structure of such a slice induces 
M&O complexity and leads to a large variety of possible 
architectural approaches. 
Given many architectural proposals, there is an interest to 
evaluate in what degree they have similar approaches of the 
main “core” architectural functional set of blocks and what 
are the factors that induce heterogeneity. The similarity 
degree 
of 
different 
architectures 
could 
be 
named 
“convergence”, although this word has usually a richer 
semantic.  
Among many architectural aspects, the focus of this 
paper is on M&O sub-systems. Due to space limitation, this 
text cannot afford to offer detailed explanations about the 
architectures presented; the objective here is to identify the 
major point of similarity and heterogeneity of different 
approaches. 
Therefore, this paper is mainly an overview and analysis 
type. Its structure is described below. Section II outlines the 
stakeholder/actors 
roles, given 
that 
such 
definitions 
determine essentially the overall system architecture.  
Section III evaluates whether a core unified view exists at 
architectural level, expressed in so-called meta-architecture. 
Section IV performs an analysis of some factors that lead to 
heterogeneity of the refined M&O architectures. Section V 
summarizes a few relevant examples extracted from various 
studies and projects, to illustrate the heterogeneity of 
solutions. Section VI presents the conclusions and possible 
future work.  
II. 
BUSINESS MODEL AND STAKEHOLDER ROLES  
The layered structure of the 5G slicing M&O strongly 
depends on the definition of the business model (BM), which 
defines the stakeholder/actors roles and their interactions. 
Different BMs aim to support multi-tenant, multi-domain 
end-to-end (E2E) and multi-operator capabilities. A basic 
model (see A. Galis, [18]) defines four roles:  
Infrastructure Provider (InP): owns and manages the 
physical infrastructure (network/cloud/data center). It could 
lease to a slice provider its infrastructure (connectivity, 
computing and storage resources) as they are, or it can itself 
construct slices and then lease the infrastructure in a network 
slicing fashion.  
Network Slice Provider (NSLP): can be, typically, a 
telecommunication service provider (owner or tenant of the 
infrastructures from which network slices are constructed). 
The NSLP can construct multi-tenant, multi-domain slices, 
on top of infrastructures offered by one or several InPs.  
Slice Tenant (SLT):  is the generic user of a specific slice, 
including network/cloud/data centers, which can host 
customized services. An SLT can request from a NSLP to 
create a new customized slice instance. The SLT can lease 
virtual resources from one or more NSLP in the form of a 
virtual network, where the tenant can assemble, manage and 
then provide Network Services (NS) to its individual end 
users. A NS is a composition of Network Functions (NFs), 
physical or virtual, defined in terms of the individual NFs 
and the mechanism used to connect them. A single tenant 
may have one or several slices in its domain.  
End User (EU): consumes (part of) the services supplied 
by the slice tenant, without providing them to other business 
actors. 
The InP, NSLP and SLT have, each one, a specific role 
in M&O activities. A powerful feature of the above business 
model is the recursivity (see Ordonez et al., [4]), i.e., a tenant 
can become itself a new slice provider; at its turn it can offer 
parts of its sliced resources to other tenants. Other variants of 
business models are presented in [18]. 
Several recent Public Private Partnership (PPP) Phase 
I/II collaborative research projects are running, having as 
objectives 5G technologies [18]. Some of them extended the 
list of role definitions to allow various possible customer-
provider relationships between verticals, operators, and 
other stakeholders. The 5G PPP Architecture Working 
Group, “View on 5G Architecture”, Version 3.0, June 2019, 
[3] has defined a more refined business model (Figure 1):  
Service Customer (SC): uses services offered by a 
Service Provider (SP). The vertical industries are considered 
as typical examples of SCs.  
Service Provider (SP): generic role, comprising three 
possible sub-roles, depending on the service offered to the 
SC: Communication SP offers traditional telecom services;  
Digital SP offers digital services (e.g., enhanced mobile 
broadband and IoT services)  to various verticals;  Network 
Slice as a Service (NSaaS) Provider offers an NSL and its 
services. The SPs have to design, build and operate high-
level services, by using aggregated network services.  
Network Operator (NOP): orchestrates resources, 
potentially coming from multiple virtualized infrastructure 
providers (VISP). The NOP uses aggregated virtualized 
infrastructure services to design, build, and operate network 
services that are offered to SPs.  
Virtualization 
Infrastructure 
SP 
(VISP): 
offers 
virtualized infrastructure services and designs, builds and 
operates virtualization infrastructure(s) (networking and 
computing resources). Sometimes, a VISP offers access to a 
variety of resources by aggregating multiple technology 
domains and making them accessible through a single 
Application Programming Interface (API).  
Data Center SP (DCSP): designs, builds, operates and 
offers data center services. A DCSP differs from a VISP by 
offering “raw” resources (i.e., host servers) in rather 
centralized locations and simple services for consumption of 
these raw resources.  
The hierarchy of this model (in the top-down sense of a 
layered architecture) is: SC, SP, NOP, VISP, DCSP. Note 
that in practice, a single organization can play one or more 
roles of the above list. 

85
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
 
Figure 1.  5G PPP Business model [3] 
III. 
A GENERIC 5G MANAGEMENT META-ARCHITECTURE 
The analysis of many architectural proposals (in 5G and 
in particular, in 5G slicing) leads to the question: is there 
any high-level consensus core architecture?  Recently, the 
document [3], authored by 5G PPP Architecture Working 
Group has identified a set of requirements for a 
consensus/meta 5G high-level architecture (collecting some 
M&O fundamental functionalities). The identified features 
are general for 5G and in particular applicable also to the 
slicing approach. This M&O architecture should be able to 
support:  
a. individual control of NFs (number of instances to be 
created, their distribution/placement, deployment of an 
execution 
environment, 
start/stop 
the 
instances, 
management of the instances’ states, etc.). 
b. chaining of individual NFs into services (NF graphs, 
see [8]) facilitated by different control mechanisms at 
network level (e.g., the NFs chaining can be SDN –
controlled - where the NFs are treated by the SDN controller 
like SDN forwarding nodes).  
c. different underlying execution environments: various 
virtualization 
techniques 
(virtual 
machines 
(VM), 
containers, or plain processes) in clusters of different sizes 
(from a CPU board to an entire large-scale data center) over 
different, specialized “technological domains” - i.e., from 
some simple hardware, up to complex networking 
environments (wireless, optics, cable). 
d. 
working 
across 
different 
“organizational”, 
or 
administrative domains, i.e., owned by network operators or 
companies and using various business models (e.g., network 
operators can be separated from cloud infrastructure 
operators). Multiple operators and multi-domains operation 
are also a target, in order to provide services at vast 
geographic ranges. 
e. a large range of applications with different specific 
requirements 
(in 
terms 
of 
resources, 
deployment, 
orchestration and optimization goals).  
f. subdivision of the infrastructure in logical, separated 
and isolated slices – while offering different levels of 
guaranteed performance to their tenants. 
Note that slicing capabilities – could  be seen as part of a 
M&O system. However, there is no general consensus on 
this inclusion. There are also proposals to position a slicing 
system underneath or above a MANO system. 
Several core roles of the involved entities have emerged 
from the above requirements: end user, function developer, 
application developer, validation and verification entity, 
tenant (owner of applications), operator (not necessarily 
encompassing slicing operator) infrastructure provider 
(network, cloud), etc., [3]. These can be mapped onto the 
roles described in Section II. Overlaps can exist between 
some of the above. Also, the mapping of the above roles on 
real organizations roles is flexible. 
The requirements listed above actually drive the 
definition of the so-called M&O meta-architecture, in the 
sense that no matter how the particular architectural solution 
will be chosen, the six functionalities should be included. 
These define a general level of convergence from an 
architectural point of view. A particular architecture will be 
a refinement of the meta-one. 
Another general aspect is related to the different time 
scales of different operations. One can distinguish between 
“orchestration” and “control” actions. The first are mid-
long-time scales operations, relatively heavy-weight (e.g., 
optimization of the overall structure of a service, group of 
services, or slices). The second class comprises short time 
scales operations (e.g., light-weight operations, flow routing, 
etc.). We defend here the idea that such a logical separation 
should exist (it is natural) between functional elements 
performing the orchestration, w.r.t. those dedicated to 
control; however, in different refinements of the meta-
architecture this separation is not quite obvious; this, again, 
leads to heterogeneity of approaches. 
The basic framework for a high-level meta-architecture is 
offered by ETSI NFV (Figure 2) [8]. This has been defined 
as a general framework, before the 5G slicing concepts 
emerged. However, NFV Management and orchestration 
(NFV MANO) has been soon considered, by the 
standardization organizations, operators and research groups, 
as being appropriate to further develop M&O for 5G sliced 
systems. 
The main M&O blocks are: the NFV Orchestration 
(NFVO), VNF Manager (VNFM) and Virtual Infrastructure 
Manager (VIM). If the principle of separation between the 
orchestration and control is applied, then the specific 
network configuration tasks (e.g., connectivity - related) can 
be outsourced to a separate SDN controller, working under 
command of the NFVO. An alternative could be to split the 
NFVO into two parts – orchestrator and controller. 
We recall shortly the roles of the basic NFV functional 
blocks [9]: 

86
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
NFV Orchestrator (NFVO) has two main responsibilities: 
- the lifecycle management of Network Services (NS); 
thus, it fulfills the Network Service Orchestration 
functions; 
-  the orchestration of NFVI resources across multiple 
VIMs; thus, it fulfills the Resource Orchestration 
(RO) tasks. 
VNF Manager (VNFM) is responsible for the lifecycle 
management (LCM) of VNF instances;  
Virtualized Infrastructure Manager (VIM) is responsible 
for managing and controlling the NFVI resources, i.e., 
compute, storage and network resources. 
To provide a more complete architectural assembly the 
following functional blocks may also be considered: 
Operation/Business 
System 
Support 
(OSS/BSS) 
represents the combination of the operator's other operations 
and business support functions that are not otherwise 
explicitly captured in the architectural diagram. An Element 
Manager (EM) is responsible for traditional management 
functionality (fault detection, configuration, accounting, 
performance, security- FCAPS) for a VNF. 
The NFVI represents all the hardware (e.g., compute, 
storage, and networking) and software (e.g., hypervisors) 
components that together provide the infrastructure resources 
where VNFs are deployed. 
The NFV framework is added with new functions in 
order to support slicing (see Figure 2). The slicing support 
feature 
introduces 
significant 
differentiation 
between 
particular architectures. The slice management: 
• 
could be included into the NFVO (because a 
network slice instance (NSLI) can be seen, in a 
simpler approach, as a guaranteed network service); 
• 
 or, a separate slice manager exists (controlled by 
NFVO). Note that the service management can be 
defined as separated from resource management 
(this option provides a cleaner architecture), or they 
can be treated together.  
 
 
Figure 2.  Network slice management in an NFV framework  (ETSI GR 
NFV-EVE 012 V3.1.1, [15] ) 
NFV -Network Function Virtualization; EM - Element Manager; 
MANO - Management and Orchestration (NFVO – NFV Orchestration; 
VNFM – VNF Manager; VIM Virtual Infrastructure Manager); VNF/PNF –
Virtual/Physical Network Function; NFVI -NFV Infrastructure; NS-
Network Service; OSS-Operations Support System. 
In multiple domain cases, the NFVOs should federate in 
some form with peer NFVOs, placed in a single or in 
multiple organizations. In some approaches, a hierarchy of 
service management instances is developed, having on top a 
multi-domain manager (working at abstract level) and single-
domain managers at lower level. The latter should perform 
also peer interactions. 
A typical set of functional M&O blocks for a single-
domain meta-architecture is [3] (the levels are top-down 
ordered): [Service management, Orchestrator, (MANO 
controller, SDN controller), VIM, Resources]. In a multi-
domain environment, each domain should have the previous 
set and on top of them a multi-domain service manager 
should exist. Note that inter-domain (horizontal) peer 
interactions must exist between peers (e.g., Orchestrator_X 
<---> Orchestrator_Y). 
The basic 5G slicing high level architecture proposed by 
ETSI [15] (Figure 2), can be considered as a meta-
architecture comprising the six features exposed above. To 
the original ETSI NFV architecture [8][9], several new 
functional blocks have been added in order to support the 
network slicing (ETSI-NFV EVE 012 [15]). 
The 3GPP TR 28.801 document [16] defines three new 
management functions:  
 
• 
Communication Service Management Function 
(CSMF) – it translates the communication service 
requirements to NSL requirements; 
• 
 Network Slice Management Function (NSMF) - 
responsible for the management (including lifecycle 
of instances) of NSLIs (it derives network slice 
subnet requirements from the network slice related 
requirements); 
• 
 Network Slice Subnet Management Function 
(NSSMF) - responsible for the management 
(including lifecycle) of Network Slice Subnet 
Instances (NSSIs).  
 
An interface is defined, i.e., Os-Ma-NFVO Reference 
Point (RP) with ETSI NFV-MANO. To interact in an 
appropriate way with NFV-MANO, the NSMF and/or 
NSSMF need to determine the type of network service or set 
of network services, the VNFs and PNFs that can support the 
resource requirements for a NSLI or NSSI. Consequently, 
one should determine whether new instances of these NSs, 
VNFs and the connectivity to the PNFs need to be created, or 
existing instances can be re-used. 
 
Starting from the above basic architecture and 
considering different visions (shortly presented in the 
Introduction section), several research groups and/or projects 
developed a large set of variants of refined architectures (see 
examples in A. Galis [18], [19]). Some of them are 
substantially different from each other. Currently there is a 
high heterogeneity seen in this area. The question analyzed 
in this paper is: how much convergence/similarity and how 
much mutual compliancy exists among them?  

87
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
IV. 
 WHERE DOES  THE HETEROGENEITY COME FROM? 
Despite the fact that many architectures essentially 
satisfy the requirements of the meta-architecture presented in 
Section III, significant heterogeneity can inherently appear    
in different proposals. This section will summarise the 
factors leading to heterogeneity in the area of particular 
architectures. Note that, given the topic’s complexity and this 
limited paper space, the analysis cannot be exhaustive. Some 
aspects are not touched, or only briefly mentioned, such as: 
abstraction aspects, slice isolation and security, slice 
composition, monitoring issues and slice optimization, 
details on multi-domain interactions, technological and 
implementation details and so on.   
A. Services deployment 
This 
is 
inherently 
heterogeneous, 
depending 
on 
applications to be supported. An example is the traffic 
locality property (at the edge of the network/slice or crossing 
the core part). An orchestrator should be aware of such 
traffic properties and if necessary, deploy the corresponding 
network functions at the mobile edge. The orchestrator needs 
to have enough topology information of slices in order to be 
able to install appropriate functions at right places.  
B. Assigning tasks to the edge or core network 
Some tasks may be executed either in edge network or in 
the core. So, there are options how to share such burdens 
between edge and core network. Two options can be 
identified: 
• 
to keep some administrative control functions (e.g., 
call management) in the core and only move data 
plane media-related functions to the edge; 
• 
 to move to the edge all relevant VNFs and services 
in both data, management and control plane. 
Trade-offs are between: operational complexity, the need 
to run multiple instances of the same services, reduced 
tunneling overhead, and others. Content delivery services in 
mission-critical environments may require similar decisions.  
C. Execution environments  
At the infrastructure level, the execution environments   
could be heterogeneous. The infrastructure should provide an 
interface to the orchestrator, via which different functions 
execution can be started, stopped, paused, or migrated; the 
interface also provides means to influence the transport of 
data. Two variants are mentioned below: 
• 
The infrastructure hides (to MANO) its information 
on the type of execution elements available. The 
infrastructure management chooses the right (i.e., 
“functionally possible”) realization of a function 
(virtual machine (VM) or container, etc.). This 
abstraction simplifies the MANO tasks, but makes 
difficult for the infrastructure manager to decide 
what is “performance-optimal”, given its lack of 
information about the performance requirements of 
an entire service and the relationships to other 
services. 
• 
The 
infrastructure 
provides 
to 
the 
MANO 
information on available types of execution 
resources (quantity, locations, etc.). So, the MANO 
has enough information to optimize the execution 
environment. The price paid is a higher burden for 
MANO. Note that such an approach will have some 
additional issues: it should consider the degree of 
trust between the infrastructure provider and MANO 
entity, especially in multi-domain environment. 
D. Hardware heterogeneity  
At infrastructure level, the hardware heterogeneity can 
also determine many variants, e.g., virtualization methods 
and other factors (e.g., Field programmable gate arrays 
(FPGA), Graphics processing unit (GPU) implementations, 
hardware accelerators, etc.). 
E. Vertical separation of services  
The classical principle of separation in network-related 
services (i.e., connectivity–oriented) and application-level 
services (e.g., caching, video transcoding, content-oriented, 
web server, etc.) could be preserved or not. One can 
respectively 
speak 
about, 
segregated 
or 
integrated 
orchestration. . The separation will require one service 
orchestrator and separate network/service orchestrators.  
Concerning slicing, one can define some slices offering 
essentially connectivity services and other dedicated to high-
level services and applications. The clear separation of areas 
of responsibility over resources could be an advantage for 
operational stability (e.g., a segregated RAN orchestrator 
could still maintain basic RAN services even if an 
application-oriented orchestrator fails). On the other hand, 
the integrated orchestration could be attractive, in particular 
for operators, if both kinds of services (i.e., the high level 
and respectively the connectivity-oriented services) could be 
orchestrated in the same fashion (and possibly, even with the 
same orchestration infrastructure). These two options also 
determine heterogeneity at M&O architectural level. 
 Segregated orchestrators approach leads to a more 
complex overall architecture. One must assign areas of 
responsibilities from a resource perspective (i.e, which 
orchestrator controls - what resources); one should identify 
services pertaining to each orchestrator. The split of a service 
is also a problem, i.e., the   service description should define 
the “network” and “application-facing” parts of the service. 
Aligning the control decisions taken by these two kinds of 
orchestrators in a consistent way is also not trivial. In an 
integrated orchestration approach, all these problems 
disappear. However, an integrated orchestrator might be very 
complex if required to treat substantially different services 
(an orchestration of type “one-size-fits-all” approach is 
rather not the best choice). An integrated orchestrator is a 
more challenging piece of software (from both dependability 
and performance perspectives) but would result in a more 
compact overall architecture.  
Considering the above rationale, we defend the idea that 
from the slicing point of view, a segregate orchestrator 
approach is a better choice in the sense that it provides s 
more clear separation of orchestration tasks. 
Note that in practice, both approaches have been pursued 
in different projects. Currently, a final verdict on segregated 

88
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
versus integrated orchestration, commonly agreed by many 
communities is not yet available. Apparently, there is no 
evident need to standardize such an option, as long as both 
of them could be realized inside a meta-architecture. So, for 
the time being, we can state that M&O heterogeneity, from 
this point of view, will last. 
F. “Flat” or “Hierarchical” orchestration 
 In the flat solution, a single instance of a particular 
orchestrator type is in charge to orchestrate all assigned 
resources. In the hierarchical solution, there are multiple 
orchestrators (a “hierarchical” model is needed, when 
orchestrators know to talk to each other). Note that a 
hierarchical orchestrator is not necessarily a segregated one, 
because all hierarchy members could deal with the same type 
of services. 
In many projects and studies, the hierarchical M&O 
option is chosen [7][18]-[22]. However, several issues 
should be solved in each of the two solutions [3]: 
• 
The number of hierarchy levels and each member 
responsibility area could be fixed or adaptive (upon 
load changes the responsibility areas can be 
split/merged; 
new 
hierarchy 
levels 
can 
be 
added/removed and new orchestrator instances can 
be started or some old ones can be stopped). 
However, the adaptive option is highly complex, 
given the inherent dynamicity capability required. 
• 
North/south 
vertical 
interfaces 
between 
the 
orchestrators must be defined. In a flat model, the 
service requests are received by an orchestrator’s 
northbound interface (NBI). At its south bound the 
orchestrator communicates with NBI of the 
abstracted infrastructure (VIM). These two NBIs are 
structurally different. In a hierarchical model, an 
orchestrator should be able to communicate with a 
lower level orchestrator through a different interface 
than for VIM.  So, an orchestrator should be able to 
use different NBIs (NBI of a VIM, or NBI of a 
lower-level orchestrator). It is still in study how to 
create uniform interfaces; the advantage would be 
that from the perspective of a higher-level 
orchestrator, it always talks to a VIM-style interface. 
In such a case, recursive orchestration could be 
much easier implemented.  
• 
Horizontal interfaces (east/west) should be defined 
between peer orchestrators (those who are on the 
same level), if they are allowed to negotiate directly 
with each other (for resources). Such interfaces are 
naturally to exist in cross-domain slicing scenarios. 
• 
Multi-domain scenarios create new problems (e.g., 
in the case of a multi-domain “federated” slice) 
[6][18]. In a flat model, each orchestrator of a 
domain is actually multi-orchestration capable, i.e., it 
can 
discuss/negotiate 
with 
other 
domains’ 
orchestrators. In the hierarchical model, a higher-
level orchestrator could exist, in charge of 
harmonizing multiple organizations cooperation. 
However, several issues are not fully solved today: 
which 
entity 
would 
run 
that 
multi-domain 
orchestrator, trust issues, preservation of domains 
independency, assuring the fairness, etc.  
• 
Mapping of the orchestration entities (and their 
areas of responsibility) onto “domains” (in a very 
general sense of the word “domain”) is still an open 
research issue and it is also a factor of heterogeneity 
of the refined M&O architectures. For instance, one 
could have separate orchestrators for different 
technological 
domains 
(e.g., 
computational 
resources, optical networking infrastructure, wireless 
edge, etc.). However, the word “domain“ can be 
associated as well, to organizations/companies 
boundaries. Such domains have overlap with the 
technological ones.  A third possible semantic is that 
a “domain” could be a subdivision of a larger 
infrastructure into an edge domain, a core domain, 
etc. (each one spanning multiple technologies, 
possibly dealing with all kinds of services in a non- 
segregated way). 
G. Relationship of the M&O system and the slicing system  
This is another factor of architectural variability, 
depending on what the definition of a slice is. A largely 
agreed solution is to have a general orchestrator (configured 
offline), capable to trigger the construction of a new slice 
and then to install in this new slice a dedicated orchestrator 
(before the slice run-time). To still assure the basic services 
outside any slice (e.g., packet forwarding at network level) 
one can construct an additional special orchestrator installed 
outside of all slices. Currently, many combinations have 
been proposed, and there is still no consensus on such 
matters. The convergence of solutions will be determined 
probably by the adoption of a more unique definition of a 
slice – which could assure better inter-operability. 
H. Different abstraction mappings applied between 
hiearchical levels 
 In a multi-level hierarchy levels of orchestrators, 
abstractions will be used between adjacent layers, to hide to 
the upper levels the details of the lower ones. However, it is 
not clear what the best mapping is, in order to produce a 
simplified view of a lower level to the upper one. Violations 
could appear when mapping high level services onto the 
resources of a lower level [3]. So, different mapping methods 
can lead to heterogeneity. 
I. 
Conflict resolution  
In 5G complex systems there will exist inherently 
conflicts between participating entities given the basic idea 
of resource sharing. Different specific choices to solve them 
will lead to heterogeneity of solutions. A few examples are 
given below. 
Resource conflicts for shared resources: they can appear 
due to incorrect admission control or overly aggressive 
oversubscription. Architectural refinements are necessary to 
solve them. 
Conflicting rules: e.g., when composing a service out of 
functions that specify mutually incompatible packet 

89
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
forwarding behavior (this can happen both in NFV context or 
in SDN context). 
Feature interaction conflicts:  this is a classical issue in 
systems offering complex multi-feature services and being 
dynamically configurable as in the case of updating slices. 
The conflicts need to be avoided or detected and 
resolved. Pre-fixed policies (limited approach), either for a 
platform, or for a service in particular, can help. More 
research effort points towards conflict resolution actions 
from inside an operational network is necessary. 
J. 
Time scales (short vs. long-term actions) 
It makes sense to separate short-term actions (e.g., 
actions on a flow level) from long-term planning actions 
(e.g., decision where to run which function). The refined 
functional architecture can reflect this separation, e.g., by 
splitting the MANO system into separate subsystems, each 
one responsible for different types of actions. A typical 
terminology would be: “control” for short-time scale 
operations vs. “orchestration” for operations on longer time 
scales.  This separation is attractive from a software 
development and maintenance perspective (e.g., a SDN 
controller becomes a separated piece of software); however, 
this separation does introduce additional interfaces and 
operational dependency into an already complex architecture 
model. The decision on which actions are short-term and 
which are long-term can produce heterogeneity. 
K. Traffic load variations  
Some traffic spikes can happen which cannot be simply 
dealt by the short-term control system. Hence, the long-term 
orchestrator needs to be also able to deal with short-term 
changes (this is related with the control/orchestration 
separation). The MANO system’s architecture should have 
the ability to bring up additional instances. The cloud 
computing can solve this (Function as a Service –concept 
(FaaS)) by bringing up functions on an as-needed, load-
adaptive basis. However, this requires that the realized code 
is indeed a function, hence, stateless – there is no state 
maintained inside a function and it is not possible to move 
state between function instances. 
V. 
EXAMPLES  OF SLICED 5G MANAGEMENT AND 
ORCHESTRATION FUNCTIONAL ARCHITECTURES  
This section will provide a few relevant examples to 
illustrate the major management and orchestration (M&O) 
options and also the heterogeneity of the refined 
architectures. Given the limited dimension of this paper, the 
depth of discussion on them is also limited to the essential 
aspects illustrating the main characteristics and heterogeneity 
factors.  
A. Example 1 
The 5G PPP Working Group [2] and NORMA European 
Project [20] have proposed a 5G multi-domain architecture 
by defining four planes: Service, M&O, Control and Data 
planes (Figure 3). Note that in [2] the above are called 
“layers”; however, we believe that the correct semantics is 
rather “planes”. The architecture also includes a Multi-
Domain Network Operating System containing different 
adaptors and network abstractions above the networks and 
clouds heterogeneous fabrics.  
The Service plane comprises Business Support Systems 
(BSSs) and business-level Policy and Decision functions as 
well as applications and services operated by the tenant.  
This includes the end-to-end orchestration system (not 
detailed in this architecture). 
The 
M&O 
plane 
comprises 
a 
general 
Service 
Management, 
the 
Software-Defined 
Mobile 
Network 
Orchestrator (SDMO) and the ETSI NFV lower level 
managers (i.e., VNFM and VIM). The SDMO is composed 
of a Domain specific application management, an Inter-slice 
Resource Broker and NFVO. The SDMO performs the E2E 
management of network services; it can set up slices by 
using the network slice templates and merge them properly 
at the described multiplexing point. The Inter-slice Broker 
handles cross-slice resource allocation and interacts with the 
Service Management (SM) function. The SM is an 
intermediary function between the service layer and the 
Inter-slice Broker. It transforms consumer-facing service 
descriptions into resource-facing service descriptions and 
vice versa. The SDMO has a complete knowledge of the 
network managing the resources needed by all the slices of 
all tenants. This enables the SDMO to perform the required 
optimal configuration in order to adjust the amount of used 
resources. The MANO accommodates domain-specific 
application management functions (e.g., in 3GPP, this 
comprises 
Element 
Managers 
(EM) 
and 
Network 
Management (NM) functions, including Network (Sub-) 
Slice Management Function (N(S)SMF). Those functions 
would also implement ETSI NFV MANO interfaces to the 
VNF Manager and the NFVO.  
The Control Plane (CPl) is “horizontally” separated in 
two 
parts: 
intra 
and 
inter-slice 
control 
functions. 
“Vertically”, it is organized in SDN style, i.e., with three 
planes: Control applications (inter and intra-slice); SDN 
controllers; SDN nodes (these are actually slicing control 
function blocks realized as physical or virtual network 
functions PNF/VNFs). Note also the flexibility of SDN-NFV 
cooperation: some slicing control functions are seen and 
realized as SDN nodes.  
The SDN controllers are two types: Software-Defined 
Mobile Network Coordinator (SDM-X) and Software-
Defined Mobile Network Controller (SDM-C). Following the 
SDN principles, SDM-X and SDM-C translate decisions of 
the control applications into commands to VNFs and PNFs. 
Each network slice has an SDM-C, to manage the network 
slice resources and building the paths to join the NFs taking 
into account the received requirements and constraints. The 
SDM-C and SDM-X take care of dedicated and shared 
Network Functions (NFs), respectively.  SDM-X and SDM-
C as well as other control applications can be executed as 
VNFs or PNFs themselves; this shows the flexibility of 
SDN/NFV cooperation.  
The Data plane (DPl) comprises the VNFs and PNFs 
executing different tasks to carry and process the user data 
traffic. Following the NRFV principles VNF/PNF graphs are 
defined and configured in DPl. 

90
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
 
Figure 3.  5G PPP and NORMA project - proposed functional 5G slicing architecture (source: [2][20]) 
 
The Multi-Domain Network Operating System Facilities 
(not represented in Figure 3) is an additional subsystem 
which includes different adaptors and network abstractions 
above the networks and clouds heterogeneous fabrics. It 
allocates the (virtual) network resources and maintains 
network state; it also ensures network reliability in a multi 
domain environment. 
Horizontally, the architecture should cover all segments: 
RAN (radio and edge), core and transport. 3GPP has defined 
[2] the 5G System (5GS) comprising a core network (CN) 
and one or more access networks, e.g., a RAN. The CN 
consists of NFs, NF services and the interaction between 
NFs to support data connectivity and other services. It is 
needed to provide infrastructure connectivity from the 
Access Points (APs) to the CN, also referred to as transport 
network connectivity. Transport networks are the foundation 
of 5GS as they provide the network fabric interconnecting 
NFs, CN and RAN and the units of RAN.  
The architecture presented in Figure 3 is only high level 
defined. With respect to the meta-architecture capabilities 
exposed in Section III, it is evident that 5G PPP/NORMA 
architecture   can generally satisfy the requirements a., b., e. 
and partially f. However, several options could be considered 
for c., d., f., if wanting to develop further refinements 
regarding:   
c. Different execution environments 
The architecture (Figure 3) does not functionally define 
the virtual infrastructure, neither in data plane nor in the 
management and control planes, except mentioning the 
usage of graphs of PNF/VNFs. Therefore, one of several 
refinement options can be selected.   
 d. Working across different “organizational” or 
administrative domains 
Figure 3 does not define a mapping on a business models 
containing different actors. While a multi-domain feature is 
desired, the functional split between different actors is not 
yet defined. In [2] it is proposed the Mobile Network Service 
Provider as a main entity capable to serve several tenants 
with dedicated slices, based on the infrastructure offered by 
one ore more infrastructure providers, but without detailing 
the precise framework for resource management. Concerning 
the multi-domain capabilities one can assume that Inter-slice 
Broker can manage slices covering several domains [2] but it 
is not decided how such an Inter-slice Broker is mapped in 
flat style or hierarchical one onto business actors. 
 f. Subdivision of the infrastructure in logical separated 
and isolated slices.  

91
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
The Figure 3 architecture shows the split of the control 
and data plane in two regions: common (shared) and 
respectively dedicated functions. However, the choice on 
how to separate the slices from point of view performance 
(observed in the data plane) and security for both data and 
control plane) can lead to different options for solutions. 
Therefore, different or heterogeneous refinements (see 
Section IV and [2] for several possible solutions) can be 
selected for such matters. 
B. Example 2 
A multi-domain, multi-tenant hierarchized 
slicing 
architecture (viewed at run-time phase, i.e., after a slice 
instance has been created and activated) is presented  in 
Figure 4, adapted from  the proposal ETSI GR NFV-EVE 
012 [15] and J. Ordonez-Lucena et al. [4][21]. We state that 
in comparison with Example 1, this architecture presents a 
more clear hierarchization of M&O functions and also a 
clear mapping onto a business model. It is adopted a solution 
with multiple levels of orchestrators and the principle of 
clear separation between service management versus 
resource management.  
A multi-domain slice instance can span several InPs 
and/or administrative or technological domains belonging to 
different providers. Figure 4 shows several domains upon 
which multi-domain slices can be constructed. (the picture 
focuses on the transport and core network domains, omitting 
the RAN domain).  
  
The main M&O entity is the Network Slice Provider 
(NSLP). Inside NSLP, a highest layer multi-domain NSL 
Orchestrator (NSLO) (configured offline) has a main role, 
both in the creation phase of slices and also in the run-time 
phase. In the creation phase, NSLO receives from a tenant 
the order to deploy a NSLI (or the NSLP decides itself to 
construct a slice by provisioning actions). The NSLO should 
have enough information (including on multi-domain 
resource availability) in order to check the feasibility of the 
order. To accomplish this, it interacts with a lower level 
Resource Orchestrator (RO) (which aggregates resource 
information from several domains (InPs)), and also accesses 
the VNF and NS catalogues. 
 
 
NSL Instance 1 
Tenant SDN 
controller 
 
 
Multi-domain NSL Orchestrator 
 
Catalogs 
NS, VNF 
VNF 
chain,  
config 
VNF LCM 
NSL Provider 
 Domain 
NSL Instance n 
VNF 
VNF 
VNF 
Multi-domain Resource Orchestrator 
 
NSL 
 Tenant 
 n 
domain 
NSL Manager 
NS Orchestrator 
 
VNFM 
VIM 
InP 1 Domain 
 
 
 
 
 
 
 
 
 
 
PoP 1 
VNF 
VNF 
VNF 
VM 
Virtualisation 
layer 
SDN-IC 
HW Resources 
VIM 
InP 4 Domain 
 
 
 
 
 
 
 
 
 
 
PoP 3 
VNF 
VNF 
VNF 
VM 
Virtualisation 
layer 
SDN-IC 
HW Resources 
InP 2 Domain 
WAN 1 
SDN-WAN IC 
VNFs running 
on orange VMs 
Instantiated 
for each slice 
instance  
InP 3 Domain 
WAN 2 
SDN-WAN IC 
WIM 
WIM 
NSL 
 Tenant 
1 
domain 
 
Figure 4. Run-time view of a multi-domain slicing hierarchical architecture example 2  
(adapted from ETSI GR NFV-EVE 012 [15] and Ordonez-Lucena [4][21]) 
NS – Network Service; NSL - Network Slice; VNF – Virtualized Network Function; VNFM – VNF Manager; SDN - Software Defined Networking; LCM –
Life Cycle Management; VIM – Virtual Infrastructure Manager; WIM- Widea Area Infrastructure Manager; SDN-IC- Infrastructure SDN controller; HW- 
Hardware; WAN – Wide Area Network; InP - Infrastructure Provider 
 

92
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
The NSL provider plays a role of an infrastructure tenant; 
it rents the infrastructure resources owned by the underlying 
infrastructure providers and uses them to provision the NSL 
instances. The RO uses the set of resources supplied by the 
underlying VIMs/WIMs and optimally dispatches them to 
the NSL instances. All the NSL instances are simultaneously 
provided with the needed resources to satisfy their 
requirements and preserve their performance isolation. Note 
that in this high-level architecture proposal it is not detailed 
how the multi-domain capable RO is implemented in order 
to assure two important objectives: harmonizing the resource 
assignments per slice and per-domain and also to preserve 
the inter-domain independence in terms of management and 
control.  
For each new network slice instance (NSLI), an 
individual set of M&O entities is dynamically created and 
installed when the new slice instance is created. Each NSLI 
has its own M&O and control planes (this assures the slice 
isolation capability) composed of: NSL Manager, Network 
Service Orchestrator (NSO), Tenant SDN Controller and 
VNF Manager (VNFM). 
The NSLP rents infrastructure resources owned by the 
underlying InPs to construct NSL instances. The Resource 
Orchestration (RO) manages the set of resources offered by 
different INPs (the resources are supplied under the control 
of the underlying VIMs/WIMs), and optimally dispatches 
them to the NSLIs aiming to satisfy their requirements but 
preserving their logical isolation. The RO should have 
information on resource availability in each domain whose 
resources will enter the multi-domain NSLI. To construct a 
multi-domain slice, inter-domain interactions are also 
necessary.  
An SDN control is supposed to exist at domain level. The 
SDN - Infrastructure Controller (SDN-IC) manages and 
controls connectivity in its domain, under the directives of 
the corresponding VIM/WIM.  The VIMs and WIMs can act 
as SDN applications, delegating the tasks related to the 
management of networking resources to their underlying ICs. 
Does the above architecture satisfy the requirements of a 
meta-architecture (see Section III)? The answer is “yes”, i.e.: 
a. The individual control of NFs (their placement, LCM, 
etc.) can be realized due to existence of the pair- manager 
VNFM and tenant SDN Controller (at M&Olevel) and by 
the pair VIM and SDN-IC. 
b. The chaining of individual NFs into services (NF 
graphs) can be assured by the same M&O blocks as above. 
c. Different underlying execution environments: various 
virtualization 
techniques 
(virtual 
machines 
(VM), 
containers, or plain processes) can refine the architecture. 
Such details are not visible at this high level but are 
naturally possible to be embedded in each domain. 
d. Working across different “organizational”, or 
administrative domains, i.e., owned by network operators or 
companies and using various business models- is already 
emphasized in Figure 4. 
e. A large range of applications with different specific 
requirements 
(in 
terms 
of 
resource, 
deployment, 
orchestration and optimization goals) can be supported 
given that a tenant has interfaces to NSLs, allowing it to 
express its requirements. 
f. Subdivision of the infrastructure in logical separated 
and isolated slices with levels of guaranteed performance is 
possible to be achieved, given the mapping from services to 
the resources orchestrated by the RO. 
Refinements of the above high-level architectures are 
possible [4][15][21], following different paths to go further 
towards the system design. Examples could be:  
- how to split the RO functionalities between different 
operators’ domains in the case of E2E multi-domain 
slices;  
- the functional split among SDN-IC and WIM and 
consequently the interface/relationship between WIM and 
SDN-IC with respect to: (1) the style used by SDN-IC to 
upload information to VIM/WIM, about its available 
resources: on demand (OD) or in proactive (P) style (at 
SDN-IC initiative); (2) the amount and depth of information 
uploaded by SDN-IC on the network resources (graph, 
capacities, etc.). 
The above example illustrates the inherent heterogeneity 
of particular refined architectures, while all starting from a 
“tree root” defined by the meta-architecture requirements. 
C. Example 3 
T. Taleb et al. [7] recently proposed a multi-domain 
slicing hierarchical, complex management and orchestration 
architecture (Figure 5). They use a powerful definition of a 
slice, i.e., “a set of network functions, and resources to run 
these network functions, forming a complete instantiated 
logical network to meet certain network characteristics 
required by the Service Instance(s)”.  An E2E NSL can be 
deployed across multiple networks, stretching across the 
RAN, transport and core network segments; belonging to the 
same or different administrative domains.  
A NSLI typically consists of multiple Network Slice 
Subnet Instances (NSSIs) that represent a group of network 
function instances and/or logical connectivity. As an 
example, a Fully-Fledged NSLI, can consists of several 
NSSIs, each belonging to a different technology domain, e.g., 
Radio Access Network (RAN), transport and core. The RAN 
and core NSSIs are composed of VNF(s) interconnected over 
logical transport links. 
The proposed architecture is structured into four major 
strata: Multi-domain Service Conductor (MSC); Domain- 
specific 
Fully-Fledged 
Orchestration, 
Sub-Domain 
Management and Orchestration (MANO) and Connectivity, 
Logical Multi-domain Slice Instances.  
The architecture introduces (at top level) a novel 
architectural plane named Service Broker (SB), to handle 
incoming slice requests from verticals, for instance Mobile 
Virtual Network Operators (MVNO), and application 
providers. The main SB operations are: Network Service 
(NS) admission control and negotiation, considering service 
aspects; management of slice user/owner relationship 
enabling a direct tenant interface with the Multi-domain 
Service Conductor (MSC) plane; billing and charging; NSLI 
scheduling, i.e., start and termination instant of time, related 
with slice composition and decommission.  

93
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
 
Service Conductor 
 
Service 
Repository 
End 
Users 
Multi-domain Service Conductor Plane 
Unified Connectivity 
Resource Manager 
 
 Tenants (verticals, MVNO, APP providers 
Unified Cloud  
Mediator 
 
OSS/BSS 
Cross-domain Slice Coordinator 
Cross-domain Slice Coordinator 
Cross-domain Slice Coordinator 
Slice A 
Slice B 
Slice C 
Logical Multi-domain Network Slices 
Multi-domain Network Slice Functions 
Control Plane  
VNFs 
Data Plane  
VNFs 
Virtualisation layer 
Physical Resources: 
Network, Compute, Storage 
 
NFVI 
Virtual Resources: 
Network, Compute,Storage, 
VNF-domain  
 
 
D1 
D2 
D3 
Service Management 
 
 
 
 
 
 
 
 
 
 
PoP 3 
Slice Life-Cycle Management 
Fully-fledged Net Slice Orchestration Plane 
 
 
 
 
 
 
 
 
 
 
PoP 3 
Sub-domain NFV MANO 
 
 
 
 
 
 
 
 
 
PoP 3 
VNF 
VNF 
VIM/WIM 
NFVO 
VNFM (s) 
Domain 
specific VNF 
Catalogue 
Service Broker 
 
  
 
Sub-domain  
Connectivity 
control 
SDN 
Controller 
Multiple Admin Domains 
One per 
slice 
One per 
domain 
 
Figure 5 Multi-domain multi-tenant 5G slicing architecture example 2 (adapted from [7]) 
The Multi-domain Service Conductor is (functionally) 
placed under Service Broker and performs service 
management across federated domains. The MSC stratum 
analyzes and maps the service requirements of incoming 
multi-domain slice requests onto the one or several 
administrative domains. It also maintains the desired 
service performance throughout the entire service lifecycle. 
Inside MSC, a Service Conductor (SC) entity is placed on 
top; the SC analyses and maps the service requirements of 
incoming slice requests onto appropriate administrative 
domains and maintains the desired service performance 
during service lifecycle.  
Below SC, a Cross-domain Slice Coordinator is 
defined for each slice, which aligns cloud and networking 
resources across federated domains and carries out the Life 
Cycle Management (LCM) operations of a multi-domain 
slice. It also establishes and controls inter-domain 
transport 
layer 
connectivity, 
assuring 
the 
desired 
performance. A multi-domain NSLI can combine several 
Fully-Fledged NSLIs that belong to distinct administrative 
domains, to get an E2E multi-domain (i.e., a federated 
NSLI).  
A coordinated management system is required to 
facilitate an effective LCM of a Fully-Fledge NSLI. At 
minimum, the following management, orchestration and 
control M&O&C  entities are necessary: _ Network Slice 
Manager for the configuration and operation of a mobile 
network service to a Fully-Fledge NSLI; _ NFV MANO to 
instantiate and orchestrate the requested VNFs considering 
the supported availability; SDN Controller that connects 
together VNFs forming service function chains and 
controls the transport layer connectivity. 
For 
each 
domain 
a 
Fully-fledged 
NetSlice 
Orchestration Plane is constructed, dealing with specific 
operations associated to slices instance in that domain 
(such as service management and slice lifecycle 
management). 
The 
lower 
layers 
of 
this 
specific 
orchestration plane comprise NFV MANO functionalities 
(NFVO, VNFM and VIM). Low level connectivity tasks 

94
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
between VNF/PNFs are performed by an SDN controller; 
this is a similar solution as in Example 2. 
The above complex architecture can satisfy all of a…f. 
general requirements of the meta-architecture. Many 
specific refinements can be added to satisfy the A..K 
(Section IV) as presented in the work [7].  
D. Example 4   
The 5G-MoNArch H2020 project [22] develops a 
hierarchical architecture consisting of four layers: Service, 
M&O, Controller and Network layer (similar to that 
proposed in [2] by 5GPPP). 
The main design goals of the 5G-MoNArch 
architecture design [22] has been among those defined by 
the meta-architecture described in Section III:  
(1) Support for E2E network slicing: one can combine 
different options of slicing support across M&O and 
network layers for each slice instance. Several options are 
possible: a. slice-specific functions (i.e., dedicated/ 
customised functions that are not shared with others); b. 
functions (or function instances) that are shared by 
multiple slices and have the capability to address 
requirements from multiple slices in parallel). 
(2) Split of control and user/data plane throughout all 
network domains, including RAN, Core Network and 
Transport Network. 
(3) Flexible architecture customisation: this is 
performed by the management system which can modify 
the architecture and functionality used in existing slices. 
For example, this can include further deployment, 
management, orchestration, and control instructions for 
specialised NFs [22]. 
The overall functional architecture is presented in 
Figure 6. The Service layer comprises Business Support 
Systems (BSS), business-level Policy and Decision 
functions, and further applications and services operated 
by a tenant or other external entities.  
The management and orchestration layer contains 
M&O functions from different network, technology, and 
administration domains (e.g., 3GPP public mobile network 
management, ETSI NFV MANO, ETSI Multi-access Edge 
Computing functions, management functions of transport 
network or enterprise networks). The M&O layer is 
divided into an End-to-End (E2E) service M&O sublayer 
and an additional sublayer containing domain-specific 
management functions. An E2E network slice is composed 
of Network Slice Subnet Instances (NSSIs), typically each 
from a different network domain, including subnets from 
radio access network (RAN), transport, and core network 
domains, or private networks. The M&O layer performs 
cross-domain coordination actions.  
Note again the architectural separation between the 
management and control. The Controller layer comprises 
two types of controllers- cross-slice and the intra-slice 
(XSC and ISC, respectively). On top of the controllers, 
there are Control Applications; together they realise the 
network programmability in SDN style. Each network 
domain has a dedicated controller that is aware of the 
domain technology and implementation characteristics.  
Generally, the MoNArch architecture satisfies the 
requirements of the meta-architecture described in Section 
III. However, many (heterogeneous) refinements should be    
added in order to cover the A..K (Section IV) needs.    
 
 
 
 
Figure 6. 5G-MoNArch high-level overall functional architecture (Source: [22]) 
 
 

95
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
Other variants f architectures are proposed and developed 
in different research projects [18]. Again, all of them satisfy 
the characteristics of the meta-architecture described in 
Section III. However, different specific developments are 
present in their refined version. 
VI. 
CONCLUSIONS AND FUTURE WORK 
This is an overview-type paper; it analyzed different 
M&O architectures for 5G slicing, in order to evaluate the 
degree of their similarity/convergence, given the large 
variety of proposals existing in various studies, standards and 
projects. 
It has been shown that business model definitions 
(actors) and their roles (Section II) have an important impact 
on the high-level definition of the architectural assembly. 
Actually, the variety of business models is a primary factor 
of architectural heterogeneity, given the different definition 
of actors and roles, firstly adopted mainly from business 
reasons and only secondly from technical ones. Also, the 
definition of a slice itself is still not yet globally agreed and 
this situation naturally leads to different architectures. 
 However, a unifying meta-architecture has been defined 
(see Section III), answering to some basic requirements for 
5G systems and, in particular, for 5G M&O slicing. It has 
been derived from ETSI MANO work complemented with 
additional functionalities slice-oriented. The most relevant 
architecture examples found in literature and developments 
are essentially compliant with the basic meta-architecture. It 
is important to note that all relevant architectures proposed in 
different studies, standards and projects, generally try to 
achieve the main meta-architecture capabilities. 
On the other hand, many factors are inducing 
heterogeneity of the refined architecture variants, such as: 
multi-domain, 
multi-tenant, 
multi-operator, 
multi-
technology.  
 Future work can go further to consider more deeply the 
multi-x aspects, implementation and performance. Future 
work can concentrate on M&O issues such as: an appropriate 
cooperation between slice-specific management functional 
blocks. Policies need to be captured in a way that they can be 
automatically validated. This automation enables slice-
specific functional blocks to be authorized to perform the 
corresponding management and configuration actions in a 
timely manner. 
Designing computationally efficient resource allocation 
algorithms and conflict resolution mechanisms at each 
abstraction layer is also a way to flexibly assign resource on-
the-fly to slices.  
Lastly, one should mention new approaches for 5G 
slicing M&O architectures: usage of artificial intelligence 
and in particular, machine learning techniques in order to 
provide 
more 
M&O 
automation, 
optimization 
and 
capabilities of dealing with big volumes of data [23]-[26]. 
This domain is only at its beginning, so it is an open field for 
further studies. 
 
 
 
REFERENCES 
[1] 
E. Borcoci, C. Contu, A. Ciobanu, “5G Slicing Management 
and Orchestration Architectures - Any Convergence?”, The 
Eleventh International Conference on Advances in Future 
Internet, AFIN 2019, October  2019 - Nice, France  
https://www.iaria.org/conferences2019/ProgramAFIN19.htm
l [retrieved February, 2020] 
[2] 
5GPPP Architecture Working Group, “View on 5G 
Architecture”, Version 2.0, December 2017, https://5g-
ppp.eu/wp-content/uploads/2017/07/5G-PPP-5G-
Architecture-White-Paper-2-Summer-2017_For-Public-
Consultation.pdf, [retrieved June, 2019]. 
[3] 
5G PPP Architecture Working Group, “View on 5G 
Architecture”, 
Version 
3.0, 
June, 
2019, 
https://5g-
ppp.eu/wp-content/uploads/2019/07/5G-PPP-5G-
Architecture-White-Paper_v3.0_PublicConsultation.pdf, 
[retrieved October,  2019]. 
[4] 
J. Ordonez-Lucena et al., “Network Slicing for 5G with 
SDN/NFV: Concepts, Architectures and Challenges”, IEEE 
Communications Magazine, 2017, pp. 80-87, Citation 
information: DOI 10.1109/MCOM.2017.1600935. 
[5] 
X. Foukas, G. Patounas, A. Elmokashfi, and M. K. Marina, 
“Network Slicing in 5G: Survey and Challenges”, IEEE 
Communications Magazine, May 2017, pp. 94-100. 
[6] 
I. Afolabi, T. Taleb, K. Samdanis, A. Ksentini, and H. Flinck, 
“Network Slicing & Softwarization: A Survey on Principles, 
Enabling 
Technologies 
& 
Solutions”, 
IEEE 
Communications Surveys & Tutorials, March 2018, pp. 
2429-2453.  
[7] 
T. Taleb, I. Afolabi, K. Samdanis, and F. Z. Yousaf, "On 
Multi-domain Network Slicing Orchestration Architecture & 
Federated 
Resource 
Control", 
http://mosaic-
lab.org/uploads/papers/3f772f2d-9e0f-4329-9298-
aae4ef8ded65.pdf, [retrieved June, 2019]. 
[8] 
ETSI GS NFV 002, “NFV Architectural Framework”, 
V1.2.1, December, 2014. 
[9] 
ETSI GS NFV-IFA 009, “Network Functions Virtualisation 
(NFV); 
Management 
and 
Orchestration; 
Report 
on 
Architectural Options”, Technical Report, V1.1.1, July, 2016.  
[10] ETSI GR NFV-IFA 028, “Network Functions Virtualisation 
(NFV) Release 3; Management and Orchestration; Report on 
architecture options to support multiple administrative 
domains”, Technical Report, V3.1.1, January, 2018. 
[11] ONF TR-526, “Applying SDN Architecture to 5G Slicing”, 
April 
2016, 
https://www.opennetworking.org/wp-
content/uploads/2014/10/Applying_SDN_Architecture_to_5
G_Slicing_TR-526.pdf [retrieved January, 2020]  
[12] “5G 
Network 
and 
Service 
Management 
Including 
Orchestration” 
v3.14.0, 
Project 
5G 
NWMO, 
2019, 
https://www.ngmn.org/fileadmin/ngmn/content/downloads/T
echnical/2019/190312_5G_Network_and_Service_Manage
ment__including_Orchestration_3.14.0.pdf, [retrieved June, 
2019]. 
[13] “ETSI NFV Announces New Features to its Architecture to 
support 
5G”, 
https://www.etsi.org/newsroom/press-
releases/1622-2019-07-etsi-nfv-announces-new-features-to-
its-architecture-to-support-5g, [retrieved July, 2019]. 
[14] G. Daniels, “ETSI tightens 3GPP 5G compatibility with 
NFV” 
Release 
3, 
July 
2, 
2019, 
https://www.telecomtv.com/content/nfv/etsi-tightens-3gpp-
5g-compatibility-with-nfv-release-3-35653/, [retrieved July, 
2019]. 

96
International Journal on Advances in Internet Technology, vol 13 no 1 & 2, year 2020, http://www.iariajournals.org/internet_technology/
2020, © Copyright by authors, Published under agreement with IARIA - www.iaria.org
[15] ETSI GR NFV-EVE 012, Release 3 “NFV Evolution and 
Ecosystem; Report on Network Slicing Support with ETSI 
NFV Architecture Framework”, Technical Report, V3.1.1, 
December, 2017. 
[16] 3GPP TR 28.801, "Telecommunication management; Study 
on management and orchestration of network slicing for next 
generation network", V15.0.0, September, 2017. 
[17] 3GPP TS 28.530, “Management of 5G networks and 
network slicing; Concepts, use cases and requirements”, Rel. 
15, April 2018. 
[18] A. Galis, “Network Slicing- A holistic architectural 
approach, orchestration and management with applicability 
in 
mobile 
and 
fixed 
networks 
and 
clouds”, 
http://discovery.ucl.ac.uk/10051374/, [retrieved July, 2019]. 
[19] K. Katsalis, N. Nikaein and A. Edmonds, "Multi-Domain 
Orchestration 
for 
NFV: 
Challenges 
and 
Research 
Directions", 2016 15th Int'l Conf. on Ubiquitous Computing 
and Communications and International Symposium on 
Cyberspace and Security (IUCC-CSS), pp. 189–195, DOI: 
10.1109/IUCC-CSS.2016.034, 
https://ieeexplore.ieee.org/document/7828601, 
[retrieved 
July, 2019]. 
[20] 5G NORMA D3.2 Network Architecture – Intermediate 
Report, 
https://5gnorma.5g-ppp.eu/dissemination/public-
deliverables/ [retrieved September, 2019]. 
[21] J. Ordonez-Lucena et al., "The Creation Phase in Network 
Slicing: From a Service Order to an Operative Network 
Slice", 
European 
Conference 
on 
Networks 
and 
Communications 
(EuCNC), 
2018, 
https://arxiv.org/abs/1804.09642 [retrieved July, 2019]. 
[22] H2020-ICT-2016-2, Monarch Project, 5G Mobile Network 
Architecture for diverse services, use cases and applications 
in 5G and beyond, Deliverable D2.3, “Final overall 
architecture”, 
2019, 
https://5g-monarch.eu/wp-
content/uploads/2019/05/5G-
MoNArch_761445_D2.3_Final_overall_architecture_v1.0.p
df, [retrieved June, 2019]. 
[23] V. P. Kafle et al., “Consideration on Automation of 5G 
Network slicing with Machine Learning”, ITU Kaleidoscope 
Santa Fe, 2018. 
[24] J. Moysen and L. Giupponi, “From 4G to 5G: Self-organized 
Network 
Management 
meets 
Machine 
Learning”, 
arXiv:1707.09300v1 [cs.NI] 28 July 2017. 
[25] S. Ayoubi et al., “Machine Learning for Cognitive Network 
Management”, IEEE Communications Magazine, January 
2018, pp.158-165. 
[26] D. Lorenz et al., “SliceNet – Cognitive Slice Management 
Framework for Virtual Multi-Domain 5G Networks”, 
https://www.systor.org/2018/pdf/systor18-21.pdf, [retrieved 
September, 2019]. 
 
 
 

