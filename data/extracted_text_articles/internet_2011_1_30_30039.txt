 
 
Towards a Decentralized QoE Layer for the Mobile Internet 
Martin Dobler, Jens Schumacher 
Product and Process Engineering 
Vorarlberg University of Applied Sciences  
Dornbirn, Austria 
{doma, scj}@fhv.at 
 
 
 
Fikret Sivrikaya, Sebastian Peters 
DAI Labor 
TU Berlin 
Berlin, Germany 
{Fikret.Sivrikaya, Sebastian.Peters}@dai-labor.de 
Eileen Dillon, Gemma Power 
Telecommunications Software and Systems Group 
Waterford Institute of Technology 
Waterford, Ireland 
{edillon, gpower}@tssg.org
 
 
Abstract — Network selection on current mobile devices has to 
be done manually by the user and is furthermore strongly 
dominated by monopolistic telecom operators. A decentralized 
Quality of Experience (QoE) layer supported by a QoE 
knowledge base filled with automatically and user created QoE 
reports will offer a basis for user-centric and optimized 
network selection for users in the Future Internet. An 
automated handover from one networking interface to another 
can then be performed by a mobile or portable device 
automatically. This papers focuses on how a decentralized QoE 
layer for the mobile Internet can be achieved by describing 
how a QoE model is defined and QoE reports are gathered, 
shared and distributed. The content of this paper is based upon 
the results of the PERIMETER project. PERIMETER’s main 
objective is to establish a new paradigm for user-centricity in 
advanced 
networking 
architectures. 
The 
PERIMETER 
middleware is briefly explained and testing methodologies for 
involving the user in the process of creating a user-centric QoE 
based mobile Internet are presented.  
Keywords - Quality of Experience; User-Centric; Seamless 
Mobility; Always Best Connected; Future Internet  
I. 
 INTRODUCTION  
Telecommunication network management practices are 
strongly rooted in the monopolistic telecom operators. The 
liberalization of the operators has only changed the 
landscape in a way that there are multiple closed operators 
rather than one closed operator. As a result they are usually 
centrally 
managed, 
poorly 
integrated 
with 
outside 
components, and strictly isolated from external access. On 
the other hand the IP world has been about internet-working 
from its conception on. Furthermore the exposure of users to 
the prolific Internet services means that similar service 
models will have to be provided by the next generation 
telecom networks. The clash between these two opposite 
approaches poses important 
challenges 
for 
network 
operators. This is due to the fundamental risk associated with 
their networks turning into mere bit-pipes. In order for future 
telecom networks to be economically viable, they should 
provide similar user experience with Internet services, albeit 
in a more managed and reliable manner. 
There lies the grand challenge of the so-called Telco 2.0 
operators. The operators have to offer even more data 
intensive applications on their networks to make their 
operations profitable. This comes in a time, when the 
increasing data traffic is starting to hurt user experience, and 
pose itself as the biggest risk facing the operators [1]. 
Therefore, as we believe, a paradigm shift in the Future 
Internet is needed. Away from centralised, closed and single 
contract model towards an IP world where the user is 
consuming the services based upon their needs in the 
multiple-access multiple-operator networks of the Future 
Internet.  
The approach presented in this paper is based upon the 
findings of the PERIMETER research project [2] which aims 
at establishing new paradigms for user-centricity in 
networking architectures. PERIMETER uses Quality of 
Experience (QoE) models to ensure user-centric optimal 
network usage. The finding of a user-centric QoE model is 
described in Section II. Section III focuses on the 
PERIMETER middleware and Section IV on how gathered 
QoE knowledge is spread in a mobile network. Section V 
describes the actual process on how QoE information is 
gathered and computed. The paper concludes with the testing 
methodologies as well as a summary and the future work 
ahead for the PERIMETER project. 
II. 
DEFINING A USER-CENTRIC QOE MODEL FOR 
NETWORK USAGE – THE PERIMETER APPROACH  
Nearly all portable and mobile devices nowadays contain 
a variety of network interfaces, among these GPRS, UMTS, 
WiMAX or WiFi. Additionally, today’s devices allow the 
user to have a larger set of different contracts with different 
operators, e.g. with the use of multi-SIM-card-devices or by 
accessing WiFi hotspots. However, changing a connection 
from one networking interface to another is still the 
responsibility of the user. The PERIMETER approach 
14
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

 
 
targets at shifting this responsibility from the user to the 
device itself. Therefore PERIMETER is targeting a paradigm 
shift in the Future Internet where the user is in an Always 
Best Connected (ABC) state, where ABC is defined by the 
user’s preferences and his or her environment. Additionally, 
if an unknown connection is encountered, e.g. a WiFi 
hotspot, the new connection is evaluated based upon the 
information and data gathered by other PERIMETER users – 
besides the physical data of the connection quality.    
To define a QoE model of all connections available to the 
user, we need to identify parameters and user preferences 
which should be considered in the model. To identify these 
we use a scenario driven approach. In this approach real life 
scenarios are developed and the relevant elements are 
transformed into preferences and data input for the QoE 
model. The scenarios offer us sets of preferences and data 
input in the following categories:  
 
Connection cost 
 
Connection quality 
 
Security / Privacy 
 
Battery life 
An excerpt of a common scenario is given below:  
“Also, Linda, the lawyer that was conducting the 
transaction was concerned. It was not the cost of the call, but 
her privacy. She felt uneasy about how much private 
information could be disclosed from someone just knowing 
the existence of such a call. She really wanted no one to be 
able to trace her and to learn that she was not in her office 
but in another country where a huge deal was expected to 
finalise. And, even worse, if just one would know that she 
was talking with Helen at that time of the day…. She was 
aware that her calls leak location and identity, and could 
impart other information also. Her only hope was that 
nobody was keeping track of this call.” 
The scenarios offer also a possibility to test the 
PERIMETER approach in a Living Lab [3] environment (see 
Section VI). 
III. 
THE PERIMETER MIDDLEWARE  
The PERIMETER middleware architecture is based on 
the traditional layered architecture approach. There are two 
types of PERIMETER hardware nodes, the PERIMETER 
Terminal which is a mobile handheld device with certain 
resource restrictions, e.g. storage space, and a Support Node 
which has no resource restrictions, such as a server or laptop. 
The architecture depicted in Figure 1 permits users to 
experience seamless connectivity while on the move. The 
PERIMETER components include: 
 
 
Figure 1. PERIMETER Middleware Architecture 
 
 
The Application Layer consisting of the Graphical 
User Interface (GUI) and Application Manager 
which provides the user with an intuitive interface to 
the entire PERIMETER system. 
 
The Context Inference Engine (CIE) which collects 
raw source data, such as geographical location and 
network information, and infers high level context 
information from this. 
 
The Data Network Processor (DNP) processes 
information relevant for making a decision about 
how satisfactory the current connection is for the 
user based on their context (from the CIE) and other 
contributing factors. 
 
The Decision Maker component decides whether a 
network switch is required based on information 
from the DNP and CIE. It also decides which 
network should be connected to. 
 
The 
Privacy 
Preserving 
Authentication, 
Authorization, Accounting and Reputation (PPA3R) 
module 
provides 
identity 
management, 
anonymisation and pseudonimization. 
 
The Trust Engine (TE) performs computations on 
data processed in the PERIMETER system, 
assigning trust and reputation values as appropriate. 
 
The Vertical Handover Abstraction Layer (VHOAL) 
and Measurements modules are charged with the 
task of seamless switching of networks. 
 
The Storage Layer takes care of storing and 
retrieving local and historical information using a 
peer-to-peer approach.  
 
The interaction of these components provides a 
comprehensive architecture upon which the premise of the 
PERIMETER paradigm is built.  
15
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

 
 
IV. 
A DISTRIBUTED QOE KNOWLEDGE BASE FOR 
MOBILE INTERNET  
QoE 
reflects 
the 
collective 
effect 
of 
service 
performances that determine the degree of satisfaction of the 
end-user, e.g. what user really perceives in terms of 
usability, accessibility, retainability and integrity of the 
service [4]. Until recently, seamless communications has 
been mostly based on technical network Quality of Service 
(QoS) parameters, but a true end-user view of QoS is 
needed to link between QoS and QoE. While existing 3GPP 
or IETF specifications describe procedures for QoS 
negotiation, 
signaling 
and 
resource 
reservation 
for 
multimedia 
applications, 
such 
as 
audio/video 
communication and multimedia messaging, support for 
more advanced services involving interactive applications 
with diverse and interdependent media components is not 
specifically addressed. Such innovative applications, likely 
to be offered by 3rd party application providers and not the 
operators, include collaborative virtual environments, smart 
home applications and networked games. Additionally, 
although the QoS parameters required by multimedia 
applications are well known, there is no standard QoS 
specification enabling to deploy the underlying mechanisms 
in accordance with the application QoS needs. 
For the Future Internet to succeed and to gain wide 
acceptance of innovative applications and service, not only 
QoS objectives but also QoE have to be met. Perceived 
quality problems might lead to acceptance problems, 
especially if money is involved. For this reason, the 
subjective quality perceived by the user has to be linked to 
the objective, measurable quality, which is expressed in 
application and network performance parameters resulting 
in QoE. Feedback between these entities is a prerequisite for 
covering the user's perception of quality [5].  
The PERIMETER project investigates a user-centric 
networking 
paradigm 
for 
future 
telecommunication 
networks, where users not only make network selection 
decisions based on their local QoE evaluation but also share 
their QoE evaluations among each other for increased 
efficiency and accuracy in network selection, as depicted in 
Figure 2. In this paper we present the conceptual framework 
introduced by PERIMETER to achieve such user-centric 
network architecture for sharing and exploiting user quality 
of experience data. The focus here is on the utilization of a 
distributed knowledge base (KB) of QoE reports for 
improving network access selection decisions, while the 
actual implementation of the KB is out of the scope of this 
paper. The reader is referred to technical reports and public 
deliverables of the PERIMETER project for further details 
[2]. 
In order to make user-centric decisions and share user 
experiences based on the QoE, a software entity must first 
evaluate and quantify QoE for a given set of inputs including 
the network interface and the application running on the user 
terminal. Named as the Data Network Processor (DNP) in 
PERIMETER, this entity is responsible for calculating, from 
network 
performance 
measurements, 
user’s 
context 
information and user’s feedback, a QoE descriptor (QoED).  
 
 
 
Figure 2. Future user-centric networking paradigm based on a QoE 
framework. 
Each QoED item is an aggregate and synthetic 
description of the quality of the user’s experience. It consists 
of a set of key parameters that summarize the quality of 
service from a user’s point of view: 
 
Mean Opinion Score (MOS) for different types of 
applications 
 
Cost rating 
 
Security rating 
 
Energy saving issues 
Once the QoED is calculated, it is uploaded onto a 
distributed knowledge base (KB), which is a peer to peer 
storage module running on user terminals and on the so 
called support nodes specifically deployed by the operators 
with the incentive of obtaining user QoE reports more 
efficiently. The distributed knowledge base of QoE reports 
can then be probed with a QoED query (QoEDq) in order to 
obtain past QoE reports of other users for decision making, 
as will be described later in more detail. A QoEDq consists 
of a set of optional parameters that are used to filter network 
performance and user’s context information stored both 
locally and globally. These filters apply to: 
 
Network 
connection, 
to 
get 
performance 
information and QoED items associated to it 
 
Application information, to get QoED items 
calculated for applications of the same class 
 
Geographical location, to get QoED items 
calculated at the same area 
 
User’s id, to get QoED items calculated by a 
certain user 
A QoEDq item may contain all or just a reduced set of 
parameters, allowing a wide variety of queries: QoEDs 
associated to a certain provider or a certain technology, etc. 
The calculated QoED items are mainly utilized by the 
16
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

 
 
Decision Maker (DM), which will be described in the 
following section. 
The DNP may generate QoED reports in two different 
ways: (i) Subscription based reports, where a certain 
component, which acts as a client from the DNP’s point of 
view, subscribes to the reception of QoED reports according 
to a specific QoEDq. (ii) Unsolicited reports, where the DNP 
takes the initiative and sends a QoED report to all the 
components that offer a receiving interface for this type of 
events. The unsolicited reports are triggered by events that 
are related to an imminent handover action due to a 
significant change of network conditions, for example, signal 
loss. In this case, the QoED specifies the network that 
triggered the event and the actual user’s context description 
(location, application under use, etc.). 
V. 
USER-CENTRIC DECISION MAKING FOR IMPROVED 
QOE  
The knowledge gathered by the DNP through local and 
remote QoE reports, user context information, and user 
preferences are all fed into a controller entity on the mobile 
device, 
named 
as 
the 
Decision 
Maker 
(DM) 
in 
PERIMETER. This is the entity that makes use of all those 
QoE related inputs to take allocation decisions for all the 
applications running on the terminal. The decisions that the 
DM is responsible for taking are what we call allocation 
decisions, where different applications running on the 
terminal are allocated to different access networks operated 
by different network providers. From this perspective the 
atomic decision is the movement of an application from a 
certain Point of Attachment (PoA) to another. This decision 
is made based on local and remote QoE reports, abstracting 
the network and subjective user satisfaction, context reports, 
and user preferences. The main purposes of the DM can be 
listed as follows: 
 
Take allocation decisions on which operator will be 
chosen for the applications  
 
Utilize local and remote QoE reports for the 
decisions 
 
Utilize context reports for the decisions 
 
Utilize user preferences for the decisions 
 
Infer the failure mode that has led to degradation in 
the QoE 
The novel PERIMETER approach, in which users share 
their experiences, allows novel decision algorithms to be 
developed. Within this scope, the DM differentiates itself 
from the state of the art decision mechanism in the following 
aspects: 
 
Failure Mode Inference: The DM is able to discern the 
cause of the problem that has led to the degradation in 
QoE. The degradation can be due to a problem at the 
application service provider side, core network side, 
access network side, or at the air interface, as depicted 
in Figure 3. This novelty has two advantages. First of 
all, it minimizes the number of allocations that require 
handovers, which puts burden on network components, 
and degrades the QoE even more for their durations. 
Secondly, the users are not concerned with the actual 
cause of degradation in the QoE. They have a holistic 
view of the application and the service agreement. If an 
application is not running on an operator network 
properly, they will most likely blame the network 
operator, and give a bad MOS input. Thus there is an 
incentive 
for 
the 
operators 
to 
select 
decision 
mechanisms that are able to discern the causes of the 
connection problems. This information can also be used 
for network optimization purposes.  
 
Reasoning: The fact that users will be exchanging 
information about subjective measures on their 
applications requires a common understanding and 
agreement on the concepts that make up these 
subjective measures. This necessitates a semantically 
enhanced representation of the stored information. 
Reasoning algorithms will be used for performing 
Failure Mode Inference and taking the appropriate 
decisions based on the inferred failure mode.  
 
Distributed Probing: Thanks to the PERIMETER 
middleware, 
a 
distributed 
database 
of 
network 
performance data as experienced from different 
locations is available. This allows a practical 
implementation of the distributed probing of the 
network. This approach is used for Failure Mode 
Inference at the first stage, but it will be investigated for 
further utilization purposes that may benefit the 
network operators as well.  
 
The DM requests sets of remote QoE reports, which are 
delivered in form of statistical distributions, a mathematical 
representation of the QoE reports. Within the Failure Mode 
Inference these distributions are fed into a Bayesian 
Network, which outputs the probability that a specific failure 
in some part of the network occurred. The comparison of 
user generated QoE reports is based on the assumption that 
users connected via the same Access Point share the same or 
at least parts of the route to a certain service and thus 
experience similar problems accessing their service or using 
a specific application.  
In order to deduce which part of the network is affected 
by impairments (e.g. congestion), those QoE reports are 
requested from the distributed Storage that complement the 
view on the network. Following our assumption this includes 
remote user QoE reports of the currently used PoA and 
service. These two sets of QoE reports correspond to random 
distributions, one distribution of users’ experience of our 
PoA and one of users of other PoAs using the same service 
or application. 
Based on these two distributions from randomly selected 
users the most likely source of an impaired local QoE should 
be inferred. The events within each distribution are further 
categorized into two quality states that reflect users MOS, 
17
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

 
 
namely good and bad. These quality states can now serve as 
an input to the Bayesian Inference mechanism that is capable 
of performing inference in the face of incomplete knowledge 
(randomly chosen subset of users) and uncertainty 
(unconsidered causes for the QoE degradation). The outcome 
of the reasoning process in the Failure Mode Inference (FMI) 
component is either that a failure in a specific part of the 
network is most probable (in the Access Network (AN) or in 
the Service Domain (SD)) or the cause for impairments 
might remain unsolved.  
While the FMI is used for the current allocation only, 
another inference mechanism called Prospective Network 
Analysis (PNA) makes use of remote QoE reports to 
determine the QoE that can be expected for a speciﬁc 
prospective PoA. Again remote QoE reports are requested, 
this time for the prospective PoA and the used service. The 
received distribution is then used to calculate the mean MOS 
for the prospective PoA. If the outcome of the PNA suggests 
that the prospective network has most probably no positive 
effect on the QoE the application will remain at its current 
PoA. 
 
 
 
Figure 3. Different modes of failure in a multi-operator, multi-access-
technology environment. 
VI. 
TESTING THE APPROACH  
The proposal of a distributed knowledge base and user-
centric allocation decisions based on this KB in 
PERIMETER requires an experimentally driven research 
approach in order to (i) fine-tune and optimize the decision 
parameters in the proposed framework, and (ii) ensure 
healthy progress of software development through the 
implementation-testing 
cycle. 
On 
these 
grounds, 
PERIMETER makes a distinction between the definition of 
testing and that of experimentation, and each is handled 
differently within the project. 
A. PERIMETER Testing Process 
In PERIMETER, testing is considered to be the 
continuous process needed in software development. The 
Agile software development methodology [6] was chosen for 
use within the project as it was considered to be the most 
adaptable, fluid and iterative methodology from those 
evaluated. Coupled with this, it has been successfully applied 
to large scale projects previously (for example [7] and [8]) 
and has been proven to lead to higher quality software when 
compared to using traditional methods [6]. In PERIMETER, 
the use of Agile is combined with a Test Driven 
Development (TDD) [9] approach to provide the adaptable, 
fluid and iterative development and testing cycle that is 
required [10]. 
The need for processes, supporting tools and automation 
is necessary for the success of most software projects, but is 
essential for the success of large scale experimental ventures. 
PERIMETER employs a number of processes and tools [11] 
to 
aid 
the 
processes 
of 
team 
collaboration 
and 
communication, testing, continuous integration (Hudson) and 
structured software development.  
In this stage of development and testing, i.e. in a 
continuous build environment, a number of testing processes 
including unit (white-box), functional (black-box) and 
integration testing, are conducted to ensure that the 
developed software is brought to a level where it achieves its 
functional objectives.  
B. PERIMETER Experimental Process 
In PERIMETER, experimentation is needed to guarantee 
the success of the research, its innovation and the usability 
aspects of the project. These are verified in two large scale, 
state of the art testbeds, one in Waterford Institute of 
Technology (WIT) Ireland and one in Technical University 
of 
Berlin 
(TUB), 
Germany. 
These 
testbeds 
are 
interconnected 
over 
a 
Layer 
3 
connection. 
This 
interconnection was then matured to a Layer 2 federation in 
the final phase of the project. PERIMETER has also applied 
for, and was successful in procuring a FEDERICA slice (5 
virtual nodes) for use in the project [12].  
Conformance tests are performed on the PERIMETER 
system installed and running on the federated testbed to 
ensure that key components of the system are functioning as 
expected. These tests are complemented with interoperability 
tests to ensure the end-to-end functionality of the system is 
as expected. These processes are tested against the scenario 
under analysis, in the scenario-driven approach used in this 
project in order to demonstrate that the testing process is 
robust and to ensure the verifiability and reliability of the 
results. It is essential that both testing processes were 
repeatable and reproducible in order to achieve this. 
Application testing for the specific applications running on 
the federated testbeds is also performed.  
This process is further complemented by the employment 
of a user-driven approach to the requirements specification 
and the determination of features and subsequent testing 
phases with the use of Living Labs [3] and dedicated 
usability sessions. Performance and scalability issues are 
addressed with the introduction of emulation and simulation 
of network conditions. 
18
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

 
 
C. Role of Testbeds in PERIMETER 
The distinction between testing and experimentation in 
PERIMETER allows the role of the federated testbed within 
this process to be further examined. The build environment 
which is used for the testing process allows a certain level of 
testing to be achieved. However, it is within the federated 
testbed environment where a greater level of realism can be 
determined with the testing and experiments conducted. The 
use of the testbeds allows the system to be tested from 
beginning to end in a realistic environment using real 
platforms, applications, devices and users. Without the 
federated testbed, the cost of achieving this level of realism 
would be greatly increased.  
Testbeds can be successfully used to control the cost of 
achieving realism in experimental activities [13]. In 
PERIMETER, it was found that not only does the use of the 
federated testbed control the cost; it actually does this 
without actually increasing cost but whilst increasing the 
level of realism achieved. 
VII. SUMMARY AND OUTLOOK  
The 
increasingly 
dynamic 
nature 
of 
the 
telecommunications scene is expected to go beyond the 
technical domain and also cover business models and 
socioeconomic aspects of telecommunications, eventually 
giving rise to the user-centric network vision foreseen by the 
PERIMETER project. There are many challenges, both 
technical and socioeconomic, that need to be addressed for 
this vision to come true, such as the need for a standardized 
view of QoE among all stakeholders that should act as a 
common performance and valuation criterion. In this paper 
we have focused on the exploitation of an open QoE 
knowledge base for more intelligent and user-centric 
interface selection, which can also provide benefits network 
operators in terms of resource utilization.  
Currently the development PERIMETER system is in its 
final stage and Living Lab tests with real users are being 
conducted in two inter-connected testbeds, one in 
Waterford, Ireland and one Berlin, Germany. The tests will 
provide experimental results on user acceptance and about 
PERIMETER’s usability in a real life environment. 
ACKNOWLEDGMENT 
This research activity is funded under the EU ICT FP7 
project PERIMETER (Project No. 224024).  
 
REFERENCES 
[1] Marvedis, R., “Mobile Operators Threatened More by Capacity 
Shortfalls than Growth of WiMAX,” Sep 30, 2009. [Online]. 
Available online: http://maravedis-
bwa.com/Issues/5.6/Syputa_readmore.html. [Last accessed: 
16.02.2011]. 
[2] PERIMETER Website, Technical Reports and Delieverables. 
[Online] Available online: http://www.ict-perimeter.eu/  [Last 
accessed: 21.02.2011]. 
[3] M. Eriksson, V. Niitamo, and S. Kulki, “State-of-the-art in utilizing 
Living Labs approach to user-centric ICT innovation – a European 
approach”, Centre for Distance-spanning Technology at Luleå 
University of Technology, 2005. 
[4] DSL Forum Technical Report TR-126, Triple-play Services Quality 
of Experience (QoE) Requirements, December 2006, Produced by 
Architecture & Transport Working Group. 
[5] E. Dillon, G. Power, M. O. Ramos, M. A. Callejo Rodríguez, J. R. 
Argente, M. Fiedler, and D. S. Tonesi, PERIMETER: A Quality of 
Experience Framework, Future Internet Symposium (FIS) 2009, 
Berlin (Germany), Sep. 1-3 2009. 
[6] V. Subramaniam, and A. Hunt, “Practices of an Agile Developer”, 
ISBN: 9780974514086, April 2006 
[7] IBM promotes agile development. [Online] Available Online: 
http://www.infoworld.com/article/08/03/04/IBM-promotes-agile-
development_1.html [Last accessed: 21.02.2011]. 
[8] J. Sutherland, A.Viktorov, J. Blount, and N. Puntikov, “Distributed 
Scrum: Agile Project Management with Outsourced Development 
Teams”, Proc. Of 40th Annual Hawaii International Conference on 
System Sciences (HICSS'40), Hawaii: IEEE, 2007. 
[9] K. Beck, “Test-Driven Development by Example”, Addison Wesley, 
ISBN: 978-0321146533, 2003 
[10] E. Dillon, F. Sivrikaya, C. Hammerle, and L. Salgarelli, “Agile 
Principles Applied to a Complex Long Term Research Activity -- The 
PERIMETER approach”, Proc. 35th EUROMICRO Conference on 
Software Engineering and Advanced Applications (SEAA), Patras 
Greece, August 27-29, 2009. 
[11] PERIMETER Toolset: Subversion, [Online] Available Online: 
http://subversion.tigris.org; Trac, Available: http://trac.edgewall.org; 
JUnit Testing Framework, Available:: http://www.junit.org/; Apache 
Ant, Available: http://ant.apache.org/; Cobertura Code Coverage 
Analysis Tool, Available: http://cobertura.sourceforge.net/; Hudson 
Continuous 
Integration 
Engine, 
Available: 
https://hudson.dev.java.net/ 
and 
Eclipse 
IDE, 
Available: 
http://www.eclipse.org/, [Last accessed: 21.02.2011]. 
[12] FEDERICA - Federated E-infrastructure Dedicated to European 
Researchers Innovating in Computing network Architectures. 
[Online]. 
Available 
Online: 
http://www.fp7-federica.eu/ 
[Last 
accessed: 21.02.2011]. 
[13] D. Papadimitriou, “Experimentation as a research methodology to 
achieve concrete results: where, how, when”, FIA Stockholm, 23-24 
November 2009, [Online] Available Online: http://www.future-
internet.eu/ [Last accessed: 21.02.2011]. 
 
 
 
 
 
 
 
19
INTERNET 2011 : The Third International Conference on Evolving Internet
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-141-0

