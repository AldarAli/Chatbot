Measuring The Satisfaction Degree Of Quality Attributes Requirements
For Services Orchestrations
Nabil Fakhfakh, Herv´e Verjus, Fr´ed´eric Pourraz, and Patrice Moreaux
University of Savoie
LISTIC Laboratory
Annecy-Le-Vieux, France
Email: {nabil.fakhfakh, herve.verjus, frederic.pourraz , patrice.moreaux}@univ-savoie.fr
Abstract—Quality attributes are an important concern in
critical business processes supported through services orches-
tration. Various works in the literature have addressed quality
attributes values computation of services orchestration. This
paper proposes a novel approach that combines workﬂow
patterns aggregation rules and a multi-criteria decision mak-
ing method named MACBETH. This approach allows us to
measure the satisfaction degree of services orchestration to the
quality attributes requirements as deﬁned at design-time.
Keywords-quality of service/quality attributes aggregation;
SOA; satisfaction degree measurement.
I. INTRODUCTION
Service Oriented Architectures (SOAs) is an emerging
paradigm for the development of business applications sup-
ported through services orchestrations. Services are the
central concept of SOAs. Multiple services with same func-
tionalities are spread over Internet. This makes clients faced
to a large choice between functionally equivalent services
as well as services providers faced to increased competition.
Therefore, both clients and services providers need to agree
on some guarantees: clients require guarantees that satisfy
their expectations and services providers need guarantees to
prevent from hazardous use of their services.
Today, quality attributes for services and services orches-
trations become an important issue. At design-time, clients
choose services satisfying services orchestration require-
ments in term of quality attributes (also referred as Quality of
Service in the literature). However, at execution time, some
services involved in the orchestration may unpredictably
fail or change their quality attributes values positively or
negatively. This will result in possible deviations of quality
attributes values of the orchestration. Therefore, clients need
to know how much the orchestration meets their require-
ments.
Various works dealing with computation of services
orchestration quality attributes values exist in the litera-
ture [1] [2] [3]. Currently, none approach supports different
kinds of quality attributes simultaneously in order to provide
a high level information for decision making. The satisfac-
tion degree of services orchestration is a such high level
information. Measuring the satisfaction degree of services
orchestrations can be seen as a Multi-Criteria Decision
Making (MCDM) problem. In this paper, we present a
novel approach giving a measurement of the satisfaction
degree of services orchestrations. This approach has the
advantage of taking into account clients preferences from
quality attributes point of view. It is based on workﬂow
patterns aggregation rules [1] [2] [3] and a MCDM method
named the Measuring Attractiveness by a Categorical-Based
Evaluation TecHnique (MACBETH) [4].
The remainder of this paper is organized as follows. Sec-
tion II introduces related work on quality attributes values
aggregation and MCDM methods. Section III details our
approach for measuring services orchestration satisfaction
degree, while Section IV concludes the paper.
II. RELATED WORK
Various approaches have been proposed to compute each
quality attribute value independently for services orches-
tration (e.g., giving response time values for all services
composing the orchestration, how to compute the overall
response time of the orchestration?). These approaches
can be classiﬁed in two categories: probabilistic models-
based approaches [6][7][8][9] and workﬂow patterns-based
approaches [1][2][3][5]. The ﬁrst category of approaches
that allow to compute quality attributes values of services
orchestration is based on probabilistic models. It consists
in transforming the services orchestration model into a
probabilistic model (e.g., Continuous Time Markov Chain
(CTMC) model [6][7] or Discrete Time Markov Chain
(DTMC) [8] or Stochastic Petri Nets (SPN)[9]). Then,
the probabilistic model is annotated with quality attributes
values. Finally, these approaches use tools like PRISM [6] or
SPNP [9] to compute each quality attribute value of services
orchestration. The major drawback of these approaches is
that they support only reliability and/or response time. The
second category consists in deﬁning aggregation rules of
quality attributes values for each composition pattern. A
composition pattern is a combination of pairs of work-
ﬂow patterns [10]; it is composed from one split pattern
89
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

Table I: Workﬂow Pattern-Based Approaches and Related Works
Research work
composition patterns
quality attributes
Jaeger and al. [2]
Sequence, loop, AND-AND, XOR-XOR,
AND-XOR, OR-OR, OR-XOR, AND-N/M,
OR-N/M
throughput, response time, cost, availability,
reputation, encryption grade
Rosenberg and al. [3]
Sequence, loop, AND-AND, XOR-XOR
throughput, response time, cost, availability,
reputation, encryption grade, scalability, ac-
curacy, robustness
Cardoso and al. [1]
sequence, loop, AND-AND, XOR-XOR,
Fault-tolerant systems
response time, cost, reliability, ﬁdelity
Coppolino and al. [5]
sequence, loop, AND-AND, XOR-XOR,
AND-N/M
reliability
(e.g., AND-split) and one join (synchronisation) pattern
(e.g., XOR-join) except the sequence and loop patterns,
which are considered individually. Table I summarizes, for
each research work, the composition patterns taken into
account and the supported quality attributes. The advantage
of workﬂow patterns-based approaches is that they support
larger set of quality attributes. Moreover, they are extensible:
(i) more composition patterns could be added and (ii) new
quality attributes could be integrated. For that reason, in
our proposal, we will exploit a workﬂow patterns-based
approach.
However, when changes affect positively and/or nega-
tively some quality attributes values, it becomes difﬁcult
to estimate how much the whole orchestration ﬁts client’
expectations and satisfaction. Thus, it would be useful to
have a high-level information. This information represents
the services orchestration satisfaction degree. This could be
done by aggregating the quality attributes values to provide
only one value that measures the satisfaction degree of the
services orchestration. To this end, we propose to use a
MCDM method.
The most common MCDM method used in industrial
applications is Analytical Hierarchy Process (AHP) [11]. It
is based on the Weighted Arithmetic Mean (WAM) operator.
AHP allows the elementary performance expression and the
WAM operator weights quantiﬁcation using human exper-
tise. However, this method suffers from a lack of consistency
between the expression of elementary performances step
and the determination of the weights step: the weights
being expressed on a ratio scale are not consistent with
the interval scale of the elementary performances.The MAC-
BETH method [4], as the AHP method, deﬁnes quantitative
performance expression and aggregation from qualitative
pairwise comparisons of situations issued from the decision-
maker. But unlike AHP, the MACBETH methodology satis-
ﬁes the measurement theory requirements (i.e., with respect
to the commensurability and signiﬁance [4]). That’s why,
we choose the MACBETH method to aggregate quality
attributes values and to measure the satisfaction degree of
the services orchestration.
Phase 1:
Workflow patterns
based approach
Phase 2:
MCDM method
(q1, … , qn)S1
qorch
(q1, … , qn)Sn
(q1, … , qn)orch
(q1, … , qn)Si     : quality attributes values vector of the service Si
(q1, … , qn)orch : quality attributes values vector of the services orchestration
               qorch  : satisfaction degree of the services orchestration
,,,
Figure 1: Principe of the Aggregation Approach
III. AGGREGATION PROPOSAL
In this section, we introduce our proposal for measuring
the satisfaction degree of services orchestrations. We deﬁne
the satisfaction degree as the percentage of respect to quality
attributes requirements speciﬁed at design time (e.g., in
SLAs). In this paper, we do not deal with requirements def-
inition and we assume that these requirements are provided.
Each service Si, involved in a given services orchestration,
has a quality attributes values vector (see Fig. 1) denoted as:
(q1, ..., qn)Si , where q1≤j≤n is the quality attribute value.
Starting from these vectors, they are ﬁrstly aggregated in
phase 1 using workﬂow patterns aggregation rules. This
results in one vector of quality attributes values of the
orchestration (see Fig. 1). Next, the quality attributes values
of this vector will be aggregated in phase 2 using a MCDM
method. That provides us only one value, which is the
satisfaction degree of services orchestration. Before detailing
these two phases, we present a simpliﬁed manufacturing
process supported through a services orchestration described
in Fig. 2. We will use this services orchestration model to
illustrate our approach hereafter.
The process begins with launching a production request
(service operation LaunchProductionRequest). Then, when
the production terminates, the production planning is up-
dated (service operation UpdateProductionPlanning); in par-
allel, a quality control is executed on the product (service
operation LaunchQualityControl). If the control is positive,
the product is moved to stock (service operation MovePro-
ductToStock), otherwise it will be reported as wasted product
(service operation Report WasteProduct).
Hereafter, we assume that quality attributes requirements
90
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

AND
SPLIT
S1
S2
XOR
SPLIT
XOR 
JOIN
S4
S3
S5
AND
JOIN
Launch 
production 
request
Launch 
quality 
control
Report 
waste 
product 
Move 
product 
to stock
Update 
production 
planning
Figure 2: Example of Manufacturing Process
and measurements are given respectively by the client and
a monitoring system (quality attributes measurement is out
of the scope of this paper).
A. Phase 1: Aggregation Based on Workﬂow Patterns Rules
In the ﬁrst phase (see Fig. 1), we use aggregation rules
based on workﬂow patterns (see Section II) to compute
each quality attribute value of the services orchestration.
This consists in applying step-by-step rules in order to
aggregate quality attributes values. The applied rules are
those corresponding to the composition patterns used in
the services orchestration model. Beginning from the most
nested composition pattern, the orchestration model is parsed
and aggregation rules for each value in the quality attributes
values vector are progressively applied. This is done until
reducing the whole orchestration model into a sole node
(Fig. 3). The resulted quality attributes values of the end
node form the quality attributes values vector of the services
orchestration. This approach is relevant for each quality
attribute value that has aggregation rules for the composition
patterns. We will detail this phase through the services
orchestration described in Fig. 2.
For simpliﬁcation purpose, we will consider a set of three
quality attributes values: response time (qrt), reliability (qrel)
and availability (qav). The aggregation rules for each of the
composition patterns and for each of the quality attributes
values are summarized in Table II. The ﬁrst step consists
in checking the most nested composition pattern, which is
the XOR-XOR pattern between S3 and S4 in Fig. 3a. Then,
we apply the respective aggregation rule from Table II. The
quality attributes values computation of this composition
pattern gives :
qrt(S3,4) = p1.qrt(S3) + p2.qrt(S4)
qrel(S3,4) = p1.qrel(S3) + p2.qrel(S4)
qav(S3,4) = p1.qav(S3) + p2.qav(S4)
Thus, the orchestration model is reduced to that given in
Fig. 3b. Then, taking into account the reduced orchestration
model, the next composition pattern to be considered is the
sequence pattern of S2 and S3,4. The quality attributes values
computation of this composition pattern gives :
qrt(S2,3,4) = qrt(S2) + qrt(S3,4)
qrel(S2,3,4) = qrel(S2).qrel(S3,4)
qav(S2,3,4) = qav(S2).qav(S3,4)
The following composition pattern identiﬁed in step 3
(Fig. 3c) is the parallel pattern associated to the synchroniza-
tion pattern (AND-AND). The resulting quality attributes
values after the reduction of the orchestration model are:
qrt(S2,3,4,5) = max(qrt(S2,3,4), qrt(S5))
qrel(S2,3,4,5) = qrel(S2,3,4).qrel(S5)
qav(S2,3,4,5) = qav(S2,3,4).qav(S5)
The obtained orchestration model from this step is com-
posed of two nodes structured in sequence (Fig. 3d). By
aggregating quality attributes values of these two nodes
in sequence, the services orchestration is reduced to a
sole node. The quality attributes values of this node
form the quality attributes values vector of the whole
services orchestration model. This vector is denoted as
(qrt(orch), qrel(orch), qav(orch)) where :
qrt(orch) = qrt(S1,2,3,4,5) = qrt(S1) + qrt(S2,3,4,5)
qrel(orch) = qrel(S1,2,3,4,5) = qrel(S1).qrel(S2,3,4,5)
qrel(orch) = qav(S1,2,3,4,5) = qav(S1).qav(S2,3,4,5)
This resulting vector (qrt(orch), qrel(orch), qav(orch))
or more simply (qrt, qrel, qav)orch will be the input of the
phase 2 (Fig. 1).
B. Phase 2: Aggregation Based on Weighted Mean Method
(MACBETH)
The goal of this phase is to aggregate different values in
the quality attributes values vector of the services orchestra-
tion (e.g., (qrt, qrel, qav)orch) in order to obtain a measure of
the satisfaction degree of the services orchestration (qorch)
(see Fig. 1). This measure allows us to interpret the positive
or negative changes that affect the quality attributes values
vector of the orchestration. For example, how to compare the
vectors (10, 0.95, 0.99)orch and (7, 0.90, 0.99)orch. A client
who has strong time constraint may consider variation of
the quality attributes values as an improvement of quality
orchestration. An other one who is interested to reliability
can report this variation as a degradation. For that purpose
and in order to discriminate these alternatives, we use the
MACBETH method [4]. MACBETH is a weighted mean
91
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

Table II: Aggregation Rules [1][3]
Response Time
Reliability
Availability
Sequence
Pn
i=1 qrt(si)
Qn
i=1 qrel(si)
Qn
i=1 qav(si)
Loop
qrt(si) ∗ c
qrel(si)c
qav(si)c
AND-AND
max(qrt(s1), ..., qrt(sn))
Qn
i=1 qrel(si)
Qn
i=1 qav(si)
XOR-XOR
Pn
i=1 pi.qrt(si)
Pn
i=1 pi.qrel(si)
Pn
i=1 pi.qav(si)
ac denote the number of occurring loops
bpi the probabilities of the outgoing branches for XOR-XOR
(a) Step 1
(b) Step 2
(c) Step 3
(d) Step 4
(e) Step 5
Figure 3: Workﬂow Pattern-Based Aggregation Steps
Figure 4: The Main Steps of MACBETH Method
method that allows us to translate quality attributes values
to a satisfaction degree and thus thanks to :
• normalization of quality attributes values according to
measurement theory (i.e., with respect to the commen-
surability and signiﬁance requirement [4]),
• determination of the weights of the weighted mean
operator,
• aggregation of normalized quality attributes values.
It is based on pairwise comparisons of situations made by
the client (the expert). The MACBETH method comprises
four main steps (Fig. 4):
1) Context deﬁnition step: The ﬁrst step consists in
identifying the criteria, which are quality attributes in
our case. Secondly, situations that will be compared
are deﬁned. In our context, situations are represented
by vectors of quality attributes values that result
from several instantiations of the services orchestration
model. For example, we consider three instances of
services orchestration represented by measured quality
attributes values as follows:
S1 = (q1
rt, q1
rel, q1
av) = (10, 0.9, 1)
S2 = (q2
rt, q2
rel, q2
av) = (15, 0.6, 0.8)
S3 = (q3
rt, q3
rel, q3
av) = (5, 1, 0.6)
Two more reference situations are introduced denoted
situation good and situation neutral. The good situ-
ation represents the total satisfaction of the require-
ments associated to the criteria (i.e., the best quality at-
tributes values vector) while the neutral situation rep-
resents the minimum satisfaction of the requirements
(i.e., the worst quality attributes values vector). These
two reference situations could be retrieved for example
from Service Level Agreement (SLA) contracts. For
92
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

example :
Sgood = (qgood
rt
, qgood
rel , qgood
av
) = (3, 1, 1)
Sneutral = (qneutral
rt
, qneutral
rel
, qneutral
av
) = (20, 0.5, 0.5)
Note that the good situation and the neutral situation
are associated respectively to the vectors of elementary
performance expression (1, 1, 1) and (0, 0, 0) (i.e.,
after normalization). Therefore, if we consider that
these two situations are formed from upper and lower
bounds of quality attributes values, all other situations
will be classiﬁed between them.
2) The elementary performance expression step: In this
step, the goal is to normalize quality attributes values.
To this end, the client (the expert) uses his expertise
to judge given situations and fulﬁll the matrix of
judgements like the one given in Table III. Firstly, he
is asked for each criterion (i.e., quality attribute) about
his preferences between pairs of situations (including
the two reference situations). If the client prefers
situation Si to Sj for a criterion k, this is noted as
follows:
Si≻Sj
and means that for the normalized quality attributes
values qi
k > qj
k. This is mapped in Table III into
the classiﬁcation of the situations by their order of
preference.
Secondly, the client expresses his strengths of pref-
erence about the same situations. The strengths of
preference are characterized with seven levels: 0=null,
1=very weak, 2=weak, 3=moderate, 4=strong, 5=very
strong, 6=extreme (see Table III). If the client cannot
give his strengths of preference but only his prefer-
ences, this is noted by positive or more shortly P. The
client prefers the situation Si to Sj with a strength
h ∈ {0, ..., 6} for a criterion k i.e.,
Si ≻h Sj
This is equivalent to :
qi
k − qj
k = hα
where α is a coefﬁcient necessary to meet the condi-
tion qi
k and qj
k ∈ [0, 1].
Example : We ask the client to compare the response
time of the situations S1 and S2. He says that he
prefers S1 to S2 i.e.,
S1 ≻ S2 ⇔ q1
rt > q2
rt
and that he prefers extremely (h = 6) S1 to S2 i.e.,
S1 ≻6 S2 ⇔ q1
rt − q2
rt = 6α
Next, once all the strengths of preference between
situations are provided. The matrix of judgements is
Table III: Preferences and Preferences Strengths for Re-
sponse Time
Response Time
Good
S3
S1
S2
Neutral
Good
No
strong a
P
P
P
S3
No
very strong
P
P
S1
No
extreme
P
S2
No
extreme
Neutral
No
a0=null, 1=very weak, 2=weak, 3=moderate, 4=strong, 5=very strong, 6=ex-
treme
fulﬁlled (e.g., see Table III) and a system of equations
can be extracted. It takes the form:
qi
k − qj
k = hα
By solving this system of equations, elementary per-
formance expressions (normalized quality attributes
values) are quantiﬁed in the interval [0,1].
Example: for the strengths of preference expressed in
Table III, the system of equations is the following :
(qgood
rt
= 1) qgood
rt
− q3
rt = 1 − q3
rt = 4α
q3
rt − q1
rt = 5α
q1
rt − q2
rt = 6α
(qneutral
rt
= 0) q2
rt − qneutral
rt
= q2
rt − 0 = 6α
The above system is solvable and the solution is:
q1
rt = 0.5714, q2
rt = 0.2857, q3
rt = 0.8095
Note that the same procedure is established for each
quality attribute (i.e., for reliability and availability
too). In the same way, we get for reliability and
availability:
q1
rel = 0.6364, q2
rel = 0.0909, q3
rel = 1
q1
av = 1, q2
av = 0.7333, q3
av = 0.4
3) Weights determination step: MACBETH is based on
the weighted mean operator for the aggregation given
as follows:
qag =
n
X
i=1
wi.qi
(1)
where wi represents the relative importance of quality
attribute qi. Thus, to determine the weights wi, the
client expresses his judgements about the relative
importance of quality attributes. To this end, he has to
compare particular (possibly ﬁctive) situations where
only one normalized quality attribute value is set
to 1 e.g., (0,...,0,1,0,...,0). So, the aggregated quality
attribute value is reduced to qag = wi, where qag is the
aggregated value of the quality attributes values vector
93
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

Table IV: Expert Judgements for Weights Determination
(0, 1, 0)
(0, 0, 1)
(1, 0, 0)
(0, 0, 0)
(0, 1, 0)
No
Strong
Positive
Positive
(0, 0, 1)
No
Very weak
Positive
(1, 0, 0)
No
Very weak
(0, 0, 0)
No
with qi = 1 and qj = 0 for i ̸= j. To determine the n
weights of the quality attributes, the client has to give
at least n strengths of preference between considered
situations (e.g., Table IV). This results in n equations:
qi
ag − qj
ag = hα = wi − wj
with the condition Pn
i=1 wi = 1. Note that h ∈ {0,...6}
represents the strengths of preference.
Example: let us consider a quality attributes val-
ues
vector
with
three
quality
attributes
values
(qrt, qrel, qav). So we have to compute three weights
wrt, wrel and wav. Taking the matrix of judgements
fulﬁlled by the client (Table IV), we can write the
following equations :
q(0,1,0)
ag
− q(0,0,1)
ag
= 4α = wrel − wav
q(0,0,1)
ag
− q(1,0,0)
ag
= α = wav − wrt
q(1,0,0)
ag
− q(0,0,0)
ag
= α = wrt − 0
wrt + wrel + wav = 1
The solution of the system of equations is:
wrt = 0.1111, wrel = 0.6666, wav = 0.2223
4) Aggregation step: In this step, as quality attributes val-
ues are normalized (step 2) and weights are computed
(step 3), we have just to apply the formula (1) for every
situation characterized by a quality attributes values
vector (q1, ..., qn).
Example: The aggregated values of situations S1, S2
and S3 are :
qS1
ag = 0.71 , qS2
ag = 0.2553 , qS3
ag = 0.8455
The aggregation results show that the situation S3 is better
than S1 and that S1 is better than S2.
IV. CONCLUSION AND FUTURE WORK
In this paper, we have proposed a novel approach for
measuring the satisfaction degree of services orchestrations.
Our work aims to preserve services consumer satisfaction
and to do the necessary adaptations whenever any violation
of the services consumer requirements occurs. However, as
seen in Section III-B, the reference situations (situations
Good and Neutral) are deﬁned respectively by the best
quality attributes values and by the minimum ones agreed
by the client. Therefore, the minimum satisfaction degree
that can be measured (i.e., equal to ”0”) correspond to the
minimum quality attributes values agreed by the client. So,
the approach does not allow us to predict possible violation
of client requirements. This will be the subject of our future
work.
ACKNOWLEDGEMENTS
This work is partially funded by the FEDER MES project
granted by the French Rhˆone-Alpes Region.
REFERENCES
[1] J. Cardoso, J. Miller, A. Sheth, and J. Arnold, “Modeling
quality of service for workﬂows and web service processes,”
Journal of Web Semantics, vol. 1, pp. 281–308, 2002.
[2] M. C. Jaeger, “Optimising quality-of-service for the com-
position of electronic services,” Ph.D. dissertation, Berlin
University, Germany, 2007.
[3] F. Rosenberg, “Qos-aware composition of adaptive service-
oriented systems,” Ph.D. dissertation, Technical University
Vienna, Austria, June 2009.
[4] V. Cliville, L. Berrah, and G. Mauris, “Quantitative expres-
sion and aggregation of performance measurements based on
the macbeth multi-criteria method,” International Journal of
Production Economics, vol. 105, pp. 171–189, 2007.
[5] L. Coppolino, L. Romano, N. Mazzocca, and S. Salvi, “Web
services workﬂow reliability estimation through reliability
patterns,” Security and Privacy in Communications Networks
and the Workshops,, pp. 107–115, 2007.
[6] S. Gallotti, C. Ghezzi, R. Mirandola, and G. Tamburrelli,
“Quality prediction of service compositions through prob-
abilistic model checking,” in QoSA ’08: Proceedings of
the 4th International Conference on Quality of Software-
Architectures, Berlin, Heidelberg, 2008, pp. 119–134.
[7] N. Sato and K. S. Trivedi, “Stochastic modeling of composite
web services for closed-form analysis of their performance
and reliability bottlenecks,” in ICSOC ’07: Proceedings of the
5th international conference on Service-Oriented Computing.
Berlin, Heidelberg: Springer-Verlag, 2007, pp. 107–118.
[8] V. Cortellessa and V. Grassi, “Reliability modeling and anal-
ysis of service-oriented architectures,” in Test and Analysis of
Web Services, 2007, pp. 339–362.
[9] D. Zhong and Z. Qi, “A Petri net based approach for reliability
prediction of web services,” in OTM Workshops (1), 2006, pp.
116–125.
[10] W. van der Aalst, A. ter Hofstede, B. Kiepuszewski, and
A. Barros, “Workﬂow patterns,” in Distributed and Parallel
Databases, vol. 14 (1), 2003, pp. 5–51.
[11] E. H. Forman and M. A. Selly, Decision by objectives: how
to convince others that you are right.
World Scientiﬁc Pub
Co Inc, 2001.
94
CTRQ 2011 : The Fourth International Conference on Communication Theory, Reliability, and Quality of Service
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-126-7

