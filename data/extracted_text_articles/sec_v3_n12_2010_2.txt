Performance Analysis of Time Synchronization Protocols in Wireless Sensor
Networks with Regular Topologies
José A. Sánchez Fernández, José F. Martínez Ortega, Ana B. García Hernando, Lourdes López Santidrián
Dpto. de Ingeniería y Arquitecturas Telemáticas. E.U.I.T. de Telecomunicación
Universidad Politécnica de Madrid
Campus Sur UPM. Cta. de Valencia, km.7. 28031 Madrid, Spain
e-mail: {jsanchez, jfmartin, abgarcia, llopez}@diatel.upm.es
Abstract— Time synchronization in wireless sensor networks is
an essential issue in their operation. The synchronization is
deeply influenced by network size and complexity. System
dynamics and algebraic graph theory provide the suitable
mathematical framework to describe the dynamical and
topological features of complex networks. These features are
very useful to understand overall aspects of network time
evolution,
in
particular
the
ability
to
achieve
steady
synchronization
states.
In
this
paper,
we
apply
the
mathematical tools provided by theory to assess the ease of
synchronization of a wireless sensor network with regular
topology,
initially
designed
to
support
surveillance
applications. From these theoretical results, the research work
described will focus on the performance analysis of different
time synchronization protocols that allow network nodes to
share a common global time, either with the diffusion of a
master reference timestamp or with the consecutive exchange
of local timestamps among neighbor nodes, in order to achieve
a global dynamical consensus.
Keywords—
wireless
sensor
network;
synchonization
protocol;
spectral
graph
theory;
consensus
dynamics;
surveillance application.
I.
INTRODUCTION
For
numerous
wireless
sensor
network
(WSN)
applications, e.g., localization, security or surveillance,
where event detection and reporting is a usual task, time
synchronization is a major issue. Different sources of
unreliability, and also the complexity and size of the WSN
affect the performance of different synchronization methods.
Certain knowledge of the mathematical models proposed for
the analysis of complex networks is needed to understand
and solve the underlying problems that could arise. Also,
these models provide a good assistance in the design of
reliable synchronization protocols.
These mathematical models are directly inspired by those
historically developed for complex biological, chemical or
physical systems, which can be described in terms of
interactions
among
mutually
coupled
oscillators.
A
dynamical analysis of many of these systems reveals
important analogies regarding WSN performance, since the
time evolution of a single sensor, acting as a node of the
whole network, can be modeled as a simple oscillator
interacting with the physical environment and the rest of the
network.
System Dynamics provide the description of time
evolution of the state variables of nodes, reporting useful
information about the stability of the network states, while
Algebraic Graph Theory is a valuable help to visualize the
topology of the network. The study of values of some graph
invariants, e.g., the eigenvalues of matrices that describe the
connections among network nodes, is very useful to
understand the conditions of synchronizability of the whole
network. The main purpose of this paper is to apply some of
these mathematical tools to a specific WSN with regular
topology,
initially
designed
to
support
surveillance
applications; these results will establish the synchronization
ability of the network topology chosen. As a extension of [1],
alternative synchronization methods will be tested and
compared.
The outline of the paper is given as follows. Section II
summarizes
main
theoretical
research
done
about
synchronization of complex networks composed of coupled
oscillators. Section III describes the approximation to
physical time made by hardware oscillators in WSN nodes.
Section IV introduces the mathematical model that describes
the evolution of a network composed of mutually coupled
oscillators, and some basic concepts of Algebraic Graph
Theory,
which
are
needed
in
the
analysis
of
time
synchronization. Section V presents the generic results that
establish the conditions to reach the synchronization in a
complex
network.
Section
VI
shows
the
surveillance
application
domain,
the
underlying
WSN
and
the
requirements of its synchronization. Section VII discusses
the results provided by the application of the mathematical
models to state the conditions of a better synchronization for
the WSN. Section VIII shows the performance of different
synchronization methods on the scenario described above.
Finally, Section IX summarizes the conclusions and provides
ideas for possible future works.
II.
LITERATURE SURVEY
Historically, different but related mathematical models
have been proposed to study the synchronization of complex
systems, which are described through networks composed of
coupled oscillators. Some of the main references in this
research field are discussed next. Mirollo, Watts and Strogatz
studied the spontaneous synchronizability of biological
systems composed of globally coupled identical oscillators
[2][3], showing the conditions that lead to the stability of the
13
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

synchronization state. They analyzed the influence of the
traditionally
called
“small-world
effect”
on
network
synchronization, i.e., the addition of some random links to
regular lattices, acting as a kind of shortcut connection,
enhance the synchronization capabilities of the network.
Chemical systems were studied by Kuramoto [4], who
proposed a mathematical model for arbitrary nonlinear
phase-coupled oscillators; he showed that the ability to reach
a synchronization state relies on the coupling strength among
oscillators. Barahona and Pecora studied the synchronization
of complex networks composed of identical oscillators
through a linear model [5][6], and they showed the strong
dependence of the synchronization state to some topological
parameters. Barbarossa, Celano and Scutari proposed an
extension of the Kuramoto model applied to WSN [7][8][9],
which is designed as a system composed of phase-coupled
oscillators
with
nonlinear
coupling.
They
studied
the
application of distributed synchronization algorithms, and
also they showed the impact of synchronization in network
overall energy consumption.
In these models, each network node, e.g., a network
device including some sensors that collect data from its
physical environment, is characterized by a set of state
variables. Time evolution of these variables, and coupling
interactions among nodes, are described by a system of
differential equations. The whole network is modeled with a
graph, which
includes the information about network
topology, basically the existence of communication links
between each pair of nodes.
Since the graph is constructed by a set of matrices
(adjacency, incidence and laplacian matrices), it is possible
to apply Algebraic Graph Theory, a well established field of
Discrete Mathematics [10][11][12][13]. Results obtained
establish the requirements of synchronizability of the whole
network. These requirements rely on a set of inequalities,
connecting different parameters, strongly dependent on the
overall topology of the network [6][14].
These models are the formal basis in the development of
synchronization protocols for WSN. Several proposals have
been done, and excellent surveys about this topic have been
previously
published
[15][19].
These
surveys
present
pertinent remarks about challenges and
constraints in
synchronization
protocol
design.
Also,
they
include
exhaustive classifications of protocols, based on clock
models
used
(constant
frequency,
bounded
frequency
deviation, drift-constraint) [16][17][18][19], synchronization
classes (external vs. internal, probabilistic vs. deterministic,
permanent vs. by request, complete vs. partial) [15][16][19],
synchronization techniques (unilateral, bilateral, cyclic, by
broadcast correction) [16][17][19], and models of interaction
among network nodes (unicast vs. multicast, symmetric vs.
asymmetric, explicit vs. implicit) [15][16][19]. Critics of
features and performance of the synchronization protocols
proposed are also included. It is not aim of this brief
summary to discuss these details; the reader interested in
these topics is encouraged to address to the above references.
The research work described in this paper focuses on
synchronization methods that allow network nodes to share a
common global time, either with the diffusion of a master
reference timestamp or with the consecutive exchange of
local timestamps among neighbor nodes, in order to achieve
a global dynamical consensus. These approaches are adopted
in some proposals, e.g., [8][20][21]. The synchronization
algorithms will be applied to a static WSN with a selected
regular topology. Next two sections will focus on the
description of formal expression of the time measured by a
WSN, and also on the mathematical models proposed to
study the time synchronization.
III.
PHYSICAL TIME AND PHYSICAL CLOCKS
First of all, it will be appropriate to describe the way that
the measurement of physical time is made by WSN nodes.
This estimation must be coherent with the mathematical
model introduced later, in Section IV.
In a WSN, its nodes are usually equipped with a
computer clock assisted by a hardware oscillator. Every node
i (i= 1,…, N) implements a local approximation xi(t) to an
external source of physical time t, e.g., based on Universal
Time Coordinated (UTC) [16][19]. The approximation can
be expressed as a function xi(t): IR → IR, which is
.
( )
(0)
)
(
0


t
i
i
d
K
x
x t

 
(1)
This function depends on the oscillator frequency, ω(t),
and of a scale constant, K. Initially, ω(t) is supposed to be
equivalent in all nodes. xi(t) is recorded in a register, which is
updated through the oscillator interrupt cycles. The clock
accuracy,
and
therefore
its
energy
consumption,
are
proportional to the frequency ω.
Ideally, with an appropriate selection of K and ω(t), xi(t)
= t. However, there are unavoidable sources of error, which
are due, mainly, to a limited accuracy of hardware clocks,
and also to instabilities of the physical environment.
Variations of physical magnitudes, e.g., temperature, or even
internal changes in power supply can affect the performance
of the clock. The clock absolute offset is defined as the
difference xi(t) – t ≠ 0; the relative offset between two clocks
is the difference xi(t) – xj(t). The clock skew is the difference
of its local frequency with respect to the external reference
frequency, ω(t) – ωref ; and the clock drift is the variation of
this frequency, i.e., its derivative with respect to time, ω´(t).
Figure 1 shows the effects of clock skew and drift in real
clocks.
These sources of inaccuracy induce a deviation of
physical time recorded at the local clock of every WSN node
with respect to the external time reference, and also with
other local clocks. Usually, clock accuracy is reported in
technical specifications of hardware clocks, given by the
manufacturer [15][17]. So, although clock deviation cannot
be completely removed, it can be properly bounded. If the
required synchronization accuracy is small with respect to
the cumulative effect due to frequency fluctuations, it is
possible to assume that ω(t) is approximately constant. If
frequency fluctuations are not negligible but they are known,
the bounds are given by the next inequalities [16][19]:
14
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

,
1
( )
1


 


dt
dxi t
(2)
where ρ is the maximum skew rate specified by the
manufacturer. A clock never can stop or run backwards, so ρ
> –1. The effect of drift could be ignored if frequency
fluctuations
are
small
compared
with
the
required
synchronization accuracy. The presence or lack of these
sources of error and related bounds establishes the clock
model to deal with. Assuming the existence of clock skew
and drift, xi(t) can be expanded by its Taylor series [17], in
order to simplify the clock model, as
...
( )
2 



t
t
t
x
i
i
i
i



(3)
So, the coefficient αi can be associated with the initial
offset of clock xi(t); the linear parameter, βi, with the skew (1
± ρ); and the quadratic parameter, γi, with a deviation from
the linear behavior. These parameters can be estimated by
statistical calculations. From (2) and (3), assuming a linear
behavior in clocks, xi(t) can be bounded as
) .
1(
(0)
( )
)
1(
(0)
t
x
x t
t
x
i
i
i








(4)
Finally, two clocks, xi(t) and xj(t), can be related to their
relative offset, αij, and skew, βij [15], as
( ).
( )
x t
t
x
j
ij
ij
i
   
(5)
After consecutive requests and receptions of values of
xj(t), node i can estimate the relative offset and skew with
node j. Equation (5) can be extended to a group of connected
nodes,
( )),
(
( )




Ni
j
j
ij
ij
i
x t
x t


(6)
where Ni denotes the neighborhood of node i, i.e., the set of
nodes connected to it. Since the difference between time
records of any pair of nodes, xi(t) – xj(t), trends to increase as
t grows, the synchronization will try to cancel this difference,
or, at least, to minimize it. The general formulation of the
synchronization problem consists in a direct adjustment of
the value xi(t) by the application of a synchronization
algorithm. To proceed, each node must receive one or
various packets containing external time references, and the
algorithm should infer some additional estimations. Due to
inaccuracies in the operation of WSN, some values need to
be calculated ad hoc, e.g., the packet round trip time between
different nodes, by timing exchanges of specific messages
[15]. Other values, as the expected average delay in internal
processing
tasks,
could
be
statistically
or
randomly
estimated. Finally, the synchronization algorithm should not
suppose a substantial overload to WSN operation. Next
Section presents the dynamical model proposed to describe
the behavior of complex networks. It will be shown that this
formulation is consistent with the formal description of time
measure given above.
Figure 1.
And ideal clock and two real clocks, with an initial offset equal
to zero, and x(0) = 0. Effect of skew and drift shows, respectively, linear
and nonlinear deviations from ideal reference time.
IV.
WSN DYNAMICAL MODEL
Among the formal models proposed to describe complex
network dynamics, the classical development of Barahona
and Pecora has been selected [5][6], due to its generality and
simplicity. This model considers a network composed of N
nodes, each one including some sensors of the physical
environment. The i-th node (i = 1,…,N) takes different
measures of M specific events, expressed by its state variable
vector, xi(t) = (xi1(t),…,xiM(t)).
The sensors act as mutually coupled oscillators, since
they periodically communicate with other sensors falling into
their coverage radius, sending and receiving some of the
collected data or synchronization timestamps. Therefore, the
nodes can adapt their state variables evolution according to
data received from others, e.g., the time values of their
clocks, to reach the synchronization.
The dynamical system present at each node evolves
according to the following system of first order differential
equations, as proposed in [6]:
.
1,...,
( )),
(
( ))
(
1
N
i
x t
L
x t
dt
d
N
j
j
ij
i
i





H
F
x

(7)
F(xi(t)) is a vector function of dimension M, that
expresses the dynamics at each node, i.e., the evolution of its
M state variables xi(t), and σ is an overall coupling strength,
supposed to be identical in all network nodes. The M-vector
output function H(xj(t)) of the state variables of each
oscillator represents the coupling among oscillators. Finally,
Lij are the components of a certain N X N connection matrix
L, which specifies the existing connections among nodes. L
is symmetric, since it is assumed that the network nodes have
nondirectional links.
Results obtained in [6] show the generic conditions that
vector functions F(xj(t)), H(xj(t)), and matrix L must satisfy
to reach an stable synchronization state in the network of
drift
skew
t
x(t)
t
15
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

coupled oscillators whose dynamics is modeled by (7). It has
been shown that this stability depends, mainly, on selected
eigenvalues belonging to the spectrum of the connection
matrix L [6], which is invariant under permutations of
network node labels. Therefore, it is essential to establish the
elements Lij of L.
To proceed, system of equations expressed in (7) can be
conveniently simplified to facilitate the next analysis. It is
possible to reduce the number of state variables in each node
from M to 1, since the local time to be measured in each
node from its internal hardware oscillator, xi(t), will be the
only state variable to consider further. In that case, (7) gets a
more familiar fashion:
( )),
(
)
(
1



N
j
j
ij
i
L H x t
t
K
dt
dx


(8)
where ω(t) represent the oscillation frequency, supposed to
be identical in all nodes. It is interesting to note that, if
coupling among nodes is nonexistent, the sum contained in
the right member of (8) is equal to zero,
,0
( ))
(
1



N
j
j
ij
L H x t
(9)
and (8) is transformed in
K (t),
dt
dxi


(10)
which is formally equivalent to (1). Thus, the simplest case
of dynamics at every node (nonexistent coupling) leads to
the initial estimation of time made by network nodes. It
could be considered as an argument of validity of the
dynamical model presented above.
Once the network is synchronized, (8) must be identical
for all the nodes. This is assured if the sum of its right
member is constant:
.
( ))
(
1
K
H x t
L
N
j
j
ij



(11)
In the simplest case, this sum is supposed null [6]. The
connection matrix L, then, is restricted to have zero sum
rows:
.0
1



N
j
Lij
(12)
With this constraint, it is possible to obtain the elements
Lij of L. To that end, it will be useful to introduce before
some basic concepts of Algebraic Graph Theory [10][11]. A
network can be modeled by a graph U=U(V,E) composed of
N nodes or vertices V, labeled from 1 to N, and a set of
connections or edges E among them. The number of edges
can vary from 0 (no nodes are connected) to N(N–1)/2 (every
node is connected with all the others). A graph is represented
by its adjacency matrix A, a symmetric N X N matrix where
Aij = 1 if the nodes i and j are connected, and Aij = 0
otherwise. Also, the components of its main diagonal are
defined as Aii = 0. The study of invariants of the adjacency
matrix (i.e., its spectrum properties) has been widely studied
[10][11].
The degree di of the node i is the sum of the number of
edges connecting it to other nodes, which can be obtained
from the sum of the values belonging to the i-th row of the
adjacency matrix, i.e.,
,
1
i
N
j
ij
A  d


(13)
which suggests to form a new matrix D, called valency or
degree matrix, whose main diagonal elements Dii are
equivalent to the i-th sums in (13). It is possible to build a
new matrix, the laplacian matrix, as L = D – A, which
clearly fulfills the requirement derived from (12). The
elements Lij of L, at last, can be expressed as
ij .
ij
ij
ij
A
D
L

 
(14)
Spectrum properties of L have been studied, as well [12,
13]; it would be useful to obtain its eigenvalues through
analytical expressions, but, in general, this is not possible.
The characteristic equation of L, det(L − γ1) = 0, gives a
polynomial that is difficult to solve for large values of N
(also, it is due to a strong dependence of eigenvalues with
little variations of the polynomial coefficients).
However, cyclic graphs, associated with networks with
ring topology, generate adjacency and laplacian matrices
with circulant structure [6][11][12][22], whose eigenvalues
are well known. In a circulant matrix, each row is a cyclic
permutation of the first row. A ring network of N nodes,
where each node is connected exclusively with its two
neighbors, generates a cyclic graph called cycle (CN). In such
graphs, adjacency and laplacian matrices adopt the next
structure:














































2
1
...
0
0
1
1
2
...
0
0
0
...
...
...
...
...
...
0
0
...
2
1
0
0
0
1 ...
2
1
1
0
...
0
1
2
)
(
0
0 ... 1
0
1
1
0 ... 0
0
0
... ... ... ... ...
...
0
0 ... 0
1
0
0
1 ... 0
0
1
1
0 ... 0
1
0
)
(
N
N
L C
C
A
And eigenvalues of L(CN) are given by [6][22]
)1 .
2 1 cos 2 (







N
i
i


(15)
In general, when a node is connected with its 2k
neighbors, the resultant graph, known as k-cycle (kCN), gives
the next Laplacian eigenvalues [6][22]:
16
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

.
)1
cos 2 (
2
1











k
j
i
N
j
i
k


(16)
Figure 2, adapted from [6], shows the eigenvalues of k-
cycles, for k = {1,..,4} and a network of N = 100 nodes. For
N even, the graphics are symmetric from the ordinate line at
N/2 + 1. For eack k, there are k local maximum values, and
maximum degeneracy of eigenvalues is 2k. The analytical
expression for Laplacian eigenvalues has been shown for this
regular topology. Section VI will show the importance of
such a topology from the application domain point of view.
Also, Section V will explore the relationship among
eigenvalues
of
L,
network
topology
and
time
synchronization.
Meanwhile,
it
will
be
suitable
to
study
the
synchronization convergence properties of (8). In the
simplest coupling among nodes, the variation of xi(t) with
time is a linear combination of its own value and the values
xj(t) of the nodes connected to it. So, H(xj(t)) = xj(t), and (8)
is transformed in
.)
(
1



N
j
j
ij
i
L x t
dt
dx

(17)
Introducing the definition of the elements Lij, given in
(14),
( )),
( )
(
)
(
1





 



Ni
j
j
i
N
j
ij
ij
ij
i
x t
x t
A
D
dt
dx



(18)
where Ni denotes the neighborhood of node i. Equations (17)
and (18) can be expressed in a more compact form,
(t).
dt
d
x
x
 L
(19)
This set of differential equations is known as consensus
dynamics [9][23][24][25]. The state variable of each node
evolves in time as a linear combination of its own state and
the states of coupled nodes. If the state vector x(t) is
initialized with the local measurement of time in nodes, x(0)
= x0, and the network is connected, x(t) converges to the
average consensus vector
.
N
t
1 x 1
x
T
0
1
( )

(20)
where 1 T= (1, 1, …,1). That is,
,
1
( )



N
1
j
i
x0j
N
x t
(21)
for t → ∞.
0
2
4
6
8
10
12
0
20
40
60
80
100
Eigenvalue index
Eigenvalue
k =1
k =2
k =3
k =4
Figure 2.
Eigenvalues of k-cycles for k={1,2,3,4}in a network of N=100
nodes (adapted from [6]). It is easy to visualize the simmetry of graphics
from the ordinate line at i = N/2 + 1, the equivalence between the number
of local maxima and k, the maximum degeneracy of eigenvalues, equal to
2k, and the growth of maximum eigenvalues with k.
In other words, all local clocks converge to their initial
average value, with independence of the coupling strength,
σ. To visualize this convergence, (18) can be approximated
with the next iterative expression:
.)
(
, 1




 

Ni
j
jn
in
in
i n
x
x
t
x
x

(22)
In this approximation, n represents the n-th iteration step,
and Δt is the interval of time elapsed between consecutive
iterations. Figure 3 shows the convergence of (22), for a ring
network example of N = 5 nodes, coupling strength σ = 1,
interval time Δt = 0,1 sec., and exclusive coupling among
nearest neighbor nodes. It is clearly shown that the local
clocks converge to the constant average time value given in
(21).
0
0,2
0,4
0,6
0,8
1
0
1
2
3
4
5
t (secs)
local clock values
Figure 3.
Consensus dynamics. Synchronization convergence example, in
a ring network with N = 5 nodes, coupling strenght σ = 1, and interval time
between succesive iterations Δt = 0,1 sec. At t = 5 secs., relative offset
among clocks is 0,5 x 10–3 sec.
17
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

To consider the increment of local clocks xj(t) with time,
the frequency ω must be taken into account, as follows,
( )).
( ( )




Ni
j
j
i
i
x t
x t
K
dt
dx


(23)
Synchronicity is acquired in a time varying form [23],
and all the xi(t) converge to
,
1
( )




N
1
j
i
K t
K t
N
x t


(24)
for t → ∞. Adding the effect of frequency to the convergence
steps expressed in (23), Figure 4 shows the convergence of
this time-varying consensus dynamics, for the same type of
network as above, with Kω chosen to be 1, which gives a
valid measure of time t, i.e., xi(t) → t.
Consensus dynamics, in both forms (constant or time
varying), assures the stability of the global synchronization
state. The time needed to get a full synchronicity is infinite,
but in a real network the limited accuracy of local clocks
influences
the
elapsed
time
to
get
a
sufficient
synchronization. This feature is present in different proposals
of synchronization methods [8][9][21].
V.
GENERIC CONDITIONS OF SYNCHRONIZABILITY FOR A
WSN
This Section will use some results presented in [6][13]
[14], very useful from the synchronization point of view, to
extract generic conditions of synchronizability for a WSN.
0
1
2
3
4
5
0
1
2
3
4
t (secs)
local clock values
Figure 4.
Time varying consensus dynamics. Synchronization
convergence example. Ring network with N = 5 nodes, σ = 1, Δt = 0,1 sec, 
and Kω = 1. At t = 4 sec, relative offset among clocks is 0,2 x 10–2sec.
Convergence rate is independent of ω.
Laplacian matrix L is a positive, semi-definite matrix,
with a maximum of N different nonnegative eigenvalues, γi,
1≤ i ≤ N. They can be arranged in the sequence γ1≤ γ2≤ … ≤
γM, where M ≤ N. By construction of L, its smaller
eigenvalue, γ1, is always zero, and it is associated with the
eigenvector whose components are all equal to 1. The next
larger eigenvalue, γ2, is called algebraic connectivity, and is
different from 0 if, and only if, the graph is connected. If γ2 is
close to 0, the graph can be easily split in subgraphs by the
deletion of a few edges.
The algebraic connectivity, thus, plays a special role on
the synchronizability of the network. Large values of γ2 are
associated with networks with a good connectivity among
nodes, which improves the synchronization. On the other
hand, if γ2 → 0, the network cannot reach synchronization
easily. It has been shown that the synchronization time in the
consensus dynamics context, given by (19), is proportional
to γ2
–1 [25].
As it is noticed in [14], eigenvalue γ2 by itself does not
provide information about network topology. Nevertheless,
some bounds for γ2 have been found, which include the
desired topological information. These bounds are expressed
in the following set of inequalities [6][14]:
2 ,
1
1
2
 
  



M
N
N
N
N



(25)
,
,
1
4
2
i
N
Nd
ND
i


  
(26)
where di is the degree of node i, δ is the minimum degree of
the graph (the minimum value of the node degrees) and Δ is
the maximum degree of the graph (the maximum value of
the node degrees). The distance between two nodes, i and j,
is defined as the minimum number of edges to traverse from
node i to node j. The graph diameter, D, is the maximum
value of distances. Networks with large values of N and D
will give a small lower bound for γ2. However, if these
values are small, γ2 will be greater and the network will
synchronize better.
Also, the quotient γM/γ2 should be as small as possible.
The lowest value is 1, only possible if every node is
connected with the rest of nodes. From (25) and (26), it can
be shown [6][14] that
.
 2


M
 
(27)
If the quotient γM/γ2 is large (great difference between
maximum
and
minimum
degrees
of
the
graph),
the
synchronization will be difficult. Maximum bounds for this
quotient have been obtained [6][14]:
2
2
M  ND


(28)
Thus, if the values of maximum degree Δ, diameter D
and number of nodes N can be reduced, the synchronizability
18
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

of the associated network will be enhanced. Finally, the
average distance among nodes, l, can also give information
about network synchronization properties [6][14]:
4
2
2
)1
(
1
2




N
l
N

(29)
Networks with small number of nodes and small average
distance generate a great value of γ2, so they can be easily
synchronized. Although there are some more bounds for γ2
and
γM,
involving
new
topological
parameters,
e.g.,
isoperimetric
number,
clustering
coefficient,
and
edge
connectivity [14], the above inequalities show the essential
approach to WSN synchronizability.
As conclusion, the combination of Network Dynamics
and Algebraic Graph Theory provides useful tools to model a
network and to obtain the conditions of its synchronization,
which rely on overall network topological parameters. Next
Section
describes
the
specific
surveillance
application
scenario of interest for this research, together with a
justification on the importance that time synchronization
plays in such a deployment.
VI.
APPLICATION DOMAIN
One of the most important application types that can
benefit from a WSN are those related to physical safety and
watching of buildings or areas, i.e., surveillance applications.
There is a wide range of related services, some of them
applied to detect people and vehicle crossings on a virtual
perimeter, and to warn about if need be. A network with
regular ring topology is suitable to properly cover a virtual
closed perimeter.
As part of the work inside the project μSWN (Solving
Major Problems in Microsensorial Wireless Networks),
financed by European Union VI Framework Program [26], a
surveillance application of a closed virtual perimeter has
been designed. The application is built through two different
application agents, running on two different mote (WSN
nodes) profiles, namely perimeter motes and bracelet motes.
They will be designated perimeter agents and bracelet
agents, respectively.
Perimeter motes are physically deployed covering a
virtual perimeter. Some of these motes are equipped with
one or two presence sensors (passive infrared sensors, PIR).
Every hop between two neighbor perimeter motes is covered
at least by one of these sensors. If someone crosses the
perimeter, at least one of the PIR sensors detects it and
triggers the activation of the corresponding perimeter agent
or agents. Let us denote the area covered by the PIR sensors
of node i as Si. Let us also denote the position of a person
crossing the perimeter as rm.
Whenever a crossing is signaled to a perimeter agent, i.e.,
 i / rmSi, this agent tries to find out if the crossing has
been caused by someone known or by an intruder. Known
people (e.g., staff or authorized clients) wear a bracelet
including a mote with a bracelet agent running, while of
course intruders do not. Once the presence is known to the
perimeter agent, it broadcasts to its neighbors (motes located
inside its radio coverage) a specific message, which may
include an identification of the PIR actually detecting the
crossing or an identification of the node (if need be for the
Surveillance algorithm). If a bracelet agent receives the
message, it will answer to the enquirer providing its
identifier. This identifier will be further forwarded by the
perimeter agent to the sink, together with additional data,
which may be significant for the algorithm running in the
server. If no answer is received by the perimeter agent in a
reasonable time, it is assumed that an intruder has crossed
the perimeter. Therefore, this event is notified to the sink.
The fixed perimeter nodes and the mobile bracelets are
equipped with omnidirectional antennas. Let Ri and Rm be the
radio coverage areas of node ni and of the mobile node,
respectively, and let dmi be the distance between ni and the
mobile
node.
If
an
unauthorized
person
crosses
the
perimeter, an intruder alert will be generated by all nodes ni
where rmSi. If an authorized person (i.e., a person carrying
a
bracelet)
crosses
the
perimeter,
a
bracelet-crossing
indication will be generated by all nodes ni where the
following statement is true:
).
(
)
(
)
(
m
mi
i
mi
i
m
R
R AND d
S AND d


r 
(30)
In that case, also, an intruder alert will be generated by
all nodes nj where the following statement is true:

.)
(
)
(
)
(
m
mj
j
mj
j
m
R
R OR d
AND d
S


r 
(31)
Figure 5
shows
a
graphical representation of the
influence of these parameters on the described surveillance
algorithm. There are some issues that arise in the scenario
described above, that lead to the conclusion that time
synchronization
of
perimeter
nodes
could
be
highly
beneficial. These issues are summarized as follows:
Figure 5.
Influence of the different coverage areas of WSN perimeter
nodes in the surveillance application algorithm.
19
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org


First of all, packets simultaneously generated in
different nodes could invest different periods of time
to reach the sink. In fact, since power consumption
in a WSN is of the utmost importance, many
communication protocols implement a low duty-
cycle. The nodes are operative and ready to forward
information during a small percentage of time in this
cycle. Thus, if the packet must traverse several hops,
the overall delay may be significant (e.g., tens,
hundreds or even thousands of milliseconds).

On the other hand, it is possible, depending on the
combination among the coverage radio of the motes
(Ri), the coverage radio of the mobile bracelets (Rm)
and the PIR-detection areas (Si), that two different
nodes detect the same physical event (i.e., a
particular crossing) and report it to the sink. Also, as
shown in (30) and (31), the same crossing event
could be notified by different nodes.

All the above may lead to the reception of more than
one warning to the sink (and to the server system
beyond it) with a significant time offset but that
actually correspond to the same crossing event. This
is especially true if all warning messages do not
follow the same path to the sink.
If the warning messages were timestamped by the
originating motes (e.g., with the local time associated with
the crossing event, which was locally reported to the
perimeter agent) it would be much easier to detect and
eliminate duplicated information, reducing the number of
“false positives”. Obviously, if different nodes timestamp
their messages and if these timestamp values are compared
later in the sink or in the server, it is necessary that those
nodes have synchronized clocks with a certain tolerance, in
order to decide if two event reports correspond to the same
actual real-world event.
It is important to note that, although the detection range
of the PIR sensors is not often configurable (and it makes
difficult to avoid duplicated detections in some deployment
scenarios), the radio coverage of a node usually is. Thus, the
logical
topology
of
the
WSN
may,
under
certain
circumstances, be modified adjusting the transmission power
of the nodes, which will reduce or increase the number of
neighbors for each mote.
For instance, the increment of transmission power at
perimeter nodes, and consequently Ri, leads to a growth in
the number of neighbors of each node, reducing the
associated graph diameter, D, of the surveillance WSN. For k
= 2 (2-cycle, with four neighbors per node), D = N/4 if N is
even, and D = (N –1)/4 if N is odd, while for k = 4 this
diameter value halves, with subsequent effects in WSN
synchronization, as shown in (28). The drawbacks of raising
Ri are basically twofold: firstly, an increased transmission
power implies higher energy consumption, a usually scarce
resource in any WSN; secondly, large Ri may cause some
inaccuracies when reporting crossings.
For instance, if there is an intruder crossing that is
detected by node ni, and Ri is too large, the corresponding
question message may be received by a surrounding bracelet,
which is not actually crossing the perimeter, but where the
next statement is true:
).
(
)
(
m
mi
i
mi
R
R AND d
d


(32)
In that case, a bracelet-crossing event will be erroneously
generated. In order to prevent this kind of collateral effects,
if Ri is increased, the values of Si (e.g., by a more precise
physical orientation of the PIR sensors) and Rm should be
carefully chosen. Thus, it will be possible to minimize the
effect of false alarm incidences.
Next Section of this paper applies the results derived
from the mathematical model described in previous sections
to find adequate values for the WSN logical topology that
ease and simplify the time synchronization process in this
particular surveillance application scenario.
VII.
CONDITIONS OF SYNCHRONIZABILITY OF THE
SURVEILLANCE WSN
In Section V, the mathematical results that link the
eigenvalues of L and some overall network topological
parameters have been shown, mainly in (27) and (28).
Therefore, it is possible to apply those results to the
surveillance WSN described in Section VI, in order to
facilitate its synchronization. Conclusions are summarized as
follows [1]:

The number of nodes, N, must be reduced to a value
as small as possible, but obviously the connectivity
among node i and its two neighbors (nodes i − 1, i +
1) must be always assured to keep the surveillance
perimeter properly closed.

The WSN diameter, D, must be also reduced. This
could be done increasing the coverage radio of every
node i, e.g., to get connectivity with nodes i − 2 and i
+ 2 as well, which reduces D by 1/2. Further
reductions of D can be obtained increasing the
coverage radio of nodes even more, but it could be
prohibitive in terms of energy consumption, as
explained in Section VI.

The maximum degree of nodes, Δ, should not be
increased excessively. It leads to the conclusion that
the reduction of network diameter D and the
corresponding increase of the maximum degree Δ
must be balanced.

The difference between minimum degree (δ) and
maximum degree (Δ) must be as small as possible. It
could be achieved if the physical distance among
adjacent nodes is similar (and also if the coverage
radio is equal for all nodes), to accomplish δ = Δ.
These generic conditions must be verified in specific
cases. Since the Laplacian eigenvalues of the ring network
selected to support surveillance applications are given by
(15), it is possible to obtain an approximation to its
maximum eigenvalue, γM.
Although the values of i are
integer, it will be assumed that i  IR. Thus, the usual
conditions of the maximum of a function can be imposed:
20
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

the first derivative of (15) with respect to i must be zero, and
its second derivative, negative:
,0
)1
4 sin 2 (



N
i
N
di
d
i



(33)
.0
)1
cos 2 (
8
2
2
2
2



N
i
N
di
d
i



(34)
Both equations are satisfied by i =1 + N/2. If this selected
value of i is included in (15), eigenvalue γM is
.4
cos )
1(
2
1
2








N
M
(35)
And also, for i = 2, eigenvalue γ2 is
cos 2 ).
2 1(
2
N




(36)
The
maximum
eigenvalue
γN/2+1,
remains
constant
(independent of N), and algebraic connectivity, γ2, trends to
zero as N grows; the first derivative of (36) with respect to N
is continuously decreasing, and trends to 0 as N grows, as
well:
sin 2 .
4
2
2
N
N
dN
d



 
(37)
The quotient between γN/2+1 and γ2 must be bounded, as it
was shown in Section V; the application of (27) and (28)
shows, respectively,
.
2
)1
(
1
2
2 1




N
N
N


(38)
The upper bound for this quotient is not convenient for
time synchronization for large N, since it grows with N at
quadratic rate.
The above analysis can be extended to k-cycles, which
gives similar results. Figure 6 shows, from (16), the
dependence of k-cycles maximum eigenvalues, γM, with
respect to the network number of nodes, N, for k = {1, 2, 3,
4}. These maximum eigenvalues grow with k, and they reach
a steady value as N grows. In fact, γM only gets the maximum
value given in (35) for N even. As a consequence of the
previous assumption made, i.e., iIR, Figure 6 shows that
values of γM are not strictly constant, although they trend, for
large N, to the maximum value given in (35).
Figure 7 shows, from (16), the dependence of k-cycles
algebraic
connectivity,
γ2,
also
called
first
nonzero
eigenvalue (FNZE), with respect to N, for k = {1, 2, 3, 4}. In
all cases, FNZE trends to zero as N grows, which is not
suitable for WSN synchronization. Finally, Figure 8 shows,
from (16) and (38), the spectral bounds for the quotient
γN/2+1/γ2 in a ring network, with k = 1, as functions of N. The
increasing upper bound for large N is not favorable for time
synchronization, either.
0
2
4
6
8
10
12
0
20
40
60
80
100
N
cycle
2-cycle
3-cycle
4-cycle
Figure 6.
Maximum eigenvalues for k-cycles, γM , with k={1,2,3,4}, as
functions of the number of network nodes, N. These eigenvalues grow with
k, and they stabilize for N large.
Although the convergence of the synchronization is
initially guaranteed for WSN with ring topology, as it has
been shown in Section IV, it can be concluded that this kind
of network topology is not a good candidate for time
synchronization, except for a reduced number of nodes. The
increase of network degree, by the extension of coverage
radio in network nodes, does not suppose a valuable help,
and also it leads to a significant increment of power
consumption. Next Section explores the validity of these
theoretical
results
with
the
application
of
various
synchronization protocols.
0
2
4
6
8
10
0
20
40
60
80
100
N
cycle
2-cycle
3-cycle
4-cycle
Figure 7.
Algebraic connectivity, γ2, or first nonzero eigenvalue (FNZE),
for k-cycles, with k={1,2,3,4}, as a function of the number of network
nodes, N. In all cases, FNZE trends to zero as N grows.
21
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

1
10
100
1000
10000
0
20
40
60
80
100
N
Figure 8.
Spectral bounds for γN/2+1/γ2 (bold lines) for a WSN with ring
topology (cycle, with k = 1), as functions of N, number of network nodes.
The curve γN/2+1/γ2 remains bounded between 1 and N(N–1)/2. The
increasing upper bound, for large N, is not adequate for time
synchronization.
VIII.
PERFORMANCE OF SYNCHRONIZATION PROTOCOLS IN
THE SURVEILLANCE WSN
This Section explores the application and performance of
various synchronization algorithms in the surveillance WSN
with ring topology. The simulations will be applied to a
WSN with a maximum of N = 100 nodes. The initial local
clock times are randomly chosen, and the initial maximum
offset between each pair of nodes is set up to one second.
Figure 9 shows a typical distribution of the initial local
clocks offset, with respect to the local clock of sink node,
which will be chosen as the master clock in some
synchronization algorithms. The unavoidable delay caused
by transmission of messages among neighbor nodes and
internal processing tasks is supposed constant. All the local
clocks have the same angular frequency, and the effects of
clock drift and skew are supposed to be negligible with
respect to clock frequency during the synchronization stage.
This last assumption is reasonable since the clock accuracy is
limited. This simplified scenario, which can be further
extended,
can
prove
the
suitability
of
different
synchronization
techniques
applied
to
ideal
situations,
without the appearance of nondeterministic effects.
Some different synchronization algorithms have been
tested. They can be divided in two types: the algorithms that
rely on a distributed diffusion and adjustment of local clock
values among adjacent nodes, following the time varying
consensus model described in Section IV, and the algorithms
based on a master clock time reference forwarded to all
WSN nodes. In such cases, the synchronization is acquired in
a progressive way, after a certain number of synchronization
rounds. It is assumed, also, that the elapsed time between
consecutive synchronization rounds is constant. The main
goal of this Section is to identify the synchronization
methods that minimize the number of synchronization steps.
-0,6
-0,4
-0,2
0
0,2
0,4
0,6
1
4
7
10
13
16
19 22 25 28
31
34 37
40
43
46
49
52
55 58 61 64
67
70 73
76
79
82
85
88
91
94 97 100
Node index
Secs
Figure 9.
Initial local clocks offset (in seconds) for a network with N =
100 nodes. Initial offsets are relative to the master clock time of sink node.
The initial local clock values are randomly chosen, with a maximum
dispersion of 1 second among them.
A.
Synchronization by distributed diffusion
Following the principles of the consensus dynamics
model, shown in Section IV, the first synchronization
method to test will be based on the exchange of local clock
values among adjacent nodes. An initial broadcast message
from the sink node can start the synchronization process.
Immediately after the reception of this message, each node
sends a message to its neighbors, containing its local clock
time value.
Figure 10 shows this exchange process. The node i
receives the clock values xi+1 and xi–1. Since this reception is
not simultaneous, let ε be this temporal difference. The
packet transmission delay between nodes is μ. Assuming that
xi+1 and xi–1 has been received at the same period of time T
(elapsed time between two consecutive synchronization
rounds), it could be considered that the contribution of ε and
μ, are negligible (i.e., T >> ε and T >> μ) .
Once the nodes have received and recorded these values,
each node compares its local clock time, xi, and the
timestamps
received
by
its
neighbors,
xi+1
and
xi–1.
Subsequently, the node adjusts its local clock with the
average value from the local time xi and the received values,
xi+1 and xi–1. Let us explore the synchronization convergence
properties
of
this
synchronization
algorithm.
Each
synchronization round can be expressed as





N
j
jn
ij
in
i n
A x
x
x
1
, 1
.
3
1
3
1
(39)
From the definition of laplacian matrix components given
in (14), Aij = δijDij – Lij,
.
)
(
3
1
3
1
1
, 1






N
j
jn
ij
ij
ij
in
i n
x
L
D
x
x

(40)
22
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Figure 10. Exchange of local clock values among adjacent nodes. The
reception of xi–1, xi+1 by node i is supposed to take place into the same
period of time, T, interval of elapsed time between two consecutive
synchronization rounds .
Rearranging the second member terms of (40),
,
3
1
1
, 1





N
j
jn
ij
in
i n
L x
x
x
(41)
.
3
1
1

 

N
j
jn
ij
in
L x
x
(42)
And dividing for Δt  T, the elapsed period of time
between two consecutive synchronization rounds,
.
3
1
3
1
1
1




 
  


N
j
jn
ij
N
j
jn
ij
in
L x
T
L x
t
t
x
(43)
Equation (43) can be expressed in vectorial form, as
.
3
1
n
T
t
x
xn
L
 


(44)
So, it is proved that the synchronization method chosen,
from the average values of local clocks of neighbors, follows
the consensus dynamics model expressed in (19). This result
can be easily extended for a regular k-cycle; the average time
value of local clock xi(t) is calculated from its 2k neighbors.
In that case, (44) can be generalized as
( ).
)1
(
1
t
T
k
dt
d
x
x
L

 
(45)
The coupling strength is equal to [(k + 1)mT]–1. Adding
the increment of local clocks with time, Figure 11 shows the
convergence of this algorithm, for ring networks with
different number of nodes, with a random initial distribution
of local clocks offset similar to the distribution shown in
Figure 9. In general, the time to get the synchronization
trends to grow with N, but it depends, also, on the initial
relative offset between local clocks. The individual evolution
of local clock values follows a similar pattern to those shown
in Figure 4 (time varying consensus dynamics).
0,0
0,2
0,4
0,6
0,8
1,0
0
50
100
150
200
250
synchronization rounds
local clocks maximum offset
Figure 11. Evolution of maximum offset between local clocks, as a
function of the synchronization rounds. Synchronization is driven by the
time average value from adjacent nodes, xi–1, xi, and xi+1, for ring networks
with different N values, from N = 10 to N = 100. As N grows,
synchronization trends to slow down.
The above synchronization algorithm does not consider a
fundamental constraint in time synchronization: the local
clocks should not run backwards [15]. To avoid this
undesirable effect, if the time average value from xi–1, xi, and
xi+1 is lower than the local time xi, it will not be considered.
Then, the synchronization process is given by
.
,
3
max
,1
,1
, 1












in
n
i
n
i
in
i n
x
x
x
x
x
(46)
Figure 12 shows the performance of this synchronization
algorithm variant. Its performance is similar to the previous
algorithm, but the reduction rate of local clocks relative
offset is worse.
0,0
0,2
0,4
0,6
0,8
1,0
0
50
100
150
200
250
synchronization rounds
local clocks maximum offset
Figure 12. Evolution of maximum offset between local clocks, as a
function of the synchronization rounds. Synchronization is driven by the
time average value from adjacent nodes, xi–1, xi, and xi+1, if the average
value is greater than xi, for ring networks with different N values, from N =
10 to N = 100. Although the graph is similar to the previous one, the
performance of the algorithm is worse.
xi – 1(t)
xi + 1(t)
xi(t)
node i-1
node i
node i+1
μ
μ
t
ε
xi(t+T)
T
23
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

If the synchronization process was driven by the
maximum time value of the neighbor local clocks, it seems
plausible that the synchronization would be faster, since in
all the synchronization rounds, the maximum value among
xi–1, xi, and xi+1 is expanded towards two nodes:
}.
,
,
max{
,1
,1
1
,
n
i
n
i
in
i n
x
x
x
x


 
(47)
Figure 13 shows the performance of this synchronization
algorithm, for ring networks with different number of nodes,
from N = 10 to 100, and initial local clocks offset randomly
chosen. The synchronization process will be always finished
after N/2 synchronization rounds, for N even, and after (N –
1)/2 rounds, for N odd. Figure 14 shows the same
performance, for a ring network with N = 100 nodes and
different initial local clock times. These results prove that
this synchronization method is better than the previous
diffusion algorithms, expressed in (41) and (46). The most
advanced clock guides the whole synchronization process,
which
could
be
inappropriate
for
some
applications.
However, for the surveillance application purposes, it is
preferable a fast synchronization.
B.
Synchronization by a master clock reference
Another approach to the network synchronization can be
driven by the periodic diffusion of a message containing a
master clock reference, tM, which is chosen as the local clock
time of the sink node, n1, in a similar way that the proposals
included in [20][27][28]. It is assumed that the period of
local clocks is larger than the message round trip time
between adjacent nodes. The reference timestamp is sent
sequentially from node 1 to node N:
n1 → n2 → …→ nN → n1.
Each node keeps a record of tM, and also it relays the
master time reference, tM. It records the local timestamp, tIi,
associated with the reception of tM, as well. Once the
message path is finished, n1 sends a new message containing
its local timestamp, tE, associated with the reception of the
initial message containing tM. With these two values of time
it is possible to estimate the global network round trip time
between adjacent nodes, i.e., (tE – tM)/N.
Since each node knows its index i in the relay sequence,
it will be able to adjust its local clock time, xi, with the next
expression:
( 1).





i
N
t
t
t
t
x
x
M
E
M
Ii
i
i
(48)
Here, xi – tIi reflects the difference between the current
local time at node i and the reception time of tM. The term tM
+ (tE – tM)(i – 1)N –1 contains a correction due to the
reception delay of tM at node i, which is proportional to the
position of node in the relay sequence, i – 1. To explore the
convergence of this synchronization algorithm, xi and tIi will
be expressed from the initial time value, x0i,
0,0
0,2
0,4
0,6
0,8
1,0
0
10
20
30
40
50
synchronization rounds
local clocks maximum offset
Figure 13. Maximum offset between local clocks. Synchronization driven
by the time maximum value from adjacent nodes, xi–1, xi, and xi+1, for ring
networks with different N values, from N = 10 to N = 100. The
synchronization is always reached after (N-1)/2 or N/2 synchronization
rounds, for N odd or even, respectively.





 



)1
(
)
1
(
0
0
i
N
t
t
x
N
i
N
t
t
x
x
M
E
i
M
E
i
i
( 1),



i
N
t
t
t
M
E
M
(49)
1).
(
 



i
N
N
t
t
t
x
M
E
M
i
(50)
Thus, the adjusted time xi depends on tM, tE, and the
position of node i in the network. Each node adjusts its local
clock in a different instant of time, according to its position
in the synchronization sequence.
0
0,2
0,4
0,6
0,8
1
0
10
20
30
40
50
synchronization rounds
local clocks maximum offset
Figure 14. Performance of the synchronization protocol with the exchange
of local timestamps from neighbor nodes and the selection of the maximum
time value, for a WSN with ring topology with N = 100 nodes and different
initial local clock times, which are randomly chosen with a maximum
offset equal to 1 second. In all cases, synchonization time is reached in N /2
synchronization rounds.
24
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Adding to (50) the correction of this difference, (tE –
tM)(N – i)N –1, all the xi values are simultaneously equivalent:
1).
(2




N
N
t
t
t
x
M
E
M
i
(51)
The
above
process
apparently
reaches
the
synchronization in a fast way. However, as it was explained
before, it is important to avoid adjustments of local clocks
that could cause that local times could run backwards. So,
(50) should be applied as
1)}.
(
max{ ,
 



i
N
N
t
t
x t
x
M
E
M
i
i
(52)
Figure 15 shows the local clocks offset with respect to
the master clock after the application of (52). The resulting
offset is caused by the above constraint: although maximum
initial offset is reduced to the 50%, the synchronization has
no effect on local clocks with an initial time advanced with
respect to the master clock. Due to this constraint, more
additional synchronization rounds cannot reduce this offset
in a substantial way.
A further method could consist of the selection of the
maximum value of local clocks. It can be initiated by the
sink node; it transmits in sequence its local time value, and
each node compare the received timestamp with its local
time value, and it relays the maximum of these values. When
the sequence is finished, the sink node receives the
maximum value of local clocks, which will be chosen as the
master clock reference. Then, the first synchronization
method, expressed in (50), is applied. In that case, the
synchronization time will be reached faster, as well, because
all the nodes adjust their local time with the maximum value
of local clocks.
Figure 16 allows to make a comparison of performances
of some of the previous algorithms, in a WSN with ring
topology with N = 100 nodes, after 100 synchronization
rounds.
The
diffusion
of
a
global
time
has
a
bad
performance, due to the constraints discussed above. After
these synchronization rounds, the reduction of the initial
maximum offset is next to 50%.
0
0,2
0,4
0,6
1
4
7
10
13 16 19 22 25
28 31 34 37 40
43 46 49 52 55 58
61 64 67 70 73
76 79 82 85 88
91 94 97 100
Node index
Secs
Figure 15. Synchronization driven by the transmission of a master clock
reference. Local clock offset (in seconds) with respect to master clock time
after one synchronization round. The reduction of the initial offset is
approximately of 50%. The synchronization has no effect in local clocks
advanced with respect to the master clock.
0
0,2
0,4
0,6
0,8
1
0
20
40
60
80
100
Synchronization rounds
local clocks maximum offset
global clock
time average
time maximum
Figure 16. Performance of some synchronization algorithms described in
Section VIII, in a WSN with ring topology with N= 100 nodes. The
difussion of a global clock time across the network is the worst option,
while the selection of the maximum time value from local clock time of
neighbor nodes seems to be a more effective technique.
The selection of the average time value from neighbor
nodes softly decreases the maximum offset between local
clocks as the number of synchronization rounds grows; in
that case, the reduction of the offset after the same number of
synchronization rounds is about 80%. The best choice seems
to be the selection of the maximum time value from neighbor
nodes. The rough shape of the graphic line is due to the
appearance of groups of local maximum times. These local
values can remain unchanged during some synchronization
rounds, until a greater time value gets its neighborhood.
IX.
CONCLUSION AND FUTURE WORK
This paper has applied some well established results from
System Dynamics and Algebraic Graph Theory to state the
ease of the synchronization of a WSN with regular ring
topology, which has been initially designed to support
surveillance applications. It is assumed that local clocks of
network nodes exhibit a linear behavior during the whole
synchronization process, since the effects of clock drift and
skew have been supposed negligible, due to the limited
accuracy of local clocks. Furhermore, a constraint to prevent
that clocks could run backwards had to be applied.
The synchronizability of the WSN is enhanced by means
of a reduction of the number of network nodes, and also
through
the
decrease
of
another
overall
topological
parameters, as the network diameter and the maximum
network degree. Apparently, as it is established by the
theory, the selected topology by needs of the application
domain
is
not
a
good
initial
candidate
for
time
synchronization.
However,
the
application
of
various
synchronization algorithms, initially based on a distributed
diffusion of local clock values and subsequently on the
diffusion of a master clock reference, shows significant
performance differences. The exchange of local timestamps
among adjacent nodes, and the subsequent selection of the
maximum of these values to adjust local clocks, seems to be
an effective technique, as well as the diffusion of a master
25
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

clock reference, which is chosen as the maximum of local
clock values.
As part of the future work, the above synchronization
algorithms should be enriched with the addition of drift,
skew and other nondeterministic effects. It is expected that
the results obtained may guide the design of surveillance
WSN and time synchronization protocols, and it is also
foreseen to extract a set of more general rules to be extended
to WSN with more complex topologies, and maybe designed
for different purposes.
ACKNOWLEDGMENT
The research work described above has been partially
funded by the European Commission, VI Framework
Program, IST STREP Program, Action line IST-2005-2.5.3
(Embedded Systems), μSWN Project, code IST-034642.
Also, the authors would like to thank Marta Zuazúa and
Pedro Castillejo their initial contribution to the numerical
simulations made.
REFERENCES
[1]
José A. Sánchez Fernández, Ana B. García Hernando, José F.
Martínez Ortega, and Lourdes López Santidrián, “Synchonization in a
wireless sensor network designed for surveillance applications,” Proc.
Fifth
International
Conference
in
Wireless
and
Mobile
Communications (ICWMC 2009), Cannes, France, Aug. 2009, IEEE
Computer Society, pp. 369-372. doi: 10.1109/ICWMC.2009.68.
[2]
Renato E. Mirollo and Stephen H. Strogatz, “Synchronization of
pulse-coupled biological oscillators,” SIAM J. Appl. Math., vol. 50,
no. 6, Dec. 1990, pp.1645-1662.
[3]
Duncan J. Watts and Steven H. Strogatz, “Collective dynamics of
‘small-world’ networks,” Nature, vol. 393, June 1998, pp. 440-442.
MacMillan Publishers Ltd., 1998.
[4]
Yoshiki Kuramoto, Chemical Oscillations, Waves and Turbulences.
Springer, 1984.
[5]
Mauricio Barahona and L. M. Pecora, “Synchronization in small-
world sytems,” Phys. Rev. Letters, vol. 89, no. 5, July 2002, pp.
054101-1-054101-4.
[6]
Louis M. Pecora, “Synchronization of oscillators in complex
networks,” Pramana – J. of Physics, vol. 70, no. 6, June 2008, pp.
1175-1198. Indian Academy of Sciences, 2008.
[7]
Sergio Barbarossa and Francesco Celano, “Self-organizing sensor
networks designed as a population of mutually coupled oscillators,”
Proc. IEEE Sixth Workshop on Signal Processing Advances in
Wireless Communication (SPAWC 2005), New York, USA, June
2005, pp. 475-479.
[8]
Sergio Barbarossa and Gesualdo Scutari, “Decentralized maximun-
likelihood estimation for sensor networks composed of nonlinearly
coupled
dymanical
systems,”
IEEE
Transactions
on
Signal
Processing, vol. 55, no. 7, July 2007, pp. 3456-3470.
[9]
Sergio
Barbarossa,
Gesualdo
Scutari,
and
Anantram
Swami,
“Achieving consensus in self-organizing wireless sensor networks:
the impact of network topology in energy consumption,” Proc. IEEE
32nd International Conference on Acoustics, Speech, and Signal
Processing (ICASSP 2007), Honolulu, Hawaii, USA, April 2007, pp.
II.841-II.844..
[10] Norman L. Biggs, Algebraic Graph Theory. Cambridge University
Press, 1974.
[11] Allen J. Schwenk and Robin J. Wilson, “On the Eigenvalues of a
Graph,” in Selected Topics in Graph Theory, Lowell W. Beineke and
Robin J. Wilson, Eds. Academic Press, 1978, pp. 307-336.
[12] Miroslav Fiedler, “Algebraic connectivity of graphs,” Czechoslovak
Mathematical Journal, vol. 23, no. 2, 1973, pp. 298-305. Institute of
Mathematics, Acad. of Sc., Czech Republic.
[13] Bohan Mohar, “The Laplacian Spectrum of Graphs,” in Graph
Theory, Combinatorics, and Applications, vol. 2, Y. Alavi, G.
Chartrand, O. R. Oellermann, and A. J. Schwenk, Eds. Wiley, 1991,
pp. 871-898.
[14] Franesc Comellas and Silvia Gago, “Synchronizability of complex
networks,” Journal of Physics A: Mathematical and Theoretical, vol.
40, 2007, pp. 4483-4492. IOP Publishing, 2007.
[15] Bharath Sundararaman, Ugo Buy, and Ajay D. Kshemkalyani, “Clock
synchronization for wireless sensor networks: a survey,” Ad-Hoc
Networks, 3(3). May 2005, pp. 281-323.
[16] Ya R. Faizulkhakov, “Time synchronization methods for wireless
sensor networks: a survey,” Programming and Computer Software,
vol. 33, no. 4, 2007, pp. 214-226. Pleiades Publishing, Ltd. ISSN.
0361-7688.
[17] Brian M. Sadler and Ananthram Swami, “Synchronization in sensor
networks: an overview,” milcom, pp. 1-6. MILCOM 2006. ISBN: 1-
4244-0617-X.
[18] Fikret Sivrikaya and Büllent Yener, “Time synchronization in sensor
networks: a survey,” IEEE Network, July/Aug. 2004, pp. 45-50.
[19] Kay Römer, Philipp Blum, and Lenart Meier, “Time Synchronization
and Calibration in Wireless Sensor Networks,” in Handbook of
Sensor Networks: Algorithms and Architectures, I. Stojmenovic, Ed.
Wiley and Sons, Oct. 2005, pp. 199-237.
[20] Qun Li and Daniela Rus, “Global clock synchronization in sensor
networks,” IEEE Transactions on Computers, vol. 55, no. 2, Feb.
2006, pp. 214-226, doi:10.1109/TC.2006.25.
[21] Osvaldo
Simeone
and
Umberto
Spagnolini,
“Distributed
time
synchronization in wireless sensor networks with coupled discrete-
time oscillators,” EURASIP Journal on Wireless Communications
and Networking, vol. 2007, pp. 1-13. Hindawi Publishing Corp.
Article ID 57054, doi: 10.1155/2007/57004.
[22] Shyi-Long Lee, Yeung-Long Luo, Bruce E. Sagan, and Yeong-Nan
Yeh, “Eigenvectors and eigenvalues of some special graphs. IV.
Multilevel circulants,” Int. J. of Quantum Chemistry, Vol. 41, 1992,
pp. 105-116.
[23] Demetri P. Spanos, Reza Olfati-Saber, and Richard M. Murray,
“Dynamic consensus on mobile networks,” Proc. 16th International
Federation of Automatic Control World Congress (IFAC 2006),
Prague, Czech Republic, July 2005. Elsevier, 2006. ISBN: 978-0-08-
0451084.
[24] Reza Olfati-Saber and Richard M. Murray, “Consensus problems in
networks of agents with switching topology and time-delays,” IEEE
Transactions on Automatic Control, vol. 49, no. 9, Sept. 2004, pp.
1520-1532.
[25] Juan A. Almendral and Albert Díaz-Guilera, “Dynamical and spectral
properties of complex networks,” New Journal of Physics, vol. 9,
(2007) 187, doi: 10.1088/1367-2630/9/6/187.
[26] μSWN Project website: http://www.uswn.eu. Date of last access:
July, 20th 2010.
[27] Jeremy Elson, Lewis Girod, and Deborah Estrin, “Fine-grained
network time synchronization using reference broadcasts,” Proc. Fifth
Symposium on Operating Systems Design and Implementation
(OSDI 2002), Boston, Massachussets. Dec. 2002, Vol 36, pp. 147-
163.
[28] Michael Mock, Reiner Frings, Edgar Nett, and Spiro Trikaliotis,
“Continuous
clock
synchronization
in
wireless
real-time
applications,” Proc. 19th IEEE Symposium on Reliable Distributed
Systems (SRDS-00), Nuremberg, Germany, Oct. 2000, pp. 125–133..
26
International Journal on Advances in Security, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/security/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

