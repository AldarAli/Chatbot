A Framework for Semantic Model Ontologies
Generation for E-government Applications
Jean Vincent Fonou Dombeu1,2
1Department of Software Studies
Vaal University of Technology
Vanderbijlpark, South Africa
Email: fonoudombeu@gmail.com
Magda Huisman2
2School of Computer, Statistical
and Mathematical Sciences
North-West University
Potchefstroom, South Africa
Email: Magda.Huisman@nwu.ac.za
Zygmunt Szpak3
3School of Computer Science
The University of Adelaide
Adelaide, Australia
Email: zygmunt.szpak@adelaide.edu.au
Abstract—The Web Ontology Language (OWL) standard is
increasingly being used to build e-government service ontologies
that are integrable and interoperable in e-government environ-
ments. However, current works employing OWL ontologies in
e-government are more directed to the Semantic Web audience
than to the broader e-government community. Furthermore,
only a few of these works provide detailed guidelines for
constructing OWL ontologies from a business domain. This paper
presents a framework for generating semantic model ontologies
in OWL syntax from a government service domain. Firstly, the
government service domain is analyzed and a domain ontology is
constructed to capture its semantic content. Thereafter, a semi-
formal representation of the domain ontology is created with
the ontology knowledge-base editor Prot´eg´e. Finally, the OWL
ontology model is imported. This study aims at providing e-
government developers, particularly those from the developing
world, with an easy to use framework for practicing semantic
knowledge representation in e-government processes; thus facil-
itating the design of e-government systems that can be easily
integrated and maintained.
Keywords - E-government; Interoperability; Ontology; OWL;
Prot´eg´e; Software Engineering.
I. INTRODUCTION
In recent years, many countries worldwide have adopted e-
governance, resulting in several applications being developed
in
various
government
departments
and
agencies.
The
increasing number of autonomous e-government applications
has raised several software engineering issues as reusability,
maintenance,
integration,
and
interoperability
of
these
applications [1][2][3][4], in the context of one-stop e-
government which requires e-government applications to
be accessed at a single point and function as a whole
for better efﬁciency [1][5]. In an attempt to address the
above issues, semantic model ontologies using the OWL
Web Service Standard are frequently used. OWL ontologies
allow the composition [7][8], searching, matching, mapping
and
merging
[9][10]
of
e-services
and
facilitate
their
integration [5][8][9], maintenance [8][9] and interoperability
[3][7][10][11].
Many
works
describe
ontology
modelling
and
implementation activities in e-government [6][3][7][10][11].
These works demonstrate that OWL is a common language
employed
for
semantic
knowledge
representation
in
e-
government. However, in this research, we argue that the
above works are more directed to the Semantic Web audience
than to the broader e-government community. Furthermore,
only a few of these works provide detailed guidelines
for constructing OWL ontologies from an e-government
service
domain.
This
paper
presents
a
framework
for
generating semantic model ontologies in OWL syntax, from
a government service domain. Firstly, the government service
domain is analyzed and its domain ontology is constructed.
Thereafter, a semi-formal representation of the domain
ontology is created and implemented with the ontology
knowledge base editor Prot´eg´e. Finally, the OWL ontology
model is imported. The study aims at providing e-government
developers, particularly those from the developing world,
with an easy to use framework for practicing semantic
knowledge representation in e-government processes; which
allow building e-government systems that can be easily
integrated and maintained.
The rest of the paper is organized as follows. Section
2 deﬁnes ontology and gives its roles in the software
engineering ﬁeld. Ontology modelling and implementation
activities in e-government are reviewed in Section 3. The
languages and software tools for representing and editing
ontologies are presented in Section 4. Section 5 presents
the framework for OWL ontology generation. A case study
application of the framework is conducted in Section 6.
Section 7 carries out a discussion and a conclusion is drawn
in the last section.
II. DEFINITION AND ROLES OF ONTOLOGY
There are several deﬁnitions of ontology in the literature
[12]; the most commonly used deﬁnition is taken from Gruber
[13]. He deﬁned an ontology as an explicit speciﬁcation of
a conceptualization. A conceptualization refers to an abstract
and simpliﬁed view of a domain of knowledge one wishes to
represent for a certain purpose. The domain could be explicitly
and formally represented using existing objects, concepts,
entities and the relationships that exist between them [13]. The
152
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

domain could refer to a domain such as medicine, geographic
information system, or e-government; it could also refer to
an area of problem solving or a knowledge representation
language [14]. Ontologies are widely used in disciplines such
as software engineering, databases, artiﬁcial intelligence, and
many more [15]. In these ﬁelds, developers use ontologies to
represent knowledge in a manner that can be automatically
processed by a machine. In [16] and [17] the authors argued
that because an ontology represents the concepts of a domain
of knowledge and the relationships between them, it provides
a shared and common understanding of the structure of infor-
mation among people and software agents. It also facilitates
software development and improves processes in the corre-
sponding domain. Aside from the semantic representation of
concepts of a domain of knowledge, an ontology also provides
a data type description which speciﬁes the data component
of applications [19]. Ontologies are application independent,
which allow domain knowledge reuse and easy software
maintenance, and contribute to the semantic interoperability
of applications [13]. Due to the complexity of government
processes various government departments need ontologies to
streamline, re-organize government services and to facilitate
the integration, maintenance and interoperability of their e-
government systems [19][20]. Some works illustrating the
current practice of using ontologies in e-government systems
are provided in the next section.
III. USE OF ONTOLOGY IN E-GOVERNMENT
Salhofer et al. [6] presented an ontological approach for
service integration in e-government. A semantic objective and
service discovery technique was used to illustrate how e-
services could be derived from citizens’ needs expressed in
the form of simple phrases. The derived e-service ontologies
were represented in OWL and the Web Service Modelling Lan-
guage (WSML). Another ontological approach for semantic
interoperability in e-government was proposed by Muthaiyah
and Kershberg in [3]. They used a shared hierarchal ontology
in which knowledge is organized at different levels with
local ontologies. A semantic bridging process methodology
was described for the mapping, merging and integration of
local ontologies represented in an OWL syntax. In [7], an
intelligent platform to host e-government services in the form
of a customer-oriented e-government Web portal was put for-
ward. To facilitate services and related public administrations
interoperability they introduced the concept of an intelligent
document and a Life Event service both of which are seman-
tically modelled with OWL ontology. These allow automatic
services composition, advanced searching mechanisms and
better usability from the user’s point of view. In [8] and
[9] the authors presented a software engineering platform for
the development and management of e-government services
namely ONTOGOV. The ONTOGOV platform uses Semantic
Web technologies including OWL-S and Web Service Mod-
elling Ontology (WSMO) to construct eight types of ontolo-
gies characterizing the e-government domain; they include:
legal ontology, organizational ontology, life-cycle ontology,
domain ontology, service ontology, life-event ontology, proﬁle
ontology, web service orchestration ontology. These ontologies
aim at describing and composing services provided by public
administrators. In particular, the life-cycle ontology is used to
carry out the maintenance of e-services and the web service
orchestration ontology is used for software components and
service ontology integration [9]. A multilevel abstraction of
life-events for e-government services integration was presented
in [10]. In their work, a life-event is deﬁned as a collection
of actions needed to deliver a public service satisfying the
needs of a citizen in a real-life situation and is modelled using
three kinds of ontologies: e-government ontology, regulatory
ontology and service ontology. The ontologies are represented
in OWL to enable dynamic services integration through se-
mantic searching and matching of concepts [10]. Xiao et al.
[11] present yet another ontology-based approach for semantic
interoperability in e-government. They describe the business
process of e-government services using an E-government Busi-
ness Ontology (EG-BOnt). Each business process is described
in terms of its input, output, resource constraints and logical
relations with other relevant businesses. Thereafter, each class
of the EG-BOnt is deﬁned using the OWL language for
its strong semantic and logic relation expressiveness [11].
Finally, an architecture describing a semantic interoperability
framework between different government systems based on
the proposed EG-BOnt was presented.
IV. ONTOLOGY REPRESENTATION LANGUAGES
The Semantic Web domain provides various languages for
representing ontologies including XML, RDF, DAML, and
OWL [21]. OWL is the most widely used of these languages
because of its high expressive power and the fact that it
is the W3C standard ontology language for the Semantic
Web [24][26]. Several software tools are used for ontology
edition including WebODE, OntoEdit, KAONI, and Prot´eg´e
[18]. Ontology developers prefer Prot´eg´e for its ease of
use and its abstraction capabilities; it has a graphical user
interface which enables ontology developers to concentrate on
conceptual modelling without any knowledge of the syntax of
the output language [24]. Furthermore, Prot´eg´e is open-source
software which is downloadable from the Stanford Medical
Informatics website. This paper gives a step-by-step guideline
on how e-government developers can design and generate
OWL ontologies using Prot´eg´e. The next section presents the
proposed framework for constructing OWL ontologies from
an e-government service domain using Prot´eg´e.
V. FRAMEWORK FOR OWL ONTOLOGIES GENERATION
The framework starts with an e-government service domain
as an input. Domain experts and different information sources
are consulted to describe the business process of the domain. A
domain ontology is then built to capture the relevant concepts,
activities, tasks, regulations and relationships between all the
constituents of the e-government service domain. Thereafter,
a semi-formal representation of the domain ontology is con-
structed in the form of a class diagram in UML syntax; this
153
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

Create Domain Ontoloy
Create Semi-formal Ontology
Concepts, activities, semantic
relationships amongst terms
Class diagramm
Domain experts, other
information sources
Government
service domain
Government
service domain
Develop Ontology
Protégé representation
Disc
OWL file
Import Ontology
OWL e-Service
Ontology
OWL e-Service
Ontology
Intermediate editor
Fig. 1.
Framework for OWL Ontology Generation
is done by identifying entities and instances in the domain
ontology and categorizing relationships between entities (as-
sociation, composition, inheritance). The semi-formal version
of the ontology is created with Prot´eg´e and saved onto the
disc. Finally, appropriate software is used to import the OWL
version of the ontology from the ﬁle. To fulﬁl the aim of
this paper which is to provide e-government developers with
a step-by-step guideline for generating semantic model OWL
ontologies from e-government service domains, a real-life case
study illustrating the steps of the framework provided in Figure
1 is conducted in the next section; each subsection corresponds
to a step of the framework in Figure 1 from top to bottom.
VI. CASE STUDY
A. E-government Service Domain
The case study used in this paper was motivated by the
fact that, in developing countries and in Sub Saharan Africa
(SSA) in particular, almost every government department is
somehow involved in the implementation of a programme
aiming at improving the welfare of people. These programmes
are commonly called development projects and include infras-
tructure development, water supply and sanitation, education,
rural development, health care, ICT infrastructure develop-
ment and so forth. Thus, we thought that an e-government
web application that could interface all the activities related
to development projects implementation in a SSA country
could bring tremendous advantages; particularly, such a web
application would improve the monitoring and evaluation
of projects and provide transparency, efﬁciency and better
delivery to populations. In [22], we have proposed an ontology
support model for such a web-based e-government application.
We evaluated case studies of development projects imple-
mentation, consulted domain experts including municipalities
and non-governmental organizations employees and academic
members, and reviewed publications in related ﬁelds including
project management, project monitoring and evaluation, and
capacity building [22]. Thus, a conceptual/domain ontology of
development projects monitoring (OntoDPM) in a developing
country was developed [22]. The next section presents the
OntoDPM.
B. Create Domain Ontology
The ontology engineering ﬁeld has established various kinds
of ontologies; an exhaustive list of these ontologies could
be found in [18]. One of the most commonly used of these
ontologies is the conceptual/domain ontology. A domain on-
tology characterizes domains such as medicine, geology, e-
government, and so on; it provides vocabularies about the
objects and concepts within a domain and their relationships,
the activities that take place in that domain, and theories and
elementary principles governing the domain [12].
Household
FocusGroup
Contractor
Purchaser
Supplier
Consultant
ProjectTeam
ProjectStaff
ProjectManager
DevelopmentProject
Government
Donor
PrivateSector
CivilSociety
Community
NGO
Academia
CommunityWorker
CommunityLeader
TraditionalLeader
CommunityBasedOrganization
Department
Municipality
DeliveryActivity
FieldWork
Meeting
Visit
Discussion
Training
Interview
Survey
Reporting
Report
Periodical
Workshop
MonitoringIndicator
Accounting
OpratingCost
StaffAppoinment
ContributionLevel
ProvisionForBuilding
SalaryPayment
ImpactIndicator
OutputIndicator
ProgressIndicator
ProcessIndicator
InputIndicator
DataCollection
SiteObservation
RiskIndicator
Agency
PolicyStatus
MarketPrice
Fig. 2.
OntoDPM Domain Ontology
In [22], we used a ﬁve step framework adopted from
the Uschold and King [14] ontology modelling approach to
represent the OntoDPM domain ontology as in Figure 2. The
OntoDPM shows the key concepts of the domain (people,
stakeholder, ﬁnancier, monitoring indicator, reporting tech-
nique, etc.), the activities carried out in the domain (training,
discussion, ﬁeldwork, visit, meeting, etc.) and the relationships
between the constituents of the domain. The semi-formal
representation of the OntoDPM is provided in the next section.
C. Create the Semi-formal Ontology
Based on the OntoDPM in Figure 2 we designed the class
diagram of the ontology. The classes, inheritance structure and
the class instances are provided in Table 1. The classes in Table
1 were constructed by identifying entities and instances in
the OntoDPM and categorizing relationships between entities
154
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

TABLE I
DESIGN DETAILS OF THE ONTODPM CLASS DIAGRAM
Classes
Development project, monitoring indicator, delivery activity, reporting
technique, person, stakeholder, ﬁnancier, community leader, traditional
leader, community worker, project staff, consultant, academic institution,
community based organization, civil society, private company,
government, donor, non-governmental organization, agency , municipality,
department, accounting activity, data collection technique
Inheritance Structure
Super Class
Sub Classes
Person
project staff, community leader, community
worker, traditional leader
Financier
government, donor, non-governmental
organization
Stakeholder
academic institution, civil society, private
company, community based organization
Government
department, municipality, agency
Class Instances
Class
Instances/Individuals
Monitoring indicator
input indicator, output indicator,
impact indicator, risk indicator,
process indicator, progress indicator
Delivery activity
survey, meeting, visit, discussion, training,
ﬁeldwork, interview
Reporting technique
workshop, written report, periodical, survey
Accounting activity
operating cost, salary payment, contribution
level, provision for building, policy status,
staff appointment, market price
Data collection technique site observation, focus group, interview,
survey
(composition, association, inheritance). Further, we followed
the UML syntax for knowledge representation [16] to represent
the semi-formal version of the OntoDPM in UML as depicted
in Figure 3. We have chosen the UML knowledge represen-
tation formalism because it allows modelling ontologies with
instances/individuals, slots and classes, which are also used in
Prot´eg´e [23].
D. Develop Ontology
We have used the ontology knowledge base editor Prot´eg´e
[23] to implement the UML class diagram of the OntoDPM
in Figure 3. We saved the Prot´eg´e ﬁle as an OWL ﬁle onto
the disc; Figure 4 depicts the location and the OWL ﬁle icon
onto the disc. The Prot´eg´e version of the OntoDPM with some
hidden components is shown in Figure 5. From the saved OWL
ﬁle, the OWL ontology will be imported using an appropriate
editor.
E. Export the OWL Ontology
Many editors were tested to import/open the OWL ﬁle; we
found that programming editors including Microsoft Visual
Studio, JCreator, and JGrasp could import the OWL ﬁle
sucessfully. Figure 6 and Figure 7 show the imported OWL
ontology in JCreator and Microsot Visual Studio respectively.
VII. DISCUSSION
A detailed discussion on the use of the generated OWL
ontology is out of the scope of this paper and will be the focus
of our future work. Nevertheless, generating an OWL ontology
from a e-government business domain as demonstrated in this
File location
OWL file
Fig. 4.
OWL File and Location onto the Disc
Fig. 5.
Prot´eg´e Version of the OntoDPM
155
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

Fig. 6.
OWL Ontology Imported with JCreator
paper is an important step towards the development of Se-
mantic Web applications as e-government applications, which
have potential to perform semantic inference and reasoning
over the OWL ontologies and facilitate software components
integration and interoperability. Moreover, many platforms
as Java API, .NET, ASP and so forth, exist for developing
Semantic Web applications based on OWL ontologies [4][25].
VIII. CONCLUSION
This study has presented a framework for constructing
semantic model ontologies in OWL Web Service Standard
for e-government applications. The proposed framework uses
Fig. 7.
OWL Ontology Imported with Microsoft Visual Studio
simple ontology engineering techniques (modelling and rep-
resentation techniques) to capture the semantic content of
an e-government service business domain; this makes the
framework easy to understand and user-friendly. Furthermore,
the platform employed includes Prot´eg´e, JCreator, and JGrasp,
to create and import the OWL ontology. These are mainly open
source software; which make the framework usable by the
broader e-government community, particularly e-government
developers from the developing countries where there is lit-
tle or no practice of semantic content representation for e-
government systems.
156
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

REFERENCES
[1] T. Lee, C.T. Hon and D. Cheung, “XML Schema Design and Manage-
ment for E-government Data Interoperability,” Electronic Journal of E-
government, Vol. 7, No. 4, pp. 381-390, 2009.
[2] J. Choudrie and V. Weerrakody, “Horrizontal Process Integration in
E-government: The perspective of UK Local Authority,” International
Journal of Electronic Government Research, Vol. 3, No. 3, pp. 22-39,
July-September 2007.
[3] S. Muthaiyah and L. Kerschberg, “Achieving Interoperability in E-
government Services with two Modes of Semantic Bridging: SRS and
SWRL,” Journal of Theoritical and Applied Electronic Commerce Re-
search, Vol. 3, No. 3, pp. 52-63, December, 2008.
[4] A. Saekow and C. Boonmee, “A Practical Approach to Interoperability
Practical Implementation Support (IPIS) for E-government Interoperabil-
ity,” Electronic Journal of E-government, Vol. 7, No. 4, pp. 403-414,
2009.
[5] M. A. Wimmer, “Integrated Service Modelling for Online One-Stop
Government,” Electronic Markets, Vol. 12, No. 3, pp.149-156, 2002.
[6] P. Salhofer, B. Stadlhofer and G. Tretter, “Ontology Driven E-
government,” Electronic Journal of E-government, Vol. 7, No. 4, pp.
415-424, 2009.
[7] L.M.A. Sabucedo, L.E.A. Rifon, F. Corradini, A. Polzonetti and B. Re,
“Knowledge-based Platform for E-government Agents: A Web-based
Solution Using Semantic Technologies,” Journal of Expert Systems with
Applications, Elsevier Inc., Vol. 2010, No. 37, pp. 3647-3656, 2010.
[8] D. Apostolou, L. Stojanovic, T.P. Lobo, J.C. Miro and A. Papadakis “Con-
ﬁguring E-government Services Using Ontologies,” IFIP International
Federation for Information Processing, Springer Boston, Vol. 2005, No.
189, pp. 1571-5736, 2005.
[9] D. Apostolou, L. Stojanovic, T.P Lobo and B. Thoensen, “To-
wards a Semantically-Driven Software Engineering Envirionment for E-
government,” IFIP International Federation for Information Processing,
M. Bohlen (Eds), TCGOV 2005, LNAI 3416, pp. 157-168, 2005.
[10] F. Sanati and J. Lu, “Multilevel Life-event Abstraction Framework for
E-government Service Integration,” In Proceedings of the 9th European
Conference on E-government 2009 (ECEG 2009), London, UK, pp. 550-
558, 29-30 June, 2009.
[11] Y. Xiao, M. Xioa and H. Zhao, “An Ontology for E-government
Knowledge Modelling and Interoperability,”
In Proceedings of IEEE
International Conference on Wireless Communications, Networking and
Mobile Computing, (WiCOM 2007) , Shanghai, pp. 3600-3603, 21-25
September, 2007.
[12] A. Gomez-Perez and V.R. Benjamins, “Overview of knowledge Sharing
and Reuse Components: Ontology and Problem-Solving Methods,”
In
Proceedings of the IJCAI-99 workshop on Ontologies and Problem-
Solving Methods (KRR5), Stockholm, Sweden, pp. 1-15, 2 August, 1999.
[13] T.R Gruber, “Toward Principles for the Design of Ontologies used for
Knowledge Sharing,”
International Journal Human-Computer Studies,
Vol. 43, pp. 907-928, 1993.
[14] M. Uschold, “Building Ontologies: Towards a Uniﬁed Methodology,” In
Proceedings of Expert Systems 96, the 16th Annual Conference of British
Computer Society Specialist Group Expert Systems, Cambridge, UK, pp.
1-18, 16-18 December, 1996.
[15] C.A Welty, “Ontology Research,”
AI Magazine, Vol. 24, No. 3, pp.
11-12, 2003.
[16] L. Ceccaroni and E. Kendall, “A Semantically-Rich, Graphical Envi-
ronment for Collaborative Ontology Development en Agentcities,” iD3,
Barcelona, Spain, pp. 1-6, 2003.
[17] J.A.M. Usero and M.P.B. Orenes, “Ontologies in the Context of Knowl-
edge Organization and Interoperability in e-Government Services,” IRFD
World Forum 2005 - Conference on Digital Divide, Global Development
and the Information Society, November 14-16. Tunis, Tunisia, pp. 1-8,
2005.
[18] C. Calero, F. Ruiz and M. Piattini, “Ontologies for Software Engineering
and Software Technology,” Calero.Ruiz.Piattini (Eds.), Springer-Verlag
Berlin Heidelberg, 2006.
[19] F. Bettahar, C. Moulin and J.P. Barthes, “Ontologies Supporting E-
government Services,” In Proceedings of the IEEE Artiﬁcial Intelligence
Conference, Corvilha, Portuguese, pp. 100-1005, 5-8 December,2005.
[20] A. Mondorf and T. Herborn, “Ontology-based process mediation in the
European Project BRITE,” In the Proceedings of MKWI 2008, Munich,
pp. 341-352, 26-28 February, 2008.
[21] M. Laclavik, “Ontology and Agent Based Approach for Knowledge
Management,” PhD Thesis, Institute of Informatics, Slovak Academy of
Sciences, June, 2005.
[22] J.V. Fonou-Dombeu, “A Conceptual Ontology for E-government Moni-
toring of Development Projects in Sub Saharan Africa,” In Proceedings
of the Information Society Technologies of Africa 2010 (IST-Africa
2010) Conference, Paul Cunningham and Miriam Cunningham (Eds),
IIMC International Information Management Corporation, Durban, South
Africa, pp. 1-8, 19-21 May, 2010.
[23] M. Horridge, H. Knublauch, A. Rector, R. Stevens and C. Wroe, “A
Practical Guide to Building OWL Ontoloies Using the Prot´eg´e-OWL
Plugin and CO-ODE Tools Edition 1.0,” Research Report, University of
Manchester, UK, 27 August, 2004.
[24] M. Singh and S.K. Malik, “Constructing Ontologies in OWL Using
Prot´eg´e-2000,” In Proceedings of the 2nd National Conference on Chal-
lenges and Opportunities in Information Technology 2008 (COIT 2008),
Mandi Gobindgarh, Punjab-India, pp. 1-4, 2008.
[25] H. Knublauch, M. Horridge, M. Musen, A. Rector, R. Stevens, N.
Drummond, P. Lord, N.F. Noy, J. Seidenberg and H. Wang, “The
Prot´eg´e OWL Experience,” Workshop - OWL: Experiences and Directions
(OWLED-2005), Galway, Ireland, November, pp. 1-11, 2005.
[26] A. Cregan, M. Mochol, D. Vrandecic and S. Bechhofer, “Pushing the
Limits of OWL, Rules and Prot´eg´e A Simple Example,” Workshop - OWL:
Experiences and Directions (OWLED-2005), Galway, Ireland, pp. 1-10,
November, 2005.
157
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

<<ontologyClass>>
Development Project
<<slotRelation>>
IsMonitorWith
<<slotRelation>>
IsInformingOn
<<slotRelation>>
IsImplementWith
<<hasTampleteSlot>>
<<ontologyClass>>
monitoringIndicator
<<ontologyClass>>
reportingTechnique
<<ontologyClass>>
deliveryActivity
<<valueType>>
<<individual>>
workshop
<<individual>>
writtenReport
<<individual>>
periodical
<<individualOf>>
<<individual>>
inputIndicator
<<individual>>
impactIndicator
<<individual>>
outputIndicator
<<individual>>
progressIndicator
<<individual>>
processIndicator
<<individualOf>>
<<individual>>
riskIndicator
<<individual>>
visit
<<individual>>
discussion
<<individual>>
training
<<individual>>
fieldwork
<<individual>>
survey
<<individual>>
meeting
<<individualOf>>
<<individual>>
Interview
<<individual>>
FocusGroup
<<ontologyClass>>
municipality
<<ontologyClass>>
government
<<ontologyClass>>
Department
<<ontologyClass>>
Agency
<<subclass-of>>
<<ontologyClass>>
academicInstitution
<<ontologyClass>>
stakeholder
<<ontologyClass>>
provateCompany
<<ontologyClass>>
civilSociety
<<subclass-of>>
<<ontologyClass>>
communityBasedOrganization
<<ontologyClass>>
traditionalLeader
<<ontologyClass>>
person
<<ontologyClass>>
communityWorker
<<ontologyClass>>
projectStaff
<<subclass-of>>
<<ontologyClass>>
communityLeader
<<ontologyClass>>
AccountingActivity
<<slotRelation>>
IsWorkingFor
<<slotRelation>>
IsInvolvedIn
<<hasTampleteSlot>>
<<valueType>>
<<valueType>>
<<slotRelation>>
IsFundedBy
<<IndividualOf>>
<<ontologyClass>>
financier
<<valueType>>
<<ontologyClass>>
donor
<<subclass-of>>
<<slotRelation>>
isManagedWith
<<ontologyClass>>
nonGovermentalOrganization
<<individualOf>>
<<valueType>>
<<slotRelation>>
isAffiliatedWith
<<hasTampleteSlot>>
<<valueType>>
<<slotRelation>>
isBelongingTo
<<hasTampleteSlot>>
<<hasTampleteSlot>>
<<valueType>>
<<slotRelation>>
isDivisionOf
<<hasTampleteSlot>>
<<valueType>>
<<valueType>>
<<individual>>
PolicyStatus
<<individual>>
MarketPrice
<<individual>>
ProvisionForBuiding
<<individual>>
OperationCost
<<individualOf>>
<<individual>>
ContributionLevel
<<individual>>
SalaryPayment
<<individual>>
StaffAppointment
<<individual>>
Supplier
<<individual>>
Consultant
<<individual>>
Contractor
<<individual>>
Purcharser
<<ontologyClass>>
DataCollectionTechnique
<<slotRelation>>
IsRecordedIn
<<individual>>
SiteObservation
Fig. 3.
Semi-formal UML Representation of the OntoDPM
158
ICDS 2011 : The Fifth International Conference on Digital Society
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-116-8

