Predicting Noise Power in Gm-C Filters through Machine Learning 
 
Malinka Ivanova 
Technical University of Sofia 
College of Energy and Electronics 
Sofia, Bulgaria 
E-mail: m_ivanova@tu-sofia.bg 
 
 
Abstract—Noise level in Gm-C filters is connected to the 
dynamic range and to the ratio signal-noise. Noise depends on 
the design of the transconductor cell and filter topology. 
Predicting the noise power before filter realization could save 
engineers efforts and resources. The aim of the paper is to 
present a novel approach for predicting the total noise power 
in biquad low pass second order Gm-C filter through 
application of machine learning algorithms as data is taken 
from synthesized filter topology and filter mathematical model. 
Five machine learning algorithms: Artificial Neural Networks, 
Decision Tree, Random Forest, Gradient Boosted Trees, 
Support Vector Machine are applied for data training and they 
are evaluated in order to find the most suitable for this 
problem. The results show that the best solutions for solving 
this engineering task are Artificial Neuron Networks and 
Decision Tree algorithms, which are characterized with the 
best performance and high accuracy. 
Keywords - machine learning; Gm-C filter; noise power; 
predictive model; signal flow graph 
I. 
 INTRODUCTION 
The increased interest to the continuous-time Gm-C 
filters is connected to their features like high bandwidth, 
possibilities for parameters tuning in large frequency 
diapason and very low passive sensitivity, as well as their 
successful applications in high frequency computer, 
communication and bio-medical devices and systems [1]-[3]. 
The most discussed Gm-C filters are realized through 
CMOS technology as the main building block is the 
transconductor 
(OTA 
– 
operational 
transconductance 
amplifier), which is implemented in the form of differential 
amplifier, cascodes or folded cascode [4]. Thus, the filter 
properties in significant way depend on the OTA design.  
The minimal input signal is limited by the input referred 
noise and the maximum input signal is connected to the 
transconductor nonlinearity. The output dynamic range is 
related to the total output noise and the maximal value of 
output linear voltage swing. So, the topics about noise 
reduction and transconductor linearity are still under 
extensive investigation.  
Noise depends on the design of the transconductor cell 
and on the Gm-C filters topology. The research efforts are 
focused on minimization the noise level in the filters that will 
lead to the larger dynamic range and higher ratio 
signal/noise. The dominant noise in Gm-C filters is thermal 
noise, but flicker noise is also taken into consideration. The 
sources of noise are MOS transistors as thermal noise (white 
noise) is generated in the channel as consequence of random 
charge carriers movement and flicker noise (or 1/𝑓, or pink 
noise) is product of random mobile carriers trapping and 
detrapping in the channel and in the gate oxide.  
Another question under exploration is related to the noise 
modeling and analysis and several methods are known for 
description the noise features and Gm-C filters noise 
behavior. All of them are based on noise analysis for a 
concrete filter solution. Exception is the general method 
proposed in [5][6]. The authors have developed a general 
structure of Gm-C filter that is a base for deriving any 
particular topology and analytical description. Such approach 
is suitable for implementation in the form of CAD tools. 
Nowadays, the most utilized methodology for Gm-C filters 
noise analysis (that is used in this work) consists of four 
steps: (1) identification the noise sources and noise spectrum 
𝑆𝑛; (2) discovering the transfer function 𝐻 from the noise 
source to the filter output; (3) calculating the output noise 
spectrum taking into account all noise sources; (4) 
calculating the total noise power as an integral over the 
frequency band of noise spectrum.  
One contemporary approach for modeling and analysis of 
electronic circuits and their parameters relays on algorithms 
in the areas of artificial intelligence, machine learning and 
deep learning [7][8], which scope is presented on Figure 1. 
 
 
Figure 1.  Scope of artificial intelligence, machine learning and deep 
learning 
Artificial intelligence utilizes programs to reproduce 
human behavior and typical human activities. Machine 
learning is an application of artificial intelligence where 
machines are capable to learn from data without explicit 
programming. Machine learning algorithms are used for 
Artificial intelligence – machine is capable to perform 
human activities 
Machine learning – machine learns from 
data without explicit programming 
Deep learning – artificial neural 
networks adapt and learn from data 
1
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

solving classification and clustering tasks with aim some 
items, events and processes to be predicted and analyzed [9]. 
Deep learning is part of machine learning and it is based on 
Artificial Neural Networks usage that is inspired by brain 
functionality of biological systems. Among the advantages 
of algorithms for deep learning are learning from data in an 
easy way, correct features selection and pattern recognition. 
Recently, machine learning approach is applied in support of 
electronics engineers, facilitating and automating tasks 
related to computer-aided design and analysis of electronic 
circuits [10]. 
The aim of the paper is to present a novel approach for 
predicting noise power in Gm-C filter through application of 
machine learning algorithms as data is taken from 
synthesized filter topology and filter mathematical model. 
Five machine learning algorithms: Artificial Neural 
Networks (ANN), Decision Tree (DT), Random Forest (RF), 
Gradient Boosted Trees (GBT), Support Vector Machine 
(SVM) are applied for data training and they are evaluated in 
order to find the most suitable for this problem, e. g., those 
with the best performance and high accuracy. The rest of the 
paper is organized as follows: 2nd section describes the 
research method, the 3rd section explains the filter modeling 
with noise sources, the 4th section presents predictive 
modeling through machine learning, and the final section 
includes conclusion and future work. 
II. 
RESEARCH METHOD 
The proposed method for predicting the noise power in 
Gm-C filter is shown on Figure 2 and it consists of the 
following steps:  
 
 
Figure 2.  Used research method 
(1) Derive the mathematical description of the filter noise 
power as before that the filter synthesis with noise sources is 
performed through the filter transfer function and signal flow 
graphs; (2) Form data set according to the filter mathematical 
description and data pre-processing; (3) Create a predictive 
model, train data, and apply machine learning algorithms; (4) 
Evaluate the performance of machine learning algorithms 
and analyze results. 
III. 
FILTER MODELING WITH NOISE SOURCES 
The literature examination shows that enough efficient 
noise models could be received after assumption that the 
capacitors in the Gm-C filter configuration are noiseless. 
Also, noisy OTA with transconductance 𝑔௠ is modeled with 
a noiseless transconductor and an equivalent input referred 
noise voltage source 𝑈௡, which spectral density is 𝑆௡(𝑓) as 
it is presented on Figure 3 [11]-[13].   
 
Figure 3.   Noise model of an OTA [11]-[13] 
In the same literature sources, it is shown that the 
spectral density 𝑆௡(𝑓) of one input referred noise voltage 
source 𝑈௡ can be modeled with two components that define 
the influence of thermal 
ௌ೟೓
௚೘ and flicker 
ௌ೑
௙  noises: 
𝑆௡(𝑓) =
ௌ೟೓
௚೘ +
ௌ೑
௙ =
଼௞்
ଷ௚೘ +
஺
஼೚ೣௐ௅௙ = 𝐾ᇱ +
௄ᇲᇲ
௙ 

where 𝑘 = 1,38. 10ିଶଷ𝐽/𝐾  - Boltzmann constant, 𝑇  - 
absolute temperature, 𝐴 is a flicker noise coefficient that 
depends on the CMOS process and its value is about 
10ିଶହ𝑉ଶ𝐹  (according to [14]), 𝑊  and 𝐿  are channel 
parameters of MOS transistors, 𝐶௢௫ - oxide capacitance per 
unit area. The total output noise voltage spectral density 
taking into account the Gm-C filter topology can be 
calculated through the following formula: 
𝑆௡௧௢௧௔௟(𝑓) = 𝑣̅௡
ଶ = ∑
𝑆௡೔(𝑓)|𝐻௜(𝑗2𝜋𝑓)|ଶ
௞
௜ୀଵ
 ,  
(2) 
where 𝐻௜  is the noise transfer function from this noise 
source to the filter output. The total noise power of noise 
spectrum is the integral over the frequency band: 
 
 
𝑃௡௢௨௧ = ∫
𝑆௡௧௢௧௔௟
ஶ
଴
(𝑓)𝑑𝑓 .  
(3) 
To demonstrate the noise modeling in Gm-C filters, the 
signal graph flow theory [15] is used. Some scientific works 
discuss the utilization of signal flow graph for RC and Gm-
C filters design [16] [17], but here, it is applied in the 
context of noise power formulation, that is a new approach. 
The transfer function of low pass second order biquad Gm-
C filter is used [18]: 
𝑇(𝑠) =
௎೚ೠ೟
௎೔೙ =
௔೚
௦మା௕భ௦ା௕బ =
ఠ೚మ
௦మା ೂ
ഘ೚௦ାఠ೚మ .  
(4) 
The filter synthesis is performed after several 
transformations of (4) and drawing the corresponding signal 
flow graph.  
Firstly, the transfer function (4) is presented in the form 
𝑈௢௨௧(𝑠ଶ + 𝑏ଵ𝑠 + 𝑏଴) − 𝑎௢𝑈௜௡ = 0 and obtained expression 
is multiplied to the variable 
ଵ
ୱమ. The received formula  
𝑈௢௨௧ =
௔బ
௦మ 𝑈௜௡ −
௕భ
௦ 𝑈௢௨௧ −
௕బ
௦మ 𝑈௢௨௧  
 
(5) 
+ 
- 
𝑔௠ 
𝑈௜௡ 
𝑈௡ 
𝑆௡(𝑓) 
Noiseless transconductor 
𝑈௢௨௧ 
Use the transfer 
function of low 
pass second 
order Gm-C 
filter  
Apply the 
signal flow 
graph theory 
for filter 
synthesis with 
noise sources  
Derive the total 
noise power 
function in the 
case of CMOS 
transconductor 
Prepare data set 
through 
theoretically 
calculations 
Normalize 
data  
Create a 
predictive 
model 
Evaluate 
algorithms 
performance  
Train data, 
machine 
learning  
Analyze 
the 
results  
Denorma-
lize data  
2
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

is a base for signal graph construction (Figure 4a and b). 
Further, equivalent transformation of the flow graph 
from Figure 4 is presented on Figure 5, where 𝑎௢ = 𝑏௢ =
𝜔௢
ଶ and 𝑏ଵ =
ொ
ఠ೚ (taking into account (4)).  
 
 
a) 
 
b) 
Figure 4.  Signal Flow Graph of second order buquad filter: a) direct 
representation of (5); b) equivalent transformation 
 
Figure 5.  Equivalently transformed signal graph 
The circuit implementation of this graph could be 
realized in different ways. One approach is shown on Figure 
6, which includes two lossy integrators and a current 
injection source. Such topology for first time is reported in 
[19]. The method of current injection node is chosen 
because of its design flexibility and possibility for 
construction filters with different complexity. The first lossy 
integrator consists of 𝑔௠మ, 𝑔௠ఱ, 𝑔௠ల, 𝐶ଵ and characterizes 
with the transfer function 
𝐻ଵ(𝑠) =
೒೘మ
಴భ
௦ା
೒೘మ
಴భ
೒೘ఱ
೒೘ల
=
௚೘మ௚೘ల
௦஼భ௚೘లା௚೘మ௚೘ఱ 
 
(6) 
and noise voltage spectral density 
𝑆௢௨௧ଵ(𝑓) =
௚೘మ
మ
ௌ೙మ(௙)ା௚೘ఱ
మ
ௌ೙ఱ(௙)ା௚೘ల
మ
ௌ೙ల(௙)
(ଶగ௙஼భ)మ௚೘ల
మ
ା௚೘మ
మ
௚೘ఱ
మ
.   
(7) 
The second lossy integrator is implemented with 𝑔௠య, 𝑔௠ర, 
𝐶ଶ and has the transfer function 
𝐻ଶ(𝑠) =
೒೘య
಴మ
௦ା
೒೘య
಴మ
೒೘ర
೒೘య
=
௚೘య
௦஼మା௚೘ర  
 
 
(8) 
and noise spectral density  
𝑆௢௨௧ଶ(𝑓) =
௚೘య
మ
ௌ೙య(௙)ା௚೘ర
మ
ௌ೙ర(௙)
௚೘ర
మ
ା(ଶగ௙஼మ)మ
 [20].  
 
(9) 
The injected current source is realized through single 
OTA with transconductance 𝑔௠భ, which transfer function is 
 
 
𝐻ଷ(𝑠) =
௚೘భ௚೘య௚೘ఱ
஼భ஼మ௚೘ల   
 
(10) 
and noise spectral density 
𝑆௢௨௧ଷ(𝑓) =
௚೘భ
మ
ௌ೙భ(௙)ା௚೘య
మ
ௌ೙య(௙)ା௚೘ఱ
మ
ௌ೙ఱ(௙)ା௚೘ల
మ
ௌ೙ల(௙)
(ଶగ௙஼భ)మ(ଶగ௙஼మ)మ௚೘ల
మ
.  (11) 
The total output spectral density is calculated through 
equation (2): 
𝑆௡௧௢௧௔௟(𝑓) = 𝑆௢௨௧ଵ(𝑓) + 𝑆௢௨௧ଶ(𝑓) + 𝑆௢௨௧ଷ(𝑓). 
(12) 
If the suggestion is that 𝑆௡భ(𝑓) = 𝑆௡మ(𝑓) = 𝑆௡య(𝑓) =
𝑆௡ర(𝑓) = 𝑆௡ఱ(𝑓) = 𝑆௡ల(𝑓) = 𝑆௡(𝑓) , 𝑔௠భ = 𝑔௠మ = 𝑔௠య =
𝑔௠ర = 𝑔௠ఱ = 𝑔௠ల = 𝑔௠  and 𝐶ଵ = 𝐶ଶ = 𝐶 , then the total 
output noise power is 
𝑃௡௢௨௧ = ∫
𝑆௡௧௢௧௔௟
ஶ
଴
(𝑓) = ∫
𝑆௡(𝑓)(
ଷ௚೘
మ
(ଶగ௙஼)మ௚೘
మ ା௚೘
ర
ஶ
଴
+
ଶ௚೘
మ
(ଶగ௙ )మା௚೘
మ +
ସ
(ଶగ௙஼)ర) ≈ ∫
௄భ
௙మ +
௄మ
௙య
ஶ
଴
, 
 
(13) 
where 𝐾ଵ ÷ 𝐾ଶ are constant values.  
After simplification and integration the formula (13), for 
the total output noise power is received ( 𝐾ଵ
ᇱ  and 𝐾ଶ
ᇱ  are 
constants): 
 
 
𝑃௡௢௨௧ = −(
௄భᇲ
௙ +
௄మᇲ
ଶ௙మ). 
 
(14) 
The data about the transconductor cell is taken from [18] 
where for simulation is chosen 0.5𝜇𝑚 𝐶𝑀𝑂𝑆 technology, 
𝑊 𝐿
ൗ = 10, 𝜇௡𝐶௢௫ 2
ൗ = 5,78. 10ିହ𝐴/𝑉ଶ, 𝑔௠ = 8,5. 10ିସ𝑆. 
 
 
Figure 6.  Gm-C filter with noise sources 
Graphics of thermal and flicker noise power are 
presented on Figure 7. It is constructed according to 
obtained data of the mathematical model for noise power in 
- 
+ 
𝑔௠మ 
𝑈௜௡ 
- 
+ 
𝑔௠ర 
𝑈௢௨௧ 
𝐶ଶ 
+ 
- 
𝑔௠ఱ 
𝑆௡మ(𝑓) 
𝑆௡ర(𝑓) 
𝑆௡ఱ(𝑓) 
+ 
- 
𝑔௠య 
𝑆௡య(𝑓) 
+ 
- 
𝑔௠భ 
𝑆௡భ(𝑓) 
𝐶ଵ 
𝑆௡ల(𝑓) 
- 
+ 
𝑔௠ల 
First lossy integrator 
Second lossy  
integrator 
Injected current source 
𝑈௜௡ 
𝑈௢௨௧ 
𝑏௢ 
𝑏ଵ 
1 
1 
𝑎௢ 
1
𝑠 
1
𝑠 
 
𝑈௜௡ 
𝑈௢௨௧ 
𝑎௢ 
𝑏௢ 
𝑏ଵ 
−1 
−1 
1 
1
𝑠 
1
𝑠 
𝑈௜௡ 
𝑈௢௨௧ 
𝑎௢ 
𝑏௢ 
𝑏ଵ 
−1 
−1 
1 
1
𝑠 
1
𝑠 
3
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

Gm-C filter. It can be seen that the flicker noise component 
appears at low frequency and it is much smaller
the thermal one (xE-17). 
 
Figure 7.  Thermal and flicker noise power in Gm
IV. 
MACHINE LEARNING AND PREDICTIVE 
In this section, the development of a predictive model 
related to predicting the noise power in the Gm
presented. It is based on data derived theoretically from Eq. 
(7) and on application of supervised 
algorithms: ANN, DT, RF, GBT, SVM [
The research method is demonstrated in details for ANN 
algorithm, but the same method is applied to the other 
machine learning algorithms. The performance of the 
utilized machine learning algorithms is compared and 
discussed. 
Before data training in RapidMiner Studio 
9.4.001) environment [24], the data is normalized in the 
interval [0, 1], according to the standard min
normalization: 𝑥 =
௫ି௫೘೔೙
௫೘ೌೣି௫೘೔೙.  
Deep learning is realized through a multi
propagation neural network for which training is u
stochastic gradient descent. 
 
Figure 8.  The constructed neural network
The artificial neural network consists of two inputs 
and 𝑥ଶ  (thermal and flicker noise power), output 
(predicted noise power) and two hidden layers with five 
neurons in each layer (Figure 8). The neurons from the 
 
𝑥ଵ 
𝑥ଶ 
bias 
bias 
bias
1 
2 
3 
4 
5 
Input 
layer 
First hidden 
layer 
Second 
hidden
seen that the flicker noise component 
and it is much smaller (xE-25) that 
 
Thermal and flicker noise power in Gm-C filter 
REDICTIVE MODELING  
development of a predictive model 
related to predicting the noise power in the Gm-C filter is 
presented. It is based on data derived theoretically from Eq. 
) and on application of supervised machine learning 
[21]-[23].  
The research method is demonstrated in details for ANN 
algorithm, but the same method is applied to the other 
The performance of the 
machine learning algorithms is compared and 
RapidMiner Studio (version 
is normalized in the 
to the standard min-max 
Deep learning is realized through a multi-layer back-
network for which training is used 
 
The constructed neural network 
The artificial neural network consists of two inputs 𝑥ଵ 
(thermal and flicker noise power), output 𝑦 
(predicted noise power) and two hidden layers with five 
each layer (Figure 8). The neurons from the 
hidden layers are activated through ReLU (Rectified Linear 
Unit) function: 𝑅𝑒𝐿𝑈(𝑥) = ቄ
Normalized and predicted data sets for noise power are 
presented on Figure 9. 
Figure 9.  Deep learning and predicted 
The deviation of predicted values
the theoretically calculated 
prediction chart on Figure 10
and y-axis presents predicted values
 
Figure 10.  Deep learning 
It can be said that the model accuracy is high
proved with calculation of very low errors: 
 
Root Mean Square Error
difference between N actual
e. g., 𝑅𝑀𝑆𝐸 = ට∑
(௬ො೔ି
ಿ
೔సభ
ே
 
Absolute Error (AE) is the average absolute deviation 
between predicted and actual value 
1, 2, … , 𝑁): 0.005 ± 0.002
 
Relative Error Lenient 
deviation between predicted and actual value divided 
by the maximum of predicted and actual value
|௬ො೔ି௬೔|
ே
ଵ
୫ୟ୶ (௬ො೔,௬೔) , 𝑖 = 1, 2
 
Squared 
Error 
(SE) 
error:0.000. 
To construct the curves of thermal noise power taking 
into account theoretically calculated and predicted values, 
the predictions are denormalized: 
𝑥௠௜௡) + 𝑥௠௜௡ (Figure 11). 
bias 
6 
7 
8 
9 
10 
y 
Second 
hidden layer 
Output 
layer 
hidden layers are activated through ReLU (Rectified Linear 
ቄ0, 𝑥 ≤ 0
𝑥, 𝑥 > 0
  = 𝑚𝑎𝑥 {0, 𝑥}.  
Normalized and predicted data sets for noise power are 
 
Deep learning and predicted output 
The deviation of predicted values yො in comparison with 
the theoretically calculated y  can be seen through the 
10 (the x-axis shows true values 
axis presents predicted values).  
 
Deep learning – prediction chart 
It can be said that the model accuracy is high, which is 
very low errors:  
Root Mean Square Error (RMSE) measures the 
actual 𝑦 and predicted 𝑦ො values, 
ො ି௬೔)మ
): 0.008 ± 0.005;  
is the average absolute deviation 
between predicted and actual value ∆𝑦 =
|௬ො೔ି௬೔|
ே
, 𝑖 =
002;  
 (REL) is the average absolute 
deviation between predicted and actual value divided 
by the maximum of predicted and actual value 𝑅𝐸𝐿 =
2, … , 𝑁): 11.85% ± 4.51; 
 
is 
the 
averaged 
squared 
To construct the curves of thermal noise power taking 
into account theoretically calculated and predicted values, 
the predictions are denormalized: 𝑥ௗ௘௡௢௥௠ = 𝑥௡௢௥௠(𝑥௠௔௫ −
4
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

The prediction charts of the rest machine leaning 
algorithms are presented on Figure 12.  
Several 
constructed 
trees 
through 
tree-based 
classification algorithms are shown on Figure 13 (the 
depicted values are normalized). The presented information 
through these trees could support the decision making 
process of designers or analysts. Following the path of the 
tree nodes, it is possible the decision explicitly to be 
explained and also the exact decision to be pointed out, 
concerning the values in the leafs. For example, if the tree 
on Figure 13b is examined and a path is followed from the 
root node to the leaf, it can be said that  
𝐼𝐹 0.411 < 𝑖𝑛𝑝𝑢𝑡1 ≤ 0.748 𝐴𝑁𝐷 𝑖𝑛𝑝𝑢𝑡2 >
0.045 𝑇𝐻𝐸𝑁 𝑡ℎ𝑒 𝑝𝑟𝑒𝑑𝑖𝑐𝑡𝑒𝑑 𝑜𝑢𝑡𝑝𝑢𝑡 𝐼𝑆 0.372. 
The performance evaluation of the applied machine 
learning algorithms is shown through Table 1. The 
algorithm performance is important evidence about how the 
algorithm handles and processes the data model. The task in 
this work is to find the best predictive model, which is 
capable to solve the engineering problem related to 
prognosis of noise power in a Gm-C filter. Thus, an 
appropriate algorithm should be selected. For this purpose, 
the used algorithms are compared according to their 
accuracy (error rate), which is the most applied metrics in 
practice.  
 
 
Figure 11.  Theoretically calculated and predicted noise power 
 
 
a) 
 
b) 
 
c) 
 
d) 
Figure 12.  Prediction charts of machine learning algorithms: a) Decision 
Tree; b) Random Forest; c) Gradient Boosted Trees; d) Support Vector 
Machines 
 
a) 
 
b) 
 
c) 
Figure 13.  Constructed trees through applying: a) Decision Tree; b) 
Random Forest (one of 20 constructed trees); c) Gradient Boosted Trees 
(one of 150 constructed tress) 
 
5
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

TABLE I.  
PERFORMANCE OF MACHINE LEARNING ALGORITHMS 
 
Criterion 
Algorithm 
RMSE 
AE 
REL 
SE 
ANN 
0.008
± 0.005 
0.005
± 0.002 
11.85%
± 4.51% 
0.000 
DT 
0.007
± 0.004 
0.004
± 0.002 
6.52%
± 3.99% 
0.000 
RF 
0.036
± 0.029 
0.025
± 0.016 
32.60%
± 10.59% 
0.002
± 0.003 
GBT 
0.113
± 0.078 
0.051
± 0.033 
14.94%
± 10.76% 
0.018
± 0.018 
SVM 
61.947
± 0.997 
61.901
± 1.098 
99.80%
± 0.13% 
3838.173
± 122.279 
 
The comparison of prediction charts (Figure 10 and Figure 
12) and data about the performance of machine learning 
algorithms from Table 1 point out that the ANN and DT 
algorithms are the best solutions for predicting the noise 
power in Gm-C filters. They are characterized with high 
accuracy.  
The best performance and fastest total time (Table 2) 
shows the DT machine learning algorithm (the experiment is 
done on local computer with processor Intel(R) Core™ i7-
5500U @ 2.40GHz, RAM 8GB). The worse case is the 
algorithm SVM that cannot deal with this predictive task. Its 
performance is very poor and the accuracy is small.  
The comparison of the tree-based algorithms outlines that 
the smallest errors are introduced by DT algorithm and the 
biggest by GBT. 
TABLE II.  
PROCESSING TIME 
 
Criterion 
Algorithm 
Training time 
Scoring time 
Total time 
ANN 
3s 
109ms 
895ms 
DT 
61ms 
65ms 
251ms 
RF 
140ms 
152ms 
962ms 
GBT 
3s 
43ms 
17s 
SVM 
1s 
65ms 
4s 
V. 
CONCLUSION 
In this paper, a predictive model regarding noise power 
in Gm-C filter is proposed. It is created according to the 
designed research method. The filter synthesis with noise 
sources is performed through usage of its mathematical 
description and through applying signal flow graph theory. 
The derived equation for noise power allows data sets to be 
prepared for further statistical and machine learning 
processing. Five machine learning algorithms - ANN, DT, 
RF, GBT, and SVM are used for data training with 
predictive purpose. The performance of these algorithms is 
evaluated and they are compared according to two groups of 
criterion: accuracy and timing. The results show that the DT 
algorithm is characterized with the best performance: 
𝑅𝑀𝑆𝐸 = 0.007 ± 0.004, 𝐴𝐸 = 0.004 ± 0.002, 𝑅𝐸𝐿 =
6.52% ± 3.99%, 𝑆𝐸 = 0.000, 𝑡𝑟𝑎𝑖𝑛𝑖𝑛𝑔 𝑡𝑖𝑚𝑒 = 61𝑚𝑠,
𝑠𝑐𝑜𝑟𝑖𝑛𝑔 𝑡𝑖𝑚𝑒 = 65𝑚𝑠, 𝑡𝑜𝑡𝑎𝑙 𝑡𝑖𝑚𝑒 = 251𝑚
. 
Another 
suitable algorithm is ANN, which is capable to predict the 
noise power values with very high accuracy.  
It can be said that machine learning that is described as a 
field of artificial intelligence proposes powerful techniques 
and algorithms for electronic circuits’ analysis and design. 
Studying the circuits’ behavior through data about them 
allows a wide variety of predictive and analytical models to 
be created in support of engineers for decision making and 
problems solving. Also, machine learning gives huge 
opportunities for automation of engineering tasks decreasing 
the needed time, efforts and resources. Such approach could 
be implemented in CAD and EDA software in order to 
present a technique for design and analysis of electronic 
circuits and devices that could decide engineering problems 
with high quality and efficiency.  
Learning through big data is a method that leads to better 
understanding the functionality and topology of electronic 
circuits and particularly the analog filters. Some machine 
learning algorithms like tree-based ones not only point out 
the final solution, but also describe one or several paths for 
its achievement. The explanation of a given solution is 
valuable 
knowledge 
in 
engineering 
practice. 
Other 
algorithms for deep learning which are based on artificial 
neural networks allow flexible and accurate approach for 
resolving the complexity of the problems. It seems that some 
machine learning algorithms are suitable for performing a 
given engineering task while the others cannot deal with it.  
This work explores the capabilities of machine learning 
to predict the noise power of Gm-C filters and it is proved 
that the learning algorithm should be precisely chosen for 
obtaining the best results. Also, it is proved that a predictive 
model with high accuracy can be created to facilitate the 
performance of prognostic and analytical engineering tasks. 
The lessons learned and challenges can be summarized as 
follows: 
 
At the stage of data gathering – suitable step for data 
collection should be chosen. 
 
At data model preparation – the designer should assess 
the data value, choosing the correct data set, ignoring 
the redundant data. 
 
At pre-processing stage, suitable format for data set 
processing should be selected. 
 
At data processing stage, several machine learning 
algorithms should be applied and compared for 
receiving 
the 
required 
output. 
The 
algorithms 
parameters should be precisely defined, because it 
reflects on the accuracy at the task solving. 
 
The predictive model should be evaluated and 
improved, when the obtained results are not satisfactory. 
The future work will be focused on further exploration 
the capability of machine learning algorithms to facilitate 
engineering 
tasks, 
proposing 
possibilities 
for 
better 
understanding the behavior of electronic circuits. The 
development of predictive and analytical models will be 
performed, exploring their valuable meaning in support of 
Gm-C filters design – how the filter building blocks and 
elements to be chosen and arranged to form operable 
topology, as well as in assistance of filter analysis – what 
will be the filter and its building blocks reaction at different 
input stimuli.  
 
 
 
6
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

REFERENCES 
[1] M. A. Bhuiyan, M. B. Omar, M. M. Reaz, K. N. Minhad, and 
F. H. Hashim, “A review on CMOS Gm-C band pass filters 
in RF application,” Journal of Theoretical and Applied 
Information Technology, 61(1), pp. 17-23, 2014.  
[2] B. Saidulu, A. Manoharan, and K. Sundaram, “Low Noise Low 
Power 
CMOS 
Telescopic-OTA 
for 
Bio-Medical 
Applications,” 
Computers, 
5(4), 
2016, 
https://doi.org/10.3390/computers5040025. 
[3] S. K. Arfin, S. Mandal, and R. Sarpeshkar, “Dynamic-Range 
Analysis and Maximization of Micropower Gm–C Bandpass 
Filters by Adaptive Biasing”, IEEE International Symposium 
on Circuits and Systems, pp. 2954-2957, 2009.  
[4] M. Akbari and O. Hashemipour, “Design and analysis of folded 
cascode OTAs using Gm/Id methodology based on flicker 
noise 
reduction,” 
Analog 
Integrated 
Circuits 
Signal 
Processing, 83, pp. 343–352, 2015. 
[5] S. Koziel, S. Szczepanski and R. Schaumann, “A general 
approach to continuous-time Gm-C filters,” International 
Journal of Ciruit Theory and Applications, pp. 361-383, 
2003. 
[6] S. Koziel, R. Schaumann and Haiqiao Xiao, “Analysis and 
optimization of noise in continuous-time OTA-C filters,” 
IEEE Transactions on Circuits and Systems I, 52(6), pp. 
1086–1094, 2005, doi:10.1109/TCSI.2005.849142. 
[7] E. Rosenbaum, “Machine Learning: An enabling technology 
for electronics modeling and design optimization,” 2017. 
[Online]. 
Available 
from: 
http://publish.illinois.edu/advancedelectronics/files/2017/02/
DesignCon_rosenbaum_keynote-Feb-1-2017-web-.pdf 
[8] T. L. Hemminger, “A Neural Network Approach to Transistor 
Circuit Design,” Global Journal of Computer Science and 
Technology, 16(1), 2016, Online ISSN: 0975-4172, Print 
ISSN: 0975-4350. 
[9] L. Rokach, A. Feldman, M. Kalech and G. Provan, “Machine-
learning-based circuit synthesis,” IEEE 27th Convention of 
Electrical and Electronics Engineers in Israel, Eilat, pp. 1-5, 
2012, doi: 10.1109/EEEI.2012.6377134. 
[10] Machine Learning in VLSI Computer-Aided Design, Eds. 
Ibrahim (Abe) M. Elfadel, Duane S. Boning, Xin Li, 
Springer International Publishing, 2019, doi: 10.1007/978-3-
030-04666-8. 
[11] T. Deliyannis, Y. Sun, and J. K. Fidler, “Two Integrator Loop 
OTA-C Filters,” Continuous-Time Active Filter Design, 
Boca 
Raton: 
CRC 
Press 
LLC, 
1998, 
https://doi.org/10.1201/9781439821879. 
[12] T. Deliyannis, Y. Sun, and J. K. Fidler, “Single Operational 
Transconductance Amplifier (OTA) Filters”, Continuous-
Time Active Filter Design Boca Raton: CRC Press LLC, 
1998, https://doi.org/10.1201/9781439821879. 
[13] A. Brambilla, G. Espinosa, F. Montecchi and E. Sanchez-
Sinecio, “Noise optimization in operational transconductance 
amplifier filters,” IEEE International Symposium on Circuits 
and Systems, Portland, OR, vol.1, pp. 118-121, 1989, doi: 
10.1109/ISCAS.1989.100305. 
[14] Telehealth and Mobile Health, Eds Halit Eren and John G. 
Webster, p. 627, CRC Press, 2015, ISBN-13: 978-
1482236613. 
[15] G. S. Moschytz, “Analog Circuit Theory and Filter Design in 
the Digital World,” chapter “An Introduction to Signal-Flow 
Graph Theory,” Springer Nature Switzerland AG, 2019, pp. 
85-100, doi: 10.1007/978-3-030-00096-7. 
[16] P.-M. Lin, “Signal Flow Graphs in Filter Analysis and 
Synthesis,” Circuit Analysis and Feedback Amplifier 
Theory, 
W.-K. 
Chen 
(Ed.), 
2006, 
https://doi.org/10.1201/9781315220567. 
[17] L. A. Sánchez-Gaspariano et al., “CMOS Analog Filter 
Design for Very High Frequency Applications,” Electronics 
2020, 9, 362, doi:10.3390/electronics9020362. 
[18] K. Kaewdanga and W. Surakampontorn, “A balanced output 
CMOS OTA with wide linear current tunable range,” 
International Journal of Electronics and Communications 
(AEÜ) 65, pp. 728–733, 2011.  
[19] G. Espinosa, F. Montecchi, E. Sanchez-Sinencio and F. 
Maloberti, “Noise performances of OTA-C filters,” IEEE 
International Symposium on Circuits and Systems 3, Espoo, 
Finland, 
pp. 
2173-2176, 
1988, 
doi: 
10.1109/ISCAS.1988.15374. 
[20] E. Sanchez-Sinencio, R. L. Geiger and H. Nevarez-Lozano, 
“Generation of continuous-time two integrator loop OTA 
filter structures,” IEEE Transactions on Circuits and 
Systems, 35(8), pp. 936-946, 1988, doi: 10.1109/31.1840. 
[21] M. A. Stošović and V. Litovski, “Applications of Artificial 
Neural Networks in Electronics,” Electronics, 21(2), pp. 87-
94, 2017. 
[22] T. Wu, H. Zhao, F. Liu, J. Guo, and H. Wang, “Machine 
Learning Approach for Device-Circuit Co-Optimization of 
Stochastic-Memristive-Device-Based Boltzmann Machine,” 
2019. 
[Online]. 
Available 
from: 
https://arxiv.org/ftp/arxiv/papers/1905/1905.04431.pdf. 
[23] M. Kubat, “An Introduction to Machine Learning,” Springer 
International Publishing AG, 2017, doi: 10.1007/978-3-319-
63913-0. 
[24] RapidMiner, RapidMiner Studio Manual, 2014. [Online]. 
Available 
from: 
https://docs.rapidminer.com/downloads/ 
RapidMiner-v6-user-manual.pdf.
 
7
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-823-5
CENICS 2020 : The Thirteenth International Conference on Advances in Circuits, Electronics and Micro-electronics

