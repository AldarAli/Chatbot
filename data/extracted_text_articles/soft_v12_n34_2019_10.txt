Validation of a Failure Cause Searching and Solution Finding Algorithm  
for Failures in Production 
Based on Complaints of a Company in the Field of Stamping and Metal Forming
Marius Heinrichsmeyer 
University of Wuppertal 
Product Safety and Quality 
Wuppertal, Germany 
E-mail: heinrichsmeyer@uni-wuppertal.de 
Hendrik Dransfeld 
University of Wuppertal 
Product Safety and Quality 
Wuppertal, Germany 
E-mail: hendrik.dransfeld@gmx.de 
 
Nadine Schlueter 
University of Wuppertal 
Product Safety and Quality 
Wuppertal, Germany 
E-mail: schluete@uni-wuppertal.de 
Fynn Koesling 
University of Wuppertal 
Product Safety and Quality 
Wuppertal, Germany 
E-mail: fynn.koesling-hk@uni-wuppertal.de 
 
Abstract—The 
increasing 
complexity 
of 
new 
products, 
production systems as well as customer requirements, bring out 
huge challenges for companies. Especially regarding the 
complaint management process, it is necessary to ask how these 
challenges can still be managed and controlled by individual 
employees. Current approaches and software systems help to 
minimize the effect of these challenges but they also reach their 
limits because of the complexity. For this reason, the research 
group “Product Safety and Quality” has developed an 
algorithm to search failure cause and to find a solution to 
support the complaint management process in identifying 
failures in the production system and eliminating them. This 
algorithm was initially based on a conceptual model and was 
subsequently implemented based on VBA in Excel. The result 
was the first prototype of this algorithm. To evaluate the 
algorithm in terms of possible weak points and potentials for 
improvement, the prototype was validated in the industry in the 
field of stamping and metal forming. The results of this 
evaluation are reported in this paper and lessons learned are 
summarized in the conclusion. 
Keywords-Complexity; 
Systems; 
Failure; 
Algorithm; 
Complaint; Solution. 
I. 
 INTRODUCTION 
Due to the Industry 4.0 changes, companies in Germany 
face ongoing and new challenges: The increasing complexity 
of products and processes, huge investments, and the lack of 
skilled workers are just a few that can be listed here [1], [2]. 
Companies are also confronted with a variety of new but also 
very individual requirements, which have to be fulfilled in 
order to maintain competitiveness in the market [2]. In 
addition, there is the trend that customers want more and more 
individual, newer and also fascinating products. 
However, this trend is critical for companies when 
customers face failures and complain about the product [3], 
[4]. In this case, it is important to react very quickly, to 
recognize the cause of the unfulfilled requirement, eliminate 
it and thus to satisfy the customer again. But do companies 
even have the opportunity or the skill to react that quickly?  
With the focus on an increasing flow of information in 
recent years, it becomes apparent that companies are usually 
unable to handle this amount of information with conventional 
approaches. This can also be observed in complaint 
management, where the use of methods such as the 8D-Report 
and also a catalog of software systems such as RM Babtec, 
CWA Smart-Process or CASQ-it RUF help to reduce the 
processing effort and the use of important resources (e.g. time, 
personnel and costs). The increasing complexity and the 
increasing relationships between the system elements, on the 
other hand, are not taken into account [5]. Moreover, many 
companies have no suitable complaint management process, 
so that the valuable potential of complaints, e.g., the 
improvement of production or product system and thus the 
increase of quality, remains completely unused. Due to this 
restriction, the worst-case scenario is that the complaint 
management process is increasingly seen as a burden and not 
as an opportunity [6], [7]. As a result, further potentials of 
complaints, 
including 
a 
customer-oriented 
product 
development or increased customer satisfaction, will be 
missed. 
To counteract this problem, the research group Product 
Safety and Quality Engineering is currently developing a 
targeted failure cause searching and solution finding 
algorithm for production, based on the fundamental research 
project "FusLa" (Failure cause searching and solution finding 
algorithm – Funding indicator: SCHL 2225 / 1-1). With this 
algorithm, it will be possible to make the potential of available 
complaint information more useful. The FusLa also has to 
deal with the complexity of production systems, by choosing 
a suitable model approach for socio-technical systems. This 
should not only promote the effectiveness of the complaint 
processing but also increase the attractiveness for the 
employees. This is necessary to quickly identify and eliminate 
failure causes in production in order to reduce or even prevent 
defective products or wastage. Currently, only the prototype 
310
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

of the FusLa has been programmed within the project. 
Nevertheless, the validation is absolutely necessary in order to 
examine the conceptual model with regard to its applicability. 
For this reason, a company, which has its expertise in the 
field of stamping and metal forming, was engaged for the 
validation. To protect the company's anonymity and internal 
know-how, all company-related information has been 
anonymized. Furthermore, only the results of the validation 
(running through all four phases) and the question of whether 
FusLa can currently be used in industry are presented in this 
paper. [1], [8], [9] prove a scientific gap regarding FusLa after 
analyzing state of the art and research projects in the field of 
complaint information probing, prioritization of complaints, 
failure cause localization in the production or solution finding 
for failure causes. In order to ensure the transparency of the 
validation results, Section II gives an overview of current 
approaches in science and industry. Section III introduces the 
conceptual model that led to the development of the FusLa 
prototype. After that, Section IV presents the validation in the 
stamping and metal forming company and the collected 
results. Finally, Section V presents conclusions based on the 
results and an outlook on future research projects.  
II. 
STATE OF THE ART 
Some approaches have already prevailed in science and 
industry. The following Section presents approaches, which 
are associated with information probing, prioritization, 
localization of failure cause or solution finding. These are 
briefly discussed below with regard to their applicability in 
relation to the present problem: 
A. Science 
The presented approaches primarily consider the 
information probing: 
The IGF project [10] initially classifies information in a 
complaint into five categories. Subsequently, the information 
is analyzed and a first failure image is generated. However, 
this approach relies on the manual exploration of complaint 
information. The approach presented in [11] uses text mining 
algorithms to automatically assess the quality of 8D reports 
using some metrics such as readability. Although the 
information in the complaint is probed for text analysis, the 
focus is on the assessment of the quality and not on the search 
for a root cause or finding a solution.  
The DFG project in [12] initially collects the complaint 
information uniformly before analyzing and using it. 
Although the information is eventually used for product 
development, it does not focus on returning the information to 
the production.  
In the project in [13], a sensor was developed to probe 
complaint information from online forums. The basis for this 
was formed by various products and services, but use for the 
purpose of failure cause localization and solution finding in 
production was not considered. 
The last project associated with information probing, 
which should be also mentioned, is the project „Learning 
Failure Management (LeaF)“ [14]. In this project, failure data 
is to be recorded and structured uniformly in order to improve 
failure management by means of data mining. However, this 
project is still in its initial phase and therefore cannot be 
evaluated. 
The first of the two publications presented below 
considers the prioritization of complaints and the second one, 
the failure cause localization. 
In [15] a company-specific approach is described, which 
prioritizes the complaint in a multi-dimensional way. In the 
evaluation of failure image, different evaluation dimensions 
are compared with different failure images and a priority value 
is determined. However, this approach must be done 
manually. 
The project „DSy“ [16] semi-automatically determines the 
associated failure cause based on the characteristics of a 
modeled subsystem. However, it only considers embedded 
systems. 
Finally, those approaches have presented that deal with the 
solution finding. The last contribution of this Section includes 
all of the presented topics. 
The MTQM method proposed in [17] aims to optimize 
assembly processes based on the previous failure, reliability 
and cost impact analyzes. However, only assembly processes 
and prospective actions are considered and no optimization 
potentials due to actual causes of failure. 
A particularly important tool for the analysis of failure-
stopping processes is developed in [18]. The quality-related 
key figures which are developed, among other things, are used 
for targeting and together with further information to derive 
recommendations for action. 
For complaint analysis, the approach in [19] uses a 
decision tree, data mining, and the Six Sigma methodology in 
the framework of DMAIC to propose an approach and tools 
at each stage. The approach was tested in the gastronomy 
sector with a positive result. However, it is uncertain how the 
approach could be customized to complaints or other 
industries. 
B. Industry 
Next to the scientific approaches listed under Section II.A, 
there are also practice-oriented approaches that deal with 
complaint management. One of these is the 8D report, which 
is well known but has already been discussed extensively in 
[1]. The considered software systems usually require manual 
operation and are based on the knowledge of individuals. For 
example, it has been shown, because of the extensivity of the 
information that can be probed by software systems, most of 
the information must be manually entered into the software. 
Even accessing existing databases does not completely 
solve this problem because the systems are too complex. 
Similarly, the quantitative, multi-dimensional prioritization of 
complaints by a software system is not possible. Also, the 
localization of the failure cause must be done manually as well 
as the elimination of these. 
The approach in [20] uses a smartphone app to allow 
customers to submit complaints, display failure location, ID, 
date, time and the complaint reason via a Google Maps 
interface. Nevertheless, the information collected is too 
superficial to determine the cause of the failure and 
furthermore the focus is not on products. 
311
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The method presented in [21] is intended to detect quality 
problems by means of machine learning at an early stage and 
thus to prevent complaints. Although the approach has great 
potential, it requires a large number of complaints and focuses 
on early detection while not describing the solution finding 
process. 
For readout, structuring, and evaluating of complaint 
documents, [22] uses text and data mining. Accordingly, the 
documents are examined for similar content to derive patterns 
of customer complaints. Nevertheless, the approach does not 
consider the determination of critical organizational areas, 
failure causes, and solutions. 
Finally, the approach according to [23] should be 
mentioned, in which text mining is also used to analyze 
customer complaints. However, the focus here is on 
identifying customer requirements in order to use them for 
product development. The Outcome-Driven Innovation (ODI) 
method is used to collect this data and then forward it to the 
appropriate experts. As before, the large amount of complaints 
needed is an obstacle and also the focus is not on the 
localization of failure cause and solution finding.  
It has been shown that despite many approaches, which are 
dealing with complaints and preparation of information 
through different methods such as Text Mining, there is so far 
no approach that considers failure cause localization and 
solution finding. Furthermore, there are no interfaces between 
text mining and company-specific information systems in 
order to make the existing knowledge available for the system. 
III. 
FAILURE CAUSE SEARCHING AND SOLUTION FINDING 
ALGORITHM (FUSLA) 
The prototype of the failure cause searching and solution 
finding algorithm was programmed based on a conceptual 
model. The conceptual model, which is summarized in Figure 
1, is based on extensive analysis of literature, the evaluation 
of 13 different software systems that are currently on the 
market, and the adaptation of available approaches of artificial 
intelligence to deal with large amounts of data. In order to 
develop the model, requirements based on the advantages and 
disadvantages of the respective research projects and software 
systems were derived. The baseline is a conceptual model, 
which considers the phases of production as well as usage. It 
divides the algorithm into a total of four main phases [1]. The 
production phase includes all processes that are needed to 
produce the corresponding product. The usage phase, on the 
other hand, focuses on the application of the product direct by 
the customer. The four main phases are "information 
probing", "prioritization", "failure cause localization", and 
"solution finding". In the first phase (information probing), 
relevant complaint information is probed from the arising 
complaint text during the usage phase. Based on that, 
quantitative values are calculated in the second phase 
(prioritization) to define a mostly objectively priority of the 
complaint. The priority is calculated using both the complaint 
information probed from the first phase and information from 
the information systems of the organization. With the 
knowledge of the most relevant complaint, the third phase 
(failure cause localization) is initiated. It serves to localize the 
existing failure cause within a production system during the 
production phase. In the final phase (solution finding), the 
localized failure cause is finally eliminated [1]. In order to 
make the individual phases and their processes more 
transparent, these are explained in more detail in the following 
Sections. This paper deliberately talks about information and 
not data. Unlike many research projects, the present paper 
defines information (e.g., a specific temperature specification) 
as linked data (e.g., numerous measured values of 
temperature). So it is talked about complaint information and 
not complaint data. 
 
 
Figure 1.  Conceptual model of the Failure Cause Searching and Solution 
Finding Algorithm  
A. Information Probing 
Information probing is the starting point for effective and 
goal-oriented failure cause searching and solution finding. In 
this phase, the complaint text will be analyzed for relevant 
complaint information. Current approaches, as shown in [1],  
using manual evaluation of complaint texts, which increases 
the need for resources in comparison with an automated 
evaluation. However, the conceptual model of FusLa provides 
a different approach for the information probing. Automated 
processes pursue the goal of collecting relevant complaint 
information more effectively. But how can such an automated 
procedure be realized? The answer is hidden in the connection 
between existing information systems of the company and the 
analysis of the complaint text. Unlike the fact that an 
employee, who is responsible for the handling of complaints, 
is not able to permanently monitor all information systems of 
the company, the FusLa has exactly such an interface. This 
means that the FusLa decomposes the complaint text into 
individual text modules, compares those with the existing 
information systems in the company (e.g., customer or order 
system) and collects all necessary information (e.g., customer 
or order numbers) for further processing. In order to achieve 
this comparison, however, a structure was developed 
according to differentiate relevant and less relevant complaint 
information. In addition, rules to specify the procedure for the 
FusLa have been defined. The structure includes a total of six 
different types of information, including, information about 
the complaining organization or information about the order 
of the complained product. These types are further divided 
into individual information modules, such as the name or the 
identification number of the complaining organization. 
312
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

 
 
Figure 2.  Structure of the Information Probing, including all types of information as well as the information modules
This means that information types, such as "contact 
information", act as a group and the information modules 
only reflect the respectively relevant information, for 
example, the "name of the contact person". The 
corresponding information types and information modules 
were derived on the basis of the results of the literature 
analysis and software evaluation [1]. 
In addition to the structure, some rules were assigned to 
the algorithm. These rules are defined as for/if loops and 
determine the decisions and boundaries of the algorithm. A 
total of six different loops were defined, which are used, for 
example, to recognize the unfulfilled requirement or to 
recognize customer information. Each of these loops makes 
it possible to filter different information modules from the 
complaint text or the existing information systems, in order 
to finally establish a solid basis for the further evaluation of 
the complaint.  
To increase the comprehensibility of the loops, the first 
loop for “identifying the order number” is explained as an 
example. The presentation of other loops is discussed in 
detail in [24] and is therefore not part of this paper. As 
already mentioned, the algorithm can probe the relevant 
complaint information by comparing the information 
contained in the complaint text with the information saved 
in the information systems of the company. In the first loop, 
a technique of Natural Language Processing (NLP), the so-
called Tokenization, is used initially. Above all, a 
distinction between Values and Strings is made here 
possible. These tokens are then compared with the order 
numbers in the organization’s order system. If the algorithm 
identifies a match, it extracts the corresponding order 
number and identifies related information, including the 
customer or the delivered product and automatically filters 
it. If the probing is unsuccessful, the algorithm will start the 
next loop. 
For reference, the defined information types and 
information modules are summarized in Figure 2. 
 
B. Prioritization 
The prioritization presents the second phase of the 
FusLa. This phase is absolutely necessary in order to 
recognize the complaints, which are most critical for a 
company, at an early stage. 
Current approaches from both science and industry 
make use of subjective prioritization methods or 
categorizations/rank orders [1]. Since one-dimensional 
prioritization, which is based on subjective impressions 
may lead to an incorrect complaint priority, it is 
inappropriate to use such methods. To avoid that, the 
conceptual model of the FusLa provides a multi-
dimensional prioritization, which is mostly objective and 
thus less prone to misjudgment. 
In order to be able to realize this form of prioritization, 
a total of nine different dimensions is derived, including 
“Classification of the Customer (D1)” or the “Failure 
History (D8)”. All of these dimensions include a dimension 
value and a weighting value. Since a detailed explanation of 
the dimensions exceeds the scope of this paper, these 
dimensions are briefly summarized in Table I. However, in 
order not to reduce the transparency by the short 
presentation of the individual dimensions, a detailed 
presentation of the dimensions is set out in [25], including 
the individual values and weightings which are ultimately 
required for the calculation of the priority. 
TABLE I.  
DIMENSIONS OF PRIORITIZATION 
No. 
Dimension 
Description 
1 
Customer 
Classification 
Customers are ranked for their relevance 
to the organization. Based on this ABC 
classification, a quantitative classification 
is derived. 
2 
Date 
information 
The due date and the date of submission 
of the complaint are essential for the 
calculation of the remaining work 
required to deal with the complaint. In 
addition, the urgency also influences the 
priority. 
313
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

No. 
Dimension 
Description 
3 
Amount of 
complaint 
products 
The extent of an unfulfilled requirement, 
which is calculated by the proportion of 
products complaint in total, is recorded in 
the 3rd dimension. 
4 
Repetitions 
If the unfulfilled requirement occurs in 
several batches of one product, it can be 
count as a repetition. This parameter 
shows 
how 
often 
the 
unfulfilled 
requirement has been recorded and 
increases 
the 
priority 
on 
repeated 
occurrence. 
5 
Failure Type 
It can be distinguished between very 
different 
failures, 
for 
example, 
dimensional failure or document failure. 
Depending on the severity of the failure 
for the customer, measured by the type of 
failure, the priority will be influenced. 
6 
Failure 
Meaning 
Similar to the failure type, a distinction is 
also made between the meaning of an 
unfulfilled requirement. Based on the 
impact, for example, on the customer or 
merely the product itself, it decides the 
importance of failure and thus the priority 
of a complaint. 
7 
Product Sales 
The product sales divided by the total 
sales of an organization show the 
importance 
of 
a 
product 
for 
an 
organization. Accordingly, this ratio is 
also included in the priority. 
8 
Failure History 
The number of single failures of a product 
in terms of the total number of failures for 
all products over the entire production 
period shows the proportion of failures 
compared to all other product failures. 
The larger the share the more critical the 
complaint. 
9 
Amount of 
Costs 
Similar to the failure history, the 
proportion of the individual costs by 
complaints of a product in terms of the 
total costs of all products over the entire 
production period can be evaluated. This 
shows, which resources are spent on 
handling the complaint. 
 
Based on the presented dimensions, quantitative values 
are calculated and included in a final priority for a 
complaint. In order to be able to guarantee the 
comparability and compatibility of the individual 
dimension values, these are additionally normalized to a 
range of 1-10. A slightly wider, but also narrower interval 
can be selected. For this purpose, only the formula needs to 
be adjusted. It should be considered, however, that the 
distinction between values decreases at closer intervals. In 
this case, a range of 1-10 is sufficient. The formula (1) 
derived from [26] is used for this purpose: 

NDWij = 9 ∙ (
DWij − DWmin, ij
DWmax, ij −  DWmin, ij) + 1

DWij = Dimension value of the dimension j of the complaint i 
DWmin, ij = Minimum of the dimension values of the dimension j of the complaint i 
DWmax, ij = Maximum of the dimension values of the dimension j of the complaint 
i 
NDWij = Normalized dimension value of the dimension j of the complaint i 
 
The normalized dimension values are used in a further 
step to derive a weighting of the respective dimension. This 
step is necessary to mostly objectively assess the 
importance of the dimension to the organization itself. In 
order to do this, all dimension values of all the so far 
completed complaints are summed up to form an average 
value. This ensures that, on the one hand, all complaints that 
have been processed are included in the weighting, and on 
the other hand, the weighting automatically adapts with new 
complaints. Once the weighting of the respective 
dimensions has been determined, the priority of the actual 
complaint is calculated in the last step. Furthermore, the 
following formula is used. 

Pi= ∑
 NDWij × Gij
n
j=1,  i=1


Gij = Weighting value of the dimension j of the complaint i 
NDWij = Normalized dimension value of the dimension j of the complaint i 
 
After prioritization, the third phase of the failure cause 
searching and solution finding algorithm can be initiated 
with the most relevant complaint. What this phase looks like 
is explained in the following Section. 
C. Failure Cause Localization 
During the failure cause localization phase, the FusLa 
should identify all possible causes of failures within the 
production system. An evaluation of current approaches 
with regard to their ability to localize the cause of failures, 
it turns out that they rely on a subjective assessment by a 
single employee or team [1]. Despite the experience or 
expertise, the employee responsible for handling the 
complaint is not able to observe the enormous complexity 
of a production system, e.g. with all its components, 
processes or persons. This is not necessarily due to the 
employee, but simply to the variety of system elements and 
their interaction. Particularly in the case of changing 
production systems or newly hired employees, a subjective 
search for failure causes is nearly impossible. 
To counteract this problem, the FusLa was developed 
based on the so-called Enhanced Demand Compliant 
Design (eDeCoDe) approach by Winzer [27] and Nicklas 
[28], to the modeling socio-technical systems. It uses five 
standardized views (requirements, components, functions, 
processes, and person) to classify system elements. Using 
different matrices, including Design Structure or Domain 
Mapping Matrices, the interrelations between the individual 
system elements are recorded and displayed transparently 
with a notation of 1 (relation) and 0 (no relation). This 
principle is shown in Figure 3 as an example. 
 
 
Figure 3.  Example of a Domain Mapping Matrix 
Functions (F)
Requirements 
(R)
RF
DMM
Functions (F)
F1
F2
…
Fn
Requirements (R)
R1
R2
…
Rn
1
0
…
0
0
1
…
1
1
1
…
0
…
…
…
314
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

The merging of all matrices, in the form of a multi-
domain matrix, results in a model of the production system, 
which can be mapped in the form of a multi-domain graph 
as shown in Figure 4 as an example. 
 
 
Figure 4.  Localization example based on [1] 
Based on this model, it is now possible to evaluate the 
interrelations between the individual system elements. The 
FusLa examines which notation, whether 0 or 1, exists 
between a system element (e.g. the positioning process) and 
the unfulfilled requirement (in this case the diameter). If this 
notation 
is 
present, 
the 
algorithm 
identifies 
the 
corresponding system elements as a possible cause of the 
failure. This is extremely helpful, especially with regard to 
the available complaints. In this way, the traceability can be 
ensured comprehensibly and transparently. 
This means that it is possible to retrace the unfulfilled 
requirement from the complaint to the interrelated system 
elements, e.g., components (machines) or processes 
(turning process). Without this possibility, the failure cause 
localization is also very random and less goal-oriented. 
D. Solution Finding 
With the last phase of the FusLa, failure causes which 
are highly probable can be eliminated by appropriate 
measures. This is essential to avoid the repetition of 
complaints regarding the same requirement. In order to 
define effective actions, it makes sense to identify the most 
likely failure causes. In order to estimate the probability of 
failure causes, different categories of failure cause 
information were formed. These categories, as summarized 
in Table II, are intended to provide a semi-quantitative 
estimate of probability. 
TABLE II.  
FAILURE CAUSE INFORMATION CATEGORIES 
Failure Cause 
(System Element) 
Failure Cause Information 
Requirement 
Definition date of the requirement 
Release date of the requirement 
Drawing index for the requirement 
(Adjustment delivery and drawing) 
Component 
The failure rate of the component 
Failure Cause 
(System Element) 
Failure Cause Information 
Availability of the component 
Maintenance date of the component 
Process 
Standardization status of the process 
Release date of the process 
Environmental conditions of the process 
The correctness of the input of the 
process 
The capability of the process 
Person 
Technical 
competence 
(process-
dependent) of the person 
Methodical 
competence 
(process-
dependent) of the person 
Personal 
competence 
(process-
dependent) of the person 
 
It can be seen that different information on failure 
causes is analyzed depending on the system element. 
Among other things, for a component-related failure cause 
(e.g., a machine), quantitative values such as failure rate or 
availability may be used for the probability estimation. 
Thus, for example, in the case of a high failure rate, a high 
probability of causing the unfulfilled requirement can be 
assumed. However, in the case of personal failure causes 
(e.g., operators), process-dependent competencies are 
identified and compared with the person's competences to 
determine whether the person was fit to perform the 
process. If deviations are detected with regard to their 
competences, the person seems to be a very probable failure 
cause. With this approach, it is possible to identify the most 
likely failure causes. 
In order to be able to eliminate those, it is necessary to 
derive appropriate actions. This is achieved through the 
application of the “STOP principle”, a classification, which 
was able to establish itself in the field of safety engineering 
[29]. The STOP principle provides four different forms of 
actions, 
including 
substitutive 
(S), 
technical 
(T), 
organizational (O) and personal (P) actions. It is intended to 
start with personal actions because these are usually quick 
to implement and do not require a huge amount of 
resources. If these actions are not sufficient, organizational, 
then technical and ultimately substitutive actions have to be 
derived. 
To illustrate what such actions may look like, Table III 
shows an excerpt of actions for person-related failure 
causes. 
TABLE III.  
ACTIONS FOR PERSON RELATED FAILURE CAUSE 
Failure Cause: Person 
Substitutional Actions (S) 
Action 1 
Job Rotation of the Person 
Technical Actions (T) 
Action 1 
Implement an IT system for knowledge 
transfer and training 
Action 2 
Provide knowledge base or wikis for best 
practice solutions 
Organizational Actions (O) 
315
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Failure Cause: Person 
Action 1 
Improve 
education 
and 
training 
opportunities 
Action 2 
Prepare standardized process instructions 
for processes 
Action 3 
Training for newly recruited persons, 
who act as a substitute or for persons with 
part-time employment 
Action 4 
Integrate competencies into the quality 
management system 
Action 5 
Plan and conduct conversations and 
coaching sessions 
Action 6 
Promote a working atmosphere for 
employees through additional offers 
Action 7 
Incorporate personnel support more 
strongly in the corporate philosophy 
Action 8 
Selection of suitable persons for the 
execution of the process 
Personal Actions (P) 
Action 1 
Regular sensitization of persons 
Action 2 
Instruction and advice to the persons 
Action 3 
Supervision of persons by supervisors 
 
Table III illustrates that very different measures are 
proposed by the algorithm depending on the type of action, 
i.e., S, T, O or P. However, the user of the algorithm is still 
left to decide, which action he wants to select and 
implement. The decision provided by the user is then 
documented for subsequent complaints and taken into 
account for similar complaints. 
In order to investigate the applicability of the presented 
algorithm, it was validated in a company in the field of 
stamping and metal forming. The results are shown in the 
next section. 
IV. 
VALIDATION OF THE FAILURE CAUSE SEARCHING 
AND SOLUTION FINDING ALGORITHM 
The validation of the prototype of FusLa is a very 
important step to highlight the improvement potentials as 
well as weaknesses to initiate the continuous improvement 
process. For the validation, a company in the field of 
stamping and metal forming was engaged. This company 
provided insights into complaint management and 
application of the algorithm through several complaint 
examples. Again, it is pointed out that in order to preserve 
the anonymity of the company and to protect its internal 
know-how, all company-related information has been 
anonymized, so that the following chapter only shows the 
validation results. 
It should also be noted that the implementation in Visual 
Basic for Applications (VBA) does not serve to create a 
software system based on the conceptual model. Otherwise, 
it serves only to prove the applicability of the conceptual 
model of the algorithm by its specific application. Due to 
the fact that MS Office is used as a documentation basis in 
many companies, it makes sense to simplify the interface 
through the deliberate use of VBA and not, for example, 
Python or C++. 
In order to be able to present the validation results in a 
transparent manner, both the company and the application 
example are presented briefly. 
A. Presentation of the company for stamping and 
forming technology 
The company, which agreed to validate the FusLa, has 
its expertise in the field of stamping and metal forming. 
Among other things, this field includes the production of a 
wide variety of stamped, bent and deep-drawn parts. Due to 
the broad product portfolio, different industries are covered. 
As a basis for the validation, the company provided us with 
complaints about various available products. Due to the 
extent of all validation results, this paper deals only with the 
complaint of the KSGD product. Nevertheless, it can be 
summarized that the results of further validations 
correspond to those of the KSGD product, but in particular, 
the massive influence of the quality of the complaints on the 
assessment by FusLa can be emphasized. 
 
 
Figure 5.  Complaint text of the product KSGD 
Another complaint was validated analogously for 
comparison possibilities. It can be seen that only the 
abbreviations of the selected product are mentioned. This 
serves to protect the internal know-how and possible 
anonymity reduction by tracing the products back to the 
company. 
B. Preparation of company-related information 
In order to be validated, it is necessary to collect all 
useful company-related information. These are saved in 
very different information systems. In order not to have to 
establish every interface to each information system, the 
information systems were modeled in the form of an excel 
316
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

sheet. However, the principle of access to information 
systems is not affected. In total, three different information 
systems are replicated. 
These include the customer system, the order system, 
and the product system. Based on the replication of the 
information systems, a model of the production system was 
created using the eDeCoDe approach. Altogether 74 
requirements, 8 functions, 29 processes with 22 inputs and 
11 outputs, 9 components, and 10 involved persons are 
elicited. Furthermore, inspections of documents (e.g., 
technical drawings, inspection plans) are analyzed and 
some discussions are held with process owners. 
C. Application of the Failure Cause Searching and 
Solution Finding Algorithm 
With the help of this information basis, the actual 
application of the FusLa could be carried out. 
 
1) Information Probing 
The application of the FusLa is initiated by the first 
phase, the information probing. The provided complaint 
text is transferred to the FusLa and the information probing 
is started as shown in Figure 6. 
 
 
Figure 6.  Information Probing_1 for the complaints of the product 
KSGD 
From Figure 6, it can be seen that the algorithm declared 
different information as relevant and translated them into 
the appropriate fields of the information probing surface. By 
accessing the customer system of the company, the 
algorithm also succeeded in capturing all other information, 
for example, with regard to the customer's address or its 
classification. It also turns out that the algorithm is able to 
probe the correct information for the further handling of the 
complaint. This is a mandatory requirement for goal-
oriented and precise failure cause searching and solution 
finding. 
In the next step, the algorithm should probe all relevant 
order and frame information regarding the claimed product. 
Among other things, the product name, product number or 
the order number itself are listed here. The first weaknesses 
of the prototype of the algorithm were revealed during this 
step. Due to the fact that the complaint text contained no 
product number, order number or even batch, the algorithm 
did not recognize, which product-specific delivery is 
concerned. The weaknesses are presented in Figure 7. This 
shows that it makes sense to establish the possibility of 
recognizing the product name. In this case, the algorithm 
would have recognized the name KSGD and probs all 
relevant product information. For this reason, the 
information probing is extended by another loop, which 
also checks the product name in complaint text.  
 
 
Figure 7.  Information Probing_2 for the complaints of the product 
KSGD 
Another weakness was shown regarding the due date of 
the complaint. There was no deadline in the complaint text, 
so the algorithm could not track how many days the 
organization would have left for handling the complaint. 
For this reason, another loop has been added to the 
algorithm. This allows the algorithm to access the 
contractual provisions between the customer and the 
organization with regard to the processing time interval of 
complaints. This information is used by the algorithm to 
calculate a determination of the due date. If this process is 
unsuccessful, 
precisely 
defined 
strings 
are 
also 
implemented, which allow the algorithm to probe out time 
limits from the complaint text. 
317
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

In the final step of information probing, the algorithm 
should probe all failure and failure scope information. That 
means it should recognize the unfulfilled requirement and 
assign a failure type as well as meaning to it. The result of 
the validation shows that the algorithm recognizes that there 
is a failure (e.g., flatness out of tolerance), but it does not 
select this failure correctly. Within the complaint text, an 
exact indication of the unfulfilled requirement was missing. 
So the user had to choose between the different 
requirements of flatness and thus received a direct estimate 
of the type and meaning of the failure. This process is 
presented in Figure 8. 
 
 
Figure 8.  Information Probing_3 for the complaints of the product 
KSGD 
How this problem can be solved is not yet defined. In 
the further phases of the project, however, the aim is to 
probe out the unfulfilled requirement via the customer's 
failure description in the complaint text. 
Another problem was the exploration of the costs. In 
discussion with the company, it was found that the customer 
usually makes no statement about the costs and mostly only 
assigns an estimate of the affected products. In this case, no 
costs and only an estimation of 1-2 affected products were 
included in the complaint text. This is not enough for 
automated evaluation. However, since, according to the 
company, this information only occurs in a few complaints, 
it should be questioned whether it is actually relevant to the 
handling of the complaint or whether it should only be 
collected at the end of the handling process. Currently, an 
optional exploration of the costs is considered, in which the 
user decides whether and which costs should be extracted. 
However, this is not sufficient if automation of the process 
is the goal. 
 
2) Prioritization 
After all steps of the information probing have been 
carried out, the second phase of the FusLa, the so-called 
prioritization, is to be examined. The basis for the 
prioritization is the complaint information generated in the 
information probing phase. In order to check whether the 
algorithm can make a reasonable prioritization for the 
corresponding complaints, the complaint of the KSGD was 
compared to a second complaint about a product called 
SHD. Similar to KSGD, product SHD is also from the 
automotive sector. Since the comparison limited to two 
complaints, the dimension values are in the range of 1, 5 or 
10 and the weighting values in the range of 5 and 5.5. 
Nevertheless, this is sufficient to investigate how 
meaningful the results are. The evaluation of the 
prioritization is illustrated in Figure 9. 
 
 
Figure 9.  Prioritization for the complaints of the product KSGD 
From Figure 9, it can be seen that the algorithm 
classifies the complaint with a high priority of 316.5. The 
evaluation 
of 
prioritization 
initially 
shows 
that 
normalization is successful for a range of 1-10 for each 
dimension. It also turns out that each of the dimension 
values and weighting values is plausible on the basis of the 
previously probed information. Also, the priority value for 
this complaint is comprehensible and correct. Thus it could 
be shown that the prioritization was successful from a 
mathematical point of view. 
Nevertheless, it must be questioned whether the priority 
value also reflects the reality of the company. Through a 
discussion with the employees of the complaints 
management department, it could be confirmed that this 
318
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

complaint was very relevant and furthermore, properly 
prioritized. The result is an effective prioritization of the 
complaint. In order to work out whether the localization of 
failure causes is also meaningful, this phase is examined in 
the next step. 
 
3) Failure Cause Localization 
The failure cause localization is determined both on the 
complaint information recorded in the information probing 
and also on the production system model developed in the 
preparation of the information basis. In order to be able to 
record the actual cause of the unfulfilled requirement, the 
relations of the requirement to the other system elements 
were examined. The result was a selection of possible 
failure causes, which is illustrated in Figure 10 based on the 
eDeCoDe views. It should be noted that the functional view 
of the realization is represented by the component view and 
is furthermore, not listed again. 
 
 
Figure 10.  Failure Cause Localization for the complaints of the product 
KSGD 
It can be seen that the algorithm could assign different 
failure causes. Among other things, four different 
components (machines/tools) and three processes were 
identified. Nevertheless, a variety of improvement 
potentials emerged when locating the cause of the failure. 
On the one hand, it became clear through a discussion with 
the complaint manager that the failure causes are indeed 
plausible, but that they do not cover all possible causes. The 
company also wanted to display the system elements, which 
are not only used to realize the requirement but are also 
expected to influence the requirement within the previous 
or following process, such as processes of hardening or 
surface treatment. This would be recommended especially 
for very case-specific complaints. This was realized by the 
eDeCoDe model of the production system, which now also 
considers indirect relations between the system elements. 
 A key weakness of the algorithm was illustrated by the 
estimation of the semi-quantitative probability over the 
defined failure cause information of Table II. It turned out 
that much of the information, as shown in Figure 11, was 
not collected at all and furthermore, cannot be used as a 
basis for valuation. 
 
 
Figure 11.  Failure Cause information (explicit Component C1: Ef) for 
the complaints of the product KSGD 
In addition, it became apparent that a comparison between 
actual and required input is hardly possible without a 
specification by the customer. Competencies could be used 
for the persons, but these were also not complete. 
Furthermore, an adaptation of the probability estimation in 
the algorithm must be developed, in order to provide results 
even if there is an insufficient information basis. It would 
make sense to provide an interface to existing systems, for 
example, CAQ systems or smart machines, which allow 
access to real-time-based data and information. The 
documentation of such data/information has to be also 
continuous and complete.  
 
 
319
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

4) Solution finding 
In the last phase of the algorithm, actions to eliminate 
the cause of the failure should be derived. To implement this 
phase, actions based on the STOP principle is used. Figure 
12 shows how these tools were presented by the algorithm. 
 
 
Figure 12.  Actions (explicit Component C1: Ef) for the complaints of 
the product KSGD 
It can be seen that the algorithm provides different 
actions to the user. These must be manually selected by the 
user to ensure the best possible combination of actions. The 
result of the validation showed that the algorithm is able to 
present helpful guidelines. The possibility of selecting 
predefined actions saves resources like time. Likewise, the 
user can also enter individual alternative solutions. With the 
help of all these possibilities, each of the recognized failure 
causes could be eliminated. Nevertheless, this process is 
currently still manual. The idea is to implement this process 
via an AI. It can be considered only in further research 
projects. 
V. 
CONCLUSION AND FUTURE WORK 
The validation of the FusLa based on complaints from 
the company in the field of stamping and metal forming 
showed both the possibilities and the weaknesses of FusLa. 
Beginning with information probing, it turned out that while 
the algorithm is able to distinguish relevant information 
from less relevant information, the FusLa still has problems 
probing it. Although the algorithm was able to record the 
contact person of the customer, it was not possible to probe 
the order information because of the insufficient validation 
of the complaint text. The next phase of prioritization 
showed that the algorithm has the ability to face and 
prioritize complaints. Through collaboration with the 
company, the meaningfulness of the prioritization value for 
the complaint could be confirmed. However, the third phase 
of the algorithm still poses major problems. On the one 
hand, although the algorithm recognized failure causes, 
these did not include the system elements, which not only 
realizes the requirement but also influences it. In terms of 
probability estimation, the algorithm reached its limits due 
to a lack of information. With the last phase, the solution 
finding, it was possible to derive suitable actions based on 
the STOP principle. These were quite capable of 
eliminating the most likely failure causes. 
The quintessence shows that the algorithm has great 
potential, but also it is still in the stage of a prototype. 
In order to improve the algorithm, the following main 
research areas are needed. First of all, a study should be 
done on how the quality of different complaint texts affects 
the information probing. This would highlight the need for 
standardization of complaint texts or more capable natural 
language parser. Furthermore, it is necessary to investigate 
how the probability of failure causes can be derived on the 
basis of an incomplete failure cause information. Only in 
this way it is possible to differentiate between more 
probable and less probable failure causes. Lastly, the user-
friendliness of the algorithm for people in the industry 
should be investigated. Since the industry is the most 
important user of such an algorithm, it must achieve 
acceptance. 
ACKNOWLEDGMENT 
The authors thank the German Research Foundation 
(DFG) for their support of the FusLa Project [Funding 
indicator: SCHL 2225/1-1]. 
REFERENCES 
[1] M. Heinrichsmeyer, N. Schlüter, A. Ansari, “Algorithm for 
Dealing with Complaints Data from the Use Phase,” in 
Proceedings ICONS 2019, vol. 1, Sendra C., S. IARIA 
Publisher Valencia, Spain, pp. 1–6, 2019. 
[2] M. Neuhold, S. Bley, J. Gudat, "Industrie 4.0 Status Quo und 
Perspektiven," 
[Online]. 
Available 
from: 
https://www.ey.com/Publication/vwLUAssets/ey-industrie-
4-0-status-quo-und-perspektiven-dezember-
2018/$FILE/ey-industrie-4-0-status-quo-und-perspektiven-
dezember-2018.pdf, 07.05.2019. 
[3] R. Early, “Guide to Quality Management Systems for the 
Food Industry,” Springer Science+Business Media LLC, 
New York, 1995. 
[4] A. K. Rai, “Customer relationship management,” PHI 
Learning, vol. 2, New Delhi, 2013. 
[5] D. Fallmann, “Datenberge erfolgreich bezwingen,” in 
Wissensmanagement, Lehnert, O. Büro für Medien Oliver 
Lehnert e.K. Neusäß, pp. 41–45, 2012. 
320
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[6] S. Cook, “Complaint management excellence,” Kogan Page, 
London, 2012. 
[7] M. Zairi, “Managing customer dissatisfaction through 
effective complaints management systems," The TQM 
Magazine, vol. 12, pp. 331–337, 2000. 
[8] M. Heinrichsmeyer, “Algorithmus zum Umgang mit 
Reklamationsinformationen aus der Nutzungsphase,” in 
Umgang mit Anforderungen in agilen Organisationen, 
Schlüter, N.; Reiche, M. Shaker Publisher Aachen, pp. 113–
128, 2018. 
[9] M. Heinrichsmeyer, N. Schlüter, A. Ansari, “Algorithm 
based handling of complaints data from the usage phase,” in 
The Proceedings of 2019 International Conference on 
Quality, Reliability, Risk, Maintenance, and Safety 
Engineering, Huang, H.-Z.; Beer, M.; Lim, J.-H. 
Zhangjiajie, Hunan, China, 2019. 
[10] R. Schmitt and A. Linder, "IREKS – Ein ganzheitlicher 
Reklamationsprozess – Unternehmensinterne Strukturen zur 
effektiven 
Analyse, 
Bearbeitung 
und 
Nutzung 
von 
Kundenreklamationen," 
[Online]. 
Available 
from: 
http://www.ireks.rwth-
aachen.de/de/811309b639b3aec9c1257daf00476b0d/14121
5_Kurzbericht_IREKS.pdf, 26.07.2019. 
[11] M. Marchenko, G. Ullmann, B.-A. Behrens, L. Overmeyer, 
“Exzellentes Reklamationsmanagement," Zeitschrift für 
wirtschaftlichen Fabrikbetrieb (ZWF), vol. 12, pp. 1102–
1107, 2010. 
[12] T. Hellebrandt, I. Heine, R. H. Schmitt, “Knowledge 
management framework for complaint knowledge transfer 
to product development," Procedia Manufacturing, pp. 173–
180, 2018. 
[13] R. H. Schmitt, A. I. Metzmacher, V. Heinrichs, B. Falk, 
“Customer Language Processing,” in 12th International 
Workshop on Semantic and Social Media Adaptation and 
Personalization, 
Bieliková, 
M.; 
Šimko, 
M. 
IEEE 
Piscataway, NJ, pp. 32–33, 2017. 
[14] M. Lindemann, “Digitales Fehlermanagement," Qualität und 
Zuverlässigkeit, vol. 08, pp. 8, 2018. 
[15] R. Schmitt and A. Linder, "Beschwerden zielgerichtet 
priorisieren," 
[Online]. 
Available 
from: 
http://www.wzlforum.rwth-
aachen.de/__C12571ED003C17E6.nsf/html/a995b44ece6b
2815c1257af000394446.html/$FILE/MQ_2012_11_Rekla
mationen_WZL.pdf, 22.09.2018. 
[16] Görschwin Fey, "DSy - Debugging Eingebetteter Systeme," 
[Online]. 
Available 
from: 
http://gepris.dfg.de/gepris/projekt/165955509/ergebnisse, 
22.09.2018. 
[17] R. Refflinghaus, T. Trostmann, C. Kern, J. Palomo, 
“Menschlichen Fehlern auf die Schliche kommen," QZ - 
Qualität und Zuverlässigkeit, vol. 4, pp. 34–37, 2019. 
[18] R. Exner, "Projekt PROFAP," [Online]. Available from: 
http://www.profap.rwth-
aachen.de/de/veroeffentlichungen.html, 15.05.2019. 
[19] Y.-H. Hsiao, L.-F. Chen, Y. L. Choy, C.-T. Su, “A novel 
framework for customer complaint management," The 
Service Industries Journal, vol. 13-14, pp. 675–698, 2016. 
[20] M. Greedharry, V. Seewoogobin, Sahib-Kaudeer, Nuzhah 
Gooda, “A Smart Mobile Application for Complaints in 
Mauritius,” in Information Systems Design and Intelligent 
Applications, vol. 2, Satapathy, S. Chandra; Bhateja, V.; 
Somanah, R.; Yang, X.-S.; Senkerik, R. Springer Singapore, 
pp. 345–356, 2019. 
[21] S. Aris-Brosou, J. Kim, L. Li, H. Liu, “Predicting the 
Reasons of 
Customer 
Complaints," 
JMIR 
medical 
informatics, vol. 2, pp. e34, 2018. 
[22] E. A. Stoica and E. K. Özyirmidokuz, “Mining Customer 
Feedback Documents," International Journal of Knowledge 
Engineering-IACSIT (IJKE), vol. 1, pp. 68–71, 2015. 
[23] J. Joung, K. Jung, S. Ko, K. Kim, “Customer Complaints 
Analysis Using Text Mining and Outcome-Driven 
Innovation 
Method 
for 
Market-Oriented 
Product 
Development," Sustainability, vol. 1, pp. 40, 2019. 
[24] M. Heinrichsmeyer, N. Schlüter, A. Ansari, “Algorithmus 
zur automatisierten Abfrage relevanter Informationen aus 
Kundenreklamationen,” in Bericht zur GQW-Jahrestagung 
in Aachen, Schmitt, R., pp. Status: Accepted, 2019. 
[25] M. 
Heinrichsmeyer, 
I. 
M. 
Lemke, 
N. 
Schlüter, 
“Development of an automated prioritization procedure for 
complaints,” in The Proceedings of 22nd QMOD/ICQSS 
conference (Quality Management and Organisational 
Development/ an International Conference on Quality and 
Service Sciences), Dahlgaard, J.; Dahlgaard Park, S. Mi 
Krakow, Poland, 2019. 
[26] R. Alt, “Statistik,” Linde Publisher, vol. 2, Wien, 2013. 
[27] P. Winzer, “Generic Systems Engineering,” Springer 
Vieweg Publisher, vol. 2, Berlin, Heidelberg, 2016. 
[28] J.-P. G. Nicklas, “Ansatz für ein modellbasiertes 
Anforderungsmanagement für Unternehmensnetzwerke,” 
Shaker Publisher, vol. 1, Aachen, 2016. 
[29] M. Egger and O. Razum, “Public Health,” De Gruyter, vol. 
2, Berlin, 2014. 
 
321
International Journal on Advances in Software, vol 12 no 3 & 4, year 2019, http://www.iariajournals.org/software/
2019, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

