Reliability Displays in Building Information Modeling
A Pattern Approach
Alexander G. Mirnig
and Manfred Tscheligi
Center for Human-Computer Interaction
University of Salzburg
Salzburg, Austria
firstname.lastname@sbg.ac.at
Peter Fr¨ohlich, Johann Schrammel
and Michael Gafert
Center for Technology Experience
AIT Austrian Institute of Technology GmbH
Vienna, Austria
firstname.lastname@ait.ac.at
Damiano Falcioni
BOC Asset Management GmbH
Vienna, Austria
damiano.falcioni@boc-eu.com
Abstract—Process management systems allow the user to, among
other things, predict possible outcomes of larger processes and
make decisions based on a pool of data available to the system.
What can greatly inﬂuence the success of such processes is
the reliability of the data that feeds the system’s output. This,
however, is usually not part of such systems and is left to the
experience and expertise of the individual user. Design patterns
are a method that can capture and communicate such implicit
expert knowledge. In this paper, we present initial solutions for
integrating reliability indicators in process management. Based
on expert stakeholder requirements from the use case Building
Information Modeling (BIM), we created three initial solutions
for the realization of reliability displays in this context, which
we abstracted into three draft patterns. These solutions pertain
to expertise-based rights management, visualisation of entry
timeliness, and communicating reliability via penalty indicators.
Keywords–Patterns; reliability displays; process management,
building information modeling.
I.
INTRODUCTION
When working with large quantities of data, then any
decision that is made based on that data must operate under the
basic assumption that the data is accurate to a sufﬁcient degree.
In practice, this reliability of data is subject to ﬂuctuation,
depending on the type of data, where it came from or by
whom it was fed into the system, and a number of similar
factors. It would be very helpful, then, to have an indicator
for the reliability of the data the system bases its output on
in addition to whichever output the system generates via its
primary functionality (sum calculations, predictions, a.s.o.).
Such values, that could allow to determine the reliability of
any individual piece of data, are usually not integrated and it
is left to the user, to determine how reliably the data he/she is
working with is in the end.
Reliability displays are displays or User Interface (UI) ele-
ments intended to address this gap and introduce indicators to
convey reliability information. Such displays add an additional
dimension to data displays: in addition to showing the data
itself to the user, they also convey how reliable the output
can or should be expected to be by the user. This information
can be very valuable for predictions (e.g., weather forecasts)
or contexts with high degrees of variability (e.g., automated
driving [1]), although such displays or indicators are not yet
widely integrated or researched and, as a result, not yet used
within process management or BIM.
In this paper, we present an attempt to design reliability
indicators for process management in the BIM context. Fol-
lowing a pattern approach [2], we decided to generate intitial
design patterns based on stakeholder requirements. From initial
expert interviews, we extracted reliability requirements for the
BIM context. For three of these, we then generated high- to
mid-level solutions, which we present as pattern drafts. These
are intended to serve as the basis for continued efforts to design
UI reliability indicators.
II.
RELATED WORK
In the following, we provide an overview of relevant lit-
erature and state-of-the art for BIM and process management,
reliability displays, and design patterns.
A. Process Management and BIM
There is a growing belief that digital transformation in
the architecture and construction industry can only happen
if four key parameters are properly addressed: digital data,
digital access, automation and connectivity [3]. The common
denominator of all these factors is the utilization of BIM as
both the backbone for the launch of new processes and new ser-
vice features to the architecture, engineering and construction
industry, as well as the link between the various stakeholders
involved in the renovation and construction value chain [4].
Using BIM methodologies and tools has been proposed to
yield large beneﬁts for the construction/renovation sector, most
importantly by: (i) reducing critical mistakes and omissions
and (ii) improving collaboration between stakeholders, sub-
sequently enabling lower costs through less rework, greater
speed by removal of additional documentation efforts, and
higher quality due to closer control. Other direct beneﬁts of
BIM for renovation projects, include reduction of uncertainties
regarding the post-renovation performance, early visualization
of renovation impact to get consensus from building owners,
improved collaboration between stakeholders leading to fewer
conﬂicts, mistakes and re-works on site.
As for building owners and ﬁnanciers, BIM are conceived
as a way to make the estimation process more accurate
and facilitate more visibility and interaction in the overall
design/build process for the owners of a building, enabling
them to take a more active role in determining the ﬁnal
outcome of capital-intensive projects. This appears even more
63
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

relevant in building renovation processes, an area with the
largest untapped potential for energy saving and reduction in
greenhouse gas emissions [5], where BIM tools can help in
the identiﬁcation of the renovation options that can deliver
the best value for money. This requires the availability of
speciﬁc BIMR (BIM-based renovation) tools that can accu-
rately estimate the impact of renovation options and lead
the involved stakeholders through an efﬁcient implementation
path (see [6] for a detailed description of state-of-the-art
renovation workﬂow models for BIM-based renovation process
management).
Despite its clear beneﬁts for all stakeholders involved,
BIM is still facing reluctance to uptake in the mainstream
market [7], mainly due to a number of key factors such as
the requirement for the entire construction value chain to use
consistent BIM tools in order for any party to reap beneﬁts,
the investment in time required as a learning curve on behalf
of architecture and construction professionals, the size and the
processing load induced by BIM models.
B. Trust Calibration and Reliability Displays
Trust can be understood as a relation between at least
two agents, in which one or more agents (trustors) depend
on the achievement of another agent’s (trustee) goals in a
situation that is characterized by uncertainty and vulnerability
(compare Ekman et al. [8], Mirnig et al. [9], and de Visser
et al. [10]. Undertrust in a system occurs when the perceived
capabilities are lower than the actual capabilities, and inversely,
overtrust implies that the perceived capability is higher than the
actual capability. Users can underestimate the consequences if
a system fails, and/or users can underestimate the likelihood
that a system will make serious mistakes at all. The trust in a
system is calibrated when neither over- nor undertrust occur.
Trust calibration can play an important role in intelligent
and predictive systems, to establish and guarantee their long-
term acceptance. Schrammel et al. [11] have shown that in
different ﬁelds of research and practice different techniques
for trust calibration have been proposed, most importantly
reliability displays, uncertainty indicators, awareness and in-
tent displays and the communication of available alternatives.
Reliability displays, which are the focus of our paper, directly
communicate the reliability as estimated by the system to the
user [12]. This normally includes only one value, which is
frequently expressed as a percentage, i.e.: “I am 60% sure that
the data is correct”. The display of this information needs to
be adapted to the application domain, and different interface
elements are used depending on the domain.
C. Patterns
Design patterns are structured solution documentations to
reoccurring problems [13]. Design patterns were originally
conceptualised by Christopher Alexander [14][15] to capture
individual solutions to reoccurring problems in the architecture
domain. His idea later inﬂuenced other domains as well, most
prominently software engineering [16], where patterns are
still widely used to document solutions to both common and
obscure problems encountered by software engineers.
Patterns feature a number of characteristics that separate
them from “classical” means of documentation, such as guide-
lines: Since they are problem-based, they can cover both high-
and low-level solutions, depending on how the individual
problem is framed [17]. A side effect of this is that pattern
collections are never complete in a standard sense – whenever
a new problem within a speciﬁc context occurs, so does the
need for an appropriate pattern. Since patterns also focus
on providing ready-to-use along with a description of the
problem context, they can be useful to make expert knowledge
accessible to novices [18] and serve as a powerful knowledge
transfer tool in this regard.
These features render patterns particularly suitable for
capturing and communicating solution knowledge in new or
rapidly evolving domains [2]. BIM is one such domain, which
is currently evolving based on advances in digitalisation,
data management, and measurement technologies. Isikdag and
Underwood presented two design patterns for synchronous
collaboration in BIM [19], showing that the pattern approach
can be successfully used in this domain.
Since both BIM and reliability displays are relatively novel
without the solid literature basis that other more tradition-
ally rooted ﬁelds have, patterns seem particularly suitable to
capture solution knowledge in these domains. In this paper,
we therefore apply a pattern approach to create initial draft
patterns for conveying reliability information in BIM appli-
cations, based on expert stakeholder requirements. After an
overview of the related work in Section 2, we present the
requirements gathering approach in Section 3, the resulting
patterns in Section 4, and conclude in Section 5.
III.
GATHERING REQUIREMENTS FOR TRUSTWORTHY
PROCESS MANAGEMENT
Following an iterative pattern approach [2], we ﬁrst gath-
ered expert stakeholder requirements, which we then priori-
tized and used as a basis for the design solutions and resulting
patterns. To this end, we formulated the following two guiding
research questions:
RQ1 Which factors are most indicative of the data reliability
in BIM process management?
RQ2 How can these factors be integrated into UI designs to
communicate data reliability to the user?
We address RQ1 in Sections III-B and III-C, RQ2 in
Section IV.
A. Method
The method consisted of a stepwise process from the state
of the art analysis and interviews to requirement derivation and
pattern writing.
State of the art analysis: Based on analysis of previous
work on trust calibration, we came up with common design
approaches for the communication of reliability, uncertainty,
awareness and intent, as well as of choice alternatives [11].
Examples from research and practice were collected, whereby
the most detailed guidance was available in the area of
automated driving, as here reliability displays have already
been investigated in experimental research.
Interviews: In order to capture the requirements for BIMR
and related trust calibration aspects in depth, we conducted
semi-structured individual interviews, which followed a con-
sistent agenda but could then expand on speciﬁc further topics
brought up by the respondents. After ﬁlling in a consent
form and providing background information about their job
proﬁle and speciﬁc expertise, participants were asked some
64
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

introductory questions on BIMR, its relevant processes, in-
volved software environments and major issues in the ﬁeld.
Then, participants were brieﬂy introduced into the above
described investigation topics of trust calibration and process
management in BIMR, through showing and commenting a
few illustrative slides on the concepts and related example
applications and use cases.
Respondents were then asked to comment on the use case
as to whether or not it corresponded to their own work situation
and to which extent they saw differences. They were then
also asked about the types of data they use in their BIMR
projects and to draw the timeline of a typical renovation
process. The participants were then debriefed and asked about
their preparedness to provide feedback to the next stages of
pattern generation. Three experts were asked to participate in
the interviews: an architect proﬁcient in BIMR for building
(I1), a project manager for highway construction projects (I2),
and an IT solution provider specialized in BIMR (I3).
Derivation of requirements: The responses were analysed
as to their potential for the derivation of requirements for
pattern writing. The gathered requirements were then consol-
idated across the three different interviews and allocated to 9
requirements (or requirement groups).
B. Interview Results
In general, the BIMR use case itself was seen by all
three participants as a promising alternative to currently pre-
vailing, less data-intensive renovation approaches. All three
respondents conﬁrmed that the integration of BIM is not yet
common in standard construction industry processes, as data
for most actors in the construction industry appears to be
restricted to PDFs with 2D or 2.5D plans (I2). However, in
the participants’ view the number of customers demanding
for more informed modeling, documentation and monitoring
is growing. Based on the respondents’ experience with BIM
renovation so far, a number of beneﬁts were identiﬁed, such as
the improved communication opportunities between different
involved stakeholders through the joint exploration of the same
model from different viewpoints (I1-3), the interconnection
between the construction and the accounting data with different
preferences for their level of integration, (I1-3), clear guidance
in construction processes, due to high-precision data (I2), long-
term reliable data availability for asset management purposes
(I2), and a better overview and veriﬁability in complex build-
ings (I2).
While each of the respondents described a ’typical BIMR
process’ with a different focus, several commonalities could be
identiﬁed. The ﬁrst BIMR process step consists in the detailed
creation of a model of the initial conditions of the site. This is
then used for the planning, cost estimation and offer creation
for the different renovation phases of the renovation project.
During each actual renovation phase, BIMs are then used to
track the process on site, and often the data on used materials
is also used for billing. In some cases (I2), the BIM is then
provided also for the further asset management.
C. List of requirements
R1: The presentation of reliability displays should follow
the degree of abstraction. Therefore, it is necessary to highlight
upfront the level of detail of the model.
R2: The system should always highlight the properties and
restrictions of the underlying model. To this end, potential
uncertainties of the model in representing the reality should
be highlighted. Furthermore, the nature of the analysed object
with regard to the related expected uncertainty/accuracy should
be shown. For instance, a more geometrically complex object
could provide more precise insights than a simpler object, in
comparison with standard planning tools.
R3: It should be possible to ﬁlter system output (both with
regard to data protection and to usability).
R4: It should be possible to deﬁne who provided an input
and the related chosen approach.
R5: There should be a clear indication on who provided an
input, estimation or prognosis. In addition, the system should
show how this input was provided, with regard to the applied
method, the used system, the user role and expertise. For
example, for an infrastructure construction manager, providing
information on whether data has been collected by a drone
each week, as opposed to less systematic data capture by
ground personnel. Also, for architects or project managers it
is worthwhile to check on whether the person entering the
data comes from the same company, or from a company with
processes that they are familiar with.
R6: The system should provide cues and detailed informa-
tion on whether the considered building model or respective
estimations have undergone previous reliability checks. For
example, if the system shows whether or not certain speciﬁc
software-based tests (e.g., with Solibri [20]) have been applied
on some or all of the available aspects of the model (e.g., joint-
ings of different building parts) and if it is clariﬁed whether
manual corrections have been applied to further plausibilize
them, this will help the user get an initial understanding
which parts of the model can be trusted to what degree. To
make this indicator meaningful, it is necessary to also show
whether the software output has been surveyed by an expert
to disambiguate them and to ﬁlter for relevancy in the given
context.
R7: In the case that Artiﬁcial Intelligence (AI) is involved
in the processing of the data, it would be necessary to provide
an indication on which underlying data and models a respective
estimation or prognosis has been made. In this respect, best
practice from the currently evolving ﬁeld ’Explainable AI’
should be considered [21].
R8: The time period of data input as well as its relation
to the respective billing period should be displayed. This
should encompass ranges of default threshold values beyond
which the provided data is deemed unreliable. The underlying
assumption is that a closer match of data input with the actual
billing period indicates its level of detail and correctness,
as with longer delays of data input human error is more
likely. Naturally, data to be considered in the context of this
requirement is attached to a concrete time speciﬁcation, such
as the date of the made payment and the timestamp of the
corresponding project deliverable.
R9: The system should provide cues on which of the
renovation project deliverables is subject to a contractual
penalty related to quality or time delays. In case of existence
of such a penalty, a higher reliability is ascribed to it by project
managers.
65
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

IV.
FROM REQUIREMENTS TO UI SOLUTIONS
All requirements were discussed in an internal workshop
with three UI experts. In the workshop, the requirements were
prioritized regarding estimated effectiveness and feasibility of
integrating with existing UIs. For the three highest priority
requirements (R5, R8, and R9), solutions were then generated
and brought into a minimal pattern draft format, including
name, short description, problem, solution, and examples.
These patterns are described in the following:
A. Draft Pattern 1: Expertise-Based User Roles
This pattern describes a solution to assign levels of exper-
tise to user roles and communicate reliability of input data
based on the combination of role and expertise level that
entered it.
1) Problem: In the building construction context, there is
often a large number of stakeholders who all contribute to one
single project. This means that the data that feeds the process
management system comes from a variety of sources and not
all of them can be assumed to be equally reliable. In particular,
the reliability of the data will depend on whether
1)
the individual who entered or supplied the data held
the appropriate role to do so, and
2)
their level of expertise was sufﬁcient to reduce the
possibility of oversights/errors to a standard mini-
mum.
In addition, the reliability is also inﬂuenced by whether the
data was imported directly from another system or whether it
was entered by a human individual. All of this information
is typically not provided by the system when working with
or viewing individual data or data sets. Thus, the judgement
regarding data reliability depends entirely on the user’s own
experience and familiarity with the context, including any
individuals that might have provided data with in the system.
This is suboptimal in general and becomes more severe the
larger the project in question is.
2) Solution: The rights management needs to provide an
account system that allows to assign different user roles
and levels of expertise within each role. The accounts are
then coded (e.g., via colors and/or acronyms) to allow quick
information regarding:
1)
Type (human or other system)
2)
Role
3)
Level of expertise
Item 1 can be handled indirectly by assigning no user
account, role, or expertise information to anything that was
automatically generated or imported from a different system.
This means that in the eventual output, the user can quickly
see where the data came from via the presence or absence of
any user account indicators.
Item 2 is addressed by simply deﬁning the appropriate
number of roles within the context. These need to be set
speciﬁc to the individual context and type of the project.
Examples for such roles within the construction context are
project manager, site manager, foreman, (shift) supervisor, etc.
Item 3 is addressed by further deﬁning levels of expertise
for each role. This pattern proposes a simple 3-level-system
based on two metrics. This allows a comparably easy deﬁnition
of levels by deﬁning one threshold for each metric, then
Figure 1. Example for seller reputation information from Amazon.
assigning the level of expertise based on whether both, one,
or none of the thresholds are exceeded.
For example, within a project, there can and probably will
be a role “project manager”. For this role, the metrics could be
deﬁned as years of experience in the ﬁeld (M1) and average
size of previously managed projects ((M2). For both metrics,
an expertise threshold is deﬁned (e.g., 6 years for M1, EUR
300.000 for M2. If the threshold is exceeded, high expertise
is assumed. Assuming a three-level-system with L1 being the
lowest and L3 being the highest level of expertise, the user will
be assigned L1 if no threshold is exceeded, L2 if the threshold
in M1 or M2 is exceeded (but not the other, and L3 if both
thresholds are exceeded
Figure 3 provides an illustrative overview of such an
account hierarchy and a suggestion for highlighting roles and
levels via color coding in the eventual output. Note that Roles
can also be entirely denoted via acronyms (e.g., ‘PM’ for
‘project manager’, ‘SV’ for ‘supervisor’, etc.) with one single
color in different levels of brightness/saturation to donate the
levels. This can be used to avoid color overload when working
with a large volume of users and user roles.
3) Examples: This solution is strongly related to the fol-
lowing UI solutions, which address a similar problem space:
Seller-trustworthiness indicators on e-commerce sites. E-
commerce sites that support re-selling on their platform (e.g.,
Amazon, cf. Figure 1) have the need to show indicators for
the level of trustworthiness of the different individual sellers.
Typical solutions here are to provide ratings by past customers,
rank the sellers based on these ratings, and to provide historic
and meta information (sales history, number of complaints,
etc.)
Reputation indicators on expert-forums. In a similar man-
ner, expert help forums, such as e.g., on stack overﬂow (cf.
Figure 2) have the need to indicate the level of expertise of an
individual user in order to provide context for the interpretation
of the answer to a question. Stack overﬂow for example uses an
elaborated reputation system based on scores, tags, and badges.
Skill endorsements on business networks (e.g., LinkedIn) or
knowledge management systems. Also related is the possibility
to endorse other users in a network for a speciﬁc skill, thereby
providing valuable background information and social proof.
B. Draft Pattern 2: Reliability through Recency
This pattern describes a solution to communicate reliability
through highlighting the temporal discrepancy between when
data was ﬁrst collected versus when it was entered into the
system.
66
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

Figure 2. Example for expert reputation information from stack overﬂow.
Figure 3. Overview of account hierarchy. User roles are further divided into
three levels of expertise. Color coding allows distinction at a glance.
1) Problem: The more distant events are, the more difﬁcult
they are to retrace for any individual who was involved with
them. As a result, written accounts, receipts, etc. become
more important information carriers the more time has passed.
Conversely, if the information available via documentation is
incomplete, inaccurate, or otherwise insufﬁcient, it becomes
more difﬁcult to correct such deﬁciencies, as additional docu-
mentation – if it had been available in the ﬁrst place – might
have been lost, archived, or otherwise hard to access. In addi-
tion, individuals who were involved in whichever activity that
supplied the relevant data might no longer remember speciﬁcs
that could have helped to detect or correct inaccuracies or
supply missing information. Thus, it becomes necessary to
distinguish data that was entered in time from data that was
entered delayed, which is usually not supported by default.
2) Solution: The solution consists capturing and visualiz-
ing the temporal distance between data collection/availability
and entry into the System. Upon entry, each data item is
ﬂagged with the date on which it was entered. In addition,
each item requires an additional ﬁeld in which the date of
initial data collection or availability is entered. What is to be
entered here depends on the documentation and data item but
examples here are: billing date for invoices, market date for
price estimates (e.g., price per barrel of raw oil at [day]), or
the signature date for protocols.
Based on the hypothesis, that the closer these dates match,
Figure 4. Google Docs’s version history. Each user has a unique color and
changes are categorised by timestamps.
the more reliable the data is, reliability thresholds can be
deﬁned. This solution proposes a simple three-level system,
which then corresponds to standard color coding via the trafﬁc
light metaphor (red-yellow-green). Level red denotes data that
was entered late, level green denotes data that was entered in
time. Level yellow can be used to ﬂag entries that were not
entered immediately but also without signiﬁcant delay – e.g,
everything that is entered within one week is ﬂagged green,
within two weeks yellow, and everything beyond two weeks
in red.
This way, delayed entries can be spotted at a glance and the
reliability (or lack thereof) of individual items can be spotted at
a glance. The delay-level of each entry can be easily visualized
by simply showing the date ﬁelds and highlighting them in the
appropriate color. In order to avoid visual overload, green level
entries can be left unhighlighted with only level yellow and red
ones being highlighted, as these are the more critical ones. In
addition to the color coding, a numerical indicator of elapsed
time (e.g., “xx days past”) can be added.
As a direct consequence of requiring two dates for each
item, this solution is only applicable to data items that can be
associated with documented dates that are not identical with
the entry dates by default.
3) Examples: Many text editing tools offer some kind of
version history or version control to provide a sense of recency.
Google Docs, for example, offers a simple version control
depicted in Figure 4. Each continuously written text is tagged
with a timestamp and the user who edited it.
A more advanced version control is offered by GIT [22].
Only speciﬁc users can change ﬁles and each change must be
described in form of a commit message. Once a change is
committed it will be added to the history. GitHub, a website
implementing GIT, offers the ability to view these commits and
their corresponding changes. Each change is marked (addition:
green, deletion: red) in the corresponding ﬁle (see Figure 5).
WebStorm, an IDE (Integrated Development Environment)
for developing JavaScript applications [23], also has the ability
to display GIT commit messages. Instead of focusing on
commits and their changes, it focuses on the ﬁles itself. Figure
6 shows that each line of code has an annotation with linked
name and date. These values are extracted from the history and
displayed alongside the ﬁle. Each user and timestamp have a
different associated color and can therefor be differentiated.
C. Pattern Draft 3: Reliability through Penalties
This pattern describes a solution to convey reliability by
associating data entries with information regarding whether
the entry is tied to a monetary penalty or not.
1) Problem: Especially in larger projects, the level of care
taken when reporting and resulting level of detail in reported
67
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

Figure 5. GitHub’s commit overview with one addition marked green and a
corresponding commit message. Excerpt from the Linux Kernel GitHub
Page.
Figure 6. WebStorm’s annotations display which user changed what line of
code and marks it with a timestamp.
data can vary greatly between different stakeholder organiza-
tions as well as individuals within these organizations. This
can be a result of different levels of interest and involvement
between stakeholders in the project but also different degrees
of repercussions in case results are not delivered at all or not in
a timely (or otherwise satisfactory) manner. Depending on the
level of interest/involvement and how close an individual’s or
organization’s goal match the goals of the overall project, the
more reliable can their input assumed to be. Such information,
however, usually relies on personal knowledge and experience
and is usually not captured within process or other manage-
ment systems.
2) Solution: Contractually stipulated monetary penalties
can be clearly traced and captured within a system. Whenever a
data item or data set is associated with such a penalty, a visual
indicator is added to show this (e.g., fulﬁlment of delivery is
associated with a penalty in case of delays; data item date
of delivery then shows a penalty indicator). Such an indicator
can be a simple icon or text-based indicator and can operate in
a binary fashion: if the indicator is present, then a penalty is
attached to the data; otherwise, there is not. Since the presence
of penalties can be a reliability indicator not only for individual
data items or sets but also indicative of reliability within the
entire project, including such indicators in hierarchical tree
views is recommended. A top-level indicator shows whether
there are any penalties in the project at all. Clicking on the
top-level indicator expands all trees to the elements that are
associated with penalties and highlights them. This provides
both a high-level and lower-level reliability indicators as well
as quick and efﬁcient access to the latter.
3) Examples: Such hierarchical tree views are common in
applications which have some kind of folder management. The
text editor Atom [24] can forward tagged ﬁles in sub-directories
up to the root node of the folder structure. The top-level in
Figure 7 shows a root node called “top”. It is marked orange
because of a tag in a sub-directory. In this example the ﬁle is
Figure 7. Screenshot of the Atom text editor with GIT integration. The top
item of the tree view (left) is colored orange as items inside the tree have
uncommitted changes. All changed items are also visible as a list on the
right.
Figure 8. Atom text editor with open tree view. The orange marked items
can be followed along to the changed item.
tagged because it was changed. The root cause of the tag can
however be different as a later example will show. The tagged
object can also be viewed as a list (see right side of Figure 7).
If the top node is opened the full tree view is shown, which is
depicted in Figure 8. The tag of one ﬁle is passed along each
directory until it reaches the root node which in turn can then
be used as a top-level indicator of all objects below.
V.
DISCUSSION, CONCLUSION, AND FUTURE WORK
We were able to address RQ1 with the requirements
identiﬁed in Section III-C, and begin to address RQ2 with
the draft patterns in Section IV. We found reliability-relevant
information in the BIM context to encompass a wide range
of aspects, of which we could highlight three with varying
degrees of context-speciﬁcity. While hierarchical rights man-
agement with different user roles has a wide application, the
same cannot be said about penalty indicators. While the former
can be re-applied in any context, where expertise levels can be
deﬁned (and are assumed to be reliability-relevant), the latter
can only be used when penalties are part of the project and are
captured in the system. Recency indicators can be expected to
be used in a larger number of contexts, as timely fulﬁllment
is usually a factor in most projects or undertakings. However,
that factor can only be applied to data items to which dates
can be assigned (invoices, protocols, etc.), which might cover
only a fraction of the data a user is interacting with through a
management system.
One additional question that is relevant for how to design
reliability indicators, is how or if reliability-relevant data
should be highlighted or hidden. It would seem obvious that
relevant information should be highlighted, this might not
necessarily be the default for reliability indicators. Taking
the penalty-indicators as an example, these indicators would
68
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

highlight any item that has a penalty attached to it. However,
as we learned from the experts, the presence of a penalty
reduces the likelihood of that data being incorrect and increases
reliability as a result. If the user is looking for potential errors,
then he/she would need to look at the exact opposite, viz. data
without attached penalties. Depending on how many penalties
are present, switching the behaviour to highlighting all data
without penalties by default, might not be a good solution
either. If most data items are without penalty, then such a
solution would quickly cause visual overload and be ineffective
as a result. In the end, it will be difﬁcult to impossible do
deﬁne a default that works for all contexts and the behaviour
will need to be toggleable on the user’s end.
In general, a higher level of detail and more solutions are
required to solidify the basis for reliability displays in process
management and for the BIM context. In future work, we
intend to generate full patterns from the drafts laid out in this
paper and extend the quantity of patterns to cover additional
expert requirements. In particular, the expertise-inﬂuencing
factors for deﬁning the user roles need to be identiﬁed more
clearly, data types and how recency can be established needs
to be clariﬁed, and we want to further look into penalties and
whether a more precise metric (one that includes the penalty
amount) is required.
In this paper, we presented an approach towards designing
reliability indicators for process management in the BIM con-
text. We generated three draft design patterns, which serve as
a basis for continued efforts to introduce reliability indicators
into interfaces, where information reliability is paramount. By
using a pattern approach, the pool of available knowledge
can be continually extended as new working solutions are
developed and discovered. Thus, we also want to encourage
the community to contribute to the growing ﬁeld of reliability
displays not just within BIM but across application areas and
contexts as well.
ACKNOWLEDGMENT
The ﬁnancial support by the Austrian Research Promo-
tion Agency (FFG) under grant number 878796 (Project:
CALIBRaiTE) is gratefully acknowledged. The authors thank
Christian Bechinie for his support in preparing this publication.
REFERENCES
[1]
B. E. Holthausen and B. N. Walker, “Trust calibration through
reliability displays in automated vehicles,” in Proceedings of the
Companion of the 2017 ACM/IEEE International Conference on
Human-Robot Interaction, ser. HRI ’17.
New York, NY, USA:
Association for Computing Machinery, 2017, p. 361–362. [Online].
Available: https://doi.org/10.1145/3029798.3034802
[2]
A. Mirnig et al., “Automotive user experience design patterns: An
approach and pattern examples,” International Journal On Advances in
Intelligent Systems, vol. 9, 2016, pp. 275–286.
[3]
“EU BIM Task Group,” 2020, URL: http://www.eubim.eu/ [retrieved:
July 2020].
[4]
R. Berger, “Digitization in the construction industry,” Roland Berger
GmbH, Competence Center Civil Economics, 2016.
[5]
B. B. P. I. Europe, “Renovation in practice: Best practice examples of
voluntary and mandatory initiatives across europe,” Tech. Rep., 2015.
[6]
R. Woitsch et al., “Adaptive renovation process and workﬂow models
1. deliverable d6.2 of the eu h2020 project bimerr,” Tech. Rep., 2020.
[7]
A. Ghaffarianhoseini et al., “Building information modelling (bim)
uptake:
Clear
beneﬁts,
understanding
its
implementation,
risks
and
challenges,”
Renewable
and
Sustainable
Energy
Reviews,
vol.
75,
2017,
pp.
1046
–
1053.
[Online].
Available:
http:
//www.sciencedirect.com/science/article/pii/S1364032116308413
[8]
F. Ekman, M. Johansson, and J. Sochor, “Creating appropriate trust for
autonomous vehicle systems: A framework for hmi design,” Tech. Rep.,
2016.
[9]
A. G. Mirnig, P. Wintersberger, C. Sutter, and J. Ziegler, “A framework
for analyzing and calibrating trust in automated vehicles,” 2016, p.
33–38.
[10]
E. J. de Visser, M. Cohen, A. Freedy, and R. Parasuraman, “A design
methodology for trust cue calibration in cognitive agents,” in Interna-
tional conference on virtual, augmented and mixed reality.
Springer,
2014, pp. 251–262.
[11]
J. Schrammel et al., “ Investigating Communication Techniques
to
Support
Trust
Calibration
for
Automated
Systems
,”
in
Proceedings of the 4th Workshop proceedings Automation Experience
across Domains In conjunction with CHI’20, Honolulu, HI, USA.
Website: http://everyday-automation.tech-experience.at, 2020. [Online].
Available: http://everyday-automation.tech-experience.at
[12]
B. E. Holthausen, T. M. Gable, S.-Y. Chen, S. Singh, and B. N.
Walker, “Development and preliminary evaluation of reliability displays
for automated lane keeping,” in Proceedings of the 9th International
Conference on Automotive User Interfaces and Interactive Vehicular
Applications, 2017, pp. 202–208.
[13]
A. G. Mirnig et al., “User experience patterns from scientiﬁc and
industry knowledge: An inclusive pattern approach,” International
Journal On Advances in Life Sciences, vol. 7, no. 3 and 4, 2015, pp.
200–215. [Online]. Available: https://www.thinkmind.org/index.php?
view=article&articleid=patterns 2015 2 30 70011
[14]
C. Alexander, The Timeless Way of Building. New York, USA: Oxford
University Press, 1979.
[15]
C. Alexander, S. Ishikawa, and M. Silverstein, A Pattern Language:
Towns, Buildings, Construction.
New York, USA: Oxford University
Press, 1997.
[16]
E. Gamma, R. Helm, R. Johnson, and J. Vlissides, Design Patterns:
Elements of Reusable Object-Oriented Software.
Pearson, 1994.
[17]
J. O. Borchers, “A pattern approach to interaction design,” AI &
SOCIETY, vol. 15, no. 4, 2001, pp. 359–376.
[18]
J. Vlissides, Pattern Hatching: Design Patterns Applied.
Addison-
Wesley, 1998.
[19]
U.
Isikdag
and
J.
Underwood,
“Two
design
patterns
for
facilitating
building
information
model-based
synchronous
collaboration,”
Automation
in
Construction,
vol.
19,
no.
5,
2010,
pp.
544
–
553,
building
Information
Modeling
and
Collaborative
Working
Environments.
[Online].
Available:
http://www.sciencedirect.com/science/article/pii/S0926580509001769
[20]
“SOLIBRI,” 2020, URL: https://www.solibri.com/de/ [retrieved: July
2020].
[21]
Q. Wang, Y. Ming, Z. Jin, Q. Shen, D. Liu, M. Smith, K. Veeramacha-
neni, and H. Qu, “Atmseer: Increasing transparency and controllability
in automated machine learning,” 02 2019.
[22]
“GIT,” 2020, URL: https://git-scm.com/ [retrieved: July 2020].
[23]
“WebStorm,” 2020, URL: https://www.jetbrains.com/webstorm/ [re-
trieved: July 2020].
[24]
“Atom,” 2020, URL: https://atom.io/ [retrieved: July 2020].
69
Copyright (c) IARIA, 2020.     ISBN:  978-1-61208-783-2
PATTERNS 2020 : The Twelfth International Conference on Pervasive Patterns and Applications

