REfIS: A Stage-based Methodology for Eliciting Requirements 
 Felipe S. Ferraz¹², Leopoldo P. Ferreira¹, Rodrigo E. Assad¹², Renato A. G. P. França¹², Silvio Meira¹  
Informatics Center 
Federal University of Pernambuco 
Recife, Brazil 
¹{lpf,fsf3,rea,srlm@cin.ufpe.br} 
²{fsf,rea,ragpf@cesar.org.br} 
 
Abstract— Eliciting requirements is one of the most important 
phases in software development, which can lead the project to 
success or to failure. Particularly, when it comes to security 
requirements, the main responsibles for specifying software 
system have a lack of knowledge at security policies and the 
mechanisms for achieving them. This article proposes and 
presents a stage-based methodology called REfIS that aims to 
guide 
requirements 
engineers 
through 
the 
elicitation 
requirement process of software system. The methodology 
consists of three phases: (1) dispersion of knowledge about a 
certain universe of study through Casual Layered Analysis 
(CLA), (2) creation of a future scenario using Futures Wheel 
and (3) extraction of requirements from the analysis of the 
generated scenario. Finally, this methodology will be applied 
and validated at the initial phase of the development of a real 
P2P backup System in order to extract requirements.  
Keywords-eliciting requirements; methodology; innovation 
systems. 
I. 
 INTRODUCTION  
The widely accepted concept of the innovation refers to 
the flow of technology and information among people, 
enterprises and institutions as a key to an innovative process 
or product. It contains and gives different and new 
interaction between the actors involved in the process and 
the process itself. It brings that actor across that new 
experience based on his previously knowledge.  
When dealing with requirements, and users needs and 
expectations we may be facing a infinite universe of 
possibilities available for the specification of those kind of 
system we are also facing the infinite of the unknown, sure, 
we are presented to new ways, process and products and with 
that the task of define requirements meets challenges towards 
its time. This short paper, is a brief introduction to a new 
Stage-based methodology, called REfIS, that intends to 
present the definitions to systems that are not thinkable 
working on theirs definitions using techniques used among 
brain storm meetings. The methodology and the paper will 
introduce the use of CLA and Future Wheels combined as a 
approach to better understand and define innovational system 
requirements.  
 
II. 
BACKGROUND 
The main objective of this methodology is to combine 
CLA [1] and Future Wheels [3] techniques to propose a new 
approach to requirement analyses. To that, this section will 
shortly introduce those techniques focusing on present them 
as the first and second stages of REfIS. 
 
A. Causal Layered Analysis (CLA) 
 
Causal Layered Analysis [1] can be regarded as a 
sophisticated technique to organize thoughts and views about 
the future. Although ones affirms that this is only a way to 
predict the future, Inayatullah holds the idea that it can create 
transformative spaces for the creation of alternative futures.  
Particularly, this technique is less to do with forecasting 
methods and more with understand the present and past to 
build alternative future scenarios.  
This technique is composed of four layers [2]: Litany, 
Social causes, Worldview and Myth/Metaphors. However, 
each one of these layers has different proposes and focus 
varying from different perspective of knowing. The main 
idea is to conduct a deep research by moving up and down 
these layers.  Figure 1 depicts the layers of the Causal 
Layered Analysis. 
Figure 1.  Layers of Causal Layred Analysis [1].  
The first layer of CLA is called Litany. The participants 
of the meeting discuss, at this point, the public descriptions 
of the subject that is being analyzed. However, the view of 
the reality presented here are rarely questioned or used to 
make any suppositions about a near future.  
The second layer, called Causes, is responsible for 
analyze the subject through the definitions found on the 
social sciences. At this layer, systemic events including 
546
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

socials, technologics, economics, environmentals, politics 
and historicals are analyzed and its interpretations should be 
relied on quantitative data. Finally, the information gathered 
at the first layer are now questioned and explained.  
The third layer is known as the Worldview. At this point 
of the analysis, all daily world view of the subject or event 
being studied should be discussed.  Social-cultural factors of 
the population involved in the study are essentially required 
due to the strong impact caused by the context on the subject 
that is being analyzed.  
Last but not least, the fourth layer, called Myth and 
Metaphor, is responsible for including in the discussion the 
myths, legends and metaphors related to the subject or event 
that is being analyzed owing to its influence on the beliefs of 
the participants as well as the society.  
After all layers are analyzed and discussed, it is usually 
common to build a fifth layer called Future Choices where 
one makes statements about the events whose outcomes have 
not yet been observed. This forecasting process is depicted at 
figure 2 below.  
 
Figure 2.  Bulding future scenarios through CLA [1]. 
B. Futures Wheel 
 
Futures Wheel [3] was developed in 1971 by Jerome C. 
Glenn as a cross-impact analysis technique mainly used for 
predict impacts of future events, trends, ideas or values on a 
given context through a structured brainstorming process. 
Consequently, stakeholders are able to build relationships 
between events besides elicit and mitigate problems that 
might occur in a near future. In Gleen’s own words, the 
“Future wheels moves the mind from linear, hierarchical, 
and simplistic thinking to more network-oriented, organic 
and complex thinking”.  
When a group (usually groups of 8 to 12 individuals) 
decides to brainstorm about a specific subject, it is written on 
piece of paper or a white-board, circled and placed in an oval 
at the centre by the leader of the brainstorming session or a 
facilitator’s guiding. After that, it is requested to the other 
members to say whatever comes to their mind about the item 
that is being shown besides raising relevant questions to the 
discussion. As statements are offered by the team, the leader 
draws a wheel-like chart around the first item radially. At the 
end, the leader invites the participants to argue about the 
likely consequences of the new items that have just been 
drawn. Additionally, one can draw interconnecting lines 
between the primary and secondary impacts of a trend in 
order to establish relationship between them.  
Usually, this process tends to go very quickly with the 
participants listing consequences with little or no evaluation. 
Alternatively, the wheel can be also edited in order to make 
it more realistic. In this approach, every statement discussed 
by the group has to be approved by all in order to be 
included in the wheel. The brainstorm session thereby tends 
to take more time due to the acceptation of prior criticism. 
  As a result of the session, the team should have 
developed a mind-mapping diagram that will work as a 
heuristic device for thinking about the future. To put it 
simply, the outcome of the process aims to nurture a future- 
conscious perspective. The final design seems like a hub of 
wheel with spokes radiating from it. As en example, figure 3 
depicts the forecasting of the future of a videocassette 
recorder (VCR) device using Future Wheels technique.        
Figure 3.  Example of a Future Wheel exploring the future of the VCR 
tehcnology [3]. 
A second version of Future Wheel was also proposed by 
Glenn in order to consider a wider range of consequences. 
For example, electric engineers would naturally tend to 
identify technologies improvements on our VCR example 
and put less effort on economics or environmental 
consequences. Consequently, the wheel is originally divided 
into pre-determined sections or domains to force the team to 
think about the trend as broad as possible.    
 
III. 
METHODOLOGY 
REfIS relies on Requirement Eliciting for Innovation 
Systems. Our goal is to guide stakeholders at early stages of a   
software development process, specially the requirement 
eliciting process [4] [5]. We understand that, when it comes 
547
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

to Innovation Systems that claims to be built on new 
business models, its requirements are not trivially defined 
and therefore require a methodology that helps the 
development team to think, discuss, and analyze everything 
the systems should perform [6].  
Trustworthy, the methodology proposed by this paper is 
divided into three stages; however, the first stage can be 
omitted if the subject to be discussed is widely known by the 
stakeholders. 
The first stage is called the Dispersion. At this initial 
phase, the development team is invited to open a free 
discussion about the main subject of the software that will be 
soon developed. As an example, if the software concerns 
about a Video Conference system for facilitate company’s 
internal meetings, the group may choose as the central event 
of the discussion, actual technologies for video-conferences 
systems. Once the subject is chosen, a second session should 
be started to analyze the consequences of the implementation 
of this idea using Causal Layered Analysis (see section 2a). 
The expected outcome of this analysis is the filling of a table 
that contains the variables identified by each layer on CLA.   
The second stage is called the Modeling. After the subject 
is widely discussed by the group, a second session is opened 
for modeling a scenario that describes the consequences and 
impacts on the software development process from the 
perspective of the trend analyzed on the previous stage. For 
modeling the scenario, we suggest the use of the second 
version of Future Wheels technique. Consequently, the 
wheel must be sectioned into domains that may have some 
influences on the topic discussed. As an example, we divided 
a generic wheel on different contexts of impacts 
(educational, economical, political, etc.), as depicted on 
figure 4. 
Finally, the group will answer the following questions for 
each circle in each domain: 
(a)  What would happen if this circle is omitted from the 
implementation? 
(b) What requirement(s) should be implemented to 
prevent this from occurring? 
In a future scenario, the circles can be joined into one 
single circle in order to define a broader requirement that 
cover more than one consequence.  
At the end of the process, the group is expected to create a 
wide variety of requirements grouped by sections of 
interests. These requirements now can be used to compose a 
structured Requirement Documentation. 
. 
IV. 
CONCLUSIONS AND FUTURE DIRECTIONS 
    
  At this moment of our study, we are preparing a Quasi-
Experiment [7] to analyze the impact on time, quality and 
stakeholder’s feedback of the process. This experiment will 
take place at the Recife Advanced Center of Research and 
Study (CESAR) and will be applied on a new P2P Backup 
[8] [9] system that is being developed by local researchers 
[11][12] [13]. As it is a new area of study and there is a lack 
of solutions using this kind of technology, stakeholders are 
quite unsure about what requirements should be elicited for 
this particular system [10]. Our main goal is to guide their 
requirement tasks by combining these two powerful 
techniques described in the past sections of this article. 
Figure 4.  Example of a Future Wheel divided into sections [3] 
548
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

 
 In order to define specific goals for this experiment, we 
have established the following questions:  
 
 Q1 : What are the quantitative and qualitative benefits of 
using Refis from the point of the view of the stakeholders 
in the context of eliciting requirements in contrast of past 
methods used by the team? 
Q2 :  What strengths and weakness were identified during 
the technique appliance? 
Q3 : What other techniques can be combined with Refis? 
 
After the experiment evaluations, our academic and 
professional commitment is to present this work into 
further details to the science computer community as a 
new 
and 
promising 
methodology 
for 
eliciting 
requirements.  
 
V  ACKNOWLEDGMENTS 
 
This work was partially supported by the National 
Institute of Science and Technology for Software 
Engineering (INES¹), funded by CNPq and FACEPE, 
grants 573964/2008-4 and APQ-1037-1.03/08. 
 
REFERENCES 
[1] S. Inayatullah, “The causal layered analysis (CLA) 
Reader,” 2004. 
[2] S.I. This and S. Inayatullah, “Causal Layered Analysis 
- Deepening the future,” 2005, pp. 1-22. 
[3] J.C. Glenn, “The futures wheel,” Washington, DC: 
United Nations University.(Part of Glenn 1994a), 1994. 
[4] B. Nuseibeh and S. Easterbrook, “Requirements 
engineering: a roadmap,” Proceedings of the Conference 
on the Future of Software Engineering, ACM New York, 
NY, USA, 2000, pp. 35–46. 
[5] G. Sindre and A.L. Opdahl, “Eliciting security 
requirements 
with 
misuse 
cases,” 
Requirements 
Engineering, vol. 10, 2004, pp. 34-44. 
[6] M. Hadavi, V. Hamishagi, and H. Sangchi, “Security 
Requirements Engineering; State of the Art and Research 
Challenges,” 
Proceedings 
of 
the 
International 
MultiConference of Engineers and Computer Scientists, 
vol. 1, 2008, pp. 19-21. 
[7] G.E.L. Cohen and G. Susan G. Jr, “Effectiveness of 
Self-Managing Teams : A Quasi-Experiment,” Human 
Relations, Vol.47, No 1, 1994, pp. 13-43. 
[8] C. Miller, P. Butler, A. Shah, and A.R. Butt, 
“PeerStripe: a p2p-based large-file storage for desktop 
grids,” Proceedings of the 16th international symposium 
on High performance distributed computing, ACM, 2007, 
p. 222. 
[9] R. Butt, T. a Johnson, and Y.C. Hu, “Kosha: A Peer-
to-Peer Enhancement for the Network File System,” 
Proceedings of the ACM/IEEE SC2004 Conference, 
2004, pp. 51-51. 
[10] C. Batten, K. Barr, A. Saraf, and S. Trepetin, 
“pStore: 
A 
secure 
peer-to-peer 
backup 
system,” 
Unpublished report, MIT Laboratory for Computer 
Science, 2001, pp. 130-139.  
[11] M. Pinheiro, R. Assad, F. Ferraz, L. Ferreira, and S. 
Meira . An Availability Algorithm for Backup Systems 
Using Secure P2P Platform. In: International Conference 
of Software Engineering Advances, 2010, Nice, France. 
ICSEA, 2010, pp. 471-478. 
[12] T. Katter, R. Assad,  F. Ferraz, L. Ferreira, and S. 
Meira. Security Quality Assurance on Web-Based 
Application 
through 
Security 
Requirements 
Tests: 
Elaboration, Execution and Automation. In: International 
Conference of Software Engineering Advances, 2010, 
Nice, France. ICSEA, 2010, pp. 272-277. 
[13] F. Ferraz, R. Assad, and S.  Meira . A Relating 
Security Requirements and Design Patterns: Working 
with Design Pattern to reduce Security Requirements 
implementation impacts. In: International Conference on 
Software Engineering Advances, 2009, Porto, Portugal. 
ICSEA, 2009, pp. 9-14. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
¹INES – http://www.ines.org.br 
549
ICSEA 2011 : The Sixth International Conference on Software Engineering Advances
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-165-6

