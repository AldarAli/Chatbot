An Investigation into Reference Architectures for Mobile Robotic Systems
Daniel Feitosa and Elisa Yumi Nakagawa
Dept. of Computer Systems, University of S˜ao Paulo - USP
PO Box 668, 13560-970, S˜ao Carlos, S˜ao Paulo, Brazil
{feitosa, elisa}@icmc.usp.br
Abstract—Currently, robotic systems have been more and
more required for a diversity of new products, such as in
domestic robots and in robots for dangerous environments.
As a consequence, an increase in the complexity of these
systems is observed, requiring also considerable attention to
their quality and productivity. In another perspective, reference
architectures have emerged as a special type of software
architecture that achieves well-recognized understanding of
speciﬁc domains, facilitating the development, standardization,
and evolution of software systems. In this perspective, reference
architectures have also been proposed for the robotic domain
and they have been considered an important element to the de-
velopment of systems for that domain. However, there is a lack
of work that present an panorama about these architectures;
furthermore, there exists no support to choose a reference
architecture when developing or evolving robotic systems.
Thus, the main contribution of this paper is to present a
panorama about reference architectures of the robotic domain,
in particular, for mobile robots. It is worth highlighting that we
used the systematic review technique to identify and investigate
these architectures. We have found that these architectures have
in general become consolidated and have already contributed to
the industry during the development of robotic systems. Besides
that, results of our investigation could support the decision
about which architecture to adopt aiming to develop a new
software. Also, our analysis could help to create new reference
architectures. However, there are still important perspectives
of research that need to be investigated.
Keywords-robotic system; robot; reference architecture; sys-
tematic review.
I. INTRODUCTION
The ﬁeld of Robotics has presented an increasing growth
in the last years, impacting various sector of the society
and opening new, important application areas [1]. A number
of different types of robots has been developed and used
and, in particular, mobile robots have currently detached by
their relevance and range of applications. Good examples of
mobile robots are vacuum cleaners, vigilant robots, and map-
pers, including robots developed to be operated in dangerous
environments, sometimes, not accessible by human beings.
Furthermore, according to Graaf et al. [2], in the next years,
the market for these robots is forecasted to exponentially
grow and they will have more and more important roles. In
this perspective, the complexity of these mobile robots has
been increasing, creating a considerable challenge for their
development. Thus, both academic and industrial research
have focused on their development, aiming at achieving
quality in such systems and timely delivery [2]. It is also
worth highlighting that robots are basically composed by
mechanical devices (such as sensors and actuators) and
software systems (i.e., robotic systems) and the development
of these systems have been perhaps the major challenge.
In another perspective, software architectures have been
increasingly investigated as the main artifact that plays
a pivotal role in determining system quality, forming the
backbone of any successful software-intensive system [3].
More speciﬁcally, a reference architecture has achieved the
status of a special type of software architecture that captures
the essence of the system architectures of a given domain,
i.e., it encompasses the knowledge about how to design,
standardize, and evolve the system architectures of a speciﬁc
domain. Considering the relevance of reference architec-
tures, various application domains have proposed, used, and
reused the knowledge contained in such architectures. It
is worth highlighting that these architectures have been
sometimes developed by consortia that involve academy and
major industrial players (such as manufacturers and suppli-
ers). Thus, reference architectures have been considered as a
quite important element to improve productivity and quality
of the software systems.
Regarding robotic domain, several reference architectures
have been also proposed for the development and evolution
of mobile robots [4], [5], [6]. Each reference architecture
has its particular characteristics; besides that, they have
been successfully used in speciﬁc projects. However, in
the most cases, robotic systems for mobile robots have
been almost always developed and evolved without using
reference architectures, i.e., these systems are not taking
advantage of the knowledge contained in such architec-
tures in order to be more easily developed and evolved.
This fact can be the result of the difﬁculty to select an
more adequate architecture. Thus, a detailed, comprehensive
panorama about these architectures will be in fact important.
However, there is a lack of such panorama about reference
architectures for the robotic domain.
In this scenario, the main contribution of this paper is to
present a broad panorama of the reference architectures for
robotic systems, as well as an more detailed investigation
among these architectures. In the context of this work, we
have focused in reference architectures for mobile robots. It
is important to say that in order to ﬁnd these architectures,
465
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

we adopted and conducted a systematic review [7], i.e.,
an efﬁcient and effective technique to summarize, assess,
and interpret all evidence related to a speciﬁc question,
topic area, or phenomenon of interest. Besides that, we
complemented our investigation using additional documents
related to each reference architecture found. As main results,
we have observed, in the last years, an increase in the
number of reference architectures for robotic systems. These
facts have evidenced a real interest by both academy and
industry. Moreover, our investigation could be considered as
a valuable element during the selection of a more adequate
architecture for the design and evolution of robotic systems
for mobile robots. Moreover, our results could be used as
a start point to the proposal of new reference architectures
for mobile robots domain. Finally, this work could make it
possible to identify interesting and important research topics
for further investigations.
This paper is organized as follows. In Section II, we
present an overview on mobile robots and reference archi-
tecture, since these topics are important to understand our
analysis. In Section III, we present the methodology used
to systematically identify reference architectures. In Section
IV, we describe each reference architecture found. In Section
V, we present a comparison among these architectures. In
Section VI, we discuss about the achieved results. Finally,
in Section VII, we summarize our contributions and discuss
perspectives for further work.
II. BACKGROUND
The ﬁeld of Robotics encompasses several types of robotic
applications, such as robotic arms for assembly lines, house-
hold robots, and military robots. In this context, an important
type is mobile robots, which also are basically composed by
software and hardware projects. The software implements
the robotic control system (i.e., robotic system), which is
responsible for analyzing the sensor signals, planning and
decision-making, and control of actuators. In parallel, the
hardware is responsible for the physical implementation of
sensors, actuators (responsible for robot’s movement and
actions), and data processing (the basic components for
partial or total autonomy of the robots) through the use
of an embedded processor. In particular, sensors are the
hardware components responsible to give the robot the
“vision” of the world, representing different senses, such
as vision and hearing, and allowing the robot to interpret
the environment. Otherwise, actuators enable the robot to
interact with the environment, allowing the robot to move
and perform actions, such as picking or pushing objects.
Regarding robotic system, it enables the robot to develop
essential, complex, and intelligent activities. For instance,
it also determines the robot autonomy level, from tele-
operation to autonomous behavior. Thus, the main activities
performed by a robot are: navigation, localization, and
mapping. Navigation is the act of controlling the movement
of the robot from an initial position to a target position.
The task of navigation is usually implemented through the
use of a control architecture which represents how the robot
behaves. Localization consists of estimating the position of
the robot in the environment. This activity is essential and
basic for the robot navigation. If a robot determines exactly
its position, it will be capable of planning a path to its desti-
nation and will fulﬁll adequately the tasks allocated to it [8].
Mapping, i.e., the act of getting data on the environment and
the construction of maps, is an estimation problem which
is a major task for the development of autonomous mobile
robots. A correct map of the environment is fundamental
to ﬁnd the most efﬁcient path. Through the map, the robot
checks the possible paths that lead to the desired position
and the obstacles that must be avoided [9].
In another perspective, considering the relevance of ref-
erence architectures, a diversity of them for various do-
mains can be found, such as for automotive (e.g., the
AUTOSAR [10]), and commerce (e.g., Microsoft Reference
Architecture for Commerce [11]). They have served as an
important basis for the software systems development, since
these architectures have proved their efﬁciency regarding
improvement in productivity during software development.
Reference architectures have also been built for different
purposes [12]: (i) improvement of interoperability among
different components of software systems; (ii) standardiza-
tion of software systems of a given domain or of a company;
and (iii) reuse of knowledge from domain experts regarding
development of systems for that domain.
In this context, the robotic community has also noticed
that the establishment of reference architectures for robotic
systems of mobile robots is also quite interesting. Thus,
several architectures can be also found. However, selecting
a more adequate architecture aiming at using this one as
basis of the development of new robotic systems, as well
as evolution of existing systems, is still a hard task. There
is not a complete panorama of these architectures and also
information or guidelines that support selection of such
architectures. This scenario has therefore motivated this
work.
III. FINDING THE REFERENCE ARCHITECTURES
In order to speciﬁcally ﬁnd reference architectures which
could be applied to the development of robotic systems
for mobile robots, we performed an exhaustive search con-
ducting a systematic review. Our systematic review was
conducted from December/2011 to January/2012, following
the process proposed by Kitchenham [7]. In short, this
process presents three main phases: (i) Phase 1 - Planning:
In this phase, the research objectives and the review protocol
are deﬁned. The protocol constitutes a pre-determined plan
that describes the research questions and how the systematic
review will be conducted; (ii) Phase 2 - Conduction: During
this phase, the primary studies are identiﬁed, selected and
466
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

evaluated according to the inclusion and exclusion criteria
established previously. For each selected study, data are
extracted and synthesized; and (iii) Phase 3 - Reporting: In
this phase, a ﬁnal report is formatted and presented.
In short, we established one research question: “Which
existing reference architectures could be applied to develop
robotic systems to mobile robots?” We then identiﬁed
the main keywords — “reference architecture”, “robot”,
and “unmanned ground vehicle” — and we established
a search string considering these keywords and their
possible synonymous: ((‘‘reference architecture’’
OR ‘‘reference model’’) AND (‘‘robot’’ OR
‘‘robotic’’ OR ‘‘unmanned ground vehicle’’ OR
‘‘UGV’’ OR ‘‘intelligent vehicle’’)). We added
“reference model” in the search string, since it is sometimes
used to refer to reference architecture. We also added
“intelligent vehicle” to refer to mobile robots. Finally, to
ﬁnd the works (also primary studies in the systematic review
context), we used main publication databases: ACM Digital
Library [13], IEEEXplore [14], ISI Web of Knowledge
[15], and Scopus [16]. As a result of our search in these
databases using the search string, a total of 409 primary
studies were discovered. Removing the repeated studies,
we had 371 unique studies. The title and abstract sections
of each study were read and a total of 14 studies were
selected for further reading. Next, these studies were read
in full and, ﬁnally, seven reference architectures that are
applicable to mobile robots were identiﬁed: 4D/RCS [17],
ACROSET [18], AIS [6], JAUS [5], Robot Teleoperation
[4], Servicebots [19], and SMAS [20]. For the selection of
these architectures, we considered reference architectures
that ﬁlled three main requirements: (i) the architecture
presents a set of pre-deﬁned functionalities that could be
contained in robotic systems; (ii) the architecture explains
the interaction among these functionalities; and (iii) the
architecture permits the derivation of software architectures
and their respective systems. It is important to say that
these requirements are essential to reference architectures,
if it is intended in fact to use them to the robotic system
development.
It is important to say that the objective of the systematic
review was then to identify all reference architectures ap-
plicable to mobile robots. Furthermore, a second search for
speciﬁc information of these architectures was conducted
considering additional documents, such as the web sites,
books, papers in conferences and journals, and any other
documents that could support to conduct our analysis.
IV. DESCRIPTION OF THE REFERENCE ARCHITECTURES
Based on the seven reference architectures that are ap-
plicable to the mobile robots, we conducted a detailed in-
vestigation on each one and developed a comparison among
them. In Table I, each reference architecture is presented
together with name and type of the mobile robots. Below,
we present an overview of each reference architecture.
The 4D/RCS reference architecture provides a theoreti-
cal foundation for designing, engineering, integrating, and
testing intelligent software systems for unmanned vehicle
systems [17]. It consists of a multi-layered multi-resolutional
hierarchy of computational nodes, each containing elements
of sensory processing (SP), world modeling (WM), value
judgment (VJ), and behavior generation (BG). From high
levels to low levels, the reference architecture contains func-
tionalities that permit goal deﬁnition, going to perception,
cognition, and reasoning, involving sensors and actuators.
According to its author, this architecture enables precise and
fast responses in lower levels while it formulates plans and
abstracts concepts in higher levels.
The JAUS [21] reference architecture uses a message
passing protocol to provide interoperability among sub-
systems and components that compose systems resulting
from this architecture [5]. JAUS presents a service-oriented
approach to enable distributed command and control of these
systems. The reference architecture provides information
about how to enable online interoperability of unmanned
systems and their components. For that, JAUS deﬁnes a set
of basic services which are required by most higher level
components, and they are deﬁned in JAUS Core Service Set
(JSS Core).
The ACROSET is a component-oriented reference ar-
chitecture for teleoperated service robots [18]. Its main
characteristic is the reuse of components from different
systems. The reference architecture is composed by sub-
systems: Coordination, Control and Abstraction Subsystem
(CCAS); Intelligence Subsystem (IS); User Interaction Sub-
system (UIS); and Safety, Management and Conﬁguration
Subsystem (SMCS). The CCAS abstracts and encapsulates
the functionality of the physical devices of the robots. This
subsystem is composed by virtual components that can
be implemented in either software or hardware. Besides
that, in order to deal with operator-driven, semi-autonomous
systems, the IS was inserted in this architecture. This
subsystem permits to have different types of user (and
even an autonomous subsystem). The UIS is responsible
for interpreting, combining, and arbitrating among orders
that may come simultaneously from different users. Finally,
the SMCS presents two main functionalities: (i) the mon-
itoring of functionalities from other subsystems; and (ii)
management and conﬁguration of the initialization of the
application.
The Servicebots reference architecture was designed to
service robots operating in indoor environments [19]. In
this context, service robots are those supposed to perform
tasks (like mail delivery, tourist guide, etc) in buildings
of a whole variety of characteristics [19]. The reference
architecture is composed by three subsystems that use the
IT (Information Technology) backbone (i.e., the local area
467
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

Table I
REFERENCE ARCHITECTURES FOR MOBILE ROBOTS
Name
Type
4D/RCS [17]
Unmanned ground vehicles
JAUS [5]
Unmanned systems
ACROSET [18]
Teleoperated service robots
Servicebots [19]
Indoor service robots
SMAS [20]
Situated multi-agent systems
Robot Teleoperation [4]
Robots with many controllers
AIS [6]
Adaptive intelligent systems
network) to communicate and complete the task; these three
subsystems or types of robots are: servicebots, ﬁxbots, and
softbots. The type servicebots is a robot capable of driving
autonomously only with sensorial information in an average
complex environment (e.g., corridors). The ﬁxbots present
sensor and actuators distributed all over the environment,
having their own intelligence and communication channel.
The softbots refer to the software agents executing various
tasks for the requesting user, ﬁxbot or servicebot. Thus,
the reference architecture is concerned with performance,
conﬁguration, problem, human-interface, and security man-
agement.
The SMAS reference architecture provides a blueprint
for architectural design of multi-agent system applications
[20]. It is composed by two subsystems: the agent and
the application environment. The ﬁrst one comprises three
modules: (i) perception through getting information from
the environment; (ii) decision making, selecting the agent
action; and (iii) communication, responsible for interactions
with other agents. The second subsystem comprises seven
modules: (i) representation generator, perceiving the envi-
ronment; (ii) interaction, dealing with agents’ inﬂuences
in the environment; (iii) communication service, collect-
ing messages and delivering messages to the appropriate
agents; (iv) observation, observing the deployment con-
text; (v) synchronization, monitoring domain-speciﬁc parts
of the deployment context and keeping the corresponding
representation in the state of the application environment
up to date; (vi) dynamics, maintaining processes in the
application environment that happen independent of agents
or the deployment context; and (vii) translation of inﬂuences
and messages into low-level interaction primitives with the
deployment context, and low-level formatted messages into
messages for agents.
The Robot Teleoperation reference architecture is con-
cerned with robots having different controllers [4]. To
achieve the objective, the reference architecture was pro-
posed according the deﬁnition of Bass [22]. Thus, a domain
analysis was made to identify the set of components, fol-
lowed by the domain design to make the generic design,
where patterns and common models could be used. The
main identiﬁed components were: graphical representation,
collisions detection, user interface, communications and, the
most important, controller. To specify how the different
components are going to interact, two architectural styles
were selected: (i) client-server, used in the interactions be-
tween graphical representation (client) and collisions detec-
tion (client) with controller (server); and (ii) communicating
processes, used in the interactions between user interface
and communications with controller, because all of them
can take the initiative to send data.
Finally, the AIS reference architecture is a heterogeneous
mixture of common architectural styles [6], permitting the
creation of various adaptive intelligent systems. It is divided
hierarchically into layers for different sets of computational
tasks. Properties of pipe and ﬁlter style architectures are
provided by the layers and relations among them. Thus, the
reference architecture has two layers (or levels): the physical
level, responsible for action and perception in external be-
haviors; and the cognitive level, responsible for more abstract
reasoning activities (e.g., planning, problem solving, etc).
The components comprising each layer are organized in a
blackboard style, allowing a range of potentially complex
behaviors, since basic functionalities provided in each level
can work together to perform more complex functionalities.
After investigating each reference architecture, a com-
parison among them was developed, aiming at providing
information in order to better support selection of one or
more architectures when developing new robotic systems
or evolving existing ones. Also, we expect this analysis
supports the proposal of new reference architectures, since
we present a set of main features present in the analyzed
architectures. Moreover, the comparison will not point out
which reference architecture is better, because each one has
its speciﬁc requirements and application environment.
V. ANALYSIS OF THE REFERENCE ARCHITECTURES
Regarding analysis of the reference architectures, we also
adopted the systematic guidelines proposed by systematic
review. For this, we deﬁned three perspectives and compared
these architectures: context of application, maturity, and
functionalities. To the ﬁrst perspectives, we analyzed each
reference architecture determining if they were developed in
an academic context or in a industrial context. The result of
this analysis is presented in Table II. We observed that both
industry and academy are interested in proposing reference
architectures.
Considering other domain where the success of a refer-
ence architecture depends on involvement of the industry,
we can observe that reference architectures for mobile robots
present good perspective of success, since more than half of
the architectures present efforts from industry. Besides that,
if selection of an architecture is necessary, it is more inter-
esting to select architectures that have efforts from industry.
468
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

Table II
CONTEXT OF DEVELOPMENT OF THE REFERENCE ARCHITECTURES
Reference Architecture
Development Context
4D/RCS
Industrial
JAUS
Industrial
ACROSET
Industrial
Servicebots
Academic
SMAS
Academic
Robot Teleoperation
Industrial
AIS
Academic
Thus, 4D/RCS, JAUS, ACROSEFT, and Robot Teleoperation
could be ﬁrst considered. However, each architecture has its
characteristics and knowledge aggregated; hence depending
on the purpose of the robotic system to be develop a speciﬁc
architecture could be more adequate than another one.
Aiming at determining the maturity level of the architec-
tures (i.e., how much they are evaluated), we established
three levels: (i) Architectural instantiation: the reference
architecture was only instantiated, i.e., the design of robotic
systems was developed, but no implementation is presented;
(ii) Implementation: at least a robotic system was imple-
mented based on the reference architecture, through, for
instance, a case study; and (iii) Use in real situation:
the reference architecture is in fact already used in real
situations, in particular, in the industry. This fact shows a
higher level of maturity of the architecture. Table III shows
the result of our investigation. As result, we have observed
that reference architectures for mobile robots are in general
mature, since three architectures present implementation of
robotic systems based on the architecture; besides that, the
most of them (i.e., four architectures) have been already
used in the industry. Therefore, 4D/RCS, JAUS, ACROSET,
and Robot Teleoperation seem to be the best choices to
be considered in the adoption of a reference architectures,
considering their maturity.
Table III
MATURITY LEVEL OF THE REFERENCE ARCHITECTURES
Reference Architecture
Maturity Level
4D/RCS
Use in real situation
JAUS
Use in real situation
ACROSET
Use in real situation
Servicebots
Implementation
SMAS
Implementation
Robot Teleoperation
Use in real situation
AIS
Implementation
The analysis of the last perspective was the most difﬁ-
cult to be conducted, since we needed to determine a set
of functionalities that comprise all reference architectures
and, frequently, we found sub-functionalities inside other
one. Thus, we deﬁned 10 functionalities and indicated, for
each reference architecture, if each functionality is present
partially, completely, or not explicitly present. The result of
this investigation is presented in Table IV, where an “X” in-
dicates a functionality completely present, an “X*” refers to
a functionality partially present, and a blank space indicates
functionality not present. Therefore, these architectures have
presented a range of functionalities, partially or completely,
and, in general, ACROSET seems to be the most complete
architecture. Furthermore, our investigation could provide
important information to guide the selection of a more
adequate reference architecture. For instance, if functionality
“Decision judgement” is required in the robotic system to
be developed, it is interesting select ACROSET than other
architectures. Besides that, this table provides important
information about which functionalities could be inserted in
the architectures in order to become them more complete.
Considering the set of functionalities identiﬁed in this work,
“owners” of these architectures could have a direction about
how to evolve their architectures, if desired. This set can
also support the proposal of new reference architectures,
since they can be considered as a basic set of functionalities
because they are present in a signiﬁcant number of reference
architectures. Moreover, each functionality can be explored
in depth, if necessary. In order to use these architectures,
a detailed study could be necessary to understand speciﬁc
points of them.
It is important to highlight that these results do not
indicate if a reference architecture is better than another
one. Besides that, there exists also functionalities or aspects
of reference architectures which were not discussed in this
work, because they are not important for mobile robots.
VI. DISCUSSION
The investigation presented in this work intends to support
selection of reference architectures for new projects, to
the evolution of existing ones or to the proposal of new
reference architectures; thus, productivity and quality of
the mobile robotic systems could be possibly improved. In
general, robotic domain presents good perspectives regard-
ing reference architectures, mainly because industry have
been involved in the establishment of such architectures.
Regarding their documentation, in general, these architec-
tures are well-documented; however, several of them, for
instance, that presented in [18] and [4], could present a more
comprehensive representation, if it is intended an adequate
dissemination of their architectures. In this perspective, these
architectures will have more chances to provide an effective
contribution to the robotic area.
Besides that, it was clear the potential of these archi-
tectures, since they permit to derive as many components.
469
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

Table IV
FUNCTIONALITIES CONTAINED IN THE REFERENCE ARCHITECTURES
Functionality
Reference Architecture
4D/RCS
JAUS
ACROSET
Servicebots
SMAS
Robot Teleoperation
AIS
Sensorial processing
X
X
X
X
X*
X*
X
Controlling
X
X
X
X
X
X
X
Collision detection
X
X*
X*
X*
X
X*
World mapping
X*
X*
X
Action planning
X
X*
X*
X*
X
X
User interfacing
X
X
X
X*
X
Communication
X
X
X
X
X
X*
Security
X
X
X
Decision judgement
X
X*
X*
Multi-robotic interaction
X*
X*
X
X
X*
However, we noticed that some reference architectures, in
particular [19], could have their components and function-
alities presented in more detailed way.
Based on our investigation, new topics of research can
be identiﬁed. Thus, the most important ones that we have
observed are:
• Establishment of a general, unique, and complete refer-
ence architecture for mobile robotic systems, containing
possibly all functionalities, constraints, other important
information related to robotic system development. This
architecture could facilitate therefore the development
of any robotic systems;
• Proposal of mechanisms (such as frameworks and
components already implemented, as well as support
tools) to easily use the reference architectures, since
architectures found in this work do not provide in
general an adequate automated support; and
• Proposal of complete guidelines to use the reference
architectures for mobile domain, since most studies
make it more succinctly. However, there are other
studies presenting well-speciﬁed, detailed guidelines,
including the entire architecture. Thus, it is possible to
identify this topic as a trend in reference architectures
for robotic systems.
Regarding the limitation of this work, other sources
of information could be used, possibly resulting in more
reference architectures to be studied and, as consequence,
achievement of a more comprehensive investigation. In an-
other perspective, we considered only reference architectures
applicable to mobile robots; however, this experience could
be extended to other types of robots, such as production
line robots. Furthermore, the conduction of a systematic
review involving a new research area — in our case, mobile
robotic systems — is not easy, since there is not a consensus
in concepts/terms used by different reference architectures;
thus, sometimes, it was necessary to infer a conclusion to
make some decisions.
VII. CONCLUSION AND FUTURE WORK
The main contribution of this work is to present an
panorama of the reference architectures which could be ap-
plied in the development of mobile robotic systems. In gen-
eral, good initiatives can be found, including architectures
that have been used in the industry context. Furthermore,
besides our suggestion of future research topic in this area,
we believe that this investigation could contribute to the
robotic community to open other research ﬁelds in mobile
robots and related areas.
Motivated by the achieved results, we intend to conducted
a detailed, comprehensive investigation involving other types
of robotic systems, for instance, production lines robots,
intending to contribute to a more effective development of
robotic systems.
In a parallel work, we are proposing a new reference
architecture aiming at the development of multi-robotic
systems for indoor service robots. Thus, we hope that the
emerging ﬁeld of robotics can be supported by our reference
architecture.
ACKNOWLEDGMENT
This work is supported by Brazilian funding agencies
FAPESP and CNPq, and Capes. Also, the authors would
like to thank to the National Institute of Science and Tech-
nology on Critical Embedded Systems (INCT-SEC) (Grant
N.: 573963/2008-8 and 2008/57870-9).
REFERENCES
[1] E. Ruffaldi, E. Sani, and M. Bergamasco, “Visualizing per-
spectives and trends in robotics based on patent mining,” in
ICRA’10, Anchorage, Alaska, 2010, pp. 4340–4347.
470
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

[2] B. Graaf, M. Lormans, and H. Toetenel, “Embedded software
engineering: The state of the practice,” IEEE Software Engi-
neering, vol. 20, no. 6, pp. 61–69, 2003.
[3] P. Kruchten, H. Obbink, and J. Stafford, “The past, present,
and future for software architecture,” IEEE Software, vol. 23,
no. 2, pp. 22–30, 2006.
[4] B. ´Alvarez, A. Iborra, A. Alonzo, and J. A. De la Puente,
“Reference architecture for robot teleoperation: Development
details and practical use,” Control Engineering Practice,
vol. 9, no. 4, pp. 395–402, 2001.
[5] M. N. Clark, “JAUS compliant systems offers interoperability
across multiple and diverse robot platforms,” in AUVSI’2005,
Baltimore, USA, 2005, pp. 249–255.
[6] B. Hayes-Roth, K. Pﬂeger, P. Lalanda, P. Morignot, and
M. Balabanovic, “A domain-speciﬁc software architecture for
adaptive intelligent systems,” IEEE Transactions on Software
Engineering, vol. 21, no. 4, pp. 288–301, 1995.
[7] B. Kitchenham, “Procedures for performing systematic re-
views,” Keele University, Tech. Rep. TR/SE-0401, Jul. 2004.
[8] D. Fox, W. Burgard, and S. Thrun, “Markov localization for
reliable robot navigation and people detection,” in Interna-
tional Workshop on Sensor Based Intelligent Robots, LNCS:
1724, Dagstuhl Castle, Germany, 1999, pp. 1–20.
[9] S. Thrun, W. Burgard, and D. Fox, Probabilistic Robotics,
ser. Intelligent robotics and autonomous agents.
The MIT
Press, Aug. 2005.
[10] AUTOSAR, “AUTOSAR (AUTomotive Open System AR-
chitecture),” [On-line], World Wide Web, 2011, available in:
http://www.autosar.org/ (accessed 02/25/2012).
[11] Microsoft, Microsoft Reference Architecture for Commerce
Version 2.0, ser. Patterns & practices. Microsoft Press, 2002.
[12] E. Y. Nakagawa, F. Oquendo, and M. Becker, “Ramodel:
A
reference
model
of
reference
architectures,”
in
WICSA/ECSA’2012, Helsinki, Finland, 2012, pp. 1–5.
[13] ACM, “ACM Digital Library,” [On-line], World Wide Web,
available in: http://portal.acm.org (accessed 01/28/2012).
[14] IEEE, “IEEE Xplore,” [On-line], World Wide Web, available
in: http://ieeexplore.ieee.org (accessed 01/26/2012).
[15] ISI, “ISI Web of Knowledge,” [On-line], World Wide
Web, available in: http://apps.isiknowledge.com (accessed
01/24/2012).
[16] Elsevier, “SciVerse Scopus,” [On-line], World Wide Web,
available in: http://www.scopus.com (accessed 01/28/2012).
[17] J. S. Albus, “4D/RCS - a reference model architecture for
intelligent unmanned ground vehicles,” Unmanned Ground
Vehicle Technology, vol. 4715, pp. 303–310, 2002.
[18] F. Ortiz, D. Alonso, B. Alvarez, and J. Pastor, “A reference
control architecture for service robots implemented on a
climbing vehicle,” in Ada-Europe’10, LNCS: 3555, York, UK,
2005, pp. 13–24.
[19] L. Peters, M. Pauly, and A. Arghir, “Servicebots - a scal-
able architecture for autonomous service robots,” in FUZZ-
IEEE’00, vol. 2, San Antonio, USA, 2000, pp. 1013–1016.
[20] D. Weyns and T. Holvoet, “A reference architecture for
situated multiagent systems,” in E4MAS’06, LNCS: 4389,
Hakodate, Japan, 2006, pp. 1–40.
[21] JAUS, “JAUS (Joint Architecture for Unmanned Systems),”
[On-line], World Wide Web, 2012, available in: http://www.
openjaus.com/ (accessed 01/17/2012).
[22] L. Bass, P. Clements, and R. Kazman, Software Architecture
in Practice, 2nd ed.
Addison-Wesley, 2003.
471
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

