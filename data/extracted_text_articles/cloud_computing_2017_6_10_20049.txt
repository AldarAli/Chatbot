A Load Balancing Mechanism Based on Fuzzy Nonparametric Analysis of QoS
Parameters
Dmytro Halushko, Oleksandr Rolik
Department of Automation and Control in Technical
Systems, National Technical University of Ukraine “Kyiv
Polytechnic Institute”
Kyiv, Ukraine
e-mail: dmytro.halushko@lll.kpi.ua, o.rolik@kpi.ua
Volodymyr Samotyy
Department of Automatic Control and Information
Technology, Faculty of Electrical and Computer
Engineering, Cracow University of Technology
Cracow, Poland
e-mail:vsamotyy@pk.edu.pl
Abstract – Load balancing enables the increase the productivity
and quality of services being provided by data centers. It is
suggested to use virtual machines for a more flexible allocation
of data center resources. The proposed two-step method
provides a statistical evaluation of service quality without any
assumptions about
the probability
characteristics
of
the
processes occurring in the data center. The result of this
evaluation is used in load balancing between several virtual
machines. The proposed
method is implemented in the
management system for the SLA-defined service quality
management. The results of this implementation are presented
in the paper.
Keywords – QoS; fuzzy logic; nonparametric statistics;
zonoids; load balancing.
I.
INTRODUCTION
Data centers provide a scope of services to their
customers. Quality of Service (QoS) is specified in the
Service Level Agreement (SLA) and directly dependents on
the volume of Internet Technology (IT) resources they have
allocated, the number of users using this service, etc.
In order to avoid losses due to non-compliance of SLA,
the data center manager monitors the quality of provided
services. When quality degrades considerably, then the
volume of resources that support these services needs to be
increased. However, an excessive increase in the volume of
resources leads to financial losses for the data centers.
Therefore, it is necessary to implement a continuous
monitoring of the allocated resource volume in such a way
that the quality of this service will correspond to the
stipulations in the SLA with a minimum number of allocated
resources. Service Level Management and allocation of
resources are managed by control systems of the data center.
For the distribution of tasks or user requests to the data
centers, load balancers interacting with management systems
are used.
The remainder of the paper is organized as follows: in
Section II, the related work is discussed. The method which
enables to determine the quality of service provided is
described in Section III. In Section IV, the application of
estimated
QoS
value in
load
balancing
is described.
Theoretical
calculations
have
been
confirmed
by
the
experiments, results of which are shown in Section V. The
paper is concluded with Section VI, where the results and
future research directions are addressed.
II.
RELATED WORK
In [1], the authors propose a load balancing algorithm to
optimally distribute the incoming tasks in the cloud data
centers.
In
[2],
the
authors
propose
a
virtualization
framework that makes background load balancing more
flexible and less resource intensive. The authors of article [3]
formulate a load balancing problem as a robust optimization
problem, that minimizes the worst-case cost of a given data
center’s services. Another approach to solving this problem
is described in [4]. The authors propose to differentiate the
SLA agreements with different kinds of hosting, using
several criteria.
In [5], the authors propose a method for aggregating
quality metrics of an IT infrastructure component to estimate
its
functioning. The method
is based on
the
graph-
representation of the IT infrastructure and a non-parametric
statistic. It enables to aggregate the parameters which have
different types and which impact the quality of component
functioning in generalized parameters. This method solves
the problem of generalization of element parameters by
representing them in a single parametric space with the
possibility
of
projection
to
the
quality
axis.
This
generalization takes into account the probabilistic side of
consideration
of elements
not
being
attached
to
any
distribution by using non-parametric models.
One should also take into account the geolocation of the
data center servers. The authors in [6] propose to manage the
data center’s servers by activating or deactivating certain
servers in data center. This approach takes into account the
fact that not all servers of data centers are located at the same
place.
III.
FUZZY NONPARAMETRIC ANALYSIS OF QOS
A data center is composed of many computation and
storage nodes. Each node has a series of IT resources, such
as central processing unit (CPU), random access memory
(RAM), physical memory, network bandwidth, etc.
The proposed two-step method provides a statistical
evaluation of QoS without any assumptions about the
probability characteristics of the processes occurring in the
data center.
102
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

A.
Defining of the IT resources that affect the functioning
of data center’s services
Assume that the provider offers users a set
{ }
is
S =
,
1,
i
K
=
of services. For each service, one or several
identical virtual machines (VM) Vj,i,
1,
i ,
j
M
=
1,
,
i
K
=
where Mi is the maximum number of VM, can be allocated
for the maintenance of the i-th service. Each VM supports
only one service.
Resources from a Rm,
1,
m
L
=
are allocated to each
virtual machine, where L represents the number of different
types of resources at the data center. The volume rm,i,
1, ,
m
L
=
1,
i
K
=
of resources of the m-th type is allocated
to each VM supporting the i-th service. The volume of
allocated resources to each VM supporting the i-th service is
defined by requirements of the i-th,
1,
i
K
=
service. In the
course of operation, each VM Vj,i,
1,
i ,
j
M
=
1,
i
K
=
actually involves the volume
*
,
rm i
,
1, ,
m
L
=
1,
i
K
=
of the
m-th resource type. The size
*
,
rm i
dynamically changes and
depends on the number of users of the i-th service and the
type of user requests.
For each i-th service from a set of services S
within
process of Service Level Management (SLM) quality
indicators are defined. The measure values
,
qb i
,
1,
i
b
D
=
,
1,
i
K
=
of quality approved by the customer are agreed upon
in SLA, where
,
qb i
is a value of the b-th indicator of quality
of the i-th service, and
i
D is the number of indicators of
quality of the i-th service. The services should be monitored
to ensure the specifications in the SLA level of QoS. For this
purpose, the control system defines the actual values
,
* ,
b i
q
1,
i ,
b
D
=
1,
i
K
=
of quality indicators, and compares them
to the approved values. SLM is aimed at the constant
maintenance of service quality at the approved level.
 
*
,
,
0,
,
b i
b i
q
q
b i
−
→
∀
. 
(1) 
As each service is provided by several VMs Vj,i,
1,
i ,
j
M
=
1,
i
K
=
, it is rather labor-consuming to trace the
current measure values
, ,
* ,
qj b i
1,
i ,
j
M
=
1,
i
b
D
=
,
1,
i
K
=
of quality of each VM which provides the i-th service with
subsequent assessment of the final quality level of apply the
service provided by the data center. Therefore, authors
proposed to use the indirect method of a quality evaluation of
services by applying the methods of non-parametric analysis
and fuzzy logic. Use of fuzzy logic in case of a quality
evaluation of services is caused by the fact that the
assessment by the user of the services is received by the
service provider with use of the linguistic variable accepting
values from "it is very bad" to "perfect".
The essence of a method is that, on the basis of the
saved-up statistics for VM providing the i-th service, the
dependence of values
,
* ,
,
qb i
∀b i
of quality indicators on
values
*
, ,
,
rm i
∀m i
of the involved volumes of the data center
resources is established. The management of services quality
comes down to the fact that the management system
permanently makes determination of the involved volumes
*
,
rm i
of resources of each VM Vj,i,
1,
i ,
j
M
=
1,
.
i
K
=
Then
the management system estimates the current level
, ,
*
qj b i
of
the b-th,
1,
i
b
D
=
quality indicator of service, provided by
VM Vj,i,
1,
i ,
j
M
=
1,
i
K
=
and causes the decision on
management of the level of services. At the same time, two
controlling mechanisms on the maintenance of the level of
services within SLA level are applied. One mechanism is
based on the scope of changes of the resources allocated for
service maintenance. In this work, an increase or reduction
of the number of VM providing services is performed. Other
mechanisms use load balancing for VM. At the same time,
for each i-th service,
1,
i
K
=
a new load balancer is initiated,
which is a component of the management system.
In the absence of assumptions about the nature of the
dependencies between the value
, ,
* ,
qj b i
1,
i ,
j
M
=
1,
i
b
D
=
,
1,
i
K
=
of the service quality and the values
*
,
rm i
,
1,
i ,
m
L
=
1,
i
K
=
of used resource types, as well as the possibility of
the existence of any kind of relationship between the quality
of service provided by separate VMs and the total quality of
service provided by data center, it is expedient to apply
expert
estimation,
the
fuzzy
logic
apparatus
and
the
apparatus of nonparametric analysis.
As
in
this
paper
homogeneous
servers
are
being
considered, and VMs Vj,i,
1,
i ,
j
M
=
which provide the i-th
service, have identical characteristics, then the dependence
established between an indicator of quality
, ,
* ,
qj b i
and volume
of the involved resources
*
,
rm i
the index j can be excluded.
Geometric estimation of nonparametric statistics is used
in analysis of dependences between values of volumes
*
, ,
,
rm i
∀m i
of resources which consume VMs providing the i-
th service and values of indicators of quality
,
* ,
qb i
1,
i ,
b
D
=
1,
i
K
=
of the i-th service which it provides. The projection
of the zone responding to a certain value of the linguistic
QoS variable establishes connection of measured values of
quality with the VM resources.
B.
Converting the quality indicators to fuzzy variables
By means
of a
fuzzy logical conclusion [7] the
dependence between values
,
* ,
qb i
1,
i ,
b
D
=
1,
i
K
=
and
integral quality estimation
Qi ,
1,
,
i
K
=
of the i-th service
which is also fixed within SLA is established. The integral
quality estimation
Qi ,
of the i-th service is usually described
by
a
linguistic
variable
and
linguistic
value,
which
correspond to the quality estimation of the user.
103
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

Integral quality estimation
i
Q of the i-th service and
indicators of quality
,
* ,
qb i
∀b
of the i-th service are described
by linguistic values from sets of {
, }
,
Q
il ω
1,
,
i
K
=
1,
i
ω =
Ω
and {
, , }
,
q
lb i
γ
,
1,
b i
γ =
Γ
, where
Ωi
is the amount of the
linguistic values corresponding to integral quality estimation
of the i-th service,
,
Γb i
is the amount of the linguistic values
describing the quality indicators
, ,
qb i
1,
i
b
D
=
of the i-th
service
1,
.
i
K
=
To
each
, ,
Q
il ω
1,
i
ω =
Ω
and
, , ,
q
lb i
γ
,
1,
b i
γ =
Γ
are mapped to fuzzy sets
,
Q
Ψi ω
and
, ,
q
b i γ
Ψ
respectively.
At the fuzzification stage, a degree of belonging
, ,
q
Lb i
γ of
the values
, ,
,
qb i
∀b i
to fuzzy sets
, ,
q
Ψb i γ
,
1,
b i
γ =
Γ
is
defined.
For each service
is ,
1,
i
K
=
, the Li-dimentional space is
defined where to each axis the type Rm,
1,
m
L
=
of the data
center´s resource is mapped. At points of such space, the
value of coordinates corresponds to a certain value of the
volume of the involved resources
*
,
rm i
of VM.
For all fuzzy values
, ,
,
,
1,
q
b i
b i
l
γ γ


∈
 Γ
 the
,
b i
P
reference
points having property (4) are chosen.
 
, , '
, , '',
q
q
b i
b i
L
L
γ
γ

 
(4) 
where
,
', ''
1,
b i
γ γ


∈
 Γ

and
'
''
γ
≠ γ
.
Such
points
set
reference area in space for the fuzzy set
, ,
q
Ψb i γ
.
For such point set the central ordered regions of the given
depth α is constructed. Due to a number of useful properties
described in the definitions [8] of central ordered regions, the
most suitable notation is zonoid [9] – a convex polyhedron
with such useful properties as:
•
the affinity equivariance that "binds" the location
estimate to elements;
•
the completeness of information that provides a
unique evaluation;
•
the continuity in depth (depth defines the region
centrality);
•
the distribution that ensures stability of the solution
to the input data;
•
the bulge that simplifies the calculation of degree of
belonging.
The zonoid has an appearance of a convex polyhedron
and is set by formulas:
 
( )
{
}
1
, 2
,
,
P ,
Z
conv U U
U
α =
…
 
(5) 
for
]0,
P]
α
Β
∈
, and
 
1
1
,
1
1
1
p
p
P
P
conv
U
U
β
β
α
α
Β+
=
Β
















+
−
 ∑

 
(6) 
for
1
[
,
],
P
P
α
∈ Β Β +
where
{
}
1,2,...,
1 ,
P
Β∈
−
{
}
{
}
1
2
1
,
,...,
1,2,...,
,
B
p p
p
P
+
⊂
and
{
}
1
, 2
,
,
P
U U
… U
–
points on the basis of which the zonoid is constructed, P –
the number of such points.
To define the degrees of belonging
, ,
q
Lb i
γ within the point
in time t, there is a point
, ( )
Ui b
t
in space, corresponding to
the current values of the involved VM resources in point t:
 
{
}
*
*
, ,1
,
,
,
( ),...,
(
( )
)
.
i
i b
i
L
i
b
U b
t
r
t
r
t
=
 
(7) 
For each linguistic value
, , ,
q
lb i
γ
,
1,
b i
γ =
Γ
the smallest
Euclidean distance
, ,
db i
γ from a point
, , ( )
Ui b
γ t
to the zonoid
corresponding to this linguistic value is defined. The value
, ,
q
Lb i
γ is estimated by the formula:
 
{
}
,
, ,
, ,1
, ,2
, ,
, ,
1
1
,
max
,
,...,
b i
q
b i
b i
b i
b i
b i
L
d
d
d
d
γ
γ
Γ
= −
−
 
(8) 
where
,
Γb i
– amount of the linguistic values describing
quality indicators
, ,
qb i
1,
i
b
D
=
of the i-th service.
C.
Reduction of service quality indicators, specified in the
SLA, to a single integral quality indicator
In order to establish the dependence of an integral quality
indicator
i
Q ,
1,
i
K
=
, from all quality indexes
, ,
b i
q
1,
i
b
D
=
of the i-th service, the fuzzy database is used. Rules
of such base are represented as follows:
 
(
)
[
]
(
)
, ,
,
,
|
1,
|
1,
,
q
Q
b i
b i
i
i
IF
L
THEN l
γ
ω
γ
ω


∧
∈
Γ
∈
Ω


 (9) 
for
1,
i .
b
D
=
Indicate
,
Q
iL ω as the degree of belonging to the fuzzy set
,
Q
Ψi ω
,
1,
i
ω =
Ω . Its value is defined as the minimum of all
values
derived
from
the
fuzzy
database
rules
(9)
corresponding to fuzzy value
, , .
q
lb i
γ
D.
Calculation of the integral quality indicator of service
At a defuzzification stage for the i-th service the
numerical value of its integral quality indicator
Qi
is
calculated by a formula:
104
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

 
( )
( )
1
0
1
0
,
 
i
x
i
i
x
x F x dx
Q
F x dx
=
=
⋅
= ∫
∫
 
(10) 
where
( )
iF x
is calculated by the formula:
 
( )
(
)
(
)
,
,
( )
,
,
Q
i
i
i
L
F x
agg imp
x
ω
µ ω
=
 
(11) 
where
µ ,i ω
is the membership function of integral quality
indicator
i
Q to the fuzzy set
,
Q
Ψi ω
,
1,
i
K
=
,
1,
i .
ω =
Ω
IV.
LOAD BALANCING
Two
control
mechanisms
are
implemented
in
the
management system "SmartBase ITS Control", developed by
the
National
Technical
University
of
Ukraine
"Kyiv
Polytechnic Institute” for the SLA-defined service quality
management. The first of them assumes a change of the
number of VMs providing the i-th service, and the second –
the VM load balancing.
The algorithm of "SmartBase ITS Control" management
system during quality management of the i-th service
consists in the following.
For each VM Vj,i,
1,
i ,
j
M
=
1,
i
K
=
the current quality
of the provided service is defined. For this purpose, the value
of the involved volumes of resources
*
, ,
rm i
1, ,
m
L
=
1,
i
K
=
is defined for each VM.
Proceeding from value
*
, ,
rm i
1, ,
m
L
=
1,
i
K
=
taking
into account expressions (6)–(8) the values
, , ,
q
Lb i
γ
1,
i
b
D
=
,
,
1,
b i
γ


∈
 Γ
 are calculated.
The calculated values
, , ,
q
Lb i
γ
are substituted in rules (9)
of fuzzy database and degree of belonging to
, ,
Q
iL ω
1,
i
ω =
Ω
is defined.
To find a numerical value of an integral quality indicator
i
Q of the i-th service for j-th VM, the center of mass is
determined by a formula (10) which represents the result of
aggregation of belonging functions
µ ,i ω
, bound above by the
values
,
Q
iL ω determined by formula (11).
If for all VMs Vj,i,
1,
i ,
j
M
=
1,
i
K
=
, the received
values of integral quality indicators
Qi
are lower than
stipulated within SLA, then the manageent system makes the
decision to increent the number of VMs that provide the i-th
service.
If for all VMs Vj,i,
1,
i ,
j
M
=
1,
i
K
=
the received values
of integral quality indicators
Qi
exceed the stipulations
within SLA, then the decision to decrement the consumption
of resources of the data center is made. Specifically the
number of available VMs for the i-th service is decremented.
If the received values of integral quality indicators
i
Q are
in norm limits, then the balancer distributes the user’s
requests between VMs Vj,i,
1,
i ,
j
M
=
1,
i
K
=
in proportion
to values
i
Q for each VM.
V.
EXPERIMENTAL RESULTS AND ANALYSIS
As the experimental service, a Web service, which works
using the HTTP protocol had been selected (denoted as
1s ).
The indicator of HTTP-service quality is the time of reaction
of the server for the user's request.
As there are no well-defined standards for the time of any
given loaded page, it had been decided to follow the
recommendations
by
[14]
and
to
follow
the
recommendations by Yandex. In said recommendations, it
was stipulated that the quality of HTTP service is considered
excellent if a server response time is less than 3 seconds,
satisfactory – from 3 to 6 seconds, and unsatisfactory if the
time of the server response is longer than 6 seconds.
The VM resources are determined by the parameters that
are indirectly influencing HTTP server response time. Based
on the paper [14], it was defined, that the time of the page
loading, and the quality of HTTP-service are influenced by
following resources: the involved processor time, the free
RAM, and throughput of the communication channel.
For carrying out an experiment, three homogeneous
virtual machines
1,1
1,2
1,3
,
,
.
V
V
V
are deployed. On VMs the
Apache Server and Java were installed. As test service the
Atlassian Jira was selected. It is rather resource-intensive
service. It is rather resource-intensive service therefore even
insignificant increase in the number of the users’ requests for
such service leads to noticeable increase in the value of
resources spent by VMs. At the initial point in time, only one
virtual machine is active. Other machines are in the sleep
mode to decrease data center resource consumption.
As VMs are homogeneous, the data center operators are
able to increase quickly the number of machines, if
necessary. CPU load (parameter r11), free RAM (parameter
r21) and bandwidth of network interface (parameter r31) are
resources
that
may
be
allocated
for
service
s1 for
1,1
1,2
1,3
,
,
.
V
V
V
The workload is formed by Apache Jmetter during the
experiment. From 1 to 100 users’ requests per second have
been emulated. The emulation results without load balancing
are displayed in Fig. 1.
Fig. 1 shows that the load time increases dramatically on
the 20th second approximately. This is due to the increase in
the number of users’ requests from 1-25 to 75-100.
105
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

Figure 1.
Emulation results without management system
The results of the same experiment, while using the
management system, are shown in Fig. 2.
Figure 2.
Emulation results with management system
When the management system has determined that there
are not enough resources for providing service quality, it
launches an additional virtual machine. This happens after 20
seconds. Then, the load balancer begins distributing users’
requests between the virtual machines evenly.
With a more uniform VM workload increase, the
management system allowed to exclude unwanted delays
completely. Fig. 3 shows the simulation results without
control, but with a uniform workload increase.
Figure 3.
Emulation results with a uniform workload increase without
management system
Fig. 4 displays the simulation results with the activated
management system, as proposed in the paper, with a
uniform workload increase.
Figure 4.
Emulation results with a uniform workload increase with
management system
Simulation results have shown that the proposed load
balancing method works satisfactorily when the number of
user’s requests changes slightly. When a workload increases
sharply up to the critical point, the management system
needs some time to adjust to the new conditions.
This problem arises from the fact that the new virtual
machines need time to turn on. And even the fact that they
are in the sleep mode, but are not turned off completely, did
not allow them to react quickly enough to sudden changes in
the server’s workload.
If one of the backup virtual machines is left enabled, but
the load balancer for it is disabled, so that it does not send
requests until the moment when the active virtual machines
fully cope with the current workload, the response to sudden
workload surges will be more rapid.
Only providing unlimited resources would completely
eliminate the problems associated with the sharp increase in
workload at the servers, which is not feasible. But it is
possible to use the methods described in [2] to decrease the
reaction time.
VI.
CONCLUSION AND FUTURE WORK
In this work, a load balancing management system for
data center servers based on the current quality of service is
proposed. It is suggested to use virtual machines for a more
flexible allocation of data center resources.
The advantage of this method of load balancing is that a
balancer determines the need for additional resources, being
based not on the number of resources involved, but on the
value of the integral quality indicator of services. The
proposed two-step method provides a statistical evaluation of
QoS
without
any
assumptions
about
the
probability
characteristics of the processes occurring in the data center.
In contrast to the method proposed in [5], the method
described in this paper allows to determine in advance the
time when there is a need for additional resources for the
given service. In [3], the authors have proposed a load
balancing algorithm, which operates at a consistently high
workload at the servers. The disadvantage of this method is
the increased consumption of data center resources at low
106
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

workloads. In [4], the authors have proposed to define SLA
service compliance of service quality on the proposed
criteria. In this study a similar method has been suggested.
But the use of fuzzy inferencing, when aggregating the
quality indicators overall, integral quality indicator provides
a more accurate assessment of the service quality.
HTTP-service experiments were carried
out as an
example
for
showing
operability
of
the
proposed
management system. The experiments have shown the
efficiency of this method. The quality of the service under
consideration
did
not
go
beyond
the
norm
in
the
experiments.
However, the authors of this work have not considered
the problems described in [2], and [6]. The balancing method
proposed in this paper, in combination with the algorithms
described in [2], and [6], will improve the current method.
Also, the time of VM switching on will be reduced.
REFERENCES
[1]
A. Kumar and M. Kalra, “Load balancing in cloud data center using
modified active monitoring load balancer,” International Conference
on
Advances
in
Computing,
Communication,
&
Automation
(ICACCA) (Spring), pp. 266—270, 2016.
[2]
J. Duan, “A data center virtualization framework towards load
balancing and multi-tenancy,” IEEE 17th International Conference on
High Performance Switching and Routing (HPSR), pp. 14—21, 2016.
[3]
T. Chen,
Y. Zhang,
and
X. Wang,
G. B. Giannakis
“Robust
geographical load balancing for sustainable data centers,” IEEE
International Conference on Acoustics, Speech and Signal Processing
(ICASSP), pp. 3526—3530, 2016.
[4]
O. Shpur,
B. Strykhalyuk,
and
O. Morushko,
“The
optimal
distribution of optical resources between data centers for providing
the required level of QoS,” the 13th International Conference on
Modern Problems of Radio Engineering, Telecommunications and
Computer Science (TCSET), pp. 649–651, 2016.
[5]
O. Rolik, P. Mozharovskyy, V. Vovk, and D. Zaharov, “Constructing
quality
metrics
for
IT
infrastructure
components
using
the
nonparametric
statistics,”
Visnyk
NTUU
“KPI”
Informatics,
operation and computer science, vol. 53, pp. 160–169, 2011.
[6]
L. Gu, D Zeng, A Barnawi, S Guo, and I. Stojmenovic, “Optimal
Task Placement with QoS Constraints in Geo-Distributed Data
Centers Using DVFS,” IEEE Transactions on Computers, vol. 64,
issue. 7, pp. 2049—2059, 2015.
[7]
E.H. Mamdani,
“Applications
of
fuzzy
logic
to
approximate
reasoning
using
linguistic
synthesis,“
IEEE
Transanctions
on
Computers, vol. 26, no. 12, pp. 182—1191, 1977.
[8]
Y. Zuo and R. Serfling, “General notions of statistical depth
functions,” Ann. Statist, vol. 28, no 2, pp. 461—482, 2000.
[9]
G. Koshevoy and K. Mosler, “Zonoid trimming for multivariate
distributions,” The Annals of Statistics, vol. 25, no. 5, pp. 1998—
2017, 1997.
[10] K. Mosler, T. Lange, and P. Bazovkin, “Computing zonoid trimmed
regions of dimension d>2,” Computational Statistics and Data
Analysis, vol. 53, issue 7, pp. 2500—2510, 2009.
[11] K. Mosler, “Multivariate dispersion, central regions and depth,” New
York. : Springer, p. 291, 2002.
[12] L.A. Zadeh, “Fuzzy Sets,” Information and Control, vol. 8, pp. 338—
353, 1965.
[13] Abu M. T. Osman, “On the direct product of fuzzy subgroups”, Fuzzy
Sets and Systems, vol. 12, pp. 87—91, 1984.
[14] Giovanni Giambene, “Resource management in satellite networks”,
Optimization
and
Cross-Layer
Design,
pp. 67—94, 2007
107
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-529-6
CLOUD COMPUTING 2017 : The Eighth International Conference on Cloud Computing, GRIDs, and Virtualization

