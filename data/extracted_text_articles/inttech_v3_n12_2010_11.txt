Circuit Analysis and Simulations through Internet
Jiˇr´ı Hospodka
Department of Circuit Theory
Czech Technical University in Prague
Prague, Czech Republic
Email: hospodka@fel.cvut.cz
Jan Biˇc´ak
ASICentrum
a Company of the SWATCH GROUP
Prague, Czech Republic
Email: Jan.Bicak@asicentrum.cz
Abstract—This paper presents an application suitable for
analysis of electric and electronic circuits through internet. The
application is based on PHP scripts and uses SpiceOpus and
Maple program with special library PraCAn as a computation
engine. Continuous-time linear and nonlinear circuits as well as
periodically switched linear circuits can be analyzed. Results can
be obtained in symbolic or semisymbolic form for the case of
linear circuits analyzed by Maple with PraCAn. Description of
the circuit can be entered through a graphical schematic editor.
It is a Java applet for scheme drawing and netlist creation. The
possibilities of the application are demonstrated on a number
of circuit analyses. The whole system was developed at the
Department of Circuit Theory, for research and teaching support.
Keywords-web-based application; simulations; analysis.
I. INTRODUCTION
Nowadays, many systems for circuit analysis are avail-
able. Conventional programs like PSpice⃝
R, Micro-Cap, Win-
Spice [3], [4], [5], etc. are single-purpose programs. Evaluation
versions of these programs are frequently used for teaching
support. Most of them solve the task only numerically, hardly
any program makes symbolic or semisymbolic computing
possible. Its use is connected with installation of mentioned
software to the user computer. In cotrast to this a web-based
system offers the advantages of open and remote system for
circuit analysis. These systems combine rich client technology,
and circuit simulation, and provide convenient user interface
for simulation capability. Web-based simulation environments,
combining distance education, group training and real-time
interaction, can serve as a good approach. The web-based
virtual laboratory system for electronic circuit simulation
(ECVlab) [7], trainer for electrical circuit analysis [8] or
application [11] can serve as examples. Pages [9] based on
C++ CGI Toolkit in Ch [10], provide interactive web-based
calculation (computation of mathematical formulas in C ex-
pression, complex, matrix computation, and grade point aver-
age calculation), 2D/3D plotting, numerical analysis (analysis
of linear systems, differential equation solving, integration,
non-linear equations, Fourier analysis), OpenGL graphics and
control system design and analysis (analysis of continuous-
time or discrete-time linear time-invarient (LTI) control sys-
tems described by particular transfer function). Special appli-
cation called ”Remote Wiring and Measurement Laboratory”
(RwmLAB) is described in [14]. RwmLAB is intended to
address real-time remote wiring of electrical circuits and real
data acquisition over the Internet instead of using simulated
data. Simulations through internet using Spice (Spice internet
Packages – SIP) were introduced in [11], [12], [13], where
internet serves as a graphical user interface for the program
simulator – Spice. It is based on CGI (common gateway
interface) scripts, PERL and PHP scripting language. Similar
application is also the system for electric ﬁlter design. Web-
based application [15] uses MapleTM [6] as a computational
engine with special package Syntﬁl [16] developed by authors.
However synthesis of electric circuit is performed instead of
circuit simulations.
The application presented in this article is based on client-
server concept [17], which uses special simulation program
on the server side. However the described system offers
better user interface and greater scope of simulations including
symbolic analysis and analysis of periodically switched linear
(PSL) circuits, i.e., circuit with switched capacitors (SC) or
switched currents (SI). Representation of circuit description is
graphical using schematic editor like Java applet [1].
Our motivation was to create application for circuit analysis
with a great potential. This goal can be realized by an easy-to-
use web-based application, which is available for wide range
of users. It can combine several simulation engines, can be
acomlished using any computer with internet connection and
can be easily administrated and updated, because it runs on a
server.
The paper is divided into the three main parts. Programs
used for analysis are described ﬁrst. Introduction of application
description including schematic editor follows. Examples of
circuit analyses are shown to demonstrate usability of the
application and its facilities at the end of the paper.
II. PROGRAMS FOR ANALYSIS
A forementioned application uses client-server conception
where programs are installed and run on the server side. It is
necessary that programs on the server side have to enable batch
processing for easy operation through control scripts. Circuit
analysis is provided by two main programs. The numeric
analyses are performed by SpiceOpus, while semisymbolic and
symbolic analyses including switched circuit are powered by
Maple program with special package named PraCAn.
128
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 1.
Principle of the client-server concept used for the interface realization.
A. SpiceOpus
SpiceOpus is a circuit simulator with optimization util-
ities [18]. It is a recompilation of the original Berkeley’s
source code [2] for Windows and Linux operating systems.
Georgia Tech Research Institute’s XSpice mixed-mode simu-
lator was added to the Berkeley code. The simulator includes
an interpreted programming language called Nutmeg, which
allows interactive Spice sessions. The program compilation is
powerful enough to support the mentioned application.
B. PraCAn Package
PraCAn package is a library of functions for Maple,
which facilitates the symbolic and semisymbolic analysis of
continuous and discrete-time linearized circuits. PraCAn is
the acronym for Prague Circuits Analyzer [19]. The input
syntax for circuit description is almost the same as in Spice
program. The package contains functions for parsing circuit
description (netlist), which enable easy identiﬁcation of syntax
errors. Therefore the package is used for parsing netlist in
the application. Next functions are designed for the analysis
of continuous-time linear circuits as well as the periodically
switched linear (PSL) circuits.
The package originates from SCSyrup package [20], [21]
for frequency analysis of idealized SC and SI circuits. The
functions used in SCSyrup package are based on the analysis
of SC circuits using nodal charge equations. The analysis
of SI circuits is also based on nodal equations but the
currents are used instead of charges [26]. The package was
modiﬁed and algorithms for PSL circuits were added to make
it possible to analyze SC or SI circuits with real qualities
such as switch resistances ron and roff. The package was
renamed to PraSCAn (Prague Switched Circuits Analyzer),
which uses algorithms based on modeling of periodically
switched networks using mixed s-z description [25]. SCSyrup
was a table-based package whereas PraSCAn is a module-
based package.
PraCAn has been created from PraSCAn package [22], [23],
which was completely rewritten and new functions were added
for continuous-time circuit analysis. The package preserves
all functions of SCSyrup and it can be used as its complete
replacement with the same results. The circuit is processed
by modiﬁed nodal voltage method [26]. Unlike the methods
in [24], the presented method for multiphase PSL circuits
provides symbolic analysis in frequency domain and closed
form solution in time domain. The linear system with the
time-varying parameters is modeled by nonstationary transfer
functions K(s, t). If the parameters vary periodically (e.g.,
in SC and SI circuits with externally controlled switches),
then the system response contains both continuous and discrete
time parts and it can be described by a generalized transfer
function GTF [25]. The frequency response of the system is
obtained by substitution of both s and z. PraCAn package
also contains function for direct calculation of time response.
The response can be calculated with respect to real input
signal character, i.e., including also the so-called leakage
effect if Sample&Hold circuit is not used in the input of the
analyzed circuit. This way actual spectrum of the signals can
be calculated including frequency response of the circuit with
undersampling.
III. WEB-BASED APPLICATION
The application is based on www interface, which utilizes
www client-server concept. The computation and the interface
programs run on the server and a user uses standard www
browser (Internet Explorer, Mozilla Firefox, Opera, etc.) as
a graﬁcal user interface. This principle is illustrated on the
following ﬂow-chart, see Figure 1.
The server runs under operating system Linux. The analysis
of the required circuit is solved using SpiceOpus program or
129
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

4.1.4. Datové struktury reprezentující elementy
Datové struktury reprezentující elementy lze hierarchicky rozdělit na tvary a součástky,
jak je zřejmé z obrázku 4.3. Tyto datové struktury jsou implementovány v rámci modulu
Elements.
Element
shape 
Shape 
Ellipse 
Line 
Text 
ArcSegment 
BezierCurve 
Polygon 
Polyline 
Rectangle 
Arc 
part
Part 
Pin 
Wire 
Obrázek 4.3 – Znázornění hierarchie elementů
Vytváření a duplikování těchto elementů je implementováno prostřednictvím třídy
ElementFactory, a to z důvodu přesnější kontroly nad jednotlivými elementy. Metody
třídy umožňují vytváření a duplikaci existujících elementů.
Fig. 2.
Elements hierarchy of shematic editor.
PraCAan package in Maple. It runs using batch-processing,
which is necessary for the interface where the programs are
called by the PHP scripts [17]. According to client requests
the results may be presented by the dynamically created www
pages. These pages are provided to the client by means of
HTTP server Apache. Described application of circuit analysis
was realized according to this model.
Input requests are inserted into the forms of the application
using www browser. The program in JavaScript tests the
validity of these requests before sending them to the server,
where they are tested too. Input ﬁles for Maple are generated
from the input requests by scripts in PHP and results are
saved in separate ﬁles. The PHP scripts procese these ﬁles and
create the structure of dynamic www pages, which are sent
to the client. It is necessary to solve many other problems,
for example, to distinguish simultaneously connected users,
deleting temporary ﬁles and directories, etc. These tasks are
solved using cookies and session variables (PHP). Other
programs are used for additional functions – GnuPlot program
is used for graph drawing and typographical system LATEX
for graphical representation of terms. Procedure of calling
GnuPlot and LATEX is analogous to a procedure of calling
Maple or OpusSpice.
In contrast to conventional programs it is possible to create
nonstandard analyses and different types of parametric anal-
yses, using batch processing managed by PHP scripts using
this application. These analyses can be easily deﬁned by user
without studying any programm routines as is demonstrated
in examples in Section III-B.
A. Schematic Editor – Application for Visual Scheme Editing
Schematic editor is being developed to help users with the
creation of electronic circuit schemes by providing means of
visual editing. It also allows an export of created schemes
using variety of formats from SVG to netlist. The application
supports plugins, which are loaded dynamically during the
application start. Plugins can receive notiﬁcation in case of
scheme modiﬁcation, so they can update properly.
Fig. 3.
Graphical interface of shematic editor.
The application of the editor is written with regards to
object-oriented programming (OOP) techniques using Java 5.
Architecture is modular, each module has specialized scope.
The modules are divided into:
• Conﬁguration module – implements classes, which are
responsible for conﬁguration,
• Elements module – implements all graphical elements
used in application,
• Gui – contains classes responsible for graphical user
interface (GUI) of application,
• Manipulation – contains classes, which implement all
supported manipulations,
• Units – implements variety of units,
• VectorEditorEngine – core module, implements the most
basic functionality of the vector editor.
Elements module for example, is represented by data struc-
tures, which can be devided into shapes and parts, see Figure 2.
Figure 3 shows the GUI of the editor. It consists of three
parts, graphical editor, schematic parts and schematic editor.
It is possible to draw basic vector objects (line, rectangle,
polygon, Bezier curve, ellipse, etc.) in basic graﬁcal editor. On
this basis elements the editor was created where the schematic
parts can be formed – to deﬁne shape, number of connecting
pins and their location, part properties, ...The ﬁnal part of the
editor is the schematic editor, which consits of a menu, several
toolbars and drawing pane used for drawing. All basic parts
are deﬁned and prepared in properties toolbar. The grapcical
elements can be used together with deﬁned parts to create the
circuit scheme in the main (schematic) editor. It is possible
to choose one of the required parts and use it for circuit
diagram creation in the schematic editor. After placing of the
selected part a dialog appears for value or model deﬁnitions.
The application is connected with an interactive catalogue,
where the models are deﬁned. After wiring the scheme the
netlist is created and transmitted to the web server for analysis.
130
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 4.
Application page with inserted netlist of a circuit and window with the time response plot.
Besides the circuit netlist the scheme can be saved in a native
format of the editor or exported into graphical format SVG or
EPS.
User starts the editor as an applet included in the web
application. It is necessary that the Java runtime environment
has been installed on the client computer. The second way of
starting the editor is by calling a special application instaled
on the user computer.
Connecting of schematic editor as an applet with www
pages of application is made according [28], [29].
The
applet
is
included
at
the
level
of
class
cz.cvut.fel.schematicEditor.launcher.Applet
in Java. This class implements methods void init(),
void start()
and
void stop()
for
applet
initialization, start and stop. The methods come from JAplet
class: String getSession() for getting of session
from editor, void setSession(String session) for
restoring of saved session and String getNetlist()
for getting of netlist.
B. Examples of Circuits Analysis
The following ﬁgures are screent shots taken during the
application running circuit analysis. As examples three circuit
were chosen – elementary twin-T-network with parametric part
values (Figure 7), a third-order elliptic SC low pass ladder
realized by the technique of switched capacitors ﬁlter [27], see
Figure 12 and current mode circuit as an implementation of a
simple serial resonant circuit (see Fig 15) by the technique of
the switched transconductances, which is analyzed by PraCAn
package in Maple program and difference ampliﬁer with active
load in CMOS technology, which is analyzed by SpiceOpus.
Figure 4 shows one of the main pages of the application
with imported netlist of circuit form Figure 3. The overlapping
window shows the time response of the circuit for two levels of
excition as a result of numeric analysis powered by SpiceOpus.
The analyses are deﬁned on the main page. The user can deﬁne
number of analyses, which are displayed into the separated
windows. Figure 5 shows a window for basic setting of AC
analysis. The result is displayed in “Graph” bookmark, see
Figure 6. It is not classical example of frequency response,
where arbitrary variable (x-axis) is frequency. It is a result of
parametric analysis of AC analysis in one frequency (1 kHz,
see Figure 5), where module of output voltage (gain) is calcu-
lated versus resistor R2 value. Huge possibilities of parametric
analysis are demonstrated. Spectral analysis including total
harmonic distortion can be calculated similarly as a special
131
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 5.
Deﬁnition and settings of AC analysis – frequency response.
Fig. 6.
Result of parametric AC analyses – modulus of output voltage vs.
resistor R2 value.
case of transient analysis. A special page exist for ”quick”
summary analysis, where operational point can be calculated
and displayed together with main circuit parameters (ac gain
in one speciﬁed frequency or range of frequencies and time
response also in one speciﬁed time or a time range).
Next examples demonstrate possibilities of semisymbolic
and symbolic analyses based on PraCAn package powered
by Maple program. Elementary circuit – twin-T-network with
parametric part values form Figure 7 is analyzed ﬁrst.
R
C
aC
R/b
bC
R/a
Vin
ac 1
out
Fig. 7.
Twin-T-network.
Figure 8 shows a symbolic frequency analysis of the circuit
from ﬁgure 7, where transfer function is calculated. The result
is displayed in basic text form (for clipboard copying) and
also in graphic form (using LATEX). Next Figure 9 shows the
beneﬁt of Maple program implementation – all results can
be mathematically treated in bookmark ”Maple calculation”.
Resonant frequency (w0), transfer function in resonance (P0),
slope of phase characteristic in resonance and its evaluation
for given parameter values are calculated in this case. Maple
commands and all circuit variables (voltages and currents)
can be used for direct calculation in Maple. Syntax of these
commands is necessary to know of course. Circuit variables
can be easily chosen in the right part of the window (see
Figure 9).
Fig. 8.
Result of symbolic analyses of circuit from Figure 7.
The following two ﬁgures show frequency analysis of the
circuit. The setting of the analysis (Figure 10) is nearly the
same as in the previous case. Only the number of circuit
constants is higher. In addition one constant (b) is chosen as
a parameter with number of values (1, 1.9 and 2.1) for para-
metric analysis. The result of frequency response (modulus
together with phase) is shown in Figure 11.
The last two examples demonstrate possibilities of discrete-
time circuit analyses. The ﬁrst circuit presents a third-order
132
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 9.
Page for direct computation in Maple.
Fig. 10.
Setting of frequency analysis of the circuit from Figure 7.
elliptic lowpass ﬁlter realized by switched capacitor technique
(Fifure 12) and the second one is a resonant circuit realized
by the technique of switched currents, in this example the so-
called technique of switched transconductances (Fifure 15).
The results of analysis of circuit from Figure 12 is displayed
in the following ﬁgures. Figure 13 represents the result of
parametric AC analysis for two values of switching frequency
fc. This way the ﬁlter can be tuned as is seen from the
ﬁgure. The overlapping window shows the poles and zeros
of computed ﬁlter transfer function in Z-domain. Figure 14
shows results of transient analysis of this SC ﬁlter excited by
Fig. 11.
Parametric frequency response (modulus and phase characteristic).
C1
C2
C3
C4
C5
C6
C7
C8
C9
C10
C11
C12
vo
vi
Fig. 12.
A third-order elliptic SC lowpass ﬁlter.
sinusoidal signal. One can see that input signal leaks directly
to output signal because Sample&and Hold circuit is not used
in the ﬁlter input and direct signal way exists from input to
output.
A current mode switched circuit is analyzed in the last
example. It is an implementation of a simple serial resonant
circuit (see Fig 15) by switched transconductances, as was
noted above. The symbolic analysis is provided ﬁrst, see
Figure 16. Using Maple direct computation interface, the input
”impedance” in node 2 in the ﬁrst phase is calculated as is
shown in Figure 17. Then transformation of the impedance
from z to s domain is done by means of inverse backward
Euler transformation (BD). The input impedance corresponds
to impedance of the RLC series resonant circuit, which is
evident from expanded result.
The application enables analysis of number of circuits and
their management. Different analysis can be created for each
133
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 13.
Frequency response of SC ﬁlter and window with pole and zero
calculation of transfer function in Z-domain.
Fig. 14.
Result of transient analyses of SC ﬁlter.
circuit. The circuit (scheme, netlist, setting, ...), analysis def-
initions and results can be saved to the project, see Figure 18.
User can save complete work and present it this way.
IV. CONCLUSION
The web-based application has been created to enable
analysis of electric and electronic circuits for a wide range of
Φ2
1
Φ1
2J
a1J
1
a1
1
2
a2
a1
1
1
gm1
a1J +J
J
T1
T2
T3
T4
T5
G6
G7
S1
S2
S3
S4
3
5
1
J
a3
6
T8
T9
a3J
2J
7
4
gm2
Zin
Zin
R
L
C
phassing
equivalent circuit
2
4
S5
S6
T10
T11
1
1
a2J
Fig. 15.
Realization of RLC circuit by switched transconductances.
Fig. 16.
Result of symbolic AC analysis of the circuit from Figure 15 –
voltage in node 2 in the ﬁrst phase.
users. Designed system combines technologies as rich as client
technology, PHP, Java, and circuit simulation, and provides
the user with vivid interface, convenient operation and pow-
erful simulation capability. The application uses facilities of
SpiceOpus program for numeric analysis and PraCAn package
in Maple program for symbolic and semisymbolic analysis
of continuous-time as well as periodically switched linear
circuits. No known web-based system offers such range of
capabilities.
Operating of the interface is very easy. Circuit description
can be entered using graphical interface of schematic editor.
All pages of application are supplemented by interactive help.
134
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

Fig. 17.
Page with direct Maple interface for computation and result
treatment.
Fig. 18.
Page for circuit management.
User can use the interface without any manual or study of
syntax. The analysis can be very simply created and modiﬁed.
It is possible to create number of different analysis of one
or more circuits in one project. Results of the analyses can
be displayed together and they are simultaneously recompiled
(redisplayed) if the netlist of the corresponding circuit is
changed. It represents with the symbolic analysis very good
tool for engineers and students dealing with electronics.
The application was created especially for teaching support
on the Faculty of Electrical Engineering, Czech Technical
University (CTU) in Prague. The easy-to-use web based
interface will aid analysis of electric and electronic circuits
without any program installation and without learning of any
command syntax. Students make signiﬁcant learning gain
as a result of using this system. Their interest for electric
circuits rises thanks to operation capability and potential of the
application. Learning process can be well facilitated if tools are
widely available, not just in the dedicated laboratories. Web-
based simulation environment, combining distance education,
group training and real-time interaction, can serve as a good
approach.
The analyses are powered by Maple program whose uti-
lization is restricted by license. This is the reason why the
application is not free for all users. Nowadays the system is
open from CTU domain; nevertheless it can be open for others
who meet the license requirements.
ACKNOWLEDGMENT
The work has been supported by the grant of Ministry of Ed-
ucation, Youth and Sports No. 2388F1d, grant GA102/07/1186
of the Grant Agency of the Czech Republic and by the research
program No. MSM6840770014 of the CTU in Prague.
Maple is trademark of Waterloo Maple Inc.; Maplesoft is
a division of Waterloo Maple Inc. All other trademarks are
property of their respective owners.
PSpice is registered trademark of Cadence Design Systems,
Inc.
REFERENCES
[1] J. Hospodka and J. Biˇc´ak, Web-based Application for Electric Circuit
Analysis, Proceedings of The Fourth International Multi-Conference
on Computing in the Global Information Technology [CD-ROM]. Los
Alamitos: IEEE Computer Society, 2009, p. 157-160, ISBN 978-0-7695-
3751-1.
[2] SPICE – general-purpose circuit simulation,
URL: http://bwrc.eecs.berkeley.edu/Classes/IcBook/SPICE/, 2009.
[3] Cadence Design Systems, Inc., Pspice – analog and mixed-signal circuit
simulator, URL: http://www.cadence.com/, 2009.
[4] Spectrum
Software,
Micro-Cap
–
schematic
editor
and
mixed
analog/digital SPICE circuit simulator, URL: http://www.spectrum-
soft.com/, 2009.
[5] M. Smith, WinSpice User’s Manual, http://www.winspice.com, 2007.
[6] Maplesoft, a division of Waterloo Maple Inc., Maple – essential tech-
nical computing software, URL: http://www.maplesoft.com/, 2009.
[7] Y. Ouyang, Y. Dong, M. Zhu, Y. Huang, S. Mao, and Y. Mao,
ECVlab: A web-based virtual laboratory system for electronic circuit
simulation, ICCS – International Conference on Computational Science
2005, Atlanta, Ga, USA, pp.1027-34, ISBN-10: 3540260323.
[8] L. Weyten, P. Rombouts, and J. De Maeyer, Web-Based Trainer for
Electrical Circuit Analysis, IEEE Transactions on Education, 2009
Volume: 52, Issue: 1, pp: 185-189, ISSN: 0018-9359.
[9] SoftIntegration, Inc., Web-Based Control System Design and Analysis,
URL: http://www.softintegration.com/webservices/control/, 2009.
[10] SoftIntegration, Inc., Ch CGI toolkit for CGI programming, URL:
http://www.softintegration.com/products/toolkit/cgi/, 2009.
[11] B. M. Wilamowski, A. Malinowski, and J. Regnier, Internet as a
New Graphical User Interface for the SPICE Circuit Simulator, IEEE
transaction on industrial electronics, Vol. 48, No. 6, 0278-0046/01$
10.00, December 2001.
[12] B. M. Wilamowski, A. Malinowski, and J. Regnier, SPICE based Circuit
Analysis using Web Pages, ASEE 2000 Annual Conference, St. Louis,
MO, June 18 to 2, 2000, CD-ROM session 2520.
[13] J. Regnier and B. M. Wilamowski, SPICE simulation and analysis
through Internet and Intranetnetworks, IEEE Circuits and Devices
Magazine, Vol. 14, Issue 3, pp 9-12, ISSN 8755-3996, May 1998.
135
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

[14] J.A. Asumadu, R. Tanner, J. Fitzmaurice, M. Kelly, H. Ogunleye, J.
Belter, and Song Chin Koh, A Web-based hands-on real-time electrical
and electronics remote wiring and measurement laboratory (RwmLAB)
instrument, Proceedings of the 20th IEEE IMTC – Instrumentation and
Measurement Technology Conference, Volume 2, 2003, pp: 1032-1035.
[15] J. Biˇc´ak, J. Hospodka, J. Vrbata, and P. Martinek, Design of Electric
Filters in Maple and through WWW Interface, Proceedings of ICECS –
The 8th IEEE International Conference on Circuits and Systems, Vol. 3,
pp. 1619–1622, ISBN: 0-7803-7058-9, Malta 2001.
[16] J. Hospodka and J. Biˇc´ak: Syntﬁl - Synthesis of Electric Filters in
Maple, MSW 2004 [CD-ROM]. Waterloo, ON: Maplesoft, a division
of Waterloo Maple Inc., 2004.
[17] J. Hospodka and O. Kobliha, Internet Pages as an Interface between a
User and Computing Program, Digital Communications’03, EDIS ˇZilina
University Publisher, ˇZilina, 2003, pp. 45-48.
[18] SpiceOpus – SPICE with integrated OPtimization UtilitieS, URL:
http://www.fe.uni-lj.si/spice/ 28.3. 2009.
[19] J. Bicak and J. Hospodka, PraCAn - Maple Package for Symbolic Circuit
Analysis, Digital Technologies 2008, EDIS ˇZilina University Publisher,
ˇZilina, 2008, ISBN 978-80-8070-953-2.
[20] J. Bicak, J. Hospodka, and P. Martinek, Symbolic Analysis of SC Circuits
in Maple, ECCTD ’99, pp. 1079-1082, Torino: Politecnico di Torino.
[21] J. Bicak, J. Hospodka, and P. Martinek, Analysis of SI Circuits in MAPLE
Program, Proceedings of the 15th European Conference on Circuit
Theory and Design ECCTD’01, Helsinki: Helsinki University of Tech-
nology, 2001, vol. 3, pp. 121-124, ISBN 951-22-5572-3.
[22] J. Bicak and J. Hospodka, PraSCAn – Maple Package for Analysis of
Real Periodically Switched Circuits, Maple Conference 2005 Proceed-
ings. Waterloo, ON: Maplesoft, a division of Waterloo Maple Inc., 2005,
vol. 1, s. 8-18. ISBN 1-894511-85-9.
[23] J. Bicak and J. Hospodka, Symbolic Analysis of Periodically Switched
Linear Circuits, SMACD’06 – Proceedings of the IX. International
Workshop on Symbolic Methods and Applications to Circuit Design,
Firenze, Universita degli Studi, 2006, ISBN 88-8453-509-3.
[24] F. Yuan and A. Opal, Computer Methods for Switched Circuits, IEEE
Transactions on CAS I, Vol. 50, pp. 1013-1024, Aug. 2003.
[25] D. Biolek, Modeling of Periodically Switched Networks by Mixed s-z
Description, IEEE Transactions on CAS I, Vol. 44, pp. 750-758, 1997.
[26] J. Vlach and K. Singhal, Computer Methods for Circuit Analysis and
Design, Van Nostrand Reinhold Company Inc., New York 1994, 2nd
Edition, ISBN 0-13-879818-4.
[27] P. V. Ananda Mohan, V. Ramachandran, and M. N. S. Swamy,
SWITCHED CAPACITOR FILTERS Theory, Analysis and Design, Pren-
tice Hall 1995, ISBN 0-13-879818-4.
[28] E. A. Musayev, How to connect Java applet, Javascript and HTML form,
URL: http://www.galiel.net/el/howto/jvjvs.html, 2009
[29] Call Javascript from a Java applet,
URL: http://www.rgagnon.com/javadetails/java-0172.html, 2009
136
International Journal on Advances in Internet Technology, vol 3 no 1 & 2, year 2010, http://www.iariajournals.org/internet_technology/
2010, © Copyright by authors, Published under agreement with IARIA - www.iaria.org

