Solving Hidden Terminal Problem in Cognitive Networks Using Cloud Technologies 
Yenumula B. Reddy 
Grambling State University, USA 
ybreddy@gram.edu 
 
 
Abstract—Hidden terminal problem is one of the well-known 
problems when a node is visible from the access point but 
cannot communicate through it. The problem occurs in ad 
hoc networks as well as cognitive networks. The clear 
solution is not discussed in cognitive networks. In this paper, 
we proposed a method to solve the hidden terminal problem 
through cloud computing. The idea is that the cloud can 
store the status of cognitive network, compute, reorganize, 
and make available the current state of cognitive networks 
for future decisions. Further, we discussed the role of cloud 
computing in hidden terminal problems and a solution using 
the blackboard technology. The simulations were presented 
to cognitive radio network cloud and discussed the packet 
transfer and handshaking. The proposed cognitive network 
model using cloud technologies eliminates the overheads of 
request to send and clear to send. Further, implementation 
of cognitive networks through cloud technologies minimizes 
the problem of sudden entry of primary user.  
Keywords: Hidden Terminal; Cognitive Networks; Cloud 
computing; spectrum mobility; spectrum holes. 
I. 
INTRODUCTION 
The software defined radio and cognitive radio brought 
significant attention in telecommunications technology [1, 
2]. The cognitive radio has the capability of changing its 
parameters depending upon the environment that it 
operates. 
Therefore, 
the 
cognitive 
capability 
and 
reconfigurability makes the cognitive radio (CR) detects 
the licensed user and identify the unused spectrum 
(spectrum holes or white spectrum). In recent years, the 
underutilization of licensed spectrum and introduction of 
digital broadcasting TV, the FCC (federal communications 
commission) regulations allowed access to TV white 
spaces [3]. The recent FCC regulations encouraged 
international organizations to define cognitive radio 
standards on TV white spaces. 
The CR is a promising technique to detect and utilize 
the spectrum holes (unused spectrum) efficiently [4]. The 
process includes spectrum sensing, spectrum management, 
spectrum sharing, and spectrum mobility. In spectrum 
sensing, the CR must detect primary (licensed) user 
through sensing methods including matched filter 
detection, energy detection, and feature detection. The 
spectrum management includes characterization, selection, 
and reconfiguration of the spectrum. The management 
further includes channel selection, modulation selection, 
bandwidth setting, observation time setting, transmission 
time setting, and power setting. The spectrum sharing 
helps in preventing spectrum overlapping when multiple 
cognitive radios are involved in intranet. The spectrum 
mobility deals with the handoff (transfer of connection to 
another unused spectrum band) in CR networks. The 
handoff involves the connection lost due to mobility and 
the quality of service. Further, the hidden terminal 
problem (HTP) happens in spectrum mobility. The HTP 
can be solved using the cloud with cognitive radio 
networks. 
A cognitive radio network (CRN) is a group of 
cognitive radios connected to verify the concepts, 
algorithms, and protocols. The CRN improves the 
performance of spectrum utilization and helps smooth the 
transmission of packets. The tools for total functionality 
require a significant amount of computing resources in a 
real time environment. Cloud computing is an alternative 
to minimize the computing resources and improve the 
performance. The cloud works like another intelligent 
agent equipped with all CRN states, policies, and 
concurrent actions. 
In wireless communications, CRN uses knowledge 
representation, machine learning, genetic algorithms, and 
game theory techniques for efficient resource (spectrum) 
utilization. The CRN detects the current network 
conditions, plans the successive actions, and act on those 
decisions. Further, the CRN system learns from the history 
of decisions, actions, and uses the knowledge to improve 
the decisions. Since CRN uses the previous knowledge 
and improves the current decisions, game models are very 
useful in the prediction of network conditions. 
The cognitive radio mostly uses the first two OSI 
model layers (Open Systems Interconnection), whereas the 
CRN covers all layers. The basic functions learning, 
reasoning and adapting to current network conditions are 
required to create end-to-end optimum performance. The 
CRN makes the decisions to meet the network needs as a 
whole rather than individual network component. The 
CRN improves the robustness, usability, security, and 
human interaction for operation and communication. 
The remaining paper discusses the hidden terminal 
problem and cognitive networks, the role of the cloud to 
solve the hidden terminal problem, recent developments, 
problem formulation, simulations, conclusions, and future 
research.  
II. 
HIDDEN TERMINAL PROBLEM AND COGNITIVE 
NETWORKS 
The hidden terminal problem occurs when a node is 
visible from the access point but cannot communicate to 
the nodes within communication distance. A star network 
is the best example. One of the well-known hidden node 
problems in wireless networks is a three node problem as 
235
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

shown in Figure 1. For example, a user tries to transmit the 
information from node A to node C. The node A cannot 
hear the transmission from node C by sensing the medium. 
Similarly, node C cannot sense the transmission from node 
A; therefore, they try to communicate and collide at node 
B. The third example is provided through Figure 2 
(waiting forever). The node A is communicating to node D 
through node B and node C (Figure 2). In the beginning, 
the node A assumes that channel 2 is free. Once the packet 
reaches node B it understood that node C is in 
communication with node D for channel 2. That is node C 
sends the request for communication (RTS: request to 
send) to node B for channel 2.  The node B is waiting to 
get the signal clear to send (CTS) from node C for channel 
2. Both nodes are waiting for channel 2 at node B and 
cannot move further. This is a waiting forever problem. 
The RTS/CTS mechanisms implemented in the MAC 
(medium access control) protocol helps to eliminate the 
hidden terminal problem with time overhead. 
The RTS/CTS problem further introduces the exposed 
terminal problem (Figure 1) in wireless communications. 
For example, if node B is transmitting to node A and node 
C tries to transmit to node D. The node C and node B are 
in the transmission range of each other. Therefore, after 
carrier sense, transmission of node C interferes with the 
transmission of node B. Further, node D can still receive 
the transmission of node C without interference, if the 
nodes C and B are synchronized with the same packet size 
and data rate (IEEE 802.11 RTS/CTS) [8]. If the nodes are 
not synchronized, the neighboring node may not hear the 
CTS during transmission and exposed terminal problem 
may occur. 
The unsuccessful transmissions are proportional to 
number of hidden or exposed terminals from the 
transmitting terminal. The RTS/CTS implemented in IEEE 
802.11 solves the problem with the conditions explained 
above. A similar problem occurs if the presence of the 
primary signal cannot be detected by cognitive radios due 
to interference or noise of neighboring cognitive radios 
(hidden node). The RTS/CTS may not help in such cases. 
The cognitive radios can solve the problem in a 
cooperative spectrum sensing. Cognitive radios sense the 
spectrum holes at each hop and utilize the opportunity of 
allocating the channels in an optimum manner. In a multi-
hop cognitive network (MUCON), users can use different 
frequencies depending upon the availability of spectrum. 
In MUCON, a common control channel is used to control 
the available channels. The number of channels available 
at each hop depends upon the presence of the primary user 
(PU), because the complete path of the primary user is 
dedicated. Therefore, the number of channels available to 
the secondary user or cognitive user (SU/CU) is fixed. In 
the current problem, the number of channels available is 
variable at each hop due to collaborative activity of the 
cognitive network users. The unshaded part of nodes A, B, 
C, and D in Figure 2 shows the available channels. 
The spectrum sensing is used to detect the presence of 
the PU in the frequency band. The unused spectrum 
(spectrum holes) detected by the CU helps the control 
channel to allocate the needed spectrum to CU on the 
communication path. Further, the energy detectors are 
used to detect the presence of PU and determine the 
current status of PU in the geographical area.  
The design of cognitive radio (CR) in spectrum sensing 
poses more challenges since it requires sensing the spectral 
environment and flexibility to adapt transmission 
parameters. The design of CR must detect the weak signals 
and strong signals. The possible solutions include notch 
filtering, banks on radio frequency (RF) chip, and spatial 
filtering RF beam forming through adaptive antenna 
arrays. 
 
Figure 1. Hidden and exposed node problem 
 
 
Figure 2. Hidden Node Problem 
III. 
ROLE OF CLOUD TO SOLVE HIDDEN TERMINAL 
PROBLEM 
The current challenges in cognitive radio networks are 
storing vast amount of information, processing for real 
time decisions, and handoff situation during the transfer of 
information packets at various CRN nodes. Storing and 
processing the information requires a vast amount of 
computational capabilities. Further, knowing the current 
state of channels of the nodes in advance makes the 
transmission of information easy. But, the change in node 
status (availability of channels) during the transfer of 
information requires additional capability. The IEEE 
802.11 RTS/CTS solves the hidden terminal problem to a 
certain extent in wireless communications, but the same 
cannot be applied in cognitive networks due to the sudden 
entrance of the primary user. The cloud is very useful 
(come out of the current bottlenecks) to minimize the 
storage, save the status of channels and complex 
computations at node level. Since the channel status at 
each node is stored in the cloud, the HTP problems will 
never arise. 
236
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

The current computing facilities have limited access to 
resources, financial limitations to purchase packages, 
problems of portability, and maintenance. To overcome 
these limitations an emerging concept called cloud 
computing entered into the technological market. The 
cloud concept simplified the user needs by eliminating the 
purchase and maintenance of systems and packages. The 
advantages are enormous, and security is a basic issue. 
Paying for the resources you use is the fundamental 
advantage. This eliminates the purchase of special 
equipment, 
packages, 
other 
related 
software, 
and 
maintenance. The user can store all the information and 
use it anywhere in the world without carrying the work 
related resources. Since the resources can be stored, 
maintained, executed, and made available on the real-time 
basis, the concept extended to cognitive radio networks to 
use spectrum efficiently without any obstructions. Further, 
the cloud concept eliminates the hidden terminal problem 
due to the storage of all CRN information at one place and 
the availability of the current status to all nodes. 
CR (portable or non-portable) functions require a cloud 
due to the intensive computations and vast storage. The 
functions include signal detection and environment 
awareness; large amount of data storage, processing and 
sharing; learning; collect data from various CR nodes and 
make available to all CR nodes. To facilitate these 
functions a prototype needs to be built. The prototype must 
have capabilities of collecting, processing in real time and 
interacting with nodes for all updates at a central place 
called cloud as shown in Figure 3. The CRN nodes are 
connected with cloud to store, plan, update status, and 
transfer information from a source node to the destination 
node. This process helps to eliminate the RTS/CTS 
process at nodes. Further, it saves lot of battery, processing 
time and hand shaking (or handoff) for mobile devices. 
The overhearing will be avoided in wireless networks and 
eliminates the hidden node problem. 
Cloud computing avoids the common control channel 
(CCC) in CRN. The need of a dedicated CCC problem in 
CRN will be avoided by connecting the nodes of CRN to 
cloud and allow cloud to take care of the activities of CRN 
including the HTP. In cloud connection, we do not need to 
use the time intervals for the available channels. The 
available channels and frequencies are registered in the 
cloud and cloud activities are dedicated to transferring the 
user information to the destination. Therefore, no special 
protocols or controls are required. 
The CCC was discussed in [5] using an example with 
cognitive nodes and unawareness of the channel set on 
successive node. In Figure 2, A, B, C, and D are four 
cognitive nodes in the network. The shaded parts are the 
channels that occupied. The initial handshake from node A 
to node B communicated through the control channel is 
channel 2. Further, node A is unaware of the available 
channels in node B and vice versa. If the user from node A 
wants to transmit the information to user (s) at node B, the 
nodes A and B should negotiate with their channel set with 
the control structures called RTS/CTS to reserve the 
channel for communication (we are not discussing a 
dedicated channel). This problem of negotiating will be 
eliminated using cloud, since the available channels are 
registered in the cloud. Therefore, most of the 
communications and waiting for CTS signal will be 
eliminated using cloud. Further, the best channel will be 
selected and quality of service maintained using cloud. 
 
Figure 3. CRN Test-bed and Cloud 
IV. 
REVIEW OF RECENT DEVELOPMENTS 
The authors in recent literature [6 - 10] discussed the 
HTP in ad hoc networks. The literature includes the hidden 
vs. exposed terminals, solutions to HTP, minimizing the 
effect of deafness and HTP in wireless and ad hoc 
networks, and the role of RTS/CTS in IEEE 802.11 to 
eliminate HTP. The concepts were extended to CRN to 
solve HTP in CRN [5, 11]. The cloud concept helps CRN 
to allocate the resources efficiently at node level compared 
to traditional tools [12-14]. The solution to HTP is the 
extended opportunity of cloud.  
In CRN primary user detection and transferring the 
packets on multi-hop cognitive radio network (MCRN) are 
known problems. Further, HTP is another problem that 
was solved using RTS/CTS in IEEE 802.11 protocol. The 
RTS/CTS implementations take time and computational 
resources. The authors in [5] introduced an alternative 
MAC protocol on MCRN to avoid common control 
channel through simulations using NS2 package. The idea 
is good but consumes more computational resources and 
time. The HTP with the mathematical model and 
simulations through NS2 was discussed in [9]. Biswas et 
al. [15] used cooperative spectrum sensing in dynamic 
CRN to detect primary user and collect the spectrum holes 
for efficient use of unused spectrum.  Zang et al. [16] 
proposed a fast spectrum sensing algorithm with minimum 
cognitive radios to perform the cooperative spectrum 
sensing with minimum errors.   
Jayasuria et al. [7] discussed the hidden vs. exposed 
terminals and concluded that RTS/CTS degrade the 
performance. The MAC protocol for multi-hop networks 
was studied in [17] by proposing pair-wise ID (identity 
detection) countdown. The hidden terminal problem using 
directional antennas was studied in [10]. They claimed the 
performance does not depend on network topology and 
network pattern. Further, the experimental study of Hidden 
237
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

terminal problem was discussed in [6, 18]. In [6], hidden 
terminal jamming problem presented in IEEE 802.11 for 
ad hoc networks was discussed. They claimed that signal 
differential 2dB is sufficient for the stronger transmission 
and effectively jam a weaker signal. In [18], the impact of 
hidden nodes in both infrastructure and multi-hop an ad 
hoc network was studied. The authors claim that RTS/CTS 
degrade the throughput and may not solve the hidden node 
problem. 
The cognitive networks and using game models for 
resource allocation was discussed in [19-23]. The role of 
cognitive 
radios, 
the 
cognitive 
networks, 
and 
standardization of large scale wireless networks were the 
main theme of these papers. The cloud did not have any 
role of these networks. The recent developments and 
timely papers in [12 - 14] open the doors for new research 
using cloud for CRN. Further security is a big issue in 
implementing CRN in cloud. The channel allocation in 
CRN, status of cognitive nodes, and hand shaking in 
moving devices will be solved easily with cloud.  
V. 
SOLUTION TO HIDDEN TERMINAL THROUGH 
CLOUD 
The CRN cloud (CRNC) is a centralized global data 
structure consisting of a set of knowledge sources (CRN 
nodes) called intelligent agents. These agents are self 
sufficient to detect the primary signal and spectrum holes 
and store the current status on the cloud. Further, the nodes 
continuously update their information on the CRNC. The 
design is similar to the blackboard technology to maintain 
the current state of nodes. 
Figure 3 shows that each node in the CRN is connected 
to the cloud (CRNC). Let us discuss the transfer of packets 
from node A to node D in the Figure 2. Each node in the 
CRN is connected to the cloud and the nodes update their 
status at cloud. The cloud software executes the status of 
free channels in each node connected from node A to node 
D and secures the free channels. The cloud software 
decides the channel in each connected node to transfer the 
packets. Further, if the primary user enters at any time, the 
cloud decides the alternate action of assigning the channel 
or stores the packets in its buffer till it finds the free 
channel to transfer the packets to the destination. The same 
facility will not be possible without cloud organization. 
For example, if the primary user enters (to use the channel) 
suddenly, the current data transfer on the channel used by 
secondary user must be stopped and wait for alternate 
channel. In CRNC, the free channels are available at each 
node in the cloud knowledgebase. The cloud software 
connects the free channel to transfer the data without 
delay. Therefore, delay time is less in CRNC since it 
maintains the current channel states and does not require 
RTS/CTS. Further, if a node cannot connect or is 
disconnected, the status is stored at cloud and the system 
administrator is notified. In CRNC if any node could not 
be connected or disconnected the information will never 
be lost. The information is forwarded through an alternate 
path or stored till the node is available (connected).  
Each node in CRNC contributes towards a solution 
without knowing the status of other nodes in the network. 
The solution model contains the control structure, nodes 
involved in the current solution, CRNC knowledgebase, 
query processor, and database access as shown in Figure 4. 
The query processor takes the request from the CRNC 
node, verifies the status of each node in the path (source to 
destination) from database, uses the facts and rules from 
knowledgebase, and selects best possible path. This 
process eliminates the RTS/CTS at each node as well as 
hidden node problem. Therefore, the CRNC process saves 
time since we eliminate the RTS/CTS and noise 
interruption (hidden terminal problem). In CRNC, the 
decision is taken at a global level (in the cloud) and 
eliminates the problems at each node including processing 
time, waiting time for clearance of path, interference of 
nodes in communication distance, and request for a 
channel to send packets to successive nodes. Two cases 
arise in the current situation. The case 1 deals with mobile 
devices and Case 2 with fixed devices.  
 
 
Figure 4. CRNC Architecture 
 
Case 1 deals with mobile devices communications. 
Once the device opens the communication, the device is 
registered in the cloud along with the destination device. 
As the source and destination devices change their current 
status, the CRNC changes its connection status on real 
time, since handshaking is needed at any time to any one 
or both the devices.  
Case 2 deals with stable devices. Once the device 
enters in contact or is ready to communicate, it enters the 
requests in cloud with a source and destination address. 
The cloud triggers the respective nodes to update their 
current status. 
One solution is that the information will be sent to 
cloud from the source node and a destination node copies 
from cloud. Therefore, we can eliminate even transfer of 
packets through each node, since the packets are in the 
cloud and destination address is known. The loss of 
packets will be minimized when connecting through cloud. 
Further, the destination will be triggered as soon as the 
packets are ready to send from the source. The destination 
node copies from the cloud. This is possible because, any 
change in the cloud database (blackboard) is triggered to 
all related CRNC nodes. Therefore, the hidden terminal 
problem, overhearing, and processing will be eliminated 
238
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

automatically. The purpose will be served if we can 
achieve the control strategy and real time performance. 
The second solution is that the connections required to 
transfer the information will be calculated and assigned 
through the cloud database. Once the channels are 
assigned at each node, the node status will be updated at 
cloud and the packets will be transferred. As soon as the 
packets are transferred from each node the channels will 
be freed and cloud status will be updated.  
VI. 
SIMULATIONS 
CRNC scheme eliminates the following requirements 
which are needed in CRN [5].  
 
We do not need maintain two radios to be equipped 
with 
each 
node 
for 
control 
signals 
and 
receiving/transferring. 
 
If a new node enters in the network, it registers in 
cloud only. It does not notify its neighbors. 
 
If a primary user enters at any node or node status 
changes the node need not inform to its neighbors. 
 
The node need not send the communication to its 
neighbor about its intension to communicate. 
Using the above assumptions, sample simulations were 
completed using MATLAB language. Initially, we 
assumed five nodes connected in CRNC. The statuses of 
all nodes are available in the cloud for process. The 
channels are assigned randomly (0 means busy). Two 
cases were discussed.  
In case 1, if a user in node A wanted to transfer the 
information to a user in node D, the node status will be 
verified and updated on the CRNC board. Once the request 
comes to cloud from node A to transfer packets to the 
destination node D, the cloud controller triggers node A 
and node D and lock the needed channels to transfer the 
information. The channel update (at each node) will be 
done after completion of the task. Further, if we want to 
transfer the packets through each connected node in the 
path, we need to follow a different procedure.  
The available channels in all nodes in the path will be 
verified and assigned the needed channel (s) in each node 
and mark them as busy. In this case, the first available 
channels are 2 in node A, 1 in node B, 1 in node C, 1 in 
node D, and 1 in node E. These channels will be locked 
and information packets will be transmitted. The channels 
will be freed after the completion of the task. 
In the case 2, the user in node A is making 
conversation with the user in node E. But A is moving 
towards B. The CRNC knows that user in node A is close 
to node B and handshaking is required. The CRNC 
scheduler searches for a free channel in B. As soon as the 
user enters in node B’s boundary the handshaking will take 
place and channel in node B will be assigned. The 
channels will be free after completion of the task.  
The CRNC design eliminates the RTS/CTS problem as 
well as hidden node problem because the status of nodes 
and allocation of channels was done at CRNC board. Since 
the decisions were taken at CRNC, the overhearing and 
packet loss were eliminated automatically. Further, 
processing in each node, waiting time for allocation of 
channels, and reservation of channels (RTS/CTS) and 
other 
overheads 
will 
be 
eliminated 
with 
the 
implementation of CRNC. 
MATLAB OUTPUT 
Case 1: Fixed terminals 
send packet A to D 
cloud status 
trigger A and D 
Available Channels in node A 
 0     2     3     0     5 
Available Channels in node B 
 1     2     0     4     5 
Available Channels in node C 
 1     2     3     0     0 
Available Channels in node D 
 1     2     3     0     0 
Available Channels in node E  
 1     2     0     4     0 
Assigned Channel in node D (first available channel)     1 
Channel in node D copies and exits 
 
Case 2: Moving Terminals 
Channel in node A moving and calling through the channel in 
node E 
The updated CRNC cloud status 
Available Channels in node A 
 0     2     3     0     5 
Available Channels in node B 
 1     2     0     4     5 
Available Channels in node C 
  1     2     3     0     0 
Available Channels in node D 
  1     2     3     0     0 
Available Channels in node E  
  1     2     0     4     0 
 
assigned Channel in node A i =     2 
assigned Channel in node D i =     1 
Hand shaking channel in A 
j =     2 
Hand shaking with channel in B 
k =     1 
 
Task completed 
cloud status 
Available Channels in node A  
 0     2     3     0     5 
Available Channels in node B 
 1     2     0     4     5 
Available Channels in node C 
  1     2     3     0     0 
Available Channels in node D 
  1     2     3     0     0 
Available Channels in node E  
  1     2     0     4     0 
VII. CONCLUSIONS AND FUTURE RESEARCH 
In the proposed CRNC structure, the interface is 
connected to CRN nodes and CRNC board (blackboard). 
The controller receives messages from CRN nodes, 
schedules messages, and conducts appropriate actions. The 
knowledgebase consists of a set of production rules and 
inference engine to operate those rules. The scratch space 
(work space) stores the current state of messages for 
processing. 
The hidden node problem and dynamic spectrum 
allocation are very important in cognitive radio networks. 
The hidden node problem will be eliminated by using 
cloud, since CRNC board has current status of CRN 
nodes. Further, the changes will be triggered automatically 
using the blackboard structure. The structure of CRNC 
provides the use of two mobile devices, one mobile device 
and one fixed device, both fixed devices and/or multiple 
devices with fixed and mobile devices.  
The 
cost 
factor 
related 
to 
computing 
and 
communications, storage is not provided in this paper. 
239
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

These 
are 
application 
dependent. 
Further, 
power 
optimization at node level depends upon the quality of 
services 
and 
time 
varying 
state 
of 
wireless 
communications [24, 25]. The cloud helps better power 
savings [25]. 
The future work involves the security issues for 
CRNC, and possible solutions.  
ACKNOWLEDGEMENT 
The research work was supported by the Minority Leaders 
Program through Grant number GRAM 11-567-02-C2. 
The author wishes to express appreciation to Dr. Connie 
Walton, Provost and Vice President, Academic Affairs, 
Grambling State University for her continuous support. 
REFERENCES 
[1] Mitola, J. and Maguire, G. Q., “Cognitive Radio: Making 
software 
radios 
more 
personal”, 
IEEE 
personal 
Communications, vol. 6, no. 4, pp. 13-18, 1999. 
[2] Mitola, J., "Cognitive Radio – An Integrated Agent 
Architecture 
for 
Software 
Defined 
Radio", 
Ph.D. 
Dissertation, Royal Institute of Technology, Kista, Sweden, 
May 8, 2000 
[3] FCC, Second report and order and memorandum opinion 
and order, FCC 08-260, 2008 (last access July 1012). 
[4] Akyildiz, I. Lee, W. and Chowdhury K., “CRAHNs: 
Cognitive Radio ad hoc Networks”, Ad Hoc Networks, vol. 
7, pp. 810-836, 2009. 
[5] Kondareddy, Y. R. and Agrawal, P., “Synchronized MAC 
Protocol for Multi-hop Cognitive Radio networks”, IEEE 
International Conference on Communications (ICC’08), pp. 
3198 – 3202, 2008.   
[6] Ware, C. Wysocki, T. and Chicharo, J., “On the Hidden 
Terminal jamming Problem in IEEE 802.11 Mobile Ad hoc 
Networks”, 
IEEE 
International 
Conference 
on 
Communications (ICC), Helsinki, Finland,  2001, pp. 261-
265. 
[7] Jayasuriya, A. Perreau, S. Dadej, A. and Gordon, S., 
“Hidden Vs. Exposed Terminal Problem in Ad hoc 
Networks”, 
Proceedings 
of 
the 
Australian 
Telecommunications, 
Networks 
and 
Architecture 
Conference (ATNAC 2004), December 2004, Sydney, 
Australia. 
[8] Fullmer, C.L. and Garcia-Luna-Aceves, J.J., “Solutions to 
Hidden Terminal Problems in Wireless Networks”, 
Proceedings 
of 
the 
SIGCOMM’97 
conference 
on 
Applications, technologies, architectures, and protocols for 
computer communication, 1997, pp. 39-49. 
[9] Jeong, J. Kim, H. Lee, S. and Shin, J., “An Analysis of 
Hidden Node Problem in IEEE 802.11 Multihop 
Networks”, Sixth International Conference on Networked 
Computing and Advanced Information Management 
(NCM), Seoul, S. Korea, 2010, pp. 282-285. 
[10] Gossain, M. P. Cordeiro, C. and Agrawal, D. P., 
“Minimizing the Effect of Deafness and Hidden Terminal 
Problem in Wireless ad hoc Networks using Derectional 
Antennas”, 
Wireless 
Communications 
& 
Mobile 
Computing - Wireless Ad Hoc Networks: Technologies and 
Challenges, vol. 6, Issue 7, November 2006, John Wiley 
and Sons Ltd. Chichester, UK, pp. 917-931. 
[11] Reddy, Y. B., “Spectrum Detection in Cognitive Networks 
by Minimizing Hidden Terminal Problem”, ITNG 2012, 
April 16-8, Las Vegas. 
[12] Ge, F. Lin, H. Khajeh, A. Chang,C. J. and Eltawil, A.M., 
“Cognitive 
Radio 
Rides 
on 
the 
Cloud”, Military 
Communications Conference,  MILCOM 2010, October 
2010, 1448 – 1453 
[13] Chen, Z. Zang, C. Lin, F., Yu, J. and Lie, X., “Towards a 
Large-Scale Cognitive Radio Network: Testbed, Intensive 
Computing, Frequency Agility, and Security”, International 
Conference 
on 
Computing, 
Networking 
and 
Communications (ICNC), 2012, Feb. 2 2012, pp. 556 - 562 
[14] Ko, C. Hang, D. H. and Wu., S., “Cooperative Spectrum 
Sensing in TV White Spaces: When Cognitive Radio Meets 
Cloud”, IEEE INFOCOM 2011, pp. 683-688. 
[15] Biswas, A. R., Aysal, T.C., Kandeepan, S., Kliazovich, D., 
and Piesiewicz, R., “Cooperative Shared Spetrum Sensing 
for 
Dynamic 
Cognitive 
Radio 
Networks”, 
IEEE 
International Conference on Communications, Dresdan, 
Germany, June 2009, pp. 1-5. 
[16] Zhang, W. Mallik, R. K. and Letaief, K. B., “Cooperative 
Spectrum Sensing Optimization in Cognitive Radio 
Networks”, 
IEEE 
International 
conference 
on 
Communications, Beijing, China, 2008, pp. 3411-3415. 
[17] You, T. Hassanein, H. and Yeh, C., “PIDC – Towards an 
Ideal MAC Protocol for Multi-hop Wireless LANs”, 
International 
conference 
on 
Wireless 
Networks, 
Communications and Mobile Computing, June 2005, pp. 
13-16. 
[18] Ng, P. C. Liew, S. C. Sha, K. A. and To, W. T., 
“Experimental Study of Hidden-node Problem in IEEE 
802.11 Wireless Networks”, ACM SIGCOMM, August 
2011, Toronto, Canada. 
[19] Thomas, R. W. DaSilva, L. A. and MacKenzie, A. B., 
"Cognitive networks", Proceedings of the First IEEE 
International Symposium on New Frontiers in Dynamic 
Spectrum Access Networks, Baltimore, MD, USA, 
November 8–11, 2005. 
[20] Fortuna, C. and  Mohorcic, M."Trends in the development 
of 
communication 
networks: 
Cognitive 
networks", 
Computer Networks, 2009. 
[21] Song, L., "Cognitive Networks: Standardizing the Large 
Scale 
Wireless 
Systems", 
5th 
IEEE 
Consumer 
Communications and Networking Conference (CCNC), 
2008, pp. 988-992. 
[22] Balamuralidhar, P. and Prasad, R., "A context driven 
architecture for cognitive nodes", Wireless Personal 
Communications 45 (2008), pp. 423–434. 
[23] Song, L. and Hatzinakos, D. "Cognitive networking of 
large scale wireless systems". International Journal of 
Communication Networks and Distributed Systems 2 (4): 
2009, pp. 452-475. 
[24] Khajeh, A. Cheng, S. Y. Eltawil, A. and Kurdahi, F., 
“Power management for cognitive radio platforms,” in 
IEEE 
Global 
Telecommunications 
Conference, 
GLOBECOM 2007, pp. 4066 -4070. 
[25] Amin,  K. Kim, M. Dutt, N. Eltawil, A. M. and Kurdahi, F. 
J., “Cross-Layer Co-Exploration For Mobile Multimedia,” 
in proceedings of IEEE Workshop on Embedded Systems 
for Real-time Multimedia (ESTIMedia’08) in part of 
ESWEEK, pp. 13-18. 
 
240
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-207-3
SENSORCOMM 2012 : The Sixth International Conference on Sensor Technologies and Applications

