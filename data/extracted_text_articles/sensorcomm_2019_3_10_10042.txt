Energy-aware Cross-level Model for Wireless Sensor Networks 
Michel Bakni, Guillaume Terrasson, Octavian Curea, Alvaro Llaria, Jessye Dos Santos 
Univ. Bordeaux, ESTIA Institute of Technology 
F-64210 Bidart, France 
e-mail: {m.bakni, g.terrasson, o.curea, a.llaria, j.dossantos}@estia.fr 
 
Abstract— In the design stage, Wireless Sensor Network 
developers generally need simulation tools to save both time and 
costs. These simulators require accurate models to precisely 
describe the network components and behaviours, such as 
energy consumption. Nevertheless, although the model has 
grown in complexity over last years, from layered-stack to cross-
level, the energy aspects are not yet well implemented. In this 
paper, we suggest an energy-aware cross-level model for 
Wireless Sensor Networks. Our modelling approach allows for 
parameters that belong to different levels to interact with each 
other and to analyse their impact on energy consumption. To 
validate this approach, the energy-aware cross-level model for 
network radiofrequency activities is first provided. The results 
obtained using suggested scenarios are compared with those 
collected from a well-known simulator: NS2. Finally, the 
usefulness of our model in Wireless Sensor Network design 
process is demonstrated thanks to a case study aimed at 
comparing and selecting the most energy-efficient wireless link 
protocol. 
Keywords-Energy-aware 
design; 
Cross-level; 
Energy 
modelling; Wireless Sensor Networks. 
I. 
 INTRODUCTION 
A Wireless Sensor Network (WSN) is a set of nodes, 
which embed sensors coupled with processing units and 
wireless communication devices. This kind of network is used 
to monitor physical phenomena in the deployment area or to 
trace targets moving inside it. Thanks to battery-powered and 
wireless connectivity features, WSNs are both highly flexible 
and scalable. These two characteristics make WSNs a 
technology that provides innovative applications in a wide 
variety of domains, such as healthcare, industry, and 
agriculture [1].  
Nevertheless, node energy resources are strictly limited, 
making the power-aware design of WSNs a major research 
issue, whose relevance has increased in recent years [2]. In 
this regard, at the very early stages of the design process, 
engineers and researchers involved in the development of 
WSN applications must take the right decisions in terms of 
energy efficiency and also consider overall application 
performances. Usually, simulators and emulators are used to 
accomplish this task. 
The scientific literature review reveals a wide variety of 
simulators generally designed for a specific-level such as 
network or node levels. However, this review shows that there 
is a lack of analysis tools dedicated to the early design stages, 
especially from a power awareness point of view. For 
example, there is no model that is able to show how a given 
parameter impacts energy consumption, not only from a 
specific-level perspective but from a multilevel one as 
well [3].  
In this context, the work presented defines an energy-
aware cross-level model for WSNs which tries to mitigate the 
limitations mentioned above. The suggested model is applied 
to the radiofrequency (RF) activities of the network, a vital 
part of the node that is generally responsible for a high-energy 
consumption in WSN applications [4]. The goal of our model 
is to accurately estimate RF module consumption based on 
cross-level parameter impacts. 
This paper is organised as follows. Section II provides an 
overview of the development of WSN models and the 
associated simulators. In Section III, a global description of 
the proposed cross-level approach together with its 
application to WSN RF activities is provided. The first results 
using the implemented energy-aware model are presented and 
discussed in Sections IV and V. Finally, Section VI concludes 
this paper. 
II. 
WSN MODELLING AND SIMULATION 
To better address the modelling issue, a review of the 
evolution of WSN models is first provided. Then, for WSN 
simulators based on these models, an energy-aware level-
based classification is introduced.  
A. WSN Models: from Layered-stack to Cross-level Design 
Classical data network models, such as Open Systems 
Interconnection (OSI), propose a design approach consisting 
of a set of layers that are stacked together. In a layered-stack 
model, the layers are separated according to their 
functionality. Every layer offers interfaces only towards 
adjacent layers in the stack [5]. However, in WSNs, 
parameters from different layers interact with each other, and 
services are provided across the stack layers rather than a 
specific layer. Thus, the traditional stack-layered model is 
difficult to adapt to the requirements of this kind of 
network [6]. 
Several years ago, many works dealt with the modelling 
issue, developing various solutions. In [5], the authors 
propose a modelling approach based on a cross-layer design. 
This approach supports adaptivity and optimisation across 
multiple layers of the protocol stack. A similar cross-layered 
model is proposed in [7]. Moreover, security considerations 
from a cross-layer point of view are added to this cross-
layered model in [8]. 
Another strategy is to propose the “tier” or “level” 
concept [9], where a level represents a group of parameters 
that belong to different functions and features of WSNs, and 
not only to the network model. In parallel to the previous 
approaches, the solution described in [10] groups the model 
46
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

layers into two levels. The first is mainly concerned with non-
physical parameters related to software and the application. 
The second is dedicated to hardware where the protocols are 
implemented, mainly routing and linking, as well as sensors 
and RF unit parameters. 
Subsequently, different evolutions were proposed to 
develop a cross-level model following the multi-level 
approach. This led to the development of a new approach to 
model WSNs, extending the traditional layered-stack model 
to include not only software and hardware levels that make up 
the nodes, but also parameters from the surrounding 
environment. In this way, a wireless medium level was 
attached to the model in [11] and [12]. In [13], a description 
of how the multiple-level model is used to design and develop 
WSN from a cross-level perspective is also carried out. 
Nevertheless, as demonstrated in [13], not all the proposed 
approaches are actually employed in an effective cross-level 
manner. Moreover, as mentioned above, the energy aspect of 
WSNs is not always well implemented, despite this being a 
crucial issue in WSN design. 
B. WSN Simulators: a Level-based Overview 
In general, WSNs simulators are dedicated to a specific 
level of abstraction and are built over the previously discussed 
models. Thus, they focus on simulating parameters related to 
one particular level [2]. A parameter is a numeric value 
describing one property of a given level, such as power levels 
or bit rate.  
For example, Network simulator 2 (NS2) [14] is oriented 
to network protocol simulation and provides poor support for 
hardware. On the contrary, TOSSIM [15] emulates hardware 
in detail, but it provides an abstract perspective of network 
protocols. Furthermore, there are multi-level simulators. In 
this case, the simulator uses parameters belonging to different 
levels at the same time. For instance, Jsim [16] is a multi-level 
WSN simulator because it simulates both environment and 
network parameters. Finally, some simulators are described as 
cross-level, because they provide the ability for parameters 
belonging to different levels to interact with each other. 
COOJA [17] is an example of this category of simulators.  
All the previously mentioned simulators are non-energy-
oriented. This does not mean they cannot simulate energy 
aspects, but rather they were not built for this purpose. Based 
on this, another classification can be proposed, as illustrated 
in Figure 1. Simulators are first divided based on energy with 
two main branches, energy-oriented and non-energy-oriented 
simulators [3]. Then, a level-based classification is added. 
 
Figure 1.  Energy-aware level-based classification for WSN simulators. 
Overviewing the energy-oriented simulators, on the one hand, 
PowerTOSSIM [18] is an energy-oriented TOSSIM extension 
dedicated to the emulation of energy in hardware. On the other 
hand, IDEA1 [19] is an example of an energy-oriented multi-
level simulator. IDEA1 divides the network into three abstract 
levels: the environment, the node, and the wireless medium. 
Although the simulator allows cross-level interaction for some 
parameters, this feature is not fully supported, and there are 
still parameters that are not treated in a cross-level manner, 
such as the environment parameters. 
This review shows that many non-energy-oriented multi 
or cross-level models and simulators of WSNs have been 
proposed. However, from an energy point of view, the cross-
level approach is not fully adopted. Therefore, with existing 
simulators, it is difficult to analyse the impact of parameters 
that belong to different levels on both the overall node energy 
consumption and WSN lifetime. 
III. 
CROSS-LEVEL ENERGY MODEL 
In this section, to address the problems described above, 
we propose a model for WSNs that is both energy-aware and 
cross-level.  
A. Global Model 
In our model, the implementation of the cross-level 
concept allows parameters from different levels to interact 
with each other affecting the performances of WSNs. In this 
work, we are only concerned with the impact of the 
parameters on energy performance such as network lifetime 
and node autonomy. Figure 2 provides an overview of the 
proposed model. 
The model’s levels can be described as follows: 
 
The Use case Level (UL) is the most abstract level of 
the model. It is related to the design stage of the WSN 
application. Parameters, such as frequency of the 
pattern Fp of the nodes, to be defined later, or payload 
length reside in this level. 
 
 
Figure 2.  The Proposed Cross-level model for Wireless Sensor Networks. 
 
47
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

 
The System Level (SL) reflects a topological point of 
view of the network. It focuses on how high-level 
protocols and algorithms affect WSN performances. 
Parameters related to the network topology, like the 
distance between nodes or high-level protocols 
headers, belong to this level. 
 
The Node Level (NL) concerns the interaction 
between software (node operating system) and 
onboard hardware (RF circuit). As illustrated in 
Figure 3, the parameters related to the link protocol, 
such as the bit rate and the link layer header fit in this 
level, as well as the parameters related to channel 
access or acknowledgment process. 
 
The Circuit Level (CL) is particularly used to describe 
node hardware. Modelling and description of 
electronic circuits reside in this level. It includes RF 
module, sensors, CPU and battery as well as 
hardware-specific parameters, such as power level or 
supply voltage. 
Consequently, in this model, the higher the level is, the 
more abstract and general the parameters are. For example, 
parameters belonging to the UL are related to the scenario 
description and theoretically fit into any WSN application. On 
the other hand, CL parameters are very specific and describe 
only particular electronic circuits. 
As illustrated in Figure 2, the use of the cross-level feature 
enables not only energy consumption of the nodes or the 
system’s lifetime to be estimated, but also provides a basis for 
different scenario comparisons. 
B. Energy-aware Model Applied to RF Activities 
The proposed model is first applied to describe RF 
activities in a WSN. Based on the afore mentioned 
classification, the parameters related to RF activities are 
categorised as illustrated in Figure 3. Note that the colour of 
each parameter corresponds to its parent level. 
In the first stage, the total number of bits to send is 
calculated. This includes the payload (UL) created by the 
sensors or other applications that generate data on the node, as 
well as high-level protocol headers (SL) and the link layer 
protocol header (NL). 
After this, the total amount of data is confronted against 
the fragmentation threshold (NL) identified by the wireless 
link protocol. If fragmentation is needed, the process will take 
place in this stage, and will result in two or more data frames. 
Next, the preamble (NL) is added to each data frame. Then, 
the length of each frame is calculated in terms of seconds, 
thanks to the bitrate(s) (CL) provided by the selected chipset. 
The next step is to build the energy consumption pattern 
for the node’s RF activities. In our approach, we assume the 
energy consumption in each node takes place based on a 
repeated pattern. The pattern is defined as a set of sequenced 
activities or phases with their corresponding power levels. In 
this context, the frequency of the pattern Fp (UL) corresponds 
to the ratio between the number of occurrences of the pattern 
and the considered simulation time.  
 
 
 
Figure 3.  An energy-aware cross-level model for RF activities. 
Then, to build this RF consumption pattern, activities 
sequence (UL) and phases order (NL) are to be considered. 
The activity sequence helps to specify the actions taking place, 
i.e. sending or receiving frames, while the link protocol 
defines the phases and their order within each activity. For 
example, in the sending activity, the order of phases is: 
accessing the channel (phacc), exchanging data frames (phexch) 
and then waiting for acknowledgment (phack). 
After that, the sequence of activities is to be matched with 
the power levels (CL) provided by the RF module datasheet. 
This includes the consideration of the distance (SL) that has a 
direct impact on the power level of the sending activity. Then, 
the energy consumed is calculated.  
In the last stage, the total simulation time (UL), the 
frequency of the pattern Fp (UL), as well as the initial amount 
of the energy stored in the battery (CL) are considered in our 
model to estimate the system’s lifetime. 
IV. 
MODEL COMPARISON WITH NS2 
A. Scenario Definition 
Simulation scenarios are suggested to compare the results 
obtained from the proposed model with those of a well-
known simulator, namely NS2. These scenarios take place in 
an open area measuring 25x25 m2. Within this area, there are 
two wireless nodes, 10m apart, named Node A and Node B. 
Periodically, Node A sends a fixed-length payload to 
Node B through the wireless medium using its RF module. 
As soon as Node B receives the payload, it replies by sending 
the received payload to Node A through the wireless 
medium. Node A and Node B use the same protocol stack. 
Each node applies a TCP/IP network model. The 
implementation of the protocols starts at the network layer 
where Internet Protocol version 4 (IPv4) has been chosen. 
The Internet Control Message Protocol (ICMP), which is an 
integral part of IPv4, is employed to create echo messages. 
Consequently, whenever the IPv4 module receives a data 
packet, it sends the same data back to the original source. In 
all scenarios, the length of IPv4 and ICMP headers are 20 and 
 
48
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

4 bytes respectively, as defined by the standards. Table I 
displays the scenario settings. 
Next, the link layer parameters are set. We decided to 
implement two wireless link protocols. 802.11a is used in the 
first set of scenarios, while 802.15.4 is applied in the second 
set. The energy specification for the 802.11a RF module is 
derived from an implementation of a chipset named HDG204 
(H&D wireless). For 802.15.4, the CC2420 transceiver (Texas 
Instruments) is selected. Table II shows the settings of the two 
wireless link protocols.  
For each simulation, the considered time used to calculate 
energy consumption is 100 seconds, and it begins after 
initialising the nodes. For each protocol, three different values 
of Fp: 0.1, 1 and 2 Hz, and ten values for the payload length 
ranging between 10 to 100 bytes are used. Each scenario 
requires a combination of the three parameters mentioned 
above. As a result, there are 30 scenarios to be run for each 
wireless link protocol. These scenarios are configured both in 
NS2 and in the proposed model implemented in Matlab aimed 
at comparing the results. 
B. Results and Discussion 
The obtained results are the energy consumed by different 
activities of the RF module. These activities are categorised 
into 4 phases:  
 
Access phase (phacc): RF module tries to access the 
wireless channel. 
 
Exchange phase (phexch): RF module sends or receives 
data frames. 
 
Acknowledge phase (phack): RF module sends or 
receives acknowledgment frames. 
 
Complementary phase (phcom): The RF module is in 
sleep state. 
In these phases, the cross-level interaction between 
parameters takes place, i.e. the energy consumed in each phase 
is the result of interplay between parameters related to 
different levels. For example, in the exchange phase, the 
consumed energy is a function of the header lengths, payload 
length and bit rate, which belongs to the following levels: UL, 
SL and NL respectively. 
TABLE I.  
GENERAL SETTINGS FOR THE PROPOSED SCENARIOS 
Parameter 
Value 
Number of the nodes 
2 
Node positions  
(10,10), (10,20) [m] 
Scenario duration TSce 
100 [s] 
Pattern Frequency Fp 
0.1, 1, 2 [Hz] 
Payload length 
10, 20, …, 100 [Byte] 
Link protocol 
802.11a, 802.15.4 
TABLE II.   WIRELESS LINK PROTOCOLS SETTINGS 
Parameter 
802.11a 
(HDG204) 
802.15.4 
(CC2420) 
Bitrate [bps] 
12 M 
250 K 
Carrier Sense Mechanism 
Pure CSMA/CA 
CCA-ED 
Transmitter power [mW] 
725 
52 
Receiver Power [mW] 
220 
59 
Sleep Power [mW] 
0.2 
0.06 
The results obtained by implementing the previously 
described scenarios in NS2 and Matlab using our model can 
be found in Table III. The upper part shows the obtained 
results from 802.11a and the lower part for 802.15.4. Each part 
is further divided into two subparts, corresponding to 
scenarios with 10 and 100 bytes for the payload length 
respectively. Figure 4 shows the energy consumption patterns 
of Node B, extracted from our model, for the two protocols 
when the payload length is 100 bytes. Compared to NodeB, 
Node A has the same activities, thus, it has an identical energy 
consumption. 
For the two protocols, when comparing results obtained 
from NS2 and our proposed model, the following differences 
and similarities can be found. The energy consumed in phacc 
or phack is identical and there is a slight difference in the 
energy consumed in phcom. In phexch, the difference is notable 
but fix and this is due to different interpretations of the link 
protocol specifications. For example, in our model, the ICMP 
header is considered to be part of the data packet, contrary to 
NS2 where this header is added to the data packet later on. 
Figure 5 shows the relative errors between the results 
obtained from NS2 and those obtained from the proposed 
model. The left side of the figure is dedicated to 802.11a and 
the right side to 802.15.4. Different values of Fp are 
displayed, namely 0.1, 1, and 2 Hz. For each of these values, 
a set of corresponding errors is provided, each of which is 
also related to a simulation where the payload length is 10, 
50, or 100 bytes. 
TABLE III.  
ENERGY CONSUMPTION OF THE PHASES IN DIFFERENT 
SCENARIOS FOR NODE B(FP = 1 HZ) 
Simulation 
The consumed energy by phase [μJ] 
phacc 
phexch 
phack 
phcom 
Total 
802.11a 
10 Bytes 
Matlab 
51.03 
50.08 
23.63 
199.959 
324.69 
NS2 
51.03 
55.76 
23.63 
199.950 
330.37 
100 Bytes 
Matlab 
51.03 
106.79 
23.63 
199.935 
381.38 
NS2 
51.03 
112.46 
23.63 
199.927 
387.04 
802.15.4 
10 Bytes 
Matlab 
18.89 
145.73 
39.07 
59.78 
263.47 
NS2 
18.88 
152.84 
39.07 
59.78 
270.47 
100 Bytes 
Matlab 
18.89 
465.37 
39.07 
59.44 
582.77 
NS2 
18.88 
472.42 
39.07 
59.45 
589.82 
 
Figure 4.  Energy consumption patterns for different wireless link 
protocols (Node B, Payload length = 100 Bytes, Fp = 1 Hz). 
49
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

 
Figure 5.  Relative error between the proposed model and NS2. 
In all the simulation results, the relative errors obtained 
from 802.11a are greater than those of the corresponding 
scenarios of 802.15.4. This difference can be explained by 
unplanned and non-periodic radio activities that appear 
periodically in NS2 802.11a simulations. These activities 
have a fixed duration regardless of Fp and the payload length. 
Each of these activities appears as a single pulse of 
transmission or reception causing an additional energy 
consumption around of 5 μJ and 2 μJ respectively. 
Finally, as illustrated in Figure 5, the value of the relative 
error between NS2 and the proposed model did not exceed 
3.5%. Based on this, we can consider the proposed model is 
validated with NS2. Although not shown in this scenario, our 
proposed WSN model also allows adding energy 
consumption phases with other hardware on the node, such 
as CPU or sensors. As a result, an accurate pattern can be 
constructed precisely representing the real consumption of 
the node contrary to NS2 that has poor support for hardware, 
as mentioned above. 
V. 
APPLICATION OF THE MODEL: A CASE STUDY  
To demonstrate the usefulness of the proposed model, the 
previous scenarios, suggested in Section IV.A, are used to 
compare wireless link protocol performance in terms of 
energy 
consumption. 
The 
interaction 
between 
two 
parameters with regard to energy consumption is observed. 
These two parameters are the pattern frequency Fp and the 
payload length. 
Figure 6 presents the difference, in Joules, between the 
energies (Epat802.11a - Epat802.15.4) consumed by the two link 
protocols respectively. There are three distinguishable 
situations: 
 
The red curve: this represents the equal-energy 
boundary, i.e. for the scenarios that are positioned on 
the curve, the two protocols consume the same 
amount of energy. 
 
The area above the curve (cyan): in this area, 802.11a 
is more energy-efficient than 802.15.4. For all the 
scenarios that are positioned inside this area, using 
802.11a as the wireless link protocol is recommended 
from an energy point of view. 
 
Figure 6.  The Equal-energy caurve of the 802.11a and 802.15.4 in the 
proposed scenarios. 
 
The area below the curve (yellow): in this area, 
802.15.4 is more energy-efficient than 802.11a. For 
all the scenarios that are positioned inside this area, 
using 802.15.4 as the wireless link protocol is 
recommended. 
As illustrated in Figure 6, when Fp is 2 Hz, using 802.11a 
is more efficient in terms of energy consumption. On the 
contrary, when Fp is 0.1 Hz, the use of 802.15.4 is more 
energy efficient. In the case where Fp is 1 Hz, the choice is a 
function of the payload size. If it is less than 30 bytes, the use 
of 802.15.4 is more efficient. Conversely, when the payload 
size is greater than 30 bytes, using  802.11a is more effective 
from an energy perspective. 
Finally, this case study demonstrates how the proposed 
model could be used in the early design stage, as a tool to 
select, for example, the most energy-efficient protocol for a 
given case study. Moreover, it shows the energy-aware aspect 
of our model, namely, its ability to observe how a given 
parameter could impact energy consumption. 
VI. 
CONCLUSION 
This paper has presented the principles of a cross-level 
energy model for power-aware WSN design, mainly aimed at 
WSN designers. First, the model was implemented to 
describe the RF activities and the obtained results were 
compared with NS2. This comparison showed a relative error 
percentage below 3.5% for the considered scenarios. The 
model’s usefulness has also been illustrated by comparing 
two wireless link protocol from an energy point of view, 
using a basic case study. 
Although the results are promising, other hardware 
activities, such as the CPU and sensors, are to be 
implemented in the proposed model as well. Furthermore, for 
future work, a simulation tool which implements the 
complete cross-level energy-aware model is also to be 
developed. This tool will first be validated using more 
complex scenarios that cover, for example, a number of 
different network topologies with more than two nodes. 
Then, the results obtained from this tool will be also 
50
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

compared to experimental case studies to demonstrate the 
accuracy of our cross-level approach. 
ACKNOWLEDGMENT 
The work presented in this paper has been financially 
supported by the New Aquitaine Regional Council, Bordeaux, 
France (as part of the Call for 2016 Project funds), within the 
framework of the OUDINI research project. 
 
REFERENCES 
[1] J. Yick, M. Biswanath, and G. Dipak, “Wireless sensor 
network survey,” Computer networks, Elsevier, pp. 2292-
2330, 
vol. 
52, 
no. 
12, 
Aug. 
2008, 
doi: 10.1016/j.comnet.2008.04.002. 
[2] R. Chéour, M. W. Jmal, O. Kanoun, and M. Abid, “Evaluation 
of simulator tools and power-aware scheduling model for 
wireless sensor networks,” IET Computers & Digital 
Techniques, vol. 11, pp. 173-182, Aug. 2017, doi: 10.1049/iet-
cdt.2017.0003. 
[3] J. Haase, J. M. Molina, and D. Dietrich, “Power-aware system 
design of wireless sensor networks: Power estimation and 
power profiling strategies,” IEEE Trans. on Industrial 
Informatics, 
vol. 
7, 
pp. 
601-613, 
2011, 
doi: 10.1109/TII.2011.2166793. 
[4] G. Terrasson, R. Briand, S. Basrour, V. Dupé, and O. Arrijuria, 
“Energy Model for the Design of Ultra-Low Power Nodes for 
Wireless Sensor Networks”, Procedia Chemistry, Vol. 1, Issue 
1, pp. 1195-1198, 2009, doi 10.1016/j.proche.2009.07.298. 
[5] H. Zimmermann, "OSI Reference Model - The ISO Model of 
Architecture for Open Systems Interconnection," in IEEE 
Trans. on Communications, vol. 28, no. 4, pp. 425-432, April 
1980, doi: 10.1109/TCOM.1980.1094702. 
[6] A. J. Goldsmith and S. B. Wicker, “Design challenges for 
energy-constrained ad hoc wireless networks,” IEEE Wireless 
Communications, 
vol. 
9, 
pp. 
8-27, 
Aug. 
2002, 
doi: 10.1109/MWC.2002.1028874. 
[7] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, 
“Wireless sensor networks: a survey,” Computer Networks, 
vol. 38, no. 4, pp. 393-422, Mar. 2002, doi: 10.1016/S1389-
1286(01)00302-4. 
[8] W. Charfi, M. Masmoudi, and F. Derbel, “A layered model for 
wireless sensor networks,” Proc. of 6th International Multi-
Conference on Systems, Signals and Devices, IEEE, Mar. 
2009, pp. 1-5, doi: 10.1109/SSD.2009.4956693. 
[9] E. Egea-López, J. Vales-Alonso, A. S. Martínez-Sala, P. 
Pavón-Mariño, and J. García-Haro, “Simulation tools for 
wireless sensor networks,” International Symposium on 
Performance Evaluation of Computer and Telecommunication 
Systems (SPECTS05), Society for Modeling & Simulation 
International, Jul. 2005, pp. 1-8, ISBN: 9781622763504. 
[10] M. Kuorilehto, M. Kohvakka, M. Hännikäinen, and T. D. 
Hämäläinen, 
“High 
abstraction 
level 
design 
and 
implementation framework for wireless sensor networks,” 
International Workshop on Embedded Computer Systems: 
Architectures, Modeling, and Simulation (SAMOS 2005), 
Lecture Notes in Computer Science Springer, Jul. 2005, 
pp. 384-393, doi:10.1007/11512622_41. 
[11] M. Korkalainen, M. Sallinen, N. Kärkkäinen, and P. Tukeva, 
“Survey of wireless sensor networks simulation tools for 
demanding applications,” 2009 Fifth International Conference 
on Networking and Services, IEEE, Apr. 2009, pp. 102-106, 
doi: 10.1109/ICNS.2009.75. 
[12] W. Du, D. Navarro, F. Mieyeville, and F. Gaffiot, “Towards a 
taxonomy of simulation tools for wireless sensor networks,” 
Proc. of the 3rd Int. Conf. on Simulation Tools and Techniques, 
ICST, 
Mar. 
2010, 
pp. 
52-59, 
doi: 10.4108/ICST.SIMUTOOLS2010.8659. 
[13] M. Imran, A. M. Said, and H. Hasbullah, “A survey of 
simulators, emulators and testbeds for wireless sensor 
networks,” 2010 International Symposium on Information 
Technology, 
IEEE, 
Jun. 
2010, 
pp. 
897-902, 
doi: 10.1109/ITSIM.2010.5561571. 
[14] T. Issariyakul and E. Hossain, “Introduction to Network 
Simulator 2 (NS2),” in Introduction to Network Simulator 
NS2. Springer US, pp. 21-40, 2012, doi: 10.1007/978-0-387-
71760-9_2. 
[15] P. Levis, N. Lee, M. Welsh, and D. Culler, “TOSSIM: Accurate 
and scalable simulation of entire TinyOS applications,” Proc. 
of the 1st Int. Conf. on Embedded Networked Sensor Systems, 
ACM, Nov. 2003, pp. 126-137, doi: 10.1145/958491.958506. 
[16] A. Sobeih et al., “J-Sim: A simulation and emulation 
environment for wireless sensor networks,” IEEE Wireless 
Communications, vol. 13, pp. 104-119, Aug. 2006, 
doi: 10.1109/MWC.2006.1678171. 
[17] F. Osterlind, A. Dunkels, J. Eriksson, N. Finne, and T. Voigt, 
“Cross-Level sensor network simulation with COOJA,” Proc. 
of the 31st Conf. on Local Computer Networks, IEEE, Nov. 
2006, pp. 641-648, doi: 10.1109/LCN.2006.322172. 
[18] E. Perla, A. Ó. Catháin, R. S. Carbajo, M. Huggard, and C. 
McGoldric, “PowerTOSSIM z: Realistic energy modelling for 
wireless sensor network environments,” Proc. of the 3rd ACM 
Workshop on Performance Monitoring and Measurement of 
Heterogeneous Wireless and Wired Networks, ACM, Oct. 
2008, pp. 35-42, doi: 10.1145/1454630.1454636. 
[19] W. Du, D. Navarro, F. Mieyeville, and I. O’Connor, “IDEA1: 
A validated system C-based simulator for wireless sensor 
networks,” Proc. of the 8th Int. Conf. on Mobile Ad-Hoc and 
Sensor 
Systems, 
IEEE, 
Oct. 
2011, 
pp. 
825-830, 
doi: 10.1109/MASS.2011.95. 
 
 
 
51
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-744-3
SENSORCOMM 2019 : The Thirteenth International Conference on Sensor Technologies and Applications

