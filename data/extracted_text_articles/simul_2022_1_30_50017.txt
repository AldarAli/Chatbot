Heatmap Weighted A* Algorithm for NPC Pathfinding 
Paul Williamson 
School of Computing and Mathematics 
University of South Wales 
CF37 1DL, Pontypridd 
e-mail: paul.williamson@southwales.ac.uk 
Christopher Tubb 
School of Computing and Mathematics 
University of South Wales 
CF37 1DL, Pontypridd 
e-mail: christopher.tubb@southwales.ac.uk
Abstract— Non-Player Characters (NPCs) are characters 
within a video game, which are not controlled by a human 
participant. While they are mainly used to fulfil a role not 
designated for a human player, there are occasions when an 
NPC needs to play in a human role, and therefore needs to 
imitate appropriate gameplay behaviours, in such a way that it 
is not easily distinguished from a human player. Navigation is 
a fundamental gameplay behaviour, focused on how a player 
traverses the environment when undertaking objectives. This 
paper explores the possibility of modelling human navigation 
by modifying A* algorithm with a heatmap derived from 
human-based data. This is achieved by having participants 
complete a search and collect experiment. The data is saved for 
analysis and to develop a navigation model. NPCs using the 
model undertake the same experiment, but with a heatmap 
weighted A* graph. The experiment explores adjusting the 
weight of the heatmap so its influence on the pathfinding varies 
and a comparison can be made to see which weight better 
reflects the human results. 
Keywords—NPC; Player Modelling; Pathfinding; Gameplay; 
A* Algorithm. 
I. INTRODUCTION 
In the context of an NPC, pathfinding is the mechanism 
used to find a suitable route between two points on a map. 
The type of game genre and size of the map can influence 
which technique is more practical because some solutions 
are only viable under predefined constraints. In First Person 
Shooter (FPS) games, a common technique used is A* 
algorithm, or some variant of this method, where a 2D grid is 
superimposed over the map, then using cost and heuristic the 
algorithm calculates a shortest cost path. 
This paper expands on the A* algorithm. It focuses on 
adjusting the weight cost of nodes in accordance with a 
heatmap. For the purposes of this experiment, the heatmap is 
generated from data captured from human players roaming 
the environment, undertaking an experiment in which they 
need to find and collect eight coins. This data enabled a 
model to be developed, which captures not only the general 
areas of navigation, but also intricate behaviours associated 
with the act of roaming, and the influence they have on 
pathfinding. 
Secondly, this research uses a tagged environment to help 
determine pathing based decisions. This limits the distance 
of the routing decisions to only what is within view from the 
perspective of the NPC. This technique drastically reduces 
performance cost because, despite the size of the A* graph, 
the distance between the NPC and destination node is always 
relatively short. 
In Section II, this paper discusses the motivation behind a 
player driven A* algorithm solution. It states why it is 
important for NPCs to use the same navigational behaviours 
as human players and why heatmaps generate a useful tool 
for this purpose. Section III examines research in the field of 
improving the usefulness of A* algorithm for pathfinding 
solutions, and some implications of the limitation of these 
methods. In Section IV, the method for the data capture 
experiment is explained, which involves human subjects 
roaming the map to collect several coins. Section V uses the 
same experiment as Section IV, except in this experiment, 
NPCs with the roaming model are used and a thorough 
evaluation of the results is conducted to determine the 
applicability of the model and how it compares to the human 
subject results. Finally, Section VI concludes the paper. 
II. MOTIVATION 
While roaming may appear a random action, it is often a 
more strategic behaviour where a player tries to maximise 
scanning efficiency by positioning their character to visually 
cover as much of the map as possible. This increases the 
likelihood they will spot their objective and reduce the 
chance of checking already checked areas of the map [1].  
The motivation for this paper is to address how NPCs can 
roam the environment and increase the likelihood it will 
interact with a human player. This is important in both single 
and multiplayer games. In single player games, the game 
should revolve around the player, so ensuring regular 
engagement from NPCs is crucial. Regarding multiplayer 
games or roles generally reserved for a human player, it is 
important that NPCs can imitate the general behaviours seen 
in a human player, which include using roaming in a way 
which is consistent with the routes a player might take. For 
example, during a death match scenario, players roam the 
map in search for opponents to eliminate. When NPCs 
pathfinding is not modelled to reflect the same generalised 
routes as a human player, it can cause them to patrol areas 
rarely visited by players. 
Heat maps offer a good overview of which parts of the 
map contain the most interactions. Utilising this information 
can help develop NPCs that are not hard coded to patrol a 
certain route, a technique which is commonly used, which is 
predictable and often recognised by a player. Instead, 
providing the NPC with human player acquired data so they 
15
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

can 
undertake 
roaming 
with 
a 
more 
human-like 
characteristic. This should enable naturally occurring 
interactions, rather than forced encounters where the NPC 
can appear omniscient. 
The perception of omniscience is a common issue with 
NPCs, which is often caused by making decisions and/or 
performing actions with information that it should not have. 
For instance, in some cases an NPC will shoot at a wall with 
a player on the other side. They should not know the player 
is there. However, they are provided with an extra layer of 
information, which can influence actions. An important part 
of making NPCs appear more human-like is therefore 
removing this perception. The development of a new model 
of navigation, as discussed here, is intended to do this. To 
achieve this goal NPCs can only make decisions based on 
what they can ‘see’ and internal parameters such as health or 
ammunition count. 
III. BACKGROUND AND RELATED RESEARCH 
Pathfinding is a crucial aspect of an NPCs core 
mechanics. Some form of navigation is essential in games 
where the NPC is required to move. The complexity of the 
pathfinding has increased as games have become more 
intricate. A* algorithm has remained an important technique 
in modern games [2]. 
In FPS games, A* is popular because of its graph-based 
nature. It can find an optimal route between two points. 
However, this can lead to predictable routes, which can be 
exploited. Furthermore, an exponential performance cost can 
occur when increasing the size of the map, as it increases the 
size of the graph [3], thus, adding more nodes that could be 
checked when forming a route. 
Comparison analysis was conducted by Permana et al. 
[4], in which they looked at A*, Dijkstra and Breadth First 
Search (BFS) in a maze runner genre. They focused 
primarily on the performance impact of each technique, as 
well as the efficiency in context of functionality. The results 
suggest that all methods are capable of pathfinding, however, 
A* was more efficient computationally.  
There has been substantial research to modify A* so it 
can excel at certain tasks. Sazaki et al. [5] showed that some 
of the limitations of A* can be overcome by developing a 
model, which was used in a car racing scenario. This model 
focused on assisting A* with a Dynamic Pathing Algorithm 
(DPA). The results demonstrated that it could avoid moving 
obstacles. This addresses one of the problems with A*; the 
need to continually update the graph if the map is not static. 
This suggests that combining pathfinding models and 
techniques can yield positive results and shows that the 
effectiveness of A* can be enhanced when aided with other 
techniques. 
Makarov et al. [6] used Voronoi-based pathfinding that 
has been developed with obstacle avoidance and tactical 
elements to reduce the probability NPCs will traverse the 
dangerous areas of the map. They showed that including 
what NPCs can visually ‘see’, it was able to make tactical 
and logistical decisions. When incorporating internal 
information, such as previous enemy encounters, the NPC 
uses all the data to make decisions, including navigation. 
This indicates that when making navigation decisions, 
providing the NPC with more specific data about itself can 
lead to an adaptable NPC, which could appear more human-
like.  
Like the forementioned work, the research in this paper 
uses NPCs vision to make decisions on navigation. NPCs 
can only move to a location it can visually ‘see’. This 
significantly reduces the size of the pathing and low 
computational overhead. When using a non-static map, the 
A* graph needs to be updated on a regular basis, so NPCs do 
not attempt to traverse non-walkable areas. This can have a 
negative impact on performance. While significant research 
has been undertaken to address this issue, it is still a problem 
that needs to be considered when using A*. The approach 
proposed in this research could be useful as the NPC could 
update the graph based on what is in its view. 
Research undertaken by Sturtevant et al. [7] has shown 
that dynamically adjusting the cost of A* nodes based on the 
terrain they occupy can yield useful results. They used this 
technique by creating an abstraction layer which deals with 
terrain cost and dynamic terrain. They determined that from 
a performance perspective, when used with several different 
terrain types, the solution can be up to ten times faster in 
finding a suitable path, while remaining 2-6% optimal. This 
is important to this research because it shows that weighted 
environments can be used with other techniques to positively 
impact the overall pathfinding. This is supported by Pan [8] 
who proposes a multi-technique approach. They used a 
bootstrap Jump Point Space (JPS) technique when there are 
no threats present, then switch to a waypoint-based solution 
when the NPC detects a threat. This is an interesting 
approach to a dynamic pathfinding system which responds to 
the current circumstance of the NPC. When combined with a 
weighted A* graph, this could help develop a more realistic 
navigation system because the pathfinding technique will 
change to reflect the behaviour expected to be displayed. 
IV. HUMAN ROAMING MODELLING 
The modelling phase involved having human subjects 
undertake a roaming experiment. So, generalised behaviours 
can be identified and incorporated into a model, which will 
aim to imitate an average human player roaming 
characteristics. 
A. Data Capture Experiment 
The data capture experiment was conducted by having 
subjects roam the map in search of eight coins. A heatmap 
was generated by adding a standard A* graph, each node was 
given a collider detection and when a subject intersected 
with the collider, a counter specific to that node was 
incremented by one. Constraints were added to prolong the 
overall length of the experiment, so a more accurate model 
of roaming could be achieved. Only one coin is present on 
16
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

the map at any given time. This was to prevent chaining 
where the subject spots a coin as they are moving to collect 
another coin. When a new coin spawns, it can spawn 
anywhere on the map, but not in view of the subject current 
position and cannot collide with terrain. This was to prevent 
the chance of coins repeatedly spawning close to subjects. 
 The purpose of this method was due to the separation of 
the navigation model and A* graph. Wherein, the NPCs uses 
the graph to plot a route, but it is not part of the overall 
navigation model.  
Non-model related data was captured so a comparison 
can be made as to the efficiency of model in relation to the 
overall performance of the roaming behaviour. This was to 
conclude if the act of roaming is random, or if there was a 
more significant strategy as to why subjects used certain 
doorways and routes. Therefore, the position and rotation of 
the subject was logged every 0.5 seconds, which can be input 
back into the experiment for behaviour observation by a 
researcher. 
B. Results and Analysis 
A total of 30 subjects took part in the experiment. Figure 
1 shows the combined heatmap of all subjects (left image) 
and the breakdown of the map with numbered rooms (right 
image). The result shows an interesting trend where subjects 
were more likely to traverse the outer edge of the map, which 
influenced which doorways were likely to be used. 
 
Figure 1. Heatmap and Room Numbers. 
This demonstrates that roaming is very strategic, and 
subjects increase their likelihood of finding a coin by 
increasing their viewing coverage. It also highlights that 
roaming routes are funnelled via doorways, and it is likely 
that subjects’ navigation decision-making was primarily 
limited to the space between doorways. The experiment 
confirmed initial results, which showed that human players 
had preferred routes through the map [1]. While this is not 
surprising as subjects need to use the doorways to traverse 
the environment, as the map resembles a typical office, it 
indicates the importance of map design and the strategic 
value of funnel points. Even in open world maps, generally 
there are points of interest, with routes, such as roads, 
leading directly to these areas.  
As roaming is strategic, map coverage is therefore an 
important objective. Figure 2 shows an example of the 
amount of map uncovered by a randomly selected subject. It 
shows that at the end of the experiment >95% of the map has 
been revealed, with a small area in the corner of room 4, 
which was not uncovered. 
 
Figure 2. Map Coverage. 
There were three key generalised characteristics: 
• Player Positioning: Subjects were more likely to 
traverse the outer edge of the map, thus, increasing 
viewing angle to cover more map. 
• Peeking: Subjects occasionally ‘peeked’ into the foyer 
area, this involved moving to the doorway connecting 
to the foyer for a quick look, before continuing their 
intended route. 
• Rapid Room Scanning: Upon entering a room, subjects 
were likely to quickly scan the room as they continued 
to move towards the next doorway. 
These behaviours were consistent across most subjects 
and emphasise that there is a clear logic behind roaming that 
is not a random undertaking. It is an organised activity where 
the objective is maximising the efficiency of map coverage. 
A critical behaviour that emerged was the speed in which 
subjects’ navigation behaviours changed when new 
information was presented. While the roaming was 
methodical, when subjects identify a coin, the behaviour 
shifts immediately to acquiring the coin. The behaviour 
changes from looking around the map, to a focused 
behaviour where the subject remained fixated on the coin 
and moved directly to retrieve it. Figure 3 shows the results 
from one subject. The circles show where the subject spotted 
a coin and immediately breaks away from the roaming route, 
then after collection they resume on the same roaming route. 
In one instance, the subject can be seen to traverse the width 
of the map in a near straight line when spotting a coin. 
 
Figure 3. Beeline Behaviour. 
This suggests that the navigation model could require a 
subset of models for the various behaviours associated with 
moving throughout the map. This could lead to establishing 
17
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

that navigation is more than point to point pathing, but an 
expression of behaviours related to fulfilling specific 
objectives. This could explain why subjects were scanning 
the surroundings when roaming and why they were fixated 
on their target when collecting coins. 
V. ROAMING MODEL ANALYSIS 
A roaming model analysis experiment was conducted to 
determine if the roaming model developed represented the 
characteristics of an average human subject. The objective 
was to compare the human data and NPCs directly, to 
establish the accuracy of the model and determine if there 
were any negative consequences from using a heatmap. 
A. Pathfinding and Roaming Model 
There is a distinction between pathfinding and roaming. 
Pathfinding uses the heatmap weighted A* algorithm to plot 
a route between two points on the map. Whereas the roaming 
model controls 
the 
navigation decision-making and 
behaviour of the NPC as it moves between these two points. 
The technique uses the heatmap to adjust individual node 
cost in the A* graph. This was achieved by adding all the 
specific node counters from the data capture experiment, 
then subtracting this weight from individual nodes when 
creating the A* graph. Figure 4 is a pseudo code example of 
the method used to create the A* graph with heatmap. 
 
 
Figure 4. Pseudo Code for Heatmap A* Graph. 
 As the distribution of cost between neighbouring nodes 
can vary significantly. It was decided that a smoothing 
technique was required to blur the differences. This was also 
required to help prevent NPCs occasionally traversing very 
close to walls as nodes neighbouring non-walkable nodes, 
such as walls, had their cost increased. 
The smoothing technique used a box blur algorithm to 
normalise the cost of a node. A compromise was made where 
the box blur was set to 3x3, because when testing 2x2 the 
blur was not enough and when using 4x4 and 5x5, the 
smoothing was so significant that the heatmap had no effect. 
Figure 5 displays the box blur equation. Each number 
represents the weight cost of a node, the centre number is the 
node being blurred by adding all weights then dividing by 
the number of neighbouring nodes. 
 
Figure 5. Box Blur Equation 
Subjects showed that doorways provided pivotal and 
strategic points on the map, as they are funnel points and are 
the only means of traversing between rooms. Therefore, as 
NPCs were restricted to information only in view, doorways 
became a central point to the model. Each NPC stored 
personal data about doorways and assigned a dynamic 
weight cost to each doorway, which reflected the heat 
observed from the subject experiment. The NPC will attempt 
to prioritise the doorway in view with the highest weight 
value. When successfully using the door, it will temporarily 
decrease the weight to prevent room cycling. 
Unpredictability is an element of human players 
gameplay in an FPS game. There is a probability of 
performing a certain action in a scenario, but it is never 
certain. This was reflected in the roaming model, which aims 
to reduce predictability, but remain logical and consistent 
with human behaviour. This was achieved by implementing 
a random number generator of between one and ten, which 
represented the probabilistic outcome. 
When entering a room, NPCs had an 80% chance to scan 
the room as they moved to the next location, as well as apply 
special attention to looking at other doorways. Peeking had a 
special importance when roaming because subjects used this 
technique to tactically scan open spaces without entering the 
area. 
Lastly, when traversing open spaces, human subjects 
showed an awareness of their surrounds and took advantage 
by occasionally looking towards the open spaces, while still 
moving towards their intended location. This gave the 
appearance of the subject strafing as they were not moving in 
a forward-facing direction. This was modelled by enabling 
the NPC to have awareness of the distance between itself and 
open spaces to their left and right. Using this distance and a 
probabilistic algorithm, the model decided whether the NPC 
should scan the left or right side. After the NPC has 
successfully scanned the environment, a timer is started to 
ensure that the NPC does not keep repeating this action in a 
short space of time, a behaviour not seen in human subjects. 
B. Experimental Protocol 
The purpose of this experiment was to directly compare 
human subjects and NPCs. It was decided that having NPCs 
undertake the same experiment as the data capture 
experiment would provide a good basis to compare the 
results. 
To remain consistent, NPCs run the experiment several 
times, varying the weight impact of the heatmap, so it could 
be determined which weight better represented the 
characteristics of the average subject. There were four 
Loop X grid size 
    Loop Y grid size 
        create node world position 
        check if node is walkable 
            int movement penalty = 100 
            walkable = True 
            movement penalty -= heat weight value 
        Else 
            walkable = False 
        Add node to array 
18
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

different weight profiles. The heavier the weight profile, the 
higher the base node cost on the graph, which is represented 
by the darker the colour (Figure 6). 
 
Figure 6. Heatmaps Comparison. 
It shows the significant difference between weight costs 
of the different profiles. The top left profile aims to 
aggressively influence the NPC to adhere to the heatmap. 
While the bottom right profile was aimed at being more of a 
light influence on the pathfinding. This is a promising sign 
because it means the heatmap is working as intended and the 
degree of change between the profiles demonstrates that the 
model should be flexible in its application. This presents a 
novel approach to pathfinding as the heatmap is not strictly 
limited to player data. It could be used to prevent NPCs 
roaming the same areas by increasing the weight cost of 
nodes based on its own heatmap which is calculated over a 
set length of time. 
Figure 7 shows an example of the A* graph without the 
heatmap. While this profile was only used once in this 
experiment, it is a good comparison to show the influence 
the heatmap has on the A* graph. 
 
Figure 7. No Heatmap Example. 
The node cost smoothing technique was added to all the 
graphs. This ensured that neighbouring nodes did not have 
wildly different movement costs. This was essential because 
in a heatmap, some neighbouring nodes could have 
significant variation in cost, which would result in the NPC 
having a jerking motion as they moved. 
While some NPCs were required to collect eight coins for 
a direct comparison with individual human subjects, other 
NPCs were required to collect forty coins per run, which was 
the equivalent of five subjects. This number was decided as 
the purpose of the experiment was to analyse the generalised 
roaming route of the NPCs. A line renderer was used to track 
NPCs routing. Therefore, a compromise was required where 
it would provide enough data to make conclusions, but not 
too many where the lines become saturated and confusing. 
As with the the human subject experiment, the whole 
map is covered with a black fog, which is instantly removed 
when entering the view of the NPC. The fog provided a 
measure of the areas of the map the NPC has scanned and 
allowed comparison with observations of the human 
subjects. 
C. Results and Analysis 
When directly comparing the four weight profiles. The 
results show that amplifying the significance of the heatmap 
on the cost of the A* nodes, NPCs pathfinding was 
noticeably affected. Generally, the model has a positive 
effect on the navigation and each of the heatmaps accurately 
reflects the roaming patterns observed in the human subject 
experiment (Figure 8). However, it also had an adverse effect 
when not roaming. NPCs were taking very inefficient routes 
to reach a specified location, such as moving to a coin 
location. On some occasions, NPCs were not making a 
beeline behaviour after identifying a coin. They would lose 
sight of the coin and move through multiple rooms, before 
finally acquiring the coin. Although this behaviour is clearly 
at odds with that exhibited by the human subjects it does 
comply with the lowest cost path calculated by the modified 
A* Algorithm. 
 
Figure 8. Heatmaps Analysis. 
An important observation is in the centre of the map 
because there is a correlation between the base node cost and 
likelihood of cutting across the map to reach a destination 
when roaming. This opens the pathfinding to a degree of 
flexibility because multiple graphs could be created and the 
model decides which to use, or if the graph is regularly 
updated, it can decide how aggressive the roaming should be 
in relation to the heatmap. This could be useful in a scenario 
19
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

where NPCs are tasked with tracking players and the 
developer does not want to use scripting to force interactions. 
Similar research has been undertaken where NPCs are 
influenced by pheromones, which are generated by other 
game agents with positive results [9]-[11]. While these 
examples are generally focused on real-time strategy games, 
and are intended to explore swarm intelligence, commonality 
can be derived with the technique presented in this paper. 
Subject to further investigation, research could be undertaken 
where the players emit pheromones that temporarily 
decreases the cost of nodes within the vicinity. 
Analysing the model when the coin count was set to 
forty. The results remain consistent with what was observed 
with eight coins (Figure 9). In this example, a moderately 
aggressive base node cost was chosen to help prevent NPCs 
using the middle of the map to roam, but not too costly that 
NPCs would take inefficient and irregular route when 
moving to a coin. The results show the heatmap has a very 
strong influence on roaming, and when moving to a coin, the 
NPC would use the middle of the map.  
 
Figure 9. Forty Coin Heatmap Analysis. 
When comparing the heatmap against a normal A* 
graph. The results appear somewhat similar, however, when 
scrutinising the straightness of the paths, it shows a degree of 
difference. Figure 10 shows the heatmap A* (left image) and 
the standard A* (right image). The heatmap lines show they 
are not straight, but instead having a meandering 
characteristic.  
 
Figure 10. Heatmap A* vs Standard A* Comparison. 
Zooming in to specific areas further highlights intricate 
differences between the heatmap and non-heatmap A*. 
Figure 11 focuses on a single room. The right image shows a 
uniform pattern, whereas the left image is less structured that 
is more reminiscent of human subjects. 
 
Figure 11. Room Comparison. 
When compared to a human subject in a similar room 
(Figure 12). It shows NPCs using the heatmap is more akin 
to the subject than the NPC using the standard A* graph.  
 
Figure 12. Human Subject Room Analysis. 
A key feature of the roaming model was imitating how 
human subjects entered a room and the time it takes to start 
moving to a new location. Figure 13 shows the doorway exit 
and entrance trajectory. The results indicate that the model is 
working as intended. There are no identical paths, but 
adheres to a logical tactic, and there was little pathing 
efficiency cost. 
 
Figure 13. Door Trajectory Analysis. 
A key strategy used by human subjects was peeking into 
large areas. The effect of peeking can be seen most clearly 
when looking at the fog, the red line indicates the path the 
NPC followed (Figure 14). It moved into the room, peeked 
into the foyer area before resuming initial route. Such 
characteristics are integral to having an accurate imitating 
roaming model because it projects a degree of intelligence 
when observed by a player. 
20
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

 
Figure 14. NPC Peeking Identification. 
Finally, when discussing the map view coverage, with 
the objective set to collect eight coins. NPCs showed 
approximately the same level of map coverage as human 
subjects was achieved (Figure 15). This shows that the 
roaming model can comfortably seek out and acquire 
anything within the realms of the A* graph. 
 
Figure 15. Roaming Model Map Coverage. 
Being able to fully scan the environment is a crucial 
aspect of navigation. When the goal location is not 
predetermined, if the NPC cannot scan and analyse the entire 
map, some goals might become impossible to complete.  
VI. CONCLUSION 
The objective of this paper was to explore if human 
player navigation data can be used to create a heatmap, for 
the purpose of adjusting the weight cost in an A* graph to 
influence the pathfinding. 
The roaming model demonstrates that using a method, 
which restricts pathing decisions based on what it can see, 
and using a heatmap weighted A* algorithm, a good 
imitation of the general roaming behaviours of a human 
player can be achieved. This hybrid model was able to take 
advantage of tags in the environment so the NPC could make 
decisions based on what was in view. Thus, removing 
omniscient characteristics often associated with NPCs and 
which can be clearly identified by players. The heatmap 
weighted A* offers a unique approach to influencing 
pathfinding so that NPCs use frequently travelled areas, 
making the NPC interactions more natural, than scripted 
interactions that can appear forced. 
However, it was clear that using a designated A* 
roaming graph had negative implications when used for 
other navigation tasks. Therefore, the practical application of 
the model would need to incorporate a multiple graph 
solution, in which the A* would be applied to an appropriate 
graph, based on the task the NPC is undertaking. This is 
currently being researched, in which NPCs can instantly 
switch graphs suited for the current task being undertaken. 
REFERENCES 
[1] 
P. Williamson, “Modelling Human Behaviour in a Virtual 
Environment,” [Unpublished Masters Thesis]. University of 
South Wales, 2019. 
[2] 
D. Foead, A. Ghifari, M. B. Kusuma, N. Hanafiah, and E. 
Gunawan, 
“A 
systematic 
literature 
review 
of 
A* 
pathfinding,” Procedia Computer Science, pp. 507-514, 2021. 
[3]  W. Ziqiang, H. Xiaoguang, and L. Xiaoxiao, "Overview of 
Global Path Planning Algorithms for Mobile Robots," 
Comput. Sci., vol. 48, pp. 1-16, 2021. 
[4]  S. Permana, K. Bintoro, B. Arifitama and A. Syahputra. 
“Comparative analysis of pathfinding algorithms a*, dijkstra, 
and bfs on maze runner game,” IJISTECH International J. Inf. 
Syst. Technol., vol. 1, no. 2, pp. 1, 2018. 
[5]  Y. Sazaki, H. Satria, and M. Syahroyni. “Comparison of A∗ 
and dynamic pathfinding algorithm with dynamic pathfinding 
algorithm for NPC on car racing game,” 11th International 
Conference on Telecommunication Systems Services and 
Applications, pp. 1-6, 2017. 
[6]  I. Makarov, P. Polyakov, and R. Karpichev, “Voronoi-based 
Path Planning based on Visibility and Kill/Death Ratio 
Tactical Component,” In AIST, pp. 129-140, 2018. 
[7]  N. R. Sturtevant, D. Sigurdson, B. Taylor, and T. Gibson, 
“Pathfinding and abstraction with dynamic terrain costs,” 
In Proceedings of the AAAI Conference on Artificial 
Intelligence and Interactive Digital Entertainment, vol. 15, no. 
1, pp. 80-86, 2019. 
[8]  H. Pan, “Pathfinding and Map Feature Learning in RTS 
Games with Partial Observability,” In AIIDE Workshops 
2021. 
[9]  D. Daylamani-Zad, L. B. Graham, and I. T. Paraskevopoulos, 
“September. Swarm intelligence for autonomous cooperative 
agents in battles for real-time strategy games,” 9th 
International Conference on Virtual Worlds and Games for 
Serious Applications, pp. 39-46, 2017. 
[10] X. Chen, et al., “Towards believable resource gathering 
behaviours in real-time strategy games with a memetic ant 
colony system,” Procedia Computer Science, vol. 24, pp. 143-
151, 2013. 
[11] A. Rafiq, T. Kadir, and S. N. Ihsan, “Pathfinding algorithms 
in game development,” In IOP Conference Series: Materials 
Science and Engineering. vol. 769, no. 1, pp. 1-12, 2020. 
 
21
Copyright (c) IARIA, 2022.     ISBN:  978-1-68558-001-8
SIMUL 2022 : The Fourteenth International Conference on Advances in System Simulation

