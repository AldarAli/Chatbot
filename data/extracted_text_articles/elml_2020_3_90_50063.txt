eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
86
DEKXTROSE: An Education 4.0 Mobile Learning Approach and  
Object-Aware App Based on a Knowledge Nexus  
 
Roy Oberhauser[0000-0002-7606-8226] 
Computer Science Dept. 
Aalen University 
Aalen, Germany 
 e-mail: roy.oberhauser@hs-aalen.de 
 
 
Abstractâ€”The exponential growth in knowledge coupled with 
the decreasing knowledge half-life creates a challenging 
situation for educational programs - particularly those 
preparing software engineers for their very dynamic high-
technology field. Teachers in high technology education areas 
are challenged in selecting and making relevant knowledge 
intuitively accessible to students, especially with regard the 
highly dynamic digital and software technologies. This paper 
contributes a knowledge nexus-based multimedia approach 
aligned with Higher Education 4.0 for creating learning apps on 
mobile devices that support multiple didactic models, leverage 
intrinsic curiosity and motivation, support gamification, and 
enable digital collaboration. Object recognition is used to 
trigger learning paths, and various didactic methods are 
supported via workflow-like learning flows to support group or 
team-based learning. A prototype app was realized to 
demonstrate its feasibility and an empirical evaluation in 
software engineering shows the didactic potential and 
advantages of the approach, which can be readily generalized 
and applied to the arts, sciences, etc.   
Keywords - Higher Education 4.0; e-Learning; mobile 
learning; m-Learning; computer science education; software 
engineering education; mobile app. 
I. 
 INTRODUCTION 
We are experiencing an exponential growth in knowledge, 
articulated by Buckminster Fuller [1] and known as the 
knowledge-doubling curve. IBM extrapolated that by 2020 
knowledge would be doubling in a matter of hours [2]. Among 
the factors fueling this trend are the digital and interconnected 
global access to knowledge, the transition from industrial to 
knowledge- and service-based societies, the advancement of 
science and invention, collaborating teams, computer-based 
data analysis of big data and that generated by sensors and 
devices, etc.  However, not all knowledge remains stable, 
valuable, useful, and accurate for long, but goes through a 
process of knowledge decay or obsolescence, implying that 
some subset of our knowledge has a "half-life" as articulated 
by Fritz Machlup, and this half-life is correspondingly 
decreasing [3]. One can view this trend to be exacerbated for 
high-technology fields and related education and training. 
As to the background context for this paper, Software 
Engineering (SE) can be viewed as a subset of Computer 
Science (CS) and Systems Engineering (SysE) as a related 
field. Because SE is a high technology field and software 
exists in an artificial man-created environment, it is perhaps 
even more susceptible to accelerated knowledge dynamics 
versus other fields. This creates a challenge for educating and 
training software engineers to acquire relevant knowledge and 
skills that are not obsolete when conveyed or soon thereafter, 
and perhaps not yet obsolete by the time they enter the 
marketplace. 
A correlating concept to Industry 4.0 is the concept of 
Education 4.0 [4], or more specifically Higher Education 4.0 
[5], which aims to better align humans and technology in the 
area of tertiary education. It involves various aspects that are 
values of a digital native culture, including: student-centric 
approaches instead of traditional lectures, individualistic 
(customized) learning, internet and multimedia usage, 
collaborative peer emphasis, mobile device usage, and 
leveraging learning analytics to customize experiences. 
To deal with these situations, it is imperative that CS, 
SysE, and SE education (SEE) embrace more technologically 
sophisticated approaches for conveying and transferring 
knowledge, especially for the fast-changing area of digital 
technologies. Despite the budding digitalization, knowledge, 
particularly related to some high-technology object in our 
nearby environment, often remains abstract and scattered and 
hidden within literature or scattered on the web. Learning or 
direct connections of knowledge and questions regarding 
visible objects in our environment is not triggered 
automatically by visible objects in our environment, e.g., 
Wikipedia expects a search term and Amazon Alexa expects 
a question or command. In addition, it is becoming 
increasingly difficult to keep track of the flood of information 
and to perceive open questions and problems with other 
questions, including time-delayed ones, and to develop 
solutions and incorporate new knowledge in a co-operating 
manner. Emails, social networks (Slack, WhatsApp), and 
Learning Management Systems (LMS) are not really 
conducive to linking knowledge to certain objects of interest 
in a time-delayed manner. The attention and concentration on 
a topic and the motivation and interest can also be awakened 
and held by visible objects (such as Internet-of-Things 
devices), and thus offers an additional tactile incentive to 
acquire the knowledge behind it. 
In previous work [6], our edutainment approach called 
Software Engineering for Secondary Education (SWE4SE) 
combined short informational videos and various simple 
digital games. This paper contributes a knowledge nexus-
based multimedia approach for creating mobile learning 
(mLearning) apps that support augmented reality object 
identification, multiple didactic models, leverage intrinsic 

eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
87
curiosity and motivation, support gamification, and enable 
digital collaboration. Object recognition is used to trigger 
learning paths, and various didactic methods support group or 
team-based learning via learning workflows. A prototype app 
was realized to demonstrate its feasibility and an empirical 
evaluation shows its potential and the advantages of the 
approach for supporting SEE. We call it DEKXTROSE 
(Didactic-Enhancing 
Knowledge-neXus 
TRail-enabled 
Object-aware Software for Education), which can be viewed 
as a sweetener for education and training. 
The paper is organized as follows: the next section 
describes related work; Section 3 describes our mLearning 
solution approach; Section 4 provides details about ou5 
realization, which is followed by our evaluation in Section 4; 
finally, a conclusion is provided. 
II. 
RELATED WORK 
Various systematic reviews of mLearning have been 
performed. Zydney & Warner [7] studied 37 articles, of which 
three focused on tertiary students. Technology-based 
scaffolding was used in 23 apps to guide students with 
mLearning, and 19 apps gave users the ability to digitally 
construct knowledge. 12 apps supported digital knowledge 
sharing. Krull & Duart [8] provide a systematic review of the 
use of mobile devices in higher education. Among their 
findings was that more research and practice is required in 
themes related to innovative approaches (such as context-
awareness, augmented reality, and gamification). The most 
common 
research 
theme 
was 
enabling 
mLearning 
applications and systems. Chang & Hwang [9] performed a 
systematic review of journal publications regarding digital 
game-based learning in the mobile era. Most of the 113 papers 
involved role-playing games (41), followed by simulation 
games (23), and then gamification (20). In their systematic 
review, Anohah et al. [10] analyzed 86 articles regarding 
mLearning in computing education, and found the following 
learning 
effects 
reported: 
knowledge, 
experience, 
engagement, 
interest/attitude, 
motivation, 
confidence, 
interactivity, 
enthusiasm/excitement, 
critical 
thinking, 
problem solving skills, team work, and analytical skills.  
Khaddage et al. [11] proposed an approach for seamlessly 
blending formal and informal learning in mLearning based on 
science, technology, engineering, art and mathematic subjects 
to achieve some required learning outcome in informal 
settings. Schefer-Wenzl & Miladinovic [12] provide an 
approach for teaching software development topics that 
combines mLearning with just-in-time teaching, industry-like 
student projects and peer assessment. No specialized app was 
presented to realize their approach. 
We found no mLearning work that is specifically focused 
on the CS/SE/SysE domain with a single app that holistically 
supports a potpourri of didactic methods via learning 
workflows, utilizes a collaboratively taggable knowledge 
nexus with multimedia content, supports social networking 
via chat and object-aligned commenting, utilizes object 
recognition for triggering learning paths, integrates quizzes 
for immediate learning feedback, and supports gamification as 
a motivational factor for informal learning. 
III. 
MLEARNING APPROACH 
Our solution concept and investigation were motivated by 
several questions and factors. We wanted to determine to what 
extent is object recognition currently practical for didactic 
applications, and if the recognition rate good enough for real 
usage. Furthermore, can digital learning and knowledge 
content be connected to physical objects and triggered by 
users in context? How can knowledge and practice (from 
research and professional practice) be efficiently and 
effectively modularized into digital units, reused, and linked 
in a nexus-like way? How can digital long-lived sequential 
learning trails (routes through knowledge) be technically 
realized? How can complex learning flow templates (to 
actively support methods such as research learning, problem-
based learning, project learning, experiential learning with 
assistance and navigation suggestions ("guidance") be 
technically implemented? To what extent can technically 
supported learning flows support creative thought processes? 
Additionally, is gamification motivating for all users, or are 
some primarily intrinsically motivated? And finally, can we 
easily reuse digitally available information material in a way 
that: leverages intrinsic curiosity and motivation, visually 
shows how one knowledge granule relates to another - and 
helps users find the next interesting knowledge granule; 
enables users to add and share their own knowledge or 
opinions onto a knowledge node; and facilitates individual 
customized learning and flipped classroom approaches that 
put the student in the driver's seat. 
Underlying presuppositions for our solution include: 
1) Individualized (no single one-size-fits-all): For 
certain courses or training - especially higher-
semester courses, a one-size-fits-all didactic model is 
not effective nor efficient with regard to the post-
course relevance of transferred knowledge. Each 
individual has personal preferences, pre-existing 
knowledge, competencies, learning styles, etc.  
2) Disparate, unpackaged knowledge: Much of the 
knowledge that "should" be distributed to an 
individual is not exclusively available from the mind 
of the expert, but also digital sources, especially in 
the SE domain. However, the knowledge has 
typically not been fashioned in a way that lends itself 
to efficient learning. Web search engines, while 
designed to quickly find relevant web pages, are not 
designed to support efficient learning. 
3) Networked-knowledge: knowledge is not isolated 
and (mostly) not immutable, but rather relevant or 
connected to other knowledge to some degree. 
Certain knowledge objects have multiple possible 
representations and ways they can be consumed 
(e.g., media formats). Digitally accessible resources 
should be reused if possible. 
Figure 1 depicts DEKXTROSE, which incorporates the 
following capabilities and concepts:  
- 
Scanned object recognition (object-awareness) 
- 
LearningPaths (trails) with the integration of 
web/video/photo content as tags 

eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
88
- 
LearningFlows (process stencils) that comply with 
specific didactic methods 
- 
Gamification via quizzes and badges is supported. 
- 
Data/learning analytics available 
 
Figure 1.  DEKXTROSE mLearning approach. 
LearningPaths are trails that explain knowledge in a 
predetermined sequential order using multimedia offers (e.g., 
about certain technologies that users do not yet know) and 
contains a quiz at the end. It can be started by object 
recognition in order to acquire knowledge by curiosity about 
possibly unknown objects, or by choosing a LearningPath 
directly from the menu. Users can acquire requisite 
knowledge and skills using LearningPaths. 
LearningFlows are learning workflows that enable 
different didactic methods (research learning, problem-based 
learning, project learning, experience-based learning) to be 
quickly understood and self-directed, alone and as a team, 
methods previously unknown to users. Thus, by providing 
students a goal and LearningFlow (process), a team of 
students is provided with a framework with which they can 
achieve some goal. 
DEKXTROSE links digital knowledge and questions with 
real objects in the immediate environment using the device's 
camera together with an object recognition service. Thus, 
objects can be recognized, parts of such a knowledge nexus 
can be triggered and visualized, and curiosity can be aroused. 
Passive LearningPaths provide sequential learning of 
expertise in these objects using self-motivation; by means of 
more complex LearningFlows, different didactic methods can 
be applied in a self-directed fashion to knowledge processes. 
Didactically, our solution approach involves cognitive 
aspects that relate to basic knowledge concepts conveyed via 
networked knowledge nodes (knowledge granules). It is also 
instrumental in that it utilizes LearningPaths, quizzes, and 
badges to motivate. It is formative-educative in supporting the 
development of skills and abilities and the achievement of 
educational 
objectives. 
Both 
the 
LearningPath 
and 
LearningFlow facilitate the flipped classroom learning 
approach, allowing the students to be in the driver's seat and a 
teacher to take on the role of a facilitator. 
As to the applicability to SE, the concepts inherent in SE 
are exemplified in the SWEBOK [13] and for SysE in the 
SEBoK [14]. The objectives of the SWEBOK include 
promoting a consistent view of SE, clarifying the bounds of 
and characterizing the contents of SE with respect to other 
disciplines, and providing a topical access to the SE Body of 
Knowledge (BOK). Knowledge areas (KAs) have a common 
structure, including a subclassification of topics and topic 
descriptions with references. Available technologies play a 
key role in creating viable systems and software that address 
stakeholder needs, and software and systems engineers need 
to be aware of current available technologies, understand what 
they are â€“ including in relation to one another, and to a certain 
degree how they work. The SWEBOK references 
technologies and aspects at various points, which are suitable 
for knowledge our approach can convey. These including 
Construction Technologies (3-8) as well as various 
Computing 
Foundations 
(13), 
including 
Computer 
Organization (13-13), Network Communication Basics (13-
19), the Internet and Internet-of-Things (13-20), Operating 
Systems Basics (13-16), Basic Concept of a System (13-11), 
Parallel and Distributed Computing (13-21), Basic User 
Human Factors (13-22), etc. While the SWEBOK is currently 
published in a static format, a more dynamic wiki-like format 
could support more SE community involvement and 
knowledge updates. 
Geddes, Cannon, and Cannon [15] articulate the concept 
of individual absorptive capacity (IAC), and we argue that 
education should further students' ability to acquire new 
knowledge and skills rapidly - even beyond the confines of 
their current course or curriculum. In our view, our solution 
approach can be used to further the IAC for students. 
IV. 
REALIZATION 
To realize DEKXTROSE, we developed a cross-platform 
tablet app for iOS and Android using Flutter, the Google 
Firebase ML Kit service for machine-learning-based object 
recognition, the mlkit-custom-image-classifier for custom 
image/object training on a set of images taken of an object, 
and the Google Firebase Cloud Firestore service for backend 
data storage. 
A graph of knowledge nodes is manually realized (see 
Figure 2), implemented as a set of JSON documents that 
contain links to other related knowledge nodes, as well as 
detailed information and media pertaining to that node (see 
Figure 3 left). In order to easily add information (e.g., 
comments, links to external site or photos, etc.), the concept 
of tags are used. From a technical perspective, our use of cloud 
storage as a backend for the app permits us to easily add to or 
adapt the knowledge nexus at any time without requiring the 
app software to be updated. This supports longer-term 
sustainability of the knowledge network. Furthermore, 
moderators, analogous to Wikipedia, can be utilized for 
certain areas of expertise to validate entries, add new 
knowledge, and maintain the network. 

eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
89
 
Figure 2.  Knowledge nodes can be browsed, searched, and viewed as a list 
(top) or nexus (bottom, network overview). 
 
 
Figure 3.  Descriptive information and multimedia can be added via tagging 
(left); screenshot of object recognition via camera (right). 
LearningPaths, a sequence/path of knowledge nodes, can 
be specified by an administrator (Figure 4 top). Object 
recognition can be used to trigger a LearningPath, (Figure 3 
right), which is implemented using machine learning on a set 
of images with the ML Kit. 
Private and public tags can be added (Figure 5) - must be 
approved by a moderator before visible to other users, and 
these can include text, images, and video or other web links. 
 
Figure 4.  LearningPath is shown on top with the Knowledge Nexus for 
context (current node in blue) and Knowledge Object details (bottom). 
 
Figure 5.  Tagging options with various tag types. 

eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
90
Quizzes provide quick feedback and provide an 
orientation for users on the relevant knowledge for that 
LearningPath (see Figure 6 left). To support gamification as a 
motivational factor, badges (bronze, silver, gold) can be 
earned based on how well the quizzes were answered (see 
Figure 6 right). 
 
Figure 6.  A quiz (left) includes questions such as: What sensor is not 
embedded in the Apple Watch? Which OS runs on Apple Watch? Depicted 
on the right are a progress bar and the badges. 
 
 
Figure 7.  LearningFlow choices (left) and LearningFlow step, completed 
button, and textual explanation (right). 
Once LearningFlows is selected, the set of possible 
LearningFlows is shown (see Figure 7 left). Once a specific 
LearningFlow is selected, an initial overview (see Figure 7 
right) provides users with quick insights into the intent that 
particular learning technique. Via swiping the next is shown. 
Any step can be marked as completed. Details on any step in 
LearningFlow are provided: the left displays the overall 
process, while on the right further details and resources can be 
seen. 
To facilitate collaboration, chat functionality is supported 
directly in the app. 
V. 
EVALUATION 
Our qualitative evaluation focused on the subjective 
impressions of participants in three areas: LearningPaths, 
LearningFlows, and general impressions. A convenience 
sample of thirteen computer science students took part 
(average semester = 5.8, min=3, max=8) using iPads or Sony 
tablets running Android. Due to data privacy concerns, we did 
not utilize the data analytics capabilities in the following 
evaluation. 
For the LearningPaths feature, participants only chose 
paths about topics they had no significant knowledge of. First, 
they attempted a learning path without our app using URLs 
only for 15 minutes. They selected a topic and then visited 
URLs related to that topic (one's we had prescreened) without 
the assistance of our app, and then they answered a quiz. After 
that, they were given 15 minutes to use the LearningPath 
feature of our app, selecting a different unknown topic and 
then answer the built-in quiz. As to the topics and content we 
chose to offer, we assume that software engineers should have 
some knowledge about hardware and electronics (to a slight 
degree) when, for example, involved with the Internet-of-
Things (IOT) or embedded systems. This also ensured that 
there would be at least some topics with which the computer 
science students were not yet knowledgeable. The available 
LearningPaths were: 
- 
Beacon technology 
- 
Raspberry Pi  
- 
Raspberry Pi Internet-of-Things extension board 
- 
Android 
- 
Apple Watch 
- 
Various hardware sensors (light, temperature, motion, 
sound, moisture) 
TABLE I.  
DEKXTROSE QUESTIONNAIRE RESULTS 
Area 
Question 
Averagea 
LearningPath 
How helpful was the LP in learning? 
4.00 
How much fun was using a LP? 
4.08 
Were the quizzes motivating? 
3.69 
Did quizzes provide helpful feedback when 
learning? 
4.23 
Was earning badges motivating? 
2.69 
How better/worse was the learning experience with 
app vs. without an app? (worse=-1, 0, better=+1) 
0.85 
Learning
Flow 
How helpful was the LF in learning? 
3.15 
How much fun was it to use the LF? 
3.69 
General 
Did you learn things you wouldn't have learned 
otherwise? 
92% Yes 
Intuitiveness? 
3.54 
How efficient was learning something new w/ app? 
2.23 
Curiosity aroused about new technical knowledge? 
3.15 
What was more fun? 
100% app 
What would be your preference? 
100% app 
What was the overall learning experience like? 
4.00 
a. Unless indicated, scale 5-1 where 5=Very and 1=Little 
Subsequently, the learning experience (with and without 
app) was evaluated by means of a paper-based questionnaire. 
The results are shown in the "LearningPath" (LP) area in 
Table 1. To evaluate LearningFlows, the participants self-
formed groups of 2-3 people and were directed to apply the 

eLmL 2020 : The Twelfth International Conference on Mobile, Hybrid, and On-line Learning
Copyright (c) IARIA, 2020. ISBN: 978-1-61208-764-1
91
learning flow "Experiential learning" with our app, going 
through all the steps at least once, in order to optimize a simple 
paper-based product within 15 minutes. Only one of the 
participants had prior knowledge of experiential learning. 
Then they answered questions about the learning experience, 
the results of which are shown in the "LearningFlow" (LF) 
area of Table 1. Finally, general questions on the entire 
learning experience were answered as shown in the "General" 
area of Table 1. 
A selection of participants comments included: 
- 
Can easily & quickly dive into new topics; greater depth 
of information is available when needed 
- 
App summarizes knowledge compactly & very well; 
mostly intuitive to use. 
- 
Topic overview via nodes was good and encouraged dig 
further into the topics of interest 
- 
Learning path is very useful/helpful for unknown topics 
- 
Prepared content is very good 
- 
Graph view of knowledge nodes useful 
 
The evaluation shows DEKXTROSE to be a viable 
approach. It can be used to support aspects of Education 4.0, 
including self-directed learning such as the flipped classroom 
approach, internet-connected multimedia, internet-based 
collaboration, and student data analytics that can be used to 
further customize the user learning experience. 
VI. 
CONCLUSION AND FUTURE WORK 
Our DEKXTROSE Education 4.0 mLearning approach 
shows how relevant knowledge regarding technologies can be 
conveyed with a mobile app on a tablet while reusing digitally 
available knowledge organized as a knowledge nexus. The 
knowledge nexus can be explored for inquisitive learners. 
LearningPaths provide guided journeys through knowledge 
and are followed with a quiz to provide instant feedback and 
badges to support gamification. Objects in the environment 
can be used to trigger a LearningPath. LearningFlows support 
the use of didactic methods by individuals or teams, 
explaining the steps and tracking the state. Thus, it supports 
self-directed learning and flipped classroom approaches. 
Aspects of Education 4.0 are supported, providing digital 
natives a multimedia self-directed learning experience. The 
evaluation showed a strong approval and interest by students 
and shows its potential to help produce career-ready 
technology 
professionals 
who 
are 
aware 
of 
and 
knowledgeable about current technologies to "hit-the-ground-
running." We believe the approach is generalizable to various 
other domains, including art, science, etc., and would be 
beneficial for education and training. 
Future work includes: weighting the degree of 
connectedness between knowledge nodes based on a variable 
function of user-configurable parameters; utilizing the data 
and learning analytics to customize the learning experience, 
including adjusting paths based on a student's profile and 
career, role, and other interests; applying the approach in other 
domains; and a comprehensive empirical evaluation. 
 
ACKNOWLEDGMENT 
The author thanks Julian Eger-Benninger for his assistance 
with the design and prototype implementation. This project 
was partially funded by "Programmlinie â€žLehr- und 
Lernlaboreâ€œ â€“ Projekt â€žHUMUSPlus â€“ Hochschuldidaktisch 
und 
-methodisch 
unterstÃ¼tzte 
Selbstinitiierung 
von 
Lernprozessen 
an 
Hochschulen 
fÃ¼r 
Angewandte 
Wissenschaften in Baden-Wuerttemberg." 
REFERENCES 
[1] B. Fuller, Critical Path. St. Martin's Griffin, 1981. 
[2] D. R. Schilling. Knowledge Doubling Every 12 Months, Soon 
to 
be 
Every 
12 
Hours. [Online]. 
Available 
from: 
http://www.industrytap.com/knowledge- doubling-every-12-
months-soon-to-be-every-12- hours/3950 2020.10.20 
[3] R. N. Charette, An engineering career: Only a young personâ€™s 
game? Half-life of knowledge pressures employers to seek out 
young engineers. IEEE Spectrum 4, 2013. [Online]. Available 
from: 
https://spectrum.ieee.org/riskfactor/computing/it/an-
engineering-career-only-a-young-persons-game 2020.10.20 
[4] M. Ciolacu, P. M. Svasta, W. Berg, and H. Popp, "Education 
4.0 for tall thin engineer in a data driven society," 2017 IEEE 
23rd International Symposium for Design and Technology in 
Electronic Packaging (SIITME), 2017, pp. 432-437. 
[5] S. Jeschke and U. Heinze, Higher Education 4.0 â€“ Trends and 
Future Perspectives for Teaching and Learning, 2014. 
doi:10.13140/RG.2.1.1509.0002. 
[6] R. Oberhauser, "Gamifying and Conveying Software 
Engineering 
Concepts 
for 
Secondary 
Education: 
An 
Edutainment Approach,"10th Int'l Conf. on SW Eng. Adv. 
(ICSEA), IARIA, 2015, pp. 432-437, ISBN: 978161208367-4. 
[7] J. M. Zydney and Z. Warner, "Mobile apps for science 
learning: Review of research," Computers & Education, vol. 
94, pp. 1-17, 2016. 
[8] G. Krull and J. Duart, "Research Trends in Mobile Learning in 
Higher Education: A Systematic Review of Articles (2011 â€“ 
2015)," Int'l Review of Research in Open and Distributed 
Learning, 18(7), 2017. doi:10.19173/irrodl.v18i7.2893 
[9] C. Y. Chang and G. J. Hwang, "Trends in digital game-based 
learning in the mobile era: a systematic review of journal 
publications from 2007 to 2016," International Journal of 
Mobile Learning and Organisation, 13(1), pp. 68-90, 2019. 
[10] E. Anohah, S. S. Oyelere, and J. Suhonen, "Trends of mobile 
learning in Computing Education from 2006 to 2014: A 
systematic review of research publications," Int'l J of Mobile 
and Blended Learning (IJMBL), 9(1), pp. 16-33, 2017. 
[11] F. Khaddage, W. MÃ¼ller, and K. Flintoff, "Advancing Mobile 
Learning in Formal And Informal Settings via Mobile App 
Technology: Where to From Here, and How?" Educational 
Technology & Society, 19(3), pp. 16â€“26, 2016. 
[12] S. Schefer-Wenzl and I. Miladinovic, "Game changing mobile 
learning 
based 
method 
mix 
for 
teaching 
software 
development," Proc. of the 16th World Conference on Mobile 
and Contextual Learning, pp. 1-7, 2017. 
[13] P. Bourque and R. Fairley (editors), "Guide to the Software 
Engineering Body of Knowledge (SWEBOK): Version 3.0," 
IEEE Computer Society Press, 2014. 
[14] SEBoK Editorial Board. The Guide to the Systems Engineering 
Body of Knowledge (SEBoK), v. 2.2. [Online]. Available from: 
www.sebokwiki.org 2020.10.20 
[15] B. C. Geddes, H. M. Cannon, and J. N. Cannon, "Addressing 
the Crisis in Higher Education: An Experiential Analysis," 
Developments in Business Simulation and Experiential 
Learning: Proc. of the Annual ABSEL Conf., vol. 45, pp. 265-
279, 2018. 

