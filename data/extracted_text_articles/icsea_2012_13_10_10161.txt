Supporting Time Planning Aligned with CMMI-DEV and PMBOK 
Rafael Q. Gonçalves, André M. Pereira, Christiane Gresse von Wangenheim 
Department of Informatics and Statistics 
Universidade Federal de Santa Catarina (UFSC)  
Florianópolis – SC – Brazil  
rafael.q.g@hotmail.com, andremarquespereira@gmail.com, gresse@inf.ufsc.br 
 
Abstract— Software projects often fail, because they are not 
adequately managed. The establishment of effective and 
efficient project management practices especially with respect 
to time management still remains a key challenge to software 
organizations. Striving to address these needs, “best practice” 
models, such as, the Capability Maturity Model Integration 
(CMMI) or the Project Management Body of Knowledge 
(PMBOK), are being developed to assist organizations in 
improving project management. Yet, so far there does not exist 
a unified model focusing on the context of small and medium 
enterprises (SMEs). Therefore, this paper presents a generic 
model for time planning aligned with CMMI and PMBOK. In 
order to facilitate its application in practice an open-source 
tool (dotProject) has been enhanced and evaluated by project 
management specialists. The results of this research are 
expected to facilitate the adoption of time planning practices in 
SME contributing positively to their competitiveness. 
Keywords- time planning; PMBOK; CMMI; dotProject.  
I. 
 INTRODUCTION 
Many software development projects still have problems 
to be delivered on time, within budget and with the complete 
scope defined [1]. In this context, one of the most important 
processes in the project management life cycle is time 
planning [2]. The aim of time planning processes is to 
deliver the project on time [2]. 
One of the reasons for these problems is a lack of project 
management, which indicates that establishing effective and 
efficient project management practices is still a challenge for 
many organizations [3]. 
As an attempt to improve this situation, "best practices" 
models have been developed to guide organizations 
interested in improving the project management process. 
This includes the CMMI-DEV (Capability Maturity Model 
Integration for Development) that guides the improvement 
and appraisal of a software organization’s processes [4]. This 
model, although comprehensive, covers also "best practice" 
for project management. Another more specific “best 
practice” model for project management is the PMBOK 
(Guide to the Project Management Body of Knowledge) [2], 
which describes the life cycle of managing a project and the 
respective knowledge areas. Such maturity models, e.g., the 
CMMI, also indicate the importance of improving the project 
management process, as it is typically one of the first 
processes indicated to be improved associated to maturity 
level 2. 
However, a large part of the IT market is composed of 
SMEs [5]. Many of these organizations typically struggle to 
implement these models [6]. Thus, in order to facilitate the 
adoption of best practices for time planning in SMEs, this 
work presents a generic model for a time planning process 
aligned with PMBOK and CMMI and customized to the 
characteristics of SMEs. In order to support the application 
of the model in practice we also enhanced one of the most 
popular open-source tools – dotProject – in conformance 
with the proposed model. The use of tools is important for 
SMEs as it can support and partially automate steps, 
increasing efficiency and improving the maturity of the 
process [7]. 
We first present the background to our research in 
Section 2.  Analyzing and comparing both models, we map 
the respective best practices developing a unified model with 
respect to time planning as presented in Section 3. Section 4 
describes the proposed generic model for time planning, 
demonstrating how processes/practices recommended by 
reference models could be applied to SME context. The tool 
enhancement and evaluation is presented in Section 5. 
Finalizing the paper, we discuss the results.  
II. 
BACKGROUND 
This section presents the key concepts with respect to 
project management and especially time planning and 
introduces PMBOK and CMMI.  
Project management is the application of knowledge, 
skills, tools and techniques to project activities to meet their 
requirements [2]. A project is a temporary endeavor 
undertaken to create a unique product, service, or result. To 
achieve the goals defined in the project, knowledge, 
techniques and tools are applied that constitute project 
management. The project management life cycle is 
composed of five process groups [2] (Figure 1): 
 Initiation: performed to initiate a new project or phase 
and obtain the authorization for its realization. 
 Planning: performed to establish the project goals and 
scope and to define the actions necessary to ensure that 
the project meets its objectives. 
 Execution: processes related to the execution of the 
project during which the work is carried out to complete 
the activities defined in the project plan. 
 Monitoring and controlling: performed to monitor, 
review and adjust the project performance and progress, 
realizing corrective actions. 
 Closing: performed to finalize all project activities in a 
formal way. 
352
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
Figure 1 - Project management life cycle [2] 
Orthogonal to this, project management processes are 
divided into 9 knowledge areas [2]: Integration, Scope, 
Time, Cost, Quality, Human Resource, Communication, 
Risk, and Procurement. 
According to PMBOK, time planning requires processes 
to: 
 Define Activities: a process to define the actions to be 
executed in order to produce project deliverables. 
 Sequence activities: a process to define the logical 
dependencies between project activities, and also to 
define its execution order.   
 Estimate activities resources: plan human and non human 
resources needed to execute project activities. 
 Estimated activities duration: estimated the total time 
period needed to conclude the project activities. To do so 
it is necessary to know the activities scope, the resources 
available and others restrictions. 
 Develop schedule: this process defines that each project 
activity has its own start and end dates, effort, duration, 
and 
resources 
estimated, 
as 
well 
the 
activity 
dependencies. Often it is represented as a Gantt chart. 
A. CMMI 
The Capability Maturity Model Integration (CMMI) 
provides a framework for improvement development 
process for software products and services. It describes the 
best practices associated to activities covering the life cycle 
of products from conception to delivery and maintenance 
[4]. Currently, there exist 3 different constellations: CMMI 
for Development (CMMI-DEV), CMMI for Acquisition 
(CMMI-ACQ) and CMMI for Services (CMMI-SVC). 
Here, due to our scope on software development, we focus 
on the CMMI-DEV constellation [4]. Its purpose is to help 
organizations improve their development and maintenance 
processes for both products and services. Within the CMMI 
Product Suite, a project is defined as a managed set of 
interrelated resources which delivers one or more products 
to a customer or end user. A project has a definite beginning 
and typically operates according to a plan. Such a plan is 
documented and specifies what is to be delivered or 
implemented, the sources and funds to be used, the work to 
be done, and a schedule for doing the work. 
CMMI constellations are basically composed through 
two dimensions: process areas and capability/maturity 
levels. CMMI-DEV v1.3 defines 22 process areas grouped 
in four process categories. In this research, we focus mainly 
on project planning (PP) process area associated to maturity 
level 2, due to our specific focus on time planning practices 
that are supported by this process area. Specific practices 
related to time planning are: 
 PP/SP 1.1 Estimate the Scope of the Project: practice 
related to project activates definition, derived from 
project Work Breakdown Structure (WBS).  
 PP/SP 1.2 Establish Estimates of Work Product and 
Task Attributes: Accomplish estimations for work 
products size and task attributes, as estimated duration, 
start and end dates. 
 PP/SP 2.1 Establish the Budget and Schedule: The 
budget is out of the scope of time planning, but the 
schedule is included, involving activities duration 
estimation and sequencing activities.  
 PP/SP 2.4 Plan for Project Resources: Estimate for each 
project activity the human and non human resources and 
its quantities for accomplishing the activity. 
 PP/SP 1.4 Determine Estimates of Effort and Cost: The 
cost estimation is out of scope of time planning, but the 
effort estimation is included. Estimation effort means the 
number of work periods that are needed to realize an 
activity. 
III. 
PMBOK AND CMMI PRACTICES UNIFICATION 
As a first step into the direction of a harmonized support 
aligned with both models, we analyzed and compared the 
best practices as required by both models for time planning 
and mapped them (TABLE I – column 3 and 4). The work is 
based on earlier research of the authors on unifying and 
harmonizing CMMI-DEV v1.2 (PP, PMC, SAM) and 
PMBOK processes [10], which has been revised and 
updated with respect to the new current version of CMMI-
DEV v1.3. 
Based on this we defined a set of Unified Best Practices 
(UBPs) covering completely both models (TABLE I – column 
1 and 2). 
TABLE I - UNIFIED BEST PRACTICES FOR TIME PLANNING  
UBP 
Description 
CMMI-DEV 
v1.3:2010 
PMBOK 
4ed:2008 
P1 
Define 
Activities 
PP/SP 1.1 Estimate the 
Scope of the Project 
6.1 
Define 
Activities 
P2 
Establish 
Estimates 
of 
Work 
Product 
and 
Activity 
Attributes 
PP/SP 1.2 Establish 
Estimates of  Work 
Product and Task 
- 
P3 
Sequence 
Activities 
PP/SP 2.1 Establish 
the 
Budget 
and 
Schedule 
6.2 
Sequence 
Activities 
P4 
Plan for Project 
Resources 
PP/SP 2.4 Plan for 
Project Resources 
6.3 
Estimate 
Activity 
Resources 
P5 
Estimate 
Activity 
Durations 
PP/SP 2.1 Establish 
the 
Budget 
and 
Schedule 
6.4 
Estimate 
Activity 
Durations 
353
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

P6 
Estimate Effort 
PP/SP 1.4 Determine 
Estimates 
of 
Effort 
and Cost 
 
P7 
Develop 
Schedule 
PP/SP 2.1 Establish 
the 
Budget 
and 
Schedule 
6.5 
Develop 
Schedule 
IV. 
GENERIC PROCESS MODEL 
In accordance to the defined unification of both models 
and taking into consideration characteristics and needs of 
SMEs, we propose a generic process model for time 
planning. The proposed model (Figure 11) is defined using 
the formal notation SPEM which is maintained by OMG 
[8]. 
The model is composed of artifacts, processes, and tools 
(techniques and methods). The sequence of the processes is 
defined as shown in Figure 11. For each process inputs and 
outputs artifacts are defined. Each process is detailed in next 
sections. 
A. Define activities 
This process goal is to identify and document the work 
that has to be done to build the project deliveries.  Project 
activities are identified based on the defined work packages 
in the WBS (Work Breakdown Structure). For each of the 
work packages one or more activities are identified – 
representing the work that has to be done to create the 
respective results. A technique to execute this process is 
named decomposition [2]. If existent, an organizational 
process model can also used as a basis.  
B. Sequence activities 
Sequence activities is the process related to identifying 
and documenting the logical relationships between project 
activities.  
A technique used to define activities’ dependencies is 
PDM (Precedence Diagram Method) [2]. It is based on a 
network diagram to represent all project activities and its 
dependencies (Figure 2). 
 
Figure 2 - Precedence diagram method 
C. Establish Estimates of Work Product and Activity 
Attributes 
This process aims at the estimation of the size and 
complexity of work packages. It is also related to the 
estimation of activity attributes as start and end dates, effort 
and duration. 
The work package size is used to estimate the software 
dimension in a quantitative way. Size and complexity can be 
estimated using several units, for instance, size could be 
estimated using lines of code, function points or use case 
points [2]. It is considered an initial parameter, to perform 
other estimations as effort and cost. 
D. Plan for Project Resources 
This process aims at the estimation of the resources 
(people, equipments, etc.) and its quantities that will be 
needed to execute the project activities. Resources are 
typically estimated based on specialized opinion based on 
the roles defined in the organizational chart. 
E. Effort estimation 
The effort is the amount of work needed to execute an 
activity. Effort is typically estimated in terms of person-
hours, person-months etc. Well accepted techniques for the 
estimation process include either the usage of historical data 
(often not available in organizations with an immature 
process such as many SMEs) or consensus-based techniques 
including wideband delphi [11] or planning poker [12]. 
F. Estimate activities duration 
This process aims at estimating the duration of the 
activities. Typically the duration is estimated in periods of 
work (e.g.: hours or days) that are needed to conclude it. 
Several techniques typically adopted include: 
 Expert opinion: Specialists provides their estimations for 
the duration of activities based on previous experiences. 
 Analogue estimation: The duration of a similar activity, 
which was executed in a previous project to estimate the 
duration of this new activity, is used. 
 Parametric estimation: The estimation is realized in a 
quantitative way. Making arithmetic calculus based on 
the amount of work and team productivity. 
G. Schedule development 
The schedule development is the process that determines 
the planned dates for start and ending each project activity. 
To develop the schedule in an optimized way, techniques 
typically adopted include: 
 Schedule network analysis: It indicates the project 
duration. By applying this technique it is possible to 
know the project end date on worse and better cases.  
 Critical path method (CPM): It identifies all activities 
which can’t suffer any delay. A sequence of activities 
which can’t suffer delay are called critical path. When 
some critical path activity suffers delay, the entire 
project will be delayed.  
The main output for this process is the project schedule. 
The schedule typically is as a Gantt chart (Figure 3). 
354
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
Figure 3 - Project schedule 
V. 
TOOL SUPPORT  
To facilitate the application of the proposed generic 
model in practice, tool support has been developed. Due to 
financial restrictions in the context of SMEs, we opted for 
enhancing one of the most popular free open-source tools - 
dotProject. One of the main reasons for choosing this tool, it 
is that new features can be built and installed as add-on 
modules using the tool's development framework. This 
possibility to adapt the tool usually is not available in 
commercial tools, e.g., ms project (microsoft.com/project) 
or primavera (oracle.com/primavera). 
A. DotProject 
DotProject [13] is a web-based tool for project 
management. It supports user management, projects listing, 
hierarchical task definition and schedule visualization 
(Gantt), client management, besides offering features such 
as contact list, file repository and calendar (Figure 4). The 
software supports MySQL or ADOdb databases and has 
been developed using PHP. Released in 2000, its current 
version is 2.1.6. It is an open-source system, published 
under General Public License (GPL), which means it can be 
customized and redistributed once the GPL is maintained. 
 
Figure 4 – dotProject  
The current core version of dotProject does already 
partially support the time planning process. In a first step we 
analyzed the degree of support provided in conformance 
with the set of unified best practices (including PMBOK 
and CMMI). To assess the degree of support provided by 
dotProject in relation to each time planning UBP (TABLE I) 
we defined a 4-point ordinal rating scale as presented in 
TABLE II. 
TABLE II - RATING SCALE [3] 
Rating 
Description 
- 
Does not provide any support. 
* 
Offers basic support, covering less than half of the UBP. 
** 
Covers more than half of the UBP. 
*** 
Offers a complete set of elaborate functionalities for this 
UBP. 
As a result, we identified that basically all required best 
practices are supported at least in a very simple way 
(TABLE III), yet with exception to the process “Develop 
Schedule” all processes need to be enhanced to provide full 
support.  
TABLE III - DOTPROJECT TIME PLANNING SUPPORT [14] 
UBP [3] 
Description 
dotProject version 
2.1.6 
P1 
Define Activities 
** 
P2 
Establish Estimates of Work 
Product and Task Attributes 
* 
P3 
Sequence Activities 
** 
P4 
Plan for Project Resources 
** 
P5 
Estimate Activity Durations 
** 
P6 
Estimate Effort 
* 
P7 
Develop Schedule 
*** 
  
VI. 
ENHANCEMENTS TO DOTPROJECT IN ORDER TO 
SUPPORT THE GENERIC MODEL 
Based on the identified shortcomings as presented in 
TABLE III, we enhanced dotProject in alignment with 
PMBOK and CMMI [14]. This section presents the step by 
step modifications made. 
Besides evolving functionality directly related to time 
planning processes, we also identified the need to develop 
features related to other processes, but required as inputs to 
the time planning processes, such as defining a WBS, so far 
not supported by dotProject core modules.  
A. Defining Work Breakdown Structure (WBS) 
In order to allow the systematic registration of the 
project scope in form of a WBS, we developed a new 
functionality, which supports the representation of project’s 
355
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

WBS (Figure 5). The created WBS is used as input to the 
process Define Activities.  
 
Figure 5 - Defining WBS 
B. Defining activities based on work packages 
Following 
PMBOK, 
activities 
are 
defined 
by 
decomposing work packages into activities. To support this 
process, we developed a functionality that visualizes the 
defined WBS and supports the addition of activities for each 
of the defined work packages (Figure 6). 
 
Figure 6 - Defining project activities by work package 
C. Sequence activities 
The core implementation of dotProject allows the 
identification of relationships between activities, but not 
clearly. 
Yet, in order to provide a better support we developed a 
feature that supports the definition of the dependencies 
between activities using the Precedence Diagram Method 
(PDM) in a graphical way visualizing project activities 
linked as a network. 
 
Figure 7 - Sequence activities 
D. Creating a meeting minute for estimation sessions 
In accordance with the proposed process, estimations are 
made based on consensus, e.g., in planning poker sessions. 
In this context, tools support is basically required in terms 
of documenting how the estimates have been determined. 
Therefore, a new feature has been added to the tool, which 
supports the registering of a meeting minute for estimation 
sessions. As part of this meeting minute it is possible to 
document what has been estimated, when the session has 
taken place, who participated, as well as details with respect 
to the estimates (Figure 8).  
 
Figure 8 - Estimation minute form 
The determined estimates (size/complexity) can be 
registered with respect to the specific work package. For 
each activity effort and/or duration estimates can be 
registered (Figure 9). 
356
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
Figure 9 - Activities estimations details 
For each activity, the tool also supports the estimation of 
the required resources by selecting required roles from the 
organizational chart.   
E. Schedule development 
To support schedule development a new functionality 
has been developed based on the Critical Path Method 
(CPM). It can be executed after all activities have been 
sequenced and their efforts have been estimated. This 
method calculates the start and end dates for activities based 
on project start date, sequence of activities, and estimated 
efforts. As a result, the tool also automatically creates a 
Gantt chart with this information in order to visualize the 
schedule (Figure 10).  
 
Figure 10 - Gantt chart 
In this respect several enhancements have been 
developed in order to facilitate the application of the generic 
time planning process in practice, partially even automating 
steps as far as possible.  
VII. 
EVALUATION 
As part of our research we also evaluated the proposed 
generic model and the developed tool enhancements. Our 
evaluation goals are:  
 
Goal 1: Evaluate, if the enhancement of dotProject is 
helpful to support time planning in software projects in 
SMEs.  
 
Goal 2: Analyze if the generic process model is 
complete, consistent, and adequate for SMEs. 
 
Goal 
3: 
Identify 
the 
strong 
points 
and the 
improvements points of proposed solution.  
 
Goal 4. Compare the degree of alignment of the 
enhancements of dotProject with dotProject v2.1.6. 
With respect to the identified evaluation goals, we 
performed two types of studies. With respect to goals 1-3 
we performed an expert panel and with respect to goal 4 we 
repeated the heuristic evaluation done in the beginning.  
A. Expert panel 
Adopting the GQM method [5], we decomposed these 
goals into questions and metrics. The required data has been 
collected through an expert panel capturing the opinion of 
software project management experts. Therefore, a 
questionnaire has been designed, transforming the metrics 
into affirmations and using a 5-point scale (1 – strongly 
disagree to 5 – strongly agree) (TABLE V). 
TABLE IV – QUESTIONNAIRE ITEMS 
Goals 
Questions 
Goal 1 
1.1 I consider the evolution of dotProject useful for activity 
definition. 
1.2 I consider the evolution of dotProject useful for activity 
sequencing. 
1.3 I consider the evolution of dotProject useful for the 
documentation of size/effort/duration estimations.   
1.4 I consider the evolution of dotProject useful for the 
documentation of resources estimation documentation. 
1.5 I consider the evolution of dotProject useful for 
schedule development.  
1.6 The enhanced version of dotProject completely 
supports time planning.  
1.7 The enhancement of dotProject is consistent. 
1.8 The evolution of dotProject is adequate to support time 
planning on SME.  
Goal 2 
2.1 I consider the generic process model for time planning 
adequate for SMEs. 
2.2 I consider the generic process model for time planning 
consistent. 
2.3 The generic process model for time planning covers 
time planning completely to realize time planning. 
Goal 3 
3.1 What are the main strengths you observed? 
3.2 What are the main improvements suggestions? 
3.3 Do you have any other comment? 
The evaluation was realized by project management 
specialists in SME context. The participants were chosen 
based on their availability to participate in a short period of 
time. 
The specialists invited to join the experiment, did so in a 
voluntary capacity.  
Beside the questionnaire the experts received an 
evaluation guide that explains the generic process model 
(Figure 11), and also demonstrates the enhanced tool 
357
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

functionality (Section V).  The experts have been asked to 
follow the process model using dotProject on a time 
planning example and afterwards to respond the 
questionnaire.  
B. Results 
The evaluation was realized during the months of May 
and June 2012. We invited 34 experts, selection based on 
their software project management expertise and their short 
term availability. In total, we received 10 responses, 
representing a response rate of 29%. The invitation was sent 
by e-mail, containing the evaluation guide and the link to 
the online questionnaire. 
Analyzing the experts’ responses, TABLE V shows the 
median for each of the items.  
TABLE V – MEDIANS PER ITEM/GOAL 
Questionnaire item 
Median 
Goal 1 
1.1 I consider the evolution of dotProject useful for activity 
definition. 
5 
1.2 I consider the evolution of dotProject useful for activity 
sequencing. 
5 
1.3 I consider the evolution of dotProject useful for the 
documentation of size/effort/duration estimations.   
4 
1.4 I consider the evolution of dotProject useful for the 
documentation of resources estimation documentation. 
4 
1.5 I consider the evolution of dotProject useful for schedule 
development.  
5 
1.6 The enhanced version of dotProject completely supports 
time planning.  
4 
1.7 The enhancement of dotProject is consistent. 
5 
1.8 The evolution of dotProject is adequate to support time 
planning on SME.  
4 
Goal 2 
2.1 I consider the generic process model for time planning 
adequate for SMEs. 
4 
2.2 I consider the generic process model for time planning 
consistent. 
4 
2.3 The generic process model for time planning covers time 
planning completely to realize time planning. 
4 
B. Heuristic evaluation 
As in the beginning of the enhancement of dotProject, 
we repeated the same heuristic evaluation with respect to the 
defined UBPs. The results are presented in TABLE VI.  
TABLE VI - EVALUATION OF ENHANCEMENTS ON DOTPROJECT 
[14] 
UBP 
[3] 
Description 
dotProject 
version 2.1.6 
Enhanced 
version 
dotProject  
P1 
Define Activities 
** 
*** 
P2 
Establish Estimates of 
Work Product and 
Task Attributes 
* 
*** 
P3 
Sequence Activities 
** 
*** 
P4 
Plan for Project 
** 
*** 
Resources 
P5 
Estimate Activity 
Durations 
** 
*** 
P6 
Estimate Effort 
* 
*** 
P7 
Develop Schedule 
*** 
*** 
Among the project management open-source tools, 
dotProject is considered the one that most provides support 
to the best practice models [3]. The enhancements made in 
this work, added several important features, such as, 
definition of WBS, and activities creation based on 
decomposition technique [2], clearly distinguishing the 
concepts of project work package and project activity.  The 
sequence of the activities using the PDM [2], and also the 
estimations registration are important improvements to 
support the development of project schedule, which is the 
main output of time planning process. 
C. Discussion 
Analyzing the presented results, we can identify a very 
positive feedback in general.  
In relation to Goal 1, we observed a strong tendency for 
total agreement of the experts regarding the questions 
whether the tool enhancement is helpful – all medians are 
between 4 and 5.  
With respect to Goal 2, the experts also agreed that the 
proposed generic process model is complete, consistent, and 
adequate for SME. Experts agreed on all items with a 
median of 4. Yet, as no strong agreement has been obtained 
on average we can also identify that some further small 
improvements could be carried out. 
With respect to Goal 3 the experts highlighted as 
strengths principally the harmonization between CMMI and 
PMBOK aligned to one single process model for time 
planning. One expert also stressed very positively the 
enhancement of an open-source tool to support the model. 
Several experts highlighted that the explicit separation, 
between work packages and project activities is a very 
useful feature, as most project management tools don’t 
separate these concepts clearly. 
 
In respected with Goal 4, we identified that the 
enhancement in fact has been done in correspondence with 
the PMBOK and CMMI and that with the enhancement 
made a full support in conformance with these models is 
provided.  
D. Threats to validity 
The evaluation we performed of course represents only a 
starting point. There can be identified several threats to 
validity of the results due to limitations of the evaluation for 
practical reasons. One threat is the small number of software 
project managers involved. As this number does not by any 
means provide statistical representativeness. At this point of 
time, we also involved only experts from Brazil. This of 
course limits strongly the generalization of the obtained 
results.  
358
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

Another threat to validity can be the definition of metrics 
and data collection instruments. Yet, adopting GQM to 
systematically derive the metrics and questionnaire issues, 
such a threat may be small.  
Another issue to be considered is the fact that dotProject 
in itself presents several usability problems and is therefore 
not very intuitive to be used.  
Thus, evaluators may have found difficulties in the 
executing of the exemplar time planning tasks not related to 
the feature itself but due to general usability problems.  
VIII. CONCLUSION AND FUTURE WORK 
This work intends to facilitate the adoption of systematic 
time planning in SMEs in conformance with the PMBOK 
and CMMI. Therefore, we unify best practices from both 
models, propose a generic process model for time planning 
customized to the context of SMEs and enhance a free open-
source tool to support the process in practice. 
A first evaluation provided a very positive feedback, 
stressing principally the tool enhancement as one of the 
strengths of the work.  
Based on the obtained feedback, we are currently 
improving the process model and the dotProject evolution. 
The evaluation we have performed focused on the 
application of generic process model in SMEs, and it was 
evaluated by project manager experts in SMEs context. 
There is a possibility that this model also could be applied in 
large organizations, but for that a new evaluation focused in 
this context should be applied. 
As future work, we are amplifying the scope of our work 
aiming at the coverage of the complete project management 
life cycle, including  e.g., monitoring & control, as well as all 
relevant knowledge areas (scope, cost, risks, etc.).  
ACKNOWLEDGMENT 
This work was supported by the CNPq (Conselho 
Nacional de Desenvolvimento Científico e Tecnológico – 
www.cnpq.br), an entity of the Brazilian government 
focused on scientific and technological development. 
REFERENCES 
[1] The Standish Group International, “Chaos Summary for 
2010”. 
Boston, 
MA, 
USA, 
2010. 
<http://insyght.com.au/special/2010CHAOSSummary.pdf> 
18.09.2012 
[2] PMI – Project Management Institute, “A Guide to the Project 
Management Body of Knowledge”. 4th edition, Project 
Management Institute (PMI), Newtown Square, Pennsylvania, 
USA, 2008. 
[3] C. Wangenheim, J. Hauck, and A. Wangenheim, “Enhancing 
Open Source Software in Alignment with CMMI-DEV”, 
IEEE Software, vol. 26, no. 2, 2009, pp.59-67. 
[4] SEI 
– 
Software 
Engeenering 
Institute, 
“CMMI 
for 
Development (CMMI-DEV), Version 1.3”, Technical Report, 
CMU/SEI-2010-TR-033, 2010. 
[5] ABES - Associação Brasileira das Empresas de Software, 
“Brazilian 
Software 
Market”. 
São 
Paulo, 
2011. 
<http://www.abes.org.br/UserFiles/Image/PDFs/Mercado_BR
2011.pdf > 18.09.2012. 
[6] SEI - SOFTWARE ENGINEERING INSTITUTE, “Process 
Maturity Profile CMMI/SCAMPI Class A Appraisal Results 
2011 Mid-Year Update”. Pittsburgh: Carnegie Mellon® 
University, 
2011. 
<http://www.sei.cmu.edu/cmmi/casestudies/profiles/pdfs/uplo
ad/2011SeptCMMI-2.pdf > 18.09.2012. 
[7] 
H. Young, T. Fang, and C. Hu. “A Successful Practice of Applying 
Software Tools to CMMI Process Improvement”. Journal of Software 
Engineering Studies, vol. 1, no. 2, 2006, pp.78-95. 
[8] OMG – Object Management Group, “Software & Systems 
Process Engineering Meta-Model Specification - 2ed 
version”, 2008. <http://www.omg.org/spec/SPEM/2.0/PDF> 
18.09.2012 . 
[9] V. Basili, G. Caldiera, and D. Rombach, “The experience 
factory”. Encyclopedia of Software Engineering, 1994, pp. 
469-476. 
[10] C. Wangenheim, D. Silva, L. Buglione, R. Scheidt, and R. 
Prikladnicki, “Best practice fusion of CMMI-DEV v1.2 (PP, 
PMC, SAM) and PMBOK 2008”. Journal on Information and 
Software Technology, vol. 52, no. 7, 2010, pp.749-757.  
[11] B. Boehm, Software Engineering Economics, Prentice Hall 
PTR Upper Saddle River, NJ, USA, 1981. 
[12] M. Cohn, Agile Estimating and Planning, Prentice Hall, USA, 
2005. 
[13] DotProject, 
“Project 
Management 
Software”. 
< 
www.dotproject.net > 26.10.2012 
[14] R. Gonçalves, A. Pereira, C. Wangenheim, and J. Hauck, 
“Supporting time planning by enhancing an Open Source 
Software in Alignment with CMMI-DEV and PMBOK”. 
International. International Free Software Workshop. Porto 
Alegre, 
Brazil, 
2012. 
<http://people.softwarelivre.org/wsl/2012/18.pdf> 18.09.2012 
359
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

 
 
Figure 11 - Generic model for time planning aligned with CMMI-DEV and PMBOK for SME 
360
Copyright (c) IARIA, 2012.     ISBN:  978-1-61208-230-1
ICSEA 2012 : The Seventh International Conference on Software Engineering Advances

