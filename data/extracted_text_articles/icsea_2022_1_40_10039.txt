Towards Measurable Motivation in Software
Development
Niladri Saha
Tampere University
Tampere, Finland
bensous@gmail.com
Abdullah Israr
Tampere University
Tampere, Finland
abdullah.israr@tuni.fi
Outi Sievi-Korte
Tampere University
Tampere, Finland
outi.sievi-korte@tuni.fi
Fabian Fagerholm
Aalto University
Helsinki, Finland
fabian.fagerholm@aalto.fi
Abstract—Information Technology (IT) experts are feeling the
strain of fast-paced, demanding work, and working measures
for improved well-being are increasingly being established. One
essential element of well-being is motivation. Motivation is critical
in order to maintain smoothly working processes and quality
in completed tasks. To detect and intercept situations where
motivation begins to decrease, we need means to identify changes
in motivation. To automatically detect such changes requires ways
to measure motivation levels from data at hand. In this study,
we present preliminary results towards defining measurable
motivational factors. Our approach relies on emotional indicators
of motivational change that can be detected automatically from
software repositories. Our results show that the emotional content
of commit comments and issue texts, extracted using sentiment
analysis and emotion detection, is correlated to varying degrees
with collaboration and risk metrics. We point to possibilities for
future work on more sophisticated measures with more complex
data.
Index Terms—motivation, emotions, developer experience, data
mining, software development.
I. INTRODUCTION
Working life has undergone a bewildering change in recent
years. Adoption of remote work and utilization of software
tools for tasks that were previously handled manually or via
face-to-face communication, continues to grow. Information
Technology (IT) experts are increasingly feeling the pressure
of fast-paced work, as 57% of technology company employees
report burnout in the United States [1]. The situation could
be remedied by ensuring processes and workflows take into
account the human factors of software developers, particularly
considering motivation. Motivated employees can handle stress
better and are also more productive and less prone to errors
[2].
On the one hand, motivation at work is tightly linked
to tasks. Tasks should be well-mapped to the skills of an
employee, while still offering meaningful challenge. Further,
there should be the right amount of work given with regard
to the time that can be spent for them [2]. Both the contents
of the task (what kind of work there is to be done), and the
process to complete the task (how the work should be done)
impact motivation.
While there are many studies on how to improve soft-
ware processes regarding prioritizing tasks in teams, handling
communication, etc., so far there are few studies on how
to incorporate human factors, and particularly motivation of
developers as part of the process. Considering individuals on
a personal level, emotions have been identified as one of the
most central motivators of human behavior. There is strong
evidence that experiencing and expressing positive emotions
and moods enhances performance at individual, group, and
organizational levels [3]. Motivation is altogether a multi-
faceted concept. There are extrinsic and intrinsic factors to
consider, and different factors have non-trivial relationships.
The importance of factors also varies between individuals.
Our long-term goal is to create a model of motivation that,
when used with smart methods, can be applied as a tool to
improve processes by including factors related to well-being
at work. We strive to identify motivational factors in software
development tasks that can be automatically extracted and
measured from data available on the tasks. This kind of data
modeling could enable quick reactions and interventions to
correct workflows.
In this study, we take the first steps towards defining factors
for this kind of motivational model. We mine data from
open-source software repositories. We combine analyses on
sentiments and emotions with metrics on software develop-
ment tasks (complexity of the task, risk level and found
collaboration). The preliminary results as revealed in Section
IV imply that there are correlations between different task-
related metrics and emotions identified from task-related data.
While we are still far from a complete measurable model,
the results are encouraging and spark discussions on possible
research directions. This paper proceeds as follows. In Section
II-A we will give background on the concepts of emotion and
motivation and go through related work. In Section III we
outline the utilized research process and define the metrics we
use in the study. In Section IV we give our preliminary results
based on collected data and statistical calculations. In Section
V-A we reflect how the results can be interpreted considering
known theories on emotion and discuss the limitations of the
study. Finally, we conclude in Section VI.
II. BACKGROUND AND RELATED WORK
A. Emotions and Motivation
Emotions are strong feelings “deriving from one’s circum-
stances, mood, or relationships with others” [4]. They are
19
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

responses to specific internal and external events [5]. Emo-
tions include psychological and physiological processes, but
defining emotion has proven difficult [6] and no final scientific
consensus exists. Emotions are intertwined with mood, tem-
perament, personality, disposition, and creativity [7]. Theories
of basic emotions give classifications of discrete, measurable,
and physiologically distinct emotions. A foundational example
is Ekman’s theory of basic emotions, which lists six emotions:
anger, disgust, fear, happiness, sadness, and surprise [8].
Emotions may also be understood through a multi-dimensional
analysis, which often gives rise to a two-factor model con-
sisting of valence (“tone”, positive – negative) and arousal
(“intensity”, passive – energized). These two are not a full
explanation of the wide range of emotional experiences that
humans can have, but they are theorized to map to an important
emotional component called core affect [9].
Motivation is often defined as the explanation behind why
people initiate, continue, or terminate a certain behavior at a
particular time [10]. The stronger the motivational state, the
more likely that it influences behavior. Content theories of
motivation aim to describe what goals always or usually mo-
tivate people. For example, according to Herzberg’s two-factor
theory, certain workplace factors result in job satisfaction and
are thus motivators, while hygiene factors are those that lead
to dissatisfaction if absent, but do not produce satisfaction in
themselves [11]. The two-factor theory has been the basis for
other theories that consider motivation in the workplace, such
as the Job Characteristics Theory, a theory of work design that
seeks to enrich work by affecting motivational outcomes [12].
Emotion can be seen as a driving force behind motiva-
tion [13], and high or low motivation is often associated with
specific emotions. Emotion is a crucial part of the motivational
processes and can be used as an indicator of those processes.
B. Related work
Beecham et al. [14] found several motivating and de-
motivating factors for software engineers. However, the study
does not mention any technique to calculate them or what kind
of data the factors could be based on.
Sharp et al. [15] developed an enhanced model for mo-
tivation by using the concepts of Beecham et al. [14] and
several existing models, such as the Job Characteristics Model
(Theory) [12]. The enhanced version considers individual
characteristics in addition to other software engineering char-
acteristics. The contextual factors here denote the work set-
ting, i.e., the external environment like leadership, company’s
performance, and so on.
An empirical study on how the motivational model applies
in practice has been conducted in Pakistan [16], where the
Hofstede Cultural Dimension Model was taken into account
to understand the results. Authors highlight the need to include
culture when interpreting motivational factors.
Graziotin et al. [17] proposed an approach to find factors
that create unhappiness among software developers. The fac-
tors listed for unhappiness can be considered as de-motivators,
and matches with the de-motivating factors provided by
Beecham et al. [14]. However, Graziotin et al. [17] did not
provide a way to measure these factors either.
Ortu et al. [18] implemented an approach to store the issue
details from issue tracking systems like Jira. This approach
can be used to further extract details related to the issue that
are relevant in motivation mining. While the study mentioned
issue fixing time as one of the factors that affect emotion, as
well as motivation of a developer, it did not show how it can
be measured. Ortu et al. later added an emotional classification
to the extracted data set [19]. However, the emotion is decided
manually and there is no sentiment analysis in the approach.
No detailed study has been made to elaborate the process of
extracting motivational factors.
Utilizing techniques to mine software repositories, M¨antyl¨a
et al. [20] have studied how time pressure and productivity
could be deduced. With similar data, Graziotin et al. [21]
show that unhappiness is tied to low motivation and repetitive
tasks, among other factors. While these studies link repository
mining and motivation, they do not yet reveal how the nature
of tasks affect motivation. Similarly to Ortu et al. [19], we
have fetched issue, commit, and contribution details for each
developer, but go further by also extracting different metrics
from the issue and commit details. We have used the set
of motivational and de-motivational factors as defined by
Beecham et al. [14], and the approach of Sharp et al. [15]
is further considered in understanding the outcome.
III. RESEARCH PROCESS
The general problem we are trying to solve is What task-
related factors motivate software experts? Since our first step
to investigate this focuses on open-source software develop-
ment, we are specifically looking into the following research
questions (RQs):
• RQ1: What are the factors in software development tasks
that impact the motivation of a developer?
• RQ2: What factors can be measured?
• RQ3: What kind of relationships are there between dif-
ferent factors?
The research process to answer these questions proceeded
as follows. We perused the literature to learn about existing
motivational studies on software development (background
for RQ1). We listed found motivators and de-motivators and
categorized them to measurable and non-measurable (initial
step for RQ2). In the following, we will give details on
how we collected data from open-source software repositories
(Section III-A) and what metrics we developed for measuring
motivational factors (based on literature and available data)
(Section III-B).
A. Data collection
We used the PyGitHub library (supporting Python v3+)
to extract data from GitHub. Issue details from 35 GitHub
repositories were extracted, following the approach of Rath et
al. [22]. A total of 26566 issue comments from closed issues
were collected. We further collected 6520 commits from these
closed issues. Out of these, we selected only those issues and
20
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

commits where the same developer had both commented on
the issue and committed the code, so that we could focus on the
data provided by the software developer actually performing a
certain task (committing the code that resolved the issue). We
particularly wanted to focus on the developer performing the
task in order to get a clear view of task-related motivational
factors, which is our main interest.
As a result, our final dataset has 1069 records (issue and
commit pairs), with data from 139 individual developers, rang-
ing from 2015 to October 2021. Based on labels used in the
repositories, issues are categorized into five main categories:
Bug, Documentation, Enhancement, Feature and Others. In the
category “Others”, all type of issues that do not belong any
of the four categories mentioned are considered. For sentiment
analysis, we used TextBlob, and for identifying emotions from
text, we used Text2Emotion.
B. Metrics for Motivation
Beecham et al. [14] list 21 motivators and 15 de-motivators
that are particular for software engineers. We categorized these
into measurable and non-measurable based on an estimation
of whether we could calculate a numerical value for the
factor. Factors that would have required information from
organizational policies, personal skills, etc. were at this stage
categorized as non-measurable. For the measurable motivators
we examined what kind of data we were able to get from
GitHub, and created a mapping between the motivators and
available data. Ultimately, we were able to formulate metrics
for three motivators, given in Table I. Figure 1 further illus-
trates what kind of data from issues and commits was used
with which tools and metrics.
We recognize that categorizing the factors is problematic.
Had we had access to organizational data, other factors could
have been labeled as “measurable” as well. Further, as this is
the first iteration, the suggested metrics are simple. For ex-
ample, for collaboration we might envision more complicated
formulae, taking into account past connections or collaboration
across different projects. The limitations of data, metrics and
scope are further discussed in Section V-C.
The defined metrics are based on literature. Lines Of Code
(LOC) is commonly used to determine the size and the
complexity of software. For example, Nystedt and Santos
[23] and Tashtoush et al. [24] describe LOC as one of
the approaches in complexity calculation of a software. In
addition, we take into account the number of files involved
in changes, demonstrating how contained (or not) the changes
are to a specific part of code. Together, lines of code and
number of files are combined for our complexity metric (1).
We categorized complexity as high, if it is larger than the
average complexity in the specific category of issues (Bug,
Documentation, Enhancement, Feature or Others), and as low,
if it is below average of the specific category.
Beecham et al. [14] list collaboration as one of the moti-
vational factors that affects software engineers when they are
working in a team projects. In our collaboration metric (2), we
count as collaborators those who (in addition to the developer
TABLE I
METRICS FOR MOTIVATIONAL FACTORS.
Motivational
factor
Related data
Formula
Technically
challenging
work
(Complexity
of tasks)
Number
of
files, number
of
files
changed,
number
of
lines
changed
Ci = nL ∗ nF (1),
Ci = Complexity of an issue at
code level
nL = Number of changed lines (in
commit)
nF = Number of changed files (in
commit)
Participation/
Involvement/
Working
with others
Information
on assignee,
commenter,
commit
author
CS = CL − ML (2),
CS = Collaboration Score,
CL = Number of collaborators,
ML = Number of mentions
Risk/Risk
related
to
project
delivery time
Completion
time
of
issues
Ri = High, if Cti > Avg(Ct)
Ri = Low, if Cti < Avg(Ct) (3),
Ri = Risk of an issue,
Cti = Completion time of an issue
pushing the commit) are tagged to comments or marked as
assignees, commenters or commit authors to an issue. We then
subtract those who have only been mentioned, but show no
active participation in the issue.
Finally, Raphael [25] names delivery time or completion
time as one of the profound risks in any agile software
development project. Based on this, we calculate risk (3) based
on how much the completion time of an issue deviates from the
average. If the completion time for an issue is greater than the
average completion time for the same issue category, the risk
is high, otherwise risk is low. We recognize that calculating
risk in this hindsight fashion has its limits.
IV. PRELIMINARY RESULTS
In Tables II and IV, we present results concerning the
complexity metric. Considering our categorization between
high and low complexity, there were 116 high complexity
issues and 950 low complexity issues. Note that for some
commits the comment field is blank, thus the percentages
do not sum to 100%, as no emotion could be detected for
blank fields. Also for some issues (commits) complexity was
zero, in which cases they were discarded. We can clearly
see from Table II that there are distinct differences between
the emotions expressed in issue comments (usually utilized
discussing the task with others in the community) and commit
comments (usually used to summarize the solution). While
already 40.5% of all high complexity issues were found Happy,
in commit comments the percentage went up to 66.4%. Yet,
for low complexity issues, the portion of Happy comments
was similar for both issue comments and commit comments.
A distinct difference between issues and commit comments
is also found in texts expressing Surprise – there are some
of such in issues, but none in commits. Finally, looking at
the distribution of emotions, Happy is clearly the dominant
emotion for both high and low complexity tasks and both in
issues and commits.
21
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

Fig. 1. Conceptual model of data collected for the study, analysis tools used to collect and process the data, and metrics extracted based on the raw data as
indicators of motivational factors.
The second-most common emotion varies greatly. For is-
sues, there is an equal amount of comments categorized as
Sad or Fear for both high and low complexity issues. For
low complexity issues, there is also a similar amount of issue
comments labeled as Angry, while for high complexity issues
Angry is very rarely found. For commit comments, on the
other hand, Angry is clearly the second most commonly found
emotion both for high and low complexity tasks, Fear and Sad
being more seldom found.
Conducting a multinomial regression test for statistical
significance showed that data source (issue or commit) was
statistically significant in explaining the found emotion (p =
0.00), while level of complexity was not (p = 0.065).
In Table IV, we give the average complexity and completion
time of issues by category. The used categories are gained by
labels used in the mined projects. While four labels (Feature,
Enhancement, Bug, Documentation) were consistently used
in all repositories, other labels varied greatly, and have been
combined under ”Others”. Here we can see that features have
the highest complexity and highest completion time – though
we should note the very low number of features (4). Bugs
have the lowest complexity, and are on the lower end of
used time to complete. Documentation may intuitively seem
surprisingly complex, but this may be explained via systematic
documentation involving small changes across multiple files.
In Table III, we summarize emotions found in high and low
risk issues. In total we found 265 high risk issues and 804 low
risk issue. The results are very similar to those in complex-
ity, particularly regarding the differences between issues and
commits. and the high percentage of Angry found in commits
compared to issues. There are further similarities in how the
percentage of ”Happy” is much higher in high risk issues than
commits made for high risk issues, while for low risk issues,
the percentage of ”Happy” comments is similar for issues
and commits. However, contrary to complexity, conducting a
multinomial regression test for statistical significance showed
that both the data source (issue or commit) (p = 0.00) and
the risk level (p = 0.009) were statistically significant in
explaining the found emotion. Considering how similar the
results intuitively appear, this prompts us to reconsider the
method for categorization of complexity.
Finally, in Table V we have mapped collaboration values to
emotions. Interestingly, issues and commit comments labeled
as Happy have the lowest collaboration score on average, while
highest collaboration scores are found on issues as Angry or
Sad, and both issues and commits labeled as Fear.
V. DISCUSSION
A. Reflections
In both issues and commits of both high and low complexity,
Happy was the dominant emotion. This is consistent with
prior research on software developer happiness [21]. As an
emotional component of motivation, happiness could be both
an outcome of successful goal attainment and an antecedent
that increases the likelihood of purposeful action. It is not
surprising that the Happy emotion appears frequently in the
data: happy developers more likely create comments.
However, looking more closely at the data, more high-
complexity
commit
comments
were
Happy
than
high-
complexity issues, while for low complexity commits and is-
sues, Happy comments were about the same. We speculate that
this may be an outcome of goal attainment: when a developer
completes a high-complexity task, their emotional state tends
toward happiness and this is reflected in how the commit
message turns out. In issues, happiness is not as strongly
represented because the matter is still under discussion and the
developer has not yet reached closure on the task. Similarly,
low-complexity tasks do not result in a sense of achievement of
the same magnitude as high-complexity tasks. That there were
some occurrences of Surprise in issues but none in commits
22
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

TABLE II
EMOTIONS BY COMPLEXITY
Emotion Source
Complexity
category
Count
Percentage
(per
complexity
category)
Happy
Issue
High
47
40.5%
Low
458
48.2%
Commit comment
High
77
66.4%
Low
479
50.4%
Sad
Issue
High
27
23.3%
Low
200
21%
Commit comment
High
8
6.9%
Low
89
9.3%
Surprise
Issue
High
13
11.2%
Low
50
5.3%
Commit comment
High
-
Low
-
Fear
Issue
High
27
23.3%
Low
220
23.2%
Commit comment
High
4
3.4%
Low
88
9.3%
Angry
Issue
High
2
1.7%
Low
22
23.2%
Commit comment
High
26
22.4%
Low
265
27.9%
TABLE III
EMOTIONS CATEGORIZED BY RISK LEVEL
Emotion
Source
Risk level
Count
Percentage
Happy
Issue
High
131
49.4%
Low
377
46.9%
Commit comment
High
166
62.7%
Low
391
48.6%
Sad
Issue
High
55
20.8%
Low
172
21.4%
Commit comment
High
9
3.4%
Low
88
10.9%
Surprise
Issue
High
20
7.5%
Low
43
5.3%
Commit comment
High
-
Low
-
Fear
Issue
High
54
20.4%
Low
193
24.0%
Commit comment
High
21
8.0%
Low
73
9.1%
Angry
Issue
High
5
1.9%
Low
19
2.4%
Commit comment
High
67
25.3%
Low
224
27.9%
TABLE IV
AVERAGE COMPLEXITY AND COMPLETION TIMES
Issue category
Count
Avg.
com-
plexity
Avg. completion
time (hours)
Feature
4
204995
288
Enhancement
77
3642
216
Bug
114
1100
187
Documentation
288
24840
179
Others
556
6454
257
TABLE V
COLLABORATION
Emotion
Source
Count
Average collaboration score
Happy
Issue
508
1.274
Commit comment
557
1.540
Sad
Issue
227
1.978
Commit comment
97
1.701
Surprise
Issue
63
1.873
Commit comment
-
Fear
Issue
247
1.968
Commit comment
94
1.915
Angry
Issue
24
1.958
Commit comment
291
1.732
is probably a reflection of the ongoing nature of the former
and closure in the latter.
The second-most common emotion varied greatly among
high- and low-complexity issues and commit comments. The
Angry emotion was the second-most common one for high-
and low-complexity commit comments, while it was rarely
found in high-complexity issue comments. This emotion may
be related to getting stuck (commenting in issues) or feeling
that work performed by oneself or others is inadequate (com-
menting in both issues and commits).
An Angry emotion is seen as moderate to high on the
arousal dimension, and in terms of motivation may thus be
a driver for action. Fear is also often seen as moderate to high
on arousal, which is visible in somewhat higher occurrence in
both high- and low-complexity issues. In commit comments,
however, we did not see Fear nor Sad emotions. For Fear, this
could be due to the valence dimension of the emotion: fear is
not conducive to creativity and action, and is motivationally
more likely to result in withdrawal or self-regulation. A similar
explanation could be plausible in the case of Sad emotions,
which is found more in issues and less in commits.
Beecham et al. [14] and Sharp et al. [15] list a number of
external signs or outcomes showing the level of motivation
among software engineers. These include retention, produc-
tivity, project delivery time, absenteeism, and project success.
Whereas these signs are on the project and organizational
levels, our findings address motivation on the individual level.
Project and organizational indicators typically react to changes
slowly or even completely after the fact, as in retention and
project success. Motivation, measured via emotional indicators
visible in actual work products or by-products is a more direct
view into the individual and collaborative processes. They may
also provide more direct means of understanding what it is
about software engineers’ work that is motivating and de-
23
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

motivating and open paths toward acting upon motivational
changes based on emotional expressions in work artifacts.
B. Addressing research questions
Looking into both the quantitative results as well as our
reflections on them, we address our research questions.
RQ1: What are factors in software development tasks that
impact the motivation of a developer? Examining the literature
in the field revealed a number of extensive studies, listing both
motivators and de-motivators for software engineers. Based on
our quantitative data, there is (varying) correlation between
identified measurable elements and the identified emotions in
tasks. The risk of missing a deadline, i.e., the time it takes
to complete a task, was shown to have statistical impact on
the emotion found. While the level of complexity using our
categorization between high and low complexity was not found
significant, there were indications that a more fine-grained
view of complexity could produce significant results.
RQ2: What factors can be measured? Utilizing data
from GitHub and comparing it with the motivators and de-
motivators found in literature, we have identified complexity of
task, collaboration/teamwork, risk of delay, emotion and sen-
timent as measurable factors. More factors could be identified
with more sophisticated data mining approaches or additional
data sources.
RQ3: What kind of relationships are there between different
factors? While our data prompts discussion on the relationship
between different motivational factors, more work is required
to properly understand them. We are currently performing
a qualitative study to further understand and validate our
quantitative findings, as well as experimenting with clustering
algorithms to discover relationships between the factors.
C. Limitations
As we are presenting preliminary results, we acknowledge
a number of limitations. First, we need more sophisticated
methods to enhance the existing metrics. A particular concern
is how the metrics can be either generalized or re-focused into
other contexts where the primary work products are not code,
but rather the manipulation of other kinds of artifacts.
Secondly, the question of transferability remains open .
These results pertain to software developers in Open Source
Software projects. To what extent they can be generalized to
software engineers in other contexts, remains an open question.
Finally, the study results contain some uncertainty in at-
tributing the detected emotions. We did not attempt to sep-
arate emotions attributed to the individual situation of each
participant, to the task itself, to the tools used, or to the
collaborative environment. We also could not distinguish the
precise motivational role of each emotion expression. For
instance, in the case of Anger, we did not separate between
anger that increased emotion and resulted in action from anger
as an expression after such an action (e.g., having fixed an
issue, a person’s commit message may express anger about
the issue or its underlying reasons). However, it was not an
aim of this study to reach that level of attribution; we aimed to
examine associations between tasks and motivation-indicating
emotions on a more general level.
VI. CONCLUSIONS
Our vision is to address a very complex, multi-faceted prob-
lem: identifying motivational factors in software development
work and creating smart ways to intervene when motivation
drops; and introducing more sensitivity to human factors into
software processes and workflows. Our preliminary results
are a stepping stone towards finding a measurable model of
motivational factors. Our findings give positive indications
that we can translate motivational factors into measurable
metrics, and find statistically significant relationships between
task-related metrics and experienced emotions. More work is
needed to fine-tune metrics (more data, qualitative validation)
and particularly to understand the causality between task and
emotion (e.g., feelings impacting task duration or vice versa).
Further work is also needed to have a larger dataset, enabling a
broader statistical analysis, as well as complementing it with a
qualitative study. We hope to inspire discussions and research
openings in this direction by releasing the preliminary results
on our vision. Some possible avenues would be to investigate
how digitization or transferability of tasks affects the emotions
of developers.
REFERENCES
[1] K.
McCarthy,
“Close
to
60
percent
of
surveyed
tech
workers
are
burnt
out—credit
karma
tops
the
list
for
most
employees
suffering from burnout,” 2018, retrieved: 06/2022. [Online]. Available:
https://tinyurl.com/softwareburnout
[2] P. Hirvikoski, “Kokemuksia ty¨ohyvinvoinnista, (in engl: Experiences on
well-being at work),” Master’s thesis, Tampere University, 2011.
[3] S. G. Barsade and D. E. Gibson, “Why does affect matter in organiza-
tions?” Academy of management perspectives, vol. 21, pp. 36–59, 2007.
[4] O. U. Press, “Emotion,” in Lexico.com, 2021, retrieved: 07/2022.
[Online]. Available: https://www.lexico.com/definition/emotion
[5] D. L. Schacter, D. T. Gilbert, and D. M. Wegner, Psychology: European
Edition, 3rd ed.
New York: Worth, 2011.
[6] K. R. Scherer, “What are emotions? and how can they be measured?”
Social Science Information, vol. 44, no. 4, pp. 695–729, 2005.
[7] J. R. Averill, “Individual differences in emotional creativity: Structure
and correlates,” Journ. of Personality, vol. 67, no. 2, pp. 331–371, 1999.
[8] M. N. Shiota, “Ekman’s theory of basic emotions,” in The SAGE
Encyclopedia of Theory in Psychology, H. L. Miller, Ed.
Thousand
Oaks, CA: Sage Publications, 2016, pp. 249–250.
[9] J. A. Russell, “Core affect and the psychological construction of
emotion.” Psychological review, vol. 110, no. 1, pp. 145–172, 2003.
[10] B. Weiner, “Motivation: An overview,” in Encyclopedia of Psychology,
A. E. Kazdin, Ed.
American Psychological Association, 2000.
[11] F. Herzberg, B. Mausner, and B. B. Snyderman, The Motivation to Work,
2nd ed.
New York: Wiley, 1959.
[12] J. Hackman and G. R. Oldham, “Motivation through the design of work:
test of a theory,” Organizational Behavior and Human Performance,
vol. 16, no. 2, pp. 250–279, 1976.
[13] S. J. C. Gaulin and D. H. McBurney, Evolutionary Psychology. Prentice
Hall, 2003.
[14] S. Beecham, N. Baddoo, T. Hall, H. Robinson, and H. Sharp, “Motiva-
tion in software engineering: A systematic literature review,” Information
and Software Technology, vol. 50, pp. 860–878, 2008.
[15] H. Sharp, N. Baddoo, S. Beecham, T. Hall, and H. Robinson, “Mod-
els of motivation in software engineering,” Information and Software
Technology, vol. 51, pp. 219–233, 2009.
[16] I. Asghar and M. Usman, “Motivational and de-motivational factors
for software engineers: An empirical investigation,” in 11th Int. Conf.
Frontiers of Information Technology, 2013, pp. 66–71.
24
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

[17] D. Graziotin, X. Wang, and P. Abrahamsson, “Are happy developers
more productive,” in Proc. Product-Focused Software Process Improve-
ment.
Springer Berlin Heidelberg, 2013, pp. 50–64.
[18] M. Ortu, A. Murgia, G. Destefanis, P. Tonelli, T. Roberto, M. Marchesi,
and B. Adams, “The emotional side of software developers in JIRA,”
in 13th Working Conf. on Mining Software Repositories.
ACM, 2016,
pp. 480–483.
[19] G. Destefanis, M. Ortu, D. Bowes, M. Marchesi, and R. Tonelli, “On
measuring affects of github issues’ commenters,” in Proceedings of
the 3rd International Workshop on Emotion Awareness in Software
Engineering, ser. SEmotion ’18.
ACM, 2018, pp. 14–19.
[20] M. M¨antyl¨a, B. Adams, G. Destefanis, D. Graziotin, and M. Ortu,
“Mining valence, arousal, and dominance: Possibilities for detecting
burnout and productivity?” in 13th Int. Conf. on Mining Software
Repositories.
ACM, 2016, pp. 247–258.
[21] D. Graziotin, F. Fagerholm, X. Wang, and P. Abrahamsson, “What
happens when software developers are (un)happy,” Journal of Systems
and Software, vol. 140, pp. 32–47, 2018.
[22] M. Rath, P. Rempel, and P. M¨ader, “The IlmSeven dataset,” in 25th Int.
Requirements Engineering Conf., 2017, pp. 516–519.
[23] S. Nystedt and C. Sandros, “Software complexity and project perfor-
mance,” Master’s thesis, University of Gothenburg, 1999.
[24] M. A.-M. Yahya Tashtoush and B. Arkok, “The correlation among
software complexity metrics with case study,” International Journal of
Advanced Computer Research, vol. 4, pp. 414–419, 2014.
[25] “Common risks in agile projects and how to deal with them,” 2021,
retrieved: 06/2022. [Online]. Available: https://www.gratasoftware.com/
common-risks-agile-projects-deal/
25
Copyright (c) IARIA, 2023.     ISBN:  978-1-61208-997-3
ICSEA 2022 : The Seventeenth International Conference on Software Engineering Advances

