Re-Planning of Bus Timetable Based on Route Search Log to Get on Now 
Toshihiko Sasama†‡, Bhattacherjee Rupali†, Takao Kawamura†‡, Kazunori Sugahara†‡ 
†Graduate School of Sustainability Science,  
‡Cross-informatics Research Center, 
Tottori University 
4-101 Tottori City, Tottori 680-8552, Japan 
e-mail: sasama@tottori-u.ac.jp, m19j4063h@edu.tottori-u.ac.jp, kawamura@tottori-u.ac.jp, sugahara@tottori-u.ac.jp 
 
 
Abstract—There are many web services developed for public 
transport recently. We developed the "Busnet" in 2006, which 
is a path planning system for route buses and trains in Tottori 
prefecture, Japan. This system search includes about 8,500 bus 
stops and stations and about 1,000 route search requests per 
day. These route searches of recent years show that people 
used the Busnet for searching "Now". As smartphone users 
increased, make plan for tomorrows is in a minority, and route 
search results have a lot of waiting time for riding because the 
number of bus is small. Then we get the direct data of waiting 
time from this search log. In this paper, for reducing these 
waiting times, we consider the possibility to propose a plan to 
remake bus timetable that mean to shift departure time of each 
bus, from analysis of this daily route search log. As a result, to 
shift median value of each bus’s waiting times reduced average 
of waiting times by 5 minutes, otherwise, results in some 
conditions using Genetic Algorithm (GA) are reduced or 
increased by few minutes. 
Keywords-Busnet; route search; log analysis; optimization; 
genetic algorithm. 
I. 
 INTRODUCTION 
Public transport systems are important for people who do 
not have a car, such as children and old people. However, in 
rural area, bus services and trains become unprofitable and as 
a result some lines are abolished or the number of buses 
decreased. This causes inconvenience and no one use buses, 
making it further unprofitable. For these reasons, we need to 
improve the convenience of using buses and stop the decline 
of bus usage. 
The “Busnet” is a path planning web service system for 
buses and trains in Tottori prefecture, Japan for improving  
convenience [1]. It collaborates with bus companies and has 
some feature functions. One function is the Global 
Positioning System (GPS) tracing [2]. Each bus driver has a 
smartphone and enters a route-ID that is specified by each 
bus company when starts running on the route. A 
smartphone sends latitude and longitude using browser and 
JavaScript code to the server, and the Busnet plots real time 
bus positions on map web pages. From bus timetable 
information and nearest bus stop information, this system 
calculates delays of buses every minute and provides this 
information to the end users. Other functions are to generate 
index for route search to shorten search time, to mount a 
touch screen computer terminal in front of the station for 
visitors to introduce our service and try it out. 
The last function of this system is the web view for 
smartphones. In the first place we generate only character 
(no-image and no-Cascading Style Sheets (CSS)) Hyper Text 
Markup Language (HTML) to access from old mobile 
phones. As android phone becomes popular, we generate and 
distribute search tools of android application [3][4]. However, 
due to performance improvements of smartphones and 
development of JavaScript and CSS library, we drop android 
only application, and rebuild web pages that can be used on 
any computer and mobile Operating System (OS) using 
responsive web design. From this system log, most users 
access from smartphones, and in many searched requests 
“departure time” was set to the current time. This can be 
interpreted as meaning users searching on their smartphone 
for the next arriving bus, in other words, that is the log of 
waiting time to get on. Previously scheduling was based on 
indirect data, such as ride number survey or questionnaire. In 
this paper, based on these actual usage data, to reduce 
waiting time we propose time shift plan of each bus. If one 
bus schedule shifts forward to reduce some user's waiting 
time, other users will miss the bus and need to wait for the 
next bus, and this causes the need to shift the next bus in 
order to reduce waiting time of these users. In some cases, it 
is better that the previous bus schedule shift backwards so 
passengers get on early without changing the schedule of the 
following bus. To optimize such complex combinations, we 
try to use Genetic Algorithm (GA). 
The rest of this paper is organized as follows. Section II 
describes the analysis results of the recent route search log. 
Section III describes the proposal re-planning of bus 
schedule using the result presented in Section II. Finally, 
Section IV draws the conclusion and acknowledgement. 
II. 
STATISTICAL DATA OF ROUTE SEARCH LOG 
Some results of this system’s log analysis were reported 
at academic workshop. From route search log we found 
some trends, for example, tourists use it to make plans ahead 
of time, and local people use it for daily routine. Moreover, 
most users, about 60%, are smartphone users, not desktop 
PC and notebook PC. In many cases, about 90%, departure 
and destination search parameters are bus stops and some 
landmark, which are probably used by tourists. One can set 
latitude and longitude as departure or destination in place of 
a landmark, however these are rare cases. So, one common 
usage for this system users is to check departure time (= 
waiting time) using a smartphone while heading to the target 
196
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-752-8
ICSEA 2019 : The Fourteenth International Conference on Software Engineering Advances

bus stop. In rural areas, it is normal the number of buses is 
1/hour, and the average of waiting time to get on the bus is 
about 15 minutes. 
III. 
TIME SHIFT OF BUS SCHEDULE 
In some cases, this system shows transfer routes. To 
simplify the problem, we consider the first transfer landmark 
as destination in this experiment and consider the request 
that get on near time from near bus stop. 
Fig.1 shows each day’s average waiting time of 
2019/9/2(Mon) ~ 9/4(Wed) that is labeled "base". It used 
cleaned logs of smartphones access only, searching from 
current time ±60 minutes, a bus waiting time of 60 minutes 
or less, fixed departure is a bus stop, and destination is a bus 
stop without a stopover (it is not a tourist spot, and not a 
landmark after transfer). Three columns of Table. 1 show the 
number of logs when cleaned under the above conditions. 
For example, on 9/2, 867 requests are arrived totally to the 
system and the system showed the resultant routes to each 
request. 593 requests in total requests are from mobile phone 
users and as shown in Colum (3') 474 busses are examined in 
this work. These 474 busses are chosen to have same 
departure and destination bus stops as the resultant route and 
to have around 60 minutes departure time. Here, the length 
of the gene in GA search method can be set to 474. A code 
number of each gene corresponds shifting departure time of 
each bus. By using GA method, the proposed system tried to 
find the optimum departure time with the probability of the 
existence of multiple users on the same bus is about 50%. It 
means half buses can be scheduled thinking only one user in 
a plan, and half buses need shared scheduling. 
In Fig.1, labeled “median” shows the set shift time to 
waiting time’s median value of each bus. When nobody gets 
on it, we set shift time to 0. Waiting time’s average is under 
6 minutes. It is the best in this figure. Situations of others are 
as follows. GA(15): a code range is ±15 minutes, a mutation 
rate is 0.1%, a population size is 10, a generation limit is 100, 
used alternating swap method and discrete generation model, 
and in fitness evaluation, max waiting time limited to 60 
minutes, and when no bus exists to get on is evaluated as this 
limited max, too. GA(60): same parameters of GA(15) but a 
code range is ±60 minutes, a population size 50, and a 
generation limit is 500. GA(max): same parameters of 
GA(15) but a code range is -1 * max waiting time of that bus 
~ 30 minutes. It is better than GA(15) or GA(60). GA(15) 
and GA(60) are worse than “base”. 
From results of GA(15) and GA(60), changing a 
population size and a generation limit are not expected to 
have effects. From other results adjusting a code range is 
expected to have effects. 
IV. 
CONCLUSION 
In this paper, we selected route search log of web service 
that a user wants to get on instantly from some bus stop 
using a smartphone, and we defined it as real waiting time of 
bus users. Based on it, we proposed new service timetable 
with shifting departure time according to the GA outputs 
which makes users convenient with small waiting times. On  
TABLE I.  
NUMBER OF EXTRACTED LOGS 
Date 
(1) 
Search 
count 
(2) 
Search 
from 
mobile 
(3) 
Search 
forward in 
60min 
(Fitness 
evaluation) 
(3’) 
Bus 
count 
around 
time 
(Genes 
length) 
9/2 
867 
593 
242 
474 
9/3 
782 
463 
207 
442 
9/4 
2097 
490 
250 
461 
 
Figure 1.  Waiting time’s average and standard deviation. 
one day data sets, these were real and small data sets, the set 
shift time to waiting time's median reduced the average to 5 
minutes, and GA optimizations were worked in some code 
patterns, and were unusable in some cases. 
In future work, we need to evaluate large data sets, such as 
weeks or months that have transfers, many code patterns, 
analysis of complex combination, and other machine 
learning optimizations such as neural networks. 
ACKNOWLEDGMENT 
This work was supported by JSPS KAKENHI Grant 
Numbers JP17K01256, JP17K06600.  
REFERENCES 
[1] Nihon Trip LLP, Busnet. [Onnline]. Available from:  
http://ikisaki.jp, 2006 [retrieved: 10, 2019] 
[2] M. Ito, T. Kawamura, and K. Sugahara, “Development of an 
Automatic Vehicle Location System Using Smartphones,” 
IEICE Trans. Japan, vol. J96-D, no 10, pp.2327-2339, 2013. 
[3] H. Shibata, M. Ito, T. Kawamura, and K. Sugahara, 
“Promotion of the Use of Public Transport with Social Media 
on a Mobile Application,” Proceedings of the 10th Asia 
Pacific Conference on Conputer Human Interaction (APCHI 
2012), pp. 743-744, 2013. 
[4] M. Taketa, M. Ito, T. Kawamura, and K. Sugahara, 
“Development of Optimized User Interface of Public Transit 
Navigator for a Smartphone,” International Journal of 
Computer, Electrical, Automation, Control and Information 
Engineering, vol. 5, no. 11, pp. 1342-1346, 2011. 
197
Copyright (c) IARIA, 2019.     ISBN:  978-1-61208-752-8
ICSEA 2019 : The Fourteenth International Conference on Software Engineering Advances

