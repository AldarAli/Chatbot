 
 
Distributed Control Plane Optimization in SDN-Fog VANET 
Eugen Borcoci, Tudor Ambarus, Marius Vochin  
University POLITEHNICA of Bucharest - UPB 
Bucharest, Romania 
Emails: eugen.borcoci@elcom.pub.ro, tudorambarus@yahoo.com, marius.vochin@upb.ro 
Abstract — Vehicular Ad-hoc Networks (VANETs) migrate 
today towards emergent Internet of Vehicles (IoV), which 
promises advanced commercial and technical capabilities. IoV 
can be supported by other novel technologies like Cloud/Fog 
computing, Software Defined Networking (SDN) and Network 
Function Virtualization (NFV). However, a challenge in terms 
of cooperation is related to the distributed characteristic of IoV 
and logical centralization concept in SDN. A physically 
distributed SDN control plane could be a solution. This paper 
is a preliminary work proposing an IoV Fog-based 
architecture and a distributed SDN control plane. A specific 
problem is solved, to optimize the geographic placement of the 
SDN 
controllers 
based 
on 
multi-criteria 
optimization 
algorithms. 
Keywords — VANET; IoV; Software Defined Networking; 
Multi-criteria optimizations; Controller placement.  
I. 
INTRODUCTION 
The number of vehicles in the world has constantly 
increased, leading today to major traffic problems and 
associated events, including car accidents [1]. Specific 
technologies like Dedicated Short-Range Communications 
(DSRC) and architectural stacks like Wireless Access in 
Vehicular Environments (WAVE) have been developed for 
the emerging market of Intelligent Transport System (ITS) 
[1][2]. The specifications defined by IEEE802.11p and 
IEEE 1609 represent the most mature set of standards for 
DSRC/WAVE networks [2]. The traditional ITS has 
continuously evolved, including vehicular communication: 
vehicle to vehicle (V2V), vehicle to road (V2R), or more 
general vehicle to Infrastructure (V2I).  These networks are 
denoted as Vehicular Ad-hoc Networks (VANETs). The 
basic components of a VANET are the On-Board-Unit 
(OBU) placed in the vehicle and Road-Side–Unit (RSU) 
placed on the roads. Naturally, VANETs have a distributed 
character both in data and control plane. 
However, VANETs have limitations; despite their good 
potential to contribute in solving safety and traffic 
management problems with low operational cost, they did 
not attract a very high commercial interest [3]. The 
limitations are related to pure ad-hoc network architecture 
(in V2V case), unreliable Internet service, incompatibility 
with 
personal 
devices, 
non-cooperation 
with 
cloud 
computing, low accuracy of the services, and operational 
network dependency. Even for vehicular traffic management 
task, the current VANETs are not capable to meet the future 
needs. On the other hand, due to the high number of 
vehicles, the traffic congestion will increase significantly in 
coming years. It is estimated that a few minutes saved, 
experienced in the vehicular traffic, would globally produce 
revenues of tens of billions Euro per year by 2030 [4]. 
Therefore, extending the VANET architecture is indeed a 
must. 
A novel and emergent solution to the above issues, is the 
Internet of Vehicles (IoV), which is seen as a global span 
network of a vehicle network [4][5]. At network edges, the 
IoV will be enabled by Wireless/Radio Access Technologies 
(WAT/RAT) interconnecting OBUs to RSUs, while 
traditional Internet and other heterogeneous networks will 
be used for wide area. The IoV can be considered as a 
special case of the Internet of Things [6], where the “things” 
are either vehicles or their subsystems. The IoV objectives 
include vehicles driving (this is a basic goal - in VANET), 
but also others -  like vehicle traffic management in urban or 
country areas, automobile production, repair and vehicle 
insurance, road infrastructure construction and repair, 
logistics and transportation, etc. Generally, it is estimated 
that smart-cities systems will include a strong IoV 
component.  
Several and recent strong technologies can contribute in a 
cooperating style to IoV development. 
Cloud Computing (CC) offers services to large 
communities 
of 
users 
(processing 
power, 
storage, 
networking) Software/ Platform/ Infrastructure as-a-Service 
(SaaS/PaaS/IaaS/etc.) for a large variety of applications. 
However, CC relies on centralized computing resources 
grouped in large data centers, which is not fully suitable for 
some environments (e.g., mobile, vehicular, VANET, IoT), 
where real-time actions and fast system response are 
essential. Consequently, a new Fog or Edge Computing [7] 
has been recently proposed, to extend the CC paradigm, by 
bringing cloud-like services to the network edge, i.e., in the 
proximity of the users.  
Software-defined networking (SDN) [8] separates the 
control plane (CPl) and data (forwarding) plane (DPl), thus 
enabling flexible and programmable external control of data 
flows through logical software entities, i.e., vendor-neutral 
controllers. This is a powerful approach, of high interest for 
operators and industry. The SDN centralized up-to-date 
logical view upon the network, facilitates a flexible network 
management, allowing on-the-fly modification of the 
network elements behavior.  
124
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
The recently proposed Network Function Virtualization 
(NFV) [9], promises to highly increase the networks 
flexibility, by virtualizing many network functions and 
deploying 
them 
into 
software 
packages. 
Dedicated 
Virtualized Network Functions (VNF) can be defined, then 
dynamically created/destroyed, assembled and chained to 
implement legacy or novel services. NFV can cooperate 
with SDN in defining new flexible and powerful 
architectures. This approach is also attractive for IoV. 
The large communities of users/terminal devices in IoT 
and IoV need powerful and scalable Radio Access 
Technologies (RAT). The 4G and the emergent 5G, based 
on cloud computing architectures (Cloud Radio Access 
Network- CRAN) are significant candidates for constructing 
the IoV access infrastructure [10][11]. 
While IoV is estimated to become a significant progress 
versus VANET, many IoV advanced features and 
integration with the above technologies (CC, SDN, NFV) 
can be seen, as well, as challenges and open research issues. 
In particular, applying SDN control in VANET/IoV has the 
challenge to harmonize centralization concept of the SDN 
control with the native distributed VANET character. A 
hierarchical 
control 
solution 
with 
several 
regional 
controllers can be considered.  
This paper contains a preliminary effort, first, to define 
an SDN - distributed controlled IoV architecture. Then, an 
optimization is performed, by placing the SDN controllers 
in optimal locations, while following multiple criteria of 
interest in VANET. Such a multiple controller solution can 
also potentially solve the horizontal SDN scalability 
problems [12]. In the proposed architecture, the access 
points (RSUs or 3G/4G base stations) can be considered as 
SDN forwarder nodes. The SDN controllers can be co-
located to some of these access points. The specific design 
problems are: What is the optimal number and placement of 
the controllers? How to allocate the forwarder nodes to 
controllers? 
The controller placement problem is a NP-hard one [13]. 
Different solutions can be used, with specific optimization 
criteria, depending on the network context and scenarios. 
Frequently, several criteria are of interest, e.g.: (a) to 
maximize the controller-forwarder or inter-controller 
communication throughput, and/or reduce the latency of this 
communication; (b) limit the controller overload (load 
imbalance) by avoiding too many forwarders per controller; 
(c) find an optimum controllers’ placement and forwarder-
to-controller allocation, aiming to achieve a fast recovery 
after failures (controllers, links, nodes). Therefore, a multi-
criteria algorithm should be naturally considered, capable to 
provide a global optimization. 
The paper is organized as follows. Section II is an 
overview of related work. Section III introduces the SDN-
based architecture of VANET. Section IV is dedicated to the 
SDN control plane optimization based on multi-criteria 
algorithms. Section V presents conclusions and future work. 
II. 
SDN CONTROLLED VANET - RELATED WORK  
This section shortly presents related work dedicated to 
VANET/IoV with SDN control. 
Kaiwartya et. al. [4] presents an overview on IoV 
architectures, network model and challenges. The IoV 
includes an enriched set of vehicular communications in 
addition to V2V, V2R/V2I, i.e., Vehicle-to-Personal devices 
(V2P) and Vehicle-to-Sensors (V2S). Each IoV particular 
communication type can be enabled using a different WAT, 
e.g., IEEE WAVE for V2V and V2R, Wi-Fi and 4G/LTE for 
V2I, CarPlay/NCF (Near Field Communications) for V2P 
and Wi-Fi for V2S. The architecture can include vehicles and 
Road Side Units (RSU), but also other communication 
devices. Embedding such a large range of devices makes IoV 
more complex, (compared to VANET), but it has the 
important advantage to be strongly market oriented. The 
layered architectural stack includes a coordination layer at 
network level, where SDN/NFV technologies may be 
candidates. Horizontally, the architecture is a multiple-plane 
one in which a management plane can assure the overall 
management and orchestration of the assembly. The 
optimization of the control plane is not in the scope of this 
work. 
Y. Lu et al. [14] shows that SDN, if applied to VANET, 
can provide flexibility, programmability and support for new 
services. An SDN-based VANET architecture and its 
operational mode to adapt SDN concepts to VANET 
environments are proposed. The architectural components 
are:  SDN controller, SDN wireless nodes and SDN RSUs. 
The SDN controller is a single entity (logical central 
intelligence of the SDN based VANET) which performs the 
overall control of the system. The SDN wireless nodes are 
vehicles, seen as data plane elements (forwarders) under 
SDN control. The SDN RSUs are also treated as data plane 
elements, but stationary. Simulation is performed to 
demonstrate the benefits of the approach, while considering 
some specific use cases (e.g., routing). However, the variant 
of several SDN controllers is not considered. 
A recent work [15] (K. Zeng et al.) proposes a general 
architecture comprising Cloud-RAN technology, to realize a 
soft-defined networking system, able to support the dynamic 
nature of future heterogeneous VANET functions and 
various applications. A multi-layer Cloud-RAN multi-
domain architecture is introduced, where the resources can 
be exploited as needed for vehicle users. Virtualization (for 
flexibility) and hierarchical cloud computing (remote, local 
and micro clouds) are considered for structuring the system. 
The high-level design of a soft-defined HetVNET is 
presented in detail. A hierarchy (two levels) of SDN control 
is proposed (one primary controller and several secondary 
controllers exist; each of the latter controls a given service 
area). The problem of optimizing the placement of the 
secondary controller set is not treated. 
Truong et al. [16] proposes a new promising VANET 
architecture called FSDN, which combines SDN and Fog 
computing; the latter additionally brings capabilities for 
125
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
delay-sensitive and location-awareness services. The 
solution covers V2V, V2I and Vehicle-to-Base Station 
communications. 
The 
SDN 
components 
are: 
SDN 
Controller (it controls the overall network behavior via  
OpenFlow – southbound interfaces; it also plays as Fog 
Orchestration and Resource Management for the Fog); SDN 
Wireless Nodes (vehicles acting as the end-users and 
forwarding elements, equipped with OBU); SDN RSU 
(controlled by the SDN Controller; it is also a Fog device); 
SDN RSU Controller (RSUC) (controlled by the SDN 
controller; at its turn it controls a cluster of RSUs  connected 
to a RSUC through broadband connections before accessing 
to the SDN Controller). The RSUC can forward data, but 
also can store local road system information and perform 
emergency services. From Fog perspective RSUCs are fog 
devices); Cellular Base Station (BS) (these BSs perform 
traditional functions but they are SDN controlled via 
OpenFlow and are additionally capable to offer Fog 
services). The problem of distributed SDN control is not 
discussed in this paper. 
Kai et al. [17] presents an overview of Fog – SDN 
computing for vehicular networks, considering several 
scenarios and issues. It is shown that a mixed architecture 
combining the SDN centralized control with edge cloud 
capabilities of Fog can be powerful and flexible enough to 
serve future needs of IoV. No optimization of the SDN 
control plane is treated. 
In a recent study [18], the Fog idea is further extended by 
utilizing vehicles as infrastructures for communication and 
computation, named Vehicular Fog Computing (VFC). It 
uses a collaborative multitude of end-user clients or near-
user edge devices, to carry out communication and 
computation, based on better utilization of individual 
communication and computational resources of each vehicle. 
The problem of SDN controller placement is not quite 
new. It has been studied in various works [9][18-22], but 
only for fixed SDN-controlled  networks, usually running 
single or multi-criteria optimization algorithms. The specific 
contribution in this paper is to apply such methodologies to 
the specific need and architecture of SDN-VANET networks 
where special optimization criteria can be defined. 
III. 
SDN CONTROLLED  VANET ARCHITECTURE 
 This section will introduce the architecture of an IoV 
heterogeneous network including SDN control and Fog 
capabilities. It is actually a modification and horizontal 
extension of the architecture proposed in [16]. 
The architectural elements considered are described 
below. The Data plane includes mobile units (vehicles) 
equipped with OBUs; advanced RSUs, which could have 
more resources (computing, storage) as to play also Fog role 
(F-RSU) and regular RSU like in traditional VANETs; base 
stations (BS) of WiMAX/3G/4G-LTE type. 
Note that, given the Fog capabilities of some RSUs, it is 
useful to have a fixed network (it is a partial mesh) with 
broadband links interconnecting the RSUs. This will allow a 
cooperative RSUs functioning of the Fog infrastructure. 
From the SDN point of view, all the Data plane are (or could 
be seen as) forwarding nodes. The data plane can be 
geographically organized in several service areas, each one 
governed by a SDN controller. 
  
       
 
V2V 
Cloud/Internet 
V2I 
F-RSU 
V2R 
V2V- e.g. Wave(802.11p)/LTE(D2D) 
F-BS 
Service 
area  
V2R- e.g. Wave(802.11p) 
V2I- e.g. WiMAX/3G/4G-LTE 
V2V 
F-RSU 
SDN Control Plane 
Broadband 
communication 
RSU 
Service 
area  
Service 
area  
Service 
area  
Service 
area  
P-SDNC 
Gateway 
S-SDNC 
 
Figure 1. Generic IoV system architecture in study 
F-BS - Fog-capable Base Station; F-RSU Fog-capable Remote Side Unit; P-SDNC- Primary SDN Controller; 
S-SDNC Secondary-SDN Controller; D2D- device to device communication 
 
126
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
The SDN Control plane is organized on two levels.  The 
primary SDN controller (P-SDNC) is the central element 
controlling the behavior of the network as a whole. Several 
service areas can exist and the Control plane should cover all 
these. In a simplified approach, it is assumed that a regional 
secondary SDN controller (S-SDNC) exists in each area and 
it is responsible of its functioning. The S-SDNC can also 
contain the resource management function of the Fog 
infrastructure (see RSUC entity in the previous section).  
The P-SDNC is logically connected to each S-SDNC via 
the Control plane overlay or physical links. For the sake of 
simplicity, Figure 1 does not detail the physical infrastructure 
supporting the Control plane communications. The south 
SDN interfaces between the controllers and the lower level 
can be supported by the OpenFlow protocol or a similar one. 
IV. 
IOV SDN CONTROL PLANE OPTIMIZATION  
This section develops a method to optimize the Control 
plane with regard of SDN controllers’ placement.  
A. Problem statement 
The following assumptions are considered valid. 
a. 
the whole access IoV geographic area is divided into 
several non-overlapping service areas. 
b. each service area is covered by forwarders (RSUs 
and/or BSs) placed in fixed locations (the placement 
decision of the RSUs/BSs in some locations is out of 
scope of this study). 
c. 
the network of forwarders in a service area can be 
represented by an abstract overlay graph whose 
properties are known by the optimization algorithm. 
d. each service area can be controlled by one or, 
generally by several S-SDN controller(s) (the 
general case can provide a solution for a large 
service area with high number of RSUs).   
e. 
the S-SDNCs will be co-located with some of the 
forwarders. 
f. 
any SDNCs could be implemented as being 1-to-1 
associated with a physical machine/node, or, several 
virtual controllers (based on NFV techniques) can 
exist in the same physical location. In the latter case 
the equivalent graph will have groups of nodes close 
together; however, the optimization solution would 
still work.  
The optimization has two phases: 
 (1) given a set of criteria and a service area (region), 
what is the optimum placement of the S-SDNCs? This 
problem should be solved for each service area. The 
associated computation to run an algorithm can be performed 
in a centralized manner, e.g., in the P-SDNC. 
(2) given the placement of the S-SDNCs and their 
equivalent higher level (overall) graph, what is the optimum 
placement of the unique P-SDNC, considering that it could 
be co-located to one node of this graph? 
An early work of Heller et al. [13] has shown that the 
SDN controller placement problem is not new. If the metric 
is latency, then one gets the facility or warehouse location 
problem solved, e.g., by using Mixed Integer Linear 
Program (MILP) tools. Heller finds optimal solutions for 
realistic network instances, in failure-free scenarios, by 
analyzing 
the 
entire 
solution 
space, 
with 
off-line 
computations. Other studies [18–21] extended the approach, 
by considering several events like controller failures, 
network links/paths/nodes failures, controller overload (load 
imbalance), or Inter-Controller Latency, multi-path use 
cases, etc. The important thing is that the problem is a multi-
criteria one, i.e., no unique solution is available satisfying all 
criteria. 
Note that this work does not propose any new algorithms 
to optimize the controller placement for a given individual 
metric, but uses some previous multi-criteria overall 
optimization algorithm to obtain a trade-off solution in the 
novel IoV context. 
B. Examples of metrics used for optimization 
This sub-section is a very short presentation of a few 
typical metrics and optimization algorithms for controller 
placement.  Several and more detailed examples are given in 
[23].  
The network (of forwarders) in a service area is 
abstracted by an undirected graph G(V, E), where V,E are 
the sets of nodes and edges, respectively and n=|V| is the 
number of nodes. The edges weights represent an additive 
metric (e.g., propagation latency). The controllers will be co-
located to some network nodes. Note that the number of 
controllers is much lower than the number of forwarders. 
After algorithm run, the controllers will be placed in some 
locations of forwarders. We denote a particular placement Ci 
of controllers, where Ci  V and |Ci| ≤|V|. The number of 
controllers is limited to |Ci|= k for any particular placement 
Ci. The set of all possible placements is denoted by C = {C1, 
C2 …} 
An example of a simple metric is d(v, c): shortest path 
distance from a forwarder node vV to a controller cV. 
One can define, for a given placement Ci: 
Worst_case_latency:  


d v c
L
v V c Ci
wc
,
min
max




Average_latency:  





v V
c Ci
i
avg
d v c
n
C
L
( , )
min
1
)
(

The algorithm should find a placement Copt, where either 
average latency or the worst case latency is minimized.  
Some comments are valuable to be given on this simple 
metric: 
a. in IoV context, the latencies are dynamically changing, 
so the specific values used in (1) or (2) are actually 
some estimations (if static approach is applied) or 
otherwise they should be measured and averaged by a 
monitoring system and values delivered to the P-
127
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
SDNC. However, the process of obtaining the latency 
values is out of scope of this work. 
b. the assignment of a RSU (seen as a SDN forwarder) to 
a given S-SDNC is based on selecting the closest S-
SDNC to that RSU; so, there is no upper limit on the 
number of v nodes assigned to a controller; too many 
forwarders to be controlled by a given controller can 
exist, especially in large networks. 
c. The placement solution does not consider any 
reliability features. 
 
To solve the previous problem b., an additional criterion 
can be defined, i.e., to assure a good balance of the node-to-
controller distribution. A metric Ib(Ci) will measure the 
degree of imbalance of a given placement Ci as the difference 
between the maximum and minimum number of forwarders 
nodes assigned to a controller.  
 
}
min
{max
)
(
c
c C
c
c C
i
n
n
C
Ib
i
i





where 
cn  is the number of RSUs assigned to a controller c. 
An optimization should find that placement which minimizes 
the expression (3). 
Another criterion useful could be the estimated capacity 
(max. bandwidth) between each pair of nodes in the graph 
(let it be B) and in the equation (1) or (2) the latency could 
be replaced bay the value 1/B for each overlay link. 
In a multi-controller SDN environment, the inter-
controller latency (Icl) has impact on the response time for 
the inter-controller mutual updating. Therefore, this is an 
important metric. For a given placement Ci, the Icl can be 
given by the maximum latency between two controllers: 

d(c , c )
Icl(C )
n
k
i
   = max 

Note that the attempt to minimize (4) will lead to a 
placement with controllers close to each other. However, this 
can increase the forwarder-to-controller distance (latency) 
given by (1) and (2). This is an example showing that a 
trade-off is necessary, thus justifying the necessity to apply 
some multi-criteria optimization algorithms, e.g., like Pareto 
frontier - based ones [22][23]. 
Various other metrics can be considered e.g., reliability- 
related, which consider node/link failures [20][21]. Other 
studies exploit the possible multiple paths between a 
forwarder node and a controller [22], hoping to reduce the 
frequency of controller-less events, in cases of failures of 
nodes/links. The goal in this case is to maximize connectivity 
between forwarding nodes and controller instances.  
C. Overall optimization algorithm 
Several optimization algorithms can be applied for the 
controller placement problem [13][19-22]. This paper uses a 
simple but powerful approach which is called multi-criteria 
decision algorithm (MCDA) [24] in a variant reference level 
(RL) decision algorithm, already used in [23] for a similar 
problem. The MCDA-RL selects the optimal solution based 
on normalized values of different criteria (metrics). Details 
on how to apply the MCDA-RL are given in the work [23]. 
Here, a similar approach is performed for the SDN controlled 
IoV. 
The control plane optimization contains two phases, each 
composed of several steps which are described below. 
 
Phase 
A. 
Optimization 
for 
S-SDNC 
controllers’ 
placement. 
a. 
The overall IoV geographic region (access part 
network) is conveniently divided in non-overlapping 
service areas, based on various criteria (commercial/ 
business, geographic, administrative, physical radio 
propagation criteria, vehicle traffic estimation data, 
etc.) 
b. For each service area, the forwarder nodes (RSU, 
BS, gateway) placement is decided, based on criteria 
similar as in step a. An abstracted connectivity graph 
between RSUs should be derived. Note that not all 
RSUs should be considered as nodes in the abstract 
graph; usually the RSU-fog nodes or nodes having a 
minimum of resources (including electrical power) 
should be selected. Therefore, the branches of the 
graph might represent physical or overlay links. 
Some RSUs will be collocated with S-SDNCs. 
c. 
The criteria of interest to be target of the MCDA-RL 
optimization are selected (e.g., controller-node 
latency, imbalance of a placement, inter-controller 
latency, etc.). These criteria will be mapped to the 
decision variables in MCDA-RL. If needed, the 
criteria can be assigned different priorities and the 
algorithm will consider them.  
d. A reasonable number (heuristically decided) of S-
SDNC controllers are supposed to be defined for 
each service area. 
e. 
Repeat for each service area:  
{e.1: For the parameters of interest, one should 
compute the values of the metrics for all possible 
controller placements, using specialized single-
criterion algorithms and metrics like those defined in 
formulas like (1) - (4). This step will produce the set 
of candidate solutions (i.e., S-SDNC placement 
instances). This procedure could be time consuming 
(depending on network size) and therefore, could be 
performed off-line as suggested in [13].   
e.2: Run the steps of the MCDA-RL (the details 
are shown in [23] and are not repeated here).  The 
algorithm will provide as result the best trade-off 
solution (in Pareto [24] sense) for the S-SDNCs 
placement for this service area}. 
 
Phase B. Optimization for P-SDNC controller placement. 
Now the placement of the S-SDNCs is known; therefore, 
a connectivity graph linking the set of the S-SDNCs can be 
derived. Then the placement of the Primary SDNc should be 
computed in optimal sense by applying steps c.  d. and e. of 
the Phase A. 
 
128
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
D.   Numerical example 
A simple example illustrates the MCDA flexibility. 
Figure 2 shows a connectivity graph between RSUs, BS, etc., 
abstracted as vertices v1, ..v6. The numbers on the graph 
branches represent (generically) an additive metric (e.g., 
latency). Suppose that for this service area it is wanted to co-
locate two S-SDNC controllers with some nodes v. 
Suppose that for this network the metrics of interest and 
decision variables are on: d1: Average latency (1); d2: worst 
latency (2) (failure-free case); d3: Inter-controller latency 
(4). We denote an S-SDNC controller with c1 or c2. The 
allocation of the forwarders to controller will be based in this 
example on shortest-path from forwarder to controller. 
Several candidates for placement solutions can be 
considered, e.g.: 
C1= { [c1_in_v5 (v5, v2, v4)], 
[c2_in_v6(v6, v1, v3)]} 
C2= { [c1_in_v4 (v4,v2, v5)], 
[c2_in_v6(v6, v1, v3,)]} 
C3= { [c1_in_v5 (v5, v1, v2, v4)], [c2_in_v3(v3, v6)]} 
C4= { [c1_in_v3 (v3,v2)], 
[c2_in_v6(v6, v1, v4, v5,)]} 
 
1. Case 1. The decision variables have equal priorities 
(p) i.e., p1=1, p2=1, p3=1. The values of the metrics are 
computed using equations (1), (2) and respectively (4) for 
each placement: C1, ..C4. The final result after running 
MCDA is: C1 = the best placement. In Figure 1, one can see 
that this placement is a good trade-off between node-
controller latency and inter-controller latency. 
2. Case 2. Different priorities are defined: p1=1, p2=0.5, 
p3=1, i.e., the worst case latency d2 has highest priority 
(lower value means higher priority). So, the solution 
minimizing the worst case controller-forwarder latency (this 
criterion has high priority) is searched by the MCDA.  
Finally, it is found after running MCDA, that C2= the best 
placement. Figure 2 shows that worst case latency (node-
controller) is minimized, however the inter-controller latency 
is in this case higher than in solution C1.  
 
 
 
Shortest path  
(e.g., latency)  
from a forwarder node  
to a controller 
v2 
v5  
v1 
v6 
v4 
v3 
3 
2 
1 
4 
2 
3 
4 
5 
6 
5 
2 
v2 
v1 
v6, SDNC2  
v4 
v3 
3 
2 
1 
4 
2 
3 
4 
5 
6 
5 
2 
v2 
v5  
v1 
a 
v3 
3 
2 
1 
4 
2 
3 
4 
5 
6 
5 
2 
v5,SDNC1 
v6, SDNC2  
v4,SDNC1 
Service area k 
Service area k 
c 
b 
Service area k 
C2 
C1 
 
Figure 2. Numerical example of SDNC controller placement in an IoV 
service area 
 
These examples prove how different network operator’s 
policies can bias the algorithm results. 
 
V. CONCLUSIONS AND FUTURE WORK 
This paper presented a work in progress which proposed 
an IoV Fog-based architecture and a distributed SDN control 
plane. The architecture comprises RSUs, BS, geographically 
distributed in non-overlapping service areas which are 
interconnected. Some RSUs are advanced ones, having Fog 
capabilities. The whole infrastructure is controlled by a 
distributed SDN control plane.   
The SDN control plane consists in several controllers 
organized on two hierarchical levels: a unique primary 
controller P-SDNC governing the assembly and several 
secondary S-SDNCs in the service areas. It is supposed that 
S-SDNCs could be collocated to some forwarder nodes 
(RSU, BS). 
Then an optimization method is proposed for the 
geographic placement of the SDN controllers, by applying a 
multi-criteria optimization algorithms (MCDA). Some 
previously developed optimization algorithms have been 
used, but in a novel way adapted to IoV - SDN controlled 
context. 
The optimization method proposed achieves an overall 
optimum (in Pareto frontier sense) and is very simple from 
implementation point of view. In particular, the MCDA-RL 
algorithm can produce a tradeoff (optimum) result, while 
considering several (weighted) criteria, part of them even 
being partially contradictory. The method is general and can 
be applied in various scenarios (including failure-free 
assumption ones or reliability – aware).  
The computations could be performed offline, or even 
online (e.g., in the P-SDNC- which is naturally supposed in 
SDN technology to have knowledge upon its forwarding 
plane network). The S-SDNC placement algorithm could run 
in the P-SDNC, from time to time (or, event-triggered), 
especially if S-SDNCs are implemented as virtual machines 
in some forwarding network nodes, and the set of the active 
virtual machines should be re-defined. This approach will be 
for further study. Future work could deal with validation and 
simulation studies for large network environments (e.g.,   
hundreds or more RSUs).   
Future work will be done to apply the method proposed 
to other metrics, considering multi-path approach for 
forwarder-controller paths. Other area of investigation could 
consider the Fog node placement problem in the IoV access 
network, where similarity with the problem studied here can 
be found. 
ACKNOWLEDGMENTS 
This work has been partially funded by University 
Politehnica of Bucharest, through the “Excellence Research 
Grants” 
Program, 
UPB 
– 
GEX. 
Identifier: 
UPB–
EXCELENȚĂ–2016 Research project Intelligent Navigation 
Assistance 
System, 
Contract 
number 
101/26.09.2016 
(acronym: SIAN). 
129
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

 
 
REFERENCES 
[1] S. Sultan, M. Moath Al-Doori, A.H. Al-Bayatti, and  H.Zedan 
“A comprehensive survey on vehicular Ad Hoc Network”, 
J.of Network and Computer Applications, Jan. 2014, 
https://www.researchgate.net/publication/259520963, 
[Retrieved: December, 2016]. 
[2] Yunxin (Jeff) Li, “An Overview of the DSRC/WAVE 
Technology”, 
https://www.researchgate.net/publication/288643779_An_ove
rview_of_the_DSRCWAVE_technology, 2012, [Retrieved: 
January, 2017]. 
[3] M. Saini, A. Aleleiwi, and A. Saddik, “How close are we to 
realizing a pragmatic VANET solution? A meta-survey'' 
ACM Comput. Surv., vol. 48, no. 2, Art. no. 29, pp.1-36,  
2015.  
[4]   O. Kaiwartya, A.H. Abdullah, Y. Cao, A. Altameem, M. 
Prasad, et.al., “Internet of Vehicles: Motivation, Layered 
Architecture, Network Model, Challenges, and Future 
Aspects”  IEEE Access, Special Section on Future Networks, 
Architectures, Protocols and Applications, Vol. 4, pp.5536-
5372, September 2016. 
[5] Y. Fangchun, W.Shangguang, L. Jinglin,  L. Zhihan, and 
S.Qibo, “An overview of Internet of Vehicles”, China 
Commun., vol. 11, no. 10, pp. 115, October 2014. 
[6] A. Al-Fuqaha,  M.Guizani, M. Mohammadi,M. Aledhari, and 
M.Ayyash,   "Internet of Things: A Survey on Enabling  
Technologies, 
Protocols, 
and 
Applications”, 
 
IEEE 
Communications Surveys &Tutorials Vol. 17, No. 4, pp.2347-
2376, 2015. 
[7] F.Bonomi, R.Milito, J.Zhu, and Sateesh Addepalli, “Fog 
Computing and Its Role in the Internet of Things”, August  
2012, 
http://conferences.sigcomm.org/sigcomm/2012/paper/mcc/p1
3.pdf, [Retrieved: January, 2017]. 
[8] B. N. Astuto, M. Mendonca, X. N. Nguyen, K. Obraczka, and 
T. Turletti, “A Survey of Software-Defined Networking: Past, 
Present, 
and 
Future 
of 
Programmable 
Networks”, 
Communications 
Surveys 
and 
Tutorials, 
IEEE 
Communications Society, (IEEE), 16 (3), pp. 1617 – 1634, 
2014.  
[9] B.Han, V. Gopalakrishnan, L. Ji, and S. Lee,  “Network 
Function Virtualisation: Challenges and Opportunities for 
Innovations”. IEEE Communications Magazine,  pp. 90-97, 
February 2015.  
[10] M. Peng, Y. Li, J. Jiang, J. Li,  and C.Wang,  “Heterogeneous 
cloud radio access networks: a new perspective for enhancing 
spectral 
and 
energy 
efficiencies”, 
IEEE 
Wireless 
Communications, pp.126-135, December 2014.    
[11] M. Peng, S.Yan, K.Zhang, and C.Wang, “Fog Computing 
based Radio Access Networks: Issues and Challenges”, IEEE 
Network, vol. 30, pp.46-53, July/August 2016. 
[12] Benamrane, F., Ben mamoun, M., & Benaini, R. (2015). 
Performances 
of 
OpenFlow-Based 
Software-Defined 
Networks: An overview. Journal of Networks, 10(6), 329–
337. http://doi.org/10.4304/jnw.10.6.329-337 
[13] B. Heller, R. Sherwood, and N. McKeown, “The controller 
placement problem,” in Proc. HotSDN, pp. 7–12, 2012, , 
http://yuba.stanford.edu/~nickm/papers/hot21-heller.pdf, 
[Retrieved: February, 2017]. 
[14] Y.Lu, M.Gerla, R. Gomes, and E. Cerqueira,  “Towards 
software-defined 
VANET: 
Architecture 
and 
services”,  
MedHocNet.2014.6849111, 
https://www.researchgate.net/publication/271472780, 
[Retrieved: January, 2017]. 
[15] K. Zeng, L. Hou, H. Meng, Q. Zheng, N. Lu, et al.,   “Soft-
Defined Heterogeneous Vehicular Network: Architecture and 
Challenges”, IEEE Network, vol. 30,  pp.72-79, July/August 
2016.  
[16] N. N. Truong, G.M.Lee, and Y.Ghamri-Doudane. “Software 
defined networking-based vehicular ad hoc network with fog 
Computing”,  Proceedings of the 2015 IFIP/IEEE 
International Symposium on Integrated Network Management 
(IM’15), May 2015, Ottawa, Canada. Piscataway, NJ, USA: 
IEEE, , pp. 12021207, 2015. 
[17] K.Kai, W.Cong, and L.Tao, "Fog computing for vehicular 
Ad-hoc networks:paradigms, scenarios, and issues", The 
Journal 
of 
China 
Universities 
of 
Posts 
and 
Telecommunications, 
www.sciencedirect.com/science/journal/10058885, 
http://jcupt.bupt.edu.cn, 23(2), pp. 56–65, April 2016, 
[Retrieved: January, 2017]. 
[18] X. Hou, Y.Li, M. Chen, D. Wu, D. Jin, and S. Chen,   “Vehicular 
Fog 
Computing: 
A 
Viewpoint 
of 
Vehicles 
as 
the 
Infrastructures”, IEEE Transactions on Vehicular Technology, 
Vol. 65, No. 6, pp.3860-3873, June 2016. 
[19] H. Yan-nan, W. Wen-dong, G. Xiang-yang, Q. Xi-rong, and 
C. Shi-duan, ”On the placement of controllers in software-
defined networks”, ELSEVIER, Science Direct, vol. 19, 
Suppl.2, 
October 
2012, 
pp. 
92–97, 
http://www.sciencedirect.com/science/article/pii/S100588851
160438X, [retrieved: November, 2016]. 
[20] D. Hock, M. Hartmann, S. Gebert, M. Jarschel, T. Zinner, and 
P. Tran-Gia, “Pareto-Optimal Resilient Controller Placement 
in SDN-based Core Networks,” in ITC, Shanghai, China, 
2013, 
http://ieeexplore.ieee.org/document/6662939/, 
[Retrieved: January, 2017]. 
[21] Y. Hu, W. Wendong, X. Gong, X. Que, and C. Shiduan, 
“Reliability aware controller placement for software-defined 
networks,” in Proc. IM. IEEE,  pp. 672–675, 2013. 
[22] L. Muller, R. Oliveira, M. Luizelli, L. Gaspary, and  M. 
Barcellos,  “Survivor: an Enhanced Controller Placement 
Strategy for Improving SDN Survivability”, IEEE Global 
Comm. Conference (GLOBECOM), December 2014. 
[23] E.Borcoci, R.Badea, S.G.Obreja, and  M.Vochin, “On Multi-
controller Placement Optimization in Software Defined 
Networking -based WANs”, The International Symposium on 
Advances 
in 
Software 
Defined 
Networks 
SOFTNETWORKING 
2015, 
- 
Barcelona, 
Spain, 
http://www.iaria.org/conferences2015/SOFTNETWORKING.
html, [Retrieved: January, 2017]. 
[24] A. P. Wierzbicki, “The use of reference objectives in 
multiobjective optimization”. Lecture Notes in Economics 
and Mathematical Systems, vol. 177. Springer-Verlag, pp. 
468–486, 1979. 
 
 
130
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-546-3
ICN 2017 : The Sixteenth International Conference on Networks (includes SOFTNETWORKING 2017)

