ADPT++ 
Technology-Based Combined Strategy for Problem Solving 
Claudia Martínez-Araneda, Marcia Muñoz 
Computer Science Department 
Universidad Católica de la Santísima Concepción 
Concepción, Chile 
e-mail: {cmartinez, marciam}@ucsc.cl 
Matilde Basso-Aránguiz, Claudio Oyarzo-Vera 
Civil Engineering Department 
Universidad Católica de la Santísima Concepción 
Concepción, Chile 
e-mail: {mbasso, coyarzov}@ucsc.cl
 
 
Abstract — The growth in student enrollment in the 
engineering programs, low student motivation and poor 
passing rates in first years' students in a Computer Science 
undergraduate program have demanded the incorporation of 
active learning strategies into the classroom in order to 
improve problem solving skills. This article describes a 
proposal and preliminary results of incorporating technology-
based teaching strategies. The Analysis-Design-Programming-
Testing (ADPT) teaching strategy was applied in the 
classroom, combined with a Flipped Classroom (FC) 
methodology. Preliminary results show clear benefits related to 
the availability of support media resources, increased time 
dedicated to solving problems in the classroom, and the 
creation of a collaborative and challenging classroom 
environment. 
Keywords-flipped classroom; ADPT, engineering education. 
I. 
INTRODUCTION  
In the last 10 years, Chile’s social and educational 
context has generated an explosive growth in student 
enrollment in the engineering programs of the Universidad 
Católica de la Santísima Concepción (UCSC). This increase 
in the number of students has required optimizing the use of 
time in the classroom, and dedicating more time to student-
centered activities supervised by an instructor.  
This article presents a learning strategy that combines 
reverse teaching, also known as Flipped Classroom [1], and 
the 
Analysis-Design-Programming-Testing 
technique 
(ADPT) [2]. This teaching approach enables transferring part 
of the learning process to out-of-the-classroom activities by 
the use of videocasts (short videos allocated in a web-based 
platform), which introduce the theory and cognitive 
knowledge associated with the topic under study. In general 
terms, an instructor leads the in-classroom activities focusing 
on practical tasks designed to reinforce the theory and 
generate active and deeper learning in students. 
Besides freeing in-classroom time by transferring the 
theoretical aspects of the course to out-of-classroom 
autonomous work, the use of videocasts allow students to 
recall those theoretical contents whenever and wherever they 
are.  
The 
use 
of 
Information 
and 
Communications 
Technologies (ICTs) and the implementation of practical 
activities increased students’ motivation and commitment to 
the assigned tasks. This new student disposition toward 
learning resulted in improved academic performance.  
The remainder of the article is organized as follows: the 
next section presents the academic context where the 
proposed strategy for problem solving was applied. Section 3 
describes the teaching and learning strategies supporting this 
work, which include Problem Based Learning (PBL), FC and 
ADPT. Section 4 shows a hybrid proposal that combines 
these technologies and the ADPT strategy which we have 
called ADPT++ (the name was chosen as a programming 
joke). Preliminary results are shown in Section 5. Finally, 
Section 6 presents our conclusions and outlines future work.  
II. 
ACADEMIC CONTEXT 
In 2011, the UCSC School of Engineering implemented a 
comprehensive curricular renovation of its five engineering 
programs based on the “Conceive, Design, Implement and 
Operate” (CDIO) initiative [3], which defines an educational 
framework for engineering programs helping identify 
program goals and associated learning outcomes, and 
promotes integrated curriculum design. Its main resources 
are the CDIO Syllabus and the CDIO Standards [4]. The 
CDIO Syllabus summarizes and organizes a set of 
engineering knowledge, personal and professional skills and 
attributes, and interpersonal skills. The 12 CDIO Standards 
serve as guidelines for educational program reform and 
evaluation, and provide a framework for continuous 
improvement. They address program philosophy (Standard 
1), curriculum development (Standards 2, 3 and 4), design-
build experiences and workspaces (Standards 5 and 6), new 
methods of teaching and learning (Standards 7 and 8), 
faculty development (Standards 9 and 10), and assessment 
and evaluation (Standards 11 and 12). 
Among other issues, the curricular renovation addressed 
the problem of low motivation in first years' students by 
incorporating activities aimed at familiarizing students with 
their future professional role. Also, the new curricula 
incorporated the implementation of a student-centered 
teaching and learning approach, which was strongly 
supported through active learning methodologies (CDIO 
Standard 8), such as the strategies described in this work. 
As a result of the curricular renovation, all engineering 
programs at UCSC were modified to include teaching 
methodologies based on problem solving and collaborative 
work. In these activities, students analyze different kind of 
engineering problems and design solutions following a 
structured approach according to their level of knowledge 
and training. and 
55
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

III. TEACHING AND LEARNING STRATEGIES 
This section describes methodologies and strategies on 
which the proposal of this paper is based. 
A. Problem-Based Learning 
Problem-Based Learning (PBL) is defined as an active 
learning method in which teams of students learn by solving 
relevant problems and reflecting on their experiences [5]. 
Problems must involve a cognitive conflict, and must be 
challenging enough to motivate students to find a solution 
and, at the same time, must be complex enough so that their 
solution requires cooperation among all team members. The 
instructor must act as a facilitator, making the problem a real 
team challenge to be solved and thus preventing students 
from just dividing up the work. In this way, PBL not only 
helps students learn the specific subject of the course, but it 
also helps develop teamwork, autonomous learning, 
information searching from diverse sources, problem 
solving, decision making, oral and written communications, 
among others. 
B. Flipped Classroom 
At the beginning of the 21st century, methodological 
innovations known as "reverse classes" have been 
documented in the educational field in which what was 
taught in the classroom was now learnt outside of it, thus 
implying only a modification of the place where the 
activities were carried out [6][7]. Recent works define the 
Flipped Classroom (FC) [1][8][9] as a teaching/learning 
model that transfers the individual learning work to 
autonomous out-of-class activities and dedicates the in-class 
time to practical and cooperative activities that facilitate the 
acquisition, practice and application of the theoretical 
knowledge. This teaching model makes it possible for 
students to understand, analyze and apply information, 
enhancing the development of their cognitive skills 
[10][11][12]. From this perspective, this model considers 
learning at the center of the training process, with students 
taking an active and leading role and where instructors 
mainly guide and facilitate learning. 
From 
a 
methodology 
implementation 
standpoint, 
Hamdan et al. [13] has identified a continuous process of 
learning assessment with an emphasis on permanent and on-
time feedback to students as a key aspect to consider. Hence, 
flexible learning environments must be created that go 
beyond the traditional physical and time boundaries of a 
class [14]. On the other hand, Tucker [15] suggests the use of 
video for student learning outside the classroom and 
emphasizes the importance of integrating the contents seen in 
the videos with the activities to be developed in the 
classroom, so that they can effectively deepen and apply 
those contents. 
As for the positive effect of the use of FC in the teaching 
and learning process, Brame [16] indicates that this strategy 
allows the student to have the educational material prior to 
the class and its revision at any time and place. In addition, 
the development of student-centered activities in the 
classroom encourages collaborative work, peer learning and 
greater student engagement in learning. Finally, it enables 
instructors to give feedback in real time, allowing them to 
recognize achievement, evaluate progress and thus take 
improvement actions. Although this methodological strategy 
has large benefits in the educational process, it is necessary 
to consider its limitations such as the low quality of videos, 
differences in students' autonomous work capacity, problems 
in the design of activities for classroom work and difficulties 
in synchronous and asynchronous communications between 
instructor and students, e. g., when fielding questions [17]. 
The Flipped Classroom methodology is applicable to 
different educational contexts, with evidence showing 
improvements in the classroom work environment and 
increased student motivation and involvement in their 
learning process [18]. Additionally, improvements in the 
learning outcomes achieved by the students have been 
documented [19][20]. At the same time, instructors and 
students both value positively the maximization of in-the-
classroom time and the fostering of autonomous activities 
that leverage information and communication technologies 
[19][21]. 
C. Analysis-Design-Programming-Testing strategy 
Analysis-Design-Programming-Testing (ADPT) is an 
active learning strategy based on a PBL approach. It is 
composed of the four stages of the classical software 
development method, also called the waterfall model [2].  
Even though the ADPT method was proposed to support 
teaching computer programming, it includes generic 
elements of both PBL and collaborative learning methods. 
ADPT also encourages collaboration with other teams, can 
be applied to solving different kinds of problems, from well-
structured simple problems to ill-structured relevant 
problems.  
As shown in Figure 1, each team of students is assigned a 
problem to be solved using ADPT, and has to generate 
deliverable documentation for each stage. This process is 
guided and supervised by an instructor and teaching 
assistants. In this case, the learning outcomes are assessed 
through the results generated by the team for each of the 
stages. The analysis stage outcome is an analysis document 
including a description of inputs, processes, outputs, and 
constraints. The design stage has as output a flow diagram or 
pseudocode that represents the algorithm to solve problem. 
Next, the programming stage has as its deliverable the source 
code and finally, the test stage outcomes are a test plan and 
the results obtained of its application. Figure 1 shows the 
four ADPT stages and deliverables for each one. 
56
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

 
Figure 1.  
ADPT traditional sequence. 
IV. 
ENHANCED ADPT STRATEGY: ADPT++ 
Even though other experiences that describe the 
implementation of Flipped Classroom strategies also 
encourage in-class active work [1][16], our proposal is of 
interest because we use this strategy to comply with the 
CDIO active learning standard and because there are few 
documents describing the implementation of flipped 
classroom strategies in the engineering domain, particularly 
in computer science, in Chile. This article presents an 
improved teaching and learning strategy that combines 
ADPT with the Flipped Classroom methodology, including 
elements of both PBL and collaborative learning methods. 
This strategy, called Enhanced ADPT or ADPT++, is 
described graphically in Figure 2. 
 
Figure 2.  
ADPT++ sequence. 
The basic structure of this strategy involves the use of 
videocasts allocated in a Youtube channel which cover the 
theoretical fundamentals to be applied in classes. The 
cognitive learning outcomes associated to the contents of the 
videos are assessed by a formative test developed by means 
of a Google Forms tools at the beginning of each class. The 
purpose of this test is to detect whether students have 
previously viewed the videos and whether they were able to 
retain the minimum concepts needed to address the problem 
proposed in class. Then, the class focuses only on 
performing practical work based on the theoretical concepts 
presented in the video. Finally, the expected learning 
outcomes are assessed through the deliverables generated by 
the team for each of the stages of the ADPT method and 
through a perception survey. 
Figure 3 details the four-step method used to guide the 
work involved in producing the videos and in designing the 
corresponding in-class didactic sequences. 
Step 1 is performed by the lecturer responsible for the 
course with support from the program committee. Step 2 is 
supported by a technical crew which edits and customizes 
the video. Steps 3 and 4 correspond to the implementation 
and evaluation of the strategy. Steps 1 and 2 were performed 
one semester before the intervention with the students 
actually took place (Steps 3 and 4). 
 
 
Figure 3.  
Workflow method. 
This classroom strategy was applied to the Programming 
Lab I course during the Spring term of 2016 (from August to 
December). This course meets for 5 hours a week and 
corresponds to a second semester course in the Computer 
Science undergraduate program. The course was taught in 
two parallel groups of 24 and 29 students each.  
In this course, students learn computer programming 
using basic tools and simple structured problems, and also 
develop teamwork skills. Table I presents the course's 
learning outcomes, associated to: (i) disciplinary knowledge 
and reasoning, (ii) personal and professional skills and 
attributes, and (iii) interpersonal skills.  
TABLE I.  CDIO SYLLABUS GOALS OF PROGRAMMING LABORATORY I 
Disciplinary 
knowledge and 
reasoning 
1 Fundamentals of algorithms, data 
structures and programming languages 
1.1  
Explains the different software 
development stages. 
1.2  
Identifies inputs, outputs and 
constraints for a given problem. 
1.3 
Designs a structured solution 
using an algorithmic 
representation technique. 
1.4 
Builds an algorithmic solution 
using a structured programming 
language. 
Personal and 
professional skills and 
attributes 
2 Analyzes a problem by dividing it 
into identifiable parts, and propose 
solutions. 
Interpersonal skills 
3 Can work in interdisciplinary teams. 
57
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

V. 
PRELIMINARY RESULTS 
Student work was evaluated in two instances, first with a 
theoretical formative test and second with an active learning 
activity. The theoretical test results show if the students saw 
and understood the videocast before the class. The active 
learning activity in-class time, as in the ADPT strategy, 
consists of solving a problem in teams and generating the 
deliverables for the ADPT stages described in Section 3. 
This activity is assessed using two specially designed 
rubrics: (i) a ADPT process-product rubric, oriented toward 
assessing issues related to disciplinary knowledge (Table 
II), and (ii) a rubric designed to assess issues related to 
teamwork (Table III). Students grades were calculated 
assigning a weight of 80% to process-product performance 
and of 20% to teamwork performance, both evaluated using 
the rubrics shown in Table II and Table III, respectively. 
TABLE II.  
ADPT++  PROCESS – PRODUCT RUBRIC 
 
Excellent 
(5 pts.) 
Good  
(4 pts.) 
Satisfactor
y (3 pts.) 
Poor  
(2 pts.) 
Unaccepta
ble (1 pts.) 
A 
Identifies 
100% of the 
inputs, 
outputs and 
contraints of 
the problem. 
Identifies 
most of the 
inputs, 
outputs and 
contraints of 
the problem . 
Identifies 
some inputs, 
outputs and 
contraints of 
the problem. 
Identifies few 
inputs, 
outputs and 
contraints of 
the problem. 
Fails to 
identify 
inputs, 
outputs and 
contraints of 
the problem. 
D 
Designs the 
algorithms 
and test cases 
correctly 
100% of the 
time. 
Designs the 
algorithm and 
test cases 
correctly 
most of the 
time. 
Partially 
designs the 
algorithm and 
test cases. 
Designs the 
algorithm and 
test cases 
poorly. 
Fails to 
design the 
algorithm and 
test cases. 
P 
Source code 
compiles 
100% and 
documentatio
n is complete. 
Source code 
compiles 
100%, but 
style and 
documentatio
n must be 
improved. 
Complete 
source code 
is observed 
but 
compilation 
fails. 
Incomplete 
source code 
is observed. 
No source 
code is 
observed. 
T 
Code passes 
100% of test 
cases. 
Code passes 
most (≥ 80%) 
of test cases. 
Code passes  
≥ 50% and < 
80% test 
cases. 
Code passes 
less than 50% 
test cases. 
Code fails for 
all test cases. 
 
Figures 4 and 5 show the preliminary results of the 
Programming Lab I course in terms of the student 
performance in Test 1 and Test 2, respectively. It is 
important to note that the ADTP strategy was first applied in 
2013, while the ADTP++ strategy was only applied in 2016. 
Results show an improvement in student performance 
starting in 2013, which can be seen in the shift of the score 
boxes toward higher scores. In 2011 and 2012, students 
failed to achieve the highest grades, unlike later years when 
the ADPT and ADPT++ strategies were applied. Low score 
outliers were found mainly when using ADPT++. This can 
be explained by noting that 20% of the students did not 
watch the video before class (Source: Google Analytics). 
As shown in Figure 5, the score for Test 2 for 2016 (with 
ADPT++ strategy) was lower than the score for the 2013 to 
2015 course versions (which applied the ADPT strategy). 
This may be due to the immaturity of our implementation, 
which still needs some work. 
Both instructor perception and student feedback show an 
increase in student participation and motivation, which is 
consistent with the student reflective memos shown in [2].  
TABLE III.  
ADPT++ TEAM WORK RUBRIC 
 
Excellent  
(5pts.) 
Good 
(4pts.) 
Satisfact
ory  
(3pts.) 
Poor  
(2 pts.) 
Unaccept
able  
(1 pts.) 
Attitude 
(10%) 
Positive 
attitude 
towards 
work. 
Often has 
a positive 
attitude 
towards 
work. 
Ocassional
y has a 
positive 
attitude 
towards 
work.  
Often 
demonstrat
es negative 
attitude 
towards 
work. 
Always 
demostrate
s negative 
attitude 
towards 
work. 
Development 
(10%) 
Prepares 
and plans 
the work. 
Always 
supports 
the work 
of the team 
Supports 
the work 
of the 
team. 
Sometimes 
supports 
the work of 
the team. 
Rarely 
supports 
the work of 
the team. 
Never 
supports 
the work of 
the team. 
Work 
quality 
(20%) 
Always 
generates 
high 
quality 
work. 
Almost 
always 
generates 
high 
quality 
work. 
Generates 
work that 
ocassional
y requires 
reviews. 
Generates 
work that 
often 
requires 
reviews. 
Generates 
low quality 
work. 
Problem 
solving 
(40%) 
Proposes 
solutions 
to the 
problems. 
Refines 
solutions 
proposed 
by others. 
Occasional
ly suggests 
or refines 
solutions 
to 
problems. 
Rarely 
contributes 
to solving 
problems. 
Never 
contributes 
to solving 
problems. 
Work with 
others (20%) 
Always 
listens and 
keeps a 
good work 
environme
nt. 
Almost 
always 
listens and 
keeps a 
good work 
environme
nt. 
Occasional
ly listens 
and keeps 
a good 
work 
environme
nt. 
Rarely 
listens and 
keeps a 
good work 
environme
nt. 
Never 
keeps a 
good work 
environme
nt. 
 
 
Figure 4.  
Scores for test 1 between years 2011 and 2016. 
 
58
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

 
Figure 5.  
Scores for test 2 between years 2011 and 2016. 
VI. 
CONCLUSIONS AND FUTURE WORK 
This article presents a learning strategy that combines 
Flipped 
Classroom 
[1], 
and 
the 
Analysis-Design-
Programming-Testing technique [2] called ADPT++. Our 
preliminary results lead us to believe that these 
methodologies help improve the students’ learning of 
computer programming, in ways that go beyond just making 
better use of in-class time.  
From the point of view of the students’ commitment to 
their learning process, student participation in class 
increased. The inclusion of practical activities in class 
motivated 
their 
active 
participation 
and 
promoted 
collaborative 
learning. 
This 
strategy 
generated 
metacognition in students, making them aware of their 
learning process, and stimulated reflective work in the 
faculty regarding their teaching. 
Aspects to be improved regarding the experience 
reported here are related to extending the use of this strategy 
to other courses. This will require specific training for 
faculty not familiar with this strategy. The implementation 
of appropriate spaces, equipment and a technical crew in 
charge of the production of videos are critical for the 
continuity and replicability of this experience. In addition, 
teaching assistants are needed to manage the videocast site, 
monitor the videos’ rate of use, send out reminders and 
answer questions from users. 
Our future challenges for this project are: 
 
To increase the number of courses and engineering 
programs applying this technology. 
 
To improve the quality of the videos, for example by 
incorporating checkpoints with short questions 
within videos to measure student comprehension of 
viewed contents. 
 
To create a training plan (workshop) to transfer our 
experience to other lecturers. 
 
To collect data to measure the impact of this strategy 
in students’ performance and motivation. 
ACKNOWLEDGMENT 
This work was funded by Project FAD 11/2016 of the 
Universidad Católica de la Santísima Concepción, Chile. 
 
REFERENCES 
[1] J. Touron and R. Santiago, “Flipped Learning model and the 
development of talent at school,” Education Journal, vol. 368, pp. 
196–231, 2015.  
[2] C. Martínez and M. Muñoz, “ADPT : An active learning method for a 
programming lab course in the Computer Science Program at UCSC,” 
Proceedings of the 10th International CDIO Conference, Universitat 
Politècnica de Catalunya, Barcelona, Spain, June 16-19, 2014, 
http://www.cdio.org/node/6084 [retrieved August 2016].  
[3] S. Loyer, M. Muñoz, C. Cárdenas, C. Martínez, and M. Cepeda, “A 
CDIO approach to curriculum design of five engineering programs at 
UCSC,” Proceedings of the 7th International CDIO Conference, 
Technical University of Denmark, Copenhagen, June 20-23, 2011, 
http://ekrs.cdio.org/files/document/file/m5-loyer2011ucsc.pdf 
[retrieved August 2016]. 
[4] E. Crawley, J. Malmqvist, S. Ostlund, and D. Brodeur, Rethinking 
engineering education: The CDIO approach, Springer Sciences + 
Business Media, New York, 2007.  
[5] H. S. Barrows and R. Tamblyn, Problem-Based Learning: An 
approach to Medical Education, Springer Publishing Company, New 
York, 1980.  
[6] M. Lage and G. Platt. "The internet and the inverted classroom," The 
Journal 
of 
Economic 
Education, 
31(1), 
pp. 
11-11, 
2000, 
http://goo.gl/qlo22v [retrieved January 2017]. 
[7] M. Lage, G. Platt and M. Treglia. "Inverting the classroom: A 
gateway to creating an inclusive learning environment," The Journal 
of Economic Education, 31(1), pp. 30-43, 2000, http://goo.gl/qjiJf9 
[retrieved January 2017]. 
[8] J. Bishop and M. Verleger. "The Flipped Classroom : A survey of the 
research," ASEE National Conference Proceedings, Atlanta, 2013, 
https://peer.asee.org/22585 [retrieved January 2017].  
[9] K. McDonald, K. and C. Smith. "The Flipped Classroom for 
Professional Development: Part I. Benefits and Strategies," The 
Journal of Continuing Education in Nursing, 44(10), pp. 437-438, 
2013, http://goo.gl/MfvdkG [retrieved January 2017]. 
[10] J. Bergmann and A. Sams. "Flip your classroom: Reach every student 
in every class every day," International Society for Technology in 
Education, 2012.  
[11] S. C. Kong. "Developing information literacy and critical thinking 
skills through domain knowledge learning in digital classrooms: An 
experience of practicing ﬂipped classroom strategy," Computers & 
Education, 78, pp. 160-173, 2014, doi: http://dx.doi.org/10.1016/ 
j.compedu.2014.05.009 [retrieved January 2016] 
[12] S. C. Kong. "An experience of a three-year study on the development 
of critical thinking skills in ﬂipped secondary classrooms with 
pedagogical and technological suppor," Computers & Education, 89, 
pp. 16-31, 2015, doi: http://dx.doi.org/10.1016/j.compedu.2015. 
08.017 [retrieved January 2017]. 
[13] N. Hamdan, P. McKnight, K. McKnight, and K. Arfstrom. The 
flipped learning model: A white paper based on the literature review 
titled 
“A 
review 
of 
flipped 
learning,” 
2013, 
http://www. 
flippedlearning.org/review [retrieved November 2016]. 
[14] N. C. Burbules, "Ubiquitous Learning and the Future of Teaching," 
Encounters on Education, 13, pp. 3-14, 2012, http://goo.gl/TJwpFj 
[retrieved November 2016]. 
[15] B. Tucker. "The Flipped Classroom," Education Next,12(1), pp. 82-
83, 2012, http://goo.gl/7aGFgN [retrieved January 2017]. 
59
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

[16] C. Brame. "Flipping the classroom," Vanderbilt University, Center 
for Teaching, 2013, https://goo.gl/Wmxr0a [retrieved January 2017]. 
[17] N. Milman. "The Flipped Classroom Strategy: What Is it and How 
Can it Best be Used?," Distance Learning, 9(3), pp. 85, 2012, 
http://goo.gl/zgWacG [retrieved January 2017]. 
[18] Y. Chen, Y. Wang and N. Chen. "Is FLIP enough? Or should we use 
the FLIPPED model instead?," Computers & Education, 79, pp. 16-
27, 2014, doi: 10.1016/j.compedu.2014.07.004 [retrieved January 
2017]. 
[19] Observatory of Educational Innovation of Tecnológico de Monterrey, 
"Reverse Learning," Reporte Edutrends, 2014, http://goo.gl/aFiD55. 
[retrieved November 2016]. 
[20] R. Chiple and A. Ramos, “Accompaniment 100% in person for a 
100% virtual mode," In P. Requeijo and C. Gaona (Eds.), Innovative 
Content in the Current University, pp. 189-204, 2014. Madrid, Spain: 
McGraw-Hill. 
[21] E. Şengel, “To FLIP or not to FLIP: Comparative case study in higher  
education in Turkey,” Computers in Human Behavior, 64, pp. 547-
555, 2016. 
 
 
60
Copyright (c) IARIA, 2017.     ISBN:  978-1-61208-541-8
eLmL 2017 : The Ninth International Conference on Mobile, Hybrid, and On-line Learning

