Warfare Simulation and Technology Forecasting in Support of
Military Decision Making
Eric Malmi, Ville Pettersson, Sampo Syrj¨anen, Niina Nissinen,
Bernt ˚Akesson, Esa Lappi
Defence Forces Technical Research Centre
Electronics and Information Technology Division
P.O. Box 10, FI-11311 Riihim¨aki, Finland
e-mail: eric.malmi@gmail.com, ville.h.pettersson@gmail.com, shsyrjan@gmail.com, niina.nissinen@mil.ﬁ,
bernt.akesson@mil.ﬁ, esa.lappi@mil.ﬁ
Abstract—We describe a methodology that uses warfare
simulation, data farming and technology forecasting in support
of military decision making. Our approach explores the vast
space of parameters regarding unknown properties of future
weapon systems and other uncertainties that affect the outcome
of a battle. Characteristics of successful outcomes are identiﬁed,
providing insights to such questions as what kind of investments
should be made to meet future challenges.
Keywords-warfare simulation; data farming; stochastic simu-
lation; decision support system.
I. INTRODUCTION
Technology forecasting serves two purposes in the mili-
tary context: planning investments of future weapon systems
and anticipation of an adversary’s future capabilities. In
the former, different weapon systems that will be available
in the future are modelled and their contribution to one’s
own performance is analyzed. This analysis supports the
decision making regarding what kind of investments should
be made to optimize our future performance. In the latter,
the adversary’s possible future weapon systems are modelled
and analyzed. This gives suggestions about preventative
actions for meeting the future challenges.
To simulate the course of a battle on operational level,
autonomous simulation software is usually insufﬁcient. In-
stead, one needs to employ wargaming in which tactical
decisions are made by a human operator and weapon system
effects are simulated by the software, so called man-in-
the-loop simulation. In this paper we focus on one such
software which enables wargaming: combat modelling tool
Sandis [1], which is developed at the Finnish Defence Forces
Technical Research Centre. Sandis is based on probability
calculus and fault logic analysis and can be used for compar-
ative scenario-based analysis from platoon to brigade level.
In Sandis, the player deploys the troops on a map and gives
them movement and ﬁring commands. As output, Sandis
gives probability distributions of the unit strengths, operation
success probability as well as a killer-victim scoreboard and
medical situation average values.
The outcome of a wargame is inﬂuenced not only by
the tactical choices made during the battle but also by the
various simulation parameters. There may be variation in
the parameters due to uncertainties in future technology or
uncertainty in the decisions the adversary makes. In addition,
we may want to study the effect of different actions and
conditions or test how, e.g., the choice of ammunition type
affects the results. These variations create a vast space of
parameter combinations that needs to be thoroughly studied.
It is often, however, impossible to calculate or play all the
combinations. The concept of data farming [2], [3] addresses
this problem.
The use of warfare simulation for evaluation of future
weapon systems has been discussed in [4], which also
included an evaluation of the applicability of Finnish simu-
lation tools to such problems. Data farming has previously
been applied to the Sandis combat model in [5], [6].
The methodology presented here bears some similarity to
the approach presented in [7]. The approach presented in
that paper was intended to support the planning of military
operations, and consisted of constructing and evaluating
possible futures, however, without applying data farming.
The approach utilized various forms of warfare simulation
as part of the evaluation process.
In Section II, we discuss the wargaming procedure. After
this, in Section III, we present how the outcomes of battle
variations are commonly analyzed and what kind of visual-
izations are used to support the analysis. Finally, in Section
IV, we discuss the pros and cons of the methodology we
have presented and future work.
II. WARGAMING PROCEDURE
In our method the battle is simulated in three phases. The
ﬁrst phase is the initial data farming phase, which consists
of automatically computing several possible initial states of
the battle from the initial state of the scenario. The second
phase is the selection of representative cases, in which a
small number of representative cases – say three – is chosen
from the automatically generated initial states. In the third
31
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

phase these representative cases are played manually with
one or more human operators making the tactical decisions.
If we wish to study long battles, these three phases are
repeated. The data farming phase begins whenever we need
to study the effect of some uncertain parameters. The process
in whole is illustrated in Figure 1.
A. Data Farming Phase
The data farming phase consists of choosing the different
parameters we wish to vary, e.g., the accuracy of some
weapon system, and then automatically simulating their
effect. The vast number of possible parameter combinations
can be explored efﬁciently with so called data farming
methods [2], [3].
Data farming is the process of running a simulation
several times over a large parameter space, and analyzing
the simulation results for statistical trends and outliers. It is
often impossible to model or predict complex real world
phenomena accurately due to several uncertainties. Data
farming addresses this problem by not trying to come up
with a single deﬁnitive answer or prediction, but instead
computing the entire landscape of possibilities in hope of
understanding and gaining insight on the phenomenon.
Important elements in the data farming process are design
of experiments, high performance computing, and analysis
of results. The experimental design step includes choosing
the appropriate computer models and the key parameters we
are interested in. In the high performance computing step we
run the simulation over several possible parameter combi-
nations in a high performance computing environment. The
analysis of results is often done by using standard statistical
methods and visualization on the simulation output.
The data farming framework is not restricted to a particu-
lar simulation tool, any simulation software or computational
model can be used. Several standard methods have been
developed to facilitate the data farming process, such as the
latin hypercube sampling [8], [9]. Latin hypercube sampling
is a method that assists the parameter space exploration in
the experimental design step. Instead of running the sim-
ulations for all possible parameter combinations, which is
often impossible, latin hypercube sampling chooses a small
subset of the parameter combinations with the intention that
the subset covers the parameter space well. This reduces
the amount of computational resources required without
compromising the quality of results too much.
B. Selection-of-Representatives Phase
The data farming phase produces a very large number
of simulated variations that can be used as initial states
for manual wargaming. Ideally we would like to play each
variation manually, but this is often impossible since manual
wargaming is time and labour consuming. In the selection
phase only a small number of representative cases is chosen
for manual wargaming. The number of representative cases
6
8
7
5
4
3
1
2
9
Figure 2.
Illustrating the selection of representative cases by means of a
scatter plot of adversary lossed versus own losses. Each dot corresponds to
a simulation run with a certain combination of parameter values. The plane
is divided into nine categories from which a few representative cases are
chosen as initial states for the following wargaming phase.
should be sufﬁciently small considering the available re-
sources, but still large enough to cover the important aspects
in the simulation results.
Methods that are used to analyze and visualize data
farming results can be useful in this phase. One way to
choose the appropriate representative cases is to choose two
interesting variables that describe the simulation results, and
make a two-dimensional scatter plot of all the simulation
results with these two variables as axes. In the military
context the numbers of casualties on both sides are often
the most interesting variables. The plotted variations can
then be divided into nine categories as seen in Figure 2.
Representative cases are chosen within those categories. One
can eliminate uninteresting cases, such as the cases where
both sides have been practically defeated.
As an example, consider Figure 2. Suppose that the x-
axis represents own losses and the y-axis represents enemy
losses. The cases have been divided into nine categories.
Categories 1 to 5 do not need to be manually played, since
in those cases at least one side is already defeated. Category
9 only contains one case, which is close to the cases in
category 8. The representative cases can be chosen from
categories 6, 7 and 8.
C. Gaming Phase
Once the initial parameters have been set, the gaming
phase starts. In the gaming phase one or several scenarios are
played out. The scenarios are derived from threat models and
assumptions on how each side will use its forces and weapon
systems [4]. Simulation tools are used to provide estimates
of how each scenario will unfold. The scale of the combat
analysis determines which simulation tools are suitable. One
can distinguish between technical level, combat technical
level, tactical and operational level analysis. For tactical and
operational level analysis, man-in-the-loop simulations are
often necessary. These simulation tools are based on tactical
32
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

Own losses
Adversary losses
Setup Phase
Data Farming Phase
Gaming Phase
Selection-of-Representatives 
Phase
Tactical Decision
Own losses
Adversary losses
Data Farming Phase
Selection-of-Representatives 
Phase
Gaming Phase
Spin-off Results
Spin-off Results
Results
Figure 1.
Illustration of the wargaming procedure. The process comprises three phases, which are repeated as necessary.
and technical models, and they calculate the effects and
status of battleﬁeld systems, whereas tactical decisions are
done by a human operator. The operator decides, e.g., where
to move the troops and what kind of ﬁring commands the
troops will follow. Once the operator has deﬁned the tactical
decisions, the simulation software calculates the outcome of
the battle.
We have applied this methodology mainly with combat
modelling tool Sandis [1]. A central componenent of the
Sandis software is a map interface for wargaming. The
units are deployed on the map and given movement and
ﬁring commands as input. The strengths of the units are
probability distributions and combat losses are modelled as
loss probabilities, calculated using a collection of weapon
effect models. Additional calculation models include models
for radio communication and medical evacuation. A feature
of Sandis is that the calculation is based on Markov chains
instead of Monte Carlo methods.
Sandis is designed for platoon to brigade level combat
simulation. This provides a suitable scale for a wargame.
However, we could use high-resolution simulation tools for
analysing details and transfer the results of these analyses
to the brigade-level wargame, bearing in mind that such a
multi-level approach is very labour intensive [4]. Examples
of sub-problems, which may require high-resolution sim-
ulation, include tank duels, in which individual tanks are
simulated, and sensor system evaluation.
Making tactical decisions is the labour consuming part of
the gaming phase. If we wish to continue with a new data
farming phase, it is possible to automate the varying of the
parameters and running of the simulation, once the baseline
scenario has been played. Sandis also enables the operator
to go back and forth in the timeline after the calculation
has been ﬁnished. If the operator detects that an unrealistic
tactical desicion has been made in the middle of the battle
after some parameter change, the command can be reﬁned
and the simulation can be recalculated from that moment
onwards. Certain parameter values may demand changes in
the tactics of either side. The operator may also be forced
to manually model the effect of some system or event.
This may be the case when the simulation tool lacks the
computational model of a particular system.
Furthermore, at some point in the scenario, it may be
necessary to branch the scenario and investigate, e.g., two
paths. Such a decision point may be whether a defensive
position holds or is overrun, which leads to two different
end states in the scenario. It is up to the operator to identify
such critical points and divide the scenario into a number of
major steps. Based on the plans for each side, such critical
points could be identiﬁed beforehand, as discussed in [7].
In Sandis the manually played wargame scenarios are
stored as XML ﬁles, as are units and their equipment and
parameter data for weapons and equipment. For the data
farming phase, the ﬁelds corresponding to the parameters
to be varied are changed in accordance with the design
of experiments, either by directly editing the ﬁles with
scripts or by creating new versions of the ﬁles. The set
of scenario ﬁles is executed in Sandis and the results from
each simulation run are output to plain-text ﬁles, which are
processed in the analysis step.
III. ANALYZING THE RESULTS
The wargaming and data farming phases produce a large
amount of simulation results that can be analyzed to gain
insight on the research question at hand. Some simple
analysis methods were already mentioned in the description
of the wargaming procedure, but in the ﬁnal analysis phase
the results can be studied more thoroughly and from many
angles based on chosen decision criteria. One can use, e.g.,
cost effectiveness analysis. In this section we describe some
useful analysis methods.
As mentioned earlier, one common analysis method is
making a two-dimensional scatter plot of all the computed
variations. The dimensions of the plot can be any two
interesting variables, e.g., casualties on both sides. The
dots corresponding to favorable results, i.e., results where
33
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

0 %
10 %
20 %
30 %
40 %
50 %
60 %
70 %
80 %
90 %
100 %
0
0,1
0,2
0,3
0,4
0,5
0,6
0,7
0,8
0,9
1
Adversary losses
Scaled cost
Favourable case
Unfavourable case
Figure 3.
Scatter plot of adversary losses versus scaled own costs in a
simulated scenario. Each dot corresponds to a simulation run with a certain
combination of parameter values. In the lower right corner are cases where
the adversary losses are small and one’s own costs are high, i.e., the least
cost effective cases. In the upper left corner, on the other hand, are cases
where heavy losses are caused to the adversary for small costs.
own losses are low and enemy losses are high, are studied
in detail to gain insight on what made these cases good.
Similarly, the results where own losses are high and enemy
losses are low are studied to ﬁnd out what should be avoided.
Strategies and investment plans can then be improved to
move towards the favorable results.
As an example of cost effectiveness analysis, consider
Figure 3 that has been taken from real-world calculations.
The x-axis shows the expected cost for an operation, and the
y-axis shows enemy casualties. The values have been scaled
to between 0 and 1. Each dot corresponds to one simulation
run with some combination of parameters. Results from
the simulations have been combined with cost information
related to ammunition and equipment. Dots in the upper
left corner correspond to favourable scenarios, where large
enemy forces can be deterred in a cost effective manner. On
the other hand, dots in the lower right corner correspond
to unfavorable scenarios, where the enemy takes less losses
despite the higher cost.
The parameter combinations and tactics that led to favor-
able outcomes can then be studied in detail. For example,
one might ﬁnd that some relatively cheap weapon system
is effective when used properly while other more expensive
systems do not perform well – a useful result when plan-
ning investments and strategy. Another possible result is to
identify parameters, which have a strong inﬂuence on the
outcome. The value of some weapon system parameter may
have a large effect on the results, while the value of some
other parameter may have a surprisingly small effect. These
kinds of observations can be used to focus research efforts on
improving the more important parameters of future weapon
0
50
100
150
200
250
300
350
400
0
100
200
300
400
10
0
10
1
10
2
Delivery accuracy (m)
Target location error (m)
Losses (%)
Figure 4.
Example of visualization of data farming results. For a speciﬁc
type of target element, i.e., an infantry soldier in hasty defence, the best
indirect ﬁre ammunition can be found. The delivery accuracy for the
weapon is in this case expressed by the standard deviation in a circular
bivariate normal distribution centered at the aimpoint. The target location
error (TLE) is the difference between the true target location and the
aimpoint. The colour of the surface indicates the most effective ammunition
type for a given combination of delivery accuracy and TLE.
systems.
An example of how results from the data farming phase
can be visualized is shown in Figure 4. From a data
set of over 19 000 simulation results, generated through
variation of several parameters, the most effective indirect
ﬁre ammunition against a particular type of target can be
found with respect to two parameters: delivery accuracy
and target location error. The delivery accuracy for the
weapon describes the probability the ammunition hits a
particular coordinate point and is expressed by the standard
deviation in a circular bivariate normal distribution centered
at the aimpoint. The target location error is deﬁned as the
difference between the true target location and the aimpoint.
It is here treated as a systematic error, which is varied by
moving the aimpoint.
It can be noted that the results from the data farming
phase, besides providing a foundation for the wargaming,
can be valuable as such and can be used to gain insight
into the properties of weapons systems. Results like this are
referred to as spin-off results in Figure 1.
IV. CONCLUSION AND FUTURE WORK
A methodology combining warfare simulation, data farm-
ing and technology forecasting for military decision support
has been presented. Using data farming the effect of system
parameters on the outcome of the battle can be studied.
One downside of our methodology is that the wargaming
phase is labour intensive, since it cannot be easily automated.
This limits the number of different tactical alternatives that
can be tested. The methodology is mainly intended for
supporting peacetime aquisitions and planning when there
34
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

is much time available. As noted in [4], evaluating different
modes of operation for the adversary is crucial. Otherwise
we might optimize the defence system for the wrong type of
threat. Selection of scenarios for the analysis and selection of
representative cases for a further gaming phase are therefore
of importance.
We will continue to develop the methodology and in-
corporate additional features in order to handle a broader
range of military problems. Although the wargaming process
described in this paper utilizes only one simulation tool, the
process can be extended to a multi-level multi-resolution
simulation process, in which several simulation tools are
used. After a speciﬁc detail has been analysed in a high-
resolution simulation, the results can be transferred to a
brigade level analysis tool, such as Sandis. This was dis-
cussed in [4]. Furthermore, when evaluating several branches
of a scenario, it may be necessary, due to limited simulation
resources, to play the most probable or most important
branch thoroughly and the less important ones using a cruder
simulation model [7]. Finally, although the domain studied
here is land warfare, the methodology is applicable to all
branches and the defence forces as a whole.
REFERENCES
[1] E. Lappi, “Sandis military operation analysis tool,” in 2nd
Nordic Military Analysis Symposium, Stockholm, November
17–18 2008.
[2] G. E. Horne and T. E. Meyer, “Data farming: discovering
surprise,” in Proceedings of the 2004 Winter Simulation Con-
ference, Washington, D.C., December 5–8 2004.
[3] G. E. Horne, “Summary of data farming,” in 4th International
Sandis Workshop, ser. Defence Forces Technical Research
Centre Publications, J. S. H¨am¨al¨ainen, Ed. Riihim¨aki: Defence
Forces Technical Research Centre, 2011, vol. 23.
[4] E. Lappi and B.
˚Akesson, “Combat simulation as a tool
for evaluation of future weapon system and some risks in
scenario based wargaming,” in Proceedings of the Conference
Security in Futures – Security in Change, ser. FFRC eBook,
B. Auffermann and J. Kaskinen, Eds.
Turku: Finland Futures
Research Centre, University of Turku, 2011, vol. 5/2011.
[5] R. S. Bruun, J. S. H¨am¨al¨ainen, E. I. Lappi, , and E. J.
Lesnowicz Jr, “Data farming with SANDIS software applied
to mortar vehicle support for convoys,” Scythe: Proceedings
and Bulletin of the International Data Farming Community,
no. 9, 2011.
[6] J. H¨am¨al¨ainen, P. Rindst˚al, R. Vuorsalo, R. Bruun, and
J. Tiainen, “Using Sandis software combined with data farm-
ing to analyze evacuation of casualties from the battleﬁeld,”
in 4th International Sandis Workshop, ser. Defence Forces
Technical Research Centre Publications, J. S. H¨am¨al¨ainen, Ed.
Riihim¨aki: Defence Forces Technical Research Centre, 2011,
vol. 23.
[7] D. R. Pratt, R. W. Franceschini, R. B. Burch, and R. S.
Alexander, “A multi threaded and multi resolution approach
to simulated futures evaluation,” in Proceedings of the 2008
Winter Simulation Conference, Miami, FL, December 7–10
2008.
[8] M. D. McKay, R. J. Beckman, and W. J. Conover, “A compar-
ison of three methods for selecting values of input variables in
the analysis of output from a computer code,” Technometrics,
vol. 21, no. 2, pp. 239–245, May 1979.
[9] T. M. Cioppa and T. W. Lucas, “Efﬁcient nearly orthogonal and
space-ﬁlling latin hypercubes,” Technometrics, vol. 49, no. 1,
pp. 45–55, February 2007.
35
INFOCOMP 2011 : The First International Conference on Advanced Communications and Computation
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-161-8

