Agent Supported QoS Management
Wojciech Kamieniecki
PhD Studies, Department of Informatics
University of Economics in Katowice
Katowice, Poland
email: w.kamieniecki@gmail.com
Malgorzata Pankowska
Department of Informatics
University of Economics in Katowice
Katowice, Poland
email: pank@ue.katowice.pl
Abstract—
Nowadays,
the
rapidly
developing
science
of
services focuses on service management, which has to take into
account
the
available
resources
and
the
user's
wishes
concerning the desired quality and costs. Quality of Service
(QoS)
management
is
perceived
as
a
special
aspect
of
distributed systems management. This area of management is
concerned with finding appropriate QoS characteristics for the
different system components in a distributed information
system application and reserving the corresponding resources
in such a way as to achieve the required functionality of the
given
application
and
to
optimize
the
overall
business
organization
performance.
In
this
paper,
we
present
a
consistent set of concepts concerning QoS modelling for agent
technology application and give an example of how that
concept can be used.
Keywords-service
economy;
Service
Level
Agreement;
Service Level Objective; Quality of Service; agent technology.
I.
INTRODUCTION
Nowadays, business organizations realize functionality as
systems that are composed of services. This includes even
mission critical processes of the business. Hence, the quality
of such systems including their composition and services is
increasingly important. However, it is a challenge to
establish high quality in this context because the dynamics
and distribution of functionality increase the potential points
of failure. Different approaches exist to ensure quality, but
they typically act within a restricted scope, such as network
layer or software design. This paper presents the usage of
Multi-Agent System (MAS) for Quality of Service (QoS)
management
and
computerized
network
management.
Thereby, it supports the selection of approaches to improve
quality and finally helps to find a suitable solution for a
given situation. The paper consists of two main parts. The
first part covers a discussion on the service management,
Service Level Agreement (SLA) construction and quality of
service. Next, the applied agent technology is explained and
the results of the application of agent system prototype for
dynamic QoS management are presented and evaluated.
II.
SERVICE SCIENCE
In literature, service science is an emerging trans-
discipline that integrates marketing and behavioural science,
operations research and management science, governance
and political science, game theory and learning science,
psychology and cognitive science, industrial engineering and
system science, management of information systems and
computer science, organization theory and administrative
science, economics, law and historical science, foresight
studies and design science [1]. The principal goal of service
science is to catalogue and understand service systems, and
to apply that understanding to advancing the service
developers' ability to design, improve and scale service
systems for practical business and social purposes. Services
are considered as value co-creation that results from
communication,
planning,
or
other
purposeful
and
knowledge-based
interactions
between
distinct
service
system entities, such as individuals and business units [2].
The service science discipline is to establish service systems
and value propositions as foundational concepts, to create
data sets to understand the nature and behaviour of service
systems and to create modelling and simulation tools for
service systems. From the marketing and management
science
perspective,
the
services
are
intangible,
heterogeneous, inseparable, and perishable. Services cannot
be touched, transported or stored. Each service is unique,
instantly generated, rendered and consumed. Services appear
in relation to processes and Information Technology (IT)
user needs, and the service provider implements these
processes to enable the desired changes in the user world.
Services require application of specialised competencies
(knowledge and abilities) through actions, processes and
performance to benefit. They involve a degree of influence
of the service provider on the service recipient.
A.
Service Management
Service management is defined as a set of specialized
organizational capabilities for providing value to customers
in the form of services. The service value consists of two
principal elements: utility or fitness for purpose and warranty
or fitness for use [3]. Utility is determined by the service's
functionality and warranty is determined by service quality
and performance. Utility is perceived by the customer from
the attributes of the service that have a positive effect on the
performance of tasks associated with desired outcomes.
Service warranty is determined by sufficient capacity or
magnitude and is defined in terms of continuity and security.
Nowadays,
information
technology
supports
service
automation, which has a particularly significant impact on
the performance of service assets, such as management,
organization, people, processes, and knowledge. Advances in
artificial intelligence, machine learning and rich-media
technologies have increased the capabilities of software-
based service agents to handle a variety of tasks and
interactions. Automated systems present a good basis for
91
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

improving service processes and they are a means for
capturing the knowledge required for a service process. The
automation of service processes helps to improve the quality
of service, reduce costs and minimize the risks by reducing
complexity and uncertainty of service management.
B.
Service Level Management
The Service Level Management (SLM) approach was
developed for years to combine the services providers'
capabilities with service users’ requirements. To manage
service
providers'
responsibilities
effectively,
SLM
implements
Service
Level
Agreements
(SLAs)
with
Operational Level Agreements (OLAs), and Underpinning
Contracts (UCs) with third party suppliers [4]. OLAs is a
non-contractual,
service-oriented
document
describing
services and service standards, with responsibilities and
obligations
where
appropriate.
The
scope
of
issues
considered within SLM is huge and the typical topics
include: service performance against SLA, incident and
problem reviews, business and customer feedback, issues'
escalation and contract review summaries, service demand
management, expected major changes which affect services,
key
business
events over
the
service period,
service
improvement programmes, best practice assurance and
standards' compliance. SLA is a basis for the specification
and development of Information Technology (IT) service. It
enables the monitoring of real time conformance of the
service performance
and
related
metrics
to
the
SLA
requirements. SLA supports service reconfiguration and
adjustment to minimise SLA violations. By definition, SLA
is an agreement, while the actual service is specified,
designed and implemented in a technical context. There are
some strong requirements for SLA modelling [5].
SLA is
specified in a specific language, i.e., SLAng, RBSLA, to
ensure integration of the SLA management framework with
other IT systems for providing the service to the user. SLAs
are described in a language that is technology neutral and
platform independent. The management of SLAs and
exchange of SLA specific information is automated to ensure
a more proactive monitoring of the runtime service systems.
There are different models of SLA lifecycle [6]. Generally,
the SLA lifecycle covers the following stages of an SLA
development: service and SLA template development, SLA
negotiation,
service
preparation,
service
execution,
assessment of SLA and the QoS, as well as assessment of the
overall service, service termination and decommission [7].
SLA is a representation of all features a user should expect to
receive via a service. An SLA is a concrete representation or
codification of an agreement, which consists of the following
sections:

Purpose describing the motives behind the SLA
creation.

Parties involved in the SLA and their representative
roles, i.e., provider and user.

SLA validity period.

SLA scope defining the services covered in the
agreement.

Restrictions to ensure that requested service levels
will be provided.

Service Level Objectives (SLOs) representing the
levels of service that both the service user and the
service provider agree on. They typically include a
set of QoS indicators.

Penalties for not meeting the agreed SLOs, such as
getting discounts or having the right to terminate the
contract.

Exclusions specifying what is not covered in the
SLA.

Administration
processes
to
assess
the
SLA
objectives and describe the responsibility of the
service provider [8].
According to [9], an SLA includes some guarantee terms,
where each term codifies an obligation (see Figure 1). The
performative aspects of the obligation are encapsulated by
the QoS object, while service utility is captured by the
business value. In order to ensure that obligations are met
and the service is delivered as agreed, the service delivery
must be monitored. Therefore, a set of monitoring policies is
developed and implemented.
pkg QoS
BusinessProcess
Serv ice
ObligatedParty
SLO
QoS
Obligation
GuaranteeTerm
Contract
Observ able
MonitoringAction
SLA
describes
determines
formulates
represents
codifies
describes
contains
Figure 1.
Service Level Agreement within Service Level Management.
Service Level Agreement (SLA) describes agreed service
functionality, cost and qualities. An SLA is an agreement
regarding the guarantee of a service. It defines mutual
understandings and expectations of a service between the
service provider and service users. It consists of sections
describing the commitments to service quality and service
levels that the service provider has to guarantee. SLAs
contain Service Level Objectives (SLOs) that represent the
Quality of Service (QoS) goals, e.g., storage, bandwidth or
response time. Service providers need to comply with QoS
requirements,
specified
in
SLA
and
contracts,
which
determine the revenues and penalties on the basis of the
achieved performance level.
C.
Quality Management
Generally, in service science, quality can be considered
in a few different ways [10]. On one hand, Quality as a
functionality characterizes the design of a service and can be
measured by comparing the service against other services
offering similar functionalities. Quality as conformance, on
the
other
hand,
can
be
monitored
for
each
service
individually, and usually requires the user's experience of the
service in order to measure the promise against the delivery.
92
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

Quality as reputation is regarded as a general reference to a
service's consistency over time in offering both functionality
and conformance qualities, and can therefore be measured
through the other two types of quality [10]. Thiadens
analyses the product, the process, IT facilities and the
business organization qualities [11]. Zeginis [12] proposed
considered qualities as measurable and as unmeasurable.
Measurable qualities could include accuracy, availability,
capacity,
costs,
latency,
provisioning-related
time,
scalability,
whereas
unmeasurable
qualities
cover
interoperability of communicating entities, modifiability,
security,
as
well
as
complementary
dimensions,
i.e.,
assertion-based monitoring, event-based monitoring, history-
based
monitoring.
Service
measure
system
contains
information on the current system configuration and runtime
information on the metrics that are part of the SLA. The
system measures SLA parameters, such as availability or
response time, either from inside, by monitoring resource
metrics directly from managed resources, or from outside the
service provider's domain, e.g., by analysing the client
transactions.
D.
Quality of Service
In a service contract or agreement, a service is defined by
its context or functions, its terms and conditions, and is
normally set by the agreement between the service user and
the service provider. QoS is determined in relation to the
fulfilment of the service agreement. According to the
International
Standard
ISO/IEC
13226:1998
the
QoS
Framework is a structural collection of concepts and their
relationships
which
describes
QoS
and
enables
the
partitioning of, and relationships between, the topics relevant
to QoS in information technology to be expressed by
common means of description [13]. In ISO/IEC 10746-2,
QoS is a set of qualities related to the collective behaviour of
one or more objects. Depending on the established context
and specified requirements, the QoS parameters may be of
different kinds, e.g., a desired level of characteristic, a
maximum or minimum level of a characteristic, a measured
value, a signal to take an action, a request for operations, or
the results of operations [13]. In the domain of service
science and particularly in SLM, the QoS management
functions are designed to assist in satisfying users’ QoS
requirements. The activities of QoS management include the
establishment of QoS for a set of QoS characteristics,
monitoring the QoS values, maintaining the actual QoS as
close as possible to the QoS target, control of QoS targets,
enquiry upon some QoS information and alerts in the case of
events related to the QoS management [14].
Hardy
considers three kinds of quality of service [15]. In the
technical
design,
the
intrinsic
QoS
which
includes
characteristics of the connection made through the network
and provisioning the network accesses, terminations, and
switch-to-switch links, relative to the expectations of the
person who designs and operates the system. The perceived
quality of service is what will determine whether the user
will find the service acceptable when it is delivered, and the
assessed quality of a service, which results when the user
who pays for the service determines whether the quality of
service was good enough to warrant its continued use.
III.
APPLICATION OF AGENT TECHNOLOGY FOR QOS
Nowadays, the multi-agent systems (MAS) concern
many aspects of human living. MAS can be successfully
used in the transportation area [16][17] or in a hospital
system [18]. The flexibility of MAS gives the opportunity to
create a new type of intelligent system. Properties of agents
are as follows: reactiveness, goal orientation, autonomy,
adaptability,
ability
to
communicate,
capacity
for
cooperation and learning ability. Those properties of agents
make this type of system distinguished and unique in IT.
Agents are autonomic entities in the system, but through
their learning abilities and communication skills they are
able to create a complex system.
QoS may be used in a computer network as one of
determinants of quality of a network. Actually, the QoS can
be used to divide all network connections into specific
groups, based on traffic flow definition: single transfer of
information between computer units, like workstations,
servers, etc., through the network. Each of this group has its
own priority. Priority is used to calculate the portion of
bandwidth which should be assigned to specific connections.
This simple algorithm applies to management of traffic flows
inside IT infrastructure. All models of QoS algorithm have
the same common feature, i.e., static approach in defining
the policy. The consistency of QoS policy is hard to achieve,
because there is no possibility to track all changes of traffic
flows in real-time by an administrator or even groups of
administrators. In this situation, the static QoS will not be a
sufficient solution from business perspective. The MAS for
QoS [19] is a new approach to solve the problem of ad-hoc
high priority business flows. The agents gather the users’
requirements and based on those information they are
capable of creating the optimal policy. Moreover, thanks to
trend analysis, the agent is able to change the initial priority.
The most important thing is that the agents notice the
changes of users’ requirements and react to them in real
time. Agent, as the autonomic element in the system, can
decide which traffic connection should be prioritized. Thus, a
group of agents may create a system focused on ensuring
users’ satisfactions. It should be emphasized, that MAS was
designed to solve complex problems, like managing the
quality
of
network
service
in
dynamic
infrastructure,
gathering and calculating huge amount of date, etc.
The approach presented in this section is the contribution
of the authors only. Nevertheless, some of the parts of agent
algorithm can be similar to other approaches due to open
standard of QoS and agent’s definition.
During the work on the prototype, we tried to find a
similar approach to compare the effectiveness of these
models, however without success. There are some of
approaches how to use the MAS for QoS, like [20][21[22],
nevertheless, they are not describing the real usage of MAS
for QoS in simulated environment. Therefore, it is not
possible to compare this model to any other, because each of
them are focused on different aspects of managing the QoS.
MAS for QoS can be divied into few elements: sniffer,
93
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

analyser, generator and negotiator. Each of the elements is
the independent part of the system. However, we must keep
in mind that the analyser cannot work without data from
sniffer subsystem. The sequence of agents’ actions are
sniffering the network traffic, analysing it, generating the
new QoS policy. In case when an agent decides that some
part of the traffic flows is important, the agent can negotiate
higher preferences of that traffic flows with his neighbours.
Due to a possible problem with MAS performance, we
decided to implement some part of the agent into the
database.
The policy is the output of agent’s work and it is related
only to the specific agent within MAS, so we can assume
that the policy is created according to traffic flows which
were observed by the agent in a proper time period. The
policy is created by the agent on the basis of current traffic
flows and the historical occurrences. Moreover, the policy
includes the information on what portion of bandwidth and
priority should be assigned to a particular traffic flow. The
priority is used to distinguish the importance of traffic flows
and this is the main factor in MAS for QoS. Taking into
account that information, the agent is able to create the
optimal policy. MAS for QoS has the possibility to use the
network administrator’s knowledge and creates the initial
knowledge database, based on this information. Network
administrator can furnish agent with information about
critical traffic flows that have significant impact on business.
Information defined by the administrator and observed by
the agent is collected in the knowledge database.
In each company, we can distinguish at least one
business process. Pall defined the business process as “the
logical organization of people, materials, energy, equipment,
and procedures into work activities designed to produce a
specified end result (work product)” [23]. Business form is
created by a set of processes forms – in the way which a
business unit/units carries out the business. The business
process can be described by a proper process flow. By means
of the flow, the management can factorize the complex
process. Moreover, priority is a common property of
business processes.
Business process priority, as a common property of
business processes, defines which business process has high
impact on organization. However, managing processes and
their priorities inside the company demands not only wide
knowledge about all the processes but expert analytics skills
too. Nowadays, management tries to do that with the help of
expert systems, distributed analytic systems, etc. Multi-agent
system is one of the examples of using analytic system to
help user in decision making area.
A.
Case Study Description
The MAS for QoS can be used in every computer
network. However, the more complex the computer network
is, the more efficient is the policy created by an agent. In
our
case
study
the
computer
network,
closed
test
environment
(Figure
3)
consists
of
5
routers,
12
workstations, 7 internal servers and more than 50 external
servers. In our case study, the MAS is built by 5
autonomous agents. The MAS will achieve optimal results
when agents will be installed on network devices only.
Thanks to this approach all agents have the wide knowledge
about traffic flows and all business flows inside the
organization. Moreover, the agent can learn the habits of
users and try to create a policy that reflects all users’ needs.
One of the most typical business flows (Figure 2) in an
organization is creating a report for management. From
organization’s perspective the business flow is not complex
at all. However, from a technical point view, the flow is
more complex (Figure 3).
Figure 2. Business flow – generating the report.
The
administrator
is
faced
with
prioritizing
the
connections
inside an IT infrastructure. The common
challenge for all IT infrastructure is the occurrence of
multiple connections at the same time. Thus, generally it can
be stated that many IT infrastructures face prioritizing the
connections in real time. The priority is a percentage of
bandwidth assigned to particular traffic connection. The
higher the priority is, the more bandwidth will be assigned to
the connection. To solve this problem the administrator can
implement the QoS. Thanks to this solution, there is a
possibility to create a static policy to assure that some
connections
will
have
a
higher
priority
than
others.
Nevertheless, creating a static policy is a suboptimal
solution, because the specific traffic/business flow may exist
for a short period of time only. In the static policy, the
common issue is not using the full available bandwidth.
Moreover, continuously changing the policy can have
significant impact on business and administrators’ works. In
such a case we can use MAS for QoS. Thanks to the
flexibility of the MAS, there is an opportunity to manage the
QoS for a computer network, especially in a highly dynamic
environment. The new approach considers to use the
historical and current information for creating the policy by
agent and the human role can be reduced to minimum.
Improving the computer network by MAS has an influence
not only on the technology area but also on business
processes built on it. The main goal of MAS for QoS is to
adjust the traffic priority to actual users’ needs. To perform
appropriate tests a traffic generator was created. The
generator generates the traffic, which reflects as far as
possible the network traffic generated by employees or users
in similar real network. Moreover, the test computer
network (Figure 3) is very similar to computer network used
in small companies. Despite the fact that the tests were done
94
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

in test environment,
the result of these tests can be
compared
with
those
that
have
been
done
in
real
environment, thanks to similarity of both environments and
network traffics. The results shown in this section are
presented from one agent perspective for better visibility.
The realized test lasted 2 hours and during it agent noticed
that 200 unique traffic flows occurred 5044 times and at
least once the priority was changed for them. The agent, as
an independent unit with the knowledge database of traffic
flows, modified the priority of traffic flows 1781 times. It
means that agent changed 26% of traffic flows priorities of
total observed traffic flows during test. From business
perspective, the agent can have significant influence on the
business flows inside the company. The business flows
describe all interaction between users, assets, etc. and have
real impact on company profits. The longer the agent will
work, the better the policy will be matched to the current
needs of users and the quality of business flows will be
improved.
Figure 3. Business flow from technical perspective.
B.
Research Results
In the prototype, the agent has the possibility to use
traffic flows defined by an administrator. This information
will be treated as the initial knowledge database by the agent.
The agent can use the initial knowledge database in two
ways: a defined priority of traffic cannot be changed or it is
treated as the initial value, i.e., it can be changed by the agent
over time. The first option might be used for traffic with real
high impact on business flows. However, in this approach
the agent reserves specific bandwidth for irrelevant traffic
flow, which importance should be decreased over time. From
business perspective this is a suboptimal allocation of
resources, which could be used for increasing profits. A
wrong allocation of network resources can disturb the
businesses processes inside company.
Internet
surfing,
connection to internal file servers or databases are all
examples of those groups. The second option should be used
in a dynamic environment, where there is a possibility of
changing priorities of business flows. Both solutions can be
adopted in every IT infrastructure, but only the second gives
the opportunity to use the agent to improve and to create the
most accurate policy to users’ needs.
In Figures 4 and 5, it can be observed how the priority of
traffic flow was changed over time for the same type of
business flow – generating the report. The agent adjusted the
priority to real usage and needs of users. Figure 4 presents
how the priority was changed to the highest value and
changed back to the lowest value (initial value for all traffic
flows) over time. The traffic flow had a high priority,
between 4 and 5, for over 1 hour. The situation is different
on Figure 5. In the beginning of traffic occurrence, the agent
decreased the priority of traffic flow to the lowest value and
then increased it to a higher value. The agent used the
priority value defined by the administrator as an initial value
only. Unfortunately, as it was observed, using the initial
value as the final could be the cause of creating a suboptimal
policy. In such case, the agent will not take into account the
current needs of users.
To summarize the example result, the agent registered
464 unique traffic flows and only 8 of them were defined by
the administrator. The average priority with defined traffic
flows is 2,17 and without defined traffic flows - 2.06. For
200 unique traffic flows the priorities were changed and the
agent noticed 5044 occurrences of those traffic flows. For the
rest of traffic flows (264), the agent did not change the initial
priority value. 77 of unique traffic flows, which had not been
defined by the administrator, had the highest priority at least
once. It means that 16,6% of traffic flows had the highest
priority
value,
so
those
connections
had
the
biggest
allocation of resources and they were the most preferable
ones in a specific period of time.
Figure 4. Priority changes of traffic flow without administrator’s
definitions.
Figure 5. Priority changes of traffic flow with administrator’s definitions.
Without the MAS for QoS, only 2 traffic flows defined
by the administrator have a priority higher than 1. In the
research of usage, it was attempted to prove that improving
the quality of network connection can have significant
impact on business processes. If the connection is faster than
normal, the execution of business process can be finished
faster than it was estimated in the beginning. Nowadays,
there is no possibility that the administrator could create
complex policy in
a
very
short
time.
However,
the
95
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

administrator has an opportunity to use the MAS for
maintaining the QoS in a computer network. The MAS for
QoS guarantees that policies created by agents will be more
adjusted to users’ actual needs than created manually by
administrator. Moreover, the biggest advantage of using
MAS for QoS is the time in which the policy will be created.
The administrator should have at least 10-30 minutes to
create a policy while the agent needs only 3-5 seconds.
The test of MAS for QoS was performed on environment
similar to the one which was presented in Figure 3. One of
the biggest challenges is to protect the MAS for QoS against
any abnormal traffic’s behaviour, like maintenance or
administrator traffic. The MAS for QoS distinguishes the
network traffic and chooses the traffic used by users only.
Moreover,
the
administrator
of
this
system
has
the
opportunity to define the traffic which should be analysed by
agent. This approach allows to avoid any incorrect politics
created by the prototype.
IV.
CONCLUSIONS AND FUTURE WORK
MAS for QoS introduces a new approach on how to
adjust the quality of traffic flows, which has real impact on
the business flows inside a company. The quality in a
network is especially important for the new generation of
Internet applications, such as Voice over IP, video-on-
demand and other consumer services. By introducing the
dynamic quality for traffic flows, the MAS for QoS can
change the network parameters for particular traffic flows in
real time. Thanks to this approach, the agent is capable of
changing the quality of connections only for those that really
need it, based on his knowledge database.
The presented work will be further developed and
extended. There are many alternative approaches for building
scalable computer networks which could be used in MAS for
QoS. Thanks to using different types of computer networks,
we will have an opportunity to improve the agent’s work -
agent code optimization. More generally, more work needs
to be done to improve an agent's statistical algorithms in the
analytic module, which are used to generate the policies by
the agent.
REFERENCES
[1]
J. C. Spohrer, S. K. Kwan, and H. Demirkan,"Service science:
on reflection," in New Business Models and Value Creation:
A Service Science Perspective, L. Cinquini, A. Di Minin, and
R.Varaldo, Eds. Milan: Springer , 2011, pp.7-24.
[2]
H. Demirkan, J. C. Spohrer, and V. Krishna, "Introduction of
the Science of Service Systems" in The Science of Service
Systems, H. Demirkan, J.C.Spohrer, and V. Krishna, Eds.
New York: Springer, 2011, pp. 1-13.
[3]
"ITIL Service Strategy", London: TSO, 2007.
[4]
"Best Practice for Business Perspective: The IS View on
Delivering Services to the Business, ITIL The key to
Managing IT Services", London: TSO, 2004.
[5]
T. Tlhong, J. S. Reeve, "Modeling and Management of
Service Level Agreements for Digital Video Broadcasting
(DVB) Services," in Self-organizing Systems, D.Hutchison,
R.H.Katz, Eds. Berlin: Springer, 2007, pp. 288-294.
[6]
J. Happe, W. Theilmann, A. Edmonds, K. T. Kearney, A
Reference Architecture for Multi-Level SLA Management,
Service Level Agreements for Cloud Computing, P. Wieder,
J. M. Butler, W. Theilmann, R. Yahyapour (eds.) Springer
New York, 2011, pp. 13-26.
[7]
A. Tenschert, I. Kotsiopoulos, B. Koller, "Text-Content-
Analysis
based
on
the
Syntactic
Correlations
between
Ontologies" in
Economic Models and Algorithms for
Distributed Systems, D. Neumann, M. Baker, J.Altmann,
O.F.Rana, Eds. Basel: Birkhauser, 2010 , pp. 161-180.
[8]
Ch. Zeginis, "Monitoring the QoS of Web Services using
SLAs
-
Computing
metrics
for
composed
services",
University
of
Crete,
Computer
Science
Department,
Heraklion, March 2009, available December 2013 at http://
www.csd.uoc.gr/~zegchris/master_thesis.pdf.
[9]
E. Badidi, "A Cloud Service Broker for SLA-based SaaS
Provisioning," Proceedings of International Conference on
Information Society (i-Society 2013) Shoniregun Ch.A. IEEE
Toronto Section, Toronto, 2013, pp. 64-69.
[10] "SLA@SOI, Empowering the Service Economy with SLA-
aware Infrastructures, Deliverable D.A5.a", 2009, available
January 2014 at http://sla-at-soi.eu/.
[11] V. Deora, J. Shao, W. A. Gray, N. J. Fiddian, "A Quality of
Service
Management
Framework
Based
on
User
Expectations," in Service-Oriented Computing ICSOC 2003,
LNCS 2910 M. E. Orlowska, S. Weerawarana, M. P.
Papazoglou, J. Yang, Eds. Berlin: Springer-Verlag, 2003, pp.
104–114.
[12] Ch. Zeginis, "Monitoring the QoS of Web Services using
SLAs
-
Computing
metrics
for
composed
services",
University
of
Crete,
Computer
Science
Department,
Heraklion, March 2009, available December 2013 at http://
www.csd.uoc.gr/~zegchris/master_thesis.pdf.
[13] T. Thiadens, Manage IT! Dordrecht: Springer, 2005.
[14] Information technology - Quality of service: Framework,
International Standard, ISO/IEC 13236: 1998 , Geneve.
[15] W.
C.
Hardy,
QoS:
Measurement
and
Evaluation
of
Telecommunications Quality of Service, Chichester: John
Wiley and Sons, Ltd. 2001
[16] D. Sislak, P. Volf, M. Pechoucek: “Agent-Based Cooperative
Decentralized
Airplane-Collision
Avoidance”
in
IEEE
Transactions on Intelligent Transportation Systems, vol. 12,
no.1, 2011, pp. 36-45.
[17] K. Tumer, A. Agogino, “Distributed Agent-Based Air Traffic
Flow Management” in IFAAMAS, 2007, pp. 330-337.
[18] T. O. Paulussen, et al.: “Agent-Based Patient Scheduling in
Hospitals”, Multiagent Engineering. Theory and Applications
in Enterprises, S. Kirn, O. Herzog, P. Lockemann, O. Spaniol:
Springer 2006, pp. 255-275.
[19] W. Kamieniecki, „Konkurencyjnosc dynamicznego modelu
Quality
of
Service”
in
Konkurencyjnosc
podmiotow
gospodarczych
w
warunkach
niepewnosci,
WSZMiJO,
Katowice 2011, pp. 4-8.
[20] M. Liu, S. Xu, S. Sun, “An agent-assisted QoS-based routing
algorithm for wireless sensor networks” in Journal of
Network and Computer Applications, vol. 35, issue 1, 2012,
pp. 29-36.
[21] T. Rajendran, P. Balasubramanie, “An agent-based dynamic
web service discovery framework with QoS Support” in
International Journal of Engineering Research and Industrial
Applications, vol. 2, no V, 2009, pp. 1-13.
[22] S. S. Manvi, P. Venkataram, “QoS management by mobile
agents in multimedia communication” in Database and Expert
Systems Applications, 2000. Proceedings. 11th International
Workshop on, IEEE, 2000, pp. 407-411.
[23] G. A Pall, Quality Process Management: Prentice-Hall, 1987
96
Copyright (c) IARIA, 2014.     ISBN:  978-1-61208-365-0
INFOCOMP 2014 : The Fourth International Conference on Advanced Communications and Computation

