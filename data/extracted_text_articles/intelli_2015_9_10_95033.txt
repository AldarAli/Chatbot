Self-organising Smart Components in Advanced Manufacturing Systems
Rui Pinto, João Reis, Ricardo Silva, Vitor Sousa, Gil Gonçalves
Institute for Systems and Robotics
Faculty of Engineering of University of Porto
Porto, Portugal
e-mail: { rpinto, jpcreis, rps, vdsousa, gil }@fe.up.pt
Abstract—Virtualization of shop-floor components as a way to
foster easy access to machine information, collaboration among
shop-floor components and task execution on demand are a few
key
aspects
of
the
latest
trends
related
to
Intelligent
Manufacturing. This concept is being explored in an ongoing
European
commission
funded
project
called
Intelligent
Reconfigurable Machines for Smart Plug&Produce Production
(I-RAMP3). The goal is to shorten the ramp-up phase time by
making manufacturing systems self-aware and self-diagnosable,
increasing the reliability and responsiveness of production
systems,
and
ultimately
improving
the
European
industry
competiveness. To achieve this goal, a device virtualization was
developed for industrial equipment, such as machines and
sensors, called NETwork-enabled DEVices (NETDEVs). As a
technological background, PlugThings Framework was used for
easy sensor integration, together with Universal Plug and Play
(UPnP)
Architecture
for
device
virtualization,
enabling
standardized
communication,
dynamic
sensor
location,
collaboration and diagnostics. The main purpose of the present
paper is to describe how the collaboration between a virtualized
sensors
network
was
implemented,
and
pinpoint
all
the
advantages that come out of this.
Keywords—Wireless Sensor Networks; Intelligent Systems;
Manufacturing
Systems;
Sensor
Diagnostics
and
Validation;
Sensor Location System.
I.
INTRODUCTION
I-RAMP3 [20] is an ongoing European Project funded by
the
Seventh
Framework
Program
of
the
European
Commission.
This
collaborative
project
involves
both
academic and industrial partners from Germany, Portugal,
Netherlands, Hungary, France, and Greece. Therefore, the
vision is to improve the European Industry competitiveness by
developing technologies for smart manufacturing systems. To
achieve it, the goal is to reduce the ramp-up phase of the shop
floor equipment and manage efficiently the scheduled and
unscheduled maintenance phases, increasing at the same time
the efficiency of manufacturing. By virtualizing all shop-floor
equipment
into
an
agent-like
system,
standardized
communication
skills
and
a
layer
of
intelligence
for
collaboration between complex machines, and sensors &
actuators are introduced, improving also the plug‘n’produce
concept towards flexible smart factories. In this context, each
agent is represented as a NETDEV, where three variations
were considered: Sensor & Actuator (S&A) NETDEV; Device
NETDEV; Process Analyzer NETDEV.
The S&A NETDEV is the entity responsible to encapsulate
sensors and actuators deployed on the shop-floor, with the
intent of monitoring the
machines’ conditions and
the
surrounding environment. The Device NETDEV represents
the shop-floor machines, such as a Robotic Arm or a Linear
Axis. The Process Analyzer NETDEV, in contrast to the
previous entities, does not encapsulate a physical entity, being
instead a virtual instance responsible to monitor machines’
status
and
diagnose
the
sensor
networks’
condition.
NETDEVs have a standardized way to communicate with
each other using Device Integration Language (DIL), which is
a proprietary task-driven language created in I-RAMP3, in
order to ease the quick delivery and reception of process
information between all the virtualized shop-floor equipment.
The transparency of discovering devices in the network and
data
exchange
between
them,
using
publish-subscribe
services, is possible due to UPnP [21] as a base technology.
Sensor data is extremely important to monitor machines at
the
shop-floor
level
and
its
environmental
surrounding
conditions for condition-based monitoring, machine diagnosis
and process adaptation to new requirements. The I-RAMP3
technology allows Wireless Sensor Networks (WSNs) to
become more flexible and agile, acquiring new capabilities
that can enhance shop-floor operations, such as sensor group
collaboration, which aims for providing to the machine
aggregated information instead of quantitative data that
normally comes in form of raw format. Additionally, it allows
for
dynamic
sensor
node
location,
used
on
sensor
collaborations, to detect if sensor nodes are physically near to
each other and to the machine, for the correct interpretation of
data, and adaptation of its behavior accordingly.
In the past years, WSNs have become more explored and
applied in several domains because of the latest advances on
WSN communication protocols (such as ZigBee [22] and
others) and more reliable and long-lasting hardware. This is
mainly due to its feasibility of installation. WSNs are used
when it is difficult to use wired solutions, either because of
harsh location or a high number of sensors used. Also, they are
used due to ease of maintenance and reduced costs of cabling
[13]. Some of the advantages of WSN listed by Chen et al.
[14] include its large coverage area, fast communication via
Radio Frequency (RF), self-organisation throughout a direct
communication between entities and ubiquitous information.
As Ruiz-Garcia et al. [15] pinpoint, some of the WSN
advantages can be seen in concrete structures or in the
transportation sector, where a controlled environment needs to
be monitored in real-time. Additionally, Evans [16] presents
enablers
and
challenges,
along
with
some
contextual
applicability of WSN in a manufacturing environment.
Specifically for the industrial domain, Ramamurthy et al.
[13] developed a Smart Sensor Platform that applies the
plug’n’play concept by means of hardware interface, payload,
157
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

communication between sensors and actuators, and ultimately
allows for software update using ‘over-the-air’ programming
(OTAP). Cao [17] explored a distributed approach to put
closer sensors and actuators in a collaborative environment
using WSNs. Chen et al. [14] push this approach forward
considering the same approach, but taking into account all the
industrial domain restrictions like real-time, functional safety,
security, energy efficiency, and so forth. All these industrial
restrictions and an overview about the industrial domain was
explored and presented by Neumann [18]. In the recent past,
Chen et al. [19] tackled the Optimal Controller Location
(OCL) in the context of industrial environment.
The paper is composed of five more sections where all the
details about the present work are specified. In Section II, an
overall description about the I-RAMP3 project is done,
specifying the entities used and the communication processes.
Section III talks about the sensor collaboration functionality
where
the
communication
protocols
and
sensor
failing
handling is presented. Section IV depicts the WSN location
system used to locate the sensors on the shop-floor. In Section
V, a discussion is made based on company personnel
perspective of the system and all the functionalities developed,
and, finally, in Section VI some conclusions are drawn and
future prospects are presented.
II. INDUSTRIAL APPLICATION OF WIRELESS SENSOR NETWORK
Innovative concepts are being explored in I-RAMP3
related to WSNs and their use in the industrial domain,
implementing a higher level of complexity using entity
virtualization. With the NETDEV concept, sensors and
actuators will be equipped with standardized communication
capabilities
and
intelligent
functionalities
such
as
self-
awareness, self-diagnosis and self-organization, aiming for a
smart sensor approach. Moreover, the system should be
flexible enough to allow the integration of sensors from
various manufactures, minimizing the efforts needed by
automating this process. The PlugThings Framework [1] is
used to integrate sensors on the system and encapsulate them
into S&A NETDEVs. It is composed of 4 main modules:
Universal Gateway (UG), PlugThings Server, PlugThings
Database and PlugThings App.
As can be seen in Figure 1, each sensor node of the
network communicates directly to the gateway node, where
the
received
measurements
are
processed
on
the
UG,
converting raw data into readable form. These data is
compiled into Extensible Markup Language (XML) based
format files that are part of the Sensor & Actuator Abstraction
Language (SAAL), which is used to communicate with Sensor
& Actuator Abstraction Middleware (SAAM), where all the
intelligence related to the sensors is implemented. When the
SAAM detects that a new sensor node was connected to the
network, the corresponding S&A NETDEV is created, making
it transparent to all the entities on the network what tasks it
can perform. Since a sensor node can have multiple sensors
integrated, the corresponding S&A NETDEV will be able to
perform different tasks related with the different sensor types
of the sensor node. Basically, S&A NETDEVs will have one
functionality (execution task) to provide sensor information to
other entities per integrated physical sensor in the sensor node.
S&A
NETDEVs
can
easily
communicate
with
other
NETDEVs on the network using DIL, such as Device
NETDEVs that correspond to complex machines on the shop
floor level, and the Process Analyzer NETDEV, which
corresponds to a virtual instance that monitors sensor behavior
while in a group collaboration.
Figure 1.
I-RAMP3 Environment
A. Communication between NETDEVs
DIL
is
a
proprietary
language
used
exclusively
to
communicate between NETDEVs and it is composed of four
main XML files: NETDEV Self-Description (NSD) describes
the device capabilities in the form of a range of tasks that the
NETDEV can perform, such as goals, conditions, process
parameters values and also the physical location of the
corresponding sensor node; Task Description Document
(TDD) specifies information about a task to be requested,
specifying the goals, conditions, process parameters and the
period of the task execution or number of task repetitions;
Quality Result Document (QRD) describes the result after one
task repetition, specifying the quality that has to be achieved;
Task Fulfillment Document (TFD) is used as an acknowledge
document to the task under execution.
Figure 2.
DIL Communication
As represented in Figure 2, DIL is used every time a
NETDEV needs other NETDEVs to perform a task. Normally,
Device
NETDEVs
request
the
S&A
NETDEVs
task
executions
for
measurement
of
certain
environmental
variables, during a given number of cycles, by sending a TDD.
If the S&A NETDEV is capable of performing such requested
task, it will give a positive feedback via TFD, and answering
with QRDs containing the measurement results, during the
158
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

number of cycles requested. If the S&A NETDEV is not
capable of performing the task or it is already busy performing
a task for other NETDEV, it will deny the task sending a
denial TFD back to the Device NETDEV.
B. S&A NETDEV Task Execution
At this stage, S&A NETDEVs can execute two different
tasks,
both
usually
requested
by
a
Device
NETDEV:
Measurement and Group Formation.
A Measurement task is used when the Device NETDEV
needs the measurements of a single sensor node. Therefore, it
should specify the desired type of sensor to receive the
corresponding sensory data, the frequency of the readings,
sensor accuracy, coverage radius of the sensor in spatial units
(if applicable) and the number of cycles to execute the task.
A Group Formation task is requested when the Device
NETDEV aims to collect several measurements at different
locations, which means having multiple sensors executing the
same task at the same time. In this specific task, the S&A
NETDEV that receives the task is responsible to choose
possible S&A NETDEVs candidates to join the group - based
on the task parameterization and the sensor location - allowing
for a more distributed approach in terms of collaboration,
rather
than
a
peer-to-peer-like
solution,
implying
a
communication with all the S&A NETDEVs from a group
instead of only one. In terms of parameterization, beside the
desired type of sensor to receive the specific data, frequency
of measurements, sensor accuracy and the number of cycles to
perform the task, the Group Formation parameterization must
also specify the number of sensors intended in the group.
With this collaboration task, there are two main benefits
from the task requester perspective. Assuming a Device
NETDEV wants to collect and analyze data from multiple
S&A NETDEVs, first, it avoids communicating with several
S&A NETDEVs at the same time to collect data, since the
responsibility to form a group is on the S&A NETDEV, and
second, the S&A NETDEVs can process all sensor data and
provide a statistical description, passing the data analysis
complexity to the group side. This means that the requester
does not need to know any statistical technique to process the
data from multiple sensor entities on the network.
III. SENSOR & ACTUATOR NETDEV COLLABORATION
A. S&A NETDEV Group Formation
S&A NETDEV Group Formation is a methodology used
to improve the communication performance and reduce
complexity between Device NETDEVs and S&A NETDEVs
while executing tasks with a sensor collaboration nature. On
the shop floor level there can be thousands of sensors, and
therefore, the flow of information can be very high when
requesting tasks. The group formation methodology is a more
distributed approach that allows S&A NETDEVs to provide a
more aggregated information when the task requested from a
Device NETDEV requires measurements from more than one
sensor node. Instead of establishing communication with
every S&A NETDEV required, the Device NETDEV will
have a single point of communication with one S&A
NETDEV, which is responsible to form and manage a S&A
NETDEVs group.
The main premise for the Group Formation is that every
S&A NETDEV is capable of forming a group. When a Device
NETDEV requests a S&A NETDEV to form a group with a
certain number of sensors, this S&A NETDEV is responsible
to search in the network (communicating via DIL) for
available S&A NETDEVs that are capable of performing the
same task and the corresponding sensor nodes are physically
located in the same production area. If the requested number
of S&A NETDEVs has joined the group, the S&A NETDEV
responsible to form it becomes the group leader, called Super
S&A NETDEV, and the group is formed. Internally in the
group, each S&A NETDEV will collect measurements during
the requested number of cycles and the Super S&A NETDEV
is responsible, not only to gather all sensor data, but also
process them to a more meaningful value, to be sent
afterwards to the Device NETDEV. When task execution has
ended,
the
Super
S&A
NETDEV
will
terminate
the
communication with the Device NETDEV and release the
S&A NETDEVs from the group, which become available to
execute other task requests.
Figure 3.
Group Formation Schema
An additional NETDEV entity represented in Figure 3 is
the Process Analyzer NETDEV, which is created by the Super
S&A NETDEV when the group is created. As previously
mentioned, this entity is virtual, not representing any device
on the shop-floor, and is responsible to apply the Spatial
Correlation technique [11][12] to assess the condition of the
group based on the sensor data generated. This entity collects
the sensor data from each element of the group and identifies
the most devious dataset by comparing the data sets from all
group members. If the deviation is greater than a predefined
threshold, then the sensor node is classified as probably
malfunctioning, so the Process Analyzer reports to the Super
S&A NETDEV, via DIL, the existing of a malfunctioning
group member at that time so it can make a decision about the
faulty sensor node(s) and maintain the group as consistent and
reliable as possible.
159
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

B. S&A NETDEV Group Formation Fail
Having one single point of communication to interact with
all S&A NETDEVs for a task execution is a good way to
reduce
complexity
and
increase
the
performance
of
communication. On the other hand, relying only on one single
point of communication increases the vulnerability, in case the
task execution fails on that point. Hence, there are two failing
scenarios on a group: 1) The Super S&A NETDEV fails or 2)
One or more S&A NETDEVs from the group fail.
Figure 4.
Group Formation - S&A NETDEV Failure
If the Super S&A NETDEV fails, the single point of
communication supporting the interaction between the Device
NETDEV and S&A NETDEVs from the group is lost. There
will be no more conditions to continue with the task execution,
so the task stops and the group is disaggregated. In the
termination process, the Super S&A NETDEV is responsible
to change the process state of the remaining group members,
so they can stop executing the measurement tasks for the
group, becoming available to perform new tasks upon request
from other NETDEVs.
If a S&A NETDEV from the group is failing, the Super
S&A NETDEV is still working correctly, so the group isn’t in
danger of collapsing and the communication with the Device
NETDEV is not affected. In this case, the Super S&A
NETDEV is responsible to replace the failing S&A NETDEV
for a new one able to join in. While the replacement process
occurs, the collected data from the group will be less accurate,
because the results sent to the Device NETDEV don’t
contemplate all the requested NETDEVs, due to a temporary
deficit of one S&A NETDEV. Figure 4 depicts the process
when the S&A NETDEV 3 fails and is replaced by S&A
NETDEV 4.
IV. WSN LOCATION SYSTEM
WSNs applied on industry are used to monitor different
production cells on the shop-floor, consisting of spatially
distributed sensor nodes, which are equipped with several
sensors to monitor the environmental conditions surrounding
the cells where they are located. If a machine, located in one
of the production cells needs information about, e.g., the
luminosity conditions surrounding the cell to execute a given
task, the machine may require from available sensor nodes
placed in that location, valuable information for process
parameterization.
In the I-RAMP3 context, the Device NETDEV that is
requesting the task should search on the network for available
S&A NETDEVs with the required capabilities (described in
the
NSD),
e.g.,
measuring
luminosity
conditions
and,
consequently
can
form
a
sensor
group
that
measures
luminosity. Facing a request for a group formation task from a
Device NETDEV, the S&A NETDEV will only accept the
task if it can fulfil the required parametrization and it is
located on the same area as the machine that requested the task
in the first place.
Every NETDEV is characterized by its task execution
capabilities (NSD) and the area on the shop-floor where the
correspondent equipment is located. The location on S&A
NETDEVs can be calculated dynamically on sensor nodes that
are using XBee communication protocol, using the incoming
signal strength of the sensor node on several beacons for
position estimation. Beacons are physical entities located in
known strategic positions of the shop-floor, mainly in the
limits of shop-floor sections like cells or production lines and
are responsible by receiving messages from sensor nodes,
assess their signal strength and position in order to assign the
current relative location to S&A NETDEVs.
A. Methodology
Location systems on WSN is a very active research area
and there is no universal solution for this topic. The main goal
is to identify the physical location of a sensor node on the
WSN. Each approach of node location is fitted to a specific
operating environment, such as indoors or outdoors spaces like
urban areas, forests or even underwater. In the industrial
context, estimating the node positions in meters is not
important, as the main goal is to find in which section on the
shop floor the sensor nodes are located.
The algorithms for node location are made of two main
components: 1) Estimation of distance or angle between two
nodes and 2) Calculation of the node position. First, the
distance or angle between two nodes must be estimated to be
used on the calculation of the node position related to one or
more beacons. Then, the information about the distance and
the position is used by an algorithm to determine the node’s
location.
For distance estimation between the sensor node and the
beacons, the Received Signal Strength Indicator (RSSI)
method is used [2]-[4], which is a method that estimates the
distance between two nodes based on the strength of the signal
received on the gateway and a propagation model of the
signal, in this case Free Space model [8][9], to convert the
signal strength into distance. Since the accuracy provided by
RSSI is enough for what it’s intended in this scenario, this is
the cheapest method to be implemented when compared to
time delay and time difference based methods or signal
angle/direction estimation methods, because measuring the
signal strength doesn’t required any extra hardware, such as
transmitters and receivers of ultra-sounds, like in the Time
Difference of Arrival (TDOA) [3] or specific antennas, like in
160
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

Angle of Arrival (AOA) / Direction of Arrival (DOA) [6][7],
and no need for clock synchronization on the nodes, like
required on Time of Arrival (TOA) / Time of Flight (TOF)
[5].
The radio signal is highly susceptible to noise [10] caused
by reflection, refraction, diffraction, scattering, fading, inter-
symbol interference and shadowing, resulting in distance
deviations in the end. This can be minimized by filtering the
signal using a moving average to better approximate the path
loss logarithmic curve. The path loss coefficient is determined
dynamically
using
path
loss
log-distance
model
using
measurements of RSSI between beacons, using (1), where
ܲ(݀) is the RSSI in dBm, ܲ(݀଴) is the RSSI at a fixed
reference distance from the transmitter ݀଴, ݊ is the path loss
coefficient, ܺఙ is a normal random variable used to modulate,
݀ is the distance in meters between transmitter and receiver,
்ܲ௑ is the transmission power andܣ is the signal attenuation.
Manipulating the formula, first the path loss coefficient is
calculated using (2), where the RSSI and distance are between
beacons. Then, (3) is used to calculate the distance between a
sensor node and a beacon.
ܲ(݀) = ்ܲ௑ +ܣ−10݊×݈݋݃ ቀ
ௗ
ௗబቁ + ܺఙ  
(1) 
 
݊ =
|௉(ௗబ)ି௉(ௗ)|
ଵ଴ ୪୭୥ ௗ×ଶ                                 (2) 
 
݀ = ݀଴ × 10
|ು(೏బ)షು(೏)|
భబ೙
 
                     (3) 
The
node
position
is
calculated
using
the
distance
estimation of the three anchor nodes closest to the sensor node
with the Bounding Box method [2]. Bounding Box is a
variation of the trilateration, which uses the position of three
anchor nodes, with known positions and distances between
them, to calculate the position of the sensor node. The position
of the node is calculated by the interception of three circles,
each one is centered on the anchor node and with radius equal
to the distance to the unknown position node. With Bounding
Box, the calculation complexity is reduced by replacing the
circles by squares. The intersection of the different squares
results on a rectangle, where the center is the estimated
position of the node.
V. DISCUSSION
As discussed several times throughout the present paper,
the use of WSNs is referred as a key element for the todays
Manufacturing Systems, pushing forward the plug’n’produce
concept,
which
is
achieved
by
virtualizing
shop-floor
equipment into NETDEVs that can readily describe and detail
their own capabilities and announce themselves into the
network
to
other
NETDEVs.
NETDEVs
are
able
to
collaborate and execute shop floor tasks on demand, and
therefore deliver an easy and flexible solution for the
industrial domain.
As described, the collaboration between sensors by means
of Group Formation task available at the S&A NETDEV
entity is, not only a way of reducing the communication
entropy when several measurements from neighbor sensors
need to be collected, but it also provides higher information
about a set of sensors. Additionally, the Process Analyzer
NETDEV provides feedback about the condition of the WSN
making use of Sensor Validation techniques already explored
in the literature and tested in manufacturing environments.
Since all these functionalities refer to the software level of
abstraction as a way of closing the loop for a ready solution to
be used, also the hardware level was considered by means of
location device functionality. This allows to know, with a
certain degree of precision, the location of sensors in a
restricted area, influencing and guiding how sensors should
organize and collaborate among themselves, ensuring the
system reliability and effectiveness.
Considering now a user perspective like Manufacturing
System Designers or Technical Personnel of a Manufacturing
company, there are benefits that should be highlighted. Based
on the
fact that
most
manufacturing environments
are
currently using wired sensors instead of WSN, the cabling
complexity and savings in terms of time and cost can be
reached. This means that no sensors need to be connected to a
PLC or Machine Controller, which can be challenging due to
the amount of sensors used and harsh locations. On the other
hand, the easiness to integrate a new sensor into the system is
achieved by only switching on a sensor node, which is
automatically recognized as an S&A NETDEV becoming
ready for use. This is referred as the plug’n’produce concept,
that allows to rapidly react to any foreseen and unforeseen
event, like sensor replacement, sensor addition for redundancy
purposes in critical environment or in the case of sensor
removal when disassembling a production line.
Another advantage of this approach is related with all the
functionalities already available from a dedicated framework,
releasing
the
user
from
being
concerned
about
sensor
collaboration and data processing. He only needs to take care
of sensor integration using the S&A NETDEV template
solution. From that point, information can be easily accessed,
monitored and diagnosed. Thus, it is not required for the final
user to know in detail, and mainly, to implement from scratch
a WSN diagnostics system, but instead, he can focus on what
to do when a certain malfunction has occurred and how to
relate sensor group information with the product life-cycle in
terms of process parameterization. This point is enhanced with
the automatic process of forming, deforming and reacting to
sudden changes in a sensor group, based on a certain task
parameters and sensor location. Since the communication
between NETDEV entities is based on a standardized task-
driven XML language – DIL - it’s very easy to implement a
new
system
that
encapsulates
a
machine,
capable
of
communicating with these entities and easily interpret sensor
information for process monitoring.
The main advantage of this is the formation of a self-
reconfiguration
capability
when
facing
sudden
sensor
breakdown. A remedy for the breakdown diagnosed by the
Process
Analyzer
NETDEV
is
embedded
in
the
S&A
NETDEVs
collaboration,
capable
of
handling
a
WSN
161
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

restructure, as described in the Group Formation Fail sub-
section. In a real manufacturing environment situation, the
shop-floor operator only needs to look for the broke sensor
(information already provided by the Process Analyzer
NETDEV) and replace it by a new one at the same location as
the broke one, and automatically the sensor group will
reconfigure itself to take on board the new sensor, not being
necessary to write or rewrite any lines of code or to disconnect
and connect wires.
These functionalities, together with the automated process
for diagnosing and logically organizing a sensor group, plus
the fact that a standardized communication language is used,
are the cornerstones for intelligent WSN in the factories of the
future.
VI. CONCLUSIONS AND FUTURE WORK
Innovative intelligent systems have driven technology for
years, and industry has followed this track as a way to
improve reliability, responsiveness when facing requirements
changes from customer side or due to production downtime,
efficiency to minimize costs and effectiveness to increase
production quality.
All these goals made the guidelines for the S&A NETDEV
development, with functionalities to share information, self-
organize, collaborate as a sensor group by using a location
system for identifying the positioning of motes at the shop-
floor
level.
Therefore,
taking
advantage
of
these
functionalities can greatly influence the decrease of ramp-up,
scheduled maintenance and unscheduled maintenance times,
resulting on a competitive advantage in current harsh and
fluctuating markets.
The main developments presented throughout the paper
depict that, in terms of WSNs applicability in industry, there
are open opportunities to explore, and much can be done to
improve the currently used systems. Despite all functionalities
presented in this paper, the clear benefits it can bring to the
shop-floor and all the experience acquired from I-RAMP3, the
acceptance of WSNs into industrial context needs to be
worked out, by performing more pragmatic and real test-case
demonstrators. The present work is a clear step forward into a
reliable and flexible approach for industrial WSNs, aiming for
paving the way into more intelligent manufacturing systems.
ACKNOWLEDGMENT
This
research
was
supported
by
project
I-RAMP3
(FoF.NMP.2012-3) – Intelligent Network Devices for fast
Ramp-up – funded by the European Commission under the
Seventh
Framework
Programme
for
Research
and
Technological Development.
REFERENCES
[1] G. Gonçalves, J. Reis, R. Pinto, M. Alves, and J. Correia "A
step forward on Intelligent Factories: A Smart Sensor-oriented
approach." Emerging Technology and Factory Automation
(ETFA), 2014 IEEE. IEEE, 2014. pp. 1-8.
[2] K. Vandenbussche "Fine-grained Indoor Localisation Using
Wireless Sensor Networks." Signal, 75, 2005, p. 70.
[3] A. Savvides, C. C. Han, & M. B. Strivastava "Dynamic fine-
grained
localization
in
ad-hoc
networks
of
sensors."
Proceedings of the 7th annual international conference on
Mobile computing and networking. ACM, 2001, pp. 166-179.
[4] P.
Bahl,
V.
N.
Padmanabhan,
&
A.
Balachandran
“Enhancements to the RADAR user location and tracking
system.” technical report, Microsoft Research, 2000.
[5] Y. Shang & W. Ruml "Improved MDS-based localization."
INFOCOM 2004. Twenty-third AnnualJoint Conference of the
IEEE Computer and Communications Societies. Vol. 4. IEEE,
2004, pp. 2640-2651.
[6] D. Niculescu & B.Nath "Ad hoc positioning system (APS)."
Global
Telecommunications
Conference,
2001.
GLOBECOM'01. IEEE. Vol. 5. IEEE, 2001, pp. 2926-2931.
[7] N. B. Priyantha, A. K. Miu, H. Balakrishnan, & S. Teller "The
cricket
compass
for
context-aware
mobile
applications."
Proceedings of the 7th annual international conference on
Mobile computing and networking. ACM, 2001, pp. 1-14.
[8] T. L. Singal Wireless communications. Tata Mcraw Hill
Education Private Limited, 2010.
[9] C.
Levis,
J.
T.
Johnson,
& F.
L.
Teixeira Radiowave
propagation: physics and applications. John Wiley & Sons,
2010.
[10] A. F. Molisch Wireless communications. John Wiley & Sons,
2007.
[11] A. B. Sharma, L. Golubchik, and R. Govindan "Sensor faults:
Detection methods and prevalence in real-world datasets." ACM
Transactions on Sensor Networks (TOSN), 6(3), 2010, p. 23.
[12] J.
Ravichandran
and
A.
I.
Arulappan
"Data
Validation
Algorithm for Wireless Sensor Networks." International Journal
of Distributed Sensor Networks 2013 (2013).
[13] H. Ramamurthy, B. S. Prabhu, and R. Gadh, “Wireless
industrial
monitoring
and
control
using
a
smart
sensor
platform,” Sensors Journal, IEEE, 7(5), 2007, pp. 611-618.
[14] J. Chen, X. Cao, P. Cheng, Y. Xiao, and Y. Sun “Distributed
Collaborative Control for Industrial Automation With Wireless
Sensor and Actuator Networks”, Industrial Electronics, IEEE
Transactions on, 57(12), 2010, pp. 4219-4230.
[15] L. Ruiz-Garcia, L. Lunadei, P. Barreiro, and I. Robla “A
Review of Wireless Sensor Technologies and Applications in
Agriculture and Food Industry: State of the Art and Current
Trends”, Sensors, 9(6), 2009, pp. 4728-4750.
[16] J.
J.
Evans
“Wireless
sensor
networks
in
electrical
manufacturing”, Electrical Insulation Conference and Electrical
Manufacturing Expo, 2005. Proceedings. IEEE, 2005, pp. 460-
465.
[17] X. Cao, J. Chen, Y. Xiao, and Y. Sun “Distributed collaborative
control using wireless sensor and actuator networks,” Future
Generation Communication and Networking, 2008. FGCN'08.
Second International Conference on. IEEE, 2008, pp. 3-6.
[18] P. Neumann “Communication in industrial automation—What
is going on?.” Control Engineering Practice, 15(11), 2007, pp.
1332-1347.
[19] K. Xin, X. Cao, J. Chen, P. Cheng and L. Xie “Optimal
controller
location
in
wireless
networked
control
systems”, International
Journal
of
Robust
and
Nonlinear
Control, 25(2), 2015, pp. 301-319.
162
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

[20] Intelligent Network Devices for fast Ramp-up: I-RAMP3.
[Online]. Available from: http://www.i-ramp3.eu/ 2015.10.02
[21] A. Presser, et al. “Upnp device architecture 1.1.”, UPnP Forum,
22, 2008.
[22] P. Baronti, et al. “Wireless sensor networks: A survey on the
state of the art and the 802.15.4 and ZigBee standards.”,
Computer Communications, 30(7), 2007, pp. 1655-1695.
163
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-437-4
INTELLI 2015 : he Fourth International Conference on Intelligent Systems and Applications

