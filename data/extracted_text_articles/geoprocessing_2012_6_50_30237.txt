A Heuristic-based Approach for Merging Layers Information in a GIS
Wilfried Segretier, Martine Collard, Enguerran Grandchamp
University of the French West Indies and Guiana
Laboratory of Math´ematiques, Informatique et Applications (LAMIA)
Pointe-`a-Pitre, Guadeloupe, France
{wsegreti,mcollard,egrandch}@univ-ag.fr
Abstract—Geographic Information Systems (GIS) help ad-
dressing geographical and environmental issues by providing
information about a region or a city as a set of maps (layers),
each one displaying information about a given theme like
roads, vegetation, tourist spots or museums for instance. By
combining different layers on a region, one can associate a
given area to characteristics from their related themes. Indeed,
the information from two or more layers might be merged and
then transformed into a new layer as deﬁned in map ”algebra”.
When a theme vocabulary is organized as a taxonomy with
concepts linked by is-a relationships, there are different ways to
annotate an area with a concept depending on the level selected
into the layer taxonomy. In this paper, we present an heuristic-
based approach for an optimal merging of such layers in a GIS.
Our goal is to generate new layers which sum up information
from several themes in a most useful way. Two optimization
criteria are considered, the average size of resulting areas and
the average informative value of their resulting annotation. We
demonstrate the validity of the proposed solution, ﬁrstly, on a
formal example, and then, on a real world application.
Keywords-Geographic Information Systems; Genetic algo-
rithms; Geographic Knowledge Discovery.
I. INTRODUCTION
Geographic Information Systems (GIS) [1] are providing
powerful tools to capture, store, query, analyze and display
geographically referenced data. They have proved to be par-
ticulary helpful in numerous domains thanks to their ability
to handle and process multiple sources of information about
geographic (or spatial) regions. They are increasingly used
to support experts such as decision makers, geoscientists or
environmental engineers for instance in their jobs.
In GIS, data are traditionally represented according one
of the two standard systems, namely raster or vector systems
and are stored as sets of maps (or layers) among which each
one is dedicated to a theme. Thematics layers are also called
projections since they project the real landscape according
to a given theme such as streets, buidings, vegetation,
precipitations or elevation. Layers can overlay one on the
top of the others to form computer equivalents of physical
maps. One research issue has been the problem of combining
projections that do not line up. Tomlin [2] deﬁned the
Map Algebra, a vocabulary and conceptual framework for
classifying ways to combine map data and produce new
maps deﬁned by raster data sets.
In this paper, we address the problem of combining
layers too, but we investigate its semantic part related to
themes. We consider a layer theme as a formal concept and
we point out how hierarchies of concepts can be combined
while combining layers. The concept paradigm has been
commonly deﬁned as a cognitive, abstract or symbolic
representation of real objects or situations. Concepts may
be built from or be part of others ones. They are often
organized in a hierarchical structure that is the cornerstone
of domain taxonomies and ontologies. For example, the
concept of ”vegetation” can be extended by sub-concepts
such as ”tropical rainforest” or ”boreal forest”. Concepts
may annotate features, points, lines and areas on a map
at different precision levels and according to their level in
the hierarchy. For instance, lines can be annotated in the
layer ”road” by different sub-concepts such as ”highway”,
”national highway” or ”trunk road” while surfaces can be
annotated in the ”soil” layer by sub-concepts like ”rock”,
”grass” or ”sand”. As earliest works on ontology-based GIS
we can cite the proposition of Fonseca and Egenhofer [3].
In this work, we focus on concepts annotating areas.
As for many other ﬁelds, the volume of data available in
GIS has been growing signiﬁcantly over the last decades.
Simultaneously, techniques allowing to treat these data have
been widely developped and improved. The Geographic
Knowledge Discovery (GKD) domain [4] refers to the
extension of Knowledge Discovery from Databases (KDD)
where the data-objects are spatially referenced. It includes
geographic data-mining, data selection, data preprocessing,
data reduction, data enrichment and so on. Issues such
as spatial planning, natural resources monitoring or risk
prevention require to combine numerous thematic layers
in order to produce useful information. GKD tools are
thus ﬁtted for such issues. When the number of related
spatial areas and available layers is large, exhaustive
approaches for the combination are not affordable due
to their computational complexity. Heuristics such as
stochastic methods provides alternatives to address this
problem.
The purpose of this work is to present an heuristic-based
190
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

approach for optimizing the merge of information sources
related to different layers in a GIS. We propose to explore
the possibilities offered by multiobjective genetic algorithms
(GA) which are strong tools commonly used to address
such complex problems.
In a ﬁrst time, we give some deﬁnitions that formalize
the context and the issue. They are inspired from Galton’s
work [5] on aggregation and overlay algebraic operations
and are ﬁtted to layers associated to hierarchies of concepts.
These operations are deﬁned to formalize the production of
new layers. The aggregation allows to sum-up information
in a layer while overlay permits to merge them. A solution
of the GA is deﬁned as a set of aggregate layers designed
to be overlayed in order to evaluate the quality of the
resulting layer according to two quality criteria.
The present work is a continuation of [6], which proposes
to use satellite images (raster) as an information source
in order to produce new information layers and then to
combine them with other information layers.
This paper is organized in ﬁve sections. Section II presents
formal deﬁnitions on space, layers and geographical opera-
tions that are used further on. Section III is devoted to our
choices about the genetic algorithm involved. Section IV
presents some of the experimental results obtained both on
a synthetic dataset and on a realistic case dataset. Then,
Section V gives the conclusions and perspectives of this
study.
II. FORMALIZATION AND DEFINITIONS
In order to precisely deﬁne the context and the problem
that we address, we propose in this section, a formal spatial
framework.
A. Space
We consider the geographical space as an euclidean
plane S. We use the term of surface to refer to any euclidean
surface, i.e., two-dimensional topological manifold. Thus, a
surface z is a set of points on the plane. We note Z(S) the set
of all surfaces in the space S (including the empty surface ∅).
Z(S) ⊆ P(S), where P(S) is the power-set of S. Figure 1
ﬁgures an example with ﬁve surfaces z1, z2, z3, z4, z5.
B. Layers
In a similar way than Galton [5], we deﬁne a layer over
a space S as an eventually partial function f : S → V ,
where V is the value set of the layer. V may be ordered,
unordered, ﬁnite, inﬁnite, continuous, discrete, numeric,
symbolic and so on. When it is unordered, discrete and
symbolic, we call its elements concepts. In the following,
we focus on such concept sets.
Figure 1. Surfaces on an euclidean plane
We say that a point p ∈ S (resp a surface z ∈ Z(S)) is
annotated by a concept v ∈ V in the layer f if:
f(p) = v (resp ∀p ∈ z, f(p) = v). By extension, if the
surface z is annotated by the concept v, we write f(z) = v.
We assume that it exists a unique tessellation of the space
deductible from the function f of a layer that is maximal,
i.e., such that there is no surface annotated by a concept c
containing a given surface annotated by the same concept.
Given these deﬁnitions, it is possible to deﬁne some
operations which can combine one or more layers in new
ones.
The aggregation operation is deﬁned by Galton [5] as fol-
lows. Given an equivalence relation E on V , the aggregation
operation f/E is deﬁned by the layer which annotates each
point p by the equivalence class of f(p). We have:
f/E : S → V/E,
p −→ [[f(p)]]E,
where V/E is the quotient set of V under E and [[f(p)]]E
is the equivalence class of f(p).
We extend this deﬁnition toward a hierarchical axis.
Hierarchical aggregation
We deﬁne the hierarchical aggregation by an aggregate
layer as follows. Given a hierarchy H = {H1, H2, ..., Hg}
on V , we consider subsets VH of H such as:
• ∀ Hvi, Hvj ∈ VH × VH , Hvi ∩ Hvj = ∅
and
• ∀x ∈ V , ∃!i ∈ {1, 2, ..., g} so as x ∈ Hvi
Thus, each VH is a partition of V . The Figure 3 illustrates
examples of such partitions where H
is the hierarchy
showed on Figure 2.
Let ℜ be the equivalence relation on V which quotient
set is VH . We deﬁne an aggregate layer f/ℜ under the
hierarchy H as:
f/ℜ : S → VH
p −→ [[f(p)]]ℜ
191
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

Figure 2. Example of hierarchy on a set
Figure 3. Examples of partitions of H
Layers Overlay
Given n layers f1 : S → V1, f2 : S → V2, ..., fn : S → Vn
and g : V1 × V2 × ... × Vn → Vf, the overlay operation
allows to deﬁne the new layer:
fg : S → Vf
p −→ g(f1(p), f2(p), ..., fn(p))
If x1 ∈ V1, x2 ∈ V2, ...xn ∈ Vn, we note x1x2...xn the
element of Vf associated with x1, x2, ..., xn, i.e.,
if f1(p) = x1 and f2(p) = x2 and ... and fn(p) = xn then
fg(p) = x1x2...xn.
If a function fi deﬁning a layer is partial on S, we note ∅ the
image of the elements of S for which fi is not deﬁned. The
symbol ∅ is not represented in the previous notation so if
f2(p) = ∅, we have f(p) = g(f1, f2, f3..., fn) = x1x3...xn.
Depending on the function g, the overlay type can be
union, intersection, symmetrical difference, identity, etc. In
the following we only consider the union overlay so that:
∀X = (x1, x2, ..., xn), g(X) = x1x2...xn. Figure 4 shows
an illustration of the union overlay.
Figure 4. Union overlay on surfaces A,B,C,D of the same map
Union overlay on surfaces
It is assumed that the conjunction of surfaces is either a
surface or the emptyset i.e.,
∀(s, s′) ∈ (Z(S))2, s ∩ s′ ∈ Z(S).
The union ∪ is deﬁned as follows. Let us consider the
layers: f1 : S → V1 and f2 : S → V2 and s ∈ Z(S),
• if ∄s′ ∈ Z(S) annotated by f2 with s ∩ s′ ̸= ∅, then
(f1 ∪ f2)(s) = f1(s),
• if ∃(s′
1, ..., s′
p) ∈ Z(S)p with each s′
i annotated by f2
and s′
i ∩ s ̸= ∅, then ∀i ∈ {1, ..., p} (f1 ∪ f2)(s′
i ∩ s) =
f1(s′
i ∩ s)f2(s′
i ∩ s).
C. Optimization problem
Let us take:
• S an euclidean (geographical) plane,
• n layers f1 : S → V1, f2 : S → V2, ..., fn : S → Vn,
The optimal union layer selection problem is a bi-objective
combinatorial optimization problem which consists in ap-
plying an aggregation to m layers among f1, ..., fn in order
to obtain the union overlay layer f : S → V from these
aggregate layers while trying to:
• maximize the average area of the resulting surfaces
annotated by a concept in the union layer f,
• maximize the total number of concepts (i.e., consider-
ing all the input (aggregated) layers) that annotate these
resulting surfaces in the overlay.
Obviously, these two objectives are antagonistic since the
more concepts are numerous in layers, the less the resulting
average area is large.
These two objectives can be treated using a scalar
approach that requires to set parameters and return only
one solution to the end-user. However, we chose to treat
them separately in a multi-objective optimization approach
in order to beneﬁt from a diversiﬁed choice of solutions.
We have conducted experiments in an incremental way:
1) First, we have not considered any hierarchy on con-
cepts. From a quantitative point of view, this approach
can be very interesting as it allows to attain every
192
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

possible instance of aggregation in each layer, thus it
results in optimal surface areas in the overlay layers.
However, the results obtained may not always be use-
ful for end users because some very distant concepts
may be associated in a same class causing semantic
inconsistencies. In the following we will refer to this
method as the free aggregation method,
2) Secondly, we have followed a method consisting ﬁrstly
in determining a hierarchy Hi under V and then
achieving a hierarchical aggregation. Since the de-
ﬁned hierarchy is semantically sound, this method
allows to eliminate the major drawback of the previous
method, namely the lack of consistency of some
solutions. In the following, we refer to this method
as the hierarchical aggregation method,
Whatever the chosen method, the search for instances of
aggregation for m among n layers can be summed up to a
combinatorial search:
• In the ﬁrst case, the total number of possibilities for
a layer corresponds to the number of partitions of the
concept set. It is given by the Bell number recursively
deﬁned as:
Bn+1 =
n
X
k=0
n
k

Bk
with n the number of elements of the set. Then the total
number of possibilities N1 is given by the product of
each layer number of possibilities.
• In the second case, the number of possibilities for a
layer depends on the structure of the tree underlying
the chosen hierarchy. It can be deﬁned recursively for
each node n as:
N2(n) =


Y
s∈Sons(n)
N2(s)

 + 1
where Sons(n) is the set of sons of n. Similarly, the
total number of possibilities N2 is given by the product
of each layer number of possibilities. An important
point to note is that the size of the search space is
much smaller in this case than in the previous case,
i.e., N1 >> N2.
As these numbers can increase rapidly with ni, the number
of concept of the ith layer, stochastic methods are appro-
priate approaches to avoid exhaustive search which would
often be impracticable. In the next section, we present the
multi-objective genetic algorithm that we have implemented
for this purpose.
III. GENETIC ALGORITHM
As we have seen in the previous section, the optimal
layer selection problem boils down to a multi-objective
optimization problem. We decided to explore the solutions
offered by Genetic Algorithms (GA) as they are simple,
powerful and well used tools to solve combinatorial
problems, particularly in the case of multi-objective issues
[7]. However, more important than the choice of the heuristic
is the deﬁnition of the problem as a combinatorial problem
and the validation that such methods are useful to address it.
These algorithms are stochastic methods and use global
search heuristics belonging to the family of evolutionary
algorithms. They are inspired by evolutionary biology’s
main principles such as inheritance, mutation, selection and
crossover. They allows to evolve a randomly chosen initial
population until some deﬁned criteria are reached (quality
of solutions, number of generation, etc.).
In this section, we present the multiobjective genetic
algorithm
components
that
we
implemented
using
the
ParadisEO-MOEO
framework
[8].
We
show
our
representation choices and genetic operators for both
aforementionned
methods,
i.e.,
free
and
hierarchical
aggregation.
All the problem-independent parts of the GA are based on
the well known Non-Dominated Sorting GA-II (NSGA-II)
[9] evolutionary multiobjective optimization method which
is widely used for its low computational complexity and
its ability to ﬁnd good spreads of solution for a rather
large range of problems. Table I gives an overview of its
components.
Table I. NSGA II components overview
Components
NSGA II
Fitness assignment
Dominance-depth
Diversity assignment
Crowding distance
Selection
Binary tournament
Replacement
Elitist replacement
Archiving
none
Stopping Criteria
Max number of generations
A. Individual Encoding
For both methods, an individual can be encoded as the
sequence of m layers that will overlay. The main difference
between both representations lies on the way that instances
of aggregation are represented for each layer.
1) Free aggregation: For the free aggregation method, a
layer can be seen as an ordered sequence of ni concepts,
each one being associated with an equivalence class. Figure
5 ﬁgures the general structure of this representation.
2) Hierarchical aggregation: In this case, we represent
each hierarchical aggregation for a given hierarchy by an in-
teger value. The mapping between an integer and an instance
of aggregation may be done in several ways, however, the
important point to note is that it is done in a bijective manner
so that each possible instance of hierachical aggregation
193
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

Figure 5. Individual encoding for free aggregation
corresponds to a unique integer value. Figure 6 illustrates
the structure of this representation.
Figure 6. Individual encoding for hierarchical aggregation
B. Genetic Operators
1) Crossover: The crossover principle consists in mating
chromosomes (individuals) -the parents- in order to obtain
new ones -the offsprings- made with their genetic heritage.
The main purpose of this operator is to diversify an existing
population in order to improve it.
The main operator we used for both methods is a multi-
point uniform [10] quad crossover operator which consists
in choosing two parents and computing two offsprings with
a given mixing ratio. Crossover points may be located either
between any concepts of any layer for the free aggregation or
simply between two layers for the second method. Figure 7
gives an illustration of this operator with one crossing point
for the free aggregation.
Figure 7. Crossover operator principle (one point)
2) Mutation: We used a uniform mutation operator which
consists either in changing the equivalence class for a given
concept (or a group of concepts which belongs to a same
class) or in changing the hierarchical aggregation in a layer
by modifying the integer which represents it.
(a) Layer 1
(b) Layer 2
Figure 8. Input layers
IV. EXPERIMENTAL RESULTS
In this section, we present and analyse some of the results
that we obtained for both aggregation methods. First, a sim-
ple example is graphically showed for better understanding,
then a more realistic case is presented. In the latter case,
we focused on the hierarchical method and we checked
various GA parameters (number of generations, operators
probability, population size). The best results showed in the
following were obtained with:
• 200 generations,
• 100 individuals population,
• a crossover probability of 0.7,
• a mutation rate of 0.001.
A. Simple case
We deﬁned two simple layers (Layer 1 and Layer 2) as
shown in Figures 8 a) and 8 b). Each one is composed of
several surfaces annotated by four concepts. Surfaces of
each layer have been designed to be slightly different from
one to the other in order to introduce some local optima.
Figures 9 c), 9 e), 9 g) (left column of Figure 9) show
some of the best solutions (with a number of concepts of
4,6,7) obtained with the free aggregation method while
Figures 9 d), 9 f), 9 h) (right column of Figure 9) show
the same results for the hierarchical aggregation method.
On these ﬁgures, the concept that annotates a given surface
is indicated. Figure 10 shows the Pareto sets obtained for
both methods.
We can see that the best solutions founded by the GA
differ from an aggregation method to the other for each
number of concepts. The computation of the average area
of each overlay layer shows that it is always greater or
equal in the free aggregation case. As said in Section 2,
this situation can easily be explained by the fact that the
chosen hierarchy limits the number of reachable possibilities
and thus reduces the possibility to ﬁnd optimal solutions.
However, as illustrated by Figures 9 e) and 9 f) which show
the same solution for both methods, an optimal solution may
be obtained by the hierarchic method (most certainly due to
the reduced search space).
194
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

(a) 7 concepts free. Average area:
569. X={3,2}
(b) 7 concepts hierarchical. Aver-
age area: 541. X={a,b}
(c) 6 concepts free. Average area:
863. X={2,3,4}
(d) 6 concepts hierarchical. Aver-
age area: 822. X={1,3,4}
(e) 4 concepts free. Average area:
2775. X={1,2,3,4}, Y={a,b}
(f) 4 concepts hierarchical. Av-
erage
area:
2775.
X={1,2,3,4}.
Y={a,b}
Figure 9. Different overlays of Layer 1 and Layer 2
Figure 10. Pareto Sets
B. Realistic case
As stated in the introduction, this work is intended to
tackle real world applications where the space and the
numbers of concepts and layers are large enough to make
exhaustive search impracticable. In the following, we show
such a complex and realistic application which main char-
acteristics are:
• high total space superﬁcy (Guadeloupe F.W.I Island i.e.,
1628, 43km2 ),
• 3 Layers,
• 10 concepts per layer,
• large tessellation of space per layer.
The size of the search space generated by this example
is about 1015 in the free case (B10 = 115975) and may
vary signiﬁcatively from a set of hierarchies (a hierarchy
for each layer) to another in the hierarchical case. In the
following example the size of the space is about 106.
Table II presents the whole database containing the
areal objects resulting from one pareto-optimal solution
(with 13 concepts in the overlay layer) obtained by the
hierarchical aggregation method. Each line is associated
with a concept of the overlay layer. The ﬁrst three columns
show the original concepts values for each input layer
of the related concept, whereas the last column gives the
average area of the surfaces which it annotates. Lines are
ranked in descending order with respect to the average
area values. We can observe that the largest areas result
from highly aggregated concepts (lines 1 to 9 ) while
smaller aggregations may provide acceptable areas (lines
10 to 15) as well as very small areas (lines 21 to 25)
which are obviously damaging for the maximization of the
global average area value. More generally, we can see that
the difference between the minimal and maximal number
of initial concepts in the overlay concepts (respectively,
line 11 → 12 concepts and line 2 → 21 concepts) can
be relatively large whith the assumption that concepts of
very different levels of abstraction may be included in a
same solution. Since this situation could be problematic for
some applications, it will be addressed in further works
by introducing a distance parameter that may limit the
difference of abstraction level.
Figure 11 shows a comparison between two typical
Pareto sets obtained with both methods and the same GA
parameters. We can see that the two curves are relatively
close, however, the set obtained with the free aggregation
is often better than the one obtained with the hierarchical
aggregation, which is consistent with our ﬁrst observations
(Sections 2 and IV-A).
195
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

Figure 11. Realistic case Pareto Set example
The free aggregation leads to better results concerning
the two objectives, however it requires more iterations
to converge and is not always consistent with semantic
relations between concepts. Thus, the hierachical method
turns to be a better compromise between complexity
and efﬁciency as it allows to obtain good solutions -
semantically acceptable - in a short time due to its reduced
search space.
Focusing on the hierachical method, we can see that the
average area starts with very high values but decreases very
rapidly, between 3 and 6 concepts, while it is quite low and
decreases more slowly since 15 to 30 concepts. Thus, the
more interesting part of the curve from an end user point
of view may be situated between 7 and 15 concepts where
the compromise between the two objectives is not only in
favor of one of them.
Figure 12 gives an illustration of a representative example.
Figure 12 a) shows the tessellation of the space resulting
from the raw overlay of all layers (i.e., whith no previous
aggregation) while Figure 12 b) shows the tessellation of the
space obtained with the optimal solution of Table II. It is
easy to observe that the space is much less fragmented in
the second case due to the aggregations made on each layer.
V. CONCLUSION AND PERSPECTIVES
In this paper, we have investigated the question of
information selection for layers overlay in a GIS. We have
presented a genetic algorithm-based approach allowing to
efﬁciently ﬁnd overlay layers. Candidate solutions have
been previously aggregated before being overlayed then
evaluated. We showed that the use of hierarchies for
aggregations before overlaying layers represents a good
tradeoff between complexity and efﬁciency when searching
for solutions.
(a)
(b)
Figure 12. Graphical results on the realistic case
Our perspectives for further works include the use of other
metaheuristics such as tabu search or simulated annealing,
the deﬁnition of alternative aggregation methods which
could be more efﬁcient and the introduction of parameters
such as a maximal distance between the number of initial
concepts belonging to layers and thus to their combinations.
ACKNOWLEDGMENT
We thank the Claude-Emmanuel Blandin foundation and
the Regional Council of La Guadeloupe for their ﬁnancial
support.
196
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

Table II. Areal objects for the pareto solution with 13 concepts
line
Layer 1
Layer 2
Layer 3
Area (Km2)
1
[1-6],8,10
9
[1-10]
202.0
2
[1-6],8,10
1,2
[1-10]
189.8
3
[1-6],8,10
7
[1-10]
157.6
4
[1-6],8,10
4
[1-10]
155.5
5
[1-6],8,10
10
[1-10]
146.7
6
[1-6],8,10
8
[1-10]
146.6
7
[1-6],8,10
5
[1-10]
136.1
8
[1-6],8,10
3
[1-10]
127.9
9
[1-6],8,10
6
[1-10]
49.8
10
7
4
[1-10]
20.9
11
9
7
[1-10]
14.8
12
9
10
[1-10]
13.1
13
9
1,2
[1-10]
12.9
14
7
5
[1-10]
12.8
15
9
4
[1-10]
12.5
16
7
3
[1-10]
8.9
17
7
8
[1-10]
8.4
18
7
7
[1-10]
5.4
19
9
3
[1-10]
5.3
20
9
5
[1-10]
5.2
21
9
9
[1-10]
3.0
22
7
10
[1-10]
2.8
23
7
9
[1-10]
1.5
24
7
1,2
[1-10]
0.5
25
7
6
[1-10]
0.002
REFERENCES
[1] P. A. Longley, M. F. Goodchild, D. J. Maguire, and
D.
W.
Rhind,
Geographic
Information
Systems
and
Science.
John Wiley & Sons, Jul. 2001, [Online].
Available:
http://www.amazon.com/exec/obidos/redirect?
tag=citeulike07-20\&path=ASIN/0471892750
<retrieved:
November, 2011>.
[2] C. D. Tomlin, Geographic Information Systems and Carto-
graphic Modelling.
Prentice-Hall, 1990.
[3] F. T. Fonseca and M. J. Egenhofer, “Ontology-driven ge-
ographic information systems,” in Proceedings of the 7th
ACM international symposium on Advances in geographic
information systems, ser. GIS ’99.
New York, NY, USA:
ACM, 1999, pp. 14–19, [Online]. Available: http://doi.acm.
org/10.1145/320134.320137 <retrieved: November, 2011>.
[4] H. J. Miller and J. Han, Geographic Data Mining and
Knowledge Discovery, Second Edition, 2nd ed.
CRC Press,
May 2009.
[5] A. Galton, “A formal theory of objects and ﬁelds,” in Spatial
Information Theory, ser. Lecture Notes in Computer Science,
D. Montello, Ed.
Springer Berlin / Heidelberg, 2001, vol.
2205, pp. 458–473, [Online]. Available: http://dx.doi.org/10.
1007/3-540-45424-1 31 <retrieved: November, 2011>.
[6] E. Grandchamp, “Raster-vector cooperation algorithm for
GIS,” in Proceedings of Geoprocessing, Saint-Martin, 2010,
p. 40062, [Online]. Available: http://hal.archives-ouvertes.fr/
hal-00509489/en/ <retrieved: November, 2011>.
[7] K. Deb, Multi-Objective Optimization using Evolutionary
Algorithms, ser. Wiley-Interscience Series in Systems and
Optimization.
John Wiley & Sons, Chichester, 2001.
[8] A. Liefooghe, L. Jourdan, and E.-G. Talbi, “A Uniﬁed
Model for Evolutionary Multiobjective Optimization and its
Implementation in a General Purpose Software Framework:
ParadisEO-MOEO,”
INRIA,
Research
Report
RR-6906,
2009, [Online]. Available: http://hal.inria.fr/inria-00376770/
PDF/RR-6906.pdf <retrieved: November, 2011>.
[9] K. Deb, A. Pratap, S. Agarwal, and T. Meyarivan, “A fast
and elitist multiobjective genetic algorithm: Nsga-ii,” IEEE
Transactions on Evolutionary Computation, vol. 6, pp. 182–
197, 2002.
[10] D. H. Ackley, A connectionist machine for genetic hillclimb-
ing.
Norwell, MA, USA: Kluwer Academic Publishers,
1987.
197
Copyright (c) IARIA, 2012.     ISBN: 978-1-61208-178-6
GEOProcessing 2012 : The Fourth International Conference on Advanced Geographic Information Systems, Applications, and Services

