The Inﬂuences of Bridge Devices in a Scatternet Bluetooth
Celio Marcio Soares Ferreira,
Ricardo Augusto R. Oliveira,
Haroldo Santos Gambini
Computer Science Department (DECOM)
Federal University of Ouro Preto (UFOP)
Ouro Preto, Minas Gerais, Brasil
e-mail: celio@linuxplace.com.br,
{rrabelo, haroldo.santos}@gmail.com
Alejandro C. Frery
Instituto de Computac¸˜ao
Universidade Federal de Alagoas (UFAL)
Macei´o, AL, Brasil
e-mail: acfrery@gmail.com
Abstract—The Adaptive Frequency-Hopping (AFH) spread
spectrum do a signiﬁcant inﬂuence on the Bridge devices, re-
sponsible for the inter-Piconet communication. In Bluetooth, a
Bridge must stop communicating within one Piconet and must
change its frequency-hopping sequence for communication with
another. We propose an update of a classical linear programming
Bluetooth Scatternet formation model, penalising the activation
of Bridges devices, by including new constraints. This new model
produced a topology, coherent with a well-known Scatternet
protocol. Our improved model has an ideal distribution of data
ﬂow and power consumption similar to a well-known Scatternet
protocol, O(log n) time and O(n) message complexity.
Keywords—bluetooth; scatternet; fhss; centralised model.
I. INTRODUCTION
The growth in sales and manufacturing of mobile devices
is a fact. Much of this is due to the great popularity of
smartphones and tablets, and the possibilities of direct commu-
nication. Faced with this reality, it is necessary to simulate new
scenarios and propose innovative networking solutions using
the low power network interfaces integrated in most marketed
devices.
Developed with a focus on low cost and low power
[1], Bluetooth allows to create spontaneous network appli-
cations in environments requiring little or no user interac-
tion. The Bluetooth communication technique is the Adaptive
Frequency-Hopping (AFH) spread spectrum, a Frequency-
Hopping Spread Spectrum (FHSS) variation. The AFH causes
some relevant side effects during the formation of wide
networks, due the Bluetooth technology characteristics and
constraints [2].
The Piconet was projected for short connections and com-
munication with low power consumption. The Piconet does
not communicate using a ﬁxed channel; all its participant
nodes have the same frequency-hopping sequence coordinated
by a master node and should assume master or slave roles.
There is only one active master in a maximum of seven
slaves connected and all of the slave data stream passes and is
controlled by it. The range of a Piconet is limited by the radio
power of the master node; to expand its boundaries, we have
the Scatternet. It consists of a set of Piconets interconnected
by a Bridge node, transmitting messages between the master
nodes [3].
The Bridges nodes are the bottleneck and had higher en-
ergy consumption nodes in a Scatternet. They are responsible
for all inter-Piconet communication and constantly execute
a frequency-hopping synchronisation with the master nodes,
making possible the devices to exchange messages in a multi-
hop ad hoc wide network scenario.
The distributed algorithms for Scatternets must deal with
new challenges, such as, energy limits of the devices, the
different roles assumed by the nodes of the Piconet (slave,
master), the Bridge nodes, Piconet trafﬁc centralised in master
node, and Bluetooth bandwidth limits. Therefore, new routing
algorithms proposals and strategies of control and coordination
have to be inserted to get an efﬁcient and implementable
Scatternet algorithm into a real world. As shown by Miklos et
al. [4] and Jedda et al. [5], the conﬁguration of a Scatternet
has impact on the performance of the network.
To the Scatternet, there are proposals of dynamic Bluetooth
Scatternet Formation (BSF) and centralised models. BSF are
protocols; centralised models are a optimization models that
describe a Scatternet using linear programming.
As contribuition in this work, we proposed improvements
to Marsan et al. [6] centralised Scatternet model. Penalising
the activation of Bridge nodes, include new constraints. This
new model produced Scatternet topologies more coherent with
the ones predicted by Law et al. [7], a well-known O(log n)
time complexity and O(n) message complexity BSF dynamic
algorithm.
Section II shows the related work. In Section III, we
introduce the Scatternet and its models; Section IV presents
the Bridge node and its inﬂuence in efﬁciency of a Scatternet.
In Section VI, our contribution on improving the centralised
model of Marsan et al. [6] is detailed. Finally, we detail the
conclusions in Section VII.
II. RELATED WORK
The centralised model of Marsan et al. [6] provides a
description of the Scatternet using linear programming. Its set
of constraints are proposed in a min-max formulation resulting
in a optimisation problem, solved by a centralised way. The
objective is to obtain a optimal Scatternet topology that fulﬁls
the trafﬁc requirements and Bluetooth technology constraints,
minimises the trafﬁc load and energy consumption of the mas-
ter and Bridge nodes. Therefore, this model does consider the
side effects of Bluetooth frequency-hopping communicating,
such as: excessive delay discovery of new nodes phase [8] and
the frequently frequency resynchronisation efforts of Bridge
nodes, necessary for inter-Piconets message transport.
In Law et al. [7], a new dynamic algorithm of Scatternet
formation is introduced. The protocol is presented in a two-
layer approach:
46
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

1)
How the devices are organised into Scatternet;
2)
How the devices can discovery each other with efﬁ-
ciency.
The devices are organised by sets of interconnected devices,
called components, and these can be a simple device, a Piconet
or a Scatternet. Each component has a leader and executes
the MAIN procedure in the beginning of each round. In
MAIN, the leader calls SEEK procedure with probability
( 1
3 < p <
2
3) and SCAN procedure. This ensures that in
each component, there is at least one device performing these
functions. When a leader performs SEEK it tries to acquire
new slaves performing SCAN. When a device in SEEK
ﬁnds a device in SCAN, the CONNECTED procedure is
called, and a new link is established with the component. The
reorganisation of Piconets happens by one of three operations:
MOVE, MERGE, MIGRATE, and these operations ensure
that each new and larger components have only one leader to
coordinate the distribution of devices. The Scatternet formed
by this protocol is proved O(log n) time complexity and O(n)
message complexity, and has the following properties:
•
Any device is a member of at most two Piconets;
•
The number of Piconets should be optimal, and the
number of Piconets lower bound is ⌈(n−1)/k⌉, being
that n the number of network nodes and k the number
of slaves in a Piconet.
Jedda et al. [8] analysed the impacts of changing Bluetooth
parameters on the static and dynamic Scatternet formation
protocols. These parameters are related to the use of the
frequency hop communication technique. The Scatternet for-
mation on static protocols happens as follows; each node alter-
nates randomly between the INQUIRY and INQUIRY SCAN
Bluetooth discovery states, when one device discovers each
other, a temporally Piconet is formed until being destroyed
at the end of the communication. They called this mecha-
nism of ALTERNATE; see BlueStars [9]; BlueMIS [10] and
BlueNet [11]. In dynamic Scatternet protocols, the discovery
phase is interlaced with the network formation; the node shares
its time between discovering new devices and communication
in the Scatternet. The examples of dynamic protocols are: Law
et al. [7] and Cuomo aet al. [12]. Jedda et al. [8] using the ns-
2 [13] simulator, found that changing parameters of Bluetooth
1.2 discovery phase produces ALTERNATE Scatternets 3.5
times faster.
In [14], the constraints of the centralised model of Marsan
et al. [6] are complemented by new discussions.
•
The fact that increasing the number of Piconets that
form the Scatternet hasn’t beneﬁts to the network
throughput, because Bridge nodes become the com-
munication bottlenecks;
•
A discussion and proposal of a distributed algorithms
in Scatternet formation, including routines for the
insertion and removal of nodes.
III. SCATTERNET
The Scatternet extends the limits of a Piconet, 7 slave nodes
communicating in the range of a master node coordinator,
making possible a wide network using Bluetooth devices. They
are collections of Piconets formed spontaneously without need
of ﬁxed infrastructure. Its coordination is complex because
there is a need to cross multiple Piconets, in search of the
destination and handle multiple alternate paths and cycles,
following the Piconet constraints, Soares et al. [15].
Bluetooth speciﬁcation does not provide details about
Scatternets, and leaves open to new protocol propositions.
Distributed algorithms are needed to start a Scatternets. In turn,
we have different routing strategies and initialisation. These
topological characteristics directly inﬂuence the ﬂow of data
over the network and energy consumption of devices.
Some examples of the challenges in creating Scatternets
models:
•
The need to coordinate different roles of the devices
(slaves, masters and Bridges) to form a Piconet;
•
Energy limitations of mobile devices;
•
The low data rates of Bluetooth;
•
The excessive delay during the Piconet start-up, be-
cause the side effects of AFH during the discovery of
devices [15];
In the literature, we can ﬁnd studies of dynamic and
centralised Scatternets models.
III-A. Dynamic Model
Scatternet dynamic models are protocols, and its distributed
algorithms use the following heuristic [3]:
•
Any device is a member of no more than two Piconets;
the number of Piconets is close to the optimal; the
lower bound of Piconets is (n − 1)/k, n being the
number of network nodes and k the number of slaves
in a Piconet;
•
Bridge devices should never be masters. This reduces
the load Scheduler of the masters, which will then
only consider the intra-Piconet communication;
•
The number of Piconets is restricted. This reduces
the number of potential inter-Piconet conﬂicts in the
Bridges, but limits the potential of alternative routes;
•
There should be as few Piconets as possible. This
reduces the number of channels to be used and thus
potential interference;
•
Piconets should not be connected to more than one
Bridge. This minimises the coordination effort needed
for Scheduling;
•
A device must participate in as few Piconets as
possible. This decreases the amount of inter-Piconet
Scheduling in the device.
To represent a Scatternets topology, we use graph repre-
sentation. It shows all the possible connections between the
devices in range, and the most common Scatternet algorithms
and your topologies represented by graphs are:
Trees:
•
It is represented by a connected graph without cycles;
•
Uses minimal edges for connection;
•
There is no alternative route search between nodes;
•
It is more susceptible to broken links during loss of
connection or power failure of a device;
•
Have more simpliﬁed routes, as there is only one
possible path between nodes;
•
Have a more simpliﬁed routing;
•
Reduces contention in the transmission slots in TDD,
thus are less susceptible to the side effects of Fre-
quency Hopping [3];
•
A minimum of Piconets is desired, making the Bridges
we participate in a maximum of two.
UDG:
47
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

TABLE I. SCATTERNET PROTOCOLS
Index
Protocol
1
BlueStars
2
BlueMesh
3
Scatternet via Insertion and Removal of Nodes
4
BlueRings
5
Distributed Scatternet Formation Procedure (DSFP)
6
Simple Scatternet Formation
7
Scatternet via Merge, Movement and Migration
8
Scatternet Formation based on Partial Triangulation
9
BlueRing Trees
10
Scatternet Formation via grouping
11
Scatternet Formation Maintenance Extension
12
Topology Construction Protocol for Bluetooth
13
BlueTree Auto-Routing
14
Tree Scatternet
15
BlueNet
16
Blueroot and Distributed Bluetrees
17
BlueStar Islands
•
An edge is deﬁned if their Euclidean distance is
greater than one;
•
The graph is formed as the nodes come close.
1-Factor:
•
(n = 2) is expected where n is the number vertices
of Piconet;
•
An edge is always a set slave master.
Ring:
•
The Scatternet are called Bluerings [3];
•
Each device belongs and two Piconet and has two links
in total; each device is master and slave at the same
time;
•
Supports a maximum of 2 active links; route is sim-
pliﬁed because the packets are simply forwarded;
•
A large ring can get a big delay resynchronisation,
proportional to the number of Bridges.
III-A1. Scatternet protocols
The Scatternets protocols are treated as a ﬁnite state
machine by most the authors [3]. They are built as mechanisms
to control the relationship between the states deﬁned by specif
cation Bluettooth: INQUIRY, INQUIRY SCAN, PAGE,
PAGE SCAN, and these states are alternate and coordinated.
Some protocols also use the information for each device, such
as battery capacity, type of mobile device and capacity data
ﬂow, resulting in a variety of Scatternets topologies, each
with a characteristic optimisation. Table I lists the types of
Scatternet protocols.
III-B. Centralised Model
The centralised model of Scatternet, also known as the
static Bluetooth Scatternet model, is not a protocol. Instead,
it provides a description of the Scatternet formation using
mathematical programming, and constraints are proposed in
a min-max formulation, leading to an optimisation problem
which is solved in a centralised way. It can ﬁnd the best
possible performance for a given graph, obeying the Piconet
Bluetooth restrictions. The objective of this model is to min-
imise the trafﬁc of nodes that are subject to greater congestion
and energy consumption, such as the masters and Bridges,
respecting the restrictions following the full convergence of the
Scatternet. After that, it can be used to generate a Scatternet
formation.
For instance, the Marsan et al.’s [6] model discusses the
centralised Scatternet requirements:
•
Network Connectivity: there must be at least one path
between two nodes in the network;
•
System Complexity: in order to reduce the complexity
of the network, the number of Piconets is limited to a
ﬁxed value;
•
Trafﬁc Demand: the network must support the neces-
sary source-destination connection;
•
Roles of the Node: there must be some constraints
applied to some nodes, according to the role they play:
master or slave.
The constraints and requirements used in this model are:
•
network structure;
◦
Active nodes participants of Piconet can not
be greater than 8;
◦
Two devices to communicate must be in the
range of the other;
◦
A node can only be master in a Piconet;
•
system capacity: The maximum bit rate of a Piconet
will equal to 1 Mbps;
IV. BRIDGE NODES
Bridges are the elements that enable multi-hop communi-
cation across the Scatternet. They are needed for inter-Piconet
communication. They alternate the pattern of frequency hop-
ping among those masters connected. The Bluetooth mode that
deﬁnes this operation is the HOLD mode. This Bluetooth state
is used as a solution for the coexistence of a node in more
than one Piconet. During this mode the device participates in
different Piconets using a Time Division Multiplexing (TDM)
technique. In the Scatternet, they are implemented in two types,
namely, slave-slave and master-slave.
The Bluetooth HOLD mode is used to release a connection
device active with the master. During this mode, a device
already connected to Piconet, can sleep for a short time
allowing the master node communicate or check for new
devices, this communication is called inter-Piconet.
During transport of inter-Piconets messages, the Bridge
device, common to the Piconets, goes to HOLD mode. This
mode allows it to switch contact among the Piconet’s masters,
during this process, the Bridge node needs a frequency hopping
synchronisation with Piconet that wants to communicate. For
this to happen, the Bridge changes its pattern of frequency
hopping and begins to hear the master polls messages waiting
for the moment that it may send messages from other Piconet.
Some Scatternets protocols use Bridge nodes master-slave
type. This type has some limitations and performance issues.
As a Piconet can only have one active master, the Bridge node
that acts as the master of a Piconet and slave of the other, need
to leave temporarily Piconet that acts as the master, without
coordination, to be able to forward messages to another. This
process has a high cost of resynchronisation, since it occurs
in one of Piconets a temporary loss of its master. For most
applications, this cost of excessive synchronisation prevents the
use of Bridges nodes master-slave type for some Scatternets
applications.
The message transport procedure between Piconets has
high resynchronisation cost. The need for hopping pattern
of trade of Bridge us with their masters, adjustments speed
48
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

and procedures for inter-Piconet scheduling to coordinate
activities itinerant devices, cause this process an overhead due
to the guard time slots. This is because during the exchange
of communication inter-Piconet using two time slots, which
during this process are unavailable for communication. These
characteristics of Bridges directly inﬂuence the performance
of Scatternet, as are energy consuming bottleneck points and
trafﬁc [3].
IV-1. Inter-Piconet Schedulling
In the Scatternet, to coordinate communication of Bridges
algorithms, inter-Piconet scheduling is necessary. These al-
gorithms enable the Bridge be available for communication
when the master need it. They use a common solution to
solve this problem, reserve slots for communication with the
Bridge. These reserved slots are called Rendezvous Points
(RP). Intra-Piconet Scheduling algorithms have a common
feature, namely, the requirement to choose the slots and control
of RP. We can list some of the approaches of inter-Piconet
Scheduling [3] and protocols that deal with the rendezvous
windows.
•
Maximum Distance Rendezvous Point (MDRP);
•
Adaptive Scheduling using a max-min RP;
•
Flexible Scatternet Scheduling (FSS)
•
Adaptive Presence Point Density (APPD)
•
Pseudo-Random Coordinated Scatternet Scheduling
(PRCSS), uses pseudo-random sequence of RP;
•
Locally Coordinated Scheduling (LCS)
•
QOS, the Scheduling is seen as an optimisation prob-
lem, an analysis of capacity occurs before the spread
of the routes;
•
Load Adaptive Algorithm (LAA), this algorithm, de-
termines the duration of the activities Bridges of each
Piconet;
•
Proposal of a new JUMP mode, this new mode
already has speciﬁc rules to coordinate the commu-
nication of Piconets;
•
Scheduling interference analysis;
•
Scheduling by analysis of theoretic queue;
IV-2. Inﬂuence of Bridge nodes in efﬁciency of a Scatternet
The number and position of Bridge nodes are critical for
the efﬁciency evaluation of the resulting Scatternet topology.
They are responsible for inter-Piconet communication, and are
subjected to greater communication and processing overhead
than other nodes.
To act as a Bridge, a Bluetooth node goes to HOLD mode;
it is necessary to inter-Piconets communication. During its
mode, the Bridge node awaits polls package of the masters,
for the destination of messages; it have a high energy cost,
because in this procedure, the device receives a computational
effort of intra-Piconet Scheduling algorithm and its strategies
to handle with the RP.
An efﬁcient Scatternet topology should have a minimum
number of Bridge nodes because:
1)
Few Bridges means less delay for messaging between
the Piconet, and less coordination effort with the
master nodes;
2)
A smaller number of masters in the Scatternet results
in less Piconets and Bridge nodes; consequently,
less synchronisation with the master nodes and per-
Figure 1. Common Scatternet of 20 devices found by simulation
Figure 2. Common Scatternet of 30 devices found by simulation
formance inﬂuences of the algorithms inter-Piconet
Scheduling.
V. TOPOLOGY ANALYSIS
To check the Scatternet topologies that would be found,
we chose a dynamic and a centralized model.
V-A. Dynamic Model
To check the Scatternet topologies that would be found
using a dynamic model, we chose the Law et al. [7] algorithm
to simulation. This algorithm ﬁts in item 7 of Table I, and
Scatternets resulting from the simulation have O(log n) time
complexity and O(n) message complexity. Using ns-2 [13]
with UCBT [16] extension, we simulated 30 Scatternet in-
stances of 20 and 30 devices. With the simulation results, we
generated the graph of the most common Scatternet topology
found with 20 devices, in Figure 1 and with 30 devices in
Figure 2.
The topology of these graphs follow the efﬁciency rules
proposed in Section IV-2 and used by the algorithm Law et
al. [7]. The red nodes are the Piconet masters M, the yellow
are Bridge nodes type slave-slave (SS) and green nodes are
the Piconet slaves.
V-B. Centralised Model
To ﬁnd the Scatternet topologies resulting of centralized
model of Marsan et al. [6], we follow the description of its
49
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

TABLE II. MARSAN ET AL. [6] SCATTERNET CONSTRAINTS
Constraint
Description
1
a node is either a master, or a slave or a Bridge;
2
a slave is assigned to one master at most;
3
a slave or a master are assigned to one Piconet at least;
while a Bridge is assigned to two Piconets at least;
4
a master is assigned to it-self;
5
maximum connect distance is ZMAX;
6
limits the size of Piconet to XMAX;
7
If nodes i and j are masters;
the assignment of i to j if is assigned to i;
8
prevents cycles among sets of three nodes;
9
the maximum number of masters is MMAX;
10
nodes in M to be masters;
11
nodes in set V to be slaves.
model:
The model from Marsan et al. [6] is described as follows:
•
N - Number of nodes;
•
C - Connections through network;
•
MMAX - Maximum Piconets;
•
XMAX - Maximum number of active nodes in Pi-
conet;
•
ZMAX - Maximum radius of Piconet.
•
M - Nodes constrained to act as masters;
•
V - Nodes constrained to act as slaves.
For each node i, i ∈ N, three binary variables are deﬁned:
µi,βi, and σi:
•
µi, is equal to 1 if the node is a master and 0
otherwise;
•
βi is equal to 1 if the node is a Bridge and 0 otherwise;
•
σi is equal to 1 if the node is a slave and 0 otherwise;
For each pair of nodes (i, j), i, j ∈ N, the set X = {xij},
xij is 1 if j is assigned to master i, otherwise 0 .
The model has the following constraints, described in
Table II :
µi + βi + σi = 1,
∀i ∈ N
(1)
X
i∈N
xij ≤ σj + |N|.βj + |N|.µj,
∀j ∈ N
(2)
X
i∈N
xij ≥ 2 − σj − µj,
∀j ∈ N
(3)
xii = µi,
∀i ∈ N
(4)
xij.zij ≤ ZMAX.µi,
∀i, j ∈ N
(5)
X
j∈N
xij ≤ XMAX.µi,
∀i ∈ N
(6)
2 + xji ≥ µi + µj + xij,
∀i, j ∈ N,
i ̸= j
(7)
xik + xjk ≤ 4 − µi − µj − xij, ∀i, j, k ∈ N, i ̸= j, j ̸= k
(8)
X
i∈N
µi ≤ MMAX
(9)
X
i∈M
µi = |M|
(10)
X
i∈V
σi = |V |
(11)
These requirements and restrictions lead to a min-max
criterion that can be solve using the CPLEX solver [17].
In Marsan et al. [6] paper, to resolve a 20 devices Scatternet
topology, we used the input parameters of Table III and the
TABLE III. 20 DEVICES SCATTERNET - INPUT PARAMETERS
N
C
MMAX
XMAX
ZMAX
M
|V |
20
15
4
8
10
√
2
3
{7, 17}
0
Figure 3. 20 devices Scatternet topology found in Marsan et al. [6]
TABLE IV. 30 DEVICES SCATTERNET - INPUT PARAMETERS
N
C
MMAX
XMAX
ZMAX
M
|V |
30
4
8
8
10
√
2
3
{5, 25}
0
Figure 4. 30 devices Scatternet topology, found using the Marsan et al.
centralised model
resulting graph is represented by Figure 3.
To resolve a 30 devices Scatternet topology with Marsan et
al. centralised model, we use the input parameters of Table IV
and the resulting graph is represented by Figure 4.
In the graph shown in the Figure 3, that represents the
topology found how solution in the Marsan et al. [6] model,
we can observe that some of the items that inﬂuence the
performance of a Scatternet are neglected:
•
The connection between master node 13 with node 0,
is a link master / master, this setting is not possible
to a Bridge node;
•
Node 9 is the Bridge of three Piconets, a prohibitive
result, due to the high cost of coordination with the
masters conforms addressed in Section IV-1;
•
We observe various network loops between the Pi-
50
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

Figure 5. 20 devices Scatternet topology, found with our centralized model
conets of masters 7 and 17, connected by nodes 9
and 15, this increase the complexity of a Scatternet,
being necessary the implementation of processing
loops together with algorithms, such as the spanning
tree;
•
Four Piconets is an excessive amount for 20 nodes,
according to Piconets lower bound proposed by Law
et al. [7] and presented in Section III-A, this number
should be three;
We observe that the 30 devices Scatternet topology resulted
by centralised model of [6] shown in Figure 4, has the
following items that inﬂuence its performance:
•
The connections between nodes 4 and 25, 27 and 5,
8 and 4, are master-master links, this setting is not
possible to a Piconet;
•
8 Piconets and 6 Bridges are too many for a Scatter-
nets of 30 devices, according to Piconets lower bound
proposed by Law et al. [7] and presented in Section
III-A, this number should be ﬁve;
VI. IMPROVING THE CENTRALISED MODEL
To get topologies similar to Scatternet protocols, the opti-
mization models, such as Marsan et al. [6], must be improved.
We added penalties to the Bridge nodes and these new con-
straints:
•
µi + µj + xi,j ≤ 2
∀ i, j ∈ N
i ̸= j ; a master
must only belong to one Piconet.
•
βi+xij +xji+xik +xki+xkl+xlk ≤ 3
∀i, j, k, l ∈
N
i ̸= j ∨ i ̸= k ∨ i ̸= l ∨ j < k ∨ k < l ; a Bridge
must only connect two Piconets.
By adding penalties in Bridges and these two new con-
straints, we can say that the resulting graph of the solution
is less prone to the effects of topology coordination delays
Bridge node, responsible for inter-communication Piconet.
In order to evaluate our proposal, we use as an example
the instance originally used by [6] represented by Table III and
the graph of Figure 1.
We note that the Scatternets topology found with the
solution of these parameters for our model, represented by
graph in Figure 5, follows the heuristic of a Scatternet dynamic
protocol discussed in III-A, and respects all the items needed
for a efﬁcient Scatternet discussed in Section IV-2.
In our solution, 3 masters in 3 Piconets and 2 Bridges were
found, which is the same topology found by simulation of a
Scatternets of 20 devices using the protocol [7] represented by
Figure 6. 30 devices Scatternet Topology, found with our centralized model.
TABLE V. 20 DEVICES SCATTERNET - TOPOLOGY
Model
Piconets
Bridges
Piconets over the bound
Marsan et al.
4
3
1
Law et al.
3
2
0
Soares et al.
3
2
0
TABLE VI. 30 DEVICES SCATTERNET - TOPOLOGY
Model
Piconets
Bridges
Piconets over the bound
Marsan et al.
8
6
3
Law et al.
5
4
0
Soares et al.
5
4
0
Figure 1.
These results are signiﬁcant because the algorithm [7] has a
cost O(log n) time complexity and O(n) message complexity.
Given this result, we can say that the resulting graph of our
model is one Scatternet with ideal distribution data ﬂow and
energy consumption.
To validate our centralised model in larger Scatternet, we
use the input parameters of Table IV. The solution of a 30
nodes Scatternet topology is represented by Figure 6.
The Scatternets found by our model has the same topology
of graph Figure 2 formed by the dynamic model [7], 5 Masters
in 5 Piconets and 4 Bridges. This topology follows the lower
bound of Piconets proposed by [7], and has the fewest possible
Bridges.
Comparing with the results of the original model from
Figure 2 with the graph of our solution Figure 6, we can
see fewer Piconets, 5 against 8 of the original model, fewer
Bridges, 4 against 6 of the original model. Table V and
Table VI summarizes our results in a comparison with the
topologies found in Scatternet models, namely, centralised,
dynamic and our centralised model, respectively.
VII. CONCLUSION AND FUTURE WORK
In a scatternet, Bridges are actually points of greatest loss
of efﬁciency because they are the nodes responsible for the
coordination of inter-Piconet packet trafﬁc. The computational
effort of this process makes them network bottlenecks and
points of higher power consumption by deﬁnition.
The centralised model that uses mathematical programming
is useful in evaluating the performance of the simplest Scat-
ternet topologies. In adapting the classic model of Marsan et
al. [6] by changing the weights of the Bridges and adding new
constraints, we achieved results similar to those obtained by
51
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

simulation of dynamic algorithm.
In addition, we can conclude that our resulting graph of
the static Bluetooth Scatternet model represents a Scatternet
with an ideal distribution of data ﬂow and power consumption,
since its result is similar to that of Law et al. [7]: complexity
of O(log n) time complexity and O(n) message complexity.
In ours solution, the topology found is coherent with the
rules of efﬁciency of a Scatternet protocol, minimizing the
several performance problems related to the positioning and
number of Bridges.
In future works, we will propose a dynamic Bluetooth
Scatternet Formation protocol that considers the impact of
frequency-hopping in the Bridge nodes and inter-Piconet
scheduling.
ACKNOWLEDGEMENT
Thanks to Fundac¸˜ao de Amparo `a Pesquisa do Estado
de Minas Gerais (FAPEMIG), to CNPq, CAPES, UFOP
(Universidade Federal de Ouro Preto), SEVA Engenharia and
FAPEAL.
REFERENCES
[1]
Bluetooth.com, “The bluetooth network effect,” http://www.bluetooth.
com/Pages/network-effect.aspx/, Last Visited in 26/04/2015.
[2]
bluetooth.org,
“The
bluetooth,
bsig
bluetooth
speciﬁcation
adopted
documents,”
https://www.bluetooth.org/en-us/speciﬁcation/
adopted-speciﬁcations/, Last Visited in 26/04/2015.
[3]
R. M. Whitaker, L. Hodge, and I. Chlamtac, “Bluetooth scatternet
formation: A survey,” vol. 3, no. 4.
Amsterdam, The Netherlands, The
Netherlands: Elsevier Science Publishers B. V., Jul. 2005, pp. 403–450.
[4]
G. Miklos, A. Racz, Z. Turanyi, A. Valko, and P. Johansson, “Perfor-
mance aspects of bluetooth scatternet formation,” in In Proceedings
of the First Annual Workshop on Mobile Ad Hoc Networking and
Computing, 2000, pp. 147–148.
[5]
A. Jedda, A. Casteigts, G. Jourdan, and H. T. Mouftah, “Bluetooth
scatternet formation from a time-efﬁciency perspective,” in Wireless
Networks, vol. 20, no. 5, 2014, pp. 1133–1156. [Online]. Available:
http://dx.doi.org/10.1007/s11276-013-0664-z
[6]
M. Ajmone Marsan, C. F. Chiasserini, A. Nucci, G. Carello, and
L. De Giovanni, “Optimizing the topology of bluetooth wireless per-
sonal area networks,” in INFOCOM 2002. Twenty-First Annual Joint
Conference of the IEEE Computer and Communications Societies.
Proceedings. IEEE, vol. 2, 2002, pp. 572–579 vol. 2.
[7]
C. Law, A. K. Mehta, and K.-Y. Siu, “A new bluetooth scatternet forma-
tion protocol,” in MobiHoc 2002, The ACM International Symposium
on Mobile Ad Hoc Networking and Computing, Lausanne, Switzerland,
june 2002, pp. 183–192.
[8]
A. Jedda, G.-V. Jourdan, and N. Zaguia, “Some side effects of fhss
on bluetooth networks distributed algorithms,” in Proceedings of the
ACS/IEEE International Conference on Computer Systems and Appli-
cations - AICCSA 2010, ser. AICCSA ’10.
Washington, DC, USA:
IEEE Computer Society, 2010, pp. 1–8.
[9]
C. Petrioli, S. Basagni, and I. Chlamtac, “Conﬁguring bluestars: multi-
hop scatternet formation for bluetooth networks,” in Computers, IEEE
Transactions on, vol. 52, no. 6, June 2003, pp. 779–790.
[10]
N. Zaguia, I. Stojmenovic, and Y. Daadaa, “Simpliﬁed bluetooth scatter-
net formation using maximal independent sets,” in Complex, Intelligent
and Software Intensive Systems, 2008. CISIS 2008. International Con-
ference on, 2008, pp. 443–448.
[11]
Z. Wang, R. J. Thomas, and Z. J. Haas, “Performance comparison
of bluetooth scatternet formation protocols for multi-hop networks,”
vol. 15, no. 2.
Hingham, MA, USA: Kluwer Academic Publishers,
Feb. 2009, pp. 209–226. [Online]. Available: http://dx.doi.org/10.1007/
s11276-007-0036-7
[12]
F. Cuomo, T. Melodia, and I. Akyildiz, “Distributed self-healing and
variable topology optimization algorithms for qos provisioning in scat-
ternets,” vol. 22, no. 7, 2004, pp. 1220–1236.
[13]
NS2, “The network simulator 2 - ns2,” http://www.isi.edu/nsnam/ns/,
Last Visited in 26/04/2015.
[14]
C. Chiasserini, M. A. Marsan, E. Baralis, and P. Garza, “Towards
feasible topology formation algorithms for bluetooth-based wpans,”
in
36th
Hawaii
International
Conference
on
System
Sciences
(HICSS-36 2003), CD-ROM / Abstracts Proceedings, January 6-9,
2003, Big Island, HI, USA, 2003, p. 313. [Online]. Available:
http://dx.doi.org/10.1109/HICSS.2003.1174873
[15]
C. M. Soares Ferreira, R. A. Rabelo Oliveira, H. S. Gambini, A. C.
Frery, S. Delabrida, and M. F. Carneiro, “A bluetooth network dynamic
graph,” in AICT 2014, The Tenth Advanced International Conference
on Telecommunications, 2014, pp. 76–80.
[16]
D. A. Q. Wang, “Ucbt - bluetooth extension for ns2,” http://www.cs.uc.
edu/∼cdmc/ucbt/, University of Cincinnati, Last Visited in 26/04/2015.
[17]
IBM, “Ibm ilog cplex optimizer,” http://www-01.ibm.com/software/
integration/optimization/cplex-optimizer/, Last Visited in 26/04/2015.
52
Copyright (c) IARIA, 2015.     ISBN:  978-1-61208-411-4
AICT 2015 : The Eleventh Advanced International Conference on Telecommunications

