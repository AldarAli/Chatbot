An Algorithmic Approach for Analyzing Wireless Networks with Retrials and
Heterogeneous Servers
Nawel Gharbi
Computer Science Department
University of Sciences and Technology, USTHB
Algiers, Algeria
Email: ngharbi@wissal.dz
Leila Charabi
Computer Science Department
University of Sciences and Technology, USTHB
Algiers, Algeria
Email: leila.charabi@gmail.com
Abstract—Models with retrial phenomenon and heteroge-
neous servers arise in various wireless networks. This paper
aims at presenting an approach for modeling and analyzing
ﬁnite-source wireless networks with retrial phenomenon and
heterogeneous servers using the Generalized Stochastic Petri
Nets. This high-level formalism allows a simple representation
of complex systems. Moreover, from the GSPN model, a
Continuous Time Markov Chain can be automatically derived
for the performance analysis. However, for important retrial
networks, generating the Markov chain from the GSPN and
solving it, require large storage space and long execution time.
Hence, using the GSPN model as a support, we propose an
algorithm for directly computing the inﬁnitesimal generator of
the GSPN model without generating neither the reachability
graph nor the underlying Markov chain. In addition, we
develop the formulas of the main stationary performance
indices, as a function of the network parameters, the stationary
probabilities and independently of the reachability set mark-
ings. Through numerical examples, we discuss the effect of the
system parameters on performance.
Keywords-Retrial
phenomenon;
Heterogeneous
servers;
Wireless networks; Generalized Stochastic Petri nets; Perfor-
mance indices.
I. INTRODUCTION
Models with retrial phenomenon are characterized by the
feature that a customer ﬁnding all servers busy or unavail-
able, is obliged to leave the service area, but he repeats
his request after some random period of time. These models
play an important role in wireless cellular networks [4], [11],
[12]. Signiﬁcant references reveal the non-negligible impact
of repeated calls, which arise due to a blocking in a system
with limited capacity resources or are due to impatience
of customers. For a systematic account of the fundamental
methods and results on this topic, we refer the readers to
[2], [3], [7].
Most studies on retrial models with ﬁnite source (popu-
lation), assume that the service station consists of homo-
geneous (identical) servers. However, retrial models with
heterogeneous servers arise in various practical areas as
telecommunications and cellular mobile networks. In fact,
these models are far more difﬁcult for mathematical analysis
than models with homogeneous servers, and explicit results
are available only in few special cases and almost all
studies are investigated only by means of queueing theory.
In fact, we have found in the literature, only the few papers
of Efrosinin [6] and Sztrik [10], [9] where heterogeneous
servers case was considered using retrial queueing model,
and the paper [8] where we have proposed the modeling
and the analysis of multiclass retrial systems by means of
colored generalized stochastic Petri nets.
The objective of this paper is to present an approach for
modeling and analyzing performances of ﬁnite-source retrial
networks with heterogeneous servers using the Generalized
Stochastic Petri Nets (GSPNs) [1], [5]. From a modeling
point of view, and compared to retrial queueing models, this
high-level graphical formalism allows an easier description
of the behavior of complex retrial networks, and it has shown
to be a very effective mathematical model, appropriate
for modeling and analyzing performance of parallel sys-
tems exhibiting concurrency and synchronization. Moreover,
from the GSPN model, a Continuous Time Markov Chain
(CTMC) can be automatically derived for the performance
analysis. However, generating the Markov chain from the
GSPN and solving it, still requires large storage space
and long execution time, since the state space increases
exponentially as function of the customers source size and
servers’ number. So, for important retrial networks, the
corresponding models may have a huge state space. Hence,
using the GSPN model as a support, we propose in this
paper, an algorithmic approach for directly computing the
inﬁnitesimal generator without generating the reachability
graph nor the underlying Markov chain. In addition, we
develop the formulas of the main stationary performance
indices, as a function of the number of servers of each class,
the size of the customers source, the stationary probabilities
and independently of the reachability set markings.
The paper is organized as follows. In Section 2, we
describe the basic model of ﬁnite-source retrial networks
with heterogeneous servers. In Section 3, the basic notions
of GSPNs are reviewed. Next, we present the GSPN model
describing retrial networks with heterogeneous servers. In
Section 4, the proposed stochastic analysis approach is
151
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

detailed. The computational formulas for evaluating exact
performance indices are derived in Section 5. Next, based
on numerical examples, we validate the proposed approach
and we discuss the effect of system parameters on the
performability of the system. Finally, we give a conclusion.
II. THE BASIC MODEL
We consider retrial networks with ﬁnite source (popu-
lation) of customers of size L and a service station that
consists of heterogeneous servers. Each customer is either
free, under service or in orbit at any time. The input stream
of primary calls is the so called quasi-random input. The
probability that any particular customer generates a primary
request for service in any interval (t, t + dt) is λdt + o(dt)
as dt → 0 if the customer is free at time t, and zero if the
customer is being served or in orbit at time t.
The servers are partitioned in two classes: Class C1 and
Class C2, that is the servers of a given class have the same
parameters. Each class Cj (1 ≤ j ≤ 2) contains Sj identical
and parallel servers. There are two possible states for a
server: idle or busy (on service). If there is an idle server at
the moment a customer request arrives, then the service starts
immediately. The customer becomes ”under service” and
the server becomes ”busy”. Service times are independent
identically-distributed random variables, whose distribution
is exponential with parameter µ1 if a class C1 server is
selected and µ2 for servers of class C2.
Each customer request must be served by one and only
one server. On the other hand, we consider, the Random
Server discipline, which means that, the server to which
a request is assigned is chosen randomly among all idle
servers, whatever their class. After service completion, the
customer becomes free, so it can generate new primary calls,
and the server becomes idle again. Otherwise, if all servers
of the two classes are busy at the arrival of a request, the
customer joins the orbit and starts generation of a ﬂow of
repeated calls exponentially distributed with rate ν, until
he ﬁnds one free server. We assume that all customers are
persistent in the sense that they keep making retrials until
they receive their requested service.
As usual, we assume that the arrival, service and inter-
retrial times are mutually independent of each other.
III. GSPN MODEL OF RETRIAL NETWORKS WITH
HETEROGENEOUS SERVERS
In this section, we present the Generalized Stochastic Petri
Net model describing ﬁnite-source retrial networks with two
servers classes and random server discipline. To this aim, we
give the basic notions of Generalized stochastic Petri nets
(GSPNs).
A GSPN [1], [5] is a directed graph that consists of two
kinds of nodes, called places (drawn as circles) and transi-
tions that are partitioned into two different classes: timed
transitions with rates of negative exponential distribution
(represented by means of white rectangles), which describe
the execution of time consuming activities and immediate
transitions (represented by black rectangles), which model
logic activities as synchronization.
The system state is described by means of markings.
A marking is a mapping from P to IN, which gives the
number of tokens in each place after each transition ﬁring.
A transition is said to be enabled in a given marking, if and
only if each of its normal input places contains at least as
many tokens as the multiplicity of the connecting arc, and
each of its inhibitor input places contains fewer tokens than
the multiplicity of the corresponding inhibitor arc. More-
over, timed transitions can ﬁre only after an exponentially
distributed delay, while enabled immediate transitions have
priority over timed transitions and ﬁre in zero time.
The ﬁring of an enabled transition creates a new marking
(state) of the net. The set of all markings reachable from
initial marking M0 is called the reachability set. The reacha-
bility graph is the associated graph obtained by representing
each marking by a vertex and placing a directed edge from
vertex Mi to vertex Mj, if marking Mj can be obtained by
the ﬁring of some transition enabled in marking Mi.
This graph consists of tangible markings enabling only
timed transitions and vanishing markings in which at least
one immediate transition is enabled. Since the process
spends zero time in the vanishing markings, they are elimi-
nated from the reachability graph by merging them with their
successor tangible markings [1]. This elimination results
in a tangible reachability graph, which is isomorphic to a
continuous time Markov chain (CTMC).
In the following, we present the GSPN model describing
ﬁnite-source retrial systems with two servers classes and
random server discipline. In this model depicted in Figure
1, place Cus Free represents the free customers, Orbit
contains the customers waiting for the service, Ser Idle1
and Ser Idle2 indicate respectively the number of free
servers of class C1 and class C2, while Cus Serv1 and
Cus Serv2 model the busy servers of both classes. The
arrival of a primary call causes the ﬁring of the transition
Arrival, which ﬁring rate is marking dependent and equals
λ.M(Cus Free) (inﬁnite service semantics) which is rep-
resented by the symbol # placed next to transition, because
all free customers are able of generating calls, independently
of each other.
The place Choice is then marked. Following the marking
of both Ser Idle1 and Ser Idle2, we have the following
scenarios:
• If both places are empty (no free server), the immediate
transition Go Orbit is enabled, and a token is deposited
in the place Orbit, which means that the customer
asking for service joins the orbit and becomes a source
of a ﬂow of repeated calls exponentially distributed
with rate ν.
The ﬁring of the transition Retrial corresponds to the
152
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

generation of a repeated call from a customer in orbit.
This transition has inﬁnite servers semantics, since all
customers in orbit can trigger repeated calls indepen-
dently;
• If only one place (Ser Idle1 or Ser Idle2) contains
tokens and the other is empty, the immediate transition
corresponding to the class with at least one free server
(Begin Serv1 for the class C1, and Begin Serv2 for
class C2) is enabled. Hence the customer starts its
service and the server becomes busy.
• When both places are marked (i.e., each class contains
at least one free server), the two immediate transitions
Begin Serv1 and Begin Serv2, which are already in
structural conﬂict, come into effective conﬂict. As there
is no priority order between the two classes C1 and
C2, the same weight is assigned to both transitions as
follows:
w(Begin Serv1) = w(Begin Serv2) = ω
Thus, ﬁring of one or other is probabilistic and the
probability equals 1/2. Hence, servers of both classes
have the same chance of being selected to serve the
customers requests.
By the end of service of a customer under a server
of class C1 (C2 respectively), the timed transition
Serv End1 (Serv End2 respectively) ﬁres. As several
servers may be busy at the same time, the seman-
tics of these two transitions is inﬁnite servers. After
completion of service, the customer returns to state
free (one token in place Cus Free) and the server
becomes available (one token is put in place Ser Idle1
or Ser Idle2, according to the class to which the server
belongs).
Figure 1.
GSPN Model of ﬁnite-source retrial networks with two servers
classes
IV. STOCHASTIC ANALYSIS
Initially, the orbit is empty, all customers are free and
all servers are available. Thus the initial marking can be
expressed in this form:
M0
=
{M(Cus Free), M(Choice), M(Orbit),
M(Ser Idle1), M(Cus Serv1), M(Ser Idle2),
M(Cus Serv2)}
=
{L, 0, 0, S1, 0, S2, 0}
Whatever the values of L, S1 and S2, the conservation of
customers and servers of the two classes, gives the following
equations:







M(Ser Idle1) + M(Cus Serv1) = S1
M(Ser Idle2) + M(Cus Serv2) = S2
M(Cus Free) + M(Cus Serv1)
+M(Cus Serv2) + M(Orbit) = L
(1)
Observing these three equations, we note that the system
state at steady-state can be described by means of three
variables (i, j, k), which we called a micro-state where :
• i represents the number of customers being served by
servers of class C1 (in place Cus Serv1);
• j represents the number of customers being served by
servers of class C2 (in place Cus Serv2);
• and k is the number of customers in orbit (in place
Orbit).
Hence, having the micro-state (i, j, k), the markings of
all places can be obtained, since M(Ser Idle1) = S1 − i,
M(Ser Idle2) = S2 − j and M(Cus Free) = L − (i +
j + k).
On the other hand, applying (1), we can deduce:



0 ≤ i ≤ S1
0 ≤ j ≤ S2
0 ≤ k ≤ L − (S1 + S2)
(2)
The CTMC corresponding to the proposed GSPN con-
tains n micro-states corresponding to the accessible tangible
markings, where n equals (S1 +1).(S2 +1)[(L+1−S] and
S = S1 + S2.
Thus, the corresponding inﬁnitesimal generator Q is a n×
n matrix, which is deﬁned by :
{ Q[(i, j, k), (x, y, z)] = θ[(i, j, k), (x, y, z)]
Q[(i, j, k), (i, j, k)] = − ∑
(l,m,n)̸=(i,j,k) θ[(i, j, k), (l, m, n)]
where θ[(i, j, k), (x, y, z)] is the transition rate from state
(i, j, k) to state (x, y, z).
By analyzing the micro-states and the transitions rates of
the CTMC, we obtain the following rates:
• [0
≤
i
≤
S1 − 1, 0
≤
j
≤
S2 − 1]
:
(i, j, k)
1
2 (L−i−j−k)λ
−−−−−−−−−→ (i + 1, j, k)
and (i, j, k)
1
2 (L−i−j−k)λ
−−−−−−−−−→ (i, j + 1, k)
153
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

• [0 ≤ i ≤ S1−1] : (i, S2, k)
(L−i−S2−k)λ
−−−−−−−−−→ (i+1, S2, k),
• [0 ≤ j ≤ S2 − 1] : (S1, j, k)
(L−S1−j−k)λ
−−−−−−−−−→ (S1, j +
1, k),
• [0 ≤ k < L − (S1 + S2)] : (S1, S2, k)
(L−S−k)λ
−−−−−−−→
(S1, S2, k + 1),
• [i > 0] : (i, j, k)
iµ1
−−→ (i − 1, j, k),
• [j > 0] : (i, j, k)
jµ2
−−→ (i, j − 1, k),
• [0 ≤ i ≤ S1 −1, 0 ≤ j ≤ S2 −1, k > 0] : (i, j, k)
1
2 kν
−−→
(i + 1, j, k − 1) and (i, j, k)
1
2 kν
−−→ (i, j + 1, k − 1),
• [0 ≤ i ≤ S1−1, k > 0] : (i, S2, k)
kν
−→ (i+1, S2, k−1),
• [0 ≤ j ≤ S2 − 1, k > 0] : (S1, j, k)
kν
−→ (S1, j + 1, k −
1),
As a consequence, the inﬁnitesimal generator can be
automatically calculated by means of Algorithm 1 given
below.
V. PERFORMANCE MEASURES
The aim of this section is to derive the formulas of the
most important stationary performance. As the proposed
models are bounded and the initial marking is a home state,
the underlying process is ergodic. Hence, the steady-state
solution exists and is unique. The inﬁnitesimal generator
Q corresponding to the GSPN model can be obtained
automatically by applying the above algorithm. Then, the
steady-state probability vector π can be computed by solving
the linear system of equations:
{
π.Q = 0
∑
i πi = 1
(3)
Where πi denotes the steady-state probability that the pro-
cess is in state Mi.
Having the probability distribution π, we can derive sev-
eral exact stationary performance measures of ﬁnite-source
retrial networks with two classes of servers applying the
formulas given below. In following, Mi(p) indicates the
number of tokens in place p in marking Mi, A is the set of
reachable tangible markings, and A(t) is the set of tangible
markings reachable by transition t.
• Mean number of customers in the
orbit:
This
corresponds
to
the
mean
number
of tokens in Orbit,
nOrb =
∑
i:Mi∈A
Mi(Orbit).πi =
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
k.πi,j,k
• Mean number of busy servers of class
C1: Note that this is also the mean number of
customers under service by Class C1, it corresponds
to the mean number of tokens in place Cus Serv1,
nbusyC1 =
∑
i:Mi∈A
Mi(Cus Serv1).πi =
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
i.πi,j,k
Algorithm 1 Inﬁnitesimal Generator Construction
1: for k ← 0, L − S do
2:
for i ← 0, S1 − 1 do
3:
for j ← 0, S2 − 1 do
4:
Q[(i, j, k), (i+1, j, k)] ← 1/2(L−i−j−k)λ
5:
Q[(i, j, k), (i, j+1, k)] ← 1/2(L−i−j−k)λ
6:
Q[(S1, j, k), (S1, j +1, k)] ← (L−S1−j −
k)λ
7:
end for
8:
Q[(i, S2, k), (i+1, S2, k)] ← (L−i−S2−k)λ
9:
end for
10: end for
11: for k ← 0, L − S − 1 do
12:
Q[(S1, S2, k), (S1, S2, k + 1)] ← (L − S − k)λ
13: end for
14: for k ← 0, L − S do
15:
for i ← 1, S1 do
16:
for j ← 0, S2 do
17:
Q[(i, j, k), (i − 1, j, k)] ← iµ1
18:
end for
19:
end for
20:
for j ← 1, S2 do
21:
for i ← 0, S1 do
22:
Q[(i, j, k), (i, j − 1, k)] ← jµ2
23:
end for
24:
end for
25: end for
26: for k ← 1, L − S do
27:
for i ← 0, S1 − 1 do
28:
for j ← 0, S2 − 1 do
29:
Q[(i, j, k), (i + 1, j, k − 1)] ← 1/2.kν
30:
Q[(i, j, k), (i, j + 1, k − 1)] ← 1/2.kν
31:
end for
32:
Q[(i, S2, k), (i + 1, S2, k − 1)] ← kν
33:
end for
34:
for j ← 0, S2 − 1 do
35:
Q[(S1, j, k), (S1, j + 1, k)] ← kν
36:
end for
37: end for
• Mean number of busy servers of class
C2:
nbusyC2 =
∑
i:Mi∈A
Mi(Cus Serv2).πi =
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
j.πi,j,k
• Mean number of busy servers:
It
corresponds to the sum of busy servers in both
of the 2 classes
nbusy = nbusyC1 +nbusyC2 =
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
(i+j).πi,j,k
154
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

• Mean number of customers in the
network:
Which
is
the
total
number
of
the
mean number of customers in the orbit and those
under service (by C1 and C2),
n = nOrb + nbusy =
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
(i + j + k).πi,j,k
• Mean number of free servers: This corre-
sponds to the sum of the mean number of free servers
of both classes:
nF ree = S − nbusy
• Effective customer arrival rate:
This
represents the throughput of the transition Arrival,
¯λ
=
∑
i:Mi∈A(Arrival)
λ.Mi(Cus Free).πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
λ.(L − i − j − k).πi,j,k
=
λ.nCusF ree
• Effective customer retrial rate: It cor-
responds to the throughput of Retrial transition,
¯ν
=
∑
i:Mi∈A(Retrial)
ν.Mi(Orbit).πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
ν.k.πi,j,k = ν.nOrb
• Mean service rate of class C1: This cor-
responds to the throughput of the transition Serv End1,
¯µ1
=
∑
i:Mi∈A(Serv End1)
µ1.Mi(Cus Serv1).πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
µ1.i.πi,j,k = µ1.nbusyC1
• Mean service rate of class C2: This cor-
responds to the throughput of Serv End2,
¯µ2
=
∑
i:Mi∈A(Serv End2)
µ2.Mi(Cus Serv2).πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0
µ2.j.πi,j,k = µ2.nbusyC2
• Availability of s servers in the
system (among both classes):
As
=
∑
i:Mi(Ser Idle1)+Mi(Ser Idle2)≥s
πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0,i+j≤S−s
πi,j,k
Homogeneous
Two servers
case
classes system
Number of servers
4
S1= 1,S2= 3
Size of source
20
20
Primary call generation rate
0.1
0.1
Service rate
1
µ1= 1, µ2= 1
retrial rate
1.2
1.2
C1: 0.521 865
Mean number of busy servers
1.800 748
C2: 1.278 883
Total : 1.800 748
Mean number of source in the orbit
0.191 771
0.191 771
Mean primary call generation rate
1.800 748
1.800 748
Mean waiting time
0.106 495
0.106 495
Table II
VALIDATION IN THE HOMOGENEOUS CASE
• Utilization of at least s servers:This
corresponds to the probability that at least s servers
among the two classes are busy:
Us
=
∑
i:Mi(Cus Serv1)+Mi(Cus Serv2)≥s
πi
=
L−S
∑
k=0
S1
∑
i=0
S2
∑
j=0,i+j≥s
πi,j,k
• The mean waiting time: It’s the mean period
between the arrival of the customer and its service
beginning. Using the Little’s formula, the mean waiting
time is given by:
¯W = nOrb
¯λ
• The mean response time:
¯R = n
¯λ
VI. VALIDATION AND NUMERICAL EXAMPLES
In order to test the feasibility of our approach, we devel-
oped a C# code to implement the above algorithm (1) and
the performance indices formulas. Next, we tested it for a
large number of examples. In particular, in the homogeneous
case, the results were validated by the Pascal program given
in [7]. From table (II), we can see that both models give
exactly the same results up to the 6th decimal digit.
L
S1
S2
λ
ν
µ1
µ2
Figure 2
50
4
2
0.5
x axis
8
2
Figure 3
30
x axis
4
2
1
6
1
Figure 4
30
4
x axis
2
1
6
1
Table I
INPUT SYSTEM PARAMETERS
In the following, we present sample numerical results to
illustrate graphically the impact of different system param-
eters on the mean response time. The input parameters are
collected in table I.
155
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

The ﬁgure (2) shows the sensitivity of the mean response
time to the retrial generation rate. Indeed, the response time
decreases with the intensity of the ﬂow of repeated calls,
particularly when the retrial intensity is low (between 0.01
and 0.3), beyond the value 0.3, the inﬂuence becomes less
signiﬁcant.
Figure 2.
Mean response time versus retrial generation rate.
In ﬁgure 3, (4 respectively), we show the inﬂuence of
the number of servers of C1 (C2 respectively) class, on the
mean response time. We conclude that this last decreases
with the increase of the servers number. However, the rate
of inﬂuence of the number of servers in the C1 class is
faster than the inﬂuence due to increasing the number of
servers of C2 because the former is faster (µ1 = 6 vs µ2 =
1). In ﬁgure (3), the response time reached the optimum
and stabilizes after a certain time (number of servers = 12).
Hence, it is not interesting to invest in new servers in the
C1 class.
Figure 3.
Mean response time versus C1 class servers number.
REFERENCES
[1] M. Ajmone Marsan, G. Balbo, G. Conte, S. Donatelli, and
G. Franceschinis, Modelling with Generalized Stochastic Petri
Nets, John Wiley & Sons, New York, 1995.
[2] J.R. Artalejo and A. G´omez-Corral, Retrial Queueing Sys-
tems: A Computational Approach, Springer, Berlin, 2008.
Figure 4.
Mean response time versus C2 class servers number.
[3] J.R. Artalejo, Accessible bibliography on retrial queues:
Progress in 2000-2009, Mathematical and Computer Mod-
elling, vol. 51, pp. 1071-1081, 2010.
[4] J.R. Artalejo and M.J. LOPEZ-HERRERO, Cellular mobile
networks with repeated calls operating in random environ-
ment,Computers & operations research, vol. 37, no7, pp.
1158-1166, 2010.
[5] M. Diaz, Les r´eseaux de Petri - Mod`eles Fondamentaux, Paris,
Herm`es Science Publications, 2001.
[6] D. Efrosinin and L. Breuer, Threshold policies for controlled
retrial queues with heterogeneous servers, Annals of Opera-
tions Research, vol. 141, pp. 139-162, 2006.
[7] G.I. Falin and J.G.C. Templeton, Retrial Queues, Chapman
and Hall, London, 1997.
[8] N. Gharbi, C. Dutheillet, and M. Ioualalen, Colored Stochas-
tic Petri Nets for Modelling and Analysis of Multiclass Retrial
Systems, Mathematical and Computer Modelling, vol. 49, pp.
1436-1448, 2009.
[9] J. Roszik and J. Sztrik, Performance analysis of ﬁnite-source
retrial queues with nonreliable heterogeneous servers, Journal
of Mathematical Sciences, vol. 146, pp. 6033-6038, 2007.
[10] J. Sztrik, G. Bolch, H. de Meer, J. Roszik, and P. Wuech-
ner, Modeling ﬁnite-source retrial queueing systems with
unreliable heterogeneous servers and different service poli-
cies using MOSEL, Proc. of 14th Inter. Conf. on Analyti-
cal and Stochastic Modelling Techniques and Applications
ASMTA’07, Pargue, Czech Republic, pp. 75-80, 2007.
[11] Tien Van Do, A new computational algorithm for retrial
queues to cellular mobile systems with guard channels, Com-
puters & Industrial Engineering, vol. 59, pp. 865-872, 2010.
[12] P. Tran-Gia and M. Mandjes, Modeling of customer retrial
phenomenon in cellular mobile networks, IEEE Journal on
Selected Areas in Communications, vol. 15, pp. 1406-1414,
1997.
156
ICWMC 2011 : The Seventh International Conference on Wireless and Mobile Communications
Copyright (c) IARIA, 2011.     ISBN: 978-1-61208-140-3

