Personalizing the Internet of Things Using Mobile Information Services
Dmitry G. Korzun
Department of Computer Science
Petrozavodsk State University
Petrozavodsk, Russia
e-mail: dkorzun@cs.karelia.ru
Sergey I. Balandin
ITMO National Research University
St. Petersburg, Russia
FRUCT Oy
Helsinki, Finland
e-mail: sergey.balandin@fruct.org
Abstract—A smart space enables semantics-oriented information
sharing in a networked computing environment, including the
case of mobile settings. In this paper, we consider the emerging
case of Internet of Things (IoT) environments. We introduce
our study on personalization of such environments using mobile
information services within a smart space. Such advanced services
are deﬁned now as “smart” or “intelligent”. Their construction
and delivery are provided by participants themselves, following
the concepts of multiagent systems, peer-to-peer networks, and
autonomic computing. This study identiﬁes the key properties of
a smart space to serve its mobile users and to provide them with
all needed information assistance.
Keywords–Smart Spaces; Internet of Things; Information Ser-
vices; Personalization; Mobile OS.
I.
INTRODUCTION
We consider the emerging case of Internet of Things (IoT)
environments [1]. An IoT environment is associated with a
physical spatial-restricted place equipped with and consisting
of a variety of devices personal mobile devices, multimodal
systems, etc.). In addition to local networking, the environ-
ment has access to the global Internet with its diversity of
services and resources. Evolving from the world of embedded
electronic devices, an IoT environment includes many mobile
participants, each acts as an autonomous decision-making
entity: a smart object in the IoT terms [2] or agent in the
multiagent system terms [3]. In these IoT settings, the role of
personalized mobile information services becomes growing.
Smart spaces form a programming paradigm for creating
a wide class of ubiquitous computing environments [4]–[8].
Nowadays, smart spaces become more and more closely
integrated with IoT. More precisely, a smart space enables
information sharing in a given IoT environment, supporting
construction of advanced information services by the partici-
pants themselves. Such services are often referred as “smart”,
emphasizing the new level of service recognition (detection
of user needs), construction (automated preprocessing of large
data amounts) perception (derived information provision to the
user for decision-making). In this paper, we study personaliza-
tion of IoT environments using mobile information services
constructed within smart spaces.
Our study essentially exploits the known opportunities of
M3 architecture [1], [9], [10], which represents a particular
approach to creation of smart spaces [11]–[13]. Participants
are software agents that act as Knowledge Processors (KPs)
over the information of the entire given IoT environment. The
central component is a Semantic Information Broker (SIB). It
maintains a knowledge corpus cooperatively collected and pro-
duced by the KPs themselves, following the concept of Peer-
to-Peer (P2P) networking and implementing an information
hub of the environment. We characterize mobile information
services by their ability (i) to ﬁnd a proper information frag-
ment (e.g., a situation-aware recommendation) in the knowl-
edge corpus over the information available in the whole IoT
environment and (ii) to deliver the result to the mobile end-user
with effectively perceived visual representation on the personal
mobile device (e.g., a widget on smartphone).
The M3-based approach achieves semantic interoperability
even in the challenging IoT settings when the large number of
mobile participants are involved as well as a lot of surrounding
devices and remote Internet services are used in computations.
Service construction can be personalized for a mobile user
based on recognition and own interpretation of the collected
information by the KPs resided on the user’s personal mobile
device. Service delivery and consumption by a mobile user
essentially depends on processing and visualization methods
supported on the user’s personal mobile device and its mobile
Operating System (OS).
The rest of the paper is organized as follows. Section II in-
troduces mobile information services constructed within smart
spaces. Section III discusses the properties of service construc-
tion and delivery in the case of IoT environments. Section IV
studies the role and opportunities of mobile operating systems
to form our approach to service-oriented personalization of
IoT environments. Section V motivates the value offering
of personal smart spaces that virtually accompany the users
providing them advanced mobile information services. Finally,
Section VI concludes the presented study.
II.
MOBILE INFORMATION SERVICES
The amount of information is growing in the Internet such
that users cannot efﬁciently manage the existing multitude
of resources. The observable lack of mechanisms for infor-
mation exchange between Internet services results in high
fragmentation, i.e., information collected in one service is
rarely accessible in another. In this section, we consider the
M3-based approach to mobile information services constructed
within smart spaces. Such services are called “smart” aiming at
intelligent use of all available information in various situations
that the mobile user can get [5], [6], [8].
The ﬁrst property is an information service, i.e., the service
provides the information fragment appropriate to the user in
the current environment. The user—not the service—applies
this fragment for situational decision-making. Consequently,
such services provides a kind of informational and analytical
support. The intellectual role of human is not replaced but
184
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

auxiliary assistance is performed, similarly as it has happened
in automated and autonomic computing [14]. The key chal-
lenge is information search, construction of the appropriate
information fragment, and its visualization to the user.
The second property is a mobile service. The mobility
essentially increases the number of situations which the users
can get in. Consequently, such services are acting as a mobile
assistant that accompanies the user. The latter follows the style
“make everything from my personal mobile device”, and the
user may have no idea which other devices (surrounding or
remote) are involved into the service construction and deliv-
ery. The key challenge is making the participation easy and
transparent, as well as the service delivery becomes essentially
aware of the visualization capabilities of the user’s device.
Smart spaces support provision of advanced information
services [12]. A smart space is created in a given computing
environment, which is typically localized by being associated
with a physical spatial-restricted place (ofﬁce, room, home,
city square, etc.). The environment is equipped with a variety
of devices, including the essential share of mobile ones. Smart
spaces aim at supporting cooperation of all devices in the
environment in order to provide its users with convenience,
safety, and comfort. The underlying computing environment is
enhanced to handle the growth of the number of mobile devices
and the amount of multi-source information to be processed.
The required cooperation of devices is supported by estab-
lishing a shared view of resources in the environment. Every
device can join and leave the space dynamically. Software part
of a smart environment includes two sides:
1)
Agents to make autonomous information processing,
2)
An information hub to provide a shared view on all
available information.
Participation of a device is determined by its software
agent running on the device. The users participate using
their personal mobile devices as primary means to consume
services. Each agent produces its share of information and
makes it available to others via the hub. Similarly, the agent
consumes information of its own interest from the hub. That is,
a hub is a server that realizes a shared information space (i.e.,
an associative memory for agents) for the required cooperation.
The M3 architecture provides a particular approach for
creating smart spaces [1], [9]. Rather than promoting the
compatibility within one speciﬁc service-level solution in terms
of protocols or software stacks, the M3 architecture addresses
information-level compatibility and the collaboration between
different producers and consumers of information on more
abstract level [5], [8]. Agents interact on a semantic level,
utilizing (potentially different) existing underlying services.
Smart-M3 platform [13], [15] is open source middleware
for implementing smart spaces that follow the M3 architec-
ture and take the mobile settings into account; see Fig. 1.
The key architectural component is SIB that implements an
information hub for agents of a given environment. Agents
act as KPs running on devices of the environment. Some of
them act on behalf of external data sources, resources, and
services. Network communication between a KP and its SIB
uses Smart Space Access Protocol (SSAP) or other M3-aware
protocols [16] for information access and exchange.
Each KP communicates with a SIB using the blackboard
interaction model [17]. This SIB maintains semantic informa-
tion of the environment and its applications. The information
Figure 1. Smart-M3 concept model of a smart space.
is represented in accordance with the Resource Description
Framework (RDF); see [18]. The basic data unit is a triple. A
set of such RDF triples is considered as a graph, allowing
representing semantics as relations. As a result, a shared
knowledge corpus is formed in an RDF triplestore.
Communication between KPs is indirect, it occurs through
the insertion and removal of triples into or from the SIB. This
blackboard model is complemented by the Pub/Sub model [7],
[17], which allows KPs to subscribe to speciﬁc triples. A
subscribe operation creates a persistent query that is stored
in the SIB and is re-evaluated automatically after each change
to the shared content. Every subscribed KP is notiﬁed when
the speciﬁed triples are added, removed, or updated.
The content representation in the form of RDF graph
makes the ability to reason existing knowledge and infer
new knowledge by means of ontologies. The Web Ontology
Language (OWL) from the Semantic Web is used for creating
ontologies [18]. Following [19], let us formally deﬁne a smart
space as (I, O), where I is factual data (smart space content)
and ontology O provides their logical representation structure.
Ontology provides a tool to make use of the shared data and
their semantics. Thus, the KPs can focus on the semantics of
processed information.
In the multi-agent case, the notion of common ontology for
the entire smart space becomes more or less virtual. Explicit
maintenance of a space-wide large ontology O is impractical.
Each KP may use own ontology o, though partially agreed with
others. The partial ontology o describes the structure of content
accessible by this KP (or a group of KPs). This property leaves
freedom for a mobile KP to make own interpretation of the
shared knowledge corpus, e.g., depending on the local user’s
context observed on the personal mobile device.
Operations on shared content I are essentially based on
semantic search: any operation with an information fragment i
ﬁrst requires ﬁnding i in I. Table I shows basic smart space
access primitives. SIB supports search queries using SPARQL
query language. The result of the query is a list of all triples
that match the query. In fact, it makes any SIB a SPARQL
endpoint [18]. If the ontology-oriented type of interaction is
used then the smart space access primitives are enriched with
ontology, e.g., for q = q(o) the search query becomes subject
to the given logical structure of factual data in I.
185
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

TABLE I. SMART SPACE ACCESS PRIMITIVES.
Primitive
Notation
Description
Search factor
join, leave
—
KP initiates a session establishing a network connection to SIB. KP may use own ontology
o for structural representation of exchanged information between KP and SIB.
Scope determination:
part of I that the given KP may
access.
insert
I := I + x
Insertion of new facts. A set of triples x is added to I on the assumption that no triple of
x already exists in I.
Existence check:
I does not contain x.
remove
I := I − x
Remove existing facts. A set of triples x is deleted from I on the assumption that x already
exists in I.
Existence check:
I contains x.
update
I := ⟨I + x⟩
Update of existing facts. A set of triples x is updated in I (non-interrupted remove and
insert) on the assumption that the triples already exist in I.
Search:
triples x to update.
query
x := [q → I]
Instant content retrieval. The query returns all existing in I triples x speciﬁed by q.
Search:
triples x matching to the speciﬁ-
cation q.
subscribe,
unsubscribe
Await x := [q → I]
Persistent content retrieval. Whenever the speciﬁed by q content in I is changed the query
returns the affected triples x
Search: appearance of triples x
matching to the speciﬁcation q.
In summary, construction of an information service requires
iterative search-and-process manipulations of several KPs on
the shared content. Eventually, a needed information fragment
becomes derivable by a KP on the user side.
III.
SERVICES IN INTERNET OF THINGS ENVIRONMENTS
An IoT environment is a computing environment associ-
ated with a physical spatial-restricted place. The surrounding
“things” are Internet-enabled devices that can perform compu-
tations. In addition to local networking, the environment has
access to the global Internet with its diversity of services and
resources. In this section, we formalize construction and deliv-
ery of mobile information services in smart spaces deployed
in a given IoT environments.
Although the term IoT was initially proposed to refer
to uniquely identiﬁable interoperable connected objects with
Radio-Frequency IDentiﬁcation (RFID) technology, now the
most common view of IoT refers to a dynamic global net-
work infrastructure for the ubiquitous connection of numerous
physical objects (e.g., everyday things equipped with RFIDs,
various sensors and actuators, embedded and mobile electronic
devices, low capacity and powerful computers) that rely on
advanced wireless communication and information processing
technologies. Furthermore, IoT aims at fusion of real (physical)
and virtual (information) worlds. As a result, IoT is evolving to
service-oriented information interconnection and convergence
on the global level [2], [20], [21].
Involvement of many surrounding devices of the IoT envi-
ronment is one of the essential properties that the smart spaces
approach has to take into account in service development. Even
low-capacity devices act in service construction on the equal
basic with more powerful computers. As a result, it opens the
services for data coming from the physical world (embedded
and other IoT devices) and from such an overlapped area
of the physical and information worlds as human-related and
social activity [22] (smartphones and other personal mobile
computers, various carried and wearable devices). Many edge
IoT devices become responsible for a signiﬁcant part of system
computations, in accordance to the vision of smart objects in
IoT [2], [23] and of human-centered information systems in
edge-centric computing [24].
The interoperability becomes one of the key issues. For a
smart space deployed in an IoT environment, the interoper-
ability is deﬁned as the ability for software agents (written in
different programming languages, running on different devices
with different operating systems) to communicate and interact
with one another (over different networks). In the previous
Require: Ontology o to access information content I of the
smart space. The set U of available UI devices.
1: Await [qact(o) → I] = true {event-based activation}
2: Query x := [qinfo(o) → I] {information selection}
3: Select d ∈ U {target UI devices}
4: Visualization vd := vd + x {service delivery to end-user}
Figure 2. Information service construction for the end-user.
Require: Ontology o to access smart space information con-
tent I. The set U of available UI devices.
1: Await [qact(o) → I] = true {event-based activation}
2: Query x := [qinfo(o) → I] {information selection}
3: Decide y := f(x, o) {formulation of processing action}
4: Update I := I + y {new shared information}
Figure 3. Content search & processing in the smart space.
section, we showed that having a shared view on available
resources an information service can be considered as infor-
mation search and knowledge reasoning over the content I
with subsequent delivery of the result to the end-users. Let us
formalize conceptual steps of the service construction.
The algorithm in Fig. 2 deﬁnes construction of an informa-
tion service for the end-user. Step 1 detects when the service is
needed based on the current situation in the smart space. Step 2
makes selection of knowledge x to deliver to the user. Step 3
decides which UI elements are target devices for the service
delivery. Step 4 updates recent visualization vd to include x
on device d.
The algorithm in Fig. 3 deﬁnes construction of an informa-
tion service responsible for eventual production of appropriate
information fragments in the smart space. Step 1 analyzes the
space content to detect when a processing action is needed.
Steps 2 and 3 are reasoning in context of the current situation,
and the service decides what updates (possibly without human
intervention) are needed in the recent system state. The updates
become available to the participants.
Therefore, KPs of the smart space apply available knowl-
edge in constructing and delivering the services, without nec-
essarily identiﬁcation who ﬁnds and provides the knowledge.
Algorithms 2 and 3 of generic services assume that some part
of available knowledge is shared in the smart space and the
other part is kept locally by KPs themselves (i.e., non-shared).
To make a further step in the service design we need to clarify
186
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

the structure of I. In the extreme case, all data a service needs
are accessed via its smart space, which provides search query
interfaces to reason knowledge over I and its instant structure.
Based on the ontological modeling approach, one can con-
sider I consisting of various information objects and semantic
relations among them [1], [11], [25]. Its basic structure is
deﬁned by problem domain and activity ontologies (OWL
classes, relations, restrictions). Factual objects in I are repre-
sented as instances (OWL individuals) of ontology classes and
their object properties represent semantic relations between
objects.
For modeling IoT objects (their resources and processing
activity), P2P methods can be applied for representing the
inferred knowledge [19]. Any object i ∈ I is treated as a peer.
Each i keeps some data (values of data properties) and has
links to some other objects j (object properties). Therefore,
a P2P network GI is formed on top of I. Contributions to
the smart space (insert, update, remove) change the network
of objects, similarly as it happens in P2P due to peers churn
and neighbors selection. This P2P model extends the notion
of ontology graph (interrelated classes and instances of them)
kept implicitly in I and in ontologies o at the KPs to a
dynamic self-organized system. That is, content I is considered
as interacting objects, which are active entities (make actions)
on one hand and are subject to information changes (actions
consequence) on the other hand.
Consequently, service construction can be formulated in
terms of ﬂows of information changes. Given a starting object
s ∈ I and its initial change. Let D(s) be a graph routable from
s in GI. Construction of a service corresponds to a routing
path s →∗ d. Injection of the change starts the service (like a
P2P node starting a lookup query). The sequence of changes
ﬂows in GI. Note that parallel paths are possible. Any point
when an agent reads an object can be considered a ﬁnal step of
the service construction since the agent consumes an outcome.
In summary, the service construction in an IoT environment
needs virtualization of all related processes and resources. In
addition to the straightforward virtualization, the semantics are
shared to describe relations observed by involved participants
in ongoing processes and available resources. The shared
content is a knowledge corpus represented as a semantic
network (represented objects and their relations). It becomes
a dynamic evolving system with properties similar to P2P
networks. A service construction process is reﬂected in the
smart space as routes in the semantic network.
IV.
PERSONALIZATION APPROACH
The users are more and more interested in context-aware,
situational, and personalized services. In this section, we study
the opportunities of mobile devices and mobile operating
systems in the proposed service-oriented personalization of
IoT environments On one hand, the personalization approach
is based on the smart space properties, which we described in
the previous sections. On the other hand, the role of mobile
operating systems is crucial for customizing a service to the
user’s needs in the current situation.
Nowadays, the personal mobile devices are seen as the
primary tool for accessing services in the smart space [13].
Moreover, in the near future personal handheld devices could
become not just an interface to the mobile and Internet
services, but the master devices for personalized management
of IoT environment, and play in the world of devices the same
role as browsers play in the world of Internet services. In
fact a modern smartphone is the closest and very powerful
device that can manage surrounding IoT environment, so
creating a personal smart space around the user. The personal
mobile device shall not be anymore seen as a pure service
consumption point. In fact it is the best source of situational
and other personal information that can be used in delivery or
even personalized construction of various services.
Our work on smart spaces-based development has already
indicated the distinctive role of smartphones and tablets for
such emerging IoT application domains as collaborative work
systems [26], e-Tourism recommendation services [27], and
mobile healthcare assistance [28]. Many studied use cases of
the smart spaces based applications for IoT consider smart-
phone as a device for handling processing of the most personal
data, which is done by the corresponding KPs that are executed
on the device [29].
Consider the personal smart spaces created by placing the
smartphone in the center to take role of the SIB host. This
architectural change enables a number of beneﬁts for the end-
users, which we discuss in the next section. At the same time
the use case is quite demanding for the smartphone. Let us
study whether the new architecture can be supported by the
available smartphone ecosystems. Even the quick analysis of
the iOS and Windows ecosystems illustrated that they are not
properly suitable, as it is not possible to get required access
to the low-level interfaces and functions.
The next considered candidate is the Android ecosystem.
One can ﬁnd a number of studies that use KPs on Android
devices in M3-enabled smart spaces, e.g., see [30], [31].
Moreover, it is possible to make SIB working on Android
devices. Unfortunately, Android sets too many restrictions on
the use of low-level functions. Due to these restrictions the
implementation of a personal smart space cannot be done
efﬁciently. The Android ecosystem provides insufﬁcient pro-
cessing power for proper management of a smart space by SIB
installed even on the most powerful Android smartphones.
Another candidate is Tizen OS ecosystem [32]. Since the
last two years it has become one of the leaders OS for
IoT devices, which is important advantage for programming
smart spaces. Moreover, Tizen is an open source platform
that enables efﬁcient implementation of SIB. The only strong
disadvantage of the current Tizen OS ecosystem is that it is too
much focused on compatibility with resource-restricted devices
and they pay less attention to OS optimization for the high-end
smartphone devices. As a result, although Tizen OS is a very
promising candidate, it is impossible to ﬁnd powerful enough
high-end smartphone on Tizen OS.
Finally, Sailﬁsh OS [33] is yet another ecosystem for
personal mobile devices in IoT. This OS can be seen as a close
“relative” of Tizen OS, as the root of both systems is in MeeGo
OS. Nevertheless, Sailﬁsh OS focuses on smartphones as a
primary target device with setting the key goal in optimization
of the system performance. As a result, Sailﬁsh OS provides
currently the most efﬁcient and fast mobile OS ecosystem.
The system is based on Linux kernel and includes most of
required basic primitives for accessing low-level functions and
interfaces. The open architecture enables us to develop and
integrate the missing primitives to the system core. Moreover,
other key priorities of Sailﬁsh OS are privacy and usability.
These are exactly the “bonus” features that this mobile OS we
are expected to provide to the smart spaces. Nowadays, the
187
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

Sailﬁsh OS ecosystem is supported by half a dozen of high-end
smartphones. Although these smartphones are not well-known
among regular users so far, one can get Sailﬁsh OS devices
and even have a few options.
In summary, this preliminary study of mobile operating
systems indicates that potentially the Sailﬁsh OS provides
the best-suited candidate for implementing personalized M3-
enabled smart spaces.
V.
VALUE OFFERING BY PERSONAL SMART SPACES
The personal smart spaces aim at automatic dynamic
personalization of the whole virtual and physical environment
around the user. The personalization is done based on the
individual preferences as well as on physical location and other
relevant context information available for the smart space. The
idea is that the smart space makes continuously monitoring
of all services and devices that are available for the user at
any moment of time and automatically forms environment
management requests to maximize comfort and safety of
the user. In particular, the personal smart space provides a
middleware to help the user to most efﬁciently interact with
the surround IoT environment.
Consider an example of user interaction with physical
environment. When the user enters to the shopping mall
the personal smart space can check what large interaction
screens are available. As a result, when the user is passed
by, she/he can take control over the available screens as a
temporarily interface for more comfortable interaction with
services provided by the shopping mall.
The example can be continued for the user interaction
with the virtual environment. While the user interacts with
the shopping mall services, the personal smart space makes
monitoring what is searched by the user, request for personal
discounts from the shops of interest, and build the optimal path
for visiting places of interest.
The mixed user interactions with virtual and physical
environment are also possible. When the user is done with
search the personal smart space activates navigation services
on the smartphone plus available visualization. Other appro-
priate tools can also be activated, e.g., to highlight the path in
the shop or to call elevators.
By the above illustrative example we describe our idea
of the new type of value offering delivered by the personal
smart spaces. Everyone can imagine a number of other use
cases for various application domains. Importantly that such
use case scenarios fully ﬁt to the basic reference model of
smart spaces [4], [5], with assumption that SIB could be fully
operational on the personal mobile device.
The deﬁnition of personal smart spaces creates a new
problem of collaborative personalization, as multiple users
will interact with IoT environments in public places. The
environment has to adopt itself to the multiple users at the
same time. As a result, we come with deﬁnition of a new key
parameter—the size of the gravity ﬁeld of the personal smart
spaces. In other words, the individual gravity ﬁeld shows the
inﬂuence level of the user to the collaborative decision making
and control in the IoT environment.
An interesting case study for collaborative personalization
is the microphone service of SmartRoom system [26], [30].
Each user can use her/his smartphone as a microphone col-
laboratively working in multimedia equipped room during a
conference session, work group meeting, or seminar. The audio
system in the room is a shared resource with mutual exclusion.
User access to this resource is subject to personalization,
which, in turn, depends on the situational role and interests
of the user.
In summary, deﬁning the optimal size for each individual
gravity ﬁeld is an open research topic for our further work,
which we are planning to accomplish within the scope of
studying collaborative use of the personal smart spaces.
VI.
CONCLUSION AND FUTURE WORK
This paper elaborated the fundamental concept of mobile
information services that are constructed and delivered within
smart spaces. We introduced the theoretical properties of such
services that enable personalization of the IoT environment.
The properties are essentially based on semantic-driven multi-
agent iterative search-and-process manipulations on the shared
knowledge corpus with virtualization of IoT environment pro-
cesses and resources. The important direction of our further
theoretical research is new data mining and knowledge rea-
soning methods for effective service personalization in the
large-scale IoT settings. Such methods need to be implemented
as cooperative activity of many KPs with knowledge sharing
support from SIB. In particular, it needs extending the function
of SIB, which is recently limited with information access and
exchange mediation.
From the applied research and development point of view,
a promising option for applications is personal smart spaces
when the user’s smartphone is placed in the center. We
considered the main available mobile OS ecosystems and
concluded that most of them cannot provide the required
support for the personalized smart spaces. Nevertheless, the
Sailﬁsh OS seems a suitable ecosystem for creating personal
smart spaces with the M3 architecture. This option provides
the most straightforward solution to enable personalization
of IoT environments based on the user’s preferences. At the
same time, we are faced with a new research problem of
collaborative personalization when the IoT environment adapts
itself to multiple users. Its solutions need extending the SIB
with the gravity ﬁeld support for the personal smart spaces.
In particular, deﬁnition of an optimal size for each individual
gravity ﬁeld is an important research topic of our future work.
As the next development step we are planning to implement
a full version of Smart-M3 SIB for Sailﬁsh OS. Then, a
set of reference use cases will be created and experimentally
evaluated on top of the personalized smart spaces.
ACKNOWLEDGMENT
The reported concept elaboration study was funded by
Russian Fund for Basic Research (RFBR) according to re-
search project # 14-07-00252. The work of D. Korzun on the
presented applied solutions was ﬁnancially supported by the
Ministry of Education and Science of the Russian Federation
within project # 2.2336.2014/K from the project part of state
research assignment.
REFERENCES
[1]
D. Korzun, S. Balandin, and A. Gurtov, “Deployment of Smart Spaces
in Internet of Things: Overview of the design challenges,” in Proc. 13th
Int’l Conf. Next Generation Wired/Wireless Networking and 6th Conf.
on Internet of Things and Smart Spaces (NEW2AN/ruSMART 2013),
LNCS 8121, Springer, pp. 48–59, Aug. 2013.
[2]
G. Kortuem, F. Kawsar, V. Sundramoorthy, and D. Fitton, “Smart
objects as building blocks for the Internet of Things,” IEEE Internet
Computing, vol. 14, no. 1, pp. 44–51, Jan. 2010.
188
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

[3]
V. Gorodetsky, “Agents and distributed data mining in smart space:
Challenges and perspectives,” in Agents and Data Mining Interaction
(ADMI 2012), LNAI 7607, Springer-Verlag, pp. 153–165, Jun. 2013.
[4]
A. Smirnov et al., “Context-aware smartspace: Reference model,” in
Proc. 2009 Int’l Conf. Advanced Information Networking and Applica-
tions Workshops (WAINA’09).
IEEE Computer Society, pp. 261–265,
May 2009.
[5]
S. Balandin and H. Waris, “Key properties in the development of smart
spaces,” in Proc. 5th Int’l Conf. Universal Access in Human-Computer
Interaction (UAHCI ’09). Part II: Intelligent and Ubiquitous Interaction
Environments, LNCS 5615, C. Stephanidis, Ed. Springer-Verlag, pp. 3–
12, Jul. 2009.
[6]
J. Augusto, V. Callaghan, D. Cook, A. Kameas, and I. Satoh, “Intelligent
environments: a manifesto,” Human-centric Computing and Information
Sciences, vol. 3, no. 1, pp. 1–18, 2013.
[7]
L. Rofﬁa et al., “A semantic publish-subscribe architecture for the
Internet of Things,” IEEE Internet of Things Journal, vol. PP, no. 99,
pp. 1–23, 2016.
[8]
D. Korzun, “On the smart spaces approach to semantic-driven design of
service-oriented information systems,” in Proc. 12th Int’l Baltic Conf.
on Databases and Information Systems (DB&IS 2016), G. A. et al., Ed.
Springer International Publishing, pp. 181–195, Jul. 2016.
[9]
I. Oliver and J. Honkola, “Personal semantic web through a space based
computing environment,” Computing Research Repository (CoRR), vol.
abs/0808.1455, pp. 1–14, Aug. 2008.
[10]
J. Kiljander, A. Ylisaukko-oja, J. Takalo-Mattila, M. Etel¨aper¨a, and J.-
P. Soininen, “Enabling semantic technology empowered smart spaces,”
Journal of Computer Networks and Communications, vol. 2012, pp. 1–
14, 2012.
[11]
E. Ovaska, T. S. Cinotti, and A. Toninelli, “The design principles
and practices of interoperable smart spaces,” in Advanced Design
Approaches to Emerging Software Systems: Principles, Methodology
and Tools. IGI Global, pp. 18–47, 2012.
[12]
D. Korzun, “Service formalism and architectural abstractions for smart
space applications,” in Proc. 10th Central & Eastern European Software
Engineering Conference in Russia (CEE-SECR 2014). ACM, pp. 19:1–
19:7, Oct. 2014.
[13]
D. Korzun, A. Kashevnik, S. Balandin, and A. Smirnov, “The Smart-
M3 platform: Experience of smart space application development for
Internet of Things,” in Internet of Things, Smart Spaces, and Next
Generation Networks and Systems. Proc. 15th Int’l Conf. Next Gener-
ation Wired/Wireless Networking and 8th Conf. on Internet of Things
and Smart Spaces (NEW2AN/ruSMART 2015), LNCS 9247, Springer,
pp. 56–67, Aug. 2015.
[14]
J. Bicevskis et al., “A practitioner’s approach to achieve autonomic
computing goals,” Baltic Journal of Modern Computing, vol. 3, no. 4,
pp. 273–293, 2015.
[15]
J. Honkola, H. Laine, R. Brown, and O. Tyrkk¨o, “Smart-M3 information
sharing platform,” in Proc. IEEE Symp. Computers and Communica-
tions (ISCC’10).
IEEE Computer Society, pp. 1041–1046, Jun. 2010.
[16]
J. Kiljander, F. Morandi, and J.-P. Soininen, “Knowledge sharing
protocol for smart spaces,” International Journal of Advanced Computer
Science and Applications (IJACSA), vol. 3, pp. 100–110, 2012.
[17]
A. Smirnov et al., “Anonymous agent coordination in smart spaces:
State-of-the-art,” in Smart Spaces and Next Generation Wired/Wireless
Networking. Proc. 9th Int’l Conf. NEW2AN’09 and 2nd Conf. on Smart
Spaces ruSMART 2009. LNCS 5764.
Berlin, Heidelberg: Springer-
Verlag, pp. 42–51, Sep. 2009.
[18]
C. Gutierrez, C. A. Hurtado, A. O. Mendelzon, and J. P´erez, “Founda-
tions of semantic web databases,” J. Comput. Syst. Sci., vol. 77, no. 3,
pp. 520–541, May 2011.
[19]
D. Korzun and S. Balandin, “A peer-to-peer model for virtualization
and knowledge sharing in smart spaces,” in Proc. 8th Int’l Conf. on
Mobile Ubiquitous Computing, Systems, Services and Technologies
(UBICOMM 2014).
IARIA XPS Press, pp. 87–92, Aug. 2014.
[20]
L. Atzori, A. Iera, and G. Morabito, “The Internet of Things: A survey,”
Computer Networks, vol. 54, no. 15, pp. 2787–2805, Oct. 2010.
[21]
C. Perera, A. Zaslavsky, P. Christen, and D. Georgakopoulos, “Context
aware computing for the Internet of Things: A survey,” IEEE Commu-
nications Surveys Tutorials, vol. 16, no. 1, pp. 414–454, Feb. 2014.
[22]
C. Evers, R. Kniewel, K. Geihs, and L. Schmidt, “The user in the
loop: Enabling user participation for self-adaptive applications,” Future
Generation Computer Systems, vol. 34, pp. 110–123, 2014.
[23]
J. Tervonen, K. Mikhaylov, S. Pieska, J. Jamsa, and M. Heikkila,
“Cognitive Internet-of-Things solutions enabled by wireless sensor and
actuator networks,” in 5th IEEE Conference on Cognitive Infocommu-
nications (CogInfoCom).
IEEE, pp. 97–102, Nov. 2014.
[24]
P. Garcia Lopez et al., “Edge-centric computing: Vision and chal-
lenges,” SIGCOMM Comput. Commun. Rev., vol. 45, no. 5, pp. 37–42,
Sep. 2015.
[25]
M. Palviainen and A. Katasonov, “Model and ontology-based de-
velopment of smart space applications,” Pervasive Computing and
Communications Design and Deployment: Technologies, Trends, and
Applications, pp. 126–148, May 2011.
[26]
D. Korzun, I. Galov, A. Kashevnik, and S. Balandin, “Virtual shared
workspace for smart spaces and M3-based case study,” in Proc. 15th
Conf. of Open Innovations Association FRUCT. ITMO University,
pp. 60–68, Apr. 2014.
[27]
A. G. Varfolomeyev, A. Ivanovs, D. G. Korzun, and O. B. Petrina,
“Smart spaces approach to development of recommendation services
for historical e-tourism,” in Proc. 9th Int’l Conf. on Mobile Ubiquitous
Computing, Systems, Services and Technologies (UBICOMM). IARIA
XPS Press, pp. 56–61, Jul. 2015.
[28]
D. Korzun, A. Borodin, I. Paramonov, A. Vasiliev, and S. Balandin,
“Smart spaces enabled mobile healthcare services in internet of things
environments,” International Journal of Embedded and Real-Time Com-
munication Systems (IJERTCS), vol. 6, no. 1, pp. 1–27, 2015.
[29]
E. Balandina, S. Balandin, Y. Koucheryavy, and D. Mouromtsev, “IoT
use cases in healthcare and tourism,” in Proc. IEEE 17th Conf. on
Business Informatics (CBI 2015), vol. 2, pp. 37–44, Jul. 2015.
[30]
P. Kovyrshin and D. Korzun, “Android smartphone as a microphone in
SmartRoom system,” in Proc. 15th Conf. Open Innovations Framework
Program FRUCT.
ITMO University, pp. 198–199, Apr. 2014.
[31]
P. Bellavista, V. Conti, C. Giannelli, and J. Honkola, “The Smart-M3
semantic information broker (SIB) plug-in extension: Implementation
and evaluation experiences,” in Proc. IEEE Int’l Conf. on Green
Computing and Communications (GreenCom).
IEEE, pp. 704–711,
Nov. 2012.
[32]
C. Weinschenk, “Tizen: We can be the OS of the IoT,” Jun. 2014,
URL:
http://www.itbusinessedge.com/blogs/data-and-telecom/
tizen-we-can-be-the-os-of-the-iot.html [accessed: 2016-08-30].
[33]
D.
Luis,
“Sailﬁsh
OS
discovers
its
MeeGo
roots
on
the
Nokia
N9,”
Dec.
2013,
URL:
http://www.phonearena.com/news/
Sailﬁsh-OS-discovers-its-MeeGo-roots-on-the-Nokia-N9 id50240
[accessed: 2016-08-30].
189
Copyright (c) IARIA, 2016.     ISBN:  978-1-61208-505-0
UBICOMM 2016 : The Tenth International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies

