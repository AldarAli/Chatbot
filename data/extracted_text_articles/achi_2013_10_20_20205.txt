 
Evaluating the Interaction of Users with Low Vision in a Multimodal Environment
Clodis Boscarioli 
Department of Computer Science 
Western Paraná State University (UNIOESTE) 
Cascavel, Paraná, Brazil 
clodis.boscarioli@unioeste.br 
Marcio Seiji Oyamada 
Department of Computer Science 
Western Paraná State University (UNIOESTE) 
Cascavel, Paraná, Brazil 
marcio.oyamada@unioeste.br
Jorge Bidarra 
Department of Computer Science 
Western Paraná State University (UNIOESTE) 
Cascavel, Paraná, Brazil 
jorge.bidarra@unioeste.br 
Marcelo Fudo Rech 
Department of Computer Science 
Western Paraná State University (UNIOESTE) 
Cascavel, Paraná, Brazil 
marcelofudo@hotmail.com
 
 
Abstract—This paper presents the PlatMult environment, a 
multimodal platform that aims to provide accessibility in 
interactive kiosks to users with low vision and elderly ones. 
The PlatMult solution is composed of a screen magnifier 
(visual stimulus), a screen reader (auditory stimulus), and 
motor feedback (tactile feedback). The evaluation of the 
interaction with users with low vision is described, focusing on 
usability and accessibility aspects. This paper also discusses the 
potential of the platform for social and digital inclusivity. We 
conclude that the PlatMult, with its integrated features, helps 
users to access and use information systems in a suitable way. 
Keywords—PlatMult environment; low vision; usability; 
accessibility.  
I. 
 INTRODUCTION  
The advances made in Information and Communication 
Technologies (ICT) have resulted in benefits to society in 
many fields like industry, services, and even social inclusion.  
ICT provides facilities to citizens, especially with regard 
to accessing, publishing, and sharing information. As an 
example, we can mention the automatic teller machines 
(ATMs) and interactive kiosks available in banks, bus 
terminals, airports, and libraries. 
Despite all the progress that has been made, there are 
some people who cannot benefit from these technologies. 
Although many of the technologies are useful for people 
with disabilities, these people tend to have less access to 
these solutions. This work focuses particularly on those with 
visual impairments. 
Among people with visual impairment a large contingent 
falls in the group with low vision. According to the 
classification of the World Health Organization (WHO), low 
vision refers to individuals who can only see an image at 20 
feet (about 6m) where a person with normal vision would see 
it at 200 feet (about 60m). For Corn and Erin [5], low vision 
is a condition characterized by vision lag, where correction 
or improvement cannot be achieved by surgical means or 
solved with the use of conventional glasses. 
Assistive Technologies (ATs) have emerged as an 
attempt to guarantee the same access rights to these people. 
AT, according Cook and Hussey [6], is a wide range of 
equipment, services, strategies, and practices designed and 
implemented to mitigate the problems faced by individuals 
with disabilities. 
The 
implementation 
of 
hardware 
and 
software 
components, with increasing consideration given to the 
accessibility, usability, and adaptability features in their 
solutions, is now a reality. The challenge has been to seek 
simpler interfaces which can be immediately assimilated and 
handled correctly by users. 
This work proposes a multisensory platform called 
PlatMult, implemented under the free platform philosophy, 
which is oriented towards but not restricted to people with 
low vision. Here we present some of the main results and 
discussions emerging from tests that we have conducted on 
our solution involving users with low vision. The 
methodologies adopted in the evaluation of PlatMult are 
based on the Nielsen’s Heuristics [10] and usability 
principles. We therefore, seek to identify and correct the 
problems and gaps found in its interface. As a result of the 
interaction evaluation, changes are proposed to provide a 
better user experience. 
This paper is organized as follows. Section II presents 
some related works. In the Section III the PlatMult platform 
is described. In Section IV, a brief description of the 
evaluation methods used is given. In Section V, the 
methodology used is described, and in Section VI the main 
results obtained up to now are discussed. The conclusions as 
well as future works are presented in Section VII. 
II. RELATED WORKS 
iBrowse interface software [12] was developed to help 
visually impaired people to access Internet. The software, 
adopted a similar designing strategy of the previously 
implemented LowBrowse software which acted as an 
extension add-on of Firefox browser. Its implementation, 
instead of following the traditional magnification technique, 
allows the low vision users to adjust parameters, such as font 
size, color and spacing, and then to read all the websites in 
their maximum reading efficiency. The tool provides also a 
screen reader using the traditional text-to-speech (TTS) 
256
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
technology. In terms of implementation this solution uses the 
same Firefox plugin strategy we have adopted in our 
implementation but differently of our proposal changes the 
webpage content and do not furnish interaction motor 
feedback. 
Sandhya and Devi [14] evaluate the level of accessibility 
in AJAX content and JAWS screen reader. AJAX stands for 
Asynchronous JavaScript and XML. AJAX allows feature-
rich, dynamic web applications which use server-side 
processing without requiring the traditional submit or 
retrieve webpage methodology. If the screen reader is not 
prepared to this asynchronous updating, it will harm the user 
interaction. Moreover, the screen reader is limited to read 
images, advertisements banners and big data tables. Despite 
the authors list some recommendations to make screen 
reader accessible in webpages content, no user evaluation 
was done.  
Tae et al. [8] propose an interactive kiosk for blind 
people with tactile interface (braille) and voice to identify 
images and characters on the screen area. Saito et al. [13] 
present flexible solution for blind and deaf people. Using a 
touch screen interface it can magnify images in different 
sizes and the both use voice messages and braille input. 
Tichy and Steinbrunner [15] have developed a tactile 
feedback for cursor control device with haptics. 
Differently from the above cited works, this paper 
presents and evaluates the user interaction with the PlatMult 
platform, a tool developed specially to provide accessibility 
for low vision people. The main characteristic of this 
solution is the use of three different axes of interaction: 
visual, auditory and tactile. 
III. 
THE PLATMULT PLATFORM 
PlatMult [3] is an integrated solution of hardware and 
software developed to provide a multisensorial environment 
in interactive kiosks and ATMs, providing accessibility for 
users with low vision and elderly users. The solution (Figure 
1) uses three areas of interaction: visual, audio, and tactile, 
which are integrated into a single solution, making it possible 
to provide users with better experiences. 
One of this project’s requirements is a low cost, to allow 
access to a great number of people. To assemble our 
prototype we used parts of computers and cell phones 
discarded by people and companies. The carcasses of slot 
machines were used as shown in Figure 2. It is important to 
highlight that slot machines are prohibited in Brazil, so the 
ones used in this project were donated by the Brazilian 
courts. The hardware platform uses a desktop computer with 
the following configuration: a Celeron 2 GHz processor 
with 1 GByte RAM and a 40 GByte hard drive. This 
configuration uses restricted hardware resources with 
outdated processors which can also be obtained through 
donations from organizations. 
Additionally, the entire implementation was based on the 
free software philosophy. Ubuntu is the operating system 
used in this project; the windows manager is GNOME and 
the graphics server; see Xorg [16]. For accessibility features, 
the Assistive Technology Service Provider Interface (AT-
SPI) library [1] is used. In this project, all the developed 
applications are free. 
 
 
Figure 1. Overview of the PlatMult environment with the 
visual, auditory, and tactile components 
 
 
Figure 2. Prototype of the PlatMult 
 
The component responsible for providing the visual 
stimulus is the xLupa, an adaptative and free screen 
magnifier. The characteristics of the screen magnifier are full 
screen magnification and configuration of brightness, 
contrast, and the magnification factor. Additionally, the 
xLupa provides a mouse configuration, enabling the user to 
increase the pointer size or even change to a cross-pointer 
type.  
257
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
Besides the visual features, there is also a screen reader 
to read texts as well as menu items, buttons, windows, and so 
on, based on the events reported by the accessibility 
Application Programming Interface (API) or AT-SPI. The 
screen reader was designed to warn the user about his or her 
actions, such as removal or insertion of characters in a text. 
The voice synthesis process is accomplished by eSpeak free-
software; see [7]. 
The tactile stimulus is provided using a mouse with a 
motor feedback feature. The tactile feedback is activated 
when the mouse pointer is over menu items, links, and 
figures inside a webpage. 
The feedback circuit in the mouse is constructed at low 
cost and aims at ease of implementation. To vibrate, the 
mouse uses the same principle as cell phones, which means 
that there is an engine with unbalanced weights on the axis. 
Such vibration occurs when the engine is activated and the 
weight causes the device to vibrate. Starting the engine 
requires 5 V and thus it is possible to use a parallel or USB 
port. So, the adapted mouse is connected to the PS/2 port (for 
normal operation) and to the parallel or USB port to receive 
vibration commands. Figure 3 shows a mouse that was built 
in this project. The vibration engine is glued to the mouse to 
allow tactile feedback.  
 
 
Figure 3. Mouse with feedback motor 
 
The tactile server is implemented according to the same 
principle as the screen reader and uses the events generated 
by the AT-SPI. 
 
 
Figure 4. Example of xLupa configuration 
 
 
Figure 4 illustrates one configuration screen for 
adjustments of the magnification factor and mouse size that 
permit user adaptation to environment. 
IV. 
EVALUATION METHODS 
The human–computer interface (HCI) evaluation is the 
process where the evaluator judges the quality of use of an 
HCI solution and aims to identify problems in the interface 
which may spoil the user’s experience. 
Due to several factors, such as the gathering bad or 
wrong requisites and implementation problems, the final 
result of a development process is not always a good quality 
product. The evaluation of these products makes it possible 
to release higher quality products. 
During the software development process it is possible to 
identify two very distinct groups of actors involved. The first 
group comprises the people responsible for the final product 
concept, and the second, the people who will use the 
software. Because of this, an evaluation is performed from 
two different perspectives: the developers’ and the users’ 
perspectives, to guarantee that the product will be of higher 
quality. 
From the users’ perspective, the interaction with the 
system and how to achieve their goals will be evaluated. 
Aspects like usability, accessibility, and the interface’s 
communicability issues need to be considered. 
There are various methods of HCI evaluation, which can 
be classified as investigation, observation, and inspection 
described for Barbosa and Silva [2], and Rogers, Sharp and 
Preece [17]. The investigation methods normally allow the 
evaluator to find out the users’ opinions and expectations of 
a system. On the other hand, the observation methods 
provide 
data 
about 
usage 
situations, 
allowing 
the 
identification of real problems. Finally, the inspection 
methods allow the evaluator to predict the consequences of 
design decisions.  
The evaluations performed on PlatMult were an 
inspection evaluation using Nielsen heuristics and an 
observation evaluation using a usability test. As a first 
inspection evaluation and because the team expertise in 
Nielsen's Heuristics, we opted for this method, although 
other methods of evaluation are being explored to continue 
the evaluation process.  
The use of Nielsen’s set of ten heuristics is a method that 
was created to find usability problems during the design 
process; see [10] and [11]. The severity rating for each 
problem takes into account three factors: frequency, impact 
and persistency. 
Given these three factors, the severity scale varies from a 
cosmetic problem to be solved if there is enough time in the 
project’s schedule to a catastrophic problem which needs to 
be solved before the end of the project. 
The usability test is an evaluation method where real 
users evaluate the software’s interface according to usability 
factors like ease of learning, task memorization, user 
satisfaction, productivity, and error prevention. 
 Usability tests aim to evaluate the usability quality 
present in software, mainly by evaluating the user’s 
performance when using the software [17]. 
Vibracall 
258
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
With the usability test it is possible to evaluate the user’s 
success rate when performing a task and the number of 
mistakes made, allowing those mistakes to be classified. 
Basically, according to Barbosa and Silva [2] and Rogers, 
Sharp and Preece [17], a usability test is composed of the 
following tasks: 
(i) Preparation, which includes a creation of a guide 
containing the tasks which must be performed by the 
participants, recruiting a group of appropriate users, 
preparing the material for observation and recording, and 
finally executing a pilot test. 
(ii) Data gathering, which aims to observe and register 
the performance and opinions of the participants during the 
controlled periods of use. 
(iii) Interpretation and (iv) consolidation of results. This 
step includes gathering, counting, and summarizing the data 
collected from the participants and compiling a report of the 
results. 
V. 
METHODOLOGY 
PlatMult as a whole was inspected by three evaluators 
based on the Nielsen heuristics in an attempt to identify 
violations of these heuristics, which were documented 
according to the aspect, location, and degree of severity. For 
each violation, possible solutions detected for the problem 
are proposed. 
Since the initial platform conception, experts such as 
ophthalmologists and teachers who work directly with 
students with low vision, as well as a group of low vision 
users participated in the process of requirements elicitation 
and interaction design. For the user tests presented here, two 
users were selected given their stereotypes. This small group 
was chosen to enable intensive and controlled evaluation, in 
order to proof the concept. All tests were followed by the 
experts and developers.  In the future works, other usability 
tests will be proposed, involving other users. 
Two users participated in the validation tests performed 
here, both of whom have low vision and significant hearing 
deficiency. They have beginner-level ability in the use of the 
Linux Operating System and the screen magnifier xLupa 
incorporated in PlatMult. A teacher specialized in special 
education also helped the testers and the appraisers to carry 
out the tests during the experiment. 
Although, at first glance, the number of testers may seem 
low, the results obtained are expressive because the users 
have multiple deficiencies and are young. One is a teacher of 
students with visual deficiencies in the public education 
system and the other is a student enrolled in the special 
students class maintained by the public government. This 
student, besides being blind and deaf, has a severe debility of 
his right hand which obliges him to use his left hand despite 
being right-handed. 
It is worth mentioning that although they are both users 
with some knowledge of computational environments, they 
have undergone training in the use of the xLupa magnifier 
delivered by other members of the project. In both cases, 
outside of the university or school where the project is being 
developed, their use of computers is infrequent, and this was 
their first contact with a screen magnifier. One of the users 
frequently uses a computer with a voice synthesis solution 
called DOSVOX, described for Borges in [4]. 
The guide which was followed in the experiment was 
elaborated so as to reflect everyday use and the proposed use 
of PlatMult. During the tests, the users completed a series of 
tasks including an Internet search scenario. For each task, we 
were able to evaluate the interaction, identifying problems 
encountered in utilizing the platform. The results include the 
total number of errors and the time needed to complete each 
given task. 
The test guide was divided into two parts, the first with 
the xLupa activated and the second with all three features 
(visual, tactile, and auditory) available on PlatMult activated. 
A. Usability Test – Scenario 1 
In the first part, the following tasks were given to the 
users: 
a) Activating xLupa, preferably without the automated 
initialization feature activated. The aim was to test whether 
the user was able to identify one of the two possible ways to 
initialize the screen magnifier. 
b) Setting up his or her profile on xLupa, selecting the 
magnification factor and the color pattern which were more 
suited to him or her. This test also involved configuring the 
mouse pointer and applying the antialiasing algorithm to the 
text and images. 
The objective of this task was to verify whether the user 
was able to manipulate the menus for changing the 
magnification factor and color. The task provided answers to 
the following questions: Is the user capable of identifying 
which factor and/or patterns have been selected? Is he or she 
able to differentiate the selected configuration from the other 
available ones? 
These two initial tasks, (a) and (b), were also used to  
verify whether the basic configuration applied was adequate 
for a good experience of the utilization of xLupa or whether 
it was necessary to make some adjustments to the settings, 
which had to be set up every time until they were considered 
satisfactory. The objective was to verify whether the users 
had sufficient knowledge to perform such adjustments. 
 c) Initializing the browser Firefox, accessing Google’s 
webpage, and searching for information specified by the 
evaluation team. 
This task was done to identify the degree of 
ease/difficulty of use, and the users performed the following 
tasks: 
d) Finding the Firefox URL address bar; 
e) Typing in the desired URL address; 
f) Finding Google’s search field; 
g) Finding the link indicated by the evaluation team;  
h) Finding the solicited information on the webpage. 
B. Usability Test –Scenario 2 
The stages of the second usability test were very similar 
to those of the first; however, the steps related to the xLupa’s 
configuration were not repeated, and the users had to 
perform the following tasks: 
a) Activating the screen reader on xLupa’s configuration 
window. 
259
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
This task aimed to determine whether the users had 
enough knowledge of how to activate the screen reader, and 
if so, to determine the degree of ease/difficulty with which 
they performed the task. If they were not able to do it, the 
study aimed to find out the reason why. 
b) Initializing Firefox, and, with the plugin and screen 
reader activated, accessing Google and searching for 
different requested information so that the process would not 
be repetitive. These actions were performed with the 
objective of observing how these features influence the 
user’s experience.  
One of the first actions performed by the users was based 
on the initial configuration of the profile of each user and 
comprised 
adjusting 
the 
tool’s 
functionality, 
more 
specifically the magnifier, and their visual needs. 
The participants, aided by the teacher who watched them, 
answered a questionnaire post-test inquiring about the utility 
of the environment, difficulties with the interactions, their 
motives, and alternative ways to make the platform easier to 
use. Questions were also asked about the prototype’s 
ergonomics. 
VI. 
RESULTS AND DISCUSSION 
This section presents the results gathered after the 
application of the inspection and observation methods.  
A. Nielsen heuristics evaluation 
In this section, only the violations of the Nielsen 
heuristics will be reported.  
User control and freedom: A problem occurs at the 
visual acuity selection screen and color scheme selection. If 
the user selects an inappropriate magnification factor and/or 
color scheme, he or she will have some difficulty solving the 
problem because the only way to do so is to close the 
magnifier, restart it, and then redo the configuration process. 
This was classified as a problem because this process tends 
to be hard for users with low vision to perform without help. 
The results showed, however, that this difficulty may be 
considered cosmetic, given the fact that this functionality is 
accessed during the profile’s initial configuration, and with 
the automated loading of the last saved profile, it becomes a 
minor problem. With regard to the platform itself, however, 
the most appropriate solution would be to add a button 
giving the user the option to restore the default settings 
without closing the software. 
Another violation of this heuristic was found under the 
“Save” tab with regard to the “Remove” button, which 
executes the operation as soon as the button is clicked 
without giving the user the option to cancel the action. As a 
solution to this violation, the addition of an alert window 
asking the user to confirm the action is suggested. 
Consistency and standards: One problem was found at 
the configuration screen. On the “Save” tab, the options 
“Save” and “Update” perform the same operation, and 
because of this, the user may get confused as both operations 
store current user information. The problem was classified as 
small, and the solution to this problem would be to 
automatically update the user configurations, rendering the 
“Update” button useless; therefore, the “Update” button 
would be removed and only the “Save” button would be left, 
which would only be used to create a new user profile. 
Match between the system and the real world: One 
problem in this category was detected at the configuration 
screen. Under the “Configurations” tab, it was difficult for 
the user to understand the meaning and effect of the feature 
“Strip width”. The problem was classified as small, 
considering that the user does not use this feature often. A 
possible solution would be to name the feature differently, 
for example as “Cross-pointer size”. 
Another violation of this heuristic can be found at the 
configuration screen, under the “Configurations” tab, with 
regard to the selection of the type of Interpolation. The terms 
which identify the types are technical and are related to the 
implemented framework. The problem was classified as 
small. A simple change of names and descriptions to less 
technical terms would be sufficient to fix this problem. 
Another possible solution would be to move these options to 
a new tab called “Advanced Configuration”, since it is a 
feature that is accessed by individuals who aid users with 
low vision. 
Another problem at the configuration screen was found 
in the “Image” tab. A violation was found in that the term 
“Image” does not inform the user about what types of 
configurations this feature handles. This problem was 
classified as small, and could be easily fixed by changing the 
tab name to “Image settings’. 
Another problem was seen at the configuration screen 
under the “Image” tab, where the labels on the checkboxes 
“Change theme” and “Gray” were not clear to the users. The 
problem was classified as small and could be fixed by a 
simple change of the names to “High contrast” and “Shades 
of gray”. 
Another violation of this heuristic was found at the 
configuration screen, under the “Reader” tab, with regard to 
the buttons “Play” and “Stop”, which are both written in 
English. However as the program will be used by 
Portuguese-speaking users, the labels should be translated 
into Portuguese. 
At the configuration screen, under the “Reader” tab, the 
label “Speed” is too vague and does not represent the 
function properly. The solution would be to change the label 
to “Reading speed” or “Reader’s speed”. 
This was the first inspection performed of the interface of 
xLupa, and it could be very helpful to allow the developer 
team to make improvements for users with low vision. 
Furthermore, it is through the xLupa’s interface that the user 
interacts with the system. 
B. Usability test results 
To complement the evaluation, the usability test was 
performed to verify the performance and level of satisfaction 
of the two real users with low vision when they interacted 
with the PlatMult platform to execute everyday tasks as 
mentioned above. 
During the tests, the evaluators reported that the mouse 
pointer was too small before the initialization of xLupa, 
which would cause difficulties for users with low vision. In 
260
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
addition, the speed of movement of the pointer was another 
difficulty. 
There were moments at which both testers got lost in the 
middle of the information shown on the screen. The main 
reason for this was the vertical rolling, an essential feature in 
an amplified screen, where not all of the information will fit 
on the screen. In situations like this, it is necessary to carry 
out user training. 
The evaluation team had difficulty understanding what 
the screen reader was saying in some cases, especially when 
browsing the Internet. 
Another problem was the operating system update 
notifications, which overlapped the information that the user 
might have wanted to find. 
The users reported that the motor feedback mouse was 
very useful, especially for browsing the Internet, because it 
helped in identifying useful information on screen. 
As for the screen reader, the users reported that it was 
very useful, mainly when typing text, and they did not report 
any problems with it. Finally, it is worth mentioning that this 
analysis works being done with these students prioritizes not 
only visual stimuli but also pedagogic tasks and cognitive 
aspects. 
The students’ interaction with the group was positive, 
because they were submitted to basic informatics concepts, 
memorization exercises, and reading and writing texts. It was 
observed that these exercises contributed to developing the 
visual part and main focus of our work. 
VII. CONCLUSION AND FUTURE WORK 
This paper presented the process and results of a usability 
evaluation of the PlatMult environment by inspection and 
observation, which is important in the current state of the 
project, where improvements to the interaction and interface 
will be made. 
In the tests, both users with low vision mentioned the 
mouse pointer speed as a problem. One suggested way of 
fixing this problem would be to integrate an option to 
configure the mouse speed on xLupa’s interface. 
The screen reader proved useful and efficient. Despite 
this, it is recommended that users with low vision should not 
use screen readers, to avoiding discouraging them from 
training their vision. 
With this experiment, it is possible to conclude that the 
PlatMult, with its integrated features, helps users to access 
and use information systems in a suitable way. 
Although these tests were performed to evaluate the 
features of the tool’s accessibility, it is worth mentioning that 
investment in this platform is justified by its different areas 
of applicability. The present solution can be useful in ATM 
terminals of banks and also in sectors of governmental 
services like public libraries and schools. 
In future works, some observed violations of the Nielsen 
heuristics will be fixed in the interface. The interactive kiosk 
is then expected to have a high degree of accessibility for the 
final user. During the usability tests, one of the difficulties 
identified was the mouse pointer size and speed before the 
activation of the screen magnifier. One solution, using 
shortcut keys to activate and configure some parameters of 
the screen magnifier, is being developed by the team. 
Additionally, the magnifier can be configured to be 
initialized together with the operating system startup, 
removing the difficulties of running xLupa. 
Others 
inspection 
methods 
such 
as 
Cognitive 
Walkthrough described in [9], and ISO 9241-210 will be 
better investigated and applied. 
Another point which was identified during the test was 
the notification interface of the operating system. In this case 
study, the operating system was run using its default 
configurations, which included alerts about package updates. 
With the aim of standardizing and easing installation on new 
machines, a new repository will be set up containing the 
packages and an operating system installer which includes all 
the accessibility features of PlatMult. The operating system 
will be configured so that alerts are not shown while the 
system is being used. 
With regard to the usability tests, we intend to test new 
scenarios, mainly including the use of Internet services, such 
as post office services and government health care services. 
Additionally, scenarios involving the use of educational 
software will be developed and applied in usability tests. 
We also intend to increase the number of users 
participating in prototype testing in order to have more 
coverage from the perspective of users with different 
characteristics.  
With regard to the motor feedback, the initial evaluation, 
which primarily concerned content in the Internet browser, 
was positive. A second version of the mouse containing two 
engines positioned on the right and left sides is under 
construction. With these two engines, we intend to create 
vibration patterns which can indicate the importance of the 
information at which the mouse is pointing and to try to 
create a spatial stimulus, aiming at a fast localization of the 
pointer on the screen. 
VIII. ACKNOWLEDGMENTS 
We are grateful to the Araucaria Foundation and CNPq 
for funding the project and we would like to thank all the 
people involved in this research. 
REFERENCES 
[1] AT-SPI-Gnome, Available at http://acessibility.gnome.org. [retrieved: 
December, 2012]. 
[2] S. D. J. Barbosa and B. S. Silva, Interação Humano-Computador. 
Série SBC, Campus-Elsevier, 2010. 
[3] J. Bidarra and M. S. Oyamada, “Development of an interactive kiosk 
with screen amplifier targeting low vision and old-aged people”, Proc. 
AIRTECH – Accessibility, Inclusion and Rehabilitation using 
Information Technologies, Havana, Cuba, December. 2011, pp. 13-
14. 
[4] J. A. Borges, Dosvox – um novo acesso dos cegos à cultura e ao 
trabalho. Revista Benjamin Constant, Rio de Janeiro, v. 3, May. 1996, 
pp. 24-29. 
[5] A. L. Corn and J. N. Erin, Foundations of  Low Vision: Clinical and 
Foundation Perspectives. 2nd Ed. AFB Press: American Foundation of 
the Blind, 2010.  
[6] A. M. Cook and S. Hussey, Assistive Technologies: Principles and 
Practices. St. Louis, MO: Mosby-Year Book, Inc., 1995. 
261
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

 
[7] eSpeak. 
Available at 
http://espeak.sourceforge.net/. [retrieved: 
December, 2012]. 
[8] J. B. Tae, L. H. Ju, L. U. Taek, P. C. Yong and S. M. Gyu, 
Information terminal for blind person based on tactile and voice 
interface. Patent Number: KR 20010017729. Mar. 2001.  
[9] J. Bradford, C. Wharton, J. Jeffries and M. Franzke, “Applying 
Cognitive Walkthroughs to more Complex User Interfaces: 
Experiences, Issues and Recommendations”. CHI ’92 - Proceedings 
of the SIGCHI Conference on Human Factors in Computing. 
Systems, Monterey, California, USA. 1992. pp. 381–388. doi: 
10.1145/142750.142864 
[10] J. Nielsen, Usability Engineering. San Francisco, USA: Morgan 
Kaufmann, 1993. 
[11] J. Nielsen and R. L. Mack, Usability Inspection Methods. New York, 
USA: John Wiley & Sons, 1994. 
[12] L. Jianwei, X. Guobei, X. and Guotong, “iBrowse: Software for low 
vision to access Internet”, Biomedical Engineering and Informatics  
(BMEI), 2010 3rd International Conference on, vol.5, Yantai, China. 
16-18 
October. 
2010. 
pp. 
2062-2066. 
doi: 
10.1109/BMEI.2010.5639862  
[13] M. Saito. Barrier-free terminal. Patent Number: JP11184368. Dec. 
1999. 
[14] S. Sandhya and K.A.S, Devi, “Accessibility evaluation of websites 
using screen reader”, Next Generation Web Services Practices 
(NWeSP), 2011 7th International Conference on, Salamanca, Spain. 
19-21 
October. 
2011. 
pp. 
338-341. 
Doi: 
10.1109/NWeSP.2011.6088143. 
[15] T. H. Tichy and S. L. Steinbrunner. Tactile feedback for cursor 
control device. Patent Number: US6967643. Nov. 2005. 
[16] Xorg. 
Available 
at 
http://linux.die.net/man/1/xorg. 
[retrieved: 
December, 2012]. 
[17] Y. Rogers, H. Sharp, and J. Preece. Interaction Design – Beyond 
Human-Computer Interaction. 3rd Ed. John Wiley Professional, 2011.
 
262
Copyright (c) IARIA, 2013.     ISBN:  978-1-61208-250-9
ACHI 2013 : The Sixth International Conference on Advances in Computer-Human Interactions

